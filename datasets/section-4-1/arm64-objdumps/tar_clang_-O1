
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004040c8 <.init>:
  4040c8:	stp	x29, x30, [sp, #-16]!
  4040cc:	mov	x29, sp
  4040d0:	bl	404e80 <wcrtomb@plt+0x60>
  4040d4:	ldp	x29, x30, [sp], #16
  4040d8:	ret

Disassembly of section .plt:

00000000004040e0 <mbrtowc@plt-0x20>:
  4040e0:	stp	x16, x30, [sp, #-16]!
  4040e4:	adrp	x16, 46b000 <_obstack_memory_used@@Base+0x2cda0>
  4040e8:	ldr	x17, [x16, #4088]
  4040ec:	add	x16, x16, #0xff8
  4040f0:	br	x17
  4040f4:	nop
  4040f8:	nop
  4040fc:	nop

0000000000404100 <mbrtowc@plt>:
  404100:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404104:	ldr	x17, [x16]
  404108:	add	x16, x16, #0x0
  40410c:	br	x17

0000000000404110 <memcpy@plt>:
  404110:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404114:	ldr	x17, [x16, #8]
  404118:	add	x16, x16, #0x8
  40411c:	br	x17

0000000000404120 <memmove@plt>:
  404120:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404124:	ldr	x17, [x16, #16]
  404128:	add	x16, x16, #0x10
  40412c:	br	x17

0000000000404130 <_exit@plt>:
  404130:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404134:	ldr	x17, [x16, #24]
  404138:	add	x16, x16, #0x18
  40413c:	br	x17

0000000000404140 <getcwd@plt>:
  404140:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404144:	ldr	x17, [x16, #32]
  404148:	add	x16, x16, #0x20
  40414c:	br	x17

0000000000404150 <setuid@plt>:
  404150:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404154:	ldr	x17, [x16, #40]
  404158:	add	x16, x16, #0x28
  40415c:	br	x17

0000000000404160 <strtok@plt>:
  404160:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404164:	ldr	x17, [x16, #48]
  404168:	add	x16, x16, #0x30
  40416c:	br	x17

0000000000404170 <fwrite_unlocked@plt>:
  404170:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404174:	ldr	x17, [x16, #56]
  404178:	add	x16, x16, #0x38
  40417c:	br	x17

0000000000404180 <strtoul@plt>:
  404180:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404184:	ldr	x17, [x16, #64]
  404188:	add	x16, x16, #0x40
  40418c:	br	x17

0000000000404190 <strlen@plt>:
  404190:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404194:	ldr	x17, [x16, #72]
  404198:	add	x16, x16, #0x48
  40419c:	br	x17

00000000004041a0 <fputs@plt>:
  4041a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4041a4:	ldr	x17, [x16, #80]
  4041a8:	add	x16, x16, #0x50
  4041ac:	br	x17

00000000004041b0 <__sprintf_chk@plt>:
  4041b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4041b4:	ldr	x17, [x16, #88]
  4041b8:	add	x16, x16, #0x58
  4041bc:	br	x17

00000000004041c0 <exit@plt>:
  4041c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4041c4:	ldr	x17, [x16, #96]
  4041c8:	add	x16, x16, #0x60
  4041cc:	br	x17

00000000004041d0 <raise@plt>:
  4041d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4041d4:	ldr	x17, [x16, #104]
  4041d8:	add	x16, x16, #0x68
  4041dc:	br	x17

00000000004041e0 <dup@plt>:
  4041e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4041e4:	ldr	x17, [x16, #112]
  4041e8:	add	x16, x16, #0x70
  4041ec:	br	x17

00000000004041f0 <error@plt>:
  4041f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16, #120]
  4041f8:	add	x16, x16, #0x78
  4041fc:	br	x17

0000000000404200 <fchdir@plt>:
  404200:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #128]
  404208:	add	x16, x16, #0x80
  40420c:	br	x17

0000000000404210 <rpmatch@plt>:
  404210:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #136]
  404218:	add	x16, x16, #0x88
  40421c:	br	x17

0000000000404220 <execl@plt>:
  404220:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #144]
  404228:	add	x16, x16, #0x90
  40422c:	br	x17

0000000000404230 <flockfile@plt>:
  404230:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #152]
  404238:	add	x16, x16, #0x98
  40423c:	br	x17

0000000000404240 <strtoimax@plt>:
  404240:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #160]
  404248:	add	x16, x16, #0xa0
  40424c:	br	x17

0000000000404250 <wctype@plt>:
  404250:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #168]
  404258:	add	x16, x16, #0xa8
  40425c:	br	x17

0000000000404260 <sigprocmask@plt>:
  404260:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #176]
  404268:	add	x16, x16, #0xb0
  40426c:	br	x17

0000000000404270 <strnlen@plt>:
  404270:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #184]
  404278:	add	x16, x16, #0xb8
  40427c:	br	x17

0000000000404280 <geteuid@plt>:
  404280:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #192]
  404288:	add	x16, x16, #0xc0
  40428c:	br	x17

0000000000404290 <linkat@plt>:
  404290:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #200]
  404298:	add	x16, x16, #0xc8
  40429c:	br	x17

00000000004042a0 <localtime_r@plt>:
  4042a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #208]
  4042a8:	add	x16, x16, #0xd0
  4042ac:	br	x17

00000000004042b0 <setenv@plt>:
  4042b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #216]
  4042b8:	add	x16, x16, #0xd8
  4042bc:	br	x17

00000000004042c0 <getgrnam@plt>:
  4042c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #224]
  4042c8:	add	x16, x16, #0xe0
  4042cc:	br	x17

00000000004042d0 <ferror_unlocked@plt>:
  4042d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #232]
  4042d8:	add	x16, x16, #0xe8
  4042dc:	br	x17

00000000004042e0 <getuid@plt>:
  4042e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #240]
  4042e8:	add	x16, x16, #0xf0
  4042ec:	br	x17

00000000004042f0 <pipe@plt>:
  4042f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #248]
  4042f8:	add	x16, x16, #0xf8
  4042fc:	br	x17

0000000000404300 <opendir@plt>:
  404300:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #256]
  404308:	add	x16, x16, #0x100
  40430c:	br	x17

0000000000404310 <strftime@plt>:
  404310:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #264]
  404318:	add	x16, x16, #0x108
  40431c:	br	x17

0000000000404320 <unlinkat@plt>:
  404320:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #272]
  404328:	add	x16, x16, #0x110
  40432c:	br	x17

0000000000404330 <fputc@plt>:
  404330:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #280]
  404338:	add	x16, x16, #0x118
  40433c:	br	x17

0000000000404340 <iswcntrl@plt>:
  404340:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #288]
  404348:	add	x16, x16, #0x120
  40434c:	br	x17

0000000000404350 <clock_gettime@plt>:
  404350:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #296]
  404358:	add	x16, x16, #0x128
  40435c:	br	x17

0000000000404360 <qsort@plt>:
  404360:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #304]
  404368:	add	x16, x16, #0x130
  40436c:	br	x17

0000000000404370 <pathconf@plt>:
  404370:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #312]
  404378:	add	x16, x16, #0x138
  40437c:	br	x17

0000000000404380 <fork@plt>:
  404380:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #320]
  404388:	add	x16, x16, #0x140
  40438c:	br	x17

0000000000404390 <lseek@plt>:
  404390:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #328]
  404398:	add	x16, x16, #0x148
  40439c:	br	x17

00000000004043a0 <__fpending@plt>:
  4043a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #336]
  4043a8:	add	x16, x16, #0x150
  4043ac:	br	x17

00000000004043b0 <__ctype_tolower_loc@plt>:
  4043b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #344]
  4043b8:	add	x16, x16, #0x158
  4043bc:	br	x17

00000000004043c0 <gnu_dev_makedev@plt>:
  4043c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #352]
  4043c8:	add	x16, x16, #0x160
  4043cc:	br	x17

00000000004043d0 <localeconv@plt>:
  4043d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #360]
  4043d8:	add	x16, x16, #0x168
  4043dc:	br	x17

00000000004043e0 <stpcpy@plt>:
  4043e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #368]
  4043e8:	add	x16, x16, #0x170
  4043ec:	br	x17

00000000004043f0 <fileno@plt>:
  4043f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #376]
  4043f8:	add	x16, x16, #0x178
  4043fc:	br	x17

0000000000404400 <putc_unlocked@plt>:
  404400:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #384]
  404408:	add	x16, x16, #0x180
  40440c:	br	x17

0000000000404410 <localtime@plt>:
  404410:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #392]
  404418:	add	x16, x16, #0x188
  40441c:	br	x17

0000000000404420 <__memcpy_chk@plt>:
  404420:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #400]
  404428:	add	x16, x16, #0x190
  40442c:	br	x17

0000000000404430 <mkdirat@plt>:
  404430:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #408]
  404438:	add	x16, x16, #0x198
  40443c:	br	x17

0000000000404440 <signal@plt>:
  404440:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #416]
  404448:	add	x16, x16, #0x1a0
  40444c:	br	x17

0000000000404450 <acl_delete_def_file@plt>:
  404450:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #424]
  404458:	add	x16, x16, #0x1a8
  40445c:	br	x17

0000000000404460 <__snprintf_chk@plt>:
  404460:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #432]
  404468:	add	x16, x16, #0x1b0
  40446c:	br	x17

0000000000404470 <fclose@plt>:
  404470:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #440]
  404478:	add	x16, x16, #0x1b8
  40447c:	br	x17

0000000000404480 <fsync@plt>:
  404480:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #448]
  404488:	add	x16, x16, #0x1c0
  40448c:	br	x17

0000000000404490 <atoi@plt>:
  404490:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #456]
  404498:	add	x16, x16, #0x1c8
  40449c:	br	x17

00000000004044a0 <getpid@plt>:
  4044a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #464]
  4044a8:	add	x16, x16, #0x1d0
  4044ac:	br	x17

00000000004044b0 <nl_langinfo@plt>:
  4044b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #472]
  4044b8:	add	x16, x16, #0x1d8
  4044bc:	br	x17

00000000004044c0 <fopen@plt>:
  4044c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #480]
  4044c8:	add	x16, x16, #0x1e0
  4044cc:	br	x17

00000000004044d0 <__vsnprintf_chk@plt>:
  4044d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #488]
  4044d8:	add	x16, x16, #0x1e8
  4044dc:	br	x17

00000000004044e0 <iswctype@plt>:
  4044e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #496]
  4044e8:	add	x16, x16, #0x1f0
  4044ec:	br	x17

00000000004044f0 <malloc@plt>:
  4044f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #504]
  4044f8:	add	x16, x16, #0x1f8
  4044fc:	br	x17

0000000000404500 <toupper@plt>:
  404500:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #512]
  404508:	add	x16, x16, #0x200
  40450c:	br	x17

0000000000404510 <wcwidth@plt>:
  404510:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #520]
  404518:	add	x16, x16, #0x208
  40451c:	br	x17

0000000000404520 <funlockfile@plt>:
  404520:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #528]
  404528:	add	x16, x16, #0x210
  40452c:	br	x17

0000000000404530 <open@plt>:
  404530:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #536]
  404538:	add	x16, x16, #0x218
  40453c:	br	x17

0000000000404540 <__vasprintf_chk@plt>:
  404540:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #544]
  404548:	add	x16, x16, #0x220
  40454c:	br	x17

0000000000404550 <tzset@plt>:
  404550:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #552]
  404558:	add	x16, x16, #0x228
  40455c:	br	x17

0000000000404560 <__strcpy_chk@plt>:
  404560:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #560]
  404568:	add	x16, x16, #0x230
  40456c:	br	x17

0000000000404570 <__isoc99_fscanf@plt>:
  404570:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #568]
  404578:	add	x16, x16, #0x238
  40457c:	br	x17

0000000000404580 <sigemptyset@plt>:
  404580:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #576]
  404588:	add	x16, x16, #0x240
  40458c:	br	x17

0000000000404590 <futimens@plt>:
  404590:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #584]
  404598:	add	x16, x16, #0x248
  40459c:	br	x17

00000000004045a0 <strncmp@plt>:
  4045a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #592]
  4045a8:	add	x16, x16, #0x250
  4045ac:	br	x17

00000000004045b0 <bindtextdomain@plt>:
  4045b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #600]
  4045b8:	add	x16, x16, #0x258
  4045bc:	br	x17

00000000004045c0 <__libc_start_main@plt>:
  4045c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #608]
  4045c8:	add	x16, x16, #0x260
  4045cc:	br	x17

00000000004045d0 <setxattr@plt>:
  4045d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #616]
  4045d8:	add	x16, x16, #0x268
  4045dc:	br	x17

00000000004045e0 <strcat@plt>:
  4045e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #624]
  4045e8:	add	x16, x16, #0x270
  4045ec:	br	x17

00000000004045f0 <__printf_chk@plt>:
  4045f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #632]
  4045f8:	add	x16, x16, #0x278
  4045fc:	br	x17

0000000000404600 <memset@plt>:
  404600:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #640]
  404608:	add	x16, x16, #0x280
  40460c:	br	x17

0000000000404610 <fdopen@plt>:
  404610:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #648]
  404618:	add	x16, x16, #0x288
  40461c:	br	x17

0000000000404620 <gettimeofday@plt>:
  404620:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #656]
  404628:	add	x16, x16, #0x290
  40462c:	br	x17

0000000000404630 <getpwnam@plt>:
  404630:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #664]
  404638:	add	x16, x16, #0x298
  40463c:	br	x17

0000000000404640 <gmtime_r@plt>:
  404640:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #672]
  404648:	add	x16, x16, #0x2a0
  40464c:	br	x17

0000000000404650 <sleep@plt>:
  404650:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #680]
  404658:	add	x16, x16, #0x2a8
  40465c:	br	x17

0000000000404660 <fchmod@plt>:
  404660:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #688]
  404668:	add	x16, x16, #0x2b0
  40466c:	br	x17

0000000000404670 <__xmknodat@plt>:
  404670:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #696]
  404678:	add	x16, x16, #0x2b8
  40467c:	br	x17

0000000000404680 <strerror_r@plt>:
  404680:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #704]
  404688:	add	x16, x16, #0x2c0
  40468c:	br	x17

0000000000404690 <__vfprintf_chk@plt>:
  404690:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #712]
  404698:	add	x16, x16, #0x2c8
  40469c:	br	x17

00000000004046a0 <calloc@plt>:
  4046a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #720]
  4046a8:	add	x16, x16, #0x2d0
  4046ac:	br	x17

00000000004046b0 <lsetxattr@plt>:
  4046b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #728]
  4046b8:	add	x16, x16, #0x2d8
  4046bc:	br	x17

00000000004046c0 <listxattr@plt>:
  4046c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #736]
  4046c8:	add	x16, x16, #0x2e0
  4046cc:	br	x17

00000000004046d0 <bcmp@plt>:
  4046d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #744]
  4046d8:	add	x16, x16, #0x2e8
  4046dc:	br	x17

00000000004046e0 <bsearch@plt>:
  4046e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #752]
  4046e8:	add	x16, x16, #0x2f0
  4046ec:	br	x17

00000000004046f0 <execv@plt>:
  4046f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #760]
  4046f8:	add	x16, x16, #0x2f8
  4046fc:	br	x17

0000000000404700 <strcasecmp@plt>:
  404700:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #768]
  404708:	add	x16, x16, #0x300
  40470c:	br	x17

0000000000404710 <gmtime@plt>:
  404710:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #776]
  404718:	add	x16, x16, #0x308
  40471c:	br	x17

0000000000404720 <readdir@plt>:
  404720:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #784]
  404728:	add	x16, x16, #0x310
  40472c:	br	x17

0000000000404730 <realloc@plt>:
  404730:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #792]
  404738:	add	x16, x16, #0x318
  40473c:	br	x17

0000000000404740 <__ctype_toupper_loc@plt>:
  404740:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #800]
  404748:	add	x16, x16, #0x320
  40474c:	br	x17

0000000000404750 <acl_set_file@plt>:
  404750:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #808]
  404758:	add	x16, x16, #0x328
  40475c:	br	x17

0000000000404760 <getpagesize@plt>:
  404760:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #816]
  404768:	add	x16, x16, #0x330
  40476c:	br	x17

0000000000404770 <lgetxattr@plt>:
  404770:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #824]
  404778:	add	x16, x16, #0x338
  40477c:	br	x17

0000000000404780 <strdup@plt>:
  404780:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #832]
  404788:	add	x16, x16, #0x340
  40478c:	br	x17

0000000000404790 <closedir@plt>:
  404790:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #840]
  404798:	add	x16, x16, #0x348
  40479c:	br	x17

00000000004047a0 <getc_unlocked@plt>:
  4047a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #848]
  4047a8:	add	x16, x16, #0x350
  4047ac:	br	x17

00000000004047b0 <strerror@plt>:
  4047b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #856]
  4047b8:	add	x16, x16, #0x358
  4047bc:	br	x17

00000000004047c0 <close@plt>:
  4047c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #864]
  4047c8:	add	x16, x16, #0x360
  4047cc:	br	x17

00000000004047d0 <strrchr@plt>:
  4047d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #872]
  4047d8:	add	x16, x16, #0x368
  4047dc:	br	x17

00000000004047e0 <acl_to_text@plt>:
  4047e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #880]
  4047e8:	add	x16, x16, #0x370
  4047ec:	br	x17

00000000004047f0 <atol@plt>:
  4047f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #888]
  4047f8:	add	x16, x16, #0x378
  4047fc:	br	x17

0000000000404800 <__gmon_start__@plt>:
  404800:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #896]
  404808:	add	x16, x16, #0x380
  40480c:	br	x17

0000000000404810 <mktime@plt>:
  404810:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #904]
  404818:	add	x16, x16, #0x388
  40481c:	br	x17

0000000000404820 <fdopendir@plt>:
  404820:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #912]
  404828:	add	x16, x16, #0x390
  40482c:	br	x17

0000000000404830 <write@plt>:
  404830:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #920]
  404838:	add	x16, x16, #0x398
  40483c:	br	x17

0000000000404840 <strtoumax@plt>:
  404840:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #928]
  404848:	add	x16, x16, #0x3a0
  40484c:	br	x17

0000000000404850 <btowc@plt>:
  404850:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #936]
  404858:	add	x16, x16, #0x3a8
  40485c:	br	x17

0000000000404860 <mkdtemp@plt>:
  404860:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #944]
  404868:	add	x16, x16, #0x3b0
  40486c:	br	x17

0000000000404870 <abort@plt>:
  404870:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #952]
  404878:	add	x16, x16, #0x3b8
  40487c:	br	x17

0000000000404880 <setgid@plt>:
  404880:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #960]
  404888:	add	x16, x16, #0x3c0
  40488c:	br	x17

0000000000404890 <mbsinit@plt>:
  404890:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #968]
  404898:	add	x16, x16, #0x3c8
  40489c:	br	x17

00000000004048a0 <access@plt>:
  4048a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #976]
  4048a8:	add	x16, x16, #0x3d0
  4048ac:	br	x17

00000000004048b0 <gnu_dev_major@plt>:
  4048b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #984]
  4048b8:	add	x16, x16, #0x3d8
  4048bc:	br	x17

00000000004048c0 <fpathconf@plt>:
  4048c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #992]
  4048c8:	add	x16, x16, #0x3e0
  4048cc:	br	x17

00000000004048d0 <getxattr@plt>:
  4048d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #1000]
  4048d8:	add	x16, x16, #0x3e8
  4048dc:	br	x17

00000000004048e0 <memcmp@plt>:
  4048e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #1008]
  4048e8:	add	x16, x16, #0x3f0
  4048ec:	br	x17

00000000004048f0 <textdomain@plt>:
  4048f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #1016]
  4048f8:	add	x16, x16, #0x3f8
  4048fc:	br	x17

0000000000404900 <execvp@plt>:
  404900:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #1024]
  404908:	add	x16, x16, #0x400
  40490c:	br	x17

0000000000404910 <__fprintf_chk@plt>:
  404910:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #1032]
  404918:	add	x16, x16, #0x408
  40491c:	br	x17

0000000000404920 <strcmp@plt>:
  404920:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #1040]
  404928:	add	x16, x16, #0x410
  40492c:	br	x17

0000000000404930 <getpwuid@plt>:
  404930:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #1048]
  404938:	add	x16, x16, #0x418
  40493c:	br	x17

0000000000404940 <iconv@plt>:
  404940:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #1056]
  404948:	add	x16, x16, #0x420
  40494c:	br	x17

0000000000404950 <__ctype_b_loc@plt>:
  404950:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #1064]
  404958:	add	x16, x16, #0x428
  40495c:	br	x17

0000000000404960 <rewinddir@plt>:
  404960:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #1072]
  404968:	add	x16, x16, #0x430
  40496c:	br	x17

0000000000404970 <acl_get_file@plt>:
  404970:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #1080]
  404978:	add	x16, x16, #0x438
  40497c:	br	x17

0000000000404980 <strtol@plt>:
  404980:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #1088]
  404988:	add	x16, x16, #0x440
  40498c:	br	x17

0000000000404990 <fseeko@plt>:
  404990:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #1096]
  404998:	add	x16, x16, #0x448
  40499c:	br	x17

00000000004049a0 <getline@plt>:
  4049a0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #1104]
  4049a8:	add	x16, x16, #0x450
  4049ac:	br	x17

00000000004049b0 <sigwait@plt>:
  4049b0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #1112]
  4049b8:	add	x16, x16, #0x458
  4049bc:	br	x17

00000000004049c0 <chdir@plt>:
  4049c0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1120]
  4049c8:	add	x16, x16, #0x460
  4049cc:	br	x17

00000000004049d0 <free@plt>:
  4049d0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1128]
  4049d8:	add	x16, x16, #0x468
  4049dc:	br	x17

00000000004049e0 <__strcat_chk@plt>:
  4049e0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1136]
  4049e8:	add	x16, x16, #0x470
  4049ec:	br	x17

00000000004049f0 <renameat2@plt>:
  4049f0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1144]
  4049f8:	add	x16, x16, #0x478
  4049fc:	br	x17

0000000000404a00 <__ctype_get_mb_cur_max@plt>:
  404a00:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1152]
  404a08:	add	x16, x16, #0x480
  404a0c:	br	x17

0000000000404a10 <getgid@plt>:
  404a10:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1160]
  404a18:	add	x16, x16, #0x488
  404a1c:	br	x17

0000000000404a20 <renameat@plt>:
  404a20:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1168]
  404a28:	add	x16, x16, #0x490
  404a2c:	br	x17

0000000000404a30 <fgetxattr@plt>:
  404a30:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1176]
  404a38:	add	x16, x16, #0x498
  404a3c:	br	x17

0000000000404a40 <fchownat@plt>:
  404a40:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1184]
  404a48:	add	x16, x16, #0x4a0
  404a4c:	br	x17

0000000000404a50 <strndup@plt>:
  404a50:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1192]
  404a58:	add	x16, x16, #0x4a8
  404a5c:	br	x17

0000000000404a60 <strspn@plt>:
  404a60:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1200]
  404a68:	add	x16, x16, #0x4b0
  404a6c:	br	x17

0000000000404a70 <strchr@plt>:
  404a70:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1208]
  404a78:	add	x16, x16, #0x4b8
  404a7c:	br	x17

0000000000404a80 <globfree@plt>:
  404a80:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1216]
  404a88:	add	x16, x16, #0x4c0
  404a8c:	br	x17

0000000000404a90 <memrchr@plt>:
  404a90:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1224]
  404a98:	add	x16, x16, #0x4c8
  404a9c:	br	x17

0000000000404aa0 <utimensat@plt>:
  404aa0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1232]
  404aa8:	add	x16, x16, #0x4d0
  404aac:	br	x17

0000000000404ab0 <fwrite@plt>:
  404ab0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1240]
  404ab8:	add	x16, x16, #0x4d8
  404abc:	br	x17

0000000000404ac0 <fnmatch@plt>:
  404ac0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1248]
  404ac8:	add	x16, x16, #0x4e0
  404acc:	br	x17

0000000000404ad0 <fflush_unlocked@plt>:
  404ad0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1256]
  404ad8:	add	x16, x16, #0x4e8
  404adc:	br	x17

0000000000404ae0 <fcntl@plt>:
  404ae0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1264]
  404ae8:	add	x16, x16, #0x4f0
  404aec:	br	x17

0000000000404af0 <dcngettext@plt>:
  404af0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1272]
  404af8:	add	x16, x16, #0x4f8
  404afc:	br	x17

0000000000404b00 <ftello@plt>:
  404b00:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b04:	ldr	x17, [x16, #1280]
  404b08:	add	x16, x16, #0x500
  404b0c:	br	x17

0000000000404b10 <gnu_dev_minor@plt>:
  404b10:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b14:	ldr	x17, [x16, #1288]
  404b18:	add	x16, x16, #0x508
  404b1c:	br	x17

0000000000404b20 <strcpy@plt>:
  404b20:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b24:	ldr	x17, [x16, #1296]
  404b28:	add	x16, x16, #0x510
  404b2c:	br	x17

0000000000404b30 <dirfd@plt>:
  404b30:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b34:	ldr	x17, [x16, #1304]
  404b38:	add	x16, x16, #0x518
  404b3c:	br	x17

0000000000404b40 <unsetenv@plt>:
  404b40:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #1312]
  404b48:	add	x16, x16, #0x520
  404b4c:	br	x17

0000000000404b50 <iconv_open@plt>:
  404b50:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #1320]
  404b58:	add	x16, x16, #0x528
  404b5c:	br	x17

0000000000404b60 <read@plt>:
  404b60:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #1328]
  404b68:	add	x16, x16, #0x530
  404b6c:	br	x17

0000000000404b70 <memchr@plt>:
  404b70:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #1336]
  404b78:	add	x16, x16, #0x538
  404b7c:	br	x17

0000000000404b80 <isatty@plt>:
  404b80:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #1344]
  404b88:	add	x16, x16, #0x540
  404b8c:	br	x17

0000000000404b90 <fputc_unlocked@plt>:
  404b90:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #1352]
  404b98:	add	x16, x16, #0x548
  404b9c:	br	x17

0000000000404ba0 <__mempcpy_chk@plt>:
  404ba0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #1360]
  404ba8:	add	x16, x16, #0x550
  404bac:	br	x17

0000000000404bb0 <flistxattr@plt>:
  404bb0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #1368]
  404bb8:	add	x16, x16, #0x558
  404bbc:	br	x17

0000000000404bc0 <iswalnum@plt>:
  404bc0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #1376]
  404bc8:	add	x16, x16, #0x560
  404bcc:	br	x17

0000000000404bd0 <__fxstat@plt>:
  404bd0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #1384]
  404bd8:	add	x16, x16, #0x568
  404bdc:	br	x17

0000000000404be0 <strchrnul@plt>:
  404be0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #1392]
  404be8:	add	x16, x16, #0x570
  404bec:	br	x17

0000000000404bf0 <dcgettext@plt>:
  404bf0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #1400]
  404bf8:	add	x16, x16, #0x578
  404bfc:	br	x17

0000000000404c00 <mkfifoat@plt>:
  404c00:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #1408]
  404c08:	add	x16, x16, #0x580
  404c0c:	br	x17

0000000000404c10 <fputs_unlocked@plt>:
  404c10:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #1416]
  404c18:	add	x16, x16, #0x588
  404c1c:	br	x17

0000000000404c20 <acl_from_text@plt>:
  404c20:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #1424]
  404c28:	add	x16, x16, #0x590
  404c2c:	br	x17

0000000000404c30 <glob@plt>:
  404c30:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #1432]
  404c38:	add	x16, x16, #0x598
  404c3c:	br	x17

0000000000404c40 <ftruncate@plt>:
  404c40:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #1440]
  404c48:	add	x16, x16, #0x5a0
  404c4c:	br	x17

0000000000404c50 <llistxattr@plt>:
  404c50:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #1448]
  404c58:	add	x16, x16, #0x5a8
  404c5c:	br	x17

0000000000404c60 <dup2@plt>:
  404c60:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #1456]
  404c68:	add	x16, x16, #0x5b0
  404c6c:	br	x17

0000000000404c70 <symlinkat@plt>:
  404c70:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #1464]
  404c78:	add	x16, x16, #0x5b8
  404c7c:	br	x17

0000000000404c80 <sigaddset@plt>:
  404c80:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #1472]
  404c88:	add	x16, x16, #0x5c0
  404c8c:	br	x17

0000000000404c90 <towupper@plt>:
  404c90:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #1480]
  404c98:	add	x16, x16, #0x5c8
  404c9c:	br	x17

0000000000404ca0 <iswprint@plt>:
  404ca0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #1488]
  404ca8:	add	x16, x16, #0x5d0
  404cac:	br	x17

0000000000404cb0 <umask@plt>:
  404cb0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #1496]
  404cb8:	add	x16, x16, #0x5d8
  404cbc:	br	x17

0000000000404cc0 <strcspn@plt>:
  404cc0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #1504]
  404cc8:	add	x16, x16, #0x5e0
  404ccc:	br	x17

0000000000404cd0 <faccessat@plt>:
  404cd0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #1512]
  404cd8:	add	x16, x16, #0x5e8
  404cdc:	br	x17

0000000000404ce0 <openat@plt>:
  404ce0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #1520]
  404ce8:	add	x16, x16, #0x5f0
  404cec:	br	x17

0000000000404cf0 <__assert_fail@plt>:
  404cf0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #1528]
  404cf8:	add	x16, x16, #0x5f8
  404cfc:	br	x17

0000000000404d00 <__errno_location@plt>:
  404d00:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #1536]
  404d08:	add	x16, x16, #0x600
  404d0c:	br	x17

0000000000404d10 <tolower@plt>:
  404d10:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #1544]
  404d18:	add	x16, x16, #0x608
  404d1c:	br	x17

0000000000404d20 <execlp@plt>:
  404d20:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #1552]
  404d28:	add	x16, x16, #0x610
  404d2c:	br	x17

0000000000404d30 <getenv@plt>:
  404d30:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #1560]
  404d38:	add	x16, x16, #0x618
  404d3c:	br	x17

0000000000404d40 <__xstat@plt>:
  404d40:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #1568]
  404d48:	add	x16, x16, #0x620
  404d4c:	br	x17

0000000000404d50 <getgrgid@plt>:
  404d50:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #1576]
  404d58:	add	x16, x16, #0x628
  404d5c:	br	x17

0000000000404d60 <fchmodat@plt>:
  404d60:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #1584]
  404d68:	add	x16, x16, #0x630
  404d6c:	br	x17

0000000000404d70 <timegm@plt>:
  404d70:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #1592]
  404d78:	add	x16, x16, #0x638
  404d7c:	br	x17

0000000000404d80 <waitpid@plt>:
  404d80:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #1600]
  404d88:	add	x16, x16, #0x640
  404d8c:	br	x17

0000000000404d90 <fchown@plt>:
  404d90:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #1608]
  404d98:	add	x16, x16, #0x648
  404d9c:	br	x17

0000000000404da0 <towlower@plt>:
  404da0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #1616]
  404da8:	add	x16, x16, #0x650
  404dac:	br	x17

0000000000404db0 <creat@plt>:
  404db0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #1624]
  404db8:	add	x16, x16, #0x658
  404dbc:	br	x17

0000000000404dc0 <gethostbyname@plt>:
  404dc0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #1632]
  404dc8:	add	x16, x16, #0x660
  404dcc:	br	x17

0000000000404dd0 <ioctl@plt>:
  404dd0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #1640]
  404dd8:	add	x16, x16, #0x668
  404ddc:	br	x17

0000000000404de0 <setlocale@plt>:
  404de0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #1648]
  404de8:	add	x16, x16, #0x670
  404dec:	br	x17

0000000000404df0 <acl_free@plt>:
  404df0:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #1656]
  404df8:	add	x16, x16, #0x678
  404dfc:	br	x17

0000000000404e00 <__fxstatat@plt>:
  404e00:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #1664]
  404e08:	add	x16, x16, #0x680
  404e0c:	br	x17

0000000000404e10 <readlinkat@plt>:
  404e10:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #1672]
  404e18:	add	x16, x16, #0x688
  404e1c:	br	x17

0000000000404e20 <wcrtomb@plt>:
  404e20:	adrp	x16, 46c000 <mbrtowc@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #1680]
  404e28:	add	x16, x16, #0x690
  404e2c:	br	x17

Disassembly of section .text:

0000000000404e30 <argp_help@@Base-0x2979c>:
  404e30:	mov	x29, #0x0                   	// #0
  404e34:	mov	x30, #0x0                   	// #0
  404e38:	mov	x5, x0
  404e3c:	ldr	x1, [sp]
  404e40:	add	x2, sp, #0x8
  404e44:	mov	x6, sp
  404e48:	movz	x0, #0x0, lsl #48
  404e4c:	movk	x0, #0x0, lsl #32
  404e50:	movk	x0, #0x42, lsl #16
  404e54:	movk	x0, #0x14dc
  404e58:	movz	x3, #0x0, lsl #48
  404e5c:	movk	x3, #0x0, lsl #32
  404e60:	movk	x3, #0x45, lsl #16
  404e64:	movk	x3, #0x18
  404e68:	movz	x4, #0x0, lsl #48
  404e6c:	movk	x4, #0x0, lsl #32
  404e70:	movk	x4, #0x45, lsl #16
  404e74:	movk	x4, #0x98
  404e78:	bl	4045c0 <__libc_start_main@plt>
  404e7c:	bl	404870 <abort@plt>
  404e80:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x2cda0>
  404e84:	ldr	x0, [x0, #4064]
  404e88:	cbz	x0, 404e90 <wcrtomb@plt+0x70>
  404e8c:	b	404800 <__gmon_start__@plt>
  404e90:	ret
  404e94:	nop
  404e98:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404e9c:	add	x0, x0, #0x468
  404ea0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404ea4:	add	x1, x1, #0x468
  404ea8:	cmp	x1, x0
  404eac:	b.eq	404ec4 <wcrtomb@plt+0xa4>  // b.none
  404eb0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  404eb4:	ldr	x1, [x1, #312]
  404eb8:	cbz	x1, 404ec4 <wcrtomb@plt+0xa4>
  404ebc:	mov	x16, x1
  404ec0:	br	x16
  404ec4:	ret
  404ec8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404ecc:	add	x0, x0, #0x468
  404ed0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404ed4:	add	x1, x1, #0x468
  404ed8:	sub	x1, x1, x0
  404edc:	lsr	x2, x1, #63
  404ee0:	add	x1, x2, x1, asr #3
  404ee4:	cmp	xzr, x1, asr #1
  404ee8:	asr	x1, x1, #1
  404eec:	b.eq	404f04 <wcrtomb@plt+0xe4>  // b.none
  404ef0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  404ef4:	ldr	x2, [x2, #320]
  404ef8:	cbz	x2, 404f04 <wcrtomb@plt+0xe4>
  404efc:	mov	x16, x2
  404f00:	br	x16
  404f04:	ret
  404f08:	stp	x29, x30, [sp, #-32]!
  404f0c:	mov	x29, sp
  404f10:	str	x19, [sp, #16]
  404f14:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404f18:	ldrb	w0, [x19, #1176]
  404f1c:	cbnz	w0, 404f2c <wcrtomb@plt+0x10c>
  404f20:	bl	404e98 <wcrtomb@plt+0x78>
  404f24:	mov	w0, #0x1                   	// #1
  404f28:	strb	w0, [x19, #1176]
  404f2c:	ldr	x19, [sp, #16]
  404f30:	ldp	x29, x30, [sp], #32
  404f34:	ret
  404f38:	b	404ec8 <wcrtomb@plt+0xa8>
  404f3c:	stp	x29, x30, [sp, #-48]!
  404f40:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  404f44:	ldrb	w8, [x8, #76]
  404f48:	stp	x22, x21, [sp, #16]
  404f4c:	stp	x20, x19, [sp, #32]
  404f50:	mov	x29, sp
  404f54:	cbz	w8, 404fbc <wcrtomb@plt+0x19c>
  404f58:	mov	x21, x0
  404f5c:	mov	w0, #0x30                  	// #48
  404f60:	mov	x19, x2
  404f64:	mov	x20, x1
  404f68:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  404f6c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404f70:	ldr	x9, [x8, #1184]
  404f74:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404f78:	add	x10, x10, #0x4a8
  404f7c:	mov	x22, x0
  404f80:	cmp	x9, #0x0
  404f84:	csel	x9, x10, x9, eq  // eq = none
  404f88:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404f8c:	str	x0, [x9]
  404f90:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404f94:	ldr	x10, [x10, #4008]
  404f98:	ldr	x9, [x9, #3984]
  404f9c:	str	x0, [x8, #1184]
  404fa0:	sub	x8, x10, x9
  404fa4:	asr	x8, x8, #9
  404fa8:	stp	xzr, x8, [x0]
  404fac:	mov	x0, x21
  404fb0:	bl	43d39c <argp_usage@@Base+0xb7a0>
  404fb4:	stp	x0, x20, [x22, #16]
  404fb8:	stp	x19, xzr, [x22, #32]
  404fbc:	ldp	x20, x19, [sp, #32]
  404fc0:	ldp	x22, x21, [sp, #16]
  404fc4:	ldp	x29, x30, [sp], #48
  404fc8:	ret
  404fcc:	stp	x29, x30, [sp, #-16]!
  404fd0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  404fd4:	add	x0, x0, #0x608
  404fd8:	mov	x29, sp
  404fdc:	bl	411814 <wcrtomb@plt+0xc9f4>
  404fe0:	ldp	x29, x30, [sp], #16
  404fe4:	ret
  404fe8:	stp	x29, x30, [sp, #-16]!
  404fec:	ldr	x8, [x0]
  404ff0:	ldr	x1, [x0, #136]
  404ff4:	mov	x29, sp
  404ff8:	mov	x0, x8
  404ffc:	mov	x2, x1
  405000:	bl	404f3c <wcrtomb@plt+0x11c>
  405004:	ldp	x29, x30, [sp], #16
  405008:	ret
  40500c:	stp	x29, x30, [sp, #-16]!
  405010:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405014:	ldrb	w8, [x8, #76]
  405018:	mov	x29, sp
  40501c:	cbz	w8, 405028 <wcrtomb@plt+0x208>
  405020:	mov	x0, xzr
  405024:	bl	405030 <wcrtomb@plt+0x210>
  405028:	ldp	x29, x30, [sp], #16
  40502c:	ret
  405030:	stp	x29, x30, [sp, #-48]!
  405034:	stp	x22, x21, [sp, #16]
  405038:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40503c:	ldr	x22, [x21, #1192]
  405040:	stp	x20, x19, [sp, #32]
  405044:	mov	x29, sp
  405048:	cmp	x22, #0x0
  40504c:	cset	w8, ne  // ne = any
  405050:	cbz	x22, 405084 <wcrtomb@plt+0x264>
  405054:	mov	x19, x0
  405058:	cmp	x22, x19
  40505c:	b.eq	405084 <wcrtomb@plt+0x264>  // b.none
  405060:	mov	x20, x22
  405064:	ldr	x0, [x20, #16]
  405068:	ldr	x22, [x22]
  40506c:	bl	4049d0 <free@plt>
  405070:	mov	x0, x20
  405074:	bl	4049d0 <free@plt>
  405078:	cmp	x22, #0x0
  40507c:	cset	w8, ne  // ne = any
  405080:	cbnz	x22, 405058 <wcrtomb@plt+0x238>
  405084:	str	x22, [x21, #1192]
  405088:	tbnz	w8, #0, 405094 <wcrtomb@plt+0x274>
  40508c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405090:	str	xzr, [x8, #1184]
  405094:	ldp	x20, x19, [sp, #32]
  405098:	ldp	x22, x21, [sp, #16]
  40509c:	ldp	x29, x30, [sp], #48
  4050a0:	ret
  4050a4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4050a8:	ldr	x8, [x8, #1192]
  4050ac:	cbz	x8, 4050b4 <wcrtomb@plt+0x294>
  4050b0:	str	x0, [x8, #32]
  4050b4:	ret
  4050b8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4050bc:	str	wzr, [x8, #1624]
  4050c0:	ret
  4050c4:	stp	x29, x30, [sp, #-32]!
  4050c8:	str	x19, [sp, #16]
  4050cc:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  4050d0:	add	x19, x19, #0x2c8
  4050d4:	mov	x0, x19
  4050d8:	mov	x29, sp
  4050dc:	bl	434c7c <argp_usage@@Base+0x3080>
  4050e0:	ldr	q0, [x19]
  4050e4:	ldr	x19, [sp, #16]
  4050e8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4050ec:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4050f0:	add	x8, x8, #0x3a8
  4050f4:	add	x9, x9, #0x360
  4050f8:	str	q0, [x8]
  4050fc:	str	q0, [x9]
  405100:	ldp	x29, x30, [sp], #32
  405104:	ret
  405108:	sub	sp, sp, #0x30
  40510c:	mov	x0, sp
  405110:	stp	x29, x30, [sp, #16]
  405114:	str	x19, [sp, #32]
  405118:	add	x29, sp, #0x10
  40511c:	bl	434c7c <argp_usage@@Base+0x3080>
  405120:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  405124:	add	x0, x0, #0x360
  405128:	ldp	x8, x9, [sp]
  40512c:	ldp	x10, x11, [x0]
  405130:	mov	x12, #0xcd6500000000        	// #225833675390976
  405134:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405138:	movk	x12, #0x41cd, lsl #48
  40513c:	sub	x9, x9, x11
  405140:	ldr	d2, [x19, #1632]
  405144:	fmov	d0, x12
  405148:	sub	x8, x8, x10
  40514c:	scvtf	d1, x9
  405150:	fdiv	d0, d1, d0
  405154:	scvtf	d1, x8
  405158:	fadd	d0, d0, d1
  40515c:	fadd	d0, d2, d0
  405160:	str	d0, [x19, #1632]
  405164:	bl	434c7c <argp_usage@@Base+0x3080>
  405168:	ldr	d0, [x19, #1632]
  40516c:	ldr	x19, [sp, #32]
  405170:	ldp	x29, x30, [sp, #16]
  405174:	add	sp, sp, #0x30
  405178:	ret
  40517c:	stp	x29, x30, [sp, #-16]!
  405180:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405184:	ldr	x8, [x8, #904]
  405188:	mov	x29, sp
  40518c:	cbnz	x8, 4051b8 <wcrtomb@plt+0x398>
  405190:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405194:	mov	x1, x0
  405198:	ldr	w0, [x8, #1640]
  40519c:	cbz	w0, 4051b4 <wcrtomb@plt+0x394>
  4051a0:	str	wzr, [x1]
  4051a4:	bl	4051c4 <wcrtomb@plt+0x3a4>
  4051a8:	cbz	x0, 4051b4 <wcrtomb@plt+0x394>
  4051ac:	ldr	x8, [x0, #8]
  4051b0:	b	4051b8 <wcrtomb@plt+0x398>
  4051b4:	mov	x8, xzr
  4051b8:	mov	x0, x8
  4051bc:	ldp	x29, x30, [sp], #16
  4051c0:	ret
  4051c4:	ldrsw	x9, [x1]
  4051c8:	adrp	x11, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  4051cc:	mov	w10, #0x18                  	// #24
  4051d0:	add	x11, x11, #0x6b0
  4051d4:	madd	x10, x9, x10, x11
  4051d8:	mov	w8, w0
  4051dc:	sub	x0, x10, #0x18
  4051e0:	ldr	w10, [x0, #24]
  4051e4:	cbz	w10, 405200 <wcrtomb@plt+0x3e0>
  4051e8:	add	w9, w9, #0x1
  4051ec:	cmp	w10, w8
  4051f0:	add	x0, x0, #0x18
  4051f4:	b.ne	4051e0 <wcrtomb@plt+0x3c0>  // b.any
  4051f8:	str	w9, [x1]
  4051fc:	ret
  405200:	mov	x0, xzr
  405204:	str	w9, [x1]
  405208:	ret
  40520c:	stp	x29, x30, [sp, #-16]!
  405210:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405214:	ldr	x8, [x8, #904]
  405218:	mov	x29, sp
  40521c:	cbz	x8, 40522c <wcrtomb@plt+0x40c>
  405220:	mov	x0, xzr
  405224:	ldp	x29, x30, [sp], #16
  405228:	ret
  40522c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405230:	mov	x1, x0
  405234:	ldr	w0, [x8, #1640]
  405238:	bl	4051c4 <wcrtomb@plt+0x3a4>
  40523c:	cbz	x0, 405244 <wcrtomb@plt+0x424>
  405240:	ldr	x0, [x0, #8]
  405244:	ldp	x29, x30, [sp], #16
  405248:	ret
  40524c:	sub	sp, sp, #0x80
  405250:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405254:	ldr	w8, [x8, #860]
  405258:	stp	x29, x30, [sp, #32]
  40525c:	stp	x28, x27, [sp, #48]
  405260:	stp	x26, x25, [sp, #64]
  405264:	cmp	w8, #0x8
  405268:	stp	x24, x23, [sp, #80]
  40526c:	stp	x22, x21, [sp, #96]
  405270:	stp	x20, x19, [sp, #112]
  405274:	add	x29, sp, #0x20
  405278:	b.hi	40543c <wcrtomb@plt+0x61c>  // b.pmore
  40527c:	mov	w9, #0x1                   	// #1
  405280:	lsl	w9, w9, w8
  405284:	mov	w10, #0x10e                 	// #270
  405288:	mov	w19, w3
  40528c:	mov	x21, x1
  405290:	mov	x20, x0
  405294:	tst	w9, w10
  405298:	b.eq	4052b8 <wcrtomb@plt+0x498>  // b.none
  40529c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4052a0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4052a4:	ldr	d0, [x8, #1648]
  4052a8:	ldr	d1, [x9, #1656]
  4052ac:	ldr	x1, [x21, #8]
  4052b0:	fadd	d0, d0, d1
  4052b4:	b	4052ec <wcrtomb@plt+0x4cc>
  4052b8:	tst	w9, #0xe0
  4052bc:	b.eq	405330 <wcrtomb@plt+0x510>  // b.none
  4052c0:	ldr	x1, [x21]
  4052c4:	mov	w2, #0x5                   	// #5
  4052c8:	mov	x0, xzr
  4052cc:	bl	404bf0 <dcgettext@plt>
  4052d0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4052d4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4052d8:	ldr	x8, [x8, #3936]
  4052dc:	ldr	x9, [x9, #920]
  4052e0:	mov	x1, x0
  4052e4:	mul	x8, x9, x8
  4052e8:	ucvtf	d0, x8
  4052ec:	mov	x0, x20
  4052f0:	bl	405440 <wcrtomb@plt+0x620>
  4052f4:	mov	w21, w0
  4052f8:	cbz	w19, 40530c <wcrtomb@plt+0x4ec>
  4052fc:	mov	w0, w19
  405300:	mov	x1, x20
  405304:	bl	404b90 <fputc_unlocked@plt>
  405308:	add	w21, w21, #0x1
  40530c:	mov	w0, w21
  405310:	ldp	x20, x19, [sp, #112]
  405314:	ldp	x22, x21, [sp, #96]
  405318:	ldp	x24, x23, [sp, #80]
  40531c:	ldp	x26, x25, [sp, #64]
  405320:	ldp	x28, x27, [sp, #48]
  405324:	ldp	x29, x30, [sp, #32]
  405328:	add	sp, sp, #0x80
  40532c:	ret
  405330:	cmp	w8, #0x4
  405334:	b.ne	40543c <wcrtomb@plt+0x61c>  // b.any
  405338:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40533c:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  405340:	ldr	x8, [x26, #3936]
  405344:	ldr	x9, [x25, #920]
  405348:	ldr	x1, [x21]
  40534c:	mov	x0, x20
  405350:	mov	w22, w2
  405354:	mul	x8, x9, x8
  405358:	ucvtf	d0, x8
  40535c:	bl	405440 <wcrtomb@plt+0x620>
  405360:	mov	w23, w0
  405364:	mov	w0, w22
  405368:	mov	x1, x20
  40536c:	bl	404b90 <fputc_unlocked@plt>
  405370:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405374:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405378:	ldr	d0, [x27, #1648]
  40537c:	ldr	d1, [x28, #1656]
  405380:	ldr	x1, [x21, #8]
  405384:	mov	x0, x20
  405388:	fadd	d0, d0, d1
  40538c:	bl	405440 <wcrtomb@plt+0x620>
  405390:	mov	w24, w0
  405394:	mov	w0, w22
  405398:	mov	x1, x20
  40539c:	bl	404b90 <fputc_unlocked@plt>
  4053a0:	ldr	x1, [x21, #16]
  4053a4:	add	w8, w23, w24
  4053a8:	add	w21, w8, #0x2
  4053ac:	cbz	x1, 4053e0 <wcrtomb@plt+0x5c0>
  4053b0:	ldrb	w8, [x1]
  4053b4:	cbz	w8, 4053e0 <wcrtomb@plt+0x5c0>
  4053b8:	mov	w2, #0x5                   	// #5
  4053bc:	mov	x0, xzr
  4053c0:	bl	404bf0 <dcgettext@plt>
  4053c4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  4053c8:	mov	x3, x0
  4053cc:	add	x2, x2, #0x30e
  4053d0:	mov	w1, #0x1                   	// #1
  4053d4:	mov	x0, x20
  4053d8:	bl	404910 <__fprintf_chk@plt>
  4053dc:	add	w21, w0, w21
  4053e0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4053e4:	ldr	x8, [x26, #3936]
  4053e8:	ldr	x9, [x9, #4032]
  4053ec:	ldr	x10, [x25, #920]
  4053f0:	ldr	d0, [x27, #1648]
  4053f4:	ldr	d1, [x28, #1656]
  4053f8:	sub	x8, x8, x9
  4053fc:	mul	x8, x8, x10
  405400:	ucvtf	d2, x8
  405404:	fadd	d0, d0, d1
  405408:	fsub	d0, d2, d0
  40540c:	fcvtzu	x0, d0
  405410:	add	x1, sp, #0x8
  405414:	bl	43650c <argp_usage@@Base+0x4910>
  405418:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  40541c:	mov	x3, x0
  405420:	add	x2, x2, #0x386
  405424:	mov	w1, #0x1                   	// #1
  405428:	mov	x0, x20
  40542c:	bl	404910 <__fprintf_chk@plt>
  405430:	add	w21, w0, w21
  405434:	cbnz	w19, 4052fc <wcrtomb@plt+0x4dc>
  405438:	b	40530c <wcrtomb@plt+0x4ec>
  40543c:	bl	404870 <abort@plt>
  405440:	str	d8, [sp, #-64]!
  405444:	stp	x29, x30, [sp, #16]
  405448:	stp	x28, x21, [sp, #32]
  40544c:	stp	x20, x19, [sp, #48]
  405450:	mov	x29, sp
  405454:	sub	sp, sp, #0x520
  405458:	mov	v8.16b, v0.16b
  40545c:	mov	x19, x0
  405460:	cbz	x1, 405498 <wcrtomb@plt+0x678>
  405464:	ldrb	w8, [x1]
  405468:	cbz	w8, 405498 <wcrtomb@plt+0x678>
  40546c:	mov	w2, #0x5                   	// #5
  405470:	mov	x0, xzr
  405474:	bl	404bf0 <dcgettext@plt>
  405478:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  40547c:	mov	x3, x0
  405480:	add	x2, x2, #0x30e
  405484:	mov	w1, #0x1                   	// #1
  405488:	mov	x0, x19
  40548c:	bl	404910 <__fprintf_chk@plt>
  405490:	mov	w20, w0
  405494:	b	40549c <wcrtomb@plt+0x67c>
  405498:	mov	w20, wzr
  40549c:	fcvtzu	x0, d8
  4054a0:	add	x1, sp, #0x294
  4054a4:	mov	w2, #0x1b0                 	// #432
  4054a8:	mov	w3, #0x1                   	// #1
  4054ac:	mov	w4, #0x1                   	// #1
  4054b0:	bl	435b64 <argp_usage@@Base+0x3f68>
  4054b4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4054b8:	ldr	d0, [x8, #1632]
  4054bc:	mov	x21, x0
  4054c0:	fcmp	d0, #0.0
  4054c4:	b.le	4054fc <wcrtomb@plt+0x6dc>
  4054c8:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  4054cc:	fdiv	d0, d8, d0
  4054d0:	fmov	d1, x8
  4054d4:	fcmp	d0, d1
  4054d8:	b.pl	4054fc <wcrtomb@plt+0x6dc>  // b.nfrst
  4054dc:	fcvtzu	x0, d0
  4054e0:	add	x1, sp, #0x8
  4054e4:	mov	w2, #0x1b0                 	// #432
  4054e8:	mov	w3, #0x1                   	// #1
  4054ec:	mov	w4, #0x1                   	// #1
  4054f0:	bl	435b64 <argp_usage@@Base+0x3f68>
  4054f4:	mov	x4, x0
  4054f8:	b	405504 <wcrtomb@plt+0x6e4>
  4054fc:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x18da0>
  405500:	add	x4, x4, #0xb66
  405504:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  405508:	add	x2, x2, #0x341
  40550c:	mov	w1, #0x1                   	// #1
  405510:	mov	x0, x19
  405514:	mov	v0.16b, v8.16b
  405518:	mov	x3, x21
  40551c:	bl	404910 <__fprintf_chk@plt>
  405520:	add	w0, w0, w20
  405524:	add	sp, sp, #0x520
  405528:	ldp	x20, x19, [sp, #48]
  40552c:	ldp	x28, x21, [sp, #32]
  405530:	ldp	x29, x30, [sp, #16]
  405534:	ldr	d8, [sp], #64
  405538:	ret
  40553c:	stp	x29, x30, [sp, #-16]!
  405540:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405544:	ldr	x0, [x8, #1136]
  405548:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40554c:	add	x1, x1, #0x170
  405550:	mov	w2, #0xa                   	// #10
  405554:	mov	w3, #0xa                   	// #10
  405558:	mov	x29, sp
  40555c:	bl	40524c <wcrtomb@plt+0x42c>
  405560:	ldp	x29, x30, [sp], #16
  405564:	ret
  405568:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40556c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405570:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405574:	ldr	x9, [x9, #4008]
  405578:	ldr	x10, [x10, #3984]
  40557c:	ldr	x8, [x8, #1664]
  405580:	sub	x9, x9, x10
  405584:	add	x0, x8, x9, asr #9
  405588:	ret
  40558c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405590:	ldrb	w9, [x8, #1672]
  405594:	cmp	w9, #0x1
  405598:	b.ne	4055d0 <wcrtomb@plt+0x7b0>  // b.any
  40559c:	strb	wzr, [x8, #1672]
  4055a0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4055a4:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  4055a8:	ldr	x8, [x8, #3984]
  4055ac:	ldrsw	x10, [x10, #748]
  4055b0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4055b4:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4055b8:	adrp	x12, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4055bc:	mov	w13, #0x1                   	// #1
  4055c0:	str	x8, [x9, #4008]
  4055c4:	add	x8, x8, x10, lsl #9
  4055c8:	str	x8, [x11, #3944]
  4055cc:	str	w13, [x12, #3960]
  4055d0:	ret
  4055d4:	stp	x29, x30, [sp, #-48]!
  4055d8:	stp	x20, x19, [sp, #32]
  4055dc:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4055e0:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4055e4:	ldr	x8, [x19, #4008]
  4055e8:	ldr	x9, [x20, #3944]
  4055ec:	str	x21, [sp, #16]
  4055f0:	mov	x29, sp
  4055f4:	cmp	x8, x9
  4055f8:	b.eq	405604 <wcrtomb@plt+0x7e4>  // b.none
  4055fc:	ldr	x0, [x19, #4008]
  405600:	b	405638 <wcrtomb@plt+0x818>
  405604:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405608:	ldrb	w8, [x21, #1672]
  40560c:	tbz	w8, #0, 405618 <wcrtomb@plt+0x7f8>
  405610:	mov	x0, xzr
  405614:	b	405638 <wcrtomb@plt+0x818>
  405618:	bl	405648 <wcrtomb@plt+0x828>
  40561c:	ldr	x8, [x19, #4008]
  405620:	ldr	x9, [x20, #3944]
  405624:	cmp	x8, x9
  405628:	b.ne	4055fc <wcrtomb@plt+0x7dc>  // b.any
  40562c:	mov	w8, #0x1                   	// #1
  405630:	mov	x0, xzr
  405634:	strb	w8, [x21, #1672]
  405638:	ldp	x20, x19, [sp, #32]
  40563c:	ldr	x21, [sp, #16]
  405640:	ldp	x29, x30, [sp], #48
  405644:	ret
  405648:	stp	x29, x30, [sp, #-48]!
  40564c:	stp	x22, x21, [sp, #16]
  405650:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405654:	ldr	w8, [x21, #3960]
  405658:	stp	x20, x19, [sp, #32]
  40565c:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405660:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405664:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  405668:	mov	x29, sp
  40566c:	cbnz	w8, 4056cc <wcrtomb@plt+0x8ac>
  405670:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405674:	ldrb	w9, [x8, #992]
  405678:	cbz	w9, 4056cc <wcrtomb@plt+0x8ac>
  40567c:	mov	w9, #0x1                   	// #1
  405680:	str	w9, [x21, #3960]
  405684:	strb	wzr, [x8, #992]
  405688:	bl	405910 <wcrtomb@plt+0xaf0>
  40568c:	ldr	x0, [x19, #3944]
  405690:	ldr	x9, [x22, #3984]
  405694:	ldrsw	x8, [x20, #748]
  405698:	sub	x9, x0, x9
  40569c:	asr	x9, x9, #9
  4056a0:	cmp	x9, x8
  4056a4:	b.ge	4056cc <wcrtomb@plt+0x8ac>  // b.tcont
  4056a8:	sub	x8, x8, x9
  4056ac:	lsl	x2, x8, #9
  4056b0:	mov	w1, wzr
  4056b4:	bl	404600 <memset@plt>
  4056b8:	ldr	x8, [x22, #3984]
  4056bc:	ldrsw	x9, [x20, #748]
  4056c0:	add	x8, x8, x9, lsl #9
  4056c4:	str	x8, [x19, #3944]
  4056c8:	b	405734 <wcrtomb@plt+0x914>
  4056cc:	ldr	x8, [x22, #3984]
  4056d0:	ldr	x12, [x19, #3944]
  4056d4:	adrp	x13, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4056d8:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4056dc:	ldrsw	x14, [x20, #748]
  4056e0:	ldr	x15, [x13, #1664]
  4056e4:	ldr	w10, [x21, #3960]
  4056e8:	ldr	x9, [x11, #4008]
  4056ec:	sub	x12, x12, x8
  4056f0:	str	x8, [x11, #4008]
  4056f4:	add	x11, x8, x14, lsl #9
  4056f8:	add	x12, x15, x12, asr #9
  4056fc:	str	x12, [x13, #1664]
  405700:	str	x11, [x19, #3944]
  405704:	cbz	w10, 405730 <wcrtomb@plt+0x910>
  405708:	cmp	w10, #0x1
  40570c:	b.eq	40571c <wcrtomb@plt+0x8fc>  // b.none
  405710:	cmp	w10, #0x2
  405714:	b.ne	405734 <wcrtomb@plt+0x914>  // b.any
  405718:	bl	404870 <abort@plt>
  40571c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405720:	ldr	x10, [x10, #1680]
  405724:	sub	x0, x9, x8
  405728:	blr	x10
  40572c:	b	405734 <wcrtomb@plt+0x914>
  405730:	bl	405ac8 <wcrtomb@plt+0xca8>
  405734:	ldp	x20, x19, [sp, #32]
  405738:	ldp	x22, x21, [sp, #16]
  40573c:	ldp	x29, x30, [sp], #48
  405740:	ret
  405744:	stp	x29, x30, [sp, #-16]!
  405748:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40574c:	ldr	x8, [x9, #4008]
  405750:	mov	x29, sp
  405754:	cmp	x8, x0
  405758:	b.hi	40576c <wcrtomb@plt+0x94c>  // b.pmore
  40575c:	add	x8, x8, #0x200
  405760:	cmp	x8, x0
  405764:	b.ls	40575c <wcrtomb@plt+0x93c>  // b.plast
  405768:	str	x8, [x9, #4008]
  40576c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405770:	ldr	x9, [x9, #3944]
  405774:	cmp	x8, x9
  405778:	b.hi	405784 <wcrtomb@plt+0x964>  // b.pmore
  40577c:	ldp	x29, x30, [sp], #16
  405780:	ret
  405784:	bl	404870 <abort@plt>
  405788:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40578c:	ldr	x8, [x8, #3944]
  405790:	sub	x0, x8, x0
  405794:	ret
  405798:	stp	x29, x30, [sp, #-16]!
  40579c:	mov	x29, sp
  4057a0:	bl	4047c0 <close@plt>
  4057a4:	cbz	w0, 4057c0 <wcrtomb@plt+0x9a0>
  4057a8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4057ac:	add	x1, x1, #0x278
  4057b0:	mov	w2, #0x5                   	// #5
  4057b4:	mov	x0, xzr
  4057b8:	bl	404bf0 <dcgettext@plt>
  4057bc:	bl	428014 <wcrtomb@plt+0x231f4>
  4057c0:	ldp	x29, x30, [sp], #16
  4057c4:	ret
  4057c8:	stp	x29, x30, [sp, #-48]!
  4057cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4057d0:	ldrb	w8, [x8, #697]
  4057d4:	stp	x20, x19, [sp, #32]
  4057d8:	mov	x19, x0
  4057dc:	str	x21, [sp, #16]
  4057e0:	mov	x29, sp
  4057e4:	cbz	w8, 4057fc <wcrtomb@plt+0x9dc>
  4057e8:	bl	404d00 <__errno_location@plt>
  4057ec:	ldr	w21, [x0]
  4057f0:	mov	x20, x0
  4057f4:	bl	40553c <wcrtomb@plt+0x71c>
  4057f8:	str	w21, [x20]
  4057fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405800:	ldr	x8, [x8, #736]
  405804:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  405808:	ldr	x2, [x9, #920]
  40580c:	mov	x1, x19
  405810:	ldr	x0, [x8]
  405814:	bl	405818 <wcrtomb@plt+0x9f8>
  405818:	stp	x29, x30, [sp, #-16]!
  40581c:	mov	x29, sp
  405820:	bl	4287a4 <wcrtomb@plt+0x23984>
  405824:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405828:	ldr	w0, [x8, #976]
  40582c:	mov	w8, #0x40000000            	// #1073741824
  405830:	cmp	w0, w8
  405834:	b.lt	40584c <wcrtomb@plt+0xa2c>  // b.tstop
  405838:	mov	w8, #0xc0000000            	// #-1073741824
  40583c:	add	w0, w0, w8
  405840:	bl	429260 <wcrtomb@plt+0x24440>
  405844:	cbnz	w0, 405854 <wcrtomb@plt+0xa34>
  405848:	b	405864 <wcrtomb@plt+0xa44>
  40584c:	bl	4047c0 <close@plt>
  405850:	cbz	w0, 405864 <wcrtomb@plt+0xa44>
  405854:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405858:	ldr	x8, [x8, #736]
  40585c:	ldr	x0, [x8]
  405860:	bl	428014 <wcrtomb@plt+0x231f4>
  405864:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405868:	ldr	w0, [x8, #1688]
  40586c:	mov	w1, wzr
  405870:	bl	41fbd0 <wcrtomb@plt+0x1adb0>
  405874:	bl	40dda4 <wcrtomb@plt+0x8f84>
  405878:	stp	x29, x30, [sp, #-16]!
  40587c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405880:	ldr	x8, [x8, #736]
  405884:	mov	x29, sp
  405888:	ldr	x0, [x8]
  40588c:	bl	4281b8 <wcrtomb@plt+0x23398>
  405890:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405894:	ldr	x8, [x8, #1664]
  405898:	cbz	x8, 4058bc <wcrtomb@plt+0xa9c>
  40589c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4058a0:	ldr	w9, [x8, #1624]
  4058a4:	add	w10, w9, #0x1
  4058a8:	cmp	w9, #0xb
  4058ac:	str	w10, [x8, #1624]
  4058b0:	b.ge	4058d8 <wcrtomb@plt+0xab8>  // b.tcont
  4058b4:	ldp	x29, x30, [sp], #16
  4058b8:	ret
  4058bc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4058c0:	ldr	x8, [x8, #1008]
  4058c4:	cbz	x8, 4058cc <wcrtomb@plt+0xaac>
  4058c8:	blr	x8
  4058cc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4058d0:	add	x1, x1, #0x27f
  4058d4:	b	4058f0 <wcrtomb@plt+0xad0>
  4058d8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4058dc:	ldr	x8, [x8, #1008]
  4058e0:	cbz	x8, 4058e8 <wcrtomb@plt+0xac8>
  4058e4:	blr	x8
  4058e8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4058ec:	add	x1, x1, #0x2a2
  4058f0:	mov	w2, #0x5                   	// #5
  4058f4:	mov	x0, xzr
  4058f8:	bl	404bf0 <dcgettext@plt>
  4058fc:	mov	x2, x0
  405900:	mov	w0, wzr
  405904:	mov	w1, wzr
  405908:	bl	4041f0 <error@plt>
  40590c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  405910:	sub	sp, sp, #0x30
  405914:	stp	x20, x19, [sp, #32]
  405918:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  40591c:	ldr	w0, [x19, #976]
  405920:	mov	w8, #0x4                   	// #4
  405924:	mov	w9, #0x40000000            	// #1073741824
  405928:	strh	w8, [sp, #8]
  40592c:	mov	w8, #0x1                   	// #1
  405930:	cmp	w0, w9
  405934:	stp	x29, x30, [sp, #16]
  405938:	add	x29, sp, #0x10
  40593c:	str	w8, [sp, #12]
  405940:	b.lt	405964 <wcrtomb@plt+0xb44>  // b.tstop
  405944:	mov	w8, #0xc0000000            	// #-1073741824
  405948:	mov	w1, #0x6d01                	// #27905
  40594c:	add	w0, w0, w8
  405950:	add	x2, sp, #0x8
  405954:	movk	w1, #0x4008, lsl #16
  405958:	bl	429618 <wcrtomb@plt+0x247f8>
  40595c:	tbz	w0, #31, 405ab8 <wcrtomb@plt+0xc98>
  405960:	b	405978 <wcrtomb@plt+0xb58>
  405964:	mov	w1, #0x6d01                	// #27905
  405968:	add	x2, sp, #0x8
  40596c:	movk	w1, #0x4008, lsl #16
  405970:	bl	404dd0 <ioctl@plt>
  405974:	tbz	w0, #31, 405ab8 <wcrtomb@plt+0xc98>
  405978:	bl	404d00 <__errno_location@plt>
  40597c:	ldr	w8, [x0]
  405980:	cmp	w8, #0x5
  405984:	b.ne	4059cc <wcrtomb@plt+0xbac>  // b.any
  405988:	ldr	w0, [x19, #976]
  40598c:	mov	w8, #0x40000000            	// #1073741824
  405990:	cmp	w0, w8
  405994:	b.lt	4059b8 <wcrtomb@plt+0xb98>  // b.tstop
  405998:	mov	w8, #0xc0000000            	// #-1073741824
  40599c:	mov	w1, #0x6d01                	// #27905
  4059a0:	add	w0, w0, w8
  4059a4:	add	x2, sp, #0x8
  4059a8:	movk	w1, #0x4008, lsl #16
  4059ac:	bl	429618 <wcrtomb@plt+0x247f8>
  4059b0:	tbz	w0, #31, 405ab8 <wcrtomb@plt+0xc98>
  4059b4:	b	4059cc <wcrtomb@plt+0xbac>
  4059b8:	mov	w1, #0x6d01                	// #27905
  4059bc:	add	x2, sp, #0x8
  4059c0:	movk	w1, #0x4008, lsl #16
  4059c4:	bl	404dd0 <ioctl@plt>
  4059c8:	tbz	w0, #31, 405ab8 <wcrtomb@plt+0xc98>
  4059cc:	ldr	w0, [x19, #976]
  4059d0:	mov	w8, #0x40000000            	// #1073741824
  4059d4:	cmp	w0, w8
  4059d8:	b.lt	4059f4 <wcrtomb@plt+0xbd4>  // b.tstop
  4059dc:	mov	w8, #0xc0000000            	// #-1073741824
  4059e0:	add	w0, w0, w8
  4059e4:	mov	w2, #0x1                   	// #1
  4059e8:	mov	x1, xzr
  4059ec:	bl	42948c <wcrtomb@plt+0x2466c>
  4059f0:	b	405a00 <wcrtomb@plt+0xbe0>
  4059f4:	mov	w2, #0x1                   	// #1
  4059f8:	mov	x1, xzr
  4059fc:	bl	404390 <lseek@plt>
  405a00:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405a04:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405a08:	ldr	x9, [x8, #3944]
  405a0c:	ldr	x10, [x20, #3984]
  405a10:	ldr	w8, [x19, #976]
  405a14:	mov	w11, #0x40000000            	// #1073741824
  405a18:	sub	x9, x10, x9
  405a1c:	add	x9, x9, x0
  405a20:	cmp	w8, w11
  405a24:	bic	x19, x9, x9, asr #63
  405a28:	b.lt	405a4c <wcrtomb@plt+0xc2c>  // b.tstop
  405a2c:	mov	w9, #0xc0000000            	// #-1073741824
  405a30:	add	w0, w8, w9
  405a34:	mov	x1, x19
  405a38:	mov	w2, wzr
  405a3c:	bl	42948c <wcrtomb@plt+0x2466c>
  405a40:	cmp	x0, x19
  405a44:	b.ne	405a64 <wcrtomb@plt+0xc44>  // b.any
  405a48:	b	405ab8 <wcrtomb@plt+0xc98>
  405a4c:	mov	w0, w8
  405a50:	mov	x1, x19
  405a54:	mov	w2, wzr
  405a58:	bl	404390 <lseek@plt>
  405a5c:	cmp	x0, x19
  405a60:	b.eq	405ab8 <wcrtomb@plt+0xc98>  // b.none
  405a64:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405a68:	ldr	x8, [x8, #1008]
  405a6c:	cbz	x8, 405a74 <wcrtomb@plt+0xc54>
  405a70:	blr	x8
  405a74:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  405a78:	add	x1, x1, #0x38a
  405a7c:	mov	w2, #0x5                   	// #5
  405a80:	mov	x0, xzr
  405a84:	bl	404bf0 <dcgettext@plt>
  405a88:	mov	x2, x0
  405a8c:	mov	w0, wzr
  405a90:	mov	w1, wzr
  405a94:	bl	4041f0 <error@plt>
  405a98:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405a9c:	ldr	x0, [x20, #3984]
  405aa0:	ldr	x8, [x8, #1000]
  405aa4:	cmp	x0, x8
  405aa8:	b.eq	405ab8 <wcrtomb@plt+0xc98>  // b.none
  405aac:	sub	x2, x8, x0
  405ab0:	mov	w1, wzr
  405ab4:	bl	404600 <memset@plt>
  405ab8:	ldp	x20, x19, [sp, #32]
  405abc:	ldp	x29, x30, [sp, #16]
  405ac0:	add	sp, sp, #0x30
  405ac4:	ret
  405ac8:	stp	x29, x30, [sp, #-16]!
  405acc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405ad0:	ldr	x8, [x8, #1712]
  405ad4:	mov	x29, sp
  405ad8:	blr	x8
  405adc:	ldp	x29, x30, [sp], #16
  405ae0:	ret
  405ae4:	stp	x29, x30, [sp, #-64]!
  405ae8:	str	x23, [sp, #16]
  405aec:	stp	x22, x21, [sp, #32]
  405af0:	stp	x20, x19, [sp, #48]
  405af4:	mov	x29, sp
  405af8:	mov	x20, x0
  405afc:	bl	405568 <wcrtomb@plt+0x748>
  405b00:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405b04:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405b08:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  405b0c:	ldr	x9, [x21, #4008]
  405b10:	ldr	x8, [x8, #3984]
  405b14:	ldrsw	x10, [x22, #748]
  405b18:	sub	x8, x9, x8
  405b1c:	sub	x8, x10, x8, lsr #9
  405b20:	lsl	x9, x8, #9
  405b24:	cmp	x9, x20
  405b28:	b.ge	405b40 <wcrtomb@plt+0xd20>  // b.tcont
  405b2c:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  405b30:	ldr	x8, [x23, #920]
  405b34:	sub	x9, x20, x9
  405b38:	cmp	x8, x9
  405b3c:	b.ls	405b58 <wcrtomb@plt+0xd38>  // b.plast
  405b40:	mov	x0, xzr
  405b44:	ldp	x20, x19, [sp, #48]
  405b48:	ldp	x22, x21, [sp, #32]
  405b4c:	ldr	x23, [sp, #16]
  405b50:	ldp	x29, x30, [sp], #64
  405b54:	ret
  405b58:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  405b5c:	mov	x19, x0
  405b60:	ldr	w0, [x10, #976]
  405b64:	mov	w10, #0x40000000            	// #1073741824
  405b68:	udiv	x9, x9, x8
  405b6c:	cmp	w0, w10
  405b70:	b.lt	405b90 <wcrtomb@plt+0xd70>  // b.tstop
  405b74:	mov	w10, #0xc0000000            	// #-1073741824
  405b78:	add	w0, w0, w10
  405b7c:	mul	x1, x9, x8
  405b80:	mov	w2, #0x1                   	// #1
  405b84:	bl	42948c <wcrtomb@plt+0x2466c>
  405b88:	tbz	x0, #63, 405ba0 <wcrtomb@plt+0xd80>
  405b8c:	b	405b44 <wcrtomb@plt+0xd24>
  405b90:	mul	x1, x9, x8
  405b94:	mov	w2, #0x1                   	// #1
  405b98:	bl	404390 <lseek@plt>
  405b9c:	tbnz	x0, #63, 405b44 <wcrtomb@plt+0xd24>
  405ba0:	ldr	x8, [x23, #920]
  405ba4:	udiv	x9, x0, x8
  405ba8:	msub	x8, x9, x8, x0
  405bac:	cbnz	x8, 405bf8 <wcrtomb@plt+0xdd8>
  405bb0:	add	x8, x0, #0x1ff
  405bb4:	cmp	x0, #0x0
  405bb8:	ldrsw	x9, [x22, #748]
  405bbc:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405bc0:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405bc4:	csel	x8, x8, x0, lt  // lt = tstop
  405bc8:	ldr	x12, [x10, #3936]
  405bcc:	ldr	x11, [x11, #3944]
  405bd0:	asr	x8, x8, #9
  405bd4:	sub	x0, x8, x19
  405bd8:	sub	x8, x8, x9
  405bdc:	sdiv	x9, x0, x9
  405be0:	add	x9, x12, x9
  405be4:	adrp	x12, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405be8:	str	x8, [x12, #1664]
  405bec:	str	x9, [x10, #3936]
  405bf0:	str	x11, [x21, #4008]
  405bf4:	b	405b44 <wcrtomb@plt+0xd24>
  405bf8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405bfc:	ldr	x8, [x8, #1008]
  405c00:	cbz	x8, 405c08 <wcrtomb@plt+0xde8>
  405c04:	blr	x8
  405c08:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  405c0c:	add	x1, x1, #0x2bc
  405c10:	mov	w2, #0x5                   	// #5
  405c14:	mov	x0, xzr
  405c18:	bl	404bf0 <dcgettext@plt>
  405c1c:	mov	x2, x0
  405c20:	mov	w0, wzr
  405c24:	mov	w1, wzr
  405c28:	bl	4041f0 <error@plt>
  405c2c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  405c30:	stp	x29, x30, [sp, #-32]!
  405c34:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405c38:	ldrb	w8, [x8, #992]
  405c3c:	stp	x20, x19, [sp, #16]
  405c40:	mov	x29, sp
  405c44:	cbnz	w8, 405c58 <wcrtomb@plt+0xe38>
  405c48:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405c4c:	ldr	w8, [x8, #3960]
  405c50:	cmp	w8, #0x1
  405c54:	b.ne	405c74 <wcrtomb@plt+0xe54>  // b.any
  405c58:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405c5c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405c60:	bl	405648 <wcrtomb@plt+0x828>
  405c64:	ldr	x8, [x19, #4008]
  405c68:	ldr	x9, [x20, #3984]
  405c6c:	cmp	x8, x9
  405c70:	b.hi	405c60 <wcrtomb@plt+0xe40>  // b.pmore
  405c74:	bl	405108 <wcrtomb@plt+0x2e8>
  405c78:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405c7c:	ldrb	w8, [x8, #842]
  405c80:	cbz	w8, 405c88 <wcrtomb@plt+0xe68>
  405c84:	bl	409b28 <wcrtomb@plt+0x4d08>
  405c88:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405c8c:	ldr	w0, [x8, #976]
  405c90:	mov	w8, #0x40000000            	// #1073741824
  405c94:	cmp	w0, w8
  405c98:	b.lt	405cb0 <wcrtomb@plt+0xe90>  // b.tstop
  405c9c:	mov	w8, #0xc0000000            	// #-1073741824
  405ca0:	add	w0, w0, w8
  405ca4:	bl	429260 <wcrtomb@plt+0x24440>
  405ca8:	cbnz	w0, 405cb8 <wcrtomb@plt+0xe98>
  405cac:	b	405cc8 <wcrtomb@plt+0xea8>
  405cb0:	bl	4047c0 <close@plt>
  405cb4:	cbz	w0, 405cc8 <wcrtomb@plt+0xea8>
  405cb8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405cbc:	ldr	x8, [x8, #736]
  405cc0:	ldr	x0, [x8]
  405cc4:	bl	428014 <wcrtomb@plt+0x231f4>
  405cc8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405ccc:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405cd0:	ldr	w0, [x8, #1688]
  405cd4:	ldrb	w1, [x9, #1672]
  405cd8:	bl	41fbd0 <wcrtomb@plt+0x1adb0>
  405cdc:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  405ce0:	add	x0, x0, #0x60
  405ce4:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  405ce8:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405cec:	add	x19, x19, #0x6a0
  405cf0:	ldr	x0, [x19]
  405cf4:	bl	4049d0 <free@plt>
  405cf8:	ldr	x0, [x19, #8]
  405cfc:	bl	4049d0 <free@plt>
  405d00:	mov	x0, xzr
  405d04:	bl	405030 <wcrtomb@plt+0x210>
  405d08:	ldp	x20, x19, [sp, #16]
  405d0c:	ldp	x29, x30, [sp], #32
  405d10:	ret
  405d14:	stp	x29, x30, [sp, #-48]!
  405d18:	str	x21, [sp, #16]
  405d1c:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  405d20:	ldr	x0, [x21, #664]
  405d24:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  405d28:	add	x1, x1, #0x133
  405d2c:	stp	x20, x19, [sp, #32]
  405d30:	mov	x29, sp
  405d34:	bl	4044c0 <fopen@plt>
  405d38:	cbz	x0, 405d94 <wcrtomb@plt+0xf74>
  405d3c:	adrp	x20, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  405d40:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  405d44:	add	x20, x20, #0x6a8
  405d48:	add	x1, x1, #0x7b5
  405d4c:	mov	x2, x20
  405d50:	mov	x19, x0
  405d54:	bl	404570 <__isoc99_fscanf@plt>
  405d58:	cmp	w0, #0x1
  405d5c:	b.ne	405dbc <wcrtomb@plt+0xf9c>  // b.any
  405d60:	ldr	w8, [x20]
  405d64:	tbnz	w8, #31, 405dbc <wcrtomb@plt+0xf9c>
  405d68:	mov	x0, x19
  405d6c:	bl	4042d0 <ferror_unlocked@plt>
  405d70:	cbz	w0, 405d7c <wcrtomb@plt+0xf5c>
  405d74:	ldr	x0, [x21, #664]
  405d78:	bl	4281b8 <wcrtomb@plt+0x23398>
  405d7c:	mov	x0, x19
  405d80:	bl	404470 <fclose@plt>
  405d84:	cbz	w0, 405dac <wcrtomb@plt+0xf8c>
  405d88:	ldr	x0, [x21, #664]
  405d8c:	bl	428014 <wcrtomb@plt+0x231f4>
  405d90:	b	405dac <wcrtomb@plt+0xf8c>
  405d94:	bl	404d00 <__errno_location@plt>
  405d98:	ldr	w8, [x0]
  405d9c:	cmp	w8, #0x2
  405da0:	b.eq	405dac <wcrtomb@plt+0xf8c>  // b.none
  405da4:	ldr	x0, [x21, #664]
  405da8:	bl	428160 <wcrtomb@plt+0x23340>
  405dac:	ldp	x20, x19, [sp, #32]
  405db0:	ldr	x21, [sp, #16]
  405db4:	ldp	x29, x30, [sp], #48
  405db8:	ret
  405dbc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405dc0:	ldr	x8, [x8, #1008]
  405dc4:	cbz	x8, 405dcc <wcrtomb@plt+0xfac>
  405dc8:	blr	x8
  405dcc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  405dd0:	add	x1, x1, #0x2e6
  405dd4:	mov	w2, #0x5                   	// #5
  405dd8:	mov	x0, xzr
  405ddc:	bl	404bf0 <dcgettext@plt>
  405de0:	ldr	x8, [x21, #664]
  405de4:	mov	x19, x0
  405de8:	mov	x0, x8
  405dec:	bl	43beac <argp_usage@@Base+0xa2b0>
  405df0:	mov	x3, x0
  405df4:	mov	w0, wzr
  405df8:	mov	w1, wzr
  405dfc:	mov	x2, x19
  405e00:	bl	4041f0 <error@plt>
  405e04:	bl	40dda4 <wcrtomb@plt+0x8f84>
  405e08:	stp	x29, x30, [sp, #-32]!
  405e0c:	stp	x20, x19, [sp, #16]
  405e10:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  405e14:	ldr	x0, [x20, #664]
  405e18:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  405e1c:	add	x1, x1, #0x120
  405e20:	mov	x29, sp
  405e24:	bl	4044c0 <fopen@plt>
  405e28:	cbz	x0, 405e74 <wcrtomb@plt+0x1054>
  405e2c:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  405e30:	ldr	w3, [x8, #1704]
  405e34:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  405e38:	add	x2, x2, #0x1db
  405e3c:	mov	w1, #0x1                   	// #1
  405e40:	mov	x19, x0
  405e44:	bl	404910 <__fprintf_chk@plt>
  405e48:	mov	x0, x19
  405e4c:	bl	4042d0 <ferror_unlocked@plt>
  405e50:	cbz	w0, 405e5c <wcrtomb@plt+0x103c>
  405e54:	ldr	x0, [x20, #664]
  405e58:	bl	428784 <wcrtomb@plt+0x23964>
  405e5c:	mov	x0, x19
  405e60:	bl	404470 <fclose@plt>
  405e64:	cbz	w0, 405e7c <wcrtomb@plt+0x105c>
  405e68:	ldr	x0, [x20, #664]
  405e6c:	bl	428014 <wcrtomb@plt+0x231f4>
  405e70:	b	405e7c <wcrtomb@plt+0x105c>
  405e74:	ldr	x0, [x20, #664]
  405e78:	bl	428160 <wcrtomb@plt+0x23340>
  405e7c:	ldp	x20, x19, [sp, #16]
  405e80:	ldp	x29, x30, [sp], #32
  405e84:	ret
  405e88:	stp	x29, x30, [sp, #-48]!
  405e8c:	str	x21, [sp, #16]
  405e90:	stp	x20, x19, [sp, #32]
  405e94:	mov	x29, sp
  405e98:	mov	x19, x0
  405e9c:	bl	404190 <strlen@plt>
  405ea0:	cbz	x0, 405ef0 <wcrtomb@plt+0x10d0>
  405ea4:	add	x8, x0, x19
  405ea8:	sub	x21, x8, #0x1
  405eac:	cmp	x21, x19
  405eb0:	b.ls	405ef0 <wcrtomb@plt+0x10d0>  // b.plast
  405eb4:	bl	404950 <__ctype_b_loc@plt>
  405eb8:	ldr	x8, [x0]
  405ebc:	ldrb	w9, [x21], #-1
  405ec0:	ldrh	w8, [x8, x9, lsl #1]
  405ec4:	tbnz	w8, #11, 405eac <wcrtomb@plt+0x108c>
  405ec8:	sub	x8, x21, #0x6
  405ecc:	subs	x20, x8, x19
  405ed0:	b.ls	405ef0 <wcrtomb@plt+0x10d0>  // b.plast
  405ed4:	ldur	x8, [x21, #-6]
  405ed8:	mov	x9, #0x5620                	// #22048
  405edc:	movk	x9, #0x6c6f, lsl #16
  405ee0:	movk	x9, #0x6d75, lsl #32
  405ee4:	movk	x9, #0x2065, lsl #48
  405ee8:	cmp	x8, x9
  405eec:	b.eq	405f08 <wcrtomb@plt+0x10e8>  // b.none
  405ef0:	mov	x21, xzr
  405ef4:	mov	x0, x21
  405ef8:	ldp	x20, x19, [sp, #32]
  405efc:	ldr	x21, [sp, #16]
  405f00:	ldp	x29, x30, [sp], #48
  405f04:	ret
  405f08:	add	x0, x20, #0x1
  405f0c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  405f10:	mov	x1, x19
  405f14:	mov	x2, x20
  405f18:	mov	x21, x0
  405f1c:	bl	404110 <memcpy@plt>
  405f20:	strb	wzr, [x21, x20]
  405f24:	b	405ef4 <wcrtomb@plt+0x10d4>
  405f28:	stp	x29, x30, [sp, #-16]!
  405f2c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405f30:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  405f34:	ldr	x8, [x8, #1680]
  405f38:	ldr	x0, [x9, #920]
  405f3c:	mov	x29, sp
  405f40:	blr	x8
  405f44:	ldp	x29, x30, [sp], #16
  405f48:	ret
  405f4c:	stp	x29, x30, [sp, #-32]!
  405f50:	adrp	x9, 405000 <wcrtomb@plt+0x1e0>
  405f54:	adrp	x11, 406000 <wcrtomb@plt+0x11e0>
  405f58:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405f5c:	add	x9, x9, #0xfd0
  405f60:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405f64:	add	x11, x11, #0x8
  405f68:	str	x19, [sp, #16]
  405f6c:	mov	x29, sp
  405f70:	mov	w19, w0
  405f74:	str	x9, [x8, #1712]
  405f78:	str	x11, [x10, #1680]
  405f7c:	bl	406040 <wcrtomb@plt+0x1220>
  405f80:	cmp	w19, #0x2
  405f84:	b.eq	405f94 <wcrtomb@plt+0x1174>  // b.none
  405f88:	cmp	w19, #0x1
  405f8c:	b.eq	405fa8 <wcrtomb@plt+0x1188>  // b.none
  405f90:	cbnz	w19, 405fc0 <wcrtomb@plt+0x11a0>
  405f94:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405f98:	ldr	x8, [x8, #648]
  405f9c:	cbz	x8, 405fc0 <wcrtomb@plt+0x11a0>
  405fa0:	bl	40656c <wcrtomb@plt+0x174c>
  405fa4:	b	405fc0 <wcrtomb@plt+0x11a0>
  405fa8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  405fac:	ldr	x8, [x8, #648]
  405fb0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405fb4:	str	xzr, [x9, #3952]
  405fb8:	cbz	x8, 405fc0 <wcrtomb@plt+0x11a0>
  405fbc:	bl	4066dc <wcrtomb@plt+0x18bc>
  405fc0:	bl	406710 <wcrtomb@plt+0x18f0>
  405fc4:	ldr	x19, [sp, #16]
  405fc8:	ldp	x29, x30, [sp], #32
  405fcc:	ret
  405fd0:	stp	x29, x30, [sp, #-32]!
  405fd4:	adrp	x8, 406000 <wcrtomb@plt+0x11e0>
  405fd8:	str	x19, [sp, #16]
  405fdc:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  405fe0:	add	x8, x8, #0x748
  405fe4:	mov	x29, sp
  405fe8:	str	x8, [x19, #1712]
  405fec:	bl	406818 <wcrtomb@plt+0x19f8>
  405ff0:	adrp	x8, 405000 <wcrtomb@plt+0x1e0>
  405ff4:	add	x8, x8, #0xfd0
  405ff8:	str	x8, [x19, #1712]
  405ffc:	ldr	x19, [sp, #16]
  406000:	ldp	x29, x30, [sp], #32
  406004:	ret
  406008:	stp	x29, x30, [sp, #-32]!
  40600c:	adrp	x8, 407000 <wcrtomb@plt+0x21e0>
  406010:	str	x19, [sp, #16]
  406014:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406018:	add	x8, x8, #0x8c8
  40601c:	mov	x29, sp
  406020:	str	x8, [x19, #1680]
  406024:	bl	407914 <wcrtomb@plt+0x2af4>
  406028:	adrp	x8, 406000 <wcrtomb@plt+0x11e0>
  40602c:	add	x8, x8, #0x8
  406030:	str	x8, [x19, #1680]
  406034:	ldr	x19, [sp, #16]
  406038:	ldp	x29, x30, [sp], #32
  40603c:	ret
  406040:	sub	sp, sp, #0x50
  406044:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406048:	ldr	x8, [x8, #920]
  40604c:	stp	x29, x30, [sp, #16]
  406050:	stp	x24, x23, [sp, #32]
  406054:	stp	x22, x21, [sp, #48]
  406058:	stp	x20, x19, [sp, #64]
  40605c:	add	x29, sp, #0x10
  406060:	cbz	x8, 4064b0 <wcrtomb@plt+0x1690>
  406064:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406068:	ldr	x8, [x8, #848]
  40606c:	cbz	x8, 4064cc <wcrtomb@plt+0x16ac>
  406070:	mov	w19, w0
  406074:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  406078:	add	x0, x0, #0x60
  40607c:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  406080:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406084:	str	wzr, [x8, #1744]
  406088:	bl	407ce4 <wcrtomb@plt+0x2ec4>
  40608c:	cmp	w19, #0x2
  406090:	csel	w0, wzr, w19, eq  // eq = none
  406094:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406098:	str	w0, [x8, #3960]
  40609c:	bl	40819c <wcrtomb@plt+0x337c>
  4060a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4060a4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4060a8:	ldrb	w8, [x8, #841]
  4060ac:	ldr	x9, [x9, #904]
  4060b0:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4060b4:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4060b8:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  4060bc:	str	xzr, [x10, #3936]
  4060c0:	strb	w8, [x24, #1720]
  4060c4:	cbz	x9, 4060e0 <wcrtomb@plt+0x12c0>
  4060c8:	cbz	w19, 406138 <wcrtomb@plt+0x1318>
  4060cc:	cmp	w19, #0x1
  4060d0:	b.eq	406128 <wcrtomb@plt+0x1308>  // b.none
  4060d4:	cmp	w19, #0x2
  4060d8:	b.ne	40615c <wcrtomb@plt+0x133c>  // b.any
  4060dc:	bl	404870 <abort@plt>
  4060e0:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  4060e4:	ldr	x22, [x23, #688]
  4060e8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4060ec:	add	x1, x1, #0xabd
  4060f0:	ldr	x20, [x22]
  4060f4:	mov	x0, x20
  4060f8:	bl	404920 <strcmp@plt>
  4060fc:	cbz	w0, 4061a8 <wcrtomb@plt+0x1388>
  406100:	cmp	w19, #0x2
  406104:	b.eq	406250 <wcrtomb@plt+0x1430>  // b.none
  406108:	cmp	w19, #0x1
  40610c:	b.eq	406230 <wcrtomb@plt+0x1410>  // b.none
  406110:	cbnz	w19, 4062b0 <wcrtomb@plt+0x1490>
  406114:	bl	408358 <wcrtomb@plt+0x3538>
  406118:	str	w0, [x21, #976]
  40611c:	tbnz	w0, #31, 4062b0 <wcrtomb@plt+0x1490>
  406120:	bl	407828 <wcrtomb@plt+0x2a08>
  406124:	b	4062b0 <wcrtomb@plt+0x1490>
  406128:	bl	41fe6c <wcrtomb@plt+0x1b04c>
  40612c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406130:	str	w0, [x8, #1688]
  406134:	b	40615c <wcrtomb@plt+0x133c>
  406138:	bl	420354 <wcrtomb@plt+0x1b534>
  40613c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406140:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406144:	str	w0, [x8, #1688]
  406148:	ldr	x8, [x9, #3984]
  40614c:	mov	w9, #0x1                   	// #1
  406150:	strb	w9, [x24, #1720]
  406154:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406158:	str	x8, [x9, #3944]
  40615c:	cmp	w19, #0x1
  406160:	mov	w22, wzr
  406164:	b.ne	4062b4 <wcrtomb@plt+0x1494>  // b.any
  406168:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40616c:	ldr	x8, [x8, #960]
  406170:	cbnz	x8, 4062b4 <wcrtomb@plt+0x1494>
  406174:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406178:	ldr	x8, [x8, #688]
  40617c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  406180:	add	x1, x1, #0xabd
  406184:	ldr	x0, [x8]
  406188:	bl	404920 <strcmp@plt>
  40618c:	cbnz	w0, 4062b0 <wcrtomb@plt+0x1490>
  406190:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406194:	ldr	x8, [x8, #1136]
  406198:	mov	w22, wzr
  40619c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4061a0:	str	x8, [x9, #3928]
  4061a4:	b	4062b4 <wcrtomb@plt+0x1494>
  4061a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4061ac:	ldrb	w8, [x8, #842]
  4061b0:	mov	w9, #0x1                   	// #1
  4061b4:	strb	w9, [x24, #1720]
  4061b8:	cbnz	w8, 406504 <wcrtomb@plt+0x16e4>
  4061bc:	cmp	w19, #0x2
  4061c0:	b.eq	406310 <wcrtomb@plt+0x14f0>  // b.none
  4061c4:	cmp	w19, #0x1
  4061c8:	b.eq	40629c <wcrtomb@plt+0x147c>  // b.none
  4061cc:	cbnz	w19, 4062b0 <wcrtomb@plt+0x1490>
  4061d0:	sub	x0, x29, #0x4
  4061d4:	str	wzr, [x21, #976]
  4061d8:	bl	408230 <wcrtomb@plt+0x3410>
  4061dc:	cmp	w0, #0x2
  4061e0:	b.cs	406520 <wcrtomb@plt+0x1700>  // b.hs, b.nlast
  4061e4:	ldurb	w8, [x29, #-4]
  4061e8:	cbz	w8, 4062b0 <wcrtomb@plt+0x1490>
  4061ec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4061f0:	ldr	x8, [x8, #1008]
  4061f4:	cbz	x8, 4061fc <wcrtomb@plt+0x13dc>
  4061f8:	blr	x8
  4061fc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406200:	add	x1, x1, #0x447
  406204:	mov	w2, #0x5                   	// #5
  406208:	mov	x0, xzr
  40620c:	bl	404bf0 <dcgettext@plt>
  406210:	mov	x2, x0
  406214:	mov	w0, wzr
  406218:	mov	w1, wzr
  40621c:	bl	4041f0 <error@plt>
  406220:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406224:	mov	w9, #0x2                   	// #2
  406228:	str	w9, [x8, #3456]
  40622c:	b	4062b0 <wcrtomb@plt+0x1490>
  406230:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406234:	ldrb	w8, [x8, #757]
  406238:	cbz	w8, 406344 <wcrtomb@plt+0x1524>
  40623c:	mov	w1, #0x1                   	// #1
  406240:	mov	x0, x20
  406244:	mov	w22, #0x1                   	// #1
  406248:	bl	41a318 <wcrtomb@plt+0x154f8>
  40624c:	b	406348 <wcrtomb@plt+0x1528>
  406250:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406254:	ldrb	w8, [x8, #1016]
  406258:	cbz	w8, 406398 <wcrtomb@plt+0x1578>
  40625c:	ldr	x0, [x22]
  406260:	mov	w1, #0x42                  	// #66
  406264:	mov	w2, #0x1b6                 	// #438
  406268:	bl	404530 <open@plt>
  40626c:	str	w0, [x21, #976]
  406270:	mov	x0, xzr
  406274:	bl	408230 <wcrtomb@plt+0x3410>
  406278:	cmp	w0, #0x2
  40627c:	b.cc	4062b0 <wcrtomb@plt+0x1490>  // b.lo, b.ul, b.last
  406280:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406284:	ldr	x8, [x8, #1008]
  406288:	cbz	x8, 406290 <wcrtomb@plt+0x1470>
  40628c:	blr	x8
  406290:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406294:	add	x1, x1, #0x84f
  406298:	b	4064e4 <wcrtomb@plt+0x16c4>
  40629c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4062a0:	ldr	x8, [x8, #960]
  4062a4:	mov	w9, #0x1                   	// #1
  4062a8:	str	w9, [x21, #976]
  4062ac:	cbz	x8, 406190 <wcrtomb@plt+0x1370>
  4062b0:	mov	w22, wzr
  4062b4:	ldr	w8, [x21, #976]
  4062b8:	tbnz	w8, #31, 406488 <wcrtomb@plt+0x1668>
  4062bc:	mov	w9, #0x3fffffff            	// #1073741823
  4062c0:	cmp	w8, w9
  4062c4:	b.gt	4062d0 <wcrtomb@plt+0x14b0>
  4062c8:	bl	41fa68 <wcrtomb@plt+0x1ac48>
  4062cc:	tbz	w0, #0, 406488 <wcrtomb@plt+0x1668>
  4062d0:	bl	41fb20 <wcrtomb@plt+0x1ad00>
  4062d4:	bl	41facc <wcrtomb@plt+0x1acac>
  4062d8:	sub	w8, w19, #0x1
  4062dc:	cmp	w8, #0x2
  4062e0:	b.cs	4062f0 <wcrtomb@plt+0x14d0>  // b.hs, b.nlast
  4062e4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4062e8:	str	xzr, [x8, #3952]
  4062ec:	b	4062f8 <wcrtomb@plt+0x14d8>
  4062f0:	cbnz	w19, 4062f8 <wcrtomb@plt+0x14d8>
  4062f4:	bl	4055d4 <wcrtomb@plt+0x7b4>
  4062f8:	ldp	x20, x19, [sp, #64]
  4062fc:	ldp	x22, x21, [sp, #48]
  406300:	ldp	x24, x23, [sp, #32]
  406304:	ldp	x29, x30, [sp, #16]
  406308:	add	sp, sp, #0x50
  40630c:	ret
  406310:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406314:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  406318:	ldr	x9, [x9, #3984]
  40631c:	ldr	x10, [x10, #960]
  406320:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406324:	mov	w11, #0x1                   	// #1
  406328:	mov	w22, wzr
  40632c:	strb	w11, [x8, #3992]
  406330:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406334:	str	wzr, [x21, #976]
  406338:	str	x9, [x8, #3944]
  40633c:	cbnz	x10, 4062b4 <wcrtomb@plt+0x1494>
  406340:	b	406190 <wcrtomb@plt+0x1370>
  406344:	mov	w22, wzr
  406348:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40634c:	ldrb	w9, [x8, #842]
  406350:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406354:	ldrb	w8, [x8, #1016]
  406358:	cbz	w9, 40637c <wcrtomb@plt+0x155c>
  40635c:	cbz	w8, 4063e8 <wcrtomb@plt+0x15c8>
  406360:	ldr	x8, [x23, #688]
  406364:	mov	w1, #0x42                  	// #66
  406368:	mov	w2, #0x1b6                 	// #438
  40636c:	ldr	x0, [x8]
  406370:	bl	404530 <open@plt>
  406374:	str	w0, [x21, #976]
  406378:	b	4062b4 <wcrtomb@plt+0x1494>
  40637c:	cbz	w8, 406430 <wcrtomb@plt+0x1610>
  406380:	ldr	x8, [x23, #688]
  406384:	mov	w1, #0x1b6                 	// #438
  406388:	ldr	x0, [x8]
  40638c:	bl	404db0 <creat@plt>
  406390:	str	w0, [x21, #976]
  406394:	b	4062b4 <wcrtomb@plt+0x1494>
  406398:	mov	w1, #0x3a                  	// #58
  40639c:	mov	x0, x20
  4063a0:	bl	404a70 <strchr@plt>
  4063a4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4063a8:	str	x0, [x8, #1024]
  4063ac:	cbz	x0, 40625c <wcrtomb@plt+0x143c>
  4063b0:	ldr	x20, [x22]
  4063b4:	subs	x2, x0, x20
  4063b8:	b.ls	40625c <wcrtomb@plt+0x143c>  // b.plast
  4063bc:	mov	w1, #0x2f                  	// #47
  4063c0:	mov	x0, x20
  4063c4:	bl	404b70 <memchr@plt>
  4063c8:	cbnz	x0, 40625c <wcrtomb@plt+0x143c>
  4063cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4063d0:	ldr	x3, [x8, #808]
  4063d4:	mov	w1, #0x42                  	// #66
  4063d8:	mov	w2, #0x40000000            	// #1073741824
  4063dc:	mov	x0, x20
  4063e0:	bl	428b14 <wcrtomb@plt+0x23cf4>
  4063e4:	b	40626c <wcrtomb@plt+0x144c>
  4063e8:	ldr	x20, [x23, #688]
  4063ec:	mov	w1, #0x3a                  	// #58
  4063f0:	ldr	x0, [x20]
  4063f4:	bl	404a70 <strchr@plt>
  4063f8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4063fc:	str	x0, [x8, #1024]
  406400:	cbz	x0, 406360 <wcrtomb@plt+0x1540>
  406404:	ldr	x20, [x20]
  406408:	subs	x2, x0, x20
  40640c:	b.ls	406360 <wcrtomb@plt+0x1540>  // b.plast
  406410:	mov	w1, #0x2f                  	// #47
  406414:	mov	x0, x20
  406418:	bl	404b70 <memchr@plt>
  40641c:	cbnz	x0, 406360 <wcrtomb@plt+0x1540>
  406420:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406424:	ldr	x3, [x8, #808]
  406428:	mov	w1, #0x42                  	// #66
  40642c:	b	406474 <wcrtomb@plt+0x1654>
  406430:	ldr	x20, [x23, #688]
  406434:	mov	w1, #0x3a                  	// #58
  406438:	ldr	x0, [x20]
  40643c:	bl	404a70 <strchr@plt>
  406440:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406444:	str	x0, [x8, #1024]
  406448:	cbz	x0, 406380 <wcrtomb@plt+0x1560>
  40644c:	ldr	x20, [x20]
  406450:	subs	x2, x0, x20
  406454:	b.ls	406380 <wcrtomb@plt+0x1560>  // b.plast
  406458:	mov	w1, #0x2f                  	// #47
  40645c:	mov	x0, x20
  406460:	bl	404b70 <memchr@plt>
  406464:	cbnz	x0, 406380 <wcrtomb@plt+0x1560>
  406468:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40646c:	ldr	x3, [x8, #808]
  406470:	mov	w1, #0x41                  	// #65
  406474:	mov	w2, #0x40000000            	// #1073741824
  406478:	mov	x0, x20
  40647c:	bl	428b14 <wcrtomb@plt+0x23cf4>
  406480:	str	w0, [x21, #976]
  406484:	b	4062b4 <wcrtomb@plt+0x1494>
  406488:	bl	404d00 <__errno_location@plt>
  40648c:	ldr	w20, [x0]
  406490:	mov	x19, x0
  406494:	cbz	w22, 40649c <wcrtomb@plt+0x167c>
  406498:	bl	41a55c <wcrtomb@plt+0x1573c>
  40649c:	str	w20, [x19]
  4064a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4064a4:	ldr	x8, [x8, #688]
  4064a8:	ldr	x0, [x8]
  4064ac:	bl	428180 <wcrtomb@plt+0x23360>
  4064b0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4064b4:	ldr	x8, [x8, #1008]
  4064b8:	cbz	x8, 4064c0 <wcrtomb@plt+0x16a0>
  4064bc:	blr	x8
  4064c0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4064c4:	add	x1, x1, #0x7d3
  4064c8:	b	4064e4 <wcrtomb@plt+0x16c4>
  4064cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4064d0:	ldr	x8, [x8, #1008]
  4064d4:	cbz	x8, 4064dc <wcrtomb@plt+0x16bc>
  4064d8:	blr	x8
  4064dc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4064e0:	add	x1, x1, #0x7f1
  4064e4:	mov	w2, #0x5                   	// #5
  4064e8:	mov	x0, xzr
  4064ec:	bl	404bf0 <dcgettext@plt>
  4064f0:	mov	x2, x0
  4064f4:	mov	w0, wzr
  4064f8:	mov	w1, wzr
  4064fc:	bl	4041f0 <error@plt>
  406500:	bl	40dda4 <wcrtomb@plt+0x8f84>
  406504:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406508:	ldr	x8, [x8, #1008]
  40650c:	cbz	x8, 406514 <wcrtomb@plt+0x16f4>
  406510:	blr	x8
  406514:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406518:	add	x1, x1, #0x807
  40651c:	b	4064e4 <wcrtomb@plt+0x16c4>
  406520:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406524:	ldr	x8, [x8, #1008]
  406528:	mov	w20, w0
  40652c:	cbz	x8, 406534 <wcrtomb@plt+0x1714>
  406530:	blr	x8
  406534:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406538:	add	x1, x1, #0x82a
  40653c:	mov	w2, #0x5                   	// #5
  406540:	mov	x0, xzr
  406544:	bl	404bf0 <dcgettext@plt>
  406548:	mov	x19, x0
  40654c:	mov	w0, w20
  406550:	bl	40832c <wcrtomb@plt+0x350c>
  406554:	mov	x3, x0
  406558:	mov	w0, wzr
  40655c:	mov	w1, wzr
  406560:	mov	x2, x19
  406564:	bl	4041f0 <error@plt>
  406568:	bl	40dda4 <wcrtomb@plt+0x8f84>
  40656c:	sub	sp, sp, #0x1e0
  406570:	stp	x28, x21, [sp, #448]
  406574:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406578:	ldr	x8, [x21, #3968]
  40657c:	stp	x29, x30, [sp, #432]
  406580:	stp	x20, x19, [sp, #464]
  406584:	add	x29, sp, #0x1b0
  406588:	cbz	x8, 4065b0 <wcrtomb@plt+0x1790>
  40658c:	ldr	x0, [x21, #3968]
  406590:	cbz	x0, 406628 <wcrtomb@plt+0x1808>
  406594:	bl	408564 <wcrtomb@plt+0x3744>
  406598:	tbz	w0, #0, 406678 <wcrtomb@plt+0x1858>
  40659c:	ldp	x20, x19, [sp, #464]
  4065a0:	ldp	x28, x21, [sp, #448]
  4065a4:	ldp	x29, x30, [sp, #432]
  4065a8:	add	sp, sp, #0x1e0
  4065ac:	ret
  4065b0:	bl	4055d4 <wcrtomb@plt+0x7b4>
  4065b4:	cbz	x0, 406628 <wcrtomb@plt+0x1808>
  4065b8:	ldrb	w8, [x0, #156]
  4065bc:	mov	x19, x0
  4065c0:	cmp	w8, #0x67
  4065c4:	b.eq	4065e8 <wcrtomb@plt+0x17c8>  // b.none
  4065c8:	cmp	w8, #0x56
  4065cc:	b.ne	40658c <wcrtomb@plt+0x176c>  // b.any
  4065d0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4065d4:	add	x0, x0, #0xf80
  4065d8:	mov	w2, #0x64                  	// #100
  4065dc:	mov	x1, x19
  4065e0:	bl	4196c0 <wcrtomb@plt+0x148a0>
  4065e4:	b	40658c <wcrtomb@plt+0x176c>
  4065e8:	add	x0, sp, #0x8
  4065ec:	add	x20, sp, #0x8
  4065f0:	bl	422428 <wcrtomb@plt+0x1d608>
  4065f4:	add	x0, x19, #0x7c
  4065f8:	mov	w1, #0xc                   	// #12
  4065fc:	add	x20, x20, #0x158
  406600:	bl	4183c0 <wcrtomb@plt+0x135a0>
  406604:	mov	x2, x0
  406608:	mov	x0, x20
  40660c:	mov	x1, x19
  406610:	bl	412298 <wcrtomb@plt+0xd478>
  406614:	add	x0, sp, #0x8
  406618:	bl	411c30 <wcrtomb@plt+0xce10>
  40661c:	add	x0, sp, #0x8
  406620:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  406624:	b	40658c <wcrtomb@plt+0x176c>
  406628:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40662c:	ldr	x8, [x8, #1008]
  406630:	cbz	x8, 406638 <wcrtomb@plt+0x1818>
  406634:	blr	x8
  406638:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40663c:	add	x1, x1, #0x927
  406640:	mov	w2, #0x5                   	// #5
  406644:	mov	x0, xzr
  406648:	bl	404bf0 <dcgettext@plt>
  40664c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406650:	ldr	x8, [x8, #648]
  406654:	mov	x19, x0
  406658:	mov	x0, x8
  40665c:	bl	43c05c <argp_usage@@Base+0xa460>
  406660:	mov	x3, x0
  406664:	mov	w0, wzr
  406668:	mov	w1, wzr
  40666c:	mov	x2, x19
  406670:	bl	4041f0 <error@plt>
  406674:	bl	40dda4 <wcrtomb@plt+0x8f84>
  406678:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40667c:	ldr	x8, [x8, #1008]
  406680:	cbz	x8, 406688 <wcrtomb@plt+0x1868>
  406684:	blr	x8
  406688:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40668c:	add	x1, x1, #0x947
  406690:	mov	w2, #0x5                   	// #5
  406694:	mov	x0, xzr
  406698:	bl	404bf0 <dcgettext@plt>
  40669c:	ldr	x1, [x21, #3968]
  4066a0:	mov	x19, x0
  4066a4:	mov	w0, wzr
  4066a8:	bl	43c044 <argp_usage@@Base+0xa448>
  4066ac:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4066b0:	ldr	x1, [x8, #648]
  4066b4:	mov	x20, x0
  4066b8:	mov	w0, #0x1                   	// #1
  4066bc:	bl	43c044 <argp_usage@@Base+0xa448>
  4066c0:	mov	x4, x0
  4066c4:	mov	w0, wzr
  4066c8:	mov	w1, wzr
  4066cc:	mov	x2, x19
  4066d0:	mov	x3, x20
  4066d4:	bl	4041f0 <error@plt>
  4066d8:	bl	40dda4 <wcrtomb@plt+0x8f84>
  4066dc:	stp	x29, x30, [sp, #-16]!
  4066e0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4066e4:	ldrb	w8, [x8, #76]
  4066e8:	mov	x29, sp
  4066ec:	cbz	w8, 4066fc <wcrtomb@plt+0x18dc>
  4066f0:	bl	407d60 <wcrtomb@plt+0x2f40>
  4066f4:	ldp	x29, x30, [sp], #16
  4066f8:	ret
  4066fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406700:	ldr	x0, [x8, #648]
  406704:	bl	407f70 <wcrtomb@plt+0x3150>
  406708:	ldp	x29, x30, [sp], #16
  40670c:	ret
  406710:	stp	x29, x30, [sp, #-32]!
  406714:	str	x19, [sp, #16]
  406718:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  40671c:	add	x19, x19, #0x3a8
  406720:	mov	x0, x19
  406724:	mov	x29, sp
  406728:	bl	434c7c <argp_usage@@Base+0x3080>
  40672c:	ldr	q0, [x19]
  406730:	ldr	x19, [sp, #16]
  406734:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406738:	add	x8, x8, #0x360
  40673c:	str	q0, [x8]
  406740:	ldp	x29, x30, [sp], #32
  406744:	ret
  406748:	stp	x29, x30, [sp, #-32]!
  40674c:	mov	w0, wzr
  406750:	stp	x20, x19, [sp, #16]
  406754:	mov	x29, sp
  406758:	bl	408a38 <wcrtomb@plt+0x3c18>
  40675c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406760:	ldrb	w8, [x8, #3992]
  406764:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406768:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  40676c:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  406770:	str	wzr, [x9, #1624]
  406774:	cbz	w8, 4067b0 <wcrtomb@plt+0x1990>
  406778:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40677c:	ldr	x8, [x8, #1664]
  406780:	cbz	x8, 4067b0 <wcrtomb@plt+0x1990>
  406784:	mov	w8, #0x1                   	// #1
  406788:	str	w8, [x19, #976]
  40678c:	bl	41fe10 <wcrtomb@plt+0x1aff0>
  406790:	ldr	x8, [x20, #920]
  406794:	str	wzr, [x19, #976]
  406798:	cmp	x0, x8
  40679c:	b.eq	4067b0 <wcrtomb@plt+0x1990>  // b.none
  4067a0:	bl	4057c8 <wcrtomb@plt+0x9a8>
  4067a4:	cmn	x0, #0x1
  4067a8:	b.ne	406808 <wcrtomb@plt+0x19e8>  // b.any
  4067ac:	bl	405878 <wcrtomb@plt+0xa58>
  4067b0:	ldr	w0, [x19, #976]
  4067b4:	mov	w8, #0x40000000            	// #1073741824
  4067b8:	cmp	w0, w8
  4067bc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4067c0:	b.lt	4067dc <wcrtomb@plt+0x19bc>  // b.tstop
  4067c4:	ldr	x1, [x8, #3984]
  4067c8:	ldr	x2, [x20, #920]
  4067cc:	mov	w8, #0xc0000000            	// #-1073741824
  4067d0:	add	w0, w0, w8
  4067d4:	bl	4292b8 <wcrtomb@plt+0x24498>
  4067d8:	b	4067e8 <wcrtomb@plt+0x19c8>
  4067dc:	ldr	x1, [x8, #3984]
  4067e0:	ldr	x2, [x20, #920]
  4067e4:	bl	43c740 <argp_usage@@Base+0xab44>
  4067e8:	ldr	x8, [x20, #920]
  4067ec:	cmp	x0, x8
  4067f0:	b.ne	4067a4 <wcrtomb@plt+0x1984>  // b.any
  4067f4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4067f8:	ldr	x9, [x8, #3936]
  4067fc:	add	x9, x9, #0x1
  406800:	str	x9, [x8, #3936]
  406804:	b	40680c <wcrtomb@plt+0x19ec>
  406808:	bl	40694c <wcrtomb@plt+0x1b2c>
  40680c:	ldp	x20, x19, [sp, #16]
  406810:	ldp	x29, x30, [sp], #32
  406814:	ret
  406818:	stp	x29, x30, [sp, #-48]!
  40681c:	mov	w0, wzr
  406820:	str	x21, [sp, #16]
  406824:	stp	x20, x19, [sp, #32]
  406828:	mov	x29, sp
  40682c:	bl	408a38 <wcrtomb@plt+0x3c18>
  406830:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406834:	ldrb	w8, [x8, #3992]
  406838:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40683c:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  406840:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  406844:	str	wzr, [x9, #1624]
  406848:	cbz	w8, 406874 <wcrtomb@plt+0x1a54>
  40684c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406850:	ldr	x8, [x8, #1664]
  406854:	cbz	x8, 406874 <wcrtomb@plt+0x1a54>
  406858:	mov	w8, #0x1                   	// #1
  40685c:	str	w8, [x20, #976]
  406860:	bl	41fe10 <wcrtomb@plt+0x1aff0>
  406864:	ldr	x8, [x21, #920]
  406868:	str	wzr, [x20, #976]
  40686c:	cmp	x0, x8
  406870:	b.ne	406948 <wcrtomb@plt+0x1b28>  // b.any
  406874:	ldr	w0, [x20, #976]
  406878:	mov	w8, #0x40000000            	// #1073741824
  40687c:	cmp	w0, w8
  406880:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406884:	b.lt	4068a0 <wcrtomb@plt+0x1a80>  // b.tstop
  406888:	ldr	x1, [x8, #3984]
  40688c:	ldr	x2, [x21, #920]
  406890:	mov	w8, #0xc0000000            	// #-1073741824
  406894:	add	w0, w0, w8
  406898:	bl	4292b8 <wcrtomb@plt+0x24498>
  40689c:	b	4068ac <wcrtomb@plt+0x1a8c>
  4068a0:	ldr	x1, [x8, #3984]
  4068a4:	ldr	x2, [x21, #920]
  4068a8:	bl	43c740 <argp_usage@@Base+0xab44>
  4068ac:	ldr	x8, [x21, #920]
  4068b0:	mov	x19, x0
  4068b4:	cmp	x0, x8
  4068b8:	b.eq	406928 <wcrtomb@plt+0x1b08>  // b.none
  4068bc:	cbz	x19, 4068d8 <wcrtomb@plt+0x1ab8>
  4068c0:	cmn	x19, #0x1
  4068c4:	b.ne	40691c <wcrtomb@plt+0x1afc>  // b.any
  4068c8:	bl	404d00 <__errno_location@plt>
  4068cc:	ldr	w8, [x0]
  4068d0:	cmp	w8, #0x1c
  4068d4:	b.ne	4068e4 <wcrtomb@plt+0x1ac4>  // b.any
  4068d8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4068dc:	ldrb	w8, [x8, #76]
  4068e0:	cbnz	w8, 4068f4 <wcrtomb@plt+0x1ad4>
  4068e4:	cmn	x19, #0x1
  4068e8:	b.ne	40691c <wcrtomb@plt+0x1afc>  // b.any
  4068ec:	bl	405878 <wcrtomb@plt+0xa58>
  4068f0:	b	406874 <wcrtomb@plt+0x1a54>
  4068f4:	bl	406b78 <wcrtomb@plt+0x1d58>
  4068f8:	tbz	w0, #0, 4068f4 <wcrtomb@plt+0x1ad4>
  4068fc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406900:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406904:	ldr	x8, [x8, #4008]
  406908:	ldr	x9, [x9, #3944]
  40690c:	cmp	x8, x9
  406910:	b.ne	406938 <wcrtomb@plt+0x1b18>  // b.any
  406914:	bl	405648 <wcrtomb@plt+0x828>
  406918:	b	406938 <wcrtomb@plt+0x1b18>
  40691c:	mov	x0, x19
  406920:	bl	40694c <wcrtomb@plt+0x1b2c>
  406924:	b	406938 <wcrtomb@plt+0x1b18>
  406928:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40692c:	ldr	x9, [x8, #3936]
  406930:	add	x9, x9, #0x1
  406934:	str	x9, [x8, #3936]
  406938:	ldp	x20, x19, [sp, #32]
  40693c:	ldr	x21, [sp, #16]
  406940:	ldp	x29, x30, [sp], #48
  406944:	ret
  406948:	bl	4057c8 <wcrtomb@plt+0x9a8>
  40694c:	stp	x29, x30, [sp, #-96]!
  406950:	stp	x24, x23, [sp, #48]
  406954:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406958:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  40695c:	ldr	x8, [x24, #920]
  406960:	ldr	x9, [x23, #3984]
  406964:	stp	x22, x21, [sp, #64]
  406968:	stp	x20, x19, [sp, #80]
  40696c:	mov	x21, x0
  406970:	subs	x19, x8, x0
  406974:	add	x20, x9, x0
  406978:	str	x27, [sp, #16]
  40697c:	stp	x26, x25, [sp, #32]
  406980:	mov	x29, sp
  406984:	b.eq	4069fc <wcrtomb@plt+0x1bdc>  // b.none
  406988:	and	x8, x19, #0x1ff
  40698c:	cbnz	x8, 4069fc <wcrtomb@plt+0x1bdc>
  406990:	cbz	x21, 4069fc <wcrtomb@plt+0x1bdc>
  406994:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406998:	ldr	w8, [x8, #448]
  40699c:	tbz	w8, #22, 4069fc <wcrtomb@plt+0x1bdc>
  4069a0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4069a4:	ldr	x8, [x8, #1664]
  4069a8:	cbnz	x8, 4069fc <wcrtomb@plt+0x1bdc>
  4069ac:	bl	406b20 <wcrtomb@plt+0x1d00>
  4069b0:	tbz	w0, #0, 4069fc <wcrtomb@plt+0x1bdc>
  4069b4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4069b8:	ldr	x8, [x8, #1008]
  4069bc:	lsr	x22, x21, #9
  4069c0:	cbz	x8, 4069c8 <wcrtomb@plt+0x1ba8>
  4069c4:	blr	x8
  4069c8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4069cc:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  4069d0:	add	x1, x1, #0x3c9
  4069d4:	add	x2, x2, #0x3e1
  4069d8:	mov	w4, #0x5                   	// #5
  4069dc:	mov	x0, xzr
  4069e0:	mov	x3, x22
  4069e4:	bl	404af0 <dcngettext@plt>
  4069e8:	mov	x2, x0
  4069ec:	mov	w0, wzr
  4069f0:	mov	w1, wzr
  4069f4:	mov	x3, x22
  4069f8:	bl	4041f0 <error@plt>
  4069fc:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406a00:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  406a04:	mov	w26, #0x40000000            	// #1073741824
  406a08:	mov	w27, #0xc0000000            	// #-1073741824
  406a0c:	tst	x19, #0x1ff
  406a10:	b.ne	406a24 <wcrtomb@plt+0x1c04>  // b.any
  406a14:	cbz	x19, 406a88 <wcrtomb@plt+0x1c68>
  406a18:	cbz	x21, 406a88 <wcrtomb@plt+0x1c68>
  406a1c:	ldrb	w8, [x22, #1720]
  406a20:	cbz	w8, 406a88 <wcrtomb@plt+0x1c68>
  406a24:	cbnz	x21, 406a30 <wcrtomb@plt+0x1c10>
  406a28:	b	406a68 <wcrtomb@plt+0x1c48>
  406a2c:	bl	405878 <wcrtomb@plt+0xa58>
  406a30:	ldr	w0, [x25, #976]
  406a34:	cmp	w0, w26
  406a38:	b.lt	406a50 <wcrtomb@plt+0x1c30>  // b.tstop
  406a3c:	add	w0, w0, w27
  406a40:	mov	x1, x20
  406a44:	mov	x2, x19
  406a48:	bl	4292b8 <wcrtomb@plt+0x24498>
  406a4c:	b	406a5c <wcrtomb@plt+0x1c3c>
  406a50:	mov	x1, x20
  406a54:	mov	x2, x19
  406a58:	bl	43c740 <argp_usage@@Base+0xab44>
  406a5c:	mov	x21, x0
  406a60:	cmn	x0, #0x1
  406a64:	b.eq	406a2c <wcrtomb@plt+0x1c0c>  // b.none
  406a68:	cbz	x21, 406a88 <wcrtomb@plt+0x1c68>
  406a6c:	ldrb	w8, [x22, #1720]
  406a70:	cbz	w8, 406ad0 <wcrtomb@plt+0x1cb0>
  406a74:	sub	x19, x19, x21
  406a78:	add	x20, x20, x21
  406a7c:	tst	x19, #0x1ff
  406a80:	b.ne	406a24 <wcrtomb@plt+0x1c04>  // b.any
  406a84:	b	406a14 <wcrtomb@plt+0x1bf4>
  406a88:	ldr	x9, [x24, #920]
  406a8c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406a90:	ldr	x8, [x23, #3984]
  406a94:	ldr	x11, [x10, #3936]
  406a98:	sub	x9, x9, x19
  406a9c:	ldp	x20, x19, [sp, #80]
  406aa0:	ldp	x22, x21, [sp, #64]
  406aa4:	ldp	x24, x23, [sp, #48]
  406aa8:	ldp	x26, x25, [sp, #32]
  406aac:	ldr	x27, [sp, #16]
  406ab0:	and	x9, x9, #0xfffffffffffffe00
  406ab4:	adrp	x12, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406ab8:	add	x11, x11, #0x1
  406abc:	add	x8, x8, x9
  406ac0:	str	x8, [x12, #3944]
  406ac4:	str	x11, [x10, #3936]
  406ac8:	ldp	x29, x30, [sp], #96
  406acc:	ret
  406ad0:	ldr	x9, [x24, #920]
  406ad4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406ad8:	ldr	x8, [x8, #1008]
  406adc:	sub	x19, x9, x19
  406ae0:	cbz	x8, 406ae8 <wcrtomb@plt+0x1cc8>
  406ae4:	blr	x8
  406ae8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406aec:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  406af0:	add	x1, x1, #0x3fa
  406af4:	add	x2, x2, #0x420
  406af8:	mov	w4, #0x5                   	// #5
  406afc:	mov	x0, xzr
  406b00:	mov	x3, x19
  406b04:	bl	404af0 <dcngettext@plt>
  406b08:	mov	x2, x0
  406b0c:	mov	w0, wzr
  406b10:	mov	w1, wzr
  406b14:	mov	x3, x19
  406b18:	bl	4041f0 <error@plt>
  406b1c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  406b20:	sub	sp, sp, #0x90
  406b24:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406b28:	ldr	w0, [x8, #976]
  406b2c:	mov	x1, sp
  406b30:	stp	x29, x30, [sp, #128]
  406b34:	add	x29, sp, #0x80
  406b38:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  406b3c:	cbz	w0, 406b58 <wcrtomb@plt+0x1d38>
  406b40:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406b44:	ldr	x8, [x8, #736]
  406b48:	ldr	x0, [x8]
  406b4c:	bl	41ad6c <wcrtomb@plt+0x15f4c>
  406b50:	mov	w0, wzr
  406b54:	b	406b6c <wcrtomb@plt+0x1d4c>
  406b58:	ldr	w8, [sp, #16]
  406b5c:	and	w8, w8, #0xf000
  406b60:	orr	w8, w8, #0x4000
  406b64:	cmp	w8, #0x6, lsl #12
  406b68:	cset	w0, eq  // eq = none
  406b6c:	ldp	x29, x30, [sp, #128]
  406b70:	add	sp, sp, #0x90
  406b74:	ret
  406b78:	sub	sp, sp, #0x90
  406b7c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406b80:	ldr	w8, [x8, #860]
  406b84:	stp	x29, x30, [sp, #80]
  406b88:	stp	x24, x23, [sp, #96]
  406b8c:	stp	x22, x21, [sp, #112]
  406b90:	cmp	w8, #0x8
  406b94:	stp	x20, x19, [sp, #128]
  406b98:	add	x29, sp, #0x50
  406b9c:	b.hi	406bc4 <wcrtomb@plt+0x1da4>  // b.pmore
  406ba0:	mov	w9, #0x1                   	// #1
  406ba4:	lsl	w8, w9, w8
  406ba8:	mov	w9, #0x106                 	// #262
  406bac:	tst	w8, w9
  406bb0:	b.eq	406bc4 <wcrtomb@plt+0x1da4>  // b.none
  406bb4:	mov	w0, #0x2                   	// #2
  406bb8:	bl	40702c <wcrtomb@plt+0x220c>
  406bbc:	tbnz	w0, #0, 406bd0 <wcrtomb@plt+0x1db0>
  406bc0:	b	406ee8 <wcrtomb@plt+0x20c8>
  406bc4:	mov	w0, wzr
  406bc8:	bl	40702c <wcrtomb@plt+0x220c>
  406bcc:	tbz	w0, #0, 406ee8 <wcrtomb@plt+0x20c8>
  406bd0:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  406bd4:	mov	w20, #0x40000000            	// #1073741824
  406bd8:	mov	w21, #0xc0000000            	// #-1073741824
  406bdc:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406be0:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  406be4:	b	406c00 <wcrtomb@plt+0x1de0>
  406be8:	ldr	x1, [x23, #3984]
  406bec:	ldr	x2, [x22, #920]
  406bf0:	bl	43c740 <argp_usage@@Base+0xab44>
  406bf4:	cmn	x0, #0x1
  406bf8:	b.ne	406c24 <wcrtomb@plt+0x1e04>  // b.any
  406bfc:	bl	405878 <wcrtomb@plt+0xa58>
  406c00:	ldr	w0, [x19, #976]
  406c04:	cmp	w0, w20
  406c08:	b.lt	406be8 <wcrtomb@plt+0x1dc8>  // b.tstop
  406c0c:	ldr	x1, [x23, #3984]
  406c10:	ldr	x2, [x22, #920]
  406c14:	add	w0, w0, w21
  406c18:	bl	4292b8 <wcrtomb@plt+0x24498>
  406c1c:	cmn	x0, #0x1
  406c20:	b.eq	406bfc <wcrtomb@plt+0x1ddc>  // b.none
  406c24:	ldr	x8, [x22, #920]
  406c28:	cmp	x0, x8
  406c2c:	b.eq	406c34 <wcrtomb@plt+0x1e14>  // b.none
  406c30:	bl	40694c <wcrtomb@plt+0x1b2c>
  406c34:	bl	4055d4 <wcrtomb@plt+0x7b4>
  406c38:	stur	x0, [x29, #-8]
  406c3c:	cbz	x0, 406cc8 <wcrtomb@plt+0x1ea8>
  406c40:	ldrb	w8, [x0, #156]
  406c44:	cmp	w8, #0x4d
  406c48:	b.eq	406d4c <wcrtomb@plt+0x1f2c>  // b.none
  406c4c:	cmp	w8, #0x56
  406c50:	b.eq	406d04 <wcrtomb@plt+0x1ee4>  // b.none
  406c54:	cmp	w8, #0x67
  406c58:	b.ne	406da8 <wcrtomb@plt+0x1f88>  // b.any
  406c5c:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406c60:	add	x19, x19, #0x4b0
  406c64:	mov	x0, x19
  406c68:	bl	422428 <wcrtomb@plt+0x1d608>
  406c6c:	sub	x0, x29, #0x8
  406c70:	mov	w2, #0x2                   	// #2
  406c74:	mov	x1, x19
  406c78:	bl	4172f0 <wcrtomb@plt+0x124d0>
  406c7c:	cmp	w0, #0x2
  406c80:	b.ne	406cc8 <wcrtomb@plt+0x1ea8>  // b.any
  406c84:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406c88:	add	x19, x19, #0x4b0
  406c8c:	mov	x0, x19
  406c90:	bl	411c30 <wcrtomb@plt+0xce10>
  406c94:	mov	x0, x19
  406c98:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  406c9c:	sub	x0, x29, #0x8
  406ca0:	mov	x1, x19
  406ca4:	mov	w2, wzr
  406ca8:	bl	4172f0 <wcrtomb@plt+0x124d0>
  406cac:	cmp	w0, #0x5
  406cb0:	b.eq	406da8 <wcrtomb@plt+0x1f88>  // b.none
  406cb4:	cmp	w0, #0x1
  406cb8:	b.ne	406cc8 <wcrtomb@plt+0x1ea8>  // b.any
  406cbc:	ldur	x0, [x29, #-8]
  406cc0:	bl	405744 <wcrtomb@plt+0x924>
  406cc4:	b	406da8 <wcrtomb@plt+0x1f88>
  406cc8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406ccc:	ldr	x8, [x8, #1008]
  406cd0:	cbz	x8, 406cd8 <wcrtomb@plt+0x1eb8>
  406cd4:	blr	x8
  406cd8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406cdc:	add	x1, x1, #0x447
  406ce0:	mov	w2, #0x5                   	// #5
  406ce4:	mov	x0, xzr
  406ce8:	bl	404bf0 <dcgettext@plt>
  406cec:	mov	x2, x0
  406cf0:	mov	w0, wzr
  406cf4:	mov	w1, wzr
  406cf8:	bl	4041f0 <error@plt>
  406cfc:	mov	w0, wzr
  406d00:	b	406eec <wcrtomb@plt+0x20cc>
  406d04:	bl	407414 <wcrtomb@plt+0x25f4>
  406d08:	tbz	w0, #0, 406e58 <wcrtomb@plt+0x2038>
  406d0c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406d10:	add	x0, x0, #0x4b0
  406d14:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  406d18:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406d1c:	ldr	x1, [x8, #4072]
  406d20:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406d24:	add	x0, x0, #0xf80
  406d28:	mov	w2, #0x64                  	// #100
  406d2c:	bl	4196c0 <wcrtomb@plt+0x148a0>
  406d30:	ldur	x0, [x29, #-8]
  406d34:	bl	405744 <wcrtomb@plt+0x924>
  406d38:	bl	4055d4 <wcrtomb@plt+0x7b4>
  406d3c:	stur	x0, [x29, #-8]
  406d40:	ldrb	w8, [x0, #156]
  406d44:	cmp	w8, #0x4d
  406d48:	b.ne	406da8 <wcrtomb@plt+0x1f88>  // b.any
  406d4c:	bl	407414 <wcrtomb@plt+0x25f4>
  406d50:	tbz	w0, #0, 406e58 <wcrtomb@plt+0x2038>
  406d54:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406d58:	add	x0, x0, #0x4b0
  406d5c:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  406d60:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406d64:	ldr	x1, [x19, #4072]
  406d68:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406d6c:	add	x0, x0, #0xf88
  406d70:	mov	w2, #0x64                  	// #100
  406d74:	bl	4196c0 <wcrtomb@plt+0x148a0>
  406d78:	ldr	x8, [x19, #4072]
  406d7c:	mov	w1, #0xc                   	// #12
  406d80:	add	x0, x8, #0x7c
  406d84:	bl	4184fc <wcrtomb@plt+0x136dc>
  406d88:	ldr	x8, [x19, #4072]
  406d8c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406d90:	str	x0, [x9, #4000]
  406d94:	mov	w1, #0xc                   	// #12
  406d98:	add	x0, x8, #0x171
  406d9c:	bl	4184fc <wcrtomb@plt+0x136dc>
  406da0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406da4:	str	x0, [x8, #4016]
  406da8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406dac:	ldr	x8, [x21, #1192]
  406db0:	cbz	x8, 406ee4 <wcrtomb@plt+0x20c4>
  406db4:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406db8:	ldr	x19, [x22, #3976]
  406dbc:	cbz	x19, 406e0c <wcrtomb@plt+0x1fec>
  406dc0:	ldr	x20, [x8, #16]
  406dc4:	mov	x0, x19
  406dc8:	mov	x1, x20
  406dcc:	bl	404920 <strcmp@plt>
  406dd0:	cbz	w0, 406eac <wcrtomb@plt+0x208c>
  406dd4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406dd8:	ldr	w8, [x8, #816]
  406ddc:	orr	w8, w8, #0x4
  406de0:	cmp	w8, #0x6
  406de4:	b.ne	406e0c <wcrtomb@plt+0x1fec>  // b.any
  406de8:	mov	x0, x20
  406dec:	bl	404190 <strlen@plt>
  406df0:	cmp	x0, #0x64
  406df4:	b.cc	406e0c <wcrtomb@plt+0x1fec>  // b.lo, b.ul, b.last
  406df8:	mov	w2, #0x64                  	// #100
  406dfc:	mov	x0, x19
  406e00:	mov	x1, x20
  406e04:	bl	4045a0 <strncmp@plt>
  406e08:	cbz	w0, 406e60 <wcrtomb@plt+0x2040>
  406e0c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406e10:	ldr	x8, [x8, #1008]
  406e14:	cbz	x8, 406e1c <wcrtomb@plt+0x1ffc>
  406e18:	blr	x8
  406e1c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406e20:	add	x1, x1, #0x46d
  406e24:	mov	w2, #0x5                   	// #5
  406e28:	mov	x0, xzr
  406e2c:	bl	404bf0 <dcgettext@plt>
  406e30:	ldr	x8, [x21, #1192]
  406e34:	mov	x19, x0
  406e38:	ldr	x8, [x8, #16]
  406e3c:	mov	x0, x8
  406e40:	bl	43c05c <argp_usage@@Base+0xa460>
  406e44:	mov	x3, x0
  406e48:	mov	w0, wzr
  406e4c:	mov	w1, wzr
  406e50:	mov	x2, x19
  406e54:	bl	4041f0 <error@plt>
  406e58:	mov	w0, wzr
  406e5c:	b	406eec <wcrtomb@plt+0x20cc>
  406e60:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406e64:	ldr	x8, [x8, #1008]
  406e68:	cbz	x8, 406e70 <wcrtomb@plt+0x2050>
  406e6c:	blr	x8
  406e70:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406e74:	add	x1, x1, #0x490
  406e78:	mov	w2, #0x5                   	// #5
  406e7c:	mov	x0, xzr
  406e80:	bl	404bf0 <dcgettext@plt>
  406e84:	ldr	x8, [x21, #1192]
  406e88:	mov	x19, x0
  406e8c:	ldr	x8, [x8, #16]
  406e90:	mov	x0, x8
  406e94:	bl	43c05c <argp_usage@@Base+0xa460>
  406e98:	mov	x3, x0
  406e9c:	mov	w0, wzr
  406ea0:	mov	w1, wzr
  406ea4:	mov	x2, x19
  406ea8:	bl	4041f0 <error@plt>
  406eac:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406eb0:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  406eb4:	ldr	x9, [x24, #4000]
  406eb8:	ldr	x8, [x23, #4016]
  406ebc:	adds	x11, x8, x9
  406ec0:	b.cs	406f04 <wcrtomb@plt+0x20e4>  // b.hs, b.nlast
  406ec4:	ldr	x9, [x21, #1192]
  406ec8:	ldr	x10, [x9, #24]
  406ecc:	cmp	x10, x11
  406ed0:	b.ne	406f04 <wcrtomb@plt+0x20e4>  // b.any
  406ed4:	ldr	x9, [x9, #32]
  406ed8:	sub	x9, x10, x9
  406edc:	cmp	x9, x8
  406ee0:	b.ne	406fa0 <wcrtomb@plt+0x2180>  // b.any
  406ee4:	bl	4074b0 <wcrtomb@plt+0x2690>
  406ee8:	mov	w0, #0x1                   	// #1
  406eec:	ldp	x20, x19, [sp, #128]
  406ef0:	ldp	x22, x21, [sp, #112]
  406ef4:	ldp	x24, x23, [sp, #96]
  406ef8:	ldp	x29, x30, [sp, #80]
  406efc:	add	sp, sp, #0x90
  406f00:	ret
  406f04:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406f08:	ldr	x8, [x8, #1008]
  406f0c:	cbz	x8, 406f14 <wcrtomb@plt+0x20f4>
  406f10:	blr	x8
  406f14:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406f18:	add	x1, x1, #0x4d8
  406f1c:	mov	w2, #0x5                   	// #5
  406f20:	mov	x0, xzr
  406f24:	bl	404bf0 <dcgettext@plt>
  406f28:	ldr	x8, [x22, #3976]
  406f2c:	mov	x19, x0
  406f30:	mov	x0, x8
  406f34:	bl	43c05c <argp_usage@@Base+0xa460>
  406f38:	ldr	x8, [x21, #1192]
  406f3c:	mov	x20, x0
  406f40:	sub	x1, x29, #0x20
  406f44:	ldr	x8, [x8, #24]
  406f48:	mov	x0, x8
  406f4c:	bl	43650c <argp_usage@@Base+0x4910>
  406f50:	ldr	x8, [x24, #4000]
  406f54:	mov	x21, x0
  406f58:	add	x1, sp, #0x18
  406f5c:	mov	x0, x8
  406f60:	bl	43650c <argp_usage@@Base+0x4910>
  406f64:	ldr	x8, [x23, #4016]
  406f68:	mov	x22, x0
  406f6c:	mov	x1, sp
  406f70:	mov	x0, x8
  406f74:	bl	43650c <argp_usage@@Base+0x4910>
  406f78:	mov	x6, x0
  406f7c:	mov	w0, wzr
  406f80:	mov	w1, wzr
  406f84:	mov	x2, x19
  406f88:	mov	x3, x20
  406f8c:	mov	x4, x21
  406f90:	mov	x5, x22
  406f94:	bl	4041f0 <error@plt>
  406f98:	mov	w0, wzr
  406f9c:	b	406eec <wcrtomb@plt+0x20cc>
  406fa0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  406fa4:	ldr	x8, [x8, #1008]
  406fa8:	cbz	x8, 406fb0 <wcrtomb@plt+0x2190>
  406fac:	blr	x8
  406fb0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  406fb4:	add	x1, x1, #0x4fd
  406fb8:	mov	w2, #0x5                   	// #5
  406fbc:	mov	x0, xzr
  406fc0:	bl	404bf0 <dcgettext@plt>
  406fc4:	ldr	x8, [x21, #1192]
  406fc8:	mov	x19, x0
  406fcc:	sub	x1, x29, #0x20
  406fd0:	ldr	x8, [x8, #24]
  406fd4:	mov	x0, x8
  406fd8:	bl	43650c <argp_usage@@Base+0x4910>
  406fdc:	ldr	x8, [x21, #1192]
  406fe0:	mov	x20, x0
  406fe4:	add	x1, sp, #0x18
  406fe8:	ldr	x8, [x8, #32]
  406fec:	mov	x0, x8
  406ff0:	bl	43650c <argp_usage@@Base+0x4910>
  406ff4:	ldr	x8, [x23, #4016]
  406ff8:	mov	x21, x0
  406ffc:	mov	x1, sp
  407000:	mov	x0, x8
  407004:	bl	43650c <argp_usage@@Base+0x4910>
  407008:	mov	x5, x0
  40700c:	mov	w0, wzr
  407010:	mov	w1, wzr
  407014:	mov	x2, x19
  407018:	mov	x3, x20
  40701c:	mov	x4, x21
  407020:	bl	4041f0 <error@plt>
  407024:	mov	w0, wzr
  407028:	b	406eec <wcrtomb@plt+0x20cc>
  40702c:	stp	x29, x30, [sp, #-96]!
  407030:	stp	x22, x21, [sp, #64]
  407034:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407038:	ldr	x8, [x22, #1728]
  40703c:	stp	x24, x23, [sp, #48]
  407040:	stp	x20, x19, [sp, #80]
  407044:	mov	w19, w0
  407048:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  40704c:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  407050:	str	x27, [sp, #16]
  407054:	stp	x26, x25, [sp, #32]
  407058:	mov	x29, sp
  40705c:	cbnz	x8, 407094 <wcrtomb@plt+0x2274>
  407060:	ldr	x8, [x21, #768]
  407064:	cbnz	x8, 407094 <wcrtomb@plt+0x2274>
  407068:	ldr	w8, [x23, #976]
  40706c:	cbz	w8, 40707c <wcrtomb@plt+0x225c>
  407070:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407074:	ldr	x0, [x8, #1152]
  407078:	b	407090 <wcrtomb@plt+0x2270>
  40707c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  407080:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  407084:	add	x0, x0, #0x52c
  407088:	add	x1, x1, #0x133
  40708c:	bl	4044c0 <fopen@plt>
  407090:	str	x0, [x22, #1728]
  407094:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407098:	ldrb	w8, [x8, #4024]
  40709c:	cbz	w8, 4070a8 <wcrtomb@plt+0x2288>
  4070a0:	mov	w0, wzr
  4070a4:	b	407180 <wcrtomb@plt+0x2360>
  4070a8:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  4070ac:	ldrb	w8, [x24, #842]
  4070b0:	cbz	w8, 4070b8 <wcrtomb@plt+0x2298>
  4070b4:	bl	409b28 <wcrtomb@plt+0x4d08>
  4070b8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4070bc:	add	x0, x0, #0xf80
  4070c0:	mov	x1, xzr
  4070c4:	bl	419680 <wcrtomb@plt+0x14860>
  4070c8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4070cc:	add	x0, x0, #0xf88
  4070d0:	mov	x1, xzr
  4070d4:	bl	419680 <wcrtomb@plt+0x14860>
  4070d8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4070dc:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4070e0:	ldr	w0, [x23, #976]
  4070e4:	str	xzr, [x8, #4016]
  4070e8:	ldr	x8, [x10, #3984]
  4070ec:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4070f0:	mov	w10, #0x40000000            	// #1073741824
  4070f4:	str	xzr, [x9, #4000]
  4070f8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4070fc:	cmp	w0, w10
  407100:	str	x8, [x9, #4008]
  407104:	b.lt	407120 <wcrtomb@plt+0x2300>  // b.tstop
  407108:	mov	w8, #0xc0000000            	// #-1073741824
  40710c:	add	w0, w0, w8
  407110:	bl	429260 <wcrtomb@plt+0x24440>
  407114:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  407118:	cbnz	w0, 40712c <wcrtomb@plt+0x230c>
  40711c:	b	407138 <wcrtomb@plt+0x2318>
  407120:	bl	4047c0 <close@plt>
  407124:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  407128:	cbz	w0, 407138 <wcrtomb@plt+0x2318>
  40712c:	ldr	x8, [x25, #736]
  407130:	ldr	x0, [x8]
  407134:	bl	428014 <wcrtomb@plt+0x231f4>
  407138:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40713c:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  407140:	ldr	x8, [x25, #736]
  407144:	ldr	x9, [x9, #688]
  407148:	ldr	x10, [x10, #848]
  40714c:	add	x8, x8, #0x8
  407150:	str	x8, [x25, #736]
  407154:	add	x10, x9, x10, lsl #3
  407158:	cmp	x8, x10
  40715c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407160:	b.ne	407170 <wcrtomb@plt+0x2350>  // b.any
  407164:	str	x9, [x25, #736]
  407168:	mov	w9, #0x1                   	// #1
  40716c:	strb	w9, [x8, #1736]
  407170:	ldrb	w8, [x8, #1736]
  407174:	cmp	w8, #0x1
  407178:	b.eq	40719c <wcrtomb@plt+0x237c>  // b.none
  40717c:	b	407220 <wcrtomb@plt+0x2400>
  407180:	ldp	x20, x19, [sp, #80]
  407184:	ldp	x22, x21, [sp, #64]
  407188:	ldp	x24, x23, [sp, #48]
  40718c:	ldp	x26, x25, [sp, #32]
  407190:	ldr	x27, [sp, #16]
  407194:	ldp	x29, x30, [sp], #96
  407198:	ret
  40719c:	ldr	x8, [x21, #768]
  4071a0:	cbz	x8, 407218 <wcrtomb@plt+0x23f8>
  4071a4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4071a8:	ldr	x8, [x8, #664]
  4071ac:	cbz	x8, 4071b4 <wcrtomb@plt+0x2394>
  4071b0:	bl	405e08 <wcrtomb@plt+0xfe8>
  4071b4:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  4071b8:	ldr	w8, [x8, #1704]
  4071bc:	ldr	x0, [x25, #736]
  4071c0:	add	w1, w8, #0x1
  4071c4:	bl	420c38 <wcrtomb@plt+0x1be18>
  4071c8:	cbz	w0, 407220 <wcrtomb@plt+0x2400>
  4071cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4071d0:	ldr	x8, [x8, #1008]
  4071d4:	cbz	x8, 4071dc <wcrtomb@plt+0x23bc>
  4071d8:	blr	x8
  4071dc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4071e0:	add	x1, x1, #0x535
  4071e4:	mov	w2, #0x5                   	// #5
  4071e8:	mov	x0, xzr
  4071ec:	bl	404bf0 <dcgettext@plt>
  4071f0:	ldr	x8, [x21, #768]
  4071f4:	mov	x19, x0
  4071f8:	mov	x0, x8
  4071fc:	bl	43c05c <argp_usage@@Base+0xa460>
  407200:	mov	x3, x0
  407204:	mov	w0, wzr
  407208:	mov	w1, wzr
  40720c:	mov	x2, x19
  407210:	bl	4041f0 <error@plt>
  407214:	bl	40dda4 <wcrtomb@plt+0x8f84>
  407218:	ldr	x0, [x22, #1728]
  40721c:	bl	407520 <wcrtomb@plt+0x2700>
  407220:	ldr	x27, [x25, #736]
  407224:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  407228:	add	x1, x1, #0xabd
  40722c:	ldr	x20, [x27]
  407230:	mov	x0, x20
  407234:	bl	404920 <strcmp@plt>
  407238:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  40723c:	cbz	w0, 40726c <wcrtomb@plt+0x244c>
  407240:	ldrb	w8, [x24, #842]
  407244:	cbz	w8, 4072b4 <wcrtomb@plt+0x2494>
  407248:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40724c:	ldrb	w8, [x8, #1016]
  407250:	cbz	w8, 4072f0 <wcrtomb@plt+0x24d0>
  407254:	ldr	x0, [x27]
  407258:	mov	w1, #0x42                  	// #66
  40725c:	mov	w2, #0x1b6                 	// #438
  407260:	bl	404530 <open@plt>
  407264:	str	w0, [x23, #976]
  407268:	b	40727c <wcrtomb@plt+0x245c>
  40726c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407270:	mov	w9, #0x1                   	// #1
  407274:	strb	w9, [x8, #1720]
  407278:	str	wzr, [x23, #976]
  40727c:	ldr	w8, [x23, #976]
  407280:	tbz	w8, #31, 407374 <wcrtomb@plt+0x2554>
  407284:	ldr	x8, [x25, #736]
  407288:	ldr	x0, [x8]
  40728c:	bl	428198 <wcrtomb@plt+0x23378>
  407290:	cmp	w19, #0x1
  407294:	b.ne	40719c <wcrtomb@plt+0x237c>  // b.any
  407298:	ldrb	w8, [x24, #842]
  40729c:	ldrb	w9, [x26, #757]
  4072a0:	cmp	w8, #0x0
  4072a4:	ccmp	w9, #0x0, #0x4, eq  // eq = none
  4072a8:	b.eq	40719c <wcrtomb@plt+0x237c>  // b.none
  4072ac:	bl	41a55c <wcrtomb@plt+0x1573c>
  4072b0:	b	40719c <wcrtomb@plt+0x237c>
  4072b4:	cmp	w19, #0x2
  4072b8:	b.eq	407248 <wcrtomb@plt+0x2428>  // b.none
  4072bc:	cmp	w19, #0x1
  4072c0:	b.eq	407340 <wcrtomb@plt+0x2520>  // b.none
  4072c4:	cbnz	w19, 40727c <wcrtomb@plt+0x245c>
  4072c8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4072cc:	ldrb	w8, [x8, #1016]
  4072d0:	cbz	w8, 4073c4 <wcrtomb@plt+0x25a4>
  4072d4:	ldr	x0, [x27]
  4072d8:	mov	w2, #0x1b6                 	// #438
  4072dc:	mov	w1, wzr
  4072e0:	bl	404530 <open@plt>
  4072e4:	str	w0, [x23, #976]
  4072e8:	bl	407828 <wcrtomb@plt+0x2a08>
  4072ec:	b	40727c <wcrtomb@plt+0x245c>
  4072f0:	mov	w1, #0x3a                  	// #58
  4072f4:	mov	x0, x20
  4072f8:	bl	404a70 <strchr@plt>
  4072fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407300:	str	x0, [x8, #1024]
  407304:	cbz	x0, 407254 <wcrtomb@plt+0x2434>
  407308:	ldr	x20, [x27]
  40730c:	subs	x2, x0, x20
  407310:	b.ls	407254 <wcrtomb@plt+0x2434>  // b.plast
  407314:	mov	w1, #0x2f                  	// #47
  407318:	mov	x0, x20
  40731c:	bl	404b70 <memchr@plt>
  407320:	cbnz	x0, 407254 <wcrtomb@plt+0x2434>
  407324:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407328:	ldr	x3, [x8, #808]
  40732c:	mov	w1, #0x42                  	// #66
  407330:	mov	w2, #0x40000000            	// #1073741824
  407334:	mov	x0, x20
  407338:	bl	428b14 <wcrtomb@plt+0x23cf4>
  40733c:	b	407264 <wcrtomb@plt+0x2444>
  407340:	ldrb	w8, [x26, #757]
  407344:	cbz	w8, 407354 <wcrtomb@plt+0x2534>
  407348:	mov	w1, #0x1                   	// #1
  40734c:	mov	x0, x20
  407350:	bl	41a318 <wcrtomb@plt+0x154f8>
  407354:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407358:	ldrb	w8, [x8, #1016]
  40735c:	cbz	w8, 40737c <wcrtomb@plt+0x255c>
  407360:	ldr	x8, [x25, #736]
  407364:	mov	w1, #0x1b6                 	// #438
  407368:	ldr	x0, [x8]
  40736c:	bl	404db0 <creat@plt>
  407370:	b	407264 <wcrtomb@plt+0x2444>
  407374:	mov	w0, #0x1                   	// #1
  407378:	b	407180 <wcrtomb@plt+0x2360>
  40737c:	ldr	x20, [x25, #736]
  407380:	mov	w1, #0x3a                  	// #58
  407384:	ldr	x0, [x20]
  407388:	bl	404a70 <strchr@plt>
  40738c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407390:	str	x0, [x8, #1024]
  407394:	cbz	x0, 407360 <wcrtomb@plt+0x2540>
  407398:	ldr	x20, [x20]
  40739c:	subs	x2, x0, x20
  4073a0:	b.ls	407360 <wcrtomb@plt+0x2540>  // b.plast
  4073a4:	mov	w1, #0x2f                  	// #47
  4073a8:	mov	x0, x20
  4073ac:	bl	404b70 <memchr@plt>
  4073b0:	cbnz	x0, 407360 <wcrtomb@plt+0x2540>
  4073b4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4073b8:	ldr	x3, [x8, #808]
  4073bc:	mov	w1, #0x41                  	// #65
  4073c0:	b	407330 <wcrtomb@plt+0x2510>
  4073c4:	mov	w1, #0x3a                  	// #58
  4073c8:	mov	x0, x20
  4073cc:	bl	404a70 <strchr@plt>
  4073d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4073d4:	str	x0, [x8, #1024]
  4073d8:	cbz	x0, 4072d4 <wcrtomb@plt+0x24b4>
  4073dc:	ldr	x20, [x27]
  4073e0:	subs	x2, x0, x20
  4073e4:	b.ls	4072d4 <wcrtomb@plt+0x24b4>  // b.plast
  4073e8:	mov	w1, #0x2f                  	// #47
  4073ec:	mov	x0, x20
  4073f0:	bl	404b70 <memchr@plt>
  4073f4:	cbnz	x0, 4072d4 <wcrtomb@plt+0x24b4>
  4073f8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4073fc:	ldr	x3, [x8, #808]
  407400:	mov	w2, #0x40000000            	// #1073741824
  407404:	mov	x0, x20
  407408:	mov	w1, wzr
  40740c:	bl	428b14 <wcrtomb@plt+0x23cf4>
  407410:	b	4072e4 <wcrtomb@plt+0x24c4>
  407414:	stp	x29, x30, [sp, #-32]!
  407418:	str	x19, [sp, #16]
  40741c:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407420:	add	x19, x19, #0x4b0
  407424:	mov	x0, x19
  407428:	mov	x29, sp
  40742c:	bl	422428 <wcrtomb@plt+0x1d608>
  407430:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407434:	add	x0, x0, #0xfe8
  407438:	mov	x1, x19
  40743c:	mov	w2, wzr
  407440:	bl	4172f0 <wcrtomb@plt+0x124d0>
  407444:	cmp	w0, #0x1
  407448:	b.ne	407460 <wcrtomb@plt+0x2640>  // b.any
  40744c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407450:	ldr	x0, [x8, #4072]
  407454:	bl	405744 <wcrtomb@plt+0x924>
  407458:	mov	w0, #0x1                   	// #1
  40745c:	b	4074a4 <wcrtomb@plt+0x2684>
  407460:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407464:	ldr	x8, [x8, #1008]
  407468:	cbz	x8, 407470 <wcrtomb@plt+0x2650>
  40746c:	blr	x8
  407470:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  407474:	add	x1, x1, #0x447
  407478:	mov	w2, #0x5                   	// #5
  40747c:	mov	x0, xzr
  407480:	bl	404bf0 <dcgettext@plt>
  407484:	mov	x2, x0
  407488:	mov	w0, wzr
  40748c:	mov	w1, wzr
  407490:	bl	4041f0 <error@plt>
  407494:	mov	w0, wzr
  407498:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40749c:	mov	w9, #0x2                   	// #2
  4074a0:	str	w9, [x8, #3456]
  4074a4:	ldr	x19, [sp, #16]
  4074a8:	ldp	x29, x30, [sp], #32
  4074ac:	ret
  4074b0:	stp	x29, x30, [sp, #-16]!
  4074b4:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  4074b8:	ldr	w9, [x8, #1704]
  4074bc:	mov	x29, sp
  4074c0:	add	w10, w9, #0x1
  4074c4:	cmn	w9, #0x2
  4074c8:	str	w10, [x8, #1704]
  4074cc:	b.le	4074e8 <wcrtomb@plt+0x26c8>
  4074d0:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  4074d4:	ldr	w9, [x8, #2000]
  4074d8:	add	w9, w9, #0x1
  4074dc:	str	w9, [x8, #2000]
  4074e0:	ldp	x29, x30, [sp], #16
  4074e4:	ret
  4074e8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4074ec:	ldr	x8, [x8, #1008]
  4074f0:	cbz	x8, 4074f8 <wcrtomb@plt+0x26d8>
  4074f4:	blr	x8
  4074f8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4074fc:	add	x1, x1, #0x6db
  407500:	mov	w2, #0x5                   	// #5
  407504:	mov	x0, xzr
  407508:	bl	404bf0 <dcgettext@plt>
  40750c:	mov	x2, x0
  407510:	mov	w0, wzr
  407514:	mov	w1, wzr
  407518:	bl	4041f0 <error@plt>
  40751c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  407520:	sub	sp, sp, #0x70
  407524:	stp	x24, x23, [sp, #64]
  407528:	stp	x20, x19, [sp, #96]
  40752c:	adrp	x20, 450000 <_obstack_memory_used@@Base+0x11da0>
  407530:	adrp	x24, 450000 <_obstack_memory_used@@Base+0x11da0>
  407534:	stp	x26, x25, [sp, #48]
  407538:	stp	x22, x21, [sp, #80]
  40753c:	mov	x19, x0
  407540:	mov	w26, wzr
  407544:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407548:	add	x20, x20, #0x547
  40754c:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  407550:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  407554:	add	x24, x24, #0x148
  407558:	stp	x29, x30, [sp, #16]
  40755c:	stp	x28, x27, [sp, #32]
  407560:	add	x29, sp, #0x10
  407564:	stp	xzr, xzr, [sp]
  407568:	ldr	x1, [x25, #1136]
  40756c:	mov	w0, #0x7                   	// #7
  407570:	bl	404b90 <fputc_unlocked@plt>
  407574:	ldr	x27, [x25, #1136]
  407578:	mov	w2, #0x5                   	// #5
  40757c:	mov	x0, xzr
  407580:	mov	x1, x20
  407584:	bl	404bf0 <dcgettext@plt>
  407588:	ldr	x8, [x23, #736]
  40758c:	mov	x28, x0
  407590:	ldr	w9, [x21, #1704]
  407594:	ldr	x0, [x8]
  407598:	add	w22, w9, #0x1
  40759c:	bl	43c05c <argp_usage@@Base+0xa460>
  4075a0:	mov	x4, x0
  4075a4:	mov	w1, #0x1                   	// #1
  4075a8:	mov	x0, x27
  4075ac:	mov	x2, x28
  4075b0:	mov	w3, w22
  4075b4:	bl	404910 <__fprintf_chk@plt>
  4075b8:	ldr	x0, [x25, #1136]
  4075bc:	bl	404ad0 <fflush_unlocked@plt>
  4075c0:	add	x0, sp, #0x8
  4075c4:	mov	x1, sp
  4075c8:	mov	x2, x19
  4075cc:	bl	4049a0 <getline@plt>
  4075d0:	cmp	x0, #0x0
  4075d4:	b.le	4077ac <wcrtomb@plt+0x298c>
  4075d8:	ldr	x9, [sp, #8]
  4075dc:	ldrb	w8, [x9]
  4075e0:	cmp	w8, #0x58
  4075e4:	b.le	407664 <wcrtomb@plt+0x2844>
  4075e8:	sub	w8, w8, #0x59
  4075ec:	cmp	w8, #0x20
  4075f0:	b.hi	4076fc <wcrtomb@plt+0x28dc>  // b.pmore
  4075f4:	adr	x10, 407604 <wcrtomb@plt+0x27e4>
  4075f8:	ldrb	w11, [x24, x8]
  4075fc:	add	x10, x10, x11, lsl #2
  407600:	br	x10
  407604:	add	x0, x9, #0x1
  407608:	b	407610 <wcrtomb@plt+0x27f0>
  40760c:	add	x0, x0, #0x1
  407610:	ldrb	w8, [x0]
  407614:	cmp	w8, #0x20
  407618:	b.eq	40760c <wcrtomb@plt+0x27ec>  // b.none
  40761c:	cmp	w8, #0x9
  407620:	b.eq	40760c <wcrtomb@plt+0x27ec>  // b.none
  407624:	mov	x8, xzr
  407628:	ldrb	w9, [x0, x8]
  40762c:	cbz	w9, 407644 <wcrtomb@plt+0x2824>
  407630:	cmp	w9, #0xa
  407634:	b.eq	407644 <wcrtomb@plt+0x2824>  // b.none
  407638:	add	x8, x8, #0x1
  40763c:	ldrb	w9, [x0, x8]
  407640:	cbnz	w9, 407630 <wcrtomb@plt+0x2810>
  407644:	strb	wzr, [x0, x8]
  407648:	ldrb	w8, [x0]
  40764c:	cbz	w8, 40772c <wcrtomb@plt+0x290c>
  407650:	bl	43d39c <argp_usage@@Base+0xb7a0>
  407654:	ldr	x8, [x23, #736]
  407658:	mov	w26, #0x1                   	// #1
  40765c:	str	x0, [x8]
  407660:	b	407724 <wcrtomb@plt+0x2904>
  407664:	cmp	w8, #0xa
  407668:	b.eq	407768 <wcrtomb@plt+0x2948>  // b.none
  40766c:	cmp	w8, #0x21
  407670:	b.eq	4076f0 <wcrtomb@plt+0x28d0>  // b.none
  407674:	cmp	w8, #0x3f
  407678:	b.ne	4076fc <wcrtomb@plt+0x28dc>  // b.any
  40767c:	ldr	x22, [x25, #1136]
  407680:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  407684:	mov	w2, #0x5                   	// #5
  407688:	mov	x0, xzr
  40768c:	add	x1, x1, #0x5b3
  407690:	bl	404bf0 <dcgettext@plt>
  407694:	mov	x2, x0
  407698:	mov	w1, #0x1                   	// #1
  40769c:	mov	x0, x22
  4076a0:	bl	404910 <__fprintf_chk@plt>
  4076a4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4076a8:	ldrb	w8, [x8, #776]
  4076ac:	cbnz	w8, 4076d8 <wcrtomb@plt+0x28b8>
  4076b0:	ldr	x22, [x25, #1136]
  4076b4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4076b8:	mov	w2, #0x5                   	// #5
  4076bc:	mov	x0, xzr
  4076c0:	add	x1, x1, #0x63b
  4076c4:	bl	404bf0 <dcgettext@plt>
  4076c8:	mov	x2, x0
  4076cc:	mov	w1, #0x1                   	// #1
  4076d0:	mov	x0, x22
  4076d4:	bl	404910 <__fprintf_chk@plt>
  4076d8:	ldr	x22, [x25, #1136]
  4076dc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4076e0:	mov	w2, #0x5                   	// #5
  4076e4:	mov	x0, xzr
  4076e8:	add	x1, x1, #0x65c
  4076ec:	b	407710 <wcrtomb@plt+0x28f0>
  4076f0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4076f4:	ldrb	w8, [x8, #776]
  4076f8:	cbz	w8, 407760 <wcrtomb@plt+0x2940>
  4076fc:	ldr	x22, [x25, #1136]
  407700:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  407704:	mov	w2, #0x5                   	// #5
  407708:	mov	x0, xzr
  40770c:	add	x1, x1, #0x6ba
  407710:	bl	404bf0 <dcgettext@plt>
  407714:	mov	x2, x0
  407718:	mov	w1, #0x1                   	// #1
  40771c:	mov	x0, x22
  407720:	bl	404910 <__fprintf_chk@plt>
  407724:	tbz	w26, #0, 407568 <wcrtomb@plt+0x2748>
  407728:	b	407768 <wcrtomb@plt+0x2948>
  40772c:	ldr	x22, [x25, #1136]
  407730:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  407734:	mov	w2, #0x5                   	// #5
  407738:	mov	x0, xzr
  40773c:	add	x1, x1, #0x695
  407740:	bl	404bf0 <dcgettext@plt>
  407744:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  407748:	mov	x3, x0
  40774c:	mov	w1, #0x1                   	// #1
  407750:	mov	x0, x22
  407754:	add	x2, x2, #0x386
  407758:	bl	404910 <__fprintf_chk@plt>
  40775c:	b	407724 <wcrtomb@plt+0x2904>
  407760:	bl	41fcdc <wcrtomb@plt+0x1aebc>
  407764:	b	407724 <wcrtomb@plt+0x2904>
  407768:	ldr	x0, [sp, #8]
  40776c:	bl	4049d0 <free@plt>
  407770:	ldp	x20, x19, [sp, #96]
  407774:	ldp	x22, x21, [sp, #80]
  407778:	ldp	x24, x23, [sp, #64]
  40777c:	ldp	x26, x25, [sp, #48]
  407780:	ldp	x28, x27, [sp, #32]
  407784:	ldp	x29, x30, [sp, #16]
  407788:	add	sp, sp, #0x70
  40778c:	ret
  407790:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  407794:	ldr	x8, [x19, #1008]
  407798:	cbz	x8, 4077a0 <wcrtomb@plt+0x2980>
  40779c:	blr	x8
  4077a0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4077a4:	add	x1, x1, #0x67c
  4077a8:	b	4077c4 <wcrtomb@plt+0x29a4>
  4077ac:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  4077b0:	ldr	x8, [x19, #1008]
  4077b4:	cbz	x8, 4077bc <wcrtomb@plt+0x299c>
  4077b8:	blr	x8
  4077bc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4077c0:	add	x1, x1, #0x572
  4077c4:	mov	w2, #0x5                   	// #5
  4077c8:	mov	x0, xzr
  4077cc:	bl	404bf0 <dcgettext@plt>
  4077d0:	mov	x2, x0
  4077d4:	mov	w0, wzr
  4077d8:	mov	w1, wzr
  4077dc:	bl	4041f0 <error@plt>
  4077e0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4077e4:	ldr	w8, [x8, #860]
  4077e8:	sub	w8, w8, #0x5
  4077ec:	cmp	w8, #0x3
  4077f0:	b.cc	407824 <wcrtomb@plt+0x2a04>  // b.lo, b.ul, b.last
  4077f4:	ldr	x8, [x19, #1008]
  4077f8:	cbz	x8, 407800 <wcrtomb@plt+0x29e0>
  4077fc:	blr	x8
  407800:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  407804:	add	x1, x1, #0x594
  407808:	mov	w2, #0x5                   	// #5
  40780c:	mov	x0, xzr
  407810:	bl	404bf0 <dcgettext@plt>
  407814:	mov	x2, x0
  407818:	mov	w0, wzr
  40781c:	mov	w1, wzr
  407820:	bl	4041f0 <error@plt>
  407824:	bl	40dda4 <wcrtomb@plt+0x8f84>
  407828:	sub	sp, sp, #0xa0
  40782c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407830:	ldr	w8, [x8, #860]
  407834:	str	x19, [sp, #144]
  407838:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  40783c:	stp	x29, x30, [sp, #128]
  407840:	cmp	w8, #0x4
  407844:	add	x29, sp, #0x80
  407848:	b.ne	407850 <wcrtomb@plt+0x2a30>  // b.any
  40784c:	strb	wzr, [x19, #928]
  407850:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407854:	ldr	w8, [x8, #72]
  407858:	cmn	w8, #0x1
  40785c:	b.eq	40787c <wcrtomb@plt+0x2a5c>  // b.none
  407860:	cmp	w8, #0x0
  407864:	cset	w8, ne  // ne = any
  407868:	strb	w8, [x19, #928]
  40786c:	ldr	x19, [sp, #144]
  407870:	ldp	x29, x30, [sp, #128]
  407874:	add	sp, sp, #0xa0
  407878:	ret
  40787c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407880:	ldrb	w9, [x8, #76]
  407884:	mov	w8, wzr
  407888:	cbnz	w9, 407868 <wcrtomb@plt+0x2a48>
  40788c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  407890:	ldr	x9, [x9, #904]
  407894:	cbnz	x9, 407868 <wcrtomb@plt+0x2a48>
  407898:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40789c:	ldr	w0, [x8, #976]
  4078a0:	mov	x1, sp
  4078a4:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  4078a8:	cbz	w0, 4078b4 <wcrtomb@plt+0x2a94>
  4078ac:	mov	w8, wzr
  4078b0:	b	407868 <wcrtomb@plt+0x2a48>
  4078b4:	ldr	w8, [sp, #16]
  4078b8:	and	w8, w8, #0xf000
  4078bc:	cmp	w8, #0x8, lsl #12
  4078c0:	cset	w8, eq  // eq = none
  4078c4:	b	407868 <wcrtomb@plt+0x2a48>
  4078c8:	stp	x29, x30, [sp, #-16]!
  4078cc:	mov	x29, sp
  4078d0:	bl	407ba0 <wcrtomb@plt+0x2d80>
  4078d4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4078d8:	ldr	x8, [x8, #920]
  4078dc:	cmp	x0, x8
  4078e0:	b.ne	407910 <wcrtomb@plt+0x2af0>  // b.any
  4078e4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4078e8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4078ec:	ldr	x10, [x8, #3952]
  4078f0:	ldr	d0, [x9, #1656]
  4078f4:	scvtf	d1, x0
  4078f8:	add	x10, x10, #0x1
  4078fc:	fadd	d0, d0, d1
  407900:	str	x10, [x8, #3952]
  407904:	str	d0, [x9, #1656]
  407908:	ldp	x29, x30, [sp], #16
  40790c:	ret
  407910:	bl	4057c8 <wcrtomb@plt+0x9a8>
  407914:	stp	x29, x30, [sp, #-80]!
  407918:	str	x25, [sp, #16]
  40791c:	stp	x24, x23, [sp, #32]
  407920:	stp	x22, x21, [sp, #48]
  407924:	stp	x20, x19, [sp, #64]
  407928:	mov	x29, sp
  40792c:	mov	x22, x0
  407930:	bl	407ba0 <wcrtomb@plt+0x2d80>
  407934:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407938:	ldr	x8, [x8, #920]
  40793c:	mov	x19, x0
  407940:	cmp	x0, x8
  407944:	b.eq	407954 <wcrtomb@plt+0x2b34>  // b.none
  407948:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40794c:	ldrb	w9, [x9, #76]
  407950:	cbz	w9, 407b50 <wcrtomb@plt+0x2d30>
  407954:	cbz	x19, 407968 <wcrtomb@plt+0x2b48>
  407958:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40795c:	ldr	x10, [x9, #3952]
  407960:	add	x10, x10, #0x1
  407964:	str	x10, [x9, #3952]
  407968:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40796c:	ldr	d0, [x20, #1656]
  407970:	scvtf	d1, x19
  407974:	cmp	x19, x8
  407978:	fadd	d0, d0, d1
  40797c:	str	d0, [x20, #1656]
  407980:	b.eq	407b38 <wcrtomb@plt+0x2d18>  // b.none
  407984:	mov	x0, x19
  407988:	bl	407c78 <wcrtomb@plt+0x2e58>
  40798c:	tst	x19, #0x1ff
  407990:	b.ne	407b58 <wcrtomb@plt+0x2d38>  // b.any
  407994:	mov	x21, x0
  407998:	tbz	x19, #63, 4079b8 <wcrtomb@plt+0x2b98>
  40799c:	bl	404d00 <__errno_location@plt>
  4079a0:	ldr	w8, [x0]
  4079a4:	sub	w9, w8, #0x5
  4079a8:	cmp	w9, #0x2
  4079ac:	b.cc	4079b8 <wcrtomb@plt+0x2b98>  // b.lo, b.ul, b.last
  4079b0:	cmp	w8, #0x1c
  4079b4:	b.ne	407b50 <wcrtomb@plt+0x2d30>  // b.any
  4079b8:	mov	w0, #0x1                   	// #1
  4079bc:	mov	w25, #0x1                   	// #1
  4079c0:	bl	40702c <wcrtomb@plt+0x220c>
  4079c4:	tbz	w0, #0, 407b38 <wcrtomb@plt+0x2d18>
  4079c8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4079cc:	add	x0, x0, #0x4b0
  4079d0:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  4079d4:	bl	4074b0 <wcrtomb@plt+0x2690>
  4079d8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4079dc:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4079e0:	ldr	d0, [x20, #1656]
  4079e4:	ldr	d1, [x8, #1648]
  4079e8:	ldr	w10, [x9, #1744]
  4079ec:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4079f0:	str	xzr, [x20, #1656]
  4079f4:	ldr	x20, [x24, #3984]
  4079f8:	fadd	d0, d0, d1
  4079fc:	cmp	w10, #0x0
  407a00:	str	d0, [x8, #1648]
  407a04:	cset	w8, eq  // eq = none
  407a08:	str	w8, [x9, #1744]
  407a0c:	bl	407ce4 <wcrtomb@plt+0x2ec4>
  407a10:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407a14:	ldr	x8, [x8, #648]
  407a18:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407a1c:	strb	w25, [x23, #1740]
  407a20:	cbz	x8, 407a28 <wcrtomb@plt+0x2c08>
  407a24:	bl	407d60 <wcrtomb@plt+0x2f40>
  407a28:	add	x20, x20, x19
  407a2c:	sub	x19, x22, x19
  407a30:	cbz	x21, 407a6c <wcrtomb@plt+0x2c4c>
  407a34:	mov	x0, x21
  407a38:	bl	407dfc <wcrtomb@plt+0x2fdc>
  407a3c:	bl	4055d4 <wcrtomb@plt+0x7b4>
  407a40:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407a44:	add	x22, x22, #0x4b0
  407a48:	mov	x2, x0
  407a4c:	mov	w0, #0x1                   	// #1
  407a50:	mov	x1, x22
  407a54:	bl	40a9c4 <wcrtomb@plt+0x5ba4>
  407a58:	mov	x0, x22
  407a5c:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  407a60:	mov	x0, x21
  407a64:	bl	407e8c <wcrtomb@plt+0x306c>
  407a68:	b	407a90 <wcrtomb@plt+0x2c70>
  407a6c:	bl	4055d4 <wcrtomb@plt+0x7b4>
  407a70:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407a74:	add	x22, x22, #0x4b0
  407a78:	mov	x2, x0
  407a7c:	mov	w0, #0x1                   	// #1
  407a80:	mov	x1, x22
  407a84:	bl	40a9c4 <wcrtomb@plt+0x5ba4>
  407a88:	mov	x0, x22
  407a8c:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  407a90:	bl	4055d4 <wcrtomb@plt+0x7b4>
  407a94:	ldr	x8, [x24, #3984]
  407a98:	mov	x22, x0
  407a9c:	sub	x8, x0, x8
  407aa0:	asr	x1, x8, #9
  407aa4:	mov	x0, x21
  407aa8:	bl	407ca4 <wcrtomb@plt+0x2e84>
  407aac:	mov	x0, x22
  407ab0:	bl	405788 <wcrtomb@plt+0x968>
  407ab4:	mov	x21, x0
  407ab8:	cmp	x0, x19
  407abc:	strb	wzr, [x23, #1740]
  407ac0:	b.cs	407b04 <wcrtomb@plt+0x2ce4>  // b.hs, b.nlast
  407ac4:	mov	x0, x22
  407ac8:	mov	x1, x20
  407acc:	mov	x2, x21
  407ad0:	bl	404110 <memcpy@plt>
  407ad4:	sub	x8, x21, #0x1
  407ad8:	and	x8, x8, #0xfffffffffffffe00
  407adc:	add	x0, x22, x8
  407ae0:	add	x20, x20, x21
  407ae4:	sub	x19, x19, x21
  407ae8:	bl	405744 <wcrtomb@plt+0x924>
  407aec:	bl	4055d4 <wcrtomb@plt+0x7b4>
  407af0:	mov	x22, x0
  407af4:	bl	405788 <wcrtomb@plt+0x968>
  407af8:	mov	x21, x0
  407afc:	cmp	x0, x19
  407b00:	b.cc	407ac4 <wcrtomb@plt+0x2ca4>  // b.lo, b.ul, b.last
  407b04:	mov	x0, x22
  407b08:	mov	x1, x20
  407b0c:	mov	x2, x19
  407b10:	bl	404110 <memcpy@plt>
  407b14:	add	x0, x22, x19
  407b18:	sub	x2, x21, x19
  407b1c:	mov	w1, wzr
  407b20:	bl	404600 <memset@plt>
  407b24:	sub	x8, x19, #0x1
  407b28:	and	x8, x8, #0xfffffffffffffe00
  407b2c:	add	x0, x22, x8
  407b30:	bl	405744 <wcrtomb@plt+0x924>
  407b34:	bl	4055d4 <wcrtomb@plt+0x7b4>
  407b38:	ldp	x20, x19, [sp, #64]
  407b3c:	ldp	x22, x21, [sp, #48]
  407b40:	ldp	x24, x23, [sp, #32]
  407b44:	ldr	x25, [sp, #16]
  407b48:	ldp	x29, x30, [sp], #80
  407b4c:	ret
  407b50:	mov	x0, x19
  407b54:	bl	4057c8 <wcrtomb@plt+0x9a8>
  407b58:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407b5c:	ldr	x8, [x8, #1008]
  407b60:	cbz	x8, 407b68 <wcrtomb@plt+0x2d48>
  407b64:	blr	x8
  407b68:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  407b6c:	add	x1, x1, #0x6f2
  407b70:	mov	w2, #0x5                   	// #5
  407b74:	mov	x0, xzr
  407b78:	bl	404bf0 <dcgettext@plt>
  407b7c:	mov	x2, x0
  407b80:	mov	w0, wzr
  407b84:	mov	w1, wzr
  407b88:	bl	4041f0 <error@plt>
  407b8c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407b90:	mov	w9, #0x2                   	// #2
  407b94:	mov	x0, x19
  407b98:	str	w9, [x8, #3456]
  407b9c:	bl	4057c8 <wcrtomb@plt+0x9a8>
  407ba0:	stp	x29, x30, [sp, #-32]!
  407ba4:	mov	w0, #0x1                   	// #1
  407ba8:	str	x19, [sp, #16]
  407bac:	mov	x29, sp
  407bb0:	bl	408a38 <wcrtomb@plt+0x3c18>
  407bb4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407bb8:	ldr	d0, [x8, #632]
  407bbc:	fcmp	d0, #0.0
  407bc0:	b.eq	407bec <wcrtomb@plt+0x2dcc>  // b.none
  407bc4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407bc8:	ldr	d1, [x8, #1656]
  407bcc:	fcmp	d0, d1
  407bd0:	b.hi	407bec <wcrtomb@plt+0x2dcc>  // b.pmore
  407bd4:	bl	404d00 <__errno_location@plt>
  407bd8:	mov	w8, #0x1c                  	// #28
  407bdc:	mov	x19, xzr
  407be0:	str	w8, [x0]
  407be4:	cbnz	x19, 407c14 <wcrtomb@plt+0x2df4>
  407be8:	b	407c68 <wcrtomb@plt+0x2e48>
  407bec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407bf0:	ldrb	w8, [x8, #536]
  407bf4:	cbz	w8, 407c08 <wcrtomb@plt+0x2de8>
  407bf8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407bfc:	ldr	x19, [x8, #920]
  407c00:	cbnz	x19, 407c14 <wcrtomb@plt+0x2df4>
  407c04:	b	407c68 <wcrtomb@plt+0x2e48>
  407c08:	bl	41fe10 <wcrtomb@plt+0x1aff0>
  407c0c:	mov	x19, x0
  407c10:	cbz	x19, 407c68 <wcrtomb@plt+0x2e48>
  407c14:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407c18:	ldrb	w8, [x8, #76]
  407c1c:	cbz	w8, 407c68 <wcrtomb@plt+0x2e48>
  407c20:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407c24:	ldrb	w8, [x8, #1740]
  407c28:	tbnz	w8, #0, 407c68 <wcrtomb@plt+0x2e48>
  407c2c:	mov	x0, x19
  407c30:	bl	407c78 <wcrtomb@plt+0x2e58>
  407c34:	cbz	x0, 407c68 <wcrtomb@plt+0x2e48>
  407c38:	ldr	x8, [x0, #8]
  407c3c:	ldp	x10, x9, [x0, #32]
  407c40:	sub	x11, x19, x8, lsl #9
  407c44:	subs	x10, x10, x11
  407c48:	add	x9, x9, x11, lsr #9
  407c4c:	csel	x10, xzr, x10, cc  // cc = lo, ul, last
  407c50:	stp	x10, x9, [x0, #32]
  407c54:	b.hi	407c60 <wcrtomb@plt+0x2e40>  // b.pmore
  407c58:	ldr	x0, [x0]
  407c5c:	add	x8, x9, x8
  407c60:	neg	x1, x8
  407c64:	bl	407ca4 <wcrtomb@plt+0x2e84>
  407c68:	mov	x0, x19
  407c6c:	ldr	x19, [sp, #16]
  407c70:	ldp	x29, x30, [sp], #32
  407c74:	ret
  407c78:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407c7c:	ldr	x9, [x8, #1192]
  407c80:	mov	x8, x9
  407c84:	cbz	x9, 407c9c <wcrtomb@plt+0x2e7c>
  407c88:	ldr	x9, [x8]
  407c8c:	cbz	x9, 407c9c <wcrtomb@plt+0x2e7c>
  407c90:	ldr	x10, [x9, #8]
  407c94:	cmp	x0, x10, lsl #9
  407c98:	b.cs	407c80 <wcrtomb@plt+0x2e60>  // b.hs, b.nlast
  407c9c:	mov	x0, x8
  407ca0:	ret
  407ca4:	stp	x29, x30, [sp, #-32]!
  407ca8:	stp	x20, x19, [sp, #16]
  407cac:	mov	x29, sp
  407cb0:	mov	x19, x1
  407cb4:	mov	x20, x0
  407cb8:	bl	405030 <wcrtomb@plt+0x210>
  407cbc:	cbz	x20, 407cd8 <wcrtomb@plt+0x2eb8>
  407cc0:	ldr	x8, [x20, #8]
  407cc4:	str	xzr, [x20, #40]
  407cc8:	add	x8, x8, x19
  407ccc:	str	x8, [x20, #8]
  407cd0:	ldr	x20, [x20]
  407cd4:	cbnz	x20, 407cc0 <wcrtomb@plt+0x2ea0>
  407cd8:	ldp	x20, x19, [sp, #16]
  407cdc:	ldp	x29, x30, [sp], #32
  407ce0:	ret
  407ce4:	stp	x29, x30, [sp, #-32]!
  407ce8:	stp	x20, x19, [sp, #16]
  407cec:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407cf0:	ldrsw	x8, [x20, #1744]
  407cf4:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407cf8:	add	x19, x19, #0x6d8
  407cfc:	mov	x29, sp
  407d00:	ldr	x9, [x19, x8, lsl #3]
  407d04:	cbnz	x9, 407d28 <wcrtomb@plt+0x2f08>
  407d08:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  407d0c:	ldr	x1, [x9, #920]
  407d10:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407d14:	add	x9, x9, #0x6a0
  407d18:	add	x0, x9, x8, lsl #3
  407d1c:	bl	41aeb8 <wcrtomb@plt+0x16098>
  407d20:	ldrsw	x8, [x20, #1744]
  407d24:	str	x0, [x19, x8, lsl #3]
  407d28:	ldrsw	x8, [x20, #1744]
  407d2c:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  407d30:	ldrsw	x10, [x10, #748]
  407d34:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407d38:	ldr	x8, [x19, x8, lsl #3]
  407d3c:	ldp	x20, x19, [sp, #16]
  407d40:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407d44:	str	x8, [x9, #3984]
  407d48:	str	x8, [x11, #4008]
  407d4c:	add	x8, x8, x10, lsl #9
  407d50:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407d54:	str	x8, [x9, #3944]
  407d58:	ldp	x29, x30, [sp], #32
  407d5c:	ret
  407d60:	sub	sp, sp, #0x50
  407d64:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  407d68:	ldrsw	x0, [x8, #2000]
  407d6c:	add	x1, sp, #0x8
  407d70:	stp	x29, x30, [sp, #32]
  407d74:	str	x21, [sp, #48]
  407d78:	stp	x20, x19, [sp, #64]
  407d7c:	add	x29, sp, #0x20
  407d80:	bl	43650c <argp_usage@@Base+0x4910>
  407d84:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  407d88:	ldr	x8, [x21, #648]
  407d8c:	mov	x19, x0
  407d90:	mov	x0, x8
  407d94:	bl	404190 <strlen@plt>
  407d98:	mov	x20, x0
  407d9c:	mov	x0, x19
  407da0:	bl	404190 <strlen@plt>
  407da4:	add	x8, x20, x0
  407da8:	add	x0, x8, #0x9
  407dac:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  407db0:	ldr	x4, [x21, #648]
  407db4:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x11da0>
  407db8:	adrp	x5, 450000 <_obstack_memory_used@@Base+0x11da0>
  407dbc:	add	x3, x3, #0x718
  407dc0:	add	x5, x5, #0x721
  407dc4:	mov	w1, #0x1                   	// #1
  407dc8:	mov	x2, #0xffffffffffffffff    	// #-1
  407dcc:	mov	x6, x19
  407dd0:	mov	x20, x0
  407dd4:	bl	4041b0 <__sprintf_chk@plt>
  407dd8:	mov	x0, x20
  407ddc:	bl	407f70 <wcrtomb@plt+0x3150>
  407de0:	mov	x0, x20
  407de4:	bl	4049d0 <free@plt>
  407de8:	ldp	x20, x19, [sp, #64]
  407dec:	ldr	x21, [sp, #48]
  407df0:	ldp	x29, x30, [sp, #32]
  407df4:	add	sp, sp, #0x50
  407df8:	ret
  407dfc:	sub	sp, sp, #0x30
  407e00:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407e04:	ldr	w8, [x8, #816]
  407e08:	stp	x20, x19, [sp, #32]
  407e0c:	mov	x19, x0
  407e10:	stp	x29, x30, [sp, #16]
  407e14:	cmp	w8, #0x4
  407e18:	add	x29, sp, #0x10
  407e1c:	b.ne	407e74 <wcrtomb@plt+0x3054>  // b.any
  407e20:	ldr	x8, [x19, #32]!
  407e24:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407e28:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  407e2c:	add	x20, x20, #0x4b0
  407e30:	ldp	x2, x9, [x19, #-16]
  407e34:	add	x0, x0, #0x739
  407e38:	mov	x1, x20
  407e3c:	sub	x8, x9, x8
  407e40:	str	x8, [sp, #8]
  407e44:	bl	41213c <wcrtomb@plt+0xd31c>
  407e48:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  407e4c:	add	x0, x0, #0x74d
  407e50:	mov	x1, x20
  407e54:	mov	x2, x19
  407e58:	bl	41213c <wcrtomb@plt+0xd31c>
  407e5c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  407e60:	add	x0, x0, #0x75d
  407e64:	add	x2, sp, #0x8
  407e68:	mov	x1, x20
  407e6c:	bl	41213c <wcrtomb@plt+0xd31c>
  407e70:	b	407e7c <wcrtomb@plt+0x305c>
  407e74:	mov	x0, x19
  407e78:	bl	408064 <wcrtomb@plt+0x3244>
  407e7c:	ldp	x20, x19, [sp, #32]
  407e80:	ldp	x29, x30, [sp, #16]
  407e84:	add	sp, sp, #0x30
  407e88:	ret
  407e8c:	sub	sp, sp, #0x1d0
  407e90:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407e94:	ldr	w8, [x8, #816]
  407e98:	stp	x29, x30, [sp, #432]
  407e9c:	stp	x28, x19, [sp, #448]
  407ea0:	add	x29, sp, #0x1b0
  407ea4:	cmp	w8, #0x4
  407ea8:	b.ne	407f5c <wcrtomb@plt+0x313c>  // b.any
  407eac:	movi	v0.2d, #0x0
  407eb0:	str	xzr, [sp, #416]
  407eb4:	stp	q0, q0, [sp, #384]
  407eb8:	stp	q0, q0, [sp, #352]
  407ebc:	stp	q0, q0, [sp, #320]
  407ec0:	stp	q0, q0, [sp, #288]
  407ec4:	stp	q0, q0, [sp, #256]
  407ec8:	stp	q0, q0, [sp, #224]
  407ecc:	stp	q0, q0, [sp, #192]
  407ed0:	stp	q0, q0, [sp, #160]
  407ed4:	stp	q0, q0, [sp, #128]
  407ed8:	stp	q0, q0, [sp, #96]
  407edc:	stp	q0, q0, [sp, #64]
  407ee0:	stp	q0, q0, [sp, #32]
  407ee4:	stp	q0, q0, [sp]
  407ee8:	ldr	x8, [x0, #16]
  407eec:	mov	x19, x0
  407ef0:	stp	x8, x8, [sp]
  407ef4:	mov	w8, #0x81a4                	// #33188
  407ef8:	str	w8, [sp, #104]
  407efc:	bl	4042e0 <getuid@plt>
  407f00:	str	w0, [sp, #112]
  407f04:	bl	404a10 <getgid@plt>
  407f08:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  407f0c:	ldrsw	x2, [x8, #2000]
  407f10:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  407f14:	str	w0, [sp, #116]
  407f18:	add	x1, x1, #0x7ba
  407f1c:	mov	x0, sp
  407f20:	bl	41134c <wcrtomb@plt+0xc52c>
  407f24:	stp	x0, x0, [sp]
  407f28:	ldr	x8, [x19, #32]
  407f2c:	mov	x0, sp
  407f30:	str	x8, [sp, #136]
  407f34:	str	x8, [sp, #264]
  407f38:	bl	40aaa8 <wcrtomb@plt+0x5c88>
  407f3c:	cbz	x0, 407f6c <wcrtomb@plt+0x314c>
  407f40:	mov	x2, x0
  407f44:	mov	x1, sp
  407f48:	mov	w0, wzr
  407f4c:	bl	40a9c4 <wcrtomb@plt+0x5ba4>
  407f50:	bl	40b1a0 <wcrtomb@plt+0x6380>
  407f54:	ldr	x0, [sp]
  407f58:	bl	4049d0 <free@plt>
  407f5c:	ldp	x28, x19, [sp, #448]
  407f60:	ldp	x29, x30, [sp, #432]
  407f64:	add	sp, sp, #0x1d0
  407f68:	ret
  407f6c:	bl	404870 <abort@plt>
  407f70:	stp	x29, x30, [sp, #-32]!
  407f74:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  407f78:	ldr	w8, [x8, #816]
  407f7c:	stp	x20, x19, [sp, #16]
  407f80:	mov	x20, x0
  407f84:	mov	x29, sp
  407f88:	cmp	w8, #0x4
  407f8c:	b.ne	407fac <wcrtomb@plt+0x318c>  // b.any
  407f90:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  407f94:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  407f98:	add	x0, x0, #0x728
  407f9c:	add	x1, x1, #0x4b0
  407fa0:	mov	x2, x20
  407fa4:	bl	41213c <wcrtomb@plt+0xd31c>
  407fa8:	b	408058 <wcrtomb@plt+0x3238>
  407fac:	bl	4055d4 <wcrtomb@plt+0x7b4>
  407fb0:	movi	v0.2d, #0x0
  407fb4:	mov	x1, x20
  407fb8:	mov	x19, x0
  407fbc:	stp	q0, q0, [x0]
  407fc0:	stp	q0, q0, [x0, #32]
  407fc4:	stp	q0, q0, [x0, #64]
  407fc8:	stp	q0, q0, [x0, #96]
  407fcc:	stp	q0, q0, [x0, #128]
  407fd0:	stp	q0, q0, [x0, #160]
  407fd4:	stp	q0, q0, [x0, #192]
  407fd8:	stp	q0, q0, [x0, #224]
  407fdc:	stp	q0, q0, [x0, #256]
  407fe0:	stp	q0, q0, [x0, #288]
  407fe4:	stp	q0, q0, [x0, #320]
  407fe8:	stp	q0, q0, [x0, #352]
  407fec:	stp	q0, q0, [x0, #384]
  407ff0:	stp	q0, q0, [x0, #416]
  407ff4:	stp	q0, q0, [x0, #448]
  407ff8:	stp	q0, q0, [x0, #480]
  407ffc:	bl	404b20 <strcpy@plt>
  408000:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  408004:	add	x20, x20, #0x60
  408008:	add	x0, x20, #0x8
  40800c:	mov	x1, x19
  408010:	bl	419680 <wcrtomb@plt+0x14860>
  408014:	ldr	x0, [x20, #8]
  408018:	bl	432720 <argp_usage@@Base+0xb24>
  40801c:	and	w8, w0, #0x1
  408020:	mov	w9, #0x56                  	// #86
  408024:	strb	w8, [x20, #16]
  408028:	strb	w9, [x19, #156]
  40802c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408030:	ldr	x0, [x8, #712]
  408034:	add	x1, x19, #0x88
  408038:	mov	w2, #0xc                   	// #12
  40803c:	bl	40a708 <wcrtomb@plt+0x58e8>
  408040:	mov	x2, #0xffffffffffffffff    	// #-1
  408044:	mov	x0, x20
  408048:	mov	x1, x19
  40804c:	bl	40b224 <wcrtomb@plt+0x6404>
  408050:	mov	x0, x19
  408054:	bl	405744 <wcrtomb@plt+0x924>
  408058:	ldp	x20, x19, [sp, #16]
  40805c:	ldp	x29, x30, [sp], #32
  408060:	ret
  408064:	stp	x29, x30, [sp, #-48]!
  408068:	str	x21, [sp, #16]
  40806c:	stp	x20, x19, [sp, #32]
  408070:	mov	x29, sp
  408074:	mov	x20, x0
  408078:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40807c:	ldr	x8, [x20, #16]
  408080:	mov	x19, x0
  408084:	mov	x0, x8
  408088:	bl	404190 <strlen@plt>
  40808c:	mov	x2, x0
  408090:	cmp	x0, #0x65
  408094:	b.cc	4080e4 <wcrtomb@plt+0x32c4>  // b.lo, b.ul, b.last
  408098:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40809c:	ldr	x8, [x8, #1008]
  4080a0:	cbz	x8, 4080a8 <wcrtomb@plt+0x3288>
  4080a4:	blr	x8
  4080a8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4080ac:	add	x1, x1, #0x76f
  4080b0:	mov	w2, #0x5                   	// #5
  4080b4:	mov	x0, xzr
  4080b8:	bl	404bf0 <dcgettext@plt>
  4080bc:	ldr	x8, [x20, #16]
  4080c0:	mov	x21, x0
  4080c4:	mov	x0, x8
  4080c8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4080cc:	mov	x3, x0
  4080d0:	mov	w0, wzr
  4080d4:	mov	w1, wzr
  4080d8:	mov	x2, x21
  4080dc:	bl	4041f0 <error@plt>
  4080e0:	mov	w2, #0x64                  	// #100
  4080e4:	movi	v0.2d, #0x0
  4080e8:	stp	q0, q0, [x19, #480]
  4080ec:	stp	q0, q0, [x19, #448]
  4080f0:	stp	q0, q0, [x19, #416]
  4080f4:	stp	q0, q0, [x19, #384]
  4080f8:	stp	q0, q0, [x19, #352]
  4080fc:	stp	q0, q0, [x19, #320]
  408100:	stp	q0, q0, [x19, #288]
  408104:	stp	q0, q0, [x19, #256]
  408108:	stp	q0, q0, [x19, #224]
  40810c:	stp	q0, q0, [x19, #192]
  408110:	stp	q0, q0, [x19, #160]
  408114:	stp	q0, q0, [x19, #128]
  408118:	stp	q0, q0, [x19, #96]
  40811c:	stp	q0, q0, [x19, #64]
  408120:	stp	q0, q0, [x19, #32]
  408124:	stp	q0, q0, [x19]
  408128:	ldr	x1, [x20, #16]
  40812c:	mov	x0, x19
  408130:	bl	404110 <memcpy@plt>
  408134:	mov	w8, #0x4d                  	// #77
  408138:	strb	w8, [x19, #156]
  40813c:	ldr	x0, [x20, #32]
  408140:	add	x1, x19, #0x7c
  408144:	mov	w2, #0xc                   	// #12
  408148:	bl	40a560 <wcrtomb@plt+0x5740>
  40814c:	ldp	x8, x9, [x20, #24]
  408150:	add	x1, x19, #0x171
  408154:	mov	w2, #0xc                   	// #12
  408158:	sub	x0, x8, x9
  40815c:	bl	40a560 <wcrtomb@plt+0x5740>
  408160:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  408164:	ldr	w21, [x20, #644]
  408168:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  40816c:	add	x0, x0, #0x60
  408170:	mov	x2, #0xffffffffffffffff    	// #-1
  408174:	mov	x1, x19
  408178:	str	wzr, [x20, #644]
  40817c:	bl	40b224 <wcrtomb@plt+0x6404>
  408180:	mov	x0, x19
  408184:	str	w21, [x20, #644]
  408188:	bl	405744 <wcrtomb@plt+0x924>
  40818c:	ldp	x20, x19, [sp, #32]
  408190:	ldr	x21, [sp, #16]
  408194:	ldp	x29, x30, [sp], #48
  408198:	ret
  40819c:	stp	x29, x30, [sp, #-32]!
  4081a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4081a4:	ldr	x8, [x8, #688]
  4081a8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4081ac:	str	x19, [sp, #16]
  4081b0:	mov	w19, w0
  4081b4:	ldr	x8, [x8]
  4081b8:	add	x1, x1, #0xabd
  4081bc:	mov	x29, sp
  4081c0:	mov	x0, x8
  4081c4:	bl	404920 <strcmp@plt>
  4081c8:	cbnz	w0, 4081dc <wcrtomb@plt+0x33bc>
  4081cc:	cmp	w19, #0x0
  4081d0:	cset	w0, ne  // ne = any
  4081d4:	bl	404b80 <isatty@plt>
  4081d8:	cbnz	w0, 4081e8 <wcrtomb@plt+0x33c8>
  4081dc:	ldr	x19, [sp, #16]
  4081e0:	ldp	x29, x30, [sp], #32
  4081e4:	ret
  4081e8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4081ec:	ldr	x8, [x8, #1008]
  4081f0:	cbz	x8, 4081f8 <wcrtomb@plt+0x33d8>
  4081f4:	blr	x8
  4081f8:	adrp	x8, 450000 <_obstack_memory_used@@Base+0x11da0>
  4081fc:	adrp	x9, 450000 <_obstack_memory_used@@Base+0x11da0>
  408200:	add	x8, x8, #0x8b6
  408204:	add	x9, x9, #0x871
  408208:	cmp	w19, #0x0
  40820c:	csel	x1, x9, x8, eq  // eq = none
  408210:	mov	w2, #0x5                   	// #5
  408214:	mov	x0, xzr
  408218:	bl	404bf0 <dcgettext@plt>
  40821c:	mov	x2, x0
  408220:	mov	w0, wzr
  408224:	mov	w1, wzr
  408228:	bl	4041f0 <error@plt>
  40822c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  408230:	stp	x29, x30, [sp, #-64]!
  408234:	stp	x22, x21, [sp, #32]
  408238:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40823c:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408240:	ldr	x9, [x21, #3984]
  408244:	str	x23, [sp, #16]
  408248:	ldrb	w23, [x22, #1720]
  40824c:	mov	x29, sp
  408250:	stp	x20, x19, [sp, #48]
  408254:	cmp	x0, #0x0
  408258:	add	x8, x29, #0x1c
  40825c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408260:	mov	w10, #0x1                   	// #1
  408264:	csel	x19, x8, x0, eq  // eq = none
  408268:	str	x9, [x20, #3944]
  40826c:	strb	w10, [x22, #1720]
  408270:	bl	4055d4 <wcrtomb@plt+0x7b4>
  408274:	cmp	x0, #0x0
  408278:	cset	w8, eq  // eq = none
  40827c:	strb	w8, [x19]
  408280:	ldr	x19, [x21, #3984]
  408284:	ldr	x8, [x20, #3944]
  408288:	strb	w23, [x22, #1720]
  40828c:	cmp	x19, x8
  408290:	b.eq	4082d8 <wcrtomb@plt+0x34b8>  // b.none
  408294:	add	x20, x19, #0x101
  408298:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  40829c:	add	x1, x1, #0x4fe
  4082a0:	mov	x0, x20
  4082a4:	bl	404920 <strcmp@plt>
  4082a8:	cbz	w0, 4082c0 <wcrtomb@plt+0x34a0>
  4082ac:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4082b0:	add	x1, x1, #0x8fa
  4082b4:	mov	x0, x20
  4082b8:	bl	404920 <strcmp@plt>
  4082bc:	cbnz	w0, 4082d8 <wcrtomb@plt+0x34b8>
  4082c0:	mov	w1, #0x1                   	// #1
  4082c4:	mov	x0, x19
  4082c8:	mov	w20, #0x1                   	// #1
  4082cc:	bl	417c1c <wcrtomb@plt+0x12dfc>
  4082d0:	cmp	w0, #0x1
  4082d4:	b.eq	408314 <wcrtomb@plt+0x34f4>  // b.none
  4082d8:	ldr	x19, [x21, #3984]
  4082dc:	adrp	x20, 450000 <_obstack_memory_used@@Base+0x11da0>
  4082e0:	adrp	x21, 450000 <_obstack_memory_used@@Base+0x11da0>
  4082e4:	add	x20, x20, #0x1b8
  4082e8:	add	x21, x21, #0x278
  4082ec:	ldp	x2, x1, [x20, #8]
  4082f0:	mov	x0, x19
  4082f4:	bl	4046d0 <bcmp@plt>
  4082f8:	cbz	w0, 408310 <wcrtomb@plt+0x34f0>
  4082fc:	add	x20, x20, #0x18
  408300:	cmp	x20, x21
  408304:	b.cc	4082ec <wcrtomb@plt+0x34cc>  // b.lo, b.ul, b.last
  408308:	mov	w20, wzr
  40830c:	b	408314 <wcrtomb@plt+0x34f4>
  408310:	ldr	w20, [x20]
  408314:	mov	w0, w20
  408318:	ldp	x20, x19, [sp, #48]
  40831c:	ldp	x22, x21, [sp, #32]
  408320:	ldr	x23, [sp, #16]
  408324:	ldp	x29, x30, [sp], #64
  408328:	ret
  40832c:	sub	sp, sp, #0x20
  408330:	stp	x29, x30, [sp, #16]
  408334:	add	x29, sp, #0x10
  408338:	sub	x1, x29, #0x4
  40833c:	stur	wzr, [x29, #-4]
  408340:	bl	4051c4 <wcrtomb@plt+0x3a4>
  408344:	cbz	x0, 40834c <wcrtomb@plt+0x352c>
  408348:	ldr	x0, [x0, #16]
  40834c:	ldp	x29, x30, [sp, #16]
  408350:	add	sp, sp, #0x20
  408354:	ret
  408358:	sub	sp, sp, #0x30
  40835c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408360:	ldrb	w8, [x8, #1016]
  408364:	stp	x29, x30, [sp, #16]
  408368:	stp	x20, x19, [sp, #32]
  40836c:	add	x29, sp, #0x10
  408370:	cbz	w8, 40841c <wcrtomb@plt+0x35fc>
  408374:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408378:	ldr	x8, [x8, #688]
  40837c:	mov	w2, #0x1b6                 	// #438
  408380:	mov	w1, wzr
  408384:	ldr	x0, [x8]
  408388:	bl	404530 <open@plt>
  40838c:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  408390:	cmn	w0, #0x1
  408394:	str	w0, [x19, #976]
  408398:	b.eq	408554 <wcrtomb@plt+0x3734>  // b.none
  40839c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4083a0:	ldrb	w8, [x8, #76]
  4083a4:	cbnz	w8, 408538 <wcrtomb@plt+0x3718>
  4083a8:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  4083ac:	ldr	x8, [x20, #904]
  4083b0:	cbnz	x8, 4084f4 <wcrtomb@plt+0x36d4>
  4083b4:	sub	x0, x29, #0x4
  4083b8:	bl	408230 <wcrtomb@plt+0x3410>
  4083bc:	cbz	w0, 408474 <wcrtomb@plt+0x3654>
  4083c0:	cmp	w0, #0x1
  4083c4:	b.ne	4084e4 <wcrtomb@plt+0x36c4>  // b.any
  4083c8:	ldurb	w8, [x29, #-4]
  4083cc:	cbz	w8, 408410 <wcrtomb@plt+0x35f0>
  4083d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4083d4:	ldr	x8, [x8, #1008]
  4083d8:	cbz	x8, 4083e0 <wcrtomb@plt+0x35c0>
  4083dc:	blr	x8
  4083e0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4083e4:	add	x1, x1, #0x447
  4083e8:	mov	w2, #0x5                   	// #5
  4083ec:	mov	x0, xzr
  4083f0:	bl	404bf0 <dcgettext@plt>
  4083f4:	mov	x2, x0
  4083f8:	mov	w0, wzr
  4083fc:	mov	w1, wzr
  408400:	bl	4041f0 <error@plt>
  408404:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408408:	mov	w9, #0x2                   	// #2
  40840c:	str	w9, [x8, #3456]
  408410:	ldr	w0, [x19, #976]
  408414:	mov	w8, wzr
  408418:	b	4084f0 <wcrtomb@plt+0x36d0>
  40841c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408420:	ldr	x19, [x8, #688]
  408424:	mov	w1, #0x3a                  	// #58
  408428:	ldr	x0, [x19]
  40842c:	bl	404a70 <strchr@plt>
  408430:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408434:	str	x0, [x8, #1024]
  408438:	cbz	x0, 408374 <wcrtomb@plt+0x3554>
  40843c:	ldr	x19, [x19]
  408440:	subs	x2, x0, x19
  408444:	b.ls	408374 <wcrtomb@plt+0x3554>  // b.plast
  408448:	mov	w1, #0x2f                  	// #47
  40844c:	mov	x0, x19
  408450:	bl	404b70 <memchr@plt>
  408454:	cbnz	x0, 408374 <wcrtomb@plt+0x3554>
  408458:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40845c:	ldr	x3, [x8, #808]
  408460:	mov	w2, #0x40000000            	// #1073741824
  408464:	mov	x0, x19
  408468:	mov	w1, wzr
  40846c:	bl	428b14 <wcrtomb@plt+0x23cf4>
  408470:	b	40838c <wcrtomb@plt+0x356c>
  408474:	ldurb	w8, [x29, #-4]
  408478:	cbz	w8, 4084bc <wcrtomb@plt+0x369c>
  40847c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408480:	ldr	x8, [x8, #1008]
  408484:	cbz	x8, 40848c <wcrtomb@plt+0x366c>
  408488:	blr	x8
  40848c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  408490:	add	x1, x1, #0x447
  408494:	mov	w2, #0x5                   	// #5
  408498:	mov	x0, xzr
  40849c:	bl	404bf0 <dcgettext@plt>
  4084a0:	mov	x2, x0
  4084a4:	mov	w0, wzr
  4084a8:	mov	w1, wzr
  4084ac:	bl	4041f0 <error@plt>
  4084b0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4084b4:	mov	w9, #0x2                   	// #2
  4084b8:	str	w9, [x8, #3456]
  4084bc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4084c0:	ldr	x8, [x8, #688]
  4084c4:	mov	x1, xzr
  4084c8:	ldr	x0, [x8]
  4084cc:	bl	41f8c0 <wcrtomb@plt+0x1aaa0>
  4084d0:	ldr	x8, [x20, #904]
  4084d4:	ldr	w0, [x19, #976]
  4084d8:	cmp	x8, #0x0
  4084dc:	cset	w8, ne  // ne = any
  4084e0:	b	4084f0 <wcrtomb@plt+0x36d0>
  4084e4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4084e8:	str	w0, [x8, #1640]
  4084ec:	mov	w8, #0x1                   	// #1
  4084f0:	cbz	w8, 408554 <wcrtomb@plt+0x3734>
  4084f4:	ldr	w0, [x19, #976]
  4084f8:	mov	w8, #0x40000000            	// #1073741824
  4084fc:	cmp	w0, w8
  408500:	b.lt	408514 <wcrtomb@plt+0x36f4>  // b.tstop
  408504:	mov	w8, #0xc0000000            	// #-1073741824
  408508:	add	w0, w0, w8
  40850c:	bl	429260 <wcrtomb@plt+0x24440>
  408510:	b	408518 <wcrtomb@plt+0x36f8>
  408514:	bl	4047c0 <close@plt>
  408518:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40851c:	strb	wzr, [x8, #1672]
  408520:	bl	420354 <wcrtomb@plt+0x1b534>
  408524:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408528:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40852c:	mov	w10, #0x1                   	// #1
  408530:	str	w0, [x8, #1688]
  408534:	strb	w10, [x9, #1720]
  408538:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40853c:	ldr	x9, [x9, #3984]
  408540:	ldr	w0, [x19, #976]
  408544:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408548:	str	xzr, [x8, #3936]
  40854c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408550:	str	x9, [x8, #3944]
  408554:	ldp	x20, x19, [sp, #32]
  408558:	ldp	x29, x30, [sp, #16]
  40855c:	add	sp, sp, #0x30
  408560:	ret
  408564:	stp	x29, x30, [sp, #-32]!
  408568:	stp	x20, x19, [sp, #16]
  40856c:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  408570:	ldr	x8, [x20, #648]
  408574:	mov	x19, x0
  408578:	mov	x1, x19
  40857c:	mov	w2, wzr
  408580:	mov	x0, x8
  408584:	mov	x29, sp
  408588:	bl	404ac0 <fnmatch@plt>
  40858c:	cbz	w0, 4085cc <wcrtomb@plt+0x37ac>
  408590:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408594:	ldrb	w8, [x8, #76]
  408598:	cbz	w8, 4085d4 <wcrtomb@plt+0x37b4>
  40859c:	mov	x0, x19
  4085a0:	bl	405e88 <wcrtomb@plt+0x1068>
  4085a4:	cbz	x0, 4085d4 <wcrtomb@plt+0x37b4>
  4085a8:	ldr	x1, [x20, #648]
  4085ac:	mov	w2, wzr
  4085b0:	mov	x19, x0
  4085b4:	bl	404ac0 <fnmatch@plt>
  4085b8:	cmp	w0, #0x0
  4085bc:	mov	x0, x19
  4085c0:	cset	w20, eq  // eq = none
  4085c4:	bl	4049d0 <free@plt>
  4085c8:	b	4085d8 <wcrtomb@plt+0x37b8>
  4085cc:	mov	w20, #0x1                   	// #1
  4085d0:	b	4085d8 <wcrtomb@plt+0x37b8>
  4085d4:	mov	w20, wzr
  4085d8:	mov	w0, w20
  4085dc:	ldp	x20, x19, [sp, #16]
  4085e0:	ldp	x29, x30, [sp], #32
  4085e4:	ret
  4085e8:	sub	sp, sp, #0x30
  4085ec:	stp	x20, x19, [sp, #32]
  4085f0:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4085f4:	ldr	w8, [x20, #1768]
  4085f8:	mov	x19, x0
  4085fc:	stp	x29, x30, [sp, #16]
  408600:	add	x29, sp, #0x10
  408604:	cbnz	w8, 40861c <wcrtomb@plt+0x37fc>
  408608:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40860c:	add	x0, x0, #0x6f0
  408610:	bl	404580 <sigemptyset@plt>
  408614:	mov	w8, #0x1                   	// #1
  408618:	str	w8, [x20, #1768]
  40861c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  408620:	add	x1, x1, #0x232
  408624:	mov	x0, x19
  408628:	bl	404920 <strcmp@plt>
  40862c:	cbz	w0, 408724 <wcrtomb@plt+0x3904>
  408630:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  408634:	add	x1, x1, #0x98d
  408638:	mov	x0, x19
  40863c:	bl	404920 <strcmp@plt>
  408640:	cbz	w0, 408724 <wcrtomb@plt+0x3904>
  408644:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  408648:	add	x1, x1, #0x991
  40864c:	mov	x0, x19
  408650:	bl	404920 <strcmp@plt>
  408654:	cbz	w0, 40873c <wcrtomb@plt+0x391c>
  408658:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40865c:	add	x1, x1, #0x996
  408660:	mov	x0, x19
  408664:	bl	404920 <strcmp@plt>
  408668:	cbz	w0, 408744 <wcrtomb@plt+0x3924>
  40866c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  408670:	add	x1, x1, #0x99b
  408674:	mov	w2, #0x5                   	// #5
  408678:	mov	x0, x19
  40867c:	bl	4045a0 <strncmp@plt>
  408680:	cbz	w0, 40874c <wcrtomb@plt+0x392c>
  408684:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  408688:	add	x1, x1, #0x9a1
  40868c:	mov	w2, #0x5                   	// #5
  408690:	mov	x0, x19
  408694:	bl	4045a0 <strncmp@plt>
  408698:	cbz	w0, 408754 <wcrtomb@plt+0x3934>
  40869c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4086a0:	add	x1, x1, #0x9a7
  4086a4:	mov	w2, #0x7                   	// #7
  4086a8:	mov	x0, x19
  4086ac:	bl	4045a0 <strncmp@plt>
  4086b0:	cbz	w0, 408770 <wcrtomb@plt+0x3950>
  4086b4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4086b8:	add	x1, x1, #0x9af
  4086bc:	mov	w2, #0x6                   	// #6
  4086c0:	mov	x0, x19
  4086c4:	bl	4045a0 <strncmp@plt>
  4086c8:	cbz	w0, 408784 <wcrtomb@plt+0x3964>
  4086cc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4086d0:	add	x1, x1, #0x9ce
  4086d4:	mov	x0, x19
  4086d8:	bl	404920 <strcmp@plt>
  4086dc:	cbz	w0, 4087b4 <wcrtomb@plt+0x3994>
  4086e0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4086e4:	add	x1, x1, #0x9d5
  4086e8:	mov	w2, #0x5                   	// #5
  4086ec:	mov	x0, x19
  4086f0:	bl	4045a0 <strncmp@plt>
  4086f4:	cbnz	w0, 4087bc <wcrtomb@plt+0x399c>
  4086f8:	mov	w0, #0x7                   	// #7
  4086fc:	bl	408814 <wcrtomb@plt+0x39f4>
  408700:	mov	x20, x0
  408704:	add	x0, x19, #0x5
  408708:	bl	421394 <wcrtomb@plt+0x1c574>
  40870c:	mov	w1, w0
  408710:	str	w0, [x20, #16]
  408714:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408718:	add	x0, x0, #0x6f0
  40871c:	bl	404c80 <sigaddset@plt>
  408720:	b	40872c <wcrtomb@plt+0x390c>
  408724:	mov	w0, wzr
  408728:	bl	408814 <wcrtomb@plt+0x39f4>
  40872c:	ldp	x20, x19, [sp, #32]
  408730:	ldp	x29, x30, [sp, #16]
  408734:	add	sp, sp, #0x30
  408738:	ret
  40873c:	mov	w0, #0x1                   	// #1
  408740:	b	408728 <wcrtomb@plt+0x3908>
  408744:	mov	w0, #0x2                   	// #2
  408748:	b	408728 <wcrtomb@plt+0x3908>
  40874c:	mov	w0, #0x2                   	// #2
  408750:	b	408758 <wcrtomb@plt+0x3938>
  408754:	mov	w0, #0x5                   	// #5
  408758:	bl	408814 <wcrtomb@plt+0x39f4>
  40875c:	mov	x20, x0
  408760:	add	x0, x19, #0x5
  408764:	bl	40885c <wcrtomb@plt+0x3a3c>
  408768:	str	x0, [x20, #16]
  40876c:	b	40872c <wcrtomb@plt+0x390c>
  408770:	mov	w0, #0x3                   	// #3
  408774:	bl	408814 <wcrtomb@plt+0x39f4>
  408778:	mov	x20, x0
  40877c:	add	x0, x19, #0x7
  408780:	b	408764 <wcrtomb@plt+0x3944>
  408784:	add	x0, x19, #0x6
  408788:	add	x1, sp, #0x8
  40878c:	mov	w2, #0xa                   	// #10
  408790:	bl	404180 <strtoul@plt>
  408794:	ldr	x8, [sp, #8]
  408798:	ldrb	w8, [x8]
  40879c:	cbnz	w8, 4087d8 <wcrtomb@plt+0x39b8>
  4087a0:	mov	x20, x0
  4087a4:	mov	w0, #0x4                   	// #4
  4087a8:	bl	408814 <wcrtomb@plt+0x39f4>
  4087ac:	str	x20, [x0, #16]
  4087b0:	b	40872c <wcrtomb@plt+0x390c>
  4087b4:	mov	w0, #0x6                   	// #6
  4087b8:	b	408728 <wcrtomb@plt+0x3908>
  4087bc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4087c0:	ldr	x8, [x8, #1008]
  4087c4:	cbz	x8, 4087cc <wcrtomb@plt+0x39ac>
  4087c8:	blr	x8
  4087cc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4087d0:	add	x1, x1, #0x9db
  4087d4:	b	4087f0 <wcrtomb@plt+0x39d0>
  4087d8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4087dc:	ldr	x8, [x8, #1008]
  4087e0:	cbz	x8, 4087e8 <wcrtomb@plt+0x39c8>
  4087e4:	blr	x8
  4087e8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4087ec:	add	x1, x1, #0x9b6
  4087f0:	mov	w2, #0x5                   	// #5
  4087f4:	mov	x0, xzr
  4087f8:	bl	404bf0 <dcgettext@plt>
  4087fc:	mov	x2, x0
  408800:	mov	w0, wzr
  408804:	mov	w1, wzr
  408808:	mov	x3, x19
  40880c:	bl	4041f0 <error@plt>
  408810:	bl	40dda4 <wcrtomb@plt+0x8f84>
  408814:	stp	x29, x30, [sp, #-32]!
  408818:	str	x19, [sp, #16]
  40881c:	mov	w19, w0
  408820:	mov	w0, #0x18                  	// #24
  408824:	mov	x29, sp
  408828:	bl	43d2f8 <argp_usage@@Base+0xb6fc>
  40882c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408830:	ldr	x9, [x8, #1928]
  408834:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408838:	add	x10, x10, #0x770
  40883c:	cmp	x9, #0x0
  408840:	csel	x9, x10, x9, eq  // eq = none
  408844:	str	x0, [x9]
  408848:	str	w19, [x0, #8]
  40884c:	ldr	x19, [sp, #16]
  408850:	str	x0, [x8, #1928]
  408854:	ldp	x29, x30, [sp], #32
  408858:	ret
  40885c:	stp	x29, x30, [sp, #-32]!
  408860:	stp	x20, x19, [sp, #16]
  408864:	mov	x29, sp
  408868:	bl	43d39c <argp_usage@@Base+0xb7a0>
  40886c:	mov	x19, x0
  408870:	bl	404190 <strlen@plt>
  408874:	ldrb	w8, [x19]
  408878:	cmp	w8, #0x27
  40887c:	b.eq	408888 <wcrtomb@plt+0x3a68>  // b.none
  408880:	cmp	w8, #0x22
  408884:	b.ne	4088b0 <wcrtomb@plt+0x3a90>  // b.any
  408888:	add	x9, x0, x19
  40888c:	ldurb	w9, [x9, #-1]
  408890:	cmp	w9, w8
  408894:	b.ne	4088b0 <wcrtomb@plt+0x3a90>  // b.any
  408898:	sub	x20, x0, #0x2
  40889c:	add	x1, x19, #0x1
  4088a0:	mov	x0, x19
  4088a4:	mov	x2, x20
  4088a8:	bl	404120 <memmove@plt>
  4088ac:	strb	wzr, [x19, x20]
  4088b0:	mov	x0, x19
  4088b4:	bl	419728 <wcrtomb@plt+0x14908>
  4088b8:	mov	x0, x19
  4088bc:	ldp	x20, x19, [sp, #16]
  4088c0:	ldp	x29, x30, [sp], #32
  4088c4:	ret
  4088c8:	stp	x29, x30, [sp, #-32]!
  4088cc:	stp	x20, x19, [sp, #16]
  4088d0:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4088d4:	ldr	w8, [x19, #1768]
  4088d8:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  4088dc:	mov	x29, sp
  4088e0:	cbnz	w8, 408904 <wcrtomb@plt+0x3ae4>
  4088e4:	ldr	w8, [x20, #856]
  4088e8:	cbz	w8, 408904 <wcrtomb@plt+0x3ae4>
  4088ec:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4088f0:	ldr	x8, [x8, #1904]
  4088f4:	cbnz	x8, 408904 <wcrtomb@plt+0x3ae4>
  4088f8:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  4088fc:	add	x0, x0, #0x996
  408900:	bl	4085e8 <wcrtomb@plt+0x37c8>
  408904:	ldr	w8, [x19, #1768]
  408908:	cmp	w8, #0x1
  40890c:	b.ne	40893c <wcrtomb@plt+0x3b1c>  // b.any
  408910:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408914:	add	x1, x1, #0x6f0
  408918:	mov	w0, wzr
  40891c:	mov	x2, xzr
  408920:	bl	404260 <sigprocmask@plt>
  408924:	ldr	w8, [x20, #856]
  408928:	cbnz	w8, 408934 <wcrtomb@plt+0x3b14>
  40892c:	mov	w8, #0xa                   	// #10
  408930:	str	w8, [x20, #856]
  408934:	mov	w8, #0x2                   	// #2
  408938:	str	w8, [x19, #1768]
  40893c:	ldp	x20, x19, [sp, #16]
  408940:	ldp	x29, x30, [sp], #32
  408944:	ret
  408948:	stp	x29, x30, [sp, #-48]!
  40894c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408950:	stp	x20, x19, [sp, #32]
  408954:	ldr	x20, [x8, #1904]
  408958:	stp	x22, x21, [sp, #16]
  40895c:	mov	x29, sp
  408960:	cbz	x20, 4089cc <wcrtomb@plt+0x3bac>
  408964:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408968:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40896c:	b	408988 <wcrtomb@plt+0x3b68>
  408970:	mov	w0, #0xd                   	// #13
  408974:	bl	404b90 <fputc_unlocked@plt>
  408978:	ldr	x0, [x21, #1912]
  40897c:	bl	404ad0 <fflush_unlocked@plt>
  408980:	ldr	x20, [x20]
  408984:	cbz	x20, 4089cc <wcrtomb@plt+0x3bac>
  408988:	ldr	w8, [x20, #8]
  40898c:	cmp	w8, #0x3
  408990:	b.ne	408980 <wcrtomb@plt+0x3b60>  // b.any
  408994:	ldr	x0, [x21, #1912]
  408998:	cbz	x0, 408980 <wcrtomb@plt+0x3b60>
  40899c:	ldrb	w8, [x22, #1920]
  4089a0:	cbz	w8, 408980 <wcrtomb@plt+0x3b60>
  4089a4:	bl	4089dc <wcrtomb@plt+0x3bbc>
  4089a8:	ldr	x1, [x21, #1912]
  4089ac:	cbz	x0, 408970 <wcrtomb@plt+0x3b50>
  4089b0:	mov	x19, x0
  4089b4:	mov	w0, #0x20                  	// #32
  4089b8:	sub	x19, x19, #0x1
  4089bc:	bl	404b90 <fputc_unlocked@plt>
  4089c0:	ldr	x1, [x21, #1912]
  4089c4:	cbnz	x19, 4089b4 <wcrtomb@plt+0x3b94>
  4089c8:	b	408970 <wcrtomb@plt+0x3b50>
  4089cc:	ldp	x20, x19, [sp, #32]
  4089d0:	ldp	x22, x21, [sp, #16]
  4089d4:	ldp	x29, x30, [sp], #48
  4089d8:	ret
  4089dc:	sub	sp, sp, #0x20
  4089e0:	stp	x29, x30, [sp, #16]
  4089e4:	add	x29, sp, #0x10
  4089e8:	bl	4043f0 <fileno@plt>
  4089ec:	add	x2, sp, #0x8
  4089f0:	mov	w1, #0x5413                	// #21523
  4089f4:	bl	404dd0 <ioctl@plt>
  4089f8:	cbnz	w0, 408a04 <wcrtomb@plt+0x3be4>
  4089fc:	ldrh	w0, [sp, #10]
  408a00:	cbnz	x0, 408a2c <wcrtomb@plt+0x3c0c>
  408a04:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  408a08:	add	x0, x0, #0x9f9
  408a0c:	bl	404d30 <getenv@plt>
  408a10:	cbz	x0, 408a28 <wcrtomb@plt+0x3c08>
  408a14:	mov	w2, #0xa                   	// #10
  408a18:	mov	x1, xzr
  408a1c:	bl	404980 <strtol@plt>
  408a20:	cmp	x0, #0x0
  408a24:	b.gt	408a2c <wcrtomb@plt+0x3c0c>
  408a28:	mov	w0, #0x50                  	// #80
  408a2c:	ldp	x29, x30, [sp, #16]
  408a30:	add	sp, sp, #0x20
  408a34:	ret
  408a38:	stp	x29, x30, [sp, #-16]!
  408a3c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408a40:	ldr	w8, [x8, #856]
  408a44:	mov	x29, sp
  408a48:	cbz	w8, 408a68 <wcrtomb@plt+0x3c48>
  408a4c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408a50:	ldr	w10, [x9, #1924]
  408a54:	add	w10, w10, #0x1
  408a58:	udiv	w11, w10, w8
  408a5c:	msub	w8, w11, w8, w10
  408a60:	str	w10, [x9, #1924]
  408a64:	cbz	w8, 408a70 <wcrtomb@plt+0x3c50>
  408a68:	ldp	x29, x30, [sp], #16
  408a6c:	ret
  408a70:	and	w0, w0, #0x1
  408a74:	bl	408a80 <wcrtomb@plt+0x3c60>
  408a78:	ldp	x29, x30, [sp], #16
  408a7c:	ret
  408a80:	sub	sp, sp, #0x70
  408a84:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408a88:	stp	x24, x23, [sp, #64]
  408a8c:	ldr	x24, [x8, #1904]
  408a90:	stp	x29, x30, [sp, #16]
  408a94:	stp	x28, x27, [sp, #32]
  408a98:	stp	x26, x25, [sp, #48]
  408a9c:	stp	x22, x21, [sp, #80]
  408aa0:	stp	x20, x19, [sp, #96]
  408aa4:	add	x29, sp, #0x10
  408aa8:	cbz	x24, 408c30 <wcrtomb@plt+0x3e10>
  408aac:	adrp	x25, 450000 <_obstack_memory_used@@Base+0x11da0>
  408ab0:	adrp	x22, 452000 <_obstack_memory_used@@Base+0x13da0>
  408ab4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408ab8:	mov	w19, w0
  408abc:	add	x25, x25, #0x963
  408ac0:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408ac4:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408ac8:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408acc:	add	x22, x22, #0x30e
  408ad0:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408ad4:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  408ad8:	add	x23, x23, #0x6f0
  408adc:	b	408af4 <wcrtomb@plt+0x3cd4>
  408ae0:	sub	x1, x29, #0x4
  408ae4:	mov	x0, x23
  408ae8:	bl	4049b0 <sigwait@plt>
  408aec:	ldr	x24, [x24]
  408af0:	cbz	x24, 408c30 <wcrtomb@plt+0x3e10>
  408af4:	ldr	w8, [x24, #8]
  408af8:	cmp	w8, #0x7
  408afc:	b.hi	408aec <wcrtomb@plt+0x3ccc>  // b.pmore
  408b00:	adr	x9, 408ae0 <wcrtomb@plt+0x3cc0>
  408b04:	ldrb	w10, [x25, x8]
  408b08:	add	x9, x9, x10, lsl #2
  408b0c:	br	x9
  408b10:	ldr	x1, [x26, #3928]
  408b14:	mov	w0, #0x2e                  	// #46
  408b18:	bl	404b90 <fputc_unlocked@plt>
  408b1c:	ldr	x0, [x26, #3928]
  408b20:	bl	404ad0 <fflush_unlocked@plt>
  408b24:	b	408aec <wcrtomb@plt+0x3ccc>
  408b28:	ldr	x8, [x27, #1912]
  408b2c:	cbz	x8, 408bc4 <wcrtomb@plt+0x3da4>
  408b30:	ldr	x1, [x27, #1912]
  408b34:	cbnz	x1, 408be4 <wcrtomb@plt+0x3dc4>
  408b38:	b	408aec <wcrtomb@plt+0x3ccc>
  408b3c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408b40:	ldr	x0, [x28, #1136]
  408b44:	ldr	x3, [x8, #3544]
  408b48:	mov	w1, #0x1                   	// #1
  408b4c:	mov	x2, x22
  408b50:	bl	404910 <__fprintf_chk@plt>
  408b54:	ldr	x8, [x28, #1136]
  408b58:	ldr	x2, [x24, #16]
  408b5c:	ldr	w4, [x21, #1924]
  408b60:	sxtw	x1, w0
  408b64:	and	w3, w19, #0x1
  408b68:	mov	x0, x8
  408b6c:	bl	408c80 <wcrtomb@plt+0x3e60>
  408b70:	ldr	x1, [x28, #1136]
  408b74:	mov	w0, #0xa                   	// #10
  408b78:	bl	404b90 <fputc_unlocked@plt>
  408b7c:	b	408aec <wcrtomb@plt+0x3ccc>
  408b80:	ldr	x8, [x27, #1912]
  408b84:	cbz	x8, 408bf8 <wcrtomb@plt+0x3dd8>
  408b88:	ldr	x0, [x27, #1912]
  408b8c:	cbnz	x0, 408c18 <wcrtomb@plt+0x3df8>
  408b90:	b	408aec <wcrtomb@plt+0x3ccc>
  408b94:	ldr	w0, [x24, #16]
  408b98:	bl	404650 <sleep@plt>
  408b9c:	b	408aec <wcrtomb@plt+0x3ccc>
  408ba0:	ldr	x8, [x20, #736]
  408ba4:	ldr	x0, [x24, #16]
  408ba8:	ldr	w2, [x21, #1924]
  408bac:	ldr	x1, [x8]
  408bb0:	bl	420e8c <wcrtomb@plt+0x1c06c>
  408bb4:	b	408aec <wcrtomb@plt+0x3ccc>
  408bb8:	bl	405108 <wcrtomb@plt+0x2e8>
  408bbc:	bl	40553c <wcrtomb@plt+0x71c>
  408bc0:	b	408aec <wcrtomb@plt+0x3ccc>
  408bc4:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  408bc8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  408bcc:	add	x0, x0, #0x52c
  408bd0:	add	x1, x1, #0x120
  408bd4:	bl	4044c0 <fopen@plt>
  408bd8:	str	x0, [x27, #1912]
  408bdc:	ldr	x1, [x27, #1912]
  408be0:	cbz	x1, 408aec <wcrtomb@plt+0x3ccc>
  408be4:	mov	w0, #0x7                   	// #7
  408be8:	bl	404b90 <fputc_unlocked@plt>
  408bec:	ldr	x0, [x27, #1912]
  408bf0:	bl	404ad0 <fflush_unlocked@plt>
  408bf4:	b	408aec <wcrtomb@plt+0x3ccc>
  408bf8:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  408bfc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  408c00:	add	x0, x0, #0x52c
  408c04:	add	x1, x1, #0x120
  408c08:	bl	4044c0 <fopen@plt>
  408c0c:	str	x0, [x27, #1912]
  408c10:	ldr	x0, [x27, #1912]
  408c14:	cbz	x0, 408aec <wcrtomb@plt+0x3ccc>
  408c18:	ldr	x2, [x24, #16]
  408c1c:	ldr	w4, [x21, #1924]
  408c20:	and	w3, w19, #0x1
  408c24:	mov	x1, xzr
  408c28:	bl	408c80 <wcrtomb@plt+0x3e60>
  408c2c:	b	408aec <wcrtomb@plt+0x3ccc>
  408c30:	ldp	x20, x19, [sp, #96]
  408c34:	ldp	x22, x21, [sp, #80]
  408c38:	ldp	x24, x23, [sp, #64]
  408c3c:	ldp	x26, x25, [sp, #48]
  408c40:	ldp	x28, x27, [sp, #32]
  408c44:	ldp	x29, x30, [sp, #16]
  408c48:	add	sp, sp, #0x70
  408c4c:	ret
  408c50:	stp	x29, x30, [sp, #-16]!
  408c54:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408c58:	ldr	w8, [x8, #856]
  408c5c:	mov	x29, sp
  408c60:	cbz	w8, 408c78 <wcrtomb@plt+0x3e58>
  408c64:	bl	408948 <wcrtomb@plt+0x3b28>
  408c68:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408c6c:	ldr	x0, [x8, #1912]
  408c70:	cbz	x0, 408c78 <wcrtomb@plt+0x3e58>
  408c74:	bl	404470 <fclose@plt>
  408c78:	ldp	x29, x30, [sp], #16
  408c7c:	ret
  408c80:	sub	sp, sp, #0x190
  408c84:	adrp	x8, 450000 <_obstack_memory_used@@Base+0x11da0>
  408c88:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  408c8c:	add	x8, x8, #0x35d
  408c90:	add	x9, x9, #0xbb1
  408c94:	tst	w3, #0x1
  408c98:	stp	x28, x27, [sp, #320]
  408c9c:	stp	x22, x21, [sp, #368]
  408ca0:	stp	x20, x19, [sp, #384]
  408ca4:	mov	x28, x2
  408ca8:	mov	x19, x1
  408cac:	mov	x22, x0
  408cb0:	csel	x1, x9, x8, ne  // ne = any
  408cb4:	mov	w2, #0x5                   	// #5
  408cb8:	mov	x0, xzr
  408cbc:	stp	x29, x30, [sp, #304]
  408cc0:	stp	x26, x25, [sp, #336]
  408cc4:	stp	x24, x23, [sp, #352]
  408cc8:	add	x29, sp, #0x130
  408ccc:	mov	w20, w4
  408cd0:	str	w3, [sp, #4]
  408cd4:	bl	404bf0 <dcgettext@plt>
  408cd8:	mov	x23, x0
  408cdc:	mov	w0, w20
  408ce0:	sub	x1, x29, #0x20
  408ce4:	str	w20, [sp]
  408ce8:	bl	43650c <argp_usage@@Base+0x4910>
  408cec:	mov	x24, x0
  408cf0:	cbnz	x28, 408d20 <wcrtomb@plt+0x3f00>
  408cf4:	ldr	w10, [sp, #4]
  408cf8:	adrp	x8, 450000 <_obstack_memory_used@@Base+0x11da0>
  408cfc:	adrp	x9, 450000 <_obstack_memory_used@@Base+0x11da0>
  408d00:	add	x8, x8, #0xa15
  408d04:	add	x9, x9, #0xa01
  408d08:	tst	w10, #0x1
  408d0c:	csel	x1, x9, x8, ne  // ne = any
  408d10:	mov	w2, #0x5                   	// #5
  408d14:	mov	x0, xzr
  408d18:	bl	404bf0 <dcgettext@plt>
  408d1c:	mov	x28, x0
  408d20:	adrp	x26, 450000 <_obstack_memory_used@@Base+0x11da0>
  408d24:	add	x26, x26, #0x96b
  408d28:	sub	x27, x29, #0x40
  408d2c:	mov	w20, #0x1                   	// #1
  408d30:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408d34:	b	408d44 <wcrtomb@plt+0x3f24>
  408d38:	add	x19, x19, #0x1
  408d3c:	ldur	x8, [x29, #-40]
  408d40:	add	x28, x8, #0x1
  408d44:	stur	x28, [x29, #-40]
  408d48:	ldrb	w0, [x28]
  408d4c:	cmp	w0, #0x25
  408d50:	b.eq	408d78 <wcrtomb@plt+0x3f58>  // b.none
  408d54:	cbz	w0, 409010 <wcrtomb@plt+0x41f0>
  408d58:	mov	x1, x22
  408d5c:	bl	404b90 <fputc_unlocked@plt>
  408d60:	ldrb	w8, [x28]
  408d64:	cmp	w8, #0xd
  408d68:	b.ne	408d38 <wcrtomb@plt+0x3f18>  // b.any
  408d6c:	mov	x19, xzr
  408d70:	strb	w20, [x21, #1920]
  408d74:	b	408d3c <wcrtomb@plt+0x3f1c>
  408d78:	add	x0, x28, #0x1
  408d7c:	stur	x0, [x29, #-40]
  408d80:	ldrb	w8, [x28, #1]
  408d84:	cmp	w8, #0x7b
  408d88:	b.ne	408db4 <wcrtomb@plt+0x3f94>  // b.any
  408d8c:	sub	x1, x29, #0x28
  408d90:	bl	40903c <wcrtomb@plt+0x421c>
  408d94:	mov	x28, x0
  408d98:	cbnz	x0, 408db8 <wcrtomb@plt+0x3f98>
  408d9c:	mov	w0, #0x25                  	// #37
  408da0:	mov	x1, x22
  408da4:	bl	404b90 <fputc_unlocked@plt>
  408da8:	ldur	x8, [x29, #-40]
  408dac:	ldrb	w0, [x8]
  408db0:	b	408eb8 <wcrtomb@plt+0x4098>
  408db4:	mov	x28, xzr
  408db8:	ldur	x25, [x29, #-40]
  408dbc:	ldrb	w9, [x25]
  408dc0:	sub	w8, w9, #0x54
  408dc4:	cmp	w8, #0x21
  408dc8:	b.hi	408e88 <wcrtomb@plt+0x4068>  // b.pmore
  408dcc:	adr	x9, 408ddc <wcrtomb@plt+0x3fbc>
  408dd0:	ldrb	w10, [x26, x8]
  408dd4:	add	x9, x9, x10, lsl #2
  408dd8:	br	x9
  408ddc:	bl	405108 <wcrtomb@plt+0x2e8>
  408de0:	cbz	x28, 408e58 <wcrtomb@plt+0x4038>
  408de4:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  408de8:	add	x8, x8, #0xdc8
  408dec:	add	x1, sp, #0x8
  408df0:	mov	w2, #0x4644                	// #17988
  408df4:	mov	x0, x28
  408df8:	str	x8, [sp, #64]
  408dfc:	bl	429ff0 <wcrtomb@plt+0x251d0>
  408e00:	cbz	w0, 408fbc <wcrtomb@plt+0x419c>
  408e04:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  408e08:	ldr	x8, [x8, #1008]
  408e0c:	cbz	x8, 408e14 <wcrtomb@plt+0x3ff4>
  408e10:	blr	x8
  408e14:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  408e18:	mov	w2, #0x5                   	// #5
  408e1c:	mov	x0, xzr
  408e20:	add	x1, x1, #0xa2d
  408e24:	bl	404bf0 <dcgettext@plt>
  408e28:	mov	x25, x0
  408e2c:	add	x0, sp, #0x8
  408e30:	bl	42a218 <wcrtomb@plt+0x253f8>
  408e34:	mov	x4, x0
  408e38:	mov	w0, wzr
  408e3c:	mov	w1, wzr
  408e40:	mov	x2, x25
  408e44:	mov	x3, x28
  408e48:	bl	4041f0 <error@plt>
  408e4c:	mov	w8, #0x2                   	// #2
  408e50:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  408e54:	str	w8, [x9, #3456]
  408e58:	adrp	x25, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  408e5c:	add	x25, x25, #0x7d8
  408e60:	mov	w2, #0x2c                  	// #44
  408e64:	mov	x0, x22
  408e68:	mov	x1, x25
  408e6c:	mov	w3, wzr
  408e70:	bl	40524c <wcrtomb@plt+0x42c>
  408e74:	add	x19, x19, w0, sxtw
  408e78:	cbz	x28, 408d3c <wcrtomb@plt+0x3f1c>
  408e7c:	add	x0, sp, #0x8
  408e80:	bl	42a140 <wcrtomb@plt+0x25320>
  408e84:	b	408d3c <wcrtomb@plt+0x3f1c>
  408e88:	cmp	w9, #0x2a
  408e8c:	b.ne	408ea8 <wcrtomb@plt+0x4088>  // b.any
  408e90:	cbz	x28, 408f88 <wcrtomb@plt+0x4168>
  408e94:	mov	w2, #0xa                   	// #10
  408e98:	mov	x0, x28
  408e9c:	mov	x1, xzr
  408ea0:	bl	404980 <strtol@plt>
  408ea4:	b	408f90 <wcrtomb@plt+0x4170>
  408ea8:	mov	w0, #0x25                  	// #37
  408eac:	mov	x1, x22
  408eb0:	bl	404b90 <fputc_unlocked@plt>
  408eb4:	ldrb	w0, [x25]
  408eb8:	mov	x1, x22
  408ebc:	bl	404b90 <fputc_unlocked@plt>
  408ec0:	add	x19, x19, #0x2
  408ec4:	b	408d3c <wcrtomb@plt+0x3f1c>
  408ec8:	ldp	w4, w8, [sp]
  408ecc:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  408ed0:	mov	x0, x22
  408ed4:	mov	x1, x19
  408ed8:	and	w3, w8, #0x1
  408edc:	add	x2, x2, #0xa4a
  408ee0:	bl	408c80 <wcrtomb@plt+0x3e60>
  408ee4:	add	x19, x19, w0, sxtw
  408ee8:	b	408d3c <wcrtomb@plt+0x3f1c>
  408eec:	bl	405108 <wcrtomb@plt+0x2e8>
  408ef0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  408ef4:	mov	w1, #0x1                   	// #1
  408ef8:	mov	x0, x22
  408efc:	add	x2, x2, #0xa28
  408f00:	bl	404910 <__fprintf_chk@plt>
  408f04:	add	x19, x19, w0, sxtw
  408f08:	b	408d3c <wcrtomb@plt+0x3f1c>
  408f0c:	mov	x0, x23
  408f10:	mov	x1, x22
  408f14:	bl	404c10 <fputs_unlocked@plt>
  408f18:	mov	x0, x23
  408f1c:	b	408f7c <wcrtomb@plt+0x415c>
  408f20:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  408f24:	cmp	x28, #0x0
  408f28:	add	x8, x8, #0x990
  408f2c:	add	x0, sp, #0x8
  408f30:	mov	x1, xzr
  408f34:	csel	x25, x8, x28, eq  // eq = none
  408f38:	bl	404620 <gettimeofday@plt>
  408f3c:	add	x0, sp, #0x8
  408f40:	bl	404410 <localtime@plt>
  408f44:	ldr	w8, [sp, #16]
  408f48:	mov	w9, #0x3e8                 	// #1000
  408f4c:	mov	x2, x0
  408f50:	mov	x0, x22
  408f54:	mul	w4, w8, w9
  408f58:	mov	x1, x25
  408f5c:	mov	x3, xzr
  408f60:	bl	4334f4 <argp_usage@@Base+0x18f8>
  408f64:	add	x19, x0, x19
  408f68:	b	408d3c <wcrtomb@plt+0x3f1c>
  408f6c:	mov	x0, x24
  408f70:	mov	x1, x22
  408f74:	bl	404c10 <fputs_unlocked@plt>
  408f78:	mov	x0, x24
  408f7c:	bl	404190 <strlen@plt>
  408f80:	add	x19, x0, x19
  408f84:	b	408d3c <wcrtomb@plt+0x3f1c>
  408f88:	mov	x0, x22
  408f8c:	bl	4089dc <wcrtomb@plt+0x3bbc>
  408f90:	mov	x25, x0
  408f94:	cmp	x0, x19
  408f98:	b.ls	408d3c <wcrtomb@plt+0x3f1c>  // b.plast
  408f9c:	mov	w0, #0x20                  	// #32
  408fa0:	mov	x1, x22
  408fa4:	bl	404b90 <fputc_unlocked@plt>
  408fa8:	add	x19, x19, #0x1
  408fac:	cmp	x25, x19
  408fb0:	b.ne	408f9c <wcrtomb@plt+0x417c>  // b.any
  408fb4:	mov	x19, x25
  408fb8:	b	408d3c <wcrtomb@plt+0x3f1c>
  408fbc:	ldr	x8, [sp, #8]
  408fc0:	cbz	x8, 408fe4 <wcrtomb@plt+0x41c4>
  408fc4:	ldp	x10, x9, [sp, #8]
  408fc8:	mov	x8, xzr
  408fcc:	lsl	x11, x8, #3
  408fd0:	ldr	x12, [x9, x11]
  408fd4:	add	x8, x8, #0x1
  408fd8:	cmp	x10, x8
  408fdc:	str	x12, [x27, x11]
  408fe0:	b.hi	408fcc <wcrtomb@plt+0x41ac>  // b.pmore
  408fe4:	cmp	w8, #0x2
  408fe8:	sub	x25, x29, #0x40
  408fec:	b.hi	408e60 <wcrtomb@plt+0x4040>  // b.pmore
  408ff0:	mov	w9, #0x2                   	// #2
  408ff4:	add	x0, x25, w8, uxtw #3
  408ff8:	sub	w8, w9, w8
  408ffc:	lsl	x8, x8, #3
  409000:	add	x2, x8, #0x8
  409004:	mov	w1, wzr
  409008:	bl	404600 <memset@plt>
  40900c:	b	408e60 <wcrtomb@plt+0x4040>
  409010:	mov	x0, x22
  409014:	bl	404ad0 <fflush_unlocked@plt>
  409018:	mov	w0, w19
  40901c:	ldp	x20, x19, [sp, #384]
  409020:	ldp	x22, x21, [sp, #368]
  409024:	ldp	x24, x23, [sp, #352]
  409028:	ldp	x26, x25, [sp, #336]
  40902c:	ldp	x28, x27, [sp, #320]
  409030:	ldp	x29, x30, [sp, #304]
  409034:	add	sp, sp, #0x190
  409038:	ret
  40903c:	stp	x29, x30, [sp, #-64]!
  409040:	stp	x24, x23, [sp, #16]
  409044:	stp	x22, x21, [sp, #32]
  409048:	stp	x20, x19, [sp, #48]
  40904c:	ldrb	w8, [x0]
  409050:	mov	x19, x0
  409054:	mov	x20, x1
  409058:	mov	x29, sp
  40905c:	cmp	w8, #0x7b
  409060:	b.ne	4090d4 <wcrtomb@plt+0x42b4>  // b.any
  409064:	add	x22, x19, #0x1
  409068:	mov	w1, #0x7d                  	// #125
  40906c:	mov	x0, x22
  409070:	bl	404a70 <strchr@plt>
  409074:	cbz	x0, 4090f0 <wcrtomb@plt+0x42d0>
  409078:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40907c:	ldr	x9, [x8, #1944]
  409080:	sub	x23, x0, x19
  409084:	mov	x21, x0
  409088:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40908c:	cmp	x23, x9
  409090:	b.ls	4090a8 <wcrtomb@plt+0x4288>  // b.plast
  409094:	ldr	x0, [x24, #1936]
  409098:	mov	x1, x23
  40909c:	str	x23, [x8, #1944]
  4090a0:	bl	43d21c <argp_usage@@Base+0xb620>
  4090a4:	str	x0, [x24, #1936]
  4090a8:	ldr	x0, [x24, #1936]
  4090ac:	sub	x23, x23, #0x1
  4090b0:	mov	x1, x22
  4090b4:	mov	x2, x23
  4090b8:	bl	404110 <memcpy@plt>
  4090bc:	ldr	x0, [x24, #1936]
  4090c0:	mov	w8, wzr
  4090c4:	add	x9, x21, #0x1
  4090c8:	strb	wzr, [x0, x23]
  4090cc:	str	x9, [x20]
  4090d0:	cbz	w8, 4090dc <wcrtomb@plt+0x42bc>
  4090d4:	mov	x0, xzr
  4090d8:	str	x19, [x20]
  4090dc:	ldp	x20, x19, [sp, #48]
  4090e0:	ldp	x22, x21, [sp, #32]
  4090e4:	ldp	x24, x23, [sp, #16]
  4090e8:	ldp	x29, x30, [sp], #64
  4090ec:	ret
  4090f0:	mov	w8, #0x1                   	// #1
  4090f4:	cbnz	w8, 4090d4 <wcrtomb@plt+0x42b4>
  4090f8:	b	4090dc <wcrtomb@plt+0x42bc>
  4090fc:	sub	sp, sp, #0x20
  409100:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409104:	ldr	x1, [x8, #920]
  409108:	add	x0, sp, #0x8
  40910c:	stp	x29, x30, [sp, #16]
  409110:	add	x29, sp, #0x10
  409114:	bl	41aeb8 <wcrtomb@plt+0x16098>
  409118:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40911c:	ldr	x8, [x8, #832]
  409120:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409124:	str	x0, [x9, #1952]
  409128:	cbz	x8, 409130 <wcrtomb@plt+0x4310>
  40912c:	bl	414bbc <wcrtomb@plt+0xfd9c>
  409130:	ldp	x29, x30, [sp, #16]
  409134:	add	sp, sp, #0x20
  409138:	ret
  40913c:	sub	sp, sp, #0x120
  409140:	stp	x29, x30, [sp, #240]
  409144:	add	x29, sp, #0xf0
  409148:	stp	x28, x21, [sp, #256]
  40914c:	stp	x20, x19, [sp, #272]
  409150:	stp	x2, x3, [x29, #-112]
  409154:	stp	x4, x5, [x29, #-96]
  409158:	stp	x6, x7, [x29, #-80]
  40915c:	stp	q1, q2, [sp, #16]
  409160:	stp	q3, q4, [sp, #48]
  409164:	str	q0, [sp]
  409168:	stp	q5, q6, [sp, #80]
  40916c:	str	q7, [sp, #112]
  409170:	cbz	x1, 4091f8 <wcrtomb@plt+0x43d8>
  409174:	mov	x19, x1
  409178:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40917c:	ldr	x1, [x0, #8]
  409180:	ldr	x20, [x21, #3928]
  409184:	mov	w0, #0x1                   	// #1
  409188:	bl	419648 <wcrtomb@plt+0x14828>
  40918c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  409190:	mov	x3, x0
  409194:	add	x2, x2, #0x30e
  409198:	mov	w1, #0x1                   	// #1
  40919c:	mov	x0, x20
  4091a0:	bl	404910 <__fprintf_chk@plt>
  4091a4:	sub	x9, x29, #0x70
  4091a8:	mov	x10, sp
  4091ac:	mov	x11, #0xffffffffffffffd0    	// #-48
  4091b0:	add	x8, x29, #0x30
  4091b4:	movk	x11, #0xff80, lsl #32
  4091b8:	add	x9, x9, #0x30
  4091bc:	add	x10, x10, #0x80
  4091c0:	stp	x8, x9, [x29, #-64]
  4091c4:	stp	x10, x11, [x29, #-48]
  4091c8:	ldp	q0, q1, [x29, #-64]
  4091cc:	ldr	x0, [x21, #3928]
  4091d0:	sub	x3, x29, #0x20
  4091d4:	mov	w1, #0x1                   	// #1
  4091d8:	mov	x2, x19
  4091dc:	stp	q0, q1, [x29, #-32]
  4091e0:	bl	404690 <__vfprintf_chk@plt>
  4091e4:	ldr	x0, [x21, #3928]
  4091e8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  4091ec:	add	x2, x2, #0x365
  4091f0:	mov	w1, #0x1                   	// #1
  4091f4:	bl	404910 <__fprintf_chk@plt>
  4091f8:	mov	w0, #0x1                   	// #1
  4091fc:	bl	422410 <wcrtomb@plt+0x1d5f0>
  409200:	ldp	x20, x19, [sp, #272]
  409204:	ldp	x28, x21, [sp, #256]
  409208:	ldp	x29, x30, [sp, #240]
  40920c:	add	sp, sp, #0x120
  409210:	ret
  409214:	stp	x29, x30, [sp, #-32]!
  409218:	stp	x20, x19, [sp, #16]
  40921c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409220:	ldr	x0, [x20, #4072]
  409224:	mov	x29, sp
  409228:	bl	405744 <wcrtomb@plt+0x924>
  40922c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409230:	ldr	w8, [x8, #644]
  409234:	cbz	w8, 409284 <wcrtomb@plt+0x4464>
  409238:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40923c:	ldrb	w8, [x8, #4024]
  409240:	cbz	w8, 409270 <wcrtomb@plt+0x4450>
  409244:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409248:	ldr	x19, [x8, #3928]
  40924c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409250:	add	x1, x1, #0xacf
  409254:	mov	w2, #0x5                   	// #5
  409258:	mov	x0, xzr
  40925c:	bl	404bf0 <dcgettext@plt>
  409260:	mov	x2, x0
  409264:	mov	w1, #0x1                   	// #1
  409268:	mov	x0, x19
  40926c:	bl	404910 <__fprintf_chk@plt>
  409270:	ldr	x1, [x20, #4072]
  409274:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  409278:	add	x0, x0, #0x60
  40927c:	mov	x2, #0xffffffffffffffff    	// #-1
  409280:	bl	417bac <wcrtomb@plt+0x12d8c>
  409284:	ldr	x8, [x20, #4072]
  409288:	ldrb	w8, [x8, #156]
  40928c:	cmp	w8, #0x56
  409290:	b.hi	4092ec <wcrtomb@plt+0x44cc>  // b.pmore
  409294:	adrp	x9, 450000 <_obstack_memory_used@@Base+0x11da0>
  409298:	add	x9, x9, #0xa78
  40929c:	adr	x10, 4092ac <wcrtomb@plt+0x448c>
  4092a0:	ldrb	w11, [x9, x8]
  4092a4:	add	x10, x10, x11, lsl #2
  4092a8:	br	x10
  4092ac:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4092b0:	ldrb	w8, [x8, #112]
  4092b4:	cbnz	w8, 4092dc <wcrtomb@plt+0x44bc>
  4092b8:	bl	4093e8 <wcrtomb@plt+0x45c8>
  4092bc:	b	4092e0 <wcrtomb@plt+0x44c0>
  4092c0:	bl	4097dc <wcrtomb@plt+0x49bc>
  4092c4:	b	4092e0 <wcrtomb@plt+0x44c0>
  4092c8:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  4092cc:	add	x0, x0, #0x60
  4092d0:	bl	41588c <wcrtomb@plt+0x10a6c>
  4092d4:	tbz	w0, #0, 4092dc <wcrtomb@plt+0x44bc>
  4092d8:	bl	4098c0 <wcrtomb@plt+0x4aa0>
  4092dc:	bl	409368 <wcrtomb@plt+0x4548>
  4092e0:	ldp	x20, x19, [sp, #16]
  4092e4:	ldp	x29, x30, [sp], #32
  4092e8:	ret
  4092ec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4092f0:	ldr	x8, [x8, #1008]
  4092f4:	cbz	x8, 4092fc <wcrtomb@plt+0x44dc>
  4092f8:	blr	x8
  4092fc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409300:	add	x1, x1, #0xad7
  409304:	mov	w2, #0x5                   	// #5
  409308:	mov	x0, xzr
  40930c:	bl	404bf0 <dcgettext@plt>
  409310:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409314:	ldr	x8, [x8, #104]
  409318:	mov	x19, x0
  40931c:	mov	x0, x8
  409320:	bl	43beac <argp_usage@@Base+0xa2b0>
  409324:	ldr	x8, [x20, #4072]
  409328:	mov	x3, x0
  40932c:	mov	w0, wzr
  409330:	mov	w1, wzr
  409334:	ldrb	w4, [x8, #156]
  409338:	mov	x2, x19
  40933c:	bl	4041f0 <error@plt>
  409340:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409344:	mov	w9, #0x2                   	// #2
  409348:	str	w9, [x8, #3456]
  40934c:	b	4092ac <wcrtomb@plt+0x448c>
  409350:	bl	409648 <wcrtomb@plt+0x4828>
  409354:	b	4092e0 <wcrtomb@plt+0x44c0>
  409358:	bl	4096e4 <wcrtomb@plt+0x48c4>
  40935c:	b	4092e0 <wcrtomb@plt+0x44c0>
  409360:	bl	4099bc <wcrtomb@plt+0x4b9c>
  409364:	b	4092e0 <wcrtomb@plt+0x44c0>
  409368:	sub	sp, sp, #0x90
  40936c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409370:	ldr	x0, [x8, #104]
  409374:	mov	x1, sp
  409378:	stp	x29, x30, [sp, #128]
  40937c:	add	x29, sp, #0x80
  409380:	bl	409f08 <wcrtomb@plt+0x50e8>
  409384:	cbz	w0, 4093dc <wcrtomb@plt+0x45bc>
  409388:	ldr	w8, [sp, #16]
  40938c:	and	w9, w8, #0xf000
  409390:	cmp	w9, #0x4, lsl #12
  409394:	b.ne	4093b8 <wcrtomb@plt+0x4598>  // b.any
  409398:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40939c:	ldr	w9, [x9, #200]
  4093a0:	eor	w8, w9, w8
  4093a4:	tst	w8, #0xfff
  4093a8:	b.eq	4093dc <wcrtomb@plt+0x45bc>  // b.none
  4093ac:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4093b0:	add	x1, x1, #0xc1e
  4093b4:	b	4093c0 <wcrtomb@plt+0x45a0>
  4093b8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4093bc:	add	x1, x1, #0xc0c
  4093c0:	mov	w2, #0x5                   	// #5
  4093c4:	mov	x0, xzr
  4093c8:	bl	404bf0 <dcgettext@plt>
  4093cc:	mov	x1, x0
  4093d0:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  4093d4:	add	x0, x0, #0x60
  4093d8:	bl	40913c <wcrtomb@plt+0x431c>
  4093dc:	ldp	x29, x30, [sp, #128]
  4093e0:	add	sp, sp, #0x90
  4093e4:	ret
  4093e8:	sub	sp, sp, #0xb0
  4093ec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4093f0:	stp	x20, x19, [sp, #160]
  4093f4:	ldr	x19, [x8, #104]
  4093f8:	mov	x1, sp
  4093fc:	stp	x29, x30, [sp, #128]
  409400:	str	x21, [sp, #144]
  409404:	mov	x0, x19
  409408:	add	x29, sp, #0x80
  40940c:	bl	409f08 <wcrtomb@plt+0x50e8>
  409410:	cbz	w0, 409598 <wcrtomb@plt+0x4778>
  409414:	ldr	w8, [sp, #16]
  409418:	and	w9, w8, #0xf000
  40941c:	cmp	w9, #0x8, lsl #12
  409420:	b.ne	409574 <wcrtomb@plt+0x4754>  // b.any
  409424:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  409428:	ldr	w9, [x9, #200]
  40942c:	eor	w8, w9, w8
  409430:	tst	w8, #0xfff
  409434:	b.eq	40945c <wcrtomb@plt+0x463c>  // b.none
  409438:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40943c:	add	x1, x1, #0xc1e
  409440:	mov	w2, #0x5                   	// #5
  409444:	mov	x0, xzr
  409448:	bl	404bf0 <dcgettext@plt>
  40944c:	mov	x1, x0
  409450:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  409454:	add	x0, x0, #0x60
  409458:	bl	40913c <wcrtomb@plt+0x431c>
  40945c:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  409460:	add	x1, x1, #0xb8
  409464:	mov	x0, sp
  409468:	bl	41fd7c <wcrtomb@plt+0x1af5c>
  40946c:	tbnz	w0, #0, 409494 <wcrtomb@plt+0x4674>
  409470:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409474:	add	x1, x1, #0xc2b
  409478:	mov	w2, #0x5                   	// #5
  40947c:	mov	x0, xzr
  409480:	bl	404bf0 <dcgettext@plt>
  409484:	mov	x1, x0
  409488:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  40948c:	add	x0, x0, #0x60
  409490:	bl	40913c <wcrtomb@plt+0x431c>
  409494:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  409498:	add	x1, x1, #0xb8
  40949c:	mov	x0, sp
  4094a0:	bl	41fd90 <wcrtomb@plt+0x1af70>
  4094a4:	tbnz	w0, #0, 4094cc <wcrtomb@plt+0x46ac>
  4094a8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4094ac:	add	x1, x1, #0xc37
  4094b0:	mov	w2, #0x5                   	// #5
  4094b4:	mov	x0, xzr
  4094b8:	bl	404bf0 <dcgettext@plt>
  4094bc:	mov	x1, x0
  4094c0:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  4094c4:	add	x0, x0, #0x60
  4094c8:	bl	40913c <wcrtomb@plt+0x431c>
  4094cc:	mov	x0, sp
  4094d0:	bl	43cc84 <argp_usage@@Base+0xb088>
  4094d4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4094d8:	add	x8, x8, #0x148
  4094dc:	ldp	x2, x3, [x8]
  4094e0:	bl	422590 <wcrtomb@plt+0x1d770>
  4094e4:	cbz	w0, 40950c <wcrtomb@plt+0x46ec>
  4094e8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4094ec:	add	x1, x1, #0xc43
  4094f0:	mov	w2, #0x5                   	// #5
  4094f4:	mov	x0, xzr
  4094f8:	bl	404bf0 <dcgettext@plt>
  4094fc:	mov	x1, x0
  409500:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  409504:	add	x0, x0, #0x60
  409508:	bl	40913c <wcrtomb@plt+0x431c>
  40950c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409510:	ldr	x8, [x8, #4072]
  409514:	ldrb	w8, [x8, #156]
  409518:	cmp	w8, #0x53
  40951c:	b.eq	409534 <wcrtomb@plt+0x4714>  // b.none
  409520:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  409524:	ldr	x8, [sp, #48]
  409528:	ldr	x9, [x9, #232]
  40952c:	cmp	x8, x9
  409530:	b.ne	4095d0 <wcrtomb@plt+0x47b0>  // b.any
  409534:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  409538:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40953c:	ldr	w0, [x21, #2240]
  409540:	ldr	w2, [x8, #708]
  409544:	mov	x1, x19
  409548:	bl	404ce0 <openat@plt>
  40954c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409550:	str	w0, [x20, #1960]
  409554:	tbnz	w0, #31, 4095b0 <wcrtomb@plt+0x4790>
  409558:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40955c:	ldrb	w8, [x8, #368]
  409560:	cbz	w8, 4095dc <wcrtomb@plt+0x47bc>
  409564:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  409568:	add	x1, x1, #0x60
  40956c:	bl	41dafc <wcrtomb@plt+0x18cdc>
  409570:	b	4095e8 <wcrtomb@plt+0x47c8>
  409574:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409578:	add	x1, x1, #0xc0c
  40957c:	mov	w2, #0x5                   	// #5
  409580:	mov	x0, xzr
  409584:	bl	404bf0 <dcgettext@plt>
  409588:	mov	x1, x0
  40958c:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  409590:	add	x0, x0, #0x60
  409594:	bl	40913c <wcrtomb@plt+0x431c>
  409598:	bl	417ab0 <wcrtomb@plt+0x12c90>
  40959c:	ldp	x20, x19, [sp, #160]
  4095a0:	ldr	x21, [sp, #144]
  4095a4:	ldp	x29, x30, [sp, #128]
  4095a8:	add	sp, sp, #0xb0
  4095ac:	ret
  4095b0:	mov	x0, x19
  4095b4:	bl	428160 <wcrtomb@plt+0x23340>
  4095b8:	bl	417ab0 <wcrtomb@plt+0x12c90>
  4095bc:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  4095c0:	add	x0, x0, #0x60
  4095c4:	mov	x1, xzr
  4095c8:	bl	40913c <wcrtomb@plt+0x431c>
  4095cc:	b	40959c <wcrtomb@plt+0x477c>
  4095d0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4095d4:	add	x1, x1, #0xc54
  4095d8:	b	40957c <wcrtomb@plt+0x475c>
  4095dc:	adrp	x0, 40a000 <wcrtomb@plt+0x51e0>
  4095e0:	add	x0, x0, #0x44
  4095e4:	bl	409f68 <wcrtomb@plt+0x5148>
  4095e8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4095ec:	ldr	w8, [x8, #556]
  4095f0:	cmp	w8, #0x1
  4095f4:	b.ne	409630 <wcrtomb@plt+0x4810>  // b.any
  4095f8:	ldr	x8, [sp, #48]
  4095fc:	cbz	x8, 409630 <wcrtomb@plt+0x4810>
  409600:	mov	x0, sp
  409604:	bl	43cc6c <argp_usage@@Base+0xb070>
  409608:	ldr	w8, [x21, #2240]
  40960c:	mov	x3, x0
  409610:	ldr	w0, [x20, #1960]
  409614:	mov	x4, x1
  409618:	mov	w1, w8
  40961c:	mov	x2, x19
  409620:	bl	41a7c0 <wcrtomb@plt+0x159a0>
  409624:	cbz	w0, 409630 <wcrtomb@plt+0x4810>
  409628:	mov	x0, x19
  40962c:	bl	428744 <wcrtomb@plt+0x23924>
  409630:	ldr	w0, [x20, #1960]
  409634:	bl	4047c0 <close@plt>
  409638:	cbz	w0, 40959c <wcrtomb@plt+0x477c>
  40963c:	mov	x0, x19
  409640:	bl	428014 <wcrtomb@plt+0x231f4>
  409644:	b	40959c <wcrtomb@plt+0x477c>
  409648:	sub	sp, sp, #0x130
  40964c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409650:	ldr	x0, [x8, #104]
  409654:	add	x1, sp, #0x80
  409658:	stp	x29, x30, [sp, #256]
  40965c:	str	x28, [sp, #272]
  409660:	stp	x20, x19, [sp, #288]
  409664:	add	x29, sp, #0x100
  409668:	bl	409f08 <wcrtomb@plt+0x50e8>
  40966c:	cbz	w0, 4096d0 <wcrtomb@plt+0x48b0>
  409670:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409674:	ldr	x0, [x8, #120]
  409678:	mov	x1, sp
  40967c:	bl	409f08 <wcrtomb@plt+0x50e8>
  409680:	cbz	w0, 4096d0 <wcrtomb@plt+0x48b0>
  409684:	add	x0, sp, #0x80
  409688:	mov	x1, sp
  40968c:	bl	41fda4 <wcrtomb@plt+0x1af84>
  409690:	tbnz	w0, #0, 4096d0 <wcrtomb@plt+0x48b0>
  409694:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409698:	add	x1, x1, #0xccc
  40969c:	mov	w2, #0x5                   	// #5
  4096a0:	mov	x0, xzr
  4096a4:	bl	404bf0 <dcgettext@plt>
  4096a8:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  4096ac:	add	x19, x19, #0x60
  4096b0:	ldr	x1, [x19, #24]
  4096b4:	mov	x20, x0
  4096b8:	mov	w0, wzr
  4096bc:	bl	419648 <wcrtomb@plt+0x14828>
  4096c0:	mov	x2, x0
  4096c4:	mov	x0, x19
  4096c8:	mov	x1, x20
  4096cc:	bl	40913c <wcrtomb@plt+0x431c>
  4096d0:	ldp	x20, x19, [sp, #288]
  4096d4:	ldr	x28, [sp, #272]
  4096d8:	ldp	x29, x30, [sp, #256]
  4096dc:	add	sp, sp, #0x130
  4096e0:	ret
  4096e4:	stp	x29, x30, [sp, #-64]!
  4096e8:	str	x28, [sp, #16]
  4096ec:	stp	x22, x21, [sp, #32]
  4096f0:	stp	x20, x19, [sp, #48]
  4096f4:	mov	x29, sp
  4096f8:	sub	sp, sp, #0x400
  4096fc:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  409700:	ldr	x0, [x21, #120]
  409704:	bl	404190 <strlen@plt>
  409708:	mov	x20, x0
  40970c:	cmp	x0, #0x400
  409710:	b.cs	40971c <wcrtomb@plt+0x48fc>  // b.hs, b.nlast
  409714:	mov	x19, sp
  409718:	b	409728 <wcrtomb@plt+0x4908>
  40971c:	add	x0, x20, #0x1
  409720:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  409724:	mov	x19, x0
  409728:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40972c:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  409730:	ldr	w0, [x8, #2240]
  409734:	ldr	x1, [x22, #104]
  409738:	add	x3, x20, #0x1
  40973c:	mov	x2, x19
  409740:	bl	404e10 <readlinkat@plt>
  409744:	tbnz	x0, #63, 409780 <wcrtomb@plt+0x4960>
  409748:	cmp	x0, x20
  40974c:	b.ne	409764 <wcrtomb@plt+0x4944>  // b.any
  409750:	ldr	x0, [x21, #120]
  409754:	mov	x1, x19
  409758:	mov	x2, x20
  40975c:	bl	4046d0 <bcmp@plt>
  409760:	cbz	w0, 4097b0 <wcrtomb@plt+0x4990>
  409764:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409768:	add	x1, x1, #0xcdd
  40976c:	mov	w2, #0x5                   	// #5
  409770:	mov	x0, xzr
  409774:	bl	404bf0 <dcgettext@plt>
  409778:	mov	x1, x0
  40977c:	b	4097a4 <wcrtomb@plt+0x4984>
  409780:	bl	404d00 <__errno_location@plt>
  409784:	ldr	w8, [x0]
  409788:	ldr	x0, [x22, #104]
  40978c:	cmp	w8, #0x2
  409790:	b.ne	40979c <wcrtomb@plt+0x497c>  // b.any
  409794:	bl	42840c <wcrtomb@plt+0x235ec>
  409798:	b	4097a0 <wcrtomb@plt+0x4980>
  40979c:	bl	4283ec <wcrtomb@plt+0x235cc>
  4097a0:	mov	x1, xzr
  4097a4:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  4097a8:	add	x0, x0, #0x60
  4097ac:	bl	40913c <wcrtomb@plt+0x431c>
  4097b0:	mov	x8, sp
  4097b4:	cmp	x19, x8
  4097b8:	b.eq	4097c4 <wcrtomb@plt+0x49a4>  // b.none
  4097bc:	mov	x0, x19
  4097c0:	bl	4049d0 <free@plt>
  4097c4:	add	sp, sp, #0x400
  4097c8:	ldp	x20, x19, [sp, #48]
  4097cc:	ldp	x22, x21, [sp, #32]
  4097d0:	ldr	x28, [sp, #16]
  4097d4:	ldp	x29, x30, [sp], #64
  4097d8:	ret
  4097dc:	sub	sp, sp, #0x90
  4097e0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4097e4:	ldr	x0, [x8, #104]
  4097e8:	mov	x1, sp
  4097ec:	stp	x29, x30, [sp, #128]
  4097f0:	add	x29, sp, #0x80
  4097f4:	bl	409f08 <wcrtomb@plt+0x50e8>
  4097f8:	cbz	w0, 4098b4 <wcrtomb@plt+0x4a94>
  4097fc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409800:	ldr	x8, [x8, #4072]
  409804:	ldrb	w9, [x8, #156]
  409808:	subs	w8, w9, #0x33
  40980c:	b.ne	409860 <wcrtomb@plt+0x4a40>  // b.any
  409810:	ldr	w9, [sp, #16]
  409814:	and	w9, w9, #0xf000
  409818:	cmp	w9, #0x2, lsl #12
  40981c:	b.ne	409884 <wcrtomb@plt+0x4a64>  // b.any
  409820:	cmp	w8, #0x1
  409824:	b.hi	40983c <wcrtomb@plt+0x4a1c>  // b.pmore
  409828:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40982c:	ldr	x8, [x8, #216]
  409830:	ldr	x9, [sp, #32]
  409834:	cmp	x8, x9
  409838:	b.ne	409890 <wcrtomb@plt+0x4a70>  // b.any
  40983c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409840:	ldr	w8, [x8, #200]
  409844:	ldr	w9, [sp, #16]
  409848:	eor	w8, w9, w8
  40984c:	tst	w8, #0xfff
  409850:	b.eq	4098b4 <wcrtomb@plt+0x4a94>  // b.none
  409854:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409858:	add	x1, x1, #0xc1e
  40985c:	b	409898 <wcrtomb@plt+0x4a78>
  409860:	ldr	w10, [sp, #16]
  409864:	cmp	w9, #0x34
  409868:	and	w9, w10, #0xf000
  40986c:	b.ne	40987c <wcrtomb@plt+0x4a5c>  // b.any
  409870:	cmp	w9, #0x6, lsl #12
  409874:	b.eq	409820 <wcrtomb@plt+0x4a00>  // b.none
  409878:	b	409884 <wcrtomb@plt+0x4a64>
  40987c:	cmp	w9, #0x1, lsl #12
  409880:	b.eq	409820 <wcrtomb@plt+0x4a00>  // b.none
  409884:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409888:	add	x1, x1, #0xc0c
  40988c:	b	409898 <wcrtomb@plt+0x4a78>
  409890:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409894:	add	x1, x1, #0xced
  409898:	mov	w2, #0x5                   	// #5
  40989c:	mov	x0, xzr
  4098a0:	bl	404bf0 <dcgettext@plt>
  4098a4:	mov	x1, x0
  4098a8:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  4098ac:	add	x0, x0, #0x60
  4098b0:	bl	40913c <wcrtomb@plt+0x431c>
  4098b4:	ldp	x29, x30, [sp, #128]
  4098b8:	add	sp, sp, #0x90
  4098bc:	ret
  4098c0:	stp	x29, x30, [sp, #-32]!
  4098c4:	stp	x20, x19, [sp, #16]
  4098c8:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  4098cc:	ldr	w8, [x20, #504]
  4098d0:	mov	x29, sp
  4098d4:	cbz	w8, 409928 <wcrtomb@plt+0x4b08>
  4098d8:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  4098dc:	add	x0, x0, #0x60
  4098e0:	bl	413c18 <wcrtomb@plt+0xedf8>
  4098e4:	bl	414794 <wcrtomb@plt+0xf974>
  4098e8:	cbz	x0, 409974 <wcrtomb@plt+0x4b54>
  4098ec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4098f0:	mov	x1, x0
  4098f4:	ldr	x0, [x8, #480]
  4098f8:	bl	40a140 <wcrtomb@plt+0x5320>
  4098fc:	cbz	w0, 4099b0 <wcrtomb@plt+0x4b90>
  409900:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409904:	add	x1, x1, #0xcbc
  409908:	mov	w2, #0x5                   	// #5
  40990c:	mov	x0, xzr
  409910:	bl	404bf0 <dcgettext@plt>
  409914:	mov	x1, x0
  409918:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  40991c:	add	x0, x0, #0x60
  409920:	bl	40913c <wcrtomb@plt+0x431c>
  409924:	b	4099b0 <wcrtomb@plt+0x4b90>
  409928:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40992c:	add	x8, x8, #0x60
  409930:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  409934:	ldr	x0, [x8, #392]
  409938:	ldr	x1, [x8]
  40993c:	ldr	w2, [x9, #708]
  409940:	bl	40a3e0 <wcrtomb@plt+0x55c0>
  409944:	tbnz	w0, #31, 409984 <wcrtomb@plt+0x4b64>
  409948:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  40994c:	add	x1, x1, #0xb8
  409950:	mov	w19, w0
  409954:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  409958:	cbz	w0, 409994 <wcrtomb@plt+0x4b74>
  40995c:	mov	w0, w19
  409960:	bl	4047c0 <close@plt>
  409964:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  409968:	add	x2, x2, #0xd6c
  40996c:	cbnz	x2, 4099a0 <wcrtomb@plt+0x4b80>
  409970:	b	4098d8 <wcrtomb@plt+0x4ab8>
  409974:	adrp	x0, 40a000 <wcrtomb@plt+0x51e0>
  409978:	add	x0, x0, #0x138
  40997c:	bl	409f68 <wcrtomb@plt+0x5148>
  409980:	b	4099b0 <wcrtomb@plt+0x4b90>
  409984:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  409988:	add	x2, x2, #0xc54
  40998c:	cbnz	x2, 4099a0 <wcrtomb@plt+0x4b80>
  409990:	b	4098d8 <wcrtomb@plt+0x4ab8>
  409994:	mov	x2, xzr
  409998:	str	w19, [x20, #504]
  40999c:	cbz	x2, 4098d8 <wcrtomb@plt+0x4ab8>
  4099a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4099a4:	ldr	x0, [x8, #96]
  4099a8:	mov	w1, wzr
  4099ac:	bl	41ada4 <wcrtomb@plt+0x15f84>
  4099b0:	ldp	x20, x19, [sp, #16]
  4099b4:	ldp	x29, x30, [sp], #32
  4099b8:	ret
  4099bc:	sub	sp, sp, #0xb0
  4099c0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4099c4:	ldrb	w8, [x8, #112]
  4099c8:	stp	x29, x30, [sp, #128]
  4099cc:	stp	x22, x21, [sp, #144]
  4099d0:	stp	x20, x19, [sp, #160]
  4099d4:	add	x29, sp, #0x80
  4099d8:	cbz	w8, 4099e4 <wcrtomb@plt+0x4bc4>
  4099dc:	bl	409368 <wcrtomb@plt+0x4548>
  4099e0:	b	409ac0 <wcrtomb@plt+0x4ca0>
  4099e4:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  4099e8:	ldr	x0, [x22, #104]
  4099ec:	mov	x1, sp
  4099f0:	bl	409f08 <wcrtomb@plt+0x50e8>
  4099f4:	cbz	w0, 409ac0 <wcrtomb@plt+0x4ca0>
  4099f8:	ldr	w8, [sp, #16]
  4099fc:	and	w8, w8, #0xf000
  409a00:	cmp	w8, #0x8, lsl #12
  409a04:	b.ne	409a8c <wcrtomb@plt+0x4c6c>  // b.any
  409a08:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409a0c:	ldr	x8, [x8, #4072]
  409a10:	mov	w1, #0xc                   	// #12
  409a14:	add	x0, x8, #0x171
  409a18:	bl	4183c0 <wcrtomb@plt+0x135a0>
  409a1c:	tbnz	x0, #63, 409a98 <wcrtomb@plt+0x4c78>
  409a20:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409a24:	ldr	x8, [x8, #232]
  409a28:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  409a2c:	sub	x9, x9, x0
  409a30:	mov	x19, x0
  409a34:	cmp	x9, x8
  409a38:	b.lt	409a98 <wcrtomb@plt+0x4c78>  // b.tstop
  409a3c:	ldr	x9, [sp, #48]
  409a40:	add	x8, x8, x19
  409a44:	cmp	x9, x8
  409a48:	b.ne	409a98 <wcrtomb@plt+0x4c78>  // b.any
  409a4c:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  409a50:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  409a54:	ldr	x1, [x22, #104]
  409a58:	ldr	w0, [x8, #2240]
  409a5c:	ldr	w2, [x9, #708]
  409a60:	bl	404ce0 <openat@plt>
  409a64:	tbnz	w0, #31, 409ad4 <wcrtomb@plt+0x4cb4>
  409a68:	mov	x1, x19
  409a6c:	mov	w2, wzr
  409a70:	mov	w20, w0
  409a74:	bl	404390 <lseek@plt>
  409a78:	tbnz	x0, #63, 409af0 <wcrtomb@plt+0x4cd0>
  409a7c:	adrp	x0, 40a000 <wcrtomb@plt+0x51e0>
  409a80:	add	x0, x0, #0x44
  409a84:	bl	409f68 <wcrtomb@plt+0x5148>
  409a88:	b	409b10 <wcrtomb@plt+0x4cf0>
  409a8c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409a90:	add	x1, x1, #0xc0c
  409a94:	b	409aa0 <wcrtomb@plt+0x4c80>
  409a98:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409a9c:	add	x1, x1, #0xc54
  409aa0:	mov	w2, #0x5                   	// #5
  409aa4:	mov	x0, xzr
  409aa8:	bl	404bf0 <dcgettext@plt>
  409aac:	mov	x1, x0
  409ab0:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  409ab4:	add	x0, x0, #0x60
  409ab8:	bl	40913c <wcrtomb@plt+0x431c>
  409abc:	bl	417ab0 <wcrtomb@plt+0x12c90>
  409ac0:	ldp	x20, x19, [sp, #160]
  409ac4:	ldp	x22, x21, [sp, #144]
  409ac8:	ldp	x29, x30, [sp, #128]
  409acc:	add	sp, sp, #0xb0
  409ad0:	ret
  409ad4:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  409ad8:	add	x19, x19, #0x60
  409adc:	ldr	x0, [x19, #8]
  409ae0:	bl	428160 <wcrtomb@plt+0x23340>
  409ae4:	mov	x0, x19
  409ae8:	mov	x1, xzr
  409aec:	b	409ab8 <wcrtomb@plt+0x4c98>
  409af0:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  409af4:	add	x21, x21, #0x60
  409af8:	ldr	x0, [x21, #8]
  409afc:	mov	x1, x19
  409b00:	bl	4284ac <wcrtomb@plt+0x2368c>
  409b04:	mov	x0, x21
  409b08:	mov	x1, xzr
  409b0c:	bl	40913c <wcrtomb@plt+0x431c>
  409b10:	mov	w0, w20
  409b14:	bl	4047c0 <close@plt>
  409b18:	cbz	w0, 409ac0 <wcrtomb@plt+0x4ca0>
  409b1c:	ldr	x0, [x22, #104]
  409b20:	bl	428014 <wcrtomb@plt+0x231f4>
  409b24:	b	409ac0 <wcrtomb@plt+0x4ca0>
  409b28:	sub	sp, sp, #0x80
  409b2c:	stp	x29, x30, [sp, #32]
  409b30:	stp	x28, x27, [sp, #48]
  409b34:	stp	x26, x25, [sp, #64]
  409b38:	stp	x24, x23, [sp, #80]
  409b3c:	stp	x22, x21, [sp, #96]
  409b40:	stp	x20, x19, [sp, #112]
  409b44:	add	x29, sp, #0x20
  409b48:	bl	428850 <wcrtomb@plt+0x23a30>
  409b4c:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  409b50:	tbz	w0, #0, 409b94 <wcrtomb@plt+0x4d74>
  409b54:	ldr	x8, [x24, #1008]
  409b58:	cbz	x8, 409b60 <wcrtomb@plt+0x4d40>
  409b5c:	blr	x8
  409b60:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409b64:	add	x1, x1, #0xb09
  409b68:	mov	w2, #0x5                   	// #5
  409b6c:	mov	x0, xzr
  409b70:	bl	404bf0 <dcgettext@plt>
  409b74:	mov	x2, x0
  409b78:	mov	w0, wzr
  409b7c:	mov	w1, wzr
  409b80:	bl	4041f0 <error@plt>
  409b84:	mov	w19, #0x1                   	// #1
  409b88:	bl	4250bc <wcrtomb@plt+0x2029c>
  409b8c:	tbnz	w0, #0, 409ba0 <wcrtomb@plt+0x4d80>
  409b90:	b	409bd4 <wcrtomb@plt+0x4db4>
  409b94:	mov	w19, wzr
  409b98:	bl	4250bc <wcrtomb@plt+0x2029c>
  409b9c:	tbz	w0, #0, 409bd4 <wcrtomb@plt+0x4db4>
  409ba0:	ldr	x8, [x24, #1008]
  409ba4:	cbz	x8, 409bac <wcrtomb@plt+0x4d8c>
  409ba8:	blr	x8
  409bac:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409bb0:	add	x1, x1, #0xb44
  409bb4:	mov	w2, #0x5                   	// #5
  409bb8:	mov	x0, xzr
  409bbc:	bl	404bf0 <dcgettext@plt>
  409bc0:	mov	x2, x0
  409bc4:	mov	w0, wzr
  409bc8:	mov	w1, wzr
  409bcc:	bl	4041f0 <error@plt>
  409bd0:	mov	w19, #0x1                   	// #1
  409bd4:	cbz	w19, 409c08 <wcrtomb@plt+0x4de8>
  409bd8:	ldr	x8, [x24, #1008]
  409bdc:	cbz	x8, 409be4 <wcrtomb@plt+0x4dc4>
  409be0:	blr	x8
  409be4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409be8:	add	x1, x1, #0xb6d
  409bec:	mov	w2, #0x5                   	// #5
  409bf0:	mov	x0, xzr
  409bf4:	bl	404bf0 <dcgettext@plt>
  409bf8:	mov	x2, x0
  409bfc:	mov	w0, wzr
  409c00:	mov	w1, wzr
  409c04:	bl	4041f0 <error@plt>
  409c08:	bl	413aa0 <wcrtomb@plt+0xec80>
  409c0c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409c10:	ldr	x8, [x8, #1952]
  409c14:	cbnz	x8, 409c1c <wcrtomb@plt+0x4dfc>
  409c18:	bl	4090fc <wcrtomb@plt+0x42dc>
  409c1c:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  409c20:	ldr	w0, [x19, #976]
  409c24:	bl	404480 <fsync@plt>
  409c28:	ldr	w0, [x19, #976]
  409c2c:	mov	w1, #0x24b                 	// #587
  409c30:	bl	404dd0 <ioctl@plt>
  409c34:	ldr	w0, [x19, #976]
  409c38:	mov	w8, #0x2                   	// #2
  409c3c:	mov	w9, #0x40000000            	// #1073741824
  409c40:	strh	w8, [sp, #8]
  409c44:	mov	w8, #0x1                   	// #1
  409c48:	cmp	w0, w9
  409c4c:	str	w8, [sp, #12]
  409c50:	b.lt	409c74 <wcrtomb@plt+0x4e54>  // b.tstop
  409c54:	mov	w8, #0xc0000000            	// #-1073741824
  409c58:	mov	w1, #0x6d01                	// #27905
  409c5c:	add	w0, w0, w8
  409c60:	add	x2, sp, #0x8
  409c64:	movk	w1, #0x4008, lsl #16
  409c68:	bl	429618 <wcrtomb@plt+0x247f8>
  409c6c:	tbz	w0, #31, 409d28 <wcrtomb@plt+0x4f08>
  409c70:	b	409c88 <wcrtomb@plt+0x4e68>
  409c74:	mov	w1, #0x6d01                	// #27905
  409c78:	add	x2, sp, #0x8
  409c7c:	movk	w1, #0x4008, lsl #16
  409c80:	bl	404dd0 <ioctl@plt>
  409c84:	tbz	w0, #31, 409d28 <wcrtomb@plt+0x4f08>
  409c88:	bl	404d00 <__errno_location@plt>
  409c8c:	ldr	w8, [x0]
  409c90:	cmp	w8, #0x5
  409c94:	b.ne	409cdc <wcrtomb@plt+0x4ebc>  // b.any
  409c98:	ldr	w0, [x19, #976]
  409c9c:	mov	w8, #0x40000000            	// #1073741824
  409ca0:	cmp	w0, w8
  409ca4:	b.lt	409cc8 <wcrtomb@plt+0x4ea8>  // b.tstop
  409ca8:	mov	w8, #0xc0000000            	// #-1073741824
  409cac:	mov	w1, #0x6d01                	// #27905
  409cb0:	add	w0, w0, w8
  409cb4:	add	x2, sp, #0x8
  409cb8:	movk	w1, #0x4008, lsl #16
  409cbc:	bl	429618 <wcrtomb@plt+0x247f8>
  409cc0:	tbz	w0, #31, 409d28 <wcrtomb@plt+0x4f08>
  409cc4:	b	409cdc <wcrtomb@plt+0x4ebc>
  409cc8:	mov	w1, #0x6d01                	// #27905
  409ccc:	add	x2, sp, #0x8
  409cd0:	movk	w1, #0x4008, lsl #16
  409cd4:	bl	404dd0 <ioctl@plt>
  409cd8:	tbz	w0, #31, 409d28 <wcrtomb@plt+0x4f08>
  409cdc:	ldr	w0, [x19, #976]
  409ce0:	mov	w8, #0x40000000            	// #1073741824
  409ce4:	cmp	w0, w8
  409ce8:	b.lt	409d18 <wcrtomb@plt+0x4ef8>  // b.tstop
  409cec:	mov	w8, #0xc0000000            	// #-1073741824
  409cf0:	add	w0, w0, w8
  409cf4:	mov	x1, xzr
  409cf8:	mov	w2, wzr
  409cfc:	bl	42948c <wcrtomb@plt+0x2466c>
  409d00:	cbz	x0, 409d28 <wcrtomb@plt+0x4f08>
  409d04:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409d08:	ldr	x8, [x8, #688]
  409d0c:	ldr	x0, [x8]
  409d10:	bl	428548 <wcrtomb@plt+0x23728>
  409d14:	b	409ee8 <wcrtomb@plt+0x50c8>
  409d18:	mov	x1, xzr
  409d1c:	mov	w2, wzr
  409d20:	bl	404390 <lseek@plt>
  409d24:	cbnz	x0, 409d04 <wcrtomb@plt+0x4ee4>
  409d28:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409d2c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409d30:	mov	w8, #0x1                   	// #1
  409d34:	str	wzr, [x9, #3960]
  409d38:	strb	w8, [x10, #4024]
  409d3c:	bl	405ac8 <wcrtomb@plt+0xca8>
  409d40:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409d44:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  409d48:	adrp	x21, 450000 <_obstack_memory_used@@Base+0x11da0>
  409d4c:	adrp	x22, 450000 <_obstack_memory_used@@Base+0x11da0>
  409d50:	add	x19, x19, #0xfe8
  409d54:	add	x20, x20, #0x60
  409d58:	add	x21, x21, #0xb9d
  409d5c:	add	x22, x22, #0xbc8
  409d60:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409d64:	mov	w23, #0x2                   	// #2
  409d68:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409d6c:	b	409d7c <wcrtomb@plt+0x4f5c>
  409d70:	mov	w8, #0x9                   	// #9
  409d74:	cmp	w8, #0x9
  409d78:	b.eq	409ed4 <wcrtomb@plt+0x50b4>  // b.none
  409d7c:	mov	x0, x19
  409d80:	mov	x1, x20
  409d84:	mov	w2, wzr
  409d88:	bl	4172f0 <wcrtomb@plt+0x124d0>
  409d8c:	mov	w25, w0
  409d90:	cmp	w0, #0x5
  409d94:	b.ne	409e00 <wcrtomb@plt+0x4fe0>  // b.any
  409d98:	mov	x26, xzr
  409d9c:	ldr	x0, [x19]
  409da0:	bl	405744 <wcrtomb@plt+0x924>
  409da4:	mov	x0, x19
  409da8:	mov	x1, x20
  409dac:	mov	w2, wzr
  409db0:	bl	4172f0 <wcrtomb@plt+0x124d0>
  409db4:	cmp	w0, #0x5
  409db8:	add	x26, x26, #0x1
  409dbc:	b.eq	409d9c <wcrtomb@plt+0x4f7c>  // b.none
  409dc0:	ldr	x8, [x24, #1008]
  409dc4:	mov	w25, w0
  409dc8:	cbz	x8, 409dd0 <wcrtomb@plt+0x4fb0>
  409dcc:	blr	x8
  409dd0:	mov	w4, #0x5                   	// #5
  409dd4:	mov	x0, xzr
  409dd8:	mov	x1, x21
  409ddc:	mov	x2, x22
  409de0:	mov	x3, x26
  409de4:	bl	404af0 <dcngettext@plt>
  409de8:	mov	x2, x0
  409dec:	mov	w0, wzr
  409df0:	mov	w1, wzr
  409df4:	mov	w3, w26
  409df8:	bl	4041f0 <error@plt>
  409dfc:	str	w23, [x28, #3456]
  409e00:	cmp	w25, #0x4
  409e04:	b.eq	409d70 <wcrtomb@plt+0x4f50>  // b.none
  409e08:	ldr	x0, [x27, #4072]
  409e0c:	cmp	w25, #0x3
  409e10:	b.ne	409e2c <wcrtomb@plt+0x500c>  // b.any
  409e14:	bl	405744 <wcrtomb@plt+0x924>
  409e18:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409e1c:	ldrb	w8, [x8, #77]
  409e20:	cbz	w8, 409e54 <wcrtomb@plt+0x5034>
  409e24:	mov	w8, #0x8                   	// #8
  409e28:	b	409d74 <wcrtomb@plt+0x4f54>
  409e2c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409e30:	mov	w3, #0x1                   	// #1
  409e34:	mov	x1, x20
  409e38:	add	x2, x2, #0xfd0
  409e3c:	bl	417798 <wcrtomb@plt+0x12978>
  409e40:	bl	409214 <wcrtomb@plt+0x43f4>
  409e44:	mov	x0, x20
  409e48:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  409e4c:	mov	w8, wzr
  409e50:	b	409d74 <wcrtomb@plt+0x4f54>
  409e54:	mov	x0, x19
  409e58:	mov	x1, x20
  409e5c:	mov	w2, wzr
  409e60:	bl	4172f0 <wcrtomb@plt+0x124d0>
  409e64:	cmp	w0, #0x3
  409e68:	b.ne	409e78 <wcrtomb@plt+0x5058>  // b.any
  409e6c:	mov	w8, #0x9                   	// #9
  409e70:	cbnz	w8, 409d74 <wcrtomb@plt+0x4f54>
  409e74:	b	409e24 <wcrtomb@plt+0x5004>
  409e78:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409e7c:	ldrb	w8, [x8, #448]
  409e80:	tbz	w8, #0, 409ec8 <wcrtomb@plt+0x50a8>
  409e84:	ldr	x8, [x24, #1008]
  409e88:	cbz	x8, 409e90 <wcrtomb@plt+0x5070>
  409e8c:	blr	x8
  409e90:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  409e94:	mov	w2, #0x5                   	// #5
  409e98:	mov	x0, xzr
  409e9c:	add	x1, x1, #0xbf4
  409ea0:	bl	404bf0 <dcgettext@plt>
  409ea4:	mov	x25, x0
  409ea8:	bl	405568 <wcrtomb@plt+0x748>
  409eac:	add	x1, sp, #0x8
  409eb0:	bl	43650c <argp_usage@@Base+0x4910>
  409eb4:	mov	x3, x0
  409eb8:	mov	w0, wzr
  409ebc:	mov	w1, wzr
  409ec0:	mov	x2, x25
  409ec4:	bl	4041f0 <error@plt>
  409ec8:	mov	w8, wzr
  409ecc:	cbnz	w8, 409d74 <wcrtomb@plt+0x4f54>
  409ed0:	b	409e24 <wcrtomb@plt+0x5004>
  409ed4:	mov	w8, #0x1                   	// #1
  409ed8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409edc:	str	w8, [x9, #3960]
  409ee0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  409ee4:	strb	wzr, [x8, #4024]
  409ee8:	ldp	x20, x19, [sp, #112]
  409eec:	ldp	x22, x21, [sp, #96]
  409ef0:	ldp	x24, x23, [sp, #80]
  409ef4:	ldp	x26, x25, [sp, #64]
  409ef8:	ldp	x28, x27, [sp, #48]
  409efc:	ldp	x29, x30, [sp, #32]
  409f00:	add	sp, sp, #0x80
  409f04:	ret
  409f08:	stp	x29, x30, [sp, #-32]!
  409f0c:	str	x19, [sp, #16]
  409f10:	mov	x29, sp
  409f14:	mov	x19, x0
  409f18:	bl	41a52c <wcrtomb@plt+0x1570c>
  409f1c:	cbz	w0, 409f3c <wcrtomb@plt+0x511c>
  409f20:	bl	404d00 <__errno_location@plt>
  409f24:	ldr	w8, [x0]
  409f28:	mov	x0, x19
  409f2c:	cmp	w8, #0x2
  409f30:	b.ne	409f44 <wcrtomb@plt+0x5124>  // b.any
  409f34:	bl	4286c4 <wcrtomb@plt+0x238a4>
  409f38:	b	409f48 <wcrtomb@plt+0x5128>
  409f3c:	mov	w0, #0x1                   	// #1
  409f40:	b	409f5c <wcrtomb@plt+0x513c>
  409f44:	bl	4286a4 <wcrtomb@plt+0x23884>
  409f48:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  409f4c:	add	x0, x0, #0x60
  409f50:	mov	x1, xzr
  409f54:	bl	40913c <wcrtomb@plt+0x431c>
  409f58:	mov	w0, wzr
  409f5c:	ldr	x19, [sp, #16]
  409f60:	ldp	x29, x30, [sp], #32
  409f64:	ret
  409f68:	stp	x29, x30, [sp, #-64]!
  409f6c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409f70:	add	x8, x8, #0x60
  409f74:	stp	x20, x19, [sp, #48]
  409f78:	ldr	x19, [x8, #136]
  409f7c:	mov	x20, x0
  409f80:	mov	x0, x8
  409f84:	str	x23, [sp, #16]
  409f88:	stp	x22, x21, [sp, #32]
  409f8c:	mov	x29, sp
  409f90:	bl	404fe8 <wcrtomb@plt+0x1c8>
  409f94:	cbz	x19, 409fe8 <wcrtomb@plt+0x51c8>
  409f98:	adrp	x23, 40a000 <wcrtomb@plt+0x51e0>
  409f9c:	add	x23, x23, #0x138
  409fa0:	bl	4055d4 <wcrtomb@plt+0x7b4>
  409fa4:	cbz	x0, 409ff0 <wcrtomb@plt+0x51d0>
  409fa8:	mov	x21, x0
  409fac:	bl	405788 <wcrtomb@plt+0x968>
  409fb0:	cmp	x0, x19
  409fb4:	csel	x22, x19, x0, hi  // hi = pmore
  409fb8:	mov	x0, x22
  409fbc:	mov	x1, x21
  409fc0:	blr	x20
  409fc4:	add	x8, x21, x22
  409fc8:	cmp	w0, #0x0
  409fcc:	sub	x0, x8, #0x1
  409fd0:	csel	x20, x23, x20, eq  // eq = none
  409fd4:	bl	405744 <wcrtomb@plt+0x924>
  409fd8:	sub	x19, x19, x22
  409fdc:	mov	x0, x19
  409fe0:	bl	4050a4 <wcrtomb@plt+0x284>
  409fe4:	cbnz	x19, 409fa0 <wcrtomb@plt+0x5180>
  409fe8:	bl	40500c <wcrtomb@plt+0x1ec>
  409fec:	b	40a030 <wcrtomb@plt+0x5210>
  409ff0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  409ff4:	ldr	x8, [x8, #1008]
  409ff8:	cbz	x8, 40a000 <wcrtomb@plt+0x51e0>
  409ffc:	blr	x8
  40a000:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a004:	add	x1, x1, #0xc61
  40a008:	mov	w2, #0x5                   	// #5
  40a00c:	mov	x0, xzr
  40a010:	bl	404bf0 <dcgettext@plt>
  40a014:	mov	x2, x0
  40a018:	mov	w0, wzr
  40a01c:	mov	w1, wzr
  40a020:	bl	4041f0 <error@plt>
  40a024:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40a028:	mov	w9, #0x2                   	// #2
  40a02c:	str	w9, [x8, #3456]
  40a030:	ldp	x20, x19, [sp, #48]
  40a034:	ldp	x22, x21, [sp, #32]
  40a038:	ldr	x23, [sp, #16]
  40a03c:	ldp	x29, x30, [sp], #64
  40a040:	ret
  40a044:	stp	x29, x30, [sp, #-48]!
  40a048:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40a04c:	stp	x22, x21, [sp, #16]
  40a050:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40a054:	ldr	w8, [x8, #1960]
  40a058:	mov	x21, x1
  40a05c:	ldr	x1, [x22, #1952]
  40a060:	stp	x20, x19, [sp, #32]
  40a064:	mov	x19, x0
  40a068:	mov	w0, w8
  40a06c:	mov	x2, x19
  40a070:	mov	x29, sp
  40a074:	bl	41a68c <wcrtomb@plt+0x1586c>
  40a078:	cmp	x0, x19
  40a07c:	b.ne	40a0b8 <wcrtomb@plt+0x5298>  // b.any
  40a080:	ldr	x1, [x22, #1952]
  40a084:	mov	x0, x21
  40a088:	mov	x2, x19
  40a08c:	bl	4046d0 <bcmp@plt>
  40a090:	cbz	w0, 40a100 <wcrtomb@plt+0x52e0>
  40a094:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a098:	add	x1, x1, #0xcbc
  40a09c:	mov	w2, #0x5                   	// #5
  40a0a0:	mov	x0, xzr
  40a0a4:	bl	404bf0 <dcgettext@plt>
  40a0a8:	mov	x1, x0
  40a0ac:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  40a0b0:	add	x0, x0, #0x60
  40a0b4:	b	40a120 <wcrtomb@plt+0x5300>
  40a0b8:	mov	x20, x0
  40a0bc:	cmn	x0, #0x1
  40a0c0:	b.eq	40a108 <wcrtomb@plt+0x52e8>  // b.none
  40a0c4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a0c8:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a0cc:	add	x1, x1, #0xc7b
  40a0d0:	add	x2, x2, #0xc9b
  40a0d4:	mov	w4, #0x5                   	// #5
  40a0d8:	mov	x0, xzr
  40a0dc:	mov	x3, x19
  40a0e0:	bl	404af0 <dcngettext@plt>
  40a0e4:	mov	x1, x0
  40a0e8:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  40a0ec:	add	x0, x0, #0x60
  40a0f0:	mov	x2, x20
  40a0f4:	mov	x3, x19
  40a0f8:	bl	40913c <wcrtomb@plt+0x431c>
  40a0fc:	b	40a124 <wcrtomb@plt+0x5304>
  40a100:	mov	w0, #0x1                   	// #1
  40a104:	b	40a128 <wcrtomb@plt+0x5308>
  40a108:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  40a10c:	add	x19, x19, #0x60
  40a110:	ldr	x0, [x19, #8]
  40a114:	bl	4281b8 <wcrtomb@plt+0x23398>
  40a118:	mov	x0, x19
  40a11c:	mov	x1, xzr
  40a120:	bl	40913c <wcrtomb@plt+0x431c>
  40a124:	mov	w0, wzr
  40a128:	ldp	x20, x19, [sp, #32]
  40a12c:	ldp	x22, x21, [sp, #16]
  40a130:	ldp	x29, x30, [sp], #48
  40a134:	ret
  40a138:	mov	w0, #0x1                   	// #1
  40a13c:	ret
  40a140:	stp	x29, x30, [sp, #-64]!
  40a144:	stp	x24, x23, [sp, #16]
  40a148:	stp	x22, x21, [sp, #32]
  40a14c:	mov	w23, #0x4000                	// #16384
  40a150:	mov	w24, #0x400                 	// #1024
  40a154:	adrp	x21, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a158:	stp	x20, x19, [sp, #48]
  40a15c:	mov	x19, x1
  40a160:	mov	x20, x0
  40a164:	mov	w22, #0x1                   	// #1
  40a168:	movk	w23, #0x11, lsl #16
  40a16c:	movk	w24, #0x20, lsl #16
  40a170:	add	x21, x21, #0xd03
  40a174:	mov	x29, sp
  40a178:	b	40a180 <wcrtomb@plt+0x5360>
  40a17c:	cbz	w8, 40a1f8 <wcrtomb@plt+0x53d8>
  40a180:	ldrb	w8, [x20]
  40a184:	sub	w9, w8, #0x44
  40a188:	cmp	w9, #0x15
  40a18c:	b.hi	40a17c <wcrtomb@plt+0x535c>  // b.pmore
  40a190:	lsl	w10, w22, w9
  40a194:	tst	w10, w23
  40a198:	b.ne	40a1f8 <wcrtomb@plt+0x53d8>  // b.any
  40a19c:	tst	w10, w24
  40a1a0:	b.ne	40a1bc <wcrtomb@plt+0x539c>  // b.any
  40a1a4:	cbnz	w9, 40a17c <wcrtomb@plt+0x535c>
  40a1a8:	mov	x0, x20
  40a1ac:	mov	x1, x19
  40a1b0:	bl	404920 <strcmp@plt>
  40a1b4:	cbz	w0, 40a1e0 <wcrtomb@plt+0x53c0>
  40a1b8:	b	40a210 <wcrtomb@plt+0x53f0>
  40a1bc:	ldrb	w1, [x19]
  40a1c0:	mov	w2, #0x3                   	// #3
  40a1c4:	mov	x0, x21
  40a1c8:	bl	404b70 <memchr@plt>
  40a1cc:	cbz	x0, 40a210 <wcrtomb@plt+0x53f0>
  40a1d0:	add	x0, x20, #0x1
  40a1d4:	add	x1, x19, #0x1
  40a1d8:	bl	404920 <strcmp@plt>
  40a1dc:	cbnz	w0, 40a210 <wcrtomb@plt+0x53f0>
  40a1e0:	mov	x0, x20
  40a1e4:	bl	404190 <strlen@plt>
  40a1e8:	add	x8, x0, #0x1
  40a1ec:	add	x20, x20, x8
  40a1f0:	add	x19, x19, x8
  40a1f4:	b	40a180 <wcrtomb@plt+0x5360>
  40a1f8:	ldrb	w0, [x19]
  40a1fc:	ldp	x20, x19, [sp, #48]
  40a200:	ldp	x22, x21, [sp, #32]
  40a204:	ldp	x24, x23, [sp, #16]
  40a208:	ldp	x29, x30, [sp], #64
  40a20c:	ret
  40a210:	mov	w0, #0x1                   	// #1
  40a214:	b	40a1fc <wcrtomb@plt+0x53dc>
  40a218:	stp	x29, x30, [sp, #-64]!
  40a21c:	stp	x22, x21, [sp, #32]
  40a220:	mov	x21, x0
  40a224:	mov	w0, #0x28                  	// #40
  40a228:	str	x23, [sp, #16]
  40a22c:	stp	x20, x19, [sp, #48]
  40a230:	mov	x29, sp
  40a234:	mov	x19, x2
  40a238:	mov	w20, w1
  40a23c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  40a240:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40a244:	ldr	x8, [x23, #1968]
  40a248:	mov	x22, x0
  40a24c:	str	x21, [x0]
  40a250:	str	w20, [x0, #16]
  40a254:	stp	x19, x8, [x0, #24]
  40a258:	mov	x0, x21
  40a25c:	bl	404190 <strlen@plt>
  40a260:	str	x0, [x22, #8]
  40a264:	str	x22, [x23, #1968]
  40a268:	ldp	x20, x19, [sp, #48]
  40a26c:	ldp	x22, x21, [sp, #32]
  40a270:	ldr	x23, [sp, #16]
  40a274:	ldp	x29, x30, [sp], #64
  40a278:	ret
  40a27c:	stp	x29, x30, [sp, #-48]!
  40a280:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40a284:	ldr	w8, [x8, #644]
  40a288:	stp	x22, x21, [sp, #16]
  40a28c:	stp	x20, x19, [sp, #32]
  40a290:	mov	x29, sp
  40a294:	cbz	w8, 40a30c <wcrtomb@plt+0x54ec>
  40a298:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40a29c:	ldrb	w8, [x8, #448]
  40a2a0:	tbz	w8, #2, 40a30c <wcrtomb@plt+0x54ec>
  40a2a4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40a2a8:	ldr	x8, [x8, #1008]
  40a2ac:	mov	x19, x2
  40a2b0:	mov	x20, x1
  40a2b4:	mov	x21, x0
  40a2b8:	cbz	x8, 40a2c0 <wcrtomb@plt+0x54a0>
  40a2bc:	blr	x8
  40a2c0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a2c4:	add	x1, x1, #0xd1e
  40a2c8:	mov	w2, #0x5                   	// #5
  40a2cc:	mov	x0, xzr
  40a2d0:	bl	404bf0 <dcgettext@plt>
  40a2d4:	mov	x22, x0
  40a2d8:	mov	x0, x21
  40a2dc:	bl	43beac <argp_usage@@Base+0xa2b0>
  40a2e0:	mov	x21, x0
  40a2e4:	mov	w0, #0x1                   	// #1
  40a2e8:	mov	x1, x20
  40a2ec:	bl	43bb0c <argp_usage@@Base+0x9f10>
  40a2f0:	mov	x4, x0
  40a2f4:	mov	w0, wzr
  40a2f8:	mov	w1, wzr
  40a2fc:	mov	x2, x22
  40a300:	mov	x3, x21
  40a304:	mov	x5, x19
  40a308:	bl	4041f0 <error@plt>
  40a30c:	ldp	x20, x19, [sp, #32]
  40a310:	ldp	x22, x21, [sp, #16]
  40a314:	ldp	x29, x30, [sp], #48
  40a318:	ret
  40a31c:	stp	x29, x30, [sp, #-80]!
  40a320:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40a324:	stp	x24, x23, [sp, #32]
  40a328:	ldr	x24, [x8, #1968]
  40a32c:	str	x25, [sp, #16]
  40a330:	stp	x22, x21, [sp, #48]
  40a334:	stp	x20, x19, [sp, #64]
  40a338:	mov	x29, sp
  40a33c:	cbz	x24, 40a3c0 <wcrtomb@plt+0x55a0>
  40a340:	mov	x19, x1
  40a344:	mov	x20, x0
  40a348:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  40a34c:	ldr	x1, [x24]
  40a350:	ldr	w2, [x25, #708]
  40a354:	mov	x0, x20
  40a358:	bl	40a3e0 <wcrtomb@plt+0x55c0>
  40a35c:	tbnz	w0, #31, 40a3b0 <wcrtomb@plt+0x5590>
  40a360:	ldr	x8, [x24, #24]
  40a364:	mov	w22, w0
  40a368:	cbz	x8, 40a390 <wcrtomb@plt+0x5570>
  40a36c:	mov	w0, w22
  40a370:	blr	x8
  40a374:	mov	w23, w0
  40a378:	mov	w0, w22
  40a37c:	bl	4047c0 <close@plt>
  40a380:	tbnz	w23, #0, 40a398 <wcrtomb@plt+0x5578>
  40a384:	mov	w8, wzr
  40a388:	cbnz	w8, 40a3b4 <wcrtomb@plt+0x5594>
  40a38c:	b	40a3b0 <wcrtomb@plt+0x5590>
  40a390:	mov	w0, w22
  40a394:	bl	4047c0 <close@plt>
  40a398:	cbz	x19, 40a3a4 <wcrtomb@plt+0x5584>
  40a39c:	ldr	x8, [x24]
  40a3a0:	str	x8, [x19]
  40a3a4:	ldr	w21, [x24, #16]
  40a3a8:	mov	w8, #0x1                   	// #1
  40a3ac:	cbnz	w8, 40a3b4 <wcrtomb@plt+0x5594>
  40a3b0:	mov	w8, wzr
  40a3b4:	cbnz	w8, 40a3c4 <wcrtomb@plt+0x55a4>
  40a3b8:	ldr	x24, [x24, #32]
  40a3bc:	cbnz	x24, 40a34c <wcrtomb@plt+0x552c>
  40a3c0:	mov	w21, wzr
  40a3c4:	mov	w0, w21
  40a3c8:	ldp	x20, x19, [sp, #64]
  40a3cc:	ldp	x22, x21, [sp, #48]
  40a3d0:	ldp	x24, x23, [sp, #32]
  40a3d4:	ldr	x25, [sp, #16]
  40a3d8:	ldp	x29, x30, [sp], #80
  40a3dc:	ret
  40a3e0:	stp	x29, x30, [sp, #-64]!
  40a3e4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40a3e8:	ldrb	w9, [x8, #1992]
  40a3ec:	stp	x22, x21, [sp, #32]
  40a3f0:	stp	x20, x19, [sp, #48]
  40a3f4:	mov	w19, w2
  40a3f8:	mov	x20, x1
  40a3fc:	mov	x21, x0
  40a400:	str	x23, [sp, #16]
  40a404:	mov	x29, sp
  40a408:	tbnz	w9, #0, 40a430 <wcrtomb@plt+0x5610>
  40a40c:	mov	w9, #0x1                   	// #1
  40a410:	mov	w0, #0x2                   	// #2
  40a414:	strb	w9, [x8, #1992]
  40a418:	bl	4047b0 <strerror@plt>
  40a41c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  40a420:	add	x1, x1, #0xd3e
  40a424:	mov	w2, #0x5                   	// #5
  40a428:	mov	x0, xzr
  40a42c:	bl	404bf0 <dcgettext@plt>
  40a430:	adrp	x9, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40a434:	add	x8, x21, #0x198
  40a438:	add	x9, x9, #0x8c0
  40a43c:	cmp	x21, #0x0
  40a440:	csel	x23, x9, x8, eq  // eq = none
  40a444:	ldr	w0, [x23]
  40a448:	mov	x1, x20
  40a44c:	mov	w2, w19
  40a450:	bl	404ce0 <openat@plt>
  40a454:	mov	w22, w0
  40a458:	tbz	w0, #31, 40a468 <wcrtomb@plt+0x5648>
  40a45c:	mov	x0, x21
  40a460:	bl	40b374 <wcrtomb@plt+0x6554>
  40a464:	tbnz	w0, #0, 40a444 <wcrtomb@plt+0x5624>
  40a468:	mov	w0, w22
  40a46c:	ldp	x20, x19, [sp, #48]
  40a470:	ldp	x22, x21, [sp, #32]
  40a474:	ldr	x23, [sp, #16]
  40a478:	ldp	x29, x30, [sp], #64
  40a47c:	ret
  40a480:	sub	sp, sp, #0x40
  40a484:	add	x1, sp, #0x4
  40a488:	mov	w2, #0x2b                  	// #43
  40a48c:	stp	x29, x30, [sp, #48]
  40a490:	add	x29, sp, #0x30
  40a494:	bl	404b60 <read@plt>
  40a498:	cmp	x0, #0x2b
  40a49c:	b.ne	40a550 <wcrtomb@plt+0x5730>  // b.any
  40a4a0:	mov	x8, #0x6953                	// #26963
  40a4a4:	ldur	x9, [sp, #4]
  40a4a8:	movk	x8, #0x6e67, lsl #16
  40a4ac:	movk	x8, #0x7461, lsl #32
  40a4b0:	movk	x8, #0x7275, lsl #48
  40a4b4:	ldur	x10, [sp, #12]
  40a4b8:	mov	x11, #0x3a65                	// #14949
  40a4bc:	ldur	x14, [sp, #28]
  40a4c0:	eor	x8, x9, x8
  40a4c4:	mov	x9, #0x3731                	// #14129
  40a4c8:	movk	x11, #0x3820, lsl #16
  40a4cc:	movk	x9, #0x3732, lsl #16
  40a4d0:	movk	x11, #0x3461, lsl #32
  40a4d4:	movk	x9, #0x3938, lsl #32
  40a4d8:	movk	x11, #0x3737, lsl #48
  40a4dc:	movk	x9, #0x3066, lsl #48
  40a4e0:	mov	x12, #0x3566                	// #13670
  40a4e4:	ldur	x13, [sp, #20]
  40a4e8:	eor	x10, x10, x11
  40a4ec:	ldur	x11, [sp, #36]
  40a4f0:	eor	x9, x14, x9
  40a4f4:	mov	x14, #0x3836                	// #14390
  40a4f8:	movk	x12, #0x3739, lsl #16
  40a4fc:	movk	x14, #0x3638, lsl #16
  40a500:	movk	x12, #0x3264, lsl #32
  40a504:	movk	x14, #0x3038, lsl #32
  40a508:	movk	x12, #0x6438, lsl #48
  40a50c:	movk	x14, #0x6236, lsl #48
  40a510:	eor	x12, x13, x12
  40a514:	ldur	x13, [sp, #39]
  40a518:	eor	x11, x11, x14
  40a51c:	mov	x14, #0x3836                	// #14390
  40a520:	movk	x14, #0x3630, lsl #16
  40a524:	movk	x14, #0x6362, lsl #32
  40a528:	movk	x14, #0x3535, lsl #48
  40a52c:	eor	x13, x13, x14
  40a530:	orr	x8, x8, x10
  40a534:	orr	x9, x12, x9
  40a538:	orr	x10, x11, x13
  40a53c:	orr	x8, x8, x9
  40a540:	orr	x8, x8, x10
  40a544:	cmp	x8, #0x0
  40a548:	cset	w0, eq  // eq = none
  40a54c:	b	40a554 <wcrtomb@plt+0x5734>
  40a550:	mov	w0, wzr
  40a554:	ldp	x29, x30, [sp, #48]
  40a558:	add	sp, sp, #0x40
  40a55c:	ret
  40a560:	stp	x29, x30, [sp, #-16]!
  40a564:	adrp	x6, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a568:	mov	x5, x2
  40a56c:	mov	x4, x1
  40a570:	mov	x1, x0
  40a574:	lsr	x0, x0, #63
  40a578:	add	x6, x6, #0xd74
  40a57c:	mov	w2, #0x8                   	// #8
  40a580:	mov	x3, xzr
  40a584:	mov	x29, sp
  40a588:	bl	40a598 <wcrtomb@plt+0x5778>
  40a58c:	and	w0, w0, #0x1
  40a590:	ldp	x29, x30, [sp], #16
  40a594:	ret
  40a598:	stp	x29, x30, [sp, #-48]!
  40a59c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40a5a0:	ldr	w8, [x8, #816]
  40a5a4:	stp	x20, x19, [sp, #32]
  40a5a8:	mov	x7, x6
  40a5ac:	mov	x6, x5
  40a5b0:	orr	w8, w8, #0x4
  40a5b4:	cmp	w8, #0x6
  40a5b8:	mov	x19, x4
  40a5bc:	mov	x4, x3
  40a5c0:	mov	x3, x2
  40a5c4:	mov	x20, x1
  40a5c8:	cset	w1, eq  // eq = none
  40a5cc:	stp	x22, x21, [sp, #16]
  40a5d0:	mov	x29, sp
  40a5d4:	cbnz	w0, 40a5f8 <wcrtomb@plt+0x57d8>
  40a5d8:	sub	x2, x6, #0x1
  40a5dc:	mov	x9, #0xffffffffffffffff    	// #-1
  40a5e0:	add	x10, x2, x2, lsl #1
  40a5e4:	lsl	x11, x9, x10
  40a5e8:	cmp	x10, #0x40
  40a5ec:	csinv	x9, x9, x11, cs  // cs = hs, nlast
  40a5f0:	cmp	x9, x20
  40a5f4:	b.cs	40a6e0 <wcrtomb@plt+0x58c0>  // b.hs, b.nlast
  40a5f8:	cmp	w8, #0x6
  40a5fc:	b.ne	40a6a8 <wcrtomb@plt+0x5888>  // b.any
  40a600:	sub	x21, x6, #0x1
  40a604:	cmp	w0, #0x0
  40a608:	mov	x8, #0xffffffffffffffff    	// #-1
  40a60c:	lsl	x10, x21, #3
  40a610:	cinv	x9, x20, ne  // ne = any
  40a614:	lsl	x11, x8, x10
  40a618:	cmp	x10, #0x40
  40a61c:	csinv	x8, x8, x11, cs  // cs = hs, nlast
  40a620:	cmp	x9, x8
  40a624:	b.ls	40a6bc <wcrtomb@plt+0x589c>  // b.plast
  40a628:	cbz	w0, 40a6ac <wcrtomb@plt+0x588c>
  40a62c:	lsl	x22, x3, #3
  40a630:	add	x8, x21, x21, lsl #1
  40a634:	cmp	x22, x8
  40a638:	b.hi	40a6ac <wcrtomb@plt+0x588c>  // b.pmore
  40a63c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40a640:	ldrb	w9, [x8, #1996]
  40a644:	tbnz	w9, #0, 40a684 <wcrtomb@plt+0x5864>
  40a648:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40a64c:	ldr	x9, [x9, #1008]
  40a650:	mov	w10, #0x1                   	// #1
  40a654:	strb	w10, [x8, #1996]
  40a658:	cbz	x9, 40a660 <wcrtomb@plt+0x5840>
  40a65c:	blr	x9
  40a660:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a664:	add	x1, x1, #0xe0b
  40a668:	mov	w2, #0x5                   	// #5
  40a66c:	mov	x0, xzr
  40a670:	bl	404bf0 <dcgettext@plt>
  40a674:	mov	x2, x0
  40a678:	mov	w0, wzr
  40a67c:	mov	w1, wzr
  40a680:	bl	4041f0 <error@plt>
  40a684:	mov	x8, #0xffffffffffffffff    	// #-1
  40a688:	lsl	x9, x8, x22
  40a68c:	cmp	x22, #0x40
  40a690:	csinv	x8, x8, x9, cs  // cs = hs, nlast
  40a694:	and	x0, x8, x20
  40a698:	mov	x1, x19
  40a69c:	mov	x2, x21
  40a6a0:	strb	wzr, [x19, x21]
  40a6a4:	b	40a6ec <wcrtomb@plt+0x58cc>
  40a6a8:	mov	x4, xzr
  40a6ac:	mov	x2, x20
  40a6b0:	mov	x5, x19
  40a6b4:	bl	40c1c4 <wcrtomb@plt+0x73a4>
  40a6b8:	b	40a6f4 <wcrtomb@plt+0x58d4>
  40a6bc:	cmp	w0, #0x0
  40a6c0:	mov	w8, #0xffffff80            	// #-128
  40a6c4:	csinv	w8, w8, wzr, eq  // eq = none
  40a6c8:	strb	w8, [x19], #1
  40a6cc:	mov	x1, x20
  40a6d0:	mov	x2, x19
  40a6d4:	mov	x3, x21
  40a6d8:	bl	40c1a4 <wcrtomb@plt+0x7384>
  40a6dc:	b	40a6f0 <wcrtomb@plt+0x58d0>
  40a6e0:	mov	x0, x20
  40a6e4:	mov	x1, x19
  40a6e8:	strb	wzr, [x19, x2]
  40a6ec:	bl	40c184 <wcrtomb@plt+0x7364>
  40a6f0:	mov	w0, #0x1                   	// #1
  40a6f4:	ldp	x20, x19, [sp, #32]
  40a6f8:	ldp	x22, x21, [sp, #16]
  40a6fc:	and	w0, w0, #0x1
  40a700:	ldp	x29, x30, [sp], #48
  40a704:	ret
  40a708:	stp	x29, x30, [sp, #-16]!
  40a70c:	adrp	x6, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a710:	mov	x5, x2
  40a714:	mov	x4, x1
  40a718:	mov	x1, x0
  40a71c:	lsr	x0, x0, #63
  40a720:	add	x6, x6, #0xd7a
  40a724:	mov	w2, #0x8                   	// #8
  40a728:	mov	x3, xzr
  40a72c:	mov	x29, sp
  40a730:	bl	40a598 <wcrtomb@plt+0x5778>
  40a734:	and	w0, w0, #0x1
  40a738:	ldp	x29, x30, [sp], #16
  40a73c:	ret
  40a740:	stp	x29, x30, [sp, #-32]!
  40a744:	str	x19, [sp, #16]
  40a748:	mov	x29, sp
  40a74c:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40a750:	movi	v0.2d, #0x0
  40a754:	stp	q0, q0, [x0]
  40a758:	stp	q0, q0, [x0, #32]
  40a75c:	stp	q0, q0, [x0, #64]
  40a760:	stp	q0, q0, [x0, #96]
  40a764:	stp	q0, q0, [x0, #128]
  40a768:	stp	q0, q0, [x0, #160]
  40a76c:	stp	q0, q0, [x0, #192]
  40a770:	stp	q0, q0, [x0, #224]
  40a774:	stp	q0, q0, [x0, #256]
  40a778:	stp	q0, q0, [x0, #288]
  40a77c:	stp	q0, q0, [x0, #320]
  40a780:	stp	q0, q0, [x0, #352]
  40a784:	stp	q0, q0, [x0, #384]
  40a788:	stp	q0, q0, [x0, #416]
  40a78c:	stp	q0, q0, [x0, #448]
  40a790:	stp	q0, q0, [x0, #480]
  40a794:	bl	405744 <wcrtomb@plt+0x924>
  40a798:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40a79c:	mov	x19, x0
  40a7a0:	bl	405788 <wcrtomb@plt+0x968>
  40a7a4:	mov	x2, x0
  40a7a8:	mov	x0, x19
  40a7ac:	mov	w1, wzr
  40a7b0:	bl	404600 <memset@plt>
  40a7b4:	mov	x0, x19
  40a7b8:	bl	405744 <wcrtomb@plt+0x924>
  40a7bc:	ldr	x19, [sp, #16]
  40a7c0:	ldp	x29, x30, [sp], #32
  40a7c4:	ret
  40a7c8:	stp	x29, x30, [sp, #-48]!
  40a7cc:	stp	x22, x21, [sp, #16]
  40a7d0:	stp	x20, x19, [sp, #32]
  40a7d4:	mov	x29, sp
  40a7d8:	mov	x20, x2
  40a7dc:	mov	x21, x1
  40a7e0:	mov	x22, x0
  40a7e4:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40a7e8:	movi	v0.2d, #0x0
  40a7ec:	mov	x1, x22
  40a7f0:	mov	x19, x0
  40a7f4:	stp	q0, q0, [x0]
  40a7f8:	stp	q0, q0, [x0, #32]
  40a7fc:	stp	q0, q0, [x0, #64]
  40a800:	stp	q0, q0, [x0, #96]
  40a804:	stp	q0, q0, [x0, #128]
  40a808:	stp	q0, q0, [x0, #160]
  40a80c:	stp	q0, q0, [x0, #192]
  40a810:	stp	q0, q0, [x0, #224]
  40a814:	stp	q0, q0, [x0, #256]
  40a818:	stp	q0, q0, [x0, #288]
  40a81c:	stp	q0, q0, [x0, #320]
  40a820:	stp	q0, q0, [x0, #352]
  40a824:	stp	q0, q0, [x0, #384]
  40a828:	stp	q0, q0, [x0, #416]
  40a82c:	stp	q0, q0, [x0, #448]
  40a830:	stp	q0, q0, [x0, #480]
  40a834:	bl	40a8b8 <wcrtomb@plt+0x5a98>
  40a838:	add	x1, x19, #0x7c
  40a83c:	mov	w2, #0xc                   	// #12
  40a840:	mov	x0, x21
  40a844:	bl	40a560 <wcrtomb@plt+0x5740>
  40a848:	mov	x8, #0x1ffffffff           	// #8589934591
  40a84c:	cmp	x20, x8
  40a850:	csel	x8, x20, x8, cc  // cc = lo, ul, last
  40a854:	cmp	x20, #0x0
  40a858:	csel	x0, xzr, x8, lt  // lt = tstop
  40a85c:	add	x1, x19, #0x88
  40a860:	mov	w2, #0xc                   	// #12
  40a864:	bl	40a708 <wcrtomb@plt+0x58e8>
  40a868:	add	x1, x19, #0x64
  40a86c:	mov	w0, #0x81a4                	// #33188
  40a870:	bl	40a8f0 <wcrtomb@plt+0x5ad0>
  40a874:	add	x1, x19, #0x6c
  40a878:	mov	w0, wzr
  40a87c:	bl	40a94c <wcrtomb@plt+0x5b2c>
  40a880:	add	x1, x19, #0x74
  40a884:	mov	w0, wzr
  40a888:	bl	40a988 <wcrtomb@plt+0x5b68>
  40a88c:	mov	x9, #0x7375                	// #29557
  40a890:	movk	x9, #0x6174, lsl #16
  40a894:	movk	x9, #0x72, lsl #32
  40a898:	add	x8, x19, #0x101
  40a89c:	movk	x9, #0x3030, lsl #48
  40a8a0:	str	x9, [x8]
  40a8a4:	mov	x0, x19
  40a8a8:	ldp	x20, x19, [sp, #32]
  40a8ac:	ldp	x22, x21, [sp, #16]
  40a8b0:	ldp	x29, x30, [sp], #48
  40a8b4:	ret
  40a8b8:	stp	x29, x30, [sp, #-32]!
  40a8bc:	mov	w2, #0x64                  	// #100
  40a8c0:	str	x19, [sp, #16]
  40a8c4:	mov	x29, sp
  40a8c8:	mov	x19, x0
  40a8cc:	bl	40c3e0 <wcrtomb@plt+0x75c0>
  40a8d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40a8d4:	ldr	w8, [x8, #816]
  40a8d8:	cmp	w8, #0x2
  40a8dc:	b.ne	40a8e4 <wcrtomb@plt+0x5ac4>  // b.any
  40a8e0:	strb	wzr, [x19, #99]
  40a8e4:	ldr	x19, [sp, #16]
  40a8e8:	ldp	x29, x30, [sp], #32
  40a8ec:	ret
  40a8f0:	stp	x29, x30, [sp, #-16]!
  40a8f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40a8f8:	ldr	w8, [x8, #816]
  40a8fc:	mov	x4, x1
  40a900:	mov	x29, sp
  40a904:	cmp	w8, #0x6
  40a908:	b.hi	40a924 <wcrtomb@plt+0x5b04>  // b.pmore
  40a90c:	mov	w9, #0x1                   	// #1
  40a910:	lsl	w8, w9, w8
  40a914:	mov	w9, #0x58                  	// #88
  40a918:	tst	w8, w9
  40a91c:	b.eq	40a924 <wcrtomb@plt+0x5b04>  // b.none
  40a920:	and	w0, w0, #0xfff
  40a924:	adrp	x6, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a928:	mov	w1, w0
  40a92c:	add	x6, x6, #0xe7e
  40a930:	mov	w2, #0x4                   	// #4
  40a934:	mov	w5, #0x8                   	// #8
  40a938:	mov	w0, wzr
  40a93c:	mov	x3, xzr
  40a940:	bl	40a598 <wcrtomb@plt+0x5778>
  40a944:	ldp	x29, x30, [sp], #16
  40a948:	ret
  40a94c:	stp	x29, x30, [sp, #-16]!
  40a950:	adrp	x3, 40c000 <wcrtomb@plt+0x71e0>
  40a954:	adrp	x6, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a958:	mov	x4, x1
  40a95c:	mov	w1, w0
  40a960:	add	x3, x3, #0x404
  40a964:	add	x6, x6, #0xe85
  40a968:	mov	w2, #0x4                   	// #4
  40a96c:	mov	w5, #0x8                   	// #8
  40a970:	mov	w0, wzr
  40a974:	mov	x29, sp
  40a978:	bl	40a598 <wcrtomb@plt+0x5778>
  40a97c:	and	w0, w0, #0x1
  40a980:	ldp	x29, x30, [sp], #16
  40a984:	ret
  40a988:	stp	x29, x30, [sp, #-16]!
  40a98c:	adrp	x3, 40c000 <wcrtomb@plt+0x71e0>
  40a990:	adrp	x6, 450000 <_obstack_memory_used@@Base+0x11da0>
  40a994:	mov	x4, x1
  40a998:	mov	w1, w0
  40a99c:	add	x3, x3, #0x454
  40a9a0:	add	x6, x6, #0xe92
  40a9a4:	mov	w2, #0x4                   	// #4
  40a9a8:	mov	w5, #0x8                   	// #8
  40a9ac:	mov	w0, wzr
  40a9b0:	mov	x29, sp
  40a9b4:	bl	40a598 <wcrtomb@plt+0x5778>
  40a9b8:	and	w0, w0, #0x1
  40a9bc:	ldp	x29, x30, [sp], #16
  40a9c0:	ret
  40a9c4:	stp	x29, x30, [sp, #-64]!
  40a9c8:	str	x28, [sp, #16]
  40a9cc:	stp	x22, x21, [sp, #32]
  40a9d0:	stp	x20, x19, [sp, #48]
  40a9d4:	mov	x29, sp
  40a9d8:	sub	sp, sp, #0x200
  40a9dc:	ldr	x8, [x1, #360]
  40a9e0:	mov	x20, x2
  40a9e4:	cbnz	x8, 40aa8c <wcrtomb@plt+0x5c6c>
  40a9e8:	add	x19, x1, #0x158
  40a9ec:	ldr	x8, [x19]
  40a9f0:	mov	x21, x1
  40a9f4:	cbz	x8, 40aa8c <wcrtomb@plt+0x5c6c>
  40a9f8:	mov	w22, w0
  40a9fc:	mov	x0, x19
  40aa00:	bl	411948 <wcrtomb@plt+0xcb28>
  40aa04:	mov	x0, sp
  40aa08:	mov	w2, #0x200                 	// #512
  40aa0c:	mov	x1, x20
  40aa10:	bl	404110 <memcpy@plt>
  40aa14:	tbz	w22, #0, 40aa30 <wcrtomb@plt+0x5c10>
  40aa18:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  40aa1c:	add	x22, x22, #0x2c8
  40aa20:	mov	w21, #0x67                  	// #103
  40aa24:	bl	411624 <wcrtomb@plt+0xc804>
  40aa28:	mov	x20, x0
  40aa2c:	b	40aa5c <wcrtomb@plt+0x5c3c>
  40aa30:	mov	x0, x21
  40aa34:	bl	4115d8 <wcrtomb@plt+0xc7b8>
  40aa38:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40aa3c:	ldr	w8, [x8, #56]
  40aa40:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  40aa44:	add	x9, x21, #0xb0
  40aa48:	add	x10, x10, #0x318
  40aa4c:	cmp	w8, #0x0
  40aa50:	mov	x20, x0
  40aa54:	csel	x22, x9, x10, eq  // eq = none
  40aa58:	mov	w21, #0x78                  	// #120
  40aa5c:	ldr	x2, [x22]
  40aa60:	mov	w0, w21
  40aa64:	mov	x1, x20
  40aa68:	mov	x3, x19
  40aa6c:	bl	4116c0 <wcrtomb@plt+0xc8a0>
  40aa70:	mov	x0, x20
  40aa74:	bl	4049d0 <free@plt>
  40aa78:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40aa7c:	mov	x1, sp
  40aa80:	mov	w2, #0x200                 	// #512
  40aa84:	mov	x20, x0
  40aa88:	bl	404110 <memcpy@plt>
  40aa8c:	mov	x0, x20
  40aa90:	add	sp, sp, #0x200
  40aa94:	ldp	x20, x19, [sp, #48]
  40aa98:	ldp	x22, x21, [sp, #32]
  40aa9c:	ldr	x28, [sp, #16]
  40aaa0:	ldp	x29, x30, [sp], #64
  40aaa4:	ret
  40aaa8:	sub	sp, sp, #0x60
  40aaac:	stp	x29, x30, [sp, #32]
  40aab0:	add	x29, sp, #0x20
  40aab4:	str	x23, [sp, #48]
  40aab8:	stp	x22, x21, [sp, #64]
  40aabc:	stp	x20, x19, [sp, #80]
  40aac0:	mov	x20, x0
  40aac4:	str	xzr, [x29, #24]
  40aac8:	stur	xzr, [x29, #-8]
  40aacc:	bl	40b078 <wcrtomb@plt+0x6258>
  40aad0:	mov	x19, x0
  40aad4:	cbz	x0, 40ae70 <wcrtomb@plt+0x6050>
  40aad8:	mov	x1, x20
  40aadc:	ldr	w0, [x1, #112]!
  40aae0:	add	x2, x29, #0x18
  40aae4:	bl	4193bc <wcrtomb@plt+0x1459c>
  40aae8:	mov	x21, x20
  40aaec:	ldr	w0, [x21, #116]!
  40aaf0:	sub	x2, x29, #0x8
  40aaf4:	mov	x1, x21
  40aaf8:	bl	4194ac <wcrtomb@plt+0x1468c>
  40aafc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ab00:	ldr	x3, [x8, #600]
  40ab04:	cbz	x3, 40ab34 <wcrtomb@plt+0x5d14>
  40ab08:	ldr	w0, [x20, #104]
  40ab0c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ab10:	ldr	w2, [x8, #80]
  40ab14:	mov	x4, xzr
  40ab18:	and	w8, w0, #0xf000
  40ab1c:	cmp	w8, #0x4, lsl #12
  40ab20:	cset	w1, eq  // eq = none
  40ab24:	and	w22, w0, #0xfffff000
  40ab28:	bl	436da0 <argp_usage@@Base+0x51a4>
  40ab2c:	orr	w8, w0, w22
  40ab30:	str	w8, [x20, #104]
  40ab34:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  40ab38:	ldr	w9, [x23, #816]
  40ab3c:	ldr	w8, [x20, #104]
  40ab40:	add	x1, x19, #0x64
  40ab44:	orr	w9, w9, #0x2
  40ab48:	and	w10, w8, #0xfff
  40ab4c:	cmp	w9, #0x3
  40ab50:	csel	w0, w10, w8, eq  // eq = none
  40ab54:	bl	40a8f0 <wcrtomb@plt+0x5ad0>
  40ab58:	ldr	w0, [x20, #112]
  40ab5c:	cmp	w0, #0x200, lsl #12
  40ab60:	b.cc	40ab88 <wcrtomb@plt+0x5d68>  // b.lo, b.ul, b.last
  40ab64:	ldr	w8, [x23, #816]
  40ab68:	cmp	w8, #0x4
  40ab6c:	b.ne	40ab88 <wcrtomb@plt+0x5d68>  // b.any
  40ab70:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40ab74:	add	x0, x0, #0xd81
  40ab78:	mov	x1, x20
  40ab7c:	mov	x2, xzr
  40ab80:	bl	41213c <wcrtomb@plt+0xd31c>
  40ab84:	mov	w0, wzr
  40ab88:	add	x1, x19, #0x6c
  40ab8c:	bl	40a94c <wcrtomb@plt+0x5b2c>
  40ab90:	tbz	w0, #0, 40ae6c <wcrtomb@plt+0x604c>
  40ab94:	ldr	w0, [x21]
  40ab98:	cmp	w0, #0x200, lsl #12
  40ab9c:	b.cc	40abc4 <wcrtomb@plt+0x5da4>  // b.lo, b.ul, b.last
  40aba0:	ldr	w8, [x23, #816]
  40aba4:	cmp	w8, #0x4
  40aba8:	b.ne	40abc4 <wcrtomb@plt+0x5da4>  // b.any
  40abac:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40abb0:	add	x0, x0, #0xd85
  40abb4:	mov	x1, x20
  40abb8:	mov	x2, xzr
  40abbc:	bl	41213c <wcrtomb@plt+0xd31c>
  40abc0:	mov	w0, wzr
  40abc4:	add	x1, x19, #0x74
  40abc8:	bl	40a988 <wcrtomb@plt+0x5b68>
  40abcc:	tbz	w0, #0, 40ae6c <wcrtomb@plt+0x604c>
  40abd0:	ldr	x0, [x20, #136]
  40abd4:	lsr	x8, x0, #33
  40abd8:	cbz	x8, 40ac00 <wcrtomb@plt+0x5de0>
  40abdc:	ldr	w8, [x23, #816]
  40abe0:	cmp	w8, #0x4
  40abe4:	b.ne	40ac00 <wcrtomb@plt+0x5de0>  // b.any
  40abe8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  40abec:	add	x0, x0, #0xb4
  40abf0:	mov	x1, x20
  40abf4:	mov	x2, xzr
  40abf8:	bl	41213c <wcrtomb@plt+0xd31c>
  40abfc:	mov	x0, xzr
  40ac00:	add	x1, x19, #0x7c
  40ac04:	mov	w2, #0xc                   	// #12
  40ac08:	bl	40a560 <wcrtomb@plt+0x5740>
  40ac0c:	tbz	w0, #0, 40ae6c <wcrtomb@plt+0x604c>
  40ac10:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ac14:	ldr	w8, [x8, #56]
  40ac18:	cmp	w8, #0x2
  40ac1c:	b.eq	40ac44 <wcrtomb@plt+0x5e24>  // b.none
  40ac20:	cmp	w8, #0x1
  40ac24:	b.eq	40ac34 <wcrtomb@plt+0x5e14>  // b.none
  40ac28:	cbnz	w8, 40ac78 <wcrtomb@plt+0x5e58>
  40ac2c:	ldur	q0, [x20, #232]
  40ac30:	b	40ac74 <wcrtomb@plt+0x5e54>
  40ac34:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ac38:	add	x8, x8, #0x318
  40ac3c:	ldr	q0, [x8]
  40ac40:	b	40ac74 <wcrtomb@plt+0x5e54>
  40ac44:	mov	x21, x20
  40ac48:	ldr	x0, [x21, #232]!
  40ac4c:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  40ac50:	add	x22, x22, #0x318
  40ac54:	ldp	x2, x3, [x22]
  40ac58:	ldr	x1, [x21, #8]
  40ac5c:	bl	43cd0c <argp_usage@@Base+0xb110>
  40ac60:	cmp	w0, #0x1
  40ac64:	b.lt	40ac70 <wcrtomb@plt+0x5e50>  // b.tstop
  40ac68:	ldr	q0, [x22]
  40ac6c:	b	40ac74 <wcrtomb@plt+0x5e54>
  40ac70:	ldr	q0, [x21]
  40ac74:	str	q0, [sp]
  40ac78:	ldr	w8, [x23, #816]
  40ac7c:	cmp	w8, #0x4
  40ac80:	b.ne	40acbc <wcrtomb@plt+0x5e9c>  // b.any
  40ac84:	ldr	x8, [sp]
  40ac88:	lsr	x8, x8, #33
  40ac8c:	cbnz	x8, 40ac98 <wcrtomb@plt+0x5e78>
  40ac90:	ldr	x8, [sp, #8]
  40ac94:	cbz	x8, 40acac <wcrtomb@plt+0x5e8c>
  40ac98:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  40ac9c:	add	x0, x0, #0x63a
  40aca0:	mov	x2, sp
  40aca4:	mov	x1, x20
  40aca8:	bl	41213c <wcrtomb@plt+0xd31c>
  40acac:	ldr	x8, [sp]
  40acb0:	lsr	x8, x8, #33
  40acb4:	cbz	x8, 40acbc <wcrtomb@plt+0x5e9c>
  40acb8:	str	xzr, [sp]
  40acbc:	ldr	x0, [sp]
  40acc0:	add	x1, x19, #0x88
  40acc4:	mov	w2, #0xc                   	// #12
  40acc8:	bl	40a708 <wcrtomb@plt+0x58e8>
  40accc:	tbz	w0, #0, 40ae6c <wcrtomb@plt+0x604c>
  40acd0:	ldr	w8, [x20, #104]
  40acd4:	and	w8, w8, #0xf000
  40acd8:	orr	w8, w8, #0x4000
  40acdc:	cmp	w8, #0x6, lsl #12
  40ace0:	b.ne	40ad7c <wcrtomb@plt+0x5f5c>  // b.any
  40ace4:	ldr	x21, [x20, #120]
  40ace8:	mov	x0, x21
  40acec:	bl	4048b0 <gnu_dev_major@plt>
  40acf0:	mov	w22, w0
  40acf4:	mov	x0, x21
  40acf8:	bl	404b10 <gnu_dev_minor@plt>
  40acfc:	cmp	w22, #0x200, lsl #12
  40ad00:	mov	w21, w0
  40ad04:	b.cc	40ad2c <wcrtomb@plt+0x5f0c>  // b.lo, b.ul, b.last
  40ad08:	ldr	w8, [x23, #816]
  40ad0c:	cmp	w8, #0x4
  40ad10:	b.ne	40ad2c <wcrtomb@plt+0x5f0c>  // b.any
  40ad14:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40ad18:	add	x0, x0, #0xd89
  40ad1c:	mov	x1, x20
  40ad20:	mov	x2, xzr
  40ad24:	bl	41213c <wcrtomb@plt+0xd31c>
  40ad28:	mov	w22, wzr
  40ad2c:	add	x1, x19, #0x149
  40ad30:	mov	w0, w22
  40ad34:	bl	40b0f8 <wcrtomb@plt+0x62d8>
  40ad38:	tbz	w0, #0, 40ae6c <wcrtomb@plt+0x604c>
  40ad3c:	cmp	w21, #0x200, lsl #12
  40ad40:	b.cc	40ad68 <wcrtomb@plt+0x5f48>  // b.lo, b.ul, b.last
  40ad44:	ldr	w8, [x23, #816]
  40ad48:	cmp	w8, #0x4
  40ad4c:	b.ne	40ad68 <wcrtomb@plt+0x5f48>  // b.any
  40ad50:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40ad54:	add	x0, x0, #0xd92
  40ad58:	mov	x1, x20
  40ad5c:	mov	x2, xzr
  40ad60:	bl	41213c <wcrtomb@plt+0xd31c>
  40ad64:	mov	w21, wzr
  40ad68:	add	x1, x19, #0x151
  40ad6c:	mov	w0, w21
  40ad70:	bl	40b134 <wcrtomb@plt+0x6314>
  40ad74:	tbnz	w0, #0, 40ad8c <wcrtomb@plt+0x5f6c>
  40ad78:	b	40ae6c <wcrtomb@plt+0x604c>
  40ad7c:	ldr	w8, [x23, #816]
  40ad80:	orr	w8, w8, #0x4
  40ad84:	cmp	w8, #0x6
  40ad88:	b.ne	40ae4c <wcrtomb@plt+0x602c>  // b.any
  40ad8c:	ldr	w8, [x23, #816]
  40ad90:	cmp	w8, #0x4
  40ad94:	b.ne	40adc4 <wcrtomb@plt+0x5fa4>  // b.any
  40ad98:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40ad9c:	add	x0, x0, #0xd9b
  40ada0:	mov	x1, x20
  40ada4:	mov	x2, xzr
  40ada8:	bl	41213c <wcrtomb@plt+0xd31c>
  40adac:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40adb0:	add	x0, x0, #0xda1
  40adb4:	mov	x1, x20
  40adb8:	mov	x2, xzr
  40adbc:	bl	41213c <wcrtomb@plt+0xd31c>
  40adc0:	b	40adfc <wcrtomb@plt+0x5fdc>
  40adc4:	orr	w8, w8, #0x4
  40adc8:	cmp	w8, #0x6
  40adcc:	b.ne	40adfc <wcrtomb@plt+0x5fdc>  // b.any
  40add0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40add4:	ldrb	w8, [x8, #33]
  40add8:	cbz	w8, 40adfc <wcrtomb@plt+0x5fdc>
  40addc:	ldr	x0, [x20, #216]
  40ade0:	add	x1, x19, #0x159
  40ade4:	mov	w2, #0xc                   	// #12
  40ade8:	bl	40a708 <wcrtomb@plt+0x58e8>
  40adec:	ldr	x0, [x20, #248]
  40adf0:	add	x1, x19, #0x165
  40adf4:	mov	w2, #0xc                   	// #12
  40adf8:	bl	40a708 <wcrtomb@plt+0x58e8>
  40adfc:	ldr	w8, [x23, #816]
  40ae00:	mov	w9, #0x30                  	// #48
  40ae04:	subs	w8, w8, #0x1
  40ae08:	csel	w9, wzr, w9, eq  // eq = none
  40ae0c:	cmp	w8, #0x5
  40ae10:	strb	w9, [x19, #156]
  40ae14:	b.hi	40b074 <wcrtomb@plt+0x6254>  // b.pmore
  40ae18:	adrp	x9, 450000 <_obstack_memory_used@@Base+0x11da0>
  40ae1c:	add	x9, x9, #0xd06
  40ae20:	adr	x10, 40ae34 <wcrtomb@plt+0x6014>
  40ae24:	ldrb	w11, [x9, x8]
  40ae28:	add	x10, x10, x11, lsl #2
  40ae2c:	add	x8, x19, #0x101
  40ae30:	br	x10
  40ae34:	mov	x9, #0x7375                	// #29557
  40ae38:	movk	x9, #0x6174, lsl #16
  40ae3c:	movk	x9, #0x2072, lsl #32
  40ae40:	movk	x9, #0x20, lsl #48
  40ae44:	str	x9, [x8]
  40ae48:	b	40aeac <wcrtomb@plt+0x608c>
  40ae4c:	add	x1, x19, #0x149
  40ae50:	mov	w0, wzr
  40ae54:	bl	40b0f8 <wcrtomb@plt+0x62d8>
  40ae58:	tbz	w0, #0, 40ae6c <wcrtomb@plt+0x604c>
  40ae5c:	add	x1, x19, #0x151
  40ae60:	mov	w0, wzr
  40ae64:	bl	40b134 <wcrtomb@plt+0x6314>
  40ae68:	tbnz	w0, #0, 40ad8c <wcrtomb@plt+0x5f6c>
  40ae6c:	mov	x19, xzr
  40ae70:	mov	x0, x19
  40ae74:	ldp	x20, x19, [sp, #80]
  40ae78:	ldp	x22, x21, [sp, #64]
  40ae7c:	ldr	x23, [sp, #48]
  40ae80:	ldp	x29, x30, [sp, #32]
  40ae84:	add	sp, sp, #0x60
  40ae88:	ret
  40ae8c:	mov	w11, #0x7375                	// #29557
  40ae90:	add	x9, x19, #0x101
  40ae94:	mov	w10, #0x72                  	// #114
  40ae98:	movk	w11, #0x6174, lsl #16
  40ae9c:	mov	w12, #0x3030                	// #12336
  40aea0:	strh	w10, [x9, #4]
  40aea4:	str	w11, [x9]
  40aea8:	strh	w12, [x8, #6]
  40aeac:	ldr	w8, [x23, #816]
  40aeb0:	cmp	w8, #0x1
  40aeb4:	b.eq	40af9c <wcrtomb@plt+0x617c>  // b.none
  40aeb8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40aebc:	ldrb	w8, [x8, #672]
  40aec0:	cbnz	w8, 40af9c <wcrtomb@plt+0x617c>
  40aec4:	ldr	x0, [x29, #24]
  40aec8:	cbz	x0, 40aed8 <wcrtomb@plt+0x60b8>
  40aecc:	bl	43d39c <argp_usage@@Base+0xb7a0>
  40aed0:	str	x0, [x20, #32]
  40aed4:	b	40aee4 <wcrtomb@plt+0x60c4>
  40aed8:	ldr	w0, [x20, #112]
  40aedc:	add	x1, x20, #0x20
  40aee0:	bl	41afc0 <wcrtomb@plt+0x161a0>
  40aee4:	ldur	x0, [x29, #-8]
  40aee8:	cbz	x0, 40aef8 <wcrtomb@plt+0x60d8>
  40aeec:	bl	43d39c <argp_usage@@Base+0xb7a0>
  40aef0:	str	x0, [x20, #40]
  40aef4:	b	40af04 <wcrtomb@plt+0x60e4>
  40aef8:	ldr	w0, [x20, #116]
  40aefc:	add	x1, x20, #0x28
  40af00:	bl	41b064 <wcrtomb@plt+0x16244>
  40af04:	ldr	w8, [x23, #816]
  40af08:	cmp	w8, #0x4
  40af0c:	b.ne	40af44 <wcrtomb@plt+0x6124>  // b.any
  40af10:	ldr	x21, [x20, #32]
  40af14:	mov	x0, x21
  40af18:	bl	404190 <strlen@plt>
  40af1c:	cmp	x0, #0x20
  40af20:	b.hi	40af30 <wcrtomb@plt+0x6110>  // b.pmore
  40af24:	mov	x0, x21
  40af28:	bl	426258 <wcrtomb@plt+0x21438>
  40af2c:	tbnz	w0, #0, 40af44 <wcrtomb@plt+0x6124>
  40af30:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40af34:	add	x0, x0, #0xda7
  40af38:	mov	x1, x20
  40af3c:	mov	x2, xzr
  40af40:	bl	41213c <wcrtomb@plt+0xd31c>
  40af44:	ldr	x0, [x20, #32]
  40af48:	add	x1, x19, #0x109
  40af4c:	bl	40b170 <wcrtomb@plt+0x6350>
  40af50:	ldr	w8, [x23, #816]
  40af54:	cmp	w8, #0x4
  40af58:	b.ne	40af90 <wcrtomb@plt+0x6170>  // b.any
  40af5c:	ldr	x21, [x20, #40]
  40af60:	mov	x0, x21
  40af64:	bl	404190 <strlen@plt>
  40af68:	cmp	x0, #0x20
  40af6c:	b.hi	40af7c <wcrtomb@plt+0x615c>  // b.pmore
  40af70:	mov	x0, x21
  40af74:	bl	426258 <wcrtomb@plt+0x21438>
  40af78:	tbnz	w0, #0, 40af90 <wcrtomb@plt+0x6170>
  40af7c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40af80:	add	x0, x0, #0xdad
  40af84:	mov	x1, x20
  40af88:	mov	x2, xzr
  40af8c:	bl	41213c <wcrtomb@plt+0xd31c>
  40af90:	ldr	x0, [x20, #40]
  40af94:	add	x1, x19, #0x129
  40af98:	bl	40b170 <wcrtomb@plt+0x6350>
  40af9c:	ldr	w8, [x23, #816]
  40afa0:	cmp	w8, #0x4
  40afa4:	b.ne	40ae70 <wcrtomb@plt+0x6050>  // b.any
  40afa8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40afac:	ldr	w8, [x8, #896]
  40afb0:	cmp	w8, #0x1
  40afb4:	b.lt	40aff0 <wcrtomb@plt+0x61d0>  // b.tstop
  40afb8:	ldr	x8, [x20, #56]
  40afbc:	cbz	x8, 40afd4 <wcrtomb@plt+0x61b4>
  40afc0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40afc4:	add	x0, x0, #0xdb3
  40afc8:	mov	x1, x20
  40afcc:	mov	x2, xzr
  40afd0:	bl	41213c <wcrtomb@plt+0xd31c>
  40afd4:	ldr	x8, [x20, #72]
  40afd8:	cbz	x8, 40aff0 <wcrtomb@plt+0x61d0>
  40afdc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40afe0:	add	x0, x0, #0xdc5
  40afe4:	mov	x1, x20
  40afe8:	mov	x2, xzr
  40afec:	bl	41213c <wcrtomb@plt+0xd31c>
  40aff0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40aff4:	ldr	w8, [x8, #984]
  40aff8:	cmp	w8, #0x1
  40affc:	b.lt	40b01c <wcrtomb@plt+0x61fc>  // b.tstop
  40b000:	ldr	x8, [x20, #48]
  40b004:	cbz	x8, 40b01c <wcrtomb@plt+0x61fc>
  40b008:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40b00c:	add	x0, x0, #0xdd8
  40b010:	mov	x1, x20
  40b014:	mov	x2, xzr
  40b018:	bl	41213c <wcrtomb@plt+0xd31c>
  40b01c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b020:	ldr	w8, [x8, #656]
  40b024:	cmp	w8, #0x1
  40b028:	b.lt	40ae70 <wcrtomb@plt+0x6050>  // b.tstop
  40b02c:	str	xzr, [sp]
  40b030:	ldr	x8, [x20, #328]
  40b034:	cbz	x8, 40ae70 <wcrtomb@plt+0x6050>
  40b038:	ldr	x21, [x20, #336]
  40b03c:	mov	x8, xzr
  40b040:	mov	w22, #0x18                  	// #24
  40b044:	mul	x8, x8, x22
  40b048:	ldr	x0, [x21, x8]
  40b04c:	mov	x2, sp
  40b050:	mov	x1, x20
  40b054:	bl	41213c <wcrtomb@plt+0xd31c>
  40b058:	ldr	x8, [sp]
  40b05c:	add	x8, x8, #0x1
  40b060:	str	x8, [sp]
  40b064:	ldr	x9, [x20, #328]
  40b068:	cmp	x8, x9
  40b06c:	b.cc	40b044 <wcrtomb@plt+0x6224>  // b.lo, b.ul, b.last
  40b070:	b	40ae70 <wcrtomb@plt+0x6050>
  40b074:	bl	404870 <abort@plt>
  40b078:	stp	x29, x30, [sp, #-32]!
  40b07c:	stp	x20, x19, [sp, #16]
  40b080:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  40b084:	ldr	w8, [x20, #816]
  40b088:	mov	x19, x0
  40b08c:	mov	x29, sp
  40b090:	cmp	w8, #0x4
  40b094:	b.ne	40b0a4 <wcrtomb@plt+0x6284>  // b.any
  40b098:	ldr	x0, [x19, #8]
  40b09c:	bl	426258 <wcrtomb@plt+0x21438>
  40b0a0:	tbz	w0, #0, 40b0d0 <wcrtomb@plt+0x62b0>
  40b0a4:	ldr	w8, [x20, #816]
  40b0a8:	ldr	x0, [x19, #8]
  40b0ac:	cmp	w8, #0x2
  40b0b0:	mov	w8, #0x63                  	// #99
  40b0b4:	cinc	x20, x8, ne  // ne = any
  40b0b8:	bl	404190 <strlen@plt>
  40b0bc:	cmp	x20, x0
  40b0c0:	b.cs	40b0e4 <wcrtomb@plt+0x62c4>  // b.hs, b.nlast
  40b0c4:	mov	x0, x19
  40b0c8:	bl	40c518 <wcrtomb@plt+0x76f8>
  40b0cc:	b	40b0ec <wcrtomb@plt+0x62cc>
  40b0d0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  40b0d4:	add	x0, x0, #0x6d
  40b0d8:	mov	x1, x19
  40b0dc:	mov	x2, xzr
  40b0e0:	bl	41213c <wcrtomb@plt+0xd31c>
  40b0e4:	mov	x0, x19
  40b0e8:	bl	40c4a4 <wcrtomb@plt+0x7684>
  40b0ec:	ldp	x20, x19, [sp, #16]
  40b0f0:	ldp	x29, x30, [sp], #32
  40b0f4:	ret
  40b0f8:	stp	x29, x30, [sp, #-16]!
  40b0fc:	lsr	w8, w0, #31
  40b100:	adrp	x6, 450000 <_obstack_memory_used@@Base+0x11da0>
  40b104:	mov	x4, x1
  40b108:	sxtw	x1, w0
  40b10c:	add	x6, x6, #0xf0d
  40b110:	mov	w2, #0x4                   	// #4
  40b114:	mov	w5, #0x8                   	// #8
  40b118:	mov	w0, w8
  40b11c:	mov	x3, xzr
  40b120:	mov	x29, sp
  40b124:	bl	40a598 <wcrtomb@plt+0x5778>
  40b128:	and	w0, w0, #0x1
  40b12c:	ldp	x29, x30, [sp], #16
  40b130:	ret
  40b134:	stp	x29, x30, [sp, #-16]!
  40b138:	lsr	w8, w0, #31
  40b13c:	adrp	x6, 450000 <_obstack_memory_used@@Base+0x11da0>
  40b140:	mov	x4, x1
  40b144:	sxtw	x1, w0
  40b148:	add	x6, x6, #0xf15
  40b14c:	mov	w2, #0x4                   	// #4
  40b150:	mov	w5, #0x8                   	// #8
  40b154:	mov	w0, w8
  40b158:	mov	x3, xzr
  40b15c:	mov	x29, sp
  40b160:	bl	40a598 <wcrtomb@plt+0x5778>
  40b164:	and	w0, w0, #0x1
  40b168:	ldp	x29, x30, [sp], #16
  40b16c:	ret
  40b170:	stp	x29, x30, [sp, #-32]!
  40b174:	str	x19, [sp, #16]
  40b178:	mov	x19, x1
  40b17c:	mov	x1, x0
  40b180:	mov	w2, #0x20                  	// #32
  40b184:	mov	x0, x19
  40b188:	mov	x29, sp
  40b18c:	bl	40c3e0 <wcrtomb@plt+0x75c0>
  40b190:	strb	wzr, [x19, #31]
  40b194:	ldr	x19, [sp, #16]
  40b198:	ldp	x29, x30, [sp], #32
  40b19c:	ret
  40b1a0:	stp	x29, x30, [sp, #-32]!
  40b1a4:	str	x19, [sp, #16]
  40b1a8:	mov	x19, x0
  40b1ac:	mov	x9, #0x2020202020202020    	// #2314885530818453536
  40b1b0:	mov	x1, x19
  40b1b4:	mov	x8, xzr
  40b1b8:	mov	w0, wzr
  40b1bc:	str	x9, [x1, #148]!
  40b1c0:	mov	x29, sp
  40b1c4:	ldrb	w9, [x19, x8]
  40b1c8:	add	x8, x8, #0x1
  40b1cc:	cmp	x8, #0x200
  40b1d0:	add	x0, x9, w0, uxtw
  40b1d4:	b.ne	40b1c4 <wcrtomb@plt+0x63a4>  // b.any
  40b1d8:	bl	40b1f0 <wcrtomb@plt+0x63d0>
  40b1dc:	mov	x0, x19
  40b1e0:	bl	405744 <wcrtomb@plt+0x924>
  40b1e4:	ldr	x19, [sp, #16]
  40b1e8:	ldp	x29, x30, [sp], #32
  40b1ec:	ret
  40b1f0:	stp	x29, x30, [sp, #-16]!
  40b1f4:	adrp	x6, 450000 <_obstack_memory_used@@Base+0x11da0>
  40b1f8:	mov	x4, x1
  40b1fc:	mov	x1, x0
  40b200:	add	x6, x6, #0xf1d
  40b204:	mov	w2, #0x8                   	// #8
  40b208:	mov	w5, #0x7                   	// #7
  40b20c:	mov	w0, wzr
  40b210:	mov	x3, xzr
  40b214:	mov	x29, sp
  40b218:	bl	40a598 <wcrtomb@plt+0x5778>
  40b21c:	ldp	x29, x30, [sp], #16
  40b220:	ret
  40b224:	stp	x29, x30, [sp, #-32]!
  40b228:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b22c:	ldr	w8, [x8, #644]
  40b230:	stp	x20, x19, [sp, #16]
  40b234:	mov	x19, x1
  40b238:	mov	x20, x0
  40b23c:	mov	x29, sp
  40b240:	cbz	w8, 40b28c <wcrtomb@plt+0x646c>
  40b244:	ldrb	w8, [x19, #156]
  40b248:	sub	w8, w8, #0x4b
  40b24c:	cmp	w8, #0x2d
  40b250:	b.hi	40b270 <wcrtomb@plt+0x6450>  // b.pmore
  40b254:	mov	w9, #0x1                   	// #1
  40b258:	lsl	x8, x9, x8
  40b25c:	mov	x9, #0x3                   	// #3
  40b260:	movk	x9, #0x1000, lsl #16
  40b264:	movk	x9, #0x2000, lsl #32
  40b268:	tst	x8, x9
  40b26c:	b.ne	40b28c <wcrtomb@plt+0x646c>  // b.any
  40b270:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b274:	ldr	w8, [x8, #816]
  40b278:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40b27c:	mov	x0, x20
  40b280:	mov	x1, x19
  40b284:	str	w8, [x9, #4048]
  40b288:	bl	417bac <wcrtomb@plt+0x12d8c>
  40b28c:	mov	w0, wzr
  40b290:	mov	x1, x20
  40b294:	mov	x2, x19
  40b298:	bl	40a9c4 <wcrtomb@plt+0x5ba4>
  40b29c:	bl	40b1a0 <wcrtomb@plt+0x6380>
  40b2a0:	ldp	x20, x19, [sp, #16]
  40b2a4:	ldp	x29, x30, [sp], #32
  40b2a8:	ret
  40b2ac:	stp	x29, x30, [sp, #-32]!
  40b2b0:	cmp	x0, #0x1
  40b2b4:	str	x19, [sp, #16]
  40b2b8:	mov	x29, sp
  40b2bc:	b.lt	40b31c <wcrtomb@plt+0x64fc>  // b.tstop
  40b2c0:	add	x19, x0, #0x200
  40b2c4:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40b2c8:	movi	v0.2d, #0x0
  40b2cc:	stp	q0, q0, [x0]
  40b2d0:	stp	q0, q0, [x0, #32]
  40b2d4:	stp	q0, q0, [x0, #64]
  40b2d8:	stp	q0, q0, [x0, #96]
  40b2dc:	stp	q0, q0, [x0, #128]
  40b2e0:	stp	q0, q0, [x0, #160]
  40b2e4:	stp	q0, q0, [x0, #192]
  40b2e8:	stp	q0, q0, [x0, #224]
  40b2ec:	stp	q0, q0, [x0, #256]
  40b2f0:	stp	q0, q0, [x0, #288]
  40b2f4:	stp	q0, q0, [x0, #320]
  40b2f8:	stp	q0, q0, [x0, #352]
  40b2fc:	stp	q0, q0, [x0, #384]
  40b300:	stp	q0, q0, [x0, #416]
  40b304:	stp	q0, q0, [x0, #448]
  40b308:	stp	q0, q0, [x0, #480]
  40b30c:	bl	405744 <wcrtomb@plt+0x924>
  40b310:	sub	x19, x19, #0x200
  40b314:	cmp	x19, #0x200
  40b318:	b.gt	40b2c4 <wcrtomb@plt+0x64a4>
  40b31c:	ldr	x19, [sp, #16]
  40b320:	ldp	x29, x30, [sp], #32
  40b324:	ret
  40b328:	stp	x29, x30, [sp, #-32]!
  40b32c:	str	x19, [sp, #16]
  40b330:	mov	x19, x0
  40b334:	mov	x29, sp
  40b338:	ldr	w0, [x19, #408]
  40b33c:	bl	404820 <fdopendir@plt>
  40b340:	str	x0, [x19, #400]
  40b344:	cbnz	x0, 40b35c <wcrtomb@plt+0x653c>
  40b348:	mov	x0, x19
  40b34c:	bl	40b374 <wcrtomb@plt+0x6554>
  40b350:	tbnz	w0, #0, 40b338 <wcrtomb@plt+0x6518>
  40b354:	mov	x0, xzr
  40b358:	b	40b368 <wcrtomb@plt+0x6548>
  40b35c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b360:	ldr	w1, [x8, #520]
  40b364:	bl	43c940 <argp_usage@@Base+0xad44>
  40b368:	ldr	x19, [sp, #16]
  40b36c:	ldp	x29, x30, [sp], #32
  40b370:	ret
  40b374:	stp	x29, x30, [sp, #-32]!
  40b378:	str	x19, [sp, #16]
  40b37c:	mov	x29, sp
  40b380:	mov	x19, x0
  40b384:	bl	404d00 <__errno_location@plt>
  40b388:	mov	w8, wzr
  40b38c:	cbz	x19, 40b3e8 <wcrtomb@plt+0x65c8>
  40b390:	ldr	w9, [x0]
  40b394:	cmp	w9, #0x18
  40b398:	b.ne	40b3e8 <wcrtomb@plt+0x65c8>  // b.any
  40b39c:	ldr	x8, [x19, #392]
  40b3a0:	cbz	x8, 40b3e8 <wcrtomb@plt+0x65c8>
  40b3a4:	ldr	x8, [x8, #392]
  40b3a8:	cbz	x8, 40b3dc <wcrtomb@plt+0x65bc>
  40b3ac:	ldr	w9, [x8, #408]
  40b3b0:	cmp	w9, #0x1
  40b3b4:	b.lt	40b3a4 <wcrtomb@plt+0x6584>  // b.tstop
  40b3b8:	ldr	x9, [x8, #392]
  40b3bc:	cbz	x9, 40b3cc <wcrtomb@plt+0x65ac>
  40b3c0:	ldr	w9, [x9, #408]
  40b3c4:	cmp	w9, #0x0
  40b3c8:	b.gt	40b3a4 <wcrtomb@plt+0x6584>
  40b3cc:	mov	x0, x8
  40b3d0:	bl	422468 <wcrtomb@plt+0x1d648>
  40b3d4:	mov	w8, #0x1                   	// #1
  40b3d8:	b	40b3e8 <wcrtomb@plt+0x65c8>
  40b3dc:	mov	w8, wzr
  40b3e0:	mov	w9, #0x18                  	// #24
  40b3e4:	str	w9, [x0]
  40b3e8:	ldr	x19, [sp, #16]
  40b3ec:	mov	w0, w8
  40b3f0:	ldp	x29, x30, [sp], #32
  40b3f4:	ret
  40b3f8:	stp	x29, x30, [sp, #-96]!
  40b3fc:	stp	x28, x27, [sp, #16]
  40b400:	stp	x26, x25, [sp, #32]
  40b404:	stp	x24, x23, [sp, #48]
  40b408:	stp	x22, x21, [sp, #64]
  40b40c:	stp	x20, x19, [sp, #80]
  40b410:	mov	x29, sp
  40b414:	sub	sp, sp, #0x1b0
  40b418:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b41c:	ldr	x8, [x8, #8]
  40b420:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40b424:	ldrb	w9, [x9, #576]
  40b428:	mov	w0, #0x1                   	// #1
  40b42c:	cmp	x8, #0x2
  40b430:	cset	w8, cc  // cc = lo, ul, last
  40b434:	tst	w9, #0x1
  40b438:	cset	w9, eq  // eq = none
  40b43c:	and	w8, w8, w9
  40b440:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40b444:	str	w8, [x9, #1976]
  40b448:	bl	405f4c <wcrtomb@plt+0x112c>
  40b44c:	bl	404fcc <wcrtomb@plt+0x1ac>
  40b450:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b454:	ldrb	w8, [x8, #33]
  40b458:	cbz	w8, 40b6b4 <wcrtomb@plt+0x6894>
  40b45c:	mov	w0, #0x3e8                 	// #1000
  40b460:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  40b464:	mov	x19, x0
  40b468:	bl	41bd9c <wcrtomb@plt+0x16f7c>
  40b46c:	bl	41c52c <wcrtomb@plt+0x1770c>
  40b470:	cbz	x0, 40b4ac <wcrtomb@plt+0x668c>
  40b474:	mov	x20, x0
  40b478:	b	40b488 <wcrtomb@plt+0x6668>
  40b47c:	bl	41c52c <wcrtomb@plt+0x1770c>
  40b480:	mov	x20, x0
  40b484:	cbz	x0, 40b4ac <wcrtomb@plt+0x668c>
  40b488:	ldr	x0, [x20, #16]
  40b48c:	mov	x1, xzr
  40b490:	bl	40e11c <wcrtomb@plt+0x92fc>
  40b494:	tbnz	w0, #0, 40b47c <wcrtomb@plt+0x665c>
  40b498:	ldr	x1, [x20, #16]
  40b49c:	mov	x0, xzr
  40b4a0:	mov	x2, x1
  40b4a4:	bl	40b6fc <wcrtomb@plt+0x68dc>
  40b4a8:	b	40b47c <wcrtomb@plt+0x665c>
  40b4ac:	bl	41c5bc <wcrtomb@plt+0x1779c>
  40b4b0:	bl	41c52c <wcrtomb@plt+0x1770c>
  40b4b4:	cbz	x0, 40b670 <wcrtomb@plt+0x6850>
  40b4b8:	mov	x8, sp
  40b4bc:	mov	x24, x0
  40b4c0:	mov	w20, #0x3e8                 	// #1000
  40b4c4:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40b4c8:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  40b4cc:	add	x23, x8, #0x58
  40b4d0:	b	40b4e8 <wcrtomb@plt+0x66c8>
  40b4d4:	mov	x0, sp
  40b4d8:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  40b4dc:	bl	41c52c <wcrtomb@plt+0x1770c>
  40b4e0:	mov	x24, x0
  40b4e4:	cbz	x0, 40b670 <wcrtomb@plt+0x6850>
  40b4e8:	ldr	x0, [x24, #16]
  40b4ec:	mov	x1, xzr
  40b4f0:	bl	40e11c <wcrtomb@plt+0x92fc>
  40b4f4:	tbnz	w0, #0, 40b4dc <wcrtomb@plt+0x66bc>
  40b4f8:	ldr	x0, [x24, #16]
  40b4fc:	bl	404190 <strlen@plt>
  40b500:	mov	x25, x0
  40b504:	cmp	x20, x0
  40b508:	b.hi	40b528 <wcrtomb@plt+0x6708>  // b.pmore
  40b50c:	lsl	x20, x20, #1
  40b510:	cmp	x20, x25
  40b514:	b.ls	40b50c <wcrtomb@plt+0x66ec>  // b.plast
  40b518:	mov	x0, x19
  40b51c:	mov	x1, x20
  40b520:	bl	43d21c <argp_usage@@Base+0xb620>
  40b524:	mov	x19, x0
  40b528:	ldr	x1, [x24, #16]
  40b52c:	mov	x0, x19
  40b530:	mov	x2, x25
  40b534:	bl	404110 <memcpy@plt>
  40b538:	add	x8, x25, x19
  40b53c:	ldurb	w8, [x8, #-1]
  40b540:	cmp	w8, #0x2f
  40b544:	b.eq	40b558 <wcrtomb@plt+0x6738>  // b.none
  40b548:	add	x8, x25, #0x1
  40b54c:	mov	w9, #0x2f                  	// #47
  40b550:	strb	w9, [x19, x25]
  40b554:	mov	x25, x8
  40b558:	mov	x0, sp
  40b55c:	bl	422428 <wcrtomb@plt+0x1d608>
  40b560:	ldr	x0, [x24, #56]
  40b564:	bl	414794 <wcrtomb@plt+0xf974>
  40b568:	cbz	x0, 40b4d4 <wcrtomb@plt+0x66b4>
  40b56c:	mov	x26, x0
  40b570:	ldrb	w27, [x26]
  40b574:	cbz	w27, 40b4d4 <wcrtomb@plt+0x66b4>
  40b578:	mov	x0, x26
  40b57c:	bl	404190 <strlen@plt>
  40b580:	cmp	w27, #0x59
  40b584:	mov	x27, x0
  40b588:	b.ne	40b5dc <wcrtomb@plt+0x67bc>  // b.any
  40b58c:	ldr	x8, [sp]
  40b590:	cbz	x8, 40b5f0 <wcrtomb@plt+0x67d0>
  40b594:	add	x8, x27, x25
  40b598:	cmp	x20, x8
  40b59c:	b.cs	40b5bc <wcrtomb@plt+0x679c>  // b.hs, b.nlast
  40b5a0:	lsl	x20, x20, #1
  40b5a4:	cmp	x20, x8
  40b5a8:	b.cc	40b5a0 <wcrtomb@plt+0x6780>  // b.lo, b.ul, b.last
  40b5ac:	mov	x0, x19
  40b5b0:	mov	x1, x20
  40b5b4:	bl	43d21c <argp_usage@@Base+0xb620>
  40b5b8:	mov	x19, x0
  40b5bc:	add	x28, x26, #0x1
  40b5c0:	add	x0, x19, x25
  40b5c4:	mov	x1, x28
  40b5c8:	bl	404b20 <strcpy@plt>
  40b5cc:	mov	x0, sp
  40b5d0:	mov	x1, x28
  40b5d4:	mov	x2, x19
  40b5d8:	bl	40b6fc <wcrtomb@plt+0x68dc>
  40b5dc:	add	x9, x27, x26
  40b5e0:	mov	w8, wzr
  40b5e4:	add	x26, x9, #0x1
  40b5e8:	cbz	w8, 40b570 <wcrtomb@plt+0x6750>
  40b5ec:	b	40b4d4 <wcrtomb@plt+0x66b4>
  40b5f0:	ldr	w0, [x21, #2240]
  40b5f4:	ldr	x1, [x24, #16]
  40b5f8:	ldr	w2, [x22, #700]
  40b5fc:	bl	404ce0 <openat@plt>
  40b600:	tbnz	w0, #31, 40b630 <wcrtomb@plt+0x6810>
  40b604:	mov	x1, x23
  40b608:	str	w0, [sp, #408]
  40b60c:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  40b610:	ldr	x8, [x24, #16]
  40b614:	cbz	w0, 40b658 <wcrtomb@plt+0x6838>
  40b618:	ldr	x9, [x24, #64]
  40b61c:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  40b620:	mov	x0, x8
  40b624:	add	x2, x2, #0xd6c
  40b628:	cmp	x9, #0x0
  40b62c:	b	40b644 <wcrtomb@plt+0x6824>
  40b630:	ldr	x8, [x24, #64]
  40b634:	ldr	x0, [x24, #16]
  40b638:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  40b63c:	add	x2, x2, #0xc54
  40b640:	cmp	x8, #0x0
  40b644:	cset	w1, eq  // eq = none
  40b648:	bl	41ada4 <wcrtomb@plt+0x15f84>
  40b64c:	mov	w8, #0x9                   	// #9
  40b650:	cbnz	w8, 40b5e8 <wcrtomb@plt+0x67c8>
  40b654:	b	40b594 <wcrtomb@plt+0x6774>
  40b658:	mov	x0, x8
  40b65c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  40b660:	mov	w8, wzr
  40b664:	str	x0, [sp]
  40b668:	cbnz	w8, 40b5e8 <wcrtomb@plt+0x67c8>
  40b66c:	b	40b594 <wcrtomb@plt+0x6774>
  40b670:	mov	x0, x19
  40b674:	bl	4049d0 <free@plt>
  40b678:	bl	40a740 <wcrtomb@plt+0x5920>
  40b67c:	bl	405c30 <wcrtomb@plt+0xe10>
  40b680:	bl	4257d0 <wcrtomb@plt+0x209b0>
  40b684:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b688:	ldr	x8, [x8, #832]
  40b68c:	cbz	x8, 40b694 <wcrtomb@plt+0x6874>
  40b690:	bl	415574 <wcrtomb@plt+0x10754>
  40b694:	add	sp, sp, #0x1b0
  40b698:	ldp	x20, x19, [sp, #80]
  40b69c:	ldp	x22, x21, [sp, #64]
  40b6a0:	ldp	x24, x23, [sp, #48]
  40b6a4:	ldp	x26, x25, [sp, #32]
  40b6a8:	ldp	x28, x27, [sp, #16]
  40b6ac:	ldp	x29, x30, [sp], #96
  40b6b0:	ret
  40b6b4:	mov	w0, #0x1                   	// #1
  40b6b8:	bl	41b39c <wcrtomb@plt+0x1657c>
  40b6bc:	cbz	x0, 40b678 <wcrtomb@plt+0x6858>
  40b6c0:	mov	x19, x0
  40b6c4:	b	40b6d8 <wcrtomb@plt+0x68b8>
  40b6c8:	mov	w0, #0x1                   	// #1
  40b6cc:	bl	41b39c <wcrtomb@plt+0x1657c>
  40b6d0:	mov	x19, x0
  40b6d4:	cbz	x0, 40b678 <wcrtomb@plt+0x6858>
  40b6d8:	mov	x0, x19
  40b6dc:	mov	x1, xzr
  40b6e0:	bl	40e11c <wcrtomb@plt+0x92fc>
  40b6e4:	tbnz	w0, #0, 40b6c8 <wcrtomb@plt+0x68a8>
  40b6e8:	mov	x0, xzr
  40b6ec:	mov	x1, x19
  40b6f0:	mov	x2, x19
  40b6f4:	bl	40b6fc <wcrtomb@plt+0x68dc>
  40b6f8:	b	40b6c8 <wcrtomb@plt+0x68a8>
  40b6fc:	sub	sp, sp, #0x1e0
  40b700:	stp	x20, x19, [sp, #464]
  40b704:	mov	x19, x0
  40b708:	add	x0, sp, #0x8
  40b70c:	stp	x29, x30, [sp, #432]
  40b710:	stp	x28, x21, [sp, #448]
  40b714:	add	x29, sp, #0x1b0
  40b718:	mov	x20, x2
  40b71c:	mov	x21, x1
  40b720:	bl	422428 <wcrtomb@plt+0x1d608>
  40b724:	add	x0, sp, #0x8
  40b728:	mov	x1, x21
  40b72c:	mov	x2, x20
  40b730:	str	x19, [sp, #400]
  40b734:	bl	40b920 <wcrtomb@plt+0x6b00>
  40b738:	cbz	x19, 40b750 <wcrtomb@plt+0x6930>
  40b73c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b740:	ldr	x8, [x8, #832]
  40b744:	cbz	x8, 40b750 <wcrtomb@plt+0x6930>
  40b748:	mov	x0, x19
  40b74c:	bl	413b4c <wcrtomb@plt+0xed2c>
  40b750:	add	x0, sp, #0x8
  40b754:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  40b758:	ldp	x20, x19, [sp, #464]
  40b75c:	ldp	x28, x21, [sp, #448]
  40b760:	ldp	x29, x30, [sp, #432]
  40b764:	add	sp, sp, #0x1e0
  40b768:	ret
  40b76c:	stp	x29, x30, [sp, #-64]!
  40b770:	stp	x22, x21, [sp, #32]
  40b774:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40b778:	ldr	x0, [x22, #1984]
  40b77c:	str	x23, [sp, #16]
  40b780:	stp	x20, x19, [sp, #48]
  40b784:	mov	x29, sp
  40b788:	cbz	x0, 40b804 <wcrtomb@plt+0x69e4>
  40b78c:	bl	434f2c <argp_usage@@Base+0x3330>
  40b790:	cbz	x0, 40b804 <wcrtomb@plt+0x69e4>
  40b794:	adrp	x20, 450000 <_obstack_memory_used@@Base+0x11da0>
  40b798:	mov	x19, x0
  40b79c:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  40b7a0:	add	x20, x20, #0xdf6
  40b7a4:	b	40b7ec <wcrtomb@plt+0x69cc>
  40b7a8:	mov	w2, #0x5                   	// #5
  40b7ac:	mov	x0, xzr
  40b7b0:	mov	x1, x20
  40b7b4:	bl	404bf0 <dcgettext@plt>
  40b7b8:	mov	x21, x0
  40b7bc:	add	x0, x19, #0x14
  40b7c0:	bl	43c05c <argp_usage@@Base+0xa460>
  40b7c4:	mov	x3, x0
  40b7c8:	mov	w0, wzr
  40b7cc:	mov	w1, wzr
  40b7d0:	mov	x2, x21
  40b7d4:	bl	4041f0 <error@plt>
  40b7d8:	ldr	x0, [x22, #1984]
  40b7dc:	mov	x1, x19
  40b7e0:	bl	434f64 <argp_usage@@Base+0x3368>
  40b7e4:	mov	x19, x0
  40b7e8:	cbz	x0, 40b804 <wcrtomb@plt+0x69e4>
  40b7ec:	ldr	w8, [x19, #16]
  40b7f0:	cbz	w8, 40b7d8 <wcrtomb@plt+0x69b8>
  40b7f4:	ldr	x8, [x23, #1008]
  40b7f8:	cbz	x8, 40b7a8 <wcrtomb@plt+0x6988>
  40b7fc:	blr	x8
  40b800:	b	40b7a8 <wcrtomb@plt+0x6988>
  40b804:	ldp	x20, x19, [sp, #48]
  40b808:	ldp	x22, x21, [sp, #32]
  40b80c:	ldr	x23, [sp, #16]
  40b810:	ldp	x29, x30, [sp], #64
  40b814:	ret
  40b818:	sub	sp, sp, #0xb0
  40b81c:	stp	x29, x30, [sp, #128]
  40b820:	stp	x20, x19, [sp, #160]
  40b824:	str	x21, [sp, #144]
  40b828:	ldr	x21, [x0, #392]
  40b82c:	add	x29, sp, #0x80
  40b830:	cbz	x21, 40b90c <wcrtomb@plt+0x6aec>
  40b834:	ldr	w8, [x21, #408]
  40b838:	cbnz	w8, 40b90c <wcrtomb@plt+0x6aec>
  40b83c:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  40b840:	ldr	w0, [x0, #408]
  40b844:	ldr	w2, [x20, #700]
  40b848:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  40b84c:	add	x1, x1, #0x231
  40b850:	bl	404ce0 <openat@plt>
  40b854:	tbnz	w0, #31, 40b89c <wcrtomb@plt+0x6a7c>
  40b858:	mov	x1, sp
  40b85c:	mov	w19, w0
  40b860:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  40b864:	cbnz	w0, 40b888 <wcrtomb@plt+0x6a68>
  40b868:	ldr	x8, [x21, #96]
  40b86c:	ldr	x9, [sp, #8]
  40b870:	cmp	x8, x9
  40b874:	b.ne	40b888 <wcrtomb@plt+0x6a68>  // b.any
  40b878:	ldr	x8, [x21, #88]
  40b87c:	ldr	x9, [sp]
  40b880:	cmp	x8, x9
  40b884:	b.eq	40b894 <wcrtomb@plt+0x6a74>  // b.none
  40b888:	mov	w0, w19
  40b88c:	bl	4047c0 <close@plt>
  40b890:	mov	w19, #0x2                   	// #2
  40b894:	tbz	w19, #31, 40b908 <wcrtomb@plt+0x6ae8>
  40b898:	b	40b8ac <wcrtomb@plt+0x6a8c>
  40b89c:	bl	404d00 <__errno_location@plt>
  40b8a0:	ldr	w8, [x0]
  40b8a4:	neg	w19, w8
  40b8a8:	tbz	w19, #31, 40b908 <wcrtomb@plt+0x6ae8>
  40b8ac:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40b8b0:	ldr	x1, [x21]
  40b8b4:	ldr	w0, [x8, #2240]
  40b8b8:	ldr	w2, [x20, #700]
  40b8bc:	bl	404ce0 <openat@plt>
  40b8c0:	tbnz	w0, #31, 40b908 <wcrtomb@plt+0x6ae8>
  40b8c4:	mov	w20, w0
  40b8c8:	mov	x1, sp
  40b8cc:	mov	w0, w19
  40b8d0:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  40b8d4:	cbnz	w0, 40b900 <wcrtomb@plt+0x6ae0>
  40b8d8:	ldr	x8, [x21, #96]
  40b8dc:	ldr	x9, [sp, #8]
  40b8e0:	cmp	x8, x9
  40b8e4:	b.ne	40b900 <wcrtomb@plt+0x6ae0>  // b.any
  40b8e8:	ldr	x8, [x21, #88]
  40b8ec:	ldr	x9, [sp]
  40b8f0:	cmp	x8, x9
  40b8f4:	b.ne	40b900 <wcrtomb@plt+0x6ae0>  // b.any
  40b8f8:	mov	w19, w20
  40b8fc:	b	40b908 <wcrtomb@plt+0x6ae8>
  40b900:	mov	w0, w20
  40b904:	bl	4047c0 <close@plt>
  40b908:	str	w19, [x21, #408]
  40b90c:	ldp	x20, x19, [sp, #160]
  40b910:	ldr	x21, [sp, #144]
  40b914:	ldp	x29, x30, [sp, #128]
  40b918:	add	sp, sp, #0xb0
  40b91c:	ret
  40b920:	sub	sp, sp, #0x110
  40b924:	stp	x29, x30, [sp, #176]
  40b928:	stp	x28, x27, [sp, #192]
  40b92c:	stp	x26, x25, [sp, #208]
  40b930:	stp	x24, x23, [sp, #224]
  40b934:	stp	x22, x21, [sp, #240]
  40b938:	stp	x20, x19, [sp, #256]
  40b93c:	ldr	x23, [x0, #392]
  40b940:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40b944:	add	x8, x8, #0x8c0
  40b948:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40b94c:	add	x10, x23, #0x198
  40b950:	cmp	x23, #0x0
  40b954:	csel	x21, x8, x10, eq  // eq = none
  40b958:	ldrb	w8, [x9, #592]
  40b95c:	ldr	w22, [x21]
  40b960:	mov	x19, x2
  40b964:	mov	x20, x0
  40b968:	mov	x27, x1
  40b96c:	add	x29, sp, #0xb0
  40b970:	cbz	w8, 40b988 <wcrtomb@plt+0x6b68>
  40b974:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40b978:	add	x0, x0, #0xf27
  40b97c:	mov	x1, x19
  40b980:	bl	4211d4 <wcrtomb@plt+0x1c3b4>
  40b984:	cbz	w0, 40b9fc <wcrtomb@plt+0x6bdc>
  40b988:	mov	x0, x20
  40b98c:	mov	x1, x19
  40b990:	bl	419680 <wcrtomb@plt+0x14860>
  40b994:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40b998:	ldrb	w2, [x8, #952]
  40b99c:	mov	x0, x19
  40b9a0:	mov	w1, wzr
  40b9a4:	add	x28, x20, #0x8
  40b9a8:	bl	428898 <wcrtomb@plt+0x23a78>
  40b9ac:	mov	x1, x0
  40b9b0:	mov	x0, x28
  40b9b4:	bl	419680 <wcrtomb@plt+0x14860>
  40b9b8:	mov	w1, #0x1                   	// #1
  40b9bc:	mov	x0, x28
  40b9c0:	bl	42509c <wcrtomb@plt+0x2027c>
  40b9c4:	cbz	x23, 40ba1c <wcrtomb@plt+0x6bfc>
  40b9c8:	tbz	w22, #31, 40ba1c <wcrtomb@plt+0x6bfc>
  40b9cc:	neg	w24, w22
  40b9d0:	bl	404d00 <__errno_location@plt>
  40b9d4:	adrp	x25, 41a000 <wcrtomb@plt+0x151e0>
  40b9d8:	mov	w8, wzr
  40b9dc:	str	w24, [x0]
  40b9e0:	add	x25, x25, #0xc54
  40b9e4:	cbz	x25, 40ba4c <wcrtomb@plt+0x6c2c>
  40b9e8:	cmp	x23, #0x0
  40b9ec:	cset	w1, eq  // eq = none
  40b9f0:	mov	x0, x19
  40b9f4:	mov	x2, x25
  40b9f8:	bl	41ada4 <wcrtomb@plt+0x15f84>
  40b9fc:	ldp	x20, x19, [sp, #256]
  40ba00:	ldp	x22, x21, [sp, #240]
  40ba04:	ldp	x24, x23, [sp, #224]
  40ba08:	ldp	x26, x25, [sp, #208]
  40ba0c:	ldp	x28, x27, [sp, #192]
  40ba10:	ldp	x29, x30, [sp, #176]
  40ba14:	add	sp, sp, #0x110
  40ba18:	ret
  40ba1c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ba20:	ldr	w3, [x8, #560]
  40ba24:	add	x26, x20, #0x58
  40ba28:	mov	w0, w22
  40ba2c:	mov	x1, x27
  40ba30:	mov	x2, x26
  40ba34:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  40ba38:	adrp	x25, 41a000 <wcrtomb@plt+0x151e0>
  40ba3c:	add	x25, x25, #0xd6c
  40ba40:	cbz	w0, 40bb40 <wcrtomb@plt+0x6d20>
  40ba44:	mov	w8, wzr
  40ba48:	cbnz	x25, 40b9e8 <wcrtomb@plt+0x6bc8>
  40ba4c:	str	w8, [sp, #28]
  40ba50:	ldr	x8, [x20, #136]
  40ba54:	add	x24, x20, #0x58
  40ba58:	mov	x0, x24
  40ba5c:	str	x27, [sp, #32]
  40ba60:	str	x8, [sp]
  40ba64:	str	x8, [x20, #264]
  40ba68:	bl	43cc6c <argp_usage@@Base+0xb070>
  40ba6c:	stp	x0, x1, [x20, #216]
  40ba70:	mov	x0, x24
  40ba74:	bl	43cc84 <argp_usage@@Base+0xb088>
  40ba78:	mov	x27, x0
  40ba7c:	stp	x0, x1, [x20, #232]
  40ba80:	mov	x0, x24
  40ba84:	mov	x25, x1
  40ba88:	bl	43cc78 <argp_usage@@Base+0xb07c>
  40ba8c:	stp	x1, x0, [sp, #8]
  40ba90:	stp	x0, x1, [x20, #248]
  40ba94:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ba98:	ldrb	w24, [x8, #33]
  40ba9c:	cbz	x23, 40baa4 <wcrtomb@plt+0x6c84>
  40baa0:	cbnz	w24, 40badc <wcrtomb@plt+0x6cbc>
  40baa4:	ldr	w8, [x20, #104]
  40baa8:	and	w8, w8, #0xf000
  40baac:	cmp	w8, #0x4, lsl #12
  40bab0:	b.eq	40badc <wcrtomb@plt+0x6cbc>  // b.none
  40bab4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bab8:	add	x8, x8, #0x28
  40babc:	ldp	x26, x8, [x8]
  40bac0:	mov	x0, x27
  40bac4:	mov	x1, x25
  40bac8:	mov	x2, x26
  40bacc:	mov	x3, x8
  40bad0:	mov	x25, x8
  40bad4:	bl	43cd0c <argp_usage@@Base+0xb110>
  40bad8:	tbnz	w0, #31, 40bd38 <wcrtomb@plt+0x6f18>
  40badc:	mov	x0, x20
  40bae0:	bl	41fa94 <wcrtomb@plt+0x1ac74>
  40bae4:	ldr	x25, [sp, #32]
  40bae8:	tbz	w0, #0, 40bb90 <wcrtomb@plt+0x6d70>
  40baec:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40baf0:	ldrb	w8, [x8, #449]
  40baf4:	tbz	w8, #2, 40b9fc <wcrtomb@plt+0x6bdc>
  40baf8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bafc:	ldr	x8, [x8, #1008]
  40bb00:	cbz	x8, 40bb08 <wcrtomb@plt+0x6ce8>
  40bb04:	blr	x8
  40bb08:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40bb0c:	add	x1, x1, #0xf4d
  40bb10:	mov	w2, #0x5                   	// #5
  40bb14:	mov	x0, xzr
  40bb18:	bl	404bf0 <dcgettext@plt>
  40bb1c:	mov	x20, x0
  40bb20:	mov	x0, x19
  40bb24:	bl	43beac <argp_usage@@Base+0xa2b0>
  40bb28:	mov	x3, x0
  40bb2c:	mov	w0, wzr
  40bb30:	mov	w1, wzr
  40bb34:	mov	x2, x20
  40bb38:	bl	4041f0 <error@plt>
  40bb3c:	b	40b9fc <wcrtomb@plt+0x6bdc>
  40bb40:	mov	x0, x26
  40bb44:	bl	40c910 <wcrtomb@plt+0x7af0>
  40bb48:	tbz	w0, #0, 40bc50 <wcrtomb@plt+0x6e30>
  40bb4c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bb50:	ldr	w2, [x8, #708]
  40bb54:	mov	x0, x23
  40bb58:	mov	x1, x27
  40bb5c:	bl	40a3e0 <wcrtomb@plt+0x55c0>
  40bb60:	mov	w8, w0
  40bb64:	tbnz	w0, #31, 40bd90 <wcrtomb@plt+0x6f70>
  40bb68:	mov	w0, w8
  40bb6c:	mov	x1, x26
  40bb70:	str	w8, [x20, #408]
  40bb74:	mov	w24, w8
  40bb78:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  40bb7c:	cmp	w0, #0x0
  40bb80:	mov	w8, w24
  40bb84:	csel	x25, xzr, x25, eq  // eq = none
  40bb88:	cbnz	x25, 40b9e8 <wcrtomb@plt+0x6bc8>
  40bb8c:	b	40ba4c <wcrtomb@plt+0x6c2c>
  40bb90:	ldr	w8, [x20, #104]
  40bb94:	and	w26, w8, #0xf000
  40bb98:	cmp	w26, #0x4, lsl #12
  40bb9c:	b.ne	40bc60 <wcrtomb@plt+0x6e40>  // b.any
  40bba0:	cmp	w26, #0x4, lsl #12
  40bba4:	cset	w27, ne  // ne = any
  40bba8:	mov	w0, w22
  40bbac:	mov	x1, x25
  40bbb0:	mov	x2, x20
  40bbb4:	mov	w3, wzr
  40bbb8:	mov	w4, w27
  40bbbc:	bl	426358 <wcrtomb@plt+0x21538>
  40bbc0:	ldr	w24, [sp, #28]
  40bbc4:	mov	w0, w22
  40bbc8:	mov	x1, x25
  40bbcc:	mov	x2, x20
  40bbd0:	mov	w3, w24
  40bbd4:	bl	426c78 <wcrtomb@plt+0x21e58>
  40bbd8:	mov	w0, w22
  40bbdc:	mov	x1, x25
  40bbe0:	mov	x2, x20
  40bbe4:	mov	w3, w24
  40bbe8:	bl	4269c8 <wcrtomb@plt+0x21ba8>
  40bbec:	cmp	w26, #0x4, lsl #12
  40bbf0:	b.ne	40bca8 <wcrtomb@plt+0x6e88>  // b.any
  40bbf4:	mov	x0, x20
  40bbf8:	bl	40cb28 <wcrtomb@plt+0x7d08>
  40bbfc:	mov	x0, x28
  40bc00:	bl	40cb28 <wcrtomb@plt+0x7d08>
  40bc04:	add	x1, sp, #0x28
  40bc08:	mov	x0, x20
  40bc0c:	bl	40a31c <wcrtomb@plt+0x54fc>
  40bc10:	cmp	w0, #0x3
  40bc14:	b.ne	40bda0 <wcrtomb@plt+0x6f80>  // b.any
  40bc18:	ldr	x24, [x20]
  40bc1c:	ldr	x25, [sp, #40]
  40bc20:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40bc24:	add	x1, x1, #0xf71
  40bc28:	mov	w2, #0x5                   	// #5
  40bc2c:	mov	x0, xzr
  40bc30:	bl	404bf0 <dcgettext@plt>
  40bc34:	mov	x2, x0
  40bc38:	mov	x0, x24
  40bc3c:	mov	x1, x25
  40bc40:	bl	40a27c <wcrtomb@plt+0x545c>
  40bc44:	tbz	wzr, #0, 40b9fc <wcrtomb@plt+0x6bdc>
  40bc48:	ldr	w12, [sp, #28]
  40bc4c:	b	40bdd0 <wcrtomb@plt+0x6fb0>
  40bc50:	mov	x25, xzr
  40bc54:	mov	w8, wzr
  40bc58:	cbnz	x25, 40b9e8 <wcrtomb@plt+0x6bc8>
  40bc5c:	b	40ba4c <wcrtomb@plt+0x6c2c>
  40bc60:	mov	x0, x20
  40bc64:	bl	40c9bc <wcrtomb@plt+0x7b9c>
  40bc68:	tbnz	w0, #0, 40b9fc <wcrtomb@plt+0x6bdc>
  40bc6c:	ldr	w8, [x20, #104]
  40bc70:	and	w8, w8, #0xf000
  40bc74:	sub	w8, w8, #0x1, lsl #12
  40bc78:	lsr	w8, w8, #12
  40bc7c:	cmp	w8, #0xb
  40bc80:	b.hi	40be98 <wcrtomb@plt+0x7078>  // b.pmore
  40bc84:	adrp	x9, 450000 <_obstack_memory_used@@Base+0x11da0>
  40bc88:	add	x9, x9, #0xd0c
  40bc8c:	adr	x10, 40bba0 <wcrtomb@plt+0x6d80>
  40bc90:	ldrb	w11, [x9, x8]
  40bc94:	add	x10, x10, x11, lsl #2
  40bc98:	mov	w24, #0x33                  	// #51
  40bc9c:	br	x10
  40bca0:	mov	w24, #0x36                  	// #54
  40bca4:	b	40be48 <wcrtomb@plt+0x7028>
  40bca8:	mov	w12, w24
  40bcac:	cbz	w24, 40bd0c <wcrtomb@plt+0x6eec>
  40bcb0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bcb4:	ldrb	w8, [x8, #912]
  40bcb8:	cbz	w8, 40bd0c <wcrtomb@plt+0x6eec>
  40bcbc:	ldr	x8, [x20, #136]
  40bcc0:	ldr	x9, [x20, #152]
  40bcc4:	cmp	x8, #0x0
  40bcc8:	add	x10, x8, #0x1ff
  40bccc:	csel	x11, x10, x8, lt  // lt = tstop
  40bcd0:	tst	x8, #0x1ff
  40bcd4:	cset	w8, ne  // ne = any
  40bcd8:	cmp	x10, #0x3fe
  40bcdc:	cset	w10, hi  // hi = pmore
  40bce0:	and	w8, w10, w8
  40bce4:	add	x8, x8, x11, asr #9
  40bce8:	cmp	x9, x8
  40bcec:	b.ge	40bd0c <wcrtomb@plt+0x6eec>  // b.tcont
  40bcf0:	mov	w0, w12
  40bcf4:	mov	x1, x20
  40bcf8:	bl	41d64c <wcrtomb@plt+0x1882c>
  40bcfc:	ldr	w12, [sp, #28]
  40bd00:	mov	w25, w0
  40bd04:	cmp	w0, #0x3
  40bd08:	b.ne	40bd20 <wcrtomb@plt+0x6f00>  // b.any
  40bd0c:	mov	w0, w12
  40bd10:	mov	x1, x20
  40bd14:	bl	40cc0c <wcrtomb@plt+0x7dec>
  40bd18:	ldr	w12, [sp, #28]
  40bd1c:	mov	w25, w0
  40bd20:	cmp	w25, #0x2
  40bd24:	b.cs	40bdc0 <wcrtomb@plt+0x6fa0>  // b.hs, b.nlast
  40bd28:	mov	x0, x20
  40bd2c:	bl	40ce00 <wcrtomb@plt+0x7fe0>
  40bd30:	ldr	w12, [sp, #28]
  40bd34:	b	40bdc8 <wcrtomb@plt+0x6fa8>
  40bd38:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bd3c:	ldr	w8, [x8, #972]
  40bd40:	cbz	w8, 40bd58 <wcrtomb@plt+0x6f38>
  40bd44:	ldp	x1, x0, [sp, #8]
  40bd48:	mov	x2, x26
  40bd4c:	mov	x3, x25
  40bd50:	bl	43cd0c <argp_usage@@Base+0xb110>
  40bd54:	tbz	w0, #31, 40badc <wcrtomb@plt+0x6cbc>
  40bd58:	cbnz	w24, 40b9fc <wcrtomb@plt+0x6bdc>
  40bd5c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bd60:	ldr	w8, [x8, #644]
  40bd64:	cbz	w8, 40b9fc <wcrtomb@plt+0x6bdc>
  40bd68:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40bd6c:	ldrb	w8, [x8, #449]
  40bd70:	tbz	w8, #0, 40b9fc <wcrtomb@plt+0x6bdc>
  40bd74:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bd78:	ldr	x8, [x8, #1008]
  40bd7c:	cbz	x8, 40bd84 <wcrtomb@plt+0x6f64>
  40bd80:	blr	x8
  40bd84:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40bd88:	add	x1, x1, #0xf2b
  40bd8c:	b	40bb10 <wcrtomb@plt+0x6cf0>
  40bd90:	adrp	x25, 41a000 <wcrtomb@plt+0x151e0>
  40bd94:	add	x25, x25, #0xc54
  40bd98:	cbnz	x25, 40b9e8 <wcrtomb@plt+0x6bc8>
  40bd9c:	b	40ba4c <wcrtomb@plt+0x6c2c>
  40bda0:	mov	x0, x20
  40bda4:	bl	40cbb4 <wcrtomb@plt+0x7d94>
  40bda8:	mov	w8, #0x1                   	// #1
  40bdac:	tbz	w8, #0, 40b9fc <wcrtomb@plt+0x6bdc>
  40bdb0:	ldr	w12, [x20, #408]
  40bdb4:	ldr	w22, [x21]
  40bdb8:	mov	w28, w0
  40bdbc:	b	40bdd0 <wcrtomb@plt+0x6fb0>
  40bdc0:	cmp	w25, #0x3
  40bdc4:	b.eq	40c17c <wcrtomb@plt+0x735c>  // b.none
  40bdc8:	cmp	w25, #0x0
  40bdcc:	cset	w28, eq  // eq = none
  40bdd0:	tbz	w28, #0, 40c038 <wcrtomb@plt+0x7218>
  40bdd4:	tbnz	w12, #31, 40bdf0 <wcrtomb@plt+0x6fd0>
  40bdd8:	cbz	w12, 40bdfc <wcrtomb@plt+0x6fdc>
  40bddc:	add	x1, sp, #0x28
  40bde0:	mov	w0, w12
  40bde4:	mov	w24, w12
  40bde8:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  40bdec:	b	40c010 <wcrtomb@plt+0x71f0>
  40bdf0:	mov	w24, w12
  40bdf4:	neg	w21, w12
  40bdf8:	b	40be0c <wcrtomb@plt+0x6fec>
  40bdfc:	mov	w24, w12
  40be00:	cbz	x23, 40bff8 <wcrtomb@plt+0x71d8>
  40be04:	tbz	w22, #31, 40bff8 <wcrtomb@plt+0x71d8>
  40be08:	neg	w21, w22
  40be0c:	bl	404d00 <__errno_location@plt>
  40be10:	mov	w28, wzr
  40be14:	str	w21, [x0]
  40be18:	b	40c018 <wcrtomb@plt+0x71f8>
  40be1c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40be20:	ldrb	w8, [x8, #448]
  40be24:	tbz	w8, #5, 40b9fc <wcrtomb@plt+0x6bdc>
  40be28:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40be2c:	ldr	x8, [x8, #1008]
  40be30:	cbz	x8, 40be38 <wcrtomb@plt+0x7018>
  40be34:	blr	x8
  40be38:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40be3c:	add	x1, x1, #0xfa5
  40be40:	b	40bb10 <wcrtomb@plt+0x6cf0>
  40be44:	mov	w24, #0x34                  	// #52
  40be48:	mov	w4, #0x1                   	// #1
  40be4c:	mov	w0, w22
  40be50:	mov	x1, x25
  40be54:	mov	x2, x20
  40be58:	mov	w3, wzr
  40be5c:	bl	426358 <wcrtomb@plt+0x21538>
  40be60:	mov	w0, w22
  40be64:	mov	x1, x25
  40be68:	mov	x2, x20
  40be6c:	mov	w3, wzr
  40be70:	bl	426c78 <wcrtomb@plt+0x21e58>
  40be74:	mov	w0, w22
  40be78:	mov	x1, x25
  40be7c:	mov	x2, x20
  40be80:	mov	w3, wzr
  40be84:	bl	4269c8 <wcrtomb@plt+0x21ba8>
  40be88:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40be8c:	ldr	w8, [x8, #816]
  40be90:	cmp	w8, #0x1
  40be94:	b.ne	40bea4 <wcrtomb@plt+0x7084>  // b.any
  40be98:	mov	x0, x19
  40be9c:	bl	40cfec <wcrtomb@plt+0x81cc>
  40bea0:	b	40b9fc <wcrtomb@plt+0x6bdc>
  40bea4:	bl	405568 <wcrtomb@plt+0x748>
  40bea8:	mov	x21, x0
  40beac:	mov	x0, x20
  40beb0:	str	xzr, [x20, #136]
  40beb4:	bl	40aaa8 <wcrtomb@plt+0x5c88>
  40beb8:	cbz	x0, 40b9fc <wcrtomb@plt+0x6bdc>
  40bebc:	mov	x22, x0
  40bec0:	cmp	w24, #0x36
  40bec4:	strb	w24, [x0, #156]
  40bec8:	b.eq	40beec <wcrtomb@plt+0x70cc>  // b.none
  40becc:	ldr	x0, [x20, #120]
  40bed0:	bl	4048b0 <gnu_dev_major@plt>
  40bed4:	add	x1, x22, #0x149
  40bed8:	bl	40b0f8 <wcrtomb@plt+0x62d8>
  40bedc:	ldr	x0, [x20, #120]
  40bee0:	bl	404b10 <gnu_dev_minor@plt>
  40bee4:	add	x1, x22, #0x151
  40bee8:	bl	40b134 <wcrtomb@plt+0x6314>
  40beec:	mov	x0, x20
  40bef0:	mov	x1, x22
  40bef4:	mov	x2, x21
  40bef8:	bl	40b224 <wcrtomb@plt+0x6404>
  40befc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bf00:	ldrb	w8, [x8, #744]
  40bf04:	cbz	w8, 40b9fc <wcrtomb@plt+0x6bdc>
  40bf08:	mov	x0, x19
  40bf0c:	mov	w1, wzr
  40bf10:	b	40c0fc <wcrtomb@plt+0x72dc>
  40bf14:	ldr	x2, [x20, #136]
  40bf18:	mov	w0, w22
  40bf1c:	mov	x1, x25
  40bf20:	bl	42e120 <wcrtomb@plt+0x29300>
  40bf24:	mov	x24, x20
  40bf28:	str	x0, [x24, #24]!
  40bf2c:	cbz	x0, 40c154 <wcrtomb@plt+0x7334>
  40bf30:	mov	w1, #0x4                   	// #4
  40bf34:	mov	x0, x24
  40bf38:	bl	42509c <wcrtomb@plt+0x2027c>
  40bf3c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bf40:	ldr	w8, [x8, #816]
  40bf44:	ldr	x0, [x24]
  40bf48:	cmp	w8, #0x2
  40bf4c:	mov	w8, #0x63                  	// #99
  40bf50:	cinc	x21, x8, ne  // ne = any
  40bf54:	bl	404190 <strlen@plt>
  40bf58:	cmp	x21, x0
  40bf5c:	b.cs	40bf68 <wcrtomb@plt+0x7148>  // b.hs, b.nlast
  40bf60:	mov	x0, x20
  40bf64:	bl	40cf14 <wcrtomb@plt+0x80f4>
  40bf68:	mov	w0, w22
  40bf6c:	mov	x1, x25
  40bf70:	mov	x2, x20
  40bf74:	mov	w3, wzr
  40bf78:	bl	426c78 <wcrtomb@plt+0x21e58>
  40bf7c:	mov	w0, w22
  40bf80:	mov	x1, x25
  40bf84:	mov	x2, x20
  40bf88:	mov	w3, wzr
  40bf8c:	bl	4269c8 <wcrtomb@plt+0x21ba8>
  40bf90:	bl	405568 <wcrtomb@plt+0x748>
  40bf94:	mov	x21, x0
  40bf98:	mov	x0, x20
  40bf9c:	str	xzr, [x20, #136]
  40bfa0:	bl	40aaa8 <wcrtomb@plt+0x5c88>
  40bfa4:	cbz	x0, 40b9fc <wcrtomb@plt+0x6bdc>
  40bfa8:	ldr	x1, [x20, #24]
  40bfac:	mov	x22, x0
  40bfb0:	add	x0, x0, #0x9d
  40bfb4:	mov	w2, #0x64                  	// #100
  40bfb8:	bl	40c3e0 <wcrtomb@plt+0x75c0>
  40bfbc:	mov	w8, #0x32                  	// #50
  40bfc0:	mov	x0, x20
  40bfc4:	mov	x1, x22
  40bfc8:	mov	x2, x21
  40bfcc:	strb	w8, [x22, #156]
  40bfd0:	bl	40b224 <wcrtomb@plt+0x6404>
  40bfd4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bfd8:	ldrb	w8, [x8, #744]
  40bfdc:	cbz	w8, 40bfec <wcrtomb@plt+0x71cc>
  40bfe0:	mov	x0, x19
  40bfe4:	mov	w1, wzr
  40bfe8:	bl	425a78 <wcrtomb@plt+0x20c58>
  40bfec:	mov	x0, x20
  40bff0:	bl	40ce00 <wcrtomb@plt+0x7fe0>
  40bff4:	b	40b9fc <wcrtomb@plt+0x6bdc>
  40bff8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40bffc:	ldr	w3, [x8, #560]
  40c000:	ldr	x1, [sp, #32]
  40c004:	add	x2, sp, #0x28
  40c008:	mov	w0, w22
  40c00c:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  40c010:	cmp	w0, #0x0
  40c014:	cset	w28, eq  // eq = none
  40c018:	tbnz	w28, #0, 40c034 <wcrtomb@plt+0x7214>
  40c01c:	cmp	x23, #0x0
  40c020:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  40c024:	cset	w1, eq  // eq = none
  40c028:	add	x2, x2, #0xd6c
  40c02c:	mov	x0, x19
  40c030:	bl	41ada4 <wcrtomb@plt+0x15f84>
  40c034:	mov	w12, w24
  40c038:	tbz	w28, #0, 40c0d4 <wcrtomb@plt+0x72b4>
  40c03c:	add	x0, sp, #0x28
  40c040:	mov	w21, w12
  40c044:	bl	43cc78 <argp_usage@@Base+0xb07c>
  40c048:	ldp	x3, x2, [sp, #8]
  40c04c:	bl	43cd0c <argp_usage@@Base+0xb110>
  40c050:	ldr	x9, [sp]
  40c054:	cbz	w0, 40c070 <wcrtomb@plt+0x7250>
  40c058:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c05c:	ldrb	w8, [x8, #744]
  40c060:	cmp	w8, #0x0
  40c064:	cset	w8, eq  // eq = none
  40c068:	orr	w8, w8, w27
  40c06c:	tbnz	w8, #0, 40c07c <wcrtomb@plt+0x725c>
  40c070:	ldr	x8, [sp, #88]
  40c074:	cmp	x9, x8
  40c078:	b.ge	40c104 <wcrtomb@plt+0x72e4>  // b.tcont
  40c07c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c080:	ldrb	w8, [x8, #448]
  40c084:	tbz	w8, #4, 40c0cc <wcrtomb@plt+0x72ac>
  40c088:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c08c:	ldr	x8, [x8, #1008]
  40c090:	cbz	x8, 40c098 <wcrtomb@plt+0x7278>
  40c094:	blr	x8
  40c098:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c09c:	add	x1, x1, #0xf86
  40c0a0:	mov	w2, #0x5                   	// #5
  40c0a4:	mov	x0, xzr
  40c0a8:	bl	404bf0 <dcgettext@plt>
  40c0ac:	mov	x21, x0
  40c0b0:	mov	x0, x19
  40c0b4:	bl	43beac <argp_usage@@Base+0xa2b0>
  40c0b8:	mov	x3, x0
  40c0bc:	mov	w0, wzr
  40c0c0:	mov	w1, wzr
  40c0c4:	mov	x2, x21
  40c0c8:	bl	4041f0 <error@plt>
  40c0cc:	mov	w0, #0x1                   	// #1
  40c0d0:	bl	422410 <wcrtomb@plt+0x1d5f0>
  40c0d4:	mov	x0, x20
  40c0d8:	bl	422468 <wcrtomb@plt+0x1d648>
  40c0dc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c0e0:	ldrb	w8, [x8, #744]
  40c0e4:	cbz	w8, 40b9fc <wcrtomb@plt+0x6bdc>
  40c0e8:	and	w8, w28, w0
  40c0ec:	tbz	w8, #0, 40b9fc <wcrtomb@plt+0x6bdc>
  40c0f0:	cmp	w26, #0x4, lsl #12
  40c0f4:	cset	w1, eq  // eq = none
  40c0f8:	mov	x0, x19
  40c0fc:	bl	425a78 <wcrtomb@plt+0x20c58>
  40c100:	b	40b9fc <wcrtomb@plt+0x6bdc>
  40c104:	cmp	w26, #0x4, lsl #12
  40c108:	cset	w8, ne  // ne = any
  40c10c:	cmp	x9, #0x0
  40c110:	cset	w9, eq  // eq = none
  40c114:	and	w8, w9, w8
  40c118:	tbnz	w8, #0, 40c0d4 <wcrtomb@plt+0x72b4>
  40c11c:	mov	w0, w21
  40c120:	cbz	w21, 40c0d4 <wcrtomb@plt+0x72b4>
  40c124:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c128:	ldr	w8, [x8, #556]
  40c12c:	cmp	w8, #0x1
  40c130:	b.ne	40c0d4 <wcrtomb@plt+0x72b4>  // b.any
  40c134:	ldp	x3, x4, [x20, #216]
  40c138:	ldr	x2, [sp, #32]
  40c13c:	mov	w1, w22
  40c140:	bl	41a7c0 <wcrtomb@plt+0x159a0>
  40c144:	cbz	w0, 40c0d4 <wcrtomb@plt+0x72b4>
  40c148:	mov	x0, x19
  40c14c:	bl	428744 <wcrtomb@plt+0x23924>
  40c150:	b	40c0d4 <wcrtomb@plt+0x72b4>
  40c154:	bl	404d00 <__errno_location@plt>
  40c158:	ldr	w8, [x0]
  40c15c:	cmp	w8, #0xc
  40c160:	b.eq	40c180 <wcrtomb@plt+0x7360>  // b.none
  40c164:	cmp	x23, #0x0
  40c168:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  40c16c:	cset	w1, eq  // eq = none
  40c170:	add	x2, x2, #0xcc4
  40c174:	mov	x0, x19
  40c178:	b	40b9f8 <wcrtomb@plt+0x6bd8>
  40c17c:	bl	404870 <abort@plt>
  40c180:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  40c184:	sub	x8, x1, #0x1
  40c188:	mov	w9, #0x30                  	// #48
  40c18c:	bfxil	w9, w0, #0, #3
  40c190:	strb	w9, [x8, x2]
  40c194:	subs	x2, x2, #0x1
  40c198:	lsr	x0, x0, #3
  40c19c:	b.ne	40c188 <wcrtomb@plt+0x7368>  // b.any
  40c1a0:	ret
  40c1a4:	neg	w8, w0
  40c1a8:	lsl	x8, x8, #56
  40c1ac:	sub	x9, x2, #0x1
  40c1b0:	strb	w1, [x9, x3]
  40c1b4:	subs	x3, x3, #0x1
  40c1b8:	orr	x1, x8, x1, lsr #8
  40c1bc:	b.ne	40c1b0 <wcrtomb@plt+0x7390>  // b.any
  40c1c0:	ret
  40c1c4:	sub	sp, sp, #0xd0
  40c1c8:	stp	x28, x27, [sp, #128]
  40c1cc:	stp	x26, x25, [sp, #144]
  40c1d0:	stp	x24, x23, [sp, #160]
  40c1d4:	stp	x22, x21, [sp, #176]
  40c1d8:	stp	x20, x19, [sp, #192]
  40c1dc:	mov	x19, x7
  40c1e0:	mov	x20, x6
  40c1e4:	mov	x21, x5
  40c1e8:	mov	x25, x4
  40c1ec:	mov	x22, x3
  40c1f0:	mov	x26, x2
  40c1f4:	mov	w24, w1
  40c1f8:	mov	w28, w0
  40c1fc:	sub	x8, x6, #0x1
  40c200:	stp	x29, x30, [sp, #112]
  40c204:	add	x29, sp, #0x70
  40c208:	cbz	w1, 40c214 <wcrtomb@plt+0x73f4>
  40c20c:	lsl	x8, x8, #3
  40c210:	b	40c218 <wcrtomb@plt+0x73f8>
  40c214:	add	x8, x8, x8, lsl #1
  40c218:	cmp	x8, #0x3f
  40c21c:	mov	x27, #0xffffffffffffffff    	// #-1
  40c220:	b.hi	40c22c <wcrtomb@plt+0x740c>  // b.pmore
  40c224:	lsl	x8, x27, x8
  40c228:	mvn	x27, x8
  40c22c:	sub	x1, x29, #0x30
  40c230:	mov	x0, x27
  40c234:	bl	43650c <argp_usage@@Base+0x4910>
  40c238:	mov	x23, x0
  40c23c:	cbz	w24, 40c348 <wcrtomb@plt+0x7528>
  40c240:	adds	x8, x27, #0x1
  40c244:	lsr	x9, x27, #1
  40c248:	add	x10, sp, #0x28
  40c24c:	csinc	x0, x8, x9, cc  // cc = lo, ul, last
  40c250:	orr	x1, x10, #0x1
  40c254:	bl	43650c <argp_usage@@Base+0x4910>
  40c258:	mov	x24, x0
  40c25c:	mov	w8, #0x2d                  	// #45
  40c260:	strb	w8, [x24, #-1]!
  40c264:	cbz	w28, 40c354 <wcrtomb@plt+0x7534>
  40c268:	sub	x8, x29, #0x18
  40c26c:	neg	x0, x26
  40c270:	orr	x1, x8, #0x1
  40c274:	bl	43650c <argp_usage@@Base+0x4910>
  40c278:	mov	x26, x0
  40c27c:	mov	w8, #0x2d                  	// #45
  40c280:	strb	w8, [x26, #-1]!
  40c284:	cbz	x25, 40c368 <wcrtomb@plt+0x7548>
  40c288:	add	x0, sp, #0x24
  40c28c:	blr	x25
  40c290:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c294:	ldr	w8, [x8, #816]
  40c298:	ldr	w10, [sp, #36]
  40c29c:	and	x9, x0, x27
  40c2a0:	add	x11, sp, #0xc
  40c2a4:	cmp	w8, #0x6
  40c2a8:	cset	w8, eq  // eq = none
  40c2ac:	tst	w10, w8
  40c2b0:	cneg	x25, x9, ne  // ne = any
  40c2b4:	and	w12, w10, w8
  40c2b8:	orr	x1, x11, #0x1
  40c2bc:	mov	x0, x25
  40c2c0:	str	w12, [sp, #36]
  40c2c4:	bl	43650c <argp_usage@@Base+0x4910>
  40c2c8:	ldr	w8, [sp, #36]
  40c2cc:	mov	x27, x0
  40c2d0:	cbz	w8, 40c2dc <wcrtomb@plt+0x74bc>
  40c2d4:	mov	w8, #0x2d                  	// #45
  40c2d8:	strb	w8, [x27, #-1]!
  40c2dc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c2e0:	ldr	x8, [x8, #1008]
  40c2e4:	cbz	x8, 40c2ec <wcrtomb@plt+0x74cc>
  40c2e8:	blr	x8
  40c2ec:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c2f0:	add	x1, x1, #0xe2d
  40c2f4:	mov	w2, #0x5                   	// #5
  40c2f8:	mov	x0, xzr
  40c2fc:	bl	404bf0 <dcgettext@plt>
  40c300:	mov	x2, x0
  40c304:	mov	w0, wzr
  40c308:	mov	w1, wzr
  40c30c:	mov	x3, x26
  40c310:	mov	x4, x19
  40c314:	mov	x5, x24
  40c318:	mov	x6, x23
  40c31c:	mov	x7, x27
  40c320:	bl	4041f0 <error@plt>
  40c324:	ldr	w0, [sp, #36]
  40c328:	mov	x1, x25
  40c32c:	mov	x2, x22
  40c330:	mov	x3, xzr
  40c334:	mov	x4, x21
  40c338:	mov	x5, x20
  40c33c:	mov	x6, x19
  40c340:	bl	40a598 <wcrtomb@plt+0x5778>
  40c344:	b	40c3bc <wcrtomb@plt+0x759c>
  40c348:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x18da0>
  40c34c:	add	x24, x24, #0xd4b
  40c350:	cbnz	w28, 40c268 <wcrtomb@plt+0x7448>
  40c354:	sub	x1, x29, #0x18
  40c358:	mov	x0, x26
  40c35c:	bl	43650c <argp_usage@@Base+0x4910>
  40c360:	mov	x26, x0
  40c364:	cbnz	x25, 40c288 <wcrtomb@plt+0x7468>
  40c368:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c36c:	ldr	x8, [x8, #1008]
  40c370:	cbz	x8, 40c378 <wcrtomb@plt+0x7558>
  40c374:	blr	x8
  40c378:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c37c:	add	x1, x1, #0xe5e
  40c380:	mov	w2, #0x5                   	// #5
  40c384:	mov	x0, xzr
  40c388:	bl	404bf0 <dcgettext@plt>
  40c38c:	mov	x2, x0
  40c390:	mov	w0, wzr
  40c394:	mov	w1, wzr
  40c398:	mov	x3, x26
  40c39c:	mov	x4, x19
  40c3a0:	mov	x5, x24
  40c3a4:	mov	x6, x23
  40c3a8:	bl	4041f0 <error@plt>
  40c3ac:	mov	w0, wzr
  40c3b0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c3b4:	mov	w9, #0x2                   	// #2
  40c3b8:	str	w9, [x8, #3456]
  40c3bc:	ldp	x20, x19, [sp, #192]
  40c3c0:	ldp	x22, x21, [sp, #176]
  40c3c4:	ldp	x24, x23, [sp, #160]
  40c3c8:	ldp	x26, x25, [sp, #144]
  40c3cc:	ldp	x28, x27, [sp, #128]
  40c3d0:	ldp	x29, x30, [sp, #112]
  40c3d4:	and	w0, w0, #0x1
  40c3d8:	add	sp, sp, #0xd0
  40c3dc:	ret
  40c3e0:	cbz	x2, 40c400 <wcrtomb@plt+0x75e0>
  40c3e4:	mov	x8, xzr
  40c3e8:	ldrb	w9, [x1, x8]
  40c3ec:	strb	w9, [x0, x8]
  40c3f0:	cbz	w9, 40c400 <wcrtomb@plt+0x75e0>
  40c3f4:	add	x8, x8, #0x1
  40c3f8:	cmp	x8, x2
  40c3fc:	b.cc	40c3e8 <wcrtomb@plt+0x75c8>  // b.lo, b.ul, b.last
  40c400:	ret
  40c404:	stp	x29, x30, [sp, #-32]!
  40c408:	stp	x20, x19, [sp, #16]
  40c40c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c410:	ldr	w8, [x20, #2000]
  40c414:	mov	x19, x0
  40c418:	mov	x29, sp
  40c41c:	cbnz	w8, 40c440 <wcrtomb@plt+0x7620>
  40c420:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c424:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c428:	add	x0, x0, #0xe8b
  40c42c:	add	x1, x1, #0x7d0
  40c430:	bl	41b108 <wcrtomb@plt+0x162e8>
  40c434:	cbnz	w0, 40c440 <wcrtomb@plt+0x7620>
  40c438:	mov	w8, #0xfffffffe            	// #-2
  40c43c:	str	w8, [x20, #2000]
  40c440:	ldr	w0, [x20, #2000]
  40c444:	str	wzr, [x19]
  40c448:	ldp	x20, x19, [sp, #16]
  40c44c:	ldp	x29, x30, [sp], #32
  40c450:	ret
  40c454:	stp	x29, x30, [sp, #-32]!
  40c458:	stp	x20, x19, [sp, #16]
  40c45c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c460:	ldr	w8, [x20, #2004]
  40c464:	mov	x19, x0
  40c468:	mov	x29, sp
  40c46c:	cbnz	w8, 40c490 <wcrtomb@plt+0x7670>
  40c470:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c474:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c478:	add	x0, x0, #0xe8b
  40c47c:	add	x1, x1, #0x7d4
  40c480:	bl	41b1bc <wcrtomb@plt+0x1639c>
  40c484:	cbnz	w0, 40c490 <wcrtomb@plt+0x7670>
  40c488:	mov	w8, #0xfffffffe            	// #-2
  40c48c:	str	w8, [x20, #2004]
  40c490:	ldr	w0, [x20, #2004]
  40c494:	str	wzr, [x19]
  40c498:	ldp	x20, x19, [sp, #16]
  40c49c:	ldp	x29, x30, [sp], #32
  40c4a0:	ret
  40c4a4:	stp	x29, x30, [sp, #-32]!
  40c4a8:	stp	x20, x19, [sp, #16]
  40c4ac:	mov	x29, sp
  40c4b0:	mov	x19, x0
  40c4b4:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40c4b8:	movi	v0.2d, #0x0
  40c4bc:	stp	q0, q0, [x0]
  40c4c0:	stp	q0, q0, [x0, #32]
  40c4c4:	stp	q0, q0, [x0, #64]
  40c4c8:	stp	q0, q0, [x0, #96]
  40c4cc:	stp	q0, q0, [x0, #128]
  40c4d0:	stp	q0, q0, [x0, #160]
  40c4d4:	stp	q0, q0, [x0, #192]
  40c4d8:	stp	q0, q0, [x0, #224]
  40c4dc:	stp	q0, q0, [x0, #256]
  40c4e0:	stp	q0, q0, [x0, #288]
  40c4e4:	stp	q0, q0, [x0, #320]
  40c4e8:	stp	q0, q0, [x0, #352]
  40c4ec:	stp	q0, q0, [x0, #384]
  40c4f0:	stp	q0, q0, [x0, #416]
  40c4f4:	stp	q0, q0, [x0, #448]
  40c4f8:	stp	q0, q0, [x0, #480]
  40c4fc:	ldr	x1, [x19, #8]
  40c500:	mov	x20, x0
  40c504:	bl	40a8b8 <wcrtomb@plt+0x5a98>
  40c508:	mov	x0, x20
  40c50c:	ldp	x20, x19, [sp, #16]
  40c510:	ldp	x29, x30, [sp], #32
  40c514:	ret
  40c518:	stp	x29, x30, [sp, #-32]!
  40c51c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c520:	ldr	w8, [x8, #816]
  40c524:	str	x19, [sp, #16]
  40c528:	mov	x29, sp
  40c52c:	sub	w8, w8, #0x1
  40c530:	cmp	w8, #0x5
  40c534:	b.hi	40c60c <wcrtomb@plt+0x77ec>  // b.pmore
  40c538:	adrp	x9, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c53c:	add	x9, x9, #0xd18
  40c540:	adr	x10, 40c554 <wcrtomb@plt+0x7734>
  40c544:	ldrb	w11, [x9, x8]
  40c548:	add	x10, x10, x11, lsl #2
  40c54c:	mov	x19, x0
  40c550:	br	x10
  40c554:	ldr	x1, [x19, #8]
  40c558:	mov	w2, #0x4c                  	// #76
  40c55c:	mov	x0, x19
  40c560:	bl	40c784 <wcrtomb@plt+0x7964>
  40c564:	b	40c5f8 <wcrtomb@plt+0x77d8>
  40c568:	ldr	x0, [x19, #8]
  40c56c:	bl	40c610 <wcrtomb@plt+0x77f0>
  40c570:	b	40c600 <wcrtomb@plt+0x77e0>
  40c574:	ldr	x0, [x19, #8]
  40c578:	bl	404190 <strlen@plt>
  40c57c:	cmp	x0, #0x64
  40c580:	b.cc	40c5f8 <wcrtomb@plt+0x77d8>  // b.lo, b.ul, b.last
  40c584:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c588:	ldr	x8, [x8, #1008]
  40c58c:	cbz	x8, 40c594 <wcrtomb@plt+0x7774>
  40c590:	blr	x8
  40c594:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c598:	add	x1, x1, #0xe98
  40c59c:	mov	w2, #0x5                   	// #5
  40c5a0:	mov	x0, xzr
  40c5a4:	bl	404bf0 <dcgettext@plt>
  40c5a8:	ldr	x8, [x19, #8]
  40c5ac:	mov	x19, x0
  40c5b0:	mov	x0, x8
  40c5b4:	bl	43beac <argp_usage@@Base+0xa2b0>
  40c5b8:	mov	x3, x0
  40c5bc:	mov	w4, #0x63                  	// #99
  40c5c0:	mov	w0, wzr
  40c5c4:	mov	w1, wzr
  40c5c8:	mov	x2, x19
  40c5cc:	bl	4041f0 <error@plt>
  40c5d0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c5d4:	mov	w9, #0x2                   	// #2
  40c5d8:	mov	x0, xzr
  40c5dc:	str	w9, [x8, #3456]
  40c5e0:	b	40c600 <wcrtomb@plt+0x77e0>
  40c5e4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  40c5e8:	add	x0, x0, #0x6d
  40c5ec:	mov	x1, x19
  40c5f0:	mov	x2, xzr
  40c5f4:	bl	41213c <wcrtomb@plt+0xd31c>
  40c5f8:	mov	x0, x19
  40c5fc:	bl	40c4a4 <wcrtomb@plt+0x7684>
  40c600:	ldr	x19, [sp, #16]
  40c604:	ldp	x29, x30, [sp], #32
  40c608:	ret
  40c60c:	bl	404870 <abort@plt>
  40c610:	stp	x29, x30, [sp, #-48]!
  40c614:	stp	x22, x21, [sp, #16]
  40c618:	stp	x20, x19, [sp, #32]
  40c61c:	mov	x29, sp
  40c620:	mov	x19, x0
  40c624:	bl	404190 <strlen@plt>
  40c628:	cmp	x0, #0x101
  40c62c:	b.cc	40c67c <wcrtomb@plt+0x785c>  // b.lo, b.ul, b.last
  40c630:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c634:	ldr	x8, [x8, #1008]
  40c638:	cbz	x8, 40c640 <wcrtomb@plt+0x7820>
  40c63c:	blr	x8
  40c640:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c644:	add	x1, x1, #0xe98
  40c648:	mov	w2, #0x5                   	// #5
  40c64c:	mov	x0, xzr
  40c650:	bl	404bf0 <dcgettext@plt>
  40c654:	mov	x20, x0
  40c658:	mov	x0, x19
  40c65c:	bl	43beac <argp_usage@@Base+0xa2b0>
  40c660:	mov	x3, x0
  40c664:	mov	w4, #0x100                 	// #256
  40c668:	mov	w0, wzr
  40c66c:	mov	w1, wzr
  40c670:	mov	x2, x20
  40c674:	bl	4041f0 <error@plt>
  40c678:	b	40c6ec <wcrtomb@plt+0x78cc>
  40c67c:	mov	x20, x0
  40c680:	mov	x0, x19
  40c684:	mov	x1, x20
  40c688:	bl	40c8d0 <wcrtomb@plt+0x7ab0>
  40c68c:	cbz	x0, 40c6a8 <wcrtomb@plt+0x7888>
  40c690:	mvn	x8, x0
  40c694:	add	x22, x20, x8
  40c698:	sub	x8, x22, #0x1
  40c69c:	mov	x21, x0
  40c6a0:	cmp	x8, #0x64
  40c6a4:	b.cc	40c710 <wcrtomb@plt+0x78f0>  // b.lo, b.ul, b.last
  40c6a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c6ac:	ldr	x8, [x8, #1008]
  40c6b0:	cbz	x8, 40c6b8 <wcrtomb@plt+0x7898>
  40c6b4:	blr	x8
  40c6b8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c6bc:	add	x1, x1, #0xec7
  40c6c0:	mov	w2, #0x5                   	// #5
  40c6c4:	mov	x0, xzr
  40c6c8:	bl	404bf0 <dcgettext@plt>
  40c6cc:	mov	x20, x0
  40c6d0:	mov	x0, x19
  40c6d4:	bl	43beac <argp_usage@@Base+0xa2b0>
  40c6d8:	mov	x3, x0
  40c6dc:	mov	w0, wzr
  40c6e0:	mov	w1, wzr
  40c6e4:	mov	x2, x20
  40c6e8:	bl	4041f0 <error@plt>
  40c6ec:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c6f0:	mov	w9, #0x2                   	// #2
  40c6f4:	mov	x20, xzr
  40c6f8:	str	w9, [x8, #3456]
  40c6fc:	mov	x0, x20
  40c700:	ldp	x20, x19, [sp, #32]
  40c704:	ldp	x22, x21, [sp, #16]
  40c708:	ldp	x29, x30, [sp], #48
  40c70c:	ret
  40c710:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40c714:	movi	v0.2d, #0x0
  40c718:	mov	x20, x0
  40c71c:	stp	q0, q0, [x0]
  40c720:	stp	q0, q0, [x0, #32]
  40c724:	stp	q0, q0, [x0, #64]
  40c728:	stp	q0, q0, [x0, #96]
  40c72c:	stp	q0, q0, [x0, #128]
  40c730:	stp	q0, q0, [x0, #160]
  40c734:	stp	q0, q0, [x0, #192]
  40c738:	stp	q0, q0, [x0, #224]
  40c73c:	stp	q0, q0, [x0, #256]
  40c740:	stp	q0, q0, [x0, #288]
  40c744:	stp	q0, q0, [x0, #320]
  40c748:	stp	q0, q0, [x0, #352]
  40c74c:	stp	q0, q0, [x0, #384]
  40c750:	stp	q0, q0, [x0, #416]
  40c754:	stp	q0, q0, [x0, #448]
  40c758:	stp	q0, q0, [x0, #480]
  40c75c:	add	x0, x0, #0x159
  40c760:	mov	x1, x19
  40c764:	mov	x2, x21
  40c768:	bl	404110 <memcpy@plt>
  40c76c:	add	x8, x19, x21
  40c770:	add	x1, x8, #0x1
  40c774:	mov	x0, x20
  40c778:	mov	x2, x22
  40c77c:	bl	404110 <memcpy@plt>
  40c780:	b	40c6fc <wcrtomb@plt+0x78dc>
  40c784:	stp	x29, x30, [sp, #-64]!
  40c788:	stp	x22, x21, [sp, #32]
  40c78c:	mov	x21, x0
  40c790:	mov	x0, x1
  40c794:	stp	x24, x23, [sp, #16]
  40c798:	stp	x20, x19, [sp, #48]
  40c79c:	mov	x29, sp
  40c7a0:	mov	w22, w2
  40c7a4:	mov	x20, x1
  40c7a8:	bl	404190 <strlen@plt>
  40c7ac:	add	x19, x0, #0x1
  40c7b0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40c7b4:	add	x0, x0, #0xeff
  40c7b8:	mov	x1, x19
  40c7bc:	mov	x2, xzr
  40c7c0:	bl	40a7c8 <wcrtomb@plt+0x59a8>
  40c7c4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c7c8:	ldrb	w8, [x8, #672]
  40c7cc:	mov	x23, x0
  40c7d0:	cbnz	w8, 40c81c <wcrtomb@plt+0x79fc>
  40c7d4:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c7d8:	ldr	x8, [x24, #2008]
  40c7dc:	cbnz	x8, 40c800 <wcrtomb@plt+0x79e0>
  40c7e0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c7e4:	add	x1, x1, #0x7d8
  40c7e8:	mov	w0, wzr
  40c7ec:	bl	41afc0 <wcrtomb@plt+0x161a0>
  40c7f0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c7f4:	add	x1, x1, #0x7e0
  40c7f8:	mov	w0, wzr
  40c7fc:	bl	41b064 <wcrtomb@plt+0x16244>
  40c800:	ldr	x0, [x24, #2008]
  40c804:	add	x1, x23, #0x109
  40c808:	bl	40b170 <wcrtomb@plt+0x6350>
  40c80c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c810:	ldr	x0, [x8, #2016]
  40c814:	add	x1, x23, #0x129
  40c818:	bl	40b170 <wcrtomb@plt+0x6350>
  40c81c:	mov	x9, #0x7375                	// #29557
  40c820:	movk	x9, #0x6174, lsl #16
  40c824:	movk	x9, #0x2072, lsl #32
  40c828:	add	x8, x23, #0x101
  40c82c:	movk	x9, #0x20, lsl #48
  40c830:	mov	x2, #0xffffffffffffffff    	// #-1
  40c834:	mov	x0, x21
  40c838:	mov	x1, x23
  40c83c:	str	x9, [x8]
  40c840:	strb	w22, [x23, #156]
  40c844:	bl	40b224 <wcrtomb@plt+0x6404>
  40c848:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40c84c:	mov	x21, x0
  40c850:	bl	405788 <wcrtomb@plt+0x968>
  40c854:	mov	x22, x0
  40c858:	cmp	x0, x19
  40c85c:	b.cs	40c88c <wcrtomb@plt+0x7a6c>  // b.hs, b.nlast
  40c860:	mov	x0, x21
  40c864:	mov	x1, x20
  40c868:	mov	x2, x22
  40c86c:	bl	404110 <memcpy@plt>
  40c870:	sub	x8, x22, #0x1
  40c874:	and	x8, x8, #0xfffffffffffffe00
  40c878:	add	x0, x21, x8
  40c87c:	add	x20, x20, x22
  40c880:	sub	x19, x19, x22
  40c884:	bl	405744 <wcrtomb@plt+0x924>
  40c888:	b	40c848 <wcrtomb@plt+0x7a28>
  40c88c:	mov	x0, x21
  40c890:	mov	x1, x20
  40c894:	mov	x2, x19
  40c898:	bl	404110 <memcpy@plt>
  40c89c:	add	x0, x21, x19
  40c8a0:	sub	x2, x22, x19
  40c8a4:	mov	w1, wzr
  40c8a8:	bl	404600 <memset@plt>
  40c8ac:	sub	x8, x19, #0x1
  40c8b0:	and	x8, x8, #0xfffffffffffffe00
  40c8b4:	add	x0, x21, x8
  40c8b8:	bl	405744 <wcrtomb@plt+0x924>
  40c8bc:	ldp	x20, x19, [sp, #48]
  40c8c0:	ldp	x22, x21, [sp, #32]
  40c8c4:	ldp	x24, x23, [sp, #16]
  40c8c8:	ldp	x29, x30, [sp], #64
  40c8cc:	ret
  40c8d0:	cmp	x1, #0x9c
  40c8d4:	b.ls	40c8e0 <wcrtomb@plt+0x7ac0>  // b.plast
  40c8d8:	mov	w8, #0x9c                  	// #156
  40c8dc:	b	40c8f0 <wcrtomb@plt+0x7ad0>
  40c8e0:	sub	x8, x1, #0x1
  40c8e4:	ldrb	w9, [x0, x8]
  40c8e8:	cmp	w9, #0x2f
  40c8ec:	csel	x8, x8, x1, eq  // eq = none
  40c8f0:	sub	x9, x0, #0x1
  40c8f4:	subs	x0, x8, #0x1
  40c8f8:	b.eq	40c90c <wcrtomb@plt+0x7aec>  // b.none
  40c8fc:	ldrb	w8, [x9, x8]
  40c900:	cmp	w8, #0x2f
  40c904:	mov	x8, x0
  40c908:	b.ne	40c8f4 <wcrtomb@plt+0x7ad4>  // b.any
  40c90c:	ret
  40c910:	ldr	w8, [x0, #16]
  40c914:	and	w9, w8, #0xf000
  40c918:	cmp	w9, #0x4, lsl #12
  40c91c:	b.eq	40c988 <wcrtomb@plt+0x7b68>  // b.none
  40c920:	cmp	w9, #0x8, lsl #12
  40c924:	b.ne	40c990 <wcrtomb@plt+0x7b70>  // b.any
  40c928:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40c92c:	ldrb	w9, [x9, #536]
  40c930:	cbz	w9, 40c998 <wcrtomb@plt+0x7b78>
  40c934:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40c938:	ldrb	w9, [x8, #697]
  40c93c:	mov	w8, wzr
  40c940:	cbz	w9, 40c9b4 <wcrtomb@plt+0x7b94>
  40c944:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40c948:	ldrb	w9, [x9, #912]
  40c94c:	cbz	w9, 40c9b4 <wcrtomb@plt+0x7b94>
  40c950:	ldr	x8, [x0, #48]
  40c954:	ldr	x9, [x0, #64]
  40c958:	cmp	x8, #0x0
  40c95c:	add	x10, x8, #0x1ff
  40c960:	csel	x11, x10, x8, lt  // lt = tstop
  40c964:	tst	x8, #0x1ff
  40c968:	cset	w8, ne  // ne = any
  40c96c:	cmp	x10, #0x3fe
  40c970:	cset	w10, hi  // hi = pmore
  40c974:	and	w8, w10, w8
  40c978:	add	x8, x8, x11, asr #9
  40c97c:	cmp	x9, x8
  40c980:	cset	w0, lt  // lt = tstop
  40c984:	ret
  40c988:	mov	w0, #0x1                   	// #1
  40c98c:	ret
  40c990:	mov	w0, wzr
  40c994:	ret
  40c998:	ldr	x9, [x0, #48]
  40c99c:	mov	w10, #0x124                 	// #292
  40c9a0:	cmp	x9, #0x0
  40c9a4:	cset	w9, ne  // ne = any
  40c9a8:	bics	wzr, w10, w8
  40c9ac:	cset	w8, ne  // ne = any
  40c9b0:	orr	w8, w8, w9
  40c9b4:	mov	w0, w8
  40c9b8:	ret
  40c9bc:	sub	sp, sp, #0x60
  40c9c0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c9c4:	ldr	x8, [x8, #1984]
  40c9c8:	stp	x29, x30, [sp, #32]
  40c9cc:	str	x23, [sp, #48]
  40c9d0:	stp	x22, x21, [sp, #64]
  40c9d4:	stp	x20, x19, [sp, #80]
  40c9d8:	add	x29, sp, #0x20
  40c9dc:	cbz	x8, 40caf8 <wcrtomb@plt+0x7cd8>
  40c9e0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40c9e4:	ldr	w9, [x9, #1976]
  40c9e8:	ldr	w10, [x0, #108]
  40c9ec:	mov	x19, x0
  40c9f0:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  40c9f4:	cmp	w9, w10
  40c9f8:	b.cc	40ca04 <wcrtomb@plt+0x7be4>  // b.lo, b.ul, b.last
  40c9fc:	ldrb	w9, [x23, #744]
  40ca00:	cbz	w9, 40caf8 <wcrtomb@plt+0x7cd8>
  40ca04:	ldr	x9, [x19, #96]
  40ca08:	add	x1, sp, #0x8
  40ca0c:	mov	x0, x8
  40ca10:	str	x9, [sp, #16]
  40ca14:	ldr	x9, [x19, #88]
  40ca18:	str	x9, [sp, #8]
  40ca1c:	bl	434e74 <argp_usage@@Base+0x3278>
  40ca20:	cbz	x0, 40caf0 <wcrtomb@plt+0x7cd0>
  40ca24:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ca28:	ldrb	w2, [x8, #952]
  40ca2c:	mov	x21, x0
  40ca30:	add	x0, x0, #0x14
  40ca34:	mov	w1, #0x1                   	// #1
  40ca38:	bl	428898 <wcrtomb@plt+0x23a78>
  40ca3c:	ldr	w8, [x21, #16]
  40ca40:	mov	x20, x0
  40ca44:	cbz	w8, 40ca50 <wcrtomb@plt+0x7c30>
  40ca48:	sub	w8, w8, #0x1
  40ca4c:	str	w8, [x21, #16]
  40ca50:	bl	405568 <wcrtomb@plt+0x748>
  40ca54:	mov	x21, x0
  40ca58:	add	x0, x19, #0x18
  40ca5c:	mov	x1, x20
  40ca60:	bl	419680 <wcrtomb@plt+0x14860>
  40ca64:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ca68:	ldr	w8, [x8, #816]
  40ca6c:	mov	x0, x20
  40ca70:	cmp	w8, #0x2
  40ca74:	mov	w8, #0x63                  	// #99
  40ca78:	cinc	x22, x8, ne  // ne = any
  40ca7c:	bl	404190 <strlen@plt>
  40ca80:	cmp	x22, x0
  40ca84:	b.cs	40ca90 <wcrtomb@plt+0x7c70>  // b.hs, b.nlast
  40ca88:	mov	x0, x19
  40ca8c:	bl	40cf14 <wcrtomb@plt+0x80f4>
  40ca90:	mov	x0, x19
  40ca94:	str	xzr, [x19, #136]
  40ca98:	bl	40aaa8 <wcrtomb@plt+0x5c88>
  40ca9c:	cbz	x0, 40cb18 <wcrtomb@plt+0x7cf8>
  40caa0:	mov	x22, x0
  40caa4:	add	x0, x0, #0x9d
  40caa8:	mov	w2, #0x64                  	// #100
  40caac:	mov	x1, x20
  40cab0:	bl	40c3e0 <wcrtomb@plt+0x75c0>
  40cab4:	mov	w8, #0x31                  	// #49
  40cab8:	mov	x0, x19
  40cabc:	mov	x1, x22
  40cac0:	mov	x2, x21
  40cac4:	strb	w8, [x22, #156]
  40cac8:	bl	40b224 <wcrtomb@plt+0x6404>
  40cacc:	ldrb	w8, [x23, #744]
  40cad0:	cbz	w8, 40cae4 <wcrtomb@plt+0x7cc4>
  40cad4:	ldr	x0, [x19]
  40cad8:	mov	w1, wzr
  40cadc:	bl	425a78 <wcrtomb@plt+0x20c58>
  40cae0:	mov	w8, wzr
  40cae4:	mov	w9, #0x1                   	// #1
  40cae8:	cbnz	w8, 40caf8 <wcrtomb@plt+0x7cd8>
  40caec:	b	40cafc <wcrtomb@plt+0x7cdc>
  40caf0:	mov	w8, #0x1                   	// #1
  40caf4:	cbz	w8, 40cafc <wcrtomb@plt+0x7cdc>
  40caf8:	mov	w9, wzr
  40cafc:	ldp	x20, x19, [sp, #80]
  40cb00:	ldp	x22, x21, [sp, #64]
  40cb04:	ldr	x23, [sp, #48]
  40cb08:	ldp	x29, x30, [sp, #32]
  40cb0c:	and	w0, w9, #0x1
  40cb10:	add	sp, sp, #0x60
  40cb14:	ret
  40cb18:	mov	w9, wzr
  40cb1c:	mov	w8, wzr
  40cb20:	cbnz	w8, 40caf8 <wcrtomb@plt+0x7cd8>
  40cb24:	b	40cafc <wcrtomb@plt+0x7cdc>
  40cb28:	stp	x29, x30, [sp, #-48]!
  40cb2c:	stp	x20, x19, [sp, #32]
  40cb30:	ldr	x20, [x0]
  40cb34:	mov	x19, x0
  40cb38:	str	x21, [sp, #16]
  40cb3c:	mov	x29, sp
  40cb40:	mov	x0, x20
  40cb44:	bl	404190 <strlen@plt>
  40cb48:	sub	x8, x0, #0x1
  40cb4c:	cmn	x8, #0x1
  40cb50:	b.eq	40cb6c <wcrtomb@plt+0x7d4c>  // b.none
  40cb54:	ldrb	w9, [x20, x8]
  40cb58:	sub	x8, x8, #0x1
  40cb5c:	cmp	w9, #0x2f
  40cb60:	b.eq	40cb4c <wcrtomb@plt+0x7d2c>  // b.none
  40cb64:	add	x21, x8, #0x2
  40cb68:	b	40cb70 <wcrtomb@plt+0x7d50>
  40cb6c:	mov	x21, xzr
  40cb70:	ldrb	w8, [x20, x21]
  40cb74:	cmp	w8, #0x2f
  40cb78:	b.eq	40cb8c <wcrtomb@plt+0x7d6c>  // b.none
  40cb7c:	add	x1, x21, #0x2
  40cb80:	mov	x0, x20
  40cb84:	bl	43d21c <argp_usage@@Base+0xb620>
  40cb88:	str	x0, [x19]
  40cb8c:	ldr	x8, [x19]
  40cb90:	mov	w9, #0x2f                  	// #47
  40cb94:	strb	w9, [x8, x21]
  40cb98:	ldr	x8, [x19]
  40cb9c:	add	x8, x21, x8
  40cba0:	strb	wzr, [x8, #1]
  40cba4:	ldp	x20, x19, [sp, #32]
  40cba8:	ldr	x21, [sp, #16]
  40cbac:	ldp	x29, x30, [sp], #48
  40cbb0:	ret
  40cbb4:	stp	x29, x30, [sp, #-32]!
  40cbb8:	stp	x20, x19, [sp, #16]
  40cbbc:	mov	x29, sp
  40cbc0:	mov	x19, x0
  40cbc4:	bl	40b328 <wcrtomb@plt+0x6508>
  40cbc8:	cbz	x0, 40cbf4 <wcrtomb@plt+0x7dd4>
  40cbcc:	mov	x20, x0
  40cbd0:	mov	x0, x19
  40cbd4:	mov	x1, x20
  40cbd8:	bl	40d06c <wcrtomb@plt+0x824c>
  40cbdc:	mov	x0, x19
  40cbe0:	bl	40b818 <wcrtomb@plt+0x69f8>
  40cbe4:	mov	x0, x20
  40cbe8:	bl	4049d0 <free@plt>
  40cbec:	mov	w0, #0x1                   	// #1
  40cbf0:	b	40cc00 <wcrtomb@plt+0x7de0>
  40cbf4:	ldr	x0, [x19]
  40cbf8:	bl	41acfc <wcrtomb@plt+0x15edc>
  40cbfc:	mov	w0, wzr
  40cc00:	ldp	x20, x19, [sp, #16]
  40cc04:	ldp	x29, x30, [sp], #32
  40cc08:	ret
  40cc0c:	sub	sp, sp, #0x80
  40cc10:	stp	x29, x30, [sp, #32]
  40cc14:	stp	x28, x27, [sp, #48]
  40cc18:	stp	x26, x25, [sp, #64]
  40cc1c:	stp	x24, x23, [sp, #80]
  40cc20:	stp	x22, x21, [sp, #96]
  40cc24:	stp	x20, x19, [sp, #112]
  40cc28:	ldr	x20, [x1, #136]
  40cc2c:	add	x29, sp, #0x20
  40cc30:	mov	x19, x1
  40cc34:	mov	w21, w0
  40cc38:	bl	405568 <wcrtomb@plt+0x748>
  40cc3c:	mov	x22, x0
  40cc40:	mov	x0, x19
  40cc44:	bl	40aaa8 <wcrtomb@plt+0x5c88>
  40cc48:	cbz	x0, 40cdcc <wcrtomb@plt+0x7fac>
  40cc4c:	mov	x1, x0
  40cc50:	mov	x0, x19
  40cc54:	mov	x2, x22
  40cc58:	bl	40b224 <wcrtomb@plt+0x6404>
  40cc5c:	ldr	x1, [x19, #136]
  40cc60:	ldr	x0, [x19, #8]
  40cc64:	mov	x2, x1
  40cc68:	bl	404f3c <wcrtomb@plt+0x11c>
  40cc6c:	adrp	x23, 451000 <_obstack_memory_used@@Base+0x12da0>
  40cc70:	mov	w27, #0x200                 	// #512
  40cc74:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40cc78:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  40cc7c:	add	x23, x23, #0x39
  40cc80:	b	40cca8 <wcrtomb@plt+0x7e88>
  40cc84:	ldr	x8, [x19, #136]
  40cc88:	ldr	x0, [x19]
  40cc8c:	mov	x2, x24
  40cc90:	sub	x1, x8, x20
  40cc94:	bl	41ac8c <wcrtomb@plt+0x15e6c>
  40cc98:	mov	x0, x20
  40cc9c:	bl	40b2ac <wcrtomb@plt+0x648c>
  40cca0:	mov	w8, wzr
  40cca4:	tbz	w8, #0, 40cddc <wcrtomb@plt+0x7fbc>
  40cca8:	cmp	x20, #0x1
  40ccac:	b.lt	40cdd4 <wcrtomb@plt+0x7fb4>  // b.tstop
  40ccb0:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40ccb4:	mov	x25, x0
  40ccb8:	bl	405788 <wcrtomb@plt+0x968>
  40ccbc:	mov	x24, x0
  40ccc0:	cmp	x20, x0
  40ccc4:	b.cs	40cce8 <wcrtomb@plt+0x7ec8>  // b.hs, b.nlast
  40ccc8:	ands	x8, x20, #0x1ff
  40cccc:	mov	x24, x20
  40ccd0:	b.eq	40cce8 <wcrtomb@plt+0x7ec8>  // b.none
  40ccd4:	add	x0, x25, x20
  40ccd8:	sub	x2, x27, x8
  40ccdc:	mov	w1, wzr
  40cce0:	bl	404600 <memset@plt>
  40cce4:	mov	x24, x20
  40cce8:	cmp	w21, #0x1
  40ccec:	mov	x26, x24
  40ccf0:	b.lt	40cd08 <wcrtomb@plt+0x7ee8>  // b.tstop
  40ccf4:	mov	w0, w21
  40ccf8:	mov	x1, x25
  40ccfc:	mov	x2, x24
  40cd00:	bl	41a68c <wcrtomb@plt+0x1586c>
  40cd04:	mov	x26, x0
  40cd08:	cmn	x26, #0x1
  40cd0c:	b.eq	40cc84 <wcrtomb@plt+0x7e64>  // b.none
  40cd10:	sub	x8, x24, #0x1
  40cd14:	and	x8, x8, #0xfffffffffffffe00
  40cd18:	add	x0, x25, x8
  40cd1c:	sub	x20, x20, x26
  40cd20:	bl	405744 <wcrtomb@plt+0x924>
  40cd24:	subs	x24, x24, x26
  40cd28:	b.ne	40cd38 <wcrtomb@plt+0x7f18>  // b.any
  40cd2c:	mov	w8, #0x1                   	// #1
  40cd30:	tbnz	w8, #0, 40cca8 <wcrtomb@plt+0x7e88>
  40cd34:	b	40cddc <wcrtomb@plt+0x7fbc>
  40cd38:	add	x0, x25, x26
  40cd3c:	mov	w1, wzr
  40cd40:	mov	x2, x24
  40cd44:	bl	404600 <memset@plt>
  40cd48:	ldrb	w8, [x28, #448]
  40cd4c:	tbz	w8, #7, 40cdb4 <wcrtomb@plt+0x7f94>
  40cd50:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40cd54:	ldr	x8, [x8, #1008]
  40cd58:	cbz	x8, 40cd60 <wcrtomb@plt+0x7f40>
  40cd5c:	blr	x8
  40cd60:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40cd64:	mov	w4, #0x5                   	// #5
  40cd68:	mov	x0, xzr
  40cd6c:	add	x1, x1, #0xa
  40cd70:	mov	x2, x23
  40cd74:	mov	x3, x20
  40cd78:	bl	404af0 <dcngettext@plt>
  40cd7c:	ldr	x8, [x19]
  40cd80:	mov	x25, x0
  40cd84:	mov	x0, x8
  40cd88:	bl	43beac <argp_usage@@Base+0xa2b0>
  40cd8c:	mov	x26, x0
  40cd90:	add	x1, sp, #0x8
  40cd94:	mov	x0, x20
  40cd98:	bl	43650c <argp_usage@@Base+0x4910>
  40cd9c:	mov	x4, x0
  40cda0:	mov	w0, wzr
  40cda4:	mov	w1, wzr
  40cda8:	mov	x2, x25
  40cdac:	mov	x3, x26
  40cdb0:	bl	4041f0 <error@plt>
  40cdb4:	ldrb	w8, [x22, #953]
  40cdb8:	cbnz	w8, 40cdc4 <wcrtomb@plt+0x7fa4>
  40cdbc:	mov	w0, #0x1                   	// #1
  40cdc0:	bl	422410 <wcrtomb@plt+0x1d5f0>
  40cdc4:	sub	x0, x20, x24
  40cdc8:	b	40cc9c <wcrtomb@plt+0x7e7c>
  40cdcc:	mov	w0, #0x2                   	// #2
  40cdd0:	b	40cde0 <wcrtomb@plt+0x7fc0>
  40cdd4:	mov	w0, wzr
  40cdd8:	b	40cde0 <wcrtomb@plt+0x7fc0>
  40cddc:	mov	w0, #0x1                   	// #1
  40cde0:	ldp	x20, x19, [sp, #112]
  40cde4:	ldp	x22, x21, [sp, #96]
  40cde8:	ldp	x24, x23, [sp, #80]
  40cdec:	ldp	x26, x25, [sp, #64]
  40cdf0:	ldp	x28, x27, [sp, #48]
  40cdf4:	ldp	x29, x30, [sp, #32]
  40cdf8:	add	sp, sp, #0x80
  40cdfc:	ret
  40ce00:	sub	sp, sp, #0x30
  40ce04:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ce08:	ldrb	w8, [x8, #84]
  40ce0c:	stp	x29, x30, [sp, #16]
  40ce10:	stp	x20, x19, [sp, #32]
  40ce14:	add	x29, sp, #0x10
  40ce18:	cbnz	w8, 40cefc <wcrtomb@plt+0x80dc>
  40ce1c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40ce20:	ldr	w8, [x8, #1976]
  40ce24:	ldr	w9, [x0, #108]
  40ce28:	mov	x20, x0
  40ce2c:	cmp	w8, w9
  40ce30:	b.cs	40cefc <wcrtomb@plt+0x80dc>  // b.hs, b.nlast
  40ce34:	str	xzr, [sp, #8]
  40ce38:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ce3c:	ldr	x0, [x20]
  40ce40:	ldrb	w2, [x8, #952]
  40ce44:	mov	w1, #0x1                   	// #1
  40ce48:	bl	428898 <wcrtomb@plt+0x23a78>
  40ce4c:	mov	x1, x0
  40ce50:	add	x0, sp, #0x8
  40ce54:	bl	419680 <wcrtomb@plt+0x14860>
  40ce58:	add	x0, sp, #0x8
  40ce5c:	mov	w1, #0x2                   	// #2
  40ce60:	bl	42509c <wcrtomb@plt+0x2027c>
  40ce64:	ldr	x0, [sp, #8]
  40ce68:	bl	404190 <strlen@plt>
  40ce6c:	add	x0, x0, #0x15
  40ce70:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  40ce74:	ldr	x8, [x20, #96]
  40ce78:	ldr	x1, [sp, #8]
  40ce7c:	mov	x19, x0
  40ce80:	str	x8, [x0, #8]
  40ce84:	ldr	x8, [x20, #88]
  40ce88:	str	x8, [x0]
  40ce8c:	ldr	w8, [x20, #108]
  40ce90:	str	w8, [x0, #16]
  40ce94:	add	x0, x0, #0x14
  40ce98:	bl	404b20 <strcpy@plt>
  40ce9c:	ldr	x0, [sp, #8]
  40cea0:	bl	4049d0 <free@plt>
  40cea4:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40cea8:	ldr	x8, [x20, #1984]
  40ceac:	cbnz	x8, 40ced8 <wcrtomb@plt+0x80b8>
  40ceb0:	adrp	x2, 40d000 <wcrtomb@plt+0x81e0>
  40ceb4:	adrp	x3, 40d000 <wcrtomb@plt+0x81e0>
  40ceb8:	add	x2, x2, #0x414
  40cebc:	add	x3, x3, #0x428
  40cec0:	mov	x0, xzr
  40cec4:	mov	x1, xzr
  40cec8:	mov	x4, xzr
  40cecc:	bl	435130 <argp_usage@@Base+0x3534>
  40ced0:	str	x0, [x20, #1984]
  40ced4:	cbz	x0, 40cf0c <wcrtomb@plt+0x80ec>
  40ced8:	ldr	x0, [x20, #1984]
  40cedc:	mov	x1, x19
  40cee0:	bl	43599c <argp_usage@@Base+0x3da0>
  40cee4:	cbz	x0, 40cf0c <wcrtomb@plt+0x80ec>
  40cee8:	cmp	x0, x19
  40ceec:	b.ne	40cf10 <wcrtomb@plt+0x80f0>  // b.any
  40cef0:	ldr	w8, [x19, #16]
  40cef4:	sub	w8, w8, #0x1
  40cef8:	str	w8, [x19, #16]
  40cefc:	ldp	x20, x19, [sp, #32]
  40cf00:	ldp	x29, x30, [sp, #16]
  40cf04:	add	sp, sp, #0x30
  40cf08:	ret
  40cf0c:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  40cf10:	bl	404870 <abort@plt>
  40cf14:	stp	x29, x30, [sp, #-32]!
  40cf18:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40cf1c:	ldr	w8, [x8, #816]
  40cf20:	str	x19, [sp, #16]
  40cf24:	mov	x29, sp
  40cf28:	cmp	w8, #0x6
  40cf2c:	b.hi	40cfe8 <wcrtomb@plt+0x81c8>  // b.pmore
  40cf30:	mov	w9, #0x1                   	// #1
  40cf34:	lsl	w9, w9, w8
  40cf38:	mov	w10, #0x2a                  	// #42
  40cf3c:	mov	x19, x0
  40cf40:	tst	w9, w10
  40cf44:	b.eq	40cfa0 <wcrtomb@plt+0x8180>  // b.none
  40cf48:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40cf4c:	ldr	x8, [x8, #1008]
  40cf50:	cbz	x8, 40cf58 <wcrtomb@plt+0x8138>
  40cf54:	blr	x8
  40cf58:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40cf5c:	add	x1, x1, #0x72
  40cf60:	mov	w2, #0x5                   	// #5
  40cf64:	mov	x0, xzr
  40cf68:	bl	404bf0 <dcgettext@plt>
  40cf6c:	ldr	x8, [x19, #24]
  40cf70:	mov	x19, x0
  40cf74:	mov	x0, x8
  40cf78:	bl	43beac <argp_usage@@Base+0xa2b0>
  40cf7c:	mov	x3, x0
  40cf80:	mov	w0, wzr
  40cf84:	mov	w1, wzr
  40cf88:	mov	x2, x19
  40cf8c:	bl	4041f0 <error@plt>
  40cf90:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40cf94:	mov	w9, #0x2                   	// #2
  40cf98:	str	w9, [x8, #3456]
  40cf9c:	b	40cfdc <wcrtomb@plt+0x81bc>
  40cfa0:	mov	w10, #0x44                  	// #68
  40cfa4:	tst	w9, w10
  40cfa8:	b.eq	40cfc0 <wcrtomb@plt+0x81a0>  // b.none
  40cfac:	ldr	x1, [x19, #24]
  40cfb0:	mov	w2, #0x4b                  	// #75
  40cfb4:	mov	x0, x19
  40cfb8:	bl	40c784 <wcrtomb@plt+0x7964>
  40cfbc:	b	40cfdc <wcrtomb@plt+0x81bc>
  40cfc0:	cmp	w8, #0x4
  40cfc4:	b.ne	40cfe8 <wcrtomb@plt+0x81c8>  // b.any
  40cfc8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  40cfcc:	add	x0, x0, #0x69
  40cfd0:	mov	x1, x19
  40cfd4:	mov	x2, xzr
  40cfd8:	bl	41213c <wcrtomb@plt+0xd31c>
  40cfdc:	ldr	x19, [sp, #16]
  40cfe0:	ldp	x29, x30, [sp], #32
  40cfe4:	ret
  40cfe8:	bl	404870 <abort@plt>
  40cfec:	stp	x29, x30, [sp, #-32]!
  40cff0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40cff4:	ldrb	w8, [x8, #448]
  40cff8:	stp	x20, x19, [sp, #16]
  40cffc:	mov	x29, sp
  40d000:	tbz	w8, #5, 40d04c <wcrtomb@plt+0x822c>
  40d004:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d008:	ldr	x8, [x8, #1008]
  40d00c:	mov	x19, x0
  40d010:	cbz	x8, 40d018 <wcrtomb@plt+0x81f8>
  40d014:	blr	x8
  40d018:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40d01c:	add	x1, x1, #0x98
  40d020:	mov	w2, #0x5                   	// #5
  40d024:	mov	x0, xzr
  40d028:	bl	404bf0 <dcgettext@plt>
  40d02c:	mov	x20, x0
  40d030:	mov	x0, x19
  40d034:	bl	43beac <argp_usage@@Base+0xa2b0>
  40d038:	mov	x3, x0
  40d03c:	mov	w0, wzr
  40d040:	mov	w1, wzr
  40d044:	mov	x2, x20
  40d048:	bl	4041f0 <error@plt>
  40d04c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d050:	ldrb	w8, [x8, #953]
  40d054:	cbnz	w8, 40d060 <wcrtomb@plt+0x8240>
  40d058:	mov	w0, #0x2                   	// #2
  40d05c:	bl	422410 <wcrtomb@plt+0x1d5f0>
  40d060:	ldp	x20, x19, [sp, #16]
  40d064:	ldp	x29, x30, [sp], #32
  40d068:	ret
  40d06c:	stp	x29, x30, [sp, #-80]!
  40d070:	stp	x24, x23, [sp, #32]
  40d074:	stp	x22, x21, [sp, #48]
  40d078:	stp	x20, x19, [sp, #64]
  40d07c:	ldr	x23, [x0, #392]
  40d080:	str	x25, [sp, #16]
  40d084:	mov	x29, sp
  40d088:	mov	x19, x0
  40d08c:	mov	x20, x1
  40d090:	bl	405568 <wcrtomb@plt+0x748>
  40d094:	mov	x21, x0
  40d098:	mov	x0, x19
  40d09c:	str	xzr, [x19, #136]
  40d0a0:	bl	40aaa8 <wcrtomb@plt+0x5c88>
  40d0a4:	cbz	x0, 40d3fc <wcrtomb@plt+0x85dc>
  40d0a8:	mov	x22, x0
  40d0ac:	mov	x0, x19
  40d0b0:	bl	40de88 <wcrtomb@plt+0x9068>
  40d0b4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d0b8:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40d0bc:	ldr	w8, [x8, #816]
  40d0c0:	ldrb	w9, [x9, #33]
  40d0c4:	mov	w10, #0x35                  	// #53
  40d0c8:	mov	w11, #0x44                  	// #68
  40d0cc:	cmp	w8, #0x4
  40d0d0:	ccmp	w9, #0x0, #0x4, ne  // ne = any
  40d0d4:	csel	w10, w11, w10, ne  // ne = any
  40d0d8:	strb	w10, [x22, #156]
  40d0dc:	cbz	w9, 40d124 <wcrtomb@plt+0x8304>
  40d0e0:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  40d0e4:	ldr	x9, [x24, #16]
  40d0e8:	ldr	x0, [x9, #56]
  40d0ec:	cbz	x0, 40d134 <wcrtomb@plt+0x8314>
  40d0f0:	cmp	w8, #0x4
  40d0f4:	b.ne	40d218 <wcrtomb@plt+0x83f8>  // b.any
  40d0f8:	bl	4147b0 <wcrtomb@plt+0xf990>
  40d0fc:	mov	x2, x0
  40d100:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  40d104:	add	x0, x0, #0xfb8
  40d108:	mov	x1, x19
  40d10c:	bl	41213c <wcrtomb@plt+0xd31c>
  40d110:	mov	x0, x19
  40d114:	mov	x1, x22
  40d118:	mov	x2, x21
  40d11c:	bl	40b224 <wcrtomb@plt+0x6404>
  40d120:	b	40d3fc <wcrtomb@plt+0x85dc>
  40d124:	mov	x0, x19
  40d128:	mov	x1, x22
  40d12c:	mov	x2, x21
  40d130:	bl	40b224 <wcrtomb@plt+0x6404>
  40d134:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d138:	ldr	w8, [x8, #676]
  40d13c:	cbz	w8, 40d3fc <wcrtomb@plt+0x85dc>
  40d140:	cbz	x23, 40d164 <wcrtomb@plt+0x8344>
  40d144:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d148:	ldrb	w8, [x8, #85]
  40d14c:	cbz	w8, 40d164 <wcrtomb@plt+0x8344>
  40d150:	ldr	x8, [x19, #392]
  40d154:	ldr	x9, [x19, #88]
  40d158:	ldr	x8, [x8, #88]
  40d15c:	cmp	x8, x9
  40d160:	b.ne	40d2e4 <wcrtomb@plt+0x84c4>  // b.any
  40d164:	add	x1, x29, #0x18
  40d168:	mov	x0, x19
  40d16c:	bl	40a31c <wcrtomb@plt+0x54fc>
  40d170:	cmp	w0, #0x2
  40d174:	b.eq	40d348 <wcrtomb@plt+0x8528>  // b.none
  40d178:	cmp	w0, #0x1
  40d17c:	b.eq	40d378 <wcrtomb@plt+0x8558>  // b.none
  40d180:	cbnz	w0, 40d3fc <wcrtomb@plt+0x85dc>
  40d184:	ldr	x0, [x19]
  40d188:	bl	43d39c <argp_usage@@Base+0xb7a0>
  40d18c:	mov	x21, x0
  40d190:	bl	404190 <strlen@plt>
  40d194:	mov	x22, x0
  40d198:	mov	x0, x20
  40d19c:	bl	404190 <strlen@plt>
  40d1a0:	cbz	x0, 40d3f4 <wcrtomb@plt+0x85d4>
  40d1a4:	mov	x23, x0
  40d1a8:	mov	x24, x22
  40d1ac:	b	40d1c8 <wcrtomb@plt+0x83a8>
  40d1b0:	add	x8, x23, x20
  40d1b4:	add	x20, x8, #0x1
  40d1b8:	mov	x0, x20
  40d1bc:	bl	404190 <strlen@plt>
  40d1c0:	mov	x23, x0
  40d1c4:	cbz	x0, 40d3f4 <wcrtomb@plt+0x85d4>
  40d1c8:	add	x25, x23, x22
  40d1cc:	cmp	x24, x25
  40d1d0:	b.cs	40d1e8 <wcrtomb@plt+0x83c8>  // b.hs, b.nlast
  40d1d4:	add	x1, x25, #0x1
  40d1d8:	mov	x0, x21
  40d1dc:	bl	43d21c <argp_usage@@Base+0xb620>
  40d1e0:	mov	x21, x0
  40d1e4:	mov	x24, x25
  40d1e8:	add	x0, x21, x22
  40d1ec:	mov	x1, x20
  40d1f0:	bl	404b20 <strcpy@plt>
  40d1f4:	mov	x0, x21
  40d1f8:	mov	x1, x19
  40d1fc:	bl	40e11c <wcrtomb@plt+0x92fc>
  40d200:	tbnz	w0, #0, 40d1b0 <wcrtomb@plt+0x8390>
  40d204:	mov	x0, x19
  40d208:	mov	x1, x20
  40d20c:	mov	x2, x21
  40d210:	bl	40b6fc <wcrtomb@plt+0x68dc>
  40d214:	b	40d1b0 <wcrtomb@plt+0x8390>
  40d218:	bl	405568 <wcrtomb@plt+0x748>
  40d21c:	ldr	x8, [x24, #16]
  40d220:	mov	x23, x0
  40d224:	ldr	x8, [x8, #56]
  40d228:	mov	x0, x8
  40d22c:	bl	4147b0 <wcrtomb@plt+0xf990>
  40d230:	mov	x20, x0
  40d234:	bl	413a50 <wcrtomb@plt+0xec30>
  40d238:	add	x1, x22, #0x7c
  40d23c:	mov	w2, #0xc                   	// #12
  40d240:	mov	x21, x0
  40d244:	bl	40a560 <wcrtomb@plt+0x5740>
  40d248:	mov	x0, x19
  40d24c:	mov	x1, x22
  40d250:	mov	x2, x23
  40d254:	bl	40b224 <wcrtomb@plt+0x6404>
  40d258:	ldr	x0, [x19, #8]
  40d25c:	mov	x1, x21
  40d260:	mov	x2, x21
  40d264:	bl	404f3c <wcrtomb@plt+0x11c>
  40d268:	cmp	x21, #0x1
  40d26c:	b.lt	40d3fc <wcrtomb@plt+0x85dc>  // b.tstop
  40d270:	mov	w23, #0x200                 	// #512
  40d274:	b	40d2a8 <wcrtomb@plt+0x8488>
  40d278:	mov	x0, x19
  40d27c:	mov	x1, x20
  40d280:	mov	x2, x22
  40d284:	bl	404110 <memcpy@plt>
  40d288:	sub	x8, x22, #0x1
  40d28c:	and	x8, x8, #0xfffffffffffffe00
  40d290:	add	x0, x19, x8
  40d294:	sub	x21, x21, x22
  40d298:	add	x20, x20, x22
  40d29c:	bl	405744 <wcrtomb@plt+0x924>
  40d2a0:	cmp	x21, #0x0
  40d2a4:	b.le	40d3fc <wcrtomb@plt+0x85dc>
  40d2a8:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40d2ac:	mov	x19, x0
  40d2b0:	bl	405788 <wcrtomb@plt+0x968>
  40d2b4:	mov	x22, x0
  40d2b8:	cmp	x21, x0
  40d2bc:	b.cs	40d278 <wcrtomb@plt+0x8458>  // b.hs, b.nlast
  40d2c0:	ands	x8, x21, #0x1ff
  40d2c4:	mov	x22, x21
  40d2c8:	b.eq	40d278 <wcrtomb@plt+0x8458>  // b.none
  40d2cc:	add	x0, x19, x21
  40d2d0:	sub	x2, x23, x8
  40d2d4:	mov	w1, wzr
  40d2d8:	bl	404600 <memset@plt>
  40d2dc:	mov	x22, x21
  40d2e0:	b	40d278 <wcrtomb@plt+0x8458>
  40d2e4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d2e8:	ldr	w8, [x8, #644]
  40d2ec:	cbz	w8, 40d3fc <wcrtomb@plt+0x85dc>
  40d2f0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d2f4:	ldrb	w8, [x8, #450]
  40d2f8:	tbz	w8, #2, 40d3fc <wcrtomb@plt+0x85dc>
  40d2fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d300:	ldr	x8, [x8, #1008]
  40d304:	cbz	x8, 40d30c <wcrtomb@plt+0x84ec>
  40d308:	blr	x8
  40d30c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40d310:	add	x1, x1, #0xfc4
  40d314:	mov	w2, #0x5                   	// #5
  40d318:	mov	x0, xzr
  40d31c:	bl	404bf0 <dcgettext@plt>
  40d320:	ldr	x8, [x19]
  40d324:	mov	x19, x0
  40d328:	mov	x0, x8
  40d32c:	bl	43beac <argp_usage@@Base+0xa2b0>
  40d330:	mov	x3, x0
  40d334:	mov	w0, wzr
  40d338:	mov	w1, wzr
  40d33c:	mov	x2, x19
  40d340:	bl	4041f0 <error@plt>
  40d344:	b	40d3fc <wcrtomb@plt+0x85dc>
  40d348:	ldr	x19, [x19]
  40d34c:	ldr	x20, [x29, #24]
  40d350:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40d354:	add	x1, x1, #0xff6
  40d358:	mov	w2, #0x5                   	// #5
  40d35c:	mov	x0, xzr
  40d360:	bl	404bf0 <dcgettext@plt>
  40d364:	mov	x2, x0
  40d368:	mov	x0, x19
  40d36c:	mov	x1, x20
  40d370:	bl	40a27c <wcrtomb@plt+0x545c>
  40d374:	b	40d3fc <wcrtomb@plt+0x85dc>
  40d378:	ldr	x20, [x19]
  40d37c:	ldr	x21, [x29, #24]
  40d380:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40d384:	add	x1, x1, #0xff6
  40d388:	mov	w2, #0x5                   	// #5
  40d38c:	mov	x0, xzr
  40d390:	bl	404bf0 <dcgettext@plt>
  40d394:	mov	x2, x0
  40d398:	mov	x0, x20
  40d39c:	mov	x1, x21
  40d3a0:	bl	40a27c <wcrtomb@plt+0x545c>
  40d3a4:	ldr	x0, [x19]
  40d3a8:	bl	404190 <strlen@plt>
  40d3ac:	ldr	x8, [x29, #24]
  40d3b0:	mov	x20, x0
  40d3b4:	mov	x0, x8
  40d3b8:	bl	404190 <strlen@plt>
  40d3bc:	add	x8, x20, x0
  40d3c0:	add	x0, x8, #0x1
  40d3c4:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  40d3c8:	ldr	x1, [x19]
  40d3cc:	mov	x20, x0
  40d3d0:	bl	404b20 <strcpy@plt>
  40d3d4:	ldr	x1, [x29, #24]
  40d3d8:	bl	4045e0 <strcat@plt>
  40d3dc:	ldr	x1, [x29, #24]
  40d3e0:	mov	x0, x19
  40d3e4:	mov	x2, x20
  40d3e8:	bl	40b6fc <wcrtomb@plt+0x68dc>
  40d3ec:	mov	x0, x20
  40d3f0:	b	40d3f8 <wcrtomb@plt+0x85d8>
  40d3f4:	mov	x0, x21
  40d3f8:	bl	4049d0 <free@plt>
  40d3fc:	ldp	x20, x19, [sp, #64]
  40d400:	ldp	x22, x21, [sp, #48]
  40d404:	ldp	x24, x23, [sp, #32]
  40d408:	ldr	x25, [sp, #16]
  40d40c:	ldp	x29, x30, [sp], #80
  40d410:	ret
  40d414:	ldp	x8, x9, [x0]
  40d418:	eor	x8, x9, x8
  40d41c:	udiv	x9, x8, x1
  40d420:	msub	x0, x9, x1, x8
  40d424:	ret
  40d428:	ldp	x8, x11, [x1]
  40d42c:	ldp	x9, x10, [x0]
  40d430:	cmp	x9, x8
  40d434:	cset	w8, eq  // eq = none
  40d438:	cmp	x10, x11
  40d43c:	cset	w9, eq  // eq = none
  40d440:	and	w0, w8, w9
  40d444:	ret
  40d448:	stp	x29, x30, [sp, #-96]!
  40d44c:	stp	x28, x27, [sp, #16]
  40d450:	stp	x26, x25, [sp, #32]
  40d454:	stp	x24, x23, [sp, #48]
  40d458:	stp	x22, x21, [sp, #64]
  40d45c:	stp	x20, x19, [sp, #80]
  40d460:	mov	x29, sp
  40d464:	bl	41b4a4 <wcrtomb@plt+0x16684>
  40d468:	mov	w0, #0x2                   	// #2
  40d46c:	mov	w23, #0x2                   	// #2
  40d470:	bl	405f4c <wcrtomb@plt+0x112c>
  40d474:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d478:	ldr	x8, [x8, #688]
  40d47c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  40d480:	add	x1, x1, #0xabd
  40d484:	ldr	x0, [x8]
  40d488:	bl	404920 <strcmp@plt>
  40d48c:	cmp	w0, #0x0
  40d490:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d494:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  40d498:	adrp	x25, 451000 <_obstack_memory_used@@Base+0x12da0>
  40d49c:	adrp	x22, 451000 <_obstack_memory_used@@Base+0x12da0>
  40d4a0:	adrp	x26, 450000 <_obstack_memory_used@@Base+0x11da0>
  40d4a4:	mov	w20, wzr
  40d4a8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d4ac:	add	x19, x19, #0xfe8
  40d4b0:	add	x21, x21, #0x60
  40d4b4:	add	x25, x25, #0xbc
  40d4b8:	add	x22, x22, #0xc8
  40d4bc:	cset	w8, eq  // eq = none
  40d4c0:	add	x26, x26, #0x447
  40d4c4:	strb	w8, [x9, #2024]
  40d4c8:	b	40d4ec <wcrtomb@plt+0x86cc>
  40d4cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d4d0:	ldrb	w8, [x8, #77]
  40d4d4:	cbz	w8, 40d558 <wcrtomb@plt+0x8738>
  40d4d8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d4dc:	ldr	x0, [x8, #4072]
  40d4e0:	bl	405744 <wcrtomb@plt+0x924>
  40d4e4:	mov	w28, wzr
  40d4e8:	cbnz	w28, 40d614 <wcrtomb@plt+0x87f4>
  40d4ec:	mov	w2, #0x1                   	// #1
  40d4f0:	mov	x0, x19
  40d4f4:	mov	x1, x21
  40d4f8:	mov	w24, w20
  40d4fc:	bl	4172f0 <wcrtomb@plt+0x124d0>
  40d500:	mov	w20, w0
  40d504:	cmp	w0, #0x5
  40d508:	b.hi	40d4e4 <wcrtomb@plt+0x86c4>  // b.pmore
  40d50c:	mov	w8, w20
  40d510:	adr	x9, 40d4cc <wcrtomb@plt+0x86ac>
  40d514:	ldrh	w10, [x25, x8, lsl #1]
  40d518:	add	x9, x9, x10, lsl #2
  40d51c:	br	x9
  40d520:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d524:	ldr	x0, [x8, #104]
  40d528:	bl	41c4ac <wcrtomb@plt+0x1768c>
  40d52c:	cbz	x0, 40d598 <wcrtomb@plt+0x8778>
  40d530:	ldr	x8, [x0, #48]
  40d534:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40d538:	add	x8, x8, #0x1
  40d53c:	str	x8, [x0, #48]
  40d540:	ldr	x9, [x9, #760]
  40d544:	cbz	x9, 40d590 <wcrtomb@plt+0x8770>
  40d548:	cmp	x8, x9
  40d54c:	mov	w28, w20
  40d550:	b.eq	40d4e8 <wcrtomb@plt+0x86c8>  // b.none
  40d554:	b	40d598 <wcrtomb@plt+0x8778>
  40d558:	mov	w28, #0x4                   	// #4
  40d55c:	b	40d4e8 <wcrtomb@plt+0x86c8>
  40d560:	mov	w28, w20
  40d564:	b	40d4e8 <wcrtomb@plt+0x86c8>
  40d568:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d56c:	ldr	x0, [x8, #4072]
  40d570:	bl	405744 <wcrtomb@plt+0x924>
  40d574:	sub	w8, w24, #0x1
  40d578:	cmp	w8, #0x3
  40d57c:	b.cc	40d5d4 <wcrtomb@plt+0x87b4>  // b.lo, b.ul, b.last
  40d580:	cbz	w24, 40d5a4 <wcrtomb@plt+0x8784>
  40d584:	cmp	w24, #0x4
  40d588:	b.ne	40d4e4 <wcrtomb@plt+0x86c4>  // b.any
  40d58c:	b	40d9f4 <wcrtomb@plt+0x8bd4>
  40d590:	mov	w28, w20
  40d594:	cbnz	x8, 40d4e8 <wcrtomb@plt+0x86c8>
  40d598:	bl	417ab0 <wcrtomb@plt+0x12c90>
  40d59c:	mov	w28, wzr
  40d5a0:	b	40d4e8 <wcrtomb@plt+0x86c8>
  40d5a4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d5a8:	ldr	x8, [x8, #1008]
  40d5ac:	cbz	x8, 40d5b4 <wcrtomb@plt+0x8794>
  40d5b0:	blr	x8
  40d5b4:	mov	w2, #0x5                   	// #5
  40d5b8:	mov	x0, xzr
  40d5bc:	mov	x1, x26
  40d5c0:	bl	404bf0 <dcgettext@plt>
  40d5c4:	mov	x2, x0
  40d5c8:	mov	w0, wzr
  40d5cc:	mov	w1, wzr
  40d5d0:	bl	4041f0 <error@plt>
  40d5d4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d5d8:	ldr	x8, [x8, #1008]
  40d5dc:	cbz	x8, 40d5e4 <wcrtomb@plt+0x87c4>
  40d5e0:	blr	x8
  40d5e4:	mov	w2, #0x5                   	// #5
  40d5e8:	mov	x0, xzr
  40d5ec:	mov	x1, x22
  40d5f0:	bl	404bf0 <dcgettext@plt>
  40d5f4:	mov	x2, x0
  40d5f8:	mov	w0, wzr
  40d5fc:	mov	w1, wzr
  40d600:	bl	4041f0 <error@plt>
  40d604:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d608:	mov	w28, wzr
  40d60c:	str	w23, [x8, #3456]
  40d610:	b	40d4e8 <wcrtomb@plt+0x86c8>
  40d614:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d618:	ldr	x8, [x8, #3936]
  40d61c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40d620:	ldr	x0, [x9, #920]
  40d624:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d628:	sub	x8, x8, #0x1
  40d62c:	str	x8, [x9, #4032]
  40d630:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  40d634:	sub	w8, w28, #0x1
  40d638:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d63c:	cmp	w8, #0x1
  40d640:	str	x0, [x27, #2032]
  40d644:	b.hi	40d9c8 <wcrtomb@plt+0x8ba8>  // b.pmore
  40d648:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d64c:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d650:	ldr	x8, [x26, #4008]
  40d654:	ldr	x9, [x25, #3984]
  40d658:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d65c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d660:	strb	wzr, [x10, #3992]
  40d664:	sub	x8, x8, x9
  40d668:	lsr	x9, x8, #9
  40d66c:	str	w9, [x23, #2040]
  40d670:	cbz	w9, 40d684 <wcrtomb@plt+0x8864>
  40d674:	ldr	x1, [x25, #3984]
  40d678:	sxtw	x8, w8
  40d67c:	and	x2, x8, #0xfffffffffffffe00
  40d680:	bl	404110 <memcpy@plt>
  40d684:	cmp	w28, #0x1
  40d688:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d68c:	b.ne	40d6f4 <wcrtomb@plt+0x88d4>  // b.any
  40d690:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d694:	ldr	x0, [x8, #4072]
  40d698:	bl	405744 <wcrtomb@plt+0x924>
  40d69c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d6a0:	ldr	x9, [x8, #232]
  40d6a4:	ldr	x10, [x21, #3944]
  40d6a8:	ldr	x8, [x26, #4008]
  40d6ac:	add	x11, x9, #0x1ff
  40d6b0:	add	x9, x9, #0x3fe
  40d6b4:	cmp	x11, #0x0
  40d6b8:	sub	x10, x10, x8
  40d6bc:	csel	x9, x9, x11, lt  // lt = tstop
  40d6c0:	asr	x19, x9, #9
  40d6c4:	asr	x9, x10, #9
  40d6c8:	b	40d6e4 <wcrtomb@plt+0x88c4>
  40d6cc:	sub	x19, x19, x9
  40d6d0:	bl	405648 <wcrtomb@plt+0x828>
  40d6d4:	ldr	x9, [x21, #3944]
  40d6d8:	ldr	x8, [x26, #4008]
  40d6dc:	sub	x9, x9, x8
  40d6e0:	asr	x9, x9, #9
  40d6e4:	cmp	x19, x9
  40d6e8:	b.ge	40d6cc <wcrtomb@plt+0x88ac>  // b.tcont
  40d6ec:	add	x8, x8, x19, lsl #9
  40d6f0:	str	x8, [x26, #4008]
  40d6f4:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  40d6f8:	add	x20, x20, #0x60
  40d6fc:	adrp	x28, 470000 <argp_program_version_hook@@Base+0x258>
  40d700:	b	40d710 <wcrtomb@plt+0x88f0>
  40d704:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d708:	ldr	x0, [x8, #4072]
  40d70c:	bl	405744 <wcrtomb@plt+0x924>
  40d710:	ldr	x8, [x26, #4008]
  40d714:	ldr	x9, [x21, #3944]
  40d718:	cmp	x8, x9
  40d71c:	b.ne	40d724 <wcrtomb@plt+0x8904>  // b.any
  40d720:	bl	405648 <wcrtomb@plt+0x828>
  40d724:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d728:	add	x0, x0, #0xfe8
  40d72c:	mov	x1, x20
  40d730:	mov	w2, wzr
  40d734:	bl	4172f0 <wcrtomb@plt+0x124d0>
  40d738:	mov	w22, w0
  40d73c:	mov	x0, x20
  40d740:	bl	411c30 <wcrtomb@plt+0xce10>
  40d744:	subs	w8, w22, #0x3
  40d748:	b.ne	40d758 <wcrtomb@plt+0x8938>  // b.any
  40d74c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40d750:	ldrb	w9, [x9, #77]
  40d754:	cbnz	w9, 40d704 <wcrtomb@plt+0x88e4>
  40d758:	cmp	w8, #0x1
  40d75c:	b.ls	40d950 <wcrtomb@plt+0x8b30>  // b.plast
  40d760:	cmp	w22, #0x5
  40d764:	b.ne	40d7b8 <wcrtomb@plt+0x8998>  // b.any
  40d768:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d76c:	ldr	x8, [x8, #1008]
  40d770:	cbz	x8, 40d778 <wcrtomb@plt+0x8958>
  40d774:	blr	x8
  40d778:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40d77c:	mov	w2, #0x5                   	// #5
  40d780:	mov	x0, xzr
  40d784:	add	x1, x1, #0xe0
  40d788:	bl	404bf0 <dcgettext@plt>
  40d78c:	mov	x2, x0
  40d790:	mov	w0, wzr
  40d794:	mov	w1, wzr
  40d798:	bl	4041f0 <error@plt>
  40d79c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d7a0:	ldr	x0, [x8, #4072]
  40d7a4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d7a8:	mov	w9, #0x2                   	// #2
  40d7ac:	str	w9, [x8, #3456]
  40d7b0:	bl	405744 <wcrtomb@plt+0x924>
  40d7b4:	b	40d710 <wcrtomb@plt+0x88f0>
  40d7b8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d7bc:	ldr	x0, [x8, #104]
  40d7c0:	bl	41c4ac <wcrtomb@plt+0x1768c>
  40d7c4:	cbz	x0, 40d7f0 <wcrtomb@plt+0x89d0>
  40d7c8:	ldr	x8, [x0, #48]
  40d7cc:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40d7d0:	add	x8, x8, #0x1
  40d7d4:	str	x8, [x0, #48]
  40d7d8:	ldr	x9, [x9, #760]
  40d7dc:	cbz	x9, 40d7ec <wcrtomb@plt+0x89cc>
  40d7e0:	cmp	x8, x9
  40d7e4:	b.ne	40d7f0 <wcrtomb@plt+0x89d0>  // b.any
  40d7e8:	b	40d690 <wcrtomb@plt+0x8870>
  40d7ec:	cbnz	x8, 40d690 <wcrtomb@plt+0x8870>
  40d7f0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d7f4:	ldr	x1, [x8, #448]
  40d7f8:	cbz	x1, 40d80c <wcrtomb@plt+0x89ec>
  40d7fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d800:	ldr	x0, [x8, #456]
  40d804:	bl	40d9f8 <wcrtomb@plt+0x8bd8>
  40d808:	b	40d834 <wcrtomb@plt+0x8a14>
  40d80c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d810:	ldr	x0, [x8, #4056]
  40d814:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d818:	ldr	x1, [x8, #4064]
  40d81c:	bl	40daa4 <wcrtomb@plt+0x8c84>
  40d820:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d824:	ldr	x0, [x8, #4088]
  40d828:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d82c:	ldr	x1, [x8, #4080]
  40d830:	bl	40daa4 <wcrtomb@plt+0x8c84>
  40d834:	ldr	x8, [x27, #2032]
  40d838:	ldrsw	x19, [x23, #2040]
  40d83c:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d840:	ldr	x1, [x22, #4072]
  40d844:	mov	w2, #0x200                 	// #512
  40d848:	add	x0, x8, x19, lsl #9
  40d84c:	bl	404110 <memcpy@plt>
  40d850:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d854:	ldr	x8, [x8, #232]
  40d858:	ldr	x0, [x22, #4072]
  40d85c:	add	w9, w19, #0x1
  40d860:	str	w9, [x23, #2040]
  40d864:	add	x9, x8, #0x1ff
  40d868:	add	x22, x8, #0x3fe
  40d86c:	cmp	x9, #0x0
  40d870:	csel	x19, x22, x9, lt  // lt = tstop
  40d874:	bl	405744 <wcrtomb@plt+0x924>
  40d878:	ldr	w8, [x23, #2040]
  40d87c:	ldr	w9, [x28, #748]
  40d880:	cmp	w8, w9
  40d884:	b.ne	40d890 <wcrtomb@plt+0x8a70>  // b.any
  40d888:	mov	w0, #0x1                   	// #1
  40d88c:	bl	40db2c <wcrtomb@plt+0x8d0c>
  40d890:	cmp	x22, #0x3ff
  40d894:	b.cc	40d710 <wcrtomb@plt+0x88f0>  // b.lo, b.ul, b.last
  40d898:	ldr	x8, [x21, #3944]
  40d89c:	ldr	x9, [x26, #4008]
  40d8a0:	asr	x22, x19, #9
  40d8a4:	sub	x8, x8, x9
  40d8a8:	lsr	x8, x8, #9
  40d8ac:	cmp	x22, w8, sxtw
  40d8b0:	csel	w24, w22, w8, lt  // lt = tstop
  40d8b4:	b	40d8bc <wcrtomb@plt+0x8a9c>
  40d8b8:	cbz	x22, 40d710 <wcrtomb@plt+0x88f0>
  40d8bc:	ldr	x8, [x26, #4008]
  40d8c0:	ldr	x9, [x21, #3944]
  40d8c4:	cmp	x8, x9
  40d8c8:	b.ne	40d8e4 <wcrtomb@plt+0x8ac4>  // b.any
  40d8cc:	bl	405ac8 <wcrtomb@plt+0xca8>
  40d8d0:	ldrsw	x9, [x28, #748]
  40d8d4:	ldr	x8, [x25, #3984]
  40d8d8:	cmp	x22, x9
  40d8dc:	csel	w24, w22, w9, lt  // lt = tstop
  40d8e0:	str	x8, [x26, #4008]
  40d8e4:	ldr	w9, [x28, #748]
  40d8e8:	ldrsw	x8, [x23, #2040]
  40d8ec:	sub	w9, w9, w8
  40d8f0:	cmp	w9, w24
  40d8f4:	csel	w19, w9, w24, lt  // lt = tstop
  40d8f8:	cbz	w19, 40d9f4 <wcrtomb@plt+0x8bd4>
  40d8fc:	ldr	x9, [x27, #2032]
  40d900:	ldr	x1, [x26, #4008]
  40d904:	lsl	w10, w19, #9
  40d908:	sxtw	x2, w10
  40d90c:	add	x0, x9, x8, lsl #9
  40d910:	bl	404110 <memcpy@plt>
  40d914:	ldr	w8, [x23, #2040]
  40d918:	ldr	x9, [x26, #4008]
  40d91c:	ldr	w11, [x28, #748]
  40d920:	sxtw	x10, w19
  40d924:	add	w8, w8, w19
  40d928:	sub	x22, x22, x10
  40d92c:	add	x9, x9, x10, lsl #9
  40d930:	cmp	w8, w11
  40d934:	sub	w24, w24, w19
  40d938:	str	w8, [x23, #2040]
  40d93c:	str	x9, [x26, #4008]
  40d940:	b.ne	40d8b8 <wcrtomb@plt+0x8a98>  // b.any
  40d944:	mov	w0, #0x1                   	// #1
  40d948:	bl	40db2c <wcrtomb@plt+0x8d0c>
  40d94c:	b	40d8b8 <wcrtomb@plt+0x8a98>
  40d950:	mov	w19, wzr
  40d954:	ldr	w8, [x28, #748]
  40d958:	ldrsw	x9, [x23, #2040]
  40d95c:	ldr	x10, [x27, #2032]
  40d960:	mov	w1, wzr
  40d964:	sub	w20, w8, w9
  40d968:	lsl	w8, w20, #9
  40d96c:	add	x0, x10, x9, lsl #9
  40d970:	sxtw	x2, w8
  40d974:	bl	404600 <memset@plt>
  40d978:	add	w19, w20, w19
  40d97c:	cmp	w19, #0x2
  40d980:	cset	w0, lt  // lt = tstop
  40d984:	bl	40db2c <wcrtomb@plt+0x8d0c>
  40d988:	cmp	w19, #0x2
  40d98c:	b.lt	40d954 <wcrtomb@plt+0x8b34>  // b.tstop
  40d990:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40d994:	ldrb	w8, [x8, #2024]
  40d998:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  40d99c:	cbnz	w8, 40d9c8 <wcrtomb@plt+0x8ba8>
  40d9a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40d9a4:	ldr	w0, [x8, #976]
  40d9a8:	mov	w8, #0x3fffffff            	// #1073741823
  40d9ac:	cmp	w0, w8
  40d9b0:	b.gt	40d9c8 <wcrtomb@plt+0x8ba8>
  40d9b4:	bl	41fdd0 <wcrtomb@plt+0x1afb0>
  40d9b8:	cbz	w0, 40d9c8 <wcrtomb@plt+0x8ba8>
  40d9bc:	ldr	x8, [x19, #688]
  40d9c0:	ldr	x0, [x8]
  40d9c4:	bl	428704 <wcrtomb@plt+0x238e4>
  40d9c8:	ldr	x0, [x27, #2032]
  40d9cc:	bl	4049d0 <free@plt>
  40d9d0:	bl	405c30 <wcrtomb@plt+0xe10>
  40d9d4:	bl	41baa8 <wcrtomb@plt+0x16c88>
  40d9d8:	ldp	x20, x19, [sp, #80]
  40d9dc:	ldp	x22, x21, [sp, #64]
  40d9e0:	ldp	x24, x23, [sp, #48]
  40d9e4:	ldp	x26, x25, [sp, #32]
  40d9e8:	ldp	x28, x27, [sp, #16]
  40d9ec:	ldp	x29, x30, [sp], #96
  40d9f0:	ret
  40d9f4:	bl	404870 <abort@plt>
  40d9f8:	stp	x29, x30, [sp, #-64]!
  40d9fc:	lsr	x8, x1, #9
  40da00:	str	x23, [sp, #16]
  40da04:	stp	x20, x19, [sp, #48]
  40da08:	and	x23, x1, #0xfffffffffffffe00
  40da0c:	and	x19, x1, #0x1ff
  40da10:	mov	x1, x8
  40da14:	stp	x22, x21, [sp, #32]
  40da18:	mov	x29, sp
  40da1c:	mov	x20, x0
  40da20:	bl	40daa4 <wcrtomb@plt+0x8c84>
  40da24:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40da28:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40da2c:	ldr	x8, [x22, #2032]
  40da30:	ldrsw	x9, [x21, #2040]
  40da34:	add	x1, x20, x23
  40da38:	mov	x2, x19
  40da3c:	add	x0, x8, x9, lsl #9
  40da40:	bl	404110 <memcpy@plt>
  40da44:	cmp	x19, #0x1ff
  40da48:	b.hi	40da6c <wcrtomb@plt+0x8c4c>  // b.pmore
  40da4c:	ldr	x8, [x22, #2032]
  40da50:	ldrsw	x9, [x21, #2040]
  40da54:	mov	w10, #0x200                 	// #512
  40da58:	sub	x2, x10, x19
  40da5c:	mov	w1, wzr
  40da60:	add	x8, x8, x9, lsl #9
  40da64:	add	x0, x8, x19
  40da68:	bl	404600 <memset@plt>
  40da6c:	ldr	w8, [x21, #2040]
  40da70:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40da74:	ldr	w9, [x9, #748]
  40da78:	add	w8, w8, #0x1
  40da7c:	str	w8, [x21, #2040]
  40da80:	cmp	w8, w9
  40da84:	b.ne	40da90 <wcrtomb@plt+0x8c70>  // b.any
  40da88:	mov	w0, #0x1                   	// #1
  40da8c:	bl	40db2c <wcrtomb@plt+0x8d0c>
  40da90:	ldp	x20, x19, [sp, #48]
  40da94:	ldp	x22, x21, [sp, #32]
  40da98:	ldr	x23, [sp, #16]
  40da9c:	ldp	x29, x30, [sp], #64
  40daa0:	ret
  40daa4:	stp	x29, x30, [sp, #-64]!
  40daa8:	stp	x24, x23, [sp, #16]
  40daac:	stp	x22, x21, [sp, #32]
  40dab0:	stp	x20, x19, [sp, #48]
  40dab4:	mov	x29, sp
  40dab8:	cbz	x1, 40db18 <wcrtomb@plt+0x8cf8>
  40dabc:	mov	x19, x1
  40dac0:	mov	x20, x0
  40dac4:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40dac8:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40dacc:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  40dad0:	b	40dae0 <wcrtomb@plt+0x8cc0>
  40dad4:	subs	x19, x19, #0x1
  40dad8:	add	x20, x20, #0x200
  40dadc:	b.eq	40db18 <wcrtomb@plt+0x8cf8>  // b.none
  40dae0:	ldrsw	x8, [x22, #2040]
  40dae4:	ldr	x9, [x21, #2032]
  40dae8:	mov	w2, #0x200                 	// #512
  40daec:	mov	x1, x20
  40daf0:	add	w24, w8, #0x1
  40daf4:	add	x0, x9, x8, lsl #9
  40daf8:	str	w24, [x22, #2040]
  40dafc:	bl	404110 <memcpy@plt>
  40db00:	ldr	w8, [x23, #748]
  40db04:	cmp	w24, w8
  40db08:	b.ne	40dad4 <wcrtomb@plt+0x8cb4>  // b.any
  40db0c:	mov	w0, #0x1                   	// #1
  40db10:	bl	40db2c <wcrtomb@plt+0x8d0c>
  40db14:	b	40dad4 <wcrtomb@plt+0x8cb4>
  40db18:	ldp	x20, x19, [sp, #48]
  40db1c:	ldp	x22, x21, [sp, #32]
  40db20:	ldp	x24, x23, [sp, #16]
  40db24:	ldp	x29, x30, [sp], #64
  40db28:	ret
  40db2c:	stp	x29, x30, [sp, #-64]!
  40db30:	stp	x22, x21, [sp, #32]
  40db34:	stp	x20, x19, [sp, #48]
  40db38:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40db3c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40db40:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40db44:	ldr	x8, [x8, #2032]
  40db48:	ldrb	w9, [x21, #2024]
  40db4c:	ldr	x22, [x20, #3984]
  40db50:	mov	w19, w0
  40db54:	str	x23, [sp, #16]
  40db58:	mov	x29, sp
  40db5c:	str	x8, [x20, #3984]
  40db60:	cbz	w9, 40db84 <wcrtomb@plt+0x8d64>
  40db64:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  40db68:	mov	w8, #0x1                   	// #1
  40db6c:	str	w8, [x23, #976]
  40db70:	bl	405f28 <wcrtomb@plt+0x1108>
  40db74:	str	wzr, [x23, #976]
  40db78:	str	x22, [x20, #3984]
  40db7c:	cbnz	w19, 40dbb4 <wcrtomb@plt+0x8d94>
  40db80:	b	40dbe0 <wcrtomb@plt+0x8dc0>
  40db84:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40db88:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40db8c:	ldr	x8, [x8, #3952]
  40db90:	ldr	x9, [x9, #4032]
  40db94:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40db98:	ldr	x10, [x10, #3936]
  40db9c:	add	x8, x9, x8
  40dba0:	sub	x0, x8, x10
  40dba4:	bl	40dbfc <wcrtomb@plt+0x8ddc>
  40dba8:	bl	405f28 <wcrtomb@plt+0x1108>
  40dbac:	str	x22, [x20, #3984]
  40dbb0:	cbz	w19, 40dbe0 <wcrtomb@plt+0x8dc0>
  40dbb4:	ldrb	w8, [x21, #2024]
  40dbb8:	cbnz	w8, 40dbe0 <wcrtomb@plt+0x8dc0>
  40dbbc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40dbc0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40dbc4:	ldr	x8, [x8, #3936]
  40dbc8:	ldr	x9, [x9, #3952]
  40dbcc:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40dbd0:	ldr	x10, [x10, #4032]
  40dbd4:	sub	x8, x8, x9
  40dbd8:	sub	x0, x8, x10
  40dbdc:	bl	40dbfc <wcrtomb@plt+0x8ddc>
  40dbe0:	ldp	x20, x19, [sp, #48]
  40dbe4:	ldp	x22, x21, [sp, #32]
  40dbe8:	ldr	x23, [sp, #16]
  40dbec:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40dbf0:	str	wzr, [x8, #2040]
  40dbf4:	ldp	x29, x30, [sp], #64
  40dbf8:	ret
  40dbfc:	sub	sp, sp, #0x30
  40dc00:	stp	x29, x30, [sp, #16]
  40dc04:	stp	x20, x19, [sp, #32]
  40dc08:	add	x29, sp, #0x10
  40dc0c:	cbz	x0, 40dd94 <wcrtomb@plt+0x8f74>
  40dc10:	mov	x19, x0
  40dc14:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  40dc18:	tbnz	x0, #63, 40dc34 <wcrtomb@plt+0x8e14>
  40dc1c:	mov	w8, #0x3                   	// #3
  40dc20:	cmp	x19, w19, sxtw
  40dc24:	strh	w8, [sp, #8]
  40dc28:	str	w19, [sp, #12]
  40dc2c:	b.eq	40dc54 <wcrtomb@plt+0x8e34>  // b.none
  40dc30:	b	40dce8 <wcrtomb@plt+0x8ec8>
  40dc34:	mov	w8, #0x4                   	// #4
  40dc38:	mov	w10, #0x80000000            	// #-2147483648
  40dc3c:	strh	w8, [sp, #8]
  40dc40:	sub	x8, x10, x19
  40dc44:	neg	w9, w19
  40dc48:	lsr	x8, x8, #32
  40dc4c:	str	w9, [sp, #12]
  40dc50:	cbnz	x8, 40dce8 <wcrtomb@plt+0x8ec8>
  40dc54:	ldr	w0, [x20, #976]
  40dc58:	mov	w8, #0x40000000            	// #1073741824
  40dc5c:	cmp	w0, w8
  40dc60:	b.lt	40dc84 <wcrtomb@plt+0x8e64>  // b.tstop
  40dc64:	mov	w8, #0xc0000000            	// #-1073741824
  40dc68:	mov	w1, #0x6d01                	// #27905
  40dc6c:	add	w0, w0, w8
  40dc70:	add	x2, sp, #0x8
  40dc74:	movk	w1, #0x4008, lsl #16
  40dc78:	bl	429618 <wcrtomb@plt+0x247f8>
  40dc7c:	tbz	w0, #31, 40dd94 <wcrtomb@plt+0x8f74>
  40dc80:	b	40dc98 <wcrtomb@plt+0x8e78>
  40dc84:	mov	w1, #0x6d01                	// #27905
  40dc88:	add	x2, sp, #0x8
  40dc8c:	movk	w1, #0x4008, lsl #16
  40dc90:	bl	404dd0 <ioctl@plt>
  40dc94:	tbz	w0, #31, 40dd94 <wcrtomb@plt+0x8f74>
  40dc98:	bl	404d00 <__errno_location@plt>
  40dc9c:	ldr	w8, [x0]
  40dca0:	cmp	w8, #0x5
  40dca4:	b.ne	40dce8 <wcrtomb@plt+0x8ec8>  // b.any
  40dca8:	ldr	w0, [x20, #976]
  40dcac:	mov	w8, #0x40000000            	// #1073741824
  40dcb0:	cmp	w0, w8
  40dcb4:	b.lt	40dcd4 <wcrtomb@plt+0x8eb4>  // b.tstop
  40dcb8:	mov	w8, #0xc0000000            	// #-1073741824
  40dcbc:	mov	w1, #0x6d01                	// #27905
  40dcc0:	add	w0, w0, w8
  40dcc4:	add	x2, sp, #0x8
  40dcc8:	movk	w1, #0x4008, lsl #16
  40dccc:	bl	429618 <wcrtomb@plt+0x247f8>
  40dcd0:	b	40dce4 <wcrtomb@plt+0x8ec4>
  40dcd4:	mov	w1, #0x6d01                	// #27905
  40dcd8:	add	x2, sp, #0x8
  40dcdc:	movk	w1, #0x4008, lsl #16
  40dce0:	bl	404dd0 <ioctl@plt>
  40dce4:	tbz	w0, #31, 40dd94 <wcrtomb@plt+0x8f74>
  40dce8:	ldr	w0, [x20, #976]
  40dcec:	mov	w8, #0x40000000            	// #1073741824
  40dcf0:	cmp	w0, w8
  40dcf4:	b.lt	40dd10 <wcrtomb@plt+0x8ef0>  // b.tstop
  40dcf8:	mov	w8, #0xc0000000            	// #-1073741824
  40dcfc:	add	w0, w0, w8
  40dd00:	mov	w2, #0x1                   	// #1
  40dd04:	mov	x1, xzr
  40dd08:	bl	42948c <wcrtomb@plt+0x2466c>
  40dd0c:	b	40dd1c <wcrtomb@plt+0x8efc>
  40dd10:	mov	w2, #0x1                   	// #1
  40dd14:	mov	x1, xzr
  40dd18:	bl	404390 <lseek@plt>
  40dd1c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40dd20:	ldr	x8, [x8, #920]
  40dd24:	mul	x9, x8, x19
  40dd28:	sdiv	x10, x9, x19
  40dd2c:	cmp	x10, x8
  40dd30:	add	x19, x9, x0
  40dd34:	b.ne	40dd80 <wcrtomb@plt+0x8f60>  // b.any
  40dd38:	ldr	w0, [x20, #976]
  40dd3c:	mov	w8, #0x40000000            	// #1073741824
  40dd40:	bic	x19, x19, x19, asr #63
  40dd44:	cmp	w0, w8
  40dd48:	b.lt	40dd6c <wcrtomb@plt+0x8f4c>  // b.tstop
  40dd4c:	mov	w8, #0xc0000000            	// #-1073741824
  40dd50:	add	w0, w0, w8
  40dd54:	mov	x1, x19
  40dd58:	mov	w2, wzr
  40dd5c:	bl	42948c <wcrtomb@plt+0x2466c>
  40dd60:	cmp	x0, x19
  40dd64:	b.ne	40dd80 <wcrtomb@plt+0x8f60>  // b.any
  40dd68:	b	40dd94 <wcrtomb@plt+0x8f74>
  40dd6c:	mov	x1, x19
  40dd70:	mov	w2, wzr
  40dd74:	bl	404390 <lseek@plt>
  40dd78:	cmp	x0, x19
  40dd7c:	b.eq	40dd94 <wcrtomb@plt+0x8f74>  // b.none
  40dd80:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40dd84:	ldr	x8, [x8, #688]
  40dd88:	mov	x1, x19
  40dd8c:	ldr	x0, [x8]
  40dd90:	bl	4284ac <wcrtomb@plt+0x2368c>
  40dd94:	ldp	x20, x19, [sp, #32]
  40dd98:	ldp	x29, x30, [sp, #16]
  40dd9c:	add	sp, sp, #0x30
  40dda0:	ret
  40dda4:	stp	x29, x30, [sp, #-16]!
  40dda8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40ddac:	ldr	x8, [x8, #4040]
  40ddb0:	mov	x29, sp
  40ddb4:	cbz	x8, 40ddbc <wcrtomb@plt+0x8f9c>
  40ddb8:	blr	x8
  40ddbc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40ddc0:	add	x1, x1, #0x101
  40ddc4:	mov	w2, #0x5                   	// #5
  40ddc8:	mov	x0, xzr
  40ddcc:	bl	404bf0 <dcgettext@plt>
  40ddd0:	mov	x2, x0
  40ddd4:	mov	w0, #0x2                   	// #2
  40ddd8:	mov	w1, wzr
  40dddc:	bl	4041f0 <error@plt>
  40dde0:	bl	404870 <abort@plt>
  40dde4:	stp	x29, x30, [sp, #-16]!
  40dde8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40ddec:	add	x1, x1, #0x127
  40ddf0:	mov	w2, #0x5                   	// #5
  40ddf4:	mov	x0, xzr
  40ddf8:	mov	x29, sp
  40ddfc:	bl	404bf0 <dcgettext@plt>
  40de00:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  40de04:	mov	x3, x0
  40de08:	add	x2, x2, #0x386
  40de0c:	mov	w0, wzr
  40de10:	mov	w1, wzr
  40de14:	bl	4041f0 <error@plt>
  40de18:	bl	40dda4 <wcrtomb@plt+0x8f84>
  40de1c:	stp	x29, x30, [sp, #-48]!
  40de20:	str	x21, [sp, #16]
  40de24:	stp	x20, x19, [sp, #32]
  40de28:	mov	x29, sp
  40de2c:	mov	w19, w1
  40de30:	mov	x20, x0
  40de34:	bl	404190 <strlen@plt>
  40de38:	add	x0, x0, #0x10
  40de3c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  40de40:	mov	x21, x0
  40de44:	str	xzr, [x0]
  40de48:	str	w19, [x0, #8]
  40de4c:	add	x0, x0, #0xc
  40de50:	mov	x1, x20
  40de54:	bl	404b20 <strcpy@plt>
  40de58:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40de5c:	ldr	x9, [x8, #2048]
  40de60:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40de64:	add	x10, x10, #0x808
  40de68:	cmp	x9, #0x0
  40de6c:	csel	x9, x10, x9, eq  // eq = none
  40de70:	str	x21, [x9]
  40de74:	str	x21, [x8, #2048]
  40de78:	ldp	x20, x19, [sp, #32]
  40de7c:	ldr	x21, [sp, #16]
  40de80:	ldp	x29, x30, [sp], #48
  40de84:	ret
  40de88:	stp	x29, x30, [sp, #-96]!
  40de8c:	stp	x28, x27, [sp, #16]
  40de90:	stp	x26, x25, [sp, #32]
  40de94:	stp	x24, x23, [sp, #48]
  40de98:	stp	x22, x21, [sp, #64]
  40de9c:	stp	x20, x19, [sp, #80]
  40dea0:	ldr	x8, [x0, #416]
  40dea4:	mov	x29, sp
  40dea8:	cbnz	x8, 40e028 <wcrtomb@plt+0x9208>
  40deac:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40deb0:	ldr	x26, [x8, #2056]
  40deb4:	mov	x19, x0
  40deb8:	cbz	x26, 40e020 <wcrtomb@plt+0x9200>
  40debc:	adrp	x9, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40dec0:	add	x8, x19, #0x198
  40dec4:	add	x9, x9, #0x8c0
  40dec8:	cmp	x19, #0x0
  40decc:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x15da0>
  40ded0:	mov	x27, xzr
  40ded4:	mov	x28, xzr
  40ded8:	add	x20, x20, #0x133
  40dedc:	csel	x21, x9, x8, eq  // eq = none
  40dee0:	b	40def4 <wcrtomb@plt+0x90d4>
  40dee4:	mov	x0, x22
  40dee8:	bl	428160 <wcrtomb@plt+0x23340>
  40deec:	ldr	x26, [x26]
  40def0:	cbz	x26, 40e024 <wcrtomb@plt+0x9204>
  40def4:	ldr	w0, [x21]
  40def8:	add	x22, x26, #0xc
  40defc:	mov	x1, x22
  40df00:	mov	w2, wzr
  40df04:	mov	w3, wzr
  40df08:	bl	404cd0 <faccessat@plt>
  40df0c:	cbnz	w0, 40deec <wcrtomb@plt+0x90cc>
  40df10:	mov	x0, x19
  40df14:	mov	x1, x22
  40df18:	mov	w2, wzr
  40df1c:	bl	40a3e0 <wcrtomb@plt+0x55c0>
  40df20:	cmn	w0, #0x1
  40df24:	b.eq	40dee4 <wcrtomb@plt+0x90c4>  // b.none
  40df28:	mov	x1, x20
  40df2c:	mov	w23, w0
  40df30:	bl	404610 <fdopen@plt>
  40df34:	cbz	x0, 40dfbc <wcrtomb@plt+0x919c>
  40df38:	mov	x24, x0
  40df3c:	bl	432818 <argp_usage@@Base+0xc1c>
  40df40:	mov	x23, x0
  40df44:	mov	x0, x22
  40df48:	bl	40e080 <wcrtomb@plt+0x9260>
  40df4c:	ldr	x8, [x0, #24]
  40df50:	mov	x25, x0
  40df54:	cbz	x8, 40df64 <wcrtomb@plt+0x9144>
  40df58:	ldr	x0, [x25, #32]
  40df5c:	blr	x8
  40df60:	str	x0, [x25, #32]
  40df64:	ldr	x0, [x25, #16]
  40df68:	ldr	x5, [x25, #32]
  40df6c:	mov	w3, #0x50000000            	// #1342177280
  40df70:	mov	w4, #0xa                   	// #10
  40df74:	mov	x1, x23
  40df78:	mov	x2, x24
  40df7c:	bl	432f78 <argp_usage@@Base+0x137c>
  40df80:	cbnz	w0, 40e044 <wcrtomb@plt+0x9224>
  40df84:	mov	x0, x24
  40df88:	bl	404470 <fclose@plt>
  40df8c:	mov	w0, #0x20                  	// #32
  40df90:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  40df94:	str	x23, [x0, #24]
  40df98:	ldr	w8, [x26, #8]
  40df9c:	cbz	w8, 40dfa4 <wcrtomb@plt+0x9184>
  40dfa0:	ldr	w8, [x25, #8]
  40dfa4:	str	w8, [x0, #16]
  40dfa8:	stp	xzr, x28, [x0]
  40dfac:	cbz	x28, 40e014 <wcrtomb@plt+0x91f4>
  40dfb0:	str	x0, [x28]
  40dfb4:	mov	x28, x0
  40dfb8:	b	40deec <wcrtomb@plt+0x90cc>
  40dfbc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40dfc0:	ldr	x8, [x8, #1008]
  40dfc4:	cbz	x8, 40dfcc <wcrtomb@plt+0x91ac>
  40dfc8:	blr	x8
  40dfcc:	bl	404d00 <__errno_location@plt>
  40dfd0:	ldr	w24, [x0]
  40dfd4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40dfd8:	mov	w2, #0x5                   	// #5
  40dfdc:	mov	x0, xzr
  40dfe0:	add	x1, x1, #0x138
  40dfe4:	bl	404bf0 <dcgettext@plt>
  40dfe8:	mov	x2, x0
  40dfec:	mov	w0, wzr
  40dff0:	mov	w1, w24
  40dff4:	mov	x3, x22
  40dff8:	bl	4041f0 <error@plt>
  40dffc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e000:	mov	w9, #0x2                   	// #2
  40e004:	mov	w0, w23
  40e008:	str	w9, [x8, #3456]
  40e00c:	bl	4047c0 <close@plt>
  40e010:	b	40deec <wcrtomb@plt+0x90cc>
  40e014:	mov	x28, x0
  40e018:	mov	x27, x0
  40e01c:	b	40deec <wcrtomb@plt+0x90cc>
  40e020:	mov	x27, xzr
  40e024:	str	x27, [x19, #416]
  40e028:	ldp	x20, x19, [sp, #80]
  40e02c:	ldp	x22, x21, [sp, #64]
  40e030:	ldp	x24, x23, [sp, #48]
  40e034:	ldp	x26, x25, [sp, #32]
  40e038:	ldp	x28, x27, [sp, #16]
  40e03c:	ldp	x29, x30, [sp], #96
  40e040:	ret
  40e044:	bl	404d00 <__errno_location@plt>
  40e048:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e04c:	ldr	x8, [x8, #1008]
  40e050:	ldr	w19, [x0]
  40e054:	cbz	x8, 40e05c <wcrtomb@plt+0x923c>
  40e058:	blr	x8
  40e05c:	mov	x0, x22
  40e060:	bl	43beac <argp_usage@@Base+0xa2b0>
  40e064:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  40e068:	mov	x3, x0
  40e06c:	add	x2, x2, #0x386
  40e070:	mov	w0, wzr
  40e074:	mov	w1, w19
  40e078:	bl	4041f0 <error@plt>
  40e07c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  40e080:	stp	x29, x30, [sp, #-32]!
  40e084:	stp	x20, x19, [sp, #16]
  40e088:	adrp	x19, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40e08c:	add	x19, x19, #0x7f0
  40e090:	ldr	x8, [x19]
  40e094:	mov	x29, sp
  40e098:	cbz	x8, 40e0c0 <wcrtomb@plt+0x92a0>
  40e09c:	adrp	x19, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40e0a0:	mov	x20, x0
  40e0a4:	add	x19, x19, #0x7f0
  40e0a8:	mov	x0, x8
  40e0ac:	mov	x1, x20
  40e0b0:	bl	404920 <strcmp@plt>
  40e0b4:	cbz	w0, 40e0c0 <wcrtomb@plt+0x92a0>
  40e0b8:	ldr	x8, [x19, #40]!
  40e0bc:	cbnz	x8, 40e0a8 <wcrtomb@plt+0x9288>
  40e0c0:	mov	x0, x19
  40e0c4:	ldp	x20, x19, [sp, #16]
  40e0c8:	ldp	x29, x30, [sp], #32
  40e0cc:	ret
  40e0d0:	stp	x29, x30, [sp, #-48]!
  40e0d4:	stp	x20, x19, [sp, #32]
  40e0d8:	ldr	x20, [x0, #416]
  40e0dc:	mov	x19, x0
  40e0e0:	str	x21, [sp, #16]
  40e0e4:	mov	x29, sp
  40e0e8:	cbz	x20, 40e108 <wcrtomb@plt+0x92e8>
  40e0ec:	ldr	x0, [x20, #24]
  40e0f0:	ldr	x21, [x20]
  40e0f4:	bl	432830 <argp_usage@@Base+0xc34>
  40e0f8:	mov	x0, x20
  40e0fc:	bl	4049d0 <free@plt>
  40e100:	mov	x20, x21
  40e104:	cbnz	x21, 40e0ec <wcrtomb@plt+0x92cc>
  40e108:	str	xzr, [x19, #416]
  40e10c:	ldp	x20, x19, [sp, #32]
  40e110:	ldr	x21, [sp, #16]
  40e114:	ldp	x29, x30, [sp], #48
  40e118:	ret
  40e11c:	stp	x29, x30, [sp, #-80]!
  40e120:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e124:	ldr	x8, [x8, #64]
  40e128:	stp	x20, x19, [sp, #64]
  40e12c:	mov	x20, x0
  40e130:	mov	x19, x1
  40e134:	mov	x0, x8
  40e138:	mov	x1, x20
  40e13c:	str	x25, [sp, #16]
  40e140:	stp	x24, x23, [sp, #32]
  40e144:	stp	x22, x21, [sp, #48]
  40e148:	mov	x29, sp
  40e14c:	bl	432ab8 <argp_usage@@Base+0xebc>
  40e150:	tbz	w0, #0, 40e15c <wcrtomb@plt+0x933c>
  40e154:	mov	w23, #0x1                   	// #1
  40e158:	b	40e23c <wcrtomb@plt+0x941c>
  40e15c:	cbz	x19, 40e238 <wcrtomb@plt+0x9418>
  40e160:	mov	w24, wzr
  40e164:	mov	w23, wzr
  40e168:	mov	x21, xzr
  40e16c:	mov	x22, xzr
  40e170:	ldr	x25, [x19, #416]
  40e174:	cbnz	x25, 40e198 <wcrtomb@plt+0x9378>
  40e178:	b	40e20c <wcrtomb@plt+0x93ec>
  40e17c:	ldr	x0, [x25, #24]
  40e180:	mov	x1, x21
  40e184:	bl	432ab8 <argp_usage@@Base+0xebc>
  40e188:	mov	w23, w0
  40e18c:	tbnz	w0, #0, 40e20c <wcrtomb@plt+0x93ec>
  40e190:	ldr	x25, [x25]
  40e194:	cbz	x25, 40e20c <wcrtomb@plt+0x93ec>
  40e198:	ldr	w8, [x25, #16]
  40e19c:	tst	w8, w24
  40e1a0:	b.ne	40e190 <wcrtomb@plt+0x9370>  // b.any
  40e1a4:	ldr	x0, [x25, #24]
  40e1a8:	mov	x1, x20
  40e1ac:	bl	432ab8 <argp_usage@@Base+0xebc>
  40e1b0:	tbnz	w0, #0, 40e208 <wcrtomb@plt+0x93e8>
  40e1b4:	cbnz	x22, 40e1e4 <wcrtomb@plt+0x93c4>
  40e1b8:	ldrb	w8, [x20]
  40e1bc:	mov	x22, x20
  40e1c0:	cmp	w8, #0x2e
  40e1c4:	b.ne	40e1e4 <wcrtomb@plt+0x93c4>  // b.any
  40e1c8:	mov	x22, x20
  40e1cc:	ldrb	w8, [x22, #1]
  40e1d0:	cmp	w8, #0x2f
  40e1d4:	b.ne	40e1e4 <wcrtomb@plt+0x93c4>  // b.any
  40e1d8:	ldrb	w8, [x22, #2]!
  40e1dc:	cmp	w8, #0x2e
  40e1e0:	b.eq	40e1cc <wcrtomb@plt+0x93ac>  // b.none
  40e1e4:	ldr	x0, [x25, #24]
  40e1e8:	mov	x1, x22
  40e1ec:	bl	432ab8 <argp_usage@@Base+0xebc>
  40e1f0:	tbnz	w0, #0, 40e220 <wcrtomb@plt+0x9400>
  40e1f4:	cbnz	x21, 40e17c <wcrtomb@plt+0x935c>
  40e1f8:	mov	x0, x20
  40e1fc:	bl	432574 <argp_usage@@Base+0x978>
  40e200:	mov	x21, x0
  40e204:	b	40e17c <wcrtomb@plt+0x935c>
  40e208:	mov	w23, w0
  40e20c:	ldr	x19, [x19, #392]
  40e210:	cbz	x19, 40e22c <wcrtomb@plt+0x940c>
  40e214:	mov	w24, #0x2                   	// #2
  40e218:	tbz	w23, #0, 40e170 <wcrtomb@plt+0x9350>
  40e21c:	b	40e22c <wcrtomb@plt+0x940c>
  40e220:	mov	w23, w0
  40e224:	ldr	x19, [x19, #392]
  40e228:	cbnz	x19, 40e214 <wcrtomb@plt+0x93f4>
  40e22c:	mov	x0, x21
  40e230:	bl	4049d0 <free@plt>
  40e234:	b	40e23c <wcrtomb@plt+0x941c>
  40e238:	mov	w23, wzr
  40e23c:	and	w0, w23, #0x1
  40e240:	ldp	x20, x19, [sp, #64]
  40e244:	ldp	x22, x21, [sp, #48]
  40e248:	ldp	x24, x23, [sp, #32]
  40e24c:	ldr	x25, [sp, #16]
  40e250:	ldp	x29, x30, [sp], #80
  40e254:	ret
  40e258:	stp	x29, x30, [sp, #-32]!
  40e25c:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40e260:	ldr	x0, [x8, #2032]
  40e264:	str	x19, [sp, #16]
  40e268:	mov	x29, sp
  40e26c:	cbz	x0, 40e288 <wcrtomb@plt+0x9468>
  40e270:	adrp	x19, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40e274:	add	x19, x19, #0x818
  40e278:	mov	w1, wzr
  40e27c:	bl	40de1c <wcrtomb@plt+0x8ffc>
  40e280:	ldr	x0, [x19], #40
  40e284:	cbnz	x0, 40e278 <wcrtomb@plt+0x9458>
  40e288:	ldr	x19, [sp, #16]
  40e28c:	ldp	x29, x30, [sp], #32
  40e290:	ret
  40e294:	sub	sp, sp, #0x120
  40e298:	mov	x8, x1
  40e29c:	stp	x20, x19, [sp, #272]
  40e2a0:	mov	w19, w2
  40e2a4:	mov	x20, x0
  40e2a8:	add	x1, sp, #0x8
  40e2ac:	mov	w2, #0x844                 	// #2116
  40e2b0:	mov	x0, x8
  40e2b4:	stp	x29, x30, [sp, #240]
  40e2b8:	stp	x28, x21, [sp, #256]
  40e2bc:	add	x29, sp, #0xf0
  40e2c0:	bl	429ff0 <wcrtomb@plt+0x251d0>
  40e2c4:	cbnz	w0, 40e300 <wcrtomb@plt+0x94e0>
  40e2c8:	ldr	x8, [sp, #8]
  40e2cc:	cbz	x8, 40e2f8 <wcrtomb@plt+0x94d8>
  40e2d0:	mov	x21, xzr
  40e2d4:	ldr	x8, [sp, #16]
  40e2d8:	mov	x0, x20
  40e2dc:	mov	w2, w19
  40e2e0:	ldr	x1, [x8, x21, lsl #3]
  40e2e4:	bl	432c64 <argp_usage@@Base+0x1068>
  40e2e8:	ldr	x8, [sp, #8]
  40e2ec:	add	x21, x21, #0x1
  40e2f0:	cmp	x21, x8
  40e2f4:	b.cc	40e2d4 <wcrtomb@plt+0x94b4>  // b.lo, b.ul, b.last
  40e2f8:	add	x0, sp, #0x8
  40e2fc:	bl	42a140 <wcrtomb@plt+0x25320>
  40e300:	ldp	x20, x19, [sp, #272]
  40e304:	ldp	x28, x21, [sp, #256]
  40e308:	ldp	x29, x30, [sp, #240]
  40e30c:	add	sp, sp, #0x120
  40e310:	ret
  40e314:	stp	x29, x30, [sp, #-48]!
  40e318:	str	x21, [sp, #16]
  40e31c:	stp	x20, x19, [sp, #32]
  40e320:	mov	x29, sp
  40e324:	mov	w19, w2
  40e328:	mov	x21, x1
  40e32c:	mov	x20, x0
  40e330:	bl	404950 <__ctype_b_loc@plt>
  40e334:	ldr	x9, [x0]
  40e338:	ldrb	w8, [x21], #1
  40e33c:	ldrh	w10, [x9, x8, lsl #1]
  40e340:	tbnz	w10, #13, 40e338 <wcrtomb@plt+0x9518>
  40e344:	cbz	w8, 40e374 <wcrtomb@plt+0x9554>
  40e348:	cmp	w8, #0x23
  40e34c:	b.eq	40e374 <wcrtomb@plt+0x9554>  // b.none
  40e350:	cmp	w8, #0x5c
  40e354:	sub	x1, x21, #0x1
  40e358:	b.ne	40e368 <wcrtomb@plt+0x9548>  // b.any
  40e35c:	ldrb	w8, [x21]
  40e360:	cmp	w8, #0x23
  40e364:	csel	x1, x21, x1, eq  // eq = none
  40e368:	mov	x0, x20
  40e36c:	mov	w2, w19
  40e370:	bl	432c64 <argp_usage@@Base+0x1068>
  40e374:	ldp	x20, x19, [sp, #32]
  40e378:	ldr	x21, [sp, #16]
  40e37c:	ldp	x29, x30, [sp], #48
  40e380:	ret
  40e384:	stp	x29, x30, [sp, #-48]!
  40e388:	str	x21, [sp, #16]
  40e38c:	stp	x20, x19, [sp, #32]
  40e390:	mov	x29, sp
  40e394:	mov	w21, w2
  40e398:	mov	x20, x1
  40e39c:	mov	x19, x0
  40e3a0:	bl	404950 <__ctype_b_loc@plt>
  40e3a4:	ldr	x9, [x0]
  40e3a8:	ldrb	w8, [x20], #1
  40e3ac:	ldrh	w10, [x9, x8, lsl #1]
  40e3b0:	tbnz	w10, #13, 40e3a8 <wcrtomb@plt+0x9588>
  40e3b4:	cbz	w8, 40e41c <wcrtomb@plt+0x95fc>
  40e3b8:	cmp	w8, #0x21
  40e3bc:	b.eq	40e3d0 <wcrtomb@plt+0x95b0>  // b.none
  40e3c0:	cmp	w8, #0x23
  40e3c4:	b.eq	40e41c <wcrtomb@plt+0x95fc>  // b.none
  40e3c8:	sub	x20, x20, #0x1
  40e3cc:	b	40e3e8 <wcrtomb@plt+0x95c8>
  40e3d0:	ldrb	w8, [x20]
  40e3d4:	cmp	w8, #0x21
  40e3d8:	b.ne	40e3e4 <wcrtomb@plt+0x95c4>  // b.any
  40e3dc:	add	x20, x20, #0x1
  40e3e0:	b	40e3e8 <wcrtomb@plt+0x95c8>
  40e3e4:	orr	w21, w21, #0x20000000
  40e3e8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40e3ec:	add	x1, x1, #0x175
  40e3f0:	mov	w2, #0x3                   	// #3
  40e3f4:	mov	x0, x20
  40e3f8:	bl	4045a0 <strncmp@plt>
  40e3fc:	and	w9, w21, #0xe7ffffff
  40e400:	add	x8, x20, #0x3
  40e404:	cmp	w0, #0x0
  40e408:	orr	w9, w9, #0x8000000
  40e40c:	csel	w2, w9, w21, eq  // eq = none
  40e410:	csel	x1, x8, x20, eq  // eq = none
  40e414:	mov	x0, x19
  40e418:	bl	432c64 <argp_usage@@Base+0x1068>
  40e41c:	ldp	x20, x19, [sp, #32]
  40e420:	ldr	x21, [sp, #16]
  40e424:	ldp	x29, x30, [sp], #48
  40e428:	ret
  40e42c:	stp	x29, x30, [sp, #-64]!
  40e430:	stp	x24, x23, [sp, #16]
  40e434:	stp	x22, x21, [sp, #32]
  40e438:	stp	x20, x19, [sp, #48]
  40e43c:	mov	x29, sp
  40e440:	mov	x19, x3
  40e444:	mov	w21, w2
  40e448:	mov	x22, x1
  40e44c:	mov	x20, x0
  40e450:	bl	404950 <__ctype_b_loc@plt>
  40e454:	ldr	x23, [x0]
  40e458:	sub	x24, x22, #0x2
  40e45c:	ldrb	w8, [x24, #2]
  40e460:	add	x24, x24, #0x1
  40e464:	ldrh	w9, [x23, x8, lsl #1]
  40e468:	tbnz	w9, #13, 40e45c <wcrtomb@plt+0x963c>
  40e46c:	cbz	w8, 40e50c <wcrtomb@plt+0x96ec>
  40e470:	cmp	w8, #0x23
  40e474:	b.eq	40e50c <wcrtomb@plt+0x96ec>  // b.none
  40e478:	add	x22, x24, #0x1
  40e47c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40e480:	add	x1, x1, #0x179
  40e484:	mov	w2, #0x7                   	// #7
  40e488:	mov	x0, x22
  40e48c:	bl	4045a0 <strncmp@plt>
  40e490:	cbz	w0, 40e520 <wcrtomb@plt+0x9700>
  40e494:	mov	x0, x22
  40e498:	bl	404190 <strlen@plt>
  40e49c:	ldrb	w8, [x24, x0]
  40e4a0:	cmp	w8, #0x2f
  40e4a4:	b.ne	40e4e0 <wcrtomb@plt+0x96c0>  // b.any
  40e4a8:	sub	x23, x0, #0x1
  40e4ac:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  40e4b0:	mov	x1, x22
  40e4b4:	mov	x2, x23
  40e4b8:	mov	x24, x0
  40e4bc:	bl	404110 <memcpy@plt>
  40e4c0:	mov	x0, x20
  40e4c4:	mov	x1, x24
  40e4c8:	strb	wzr, [x24, x23]
  40e4cc:	bl	432764 <argp_usage@@Base+0xb68>
  40e4d0:	mov	w8, #0x8                   	// #8
  40e4d4:	movk	w8, #0x400, lsl #16
  40e4d8:	orr	w21, w21, w8
  40e4dc:	mov	x22, x24
  40e4e0:	ldr	w8, [x19]
  40e4e4:	mov	w9, #0x8000000             	// #134217728
  40e4e8:	mov	w10, #0xf7ffffff            	// #-134217729
  40e4ec:	mov	x0, x20
  40e4f0:	cmp	w8, w9
  40e4f4:	mov	w9, #0xefffffff            	// #-268435457
  40e4f8:	csel	w9, w9, w10, eq  // eq = none
  40e4fc:	and	w9, w9, w21
  40e500:	orr	w2, w9, w8
  40e504:	mov	x1, x22
  40e508:	bl	432c64 <argp_usage@@Base+0x1068>
  40e50c:	ldp	x20, x19, [sp, #48]
  40e510:	ldp	x22, x21, [sp, #32]
  40e514:	ldp	x24, x23, [sp, #16]
  40e518:	ldp	x29, x30, [sp], #64
  40e51c:	ret
  40e520:	add	x20, x24, #0x7
  40e524:	ldrb	w8, [x20, #1]!
  40e528:	ldrh	w8, [x23, x8, lsl #1]
  40e52c:	tbnz	w8, #13, 40e524 <wcrtomb@plt+0x9704>
  40e530:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40e534:	add	x1, x1, #0x181
  40e538:	mov	x0, x20
  40e53c:	bl	404920 <strcmp@plt>
  40e540:	cbz	w0, 40e564 <wcrtomb@plt+0x9744>
  40e544:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40e548:	add	x1, x1, #0x188
  40e54c:	mov	x0, x20
  40e550:	bl	404920 <strcmp@plt>
  40e554:	cbnz	w0, 40e50c <wcrtomb@plt+0x96ec>
  40e558:	mov	w8, #0x10000000            	// #268435456
  40e55c:	str	w8, [x19]
  40e560:	b	40e50c <wcrtomb@plt+0x96ec>
  40e564:	mov	w8, #0x8000000             	// #134217728
  40e568:	str	w8, [x19]
  40e56c:	b	40e50c <wcrtomb@plt+0x96ec>
  40e570:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e574:	add	x8, x8, #0x810
  40e578:	cmp	x0, #0x0
  40e57c:	csel	x0, x8, x0, eq  // eq = none
  40e580:	mov	w8, #0x8000000             	// #134217728
  40e584:	str	w8, [x0]
  40e588:	ret
  40e58c:	stp	x29, x30, [sp, #-32]!
  40e590:	str	x19, [sp, #16]
  40e594:	mov	x29, sp
  40e598:	bl	404280 <geteuid@plt>
  40e59c:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  40e5a0:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40e5a4:	ldr	w10, [x19, #612]
  40e5a8:	ldr	w11, [x9, #980]
  40e5ac:	cmp	w0, #0x0
  40e5b0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e5b4:	cset	w12, eq  // eq = none
  40e5b8:	strb	w12, [x8, #2072]
  40e5bc:	cinc	w8, w10, eq  // eq = none
  40e5c0:	cinc	w10, w11, eq  // eq = none
  40e5c4:	mov	w0, wzr
  40e5c8:	str	w8, [x19, #612]
  40e5cc:	str	w10, [x9, #980]
  40e5d0:	bl	404cb0 <umask@plt>
  40e5d4:	ldr	w9, [x19, #612]
  40e5d8:	mov	w8, wzr
  40e5dc:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e5e0:	str	w0, [x19, #2076]
  40e5e4:	cmp	w9, #0x0
  40e5e8:	b.gt	40e5f4 <wcrtomb@plt+0x97d4>
  40e5ec:	bl	404cb0 <umask@plt>
  40e5f0:	ldr	w8, [x19, #2076]
  40e5f4:	ldr	x19, [sp, #16]
  40e5f8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e5fc:	str	w8, [x9, #2080]
  40e600:	ldp	x29, x30, [sp], #32
  40e604:	ret
  40e608:	stp	x29, x30, [sp, #-64]!
  40e60c:	stp	x22, x21, [sp, #32]
  40e610:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e614:	stp	x20, x19, [sp, #48]
  40e618:	ldr	x19, [x21, #2088]
  40e61c:	stp	x24, x23, [sp, #16]
  40e620:	mov	x29, sp
  40e624:	cbz	x19, 40e680 <wcrtomb@plt+0x9860>
  40e628:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e62c:	ldr	w23, [x8]
  40e630:	mov	x20, x0
  40e634:	mov	x22, xzr
  40e638:	b	40e648 <wcrtomb@plt+0x9828>
  40e63c:	mov	x22, x19
  40e640:	mov	x19, x24
  40e644:	cbz	x24, 40e680 <wcrtomb@plt+0x9860>
  40e648:	ldr	w8, [x19, #92]
  40e64c:	ldr	x24, [x19]
  40e650:	cmp	w23, w8
  40e654:	b.ne	40e63c <wcrtomb@plt+0x981c>  // b.any
  40e658:	ldr	x0, [x19, #160]
  40e65c:	mov	x1, x20
  40e660:	bl	404920 <strcmp@plt>
  40e664:	cbnz	w0, 40e63c <wcrtomb@plt+0x981c>
  40e668:	mov	x0, x19
  40e66c:	bl	40e694 <wcrtomb@plt+0x9874>
  40e670:	cbz	x22, 40e67c <wcrtomb@plt+0x985c>
  40e674:	str	x24, [x22]
  40e678:	b	40e680 <wcrtomb@plt+0x9860>
  40e67c:	str	x24, [x21, #2088]
  40e680:	ldp	x20, x19, [sp, #48]
  40e684:	ldp	x22, x21, [sp, #32]
  40e688:	ldp	x24, x23, [sp, #16]
  40e68c:	ldp	x29, x30, [sp], #64
  40e690:	ret
  40e694:	stp	x29, x30, [sp, #-32]!
  40e698:	str	x19, [sp, #16]
  40e69c:	mov	x19, x0
  40e6a0:	ldr	x0, [x0, #160]
  40e6a4:	mov	x29, sp
  40e6a8:	bl	4049d0 <free@plt>
  40e6ac:	ldp	x1, x0, [x19, #136]
  40e6b0:	bl	411a44 <wcrtomb@plt+0xcc24>
  40e6b4:	ldr	x0, [x19, #96]
  40e6b8:	bl	4049d0 <free@plt>
  40e6bc:	ldr	x0, [x19, #104]
  40e6c0:	bl	4049d0 <free@plt>
  40e6c4:	ldr	x0, [x19, #120]
  40e6c8:	bl	4049d0 <free@plt>
  40e6cc:	mov	x0, x19
  40e6d0:	bl	4049d0 <free@plt>
  40e6d4:	ldr	x19, [sp, #16]
  40e6d8:	ldp	x29, x30, [sp], #32
  40e6dc:	ret
  40e6e0:	sub	sp, sp, #0x40
  40e6e4:	stp	x22, x21, [sp, #32]
  40e6e8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e6ec:	ldr	x0, [x21, #4072]
  40e6f0:	adrp	x9, 40e000 <wcrtomb@plt+0x91e0>
  40e6f4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e6f8:	add	x9, x9, #0x904
  40e6fc:	stp	x29, x30, [sp, #16]
  40e700:	stp	x20, x19, [sp, #48]
  40e704:	add	x29, sp, #0x10
  40e708:	str	x9, [x8, #4040]
  40e70c:	bl	405744 <wcrtomb@plt+0x924>
  40e710:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e714:	ldrb	w8, [x8, #952]
  40e718:	cbz	w8, 40e728 <wcrtomb@plt+0x9908>
  40e71c:	mov	w19, wzr
  40e720:	tbnz	w19, #0, 40e73c <wcrtomb@plt+0x991c>
  40e724:	b	40e794 <wcrtomb@plt+0x9974>
  40e728:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e72c:	ldr	x0, [x8, #96]
  40e730:	bl	41c6ec <wcrtomb@plt+0x178cc>
  40e734:	mov	w19, w0
  40e738:	tbz	w19, #0, 40e794 <wcrtomb@plt+0x9974>
  40e73c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e740:	ldr	x8, [x8, #1008]
  40e744:	cbz	x8, 40e74c <wcrtomb@plt+0x992c>
  40e748:	blr	x8
  40e74c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40e750:	add	x1, x1, #0x212
  40e754:	mov	w2, #0x5                   	// #5
  40e758:	mov	x0, xzr
  40e75c:	bl	404bf0 <dcgettext@plt>
  40e760:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e764:	ldr	x8, [x8, #96]
  40e768:	mov	x20, x0
  40e76c:	mov	x0, x8
  40e770:	bl	43beac <argp_usage@@Base+0xa2b0>
  40e774:	mov	x3, x0
  40e778:	mov	w0, wzr
  40e77c:	mov	w1, wzr
  40e780:	mov	x2, x20
  40e784:	bl	4041f0 <error@plt>
  40e788:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e78c:	mov	w9, #0x2                   	// #2
  40e790:	str	w9, [x8, #3456]
  40e794:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  40e798:	ldr	x1, [x20, #104]
  40e79c:	ldrb	w8, [x1]
  40e7a0:	cmp	w8, #0x0
  40e7a4:	cset	w8, eq  // eq = none
  40e7a8:	orr	w8, w19, w8
  40e7ac:	tbz	w8, #0, 40e7c8 <wcrtomb@plt+0x99a8>
  40e7b0:	bl	417ab0 <wcrtomb@plt+0x12c90>
  40e7b4:	ldp	x20, x19, [sp, #48]
  40e7b8:	ldp	x22, x21, [sp, #32]
  40e7bc:	ldp	x29, x30, [sp, #16]
  40e7c0:	add	sp, sp, #0x40
  40e7c4:	ret
  40e7c8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e7cc:	ldrb	w8, [x8, #592]
  40e7d0:	cbz	w8, 40e7e4 <wcrtomb@plt+0x99c4>
  40e7d4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  40e7d8:	add	x0, x0, #0x230
  40e7dc:	bl	4211d4 <wcrtomb@plt+0x1c3b4>
  40e7e0:	cbz	w0, 40e7b0 <wcrtomb@plt+0x9990>
  40e7e4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e7e8:	ldr	w8, [x8, #644]
  40e7ec:	cbz	w8, 40e804 <wcrtomb@plt+0x99e4>
  40e7f0:	ldr	x1, [x21, #4072]
  40e7f4:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  40e7f8:	add	x0, x0, #0x60
  40e7fc:	mov	x2, #0xffffffffffffffff    	// #-1
  40e800:	bl	417bac <wcrtomb@plt+0x12d8c>
  40e804:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e808:	ldrb	w8, [x8, #968]
  40e80c:	cbnz	w8, 40e82c <wcrtomb@plt+0x9a0c>
  40e810:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e814:	ldr	x0, [x20, #104]
  40e818:	ldr	w19, [x8]
  40e81c:	mov	w1, wzr
  40e820:	bl	40e940 <wcrtomb@plt+0x9b20>
  40e824:	mov	w0, w19
  40e828:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  40e82c:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  40e830:	ldrb	w8, [x22, #757]
  40e834:	cbz	w8, 40e848 <wcrtomb@plt+0x9a28>
  40e838:	ldr	x0, [x20, #104]
  40e83c:	mov	w1, wzr
  40e840:	bl	41a318 <wcrtomb@plt+0x154f8>
  40e844:	tbz	w0, #0, 40e8a4 <wcrtomb@plt+0x9a84>
  40e848:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  40e84c:	add	x0, x0, #0x60
  40e850:	bl	41d86c <wcrtomb@plt+0x18a4c>
  40e854:	tbz	w0, #0, 40e860 <wcrtomb@plt+0x9a40>
  40e858:	mov	w19, #0x53                  	// #83
  40e85c:	b	40e868 <wcrtomb@plt+0x9a48>
  40e860:	ldr	x8, [x21, #4072]
  40e864:	ldrb	w19, [x8, #156]
  40e868:	ldr	x0, [x20, #104]
  40e86c:	add	x2, sp, #0x8
  40e870:	mov	w1, w19
  40e874:	bl	40eb84 <wcrtomb@plt+0x9d64>
  40e878:	cbz	w0, 40e7b0 <wcrtomb@plt+0x9990>
  40e87c:	ldr	x8, [sp, #8]
  40e880:	cbz	x8, 40e7b4 <wcrtomb@plt+0x9994>
  40e884:	ldr	x0, [x20, #104]
  40e888:	mov	w1, w19
  40e88c:	blr	x8
  40e890:	cbz	w0, 40e7b4 <wcrtomb@plt+0x9994>
  40e894:	ldrb	w8, [x22, #757]
  40e898:	cbz	w8, 40e7b4 <wcrtomb@plt+0x9994>
  40e89c:	bl	41a55c <wcrtomb@plt+0x1573c>
  40e8a0:	b	40e7b4 <wcrtomb@plt+0x9994>
  40e8a4:	bl	404d00 <__errno_location@plt>
  40e8a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40e8ac:	ldr	x8, [x8, #1008]
  40e8b0:	ldr	w19, [x0]
  40e8b4:	cbz	x8, 40e8bc <wcrtomb@plt+0x9a9c>
  40e8b8:	blr	x8
  40e8bc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40e8c0:	add	x1, x1, #0x238
  40e8c4:	mov	w2, #0x5                   	// #5
  40e8c8:	mov	x0, xzr
  40e8cc:	bl	404bf0 <dcgettext@plt>
  40e8d0:	ldr	x8, [x20, #104]
  40e8d4:	mov	x20, x0
  40e8d8:	mov	x0, x8
  40e8dc:	bl	43beac <argp_usage@@Base+0xa2b0>
  40e8e0:	mov	x3, x0
  40e8e4:	mov	w0, wzr
  40e8e8:	mov	w1, w19
  40e8ec:	mov	x2, x20
  40e8f0:	bl	4041f0 <error@plt>
  40e8f4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e8f8:	mov	w9, #0x2                   	// #2
  40e8fc:	str	w9, [x8, #3456]
  40e900:	b	40e7b0 <wcrtomb@plt+0x9990>
  40e904:	stp	x29, x30, [sp, #-32]!
  40e908:	str	x19, [sp, #16]
  40e90c:	adrp	x19, 456000 <_obstack_memory_used@@Base+0x17da0>
  40e910:	add	x19, x19, #0xd3e
  40e914:	mov	x0, x19
  40e918:	mov	w1, wzr
  40e91c:	mov	x29, sp
  40e920:	bl	40e940 <wcrtomb@plt+0x9b20>
  40e924:	bl	40eec0 <wcrtomb@plt+0xa0a0>
  40e928:	mov	w1, #0x1                   	// #1
  40e92c:	mov	x0, x19
  40e930:	bl	40e940 <wcrtomb@plt+0x9b20>
  40e934:	ldr	x19, [sp, #16]
  40e938:	ldp	x29, x30, [sp], #32
  40e93c:	ret
  40e940:	stp	x29, x30, [sp, #-96]!
  40e944:	stp	x28, x27, [sp, #16]
  40e948:	stp	x26, x25, [sp, #32]
  40e94c:	stp	x24, x23, [sp, #48]
  40e950:	stp	x22, x21, [sp, #64]
  40e954:	stp	x20, x19, [sp, #80]
  40e958:	mov	x29, sp
  40e95c:	sub	sp, sp, #0x240
  40e960:	mov	w22, w1
  40e964:	mov	x19, x0
  40e968:	bl	404190 <strlen@plt>
  40e96c:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40e970:	ldr	x21, [x25, #2088]
  40e974:	cbz	x21, 40eb64 <wcrtomb@plt+0x9d44>
  40e978:	add	x8, sp, #0x10
  40e97c:	mov	x20, x0
  40e980:	mov	w27, wzr
  40e984:	and	w26, w22, #0x1
  40e988:	add	x9, x8, #0xd8
  40e98c:	add	x28, x8, #0xe8
  40e990:	str	x9, [sp, #8]
  40e994:	b	40e9b0 <wcrtomb@plt+0x9b90>
  40e998:	ldr	x8, [x21]
  40e99c:	mov	x0, x21
  40e9a0:	str	x8, [x25, #2088]
  40e9a4:	bl	40e694 <wcrtomb@plt+0x9874>
  40e9a8:	ldr	x21, [x25, #2088]
  40e9ac:	cbz	x21, 40eb64 <wcrtomb@plt+0x9d44>
  40e9b0:	ldrb	w8, [x21, #88]
  40e9b4:	and	w9, w27, #0x1
  40e9b8:	orr	w22, w8, w9
  40e9bc:	cmp	w22, #0x0
  40e9c0:	cset	w27, ne  // ne = any
  40e9c4:	cmp	w8, w26
  40e9c8:	b.hi	40eb64 <wcrtomb@plt+0x9d44>  // b.pmore
  40e9cc:	ldr	x2, [x21, #152]
  40e9d0:	ldp	w23, w24, [x21, #72]
  40e9d4:	cmp	x2, x20
  40e9d8:	b.cs	40ea0c <wcrtomb@plt+0x9bec>  // b.hs, b.nlast
  40e9dc:	ldrb	w8, [x19, x2]
  40e9e0:	cbz	w8, 40ea0c <wcrtomb@plt+0x9bec>
  40e9e4:	cmp	w8, #0x2f
  40e9e8:	b.eq	40e9fc <wcrtomb@plt+0x9bdc>  // b.none
  40e9ec:	add	x8, x2, x19
  40e9f0:	ldurb	w8, [x8, #-1]
  40e9f4:	cmp	w8, #0x2f
  40e9f8:	b.ne	40ea0c <wcrtomb@plt+0x9bec>  // b.any
  40e9fc:	ldr	x1, [x21, #160]
  40ea00:	mov	x0, x19
  40ea04:	bl	4046d0 <bcmp@plt>
  40ea08:	cbz	w0, 40eb64 <wcrtomb@plt+0x9d44>
  40ea0c:	ldr	w0, [x21, #92]
  40ea10:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  40ea14:	cbz	w22, 40ea40 <wcrtomb@plt+0x9c20>
  40ea18:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40ea1c:	ldr	w0, [x8, #2240]
  40ea20:	ldr	x1, [x21, #160]
  40ea24:	ldr	w3, [x21, #84]
  40ea28:	sub	x2, x29, #0x88
  40ea2c:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  40ea30:	cbz	w0, 40ea48 <wcrtomb@plt+0x9c28>
  40ea34:	ldr	x0, [x21, #160]
  40ea38:	bl	4286a4 <wcrtomb@plt+0x23884>
  40ea3c:	b	40ead0 <wcrtomb@plt+0x9cb0>
  40ea40:	mov	w8, wzr
  40ea44:	b	40ead4 <wcrtomb@plt+0x9cb4>
  40ea48:	ldur	x8, [x29, #-136]
  40ea4c:	ldr	x9, [x21, #8]
  40ea50:	ldur	w23, [x29, #-120]
  40ea54:	cmp	x8, x9
  40ea58:	b.ne	40ea78 <wcrtomb@plt+0x9c58>  // b.any
  40ea5c:	ldur	x8, [x29, #-128]
  40ea60:	ldr	x9, [x21, #16]
  40ea64:	cmp	x8, x9
  40ea68:	b.ne	40ea78 <wcrtomb@plt+0x9c58>  // b.any
  40ea6c:	mov	w8, wzr
  40ea70:	mov	w24, #0xffffffff            	// #-1
  40ea74:	b	40ead4 <wcrtomb@plt+0x9cb4>
  40ea78:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ea7c:	ldr	x8, [x8, #1008]
  40ea80:	cbz	x8, 40ea88 <wcrtomb@plt+0x9c68>
  40ea84:	blr	x8
  40ea88:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40ea8c:	mov	w2, #0x5                   	// #5
  40ea90:	mov	x0, xzr
  40ea94:	add	x1, x1, #0x272
  40ea98:	bl	404bf0 <dcgettext@plt>
  40ea9c:	ldr	x8, [x21, #160]
  40eaa0:	mov	x24, x0
  40eaa4:	mov	x0, x8
  40eaa8:	bl	43beac <argp_usage@@Base+0xa2b0>
  40eaac:	mov	x3, x0
  40eab0:	mov	w0, wzr
  40eab4:	mov	w1, wzr
  40eab8:	mov	x2, x24
  40eabc:	bl	4041f0 <error@plt>
  40eac0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40eac4:	mov	w9, #0x2                   	// #2
  40eac8:	mov	w24, #0xffffffff            	// #-1
  40eacc:	str	w9, [x8, #3456]
  40ead0:	mov	w8, #0x1                   	// #1
  40ead4:	tbnz	w8, #0, 40e998 <wcrtomb@plt+0x9b78>
  40ead8:	ldr	w8, [x21, #24]
  40eadc:	add	x1, sp, #0x10
  40eae0:	mov	w2, #0xffffffff            	// #-1
  40eae4:	mov	w5, #0x35                  	// #53
  40eae8:	str	w8, [sp, #120]
  40eaec:	ldr	w8, [x21, #28]
  40eaf0:	mov	w3, w23
  40eaf4:	mov	w4, w24
  40eaf8:	str	w8, [sp, #128]
  40eafc:	ldr	w8, [x21, #32]
  40eb00:	str	w8, [sp, #132]
  40eb04:	ldur	q0, [x21, #40]
  40eb08:	ldr	x8, [sp, #8]
  40eb0c:	str	q0, [x8]
  40eb10:	ldur	q0, [x21, #56]
  40eb14:	str	q0, [x28]
  40eb18:	ldr	x8, [x21, #96]
  40eb1c:	str	x8, [sp, #64]
  40eb20:	ldr	x8, [x21, #104]
  40eb24:	str	x8, [sp, #72]
  40eb28:	ldr	x8, [x21, #112]
  40eb2c:	str	x8, [sp, #80]
  40eb30:	ldr	x8, [x21, #120]
  40eb34:	str	x8, [sp, #88]
  40eb38:	ldr	x8, [x21, #128]
  40eb3c:	str	x8, [sp, #96]
  40eb40:	ldr	x8, [x21, #144]
  40eb44:	str	x8, [sp, #352]
  40eb48:	ldr	x8, [x21, #136]
  40eb4c:	str	x8, [sp, #344]
  40eb50:	ldr	x0, [x21, #160]
  40eb54:	ldrb	w6, [x21, #80]
  40eb58:	ldr	w7, [x21, #84]
  40eb5c:	bl	40f484 <wcrtomb@plt+0xa664>
  40eb60:	b	40e998 <wcrtomb@plt+0x9b78>
  40eb64:	add	sp, sp, #0x240
  40eb68:	ldp	x20, x19, [sp, #80]
  40eb6c:	ldp	x22, x21, [sp, #64]
  40eb70:	ldp	x24, x23, [sp, #48]
  40eb74:	ldp	x26, x25, [sp, #32]
  40eb78:	ldp	x28, x27, [sp, #16]
  40eb7c:	ldp	x29, x30, [sp], #96
  40eb80:	ret
  40eb84:	stp	x29, x30, [sp, #-64]!
  40eb88:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40eb8c:	ldrb	w8, [x8, #625]
  40eb90:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40eb94:	ldr	x9, [x9, #616]
  40eb98:	str	x23, [sp, #16]
  40eb9c:	cmp	w8, #0x0
  40eba0:	cset	w8, eq  // eq = none
  40eba4:	cmp	x9, #0x0
  40eba8:	cset	w9, eq  // eq = none
  40ebac:	stp	x22, x21, [sp, #32]
  40ebb0:	stp	x20, x19, [sp, #48]
  40ebb4:	mov	x20, x2
  40ebb8:	mov	w21, w1
  40ebbc:	mov	x19, x0
  40ebc0:	cmp	w1, #0x56
  40ebc4:	and	w23, w8, w9
  40ebc8:	mov	x29, sp
  40ebcc:	b.hi	40ec98 <wcrtomb@plt+0x9e78>  // b.pmore
  40ebd0:	adrp	x9, 451000 <_obstack_memory_used@@Base+0x12da0>
  40ebd4:	mov	w8, w21
  40ebd8:	add	x9, x9, #0x18d
  40ebdc:	adr	x10, 40ebec <wcrtomb@plt+0x9dcc>
  40ebe0:	ldrb	w11, [x9, x8]
  40ebe4:	add	x10, x10, x11, lsl #2
  40ebe8:	br	x10
  40ebec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ebf0:	ldrb	w8, [x8, #112]
  40ebf4:	cbz	w8, 40ec0c <wcrtomb@plt+0x9dec>
  40ebf8:	adrp	x8, 40f000 <wcrtomb@plt+0xa1e0>
  40ebfc:	add	x8, x8, #0xddc
  40ec00:	str	x8, [x20]
  40ec04:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40ec08:	b	40eea8 <wcrtomb@plt+0xa088>
  40ec0c:	adrp	x8, 40f000 <wcrtomb@plt+0xa1e0>
  40ec10:	add	x8, x8, #0xaf0
  40ec14:	str	x8, [x20]
  40ec18:	mov	w23, #0x1                   	// #1
  40ec1c:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40ec20:	b	40eea8 <wcrtomb@plt+0xa088>
  40ec24:	adrp	x8, 40f000 <wcrtomb@plt+0xa1e0>
  40ec28:	add	x8, x8, #0xddc
  40ec2c:	str	x8, [x20]
  40ec30:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ec34:	ldrb	w8, [x8, #472]
  40ec38:	cbz	w8, 40eddc <wcrtomb@plt+0x9fbc>
  40ec3c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ec40:	mov	w9, #0x1                   	// #1
  40ec44:	strb	w9, [x8, #968]
  40ec48:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40ec4c:	b	40eea8 <wcrtomb@plt+0xa088>
  40ec50:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ec54:	ldr	x8, [x8, #1008]
  40ec58:	cbz	x8, 40ec60 <wcrtomb@plt+0x9e40>
  40ec5c:	blr	x8
  40ec60:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40ec64:	add	x1, x1, #0x333
  40ec68:	mov	w2, #0x5                   	// #5
  40ec6c:	mov	x0, xzr
  40ec70:	bl	404bf0 <dcgettext@plt>
  40ec74:	mov	x2, x0
  40ec78:	mov	w0, wzr
  40ec7c:	mov	w1, wzr
  40ec80:	bl	4041f0 <error@plt>
  40ec84:	adrp	x10, 410000 <wcrtomb@plt+0xb1e0>
  40ec88:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40ec8c:	mov	w9, #0x2                   	// #2
  40ec90:	add	x10, x10, #0x524
  40ec94:	b	40edd4 <wcrtomb@plt+0x9fb4>
  40ec98:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40ec9c:	ldrb	w8, [x8, #450]
  40eca0:	tbz	w8, #0, 40ecec <wcrtomb@plt+0x9ecc>
  40eca4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40eca8:	ldr	x8, [x8, #1008]
  40ecac:	cbz	x8, 40ecb4 <wcrtomb@plt+0x9e94>
  40ecb0:	blr	x8
  40ecb4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40ecb8:	add	x1, x1, #0x34f
  40ecbc:	mov	w2, #0x5                   	// #5
  40ecc0:	mov	x0, xzr
  40ecc4:	bl	404bf0 <dcgettext@plt>
  40ecc8:	mov	x22, x0
  40eccc:	mov	x0, x19
  40ecd0:	bl	43beac <argp_usage@@Base+0xa2b0>
  40ecd4:	mov	x3, x0
  40ecd8:	mov	w0, wzr
  40ecdc:	mov	w1, wzr
  40ece0:	mov	x2, x22
  40ece4:	mov	w4, w21
  40ece8:	bl	4041f0 <error@plt>
  40ecec:	adrp	x8, 40f000 <wcrtomb@plt+0xa1e0>
  40ecf0:	add	x8, x8, #0xaf0
  40ecf4:	str	x8, [x20]
  40ecf8:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40ecfc:	b	40eea8 <wcrtomb@plt+0xa088>
  40ed00:	adrp	x8, 410000 <wcrtomb@plt+0xb1e0>
  40ed04:	add	x8, x8, #0x130
  40ed08:	str	x8, [x20]
  40ed0c:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40ed10:	b	40eea8 <wcrtomb@plt+0xa088>
  40ed14:	adrp	x8, 410000 <wcrtomb@plt+0xb1e0>
  40ed18:	add	x8, x8, #0x58
  40ed1c:	str	x8, [x20]
  40ed20:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40ed24:	b	40eea8 <wcrtomb@plt+0xa088>
  40ed28:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ed2c:	ldr	w9, [x8, #200]
  40ed30:	adrp	x10, 410000 <wcrtomb@plt+0xb1e0>
  40ed34:	add	x10, x10, #0x348
  40ed38:	orr	w9, w9, #0x2000
  40ed3c:	b	40ed54 <wcrtomb@plt+0x9f34>
  40ed40:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ed44:	ldr	w9, [x8, #200]
  40ed48:	adrp	x10, 410000 <wcrtomb@plt+0xb1e0>
  40ed4c:	add	x10, x10, #0x348
  40ed50:	orr	w9, w9, #0x6000
  40ed54:	str	w9, [x8, #200]
  40ed58:	str	x10, [x20]
  40ed5c:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40ed60:	b	40eea8 <wcrtomb@plt+0xa088>
  40ed64:	adrp	x8, 410000 <wcrtomb@plt+0xb1e0>
  40ed68:	add	x8, x8, #0x424
  40ed6c:	str	x8, [x20]
  40ed70:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40ed74:	b	40eea8 <wcrtomb@plt+0xa088>
  40ed78:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ed7c:	ldr	x8, [x8, #1008]
  40ed80:	cbz	x8, 40ed88 <wcrtomb@plt+0x9f68>
  40ed84:	blr	x8
  40ed88:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40ed8c:	add	x1, x1, #0x2f7
  40ed90:	mov	w2, #0x5                   	// #5
  40ed94:	mov	x0, xzr
  40ed98:	bl	404bf0 <dcgettext@plt>
  40ed9c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40eda0:	ldr	x8, [x8, #104]
  40eda4:	mov	x21, x0
  40eda8:	mov	x0, x8
  40edac:	bl	43beac <argp_usage@@Base+0xa2b0>
  40edb0:	mov	x3, x0
  40edb4:	mov	w0, wzr
  40edb8:	mov	w1, wzr
  40edbc:	mov	x2, x21
  40edc0:	bl	4041f0 <error@plt>
  40edc4:	adrp	x10, 410000 <wcrtomb@plt+0xb1e0>
  40edc8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40edcc:	mov	w9, #0x2                   	// #2
  40edd0:	add	x10, x10, #0x50c
  40edd4:	str	w9, [x8, #3456]
  40edd8:	str	x10, [x20]
  40eddc:	cbz	w23, 40eea8 <wcrtomb@plt+0xa088>
  40ede0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ede4:	ldr	w8, [x8, #752]
  40ede8:	cmp	w8, #0x6
  40edec:	b.eq	40ee2c <wcrtomb@plt+0xa00c>  // b.none
  40edf0:	cmp	w8, #0x3
  40edf4:	b.ne	40ee90 <wcrtomb@plt+0xa070>  // b.any
  40edf8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40edfc:	ldrb	w1, [x8, #34]
  40ee00:	mov	x0, x19
  40ee04:	bl	41a070 <wcrtomb@plt+0x15250>
  40ee08:	cbnz	w0, 40ee90 <wcrtomb@plt+0xa070>
  40ee0c:	bl	404d00 <__errno_location@plt>
  40ee10:	ldr	w8, [x0]
  40ee14:	orr	w8, w8, #0x2
  40ee18:	cmp	w8, #0x2
  40ee1c:	b.eq	40ee90 <wcrtomb@plt+0xa070>  // b.none
  40ee20:	mov	x0, x19
  40ee24:	bl	428724 <wcrtomb@plt+0x23904>
  40ee28:	b	40eea8 <wcrtomb@plt+0xa088>
  40ee2c:	mov	x0, x19
  40ee30:	mov	x1, xzr
  40ee34:	bl	41052c <wcrtomb@plt+0xb70c>
  40ee38:	tbz	w0, #0, 40ee90 <wcrtomb@plt+0xa070>
  40ee3c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40ee40:	ldrb	w8, [x8, #449]
  40ee44:	tbz	w8, #3, 40eea8 <wcrtomb@plt+0xa088>
  40ee48:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ee4c:	ldr	x8, [x8, #1008]
  40ee50:	cbz	x8, 40ee58 <wcrtomb@plt+0xa038>
  40ee54:	blr	x8
  40ee58:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40ee5c:	add	x1, x1, #0x384
  40ee60:	mov	w2, #0x5                   	// #5
  40ee64:	mov	x0, xzr
  40ee68:	bl	404bf0 <dcgettext@plt>
  40ee6c:	mov	x20, x0
  40ee70:	mov	x0, x19
  40ee74:	bl	43c05c <argp_usage@@Base+0xa460>
  40ee78:	mov	x3, x0
  40ee7c:	mov	w0, wzr
  40ee80:	mov	w1, wzr
  40ee84:	mov	x2, x20
  40ee88:	bl	4041f0 <error@plt>
  40ee8c:	b	40eea8 <wcrtomb@plt+0xa088>
  40ee90:	mov	w0, #0x1                   	// #1
  40ee94:	b	40eeac <wcrtomb@plt+0xa08c>
  40ee98:	adrp	x8, 410000 <wcrtomb@plt+0xb1e0>
  40ee9c:	add	x8, x8, #0x4f4
  40eea0:	str	x8, [x20]
  40eea4:	cbnz	w23, 40ede0 <wcrtomb@plt+0x9fc0>
  40eea8:	mov	w0, wzr
  40eeac:	ldp	x20, x19, [sp, #48]
  40eeb0:	ldp	x22, x21, [sp, #32]
  40eeb4:	ldr	x23, [sp, #16]
  40eeb8:	ldp	x29, x30, [sp], #64
  40eebc:	ret
  40eec0:	stp	x29, x30, [sp, #-96]!
  40eec4:	stp	x28, x27, [sp, #16]
  40eec8:	stp	x26, x25, [sp, #32]
  40eecc:	stp	x24, x23, [sp, #48]
  40eed0:	stp	x22, x21, [sp, #64]
  40eed4:	stp	x20, x19, [sp, #80]
  40eed8:	mov	x29, sp
  40eedc:	sub	sp, sp, #0x230
  40eee0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40eee4:	ldr	x19, [x8, #2104]
  40eee8:	cbz	x19, 40f0dc <wcrtomb@plt+0xa2bc>
  40eeec:	mov	x8, sp
  40eef0:	add	x24, x8, #0xd8
  40eef4:	add	x25, x8, #0xe8
  40eef8:	adrp	x26, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40eefc:	b	40ef24 <wcrtomb@plt+0xa104>
  40ef00:	ldp	x1, x0, [x19, #144]
  40ef04:	bl	411a44 <wcrtomb@plt+0xcc24>
  40ef08:	ldr	x0, [x19, #104]
  40ef0c:	bl	4049d0 <free@plt>
  40ef10:	ldr	x20, [x19]
  40ef14:	mov	x0, x19
  40ef18:	bl	4049d0 <free@plt>
  40ef1c:	mov	x19, x20
  40ef20:	cbz	x20, 40f0dc <wcrtomb@plt+0xa2bc>
  40ef24:	ldr	w0, [x19, #88]
  40ef28:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  40ef2c:	ldr	x27, [x19, #96]
  40ef30:	cbz	x27, 40f0c0 <wcrtomb@plt+0xa2a0>
  40ef34:	mov	x21, xzr
  40ef38:	add	x20, x19, #0xa0
  40ef3c:	add	x28, x19, #0x38
  40ef40:	add	x23, x19, #0x48
  40ef44:	b	40ef58 <wcrtomb@plt+0xa138>
  40ef48:	mov	x0, x22
  40ef4c:	bl	428724 <wcrtomb@plt+0x23904>
  40ef50:	ldr	x27, [x27]
  40ef54:	cbz	x27, 40f0c0 <wcrtomb@plt+0xa2a0>
  40ef58:	ldr	w0, [x26, #2240]
  40ef5c:	add	x22, x27, #0x8
  40ef60:	sub	x2, x29, #0x88
  40ef64:	mov	w3, #0x100                 	// #256
  40ef68:	mov	x1, x22
  40ef6c:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  40ef70:	cbnz	w0, 40ef50 <wcrtomb@plt+0xa130>
  40ef74:	ldur	x8, [x29, #-136]
  40ef78:	ldr	x9, [x19, #8]
  40ef7c:	cmp	x8, x9
  40ef80:	b.ne	40ef50 <wcrtomb@plt+0xa130>  // b.any
  40ef84:	ldur	x8, [x29, #-128]
  40ef88:	ldr	x9, [x19, #16]
  40ef8c:	cmp	x8, x9
  40ef90:	b.ne	40ef50 <wcrtomb@plt+0xa130>  // b.any
  40ef94:	sub	x0, x29, #0x88
  40ef98:	bl	43cc90 <argp_usage@@Base+0xb094>
  40ef9c:	ldp	x2, x3, [x19, #24]
  40efa0:	bl	43cd0c <argp_usage@@Base+0xb110>
  40efa4:	cbnz	w0, 40ef50 <wcrtomb@plt+0xa130>
  40efa8:	ldr	w0, [x26, #2240]
  40efac:	mov	x1, x22
  40efb0:	mov	w2, wzr
  40efb4:	bl	404320 <unlinkat@plt>
  40efb8:	cbnz	w0, 40ef48 <wcrtomb@plt+0xa128>
  40efbc:	cbz	x21, 40efdc <wcrtomb@plt+0xa1bc>
  40efc0:	ldr	w0, [x26, #2240]
  40efc4:	mov	x1, x21
  40efc8:	mov	x3, x22
  40efcc:	mov	w4, wzr
  40efd0:	mov	w2, w0
  40efd4:	bl	404290 <linkat@plt>
  40efd8:	cbz	w0, 40ef50 <wcrtomb@plt+0xa130>
  40efdc:	ldrb	w8, [x19, #40]
  40efe0:	ldr	w2, [x26, #2240]
  40efe4:	cbz	w8, 40f00c <wcrtomb@plt+0xa1ec>
  40efe8:	mov	x0, x20
  40efec:	mov	w1, w2
  40eff0:	mov	x2, x22
  40eff4:	bl	404c70 <symlinkat@plt>
  40eff8:	cbz	w0, 40f034 <wcrtomb@plt+0xa214>
  40effc:	mov	x0, x20
  40f000:	mov	x1, x22
  40f004:	bl	4285f8 <wcrtomb@plt+0x237d8>
  40f008:	b	40ef50 <wcrtomb@plt+0xa130>
  40f00c:	mov	w0, w2
  40f010:	mov	x1, x20
  40f014:	mov	x3, x22
  40f018:	mov	w4, wzr
  40f01c:	bl	404290 <linkat@plt>
  40f020:	cbz	w0, 40ef50 <wcrtomb@plt+0xa130>
  40f024:	mov	x0, x20
  40f028:	mov	x1, x22
  40f02c:	bl	42806c <wcrtomb@plt+0x2324c>
  40f030:	b	40ef50 <wcrtomb@plt+0xa130>
  40f034:	ldr	w8, [x19, #44]
  40f038:	mov	x1, sp
  40f03c:	mov	w2, #0xffffffff            	// #-1
  40f040:	mov	w5, #0x32                  	// #50
  40f044:	str	w8, [sp, #104]
  40f048:	ldr	w8, [x19, #48]
  40f04c:	mov	w7, #0x100                 	// #256
  40f050:	mov	x0, x22
  40f054:	mov	w3, wzr
  40f058:	str	w8, [sp, #112]
  40f05c:	ldr	w8, [x19, #52]
  40f060:	mov	w4, wzr
  40f064:	mov	w6, wzr
  40f068:	str	w8, [sp, #116]
  40f06c:	ldr	q0, [x28]
  40f070:	str	q0, [x24]
  40f074:	ldr	q0, [x23]
  40f078:	str	q0, [x25]
  40f07c:	ldr	x8, [x19, #104]
  40f080:	str	x8, [sp, #48]
  40f084:	ldr	x8, [x19, #112]
  40f088:	str	x8, [sp, #56]
  40f08c:	ldr	x8, [x19, #120]
  40f090:	str	x8, [sp, #64]
  40f094:	ldr	x8, [x19, #128]
  40f098:	str	x8, [sp, #72]
  40f09c:	ldr	x8, [x19, #136]
  40f0a0:	str	x8, [sp, #80]
  40f0a4:	ldr	x8, [x19, #152]
  40f0a8:	str	x8, [sp, #336]
  40f0ac:	ldr	x8, [x19, #144]
  40f0b0:	str	x8, [sp, #328]
  40f0b4:	bl	40f484 <wcrtomb@plt+0xa664>
  40f0b8:	mov	x21, x22
  40f0bc:	b	40ef50 <wcrtomb@plt+0xa130>
  40f0c0:	ldr	x0, [x19, #96]
  40f0c4:	cbz	x0, 40ef00 <wcrtomb@plt+0xa0e0>
  40f0c8:	ldr	x20, [x0]
  40f0cc:	bl	4049d0 <free@plt>
  40f0d0:	mov	x0, x20
  40f0d4:	cbnz	x20, 40f0c8 <wcrtomb@plt+0xa2a8>
  40f0d8:	b	40ef00 <wcrtomb@plt+0xa0e0>
  40f0dc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f0e0:	str	xzr, [x8, #2104]
  40f0e4:	add	sp, sp, #0x230
  40f0e8:	ldp	x20, x19, [sp, #80]
  40f0ec:	ldp	x22, x21, [sp, #64]
  40f0f0:	ldp	x24, x23, [sp, #48]
  40f0f4:	ldp	x26, x25, [sp, #32]
  40f0f8:	ldp	x28, x27, [sp, #16]
  40f0fc:	ldp	x29, x30, [sp], #96
  40f100:	ret
  40f104:	stp	x29, x30, [sp, #-64]!
  40f108:	str	x23, [sp, #16]
  40f10c:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40f110:	ldr	w2, [x23, #2240]
  40f114:	stp	x20, x19, [sp, #48]
  40f118:	mov	x19, x1
  40f11c:	mov	x20, x0
  40f120:	mov	w0, w2
  40f124:	mov	x1, x20
  40f128:	mov	x3, x19
  40f12c:	stp	x22, x21, [sp, #32]
  40f130:	mov	x29, sp
  40f134:	bl	404a20 <renameat@plt>
  40f138:	cbz	w0, 40f168 <wcrtomb@plt+0xa348>
  40f13c:	bl	404d00 <__errno_location@plt>
  40f140:	ldr	w21, [x0]
  40f144:	cmp	w21, #0x2
  40f148:	b.ne	40f198 <wcrtomb@plt+0xa378>  // b.any
  40f14c:	mov	x22, x0
  40f150:	add	x1, x29, #0x1c
  40f154:	mov	x0, x19
  40f158:	bl	40f2b0 <wcrtomb@plt+0xa490>
  40f15c:	cbz	w0, 40f17c <wcrtomb@plt+0xa35c>
  40f160:	mov	w21, #0x2                   	// #2
  40f164:	b	40f198 <wcrtomb@plt+0xa378>
  40f168:	mov	x0, x20
  40f16c:	mov	x1, x19
  40f170:	bl	40f220 <wcrtomb@plt+0xa400>
  40f174:	mov	w0, #0x1                   	// #1
  40f178:	b	40f204 <wcrtomb@plt+0xa3e4>
  40f17c:	ldr	w0, [x23, #2240]
  40f180:	mov	x1, x20
  40f184:	mov	x3, x19
  40f188:	mov	w2, w0
  40f18c:	bl	404a20 <renameat@plt>
  40f190:	cbz	w0, 40f218 <wcrtomb@plt+0xa3f8>
  40f194:	ldr	w21, [x22]
  40f198:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40f19c:	ldr	x8, [x8, #1008]
  40f1a0:	cbz	x8, 40f1a8 <wcrtomb@plt+0xa388>
  40f1a4:	blr	x8
  40f1a8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40f1ac:	add	x1, x1, #0x25b
  40f1b0:	mov	w2, #0x5                   	// #5
  40f1b4:	mov	x0, xzr
  40f1b8:	bl	404bf0 <dcgettext@plt>
  40f1bc:	mov	x22, x0
  40f1c0:	mov	w0, wzr
  40f1c4:	mov	x1, x20
  40f1c8:	bl	43c044 <argp_usage@@Base+0xa448>
  40f1cc:	mov	x20, x0
  40f1d0:	mov	w0, #0x1                   	// #1
  40f1d4:	mov	x1, x19
  40f1d8:	bl	43c044 <argp_usage@@Base+0xa448>
  40f1dc:	mov	x4, x0
  40f1e0:	mov	w0, wzr
  40f1e4:	mov	w1, w21
  40f1e8:	mov	x2, x22
  40f1ec:	mov	x3, x20
  40f1f0:	bl	4041f0 <error@plt>
  40f1f4:	mov	w0, wzr
  40f1f8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f1fc:	mov	w9, #0x2                   	// #2
  40f200:	str	w9, [x8, #3456]
  40f204:	ldp	x20, x19, [sp, #48]
  40f208:	ldp	x22, x21, [sp, #32]
  40f20c:	ldr	x23, [sp, #16]
  40f210:	ldp	x29, x30, [sp], #64
  40f214:	ret
  40f218:	mov	w0, #0x1                   	// #1
  40f21c:	b	40f204 <wcrtomb@plt+0xa3e4>
  40f220:	stp	x29, x30, [sp, #-64]!
  40f224:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f228:	stp	x22, x21, [sp, #32]
  40f22c:	ldr	x22, [x8, #2088]
  40f230:	str	x23, [sp, #16]
  40f234:	stp	x20, x19, [sp, #48]
  40f238:	mov	x29, sp
  40f23c:	cbz	x22, 40f29c <wcrtomb@plt+0xa47c>
  40f240:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40f244:	ldr	w23, [x8]
  40f248:	mov	x19, x1
  40f24c:	mov	x20, x0
  40f250:	b	40f25c <wcrtomb@plt+0xa43c>
  40f254:	ldr	x22, [x22]
  40f258:	cbz	x22, 40f29c <wcrtomb@plt+0xa47c>
  40f25c:	ldr	w8, [x22, #92]
  40f260:	cmp	w23, w8
  40f264:	b.ne	40f254 <wcrtomb@plt+0xa434>  // b.any
  40f268:	ldr	x21, [x22, #160]
  40f26c:	mov	x1, x20
  40f270:	mov	x0, x21
  40f274:	bl	404920 <strcmp@plt>
  40f278:	cbnz	w0, 40f254 <wcrtomb@plt+0xa434>
  40f27c:	mov	x0, x21
  40f280:	bl	4049d0 <free@plt>
  40f284:	mov	x0, x19
  40f288:	bl	43d39c <argp_usage@@Base+0xb7a0>
  40f28c:	str	x0, [x22, #160]
  40f290:	mov	x0, x19
  40f294:	bl	404190 <strlen@plt>
  40f298:	str	x0, [x22, #152]
  40f29c:	ldp	x20, x19, [sp, #48]
  40f2a0:	ldp	x22, x21, [sp, #32]
  40f2a4:	ldr	x23, [sp, #16]
  40f2a8:	ldp	x29, x30, [sp], #64
  40f2ac:	ret
  40f2b0:	sub	sp, sp, #0xf0
  40f2b4:	stp	x28, x27, [sp, #160]
  40f2b8:	stp	x26, x25, [sp, #176]
  40f2bc:	stp	x22, x21, [sp, #208]
  40f2c0:	stp	x20, x19, [sp, #224]
  40f2c4:	mov	x20, x0
  40f2c8:	mov	x21, xzr
  40f2cc:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f2d0:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f2d4:	mov	w19, #0xc0                  	// #192
  40f2d8:	adrp	x28, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40f2dc:	stp	x29, x30, [sp, #144]
  40f2e0:	stp	x24, x23, [sp, #192]
  40f2e4:	add	x29, sp, #0x90
  40f2e8:	str	x1, [sp, #8]
  40f2ec:	add	x26, x20, x21
  40f2f0:	ldrb	w8, [x26]
  40f2f4:	cmp	w8, #0x2f
  40f2f8:	b.eq	40f304 <wcrtomb@plt+0xa4e4>  // b.none
  40f2fc:	cbnz	w8, 40f358 <wcrtomb@plt+0xa538>
  40f300:	b	40f45c <wcrtomb@plt+0xa63c>
  40f304:	cbz	x21, 40f358 <wcrtomb@plt+0xa538>
  40f308:	add	x8, x20, x21
  40f30c:	ldurb	w8, [x8, #-1]
  40f310:	cmp	w8, #0x2f
  40f314:	b.eq	40f358 <wcrtomb@plt+0xa538>  // b.none
  40f318:	cmp	w8, #0x2e
  40f31c:	b.ne	40f370 <wcrtomb@plt+0xa550>  // b.any
  40f320:	cmp	x21, #0x1
  40f324:	b.eq	40f358 <wcrtomb@plt+0xa538>  // b.none
  40f328:	add	x8, x20, x21
  40f32c:	ldurb	w8, [x8, #-2]
  40f330:	cmp	w8, #0x2f
  40f334:	b.eq	40f358 <wcrtomb@plt+0xa538>  // b.none
  40f338:	cmp	w8, #0x2e
  40f33c:	b.ne	40f370 <wcrtomb@plt+0xa550>  // b.any
  40f340:	cmp	x21, #0x2
  40f344:	b.eq	40f358 <wcrtomb@plt+0xa538>  // b.none
  40f348:	add	x8, x20, x21
  40f34c:	ldurb	w8, [x8, #-3]
  40f350:	cmp	w8, #0x2f
  40f354:	b.ne	40f370 <wcrtomb@plt+0xa550>  // b.any
  40f358:	mov	w8, #0x4                   	// #4
  40f35c:	orr	w8, w8, #0x4
  40f360:	cmp	w8, #0x4
  40f364:	b.ne	40f460 <wcrtomb@plt+0xa640>  // b.any
  40f368:	add	x21, x21, #0x1
  40f36c:	b	40f2ec <wcrtomb@plt+0xa4cc>
  40f370:	strb	wzr, [x26]
  40f374:	ldr	w8, [x27, #2076]
  40f378:	ldrb	w9, [x25, #2072]
  40f37c:	ldr	w0, [x28, #2240]
  40f380:	mov	x1, x20
  40f384:	mvn	w8, w8
  40f388:	cmp	w9, #0x0
  40f38c:	and	w23, w8, #0x1ff
  40f390:	csel	w8, w19, wzr, eq  // eq = none
  40f394:	orr	w24, w8, w23
  40f398:	mov	w2, w24
  40f39c:	bl	404430 <mkdirat@plt>
  40f3a0:	cbz	w0, 40f3c4 <wcrtomb@plt+0xa5a4>
  40f3a4:	mov	x19, x25
  40f3a8:	mov	x25, x27
  40f3ac:	bl	404d00 <__errno_location@plt>
  40f3b0:	ldr	w27, [x0]
  40f3b4:	cmp	w27, #0x11
  40f3b8:	b.ne	40f40c <wcrtomb@plt+0xa5ec>  // b.any
  40f3bc:	mov	w23, wzr
  40f3c0:	b	40f438 <wcrtomb@plt+0xa618>
  40f3c4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f3c8:	ldr	w8, [x8, #2080]
  40f3cc:	mov	w3, #0x1ff                 	// #511
  40f3d0:	mov	w5, #0x100                 	// #256
  40f3d4:	mov	x0, x20
  40f3d8:	bic	w2, w24, w8
  40f3dc:	mov	x1, xzr
  40f3e0:	mov	w4, w23
  40f3e4:	bl	410bbc <wcrtomb@plt+0xbd9c>
  40f3e8:	mov	x0, x20
  40f3ec:	mov	w1, w21
  40f3f0:	mov	w2, w23
  40f3f4:	bl	418ce8 <wcrtomb@plt+0x13ec8>
  40f3f8:	ldr	x8, [sp, #8]
  40f3fc:	mov	w9, #0x1                   	// #1
  40f400:	mov	w23, wzr
  40f404:	strb	w9, [x8]
  40f408:	b	40f444 <wcrtomb@plt+0xa624>
  40f40c:	mov	x24, x0
  40f410:	ldr	w0, [x28, #2240]
  40f414:	add	x2, sp, #0x10
  40f418:	mov	x1, x20
  40f41c:	mov	w3, wzr
  40f420:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  40f424:	mov	w23, w0
  40f428:	cbz	w0, 40f438 <wcrtomb@plt+0xa618>
  40f42c:	mov	x0, x20
  40f430:	str	w27, [x24]
  40f434:	bl	428100 <wcrtomb@plt+0x232e0>
  40f438:	mov	x27, x25
  40f43c:	mov	x25, x19
  40f440:	mov	w19, #0xc0                  	// #192
  40f444:	mov	w8, #0x2f                  	// #47
  40f448:	cmp	w23, #0x0
  40f44c:	strb	w8, [x26]
  40f450:	cset	w8, ne  // ne = any
  40f454:	csel	w22, w22, w23, eq  // eq = none
  40f458:	b	40f35c <wcrtomb@plt+0xa53c>
  40f45c:	mov	w22, wzr
  40f460:	mov	w0, w22
  40f464:	ldp	x20, x19, [sp, #224]
  40f468:	ldp	x22, x21, [sp, #208]
  40f46c:	ldp	x24, x23, [sp, #192]
  40f470:	ldp	x26, x25, [sp, #176]
  40f474:	ldp	x28, x27, [sp, #160]
  40f478:	ldp	x29, x30, [sp, #144]
  40f47c:	add	sp, sp, #0xf0
  40f480:	ret
  40f484:	sub	sp, sp, #0x80
  40f488:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40f48c:	ldrb	w8, [x8, #552]
  40f490:	stp	x26, x25, [sp, #64]
  40f494:	stp	x24, x23, [sp, #80]
  40f498:	stp	x22, x21, [sp, #96]
  40f49c:	stp	x20, x19, [sp, #112]
  40f4a0:	mov	w22, w7
  40f4a4:	mov	w26, w6
  40f4a8:	mov	w19, w5
  40f4ac:	mov	w23, w4
  40f4b0:	mov	w24, w3
  40f4b4:	mov	w25, w2
  40f4b8:	mov	x20, x1
  40f4bc:	mov	x21, x0
  40f4c0:	stp	x29, x30, [sp, #32]
  40f4c4:	stp	x28, x27, [sp, #48]
  40f4c8:	add	x29, sp, #0x20
  40f4cc:	cbnz	w8, 40f564 <wcrtomb@plt+0xa744>
  40f4d0:	tbnz	w26, #0, 40f564 <wcrtomb@plt+0xa744>
  40f4d4:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  40f4d8:	ldrb	w8, [x27, #33]
  40f4dc:	cbz	w8, 40f4ec <wcrtomb@plt+0xa6cc>
  40f4e0:	ldur	q0, [x20, #216]
  40f4e4:	str	q0, [sp]
  40f4e8:	b	40f4f4 <wcrtomb@plt+0xa6d4>
  40f4ec:	mov	w8, #0x3ffffffe            	// #1073741822
  40f4f0:	str	x8, [sp, #8]
  40f4f4:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40f4f8:	ldur	q0, [x20, #232]
  40f4fc:	ldr	w1, [x8, #2240]
  40f500:	mov	x3, sp
  40f504:	mov	w0, w25
  40f508:	mov	x2, x21
  40f50c:	mov	w4, w22
  40f510:	str	q0, [sp, #16]
  40f514:	bl	433354 <argp_usage@@Base+0x1758>
  40f518:	cbz	w0, 40f544 <wcrtomb@plt+0xa724>
  40f51c:	and	w8, w19, #0xff
  40f520:	cmp	w8, #0x32
  40f524:	b.ne	40f538 <wcrtomb@plt+0xa718>  // b.any
  40f528:	bl	404d00 <__errno_location@plt>
  40f52c:	ldr	w0, [x0]
  40f530:	bl	40f7fc <wcrtomb@plt+0xa9dc>
  40f534:	tbz	w0, #0, 40f564 <wcrtomb@plt+0xa744>
  40f538:	mov	x0, x21
  40f53c:	bl	428744 <wcrtomb@plt+0x23924>
  40f540:	b	40f564 <wcrtomb@plt+0xa744>
  40f544:	ldrb	w8, [x27, #33]
  40f548:	cbz	w8, 40f558 <wcrtomb@plt+0xa738>
  40f54c:	ldp	x1, x2, [sp]
  40f550:	mov	x0, x21
  40f554:	bl	40f688 <wcrtomb@plt+0xa868>
  40f558:	ldp	x1, x2, [sp, #16]
  40f55c:	mov	x0, x21
  40f560:	bl	40f688 <wcrtomb@plt+0xa868>
  40f564:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40f568:	ldr	w8, [x8, #980]
  40f56c:	cmp	w8, #0x1
  40f570:	b.lt	40f5e4 <wcrtomb@plt+0xa7c4>  // b.tstop
  40f574:	tbnz	w26, #0, 40f5e4 <wcrtomb@plt+0xa7c4>
  40f578:	ldp	w27, w28, [x20, #112]
  40f57c:	mov	w0, w25
  40f580:	mov	x1, x21
  40f584:	mov	w4, w22
  40f588:	mov	w2, w27
  40f58c:	mov	w3, w28
  40f590:	bl	40f814 <wcrtomb@plt+0xa9f4>
  40f594:	cbz	w0, 40f5c8 <wcrtomb@plt+0xa7a8>
  40f598:	and	w8, w19, #0xff
  40f59c:	cmp	w8, #0x32
  40f5a0:	b.ne	40f5b4 <wcrtomb@plt+0xa794>  // b.any
  40f5a4:	bl	404d00 <__errno_location@plt>
  40f5a8:	ldr	w0, [x0]
  40f5ac:	bl	40f7fc <wcrtomb@plt+0xa9dc>
  40f5b0:	tbz	w0, #0, 40f5e4 <wcrtomb@plt+0xa7c4>
  40f5b4:	mov	x0, x21
  40f5b8:	mov	w1, w27
  40f5bc:	mov	w2, w28
  40f5c0:	bl	427f80 <wcrtomb@plt+0x23160>
  40f5c4:	b	40f5e4 <wcrtomb@plt+0xa7c4>
  40f5c8:	orn	w8, w24, w23
  40f5cc:	mov	w9, #0x49                  	// #73
  40f5d0:	tst	w8, w9
  40f5d4:	b.eq	40f5e4 <wcrtomb@plt+0xa7c4>  // b.none
  40f5d8:	mvn	w8, w24
  40f5dc:	orr	w8, w8, #0xfffff3ff
  40f5e0:	and	w23, w8, w23
  40f5e4:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  40f5e8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f5ec:	ldr	w10, [x10, #612]
  40f5f0:	ldr	w8, [x20, #104]
  40f5f4:	ldr	w9, [x9, #2080]
  40f5f8:	eor	w11, w26, #0x1
  40f5fc:	cmp	w10, #0x0
  40f600:	mov	w12, #0x1ff                 	// #511
  40f604:	bic	w1, w8, w9
  40f608:	cset	w8, gt
  40f60c:	tst	w8, w11
  40f610:	mov	w8, #0xfff                 	// #4095
  40f614:	csel	w2, w8, w12, ne  // ne = any
  40f618:	mov	x0, x21
  40f61c:	mov	w3, w25
  40f620:	mov	w4, w24
  40f624:	mov	w5, w23
  40f628:	mov	w6, w19
  40f62c:	mov	w7, w22
  40f630:	bl	40f898 <wcrtomb@plt+0xaa78>
  40f634:	mov	w3, #0x1                   	// #1
  40f638:	mov	x0, x20
  40f63c:	mov	x1, x21
  40f640:	mov	w2, w19
  40f644:	bl	426d58 <wcrtomb@plt+0x21f38>
  40f648:	mov	x0, x20
  40f64c:	mov	x1, x21
  40f650:	mov	w2, w19
  40f654:	bl	426718 <wcrtomb@plt+0x218f8>
  40f658:	mov	x0, x20
  40f65c:	mov	x1, x21
  40f660:	mov	w2, w19
  40f664:	bl	426ce8 <wcrtomb@plt+0x21ec8>
  40f668:	ldp	x20, x19, [sp, #112]
  40f66c:	ldp	x22, x21, [sp, #96]
  40f670:	ldp	x24, x23, [sp, #80]
  40f674:	ldp	x26, x25, [sp, #64]
  40f678:	ldp	x28, x27, [sp, #48]
  40f67c:	ldp	x29, x30, [sp, #32]
  40f680:	add	sp, sp, #0x80
  40f684:	ret
  40f688:	sub	sp, sp, #0x70
  40f68c:	stp	x22, x21, [sp, #80]
  40f690:	stp	x20, x19, [sp, #96]
  40f694:	mov	x20, x2
  40f698:	mov	x21, x1
  40f69c:	mov	x19, x0
  40f6a0:	stp	x29, x30, [sp, #48]
  40f6a4:	stp	x24, x23, [sp, #64]
  40f6a8:	add	x29, sp, #0x30
  40f6ac:	tbnz	x1, #63, 40f788 <wcrtomb@plt+0xa968>
  40f6b0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40f6b4:	add	x8, x8, #0x3a8
  40f6b8:	ldp	x0, x1, [x8]
  40f6bc:	mov	x2, x21
  40f6c0:	mov	x3, x20
  40f6c4:	bl	43cd0c <argp_usage@@Base+0xb110>
  40f6c8:	tbz	w0, #31, 40f7e4 <wcrtomb@plt+0xa9c4>
  40f6cc:	sub	x0, x29, #0x10
  40f6d0:	bl	434c7c <argp_usage@@Base+0x3080>
  40f6d4:	ldp	x23, x22, [x29, #-16]
  40f6d8:	mov	x2, x21
  40f6dc:	mov	x3, x20
  40f6e0:	mov	x0, x23
  40f6e4:	mov	x1, x22
  40f6e8:	bl	43cd0c <argp_usage@@Base+0xb110>
  40f6ec:	tbz	w0, #31, 40f7e4 <wcrtomb@plt+0xa9c4>
  40f6f0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f6f4:	ldrb	w9, [x9, #449]
  40f6f8:	mov	w10, #0xca00                	// #51712
  40f6fc:	sub	x8, x20, x22
  40f700:	movk	w10, #0x3b9a, lsl #16
  40f704:	add	x10, x8, x10
  40f708:	cmp	x8, #0x0
  40f70c:	csel	x22, x10, x8, lt  // lt = tstop
  40f710:	tbz	w9, #7, 40f7e4 <wcrtomb@plt+0xa9c4>
  40f714:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40f718:	ldr	x9, [x9, #1008]
  40f71c:	sub	x10, x21, x23
  40f720:	add	x23, x10, x8, asr #63
  40f724:	cbz	x9, 40f72c <wcrtomb@plt+0xa90c>
  40f728:	blr	x9
  40f72c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40f730:	add	x1, x1, #0x2cf
  40f734:	mov	w2, #0x5                   	// #5
  40f738:	mov	x0, xzr
  40f73c:	bl	404bf0 <dcgettext@plt>
  40f740:	mov	x24, x0
  40f744:	mov	w2, #0x1                   	// #1
  40f748:	mov	x0, x21
  40f74c:	mov	x1, x20
  40f750:	bl	418528 <wcrtomb@plt+0x13708>
  40f754:	mov	x20, x0
  40f758:	mov	x2, sp
  40f75c:	mov	x0, x23
  40f760:	mov	x1, x22
  40f764:	bl	419d94 <wcrtomb@plt+0x14f74>
  40f768:	mov	x5, x0
  40f76c:	mov	w0, wzr
  40f770:	mov	w1, wzr
  40f774:	mov	x2, x24
  40f778:	mov	x3, x19
  40f77c:	mov	x4, x20
  40f780:	bl	4041f0 <error@plt>
  40f784:	b	40f7e4 <wcrtomb@plt+0xa9c4>
  40f788:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40f78c:	ldrb	w8, [x8, #449]
  40f790:	tbz	w8, #7, 40f7e4 <wcrtomb@plt+0xa9c4>
  40f794:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40f798:	ldr	x8, [x8, #1008]
  40f79c:	cbz	x8, 40f7a4 <wcrtomb@plt+0xa984>
  40f7a0:	blr	x8
  40f7a4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  40f7a8:	add	x1, x1, #0x2ad
  40f7ac:	mov	w2, #0x5                   	// #5
  40f7b0:	mov	x0, xzr
  40f7b4:	bl	404bf0 <dcgettext@plt>
  40f7b8:	mov	x22, x0
  40f7bc:	mov	w2, #0x1                   	// #1
  40f7c0:	mov	x0, x21
  40f7c4:	mov	x1, x20
  40f7c8:	bl	418528 <wcrtomb@plt+0x13708>
  40f7cc:	mov	x4, x0
  40f7d0:	mov	w0, wzr
  40f7d4:	mov	w1, wzr
  40f7d8:	mov	x2, x22
  40f7dc:	mov	x3, x19
  40f7e0:	bl	4041f0 <error@plt>
  40f7e4:	ldp	x20, x19, [sp, #96]
  40f7e8:	ldp	x22, x21, [sp, #80]
  40f7ec:	ldp	x24, x23, [sp, #64]
  40f7f0:	ldp	x29, x30, [sp, #48]
  40f7f4:	add	sp, sp, #0x70
  40f7f8:	ret
  40f7fc:	cmp	w0, #0x26
  40f800:	cset	w8, ne  // ne = any
  40f804:	cmp	w0, #0x5f
  40f808:	cset	w9, ne  // ne = any
  40f80c:	and	w0, w8, w9
  40f810:	ret
  40f814:	stp	x29, x30, [sp, #-64]!
  40f818:	stp	x22, x21, [sp, #32]
  40f81c:	stp	x20, x19, [sp, #48]
  40f820:	mov	w19, w4
  40f824:	mov	w20, w3
  40f828:	mov	w21, w2
  40f82c:	mov	x22, x1
  40f830:	str	x23, [sp, #16]
  40f834:	mov	x29, sp
  40f838:	tbnz	w0, #31, 40f860 <wcrtomb@plt+0xaa40>
  40f83c:	mov	w1, w21
  40f840:	mov	w2, w20
  40f844:	bl	404d90 <fchown@plt>
  40f848:	mov	w23, w0
  40f84c:	cbz	w0, 40f880 <wcrtomb@plt+0xaa60>
  40f850:	bl	404d00 <__errno_location@plt>
  40f854:	ldr	w0, [x0]
  40f858:	bl	40f7fc <wcrtomb@plt+0xa9dc>
  40f85c:	tbnz	w0, #0, 40f880 <wcrtomb@plt+0xaa60>
  40f860:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40f864:	ldr	w0, [x8, #2240]
  40f868:	mov	x1, x22
  40f86c:	mov	w2, w21
  40f870:	mov	w3, w20
  40f874:	mov	w4, w19
  40f878:	bl	404a40 <fchownat@plt>
  40f87c:	mov	w23, w0
  40f880:	mov	w0, w23
  40f884:	ldp	x20, x19, [sp, #48]
  40f888:	ldp	x22, x21, [sp, #32]
  40f88c:	ldr	x23, [sp, #16]
  40f890:	ldp	x29, x30, [sp], #64
  40f894:	ret
  40f898:	sub	sp, sp, #0xd0
  40f89c:	eor	w8, w4, w1
  40f8a0:	orn	w8, w8, w5
  40f8a4:	tst	w8, w2
  40f8a8:	stp	x29, x30, [sp, #128]
  40f8ac:	str	x25, [sp, #144]
  40f8b0:	stp	x24, x23, [sp, #160]
  40f8b4:	stp	x22, x21, [sp, #176]
  40f8b8:	stp	x20, x19, [sp, #192]
  40f8bc:	add	x29, sp, #0x80
  40f8c0:	b.eq	40f9f8 <wcrtomb@plt+0xabd8>  // b.none
  40f8c4:	mvn	w8, w5
  40f8c8:	bic	w8, w8, w2
  40f8cc:	mov	w23, w7
  40f8d0:	mov	w20, w6
  40f8d4:	mov	w25, w4
  40f8d8:	mov	w21, w3
  40f8dc:	mov	w22, w2
  40f8e0:	mov	w24, w1
  40f8e4:	mov	x19, x0
  40f8e8:	tst	w8, #0xfff
  40f8ec:	b.eq	40f928 <wcrtomb@plt+0xab08>  // b.none
  40f8f0:	mov	x2, sp
  40f8f4:	mov	w0, w21
  40f8f8:	mov	x1, x19
  40f8fc:	mov	w3, w23
  40f900:	bl	40fa50 <wcrtomb@plt+0xac30>
  40f904:	cbz	w0, 40f91c <wcrtomb@plt+0xaafc>
  40f908:	mov	x0, x19
  40f90c:	bl	4286a4 <wcrtomb@plt+0x23884>
  40f910:	mov	w8, wzr
  40f914:	cbnz	w8, 40f928 <wcrtomb@plt+0xab08>
  40f918:	b	40f9f8 <wcrtomb@plt+0xabd8>
  40f91c:	ldr	w25, [sp, #16]
  40f920:	mov	w8, #0x1                   	// #1
  40f924:	cbz	w8, 40f9f8 <wcrtomb@plt+0xabd8>
  40f928:	mvn	w8, w22
  40f92c:	and	w9, w25, #0xfff
  40f930:	and	w8, w9, w8
  40f934:	and	w10, w22, w24
  40f938:	orr	w22, w8, w10
  40f93c:	cmp	w9, w22
  40f940:	b.eq	40f9f8 <wcrtomb@plt+0xabd8>  // b.none
  40f944:	mov	w0, w21
  40f948:	mov	x1, x19
  40f94c:	mov	w2, w22
  40f950:	mov	w3, w23
  40f954:	bl	40fa80 <wcrtomb@plt+0xac60>
  40f958:	cbz	w0, 40f970 <wcrtomb@plt+0xab50>
  40f95c:	bl	404d00 <__errno_location@plt>
  40f960:	ldr	w24, [x0]
  40f964:	cmp	w24, #0x1
  40f968:	b.eq	40f97c <wcrtomb@plt+0xab5c>  // b.none
  40f96c:	b	40f98c <wcrtomb@plt+0xab6c>
  40f970:	mov	w24, wzr
  40f974:	cmp	w24, #0x1
  40f978:	b.ne	40f98c <wcrtomb@plt+0xab6c>  // b.any
  40f97c:	tbz	w22, #11, 40f988 <wcrtomb@plt+0xab68>
  40f980:	bl	43aabc <argp_usage@@Base+0x8ec0>
  40f984:	cbz	w0, 40fa14 <wcrtomb@plt+0xabf4>
  40f988:	mov	w24, #0x1                   	// #1
  40f98c:	and	w8, w20, #0xff
  40f990:	cmp	w8, #0x32
  40f994:	b.eq	40f9c8 <wcrtomb@plt+0xaba8>  // b.none
  40f998:	cbz	w23, 40f9c8 <wcrtomb@plt+0xaba8>
  40f99c:	mov	w0, w24
  40f9a0:	bl	40f7fc <wcrtomb@plt+0xa9dc>
  40f9a4:	tbnz	w0, #0, 40f9c8 <wcrtomb@plt+0xaba8>
  40f9a8:	mov	w0, w21
  40f9ac:	mov	x1, x19
  40f9b0:	mov	w2, w22
  40f9b4:	mov	w3, wzr
  40f9b8:	bl	40fa80 <wcrtomb@plt+0xac60>
  40f9bc:	cbz	w0, 40fa38 <wcrtomb@plt+0xac18>
  40f9c0:	bl	404d00 <__errno_location@plt>
  40f9c4:	ldr	w24, [x0]
  40f9c8:	cbz	w24, 40f9f8 <wcrtomb@plt+0xabd8>
  40f9cc:	and	w8, w20, #0xff
  40f9d0:	cmp	w8, #0x32
  40f9d4:	b.ne	40f9e4 <wcrtomb@plt+0xabc4>  // b.any
  40f9d8:	mov	w0, w24
  40f9dc:	bl	40f7fc <wcrtomb@plt+0xa9dc>
  40f9e0:	tbz	w0, #0, 40f9f8 <wcrtomb@plt+0xabd8>
  40f9e4:	bl	404d00 <__errno_location@plt>
  40f9e8:	str	w24, [x0]
  40f9ec:	mov	x0, x19
  40f9f0:	mov	w1, w22
  40f9f4:	bl	427ee8 <wcrtomb@plt+0x230c8>
  40f9f8:	ldp	x20, x19, [sp, #192]
  40f9fc:	ldp	x22, x21, [sp, #176]
  40fa00:	ldp	x24, x23, [sp, #160]
  40fa04:	ldr	x25, [sp, #144]
  40fa08:	ldp	x29, x30, [sp, #128]
  40fa0c:	add	sp, sp, #0xd0
  40fa10:	ret
  40fa14:	mov	w0, w21
  40fa18:	mov	x1, x19
  40fa1c:	mov	w2, w22
  40fa20:	mov	w3, w23
  40fa24:	bl	40fa80 <wcrtomb@plt+0xac60>
  40fa28:	cbz	w0, 40fa44 <wcrtomb@plt+0xac24>
  40fa2c:	bl	404d00 <__errno_location@plt>
  40fa30:	ldr	w24, [x0]
  40fa34:	b	40fa48 <wcrtomb@plt+0xac28>
  40fa38:	mov	w24, wzr
  40fa3c:	cbnz	w24, 40f9cc <wcrtomb@plt+0xabac>
  40fa40:	b	40f9f8 <wcrtomb@plt+0xabd8>
  40fa44:	mov	w24, wzr
  40fa48:	bl	43aab4 <argp_usage@@Base+0x8eb8>
  40fa4c:	b	40f98c <wcrtomb@plt+0xab6c>
  40fa50:	stp	x29, x30, [sp, #-16]!
  40fa54:	mov	x29, sp
  40fa58:	tbnz	w0, #31, 40fa6c <wcrtomb@plt+0xac4c>
  40fa5c:	mov	x1, x2
  40fa60:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  40fa64:	ldp	x29, x30, [sp], #16
  40fa68:	ret
  40fa6c:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40fa70:	ldr	w0, [x8, #2240]
  40fa74:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  40fa78:	ldp	x29, x30, [sp], #16
  40fa7c:	ret
  40fa80:	stp	x29, x30, [sp, #-48]!
  40fa84:	stp	x22, x21, [sp, #16]
  40fa88:	stp	x20, x19, [sp, #32]
  40fa8c:	mov	w19, w3
  40fa90:	mov	w20, w2
  40fa94:	mov	x21, x1
  40fa98:	mov	x29, sp
  40fa9c:	tbnz	w0, #31, 40fac0 <wcrtomb@plt+0xaca0>
  40faa0:	mov	w1, w20
  40faa4:	bl	404660 <fchmod@plt>
  40faa8:	mov	w22, w0
  40faac:	cbz	w0, 40fadc <wcrtomb@plt+0xacbc>
  40fab0:	bl	404d00 <__errno_location@plt>
  40fab4:	ldr	w0, [x0]
  40fab8:	bl	40f7fc <wcrtomb@plt+0xa9dc>
  40fabc:	tbnz	w0, #0, 40fadc <wcrtomb@plt+0xacbc>
  40fac0:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40fac4:	ldr	w0, [x8, #2240]
  40fac8:	mov	x1, x21
  40facc:	mov	w2, w20
  40fad0:	mov	w3, w19
  40fad4:	bl	404d60 <fchmodat@plt>
  40fad8:	mov	w22, w0
  40fadc:	mov	w0, w22
  40fae0:	ldp	x20, x19, [sp, #32]
  40fae4:	ldp	x22, x21, [sp, #16]
  40fae8:	ldp	x29, x30, [sp], #48
  40faec:	ret
  40faf0:	sub	sp, sp, #0x70
  40faf4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40faf8:	ldr	w9, [x9, #980]
  40fafc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fb00:	ldr	w8, [x8, #200]
  40fb04:	stp	x26, x25, [sp, #48]
  40fb08:	mov	w10, #0xffffffc0            	// #-64
  40fb0c:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  40fb10:	cmp	w9, #0x0
  40fb14:	ldrb	w9, [x26, #625]
  40fb18:	csinv	w10, w10, wzr, gt
  40fb1c:	stp	x22, x21, [sp, #80]
  40fb20:	and	w21, w8, w10
  40fb24:	and	w8, w21, #0x3f
  40fb28:	stp	x29, x30, [sp, #32]
  40fb2c:	stp	x20, x19, [sp, #96]
  40fb30:	add	x29, sp, #0x20
  40fb34:	mov	w20, w1
  40fb38:	mov	x19, x0
  40fb3c:	csel	w1, w8, wzr, gt
  40fb40:	stp	x24, x23, [sp, #64]
  40fb44:	sturb	wzr, [x29, #-12]
  40fb48:	stp	wzr, wzr, [sp, #12]
  40fb4c:	cbz	w9, 40fb9c <wcrtomb@plt+0xad7c>
  40fb50:	mov	w21, #0x1                   	// #1
  40fb54:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  40fb58:	add	x22, x22, #0x60
  40fb5c:	mov	x0, x22
  40fb60:	bl	404fe8 <wcrtomb@plt+0x1c8>
  40fb64:	ldrb	w8, [x22, #272]
  40fb68:	cbz	w8, 40fbd0 <wcrtomb@plt+0xadb0>
  40fb6c:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  40fb70:	add	x1, x1, #0x60
  40fb74:	sub	x2, x29, #0x8
  40fb78:	mov	w0, w21
  40fb7c:	bl	41d954 <wcrtomb@plt+0x18b34>
  40fb80:	ldur	x0, [x29, #-8]
  40fb84:	bl	418de8 <wcrtomb@plt+0x13fc8>
  40fb88:	bl	40500c <wcrtomb@plt+0x1ec>
  40fb8c:	ldrb	w8, [x26, #625]
  40fb90:	cbz	w8, 40fc64 <wcrtomb@plt+0xae44>
  40fb94:	mov	w22, wzr
  40fb98:	b	40fdbc <wcrtomb@plt+0xaf9c>
  40fb9c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fba0:	ldr	x8, [x8, #616]
  40fba4:	cbz	x8, 40fccc <wcrtomb@plt+0xaeac>
  40fba8:	adrp	x2, 470000 <argp_program_version_hook@@Base+0x258>
  40fbac:	add	x2, x2, #0x60
  40fbb0:	mov	w1, #0x66                  	// #102
  40fbb4:	mov	x0, x19
  40fbb8:	bl	420820 <wcrtomb@plt+0x1ba00>
  40fbbc:	mov	w21, w0
  40fbc0:	tbz	w0, #31, 40fb54 <wcrtomb@plt+0xad34>
  40fbc4:	bl	417ab0 <wcrtomb@plt+0x12c90>
  40fbc8:	mov	w22, wzr
  40fbcc:	b	40fdbc <wcrtomb@plt+0xaf9c>
  40fbd0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fbd4:	ldr	x8, [x8, #232]
  40fbd8:	stur	x8, [x29, #-8]
  40fbdc:	ldur	x0, [x29, #-8]
  40fbe0:	cmp	x0, #0x1
  40fbe4:	b.lt	40fb80 <wcrtomb@plt+0xad60>  // b.tstop
  40fbe8:	bl	4050a4 <wcrtomb@plt+0x284>
  40fbec:	bl	4055d4 <wcrtomb@plt+0x7b4>
  40fbf0:	cbz	x0, 40fcf0 <wcrtomb@plt+0xaed0>
  40fbf4:	mov	x23, x0
  40fbf8:	bl	405788 <wcrtomb@plt+0x968>
  40fbfc:	ldur	x8, [x29, #-8]
  40fc00:	cmp	x0, x8
  40fc04:	csel	x22, x8, x0, hi  // hi = pmore
  40fc08:	bl	404d00 <__errno_location@plt>
  40fc0c:	str	wzr, [x0]
  40fc10:	mov	w0, w21
  40fc14:	mov	x1, x23
  40fc18:	mov	x2, x22
  40fc1c:	bl	41a724 <wcrtomb@plt+0x15904>
  40fc20:	ldur	x8, [x29, #-8]
  40fc24:	add	x9, x23, x22
  40fc28:	mov	x24, x0
  40fc2c:	sub	x0, x9, #0x1
  40fc30:	sub	x8, x8, x22
  40fc34:	stur	x8, [x29, #-8]
  40fc38:	bl	405744 <wcrtomb@plt+0x924>
  40fc3c:	cmp	x24, x22
  40fc40:	b.eq	40fbdc <wcrtomb@plt+0xadbc>  // b.none
  40fc44:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fc48:	ldr	x8, [x8, #616]
  40fc4c:	cbnz	x8, 40fb80 <wcrtomb@plt+0xad60>
  40fc50:	mov	x0, x19
  40fc54:	mov	x1, x24
  40fc58:	mov	x2, x22
  40fc5c:	bl	4287a4 <wcrtomb@plt+0x23984>
  40fc60:	b	40fb80 <wcrtomb@plt+0xad60>
  40fc64:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  40fc68:	ldr	x8, [x23, #616]
  40fc6c:	cbnz	x8, 40fca4 <wcrtomb@plt+0xae84>
  40fc70:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fc74:	ldr	w8, [x8, #752]
  40fc78:	ldp	w4, w3, [sp, #12]
  40fc7c:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  40fc80:	add	x1, x1, #0x60
  40fc84:	cmp	w8, #0x2
  40fc88:	cset	w8, ne  // ne = any
  40fc8c:	lsl	w7, w8, #8
  40fc90:	mov	x0, x19
  40fc94:	mov	w2, w21
  40fc98:	mov	w5, w20
  40fc9c:	mov	w6, wzr
  40fca0:	bl	40f484 <wcrtomb@plt+0xa664>
  40fca4:	mov	w0, w21
  40fca8:	bl	4047c0 <close@plt>
  40fcac:	mov	w22, w0
  40fcb0:	tbz	w0, #31, 40fcbc <wcrtomb@plt+0xae9c>
  40fcb4:	mov	x0, x19
  40fcb8:	bl	428014 <wcrtomb@plt+0x231f4>
  40fcbc:	ldr	x8, [x23, #616]
  40fcc0:	cbz	x8, 40fdbc <wcrtomb@plt+0xaf9c>
  40fcc4:	bl	420ac8 <wcrtomb@plt+0x1bca8>
  40fcc8:	b	40fdbc <wcrtomb@plt+0xaf9c>
  40fccc:	sub	x3, x29, #0x8
  40fcd0:	mov	x0, x19
  40fcd4:	mov	w2, w20
  40fcd8:	stur	wzr, [x29, #-8]
  40fcdc:	bl	4105cc <wcrtomb@plt+0xb7ac>
  40fce0:	cbz	w0, 40fd34 <wcrtomb@plt+0xaf14>
  40fce4:	mov	w8, #0x1                   	// #1
  40fce8:	mov	w22, #0x1                   	// #1
  40fcec:	b	40fdb8 <wcrtomb@plt+0xaf98>
  40fcf0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fcf4:	ldr	x8, [x8, #1008]
  40fcf8:	cbz	x8, 40fd00 <wcrtomb@plt+0xaee0>
  40fcfc:	blr	x8
  40fd00:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  40fd04:	add	x1, x1, #0xc61
  40fd08:	mov	w2, #0x5                   	// #5
  40fd0c:	mov	x0, xzr
  40fd10:	bl	404bf0 <dcgettext@plt>
  40fd14:	mov	x2, x0
  40fd18:	mov	w0, wzr
  40fd1c:	mov	w1, wzr
  40fd20:	bl	4041f0 <error@plt>
  40fd24:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40fd28:	mov	w9, #0x2                   	// #2
  40fd2c:	str	w9, [x8, #3456]
  40fd30:	b	40fb80 <wcrtomb@plt+0xad60>
  40fd34:	ldur	w23, [x29, #-8]
  40fd38:	and	w24, w21, #0x1ff
  40fd3c:	b	40fd48 <wcrtomb@plt+0xaf28>
  40fd40:	mov	w8, wzr
  40fd44:	cbnz	w8, 40fdb8 <wcrtomb@plt+0xaf98>
  40fd48:	add	x4, sp, #0x10
  40fd4c:	add	x5, sp, #0xc
  40fd50:	mov	x0, x19
  40fd54:	mov	w1, w20
  40fd58:	mov	w2, w24
  40fd5c:	mov	w3, w23
  40fd60:	bl	4106b8 <wcrtomb@plt+0xb898>
  40fd64:	mov	w21, w0
  40fd68:	tbz	w0, #31, 40fdb4 <wcrtomb@plt+0xaf94>
  40fd6c:	sub	x2, x29, #0xc
  40fd70:	mov	w1, #0x1                   	// #1
  40fd74:	mov	x0, x19
  40fd78:	bl	410844 <wcrtomb@plt+0xba24>
  40fd7c:	cmp	w0, #0x1
  40fd80:	b.eq	40fd40 <wcrtomb@plt+0xaf20>  // b.none
  40fd84:	mov	w25, w0
  40fd88:	bl	417ab0 <wcrtomb@plt+0x12c90>
  40fd8c:	cmp	w25, #0x2
  40fd90:	b.ne	40fda0 <wcrtomb@plt+0xaf80>  // b.any
  40fd94:	mov	w22, wzr
  40fd98:	mov	w8, #0x1                   	// #1
  40fd9c:	b	40fd44 <wcrtomb@plt+0xaf24>
  40fda0:	mov	x0, x19
  40fda4:	bl	428160 <wcrtomb@plt+0x23340>
  40fda8:	mov	w8, #0x1                   	// #1
  40fdac:	mov	w22, #0x1                   	// #1
  40fdb0:	b	40fd44 <wcrtomb@plt+0xaf24>
  40fdb4:	mov	w8, wzr
  40fdb8:	cbz	w8, 40fb54 <wcrtomb@plt+0xad34>
  40fdbc:	mov	w0, w22
  40fdc0:	ldp	x20, x19, [sp, #96]
  40fdc4:	ldp	x22, x21, [sp, #80]
  40fdc8:	ldp	x24, x23, [sp, #64]
  40fdcc:	ldp	x26, x25, [sp, #48]
  40fdd0:	ldp	x29, x30, [sp, #32]
  40fdd4:	add	sp, sp, #0x70
  40fdd8:	ret
  40fddc:	sub	sp, sp, #0xf0
  40fde0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fde4:	ldrb	w8, [x8, #85]
  40fde8:	stp	x29, x30, [sp, #144]
  40fdec:	stp	x26, x25, [sp, #176]
  40fdf0:	stp	x20, x19, [sp, #224]
  40fdf4:	add	x29, sp, #0x90
  40fdf8:	mov	w20, w1
  40fdfc:	mov	x19, x0
  40fe00:	adrp	x25, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  40fe04:	stp	x28, x27, [sp, #160]
  40fe08:	stp	x24, x23, [sp, #192]
  40fe0c:	stp	x22, x21, [sp, #208]
  40fe10:	sturb	wzr, [x29, #-4]
  40fe14:	cbz	w8, 40fe58 <wcrtomb@plt+0xb038>
  40fe18:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  40fe1c:	ldr	x8, [x21, #824]
  40fe20:	cbnz	x8, 40fe58 <wcrtomb@plt+0xb038>
  40fe24:	ldr	w0, [x25, #2240]
  40fe28:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  40fe2c:	add	x1, x1, #0x232
  40fe30:	add	x2, sp, #0x8
  40fe34:	mov	w3, wzr
  40fe38:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  40fe3c:	cbz	w0, 40fe50 <wcrtomb@plt+0xb030>
  40fe40:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  40fe44:	add	x0, x0, #0x232
  40fe48:	bl	41ad6c <wcrtomb@plt+0x15f4c>
  40fe4c:	b	40fe58 <wcrtomb@plt+0xb038>
  40fe50:	ldr	x8, [sp, #8]
  40fe54:	str	x8, [x21, #824]
  40fe58:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fe5c:	ldrb	w8, [x8, #33]
  40fe60:	cbz	w8, 40fe70 <wcrtomb@plt+0xb050>
  40fe64:	mov	x0, x19
  40fe68:	bl	4159d8 <wcrtomb@plt+0x10bb8>
  40fe6c:	b	40fe7c <wcrtomb@plt+0xb05c>
  40fe70:	cmp	w20, #0x44
  40fe74:	b.ne	40fe7c <wcrtomb@plt+0xb05c>  // b.any
  40fe78:	bl	417ab0 <wcrtomb@plt+0x12c90>
  40fe7c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  40fe80:	ldr	w9, [x9, #612]
  40fe84:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  40fe88:	ldr	w10, [x10, #980]
  40fe8c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40fe90:	cmp	w9, #0x0
  40fe94:	ldr	w8, [x8, #200]
  40fe98:	ccmp	w10, #0x0, #0x0, le
  40fe9c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40fea0:	ldrb	w10, [x10, #2072]
  40fea4:	mov	w11, #0x1ff                 	// #511
  40fea8:	mov	w9, #0x1c0                 	// #448
  40feac:	csel	w9, w9, w11, gt
  40feb0:	mov	w11, #0xc0                  	// #192
  40feb4:	cmp	w10, #0x0
  40feb8:	and	w8, w9, w8
  40febc:	csel	w9, w11, wzr, eq  // eq = none
  40fec0:	mov	w20, wzr
  40fec4:	mov	w22, wzr
  40fec8:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  40fecc:	orr	w23, w8, w9
  40fed0:	mov	w28, #0x11                  	// #17
  40fed4:	b	40ff0c <wcrtomb@plt+0xb0ec>
  40fed8:	add	x1, sp, #0x8
  40fedc:	mov	x0, x19
  40fee0:	bl	41a52c <wcrtomb@plt+0x1570c>
  40fee4:	cbz	w0, 40ff78 <wcrtomb@plt+0xb158>
  40fee8:	mov	w8, wzr
  40feec:	str	w28, [x24]
  40fef0:	cbnz	w8, 40fff0 <wcrtomb@plt+0xb1d0>
  40fef4:	sub	x2, x29, #0x4
  40fef8:	mov	x0, x19
  40fefc:	mov	w1, wzr
  40ff00:	bl	410844 <wcrtomb@plt+0xba24>
  40ff04:	cmp	w0, #0x1
  40ff08:	b.ne	40ffd0 <wcrtomb@plt+0xb1b0>  // b.any
  40ff0c:	ldr	w0, [x25, #2240]
  40ff10:	mov	x1, x19
  40ff14:	mov	w2, w23
  40ff18:	bl	404430 <mkdirat@plt>
  40ff1c:	mov	w21, w0
  40ff20:	cbz	w0, 40ffb4 <wcrtomb@plt+0xb194>
  40ff24:	bl	404d00 <__errno_location@plt>
  40ff28:	ldr	w8, [x0]
  40ff2c:	mov	x24, x0
  40ff30:	cmp	w8, #0x11
  40ff34:	b.ne	40fef4 <wcrtomb@plt+0xb0d4>  // b.any
  40ff38:	ldurb	w26, [x29, #-4]
  40ff3c:	cbz	w26, 40ff5c <wcrtomb@plt+0xb13c>
  40ff40:	ldrb	w8, [x27, #624]
  40ff44:	cbz	w8, 40fed8 <wcrtomb@plt+0xb0b8>
  40ff48:	mov	x0, x19
  40ff4c:	bl	4109e8 <wcrtomb@plt+0xbbc8>
  40ff50:	tbz	w0, #0, 40fed8 <wcrtomb@plt+0xb0b8>
  40ff54:	mov	w8, #0x1                   	// #1
  40ff58:	b	40fef0 <wcrtomb@plt+0xb0d0>
  40ff5c:	ldrb	w8, [x27, #624]
  40ff60:	cbnz	w8, 40ff40 <wcrtomb@plt+0xb120>
  40ff64:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  40ff68:	ldr	w8, [x8, #752]
  40ff6c:	and	w8, w8, #0xfffffffd
  40ff70:	cbnz	w8, 40fef4 <wcrtomb@plt+0xb0d4>
  40ff74:	b	40ff40 <wcrtomb@plt+0xb120>
  40ff78:	ldr	w20, [sp, #24]
  40ff7c:	and	w8, w20, #0xf000
  40ff80:	cmp	w8, #0x4, lsl #12
  40ff84:	b.ne	40ffa0 <wcrtomb@plt+0xb180>  // b.any
  40ff88:	cbz	w26, 40ffa8 <wcrtomb@plt+0xb188>
  40ff8c:	add	x1, sp, #0x8
  40ff90:	mov	x0, x19
  40ff94:	bl	410a88 <wcrtomb@plt+0xbc68>
  40ff98:	mov	w8, #0x1                   	// #1
  40ff9c:	b	40ffac <wcrtomb@plt+0xb18c>
  40ffa0:	mov	w22, #0xffffffff            	// #-1
  40ffa4:	b	40fee8 <wcrtomb@plt+0xb0c8>
  40ffa8:	mov	w8, #0x2                   	// #2
  40ffac:	mov	w22, #0xffffffff            	// #-1
  40ffb0:	b	40fef0 <wcrtomb@plt+0xb0d0>
  40ffb4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  40ffb8:	ldr	w8, [x8, #2080]
  40ffbc:	mov	w5, #0x100                 	// #256
  40ffc0:	mov	w22, #0x1ff                 	// #511
  40ffc4:	bic	w20, w23, w8
  40ffc8:	cbnz	w21, 410000 <wcrtomb@plt+0xb1e0>
  40ffcc:	b	410010 <wcrtomb@plt+0xb1f0>
  40ffd0:	cbnz	w0, 40fff8 <wcrtomb@plt+0xb1d8>
  40ffd4:	ldr	w8, [x24]
  40ffd8:	cmp	w8, #0x11
  40ffdc:	b.eq	40fff8 <wcrtomb@plt+0xb1d8>  // b.none
  40ffe0:	mov	x0, x19
  40ffe4:	bl	428100 <wcrtomb@plt+0x232e0>
  40ffe8:	mov	w21, #0x1                   	// #1
  40ffec:	b	41002c <wcrtomb@plt+0xb20c>
  40fff0:	cmp	w8, #0x2
  40fff4:	b.ne	410050 <wcrtomb@plt+0xb230>  // b.any
  40fff8:	mov	w5, wzr
  40fffc:	cbz	w21, 410010 <wcrtomb@plt+0xb1f0>
  410000:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410004:	ldr	w8, [x8, #752]
  410008:	and	w8, w8, #0xfffffffd
  41000c:	cbnz	w8, 41002c <wcrtomb@plt+0xb20c>
  410010:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  410014:	add	x1, x1, #0x60
  410018:	ldr	w4, [x1, #104]
  41001c:	mov	x0, x19
  410020:	mov	w2, w20
  410024:	mov	w3, w22
  410028:	bl	410bbc <wcrtomb@plt+0xbd9c>
  41002c:	mov	w0, w21
  410030:	ldp	x20, x19, [sp, #224]
  410034:	ldp	x22, x21, [sp, #208]
  410038:	ldp	x24, x23, [sp, #192]
  41003c:	ldp	x26, x25, [sp, #176]
  410040:	ldp	x28, x27, [sp, #160]
  410044:	ldp	x29, x30, [sp, #144]
  410048:	add	sp, sp, #0xf0
  41004c:	ret
  410050:	mov	w21, wzr
  410054:	b	41002c <wcrtomb@plt+0xb20c>
  410058:	sub	sp, sp, #0x30
  41005c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410060:	ldrb	w8, [x8, #952]
  410064:	stp	x29, x30, [sp, #16]
  410068:	stp	x20, x19, [sp, #32]
  41006c:	add	x29, sp, #0x10
  410070:	mov	x19, x0
  410074:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  410078:	sturb	wzr, [x29, #-4]
  41007c:	cbz	w8, 4100c8 <wcrtomb@plt+0xb2a8>
  410080:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  410084:	ldr	x0, [x20, #120]
  410088:	ldr	w1, [x8, #2240]
  41008c:	mov	x2, x19
  410090:	bl	404c70 <symlinkat@plt>
  410094:	cbz	w0, 4100f4 <wcrtomb@plt+0xb2d4>
  410098:	sub	x2, x29, #0x4
  41009c:	mov	x0, x19
  4100a0:	mov	w1, wzr
  4100a4:	bl	410844 <wcrtomb@plt+0xba24>
  4100a8:	cmp	w0, #0x2
  4100ac:	b.eq	41011c <wcrtomb@plt+0xb2fc>  // b.none
  4100b0:	cbnz	w0, 410080 <wcrtomb@plt+0xb260>
  4100b4:	ldr	x0, [x20, #120]
  4100b8:	mov	x1, x19
  4100bc:	bl	4285f8 <wcrtomb@plt+0x237d8>
  4100c0:	mov	w0, #0xffffffff            	// #-1
  4100c4:	b	410120 <wcrtomb@plt+0xb300>
  4100c8:	ldr	x0, [x20, #120]
  4100cc:	ldrb	w8, [x0]
  4100d0:	cmp	w8, #0x2f
  4100d4:	b.eq	4100e0 <wcrtomb@plt+0xb2c0>  // b.none
  4100d8:	bl	41c6ec <wcrtomb@plt+0x178cc>
  4100dc:	tbz	w0, #0, 410080 <wcrtomb@plt+0xb260>
  4100e0:	sub	x2, x29, #0x4
  4100e4:	mov	w1, #0x1                   	// #1
  4100e8:	mov	x0, x19
  4100ec:	bl	410dac <wcrtomb@plt+0xbf8c>
  4100f0:	b	410120 <wcrtomb@plt+0xb300>
  4100f4:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  4100f8:	add	x1, x1, #0x60
  4100fc:	mov	w2, #0xffffffff            	// #-1
  410100:	mov	w5, #0x32                  	// #50
  410104:	mov	w7, #0x100                 	// #256
  410108:	mov	x0, x19
  41010c:	mov	w3, wzr
  410110:	mov	w4, wzr
  410114:	mov	w6, wzr
  410118:	bl	40f484 <wcrtomb@plt+0xa664>
  41011c:	mov	w0, wzr
  410120:	ldp	x20, x19, [sp, #32]
  410124:	ldp	x29, x30, [sp, #16]
  410128:	add	sp, sp, #0x30
  41012c:	ret
  410130:	sub	sp, sp, #0x150
  410134:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410138:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41013c:	stp	x20, x19, [sp, #320]
  410140:	ldrb	w9, [x9, #952]
  410144:	ldr	x20, [x8, #120]
  410148:	stp	x29, x30, [sp, #272]
  41014c:	add	x29, sp, #0x110
  410150:	mov	x19, x0
  410154:	stp	x28, x23, [sp, #288]
  410158:	stp	x22, x21, [sp, #304]
  41015c:	sturb	wzr, [x29, #-4]
  410160:	cbnz	w9, 410184 <wcrtomb@plt+0xb364>
  410164:	mov	x0, x20
  410168:	bl	41c6ec <wcrtomb@plt+0x178cc>
  41016c:	tbz	w0, #0, 410184 <wcrtomb@plt+0xb364>
  410170:	sub	x2, x29, #0x4
  410174:	mov	x0, x19
  410178:	mov	w1, wzr
  41017c:	bl	410dac <wcrtomb@plt+0xbf8c>
  410180:	b	41031c <wcrtomb@plt+0xb4fc>
  410184:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  410188:	b	4101c0 <wcrtomb@plt+0xb3a0>
  41018c:	ldr	w0, [x23, #2240]
  410190:	add	x2, sp, #0x88
  410194:	mov	w3, #0x100                 	// #256
  410198:	mov	x1, x20
  41019c:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  4101a0:	cbz	w0, 410208 <wcrtomb@plt+0xb3e8>
  4101a4:	sub	x2, x29, #0x4
  4101a8:	mov	x0, x19
  4101ac:	mov	w1, wzr
  4101b0:	str	w22, [x21]
  4101b4:	bl	410844 <wcrtomb@plt+0xba24>
  4101b8:	cmp	w0, #0x1
  4101bc:	b.ne	4102f8 <wcrtomb@plt+0xb4d8>  // b.any
  4101c0:	ldr	w0, [x23, #2240]
  4101c4:	mov	x1, x20
  4101c8:	mov	x3, x19
  4101cc:	mov	w4, wzr
  4101d0:	mov	w2, w0
  4101d4:	bl	404290 <linkat@plt>
  4101d8:	mov	w22, w0
  4101dc:	bl	404d00 <__errno_location@plt>
  4101e0:	cbz	w22, 410244 <wcrtomb@plt+0xb424>
  4101e4:	ldr	w22, [x0]
  4101e8:	mov	x21, x0
  4101ec:	cmp	w22, #0x11
  4101f0:	b.ne	41018c <wcrtomb@plt+0xb36c>  // b.any
  4101f4:	mov	x0, x20
  4101f8:	mov	x1, x19
  4101fc:	bl	404920 <strcmp@plt>
  410200:	cbnz	w0, 41018c <wcrtomb@plt+0xb36c>
  410204:	b	410318 <wcrtomb@plt+0xb4f8>
  410208:	ldr	w0, [x23, #2240]
  41020c:	add	x2, sp, #0x8
  410210:	mov	w3, #0x100                 	// #256
  410214:	mov	x1, x19
  410218:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  41021c:	cbnz	w0, 4101a4 <wcrtomb@plt+0xb384>
  410220:	ldr	x8, [sp, #136]
  410224:	ldr	x9, [sp, #8]
  410228:	cmp	x8, x9
  41022c:	b.ne	4101a4 <wcrtomb@plt+0xb384>  // b.any
  410230:	ldr	x8, [sp, #144]
  410234:	ldr	x9, [sp, #16]
  410238:	cmp	x8, x9
  41023c:	b.ne	4101a4 <wcrtomb@plt+0xb384>  // b.any
  410240:	b	410318 <wcrtomb@plt+0xb4f8>
  410244:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410248:	ldr	x21, [x8, #2104]
  41024c:	cbz	x21, 410318 <wcrtomb@plt+0xb4f8>
  410250:	ldr	w0, [x23, #2240]
  410254:	add	x2, sp, #0x88
  410258:	mov	w3, #0x100                 	// #256
  41025c:	mov	x1, x20
  410260:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  410264:	cbnz	w0, 410318 <wcrtomb@plt+0xb4f8>
  410268:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41026c:	ldr	w20, [x8]
  410270:	ldp	x22, x23, [sp, #136]
  410274:	b	410280 <wcrtomb@plt+0xb460>
  410278:	ldr	x21, [x21]
  41027c:	cbz	x21, 410318 <wcrtomb@plt+0xb4f8>
  410280:	ldr	w8, [x21, #88]
  410284:	cmp	w8, w20
  410288:	b.ne	410278 <wcrtomb@plt+0xb458>  // b.any
  41028c:	ldr	x8, [x21, #8]
  410290:	cmp	x8, x22
  410294:	b.ne	410278 <wcrtomb@plt+0xb458>  // b.any
  410298:	ldr	x8, [x21, #16]
  41029c:	cmp	x8, x23
  4102a0:	b.ne	410278 <wcrtomb@plt+0xb458>  // b.any
  4102a4:	add	x0, sp, #0x88
  4102a8:	bl	43cc90 <argp_usage@@Base+0xb094>
  4102ac:	mov	x2, x0
  4102b0:	ldp	x0, x8, [x21, #24]
  4102b4:	mov	x3, x1
  4102b8:	mov	x1, x8
  4102bc:	bl	43cd0c <argp_usage@@Base+0xb110>
  4102c0:	cbnz	w0, 410278 <wcrtomb@plt+0xb458>
  4102c4:	mov	x0, x19
  4102c8:	bl	404190 <strlen@plt>
  4102cc:	add	x0, x0, #0x9
  4102d0:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4102d4:	mov	x20, x0
  4102d8:	add	x0, x0, #0x8
  4102dc:	mov	x1, x19
  4102e0:	bl	404b20 <strcpy@plt>
  4102e4:	ldr	x8, [x21, #96]
  4102e8:	mov	w0, wzr
  4102ec:	str	x8, [x20]
  4102f0:	str	x20, [x21, #96]
  4102f4:	b	41031c <wcrtomb@plt+0xb4fc>
  4102f8:	cmp	w0, #0x2
  4102fc:	b.eq	410318 <wcrtomb@plt+0xb4f8>  // b.none
  410300:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410304:	ldrb	w8, [x8, #33]
  410308:	cbz	w8, 410334 <wcrtomb@plt+0xb514>
  41030c:	ldr	w8, [x21]
  410310:	cmp	w8, #0x11
  410314:	b.ne	410334 <wcrtomb@plt+0xb514>  // b.any
  410318:	mov	w0, wzr
  41031c:	ldp	x20, x19, [sp, #320]
  410320:	ldp	x22, x21, [sp, #304]
  410324:	ldp	x28, x23, [sp, #288]
  410328:	ldp	x29, x30, [sp, #272]
  41032c:	add	sp, sp, #0x150
  410330:	ret
  410334:	mov	x0, x20
  410338:	mov	x1, x19
  41033c:	bl	42806c <wcrtomb@plt+0x2324c>
  410340:	mov	w0, #0x1                   	// #1
  410344:	b	41031c <wcrtomb@plt+0xb4fc>
  410348:	stp	x29, x30, [sp, #-64]!
  41034c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  410350:	ldr	w9, [x9, #980]
  410354:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410358:	ldr	w8, [x8, #200]
  41035c:	mov	w10, #0xffffffc0            	// #-64
  410360:	cmp	w9, #0x0
  410364:	csinv	w9, w10, wzr, gt
  410368:	mov	w11, #0x61ff                	// #25087
  41036c:	and	w8, w8, w9
  410370:	str	x23, [sp, #16]
  410374:	stp	x22, x21, [sp, #32]
  410378:	stp	x20, x19, [sp, #48]
  41037c:	mov	x29, sp
  410380:	mov	w19, w1
  410384:	mov	x20, x0
  410388:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41038c:	and	w21, w8, w11
  410390:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  410394:	strb	wzr, [x29, #28]
  410398:	ldr	w0, [x22, #2240]
  41039c:	ldr	x3, [x23, #216]
  4103a0:	mov	x1, x20
  4103a4:	mov	w2, w21
  4103a8:	bl	4500e0 <_obstack_memory_used@@Base+0x11e80>
  4103ac:	cbz	w0, 4103dc <wcrtomb@plt+0xb5bc>
  4103b0:	add	x2, x29, #0x1c
  4103b4:	mov	x0, x20
  4103b8:	mov	w1, wzr
  4103bc:	bl	410844 <wcrtomb@plt+0xba24>
  4103c0:	cmp	w0, #0x2
  4103c4:	b.eq	41040c <wcrtomb@plt+0xb5ec>  // b.none
  4103c8:	cbnz	w0, 410398 <wcrtomb@plt+0xb578>
  4103cc:	mov	x0, x20
  4103d0:	bl	428140 <wcrtomb@plt+0x23320>
  4103d4:	mov	w0, #0xffffffff            	// #-1
  4103d8:	b	410410 <wcrtomb@plt+0xb5f0>
  4103dc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4103e0:	ldr	w8, [x8, #2080]
  4103e4:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  4103e8:	add	x1, x1, #0x60
  4103ec:	mov	w2, #0xffffffff            	// #-1
  4103f0:	bic	w3, w21, w8
  4103f4:	mov	w4, #0x1ff                 	// #511
  4103f8:	mov	w7, #0x100                 	// #256
  4103fc:	mov	x0, x20
  410400:	mov	w5, w19
  410404:	mov	w6, wzr
  410408:	bl	40f484 <wcrtomb@plt+0xa664>
  41040c:	mov	w0, wzr
  410410:	ldp	x20, x19, [sp, #48]
  410414:	ldp	x22, x21, [sp, #32]
  410418:	ldr	x23, [sp, #16]
  41041c:	ldp	x29, x30, [sp], #64
  410420:	ret
  410424:	sub	sp, sp, #0x40
  410428:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41042c:	ldr	w8, [x8, #980]
  410430:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  410434:	ldr	w9, [x9, #200]
  410438:	mov	w10, #0xffffffc0            	// #-64
  41043c:	cmp	w8, #0x0
  410440:	csinv	w8, w10, wzr, gt
  410444:	and	w8, w9, w8
  410448:	stp	x29, x30, [sp, #16]
  41044c:	stp	x22, x21, [sp, #32]
  410450:	stp	x20, x19, [sp, #48]
  410454:	add	x29, sp, #0x10
  410458:	mov	w19, w1
  41045c:	mov	x20, x0
  410460:	and	w21, w8, #0x1ff
  410464:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  410468:	sturb	wzr, [x29, #-4]
  41046c:	ldr	w0, [x22, #2240]
  410470:	mov	x1, x20
  410474:	mov	w2, w21
  410478:	bl	404c00 <mkfifoat@plt>
  41047c:	cbz	w0, 4104ac <wcrtomb@plt+0xb68c>
  410480:	sub	x2, x29, #0x4
  410484:	mov	x0, x20
  410488:	mov	w1, wzr
  41048c:	bl	410844 <wcrtomb@plt+0xba24>
  410490:	cmp	w0, #0x2
  410494:	b.eq	4104dc <wcrtomb@plt+0xb6bc>  // b.none
  410498:	cbnz	w0, 41046c <wcrtomb@plt+0xb64c>
  41049c:	mov	x0, x20
  4104a0:	bl	428120 <wcrtomb@plt+0x23300>
  4104a4:	mov	w0, #0xffffffff            	// #-1
  4104a8:	b	4104e0 <wcrtomb@plt+0xb6c0>
  4104ac:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4104b0:	ldr	w8, [x8, #2080]
  4104b4:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  4104b8:	add	x1, x1, #0x60
  4104bc:	mov	w2, #0xffffffff            	// #-1
  4104c0:	bic	w3, w21, w8
  4104c4:	mov	w4, #0x1ff                 	// #511
  4104c8:	mov	w7, #0x100                 	// #256
  4104cc:	mov	x0, x20
  4104d0:	mov	w5, w19
  4104d4:	mov	w6, wzr
  4104d8:	bl	40f484 <wcrtomb@plt+0xa664>
  4104dc:	mov	w0, wzr
  4104e0:	ldp	x20, x19, [sp, #48]
  4104e4:	ldp	x22, x21, [sp, #32]
  4104e8:	ldp	x29, x30, [sp, #16]
  4104ec:	add	sp, sp, #0x40
  4104f0:	ret
  4104f4:	stp	x29, x30, [sp, #-16]!
  4104f8:	mov	x29, sp
  4104fc:	bl	417ab0 <wcrtomb@plt+0x12c90>
  410500:	mov	w0, wzr
  410504:	ldp	x29, x30, [sp], #16
  410508:	ret
  41050c:	stp	x29, x30, [sp, #-16]!
  410510:	mov	x29, sp
  410514:	bl	417ab0 <wcrtomb@plt+0x12c90>
  410518:	mov	w0, wzr
  41051c:	ldp	x29, x30, [sp], #16
  410520:	ret
  410524:	mov	w0, #0x1                   	// #1
  410528:	ret
  41052c:	sub	sp, sp, #0xa0
  410530:	stp	x20, x19, [sp, #144]
  410534:	mov	x20, x1
  410538:	stp	x29, x30, [sp, #128]
  41053c:	add	x29, sp, #0x80
  410540:	cbz	x1, 410584 <wcrtomb@plt+0xb764>
  410544:	ldr	w8, [x20, #16]
  410548:	and	w8, w8, #0xf000
  41054c:	cmp	w8, #0x4, lsl #12
  410550:	b.eq	4105a8 <wcrtomb@plt+0xb788>  // b.none
  410554:	mov	x0, x20
  410558:	bl	43cc84 <argp_usage@@Base+0xb088>
  41055c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410560:	add	x8, x8, #0x148
  410564:	mov	x2, x0
  410568:	ldp	x0, x8, [x8]
  41056c:	mov	x3, x1
  410570:	mov	x1, x8
  410574:	bl	422590 <wcrtomb@plt+0x1d770>
  410578:	cmp	w0, #0x1
  41057c:	cset	w0, lt  // lt = tstop
  410580:	b	4105bc <wcrtomb@plt+0xb79c>
  410584:	mov	x1, sp
  410588:	mov	x19, x0
  41058c:	mov	x20, sp
  410590:	bl	41a52c <wcrtomb@plt+0x1570c>
  410594:	cbz	w0, 410544 <wcrtomb@plt+0xb724>
  410598:	bl	404d00 <__errno_location@plt>
  41059c:	ldr	w8, [x0]
  4105a0:	cmp	w8, #0x2
  4105a4:	b.ne	4105b0 <wcrtomb@plt+0xb790>  // b.any
  4105a8:	mov	w0, wzr
  4105ac:	b	4105bc <wcrtomb@plt+0xb79c>
  4105b0:	mov	x0, x19
  4105b4:	bl	4286c4 <wcrtomb@plt+0x238a4>
  4105b8:	mov	w0, #0x1                   	// #1
  4105bc:	ldp	x20, x19, [sp, #144]
  4105c0:	ldp	x29, x30, [sp, #128]
  4105c4:	add	sp, sp, #0xa0
  4105c8:	ret
  4105cc:	stp	x29, x30, [sp, #-64]!
  4105d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4105d4:	ldr	w8, [x8, #656]
  4105d8:	stp	x20, x19, [sp, #48]
  4105dc:	mov	x29, sp
  4105e0:	mov	x20, x0
  4105e4:	mov	w0, wzr
  4105e8:	cmp	w8, #0x1
  4105ec:	str	x23, [sp, #16]
  4105f0:	stp	x22, x21, [sp, #32]
  4105f4:	strb	wzr, [x29, #28]
  4105f8:	b.lt	4106a4 <wcrtomb@plt+0xb884>  // b.tstop
  4105fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410600:	ldr	x8, [x8, #424]
  410604:	cbz	x8, 4106a4 <wcrtomb@plt+0xb884>
  410608:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41060c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410610:	ldr	w8, [x8, #200]
  410614:	ldr	w9, [x9, #2080]
  410618:	mov	x19, x3
  41061c:	mov	w21, w2
  410620:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  410624:	bic	w8, w8, w9
  410628:	and	w8, w8, #0x1ff
  41062c:	eor	w22, w8, w1
  410630:	ldr	w0, [x23, #2240]
  410634:	mov	x1, x20
  410638:	mov	w2, w22
  41063c:	mov	x3, xzr
  410640:	bl	4500e0 <_obstack_memory_used@@Base+0x11e80>
  410644:	cbz	w0, 410678 <wcrtomb@plt+0xb858>
  410648:	add	x2, x29, #0x1c
  41064c:	mov	x0, x20
  410650:	mov	w1, wzr
  410654:	bl	410844 <wcrtomb@plt+0xba24>
  410658:	cmp	w0, #0x2
  41065c:	b.eq	4106a0 <wcrtomb@plt+0xb880>  // b.none
  410660:	cbnz	w0, 410630 <wcrtomb@plt+0xb810>
  410664:	bl	417ab0 <wcrtomb@plt+0x12c90>
  410668:	mov	x0, x20
  41066c:	bl	428160 <wcrtomb@plt+0x23340>
  410670:	mov	w0, #0x1                   	// #1
  410674:	b	4106a4 <wcrtomb@plt+0xb884>
  410678:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  41067c:	add	x0, x0, #0x60
  410680:	mov	x1, x20
  410684:	mov	w2, w21
  410688:	mov	w3, wzr
  41068c:	bl	426d58 <wcrtomb@plt+0x21f38>
  410690:	mov	w8, #0x1                   	// #1
  410694:	mov	w0, wzr
  410698:	str	w8, [x19]
  41069c:	b	4106a4 <wcrtomb@plt+0xb884>
  4106a0:	mov	w0, wzr
  4106a4:	ldp	x20, x19, [sp, #48]
  4106a8:	ldp	x22, x21, [sp, #32]
  4106ac:	ldr	x23, [sp, #16]
  4106b0:	ldp	x29, x30, [sp], #64
  4106b4:	ret
  4106b8:	sub	sp, sp, #0xc0
  4106bc:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4106c0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4106c4:	ldrb	w9, [x9, #576]
  4106c8:	stp	x24, x23, [sp, #144]
  4106cc:	ldr	w24, [x8, #752]
  4106d0:	mov	w10, #0x9c1                 	// #2497
  4106d4:	movk	w10, #0x8, lsl #16
  4106d8:	mov	w11, #0x8b41                	// #35649
  4106dc:	movk	w11, #0x8, lsl #16
  4106e0:	cmp	w9, #0x0
  4106e4:	add	w8, w10, #0x180
  4106e8:	csel	w8, w11, w8, eq  // eq = none
  4106ec:	cmp	w24, #0x2
  4106f0:	csel	w8, w8, w10, eq  // eq = none
  4106f4:	cmp	w3, #0x0
  4106f8:	and	w9, w8, #0xffffff7f
  4106fc:	stp	x22, x21, [sp, #160]
  410700:	stp	x20, x19, [sp, #176]
  410704:	mov	x19, x5
  410708:	mov	x20, x4
  41070c:	mov	w21, w2
  410710:	csel	w22, w8, w9, eq  // eq = none
  410714:	cmp	w1, #0x37
  410718:	mov	x23, x0
  41071c:	stp	x29, x30, [sp, #128]
  410720:	add	x29, sp, #0x80
  410724:	b.ne	41077c <wcrtomb@plt+0xb95c>  // b.any
  410728:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41072c:	ldrb	w9, [x8, #2096]
  410730:	tbnz	w9, #0, 41077c <wcrtomb@plt+0xb95c>
  410734:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410738:	ldrb	w9, [x9, #448]
  41073c:	mov	w10, #0x1                   	// #1
  410740:	strb	w10, [x8, #2096]
  410744:	tbz	w9, #3, 41077c <wcrtomb@plt+0xb95c>
  410748:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41074c:	ldr	x8, [x8, #1008]
  410750:	cbz	x8, 410758 <wcrtomb@plt+0xb938>
  410754:	blr	x8
  410758:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  41075c:	add	x1, x1, #0x3a4
  410760:	mov	w2, #0x5                   	// #5
  410764:	mov	x0, xzr
  410768:	bl	404bf0 <dcgettext@plt>
  41076c:	mov	x2, x0
  410770:	mov	w0, wzr
  410774:	mov	w1, wzr
  410778:	bl	4041f0 <error@plt>
  41077c:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  410780:	ldr	w0, [x8, #2240]
  410784:	mov	x1, x23
  410788:	mov	w2, w22
  41078c:	mov	w3, w21
  410790:	bl	404ce0 <openat@plt>
  410794:	mov	w22, w0
  410798:	tbnz	w0, #31, 4107ec <wcrtomb@plt+0xb9cc>
  41079c:	cmp	w24, #0x2
  4107a0:	b.ne	4107d4 <wcrtomb@plt+0xb9b4>  // b.any
  4107a4:	mov	x1, sp
  4107a8:	mov	w0, w22
  4107ac:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  4107b0:	cbz	w0, 410808 <wcrtomb@plt+0xb9e8>
  4107b4:	bl	404d00 <__errno_location@plt>
  4107b8:	ldr	w20, [x0]
  4107bc:	mov	x19, x0
  4107c0:	mov	w0, w22
  4107c4:	bl	4047c0 <close@plt>
  4107c8:	str	w20, [x19]
  4107cc:	mov	w22, #0xffffffff            	// #-1
  4107d0:	b	4107ec <wcrtomb@plt+0xb9cc>
  4107d4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4107d8:	ldr	w8, [x8, #2080]
  4107dc:	mov	w9, #0x1ff                 	// #511
  4107e0:	bic	w8, w21, w8
  4107e4:	str	w8, [x20]
  4107e8:	str	w9, [x19]
  4107ec:	mov	w0, w22
  4107f0:	ldp	x20, x19, [sp, #176]
  4107f4:	ldp	x22, x21, [sp, #160]
  4107f8:	ldp	x24, x23, [sp, #144]
  4107fc:	ldp	x29, x30, [sp, #128]
  410800:	add	sp, sp, #0xc0
  410804:	ret
  410808:	ldr	w8, [sp, #16]
  41080c:	and	w9, w8, #0xf000
  410810:	cmp	w9, #0x8, lsl #12
  410814:	b.ne	410828 <wcrtomb@plt+0xba08>  // b.any
  410818:	str	w8, [x20]
  41081c:	mov	w8, #0xffffffff            	// #-1
  410820:	str	w8, [x19]
  410824:	b	4107ec <wcrtomb@plt+0xb9cc>
  410828:	mov	w0, w22
  41082c:	bl	4047c0 <close@plt>
  410830:	bl	404d00 <__errno_location@plt>
  410834:	mov	w8, #0x11                  	// #17
  410838:	str	w8, [x0]
  41083c:	mov	w22, #0xffffffff            	// #-1
  410840:	b	4107ec <wcrtomb@plt+0xb9cc>
  410844:	sub	sp, sp, #0xc0
  410848:	stp	x29, x30, [sp, #128]
  41084c:	stp	x24, x23, [sp, #144]
  410850:	stp	x22, x21, [sp, #160]
  410854:	stp	x20, x19, [sp, #176]
  410858:	add	x29, sp, #0x80
  41085c:	mov	x20, x2
  410860:	mov	w22, w1
  410864:	mov	x19, x0
  410868:	bl	404d00 <__errno_location@plt>
  41086c:	ldrb	w8, [x20]
  410870:	cbz	w8, 41087c <wcrtomb@plt+0xba5c>
  410874:	mov	w0, wzr
  410878:	b	410980 <wcrtomb@plt+0xbb60>
  41087c:	ldr	w24, [x0]
  410880:	mov	x21, x0
  410884:	sub	w8, w24, #0x2
  410888:	cmp	w8, #0x26
  41088c:	b.hi	4108ac <wcrtomb@plt+0xba8c>  // b.pmore
  410890:	adrp	x9, 451000 <_obstack_memory_used@@Base+0x12da0>
  410894:	add	x9, x9, #0x1e4
  410898:	adr	x10, 4108b4 <wcrtomb@plt+0xba94>
  41089c:	ldrb	w11, [x9, x8]
  4108a0:	add	x10, x10, x11, lsl #2
  4108a4:	mov	x23, xzr
  4108a8:	br	x10
  4108ac:	cmp	w24, #0x5f
  4108b0:	b.ne	410978 <wcrtomb@plt+0xbb58>  // b.any
  4108b4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4108b8:	ldr	w8, [x8, #752]
  4108bc:	cmp	w8, #0x2
  4108c0:	b.ne	410978 <wcrtomb@plt+0xbb58>  // b.any
  4108c4:	tbz	w22, #0, 410978 <wcrtomb@plt+0xbb58>
  4108c8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4108cc:	ldrb	w8, [x8, #576]
  4108d0:	cbnz	w8, 410978 <wcrtomb@plt+0xbb58>
  4108d4:	mov	w1, #0x2f                  	// #47
  4108d8:	mov	x0, x19
  4108dc:	bl	404a70 <strchr@plt>
  4108e0:	cbz	x0, 4108fc <wcrtomb@plt+0xbadc>
  4108e4:	mov	x1, sp
  4108e8:	mov	x0, x19
  4108ec:	mov	x23, sp
  4108f0:	bl	41a52c <wcrtomb@plt+0x1570c>
  4108f4:	cbnz	w0, 410978 <wcrtomb@plt+0xbb58>
  4108f8:	b	410900 <wcrtomb@plt+0xbae0>
  4108fc:	mov	x23, xzr
  410900:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410904:	ldr	w8, [x8, #752]
  410908:	cmp	w8, #0x6
  41090c:	b.hi	410968 <wcrtomb@plt+0xbb48>  // b.pmore
  410910:	adrp	x9, 451000 <_obstack_memory_used@@Base+0x12da0>
  410914:	add	x9, x9, #0x20b
  410918:	adr	x10, 41092c <wcrtomb@plt+0xbb0c>
  41091c:	ldrb	w11, [x9, x8]
  410920:	add	x10, x10, x11, lsl #2
  410924:	mov	w0, wzr
  410928:	br	x10
  41092c:	mov	x0, x19
  410930:	mov	w1, wzr
  410934:	bl	41a070 <wcrtomb@plt+0x15250>
  410938:	cmp	w0, #0x0
  41093c:	b.gt	4109a0 <wcrtomb@plt+0xbb80>
  410940:	b	410968 <wcrtomb@plt+0xbb48>
  410944:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410948:	ldrb	w8, [x8, #450]
  41094c:	tbnz	w8, #4, 4109a8 <wcrtomb@plt+0xbb88>
  410950:	mov	w0, #0x2                   	// #2
  410954:	b	410980 <wcrtomb@plt+0xbb60>
  410958:	mov	x0, x19
  41095c:	mov	x1, x23
  410960:	bl	41052c <wcrtomb@plt+0xb70c>
  410964:	tbz	w0, #0, 41092c <wcrtomb@plt+0xbb0c>
  410968:	mov	x0, x19
  41096c:	mov	x1, x20
  410970:	bl	40f2b0 <wcrtomb@plt+0xa490>
  410974:	cbz	w0, 410998 <wcrtomb@plt+0xbb78>
  410978:	mov	w0, wzr
  41097c:	str	w24, [x21]
  410980:	ldp	x20, x19, [sp, #176]
  410984:	ldp	x22, x21, [sp, #160]
  410988:	ldp	x24, x23, [sp, #144]
  41098c:	ldp	x29, x30, [sp, #128]
  410990:	add	sp, sp, #0xc0
  410994:	ret
  410998:	ldrb	w8, [x20]
  41099c:	cbz	w8, 410978 <wcrtomb@plt+0xbb58>
  4109a0:	mov	w0, #0x1                   	// #1
  4109a4:	b	410980 <wcrtomb@plt+0xbb60>
  4109a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4109ac:	ldr	x8, [x8, #1008]
  4109b0:	cbz	x8, 4109b8 <wcrtomb@plt+0xbb98>
  4109b4:	blr	x8
  4109b8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4109bc:	add	x1, x1, #0x3d1
  4109c0:	mov	w2, #0x5                   	// #5
  4109c4:	mov	x0, xzr
  4109c8:	bl	404bf0 <dcgettext@plt>
  4109cc:	mov	x2, x0
  4109d0:	mov	w0, wzr
  4109d4:	mov	w1, wzr
  4109d8:	mov	x3, x19
  4109dc:	bl	4041f0 <error@plt>
  4109e0:	mov	w0, #0x2                   	// #2
  4109e4:	b	410980 <wcrtomb@plt+0xbb60>
  4109e8:	sub	sp, sp, #0xb0
  4109ec:	stp	x29, x30, [sp, #128]
  4109f0:	stp	x22, x21, [sp, #144]
  4109f4:	stp	x20, x19, [sp, #160]
  4109f8:	add	x29, sp, #0x80
  4109fc:	mov	x20, x0
  410a00:	bl	404d00 <__errno_location@plt>
  410a04:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  410a08:	mov	x19, x0
  410a0c:	ldr	w21, [x0]
  410a10:	ldr	w0, [x22, #2240]
  410a14:	mov	x2, sp
  410a18:	mov	w3, #0x100                 	// #256
  410a1c:	mov	x1, x20
  410a20:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  410a24:	cbnz	w0, 410a6c <wcrtomb@plt+0xbc4c>
  410a28:	ldr	w8, [sp, #16]
  410a2c:	and	w8, w8, #0xf000
  410a30:	cmp	w8, #0xa, lsl #12
  410a34:	b.ne	410a6c <wcrtomb@plt+0xbc4c>  // b.any
  410a38:	ldr	w0, [x22, #2240]
  410a3c:	mov	x2, sp
  410a40:	mov	x1, x20
  410a44:	mov	w3, wzr
  410a48:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  410a4c:	mov	w8, w0
  410a50:	mov	w0, wzr
  410a54:	cbnz	w8, 410a70 <wcrtomb@plt+0xbc50>
  410a58:	ldr	w8, [sp, #16]
  410a5c:	and	w8, w8, #0xf000
  410a60:	cmp	w8, #0x4, lsl #12
  410a64:	cset	w0, eq  // eq = none
  410a68:	b	410a70 <wcrtomb@plt+0xbc50>
  410a6c:	mov	w0, wzr
  410a70:	str	w21, [x19]
  410a74:	ldp	x20, x19, [sp, #160]
  410a78:	ldp	x22, x21, [sp, #144]
  410a7c:	ldp	x29, x30, [sp, #128]
  410a80:	add	sp, sp, #0xb0
  410a84:	ret
  410a88:	sub	sp, sp, #0xb0
  410a8c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410a90:	stp	x22, x21, [sp, #144]
  410a94:	ldr	x21, [x8, #2088]
  410a98:	stp	x20, x19, [sp, #160]
  410a9c:	mov	x19, x0
  410aa0:	stp	x29, x30, [sp, #128]
  410aa4:	add	x29, sp, #0x80
  410aa8:	cbz	x21, 410b4c <wcrtomb@plt+0xbd2c>
  410aac:	mov	x20, x1
  410ab0:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  410ab4:	b	410ac0 <wcrtomb@plt+0xbca0>
  410ab8:	ldr	x21, [x21]
  410abc:	cbz	x21, 410b4c <wcrtomb@plt+0xbd2c>
  410ac0:	ldr	w0, [x22, #2240]
  410ac4:	ldr	x1, [x21, #160]
  410ac8:	ldr	w3, [x21, #84]
  410acc:	mov	x2, sp
  410ad0:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  410ad4:	cbnz	w0, 410ba0 <wcrtomb@plt+0xbd80>
  410ad8:	ldr	x8, [sp]
  410adc:	ldr	x9, [x20]
  410ae0:	cmp	x8, x9
  410ae4:	b.ne	410ab8 <wcrtomb@plt+0xbc98>  // b.any
  410ae8:	ldr	x8, [sp, #8]
  410aec:	ldr	x9, [x20, #8]
  410af0:	cmp	x8, x9
  410af4:	b.ne	410ab8 <wcrtomb@plt+0xbc98>  // b.any
  410af8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410afc:	add	x8, x8, #0xb8
  410b00:	ldr	x9, [x8]
  410b04:	str	x9, [x21, #8]
  410b08:	ldr	x9, [x8, #8]
  410b0c:	str	x9, [x21, #16]
  410b10:	ldr	w9, [x8, #16]
  410b14:	str	w9, [x21, #24]
  410b18:	ldr	w9, [x8, #24]
  410b1c:	str	w9, [x21, #28]
  410b20:	ldr	w9, [x8, #28]
  410b24:	str	w9, [x21, #32]
  410b28:	ldr	q0, [x8, #128]
  410b2c:	mov	w9, #0xffffffff            	// #-1
  410b30:	stur	q0, [x21, #40]
  410b34:	ldr	q0, [x8, #144]
  410b38:	stur	q0, [x21, #56]
  410b3c:	ldr	w8, [sp, #16]
  410b40:	strb	wzr, [x21, #80]
  410b44:	stp	w8, w9, [x21, #72]
  410b48:	b	410ba8 <wcrtomb@plt+0xbd88>
  410b4c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410b50:	ldr	x8, [x8, #1008]
  410b54:	cbz	x8, 410b5c <wcrtomb@plt+0xbd3c>
  410b58:	blr	x8
  410b5c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  410b60:	add	x1, x1, #0x3ec
  410b64:	mov	w2, #0x5                   	// #5
  410b68:	mov	x0, xzr
  410b6c:	bl	404bf0 <dcgettext@plt>
  410b70:	mov	x20, x0
  410b74:	mov	x0, x19
  410b78:	bl	43beac <argp_usage@@Base+0xa2b0>
  410b7c:	mov	x3, x0
  410b80:	mov	w0, wzr
  410b84:	mov	w1, wzr
  410b88:	mov	x2, x20
  410b8c:	bl	4041f0 <error@plt>
  410b90:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410b94:	mov	w9, #0x2                   	// #2
  410b98:	str	w9, [x8, #3456]
  410b9c:	b	410ba8 <wcrtomb@plt+0xbd88>
  410ba0:	ldr	x0, [x21, #160]
  410ba4:	bl	4286a4 <wcrtomb@plt+0x23884>
  410ba8:	ldp	x20, x19, [sp, #160]
  410bac:	ldp	x22, x21, [sp, #144]
  410bb0:	ldp	x29, x30, [sp, #128]
  410bb4:	add	sp, sp, #0xb0
  410bb8:	ret
  410bbc:	stp	x29, x30, [sp, #-96]!
  410bc0:	str	x27, [sp, #16]
  410bc4:	stp	x26, x25, [sp, #32]
  410bc8:	stp	x24, x23, [sp, #48]
  410bcc:	stp	x22, x21, [sp, #64]
  410bd0:	stp	x20, x19, [sp, #80]
  410bd4:	mov	x29, sp
  410bd8:	mov	w22, w5
  410bdc:	mov	w26, w4
  410be0:	mov	w23, w3
  410be4:	mov	w24, w2
  410be8:	mov	x21, x1
  410bec:	mov	x19, x0
  410bf0:	bl	404190 <strlen@plt>
  410bf4:	mov	x25, x0
  410bf8:	mov	w0, #0xa8                  	// #168
  410bfc:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  410c00:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410c04:	ldr	x8, [x27, #2088]
  410c08:	mov	x20, x0
  410c0c:	str	w26, [x0, #24]
  410c10:	str	x8, [x0]
  410c14:	cbz	x21, 410c48 <wcrtomb@plt+0xbe28>
  410c18:	ldr	x8, [x21, #88]
  410c1c:	str	x8, [x20, #8]
  410c20:	ldr	x8, [x21, #96]
  410c24:	str	x8, [x20, #16]
  410c28:	ldr	w8, [x21, #112]
  410c2c:	str	w8, [x20, #28]
  410c30:	ldr	w8, [x21, #116]
  410c34:	str	w8, [x20, #32]
  410c38:	ldur	q0, [x21, #216]
  410c3c:	stur	q0, [x20, #40]
  410c40:	ldur	q0, [x21, #232]
  410c44:	stur	q0, [x20, #56]
  410c48:	cmp	x21, #0x0
  410c4c:	mov	x0, x19
  410c50:	cset	w26, eq  // eq = none
  410c54:	str	x25, [x20, #152]
  410c58:	bl	43d39c <argp_usage@@Base+0xb7a0>
  410c5c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410c60:	ldr	w8, [x8]
  410c64:	str	x0, [x20, #160]
  410c68:	mov	x0, x20
  410c6c:	stp	w24, w23, [x20, #72]
  410c70:	strb	w26, [x20, #80]
  410c74:	str	w22, [x20, #84]
  410c78:	strb	wzr, [x20, #88]
  410c7c:	str	xzr, [x0, #96]!
  410c80:	stur	w8, [x0, #-4]
  410c84:	cbz	x21, 410cb4 <wcrtomb@plt+0xbe94>
  410c88:	ldr	x1, [x21, #48]
  410c8c:	bl	419680 <wcrtomb@plt+0x14860>
  410c90:	ldr	x0, [x21, #56]
  410c94:	cbz	x0, 410cb4 <wcrtomb@plt+0xbe94>
  410c98:	ldr	x8, [x21, #64]
  410c9c:	add	x1, x8, #0x1
  410ca0:	bl	43d358 <argp_usage@@Base+0xb75c>
  410ca4:	ldr	x8, [x21, #64]
  410ca8:	stp	x0, x8, [x20, #104]
  410cac:	cbnz	x21, 410cbc <wcrtomb@plt+0xbe9c>
  410cb0:	b	410ce4 <wcrtomb@plt+0xbec4>
  410cb4:	stp	xzr, xzr, [x20, #104]
  410cb8:	cbz	x21, 410ce4 <wcrtomb@plt+0xbec4>
  410cbc:	ldr	x0, [x21, #72]
  410cc0:	cbz	x0, 410ce4 <wcrtomb@plt+0xbec4>
  410cc4:	ldr	x8, [x21, #80]
  410cc8:	add	x1, x8, #0x1
  410ccc:	bl	43d358 <argp_usage@@Base+0xb75c>
  410cd0:	ldr	x8, [x21, #80]
  410cd4:	stp	x0, x8, [x20, #120]
  410cd8:	cbnz	x21, 410cec <wcrtomb@plt+0xbecc>
  410cdc:	stp	xzr, xzr, [x20, #136]
  410ce0:	b	410cfc <wcrtomb@plt+0xbedc>
  410ce4:	stp	xzr, xzr, [x20, #120]
  410ce8:	cbz	x21, 410cdc <wcrtomb@plt+0xbebc>
  410cec:	add	x1, x20, #0x90
  410cf0:	add	x2, x20, #0x88
  410cf4:	mov	x0, x21
  410cf8:	bl	411bb4 <wcrtomb@plt+0xcd94>
  410cfc:	ldr	x0, [x20, #160]
  410d00:	mov	x1, x19
  410d04:	bl	404b20 <strcpy@plt>
  410d08:	mov	x0, x19
  410d0c:	str	x20, [x27, #2088]
  410d10:	bl	419fc0 <wcrtomb@plt+0x151a0>
  410d14:	tbz	w0, #0, 410d20 <wcrtomb@plt+0xbf00>
  410d18:	mov	x0, x20
  410d1c:	bl	410d3c <wcrtomb@plt+0xbf1c>
  410d20:	ldp	x20, x19, [sp, #80]
  410d24:	ldp	x22, x21, [sp, #64]
  410d28:	ldp	x24, x23, [sp, #48]
  410d2c:	ldp	x26, x25, [sp, #32]
  410d30:	ldr	x27, [sp, #16]
  410d34:	ldp	x29, x30, [sp], #96
  410d38:	ret
  410d3c:	sub	sp, sp, #0xa0
  410d40:	stp	x20, x19, [sp, #144]
  410d44:	mov	x19, x0
  410d48:	mov	w20, #0x1                   	// #1
  410d4c:	stp	x29, x30, [sp, #128]
  410d50:	add	x29, sp, #0x80
  410d54:	ldr	x0, [x19, #160]
  410d58:	mov	x1, sp
  410d5c:	strb	w20, [x19, #88]
  410d60:	bl	41a52c <wcrtomb@plt+0x1570c>
  410d64:	cbz	w0, 410d7c <wcrtomb@plt+0xbf5c>
  410d68:	ldr	x0, [x19, #160]
  410d6c:	bl	4286a4 <wcrtomb@plt+0x23884>
  410d70:	ldr	x19, [x19]
  410d74:	cbnz	x19, 410d94 <wcrtomb@plt+0xbf74>
  410d78:	b	410d9c <wcrtomb@plt+0xbf7c>
  410d7c:	ldr	x8, [sp]
  410d80:	str	x8, [x19, #8]
  410d84:	ldr	x8, [sp, #8]
  410d88:	str	x8, [x19, #16]
  410d8c:	ldr	x19, [x19]
  410d90:	cbz	x19, 410d9c <wcrtomb@plt+0xbf7c>
  410d94:	ldrb	w8, [x19, #88]
  410d98:	cbz	w8, 410d54 <wcrtomb@plt+0xbf34>
  410d9c:	ldp	x20, x19, [sp, #144]
  410da0:	ldp	x29, x30, [sp, #128]
  410da4:	add	sp, sp, #0xa0
  410da8:	ret
  410dac:	sub	sp, sp, #0xc0
  410db0:	stp	x24, x23, [sp, #144]
  410db4:	stp	x22, x21, [sp, #160]
  410db8:	stp	x20, x19, [sp, #176]
  410dbc:	mov	x21, x2
  410dc0:	mov	w20, w1
  410dc4:	mov	x19, x0
  410dc8:	and	w23, w1, #0x1
  410dcc:	adrp	x24, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  410dd0:	stp	x29, x30, [sp, #128]
  410dd4:	add	x29, sp, #0x80
  410dd8:	ldr	w0, [x24, #2240]
  410ddc:	mov	w2, #0xc1                  	// #193
  410de0:	mov	x1, x19
  410de4:	mov	w3, wzr
  410de8:	bl	404ce0 <openat@plt>
  410dec:	tbz	w0, #31, 410e1c <wcrtomb@plt+0xbffc>
  410df0:	mov	x0, x19
  410df4:	mov	w1, wzr
  410df8:	mov	x2, x21
  410dfc:	bl	410844 <wcrtomb@plt+0xba24>
  410e00:	cmp	w0, #0x2
  410e04:	b.eq	410f44 <wcrtomb@plt+0xc124>  // b.none
  410e08:	cbnz	w0, 410dd8 <wcrtomb@plt+0xbfb8>
  410e0c:	mov	x0, x19
  410e10:	bl	428160 <wcrtomb@plt+0x23340>
  410e14:	mov	w0, #0xffffffff            	// #-1
  410e18:	b	410f48 <wcrtomb@plt+0xc128>
  410e1c:	mov	x1, sp
  410e20:	mov	w22, w0
  410e24:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  410e28:	cbz	w0, 410e44 <wcrtomb@plt+0xc024>
  410e2c:	mov	x0, x19
  410e30:	bl	4286a4 <wcrtomb@plt+0x23884>
  410e34:	mov	w0, w22
  410e38:	bl	4047c0 <close@plt>
  410e3c:	mov	w0, #0xffffffff            	// #-1
  410e40:	b	410f48 <wcrtomb@plt+0xc128>
  410e44:	mov	w0, w22
  410e48:	bl	4047c0 <close@plt>
  410e4c:	cbz	w0, 410e60 <wcrtomb@plt+0xc040>
  410e50:	mov	x0, x19
  410e54:	bl	428014 <wcrtomb@plt+0x231f4>
  410e58:	mov	w0, #0xffffffff            	// #-1
  410e5c:	b	410f48 <wcrtomb@plt+0xc128>
  410e60:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410e64:	ldr	x0, [x8, #120]
  410e68:	bl	404190 <strlen@plt>
  410e6c:	add	x0, x0, #0xa1
  410e70:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  410e74:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410e78:	ldp	x9, x11, [sp]
  410e7c:	ldr	x10, [x8, #2104]
  410e80:	mov	x21, x0
  410e84:	str	x0, [x8, #2104]
  410e88:	str	x11, [x0, #16]
  410e8c:	stp	x10, x9, [x0]
  410e90:	mov	x0, sp
  410e94:	bl	43cc90 <argp_usage@@Base+0xb094>
  410e98:	stp	x0, x1, [x21, #24]
  410e9c:	strb	w23, [x21, #40]
  410ea0:	tbz	w20, #0, 410ec8 <wcrtomb@plt+0xc0a8>
  410ea4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410ea8:	add	x8, x8, #0xc8
  410eac:	ldr	w9, [x8]
  410eb0:	ldp	w10, w11, [x8, #8]
  410eb4:	ldp	q0, q1, [x8, #112]
  410eb8:	stp	w9, w10, [x21, #44]
  410ebc:	str	w11, [x21, #52]
  410ec0:	stur	q0, [x21, #56]
  410ec4:	stur	q1, [x21, #72]
  410ec8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  410ecc:	ldr	w8, [x8]
  410ed0:	mov	x0, x19
  410ed4:	str	w8, [x21, #88]
  410ed8:	bl	404190 <strlen@plt>
  410edc:	add	x0, x0, #0x9
  410ee0:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  410ee4:	str	x0, [x21, #96]
  410ee8:	str	xzr, [x0], #8
  410eec:	mov	x1, x19
  410ef0:	bl	404b20 <strcpy@plt>
  410ef4:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  410ef8:	add	x20, x20, #0x60
  410efc:	ldr	x1, [x20, #48]
  410f00:	str	xzr, [x21, #104]!
  410f04:	mov	x0, x21
  410f08:	bl	419680 <wcrtomb@plt+0x14860>
  410f0c:	add	x1, x21, #0x30
  410f10:	add	x2, x21, #0x28
  410f14:	movi	v0.2d, #0x0
  410f18:	mov	x0, x20
  410f1c:	stur	q0, [x21, #24]
  410f20:	stur	q0, [x21, #8]
  410f24:	bl	411bb4 <wcrtomb@plt+0xcd94>
  410f28:	ldr	x1, [x20, #24]
  410f2c:	add	x0, x21, #0x38
  410f30:	bl	404b20 <strcpy@plt>
  410f34:	mov	x0, x19
  410f38:	bl	410f60 <wcrtomb@plt+0xc140>
  410f3c:	cbz	x0, 410f48 <wcrtomb@plt+0xc128>
  410f40:	bl	410d3c <wcrtomb@plt+0xbf1c>
  410f44:	mov	w0, wzr
  410f48:	ldp	x20, x19, [sp, #176]
  410f4c:	ldp	x22, x21, [sp, #160]
  410f50:	ldp	x24, x23, [sp, #144]
  410f54:	ldp	x29, x30, [sp, #128]
  410f58:	add	sp, sp, #0xc0
  410f5c:	ret
  410f60:	stp	x29, x30, [sp, #-48]!
  410f64:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410f68:	stp	x20, x19, [sp, #32]
  410f6c:	ldr	x19, [x8, #2088]
  410f70:	str	x21, [sp, #16]
  410f74:	mov	x29, sp
  410f78:	cbz	x19, 410fcc <wcrtomb@plt+0xc1ac>
  410f7c:	mov	x20, x0
  410f80:	b	410f8c <wcrtomb@plt+0xc16c>
  410f84:	ldr	x19, [x19]
  410f88:	cbz	x19, 410fcc <wcrtomb@plt+0xc1ac>
  410f8c:	ldrb	w8, [x19, #88]
  410f90:	cbnz	w8, 410f84 <wcrtomb@plt+0xc164>
  410f94:	ldp	x21, x1, [x19, #152]
  410f98:	mov	x0, x20
  410f9c:	mov	x2, x21
  410fa0:	bl	4045a0 <strncmp@plt>
  410fa4:	cbnz	w0, 410f84 <wcrtomb@plt+0xc164>
  410fa8:	add	x21, x20, x21
  410fac:	ldrb	w8, [x21]
  410fb0:	cmp	w8, #0x2f
  410fb4:	b.ne	410f84 <wcrtomb@plt+0xc164>  // b.any
  410fb8:	mov	x0, x20
  410fbc:	bl	432690 <argp_usage@@Base+0xa94>
  410fc0:	add	x8, x21, #0x1
  410fc4:	cmp	x0, x8
  410fc8:	b.ne	410f84 <wcrtomb@plt+0xc164>  // b.any
  410fcc:	mov	x0, x19
  410fd0:	ldp	x20, x19, [sp, #32]
  410fd4:	ldr	x21, [sp, #16]
  410fd8:	ldp	x29, x30, [sp], #48
  410fdc:	ret
  410fe0:	stp	x29, x30, [sp, #-32]!
  410fe4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  410fe8:	stp	x20, x19, [sp, #16]
  410fec:	ldr	x20, [x8, #2112]
  410ff0:	mov	x29, sp
  410ff4:	cbz	x20, 411018 <wcrtomb@plt+0xc1f8>
  410ff8:	mov	x19, x0
  410ffc:	ldr	x0, [x20, #8]
  411000:	mov	x1, x19
  411004:	mov	w2, wzr
  411008:	bl	404ac0 <fnmatch@plt>
  41100c:	cbz	w0, 411020 <wcrtomb@plt+0xc200>
  411010:	ldr	x20, [x20]
  411014:	cbnz	x20, 410ffc <wcrtomb@plt+0xc1dc>
  411018:	mov	w0, wzr
  41101c:	b	411024 <wcrtomb@plt+0xc204>
  411020:	mov	w0, #0x1                   	// #1
  411024:	ldp	x20, x19, [sp, #16]
  411028:	ldp	x29, x30, [sp], #32
  41102c:	ret
  411030:	stp	x29, x30, [sp, #-32]!
  411034:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  411038:	add	x1, x1, #0xdc8
  41103c:	stp	x20, x19, [sp, #16]
  411040:	mov	x29, sp
  411044:	bl	404160 <strtok@plt>
  411048:	cbz	x0, 411088 <wcrtomb@plt+0xc268>
  41104c:	adrp	x19, 456000 <_obstack_memory_used@@Base+0x17da0>
  411050:	mov	x20, x0
  411054:	add	x19, x19, #0xdc8
  411058:	mov	w1, #0x3d                  	// #61
  41105c:	mov	x0, x20
  411060:	bl	404a70 <strchr@plt>
  411064:	cbz	x0, 411094 <wcrtomb@plt+0xc274>
  411068:	mov	x1, x0
  41106c:	mov	x0, x20
  411070:	bl	4110ec <wcrtomb@plt+0xc2cc>
  411074:	mov	x0, xzr
  411078:	mov	x1, x19
  41107c:	bl	404160 <strtok@plt>
  411080:	mov	x20, x0
  411084:	cbnz	x0, 411058 <wcrtomb@plt+0xc238>
  411088:	ldp	x20, x19, [sp, #16]
  41108c:	ldp	x29, x30, [sp], #32
  411090:	ret
  411094:	mov	x0, x20
  411098:	bl	41109c <wcrtomb@plt+0xc27c>
  41109c:	stp	x29, x30, [sp, #-32]!
  4110a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4110a4:	ldr	x8, [x8, #1008]
  4110a8:	str	x19, [sp, #16]
  4110ac:	mov	x19, x0
  4110b0:	mov	x29, sp
  4110b4:	cbz	x8, 4110bc <wcrtomb@plt+0xc29c>
  4110b8:	blr	x8
  4110bc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4110c0:	add	x1, x1, #0x948
  4110c4:	mov	w2, #0x5                   	// #5
  4110c8:	mov	x0, xzr
  4110cc:	bl	404bf0 <dcgettext@plt>
  4110d0:	mov	x2, x0
  4110d4:	mov	w0, wzr
  4110d8:	mov	w1, wzr
  4110dc:	mov	x3, x19
  4110e0:	bl	4041f0 <error@plt>
  4110e4:	mov	w0, #0x2                   	// #2
  4110e8:	bl	421198 <wcrtomb@plt+0x1c378>
  4110ec:	stp	x29, x30, [sp, #-48]!
  4110f0:	stp	x20, x19, [sp, #32]
  4110f4:	mov	x19, x0
  4110f8:	cmp	x1, x0
  4110fc:	stp	x22, x21, [sp, #16]
  411100:	mov	x29, sp
  411104:	b.eq	411284 <wcrtomb@plt+0xc464>  // b.none
  411108:	mov	x8, x1
  41110c:	ldrb	w21, [x8, #-1]!
  411110:	mov	x20, x1
  411114:	cmp	w21, #0x3a
  411118:	csel	x22, x8, x1, eq  // eq = none
  41111c:	cmp	x22, x19
  411120:	b.ls	411144 <wcrtomb@plt+0xc324>  // b.plast
  411124:	bl	404950 <__ctype_b_loc@plt>
  411128:	ldr	x8, [x0]
  41112c:	ldrb	w9, [x22]
  411130:	ldrh	w9, [x8, x9, lsl #1]
  411134:	tbz	w9, #13, 411144 <wcrtomb@plt+0xc324>
  411138:	sub	x22, x22, #0x1
  41113c:	cmp	x22, x19
  411140:	b.hi	41112c <wcrtomb@plt+0xc30c>  // b.pmore
  411144:	add	x8, x20, #0x1
  411148:	strb	wzr, [x22]
  41114c:	ldrb	w22, [x8]
  411150:	mov	x20, x8
  411154:	cbz	x22, 41116c <wcrtomb@plt+0xc34c>
  411158:	bl	404950 <__ctype_b_loc@plt>
  41115c:	ldr	x8, [x0]
  411160:	ldrh	w9, [x8, x22, lsl #1]
  411164:	add	x8, x20, #0x1
  411168:	tbnz	w9, #13, 41114c <wcrtomb@plt+0xc32c>
  41116c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411170:	add	x1, x1, #0x98e
  411174:	mov	x0, x19
  411178:	bl	404920 <strcmp@plt>
  41117c:	cbz	w0, 4111f0 <wcrtomb@plt+0xc3d0>
  411180:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411184:	add	x1, x1, #0x9b3
  411188:	mov	x0, x19
  41118c:	bl	404920 <strcmp@plt>
  411190:	cbz	w0, 411210 <wcrtomb@plt+0xc3f0>
  411194:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411198:	add	x1, x1, #0x9af
  41119c:	mov	x0, x19
  4111a0:	bl	404920 <strcmp@plt>
  4111a4:	cbz	w0, 41121c <wcrtomb@plt+0xc3fc>
  4111a8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4111ac:	add	x1, x1, #0x9c3
  4111b0:	mov	x0, x19
  4111b4:	bl	404920 <strcmp@plt>
  4111b8:	cbz	w0, 411230 <wcrtomb@plt+0xc410>
  4111bc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4111c0:	add	x1, x1, #0x9bf
  4111c4:	mov	x0, x19
  4111c8:	bl	404920 <strcmp@plt>
  4111cc:	cbz	w0, 411244 <wcrtomb@plt+0xc424>
  4111d0:	mov	x0, x19
  4111d4:	bl	413380 <wcrtomb@plt+0xe560>
  4111d8:	tbnz	w0, #0, 411314 <wcrtomb@plt+0xc4f4>
  4111dc:	cmp	w21, #0x3a
  4111e0:	b.ne	411260 <wcrtomb@plt+0xc440>  // b.any
  4111e4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4111e8:	add	x0, x0, #0x890
  4111ec:	b	411268 <wcrtomb@plt+0xc448>
  4111f0:	mov	x0, x20
  4111f4:	bl	413204 <wcrtomb@plt+0xe3e4>
  4111f8:	tbnz	w0, #0, 4112c8 <wcrtomb@plt+0xc4a8>
  4111fc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411200:	add	x0, x0, #0x840
  411204:	mov	x1, x20
  411208:	mov	x2, xzr
  41120c:	b	411270 <wcrtomb@plt+0xc450>
  411210:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411214:	add	x0, x0, #0x848
  411218:	b	411224 <wcrtomb@plt+0xc404>
  41121c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411220:	add	x0, x0, #0x850
  411224:	mov	x1, x20
  411228:	bl	419680 <wcrtomb@plt+0x14860>
  41122c:	b	411274 <wcrtomb@plt+0xc454>
  411230:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411234:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411238:	add	x0, x0, #0x870
  41123c:	add	x1, x1, #0x878
  411240:	b	411254 <wcrtomb@plt+0xc434>
  411244:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411248:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41124c:	add	x0, x0, #0x860
  411250:	add	x1, x1, #0x868
  411254:	mov	x2, x20
  411258:	bl	4132d0 <wcrtomb@plt+0xe4b0>
  41125c:	b	411274 <wcrtomb@plt+0xc454>
  411260:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411264:	add	x0, x0, #0x880
  411268:	mov	x1, x19
  41126c:	mov	x2, x20
  411270:	bl	413268 <wcrtomb@plt+0xe448>
  411274:	ldp	x20, x19, [sp, #32]
  411278:	ldp	x22, x21, [sp, #16]
  41127c:	ldp	x29, x30, [sp], #48
  411280:	ret
  411284:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411288:	ldr	x8, [x8, #1008]
  41128c:	cbz	x8, 411294 <wcrtomb@plt+0xc474>
  411290:	blr	x8
  411294:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411298:	add	x1, x1, #0x975
  41129c:	mov	w2, #0x5                   	// #5
  4112a0:	mov	x0, xzr
  4112a4:	bl	404bf0 <dcgettext@plt>
  4112a8:	mov	x20, x0
  4112ac:	mov	x0, x19
  4112b0:	bl	43c05c <argp_usage@@Base+0xa460>
  4112b4:	mov	x3, x0
  4112b8:	mov	w0, wzr
  4112bc:	mov	w1, wzr
  4112c0:	mov	x2, x20
  4112c4:	b	411308 <wcrtomb@plt+0xc4e8>
  4112c8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4112cc:	ldr	x8, [x8, #1008]
  4112d0:	cbz	x8, 4112d8 <wcrtomb@plt+0xc4b8>
  4112d4:	blr	x8
  4112d8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4112dc:	add	x1, x1, #0x995
  4112e0:	mov	w2, #0x5                   	// #5
  4112e4:	mov	x0, xzr
  4112e8:	bl	404bf0 <dcgettext@plt>
  4112ec:	mov	x19, x0
  4112f0:	mov	x0, x20
  4112f4:	bl	43c05c <argp_usage@@Base+0xa460>
  4112f8:	mov	x3, x0
  4112fc:	mov	w0, wzr
  411300:	mov	w1, wzr
  411304:	mov	x2, x19
  411308:	bl	4041f0 <error@plt>
  41130c:	mov	w0, #0x2                   	// #2
  411310:	bl	421198 <wcrtomb@plt+0x1c378>
  411314:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411318:	ldr	x8, [x8, #1008]
  41131c:	cbz	x8, 411324 <wcrtomb@plt+0xc504>
  411320:	blr	x8
  411324:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411328:	add	x1, x1, #0x9d0
  41132c:	mov	w2, #0x5                   	// #5
  411330:	mov	x0, xzr
  411334:	bl	404bf0 <dcgettext@plt>
  411338:	mov	x2, x0
  41133c:	mov	w0, wzr
  411340:	mov	w1, wzr
  411344:	mov	x3, x19
  411348:	b	411308 <wcrtomb@plt+0xc4e8>
  41134c:	sub	sp, sp, #0xb0
  411350:	stp	x29, x30, [sp, #80]
  411354:	add	x29, sp, #0x50
  411358:	add	x8, sp, #0x20
  41135c:	sub	x9, x29, #0x18
  411360:	add	x8, x8, #0x14
  411364:	stp	x28, x27, [sp, #96]
  411368:	adrp	x28, 451000 <_obstack_memory_used@@Base+0x12da0>
  41136c:	stp	x8, x2, [sp, #16]
  411370:	add	x8, x9, #0x14
  411374:	stp	x26, x25, [sp, #112]
  411378:	stp	x24, x23, [sp, #128]
  41137c:	stp	x22, x21, [sp, #144]
  411380:	stp	x20, x19, [sp, #160]
  411384:	mov	x24, x1
  411388:	mov	x26, x0
  41138c:	mov	x27, xzr
  411390:	mov	x19, xzr
  411394:	mov	x23, xzr
  411398:	mov	x20, xzr
  41139c:	mov	x22, xzr
  4113a0:	mov	x21, xzr
  4113a4:	add	x28, x28, #0x420
  4113a8:	str	x8, [sp, #8]
  4113ac:	mov	x8, x1
  4113b0:	b	4113d4 <wcrtomb@plt+0xc5b4>
  4113b4:	ldr	x0, [sp, #24]
  4113b8:	add	x1, sp, #0x20
  4113bc:	bl	43650c <argp_usage@@Base+0x4910>
  4113c0:	ldr	x8, [sp, #16]
  4113c4:	mov	x21, x0
  4113c8:	add	x8, x27, x8
  4113cc:	sub	x27, x8, x0
  4113d0:	add	x8, x25, #0x1
  4113d4:	ldrb	w9, [x8]
  4113d8:	cmp	w9, #0x25
  4113dc:	b.eq	4113f4 <wcrtomb@plt+0xc5d4>  // b.none
  4113e0:	cbz	w9, 4114ac <wcrtomb@plt+0xc68c>
  4113e4:	add	x27, x27, #0x1
  4113e8:	mov	x25, x8
  4113ec:	add	x8, x8, #0x1
  4113f0:	b	4113d4 <wcrtomb@plt+0xc5b4>
  4113f4:	mov	x25, x8
  4113f8:	ldrb	w9, [x25, #1]!
  4113fc:	sub	w10, w9, #0x64
  411400:	cmp	w10, #0xc
  411404:	b.hi	411448 <wcrtomb@plt+0xc628>  // b.pmore
  411408:	adr	x8, 4113b4 <wcrtomb@plt+0xc594>
  41140c:	ldrb	w9, [x28, x10]
  411410:	add	x8, x8, x9, lsl #2
  411414:	br	x8
  411418:	cbz	x26, 411488 <wcrtomb@plt+0xc668>
  41141c:	cbnz	x19, 41142c <wcrtomb@plt+0xc60c>
  411420:	ldr	x0, [x26]
  411424:	bl	432558 <argp_usage@@Base+0x95c>
  411428:	mov	x19, x0
  41142c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411430:	ldrb	w2, [x8, #952]
  411434:	mov	x0, x19
  411438:	mov	w1, wzr
  41143c:	bl	428898 <wcrtomb@plt+0x23a78>
  411440:	mov	x23, x0
  411444:	b	411478 <wcrtomb@plt+0xc658>
  411448:	cbz	w9, 4113e4 <wcrtomb@plt+0xc5c4>
  41144c:	cmp	w9, #0x25
  411450:	b.ne	411460 <wcrtomb@plt+0xc640>  // b.any
  411454:	add	x27, x27, #0x1
  411458:	add	x8, x25, #0x1
  41145c:	b	4113d4 <wcrtomb@plt+0xc5b4>
  411460:	add	x27, x27, #0x2
  411464:	b	411488 <wcrtomb@plt+0xc668>
  411468:	cbz	x26, 411488 <wcrtomb@plt+0xc668>
  41146c:	ldr	x0, [x26]
  411470:	bl	432690 <argp_usage@@Base+0xa94>
  411474:	mov	x20, x0
  411478:	bl	404190 <strlen@plt>
  41147c:	add	x27, x0, x27
  411480:	add	x8, x25, #0x1
  411484:	b	4113d4 <wcrtomb@plt+0xc5b4>
  411488:	add	x8, x25, #0x1
  41148c:	b	4113d4 <wcrtomb@plt+0xc5b4>
  411490:	bl	4044a0 <getpid@plt>
  411494:	sub	x1, x29, #0x18
  411498:	sxtw	x0, w0
  41149c:	bl	43650c <argp_usage@@Base+0x4910>
  4114a0:	ldr	x8, [sp, #8]
  4114a4:	mov	x22, x0
  4114a8:	b	4113c8 <wcrtomb@plt+0xc5a8>
  4114ac:	add	x0, x27, #0x1
  4114b0:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4114b4:	adrp	x27, 451000 <_obstack_memory_used@@Base+0x12da0>
  4114b8:	mov	x25, x0
  4114bc:	add	x27, x27, #0x42d
  4114c0:	b	4114d0 <wcrtomb@plt+0xc6b0>
  4114c4:	strb	w8, [x26], #1
  4114c8:	add	x24, x28, #0x2
  4114cc:	mov	x0, x26
  4114d0:	ldrb	w8, [x24]
  4114d4:	mov	x28, x24
  4114d8:	mov	x26, x0
  4114dc:	cmp	w8, #0x25
  4114e0:	b.eq	4114f8 <wcrtomb@plt+0xc6d8>  // b.none
  4114e4:	cbz	w8, 41158c <wcrtomb@plt+0xc76c>
  4114e8:	strb	w8, [x26], #1
  4114ec:	add	x24, x28, #0x1
  4114f0:	mov	x0, x26
  4114f4:	b	4114d0 <wcrtomb@plt+0xc6b0>
  4114f8:	mov	x24, x28
  4114fc:	ldrb	w10, [x24, #1]!
  411500:	sub	w9, w10, #0x64
  411504:	cmp	w9, #0xc
  411508:	b.hi	41152c <wcrtomb@plt+0xc70c>  // b.pmore
  41150c:	adr	x10, 41151c <wcrtomb@plt+0xc6fc>
  411510:	ldrb	w11, [x27, x9]
  411514:	add	x10, x10, x11, lsl #2
  411518:	br	x10
  41151c:	cbz	x23, 4114c8 <wcrtomb@plt+0xc6a8>
  411520:	mov	x0, x26
  411524:	mov	x1, x23
  411528:	b	411560 <wcrtomb@plt+0xc740>
  41152c:	cmp	w10, #0x25
  411530:	b.eq	4114c4 <wcrtomb@plt+0xc6a4>  // b.none
  411534:	mov	x0, x26
  411538:	strb	w8, [x0], #1
  41153c:	ldrb	w8, [x24]
  411540:	cbz	w8, 4114d0 <wcrtomb@plt+0xc6b0>
  411544:	add	x24, x28, #0x2
  411548:	add	x0, x26, #0x2
  41154c:	strb	w8, [x26, #1]
  411550:	b	4114d0 <wcrtomb@plt+0xc6b0>
  411554:	cbz	x20, 4114c8 <wcrtomb@plt+0xc6a8>
  411558:	mov	x0, x26
  41155c:	mov	x1, x20
  411560:	bl	4043e0 <stpcpy@plt>
  411564:	mov	x26, x0
  411568:	b	4114c8 <wcrtomb@plt+0xc6a8>
  41156c:	mov	x0, x26
  411570:	mov	x1, x21
  411574:	b	411580 <wcrtomb@plt+0xc760>
  411578:	mov	x0, x26
  41157c:	mov	x1, x22
  411580:	bl	4043e0 <stpcpy@plt>
  411584:	add	x24, x28, #0x2
  411588:	b	4114d0 <wcrtomb@plt+0xc6b0>
  41158c:	mov	x0, x19
  411590:	bl	4049d0 <free@plt>
  411594:	mov	x8, x26
  411598:	cmp	x26, x25
  41159c:	b.ls	4115b0 <wcrtomb@plt+0xc790>  // b.plast
  4115a0:	mov	x26, x8
  4115a4:	ldrb	w9, [x26, #-1]!
  4115a8:	cmp	w9, #0x2f
  4115ac:	b.eq	411594 <wcrtomb@plt+0xc774>  // b.none
  4115b0:	strb	wzr, [x8]
  4115b4:	mov	x0, x25
  4115b8:	ldp	x20, x19, [sp, #160]
  4115bc:	ldp	x22, x21, [sp, #144]
  4115c0:	ldp	x24, x23, [sp, #128]
  4115c4:	ldp	x26, x25, [sp, #112]
  4115c8:	ldp	x28, x27, [sp, #96]
  4115cc:	ldp	x29, x30, [sp, #80]
  4115d0:	add	sp, sp, #0xb0
  4115d4:	ret
  4115d8:	stp	x29, x30, [sp, #-32]!
  4115dc:	stp	x20, x19, [sp, #16]
  4115e0:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4115e4:	ldr	x8, [x20, #2120]
  4115e8:	mov	x19, x0
  4115ec:	mov	x29, sp
  4115f0:	cbnz	x8, 411608 <wcrtomb@plt+0xc7e8>
  4115f4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4115f8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4115fc:	add	x0, x0, #0x848
  411600:	add	x1, x1, #0x820
  411604:	bl	419680 <wcrtomb@plt+0x14860>
  411608:	ldr	x1, [x20, #2120]
  41160c:	mov	x0, x19
  411610:	mov	x2, xzr
  411614:	bl	41134c <wcrtomb@plt+0xc52c>
  411618:	ldp	x20, x19, [sp, #16]
  41161c:	ldp	x29, x30, [sp], #32
  411620:	ret
  411624:	stp	x29, x30, [sp, #-32]!
  411628:	stp	x20, x19, [sp, #16]
  41162c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411630:	ldr	x8, [x20, #2128]
  411634:	mov	x29, sp
  411638:	cbnz	x8, 41169c <wcrtomb@plt+0xc87c>
  41163c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  411640:	add	x0, x0, #0x834
  411644:	bl	404d30 <getenv@plt>
  411648:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x12da0>
  41164c:	add	x8, x8, #0x83b
  411650:	cmp	x0, #0x0
  411654:	csel	x19, x8, x0, eq  // eq = none
  411658:	mov	x0, x19
  41165c:	bl	404190 <strlen@plt>
  411660:	add	x0, x0, #0x12
  411664:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  411668:	mov	x1, x19
  41166c:	str	x0, [x20, #2128]
  411670:	bl	404b20 <strcpy@plt>
  411674:	ldr	x19, [x20, #2128]
  411678:	mov	x0, x19
  41167c:	bl	404190 <strlen@plt>
  411680:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x12da0>
  411684:	add	x8, x8, #0x840
  411688:	ldr	q0, [x8]
  41168c:	add	x8, x19, x0
  411690:	mov	w9, #0x6e                  	// #110
  411694:	strh	w9, [x8, #16]
  411698:	str	q0, [x8]
  41169c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4116a0:	ldr	x8, [x8, #2136]
  4116a4:	ldr	x1, [x20, #2128]
  4116a8:	mov	x0, xzr
  4116ac:	add	x2, x8, #0x1
  4116b0:	bl	41134c <wcrtomb@plt+0xc52c>
  4116b4:	ldp	x20, x19, [sp, #16]
  4116b8:	ldp	x29, x30, [sp], #32
  4116bc:	ret
  4116c0:	stp	x29, x30, [sp, #-80]!
  4116c4:	stp	x24, x23, [sp, #32]
  4116c8:	stp	x22, x21, [sp, #48]
  4116cc:	stp	x20, x19, [sp, #64]
  4116d0:	ldr	x21, [x3, #8]
  4116d4:	and	w8, w0, #0xff
  4116d8:	mov	x19, x3
  4116dc:	mov	w20, w0
  4116e0:	cmp	w8, #0x78
  4116e4:	mov	x0, x1
  4116e8:	str	x25, [sp, #16]
  4116ec:	mov	x29, sp
  4116f0:	b.eq	411710 <wcrtomb@plt+0xc8f0>  // b.none
  4116f4:	cmp	w8, #0x67
  4116f8:	b.ne	411728 <wcrtomb@plt+0xc908>  // b.any
  4116fc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411700:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411704:	ldr	x8, [x8, #2144]
  411708:	ldr	x9, [x9, #2152]
  41170c:	b	411720 <wcrtomb@plt+0xc900>
  411710:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411714:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411718:	ldr	x8, [x8, #2160]
  41171c:	ldr	x9, [x9, #2168]
  411720:	cmp	x8, #0x0
  411724:	csel	x2, x2, x9, eq  // eq = none
  411728:	mov	x1, x21
  41172c:	bl	40a7c8 <wcrtomb@plt+0x59a8>
  411730:	strb	w20, [x0, #156]
  411734:	bl	40b1a0 <wcrtomb@plt+0x6380>
  411738:	ldr	x22, [x19, #16]
  41173c:	mov	w25, #0x200                 	// #512
  411740:	b	411758 <wcrtomb@plt+0xc938>
  411744:	mov	x0, x23
  411748:	add	x22, x22, x24
  41174c:	sub	x21, x21, x24
  411750:	bl	405744 <wcrtomb@plt+0x924>
  411754:	cbz	x21, 411790 <wcrtomb@plt+0xc970>
  411758:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41175c:	cmp	x21, #0x200
  411760:	csel	x24, x21, x25, cc  // cc = lo, ul, last
  411764:	mov	x1, x22
  411768:	mov	x2, x24
  41176c:	mov	x23, x0
  411770:	bl	404110 <memcpy@plt>
  411774:	cmp	x21, #0x1ff
  411778:	b.hi	411744 <wcrtomb@plt+0xc924>  // b.pmore
  41177c:	add	x0, x23, x24
  411780:	sub	x2, x25, x24
  411784:	mov	w1, wzr
  411788:	bl	404600 <memset@plt>
  41178c:	b	411744 <wcrtomb@plt+0xc924>
  411790:	mov	x0, x19
  411794:	bl	4117cc <wcrtomb@plt+0xc9ac>
  411798:	and	w8, w20, #0xff
  41179c:	cmp	w8, #0x67
  4117a0:	b.ne	4117b4 <wcrtomb@plt+0xc994>  // b.any
  4117a4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4117a8:	ldr	x9, [x8, #2136]
  4117ac:	add	x9, x9, #0x1
  4117b0:	str	x9, [x8, #2136]
  4117b4:	ldp	x20, x19, [sp, #64]
  4117b8:	ldp	x22, x21, [sp, #48]
  4117bc:	ldp	x24, x23, [sp, #32]
  4117c0:	ldr	x25, [sp, #16]
  4117c4:	ldp	x29, x30, [sp], #80
  4117c8:	ret
  4117cc:	stp	x29, x30, [sp, #-32]!
  4117d0:	str	x19, [sp, #16]
  4117d4:	mov	x19, x0
  4117d8:	ldr	x0, [x0]
  4117dc:	mov	x29, sp
  4117e0:	cbz	x0, 4117fc <wcrtomb@plt+0xc9dc>
  4117e4:	mov	x1, xzr
  4117e8:	bl	43e1d8 <_obstack_free@@Base>
  4117ec:	ldr	x0, [x19]
  4117f0:	bl	4049d0 <free@plt>
  4117f4:	str	xzr, [x19]
  4117f8:	b	411804 <wcrtomb@plt+0xc9e4>
  4117fc:	ldr	x0, [x19, #16]
  411800:	bl	4049d0 <free@plt>
  411804:	stp	xzr, xzr, [x19, #8]
  411808:	ldr	x19, [sp, #16]
  41180c:	ldp	x29, x30, [sp], #32
  411810:	ret
  411814:	stp	x29, x30, [sp, #-32]!
  411818:	stp	x20, x19, [sp, #16]
  41181c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411820:	ldr	x8, [x20, #2176]
  411824:	mov	x19, x0
  411828:	mov	x29, sp
  41182c:	cbz	x8, 411854 <wcrtomb@plt+0xca34>
  411830:	mov	x0, x19
  411834:	bl	411898 <wcrtomb@plt+0xca78>
  411838:	ldr	x20, [x20, #2176]
  41183c:	cbz	x20, 411854 <wcrtomb@plt+0xca34>
  411840:	ldp	x1, x0, [x20, #8]
  411844:	mov	x2, x19
  411848:	bl	4118e4 <wcrtomb@plt+0xcac4>
  41184c:	ldr	x20, [x20]
  411850:	cbnz	x20, 411840 <wcrtomb@plt+0xca20>
  411854:	ldr	x8, [x19]
  411858:	cbz	x8, 41188c <wcrtomb@plt+0xca6c>
  41185c:	mov	x0, x19
  411860:	bl	411948 <wcrtomb@plt+0xcb28>
  411864:	bl	411624 <wcrtomb@plt+0xc804>
  411868:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41186c:	ldr	x2, [x8, #712]
  411870:	mov	x20, x0
  411874:	mov	w0, #0x67                  	// #103
  411878:	mov	x1, x20
  41187c:	mov	x3, x19
  411880:	bl	4116c0 <wcrtomb@plt+0xc8a0>
  411884:	mov	x0, x20
  411888:	bl	4049d0 <free@plt>
  41188c:	ldp	x20, x19, [sp, #16]
  411890:	ldp	x29, x30, [sp], #32
  411894:	ret
  411898:	stp	x29, x30, [sp, #-32]!
  41189c:	ldr	x8, [x0]
  4118a0:	str	x19, [sp, #16]
  4118a4:	mov	x29, sp
  4118a8:	cbnz	x8, 4118d8 <wcrtomb@plt+0xcab8>
  4118ac:	mov	x19, x0
  4118b0:	mov	w0, #0x58                  	// #88
  4118b4:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4118b8:	adrp	x3, 43d000 <argp_usage@@Base+0xb404>
  4118bc:	adrp	x4, 404000 <mbrtowc@plt-0x100>
  4118c0:	add	x3, x3, #0x1c4
  4118c4:	add	x4, x4, #0x9d0
  4118c8:	mov	x1, xzr
  4118cc:	mov	x2, xzr
  4118d0:	str	x0, [x19]
  4118d4:	bl	43df40 <_obstack_begin@@Base>
  4118d8:	ldr	x19, [sp, #16]
  4118dc:	ldp	x29, x30, [sp], #32
  4118e0:	ret
  4118e4:	stp	x29, x30, [sp, #-48]!
  4118e8:	str	x21, [sp, #16]
  4118ec:	mov	x29, sp
  4118f0:	mov	x21, x0
  4118f4:	stp	x20, x19, [sp, #32]
  4118f8:	mov	x20, x2
  4118fc:	mov	x19, x1
  411900:	add	x2, x29, #0x18
  411904:	mov	w0, #0x1                   	// #1
  411908:	mov	x1, x21
  41190c:	bl	426124 <wcrtomb@plt+0x21304>
  411910:	tbnz	w0, #0, 411920 <wcrtomb@plt+0xcb00>
  411914:	mov	x0, x21
  411918:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41191c:	str	x0, [x29, #24]
  411920:	ldr	x2, [x29, #24]
  411924:	mov	x0, x20
  411928:	mov	x1, x19
  41192c:	bl	4133d8 <wcrtomb@plt+0xe5b8>
  411930:	ldr	x0, [x29, #24]
  411934:	bl	4049d0 <free@plt>
  411938:	ldp	x20, x19, [sp, #32]
  41193c:	ldr	x21, [sp, #16]
  411940:	ldp	x29, x30, [sp], #48
  411944:	ret
  411948:	stp	x29, x30, [sp, #-32]!
  41194c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411950:	stp	x20, x19, [sp, #16]
  411954:	ldr	x20, [x8, #2192]
  411958:	mov	x19, x0
  41195c:	mov	x29, sp
  411960:	cbz	x20, 411978 <wcrtomb@plt+0xcb58>
  411964:	ldp	x1, x0, [x20, #8]
  411968:	mov	x2, x19
  41196c:	bl	4118e4 <wcrtomb@plt+0xcac4>
  411970:	ldr	x20, [x20]
  411974:	cbnz	x20, 411964 <wcrtomb@plt+0xcb44>
  411978:	ldr	x8, [x19]
  41197c:	ldp	x9, x10, [x8, #16]
  411980:	cmp	x10, x9
  411984:	b.ne	411994 <wcrtomb@plt+0xcb74>  // b.any
  411988:	ldrb	w10, [x8, #80]
  41198c:	orr	w10, w10, #0x2
  411990:	strb	w10, [x8, #80]
  411994:	ldr	x11, [x8, #48]
  411998:	ldp	x12, x10, [x8, #24]
  41199c:	ldr	x13, [x8, #8]
  4119a0:	add	x12, x11, x12
  4119a4:	bic	x11, x12, x11
  4119a8:	sub	x12, x11, x13
  4119ac:	sub	x13, x10, x13
  4119b0:	cmp	x12, x13
  4119b4:	str	x11, [x8, #24]
  4119b8:	b.ls	4119c0 <wcrtomb@plt+0xcba0>  // b.plast
  4119bc:	str	x10, [x8, #24]
  4119c0:	ldr	x10, [x8, #24]
  4119c4:	str	x10, [x8, #16]
  4119c8:	str	x9, [x19, #16]
  4119cc:	ldp	x20, x19, [sp, #16]
  4119d0:	ldp	x29, x30, [sp], #32
  4119d4:	ret
  4119d8:	stp	x29, x30, [sp, #-16]!
  4119dc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4119e0:	ldr	x8, [x8, #2176]
  4119e4:	mov	x29, sp
  4119e8:	cbnz	x8, 4119f4 <wcrtomb@plt+0xcbd4>
  4119ec:	ldp	x29, x30, [sp], #16
  4119f0:	ret
  4119f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4119f8:	ldr	x8, [x8, #1008]
  4119fc:	cbz	x8, 411a04 <wcrtomb@plt+0xcbe4>
  411a00:	blr	x8
  411a04:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411a08:	add	x1, x1, #0x852
  411a0c:	mov	w2, #0x5                   	// #5
  411a10:	mov	x0, xzr
  411a14:	bl	404bf0 <dcgettext@plt>
  411a18:	mov	x2, x0
  411a1c:	mov	w0, wzr
  411a20:	mov	w1, wzr
  411a24:	bl	4041f0 <error@plt>
  411a28:	mov	w0, #0x2                   	// #2
  411a2c:	bl	421198 <wcrtomb@plt+0x1c378>
  411a30:	movi	v0.2d, #0x0
  411a34:	str	xzr, [x0, #80]
  411a38:	stp	q0, q0, [x0, #48]
  411a3c:	stp	xzr, xzr, [x0, #328]
  411a40:	ret
  411a44:	stp	x29, x30, [sp, #-48]!
  411a48:	stp	x20, x19, [sp, #32]
  411a4c:	mov	x19, x0
  411a50:	str	x21, [sp, #16]
  411a54:	mov	x29, sp
  411a58:	cbz	x1, 411a7c <wcrtomb@plt+0xcc5c>
  411a5c:	mov	x20, x1
  411a60:	add	x21, x19, #0x8
  411a64:	ldur	x0, [x21, #-8]
  411a68:	bl	4049d0 <free@plt>
  411a6c:	ldr	x0, [x21], #24
  411a70:	bl	4049d0 <free@plt>
  411a74:	subs	x20, x20, #0x1
  411a78:	b.ne	411a64 <wcrtomb@plt+0xcc44>  // b.any
  411a7c:	mov	x0, x19
  411a80:	bl	4049d0 <free@plt>
  411a84:	ldp	x20, x19, [sp, #32]
  411a88:	ldr	x21, [sp, #16]
  411a8c:	ldp	x29, x30, [sp], #48
  411a90:	ret
  411a94:	stp	x29, x30, [sp, #-64]!
  411a98:	stp	x22, x21, [sp, #32]
  411a9c:	mov	x22, x0
  411aa0:	mov	x0, x1
  411aa4:	str	x23, [sp, #16]
  411aa8:	stp	x20, x19, [sp, #48]
  411aac:	mov	x29, sp
  411ab0:	mov	x19, x3
  411ab4:	mov	x20, x2
  411ab8:	mov	x21, x1
  411abc:	bl	404190 <strlen@plt>
  411ac0:	add	x0, x0, #0xe
  411ac4:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  411ac8:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x12da0>
  411acc:	add	x8, x8, #0x87d
  411ad0:	ldr	x9, [x8]
  411ad4:	ldur	x8, [x8, #6]
  411ad8:	mov	x23, x0
  411adc:	mov	x1, x21
  411ae0:	str	x9, [x0]
  411ae4:	stur	x8, [x0, #6]
  411ae8:	add	x0, x0, #0xd
  411aec:	bl	4043e0 <stpcpy@plt>
  411af0:	add	x0, x22, #0x150
  411af4:	add	x1, x22, #0x148
  411af8:	mov	x2, x23
  411afc:	mov	x3, x20
  411b00:	mov	x4, x19
  411b04:	bl	411b24 <wcrtomb@plt+0xcd04>
  411b08:	mov	x0, x23
  411b0c:	bl	4049d0 <free@plt>
  411b10:	ldp	x20, x19, [sp, #48]
  411b14:	ldp	x22, x21, [sp, #32]
  411b18:	ldr	x23, [sp, #16]
  411b1c:	ldp	x29, x30, [sp], #64
  411b20:	ret
  411b24:	stp	x29, x30, [sp, #-64]!
  411b28:	stp	x22, x21, [sp, #32]
  411b2c:	stp	x20, x19, [sp, #48]
  411b30:	ldr	x8, [x1]
  411b34:	mov	x22, x0
  411b38:	str	x23, [sp, #16]
  411b3c:	mov	x29, sp
  411b40:	add	x9, x8, #0x1
  411b44:	str	x9, [x1]
  411b48:	ldr	x0, [x0]
  411b4c:	add	x8, x8, x8, lsl #1
  411b50:	lsl	x23, x8, #3
  411b54:	add	x1, x23, #0x18
  411b58:	mov	x19, x4
  411b5c:	mov	x20, x3
  411b60:	mov	x21, x2
  411b64:	bl	43d21c <argp_usage@@Base+0xb620>
  411b68:	str	x0, [x22]
  411b6c:	mov	x0, x21
  411b70:	bl	43d39c <argp_usage@@Base+0xb7a0>
  411b74:	ldr	x8, [x22]
  411b78:	add	x1, x19, #0x1
  411b7c:	str	x0, [x8, x23]
  411b80:	mov	x0, x20
  411b84:	bl	43d358 <argp_usage@@Base+0xb75c>
  411b88:	ldr	x8, [x22]
  411b8c:	add	x8, x8, x23
  411b90:	str	x0, [x8, #8]
  411b94:	ldr	x8, [x22]
  411b98:	add	x8, x8, x23
  411b9c:	str	x19, [x8, #16]
  411ba0:	ldp	x20, x19, [sp, #48]
  411ba4:	ldp	x22, x21, [sp, #32]
  411ba8:	ldr	x23, [sp, #16]
  411bac:	ldp	x29, x30, [sp], #64
  411bb0:	ret
  411bb4:	stp	x29, x30, [sp, #-64]!
  411bb8:	stp	x22, x21, [sp, #32]
  411bbc:	stp	x20, x19, [sp, #48]
  411bc0:	str	xzr, [x1]
  411bc4:	str	xzr, [x2]
  411bc8:	ldr	x8, [x0, #328]
  411bcc:	str	x23, [sp, #16]
  411bd0:	mov	x29, sp
  411bd4:	cbz	x8, 411c1c <wcrtomb@plt+0xcdfc>
  411bd8:	mov	x19, x2
  411bdc:	mov	x20, x1
  411be0:	mov	x21, x0
  411be4:	mov	x22, xzr
  411be8:	mov	x23, xzr
  411bec:	ldr	x8, [x21, #336]
  411bf0:	mov	x0, x20
  411bf4:	mov	x1, x19
  411bf8:	add	x8, x8, x22
  411bfc:	ldp	x2, x3, [x8]
  411c00:	ldr	x4, [x8, #16]
  411c04:	bl	411b24 <wcrtomb@plt+0xcd04>
  411c08:	ldr	x8, [x21, #328]
  411c0c:	add	x23, x23, #0x1
  411c10:	add	x22, x22, #0x18
  411c14:	cmp	x23, x8
  411c18:	b.cc	411bec <wcrtomb@plt+0xcdcc>  // b.lo, b.ul, b.last
  411c1c:	ldp	x20, x19, [sp, #48]
  411c20:	ldp	x22, x21, [sp, #32]
  411c24:	ldr	x23, [sp, #16]
  411c28:	ldp	x29, x30, [sp], #64
  411c2c:	ret
  411c30:	stp	x29, x30, [sp, #-48]!
  411c34:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411c38:	ldr	x8, [x8, #2176]
  411c3c:	stp	x20, x19, [sp, #32]
  411c40:	mov	x19, x0
  411c44:	mov	x1, x19
  411c48:	mov	x0, x8
  411c4c:	str	x21, [sp, #16]
  411c50:	mov	x29, sp
  411c54:	bl	411cd8 <wcrtomb@plt+0xceb8>
  411c58:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411c5c:	ldr	x0, [x8, #2184]
  411c60:	mov	x1, x19
  411c64:	bl	411cd8 <wcrtomb@plt+0xceb8>
  411c68:	ldr	x8, [x19, #352]
  411c6c:	cbz	x8, 411ca0 <wcrtomb@plt+0xce80>
  411c70:	ldr	x8, [x19, #360]
  411c74:	adrp	x21, 411000 <wcrtomb@plt+0xc1e0>
  411c78:	add	x20, x19, #0x158
  411c7c:	add	x21, x21, #0xf64
  411c80:	add	x8, x8, #0x200
  411c84:	str	x8, [x29, #24]
  411c88:	add	x1, x29, #0x18
  411c8c:	mov	x0, x20
  411c90:	mov	x2, x21
  411c94:	mov	x3, x19
  411c98:	bl	411d50 <wcrtomb@plt+0xcf30>
  411c9c:	tbnz	w0, #0, 411c88 <wcrtomb@plt+0xce68>
  411ca0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411ca4:	ldr	x0, [x8, #2192]
  411ca8:	mov	x1, x19
  411cac:	bl	411cd8 <wcrtomb@plt+0xceb8>
  411cb0:	ldr	x8, [x19, #136]
  411cb4:	ldrb	w9, [x19, #320]
  411cb8:	str	x8, [x19, #264]
  411cbc:	cbz	w9, 411cc8 <wcrtomb@plt+0xcea8>
  411cc0:	ldr	x8, [x19, #312]
  411cc4:	str	x8, [x19, #136]
  411cc8:	ldp	x20, x19, [sp, #32]
  411ccc:	ldr	x21, [sp, #16]
  411cd0:	ldp	x29, x30, [sp], #48
  411cd4:	ret
  411cd8:	stp	x29, x30, [sp, #-64]!
  411cdc:	str	x23, [sp, #16]
  411ce0:	stp	x22, x21, [sp, #32]
  411ce4:	stp	x20, x19, [sp, #48]
  411ce8:	mov	x29, sp
  411cec:	cbz	x0, 411d3c <wcrtomb@plt+0xcf1c>
  411cf0:	mov	x19, x1
  411cf4:	mov	x20, x0
  411cf8:	b	411d04 <wcrtomb@plt+0xcee4>
  411cfc:	ldr	x20, [x20]
  411d00:	cbz	x20, 411d3c <wcrtomb@plt+0xcf1c>
  411d04:	ldr	x0, [x20, #8]
  411d08:	bl	4121cc <wcrtomb@plt+0xd3ac>
  411d0c:	cbz	x0, 411cfc <wcrtomb@plt+0xcedc>
  411d10:	ldr	x22, [x20, #16]
  411d14:	ldr	x23, [x0, #16]
  411d18:	ldr	x21, [x0]
  411d1c:	mov	x0, x22
  411d20:	bl	404190 <strlen@plt>
  411d24:	mov	x3, x0
  411d28:	mov	x0, x19
  411d2c:	mov	x1, x21
  411d30:	mov	x2, x22
  411d34:	blr	x23
  411d38:	b	411cfc <wcrtomb@plt+0xcedc>
  411d3c:	ldp	x20, x19, [sp, #48]
  411d40:	ldp	x22, x21, [sp, #32]
  411d44:	ldr	x23, [sp, #16]
  411d48:	ldp	x29, x30, [sp], #64
  411d4c:	ret
  411d50:	stp	x29, x30, [sp, #-80]!
  411d54:	str	x25, [sp, #16]
  411d58:	stp	x24, x23, [sp, #32]
  411d5c:	stp	x22, x21, [sp, #48]
  411d60:	stp	x20, x19, [sp, #64]
  411d64:	ldr	x25, [x1]
  411d68:	ldp	x9, x8, [x0, #8]
  411d6c:	mov	x21, x3
  411d70:	mov	x20, x2
  411d74:	mov	x19, x1
  411d78:	add	x8, x8, x9
  411d7c:	mov	x22, x25
  411d80:	mov	x29, sp
  411d84:	b	411d8c <wcrtomb@plt+0xcf6c>
  411d88:	add	x22, x22, #0x1
  411d8c:	ldrb	w9, [x22]
  411d90:	cmp	w9, #0x20
  411d94:	b.eq	411d88 <wcrtomb@plt+0xcf68>  // b.none
  411d98:	cmp	w9, #0x9
  411d9c:	b.eq	411d88 <wcrtomb@plt+0xcf68>  // b.none
  411da0:	sub	w10, w9, #0x30
  411da4:	cmp	w10, #0xa
  411da8:	b.cs	411e10 <wcrtomb@plt+0xcff0>  // b.hs, b.nlast
  411dac:	add	x1, x29, #0x18
  411db0:	mov	w2, #0xa                   	// #10
  411db4:	mov	x0, x22
  411db8:	sub	x24, x8, x25
  411dbc:	bl	404840 <strtoumax@plt>
  411dc0:	cmp	x24, x0
  411dc4:	b.cs	411e30 <wcrtomb@plt+0xd010>  // b.hs, b.nlast
  411dc8:	ldr	w9, [x29, #24]
  411dcc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411dd0:	ldr	x8, [x8, #1008]
  411dd4:	sub	w19, w9, w22
  411dd8:	cbz	x8, 411de0 <wcrtomb@plt+0xcfc0>
  411ddc:	blr	x8
  411de0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411de4:	add	x1, x1, #0xa3d
  411de8:	mov	w2, #0x5                   	// #5
  411dec:	mov	x0, xzr
  411df0:	bl	404bf0 <dcgettext@plt>
  411df4:	mov	x2, x0
  411df8:	mov	w0, wzr
  411dfc:	mov	w1, wzr
  411e00:	mov	w3, w19
  411e04:	mov	x4, x22
  411e08:	bl	4041f0 <error@plt>
  411e0c:	b	411f3c <wcrtomb@plt+0xd11c>
  411e10:	cbz	w9, 411ec8 <wcrtomb@plt+0xd0a8>
  411e14:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411e18:	ldr	x8, [x8, #1008]
  411e1c:	cbz	x8, 411e24 <wcrtomb@plt+0xd004>
  411e20:	blr	x8
  411e24:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411e28:	add	x1, x1, #0xa13
  411e2c:	b	411f20 <wcrtomb@plt+0xd100>
  411e30:	ldr	x8, [x29, #24]
  411e34:	mov	x23, x0
  411e38:	mov	x9, xzr
  411e3c:	b	411e44 <wcrtomb@plt+0xd024>
  411e40:	add	x9, x9, #0x1
  411e44:	ldrb	w10, [x8, x9]
  411e48:	cmp	w10, #0x20
  411e4c:	b.eq	411e40 <wcrtomb@plt+0xd020>  // b.none
  411e50:	cmp	w10, #0x9
  411e54:	b.eq	411e40 <wcrtomb@plt+0xd020>  // b.none
  411e58:	cbz	x9, 411ed0 <wcrtomb@plt+0xd0b0>
  411e5c:	add	x22, x8, x9
  411e60:	mov	w1, #0x3d                  	// #61
  411e64:	mov	x0, x22
  411e68:	bl	404a70 <strchr@plt>
  411e6c:	cbz	x0, 411eec <wcrtomb@plt+0xd0cc>
  411e70:	add	x23, x25, x23
  411e74:	mov	x24, x0
  411e78:	cmp	x0, x23
  411e7c:	b.cs	411eec <wcrtomb@plt+0xd0cc>  // b.hs, b.nlast
  411e80:	ldurb	w8, [x23, #-1]
  411e84:	cmp	w8, #0xa
  411e88:	b.ne	411f08 <wcrtomb@plt+0xd0e8>  // b.any
  411e8c:	mov	x2, x24
  411e90:	sub	x8, x23, x24
  411e94:	sturb	wzr, [x23, #-1]
  411e98:	strb	wzr, [x2], #1
  411e9c:	sub	x3, x8, #0x2
  411ea0:	mov	x0, x21
  411ea4:	mov	x1, x22
  411ea8:	blr	x20
  411eac:	mov	w8, #0x3d                  	// #61
  411eb0:	mov	w9, #0xa                   	// #10
  411eb4:	mov	w0, #0x1                   	// #1
  411eb8:	strb	w8, [x24]
  411ebc:	sturb	w9, [x23, #-1]
  411ec0:	str	x23, [x19]
  411ec4:	b	411f4c <wcrtomb@plt+0xd12c>
  411ec8:	mov	w0, wzr
  411ecc:	b	411f4c <wcrtomb@plt+0xd12c>
  411ed0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411ed4:	ldr	x8, [x8, #1008]
  411ed8:	cbz	x8, 411ee0 <wcrtomb@plt+0xd0c0>
  411edc:	blr	x8
  411ee0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411ee4:	add	x1, x1, #0xa68
  411ee8:	b	411f20 <wcrtomb@plt+0xd100>
  411eec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411ef0:	ldr	x8, [x8, #1008]
  411ef4:	cbz	x8, 411efc <wcrtomb@plt+0xd0dc>
  411ef8:	blr	x8
  411efc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411f00:	add	x1, x1, #0xa9e
  411f04:	b	411f20 <wcrtomb@plt+0xd100>
  411f08:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411f0c:	ldr	x8, [x8, #1008]
  411f10:	cbz	x8, 411f18 <wcrtomb@plt+0xd0f8>
  411f14:	blr	x8
  411f18:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411f1c:	add	x1, x1, #0xacc
  411f20:	mov	w2, #0x5                   	// #5
  411f24:	mov	x0, xzr
  411f28:	bl	404bf0 <dcgettext@plt>
  411f2c:	mov	x2, x0
  411f30:	mov	w0, wzr
  411f34:	mov	w1, wzr
  411f38:	bl	4041f0 <error@plt>
  411f3c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411f40:	mov	w9, #0x2                   	// #2
  411f44:	mov	w0, wzr
  411f48:	str	w9, [x8, #3456]
  411f4c:	ldp	x20, x19, [sp, #64]
  411f50:	ldp	x22, x21, [sp, #48]
  411f54:	ldp	x24, x23, [sp, #32]
  411f58:	ldr	x25, [sp, #16]
  411f5c:	ldp	x29, x30, [sp], #80
  411f60:	ret
  411f64:	stp	x29, x30, [sp, #-48]!
  411f68:	stp	x22, x21, [sp, #16]
  411f6c:	mov	x22, x0
  411f70:	mov	x0, x1
  411f74:	stp	x20, x19, [sp, #32]
  411f78:	mov	x29, sp
  411f7c:	mov	x20, x3
  411f80:	mov	x21, x2
  411f84:	mov	x19, x1
  411f88:	bl	410fe0 <wcrtomb@plt+0xc1c0>
  411f8c:	tbnz	w0, #0, 412008 <wcrtomb@plt+0xd1e8>
  411f90:	mov	x0, x19
  411f94:	bl	41224c <wcrtomb@plt+0xd42c>
  411f98:	tbnz	w0, #0, 412008 <wcrtomb@plt+0xd1e8>
  411f9c:	mov	x0, x19
  411fa0:	bl	4121cc <wcrtomb@plt+0xd3ac>
  411fa4:	cbz	x0, 411fc4 <wcrtomb@plt+0xd1a4>
  411fa8:	ldr	x8, [x0, #16]
  411fac:	mov	x0, x22
  411fb0:	mov	x1, x19
  411fb4:	mov	x2, x21
  411fb8:	mov	x3, x20
  411fbc:	blr	x8
  411fc0:	b	412008 <wcrtomb@plt+0xd1e8>
  411fc4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  411fc8:	ldrb	w8, [x8, #450]
  411fcc:	tbz	w8, #1, 412008 <wcrtomb@plt+0xd1e8>
  411fd0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  411fd4:	ldr	x8, [x8, #1008]
  411fd8:	cbz	x8, 411fe0 <wcrtomb@plt+0xd1c0>
  411fdc:	blr	x8
  411fe0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  411fe4:	add	x1, x1, #0xaf7
  411fe8:	mov	w2, #0x5                   	// #5
  411fec:	mov	x0, xzr
  411ff0:	bl	404bf0 <dcgettext@plt>
  411ff4:	mov	x2, x0
  411ff8:	mov	w0, wzr
  411ffc:	mov	w1, wzr
  412000:	mov	x3, x19
  412004:	bl	4041f0 <error@plt>
  412008:	ldp	x20, x19, [sp, #32]
  41200c:	ldp	x22, x21, [sp, #16]
  412010:	ldp	x29, x30, [sp], #48
  412014:	ret
  412018:	stp	x29, x30, [sp, #-48]!
  41201c:	stp	x20, x19, [sp, #32]
  412020:	ldr	x8, [x0, #8]
  412024:	str	x21, [sp, #16]
  412028:	mov	x29, sp
  41202c:	cbz	x8, 41206c <wcrtomb@plt+0xd24c>
  412030:	ldr	x8, [x0, #16]
  412034:	mov	x19, x0
  412038:	add	x8, x8, #0x200
  41203c:	str	x8, [x29, #24]
  412040:	bl	41207c <wcrtomb@plt+0xd25c>
  412044:	adrp	x20, 412000 <wcrtomb@plt+0xd1e0>
  412048:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41204c:	add	x20, x20, #0xcc
  412050:	add	x21, x21, #0x888
  412054:	add	x1, x29, #0x18
  412058:	mov	x0, x19
  41205c:	mov	x2, x20
  412060:	mov	x3, x21
  412064:	bl	411d50 <wcrtomb@plt+0xcf30>
  412068:	tbnz	w0, #0, 412054 <wcrtomb@plt+0xd234>
  41206c:	ldp	x20, x19, [sp, #32]
  412070:	ldr	x21, [sp, #16]
  412074:	ldp	x29, x30, [sp], #48
  412078:	ret
  41207c:	stp	x29, x30, [sp, #-48]!
  412080:	stp	x20, x19, [sp, #32]
  412084:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  412088:	ldr	x19, [x20, #2184]
  41208c:	str	x21, [sp, #16]
  412090:	mov	x29, sp
  412094:	cbz	x19, 4120b8 <wcrtomb@plt+0xd298>
  412098:	ldp	x21, x0, [x19]
  41209c:	bl	4049d0 <free@plt>
  4120a0:	ldr	x0, [x19, #16]
  4120a4:	bl	4049d0 <free@plt>
  4120a8:	mov	x0, x19
  4120ac:	bl	4049d0 <free@plt>
  4120b0:	mov	x19, x21
  4120b4:	cbnz	x21, 412098 <wcrtomb@plt+0xd278>
  4120b8:	str	xzr, [x20, #2184]
  4120bc:	ldp	x20, x19, [sp, #32]
  4120c0:	ldr	x21, [sp, #16]
  4120c4:	ldp	x29, x30, [sp], #48
  4120c8:	ret
  4120cc:	stp	x29, x30, [sp, #-48]!
  4120d0:	stp	x22, x21, [sp, #16]
  4120d4:	mov	x22, x0
  4120d8:	mov	x0, x1
  4120dc:	stp	x20, x19, [sp, #32]
  4120e0:	mov	x29, sp
  4120e4:	mov	x20, x3
  4120e8:	mov	x19, x2
  4120ec:	mov	x21, x1
  4120f0:	bl	4121cc <wcrtomb@plt+0xd3ac>
  4120f4:	cbz	x0, 412100 <wcrtomb@plt+0xd2e0>
  4120f8:	ldrb	w8, [x0, #24]
  4120fc:	tbnz	w8, #1, 412114 <wcrtomb@plt+0xd2f4>
  412100:	mov	x0, x22
  412104:	mov	x1, x21
  412108:	mov	x2, x19
  41210c:	bl	413268 <wcrtomb@plt+0xe448>
  412110:	b	41212c <wcrtomb@plt+0xd30c>
  412114:	ldr	x8, [x0, #16]
  412118:	mov	x0, x22
  41211c:	mov	x1, x21
  412120:	mov	x2, x19
  412124:	mov	x3, x20
  412128:	blr	x8
  41212c:	ldp	x20, x19, [sp, #32]
  412130:	ldp	x22, x21, [sp, #16]
  412134:	ldp	x29, x30, [sp], #48
  412138:	ret
  41213c:	stp	x29, x30, [sp, #-64]!
  412140:	stp	x22, x21, [sp, #32]
  412144:	stp	x20, x19, [sp, #48]
  412148:	ldr	x8, [x1, #360]
  41214c:	str	x23, [sp, #16]
  412150:	mov	x29, sp
  412154:	cbz	x8, 41216c <wcrtomb@plt+0xd34c>
  412158:	ldp	x20, x19, [sp, #48]
  41215c:	ldp	x22, x21, [sp, #32]
  412160:	ldr	x23, [sp, #16]
  412164:	ldp	x29, x30, [sp], #64
  412168:	ret
  41216c:	mov	x19, x2
  412170:	mov	x20, x1
  412174:	mov	x21, x0
  412178:	bl	4121cc <wcrtomb@plt+0xd3ac>
  41217c:	cbz	x0, 412158 <wcrtomb@plt+0xd338>
  412180:	ldr	x8, [x0, #8]
  412184:	mov	x22, x0
  412188:	cbz	x8, 412158 <wcrtomb@plt+0xd338>
  41218c:	mov	x0, x21
  412190:	bl	410fe0 <wcrtomb@plt+0xc1c0>
  412194:	tbnz	w0, #0, 412158 <wcrtomb@plt+0xd338>
  412198:	add	x23, x20, #0x158
  41219c:	mov	x0, x23
  4121a0:	bl	411898 <wcrtomb@plt+0xca78>
  4121a4:	mov	x0, x21
  4121a8:	bl	41224c <wcrtomb@plt+0xd42c>
  4121ac:	tbnz	w0, #0, 412158 <wcrtomb@plt+0xd338>
  4121b0:	ldr	x8, [x22, #8]
  4121b4:	mov	x0, x20
  4121b8:	mov	x1, x21
  4121bc:	mov	x2, x23
  4121c0:	mov	x3, x19
  4121c4:	blr	x8
  4121c8:	b	412158 <wcrtomb@plt+0xd338>
  4121cc:	stp	x29, x30, [sp, #-48]!
  4121d0:	str	x21, [sp, #16]
  4121d4:	stp	x20, x19, [sp, #32]
  4121d8:	adrp	x19, 451000 <_obstack_memory_used@@Base+0x12da0>
  4121dc:	adrp	x21, 450000 <_obstack_memory_used@@Base+0x11da0>
  4121e0:	mov	x20, x0
  4121e4:	add	x19, x19, #0x440
  4121e8:	add	x21, x21, #0xd9b
  4121ec:	mov	x29, sp
  4121f0:	b	41220c <wcrtomb@plt+0xd3ec>
  4121f4:	mov	x0, x21
  4121f8:	mov	x1, x20
  4121fc:	bl	404920 <strcmp@plt>
  412200:	cbz	w0, 412238 <wcrtomb@plt+0xd418>
  412204:	ldr	x21, [x19, #32]!
  412208:	cbz	x21, 412234 <wcrtomb@plt+0xd414>
  41220c:	ldrb	w8, [x19, #28]
  412210:	cbz	w8, 4121f4 <wcrtomb@plt+0xd3d4>
  412214:	mov	x0, x21
  412218:	bl	404190 <strlen@plt>
  41221c:	mov	x2, x0
  412220:	mov	x0, x21
  412224:	mov	x1, x20
  412228:	bl	4045a0 <strncmp@plt>
  41222c:	cbnz	w0, 412204 <wcrtomb@plt+0xd3e4>
  412230:	b	412238 <wcrtomb@plt+0xd418>
  412234:	mov	x19, xzr
  412238:	mov	x0, x19
  41223c:	ldp	x20, x19, [sp, #32]
  412240:	ldr	x21, [sp, #16]
  412244:	ldp	x29, x30, [sp], #48
  412248:	ret
  41224c:	stp	x29, x30, [sp, #-32]!
  412250:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  412254:	stp	x20, x19, [sp, #16]
  412258:	ldr	x20, [x8, #2192]
  41225c:	mov	x29, sp
  412260:	cbz	x20, 412280 <wcrtomb@plt+0xd460>
  412264:	mov	x19, x0
  412268:	ldr	x0, [x20, #8]
  41226c:	mov	x1, x19
  412270:	bl	404920 <strcmp@plt>
  412274:	cbz	w0, 412288 <wcrtomb@plt+0xd468>
  412278:	ldr	x20, [x20]
  41227c:	cbnz	x20, 412268 <wcrtomb@plt+0xd448>
  412280:	mov	w0, wzr
  412284:	b	41228c <wcrtomb@plt+0xd46c>
  412288:	mov	w0, #0x1                   	// #1
  41228c:	ldp	x20, x19, [sp, #16]
  412290:	ldp	x29, x30, [sp], #32
  412294:	ret
  412298:	stp	x29, x30, [sp, #-64]!
  41229c:	bic	x8, x2, x2, asr #63
  4122a0:	stp	x22, x21, [sp, #32]
  4122a4:	add	x22, x8, #0x200
  4122a8:	stp	x24, x23, [sp, #16]
  4122ac:	stp	x20, x19, [sp, #48]
  4122b0:	mov	x19, x0
  4122b4:	str	x22, [x0, #8]
  4122b8:	add	x0, x8, #0x201
  4122bc:	mov	x29, sp
  4122c0:	mov	x20, x1
  4122c4:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4122c8:	mov	x23, xzr
  4122cc:	mov	w24, #0x200                 	// #512
  4122d0:	str	x0, [x19, #16]
  4122d4:	strb	wzr, [x0, x22]
  4122d8:	cmp	x22, #0x200
  4122dc:	csel	x21, x22, x24, cc  // cc = lo, ul, last
  4122e0:	cbz	x20, 41232c <wcrtomb@plt+0xd50c>
  4122e4:	ldr	x8, [x19, #16]
  4122e8:	mov	x1, x20
  4122ec:	mov	x2, x21
  4122f0:	add	x0, x8, x23
  4122f4:	bl	404110 <memcpy@plt>
  4122f8:	mov	x0, x20
  4122fc:	bl	405744 <wcrtomb@plt+0x924>
  412300:	bl	4055d4 <wcrtomb@plt+0x7b4>
  412304:	sub	x22, x22, x21
  412308:	mov	x20, x0
  41230c:	cmp	x22, #0x0
  412310:	add	x23, x21, x23
  412314:	b.gt	4122d8 <wcrtomb@plt+0xd4b8>
  412318:	ldp	x20, x19, [sp, #48]
  41231c:	ldp	x22, x21, [sp, #32]
  412320:	ldp	x24, x23, [sp, #16]
  412324:	ldp	x29, x30, [sp], #64
  412328:	ret
  41232c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  412330:	ldr	x8, [x8, #1008]
  412334:	cbz	x8, 41233c <wcrtomb@plt+0xd51c>
  412338:	blr	x8
  41233c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  412340:	add	x1, x1, #0xc61
  412344:	mov	w2, #0x5                   	// #5
  412348:	mov	x0, xzr
  41234c:	bl	404bf0 <dcgettext@plt>
  412350:	mov	x2, x0
  412354:	mov	w0, wzr
  412358:	mov	w1, wzr
  41235c:	bl	4041f0 <error@plt>
  412360:	bl	40dda4 <wcrtomb@plt+0x8f84>
  412364:	str	xzr, [x0, #24]
  412368:	ret
  41236c:	stp	x29, x30, [sp, #-32]!
  412370:	stp	x20, x19, [sp, #16]
  412374:	ldr	x8, [x0, #16]
  412378:	mov	x29, sp
  41237c:	cbnz	x8, 4123b8 <wcrtomb@plt+0xd598>
  412380:	mov	x19, x0
  412384:	mov	x20, x1
  412388:	bl	411898 <wcrtomb@plt+0xca78>
  41238c:	mov	x0, x20
  412390:	bl	404190 <strlen@plt>
  412394:	ldr	x8, [x19, #24]
  412398:	add	x8, x8, x0
  41239c:	mov	x0, x20
  4123a0:	str	x8, [x19, #24]
  4123a4:	bl	404190 <strlen@plt>
  4123a8:	mov	x2, x0
  4123ac:	mov	x0, x19
  4123b0:	mov	x1, x20
  4123b4:	bl	4123c4 <wcrtomb@plt+0xd5a4>
  4123b8:	ldp	x20, x19, [sp, #16]
  4123bc:	ldp	x29, x30, [sp], #32
  4123c0:	ret
  4123c4:	stp	x29, x30, [sp, #-48]!
  4123c8:	stp	x22, x21, [sp, #16]
  4123cc:	stp	x20, x19, [sp, #32]
  4123d0:	ldr	x21, [x0]
  4123d4:	mov	x19, x2
  4123d8:	mov	x20, x0
  4123dc:	mov	x22, x1
  4123e0:	ldp	x9, x8, [x21, #24]
  4123e4:	mov	x29, sp
  4123e8:	sub	x8, x8, x9
  4123ec:	cmp	x8, x2
  4123f0:	b.cs	412400 <wcrtomb@plt+0xd5e0>  // b.hs, b.nlast
  4123f4:	mov	x0, x21
  4123f8:	mov	x1, x19
  4123fc:	bl	43e028 <_obstack_newchunk@@Base>
  412400:	ldr	x0, [x21, #24]
  412404:	mov	x1, x22
  412408:	mov	x2, x19
  41240c:	bl	404110 <memcpy@plt>
  412410:	ldr	x8, [x21, #24]
  412414:	add	x8, x8, x19
  412418:	str	x8, [x21, #24]
  41241c:	ldr	x8, [x20, #8]
  412420:	add	x8, x8, x19
  412424:	str	x8, [x20, #8]
  412428:	ldp	x20, x19, [sp, #32]
  41242c:	ldp	x22, x21, [sp, #16]
  412430:	ldp	x29, x30, [sp], #48
  412434:	ret
  412438:	sub	sp, sp, #0x70
  41243c:	stp	x29, x30, [sp, #32]
  412440:	stp	x24, x23, [sp, #64]
  412444:	stp	x22, x21, [sp, #80]
  412448:	stp	x20, x19, [sp, #96]
  41244c:	ldr	x8, [x0, #16]
  412450:	str	x25, [sp, #48]
  412454:	add	x29, sp, #0x20
  412458:	cbz	x8, 412464 <wcrtomb@plt+0xd644>
  41245c:	mov	w0, wzr
  412460:	b	412524 <wcrtomb@plt+0xd704>
  412464:	mov	x20, x0
  412468:	mov	x19, x1
  41246c:	bl	411898 <wcrtomb@plt+0xca78>
  412470:	mov	x0, x19
  412474:	bl	404190 <strlen@plt>
  412478:	ldr	x8, [x20, #24]
  41247c:	add	x9, sp, #0x8
  412480:	mov	x22, xzr
  412484:	add	x24, x9, #0x14
  412488:	add	x8, x0, x8
  41248c:	add	x23, x8, #0x3
  412490:	add	x0, x23, x22
  412494:	add	x1, sp, #0x8
  412498:	bl	43650c <argp_usage@@Base+0x4910>
  41249c:	sub	x25, x24, x0
  4124a0:	cmp	x25, x22
  4124a4:	mov	x22, x25
  4124a8:	b.ne	412490 <wcrtomb@plt+0xd670>  // b.any
  4124ac:	mov	x21, x0
  4124b0:	mov	x0, x19
  4124b4:	bl	404190 <strlen@plt>
  4124b8:	add	x23, x0, x25
  4124bc:	add	x22, x23, #0x2
  4124c0:	mov	x0, x20
  4124c4:	mov	x1, x22
  4124c8:	bl	412540 <wcrtomb@plt+0xd720>
  4124cc:	mov	w1, #0xa                   	// #10
  4124d0:	mov	x0, x20
  4124d4:	bl	4125a0 <wcrtomb@plt+0xd780>
  4124d8:	ldr	x8, [x20]
  4124dc:	ldr	x2, [x20, #24]
  4124e0:	ldr	x8, [x8, #24]
  4124e4:	sub	x8, x8, x2
  4124e8:	sub	x8, x8, x23
  4124ec:	sub	x20, x8, #0x3
  4124f0:	add	x0, x20, x22
  4124f4:	mov	x1, x20
  4124f8:	bl	404120 <memmove@plt>
  4124fc:	mov	x0, x20
  412500:	mov	x1, x21
  412504:	bl	4043e0 <stpcpy@plt>
  412508:	mov	w8, #0x20                  	// #32
  41250c:	strb	w8, [x0], #1
  412510:	mov	x1, x19
  412514:	bl	4043e0 <stpcpy@plt>
  412518:	mov	w8, #0x3d                  	// #61
  41251c:	strb	w8, [x0]
  412520:	mov	w0, #0x1                   	// #1
  412524:	ldp	x20, x19, [sp, #96]
  412528:	ldp	x22, x21, [sp, #80]
  41252c:	ldp	x24, x23, [sp, #64]
  412530:	ldr	x25, [sp, #48]
  412534:	ldp	x29, x30, [sp, #32]
  412538:	add	sp, sp, #0x70
  41253c:	ret
  412540:	stp	x29, x30, [sp, #-48]!
  412544:	stp	x20, x19, [sp, #32]
  412548:	str	x21, [sp, #16]
  41254c:	ldr	x21, [x0]
  412550:	mov	x20, x1
  412554:	mov	x19, x0
  412558:	mov	x29, sp
  41255c:	ldp	x9, x8, [x21, #24]
  412560:	sub	x8, x8, x9
  412564:	cmp	x8, x1
  412568:	b.cs	412578 <wcrtomb@plt+0xd758>  // b.hs, b.nlast
  41256c:	mov	x0, x21
  412570:	mov	x1, x20
  412574:	bl	43e028 <_obstack_newchunk@@Base>
  412578:	ldr	x8, [x21, #24]
  41257c:	add	x8, x8, x20
  412580:	str	x8, [x21, #24]
  412584:	ldr	x8, [x19, #8]
  412588:	ldr	x21, [sp, #16]
  41258c:	add	x8, x8, x20
  412590:	str	x8, [x19, #8]
  412594:	ldp	x20, x19, [sp, #32]
  412598:	ldp	x29, x30, [sp], #48
  41259c:	ret
  4125a0:	stp	x29, x30, [sp, #-48]!
  4125a4:	stp	x20, x19, [sp, #32]
  4125a8:	ldr	x20, [x0]
  4125ac:	str	x21, [sp, #16]
  4125b0:	mov	x19, x0
  4125b4:	mov	w21, w1
  4125b8:	ldp	x9, x8, [x20, #24]
  4125bc:	mov	x29, sp
  4125c0:	cmp	x8, x9
  4125c4:	b.ne	4125d4 <wcrtomb@plt+0xd7b4>  // b.any
  4125c8:	mov	w1, #0x1                   	// #1
  4125cc:	mov	x0, x20
  4125d0:	bl	43e028 <_obstack_newchunk@@Base>
  4125d4:	ldr	x8, [x20, #24]
  4125d8:	add	x9, x8, #0x1
  4125dc:	str	x9, [x20, #24]
  4125e0:	strb	w21, [x8]
  4125e4:	ldr	x8, [x19, #8]
  4125e8:	ldr	x21, [sp, #16]
  4125ec:	add	x8, x8, #0x1
  4125f0:	str	x8, [x19, #8]
  4125f4:	ldp	x20, x19, [sp, #32]
  4125f8:	ldp	x29, x30, [sp], #48
  4125fc:	ret
  412600:	stp	x29, x30, [sp, #-16]!
  412604:	ldp	x8, x9, [x0, #216]
  412608:	mov	x3, x2
  41260c:	mov	x2, x1
  412610:	mov	x29, sp
  412614:	mov	x0, x8
  412618:	mov	x1, x9
  41261c:	bl	413600 <wcrtomb@plt+0xe7e0>
  412620:	ldp	x29, x30, [sp], #16
  412624:	ret
  412628:	sub	sp, sp, #0x30
  41262c:	mov	x8, x1
  412630:	str	x19, [sp, #32]
  412634:	mov	x19, x0
  412638:	mov	x0, sp
  41263c:	mov	x1, x2
  412640:	mov	x2, x8
  412644:	stp	x29, x30, [sp, #16]
  412648:	add	x29, sp, #0x10
  41264c:	bl	413640 <wcrtomb@plt+0xe820>
  412650:	tbz	w0, #0, 41265c <wcrtomb@plt+0xd83c>
  412654:	ldr	q0, [sp]
  412658:	stur	q0, [x19, #216]
  41265c:	ldr	x19, [sp, #32]
  412660:	ldp	x29, x30, [sp, #16]
  412664:	add	sp, sp, #0x30
  412668:	ret
  41266c:	ret
  412670:	ret
  412674:	stp	x29, x30, [sp, #-16]!
  412678:	ldp	x8, x9, [x0, #248]
  41267c:	mov	x3, x2
  412680:	mov	x2, x1
  412684:	mov	x29, sp
  412688:	mov	x0, x8
  41268c:	mov	x1, x9
  412690:	bl	413600 <wcrtomb@plt+0xe7e0>
  412694:	ldp	x29, x30, [sp], #16
  412698:	ret
  41269c:	sub	sp, sp, #0x30
  4126a0:	mov	x8, x1
  4126a4:	str	x19, [sp, #32]
  4126a8:	mov	x19, x0
  4126ac:	mov	x0, sp
  4126b0:	mov	x1, x2
  4126b4:	mov	x2, x8
  4126b8:	stp	x29, x30, [sp, #16]
  4126bc:	add	x29, sp, #0x10
  4126c0:	bl	413640 <wcrtomb@plt+0xe820>
  4126c4:	tbz	w0, #0, 4126d0 <wcrtomb@plt+0xd8b0>
  4126c8:	ldr	q0, [sp]
  4126cc:	stur	q0, [x19, #248]
  4126d0:	ldr	x19, [sp, #32]
  4126d4:	ldp	x29, x30, [sp, #16]
  4126d8:	add	sp, sp, #0x30
  4126dc:	ret
  4126e0:	stp	x29, x30, [sp, #-16]!
  4126e4:	ldr	w0, [x0, #116]
  4126e8:	mov	x3, x2
  4126ec:	mov	w2, #0xffffffff            	// #-1
  4126f0:	mov	x29, sp
  4126f4:	bl	4137c0 <wcrtomb@plt+0xe9a0>
  4126f8:	ldp	x29, x30, [sp], #16
  4126fc:	ret
  412700:	stp	x29, x30, [sp, #-32]!
  412704:	mov	x29, sp
  412708:	mov	x8, x2
  41270c:	str	x19, [sp, #16]
  412710:	mov	x3, x1
  412714:	mov	x19, x0
  412718:	add	x0, x29, #0x18
  41271c:	mov	w2, #0xffffffff            	// #-1
  412720:	mov	x1, x8
  412724:	bl	413804 <wcrtomb@plt+0xe9e4>
  412728:	tbz	w0, #0, 412734 <wcrtomb@plt+0xd914>
  41272c:	ldr	x8, [x29, #24]
  412730:	str	w8, [x19, #116]
  412734:	ldr	x19, [sp, #16]
  412738:	ldp	x29, x30, [sp], #32
  41273c:	ret
  412740:	stp	x29, x30, [sp, #-16]!
  412744:	ldr	x0, [x0, #40]
  412748:	mov	x29, sp
  41274c:	bl	4118e4 <wcrtomb@plt+0xcac4>
  412750:	ldp	x29, x30, [sp], #16
  412754:	ret
  412758:	stp	x29, x30, [sp, #-16]!
  41275c:	mov	x1, x2
  412760:	add	x0, x0, #0x28
  412764:	mov	x29, sp
  412768:	bl	4138ec <wcrtomb@plt+0xeacc>
  41276c:	ldp	x29, x30, [sp], #16
  412770:	ret
  412774:	stp	x29, x30, [sp, #-16]!
  412778:	ldr	x0, [x0, #24]
  41277c:	mov	x29, sp
  412780:	bl	4118e4 <wcrtomb@plt+0xcac4>
  412784:	ldp	x29, x30, [sp], #16
  412788:	ret
  41278c:	stp	x29, x30, [sp, #-16]!
  412790:	mov	x1, x2
  412794:	add	x0, x0, #0x18
  412798:	mov	x29, sp
  41279c:	bl	4138ec <wcrtomb@plt+0xeacc>
  4127a0:	ldp	x29, x30, [sp], #16
  4127a4:	ret
  4127a8:	stp	x29, x30, [sp, #-16]!
  4127ac:	add	x9, x3, #0x8
  4127b0:	add	x11, x0, #0xf0
  4127b4:	cmp	x3, #0x0
  4127b8:	add	x10, x0, #0xe8
  4127bc:	csel	x9, x11, x9, eq  // eq = none
  4127c0:	csel	x10, x10, x3, eq  // eq = none
  4127c4:	ldr	x9, [x9]
  4127c8:	ldr	x0, [x10]
  4127cc:	mov	x8, x2
  4127d0:	mov	x2, x1
  4127d4:	mov	x1, x9
  4127d8:	mov	x3, x8
  4127dc:	mov	x29, sp
  4127e0:	bl	413600 <wcrtomb@plt+0xe7e0>
  4127e4:	ldp	x29, x30, [sp], #16
  4127e8:	ret
  4127ec:	sub	sp, sp, #0x30
  4127f0:	mov	x8, x1
  4127f4:	str	x19, [sp, #32]
  4127f8:	mov	x19, x0
  4127fc:	mov	x0, sp
  412800:	mov	x1, x2
  412804:	mov	x2, x8
  412808:	stp	x29, x30, [sp, #16]
  41280c:	add	x29, sp, #0x10
  412810:	bl	413640 <wcrtomb@plt+0xe820>
  412814:	tbz	w0, #0, 412820 <wcrtomb@plt+0xda00>
  412818:	ldr	q0, [sp]
  41281c:	stur	q0, [x19, #232]
  412820:	ldr	x19, [sp, #32]
  412824:	ldp	x29, x30, [sp, #16]
  412828:	add	sp, sp, #0x30
  41282c:	ret
  412830:	stp	x29, x30, [sp, #-16]!
  412834:	ldr	x0, [x0, #8]
  412838:	mov	x29, sp
  41283c:	bl	4118e4 <wcrtomb@plt+0xcac4>
  412840:	ldp	x29, x30, [sp], #16
  412844:	ret
  412848:	stp	x29, x30, [sp, #-16]!
  41284c:	ldrb	w8, [x0, #321]
  412850:	mov	x29, sp
  412854:	cbz	w8, 412860 <wcrtomb@plt+0xda40>
  412858:	ldp	x29, x30, [sp], #16
  41285c:	ret
  412860:	mov	x1, x2
  412864:	bl	41393c <wcrtomb@plt+0xeb1c>
  412868:	ldp	x29, x30, [sp], #16
  41286c:	ret
  412870:	stp	x29, x30, [sp, #-16]!
  412874:	ldr	x0, [x0, #136]
  412878:	mov	x29, sp
  41287c:	bl	41397c <wcrtomb@plt+0xeb5c>
  412880:	ldp	x29, x30, [sp], #16
  412884:	ret
  412888:	stp	x29, x30, [sp, #-32]!
  41288c:	mov	x29, sp
  412890:	mov	x8, x2
  412894:	str	x19, [sp, #16]
  412898:	mov	x3, x1
  41289c:	mov	x19, x0
  4128a0:	add	x0, x29, #0x18
  4128a4:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4128a8:	mov	x1, x8
  4128ac:	bl	413998 <wcrtomb@plt+0xeb78>
  4128b0:	tbz	w0, #0, 4128bc <wcrtomb@plt+0xda9c>
  4128b4:	ldr	x8, [x29, #24]
  4128b8:	str	x8, [x19, #136]
  4128bc:	ldr	x19, [sp, #16]
  4128c0:	ldp	x29, x30, [sp], #32
  4128c4:	ret
  4128c8:	stp	x29, x30, [sp, #-16]!
  4128cc:	ldr	w0, [x0, #112]
  4128d0:	mov	x3, x2
  4128d4:	mov	w2, #0xffffffff            	// #-1
  4128d8:	mov	x29, sp
  4128dc:	bl	4137c0 <wcrtomb@plt+0xe9a0>
  4128e0:	ldp	x29, x30, [sp], #16
  4128e4:	ret
  4128e8:	stp	x29, x30, [sp, #-32]!
  4128ec:	mov	x29, sp
  4128f0:	mov	x8, x2
  4128f4:	str	x19, [sp, #16]
  4128f8:	mov	x3, x1
  4128fc:	mov	x19, x0
  412900:	add	x0, x29, #0x18
  412904:	mov	w2, #0xffffffff            	// #-1
  412908:	mov	x1, x8
  41290c:	bl	413804 <wcrtomb@plt+0xe9e4>
  412910:	tbz	w0, #0, 41291c <wcrtomb@plt+0xdafc>
  412914:	ldr	x8, [x29, #24]
  412918:	str	w8, [x19, #112]
  41291c:	ldr	x19, [sp, #16]
  412920:	ldp	x29, x30, [sp], #32
  412924:	ret
  412928:	stp	x29, x30, [sp, #-16]!
  41292c:	ldr	x0, [x0, #32]
  412930:	mov	x29, sp
  412934:	bl	4118e4 <wcrtomb@plt+0xcac4>
  412938:	ldp	x29, x30, [sp], #16
  41293c:	ret
  412940:	stp	x29, x30, [sp, #-16]!
  412944:	mov	x1, x2
  412948:	add	x0, x0, #0x20
  41294c:	mov	x29, sp
  412950:	bl	4138ec <wcrtomb@plt+0xeacc>
  412954:	ldp	x29, x30, [sp], #16
  412958:	ret
  41295c:	stp	x29, x30, [sp, #-16]!
  412960:	mov	x1, x2
  412964:	mov	w8, #0x1                   	// #1
  412968:	mov	x29, sp
  41296c:	strb	w8, [x0, #321]
  412970:	bl	41393c <wcrtomb@plt+0xeb1c>
  412974:	ldp	x29, x30, [sp], #16
  412978:	ret
  41297c:	stp	x29, x30, [sp, #-16]!
  412980:	ldr	w0, [x0, #276]
  412984:	mov	x29, sp
  412988:	bl	41397c <wcrtomb@plt+0xeb5c>
  41298c:	ldp	x29, x30, [sp], #16
  412990:	ret
  412994:	stp	x29, x30, [sp, #-32]!
  412998:	mov	x29, sp
  41299c:	mov	x8, x2
  4129a0:	str	x19, [sp, #16]
  4129a4:	mov	x3, x1
  4129a8:	mov	x19, x0
  4129ac:	add	x0, x29, #0x18
  4129b0:	mov	w2, #0xffffffff            	// #-1
  4129b4:	mov	x1, x8
  4129b8:	bl	413998 <wcrtomb@plt+0xeb78>
  4129bc:	tbz	w0, #0, 4129c8 <wcrtomb@plt+0xdba8>
  4129c0:	ldr	x8, [x29, #24]
  4129c4:	str	w8, [x19, #276]
  4129c8:	ldr	x19, [sp, #16]
  4129cc:	ldp	x29, x30, [sp], #32
  4129d0:	ret
  4129d4:	stp	x29, x30, [sp, #-16]!
  4129d8:	ldr	w0, [x0, #280]
  4129dc:	mov	x29, sp
  4129e0:	bl	41397c <wcrtomb@plt+0xeb5c>
  4129e4:	ldp	x29, x30, [sp], #16
  4129e8:	ret
  4129ec:	stp	x29, x30, [sp, #-32]!
  4129f0:	mov	x29, sp
  4129f4:	mov	x8, x2
  4129f8:	str	x19, [sp, #16]
  4129fc:	mov	x3, x1
  412a00:	mov	x19, x0
  412a04:	add	x0, x29, #0x18
  412a08:	mov	w2, #0xffffffff            	// #-1
  412a0c:	mov	x1, x8
  412a10:	bl	413998 <wcrtomb@plt+0xeb78>
  412a14:	tbz	w0, #0, 412a20 <wcrtomb@plt+0xdc00>
  412a18:	ldr	x8, [x29, #24]
  412a1c:	str	w8, [x19, #280]
  412a20:	ldr	x19, [sp, #16]
  412a24:	ldp	x29, x30, [sp], #32
  412a28:	ret
  412a2c:	stp	x29, x30, [sp, #-16]!
  412a30:	mov	x29, sp
  412a34:	bl	412870 <wcrtomb@plt+0xda50>
  412a38:	ldp	x29, x30, [sp], #16
  412a3c:	ret
  412a40:	stp	x29, x30, [sp, #-32]!
  412a44:	mov	x29, sp
  412a48:	mov	x8, x2
  412a4c:	str	x19, [sp, #16]
  412a50:	mov	x3, x1
  412a54:	mov	x19, x0
  412a58:	add	x0, x29, #0x18
  412a5c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412a60:	mov	x1, x8
  412a64:	bl	413998 <wcrtomb@plt+0xeb78>
  412a68:	tbz	w0, #0, 412a7c <wcrtomb@plt+0xdc5c>
  412a6c:	mov	w8, #0x1                   	// #1
  412a70:	strb	w8, [x19, #320]
  412a74:	ldr	x8, [x29, #24]
  412a78:	str	x8, [x19, #312]
  412a7c:	ldr	x19, [sp, #16]
  412a80:	ldp	x29, x30, [sp], #32
  412a84:	ret
  412a88:	stp	x29, x30, [sp, #-16]!
  412a8c:	ldr	x0, [x0, #288]
  412a90:	mov	x29, sp
  412a94:	bl	41397c <wcrtomb@plt+0xeb5c>
  412a98:	ldp	x29, x30, [sp], #16
  412a9c:	ret
  412aa0:	stp	x29, x30, [sp, #-32]!
  412aa4:	mov	x29, sp
  412aa8:	mov	x8, x2
  412aac:	str	x19, [sp, #16]
  412ab0:	mov	x3, x1
  412ab4:	mov	x19, x0
  412ab8:	add	x0, x29, #0x18
  412abc:	mov	x2, #0xffffffffffffffff    	// #-1
  412ac0:	mov	x1, x8
  412ac4:	bl	413998 <wcrtomb@plt+0xeb78>
  412ac8:	tbz	w0, #0, 412ae4 <wcrtomb@plt+0xdcc4>
  412acc:	ldr	x0, [x29, #24]
  412ad0:	mov	w1, #0x10                  	// #16
  412ad4:	str	x0, [x19, #296]
  412ad8:	bl	43d32c <argp_usage@@Base+0xb730>
  412adc:	str	x0, [x19, #304]
  412ae0:	str	xzr, [x19, #288]
  412ae4:	ldr	x19, [sp, #16]
  412ae8:	ldp	x29, x30, [sp], #32
  412aec:	ret
  412af0:	stp	x29, x30, [sp, #-16]!
  412af4:	ldr	x8, [x3]
  412af8:	ldr	x9, [x0, #304]
  412afc:	mov	x29, sp
  412b00:	lsl	x8, x8, #4
  412b04:	ldr	x0, [x9, x8]
  412b08:	bl	41397c <wcrtomb@plt+0xeb5c>
  412b0c:	ldp	x29, x30, [sp], #16
  412b10:	ret
  412b14:	sub	sp, sp, #0x30
  412b18:	stp	x20, x19, [sp, #32]
  412b1c:	mov	x19, x2
  412b20:	mov	x3, x1
  412b24:	mov	x20, x0
  412b28:	add	x0, sp, #0x8
  412b2c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412b30:	mov	x1, x19
  412b34:	stp	x29, x30, [sp, #16]
  412b38:	add	x29, sp, #0x10
  412b3c:	bl	413998 <wcrtomb@plt+0xeb78>
  412b40:	tbz	w0, #0, 412bb0 <wcrtomb@plt+0xdd90>
  412b44:	ldp	x8, x9, [x20, #288]
  412b48:	cmp	x8, x9
  412b4c:	b.cs	412b64 <wcrtomb@plt+0xdd44>  // b.hs, b.nlast
  412b50:	ldr	x9, [sp, #8]
  412b54:	ldr	x10, [x20, #304]
  412b58:	lsl	x8, x8, #4
  412b5c:	str	x9, [x10, x8]
  412b60:	b	412bb0 <wcrtomb@plt+0xdd90>
  412b64:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  412b68:	ldr	x8, [x8, #1008]
  412b6c:	cbz	x8, 412b74 <wcrtomb@plt+0xdd54>
  412b70:	blr	x8
  412b74:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  412b78:	add	x1, x1, #0xb83
  412b7c:	mov	w2, #0x5                   	// #5
  412b80:	mov	x0, xzr
  412b84:	bl	404bf0 <dcgettext@plt>
  412b88:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x12da0>
  412b8c:	mov	x2, x0
  412b90:	add	x3, x3, #0x906
  412b94:	mov	w0, wzr
  412b98:	mov	w1, wzr
  412b9c:	mov	x4, x19
  412ba0:	bl	4041f0 <error@plt>
  412ba4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  412ba8:	mov	w9, #0x2                   	// #2
  412bac:	str	w9, [x8, #3456]
  412bb0:	ldp	x20, x19, [sp, #32]
  412bb4:	ldp	x29, x30, [sp, #16]
  412bb8:	add	sp, sp, #0x30
  412bbc:	ret
  412bc0:	stp	x29, x30, [sp, #-16]!
  412bc4:	ldr	x8, [x0, #304]
  412bc8:	ldr	x9, [x3]
  412bcc:	mov	x29, sp
  412bd0:	add	x8, x8, x9, lsl #4
  412bd4:	ldr	x0, [x8, #8]
  412bd8:	bl	41397c <wcrtomb@plt+0xeb5c>
  412bdc:	ldp	x29, x30, [sp], #16
  412be0:	ret
  412be4:	stp	x29, x30, [sp, #-48]!
  412be8:	stp	x20, x19, [sp, #32]
  412bec:	mov	x29, sp
  412bf0:	mov	x19, x2
  412bf4:	mov	x20, x1
  412bf8:	str	x21, [sp, #16]
  412bfc:	mov	x21, x0
  412c00:	add	x0, x29, #0x18
  412c04:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412c08:	mov	x1, x19
  412c0c:	mov	x3, x20
  412c10:	bl	413998 <wcrtomb@plt+0xeb78>
  412c14:	tbz	w0, #0, 412c88 <wcrtomb@plt+0xde68>
  412c18:	ldp	x8, x9, [x21, #288]
  412c1c:	cmp	x8, x9
  412c20:	b.cs	412c40 <wcrtomb@plt+0xde20>  // b.hs, b.nlast
  412c24:	ldr	x9, [x21, #304]
  412c28:	ldr	x10, [x29, #24]
  412c2c:	add	x11, x8, #0x1
  412c30:	str	x11, [x21, #288]
  412c34:	add	x8, x9, x8, lsl #4
  412c38:	str	x10, [x8, #8]
  412c3c:	b	412c88 <wcrtomb@plt+0xde68>
  412c40:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  412c44:	ldr	x8, [x8, #1008]
  412c48:	cbz	x8, 412c50 <wcrtomb@plt+0xde30>
  412c4c:	blr	x8
  412c50:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  412c54:	add	x1, x1, #0xb83
  412c58:	mov	w2, #0x5                   	// #5
  412c5c:	mov	x0, xzr
  412c60:	bl	404bf0 <dcgettext@plt>
  412c64:	mov	x2, x0
  412c68:	mov	w0, wzr
  412c6c:	mov	w1, wzr
  412c70:	mov	x3, x20
  412c74:	mov	x4, x19
  412c78:	bl	4041f0 <error@plt>
  412c7c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  412c80:	mov	w9, #0x2                   	// #2
  412c84:	str	w9, [x8, #3456]
  412c88:	ldp	x20, x19, [sp, #32]
  412c8c:	ldr	x21, [sp, #16]
  412c90:	ldp	x29, x30, [sp], #48
  412c94:	ret
  412c98:	sub	sp, sp, #0x70
  412c9c:	stp	x24, x23, [sp, #64]
  412ca0:	adrp	x24, 451000 <_obstack_memory_used@@Base+0x12da0>
  412ca4:	stp	x28, x27, [sp, #32]
  412ca8:	stp	x26, x25, [sp, #48]
  412cac:	stp	x22, x21, [sp, #80]
  412cb0:	stp	x20, x19, [sp, #96]
  412cb4:	mov	x20, x2
  412cb8:	mov	x19, x1
  412cbc:	mov	x21, x0
  412cc0:	mov	w27, #0x1                   	// #1
  412cc4:	adrp	x28, 470000 <argp_program_version_hook@@Base+0x258>
  412cc8:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  412ccc:	mov	w23, #0x2                   	// #2
  412cd0:	add	x24, x24, #0xb2d
  412cd4:	stp	x29, x30, [sp, #16]
  412cd8:	add	x29, sp, #0x10
  412cdc:	str	xzr, [x0, #288]
  412ce0:	b	412d04 <wcrtomb@plt+0xdee4>
  412ce4:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  412ce8:	mov	x0, x19
  412cec:	mov	x1, x20
  412cf0:	mov	x2, xzr
  412cf4:	bl	41371c <wcrtomb@plt+0xe8fc>
  412cf8:	mov	w8, #0x1                   	// #1
  412cfc:	mov	x22, x25
  412d00:	cbnz	w8, 412e5c <wcrtomb@plt+0xe03c>
  412d04:	ldrb	w8, [x20]
  412d08:	sub	w8, w8, #0x30
  412d0c:	cmp	w8, #0xa
  412d10:	b.cs	412d4c <wcrtomb@plt+0xdf2c>  // b.hs, b.nlast
  412d14:	bl	404d00 <__errno_location@plt>
  412d18:	mov	x25, x0
  412d1c:	str	wzr, [x0]
  412d20:	add	x1, sp, #0x8
  412d24:	mov	w2, #0xa                   	// #10
  412d28:	mov	x0, x20
  412d2c:	bl	404240 <strtoimax@plt>
  412d30:	ldr	w8, [x25]
  412d34:	mov	x25, x0
  412d38:	cmp	w8, #0x22
  412d3c:	cbz	w27, 412d8c <wcrtomb@plt+0xdf6c>
  412d40:	b.eq	412ce4 <wcrtomb@plt+0xdec4>  // b.none
  412d44:	mov	x22, x25
  412d48:	b	412dcc <wcrtomb@plt+0xdfac>
  412d4c:	ldr	x8, [x28, #1008]
  412d50:	cbz	x8, 412d58 <wcrtomb@plt+0xdf38>
  412d54:	blr	x8
  412d58:	mov	w2, #0x5                   	// #5
  412d5c:	mov	x0, xzr
  412d60:	mov	x1, x24
  412d64:	bl	404bf0 <dcgettext@plt>
  412d68:	mov	x2, x0
  412d6c:	mov	w0, wzr
  412d70:	mov	w1, wzr
  412d74:	mov	x3, x19
  412d78:	mov	x4, x20
  412d7c:	bl	4041f0 <error@plt>
  412d80:	str	w23, [x26, #3456]
  412d84:	mov	w8, #0x1                   	// #1
  412d88:	b	412d00 <wcrtomb@plt+0xdee0>
  412d8c:	b.ne	412dac <wcrtomb@plt+0xdf8c>  // b.any
  412d90:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  412d94:	mov	x0, x19
  412d98:	mov	x1, x20
  412d9c:	mov	x2, xzr
  412da0:	bl	41371c <wcrtomb@plt+0xe8fc>
  412da4:	mov	w8, #0x1                   	// #1
  412da8:	b	412d00 <wcrtomb@plt+0xdee0>
  412dac:	ldp	x8, x9, [x21, #288]
  412db0:	cmp	x8, x9
  412db4:	b.cs	412e3c <wcrtomb@plt+0xe01c>  // b.hs, b.nlast
  412db8:	ldr	x9, [x21, #304]
  412dbc:	add	x10, x8, #0x1
  412dc0:	str	x10, [x21, #288]
  412dc4:	add	x8, x9, x8, lsl #4
  412dc8:	stp	x22, x25, [x8]
  412dcc:	ldr	x9, [sp, #8]
  412dd0:	cmp	w27, #0x0
  412dd4:	cset	w27, eq  // eq = none
  412dd8:	ldrb	w8, [x9]
  412ddc:	cbz	w8, 412df4 <wcrtomb@plt+0xdfd4>
  412de0:	cmp	w8, #0x2c
  412de4:	b.ne	412dfc <wcrtomb@plt+0xdfdc>  // b.any
  412de8:	mov	w8, wzr
  412dec:	add	x20, x9, #0x1
  412df0:	b	412d00 <wcrtomb@plt+0xdee0>
  412df4:	mov	w8, #0x3                   	// #3
  412df8:	b	412d00 <wcrtomb@plt+0xdee0>
  412dfc:	ldr	x8, [x28, #1008]
  412e00:	cbz	x8, 412e08 <wcrtomb@plt+0xdfe8>
  412e04:	blr	x8
  412e08:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  412e0c:	mov	w2, #0x5                   	// #5
  412e10:	mov	x0, xzr
  412e14:	add	x1, x1, #0xbab
  412e18:	bl	404bf0 <dcgettext@plt>
  412e1c:	ldr	x8, [sp, #8]
  412e20:	mov	x2, x0
  412e24:	mov	w0, wzr
  412e28:	mov	w1, wzr
  412e2c:	ldrb	w4, [x8]
  412e30:	mov	x3, x19
  412e34:	bl	4041f0 <error@plt>
  412e38:	b	412d80 <wcrtomb@plt+0xdf60>
  412e3c:	ldr	x8, [x28, #1008]
  412e40:	cbz	x8, 412e48 <wcrtomb@plt+0xe028>
  412e44:	blr	x8
  412e48:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  412e4c:	mov	w2, #0x5                   	// #5
  412e50:	mov	x0, xzr
  412e54:	add	x1, x1, #0xb83
  412e58:	b	412d64 <wcrtomb@plt+0xdf44>
  412e5c:	cmp	w8, #0x3
  412e60:	b.ne	412ea4 <wcrtomb@plt+0xe084>  // b.any
  412e64:	cbnz	w27, 412ea4 <wcrtomb@plt+0xe084>
  412e68:	ldr	x8, [x28, #1008]
  412e6c:	cbz	x8, 412e74 <wcrtomb@plt+0xe054>
  412e70:	blr	x8
  412e74:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  412e78:	add	x1, x1, #0xbea
  412e7c:	mov	w2, #0x5                   	// #5
  412e80:	mov	x0, xzr
  412e84:	bl	404bf0 <dcgettext@plt>
  412e88:	mov	x2, x0
  412e8c:	mov	w0, wzr
  412e90:	mov	w1, wzr
  412e94:	mov	x3, x19
  412e98:	bl	4041f0 <error@plt>
  412e9c:	mov	w8, #0x2                   	// #2
  412ea0:	str	w8, [x26, #3456]
  412ea4:	ldp	x20, x19, [sp, #96]
  412ea8:	ldp	x22, x21, [sp, #80]
  412eac:	ldp	x24, x23, [sp, #64]
  412eb0:	ldp	x26, x25, [sp, #48]
  412eb4:	ldp	x28, x27, [sp, #32]
  412eb8:	ldp	x29, x30, [sp, #16]
  412ebc:	add	sp, sp, #0x70
  412ec0:	ret
  412ec4:	stp	x29, x30, [sp, #-48]!
  412ec8:	mov	x0, x3
  412ecc:	str	x21, [sp, #16]
  412ed0:	stp	x20, x19, [sp, #32]
  412ed4:	mov	x29, sp
  412ed8:	mov	x19, x3
  412edc:	mov	x20, x2
  412ee0:	mov	x21, x1
  412ee4:	bl	413a50 <wcrtomb@plt+0xec30>
  412ee8:	mov	x3, x0
  412eec:	mov	x0, x20
  412ef0:	mov	x1, x21
  412ef4:	mov	x2, x19
  412ef8:	bl	413420 <wcrtomb@plt+0xe600>
  412efc:	ldp	x20, x19, [sp, #32]
  412f00:	ldr	x21, [sp, #16]
  412f04:	ldp	x29, x30, [sp], #48
  412f08:	ret
  412f0c:	stp	x29, x30, [sp, #-48]!
  412f10:	str	x21, [sp, #16]
  412f14:	mov	x21, x0
  412f18:	mov	x0, x3
  412f1c:	stp	x20, x19, [sp, #32]
  412f20:	mov	x29, sp
  412f24:	mov	x19, x3
  412f28:	mov	x20, x2
  412f2c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  412f30:	mov	x1, x20
  412f34:	mov	x2, x19
  412f38:	str	x0, [x21, #384]
  412f3c:	bl	404110 <memcpy@plt>
  412f40:	ldp	x20, x19, [sp, #32]
  412f44:	ldr	x21, [sp, #16]
  412f48:	ldp	x29, x30, [sp], #48
  412f4c:	ret
  412f50:	stp	x29, x30, [sp, #-16]!
  412f54:	mov	x0, x3
  412f58:	mov	x29, sp
  412f5c:	bl	4118e4 <wcrtomb@plt+0xcac4>
  412f60:	ldp	x29, x30, [sp], #16
  412f64:	ret
  412f68:	stp	x29, x30, [sp, #-16]!
  412f6c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  412f70:	mov	x1, x2
  412f74:	add	x0, x0, #0xf80
  412f78:	mov	x29, sp
  412f7c:	bl	4138ec <wcrtomb@plt+0xeacc>
  412f80:	ldp	x29, x30, [sp], #16
  412f84:	ret
  412f88:	stp	x29, x30, [sp, #-16]!
  412f8c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  412f90:	mov	x1, x2
  412f94:	add	x0, x0, #0xf88
  412f98:	mov	x29, sp
  412f9c:	bl	4138ec <wcrtomb@plt+0xeacc>
  412fa0:	ldp	x29, x30, [sp], #16
  412fa4:	ret
  412fa8:	stp	x29, x30, [sp, #-16]!
  412fac:	ldr	x0, [x3]
  412fb0:	mov	x29, sp
  412fb4:	bl	41397c <wcrtomb@plt+0xeb5c>
  412fb8:	ldp	x29, x30, [sp], #16
  412fbc:	ret
  412fc0:	sub	sp, sp, #0x20
  412fc4:	mov	x8, x2
  412fc8:	mov	x3, x1
  412fcc:	add	x0, sp, #0x8
  412fd0:	mov	x2, #0xffffffffffffffff    	// #-1
  412fd4:	mov	x1, x8
  412fd8:	stp	x29, x30, [sp, #16]
  412fdc:	add	x29, sp, #0x10
  412fe0:	bl	413998 <wcrtomb@plt+0xeb78>
  412fe4:	tbz	w0, #0, 412ff4 <wcrtomb@plt+0xe1d4>
  412fe8:	ldr	x8, [sp, #8]
  412fec:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  412ff0:	str	x8, [x9, #4000]
  412ff4:	ldp	x29, x30, [sp, #16]
  412ff8:	add	sp, sp, #0x20
  412ffc:	ret
  413000:	stp	x29, x30, [sp, #-16]!
  413004:	ldr	x0, [x3]
  413008:	mov	x29, sp
  41300c:	bl	41397c <wcrtomb@plt+0xeb5c>
  413010:	ldp	x29, x30, [sp], #16
  413014:	ret
  413018:	sub	sp, sp, #0x20
  41301c:	mov	x8, x2
  413020:	mov	x3, x1
  413024:	add	x0, sp, #0x8
  413028:	mov	x2, #0xffffffffffffffff    	// #-1
  41302c:	mov	x1, x8
  413030:	stp	x29, x30, [sp, #16]
  413034:	add	x29, sp, #0x10
  413038:	bl	413998 <wcrtomb@plt+0xeb78>
  41303c:	tbz	w0, #0, 41304c <wcrtomb@plt+0xe22c>
  413040:	ldr	x8, [sp, #8]
  413044:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413048:	str	x8, [x9, #4016]
  41304c:	ldp	x29, x30, [sp, #16]
  413050:	add	sp, sp, #0x20
  413054:	ret
  413058:	stp	x29, x30, [sp, #-16]!
  41305c:	ldr	x0, [x0, #48]
  413060:	mov	x29, sp
  413064:	bl	4118e4 <wcrtomb@plt+0xcac4>
  413068:	ldp	x29, x30, [sp], #16
  41306c:	ret
  413070:	stp	x29, x30, [sp, #-16]!
  413074:	mov	x1, x2
  413078:	add	x0, x0, #0x30
  41307c:	mov	x29, sp
  413080:	bl	4138ec <wcrtomb@plt+0xeacc>
  413084:	ldp	x29, x30, [sp], #16
  413088:	ret
  41308c:	stp	x29, x30, [sp, #-16]!
  413090:	mov	x8, x2
  413094:	ldp	x2, x3, [x0, #56]
  413098:	mov	x0, x8
  41309c:	mov	x29, sp
  4130a0:	bl	413420 <wcrtomb@plt+0xe600>
  4130a4:	ldp	x29, x30, [sp], #16
  4130a8:	ret
  4130ac:	stp	x29, x30, [sp, #-32]!
  4130b0:	stp	x20, x19, [sp, #16]
  4130b4:	mov	x20, x0
  4130b8:	add	x1, x3, #0x1
  4130bc:	mov	x0, x2
  4130c0:	mov	x29, sp
  4130c4:	mov	x19, x3
  4130c8:	bl	43d358 <argp_usage@@Base+0xb75c>
  4130cc:	stp	x0, x19, [x20, #56]
  4130d0:	ldp	x20, x19, [sp, #16]
  4130d4:	ldp	x29, x30, [sp], #32
  4130d8:	ret
  4130dc:	stp	x29, x30, [sp, #-16]!
  4130e0:	mov	x8, x2
  4130e4:	ldp	x2, x3, [x0, #72]
  4130e8:	mov	x0, x8
  4130ec:	mov	x29, sp
  4130f0:	bl	413420 <wcrtomb@plt+0xe600>
  4130f4:	ldp	x29, x30, [sp], #16
  4130f8:	ret
  4130fc:	stp	x29, x30, [sp, #-32]!
  413100:	stp	x20, x19, [sp, #16]
  413104:	mov	x20, x0
  413108:	add	x1, x3, #0x1
  41310c:	mov	x0, x2
  413110:	mov	x29, sp
  413114:	mov	x19, x3
  413118:	bl	43d358 <argp_usage@@Base+0xb75c>
  41311c:	stp	x0, x19, [x20, #72]
  413120:	ldp	x20, x19, [sp, #16]
  413124:	ldp	x29, x30, [sp], #32
  413128:	ret
  41312c:	stp	x29, x30, [sp, #-16]!
  413130:	ldr	x9, [x0, #336]
  413134:	ldr	x10, [x3]
  413138:	mov	w11, #0x18                  	// #24
  41313c:	mov	x8, x2
  413140:	mov	x0, x8
  413144:	madd	x9, x10, x11, x9
  413148:	ldp	x2, x3, [x9, #8]
  41314c:	mov	x29, sp
  413150:	bl	413420 <wcrtomb@plt+0xe600>
  413154:	ldp	x29, x30, [sp], #16
  413158:	ret
  41315c:	stp	x29, x30, [sp, #-64]!
  413160:	stp	x22, x21, [sp, #32]
  413164:	mov	x22, x0
  413168:	mov	x0, x1
  41316c:	str	x23, [sp, #16]
  413170:	stp	x20, x19, [sp, #48]
  413174:	mov	x29, sp
  413178:	mov	x19, x3
  41317c:	mov	x20, x2
  413180:	mov	x21, x1
  413184:	bl	404190 <strlen@plt>
  413188:	add	x9, x0, #0x10
  41318c:	mov	x8, sp
  413190:	and	x9, x9, #0xfffffffffffffff0
  413194:	sub	x23, x8, x9
  413198:	add	x2, x0, #0x1
  41319c:	mov	sp, x23
  4131a0:	mov	x0, x23
  4131a4:	mov	x1, x21
  4131a8:	bl	404110 <memcpy@plt>
  4131ac:	add	x9, x19, #0x10
  4131b0:	mov	x8, sp
  4131b4:	and	x9, x9, #0xfffffffffffffff0
  4131b8:	sub	x21, x8, x9
  4131bc:	add	x2, x19, #0x1
  4131c0:	mov	sp, x21
  4131c4:	mov	x0, x21
  4131c8:	mov	x1, x20
  4131cc:	bl	404110 <memcpy@plt>
  4131d0:	mov	x0, x23
  4131d4:	bl	4139d4 <wcrtomb@plt+0xebb4>
  4131d8:	add	x1, x23, #0xd
  4131dc:	mov	x0, x22
  4131e0:	mov	x2, x21
  4131e4:	mov	x3, x19
  4131e8:	bl	411a94 <wcrtomb@plt+0xcc74>
  4131ec:	mov	sp, x29
  4131f0:	ldp	x20, x19, [sp, #48]
  4131f4:	ldp	x22, x21, [sp, #32]
  4131f8:	ldr	x23, [sp, #16]
  4131fc:	ldp	x29, x30, [sp], #64
  413200:	ret
  413204:	stp	x29, x30, [sp, #-32]!
  413208:	stp	x20, x19, [sp, #16]
  41320c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  413210:	adrp	x20, 451000 <_obstack_memory_used@@Base+0x12da0>
  413214:	mov	x19, x0
  413218:	add	x1, x1, #0xd9b
  41321c:	add	x20, x20, #0x460
  413220:	mov	x29, sp
  413224:	b	413230 <wcrtomb@plt+0xe410>
  413228:	ldr	x1, [x20], #32
  41322c:	cbz	x1, 413258 <wcrtomb@plt+0xe438>
  413230:	ldurb	w8, [x20, #-4]
  413234:	cbnz	w8, 413228 <wcrtomb@plt+0xe408>
  413238:	ldurb	w8, [x20, #-8]
  41323c:	tbz	w8, #0, 413228 <wcrtomb@plt+0xe408>
  413240:	mov	x0, x19
  413244:	mov	w2, wzr
  413248:	bl	404ac0 <fnmatch@plt>
  41324c:	cbnz	w0, 413228 <wcrtomb@plt+0xe408>
  413250:	mov	w0, #0x1                   	// #1
  413254:	b	41325c <wcrtomb@plt+0xe43c>
  413258:	mov	w0, wzr
  41325c:	ldp	x20, x19, [sp, #16]
  413260:	ldp	x29, x30, [sp], #32
  413264:	ret
  413268:	stp	x29, x30, [sp, #-48]!
  41326c:	stp	x20, x19, [sp, #32]
  413270:	mov	x19, x0
  413274:	mov	w0, #0x18                  	// #24
  413278:	stp	x22, x21, [sp, #16]
  41327c:	mov	x29, sp
  413280:	mov	x21, x2
  413284:	mov	x22, x1
  413288:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41328c:	mov	x20, x0
  413290:	mov	x0, x22
  413294:	bl	43d39c <argp_usage@@Base+0xb7a0>
  413298:	str	x0, [x20, #8]
  41329c:	cbz	x21, 4132ac <wcrtomb@plt+0xe48c>
  4132a0:	mov	x0, x21
  4132a4:	bl	43d39c <argp_usage@@Base+0xb7a0>
  4132a8:	b	4132b0 <wcrtomb@plt+0xe490>
  4132ac:	mov	x0, xzr
  4132b0:	str	x0, [x20, #16]
  4132b4:	ldr	x8, [x19]
  4132b8:	str	x8, [x20]
  4132bc:	str	x20, [x19]
  4132c0:	ldp	x20, x19, [sp, #32]
  4132c4:	ldp	x22, x21, [sp, #16]
  4132c8:	ldp	x29, x30, [sp], #48
  4132cc:	ret
  4132d0:	sub	sp, sp, #0x40
  4132d4:	stp	x22, x21, [sp, #32]
  4132d8:	stp	x20, x19, [sp, #48]
  4132dc:	mov	x19, x2
  4132e0:	mov	x21, x1
  4132e4:	mov	x20, x0
  4132e8:	add	x1, sp, #0x8
  4132ec:	mov	x0, x2
  4132f0:	mov	w2, wzr
  4132f4:	stp	x29, x30, [sp, #16]
  4132f8:	add	x29, sp, #0x10
  4132fc:	bl	419e1c <wcrtomb@plt+0x14ffc>
  413300:	mov	x22, x0
  413304:	bl	41963c <wcrtomb@plt+0x1481c>
  413308:	tbz	w0, #0, 413318 <wcrtomb@plt+0xe4f8>
  41330c:	ldr	x8, [sp, #8]
  413310:	ldrb	w8, [x8]
  413314:	cbz	w8, 41335c <wcrtomb@plt+0xe53c>
  413318:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41331c:	ldr	x8, [x8, #1008]
  413320:	cbz	x8, 413328 <wcrtomb@plt+0xe508>
  413324:	blr	x8
  413328:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  41332c:	add	x1, x1, #0x9f0
  413330:	mov	w2, #0x5                   	// #5
  413334:	mov	x0, xzr
  413338:	bl	404bf0 <dcgettext@plt>
  41333c:	mov	x2, x0
  413340:	mov	w0, wzr
  413344:	mov	w1, wzr
  413348:	bl	4041f0 <error@plt>
  41334c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413350:	mov	w9, #0x2                   	// #2
  413354:	str	w9, [x8, #3456]
  413358:	b	41336c <wcrtomb@plt+0xe54c>
  41335c:	mov	x0, x20
  413360:	mov	x1, x19
  413364:	str	x22, [x21]
  413368:	bl	419680 <wcrtomb@plt+0x14860>
  41336c:	ldp	x20, x19, [sp, #48]
  413370:	ldp	x22, x21, [sp, #32]
  413374:	ldp	x29, x30, [sp, #16]
  413378:	add	sp, sp, #0x40
  41337c:	ret
  413380:	stp	x29, x30, [sp, #-32]!
  413384:	stp	x20, x19, [sp, #16]
  413388:	mov	x19, x0
  41338c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  413390:	adrp	x20, 451000 <_obstack_memory_used@@Base+0x12da0>
  413394:	add	x0, x0, #0xd9b
  413398:	add	x20, x20, #0x460
  41339c:	mov	x29, sp
  4133a0:	b	4133ac <wcrtomb@plt+0xe58c>
  4133a4:	ldr	x0, [x20], #32
  4133a8:	cbz	x0, 4133cc <wcrtomb@plt+0xe5ac>
  4133ac:	ldurb	w8, [x20, #-4]
  4133b0:	cbnz	w8, 4133a4 <wcrtomb@plt+0xe584>
  4133b4:	ldurb	w8, [x20, #-8]
  4133b8:	tbz	w8, #0, 4133a4 <wcrtomb@plt+0xe584>
  4133bc:	mov	x1, x19
  4133c0:	bl	404920 <strcmp@plt>
  4133c4:	cbnz	w0, 4133a4 <wcrtomb@plt+0xe584>
  4133c8:	mov	w0, #0x1                   	// #1
  4133cc:	ldp	x20, x19, [sp, #16]
  4133d0:	ldp	x29, x30, [sp], #32
  4133d4:	ret
  4133d8:	stp	x29, x30, [sp, #-48]!
  4133dc:	str	x21, [sp, #16]
  4133e0:	mov	x21, x0
  4133e4:	mov	x0, x2
  4133e8:	stp	x20, x19, [sp, #32]
  4133ec:	mov	x29, sp
  4133f0:	mov	x19, x2
  4133f4:	mov	x20, x1
  4133f8:	bl	404190 <strlen@plt>
  4133fc:	mov	x3, x0
  413400:	mov	x0, x21
  413404:	mov	x1, x20
  413408:	mov	x2, x19
  41340c:	bl	413420 <wcrtomb@plt+0xe600>
  413410:	ldp	x20, x19, [sp, #32]
  413414:	ldr	x21, [sp, #16]
  413418:	ldp	x29, x30, [sp], #48
  41341c:	ret
  413420:	sub	sp, sp, #0x70
  413424:	stp	x20, x19, [sp, #96]
  413428:	mov	x19, x0
  41342c:	mov	x0, x1
  413430:	stp	x29, x30, [sp, #32]
  413434:	stp	x26, x25, [sp, #48]
  413438:	stp	x24, x23, [sp, #64]
  41343c:	stp	x22, x21, [sp, #80]
  413440:	add	x29, sp, #0x20
  413444:	mov	x20, x3
  413448:	mov	x21, x2
  41344c:	bl	4134f8 <wcrtomb@plt+0xe6d8>
  413450:	mov	x22, x0
  413454:	bl	404190 <strlen@plt>
  413458:	add	x8, x20, x0
  41345c:	add	x9, sp, #0x8
  413460:	mov	x23, x0
  413464:	mov	x2, xzr
  413468:	add	x24, x8, #0x3
  41346c:	add	x25, x9, #0x14
  413470:	add	x0, x24, x2
  413474:	add	x1, sp, #0x8
  413478:	mov	x26, x2
  41347c:	bl	43650c <argp_usage@@Base+0x4910>
  413480:	sub	x2, x25, x0
  413484:	cmp	x2, x26
  413488:	b.ne	413470 <wcrtomb@plt+0xe650>  // b.any
  41348c:	mov	x1, x0
  413490:	mov	x0, x19
  413494:	bl	4123c4 <wcrtomb@plt+0xd5a4>
  413498:	mov	w1, #0x20                  	// #32
  41349c:	mov	x0, x19
  4134a0:	bl	4125a0 <wcrtomb@plt+0xd780>
  4134a4:	mov	x0, x19
  4134a8:	mov	x1, x22
  4134ac:	mov	x2, x23
  4134b0:	bl	4123c4 <wcrtomb@plt+0xd5a4>
  4134b4:	mov	w1, #0x3d                  	// #61
  4134b8:	mov	x0, x19
  4134bc:	bl	4125a0 <wcrtomb@plt+0xd780>
  4134c0:	mov	x0, x19
  4134c4:	mov	x1, x21
  4134c8:	mov	x2, x20
  4134cc:	bl	4123c4 <wcrtomb@plt+0xd5a4>
  4134d0:	mov	w1, #0xa                   	// #10
  4134d4:	mov	x0, x19
  4134d8:	bl	4125a0 <wcrtomb@plt+0xd780>
  4134dc:	ldp	x20, x19, [sp, #96]
  4134e0:	ldp	x22, x21, [sp, #80]
  4134e4:	ldp	x24, x23, [sp, #64]
  4134e8:	ldp	x26, x25, [sp, #48]
  4134ec:	ldp	x29, x30, [sp, #32]
  4134f0:	add	sp, sp, #0x70
  4134f4:	ret
  4134f8:	stp	x29, x30, [sp, #-96]!
  4134fc:	stp	x20, x19, [sp, #80]
  413500:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413504:	ldr	x8, [x20, #2200]
  413508:	stp	x22, x21, [sp, #64]
  41350c:	mov	x19, x0
  413510:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413514:	str	x27, [sp, #16]
  413518:	stp	x26, x25, [sp, #32]
  41351c:	stp	x24, x23, [sp, #48]
  413520:	mov	x29, sp
  413524:	cbz	x8, 4135bc <wcrtomb@plt+0xe79c>
  413528:	strb	wzr, [x8]
  41352c:	ldrb	w26, [x19]
  413530:	cbz	w26, 4135d8 <wcrtomb@plt+0xe7b8>
  413534:	add	x22, x19, #0x1
  413538:	mov	w23, #0x3325                	// #13093
  41353c:	mov	w25, #0x3225                	// #12837
  413540:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413544:	mov	x24, xzr
  413548:	movk	w23, #0x44, lsl #16
  41354c:	movk	w25, #0x35, lsl #16
  413550:	add	x19, x19, #0x8a0
  413554:	b	413570 <wcrtomb@plt+0xe750>
  413558:	ldr	x8, [x20, #2200]
  41355c:	mov	x27, x24
  413560:	strb	w26, [x8, x24]
  413564:	ldrb	w26, [x22], #1
  413568:	add	x24, x27, #0x1
  41356c:	cbz	w26, 4135dc <wcrtomb@plt+0xe7bc>
  413570:	ldr	x8, [x21, #2208]
  413574:	add	x27, x24, #0x2
  413578:	cmp	x27, x8
  41357c:	b.cc	413590 <wcrtomb@plt+0xe770>  // b.lo, b.ul, b.last
  413580:	ldr	x0, [x20, #2200]
  413584:	mov	x1, x19
  413588:	bl	43d2e0 <argp_usage@@Base+0xb6e4>
  41358c:	str	x0, [x20, #2200]
  413590:	and	w8, w26, #0xff
  413594:	cmp	w8, #0x3d
  413598:	b.eq	4135b0 <wcrtomb@plt+0xe790>  // b.none
  41359c:	cmp	w8, #0x25
  4135a0:	b.ne	413558 <wcrtomb@plt+0xe738>  // b.any
  4135a4:	ldr	x8, [x20, #2200]
  4135a8:	str	w25, [x8, x24]
  4135ac:	b	413564 <wcrtomb@plt+0xe744>
  4135b0:	ldr	x8, [x20, #2200]
  4135b4:	str	w23, [x8, x24]
  4135b8:	b	413564 <wcrtomb@plt+0xe744>
  4135bc:	mov	w8, #0x100                 	// #256
  4135c0:	mov	w0, #0x100                 	// #256
  4135c4:	str	x8, [x21, #2208]
  4135c8:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4135cc:	str	x0, [x20, #2200]
  4135d0:	ldrb	w26, [x19]
  4135d4:	cbnz	w26, 413534 <wcrtomb@plt+0xe714>
  4135d8:	mov	x24, xzr
  4135dc:	ldr	x0, [x20, #2200]
  4135e0:	ldr	x27, [sp, #16]
  4135e4:	strb	wzr, [x0, x24]
  4135e8:	ldp	x20, x19, [sp, #80]
  4135ec:	ldp	x22, x21, [sp, #64]
  4135f0:	ldp	x24, x23, [sp, #48]
  4135f4:	ldp	x26, x25, [sp, #32]
  4135f8:	ldp	x29, x30, [sp], #96
  4135fc:	ret
  413600:	sub	sp, sp, #0x40
  413604:	stp	x20, x19, [sp, #48]
  413608:	mov	x20, x2
  41360c:	mov	x2, sp
  413610:	stp	x29, x30, [sp, #32]
  413614:	add	x29, sp, #0x20
  413618:	mov	x19, x3
  41361c:	bl	419d94 <wcrtomb@plt+0x14f74>
  413620:	mov	x2, x0
  413624:	mov	x0, x19
  413628:	mov	x1, x20
  41362c:	bl	4133d8 <wcrtomb@plt+0xe5b8>
  413630:	ldp	x20, x19, [sp, #48]
  413634:	ldp	x29, x30, [sp, #32]
  413638:	add	sp, sp, #0x40
  41363c:	ret
  413640:	stp	x29, x30, [sp, #-64]!
  413644:	stp	x20, x19, [sp, #48]
  413648:	mov	x29, sp
  41364c:	mov	x19, x1
  413650:	stp	x22, x21, [sp, #32]
  413654:	mov	x20, x2
  413658:	mov	x21, x0
  41365c:	add	x1, x29, #0x18
  413660:	mov	w2, #0x1                   	// #1
  413664:	mov	x0, x19
  413668:	str	x23, [sp, #16]
  41366c:	bl	419e1c <wcrtomb@plt+0x14ffc>
  413670:	mov	x22, x0
  413674:	mov	x23, x1
  413678:	bl	41963c <wcrtomb@plt+0x1481c>
  41367c:	tbz	w0, #0, 41368c <wcrtomb@plt+0xe86c>
  413680:	mov	w0, #0x1                   	// #1
  413684:	stp	x22, x23, [x21]
  413688:	b	413708 <wcrtomb@plt+0xe8e8>
  41368c:	ldr	x8, [x29, #24]
  413690:	cmp	x8, x19
  413694:	b.ls	4136a0 <wcrtomb@plt+0xe880>  // b.plast
  413698:	ldrb	w8, [x8]
  41369c:	cbz	w8, 4136f0 <wcrtomb@plt+0xe8d0>
  4136a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4136a4:	ldr	x8, [x8, #1008]
  4136a8:	cbz	x8, 4136b0 <wcrtomb@plt+0xe890>
  4136ac:	blr	x8
  4136b0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4136b4:	add	x1, x1, #0xb2d
  4136b8:	mov	w2, #0x5                   	// #5
  4136bc:	mov	x0, xzr
  4136c0:	bl	404bf0 <dcgettext@plt>
  4136c4:	mov	x2, x0
  4136c8:	mov	w0, wzr
  4136cc:	mov	w1, wzr
  4136d0:	mov	x3, x20
  4136d4:	mov	x4, x19
  4136d8:	bl	4041f0 <error@plt>
  4136dc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4136e0:	mov	w9, #0x2                   	// #2
  4136e4:	mov	w0, wzr
  4136e8:	str	w9, [x8, #3456]
  4136ec:	b	413708 <wcrtomb@plt+0xe8e8>
  4136f0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  4136f4:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  4136f8:	mov	x0, x20
  4136fc:	mov	x1, x19
  413700:	bl	41371c <wcrtomb@plt+0xe8fc>
  413704:	mov	w0, wzr
  413708:	ldp	x20, x19, [sp, #48]
  41370c:	ldp	x22, x21, [sp, #32]
  413710:	ldr	x23, [sp, #16]
  413714:	ldp	x29, x30, [sp], #64
  413718:	ret
  41371c:	sub	sp, sp, #0x60
  413720:	stp	x20, x19, [sp, #80]
  413724:	mov	x19, x1
  413728:	mov	x20, x0
  41372c:	add	x1, sp, #0x18
  413730:	mov	x0, x2
  413734:	stp	x29, x30, [sp, #48]
  413738:	stp	x22, x21, [sp, #64]
  41373c:	add	x29, sp, #0x30
  413740:	mov	x22, x3
  413744:	bl	4363ec <argp_usage@@Base+0x47f0>
  413748:	mov	x21, x0
  41374c:	mov	x1, sp
  413750:	mov	x0, x22
  413754:	bl	43650c <argp_usage@@Base+0x4910>
  413758:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41375c:	ldr	x8, [x8, #1008]
  413760:	mov	x22, x0
  413764:	cbz	x8, 41376c <wcrtomb@plt+0xe94c>
  413768:	blr	x8
  41376c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  413770:	add	x1, x1, #0xb56
  413774:	mov	w2, #0x5                   	// #5
  413778:	mov	x0, xzr
  41377c:	bl	404bf0 <dcgettext@plt>
  413780:	mov	x2, x0
  413784:	mov	w0, wzr
  413788:	mov	w1, wzr
  41378c:	mov	x3, x20
  413790:	mov	x4, x19
  413794:	mov	x5, x21
  413798:	mov	x6, x22
  41379c:	bl	4041f0 <error@plt>
  4137a0:	ldp	x20, x19, [sp, #80]
  4137a4:	ldp	x22, x21, [sp, #64]
  4137a8:	ldp	x29, x30, [sp, #48]
  4137ac:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4137b0:	mov	w9, #0x2                   	// #2
  4137b4:	str	w9, [x8, #3456]
  4137b8:	add	sp, sp, #0x60
  4137bc:	ret
  4137c0:	sub	sp, sp, #0x40
  4137c4:	stp	x20, x19, [sp, #48]
  4137c8:	mov	x19, x3
  4137cc:	mov	x20, x1
  4137d0:	add	x3, sp, #0x8
  4137d4:	mov	x1, xzr
  4137d8:	stp	x29, x30, [sp, #32]
  4137dc:	add	x29, sp, #0x20
  4137e0:	bl	419ba0 <wcrtomb@plt+0x14d80>
  4137e4:	mov	x2, x0
  4137e8:	mov	x0, x19
  4137ec:	mov	x1, x20
  4137f0:	bl	4133d8 <wcrtomb@plt+0xe5b8>
  4137f4:	ldp	x20, x19, [sp, #48]
  4137f8:	ldp	x29, x30, [sp, #32]
  4137fc:	add	sp, sp, #0x40
  413800:	ret
  413804:	stp	x29, x30, [sp, #-64]!
  413808:	stp	x22, x21, [sp, #32]
  41380c:	stp	x20, x19, [sp, #48]
  413810:	mov	x29, sp
  413814:	mov	x21, x2
  413818:	mov	x19, x1
  41381c:	mov	x20, x3
  413820:	mov	x22, x0
  413824:	add	x1, x29, #0x18
  413828:	mov	x0, x19
  41382c:	mov	x2, xzr
  413830:	mov	x3, x21
  413834:	str	x23, [sp, #16]
  413838:	bl	419bcc <wcrtomb@plt+0x14dac>
  41383c:	mov	x23, x0
  413840:	bl	404d00 <__errno_location@plt>
  413844:	ldr	w8, [x0]
  413848:	cmp	w8, #0x16
  41384c:	b.eq	41385c <wcrtomb@plt+0xea3c>  // b.none
  413850:	ldr	x9, [x29, #24]
  413854:	ldrb	w9, [x9]
  413858:	cbz	w9, 4138bc <wcrtomb@plt+0xea9c>
  41385c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  413860:	ldr	x8, [x8, #1008]
  413864:	cbz	x8, 41386c <wcrtomb@plt+0xea4c>
  413868:	blr	x8
  41386c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  413870:	add	x1, x1, #0xb2d
  413874:	mov	w2, #0x5                   	// #5
  413878:	mov	x0, xzr
  41387c:	bl	404bf0 <dcgettext@plt>
  413880:	mov	x2, x0
  413884:	mov	w0, wzr
  413888:	mov	w1, wzr
  41388c:	mov	x3, x20
  413890:	mov	x4, x19
  413894:	bl	4041f0 <error@plt>
  413898:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41389c:	mov	w9, #0x2                   	// #2
  4138a0:	mov	w0, wzr
  4138a4:	str	w9, [x8, #3456]
  4138a8:	ldp	x20, x19, [sp, #48]
  4138ac:	ldp	x22, x21, [sp, #32]
  4138b0:	ldr	x23, [sp, #16]
  4138b4:	ldp	x29, x30, [sp], #64
  4138b8:	ret
  4138bc:	cmp	w8, #0x22
  4138c0:	b.ne	4138e0 <wcrtomb@plt+0xeac0>  // b.any
  4138c4:	mov	x0, x20
  4138c8:	mov	x1, x19
  4138cc:	mov	x2, xzr
  4138d0:	mov	x3, x21
  4138d4:	bl	41371c <wcrtomb@plt+0xe8fc>
  4138d8:	mov	w0, wzr
  4138dc:	b	4138a8 <wcrtomb@plt+0xea88>
  4138e0:	mov	w0, #0x1                   	// #1
  4138e4:	str	x23, [x22]
  4138e8:	b	4138a8 <wcrtomb@plt+0xea88>
  4138ec:	stp	x29, x30, [sp, #-32]!
  4138f0:	stp	x20, x19, [sp, #16]
  4138f4:	mov	x19, x0
  4138f8:	ldr	x0, [x0]
  4138fc:	mov	x20, x1
  413900:	mov	x29, sp
  413904:	cbz	x0, 413910 <wcrtomb@plt+0xeaf0>
  413908:	bl	4049d0 <free@plt>
  41390c:	str	xzr, [x19]
  413910:	mov	w0, wzr
  413914:	mov	x1, x20
  413918:	mov	x2, x19
  41391c:	bl	426124 <wcrtomb@plt+0x21304>
  413920:	tbnz	w0, #0, 413930 <wcrtomb@plt+0xeb10>
  413924:	mov	x0, x19
  413928:	mov	x1, x20
  41392c:	bl	419680 <wcrtomb@plt+0x14860>
  413930:	ldp	x20, x19, [sp, #16]
  413934:	ldp	x29, x30, [sp], #32
  413938:	ret
  41393c:	stp	x29, x30, [sp, #-32]!
  413940:	stp	x20, x19, [sp, #16]
  413944:	mov	x29, sp
  413948:	mov	x19, x1
  41394c:	mov	x20, x0
  413950:	bl	4138ec <wcrtomb@plt+0xeacc>
  413954:	add	x0, x20, #0x8
  413958:	mov	x1, x19
  41395c:	bl	4138ec <wcrtomb@plt+0xeacc>
  413960:	ldr	x0, [x20, #8]
  413964:	bl	432720 <argp_usage@@Base+0xb24>
  413968:	and	w8, w0, #0x1
  41396c:	strb	w8, [x20, #16]
  413970:	ldp	x20, x19, [sp, #16]
  413974:	ldp	x29, x30, [sp], #32
  413978:	ret
  41397c:	stp	x29, x30, [sp, #-16]!
  413980:	mov	x3, x2
  413984:	mov	x2, #0xffffffffffffffff    	// #-1
  413988:	mov	x29, sp
  41398c:	bl	4137c0 <wcrtomb@plt+0xe9a0>
  413990:	ldp	x29, x30, [sp], #16
  413994:	ret
  413998:	stp	x29, x30, [sp, #-32]!
  41399c:	mov	x29, sp
  4139a0:	str	x19, [sp, #16]
  4139a4:	mov	x19, x0
  4139a8:	add	x0, x29, #0x18
  4139ac:	bl	413804 <wcrtomb@plt+0xe9e4>
  4139b0:	tbz	w0, #0, 4139c4 <wcrtomb@plt+0xeba4>
  4139b4:	ldr	x8, [x29, #24]
  4139b8:	mov	w0, #0x1                   	// #1
  4139bc:	str	x8, [x19]
  4139c0:	b	4139c8 <wcrtomb@plt+0xeba8>
  4139c4:	mov	w0, wzr
  4139c8:	ldr	x19, [sp, #16]
  4139cc:	ldp	x29, x30, [sp], #32
  4139d0:	ret
  4139d4:	mov	x8, x0
  4139d8:	b	4139f0 <wcrtomb@plt+0xebd0>
  4139dc:	mov	w9, #0x25                  	// #37
  4139e0:	strb	w9, [x8]
  4139e4:	mov	w9, #0x3                   	// #3
  4139e8:	add	x0, x0, x9
  4139ec:	add	x8, x8, #0x1
  4139f0:	ldrb	w9, [x0]
  4139f4:	cmp	w9, #0x25
  4139f8:	b.ne	413a38 <wcrtomb@plt+0xec18>  // b.any
  4139fc:	ldrb	w10, [x0, #1]
  413a00:	cmp	w10, #0x32
  413a04:	b.eq	413a2c <wcrtomb@plt+0xec0c>  // b.none
  413a08:	cmp	w10, #0x33
  413a0c:	b.ne	413a38 <wcrtomb@plt+0xec18>  // b.any
  413a10:	ldrb	w11, [x0, #2]
  413a14:	cmp	w11, #0x44
  413a18:	b.ne	413a24 <wcrtomb@plt+0xec04>  // b.any
  413a1c:	mov	w9, #0x3d                  	// #61
  413a20:	b	4139e0 <wcrtomb@plt+0xebc0>
  413a24:	cmp	w10, #0x32
  413a28:	b.ne	413a38 <wcrtomb@plt+0xec18>  // b.any
  413a2c:	ldrb	w10, [x0, #2]
  413a30:	cmp	w10, #0x35
  413a34:	b.eq	4139dc <wcrtomb@plt+0xebbc>  // b.none
  413a38:	strb	w9, [x8]
  413a3c:	ldrb	w9, [x0]
  413a40:	cbz	w9, 413a4c <wcrtomb@plt+0xec2c>
  413a44:	mov	w9, #0x1                   	// #1
  413a48:	b	4139e8 <wcrtomb@plt+0xebc8>
  413a4c:	ret
  413a50:	stp	x29, x30, [sp, #-32]!
  413a54:	stp	x20, x19, [sp, #16]
  413a58:	ldrb	w8, [x0]
  413a5c:	mov	x29, sp
  413a60:	cbz	w8, 413a90 <wcrtomb@plt+0xec70>
  413a64:	mov	x19, x0
  413a68:	mov	x20, xzr
  413a6c:	mov	x0, x19
  413a70:	bl	404190 <strlen@plt>
  413a74:	add	x8, x0, #0x1
  413a78:	add	x19, x19, x8
  413a7c:	ldrb	w9, [x19]
  413a80:	add	x20, x8, x20
  413a84:	cbnz	w9, 413a6c <wcrtomb@plt+0xec4c>
  413a88:	add	x0, x20, #0x1
  413a8c:	b	413a94 <wcrtomb@plt+0xec74>
  413a90:	mov	w0, #0x1                   	// #1
  413a94:	ldp	x20, x19, [sp, #16]
  413a98:	ldp	x29, x30, [sp], #32
  413a9c:	ret
  413aa0:	stp	x29, x30, [sp, #-32]!
  413aa4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413aa8:	ldr	x0, [x8, #2216]
  413aac:	stp	x20, x19, [sp, #16]
  413ab0:	mov	x29, sp
  413ab4:	cbz	x0, 413abc <wcrtomb@plt+0xec9c>
  413ab8:	bl	43533c <argp_usage@@Base+0x3740>
  413abc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413ac0:	ldr	x0, [x8, #2224]
  413ac4:	cbz	x0, 413acc <wcrtomb@plt+0xecac>
  413ac8:	bl	43533c <argp_usage@@Base+0x3740>
  413acc:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413ad0:	ldr	x0, [x19, #2232]
  413ad4:	cbz	x0, 413ae8 <wcrtomb@plt+0xecc8>
  413ad8:	ldr	x20, [x0]
  413adc:	bl	413b00 <wcrtomb@plt+0xece0>
  413ae0:	mov	x0, x20
  413ae4:	cbnz	x20, 413ad8 <wcrtomb@plt+0xecb8>
  413ae8:	str	xzr, [x19, #2232]
  413aec:	ldp	x20, x19, [sp, #16]
  413af0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413af4:	str	xzr, [x8, #2240]
  413af8:	ldp	x29, x30, [sp], #32
  413afc:	ret
  413b00:	stp	x29, x30, [sp, #-32]!
  413b04:	str	x19, [sp, #16]
  413b08:	mov	x19, x0
  413b0c:	ldr	x0, [x0, #80]
  413b10:	mov	x29, sp
  413b14:	bl	4049d0 <free@plt>
  413b18:	ldr	x0, [x19, #88]
  413b1c:	bl	4049d0 <free@plt>
  413b20:	mov	x0, x19
  413b24:	bl	4049d0 <free@plt>
  413b28:	ldr	x19, [sp, #16]
  413b2c:	ldp	x29, x30, [sp], #32
  413b30:	ret
  413b34:	stp	x29, x30, [sp, #-16]!
  413b38:	add	x0, x0, #0x58
  413b3c:	mov	x29, sp
  413b40:	bl	419ae4 <wcrtomb@plt+0x14cc4>
  413b44:	ldp	x29, x30, [sp], #16
  413b48:	ret
  413b4c:	sub	sp, sp, #0xa0
  413b50:	stp	x29, x30, [sp, #128]
  413b54:	stp	x20, x19, [sp, #144]
  413b58:	mov	x20, x0
  413b5c:	ldr	x0, [x0]
  413b60:	add	x29, sp, #0x80
  413b64:	bl	413ba8 <wcrtomb@plt+0xed88>
  413b68:	cbz	x0, 413b98 <wcrtomb@plt+0xed78>
  413b6c:	mov	x19, x0
  413b70:	ldr	w0, [x20, #408]
  413b74:	mov	x1, sp
  413b78:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  413b7c:	cbz	w0, 413b8c <wcrtomb@plt+0xed6c>
  413b80:	ldr	x0, [x19, #88]
  413b84:	bl	41ad6c <wcrtomb@plt+0x15f4c>
  413b88:	b	413b98 <wcrtomb@plt+0xed78>
  413b8c:	mov	x0, sp
  413b90:	bl	43cc84 <argp_usage@@Base+0xb088>
  413b94:	stp	x0, x1, [x19, #8]
  413b98:	ldp	x20, x19, [sp, #144]
  413b9c:	ldp	x29, x30, [sp, #128]
  413ba0:	add	sp, sp, #0xa0
  413ba4:	ret
  413ba8:	stp	x29, x30, [sp, #-32]!
  413bac:	stp	x20, x19, [sp, #16]
  413bb0:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  413bb4:	ldr	x8, [x20, #2216]
  413bb8:	mov	x29, sp
  413bbc:	cbz	x8, 413c04 <wcrtomb@plt+0xede4>
  413bc0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  413bc4:	mov	x19, x0
  413bc8:	ldr	w0, [x8]
  413bcc:	mov	x1, x19
  413bd0:	bl	4199e0 <wcrtomb@plt+0x14bc0>
  413bd4:	mov	x1, x0
  413bd8:	mov	x0, x19
  413bdc:	bl	415f54 <wcrtomb@plt+0x11134>
  413be0:	ldr	x8, [x20, #2216]
  413be4:	mov	x20, x0
  413be8:	mov	x1, x20
  413bec:	mov	x0, x8
  413bf0:	bl	434e74 <argp_usage@@Base+0x3278>
  413bf4:	mov	x19, x0
  413bf8:	mov	x0, x20
  413bfc:	bl	413b00 <wcrtomb@plt+0xece0>
  413c00:	b	413c08 <wcrtomb@plt+0xede8>
  413c04:	mov	x19, xzr
  413c08:	mov	x0, x19
  413c0c:	ldp	x20, x19, [sp, #16]
  413c10:	ldp	x29, x30, [sp], #32
  413c14:	ret
  413c18:	stp	x29, x30, [sp, #-96]!
  413c1c:	stp	x28, x27, [sp, #16]
  413c20:	stp	x26, x25, [sp, #32]
  413c24:	stp	x24, x23, [sp, #48]
  413c28:	stp	x22, x21, [sp, #64]
  413c2c:	stp	x20, x19, [sp, #80]
  413c30:	mov	x29, sp
  413c34:	sub	sp, sp, #0x1d0
  413c38:	ldr	x22, [x0]
  413c3c:	mov	x20, x0
  413c40:	bl	40b328 <wcrtomb@plt+0x6508>
  413c44:	ldr	x24, [x20, #88]
  413c48:	ldr	x21, [x20, #392]
  413c4c:	mov	x19, x0
  413c50:	cbnz	x0, 413c5c <wcrtomb@plt+0xee3c>
  413c54:	mov	x0, x22
  413c58:	bl	42844c <wcrtomb@plt+0x2362c>
  413c5c:	cmp	x21, #0x0
  413c60:	mov	x0, x20
  413c64:	cset	w21, eq  // eq = none
  413c68:	bl	40de88 <wcrtomb@plt+0x9068>
  413c6c:	mov	x0, x22
  413c70:	bl	43d39c <argp_usage@@Base+0xb7a0>
  413c74:	mov	x23, x0
  413c78:	bl	419888 <wcrtomb@plt+0x14a68>
  413c7c:	lsl	w2, w21, #5
  413c80:	sub	x3, x29, #0xc
  413c84:	mov	x0, x23
  413c88:	mov	x1, x20
  413c8c:	bl	413f34 <wcrtomb@plt+0xf114>
  413c90:	mov	x21, x0
  413c94:	mov	x0, x23
  413c98:	bl	4049d0 <free@plt>
  413c9c:	mov	x0, x22
  413ca0:	bl	41a974 <wcrtomb@plt+0x15b54>
  413ca4:	mov	x22, x0
  413ca8:	cbz	x19, 413f00 <wcrtomb@plt+0xf0e0>
  413cac:	ldr	w8, [x21, #56]
  413cb0:	cbz	w8, 413ef0 <wcrtomb@plt+0xf0d0>
  413cb4:	mov	x0, x21
  413cb8:	mov	x1, x19
  413cbc:	str	x24, [sp, #8]
  413cc0:	bl	41447c <wcrtomb@plt+0xf65c>
  413cc4:	ldr	x0, [x21, #40]
  413cc8:	sub	x2, x29, #0x18
  413ccc:	mov	w1, #0x1                   	// #1
  413cd0:	bl	414648 <wcrtomb@plt+0xf828>
  413cd4:	cbz	x0, 413ee4 <wcrtomb@plt+0xf0c4>
  413cd8:	add	x8, sp, #0x10
  413cdc:	mov	x24, x0
  413ce0:	mov	w28, #0x4e                  	// #78
  413ce4:	add	x23, x8, #0x58
  413ce8:	b	413d00 <wcrtomb@plt+0xeee0>
  413cec:	strb	w28, [x24]
  413cf0:	ldur	x0, [x29, #-24]
  413cf4:	bl	414690 <wcrtomb@plt+0xf870>
  413cf8:	mov	x24, x0
  413cfc:	cbz	x0, 413ee4 <wcrtomb@plt+0xf0c4>
  413d00:	add	x26, x24, #0x1
  413d04:	mov	x0, x22
  413d08:	mov	x1, x26
  413d0c:	bl	41af44 <wcrtomb@plt+0x16124>
  413d10:	ldrb	w8, [x24]
  413d14:	cmp	w8, #0x49
  413d18:	b.eq	413cec <wcrtomb@plt+0xeecc>  // b.none
  413d1c:	mov	x1, x20
  413d20:	mov	x25, x0
  413d24:	bl	40e11c <wcrtomb@plt+0x92fc>
  413d28:	tbnz	w0, #0, 413cec <wcrtomb@plt+0xeecc>
  413d2c:	ldr	w27, [x20, #408]
  413d30:	add	x0, sp, #0x10
  413d34:	bl	422428 <wcrtomb@plt+0x1d608>
  413d38:	tbnz	w27, #31, 413d78 <wcrtomb@plt+0xef58>
  413d3c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  413d40:	ldr	w3, [x8, #560]
  413d44:	mov	w0, w27
  413d48:	mov	x1, x26
  413d4c:	mov	x2, x23
  413d50:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  413d54:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  413d58:	add	x2, x2, #0xd6c
  413d5c:	cbz	w0, 413dc0 <wcrtomb@plt+0xefa0>
  413d60:	cbz	x2, 413d90 <wcrtomb@plt+0xef70>
  413d64:	mov	x0, x25
  413d68:	mov	w1, wzr
  413d6c:	bl	41ada4 <wcrtomb@plt+0x15f84>
  413d70:	strb	w28, [x24]
  413d74:	b	413ea0 <wcrtomb@plt+0xf080>
  413d78:	neg	w26, w27
  413d7c:	bl	404d00 <__errno_location@plt>
  413d80:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  413d84:	str	w26, [x0]
  413d88:	add	x2, x2, #0xc54
  413d8c:	cbnz	x2, 413d64 <wcrtomb@plt+0xef44>
  413d90:	ldr	w8, [sp, #120]
  413d94:	and	w8, w8, #0xf000
  413d98:	cmp	w8, #0x4, lsl #12
  413d9c:	b.ne	413e0c <wcrtomb@plt+0xefec>  // b.any
  413da0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  413da4:	ldr	w8, [x8, #676]
  413da8:	cbz	w8, 413e78 <wcrtomb@plt+0xf058>
  413dac:	ldr	w8, [x21, #56]
  413db0:	cmp	w8, #0x2
  413db4:	mov	w8, #0x12                  	// #18
  413db8:	csel	w2, w8, wzr, eq  // eq = none
  413dbc:	b	413e7c <wcrtomb@plt+0xf05c>
  413dc0:	ldr	w8, [sp, #120]
  413dc4:	and	w8, w8, #0xf000
  413dc8:	cmp	w8, #0x4, lsl #12
  413dcc:	b.ne	413e30 <wcrtomb@plt+0xf010>  // b.any
  413dd0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  413dd4:	ldr	w2, [x8, #708]
  413dd8:	mov	x0, x20
  413ddc:	mov	x1, x26
  413de0:	bl	40a3e0 <wcrtomb@plt+0x55c0>
  413de4:	tbnz	w0, #31, 413eac <wcrtomb@plt+0xf08c>
  413de8:	mov	x1, x23
  413dec:	str	w0, [sp, #424]
  413df0:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  413df4:	adrp	x8, 41a000 <wcrtomb@plt+0x151e0>
  413df8:	cmp	w0, #0x0
  413dfc:	add	x8, x8, #0xd6c
  413e00:	csel	x2, xzr, x8, eq  // eq = none
  413e04:	cbnz	x2, 413d64 <wcrtomb@plt+0xef44>
  413e08:	b	413d90 <wcrtomb@plt+0xef70>
  413e0c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  413e10:	ldrb	w8, [x8, #85]
  413e14:	cbz	w8, 413e3c <wcrtomb@plt+0xf01c>
  413e18:	ldr	x8, [sp, #104]
  413e1c:	ldr	x9, [sp, #8]
  413e20:	cmp	x9, x8
  413e24:	b.eq	413e3c <wcrtomb@plt+0xf01c>  // b.none
  413e28:	strb	w28, [x24]
  413e2c:	b	413ea0 <wcrtomb@plt+0xf080>
  413e30:	mov	x2, xzr
  413e34:	cbnz	x2, 413d64 <wcrtomb@plt+0xef44>
  413e38:	b	413d90 <wcrtomb@plt+0xef70>
  413e3c:	ldrb	w8, [x24]
  413e40:	cmp	w8, #0x59
  413e44:	b.eq	413ea0 <wcrtomb@plt+0xf080>  // b.none
  413e48:	mov	x0, x23
  413e4c:	bl	43cc84 <argp_usage@@Base+0xb088>
  413e50:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  413e54:	add	x8, x8, #0x28
  413e58:	ldp	x25, x26, [x8]
  413e5c:	mov	x2, x25
  413e60:	mov	x3, x26
  413e64:	bl	43cd0c <argp_usage@@Base+0xb110>
  413e68:	tbnz	w0, #31, 413ebc <wcrtomb@plt+0xf09c>
  413e6c:	mov	w8, #0x59                  	// #89
  413e70:	strb	w8, [x24]
  413e74:	b	413ea0 <wcrtomb@plt+0xf080>
  413e78:	mov	w2, #0x10                  	// #16
  413e7c:	mov	w8, #0x44                  	// #68
  413e80:	add	x1, sp, #0x10
  413e84:	mov	x0, x25
  413e88:	mov	x3, x24
  413e8c:	strb	w8, [x24]
  413e90:	str	x20, [sp, #408]
  413e94:	bl	413f34 <wcrtomb@plt+0xf114>
  413e98:	add	x0, sp, #0x10
  413e9c:	bl	40b818 <wcrtomb@plt+0x69f8>
  413ea0:	add	x0, sp, #0x10
  413ea4:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  413ea8:	b	413cf0 <wcrtomb@plt+0xeed0>
  413eac:	adrp	x2, 41a000 <wcrtomb@plt+0x151e0>
  413eb0:	add	x2, x2, #0xc54
  413eb4:	cbnz	x2, 413d64 <wcrtomb@plt+0xef44>
  413eb8:	b	413d90 <wcrtomb@plt+0xef70>
  413ebc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  413ec0:	ldr	w8, [x8, #972]
  413ec4:	cbz	w8, 413e28 <wcrtomb@plt+0xf008>
  413ec8:	mov	x0, x23
  413ecc:	bl	43cc78 <argp_usage@@Base+0xb07c>
  413ed0:	mov	x2, x25
  413ed4:	mov	x3, x26
  413ed8:	bl	43cd0c <argp_usage@@Base+0xb110>
  413edc:	tbz	w0, #31, 413e6c <wcrtomb@plt+0xf04c>
  413ee0:	b	413e28 <wcrtomb@plt+0xf008>
  413ee4:	ldur	x0, [x29, #-24]
  413ee8:	bl	4049d0 <free@plt>
  413eec:	b	413f00 <wcrtomb@plt+0xf0e0>
  413ef0:	ldr	x8, [x21, #72]
  413ef4:	cbz	x8, 413f00 <wcrtomb@plt+0xf0e0>
  413ef8:	mov	x0, x21
  413efc:	bl	414718 <wcrtomb@plt+0xf8f8>
  413f00:	mov	x0, x22
  413f04:	bl	41af18 <wcrtomb@plt+0x160f8>
  413f08:	mov	x0, x19
  413f0c:	bl	4049d0 <free@plt>
  413f10:	mov	x0, x21
  413f14:	add	sp, sp, #0x1d0
  413f18:	ldp	x20, x19, [sp, #80]
  413f1c:	ldp	x22, x21, [sp, #64]
  413f20:	ldp	x24, x23, [sp, #48]
  413f24:	ldp	x26, x25, [sp, #32]
  413f28:	ldp	x28, x27, [sp, #16]
  413f2c:	ldp	x29, x30, [sp], #96
  413f30:	ret
  413f34:	sub	sp, sp, #0x70
  413f38:	stp	x29, x30, [sp, #16]
  413f3c:	stp	x28, x27, [sp, #32]
  413f40:	stp	x26, x25, [sp, #48]
  413f44:	stp	x24, x23, [sp, #64]
  413f48:	stp	x22, x21, [sp, #80]
  413f4c:	stp	x20, x19, [sp, #96]
  413f50:	mov	x24, x1
  413f54:	ldr	x28, [x24, #88]!
  413f58:	add	x29, sp, #0x10
  413f5c:	mov	x21, x3
  413f60:	mov	w23, w2
  413f64:	mov	x22, x1
  413f68:	mov	x20, x0
  413f6c:	bl	413ba8 <wcrtomb@plt+0xed88>
  413f70:	cbz	x0, 413fac <wcrtomb@plt+0xf18c>
  413f74:	ldrb	w8, [x0, #60]
  413f78:	mov	x19, x0
  413f7c:	tbz	w8, #0, 413f90 <wcrtomb@plt+0xf170>
  413f80:	tbz	w23, #5, 413fa0 <wcrtomb@plt+0xf180>
  413f84:	add	x0, x19, #0x58
  413f88:	mov	x1, x20
  413f8c:	bl	419680 <wcrtomb@plt+0x14860>
  413f90:	ldr	x0, [x19, #88]
  413f94:	mov	x1, x20
  413f98:	bl	404920 <strcmp@plt>
  413f9c:	cbz	w0, 414090 <wcrtomb@plt+0xf270>
  413fa0:	mov	w8, #0x4e                  	// #78
  413fa4:	strb	w8, [x21]
  413fa8:	b	4143e0 <wcrtomb@plt+0xf5c0>
  413fac:	ldp	x0, x1, [x22, #88]
  413fb0:	bl	415fe8 <wcrtomb@plt+0x111c8>
  413fb4:	mov	x25, x0
  413fb8:	mov	x0, x24
  413fbc:	bl	43cc84 <argp_usage@@Base+0xb088>
  413fc0:	ldp	x3, x4, [x22, #88]
  413fc4:	mov	x2, x0
  413fc8:	mov	x7, x1
  413fcc:	lsr	x5, x28, #63
  413fd0:	mov	w6, #0x1                   	// #1
  413fd4:	mov	x0, x20
  413fd8:	mov	x1, x2
  413fdc:	mov	x2, x7
  413fe0:	mov	x7, xzr
  413fe4:	bl	4160c8 <wcrtomb@plt+0x112a8>
  413fe8:	mov	x19, x0
  413fec:	cbz	x25, 4140d8 <wcrtomb@plt+0xf2b8>
  413ff0:	ldr	x0, [x25, #88]
  413ff4:	mov	x1, x20
  413ff8:	bl	404920 <strcmp@plt>
  413ffc:	cbz	w0, 414080 <wcrtomb@plt+0xf260>
  414000:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  414004:	ldrb	w8, [x8, #449]
  414008:	tbz	w8, #5, 414064 <wcrtomb@plt+0xf244>
  41400c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414010:	ldr	x8, [x8, #1008]
  414014:	cbz	x8, 41401c <wcrtomb@plt+0xf1fc>
  414018:	blr	x8
  41401c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414020:	add	x1, x1, #0xd99
  414024:	mov	w2, #0x5                   	// #5
  414028:	mov	x0, xzr
  41402c:	bl	404bf0 <dcgettext@plt>
  414030:	mov	x26, x0
  414034:	mov	x0, x20
  414038:	bl	43beac <argp_usage@@Base+0xa2b0>
  41403c:	ldr	x1, [x25, #88]
  414040:	mov	x27, x0
  414044:	mov	w0, #0x1                   	// #1
  414048:	bl	43c044 <argp_usage@@Base+0xa448>
  41404c:	mov	x4, x0
  414050:	mov	w0, wzr
  414054:	mov	w1, wzr
  414058:	mov	x2, x26
  41405c:	mov	x3, x27
  414060:	bl	4041f0 <error@plt>
  414064:	ldr	w8, [x19, #60]
  414068:	str	x25, [x19, #64]
  41406c:	mov	x1, x20
  414070:	orr	w8, w8, #0x10
  414074:	str	w8, [x19, #60]
  414078:	ldr	x0, [x25, #88]
  41407c:	bl	416058 <wcrtomb@plt+0x11238>
  414080:	mov	w9, #0x1                   	// #1
  414084:	mov	w8, wzr
  414088:	str	w9, [x19, #56]
  41408c:	b	414218 <wcrtomb@plt+0xf3f8>
  414090:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414094:	ldrb	w8, [x8, #32]
  414098:	cbz	w8, 4140b8 <wcrtomb@plt+0xf298>
  41409c:	ldrb	w8, [x19, #60]
  4140a0:	tbz	w8, #1, 4140a8 <wcrtomb@plt+0xf288>
  4140a4:	tbnz	x28, #63, 4140b8 <wcrtomb@plt+0xf298>
  4140a8:	ldr	x8, [x19, #24]
  4140ac:	ldr	x9, [x24]
  4140b0:	cmp	x8, x9
  4140b4:	b.ne	414150 <wcrtomb@plt+0xf330>  // b.any
  4140b8:	ldr	x8, [x19, #32]
  4140bc:	ldr	x9, [x22, #96]
  4140c0:	cmp	x8, x9
  4140c4:	b.ne	414150 <wcrtomb@plt+0xf330>  // b.any
  4140c8:	mov	w8, wzr
  4140cc:	mov	w9, #0x1                   	// #1
  4140d0:	str	w9, [x19, #56]
  4140d4:	b	41420c <wcrtomb@plt+0xf3ec>
  4140d8:	ldr	w8, [x19, #60]
  4140dc:	orr	w8, w8, #0x8
  4140e0:	str	w8, [x19, #60]
  4140e4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4140e8:	ldrb	w8, [x8, #449]
  4140ec:	tbz	w8, #4, 414134 <wcrtomb@plt+0xf314>
  4140f0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4140f4:	ldr	x8, [x8, #1008]
  4140f8:	cbz	x8, 414100 <wcrtomb@plt+0xf2e0>
  4140fc:	blr	x8
  414100:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414104:	add	x1, x1, #0xdc0
  414108:	mov	w2, #0x5                   	// #5
  41410c:	mov	x0, xzr
  414110:	bl	404bf0 <dcgettext@plt>
  414114:	mov	x25, x0
  414118:	mov	x0, x20
  41411c:	bl	43beac <argp_usage@@Base+0xa2b0>
  414120:	mov	x3, x0
  414124:	mov	w0, wzr
  414128:	mov	w1, wzr
  41412c:	mov	x2, x25
  414130:	bl	4041f0 <error@plt>
  414134:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414138:	ldr	x8, [x8, #832]
  41413c:	cbz	x8, 414404 <wcrtomb@plt+0xf5e4>
  414140:	mov	w27, #0x2                   	// #2
  414144:	mov	w8, wzr
  414148:	str	w27, [x19, #56]
  41414c:	b	414218 <wcrtomb@plt+0xf3f8>
  414150:	ldp	x0, x1, [x22, #88]
  414154:	bl	415fe8 <wcrtomb@plt+0x111c8>
  414158:	cbz	x0, 414458 <wcrtomb@plt+0xf638>
  41415c:	mov	x25, x0
  414160:	ldr	x0, [x0, #88]
  414164:	mov	x1, x20
  414168:	bl	404920 <strcmp@plt>
  41416c:	cbz	w0, 4141f0 <wcrtomb@plt+0xf3d0>
  414170:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  414174:	ldrb	w8, [x8, #449]
  414178:	tbz	w8, #5, 4141d4 <wcrtomb@plt+0xf3b4>
  41417c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414180:	ldr	x8, [x8, #1008]
  414184:	cbz	x8, 41418c <wcrtomb@plt+0xf36c>
  414188:	blr	x8
  41418c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414190:	add	x1, x1, #0xd99
  414194:	mov	w2, #0x5                   	// #5
  414198:	mov	x0, xzr
  41419c:	bl	404bf0 <dcgettext@plt>
  4141a0:	mov	x26, x0
  4141a4:	mov	x0, x20
  4141a8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4141ac:	ldr	x1, [x25, #88]
  4141b0:	mov	x27, x0
  4141b4:	mov	w0, #0x1                   	// #1
  4141b8:	bl	43c044 <argp_usage@@Base+0xa448>
  4141bc:	mov	x4, x0
  4141c0:	mov	w0, wzr
  4141c4:	mov	w1, wzr
  4141c8:	mov	x2, x26
  4141cc:	mov	x3, x27
  4141d0:	bl	4041f0 <error@plt>
  4141d4:	ldr	w8, [x19, #60]
  4141d8:	str	x25, [x19, #64]
  4141dc:	mov	x1, x20
  4141e0:	orr	w8, w8, #0x10
  4141e4:	str	w8, [x19, #60]
  4141e8:	ldr	x0, [x25, #88]
  4141ec:	bl	416058 <wcrtomb@plt+0x11238>
  4141f0:	mov	w9, #0x1                   	// #1
  4141f4:	mov	w8, wzr
  4141f8:	str	w9, [x19, #56]
  4141fc:	tbz	x28, #63, 41420c <wcrtomb@plt+0xf3ec>
  414200:	ldr	w9, [x19, #60]
  414204:	orr	w9, w9, #0x2
  414208:	str	w9, [x19, #60]
  41420c:	ldr	w9, [x19, #60]
  414210:	orr	w9, w9, #0x4
  414214:	str	w9, [x19, #60]
  414218:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41421c:	ldrb	w9, [x9, #85]
  414220:	cbz	w9, 41423c <wcrtomb@plt+0xf41c>
  414224:	ldr	x9, [x22, #392]
  414228:	cbz	x9, 41423c <wcrtomb@plt+0xf41c>
  41422c:	ldr	x10, [x24]
  414230:	ldr	x9, [x9, #88]
  414234:	cmp	x10, x9
  414238:	b.ne	4142ac <wcrtomb@plt+0xf48c>  // b.any
  41423c:	tbz	w23, #4, 414254 <wcrtomb@plt+0xf434>
  414240:	ands	w9, w23, #0x3
  414244:	str	w9, [x19, #56]
  414248:	b.ne	414254 <wcrtomb@plt+0xf434>  // b.any
  41424c:	mov	w9, #0x4e                  	// #78
  414250:	strb	w9, [x21]
  414254:	cbz	w8, 414314 <wcrtomb@plt+0xf4f4>
  414258:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41425c:	ldrb	w8, [x8, #449]
  414260:	tbz	w8, #5, 414314 <wcrtomb@plt+0xf4f4>
  414264:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414268:	ldr	x8, [x8, #1008]
  41426c:	cbz	x8, 414274 <wcrtomb@plt+0xf454>
  414270:	blr	x8
  414274:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414278:	add	x1, x1, #0xe0c
  41427c:	mov	w2, #0x5                   	// #5
  414280:	mov	x0, xzr
  414284:	bl	404bf0 <dcgettext@plt>
  414288:	mov	x23, x0
  41428c:	mov	x0, x20
  414290:	bl	43beac <argp_usage@@Base+0xa2b0>
  414294:	mov	x3, x0
  414298:	mov	w0, wzr
  41429c:	mov	w1, wzr
  4142a0:	mov	x2, x23
  4142a4:	bl	4041f0 <error@plt>
  4142a8:	b	414314 <wcrtomb@plt+0xf4f4>
  4142ac:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4142b0:	ldrb	w8, [x8, #450]
  4142b4:	tbz	w8, #2, 414300 <wcrtomb@plt+0xf4e0>
  4142b8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4142bc:	ldr	x8, [x8, #1008]
  4142c0:	cbz	x8, 4142c8 <wcrtomb@plt+0xf4a8>
  4142c4:	blr	x8
  4142c8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4142cc:	add	x1, x1, #0xdd5
  4142d0:	mov	w2, #0x5                   	// #5
  4142d4:	mov	x0, xzr
  4142d8:	bl	404bf0 <dcgettext@plt>
  4142dc:	ldr	x8, [x19, #88]
  4142e0:	mov	x23, x0
  4142e4:	mov	x0, x8
  4142e8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4142ec:	mov	x3, x0
  4142f0:	mov	w0, wzr
  4142f4:	mov	w1, wzr
  4142f8:	mov	x2, x23
  4142fc:	bl	4041f0 <error@plt>
  414300:	ldr	x0, [x19, #40]
  414304:	str	wzr, [x19, #56]
  414308:	cbz	x0, 414314 <wcrtomb@plt+0xf4f4>
  41430c:	bl	414aa4 <wcrtomb@plt+0xfc84>
  414310:	str	xzr, [x19, #40]
  414314:	ldp	w9, w8, [x19, #56]
  414318:	orr	w8, w8, #0x1
  41431c:	str	w8, [x19, #60]
  414320:	cbz	w9, 4143e0 <wcrtomb@plt+0xf5c0>
  414324:	add	x1, sp, #0x8
  414328:	mov	x0, x22
  41432c:	bl	40a31c <wcrtomb@plt+0x54fc>
  414330:	cmp	w0, #0x1
  414334:	b.eq	414380 <wcrtomb@plt+0xf560>  // b.none
  414338:	cmp	w0, #0x2
  41433c:	b.eq	4143b0 <wcrtomb@plt+0xf590>  // b.none
  414340:	cmp	w0, #0x3
  414344:	b.ne	4143e0 <wcrtomb@plt+0xf5c0>  // b.any
  414348:	ldr	x22, [sp, #8]
  41434c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  414350:	add	x1, x1, #0xf71
  414354:	mov	w2, #0x5                   	// #5
  414358:	mov	x0, xzr
  41435c:	bl	404bf0 <dcgettext@plt>
  414360:	mov	x2, x0
  414364:	mov	x0, x20
  414368:	mov	x1, x22
  41436c:	bl	40a27c <wcrtomb@plt+0x545c>
  414370:	mov	w8, #0x4e                  	// #78
  414374:	strb	w8, [x21]
  414378:	str	wzr, [x19, #56]
  41437c:	b	4143e0 <wcrtomb@plt+0xf5c0>
  414380:	ldr	x21, [sp, #8]
  414384:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  414388:	add	x1, x1, #0xff6
  41438c:	mov	w2, #0x5                   	// #5
  414390:	mov	x0, xzr
  414394:	bl	404bf0 <dcgettext@plt>
  414398:	mov	x2, x0
  41439c:	mov	x0, x20
  4143a0:	mov	x1, x21
  4143a4:	bl	40a27c <wcrtomb@plt+0x545c>
  4143a8:	str	wzr, [x19, #56]
  4143ac:	b	4143d8 <wcrtomb@plt+0xf5b8>
  4143b0:	ldr	x21, [sp, #8]
  4143b4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4143b8:	add	x1, x1, #0xff6
  4143bc:	mov	w2, #0x5                   	// #5
  4143c0:	mov	x0, xzr
  4143c4:	bl	404bf0 <dcgettext@plt>
  4143c8:	mov	x2, x0
  4143cc:	mov	x0, x20
  4143d0:	mov	x1, x21
  4143d4:	bl	40a27c <wcrtomb@plt+0x545c>
  4143d8:	ldr	x8, [sp, #8]
  4143dc:	str	x8, [x19, #72]
  4143e0:	mov	x0, x19
  4143e4:	ldp	x20, x19, [sp, #96]
  4143e8:	ldp	x22, x21, [sp, #80]
  4143ec:	ldp	x24, x23, [sp, #64]
  4143f0:	ldp	x26, x25, [sp, #48]
  4143f4:	ldp	x28, x27, [sp, #32]
  4143f8:	ldp	x29, x30, [sp, #16]
  4143fc:	add	sp, sp, #0x70
  414400:	ret
  414404:	mov	x0, x24
  414408:	bl	43cc84 <argp_usage@@Base+0xb088>
  41440c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414410:	add	x8, x8, #0x28
  414414:	ldp	x25, x26, [x8]
  414418:	mov	x2, x25
  41441c:	mov	x3, x26
  414420:	bl	43cd0c <argp_usage@@Base+0xb110>
  414424:	tbnz	w0, #31, 414140 <wcrtomb@plt+0xf320>
  414428:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41442c:	ldr	w8, [x8, #972]
  414430:	mov	w27, #0x1                   	// #1
  414434:	cbz	w8, 414144 <wcrtomb@plt+0xf324>
  414438:	mov	x0, x24
  41443c:	bl	43cc78 <argp_usage@@Base+0xb07c>
  414440:	mov	x2, x25
  414444:	mov	x3, x26
  414448:	bl	43cd0c <argp_usage@@Base+0xb110>
  41444c:	cmp	w0, #0x0
  414450:	cinc	w27, w27, lt  // lt = tstop
  414454:	b	414144 <wcrtomb@plt+0xf324>
  414458:	mov	w8, #0x2                   	// #2
  41445c:	str	w8, [x19, #56]
  414460:	ldr	x8, [x22, #88]
  414464:	str	x8, [x19, #24]
  414468:	ldr	x8, [x22, #96]
  41446c:	str	x8, [x19, #32]
  414470:	mov	w8, #0x1                   	// #1
  414474:	tbz	x28, #63, 41420c <wcrtomb@plt+0xf3ec>
  414478:	b	414200 <wcrtomb@plt+0xf3e0>
  41447c:	stp	x29, x30, [sp, #-96]!
  414480:	stp	x28, x27, [sp, #16]
  414484:	stp	x26, x25, [sp, #32]
  414488:	stp	x24, x23, [sp, #48]
  41448c:	stp	x22, x21, [sp, #64]
  414490:	stp	x20, x19, [sp, #80]
  414494:	ldr	w8, [x0, #56]
  414498:	mov	x19, x0
  41449c:	mov	x23, x1
  4144a0:	mov	x29, sp
  4144a4:	cmp	w8, #0x2
  4144a8:	b.ne	4144bc <wcrtomb@plt+0xf69c>  // b.any
  4144ac:	mov	x20, xzr
  4144b0:	ldrb	w8, [x23]
  4144b4:	cbnz	w8, 4144e8 <wcrtomb@plt+0xf6c8>
  4144b8:	b	414528 <wcrtomb@plt+0xf708>
  4144bc:	ldrb	w8, [x19, #60]
  4144c0:	tbnz	w8, #4, 4144d4 <wcrtomb@plt+0xf6b4>
  4144c4:	ldr	x20, [x19, #40]
  4144c8:	ldrb	w8, [x23]
  4144cc:	cbnz	w8, 4144e8 <wcrtomb@plt+0xf6c8>
  4144d0:	b	414528 <wcrtomb@plt+0xf708>
  4144d4:	ldr	x8, [x19, #64]
  4144d8:	ldr	x20, [x8, #48]
  4144dc:	cbz	x20, 41451c <wcrtomb@plt+0xf6fc>
  4144e0:	ldrb	w8, [x23]
  4144e4:	cbz	w8, 414528 <wcrtomb@plt+0xf708>
  4144e8:	mov	x21, xzr
  4144ec:	mov	x24, xzr
  4144f0:	mov	x22, x23
  4144f4:	mov	x0, x22
  4144f8:	bl	404190 <strlen@plt>
  4144fc:	add	x22, x0, x22
  414500:	ldrb	w8, [x22, #1]!
  414504:	add	x9, x24, x0
  414508:	add	x24, x9, #0x2
  41450c:	add	x21, x21, #0x1
  414510:	cbnz	w8, 4144f4 <wcrtomb@plt+0xf6d4>
  414514:	add	x24, x24, #0x1
  414518:	b	414530 <wcrtomb@plt+0xf710>
  41451c:	ldr	x20, [x8, #40]
  414520:	ldrb	w8, [x23]
  414524:	cbnz	w8, 4144e8 <wcrtomb@plt+0xf6c8>
  414528:	mov	x21, xzr
  41452c:	mov	w24, #0x1                   	// #1
  414530:	mov	w1, #0x8                   	// #8
  414534:	mov	x0, x21
  414538:	bl	43d32c <argp_usage@@Base+0xb730>
  41453c:	ldrb	w8, [x23]
  414540:	mov	x22, x0
  414544:	cbz	w8, 414564 <wcrtomb@plt+0xf744>
  414548:	mov	x25, x22
  41454c:	mov	x0, x23
  414550:	str	x23, [x25], #8
  414554:	bl	404190 <strlen@plt>
  414558:	add	x23, x0, x23
  41455c:	ldrb	w8, [x23, #1]!
  414560:	cbnz	w8, 41454c <wcrtomb@plt+0xf72c>
  414564:	adrp	x3, 416000 <wcrtomb@plt+0x111e0>
  414568:	add	x3, x3, #0x2d4
  41456c:	mov	w2, #0x8                   	// #8
  414570:	mov	x0, x22
  414574:	mov	x1, x21
  414578:	bl	404360 <qsort@plt>
  41457c:	mov	x0, x24
  414580:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  414584:	mov	x23, x0
  414588:	mov	x28, x0
  41458c:	cbz	x21, 414600 <wcrtomb@plt+0xf7e0>
  414590:	mov	x24, xzr
  414594:	mov	w25, #0x49                  	// #73
  414598:	mov	w26, #0x59                  	// #89
  41459c:	mov	w27, #0x20                  	// #32
  4145a0:	mov	x28, x23
  4145a4:	ldr	x1, [x22, x24, lsl #3]
  4145a8:	mov	x0, x20
  4145ac:	bl	4162f0 <wcrtomb@plt+0x114d0>
  4145b0:	ldr	x9, [x19, #72]
  4145b4:	cbz	x0, 4145cc <wcrtomb@plt+0xf7ac>
  4145b8:	cmp	x9, #0x0
  4145bc:	csel	w8, w25, w27, ne  // ne = any
  4145c0:	strb	w8, [x28], #1
  4145c4:	mov	x8, x28
  4145c8:	b	4145e0 <wcrtomb@plt+0xf7c0>
  4145cc:	add	x8, x28, #0x1
  4145d0:	cbz	x9, 4145dc <wcrtomb@plt+0xf7bc>
  4145d4:	strb	w25, [x28]
  4145d8:	b	4145e0 <wcrtomb@plt+0xf7c0>
  4145dc:	strb	w26, [x28]
  4145e0:	ldr	x9, [x22, x24, lsl #3]
  4145e4:	mov	x28, x8
  4145e8:	ldrb	w8, [x9], #1
  4145ec:	strb	w8, [x28], #1
  4145f0:	cbnz	w8, 4145e8 <wcrtomb@plt+0xf7c8>
  4145f4:	add	x24, x24, #0x1
  4145f8:	cmp	x24, x21
  4145fc:	b.ne	4145a4 <wcrtomb@plt+0xf784>  // b.any
  414600:	strb	wzr, [x28]
  414604:	ldr	x8, [x19, #40]
  414608:	mov	x0, x23
  41460c:	mov	x1, xzr
  414610:	str	x8, [x19, #48]
  414614:	bl	416334 <wcrtomb@plt+0x11514>
  414618:	str	x0, [x19, #40]
  41461c:	mov	x0, x23
  414620:	bl	4049d0 <free@plt>
  414624:	mov	x0, x22
  414628:	bl	4049d0 <free@plt>
  41462c:	ldp	x20, x19, [sp, #80]
  414630:	ldp	x22, x21, [sp, #64]
  414634:	ldp	x24, x23, [sp, #48]
  414638:	ldp	x26, x25, [sp, #32]
  41463c:	ldp	x28, x27, [sp, #16]
  414640:	ldp	x29, x30, [sp], #96
  414644:	ret
  414648:	stp	x29, x30, [sp, #-48]!
  41464c:	str	x21, [sp, #16]
  414650:	mov	x21, x0
  414654:	mov	w0, #0x18                  	// #24
  414658:	stp	x20, x19, [sp, #32]
  41465c:	mov	x29, sp
  414660:	mov	x19, x2
  414664:	mov	w20, w1
  414668:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41466c:	str	x21, [x0]
  414670:	str	w20, [x0, #8]
  414674:	str	xzr, [x0, #16]
  414678:	str	x0, [x19]
  41467c:	bl	414690 <wcrtomb@plt+0xf870>
  414680:	ldp	x20, x19, [sp, #32]
  414684:	ldr	x21, [sp, #16]
  414688:	ldp	x29, x30, [sp], #48
  41468c:	ret
  414690:	stp	x29, x30, [sp, #-48]!
  414694:	stp	x20, x19, [sp, #32]
  414698:	str	x21, [sp, #16]
  41469c:	ldr	x21, [x0, #16]
  4146a0:	ldr	w9, [x0, #8]
  4146a4:	ldr	x8, [x0]
  4146a8:	mov	x19, x0
  4146ac:	mov	x29, sp
  4146b0:	cbz	w9, 4146dc <wcrtomb@plt+0xf8bc>
  4146b4:	ldr	x8, [x8]
  4146b8:	add	x20, x8, x21
  4146bc:	ldrb	w8, [x20]
  4146c0:	cbz	w8, 414700 <wcrtomb@plt+0xf8e0>
  4146c4:	mov	x0, x20
  4146c8:	bl	404190 <strlen@plt>
  4146cc:	add	x8, x21, x0
  4146d0:	add	x8, x8, #0x1
  4146d4:	str	x8, [x19, #16]
  4146d8:	b	414704 <wcrtomb@plt+0xf8e4>
  4146dc:	ldr	x9, [x8, #16]
  4146e0:	cmp	x21, x9
  4146e4:	b.cs	414700 <wcrtomb@plt+0xf8e0>  // b.hs, b.nlast
  4146e8:	ldr	x8, [x8, #24]
  4146ec:	add	x9, x21, #0x1
  4146f0:	ldr	x8, [x8, x21, lsl #3]
  4146f4:	str	x9, [x19, #16]
  4146f8:	sub	x20, x8, #0x1
  4146fc:	b	414704 <wcrtomb@plt+0xf8e4>
  414700:	mov	x20, xzr
  414704:	mov	x0, x20
  414708:	ldp	x20, x19, [sp, #32]
  41470c:	ldr	x21, [sp, #16]
  414710:	ldp	x29, x30, [sp], #48
  414714:	ret
  414718:	stp	x29, x30, [sp, #-48]!
  41471c:	stp	x22, x21, [sp, #16]
  414720:	stp	x20, x19, [sp, #32]
  414724:	mov	x19, x0
  414728:	ldr	x0, [x0, #72]
  41472c:	mov	x29, sp
  414730:	bl	404190 <strlen@plt>
  414734:	mov	x20, x0
  414738:	add	x21, x0, #0x1
  41473c:	add	x0, x0, #0x3
  414740:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  414744:	mov	w8, #0x59                  	// #89
  414748:	mov	x22, x0
  41474c:	strb	w8, [x0], #1
  414750:	ldr	x1, [x19, #72]
  414754:	mov	x2, x21
  414758:	bl	404110 <memcpy@plt>
  41475c:	add	x8, x20, x22
  414760:	strb	wzr, [x8, #2]
  414764:	ldr	x8, [x19, #40]
  414768:	mov	x0, x22
  41476c:	mov	x1, xzr
  414770:	str	x8, [x19, #48]
  414774:	bl	416334 <wcrtomb@plt+0x11514>
  414778:	str	x0, [x19, #40]
  41477c:	mov	x0, x22
  414780:	bl	4049d0 <free@plt>
  414784:	ldp	x20, x19, [sp, #32]
  414788:	ldp	x22, x21, [sp, #16]
  41478c:	ldp	x29, x30, [sp], #48
  414790:	ret
  414794:	cbz	x0, 4147a4 <wcrtomb@plt+0xf984>
  414798:	ldr	x8, [x0, #40]
  41479c:	cbz	x8, 4147a8 <wcrtomb@plt+0xf988>
  4147a0:	ldr	x0, [x8]
  4147a4:	ret
  4147a8:	mov	x0, xzr
  4147ac:	ret
  4147b0:	stp	x29, x30, [sp, #-16]!
  4147b4:	mov	x29, sp
  4147b8:	bl	414794 <wcrtomb@plt+0xf974>
  4147bc:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x12da0>
  4147c0:	add	x8, x8, #0xc28
  4147c4:	cmp	x0, #0x0
  4147c8:	csel	x0, x8, x0, eq  // eq = none
  4147cc:	ldp	x29, x30, [sp], #16
  4147d0:	ret
  4147d4:	sub	sp, sp, #0x90
  4147d8:	stp	x22, x21, [sp, #112]
  4147dc:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4147e0:	ldr	x8, [x22, #2232]
  4147e4:	stp	x29, x30, [sp, #96]
  4147e8:	stp	x20, x19, [sp, #128]
  4147ec:	add	x29, sp, #0x60
  4147f0:	cbz	x8, 414928 <wcrtomb@plt+0xfb08>
  4147f4:	adrp	x3, 43d000 <argp_usage@@Base+0xb404>
  4147f8:	adrp	x4, 404000 <mbrtowc@plt-0x100>
  4147fc:	mov	x19, x0
  414800:	add	x3, x3, #0x1c4
  414804:	add	x4, x4, #0x9d0
  414808:	add	x0, sp, #0x8
  41480c:	mov	x1, xzr
  414810:	mov	x2, xzr
  414814:	bl	43df40 <_obstack_begin@@Base>
  414818:	mov	x0, x19
  41481c:	bl	414794 <wcrtomb@plt+0xf974>
  414820:	cbz	x0, 41493c <wcrtomb@plt+0xfb1c>
  414824:	mov	x21, x0
  414828:	bl	413a50 <wcrtomb@plt+0xec30>
  41482c:	ldp	x9, x8, [sp, #32]
  414830:	sub	x20, x0, #0x1
  414834:	sub	x8, x8, x9
  414838:	cmp	x8, x20
  41483c:	b.cs	41484c <wcrtomb@plt+0xfa2c>  // b.hs, b.nlast
  414840:	add	x0, sp, #0x8
  414844:	mov	x1, x20
  414848:	bl	43e028 <_obstack_newchunk@@Base>
  41484c:	ldr	x0, [sp, #32]
  414850:	mov	x1, x21
  414854:	mov	x2, x20
  414858:	bl	404110 <memcpy@plt>
  41485c:	ldr	x8, [sp, #32]
  414860:	add	x8, x8, x20
  414864:	str	x8, [sp, #32]
  414868:	ldr	x21, [x22, #2232]
  41486c:	cbz	x21, 414884 <wcrtomb@plt+0xfa64>
  414870:	add	x1, sp, #0x8
  414874:	mov	x0, x21
  414878:	bl	41494c <wcrtomb@plt+0xfb2c>
  41487c:	ldr	x21, [x21]
  414880:	cbnz	x21, 414870 <wcrtomb@plt+0xfa50>
  414884:	cbz	x19, 41491c <wcrtomb@plt+0xfafc>
  414888:	ldp	x9, x8, [sp, #24]
  41488c:	sub	x9, x8, x9
  414890:	cmp	x9, x20
  414894:	b.eq	41491c <wcrtomb@plt+0xfafc>  // b.none
  414898:	ldr	x9, [sp, #40]
  41489c:	cmp	x9, x8
  4148a0:	b.ne	4148b0 <wcrtomb@plt+0xfa90>  // b.any
  4148a4:	add	x0, sp, #0x8
  4148a8:	mov	w1, #0x1                   	// #1
  4148ac:	bl	43e028 <_obstack_newchunk@@Base>
  4148b0:	ldr	x8, [sp, #32]
  4148b4:	add	x9, x8, #0x1
  4148b8:	str	x9, [sp, #32]
  4148bc:	strb	wzr, [x8]
  4148c0:	ldr	x0, [x19, #40]
  4148c4:	bl	414aa4 <wcrtomb@plt+0xfc84>
  4148c8:	ldp	x0, x8, [sp, #24]
  4148cc:	cmp	x8, x0
  4148d0:	b.ne	4148e0 <wcrtomb@plt+0xfac0>  // b.any
  4148d4:	ldrb	w8, [sp, #88]
  4148d8:	orr	w8, w8, #0x2
  4148dc:	strb	w8, [sp, #88]
  4148e0:	ldr	x9, [sp, #56]
  4148e4:	ldp	x10, x8, [sp, #32]
  4148e8:	ldr	x11, [sp, #16]
  4148ec:	add	x10, x9, x10
  4148f0:	bic	x9, x10, x9
  4148f4:	sub	x10, x9, x11
  4148f8:	sub	x11, x8, x11
  4148fc:	cmp	x10, x11
  414900:	str	x9, [sp, #32]
  414904:	b.ls	41490c <wcrtomb@plt+0xfaec>  // b.plast
  414908:	str	x8, [sp, #32]
  41490c:	ldr	x8, [sp, #32]
  414910:	str	x8, [sp, #24]
  414914:	bl	414ad0 <wcrtomb@plt+0xfcb0>
  414918:	str	x0, [x19, #40]
  41491c:	add	x0, sp, #0x8
  414920:	mov	x1, xzr
  414924:	bl	43e1d8 <_obstack_free@@Base>
  414928:	ldp	x20, x19, [sp, #128]
  41492c:	ldp	x22, x21, [sp, #112]
  414930:	ldp	x29, x30, [sp, #96]
  414934:	add	sp, sp, #0x90
  414938:	ret
  41493c:	mov	x20, xzr
  414940:	ldr	x21, [x22, #2232]
  414944:	cbnz	x21, 414870 <wcrtomb@plt+0xfa50>
  414948:	b	414884 <wcrtomb@plt+0xfa64>
  41494c:	stp	x29, x30, [sp, #-64]!
  414950:	stp	x22, x21, [sp, #32]
  414954:	stp	x20, x19, [sp, #48]
  414958:	ldrb	w8, [x0, #60]
  41495c:	str	x23, [sp, #16]
  414960:	mov	x29, sp
  414964:	tbz	w8, #4, 414a90 <wcrtomb@plt+0xfc70>
  414968:	mov	x20, x0
  41496c:	mov	x19, x1
  414970:	mov	x8, x0
  414974:	cbz	x8, 414a6c <wcrtomb@plt+0xfc4c>
  414978:	mov	x23, x8
  41497c:	ldr	w9, [x8, #60]
  414980:	ldr	x8, [x8, #64]
  414984:	and	w9, w9, #0xffffffef
  414988:	cmp	x8, x20
  41498c:	str	w9, [x23, #60]
  414990:	b.ne	414974 <wcrtomb@plt+0xfb54>  // b.any
  414994:	ldr	x0, [x20, #88]
  414998:	bl	432558 <argp_usage@@Base+0x95c>
  41499c:	ldp	x9, x8, [x19, #24]
  4149a0:	mov	x21, x0
  4149a4:	cmp	x8, x9
  4149a8:	b.ne	4149b8 <wcrtomb@plt+0xfb98>  // b.any
  4149ac:	mov	w1, #0x1                   	// #1
  4149b0:	mov	x0, x19
  4149b4:	bl	43e028 <_obstack_newchunk@@Base>
  4149b8:	ldr	x8, [x19, #24]
  4149bc:	mov	w9, #0x58                  	// #88
  4149c0:	mov	x0, x21
  4149c4:	add	x10, x8, #0x1
  4149c8:	str	x10, [x19, #24]
  4149cc:	strb	w9, [x8]
  4149d0:	bl	404190 <strlen@plt>
  4149d4:	ldp	x9, x8, [x19, #24]
  4149d8:	add	x22, x0, #0x1
  4149dc:	sub	x8, x8, x9
  4149e0:	cmp	x8, x22
  4149e4:	b.cs	4149f4 <wcrtomb@plt+0xfbd4>  // b.hs, b.nlast
  4149e8:	mov	x0, x19
  4149ec:	mov	x1, x22
  4149f0:	bl	43e028 <_obstack_newchunk@@Base>
  4149f4:	ldr	x0, [x19, #24]
  4149f8:	mov	x1, x21
  4149fc:	mov	x2, x22
  414a00:	bl	404110 <memcpy@plt>
  414a04:	ldr	x8, [x19, #24]
  414a08:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  414a0c:	add	x2, x2, #0xd3e
  414a10:	mov	x0, x19
  414a14:	add	x8, x8, x22
  414a18:	str	x8, [x19, #24]
  414a1c:	ldr	x1, [x20, #88]
  414a20:	bl	416468 <wcrtomb@plt+0x11648>
  414a24:	cmp	x23, x20
  414a28:	b.eq	414a4c <wcrtomb@plt+0xfc2c>  // b.none
  414a2c:	ldr	x8, [x20, #64]
  414a30:	ldr	x2, [x20, #88]
  414a34:	mov	x0, x19
  414a38:	ldr	x1, [x8, #88]
  414a3c:	bl	416468 <wcrtomb@plt+0x11648>
  414a40:	ldr	x20, [x20, #64]
  414a44:	cmp	x20, x23
  414a48:	b.ne	414a2c <wcrtomb@plt+0xfc0c>  // b.any
  414a4c:	ldr	x2, [x23, #88]
  414a50:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  414a54:	add	x1, x1, #0xd3e
  414a58:	mov	x0, x19
  414a5c:	bl	416468 <wcrtomb@plt+0x11648>
  414a60:	mov	x0, x21
  414a64:	bl	4049d0 <free@plt>
  414a68:	b	414a90 <wcrtomb@plt+0xfc70>
  414a6c:	cbz	x20, 414a90 <wcrtomb@plt+0xfc70>
  414a70:	ldr	x8, [x20, #64]
  414a74:	cbz	x8, 414a90 <wcrtomb@plt+0xfc70>
  414a78:	ldr	x1, [x8, #88]
  414a7c:	ldr	x2, [x20, #88]
  414a80:	mov	x0, x19
  414a84:	bl	416468 <wcrtomb@plt+0x11648>
  414a88:	ldr	x20, [x20, #64]
  414a8c:	cbnz	x20, 414a70 <wcrtomb@plt+0xfc50>
  414a90:	ldp	x20, x19, [sp, #48]
  414a94:	ldp	x22, x21, [sp, #32]
  414a98:	ldr	x23, [sp, #16]
  414a9c:	ldp	x29, x30, [sp], #64
  414aa0:	ret
  414aa4:	stp	x29, x30, [sp, #-32]!
  414aa8:	str	x19, [sp, #16]
  414aac:	mov	x19, x0
  414ab0:	ldr	x0, [x0, #24]
  414ab4:	mov	x29, sp
  414ab8:	bl	4049d0 <free@plt>
  414abc:	mov	x0, x19
  414ac0:	bl	4049d0 <free@plt>
  414ac4:	ldr	x19, [sp, #16]
  414ac8:	ldp	x29, x30, [sp], #32
  414acc:	ret
  414ad0:	stp	x29, x30, [sp, #-16]!
  414ad4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414ad8:	add	x1, x1, #0xe2b
  414adc:	mov	x29, sp
  414ae0:	bl	416334 <wcrtomb@plt+0x11514>
  414ae4:	ldp	x29, x30, [sp], #16
  414ae8:	ret
  414aec:	sub	sp, sp, #0x60
  414af0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414af4:	add	x1, x1, #0xcc3
  414af8:	mov	w0, #0x1                   	// #1
  414afc:	stp	x29, x30, [sp, #48]
  414b00:	stp	x22, x21, [sp, #64]
  414b04:	stp	x20, x19, [sp, #80]
  414b08:	add	x29, sp, #0x30
  414b0c:	bl	4045f0 <__printf_chk@plt>
  414b10:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414b14:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x12da0>
  414b18:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x12da0>
  414b1c:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x12da0>
  414b20:	add	x1, x1, #0xcee
  414b24:	add	x2, x2, #0xd0a
  414b28:	add	x3, x3, #0xd15
  414b2c:	add	x4, x4, #0xd19
  414b30:	mov	w0, #0x1                   	// #1
  414b34:	bl	4045f0 <__printf_chk@plt>
  414b38:	adrp	x19, 451000 <_obstack_memory_used@@Base+0x12da0>
  414b3c:	adrp	x22, 451000 <_obstack_memory_used@@Base+0x12da0>
  414b40:	adrp	x20, 451000 <_obstack_memory_used@@Base+0x12da0>
  414b44:	add	x19, x19, #0xe2f
  414b48:	add	x22, x22, #0xc40
  414b4c:	add	x20, x20, #0xd1d
  414b50:	ldp	x0, x2, [x22, #-8]
  414b54:	add	x3, sp, #0x18
  414b58:	mov	x1, x0
  414b5c:	bl	419ba0 <wcrtomb@plt+0x14d80>
  414b60:	ldp	x1, x2, [x22, #-8]
  414b64:	mov	x21, x0
  414b68:	mov	x3, sp
  414b6c:	mov	x0, x2
  414b70:	bl	419ba0 <wcrtomb@plt+0x14d80>
  414b74:	mov	x4, x0
  414b78:	mov	w0, #0x1                   	// #1
  414b7c:	mov	x1, x20
  414b80:	mov	x2, x19
  414b84:	mov	x3, x21
  414b88:	bl	4045f0 <__printf_chk@plt>
  414b8c:	ldr	x19, [x22, #8]
  414b90:	add	x22, x22, #0x18
  414b94:	cbnz	x19, 414b50 <wcrtomb@plt+0xfd30>
  414b98:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  414b9c:	add	x1, x1, #0x365
  414ba0:	mov	w0, #0x1                   	// #1
  414ba4:	bl	4045f0 <__printf_chk@plt>
  414ba8:	ldp	x20, x19, [sp, #80]
  414bac:	ldp	x22, x21, [sp, #64]
  414bb0:	ldp	x29, x30, [sp, #48]
  414bb4:	add	sp, sp, #0x60
  414bb8:	ret
  414bbc:	sub	sp, sp, #0x60
  414bc0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414bc4:	ldr	w8, [x8, #780]
  414bc8:	stp	x22, x21, [sp, #64]
  414bcc:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  414bd0:	ldr	x0, [x21, #832]
  414bd4:	mov	w9, #0x42                  	// #66
  414bd8:	cmp	w8, #0x0
  414bdc:	mov	w8, #0x242                 	// #578
  414be0:	stp	x29, x30, [sp, #16]
  414be4:	add	x29, sp, #0x10
  414be8:	csel	w1, w8, w9, eq  // eq = none
  414bec:	mov	w2, #0x1b6                 	// #438
  414bf0:	str	x25, [sp, #32]
  414bf4:	stp	x24, x23, [sp, #48]
  414bf8:	stp	x20, x19, [sp, #80]
  414bfc:	str	xzr, [x29, #24]
  414c00:	str	xzr, [sp, #8]
  414c04:	bl	404530 <open@plt>
  414c08:	tbnz	w0, #31, 414c80 <wcrtomb@plt+0xfe60>
  414c0c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414c10:	add	x1, x1, #0xd37
  414c14:	mov	w19, w0
  414c18:	bl	404610 <fdopen@plt>
  414c1c:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  414c20:	str	x0, [x22, #2248]
  414c24:	cbz	x0, 414c8c <wcrtomb@plt+0xfe6c>
  414c28:	bl	41c52c <wcrtomb@plt+0x1770c>
  414c2c:	bl	41c5bc <wcrtomb@plt+0x1779c>
  414c30:	ldr	x2, [x22, #2248]
  414c34:	add	x0, x29, #0x18
  414c38:	add	x1, sp, #0x8
  414c3c:	bl	4049a0 <getline@plt>
  414c40:	cmp	x0, #0x1
  414c44:	b.lt	414dbc <wcrtomb@plt+0xff9c>  // b.tstop
  414c48:	ldr	x19, [x29, #24]
  414c4c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414c50:	add	x1, x1, #0xd3a
  414c54:	mov	w2, #0x7                   	// #7
  414c58:	mov	x0, x19
  414c5c:	bl	4045a0 <strncmp@plt>
  414c60:	cbz	w0, 414ca0 <wcrtomb@plt+0xfe80>
  414c64:	mov	x19, xzr
  414c68:	cmp	x19, #0x2
  414c6c:	b.cs	414d6c <wcrtomb@plt+0xff4c>  // b.hs, b.nlast
  414c70:	ldr	x1, [x29, #24]
  414c74:	mov	w0, w19
  414c78:	bl	414df4 <wcrtomb@plt+0xffd4>
  414c7c:	b	414dbc <wcrtomb@plt+0xff9c>
  414c80:	ldr	x0, [x21, #832]
  414c84:	bl	428160 <wcrtomb@plt+0x23340>
  414c88:	b	414dd8 <wcrtomb@plt+0xffb8>
  414c8c:	ldr	x0, [x21, #832]
  414c90:	bl	428160 <wcrtomb@plt+0x23340>
  414c94:	mov	w0, w19
  414c98:	bl	4047c0 <close@plt>
  414c9c:	b	414dd8 <wcrtomb@plt+0xffb8>
  414ca0:	ldrb	w8, [x19, #7]
  414ca4:	cmp	w8, #0x2d
  414ca8:	b.eq	414cec <wcrtomb@plt+0xfecc>  // b.none
  414cac:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414cb0:	ldr	x8, [x8, #1008]
  414cb4:	cbz	x8, 414cbc <wcrtomb@plt+0xfe9c>
  414cb8:	blr	x8
  414cbc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414cc0:	add	x1, x1, #0xd42
  414cc4:	mov	w2, #0x5                   	// #5
  414cc8:	mov	x0, xzr
  414ccc:	bl	404bf0 <dcgettext@plt>
  414cd0:	mov	x2, x0
  414cd4:	mov	w0, #0x1                   	// #1
  414cd8:	mov	w1, wzr
  414cdc:	bl	4041f0 <error@plt>
  414ce0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  414ce4:	mov	w9, #0x2                   	// #2
  414ce8:	str	w9, [x8, #3456]
  414cec:	adrp	x20, 451000 <_obstack_memory_used@@Base+0x12da0>
  414cf0:	add	x19, x19, #0x9
  414cf4:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  414cf8:	add	x20, x20, #0xd42
  414cfc:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  414d00:	mov	w25, #0x2                   	// #2
  414d04:	b	414d14 <wcrtomb@plt+0xfef4>
  414d08:	cmp	w8, #0x2d
  414d0c:	b.eq	414d50 <wcrtomb@plt+0xff30>  // b.none
  414d10:	add	x19, x19, #0x1
  414d14:	ldurb	w8, [x19, #-1]
  414d18:	cbnz	w8, 414d08 <wcrtomb@plt+0xfee8>
  414d1c:	ldr	x8, [x23, #1008]
  414d20:	cbz	x8, 414d28 <wcrtomb@plt+0xff08>
  414d24:	blr	x8
  414d28:	mov	w2, #0x5                   	// #5
  414d2c:	mov	x0, xzr
  414d30:	mov	x1, x20
  414d34:	bl	404bf0 <dcgettext@plt>
  414d38:	mov	x2, x0
  414d3c:	mov	w0, #0x1                   	// #1
  414d40:	mov	w1, wzr
  414d44:	bl	4041f0 <error@plt>
  414d48:	str	w25, [x24, #3456]
  414d4c:	b	414d10 <wcrtomb@plt+0xfef0>
  414d50:	mov	w2, #0xa                   	// #10
  414d54:	mov	x0, x19
  414d58:	mov	x1, xzr
  414d5c:	bl	404840 <strtoumax@plt>
  414d60:	mov	x19, x0
  414d64:	cmp	x19, #0x2
  414d68:	b.cc	414c70 <wcrtomb@plt+0xfe50>  // b.lo, b.ul, b.last
  414d6c:	b.ne	414d78 <wcrtomb@plt+0xff58>  // b.any
  414d70:	bl	41526c <wcrtomb@plt+0x1044c>
  414d74:	b	414dbc <wcrtomb@plt+0xff9c>
  414d78:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414d7c:	ldr	x8, [x8, #1008]
  414d80:	cbz	x8, 414d88 <wcrtomb@plt+0xff68>
  414d84:	blr	x8
  414d88:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414d8c:	add	x1, x1, #0xd5e
  414d90:	mov	w2, #0x5                   	// #5
  414d94:	mov	x0, xzr
  414d98:	bl	404bf0 <dcgettext@plt>
  414d9c:	mov	x2, x0
  414da0:	mov	w0, #0x1                   	// #1
  414da4:	mov	w1, wzr
  414da8:	mov	x3, x19
  414dac:	bl	4041f0 <error@plt>
  414db0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  414db4:	mov	w9, #0x2                   	// #2
  414db8:	str	w9, [x8, #3456]
  414dbc:	ldr	x0, [x22, #2248]
  414dc0:	bl	4042d0 <ferror_unlocked@plt>
  414dc4:	cbz	w0, 414dd0 <wcrtomb@plt+0xffb0>
  414dc8:	ldr	x0, [x21, #832]
  414dcc:	bl	4281b8 <wcrtomb@plt+0x23398>
  414dd0:	ldr	x0, [x29, #24]
  414dd4:	bl	4049d0 <free@plt>
  414dd8:	ldp	x20, x19, [sp, #80]
  414ddc:	ldp	x22, x21, [sp, #64]
  414de0:	ldp	x24, x23, [sp, #48]
  414de4:	ldr	x25, [sp, #32]
  414de8:	ldp	x29, x30, [sp, #16]
  414dec:	add	sp, sp, #0x60
  414df0:	ret
  414df4:	sub	sp, sp, #0x80
  414df8:	stp	x29, x30, [sp, #32]
  414dfc:	stp	x28, x27, [sp, #48]
  414e00:	stp	x20, x19, [sp, #112]
  414e04:	add	x29, sp, #0x20
  414e08:	mov	w19, w0
  414e0c:	cmp	w0, #0x1
  414e10:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  414e14:	stp	x26, x25, [sp, #64]
  414e18:	stp	x24, x23, [sp, #80]
  414e1c:	stp	x22, x21, [sp, #96]
  414e20:	stur	xzr, [x29, #-8]
  414e24:	str	xzr, [sp, #16]
  414e28:	b.ne	414e4c <wcrtomb@plt+0x1002c>  // b.any
  414e2c:	ldr	x2, [x27, #2248]
  414e30:	sub	x0, x29, #0x8
  414e34:	add	x1, sp, #0x10
  414e38:	bl	4049a0 <getline@plt>
  414e3c:	cmp	x0, #0x0
  414e40:	b.le	415110 <wcrtomb@plt+0x102f0>
  414e44:	mov	w20, #0x2                   	// #2
  414e48:	b	414e68 <wcrtomb@plt+0x10048>
  414e4c:	mov	x0, x1
  414e50:	bl	404780 <strdup@plt>
  414e54:	stur	x0, [x29, #-8]
  414e58:	bl	404190 <strlen@plt>
  414e5c:	add	x8, x0, #0x1
  414e60:	mov	w20, #0x1                   	// #1
  414e64:	str	x8, [sp, #16]
  414e68:	ldur	x0, [x29, #-8]
  414e6c:	add	x1, sp, #0x8
  414e70:	mov	w2, wzr
  414e74:	bl	419e1c <wcrtomb@plt+0x14ffc>
  414e78:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414e7c:	add	x8, x8, #0x28
  414e80:	stp	x0, x1, [x8]
  414e84:	bl	41963c <wcrtomb@plt+0x1481c>
  414e88:	tbz	w0, #0, 415238 <wcrtomb@plt+0x10418>
  414e8c:	cmp	w19, #0x1
  414e90:	b.ne	414f70 <wcrtomb@plt+0x10150>  // b.any
  414e94:	ldr	x8, [sp, #8]
  414e98:	ldrb	w9, [x8]
  414e9c:	cbz	w9, 414f70 <wcrtomb@plt+0x10150>
  414ea0:	add	x22, x8, #0x1
  414ea4:	bl	404d00 <__errno_location@plt>
  414ea8:	mov	x21, x0
  414eac:	str	wzr, [x0]
  414eb0:	add	x1, sp, #0x8
  414eb4:	mov	w2, #0xa                   	// #10
  414eb8:	mov	x0, x22
  414ebc:	bl	404840 <strtoumax@plt>
  414ec0:	mov	w8, #0xc9ff                	// #51711
  414ec4:	movk	w8, #0x3b9a, lsl #16
  414ec8:	cmp	x0, x8
  414ecc:	b.ls	414ee0 <wcrtomb@plt+0x100c0>  // b.plast
  414ed0:	ldr	w8, [x21]
  414ed4:	cbnz	w8, 414ee0 <wcrtomb@plt+0x100c0>
  414ed8:	mov	w8, #0x22                  	// #34
  414edc:	str	w8, [x21]
  414ee0:	ldr	w8, [x21]
  414ee4:	cbnz	w8, 414ef4 <wcrtomb@plt+0x100d4>
  414ee8:	ldr	x8, [sp, #8]
  414eec:	cmp	x22, x8
  414ef0:	b.ne	414f68 <wcrtomb@plt+0x10148>  // b.any
  414ef4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414ef8:	ldr	x8, [x8, #1008]
  414efc:	cbz	x8, 414f04 <wcrtomb@plt+0x100e4>
  414f00:	blr	x8
  414f04:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414f08:	ldr	x0, [x8, #832]
  414f0c:	ldr	w21, [x21]
  414f10:	bl	43beac <argp_usage@@Base+0xa2b0>
  414f14:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  414f18:	mov	x22, x0
  414f1c:	add	x1, x1, #0xe5f
  414f20:	mov	w2, #0x5                   	// #5
  414f24:	mov	x0, xzr
  414f28:	bl	404bf0 <dcgettext@plt>
  414f2c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x12da0>
  414f30:	mov	x5, x0
  414f34:	add	x2, x2, #0xe54
  414f38:	mov	w0, wzr
  414f3c:	mov	w1, w21
  414f40:	mov	x3, x22
  414f44:	mov	x4, x20
  414f48:	bl	4041f0 <error@plt>
  414f4c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  414f50:	mov	w9, #0x2                   	// #2
  414f54:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  414f58:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  414f5c:	mov	x0, #0xffffffffffffffff    	// #-1
  414f60:	str	w9, [x8, #3456]
  414f64:	str	x11, [x10, #40]
  414f68:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  414f6c:	str	x0, [x8, #48]
  414f70:	ldr	x2, [x27, #2248]
  414f74:	sub	x0, x29, #0x8
  414f78:	add	x1, sp, #0x10
  414f7c:	bl	4049a0 <getline@plt>
  414f80:	ldur	x8, [x29, #-8]
  414f84:	cmp	w0, #0x1
  414f88:	b.lt	415120 <wcrtomb@plt+0x10300>  // b.tstop
  414f8c:	mov	w28, #0xc9ff                	// #51711
  414f90:	movk	w28, #0x3b9a, lsl #16
  414f94:	add	x20, x20, #0x1
  414f98:	sub	w9, w0, #0x1
  414f9c:	ldrb	w26, [x8]
  414fa0:	sxtw	x9, w9
  414fa4:	ldrb	w10, [x8, x9]
  414fa8:	cmp	w26, #0x2b
  414fac:	cinc	x0, x8, eq  // eq = none
  414fb0:	cmp	w10, #0xa
  414fb4:	b.ne	414fbc <wcrtomb@plt+0x1019c>  // b.any
  414fb8:	strb	wzr, [x8, x9]
  414fbc:	cmp	w19, #0x1
  414fc0:	b.ne	415048 <wcrtomb@plt+0x10228>  // b.any
  414fc4:	add	x1, sp, #0x8
  414fc8:	mov	w2, wzr
  414fcc:	bl	419e1c <wcrtomb@plt+0x14ffc>
  414fd0:	ldr	x23, [sp, #8]
  414fd4:	mov	x21, x0
  414fd8:	bl	41963c <wcrtomb@plt+0x1481c>
  414fdc:	tbz	w0, #0, 4151d8 <wcrtomb@plt+0x103b8>
  414fe0:	ldrb	w8, [x23]
  414fe4:	cmp	w8, #0x20
  414fe8:	b.ne	4151d8 <wcrtomb@plt+0x103b8>  // b.any
  414fec:	bl	404d00 <__errno_location@plt>
  414ff0:	mov	x24, x0
  414ff4:	str	wzr, [x0]
  414ff8:	add	x1, sp, #0x8
  414ffc:	mov	w2, #0xa                   	// #10
  415000:	mov	x0, x23
  415004:	bl	404840 <strtoumax@plt>
  415008:	mov	x22, x0
  41500c:	cmp	x0, x28
  415010:	b.ls	415024 <wcrtomb@plt+0x10204>  // b.plast
  415014:	ldr	w8, [x24]
  415018:	cbnz	w8, 415024 <wcrtomb@plt+0x10204>
  41501c:	mov	w8, #0x22                  	// #34
  415020:	str	w8, [x24]
  415024:	ldr	w8, [x24]
  415028:	cbnz	w8, 4151a8 <wcrtomb@plt+0x10388>
  41502c:	ldr	x0, [sp, #8]
  415030:	cmp	x23, x0
  415034:	b.eq	4151a8 <wcrtomb@plt+0x10388>  // b.none
  415038:	ldrb	w8, [x0]
  41503c:	cmp	w8, #0x20
  415040:	b.eq	415050 <wcrtomb@plt+0x10230>  // b.none
  415044:	b	4151a8 <wcrtomb@plt+0x10388>
  415048:	mov	x22, xzr
  41504c:	mov	x21, xzr
  415050:	add	x1, sp, #0x8
  415054:	mov	x3, #0xffffffffffffffff    	// #-1
  415058:	mov	x2, xzr
  41505c:	bl	419bcc <wcrtomb@plt+0x14dac>
  415060:	ldr	x25, [sp, #8]
  415064:	mov	x24, x0
  415068:	bl	404d00 <__errno_location@plt>
  41506c:	ldr	w8, [x0]
  415070:	mov	x23, x0
  415074:	cbnz	w8, 415148 <wcrtomb@plt+0x10328>
  415078:	ldrb	w8, [x25]
  41507c:	cmp	w8, #0x20
  415080:	b.ne	415148 <wcrtomb@plt+0x10328>  // b.any
  415084:	add	x1, sp, #0x8
  415088:	mov	x3, #0xffffffffffffffff    	// #-1
  41508c:	mov	x0, x25
  415090:	mov	x2, xzr
  415094:	bl	419bcc <wcrtomb@plt+0x14dac>
  415098:	ldr	w8, [x23]
  41509c:	cbnz	w8, 415178 <wcrtomb@plt+0x10358>
  4150a0:	ldr	x8, [sp, #8]
  4150a4:	ldrb	w9, [x8]
  4150a8:	cmp	w9, #0x20
  4150ac:	b.ne	415178 <wcrtomb@plt+0x10358>  // b.any
  4150b0:	cmp	w26, #0x2b
  4150b4:	add	x26, x8, #0x1
  4150b8:	mov	x25, x0
  4150bc:	mov	x0, x26
  4150c0:	cset	w23, eq  // eq = none
  4150c4:	bl	419728 <wcrtomb@plt+0x14908>
  4150c8:	mov	x0, x26
  4150cc:	mov	x1, x21
  4150d0:	mov	x2, x22
  4150d4:	mov	x3, x24
  4150d8:	mov	x4, x25
  4150dc:	mov	w5, w23
  4150e0:	mov	w6, wzr
  4150e4:	mov	x7, xzr
  4150e8:	bl	4160c8 <wcrtomb@plt+0x112a8>
  4150ec:	ldr	x2, [x27, #2248]
  4150f0:	sub	x0, x29, #0x8
  4150f4:	add	x1, sp, #0x10
  4150f8:	bl	4049a0 <getline@plt>
  4150fc:	ldur	x8, [x29, #-8]
  415100:	cmp	w0, #0x0
  415104:	add	x20, x20, #0x1
  415108:	b.gt	414f98 <wcrtomb@plt+0x10178>
  41510c:	b	415120 <wcrtomb@plt+0x10300>
  415110:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  415114:	ldr	x0, [x8, #832]
  415118:	bl	4281b8 <wcrtomb@plt+0x23398>
  41511c:	ldur	x8, [x29, #-8]
  415120:	mov	x0, x8
  415124:	bl	4049d0 <free@plt>
  415128:	ldp	x20, x19, [sp, #112]
  41512c:	ldp	x22, x21, [sp, #96]
  415130:	ldp	x24, x23, [sp, #80]
  415134:	ldp	x26, x25, [sp, #64]
  415138:	ldp	x28, x27, [sp, #48]
  41513c:	ldp	x29, x30, [sp, #32]
  415140:	add	sp, sp, #0x80
  415144:	ret
  415148:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41514c:	ldr	x8, [x8, #1008]
  415150:	cbz	x8, 415158 <wcrtomb@plt+0x10338>
  415154:	blr	x8
  415158:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41515c:	ldr	x0, [x8, #832]
  415160:	ldr	w19, [x23]
  415164:	bl	43beac <argp_usage@@Base+0xa2b0>
  415168:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  41516c:	mov	x21, x0
  415170:	add	x1, x1, #0xeb4
  415174:	b	415208 <wcrtomb@plt+0x103e8>
  415178:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41517c:	ldr	x8, [x8, #1008]
  415180:	cbz	x8, 415188 <wcrtomb@plt+0x10368>
  415184:	blr	x8
  415188:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41518c:	ldr	x0, [x8, #832]
  415190:	ldr	w19, [x23]
  415194:	bl	43beac <argp_usage@@Base+0xa2b0>
  415198:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  41519c:	mov	x21, x0
  4151a0:	add	x1, x1, #0xeca
  4151a4:	b	415208 <wcrtomb@plt+0x103e8>
  4151a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4151ac:	ldr	x8, [x8, #1008]
  4151b0:	cbz	x8, 4151b8 <wcrtomb@plt+0x10398>
  4151b4:	blr	x8
  4151b8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4151bc:	ldr	x0, [x8, #832]
  4151c0:	ldr	w19, [x24]
  4151c4:	bl	43beac <argp_usage@@Base+0xa2b0>
  4151c8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4151cc:	mov	x21, x0
  4151d0:	add	x1, x1, #0xe8c
  4151d4:	b	415208 <wcrtomb@plt+0x103e8>
  4151d8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4151dc:	ldr	x8, [x8, #1008]
  4151e0:	cbz	x8, 4151e8 <wcrtomb@plt+0x103c8>
  4151e4:	blr	x8
  4151e8:	bl	404d00 <__errno_location@plt>
  4151ec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4151f0:	ldr	w19, [x0]
  4151f4:	ldr	x0, [x8, #832]
  4151f8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4151fc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  415200:	mov	x21, x0
  415204:	add	x1, x1, #0xe72
  415208:	mov	w2, #0x5                   	// #5
  41520c:	mov	x0, xzr
  415210:	bl	404bf0 <dcgettext@plt>
  415214:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x12da0>
  415218:	mov	x5, x0
  41521c:	add	x2, x2, #0xe54
  415220:	mov	w0, wzr
  415224:	mov	w1, w19
  415228:	mov	x3, x21
  41522c:	mov	x4, x20
  415230:	bl	4041f0 <error@plt>
  415234:	bl	40dda4 <wcrtomb@plt+0x8f84>
  415238:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41523c:	ldr	x8, [x8, #1008]
  415240:	cbz	x8, 415248 <wcrtomb@plt+0x10428>
  415244:	blr	x8
  415248:	bl	404d00 <__errno_location@plt>
  41524c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  415250:	ldr	w19, [x0]
  415254:	ldr	x0, [x8, #832]
  415258:	bl	43beac <argp_usage@@Base+0xa2b0>
  41525c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  415260:	mov	x21, x0
  415264:	add	x1, x1, #0xe5f
  415268:	b	415208 <wcrtomb@plt+0x103e8>
  41526c:	sub	sp, sp, #0xf0
  415270:	adrp	x3, 43d000 <argp_usage@@Base+0xb404>
  415274:	adrp	x4, 404000 <mbrtowc@plt-0x100>
  415278:	add	x3, x3, #0x1c4
  41527c:	add	x4, x4, #0x9d0
  415280:	add	x0, sp, #0x38
  415284:	mov	x1, xzr
  415288:	mov	x2, xzr
  41528c:	stp	x29, x30, [sp, #144]
  415290:	str	x27, [sp, #160]
  415294:	stp	x26, x25, [sp, #176]
  415298:	stp	x24, x23, [sp, #192]
  41529c:	stp	x22, x21, [sp, #208]
  4152a0:	stp	x20, x19, [sp, #224]
  4152a4:	add	x29, sp, #0x90
  4152a8:	bl	43df40 <_obstack_begin@@Base>
  4152ac:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4152b0:	ldr	x0, [x26, #2248]
  4152b4:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  4152b8:	add	x1, x1, #0x28
  4152bc:	bl	4165b8 <wcrtomb@plt+0x11798>
  4152c0:	adrp	x19, 451000 <_obstack_memory_used@@Base+0x12da0>
  4152c4:	adrp	x20, 456000 <_obstack_memory_used@@Base+0x17da0>
  4152c8:	adrp	x21, 451000 <_obstack_memory_used@@Base+0x12da0>
  4152cc:	add	x19, x19, #0xe2f
  4152d0:	add	x20, x20, #0xb86
  4152d4:	add	x21, x21, #0xe50
  4152d8:	ldr	x0, [x26, #2248]
  4152dc:	add	x4, x29, #0x18
  4152e0:	mov	w3, #0x1                   	// #1
  4152e4:	mov	x1, x19
  4152e8:	mov	x2, xzr
  4152ec:	mov	w22, #0x1                   	// #1
  4152f0:	bl	416684 <wcrtomb@plt+0x11864>
  4152f4:	tbz	w0, #0, 415360 <wcrtomb@plt+0x10540>
  4152f8:	ldr	x0, [x26, #2248]
  4152fc:	ldr	x27, [x29, #24]
  415300:	add	x1, sp, #0x10
  415304:	bl	4165b8 <wcrtomb@plt+0x11798>
  415308:	ldr	x0, [x26, #2248]
  41530c:	add	x4, x29, #0x18
  415310:	mov	x3, #0xffffffffffffffff    	// #-1
  415314:	mov	x1, x20
  415318:	mov	x2, xzr
  41531c:	bl	416684 <wcrtomb@plt+0x11864>
  415320:	tbz	w0, #0, 41535c <wcrtomb@plt+0x1053c>
  415324:	ldr	x0, [x26, #2248]
  415328:	ldr	x22, [x29, #24]
  41532c:	add	x4, x29, #0x18
  415330:	mov	x3, #0xffffffffffffffff    	// #-1
  415334:	mov	x1, x21
  415338:	mov	x2, xzr
  41533c:	bl	416684 <wcrtomb@plt+0x11864>
  415340:	tbz	w0, #0, 41535c <wcrtomb@plt+0x1053c>
  415344:	ldr	x0, [x26, #2248]
  415348:	ldr	x23, [x29, #24]
  41534c:	add	x1, sp, #0x38
  415350:	add	x2, sp, #0x8
  415354:	bl	4169d8 <wcrtomb@plt+0x11bb8>
  415358:	cbz	w0, 415368 <wcrtomb@plt+0x10548>
  41535c:	mov	w22, #0x2                   	// #2
  415360:	cbnz	w22, 415470 <wcrtomb@plt+0x10650>
  415364:	b	4152d8 <wcrtomb@plt+0x104b8>
  415368:	ldp	x24, x8, [sp, #72]
  41536c:	cmp	x8, x24
  415370:	b.ne	415380 <wcrtomb@plt+0x10560>  // b.any
  415374:	ldrb	w8, [sp, #136]
  415378:	orr	w8, w8, #0x2
  41537c:	strb	w8, [sp, #136]
  415380:	ldp	x8, x11, [sp, #80]
  415384:	ldr	x10, [sp, #104]
  415388:	ldr	x9, [sp, #64]
  41538c:	add	x8, x10, x8
  415390:	bic	x8, x8, x10
  415394:	sub	x12, x11, x9
  415398:	sub	x9, x8, x9
  41539c:	cmp	x9, x12
  4153a0:	csel	x8, x11, x8, hi  // hi = pmore
  4153a4:	stp	x8, x8, [sp, #72]
  4153a8:	ldr	x0, [x26, #2248]
  4153ac:	add	x1, sp, #0x38
  4153b0:	add	x2, sp, #0x8
  4153b4:	bl	4169d8 <wcrtomb@plt+0x11bb8>
  4153b8:	cbnz	w0, 4153c8 <wcrtomb@plt+0x105a8>
  4153bc:	ldr	x8, [sp, #8]
  4153c0:	cmp	x8, #0x1
  4153c4:	b.hi	4153a8 <wcrtomb@plt+0x10588>  // b.pmore
  4153c8:	ldr	x0, [x26, #2248]
  4153cc:	bl	4047a0 <getc_unlocked@plt>
  4153d0:	cbnz	w0, 415498 <wcrtomb@plt+0x10678>
  4153d4:	ldp	x25, x8, [sp, #72]
  4153d8:	cmp	x8, x25
  4153dc:	b.ne	4153ec <wcrtomb@plt+0x105cc>  // b.any
  4153e0:	ldrb	w8, [sp, #136]
  4153e4:	orr	w8, w8, #0x2
  4153e8:	strb	w8, [sp, #136]
  4153ec:	ldr	x8, [sp, #104]
  4153f0:	ldp	x9, x11, [sp, #80]
  4153f4:	ldr	x10, [sp, #64]
  4153f8:	ldp	x1, x2, [sp, #16]
  4153fc:	cmp	x27, #0x0
  415400:	add	x9, x8, x9
  415404:	bic	x8, x9, x8
  415408:	sub	x9, x11, x10
  41540c:	sub	x10, x8, x10
  415410:	cset	w5, ne  // ne = any
  415414:	cmp	x10, x9
  415418:	csel	x8, x11, x8, hi  // hi = pmore
  41541c:	mov	x0, x24
  415420:	mov	x3, x22
  415424:	mov	x4, x23
  415428:	mov	w6, wzr
  41542c:	mov	x7, x25
  415430:	stp	x8, x8, [sp, #72]
  415434:	bl	4160c8 <wcrtomb@plt+0x112a8>
  415438:	ldr	x8, [sp, #64]
  41543c:	cmp	x25, x8
  415440:	b.ls	41545c <wcrtomb@plt+0x1063c>  // b.plast
  415444:	ldr	x8, [sp, #88]
  415448:	cmp	x25, x8
  41544c:	b.cs	41545c <wcrtomb@plt+0x1063c>  // b.hs, b.nlast
  415450:	mov	w22, wzr
  415454:	stp	x25, x25, [sp, #72]
  415458:	b	415360 <wcrtomb@plt+0x10540>
  41545c:	add	x0, sp, #0x38
  415460:	mov	x1, x25
  415464:	bl	43e1d8 <_obstack_free@@Base>
  415468:	mov	w22, wzr
  41546c:	b	415360 <wcrtomb@plt+0x10540>
  415470:	cmp	w22, #0x2
  415474:	b.eq	415520 <wcrtomb@plt+0x10700>  // b.none
  415478:	ldp	x20, x19, [sp, #224]
  41547c:	ldp	x22, x21, [sp, #208]
  415480:	ldp	x24, x23, [sp, #192]
  415484:	ldp	x26, x25, [sp, #176]
  415488:	ldr	x27, [sp, #160]
  41548c:	ldp	x29, x30, [sp, #144]
  415490:	add	sp, sp, #0xf0
  415494:	ret
  415498:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41549c:	ldr	x8, [x8, #1008]
  4154a0:	cbz	x8, 4154a8 <wcrtomb@plt+0x10688>
  4154a4:	blr	x8
  4154a8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4154ac:	add	x1, x1, #0xedf
  4154b0:	mov	w2, #0x5                   	// #5
  4154b4:	mov	x0, xzr
  4154b8:	bl	404bf0 <dcgettext@plt>
  4154bc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4154c0:	ldr	x8, [x8, #832]
  4154c4:	mov	x19, x0
  4154c8:	mov	x0, x8
  4154cc:	bl	43beac <argp_usage@@Base+0xa2b0>
  4154d0:	ldr	x8, [x26, #2248]
  4154d4:	mov	x20, x0
  4154d8:	mov	x0, x8
  4154dc:	bl	404b00 <ftello@plt>
  4154e0:	add	x1, sp, #0x20
  4154e4:	bl	43647c <argp_usage@@Base+0x4880>
  4154e8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4154ec:	mov	x21, x0
  4154f0:	add	x1, x1, #0xeef
  4154f4:	mov	w2, #0x5                   	// #5
  4154f8:	mov	x0, xzr
  4154fc:	bl	404bf0 <dcgettext@plt>
  415500:	mov	x5, x0
  415504:	mov	w0, wzr
  415508:	mov	w1, wzr
  41550c:	mov	x2, x19
  415510:	mov	x3, x20
  415514:	mov	x4, x21
  415518:	bl	4041f0 <error@plt>
  41551c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  415520:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  415524:	ldr	x8, [x8, #1008]
  415528:	cbz	x8, 415530 <wcrtomb@plt+0x10710>
  41552c:	blr	x8
  415530:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  415534:	ldr	x0, [x8, #832]
  415538:	bl	43beac <argp_usage@@Base+0xa2b0>
  41553c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  415540:	mov	x19, x0
  415544:	add	x1, x1, #0xf09
  415548:	mov	w2, #0x5                   	// #5
  41554c:	mov	x0, xzr
  415550:	bl	404bf0 <dcgettext@plt>
  415554:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  415558:	mov	x4, x0
  41555c:	add	x2, x2, #0x5d1
  415560:	mov	w0, wzr
  415564:	mov	w1, wzr
  415568:	mov	x3, x19
  41556c:	bl	4041f0 <error@plt>
  415570:	bl	40dda4 <wcrtomb@plt+0x8f84>
  415574:	sub	sp, sp, #0x50
  415578:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41557c:	stp	x20, x19, [sp, #64]
  415580:	ldr	x19, [x8, #2248]
  415584:	stp	x29, x30, [sp, #32]
  415588:	stp	x22, x21, [sp, #48]
  41558c:	add	x29, sp, #0x20
  415590:	cbz	x19, 41569c <wcrtomb@plt+0x1087c>
  415594:	mov	x0, x19
  415598:	mov	x1, xzr
  41559c:	mov	w2, wzr
  4155a0:	bl	404990 <fseeko@plt>
  4155a4:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  4155a8:	cbz	w0, 4155b4 <wcrtomb@plt+0x10794>
  4155ac:	ldr	x0, [x21, #832]
  4155b0:	bl	42848c <wcrtomb@plt+0x2366c>
  4155b4:	mov	x0, x19
  4155b8:	bl	4043f0 <fileno@plt>
  4155bc:	bl	41fdd0 <wcrtomb@plt+0x1afb0>
  4155c0:	cbz	w0, 4155cc <wcrtomb@plt+0x107ac>
  4155c4:	ldr	x0, [x21, #832]
  4155c8:	bl	4286e4 <wcrtomb@plt+0x238c4>
  4155cc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x12da0>
  4155d0:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x12da0>
  4155d4:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x12da0>
  4155d8:	add	x2, x2, #0xd8a
  4155dc:	add	x3, x3, #0xd3a
  4155e0:	add	x4, x4, #0xd94
  4155e4:	mov	w1, #0x1                   	// #1
  4155e8:	mov	w5, #0x2                   	// #2
  4155ec:	mov	x0, x19
  4155f0:	bl	404910 <__fprintf_chk@plt>
  4155f4:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  4155f8:	add	x22, x22, #0x2c8
  4155fc:	ldr	x0, [x22]
  415600:	add	x1, sp, #0x8
  415604:	bl	4363ec <argp_usage@@Base+0x47f0>
  415608:	mov	x20, x0
  41560c:	bl	404190 <strlen@plt>
  415610:	add	x1, x0, #0x1
  415614:	mov	w2, #0x1                   	// #1
  415618:	mov	x0, x20
  41561c:	mov	x3, x19
  415620:	bl	404170 <fwrite_unlocked@plt>
  415624:	ldr	x0, [x22, #8]
  415628:	add	x1, sp, #0x8
  41562c:	bl	43650c <argp_usage@@Base+0x4910>
  415630:	mov	x20, x0
  415634:	bl	404190 <strlen@plt>
  415638:	add	x1, x0, #0x1
  41563c:	mov	w2, #0x1                   	// #1
  415640:	mov	x0, x20
  415644:	mov	x3, x19
  415648:	bl	404170 <fwrite_unlocked@plt>
  41564c:	mov	x0, x19
  415650:	bl	4042d0 <ferror_unlocked@plt>
  415654:	cbnz	w0, 415674 <wcrtomb@plt+0x10854>
  415658:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41565c:	ldr	x0, [x8, #2216]
  415660:	cbz	x0, 415674 <wcrtomb@plt+0x10854>
  415664:	adrp	x1, 415000 <wcrtomb@plt+0x101e0>
  415668:	add	x1, x1, #0x6b0
  41566c:	mov	x2, x19
  415670:	bl	435048 <argp_usage@@Base+0x344c>
  415674:	mov	x0, x19
  415678:	bl	4042d0 <ferror_unlocked@plt>
  41567c:	cbz	w0, 415688 <wcrtomb@plt+0x10868>
  415680:	ldr	x0, [x21, #832]
  415684:	bl	428784 <wcrtomb@plt+0x23964>
  415688:	mov	x0, x19
  41568c:	bl	404470 <fclose@plt>
  415690:	cbz	w0, 41569c <wcrtomb@plt+0x1087c>
  415694:	ldr	x0, [x21, #832]
  415698:	bl	428014 <wcrtomb@plt+0x231f4>
  41569c:	ldp	x20, x19, [sp, #64]
  4156a0:	ldp	x22, x21, [sp, #48]
  4156a4:	ldp	x29, x30, [sp, #32]
  4156a8:	add	sp, sp, #0x50
  4156ac:	ret
  4156b0:	sub	sp, sp, #0x50
  4156b4:	stp	x29, x30, [sp, #32]
  4156b8:	stp	x22, x21, [sp, #48]
  4156bc:	stp	x20, x19, [sp, #64]
  4156c0:	ldr	w8, [x0, #60]
  4156c4:	mov	x19, x1
  4156c8:	add	x29, sp, #0x20
  4156cc:	tbz	w8, #2, 415868 <wcrtomb@plt+0x10a48>
  4156d0:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x15da0>
  4156d4:	adrp	x10, 457000 <_obstack_memory_used@@Base+0x18da0>
  4156d8:	add	x9, x9, #0x645
  4156dc:	add	x10, x10, #0xd4b
  4156e0:	tst	w8, #0x2
  4156e4:	mov	x20, x0
  4156e8:	mov	x21, xzr
  4156ec:	csel	x22, x10, x9, eq  // eq = none
  4156f0:	ldrb	w0, [x22, x21]
  4156f4:	mov	x1, x19
  4156f8:	bl	404400 <putc_unlocked@plt>
  4156fc:	cmn	w0, #0x1
  415700:	b.eq	415710 <wcrtomb@plt+0x108f0>  // b.none
  415704:	add	x21, x21, #0x1
  415708:	cmp	x21, #0x2
  41570c:	b.ne	4156f0 <wcrtomb@plt+0x108d0>  // b.any
  415710:	ldr	x0, [x20, #8]
  415714:	add	x3, sp, #0x8
  415718:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41571c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  415720:	bl	419ba0 <wcrtomb@plt+0x14d80>
  415724:	mov	x21, x0
  415728:	bl	404190 <strlen@plt>
  41572c:	add	x1, x0, #0x1
  415730:	mov	w2, #0x1                   	// #1
  415734:	mov	x0, x21
  415738:	mov	x3, x19
  41573c:	bl	404170 <fwrite_unlocked@plt>
  415740:	ldr	x0, [x20, #16]
  415744:	add	x1, sp, #0x8
  415748:	bl	4363ec <argp_usage@@Base+0x47f0>
  41574c:	mov	x21, x0
  415750:	bl	404190 <strlen@plt>
  415754:	add	x1, x0, #0x1
  415758:	mov	w2, #0x1                   	// #1
  41575c:	mov	x0, x21
  415760:	mov	x3, x19
  415764:	bl	404170 <fwrite_unlocked@plt>
  415768:	ldr	x0, [x20, #24]
  41576c:	add	x3, sp, #0x8
  415770:	mov	x2, #0xffffffffffffffff    	// #-1
  415774:	mov	x1, xzr
  415778:	bl	419ba0 <wcrtomb@plt+0x14d80>
  41577c:	mov	x21, x0
  415780:	bl	404190 <strlen@plt>
  415784:	add	x1, x0, #0x1
  415788:	mov	w2, #0x1                   	// #1
  41578c:	mov	x0, x21
  415790:	mov	x3, x19
  415794:	bl	404170 <fwrite_unlocked@plt>
  415798:	ldr	x0, [x20, #32]
  41579c:	add	x3, sp, #0x8
  4157a0:	mov	x2, #0xffffffffffffffff    	// #-1
  4157a4:	mov	x1, xzr
  4157a8:	bl	419ba0 <wcrtomb@plt+0x14d80>
  4157ac:	mov	x21, x0
  4157b0:	bl	404190 <strlen@plt>
  4157b4:	add	x1, x0, #0x1
  4157b8:	mov	w2, #0x1                   	// #1
  4157bc:	mov	x0, x21
  4157c0:	mov	x3, x19
  4157c4:	bl	404170 <fwrite_unlocked@plt>
  4157c8:	ldr	x21, [x20, #88]
  4157cc:	mov	x0, x21
  4157d0:	bl	404190 <strlen@plt>
  4157d4:	add	x1, x0, #0x1
  4157d8:	mov	w2, #0x1                   	// #1
  4157dc:	mov	x0, x21
  4157e0:	mov	x3, x19
  4157e4:	bl	404170 <fwrite_unlocked@plt>
  4157e8:	ldr	x0, [x20, #40]
  4157ec:	cbz	x0, 41583c <wcrtomb@plt+0x10a1c>
  4157f0:	mov	x2, sp
  4157f4:	mov	w1, wzr
  4157f8:	bl	414648 <wcrtomb@plt+0xf828>
  4157fc:	cbz	x0, 415834 <wcrtomb@plt+0x10a14>
  415800:	ldr	x20, [sp]
  415804:	mov	x21, x0
  415808:	mov	x0, x21
  41580c:	bl	404190 <strlen@plt>
  415810:	add	x1, x0, #0x1
  415814:	mov	w2, #0x1                   	// #1
  415818:	mov	x0, x21
  41581c:	mov	x3, x19
  415820:	bl	404170 <fwrite_unlocked@plt>
  415824:	mov	x0, x20
  415828:	bl	414690 <wcrtomb@plt+0xf870>
  41582c:	mov	x21, x0
  415830:	cbnz	x0, 415808 <wcrtomb@plt+0x109e8>
  415834:	ldr	x0, [sp]
  415838:	bl	4049d0 <free@plt>
  41583c:	adrp	x21, 451000 <_obstack_memory_used@@Base+0x12da0>
  415840:	mov	x20, xzr
  415844:	add	x21, x21, #0xcc0
  415848:	ldrb	w0, [x21, x20]
  41584c:	mov	x1, x19
  415850:	bl	404400 <putc_unlocked@plt>
  415854:	cmn	w0, #0x1
  415858:	b.eq	415868 <wcrtomb@plt+0x10a48>  // b.none
  41585c:	add	x20, x20, #0x1
  415860:	cmp	x20, #0x2
  415864:	b.ne	415848 <wcrtomb@plt+0x10a28>  // b.any
  415868:	mov	x0, x19
  41586c:	bl	4042d0 <ferror_unlocked@plt>
  415870:	ldp	x20, x19, [sp, #64]
  415874:	ldp	x22, x21, [sp, #48]
  415878:	ldp	x29, x30, [sp, #32]
  41587c:	cmp	w0, #0x0
  415880:	cset	w0, eq  // eq = none
  415884:	add	sp, sp, #0x50
  415888:	ret
  41588c:	stp	x29, x30, [sp, #-32]!
  415890:	ldrb	w8, [x0, #376]
  415894:	str	x19, [sp, #16]
  415898:	mov	x19, x0
  41589c:	mov	x29, sp
  4158a0:	cbz	w8, 4158b4 <wcrtomb@plt+0x10a94>
  4158a4:	ldr	x8, [x19, #384]
  4158a8:	cbnz	x8, 4158b4 <wcrtomb@plt+0x10a94>
  4158ac:	mov	x0, x19
  4158b0:	bl	4158c4 <wcrtomb@plt+0x10aa4>
  4158b4:	ldrb	w0, [x19, #376]
  4158b8:	ldr	x19, [sp, #16]
  4158bc:	ldp	x29, x30, [sp], #32
  4158c0:	ret
  4158c4:	stp	x29, x30, [sp, #-96]!
  4158c8:	stp	x28, x27, [sp, #16]
  4158cc:	stp	x26, x25, [sp, #32]
  4158d0:	stp	x24, x23, [sp, #48]
  4158d4:	stp	x22, x21, [sp, #64]
  4158d8:	stp	x20, x19, [sp, #80]
  4158dc:	ldr	x20, [x0, #136]
  4158e0:	mov	x19, x0
  4158e4:	mov	x29, sp
  4158e8:	mov	x0, x20
  4158ec:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4158f0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4158f4:	ldr	x8, [x8, #4072]
  4158f8:	mov	x21, x0
  4158fc:	mov	x0, x8
  415900:	bl	405744 <wcrtomb@plt+0x924>
  415904:	mov	x0, x19
  415908:	bl	404fe8 <wcrtomb@plt+0x1c8>
  41590c:	cbz	x20, 4159ac <wcrtomb@plt+0x10b8c>
  415910:	adrp	x22, 450000 <_obstack_memory_used@@Base+0x11da0>
  415914:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  415918:	add	x22, x22, #0xc61
  41591c:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  415920:	mov	w28, #0x2                   	// #2
  415924:	mov	x23, x21
  415928:	b	415988 <wcrtomb@plt+0x10b68>
  41592c:	mov	w2, #0x5                   	// #5
  415930:	mov	x0, xzr
  415934:	mov	x1, x22
  415938:	bl	404bf0 <dcgettext@plt>
  41593c:	mov	x2, x0
  415940:	mov	w0, #0x1                   	// #1
  415944:	mov	w1, wzr
  415948:	bl	4041f0 <error@plt>
  41594c:	str	w28, [x27, #3456]
  415950:	mov	x0, x24
  415954:	bl	405788 <wcrtomb@plt+0x968>
  415958:	cmp	x0, x20
  41595c:	csel	x25, x20, x0, hi  // hi = pmore
  415960:	mov	x0, x23
  415964:	mov	x1, x24
  415968:	mov	x2, x25
  41596c:	bl	404110 <memcpy@plt>
  415970:	add	x8, x24, x25
  415974:	sub	x0, x8, #0x1
  415978:	add	x23, x23, x25
  41597c:	bl	405744 <wcrtomb@plt+0x924>
  415980:	subs	x20, x20, x25
  415984:	b.eq	4159ac <wcrtomb@plt+0x10b8c>  // b.none
  415988:	mov	x0, x20
  41598c:	bl	4050a4 <wcrtomb@plt+0x284>
  415990:	bl	4055d4 <wcrtomb@plt+0x7b4>
  415994:	mov	x24, x0
  415998:	cbnz	x0, 415950 <wcrtomb@plt+0x10b30>
  41599c:	ldr	x8, [x26, #1008]
  4159a0:	cbz	x8, 41592c <wcrtomb@plt+0x10b0c>
  4159a4:	blr	x8
  4159a8:	b	41592c <wcrtomb@plt+0x10b0c>
  4159ac:	bl	40500c <wcrtomb@plt+0x1ec>
  4159b0:	mov	w8, #0x1                   	// #1
  4159b4:	str	x21, [x19, #384]
  4159b8:	strb	w8, [x19, #377]
  4159bc:	ldp	x20, x19, [sp, #80]
  4159c0:	ldp	x22, x21, [sp, #64]
  4159c4:	ldp	x24, x23, [sp, #48]
  4159c8:	ldp	x26, x25, [sp, #32]
  4159cc:	ldp	x28, x27, [sp, #16]
  4159d0:	ldp	x29, x30, [sp], #96
  4159d4:	ret
  4159d8:	stp	x29, x30, [sp, #-16]!
  4159dc:	mov	x29, sp
  4159e0:	bl	4159f4 <wcrtomb@plt+0x10bd4>
  4159e4:	tbnz	w0, #0, 4159ec <wcrtomb@plt+0x10bcc>
  4159e8:	bl	417ab0 <wcrtomb@plt+0x12c90>
  4159ec:	ldp	x29, x30, [sp], #16
  4159f0:	ret
  4159f4:	sub	sp, sp, #0xf0
  4159f8:	stp	x20, x19, [sp, #224]
  4159fc:	mov	x20, x0
  415a00:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  415a04:	add	x0, x0, #0x60
  415a08:	stp	x29, x30, [sp, #144]
  415a0c:	stp	x28, x27, [sp, #160]
  415a10:	stp	x26, x25, [sp, #176]
  415a14:	stp	x24, x23, [sp, #192]
  415a18:	stp	x22, x21, [sp, #208]
  415a1c:	add	x29, sp, #0x90
  415a20:	bl	41588c <wcrtomb@plt+0x10a6c>
  415a24:	tbz	w0, #0, 415e54 <wcrtomb@plt+0x11034>
  415a28:	mov	x0, x20
  415a2c:	mov	w1, wzr
  415a30:	bl	41a230 <wcrtomb@plt+0x15410>
  415a34:	cbz	x0, 415e58 <wcrtomb@plt+0x11038>
  415a38:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  415a3c:	mov	x19, x0
  415a40:	ldr	x0, [x22, #480]
  415a44:	bl	416aac <wcrtomb@plt+0x11c8c>
  415a48:	tbz	w0, #0, 415e54 <wcrtomb@plt+0x11034>
  415a4c:	ldr	x22, [x22, #480]
  415a50:	mov	w28, #0x5858                	// #22616
  415a54:	adrp	x25, 451000 <_obstack_memory_used@@Base+0x12da0>
  415a58:	mov	x21, xzr
  415a5c:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  415a60:	mov	w27, #0x2f                  	// #47
  415a64:	movk	w28, #0x58, lsl #16
  415a68:	add	x25, x25, #0xfb9
  415a6c:	str	x19, [sp, #8]
  415a70:	b	415ad0 <wcrtomb@plt+0x10cb0>
  415a74:	add	x23, x22, #0x1
  415a78:	mov	x0, x23
  415a7c:	bl	404190 <strlen@plt>
  415a80:	mov	x24, x0
  415a84:	add	x1, x0, #0xc
  415a88:	mov	x0, x21
  415a8c:	bl	43d21c <argp_usage@@Base+0xb620>
  415a90:	mov	x1, x23
  415a94:	mov	x2, x24
  415a98:	mov	x21, x0
  415a9c:	bl	404110 <memcpy@plt>
  415aa0:	ldr	x8, [x25]
  415aa4:	add	x9, x21, x24
  415aa8:	mov	x0, x21
  415aac:	strb	w27, [x9]
  415ab0:	str	w28, [x9, #8]
  415ab4:	stur	x8, [x9, #1]
  415ab8:	bl	404860 <mkdtemp@plt>
  415abc:	cbz	x0, 415dec <wcrtomb@plt+0x10fcc>
  415ac0:	mov	x0, x22
  415ac4:	bl	404190 <strlen@plt>
  415ac8:	add	x8, x0, x22
  415acc:	add	x22, x8, #0x1
  415ad0:	ldrb	w8, [x22]
  415ad4:	cmp	w8, #0x52
  415ad8:	b.eq	415aec <wcrtomb@plt+0x10ccc>  // b.none
  415adc:	cmp	w8, #0x58
  415ae0:	b.eq	415a74 <wcrtomb@plt+0x10c54>  // b.none
  415ae4:	cbnz	w8, 415ac0 <wcrtomb@plt+0x10ca0>
  415ae8:	b	415b6c <wcrtomb@plt+0x10d4c>
  415aec:	mov	x0, x22
  415af0:	bl	404190 <strlen@plt>
  415af4:	add	x19, x0, x22
  415af8:	ldrb	w8, [x22, #1]!
  415afc:	add	x23, x19, #0x2
  415b00:	mov	x24, x22
  415b04:	cbz	w8, 415b1c <wcrtomb@plt+0x10cfc>
  415b08:	ldrb	w2, [x26, #952]
  415b0c:	mov	x0, x24
  415b10:	mov	w1, wzr
  415b14:	bl	428898 <wcrtomb@plt+0x23a78>
  415b18:	mov	x24, x0
  415b1c:	ldrb	w8, [x23]
  415b20:	cbz	w8, 415b38 <wcrtomb@plt+0x10d18>
  415b24:	ldrb	w2, [x26, #952]
  415b28:	mov	x0, x23
  415b2c:	mov	w1, wzr
  415b30:	bl	428898 <wcrtomb@plt+0x23a78>
  415b34:	mov	x23, x0
  415b38:	ldrb	w8, [x24]
  415b3c:	add	x22, x19, #0x1
  415b40:	cbz	w8, 415b54 <wcrtomb@plt+0x10d34>
  415b44:	ldrb	w8, [x23]
  415b48:	cmp	w8, #0x0
  415b4c:	csel	x23, x21, x23, eq  // eq = none
  415b50:	b	415b58 <wcrtomb@plt+0x10d38>
  415b54:	mov	x24, x21
  415b58:	mov	x0, x24
  415b5c:	mov	x1, x23
  415b60:	bl	40f104 <wcrtomb@plt+0xa2e4>
  415b64:	tbnz	w0, #0, 415ac0 <wcrtomb@plt+0x10ca0>
  415b68:	b	415e44 <wcrtomb@plt+0x11024>
  415b6c:	mov	x0, x21
  415b70:	bl	4049d0 <free@plt>
  415b74:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  415b78:	ldr	x0, [x8, #480]
  415b7c:	bl	414ad0 <wcrtomb@plt+0xfcb0>
  415b80:	ldr	x28, [sp, #8]
  415b84:	mov	x21, x0
  415b88:	mov	x22, xzr
  415b8c:	ldrb	w8, [x28]
  415b90:	cbz	w8, 415dcc <wcrtomb@plt+0x10fac>
  415b94:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  415b98:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  415b9c:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  415ba0:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  415ba4:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  415ba8:	b	415bf4 <wcrtomb@plt+0x10dd4>
  415bac:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  415bb0:	mov	w2, #0x5                   	// #5
  415bb4:	mov	x0, xzr
  415bb8:	add	x1, x1, #0xff8
  415bbc:	bl	404bf0 <dcgettext@plt>
  415bc0:	mov	x23, x0
  415bc4:	mov	x0, x22
  415bc8:	bl	43beac <argp_usage@@Base+0xa2b0>
  415bcc:	mov	x3, x0
  415bd0:	mov	w0, wzr
  415bd4:	mov	w1, wzr
  415bd8:	mov	x2, x23
  415bdc:	bl	4041f0 <error@plt>
  415be0:	mov	x0, x28
  415be4:	bl	404190 <strlen@plt>
  415be8:	add	x28, x0, x28
  415bec:	ldrb	w8, [x28, #1]!
  415bf0:	cbz	w8, 415dcc <wcrtomb@plt+0x10fac>
  415bf4:	mov	x0, x22
  415bf8:	bl	4049d0 <free@plt>
  415bfc:	mov	x0, x20
  415c00:	mov	x1, x28
  415c04:	bl	41c5e0 <wcrtomb@plt+0x177c0>
  415c08:	add	x1, sp, #0x10
  415c0c:	mov	x22, x0
  415c10:	bl	41a52c <wcrtomb@plt+0x1570c>
  415c14:	cbz	w0, 415c40 <wcrtomb@plt+0x10e20>
  415c18:	bl	404d00 <__errno_location@plt>
  415c1c:	ldr	w8, [x0]
  415c20:	cmp	w8, #0x2
  415c24:	b.eq	415be0 <wcrtomb@plt+0x10dc0>  // b.none
  415c28:	mov	x0, x22
  415c2c:	bl	41ad6c <wcrtomb@plt+0x15f4c>
  415c30:	ldr	x8, [x25, #1008]
  415c34:	cbz	x8, 415bac <wcrtomb@plt+0x10d8c>
  415c38:	blr	x8
  415c3c:	b	415bac <wcrtomb@plt+0x10d8c>
  415c40:	mov	x0, x21
  415c44:	mov	x1, x28
  415c48:	bl	4162f0 <wcrtomb@plt+0x114d0>
  415c4c:	cbz	x0, 415c8c <wcrtomb@plt+0x10e6c>
  415c50:	ldrb	w8, [x0]
  415c54:	cmp	w8, #0x59
  415c58:	b.eq	415c7c <wcrtomb@plt+0x10e5c>  // b.none
  415c5c:	cmp	w8, #0x44
  415c60:	b.ne	415be0 <wcrtomb@plt+0x10dc0>  // b.any
  415c64:	ldr	w9, [sp, #32]
  415c68:	and	w9, w9, #0xf000
  415c6c:	cmp	w9, #0x4, lsl #12
  415c70:	b.ne	415c8c <wcrtomb@plt+0x10e6c>  // b.any
  415c74:	cmp	w8, #0x59
  415c78:	b.ne	415be0 <wcrtomb@plt+0x10dc0>  // b.any
  415c7c:	ldr	w8, [sp, #32]
  415c80:	and	w8, w8, #0xf000
  415c84:	cmp	w8, #0x4, lsl #12
  415c88:	b.ne	415be0 <wcrtomb@plt+0x10dc0>  // b.any
  415c8c:	ldrb	w8, [x24, #85]
  415c90:	cbz	w8, 415ca4 <wcrtomb@plt+0x10e84>
  415c94:	ldr	x8, [sp, #16]
  415c98:	ldr	x9, [x27, #824]
  415c9c:	cmp	x8, x9
  415ca0:	b.ne	415dac <wcrtomb@plt+0x10f8c>  // b.any
  415ca4:	ldrb	w8, [x26, #592]
  415ca8:	cbz	w8, 415cc0 <wcrtomb@plt+0x10ea0>
  415cac:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  415cb0:	add	x0, x0, #0x98e
  415cb4:	mov	x1, x22
  415cb8:	bl	4211d4 <wcrtomb@plt+0x1c3b4>
  415cbc:	cbz	w0, 415be0 <wcrtomb@plt+0x10dc0>
  415cc0:	ldr	w8, [x19, #644]
  415cc4:	cbz	w8, 415d40 <wcrtomb@plt+0x10f20>
  415cc8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  415ccc:	ldr	x8, [x8, #3928]
  415cd0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  415cd4:	mov	w2, #0x5                   	// #5
  415cd8:	mov	x0, xzr
  415cdc:	add	x1, x1, #0x56
  415ce0:	str	x8, [sp]
  415ce4:	bl	404bf0 <dcgettext@plt>
  415ce8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  415cec:	mov	x23, x21
  415cf0:	mov	x21, x25
  415cf4:	mov	x25, x27
  415cf8:	mov	x27, x19
  415cfc:	mov	x19, x26
  415d00:	ldr	x26, [x8, #3544]
  415d04:	mov	x24, x0
  415d08:	mov	x0, x22
  415d0c:	bl	43c05c <argp_usage@@Base+0xa460>
  415d10:	mov	x4, x0
  415d14:	ldr	x0, [sp]
  415d18:	mov	w1, #0x1                   	// #1
  415d1c:	mov	x2, x24
  415d20:	mov	x3, x26
  415d24:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  415d28:	mov	x26, x19
  415d2c:	mov	x19, x27
  415d30:	mov	x27, x25
  415d34:	mov	x25, x21
  415d38:	mov	x21, x23
  415d3c:	bl	404910 <__fprintf_chk@plt>
  415d40:	mov	w1, #0x1                   	// #1
  415d44:	mov	x0, x22
  415d48:	bl	41a070 <wcrtomb@plt+0x15250>
  415d4c:	cbnz	w0, 415be0 <wcrtomb@plt+0x10dc0>
  415d50:	bl	404d00 <__errno_location@plt>
  415d54:	ldr	x8, [x25, #1008]
  415d58:	ldr	w23, [x0]
  415d5c:	cbz	x8, 415d64 <wcrtomb@plt+0x10f44>
  415d60:	blr	x8
  415d64:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  415d68:	mov	w2, #0x5                   	// #5
  415d6c:	mov	x0, xzr
  415d70:	add	x1, x1, #0x67
  415d74:	bl	404bf0 <dcgettext@plt>
  415d78:	mov	x24, x0
  415d7c:	mov	x0, x22
  415d80:	bl	43beac <argp_usage@@Base+0xa2b0>
  415d84:	mov	x3, x0
  415d88:	mov	w0, wzr
  415d8c:	mov	w1, w23
  415d90:	mov	x2, x24
  415d94:	bl	4041f0 <error@plt>
  415d98:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  415d9c:	mov	w9, #0x2                   	// #2
  415da0:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  415da4:	str	w9, [x8, #3456]
  415da8:	b	415be0 <wcrtomb@plt+0x10dc0>
  415dac:	ldr	x8, [x25, #1008]
  415db0:	cbz	x8, 415db8 <wcrtomb@plt+0x10f98>
  415db4:	blr	x8
  415db8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  415dbc:	mov	w2, #0x5                   	// #5
  415dc0:	mov	x0, xzr
  415dc4:	add	x1, x1, #0x22
  415dc8:	b	415bbc <wcrtomb@plt+0x10d9c>
  415dcc:	mov	x0, x22
  415dd0:	bl	4049d0 <free@plt>
  415dd4:	mov	x0, x21
  415dd8:	bl	414aa4 <wcrtomb@plt+0xfc84>
  415ddc:	ldr	x0, [sp, #8]
  415de0:	bl	4049d0 <free@plt>
  415de4:	mov	w0, #0x1                   	// #1
  415de8:	b	415e58 <wcrtomb@plt+0x11038>
  415dec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  415df0:	ldr	x8, [x8, #1008]
  415df4:	cbz	x8, 415dfc <wcrtomb@plt+0x10fdc>
  415df8:	blr	x8
  415dfc:	bl	404d00 <__errno_location@plt>
  415e00:	ldr	w20, [x0]
  415e04:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  415e08:	add	x1, x1, #0xfc4
  415e0c:	mov	w2, #0x5                   	// #5
  415e10:	mov	x0, xzr
  415e14:	bl	404bf0 <dcgettext@plt>
  415e18:	mov	x22, x0
  415e1c:	mov	x0, x21
  415e20:	bl	43c05c <argp_usage@@Base+0xa460>
  415e24:	mov	x3, x0
  415e28:	mov	w0, wzr
  415e2c:	mov	w1, w20
  415e30:	mov	x2, x22
  415e34:	bl	4041f0 <error@plt>
  415e38:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  415e3c:	mov	w9, #0x2                   	// #2
  415e40:	str	w9, [x8, #3456]
  415e44:	mov	x0, x21
  415e48:	bl	4049d0 <free@plt>
  415e4c:	ldr	x0, [sp, #8]
  415e50:	bl	4049d0 <free@plt>
  415e54:	mov	w0, wzr
  415e58:	ldp	x20, x19, [sp, #224]
  415e5c:	ldp	x22, x21, [sp, #208]
  415e60:	ldp	x24, x23, [sp, #192]
  415e64:	ldp	x26, x25, [sp, #176]
  415e68:	ldp	x28, x27, [sp, #160]
  415e6c:	ldp	x29, x30, [sp, #144]
  415e70:	add	sp, sp, #0xf0
  415e74:	ret
  415e78:	stp	x29, x30, [sp, #-80]!
  415e7c:	stp	x26, x25, [sp, #16]
  415e80:	stp	x24, x23, [sp, #32]
  415e84:	stp	x22, x21, [sp, #48]
  415e88:	stp	x20, x19, [sp, #64]
  415e8c:	mov	x29, sp
  415e90:	cbz	x1, 415f3c <wcrtomb@plt+0x1111c>
  415e94:	mov	w25, #0x4401                	// #17409
  415e98:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x17da0>
  415e9c:	adrp	x22, 450000 <_obstack_memory_used@@Base+0x11da0>
  415ea0:	mov	x19, x1
  415ea4:	mov	x20, x0
  415ea8:	mov	w26, wzr
  415eac:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  415eb0:	mov	w24, #0x1                   	// #1
  415eb4:	movk	w25, #0x31, lsl #16
  415eb8:	add	x21, x21, #0x990
  415ebc:	add	x22, x22, #0xdf4
  415ec0:	b	415edc <wcrtomb@plt+0x110bc>
  415ec4:	ldr	x1, [x23, #3928]
  415ec8:	mov	w0, w3
  415ecc:	bl	404b90 <fputc_unlocked@plt>
  415ed0:	subs	x19, x19, #0x1
  415ed4:	add	x20, x20, #0x1
  415ed8:	b.eq	415f3c <wcrtomb@plt+0x1111c>  // b.none
  415edc:	ldrb	w3, [x20]
  415ee0:	sub	w8, w3, #0x44
  415ee4:	cmp	w8, #0x15
  415ee8:	b.hi	415f24 <wcrtomb@plt+0x11104>  // b.pmore
  415eec:	lsl	w8, w24, w8
  415ef0:	tst	w8, w25
  415ef4:	b.eq	415f24 <wcrtomb@plt+0x11104>  // b.none
  415ef8:	ldr	x0, [x23, #3928]
  415efc:	mov	w1, #0x1                   	// #1
  415f00:	mov	x2, x21
  415f04:	bl	404910 <__fprintf_chk@plt>
  415f08:	cbnz	w26, 415ed0 <wcrtomb@plt+0x110b0>
  415f0c:	ldr	x0, [x23, #3928]
  415f10:	mov	w1, #0x1                   	// #1
  415f14:	mov	x2, x22
  415f18:	mov	w26, #0x1                   	// #1
  415f1c:	bl	404910 <__fprintf_chk@plt>
  415f20:	b	415ed0 <wcrtomb@plt+0x110b0>
  415f24:	cbnz	w3, 415ec4 <wcrtomb@plt+0x110a4>
  415f28:	ldr	x1, [x23, #3928]
  415f2c:	mov	w0, #0xa                   	// #10
  415f30:	bl	404b90 <fputc_unlocked@plt>
  415f34:	mov	w26, wzr
  415f38:	b	415ed0 <wcrtomb@plt+0x110b0>
  415f3c:	ldp	x20, x19, [sp, #64]
  415f40:	ldp	x22, x21, [sp, #48]
  415f44:	ldp	x24, x23, [sp, #32]
  415f48:	ldp	x26, x25, [sp, #16]
  415f4c:	ldp	x29, x30, [sp], #80
  415f50:	ret
  415f54:	stp	x29, x30, [sp, #-64]!
  415f58:	str	x23, [sp, #16]
  415f5c:	stp	x22, x21, [sp, #32]
  415f60:	stp	x20, x19, [sp, #48]
  415f64:	mov	x29, sp
  415f68:	mov	x19, x1
  415f6c:	mov	x20, x0
  415f70:	bl	404190 <strlen@plt>
  415f74:	mov	x21, x0
  415f78:	mov	w0, #0x60                  	// #96
  415f7c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  415f80:	mov	x22, x0
  415f84:	cmp	x21, #0x2
  415f88:	str	xzr, [x0]
  415f8c:	str	xzr, [x0, #64]
  415f90:	str	wzr, [x0, #60]
  415f94:	stp	xzr, xzr, [x0, #40]
  415f98:	b.cc	415fac <wcrtomb@plt+0x1118c>  // b.lo, b.ul, b.last
  415f9c:	sub	x8, x21, #0x1
  415fa0:	ldrb	w9, [x20, x8]
  415fa4:	cmp	w9, #0x2f
  415fa8:	csel	x21, x8, x21, eq  // eq = none
  415fac:	add	x0, x21, #0x1
  415fb0:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  415fb4:	mov	x1, x20
  415fb8:	mov	x2, x21
  415fbc:	mov	x23, x0
  415fc0:	str	x0, [x22, #88]
  415fc4:	bl	404110 <memcpy@plt>
  415fc8:	strb	wzr, [x23, x21]
  415fcc:	stp	xzr, x19, [x22, #72]
  415fd0:	mov	x0, x22
  415fd4:	ldp	x20, x19, [sp, #48]
  415fd8:	ldp	x22, x21, [sp, #32]
  415fdc:	ldr	x23, [sp, #16]
  415fe0:	ldp	x29, x30, [sp], #64
  415fe4:	ret
  415fe8:	stp	x29, x30, [sp, #-48]!
  415fec:	stp	x22, x21, [sp, #16]
  415ff0:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  415ff4:	ldr	x8, [x22, #2224]
  415ff8:	stp	x20, x19, [sp, #32]
  415ffc:	mov	x29, sp
  416000:	cbz	x8, 416040 <wcrtomb@plt+0x11220>
  416004:	mov	x20, x0
  416008:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  41600c:	mov	x19, x1
  416010:	add	x0, x0, #0xd3e
  416014:	mov	x1, xzr
  416018:	bl	415f54 <wcrtomb@plt+0x11134>
  41601c:	mov	x21, x0
  416020:	ldr	x0, [x22, #2224]
  416024:	mov	x1, x21
  416028:	stp	x20, x19, [x21, #24]
  41602c:	bl	434e74 <argp_usage@@Base+0x3278>
  416030:	mov	x19, x0
  416034:	mov	x0, x21
  416038:	bl	413b00 <wcrtomb@plt+0xece0>
  41603c:	b	416044 <wcrtomb@plt+0x11224>
  416040:	mov	x19, xzr
  416044:	mov	x0, x19
  416048:	ldp	x20, x19, [sp, #32]
  41604c:	ldp	x22, x21, [sp, #16]
  416050:	ldp	x29, x30, [sp], #48
  416054:	ret
  416058:	stp	x29, x30, [sp, #-64]!
  41605c:	str	x23, [sp, #16]
  416060:	stp	x22, x21, [sp, #32]
  416064:	stp	x20, x19, [sp, #48]
  416068:	mov	x29, sp
  41606c:	mov	x19, x1
  416070:	mov	x20, x0
  416074:	bl	404190 <strlen@plt>
  416078:	mov	x21, x0
  41607c:	mov	x0, x19
  416080:	bl	404190 <strlen@plt>
  416084:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416088:	ldr	x23, [x8, #2232]
  41608c:	cbz	x23, 4160b4 <wcrtomb@plt+0x11294>
  416090:	mov	x22, x0
  416094:	add	x0, x23, #0x58
  416098:	mov	x1, x20
  41609c:	mov	x2, x21
  4160a0:	mov	x3, x19
  4160a4:	mov	x4, x22
  4160a8:	bl	419ae4 <wcrtomb@plt+0x14cc4>
  4160ac:	ldr	x23, [x23]
  4160b0:	cbnz	x23, 416094 <wcrtomb@plt+0x11274>
  4160b4:	ldp	x20, x19, [sp, #48]
  4160b8:	ldp	x22, x21, [sp, #32]
  4160bc:	ldr	x23, [sp, #16]
  4160c0:	ldp	x29, x30, [sp], #64
  4160c4:	ret
  4160c8:	stp	x29, x30, [sp, #-80]!
  4160cc:	stp	x26, x25, [sp, #16]
  4160d0:	stp	x24, x23, [sp, #32]
  4160d4:	stp	x22, x21, [sp, #48]
  4160d8:	stp	x20, x19, [sp, #64]
  4160dc:	mov	x29, sp
  4160e0:	mov	x20, x7
  4160e4:	mov	w21, w6
  4160e8:	mov	w22, w5
  4160ec:	mov	x23, x4
  4160f0:	mov	x24, x3
  4160f4:	mov	x25, x2
  4160f8:	mov	x26, x1
  4160fc:	bl	4161fc <wcrtomb@plt+0x113dc>
  416100:	mov	x19, x0
  416104:	mov	w8, #0x1                   	// #1
  416108:	stp	x26, x25, [x0, #8]
  41610c:	stp	x24, x23, [x0, #24]
  416110:	str	w8, [x0, #56]
  416114:	tbnz	w22, #0, 41612c <wcrtomb@plt+0x1130c>
  416118:	tbnz	w21, #0, 41613c <wcrtomb@plt+0x1131c>
  41611c:	cbz	x20, 41614c <wcrtomb@plt+0x1132c>
  416120:	mov	x0, x20
  416124:	bl	414ad0 <wcrtomb@plt+0xfcb0>
  416128:	b	416150 <wcrtomb@plt+0x11330>
  41612c:	ldr	w8, [x19, #60]
  416130:	orr	w8, w8, #0x2
  416134:	str	w8, [x19, #60]
  416138:	tbz	w21, #0, 41611c <wcrtomb@plt+0x112fc>
  41613c:	ldr	w8, [x19, #60]
  416140:	orr	w8, w8, #0x4
  416144:	str	w8, [x19, #60]
  416148:	cbnz	x20, 416120 <wcrtomb@plt+0x11300>
  41614c:	mov	x0, xzr
  416150:	str	x0, [x19, #40]
  416154:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416158:	ldr	x8, [x20, #2216]
  41615c:	cbnz	x8, 416188 <wcrtomb@plt+0x11368>
  416160:	adrp	x2, 416000 <wcrtomb@plt+0x111e0>
  416164:	adrp	x3, 416000 <wcrtomb@plt+0x111e0>
  416168:	add	x2, x2, #0x258
  41616c:	add	x3, x3, #0x270
  416170:	mov	x0, xzr
  416174:	mov	x1, xzr
  416178:	mov	x4, xzr
  41617c:	bl	435130 <argp_usage@@Base+0x3534>
  416180:	str	x0, [x20, #2216]
  416184:	cbz	x0, 4161f8 <wcrtomb@plt+0x113d8>
  416188:	ldr	x0, [x20, #2216]
  41618c:	mov	x1, x19
  416190:	bl	43599c <argp_usage@@Base+0x3da0>
  416194:	cbz	x0, 4161f8 <wcrtomb@plt+0x113d8>
  416198:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41619c:	ldr	x8, [x20, #2224]
  4161a0:	cbnz	x8, 4161cc <wcrtomb@plt+0x113ac>
  4161a4:	adrp	x2, 416000 <wcrtomb@plt+0x111e0>
  4161a8:	adrp	x3, 416000 <wcrtomb@plt+0x111e0>
  4161ac:	add	x2, x2, #0x294
  4161b0:	add	x3, x3, #0x2a8
  4161b4:	mov	x0, xzr
  4161b8:	mov	x1, xzr
  4161bc:	mov	x4, xzr
  4161c0:	bl	435130 <argp_usage@@Base+0x3534>
  4161c4:	str	x0, [x20, #2224]
  4161c8:	cbz	x0, 4161f8 <wcrtomb@plt+0x113d8>
  4161cc:	ldr	x0, [x20, #2224]
  4161d0:	mov	x1, x19
  4161d4:	bl	43599c <argp_usage@@Base+0x3da0>
  4161d8:	cbz	x0, 4161f8 <wcrtomb@plt+0x113d8>
  4161dc:	mov	x0, x19
  4161e0:	ldp	x20, x19, [sp, #64]
  4161e4:	ldp	x22, x21, [sp, #48]
  4161e8:	ldp	x24, x23, [sp, #32]
  4161ec:	ldp	x26, x25, [sp, #16]
  4161f0:	ldp	x29, x30, [sp], #80
  4161f4:	ret
  4161f8:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  4161fc:	stp	x29, x30, [sp, #-32]!
  416200:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416204:	ldr	w8, [x8]
  416208:	str	x19, [sp, #16]
  41620c:	mov	x19, x0
  416210:	mov	x1, x19
  416214:	mov	w0, w8
  416218:	mov	x29, sp
  41621c:	bl	4199e0 <wcrtomb@plt+0x14bc0>
  416220:	mov	x1, x0
  416224:	mov	x0, x19
  416228:	bl	415f54 <wcrtomb@plt+0x11134>
  41622c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416230:	ldr	x9, [x8, #2240]
  416234:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416238:	ldr	x19, [sp, #16]
  41623c:	add	x10, x10, #0x8b8
  416240:	cmp	x9, #0x0
  416244:	csel	x9, x10, x9, eq  // eq = none
  416248:	str	x0, [x9]
  41624c:	str	x0, [x8, #2240]
  416250:	ldp	x29, x30, [sp], #32
  416254:	ret
  416258:	stp	x29, x30, [sp, #-16]!
  41625c:	ldr	x0, [x0, #80]
  416260:	mov	x29, sp
  416264:	bl	4350d8 <argp_usage@@Base+0x34dc>
  416268:	ldp	x29, x30, [sp], #16
  41626c:	ret
  416270:	stp	x29, x30, [sp, #-16]!
  416274:	ldr	x0, [x0, #80]
  416278:	ldr	x1, [x1, #80]
  41627c:	mov	x29, sp
  416280:	bl	404920 <strcmp@plt>
  416284:	cmp	w0, #0x0
  416288:	cset	w0, eq  // eq = none
  41628c:	ldp	x29, x30, [sp], #16
  416290:	ret
  416294:	ldp	x8, x9, [x0, #24]
  416298:	add	x8, x9, x8
  41629c:	udiv	x9, x8, x1
  4162a0:	msub	x0, x9, x1, x8
  4162a4:	ret
  4162a8:	ldr	x8, [x0, #24]
  4162ac:	ldr	x9, [x1, #24]
  4162b0:	cmp	x8, x9
  4162b4:	b.ne	4162cc <wcrtomb@plt+0x114ac>  // b.any
  4162b8:	ldr	x8, [x0, #32]
  4162bc:	ldr	x9, [x1, #32]
  4162c0:	cmp	x8, x9
  4162c4:	cset	w0, eq  // eq = none
  4162c8:	ret
  4162cc:	mov	w0, wzr
  4162d0:	ret
  4162d4:	stp	x29, x30, [sp, #-16]!
  4162d8:	ldr	x0, [x0]
  4162dc:	ldr	x1, [x1]
  4162e0:	mov	x29, sp
  4162e4:	bl	404920 <strcmp@plt>
  4162e8:	ldp	x29, x30, [sp], #16
  4162ec:	ret
  4162f0:	sub	sp, sp, #0x20
  4162f4:	stp	x29, x30, [sp, #16]
  4162f8:	add	x29, sp, #0x10
  4162fc:	str	x1, [sp, #8]
  416300:	cbz	x0, 416328 <wcrtomb@plt+0x11508>
  416304:	ldp	x2, x1, [x0, #16]
  416308:	adrp	x4, 416000 <wcrtomb@plt+0x111e0>
  41630c:	add	x4, x4, #0x2d4
  416310:	add	x0, sp, #0x8
  416314:	mov	w3, #0x8                   	// #8
  416318:	bl	4046e0 <bsearch@plt>
  41631c:	cbz	x0, 416328 <wcrtomb@plt+0x11508>
  416320:	ldr	x8, [x0]
  416324:	sub	x0, x8, #0x1
  416328:	ldp	x29, x30, [sp, #16]
  41632c:	add	sp, sp, #0x20
  416330:	ret
  416334:	stp	x29, x30, [sp, #-80]!
  416338:	stp	x26, x25, [sp, #16]
  41633c:	stp	x24, x23, [sp, #32]
  416340:	stp	x22, x21, [sp, #48]
  416344:	stp	x20, x19, [sp, #64]
  416348:	ldrb	w25, [x0]
  41634c:	mov	x20, x0
  416350:	mov	x19, x1
  416354:	mov	x29, sp
  416358:	cbz	w25, 4163ac <wcrtomb@plt+0x1158c>
  41635c:	mov	x23, xzr
  416360:	mov	x24, xzr
  416364:	mov	w22, #0x1                   	// #1
  416368:	mov	x21, x20
  41636c:	b	416384 <wcrtomb@plt+0x11564>
  416370:	add	x23, x23, #0x1
  416374:	add	x21, x21, x26
  416378:	ldrb	w25, [x21]
  41637c:	add	x24, x24, #0x1
  416380:	cbz	w25, 4163b8 <wcrtomb@plt+0x11598>
  416384:	mov	x0, x21
  416388:	bl	404190 <strlen@plt>
  41638c:	add	x26, x0, #0x1
  416390:	add	x22, x26, x22
  416394:	cbz	x19, 416370 <wcrtomb@plt+0x11550>
  416398:	and	w1, w25, #0xff
  41639c:	mov	x0, x19
  4163a0:	bl	404a70 <strchr@plt>
  4163a4:	cbnz	x0, 416370 <wcrtomb@plt+0x11550>
  4163a8:	b	416374 <wcrtomb@plt+0x11554>
  4163ac:	mov	x24, xzr
  4163b0:	mov	x23, xzr
  4163b4:	mov	w22, #0x1                   	// #1
  4163b8:	add	x0, x22, #0x20
  4163bc:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4163c0:	mov	x21, x0
  4163c4:	add	x0, x0, #0x20
  4163c8:	mov	x1, x20
  4163cc:	mov	x2, x22
  4163d0:	str	x0, [x21]
  4163d4:	bl	404110 <memcpy@plt>
  4163d8:	add	x0, x23, #0x1
  4163dc:	mov	w1, #0x8                   	// #8
  4163e0:	stp	x24, x23, [x21, #8]
  4163e4:	bl	43d32c <argp_usage@@Base+0xb730>
  4163e8:	ldr	x20, [x21]
  4163ec:	str	x0, [x21, #24]
  4163f0:	ldrb	w8, [x20]
  4163f4:	cbz	w8, 416440 <wcrtomb@plt+0x11620>
  4163f8:	mov	x22, xzr
  4163fc:	b	416428 <wcrtomb@plt+0x11608>
  416400:	ldr	x8, [x21, #24]
  416404:	add	x9, x20, #0x1
  416408:	add	x10, x22, #0x1
  41640c:	str	x9, [x8, x22, lsl #3]
  416410:	mov	x22, x10
  416414:	mov	x0, x20
  416418:	bl	404190 <strlen@plt>
  41641c:	add	x20, x0, x20
  416420:	ldrb	w8, [x20, #1]!
  416424:	cbz	w8, 416444 <wcrtomb@plt+0x11624>
  416428:	cbz	x19, 416400 <wcrtomb@plt+0x115e0>
  41642c:	and	w1, w8, #0xff
  416430:	mov	x0, x19
  416434:	bl	404a70 <strchr@plt>
  416438:	cbnz	x0, 416400 <wcrtomb@plt+0x115e0>
  41643c:	b	416414 <wcrtomb@plt+0x115f4>
  416440:	mov	x22, xzr
  416444:	ldr	x8, [x21, #24]
  416448:	mov	x0, x21
  41644c:	str	xzr, [x8, x22, lsl #3]
  416450:	ldp	x20, x19, [sp, #64]
  416454:	ldp	x22, x21, [sp, #48]
  416458:	ldp	x24, x23, [sp, #32]
  41645c:	ldp	x26, x25, [sp, #16]
  416460:	ldp	x29, x30, [sp], #80
  416464:	ret
  416468:	stp	x29, x30, [sp, #-64]!
  41646c:	stp	x22, x21, [sp, #32]
  416470:	stp	x20, x19, [sp, #48]
  416474:	ldrb	w8, [x1]
  416478:	str	x23, [sp, #16]
  41647c:	mov	x20, x2
  416480:	mov	x21, x1
  416484:	mov	x19, x0
  416488:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  41648c:	mov	x29, sp
  416490:	cbz	w8, 4164a8 <wcrtomb@plt+0x11688>
  416494:	ldrb	w2, [x23, #952]
  416498:	mov	x0, x21
  41649c:	mov	w1, wzr
  4164a0:	bl	428898 <wcrtomb@plt+0x23a78>
  4164a4:	mov	x21, x0
  4164a8:	ldp	x9, x8, [x19, #24]
  4164ac:	cmp	x8, x9
  4164b0:	b.ne	4164c0 <wcrtomb@plt+0x116a0>  // b.any
  4164b4:	mov	w1, #0x1                   	// #1
  4164b8:	mov	x0, x19
  4164bc:	bl	43e028 <_obstack_newchunk@@Base>
  4164c0:	ldr	x8, [x19, #24]
  4164c4:	mov	w9, #0x52                  	// #82
  4164c8:	mov	x0, x21
  4164cc:	add	x10, x8, #0x1
  4164d0:	str	x10, [x19, #24]
  4164d4:	strb	w9, [x8]
  4164d8:	bl	404190 <strlen@plt>
  4164dc:	ldp	x9, x8, [x19, #24]
  4164e0:	add	x22, x0, #0x1
  4164e4:	sub	x8, x8, x9
  4164e8:	cmp	x8, x22
  4164ec:	b.cs	4164fc <wcrtomb@plt+0x116dc>  // b.hs, b.nlast
  4164f0:	mov	x0, x19
  4164f4:	mov	x1, x22
  4164f8:	bl	43e028 <_obstack_newchunk@@Base>
  4164fc:	ldr	x0, [x19, #24]
  416500:	mov	x1, x21
  416504:	mov	x2, x22
  416508:	bl	404110 <memcpy@plt>
  41650c:	ldr	x8, [x19, #24]
  416510:	add	x8, x8, x22
  416514:	str	x8, [x19, #24]
  416518:	ldrb	w8, [x20]
  41651c:	cbz	w8, 416534 <wcrtomb@plt+0x11714>
  416520:	ldrb	w2, [x23, #952]
  416524:	mov	x0, x20
  416528:	mov	w1, wzr
  41652c:	bl	428898 <wcrtomb@plt+0x23a78>
  416530:	mov	x20, x0
  416534:	ldp	x9, x8, [x19, #24]
  416538:	cmp	x8, x9
  41653c:	b.ne	41654c <wcrtomb@plt+0x1172c>  // b.any
  416540:	mov	w1, #0x1                   	// #1
  416544:	mov	x0, x19
  416548:	bl	43e028 <_obstack_newchunk@@Base>
  41654c:	ldr	x8, [x19, #24]
  416550:	mov	w9, #0x54                  	// #84
  416554:	mov	x0, x20
  416558:	add	x10, x8, #0x1
  41655c:	str	x10, [x19, #24]
  416560:	strb	w9, [x8]
  416564:	bl	404190 <strlen@plt>
  416568:	ldp	x9, x8, [x19, #24]
  41656c:	add	x21, x0, #0x1
  416570:	sub	x8, x8, x9
  416574:	cmp	x8, x21
  416578:	b.cs	416588 <wcrtomb@plt+0x11768>  // b.hs, b.nlast
  41657c:	mov	x0, x19
  416580:	mov	x1, x21
  416584:	bl	43e028 <_obstack_newchunk@@Base>
  416588:	ldr	x0, [x19, #24]
  41658c:	mov	x1, x20
  416590:	mov	x2, x21
  416594:	bl	404110 <memcpy@plt>
  416598:	ldr	x8, [x19, #24]
  41659c:	ldr	x23, [sp, #16]
  4165a0:	add	x8, x8, x21
  4165a4:	str	x8, [x19, #24]
  4165a8:	ldp	x20, x19, [sp, #48]
  4165ac:	ldp	x22, x21, [sp, #32]
  4165b0:	ldp	x29, x30, [sp], #64
  4165b4:	ret
  4165b8:	sub	sp, sp, #0x30
  4165bc:	stp	x20, x19, [sp, #32]
  4165c0:	mov	x19, x1
  4165c4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4165c8:	add	x1, x1, #0xe3d
  4165cc:	add	x4, sp, #0x8
  4165d0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  4165d4:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  4165d8:	stp	x29, x30, [sp, #16]
  4165dc:	add	x29, sp, #0x10
  4165e0:	mov	x20, x0
  4165e4:	bl	416684 <wcrtomb@plt+0x11864>
  4165e8:	tbz	w0, #0, 416630 <wcrtomb@plt+0x11810>
  4165ec:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4165f0:	mov	w3, #0xc9ff                	// #51711
  4165f4:	add	x1, x1, #0xe4b
  4165f8:	mov	x4, sp
  4165fc:	movk	w3, #0x3b9a, lsl #16
  416600:	mov	x0, x20
  416604:	mov	x2, xzr
  416608:	bl	416684 <wcrtomb@plt+0x11864>
  41660c:	tbz	w0, #0, 416630 <wcrtomb@plt+0x11810>
  416610:	ldr	x8, [sp, #8]
  416614:	str	x8, [x19]
  416618:	ldr	x8, [sp]
  41661c:	str	x8, [x19, #8]
  416620:	ldp	x20, x19, [sp, #32]
  416624:	ldp	x29, x30, [sp, #16]
  416628:	add	sp, sp, #0x30
  41662c:	ret
  416630:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416634:	ldr	x8, [x8, #1008]
  416638:	cbz	x8, 416640 <wcrtomb@plt+0x11820>
  41663c:	blr	x8
  416640:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416644:	ldr	x0, [x8, #832]
  416648:	bl	43beac <argp_usage@@Base+0xa2b0>
  41664c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  416650:	mov	x19, x0
  416654:	add	x1, x1, #0xf09
  416658:	mov	w2, #0x5                   	// #5
  41665c:	mov	x0, xzr
  416660:	bl	404bf0 <dcgettext@plt>
  416664:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  416668:	mov	x4, x0
  41666c:	add	x2, x2, #0x5d1
  416670:	mov	w0, wzr
  416674:	mov	w1, wzr
  416678:	mov	x3, x19
  41667c:	bl	4041f0 <error@plt>
  416680:	bl	40dda4 <wcrtomb@plt+0x8f84>
  416684:	sub	sp, sp, #0xc0
  416688:	stp	x29, x30, [sp, #112]
  41668c:	str	x25, [sp, #128]
  416690:	stp	x24, x23, [sp, #144]
  416694:	stp	x22, x21, [sp, #160]
  416698:	stp	x20, x19, [sp, #176]
  41669c:	add	x29, sp, #0x70
  4166a0:	mov	x23, x4
  4166a4:	mov	x21, x3
  4166a8:	mov	x22, x2
  4166ac:	mov	x19, x1
  4166b0:	mov	x20, x0
  4166b4:	bl	4047a0 <getc_unlocked@plt>
  4166b8:	sub	w8, w0, #0x30
  4166bc:	cmp	w8, #0xa
  4166c0:	b.cc	4166d8 <wcrtomb@plt+0x118b8>  // b.lo, b.ul, b.last
  4166c4:	cmp	w0, #0x2d
  4166c8:	b.eq	4166d8 <wcrtomb@plt+0x118b8>  // b.none
  4166cc:	mov	x24, xzr
  4166d0:	mov	w25, #0x1                   	// #1
  4166d4:	b	416708 <wcrtomb@plt+0x118e8>
  4166d8:	mov	x24, xzr
  4166dc:	sub	x25, x29, #0x18
  4166e0:	cmp	x24, #0x14
  4166e4:	strb	w0, [x25, x24]
  4166e8:	b.eq	416774 <wcrtomb@plt+0x11954>  // b.none
  4166ec:	mov	x0, x20
  4166f0:	bl	4047a0 <getc_unlocked@plt>
  4166f4:	sub	w8, w0, #0x30
  4166f8:	cmp	w8, #0xa
  4166fc:	add	x24, x24, #0x1
  416700:	b.cc	4166e0 <wcrtomb@plt+0x118c0>  // b.lo, b.ul, b.last
  416704:	mov	w25, wzr
  416708:	sub	x8, x29, #0x18
  41670c:	strb	wzr, [x8, x24]
  416710:	tbnz	w0, #31, 416744 <wcrtomb@plt+0x11924>
  416714:	cbnz	w0, 416890 <wcrtomb@plt+0x11a70>
  416718:	sub	x0, x29, #0x18
  41671c:	mov	x1, xzr
  416720:	mov	x2, x22
  416724:	mov	x3, x21
  416728:	bl	419bcc <wcrtomb@plt+0x14dac>
  41672c:	str	x0, [x23]
  416730:	bl	404d00 <__errno_location@plt>
  416734:	ldr	w8, [x0]
  416738:	cbnz	w8, 4167e8 <wcrtomb@plt+0x119c8>
  41673c:	mov	w0, #0x1                   	// #1
  416740:	b	416758 <wcrtomb@plt+0x11938>
  416744:	mov	x0, x20
  416748:	bl	4042d0 <ferror_unlocked@plt>
  41674c:	cbnz	w0, 416978 <wcrtomb@plt+0x11b58>
  416750:	tbz	w25, #0, 416984 <wcrtomb@plt+0x11b64>
  416754:	mov	w0, wzr
  416758:	ldp	x20, x19, [sp, #176]
  41675c:	ldp	x22, x21, [sp, #160]
  416760:	ldp	x24, x23, [sp, #144]
  416764:	ldr	x25, [sp, #128]
  416768:	ldp	x29, x30, [sp, #112]
  41676c:	add	sp, sp, #0xc0
  416770:	ret
  416774:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416778:	ldr	x8, [x8, #1008]
  41677c:	cbz	x8, 416784 <wcrtomb@plt+0x11964>
  416780:	blr	x8
  416784:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  416788:	add	x1, x1, #0xf29
  41678c:	mov	w2, #0x5                   	// #5
  416790:	mov	x0, xzr
  416794:	bl	404bf0 <dcgettext@plt>
  416798:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41679c:	ldr	x8, [x8, #832]
  4167a0:	mov	x21, x0
  4167a4:	mov	x0, x8
  4167a8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4167ac:	mov	x22, x0
  4167b0:	mov	x0, x20
  4167b4:	bl	404b00 <ftello@plt>
  4167b8:	sub	x1, x29, #0x30
  4167bc:	bl	43647c <argp_usage@@Base+0x4880>
  4167c0:	mov	x4, x0
  4167c4:	sub	x7, x29, #0x18
  4167c8:	mov	w6, #0x15                  	// #21
  4167cc:	mov	w0, wzr
  4167d0:	mov	w1, wzr
  4167d4:	mov	x2, x21
  4167d8:	mov	x3, x22
  4167dc:	mov	x5, x19
  4167e0:	bl	4041f0 <error@plt>
  4167e4:	bl	40dda4 <wcrtomb@plt+0x8f84>
  4167e8:	cmp	w8, #0x22
  4167ec:	str	w8, [x29, #28]
  4167f0:	b.ne	416908 <wcrtomb@plt+0x11ae8>  // b.any
  4167f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4167f8:	ldr	x8, [x8, #1008]
  4167fc:	cbz	x8, 416804 <wcrtomb@plt+0x119e4>
  416800:	blr	x8
  416804:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  416808:	add	x1, x1, #0xf7d
  41680c:	mov	w2, #0x5                   	// #5
  416810:	mov	x0, xzr
  416814:	bl	404bf0 <dcgettext@plt>
  416818:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41681c:	ldr	x8, [x8, #832]
  416820:	mov	x23, x0
  416824:	mov	x0, x8
  416828:	bl	43beac <argp_usage@@Base+0xa2b0>
  41682c:	mov	x24, x0
  416830:	mov	x0, x20
  416834:	bl	404b00 <ftello@plt>
  416838:	sub	x1, x29, #0x30
  41683c:	bl	43647c <argp_usage@@Base+0x4880>
  416840:	mov	x20, x0
  416844:	add	x1, sp, #0x28
  416848:	mov	x0, x22
  41684c:	bl	4363ec <argp_usage@@Base+0x47f0>
  416850:	mov	x22, x0
  416854:	add	x1, sp, #0x10
  416858:	mov	x0, x21
  41685c:	bl	43650c <argp_usage@@Base+0x4910>
  416860:	ldr	w1, [x29, #28]
  416864:	mov	x6, x0
  416868:	sub	x8, x29, #0x18
  41686c:	mov	w0, wzr
  416870:	mov	x2, x23
  416874:	mov	x3, x24
  416878:	mov	x4, x20
  41687c:	mov	x5, x22
  416880:	mov	x7, x19
  416884:	str	x8, [sp]
  416888:	bl	4041f0 <error@plt>
  41688c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  416890:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416894:	ldr	x8, [x8, #1008]
  416898:	mov	w21, w0
  41689c:	cbz	x8, 4168a4 <wcrtomb@plt+0x11a84>
  4168a0:	blr	x8
  4168a4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4168a8:	add	x1, x1, #0xf4a
  4168ac:	mov	w2, #0x5                   	// #5
  4168b0:	mov	x0, xzr
  4168b4:	bl	404bf0 <dcgettext@plt>
  4168b8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4168bc:	ldr	x8, [x8, #832]
  4168c0:	mov	x22, x0
  4168c4:	mov	x0, x8
  4168c8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4168cc:	mov	x23, x0
  4168d0:	mov	x0, x20
  4168d4:	bl	404b00 <ftello@plt>
  4168d8:	sub	x1, x29, #0x30
  4168dc:	bl	43647c <argp_usage@@Base+0x4880>
  4168e0:	mov	x4, x0
  4168e4:	sub	x6, x29, #0x18
  4168e8:	mov	w0, wzr
  4168ec:	mov	w1, wzr
  4168f0:	mov	x2, x22
  4168f4:	mov	x3, x23
  4168f8:	mov	x5, x19
  4168fc:	mov	w7, w21
  416900:	bl	4041f0 <error@plt>
  416904:	bl	40dda4 <wcrtomb@plt+0x8f84>
  416908:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41690c:	ldr	x8, [x8, #1008]
  416910:	cbz	x8, 416918 <wcrtomb@plt+0x11af8>
  416914:	blr	x8
  416918:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  41691c:	add	x1, x1, #0xfa6
  416920:	mov	w2, #0x5                   	// #5
  416924:	mov	x0, xzr
  416928:	bl	404bf0 <dcgettext@plt>
  41692c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416930:	ldr	x8, [x8, #832]
  416934:	mov	x21, x0
  416938:	mov	x0, x8
  41693c:	bl	43beac <argp_usage@@Base+0xa2b0>
  416940:	mov	x22, x0
  416944:	mov	x0, x20
  416948:	bl	404b00 <ftello@plt>
  41694c:	sub	x1, x29, #0x30
  416950:	bl	43647c <argp_usage@@Base+0x4880>
  416954:	ldr	w1, [x29, #28]
  416958:	mov	x4, x0
  41695c:	sub	x6, x29, #0x18
  416960:	mov	w0, wzr
  416964:	mov	x2, x21
  416968:	mov	x3, x22
  41696c:	mov	x5, x19
  416970:	bl	4041f0 <error@plt>
  416974:	bl	40dda4 <wcrtomb@plt+0x8f84>
  416978:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41697c:	ldr	x0, [x8, #832]
  416980:	bl	42833c <wcrtomb@plt+0x2351c>
  416984:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416988:	ldr	x8, [x8, #1008]
  41698c:	cbz	x8, 416994 <wcrtomb@plt+0x11b74>
  416990:	blr	x8
  416994:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416998:	ldr	x0, [x8, #832]
  41699c:	bl	43beac <argp_usage@@Base+0xa2b0>
  4169a0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4169a4:	mov	x19, x0
  4169a8:	add	x1, x1, #0xf09
  4169ac:	mov	w2, #0x5                   	// #5
  4169b0:	mov	x0, xzr
  4169b4:	bl	404bf0 <dcgettext@plt>
  4169b8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  4169bc:	mov	x4, x0
  4169c0:	add	x2, x2, #0x5d1
  4169c4:	mov	w0, wzr
  4169c8:	mov	w1, wzr
  4169cc:	mov	x3, x19
  4169d0:	bl	4041f0 <error@plt>
  4169d4:	bl	40dda4 <wcrtomb@plt+0x8f84>
  4169d8:	stp	x29, x30, [sp, #-64]!
  4169dc:	str	x23, [sp, #16]
  4169e0:	stp	x22, x21, [sp, #32]
  4169e4:	stp	x20, x19, [sp, #48]
  4169e8:	mov	x29, sp
  4169ec:	mov	x19, x2
  4169f0:	mov	x20, x1
  4169f4:	mov	x22, x0
  4169f8:	bl	4047a0 <getc_unlocked@plt>
  4169fc:	ldp	x9, x8, [x20, #24]
  416a00:	add	w10, w0, #0x1
  416a04:	mov	w21, w0
  416a08:	cmp	x8, x9
  416a0c:	cset	w8, eq  // eq = none
  416a10:	cmp	w10, #0x2
  416a14:	b.cc	416a6c <wcrtomb@plt+0x11c4c>  // b.lo, b.ul, b.last
  416a18:	mov	x23, xzr
  416a1c:	b	416a58 <wcrtomb@plt+0x11c38>
  416a20:	ldr	x8, [x20, #24]
  416a24:	mov	x0, x22
  416a28:	add	x9, x8, #0x1
  416a2c:	str	x9, [x20, #24]
  416a30:	strb	w21, [x8]
  416a34:	bl	4047a0 <getc_unlocked@plt>
  416a38:	ldp	x9, x8, [x20, #24]
  416a3c:	add	w10, w0, #0x1
  416a40:	mov	w21, w0
  416a44:	add	x23, x23, #0x1
  416a48:	cmp	x8, x9
  416a4c:	cset	w8, eq  // eq = none
  416a50:	cmp	w10, #0x1
  416a54:	b.ls	416a70 <wcrtomb@plt+0x11c50>  // b.plast
  416a58:	tbz	w8, #0, 416a20 <wcrtomb@plt+0x11c00>
  416a5c:	mov	w1, #0x1                   	// #1
  416a60:	mov	x0, x20
  416a64:	bl	43e028 <_obstack_newchunk@@Base>
  416a68:	b	416a20 <wcrtomb@plt+0x11c00>
  416a6c:	mov	x23, xzr
  416a70:	cbz	w8, 416a80 <wcrtomb@plt+0x11c60>
  416a74:	mov	w1, #0x1                   	// #1
  416a78:	mov	x0, x20
  416a7c:	bl	43e028 <_obstack_newchunk@@Base>
  416a80:	ldr	x8, [x20, #24]
  416a84:	mov	w0, w21
  416a88:	add	x9, x8, #0x1
  416a8c:	str	x9, [x20, #24]
  416a90:	strb	wzr, [x8]
  416a94:	str	x23, [x19]
  416a98:	ldp	x20, x19, [sp, #48]
  416a9c:	ldp	x22, x21, [sp, #32]
  416aa0:	ldr	x23, [sp, #16]
  416aa4:	ldp	x29, x30, [sp], #64
  416aa8:	ret
  416aac:	stp	x29, x30, [sp, #-48]!
  416ab0:	stp	x22, x21, [sp, #16]
  416ab4:	stp	x20, x19, [sp, #32]
  416ab8:	ldrb	w8, [x0]
  416abc:	mov	x29, sp
  416ac0:	cbz	w8, 416b60 <wcrtomb@plt+0x11d40>
  416ac4:	mov	x20, x0
  416ac8:	mov	w9, wzr
  416acc:	mov	w19, wzr
  416ad0:	mov	w22, wzr
  416ad4:	b	416b00 <wcrtomb@plt+0x11ce0>
  416ad8:	ldrb	w8, [x20, #1]
  416adc:	cbz	w8, 416b54 <wcrtomb@plt+0x11d34>
  416ae0:	mov	w19, #0x54                  	// #84
  416ae4:	mov	x0, x20
  416ae8:	bl	404190 <strlen@plt>
  416aec:	add	x20, x0, x20
  416af0:	ldrb	w8, [x20, #1]!
  416af4:	cmp	w19, #0x0
  416af8:	cset	w9, ne  // ne = any
  416afc:	cbz	w8, 416b6c <wcrtomb@plt+0x11d4c>
  416b00:	tbz	w9, #0, 416b10 <wcrtomb@plt+0x11cf0>
  416b04:	and	w21, w8, #0xff
  416b08:	cmp	w19, w21
  416b0c:	b.ne	416bf8 <wcrtomb@plt+0x11dd8>  // b.any
  416b10:	and	w8, w8, #0xff
  416b14:	cmp	w8, #0x52
  416b18:	b.eq	416ad8 <wcrtomb@plt+0x11cb8>  // b.none
  416b1c:	cmp	w8, #0x54
  416b20:	b.eq	416b38 <wcrtomb@plt+0x11d18>  // b.none
  416b24:	cmp	w8, #0x58
  416b28:	b.ne	416ae4 <wcrtomb@plt+0x11cc4>  // b.any
  416b2c:	cbnz	w22, 416c54 <wcrtomb@plt+0x11e34>
  416b30:	mov	w22, #0x1                   	// #1
  416b34:	b	416ae4 <wcrtomb@plt+0x11cc4>
  416b38:	cmp	w19, #0x54
  416b3c:	b.ne	416c38 <wcrtomb@plt+0x11e18>  // b.any
  416b40:	mov	w19, wzr
  416b44:	cbnz	w22, 416ae4 <wcrtomb@plt+0x11cc4>
  416b48:	ldrb	w8, [x20, #1]
  416b4c:	cbnz	w8, 416ae4 <wcrtomb@plt+0x11cc4>
  416b50:	b	416c70 <wcrtomb@plt+0x11e50>
  416b54:	cbz	w22, 416c8c <wcrtomb@plt+0x11e6c>
  416b58:	mov	w22, wzr
  416b5c:	b	416ae0 <wcrtomb@plt+0x11cc0>
  416b60:	mov	w22, wzr
  416b64:	mov	w19, wzr
  416b68:	mov	w9, wzr
  416b6c:	cbz	w9, 416bac <wcrtomb@plt+0x11d8c>
  416b70:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416b74:	ldr	x8, [x8, #1008]
  416b78:	cbz	x8, 416b80 <wcrtomb@plt+0x11d60>
  416b7c:	blr	x8
  416b80:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  416b84:	add	x1, x1, #0x140
  416b88:	mov	w2, #0x5                   	// #5
  416b8c:	mov	x0, xzr
  416b90:	bl	404bf0 <dcgettext@plt>
  416b94:	mov	x2, x0
  416b98:	mov	w0, wzr
  416b9c:	mov	w1, wzr
  416ba0:	mov	w3, w19
  416ba4:	bl	4041f0 <error@plt>
  416ba8:	b	416cc0 <wcrtomb@plt+0x11ea0>
  416bac:	cbz	w22, 416bf0 <wcrtomb@plt+0x11dd0>
  416bb0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416bb4:	ldrb	w8, [x8, #448]
  416bb8:	tbz	w8, #1, 416bf0 <wcrtomb@plt+0x11dd0>
  416bbc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416bc0:	ldr	x8, [x8, #1008]
  416bc4:	cbz	x8, 416bcc <wcrtomb@plt+0x11dac>
  416bc8:	blr	x8
  416bcc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  416bd0:	add	x1, x1, #0x177
  416bd4:	mov	w2, #0x5                   	// #5
  416bd8:	mov	x0, xzr
  416bdc:	bl	404bf0 <dcgettext@plt>
  416be0:	mov	x2, x0
  416be4:	mov	w0, wzr
  416be8:	mov	w1, wzr
  416bec:	bl	4041f0 <error@plt>
  416bf0:	mov	w0, #0x1                   	// #1
  416bf4:	b	416cd0 <wcrtomb@plt+0x11eb0>
  416bf8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416bfc:	ldr	x8, [x8, #1008]
  416c00:	cbz	x8, 416c08 <wcrtomb@plt+0x11de8>
  416c04:	blr	x8
  416c08:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  416c0c:	add	x1, x1, #0x79
  416c10:	mov	w2, #0x5                   	// #5
  416c14:	mov	x0, xzr
  416c18:	bl	404bf0 <dcgettext@plt>
  416c1c:	mov	x2, x0
  416c20:	mov	w0, wzr
  416c24:	mov	w1, wzr
  416c28:	mov	w3, w19
  416c2c:	mov	w4, w21
  416c30:	bl	4041f0 <error@plt>
  416c34:	b	416cc0 <wcrtomb@plt+0x11ea0>
  416c38:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416c3c:	ldr	x8, [x8, #1008]
  416c40:	cbz	x8, 416c48 <wcrtomb@plt+0x11e28>
  416c44:	blr	x8
  416c48:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  416c4c:	add	x1, x1, #0xf0
  416c50:	b	416ca4 <wcrtomb@plt+0x11e84>
  416c54:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416c58:	ldr	x8, [x8, #1008]
  416c5c:	cbz	x8, 416c64 <wcrtomb@plt+0x11e44>
  416c60:	blr	x8
  416c64:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  416c68:	add	x1, x1, #0xa9
  416c6c:	b	416ca4 <wcrtomb@plt+0x11e84>
  416c70:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416c74:	ldr	x8, [x8, #1008]
  416c78:	cbz	x8, 416c80 <wcrtomb@plt+0x11e60>
  416c7c:	blr	x8
  416c80:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  416c84:	add	x1, x1, #0x11b
  416c88:	b	416ca4 <wcrtomb@plt+0x11e84>
  416c8c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416c90:	ldr	x8, [x8, #1008]
  416c94:	cbz	x8, 416c9c <wcrtomb@plt+0x11e7c>
  416c98:	blr	x8
  416c9c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  416ca0:	add	x1, x1, #0xcb
  416ca4:	mov	w2, #0x5                   	// #5
  416ca8:	mov	x0, xzr
  416cac:	bl	404bf0 <dcgettext@plt>
  416cb0:	mov	x2, x0
  416cb4:	mov	w0, wzr
  416cb8:	mov	w1, wzr
  416cbc:	bl	4041f0 <error@plt>
  416cc0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416cc4:	mov	w9, #0x2                   	// #2
  416cc8:	mov	w0, wzr
  416ccc:	str	w9, [x8, #3456]
  416cd0:	ldp	x20, x19, [sp, #32]
  416cd4:	ldp	x22, x21, [sp, #16]
  416cd8:	ldp	x29, x30, [sp], #48
  416cdc:	ret
  416ce0:	stp	x29, x30, [sp, #-32]!
  416ce4:	cmp	w0, #0x56
  416ce8:	stp	x20, x19, [sp, #16]
  416cec:	mov	x29, sp
  416cf0:	b.eq	416d3c <wcrtomb@plt+0x11f1c>  // b.none
  416cf4:	mov	w20, w0
  416cf8:	mov	x19, x1
  416cfc:	add	x0, x1, #0x8
  416d00:	mov	w1, #0x1                   	// #1
  416d04:	bl	416d48 <wcrtomb@plt+0x11f28>
  416d08:	cmp	w20, #0x32
  416d0c:	b.eq	416d20 <wcrtomb@plt+0x11f00>  // b.none
  416d10:	cmp	w20, #0x31
  416d14:	b.ne	416d2c <wcrtomb@plt+0x11f0c>  // b.any
  416d18:	mov	w1, #0x2                   	// #2
  416d1c:	b	416d24 <wcrtomb@plt+0x11f04>
  416d20:	mov	w1, #0x4                   	// #4
  416d24:	add	x0, x19, #0x18
  416d28:	bl	416d48 <wcrtomb@plt+0x11f28>
  416d2c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416d30:	ldrb	w8, [x8, #843]
  416d34:	cbz	w8, 416d3c <wcrtomb@plt+0x11f1c>
  416d38:	bl	416d74 <wcrtomb@plt+0x11f54>
  416d3c:	ldp	x20, x19, [sp, #16]
  416d40:	ldp	x29, x30, [sp], #32
  416d44:	ret
  416d48:	sub	sp, sp, #0x20
  416d4c:	stp	x29, x30, [sp, #16]
  416d50:	add	x29, sp, #0x10
  416d54:	adrp	x2, 418000 <wcrtomb@plt+0x131e0>
  416d58:	add	x2, x2, #0xf70
  416d5c:	sub	x3, x29, #0x4
  416d60:	stur	w1, [x29, #-4]
  416d64:	bl	424ea0 <wcrtomb@plt+0x20080>
  416d68:	ldp	x29, x30, [sp, #16]
  416d6c:	add	sp, sp, #0x20
  416d70:	ret
  416d74:	stp	x29, x30, [sp, #-64]!
  416d78:	str	x23, [sp, #16]
  416d7c:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  416d80:	stp	x20, x19, [sp, #48]
  416d84:	ldr	x19, [x23, #104]
  416d88:	stp	x22, x21, [sp, #32]
  416d8c:	mov	x29, sp
  416d90:	sub	x20, x19, #0x1
  416d94:	ldrb	w8, [x20, #1]!
  416d98:	and	w9, w8, #0xfe
  416d9c:	cmp	w9, #0x2e
  416da0:	b.eq	416d94 <wcrtomb@plt+0x11f74>  // b.none
  416da4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  416da8:	ldr	x21, [x9, #568]
  416dac:	cbz	w8, 416de8 <wcrtomb@plt+0x11fc8>
  416db0:	mov	x0, x21
  416db4:	bl	404190 <strlen@plt>
  416db8:	mov	x22, x0
  416dbc:	sxtw	x2, w0
  416dc0:	mov	x0, x20
  416dc4:	mov	x1, x21
  416dc8:	bl	4045a0 <strncmp@plt>
  416dcc:	cbz	w0, 416e10 <wcrtomb@plt+0x11ff0>
  416dd0:	mov	x0, x21
  416dd4:	mov	x1, x19
  416dd8:	bl	41c5e0 <wcrtomb@plt+0x177c0>
  416ddc:	str	x0, [x23, #104]
  416de0:	bl	4198e4 <wcrtomb@plt+0x14ac4>
  416de4:	b	416df4 <wcrtomb@plt+0x11fd4>
  416de8:	mov	x0, x21
  416dec:	bl	43d39c <argp_usage@@Base+0xb7a0>
  416df0:	str	x0, [x23, #104]
  416df4:	mov	x0, x19
  416df8:	bl	4049d0 <free@plt>
  416dfc:	ldp	x20, x19, [sp, #48]
  416e00:	ldp	x22, x21, [sp, #32]
  416e04:	ldr	x23, [sp, #16]
  416e08:	ldp	x29, x30, [sp], #64
  416e0c:	ret
  416e10:	ldrb	w8, [x20, w22, sxtw]
  416e14:	cbz	w8, 416dfc <wcrtomb@plt+0x11fdc>
  416e18:	cmp	w8, #0x2f
  416e1c:	b.eq	416dfc <wcrtomb@plt+0x11fdc>  // b.none
  416e20:	b	416dd0 <wcrtomb@plt+0x11fb0>
  416e24:	sub	sp, sp, #0x90
  416e28:	stp	x29, x30, [sp, #48]
  416e2c:	stp	x28, x27, [sp, #64]
  416e30:	stp	x26, x25, [sp, #80]
  416e34:	stp	x24, x23, [sp, #96]
  416e38:	stp	x22, x21, [sp, #112]
  416e3c:	stp	x20, x19, [sp, #128]
  416e40:	add	x29, sp, #0x30
  416e44:	str	x0, [sp, #16]
  416e48:	bl	4172a0 <wcrtomb@plt+0x12480>
  416e4c:	bl	41b4a4 <wcrtomb@plt+0x16684>
  416e50:	mov	w0, wzr
  416e54:	bl	405f4c <wcrtomb@plt+0x112c>
  416e58:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  416e5c:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  416e60:	adrp	x19, 452000 <_obstack_memory_used@@Base+0x13da0>
  416e64:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x13da0>
  416e68:	mov	w25, wzr
  416e6c:	add	x20, x20, #0x60
  416e70:	add	x26, x26, #0x68
  416e74:	add	x19, x19, #0x2bf
  416e78:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  416e7c:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  416e80:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  416e84:	add	x21, x21, #0x19f
  416e88:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416e8c:	mov	x0, x20
  416e90:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  416e94:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416e98:	add	x0, x0, #0xfe8
  416e9c:	mov	x1, x20
  416ea0:	mov	w2, wzr
  416ea4:	bl	4172f0 <wcrtomb@plt+0x124d0>
  416ea8:	cmp	w0, #0x5
  416eac:	b.hi	4171fc <wcrtomb@plt+0x123dc>  // b.pmore
  416eb0:	adrp	x11, 452000 <_obstack_memory_used@@Base+0x13da0>
  416eb4:	mov	w8, w0
  416eb8:	add	x11, x11, #0x199
  416ebc:	adr	x9, 416ed0 <wcrtomb@plt+0x120b0>
  416ec0:	ldrb	w10, [x11, x8]
  416ec4:	add	x9, x9, x10, lsl #2
  416ec8:	mov	w28, w0
  416ecc:	br	x9
  416ed0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416ed4:	ldr	x0, [x8, #4072]
  416ed8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416edc:	mov	w3, #0x1                   	// #1
  416ee0:	mov	x1, x20
  416ee4:	add	x2, x2, #0xfd0
  416ee8:	bl	417798 <wcrtomb@plt+0x12978>
  416eec:	ldr	x0, [x20, #8]
  416ef0:	bl	41b86c <wcrtomb@plt+0x16a4c>
  416ef4:	tbz	w0, #0, 416f48 <wcrtomb@plt+0x12128>
  416ef8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416efc:	ldr	x8, [x8, #48]
  416f00:	tbnz	x8, #63, 416f38 <wcrtomb@plt+0x12118>
  416f04:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416f08:	ldr	x8, [x8, #4072]
  416f0c:	add	x0, x8, #0x88
  416f10:	bl	417a80 <wcrtomb@plt+0x12c60>
  416f14:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416f18:	add	x8, x8, #0x28
  416f1c:	ldp	x2, x3, [x8]
  416f20:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416f24:	add	x8, x8, #0x148
  416f28:	mov	x1, xzr
  416f2c:	stp	x0, xzr, [x8]
  416f30:	bl	43cd0c <argp_usage@@Base+0xb110>
  416f34:	tbnz	w0, #31, 416f48 <wcrtomb@plt+0x12128>
  416f38:	ldr	x0, [x26]
  416f3c:	ldr	x1, [x26, #384]
  416f40:	bl	40e11c <wcrtomb@plt+0x92fc>
  416f44:	tbz	w0, #0, 41713c <wcrtomb@plt+0x1231c>
  416f48:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416f4c:	ldr	x8, [x8, #4072]
  416f50:	ldrb	w8, [x8, #156]
  416f54:	cmp	w8, #0x56
  416f58:	b.eq	41713c <wcrtomb@plt+0x1231c>  // b.none
  416f5c:	cmp	w8, #0x4d
  416f60:	b.eq	41713c <wcrtomb@plt+0x1231c>  // b.none
  416f64:	cmp	w8, #0x35
  416f68:	b.ne	416fc0 <wcrtomb@plt+0x121a0>  // b.any
  416f6c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416f70:	ldrb	w8, [x8, #698]
  416f74:	cbz	w8, 416fc0 <wcrtomb@plt+0x121a0>
  416f78:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  416f7c:	ldr	x8, [x8, #1008]
  416f80:	cbz	x8, 416f88 <wcrtomb@plt+0x12168>
  416f84:	blr	x8
  416f88:	mov	w2, #0x5                   	// #5
  416f8c:	mov	x0, xzr
  416f90:	mov	x1, x19
  416f94:	bl	404bf0 <dcgettext@plt>
  416f98:	ldr	x8, [x22, #104]
  416f9c:	mov	x23, x0
  416fa0:	mov	x0, x8
  416fa4:	bl	43beac <argp_usage@@Base+0xa2b0>
  416fa8:	mov	x3, x0
  416fac:	mov	w0, wzr
  416fb0:	mov	w1, wzr
  416fb4:	mov	x2, x23
  416fb8:	bl	4041f0 <error@plt>
  416fbc:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416fc0:	bl	417ab0 <wcrtomb@plt+0x12c90>
  416fc4:	b	417158 <wcrtomb@plt+0x12338>
  416fc8:	ldrb	w8, [x27, #673]
  416fcc:	cbz	w8, 41702c <wcrtomb@plt+0x1220c>
  416fd0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  416fd4:	ldr	x20, [x8, #3928]
  416fd8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  416fdc:	mov	w2, #0x5                   	// #5
  416fe0:	mov	x0, xzr
  416fe4:	add	x1, x1, #0x2cc
  416fe8:	mov	x21, x24
  416fec:	mov	x24, x22
  416ff0:	bl	404bf0 <dcgettext@plt>
  416ff4:	mov	x28, x0
  416ff8:	bl	405568 <wcrtomb@plt+0x748>
  416ffc:	add	x1, sp, #0x18
  417000:	bl	43650c <argp_usage@@Base+0x4910>
  417004:	mov	x3, x0
  417008:	mov	w1, #0x1                   	// #1
  41700c:	mov	x0, x20
  417010:	mov	x24, x21
  417014:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x13da0>
  417018:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  41701c:	mov	x2, x28
  417020:	add	x21, x21, #0x19f
  417024:	add	x20, x20, #0x60
  417028:	bl	404910 <__fprintf_chk@plt>
  41702c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417030:	ldr	x0, [x8, #4072]
  417034:	bl	405744 <wcrtomb@plt+0x924>
  417038:	ldrb	w8, [x24, #77]
  41703c:	mov	w28, w25
  417040:	cbnz	w8, 417158 <wcrtomb@plt+0x12338>
  417044:	b	417224 <wcrtomb@plt+0x12404>
  417048:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41704c:	ldr	x0, [x8, #4072]
  417050:	bl	405744 <wcrtomb@plt+0x924>
  417054:	cmp	w25, #0x3
  417058:	b.hi	417158 <wcrtomb@plt+0x12338>  // b.pmore
  41705c:	mov	w8, w25
  417060:	adr	x9, 417070 <wcrtomb@plt+0x12250>
  417064:	ldrb	w10, [x21, x8]
  417068:	add	x9, x9, x10, lsl #2
  41706c:	br	x9
  417070:	ldrb	w8, [x27, #673]
  417074:	cbz	w8, 4170fc <wcrtomb@plt+0x122dc>
  417078:	bl	405568 <wcrtomb@plt+0x748>
  41707c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417080:	ldr	x8, [x8, #4064]
  417084:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417088:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41708c:	ldr	x9, [x9, #4080]
  417090:	ldr	x10, [x10, #3928]
  417094:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  417098:	sub	x8, x0, x8
  41709c:	mov	w2, #0x5                   	// #5
  4170a0:	mov	x0, xzr
  4170a4:	add	x1, x1, #0x308
  4170a8:	str	x10, [sp, #8]
  4170ac:	sub	x25, x8, x9
  4170b0:	bl	404bf0 <dcgettext@plt>
  4170b4:	mov	x27, x0
  4170b8:	add	x1, sp, #0x18
  4170bc:	mov	x0, x25
  4170c0:	mov	x23, x20
  4170c4:	mov	x20, x21
  4170c8:	mov	x21, x24
  4170cc:	mov	x24, x22
  4170d0:	bl	43650c <argp_usage@@Base+0x4910>
  4170d4:	mov	x3, x0
  4170d8:	ldr	x0, [sp, #8]
  4170dc:	mov	w1, #0x1                   	// #1
  4170e0:	mov	x2, x27
  4170e4:	mov	x24, x21
  4170e8:	mov	x21, x20
  4170ec:	mov	x20, x23
  4170f0:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4170f4:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  4170f8:	bl	404910 <__fprintf_chk@plt>
  4170fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417100:	ldr	x8, [x8, #1008]
  417104:	cbz	x8, 41710c <wcrtomb@plt+0x122ec>
  417108:	blr	x8
  41710c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  417110:	mov	w2, #0x5                   	// #5
  417114:	mov	x0, xzr
  417118:	add	x1, x1, #0xc8
  41711c:	bl	404bf0 <dcgettext@plt>
  417120:	mov	x2, x0
  417124:	mov	w0, wzr
  417128:	mov	w1, wzr
  41712c:	bl	4041f0 <error@plt>
  417130:	mov	w8, #0x2                   	// #2
  417134:	str	w8, [x23, #3456]
  417138:	b	417158 <wcrtomb@plt+0x12338>
  41713c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417140:	ldr	x8, [x8, #4072]
  417144:	mov	x1, x20
  417148:	ldrb	w0, [x8, #156]
  41714c:	bl	416ce0 <wcrtomb@plt+0x11ec0>
  417150:	ldr	x8, [sp, #16]
  417154:	blr	x8
  417158:	mov	x0, x20
  41715c:	bl	41ba10 <wcrtomb@plt+0x16bf0>
  417160:	mov	w25, w28
  417164:	tbz	w0, #0, 416e8c <wcrtomb@plt+0x1206c>
  417168:	b	4171fc <wcrtomb@plt+0x123dc>
  41716c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417170:	ldr	x8, [x8, #1008]
  417174:	cbz	x8, 41717c <wcrtomb@plt+0x1235c>
  417178:	blr	x8
  41717c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  417180:	mov	w2, #0x5                   	// #5
  417184:	mov	x0, xzr
  417188:	add	x1, x1, #0x447
  41718c:	bl	404bf0 <dcgettext@plt>
  417190:	mov	x2, x0
  417194:	mov	w0, wzr
  417198:	mov	w1, wzr
  41719c:	bl	4041f0 <error@plt>
  4171a0:	mov	w8, #0x2                   	// #2
  4171a4:	str	w8, [x23, #3456]
  4171a8:	ldrb	w8, [x27, #673]
  4171ac:	cbnz	w8, 417078 <wcrtomb@plt+0x12258>
  4171b0:	b	4170fc <wcrtomb@plt+0x122dc>
  4171b4:	ldrb	w8, [x27, #673]
  4171b8:	cbz	w8, 4171fc <wcrtomb@plt+0x123dc>
  4171bc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4171c0:	ldr	x19, [x8, #3928]
  4171c4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  4171c8:	add	x1, x1, #0x2eb
  4171cc:	mov	w2, #0x5                   	// #5
  4171d0:	mov	x0, xzr
  4171d4:	bl	404bf0 <dcgettext@plt>
  4171d8:	mov	x20, x0
  4171dc:	bl	405568 <wcrtomb@plt+0x748>
  4171e0:	add	x1, sp, #0x18
  4171e4:	bl	43650c <argp_usage@@Base+0x4910>
  4171e8:	mov	x3, x0
  4171ec:	mov	w1, #0x1                   	// #1
  4171f0:	mov	x0, x19
  4171f4:	mov	x2, x20
  4171f8:	bl	404910 <__fprintf_chk@plt>
  4171fc:	bl	405c30 <wcrtomb@plt+0xe10>
  417200:	bl	41baa8 <wcrtomb@plt+0x16c88>
  417204:	ldp	x20, x19, [sp, #128]
  417208:	ldp	x22, x21, [sp, #112]
  41720c:	ldp	x24, x23, [sp, #96]
  417210:	ldp	x26, x25, [sp, #80]
  417214:	ldp	x28, x27, [sp, #64]
  417218:	ldp	x29, x30, [sp, #48]
  41721c:	add	sp, sp, #0x90
  417220:	ret
  417224:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417228:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  41722c:	add	x0, x0, #0xfe8
  417230:	add	x1, x1, #0x60
  417234:	mov	w2, wzr
  417238:	bl	4172f0 <wcrtomb@plt+0x124d0>
  41723c:	cmp	w0, #0x3
  417240:	b.eq	4171fc <wcrtomb@plt+0x123dc>  // b.none
  417244:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417248:	ldrb	w8, [x8, #448]
  41724c:	tbz	w8, #0, 4171fc <wcrtomb@plt+0x123dc>
  417250:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417254:	ldr	x8, [x8, #1008]
  417258:	cbz	x8, 417260 <wcrtomb@plt+0x12440>
  41725c:	blr	x8
  417260:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  417264:	add	x1, x1, #0xbf4
  417268:	mov	w2, #0x5                   	// #5
  41726c:	mov	x0, xzr
  417270:	bl	404bf0 <dcgettext@plt>
  417274:	mov	x19, x0
  417278:	bl	405568 <wcrtomb@plt+0x748>
  41727c:	add	x1, sp, #0x18
  417280:	bl	43650c <argp_usage@@Base+0x4910>
  417284:	mov	x3, x0
  417288:	mov	w0, wzr
  41728c:	mov	w1, wzr
  417290:	mov	x2, x19
  417294:	bl	4041f0 <error@plt>
  417298:	b	4171fc <wcrtomb@plt+0x123dc>
  41729c:	bl	404870 <abort@plt>
  4172a0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4172a4:	adrp	x10, 452000 <_obstack_memory_used@@Base+0x13da0>
  4172a8:	mov	x8, xzr
  4172ac:	add	x9, x9, #0x8fe
  4172b0:	movi	v0.16b, #0x40
  4172b4:	add	x10, x10, #0x27f
  4172b8:	stp	q0, q0, [x9, #224]
  4172bc:	stp	q0, q0, [x9, #192]
  4172c0:	stp	q0, q0, [x9, #160]
  4172c4:	stp	q0, q0, [x9, #128]
  4172c8:	stp	q0, q0, [x9, #96]
  4172cc:	stp	q0, q0, [x9, #64]
  4172d0:	stp	q0, q0, [x9, #32]
  4172d4:	stp	q0, q0, [x9]
  4172d8:	ldrb	w11, [x10, x8]
  4172dc:	strb	w8, [x9, x11]
  4172e0:	add	x8, x8, #0x1
  4172e4:	cmp	x8, #0x40
  4172e8:	b.ne	4172d8 <wcrtomb@plt+0x124b8>  // b.any
  4172ec:	ret
  4172f0:	sub	sp, sp, #0x1b0
  4172f4:	cmp	w2, #0x2
  4172f8:	add	x8, x1, #0x18
  4172fc:	stp	x26, x25, [sp, #368]
  417300:	stp	x24, x23, [sp, #384]
  417304:	stp	x22, x21, [sp, #400]
  417308:	stp	x20, x19, [sp, #416]
  41730c:	mov	w24, w2
  417310:	mov	x25, x1
  417314:	mov	x21, x0
  417318:	mov	x19, xzr
  41731c:	mov	x20, xzr
  417320:	add	x22, x1, #0x158
  417324:	add	x26, x1, #0x8
  417328:	str	x8, [sp, #40]
  41732c:	mov	w23, #0x1                   	// #1
  417330:	cset	w8, eq  // eq = none
  417334:	stp	x29, x30, [sp, #336]
  417338:	stp	x28, x27, [sp, #352]
  41733c:	add	x29, sp, #0x150
  417340:	stp	xzr, xzr, [sp, #48]
  417344:	str	w8, [sp, #36]
  417348:	b	417358 <wcrtomb@plt+0x12538>
  41734c:	mov	w8, #0x1                   	// #1
  417350:	mov	w27, w0
  417354:	cbnz	w8, 417770 <wcrtomb@plt+0x12950>
  417358:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41735c:	str	x0, [x21]
  417360:	cbz	x0, 41738c <wcrtomb@plt+0x1256c>
  417364:	mov	w1, wzr
  417368:	mov	x28, x0
  41736c:	bl	417c1c <wcrtomb@plt+0x12dfc>
  417370:	cmp	w0, #0x1
  417374:	b.ne	41734c <wcrtomb@plt+0x1252c>  // b.any
  417378:	ldrb	w8, [x28, #156]
  41737c:	cmp	w8, #0x31
  417380:	b.ne	417394 <wcrtomb@plt+0x12574>  // b.any
  417384:	str	xzr, [x25, #136]
  417388:	b	4173a8 <wcrtomb@plt+0x12588>
  41738c:	mov	w27, #0x4                   	// #4
  417390:	b	41746c <wcrtomb@plt+0x1264c>
  417394:	add	x0, x28, #0x7c
  417398:	mov	w1, #0xc                   	// #12
  41739c:	bl	4183c0 <wcrtomb@plt+0x135a0>
  4173a0:	str	x0, [x25, #136]
  4173a4:	tbnz	x0, #63, 417468 <wcrtomb@plt+0x12648>
  4173a8:	ldrb	w8, [x28, #156]
  4173ac:	sub	w8, w8, #0x4b
  4173b0:	cmp	w8, #0x2d
  4173b4:	b.hi	417474 <wcrtomb@plt+0x12654>  // b.pmore
  4173b8:	mov	x10, #0x2003                	// #8195
  4173bc:	movk	x10, #0x1000, lsl #16
  4173c0:	lsl	x9, x23, x8
  4173c4:	movk	x10, #0x2000, lsl #32
  4173c8:	tst	x9, x10
  4173cc:	b.eq	417474 <wcrtomb@plt+0x12654>  // b.none
  4173d0:	cmp	w24, #0x1
  4173d4:	b.ne	4173e0 <wcrtomb@plt+0x125c0>  // b.any
  4173d8:	mov	w27, #0x2                   	// #2
  4173dc:	b	41746c <wcrtomb@plt+0x1264c>
  4173e0:	cmp	w8, #0x2d
  4173e4:	b.hi	417624 <wcrtomb@plt+0x12804>  // b.pmore
  4173e8:	adrp	x11, 452000 <_obstack_memory_used@@Base+0x13da0>
  4173ec:	add	x11, x11, #0x1a3
  4173f0:	adr	x9, 417400 <wcrtomb@plt+0x125e0>
  4173f4:	ldrb	w10, [x11, x8]
  4173f8:	add	x9, x9, x10, lsl #2
  4173fc:	br	x9
  417400:	str	x25, [sp, #24]
  417404:	ldr	x25, [x25, #136]
  417408:	mov	w9, #0x200                 	// #512
  41740c:	str	x26, [sp, #8]
  417410:	str	w24, [sp, #20]
  417414:	and	x8, x25, #0x1ff
  417418:	sub	x8, x9, x8
  41741c:	tst	x25, #0x1ff
  417420:	csel	x26, xzr, x8, eq  // eq = none
  417424:	add	x8, x26, x25
  417428:	mov	x24, x22
  41742c:	add	x22, x8, #0x200
  417430:	cmp	x22, x25
  417434:	b.cc	417794 <wcrtomb@plt+0x12974>  // b.lo, b.ul, b.last
  417438:	add	x0, x8, #0x201
  41743c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  417440:	ldrb	w8, [x28, #156]
  417444:	mov	x23, x0
  417448:	lsr	x22, x22, #9
  41744c:	cmp	w8, #0x4c
  417450:	b.ne	4174b4 <wcrtomb@plt+0x12694>  // b.any
  417454:	mov	x0, x19
  417458:	bl	4049d0 <free@plt>
  41745c:	mov	x19, x23
  417460:	str	x22, [sp, #56]
  417464:	b	4174c4 <wcrtomb@plt+0x126a4>
  417468:	mov	w27, #0x5                   	// #5
  41746c:	mov	w8, #0x1                   	// #1
  417470:	b	417354 <wcrtomb@plt+0x12534>
  417474:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417478:	ldr	x0, [x27, #4056]
  41747c:	bl	4049d0 <free@plt>
  417480:	cbz	x19, 4175a8 <wcrtomb@plt+0x12788>
  417484:	ldr	x10, [sp, #56]
  417488:	add	x23, x19, #0x200
  41748c:	mov	x9, x19
  417490:	b	4176b4 <wcrtomb@plt+0x12894>
  417494:	add	x0, x28, #0x7c
  417498:	mov	w1, #0xc                   	// #12
  41749c:	bl	4183c0 <wcrtomb@plt+0x135a0>
  4174a0:	mov	x2, x0
  4174a4:	mov	x0, x22
  4174a8:	mov	x1, x28
  4174ac:	bl	412298 <wcrtomb@plt+0xd478>
  4174b0:	b	417624 <wcrtomb@plt+0x12804>
  4174b4:	mov	x0, x20
  4174b8:	bl	4049d0 <free@plt>
  4174bc:	mov	x20, x23
  4174c0:	str	x22, [sp, #48]
  4174c4:	mov	x0, x28
  4174c8:	bl	405744 <wcrtomb@plt+0x924>
  4174cc:	mov	w2, #0x200                 	// #512
  4174d0:	mov	x0, x23
  4174d4:	mov	x1, x28
  4174d8:	bl	404110 <memcpy@plt>
  4174dc:	adds	x26, x26, x25
  4174e0:	add	x28, x23, #0x200
  4174e4:	mov	x22, x24
  4174e8:	b.eq	4175cc <wcrtomb@plt+0x127ac>  // b.none
  4174ec:	ldr	w24, [sp, #20]
  4174f0:	bl	4055d4 <wcrtomb@plt+0x7b4>
  4174f4:	cbz	x0, 4175d4 <wcrtomb@plt+0x127b4>
  4174f8:	mov	x23, x0
  4174fc:	bl	405788 <wcrtomb@plt+0x968>
  417500:	cmp	x0, x26
  417504:	csel	x25, x26, x0, hi  // hi = pmore
  417508:	mov	x0, x28
  41750c:	mov	x1, x23
  417510:	mov	x2, x25
  417514:	bl	404110 <memcpy@plt>
  417518:	add	x8, x23, x25
  41751c:	sub	x0, x8, #0x1
  417520:	add	x28, x28, x25
  417524:	bl	405744 <wcrtomb@plt+0x924>
  417528:	subs	x26, x26, x25
  41752c:	b.ne	4174f0 <wcrtomb@plt+0x126d0>  // b.any
  417530:	b	417614 <wcrtomb@plt+0x127f4>
  417534:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417538:	ldr	x8, [x9, #2256]
  41753c:	cbnz	x8, 417550 <wcrtomb@plt+0x12730>
  417540:	mov	w0, #0x200                 	// #512
  417544:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  417548:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41754c:	str	x0, [x9, #2256]
  417550:	ldr	x0, [x9, #2256]
  417554:	mov	w2, #0x200                 	// #512
  417558:	mov	x1, x28
  41755c:	bl	404110 <memcpy@plt>
  417560:	movi	v0.2d, #0x0
  417564:	add	x0, x28, #0x7c
  417568:	mov	w1, #0xc                   	// #12
  41756c:	stp	q0, q0, [sp, #64]
  417570:	bl	4183c0 <wcrtomb@plt+0x135a0>
  417574:	mov	x2, x0
  417578:	add	x0, sp, #0x40
  41757c:	mov	x1, x28
  417580:	bl	412298 <wcrtomb@plt+0xd478>
  417584:	add	x0, sp, #0x40
  417588:	bl	412018 <wcrtomb@plt+0xd1f8>
  41758c:	add	x0, sp, #0x40
  417590:	bl	4117cc <wcrtomb@plt+0xc9ac>
  417594:	ldr	w8, [sp, #36]
  417598:	cmp	w24, #0x2
  41759c:	csel	w27, w24, w27, eq  // eq = none
  4175a0:	b.eq	417354 <wcrtomb@plt+0x12534>  // b.none
  4175a4:	b	417624 <wcrtomb@plt+0x12804>
  4175a8:	ldrb	w8, [x28, #345]
  4175ac:	cbz	w8, 4175c4 <wcrtomb@plt+0x127a4>
  4175b0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  4175b4:	add	x0, x28, #0x101
  4175b8:	add	x1, x1, #0x4fe
  4175bc:	bl	404920 <strcmp@plt>
  4175c0:	cbz	w0, 41762c <wcrtomb@plt+0x1280c>
  4175c4:	add	x8, sp, #0x40
  4175c8:	b	41767c <wcrtomb@plt+0x1285c>
  4175cc:	ldr	w24, [sp, #20]
  4175d0:	b	417614 <wcrtomb@plt+0x127f4>
  4175d4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4175d8:	ldr	x8, [x8, #1008]
  4175dc:	cbz	x8, 4175e4 <wcrtomb@plt+0x127c4>
  4175e0:	blr	x8
  4175e4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4175e8:	mov	w2, #0x5                   	// #5
  4175ec:	mov	x0, xzr
  4175f0:	add	x1, x1, #0xc61
  4175f4:	bl	404bf0 <dcgettext@plt>
  4175f8:	mov	x2, x0
  4175fc:	mov	w0, wzr
  417600:	mov	w1, wzr
  417604:	bl	4041f0 <error@plt>
  417608:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41760c:	mov	w9, #0x2                   	// #2
  417610:	str	w9, [x8, #3456]
  417614:	ldr	x25, [sp, #24]
  417618:	ldr	x26, [sp, #8]
  41761c:	strb	wzr, [x28]
  417620:	mov	w23, #0x1                   	// #1
  417624:	mov	w8, wzr
  417628:	b	417354 <wcrtomb@plt+0x12534>
  41762c:	add	x8, x28, #0x159
  417630:	ldp	q1, q0, [x8]
  417634:	add	x0, sp, #0x40
  417638:	stp	q1, q0, [sp, #64]
  41763c:	ldp	q1, q0, [x8, #64]
  417640:	ldp	q3, q2, [x8, #32]
  417644:	stp	q1, q0, [sp, #128]
  417648:	stp	q3, q2, [sp, #96]
  41764c:	ldur	q0, [x8, #139]
  417650:	ldp	q2, q1, [x8, #112]
  417654:	ldr	q3, [x8, #96]
  417658:	strb	wzr, [sp, #219]
  41765c:	stur	q0, [sp, #203]
  417660:	stp	q2, q1, [sp, #176]
  417664:	str	q3, [sp, #160]
  417668:	bl	404190 <strlen@plt>
  41766c:	add	x8, sp, #0x40
  417670:	add	x8, x8, x0
  417674:	mov	w9, #0x2f                  	// #47
  417678:	strb	w9, [x8], #1
  41767c:	ldp	q1, q0, [x28, #16]
  417680:	ldr	q2, [x28]
  417684:	mov	x9, xzr
  417688:	mov	x10, xzr
  41768c:	stp	q1, q0, [x8, #16]
  417690:	str	q2, [x8]
  417694:	ldr	w11, [x28, #96]
  417698:	ldp	q2, q0, [x28, #64]
  41769c:	ldr	q1, [x28, #48]
  4176a0:	add	x23, sp, #0x40
  4176a4:	str	w11, [x8, #96]
  4176a8:	strb	wzr, [x8, #100]
  4176ac:	stp	q2, q0, [x8, #64]
  4176b0:	str	q1, [x8, #48]
  4176b4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4176b8:	mov	x0, x25
  4176bc:	mov	x1, x23
  4176c0:	str	x9, [x27, #4056]
  4176c4:	str	x10, [x8, #4064]
  4176c8:	bl	419680 <wcrtomb@plt+0x14860>
  4176cc:	mov	x0, x26
  4176d0:	mov	x1, x23
  4176d4:	bl	419680 <wcrtomb@plt+0x14860>
  4176d8:	ldr	x0, [x25, #8]
  4176dc:	bl	432720 <argp_usage@@Base+0xb24>
  4176e0:	and	w8, w0, #0x1
  4176e4:	strb	w8, [x25, #16]
  4176e8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4176ec:	ldr	x0, [x8, #4088]
  4176f0:	bl	4049d0 <free@plt>
  4176f4:	cbz	x20, 417708 <wcrtomb@plt+0x128e8>
  4176f8:	ldr	x9, [sp, #48]
  4176fc:	add	x1, x20, #0x200
  417700:	mov	x8, x20
  417704:	b	417748 <wcrtomb@plt+0x12928>
  417708:	ldur	q0, [x28, #189]
  41770c:	ldur	q1, [x28, #173]
  417710:	ldur	q2, [x28, #157]
  417714:	mov	x8, xzr
  417718:	mov	x9, xzr
  41771c:	stp	q1, q0, [sp, #80]
  417720:	str	q2, [sp, #64]
  417724:	ldur	w10, [x28, #253]
  417728:	ldur	q0, [x28, #205]
  41772c:	ldur	q1, [x28, #237]
  417730:	ldur	q2, [x28, #221]
  417734:	add	x1, sp, #0x40
  417738:	str	w10, [sp, #160]
  41773c:	str	q0, [sp, #112]
  417740:	stp	q2, q1, [sp, #128]
  417744:	strb	wzr, [sp, #164]
  417748:	ldr	x0, [sp, #40]
  41774c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417750:	str	x8, [x10, #4088]
  417754:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417758:	mov	w23, #0x1                   	// #1
  41775c:	str	x9, [x8, #4080]
  417760:	bl	419680 <wcrtomb@plt+0x14860>
  417764:	mov	w8, #0x1                   	// #1
  417768:	mov	w27, #0x1                   	// #1
  41776c:	b	417354 <wcrtomb@plt+0x12534>
  417770:	mov	w0, w27
  417774:	ldp	x20, x19, [sp, #416]
  417778:	ldp	x22, x21, [sp, #400]
  41777c:	ldp	x24, x23, [sp, #384]
  417780:	ldp	x26, x25, [sp, #368]
  417784:	ldp	x28, x27, [sp, #352]
  417788:	ldp	x29, x30, [sp, #336]
  41778c:	add	sp, sp, #0x1b0
  417790:	ret
  417794:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  417798:	sub	sp, sp, #0x50
  41779c:	stp	x29, x30, [sp, #16]
  4177a0:	add	x29, sp, #0x10
  4177a4:	stp	x20, x19, [sp, #64]
  4177a8:	mov	x19, x1
  4177ac:	mov	x20, x0
  4177b0:	add	x0, x0, #0x64
  4177b4:	sub	x1, x29, #0x4
  4177b8:	stp	x24, x23, [sp, #32]
  4177bc:	stp	x22, x21, [sp, #48]
  4177c0:	mov	w21, w3
  4177c4:	mov	x22, x2
  4177c8:	bl	4183ec <wcrtomb@plt+0x135cc>
  4177cc:	add	x24, x20, #0x101
  4177d0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  4177d4:	mov	w23, w0
  4177d8:	add	x1, x1, #0x4fe
  4177dc:	mov	x0, x24
  4177e0:	bl	404920 <strcmp@plt>
  4177e4:	cbz	w0, 417804 <wcrtomb@plt+0x129e4>
  4177e8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4177ec:	add	x1, x1, #0x8fa
  4177f0:	mov	x0, x24
  4177f4:	bl	404920 <strcmp@plt>
  4177f8:	cbz	w0, 417860 <wcrtomb@plt+0x12a40>
  4177fc:	mov	w24, #0x1                   	// #1
  417800:	b	417874 <wcrtomb@plt+0x12a54>
  417804:	ldrb	w8, [x20, #475]
  417808:	cbnz	w8, 41784c <wcrtomb@plt+0x12a2c>
  41780c:	ldrb	w8, [x20, #476]
  417810:	and	w8, w8, #0xf8
  417814:	cmp	w8, #0x30
  417818:	b.ne	41784c <wcrtomb@plt+0x12a2c>  // b.any
  41781c:	ldrb	w8, [x20, #487]
  417820:	cmp	w8, #0x20
  417824:	b.ne	41784c <wcrtomb@plt+0x12a2c>  // b.any
  417828:	ldrb	w8, [x20, #488]
  41782c:	and	w8, w8, #0xf8
  417830:	cmp	w8, #0x30
  417834:	b.ne	41784c <wcrtomb@plt+0x12a2c>  // b.any
  417838:	ldrb	w8, [x20, #499]
  41783c:	cmp	w8, #0x20
  417840:	b.ne	41784c <wcrtomb@plt+0x12a2c>  // b.any
  417844:	mov	w24, #0x5                   	// #5
  417848:	b	417874 <wcrtomb@plt+0x12a54>
  41784c:	ldr	x8, [x19, #352]
  417850:	cmp	x8, #0x0
  417854:	mov	w8, #0x3                   	// #3
  417858:	cinc	w24, w8, ne  // ne = any
  41785c:	b	417874 <wcrtomb@plt+0x12a54>
  417860:	ldurb	w8, [x29, #-4]
  417864:	mov	w9, #0x2                   	// #2
  417868:	cmp	w8, #0x0
  41786c:	mov	w8, #0x6                   	// #6
  417870:	csel	w24, w8, w9, eq  // eq = none
  417874:	add	x0, x20, #0x88
  417878:	str	w24, [x22]
  41787c:	str	w23, [x19, #104]
  417880:	bl	417a80 <wcrtomb@plt+0x12c60>
  417884:	stp	x0, xzr, [x19, #232]
  417888:	ldrb	w8, [x20, #265]
  41788c:	add	x23, x20, #0x109
  417890:	add	x0, x19, #0x20
  417894:	mov	w2, #0x20                  	// #32
  417898:	cmp	w8, #0x0
  41789c:	csel	x1, xzr, x23, eq  // eq = none
  4178a0:	bl	4196c0 <wcrtomb@plt+0x148a0>
  4178a4:	ldrb	w8, [x20, #297]
  4178a8:	add	x22, x20, #0x129
  4178ac:	add	x0, x19, #0x28
  4178b0:	mov	w2, #0x20                  	// #32
  4178b4:	cmp	w8, #0x0
  4178b8:	csel	x1, xzr, x22, eq  // eq = none
  4178bc:	bl	4196c0 <wcrtomb@plt+0x148a0>
  4178c0:	mov	x0, x19
  4178c4:	bl	411a30 <wcrtomb@plt+0xcc10>
  4178c8:	cmp	w24, #0x2
  4178cc:	b.ne	4178f0 <wcrtomb@plt+0x12ad0>  // b.any
  4178d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4178d4:	ldrb	w8, [x8, #33]
  4178d8:	cbz	w8, 4178f0 <wcrtomb@plt+0x12ad0>
  4178dc:	add	x0, x20, #0x159
  4178e0:	bl	417a80 <wcrtomb@plt+0x12c60>
  4178e4:	str	x0, [x19, #216]
  4178e8:	add	x0, x20, #0x165
  4178ec:	b	417908 <wcrtomb@plt+0x12ae8>
  4178f0:	cmp	w24, #0x5
  4178f4:	b.ne	417940 <wcrtomb@plt+0x12b20>  // b.any
  4178f8:	add	x0, x20, #0x1dc
  4178fc:	bl	417a80 <wcrtomb@plt+0x12c60>
  417900:	str	x0, [x19, #216]
  417904:	add	x0, x20, #0x1e8
  417908:	bl	417a80 <wcrtomb@plt+0x12c60>
  41790c:	stp	x0, xzr, [x19, #248]
  417910:	str	xzr, [x19, #224]
  417914:	cmp	w24, #0x1
  417918:	b.ne	417960 <wcrtomb@plt+0x12b40>  // b.any
  41791c:	add	x0, x20, #0x6c
  417920:	bl	41843c <wcrtomb@plt+0x1361c>
  417924:	str	w0, [x19, #112]
  417928:	add	x0, x20, #0x74
  41792c:	bl	41846c <wcrtomb@plt+0x1364c>
  417930:	mov	w8, w0
  417934:	mov	x0, xzr
  417938:	str	w8, [x19, #116]
  41793c:	b	4179c8 <wcrtomb@plt+0x12ba8>
  417940:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417944:	add	x8, x8, #0x2c8
  417948:	ldr	q0, [x8]
  41794c:	stur	q0, [x19, #248]
  417950:	ldr	q0, [x8]
  417954:	stur	q0, [x19, #216]
  417958:	cmp	w24, #0x1
  41795c:	b.eq	41791c <wcrtomb@plt+0x12afc>  // b.none
  417960:	cbz	w21, 417990 <wcrtomb@plt+0x12b70>
  417964:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  417968:	ldrb	w8, [x21, #672]
  41796c:	cbz	w8, 417a48 <wcrtomb@plt+0x12c28>
  417970:	add	x0, x20, #0x6c
  417974:	bl	41843c <wcrtomb@plt+0x1361c>
  417978:	str	w0, [x19, #112]
  41797c:	ldrb	w8, [x21, #672]
  417980:	cbz	w8, 417a64 <wcrtomb@plt+0x12c44>
  417984:	add	x0, x20, #0x74
  417988:	bl	41846c <wcrtomb@plt+0x1364c>
  41798c:	str	w0, [x19, #116]
  417990:	ldrb	w8, [x20, #156]
  417994:	sub	w8, w8, #0x33
  417998:	cmp	w8, #0x1
  41799c:	b.hi	4179c4 <wcrtomb@plt+0x12ba4>  // b.pmore
  4179a0:	add	x0, x20, #0x149
  4179a4:	bl	41849c <wcrtomb@plt+0x1367c>
  4179a8:	mov	w21, w0
  4179ac:	add	x0, x20, #0x151
  4179b0:	bl	4184cc <wcrtomb@plt+0x136ac>
  4179b4:	mov	w1, w0
  4179b8:	mov	w0, w21
  4179bc:	bl	4043c0 <gnu_dev_makedev@plt>
  4179c0:	b	4179c8 <wcrtomb@plt+0x12ba8>
  4179c4:	mov	x0, xzr
  4179c8:	str	x0, [x19, #120]
  4179cc:	mov	x0, x19
  4179d0:	bl	411c30 <wcrtomb@plt+0xce10>
  4179d4:	mov	x0, x19
  4179d8:	bl	41d86c <wcrtomb@plt+0x18a4c>
  4179dc:	tbz	w0, #0, 4179f0 <wcrtomb@plt+0x12bd0>
  4179e0:	mov	x0, x19
  4179e4:	bl	41d8e0 <wcrtomb@plt+0x18ac0>
  4179e8:	add	x8, x19, #0x110
  4179ec:	b	417a28 <wcrtomb@plt+0x12c08>
  4179f0:	strb	wzr, [x19, #272]
  4179f4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4179f8:	ldr	w8, [x8, #4048]
  4179fc:	orr	w8, w8, #0x4
  417a00:	cmp	w8, #0x6
  417a04:	b.ne	417a1c <wcrtomb@plt+0x12bfc>  // b.any
  417a08:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417a0c:	ldr	x8, [x8, #4072]
  417a10:	ldrb	w8, [x8, #156]
  417a14:	cmp	w8, #0x44
  417a18:	b.eq	417a24 <wcrtomb@plt+0x12c04>  // b.none
  417a1c:	ldr	x8, [x19, #384]
  417a20:	cbz	x8, 417a30 <wcrtomb@plt+0x12c10>
  417a24:	add	x8, x19, #0x178
  417a28:	mov	w9, #0x1                   	// #1
  417a2c:	strb	w9, [x8]
  417a30:	ldp	x20, x19, [sp, #64]
  417a34:	ldp	x22, x21, [sp, #48]
  417a38:	ldp	x24, x23, [sp, #32]
  417a3c:	ldp	x29, x30, [sp, #16]
  417a40:	add	sp, sp, #0x50
  417a44:	ret
  417a48:	ldrb	w8, [x23]
  417a4c:	cbz	w8, 417970 <wcrtomb@plt+0x12b50>
  417a50:	add	x1, x19, #0x70
  417a54:	mov	x0, x23
  417a58:	bl	41b108 <wcrtomb@plt+0x162e8>
  417a5c:	cbnz	w0, 41797c <wcrtomb@plt+0x12b5c>
  417a60:	b	417970 <wcrtomb@plt+0x12b50>
  417a64:	ldrb	w8, [x22]
  417a68:	cbz	w8, 417984 <wcrtomb@plt+0x12b64>
  417a6c:	add	x1, x19, #0x74
  417a70:	mov	x0, x22
  417a74:	bl	41b1bc <wcrtomb@plt+0x1639c>
  417a78:	cbnz	w0, 417990 <wcrtomb@plt+0x12b70>
  417a7c:	b	417984 <wcrtomb@plt+0x12b64>
  417a80:	stp	x29, x30, [sp, #-16]!
  417a84:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  417a88:	add	x2, x2, #0xd7a
  417a8c:	mov	w1, #0xc                   	// #12
  417a90:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  417a94:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  417a98:	mov	w5, wzr
  417a9c:	mov	w6, wzr
  417aa0:	mov	x29, sp
  417aa4:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  417aa8:	ldp	x29, x30, [sp], #16
  417aac:	ret
  417ab0:	stp	x29, x30, [sp, #-32]!
  417ab4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417ab8:	ldrb	w8, [x8, #473]
  417abc:	stp	x20, x19, [sp, #16]
  417ac0:	mov	x29, sp
  417ac4:	cbnz	w8, 417b18 <wcrtomb@plt+0x12cf8>
  417ac8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417acc:	ldr	x0, [x8, #4072]
  417ad0:	ldrb	w20, [x0, #156]
  417ad4:	bl	405744 <wcrtomb@plt+0x924>
  417ad8:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  417adc:	add	x19, x19, #0x60
  417ae0:	mov	x0, x19
  417ae4:	bl	404fe8 <wcrtomb@plt+0x1c8>
  417ae8:	ldrb	w8, [x19, #272]
  417aec:	cbz	w8, 417b00 <wcrtomb@plt+0x12ce0>
  417af0:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  417af4:	add	x0, x0, #0x60
  417af8:	bl	41da88 <wcrtomb@plt+0x18c68>
  417afc:	b	417b14 <wcrtomb@plt+0x12cf4>
  417b00:	cmp	w20, #0x35
  417b04:	b.eq	417b14 <wcrtomb@plt+0x12cf4>  // b.none
  417b08:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417b0c:	ldr	x0, [x8, #232]
  417b10:	bl	418de8 <wcrtomb@plt+0x13fc8>
  417b14:	bl	40500c <wcrtomb@plt+0x1ec>
  417b18:	ldp	x20, x19, [sp, #16]
  417b1c:	ldp	x29, x30, [sp], #32
  417b20:	ret
  417b24:	stp	x29, x30, [sp, #-32]!
  417b28:	str	x19, [sp, #16]
  417b2c:	mov	x29, sp
  417b30:	bl	405568 <wcrtomb@plt+0x748>
  417b34:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  417b38:	ldr	w8, [x19, #644]
  417b3c:	cbz	w8, 417b58 <wcrtomb@plt+0x12d38>
  417b40:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417b44:	ldr	x1, [x8, #4072]
  417b48:	mov	x2, x0
  417b4c:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  417b50:	add	x0, x0, #0x60
  417b54:	bl	417bac <wcrtomb@plt+0x12d8c>
  417b58:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417b5c:	ldrb	w8, [x8, #33]
  417b60:	cbz	w8, 417b9c <wcrtomb@plt+0x12d7c>
  417b64:	ldr	w8, [x19, #644]
  417b68:	cmp	w8, #0x3
  417b6c:	b.lt	417b9c <wcrtomb@plt+0x12d7c>  // b.tstop
  417b70:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  417b74:	add	x0, x0, #0x60
  417b78:	bl	41588c <wcrtomb@plt+0x10a6c>
  417b7c:	tbz	w0, #0, 417b9c <wcrtomb@plt+0x12d7c>
  417b80:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417b84:	ldr	x19, [x8, #480]
  417b88:	mov	x0, x19
  417b8c:	bl	413a50 <wcrtomb@plt+0xec30>
  417b90:	mov	x1, x0
  417b94:	mov	x0, x19
  417b98:	bl	415e78 <wcrtomb@plt+0x11058>
  417b9c:	bl	417ab0 <wcrtomb@plt+0x12c90>
  417ba0:	ldr	x19, [sp, #16]
  417ba4:	ldp	x29, x30, [sp], #32
  417ba8:	ret
  417bac:	stp	x29, x30, [sp, #-48]!
  417bb0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417bb4:	ldr	w8, [x8, #4048]
  417bb8:	stp	x22, x21, [sp, #16]
  417bbc:	stp	x20, x19, [sp, #32]
  417bc0:	mov	x19, x2
  417bc4:	mov	x20, x1
  417bc8:	cmp	w8, #0x4
  417bcc:	mov	x21, x0
  417bd0:	mov	x29, sp
  417bd4:	b.ne	417bfc <wcrtomb@plt+0x12ddc>  // b.any
  417bd8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417bdc:	ldr	x8, [x8, #3968]
  417be0:	cbz	x8, 417bfc <wcrtomb@plt+0x12ddc>
  417be4:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417be8:	ldrb	w8, [x22, #2301]
  417bec:	cbnz	w8, 417bfc <wcrtomb@plt+0x12ddc>
  417bf0:	bl	418674 <wcrtomb@plt+0x13854>
  417bf4:	mov	w8, #0x1                   	// #1
  417bf8:	strb	w8, [x22, #2301]
  417bfc:	mov	x0, x21
  417c00:	mov	x1, x20
  417c04:	mov	x2, x19
  417c08:	bl	41875c <wcrtomb@plt+0x1393c>
  417c0c:	ldp	x20, x19, [sp, #32]
  417c10:	ldp	x22, x21, [sp, #16]
  417c14:	ldp	x29, x30, [sp], #48
  417c18:	ret
  417c1c:	stp	x29, x30, [sp, #-32]!
  417c20:	stp	x20, x19, [sp, #16]
  417c24:	mov	x8, x0
  417c28:	mov	x9, xzr
  417c2c:	mov	w19, wzr
  417c30:	mov	w20, wzr
  417c34:	mov	x29, sp
  417c38:	ldrsb	w10, [x8, x9]
  417c3c:	add	x9, x9, #0x1
  417c40:	cmp	x9, #0x200
  417c44:	add	w20, w20, w10, uxtb
  417c48:	add	w19, w19, w10
  417c4c:	b.ne	417c38 <wcrtomb@plt+0x12e18>  // b.any
  417c50:	cbz	w20, 417cb8 <wcrtomb@plt+0x12e98>
  417c54:	mov	x9, xzr
  417c58:	add	x0, x8, #0x94
  417c5c:	add	x8, x8, #0x9b
  417c60:	ldrsb	w10, [x8, x9]
  417c64:	sub	x9, x9, #0x1
  417c68:	cmn	x9, #0x8
  417c6c:	sub	w20, w20, w10, uxtb
  417c70:	sub	w19, w19, w10
  417c74:	b.ne	417c60 <wcrtomb@plt+0x12e40>  // b.any
  417c78:	and	w6, w1, #0x1
  417c7c:	mov	w1, #0x8                   	// #8
  417c80:	mov	w4, #0x7fffffff            	// #2147483647
  417c84:	mov	w5, #0x1                   	// #1
  417c88:	mov	x2, xzr
  417c8c:	mov	x3, xzr
  417c90:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  417c94:	mov	x8, x0
  417c98:	mov	w0, #0x5                   	// #5
  417c9c:	tbnz	w8, #31, 417cbc <wcrtomb@plt+0x12e9c>
  417ca0:	add	w9, w19, #0x100
  417ca4:	add	w10, w20, #0x100
  417ca8:	cmp	w9, w8
  417cac:	ccmp	w10, w8, #0x4, ne  // ne = any
  417cb0:	csinc	w0, w0, wzr, ne  // ne = any
  417cb4:	b	417cbc <wcrtomb@plt+0x12e9c>
  417cb8:	mov	w0, #0x3                   	// #3
  417cbc:	ldp	x20, x19, [sp, #16]
  417cc0:	ldp	x29, x30, [sp], #32
  417cc4:	ret
  417cc8:	stp	x29, x30, [sp, #-96]!
  417ccc:	stp	x28, x27, [sp, #16]
  417cd0:	stp	x26, x25, [sp, #32]
  417cd4:	stp	x24, x23, [sp, #48]
  417cd8:	stp	x22, x21, [sp, #64]
  417cdc:	stp	x20, x19, [sp, #80]
  417ce0:	mov	x29, sp
  417ce4:	sub	sp, sp, #0x450
  417ce8:	ldrb	w8, [x0]
  417cec:	mov	w28, w6
  417cf0:	mov	x20, x2
  417cf4:	mov	x19, sp
  417cf8:	cmp	w8, #0x0
  417cfc:	cset	w22, eq  // eq = none
  417d00:	cmp	x22, x1
  417d04:	b.eq	417d5c <wcrtomb@plt+0x12f3c>  // b.none
  417d08:	neg	x8, x3
  417d0c:	stp	x3, x8, [x19, #24]
  417d10:	add	x8, x0, x1
  417d14:	mov	w26, w5
  417d18:	mov	x27, x4
  417d1c:	mov	x24, x1
  417d20:	mov	x23, x0
  417d24:	str	x8, [x19, #40]
  417d28:	add	x21, x0, x22
  417d2c:	bl	404950 <__ctype_b_loc@plt>
  417d30:	ldr	x11, [x0]
  417d34:	mov	x25, xzr
  417d38:	sub	x8, x24, x22
  417d3c:	mov	x10, #0xffffffffffffffff    	// #-1
  417d40:	ldrb	w9, [x21, x25]
  417d44:	ldrh	w12, [x11, x9, lsl #1]
  417d48:	tbz	w12, #13, 417dd0 <wcrtomb@plt+0x12fb0>
  417d4c:	add	x25, x25, #0x1
  417d50:	cmp	x8, x25
  417d54:	sub	x10, x10, #0x1
  417d58:	b.ne	417d40 <wcrtomb@plt+0x12f20>  // b.any
  417d5c:	mov	x0, #0xffffffffffffffff    	// #-1
  417d60:	cbz	x20, 417db0 <wcrtomb@plt+0x12f90>
  417d64:	tbnz	w28, #0, 417db0 <wcrtomb@plt+0x12f90>
  417d68:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417d6c:	ldr	x8, [x8, #1008]
  417d70:	cbz	x8, 417d78 <wcrtomb@plt+0x12f58>
  417d74:	blr	x8
  417d78:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  417d7c:	add	x1, x1, #0x341
  417d80:	mov	w2, #0x5                   	// #5
  417d84:	mov	x0, xzr
  417d88:	bl	404bf0 <dcgettext@plt>
  417d8c:	mov	x2, x0
  417d90:	mov	w0, wzr
  417d94:	mov	w1, wzr
  417d98:	mov	x3, x20
  417d9c:	bl	4041f0 <error@plt>
  417da0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417da4:	mov	w9, #0x2                   	// #2
  417da8:	str	w9, [x8, #3456]
  417dac:	mov	x0, #0xffffffffffffffff    	// #-1
  417db0:	mov	sp, x29
  417db4:	ldp	x20, x19, [sp, #80]
  417db8:	ldp	x22, x21, [sp, #64]
  417dbc:	ldp	x24, x23, [sp, #48]
  417dc0:	ldp	x26, x25, [sp, #32]
  417dc4:	ldp	x28, x27, [sp, #16]
  417dc8:	ldp	x29, x30, [sp], #96
  417dcc:	ret
  417dd0:	and	w11, w9, #0xf8
  417dd4:	str	x27, [x19, #16]
  417dd8:	cmp	w11, #0x30
  417ddc:	add	x27, x21, x25
  417de0:	b.ne	417e64 <wcrtomb@plt+0x13044>  // b.any
  417de4:	str	w28, [x19, #12]
  417de8:	mov	x28, x27
  417dec:	add	x8, x8, x10
  417df0:	ldrb	w10, [x28], #1
  417df4:	mvn	x11, x22
  417df8:	add	x11, x11, x24
  417dfc:	cmp	x11, x25
  417e00:	sub	x26, x10, #0x30
  417e04:	b.eq	417f44 <wcrtomb@plt+0x13124>  // b.none
  417e08:	mov	x11, xzr
  417e0c:	mov	w10, wzr
  417e10:	add	x12, x21, x11
  417e14:	add	x12, x12, x25
  417e18:	ldrb	w13, [x12, #1]
  417e1c:	and	w13, w13, #0xf8
  417e20:	cmp	w13, #0x30
  417e24:	b.ne	417e50 <wcrtomb@plt+0x13030>  // b.any
  417e28:	ldrb	w12, [x12, #1]
  417e2c:	lsr	x13, x26, #61
  417e30:	cmp	x13, #0x0
  417e34:	add	x11, x11, #0x1
  417e38:	cset	w13, ne  // ne = any
  417e3c:	add	x12, x12, x26, lsl #3
  417e40:	orr	w10, w10, w13
  417e44:	cmp	x8, x11
  417e48:	sub	x26, x12, #0x30
  417e4c:	b.ne	417e10 <wcrtomb@plt+0x12ff0>  // b.any
  417e50:	add	x12, x21, x25
  417e54:	add	x11, x12, x11
  417e58:	add	x28, x11, #0x1
  417e5c:	tbz	w10, #0, 417f4c <wcrtomb@plt+0x1312c>
  417e60:	b	417fac <wcrtomb@plt+0x1318c>
  417e64:	tbz	w26, #0, 417e74 <wcrtomb@plt+0x13054>
  417e68:	mov	w12, wzr
  417e6c:	mov	x26, xzr
  417e70:	b	41805c <wcrtomb@plt+0x1323c>
  417e74:	cmp	w9, #0x7f
  417e78:	b.gt	418194 <wcrtomb@plt+0x13374>
  417e7c:	cmp	w9, #0x2b
  417e80:	b.eq	417e8c <wcrtomb@plt+0x1306c>  // b.none
  417e84:	cmp	w9, #0x2d
  417e88:	b.ne	417e68 <wcrtomb@plt+0x13048>  // b.any
  417e8c:	tbnz	w28, #0, 417ee0 <wcrtomb@plt+0x130c0>
  417e90:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417e94:	ldrb	w9, [x8, #2558]
  417e98:	tbnz	w9, #0, 417ee0 <wcrtomb@plt+0x130c0>
  417e9c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  417ea0:	ldr	x9, [x9, #1008]
  417ea4:	mov	x26, x0
  417ea8:	mov	w10, #0x1                   	// #1
  417eac:	strb	w10, [x8, #2558]
  417eb0:	cbz	x9, 417eb8 <wcrtomb@plt+0x13098>
  417eb4:	blr	x9
  417eb8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  417ebc:	add	x1, x1, #0x3e5
  417ec0:	mov	w2, #0x5                   	// #5
  417ec4:	mov	x0, xzr
  417ec8:	bl	404bf0 <dcgettext@plt>
  417ecc:	mov	x2, x0
  417ed0:	mov	w0, wzr
  417ed4:	mov	w1, wzr
  417ed8:	bl	4041f0 <error@plt>
  417edc:	mov	x0, x26
  417ee0:	add	x27, x21, x25
  417ee4:	ldrb	w8, [x27], #1
  417ee8:	mvn	x9, x22
  417eec:	add	x9, x9, x24
  417ef0:	cmp	w8, #0x2d
  417ef4:	cset	w12, eq  // eq = none
  417ef8:	cmp	x9, x25
  417efc:	b.eq	4182d8 <wcrtomb@plt+0x134b8>  // b.none
  417f00:	add	x8, x22, x25
  417f04:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  417f08:	mov	x26, xzr
  417f0c:	add	x8, x8, #0x1
  417f10:	add	x9, x9, #0x8fe
  417f14:	ldrb	w10, [x23, x8]
  417f18:	ldrb	w10, [x9, x10]
  417f1c:	cmp	x10, #0x3f
  417f20:	b.hi	417f3c <wcrtomb@plt+0x1311c>  // b.pmore
  417f24:	lsr	x11, x26, #58
  417f28:	cbnz	x11, 418340 <wcrtomb@plt+0x13520>
  417f2c:	add	x8, x8, #0x1
  417f30:	cmp	x24, x8
  417f34:	orr	x26, x10, x26, lsl #6
  417f38:	b.ne	417f14 <wcrtomb@plt+0x130f4>  // b.any
  417f3c:	add	x27, x23, x8
  417f40:	b	41805c <wcrtomb@plt+0x1323c>
  417f44:	mov	w10, wzr
  417f48:	tbnz	w10, #0, 417fac <wcrtomb@plt+0x1318c>
  417f4c:	ldr	x11, [x19, #16]
  417f50:	cmp	x26, x11
  417f54:	b.hi	417fac <wcrtomb@plt+0x1318c>  // b.pmore
  417f58:	mov	w12, wzr
  417f5c:	tbz	w10, #0, 418054 <wcrtomb@plt+0x13234>
  417f60:	mov	x0, #0xffffffffffffffff    	// #-1
  417f64:	cbz	x20, 417db0 <wcrtomb@plt+0x12f90>
  417f68:	ldr	w8, [x19, #12]
  417f6c:	tbnz	w8, #0, 417db0 <wcrtomb@plt+0x12f90>
  417f70:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  417f74:	ldr	x8, [x8, #1008]
  417f78:	cbz	x8, 417f80 <wcrtomb@plt+0x13160>
  417f7c:	blr	x8
  417f80:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  417f84:	add	x1, x1, #0x3b9
  417f88:	mov	w2, #0x5                   	// #5
  417f8c:	mov	x0, xzr
  417f90:	bl	404bf0 <dcgettext@plt>
  417f94:	mov	x2, x0
  417f98:	sub	w3, w28, w27
  417f9c:	mov	w0, wzr
  417fa0:	mov	w1, wzr
  417fa4:	mov	x4, x27
  417fa8:	b	4182cc <wcrtomb@plt+0x134ac>
  417fac:	mov	w12, wzr
  417fb0:	cbz	x20, 417f5c <wcrtomb@plt+0x1313c>
  417fb4:	cmp	w9, #0x32
  417fb8:	b.cc	417f5c <wcrtomb@plt+0x1313c>  // b.lo, b.ul, b.last
  417fbc:	sub	x9, x9, #0x30
  417fc0:	mvn	x12, x22
  417fc4:	mov	w10, #0x7                   	// #7
  417fc8:	add	x11, x21, x25
  417fcc:	orr	x9, x9, #0x4
  417fd0:	add	x12, x12, x24
  417fd4:	sub	x9, x10, x9
  417fd8:	cmp	x12, x25
  417fdc:	add	x28, x11, #0x1
  417fe0:	mov	w10, wzr
  417fe4:	b.eq	418020 <wcrtomb@plt+0x13200>  // b.none
  417fe8:	ldrb	w11, [x28]
  417fec:	and	w12, w11, #0xf8
  417ff0:	cmp	w12, #0x30
  417ff4:	b.ne	418020 <wcrtomb@plt+0x13200>  // b.any
  417ff8:	lsl	x12, x9, #3
  417ffc:	lsr	x9, x9, #61
  418000:	cmp	x9, #0x0
  418004:	sub	x9, x12, x11
  418008:	cset	w11, ne  // ne = any
  41800c:	add	x9, x9, #0x37
  418010:	subs	x8, x8, #0x1
  418014:	orr	w10, w10, w11
  418018:	add	x28, x28, #0x1
  41801c:	b.ne	417fe8 <wcrtomb@plt+0x131c8>  // b.any
  418020:	adds	x26, x9, #0x1
  418024:	ldr	x9, [x19, #32]
  418028:	cset	w8, cs  // cs = hs, nlast
  41802c:	mov	w12, wzr
  418030:	orr	w10, w10, w8
  418034:	cmp	x26, x9
  418038:	b.hi	417f5c <wcrtomb@plt+0x1313c>  // b.pmore
  41803c:	tbnz	w10, #0, 417f5c <wcrtomb@plt+0x1313c>
  418040:	ldr	w8, [x19, #12]
  418044:	tbz	w8, #0, 4182e0 <wcrtomb@plt+0x134c0>
  418048:	mov	w10, wzr
  41804c:	mov	w12, #0x1                   	// #1
  418050:	b	417f5c <wcrtomb@plt+0x1313c>
  418054:	mov	x27, x28
  418058:	ldr	w28, [x19, #12]
  41805c:	ldr	x8, [x19, #40]
  418060:	cmp	x27, x8
  418064:	b.eq	4180c0 <wcrtomb@plt+0x132a0>  // b.none
  418068:	ldrb	w8, [x27]
  41806c:	cbz	x8, 4180c0 <wcrtomb@plt+0x132a0>
  418070:	ldr	x9, [x0]
  418074:	ldrh	w8, [x9, x8, lsl #1]
  418078:	tbnz	w8, #13, 4180c0 <wcrtomb@plt+0x132a0>
  41807c:	cbz	x20, 417dac <wcrtomb@plt+0x12f8c>
  418080:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418084:	ldr	x8, [x21, #2560]
  418088:	cbnz	x8, 4180a0 <wcrtomb@plt+0x13280>
  41808c:	mov	x0, xzr
  418090:	bl	43ab70 <argp_usage@@Base+0x8f74>
  418094:	mov	w1, #0x8                   	// #8
  418098:	str	x0, [x21, #2560]
  41809c:	bl	43abd4 <argp_usage@@Base+0x8fd8>
  4180a0:	cbz	x24, 418274 <wcrtomb@plt+0x13454>
  4180a4:	add	x8, x23, x24
  4180a8:	ldurb	w8, [x8, #-1]
  4180ac:	sub	x24, x24, #0x1
  4180b0:	cbz	w8, 4180a0 <wcrtomb@plt+0x13280>
  4180b4:	add	x8, x23, x24
  4180b8:	add	x8, x8, #0x1
  4180bc:	b	418278 <wcrtomb@plt+0x13458>
  4180c0:	ldr	x22, [x19, #16]
  4180c4:	ldr	x9, [x19, #32]
  4180c8:	cmp	w12, #0x0
  4180cc:	csel	x8, x9, x22, ne  // ne = any
  4180d0:	cmp	x26, x8
  4180d4:	b.ls	418184 <wcrtomb@plt+0x13364>  // b.plast
  4180d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4180dc:	cbz	x20, 417db0 <wcrtomb@plt+0x12f90>
  4180e0:	tbnz	w28, #0, 417db0 <wcrtomb@plt+0x12f90>
  4180e4:	add	x8, x19, #0x60
  4180e8:	orr	x1, x8, #0x1
  4180ec:	mov	x0, x9
  4180f0:	mov	w24, w12
  4180f4:	bl	43650c <argp_usage@@Base+0x4910>
  4180f8:	add	x8, x19, #0x30
  4180fc:	mov	x21, x0
  418100:	orr	x1, x8, #0x1
  418104:	mov	x0, x26
  418108:	bl	43650c <argp_usage@@Base+0x4910>
  41810c:	mov	x23, x0
  418110:	cbz	w24, 41811c <wcrtomb@plt+0x132fc>
  418114:	mov	w8, #0x2d                  	// #45
  418118:	strb	w8, [x23, #-1]!
  41811c:	ldr	x8, [x19, #24]
  418120:	cbz	x8, 41812c <wcrtomb@plt+0x1330c>
  418124:	mov	w8, #0x2d                  	// #45
  418128:	strb	w8, [x21, #-1]!
  41812c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418130:	ldr	x8, [x8, #1008]
  418134:	cbz	x8, 41813c <wcrtomb@plt+0x1331c>
  418138:	blr	x8
  41813c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418140:	add	x1, x1, #0x4a6
  418144:	mov	w2, #0x5                   	// #5
  418148:	mov	x0, xzr
  41814c:	bl	404bf0 <dcgettext@plt>
  418150:	mov	x24, x0
  418154:	add	x1, x19, #0x48
  418158:	mov	x0, x22
  41815c:	bl	43650c <argp_usage@@Base+0x4910>
  418160:	mov	x6, x0
  418164:	mov	w0, wzr
  418168:	mov	w1, wzr
  41816c:	mov	x2, x24
  418170:	mov	x3, x23
  418174:	mov	x4, x20
  418178:	mov	x5, x21
  41817c:	bl	4041f0 <error@plt>
  418180:	b	417da0 <wcrtomb@plt+0x12f80>
  418184:	cmp	w12, #0x0
  418188:	cneg	x0, x26, ne  // ne = any
  41818c:	bl	419638 <wcrtomb@plt+0x14818>
  418190:	b	417db0 <wcrtomb@plt+0x12f90>
  418194:	cmp	w9, #0x80
  418198:	b.eq	4181a4 <wcrtomb@plt+0x13384>  // b.none
  41819c:	cmp	w9, #0xff
  4181a0:	b.ne	417e68 <wcrtomb@plt+0x13048>  // b.any
  4181a4:	sub	x10, x8, x25
  4181a8:	and	w8, w9, #0x40
  4181ac:	and	w12, w9, #0x3f
  4181b0:	sub	x9, x10, #0x2
  4181b4:	neg	w10, w8
  4181b8:	sub	w12, w12, w8
  4181bc:	add	x11, x27, #0x2
  4181c0:	lsl	x10, x10, #50
  4181c4:	sxtw	x26, w12
  4181c8:	mov	x12, x26
  4181cc:	ldurb	w26, [x11, #-1]
  4181d0:	mov	x27, x11
  4181d4:	bfi	x26, x12, #8, #56
  4181d8:	cbz	x9, 41825c <wcrtomb@plt+0x1343c>
  4181dc:	and	x11, x26, #0xffffffffffffff
  4181e0:	orr	x12, x11, x10
  4181e4:	add	x11, x27, #0x1
  4181e8:	cmp	x12, x26
  4181ec:	sub	x9, x9, #0x1
  4181f0:	b.eq	4181c8 <wcrtomb@plt+0x133a8>  // b.none
  4181f4:	mov	w8, wzr
  4181f8:	cbz	x20, 418334 <wcrtomb@plt+0x13514>
  4181fc:	tbnz	w28, #0, 418334 <wcrtomb@plt+0x13514>
  418200:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418204:	ldr	x8, [x8, #1008]
  418208:	mov	x21, x0
  41820c:	cbz	x8, 418214 <wcrtomb@plt+0x133f4>
  418210:	blr	x8
  418214:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418218:	add	x1, x1, #0x446
  41821c:	mov	w2, #0x5                   	// #5
  418220:	mov	x0, xzr
  418224:	bl	404bf0 <dcgettext@plt>
  418228:	mov	x2, x0
  41822c:	mov	w0, wzr
  418230:	mov	w1, wzr
  418234:	mov	x3, x20
  418238:	bl	4041f0 <error@plt>
  41823c:	mov	w12, wzr
  418240:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418244:	mov	w10, #0x2                   	// #2
  418248:	mov	x0, x21
  41824c:	mov	w8, wzr
  418250:	str	w10, [x9, #3456]
  418254:	tbz	wzr, #0, 417dac <wcrtomb@plt+0x12f8c>
  418258:	b	41805c <wcrtomb@plt+0x1323c>
  41825c:	cmp	w8, #0x0
  418260:	cset	w12, ne  // ne = any
  418264:	cneg	x26, x26, ne  // ne = any
  418268:	mov	w8, #0x1                   	// #1
  41826c:	tbz	w8, #0, 417dac <wcrtomb@plt+0x12f8c>
  418270:	b	41805c <wcrtomb@plt+0x1323c>
  418274:	mov	x8, x23
  418278:	ldr	x4, [x21, #2560]
  41827c:	sub	x3, x8, x23
  418280:	add	x0, x19, #0x60
  418284:	mov	w1, #0x3e8                 	// #1000
  418288:	mov	x2, x23
  41828c:	bl	43ac7c <argp_usage@@Base+0x9080>
  418290:	tbnz	w28, #0, 417dac <wcrtomb@plt+0x12f8c>
  418294:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418298:	ldr	x8, [x8, #1008]
  41829c:	cbz	x8, 4182a4 <wcrtomb@plt+0x13484>
  4182a0:	blr	x8
  4182a4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  4182a8:	add	x1, x1, #0x470
  4182ac:	mov	w2, #0x5                   	// #5
  4182b0:	mov	x0, xzr
  4182b4:	bl	404bf0 <dcgettext@plt>
  4182b8:	mov	x2, x0
  4182bc:	add	x4, x19, #0x60
  4182c0:	mov	w3, #0x3e8                 	// #1000
  4182c4:	mov	w0, wzr
  4182c8:	mov	w1, wzr
  4182cc:	mov	x5, x20
  4182d0:	bl	4041f0 <error@plt>
  4182d4:	b	417da0 <wcrtomb@plt+0x12f80>
  4182d8:	mov	x26, xzr
  4182dc:	b	41805c <wcrtomb@plt+0x1323c>
  4182e0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4182e4:	ldr	x8, [x8, #1008]
  4182e8:	mov	x21, x0
  4182ec:	cbz	x8, 4182f4 <wcrtomb@plt+0x134d4>
  4182f0:	blr	x8
  4182f4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  4182f8:	add	x1, x1, #0x372
  4182fc:	mov	w2, #0x5                   	// #5
  418300:	mov	x0, xzr
  418304:	bl	404bf0 <dcgettext@plt>
  418308:	mov	x2, x0
  41830c:	sub	w3, w28, w27
  418310:	mov	w0, wzr
  418314:	mov	w1, wzr
  418318:	mov	x4, x27
  41831c:	mov	x5, x20
  418320:	bl	4041f0 <error@plt>
  418324:	mov	w10, wzr
  418328:	mov	w12, #0x1                   	// #1
  41832c:	mov	x0, x21
  418330:	b	417f5c <wcrtomb@plt+0x1313c>
  418334:	mov	w12, w8
  418338:	tbz	w8, #0, 417dac <wcrtomb@plt+0x12f8c>
  41833c:	b	41805c <wcrtomb@plt+0x1323c>
  418340:	add	x9, x24, #0x10
  418344:	mov	x8, sp
  418348:	and	x9, x9, #0xfffffffffffffff0
  41834c:	sub	x22, x8, x9
  418350:	mov	sp, x22
  418354:	mov	x0, x22
  418358:	mov	x1, x23
  41835c:	mov	x2, x24
  418360:	bl	404110 <memcpy@plt>
  418364:	mov	x0, #0xffffffffffffffff    	// #-1
  418368:	strb	wzr, [x22, x24]
  41836c:	cbz	x20, 417db0 <wcrtomb@plt+0x12f90>
  418370:	tbnz	w28, #0, 417db0 <wcrtomb@plt+0x12f90>
  418374:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418378:	ldr	x8, [x8, #1008]
  41837c:	cbz	x8, 418384 <wcrtomb@plt+0x13564>
  418380:	blr	x8
  418384:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418388:	add	x1, x1, #0x412
  41838c:	mov	w2, #0x5                   	// #5
  418390:	mov	x0, xzr
  418394:	bl	404bf0 <dcgettext@plt>
  418398:	mov	x21, x0
  41839c:	mov	x0, x22
  4183a0:	bl	43c05c <argp_usage@@Base+0xa460>
  4183a4:	mov	x3, x0
  4183a8:	mov	w0, wzr
  4183ac:	mov	w1, wzr
  4183b0:	mov	x2, x21
  4183b4:	mov	x4, x20
  4183b8:	bl	4041f0 <error@plt>
  4183bc:	b	417da0 <wcrtomb@plt+0x12f80>
  4183c0:	stp	x29, x30, [sp, #-16]!
  4183c4:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  4183c8:	add	x2, x2, #0xd74
  4183cc:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4183d0:	mov	x3, xzr
  4183d4:	mov	w5, wzr
  4183d8:	mov	w6, wzr
  4183dc:	mov	x29, sp
  4183e0:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  4183e4:	ldp	x29, x30, [sp], #16
  4183e8:	ret
  4183ec:	stp	x29, x30, [sp, #-32]!
  4183f0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  4183f4:	str	x19, [sp, #16]
  4183f8:	mov	x19, x1
  4183fc:	add	x2, x2, #0xe7e
  418400:	mov	w1, #0x8                   	// #8
  418404:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418408:	mov	x4, #0xffffffffffffffff    	// #-1
  41840c:	mov	w5, wzr
  418410:	mov	w6, wzr
  418414:	mov	x29, sp
  418418:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  41841c:	cmp	x0, #0xfff
  418420:	cset	w9, hi  // hi = pmore
  418424:	strb	w9, [x19]
  418428:	ldr	x19, [sp, #16]
  41842c:	and	w8, w0, #0xfff
  418430:	mov	w0, w8
  418434:	ldp	x29, x30, [sp], #32
  418438:	ret
  41843c:	stp	x29, x30, [sp, #-16]!
  418440:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  418444:	add	x2, x2, #0xe85
  418448:	mov	w1, #0x8                   	// #8
  41844c:	mov	w4, #0xffffffff            	// #-1
  418450:	mov	x3, xzr
  418454:	mov	w5, wzr
  418458:	mov	w6, wzr
  41845c:	mov	x29, sp
  418460:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  418464:	ldp	x29, x30, [sp], #16
  418468:	ret
  41846c:	stp	x29, x30, [sp, #-16]!
  418470:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  418474:	add	x2, x2, #0xe92
  418478:	mov	w1, #0x8                   	// #8
  41847c:	mov	w4, #0xffffffff            	// #-1
  418480:	mov	x3, xzr
  418484:	mov	w5, wzr
  418488:	mov	w6, wzr
  41848c:	mov	x29, sp
  418490:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  418494:	ldp	x29, x30, [sp], #16
  418498:	ret
  41849c:	stp	x29, x30, [sp, #-16]!
  4184a0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  4184a4:	add	x2, x2, #0xf0d
  4184a8:	mov	w1, #0x8                   	// #8
  4184ac:	mov	x3, #0xffffffff80000000    	// #-2147483648
  4184b0:	mov	w4, #0x7fffffff            	// #2147483647
  4184b4:	mov	w5, wzr
  4184b8:	mov	w6, wzr
  4184bc:	mov	x29, sp
  4184c0:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  4184c4:	ldp	x29, x30, [sp], #16
  4184c8:	ret
  4184cc:	stp	x29, x30, [sp, #-16]!
  4184d0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  4184d4:	add	x2, x2, #0xf15
  4184d8:	mov	w1, #0x8                   	// #8
  4184dc:	mov	x3, #0xffffffff80000000    	// #-2147483648
  4184e0:	mov	w4, #0x7fffffff            	// #2147483647
  4184e4:	mov	w5, wzr
  4184e8:	mov	w6, wzr
  4184ec:	mov	x29, sp
  4184f0:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  4184f4:	ldp	x29, x30, [sp], #16
  4184f8:	ret
  4184fc:	stp	x29, x30, [sp, #-16]!
  418500:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  418504:	add	x2, x2, #0xf1d
  418508:	mov	x4, #0xffffffffffffffff    	// #-1
  41850c:	mov	x3, xzr
  418510:	mov	w5, wzr
  418514:	mov	w6, wzr
  418518:	mov	x29, sp
  41851c:	bl	417cc8 <wcrtomb@plt+0x12ea8>
  418520:	ldp	x29, x30, [sp], #16
  418524:	ret
  418528:	sub	sp, sp, #0x40
  41852c:	stp	x22, x21, [sp, #32]
  418530:	stp	x20, x19, [sp, #48]
  418534:	mov	w20, w2
  418538:	mov	x19, x1
  41853c:	mov	x22, x0
  418540:	stp	x29, x30, [sp, #16]
  418544:	add	x29, sp, #0x10
  418548:	str	x0, [sp, #8]
  41854c:	tbz	x0, #63, 418568 <wcrtomb@plt+0x13748>
  418550:	cbz	w19, 418568 <wcrtomb@plt+0x13748>
  418554:	mov	w9, #0xca00                	// #51712
  418558:	movk	w9, #0x3b9a, lsl #16
  41855c:	add	x8, x22, #0x1
  418560:	sub	w19, w9, w19
  418564:	str	x8, [sp, #8]
  418568:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41856c:	ldrb	w8, [x8, #553]
  418570:	cbz	w8, 4185b4 <wcrtomb@plt+0x13794>
  418574:	add	x0, sp, #0x8
  418578:	bl	404710 <gmtime@plt>
  41857c:	mov	x3, x0
  418580:	cbz	x0, 4185c4 <wcrtomb@plt+0x137a4>
  418584:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418588:	add	x21, x21, #0x8d8
  41858c:	tbz	w20, #0, 418648 <wcrtomb@plt+0x13828>
  418590:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  418594:	add	x2, x2, #0xb88
  418598:	mov	w1, #0x25                  	// #37
  41859c:	mov	x0, x21
  4185a0:	bl	404310 <strftime@plt>
  4185a4:	mov	x0, x21
  4185a8:	bl	404190 <strlen@plt>
  4185ac:	add	x1, x21, x0
  4185b0:	b	41863c <wcrtomb@plt+0x1381c>
  4185b4:	add	x0, sp, #0x8
  4185b8:	bl	404410 <localtime@plt>
  4185bc:	mov	x3, x0
  4185c0:	cbnz	x0, 418584 <wcrtomb@plt+0x13764>
  4185c4:	ldr	x8, [sp, #8]
  4185c8:	cmp	x22, #0x0
  4185cc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4185d0:	add	x1, x1, #0x8de
  4185d4:	cneg	x0, x8, lt  // lt = tstop
  4185d8:	bl	43650c <argp_usage@@Base+0x4910>
  4185dc:	mov	x21, x0
  4185e0:	tbz	x22, #63, 4185ec <wcrtomb@plt+0x137cc>
  4185e4:	mov	w8, #0x2d                  	// #45
  4185e8:	strb	w8, [x21, #-1]!
  4185ec:	tst	w20, #0x1
  4185f0:	mov	w8, #0xd                   	// #13
  4185f4:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4185f8:	csel	x8, x8, xzr, ne  // ne = any
  4185fc:	add	x9, x9, #0x8d8
  418600:	add	x8, x9, x8
  418604:	add	x22, x8, #0x14
  418608:	cmp	x22, x21
  41860c:	b.cs	418630 <wcrtomb@plt+0x13810>  // b.hs, b.nlast
  418610:	sub	x8, x21, x8
  418614:	sub	x2, x8, #0x14
  418618:	mov	w1, #0x20                  	// #32
  41861c:	mov	x0, x22
  418620:	bl	404600 <memset@plt>
  418624:	sub	x21, x21, #0x1
  418628:	cmp	x22, x21
  41862c:	b.cc	418624 <wcrtomb@plt+0x13804>  // b.lo, b.ul, b.last
  418630:	tbz	w20, #0, 41865c <wcrtomb@plt+0x1383c>
  418634:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418638:	add	x1, x1, #0x8f2
  41863c:	mov	w0, w19
  418640:	bl	419cac <wcrtomb@plt+0x14e8c>
  418644:	b	41865c <wcrtomb@plt+0x1383c>
  418648:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  41864c:	add	x2, x2, #0x313
  418650:	mov	w1, #0x25                  	// #37
  418654:	mov	x0, x21
  418658:	bl	404310 <strftime@plt>
  41865c:	mov	x0, x21
  418660:	ldp	x20, x19, [sp, #48]
  418664:	ldp	x22, x21, [sp, #32]
  418668:	ldp	x29, x30, [sp, #16]
  41866c:	add	sp, sp, #0x40
  418670:	ret
  418674:	stp	x29, x30, [sp, #-32]!
  418678:	stp	x28, x19, [sp, #16]
  41867c:	mov	x29, sp
  418680:	sub	sp, sp, #0x3c0
  418684:	add	x8, sp, #0x10
  418688:	movi	v0.2d, #0x0
  41868c:	mov	w9, #0x56                  	// #86
  418690:	stp	q0, q0, [x8, #128]
  418694:	stp	q0, q0, [x8, #160]
  418698:	stp	q0, q0, [x8, #192]
  41869c:	stp	q0, q0, [x8, #224]
  4186a0:	stp	q0, q0, [x8, #256]
  4186a4:	stp	q0, q0, [x8, #288]
  4186a8:	stp	q0, q0, [x8, #320]
  4186ac:	stp	q0, q0, [x8, #352]
  4186b0:	stp	q0, q0, [x8, #384]
  4186b4:	stp	q0, q0, [x8, #416]
  4186b8:	stp	q0, q0, [x8, #448]
  4186bc:	stp	q0, q0, [x8, #480]
  4186c0:	strb	w9, [sp, #172]
  4186c4:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4186c8:	ldr	x9, [x9, #2256]
  4186cc:	stp	q0, q0, [sp, #16]
  4186d0:	stp	q0, q0, [sp, #48]
  4186d4:	stp	q0, q0, [sp, #80]
  4186d8:	stp	q0, q0, [sp, #112]
  4186dc:	cbz	x9, 4186f0 <wcrtomb@plt+0x138d0>
  4186e0:	ldr	w10, [x9, #144]
  4186e4:	ldr	x9, [x9, #136]
  4186e8:	str	w10, [sp, #160]
  4186ec:	str	x9, [x8, #136]
  4186f0:	add	x0, sp, #0x218
  4186f4:	add	x19, sp, #0x218
  4186f8:	bl	422428 <wcrtomb@plt+0x1d608>
  4186fc:	add	x19, x19, #0x8
  418700:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  418704:	add	x1, x1, #0x232
  418708:	mov	x0, x19
  41870c:	bl	419680 <wcrtomb@plt+0x14860>
  418710:	add	x0, sp, #0x10
  418714:	add	x1, sp, #0x218
  418718:	add	x2, sp, #0xc
  41871c:	mov	w3, wzr
  418720:	bl	417798 <wcrtomb@plt+0x12978>
  418724:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418728:	ldr	x1, [x8, #3968]
  41872c:	mov	x0, x19
  418730:	bl	419680 <wcrtomb@plt+0x14860>
  418734:	add	x0, sp, #0x218
  418738:	add	x1, sp, #0x10
  41873c:	mov	x2, xzr
  418740:	bl	41875c <wcrtomb@plt+0x1393c>
  418744:	add	x0, sp, #0x218
  418748:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  41874c:	add	sp, sp, #0x3c0
  418750:	ldp	x28, x19, [sp, #16]
  418754:	ldp	x29, x30, [sp], #32
  418758:	ret
  41875c:	sub	sp, sp, #0x100
  418760:	stp	x26, x25, [sp, #192]
  418764:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  418768:	ldrb	w8, [x25, #840]
  41876c:	stp	x20, x19, [sp, #240]
  418770:	mov	x20, x1
  418774:	mov	x19, x0
  418778:	stp	x29, x30, [sp, #160]
  41877c:	stp	x28, x27, [sp, #176]
  418780:	stp	x24, x23, [sp, #208]
  418784:	stp	x22, x21, [sp, #224]
  418788:	add	x29, sp, #0xa0
  41878c:	cbz	w8, 4187a0 <wcrtomb@plt+0x13980>
  418790:	ldr	x21, [x19, #8]
  418794:	cbnz	x21, 4187ac <wcrtomb@plt+0x1398c>
  418798:	ldr	x21, [x19]
  41879c:	b	4187ac <wcrtomb@plt+0x1398c>
  4187a0:	ldr	x21, [x19]
  4187a4:	cbnz	x21, 4187ac <wcrtomb@plt+0x1398c>
  4187a8:	ldr	x21, [x19, #8]
  4187ac:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4187b0:	ldrb	w8, [x8, #673]
  4187b4:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4187b8:	cbz	w8, 41881c <wcrtomb@plt+0x139fc>
  4187bc:	tbz	x2, #63, 4187c8 <wcrtomb@plt+0x139a8>
  4187c0:	bl	405568 <wcrtomb@plt+0x748>
  4187c4:	mov	x2, x0
  4187c8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4187cc:	ldr	x8, [x8, #4064]
  4187d0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4187d4:	ldr	x9, [x9, #4080]
  4187d8:	ldr	x22, [x27, #3928]
  4187dc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  4187e0:	sub	x8, x2, x8
  4187e4:	add	x1, x1, #0x308
  4187e8:	mov	w2, #0x5                   	// #5
  4187ec:	mov	x0, xzr
  4187f0:	sub	x23, x8, x9
  4187f4:	bl	404bf0 <dcgettext@plt>
  4187f8:	mov	x24, x0
  4187fc:	add	x1, sp, #0x38
  418800:	mov	x0, x23
  418804:	bl	43650c <argp_usage@@Base+0x4910>
  418808:	mov	x3, x0
  41880c:	mov	w1, #0x1                   	// #1
  418810:	mov	x0, x22
  418814:	mov	x2, x24
  418818:	bl	404910 <__fprintf_chk@plt>
  41881c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418820:	ldr	w8, [x8, #644]
  418824:	cmp	w8, #0x1
  418828:	b.gt	418868 <wcrtomb@plt+0x13a48>
  41882c:	mov	x0, x21
  418830:	bl	43bcd4 <argp_usage@@Base+0xa0d8>
  418834:	ldr	x1, [x27, #3928]
  418838:	bl	404c10 <fputs_unlocked@plt>
  41883c:	ldrb	w8, [x25, #840]
  418840:	cbz	w8, 418858 <wcrtomb@plt+0x13a38>
  418844:	ldrb	w8, [x19, #16]
  418848:	cbz	w8, 418858 <wcrtomb@plt+0x13a38>
  41884c:	ldr	x1, [x27, #3928]
  418850:	mov	w0, #0x2f                  	// #47
  418854:	bl	404b90 <fputc_unlocked@plt>
  418858:	ldr	x1, [x27, #3928]
  41885c:	mov	w0, #0xa                   	// #10
  418860:	bl	404b90 <fputc_unlocked@plt>
  418864:	b	418cb8 <wcrtomb@plt+0x13e98>
  418868:	mov	w8, #0x3f                  	// #63
  41886c:	sturb	w8, [x29, #-12]
  418870:	ldrb	w8, [x20, #156]
  418874:	cmp	w8, #0x56
  418878:	b.hi	418938 <wcrtomb@plt+0x13b18>  // b.pmore
  41887c:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x13da0>
  418880:	add	x9, x9, #0x1d1
  418884:	adr	x10, 418894 <wcrtomb@plt+0x13a74>
  418888:	ldrb	w11, [x9, x8]
  41888c:	add	x10, x10, x11, lsl #2
  418890:	br	x10
  418894:	ldrb	w8, [x19, #16]
  418898:	mov	w9, #0x64                  	// #100
  41889c:	cmp	w8, #0x0
  4188a0:	mov	w8, #0x2d                  	// #45
  4188a4:	csel	w8, w8, w9, eq  // eq = none
  4188a8:	b	418934 <wcrtomb@plt+0x13b14>
  4188ac:	mov	w8, #0x64                  	// #100
  4188b0:	b	418934 <wcrtomb@plt+0x13b14>
  4188b4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4188b8:	ldr	x8, [x8, #1008]
  4188bc:	mov	w9, #0x4c                  	// #76
  4188c0:	sturb	w9, [x29, #-12]
  4188c4:	cbz	x8, 4188cc <wcrtomb@plt+0x13aac>
  4188c8:	blr	x8
  4188cc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4188d0:	add	x1, x1, #0x333
  4188d4:	mov	w2, #0x5                   	// #5
  4188d8:	mov	x0, xzr
  4188dc:	bl	404bf0 <dcgettext@plt>
  4188e0:	mov	x2, x0
  4188e4:	mov	w0, wzr
  4188e8:	mov	w1, wzr
  4188ec:	bl	4041f0 <error@plt>
  4188f0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4188f4:	mov	w9, #0x2                   	// #2
  4188f8:	str	w9, [x8, #3456]
  4188fc:	b	418938 <wcrtomb@plt+0x13b18>
  418900:	mov	w8, #0x68                  	// #104
  418904:	b	418934 <wcrtomb@plt+0x13b14>
  418908:	mov	w8, #0x6c                  	// #108
  41890c:	b	418934 <wcrtomb@plt+0x13b14>
  418910:	mov	w8, #0x63                  	// #99
  418914:	b	418934 <wcrtomb@plt+0x13b14>
  418918:	mov	w8, #0x62                  	// #98
  41891c:	b	418934 <wcrtomb@plt+0x13b14>
  418920:	mov	w8, #0x70                  	// #112
  418924:	b	418934 <wcrtomb@plt+0x13b14>
  418928:	mov	w8, #0x43                  	// #67
  41892c:	b	418934 <wcrtomb@plt+0x13b14>
  418930:	mov	w8, #0x4d                  	// #77
  418934:	sturb	w8, [x29, #-12]
  418938:	ldr	w0, [x19, #104]
  41893c:	sub	x22, x29, #0xc
  418940:	orr	x1, x22, #0x1
  418944:	bl	427cc8 <wcrtomb@plt+0x22ea8>
  418948:	add	x1, x22, #0xa
  41894c:	mov	x0, x19
  418950:	bl	426f10 <wcrtomb@plt+0x220f0>
  418954:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418958:	ldrb	w2, [x8, #696]
  41895c:	ldp	x0, x1, [x19, #232]
  418960:	bl	418528 <wcrtomb@plt+0x13708>
  418964:	mov	x22, x0
  418968:	bl	404190 <strlen@plt>
  41896c:	adrp	x28, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  418970:	ldr	w8, [x28, #2236]
  418974:	cmp	w8, w0
  418978:	b.ge	418980 <wcrtomb@plt+0x13b60>  // b.tcont
  41897c:	str	w0, [x28, #2236]
  418980:	ldr	x23, [x19, #32]
  418984:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418988:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  41898c:	cbz	x23, 4189b8 <wcrtomb@plt+0x13b98>
  418990:	ldrb	w8, [x23]
  418994:	cbz	w8, 4189b8 <wcrtomb@plt+0x13b98>
  418998:	ldr	w8, [x26, #4048]
  41899c:	cmp	w8, #0x1
  4189a0:	b.eq	4189b8 <wcrtomb@plt+0x13b98>  // b.none
  4189a4:	ldrb	w8, [x25, #672]
  4189a8:	cbnz	w8, 4189b8 <wcrtomb@plt+0x13b98>
  4189ac:	ldr	x24, [x19, #40]
  4189b0:	cbnz	x24, 4189d0 <wcrtomb@plt+0x13bb0>
  4189b4:	b	4189ec <wcrtomb@plt+0x13bcc>
  4189b8:	ldr	w0, [x19, #112]
  4189bc:	sub	x1, x29, #0x24
  4189c0:	bl	43650c <argp_usage@@Base+0x4910>
  4189c4:	mov	x23, x0
  4189c8:	ldr	x24, [x19, #40]
  4189cc:	cbz	x24, 4189ec <wcrtomb@plt+0x13bcc>
  4189d0:	ldrb	w8, [x24]
  4189d4:	cbz	w8, 4189ec <wcrtomb@plt+0x13bcc>
  4189d8:	ldr	w8, [x26, #4048]
  4189dc:	cmp	w8, #0x1
  4189e0:	b.eq	4189ec <wcrtomb@plt+0x13bcc>  // b.none
  4189e4:	ldrb	w8, [x25, #672]
  4189e8:	cbz	w8, 4189fc <wcrtomb@plt+0x13bdc>
  4189ec:	ldr	w0, [x19, #116]
  4189f0:	sub	x1, x29, #0x3c
  4189f4:	bl	43650c <argp_usage@@Base+0x4910>
  4189f8:	mov	x24, x0
  4189fc:	ldrb	w8, [x20, #156]
  418a00:	sub	w8, w8, #0x33
  418a04:	cmp	w8, #0x1
  418a08:	b.hi	418a6c <wcrtomb@plt+0x13c4c>  // b.pmore
  418a0c:	ldr	x0, [x19, #120]
  418a10:	bl	4048b0 <gnu_dev_major@plt>
  418a14:	mov	w0, w0
  418a18:	add	x1, sp, #0x20
  418a1c:	bl	43650c <argp_usage@@Base+0x4910>
  418a20:	mov	x1, x0
  418a24:	add	x0, sp, #0x38
  418a28:	mov	w2, #0x2a                  	// #42
  418a2c:	bl	404560 <__strcpy_chk@plt>
  418a30:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  418a34:	add	x1, x1, #0xdc8
  418a38:	add	x0, sp, #0x38
  418a3c:	mov	w2, #0x2a                  	// #42
  418a40:	bl	4049e0 <__strcat_chk@plt>
  418a44:	ldr	x0, [x19, #120]
  418a48:	bl	404b10 <gnu_dev_minor@plt>
  418a4c:	mov	w0, w0
  418a50:	add	x1, sp, #0x20
  418a54:	bl	43650c <argp_usage@@Base+0x4910>
  418a58:	mov	x1, x0
  418a5c:	add	x0, sp, #0x38
  418a60:	mov	w2, #0x2a                  	// #42
  418a64:	bl	4049e0 <__strcat_chk@plt>
  418a68:	b	418a88 <wcrtomb@plt+0x13c68>
  418a6c:	ldr	x0, [x19, #136]
  418a70:	add	x1, sp, #0x20
  418a74:	bl	43650c <argp_usage@@Base+0x4910>
  418a78:	mov	x1, x0
  418a7c:	add	x0, sp, #0x38
  418a80:	mov	w2, #0x2a                  	// #42
  418a84:	bl	404560 <__strcpy_chk@plt>
  418a88:	add	x0, sp, #0x38
  418a8c:	bl	404190 <strlen@plt>
  418a90:	mov	x25, x0
  418a94:	mov	x0, x23
  418a98:	bl	404190 <strlen@plt>
  418a9c:	mov	x26, x0
  418aa0:	mov	x0, x24
  418aa4:	bl	404190 <strlen@plt>
  418aa8:	adrp	x9, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  418aac:	ldr	w10, [x9, #2232]
  418ab0:	add	w8, w25, w26
  418ab4:	add	w8, w8, w0
  418ab8:	add	w8, w8, #0x2
  418abc:	cmp	w10, w8
  418ac0:	b.ge	418ac8 <wcrtomb@plt+0x13ca8>  // b.tcont
  418ac4:	str	w8, [x9, #2232]
  418ac8:	ldr	w9, [x9, #2232]
  418acc:	ldr	x0, [x27, #3928]
  418ad0:	ldr	w10, [x28, #2236]
  418ad4:	sub	w8, w25, w8
  418ad8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  418adc:	add	w6, w8, w9
  418ae0:	add	x2, x2, #0x4d1
  418ae4:	sub	x3, x29, #0xc
  418ae8:	add	x7, sp, #0x38
  418aec:	mov	w1, #0x1                   	// #1
  418af0:	mov	x4, x23
  418af4:	mov	x5, x24
  418af8:	str	x22, [sp, #8]
  418afc:	str	w10, [sp]
  418b00:	bl	404910 <__fprintf_chk@plt>
  418b04:	ldr	x22, [x27, #3928]
  418b08:	mov	x0, x21
  418b0c:	bl	43bcd4 <argp_usage@@Base+0xa0d8>
  418b10:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  418b14:	mov	x3, x0
  418b18:	add	x2, x2, #0x385
  418b1c:	mov	w1, #0x1                   	// #1
  418b20:	mov	x0, x22
  418b24:	bl	404910 <__fprintf_chk@plt>
  418b28:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418b2c:	ldrb	w8, [x8, #840]
  418b30:	cbz	w8, 418b48 <wcrtomb@plt+0x13d28>
  418b34:	ldrb	w8, [x19, #16]
  418b38:	cbz	w8, 418b48 <wcrtomb@plt+0x13d28>
  418b3c:	ldr	x1, [x27, #3928]
  418b40:	mov	w0, #0x2f                  	// #47
  418b44:	bl	404b90 <fputc_unlocked@plt>
  418b48:	ldrb	w8, [x20, #156]
  418b4c:	cmp	w8, #0x56
  418b50:	b.hi	418b94 <wcrtomb@plt+0x13d74>  // b.pmore
  418b54:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x13da0>
  418b58:	add	x9, x9, #0x228
  418b5c:	adr	x10, 418b6c <wcrtomb@plt+0x13d4c>
  418b60:	ldrb	w11, [x9, x8]
  418b64:	add	x10, x10, x11, lsl #2
  418b68:	br	x10
  418b6c:	ldr	x1, [x27, #3928]
  418b70:	mov	w0, #0xa                   	// #10
  418b74:	bl	404400 <putc_unlocked@plt>
  418b78:	b	418cb8 <wcrtomb@plt+0x13e98>
  418b7c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418b80:	mov	w9, #0x1                   	// #1
  418b84:	mov	w10, #0x56                  	// #86
  418b88:	strb	w9, [x8, #2301]
  418b8c:	sturb	w10, [x29, #-12]
  418b90:	b	418938 <wcrtomb@plt+0x13b18>
  418b94:	ldr	x20, [x27, #3928]
  418b98:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418b9c:	add	x1, x1, #0x4f8
  418ba0:	mov	w2, #0x5                   	// #5
  418ba4:	mov	x0, xzr
  418ba8:	strb	w8, [sp, #28]
  418bac:	strb	wzr, [sp, #29]
  418bb0:	bl	404bf0 <dcgettext@plt>
  418bb4:	mov	x21, x0
  418bb8:	add	x0, sp, #0x1c
  418bbc:	bl	43c05c <argp_usage@@Base+0xa460>
  418bc0:	b	418bec <wcrtomb@plt+0x13dcc>
  418bc4:	ldr	x20, [x27, #3928]
  418bc8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418bcc:	add	x1, x1, #0x4eb
  418bd0:	mov	w2, #0x5                   	// #5
  418bd4:	mov	x0, xzr
  418bd8:	bl	404bf0 <dcgettext@plt>
  418bdc:	ldr	x8, [x19, #24]
  418be0:	mov	x21, x0
  418be4:	mov	x0, x8
  418be8:	bl	43bcd4 <argp_usage@@Base+0xa0d8>
  418bec:	mov	x3, x0
  418bf0:	mov	w1, #0x1                   	// #1
  418bf4:	mov	x0, x20
  418bf8:	mov	x2, x21
  418bfc:	b	418c88 <wcrtomb@plt+0x13e68>
  418c00:	ldr	x0, [x19, #24]
  418c04:	ldr	x20, [x27, #3928]
  418c08:	bl	43bcd4 <argp_usage@@Base+0xa0d8>
  418c0c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  418c10:	mov	x3, x0
  418c14:	add	x2, x2, #0x4e3
  418c18:	b	418c80 <wcrtomb@plt+0x13e60>
  418c1c:	ldr	x20, [x27, #3928]
  418c20:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418c24:	add	x1, x1, #0x50f
  418c28:	b	418c9c <wcrtomb@plt+0x13e7c>
  418c2c:	ldr	x20, [x27, #3928]
  418c30:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418c34:	add	x1, x1, #0x51e
  418c38:	b	418c9c <wcrtomb@plt+0x13e7c>
  418c3c:	add	x0, x20, #0x171
  418c40:	mov	w1, #0xc                   	// #12
  418c44:	bl	4184fc <wcrtomb@plt+0x136dc>
  418c48:	add	x1, sp, #0x20
  418c4c:	bl	43650c <argp_usage@@Base+0x4910>
  418c50:	mov	x1, x0
  418c54:	add	x0, sp, #0x38
  418c58:	mov	w2, #0x2a                  	// #42
  418c5c:	bl	404560 <__strcpy_chk@plt>
  418c60:	ldr	x20, [x27, #3928]
  418c64:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418c68:	add	x1, x1, #0x540
  418c6c:	mov	w2, #0x5                   	// #5
  418c70:	mov	x0, xzr
  418c74:	bl	404bf0 <dcgettext@plt>
  418c78:	mov	x2, x0
  418c7c:	add	x3, sp, #0x38
  418c80:	mov	w1, #0x1                   	// #1
  418c84:	mov	x0, x20
  418c88:	bl	404910 <__fprintf_chk@plt>
  418c8c:	b	418cb8 <wcrtomb@plt+0x13e98>
  418c90:	ldr	x20, [x27, #3928]
  418c94:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418c98:	add	x1, x1, #0x52d
  418c9c:	mov	w2, #0x5                   	// #5
  418ca0:	mov	x0, xzr
  418ca4:	bl	404bf0 <dcgettext@plt>
  418ca8:	mov	x2, x0
  418cac:	mov	w1, #0x1                   	// #1
  418cb0:	mov	x0, x20
  418cb4:	bl	404910 <__fprintf_chk@plt>
  418cb8:	ldr	x0, [x27, #3928]
  418cbc:	bl	404ad0 <fflush_unlocked@plt>
  418cc0:	mov	x0, x19
  418cc4:	bl	42702c <wcrtomb@plt+0x2220c>
  418cc8:	ldp	x20, x19, [sp, #240]
  418ccc:	ldp	x22, x21, [sp, #224]
  418cd0:	ldp	x24, x23, [sp, #208]
  418cd4:	ldp	x26, x25, [sp, #192]
  418cd8:	ldp	x28, x27, [sp, #176]
  418cdc:	ldp	x29, x30, [sp, #160]
  418ce0:	add	sp, sp, #0x100
  418ce4:	ret
  418ce8:	sub	sp, sp, #0x60
  418cec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418cf0:	ldr	w8, [x8, #644]
  418cf4:	stp	x29, x30, [sp, #48]
  418cf8:	stp	x22, x21, [sp, #64]
  418cfc:	stp	x20, x19, [sp, #80]
  418d00:	cmp	w8, #0x2
  418d04:	add	x29, sp, #0x30
  418d08:	b.lt	418dd4 <wcrtomb@plt+0x13fb4>  // b.tstop
  418d0c:	sub	x9, x29, #0xc
  418d10:	mov	x19, x0
  418d14:	mov	w8, #0x64                  	// #100
  418d18:	orr	x1, x9, #0x1
  418d1c:	mov	w0, w2
  418d20:	sturb	w8, [x29, #-12]
  418d24:	bl	427cc8 <wcrtomb@plt+0x22ea8>
  418d28:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418d2c:	ldrb	w8, [x8, #673]
  418d30:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418d34:	cbz	w8, 418d74 <wcrtomb@plt+0x13f54>
  418d38:	ldr	x20, [x22, #3928]
  418d3c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418d40:	add	x1, x1, #0x308
  418d44:	mov	w2, #0x5                   	// #5
  418d48:	mov	x0, xzr
  418d4c:	bl	404bf0 <dcgettext@plt>
  418d50:	mov	x21, x0
  418d54:	bl	405568 <wcrtomb@plt+0x748>
  418d58:	add	x1, sp, #0xc
  418d5c:	bl	43650c <argp_usage@@Base+0x4910>
  418d60:	mov	x3, x0
  418d64:	mov	w1, #0x1                   	// #1
  418d68:	mov	x0, x20
  418d6c:	mov	x2, x21
  418d70:	bl	404910 <__fprintf_chk@plt>
  418d74:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  418d78:	adrp	x9, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  418d7c:	ldr	w8, [x8, #2232]
  418d80:	ldr	w9, [x9, #2236]
  418d84:	ldr	x20, [x22, #3928]
  418d88:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  418d8c:	add	x1, x1, #0x32d
  418d90:	add	w8, w8, w9
  418d94:	mov	w2, #0x5                   	// #5
  418d98:	mov	x0, xzr
  418d9c:	add	w21, w8, #0x1
  418da0:	bl	404bf0 <dcgettext@plt>
  418da4:	mov	x22, x0
  418da8:	mov	x0, x19
  418dac:	bl	43bcd4 <argp_usage@@Base+0xa0d8>
  418db0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  418db4:	mov	x6, x0
  418db8:	add	x2, x2, #0x322
  418dbc:	sub	x3, x29, #0xc
  418dc0:	mov	w1, #0x1                   	// #1
  418dc4:	mov	x0, x20
  418dc8:	mov	w4, w21
  418dcc:	mov	x5, x22
  418dd0:	bl	404910 <__fprintf_chk@plt>
  418dd4:	ldp	x20, x19, [sp, #80]
  418dd8:	ldp	x22, x21, [sp, #64]
  418ddc:	ldp	x29, x30, [sp, #48]
  418de0:	add	sp, sp, #0x60
  418de4:	ret
  418de8:	stp	x29, x30, [sp, #-32]!
  418dec:	stp	x20, x19, [sp, #16]
  418df0:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  418df4:	ldrb	w8, [x20, #928]
  418df8:	mov	x19, x0
  418dfc:	mov	x29, sp
  418e00:	cbz	w8, 418e1c <wcrtomb@plt+0x13ffc>
  418e04:	mov	x0, x19
  418e08:	bl	405ae4 <wcrtomb@plt+0xcc4>
  418e0c:	tbnz	x0, #63, 418e18 <wcrtomb@plt+0x13ff8>
  418e10:	sub	x19, x19, x0, lsl #9
  418e14:	b	418e1c <wcrtomb@plt+0x13ffc>
  418e18:	strb	wzr, [x20, #928]
  418e1c:	mov	x0, x19
  418e20:	bl	4050a4 <wcrtomb@plt+0x284>
  418e24:	cmp	x19, #0x1
  418e28:	b.lt	418e50 <wcrtomb@plt+0x14030>  // b.tstop
  418e2c:	add	x19, x19, #0x200
  418e30:	bl	4055d4 <wcrtomb@plt+0x7b4>
  418e34:	cbz	x0, 418e5c <wcrtomb@plt+0x1403c>
  418e38:	bl	405744 <wcrtomb@plt+0x924>
  418e3c:	sub	x0, x19, #0x400
  418e40:	bl	4050a4 <wcrtomb@plt+0x284>
  418e44:	sub	x19, x19, #0x200
  418e48:	cmp	x19, #0x200
  418e4c:	b.gt	418e30 <wcrtomb@plt+0x14010>
  418e50:	ldp	x20, x19, [sp, #16]
  418e54:	ldp	x29, x30, [sp], #32
  418e58:	ret
  418e5c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418e60:	ldr	x8, [x8, #1008]
  418e64:	cbz	x8, 418e6c <wcrtomb@plt+0x1404c>
  418e68:	blr	x8
  418e6c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  418e70:	add	x1, x1, #0xc61
  418e74:	mov	w2, #0x5                   	// #5
  418e78:	mov	x0, xzr
  418e7c:	bl	404bf0 <dcgettext@plt>
  418e80:	mov	x2, x0
  418e84:	mov	w0, wzr
  418e88:	mov	w1, wzr
  418e8c:	bl	4041f0 <error@plt>
  418e90:	bl	40dda4 <wcrtomb@plt+0x8f84>
  418e94:	stp	x29, x30, [sp, #-32]!
  418e98:	str	x19, [sp, #16]
  418e9c:	mov	x29, sp
  418ea0:	bl	4172a0 <wcrtomb@plt+0x12480>
  418ea4:	bl	41b4a4 <wcrtomb@plt+0x16684>
  418ea8:	mov	w0, wzr
  418eac:	bl	405f4c <wcrtomb@plt+0x112c>
  418eb0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418eb4:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  418eb8:	add	x0, x0, #0xfe8
  418ebc:	add	x1, x1, #0x60
  418ec0:	mov	w2, wzr
  418ec4:	bl	4172f0 <wcrtomb@plt+0x124d0>
  418ec8:	cmp	w0, #0x1
  418ecc:	b.ne	418f5c <wcrtomb@plt+0x1413c>  // b.any
  418ed0:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418ed4:	ldr	x0, [x19, #4072]
  418ed8:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  418edc:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418ee0:	add	x1, x1, #0x60
  418ee4:	add	x2, x2, #0xfd0
  418ee8:	mov	w3, wzr
  418eec:	bl	417798 <wcrtomb@plt+0x12978>
  418ef0:	ldr	x1, [x19, #4072]
  418ef4:	ldrb	w8, [x1, #156]
  418ef8:	cmp	w8, #0x56
  418efc:	b.ne	418f10 <wcrtomb@plt+0x140f0>  // b.any
  418f00:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418f04:	add	x0, x0, #0xf80
  418f08:	mov	w2, #0x64                  	// #100
  418f0c:	bl	4196c0 <wcrtomb@plt+0x148a0>
  418f10:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  418f14:	ldr	x8, [x19, #3968]
  418f18:	cbz	x8, 418f5c <wcrtomb@plt+0x1413c>
  418f1c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418f20:	ldr	w8, [x8, #644]
  418f24:	cbz	w8, 418f2c <wcrtomb@plt+0x1410c>
  418f28:	bl	418674 <wcrtomb@plt+0x13854>
  418f2c:	ldr	x0, [x19, #3968]
  418f30:	bl	41b86c <wcrtomb@plt+0x16a4c>
  418f34:	tbnz	w0, #0, 418f5c <wcrtomb@plt+0x1413c>
  418f38:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418f3c:	ldrb	w8, [x8, #76]
  418f40:	cbz	w8, 418f5c <wcrtomb@plt+0x1413c>
  418f44:	ldr	x0, [x19, #3968]
  418f48:	bl	405e88 <wcrtomb@plt+0x1068>
  418f4c:	mov	x19, x0
  418f50:	bl	41b86c <wcrtomb@plt+0x16a4c>
  418f54:	mov	x0, x19
  418f58:	bl	4049d0 <free@plt>
  418f5c:	bl	405c30 <wcrtomb@plt+0xe10>
  418f60:	bl	41bccc <wcrtomb@plt+0x16eac>
  418f64:	ldr	x19, [sp, #16]
  418f68:	ldp	x29, x30, [sp], #32
  418f6c:	ret
  418f70:	stp	x29, x30, [sp, #-32]!
  418f74:	ldr	w8, [x1]
  418f78:	str	x19, [sp, #16]
  418f7c:	mov	x19, x0
  418f80:	mov	x29, sp
  418f84:	cmp	w8, #0x4
  418f88:	b.eq	418fe4 <wcrtomb@plt+0x141c4>  // b.none
  418f8c:	cmp	w8, #0x2
  418f90:	b.eq	418fa4 <wcrtomb@plt+0x14184>  // b.none
  418f94:	cmp	w8, #0x1
  418f98:	b.ne	418fbc <wcrtomb@plt+0x1419c>  // b.any
  418f9c:	mov	w1, wzr
  418fa0:	b	418fa8 <wcrtomb@plt+0x14188>
  418fa4:	mov	w1, #0x1                   	// #1
  418fa8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418fac:	ldrb	w2, [x8, #952]
  418fb0:	mov	x0, x19
  418fb4:	bl	428898 <wcrtomb@plt+0x23a78>
  418fb8:	mov	x19, x0
  418fbc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  418fc0:	ldr	x1, [x8, #880]
  418fc4:	cbz	x1, 418fe4 <wcrtomb@plt+0x141c4>
  418fc8:	mov	x0, x19
  418fcc:	bl	41c67c <wcrtomb@plt+0x1785c>
  418fd0:	cmn	x0, #0x1
  418fd4:	b.ne	418fe0 <wcrtomb@plt+0x141c0>  // b.any
  418fd8:	mov	x0, x19
  418fdc:	bl	404190 <strlen@plt>
  418fe0:	add	x19, x19, x0
  418fe4:	mov	x0, x19
  418fe8:	ldr	x19, [sp, #16]
  418fec:	ldp	x29, x30, [sp], #32
  418ff0:	ret
  418ff4:	stp	x29, x30, [sp, #-16]!
  418ff8:	mov	x1, x0
  418ffc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  419000:	adrp	x2, 419000 <wcrtomb@plt+0x141e0>
  419004:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x14da0>
  419008:	add	x0, x0, #0xa08
  41900c:	add	x2, x2, #0x394
  419010:	add	x3, x3, #0x980
  419014:	mov	x29, sp
  419018:	bl	419024 <wcrtomb@plt+0x14204>
  41901c:	ldp	x29, x30, [sp], #16
  419020:	ret
  419024:	sub	sp, sp, #0x170
  419028:	stp	x20, x19, [sp, #352]
  41902c:	mov	x19, x1
  419030:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  419034:	stp	x29, x30, [sp, #272]
  419038:	stp	x24, x23, [sp, #320]
  41903c:	add	x29, sp, #0x110
  419040:	mov	x24, x0
  419044:	add	x1, x1, #0x133
  419048:	mov	x0, x19
  41904c:	stp	x28, x27, [sp, #288]
  419050:	stp	x26, x25, [sp, #304]
  419054:	stp	x22, x21, [sp, #336]
  419058:	mov	x21, x3
  41905c:	mov	x22, x2
  419060:	stp	xzr, xzr, [x29, #-24]
  419064:	bl	4044c0 <fopen@plt>
  419068:	cbz	x0, 419354 <wcrtomb@plt+0x14534>
  41906c:	mov	x20, x0
  419070:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x14da0>
  419074:	add	x8, x8, #0x198
  419078:	sub	x0, x29, #0x10
  41907c:	sub	x1, x29, #0x18
  419080:	mov	x2, x20
  419084:	str	x8, [sp, #80]
  419088:	bl	4049a0 <getline@plt>
  41908c:	cmp	x0, #0x1
  419090:	b.lt	4192f0 <wcrtomb@plt+0x144d0>  // b.tstop
  419094:	mov	w27, wzr
  419098:	mov	w25, #0x8e44                	// #36420
  41909c:	mov	w23, #0x1                   	// #1
  4190a0:	b	4190f4 <wcrtomb@plt+0x142d4>
  4190a4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  4190a8:	mov	w2, #0x5                   	// #5
  4190ac:	mov	x0, xzr
  4190b0:	add	x1, x1, #0x577
  4190b4:	bl	404bf0 <dcgettext@plt>
  4190b8:	mov	x2, x0
  4190bc:	mov	w0, wzr
  4190c0:	mov	w1, wzr
  4190c4:	mov	x3, x19
  4190c8:	mov	w4, w23
  4190cc:	bl	4041f0 <error@plt>
  4190d0:	mov	w27, #0x1                   	// #1
  4190d4:	sub	x0, x29, #0x10
  4190d8:	sub	x1, x29, #0x18
  4190dc:	mov	x2, x20
  4190e0:	orr	w25, w25, #0x8
  4190e4:	bl	4049a0 <getline@plt>
  4190e8:	cmp	x0, #0x0
  4190ec:	add	w23, w23, #0x1
  4190f0:	b.le	4192b4 <wcrtomb@plt+0x14494>
  4190f4:	ldur	x0, [x29, #-16]
  4190f8:	add	x1, sp, #0x10
  4190fc:	mov	w2, w25
  419100:	bl	429ff0 <wcrtomb@plt+0x251d0>
  419104:	cbnz	w0, 419300 <wcrtomb@plt+0x144e0>
  419108:	ldr	x8, [sp, #16]
  41910c:	cbz	x8, 4190d4 <wcrtomb@plt+0x142b4>
  419110:	cmp	x8, #0x2
  419114:	b.ne	4190a4 <wcrtomb@plt+0x14284>  // b.any
  419118:	ldr	x8, [sp, #24]
  41911c:	ldr	x0, [x8]
  419120:	ldrb	w8, [x0]
  419124:	cmp	w8, #0x2b
  419128:	b.ne	41914c <wcrtomb@plt+0x1432c>  // b.any
  41912c:	add	x1, x0, #0x1
  419130:	add	x0, sp, #0x8
  419134:	mov	x2, x21
  419138:	mov	x3, x19
  41913c:	mov	w4, w23
  419140:	bl	419544 <wcrtomb@plt+0x14724>
  419144:	cbnz	w0, 4190d0 <wcrtomb@plt+0x142b0>
  419148:	b	419160 <wcrtomb@plt+0x14340>
  41914c:	cbz	x22, 419160 <wcrtomb@plt+0x14340>
  419150:	blr	x22
  419154:	cmn	x0, #0x1
  419158:	str	x0, [sp, #8]
  41915c:	b.eq	4191d4 <wcrtomb@plt+0x143b4>  // b.none
  419160:	ldr	x8, [sp, #24]
  419164:	mov	w1, #0x3a                  	// #58
  419168:	ldr	x28, [x8, #8]
  41916c:	mov	x0, x28
  419170:	bl	404a70 <strchr@plt>
  419174:	cbz	x0, 4191a4 <wcrtomb@plt+0x14384>
  419178:	mov	x1, x0
  41917c:	cmp	x0, x28
  419180:	strb	wzr, [x1], #1
  419184:	mov	x0, sp
  419188:	mov	x2, x21
  41918c:	mov	x3, x19
  419190:	mov	w4, w23
  419194:	csel	x28, x28, xzr, hi  // hi = pmore
  419198:	bl	419544 <wcrtomb@plt+0x14724>
  41919c:	cbnz	w0, 4190d0 <wcrtomb@plt+0x142b0>
  4191a0:	b	419208 <wcrtomb@plt+0x143e8>
  4191a4:	ldrb	w8, [x28]
  4191a8:	cmp	w8, #0x2b
  4191ac:	b.ne	4191f4 <wcrtomb@plt+0x143d4>  // b.any
  4191b0:	mov	x0, sp
  4191b4:	mov	x1, x28
  4191b8:	mov	x2, x21
  4191bc:	mov	x3, x19
  4191c0:	mov	w4, w23
  4191c4:	bl	419544 <wcrtomb@plt+0x14724>
  4191c8:	cbnz	w0, 4190d0 <wcrtomb@plt+0x142b0>
  4191cc:	mov	x28, xzr
  4191d0:	b	419208 <wcrtomb@plt+0x143e8>
  4191d4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  4191d8:	mov	w2, #0x5                   	// #5
  4191dc:	mov	x0, xzr
  4191e0:	add	x1, x1, #0x58d
  4191e4:	bl	404bf0 <dcgettext@plt>
  4191e8:	ldr	x8, [sp, #24]
  4191ec:	ldr	x6, [x8]
  4191f0:	b	419294 <wcrtomb@plt+0x14474>
  4191f4:	mov	x0, x28
  4191f8:	blr	x22
  4191fc:	cmn	x0, #0x1
  419200:	str	x0, [sp]
  419204:	b.eq	419278 <wcrtomb@plt+0x14458>  // b.none
  419208:	mov	w0, #0x18                  	// #24
  41920c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  419210:	ldp	x9, x8, [sp]
  419214:	mov	x26, x0
  419218:	stp	x8, x9, [x0]
  41921c:	cbz	x28, 41922c <wcrtomb@plt+0x1440c>
  419220:	mov	x0, x28
  419224:	bl	43d39c <argp_usage@@Base+0xb7a0>
  419228:	b	419230 <wcrtomb@plt+0x14410>
  41922c:	mov	x0, xzr
  419230:	str	x0, [x26, #16]
  419234:	ldr	x8, [x24]
  419238:	cbnz	x8, 419264 <wcrtomb@plt+0x14444>
  41923c:	adrp	x2, 419000 <wcrtomb@plt+0x141e0>
  419240:	adrp	x3, 419000 <wcrtomb@plt+0x141e0>
  419244:	mov	x0, xzr
  419248:	mov	x1, xzr
  41924c:	add	x2, x2, #0x614
  419250:	add	x3, x3, #0x624
  419254:	mov	x4, xzr
  419258:	bl	435130 <argp_usage@@Base+0x3534>
  41925c:	str	x0, [x24]
  419260:	cbz	x0, 419350 <wcrtomb@plt+0x14530>
  419264:	ldr	x0, [x24]
  419268:	mov	x1, x26
  41926c:	bl	43599c <argp_usage@@Base+0x3da0>
  419270:	cbnz	x0, 4190d4 <wcrtomb@plt+0x142b4>
  419274:	b	419350 <wcrtomb@plt+0x14530>
  419278:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41927c:	mov	w2, #0x5                   	// #5
  419280:	mov	x0, xzr
  419284:	add	x1, x1, #0x58d
  419288:	bl	404bf0 <dcgettext@plt>
  41928c:	ldr	x8, [sp, #24]
  419290:	ldr	x6, [x8, #8]
  419294:	mov	x2, x0
  419298:	mov	w0, wzr
  41929c:	mov	w1, wzr
  4192a0:	mov	x3, x19
  4192a4:	mov	w4, w23
  4192a8:	mov	x5, x21
  4192ac:	bl	4041f0 <error@plt>
  4192b0:	b	4190d0 <wcrtomb@plt+0x142b0>
  4192b4:	mov	w8, wzr
  4192b8:	tbnz	w8, #0, 4192c4 <wcrtomb@plt+0x144a4>
  4192bc:	add	x0, sp, #0x10
  4192c0:	bl	42a140 <wcrtomb@plt+0x25320>
  4192c4:	mov	x0, x20
  4192c8:	bl	404470 <fclose@plt>
  4192cc:	cbnz	w27, 41935c <wcrtomb@plt+0x1453c>
  4192d0:	ldp	x20, x19, [sp, #352]
  4192d4:	ldp	x22, x21, [sp, #336]
  4192d8:	ldp	x24, x23, [sp, #320]
  4192dc:	ldp	x26, x25, [sp, #304]
  4192e0:	ldp	x28, x27, [sp, #288]
  4192e4:	ldp	x29, x30, [sp, #272]
  4192e8:	add	sp, sp, #0x170
  4192ec:	ret
  4192f0:	mov	w27, wzr
  4192f4:	mov	w8, #0x1                   	// #1
  4192f8:	tbz	w8, #0, 4192bc <wcrtomb@plt+0x1449c>
  4192fc:	b	4192c4 <wcrtomb@plt+0x144a4>
  419300:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  419304:	ldr	x8, [x8, #1008]
  419308:	cbz	x8, 419310 <wcrtomb@plt+0x144f0>
  41930c:	blr	x8
  419310:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  419314:	add	x1, x1, #0x55a
  419318:	mov	w2, #0x5                   	// #5
  41931c:	mov	x0, xzr
  419320:	bl	404bf0 <dcgettext@plt>
  419324:	mov	x20, x0
  419328:	add	x0, sp, #0x10
  41932c:	bl	42a218 <wcrtomb@plt+0x253f8>
  419330:	mov	x5, x0
  419334:	mov	w0, wzr
  419338:	mov	w1, wzr
  41933c:	mov	x2, x20
  419340:	mov	x3, x19
  419344:	mov	w4, w23
  419348:	bl	4041f0 <error@plt>
  41934c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  419350:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  419354:	mov	x0, x19
  419358:	bl	428180 <wcrtomb@plt+0x23360>
  41935c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  419360:	ldr	x8, [x8, #1008]
  419364:	cbz	x8, 41936c <wcrtomb@plt+0x1454c>
  419368:	blr	x8
  41936c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  419370:	add	x1, x1, #0x5aa
  419374:	mov	w2, #0x5                   	// #5
  419378:	mov	x0, xzr
  41937c:	bl	404bf0 <dcgettext@plt>
  419380:	mov	x2, x0
  419384:	mov	w0, wzr
  419388:	mov	w1, wzr
  41938c:	bl	4041f0 <error@plt>
  419390:	bl	40dda4 <wcrtomb@plt+0x8f84>
  419394:	stp	x29, x30, [sp, #-16]!
  419398:	mov	x29, sp
  41939c:	bl	404630 <getpwnam@plt>
  4193a0:	cbz	x0, 4193b0 <wcrtomb@plt+0x14590>
  4193a4:	ldr	w0, [x0, #16]
  4193a8:	ldp	x29, x30, [sp], #16
  4193ac:	ret
  4193b0:	mov	x0, #0xffffffffffffffff    	// #-1
  4193b4:	ldp	x29, x30, [sp], #16
  4193b8:	ret
  4193bc:	sub	sp, sp, #0x40
  4193c0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4193c4:	ldr	x8, [x8, #2568]
  4193c8:	stp	x20, x19, [sp, #48]
  4193cc:	mov	x19, x2
  4193d0:	mov	x20, x1
  4193d4:	stp	x29, x30, [sp, #32]
  4193d8:	add	x29, sp, #0x20
  4193dc:	cbz	x8, 419410 <wcrtomb@plt+0x145f0>
  4193e0:	mov	w9, w0
  4193e4:	add	x1, sp, #0x8
  4193e8:	mov	x0, x8
  4193ec:	str	x9, [sp, #8]
  4193f0:	bl	434e74 <argp_usage@@Base+0x3278>
  4193f4:	cbz	x0, 419410 <wcrtomb@plt+0x145f0>
  4193f8:	mov	x8, x0
  4193fc:	ldr	x9, [x8, #8]
  419400:	mov	w0, wzr
  419404:	str	w9, [x20]
  419408:	ldr	x8, [x8, #16]
  41940c:	b	419440 <wcrtomb@plt+0x14620>
  419410:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  419414:	ldr	w8, [x8, #784]
  419418:	cmn	w8, #0x1
  41941c:	b.eq	41942c <wcrtomb@plt+0x1460c>  // b.none
  419420:	mov	w0, wzr
  419424:	str	w8, [x20]
  419428:	b	419430 <wcrtomb@plt+0x14610>
  41942c:	mov	w0, #0x1                   	// #1
  419430:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  419434:	ldr	x8, [x8, #584]
  419438:	cbz	x8, 419444 <wcrtomb@plt+0x14624>
  41943c:	mov	w0, wzr
  419440:	str	x8, [x19]
  419444:	ldp	x20, x19, [sp, #48]
  419448:	ldp	x29, x30, [sp, #32]
  41944c:	add	sp, sp, #0x40
  419450:	ret
  419454:	stp	x29, x30, [sp, #-16]!
  419458:	mov	x1, x0
  41945c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  419460:	adrp	x2, 419000 <wcrtomb@plt+0x141e0>
  419464:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x14da0>
  419468:	add	x0, x0, #0xa10
  41946c:	add	x2, x2, #0x484
  419470:	add	x3, x3, #0x988
  419474:	mov	x29, sp
  419478:	bl	419024 <wcrtomb@plt+0x14204>
  41947c:	ldp	x29, x30, [sp], #16
  419480:	ret
  419484:	stp	x29, x30, [sp, #-16]!
  419488:	mov	x29, sp
  41948c:	bl	4042c0 <getgrnam@plt>
  419490:	cbz	x0, 4194a0 <wcrtomb@plt+0x14680>
  419494:	ldr	w0, [x0, #16]
  419498:	ldp	x29, x30, [sp], #16
  41949c:	ret
  4194a0:	mov	x0, #0xffffffffffffffff    	// #-1
  4194a4:	ldp	x29, x30, [sp], #16
  4194a8:	ret
  4194ac:	sub	sp, sp, #0x40
  4194b0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4194b4:	ldr	x8, [x8, #2576]
  4194b8:	stp	x20, x19, [sp, #48]
  4194bc:	mov	x19, x2
  4194c0:	mov	x20, x1
  4194c4:	stp	x29, x30, [sp, #32]
  4194c8:	add	x29, sp, #0x20
  4194cc:	cbz	x8, 419500 <wcrtomb@plt+0x146e0>
  4194d0:	mov	w9, w0
  4194d4:	add	x1, sp, #0x8
  4194d8:	mov	x0, x8
  4194dc:	str	x9, [sp, #8]
  4194e0:	bl	434e74 <argp_usage@@Base+0x3278>
  4194e4:	cbz	x0, 419500 <wcrtomb@plt+0x146e0>
  4194e8:	mov	x8, x0
  4194ec:	ldr	x9, [x8, #8]
  4194f0:	mov	w0, wzr
  4194f4:	str	w9, [x20]
  4194f8:	ldr	x8, [x8, #16]
  4194fc:	b	419530 <wcrtomb@plt+0x14710>
  419500:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  419504:	ldr	w8, [x8, #704]
  419508:	cmn	w8, #0x1
  41950c:	b.eq	41951c <wcrtomb@plt+0x146fc>  // b.none
  419510:	mov	w0, wzr
  419514:	str	w8, [x20]
  419518:	b	419520 <wcrtomb@plt+0x14700>
  41951c:	mov	w0, #0x1                   	// #1
  419520:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  419524:	ldr	x8, [x8, #528]
  419528:	cbz	x8, 419534 <wcrtomb@plt+0x14714>
  41952c:	mov	w0, wzr
  419530:	str	x8, [x19]
  419534:	ldp	x20, x19, [sp, #48]
  419538:	ldp	x29, x30, [sp, #32]
  41953c:	add	sp, sp, #0x40
  419540:	ret
  419544:	sub	sp, sp, #0x50
  419548:	stp	x29, x30, [sp, #16]
  41954c:	stp	x24, x23, [sp, #32]
  419550:	stp	x22, x21, [sp, #48]
  419554:	stp	x20, x19, [sp, #64]
  419558:	add	x29, sp, #0x10
  41955c:	mov	w21, w4
  419560:	mov	x22, x3
  419564:	mov	x20, x2
  419568:	mov	x19, x1
  41956c:	mov	x23, x0
  419570:	bl	404d00 <__errno_location@plt>
  419574:	mov	x24, x0
  419578:	str	wzr, [x0]
  41957c:	add	x1, sp, #0x8
  419580:	mov	w2, #0xa                   	// #10
  419584:	mov	x0, x19
  419588:	bl	404840 <strtoumax@plt>
  41958c:	ldr	x8, [sp, #8]
  419590:	ldrb	w9, [x8]
  419594:	cbnz	w9, 4195a0 <wcrtomb@plt+0x14780>
  419598:	ldr	w9, [x24]
  41959c:	cbz	w9, 4195f0 <wcrtomb@plt+0x147d0>
  4195a0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  4195a4:	add	x1, x1, #0x5c2
  4195a8:	mov	w2, #0x5                   	// #5
  4195ac:	mov	x0, xzr
  4195b0:	bl	404bf0 <dcgettext@plt>
  4195b4:	mov	x2, x0
  4195b8:	mov	w0, wzr
  4195bc:	mov	w1, wzr
  4195c0:	mov	x3, x22
  4195c4:	mov	w4, w21
  4195c8:	mov	x5, x20
  4195cc:	mov	x6, x19
  4195d0:	bl	4041f0 <error@plt>
  4195d4:	mov	w0, #0xffffffff            	// #-1
  4195d8:	ldp	x20, x19, [sp, #64]
  4195dc:	ldp	x22, x21, [sp, #48]
  4195e0:	ldp	x24, x23, [sp, #32]
  4195e4:	ldp	x29, x30, [sp, #16]
  4195e8:	add	sp, sp, #0x50
  4195ec:	ret
  4195f0:	mov	x8, x0
  4195f4:	lsr	x9, x0, #32
  4195f8:	cbz	x9, 419608 <wcrtomb@plt+0x147e8>
  4195fc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  419600:	add	x1, x1, #0x5d8
  419604:	b	4195a8 <wcrtomb@plt+0x14788>
  419608:	mov	w0, wzr
  41960c:	str	x8, [x23]
  419610:	b	4195d8 <wcrtomb@plt+0x147b8>
  419614:	ldr	x8, [x0]
  419618:	udiv	x9, x8, x1
  41961c:	msub	x0, x9, x1, x8
  419620:	ret
  419624:	ldr	x8, [x0]
  419628:	ldr	x9, [x1]
  41962c:	cmp	x8, x9
  419630:	cset	w0, eq  // eq = none
  419634:	ret
  419638:	ret
  41963c:	lsr	x8, x1, #63
  419640:	eor	w0, w8, #0x1
  419644:	ret
  419648:	stp	x29, x30, [sp, #-32]!
  41964c:	stp	x20, x19, [sp, #16]
  419650:	mov	w20, w0
  419654:	mov	x0, xzr
  419658:	mov	x29, sp
  41965c:	mov	x19, x1
  419660:	bl	43abbc <argp_usage@@Base+0x8fc0>
  419664:	mov	w1, w0
  419668:	mov	w0, w20
  41966c:	mov	x2, x19
  419670:	bl	43bedc <argp_usage@@Base+0xa2e0>
  419674:	ldp	x20, x19, [sp, #16]
  419678:	ldp	x29, x30, [sp], #32
  41967c:	ret
  419680:	stp	x29, x30, [sp, #-32]!
  419684:	stp	x20, x19, [sp, #16]
  419688:	mov	x19, x0
  41968c:	ldr	x0, [x0]
  419690:	mov	x29, sp
  419694:	mov	x20, x1
  419698:	bl	4049d0 <free@plt>
  41969c:	cbz	x20, 4196ac <wcrtomb@plt+0x1488c>
  4196a0:	mov	x0, x20
  4196a4:	bl	43d39c <argp_usage@@Base+0xb7a0>
  4196a8:	b	4196b0 <wcrtomb@plt+0x14890>
  4196ac:	mov	x0, xzr
  4196b0:	str	x0, [x19]
  4196b4:	ldp	x20, x19, [sp, #16]
  4196b8:	ldp	x29, x30, [sp], #32
  4196bc:	ret
  4196c0:	stp	x29, x30, [sp, #-48]!
  4196c4:	stp	x22, x21, [sp, #16]
  4196c8:	stp	x20, x19, [sp, #32]
  4196cc:	mov	x19, x0
  4196d0:	ldr	x0, [x0]
  4196d4:	mov	x29, sp
  4196d8:	mov	x21, x2
  4196dc:	mov	x20, x1
  4196e0:	bl	4049d0 <free@plt>
  4196e4:	cbz	x20, 419718 <wcrtomb@plt+0x148f8>
  4196e8:	mov	x0, x20
  4196ec:	mov	x1, x21
  4196f0:	bl	404270 <strnlen@plt>
  4196f4:	mov	x21, x0
  4196f8:	add	x0, x0, #0x1
  4196fc:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  419700:	mov	x1, x20
  419704:	mov	x2, x21
  419708:	mov	x22, x0
  41970c:	bl	404110 <memcpy@plt>
  419710:	strb	wzr, [x22, x21]
  419714:	str	x22, [x19]
  419718:	ldp	x20, x19, [sp, #32]
  41971c:	ldp	x22, x21, [sp, #16]
  419720:	ldp	x29, x30, [sp], #48
  419724:	ret
  419728:	mov	x8, x0
  41972c:	adrp	x10, 452000 <_obstack_memory_used@@Base+0x13da0>
  419730:	mov	w0, #0x1                   	// #1
  419734:	mov	w9, #0x5c                  	// #92
  419738:	add	x10, x10, #0x5f3
  41973c:	mov	w11, #0x7f                  	// #127
  419740:	mov	w12, #0x7                   	// #7
  419744:	mov	w13, #0x8                   	// #8
  419748:	mov	w14, #0xc                   	// #12
  41974c:	mov	w15, #0xa                   	// #10
  419750:	mov	w16, #0xd                   	// #13
  419754:	mov	w17, #0x9                   	// #9
  419758:	mov	w18, #0xb                   	// #11
  41975c:	mov	x3, x8
  419760:	b	41976c <wcrtomb@plt+0x1494c>
  419764:	strb	w3, [x1], #1
  419768:	mov	x3, x1
  41976c:	ldrb	w4, [x8]
  419770:	mov	x2, x8
  419774:	mov	x1, x3
  419778:	cmp	w4, #0x5c
  41977c:	b.eq	41979c <wcrtomb@plt+0x1497c>  // b.none
  419780:	cbz	w4, 419878 <wcrtomb@plt+0x14a58>
  419784:	add	x8, x2, #0x1
  419788:	cmp	x2, x1
  41978c:	add	x3, x1, #0x1
  419790:	b.eq	41976c <wcrtomb@plt+0x1494c>  // b.none
  419794:	strb	w4, [x1]
  419798:	b	41976c <wcrtomb@plt+0x1494c>
  41979c:	mov	x8, x2
  4197a0:	ldrb	w3, [x8, #1]!
  4197a4:	sub	w3, w3, #0x30
  4197a8:	cmp	w3, #0x46
  4197ac:	b.hi	419830 <wcrtomb@plt+0x14a10>  // b.pmore
  4197b0:	adr	x4, 4197c0 <wcrtomb@plt+0x149a0>
  4197b4:	ldrb	w5, [x10, x3]
  4197b8:	add	x4, x4, x5, lsl #2
  4197bc:	br	x4
  4197c0:	mov	x8, x2
  4197c4:	ldrb	w5, [x8, #2]!
  4197c8:	and	w4, w5, #0xf8
  4197cc:	cmp	w4, #0x30
  4197d0:	b.ne	419764 <wcrtomb@plt+0x14944>  // b.any
  4197d4:	mov	x8, x2
  4197d8:	ldrb	w4, [x8, #3]!
  4197dc:	add	w3, w5, w3, lsl #3
  4197e0:	sub	w3, w3, #0x30
  4197e4:	and	w5, w4, #0xf8
  4197e8:	cmp	w5, #0x30
  4197ec:	b.ne	419764 <wcrtomb@plt+0x14944>  // b.any
  4197f0:	add	x8, x2, #0x4
  4197f4:	add	w2, w4, w3, lsl #3
  4197f8:	sub	w3, w2, #0x30
  4197fc:	b	419764 <wcrtomb@plt+0x14944>
  419800:	strb	w11, [x1], #1
  419804:	b	41986c <wcrtomb@plt+0x14a4c>
  419808:	strb	w9, [x1], #1
  41980c:	b	41986c <wcrtomb@plt+0x14a4c>
  419810:	strb	w13, [x1], #1
  419814:	b	41986c <wcrtomb@plt+0x14a4c>
  419818:	strb	w14, [x1], #1
  41981c:	b	41986c <wcrtomb@plt+0x14a4c>
  419820:	strb	w16, [x1], #1
  419824:	b	41986c <wcrtomb@plt+0x14a4c>
  419828:	strb	w17, [x1], #1
  41982c:	b	41986c <wcrtomb@plt+0x14a4c>
  419830:	mov	x3, x1
  419834:	strb	w9, [x3], #1
  419838:	ldrb	w4, [x8]
  41983c:	mov	w0, wzr
  419840:	cbz	w4, 41976c <wcrtomb@plt+0x1494c>
  419844:	mov	w0, wzr
  419848:	add	x8, x2, #0x2
  41984c:	add	x3, x1, #0x2
  419850:	strb	w4, [x1, #1]
  419854:	b	41976c <wcrtomb@plt+0x1494c>
  419858:	strb	w12, [x1], #1
  41985c:	b	41986c <wcrtomb@plt+0x14a4c>
  419860:	strb	w15, [x1], #1
  419864:	b	41986c <wcrtomb@plt+0x14a4c>
  419868:	strb	w18, [x1], #1
  41986c:	add	x8, x2, #0x2
  419870:	mov	x3, x1
  419874:	b	41976c <wcrtomb@plt+0x1494c>
  419878:	cmp	x2, x1
  41987c:	b.eq	419884 <wcrtomb@plt+0x14a64>  // b.none
  419880:	strb	wzr, [x1]
  419884:	ret
  419888:	stp	x29, x30, [sp, #-32]!
  41988c:	str	x19, [sp, #16]
  419890:	mov	x19, x0
  419894:	mov	x29, sp
  419898:	cbz	x0, 4198d4 <wcrtomb@plt+0x14ab4>
  41989c:	ldrb	w8, [x19]
  4198a0:	cbz	w8, 4198d4 <wcrtomb@plt+0x14ab4>
  4198a4:	mov	x0, x19
  4198a8:	bl	404190 <strlen@plt>
  4198ac:	add	x8, x19, x0
  4198b0:	sub	x8, x8, #0x1
  4198b4:	cmp	x8, x19
  4198b8:	b.ls	4198d4 <wcrtomb@plt+0x14ab4>  // b.plast
  4198bc:	ldrb	w9, [x8]
  4198c0:	cmp	w9, #0x2f
  4198c4:	b.ne	4198d4 <wcrtomb@plt+0x14ab4>  // b.any
  4198c8:	strb	wzr, [x8], #-1
  4198cc:	cmp	x8, x19
  4198d0:	b.hi	4198bc <wcrtomb@plt+0x14a9c>  // b.pmore
  4198d4:	mov	x0, x19
  4198d8:	ldr	x19, [sp, #16]
  4198dc:	ldp	x29, x30, [sp], #32
  4198e0:	ret
  4198e4:	ldrb	w8, [x0]
  4198e8:	mov	x9, x0
  4198ec:	cmp	w8, #0x2e
  4198f0:	mov	x8, x0
  4198f4:	b.ne	419934 <wcrtomb@plt+0x14b14>  // b.any
  4198f8:	mov	x9, x0
  4198fc:	mov	x8, x0
  419900:	ldrb	w10, [x9, #1]
  419904:	cmp	w10, #0x2f
  419908:	b.ne	419934 <wcrtomb@plt+0x14b14>  // b.any
  41990c:	add	x9, x9, #0x1
  419910:	ldrb	w10, [x9, #1]!
  419914:	cmp	w10, #0x2f
  419918:	b.eq	419910 <wcrtomb@plt+0x14af0>  // b.none
  41991c:	ldrb	w11, [x9]
  419920:	cmp	w10, #0x0
  419924:	cinc	x8, x8, eq  // eq = none
  419928:	cmp	w11, #0x2e
  41992c:	strb	w11, [x8]
  419930:	b.eq	419900 <wcrtomb@plt+0x14ae0>  // b.none
  419934:	mov	w10, #0x1                   	// #1
  419938:	ldrb	w12, [x9], #1
  41993c:	mov	x11, x8
  419940:	cmp	w12, #0x2f
  419944:	strb	w12, [x8], #1
  419948:	b.eq	419960 <wcrtomb@plt+0x14b40>  // b.none
  41994c:	cbnz	w12, 419938 <wcrtomb@plt+0x14b18>
  419950:	b	419984 <wcrtomb@plt+0x14b64>
  419954:	tst	w11, #0x1
  419958:	cinc	x11, x10, ne  // ne = any
  41995c:	add	x9, x9, x11
  419960:	mov	x11, x9
  419964:	ldrb	w12, [x11], #1
  419968:	cmp	w12, #0x2e
  41996c:	csel	x11, x9, x11, ne  // ne = any
  419970:	ldrb	w12, [x11]
  419974:	cset	w11, eq  // eq = none
  419978:	cmp	w12, #0x2f
  41997c:	b.eq	419954 <wcrtomb@plt+0x14b34>  // b.none
  419980:	b	419938 <wcrtomb@plt+0x14b18>
  419984:	sub	x9, x8, x0
  419988:	cmp	x9, #0x3
  41998c:	b.lt	4199dc <wcrtomb@plt+0x14bbc>  // b.tstop
  419990:	ldurb	w9, [x11, #-1]
  419994:	cmp	w9, #0x2e
  419998:	b.ne	4199ac <wcrtomb@plt+0x14b8c>  // b.any
  41999c:	ldurb	w9, [x11, #-2]
  4199a0:	cmp	w9, #0x2f
  4199a4:	csetm	x9, eq  // eq = none
  4199a8:	b	4199b0 <wcrtomb@plt+0x14b90>
  4199ac:	mov	x9, xzr
  4199b0:	add	x8, x8, x9
  4199b4:	sub	x9, x8, x0
  4199b8:	cmp	x9, #0x3
  4199bc:	b.lt	4199d0 <wcrtomb@plt+0x14bb0>  // b.tstop
  4199c0:	ldurb	w9, [x8, #-2]
  4199c4:	cmp	w9, #0x2f
  4199c8:	csetm	x9, eq  // eq = none
  4199cc:	b	4199d4 <wcrtomb@plt+0x14bb4>
  4199d0:	mov	x9, xzr
  4199d4:	add	x8, x8, x9
  4199d8:	sturb	wzr, [x8, #-1]
  4199dc:	ret
  4199e0:	stp	x29, x30, [sp, #-48]!
  4199e4:	stp	x22, x21, [sp, #16]
  4199e8:	stp	x20, x19, [sp, #32]
  4199ec:	ldrb	w8, [x1]
  4199f0:	mov	x19, x1
  4199f4:	mov	x29, sp
  4199f8:	cmp	w8, #0x2f
  4199fc:	b.ne	419a30 <wcrtomb@plt+0x14c10>  // b.any
  419a00:	mov	x20, xzr
  419a04:	cbnz	x20, 419a14 <wcrtomb@plt+0x14bf4>
  419a08:	mov	x0, x19
  419a0c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  419a10:	mov	x20, x0
  419a14:	mov	x0, x20
  419a18:	bl	4198e4 <wcrtomb@plt+0x14ac4>
  419a1c:	mov	x0, x20
  419a20:	ldp	x20, x19, [sp, #32]
  419a24:	ldp	x22, x21, [sp, #16]
  419a28:	ldp	x29, x30, [sp], #48
  419a2c:	ret
  419a30:	bl	419a94 <wcrtomb@plt+0x14c74>
  419a34:	cbz	x0, 419a80 <wcrtomb@plt+0x14c60>
  419a38:	mov	x21, x0
  419a3c:	bl	404190 <strlen@plt>
  419a40:	mov	x22, x0
  419a44:	mov	x0, x19
  419a48:	bl	404190 <strlen@plt>
  419a4c:	add	x8, x22, x0
  419a50:	add	x0, x8, #0x2
  419a54:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  419a58:	mov	x1, x21
  419a5c:	mov	x20, x0
  419a60:	bl	404b20 <strcpy@plt>
  419a64:	add	x0, x0, x22
  419a68:	mov	w8, #0x2f                  	// #47
  419a6c:	strb	w8, [x0], #1
  419a70:	mov	x1, x19
  419a74:	bl	404b20 <strcpy@plt>
  419a78:	cbnz	x20, 419a14 <wcrtomb@plt+0x14bf4>
  419a7c:	b	419a08 <wcrtomb@plt+0x14be8>
  419a80:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  419a84:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  419a88:	add	x0, x0, #0x662
  419a8c:	add	x1, x1, #0x232
  419a90:	bl	427e04 <wcrtomb@plt+0x22fe4>
  419a94:	stp	x29, x30, [sp, #-32]!
  419a98:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  419a9c:	ldr	x8, [x8, #2616]
  419aa0:	str	x19, [sp, #16]
  419aa4:	mov	x29, sp
  419aa8:	cbz	x8, 419abc <wcrtomb@plt+0x14c9c>
  419aac:	mov	w9, #0x18                  	// #24
  419ab0:	smaddl	x8, w0, w9, x8
  419ab4:	add	x19, x8, #0x8
  419ab8:	b	419ad4 <wcrtomb@plt+0x14cb4>
  419abc:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  419ac0:	add	x19, x19, #0xa88
  419ac4:	ldr	x8, [x19]
  419ac8:	cbnz	x8, 419ad4 <wcrtomb@plt+0x14cb4>
  419acc:	bl	43d3c8 <argp_usage@@Base+0xb7cc>
  419ad0:	str	x0, [x19]
  419ad4:	ldr	x0, [x19]
  419ad8:	ldr	x19, [sp, #16]
  419adc:	ldp	x29, x30, [sp], #32
  419ae0:	ret
  419ae4:	stp	x29, x30, [sp, #-80]!
  419ae8:	stp	x26, x25, [sp, #16]
  419aec:	stp	x24, x23, [sp, #32]
  419af0:	stp	x22, x21, [sp, #48]
  419af4:	stp	x20, x19, [sp, #64]
  419af8:	ldr	x21, [x0]
  419afc:	mov	x23, x0
  419b00:	mov	x29, sp
  419b04:	mov	x19, x4
  419b08:	mov	x0, x21
  419b0c:	mov	x20, x3
  419b10:	mov	x22, x2
  419b14:	mov	x25, x1
  419b18:	bl	404190 <strlen@plt>
  419b1c:	subs	x26, x0, x22
  419b20:	b.ls	419b88 <wcrtomb@plt+0x14d68>  // b.plast
  419b24:	mov	x24, x0
  419b28:	mov	x0, x21
  419b2c:	mov	x1, x25
  419b30:	mov	x2, x22
  419b34:	bl	4046d0 <bcmp@plt>
  419b38:	cbnz	w0, 419b88 <wcrtomb@plt+0x14d68>
  419b3c:	ldrb	w8, [x21, x22]
  419b40:	cmp	w8, #0x2f
  419b44:	b.ne	419b88 <wcrtomb@plt+0x14d68>  // b.any
  419b48:	subs	x8, x19, x22
  419b4c:	b.ls	419b68 <wcrtomb@plt+0x14d48>  // b.plast
  419b50:	add	x8, x8, x24
  419b54:	add	x1, x8, #0x1
  419b58:	mov	x0, x21
  419b5c:	bl	43d21c <argp_usage@@Base+0xb620>
  419b60:	mov	x21, x0
  419b64:	str	x0, [x23]
  419b68:	add	x0, x21, x19
  419b6c:	add	x1, x21, x22
  419b70:	add	x2, x26, #0x1
  419b74:	bl	404120 <memmove@plt>
  419b78:	mov	x0, x21
  419b7c:	mov	x1, x20
  419b80:	mov	x2, x19
  419b84:	bl	404110 <memcpy@plt>
  419b88:	ldp	x20, x19, [sp, #64]
  419b8c:	ldp	x22, x21, [sp, #48]
  419b90:	ldp	x24, x23, [sp, #32]
  419b94:	ldp	x26, x25, [sp, #16]
  419b98:	ldp	x29, x30, [sp], #80
  419b9c:	ret
  419ba0:	stp	x29, x30, [sp, #-16]!
  419ba4:	cmp	x0, x2
  419ba8:	mov	x1, x3
  419bac:	mov	x29, sp
  419bb0:	b.ls	419bc0 <wcrtomb@plt+0x14da0>  // b.plast
  419bb4:	bl	4363ec <argp_usage@@Base+0x47f0>
  419bb8:	ldp	x29, x30, [sp], #16
  419bbc:	ret
  419bc0:	bl	43650c <argp_usage@@Base+0x4910>
  419bc4:	ldp	x29, x30, [sp], #16
  419bc8:	ret
  419bcc:	stp	x29, x30, [sp, #-64]!
  419bd0:	str	x23, [sp, #16]
  419bd4:	stp	x22, x21, [sp, #32]
  419bd8:	stp	x20, x19, [sp, #48]
  419bdc:	mov	x29, sp
  419be0:	mov	x19, x3
  419be4:	mov	x21, x2
  419be8:	mov	x22, x1
  419bec:	mov	x23, x0
  419bf0:	bl	404d00 <__errno_location@plt>
  419bf4:	str	wzr, [x0]
  419bf8:	ldrb	w8, [x23]
  419bfc:	mov	x20, x0
  419c00:	tbnz	x19, #63, 419c50 <wcrtomb@plt+0x14e30>
  419c04:	cmp	w8, #0x2d
  419c08:	cinc	x8, x23, eq  // eq = none
  419c0c:	ldrb	w8, [x8]
  419c10:	sub	w8, w8, #0x30
  419c14:	cmp	w8, #0x9
  419c18:	b.hi	419c84 <wcrtomb@plt+0x14e64>  // b.pmore
  419c1c:	mov	w2, #0xa                   	// #10
  419c20:	mov	x0, x23
  419c24:	mov	x1, x22
  419c28:	bl	404240 <strtoimax@plt>
  419c2c:	cmp	x0, x21
  419c30:	b.lt	419c3c <wcrtomb@plt+0x14e1c>  // b.tstop
  419c34:	cmp	x0, x19
  419c38:	b.le	419c90 <wcrtomb@plt+0x14e70>
  419c3c:	mov	w8, #0x22                  	// #34
  419c40:	cmp	x0, x21
  419c44:	str	w8, [x20]
  419c48:	csel	x0, x21, x19, lt  // lt = tstop
  419c4c:	b	419c90 <wcrtomb@plt+0x14e70>
  419c50:	sub	w8, w8, #0x30
  419c54:	cmp	w8, #0x9
  419c58:	b.hi	419c84 <wcrtomb@plt+0x14e64>  // b.pmore
  419c5c:	mov	w2, #0xa                   	// #10
  419c60:	mov	x0, x23
  419c64:	mov	x1, x22
  419c68:	bl	404840 <strtoumax@plt>
  419c6c:	cmp	x0, x19
  419c70:	b.ls	419ca4 <wcrtomb@plt+0x14e84>  // b.plast
  419c74:	mov	w8, #0x22                  	// #34
  419c78:	str	w8, [x20]
  419c7c:	mov	x0, x19
  419c80:	b	419c90 <wcrtomb@plt+0x14e70>
  419c84:	mov	x0, xzr
  419c88:	mov	w8, #0x16                  	// #22
  419c8c:	str	w8, [x20]
  419c90:	ldp	x20, x19, [sp, #48]
  419c94:	ldp	x22, x21, [sp, #32]
  419c98:	ldr	x23, [sp, #16]
  419c9c:	ldp	x29, x30, [sp], #64
  419ca0:	ret
  419ca4:	bl	419638 <wcrtomb@plt+0x14818>
  419ca8:	b	419c90 <wcrtomb@plt+0x14e70>
  419cac:	cbz	w0, 419d8c <wcrtomb@plt+0x14f6c>
  419cb0:	mov	w10, #0xcccd                	// #52429
  419cb4:	mov	w11, #0x9998                	// #39320
  419cb8:	movk	w10, #0xcccc, lsl #16
  419cbc:	movk	w11, #0x1999, lsl #16
  419cc0:	madd	w12, w0, w10, w11
  419cc4:	mov	w9, #0x2e                  	// #46
  419cc8:	mov	x8, x1
  419ccc:	ror	w12, w12, #1
  419cd0:	cmp	w12, w11
  419cd4:	strb	w9, [x8], #1
  419cd8:	mov	w9, #0x9                   	// #9
  419cdc:	b.hi	419d14 <wcrtomb@plt+0x14ef4>  // b.pmore
  419ce0:	mov	w12, #0x6667                	// #26215
  419ce4:	mov	w13, #0x9999                	// #39321
  419ce8:	movk	w12, #0x6666, lsl #16
  419cec:	movk	w13, #0x1999, lsl #16
  419cf0:	smull	x14, w0, w12
  419cf4:	lsr	x15, x14, #63
  419cf8:	asr	x14, x14, #34
  419cfc:	add	w0, w14, w15
  419d00:	madd	w14, w0, w10, w11
  419d04:	ror	w14, w14, #1
  419d08:	cmp	w14, w13
  419d0c:	sub	w9, w9, #0x1
  419d10:	b.cc	419cf0 <wcrtomb@plt+0x14ed0>  // b.lo, b.ul, b.last
  419d14:	mov	w10, #0x6667                	// #26215
  419d18:	movk	w10, #0x6666, lsl #16
  419d1c:	smull	x13, w0, w10
  419d20:	lsr	x14, x13, #63
  419d24:	lsr	x13, x13, #34
  419d28:	mov	w11, #0xa                   	// #10
  419d2c:	add	w13, w13, w14
  419d30:	sxtw	x12, w9
  419d34:	msub	w13, w13, w11, w0
  419d38:	strb	wzr, [x8, x12]
  419d3c:	add	w13, w13, #0x30
  419d40:	sub	x12, x12, #0x1
  419d44:	strb	w13, [x8, x12]
  419d48:	cbz	w12, 419d88 <wcrtomb@plt+0x14f68>
  419d4c:	sub	w8, w9, #0x1
  419d50:	add	x9, x1, w8, sxtw
  419d54:	smull	x12, w0, w10
  419d58:	lsr	x13, x12, #63
  419d5c:	asr	x12, x12, #34
  419d60:	add	w0, w12, w13
  419d64:	smull	x12, w0, w10
  419d68:	lsr	x13, x12, #63
  419d6c:	lsr	x12, x12, #34
  419d70:	add	w12, w12, w13
  419d74:	msub	w12, w12, w11, w0
  419d78:	add	w12, w12, #0x30
  419d7c:	subs	w8, w8, #0x1
  419d80:	strb	w12, [x9], #-1
  419d84:	b.ne	419d54 <wcrtomb@plt+0x14f34>  // b.any
  419d88:	ret
  419d8c:	strb	wzr, [x1]
  419d90:	ret
  419d94:	stp	x29, x30, [sp, #-48]!
  419d98:	mov	w8, #0xc9ff                	// #51711
  419d9c:	movk	w8, #0x3b9a, lsl #16
  419da0:	cmp	w1, w8
  419da4:	csel	w9, wzr, w1, hi  // hi = pmore
  419da8:	cmp	w9, #0x0
  419dac:	cset	w10, ne  // ne = any
  419db0:	cmp	x0, #0x0
  419db4:	cset	w11, lt  // lt = tstop
  419db8:	and	w12, w11, w10
  419dbc:	add	x12, x0, x12
  419dc0:	stp	x22, x21, [sp, #16]
  419dc4:	mov	x22, x0
  419dc8:	sub	w8, w8, w9
  419dcc:	cneg	x0, x12, lt  // lt = tstop
  419dd0:	tst	w11, w10
  419dd4:	add	x1, x2, #0x1
  419dd8:	stp	x20, x19, [sp, #32]
  419ddc:	mov	x29, sp
  419de0:	mov	x19, x2
  419de4:	csinc	w20, w9, w8, eq  // eq = none
  419de8:	bl	43650c <argp_usage@@Base+0x4910>
  419dec:	mov	x21, x0
  419df0:	tbz	x22, #63, 419dfc <wcrtomb@plt+0x14fdc>
  419df4:	mov	w8, #0x2d                  	// #45
  419df8:	strb	w8, [x21, #-1]!
  419dfc:	add	x1, x19, #0x15
  419e00:	mov	w0, w20
  419e04:	bl	419cac <wcrtomb@plt+0x14e8c>
  419e08:	mov	x0, x21
  419e0c:	ldp	x20, x19, [sp, #32]
  419e10:	ldp	x22, x21, [sp, #16]
  419e14:	ldp	x29, x30, [sp], #48
  419e18:	ret
  419e1c:	stp	x29, x30, [sp, #-64]!
  419e20:	str	x23, [sp, #16]
  419e24:	stp	x22, x21, [sp, #32]
  419e28:	stp	x20, x19, [sp, #48]
  419e2c:	mov	x8, x0
  419e30:	ldrb	w23, [x8], #1
  419e34:	mov	x29, sp
  419e38:	mov	w22, w2
  419e3c:	mov	x19, x1
  419e40:	cmp	w23, #0x2d
  419e44:	csel	x8, x0, x8, ne  // ne = any
  419e48:	ldrb	w8, [x8]
  419e4c:	mov	x20, x0
  419e50:	sub	w21, w8, #0x30
  419e54:	bl	404d00 <__errno_location@plt>
  419e58:	cmp	w21, #0xa
  419e5c:	mov	x21, x0
  419e60:	b.cs	419e8c <wcrtomb@plt+0x1506c>  // b.hs, b.nlast
  419e64:	cmp	w23, #0x2d
  419e68:	mov	w2, #0xa                   	// #10
  419e6c:	mov	x0, x20
  419e70:	mov	x1, x19
  419e74:	str	wzr, [x21]
  419e78:	b.ne	419ea0 <wcrtomb@plt+0x15080>  // b.any
  419e7c:	bl	404240 <strtoimax@plt>
  419e80:	ldr	x20, [x19]
  419e84:	tbnz	w22, #0, 419eb0 <wcrtomb@plt+0x15090>
  419e88:	b	419f28 <wcrtomb@plt+0x15108>
  419e8c:	mov	w8, #0x16                  	// #22
  419e90:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  419e94:	str	w8, [x21]
  419e98:	mov	x1, #0xffffffffffffffff    	// #-1
  419e9c:	b	419f3c <wcrtomb@plt+0x1511c>
  419ea0:	bl	404840 <strtoumax@plt>
  419ea4:	tbnz	x0, #63, 419f14 <wcrtomb@plt+0x150f4>
  419ea8:	ldr	x20, [x19]
  419eac:	tbz	w22, #0, 419f28 <wcrtomb@plt+0x15108>
  419eb0:	ldrb	w8, [x20]
  419eb4:	cmp	w8, #0x2e
  419eb8:	b.ne	419f28 <wcrtomb@plt+0x15108>  // b.any
  419ebc:	ldrb	w12, [x20, #1]!
  419ec0:	sub	w13, w12, #0x30
  419ec4:	cmp	w13, #0x9
  419ec8:	b.hi	419f54 <wcrtomb@plt+0x15134>  // b.pmore
  419ecc:	mov	w9, wzr
  419ed0:	mov	w10, wzr
  419ed4:	mov	w8, wzr
  419ed8:	mov	w11, #0xa                   	// #10
  419edc:	b	419f00 <wcrtomb@plt+0x150e0>
  419ee0:	and	w12, w12, #0xff
  419ee4:	cmp	w12, #0x30
  419ee8:	cset	w12, ne  // ne = any
  419eec:	orr	w9, w9, w12
  419ef0:	ldrb	w12, [x20, #1]!
  419ef4:	sub	w13, w12, #0x30
  419ef8:	cmp	w13, #0xa
  419efc:	b.cs	419f60 <wcrtomb@plt+0x15140>  // b.hs, b.nlast
  419f00:	cmp	w10, #0x8
  419f04:	b.gt	419ee0 <wcrtomb@plt+0x150c0>
  419f08:	add	w10, w10, #0x1
  419f0c:	madd	w8, w8, w11, w13
  419f10:	b	419ef0 <wcrtomb@plt+0x150d0>
  419f14:	mov	w8, #0x22                  	// #34
  419f18:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  419f1c:	str	w8, [x21]
  419f20:	ldr	x20, [x19]
  419f24:	tbnz	w22, #0, 419eb0 <wcrtomb@plt+0x15090>
  419f28:	mov	w8, wzr
  419f2c:	ldr	w9, [x21]
  419f30:	cmp	w9, #0x22
  419f34:	csinv	w8, w8, wzr, ne  // ne = any
  419f38:	sxtw	x1, w8
  419f3c:	str	x20, [x19]
  419f40:	ldp	x20, x19, [sp, #48]
  419f44:	ldp	x22, x21, [sp, #32]
  419f48:	ldr	x23, [sp, #16]
  419f4c:	ldp	x29, x30, [sp], #64
  419f50:	ret
  419f54:	mov	w8, wzr
  419f58:	mov	w10, wzr
  419f5c:	mov	w9, wzr
  419f60:	cmp	w10, #0x8
  419f64:	b.gt	419f80 <wcrtomb@plt+0x15160>
  419f68:	sub	w10, w10, #0x1
  419f6c:	add	w8, w8, w8, lsl #2
  419f70:	add	w10, w10, #0x1
  419f74:	cmp	w10, #0x8
  419f78:	lsl	w8, w8, #1
  419f7c:	b.lt	419f6c <wcrtomb@plt+0x1514c>  // b.tstop
  419f80:	cmp	w23, #0x2d
  419f84:	b.ne	419f2c <wcrtomb@plt+0x1510c>  // b.any
  419f88:	and	w9, w9, #0x1
  419f8c:	adds	w8, w8, w9
  419f90:	b.eq	419f2c <wcrtomb@plt+0x1510c>  // b.none
  419f94:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  419f98:	cmp	x0, x9
  419f9c:	b.ne	419fac <wcrtomb@plt+0x1518c>  // b.any
  419fa0:	mov	w8, #0xffffffff            	// #-1
  419fa4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  419fa8:	b	419f2c <wcrtomb@plt+0x1510c>
  419fac:	mov	w9, #0xca00                	// #51712
  419fb0:	movk	w9, #0x3b9a, lsl #16
  419fb4:	sub	x0, x0, #0x1
  419fb8:	sub	w8, w9, w8
  419fbc:	b	419f2c <wcrtomb@plt+0x1510c>
  419fc0:	ldrb	w8, [x0]
  419fc4:	cmp	w8, #0x2f
  419fc8:	b.ne	41a010 <wcrtomb@plt+0x151f0>  // b.any
  419fcc:	mov	w8, #0x2                   	// #2
  419fd0:	mov	x10, x0
  419fd4:	ldrb	w9, [x0, #1]!
  419fd8:	cmp	w9, #0x2f
  419fdc:	b.eq	419fd0 <wcrtomb@plt+0x151b0>  // b.none
  419fe0:	cmp	w9, #0x2e
  419fe4:	b.ne	41a004 <wcrtomb@plt+0x151e4>  // b.any
  419fe8:	ldrb	w11, [x10, #2]
  419fec:	cmp	w11, #0x2e
  419ff0:	cinc	x11, x8, eq  // eq = none
  419ff4:	add	x0, x10, x11
  419ff8:	ldrb	w10, [x0]
  419ffc:	cmp	w10, #0x2f
  41a000:	b.eq	419fd0 <wcrtomb@plt+0x151b0>  // b.none
  41a004:	cmp	w9, #0x0
  41a008:	cset	w0, eq  // eq = none
  41a00c:	ret
  41a010:	ldrb	w8, [x0]
  41a014:	cmp	w8, #0x2e
  41a018:	b.ne	41a03c <wcrtomb@plt+0x1521c>  // b.any
  41a01c:	ldrb	w9, [x0, #1]
  41a020:	cmp	w9, #0x2f
  41a024:	b.ne	41a044 <wcrtomb@plt+0x15224>  // b.any
  41a028:	add	x0, x0, #0x1
  41a02c:	ldrb	w8, [x0, #1]!
  41a030:	cmp	w8, #0x2f
  41a034:	b.eq	41a02c <wcrtomb@plt+0x1520c>  // b.none
  41a038:	b	41a010 <wcrtomb@plt+0x151f0>
  41a03c:	cbz	w8, 41a060 <wcrtomb@plt+0x15240>
  41a040:	b	41a068 <wcrtomb@plt+0x15248>
  41a044:	cbz	w8, 41a060 <wcrtomb@plt+0x15240>
  41a048:	cmp	w8, #0x2e
  41a04c:	b.ne	41a068 <wcrtomb@plt+0x15248>  // b.any
  41a050:	ldrb	w8, [x0, #1]
  41a054:	cmp	w8, #0x0
  41a058:	cset	w0, eq  // eq = none
  41a05c:	ret
  41a060:	mov	w0, #0x1                   	// #1
  41a064:	ret
  41a068:	mov	w0, wzr
  41a06c:	ret
  41a070:	stp	x29, x30, [sp, #-80]!
  41a074:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41a078:	ldr	w8, [x8, #2240]
  41a07c:	stp	x20, x19, [sp, #64]
  41a080:	mov	x19, x0
  41a084:	stp	x22, x21, [sp, #48]
  41a088:	mov	w21, w1
  41a08c:	mov	w0, w8
  41a090:	mov	x1, x19
  41a094:	mov	w2, wzr
  41a098:	stp	x26, x25, [sp, #16]
  41a09c:	stp	x24, x23, [sp, #32]
  41a0a0:	mov	x29, sp
  41a0a4:	bl	404320 <unlinkat@plt>
  41a0a8:	cbz	w0, 41a190 <wcrtomb@plt+0x15370>
  41a0ac:	bl	404d00 <__errno_location@plt>
  41a0b0:	ldr	w8, [x0]
  41a0b4:	mov	x20, x0
  41a0b8:	cmp	w8, #0x15
  41a0bc:	b.eq	41a0c8 <wcrtomb@plt+0x152a8>  // b.none
  41a0c0:	cmp	w8, #0x1
  41a0c4:	b.ne	41a198 <wcrtomb@plt+0x15378>  // b.any
  41a0c8:	mov	x0, x19
  41a0cc:	bl	41a1d0 <wcrtomb@plt+0x153b0>
  41a0d0:	cbz	w0, 41a190 <wcrtomb@plt+0x15370>
  41a0d4:	ldr	w8, [x20]
  41a0d8:	cmp	w8, #0x27
  41a0dc:	b.hi	41a198 <wcrtomb@plt+0x15378>  // b.pmore
  41a0e0:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x13da0>
  41a0e4:	add	x9, x9, #0x63a
  41a0e8:	adr	x10, 41a0fc <wcrtomb@plt+0x152dc>
  41a0ec:	ldrb	w11, [x9, x8]
  41a0f0:	add	x10, x10, x11, lsl #2
  41a0f4:	mov	w0, wzr
  41a0f8:	br	x10
  41a0fc:	cmp	w21, #0x2
  41a100:	b.eq	41a1b4 <wcrtomb@plt+0x15394>  // b.none
  41a104:	cmp	w21, #0x1
  41a108:	b.ne	41a198 <wcrtomb@plt+0x15378>  // b.any
  41a10c:	mov	x0, x19
  41a110:	mov	w1, wzr
  41a114:	bl	41a230 <wcrtomb@plt+0x15410>
  41a118:	cbz	x0, 41a19c <wcrtomb@plt+0x1537c>
  41a11c:	mov	x21, x0
  41a120:	bl	404190 <strlen@plt>
  41a124:	cbz	x0, 41a174 <wcrtomb@plt+0x15354>
  41a128:	mov	x22, x0
  41a12c:	mov	x23, x21
  41a130:	mov	x0, x19
  41a134:	mov	x1, x23
  41a138:	bl	41c5e0 <wcrtomb@plt+0x177c0>
  41a13c:	mov	w1, #0x1                   	// #1
  41a140:	mov	x24, x0
  41a144:	bl	41a070 <wcrtomb@plt+0x15250>
  41a148:	ldr	w26, [x20]
  41a14c:	mov	w25, w0
  41a150:	mov	x0, x24
  41a154:	bl	4049d0 <free@plt>
  41a158:	cbz	w25, 41a1bc <wcrtomb@plt+0x1539c>
  41a15c:	add	x8, x22, x23
  41a160:	add	x23, x8, #0x1
  41a164:	mov	x0, x23
  41a168:	bl	404190 <strlen@plt>
  41a16c:	mov	x22, x0
  41a170:	cbnz	x0, 41a130 <wcrtomb@plt+0x15310>
  41a174:	mov	x0, x21
  41a178:	bl	4049d0 <free@plt>
  41a17c:	mov	x0, x19
  41a180:	bl	41a1d0 <wcrtomb@plt+0x153b0>
  41a184:	cmp	w0, #0x0
  41a188:	cset	w0, eq  // eq = none
  41a18c:	b	41a19c <wcrtomb@plt+0x1537c>
  41a190:	mov	w0, #0x1                   	// #1
  41a194:	b	41a19c <wcrtomb@plt+0x1537c>
  41a198:	mov	w0, wzr
  41a19c:	ldp	x20, x19, [sp, #64]
  41a1a0:	ldp	x22, x21, [sp, #48]
  41a1a4:	ldp	x24, x23, [sp, #32]
  41a1a8:	ldp	x26, x25, [sp, #16]
  41a1ac:	ldp	x29, x30, [sp], #80
  41a1b0:	ret
  41a1b4:	mov	w0, #0xffffffff            	// #-1
  41a1b8:	b	41a19c <wcrtomb@plt+0x1537c>
  41a1bc:	mov	x0, x21
  41a1c0:	bl	4049d0 <free@plt>
  41a1c4:	mov	w0, wzr
  41a1c8:	str	w26, [x20]
  41a1cc:	b	41a19c <wcrtomb@plt+0x1537c>
  41a1d0:	stp	x29, x30, [sp, #-32]!
  41a1d4:	str	x19, [sp, #16]
  41a1d8:	mov	x29, sp
  41a1dc:	mov	x19, x0
  41a1e0:	bl	419fc0 <wcrtomb@plt+0x151a0>
  41a1e4:	tbz	w0, #0, 41a1f8 <wcrtomb@plt+0x153d8>
  41a1e8:	bl	404d00 <__errno_location@plt>
  41a1ec:	str	wzr, [x0]
  41a1f0:	mov	w0, #0xffffffff            	// #-1
  41a1f4:	b	41a224 <wcrtomb@plt+0x15404>
  41a1f8:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41a1fc:	ldr	w0, [x8, #2240]
  41a200:	mov	w2, #0x200                 	// #512
  41a204:	mov	x1, x19
  41a208:	bl	404320 <unlinkat@plt>
  41a20c:	cbz	w0, 41a218 <wcrtomb@plt+0x153f8>
  41a210:	mov	w0, #0xffffffff            	// #-1
  41a214:	b	41a224 <wcrtomb@plt+0x15404>
  41a218:	mov	x0, x19
  41a21c:	bl	40e608 <wcrtomb@plt+0x97e8>
  41a220:	mov	w0, wzr
  41a224:	ldr	x19, [sp, #16]
  41a228:	ldp	x29, x30, [sp], #32
  41a22c:	ret
  41a230:	stp	x29, x30, [sp, #-48]!
  41a234:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41a238:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41a23c:	ldr	w9, [x9, #708]
  41a240:	stp	x20, x19, [sp, #32]
  41a244:	mov	x19, x0
  41a248:	ldr	w0, [x8, #2240]
  41a24c:	stp	x22, x21, [sp, #16]
  41a250:	mov	w21, w1
  41a254:	orr	w2, w9, #0x4000
  41a258:	mov	x1, x19
  41a25c:	mov	x29, sp
  41a260:	bl	404ce0 <openat@plt>
  41a264:	mov	w20, w0
  41a268:	tbnz	w0, #31, 41a2bc <wcrtomb@plt+0x1549c>
  41a26c:	mov	w0, w20
  41a270:	bl	404820 <fdopendir@plt>
  41a274:	mov	x22, x0
  41a278:	cbz	x0, 41a29c <wcrtomb@plt+0x1547c>
  41a27c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a280:	ldr	w1, [x8, #520]
  41a284:	mov	x0, x22
  41a288:	bl	43c940 <argp_usage@@Base+0xad44>
  41a28c:	cbz	x0, 41a29c <wcrtomb@plt+0x1547c>
  41a290:	mov	x21, x0
  41a294:	cbnz	x22, 41a2ac <wcrtomb@plt+0x1548c>
  41a298:	b	41a2ec <wcrtomb@plt+0x154cc>
  41a29c:	mov	x0, x19
  41a2a0:	bl	42844c <wcrtomb@plt+0x2362c>
  41a2a4:	mov	x21, xzr
  41a2a8:	cbz	x22, 41a2ec <wcrtomb@plt+0x154cc>
  41a2ac:	mov	x0, x22
  41a2b0:	bl	404790 <closedir@plt>
  41a2b4:	cbnz	w0, 41a2fc <wcrtomb@plt+0x154dc>
  41a2b8:	b	41a304 <wcrtomb@plt+0x154e4>
  41a2bc:	cbnz	w21, 41a2d8 <wcrtomb@plt+0x154b8>
  41a2c0:	bl	404d00 <__errno_location@plt>
  41a2c4:	ldr	w8, [x0]
  41a2c8:	cmp	w8, #0x2
  41a2cc:	b.ne	41a2d8 <wcrtomb@plt+0x154b8>  // b.any
  41a2d0:	mov	x21, xzr
  41a2d4:	b	41a304 <wcrtomb@plt+0x154e4>
  41a2d8:	mov	x0, x19
  41a2dc:	bl	428160 <wcrtomb@plt+0x23340>
  41a2e0:	mov	x21, xzr
  41a2e4:	mov	x22, xzr
  41a2e8:	cbnz	x22, 41a2ac <wcrtomb@plt+0x1548c>
  41a2ec:	tbnz	w20, #31, 41a304 <wcrtomb@plt+0x154e4>
  41a2f0:	mov	w0, w20
  41a2f4:	bl	4047c0 <close@plt>
  41a2f8:	cbz	w0, 41a304 <wcrtomb@plt+0x154e4>
  41a2fc:	mov	x0, x19
  41a300:	bl	42844c <wcrtomb@plt+0x2362c>
  41a304:	mov	x0, x21
  41a308:	ldp	x20, x19, [sp, #32]
  41a30c:	ldp	x22, x21, [sp, #16]
  41a310:	ldp	x29, x30, [sp], #48
  41a314:	ret
  41a318:	sub	sp, sp, #0xb0
  41a31c:	stp	x20, x19, [sp, #160]
  41a320:	mov	x20, x0
  41a324:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a328:	stp	x22, x21, [sp, #144]
  41a32c:	mov	w21, w1
  41a330:	add	x0, x0, #0xa18
  41a334:	mov	x1, x20
  41a338:	stp	x29, x30, [sp, #128]
  41a33c:	add	x29, sp, #0x80
  41a340:	bl	419680 <wcrtomb@plt+0x14860>
  41a344:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a348:	add	x19, x19, #0xa20
  41a34c:	mov	x0, x19
  41a350:	mov	x1, xzr
  41a354:	bl	419680 <wcrtomb@plt+0x14860>
  41a358:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a35c:	ldrb	w8, [x8, #1016]
  41a360:	cbnz	w8, 41a394 <wcrtomb@plt+0x15574>
  41a364:	tbz	w21, #0, 41a394 <wcrtomb@plt+0x15574>
  41a368:	mov	w1, #0x3a                  	// #58
  41a36c:	mov	x0, x20
  41a370:	bl	404a70 <strchr@plt>
  41a374:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a378:	subs	x2, x0, x20
  41a37c:	str	x0, [x8, #1024]
  41a380:	b.ls	41a394 <wcrtomb@plt+0x15574>  // b.plast
  41a384:	mov	w1, #0x2f                  	// #47
  41a388:	mov	x0, x20
  41a38c:	bl	404b70 <memchr@plt>
  41a390:	cbz	x0, 41a50c <wcrtomb@plt+0x156ec>
  41a394:	mov	x1, sp
  41a398:	mov	x0, x20
  41a39c:	bl	41a52c <wcrtomb@plt+0x1570c>
  41a3a0:	cbz	w0, 41a3c4 <wcrtomb@plt+0x155a4>
  41a3a4:	bl	404d00 <__errno_location@plt>
  41a3a8:	ldr	w8, [x0]
  41a3ac:	cmp	w8, #0x2
  41a3b0:	b.eq	41a50c <wcrtomb@plt+0x156ec>  // b.none
  41a3b4:	mov	x0, x20
  41a3b8:	bl	4286a4 <wcrtomb@plt+0x23884>
  41a3bc:	mov	w19, wzr
  41a3c0:	b	41a510 <wcrtomb@plt+0x156f0>
  41a3c4:	ldr	w8, [sp, #16]
  41a3c8:	and	w8, w8, #0xf000
  41a3cc:	cmp	w8, #0x4, lsl #12
  41a3d0:	b.eq	41a50c <wcrtomb@plt+0x156ec>  // b.none
  41a3d4:	tbz	w21, #0, 41a3e4 <wcrtomb@plt+0x155c4>
  41a3d8:	orr	w8, w8, #0x4000
  41a3dc:	cmp	w8, #0x6, lsl #12
  41a3e0:	b.eq	41a50c <wcrtomb@plt+0x156ec>  // b.none
  41a3e4:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41a3e8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a3ec:	ldr	w0, [x21, #2240]
  41a3f0:	ldr	w2, [x8, #728]
  41a3f4:	mov	x1, x20
  41a3f8:	bl	4323bc <argp_usage@@Base+0x7c0>
  41a3fc:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a400:	str	x0, [x22, #2592]
  41a404:	cbz	x0, 41a528 <wcrtomb@plt+0x15708>
  41a408:	mov	x3, x0
  41a40c:	ldr	w0, [x21, #2240]
  41a410:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a414:	ldr	x1, [x21, #2584]
  41a418:	mov	w2, w0
  41a41c:	bl	404a20 <renameat@plt>
  41a420:	cbz	w0, 41a4a4 <wcrtomb@plt+0x15684>
  41a424:	bl	404d00 <__errno_location@plt>
  41a428:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a42c:	ldr	x8, [x8, #1008]
  41a430:	ldr	w20, [x0]
  41a434:	cbz	x8, 41a43c <wcrtomb@plt+0x1561c>
  41a438:	blr	x8
  41a43c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41a440:	add	x1, x1, #0x67c
  41a444:	mov	w2, #0x5                   	// #5
  41a448:	mov	x0, xzr
  41a44c:	bl	404bf0 <dcgettext@plt>
  41a450:	ldr	x8, [x21, #2584]
  41a454:	mov	x21, x0
  41a458:	mov	x0, x8
  41a45c:	bl	43beac <argp_usage@@Base+0xa2b0>
  41a460:	ldr	x1, [x19]
  41a464:	mov	x22, x0
  41a468:	mov	w0, #0x1                   	// #1
  41a46c:	bl	43c044 <argp_usage@@Base+0xa448>
  41a470:	mov	x4, x0
  41a474:	mov	w0, wzr
  41a478:	mov	w1, w20
  41a47c:	mov	x2, x21
  41a480:	mov	x3, x22
  41a484:	bl	4041f0 <error@plt>
  41a488:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a48c:	mov	w9, #0x2                   	// #2
  41a490:	mov	x0, x19
  41a494:	mov	x1, xzr
  41a498:	str	w9, [x8, #3456]
  41a49c:	bl	419680 <wcrtomb@plt+0x14860>
  41a4a0:	b	41a3bc <wcrtomb@plt+0x1559c>
  41a4a4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a4a8:	ldr	w8, [x8, #644]
  41a4ac:	cbz	w8, 41a50c <wcrtomb@plt+0x156ec>
  41a4b0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a4b4:	ldr	x20, [x8, #3928]
  41a4b8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41a4bc:	add	x1, x1, #0x669
  41a4c0:	mov	w2, #0x5                   	// #5
  41a4c4:	mov	x0, xzr
  41a4c8:	bl	404bf0 <dcgettext@plt>
  41a4cc:	ldr	x1, [x21, #2584]
  41a4d0:	mov	x21, x0
  41a4d4:	mov	w0, wzr
  41a4d8:	bl	43c044 <argp_usage@@Base+0xa448>
  41a4dc:	ldr	x1, [x22, #2592]
  41a4e0:	mov	x22, x0
  41a4e4:	mov	w0, #0x1                   	// #1
  41a4e8:	mov	w19, #0x1                   	// #1
  41a4ec:	bl	43c044 <argp_usage@@Base+0xa448>
  41a4f0:	mov	x4, x0
  41a4f4:	mov	w1, #0x1                   	// #1
  41a4f8:	mov	x0, x20
  41a4fc:	mov	x2, x21
  41a500:	mov	x3, x22
  41a504:	bl	404910 <__fprintf_chk@plt>
  41a508:	b	41a510 <wcrtomb@plt+0x156f0>
  41a50c:	mov	w19, #0x1                   	// #1
  41a510:	mov	w0, w19
  41a514:	ldp	x20, x19, [sp, #160]
  41a518:	ldp	x22, x21, [sp, #144]
  41a51c:	ldp	x29, x30, [sp, #128]
  41a520:	add	sp, sp, #0xb0
  41a524:	ret
  41a528:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  41a52c:	stp	x29, x30, [sp, #-16]!
  41a530:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41a534:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41a538:	ldr	w8, [x8, #2240]
  41a53c:	ldr	w3, [x9, #560]
  41a540:	mov	x2, x1
  41a544:	mov	x1, x0
  41a548:	mov	w0, w8
  41a54c:	mov	x29, sp
  41a550:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  41a554:	ldp	x29, x30, [sp], #16
  41a558:	ret
  41a55c:	stp	x29, x30, [sp, #-64]!
  41a560:	stp	x22, x21, [sp, #32]
  41a564:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a568:	ldr	x1, [x22, #2592]
  41a56c:	str	x23, [sp, #16]
  41a570:	stp	x20, x19, [sp, #48]
  41a574:	mov	x29, sp
  41a578:	cbz	x1, 41a678 <wcrtomb@plt+0x15858>
  41a57c:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41a580:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a584:	ldr	w0, [x8, #2240]
  41a588:	ldr	x3, [x23, #2584]
  41a58c:	mov	w2, w0
  41a590:	bl	404a20 <renameat@plt>
  41a594:	cbz	w0, 41a608 <wcrtomb@plt+0x157e8>
  41a598:	bl	404d00 <__errno_location@plt>
  41a59c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a5a0:	ldr	x8, [x8, #1008]
  41a5a4:	ldr	w19, [x0]
  41a5a8:	cbz	x8, 41a5b0 <wcrtomb@plt+0x15790>
  41a5ac:	blr	x8
  41a5b0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41a5b4:	add	x1, x1, #0x67c
  41a5b8:	mov	w2, #0x5                   	// #5
  41a5bc:	mov	x0, xzr
  41a5c0:	bl	404bf0 <dcgettext@plt>
  41a5c4:	ldr	x8, [x22, #2592]
  41a5c8:	mov	x20, x0
  41a5cc:	mov	x0, x8
  41a5d0:	bl	43beac <argp_usage@@Base+0xa2b0>
  41a5d4:	ldr	x1, [x23, #2584]
  41a5d8:	mov	x21, x0
  41a5dc:	mov	w0, #0x1                   	// #1
  41a5e0:	bl	43c044 <argp_usage@@Base+0xa448>
  41a5e4:	mov	x4, x0
  41a5e8:	mov	w0, wzr
  41a5ec:	mov	w1, w19
  41a5f0:	mov	x2, x20
  41a5f4:	mov	x3, x21
  41a5f8:	bl	4041f0 <error@plt>
  41a5fc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a600:	mov	w9, #0x2                   	// #2
  41a604:	str	w9, [x8, #3456]
  41a608:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a60c:	ldr	w8, [x8, #644]
  41a610:	cbz	w8, 41a668 <wcrtomb@plt+0x15848>
  41a614:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a618:	ldr	x19, [x8, #3928]
  41a61c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41a620:	add	x1, x1, #0x694
  41a624:	mov	w2, #0x5                   	// #5
  41a628:	mov	x0, xzr
  41a62c:	bl	404bf0 <dcgettext@plt>
  41a630:	ldr	x1, [x22, #2592]
  41a634:	mov	x20, x0
  41a638:	mov	w0, wzr
  41a63c:	bl	43c044 <argp_usage@@Base+0xa448>
  41a640:	ldr	x1, [x23, #2584]
  41a644:	mov	x21, x0
  41a648:	mov	w0, #0x1                   	// #1
  41a64c:	bl	43c044 <argp_usage@@Base+0xa448>
  41a650:	mov	x4, x0
  41a654:	mov	w1, #0x1                   	// #1
  41a658:	mov	x0, x19
  41a65c:	mov	x2, x20
  41a660:	mov	x3, x21
  41a664:	bl	404910 <__fprintf_chk@plt>
  41a668:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a66c:	add	x0, x0, #0xa20
  41a670:	mov	x1, xzr
  41a674:	bl	419680 <wcrtomb@plt+0x14860>
  41a678:	ldp	x20, x19, [sp, #48]
  41a67c:	ldp	x22, x21, [sp, #32]
  41a680:	ldr	x23, [sp, #16]
  41a684:	ldp	x29, x30, [sp], #64
  41a688:	ret
  41a68c:	stp	x29, x30, [sp, #-48]!
  41a690:	str	x21, [sp, #16]
  41a694:	stp	x20, x19, [sp, #32]
  41a698:	mov	x29, sp
  41a69c:	mov	x19, x2
  41a6a0:	mov	x20, x1
  41a6a4:	mov	w21, w0
  41a6a8:	bl	43c740 <argp_usage@@Base+0xab44>
  41a6ac:	cmn	x0, #0x1
  41a6b0:	b.ne	41a714 <wcrtomb@plt+0x158f4>  // b.any
  41a6b4:	bl	404d00 <__errno_location@plt>
  41a6b8:	ldr	w8, [x0]
  41a6bc:	cmp	w8, #0xb
  41a6c0:	b.ne	41a710 <wcrtomb@plt+0x158f0>  // b.any
  41a6c4:	mov	w1, #0x3                   	// #3
  41a6c8:	mov	w0, w21
  41a6cc:	bl	43db94 <argp_usage@@Base+0xbf98>
  41a6d0:	mov	w8, #0x800                 	// #2048
  41a6d4:	movk	w8, #0x8000, lsl #16
  41a6d8:	and	w8, w0, w8
  41a6dc:	cmp	w8, #0x800
  41a6e0:	b.ne	41a710 <wcrtomb@plt+0x158f0>  // b.any
  41a6e4:	and	w2, w0, #0xfffff7ff
  41a6e8:	mov	w1, #0x4                   	// #4
  41a6ec:	mov	w0, w21
  41a6f0:	bl	43db94 <argp_usage@@Base+0xbf98>
  41a6f4:	cmn	w0, #0x1
  41a6f8:	b.eq	41a710 <wcrtomb@plt+0x158f0>  // b.none
  41a6fc:	mov	w0, w21
  41a700:	mov	x1, x20
  41a704:	mov	x2, x19
  41a708:	bl	43c740 <argp_usage@@Base+0xab44>
  41a70c:	b	41a714 <wcrtomb@plt+0x158f4>
  41a710:	mov	x0, #0xffffffffffffffff    	// #-1
  41a714:	ldp	x20, x19, [sp, #32]
  41a718:	ldr	x21, [sp, #16]
  41a71c:	ldp	x29, x30, [sp], #48
  41a720:	ret
  41a724:	stp	x29, x30, [sp, #-48]!
  41a728:	stp	x22, x21, [sp, #16]
  41a72c:	stp	x20, x19, [sp, #32]
  41a730:	mov	x29, sp
  41a734:	mov	x21, x2
  41a738:	mov	x22, x1
  41a73c:	mov	w20, w0
  41a740:	bl	434bec <argp_usage@@Base+0x2ff0>
  41a744:	mov	x19, x0
  41a748:	cmp	x0, x21
  41a74c:	b.cs	41a7ac <wcrtomb@plt+0x1598c>  // b.hs, b.nlast
  41a750:	bl	404d00 <__errno_location@plt>
  41a754:	ldr	w8, [x0]
  41a758:	cmp	w8, #0xb
  41a75c:	b.ne	41a7ac <wcrtomb@plt+0x1598c>  // b.any
  41a760:	mov	w1, #0x3                   	// #3
  41a764:	mov	w0, w20
  41a768:	bl	43db94 <argp_usage@@Base+0xbf98>
  41a76c:	mov	w8, #0x800                 	// #2048
  41a770:	movk	w8, #0x8000, lsl #16
  41a774:	and	w8, w0, w8
  41a778:	cmp	w8, #0x800
  41a77c:	b.ne	41a7ac <wcrtomb@plt+0x1598c>  // b.any
  41a780:	and	w2, w0, #0xfffff7ff
  41a784:	mov	w1, #0x4                   	// #4
  41a788:	mov	w0, w20
  41a78c:	bl	43db94 <argp_usage@@Base+0xbf98>
  41a790:	cmn	w0, #0x1
  41a794:	b.eq	41a7ac <wcrtomb@plt+0x1598c>  // b.none
  41a798:	add	x1, x22, x19
  41a79c:	sub	x2, x21, x19
  41a7a0:	mov	w0, w20
  41a7a4:	bl	434bec <argp_usage@@Base+0x2ff0>
  41a7a8:	add	x19, x0, x19
  41a7ac:	mov	x0, x19
  41a7b0:	ldp	x20, x19, [sp, #32]
  41a7b4:	ldp	x22, x21, [sp, #16]
  41a7b8:	ldp	x29, x30, [sp], #48
  41a7bc:	ret
  41a7c0:	sub	sp, sp, #0x30
  41a7c4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41a7c8:	ldr	w8, [x8, #560]
  41a7cc:	stp	x3, x4, [sp]
  41a7d0:	mov	w9, #0x3ffffffe            	// #1073741822
  41a7d4:	mov	x3, sp
  41a7d8:	mov	w4, w8
  41a7dc:	stp	x29, x30, [sp, #32]
  41a7e0:	add	x29, sp, #0x20
  41a7e4:	str	x9, [sp, #24]
  41a7e8:	bl	433354 <argp_usage@@Base+0x1758>
  41a7ec:	ldp	x29, x30, [sp, #32]
  41a7f0:	add	sp, sp, #0x30
  41a7f4:	ret
  41a7f8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a7fc:	ldr	x8, [x8, #2600]
  41a800:	sub	w9, w8, #0x1
  41a804:	cmp	x8, #0x0
  41a808:	csel	w0, wzr, w9, eq  // eq = none
  41a80c:	ret
  41a810:	stp	x29, x30, [sp, #-48]!
  41a814:	stp	x22, x21, [sp, #16]
  41a818:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a81c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a820:	ldr	x10, [x21, #2600]
  41a824:	ldr	x9, [x8, #2608]
  41a828:	stp	x20, x19, [sp, #32]
  41a82c:	mov	x19, x0
  41a830:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a834:	cmp	x10, x9
  41a838:	mov	x29, sp
  41a83c:	b.ne	41a86c <wcrtomb@plt+0x15a4c>  // b.any
  41a840:	cbnz	x9, 41a84c <wcrtomb@plt+0x15a2c>
  41a844:	mov	w9, #0x2                   	// #2
  41a848:	str	x9, [x8, #2608]
  41a84c:	ldr	x0, [x22, #2616]
  41a850:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41a854:	add	x1, x1, #0xa30
  41a858:	mov	w2, #0x18                  	// #24
  41a85c:	bl	43d260 <argp_usage@@Base+0xb664>
  41a860:	ldr	x8, [x21, #2600]
  41a864:	str	x0, [x22, #2616]
  41a868:	cbz	x8, 41a934 <wcrtomb@plt+0x15b14>
  41a86c:	ldrb	w8, [x19]
  41a870:	cbz	w8, 41a8ac <wcrtomb@plt+0x15a8c>
  41a874:	ldrb	w8, [x19]
  41a878:	cmp	w8, #0x2e
  41a87c:	cset	w8, eq  // eq = none
  41a880:	b.ne	41a8a4 <wcrtomb@plt+0x15a84>  // b.any
  41a884:	ldrb	w9, [x19, #1]
  41a888:	cmp	w9, #0x2f
  41a88c:	b.ne	41a8a4 <wcrtomb@plt+0x15a84>  // b.any
  41a890:	add	x19, x19, #0x1
  41a894:	ldrb	w8, [x19, #1]!
  41a898:	cmp	w8, #0x2f
  41a89c:	b.eq	41a894 <wcrtomb@plt+0x15a74>  // b.none
  41a8a0:	b	41a874 <wcrtomb@plt+0x15a54>
  41a8a4:	ldrb	w8, [x19, w8, uxtw]
  41a8a8:	cbz	w8, 41a918 <wcrtomb@plt+0x15af8>
  41a8ac:	ldrb	w8, [x19]
  41a8b0:	cmp	w8, #0x2f
  41a8b4:	b.ne	41a8c4 <wcrtomb@plt+0x15aa4>  // b.any
  41a8b8:	mov	x0, x19
  41a8bc:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41a8c0:	b	41a8f4 <wcrtomb@plt+0x15ad4>
  41a8c4:	ldr	x8, [x22, #2616]
  41a8c8:	ldr	x9, [x21, #2600]
  41a8cc:	mov	w10, #0x18                  	// #24
  41a8d0:	madd	x8, x9, x10, x8
  41a8d4:	ldur	x0, [x8, #-16]
  41a8d8:	cbz	x0, 41a8f4 <wcrtomb@plt+0x15ad4>
  41a8dc:	bl	41a974 <wcrtomb@plt+0x15b54>
  41a8e0:	mov	x1, x19
  41a8e4:	mov	x20, x0
  41a8e8:	bl	41a9f4 <wcrtomb@plt+0x15bd4>
  41a8ec:	mov	x0, x20
  41a8f0:	bl	41aa68 <wcrtomb@plt+0x15c48>
  41a8f4:	ldr	x9, [x22, #2616]
  41a8f8:	ldr	x8, [x21, #2600]
  41a8fc:	mov	w10, #0x18                  	// #24
  41a900:	madd	x9, x8, x10, x9
  41a904:	add	x10, x8, #0x1
  41a908:	stp	x19, x0, [x9]
  41a90c:	str	wzr, [x9, #16]
  41a910:	str	x10, [x21, #2600]
  41a914:	b	41a920 <wcrtomb@plt+0x15b00>
  41a918:	ldr	x8, [x21, #2600]
  41a91c:	sub	x8, x8, #0x1
  41a920:	ldp	x20, x19, [sp, #32]
  41a924:	ldp	x22, x21, [sp, #16]
  41a928:	mov	w0, w8
  41a92c:	ldp	x29, x30, [sp], #48
  41a930:	ret
  41a934:	adrp	x8, 454000 <_obstack_memory_used@@Base+0x15da0>
  41a938:	add	x8, x8, #0x232
  41a93c:	str	x8, [x0]
  41a940:	bl	43d3c8 <argp_usage@@Base+0xb7cc>
  41a944:	ldr	x8, [x22, #2616]
  41a948:	ldr	x9, [x21, #2600]
  41a94c:	mov	w10, #0x18                  	// #24
  41a950:	mov	w11, #0xffffff9c            	// #-100
  41a954:	madd	x8, x9, x10, x8
  41a958:	add	x9, x9, #0x1
  41a95c:	str	x0, [x8, #8]
  41a960:	str	w11, [x8, #16]
  41a964:	str	x9, [x21, #2600]
  41a968:	ldrb	w8, [x19]
  41a96c:	cbnz	w8, 41a874 <wcrtomb@plt+0x15a54>
  41a970:	b	41a8ac <wcrtomb@plt+0x15a8c>
  41a974:	stp	x29, x30, [sp, #-48]!
  41a978:	str	x21, [sp, #16]
  41a97c:	mov	x21, x0
  41a980:	mov	w0, #0x18                  	// #24
  41a984:	stp	x20, x19, [sp, #32]
  41a988:	mov	x29, sp
  41a98c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41a990:	mov	x19, x0
  41a994:	mov	x0, x21
  41a998:	bl	404190 <strlen@plt>
  41a99c:	add	x0, x0, #0x2
  41a9a0:	str	x0, [x19, #8]
  41a9a4:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41a9a8:	mov	x1, x21
  41a9ac:	mov	x20, x0
  41a9b0:	str	x0, [x19]
  41a9b4:	bl	404b20 <strcpy@plt>
  41a9b8:	bl	404190 <strlen@plt>
  41a9bc:	add	x8, x0, x20
  41a9c0:	ldurb	w8, [x8, #-1]
  41a9c4:	str	x0, [x19, #16]
  41a9c8:	cmp	w8, #0x2f
  41a9cc:	b.eq	41a9e0 <wcrtomb@plt+0x15bc0>  // b.none
  41a9d0:	add	x8, x0, #0x1
  41a9d4:	mov	w9, #0x2f                  	// #47
  41a9d8:	str	x8, [x19, #16]
  41a9dc:	strb	w9, [x20, x0]
  41a9e0:	mov	x0, x19
  41a9e4:	ldp	x20, x19, [sp, #32]
  41a9e8:	ldr	x21, [sp, #16]
  41a9ec:	ldp	x29, x30, [sp], #48
  41a9f0:	ret
  41a9f4:	stp	x29, x30, [sp, #-32]!
  41a9f8:	stp	x20, x19, [sp, #16]
  41a9fc:	ldr	x8, [x0]
  41aa00:	ldr	x9, [x0, #16]
  41aa04:	mov	x19, x0
  41aa08:	mov	x20, x1
  41aa0c:	mov	x29, sp
  41aa10:	add	x8, x9, x8
  41aa14:	ldurb	w8, [x8, #-1]
  41aa18:	cmp	w8, #0x2f
  41aa1c:	b.eq	41aa3c <wcrtomb@plt+0x15c1c>  // b.none
  41aa20:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41aa24:	add	x1, x1, #0x8c4
  41aa28:	mov	x0, x19
  41aa2c:	bl	41af44 <wcrtomb@plt+0x16124>
  41aa30:	ldr	x8, [x19, #16]
  41aa34:	add	x8, x8, #0x1
  41aa38:	str	x8, [x19, #16]
  41aa3c:	mov	x0, x19
  41aa40:	mov	x1, x20
  41aa44:	bl	41af44 <wcrtomb@plt+0x16124>
  41aa48:	mov	x0, x20
  41aa4c:	bl	404190 <strlen@plt>
  41aa50:	ldr	x8, [x19, #16]
  41aa54:	add	x8, x8, x0
  41aa58:	str	x8, [x19, #16]
  41aa5c:	ldp	x20, x19, [sp, #16]
  41aa60:	ldp	x29, x30, [sp], #32
  41aa64:	ret
  41aa68:	stp	x29, x30, [sp, #-32]!
  41aa6c:	str	x19, [sp, #16]
  41aa70:	ldr	x19, [x0]
  41aa74:	ldr	x8, [x0, #16]
  41aa78:	mov	x29, sp
  41aa7c:	add	x9, x8, x19
  41aa80:	ldurb	w9, [x9, #-1]
  41aa84:	cmp	w9, #0x2f
  41aa88:	b.ne	41aa90 <wcrtomb@plt+0x15c70>  // b.any
  41aa8c:	strb	wzr, [x19, x8]
  41aa90:	bl	4049d0 <free@plt>
  41aa94:	mov	x0, x19
  41aa98:	ldr	x19, [sp, #16]
  41aa9c:	ldp	x29, x30, [sp], #32
  41aaa0:	ret
  41aaa4:	stp	x29, x30, [sp, #-80]!
  41aaa8:	stp	x22, x21, [sp, #48]
  41aaac:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  41aab0:	ldr	w8, [x21]
  41aab4:	str	x25, [sp, #16]
  41aab8:	stp	x24, x23, [sp, #32]
  41aabc:	stp	x20, x19, [sp, #64]
  41aac0:	cmp	w8, w0
  41aac4:	mov	x29, sp
  41aac8:	b.eq	41abdc <wcrtomb@plt+0x15dbc>  // b.none
  41aacc:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41aad0:	ldr	x8, [x23, #2616]
  41aad4:	mov	w9, #0x18                  	// #24
  41aad8:	mov	w19, w0
  41aadc:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41aae0:	smaddl	x24, w0, w9, x8
  41aae4:	ldr	w20, [x24, #16]!
  41aae8:	cbnz	w20, 41ab9c <wcrtomb@plt+0x15d7c>
  41aaec:	sxtw	x9, w19
  41aaf0:	mov	w10, #0x18                  	// #24
  41aaf4:	madd	x25, x9, x10, x8
  41aaf8:	ldr	x8, [x25]
  41aafc:	ldrb	w8, [x8]
  41ab00:	cmp	w8, #0x2f
  41ab04:	b.eq	41ab10 <wcrtomb@plt+0x15cf0>  // b.none
  41ab08:	sub	w0, w19, #0x1
  41ab0c:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  41ab10:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ab14:	ldr	w8, [x8, #700]
  41ab18:	ldr	w0, [x22, #2240]
  41ab1c:	ldr	x1, [x25]
  41ab20:	and	w2, w8, #0xffff7fff
  41ab24:	bl	404ce0 <openat@plt>
  41ab28:	tbnz	w0, #31, 41abf4 <wcrtomb@plt+0x15dd4>
  41ab2c:	str	w0, [x24]
  41ab30:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ab34:	ldr	x9, [x8, #2624]
  41ab38:	mov	w20, w0
  41ab3c:	cmp	x9, #0xf
  41ab40:	b.hi	41ab5c <wcrtomb@plt+0x15d3c>  // b.pmore
  41ab44:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ab48:	add	x10, x9, #0x1
  41ab4c:	add	x11, x11, #0xa48
  41ab50:	str	x10, [x8, #2624]
  41ab54:	add	x8, x11, x9, lsl #2
  41ab58:	b	41ab98 <wcrtomb@plt+0x15d78>
  41ab5c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ab60:	ldr	x24, [x23, #2616]
  41ab64:	ldrsw	x25, [x8, #2692]
  41ab68:	mov	w8, #0x18                  	// #24
  41ab6c:	madd	x23, x25, x8, x24
  41ab70:	ldr	w0, [x23, #16]!
  41ab74:	bl	4047c0 <close@plt>
  41ab78:	cbz	w0, 41ab8c <wcrtomb@plt+0x15d6c>
  41ab7c:	mov	w8, #0x18                  	// #24
  41ab80:	mul	x8, x25, x8
  41ab84:	ldr	x0, [x24, x8]
  41ab88:	bl	41abfc <wcrtomb@plt+0x15ddc>
  41ab8c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ab90:	add	x8, x8, #0xa84
  41ab94:	str	wzr, [x23]
  41ab98:	str	w19, [x8]
  41ab9c:	cmp	w20, #0x1
  41aba0:	b.lt	41abd4 <wcrtomb@plt+0x15db4>  // b.tstop
  41aba4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41aba8:	ldr	w9, [x8, #2632]
  41abac:	cmp	w9, w19
  41abb0:	b.eq	41abd0 <wcrtomb@plt+0x15db0>  // b.none
  41abb4:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41abb8:	add	x10, x10, #0xa4c
  41abbc:	ldr	w11, [x10]
  41abc0:	str	w9, [x10], #4
  41abc4:	cmp	w11, w19
  41abc8:	mov	w9, w11
  41abcc:	b.ne	41abbc <wcrtomb@plt+0x15d9c>  // b.any
  41abd0:	str	w19, [x8, #2632]
  41abd4:	str	w19, [x21]
  41abd8:	str	w20, [x22, #2240]
  41abdc:	ldp	x20, x19, [sp, #64]
  41abe0:	ldp	x22, x21, [sp, #48]
  41abe4:	ldp	x24, x23, [sp, #32]
  41abe8:	ldr	x25, [sp, #16]
  41abec:	ldp	x29, x30, [sp], #80
  41abf0:	ret
  41abf4:	ldr	x0, [x25]
  41abf8:	bl	428180 <wcrtomb@plt+0x23360>
  41abfc:	stp	x29, x30, [sp, #-16]!
  41ac00:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ac04:	ldrb	w8, [x8, #953]
  41ac08:	mov	x29, sp
  41ac0c:	cbz	w8, 41ac28 <wcrtomb@plt+0x15e08>
  41ac10:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ac14:	ldrb	w8, [x8, #450]
  41ac18:	tbz	w8, #7, 41ac2c <wcrtomb@plt+0x15e0c>
  41ac1c:	bl	428034 <wcrtomb@plt+0x23214>
  41ac20:	ldp	x29, x30, [sp], #16
  41ac24:	ret
  41ac28:	bl	428014 <wcrtomb@plt+0x231f4>
  41ac2c:	ldp	x29, x30, [sp], #16
  41ac30:	ret
  41ac34:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41ac38:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ac3c:	ldrsw	x9, [x9]
  41ac40:	ldr	x8, [x8, #2616]
  41ac44:	mov	w10, #0x18                  	// #24
  41ac48:	mul	x9, x9, x10
  41ac4c:	ldr	x0, [x8, x9]
  41ac50:	ret
  41ac54:	stp	x29, x30, [sp, #-16]!
  41ac58:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ac5c:	ldrb	w8, [x8, #953]
  41ac60:	mov	x29, sp
  41ac64:	cbz	w8, 41ac80 <wcrtomb@plt+0x15e60>
  41ac68:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ac6c:	ldrb	w8, [x8, #450]
  41ac70:	tbz	w8, #7, 41ac84 <wcrtomb@plt+0x15e64>
  41ac74:	bl	428198 <wcrtomb@plt+0x23378>
  41ac78:	ldp	x29, x30, [sp], #16
  41ac7c:	ret
  41ac80:	bl	428160 <wcrtomb@plt+0x23340>
  41ac84:	ldp	x29, x30, [sp], #16
  41ac88:	ret
  41ac8c:	stp	x29, x30, [sp, #-16]!
  41ac90:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ac94:	ldrb	w8, [x8, #953]
  41ac98:	mov	x29, sp
  41ac9c:	cbz	w8, 41acb8 <wcrtomb@plt+0x15e98>
  41aca0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41aca4:	ldrb	w8, [x8, #450]
  41aca8:	tbz	w8, #7, 41acbc <wcrtomb@plt+0x15e9c>
  41acac:	bl	428290 <wcrtomb@plt+0x23470>
  41acb0:	ldp	x29, x30, [sp], #16
  41acb4:	ret
  41acb8:	bl	4281d8 <wcrtomb@plt+0x233b8>
  41acbc:	ldp	x29, x30, [sp], #16
  41acc0:	ret
  41acc4:	stp	x29, x30, [sp, #-16]!
  41acc8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41accc:	ldrb	w8, [x8, #953]
  41acd0:	mov	x29, sp
  41acd4:	cbz	w8, 41acf0 <wcrtomb@plt+0x15ed0>
  41acd8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41acdc:	ldrb	w8, [x8, #450]
  41ace0:	tbz	w8, #7, 41acf4 <wcrtomb@plt+0x15ed4>
  41ace4:	bl	42840c <wcrtomb@plt+0x235ec>
  41ace8:	ldp	x29, x30, [sp], #16
  41acec:	ret
  41acf0:	bl	4283ec <wcrtomb@plt+0x235cc>
  41acf4:	ldp	x29, x30, [sp], #16
  41acf8:	ret
  41acfc:	stp	x29, x30, [sp, #-16]!
  41ad00:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ad04:	ldrb	w8, [x8, #953]
  41ad08:	mov	x29, sp
  41ad0c:	cbz	w8, 41ad28 <wcrtomb@plt+0x15f08>
  41ad10:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ad14:	ldrb	w8, [x8, #450]
  41ad18:	tbz	w8, #7, 41ad2c <wcrtomb@plt+0x15f0c>
  41ad1c:	bl	42846c <wcrtomb@plt+0x2364c>
  41ad20:	ldp	x29, x30, [sp], #16
  41ad24:	ret
  41ad28:	bl	42844c <wcrtomb@plt+0x2362c>
  41ad2c:	ldp	x29, x30, [sp], #16
  41ad30:	ret
  41ad34:	stp	x29, x30, [sp, #-16]!
  41ad38:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ad3c:	ldrb	w8, [x8, #953]
  41ad40:	mov	x29, sp
  41ad44:	cbz	w8, 41ad60 <wcrtomb@plt+0x15f40>
  41ad48:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ad4c:	ldrb	w8, [x8, #450]
  41ad50:	tbz	w8, #7, 41ad64 <wcrtomb@plt+0x15f44>
  41ad54:	bl	428568 <wcrtomb@plt+0x23748>
  41ad58:	ldp	x29, x30, [sp], #16
  41ad5c:	ret
  41ad60:	bl	4284ac <wcrtomb@plt+0x2368c>
  41ad64:	ldp	x29, x30, [sp], #16
  41ad68:	ret
  41ad6c:	stp	x29, x30, [sp, #-16]!
  41ad70:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ad74:	ldrb	w8, [x8, #953]
  41ad78:	mov	x29, sp
  41ad7c:	cbz	w8, 41ad98 <wcrtomb@plt+0x15f78>
  41ad80:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ad84:	ldrb	w8, [x8, #450]
  41ad88:	tbz	w8, #7, 41ad9c <wcrtomb@plt+0x15f7c>
  41ad8c:	bl	4286c4 <wcrtomb@plt+0x238a4>
  41ad90:	ldp	x29, x30, [sp], #16
  41ad94:	ret
  41ad98:	bl	4286a4 <wcrtomb@plt+0x23884>
  41ad9c:	ldp	x29, x30, [sp], #16
  41ada0:	ret
  41ada4:	stp	x29, x30, [sp, #-32]!
  41ada8:	stp	x20, x19, [sp, #16]
  41adac:	mov	x20, x2
  41adb0:	mov	x19, x0
  41adb4:	mov	x29, sp
  41adb8:	tbnz	w1, #0, 41ae28 <wcrtomb@plt+0x16008>
  41adbc:	bl	404d00 <__errno_location@plt>
  41adc0:	ldr	w8, [x0]
  41adc4:	cmp	w8, #0x2
  41adc8:	b.ne	41ae28 <wcrtomb@plt+0x16008>  // b.any
  41adcc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41add0:	ldrb	w8, [x8, #448]
  41add4:	tbz	w8, #6, 41ae1c <wcrtomb@plt+0x15ffc>
  41add8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41addc:	ldr	x8, [x8, #1008]
  41ade0:	cbz	x8, 41ade8 <wcrtomb@plt+0x15fc8>
  41ade4:	blr	x8
  41ade8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41adec:	add	x1, x1, #0x6ac
  41adf0:	mov	w2, #0x5                   	// #5
  41adf4:	mov	x0, xzr
  41adf8:	bl	404bf0 <dcgettext@plt>
  41adfc:	mov	x20, x0
  41ae00:	mov	x0, x19
  41ae04:	bl	43beac <argp_usage@@Base+0xa2b0>
  41ae08:	mov	x3, x0
  41ae0c:	mov	w0, wzr
  41ae10:	mov	w1, wzr
  41ae14:	mov	x2, x20
  41ae18:	bl	4041f0 <error@plt>
  41ae1c:	mov	w0, #0x1                   	// #1
  41ae20:	bl	422410 <wcrtomb@plt+0x1d5f0>
  41ae24:	b	41ae30 <wcrtomb@plt+0x16010>
  41ae28:	mov	x0, x19
  41ae2c:	blr	x20
  41ae30:	ldp	x20, x19, [sp, #16]
  41ae34:	ldp	x29, x30, [sp], #32
  41ae38:	ret
  41ae3c:	stp	x29, x30, [sp, #-16]!
  41ae40:	mov	x29, sp
  41ae44:	bl	404380 <fork@plt>
  41ae48:	cmn	w0, #0x1
  41ae4c:	b.eq	41ae58 <wcrtomb@plt+0x16038>  // b.none
  41ae50:	ldp	x29, x30, [sp], #16
  41ae54:	ret
  41ae58:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41ae5c:	add	x1, x1, #0x6d4
  41ae60:	mov	w2, #0x5                   	// #5
  41ae64:	mov	x0, xzr
  41ae68:	bl	404bf0 <dcgettext@plt>
  41ae6c:	mov	x1, x0
  41ae70:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  41ae74:	add	x0, x0, #0x6cf
  41ae78:	bl	427e04 <wcrtomb@plt+0x22fe4>
  41ae7c:	stp	x29, x30, [sp, #-16]!
  41ae80:	mov	x29, sp
  41ae84:	bl	4042f0 <pipe@plt>
  41ae88:	tbnz	w0, #31, 41ae94 <wcrtomb@plt+0x16074>
  41ae8c:	ldp	x29, x30, [sp], #16
  41ae90:	ret
  41ae94:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41ae98:	add	x1, x1, #0x6e7
  41ae9c:	mov	w2, #0x5                   	// #5
  41aea0:	mov	x0, xzr
  41aea4:	bl	404bf0 <dcgettext@plt>
  41aea8:	mov	x1, x0
  41aeac:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  41aeb0:	add	x0, x0, #0x6e2
  41aeb4:	bl	427e04 <wcrtomb@plt+0x22fe4>
  41aeb8:	stp	x29, x30, [sp, #-48]!
  41aebc:	str	x21, [sp, #16]
  41aec0:	stp	x20, x19, [sp, #32]
  41aec4:	mov	x29, sp
  41aec8:	mov	x21, x1
  41aecc:	mov	x19, x0
  41aed0:	bl	404760 <getpagesize@plt>
  41aed4:	sxtw	x20, w0
  41aed8:	adds	x0, x20, x21
  41aedc:	b.cs	41af00 <wcrtomb@plt+0x160e0>  // b.hs, b.nlast
  41aee0:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41aee4:	mov	x1, x20
  41aee8:	str	x0, [x19]
  41aeec:	bl	41af04 <wcrtomb@plt+0x160e4>
  41aef0:	ldp	x20, x19, [sp, #32]
  41aef4:	ldr	x21, [sp, #16]
  41aef8:	ldp	x29, x30, [sp], #48
  41aefc:	ret
  41af00:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  41af04:	add	x8, x0, x1
  41af08:	sub	x8, x8, #0x1
  41af0c:	udiv	x8, x8, x1
  41af10:	mul	x0, x8, x1
  41af14:	ret
  41af18:	stp	x29, x30, [sp, #-32]!
  41af1c:	str	x19, [sp, #16]
  41af20:	mov	x19, x0
  41af24:	ldr	x0, [x0]
  41af28:	mov	x29, sp
  41af2c:	bl	4049d0 <free@plt>
  41af30:	mov	x0, x19
  41af34:	bl	4049d0 <free@plt>
  41af38:	ldr	x19, [sp, #16]
  41af3c:	ldp	x29, x30, [sp], #32
  41af40:	ret
  41af44:	stp	x29, x30, [sp, #-48]!
  41af48:	stp	x20, x19, [sp, #32]
  41af4c:	mov	x19, x0
  41af50:	mov	x0, x1
  41af54:	stp	x22, x21, [sp, #16]
  41af58:	mov	x29, sp
  41af5c:	mov	x20, x1
  41af60:	bl	404190 <strlen@plt>
  41af64:	ldr	x8, [x19, #16]
  41af68:	mov	x21, x19
  41af6c:	ldr	x9, [x21, #8]!
  41af70:	add	x22, x0, #0x1
  41af74:	ldr	x0, [x19]
  41af78:	add	x10, x22, x8
  41af7c:	cmp	x10, x9
  41af80:	b.cc	41afa0 <wcrtomb@plt+0x16180>  // b.lo, b.ul, b.last
  41af84:	mov	x1, x21
  41af88:	bl	43d2e0 <argp_usage@@Base+0xb6e4>
  41af8c:	ldp	x9, x8, [x19, #8]
  41af90:	str	x0, [x19]
  41af94:	add	x10, x22, x8
  41af98:	cmp	x10, x9
  41af9c:	b.cs	41af84 <wcrtomb@plt+0x16164>  // b.hs, b.nlast
  41afa0:	add	x0, x0, x8
  41afa4:	mov	x1, x20
  41afa8:	bl	404b20 <strcpy@plt>
  41afac:	ldr	x0, [x19]
  41afb0:	ldp	x20, x19, [sp, #32]
  41afb4:	ldp	x22, x21, [sp, #16]
  41afb8:	ldp	x29, x30, [sp], #48
  41afbc:	ret
  41afc0:	stp	x29, x30, [sp, #-64]!
  41afc4:	stp	x22, x21, [sp, #32]
  41afc8:	stp	x20, x19, [sp, #48]
  41afcc:	mov	x19, x1
  41afd0:	mov	w20, w0
  41afd4:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41afd8:	str	x23, [sp, #16]
  41afdc:	mov	x29, sp
  41afe0:	cbz	w0, 41affc <wcrtomb@plt+0x161dc>
  41afe4:	ldr	w8, [x22, #2704]
  41afe8:	cmp	w8, w20
  41afec:	b.ne	41affc <wcrtomb@plt+0x161dc>  // b.any
  41aff0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  41aff4:	add	x0, x0, #0xd3e
  41aff8:	b	41b03c <wcrtomb@plt+0x1621c>
  41affc:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b000:	ldr	x8, [x21, #2712]
  41b004:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b008:	cbz	x8, 41b018 <wcrtomb@plt+0x161f8>
  41b00c:	ldr	w8, [x23, #2720]
  41b010:	cmp	w8, w20
  41b014:	b.eq	41b038 <wcrtomb@plt+0x16218>  // b.none
  41b018:	mov	w0, w20
  41b01c:	bl	404930 <getpwuid@plt>
  41b020:	cbz	x0, 41b058 <wcrtomb@plt+0x16238>
  41b024:	str	w20, [x23, #2720]
  41b028:	ldr	x1, [x0]
  41b02c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b030:	add	x0, x0, #0xa98
  41b034:	bl	419680 <wcrtomb@plt+0x14860>
  41b038:	ldr	x0, [x21, #2712]
  41b03c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41b040:	str	x0, [x19]
  41b044:	ldp	x20, x19, [sp, #48]
  41b048:	ldp	x22, x21, [sp, #32]
  41b04c:	ldr	x23, [sp, #16]
  41b050:	ldp	x29, x30, [sp], #64
  41b054:	ret
  41b058:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  41b05c:	str	w20, [x22, #2704]
  41b060:	b	41aff4 <wcrtomb@plt+0x161d4>
  41b064:	stp	x29, x30, [sp, #-64]!
  41b068:	stp	x22, x21, [sp, #32]
  41b06c:	stp	x20, x19, [sp, #48]
  41b070:	mov	x19, x1
  41b074:	mov	w20, w0
  41b078:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b07c:	str	x23, [sp, #16]
  41b080:	mov	x29, sp
  41b084:	cbz	w0, 41b0a0 <wcrtomb@plt+0x16280>
  41b088:	ldr	w8, [x22, #2724]
  41b08c:	cmp	w8, w20
  41b090:	b.ne	41b0a0 <wcrtomb@plt+0x16280>  // b.any
  41b094:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  41b098:	add	x0, x0, #0xd3e
  41b09c:	b	41b0e0 <wcrtomb@plt+0x162c0>
  41b0a0:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b0a4:	ldr	x8, [x21, #2728]
  41b0a8:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b0ac:	cbz	x8, 41b0bc <wcrtomb@plt+0x1629c>
  41b0b0:	ldr	w8, [x23, #2736]
  41b0b4:	cmp	w8, w20
  41b0b8:	b.eq	41b0dc <wcrtomb@plt+0x162bc>  // b.none
  41b0bc:	mov	w0, w20
  41b0c0:	bl	404d50 <getgrgid@plt>
  41b0c4:	cbz	x0, 41b0fc <wcrtomb@plt+0x162dc>
  41b0c8:	str	w20, [x23, #2736]
  41b0cc:	ldr	x1, [x0]
  41b0d0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b0d4:	add	x0, x0, #0xaa8
  41b0d8:	bl	419680 <wcrtomb@plt+0x14860>
  41b0dc:	ldr	x0, [x21, #2728]
  41b0e0:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41b0e4:	str	x0, [x19]
  41b0e8:	ldp	x20, x19, [sp, #48]
  41b0ec:	ldp	x22, x21, [sp, #32]
  41b0f0:	ldr	x23, [sp, #16]
  41b0f4:	ldp	x29, x30, [sp], #64
  41b0f8:	ret
  41b0fc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  41b100:	str	w20, [x22, #2724]
  41b104:	b	41b098 <wcrtomb@plt+0x16278>
  41b108:	stp	x29, x30, [sp, #-48]!
  41b10c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b110:	stp	x20, x19, [sp, #32]
  41b114:	mov	x19, x1
  41b118:	ldr	x1, [x8, #2744]
  41b11c:	mov	x20, x0
  41b120:	str	x21, [sp, #16]
  41b124:	mov	x29, sp
  41b128:	cbz	x1, 41b138 <wcrtomb@plt+0x16318>
  41b12c:	mov	x0, x20
  41b130:	bl	404920 <strcmp@plt>
  41b134:	cbz	w0, 41b1ac <wcrtomb@plt+0x1638c>
  41b138:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b13c:	ldr	x1, [x8, #2712]
  41b140:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b144:	cbz	x1, 41b164 <wcrtomb@plt+0x16344>
  41b148:	ldrb	w8, [x20]
  41b14c:	ldrb	w9, [x1]
  41b150:	cmp	w8, w9
  41b154:	b.ne	41b164 <wcrtomb@plt+0x16344>  // b.any
  41b158:	mov	x0, x20
  41b15c:	bl	404920 <strcmp@plt>
  41b160:	cbz	w0, 41b188 <wcrtomb@plt+0x16368>
  41b164:	mov	x0, x20
  41b168:	bl	404630 <getpwnam@plt>
  41b16c:	cbz	x0, 41b198 <wcrtomb@plt+0x16378>
  41b170:	ldr	w8, [x0, #16]
  41b174:	str	w8, [x21, #2720]
  41b178:	ldr	x1, [x0]
  41b17c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b180:	add	x0, x0, #0xa98
  41b184:	bl	419680 <wcrtomb@plt+0x14860>
  41b188:	ldr	w8, [x21, #2720]
  41b18c:	mov	w0, #0x1                   	// #1
  41b190:	str	w8, [x19]
  41b194:	b	41b1ac <wcrtomb@plt+0x1638c>
  41b198:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b19c:	add	x0, x0, #0xab8
  41b1a0:	mov	x1, x20
  41b1a4:	bl	419680 <wcrtomb@plt+0x14860>
  41b1a8:	mov	w0, wzr
  41b1ac:	ldp	x20, x19, [sp, #32]
  41b1b0:	ldr	x21, [sp, #16]
  41b1b4:	ldp	x29, x30, [sp], #48
  41b1b8:	ret
  41b1bc:	stp	x29, x30, [sp, #-48]!
  41b1c0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b1c4:	stp	x20, x19, [sp, #32]
  41b1c8:	mov	x19, x1
  41b1cc:	ldr	x1, [x8, #2752]
  41b1d0:	mov	x20, x0
  41b1d4:	str	x21, [sp, #16]
  41b1d8:	mov	x29, sp
  41b1dc:	cbz	x1, 41b1ec <wcrtomb@plt+0x163cc>
  41b1e0:	mov	x0, x20
  41b1e4:	bl	404920 <strcmp@plt>
  41b1e8:	cbz	w0, 41b260 <wcrtomb@plt+0x16440>
  41b1ec:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b1f0:	ldr	x1, [x8, #2728]
  41b1f4:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b1f8:	cbz	x1, 41b218 <wcrtomb@plt+0x163f8>
  41b1fc:	ldrb	w8, [x20]
  41b200:	ldrb	w9, [x1]
  41b204:	cmp	w8, w9
  41b208:	b.ne	41b218 <wcrtomb@plt+0x163f8>  // b.any
  41b20c:	mov	x0, x20
  41b210:	bl	404920 <strcmp@plt>
  41b214:	cbz	w0, 41b23c <wcrtomb@plt+0x1641c>
  41b218:	mov	x0, x20
  41b21c:	bl	4042c0 <getgrnam@plt>
  41b220:	cbz	x0, 41b24c <wcrtomb@plt+0x1642c>
  41b224:	ldr	w8, [x0, #16]
  41b228:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b22c:	add	x0, x0, #0xaa8
  41b230:	mov	x1, x20
  41b234:	str	w8, [x21, #2736]
  41b238:	bl	419680 <wcrtomb@plt+0x14860>
  41b23c:	ldr	w8, [x21, #2736]
  41b240:	mov	w0, #0x1                   	// #1
  41b244:	str	w8, [x19]
  41b248:	b	41b260 <wcrtomb@plt+0x16440>
  41b24c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b250:	add	x0, x0, #0xac0
  41b254:	mov	x1, x20
  41b258:	bl	419680 <wcrtomb@plt+0x14860>
  41b25c:	mov	w0, wzr
  41b260:	ldp	x20, x19, [sp, #32]
  41b264:	ldr	x21, [sp, #16]
  41b268:	ldp	x29, x30, [sp], #48
  41b26c:	ret
  41b270:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41b274:	ldr	x8, [x8, #8]
  41b278:	cmp	x8, #0x0
  41b27c:	cset	w0, ne  // ne = any
  41b280:	ret
  41b284:	stp	x29, x30, [sp, #-32]!
  41b288:	str	x19, [sp, #16]
  41b28c:	mov	x29, sp
  41b290:	mov	x19, x0
  41b294:	bl	41b2bc <wcrtomb@plt+0x1649c>
  41b298:	str	wzr, [x0, #16]
  41b29c:	str	x19, [x0, #24]
  41b2a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41b2a4:	ldr	x9, [x8, #8]
  41b2a8:	ldr	x19, [sp, #16]
  41b2ac:	add	x9, x9, #0x1
  41b2b0:	str	x9, [x8, #8]
  41b2b4:	ldp	x29, x30, [sp], #32
  41b2b8:	ret
  41b2bc:	stp	x29, x30, [sp, #-32]!
  41b2c0:	mov	w0, #0x38                  	// #56
  41b2c4:	str	x19, [sp, #16]
  41b2c8:	mov	x29, sp
  41b2cc:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41b2d0:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b2d4:	ldr	x8, [x19, #2816]
  41b2d8:	cbnz	x8, 41b2f4 <wcrtomb@plt+0x164d4>
  41b2dc:	mov	w8, #0x3                   	// #3
  41b2e0:	str	x0, [x19, #2816]
  41b2e4:	stp	xzr, xzr, [x0]
  41b2e8:	str	w8, [x0, #16]
  41b2ec:	mov	w0, #0x38                  	// #56
  41b2f0:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41b2f4:	ldr	x8, [x19, #2816]
  41b2f8:	ldr	x9, [x8, #8]
  41b2fc:	str	x9, [x0, #8]
  41b300:	ldr	x8, [x8, #8]
  41b304:	cbz	x8, 41b30c <wcrtomb@plt+0x164ec>
  41b308:	str	x0, [x8]
  41b30c:	ldr	x8, [x19, #2816]
  41b310:	ldr	x19, [sp, #16]
  41b314:	str	x8, [x0]
  41b318:	str	x0, [x8, #8]
  41b31c:	ldp	x29, x30, [sp], #32
  41b320:	ret
  41b324:	stp	x29, x30, [sp, #-16]!
  41b328:	mov	w0, #0x66                  	// #102
  41b32c:	mov	x29, sp
  41b330:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41b334:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b338:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b33c:	mov	w10, #0x64                  	// #100
  41b340:	str	x0, [x8, #2760]
  41b344:	str	x10, [x9, #2768]
  41b348:	bl	41b354 <wcrtomb@plt+0x16534>
  41b34c:	ldp	x29, x30, [sp], #16
  41b350:	ret
  41b354:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b358:	ldr	x9, [x8, #2816]
  41b35c:	cbz	x9, 41b37c <wcrtomb@plt+0x1655c>
  41b360:	ldr	x9, [x8, #2816]
  41b364:	ldr	x9, [x9, #8]
  41b368:	cbz	x9, 41b37c <wcrtomb@plt+0x1655c>
  41b36c:	mov	x10, x9
  41b370:	ldr	x9, [x9, #8]
  41b374:	cbnz	x9, 41b36c <wcrtomb@plt+0x1654c>
  41b378:	str	x10, [x8, #2816]
  41b37c:	ret
  41b380:	stp	x29, x30, [sp, #-16]!
  41b384:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b388:	ldr	x0, [x8, #2760]
  41b38c:	mov	x29, sp
  41b390:	bl	4049d0 <free@plt>
  41b394:	ldp	x29, x30, [sp], #16
  41b398:	ret
  41b39c:	stp	x29, x30, [sp, #-16]!
  41b3a0:	mov	x29, sp
  41b3a4:	bl	41b3b8 <wcrtomb@plt+0x16598>
  41b3a8:	cbz	x0, 41b3b0 <wcrtomb@plt+0x16590>
  41b3ac:	ldr	x0, [x0, #24]
  41b3b0:	ldp	x29, x30, [sp], #16
  41b3b4:	ret
  41b3b8:	stp	x29, x30, [sp, #-64]!
  41b3bc:	stp	x22, x21, [sp, #32]
  41b3c0:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b3c4:	ldr	x21, [x22, #2816]
  41b3c8:	str	x23, [sp, #16]
  41b3cc:	stp	x20, x19, [sp, #48]
  41b3d0:	mov	x29, sp
  41b3d4:	cbz	x21, 41b44c <wcrtomb@plt+0x1662c>
  41b3d8:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x13da0>
  41b3dc:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b3e0:	mov	w20, w0
  41b3e4:	add	x23, x23, #0x700
  41b3e8:	add	x19, x19, #0xb08
  41b3ec:	b	41b408 <wcrtomb@plt+0x165e8>
  41b3f0:	ldr	w0, [x21, #24]
  41b3f4:	ldr	x1, [x21, #32]
  41b3f8:	bl	41cb3c <wcrtomb@plt+0x17d1c>
  41b3fc:	bl	41c8b8 <wcrtomb@plt+0x17a98>
  41b400:	ldr	x21, [x22, #2816]
  41b404:	cbz	x21, 41b44c <wcrtomb@plt+0x1662c>
  41b408:	ldr	w8, [x21, #16]
  41b40c:	cmp	w8, #0x4
  41b410:	b.hi	41b400 <wcrtomb@plt+0x165e0>  // b.pmore
  41b414:	adr	x9, 41b3f0 <wcrtomb@plt+0x165d0>
  41b418:	ldrb	w10, [x23, x8]
  41b41c:	add	x9, x9, x10, lsl #2
  41b420:	br	x9
  41b424:	cbz	w20, 41b458 <wcrtomb@plt+0x16638>
  41b428:	ldr	x0, [x21, #24]
  41b42c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41b430:	bl	41a810 <wcrtomb@plt+0x159f0>
  41b434:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  41b438:	b	41b3fc <wcrtomb@plt+0x165dc>
  41b43c:	mov	x0, x21
  41b440:	bl	41c934 <wcrtomb@plt+0x17b14>
  41b444:	cbnz	w0, 41b400 <wcrtomb@plt+0x165e0>
  41b448:	b	41b48c <wcrtomb@plt+0x1666c>
  41b44c:	bl	41ce48 <wcrtomb@plt+0x18028>
  41b450:	mov	x19, xzr
  41b454:	b	41b48c <wcrtomb@plt+0x1666c>
  41b458:	mov	x0, x21
  41b45c:	bl	41cab0 <wcrtomb@plt+0x17c90>
  41b460:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41b464:	ldrb	w8, [x8, #756]
  41b468:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b46c:	cbz	w8, 41b478 <wcrtomb@plt+0x16658>
  41b470:	ldr	x0, [x20, #2760]
  41b474:	bl	419728 <wcrtomb@plt+0x14908>
  41b478:	ldr	w8, [x21, #16]
  41b47c:	ldr	x9, [x20, #2760]
  41b480:	str	w8, [x19, #16]
  41b484:	str	x9, [x19, #24]
  41b488:	bl	41c8b8 <wcrtomb@plt+0x17a98>
  41b48c:	mov	x0, x19
  41b490:	ldp	x20, x19, [sp, #48]
  41b494:	ldp	x22, x21, [sp, #32]
  41b498:	ldr	x23, [sp, #16]
  41b49c:	ldp	x29, x30, [sp], #64
  41b4a0:	ret
  41b4a4:	stp	x29, x30, [sp, #-48]!
  41b4a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41b4ac:	stp	x20, x19, [sp, #32]
  41b4b0:	ldrb	w19, [x8, #640]
  41b4b4:	mov	w0, wzr
  41b4b8:	str	x21, [sp, #16]
  41b4bc:	mov	x29, sp
  41b4c0:	bl	41b3b8 <wcrtomb@plt+0x16598>
  41b4c4:	mov	x20, x0
  41b4c8:	cbz	w19, 41b514 <wcrtomb@plt+0x166f4>
  41b4cc:	cbz	x20, 41b500 <wcrtomb@plt+0x166e0>
  41b4d0:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b4d4:	ldr	w8, [x20, #16]
  41b4d8:	cmp	w8, #0x1
  41b4dc:	b.ne	41b584 <wcrtomb@plt+0x16764>  // b.any
  41b4e0:	ldr	x0, [x20, #24]
  41b4e4:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41b4e8:	bl	41a810 <wcrtomb@plt+0x159f0>
  41b4ec:	str	w0, [x19, #2784]
  41b4f0:	mov	w0, wzr
  41b4f4:	bl	41b3b8 <wcrtomb@plt+0x16598>
  41b4f8:	mov	x20, x0
  41b4fc:	cbnz	x0, 41b4d4 <wcrtomb@plt+0x166b4>
  41b500:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b504:	ldr	w1, [x8, #2784]
  41b508:	cbz	w1, 41b630 <wcrtomb@plt+0x16810>
  41b50c:	mov	x0, xzr
  41b510:	b	41b624 <wcrtomb@plt+0x16804>
  41b514:	mov	w21, wzr
  41b518:	cbz	x20, 41b610 <wcrtomb@plt+0x167f0>
  41b51c:	ldr	w8, [x20, #16]
  41b520:	ldr	x0, [x20, #24]
  41b524:	cmp	w8, #0x1
  41b528:	b.ne	41b558 <wcrtomb@plt+0x16738>  // b.any
  41b52c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41b530:	bl	41a810 <wcrtomb@plt+0x159f0>
  41b534:	mov	w19, w0
  41b538:	mov	w0, wzr
  41b53c:	bl	41b3b8 <wcrtomb@plt+0x16598>
  41b540:	cbz	x0, 41b614 <wcrtomb@plt+0x167f4>
  41b544:	ldr	w8, [x0, #16]
  41b548:	ldr	x0, [x0, #24]
  41b54c:	cmp	w8, #0x1
  41b550:	b.eq	41b52c <wcrtomb@plt+0x1670c>  // b.none
  41b554:	b	41b55c <wcrtomb@plt+0x1673c>
  41b558:	mov	w19, w21
  41b55c:	mov	w2, #0x1                   	// #1
  41b560:	mov	w1, w19
  41b564:	mov	x3, xzr
  41b568:	bl	41b6c4 <wcrtomb@plt+0x168a4>
  41b56c:	mov	w0, wzr
  41b570:	bl	41b3b8 <wcrtomb@plt+0x16598>
  41b574:	mov	x20, x0
  41b578:	mov	w21, w19
  41b57c:	cbnz	x0, 41b51c <wcrtomb@plt+0x166fc>
  41b580:	b	41b614 <wcrtomb@plt+0x167f4>
  41b584:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b588:	ldr	x0, [x21, #2776]
  41b58c:	bl	41b640 <wcrtomb@plt+0x16820>
  41b590:	ldr	x0, [x20, #24]
  41b594:	bl	41b678 <wcrtomb@plt+0x16858>
  41b598:	mov	w10, #0x1                   	// #1
  41b59c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b5a0:	strb	w10, [x0, #36]
  41b5a4:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b5a8:	str	x0, [x10, #2800]
  41b5ac:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b5b0:	ldr	w9, [x9, #2788]
  41b5b4:	ldr	w8, [x19, #2784]
  41b5b8:	ldrb	w10, [x10, #2792]
  41b5bc:	str	x0, [x21, #2776]
  41b5c0:	cmp	w9, #0x2
  41b5c4:	str	w8, [x0, #40]
  41b5c8:	mov	w8, #0x40000000            	// #1073741824
  41b5cc:	cset	w9, eq  // eq = none
  41b5d0:	cmp	w10, #0x0
  41b5d4:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b5d8:	csel	w8, wzr, w8, ne  // ne = any
  41b5dc:	ldr	w10, [x10, #2796]
  41b5e0:	bfi	w8, w9, #28, #1
  41b5e4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41b5e8:	ldr	w9, [x9, #676]
  41b5ec:	orr	w8, w8, w10
  41b5f0:	str	xzr, [x0]
  41b5f4:	stp	xzr, xzr, [x0, #56]
  41b5f8:	orr	w8, w8, w9
  41b5fc:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b600:	str	xzr, [x0, #48]
  41b604:	str	w8, [x0, #32]
  41b608:	str	x0, [x9, #2808]
  41b60c:	b	41b630 <wcrtomb@plt+0x16810>
  41b610:	mov	w19, wzr
  41b614:	cmp	w19, w21
  41b618:	b.eq	41b630 <wcrtomb@plt+0x16810>  // b.none
  41b61c:	mov	x0, xzr
  41b620:	mov	w1, w19
  41b624:	mov	w2, wzr
  41b628:	mov	x3, xzr
  41b62c:	bl	41b6c4 <wcrtomb@plt+0x168a4>
  41b630:	ldp	x20, x19, [sp, #32]
  41b634:	ldr	x21, [sp, #16]
  41b638:	ldp	x29, x30, [sp], #48
  41b63c:	ret
  41b640:	cbz	x0, 41b674 <wcrtomb@plt+0x16854>
  41b644:	stp	x29, x30, [sp, #-32]!
  41b648:	str	x19, [sp, #16]
  41b64c:	mov	x19, x0
  41b650:	ldr	x0, [x0, #16]
  41b654:	mov	x29, sp
  41b658:	bl	4049d0 <free@plt>
  41b65c:	ldr	x0, [x19, #88]
  41b660:	bl	4049d0 <free@plt>
  41b664:	mov	x0, x19
  41b668:	bl	4049d0 <free@plt>
  41b66c:	ldr	x19, [sp, #16]
  41b670:	ldp	x29, x30, [sp], #32
  41b674:	ret
  41b678:	stp	x29, x30, [sp, #-32]!
  41b67c:	stp	x20, x19, [sp, #16]
  41b680:	mov	x19, x0
  41b684:	mov	w0, #0x60                  	// #96
  41b688:	mov	x29, sp
  41b68c:	bl	43d2f8 <argp_usage@@Base+0xb6fc>
  41b690:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  41b694:	add	x8, x8, #0xd3e
  41b698:	cmp	x19, #0x0
  41b69c:	mov	x20, x0
  41b6a0:	csel	x0, x8, x19, eq  // eq = none
  41b6a4:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41b6a8:	str	x0, [x20, #16]
  41b6ac:	bl	404190 <strlen@plt>
  41b6b0:	str	x0, [x20, #24]
  41b6b4:	mov	x0, x20
  41b6b8:	ldp	x20, x19, [sp, #16]
  41b6bc:	ldp	x29, x30, [sp], #32
  41b6c0:	ret
  41b6c4:	stp	x29, x30, [sp, #-48]!
  41b6c8:	str	x21, [sp, #16]
  41b6cc:	stp	x20, x19, [sp, #32]
  41b6d0:	mov	x29, sp
  41b6d4:	mov	x19, x3
  41b6d8:	mov	w20, w1
  41b6dc:	and	w21, w2, #0x1
  41b6e0:	bl	41b678 <wcrtomb@plt+0x16858>
  41b6e4:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b6e8:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b6ec:	ldr	w9, [x9, #2788]
  41b6f0:	ldrb	w10, [x10, #2792]
  41b6f4:	mov	w11, #0x40000000            	// #1073741824
  41b6f8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b6fc:	cmp	w9, #0x2
  41b700:	cset	w9, eq  // eq = none
  41b704:	cmp	w10, #0x0
  41b708:	adrp	x12, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b70c:	csel	w11, wzr, w11, ne  // ne = any
  41b710:	adrp	x13, 470000 <argp_program_version_hook@@Base+0x258>
  41b714:	ldr	x10, [x8, #2800]
  41b718:	ldr	w12, [x12, #2796]
  41b71c:	bfi	w11, w9, #28, #1
  41b720:	ldr	x9, [x8, #2800]
  41b724:	ldr	w13, [x13, #676]
  41b728:	adrp	x14, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b72c:	add	x14, x14, #0xaf8
  41b730:	stp	xzr, x10, [x0]
  41b734:	cmp	x9, #0x0
  41b738:	orr	w10, w11, w12
  41b73c:	csel	x9, x14, x9, eq  // eq = none
  41b740:	orr	w10, w10, w13
  41b744:	str	w20, [x0, #40]
  41b748:	stp	xzr, x19, [x0, #56]
  41b74c:	str	xzr, [x0, #48]
  41b750:	strb	w21, [x0, #36]
  41b754:	str	w10, [x0, #32]
  41b758:	str	x0, [x9]
  41b75c:	ldp	x20, x19, [sp, #32]
  41b760:	ldr	x21, [sp, #16]
  41b764:	str	x0, [x8, #2800]
  41b768:	ldp	x29, x30, [sp], #48
  41b76c:	ret
  41b770:	stp	x29, x30, [sp, #-48]!
  41b774:	stp	x22, x21, [sp, #16]
  41b778:	stp	x20, x19, [sp, #32]
  41b77c:	mov	x29, sp
  41b780:	bl	41b678 <wcrtomb@plt+0x16858>
  41b784:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  41b788:	ldrb	w8, [x21, #680]
  41b78c:	mov	x19, x0
  41b790:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b794:	cbz	w8, 41b7ac <wcrtomb@plt+0x1698c>
  41b798:	ldr	x20, [x22, #2808]
  41b79c:	mov	x0, x20
  41b7a0:	bl	41b834 <wcrtomb@plt+0x16a14>
  41b7a4:	mov	x0, x20
  41b7a8:	bl	41b640 <wcrtomb@plt+0x16820>
  41b7ac:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b7b0:	ldr	x9, [x22, #2808]
  41b7b4:	ldr	x10, [x8, #2800]
  41b7b8:	str	x19, [x22, #2808]
  41b7bc:	stp	x9, xzr, [x19]
  41b7c0:	cbnz	x10, 41b7c8 <wcrtomb@plt+0x169a8>
  41b7c4:	str	x19, [x8, #2800]
  41b7c8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b7cc:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b7d0:	ldr	w8, [x8, #2788]
  41b7d4:	ldrb	w9, [x9, #2792]
  41b7d8:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b7dc:	ldr	w10, [x10, #2796]
  41b7e0:	cmp	w8, #0x2
  41b7e4:	cset	w8, eq  // eq = none
  41b7e8:	cmp	w9, #0x0
  41b7ec:	mov	w9, #0x40000000            	// #1073741824
  41b7f0:	csel	w9, wzr, w9, ne  // ne = any
  41b7f4:	bfi	w9, w8, #28, #1
  41b7f8:	orr	w8, w9, w10
  41b7fc:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41b800:	ldr	w9, [x9, #676]
  41b804:	str	wzr, [x19, #40]
  41b808:	stp	xzr, xzr, [x19, #56]
  41b80c:	str	xzr, [x19, #48]
  41b810:	orr	w8, w8, w9
  41b814:	mov	w9, #0x1                   	// #1
  41b818:	strb	w9, [x19, #36]
  41b81c:	str	w8, [x19, #32]
  41b820:	strb	w9, [x21, #680]
  41b824:	ldp	x20, x19, [sp, #32]
  41b828:	ldp	x22, x21, [sp, #16]
  41b82c:	ldp	x29, x30, [sp], #48
  41b830:	ret
  41b834:	ldp	x9, x8, [x0]
  41b838:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b83c:	add	x10, x10, #0xaf8
  41b840:	cmp	x8, #0x0
  41b844:	csel	x8, x10, x8, eq  // eq = none
  41b848:	str	x9, [x8]
  41b84c:	ldp	x8, x10, [x0]
  41b850:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b854:	add	x9, x9, #0xaf0
  41b858:	add	x11, x8, #0x8
  41b85c:	cmp	x8, #0x0
  41b860:	csel	x8, x9, x11, eq  // eq = none
  41b864:	str	x10, [x8]
  41b868:	ret
  41b86c:	stp	x29, x30, [sp, #-96]!
  41b870:	str	x27, [sp, #16]
  41b874:	stp	x26, x25, [sp, #32]
  41b878:	stp	x24, x23, [sp, #48]
  41b87c:	stp	x22, x21, [sp, #64]
  41b880:	stp	x20, x19, [sp, #80]
  41b884:	mov	x19, x0
  41b888:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b88c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b890:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  41b894:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  41b898:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  41b89c:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  41b8a0:	mov	x29, sp
  41b8a4:	b	41b8c4 <wcrtomb@plt+0x16aa4>
  41b8a8:	ldr	w0, [x8, #40]
  41b8ac:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  41b8b0:	mov	w8, wzr
  41b8b4:	str	xzr, [x22, #2808]
  41b8b8:	str	xzr, [x23, #2800]
  41b8bc:	mov	w20, #0x1                   	// #1
  41b8c0:	tbz	w8, #0, 41b99c <wcrtomb@plt+0x16b7c>
  41b8c4:	ldr	x8, [x22, #2808]
  41b8c8:	cbz	x8, 41b8bc <wcrtomb@plt+0x16a9c>
  41b8cc:	ldr	x9, [x8, #16]
  41b8d0:	ldrb	w9, [x9]
  41b8d4:	cbz	w9, 41b8a8 <wcrtomb@plt+0x16a88>
  41b8d8:	mov	x0, x19
  41b8dc:	bl	41b9bc <wcrtomb@plt+0x16b9c>
  41b8e0:	ldrb	w8, [x24, #680]
  41b8e4:	mov	x21, x0
  41b8e8:	cbz	w8, 41b8fc <wcrtomb@plt+0x16adc>
  41b8ec:	ldr	x8, [x22, #2808]
  41b8f0:	cmp	x21, x8
  41b8f4:	b.eq	41b95c <wcrtomb@plt+0x16b3c>  // b.none
  41b8f8:	mov	x21, xzr
  41b8fc:	cbz	x21, 41b964 <wcrtomb@plt+0x16b44>
  41b900:	ldr	x8, [x21, #24]
  41b904:	ldrb	w8, [x19, x8]
  41b908:	cmp	w8, #0x2f
  41b90c:	b.ne	41b920 <wcrtomb@plt+0x16b00>  // b.any
  41b910:	ldr	w8, [x26, #676]
  41b914:	cbz	w8, 41b920 <wcrtomb@plt+0x16b00>
  41b918:	ldr	x8, [x21, #48]
  41b91c:	cbnz	x8, 41b92c <wcrtomb@plt+0x16b0c>
  41b920:	ldr	x8, [x21, #48]
  41b924:	add	x8, x8, #0x1
  41b928:	str	x8, [x21, #48]
  41b92c:	ldr	w0, [x21, #40]
  41b930:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  41b934:	ldr	x9, [x21, #48]
  41b938:	ldr	x10, [x27, #760]
  41b93c:	mov	w8, wzr
  41b940:	cmp	x9, #0x0
  41b944:	cset	w11, ne  // ne = any
  41b948:	cmp	x9, x10
  41b94c:	cset	w9, eq  // eq = none
  41b950:	cmp	x10, #0x0
  41b954:	csel	w20, w11, w9, eq  // eq = none
  41b958:	b	41b8c0 <wcrtomb@plt+0x16aa0>
  41b95c:	strb	wzr, [x24, #680]
  41b960:	cbnz	x21, 41b900 <wcrtomb@plt+0x16ae0>
  41b964:	ldrb	w8, [x25, #640]
  41b968:	cbz	w8, 41b994 <wcrtomb@plt+0x16b74>
  41b96c:	ldr	x8, [x22, #2808]
  41b970:	ldr	x8, [x8, #48]
  41b974:	cbz	x8, 41b994 <wcrtomb@plt+0x16b74>
  41b978:	bl	41b4a4 <wcrtomb@plt+0x16684>
  41b97c:	ldr	x8, [x22, #2808]
  41b980:	ldr	x8, [x8, #48]
  41b984:	cmp	x8, #0x0
  41b988:	cset	w8, eq  // eq = none
  41b98c:	and	w20, w20, w8
  41b990:	b	41b8c0 <wcrtomb@plt+0x16aa0>
  41b994:	mov	w20, wzr
  41b998:	b	41b8c0 <wcrtomb@plt+0x16aa0>
  41b99c:	mov	w0, w20
  41b9a0:	ldp	x20, x19, [sp, #80]
  41b9a4:	ldp	x22, x21, [sp, #64]
  41b9a8:	ldp	x24, x23, [sp, #48]
  41b9ac:	ldp	x26, x25, [sp, #32]
  41b9b0:	ldr	x27, [sp, #16]
  41b9b4:	ldp	x29, x30, [sp], #96
  41b9b8:	ret
  41b9bc:	stp	x29, x30, [sp, #-32]!
  41b9c0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41b9c4:	stp	x20, x19, [sp, #16]
  41b9c8:	ldr	x19, [x8, #2808]
  41b9cc:	mov	x29, sp
  41b9d0:	cbz	x19, 41ba00 <wcrtomb@plt+0x16be0>
  41b9d4:	mov	x20, x0
  41b9d8:	b	41b9e4 <wcrtomb@plt+0x16bc4>
  41b9dc:	ldr	x19, [x19]
  41b9e0:	cbz	x19, 41ba00 <wcrtomb@plt+0x16be0>
  41b9e4:	ldr	x0, [x19, #16]
  41b9e8:	ldrb	w8, [x0]
  41b9ec:	cbz	w8, 41b9dc <wcrtomb@plt+0x16bbc>
  41b9f0:	ldr	w2, [x19, #32]
  41b9f4:	mov	x1, x20
  41b9f8:	bl	432928 <argp_usage@@Base+0xd2c>
  41b9fc:	tbz	w0, #0, 41b9dc <wcrtomb@plt+0x16bbc>
  41ba00:	mov	x0, x19
  41ba04:	ldp	x20, x19, [sp, #16]
  41ba08:	ldp	x29, x30, [sp], #32
  41ba0c:	ret
  41ba10:	stp	x29, x30, [sp, #-32]!
  41ba14:	stp	x20, x19, [sp, #16]
  41ba18:	ldr	x19, [x0, #8]
  41ba1c:	mov	x8, x0
  41ba20:	mov	w0, wzr
  41ba24:	mov	x29, sp
  41ba28:	cbz	x19, 41ba60 <wcrtomb@plt+0x16c40>
  41ba2c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41ba30:	ldr	x20, [x9, #760]
  41ba34:	cbz	x20, 41ba60 <wcrtomb@plt+0x16c40>
  41ba38:	ldrb	w8, [x8, #16]
  41ba3c:	cbz	w8, 41ba48 <wcrtomb@plt+0x16c28>
  41ba40:	mov	w0, wzr
  41ba44:	b	41ba60 <wcrtomb@plt+0x16c40>
  41ba48:	mov	x0, x19
  41ba4c:	bl	404190 <strlen@plt>
  41ba50:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ba54:	ldr	x8, [x8, #2808]
  41ba58:	cbnz	x8, 41ba74 <wcrtomb@plt+0x16c54>
  41ba5c:	mov	w0, #0x1                   	// #1
  41ba60:	ldp	x20, x19, [sp, #16]
  41ba64:	ldp	x29, x30, [sp], #32
  41ba68:	ret
  41ba6c:	ldr	x8, [x8]
  41ba70:	cbz	x8, 41ba5c <wcrtomb@plt+0x16c3c>
  41ba74:	ldr	x9, [x8, #16]
  41ba78:	ldrb	w9, [x9]
  41ba7c:	cbz	w9, 41ba8c <wcrtomb@plt+0x16c6c>
  41ba80:	ldr	x9, [x8, #48]
  41ba84:	cmp	x9, x20
  41ba88:	b.cc	41ba40 <wcrtomb@plt+0x16c20>  // b.lo, b.ul, b.last
  41ba8c:	ldr	x9, [x8, #24]
  41ba90:	cmp	x0, x9
  41ba94:	b.cc	41ba6c <wcrtomb@plt+0x16c4c>  // b.lo, b.ul, b.last
  41ba98:	ldrb	w9, [x19, x9]
  41ba9c:	cmp	w9, #0x2f
  41baa0:	b.ne	41ba6c <wcrtomb@plt+0x16c4c>  // b.any
  41baa4:	b	41ba40 <wcrtomb@plt+0x16c20>
  41baa8:	stp	x29, x30, [sp, #-96]!
  41baac:	stp	x20, x19, [sp, #80]
  41bab0:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bab4:	stp	x22, x21, [sp, #64]
  41bab8:	ldr	x21, [x20, #2808]
  41babc:	stp	x24, x23, [sp, #48]
  41bac0:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  41bac4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bac8:	str	x27, [sp, #16]
  41bacc:	stp	x26, x25, [sp, #32]
  41bad0:	mov	x29, sp
  41bad4:	cbz	x21, 41bb78 <wcrtomb@plt+0x16d58>
  41bad8:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x13da0>
  41badc:	adrp	x26, 452000 <_obstack_memory_used@@Base+0x13da0>
  41bae0:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  41bae4:	add	x25, x25, #0x8b9
  41bae8:	add	x26, x26, #0x8a0
  41baec:	mov	w27, #0x2                   	// #2
  41baf0:	b	41bb3c <wcrtomb@plt+0x16d1c>
  41baf4:	ldr	x8, [x21, #48]
  41baf8:	mov	w2, #0x5                   	// #5
  41bafc:	mov	x0, xzr
  41bb00:	cmp	x8, #0x0
  41bb04:	csel	x1, x26, x25, eq  // eq = none
  41bb08:	bl	404bf0 <dcgettext@plt>
  41bb0c:	ldr	x8, [x21, #16]
  41bb10:	mov	x19, x0
  41bb14:	mov	x0, x8
  41bb18:	bl	43beac <argp_usage@@Base+0xa2b0>
  41bb1c:	mov	x3, x0
  41bb20:	mov	w0, wzr
  41bb24:	mov	w1, wzr
  41bb28:	mov	x2, x19
  41bb2c:	bl	4041f0 <error@plt>
  41bb30:	str	w27, [x23, #3456]
  41bb34:	ldr	x21, [x21]
  41bb38:	cbz	x21, 41bb78 <wcrtomb@plt+0x16d58>
  41bb3c:	ldr	x9, [x24, #760]
  41bb40:	ldr	x8, [x21, #48]
  41bb44:	cbz	x9, 41bb54 <wcrtomb@plt+0x16d34>
  41bb48:	cmp	x8, x9
  41bb4c:	b.cs	41bb34 <wcrtomb@plt+0x16d14>  // b.hs, b.nlast
  41bb50:	b	41bb58 <wcrtomb@plt+0x16d38>
  41bb54:	cbnz	x8, 41bb34 <wcrtomb@plt+0x16d14>
  41bb58:	ldr	x0, [x21, #16]
  41bb5c:	ldrb	w8, [x0]
  41bb60:	cbz	w8, 41bb34 <wcrtomb@plt+0x16d14>
  41bb64:	bl	41bc28 <wcrtomb@plt+0x16e08>
  41bb68:	ldr	x8, [x22, #1008]
  41bb6c:	cbz	x8, 41baf4 <wcrtomb@plt+0x16cd4>
  41bb70:	blr	x8
  41bb74:	b	41baf4 <wcrtomb@plt+0x16cd4>
  41bb78:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41bb7c:	ldrb	w8, [x8, #640]
  41bb80:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bb84:	str	xzr, [x20, #2808]
  41bb88:	str	xzr, [x9, #2800]
  41bb8c:	cbz	w8, 41bc0c <wcrtomb@plt+0x16dec>
  41bb90:	mov	w0, #0x1                   	// #1
  41bb94:	bl	41b39c <wcrtomb@plt+0x1657c>
  41bb98:	cbz	x0, 41bc0c <wcrtomb@plt+0x16dec>
  41bb9c:	adrp	x19, 452000 <_obstack_memory_used@@Base+0x13da0>
  41bba0:	mov	x20, x0
  41bba4:	add	x19, x19, #0x8a0
  41bba8:	mov	w24, #0x2                   	// #2
  41bbac:	b	41bbf4 <wcrtomb@plt+0x16dd4>
  41bbb0:	mov	w2, #0x5                   	// #5
  41bbb4:	mov	x0, xzr
  41bbb8:	mov	x1, x19
  41bbbc:	bl	404bf0 <dcgettext@plt>
  41bbc0:	mov	x21, x0
  41bbc4:	mov	x0, x20
  41bbc8:	bl	43beac <argp_usage@@Base+0xa2b0>
  41bbcc:	mov	x3, x0
  41bbd0:	mov	w0, wzr
  41bbd4:	mov	w1, wzr
  41bbd8:	mov	x2, x21
  41bbdc:	bl	4041f0 <error@plt>
  41bbe0:	mov	w0, #0x1                   	// #1
  41bbe4:	str	w24, [x23, #3456]
  41bbe8:	bl	41b39c <wcrtomb@plt+0x1657c>
  41bbec:	mov	x20, x0
  41bbf0:	cbz	x0, 41bc0c <wcrtomb@plt+0x16dec>
  41bbf4:	mov	x0, x20
  41bbf8:	bl	41bc28 <wcrtomb@plt+0x16e08>
  41bbfc:	ldr	x8, [x22, #1008]
  41bc00:	cbz	x8, 41bbb0 <wcrtomb@plt+0x16d90>
  41bc04:	blr	x8
  41bc08:	b	41bbb0 <wcrtomb@plt+0x16d90>
  41bc0c:	ldp	x20, x19, [sp, #80]
  41bc10:	ldp	x22, x21, [sp, #64]
  41bc14:	ldp	x24, x23, [sp, #48]
  41bc18:	ldp	x26, x25, [sp, #32]
  41bc1c:	ldr	x27, [sp, #16]
  41bc20:	ldp	x29, x30, [sp], #96
  41bc24:	ret
  41bc28:	stp	x29, x30, [sp, #-32]!
  41bc2c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bc30:	ldr	w8, [x8, #2788]
  41bc34:	stp	x20, x19, [sp, #16]
  41bc38:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bc3c:	mov	x29, sp
  41bc40:	cbnz	w8, 41bcbc <wcrtomb@plt+0x16e9c>
  41bc44:	mov	w1, wzr
  41bc48:	bl	432798 <argp_usage@@Base+0xb9c>
  41bc4c:	tbz	w0, #0, 41bcbc <wcrtomb@plt+0x16e9c>
  41bc50:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  41bc54:	ldr	x8, [x20, #1008]
  41bc58:	mov	w9, #0x1                   	// #1
  41bc5c:	strb	w9, [x19, #2896]
  41bc60:	cbz	x8, 41bc68 <wcrtomb@plt+0x16e48>
  41bc64:	blr	x8
  41bc68:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41bc6c:	add	x1, x1, #0x32b
  41bc70:	mov	w2, #0x5                   	// #5
  41bc74:	mov	x0, xzr
  41bc78:	bl	404bf0 <dcgettext@plt>
  41bc7c:	mov	x2, x0
  41bc80:	mov	w0, wzr
  41bc84:	mov	w1, wzr
  41bc88:	bl	4041f0 <error@plt>
  41bc8c:	ldr	x8, [x20, #1008]
  41bc90:	cbz	x8, 41bc98 <wcrtomb@plt+0x16e78>
  41bc94:	blr	x8
  41bc98:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41bc9c:	add	x1, x1, #0x35a
  41bca0:	mov	w2, #0x5                   	// #5
  41bca4:	mov	x0, xzr
  41bca8:	bl	404bf0 <dcgettext@plt>
  41bcac:	mov	x2, x0
  41bcb0:	mov	w0, wzr
  41bcb4:	mov	w1, wzr
  41bcb8:	bl	4041f0 <error@plt>
  41bcbc:	ldrb	w0, [x19, #2896]
  41bcc0:	ldp	x20, x19, [sp, #16]
  41bcc4:	ldp	x29, x30, [sp], #32
  41bcc8:	ret
  41bccc:	stp	x29, x30, [sp, #-32]!
  41bcd0:	stp	x20, x19, [sp, #16]
  41bcd4:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bcd8:	ldr	x8, [x19, #2808]
  41bcdc:	mov	x29, sp
  41bce0:	cbz	x8, 41bd90 <wcrtomb@plt+0x16f70>
  41bce4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41bce8:	ldr	x9, [x9, #760]
  41bcec:	b	41bcfc <wcrtomb@plt+0x16edc>
  41bcf0:	cbnz	x10, 41bd90 <wcrtomb@plt+0x16f70>
  41bcf4:	ldr	x8, [x8]
  41bcf8:	cbz	x8, 41bd10 <wcrtomb@plt+0x16ef0>
  41bcfc:	ldr	x10, [x8, #48]
  41bd00:	cbz	x9, 41bcf0 <wcrtomb@plt+0x16ed0>
  41bd04:	cmp	x10, x9
  41bd08:	b.cc	41bcf4 <wcrtomb@plt+0x16ed4>  // b.lo, b.ul, b.last
  41bd0c:	b	41bd90 <wcrtomb@plt+0x16f70>
  41bd10:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41bd14:	ldr	w8, [x8, #644]
  41bd18:	cbz	w8, 41bd40 <wcrtomb@plt+0x16f20>
  41bd1c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41bd20:	add	x1, x1, #0x8e6
  41bd24:	mov	w2, #0x5                   	// #5
  41bd28:	mov	x0, xzr
  41bd2c:	bl	404bf0 <dcgettext@plt>
  41bd30:	mov	x2, x0
  41bd34:	mov	w0, wzr
  41bd38:	mov	w1, wzr
  41bd3c:	bl	4041f0 <error@plt>
  41bd40:	mov	w0, #0x1                   	// #1
  41bd44:	bl	422410 <wcrtomb@plt+0x1d5f0>
  41bd48:	ldr	x20, [x19, #2808]
  41bd4c:	cbz	x20, 41bd64 <wcrtomb@plt+0x16f44>
  41bd50:	ldr	x0, [x20, #16]
  41bd54:	bl	41bc28 <wcrtomb@plt+0x16e08>
  41bd58:	cbnz	w0, 41bd64 <wcrtomb@plt+0x16f44>
  41bd5c:	ldr	x20, [x20]
  41bd60:	cbnz	x20, 41bd50 <wcrtomb@plt+0x16f30>
  41bd64:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41bd68:	ldrb	w8, [x8, #640]
  41bd6c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bd70:	str	xzr, [x19, #2808]
  41bd74:	str	xzr, [x9, #2800]
  41bd78:	cbz	w8, 41bd90 <wcrtomb@plt+0x16f70>
  41bd7c:	mov	w0, #0x1                   	// #1
  41bd80:	bl	41b39c <wcrtomb@plt+0x1657c>
  41bd84:	cbz	x0, 41bd90 <wcrtomb@plt+0x16f70>
  41bd88:	bl	41bc28 <wcrtomb@plt+0x16e08>
  41bd8c:	cbz	w0, 41bd7c <wcrtomb@plt+0x16f5c>
  41bd90:	ldp	x20, x19, [sp, #16]
  41bd94:	ldp	x29, x30, [sp], #32
  41bd98:	ret
  41bd9c:	stp	x29, x30, [sp, #-96]!
  41bda0:	str	x28, [sp, #16]
  41bda4:	stp	x26, x25, [sp, #32]
  41bda8:	stp	x24, x23, [sp, #48]
  41bdac:	stp	x22, x21, [sp, #64]
  41bdb0:	stp	x20, x19, [sp, #80]
  41bdb4:	mov	x29, sp
  41bdb8:	sub	sp, sp, #0x1b0
  41bdbc:	bl	41b4a4 <wcrtomb@plt+0x16684>
  41bdc0:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bdc4:	ldr	x8, [x23, #2808]
  41bdc8:	cbnz	x8, 41bde4 <wcrtomb@plt+0x16fc4>
  41bdcc:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  41bdd0:	add	x0, x0, #0x232
  41bdd4:	mov	w1, wzr
  41bdd8:	mov	w2, wzr
  41bddc:	mov	x3, xzr
  41bde0:	bl	41b6c4 <wcrtomb@plt+0x168a4>
  41bde4:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  41bde8:	ldr	x8, [x24, #832]
  41bdec:	cbz	x8, 41be10 <wcrtomb@plt+0x16ff0>
  41bdf0:	bl	41a7f8 <wcrtomb@plt+0x159d8>
  41bdf4:	cbz	w0, 41be0c <wcrtomb@plt+0x16fec>
  41bdf8:	cmp	w0, #0x1
  41bdfc:	b.ne	41c0ac <wcrtomb@plt+0x1728c>  // b.any
  41be00:	ldr	x8, [x23, #2808]
  41be04:	ldr	w8, [x8, #40]
  41be08:	cbz	w8, 41c0c8 <wcrtomb@plt+0x172a8>
  41be0c:	bl	414bbc <wcrtomb@plt+0xfd9c>
  41be10:	ldr	x20, [x23, #2808]
  41be14:	cbz	x20, 41be30 <wcrtomb@plt+0x17010>
  41be18:	add	x8, sp, #0x8
  41be1c:	mov	w19, wzr
  41be20:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41be24:	add	x21, x8, #0x58
  41be28:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  41be2c:	b	41bfe8 <wcrtomb@plt+0x171c8>
  41be30:	mov	w19, wzr
  41be34:	ldr	x0, [x23, #2808]
  41be38:	adrp	x2, 41c000 <wcrtomb@plt+0x171e0>
  41be3c:	add	x2, x2, #0x358
  41be40:	mov	w1, w19
  41be44:	bl	41c324 <wcrtomb@plt+0x17504>
  41be48:	adrp	x2, 41c000 <wcrtomb@plt+0x171e0>
  41be4c:	adrp	x3, 41c000 <wcrtomb@plt+0x171e0>
  41be50:	str	x0, [x23, #2808]
  41be54:	add	x2, x2, #0x374
  41be58:	add	x3, x3, #0x38c
  41be5c:	mov	x0, xzr
  41be60:	mov	x1, xzr
  41be64:	mov	x4, xzr
  41be68:	bl	435130 <argp_usage@@Base+0x3534>
  41be6c:	ldr	x21, [x23, #2808]
  41be70:	mov	x19, x0
  41be74:	cbz	x21, 41bf50 <wcrtomb@plt+0x17130>
  41be78:	mov	x26, xzr
  41be7c:	mov	w20, wzr
  41be80:	b	41be8c <wcrtomb@plt+0x1706c>
  41be84:	mov	x21, x25
  41be88:	cbz	x25, 41bf58 <wcrtomb@plt+0x17138>
  41be8c:	ldr	w0, [x21, #40]
  41be90:	ldr	x1, [x21, #16]
  41be94:	ldr	x25, [x21]
  41be98:	bl	4199e0 <wcrtomb@plt+0x14bc0>
  41be9c:	str	x0, [x21, #88]
  41bea0:	cbz	x26, 41bf30 <wcrtomb@plt+0x17110>
  41bea4:	mov	x0, x19
  41bea8:	mov	x1, x21
  41beac:	bl	434e74 <argp_usage@@Base+0x3278>
  41beb0:	cbz	x0, 41beec <wcrtomb@plt+0x170cc>
  41beb4:	ldr	x8, [x21, #64]
  41beb8:	mov	x22, x0
  41bebc:	cbz	x8, 41bef8 <wcrtomb@plt+0x170d8>
  41bec0:	ldr	x0, [x21, #72]
  41bec4:	cbz	x0, 41bed0 <wcrtomb@plt+0x170b0>
  41bec8:	mov	x1, x22
  41becc:	bl	41c3b0 <wcrtomb@plt+0x17590>
  41bed0:	mov	x0, x21
  41bed4:	bl	41b834 <wcrtomb@plt+0x16a14>
  41bed8:	mov	x0, x21
  41bedc:	bl	41b640 <wcrtomb@plt+0x16820>
  41bee0:	mov	w8, wzr
  41bee4:	cbz	w8, 41be84 <wcrtomb@plt+0x17064>
  41bee8:	b	41bf30 <wcrtomb@plt+0x17110>
  41beec:	mov	w8, #0x1                   	// #1
  41bef0:	cbz	w8, 41be84 <wcrtomb@plt+0x17064>
  41bef4:	b	41bf30 <wcrtomb@plt+0x17110>
  41bef8:	ldr	x0, [x22, #72]
  41befc:	cbz	x0, 41bf08 <wcrtomb@plt+0x170e8>
  41bf00:	mov	x1, x21
  41bf04:	bl	41c3b0 <wcrtomb@plt+0x17590>
  41bf08:	mov	x0, x19
  41bf0c:	mov	x1, x21
  41bf10:	bl	4359d4 <argp_usage@@Base+0x3dd8>
  41bf14:	mov	x0, x22
  41bf18:	bl	41b834 <wcrtomb@plt+0x16a14>
  41bf1c:	mov	x0, x22
  41bf20:	bl	41b640 <wcrtomb@plt+0x16820>
  41bf24:	sub	w20, w20, #0x1
  41bf28:	mov	w8, #0x1                   	// #1
  41bf2c:	cbz	w8, 41be84 <wcrtomb@plt+0x17064>
  41bf30:	mov	x0, x19
  41bf34:	mov	x1, x21
  41bf38:	str	xzr, [x21, #48]
  41bf3c:	bl	43599c <argp_usage@@Base+0x3da0>
  41bf40:	cbz	x0, 41c0a8 <wcrtomb@plt+0x17288>
  41bf44:	add	w20, w20, #0x1
  41bf48:	mov	x26, x21
  41bf4c:	b	41be84 <wcrtomb@plt+0x17064>
  41bf50:	mov	w20, wzr
  41bf54:	mov	x26, xzr
  41bf58:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41bf5c:	mov	x0, x19
  41bf60:	str	x26, [x8, #2800]
  41bf64:	bl	4353e4 <argp_usage@@Base+0x37e8>
  41bf68:	ldr	x0, [x23, #2808]
  41bf6c:	adrp	x2, 41c000 <wcrtomb@plt+0x171e0>
  41bf70:	add	x2, x2, #0x444
  41bf74:	mov	w1, w20
  41bf78:	bl	41c324 <wcrtomb@plt+0x17504>
  41bf7c:	ldr	x8, [x24, #832]
  41bf80:	str	x0, [x23, #2808]
  41bf84:	cbz	x8, 41bfac <wcrtomb@plt+0x1718c>
  41bf88:	cbz	x0, 41bfac <wcrtomb@plt+0x1718c>
  41bf8c:	ldr	x8, [x0, #16]
  41bf90:	ldrb	w8, [x8]
  41bf94:	cbnz	w8, 41bfa4 <wcrtomb@plt+0x17184>
  41bf98:	ldr	x0, [x0]
  41bf9c:	cbnz	x0, 41bf8c <wcrtomb@plt+0x1716c>
  41bfa0:	b	41bfac <wcrtomb@plt+0x1718c>
  41bfa4:	ldr	x0, [x0, #56]
  41bfa8:	bl	4147d4 <wcrtomb@plt+0xf9b4>
  41bfac:	add	sp, sp, #0x1b0
  41bfb0:	ldp	x20, x19, [sp, #80]
  41bfb4:	ldp	x22, x21, [sp, #64]
  41bfb8:	ldp	x24, x23, [sp, #48]
  41bfbc:	ldp	x26, x25, [sp, #32]
  41bfc0:	ldr	x28, [sp, #16]
  41bfc4:	ldp	x29, x30, [sp], #96
  41bfc8:	ret
  41bfcc:	ldr	x0, [x20, #16]
  41bfd0:	bl	41ac54 <wcrtomb@plt+0x15e34>
  41bfd4:	add	x0, sp, #0x8
  41bfd8:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  41bfdc:	ldr	x20, [x20]
  41bfe0:	add	w19, w19, #0x1
  41bfe4:	cbz	x20, 41be34 <wcrtomb@plt+0x17014>
  41bfe8:	ldr	x8, [x20, #48]
  41bfec:	cbnz	x8, 41bfdc <wcrtomb@plt+0x171bc>
  41bff0:	ldr	x8, [x20, #56]
  41bff4:	cbnz	x8, 41bfdc <wcrtomb@plt+0x171bc>
  41bff8:	ldrb	w8, [x20, #35]
  41bffc:	tbnz	w8, #4, 41bfdc <wcrtomb@plt+0x171bc>
  41c000:	ldr	w0, [x20, #40]
  41c004:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  41c008:	ldr	x8, [x20, #16]
  41c00c:	ldrb	w8, [x8]
  41c010:	cbz	w8, 41bfdc <wcrtomb@plt+0x171bc>
  41c014:	add	x0, sp, #0x8
  41c018:	bl	422428 <wcrtomb@plt+0x1d608>
  41c01c:	ldr	x0, [x20, #16]
  41c020:	mov	x1, x21
  41c024:	bl	41a52c <wcrtomb@plt+0x1570c>
  41c028:	cbz	w0, 41c038 <wcrtomb@plt+0x17218>
  41c02c:	ldr	x0, [x20, #16]
  41c030:	bl	41ad6c <wcrtomb@plt+0x15f4c>
  41c034:	b	41bfdc <wcrtomb@plt+0x171bc>
  41c038:	ldr	w8, [sp, #112]
  41c03c:	and	w8, w8, #0xf000
  41c040:	cmp	w8, #0x4, lsl #12
  41c044:	b.ne	41bfd4 <wcrtomb@plt+0x171b4>  // b.any
  41c048:	ldr	w8, [x25, #708]
  41c04c:	ldr	w0, [x22, #2240]
  41c050:	ldr	x1, [x20, #16]
  41c054:	orr	w2, w8, #0x4000
  41c058:	bl	404ce0 <openat@plt>
  41c05c:	tbnz	w0, #31, 41bfcc <wcrtomb@plt+0x171ac>
  41c060:	mov	x1, x21
  41c064:	str	w0, [sp, #416]
  41c068:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  41c06c:	ldr	x8, [x20, #16]
  41c070:	cbz	w0, 41c080 <wcrtomb@plt+0x17260>
  41c074:	mov	x0, x8
  41c078:	bl	41ad6c <wcrtomb@plt+0x15f4c>
  41c07c:	b	41bfd4 <wcrtomb@plt+0x171b4>
  41c080:	mov	x0, x8
  41c084:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41c088:	str	x0, [sp, #8]
  41c08c:	ldr	x8, [x20, #48]
  41c090:	add	x0, sp, #0x8
  41c094:	mov	x1, x20
  41c098:	add	x8, x8, #0x1
  41c09c:	str	x8, [x20, #48]
  41c0a0:	bl	41c104 <wcrtomb@plt+0x172e4>
  41c0a4:	b	41bfd4 <wcrtomb@plt+0x171b4>
  41c0a8:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  41c0ac:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41c0b0:	ldr	x8, [x8, #1008]
  41c0b4:	cbz	x8, 41c0bc <wcrtomb@plt+0x1729c>
  41c0b8:	blr	x8
  41c0bc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41c0c0:	add	x1, x1, #0x947
  41c0c4:	b	41c0e0 <wcrtomb@plt+0x172c0>
  41c0c8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41c0cc:	ldr	x8, [x8, #1008]
  41c0d0:	cbz	x8, 41c0d8 <wcrtomb@plt+0x172b8>
  41c0d4:	blr	x8
  41c0d8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  41c0dc:	add	x1, x1, #0x8fd
  41c0e0:	mov	w2, #0x5                   	// #5
  41c0e4:	mov	x0, xzr
  41c0e8:	bl	404bf0 <dcgettext@plt>
  41c0ec:	mov	x2, x0
  41c0f0:	mov	w0, wzr
  41c0f4:	mov	w1, wzr
  41c0f8:	bl	4041f0 <error@plt>
  41c0fc:	mov	w0, #0x2                   	// #2
  41c100:	bl	421198 <wcrtomb@plt+0x1c378>
  41c104:	stp	x29, x30, [sp, #-96]!
  41c108:	stp	x28, x27, [sp, #16]
  41c10c:	stp	x26, x25, [sp, #32]
  41c110:	stp	x24, x23, [sp, #48]
  41c114:	stp	x22, x21, [sp, #64]
  41c118:	stp	x20, x19, [sp, #80]
  41c11c:	mov	x29, sp
  41c120:	sub	sp, sp, #0x1d0
  41c124:	mov	x26, x1
  41c128:	mov	x19, x0
  41c12c:	bl	413c18 <wcrtomb@plt+0xedf8>
  41c130:	str	x0, [x26, #56]
  41c134:	bl	414794 <wcrtomb@plt+0xf974>
  41c138:	cbz	x0, 41c300 <wcrtomb@plt+0x174e0>
  41c13c:	ldr	x27, [x26, #24]
  41c140:	mov	w9, #0x64                  	// #100
  41c144:	mov	x21, x0
  41c148:	add	x8, x27, #0x64
  41c14c:	cmp	x27, #0x64
  41c150:	csel	x24, x9, x8, cc  // cc = lo, ul, last
  41c154:	add	x0, x24, #0x1
  41c158:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41c15c:	ldr	w8, [x26, #40]
  41c160:	ldr	x1, [x26, #16]
  41c164:	mov	x22, x0
  41c168:	str	w8, [sp, #28]
  41c16c:	bl	404b20 <strcpy@plt>
  41c170:	add	x8, x27, x0
  41c174:	ldurb	w8, [x8, #-1]
  41c178:	cmp	w8, #0x2f
  41c17c:	b.eq	41c190 <wcrtomb@plt+0x17370>  // b.none
  41c180:	add	x8, x27, #0x1
  41c184:	mov	w9, #0x2f                  	// #47
  41c188:	strh	w9, [x22, x27]
  41c18c:	mov	x27, x8
  41c190:	ldrb	w25, [x21]
  41c194:	cbz	w25, 41c2f0 <wcrtomb@plt+0x174d0>
  41c198:	add	x8, sp, #0x20
  41c19c:	stp	x26, x19, [sp, #8]
  41c1a0:	mov	x19, xzr
  41c1a4:	mov	x28, xzr
  41c1a8:	add	x8, x8, #0x58
  41c1ac:	str	x8, [sp]
  41c1b0:	b	41c1c4 <wcrtomb@plt+0x173a4>
  41c1b4:	mov	x23, x19
  41c1b8:	add	x21, x25, x21
  41c1bc:	ldrb	w25, [x21, #1]!
  41c1c0:	cbz	w25, 41c2f4 <wcrtomb@plt+0x174d4>
  41c1c4:	mov	x0, x21
  41c1c8:	bl	404190 <strlen@plt>
  41c1cc:	and	w8, w25, #0xff
  41c1d0:	cmp	w8, #0x44
  41c1d4:	mov	x25, x0
  41c1d8:	b.ne	41c1b4 <wcrtomb@plt+0x17394>  // b.any
  41c1dc:	add	x8, x25, x27
  41c1e0:	cmp	x24, x8
  41c1e4:	b.hi	41c208 <wcrtomb@plt+0x173e8>  // b.pmore
  41c1e8:	lsl	x24, x24, #1
  41c1ec:	cbz	x24, 41c320 <wcrtomb@plt+0x17500>
  41c1f0:	cmp	x24, x8
  41c1f4:	b.ls	41c1e8 <wcrtomb@plt+0x173c8>  // b.plast
  41c1f8:	orr	x1, x24, #0x1
  41c1fc:	mov	x0, x22
  41c200:	bl	43d21c <argp_usage@@Base+0xb620>
  41c204:	mov	x22, x0
  41c208:	mov	x20, x27
  41c20c:	add	x0, x22, x27
  41c210:	add	x27, x21, #0x1
  41c214:	mov	x1, x27
  41c218:	bl	404b20 <strcpy@plt>
  41c21c:	ldr	w1, [sp, #28]
  41c220:	mov	x0, x22
  41c224:	mov	w2, wzr
  41c228:	mov	x3, x26
  41c22c:	bl	41b6c4 <wcrtomb@plt+0x168a4>
  41c230:	mov	x26, x0
  41c234:	mov	x23, x0
  41c238:	cbz	x19, 41c244 <wcrtomb@plt+0x17424>
  41c23c:	mov	x23, x19
  41c240:	str	x26, [x28, #80]
  41c244:	add	x0, sp, #0x20
  41c248:	bl	422428 <wcrtomb@plt+0x1d608>
  41c24c:	ldr	x0, [sp, #16]
  41c250:	str	x0, [sp, #424]
  41c254:	ldr	w8, [x0, #408]
  41c258:	tbnz	w8, #31, 41c294 <wcrtomb@plt+0x17474>
  41c25c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41c260:	ldr	w8, [x8, #708]
  41c264:	mov	x1, x27
  41c268:	orr	w2, w8, #0x4000
  41c26c:	bl	40a3e0 <wcrtomb@plt+0x55c0>
  41c270:	mov	x27, x20
  41c274:	tbnz	w0, #31, 41c2ac <wcrtomb@plt+0x1748c>
  41c278:	ldr	x1, [sp]
  41c27c:	str	w0, [sp, #440]
  41c280:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  41c284:	cbz	w0, 41c2b8 <wcrtomb@plt+0x17498>
  41c288:	mov	x0, x22
  41c28c:	bl	41ad6c <wcrtomb@plt+0x15f4c>
  41c290:	b	41c2d8 <wcrtomb@plt+0x174b8>
  41c294:	neg	w19, w8
  41c298:	bl	404d00 <__errno_location@plt>
  41c29c:	str	w19, [x0]
  41c2a0:	mov	w0, #0xffffffff            	// #-1
  41c2a4:	mov	x27, x20
  41c2a8:	tbz	w0, #31, 41c278 <wcrtomb@plt+0x17458>
  41c2ac:	mov	x0, x22
  41c2b0:	bl	41ac54 <wcrtomb@plt+0x15e34>
  41c2b4:	b	41c2d8 <wcrtomb@plt+0x174b8>
  41c2b8:	mov	x0, x22
  41c2bc:	bl	43d39c <argp_usage@@Base+0xb7a0>
  41c2c0:	str	x0, [sp, #32]
  41c2c4:	add	x0, sp, #0x20
  41c2c8:	mov	x1, x26
  41c2cc:	bl	41c104 <wcrtomb@plt+0x172e4>
  41c2d0:	add	x0, sp, #0x20
  41c2d4:	bl	40b818 <wcrtomb@plt+0x69f8>
  41c2d8:	add	x0, sp, #0x20
  41c2dc:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  41c2e0:	mov	x28, x26
  41c2e4:	ldr	x26, [sp, #8]
  41c2e8:	mov	x19, x23
  41c2ec:	b	41c1b8 <wcrtomb@plt+0x17398>
  41c2f0:	mov	x23, xzr
  41c2f4:	mov	x0, x22
  41c2f8:	bl	4049d0 <free@plt>
  41c2fc:	str	x23, [x26, #72]
  41c300:	add	sp, sp, #0x1d0
  41c304:	ldp	x20, x19, [sp, #80]
  41c308:	ldp	x22, x21, [sp, #64]
  41c30c:	ldp	x24, x23, [sp, #48]
  41c310:	ldp	x26, x25, [sp, #32]
  41c314:	ldp	x28, x27, [sp, #16]
  41c318:	ldp	x29, x30, [sp], #96
  41c31c:	ret
  41c320:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  41c324:	stp	x29, x30, [sp, #-16]!
  41c328:	mov	x29, sp
  41c32c:	bl	41d504 <wcrtomb@plt+0x186e4>
  41c330:	cbz	x0, 41c350 <wcrtomb@plt+0x17530>
  41c334:	mov	x8, xzr
  41c338:	mov	x9, x0
  41c33c:	ldr	x10, [x9]
  41c340:	str	x8, [x9, #8]
  41c344:	mov	x8, x9
  41c348:	mov	x9, x10
  41c34c:	cbnz	x10, 41c33c <wcrtomb@plt+0x1751c>
  41c350:	ldp	x29, x30, [sp], #16
  41c354:	ret
  41c358:	stp	x29, x30, [sp, #-16]!
  41c35c:	ldr	x0, [x0, #16]
  41c360:	ldr	x1, [x1, #16]
  41c364:	mov	x29, sp
  41c368:	bl	404920 <strcmp@plt>
  41c36c:	ldp	x29, x30, [sp], #16
  41c370:	ret
  41c374:	stp	x29, x30, [sp, #-16]!
  41c378:	ldr	x0, [x0, #88]
  41c37c:	mov	x29, sp
  41c380:	bl	4350d8 <argp_usage@@Base+0x34dc>
  41c384:	ldp	x29, x30, [sp], #16
  41c388:	ret
  41c38c:	stp	x29, x30, [sp, #-16]!
  41c390:	ldr	x0, [x0, #88]
  41c394:	ldr	x1, [x1, #88]
  41c398:	mov	x29, sp
  41c39c:	bl	404920 <strcmp@plt>
  41c3a0:	cmp	w0, #0x0
  41c3a4:	cset	w0, eq  // eq = none
  41c3a8:	ldp	x29, x30, [sp], #16
  41c3ac:	ret
  41c3b0:	stp	x29, x30, [sp, #-64]!
  41c3b4:	stp	x24, x23, [sp, #16]
  41c3b8:	stp	x22, x21, [sp, #32]
  41c3bc:	stp	x20, x19, [sp, #48]
  41c3c0:	mov	x29, sp
  41c3c4:	cbz	x0, 41c430 <wcrtomb@plt+0x17610>
  41c3c8:	ldr	x8, [x0, #64]
  41c3cc:	ldp	x22, x21, [x1, #16]
  41c3d0:	mov	x19, x0
  41c3d4:	ldr	x20, [x8, #24]
  41c3d8:	ldr	x8, [x19, #24]
  41c3dc:	sub	x8, x8, x20
  41c3e0:	add	x24, x8, x21
  41c3e4:	add	x0, x24, #0x1
  41c3e8:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41c3ec:	mov	x1, x22
  41c3f0:	mov	x23, x0
  41c3f4:	bl	404b20 <strcpy@plt>
  41c3f8:	ldr	x8, [x19, #16]
  41c3fc:	add	x1, x8, x20
  41c400:	bl	4045e0 <strcat@plt>
  41c404:	ldr	x0, [x19, #16]
  41c408:	bl	4049d0 <free@plt>
  41c40c:	ldp	x0, x8, [x19, #56]
  41c410:	stp	x23, x24, [x19, #16]
  41c414:	mov	x2, x20
  41c418:	mov	x3, x22
  41c41c:	ldr	x1, [x8, #16]
  41c420:	mov	x4, x21
  41c424:	bl	413b34 <wcrtomb@plt+0xed14>
  41c428:	ldr	x19, [x19, #80]
  41c42c:	cbnz	x19, 41c3d8 <wcrtomb@plt+0x175b8>
  41c430:	ldp	x20, x19, [sp, #48]
  41c434:	ldp	x22, x21, [sp, #32]
  41c438:	ldp	x24, x23, [sp, #16]
  41c43c:	ldp	x29, x30, [sp], #64
  41c440:	ret
  41c444:	stp	x29, x30, [sp, #-16]!
  41c448:	ldr	x8, [x1, #48]
  41c44c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41c450:	ldr	x9, [x9, #760]
  41c454:	ldr	x10, [x0, #48]
  41c458:	cmp	x8, #0x0
  41c45c:	cset	w11, ne  // ne = any
  41c460:	cmp	x8, x9
  41c464:	cset	w8, cs  // cs = hs, nlast
  41c468:	cmp	x10, #0x0
  41c46c:	cset	w12, ne  // ne = any
  41c470:	cmp	x10, x9
  41c474:	cset	w10, cs  // cs = hs, nlast
  41c478:	cmp	x9, #0x0
  41c47c:	csel	w8, w11, w8, eq  // eq = none
  41c480:	csel	w9, w12, w10, eq  // eq = none
  41c484:	subs	w8, w8, w9
  41c488:	mov	x29, sp
  41c48c:	b.ne	41c4a0 <wcrtomb@plt+0x17680>  // b.any
  41c490:	ldr	x0, [x0, #16]
  41c494:	ldr	x1, [x1, #16]
  41c498:	bl	404920 <strcmp@plt>
  41c49c:	mov	w8, w0
  41c4a0:	mov	w0, w8
  41c4a4:	ldp	x29, x30, [sp], #16
  41c4a8:	ret
  41c4ac:	stp	x29, x30, [sp, #-48]!
  41c4b0:	stp	x22, x21, [sp, #16]
  41c4b4:	stp	x20, x19, [sp, #32]
  41c4b8:	mov	x19, x0
  41c4bc:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  41c4c0:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41c4c4:	mov	x29, sp
  41c4c8:	b	41c4e8 <wcrtomb@plt+0x176c8>
  41c4cc:	bl	41b4a4 <wcrtomb@plt+0x16684>
  41c4d0:	ldr	x8, [x21, #2808]
  41c4d4:	ldr	x8, [x8, #48]
  41c4d8:	cmp	x8, #0x0
  41c4dc:	cset	w8, eq  // eq = none
  41c4e0:	csel	x0, x22, xzr, eq  // eq = none
  41c4e4:	tbz	w8, #0, 41c51c <wcrtomb@plt+0x176fc>
  41c4e8:	mov	x22, x0
  41c4ec:	mov	x0, x19
  41c4f0:	bl	41b9bc <wcrtomb@plt+0x16b9c>
  41c4f4:	mov	w8, wzr
  41c4f8:	cbnz	x0, 41c4e4 <wcrtomb@plt+0x176c4>
  41c4fc:	ldrb	w9, [x20, #640]
  41c500:	cbz	w9, 41c4e4 <wcrtomb@plt+0x176c4>
  41c504:	ldr	x9, [x21, #2808]
  41c508:	cbz	x9, 41c4e4 <wcrtomb@plt+0x176c4>
  41c50c:	ldr	x8, [x9, #48]
  41c510:	cbnz	x8, 41c4cc <wcrtomb@plt+0x176ac>
  41c514:	mov	x0, xzr
  41c518:	b	41c4e4 <wcrtomb@plt+0x176c4>
  41c51c:	ldp	x20, x19, [sp, #32]
  41c520:	ldp	x22, x21, [sp, #16]
  41c524:	ldp	x29, x30, [sp], #48
  41c528:	ret
  41c52c:	stp	x29, x30, [sp, #-32]!
  41c530:	str	x19, [sp, #16]
  41c534:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  41c538:	ldr	x8, [x19, #16]
  41c53c:	mov	x29, sp
  41c540:	cbnz	x8, 41c550 <wcrtomb@plt+0x17730>
  41c544:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41c548:	ldr	x8, [x8, #2808]
  41c54c:	str	x8, [x19, #16]
  41c550:	ldr	x8, [x19, #16]
  41c554:	cmp	x8, #0x0
  41c558:	cset	w9, eq  // eq = none
  41c55c:	cbnz	x8, 41c578 <wcrtomb@plt+0x17758>
  41c560:	b	41c590 <wcrtomb@plt+0x17770>
  41c564:	ldr	x8, [x8]
  41c568:	cmp	x8, #0x0
  41c56c:	cset	w9, eq  // eq = none
  41c570:	str	x8, [x19, #16]
  41c574:	cbz	x8, 41c590 <wcrtomb@plt+0x17770>
  41c578:	ldr	x10, [x8, #48]
  41c57c:	cbnz	x10, 41c564 <wcrtomb@plt+0x17744>
  41c580:	ldr	x10, [x8, #16]
  41c584:	ldrb	w10, [x10]
  41c588:	cbz	w10, 41c564 <wcrtomb@plt+0x17744>
  41c58c:	tbz	w9, #0, 41c5a0 <wcrtomb@plt+0x17780>
  41c590:	mov	x0, xzr
  41c594:	ldr	x19, [sp, #16]
  41c598:	ldp	x29, x30, [sp], #32
  41c59c:	ret
  41c5a0:	ldr	x9, [x8, #48]
  41c5a4:	ldr	w0, [x8, #40]
  41c5a8:	add	x9, x9, #0x1
  41c5ac:	str	x9, [x8, #48]
  41c5b0:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  41c5b4:	ldr	x0, [x19, #16]
  41c5b8:	b	41c594 <wcrtomb@plt+0x17774>
  41c5bc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41c5c0:	ldr	x8, [x8, #2808]
  41c5c4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41c5c8:	str	xzr, [x9, #16]
  41c5cc:	cbz	x8, 41c5dc <wcrtomb@plt+0x177bc>
  41c5d0:	str	xzr, [x8, #48]
  41c5d4:	ldr	x8, [x8]
  41c5d8:	cbnz	x8, 41c5d0 <wcrtomb@plt+0x177b0>
  41c5dc:	ret
  41c5e0:	stp	x29, x30, [sp, #-64]!
  41c5e4:	stp	x24, x23, [sp, #16]
  41c5e8:	stp	x22, x21, [sp, #32]
  41c5ec:	stp	x20, x19, [sp, #48]
  41c5f0:	mov	x29, sp
  41c5f4:	mov	x19, x1
  41c5f8:	mov	x20, x0
  41c5fc:	bl	404190 <strlen@plt>
  41c600:	mov	x21, x0
  41c604:	mov	x0, x19
  41c608:	bl	404190 <strlen@plt>
  41c60c:	add	x22, x0, #0x1
  41c610:	cbz	x21, 41c628 <wcrtomb@plt+0x17808>
  41c614:	add	x8, x21, x20
  41c618:	ldurb	w8, [x8, #-1]
  41c61c:	cmp	w8, #0x2f
  41c620:	cset	w24, ne  // ne = any
  41c624:	b	41c62c <wcrtomb@plt+0x1780c>
  41c628:	mov	x24, xzr
  41c62c:	add	x8, x22, x21
  41c630:	add	x0, x8, x24
  41c634:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41c638:	mov	x1, x20
  41c63c:	mov	x2, x21
  41c640:	mov	x23, x0
  41c644:	bl	404110 <memcpy@plt>
  41c648:	add	x8, x23, x21
  41c64c:	mov	w9, #0x2f                  	// #47
  41c650:	add	x0, x8, x24
  41c654:	mov	x1, x19
  41c658:	mov	x2, x22
  41c65c:	strb	w9, [x8]
  41c660:	bl	404110 <memcpy@plt>
  41c664:	mov	x0, x23
  41c668:	ldp	x20, x19, [sp, #48]
  41c66c:	ldp	x22, x21, [sp, #32]
  41c670:	ldp	x24, x23, [sp, #16]
  41c674:	ldp	x29, x30, [sp], #64
  41c678:	ret
  41c67c:	sub	x9, x0, #0x1
  41c680:	ldrb	w8, [x9, #1]!
  41c684:	cmp	w8, #0x2f
  41c688:	b.eq	41c680 <wcrtomb@plt+0x17860>  // b.none
  41c68c:	b	41c69c <wcrtomb@plt+0x1787c>
  41c690:	mov	w11, #0x1                   	// #1
  41c694:	mov	x9, x10
  41c698:	tbz	w11, #0, 41c6dc <wcrtomb@plt+0x178bc>
  41c69c:	ldrb	w10, [x9]
  41c6a0:	cbz	w10, 41c6e4 <wcrtomb@plt+0x178c4>
  41c6a4:	cmp	w10, #0x2f
  41c6a8:	add	x10, x9, #0x1
  41c6ac:	b.ne	41c690 <wcrtomb@plt+0x17870>  // b.any
  41c6b0:	subs	x1, x1, #0x1
  41c6b4:	b.eq	41c6d0 <wcrtomb@plt+0x178b0>  // b.none
  41c6b8:	ldrb	w10, [x9, #1]!
  41c6bc:	cmp	w10, #0x2f
  41c6c0:	b.eq	41c6b8 <wcrtomb@plt+0x17898>  // b.none
  41c6c4:	mov	w11, #0x1                   	// #1
  41c6c8:	mov	x10, x9
  41c6cc:	b	41c694 <wcrtomb@plt+0x17874>
  41c6d0:	mov	w11, wzr
  41c6d4:	sub	x8, x10, x0
  41c6d8:	b	41c694 <wcrtomb@plt+0x17874>
  41c6dc:	mov	x0, x8
  41c6e0:	ret
  41c6e4:	mov	x0, #0xffffffffffffffff    	// #-1
  41c6e8:	ret
  41c6ec:	ldrb	w8, [x0]
  41c6f0:	cmp	w8, #0x2e
  41c6f4:	b.ne	41c714 <wcrtomb@plt+0x178f4>  // b.any
  41c6f8:	ldrb	w8, [x0, #1]
  41c6fc:	cmp	w8, #0x2e
  41c700:	b.ne	41c714 <wcrtomb@plt+0x178f4>  // b.any
  41c704:	ldrb	w8, [x0, #2]
  41c708:	cbz	w8, 41c72c <wcrtomb@plt+0x1790c>
  41c70c:	cmp	w8, #0x2f
  41c710:	b.eq	41c72c <wcrtomb@plt+0x1790c>  // b.none
  41c714:	ldrb	w8, [x0], #1
  41c718:	cmp	w8, #0x2f
  41c71c:	b.eq	41c6ec <wcrtomb@plt+0x178cc>  // b.none
  41c720:	cbnz	w8, 41c714 <wcrtomb@plt+0x178f4>
  41c724:	mov	w0, wzr
  41c728:	ret
  41c72c:	mov	w0, #0x1                   	// #1
  41c730:	ret
  41c734:	stp	x29, x30, [sp, #-32]!
  41c738:	stp	x20, x19, [sp, #16]
  41c73c:	cmp	w0, #0x100
  41c740:	mov	x19, x1
  41c744:	mov	x29, sp
  41c748:	b.eq	41c76c <wcrtomb@plt+0x1794c>  // b.none
  41c74c:	mov	w20, w0
  41c750:	cmp	w0, #0x54
  41c754:	b.eq	41c778 <wcrtomb@plt+0x17958>  // b.none
  41c758:	cmp	w20, #0x43
  41c75c:	b.ne	41c784 <wcrtomb@plt+0x17964>  // b.any
  41c760:	mov	x0, x19
  41c764:	bl	41c7b4 <wcrtomb@plt+0x17994>
  41c768:	b	41c79c <wcrtomb@plt+0x1797c>
  41c76c:	mov	x0, x19
  41c770:	bl	41b284 <wcrtomb@plt+0x16464>
  41c774:	b	41c79c <wcrtomb@plt+0x1797c>
  41c778:	mov	x0, x19
  41c77c:	bl	41c7e0 <wcrtomb@plt+0x179c0>
  41c780:	b	41c79c <wcrtomb@plt+0x1797c>
  41c784:	mov	w0, w20
  41c788:	bl	41c820 <wcrtomb@plt+0x17a00>
  41c78c:	tbz	w0, #0, 41c7ac <wcrtomb@plt+0x1798c>
  41c790:	mov	w0, w20
  41c794:	mov	x1, x19
  41c798:	bl	41c83c <wcrtomb@plt+0x17a1c>
  41c79c:	mov	w0, wzr
  41c7a0:	ldp	x20, x19, [sp, #16]
  41c7a4:	ldp	x29, x30, [sp], #32
  41c7a8:	ret
  41c7ac:	mov	w0, #0x7                   	// #7
  41c7b0:	b	41c7a0 <wcrtomb@plt+0x17980>
  41c7b4:	stp	x29, x30, [sp, #-32]!
  41c7b8:	str	x19, [sp, #16]
  41c7bc:	mov	x29, sp
  41c7c0:	mov	x19, x0
  41c7c4:	bl	41b2bc <wcrtomb@plt+0x1649c>
  41c7c8:	str	x19, [x0, #24]
  41c7cc:	ldr	x19, [sp, #16]
  41c7d0:	mov	w8, #0x1                   	// #1
  41c7d4:	str	w8, [x0, #16]
  41c7d8:	ldp	x29, x30, [sp], #32
  41c7dc:	ret
  41c7e0:	stp	x29, x30, [sp, #-32]!
  41c7e4:	str	x19, [sp, #16]
  41c7e8:	mov	x29, sp
  41c7ec:	mov	x19, x0
  41c7f0:	bl	41b2bc <wcrtomb@plt+0x1649c>
  41c7f4:	mov	w8, #0x2                   	// #2
  41c7f8:	stp	x19, xzr, [x0, #24]
  41c7fc:	str	xzr, [x0, #48]
  41c800:	str	w8, [x0, #16]
  41c804:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41c808:	ldr	x9, [x8, #8]
  41c80c:	ldr	x19, [sp, #16]
  41c810:	add	x9, x9, #0x1
  41c814:	str	x9, [x8, #8]
  41c818:	ldp	x29, x30, [sp], #32
  41c81c:	ret
  41c820:	stp	x29, x30, [sp, #-16]!
  41c824:	mov	x29, sp
  41c828:	bl	41c870 <wcrtomb@plt+0x17a50>
  41c82c:	cmp	x0, #0x0
  41c830:	cset	w0, ne  // ne = any
  41c834:	ldp	x29, x30, [sp], #16
  41c838:	ret
  41c83c:	stp	x29, x30, [sp, #-32]!
  41c840:	stp	x20, x19, [sp, #16]
  41c844:	mov	x29, sp
  41c848:	mov	x19, x1
  41c84c:	mov	w20, w0
  41c850:	bl	41b2bc <wcrtomb@plt+0x1649c>
  41c854:	mov	w8, #0x4                   	// #4
  41c858:	str	w20, [x0, #24]
  41c85c:	str	w8, [x0, #16]
  41c860:	str	x19, [x0, #32]
  41c864:	ldp	x20, x19, [sp, #16]
  41c868:	ldp	x29, x30, [sp], #32
  41c86c:	ret
  41c870:	mov	w8, w0
  41c874:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41c878:	add	x0, x0, #0x940
  41c87c:	ldr	x9, [x0]
  41c880:	cbnz	x9, 41c894 <wcrtomb@plt+0x17a74>
  41c884:	ldr	w9, [x0, #8]
  41c888:	cbnz	w9, 41c894 <wcrtomb@plt+0x17a74>
  41c88c:	ldr	x9, [x0, #32]
  41c890:	cbz	x9, 41c8b0 <wcrtomb@plt+0x17a90>
  41c894:	ldr	w9, [x0, #8]
  41c898:	cmp	w9, w8
  41c89c:	b.eq	41c8b4 <wcrtomb@plt+0x17a94>  // b.none
  41c8a0:	add	x0, x0, #0x30
  41c8a4:	ldr	x9, [x0]
  41c8a8:	cbnz	x9, 41c894 <wcrtomb@plt+0x17a74>
  41c8ac:	b	41c884 <wcrtomb@plt+0x17a64>
  41c8b0:	mov	x0, xzr
  41c8b4:	ret
  41c8b8:	stp	x29, x30, [sp, #-32]!
  41c8bc:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41c8c0:	str	x19, [sp, #16]
  41c8c4:	ldr	x19, [x9, #2816]
  41c8c8:	mov	x29, sp
  41c8cc:	ldr	x8, [x19]
  41c8d0:	str	x8, [x9, #2816]
  41c8d4:	cbz	x8, 41c8dc <wcrtomb@plt+0x17abc>
  41c8d8:	str	xzr, [x8, #8]
  41c8dc:	ldr	w8, [x19, #16]
  41c8e0:	cmp	w8, #0x4
  41c8e4:	b.eq	41c8f8 <wcrtomb@plt+0x17ad8>  // b.none
  41c8e8:	cmp	w8, #0x3
  41c8ec:	b.eq	41c920 <wcrtomb@plt+0x17b00>  // b.none
  41c8f0:	cmp	w8, #0x1
  41c8f4:	b.ne	41c91c <wcrtomb@plt+0x17afc>  // b.any
  41c8f8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41c8fc:	ldr	w8, [x8, #860]
  41c900:	cmp	w8, #0x8
  41c904:	b.eq	41c910 <wcrtomb@plt+0x17af0>  // b.none
  41c908:	cmp	w8, #0x3
  41c90c:	b.ne	41c928 <wcrtomb@plt+0x17b08>  // b.any
  41c910:	mov	x0, x19
  41c914:	bl	41cff4 <wcrtomb@plt+0x181d4>
  41c918:	b	41c928 <wcrtomb@plt+0x17b08>
  41c91c:	bl	41d014 <wcrtomb@plt+0x181f4>
  41c920:	mov	x0, x19
  41c924:	bl	4049d0 <free@plt>
  41c928:	ldr	x19, [sp, #16]
  41c92c:	ldp	x29, x30, [sp], #32
  41c930:	ret
  41c934:	stp	x29, x30, [sp, #-32]!
  41c938:	stp	x20, x19, [sp, #16]
  41c93c:	ldr	x8, [x0, #48]
  41c940:	mov	x19, x0
  41c944:	mov	x29, sp
  41c948:	cbnz	x8, 41c9cc <wcrtomb@plt+0x17bac>
  41c94c:	ldr	x20, [x19, #24]
  41c950:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  41c954:	add	x1, x1, #0xabd
  41c958:	mov	x0, x20
  41c95c:	bl	404920 <strcmp@plt>
  41c960:	cbz	w0, 41c990 <wcrtomb@plt+0x17b70>
  41c964:	mov	x0, x20
  41c968:	bl	41d04c <wcrtomb@plt+0x1822c>
  41c96c:	cbnz	w0, 41ca94 <wcrtomb@plt+0x17c74>
  41c970:	ldr	x0, [x19, #24]
  41c974:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  41c978:	add	x1, x1, #0x133
  41c97c:	bl	4044c0 <fopen@plt>
  41c980:	str	x0, [x19, #48]
  41c984:	cbnz	x0, 41c9a8 <wcrtomb@plt+0x17b88>
  41c988:	ldr	x0, [x19, #24]
  41c98c:	bl	428180 <wcrtomb@plt+0x23360>
  41c990:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  41c994:	add	x0, x0, #0x101
  41c998:	bl	421124 <wcrtomb@plt+0x1c304>
  41c99c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41c9a0:	ldr	x8, [x8, #1152]
  41c9a4:	str	x8, [x19, #48]
  41c9a8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41c9ac:	ldrb	w8, [x8, #2880]
  41c9b0:	mov	w9, #0xa                   	// #10
  41c9b4:	cmp	w8, #0x0
  41c9b8:	csel	w8, wzr, w9, ne  // ne = any
  41c9bc:	str	w8, [x19, #40]
  41c9c0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41c9c4:	ldrb	w8, [x8, #2881]
  41c9c8:	strb	w8, [x19, #44]
  41c9cc:	mov	x0, x19
  41c9d0:	bl	41d17c <wcrtomb@plt+0x1835c>
  41c9d4:	cbz	w0, 41ca28 <wcrtomb@plt+0x17c08>
  41c9d8:	cmp	w0, #0x1
  41c9dc:	b.eq	41ca74 <wcrtomb@plt+0x17c54>  // b.none
  41c9e0:	cmp	w0, #0x2
  41c9e4:	b.ne	41c9cc <wcrtomb@plt+0x17bac>  // b.any
  41c9e8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41c9ec:	ldrb	w8, [x8, #449]
  41c9f0:	tbz	w8, #1, 41ca24 <wcrtomb@plt+0x17c04>
  41c9f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41c9f8:	ldr	x8, [x8, #1008]
  41c9fc:	cbz	x8, 41ca04 <wcrtomb@plt+0x17be4>
  41ca00:	blr	x8
  41ca04:	ldr	x0, [x19, #24]
  41ca08:	bl	43beac <argp_usage@@Base+0xa2b0>
  41ca0c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x14da0>
  41ca10:	mov	x3, x0
  41ca14:	add	x2, x2, #0x104
  41ca18:	mov	w0, wzr
  41ca1c:	mov	w1, wzr
  41ca20:	bl	4041f0 <error@plt>
  41ca24:	str	wzr, [x19, #40]
  41ca28:	ldrb	w8, [x19, #44]
  41ca2c:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ca30:	cbnz	w8, 41ca58 <wcrtomb@plt+0x17c38>
  41ca34:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ca38:	ldrb	w8, [x8, #756]
  41ca3c:	cbz	w8, 41ca48 <wcrtomb@plt+0x17c28>
  41ca40:	ldr	x0, [x20, #2760]
  41ca44:	bl	419728 <wcrtomb@plt+0x14908>
  41ca48:	ldr	x0, [x20, #2760]
  41ca4c:	mov	x1, x19
  41ca50:	bl	41d2a4 <wcrtomb@plt+0x18484>
  41ca54:	cbz	w0, 41caa8 <wcrtomb@plt+0x17c88>
  41ca58:	ldr	x8, [x20, #2760]
  41ca5c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ca60:	add	x9, x9, #0xb18
  41ca64:	mov	w0, wzr
  41ca68:	str	wzr, [x9]
  41ca6c:	str	x8, [x9, #8]
  41ca70:	b	41ca9c <wcrtomb@plt+0x17c7c>
  41ca74:	ldr	x0, [x19, #24]
  41ca78:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  41ca7c:	add	x1, x1, #0xabd
  41ca80:	bl	404920 <strcmp@plt>
  41ca84:	cbz	w0, 41ca90 <wcrtomb@plt+0x17c70>
  41ca88:	ldr	x0, [x19, #48]
  41ca8c:	bl	404470 <fclose@plt>
  41ca90:	str	xzr, [x19, #48]
  41ca94:	bl	41c8b8 <wcrtomb@plt+0x17a98>
  41ca98:	mov	w0, #0x1                   	// #1
  41ca9c:	ldp	x20, x19, [sp, #16]
  41caa0:	ldp	x29, x30, [sp], #32
  41caa4:	ret
  41caa8:	bl	41b354 <wcrtomb@plt+0x16534>
  41caac:	b	41ca98 <wcrtomb@plt+0x17c78>
  41cab0:	stp	x29, x30, [sp, #-48]!
  41cab4:	stp	x20, x19, [sp, #32]
  41cab8:	ldr	x19, [x0, #24]
  41cabc:	str	x21, [sp, #16]
  41cac0:	mov	x29, sp
  41cac4:	mov	x0, x19
  41cac8:	bl	404190 <strlen@plt>
  41cacc:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cad0:	ldr	x8, [x21, #2768]
  41cad4:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cad8:	cmp	x8, x0
  41cadc:	b.cs	41cb10 <wcrtomb@plt+0x17cf0>  // b.hs, b.nlast
  41cae0:	ldr	x8, [x21, #2768]
  41cae4:	lsl	x8, x8, #1
  41cae8:	cbz	x8, 41cb34 <wcrtomb@plt+0x17d14>
  41caec:	cmp	x8, x0
  41caf0:	b.cc	41cae4 <wcrtomb@plt+0x17cc4>  // b.lo, b.ul, b.last
  41caf4:	ldr	x0, [x20, #2760]
  41caf8:	str	x8, [x21, #2768]
  41cafc:	bl	4049d0 <free@plt>
  41cb00:	ldr	x8, [x21, #2768]
  41cb04:	add	x0, x8, #0x2
  41cb08:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41cb0c:	str	x0, [x20, #2760]
  41cb10:	ldr	x0, [x20, #2760]
  41cb14:	mov	x1, x19
  41cb18:	bl	404b20 <strcpy@plt>
  41cb1c:	ldr	x0, [x20, #2760]
  41cb20:	bl	41d454 <wcrtomb@plt+0x18634>
  41cb24:	ldp	x20, x19, [sp, #32]
  41cb28:	ldr	x21, [sp, #16]
  41cb2c:	ldp	x29, x30, [sp], #48
  41cb30:	ret
  41cb34:	str	x8, [x21, #2768]
  41cb38:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  41cb3c:	stp	x29, x30, [sp, #-32]!
  41cb40:	sub	w8, w0, #0x58
  41cb44:	cmp	w8, #0xc4
  41cb48:	stp	x20, x19, [sp, #16]
  41cb4c:	mov	x29, sp
  41cb50:	b.hi	41ce18 <wcrtomb@plt+0x17ff8>  // b.pmore
  41cb54:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x13da0>
  41cb58:	add	x9, x9, #0x705
  41cb5c:	adr	x10, 41cb70 <wcrtomb@plt+0x17d50>
  41cb60:	ldrb	w11, [x9, x8]
  41cb64:	add	x10, x10, x11, lsl #2
  41cb68:	mov	x19, x1
  41cb6c:	br	x10
  41cb70:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41cb74:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cb78:	ldr	x1, [x8, #64]
  41cb7c:	ldr	w8, [x9, #2788]
  41cb80:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cb84:	ldr	w9, [x9, #2796]
  41cb88:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  41cb8c:	ldr	w10, [x10, #676]
  41cb90:	cmp	w8, #0x1
  41cb94:	cset	w8, ne  // ne = any
  41cb98:	orr	w8, w9, w8, lsl #28
  41cb9c:	adrp	x0, 432000 <argp_usage@@Base+0x404>
  41cba0:	orr	w3, w8, w10
  41cba4:	add	x0, x0, #0xc64
  41cba8:	mov	w4, #0xa                   	// #10
  41cbac:	mov	x2, x19
  41cbb0:	bl	43312c <argp_usage@@Base+0x1530>
  41cbb4:	cbz	w0, 41ce0c <wcrtomb@plt+0x17fec>
  41cbb8:	bl	404d00 <__errno_location@plt>
  41cbbc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41cbc0:	ldr	x8, [x8, #1008]
  41cbc4:	ldr	w20, [x0]
  41cbc8:	cbz	x8, 41cbd0 <wcrtomb@plt+0x17db0>
  41cbcc:	blr	x8
  41cbd0:	mov	x0, x19
  41cbd4:	bl	43beac <argp_usage@@Base+0xa2b0>
  41cbd8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  41cbdc:	mov	x3, x0
  41cbe0:	add	x2, x2, #0x386
  41cbe4:	mov	w0, wzr
  41cbe8:	mov	w1, w20
  41cbec:	bl	4041f0 <error@plt>
  41cbf0:	bl	40dda4 <wcrtomb@plt+0x8f84>
  41cbf4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cbf8:	ldr	w9, [x8, #2796]
  41cbfc:	and	w9, w9, #0xfffffffe
  41cc00:	str	w9, [x8, #2796]
  41cc04:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cc08:	mov	w1, #0x2                   	// #2
  41cc0c:	b	41ccb8 <wcrtomb@plt+0x17e98>
  41cc10:	bl	40e258 <wcrtomb@plt+0x9438>
  41cc14:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cc18:	mov	w1, #0x1                   	// #1
  41cc1c:	b	41cca0 <wcrtomb@plt+0x17e80>
  41cc20:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cc24:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cc28:	strb	wzr, [x8, #2880]
  41cc2c:	strb	wzr, [x9, #2881]
  41cc30:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cc34:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cc38:	ldr	w9, [x8, #2796]
  41cc3c:	orr	w9, w9, #0x40000000
  41cc40:	str	w9, [x8, #2796]
  41cc44:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cc48:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cc4c:	mov	w9, #0x1                   	// #1
  41cc50:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cc54:	strb	w9, [x8, #2880]
  41cc58:	strb	w9, [x10, #2881]
  41cc5c:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cc60:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41cc64:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cc68:	ldr	x0, [x8, #64]
  41cc6c:	ldr	w8, [x9, #2788]
  41cc70:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cc74:	ldr	w9, [x9, #2796]
  41cc78:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  41cc7c:	ldr	w10, [x10, #676]
  41cc80:	cmp	w8, #0x1
  41cc84:	cset	w8, ne  // ne = any
  41cc88:	orr	w8, w9, w8, lsl #28
  41cc8c:	orr	w2, w8, w10
  41cc90:	mov	x1, x19
  41cc94:	bl	432c64 <argp_usage@@Base+0x1068>
  41cc98:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cc9c:	mov	w1, #0x2                   	// #2
  41cca0:	mov	x0, x19
  41cca4:	bl	40de1c <wcrtomb@plt+0x8ffc>
  41cca8:	b	41ce0c <wcrtomb@plt+0x17fec>
  41ccac:	mov	w1, #0x1                   	// #1
  41ccb0:	b	41ccb8 <wcrtomb@plt+0x17e98>
  41ccb4:	mov	w1, #0x3                   	// #3
  41ccb8:	mov	x0, x19
  41ccbc:	mov	x2, xzr
  41ccc0:	bl	40a218 <wcrtomb@plt+0x53f8>
  41ccc4:	b	41ce0c <wcrtomb@plt+0x17fec>
  41ccc8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cccc:	ldr	w9, [x8, #2796]
  41ccd0:	orr	w9, w9, #0x10
  41ccd4:	str	w9, [x8, #2796]
  41ccd8:	b	41ce0c <wcrtomb@plt+0x17fec>
  41ccdc:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  41cce0:	add	x0, x0, #0x7d0
  41cce4:	mov	w1, #0x10000000            	// #268435456
  41cce8:	b	41cd80 <wcrtomb@plt+0x17f60>
  41ccec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ccf0:	mov	w9, #0x8                   	// #8
  41ccf4:	str	w9, [x8, #676]
  41ccf8:	b	41ce0c <wcrtomb@plt+0x17fec>
  41ccfc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41cd00:	strb	wzr, [x8, #756]
  41cd04:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cd08:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cd0c:	strb	wzr, [x8, #2881]
  41cd10:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cd14:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  41cd18:	adrp	x2, 40a000 <wcrtomb@plt+0x51e0>
  41cd1c:	add	x0, x0, #0xccd
  41cd20:	add	x2, x2, #0x480
  41cd24:	mov	w1, #0x2                   	// #2
  41cd28:	bl	40a218 <wcrtomb@plt+0x53f8>
  41cd2c:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cd30:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41cd34:	str	wzr, [x8, #676]
  41cd38:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cd3c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  41cd40:	adrp	x2, 40a000 <wcrtomb@plt+0x51e0>
  41cd44:	add	x0, x0, #0xccd
  41cd48:	add	x2, x2, #0x480
  41cd4c:	mov	w1, #0x1                   	// #1
  41cd50:	bl	40a218 <wcrtomb@plt+0x53f8>
  41cd54:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cd58:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  41cd5c:	adrp	x2, 40a000 <wcrtomb@plt+0x51e0>
  41cd60:	add	x0, x0, #0xccd
  41cd64:	add	x2, x2, #0x480
  41cd68:	mov	w1, #0x3                   	// #3
  41cd6c:	bl	40a218 <wcrtomb@plt+0x53f8>
  41cd70:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cd74:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  41cd78:	add	x0, x0, #0x7f0
  41cd7c:	mov	w1, wzr
  41cd80:	bl	41d49c <wcrtomb@plt+0x1867c>
  41cd84:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cd88:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cd8c:	ldr	w9, [x8, #2796]
  41cd90:	orr	w9, w9, #0x1
  41cd94:	str	w9, [x8, #2796]
  41cd98:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cd9c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cda0:	ldr	w9, [x8, #2796]
  41cda4:	and	w9, w9, #0xffffffef
  41cda8:	str	w9, [x8, #2796]
  41cdac:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cdb0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41cdb4:	mov	w9, #0x1                   	// #1
  41cdb8:	strb	w9, [x8, #756]
  41cdbc:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cdc0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cdc4:	ldr	w9, [x8, #2796]
  41cdc8:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cdcc:	mov	w11, #0x1                   	// #1
  41cdd0:	strb	w11, [x10, #2792]
  41cdd4:	and	w9, w9, #0xbfffffff
  41cdd8:	str	w9, [x8, #2796]
  41cddc:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cde0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cde4:	mov	w9, #0x1                   	// #1
  41cde8:	str	w9, [x8, #2788]
  41cdec:	b	41ce0c <wcrtomb@plt+0x17fec>
  41cdf0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41cdf4:	mov	w9, #0x2                   	// #2
  41cdf8:	str	w9, [x8, #2788]
  41cdfc:	b	41ce0c <wcrtomb@plt+0x17fec>
  41ce00:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ce04:	mov	w9, #0x1                   	// #1
  41ce08:	strb	w9, [x8, #2881]
  41ce0c:	ldp	x20, x19, [sp, #16]
  41ce10:	ldp	x29, x30, [sp], #32
  41ce14:	ret
  41ce18:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ce1c:	ldr	x8, [x8, #1008]
  41ce20:	mov	w19, w0
  41ce24:	cbz	x8, 41ce2c <wcrtomb@plt+0x1800c>
  41ce28:	blr	x8
  41ce2c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x14da0>
  41ce30:	add	x2, x2, #0x170
  41ce34:	mov	w0, wzr
  41ce38:	mov	w1, wzr
  41ce3c:	mov	w3, w19
  41ce40:	bl	4041f0 <error@plt>
  41ce44:	bl	40dda4 <wcrtomb@plt+0x8f84>
  41ce48:	stp	x29, x30, [sp, #-96]!
  41ce4c:	stp	x20, x19, [sp, #80]
  41ce50:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  41ce54:	ldr	x8, [x19, #24]
  41ce58:	str	x27, [sp, #16]
  41ce5c:	stp	x26, x25, [sp, #32]
  41ce60:	stp	x24, x23, [sp, #48]
  41ce64:	stp	x22, x21, [sp, #64]
  41ce68:	mov	x29, sp
  41ce6c:	cbz	x8, 41cfd8 <wcrtomb@plt+0x181b8>
  41ce70:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  41ce74:	ldr	x8, [x24, #1008]
  41ce78:	cbz	x8, 41ce80 <wcrtomb@plt+0x18060>
  41ce7c:	blr	x8
  41ce80:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41ce84:	add	x1, x1, #0x21f
  41ce88:	mov	w2, #0x5                   	// #5
  41ce8c:	mov	x0, xzr
  41ce90:	bl	404bf0 <dcgettext@plt>
  41ce94:	mov	x2, x0
  41ce98:	mov	w0, wzr
  41ce9c:	mov	w1, wzr
  41cea0:	bl	4041f0 <error@plt>
  41cea4:	ldr	x8, [x19, #24]
  41cea8:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ceac:	mov	w9, #0x2                   	// #2
  41ceb0:	str	w9, [x25, #3456]
  41ceb4:	mov	x26, x8
  41ceb8:	ldr	x8, [x8, #8]
  41cebc:	cbnz	x8, 41ceb4 <wcrtomb@plt+0x18094>
  41cec0:	cbz	x26, 41cfd4 <wcrtomb@plt+0x181b4>
  41cec4:	adrp	x19, 453000 <_obstack_memory_used@@Base+0x14da0>
  41cec8:	adrp	x20, 453000 <_obstack_memory_used@@Base+0x14da0>
  41cecc:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x14da0>
  41ced0:	add	x19, x19, #0x318
  41ced4:	add	x20, x20, #0x302
  41ced8:	mov	w27, #0x2                   	// #2
  41cedc:	add	x21, x21, #0x2ee
  41cee0:	b	41cf24 <wcrtomb@plt+0x18104>
  41cee4:	mov	w2, #0x5                   	// #5
  41cee8:	mov	x0, xzr
  41ceec:	mov	x1, x21
  41cef0:	bl	404bf0 <dcgettext@plt>
  41cef4:	ldr	x8, [x26, #24]
  41cef8:	mov	x22, x0
  41cefc:	mov	x0, x8
  41cf00:	bl	43c05c <argp_usage@@Base+0xa460>
  41cf04:	mov	x3, x0
  41cf08:	mov	w0, wzr
  41cf0c:	mov	w1, wzr
  41cf10:	mov	x2, x22
  41cf14:	bl	4041f0 <error@plt>
  41cf18:	str	w27, [x25, #3456]
  41cf1c:	ldr	x26, [x26]
  41cf20:	cbz	x26, 41cfd4 <wcrtomb@plt+0x181b4>
  41cf24:	ldr	w8, [x26, #16]
  41cf28:	cmp	w8, #0x4
  41cf2c:	b.eq	41cf48 <wcrtomb@plt+0x18128>  // b.none
  41cf30:	cmp	w8, #0x1
  41cf34:	b.ne	41cf1c <wcrtomb@plt+0x180fc>  // b.any
  41cf38:	ldr	x8, [x24, #1008]
  41cf3c:	cbz	x8, 41cee4 <wcrtomb@plt+0x180c4>
  41cf40:	blr	x8
  41cf44:	b	41cee4 <wcrtomb@plt+0x180c4>
  41cf48:	ldr	x9, [x26, #32]
  41cf4c:	ldr	x8, [x24, #1008]
  41cf50:	cbz	x9, 41cfa8 <wcrtomb@plt+0x18188>
  41cf54:	cbz	x8, 41cf5c <wcrtomb@plt+0x1813c>
  41cf58:	blr	x8
  41cf5c:	mov	w2, #0x5                   	// #5
  41cf60:	mov	x0, xzr
  41cf64:	mov	x1, x20
  41cf68:	bl	404bf0 <dcgettext@plt>
  41cf6c:	ldr	w8, [x26, #24]
  41cf70:	mov	x22, x0
  41cf74:	mov	w0, w8
  41cf78:	bl	41d4e8 <wcrtomb@plt+0x186c8>
  41cf7c:	ldr	x8, [x26, #32]
  41cf80:	mov	x23, x0
  41cf84:	mov	x0, x8
  41cf88:	bl	43c05c <argp_usage@@Base+0xa460>
  41cf8c:	mov	x4, x0
  41cf90:	mov	w0, wzr
  41cf94:	mov	w1, wzr
  41cf98:	mov	x2, x22
  41cf9c:	mov	x3, x23
  41cfa0:	bl	4041f0 <error@plt>
  41cfa4:	b	41cf18 <wcrtomb@plt+0x180f8>
  41cfa8:	cbz	x8, 41cfb0 <wcrtomb@plt+0x18190>
  41cfac:	blr	x8
  41cfb0:	mov	w2, #0x5                   	// #5
  41cfb4:	mov	x0, xzr
  41cfb8:	mov	x1, x19
  41cfbc:	bl	404bf0 <dcgettext@plt>
  41cfc0:	ldr	w8, [x26, #24]
  41cfc4:	mov	x22, x0
  41cfc8:	mov	w0, w8
  41cfcc:	bl	41d4e8 <wcrtomb@plt+0x186c8>
  41cfd0:	b	41cf04 <wcrtomb@plt+0x180e4>
  41cfd4:	bl	41d014 <wcrtomb@plt+0x181f4>
  41cfd8:	ldp	x20, x19, [sp, #80]
  41cfdc:	ldp	x22, x21, [sp, #64]
  41cfe0:	ldp	x24, x23, [sp, #48]
  41cfe4:	ldp	x26, x25, [sp, #32]
  41cfe8:	ldr	x27, [sp, #16]
  41cfec:	ldp	x29, x30, [sp], #96
  41cff0:	ret
  41cff4:	str	xzr, [x0]
  41cff8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41cffc:	ldr	x9, [x8, #24]
  41d000:	str	x9, [x0, #8]
  41d004:	cbz	x9, 41d00c <wcrtomb@plt+0x181ec>
  41d008:	str	x0, [x9]
  41d00c:	str	x0, [x8, #24]
  41d010:	ret
  41d014:	stp	x29, x30, [sp, #-32]!
  41d018:	str	x19, [sp, #16]
  41d01c:	mov	x29, sp
  41d020:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  41d024:	ldr	x0, [x19, #24]
  41d028:	cbz	x0, 41d040 <wcrtomb@plt+0x18220>
  41d02c:	ldr	x8, [x0, #8]
  41d030:	str	x8, [x19, #24]
  41d034:	bl	4049d0 <free@plt>
  41d038:	ldr	x0, [x19, #24]
  41d03c:	cbnz	x0, 41d02c <wcrtomb@plt+0x1820c>
  41d040:	ldr	x19, [sp, #16]
  41d044:	ldp	x29, x30, [sp], #32
  41d048:	ret
  41d04c:	sub	sp, sp, #0xc0
  41d050:	mov	x1, sp
  41d054:	stp	x29, x30, [sp, #128]
  41d058:	str	x23, [sp, #144]
  41d05c:	stp	x22, x21, [sp, #160]
  41d060:	stp	x20, x19, [sp, #176]
  41d064:	add	x29, sp, #0x80
  41d068:	mov	x20, x0
  41d06c:	bl	4500a0 <_obstack_memory_used@@Base+0x11e40>
  41d070:	cbnz	w0, 41d174 <wcrtomb@plt+0x18354>
  41d074:	bl	41d3fc <wcrtomb@plt+0x185dc>
  41d078:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d07c:	ldr	x23, [x21, #2888]
  41d080:	mov	x19, x0
  41d084:	cbz	x23, 41d138 <wcrtomb@plt+0x18318>
  41d088:	ldp	x9, x8, [sp]
  41d08c:	b	41d098 <wcrtomb@plt+0x18278>
  41d090:	ldr	x23, [x23]
  41d094:	cbz	x23, 41d138 <wcrtomb@plt+0x18318>
  41d098:	ldr	x10, [x23, #8]
  41d09c:	cmp	x10, x8
  41d0a0:	b.ne	41d090 <wcrtomb@plt+0x18270>  // b.any
  41d0a4:	ldr	x10, [x23, #16]
  41d0a8:	cmp	x10, x9
  41d0ac:	b.ne	41d090 <wcrtomb@plt+0x18270>  // b.any
  41d0b0:	mov	w1, #0x3a                  	// #58
  41d0b4:	mov	w2, #0x1                   	// #1
  41d0b8:	mov	x0, xzr
  41d0bc:	bl	43abec <argp_usage@@Base+0x8ff0>
  41d0c0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41d0c4:	ldr	x8, [x8, #1008]
  41d0c8:	mov	w21, w0
  41d0cc:	cbz	x8, 41d0d4 <wcrtomb@plt+0x182b4>
  41d0d0:	blr	x8
  41d0d4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41d0d8:	add	x1, x1, #0x12e
  41d0dc:	mov	w2, #0x5                   	// #5
  41d0e0:	mov	x0, xzr
  41d0e4:	bl	404bf0 <dcgettext@plt>
  41d0e8:	mov	x22, x0
  41d0ec:	mov	w0, wzr
  41d0f0:	mov	x1, x20
  41d0f4:	bl	43bb0c <argp_usage@@Base+0x9f10>
  41d0f8:	ldr	x5, [x23, #24]
  41d0fc:	mov	x3, x0
  41d100:	mov	w0, wzr
  41d104:	mov	w1, wzr
  41d108:	mov	x2, x22
  41d10c:	mov	x4, x19
  41d110:	bl	4041f0 <error@plt>
  41d114:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d118:	mov	w9, #0x2                   	// #2
  41d11c:	mov	w1, #0x3a                  	// #58
  41d120:	mov	x0, xzr
  41d124:	mov	w2, w21
  41d128:	str	w9, [x8, #3456]
  41d12c:	bl	43abec <argp_usage@@Base+0x8ff0>
  41d130:	mov	w0, #0x1                   	// #1
  41d134:	b	41d15c <wcrtomb@plt+0x1833c>
  41d138:	mov	w0, #0x20                  	// #32
  41d13c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41d140:	ldr	x9, [x21, #2888]
  41d144:	ldp	x11, x10, [sp]
  41d148:	mov	x8, x0
  41d14c:	mov	w0, wzr
  41d150:	str	x8, [x21, #2888]
  41d154:	stp	x9, x10, [x8]
  41d158:	stp	x11, x19, [x8, #16]
  41d15c:	ldp	x20, x19, [sp, #176]
  41d160:	ldp	x22, x21, [sp, #160]
  41d164:	ldr	x23, [sp, #144]
  41d168:	ldp	x29, x30, [sp, #128]
  41d16c:	add	sp, sp, #0xc0
  41d170:	ret
  41d174:	mov	x0, x20
  41d178:	bl	42868c <wcrtomb@plt+0x2386c>
  41d17c:	stp	x29, x30, [sp, #-80]!
  41d180:	stp	x24, x23, [sp, #32]
  41d184:	stp	x22, x21, [sp, #48]
  41d188:	stp	x20, x19, [sp, #64]
  41d18c:	ldr	x8, [x0, #32]
  41d190:	ldr	x20, [x0, #48]
  41d194:	ldr	w23, [x0, #40]
  41d198:	str	x25, [sp, #16]
  41d19c:	add	x8, x8, #0x1
  41d1a0:	str	x8, [x0, #32]
  41d1a4:	mov	x0, x20
  41d1a8:	mov	x29, sp
  41d1ac:	bl	4047a0 <getc_unlocked@plt>
  41d1b0:	cmn	w0, #0x1
  41d1b4:	mov	w19, w0
  41d1b8:	mov	x22, xzr
  41d1bc:	cset	w8, ne  // ne = any
  41d1c0:	b.eq	41d22c <wcrtomb@plt+0x1840c>  // b.none
  41d1c4:	cmp	w19, w23
  41d1c8:	b.eq	41d22c <wcrtomb@plt+0x1840c>  // b.none
  41d1cc:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d1d0:	mov	x22, xzr
  41d1d4:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d1d8:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d1dc:	add	x21, x21, #0xad0
  41d1e0:	ldr	x8, [x24, #2768]
  41d1e4:	cmp	x22, x8
  41d1e8:	b.ne	41d1fc <wcrtomb@plt+0x183dc>  // b.any
  41d1ec:	ldr	x0, [x25, #2760]
  41d1f0:	mov	x1, x21
  41d1f4:	bl	43d2e0 <argp_usage@@Base+0xb6e4>
  41d1f8:	str	x0, [x25, #2760]
  41d1fc:	ldr	x8, [x25, #2760]
  41d200:	strb	w19, [x8, x22]
  41d204:	cbz	w19, 41d288 <wcrtomb@plt+0x18468>
  41d208:	mov	x0, x20
  41d20c:	add	x22, x22, #0x1
  41d210:	bl	4047a0 <getc_unlocked@plt>
  41d214:	cmn	w0, #0x1
  41d218:	mov	w19, w0
  41d21c:	cset	w8, ne  // ne = any
  41d220:	b.eq	41d22c <wcrtomb@plt+0x1840c>  // b.none
  41d224:	cmp	w19, w23
  41d228:	b.ne	41d1e0 <wcrtomb@plt+0x183c0>  // b.any
  41d22c:	cbnz	x22, 41d23c <wcrtomb@plt+0x1841c>
  41d230:	tbz	w8, #0, 41d23c <wcrtomb@plt+0x1841c>
  41d234:	mov	w0, #0x3                   	// #3
  41d238:	b	41d28c <wcrtomb@plt+0x1846c>
  41d23c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d240:	ldr	x8, [x8, #2768]
  41d244:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d248:	cmp	x22, x8
  41d24c:	b.ne	41d264 <wcrtomb@plt+0x18444>  // b.any
  41d250:	ldr	x0, [x20, #2760]
  41d254:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d258:	add	x1, x1, #0xad0
  41d25c:	bl	43d2e0 <argp_usage@@Base+0xb6e4>
  41d260:	str	x0, [x20, #2760]
  41d264:	ldr	x0, [x20, #2760]
  41d268:	cmp	x22, #0x0
  41d26c:	cset	w20, eq  // eq = none
  41d270:	strb	wzr, [x0, x22]
  41d274:	bl	41d454 <wcrtomb@plt+0x18634>
  41d278:	cmn	w19, #0x1
  41d27c:	cset	w8, eq  // eq = none
  41d280:	and	w0, w20, w8
  41d284:	b	41d28c <wcrtomb@plt+0x1846c>
  41d288:	mov	w0, #0x2                   	// #2
  41d28c:	ldp	x20, x19, [sp, #64]
  41d290:	ldp	x22, x21, [sp, #48]
  41d294:	ldp	x24, x23, [sp, #32]
  41d298:	ldr	x25, [sp, #16]
  41d29c:	ldp	x29, x30, [sp], #80
  41d2a0:	ret
  41d2a4:	sub	sp, sp, #0x140
  41d2a8:	stp	x29, x30, [sp, #272]
  41d2ac:	stp	x28, x21, [sp, #288]
  41d2b0:	stp	x20, x19, [sp, #304]
  41d2b4:	ldrb	w21, [x0]
  41d2b8:	add	x29, sp, #0x110
  41d2bc:	cbz	w21, 41d398 <wcrtomb@plt+0x18578>
  41d2c0:	mov	x19, x0
  41d2c4:	mov	x20, x1
  41d2c8:	bl	404950 <__ctype_b_loc@plt>
  41d2cc:	ldr	x8, [x0]
  41d2d0:	and	x9, x21, #0xff
  41d2d4:	ldrh	w9, [x8, x9, lsl #1]
  41d2d8:	tbz	w9, #13, 41d2e8 <wcrtomb@plt+0x184c8>
  41d2dc:	ldrb	w21, [x19, #1]!
  41d2e0:	cbnz	w21, 41d2d0 <wcrtomb@plt+0x184b0>
  41d2e4:	b	41d398 <wcrtomb@plt+0x18578>
  41d2e8:	and	w8, w21, #0xff
  41d2ec:	cmp	w8, #0x2d
  41d2f0:	b.ne	41d398 <wcrtomb@plt+0x18578>  // b.any
  41d2f4:	mov	w2, #0xe46                 	// #3654
  41d2f8:	mov	w8, #0x1                   	// #1
  41d2fc:	add	x1, sp, #0x28
  41d300:	movk	w2, #0x200, lsl #16
  41d304:	mov	x0, x19
  41d308:	str	x8, [sp, #56]
  41d30c:	bl	429ff0 <wcrtomb@plt+0x251d0>
  41d310:	cbnz	w0, 41d3b0 <wcrtomb@plt+0x18590>
  41d314:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d318:	ldr	x9, [sp, #48]
  41d31c:	ldr	x8, [x8, #3544]
  41d320:	mov	w10, #0x2                   	// #2
  41d324:	add	x2, sp, #0x8
  41d328:	str	x8, [x9]
  41d32c:	str	w10, [sp, #8]
  41d330:	ldr	x8, [x20, #24]
  41d334:	ldr	w9, [sp, #40]
  41d338:	ldr	w10, [sp, #56]
  41d33c:	ldr	x1, [sp, #48]
  41d340:	str	x8, [sp, #16]
  41d344:	ldr	x8, [x20, #32]
  41d348:	add	w0, w10, w9
  41d34c:	str	x8, [sp, #24]
  41d350:	bl	421440 <wcrtomb@plt+0x1c620>
  41d354:	ldr	x8, [sp, #40]
  41d358:	ldr	x9, [sp, #56]
  41d35c:	cmn	x9, x8
  41d360:	b.eq	41d388 <wcrtomb@plt+0x18568>  // b.none
  41d364:	ldr	x9, [sp, #40]
  41d368:	ldr	x10, [sp, #56]
  41d36c:	mov	x8, xzr
  41d370:	add	x9, x10, x9
  41d374:	ldr	x10, [sp, #48]
  41d378:	str	xzr, [x10, x8, lsl #3]
  41d37c:	add	x8, x8, #0x1
  41d380:	cmp	x9, x8
  41d384:	b.hi	41d374 <wcrtomb@plt+0x18554>  // b.pmore
  41d388:	add	x0, sp, #0x28
  41d38c:	bl	42a140 <wcrtomb@plt+0x25320>
  41d390:	mov	w0, wzr
  41d394:	b	41d39c <wcrtomb@plt+0x1857c>
  41d398:	mov	w0, #0x1                   	// #1
  41d39c:	ldp	x20, x19, [sp, #304]
  41d3a0:	ldp	x28, x21, [sp, #288]
  41d3a4:	ldp	x29, x30, [sp, #272]
  41d3a8:	add	sp, sp, #0x140
  41d3ac:	ret
  41d3b0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41d3b4:	ldr	x8, [x8, #1008]
  41d3b8:	cbz	x8, 41d3c0 <wcrtomb@plt+0x185a0>
  41d3bc:	blr	x8
  41d3c0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  41d3c4:	add	x1, x1, #0xa2d
  41d3c8:	mov	w2, #0x5                   	// #5
  41d3cc:	mov	x0, xzr
  41d3d0:	bl	404bf0 <dcgettext@plt>
  41d3d4:	mov	x20, x0
  41d3d8:	add	x0, sp, #0x28
  41d3dc:	bl	42a218 <wcrtomb@plt+0x253f8>
  41d3e0:	mov	x4, x0
  41d3e4:	mov	w0, wzr
  41d3e8:	mov	w1, wzr
  41d3ec:	mov	x2, x20
  41d3f0:	mov	x3, x19
  41d3f4:	bl	4041f0 <error@plt>
  41d3f8:	bl	40dda4 <wcrtomb@plt+0x8f84>
  41d3fc:	stp	x29, x30, [sp, #-16]!
  41d400:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41d404:	ldr	x8, [x8, #2816]
  41d408:	mov	x29, sp
  41d40c:	cbnz	x8, 41d434 <wcrtomb@plt+0x18614>
  41d410:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41d414:	add	x1, x1, #0x163
  41d418:	mov	w2, #0x5                   	// #5
  41d41c:	mov	x0, xzr
  41d420:	bl	404bf0 <dcgettext@plt>
  41d424:	ldp	x29, x30, [sp], #16
  41d428:	ret
  41d42c:	ldr	x8, [x8]
  41d430:	cbz	x8, 41d410 <wcrtomb@plt+0x185f0>
  41d434:	ldr	w9, [x8, #16]
  41d438:	cmp	w9, #0x2
  41d43c:	b.ne	41d42c <wcrtomb@plt+0x1860c>  // b.any
  41d440:	ldr	x9, [x8, #48]
  41d444:	cbz	x9, 41d42c <wcrtomb@plt+0x1860c>
  41d448:	ldr	x0, [x8, #24]
  41d44c:	ldp	x29, x30, [sp], #16
  41d450:	ret
  41d454:	stp	x29, x30, [sp, #-32]!
  41d458:	str	x19, [sp, #16]
  41d45c:	mov	x29, sp
  41d460:	mov	x19, x0
  41d464:	bl	404190 <strlen@plt>
  41d468:	add	x8, x19, x0
  41d46c:	sub	x8, x8, #0x1
  41d470:	cmp	x8, x19
  41d474:	b.ls	41d490 <wcrtomb@plt+0x18670>  // b.plast
  41d478:	ldrb	w9, [x8]
  41d47c:	cmp	w9, #0x2f
  41d480:	b.ne	41d490 <wcrtomb@plt+0x18670>  // b.any
  41d484:	strb	wzr, [x8], #-1
  41d488:	cmp	x8, x19
  41d48c:	b.hi	41d478 <wcrtomb@plt+0x18658>  // b.pmore
  41d490:	ldr	x19, [sp, #16]
  41d494:	ldp	x29, x30, [sp], #32
  41d498:	ret
  41d49c:	stp	x29, x30, [sp, #-48]!
  41d4a0:	stp	x20, x19, [sp, #32]
  41d4a4:	ldr	x8, [x0]
  41d4a8:	str	x21, [sp, #16]
  41d4ac:	mov	x29, sp
  41d4b0:	cbz	x8, 41d4d8 <wcrtomb@plt+0x186b8>
  41d4b4:	mov	w19, w1
  41d4b8:	add	x20, x0, #0x8
  41d4bc:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  41d4c0:	ldr	x0, [x21, #64]
  41d4c4:	mov	x1, x8
  41d4c8:	mov	w2, w19
  41d4cc:	bl	432c64 <argp_usage@@Base+0x1068>
  41d4d0:	ldr	x8, [x20], #8
  41d4d4:	cbnz	x8, 41d4c0 <wcrtomb@plt+0x186a0>
  41d4d8:	ldp	x20, x19, [sp, #32]
  41d4dc:	ldr	x21, [sp, #16]
  41d4e0:	ldp	x29, x30, [sp], #48
  41d4e4:	ret
  41d4e8:	stp	x29, x30, [sp, #-16]!
  41d4ec:	mov	x29, sp
  41d4f0:	bl	41c870 <wcrtomb@plt+0x17a50>
  41d4f4:	cbz	x0, 41d4fc <wcrtomb@plt+0x186dc>
  41d4f8:	ldr	x0, [x0]
  41d4fc:	ldp	x29, x30, [sp], #16
  41d500:	ret
  41d504:	sub	sp, sp, #0x40
  41d508:	stp	x20, x19, [sp, #48]
  41d50c:	cmp	w1, #0x1
  41d510:	mov	x20, x0
  41d514:	stp	x29, x30, [sp, #16]
  41d518:	stp	x22, x21, [sp, #32]
  41d51c:	add	x29, sp, #0x10
  41d520:	b.eq	41d634 <wcrtomb@plt+0x18814>  // b.none
  41d524:	mov	x19, x2
  41d528:	cmp	w1, #0x2
  41d52c:	b.ne	41d55c <wcrtomb@plt+0x1873c>  // b.any
  41d530:	ldr	x1, [x20]
  41d534:	mov	x0, x20
  41d538:	blr	x19
  41d53c:	cmp	w0, #0x1
  41d540:	b.lt	41d634 <wcrtomb@plt+0x18814>  // b.tstop
  41d544:	ldr	x8, [x20]
  41d548:	str	x8, [sp, #8]
  41d54c:	str	x20, [x8]
  41d550:	str	xzr, [x20]
  41d554:	mov	x20, x8
  41d558:	b	41d634 <wcrtomb@plt+0x18814>
  41d55c:	add	w8, w1, #0x1
  41d560:	add	w9, w1, #0x2
  41d564:	cmp	w8, #0x0
  41d568:	csinc	w8, w9, w1, lt  // lt = tstop
  41d56c:	asr	w8, w8, #1
  41d570:	mov	x21, x20
  41d574:	mov	w10, w8
  41d578:	mov	x9, x21
  41d57c:	ldr	x21, [x21]
  41d580:	subs	w10, w10, #0x1
  41d584:	b.ne	41d578 <wcrtomb@plt+0x18758>  // b.any
  41d588:	cmp	w1, #0x0
  41d58c:	cinc	w10, w1, lt  // lt = tstop
  41d590:	mov	x0, x20
  41d594:	mov	w1, w8
  41d598:	mov	x2, x19
  41d59c:	asr	w22, w10, #1
  41d5a0:	str	xzr, [x9]
  41d5a4:	bl	41d504 <wcrtomb@plt+0x186e4>
  41d5a8:	mov	x20, x0
  41d5ac:	mov	x0, x21
  41d5b0:	mov	w1, w22
  41d5b4:	mov	x2, x19
  41d5b8:	bl	41d504 <wcrtomb@plt+0x186e4>
  41d5bc:	cmp	x20, #0x0
  41d5c0:	mov	x21, x0
  41d5c4:	cset	w9, ne  // ne = any
  41d5c8:	add	x8, sp, #0x8
  41d5cc:	cbz	x0, 41d624 <wcrtomb@plt+0x18804>
  41d5d0:	cbz	x20, 41d624 <wcrtomb@plt+0x18804>
  41d5d4:	add	x22, sp, #0x8
  41d5d8:	mov	x0, x20
  41d5dc:	mov	x1, x21
  41d5e0:	blr	x19
  41d5e4:	tbnz	w0, #31, 41d5fc <wcrtomb@plt+0x187dc>
  41d5e8:	ldr	x10, [x21]
  41d5ec:	mov	x8, x21
  41d5f0:	mov	x9, x21
  41d5f4:	mov	x21, x10
  41d5f8:	b	41d60c <wcrtomb@plt+0x187ec>
  41d5fc:	ldr	x10, [x20]
  41d600:	mov	x8, x20
  41d604:	mov	x9, x20
  41d608:	mov	x20, x10
  41d60c:	cmp	x20, #0x0
  41d610:	str	x9, [x22]
  41d614:	cset	w9, ne  // ne = any
  41d618:	cbz	x21, 41d624 <wcrtomb@plt+0x18804>
  41d61c:	mov	x22, x8
  41d620:	cbnz	x20, 41d5d8 <wcrtomb@plt+0x187b8>
  41d624:	cmp	w9, #0x0
  41d628:	csel	x9, x20, x21, ne  // ne = any
  41d62c:	str	x9, [x8]
  41d630:	ldr	x20, [sp, #8]
  41d634:	mov	x0, x20
  41d638:	ldp	x20, x19, [sp, #48]
  41d63c:	ldp	x22, x21, [sp, #32]
  41d640:	ldp	x29, x30, [sp, #16]
  41d644:	add	sp, sp, #0x40
  41d648:	ret
  41d64c:	sub	sp, sp, #0x50
  41d650:	stp	x20, x19, [sp, #64]
  41d654:	mov	w20, w0
  41d658:	mov	x0, sp
  41d65c:	stp	x29, x30, [sp, #48]
  41d660:	add	x29, sp, #0x30
  41d664:	mov	x19, x1
  41d668:	bl	41d738 <wcrtomb@plt+0x18918>
  41d66c:	tbz	w0, #0, 41d724 <wcrtomb@plt+0x18904>
  41d670:	mov	w8, #0x1                   	// #1
  41d674:	mov	x0, sp
  41d678:	str	x19, [sp, #24]
  41d67c:	str	w20, [sp]
  41d680:	strb	w8, [sp, #4]
  41d684:	bl	41d790 <wcrtomb@plt+0x18970>
  41d688:	mov	w19, w0
  41d68c:	tbz	w0, #0, 41d6fc <wcrtomb@plt+0x188dc>
  41d690:	ldr	x8, [sp, #32]
  41d694:	ldr	x8, [x8, #56]
  41d698:	cbz	x8, 41d6fc <wcrtomb@plt+0x188dc>
  41d69c:	mov	x0, sp
  41d6a0:	bl	41d7f4 <wcrtomb@plt+0x189d4>
  41d6a4:	tbnz	w20, #31, 41d6fc <wcrtomb@plt+0x188dc>
  41d6a8:	ldp	x9, x8, [sp, #16]
  41d6ac:	ldr	x10, [x8, #264]
  41d6b0:	ldr	x0, [x8, #8]
  41d6b4:	ldr	x1, [x8, #136]
  41d6b8:	sub	x2, x10, x9
  41d6bc:	bl	404f3c <wcrtomb@plt+0x11c>
  41d6c0:	tbz	w19, #0, 41d6fc <wcrtomb@plt+0x188dc>
  41d6c4:	ldr	x8, [sp, #24]
  41d6c8:	ldr	x8, [x8, #288]
  41d6cc:	cbz	x8, 41d6fc <wcrtomb@plt+0x188dc>
  41d6d0:	mov	x20, xzr
  41d6d4:	mov	x0, sp
  41d6d8:	mov	x1, x20
  41d6dc:	bl	41d814 <wcrtomb@plt+0x189f4>
  41d6e0:	mov	w19, w0
  41d6e4:	tbz	w0, #0, 41d6fc <wcrtomb@plt+0x188dc>
  41d6e8:	ldr	x8, [sp, #24]
  41d6ec:	add	x20, x20, #0x1
  41d6f0:	ldr	x8, [x8, #288]
  41d6f4:	cmp	x20, x8
  41d6f8:	b.cc	41d6d4 <wcrtomb@plt+0x188b4>  // b.lo, b.ul, b.last
  41d6fc:	ldp	x9, x8, [sp, #16]
  41d700:	ldr	x8, [x8, #264]
  41d704:	sub	x0, x8, x9
  41d708:	bl	40b2ac <wcrtomb@plt+0x648c>
  41d70c:	mov	x0, sp
  41d710:	bl	41d840 <wcrtomb@plt+0x18a20>
  41d714:	and	w8, w19, w0
  41d718:	mvn	w8, w8
  41d71c:	and	w0, w8, #0x1
  41d720:	b	41d728 <wcrtomb@plt+0x18908>
  41d724:	mov	w0, #0x3                   	// #3
  41d728:	ldp	x20, x19, [sp, #64]
  41d72c:	ldp	x29, x30, [sp, #48]
  41d730:	add	sp, sp, #0x50
  41d734:	ret
  41d738:	stp	x29, x30, [sp, #-32]!
  41d73c:	movi	v0.2d, #0x0
  41d740:	str	x19, [sp, #16]
  41d744:	mov	x29, sp
  41d748:	mov	x19, x0
  41d74c:	stp	q0, q0, [x0, #16]
  41d750:	str	q0, [x0]
  41d754:	bl	41df14 <wcrtomb@plt+0x190f4>
  41d758:	tbz	w0, #0, 41d774 <wcrtomb@plt+0x18954>
  41d75c:	ldr	x8, [x19, #32]
  41d760:	ldr	x8, [x8]
  41d764:	cbz	x8, 41d77c <wcrtomb@plt+0x1895c>
  41d768:	mov	x0, x19
  41d76c:	blr	x8
  41d770:	b	41d780 <wcrtomb@plt+0x18960>
  41d774:	mov	w0, wzr
  41d778:	b	41d780 <wcrtomb@plt+0x18960>
  41d77c:	mov	w0, #0x1                   	// #1
  41d780:	ldr	x19, [sp, #16]
  41d784:	and	w0, w0, #0x1
  41d788:	ldp	x29, x30, [sp], #32
  41d78c:	ret
  41d790:	stp	x29, x30, [sp, #-32]!
  41d794:	str	x19, [sp, #16]
  41d798:	mov	x29, sp
  41d79c:	mov	x19, x0
  41d7a0:	bl	41f5c0 <wcrtomb@plt+0x1a7a0>
  41d7a4:	tbnz	w0, #0, 41d7dc <wcrtomb@plt+0x189bc>
  41d7a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41d7ac:	ldr	w8, [x8, #916]
  41d7b0:	cmp	w8, #0x2
  41d7b4:	b.eq	41d7c4 <wcrtomb@plt+0x189a4>  // b.none
  41d7b8:	cmp	w8, #0x1
  41d7bc:	b.eq	41d7d0 <wcrtomb@plt+0x189b0>  // b.none
  41d7c0:	cbnz	w8, 41d7e4 <wcrtomb@plt+0x189c4>
  41d7c4:	mov	x0, x19
  41d7c8:	bl	41f608 <wcrtomb@plt+0x1a7e8>
  41d7cc:	tbnz	w0, #0, 41d7dc <wcrtomb@plt+0x189bc>
  41d7d0:	mov	x0, x19
  41d7d4:	bl	41f714 <wcrtomb@plt+0x1a8f4>
  41d7d8:	tbz	w0, #0, 41d7e4 <wcrtomb@plt+0x189c4>
  41d7dc:	mov	w0, #0x1                   	// #1
  41d7e0:	b	41d7e8 <wcrtomb@plt+0x189c8>
  41d7e4:	mov	w0, wzr
  41d7e8:	ldr	x19, [sp, #16]
  41d7ec:	ldp	x29, x30, [sp], #32
  41d7f0:	ret
  41d7f4:	stp	x29, x30, [sp, #-16]!
  41d7f8:	ldr	x8, [x0, #32]
  41d7fc:	mov	x29, sp
  41d800:	ldr	x8, [x8, #24]
  41d804:	cbz	x8, 41d80c <wcrtomb@plt+0x189ec>
  41d808:	blr	x8
  41d80c:	ldp	x29, x30, [sp], #16
  41d810:	ret
  41d814:	stp	x29, x30, [sp, #-16]!
  41d818:	ldr	x8, [x0, #32]
  41d81c:	mov	x29, sp
  41d820:	ldr	x8, [x8, #56]
  41d824:	cbz	x8, 41d830 <wcrtomb@plt+0x18a10>
  41d828:	blr	x8
  41d82c:	b	41d834 <wcrtomb@plt+0x18a14>
  41d830:	mov	w0, wzr
  41d834:	and	w0, w0, #0x1
  41d838:	ldp	x29, x30, [sp], #16
  41d83c:	ret
  41d840:	stp	x29, x30, [sp, #-16]!
  41d844:	ldr	x8, [x0, #32]
  41d848:	mov	x29, sp
  41d84c:	ldr	x8, [x8, #8]
  41d850:	cbz	x8, 41d85c <wcrtomb@plt+0x18a3c>
  41d854:	blr	x8
  41d858:	b	41d860 <wcrtomb@plt+0x18a40>
  41d85c:	mov	w0, #0x1                   	// #1
  41d860:	and	w0, w0, #0x1
  41d864:	ldp	x29, x30, [sp], #16
  41d868:	ret
  41d86c:	sub	sp, sp, #0x50
  41d870:	str	x19, [sp, #64]
  41d874:	mov	x19, x0
  41d878:	mov	x0, sp
  41d87c:	stp	x29, x30, [sp, #48]
  41d880:	add	x29, sp, #0x30
  41d884:	bl	41d738 <wcrtomb@plt+0x18918>
  41d888:	tbz	w0, #0, 41d89c <wcrtomb@plt+0x18a7c>
  41d88c:	mov	x0, sp
  41d890:	str	x19, [sp, #24]
  41d894:	bl	41d8b4 <wcrtomb@plt+0x18a94>
  41d898:	b	41d8a0 <wcrtomb@plt+0x18a80>
  41d89c:	mov	w0, wzr
  41d8a0:	ldr	x19, [sp, #64]
  41d8a4:	ldp	x29, x30, [sp, #48]
  41d8a8:	and	w0, w0, #0x1
  41d8ac:	add	sp, sp, #0x50
  41d8b0:	ret
  41d8b4:	stp	x29, x30, [sp, #-16]!
  41d8b8:	ldr	x8, [x0, #32]
  41d8bc:	mov	x29, sp
  41d8c0:	ldr	x8, [x8, #16]
  41d8c4:	cbz	x8, 41d8d0 <wcrtomb@plt+0x18ab0>
  41d8c8:	blr	x8
  41d8cc:	b	41d8d4 <wcrtomb@plt+0x18ab4>
  41d8d0:	mov	w0, wzr
  41d8d4:	and	w0, w0, #0x1
  41d8d8:	ldp	x29, x30, [sp], #16
  41d8dc:	ret
  41d8e0:	sub	sp, sp, #0x50
  41d8e4:	str	x19, [sp, #64]
  41d8e8:	mov	x19, x0
  41d8ec:	mov	x0, sp
  41d8f0:	stp	x29, x30, [sp, #48]
  41d8f4:	add	x29, sp, #0x30
  41d8f8:	bl	41d738 <wcrtomb@plt+0x18918>
  41d8fc:	tbz	w0, #0, 41d910 <wcrtomb@plt+0x18af0>
  41d900:	mov	x0, sp
  41d904:	str	x19, [sp, #24]
  41d908:	bl	41d928 <wcrtomb@plt+0x18b08>
  41d90c:	b	41d914 <wcrtomb@plt+0x18af4>
  41d910:	mov	w0, wzr
  41d914:	ldr	x19, [sp, #64]
  41d918:	ldp	x29, x30, [sp, #48]
  41d91c:	and	w0, w0, #0x1
  41d920:	add	sp, sp, #0x50
  41d924:	ret
  41d928:	stp	x29, x30, [sp, #-16]!
  41d92c:	ldr	x8, [x0, #32]
  41d930:	mov	x29, sp
  41d934:	ldr	x8, [x8, #32]
  41d938:	cbz	x8, 41d944 <wcrtomb@plt+0x18b24>
  41d93c:	blr	x8
  41d940:	b	41d948 <wcrtomb@plt+0x18b28>
  41d944:	mov	w0, #0x1                   	// #1
  41d948:	and	w0, w0, #0x1
  41d94c:	ldp	x29, x30, [sp], #16
  41d950:	ret
  41d954:	sub	sp, sp, #0x60
  41d958:	stp	x20, x19, [sp, #80]
  41d95c:	mov	w20, w0
  41d960:	mov	x0, sp
  41d964:	stp	x29, x30, [sp, #48]
  41d968:	str	x21, [sp, #64]
  41d96c:	add	x29, sp, #0x30
  41d970:	mov	x19, x2
  41d974:	mov	x21, x1
  41d978:	bl	41d738 <wcrtomb@plt+0x18918>
  41d97c:	tbz	w0, #0, 41da18 <wcrtomb@plt+0x18bf8>
  41d980:	mov	w0, w20
  41d984:	mov	x1, xzr
  41d988:	mov	w2, wzr
  41d98c:	str	x21, [sp, #24]
  41d990:	str	w20, [sp]
  41d994:	bl	404390 <lseek@plt>
  41d998:	cmp	x0, #0x0
  41d99c:	cset	w8, eq  // eq = none
  41d9a0:	mov	x0, sp
  41d9a4:	strb	w8, [sp, #4]
  41d9a8:	str	xzr, [sp, #8]
  41d9ac:	bl	41da30 <wcrtomb@plt+0x18c10>
  41d9b0:	mov	w20, w0
  41d9b4:	tbz	w0, #0, 41d9f0 <wcrtomb@plt+0x18bd0>
  41d9b8:	ldr	x8, [sp, #24]
  41d9bc:	ldr	x8, [x8, #288]
  41d9c0:	cbz	x8, 41d9f0 <wcrtomb@plt+0x18bd0>
  41d9c4:	mov	x21, xzr
  41d9c8:	mov	x0, sp
  41d9cc:	mov	x1, x21
  41d9d0:	bl	41da5c <wcrtomb@plt+0x18c3c>
  41d9d4:	mov	w20, w0
  41d9d8:	tbz	w0, #0, 41d9f0 <wcrtomb@plt+0x18bd0>
  41d9dc:	ldr	x8, [sp, #24]
  41d9e0:	add	x21, x21, #0x1
  41d9e4:	ldr	x8, [x8, #288]
  41d9e8:	cmp	x21, x8
  41d9ec:	b.cc	41d9c8 <wcrtomb@plt+0x18ba8>  // b.lo, b.ul, b.last
  41d9f0:	ldp	x9, x8, [sp, #16]
  41d9f4:	mov	x0, sp
  41d9f8:	ldr	x8, [x8, #264]
  41d9fc:	sub	x8, x8, x9
  41da00:	str	x8, [x19]
  41da04:	bl	41d840 <wcrtomb@plt+0x18a20>
  41da08:	and	w8, w20, w0
  41da0c:	mvn	w8, w8
  41da10:	and	w0, w8, #0x1
  41da14:	b	41da1c <wcrtomb@plt+0x18bfc>
  41da18:	mov	w0, #0x3                   	// #3
  41da1c:	ldp	x20, x19, [sp, #80]
  41da20:	ldr	x21, [sp, #64]
  41da24:	ldp	x29, x30, [sp, #48]
  41da28:	add	sp, sp, #0x60
  41da2c:	ret
  41da30:	stp	x29, x30, [sp, #-16]!
  41da34:	ldr	x8, [x0, #32]
  41da38:	mov	x29, sp
  41da3c:	ldr	x8, [x8, #40]
  41da40:	cbz	x8, 41da4c <wcrtomb@plt+0x18c2c>
  41da44:	blr	x8
  41da48:	b	41da50 <wcrtomb@plt+0x18c30>
  41da4c:	mov	w0, #0x1                   	// #1
  41da50:	and	w0, w0, #0x1
  41da54:	ldp	x29, x30, [sp], #16
  41da58:	ret
  41da5c:	stp	x29, x30, [sp, #-16]!
  41da60:	ldr	x8, [x0, #32]
  41da64:	mov	x29, sp
  41da68:	ldr	x8, [x8, #64]
  41da6c:	cbz	x8, 41da78 <wcrtomb@plt+0x18c58>
  41da70:	blr	x8
  41da74:	b	41da7c <wcrtomb@plt+0x18c5c>
  41da78:	mov	w0, wzr
  41da7c:	and	w0, w0, #0x1
  41da80:	ldp	x29, x30, [sp], #16
  41da84:	ret
  41da88:	sub	sp, sp, #0x50
  41da8c:	str	x19, [sp, #64]
  41da90:	mov	x19, x0
  41da94:	mov	x0, sp
  41da98:	stp	x29, x30, [sp, #48]
  41da9c:	add	x29, sp, #0x30
  41daa0:	bl	41d738 <wcrtomb@plt+0x18918>
  41daa4:	tbz	w0, #0, 41dae8 <wcrtomb@plt+0x18cc8>
  41daa8:	mov	w8, #0xffffffff            	// #-1
  41daac:	mov	x0, sp
  41dab0:	str	x19, [sp, #24]
  41dab4:	str	w8, [sp]
  41dab8:	bl	41da30 <wcrtomb@plt+0x18c10>
  41dabc:	ldp	x9, x8, [sp, #16]
  41dac0:	mov	w19, w0
  41dac4:	ldr	x8, [x8, #264]
  41dac8:	sub	x0, x8, x9
  41dacc:	bl	418de8 <wcrtomb@plt+0x13fc8>
  41dad0:	mov	x0, sp
  41dad4:	bl	41d840 <wcrtomb@plt+0x18a20>
  41dad8:	and	w8, w19, w0
  41dadc:	mvn	w8, w8
  41dae0:	and	w0, w8, #0x1
  41dae4:	b	41daec <wcrtomb@plt+0x18ccc>
  41dae8:	mov	w0, #0x3                   	// #3
  41daec:	ldr	x19, [sp, #64]
  41daf0:	ldp	x29, x30, [sp, #48]
  41daf4:	add	sp, sp, #0x50
  41daf8:	ret
  41dafc:	sub	sp, sp, #0x60
  41db00:	str	x21, [sp, #64]
  41db04:	mov	w21, w0
  41db08:	mov	x0, sp
  41db0c:	stp	x29, x30, [sp, #48]
  41db10:	stp	x20, x19, [sp, #80]
  41db14:	add	x29, sp, #0x30
  41db18:	mov	x20, x1
  41db1c:	bl	41d738 <wcrtomb@plt+0x18918>
  41db20:	mov	w19, #0x1                   	// #1
  41db24:	tbz	w0, #0, 41dbe8 <wcrtomb@plt+0x18dc8>
  41db28:	mov	x0, sp
  41db2c:	str	x20, [sp, #24]
  41db30:	str	w21, [sp]
  41db34:	strb	w19, [sp, #4]
  41db38:	bl	41da30 <wcrtomb@plt+0x18c10>
  41db3c:	mov	w19, w0
  41db40:	mov	x0, x20
  41db44:	bl	404fe8 <wcrtomb@plt+0x1c8>
  41db48:	tbz	w19, #0, 41dbcc <wcrtomb@plt+0x18dac>
  41db4c:	ldr	x8, [sp, #24]
  41db50:	ldr	x9, [x8, #288]
  41db54:	cbz	x9, 41dbc8 <wcrtomb@plt+0x18da8>
  41db58:	mov	x21, xzr
  41db5c:	mov	x20, xzr
  41db60:	mov	x1, xzr
  41db64:	b	41db9c <wcrtomb@plt+0x18d7c>
  41db68:	mov	w19, wzr
  41db6c:	tbz	wzr, #0, 41dbcc <wcrtomb@plt+0x18dac>
  41db70:	ldr	x9, [sp, #24]
  41db74:	ldr	x8, [sp, #24]
  41db78:	add	x20, x20, #0x1
  41db7c:	ldr	x9, [x9, #304]
  41db80:	ldr	x10, [x8, #288]
  41db84:	add	x9, x9, x21
  41db88:	ldp	x9, x11, [x9]
  41db8c:	cmp	x20, x10
  41db90:	add	x21, x21, #0x10
  41db94:	add	x1, x11, x9
  41db98:	b.cs	41dbc8 <wcrtomb@plt+0x18da8>  // b.hs, b.nlast
  41db9c:	ldr	x8, [x8, #304]
  41dba0:	mov	x0, sp
  41dba4:	ldr	x2, [x8, x21]
  41dba8:	bl	41dc00 <wcrtomb@plt+0x18de0>
  41dbac:	tbz	w0, #0, 41db68 <wcrtomb@plt+0x18d48>
  41dbb0:	mov	x0, sp
  41dbb4:	mov	x1, x20
  41dbb8:	bl	41dd4c <wcrtomb@plt+0x18f2c>
  41dbbc:	mov	w19, w0
  41dbc0:	tbnz	w0, #0, 41db70 <wcrtomb@plt+0x18d50>
  41dbc4:	b	41dbcc <wcrtomb@plt+0x18dac>
  41dbc8:	tbnz	w19, #0, 41dbdc <wcrtomb@plt+0x18dbc>
  41dbcc:	ldp	x9, x8, [sp, #16]
  41dbd0:	ldr	x8, [x8, #264]
  41dbd4:	sub	x0, x8, x9
  41dbd8:	bl	418de8 <wcrtomb@plt+0x13fc8>
  41dbdc:	bl	40500c <wcrtomb@plt+0x1ec>
  41dbe0:	mov	x0, sp
  41dbe4:	bl	41d840 <wcrtomb@plt+0x18a20>
  41dbe8:	and	w0, w19, #0x1
  41dbec:	ldp	x20, x19, [sp, #80]
  41dbf0:	ldr	x21, [sp, #64]
  41dbf4:	ldp	x29, x30, [sp, #48]
  41dbf8:	add	sp, sp, #0x60
  41dbfc:	ret
  41dc00:	stp	x29, x30, [sp, #-96]!
  41dc04:	str	x28, [sp, #16]
  41dc08:	stp	x26, x25, [sp, #32]
  41dc0c:	stp	x24, x23, [sp, #48]
  41dc10:	stp	x22, x21, [sp, #64]
  41dc14:	stp	x20, x19, [sp, #80]
  41dc18:	mov	x29, sp
  41dc1c:	sub	sp, sp, #0x220
  41dc20:	mov	x19, x2
  41dc24:	mov	x20, x1
  41dc28:	mov	x21, x0
  41dc2c:	bl	41e7ac <wcrtomb@plt+0x1998c>
  41dc30:	tbz	w0, #0, 41dd20 <wcrtomb@plt+0x18f00>
  41dc34:	adrp	x22, 450000 <_obstack_memory_used@@Base+0x11da0>
  41dc38:	adrp	x23, 453000 <_obstack_memory_used@@Base+0x14da0>
  41dc3c:	mov	w26, #0x200                 	// #512
  41dc40:	add	x22, x22, #0xc54
  41dc44:	add	x23, x23, #0x743
  41dc48:	b	41dc70 <wcrtomb@plt+0x18e50>
  41dc4c:	ldr	x24, [x21, #24]
  41dc50:	mov	w2, #0x5                   	// #5
  41dc54:	mov	x1, x22
  41dc58:	bl	404bf0 <dcgettext@plt>
  41dc5c:	mov	x1, x0
  41dc60:	mov	x0, x24
  41dc64:	bl	40913c <wcrtomb@plt+0x431c>
  41dc68:	mov	w8, wzr
  41dc6c:	tbz	w8, #0, 41dd20 <wcrtomb@plt+0x18f00>
  41dc70:	cmp	x20, x19
  41dc74:	b.ge	41dd28 <wcrtomb@plt+0x18f08>  // b.tcont
  41dc78:	ldr	w0, [x21]
  41dc7c:	sub	x8, x19, x20
  41dc80:	cmp	x8, #0x200
  41dc84:	csel	x24, x8, x26, lt  // lt = tstop
  41dc88:	add	x1, sp, #0x20
  41dc8c:	mov	x2, x24
  41dc90:	bl	43c740 <argp_usage@@Base+0xab44>
  41dc94:	cbz	x0, 41dc4c <wcrtomb@plt+0x18e2c>
  41dc98:	mov	x25, x0
  41dc9c:	cmn	x0, #0x1
  41dca0:	b.ne	41dcc4 <wcrtomb@plt+0x18ea4>  // b.any
  41dca4:	ldr	x8, [x21, #24]
  41dca8:	mov	x1, x20
  41dcac:	mov	x2, x24
  41dcb0:	ldr	x0, [x8]
  41dcb4:	bl	41ac8c <wcrtomb@plt+0x15e6c>
  41dcb8:	mov	w8, wzr
  41dcbc:	tbnz	w8, #0, 41dc70 <wcrtomb@plt+0x18e50>
  41dcc0:	b	41dd20 <wcrtomb@plt+0x18f00>
  41dcc4:	add	x0, sp, #0x20
  41dcc8:	mov	x1, x25
  41dccc:	bl	41f8a0 <wcrtomb@plt+0x1aa80>
  41dcd0:	tbz	w0, #0, 41dce4 <wcrtomb@plt+0x18ec4>
  41dcd4:	add	x20, x25, x20
  41dcd8:	mov	w8, #0x1                   	// #1
  41dcdc:	tbnz	w8, #0, 41dc70 <wcrtomb@plt+0x18e50>
  41dce0:	b	41dd20 <wcrtomb@plt+0x18f00>
  41dce4:	ldr	x24, [x21, #24]
  41dce8:	mov	w2, #0x5                   	// #5
  41dcec:	mov	x0, xzr
  41dcf0:	mov	x1, x23
  41dcf4:	bl	404bf0 <dcgettext@plt>
  41dcf8:	mov	x25, x0
  41dcfc:	add	x1, sp, #0x8
  41dd00:	mov	x0, x20
  41dd04:	bl	43647c <argp_usage@@Base+0x4880>
  41dd08:	mov	x2, x0
  41dd0c:	mov	x0, x24
  41dd10:	mov	x1, x25
  41dd14:	bl	40913c <wcrtomb@plt+0x431c>
  41dd18:	mov	w8, wzr
  41dd1c:	tbnz	w8, #0, 41dc70 <wcrtomb@plt+0x18e50>
  41dd20:	mov	w0, wzr
  41dd24:	b	41dd2c <wcrtomb@plt+0x18f0c>
  41dd28:	mov	w0, #0x1                   	// #1
  41dd2c:	add	sp, sp, #0x220
  41dd30:	ldp	x20, x19, [sp, #80]
  41dd34:	ldp	x22, x21, [sp, #64]
  41dd38:	ldp	x24, x23, [sp, #48]
  41dd3c:	ldp	x26, x25, [sp, #32]
  41dd40:	ldr	x28, [sp, #16]
  41dd44:	ldp	x29, x30, [sp], #96
  41dd48:	ret
  41dd4c:	stp	x29, x30, [sp, #-96]!
  41dd50:	stp	x28, x27, [sp, #16]
  41dd54:	stp	x26, x25, [sp, #32]
  41dd58:	stp	x24, x23, [sp, #48]
  41dd5c:	stp	x22, x21, [sp, #64]
  41dd60:	stp	x20, x19, [sp, #80]
  41dd64:	mov	x29, sp
  41dd68:	sub	sp, sp, #0x210
  41dd6c:	ldr	x8, [x0, #24]
  41dd70:	lsl	x9, x1, #4
  41dd74:	mov	x20, x1
  41dd78:	mov	x19, x0
  41dd7c:	ldr	x8, [x8, #304]
  41dd80:	ldr	x1, [x8, x9]
  41dd84:	bl	41e7ac <wcrtomb@plt+0x1998c>
  41dd88:	tbz	w0, #0, 41dee8 <wcrtomb@plt+0x190c8>
  41dd8c:	ldp	x9, x8, [x19, #16]
  41dd90:	ldr	x10, [x8, #304]
  41dd94:	ldr	x8, [x8, #264]
  41dd98:	add	x10, x10, x20, lsl #4
  41dd9c:	ldr	x27, [x10, #8]
  41dda0:	sub	x0, x8, x9
  41dda4:	bl	4050a4 <wcrtomb@plt+0x284>
  41dda8:	adrp	x21, 450000 <_obstack_memory_used@@Base+0x11da0>
  41ddac:	mov	w28, #0x200                 	// #512
  41ddb0:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  41ddb4:	add	x21, x21, #0xc61
  41ddb8:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ddbc:	mov	w23, #0x2                   	// #2
  41ddc0:	b	41ddf0 <wcrtomb@plt+0x18fd0>
  41ddc4:	ldr	x8, [x19, #24]
  41ddc8:	mov	x2, x25
  41ddcc:	ldr	x9, [x8, #304]
  41ddd0:	ldr	x0, [x8]
  41ddd4:	add	x9, x9, x20, lsl #4
  41ddd8:	ldp	x10, x9, [x9]
  41dddc:	sub	x8, x10, x27
  41dde0:	add	x1, x8, x9
  41dde4:	bl	41ac8c <wcrtomb@plt+0x15e6c>
  41dde8:	mov	w8, wzr
  41ddec:	tbz	w8, #0, 41dee8 <wcrtomb@plt+0x190c8>
  41ddf0:	cmp	x27, #0x1
  41ddf4:	b.lt	41def0 <wcrtomb@plt+0x190d0>  // b.tstop
  41ddf8:	cmp	x27, #0x200
  41ddfc:	csel	x25, x27, x28, lt  // lt = tstop
  41de00:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41de04:	cbz	x0, 41de84 <wcrtomb@plt+0x19064>
  41de08:	mov	x26, x0
  41de0c:	bl	405744 <wcrtomb@plt+0x924>
  41de10:	ldr	x8, [x19, #16]
  41de14:	ldr	w0, [x19]
  41de18:	add	x1, sp, #0x8
  41de1c:	mov	x2, x25
  41de20:	add	x8, x8, #0x200
  41de24:	str	x8, [x19, #16]
  41de28:	bl	43c740 <argp_usage@@Base+0xab44>
  41de2c:	cbz	x0, 41debc <wcrtomb@plt+0x1909c>
  41de30:	cmn	x0, #0x1
  41de34:	b.eq	41ddc4 <wcrtomb@plt+0x18fa4>  // b.none
  41de38:	ldp	x9, x8, [x19, #16]
  41de3c:	sub	x27, x27, x0
  41de40:	ldr	x8, [x8, #264]
  41de44:	sub	x0, x8, x9
  41de48:	bl	4050a4 <wcrtomb@plt+0x284>
  41de4c:	add	x1, sp, #0x8
  41de50:	mov	x0, x26
  41de54:	mov	x2, x25
  41de58:	bl	4046d0 <bcmp@plt>
  41de5c:	cbz	w0, 41dee0 <wcrtomb@plt+0x190c0>
  41de60:	ldr	x25, [x19, #24]
  41de64:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  41de68:	mov	w2, #0x5                   	// #5
  41de6c:	mov	x0, xzr
  41de70:	add	x1, x1, #0xcbc
  41de74:	bl	404bf0 <dcgettext@plt>
  41de78:	mov	x1, x0
  41de7c:	mov	x0, x25
  41de80:	b	41ded8 <wcrtomb@plt+0x190b8>
  41de84:	ldr	x8, [x24, #1008]
  41de88:	cbz	x8, 41de90 <wcrtomb@plt+0x19070>
  41de8c:	blr	x8
  41de90:	mov	w2, #0x5                   	// #5
  41de94:	mov	x0, xzr
  41de98:	mov	x1, x21
  41de9c:	bl	404bf0 <dcgettext@plt>
  41dea0:	mov	x2, x0
  41dea4:	mov	w0, wzr
  41dea8:	mov	w1, wzr
  41deac:	bl	4041f0 <error@plt>
  41deb0:	mov	w8, wzr
  41deb4:	str	w23, [x22, #3456]
  41deb8:	b	41ddec <wcrtomb@plt+0x18fcc>
  41debc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  41dec0:	mov	w2, #0x5                   	// #5
  41dec4:	add	x1, x1, #0xc54
  41dec8:	bl	404bf0 <dcgettext@plt>
  41decc:	mov	x1, x0
  41ded0:	adrp	x0, 470000 <argp_program_version_hook@@Base+0x258>
  41ded4:	add	x0, x0, #0x60
  41ded8:	bl	40913c <wcrtomb@plt+0x431c>
  41dedc:	b	41dde8 <wcrtomb@plt+0x18fc8>
  41dee0:	mov	w8, #0x1                   	// #1
  41dee4:	b	41ddec <wcrtomb@plt+0x18fcc>
  41dee8:	mov	w0, wzr
  41deec:	b	41def4 <wcrtomb@plt+0x190d4>
  41def0:	mov	w0, #0x1                   	// #1
  41def4:	add	sp, sp, #0x210
  41def8:	ldp	x20, x19, [sp, #80]
  41defc:	ldp	x22, x21, [sp, #64]
  41df00:	ldp	x24, x23, [sp, #48]
  41df04:	ldp	x26, x25, [sp, #32]
  41df08:	ldp	x28, x27, [sp, #16]
  41df0c:	ldp	x29, x30, [sp], #96
  41df10:	ret
  41df14:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41df18:	ldr	w8, [x8, #4048]
  41df1c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41df20:	ldr	w9, [x9, #816]
  41df24:	cmp	w8, #0x0
  41df28:	csel	w8, w9, w8, eq  // eq = none
  41df2c:	sub	w8, w8, #0x2
  41df30:	cmp	w8, #0x4
  41df34:	b.hi	41df44 <wcrtomb@plt+0x19124>  // b.pmore
  41df38:	mov	w9, #0x1d                  	// #29
  41df3c:	lsr	w9, w9, w8
  41df40:	tbnz	w9, #0, 41df4c <wcrtomb@plt+0x1912c>
  41df44:	mov	w0, wzr
  41df48:	ret
  41df4c:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x14da0>
  41df50:	add	x9, x9, #0x690
  41df54:	ldr	x8, [x9, w8, sxtw #3]
  41df58:	str	x8, [x0, #32]
  41df5c:	mov	w0, #0x1                   	// #1
  41df60:	ret
  41df64:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41df68:	ldr	x8, [x8, #4072]
  41df6c:	ldrb	w8, [x8, #156]
  41df70:	cmp	w8, #0x53
  41df74:	cset	w0, eq  // eq = none
  41df78:	ret
  41df7c:	stp	x29, x30, [sp, #-48]!
  41df80:	str	x21, [sp, #16]
  41df84:	stp	x20, x19, [sp, #32]
  41df88:	mov	x29, sp
  41df8c:	mov	x19, x0
  41df90:	bl	405568 <wcrtomb@plt+0x748>
  41df94:	ldr	x8, [x19, #24]
  41df98:	mov	x20, x0
  41df9c:	mov	x0, x8
  41dfa0:	bl	40aaa8 <wcrtomb@plt+0x5c88>
  41dfa4:	mov	w8, #0x53                  	// #83
  41dfa8:	strb	w8, [x0, #156]
  41dfac:	ldr	x8, [x19, #24]
  41dfb0:	mov	x21, x0
  41dfb4:	ldr	x8, [x8, #288]
  41dfb8:	cmp	x8, #0x5
  41dfbc:	b.cc	41dfc8 <wcrtomb@plt+0x191a8>  // b.lo, b.ul, b.last
  41dfc0:	mov	w8, #0x1                   	// #1
  41dfc4:	strb	w8, [x21, #482]
  41dfc8:	ldr	x8, [x19, #24]
  41dfcc:	add	x1, x21, #0x1e3
  41dfd0:	mov	w2, #0xc                   	// #12
  41dfd4:	ldr	x0, [x8, #136]
  41dfd8:	bl	40a560 <wcrtomb@plt+0x5740>
  41dfdc:	ldr	x8, [x19, #24]
  41dfe0:	add	x1, x21, #0x7c
  41dfe4:	mov	w2, #0xc                   	// #12
  41dfe8:	ldr	x0, [x8, #264]
  41dfec:	bl	40a560 <wcrtomb@plt+0x5740>
  41dff0:	add	x2, x21, #0x182
  41dff4:	add	x1, x29, #0x18
  41dff8:	mov	w3, #0x4                   	// #4
  41dffc:	mov	x0, x19
  41e000:	str	xzr, [x29, #24]
  41e004:	bl	41e5f4 <wcrtomb@plt+0x197d4>
  41e008:	ldr	x8, [x19, #24]
  41e00c:	ldr	x9, [x29, #24]
  41e010:	mov	x1, x21
  41e014:	mov	x2, x20
  41e018:	ldr	x8, [x8, #288]
  41e01c:	cmp	x9, x8
  41e020:	cset	w8, cc  // cc = lo, ul, last
  41e024:	strb	w8, [x21, #482]
  41e028:	ldr	x0, [x19, #24]
  41e02c:	bl	40b224 <wcrtomb@plt+0x6404>
  41e030:	ldr	x8, [x19, #24]
  41e034:	ldr	x9, [x29, #24]
  41e038:	ldr	x8, [x8, #288]
  41e03c:	cmp	x9, x8
  41e040:	b.cs	41e0e4 <wcrtomb@plt+0x192c4>  // b.hs, b.nlast
  41e044:	mov	w21, #0x1                   	// #1
  41e048:	b	41e068 <wcrtomb@plt+0x19248>
  41e04c:	mov	x0, x20
  41e050:	bl	405744 <wcrtomb@plt+0x924>
  41e054:	ldr	x8, [x19, #24]
  41e058:	ldr	x9, [x29, #24]
  41e05c:	ldr	x8, [x8, #288]
  41e060:	cmp	x9, x8
  41e064:	b.cs	41e0e4 <wcrtomb@plt+0x192c4>  // b.hs, b.nlast
  41e068:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41e06c:	mov	x20, x0
  41e070:	movi	v0.2d, #0x0
  41e074:	stp	q0, q0, [x0]
  41e078:	stp	q0, q0, [x0, #32]
  41e07c:	stp	q0, q0, [x0, #64]
  41e080:	stp	q0, q0, [x0, #96]
  41e084:	stp	q0, q0, [x0, #128]
  41e088:	stp	q0, q0, [x0, #160]
  41e08c:	stp	q0, q0, [x0, #192]
  41e090:	stp	q0, q0, [x0, #224]
  41e094:	stp	q0, q0, [x0, #256]
  41e098:	stp	q0, q0, [x0, #288]
  41e09c:	stp	q0, q0, [x0, #320]
  41e0a0:	stp	q0, q0, [x0, #352]
  41e0a4:	stp	q0, q0, [x0, #384]
  41e0a8:	stp	q0, q0, [x0, #416]
  41e0ac:	stp	q0, q0, [x0, #448]
  41e0b0:	stp	q0, q0, [x0, #480]
  41e0b4:	add	x1, x29, #0x18
  41e0b8:	mov	w3, #0x15                  	// #21
  41e0bc:	mov	x0, x19
  41e0c0:	mov	x2, x20
  41e0c4:	bl	41e5f4 <wcrtomb@plt+0x197d4>
  41e0c8:	ldr	x8, [x19, #24]
  41e0cc:	ldr	x9, [x29, #24]
  41e0d0:	ldr	x8, [x8, #288]
  41e0d4:	cmp	x9, x8
  41e0d8:	b.cs	41e04c <wcrtomb@plt+0x1922c>  // b.hs, b.nlast
  41e0dc:	strb	w21, [x20, #504]
  41e0e0:	b	41e04c <wcrtomb@plt+0x1922c>
  41e0e4:	ldp	x20, x19, [sp, #32]
  41e0e8:	ldr	x21, [sp, #16]
  41e0ec:	mov	w0, #0x1                   	// #1
  41e0f0:	ldp	x29, x30, [sp], #48
  41e0f4:	ret
  41e0f8:	stp	x29, x30, [sp, #-32]!
  41e0fc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41e100:	ldr	x8, [x8, #4072]
  41e104:	str	x19, [sp, #16]
  41e108:	mov	x19, x0
  41e10c:	mov	w1, #0xc                   	// #12
  41e110:	add	x0, x8, #0x1e3
  41e114:	mov	x29, sp
  41e118:	bl	4183c0 <wcrtomb@plt+0x135a0>
  41e11c:	ldr	x8, [x19, #24]
  41e120:	ldr	x19, [sp, #16]
  41e124:	bic	x10, x0, x0, asr #63
  41e128:	lsr	x11, x0, #63
  41e12c:	ldr	x9, [x8, #136]
  41e130:	eor	w0, w11, #0x1
  41e134:	str	x10, [x8, #136]
  41e138:	str	x9, [x8, #264]
  41e13c:	ldp	x29, x30, [sp], #32
  41e140:	ret
  41e144:	stp	x29, x30, [sp, #-64]!
  41e148:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41e14c:	stp	x22, x21, [sp, #32]
  41e150:	stp	x20, x19, [sp, #48]
  41e154:	ldr	x21, [x8, #4072]
  41e158:	ldr	x9, [x0, #24]
  41e15c:	str	x23, [sp, #16]
  41e160:	mov	x19, x0
  41e164:	mov	x22, xzr
  41e168:	add	x23, x21, #0x182
  41e16c:	mov	x29, sp
  41e170:	str	xzr, [x9, #288]
  41e174:	add	x1, x23, x22
  41e178:	mov	x0, x19
  41e17c:	bl	41e69c <wcrtomb@plt+0x1987c>
  41e180:	cbnz	w0, 41e19c <wcrtomb@plt+0x1937c>
  41e184:	add	x22, x22, #0x18
  41e188:	cmp	x22, #0x60
  41e18c:	b.ne	41e174 <wcrtomb@plt+0x19354>  // b.any
  41e190:	mov	w20, wzr
  41e194:	cbz	w20, 41e1a4 <wcrtomb@plt+0x19384>
  41e198:	b	41e1f8 <wcrtomb@plt+0x193d8>
  41e19c:	mov	w20, w0
  41e1a0:	cbnz	w20, 41e1f8 <wcrtomb@plt+0x193d8>
  41e1a4:	ldrb	w8, [x21, #482]
  41e1a8:	cbz	w8, 41e1f8 <wcrtomb@plt+0x193d8>
  41e1ac:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41e1b0:	cbz	x0, 41e248 <wcrtomb@plt+0x19428>
  41e1b4:	mov	x21, x0
  41e1b8:	bl	405744 <wcrtomb@plt+0x924>
  41e1bc:	cbnz	w20, 41e1ec <wcrtomb@plt+0x193cc>
  41e1c0:	mov	x23, xzr
  41e1c4:	mov	x22, x21
  41e1c8:	mov	x0, x19
  41e1cc:	mov	x1, x22
  41e1d0:	bl	41e69c <wcrtomb@plt+0x1987c>
  41e1d4:	cmp	x23, #0x13
  41e1d8:	mov	w20, w0
  41e1dc:	b.hi	41e1ec <wcrtomb@plt+0x193cc>  // b.pmore
  41e1e0:	add	x23, x23, #0x1
  41e1e4:	add	x22, x22, #0x18
  41e1e8:	cbz	w20, 41e1c8 <wcrtomb@plt+0x193a8>
  41e1ec:	cbnz	w20, 41e1f8 <wcrtomb@plt+0x193d8>
  41e1f0:	ldrb	w8, [x21, #504]
  41e1f4:	cbnz	w8, 41e1ac <wcrtomb@plt+0x1938c>
  41e1f8:	cmp	w20, #0x2
  41e1fc:	b.ne	41e240 <wcrtomb@plt+0x19420>  // b.any
  41e200:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41e204:	ldr	x8, [x8, #1008]
  41e208:	cbz	x8, 41e210 <wcrtomb@plt+0x193f0>
  41e20c:	blr	x8
  41e210:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41e214:	add	x1, x1, #0x6b8
  41e218:	mov	w2, #0x5                   	// #5
  41e21c:	mov	x0, xzr
  41e220:	bl	404bf0 <dcgettext@plt>
  41e224:	ldr	x8, [x19, #24]
  41e228:	mov	x2, x0
  41e22c:	mov	w0, wzr
  41e230:	mov	w1, wzr
  41e234:	ldr	x3, [x8]
  41e238:	bl	4041f0 <error@plt>
  41e23c:	b	41e27c <wcrtomb@plt+0x1945c>
  41e240:	mov	w0, #0x1                   	// #1
  41e244:	b	41e28c <wcrtomb@plt+0x1946c>
  41e248:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41e24c:	ldr	x8, [x8, #1008]
  41e250:	cbz	x8, 41e258 <wcrtomb@plt+0x19438>
  41e254:	blr	x8
  41e258:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  41e25c:	add	x1, x1, #0xc61
  41e260:	mov	w2, #0x5                   	// #5
  41e264:	mov	x0, xzr
  41e268:	bl	404bf0 <dcgettext@plt>
  41e26c:	mov	x2, x0
  41e270:	mov	w0, wzr
  41e274:	mov	w1, wzr
  41e278:	bl	4041f0 <error@plt>
  41e27c:	mov	w0, wzr
  41e280:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41e284:	mov	w9, #0x2                   	// #2
  41e288:	str	w9, [x8, #3456]
  41e28c:	ldp	x20, x19, [sp, #48]
  41e290:	ldp	x22, x21, [sp, #32]
  41e294:	ldr	x23, [sp, #16]
  41e298:	ldp	x29, x30, [sp], #64
  41e29c:	ret
  41e2a0:	sub	sp, sp, #0x100
  41e2a4:	stp	x29, x30, [sp, #160]
  41e2a8:	stp	x28, x27, [sp, #176]
  41e2ac:	stp	x26, x25, [sp, #192]
  41e2b0:	stp	x24, x23, [sp, #208]
  41e2b4:	stp	x22, x21, [sp, #224]
  41e2b8:	stp	x20, x19, [sp, #240]
  41e2bc:	ldr	x8, [x0, #24]
  41e2c0:	mov	x19, x1
  41e2c4:	add	x29, sp, #0xa0
  41e2c8:	mov	x20, x0
  41e2cc:	ldr	x8, [x8, #304]
  41e2d0:	add	x8, x8, x1, lsl #4
  41e2d4:	ldp	x1, x26, [x8]
  41e2d8:	bl	41e7ac <wcrtomb@plt+0x1998c>
  41e2dc:	tbz	w0, #0, 41e450 <wcrtomb@plt+0x19630>
  41e2e0:	adrp	x22, 451000 <_obstack_memory_used@@Base+0x12da0>
  41e2e4:	mov	w27, #0x200                 	// #512
  41e2e8:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41e2ec:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  41e2f0:	add	x22, x22, #0x39
  41e2f4:	b	41e328 <wcrtomb@plt+0x19508>
  41e2f8:	add	x0, x24, x25
  41e2fc:	sub	x2, x27, x25
  41e300:	mov	w1, wzr
  41e304:	bl	404600 <memset@plt>
  41e308:	ldr	x8, [x20, #16]
  41e30c:	mov	x0, x24
  41e310:	sub	x26, x26, x25
  41e314:	add	x8, x8, x25
  41e318:	str	x8, [x20, #16]
  41e31c:	bl	405744 <wcrtomb@plt+0x924>
  41e320:	mov	w8, #0x1                   	// #1
  41e324:	tbz	w8, #0, 41e450 <wcrtomb@plt+0x19630>
  41e328:	cmp	x26, #0x1
  41e32c:	b.lt	41e458 <wcrtomb@plt+0x19638>  // b.tstop
  41e330:	cmp	x26, #0x200
  41e334:	csel	x23, x26, x27, lt  // lt = tstop
  41e338:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41e33c:	ldr	w8, [x20]
  41e340:	mov	x24, x0
  41e344:	mov	x1, x24
  41e348:	mov	x2, x23
  41e34c:	mov	w0, w8
  41e350:	bl	43c740 <argp_usage@@Base+0xab44>
  41e354:	cbz	x0, 41e390 <wcrtomb@plt+0x19570>
  41e358:	mov	x25, x0
  41e35c:	cmn	x0, #0x1
  41e360:	b.ne	41e2f8 <wcrtomb@plt+0x194d8>  // b.any
  41e364:	ldr	x8, [x20, #24]
  41e368:	mov	x2, x23
  41e36c:	ldr	x9, [x8, #304]
  41e370:	ldr	x0, [x8]
  41e374:	add	x9, x9, x19, lsl #4
  41e378:	ldp	x10, x9, [x9]
  41e37c:	sub	x8, x10, x26
  41e380:	add	x1, x8, x9
  41e384:	bl	41ac8c <wcrtomb@plt+0x15e6c>
  41e388:	mov	w8, wzr
  41e38c:	b	41e324 <wcrtomb@plt+0x19504>
  41e390:	ldr	w0, [x20]
  41e394:	add	x1, sp, #0x8
  41e398:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  41e39c:	ldr	x9, [x20, #24]
  41e3a0:	ldr	x8, [x9, #136]
  41e3a4:	cbz	w0, 41e3c0 <wcrtomb@plt+0x195a0>
  41e3a8:	ldr	x9, [x9, #304]
  41e3ac:	add	x8, x8, x26
  41e3b0:	add	x9, x9, x19, lsl #4
  41e3b4:	ldp	x10, x9, [x9]
  41e3b8:	sub	x8, x8, x10
  41e3bc:	b	41e3c4 <wcrtomb@plt+0x195a4>
  41e3c0:	ldr	x9, [sp, #56]
  41e3c4:	sub	x23, x8, x9
  41e3c8:	ldrb	w8, [x28, #448]
  41e3cc:	tbz	w8, #7, 41e438 <wcrtomb@plt+0x19618>
  41e3d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41e3d4:	ldr	x8, [x8, #1008]
  41e3d8:	cbz	x8, 41e3e0 <wcrtomb@plt+0x195c0>
  41e3dc:	blr	x8
  41e3e0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  41e3e4:	mov	w4, #0x5                   	// #5
  41e3e8:	mov	x0, xzr
  41e3ec:	add	x1, x1, #0xa
  41e3f0:	mov	x2, x22
  41e3f4:	mov	x3, x23
  41e3f8:	bl	404af0 <dcngettext@plt>
  41e3fc:	ldr	x8, [x20, #24]
  41e400:	mov	x24, x0
  41e404:	ldr	x8, [x8]
  41e408:	mov	x0, x8
  41e40c:	bl	43beac <argp_usage@@Base+0xa2b0>
  41e410:	mov	x25, x0
  41e414:	sub	x1, x29, #0x18
  41e418:	mov	x0, x23
  41e41c:	bl	43650c <argp_usage@@Base+0x4910>
  41e420:	mov	x4, x0
  41e424:	mov	w0, wzr
  41e428:	mov	w1, wzr
  41e42c:	mov	x2, x24
  41e430:	mov	x3, x25
  41e434:	bl	4041f0 <error@plt>
  41e438:	ldrb	w8, [x21, #953]
  41e43c:	cbnz	w8, 41e448 <wcrtomb@plt+0x19628>
  41e440:	mov	w0, #0x1                   	// #1
  41e444:	bl	422410 <wcrtomb@plt+0x1d5f0>
  41e448:	mov	w8, wzr
  41e44c:	b	41e324 <wcrtomb@plt+0x19504>
  41e450:	mov	w0, wzr
  41e454:	b	41e45c <wcrtomb@plt+0x1963c>
  41e458:	mov	w0, #0x1                   	// #1
  41e45c:	ldp	x20, x19, [sp, #240]
  41e460:	ldp	x22, x21, [sp, #224]
  41e464:	ldp	x24, x23, [sp, #208]
  41e468:	ldp	x26, x25, [sp, #192]
  41e46c:	ldp	x28, x27, [sp, #176]
  41e470:	ldp	x29, x30, [sp, #160]
  41e474:	add	sp, sp, #0x100
  41e478:	ret
  41e47c:	stp	x29, x30, [sp, #-96]!
  41e480:	stp	x26, x25, [sp, #32]
  41e484:	stp	x24, x23, [sp, #48]
  41e488:	stp	x22, x21, [sp, #64]
  41e48c:	stp	x20, x19, [sp, #80]
  41e490:	ldr	x8, [x0, #24]
  41e494:	lsl	x9, x1, #4
  41e498:	mov	x20, x1
  41e49c:	str	x27, [sp, #16]
  41e4a0:	ldr	x8, [x8, #304]
  41e4a4:	mov	x29, sp
  41e4a8:	mov	x19, x0
  41e4ac:	ldr	x1, [x8, x9]
  41e4b0:	bl	41e7ac <wcrtomb@plt+0x1998c>
  41e4b4:	tbz	w0, #0, 41e5ac <wcrtomb@plt+0x1978c>
  41e4b8:	ldr	x8, [x19, #24]
  41e4bc:	ldr	x8, [x8, #304]
  41e4c0:	add	x8, x8, x20, lsl #4
  41e4c4:	ldr	x23, [x8, #8]
  41e4c8:	cbz	x23, 41e5b4 <wcrtomb@plt+0x19794>
  41e4cc:	adrp	x20, 450000 <_obstack_memory_used@@Base+0x11da0>
  41e4d0:	mov	w24, #0x200                 	// #512
  41e4d4:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  41e4d8:	add	x20, x20, #0xc61
  41e4dc:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41e4e0:	mov	w27, #0x2                   	// #2
  41e4e4:	b	41e504 <wcrtomb@plt+0x196e4>
  41e4e8:	ldr	x8, [x19, #24]
  41e4ec:	mov	x1, x22
  41e4f0:	mov	x2, x21
  41e4f4:	ldr	x0, [x8]
  41e4f8:	bl	4287a4 <wcrtomb@plt+0x23984>
  41e4fc:	mov	w8, wzr
  41e500:	tbz	w8, #0, 41e5ac <wcrtomb@plt+0x1978c>
  41e504:	cmp	x23, #0x1
  41e508:	b.lt	41e5d4 <wcrtomb@plt+0x197b4>  // b.tstop
  41e50c:	cmp	x23, #0x200
  41e510:	csel	x21, x23, x24, lt  // lt = tstop
  41e514:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41e518:	cbz	x0, 41e574 <wcrtomb@plt+0x19754>
  41e51c:	mov	x22, x0
  41e520:	bl	405744 <wcrtomb@plt+0x924>
  41e524:	ldr	x8, [x19, #16]
  41e528:	ldr	w0, [x19]
  41e52c:	mov	x1, x22
  41e530:	mov	x2, x21
  41e534:	add	x8, x8, #0x200
  41e538:	str	x8, [x19, #16]
  41e53c:	bl	41a724 <wcrtomb@plt+0x15904>
  41e540:	ldp	x9, x8, [x19, #16]
  41e544:	mov	x22, x0
  41e548:	sub	x23, x23, x0
  41e54c:	ldr	x8, [x8, #264]
  41e550:	sub	x0, x8, x9
  41e554:	bl	4050a4 <wcrtomb@plt+0x284>
  41e558:	ldr	x8, [x19, #8]
  41e55c:	cmp	x22, x21
  41e560:	add	x8, x8, x22
  41e564:	str	x8, [x19, #8]
  41e568:	b.ne	41e4e8 <wcrtomb@plt+0x196c8>  // b.any
  41e56c:	mov	w8, #0x1                   	// #1
  41e570:	b	41e500 <wcrtomb@plt+0x196e0>
  41e574:	ldr	x8, [x25, #1008]
  41e578:	cbz	x8, 41e580 <wcrtomb@plt+0x19760>
  41e57c:	blr	x8
  41e580:	mov	w2, #0x5                   	// #5
  41e584:	mov	x0, xzr
  41e588:	mov	x1, x20
  41e58c:	bl	404bf0 <dcgettext@plt>
  41e590:	mov	x2, x0
  41e594:	mov	w0, wzr
  41e598:	mov	w1, wzr
  41e59c:	bl	4041f0 <error@plt>
  41e5a0:	mov	w8, wzr
  41e5a4:	str	w27, [x26, #3456]
  41e5a8:	b	41e500 <wcrtomb@plt+0x196e0>
  41e5ac:	mov	w0, wzr
  41e5b0:	b	41e5d8 <wcrtomb@plt+0x197b8>
  41e5b4:	ldrb	w8, [x19, #4]
  41e5b8:	cbz	w8, 41e5d4 <wcrtomb@plt+0x197b4>
  41e5bc:	ldr	w0, [x19]
  41e5c0:	bl	41fdd0 <wcrtomb@plt+0x1afb0>
  41e5c4:	cbz	w0, 41e5d4 <wcrtomb@plt+0x197b4>
  41e5c8:	ldr	x8, [x19, #24]
  41e5cc:	ldr	x0, [x8]
  41e5d0:	bl	428704 <wcrtomb@plt+0x238e4>
  41e5d4:	mov	w0, #0x1                   	// #1
  41e5d8:	ldp	x20, x19, [sp, #80]
  41e5dc:	ldp	x22, x21, [sp, #64]
  41e5e0:	ldp	x24, x23, [sp, #48]
  41e5e4:	ldp	x26, x25, [sp, #32]
  41e5e8:	ldr	x27, [sp, #16]
  41e5ec:	ldp	x29, x30, [sp], #96
  41e5f0:	ret
  41e5f4:	stp	x29, x30, [sp, #-48]!
  41e5f8:	stp	x22, x21, [sp, #16]
  41e5fc:	stp	x20, x19, [sp, #32]
  41e600:	mov	x29, sp
  41e604:	cbz	x3, 41e68c <wcrtomb@plt+0x1986c>
  41e608:	ldr	x9, [x0, #24]
  41e60c:	ldr	x8, [x1]
  41e610:	mov	x20, x1
  41e614:	mov	x21, x0
  41e618:	ldr	x10, [x9, #288]
  41e61c:	cmp	x8, x10
  41e620:	b.cs	41e68c <wcrtomb@plt+0x1986c>  // b.hs, b.nlast
  41e624:	mov	x19, x2
  41e628:	sub	x22, x3, #0x1
  41e62c:	ldr	x9, [x9, #304]
  41e630:	lsl	x8, x8, #4
  41e634:	mov	w2, #0xc                   	// #12
  41e638:	mov	x1, x19
  41e63c:	ldr	x0, [x9, x8]
  41e640:	bl	40a560 <wcrtomb@plt+0x5740>
  41e644:	ldr	x8, [x21, #24]
  41e648:	ldr	x9, [x20]
  41e64c:	add	x1, x19, #0xc
  41e650:	mov	w2, #0xc                   	// #12
  41e654:	ldr	x8, [x8, #304]
  41e658:	add	x8, x8, x9, lsl #4
  41e65c:	ldr	x0, [x8, #8]
  41e660:	bl	40a560 <wcrtomb@plt+0x5740>
  41e664:	ldr	x8, [x20]
  41e668:	subs	x22, x22, #0x1
  41e66c:	add	x8, x8, #0x1
  41e670:	str	x8, [x20]
  41e674:	b.cc	41e68c <wcrtomb@plt+0x1986c>  // b.lo, b.ul, b.last
  41e678:	ldr	x9, [x21, #24]
  41e67c:	add	x19, x19, #0x18
  41e680:	ldr	x10, [x9, #288]
  41e684:	cmp	x8, x10
  41e688:	b.cc	41e62c <wcrtomb@plt+0x1980c>  // b.lo, b.ul, b.last
  41e68c:	ldp	x20, x19, [sp, #32]
  41e690:	ldp	x22, x21, [sp, #16]
  41e694:	ldp	x29, x30, [sp], #48
  41e698:	ret
  41e69c:	sub	sp, sp, #0x40
  41e6a0:	stp	x29, x30, [sp, #16]
  41e6a4:	str	x21, [sp, #32]
  41e6a8:	stp	x20, x19, [sp, #48]
  41e6ac:	mov	x21, x1
  41e6b0:	ldrb	w9, [x21, #12]!
  41e6b4:	add	x29, sp, #0x10
  41e6b8:	cbz	w9, 41e734 <wcrtomb@plt+0x19914>
  41e6bc:	mov	x8, x1
  41e6c0:	mov	x19, x0
  41e6c4:	mov	w1, #0xc                   	// #12
  41e6c8:	mov	x0, x8
  41e6cc:	bl	4183c0 <wcrtomb@plt+0x135a0>
  41e6d0:	mov	x20, x0
  41e6d4:	str	x0, [sp]
  41e6d8:	mov	w1, #0xc                   	// #12
  41e6dc:	mov	x0, x21
  41e6e0:	bl	4183c0 <wcrtomb@plt+0x135a0>
  41e6e4:	mov	x8, x0
  41e6e8:	str	x0, [sp, #8]
  41e6ec:	orr	x9, x0, x20
  41e6f0:	mov	w0, #0x2                   	// #2
  41e6f4:	tbnz	x9, #63, 41e740 <wcrtomb@plt+0x19920>
  41e6f8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41e6fc:	sub	x9, x9, x8
  41e700:	cmp	x9, x20
  41e704:	b.lt	41e740 <wcrtomb@plt+0x19920>  // b.tstop
  41e708:	ldr	x0, [x19, #24]
  41e70c:	add	x8, x8, x20
  41e710:	ldr	x9, [x0, #136]
  41e714:	cmp	x9, x8
  41e718:	b.lt	41e73c <wcrtomb@plt+0x1991c>  // b.tstop
  41e71c:	ldr	x8, [x0, #264]
  41e720:	tbnz	x8, #63, 41e73c <wcrtomb@plt+0x1991c>
  41e724:	mov	x1, sp
  41e728:	bl	41e754 <wcrtomb@plt+0x19934>
  41e72c:	mov	w0, wzr
  41e730:	b	41e740 <wcrtomb@plt+0x19920>
  41e734:	mov	w0, #0x1                   	// #1
  41e738:	b	41e740 <wcrtomb@plt+0x19920>
  41e73c:	mov	w0, #0x2                   	// #2
  41e740:	ldp	x20, x19, [sp, #48]
  41e744:	ldr	x21, [sp, #32]
  41e748:	ldp	x29, x30, [sp, #16]
  41e74c:	add	sp, sp, #0x40
  41e750:	ret
  41e754:	stp	x29, x30, [sp, #-48]!
  41e758:	str	x21, [sp, #16]
  41e75c:	stp	x20, x19, [sp, #32]
  41e760:	ldp	x21, x8, [x0, #288]
  41e764:	mov	x19, x0
  41e768:	ldr	x0, [x0, #304]
  41e76c:	mov	x20, x1
  41e770:	cmp	x21, x8
  41e774:	mov	x29, sp
  41e778:	b.ne	41e78c <wcrtomb@plt+0x1996c>  // b.any
  41e77c:	add	x1, x19, #0x128
  41e780:	mov	w2, #0x10                  	// #16
  41e784:	bl	43d260 <argp_usage@@Base+0xb664>
  41e788:	str	x0, [x19, #304]
  41e78c:	ldr	q0, [x20]
  41e790:	add	x8, x21, #0x1
  41e794:	str	q0, [x0, x21, lsl #4]
  41e798:	str	x8, [x19, #288]
  41e79c:	ldp	x20, x19, [sp, #32]
  41e7a0:	ldr	x21, [sp, #16]
  41e7a4:	ldp	x29, x30, [sp], #48
  41e7a8:	ret
  41e7ac:	stp	x29, x30, [sp, #-32]!
  41e7b0:	stp	x20, x19, [sp, #16]
  41e7b4:	ldrb	w8, [x0, #4]
  41e7b8:	mov	x20, x0
  41e7bc:	mov	x19, x1
  41e7c0:	mov	x29, sp
  41e7c4:	cbz	w8, 41e7e4 <wcrtomb@plt+0x199c4>
  41e7c8:	ldr	w0, [x20]
  41e7cc:	mov	x1, x19
  41e7d0:	mov	w2, wzr
  41e7d4:	bl	404390 <lseek@plt>
  41e7d8:	tbnz	x0, #63, 41e7f4 <wcrtomb@plt+0x199d4>
  41e7dc:	mov	w0, #0x1                   	// #1
  41e7e0:	b	41e808 <wcrtomb@plt+0x199e8>
  41e7e4:	mov	x0, x20
  41e7e8:	mov	x1, x19
  41e7ec:	bl	41e814 <wcrtomb@plt+0x199f4>
  41e7f0:	tbnz	w0, #0, 41e7dc <wcrtomb@plt+0x199bc>
  41e7f4:	ldr	x8, [x20, #24]
  41e7f8:	mov	x1, x19
  41e7fc:	ldr	x0, [x8]
  41e800:	bl	41ad34 <wcrtomb@plt+0x15f14>
  41e804:	mov	w0, wzr
  41e808:	ldp	x20, x19, [sp, #16]
  41e80c:	ldp	x29, x30, [sp], #32
  41e810:	ret
  41e814:	stp	x29, x30, [sp, #-48]!
  41e818:	stp	x22, x21, [sp, #16]
  41e81c:	stp	x20, x19, [sp, #32]
  41e820:	ldr	x8, [x0, #8]
  41e824:	mov	x29, sp
  41e828:	cmp	x8, x1
  41e82c:	b.le	41e848 <wcrtomb@plt+0x19a28>
  41e830:	bl	404d00 <__errno_location@plt>
  41e834:	mov	x8, x0
  41e838:	mov	w9, #0x16                  	// #22
  41e83c:	mov	w0, wzr
  41e840:	str	w9, [x8]
  41e844:	b	41e8a0 <wcrtomb@plt+0x19a80>
  41e848:	ldr	x8, [x0, #8]
  41e84c:	mov	x19, x0
  41e850:	mov	x20, x1
  41e854:	cmp	x8, x1
  41e858:	b.ge	41e89c <wcrtomb@plt+0x19a7c>  // b.tcont
  41e85c:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x14da0>
  41e860:	mov	w22, #0x200                 	// #512
  41e864:	add	x21, x21, #0x490
  41e868:	ldr	w0, [x19]
  41e86c:	sub	x8, x20, x8
  41e870:	cmp	x8, #0x200
  41e874:	csel	x2, x8, x22, lt  // lt = tstop
  41e878:	mov	x1, x21
  41e87c:	bl	404830 <write@plt>
  41e880:	cmp	x0, #0x0
  41e884:	b.le	41e8b0 <wcrtomb@plt+0x19a90>
  41e888:	ldr	x8, [x19, #8]
  41e88c:	add	x8, x8, x0
  41e890:	cmp	x8, x20
  41e894:	str	x8, [x19, #8]
  41e898:	b.lt	41e868 <wcrtomb@plt+0x19a48>  // b.tstop
  41e89c:	mov	w0, #0x1                   	// #1
  41e8a0:	ldp	x20, x19, [sp, #32]
  41e8a4:	ldp	x22, x21, [sp, #16]
  41e8a8:	ldp	x29, x30, [sp], #48
  41e8ac:	ret
  41e8b0:	cbz	x0, 41e830 <wcrtomb@plt+0x19a10>
  41e8b4:	mov	w0, wzr
  41e8b8:	b	41e8a0 <wcrtomb@plt+0x19a80>
  41e8bc:	ldr	x8, [x0, #24]
  41e8c0:	ldr	x9, [x8, #288]
  41e8c4:	cbz	x9, 41e8d0 <wcrtomb@plt+0x19ab0>
  41e8c8:	mov	w0, #0x1                   	// #1
  41e8cc:	ret
  41e8d0:	ldr	w8, [x8, #276]
  41e8d4:	cmp	w8, #0x0
  41e8d8:	cset	w0, ne  // ne = any
  41e8dc:	ret
  41e8e0:	stp	x29, x30, [sp, #-16]!
  41e8e4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41e8e8:	ldr	x9, [x0, #24]
  41e8ec:	ldr	w8, [x8, #608]
  41e8f0:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  41e8f4:	mov	x29, sp
  41e8f8:	str	w8, [x9, #276]
  41e8fc:	ldr	w10, [x10, #88]
  41e900:	str	w10, [x9, #280]
  41e904:	cbz	w8, 41e914 <wcrtomb@plt+0x19af4>
  41e908:	bl	41ef98 <wcrtomb@plt+0x1a178>
  41e90c:	mov	w0, #0x1                   	// #1
  41e910:	b	41e918 <wcrtomb@plt+0x19af8>
  41e914:	bl	41ed70 <wcrtomb@plt+0x19f50>
  41e918:	and	w0, w0, #0x1
  41e91c:	ldp	x29, x30, [sp], #16
  41e920:	ret
  41e924:	sub	sp, sp, #0x90
  41e928:	stp	x29, x30, [sp, #48]
  41e92c:	stp	x28, x27, [sp, #64]
  41e930:	stp	x26, x25, [sp, #80]
  41e934:	stp	x24, x23, [sp, #96]
  41e938:	stp	x22, x21, [sp, #112]
  41e93c:	stp	x20, x19, [sp, #128]
  41e940:	ldr	x8, [x0, #24]
  41e944:	add	x29, sp, #0x30
  41e948:	ldr	w8, [x8, #276]
  41e94c:	cbz	w8, 41ed08 <wcrtomb@plt+0x19ee8>
  41e950:	mov	x19, x0
  41e954:	bl	405568 <wcrtomb@plt+0x748>
  41e958:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41e95c:	ldr	x8, [x8, #4072]
  41e960:	mov	x20, x0
  41e964:	mov	x0, x8
  41e968:	bl	405744 <wcrtomb@plt+0x924>
  41e96c:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41e970:	cbz	x0, 41ed60 <wcrtomb@plt+0x19f40>
  41e974:	mov	x21, x0
  41e978:	mov	x22, xzr
  41e97c:	add	x8, x0, #0x200
  41e980:	add	x23, sp, #0x10
  41e984:	mov	x24, x0
  41e988:	b	41e9a0 <wcrtomb@plt+0x19b80>
  41e98c:	ldrb	w9, [x24], #1
  41e990:	strb	w9, [x23, x22]
  41e994:	cmp	w9, #0xa
  41e998:	add	x22, x22, #0x1
  41e99c:	b.eq	41ea24 <wcrtomb@plt+0x19c04>  // b.none
  41e9a0:	cmp	x22, #0x14
  41e9a4:	b.eq	41e9d0 <wcrtomb@plt+0x19bb0>  // b.none
  41e9a8:	cmp	x24, x8
  41e9ac:	b.ne	41e98c <wcrtomb@plt+0x19b6c>  // b.any
  41e9b0:	mov	x0, x21
  41e9b4:	bl	405744 <wcrtomb@plt+0x924>
  41e9b8:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41e9bc:	cbz	x0, 41ed60 <wcrtomb@plt+0x19f40>
  41e9c0:	mov	x21, x0
  41e9c4:	add	x8, x0, #0x200
  41e9c8:	mov	x24, x0
  41e9cc:	b	41e98c <wcrtomb@plt+0x19b6c>
  41e9d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41e9d4:	ldr	x8, [x8, #1008]
  41e9d8:	cbz	x8, 41e9e0 <wcrtomb@plt+0x19bc0>
  41e9dc:	blr	x8
  41e9e0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41e9e4:	add	x1, x1, #0x6f1
  41e9e8:	mov	w2, #0x5                   	// #5
  41e9ec:	mov	x0, xzr
  41e9f0:	bl	404bf0 <dcgettext@plt>
  41e9f4:	ldr	x8, [x19, #24]
  41e9f8:	mov	x2, x0
  41e9fc:	mov	w0, wzr
  41ea00:	mov	w1, wzr
  41ea04:	ldr	x3, [x8]
  41ea08:	bl	4041f0 <error@plt>
  41ea0c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ea10:	mov	w9, #0x2                   	// #2
  41ea14:	str	w9, [x8, #3456]
  41ea18:	mov	w8, #0x1                   	// #1
  41ea1c:	cbnz	w8, 41ecf4 <wcrtomb@plt+0x19ed4>
  41ea20:	b	41ea38 <wcrtomb@plt+0x19c18>
  41ea24:	add	x9, sp, #0x10
  41ea28:	mov	w8, wzr
  41ea2c:	add	x9, x9, x22
  41ea30:	sturb	wzr, [x9, #-1]
  41ea34:	cbnz	w8, 41ecf4 <wcrtomb@plt+0x19ed4>
  41ea38:	sub	x0, x29, #0x8
  41ea3c:	add	x1, sp, #0x10
  41ea40:	mov	x2, #0xffffffffffffffff    	// #-1
  41ea44:	bl	41f338 <wcrtomb@plt+0x1a518>
  41ea48:	tbz	w0, #0, 41eca8 <wcrtomb@plt+0x19e88>
  41ea4c:	ldur	x0, [x29, #-8]
  41ea50:	ldr	x8, [x19, #24]
  41ea54:	mov	w1, #0x10                  	// #16
  41ea58:	str	x0, [x8, #296]
  41ea5c:	bl	43d32c <argp_usage@@Base+0xb730>
  41ea60:	ldr	x8, [x19, #24]
  41ea64:	str	x0, [x8, #304]
  41ea68:	str	xzr, [x8, #288]
  41ea6c:	ldr	x8, [x19, #24]
  41ea70:	ldr	x8, [x8, #296]
  41ea74:	cbz	x8, 41ec80 <wcrtomb@plt+0x19e60>
  41ea78:	mov	x25, xzr
  41ea7c:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  41ea80:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ea84:	mov	w28, #0x2                   	// #2
  41ea88:	add	x23, sp, #0x10
  41ea8c:	mov	x22, xzr
  41ea90:	add	x8, x21, #0x200
  41ea94:	b	41eaac <wcrtomb@plt+0x19c8c>
  41ea98:	ldrb	w9, [x24], #1
  41ea9c:	strb	w9, [x23, x22]
  41eaa0:	cmp	w9, #0xa
  41eaa4:	add	x22, x22, #0x1
  41eaa8:	b.eq	41eb24 <wcrtomb@plt+0x19d04>  // b.none
  41eaac:	cmp	x22, #0x14
  41eab0:	b.eq	41eadc <wcrtomb@plt+0x19cbc>  // b.none
  41eab4:	cmp	x24, x8
  41eab8:	b.ne	41ea98 <wcrtomb@plt+0x19c78>  // b.any
  41eabc:	mov	x0, x21
  41eac0:	bl	405744 <wcrtomb@plt+0x924>
  41eac4:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41eac8:	cbz	x0, 41ed2c <wcrtomb@plt+0x19f0c>
  41eacc:	mov	x21, x0
  41ead0:	add	x8, x0, #0x200
  41ead4:	mov	x24, x0
  41ead8:	b	41ea98 <wcrtomb@plt+0x19c78>
  41eadc:	ldr	x8, [x26, #1008]
  41eae0:	cbz	x8, 41eae8 <wcrtomb@plt+0x19cc8>
  41eae4:	blr	x8
  41eae8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41eaec:	mov	w2, #0x5                   	// #5
  41eaf0:	mov	x0, xzr
  41eaf4:	add	x1, x1, #0x6f1
  41eaf8:	bl	404bf0 <dcgettext@plt>
  41eafc:	ldr	x8, [x19, #24]
  41eb00:	mov	x2, x0
  41eb04:	mov	w0, wzr
  41eb08:	mov	w1, wzr
  41eb0c:	ldr	x3, [x8]
  41eb10:	bl	4041f0 <error@plt>
  41eb14:	str	w28, [x27, #3456]
  41eb18:	mov	w8, #0x1                   	// #1
  41eb1c:	cbnz	w8, 41ec68 <wcrtomb@plt+0x19e48>
  41eb20:	b	41eb34 <wcrtomb@plt+0x19d14>
  41eb24:	mov	w8, wzr
  41eb28:	add	x9, x23, x22
  41eb2c:	sturb	wzr, [x9, #-1]
  41eb30:	cbnz	w8, 41ec68 <wcrtomb@plt+0x19e48>
  41eb34:	sub	x0, x29, #0x8
  41eb38:	add	x1, sp, #0x10
  41eb3c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41eb40:	bl	41f338 <wcrtomb@plt+0x1a518>
  41eb44:	tbz	w0, #0, 41ec28 <wcrtomb@plt+0x19e08>
  41eb48:	ldur	x8, [x29, #-8]
  41eb4c:	mov	x22, xzr
  41eb50:	str	x8, [sp]
  41eb54:	add	x8, x21, #0x200
  41eb58:	b	41eb70 <wcrtomb@plt+0x19d50>
  41eb5c:	ldrb	w9, [x24], #1
  41eb60:	strb	w9, [x23, x22]
  41eb64:	cmp	w9, #0xa
  41eb68:	add	x22, x22, #0x1
  41eb6c:	b.eq	41ebe8 <wcrtomb@plt+0x19dc8>  // b.none
  41eb70:	cmp	x22, #0x14
  41eb74:	b.eq	41eba0 <wcrtomb@plt+0x19d80>  // b.none
  41eb78:	cmp	x24, x8
  41eb7c:	b.ne	41eb5c <wcrtomb@plt+0x19d3c>  // b.any
  41eb80:	mov	x0, x21
  41eb84:	bl	405744 <wcrtomb@plt+0x924>
  41eb88:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41eb8c:	cbz	x0, 41ed2c <wcrtomb@plt+0x19f0c>
  41eb90:	mov	x21, x0
  41eb94:	add	x8, x0, #0x200
  41eb98:	mov	x24, x0
  41eb9c:	b	41eb5c <wcrtomb@plt+0x19d3c>
  41eba0:	ldr	x8, [x26, #1008]
  41eba4:	cbz	x8, 41ebac <wcrtomb@plt+0x19d8c>
  41eba8:	blr	x8
  41ebac:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41ebb0:	mov	w2, #0x5                   	// #5
  41ebb4:	mov	x0, xzr
  41ebb8:	add	x1, x1, #0x6f1
  41ebbc:	bl	404bf0 <dcgettext@plt>
  41ebc0:	ldr	x8, [x19, #24]
  41ebc4:	mov	x2, x0
  41ebc8:	mov	w0, wzr
  41ebcc:	mov	w1, wzr
  41ebd0:	ldr	x3, [x8]
  41ebd4:	bl	4041f0 <error@plt>
  41ebd8:	str	w28, [x27, #3456]
  41ebdc:	mov	w8, #0x1                   	// #1
  41ebe0:	cbnz	w8, 41ec68 <wcrtomb@plt+0x19e48>
  41ebe4:	b	41ebf8 <wcrtomb@plt+0x19dd8>
  41ebe8:	mov	w8, wzr
  41ebec:	add	x9, x23, x22
  41ebf0:	sturb	wzr, [x9, #-1]
  41ebf4:	cbnz	w8, 41ec68 <wcrtomb@plt+0x19e48>
  41ebf8:	sub	x0, x29, #0x8
  41ebfc:	add	x1, sp, #0x10
  41ec00:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41ec04:	bl	41f338 <wcrtomb@plt+0x1a518>
  41ec08:	tbz	w0, #0, 41ec28 <wcrtomb@plt+0x19e08>
  41ec0c:	ldur	x8, [x29, #-8]
  41ec10:	mov	x1, sp
  41ec14:	str	x8, [sp, #8]
  41ec18:	ldr	x0, [x19, #24]
  41ec1c:	bl	41e754 <wcrtomb@plt+0x19934>
  41ec20:	mov	w8, wzr
  41ec24:	b	41ec68 <wcrtomb@plt+0x19e48>
  41ec28:	ldr	x8, [x26, #1008]
  41ec2c:	cbz	x8, 41ec34 <wcrtomb@plt+0x19e14>
  41ec30:	blr	x8
  41ec34:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41ec38:	mov	w2, #0x5                   	// #5
  41ec3c:	mov	x0, xzr
  41ec40:	add	x1, x1, #0x71f
  41ec44:	bl	404bf0 <dcgettext@plt>
  41ec48:	ldr	x8, [x19, #24]
  41ec4c:	mov	x2, x0
  41ec50:	mov	w0, wzr
  41ec54:	mov	w1, wzr
  41ec58:	ldr	x3, [x8]
  41ec5c:	bl	4041f0 <error@plt>
  41ec60:	str	w28, [x27, #3456]
  41ec64:	mov	w8, #0x1                   	// #1
  41ec68:	cbnz	w8, 41ed00 <wcrtomb@plt+0x19ee0>
  41ec6c:	ldr	x8, [x19, #24]
  41ec70:	add	x25, x25, #0x1
  41ec74:	ldr	x8, [x8, #296]
  41ec78:	cmp	x25, x8
  41ec7c:	b.cc	41ea8c <wcrtomb@plt+0x19c6c>  // b.lo, b.ul, b.last
  41ec80:	mov	x0, x21
  41ec84:	bl	405744 <wcrtomb@plt+0x924>
  41ec88:	bl	405568 <wcrtomb@plt+0x748>
  41ec8c:	ldr	x9, [x19, #16]
  41ec90:	sub	x10, x0, x20
  41ec94:	mov	w8, wzr
  41ec98:	add	x9, x9, x10, lsl #9
  41ec9c:	str	x9, [x19, #16]
  41eca0:	cbnz	w8, 41ecf8 <wcrtomb@plt+0x19ed8>
  41eca4:	b	41ed08 <wcrtomb@plt+0x19ee8>
  41eca8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ecac:	ldr	x8, [x8, #1008]
  41ecb0:	cbz	x8, 41ecb8 <wcrtomb@plt+0x19e98>
  41ecb4:	blr	x8
  41ecb8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41ecbc:	add	x1, x1, #0x71f
  41ecc0:	mov	w2, #0x5                   	// #5
  41ecc4:	mov	x0, xzr
  41ecc8:	bl	404bf0 <dcgettext@plt>
  41eccc:	ldr	x8, [x19, #24]
  41ecd0:	mov	x2, x0
  41ecd4:	mov	w0, wzr
  41ecd8:	mov	w1, wzr
  41ecdc:	ldr	x3, [x8]
  41ece0:	bl	4041f0 <error@plt>
  41ece4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ece8:	mov	w9, #0x2                   	// #2
  41ecec:	str	w9, [x8, #3456]
  41ecf0:	mov	w8, #0x1                   	// #1
  41ecf4:	cbz	w8, 41ed08 <wcrtomb@plt+0x19ee8>
  41ecf8:	mov	w0, wzr
  41ecfc:	b	41ed0c <wcrtomb@plt+0x19eec>
  41ed00:	mov	w8, #0x1                   	// #1
  41ed04:	cbnz	w8, 41ecf8 <wcrtomb@plt+0x19ed8>
  41ed08:	mov	w0, #0x1                   	// #1
  41ed0c:	ldp	x20, x19, [sp, #128]
  41ed10:	ldp	x22, x21, [sp, #112]
  41ed14:	ldp	x24, x23, [sp, #96]
  41ed18:	ldp	x26, x25, [sp, #80]
  41ed1c:	ldp	x28, x27, [sp, #64]
  41ed20:	ldp	x29, x30, [sp, #48]
  41ed24:	add	sp, sp, #0x90
  41ed28:	ret
  41ed2c:	ldr	x8, [x26, #1008]
  41ed30:	cbz	x8, 41ed38 <wcrtomb@plt+0x19f18>
  41ed34:	blr	x8
  41ed38:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  41ed3c:	add	x1, x1, #0xc61
  41ed40:	mov	w2, #0x5                   	// #5
  41ed44:	mov	x0, xzr
  41ed48:	bl	404bf0 <dcgettext@plt>
  41ed4c:	mov	x2, x0
  41ed50:	mov	w0, wzr
  41ed54:	mov	w1, wzr
  41ed58:	bl	4041f0 <error@plt>
  41ed5c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  41ed60:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ed64:	ldr	x8, [x8, #1008]
  41ed68:	cbnz	x8, 41ed34 <wcrtomb@plt+0x19f14>
  41ed6c:	b	41ed38 <wcrtomb@plt+0x19f18>
  41ed70:	sub	sp, sp, #0x60
  41ed74:	stp	x29, x30, [sp, #32]
  41ed78:	stp	x24, x23, [sp, #48]
  41ed7c:	stp	x22, x21, [sp, #64]
  41ed80:	stp	x20, x19, [sp, #80]
  41ed84:	add	x29, sp, #0x20
  41ed88:	mov	x19, x0
  41ed8c:	bl	405568 <wcrtomb@plt+0x748>
  41ed90:	ldr	x1, [x19, #24]
  41ed94:	mov	x20, x0
  41ed98:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  41ed9c:	add	x0, x0, #0x8f6
  41eda0:	ldr	x24, [x1, #304]
  41eda4:	mov	x2, xzr
  41eda8:	bl	41213c <wcrtomb@plt+0xd31c>
  41edac:	ldr	x1, [x19, #24]
  41edb0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  41edb4:	add	x0, x0, #0x8e1
  41edb8:	mov	x2, xzr
  41edbc:	bl	41213c <wcrtomb@plt+0xd31c>
  41edc0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  41edc4:	add	x0, x0, #0x92c
  41edc8:	bl	410fe0 <wcrtomb@plt+0xc1c0>
  41edcc:	tbnz	w0, #0, 41eec8 <wcrtomb@plt+0x1a0a8>
  41edd0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41edd4:	ldr	w8, [x8, #88]
  41edd8:	cbz	w8, 41eec8 <wcrtomb@plt+0x1a0a8>
  41eddc:	ldr	x1, [x19, #24]
  41ede0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  41ede4:	add	x0, x0, #0x89b
  41ede8:	mov	x2, xzr
  41edec:	bl	41213c <wcrtomb@plt+0xd31c>
  41edf0:	ldr	x0, [x19, #24]
  41edf4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41edf8:	add	x1, x1, #0x6da
  41edfc:	mov	x2, xzr
  41ee00:	ldr	x23, [x0, #8]
  41ee04:	bl	41134c <wcrtomb@plt+0xc52c>
  41ee08:	ldr	x8, [x19, #24]
  41ee0c:	str	x0, [x8, #8]
  41ee10:	add	x0, x8, #0x158
  41ee14:	bl	412364 <wcrtomb@plt+0xd544>
  41ee18:	stur	xzr, [x29, #-8]
  41ee1c:	ldr	x8, [x19, #24]
  41ee20:	ldr	x9, [x8, #288]
  41ee24:	cbz	x9, 41ef28 <wcrtomb@plt+0x1a108>
  41ee28:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x17da0>
  41ee2c:	mov	x9, xzr
  41ee30:	add	x21, x21, #0xdc8
  41ee34:	b	41eeb4 <wcrtomb@plt+0x1a094>
  41ee38:	ldur	x8, [x29, #-8]
  41ee3c:	ldr	x9, [x19, #24]
  41ee40:	mov	x1, sp
  41ee44:	lsl	x8, x8, #4
  41ee48:	ldr	x0, [x24, x8]
  41ee4c:	add	x22, x9, #0x158
  41ee50:	bl	43650c <argp_usage@@Base+0x4910>
  41ee54:	mov	x1, x0
  41ee58:	mov	x0, x22
  41ee5c:	bl	41236c <wcrtomb@plt+0xd54c>
  41ee60:	ldr	x8, [x19, #24]
  41ee64:	mov	x1, x21
  41ee68:	add	x0, x8, #0x158
  41ee6c:	bl	41236c <wcrtomb@plt+0xd54c>
  41ee70:	ldur	x8, [x29, #-8]
  41ee74:	ldr	x9, [x19, #24]
  41ee78:	mov	x1, sp
  41ee7c:	add	x8, x24, x8, lsl #4
  41ee80:	ldr	x0, [x8, #8]
  41ee84:	add	x22, x9, #0x158
  41ee88:	bl	43650c <argp_usage@@Base+0x4910>
  41ee8c:	mov	x1, x0
  41ee90:	mov	x0, x22
  41ee94:	bl	41236c <wcrtomb@plt+0xd54c>
  41ee98:	ldur	x8, [x29, #-8]
  41ee9c:	add	x9, x8, #0x1
  41eea0:	stur	x9, [x29, #-8]
  41eea4:	ldr	x8, [x19, #24]
  41eea8:	ldr	x10, [x8, #288]
  41eeac:	cmp	x9, x10
  41eeb0:	b.cs	41ef28 <wcrtomb@plt+0x1a108>  // b.hs, b.nlast
  41eeb4:	cbz	x9, 41ee38 <wcrtomb@plt+0x1a018>
  41eeb8:	add	x0, x8, #0x158
  41eebc:	mov	x1, x21
  41eec0:	bl	41236c <wcrtomb@plt+0xd54c>
  41eec4:	b	41ee38 <wcrtomb@plt+0x1a018>
  41eec8:	stur	xzr, [x29, #-8]
  41eecc:	ldr	x1, [x19, #24]
  41eed0:	ldr	x8, [x1, #288]
  41eed4:	cbz	x8, 41ef20 <wcrtomb@plt+0x1a100>
  41eed8:	adrp	x21, 451000 <_obstack_memory_used@@Base+0x12da0>
  41eedc:	adrp	x22, 451000 <_obstack_memory_used@@Base+0x12da0>
  41eee0:	add	x21, x21, #0x906
  41eee4:	add	x22, x22, #0x918
  41eee8:	sub	x2, x29, #0x8
  41eeec:	mov	x0, x21
  41eef0:	bl	41213c <wcrtomb@plt+0xd31c>
  41eef4:	ldr	x1, [x19, #24]
  41eef8:	sub	x2, x29, #0x8
  41eefc:	mov	x0, x22
  41ef00:	bl	41213c <wcrtomb@plt+0xd31c>
  41ef04:	ldur	x8, [x29, #-8]
  41ef08:	add	x8, x8, #0x1
  41ef0c:	stur	x8, [x29, #-8]
  41ef10:	ldr	x1, [x19, #24]
  41ef14:	ldr	x9, [x1, #288]
  41ef18:	cmp	x8, x9
  41ef1c:	b.cc	41eee8 <wcrtomb@plt+0x1a0c8>  // b.lo, b.ul, b.last
  41ef20:	mov	x23, xzr
  41ef24:	b	41ef3c <wcrtomb@plt+0x1a11c>
  41ef28:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  41ef2c:	add	x0, x8, #0x158
  41ef30:	add	x1, x1, #0x92c
  41ef34:	bl	412438 <wcrtomb@plt+0xd618>
  41ef38:	tbz	w0, #0, 41ef64 <wcrtomb@plt+0x1a144>
  41ef3c:	ldr	x0, [x19, #24]
  41ef40:	bl	41f308 <wcrtomb@plt+0x1a4e8>
  41ef44:	ldr	x8, [x19, #24]
  41ef48:	mov	x1, x0
  41ef4c:	mov	x2, x20
  41ef50:	mov	x0, x8
  41ef54:	bl	40b224 <wcrtomb@plt+0x6404>
  41ef58:	mov	w20, #0x1                   	// #1
  41ef5c:	cbnz	x23, 41ef68 <wcrtomb@plt+0x1a148>
  41ef60:	b	41ef7c <wcrtomb@plt+0x1a15c>
  41ef64:	mov	w20, wzr
  41ef68:	ldr	x8, [x19, #24]
  41ef6c:	ldr	x0, [x8, #8]
  41ef70:	bl	4049d0 <free@plt>
  41ef74:	ldr	x8, [x19, #24]
  41ef78:	str	x23, [x8, #8]
  41ef7c:	mov	w0, w20
  41ef80:	ldp	x20, x19, [sp, #80]
  41ef84:	ldp	x22, x21, [sp, #64]
  41ef88:	ldp	x24, x23, [sp, #48]
  41ef8c:	ldp	x29, x30, [sp, #32]
  41ef90:	add	sp, sp, #0x60
  41ef94:	ret
  41ef98:	sub	sp, sp, #0x70
  41ef9c:	stp	x29, x30, [sp, #32]
  41efa0:	stp	x26, x25, [sp, #48]
  41efa4:	stp	x24, x23, [sp, #64]
  41efa8:	stp	x22, x21, [sp, #80]
  41efac:	stp	x20, x19, [sp, #96]
  41efb0:	add	x29, sp, #0x20
  41efb4:	mov	x19, x0
  41efb8:	bl	405568 <wcrtomb@plt+0x748>
  41efbc:	ldr	x8, [x19, #24]
  41efc0:	mov	x20, x0
  41efc4:	add	x1, sp, #0x8
  41efc8:	ldr	x22, [x8, #304]
  41efcc:	ldr	x23, [x8, #8]
  41efd0:	ldr	x8, [x8, #288]
  41efd4:	mov	x0, x8
  41efd8:	bl	43650c <argp_usage@@Base+0x4910>
  41efdc:	bl	404190 <strlen@plt>
  41efe0:	ldr	x1, [x19, #24]
  41efe4:	add	x24, x0, #0x1
  41efe8:	ldr	x8, [x1, #288]
  41efec:	cbz	x8, 41f040 <wcrtomb@plt+0x1a220>
  41eff0:	mov	x25, xzr
  41eff4:	add	x26, x22, #0x8
  41eff8:	ldur	x0, [x26, #-8]
  41effc:	add	x1, sp, #0x8
  41f000:	bl	43650c <argp_usage@@Base+0x4910>
  41f004:	bl	404190 <strlen@plt>
  41f008:	ldr	x8, [x26], #16
  41f00c:	mov	x21, x0
  41f010:	add	x1, sp, #0x8
  41f014:	mov	x0, x8
  41f018:	bl	43650c <argp_usage@@Base+0x4910>
  41f01c:	bl	404190 <strlen@plt>
  41f020:	ldr	x1, [x19, #24]
  41f024:	add	x8, x24, x21
  41f028:	add	x8, x8, x0
  41f02c:	add	x25, x25, #0x1
  41f030:	ldr	x9, [x1, #288]
  41f034:	add	x24, x8, #0x2
  41f038:	cmp	x25, x9
  41f03c:	b.cc	41eff8 <wcrtomb@plt+0x1a1d8>  // b.lo, b.ul, b.last
  41f040:	add	x8, x24, #0x1ff
  41f044:	ldr	x10, [x1, #264]
  41f048:	add	x9, x24, #0x3fe
  41f04c:	cmp	x8, #0x0
  41f050:	csel	x8, x9, x8, lt  // lt = tstop
  41f054:	and	x8, x8, #0xfffffffffffffe00
  41f058:	add	x9, x10, x8
  41f05c:	str	x9, [x1, #264]
  41f060:	ldr	x9, [x19, #16]
  41f064:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  41f068:	add	x0, x0, #0x8ab
  41f06c:	mov	x2, xzr
  41f070:	add	x8, x9, x8
  41f074:	str	x8, [x19, #16]
  41f078:	bl	41213c <wcrtomb@plt+0xd31c>
  41f07c:	ldr	x1, [x19, #24]
  41f080:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  41f084:	add	x0, x0, #0x8bc
  41f088:	mov	x2, xzr
  41f08c:	bl	41213c <wcrtomb@plt+0xd31c>
  41f090:	ldr	x1, [x19, #24]
  41f094:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  41f098:	add	x0, x0, #0x89b
  41f09c:	mov	x2, xzr
  41f0a0:	bl	41213c <wcrtomb@plt+0xd31c>
  41f0a4:	ldr	x1, [x19, #24]
  41f0a8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x12da0>
  41f0ac:	add	x0, x0, #0x8cd
  41f0b0:	mov	x2, xzr
  41f0b4:	bl	41213c <wcrtomb@plt+0xd31c>
  41f0b8:	ldr	x0, [x19, #24]
  41f0bc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41f0c0:	add	x1, x1, #0x6da
  41f0c4:	mov	x2, xzr
  41f0c8:	bl	41134c <wcrtomb@plt+0xc52c>
  41f0cc:	ldr	x8, [x19, #24]
  41f0d0:	mov	x21, x0
  41f0d4:	str	x0, [x8, #8]
  41f0d8:	bl	404190 <strlen@plt>
  41f0dc:	cmp	x0, #0x65
  41f0e0:	b.cc	41f0e8 <wcrtomb@plt+0x1a2c8>  // b.lo, b.ul, b.last
  41f0e4:	strb	wzr, [x21, #100]
  41f0e8:	ldr	x0, [x19, #24]
  41f0ec:	bl	41f308 <wcrtomb@plt+0x1a4e8>
  41f0f0:	ldr	x8, [x19, #24]
  41f0f4:	mov	x1, x0
  41f0f8:	mov	x2, x20
  41f0fc:	mov	x0, x8
  41f100:	bl	40b224 <wcrtomb@plt+0x6404>
  41f104:	ldr	x8, [x19, #24]
  41f108:	ldr	x0, [x8, #8]
  41f10c:	bl	4049d0 <free@plt>
  41f110:	ldr	x8, [x19, #24]
  41f114:	str	x23, [x8, #8]
  41f118:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41f11c:	ldr	x8, [x19, #24]
  41f120:	mov	x20, x0
  41f124:	add	x1, sp, #0x8
  41f128:	ldr	x8, [x8, #288]
  41f12c:	mov	x0, x8
  41f130:	bl	43650c <argp_usage@@Base+0x4910>
  41f134:	ldrb	w8, [x0]
  41f138:	cbz	w8, 41f180 <wcrtomb@plt+0x1a360>
  41f13c:	add	x8, x20, #0x200
  41f140:	add	x23, x0, #0x1
  41f144:	mov	x21, x20
  41f148:	b	41f15c <wcrtomb@plt+0x1a33c>
  41f14c:	ldurb	w9, [x23, #-1]
  41f150:	strb	w9, [x21], #1
  41f154:	ldrb	w9, [x23], #1
  41f158:	cbz	w9, 41f184 <wcrtomb@plt+0x1a364>
  41f15c:	cmp	x21, x8
  41f160:	b.ne	41f14c <wcrtomb@plt+0x1a32c>  // b.any
  41f164:	mov	x0, x20
  41f168:	bl	405744 <wcrtomb@plt+0x924>
  41f16c:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41f170:	mov	x21, x0
  41f174:	add	x8, x0, #0x200
  41f178:	mov	x20, x0
  41f17c:	b	41f14c <wcrtomb@plt+0x1a32c>
  41f180:	mov	x21, x20
  41f184:	add	x8, x20, #0x200
  41f188:	cmp	x21, x8
  41f18c:	b.ne	41f1a4 <wcrtomb@plt+0x1a384>  // b.any
  41f190:	mov	x0, x20
  41f194:	bl	405744 <wcrtomb@plt+0x924>
  41f198:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41f19c:	mov	x21, x0
  41f1a0:	mov	x20, x0
  41f1a4:	mov	w23, #0xa                   	// #10
  41f1a8:	strb	w23, [x21], #1
  41f1ac:	ldr	x8, [x19, #24]
  41f1b0:	ldr	x8, [x8, #288]
  41f1b4:	cbz	x8, 41f2d0 <wcrtomb@plt+0x1a4b0>
  41f1b8:	mov	x24, xzr
  41f1bc:	b	41f1e4 <wcrtomb@plt+0x1a3c4>
  41f1c0:	add	x8, x20, #0x200
  41f1c4:	cmp	x21, x8
  41f1c8:	b.eq	41f2b8 <wcrtomb@plt+0x1a498>  // b.none
  41f1cc:	strb	w23, [x21], #1
  41f1d0:	ldr	x8, [x19, #24]
  41f1d4:	add	x24, x24, #0x1
  41f1d8:	ldr	x8, [x8, #288]
  41f1dc:	cmp	x24, x8
  41f1e0:	b.cs	41f2d0 <wcrtomb@plt+0x1a4b0>  // b.hs, b.nlast
  41f1e4:	lsl	x8, x24, #4
  41f1e8:	ldr	x0, [x22, x8]
  41f1ec:	add	x1, sp, #0x8
  41f1f0:	bl	43650c <argp_usage@@Base+0x4910>
  41f1f4:	ldrb	w8, [x0]
  41f1f8:	cbz	w8, 41f23c <wcrtomb@plt+0x1a41c>
  41f1fc:	add	x8, x20, #0x200
  41f200:	add	x25, x0, #0x1
  41f204:	b	41f218 <wcrtomb@plt+0x1a3f8>
  41f208:	ldurb	w9, [x25, #-1]
  41f20c:	strb	w9, [x21], #1
  41f210:	ldrb	w9, [x25], #1
  41f214:	cbz	w9, 41f23c <wcrtomb@plt+0x1a41c>
  41f218:	cmp	x21, x8
  41f21c:	b.ne	41f208 <wcrtomb@plt+0x1a3e8>  // b.any
  41f220:	mov	x0, x20
  41f224:	bl	405744 <wcrtomb@plt+0x924>
  41f228:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41f22c:	mov	x21, x0
  41f230:	add	x8, x0, #0x200
  41f234:	mov	x20, x0
  41f238:	b	41f208 <wcrtomb@plt+0x1a3e8>
  41f23c:	add	x8, x20, #0x200
  41f240:	cmp	x21, x8
  41f244:	b.ne	41f25c <wcrtomb@plt+0x1a43c>  // b.any
  41f248:	mov	x0, x20
  41f24c:	bl	405744 <wcrtomb@plt+0x924>
  41f250:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41f254:	mov	x21, x0
  41f258:	mov	x20, x0
  41f25c:	strb	w23, [x21], #1
  41f260:	add	x8, x22, x24, lsl #4
  41f264:	ldr	x0, [x8, #8]
  41f268:	add	x1, sp, #0x8
  41f26c:	bl	43650c <argp_usage@@Base+0x4910>
  41f270:	ldrb	w8, [x0]
  41f274:	cbz	w8, 41f1c0 <wcrtomb@plt+0x1a3a0>
  41f278:	add	x8, x20, #0x200
  41f27c:	add	x25, x0, #0x1
  41f280:	b	41f294 <wcrtomb@plt+0x1a474>
  41f284:	ldurb	w9, [x25, #-1]
  41f288:	strb	w9, [x21], #1
  41f28c:	ldrb	w9, [x25], #1
  41f290:	cbz	w9, 41f1c0 <wcrtomb@plt+0x1a3a0>
  41f294:	cmp	x21, x8
  41f298:	b.ne	41f284 <wcrtomb@plt+0x1a464>  // b.any
  41f29c:	mov	x0, x20
  41f2a0:	bl	405744 <wcrtomb@plt+0x924>
  41f2a4:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41f2a8:	mov	x21, x0
  41f2ac:	add	x8, x0, #0x200
  41f2b0:	mov	x20, x0
  41f2b4:	b	41f284 <wcrtomb@plt+0x1a464>
  41f2b8:	mov	x0, x20
  41f2bc:	bl	405744 <wcrtomb@plt+0x924>
  41f2c0:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41f2c4:	mov	x21, x0
  41f2c8:	mov	x20, x0
  41f2cc:	b	41f1cc <wcrtomb@plt+0x1a3ac>
  41f2d0:	sub	x8, x20, x21
  41f2d4:	add	x2, x8, #0x200
  41f2d8:	mov	x0, x21
  41f2dc:	mov	w1, wzr
  41f2e0:	bl	404600 <memset@plt>
  41f2e4:	mov	x0, x20
  41f2e8:	bl	405744 <wcrtomb@plt+0x924>
  41f2ec:	ldp	x20, x19, [sp, #96]
  41f2f0:	ldp	x22, x21, [sp, #80]
  41f2f4:	ldp	x24, x23, [sp, #64]
  41f2f8:	ldp	x26, x25, [sp, #48]
  41f2fc:	ldp	x29, x30, [sp, #32]
  41f300:	add	sp, sp, #0x70
  41f304:	ret
  41f308:	stp	x29, x30, [sp, #-32]!
  41f30c:	stp	x20, x19, [sp, #16]
  41f310:	ldr	x8, [x0, #264]
  41f314:	ldr	x20, [x0, #136]
  41f318:	mov	x29, sp
  41f31c:	mov	x19, x0
  41f320:	str	x8, [x0, #136]
  41f324:	bl	40aaa8 <wcrtomb@plt+0x5c88>
  41f328:	str	x20, [x19, #136]
  41f32c:	ldp	x20, x19, [sp, #16]
  41f330:	ldp	x29, x30, [sp], #32
  41f334:	ret
  41f338:	sub	sp, sp, #0x40
  41f33c:	stp	x29, x30, [sp, #16]
  41f340:	stp	x22, x21, [sp, #32]
  41f344:	stp	x20, x19, [sp, #48]
  41f348:	ldrb	w8, [x1]
  41f34c:	add	x29, sp, #0x10
  41f350:	sub	w8, w8, #0x30
  41f354:	cmp	w8, #0x9
  41f358:	b.hi	41f3a8 <wcrtomb@plt+0x1a588>  // b.pmore
  41f35c:	mov	x20, x2
  41f360:	mov	x22, x1
  41f364:	mov	x19, x0
  41f368:	bl	404d00 <__errno_location@plt>
  41f36c:	mov	x21, x0
  41f370:	str	wzr, [x0]
  41f374:	add	x1, sp, #0x8
  41f378:	mov	w2, #0xa                   	// #10
  41f37c:	mov	x0, x22
  41f380:	bl	404840 <strtoumax@plt>
  41f384:	cmp	x0, x20
  41f388:	mov	w8, wzr
  41f38c:	b.hi	41f3ac <wcrtomb@plt+0x1a58c>  // b.pmore
  41f390:	ldr	w8, [x21]
  41f394:	cmp	w8, #0x22
  41f398:	b.eq	41f3a8 <wcrtomb@plt+0x1a588>  // b.none
  41f39c:	ldr	x8, [sp, #8]
  41f3a0:	ldrb	w8, [x8]
  41f3a4:	cbz	w8, 41f3c4 <wcrtomb@plt+0x1a5a4>
  41f3a8:	mov	w8, wzr
  41f3ac:	ldp	x20, x19, [sp, #48]
  41f3b0:	ldp	x22, x21, [sp, #32]
  41f3b4:	ldp	x29, x30, [sp, #16]
  41f3b8:	mov	w0, w8
  41f3bc:	add	sp, sp, #0x40
  41f3c0:	ret
  41f3c4:	mov	w8, #0x1                   	// #1
  41f3c8:	str	x0, [x19]
  41f3cc:	b	41f3ac <wcrtomb@plt+0x1a58c>
  41f3d0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41f3d4:	ldr	x8, [x8, #4072]
  41f3d8:	ldrb	w8, [x8, #156]
  41f3dc:	cmp	w8, #0x53
  41f3e0:	cset	w0, eq  // eq = none
  41f3e4:	ret
  41f3e8:	stp	x29, x30, [sp, #-32]!
  41f3ec:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41f3f0:	ldr	x8, [x8, #4072]
  41f3f4:	str	x19, [sp, #16]
  41f3f8:	mov	x19, x0
  41f3fc:	mov	w1, #0xc                   	// #12
  41f400:	add	x0, x8, #0x1c4
  41f404:	mov	x29, sp
  41f408:	bl	4183c0 <wcrtomb@plt+0x135a0>
  41f40c:	ldr	x8, [x19, #24]
  41f410:	ldr	x19, [sp, #16]
  41f414:	bic	x10, x0, x0, asr #63
  41f418:	lsr	x11, x0, #63
  41f41c:	ldr	x9, [x8, #136]
  41f420:	eor	w0, w11, #0x1
  41f424:	str	x10, [x8, #136]
  41f428:	str	x9, [x8, #264]
  41f42c:	ldp	x29, x30, [sp], #32
  41f430:	ret
  41f434:	stp	x29, x30, [sp, #-64]!
  41f438:	stp	x22, x21, [sp, #32]
  41f43c:	stp	x20, x19, [sp, #48]
  41f440:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41f444:	ldr	x9, [x0, #24]
  41f448:	ldr	x21, [x8, #4072]
  41f44c:	mov	x19, x0
  41f450:	str	x23, [sp, #16]
  41f454:	str	xzr, [x9, #288]
  41f458:	ldrb	w8, [x21, #345]
  41f45c:	mov	x29, sp
  41f460:	cbz	w8, 41f474 <wcrtomb@plt+0x1a654>
  41f464:	mov	w20, wzr
  41f468:	mov	w8, #0x1                   	// #1
  41f46c:	cbnz	w8, 41f4bc <wcrtomb@plt+0x1a69c>
  41f470:	b	41f518 <wcrtomb@plt+0x1a6f8>
  41f474:	ldrb	w8, [x21, #366]
  41f478:	cbz	w8, 41f464 <wcrtomb@plt+0x1a644>
  41f47c:	mov	x22, xzr
  41f480:	add	x23, x21, #0x164
  41f484:	add	x1, x23, x22
  41f488:	mov	x0, x19
  41f48c:	bl	41e69c <wcrtomb@plt+0x1987c>
  41f490:	cbnz	w0, 41f4a8 <wcrtomb@plt+0x1a688>
  41f494:	add	x22, x22, #0x18
  41f498:	cmp	x22, #0x60
  41f49c:	b.ne	41f484 <wcrtomb@plt+0x1a664>  // b.any
  41f4a0:	mov	w20, wzr
  41f4a4:	b	41f4ac <wcrtomb@plt+0x1a68c>
  41f4a8:	mov	w20, w0
  41f4ac:	ldrb	w8, [x21, #355]
  41f4b0:	cmp	w8, #0x0
  41f4b4:	cset	w8, ne  // ne = any
  41f4b8:	cbz	w8, 41f518 <wcrtomb@plt+0x1a6f8>
  41f4bc:	cbnz	w20, 41f518 <wcrtomb@plt+0x1a6f8>
  41f4c0:	bl	4055d4 <wcrtomb@plt+0x7b4>
  41f4c4:	cbz	x0, 41f568 <wcrtomb@plt+0x1a748>
  41f4c8:	mov	x21, x0
  41f4cc:	bl	405744 <wcrtomb@plt+0x924>
  41f4d0:	cbnz	w20, 41f500 <wcrtomb@plt+0x1a6e0>
  41f4d4:	mov	x23, xzr
  41f4d8:	mov	x22, x21
  41f4dc:	mov	x0, x19
  41f4e0:	mov	x1, x22
  41f4e4:	bl	41e69c <wcrtomb@plt+0x1987c>
  41f4e8:	cmp	x23, #0x13
  41f4ec:	mov	w20, w0
  41f4f0:	b.hi	41f500 <wcrtomb@plt+0x1a6e0>  // b.pmore
  41f4f4:	add	x23, x23, #0x1
  41f4f8:	add	x22, x22, #0x18
  41f4fc:	cbz	w20, 41f4dc <wcrtomb@plt+0x1a6bc>
  41f500:	ldr	x8, [x19, #16]
  41f504:	add	x8, x8, #0x200
  41f508:	str	x8, [x19, #16]
  41f50c:	ldrb	w8, [x21, #504]
  41f510:	cbz	w8, 41f518 <wcrtomb@plt+0x1a6f8>
  41f514:	cbz	w20, 41f4c0 <wcrtomb@plt+0x1a6a0>
  41f518:	cmp	w20, #0x2
  41f51c:	b.ne	41f560 <wcrtomb@plt+0x1a740>  // b.any
  41f520:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41f524:	ldr	x8, [x8, #1008]
  41f528:	cbz	x8, 41f530 <wcrtomb@plt+0x1a710>
  41f52c:	blr	x8
  41f530:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41f534:	add	x1, x1, #0x6b8
  41f538:	mov	w2, #0x5                   	// #5
  41f53c:	mov	x0, xzr
  41f540:	bl	404bf0 <dcgettext@plt>
  41f544:	ldr	x8, [x19, #24]
  41f548:	mov	x2, x0
  41f54c:	mov	w0, wzr
  41f550:	mov	w1, wzr
  41f554:	ldr	x3, [x8]
  41f558:	bl	4041f0 <error@plt>
  41f55c:	b	41f59c <wcrtomb@plt+0x1a77c>
  41f560:	mov	w0, #0x1                   	// #1
  41f564:	b	41f5ac <wcrtomb@plt+0x1a78c>
  41f568:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41f56c:	ldr	x8, [x8, #1008]
  41f570:	cbz	x8, 41f578 <wcrtomb@plt+0x1a758>
  41f574:	blr	x8
  41f578:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  41f57c:	add	x1, x1, #0xc61
  41f580:	mov	w2, #0x5                   	// #5
  41f584:	mov	x0, xzr
  41f588:	bl	404bf0 <dcgettext@plt>
  41f58c:	mov	x2, x0
  41f590:	mov	w0, wzr
  41f594:	mov	w1, wzr
  41f598:	bl	4041f0 <error@plt>
  41f59c:	mov	w0, wzr
  41f5a0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41f5a4:	mov	w9, #0x2                   	// #2
  41f5a8:	str	w9, [x8, #3456]
  41f5ac:	ldp	x20, x19, [sp, #48]
  41f5b0:	ldp	x22, x21, [sp, #32]
  41f5b4:	ldr	x23, [sp, #16]
  41f5b8:	ldp	x29, x30, [sp], #64
  41f5bc:	ret
  41f5c0:	sub	sp, sp, #0x20
  41f5c4:	stp	x29, x30, [sp, #16]
  41f5c8:	ldr	x0, [x0, #24]
  41f5cc:	stp	xzr, xzr, [sp]
  41f5d0:	add	x29, sp, #0x10
  41f5d4:	ldr	x8, [x0, #152]
  41f5d8:	cbz	x8, 41f5e4 <wcrtomb@plt+0x1a7c4>
  41f5dc:	mov	w0, wzr
  41f5e0:	b	41f5fc <wcrtomb@plt+0x1a7dc>
  41f5e4:	ldr	x8, [x0, #136]
  41f5e8:	mov	x1, sp
  41f5ec:	str	xzr, [x0, #264]
  41f5f0:	str	x8, [sp]
  41f5f4:	bl	41e754 <wcrtomb@plt+0x19934>
  41f5f8:	mov	w0, #0x1                   	// #1
  41f5fc:	ldp	x29, x30, [sp, #16]
  41f600:	add	sp, sp, #0x20
  41f604:	ret
  41f608:	sub	sp, sp, #0x50
  41f60c:	stp	x29, x30, [sp, #16]
  41f610:	stp	x22, x21, [sp, #48]
  41f614:	stp	x20, x19, [sp, #64]
  41f618:	ldr	w20, [x0]
  41f61c:	ldr	x19, [x0, #24]
  41f620:	mov	w2, #0x3                   	// #3
  41f624:	mov	x1, xzr
  41f628:	mov	w0, w20
  41f62c:	str	x23, [sp, #32]
  41f630:	add	x29, sp, #0x10
  41f634:	stp	xzr, xzr, [sp]
  41f638:	str	xzr, [x19, #264]
  41f63c:	bl	404390 <lseek@plt>
  41f640:	cmn	x0, #0x1
  41f644:	b.eq	41f6cc <wcrtomb@plt+0x1a8ac>  // b.none
  41f648:	mov	x21, x0
  41f64c:	mov	x22, xzr
  41f650:	b	41f690 <wcrtomb@plt+0x1a870>
  41f654:	sub	x23, x22, x21
  41f658:	mov	x1, sp
  41f65c:	mov	x0, x19
  41f660:	stp	x21, x23, [sp]
  41f664:	bl	41e754 <wcrtomb@plt+0x19934>
  41f668:	ldr	x8, [x19, #264]
  41f66c:	mov	w2, #0x3                   	// #3
  41f670:	mov	w0, w20
  41f674:	mov	x1, x22
  41f678:	add	x8, x8, x23
  41f67c:	str	x8, [x19, #264]
  41f680:	bl	404390 <lseek@plt>
  41f684:	mov	x21, x0
  41f688:	cmn	x0, #0x1
  41f68c:	b.eq	41f6cc <wcrtomb@plt+0x1a8ac>  // b.none
  41f690:	mov	w2, #0x4                   	// #4
  41f694:	mov	w0, w20
  41f698:	mov	x1, x21
  41f69c:	bl	404390 <lseek@plt>
  41f6a0:	orr	x8, x21, x22
  41f6a4:	mov	x22, x0
  41f6a8:	cbnz	x8, 41f654 <wcrtomb@plt+0x1a834>
  41f6ac:	ldr	x8, [x19, #136]
  41f6b0:	cmp	x22, x8
  41f6b4:	b.ne	41f654 <wcrtomb@plt+0x1a834>  // b.any
  41f6b8:	mov	w0, w20
  41f6bc:	mov	x1, xzr
  41f6c0:	mov	w2, wzr
  41f6c4:	bl	404390 <lseek@plt>
  41f6c8:	b	41f6f8 <wcrtomb@plt+0x1a8d8>
  41f6cc:	bl	404d00 <__errno_location@plt>
  41f6d0:	ldr	w8, [x0]
  41f6d4:	cmp	w8, #0x6
  41f6d8:	b.ne	41f6f8 <wcrtomb@plt+0x1a8d8>  // b.any
  41f6dc:	ldr	x8, [x19, #136]
  41f6e0:	mov	x1, sp
  41f6e4:	mov	x0, x19
  41f6e8:	stp	x8, xzr, [sp]
  41f6ec:	bl	41e754 <wcrtomb@plt+0x19934>
  41f6f0:	mov	w0, #0x1                   	// #1
  41f6f4:	b	41f6fc <wcrtomb@plt+0x1a8dc>
  41f6f8:	mov	w0, wzr
  41f6fc:	ldp	x20, x19, [sp, #64]
  41f700:	ldp	x22, x21, [sp, #48]
  41f704:	ldr	x23, [sp, #32]
  41f708:	ldp	x29, x30, [sp, #16]
  41f70c:	add	sp, sp, #0x50
  41f710:	ret
  41f714:	stp	x29, x30, [sp, #-64]!
  41f718:	stp	x28, x23, [sp, #16]
  41f71c:	stp	x22, x21, [sp, #32]
  41f720:	stp	x20, x19, [sp, #48]
  41f724:	mov	x29, sp
  41f728:	sub	sp, sp, #0x210
  41f72c:	ldr	x20, [x0, #24]
  41f730:	ldr	w21, [x0]
  41f734:	mov	w1, wzr
  41f738:	mov	x2, xzr
  41f73c:	mov	x19, x0
  41f740:	stp	xzr, xzr, [sp]
  41f744:	str	xzr, [x20, #264]
  41f748:	bl	41f874 <wcrtomb@plt+0x1aa54>
  41f74c:	mov	w8, w0
  41f750:	mov	w0, wzr
  41f754:	tbz	w8, #0, 41f858 <wcrtomb@plt+0x1aa38>
  41f758:	add	x1, sp, #0x10
  41f75c:	mov	w2, #0x200                 	// #512
  41f760:	mov	w0, w21
  41f764:	bl	41a68c <wcrtomb@plt+0x1586c>
  41f768:	add	x8, x0, #0x1
  41f76c:	mov	x22, x0
  41f770:	cmp	x8, #0x2
  41f774:	b.cc	41f818 <wcrtomb@plt+0x1a9f8>  // b.lo, b.ul, b.last
  41f778:	mov	x23, xzr
  41f77c:	b	41f7d0 <wcrtomb@plt+0x1a9b0>
  41f780:	cbz	x8, 41f810 <wcrtomb@plt+0x1a9f0>
  41f784:	add	x8, x8, x22
  41f788:	str	x8, [sp, #8]
  41f78c:	ldr	x8, [x20, #264]
  41f790:	add	x2, sp, #0x10
  41f794:	mov	w1, #0x1                   	// #1
  41f798:	mov	x0, x19
  41f79c:	add	x8, x8, x22
  41f7a0:	str	x8, [x20, #264]
  41f7a4:	bl	41f874 <wcrtomb@plt+0x1aa54>
  41f7a8:	tbz	w0, #0, 41f854 <wcrtomb@plt+0x1aa34>
  41f7ac:	add	x1, sp, #0x10
  41f7b0:	mov	w2, #0x200                 	// #512
  41f7b4:	mov	w0, w21
  41f7b8:	add	x23, x22, x23
  41f7bc:	bl	41a68c <wcrtomb@plt+0x1586c>
  41f7c0:	add	x8, x0, #0x1
  41f7c4:	mov	x22, x0
  41f7c8:	cmp	x8, #0x1
  41f7cc:	b.ls	41f81c <wcrtomb@plt+0x1a9fc>  // b.plast
  41f7d0:	add	x0, sp, #0x10
  41f7d4:	mov	x1, x22
  41f7d8:	bl	41f8a0 <wcrtomb@plt+0x1aa80>
  41f7dc:	ldr	x8, [sp, #8]
  41f7e0:	tbz	w0, #0, 41f780 <wcrtomb@plt+0x1a960>
  41f7e4:	cbz	x8, 41f7ac <wcrtomb@plt+0x1a98c>
  41f7e8:	mov	x1, sp
  41f7ec:	mov	x0, x20
  41f7f0:	bl	41e754 <wcrtomb@plt+0x19934>
  41f7f4:	mov	w1, #0x1                   	// #1
  41f7f8:	mov	x0, x19
  41f7fc:	mov	x2, xzr
  41f800:	str	xzr, [sp, #8]
  41f804:	bl	41f874 <wcrtomb@plt+0x1aa54>
  41f808:	tbnz	w0, #0, 41f7ac <wcrtomb@plt+0x1a98c>
  41f80c:	b	41f854 <wcrtomb@plt+0x1aa34>
  41f810:	str	x23, [sp]
  41f814:	b	41f784 <wcrtomb@plt+0x1a964>
  41f818:	mov	x23, xzr
  41f81c:	ldr	x8, [sp, #8]
  41f820:	cbnz	x8, 41f828 <wcrtomb@plt+0x1aa08>
  41f824:	str	x23, [sp]
  41f828:	mov	x1, sp
  41f82c:	mov	x0, x20
  41f830:	bl	41e754 <wcrtomb@plt+0x19934>
  41f834:	ldr	x8, [x20, #264]
  41f838:	mov	w1, #0x2                   	// #2
  41f83c:	mov	x0, x19
  41f840:	mov	x2, xzr
  41f844:	add	x8, x8, x22
  41f848:	str	x8, [x20, #264]
  41f84c:	bl	41f874 <wcrtomb@plt+0x1aa54>
  41f850:	b	41f858 <wcrtomb@plt+0x1aa38>
  41f854:	mov	w0, wzr
  41f858:	and	w0, w0, #0x1
  41f85c:	add	sp, sp, #0x210
  41f860:	ldp	x20, x19, [sp, #48]
  41f864:	ldp	x22, x21, [sp, #32]
  41f868:	ldp	x28, x23, [sp, #16]
  41f86c:	ldp	x29, x30, [sp], #64
  41f870:	ret
  41f874:	stp	x29, x30, [sp, #-16]!
  41f878:	ldr	x8, [x0, #32]
  41f87c:	mov	x29, sp
  41f880:	ldr	x8, [x8, #48]
  41f884:	cbz	x8, 41f890 <wcrtomb@plt+0x1aa70>
  41f888:	blr	x8
  41f88c:	b	41f894 <wcrtomb@plt+0x1aa74>
  41f890:	mov	w0, #0x1                   	// #1
  41f894:	and	w0, w0, #0x1
  41f898:	ldp	x29, x30, [sp], #16
  41f89c:	ret
  41f8a0:	cbz	x1, 41f8b8 <wcrtomb@plt+0x1aa98>
  41f8a4:	ldrb	w8, [x0], #1
  41f8a8:	sub	x1, x1, #0x1
  41f8ac:	cbz	w8, 41f8a0 <wcrtomb@plt+0x1aa80>
  41f8b0:	mov	w0, wzr
  41f8b4:	ret
  41f8b8:	mov	w0, #0x1                   	// #1
  41f8bc:	ret
  41f8c0:	stp	x29, x30, [sp, #-16]!
  41f8c4:	mov	x29, sp
  41f8c8:	bl	41f8e0 <wcrtomb@plt+0x1aac0>
  41f8cc:	cbz	x0, 41f8d8 <wcrtomb@plt+0x1aab8>
  41f8d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41f8d4:	str	x0, [x8, #904]
  41f8d8:	ldp	x29, x30, [sp], #16
  41f8dc:	ret
  41f8e0:	stp	x29, x30, [sp, #-32]!
  41f8e4:	str	x19, [sp, #16]
  41f8e8:	mov	x19, x1
  41f8ec:	mov	x1, xzr
  41f8f0:	mov	x29, sp
  41f8f4:	bl	41f9b8 <wcrtomb@plt+0x1ab98>
  41f8f8:	cbz	x0, 41f900 <wcrtomb@plt+0x1aae0>
  41f8fc:	ldr	x19, [x0, #16]
  41f900:	mov	x0, x19
  41f904:	ldr	x19, [sp, #16]
  41f908:	ldp	x29, x30, [sp], #32
  41f90c:	ret
  41f910:	stp	x29, x30, [sp, #-48]!
  41f914:	mov	x29, sp
  41f918:	add	x1, x29, #0x18
  41f91c:	str	x21, [sp, #16]
  41f920:	stp	x20, x19, [sp, #32]
  41f924:	mov	x19, x0
  41f928:	bl	41f9b8 <wcrtomb@plt+0x1ab98>
  41f92c:	mov	x20, x0
  41f930:	cbz	x0, 41f9a4 <wcrtomb@plt+0x1ab84>
  41f934:	ldr	x21, [x29, #24]
  41f938:	cmp	x21, #0x5
  41f93c:	b.cc	41f974 <wcrtomb@plt+0x1ab54>  // b.lo, b.ul, b.last
  41f940:	add	x8, x19, x21
  41f944:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41f948:	sub	x0, x8, #0x4
  41f94c:	add	x1, x1, #0x765
  41f950:	mov	w2, #0x4                   	// #4
  41f954:	bl	4045a0 <strncmp@plt>
  41f958:	cbnz	w0, 41f974 <wcrtomb@plt+0x1ab54>
  41f95c:	ldr	x8, [x20]
  41f960:	ldrb	w8, [x8]
  41f964:	cmp	w8, #0x74
  41f968:	b.eq	41f974 <wcrtomb@plt+0x1ab54>  // b.none
  41f96c:	sub	x8, x21, #0x4
  41f970:	str	x8, [x29, #24]
  41f974:	ldr	x8, [x29, #24]
  41f978:	cbz	x8, 41f9a0 <wcrtomb@plt+0x1ab80>
  41f97c:	add	x0, x8, #0x1
  41f980:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  41f984:	ldr	x21, [x29, #24]
  41f988:	mov	x1, x19
  41f98c:	mov	x20, x0
  41f990:	mov	x2, x21
  41f994:	bl	404110 <memcpy@plt>
  41f998:	strb	wzr, [x20, x21]
  41f99c:	b	41f9a4 <wcrtomb@plt+0x1ab84>
  41f9a0:	mov	x20, xzr
  41f9a4:	mov	x0, x20
  41f9a8:	ldp	x20, x19, [sp, #32]
  41f9ac:	ldr	x21, [sp, #16]
  41f9b0:	ldp	x29, x30, [sp], #48
  41f9b4:	ret
  41f9b8:	stp	x29, x30, [sp, #-64]!
  41f9bc:	stp	x20, x19, [sp, #48]
  41f9c0:	mov	x19, x1
  41f9c4:	mov	w1, #0x2e                  	// #46
  41f9c8:	str	x23, [sp, #16]
  41f9cc:	stp	x22, x21, [sp, #32]
  41f9d0:	mov	x29, sp
  41f9d4:	mov	x20, x0
  41f9d8:	bl	4047d0 <strrchr@plt>
  41f9dc:	cbz	x0, 41fa4c <wcrtomb@plt+0x1ac2c>
  41f9e0:	add	x23, x0, #0x1
  41f9e4:	mov	x0, x23
  41f9e8:	bl	404190 <strlen@plt>
  41f9ec:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41f9f0:	ldr	x8, [x8, #4048]
  41f9f4:	cbz	x8, 41fa4c <wcrtomb@plt+0x1ac2c>
  41f9f8:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  41f9fc:	mov	x22, x0
  41fa00:	add	x21, x21, #0xfd0
  41fa04:	b	41fa10 <wcrtomb@plt+0x1abf0>
  41fa08:	ldr	x8, [x21, #24]!
  41fa0c:	cbz	x8, 41fa4c <wcrtomb@plt+0x1ac2c>
  41fa10:	ldr	x9, [x21, #8]
  41fa14:	cmp	x9, x22
  41fa18:	b.ne	41fa08 <wcrtomb@plt+0x1abe8>  // b.any
  41fa1c:	mov	x0, x8
  41fa20:	mov	x1, x23
  41fa24:	mov	x2, x22
  41fa28:	bl	4046d0 <bcmp@plt>
  41fa2c:	cbnz	w0, 41fa08 <wcrtomb@plt+0x1abe8>
  41fa30:	cbz	x19, 41fa50 <wcrtomb@plt+0x1ac30>
  41fa34:	mov	x0, x20
  41fa38:	bl	404190 <strlen@plt>
  41fa3c:	mvn	x8, x22
  41fa40:	add	x8, x0, x8
  41fa44:	str	x8, [x19]
  41fa48:	b	41fa50 <wcrtomb@plt+0x1ac30>
  41fa4c:	mov	x21, xzr
  41fa50:	mov	x0, x21
  41fa54:	ldp	x20, x19, [sp, #48]
  41fa58:	ldp	x22, x21, [sp, #32]
  41fa5c:	ldr	x23, [sp, #16]
  41fa60:	ldp	x29, x30, [sp], #64
  41fa64:	ret
  41fa68:	stp	x29, x30, [sp, #-16]!
  41fa6c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fa70:	ldr	w0, [x8, #976]
  41fa74:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41fa78:	add	x1, x1, #0xb58
  41fa7c:	mov	x29, sp
  41fa80:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  41fa84:	cmp	w0, #0x0
  41fa88:	cset	w0, eq  // eq = none
  41fa8c:	ldp	x29, x30, [sp], #16
  41fa90:	ret
  41fa94:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fa98:	ldr	x8, [x8, #544]
  41fa9c:	cbz	x8, 41fac4 <wcrtomb@plt+0x1aca4>
  41faa0:	ldr	x9, [x0, #88]
  41faa4:	cmp	x9, x8
  41faa8:	b.ne	41fac4 <wcrtomb@plt+0x1aca4>  // b.any
  41faac:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41fab0:	ldr	x8, [x0, #96]
  41fab4:	ldr	x9, [x9, #888]
  41fab8:	cmp	x8, x9
  41fabc:	cset	w0, eq  // eq = none
  41fac0:	ret
  41fac4:	mov	w0, wzr
  41fac8:	ret
  41facc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fad0:	ldr	w8, [x8, #976]
  41fad4:	mov	w9, #0x3fffffff            	// #1073741823
  41fad8:	cmp	w8, w9
  41fadc:	b.gt	41fb14 <wcrtomb@plt+0x1acf4>
  41fae0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41fae4:	ldr	w8, [x8, #2920]
  41fae8:	and	w8, w8, #0xf000
  41faec:	cmp	w8, #0x8, lsl #12
  41faf0:	b.ne	41fb14 <wcrtomb@plt+0x1acf4>  // b.any
  41faf4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41faf8:	add	x8, x8, #0xb58
  41fafc:	ldp	x9, x8, [x8]
  41fb00:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  41fb04:	adrp	x11, 470000 <argp_program_version_hook@@Base+0x258>
  41fb08:	str	x9, [x10, #544]
  41fb0c:	str	x8, [x11, #888]
  41fb10:	ret
  41fb14:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fb18:	str	xzr, [x8, #544]
  41fb1c:	ret
  41fb20:	sub	sp, sp, #0x90
  41fb24:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fb28:	ldr	x8, [x8, #688]
  41fb2c:	stp	x29, x30, [sp, #128]
  41fb30:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41fb34:	add	x1, x1, #0x794
  41fb38:	ldr	x0, [x8]
  41fb3c:	add	x29, sp, #0x80
  41fb40:	bl	404920 <strcmp@plt>
  41fb44:	cbz	w0, 41fbb8 <wcrtomb@plt+0x1ad98>
  41fb48:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fb4c:	ldr	w8, [x8, #976]
  41fb50:	mov	w9, #0x3fffffff            	// #1073741823
  41fb54:	cmp	w8, w9
  41fb58:	b.gt	41fbb0 <wcrtomb@plt+0x1ad90>
  41fb5c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41fb60:	ldr	w8, [x8, #2920]
  41fb64:	and	w8, w8, #0xf000
  41fb68:	cmp	w8, #0x2, lsl #12
  41fb6c:	b.ne	41fbb0 <wcrtomb@plt+0x1ad90>  // b.any
  41fb70:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  41fb74:	add	x0, x0, #0x794
  41fb78:	mov	x1, sp
  41fb7c:	bl	4500a0 <_obstack_memory_used@@Base+0x11e40>
  41fb80:	cbnz	w0, 41fbb0 <wcrtomb@plt+0x1ad90>
  41fb84:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41fb88:	ldr	x8, [x8, #2904]
  41fb8c:	ldr	x9, [sp]
  41fb90:	cmp	x8, x9
  41fb94:	b.ne	41fbb0 <wcrtomb@plt+0x1ad90>  // b.any
  41fb98:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41fb9c:	ldr	x8, [x8, #2912]
  41fba0:	ldr	x9, [sp, #8]
  41fba4:	cmp	x8, x9
  41fba8:	cset	w8, eq  // eq = none
  41fbac:	b	41fbbc <wcrtomb@plt+0x1ad9c>
  41fbb0:	mov	w8, wzr
  41fbb4:	b	41fbbc <wcrtomb@plt+0x1ad9c>
  41fbb8:	mov	w8, #0x1                   	// #1
  41fbbc:	ldp	x29, x30, [sp, #128]
  41fbc0:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41fbc4:	strb	w8, [x9, #536]
  41fbc8:	add	sp, sp, #0x90
  41fbcc:	ret
  41fbd0:	sub	sp, sp, #0x30
  41fbd4:	stp	x29, x30, [sp, #16]
  41fbd8:	stp	x20, x19, [sp, #32]
  41fbdc:	add	x29, sp, #0x10
  41fbe0:	cbz	w0, 41fc90 <wcrtomb@plt+0x1ae70>
  41fbe4:	mov	w19, w1
  41fbe8:	mov	w20, w0
  41fbec:	sub	x1, x29, #0x4
  41fbf0:	mov	w0, w20
  41fbf4:	mov	w2, wzr
  41fbf8:	bl	404d80 <waitpid@plt>
  41fbfc:	cmn	w0, #0x1
  41fc00:	b.ne	41fc20 <wcrtomb@plt+0x1ae00>  // b.any
  41fc04:	bl	404d00 <__errno_location@plt>
  41fc08:	ldr	w8, [x0]
  41fc0c:	cmp	w8, #0x4
  41fc10:	b.eq	41fbec <wcrtomb@plt+0x1adcc>  // b.none
  41fc14:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fc18:	ldr	x0, [x8, #904]
  41fc1c:	bl	428764 <wcrtomb@plt+0x23944>
  41fc20:	ldur	w9, [x29, #-4]
  41fc24:	mov	w10, #0x1000000             	// #16777216
  41fc28:	mov	w11, #0x2000000             	// #33554432
  41fc2c:	and	w8, w9, #0x7f
  41fc30:	add	w10, w10, w8, lsl #24
  41fc34:	cmp	w10, w11
  41fc38:	b.lt	41fc88 <wcrtomb@plt+0x1ae68>  // b.tstop
  41fc3c:	cmp	w8, #0xd
  41fc40:	b.ne	41fc48 <wcrtomb@plt+0x1ae28>  // b.any
  41fc44:	tbz	w19, #0, 41fc90 <wcrtomb@plt+0x1ae70>
  41fc48:	mov	w19, w8
  41fc4c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fc50:	ldr	x8, [x8, #1008]
  41fc54:	cbz	x8, 41fc5c <wcrtomb@plt+0x1ae3c>
  41fc58:	blr	x8
  41fc5c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41fc60:	add	x1, x1, #0x79e
  41fc64:	mov	w2, #0x5                   	// #5
  41fc68:	mov	x0, xzr
  41fc6c:	bl	404bf0 <dcgettext@plt>
  41fc70:	mov	x2, x0
  41fc74:	mov	w0, wzr
  41fc78:	mov	w1, wzr
  41fc7c:	mov	w3, w19
  41fc80:	bl	4041f0 <error@plt>
  41fc84:	bl	40dda4 <wcrtomb@plt+0x8f84>
  41fc88:	tst	w9, #0xff00
  41fc8c:	b.ne	41fca0 <wcrtomb@plt+0x1ae80>  // b.any
  41fc90:	ldp	x20, x19, [sp, #32]
  41fc94:	ldp	x29, x30, [sp, #16]
  41fc98:	add	sp, sp, #0x30
  41fc9c:	ret
  41fca0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fca4:	ldr	x8, [x8, #1008]
  41fca8:	cbz	x8, 41fcb0 <wcrtomb@plt+0x1ae90>
  41fcac:	blr	x8
  41fcb0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41fcb4:	add	x1, x1, #0x7ec
  41fcb8:	mov	w2, #0x5                   	// #5
  41fcbc:	mov	x0, xzr
  41fcc0:	bl	404bf0 <dcgettext@plt>
  41fcc4:	ldurb	w3, [x29, #-3]
  41fcc8:	mov	x2, x0
  41fccc:	mov	w0, wzr
  41fcd0:	mov	w1, wzr
  41fcd4:	bl	4041f0 <error@plt>
  41fcd8:	bl	40dda4 <wcrtomb@plt+0x8f84>
  41fcdc:	sub	sp, sp, #0x30
  41fce0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  41fce4:	add	x0, x0, #0x7b8
  41fce8:	stp	x29, x30, [sp, #16]
  41fcec:	stp	x20, x19, [sp, #32]
  41fcf0:	add	x29, sp, #0x10
  41fcf4:	bl	404d30 <getenv@plt>
  41fcf8:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x14da0>
  41fcfc:	add	x8, x8, #0x7be
  41fd00:	cmp	x0, #0x0
  41fd04:	csel	x19, x8, x0, eq  // eq = none
  41fd08:	bl	41ae3c <wcrtomb@plt+0x1601c>
  41fd0c:	cbz	w0, 41fd54 <wcrtomb@plt+0x1af34>
  41fd10:	mov	w20, w0
  41fd14:	sub	x1, x29, #0x4
  41fd18:	mov	w0, w20
  41fd1c:	mov	w2, wzr
  41fd20:	bl	404d80 <waitpid@plt>
  41fd24:	cmn	w0, #0x1
  41fd28:	b.ne	41fd44 <wcrtomb@plt+0x1af24>  // b.any
  41fd2c:	bl	404d00 <__errno_location@plt>
  41fd30:	ldr	w8, [x0]
  41fd34:	cmp	w8, #0x4
  41fd38:	b.eq	41fd14 <wcrtomb@plt+0x1aef4>  // b.none
  41fd3c:	mov	x0, x19
  41fd40:	bl	428764 <wcrtomb@plt+0x23944>
  41fd44:	ldp	x20, x19, [sp, #32]
  41fd48:	ldp	x29, x30, [sp, #16]
  41fd4c:	add	sp, sp, #0x30
  41fd50:	ret
  41fd54:	bl	43aabc <argp_usage@@Base+0x8ec0>
  41fd58:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41fd5c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x11da0>
  41fd60:	add	x1, x1, #0x7c6
  41fd64:	add	x2, x2, #0x3c6
  41fd68:	mov	x0, x19
  41fd6c:	mov	x3, xzr
  41fd70:	bl	404d20 <execlp@plt>
  41fd74:	mov	x0, x19
  41fd78:	bl	428054 <wcrtomb@plt+0x23234>
  41fd7c:	ldr	w8, [x0, #24]
  41fd80:	ldr	w9, [x1, #24]
  41fd84:	cmp	w8, w9
  41fd88:	cset	w0, eq  // eq = none
  41fd8c:	ret
  41fd90:	ldr	w8, [x0, #28]
  41fd94:	ldr	w9, [x1, #28]
  41fd98:	cmp	w8, w9
  41fd9c:	cset	w0, eq  // eq = none
  41fda0:	ret
  41fda4:	ldr	x8, [x1]
  41fda8:	ldr	x9, [x0]
  41fdac:	cmp	x8, x9
  41fdb0:	b.ne	41fdc8 <wcrtomb@plt+0x1afa8>  // b.any
  41fdb4:	ldr	x8, [x1, #8]
  41fdb8:	ldr	x9, [x0, #8]
  41fdbc:	cmp	x8, x9
  41fdc0:	cset	w0, eq  // eq = none
  41fdc4:	ret
  41fdc8:	mov	w0, wzr
  41fdcc:	ret
  41fdd0:	stp	x29, x30, [sp, #-32]!
  41fdd4:	mov	w2, #0x1                   	// #1
  41fdd8:	mov	x1, xzr
  41fddc:	str	x19, [sp, #16]
  41fde0:	mov	x29, sp
  41fde4:	mov	w19, w0
  41fde8:	bl	404390 <lseek@plt>
  41fdec:	tbnz	x0, #63, 41fe00 <wcrtomb@plt+0x1afe0>
  41fdf0:	mov	x1, x0
  41fdf4:	mov	w0, w19
  41fdf8:	bl	404c40 <ftruncate@plt>
  41fdfc:	b	41fe04 <wcrtomb@plt+0x1afe4>
  41fe00:	mov	w0, #0xffffffff            	// #-1
  41fe04:	ldr	x19, [sp, #16]
  41fe08:	ldp	x29, x30, [sp], #32
  41fe0c:	ret
  41fe10:	stp	x29, x30, [sp, #-16]!
  41fe14:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41fe18:	ldr	w0, [x8, #976]
  41fe1c:	mov	w8, #0x40000000            	// #1073741824
  41fe20:	mov	x29, sp
  41fe24:	cmp	w0, w8
  41fe28:	b.lt	41fe50 <wcrtomb@plt+0x1b030>  // b.tstop
  41fe2c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41fe30:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41fe34:	ldr	x1, [x8, #3984]
  41fe38:	ldr	x2, [x9, #920]
  41fe3c:	mov	w8, #0xc0000000            	// #-1073741824
  41fe40:	add	w0, w0, w8
  41fe44:	bl	42939c <wcrtomb@plt+0x2457c>
  41fe48:	ldp	x29, x30, [sp], #16
  41fe4c:	ret
  41fe50:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41fe54:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41fe58:	ldr	x1, [x8, #3984]
  41fe5c:	ldr	x2, [x9, #920]
  41fe60:	bl	434bec <argp_usage@@Base+0x2ff0>
  41fe64:	ldp	x29, x30, [sp], #16
  41fe68:	ret
  41fe6c:	sub	sp, sp, #0x50
  41fe70:	mov	w0, #0xd                   	// #13
  41fe74:	mov	w1, #0x1                   	// #1
  41fe78:	stp	x29, x30, [sp, #16]
  41fe7c:	str	x23, [sp, #32]
  41fe80:	stp	x22, x21, [sp, #48]
  41fe84:	stp	x20, x19, [sp, #64]
  41fe88:	add	x29, sp, #0x10
  41fe8c:	bl	404440 <signal@plt>
  41fe90:	add	x0, x29, #0x18
  41fe94:	bl	41ae7c <wcrtomb@plt+0x1605c>
  41fe98:	bl	41ae3c <wcrtomb@plt+0x1601c>
  41fe9c:	cmp	w0, #0x1
  41fea0:	b.lt	41fed4 <wcrtomb@plt+0x1b0b4>  // b.tstop
  41fea4:	mov	w19, w0
  41fea8:	ldp	w0, w8, [x29, #24]
  41feac:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41feb0:	str	w8, [x9, #976]
  41feb4:	bl	405798 <wcrtomb@plt+0x978>
  41feb8:	mov	w0, w19
  41febc:	ldp	x20, x19, [sp, #64]
  41fec0:	ldp	x22, x21, [sp, #48]
  41fec4:	ldr	x23, [sp, #32]
  41fec8:	ldp	x29, x30, [sp, #16]
  41fecc:	add	sp, sp, #0x50
  41fed0:	ret
  41fed4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  41fed8:	add	x1, x1, #0x7ca
  41fedc:	mov	w2, #0x5                   	// #5
  41fee0:	mov	x0, xzr
  41fee4:	bl	404bf0 <dcgettext@plt>
  41fee8:	bl	43aac4 <argp_usage@@Base+0x8ec8>
  41feec:	mov	w0, #0xd                   	// #13
  41fef0:	mov	x1, xzr
  41fef4:	bl	404440 <signal@plt>
  41fef8:	ldr	w0, [x29, #24]
  41fefc:	mov	w1, wzr
  41ff00:	bl	42019c <wcrtomb@plt+0x1b37c>
  41ff04:	ldr	w0, [x29, #28]
  41ff08:	bl	405798 <wcrtomb@plt+0x978>
  41ff0c:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  41ff10:	ldrb	w8, [x22, #1016]
  41ff14:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  41ff18:	cbz	w8, 41ff94 <wcrtomb@plt+0x1b174>
  41ff1c:	ldr	x8, [x21, #688]
  41ff20:	ldr	x0, [x8]
  41ff24:	bl	420260 <wcrtomb@plt+0x1b440>
  41ff28:	cbnz	w0, 4200dc <wcrtomb@plt+0x1b2bc>
  41ff2c:	add	x0, sp, #0x8
  41ff30:	bl	41ae7c <wcrtomb@plt+0x1605c>
  41ff34:	bl	41ae3c <wcrtomb@plt+0x1601c>
  41ff38:	cbz	w0, 420154 <wcrtomb@plt+0x1b334>
  41ff3c:	mov	w19, w0
  41ff40:	ldr	w0, [sp, #8]
  41ff44:	mov	w1, wzr
  41ff48:	bl	42019c <wcrtomb@plt+0x1b37c>
  41ff4c:	ldr	w0, [sp, #12]
  41ff50:	bl	405798 <wcrtomb@plt+0x978>
  41ff54:	ldr	x23, [x21, #688]
  41ff58:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  41ff5c:	add	x1, x1, #0xabd
  41ff60:	ldr	x20, [x23]
  41ff64:	mov	x0, x20
  41ff68:	bl	404920 <strcmp@plt>
  41ff6c:	cbz	w0, 41ffd0 <wcrtomb@plt+0x1b1b0>
  41ff70:	ldrb	w8, [x22, #1016]
  41ff74:	cbz	w8, 42008c <wcrtomb@plt+0x1b26c>
  41ff78:	ldr	x0, [x23]
  41ff7c:	mov	w1, #0x1b6                 	// #438
  41ff80:	bl	404db0 <creat@plt>
  41ff84:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ff88:	str	w0, [x8, #976]
  41ff8c:	tbz	w0, #31, 41ffdc <wcrtomb@plt+0x1b1bc>
  41ff90:	b	420148 <wcrtomb@plt+0x1b328>
  41ff94:	ldr	x19, [x21, #688]
  41ff98:	mov	w1, #0x3a                  	// #58
  41ff9c:	ldr	x0, [x19]
  41ffa0:	bl	404a70 <strchr@plt>
  41ffa4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  41ffa8:	str	x0, [x9, #1024]
  41ffac:	cbz	x0, 41ff1c <wcrtomb@plt+0x1b0fc>
  41ffb0:	mov	x8, x0
  41ffb4:	ldr	x0, [x19]
  41ffb8:	subs	x2, x8, x0
  41ffbc:	b.ls	41ff1c <wcrtomb@plt+0x1b0fc>  // b.plast
  41ffc0:	mov	w1, #0x2f                  	// #47
  41ffc4:	bl	404b70 <memchr@plt>
  41ffc8:	cbnz	x0, 41ff1c <wcrtomb@plt+0x1b0fc>
  41ffcc:	b	41ff2c <wcrtomb@plt+0x1b10c>
  41ffd0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  41ffd4:	mov	w9, #0x1                   	// #1
  41ffd8:	str	w9, [x8, #976]
  41ffdc:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  41ffe0:	ldr	x8, [x21, #920]
  41ffe4:	cbz	x8, 420028 <wcrtomb@plt+0x1b208>
  41ffe8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  41ffec:	ldr	x20, [x9, #3984]
  41fff0:	mov	x22, xzr
  41fff4:	sub	x2, x8, x22
  41fff8:	mov	w0, wzr
  41fffc:	mov	x1, x20
  420000:	bl	43c740 <argp_usage@@Base+0xab44>
  420004:	cbz	x0, 420030 <wcrtomb@plt+0x1b210>
  420008:	cmn	x0, #0x1
  42000c:	b.eq	420048 <wcrtomb@plt+0x1b228>  // b.none
  420010:	ldr	x8, [x21, #920]
  420014:	add	x22, x0, x22
  420018:	add	x20, x20, x0
  42001c:	cmp	x8, x22
  420020:	b.hi	41fff4 <wcrtomb@plt+0x1b1d4>  // b.pmore
  420024:	b	420030 <wcrtomb@plt+0x1b210>
  420028:	mov	x22, xzr
  42002c:	mov	x0, xzr
  420030:	cbz	x0, 420054 <wcrtomb@plt+0x1b234>
  420034:	bl	41fe10 <wcrtomb@plt+0x1aff0>
  420038:	ldr	x8, [x21, #920]
  42003c:	cmp	x0, x8
  420040:	b.eq	41ffdc <wcrtomb@plt+0x1b1bc>  // b.none
  420044:	bl	4057c8 <wcrtomb@plt+0x9a8>
  420048:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42004c:	ldr	x0, [x8, #904]
  420050:	bl	42833c <wcrtomb@plt+0x2351c>
  420054:	cbz	x22, 420084 <wcrtomb@plt+0x1b264>
  420058:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42005c:	ldr	x8, [x8, #3984]
  420060:	ldr	x9, [x21, #920]
  420064:	mov	w1, wzr
  420068:	add	x0, x8, x22
  42006c:	sub	x2, x9, x22
  420070:	bl	404600 <memset@plt>
  420074:	bl	41fe10 <wcrtomb@plt+0x1aff0>
  420078:	ldr	x8, [x21, #920]
  42007c:	cmp	x0, x8
  420080:	b.ne	420044 <wcrtomb@plt+0x1b224>  // b.any
  420084:	mov	w0, w19
  420088:	bl	4202e0 <wcrtomb@plt+0x1b4c0>
  42008c:	mov	w1, #0x3a                  	// #58
  420090:	mov	x0, x20
  420094:	bl	404a70 <strchr@plt>
  420098:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42009c:	str	x0, [x8, #1024]
  4200a0:	cbz	x0, 41ff78 <wcrtomb@plt+0x1b158>
  4200a4:	ldr	x20, [x23]
  4200a8:	subs	x2, x0, x20
  4200ac:	b.ls	41ff78 <wcrtomb@plt+0x1b158>  // b.plast
  4200b0:	mov	w1, #0x2f                  	// #47
  4200b4:	mov	x0, x20
  4200b8:	bl	404b70 <memchr@plt>
  4200bc:	cbnz	x0, 41ff78 <wcrtomb@plt+0x1b158>
  4200c0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4200c4:	ldr	x3, [x8, #808]
  4200c8:	mov	w1, #0x41                  	// #65
  4200cc:	mov	w2, #0x40000000            	// #1073741824
  4200d0:	mov	x0, x20
  4200d4:	bl	428b14 <wcrtomb@plt+0x23cf4>
  4200d8:	b	41ff84 <wcrtomb@plt+0x1b164>
  4200dc:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  4200e0:	ldrb	w8, [x20, #757]
  4200e4:	cbz	w8, 4200f8 <wcrtomb@plt+0x1b2d8>
  4200e8:	ldr	x8, [x21, #688]
  4200ec:	mov	w1, #0x1                   	// #1
  4200f0:	ldr	x0, [x8]
  4200f4:	bl	41a318 <wcrtomb@plt+0x154f8>
  4200f8:	ldr	x8, [x21, #688]
  4200fc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  420100:	add	x1, x1, #0xabd
  420104:	ldr	x19, [x8]
  420108:	mov	x0, x19
  42010c:	bl	404920 <strcmp@plt>
  420110:	cbz	w0, 420180 <wcrtomb@plt+0x1b360>
  420114:	mov	w1, #0x1b6                 	// #438
  420118:	mov	x0, x19
  42011c:	bl	404db0 <creat@plt>
  420120:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420124:	str	w0, [x8, #976]
  420128:	tbz	w0, #31, 420190 <wcrtomb@plt+0x1b370>
  42012c:	bl	404d00 <__errno_location@plt>
  420130:	ldrb	w8, [x20, #757]
  420134:	ldr	w20, [x0]
  420138:	mov	x19, x0
  42013c:	cbz	w8, 420144 <wcrtomb@plt+0x1b324>
  420140:	bl	41a55c <wcrtomb@plt+0x1573c>
  420144:	str	w20, [x19]
  420148:	ldr	x8, [x21, #688]
  42014c:	ldr	x0, [x8]
  420150:	bl	428180 <wcrtomb@plt+0x23360>
  420154:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  420158:	add	x1, x1, #0x7d6
  42015c:	mov	w2, #0x5                   	// #5
  420160:	mov	x0, xzr
  420164:	bl	404bf0 <dcgettext@plt>
  420168:	bl	43aac4 <argp_usage@@Base+0x8ec8>
  42016c:	ldr	w0, [sp, #12]
  420170:	mov	w1, #0x1                   	// #1
  420174:	bl	42019c <wcrtomb@plt+0x1b37c>
  420178:	ldr	w0, [sp, #8]
  42017c:	bl	405798 <wcrtomb@plt+0x978>
  420180:	bl	43aabc <argp_usage@@Base+0x8ec0>
  420184:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420188:	ldr	x0, [x8, #904]
  42018c:	bl	4202a4 <wcrtomb@plt+0x1b484>
  420190:	mov	w1, #0x1                   	// #1
  420194:	bl	42019c <wcrtomb@plt+0x1b37c>
  420198:	b	420180 <wcrtomb@plt+0x1b360>
  42019c:	stp	x29, x30, [sp, #-32]!
  4201a0:	cmp	w0, w1
  4201a4:	stp	x20, x19, [sp, #16]
  4201a8:	mov	x29, sp
  4201ac:	b.eq	4201ec <wcrtomb@plt+0x1b3cc>  // b.none
  4201b0:	mov	w19, w0
  4201b4:	mov	w0, w1
  4201b8:	mov	w20, w1
  4201bc:	bl	4047c0 <close@plt>
  4201c0:	cbz	w0, 4201d4 <wcrtomb@plt+0x1b3b4>
  4201c4:	bl	404d00 <__errno_location@plt>
  4201c8:	ldr	w8, [x0]
  4201cc:	cmp	w8, #0x9
  4201d0:	b.ne	420220 <wcrtomb@plt+0x1b400>  // b.any
  4201d4:	mov	w0, w19
  4201d8:	bl	4041e0 <dup@plt>
  4201dc:	cmp	w0, w20
  4201e0:	b.ne	4201f8 <wcrtomb@plt+0x1b3d8>  // b.any
  4201e4:	mov	w0, w19
  4201e8:	bl	405798 <wcrtomb@plt+0x978>
  4201ec:	ldp	x20, x19, [sp, #16]
  4201f0:	ldp	x29, x30, [sp], #32
  4201f4:	ret
  4201f8:	tbz	w0, #31, 42025c <wcrtomb@plt+0x1b43c>
  4201fc:	bl	404d00 <__errno_location@plt>
  420200:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420204:	ldr	x8, [x8, #1008]
  420208:	ldr	w19, [x0]
  42020c:	cbz	x8, 420214 <wcrtomb@plt+0x1b3f4>
  420210:	blr	x8
  420214:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  420218:	add	x1, x1, #0x8c4
  42021c:	b	42023c <wcrtomb@plt+0x1b41c>
  420220:	mov	w19, w8
  420224:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420228:	ldr	x8, [x8, #1008]
  42022c:	cbz	x8, 420234 <wcrtomb@plt+0x1b414>
  420230:	blr	x8
  420234:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  420238:	add	x1, x1, #0x8b7
  42023c:	mov	w2, #0x5                   	// #5
  420240:	mov	x0, xzr
  420244:	bl	404bf0 <dcgettext@plt>
  420248:	mov	x2, x0
  42024c:	mov	w0, wzr
  420250:	mov	w1, w19
  420254:	bl	4041f0 <error@plt>
  420258:	bl	40dda4 <wcrtomb@plt+0x8f84>
  42025c:	bl	404870 <abort@plt>
  420260:	sub	sp, sp, #0x90
  420264:	mov	x1, sp
  420268:	stp	x29, x30, [sp, #128]
  42026c:	add	x29, sp, #0x80
  420270:	bl	4500a0 <_obstack_memory_used@@Base+0x11e40>
  420274:	cbz	w0, 420288 <wcrtomb@plt+0x1b468>
  420278:	bl	404d00 <__errno_location@plt>
  42027c:	ldr	w8, [x0]
  420280:	cmp	w8, #0x2
  420284:	b	420294 <wcrtomb@plt+0x1b474>
  420288:	ldr	w8, [sp, #16]
  42028c:	and	w8, w8, #0xf000
  420290:	cmp	w8, #0x8, lsl #12
  420294:	ldp	x29, x30, [sp, #128]
  420298:	cset	w0, eq  // eq = none
  42029c:	add	sp, sp, #0x90
  4202a0:	ret
  4202a4:	sub	sp, sp, #0x40
  4202a8:	str	x19, [sp, #48]
  4202ac:	mov	x19, x0
  4202b0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4202b4:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x14da0>
  4202b8:	add	x0, x0, #0x7be
  4202bc:	add	x8, x8, #0x8cf
  4202c0:	mov	x1, sp
  4202c4:	stp	x29, x30, [sp, #32]
  4202c8:	add	x29, sp, #0x20
  4202cc:	stp	x0, x8, [sp]
  4202d0:	stp	x19, xzr, [sp, #16]
  4202d4:	bl	4046f0 <execv@plt>
  4202d8:	mov	x0, x19
  4202dc:	bl	428054 <wcrtomb@plt+0x23234>
  4202e0:	stp	x29, x30, [sp, #-32]!
  4202e4:	str	x19, [sp, #16]
  4202e8:	mov	w19, w0
  4202ec:	mov	x29, sp
  4202f0:	add	x1, x29, #0x1c
  4202f4:	mov	w0, w19
  4202f8:	mov	w2, wzr
  4202fc:	bl	404d80 <waitpid@plt>
  420300:	cmn	w0, #0x1
  420304:	b.ne	420324 <wcrtomb@plt+0x1b504>  // b.any
  420308:	bl	404d00 <__errno_location@plt>
  42030c:	ldr	w8, [x0]
  420310:	cmp	w8, #0x4
  420314:	b.eq	4202f0 <wcrtomb@plt+0x1b4d0>  // b.none
  420318:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42031c:	ldr	x0, [x8, #904]
  420320:	bl	428764 <wcrtomb@plt+0x23944>
  420324:	ldr	w8, [x29, #28]
  420328:	mov	w9, #0x1000000             	// #16777216
  42032c:	mov	w10, #0x2000000             	// #33554432
  420330:	and	w0, w8, #0x7f
  420334:	add	w9, w9, w0, lsl #24
  420338:	cmp	w9, w10
  42033c:	b.lt	42034c <wcrtomb@plt+0x1b52c>  // b.tstop
  420340:	bl	4041d0 <raise@plt>
  420344:	mov	w0, wzr
  420348:	bl	4041c0 <exit@plt>
  42034c:	ubfx	w0, w8, #8, #8
  420350:	bl	4041c0 <exit@plt>
  420354:	sub	sp, sp, #0x70
  420358:	add	x0, sp, #0x8
  42035c:	stp	x29, x30, [sp, #16]
  420360:	stp	x28, x27, [sp, #32]
  420364:	stp	x26, x25, [sp, #48]
  420368:	stp	x24, x23, [sp, #64]
  42036c:	stp	x22, x21, [sp, #80]
  420370:	stp	x20, x19, [sp, #96]
  420374:	add	x29, sp, #0x10
  420378:	bl	41ae7c <wcrtomb@plt+0x1605c>
  42037c:	bl	41ae3c <wcrtomb@plt+0x1601c>
  420380:	cmp	w0, #0x1
  420384:	b.lt	4203c0 <wcrtomb@plt+0x1b5a0>  // b.tstop
  420388:	mov	w19, w0
  42038c:	ldp	w8, w0, [sp, #8]
  420390:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  420394:	str	w8, [x9, #976]
  420398:	bl	405798 <wcrtomb@plt+0x978>
  42039c:	mov	w0, w19
  4203a0:	ldp	x20, x19, [sp, #96]
  4203a4:	ldp	x22, x21, [sp, #80]
  4203a8:	ldp	x24, x23, [sp, #64]
  4203ac:	ldp	x26, x25, [sp, #48]
  4203b0:	ldp	x28, x27, [sp, #32]
  4203b4:	ldp	x29, x30, [sp, #16]
  4203b8:	add	sp, sp, #0x70
  4203bc:	ret
  4203c0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  4203c4:	add	x1, x1, #0x7ca
  4203c8:	mov	w2, #0x5                   	// #5
  4203cc:	mov	x0, xzr
  4203d0:	bl	404bf0 <dcgettext@plt>
  4203d4:	bl	43aac4 <argp_usage@@Base+0x8ec8>
  4203d8:	mov	w0, #0xd                   	// #13
  4203dc:	mov	x1, xzr
  4203e0:	bl	404440 <signal@plt>
  4203e4:	ldr	w0, [sp, #12]
  4203e8:	mov	w1, #0x1                   	// #1
  4203ec:	bl	42019c <wcrtomb@plt+0x1b37c>
  4203f0:	ldr	w0, [sp, #8]
  4203f4:	bl	405798 <wcrtomb@plt+0x978>
  4203f8:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  4203fc:	ldr	x20, [x21, #688]
  420400:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  420404:	add	x1, x1, #0xabd
  420408:	ldr	x19, [x20]
  42040c:	mov	x0, x19
  420410:	bl	404920 <strcmp@plt>
  420414:	cbz	w0, 420464 <wcrtomb@plt+0x1b644>
  420418:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42041c:	ldrb	w8, [x8, #1016]
  420420:	cbnz	w8, 420458 <wcrtomb@plt+0x1b638>
  420424:	mov	w1, #0x3a                  	// #58
  420428:	mov	x0, x19
  42042c:	bl	404a70 <strchr@plt>
  420430:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  420434:	str	x0, [x9, #1024]
  420438:	cbz	x0, 420458 <wcrtomb@plt+0x1b638>
  42043c:	mov	x8, x0
  420440:	ldr	x0, [x20]
  420444:	subs	x2, x8, x0
  420448:	b.ls	420458 <wcrtomb@plt+0x1b638>  // b.plast
  42044c:	mov	w1, #0x2f                  	// #47
  420450:	bl	404b70 <memchr@plt>
  420454:	cbz	x0, 420464 <wcrtomb@plt+0x1b644>
  420458:	ldr	x0, [x20]
  42045c:	bl	420260 <wcrtomb@plt+0x1b440>
  420460:	cbnz	w0, 420538 <wcrtomb@plt+0x1b718>
  420464:	mov	x0, sp
  420468:	bl	41ae7c <wcrtomb@plt+0x1605c>
  42046c:	bl	41ae3c <wcrtomb@plt+0x1601c>
  420470:	cbnz	w0, 4204a8 <wcrtomb@plt+0x1b688>
  420474:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  420478:	add	x1, x1, #0x7d6
  42047c:	mov	w2, #0x5                   	// #5
  420480:	mov	x0, xzr
  420484:	bl	404bf0 <dcgettext@plt>
  420488:	bl	43aac4 <argp_usage@@Base+0x8ec8>
  42048c:	ldr	w0, [sp]
  420490:	mov	w1, wzr
  420494:	bl	42019c <wcrtomb@plt+0x1b37c>
  420498:	ldr	w0, [sp, #4]
  42049c:	bl	405798 <wcrtomb@plt+0x978>
  4204a0:	bl	43aabc <argp_usage@@Base+0x8ec0>
  4204a4:	bl	42063c <wcrtomb@plt+0x1b81c>
  4204a8:	mov	w19, w0
  4204ac:	ldr	w0, [sp, #4]
  4204b0:	mov	w1, #0x1                   	// #1
  4204b4:	bl	42019c <wcrtomb@plt+0x1b37c>
  4204b8:	ldr	w0, [sp]
  4204bc:	bl	405798 <wcrtomb@plt+0x978>
  4204c0:	ldr	x22, [x21, #688]
  4204c4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4204c8:	add	x1, x1, #0xabd
  4204cc:	ldr	x20, [x22]
  4204d0:	mov	x0, x20
  4204d4:	bl	404920 <strcmp@plt>
  4204d8:	cbz	w0, 420578 <wcrtomb@plt+0x1b758>
  4204dc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4204e0:	ldrb	w8, [x8, #1016]
  4204e4:	cbnz	w8, 420568 <wcrtomb@plt+0x1b748>
  4204e8:	mov	w1, #0x3a                  	// #58
  4204ec:	mov	x0, x20
  4204f0:	bl	404a70 <strchr@plt>
  4204f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4204f8:	str	x0, [x8, #1024]
  4204fc:	cbz	x0, 420568 <wcrtomb@plt+0x1b748>
  420500:	ldr	x20, [x22]
  420504:	subs	x2, x0, x20
  420508:	b.ls	420568 <wcrtomb@plt+0x1b748>  // b.plast
  42050c:	mov	w1, #0x2f                  	// #47
  420510:	mov	x0, x20
  420514:	bl	404b70 <memchr@plt>
  420518:	cbnz	x0, 420568 <wcrtomb@plt+0x1b748>
  42051c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420520:	ldr	x3, [x8, #808]
  420524:	mov	w2, #0x40000000            	// #1073741824
  420528:	mov	x0, x20
  42052c:	mov	w1, wzr
  420530:	bl	428b14 <wcrtomb@plt+0x23cf4>
  420534:	b	420578 <wcrtomb@plt+0x1b758>
  420538:	ldr	x8, [x21, #688]
  42053c:	mov	w2, #0x1b6                 	// #438
  420540:	mov	w1, wzr
  420544:	ldr	x0, [x8]
  420548:	bl	404530 <open@plt>
  42054c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420550:	str	w0, [x8, #976]
  420554:	tbnz	w0, #31, 420584 <wcrtomb@plt+0x1b764>
  420558:	mov	w1, wzr
  42055c:	bl	42019c <wcrtomb@plt+0x1b37c>
  420560:	bl	43aabc <argp_usage@@Base+0x8ec0>
  420564:	bl	42063c <wcrtomb@plt+0x1b81c>
  420568:	ldr	x0, [x22]
  42056c:	mov	w2, #0x1b6                 	// #438
  420570:	mov	w1, wzr
  420574:	bl	404530 <open@plt>
  420578:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  42057c:	str	w0, [x23, #976]
  420580:	tbz	w0, #31, 420590 <wcrtomb@plt+0x1b770>
  420584:	ldr	x8, [x21, #688]
  420588:	ldr	x0, [x8]
  42058c:	bl	428180 <wcrtomb@plt+0x23360>
  420590:	mov	w24, #0x40000000            	// #1073741824
  420594:	mov	w25, #0xc0000000            	// #-1073741824
  420598:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42059c:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  4205a0:	mov	w28, #0x200                 	// #512
  4205a4:	bl	4050b8 <wcrtomb@plt+0x298>
  4205a8:	ldr	w0, [x23, #976]
  4205ac:	cmp	w0, w24
  4205b0:	b.lt	4205c8 <wcrtomb@plt+0x1b7a8>  // b.tstop
  4205b4:	ldr	x1, [x26, #3984]
  4205b8:	ldr	x2, [x27, #920]
  4205bc:	add	w0, w0, w25
  4205c0:	bl	4292b8 <wcrtomb@plt+0x24498>
  4205c4:	b	4205d4 <wcrtomb@plt+0x1b7b4>
  4205c8:	ldr	x1, [x26, #3984]
  4205cc:	ldr	x2, [x27, #920]
  4205d0:	bl	43c740 <argp_usage@@Base+0xab44>
  4205d4:	mov	x20, x0
  4205d8:	cbz	x0, 42062c <wcrtomb@plt+0x1b80c>
  4205dc:	cmn	x20, #0x1
  4205e0:	b.ne	4205ec <wcrtomb@plt+0x1b7cc>  // b.any
  4205e4:	bl	405878 <wcrtomb@plt+0xa58>
  4205e8:	b	4205a8 <wcrtomb@plt+0x1b788>
  4205ec:	ldr	x21, [x26, #3984]
  4205f0:	cmp	x20, #0x200
  4205f4:	csel	x22, x20, x28, cc  // cc = lo, ul, last
  4205f8:	mov	w0, #0x1                   	// #1
  4205fc:	mov	x1, x21
  420600:	mov	x2, x22
  420604:	bl	434bec <argp_usage@@Base+0x2ff0>
  420608:	cmp	x0, x22
  42060c:	b.eq	42061c <wcrtomb@plt+0x1b7fc>  // b.none
  420610:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420614:	ldr	x0, [x8, #904]
  420618:	bl	428784 <wcrtomb@plt+0x23964>
  42061c:	subs	x20, x20, x22
  420620:	add	x21, x21, x22
  420624:	b.eq	4205a4 <wcrtomb@plt+0x1b784>  // b.none
  420628:	b	4205f0 <wcrtomb@plt+0x1b7d0>
  42062c:	mov	w0, #0x1                   	// #1
  420630:	bl	405798 <wcrtomb@plt+0x978>
  420634:	mov	w0, w19
  420638:	bl	4202e0 <wcrtomb@plt+0x1b4c0>
  42063c:	sub	sp, sp, #0x150
  420640:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420644:	ldr	x8, [x8, #1160]
  420648:	stp	x29, x30, [sp, #240]
  42064c:	add	x29, sp, #0xf0
  420650:	mov	w9, #0x1                   	// #1
  420654:	sub	x0, x29, #0x4
  420658:	stp	x28, x27, [sp, #256]
  42065c:	stp	x26, x25, [sp, #272]
  420660:	stp	x24, x23, [sp, #288]
  420664:	stp	x22, x21, [sp, #304]
  420668:	stp	x20, x19, [sp, #320]
  42066c:	str	x8, [sp, #112]
  420670:	str	x9, [sp, #16]
  420674:	bl	40517c <wcrtomb@plt+0x35c>
  420678:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  42067c:	cbz	x0, 4207e0 <wcrtomb@plt+0x1b9c0>
  420680:	mov	w20, #0xe06                 	// #3590
  420684:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x14da0>
  420688:	adrp	x22, 453000 <_obstack_memory_used@@Base+0x14da0>
  42068c:	adrp	x27, 453000 <_obstack_memory_used@@Base+0x14da0>
  420690:	mov	w8, wzr
  420694:	mov	x23, xzr
  420698:	movk	w20, #0x208, lsl #16
  42069c:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4206a0:	add	x21, x21, #0x8e0
  4206a4:	add	x22, x22, #0x8d2
  4206a8:	add	x27, x27, #0x8ea
  4206ac:	mov	x19, x0
  4206b0:	tbz	w8, #0, 42072c <wcrtomb@plt+0x1b90c>
  4206b4:	ldrb	w8, [x26, #450]
  4206b8:	tbz	w8, #3, 4206f4 <wcrtomb@plt+0x1b8d4>
  4206bc:	ldr	x8, [x25, #1008]
  4206c0:	cbz	x8, 4206c8 <wcrtomb@plt+0x1b8a8>
  4206c4:	blr	x8
  4206c8:	bl	404d00 <__errno_location@plt>
  4206cc:	ldr	w24, [x0]
  4206d0:	mov	w2, #0x5                   	// #5
  4206d4:	mov	x0, xzr
  4206d8:	mov	x1, x22
  4206dc:	bl	404bf0 <dcgettext@plt>
  4206e0:	mov	x2, x0
  4206e4:	mov	w0, wzr
  4206e8:	mov	w1, w24
  4206ec:	mov	x3, x23
  4206f0:	bl	4041f0 <error@plt>
  4206f4:	ldrb	w8, [x26, #450]
  4206f8:	tbz	w8, #3, 42072c <wcrtomb@plt+0x1b90c>
  4206fc:	ldr	x8, [x25, #1008]
  420700:	cbz	x8, 420708 <wcrtomb@plt+0x1b8e8>
  420704:	blr	x8
  420708:	mov	w2, #0x5                   	// #5
  42070c:	mov	x0, xzr
  420710:	mov	x1, x21
  420714:	bl	404bf0 <dcgettext@plt>
  420718:	mov	x2, x0
  42071c:	mov	w0, wzr
  420720:	mov	w1, wzr
  420724:	mov	x3, x19
  420728:	bl	4041f0 <error@plt>
  42072c:	mov	x1, sp
  420730:	mov	x0, x19
  420734:	mov	w2, w20
  420738:	bl	429ff0 <wcrtomb@plt+0x251d0>
  42073c:	cbnz	w0, 420798 <wcrtomb@plt+0x1b978>
  420740:	ldp	x0, x8, [sp, #8]
  420744:	ldr	x9, [sp]
  420748:	orr	w20, w20, #0x8
  42074c:	add	x1, x0, x8, lsl #3
  420750:	lsl	x2, x9, #3
  420754:	bl	404120 <memmove@plt>
  420758:	ldp	x9, x8, [sp]
  42075c:	str	x27, [x8, x9, lsl #3]
  420760:	ldr	x1, [sp, #8]
  420764:	ldr	x0, [x1]
  420768:	bl	404900 <execvp@plt>
  42076c:	ldp	x9, x8, [sp]
  420770:	sub	x0, x29, #0x4
  420774:	str	xzr, [x8, x9, lsl #3]
  420778:	bl	40520c <wcrtomb@plt+0x3ec>
  42077c:	cmp	x19, #0x0
  420780:	cset	w8, ne  // ne = any
  420784:	mov	x23, x19
  420788:	cbnz	x0, 4206ac <wcrtomb@plt+0x1b88c>
  42078c:	tbz	w8, #0, 4207ec <wcrtomb@plt+0x1b9cc>
  420790:	mov	x0, x19
  420794:	bl	428054 <wcrtomb@plt+0x23234>
  420798:	ldr	x8, [x25, #1008]
  42079c:	cbz	x8, 4207a4 <wcrtomb@plt+0x1b984>
  4207a0:	blr	x8
  4207a4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4207a8:	add	x1, x1, #0xa2d
  4207ac:	mov	w2, #0x5                   	// #5
  4207b0:	mov	x0, xzr
  4207b4:	bl	404bf0 <dcgettext@plt>
  4207b8:	mov	x20, x0
  4207bc:	mov	x0, sp
  4207c0:	bl	42a218 <wcrtomb@plt+0x253f8>
  4207c4:	mov	x4, x0
  4207c8:	mov	w0, wzr
  4207cc:	mov	w1, wzr
  4207d0:	mov	x2, x20
  4207d4:	mov	x3, x19
  4207d8:	bl	4041f0 <error@plt>
  4207dc:	bl	40dda4 <wcrtomb@plt+0x8f84>
  4207e0:	mov	x19, xzr
  4207e4:	mov	w8, wzr
  4207e8:	tbnz	w8, #0, 420790 <wcrtomb@plt+0x1b970>
  4207ec:	ldr	x8, [x25, #1008]
  4207f0:	cbz	x8, 4207f8 <wcrtomb@plt+0x1b9d8>
  4207f4:	blr	x8
  4207f8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  4207fc:	add	x1, x1, #0x8ed
  420800:	mov	w2, #0x5                   	// #5
  420804:	mov	x0, xzr
  420808:	bl	404bf0 <dcgettext@plt>
  42080c:	mov	x2, x0
  420810:	mov	w0, wzr
  420814:	mov	w1, wzr
  420818:	bl	4041f0 <error@plt>
  42081c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  420820:	stp	x29, x30, [sp, #-48]!
  420824:	mov	x29, sp
  420828:	str	x21, [sp, #16]
  42082c:	mov	x21, x0
  420830:	add	x0, x29, #0x18
  420834:	stp	x20, x19, [sp, #32]
  420838:	mov	x19, x2
  42083c:	mov	w20, w1
  420840:	bl	41ae7c <wcrtomb@plt+0x1605c>
  420844:	mov	w0, #0xd                   	// #13
  420848:	mov	w1, #0x1                   	// #1
  42084c:	bl	404440 <signal@plt>
  420850:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420854:	str	x0, [x8, #3032]
  420858:	bl	41ae3c <wcrtomb@plt+0x1601c>
  42085c:	mov	w8, w0
  420860:	ldr	w0, [x29, #24]
  420864:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420868:	str	w8, [x9, #3040]
  42086c:	cbz	w8, 420888 <wcrtomb@plt+0x1ba68>
  420870:	bl	405798 <wcrtomb@plt+0x978>
  420874:	ldr	w0, [x29, #28]
  420878:	ldp	x20, x19, [sp, #32]
  42087c:	ldr	x21, [sp, #16]
  420880:	ldp	x29, x30, [sp], #48
  420884:	ret
  420888:	mov	w1, wzr
  42088c:	bl	42019c <wcrtomb@plt+0x1b37c>
  420890:	ldr	w0, [x29, #28]
  420894:	bl	405798 <wcrtomb@plt+0x978>
  420898:	mov	x0, x21
  42089c:	mov	w1, w20
  4208a0:	mov	x2, x19
  4208a4:	bl	4208b8 <wcrtomb@plt+0x1ba98>
  4208a8:	bl	43aabc <argp_usage@@Base+0x8ec0>
  4208ac:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4208b0:	ldr	x0, [x8, #616]
  4208b4:	bl	4202a4 <wcrtomb@plt+0x1b484>
  4208b8:	stp	x29, x30, [sp, #-48]!
  4208bc:	stp	x22, x21, [sp, #16]
  4208c0:	stp	x20, x19, [sp, #32]
  4208c4:	mov	w20, w1
  4208c8:	mov	x21, x0
  4208cc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4208d0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  4208d4:	add	x0, x0, #0x850
  4208d8:	add	x1, x1, #0xd94
  4208dc:	mov	x29, sp
  4208e0:	mov	x19, x2
  4208e4:	bl	420fc8 <wcrtomb@plt+0x1c1a8>
  4208e8:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  4208ec:	ldr	x8, [x22, #736]
  4208f0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4208f4:	add	x0, x0, #0x85c
  4208f8:	ldr	x1, [x8]
  4208fc:	bl	420fc8 <wcrtomb@plt+0x1c1a8>
  420900:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  420904:	ldr	x8, [x22, #736]
  420908:	ldr	x9, [x9, #688]
  42090c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420910:	add	x0, x0, #0x868
  420914:	sub	x8, x8, x9
  420918:	asr	x8, x8, #3
  42091c:	add	x1, x8, #0x1
  420920:	bl	420ff8 <wcrtomb@plt+0x1c1d8>
  420924:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420928:	ldrsw	x1, [x8, #748]
  42092c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420930:	add	x0, x0, #0x873
  420934:	bl	420ff8 <wcrtomb@plt+0x1c1d8>
  420938:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42093c:	ldr	w8, [x8, #4048]
  420940:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  420944:	ldr	w9, [x9, #816]
  420948:	cmp	w8, #0x0
  42094c:	csel	w0, w9, w8, eq  // eq = none
  420950:	bl	421324 <wcrtomb@plt+0x1c504>
  420954:	mov	x1, x0
  420958:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  42095c:	add	x0, x0, #0x896
  420960:	bl	420fc8 <wcrtomb@plt+0x1c1a8>
  420964:	mov	w0, w20
  420968:	bl	421044 <wcrtomb@plt+0x1c224>
  42096c:	ldr	w0, [x19, #104]
  420970:	bl	421080 <wcrtomb@plt+0x1c260>
  420974:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420978:	add	x0, x0, #0x927
  42097c:	mov	x1, x21
  420980:	bl	420fc8 <wcrtomb@plt+0x1c1a8>
  420984:	ldr	x1, [x19, #8]
  420988:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  42098c:	add	x0, x0, #0x934
  420990:	bl	420fc8 <wcrtomb@plt+0x1c1a8>
  420994:	ldr	x1, [x19, #32]
  420998:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  42099c:	add	x0, x0, #0x941
  4209a0:	bl	420fc8 <wcrtomb@plt+0x1c1a8>
  4209a4:	ldr	x1, [x19, #40]
  4209a8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4209ac:	add	x0, x0, #0x94b
  4209b0:	bl	420fc8 <wcrtomb@plt+0x1c1a8>
  4209b4:	ldp	x1, x2, [x19, #216]
  4209b8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4209bc:	add	x0, x0, #0x955
  4209c0:	bl	4210d4 <wcrtomb@plt+0x1c2b4>
  4209c4:	ldp	x1, x2, [x19, #232]
  4209c8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4209cc:	add	x0, x0, #0x95f
  4209d0:	bl	4210d4 <wcrtomb@plt+0x1c2b4>
  4209d4:	ldp	x1, x2, [x19, #248]
  4209d8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4209dc:	add	x0, x0, #0x969
  4209e0:	bl	4210d4 <wcrtomb@plt+0x1c2b4>
  4209e4:	ldr	x1, [x19, #136]
  4209e8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4209ec:	add	x0, x0, #0x973
  4209f0:	bl	420ff8 <wcrtomb@plt+0x1c1d8>
  4209f4:	ldr	w1, [x19, #112]
  4209f8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4209fc:	add	x0, x0, #0x97c
  420a00:	bl	420ff8 <wcrtomb@plt+0x1c1d8>
  420a04:	ldr	w1, [x19, #116]
  420a08:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420a0c:	add	x0, x0, #0x984
  420a10:	bl	420ff8 <wcrtomb@plt+0x1c1d8>
  420a14:	and	w8, w20, #0xff
  420a18:	sub	w9, w8, #0x62
  420a1c:	cmp	w9, #0x2
  420a20:	b.cc	420a60 <wcrtomb@plt+0x1bc40>  // b.lo, b.ul, b.last
  420a24:	cmp	w8, #0x68
  420a28:	b.eq	420a34 <wcrtomb@plt+0x1bc14>  // b.none
  420a2c:	cmp	w8, #0x6c
  420a30:	b.ne	420a94 <wcrtomb@plt+0x1bc74>  // b.any
  420a34:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420a38:	add	x0, x0, #0x98c
  420a3c:	bl	404b40 <unsetenv@plt>
  420a40:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420a44:	add	x0, x0, #0x996
  420a48:	bl	404b40 <unsetenv@plt>
  420a4c:	ldr	x1, [x19, #24]
  420a50:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420a54:	add	x0, x0, #0x9a0
  420a58:	bl	420fc8 <wcrtomb@plt+0x1c1a8>
  420a5c:	b	420ab8 <wcrtomb@plt+0x1bc98>
  420a60:	ldr	x0, [x19, #120]
  420a64:	bl	404b10 <gnu_dev_minor@plt>
  420a68:	mov	w1, w0
  420a6c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420a70:	add	x0, x0, #0x98c
  420a74:	bl	420ff8 <wcrtomb@plt+0x1c1d8>
  420a78:	ldr	x0, [x19, #120]
  420a7c:	bl	4048b0 <gnu_dev_major@plt>
  420a80:	mov	w1, w0
  420a84:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420a88:	add	x0, x0, #0x996
  420a8c:	bl	420ff8 <wcrtomb@plt+0x1c1d8>
  420a90:	b	420aac <wcrtomb@plt+0x1bc8c>
  420a94:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420a98:	add	x0, x0, #0x98c
  420a9c:	bl	404b40 <unsetenv@plt>
  420aa0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420aa4:	add	x0, x0, #0x996
  420aa8:	bl	404b40 <unsetenv@plt>
  420aac:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420ab0:	add	x0, x0, #0x9a0
  420ab4:	bl	404b40 <unsetenv@plt>
  420ab8:	ldp	x20, x19, [sp, #32]
  420abc:	ldp	x22, x21, [sp, #16]
  420ac0:	ldp	x29, x30, [sp], #48
  420ac4:	ret
  420ac8:	stp	x29, x30, [sp, #-32]!
  420acc:	str	x19, [sp, #16]
  420ad0:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420ad4:	ldr	w8, [x19, #3040]
  420ad8:	mov	x29, sp
  420adc:	tbnz	w8, #31, 420c2c <wcrtomb@plt+0x1be0c>
  420ae0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420ae4:	ldr	x1, [x8, #3032]
  420ae8:	mov	w0, #0xd                   	// #13
  420aec:	bl	404440 <signal@plt>
  420af0:	ldr	w0, [x19, #3040]
  420af4:	add	x1, x29, #0x1c
  420af8:	mov	w2, wzr
  420afc:	bl	404d80 <waitpid@plt>
  420b00:	cmn	w0, #0x1
  420b04:	b.ne	420b30 <wcrtomb@plt+0x1bd10>  // b.any
  420b08:	bl	404d00 <__errno_location@plt>
  420b0c:	ldr	w8, [x0]
  420b10:	cmp	w8, #0x4
  420b14:	b.eq	420af0 <wcrtomb@plt+0x1bcd0>  // b.none
  420b18:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420b1c:	ldr	x0, [x8, #616]
  420b20:	mov	w8, #0xffffffff            	// #-1
  420b24:	str	w8, [x19, #3040]
  420b28:	bl	428764 <wcrtomb@plt+0x23944>
  420b2c:	b	420c2c <wcrtomb@plt+0x1be0c>
  420b30:	ldr	w9, [x29, #28]
  420b34:	ands	w8, w9, #0x7f
  420b38:	b.eq	420b94 <wcrtomb@plt+0x1bd74>  // b.none
  420b3c:	mov	w9, #0x1000000             	// #16777216
  420b40:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  420b44:	add	w9, w9, w8, lsl #24
  420b48:	ldr	x8, [x10, #1008]
  420b4c:	mov	w10, #0x2000000             	// #33554432
  420b50:	cmp	w9, w10
  420b54:	b.lt	420be8 <wcrtomb@plt+0x1bdc8>  // b.tstop
  420b58:	cbz	x8, 420b60 <wcrtomb@plt+0x1bd40>
  420b5c:	blr	x8
  420b60:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  420b64:	add	x1, x1, #0x805
  420b68:	mov	w2, #0x5                   	// #5
  420b6c:	mov	x0, xzr
  420b70:	bl	404bf0 <dcgettext@plt>
  420b74:	ldr	w8, [x29, #28]
  420b78:	ldrsw	x3, [x19, #3040]
  420b7c:	mov	x2, x0
  420b80:	mov	w0, wzr
  420b84:	and	w4, w8, #0x7f
  420b88:	mov	w1, wzr
  420b8c:	bl	4041f0 <error@plt>
  420b90:	b	420c24 <wcrtomb@plt+0x1be04>
  420b94:	tst	w9, #0xff00
  420b98:	b.eq	420c24 <wcrtomb@plt+0x1be04>  // b.none
  420b9c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420ba0:	ldrb	w8, [x8, #577]
  420ba4:	cbnz	w8, 420c24 <wcrtomb@plt+0x1be04>
  420ba8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420bac:	ldr	x8, [x8, #1008]
  420bb0:	cbz	x8, 420bb8 <wcrtomb@plt+0x1bd98>
  420bb4:	blr	x8
  420bb8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  420bbc:	add	x1, x1, #0x7e7
  420bc0:	mov	w2, #0x5                   	// #5
  420bc4:	mov	x0, xzr
  420bc8:	bl	404bf0 <dcgettext@plt>
  420bcc:	ldrsw	x3, [x19, #3040]
  420bd0:	ldrb	w4, [x29, #29]
  420bd4:	mov	x2, x0
  420bd8:	mov	w0, wzr
  420bdc:	mov	w1, wzr
  420be0:	bl	4041f0 <error@plt>
  420be4:	b	420c18 <wcrtomb@plt+0x1bdf8>
  420be8:	cbz	x8, 420bf0 <wcrtomb@plt+0x1bdd0>
  420bec:	blr	x8
  420bf0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  420bf4:	add	x1, x1, #0x828
  420bf8:	mov	w2, #0x5                   	// #5
  420bfc:	mov	x0, xzr
  420c00:	bl	404bf0 <dcgettext@plt>
  420c04:	ldrsw	x3, [x19, #3040]
  420c08:	mov	x2, x0
  420c0c:	mov	w0, wzr
  420c10:	mov	w1, wzr
  420c14:	bl	4041f0 <error@plt>
  420c18:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420c1c:	mov	w9, #0x2                   	// #2
  420c20:	str	w9, [x8, #3456]
  420c24:	mov	w8, #0xffffffff            	// #-1
  420c28:	str	w8, [x19, #3040]
  420c2c:	ldr	x19, [sp, #16]
  420c30:	ldp	x29, x30, [sp], #32
  420c34:	ret
  420c38:	sub	sp, sp, #0x70
  420c3c:	stp	x29, x30, [sp, #48]
  420c40:	add	x29, sp, #0x30
  420c44:	stp	x20, x19, [sp, #96]
  420c48:	mov	x19, x0
  420c4c:	add	x0, x29, #0x18
  420c50:	str	x23, [sp, #64]
  420c54:	stp	x22, x21, [sp, #80]
  420c58:	mov	w21, w1
  420c5c:	bl	41ae7c <wcrtomb@plt+0x1605c>
  420c60:	mov	w0, #0xd                   	// #13
  420c64:	mov	w1, #0x1                   	// #1
  420c68:	bl	404440 <signal@plt>
  420c6c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420c70:	str	x0, [x23, #3048]
  420c74:	bl	41ae3c <wcrtomb@plt+0x1601c>
  420c78:	cbz	w0, 420d94 <wcrtomb@plt+0x1bf74>
  420c7c:	mov	w20, w0
  420c80:	ldr	w0, [x29, #28]
  420c84:	str	xzr, [sp, #24]
  420c88:	str	xzr, [sp, #8]
  420c8c:	bl	405798 <wcrtomb@plt+0x978>
  420c90:	ldr	w0, [x29, #24]
  420c94:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  420c98:	add	x1, x1, #0x133
  420c9c:	bl	404610 <fdopen@plt>
  420ca0:	mov	x22, x0
  420ca4:	add	x0, sp, #0x18
  420ca8:	add	x1, sp, #0x8
  420cac:	mov	x2, x22
  420cb0:	bl	4049a0 <getline@plt>
  420cb4:	mov	x21, x0
  420cb8:	mov	x0, x22
  420cbc:	bl	404470 <fclose@plt>
  420cc0:	cmp	w21, #0x1
  420cc4:	b.lt	420ce8 <wcrtomb@plt+0x1bec8>  // b.tstop
  420cc8:	ldr	x8, [sp, #24]
  420ccc:	sub	w9, w21, #0x1
  420cd0:	ldrb	w9, [x8, w9, sxtw]
  420cd4:	cmp	w9, #0xa
  420cd8:	b.ne	420ce8 <wcrtomb@plt+0x1bec8>  // b.any
  420cdc:	sxtw	x9, w21
  420ce0:	sub	x21, x9, #0x1
  420ce4:	strb	wzr, [x8, x21]
  420ce8:	add	x1, sp, #0x14
  420cec:	mov	w0, w20
  420cf0:	mov	w2, wzr
  420cf4:	bl	404d80 <waitpid@plt>
  420cf8:	cmn	w0, #0x1
  420cfc:	b.ne	420d2c <wcrtomb@plt+0x1bf0c>  // b.any
  420d00:	bl	404d00 <__errno_location@plt>
  420d04:	ldr	w8, [x0]
  420d08:	cmp	w8, #0x4
  420d0c:	b.eq	420ce8 <wcrtomb@plt+0x1bec8>  // b.none
  420d10:	ldr	x1, [x23, #3048]
  420d14:	mov	w0, #0xd                   	// #13
  420d18:	bl	404440 <signal@plt>
  420d1c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420d20:	ldr	x0, [x8, #768]
  420d24:	bl	428764 <wcrtomb@plt+0x23944>
  420d28:	b	420d4c <wcrtomb@plt+0x1bf2c>
  420d2c:	ldr	x1, [x23, #3048]
  420d30:	mov	w0, #0xd                   	// #13
  420d34:	bl	404440 <signal@plt>
  420d38:	ldr	w8, [sp, #20]
  420d3c:	tst	w8, #0x7f
  420d40:	b.eq	420d68 <wcrtomb@plt+0x1bf48>  // b.none
  420d44:	ldr	x0, [sp, #24]
  420d48:	bl	4049d0 <free@plt>
  420d4c:	mov	w0, #0xffffffff            	// #-1
  420d50:	ldp	x20, x19, [sp, #96]
  420d54:	ldp	x22, x21, [sp, #80]
  420d58:	ldr	x23, [sp, #64]
  420d5c:	ldp	x29, x30, [sp, #48]
  420d60:	add	sp, sp, #0x70
  420d64:	ret
  420d68:	ldr	x0, [sp, #24]
  420d6c:	cmp	w21, #0x1
  420d70:	b.lt	420d88 <wcrtomb@plt+0x1bf68>  // b.tstop
  420d74:	and	w8, w8, #0xff00
  420d78:	cbnz	w8, 420d88 <wcrtomb@plt+0x1bf68>
  420d7c:	str	x0, [x19]
  420d80:	ldrb	w0, [sp, #21]
  420d84:	b	420d50 <wcrtomb@plt+0x1bf30>
  420d88:	bl	4049d0 <free@plt>
  420d8c:	ldrb	w0, [sp, #21]
  420d90:	b	420d50 <wcrtomb@plt+0x1bf30>
  420d94:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420d98:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  420d9c:	add	x0, x0, #0x850
  420da0:	add	x1, x1, #0xd94
  420da4:	mov	w2, #0x1                   	// #1
  420da8:	bl	4042b0 <setenv@plt>
  420dac:	ldr	x1, [x19]
  420db0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420db4:	add	x0, x0, #0x85c
  420db8:	mov	w2, #0x1                   	// #1
  420dbc:	bl	4042b0 <setenv@plt>
  420dc0:	sxtw	x0, w21
  420dc4:	add	x1, sp, #0x18
  420dc8:	bl	43650c <argp_usage@@Base+0x4910>
  420dcc:	mov	x1, x0
  420dd0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420dd4:	add	x0, x0, #0x868
  420dd8:	mov	w2, #0x1                   	// #1
  420ddc:	bl	4042b0 <setenv@plt>
  420de0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420de4:	ldrsw	x0, [x8, #748]
  420de8:	add	x1, sp, #0x18
  420dec:	bl	43650c <argp_usage@@Base+0x4910>
  420df0:	mov	x1, x0
  420df4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420df8:	add	x0, x0, #0x873
  420dfc:	mov	w2, #0x1                   	// #1
  420e00:	bl	4042b0 <setenv@plt>
  420e04:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420e08:	ldr	w0, [x8, #860]
  420e0c:	bl	42136c <wcrtomb@plt+0x1c54c>
  420e10:	mov	x1, x0
  420e14:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420e18:	add	x0, x0, #0x887
  420e1c:	mov	w2, #0x1                   	// #1
  420e20:	bl	4042b0 <setenv@plt>
  420e24:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420e28:	ldr	w8, [x8, #4048]
  420e2c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  420e30:	ldr	w9, [x9, #816]
  420e34:	cmp	w8, #0x0
  420e38:	csel	w0, w9, w8, eq  // eq = none
  420e3c:	bl	421324 <wcrtomb@plt+0x1c504>
  420e40:	mov	x1, x0
  420e44:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420e48:	add	x0, x0, #0x896
  420e4c:	mov	w2, #0x1                   	// #1
  420e50:	bl	4042b0 <setenv@plt>
  420e54:	ldrsw	x0, [x29, #28]
  420e58:	add	x1, sp, #0x18
  420e5c:	bl	43650c <argp_usage@@Base+0x4910>
  420e60:	mov	x1, x0
  420e64:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420e68:	add	x0, x0, #0x8a1
  420e6c:	mov	w2, #0x1                   	// #1
  420e70:	bl	4042b0 <setenv@plt>
  420e74:	ldr	w0, [x29, #24]
  420e78:	bl	405798 <wcrtomb@plt+0x978>
  420e7c:	bl	43aabc <argp_usage@@Base+0x8ec0>
  420e80:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420e84:	ldr	x0, [x8, #768]
  420e88:	bl	4202a4 <wcrtomb@plt+0x1b484>
  420e8c:	sub	sp, sp, #0x50
  420e90:	stp	x29, x30, [sp, #32]
  420e94:	stp	x22, x21, [sp, #48]
  420e98:	stp	x20, x19, [sp, #64]
  420e9c:	add	x29, sp, #0x20
  420ea0:	mov	w20, w2
  420ea4:	mov	x22, x1
  420ea8:	mov	x19, x0
  420eac:	bl	41ae3c <wcrtomb@plt+0x1601c>
  420eb0:	cbz	w0, 420efc <wcrtomb@plt+0x1c0dc>
  420eb4:	mov	w21, w0
  420eb8:	add	x1, sp, #0x8
  420ebc:	mov	w0, w21
  420ec0:	mov	w2, wzr
  420ec4:	bl	404d80 <waitpid@plt>
  420ec8:	cmn	w0, #0x1
  420ecc:	b.ne	420ee8 <wcrtomb@plt+0x1c0c8>  // b.any
  420ed0:	bl	404d00 <__errno_location@plt>
  420ed4:	ldr	w8, [x0]
  420ed8:	cmp	w8, #0x4
  420edc:	b.eq	420eb8 <wcrtomb@plt+0x1c098>  // b.none
  420ee0:	mov	x0, x19
  420ee4:	bl	428764 <wcrtomb@plt+0x23944>
  420ee8:	ldp	x20, x19, [sp, #64]
  420eec:	ldp	x22, x21, [sp, #48]
  420ef0:	ldp	x29, x30, [sp, #32]
  420ef4:	add	sp, sp, #0x50
  420ef8:	ret
  420efc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420f00:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  420f04:	add	x0, x0, #0x850
  420f08:	add	x1, x1, #0xd94
  420f0c:	mov	w2, #0x1                   	// #1
  420f10:	bl	4042b0 <setenv@plt>
  420f14:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420f18:	add	x0, x0, #0x85c
  420f1c:	mov	w2, #0x1                   	// #1
  420f20:	mov	x1, x22
  420f24:	bl	4042b0 <setenv@plt>
  420f28:	sxtw	x0, w20
  420f2c:	add	x1, sp, #0x8
  420f30:	bl	43650c <argp_usage@@Base+0x4910>
  420f34:	mov	x1, x0
  420f38:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420f3c:	add	x0, x0, #0x8a8
  420f40:	mov	w2, #0x1                   	// #1
  420f44:	bl	4042b0 <setenv@plt>
  420f48:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420f4c:	ldrsw	x0, [x8, #748]
  420f50:	add	x1, sp, #0x8
  420f54:	bl	43650c <argp_usage@@Base+0x4910>
  420f58:	mov	x1, x0
  420f5c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420f60:	add	x0, x0, #0x873
  420f64:	mov	w2, #0x1                   	// #1
  420f68:	bl	4042b0 <setenv@plt>
  420f6c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  420f70:	ldr	w0, [x8, #860]
  420f74:	bl	42136c <wcrtomb@plt+0x1c54c>
  420f78:	mov	x1, x0
  420f7c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420f80:	add	x0, x0, #0x887
  420f84:	mov	w2, #0x1                   	// #1
  420f88:	bl	4042b0 <setenv@plt>
  420f8c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  420f90:	ldr	w8, [x8, #4048]
  420f94:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  420f98:	ldr	w9, [x9, #816]
  420f9c:	cmp	w8, #0x0
  420fa0:	csel	w0, w9, w8, eq  // eq = none
  420fa4:	bl	421324 <wcrtomb@plt+0x1c504>
  420fa8:	mov	x1, x0
  420fac:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  420fb0:	add	x0, x0, #0x896
  420fb4:	mov	w2, #0x1                   	// #1
  420fb8:	bl	4042b0 <setenv@plt>
  420fbc:	bl	43aabc <argp_usage@@Base+0x8ec0>
  420fc0:	mov	x0, x19
  420fc4:	bl	4202a4 <wcrtomb@plt+0x1b484>
  420fc8:	stp	x29, x30, [sp, #-16]!
  420fcc:	mov	x29, sp
  420fd0:	cbz	x1, 420fe8 <wcrtomb@plt+0x1c1c8>
  420fd4:	mov	w2, #0x1                   	// #1
  420fd8:	bl	4042b0 <setenv@plt>
  420fdc:	cbnz	w0, 420ff4 <wcrtomb@plt+0x1c1d4>
  420fe0:	ldp	x29, x30, [sp], #16
  420fe4:	ret
  420fe8:	bl	404b40 <unsetenv@plt>
  420fec:	ldp	x29, x30, [sp], #16
  420ff0:	ret
  420ff4:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  420ff8:	sub	sp, sp, #0x40
  420ffc:	mov	x8, x1
  421000:	str	x19, [sp, #48]
  421004:	mov	x19, x0
  421008:	add	x1, sp, #0x8
  42100c:	mov	x0, x8
  421010:	stp	x29, x30, [sp, #32]
  421014:	add	x29, sp, #0x20
  421018:	bl	43650c <argp_usage@@Base+0x4910>
  42101c:	mov	x1, x0
  421020:	mov	w2, #0x1                   	// #1
  421024:	mov	x0, x19
  421028:	bl	4042b0 <setenv@plt>
  42102c:	cbnz	w0, 421040 <wcrtomb@plt+0x1c220>
  421030:	ldr	x19, [sp, #48]
  421034:	ldp	x29, x30, [sp, #32]
  421038:	add	sp, sp, #0x40
  42103c:	ret
  421040:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  421044:	sub	sp, sp, #0x20
  421048:	stp	x29, x30, [sp, #16]
  42104c:	add	x29, sp, #0x10
  421050:	sturb	w0, [x29, #-4]
  421054:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  421058:	add	x0, x0, #0x911
  42105c:	sub	x1, x29, #0x4
  421060:	mov	w2, #0x1                   	// #1
  421064:	sturb	wzr, [x29, #-3]
  421068:	bl	4042b0 <setenv@plt>
  42106c:	cbnz	w0, 42107c <wcrtomb@plt+0x1c25c>
  421070:	ldp	x29, x30, [sp, #16]
  421074:	add	sp, sp, #0x20
  421078:	ret
  42107c:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  421080:	sub	sp, sp, #0x30
  421084:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x14da0>
  421088:	mov	x5, x0
  42108c:	add	x4, x4, #0x9ad
  421090:	add	x0, sp, #0x8
  421094:	mov	w1, #0x18                  	// #24
  421098:	mov	w2, #0x1                   	// #1
  42109c:	mov	w3, #0x18                  	// #24
  4210a0:	stp	x29, x30, [sp, #32]
  4210a4:	add	x29, sp, #0x20
  4210a8:	bl	404460 <__snprintf_chk@plt>
  4210ac:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  4210b0:	add	x0, x0, #0x91e
  4210b4:	add	x1, sp, #0x8
  4210b8:	mov	w2, #0x1                   	// #1
  4210bc:	bl	4042b0 <setenv@plt>
  4210c0:	cbnz	w0, 4210d0 <wcrtomb@plt+0x1c2b0>
  4210c4:	ldp	x29, x30, [sp, #32]
  4210c8:	add	sp, sp, #0x30
  4210cc:	ret
  4210d0:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  4210d4:	sub	sp, sp, #0x40
  4210d8:	mov	x8, x2
  4210dc:	str	x19, [sp, #48]
  4210e0:	mov	x19, x0
  4210e4:	mov	x2, sp
  4210e8:	mov	x0, x1
  4210ec:	mov	x1, x8
  4210f0:	stp	x29, x30, [sp, #32]
  4210f4:	add	x29, sp, #0x20
  4210f8:	bl	419d94 <wcrtomb@plt+0x14f74>
  4210fc:	mov	x1, x0
  421100:	mov	w2, #0x1                   	// #1
  421104:	mov	x0, x19
  421108:	bl	4042b0 <setenv@plt>
  42110c:	cbnz	w0, 421120 <wcrtomb@plt+0x1c300>
  421110:	ldr	x19, [sp, #48]
  421114:	ldp	x29, x30, [sp, #32]
  421118:	add	sp, sp, #0x40
  42111c:	ret
  421120:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  421124:	sub	sp, sp, #0x20
  421128:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42112c:	ldr	x9, [x8, #3056]
  421130:	stp	x29, x30, [sp, #16]
  421134:	add	x29, sp, #0x10
  421138:	cbnz	x9, 42114c <wcrtomb@plt+0x1c32c>
  42113c:	ldp	x29, x30, [sp, #16]
  421140:	str	x0, [x8, #3056]
  421144:	add	sp, sp, #0x20
  421148:	ret
  42114c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421150:	ldr	x8, [x8, #1008]
  421154:	str	x0, [sp, #8]
  421158:	cbz	x8, 421160 <wcrtomb@plt+0x1c340>
  42115c:	blr	x8
  421160:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  421164:	add	x1, x1, #0xf0
  421168:	mov	w2, #0x5                   	// #5
  42116c:	mov	x0, xzr
  421170:	bl	404bf0 <dcgettext@plt>
  421174:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421178:	ldr	x3, [x8, #3056]
  42117c:	ldr	x4, [sp, #8]
  421180:	mov	x2, x0
  421184:	mov	w0, wzr
  421188:	mov	w1, wzr
  42118c:	bl	4041f0 <error@plt>
  421190:	mov	w0, #0x2                   	// #2
  421194:	bl	421198 <wcrtomb@plt+0x1c378>
  421198:	stp	x29, x30, [sp, #-32]!
  42119c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4211a0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4211a4:	ldr	x1, [x8, #1136]
  4211a8:	ldr	x3, [x9, #3544]
  4211ac:	str	x19, [sp, #16]
  4211b0:	mov	w19, w0
  4211b4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x2eda0>
  4211b8:	add	x0, x0, #0x198
  4211bc:	mov	w2, #0x4                   	// #4
  4211c0:	mov	x29, sp
  4211c4:	bl	42e5cc <argp_help@@Base>
  4211c8:	bl	432484 <argp_usage@@Base+0x888>
  4211cc:	mov	w0, w19
  4211d0:	bl	4041c0 <exit@plt>
  4211d4:	sub	sp, sp, #0x50
  4211d8:	str	x23, [sp, #32]
  4211dc:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4211e0:	ldr	x8, [x23, #3064]
  4211e4:	stp	x20, x19, [sp, #64]
  4211e8:	mov	x20, x1
  4211ec:	mov	x19, x0
  4211f0:	stp	x29, x30, [sp, #16]
  4211f4:	stp	x22, x21, [sp, #48]
  4211f8:	add	x29, sp, #0x10
  4211fc:	cbnz	x8, 421250 <wcrtomb@plt+0x1c430>
  421200:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421204:	ldr	w8, [x8, #976]
  421208:	cbz	w8, 421234 <wcrtomb@plt+0x1c414>
  42120c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421210:	ldr	x8, [x8, #3056]
  421214:	cbnz	x8, 421234 <wcrtomb@plt+0x1c414>
  421218:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  42121c:	add	x0, x0, #0x11f
  421220:	bl	421124 <wcrtomb@plt+0x1c304>
  421224:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421228:	ldr	x8, [x8, #1152]
  42122c:	str	x8, [x23, #3064]
  421230:	b	421250 <wcrtomb@plt+0x1c430>
  421234:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  421238:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  42123c:	add	x0, x0, #0x52c
  421240:	add	x1, x1, #0x133
  421244:	bl	4044c0 <fopen@plt>
  421248:	str	x0, [x23, #3064]
  42124c:	cbz	x0, 421318 <wcrtomb@plt+0x1c4f8>
  421250:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421254:	ldr	x21, [x22, #3928]
  421258:	mov	x0, x20
  42125c:	bl	43c05c <argp_usage@@Base+0xa460>
  421260:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x15da0>
  421264:	mov	x4, x0
  421268:	add	x2, x2, #0x122
  42126c:	mov	w1, #0x1                   	// #1
  421270:	mov	x0, x21
  421274:	mov	x3, x19
  421278:	bl	404910 <__fprintf_chk@plt>
  42127c:	ldr	x0, [x22, #3928]
  421280:	bl	404ad0 <fflush_unlocked@plt>
  421284:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421288:	ldrb	w8, [x20, #3072]
  42128c:	tbz	w8, #0, 421298 <wcrtomb@plt+0x1c478>
  421290:	mov	w19, wzr
  421294:	b	4212dc <wcrtomb@plt+0x1c4bc>
  421298:	ldr	x2, [x23, #3064]
  42129c:	add	x0, x29, #0x18
  4212a0:	add	x1, sp, #0x8
  4212a4:	str	xzr, [x29, #24]
  4212a8:	str	xzr, [sp, #8]
  4212ac:	bl	4049a0 <getline@plt>
  4212b0:	tbnz	x0, #63, 4212c8 <wcrtomb@plt+0x1c4a8>
  4212b4:	ldr	x0, [x29, #24]
  4212b8:	bl	404210 <rpmatch@plt>
  4212bc:	cmp	w0, #0x0
  4212c0:	cset	w19, gt
  4212c4:	b	4212d4 <wcrtomb@plt+0x1c4b4>
  4212c8:	mov	w8, #0x1                   	// #1
  4212cc:	mov	w19, wzr
  4212d0:	strb	w8, [x20, #3072]
  4212d4:	ldr	x0, [x29, #24]
  4212d8:	bl	4049d0 <free@plt>
  4212dc:	ldrb	w8, [x20, #3072]
  4212e0:	cmp	w8, #0x1
  4212e4:	b.ne	4212fc <wcrtomb@plt+0x1c4dc>  // b.any
  4212e8:	ldr	x1, [x22, #3928]
  4212ec:	mov	w0, #0xa                   	// #10
  4212f0:	bl	404b90 <fputc_unlocked@plt>
  4212f4:	ldr	x0, [x22, #3928]
  4212f8:	bl	404ad0 <fflush_unlocked@plt>
  4212fc:	mov	w0, w19
  421300:	ldp	x20, x19, [sp, #64]
  421304:	ldp	x22, x21, [sp, #48]
  421308:	ldr	x23, [sp, #32]
  42130c:	ldp	x29, x30, [sp, #16]
  421310:	add	sp, sp, #0x50
  421314:	ret
  421318:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  42131c:	add	x0, x0, #0x52c
  421320:	bl	428180 <wcrtomb@plt+0x23360>
  421324:	cmp	w0, #0x1
  421328:	b.ne	421338 <wcrtomb@plt+0x1c518>  // b.any
  42132c:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  421330:	add	x0, x0, #0x4a4
  421334:	ret
  421338:	mov	w8, w0
  42133c:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x14da0>
  421340:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  421344:	add	x9, x9, #0xc78
  421348:	add	x0, x0, #0x129
  42134c:	ldr	x10, [x9]
  421350:	cbz	x10, 421368 <wcrtomb@plt+0x1c548>
  421354:	ldr	w11, [x9, #8]
  421358:	add	x9, x9, #0x10
  42135c:	cmp	w11, w8
  421360:	b.ne	42134c <wcrtomb@plt+0x1c52c>  // b.any
  421364:	mov	x0, x10
  421368:	ret
  42136c:	stp	x29, x30, [sp, #-16]!
  421370:	cmp	w0, #0xa
  421374:	mov	x29, sp
  421378:	b.cs	421390 <wcrtomb@plt+0x1c570>  // b.hs, b.nlast
  42137c:	adrp	x8, 454000 <_obstack_memory_used@@Base+0x15da0>
  421380:	add	x8, x8, #0xa0
  421384:	ldr	x0, [x8, w0, sxtw #3]
  421388:	ldp	x29, x30, [sp], #16
  42138c:	ret
  421390:	bl	404870 <abort@plt>
  421394:	stp	x29, x30, [sp, #-48]!
  421398:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  42139c:	add	x1, x1, #0x161
  4213a0:	mov	w2, #0x3                   	// #3
  4213a4:	stp	x22, x21, [sp, #16]
  4213a8:	stp	x20, x19, [sp, #32]
  4213ac:	mov	x29, sp
  4213b0:	mov	x19, x0
  4213b4:	bl	4045a0 <strncmp@plt>
  4213b8:	add	x8, x19, #0x3
  4213bc:	cmp	w0, #0x0
  4213c0:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x14da0>
  4213c4:	adrp	x22, 453000 <_obstack_memory_used@@Base+0x14da0>
  4213c8:	add	x21, x21, #0xcd8
  4213cc:	csel	x20, x8, x19, eq  // eq = none
  4213d0:	add	x22, x22, #0xd28
  4213d4:	ldr	x0, [x21]
  4213d8:	mov	x1, x20
  4213dc:	bl	404920 <strcmp@plt>
  4213e0:	cbz	w0, 42142c <wcrtomb@plt+0x1c60c>
  4213e4:	add	x21, x21, #0x10
  4213e8:	cmp	x21, x22
  4213ec:	b.cc	4213d4 <wcrtomb@plt+0x1c5b4>  // b.lo, b.ul, b.last
  4213f0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4213f4:	ldr	x8, [x8, #1008]
  4213f8:	cbz	x8, 421400 <wcrtomb@plt+0x1c5e0>
  4213fc:	blr	x8
  421400:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  421404:	add	x1, x1, #0x165
  421408:	mov	w2, #0x5                   	// #5
  42140c:	mov	x0, xzr
  421410:	bl	404bf0 <dcgettext@plt>
  421414:	mov	x2, x0
  421418:	mov	w0, wzr
  42141c:	mov	w1, wzr
  421420:	mov	x3, x19
  421424:	bl	4041f0 <error@plt>
  421428:	bl	40dda4 <wcrtomb@plt+0x8f84>
  42142c:	ldr	w0, [x21, #8]
  421430:	ldp	x20, x19, [sp, #32]
  421434:	ldp	x22, x21, [sp, #16]
  421438:	ldp	x29, x30, [sp], #48
  42143c:	ret
  421440:	stp	x29, x30, [sp, #-32]!
  421444:	str	x19, [sp, #16]
  421448:	mov	x29, sp
  42144c:	mov	x19, x2
  421450:	mov	x2, x1
  421454:	mov	w1, w0
  421458:	adrp	x5, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42145c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x2eda0>
  421460:	add	x5, x5, #0xc08
  421464:	add	x0, x0, #0x198
  421468:	add	x4, x29, #0x1c
  42146c:	mov	w3, #0x28                  	// #40
  421470:	str	x19, [x5]
  421474:	bl	430b50 <argp_parse@@Base>
  421478:	cbnz	w0, 421498 <wcrtomb@plt+0x1c678>
  42147c:	ldr	w8, [x19]
  421480:	cbnz	w8, 42148c <wcrtomb@plt+0x1c66c>
  421484:	bl	41b270 <wcrtomb@plt+0x16450>
  421488:	tbnz	w0, #0, 42149c <wcrtomb@plt+0x1c67c>
  42148c:	ldr	x19, [sp, #16]
  421490:	ldp	x29, x30, [sp], #32
  421494:	ret
  421498:	bl	404870 <abort@plt>
  42149c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4214a0:	ldr	x8, [x8, #1008]
  4214a4:	cbz	x8, 4214ac <wcrtomb@plt+0x1c68c>
  4214a8:	blr	x8
  4214ac:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  4214b0:	add	x1, x1, #0x17d
  4214b4:	mov	w2, #0x5                   	// #5
  4214b8:	mov	x0, xzr
  4214bc:	bl	404bf0 <dcgettext@plt>
  4214c0:	ldr	x3, [x19, #8]
  4214c4:	mov	x2, x0
  4214c8:	mov	w0, wzr
  4214cc:	mov	w1, wzr
  4214d0:	bl	4041f0 <error@plt>
  4214d4:	mov	w0, #0x2                   	// #2
  4214d8:	bl	421198 <wcrtomb@plt+0x1c378>
  4214dc:	stp	x29, x30, [sp, #-64]!
  4214e0:	str	x23, [sp, #16]
  4214e4:	stp	x22, x21, [sp, #32]
  4214e8:	stp	x20, x19, [sp, #48]
  4214ec:	mov	x29, sp
  4214f0:	mov	x19, x1
  4214f4:	mov	w20, w0
  4214f8:	bl	4050c4 <wcrtomb@plt+0x2a4>
  4214fc:	ldr	x0, [x19]
  421500:	bl	43aac4 <argp_usage@@Base+0x8ec8>
  421504:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  421508:	add	x1, x1, #0xd3e
  42150c:	mov	w0, #0x6                   	// #6
  421510:	bl	404de0 <setlocale@plt>
  421514:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x17da0>
  421518:	add	x21, x21, #0x154
  42151c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  421520:	add	x1, x1, #0x198
  421524:	mov	x0, x21
  421528:	bl	4045b0 <bindtextdomain@plt>
  42152c:	mov	x0, x21
  421530:	bl	4048f0 <textdomain@plt>
  421534:	adrp	x10, 408000 <wcrtomb@plt+0x31e0>
  421538:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42153c:	mov	w9, #0x2                   	// #2
  421540:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421544:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  421548:	add	x10, x10, #0x948
  42154c:	mov	w1, #0x7                   	// #7
  421550:	mov	x0, xzr
  421554:	str	w9, [x8, #1008]
  421558:	str	wzr, [x21, #3456]
  42155c:	str	x10, [x23, #1008]
  421560:	bl	43abd4 <argp_usage@@Base+0x8fd8>
  421564:	bl	429904 <wcrtomb@plt+0x24ae4>
  421568:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42156c:	mov	w9, #0xa                   	// #10
  421570:	mov	w0, #0x50                  	// #80
  421574:	str	x9, [x8, #3128]
  421578:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  42157c:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  421580:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421584:	str	x0, [x22, #688]
  421588:	mov	w0, #0x11                  	// #17
  42158c:	mov	x1, xzr
  421590:	str	xzr, [x8, #848]
  421594:	bl	404440 <signal@plt>
  421598:	bl	43aab4 <argp_usage@@Base+0x8eb8>
  42159c:	mov	w0, w20
  4215a0:	mov	x1, x19
  4215a4:	bl	421744 <wcrtomb@plt+0x1c924>
  4215a8:	bl	41b324 <wcrtomb@plt+0x16504>
  4215ac:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  4215b0:	ldr	x8, [x19, #664]
  4215b4:	cbz	x8, 4215bc <wcrtomb@plt+0x1c79c>
  4215b8:	bl	405d14 <wcrtomb@plt+0xef4>
  4215bc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4215c0:	ldr	w8, [x8, #860]
  4215c4:	cmp	w8, #0x9
  4215c8:	b.hi	42163c <wcrtomb@plt+0x1c81c>  // b.pmore
  4215cc:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x14da0>
  4215d0:	add	x9, x9, #0x9b8
  4215d4:	adr	x10, 4215e4 <wcrtomb@plt+0x1c7c4>
  4215d8:	ldrb	w11, [x9, x8]
  4215dc:	add	x10, x10, x11, lsl #2
  4215e0:	br	x10
  4215e4:	bl	425c44 <wcrtomb@plt+0x20e24>
  4215e8:	b	42163c <wcrtomb@plt+0x1c81c>
  4215ec:	adrp	x0, 417000 <wcrtomb@plt+0x121e0>
  4215f0:	add	x0, x0, #0xb24
  4215f4:	bl	416e24 <wcrtomb@plt+0x12004>
  4215f8:	b	42163c <wcrtomb@plt+0x1c81c>
  4215fc:	bl	4090fc <wcrtomb@plt+0x42dc>
  421600:	adrp	x0, 409000 <wcrtomb@plt+0x41e0>
  421604:	add	x0, x0, #0x214
  421608:	bl	416e24 <wcrtomb@plt+0x12004>
  42160c:	b	42163c <wcrtomb@plt+0x1c81c>
  421610:	bl	40d448 <wcrtomb@plt+0x8628>
  421614:	b	42163c <wcrtomb@plt+0x1c81c>
  421618:	bl	40e58c <wcrtomb@plt+0x976c>
  42161c:	adrp	x0, 40e000 <wcrtomb@plt+0x91e0>
  421620:	add	x0, x0, #0x6e0
  421624:	bl	416e24 <wcrtomb@plt+0x12004>
  421628:	bl	40e904 <wcrtomb@plt+0x9ae4>
  42162c:	b	42163c <wcrtomb@plt+0x1c81c>
  421630:	bl	418e94 <wcrtomb@plt+0x14074>
  421634:	b	42163c <wcrtomb@plt+0x1c81c>
  421638:	bl	40b3f8 <wcrtomb@plt+0x65d8>
  42163c:	bl	408c50 <wcrtomb@plt+0x3e30>
  421640:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421644:	ldrb	w8, [x8, #697]
  421648:	cbz	w8, 421650 <wcrtomb@plt+0x1c830>
  42164c:	bl	40553c <wcrtomb@plt+0x71c>
  421650:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421654:	ldrb	w8, [x8, #3136]
  421658:	cmp	w8, #0x1
  42165c:	b.ne	421664 <wcrtomb@plt+0x1c844>  // b.any
  421660:	bl	40b76c <wcrtomb@plt+0x694c>
  421664:	ldr	x8, [x19, #664]
  421668:	cbz	x8, 421670 <wcrtomb@plt+0x1c850>
  42166c:	bl	405e08 <wcrtomb@plt+0xfe8>
  421670:	ldr	x0, [x22, #688]
  421674:	bl	4049d0 <free@plt>
  421678:	bl	426978 <wcrtomb@plt+0x21b58>
  42167c:	bl	41b380 <wcrtomb@plt+0x16560>
  421680:	ldr	w8, [x21, #3456]
  421684:	cmp	w8, #0x2
  421688:	b.ne	4216b0 <wcrtomb@plt+0x1c890>  // b.any
  42168c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  421690:	add	x1, x1, #0x1f7
  421694:	mov	w2, #0x5                   	// #5
  421698:	mov	x0, xzr
  42169c:	bl	404bf0 <dcgettext@plt>
  4216a0:	mov	x2, x0
  4216a4:	mov	w0, wzr
  4216a8:	mov	w1, wzr
  4216ac:	bl	4041f0 <error@plt>
  4216b0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4216b4:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4216b8:	ldr	x8, [x8, #3928]
  4216bc:	ldr	x9, [x9, #1144]
  4216c0:	cmp	x8, x9
  4216c4:	b.eq	4216f0 <wcrtomb@plt+0x1c8d0>  // b.none
  4216c8:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4216cc:	ldr	x0, [x19, #1136]
  4216d0:	bl	4042d0 <ferror_unlocked@plt>
  4216d4:	cbnz	w0, 4216e4 <wcrtomb@plt+0x1c8c4>
  4216d8:	ldr	x0, [x19, #1136]
  4216dc:	bl	404470 <fclose@plt>
  4216e0:	cbz	w0, 4216f4 <wcrtomb@plt+0x1c8d4>
  4216e4:	mov	w0, #0x2                   	// #2
  4216e8:	bl	422410 <wcrtomb@plt+0x1d5f0>
  4216ec:	b	4216f4 <wcrtomb@plt+0x1c8d4>
  4216f0:	bl	432484 <argp_usage@@Base+0x888>
  4216f4:	ldr	w0, [x21, #3456]
  4216f8:	ldp	x20, x19, [sp, #48]
  4216fc:	ldp	x22, x21, [sp, #32]
  421700:	ldr	x23, [sp, #16]
  421704:	ldp	x29, x30, [sp], #64
  421708:	ret
  42170c:	ldr	x8, [x23, #1008]
  421710:	cbz	x8, 421718 <wcrtomb@plt+0x1c8f8>
  421714:	blr	x8
  421718:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  42171c:	add	x1, x1, #0x1aa
  421720:	mov	w2, #0x5                   	// #5
  421724:	mov	x0, xzr
  421728:	bl	404bf0 <dcgettext@plt>
  42172c:	mov	x2, x0
  421730:	mov	w0, wzr
  421734:	mov	w1, wzr
  421738:	bl	4041f0 <error@plt>
  42173c:	mov	w0, #0x2                   	// #2
  421740:	bl	421198 <wcrtomb@plt+0x1c378>
  421744:	sub	sp, sp, #0x90
  421748:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  42174c:	add	x8, x8, #0x8d0
  421750:	ldp	q0, q1, [x8]
  421754:	stp	x20, x19, [sp, #128]
  421758:	mov	x20, x1
  42175c:	mov	w19, w0
  421760:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  421764:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421768:	add	x0, x0, #0x154
  42176c:	add	x1, x1, #0x190
  421770:	stp	x29, x30, [sp, #48]
  421774:	stp	x28, x27, [sp, #64]
  421778:	stp	x26, x25, [sp, #80]
  42177c:	stp	x24, x23, [sp, #96]
  421780:	stp	x22, x21, [sp, #112]
  421784:	add	x29, sp, #0x30
  421788:	stp	q0, q1, [sp]
  42178c:	bl	431ca4 <argp_usage@@Base+0xa8>
  421790:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421794:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  421798:	add	x21, x21, #0xc10
  42179c:	add	x0, x0, #0x424
  4217a0:	str	xzr, [x21]
  4217a4:	strh	wzr, [x21, #8]
  4217a8:	bl	404d30 <getenv@plt>
  4217ac:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  4217b0:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  4217b4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4217b8:	mov	w9, #0x14                  	// #20
  4217bc:	adrp	x11, 470000 <argp_program_version_hook@@Base+0x258>
  4217c0:	mov	w10, #0x2800                	// #10240
  4217c4:	stp	x0, xzr, [x21, #16]
  4217c8:	str	wzr, [x21, #32]
  4217cc:	str	wzr, [x22, #860]
  4217d0:	str	wzr, [x25, #816]
  4217d4:	str	w9, [x8, #748]
  4217d8:	str	x10, [x11, #920]
  4217dc:	bl	432818 <argp_usage@@Base+0xc1c>
  4217e0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4217e4:	str	x0, [x8, #64]
  4217e8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4217ec:	mov	w11, #0x8                   	// #8
  4217f0:	str	w11, [x8, #676]
  4217f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4217f8:	mov	w11, #0x1                   	// #1
  4217fc:	strb	w11, [x8, #756]
  421800:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421804:	str	w11, [x8, #608]
  421808:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42180c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  421810:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  421814:	strb	w11, [x8, #32]
  421818:	adrp	x11, 470000 <argp_program_version_hook@@Base+0x258>
  42181c:	add	x26, x26, #0x28
  421820:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  421824:	mov	x8, #0xffffffffffffffff    	// #-1
  421828:	add	x11, x11, #0x318
  42182c:	str	wzr, [x9, #916]
  421830:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  421834:	stp	x10, x8, [x11]
  421838:	stp	x10, x8, [x26]
  42183c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421840:	str	wzr, [x9, #88]
  421844:	mov	w9, #0xffffffff            	// #-1
  421848:	adrp	x11, 470000 <argp_program_version_hook@@Base+0x258>
  42184c:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  421850:	str	w9, [x8, #784]
  421854:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421858:	str	wzr, [x11, #520]
  42185c:	str	xzr, [x10, #584]
  421860:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  421864:	str	w9, [x8, #704]
  421868:	adrp	x11, 470000 <argp_program_version_hook@@Base+0x258>
  42186c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421870:	cmp	w19, #0x2
  421874:	str	xzr, [x10, #528]
  421878:	str	w9, [x11, #780]
  42187c:	str	w9, [x8, #72]
  421880:	b.lt	421980 <wcrtomb@plt+0x1cb60>  // b.tstop
  421884:	ldr	x0, [x20, #8]
  421888:	ldrb	w8, [x0]
  42188c:	cmp	w8, #0x2d
  421890:	b.eq	421980 <wcrtomb@plt+0x1cb60>  // b.none
  421894:	mov	w8, #0x2d                  	// #45
  421898:	sturb	w8, [x29, #-4]
  42189c:	sturb	wzr, [x29, #-2]
  4218a0:	bl	404190 <strlen@plt>
  4218a4:	add	w27, w0, w19
  4218a8:	sbfiz	x0, x27, #3, #32
  4218ac:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4218b0:	ldp	x8, x28, [x20]
  4218b4:	mov	x23, x0
  4218b8:	mov	x21, x0
  4218bc:	add	x24, x20, #0x10
  4218c0:	str	x8, [x23], #8
  4218c4:	ldrb	w8, [x28]
  4218c8:	add	x20, x20, w19, sxtw #3
  4218cc:	cbz	w8, 42195c <wcrtomb@plt+0x1cb3c>
  4218d0:	mov	x19, x23
  4218d4:	b	4218f0 <wcrtomb@plt+0x1cad0>
  4218d8:	ldr	x8, [x24], #8
  4218dc:	add	x23, x19, #0x10
  4218e0:	str	x8, [x19, #8]
  4218e4:	ldrb	w8, [x28, #1]!
  4218e8:	mov	x19, x23
  4218ec:	cbz	w8, 42195c <wcrtomb@plt+0x1cb3c>
  4218f0:	sub	x0, x29, #0x4
  4218f4:	sturb	w8, [x29, #-3]
  4218f8:	bl	43d39c <argp_usage@@Base+0xb7a0>
  4218fc:	str	x0, [x23], #8
  421900:	ldrb	w0, [x28]
  421904:	bl	4245e4 <wcrtomb@plt+0x1f7c4>
  421908:	cbz	x0, 4218e4 <wcrtomb@plt+0x1cac4>
  42190c:	ldr	x8, [x0, #16]
  421910:	cbz	x8, 4218e4 <wcrtomb@plt+0x1cac4>
  421914:	cmp	x24, x20
  421918:	b.cc	4218d8 <wcrtomb@plt+0x1cab8>  // b.lo, b.ul, b.last
  42191c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421920:	ldr	x8, [x8, #1008]
  421924:	cbz	x8, 42192c <wcrtomb@plt+0x1cb0c>
  421928:	blr	x8
  42192c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  421930:	add	x1, x1, #0x439
  421934:	mov	w2, #0x5                   	// #5
  421938:	mov	x0, xzr
  42193c:	bl	404bf0 <dcgettext@plt>
  421940:	ldrb	w3, [x28]
  421944:	mov	x2, x0
  421948:	mov	w0, wzr
  42194c:	mov	w1, wzr
  421950:	bl	4041f0 <error@plt>
  421954:	mov	w0, #0x2                   	// #2
  421958:	bl	421198 <wcrtomb@plt+0x1c378>
  42195c:	cmp	x24, x20
  421960:	sub	w19, w27, #0x1
  421964:	b.cs	421978 <wcrtomb@plt+0x1cb58>  // b.hs, b.nlast
  421968:	ldr	x8, [x24], #8
  42196c:	cmp	x24, x20
  421970:	str	x8, [x23], #8
  421974:	b.cc	421968 <wcrtomb@plt+0x1cb48>  // b.lo, b.ul, b.last
  421978:	mov	x20, x21
  42197c:	str	xzr, [x23]
  421980:	bl	42464c <wcrtomb@plt+0x1f82c>
  421984:	adrp	x5, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421988:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x2eda0>
  42198c:	add	x5, x5, #0xc08
  421990:	mov	x8, sp
  421994:	add	x0, x0, #0x198
  421998:	sub	x4, x29, #0x4
  42199c:	mov	w3, #0x8                   	// #8
  4219a0:	mov	w1, w19
  4219a4:	mov	x2, x20
  4219a8:	str	x8, [x5]
  4219ac:	bl	430b50 <argp_parse@@Base>
  4219b0:	cbnz	w0, 422168 <wcrtomb@plt+0x1d348>
  4219b4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4219b8:	ldrb	w8, [x8, #3096]
  4219bc:	cbz	w8, 4219e8 <wcrtomb@plt+0x1cbc8>
  4219c0:	ldr	w8, [x22, #860]
  4219c4:	cmp	w8, #0x3
  4219c8:	b.ne	4219dc <wcrtomb@plt+0x1cbbc>  // b.any
  4219cc:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  4219d0:	add	x0, x0, #0x4a4
  4219d4:	bl	423d3c <wcrtomb@plt+0x1ef1c>
  4219d8:	b	4219e8 <wcrtomb@plt+0x1cbc8>
  4219dc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4219e0:	mov	w9, #0xffffffff            	// #-1
  4219e4:	str	w9, [x8, #980]
  4219e8:	ldur	w8, [x29, #-4]
  4219ec:	cmp	w8, w19
  4219f0:	b.ge	421a10 <wcrtomb@plt+0x1cbf0>  // b.tcont
  4219f4:	ldr	x0, [x20, w8, sxtw #3]
  4219f8:	bl	41b284 <wcrtomb@plt+0x16464>
  4219fc:	ldur	w8, [x29, #-4]
  421a00:	add	w8, w8, #0x1
  421a04:	cmp	w8, w19
  421a08:	stur	w8, [x29, #-4]
  421a0c:	b.lt	4219f4 <wcrtomb@plt+0x1cbd4>  // b.tstop
  421a10:	ldr	w8, [x25, #816]
  421a14:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  421a18:	cbnz	w8, 421a34 <wcrtomb@plt+0x1cc14>
  421a1c:	ldrb	w8, [x28, #3097]
  421a20:	mov	w9, #0x4                   	// #4
  421a24:	cmp	w8, #0x0
  421a28:	mov	w8, #0x6                   	// #6
  421a2c:	csel	w8, w8, w9, eq  // eq = none
  421a30:	str	w8, [x25, #816]
  421a34:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  421a38:	ldr	x8, [x27, #648]
  421a3c:	ldr	w9, [x22, #860]
  421a40:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  421a44:	cmp	x8, #0x0
  421a48:	cset	w8, ne  // ne = any
  421a4c:	cmp	w9, #0x3
  421a50:	cset	w9, eq  // eq = none
  421a54:	and	w8, w8, w9
  421a58:	tbnz	w8, #0, 421a80 <wcrtomb@plt+0x1cc60>
  421a5c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421a60:	ldrb	w9, [x23, #76]
  421a64:	ldrb	w8, [x8, #33]
  421a68:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  421a6c:	ldrb	w10, [x10, #912]
  421a70:	orr	w8, w9, w8
  421a74:	orr	w8, w8, w10
  421a78:	tst	w8, #0xff
  421a7c:	b.eq	421a84 <wcrtomb@plt+0x1cc64>  // b.none
  421a80:	bl	424728 <wcrtomb@plt+0x1f908>
  421a84:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  421a88:	ldr	x8, [x20, #760]
  421a8c:	cbz	x8, 421ab8 <wcrtomb@plt+0x1cc98>
  421a90:	bl	41b270 <wcrtomb@plt+0x16450>
  421a94:	tbz	w0, #0, 4221a8 <wcrtomb@plt+0x1d388>
  421a98:	ldr	w19, [x22, #860]
  421a9c:	and	w8, w19, #0xfffffffc
  421aa0:	cmp	w8, #0x4
  421aa4:	b.eq	421ab8 <wcrtomb@plt+0x1cc98>  // b.none
  421aa8:	mov	w0, #0x1                   	// #1
  421aac:	bl	424790 <wcrtomb@plt+0x1f970>
  421ab0:	cbnz	w0, 422318 <wcrtomb@plt+0x1d4f8>
  421ab4:	str	xzr, [x20, #760]
  421ab8:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  421abc:	ldr	x8, [x24, #848]
  421ac0:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  421ac4:	cbnz	x8, 421afc <wcrtomb@plt+0x1ccdc>
  421ac8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  421acc:	mov	w8, #0x1                   	// #1
  421ad0:	add	x0, x0, #0x49c
  421ad4:	str	x8, [x24, #848]
  421ad8:	bl	404d30 <getenv@plt>
  421adc:	ldr	x8, [x21, #688]
  421ae0:	str	x0, [x8]
  421ae4:	ldr	x8, [x21, #688]
  421ae8:	ldr	x9, [x8]
  421aec:	cbnz	x9, 421afc <wcrtomb@plt+0x1ccdc>
  421af0:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  421af4:	add	x9, x9, #0xabd
  421af8:	str	x9, [x8]
  421afc:	ldr	x8, [x24, #848]
  421b00:	cmp	x8, #0x2
  421b04:	b.cc	421b10 <wcrtomb@plt+0x1ccf0>  // b.lo, b.ul, b.last
  421b08:	ldrb	w8, [x23, #76]
  421b0c:	cbz	w8, 422170 <wcrtomb@plt+0x1d350>
  421b10:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  421b14:	ldr	x8, [x20, #832]
  421b18:	cbz	x8, 421b64 <wcrtomb@plt+0x1cd44>
  421b1c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421b20:	ldr	x8, [x8, #48]
  421b24:	tbnz	x8, #63, 421b64 <wcrtomb@plt+0x1cd44>
  421b28:	mov	w0, #0x2                   	// #2
  421b2c:	bl	4247b4 <wcrtomb@plt+0x1f994>
  421b30:	mov	x19, x0
  421b34:	mov	w0, #0x3                   	// #3
  421b38:	bl	4247b4 <wcrtomb@plt+0x1f994>
  421b3c:	mov	x1, x0
  421b40:	mov	x0, x19
  421b44:	bl	4243ec <wcrtomb@plt+0x1f5cc>
  421b48:	cbnz	w0, 42226c <wcrtomb@plt+0x1d44c>
  421b4c:	ldr	w8, [x19]
  421b50:	cmp	w8, #0x1
  421b54:	b.ne	421b60 <wcrtomb@plt+0x1cd40>  // b.any
  421b58:	str	xzr, [x20, #832]
  421b5c:	b	421b64 <wcrtomb@plt+0x1cd44>
  421b60:	stp	xzr, xzr, [x26]
  421b64:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421b68:	ldr	w8, [x8, #780]
  421b6c:	cmn	w8, #0x1
  421b70:	b.eq	421bb0 <wcrtomb@plt+0x1cd90>  // b.none
  421b74:	ldr	x8, [x20, #832]
  421b78:	cbnz	x8, 421bb0 <wcrtomb@plt+0x1cd90>
  421b7c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421b80:	ldr	x8, [x8, #1008]
  421b84:	cbz	x8, 421b8c <wcrtomb@plt+0x1cd6c>
  421b88:	blr	x8
  421b8c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  421b90:	add	x1, x1, #0x4d4
  421b94:	mov	w2, #0x5                   	// #5
  421b98:	mov	x0, xzr
  421b9c:	bl	404bf0 <dcgettext@plt>
  421ba0:	mov	x2, x0
  421ba4:	mov	w0, wzr
  421ba8:	mov	w1, wzr
  421bac:	bl	4041f0 <error@plt>
  421bb0:	ldr	x0, [x27, #648]
  421bb4:	cbz	x0, 421be8 <wcrtomb@plt+0x1cdc8>
  421bb8:	ldr	w8, [x25, #816]
  421bbc:	orr	w8, w8, #0x4
  421bc0:	cmp	w8, #0x6
  421bc4:	b.ne	421be8 <wcrtomb@plt+0x1cdc8>  // b.any
  421bc8:	ldrb	w8, [x23, #76]
  421bcc:	mov	w9, #0x51                  	// #81
  421bd0:	cmp	w8, #0x0
  421bd4:	mov	w8, #0x63                  	// #99
  421bd8:	csel	x19, x8, x9, eq  // eq = none
  421bdc:	bl	404190 <strlen@plt>
  421be0:	cmp	x19, x0
  421be4:	b.cc	422330 <wcrtomb@plt+0x1d510>  // b.lo, b.ul, b.last
  421be8:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  421bec:	ldrb	w8, [x27, #842]
  421bf0:	adrp	x26, 470000 <argp_program_version_hook@@Base+0x258>
  421bf4:	cbz	w8, 421c28 <wcrtomb@plt+0x1ce08>
  421bf8:	ldrb	w8, [x23, #76]
  421bfc:	cbnz	w8, 4221c4 <wcrtomb@plt+0x1d3a4>
  421c00:	ldr	x8, [x26, #904]
  421c04:	cbnz	x8, 4221e0 <wcrtomb@plt+0x1d3c0>
  421c08:	ldr	w19, [x22, #860]
  421c0c:	mov	w8, #0x11e                 	// #286
  421c10:	lsr	x8, x8, x19
  421c14:	tbnz	w8, #0, 421c28 <wcrtomb@plt+0x1ce08>
  421c18:	mov	w0, #0x4                   	// #4
  421c1c:	bl	424790 <wcrtomb@plt+0x1f970>
  421c20:	cbnz	w0, 422390 <wcrtomb@plt+0x1d570>
  421c24:	strb	wzr, [x27, #842]
  421c28:	ldr	x8, [x26, #904]
  421c2c:	cbz	x8, 421c50 <wcrtomb@plt+0x1ce30>
  421c30:	ldrb	w8, [x23, #76]
  421c34:	cbnz	w8, 4221fc <wcrtomb@plt+0x1d3dc>
  421c38:	ldr	w8, [x22, #860]
  421c3c:	mov	w9, #0x112                 	// #274
  421c40:	lsr	x9, x9, x8
  421c44:	tbnz	w9, #0, 422218 <wcrtomb@plt+0x1d3f8>
  421c48:	cmp	w8, #0x2
  421c4c:	b.eq	422234 <wcrtomb@plt+0x1d414>  // b.none
  421c50:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421c54:	ldr	w8, [x8, #56]
  421c58:	cmp	w8, #0x2
  421c5c:	b.ne	421c6c <wcrtomb@plt+0x1ce4c>  // b.any
  421c60:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421c64:	ldr	x8, [x8, #800]
  421c68:	tbnz	x8, #63, 42218c <wcrtomb@plt+0x1d36c>
  421c6c:	ldrb	w9, [x28, #3097]
  421c70:	ldr	w8, [x25, #816]
  421c74:	cbz	w9, 421c90 <wcrtomb@plt+0x1ce70>
  421c78:	cmp	w8, #0x4
  421c7c:	b.eq	421c90 <wcrtomb@plt+0x1ce70>  // b.none
  421c80:	ldr	w9, [x22, #860]
  421c84:	sub	x9, x9, #0x5
  421c88:	cmp	x9, #0x3
  421c8c:	b.cs	422280 <wcrtomb@plt+0x1d460>  // b.hs, b.nlast
  421c90:	cmp	w8, #0x4
  421c94:	b.eq	421cb8 <wcrtomb@plt+0x1ce98>  // b.none
  421c98:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  421c9c:	ldr	w9, [x9, #896]
  421ca0:	cmp	w9, #0x1
  421ca4:	b.lt	421cb8 <wcrtomb@plt+0x1ce98>  // b.tstop
  421ca8:	ldr	w9, [x22, #860]
  421cac:	sub	x9, x9, #0x5
  421cb0:	cmp	x9, #0x3
  421cb4:	b.cs	42229c <wcrtomb@plt+0x1d47c>  // b.hs, b.nlast
  421cb8:	cmp	w8, #0x4
  421cbc:	b.eq	421ce0 <wcrtomb@plt+0x1cec0>  // b.none
  421cc0:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  421cc4:	ldr	w9, [x9, #984]
  421cc8:	cmp	w9, #0x1
  421ccc:	b.lt	421ce0 <wcrtomb@plt+0x1cec0>  // b.tstop
  421cd0:	ldr	w9, [x22, #860]
  421cd4:	sub	x9, x9, #0x5
  421cd8:	cmp	x9, #0x3
  421cdc:	b.cs	4222b8 <wcrtomb@plt+0x1d498>  // b.hs, b.nlast
  421ce0:	cmp	w8, #0x4
  421ce4:	b.eq	421d08 <wcrtomb@plt+0x1cee8>  // b.none
  421ce8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421cec:	ldr	w8, [x8, #656]
  421cf0:	cmp	w8, #0x1
  421cf4:	b.lt	421d08 <wcrtomb@plt+0x1cee8>  // b.tstop
  421cf8:	ldr	w8, [x22, #860]
  421cfc:	sub	x8, x8, #0x5
  421d00:	cmp	x8, #0x3
  421d04:	b.cs	4222d4 <wcrtomb@plt+0x1d4b4>  // b.hs, b.nlast
  421d08:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  421d0c:	ldrb	w8, [x23, #680]
  421d10:	cbz	w8, 421d34 <wcrtomb@plt+0x1cf14>
  421d14:	ldr	w19, [x22, #860]
  421d18:	sub	x8, x19, #0x5
  421d1c:	cmp	x8, #0x3
  421d20:	b.cc	421d34 <wcrtomb@plt+0x1cf14>  // b.lo, b.ul, b.last
  421d24:	mov	w0, #0x5                   	// #5
  421d28:	bl	424790 <wcrtomb@plt+0x1f970>
  421d2c:	cbnz	w0, 4223a8 <wcrtomb@plt+0x1d588>
  421d30:	strb	wzr, [x23, #680]
  421d34:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  421d38:	ldrb	w8, [x23, #640]
  421d3c:	cbz	w8, 421d60 <wcrtomb@plt+0x1cf40>
  421d40:	ldr	w19, [x22, #860]
  421d44:	sub	x8, x19, #0x5
  421d48:	cmp	x8, #0x3
  421d4c:	b.cc	421d60 <wcrtomb@plt+0x1cf40>  // b.lo, b.ul, b.last
  421d50:	mov	w0, #0x6                   	// #6
  421d54:	bl	424790 <wcrtomb@plt+0x1f970>
  421d58:	cbnz	w0, 4223c0 <wcrtomb@plt+0x1d5a0>
  421d5c:	strb	wzr, [x23, #640]
  421d60:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  421d64:	ldrb	w8, [x25, #843]
  421d68:	cbz	w8, 421df8 <wcrtomb@plt+0x1cfd8>
  421d6c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421d70:	ldrb	w8, [x8, #952]
  421d74:	cbz	w8, 421dbc <wcrtomb@plt+0x1cf9c>
  421d78:	mov	w0, #0x7                   	// #7
  421d7c:	bl	4247b4 <wcrtomb@plt+0x1f994>
  421d80:	mov	x19, x0
  421d84:	mov	w0, #0x8                   	// #8
  421d88:	bl	4247b4 <wcrtomb@plt+0x1f994>
  421d8c:	mov	x1, x0
  421d90:	mov	x0, x19
  421d94:	bl	4243ec <wcrtomb@plt+0x1f5cc>
  421d98:	cbnz	w0, 422304 <wcrtomb@plt+0x1d4e4>
  421d9c:	ldr	w8, [x19]
  421da0:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  421da4:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  421da8:	add	x9, x9, #0x34b
  421dac:	add	x10, x10, #0x3b8
  421db0:	cmp	w8, #0x1
  421db4:	csel	x8, x10, x9, eq  // eq = none
  421db8:	strb	wzr, [x8]
  421dbc:	ldrb	w8, [x25, #843]
  421dc0:	cbz	w8, 421df8 <wcrtomb@plt+0x1cfd8>
  421dc4:	adrp	x25, 470000 <argp_program_version_hook@@Base+0x258>
  421dc8:	ldr	x8, [x25, #568]
  421dcc:	cbnz	x8, 421df8 <wcrtomb@plt+0x1cfd8>
  421dd0:	ldr	x8, [x21, #688]
  421dd4:	ldr	x0, [x8]
  421dd8:	bl	432574 <argp_usage@@Base+0x978>
  421ddc:	mov	x19, x0
  421de0:	bl	41f910 <wcrtomb@plt+0x1aaf0>
  421de4:	str	x0, [x25, #568]
  421de8:	mov	x0, x19
  421dec:	bl	4049d0 <free@plt>
  421df0:	ldr	x8, [x25, #568]
  421df4:	cbz	x8, 4223d8 <wcrtomb@plt+0x1d5b8>
  421df8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421dfc:	ldrb	w8, [x8, #34]
  421e00:	cbz	w8, 421e10 <wcrtomb@plt+0x1cff0>
  421e04:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421e08:	mov	w9, #0x3                   	// #3
  421e0c:	str	w9, [x8, #752]
  421e10:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421e14:	ldrb	w8, [x8, #576]
  421e18:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  421e1c:	ldr	w10, [x10, #556]
  421e20:	mov	w9, #0x900                 	// #2304
  421e24:	movk	w9, #0x8, lsl #16
  421e28:	cmp	w8, #0x0
  421e2c:	orr	w8, w9, #0x8000
  421e30:	csel	w8, w8, w9, eq  // eq = none
  421e34:	cset	w9, eq  // eq = none
  421e38:	cmp	w10, #0x2
  421e3c:	cset	w10, eq  // eq = none
  421e40:	adrp	x11, 470000 <argp_program_version_hook@@Base+0x258>
  421e44:	bfi	w8, w10, #18, #1
  421e48:	str	w8, [x11, #708]
  421e4c:	ldr	w11, [x22, #860]
  421e50:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  421e54:	orr	w8, w8, #0x4000
  421e58:	str	w8, [x10, #700]
  421e5c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421e60:	lsl	w9, w9, #8
  421e64:	cmp	w11, #0x9
  421e68:	str	w9, [x8, #560]
  421e6c:	b.ne	421e88 <wcrtomb@plt+0x1d068>  // b.any
  421e70:	bl	41b270 <wcrtomb@plt+0x16450>
  421e74:	tbnz	w0, #0, 421ea0 <wcrtomb@plt+0x1d080>
  421e78:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421e7c:	ldr	w9, [x8, #644]
  421e80:	add	w9, w9, #0x1
  421e84:	b	421e9c <wcrtomb@plt+0x1d07c>
  421e88:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421e8c:	ldrb	w8, [x8, #553]
  421e90:	cbz	w8, 421ea0 <wcrtomb@plt+0x1d080>
  421e94:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421e98:	mov	w9, #0x2                   	// #2
  421e9c:	str	w9, [x8, #644]
  421ea0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421ea4:	ldr	d0, [x8, #632]
  421ea8:	fcmp	d0, #0.0
  421eac:	b.eq	421ec4 <wcrtomb@plt+0x1d0a4>  // b.none
  421eb0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  421eb4:	ldr	d1, [x8, #920]
  421eb8:	ucvtf	d1, d1
  421ebc:	fcmp	d0, d1
  421ec0:	b.mi	422250 <wcrtomb@plt+0x1d430>  // b.first
  421ec4:	ldrb	w8, [x23, #640]
  421ec8:	cbz	w8, 421f10 <wcrtomb@plt+0x1d0f0>
  421ecc:	ldr	x8, [x20, #832]
  421ed0:	cbz	x8, 421f10 <wcrtomb@plt+0x1d0f0>
  421ed4:	mov	w0, #0x6                   	// #6
  421ed8:	bl	4247b4 <wcrtomb@plt+0x1f994>
  421edc:	mov	x19, x0
  421ee0:	mov	w0, #0x2                   	// #2
  421ee4:	bl	4247b4 <wcrtomb@plt+0x1f994>
  421ee8:	mov	x1, x0
  421eec:	mov	x0, x19
  421ef0:	bl	4243ec <wcrtomb@plt+0x1f5cc>
  421ef4:	cbnz	w0, 4222f0 <wcrtomb@plt+0x1d4d0>
  421ef8:	ldr	w8, [x19]
  421efc:	cmp	w8, #0x1
  421f00:	b.ne	421f0c <wcrtomb@plt+0x1d0ec>  // b.any
  421f04:	str	xzr, [x20, #832]
  421f08:	b	421f10 <wcrtomb@plt+0x1d0f0>
  421f0c:	strb	wzr, [x23, #640]
  421f10:	ldr	w8, [x22, #860]
  421f14:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  421f18:	cmp	w8, #0x9
  421f1c:	b.hi	422044 <wcrtomb@plt+0x1d224>  // b.pmore
  421f20:	mov	w9, #0x1                   	// #1
  421f24:	lsl	w9, w9, w8
  421f28:	mov	w10, #0x2e0                 	// #736
  421f2c:	tst	w9, w10
  421f30:	b.ne	421f90 <wcrtomb@plt+0x1d170>  // b.any
  421f34:	mov	w10, #0x106                 	// #262
  421f38:	tst	w9, w10
  421f3c:	b.eq	421ff8 <wcrtomb@plt+0x1d1d8>  // b.none
  421f40:	ldr	x20, [x21, #688]
  421f44:	ldr	x8, [x24, #848]
  421f48:	str	x20, [x22, #736]
  421f4c:	add	x8, x20, x8, lsl #3
  421f50:	cmp	x8, x20
  421f54:	b.ls	422044 <wcrtomb@plt+0x1d224>  // b.plast
  421f58:	ldr	x8, [x21, #688]
  421f5c:	ldr	x9, [x24, #848]
  421f60:	adrp	x19, 459000 <_obstack_memory_used@@Base+0x1ada0>
  421f64:	add	x19, x19, #0xabd
  421f68:	add	x23, x8, x9, lsl #3
  421f6c:	ldr	x0, [x20]
  421f70:	mov	x1, x19
  421f74:	bl	404920 <strcmp@plt>
  421f78:	cbz	w0, 42212c <wcrtomb@plt+0x1d30c>
  421f7c:	add	x20, x20, #0x8
  421f80:	cmp	x20, x23
  421f84:	str	x20, [x22, #736]
  421f88:	b.cc	421f6c <wcrtomb@plt+0x1d14c>  // b.lo, b.ul, b.last
  421f8c:	b	422044 <wcrtomb@plt+0x1d224>
  421f90:	ldr	x8, [x21, #688]
  421f94:	ldr	x9, [x24, #848]
  421f98:	str	x8, [x22, #736]
  421f9c:	add	x9, x8, x9, lsl #3
  421fa0:	cmp	x9, x8
  421fa4:	b.ls	422044 <wcrtomb@plt+0x1d224>  // b.plast
  421fa8:	adrp	x19, 459000 <_obstack_memory_used@@Base+0x1ada0>
  421fac:	adrp	x20, 456000 <_obstack_memory_used@@Base+0x17da0>
  421fb0:	add	x19, x19, #0xabd
  421fb4:	add	x20, x20, #0x7f7
  421fb8:	b	421fdc <wcrtomb@plt+0x1d1bc>
  421fbc:	ldr	x8, [x22, #736]
  421fc0:	ldr	x9, [x21, #688]
  421fc4:	ldr	x10, [x24, #848]
  421fc8:	add	x8, x8, #0x8
  421fcc:	str	x8, [x22, #736]
  421fd0:	add	x9, x9, x10, lsl #3
  421fd4:	cmp	x8, x9
  421fd8:	b.cs	422044 <wcrtomb@plt+0x1d224>  // b.hs, b.nlast
  421fdc:	ldr	x0, [x8]
  421fe0:	mov	x1, x19
  421fe4:	bl	404920 <strcmp@plt>
  421fe8:	cbnz	w0, 421fbc <wcrtomb@plt+0x1d19c>
  421fec:	mov	x0, x20
  421ff0:	bl	421124 <wcrtomb@plt+0x1c304>
  421ff4:	b	421fbc <wcrtomb@plt+0x1d19c>
  421ff8:	cmp	w8, #0x3
  421ffc:	b.ne	422044 <wcrtomb@plt+0x1d224>  // b.any
  422000:	bl	41b270 <wcrtomb@plt+0x16450>
  422004:	tbz	w0, #0, 4223f4 <wcrtomb@plt+0x1d5d4>
  422008:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42200c:	ldr	w8, [x8, #3120]
  422010:	cbz	w8, 422044 <wcrtomb@plt+0x1d224>
  422014:	ldr	x8, [x24, #848]
  422018:	cbz	x8, 422044 <wcrtomb@plt+0x1d224>
  42201c:	ldr	x8, [x21, #688]
  422020:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  422024:	add	x1, x1, #0xabd
  422028:	ldr	x19, [x8]
  42202c:	mov	x0, x19
  422030:	bl	404920 <strcmp@plt>
  422034:	cbz	w0, 422044 <wcrtomb@plt+0x1d224>
  422038:	ldr	x1, [x26, #904]
  42203c:	mov	x0, x19
  422040:	bl	41f8c0 <wcrtomb@plt+0x1aaa0>
  422044:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  422048:	ldr	x0, [x19, #960]
  42204c:	cbz	x0, 422070 <wcrtomb@plt+0x1d250>
  422050:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  422054:	add	x1, x1, #0x120
  422058:	bl	4044c0 <fopen@plt>
  42205c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422060:	str	x0, [x8, #3928]
  422064:	cbnz	x0, 42209c <wcrtomb@plt+0x1d27c>
  422068:	ldr	x0, [x19, #960]
  42206c:	bl	428180 <wcrtomb@plt+0x23360>
  422070:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422074:	ldrb	w8, [x8, #625]
  422078:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42207c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422080:	add	x9, x9, #0x470
  422084:	add	x10, x10, #0x478
  422088:	cmp	w8, #0x0
  42208c:	csel	x8, x10, x9, eq  // eq = none
  422090:	ldr	x8, [x8]
  422094:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422098:	str	x8, [x9, #3928]
  42209c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4220a0:	ldr	x8, [x21, #688]
  4220a4:	ldr	x0, [x9, #3104]
  4220a8:	str	x8, [x22, #736]
  4220ac:	cbz	x0, 4220bc <wcrtomb@plt+0x1d29c>
  4220b0:	bl	43d39c <argp_usage@@Base+0xb7a0>
  4220b4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4220b8:	str	x0, [x8, #3520]
  4220bc:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  4220c0:	ldrb	w8, [x19, #757]
  4220c4:	cbz	w8, 422104 <wcrtomb@plt+0x1d2e4>
  4220c8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4220cc:	ldr	x1, [x8, #3112]
  4220d0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4220d4:	add	x0, x0, #0x826
  4220d8:	bl	432430 <argp_usage@@Base+0x834>
  4220dc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4220e0:	str	w0, [x8, #728]
  4220e4:	cbz	w0, 422100 <wcrtomb@plt+0x1d2e0>
  4220e8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4220ec:	ldrb	w8, [x8, #625]
  4220f0:	cbnz	w8, 422100 <wcrtomb@plt+0x1d2e0>
  4220f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4220f8:	ldr	x8, [x8, #616]
  4220fc:	cbz	x8, 422104 <wcrtomb@plt+0x1d2e4>
  422100:	strb	wzr, [x19, #757]
  422104:	bl	4088c8 <wcrtomb@plt+0x3aa8>
  422108:	bl	4247c4 <wcrtomb@plt+0x1f9a4>
  42210c:	ldp	x20, x19, [sp, #128]
  422110:	ldp	x22, x21, [sp, #112]
  422114:	ldp	x24, x23, [sp, #96]
  422118:	ldp	x26, x25, [sp, #80]
  42211c:	ldp	x28, x27, [sp, #64]
  422120:	ldp	x29, x30, [sp, #48]
  422124:	add	sp, sp, #0x90
  422128:	ret
  42212c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422130:	ldr	x8, [x8, #1008]
  422134:	cbz	x8, 42213c <wcrtomb@plt+0x1d31c>
  422138:	blr	x8
  42213c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422140:	add	x1, x1, #0x7fa
  422144:	mov	w2, #0x5                   	// #5
  422148:	mov	x0, xzr
  42214c:	bl	404bf0 <dcgettext@plt>
  422150:	mov	x2, x0
  422154:	mov	w0, wzr
  422158:	mov	w1, wzr
  42215c:	bl	4041f0 <error@plt>
  422160:	mov	w0, #0x2                   	// #2
  422164:	bl	421198 <wcrtomb@plt+0x1c378>
  422168:	mov	w0, #0x2                   	// #2
  42216c:	bl	4041c0 <exit@plt>
  422170:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422174:	ldr	x8, [x8, #1008]
  422178:	cbz	x8, 422180 <wcrtomb@plt+0x1d360>
  42217c:	blr	x8
  422180:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422184:	add	x1, x1, #0x4a1
  422188:	b	422144 <wcrtomb@plt+0x1d324>
  42218c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422190:	ldr	x8, [x8, #1008]
  422194:	cbz	x8, 42219c <wcrtomb@plt+0x1d37c>
  422198:	blr	x8
  42219c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4221a0:	add	x1, x1, #0x60d
  4221a4:	b	422144 <wcrtomb@plt+0x1d324>
  4221a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4221ac:	ldr	x8, [x8, #1008]
  4221b0:	cbz	x8, 4221b8 <wcrtomb@plt+0x1d398>
  4221b4:	blr	x8
  4221b8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4221bc:	add	x1, x1, #0x45f
  4221c0:	b	422144 <wcrtomb@plt+0x1d324>
  4221c4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4221c8:	ldr	x8, [x8, #1008]
  4221cc:	cbz	x8, 4221d4 <wcrtomb@plt+0x1d3b4>
  4221d0:	blr	x8
  4221d4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4221d8:	add	x1, x1, #0x56b
  4221dc:	b	422144 <wcrtomb@plt+0x1d324>
  4221e0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4221e4:	ldr	x8, [x8, #1008]
  4221e8:	cbz	x8, 4221f0 <wcrtomb@plt+0x1d3d0>
  4221ec:	blr	x8
  4221f0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4221f4:	add	x1, x1, #0x58f
  4221f8:	b	422144 <wcrtomb@plt+0x1d324>
  4221fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422200:	ldr	x8, [x8, #1008]
  422204:	cbz	x8, 42220c <wcrtomb@plt+0x1d3ec>
  422208:	blr	x8
  42220c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422210:	add	x1, x1, #0x5ba
  422214:	b	422144 <wcrtomb@plt+0x1d324>
  422218:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42221c:	ldr	x8, [x8, #1008]
  422220:	cbz	x8, 422228 <wcrtomb@plt+0x1d408>
  422224:	blr	x8
  422228:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  42222c:	add	x1, x1, #0x84f
  422230:	b	422144 <wcrtomb@plt+0x1d324>
  422234:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422238:	ldr	x8, [x8, #1008]
  42223c:	cbz	x8, 422244 <wcrtomb@plt+0x1d424>
  422240:	blr	x8
  422244:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422248:	add	x1, x1, #0x5e6
  42224c:	b	422144 <wcrtomb@plt+0x1d324>
  422250:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422254:	ldr	x8, [x8, #1008]
  422258:	cbz	x8, 422260 <wcrtomb@plt+0x1d440>
  42225c:	blr	x8
  422260:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422264:	add	x1, x1, #0x78b
  422268:	b	422144 <wcrtomb@plt+0x1d324>
  42226c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  422270:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422274:	add	x0, x0, #0x96a
  422278:	add	x1, x1, #0x4cc
  42227c:	bl	424440 <wcrtomb@plt+0x1f620>
  422280:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422284:	ldr	x8, [x8, #1008]
  422288:	cbz	x8, 422290 <wcrtomb@plt+0x1d470>
  42228c:	blr	x8
  422290:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422294:	add	x1, x1, #0x640
  422298:	b	422144 <wcrtomb@plt+0x1d324>
  42229c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4222a0:	ldr	x8, [x8, #1008]
  4222a4:	cbz	x8, 4222ac <wcrtomb@plt+0x1d48c>
  4222a8:	blr	x8
  4222ac:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4222b0:	add	x1, x1, #0x670
  4222b4:	b	422144 <wcrtomb@plt+0x1d324>
  4222b8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4222bc:	ldr	x8, [x8, #1008]
  4222c0:	cbz	x8, 4222c8 <wcrtomb@plt+0x1d4a8>
  4222c4:	blr	x8
  4222c8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4222cc:	add	x1, x1, #0x69a
  4222d0:	b	422144 <wcrtomb@plt+0x1d324>
  4222d4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4222d8:	ldr	x8, [x8, #1008]
  4222dc:	cbz	x8, 4222e4 <wcrtomb@plt+0x1d4c4>
  4222e0:	blr	x8
  4222e4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4222e8:	add	x1, x1, #0x6c7
  4222ec:	b	422144 <wcrtomb@plt+0x1d324>
  4222f0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4222f4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x13da0>
  4222f8:	add	x0, x0, #0x7b9
  4222fc:	add	x1, x1, #0x96a
  422300:	bl	424440 <wcrtomb@plt+0x1f620>
  422304:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  422308:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  42230c:	add	x0, x0, #0x710
  422310:	add	x1, x1, #0x720
  422314:	bl	424440 <wcrtomb@plt+0x1f620>
  422318:	mov	w0, w19
  42231c:	bl	42136c <wcrtomb@plt+0x1c54c>
  422320:	mov	x1, x0
  422324:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  422328:	add	x0, x0, #0x48f
  42232c:	bl	424440 <wcrtomb@plt+0x1f620>
  422330:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422334:	ldr	x8, [x8, #1008]
  422338:	cbz	x8, 422340 <wcrtomb@plt+0x1d520>
  42233c:	blr	x8
  422340:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422344:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  422348:	add	x1, x1, #0x508
  42234c:	add	x2, x2, #0x539
  422350:	mov	w4, #0x5                   	// #5
  422354:	mov	x0, xzr
  422358:	mov	x3, x19
  42235c:	bl	404af0 <dcngettext@plt>
  422360:	ldr	x8, [x27, #648]
  422364:	mov	x20, x0
  422368:	mov	x0, x8
  42236c:	bl	43beac <argp_usage@@Base+0xa2b0>
  422370:	mov	x3, x0
  422374:	mov	w0, wzr
  422378:	mov	w1, wzr
  42237c:	mov	x2, x20
  422380:	mov	x4, x19
  422384:	bl	4041f0 <error@plt>
  422388:	mov	w0, #0x2                   	// #2
  42238c:	bl	421198 <wcrtomb@plt+0x1c378>
  422390:	mov	w0, w19
  422394:	bl	42136c <wcrtomb@plt+0x1c54c>
  422398:	mov	x1, x0
  42239c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4223a0:	add	x0, x0, #0x5b1
  4223a4:	bl	424440 <wcrtomb@plt+0x1f620>
  4223a8:	mov	w0, w19
  4223ac:	bl	42136c <wcrtomb@plt+0x1c54c>
  4223b0:	mov	x1, x0
  4223b4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4223b8:	add	x0, x0, #0x6f3
  4223bc:	bl	424440 <wcrtomb@plt+0x1f620>
  4223c0:	mov	w0, w19
  4223c4:	bl	42136c <wcrtomb@plt+0x1c54c>
  4223c8:	mov	x1, x0
  4223cc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4223d0:	add	x0, x0, #0x703
  4223d4:	bl	424440 <wcrtomb@plt+0x1f620>
  4223d8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4223dc:	ldr	x8, [x8, #1008]
  4223e0:	cbz	x8, 4223e8 <wcrtomb@plt+0x1d5c8>
  4223e4:	blr	x8
  4223e8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4223ec:	add	x1, x1, #0x731
  4223f0:	b	422144 <wcrtomb@plt+0x1d324>
  4223f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4223f8:	ldr	x8, [x8, #1008]
  4223fc:	cbz	x8, 422404 <wcrtomb@plt+0x1d5e4>
  422400:	blr	x8
  422404:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422408:	add	x1, x1, #0x7ca
  42240c:	b	422144 <wcrtomb@plt+0x1d324>
  422410:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422414:	ldr	w9, [x8, #3456]
  422418:	cmp	w9, w0
  42241c:	b.ge	422424 <wcrtomb@plt+0x1d604>  // b.tcont
  422420:	str	w0, [x8, #3456]
  422424:	ret
  422428:	movi	v0.2d, #0x0
  42242c:	str	xzr, [x0, #416]
  422430:	stp	q0, q0, [x0, #384]
  422434:	stp	q0, q0, [x0, #352]
  422438:	stp	q0, q0, [x0, #320]
  42243c:	stp	q0, q0, [x0, #288]
  422440:	stp	q0, q0, [x0, #256]
  422444:	stp	q0, q0, [x0, #224]
  422448:	stp	q0, q0, [x0, #192]
  42244c:	stp	q0, q0, [x0, #160]
  422450:	stp	q0, q0, [x0, #128]
  422454:	stp	q0, q0, [x0, #96]
  422458:	stp	q0, q0, [x0, #64]
  42245c:	stp	q0, q0, [x0, #32]
  422460:	stp	q0, q0, [x0]
  422464:	ret
  422468:	stp	x29, x30, [sp, #-32]!
  42246c:	str	x19, [sp, #16]
  422470:	mov	x19, x0
  422474:	ldr	x0, [x0, #400]
  422478:	mov	x29, sp
  42247c:	cbz	x0, 422488 <wcrtomb@plt+0x1d668>
  422480:	bl	404790 <closedir@plt>
  422484:	b	4224a0 <wcrtomb@plt+0x1d680>
  422488:	ldr	w0, [x19, #408]
  42248c:	cmp	w0, #0x1
  422490:	b.lt	42249c <wcrtomb@plt+0x1d67c>  // b.tstop
  422494:	bl	4047c0 <close@plt>
  422498:	b	4224a0 <wcrtomb@plt+0x1d680>
  42249c:	mov	w0, wzr
  4224a0:	str	xzr, [x19, #400]
  4224a4:	str	wzr, [x19, #408]
  4224a8:	cbz	w0, 4224bc <wcrtomb@plt+0x1d69c>
  4224ac:	ldr	x0, [x19]
  4224b0:	bl	41abfc <wcrtomb@plt+0x15ddc>
  4224b4:	mov	w0, wzr
  4224b8:	b	4224c0 <wcrtomb@plt+0x1d6a0>
  4224bc:	mov	w0, #0x1                   	// #1
  4224c0:	ldr	x19, [sp, #16]
  4224c4:	ldp	x29, x30, [sp], #32
  4224c8:	ret
  4224cc:	stp	x29, x30, [sp, #-32]!
  4224d0:	str	x19, [sp, #16]
  4224d4:	mov	x29, sp
  4224d8:	mov	x19, x0
  4224dc:	bl	422468 <wcrtomb@plt+0x1d648>
  4224e0:	ldp	x1, x0, [x19, #328]
  4224e4:	bl	411a44 <wcrtomb@plt+0xcc24>
  4224e8:	ldr	x0, [x19]
  4224ec:	bl	4049d0 <free@plt>
  4224f0:	ldr	x0, [x19, #8]
  4224f4:	bl	4049d0 <free@plt>
  4224f8:	ldr	x0, [x19, #24]
  4224fc:	bl	4049d0 <free@plt>
  422500:	ldr	x0, [x19, #32]
  422504:	bl	4049d0 <free@plt>
  422508:	ldr	x0, [x19, #40]
  42250c:	bl	4049d0 <free@plt>
  422510:	ldr	x0, [x19, #48]
  422514:	bl	4049d0 <free@plt>
  422518:	ldr	x0, [x19, #56]
  42251c:	bl	4049d0 <free@plt>
  422520:	ldr	x0, [x19, #72]
  422524:	bl	4049d0 <free@plt>
  422528:	ldr	x0, [x19, #304]
  42252c:	bl	4049d0 <free@plt>
  422530:	ldr	x0, [x19, #384]
  422534:	bl	4049d0 <free@plt>
  422538:	add	x0, x19, #0x158
  42253c:	bl	4117cc <wcrtomb@plt+0xc9ac>
  422540:	mov	x0, x19
  422544:	bl	40e0d0 <wcrtomb@plt+0x92b0>
  422548:	movi	v0.2d, #0x0
  42254c:	stp	q0, q0, [x19, #384]
  422550:	stp	q0, q0, [x19, #352]
  422554:	stp	q0, q0, [x19, #320]
  422558:	stp	q0, q0, [x19, #288]
  42255c:	stp	q0, q0, [x19, #256]
  422560:	stp	q0, q0, [x19, #224]
  422564:	stp	q0, q0, [x19, #192]
  422568:	stp	q0, q0, [x19, #160]
  42256c:	stp	q0, q0, [x19, #128]
  422570:	stp	q0, q0, [x19, #96]
  422574:	stp	q0, q0, [x19, #64]
  422578:	stp	q0, q0, [x19, #32]
  42257c:	stp	q0, q0, [x19]
  422580:	str	xzr, [x19, #416]
  422584:	ldr	x19, [sp, #16]
  422588:	ldp	x29, x30, [sp], #32
  42258c:	ret
  422590:	stp	x29, x30, [sp, #-16]!
  422594:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422598:	ldr	w8, [x8, #4048]
  42259c:	mov	x29, sp
  4225a0:	cmp	w8, #0x4
  4225a4:	csel	x3, x3, xzr, eq  // eq = none
  4225a8:	csel	x1, x1, xzr, eq  // eq = none
  4225ac:	bl	43cd0c <argp_usage@@Base+0xb110>
  4225b0:	ldp	x29, x30, [sp], #16
  4225b4:	ret
  4225b8:	sub	sp, sp, #0x40
  4225bc:	stp	x29, x30, [sp, #16]
  4225c0:	stp	x20, x19, [sp, #48]
  4225c4:	ldr	x20, [x2, #40]
  4225c8:	str	x21, [sp, #32]
  4225cc:	mov	w21, w0
  4225d0:	cmp	w0, #0x14f
  4225d4:	mov	w0, #0x7                   	// #7
  4225d8:	add	x29, sp, #0x10
  4225dc:	b.hi	4232ec <wcrtomb@plt+0x1e4cc>  // b.pmore
  4225e0:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x14da0>
  4225e4:	mov	w8, w21
  4225e8:	add	x9, x9, #0x9c2
  4225ec:	adr	x10, 422600 <wcrtomb@plt+0x1d7e0>
  4225f0:	ldrh	w11, [x9, x8, lsl #1]
  4225f4:	add	x10, x10, x11, lsl #2
  4225f8:	mov	x19, x1
  4225fc:	br	x10
  422600:	mov	w0, #0x1                   	// #1
  422604:	bl	4243b4 <wcrtomb@plt+0x1f594>
  422608:	cmp	w21, #0x14e
  42260c:	cset	w1, eq  // eq = none
  422610:	mov	x0, x19
  422614:	bl	4268e0 <wcrtomb@plt+0x21ac0>
  422618:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  42261c:	mov	x0, x19
  422620:	bl	4248d8 <wcrtomb@plt+0x1fab8>
  422624:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422628:	mov	x0, x20
  42262c:	mov	x1, x19
  422630:	bl	423fe0 <wcrtomb@plt+0x1f1c0>
  422634:	mov	w8, #0x1                   	// #1
  422638:	mov	x19, x0
  42263c:	strb	w8, [x20, #17]
  422640:	bl	411030 <wcrtomb@plt+0xc210>
  422644:	mov	x0, x19
  422648:	bl	4049d0 <free@plt>
  42264c:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422650:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422654:	ldr	x5, [x8, #960]
  422658:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42265c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  422660:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x15da0>
  422664:	add	x20, x20, #0x180
  422668:	add	x0, x0, #0xfa
  42266c:	add	x2, x2, #0x28
  422670:	mov	w4, #0x4                   	// #4
  422674:	mov	x1, x19
  422678:	mov	x3, x20
  42267c:	bl	42e4c8 <wcrtomb@plt+0x296a8>
  422680:	mov	x8, x0
  422684:	ldr	w8, [x20, x8, lsl #2]
  422688:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  42268c:	mov	w0, wzr
  422690:	str	w8, [x9, #520]
  422694:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422698:	mov	x0, x19
  42269c:	bl	423f38 <wcrtomb@plt+0x1f118>
  4226a0:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4226a4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  4226a8:	add	x0, x0, #0x4a4
  4226ac:	bl	423d3c <wcrtomb@plt+0x1ef1c>
  4226b0:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4226b4:	ldrb	w1, [x19]
  4226b8:	cbz	w1, 4232d4 <wcrtomb@plt+0x1e4b4>
  4226bc:	add	x19, x19, #0x1
  4226c0:	mov	x0, xzr
  4226c4:	mov	w2, wzr
  4226c8:	bl	43abec <argp_usage@@Base+0x8ff0>
  4226cc:	ldrb	w1, [x19], #1
  4226d0:	mov	w0, wzr
  4226d4:	cbnz	w1, 4226c0 <wcrtomb@plt+0x1d8a0>
  4226d8:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4226dc:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  4226e0:	add	x1, x1, #0x248
  4226e4:	mov	x0, x19
  4226e8:	bl	423dd4 <wcrtomb@plt+0x1efb4>
  4226ec:	cmn	x0, #0x1
  4226f0:	b.eq	423344 <wcrtomb@plt+0x1e524>  // b.none
  4226f4:	mov	x8, x0
  4226f8:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4226fc:	mov	w0, wzr
  422700:	str	w8, [x9, #784]
  422704:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422708:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42270c:	mov	w9, #0x1                   	// #1
  422710:	mov	w0, wzr
  422714:	strb	w9, [x8, #840]
  422718:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  42271c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422720:	ldr	x9, [x8, #616]
  422724:	cbnz	x9, 4234b8 <wcrtomb@plt+0x1e698>
  422728:	mov	w0, wzr
  42272c:	str	x19, [x8, #616]
  422730:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422734:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x16da0>
  422738:	add	x4, x4, #0xf9b
  42273c:	add	x3, x29, #0x18
  422740:	mov	w2, #0xa                   	// #10
  422744:	mov	x0, x19
  422748:	mov	x1, xzr
  42274c:	bl	43d428 <argp_usage@@Base+0xb82c>
  422750:	cbnz	w0, 4234f4 <wcrtomb@plt+0x1e6d4>
  422754:	ldr	x8, [x29, #24]
  422758:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  42275c:	tst	x8, #0x1ff
  422760:	str	x8, [x9, #920]
  422764:	b.ne	42351c <wcrtomb@plt+0x1e6fc>  // b.any
  422768:	lsr	x8, x8, #9
  42276c:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422770:	mov	w0, wzr
  422774:	str	w8, [x9, #748]
  422778:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  42277c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x17da0>
  422780:	add	x4, x4, #0xd3e
  422784:	add	x3, x29, #0x18
  422788:	mov	w2, #0xa                   	// #10
  42278c:	mov	x0, x19
  422790:	mov	x1, xzr
  422794:	bl	43d428 <argp_usage@@Base+0xb82c>
  422798:	cbnz	w0, 42355c <wcrtomb@plt+0x1e73c>
  42279c:	ldr	x8, [x29, #24]
  4227a0:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4227a4:	str	x8, [x9, #880]
  4227a8:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4227ac:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4227b0:	mov	w9, #0x1                   	// #1
  4227b4:	mov	w0, wzr
  4227b8:	strb	w9, [x8, #85]
  4227bc:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4227c0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4227c4:	mov	w9, #0x1                   	// #1
  4227c8:	mov	w0, wzr
  4227cc:	strb	w9, [x8, #672]
  4227d0:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4227d4:	mov	w0, #0x1                   	// #1
  4227d8:	bl	4243b4 <wcrtomb@plt+0x1f594>
  4227dc:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4227e0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4227e4:	mov	w0, wzr
  4227e8:	strb	wzr, [x8, #577]
  4227ec:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4227f0:	ldr	x1, [x20]
  4227f4:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  4227f8:	add	x0, x0, #0x324
  4227fc:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  422800:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422804:	cbz	x19, 42336c <wcrtomb@plt+0x1e54c>
  422808:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42280c:	ldr	x5, [x8, #960]
  422810:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x15da0>
  422814:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  422818:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x15da0>
  42281c:	add	x20, x20, #0x8
  422820:	add	x0, x0, #0x43
  422824:	add	x2, x2, #0x10
  422828:	mov	w4, #0x4                   	// #4
  42282c:	mov	x1, x19
  422830:	mov	x3, x20
  422834:	bl	42e4c8 <wcrtomb@plt+0x296a8>
  422838:	ldr	w8, [x20, x0, lsl #2]
  42283c:	b	423370 <wcrtomb@plt+0x1e550>
  422840:	cbz	x19, 423380 <wcrtomb@plt+0x1e560>
  422844:	ldrb	w8, [x19]
  422848:	cmp	w8, #0x2e
  42284c:	b.ne	422860 <wcrtomb@plt+0x1da40>  // b.any
  422850:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  422854:	add	x0, x0, #0x232
  422858:	bl	4085e8 <wcrtomb@plt+0x37c8>
  42285c:	add	x19, x19, #0x1
  422860:	add	x1, x29, #0x18
  422864:	mov	x0, x19
  422868:	mov	w2, wzr
  42286c:	bl	404180 <strtoul@plt>
  422870:	ldr	x8, [x29, #24]
  422874:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422878:	str	w0, [x9, #856]
  42287c:	ldrb	w8, [x8]
  422880:	cbz	w8, 4232d4 <wcrtomb@plt+0x1e4b4>
  422884:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422888:	ldr	x8, [x8, #1008]
  42288c:	cbz	x8, 422894 <wcrtomb@plt+0x1da74>
  422890:	blr	x8
  422894:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422898:	add	x1, x1, #0x54
  42289c:	b	42359c <wcrtomb@plt+0x1e77c>
  4228a0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4228a4:	mov	w9, #0x1                   	// #1
  4228a8:	mov	w0, wzr
  4228ac:	strb	w9, [x8, #757]
  4228b0:	cbz	x19, 4232d8 <wcrtomb@plt+0x1e4b8>
  4228b4:	str	x19, [x20, #32]
  4228b8:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4228bc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4228c0:	mov	w0, wzr
  4228c4:	str	wzr, [x8, #72]
  4228c8:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4228cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4228d0:	mov	w9, #0xffffffff            	// #-1
  4228d4:	b	423118 <wcrtomb@plt+0x1e2f8>
  4228d8:	ldr	x1, [x20]
  4228dc:	mov	w0, #0x2                   	// #2
  4228e0:	bl	423b60 <wcrtomb@plt+0x1ed40>
  4228e4:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4228e8:	mov	w0, #0x6                   	// #6
  4228ec:	bl	4239cc <wcrtomb@plt+0x1ebac>
  4228f0:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4228f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4228f8:	mov	w9, #0x1                   	// #1
  4228fc:	mov	w0, wzr
  422900:	strb	w9, [x8, #1016]
  422904:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422908:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42290c:	mov	w9, #0x1                   	// #1
  422910:	mov	w0, wzr
  422914:	strb	w9, [x8, #552]
  422918:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  42291c:	mov	w0, #0x5                   	// #5
  422920:	bl	4239cc <wcrtomb@plt+0x1ebac>
  422924:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422928:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42292c:	mov	w9, #0x1                   	// #1
  422930:	b	42321c <wcrtomb@plt+0x1e3fc>
  422934:	ldr	x1, [x20]
  422938:	mov	w0, #0x1                   	// #1
  42293c:	bl	423b60 <wcrtomb@plt+0x1ed40>
  422940:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422944:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  422948:	add	x0, x0, #0x54c
  42294c:	bl	423d3c <wcrtomb@plt+0x1ef1c>
  422950:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422954:	mov	w9, #0x1                   	// #1
  422958:	b	4231d4 <wcrtomb@plt+0x1e3b4>
  42295c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422960:	mov	w9, #0x1                   	// #1
  422964:	mov	w0, wzr
  422968:	strb	w9, [x8, #696]
  42296c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422970:	ldr	x1, [x20]
  422974:	mov	w0, #0x4                   	// #4
  422978:	bl	423a30 <wcrtomb@plt+0x1ec10>
  42297c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422980:	mov	w9, #0x1                   	// #1
  422984:	mov	w0, wzr
  422988:	strb	w9, [x8, #842]
  42298c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422990:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422994:	mov	w9, #0x1                   	// #1
  422998:	add	x1, x29, #0x18
  42299c:	mov	w2, #0xa                   	// #10
  4229a0:	mov	x0, x19
  4229a4:	strb	w9, [x8, #912]
  4229a8:	bl	404180 <strtoul@plt>
  4229ac:	ldr	x8, [x29, #24]
  4229b0:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4229b4:	str	w0, [x9, #608]
  4229b8:	ldrb	w9, [x8]
  4229bc:	cbz	w9, 4232d4 <wcrtomb@plt+0x1e4b4>
  4229c0:	cmp	w9, #0x2e
  4229c4:	b.ne	4229ec <wcrtomb@plt+0x1dbcc>  // b.any
  4229c8:	add	x0, x8, #0x1
  4229cc:	add	x1, x29, #0x18
  4229d0:	mov	w2, #0xa                   	// #10
  4229d4:	bl	404180 <strtoul@plt>
  4229d8:	ldr	x8, [x29, #24]
  4229dc:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4229e0:	str	w0, [x9, #88]
  4229e4:	ldrb	w8, [x8]
  4229e8:	cbz	w8, 4232d4 <wcrtomb@plt+0x1e4b4>
  4229ec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4229f0:	ldr	x8, [x8, #1008]
  4229f4:	cbz	x8, 4229fc <wcrtomb@plt+0x1dbdc>
  4229f8:	blr	x8
  4229fc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422a00:	add	x1, x1, #0x26
  422a04:	b	4234d0 <wcrtomb@plt+0x1e6b0>
  422a08:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422a0c:	mov	w9, #0x1                   	// #1
  422a10:	mov	w0, wzr
  422a14:	strb	w9, [x8, #553]
  422a18:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422a1c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422a20:	mov	w9, #0x1                   	// #1
  422a24:	mov	w0, wzr
  422a28:	strb	w9, [x8, #673]
  422a2c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422a30:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422a34:	mov	w9, #0x1                   	// #1
  422a38:	mov	w0, wzr
  422a3c:	strb	w9, [x8, #77]
  422a40:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422a44:	ldr	x1, [x20]
  422a48:	mov	w0, #0x1                   	// #1
  422a4c:	bl	423a30 <wcrtomb@plt+0x1ec10>
  422a50:	cbz	x19, 423394 <wcrtomb@plt+0x1e574>
  422a54:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x17da0>
  422a58:	add	x4, x4, #0xd3e
  422a5c:	add	x3, x29, #0x18
  422a60:	mov	w2, #0xa                   	// #10
  422a64:	mov	x0, x19
  422a68:	mov	x1, xzr
  422a6c:	bl	43d428 <argp_usage@@Base+0xb82c>
  422a70:	cbnz	w0, 4235e4 <wcrtomb@plt+0x1e7c4>
  422a74:	ldr	x8, [x29, #24]
  422a78:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422a7c:	str	x8, [x9, #760]
  422a80:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422a84:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422a88:	mov	w9, #0x1                   	// #1
  422a8c:	mov	w0, wzr
  422a90:	strb	w9, [x8, #577]
  422a94:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422a98:	ldr	x1, [x20]
  422a9c:	mov	w0, #0x6                   	// #6
  422aa0:	bl	423b60 <wcrtomb@plt+0x1ed40>
  422aa4:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422aa8:	mov	w0, #0x9                   	// #9
  422aac:	bl	4239cc <wcrtomb@plt+0x1ebac>
  422ab0:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422ab4:	add	x1, x29, #0x18
  422ab8:	mov	w2, #0xa                   	// #10
  422abc:	mov	x0, x19
  422ac0:	bl	404180 <strtoul@plt>
  422ac4:	ldr	x8, [x29, #24]
  422ac8:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422acc:	str	w0, [x9, #780]
  422ad0:	ldrb	w8, [x8]
  422ad4:	cbz	w8, 4232d4 <wcrtomb@plt+0x1e4b4>
  422ad8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422adc:	ldr	x8, [x8, #1008]
  422ae0:	cbz	x8, 422ae8 <wcrtomb@plt+0x1dcc8>
  422ae4:	blr	x8
  422ae8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  422aec:	add	x1, x1, #0xfbd
  422af0:	b	4234d0 <wcrtomb@plt+0x1e6b0>
  422af4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422af8:	mov	w0, wzr
  422afc:	str	x19, [x8, #664]
  422b00:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422b04:	mov	w8, #0x1                   	// #1
  422b08:	mov	w0, wzr
  422b0c:	str	w8, [x20, #40]
  422b10:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422b14:	ldr	x1, [x20]
  422b18:	mov	w0, #0x5                   	// #5
  422b1c:	bl	423a30 <wcrtomb@plt+0x1ec10>
  422b20:	mov	x0, x19
  422b24:	bl	41b770 <wcrtomb@plt+0x16950>
  422b28:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422b2c:	mov	x0, x19
  422b30:	bl	419454 <wcrtomb@plt+0x14634>
  422b34:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422b38:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422b3c:	mov	w0, wzr
  422b40:	strb	wzr, [x8, #32]
  422b44:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422b48:	ldr	x1, [x20]
  422b4c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  422b50:	add	x0, x0, #0x78c
  422b54:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  422b58:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422b5c:	ldr	x1, [x20]
  422b60:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  422b64:	add	x0, x0, #0x31c
  422b68:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  422b6c:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422b70:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422b74:	mov	w9, #0x1                   	// #1
  422b78:	mov	w0, wzr
  422b7c:	strb	w9, [x8, #84]
  422b80:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422b84:	mov	w0, #0x1                   	// #1
  422b88:	bl	4239cc <wcrtomb@plt+0x1ebac>
  422b8c:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422b90:	mov	x0, x19
  422b94:	bl	418ff4 <wcrtomb@plt+0x141d4>
  422b98:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422b9c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422ba0:	mov	w9, #0x1                   	// #1
  422ba4:	mov	w0, wzr
  422ba8:	strb	w9, [x8, #32]
  422bac:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422bb0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422bb4:	ldr	x5, [x8, #960]
  422bb8:	adrp	x20, 453000 <_obstack_memory_used@@Base+0x14da0>
  422bbc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  422bc0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x14da0>
  422bc4:	add	x20, x20, #0xfe8
  422bc8:	add	x0, x0, #0x15
  422bcc:	add	x2, x2, #0xff0
  422bd0:	mov	w4, #0x4                   	// #4
  422bd4:	mov	x1, x19
  422bd8:	mov	x3, x20
  422bdc:	bl	42e4c8 <wcrtomb@plt+0x296a8>
  422be0:	mov	x8, x0
  422be4:	ldr	w8, [x20, x8, lsl #2]
  422be8:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422bec:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  422bf0:	mov	w11, #0x1                   	// #1
  422bf4:	mov	w0, wzr
  422bf8:	str	w8, [x9, #916]
  422bfc:	strb	w11, [x10, #912]
  422c00:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422c04:	ldr	x1, [x20]
  422c08:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  422c0c:	add	x0, x0, #0x32b
  422c10:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  422c14:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422c18:	mov	x0, x19
  422c1c:	bl	423d3c <wcrtomb@plt+0x1ef1c>
  422c20:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422c24:	ldr	x1, [x20]
  422c28:	mov	x0, x19
  422c2c:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  422c30:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422c34:	mov	w0, #0x2                   	// #2
  422c38:	bl	4239cc <wcrtomb@plt+0x1ebac>
  422c3c:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422c40:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422c44:	mov	w9, #0x1                   	// #1
  422c48:	mov	w0, wzr
  422c4c:	strb	w9, [x8, #625]
  422c50:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422c54:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422c58:	mov	w0, wzr
  422c5c:	str	x19, [x8, #648]
  422c60:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422c64:	mov	w0, #0x7                   	// #7
  422c68:	bl	4239cc <wcrtomb@plt+0x1ebac>
  422c6c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422c70:	ldr	w9, [x8, #644]
  422c74:	mov	w0, wzr
  422c78:	add	w9, w9, #0x1
  422c7c:	str	w9, [x8, #644]
  422c80:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422c84:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422c88:	mov	w9, #0x1                   	// #1
  422c8c:	mov	w0, wzr
  422c90:	str	w9, [x8, #72]
  422c94:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422c98:	mov	w0, #0x8                   	// #8
  422c9c:	bl	4239cc <wcrtomb@plt+0x1ebac>
  422ca0:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422ca4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422ca8:	mov	w9, #0x1                   	// #1
  422cac:	mov	w0, wzr
  422cb0:	strb	w9, [x8, #3136]
  422cb4:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422cb8:	mov	x0, x19
  422cbc:	bl	41b284 <wcrtomb@plt+0x16464>
  422cc0:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422cc4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422cc8:	mov	w9, #0x1                   	// #1
  422ccc:	mov	w0, wzr
  422cd0:	strb	w9, [x8, #841]
  422cd4:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422cd8:	ldr	x1, [x20]
  422cdc:	mov	w0, #0x8                   	// #8
  422ce0:	bl	423a30 <wcrtomb@plt+0x1ec10>
  422ce4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422ce8:	mov	w9, #0x1                   	// #1
  422cec:	mov	w0, wzr
  422cf0:	strb	w9, [x8, #952]
  422cf4:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422cf8:	ldr	x1, [x20]
  422cfc:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  422d00:	add	x0, x0, #0x6fe
  422d04:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  422d08:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422d0c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422d10:	mov	w9, #0x1                   	// #1
  422d14:	mov	w0, wzr
  422d18:	strb	w9, [x8, #76]
  422d1c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422d20:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422d24:	mov	w9, #0x1                   	// #1
  422d28:	mov	w0, wzr
  422d2c:	strb	w9, [x8, #912]
  422d30:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422d34:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422d38:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422d3c:	mov	w10, #0x1                   	// #1
  422d40:	mov	w0, wzr
  422d44:	str	x19, [x8, #768]
  422d48:	strb	w10, [x9, #76]
  422d4c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422d50:	ldr	x1, [x20]
  422d54:	mov	w0, #0x4                   	// #4
  422d58:	bl	423b60 <wcrtomb@plt+0x1ed40>
  422d5c:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422d60:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x17da0>
  422d64:	add	x4, x4, #0xd3e
  422d68:	add	x3, x29, #0x18
  422d6c:	mov	w2, #0xa                   	// #10
  422d70:	mov	x0, x19
  422d74:	mov	x1, xzr
  422d78:	bl	43d428 <argp_usage@@Base+0xb82c>
  422d7c:	cbnz	w0, 422db0 <wcrtomb@plt+0x1df90>
  422d80:	ldr	x8, [x29, #24]
  422d84:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422d88:	cmp	x8, w8, sxtw
  422d8c:	str	w8, [x9, #748]
  422d90:	b.ne	422db0 <wcrtomb@plt+0x1df90>  // b.any
  422d94:	cmp	w8, #0x1
  422d98:	b.lt	422db0 <wcrtomb@plt+0x1df90>  // b.tstop
  422d9c:	lsl	x9, x8, #9
  422da0:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  422da4:	lsr	x8, x8, #55
  422da8:	str	x9, [x10, #920]
  422dac:	cbz	x8, 4232d4 <wcrtomb@plt+0x1e4b4>
  422db0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422db4:	ldr	x8, [x8, #1008]
  422db8:	cbz	x8, 422dc0 <wcrtomb@plt+0x1dfa0>
  422dbc:	blr	x8
  422dc0:	mov	x0, x19
  422dc4:	bl	43beac <argp_usage@@Base+0xa2b0>
  422dc8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  422dcc:	mov	x19, x0
  422dd0:	add	x1, x1, #0xf83
  422dd4:	mov	w2, #0x5                   	// #5
  422dd8:	mov	x0, xzr
  422ddc:	bl	404bf0 <dcgettext@plt>
  422de0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  422de4:	mov	x4, x0
  422de8:	add	x2, x2, #0x5d1
  422dec:	mov	w0, wzr
  422df0:	mov	w1, wzr
  422df4:	mov	x3, x19
  422df8:	bl	4041f0 <error@plt>
  422dfc:	mov	w0, #0x2                   	// #2
  422e00:	bl	421198 <wcrtomb@plt+0x1c378>
  422e04:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422e08:	mov	w0, wzr
  422e0c:	str	x19, [x8, #960]
  422e10:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422e14:	mov	x0, x19
  422e18:	bl	436980 <argp_usage@@Base+0x4d84>
  422e1c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422e20:	str	x0, [x8, #600]
  422e24:	cbz	x0, 423584 <wcrtomb@plt+0x1e764>
  422e28:	mov	w0, wzr
  422e2c:	bl	404cb0 <umask@plt>
  422e30:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422e34:	str	w0, [x8, #80]
  422e38:	bl	404cb0 <umask@plt>
  422e3c:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422e40:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x16da0>
  422e44:	add	x4, x4, #0xf9b
  422e48:	add	x1, sp, #0x8
  422e4c:	add	x3, x29, #0x18
  422e50:	mov	w2, #0xa                   	// #10
  422e54:	mov	x0, x19
  422e58:	bl	43d428 <argp_usage@@Base+0xb82c>
  422e5c:	cbnz	w0, 4235bc <wcrtomb@plt+0x1e79c>
  422e60:	ldr	x8, [sp, #8]
  422e64:	cmp	x8, x19
  422e68:	b.ls	422e84 <wcrtomb@plt+0x1e064>  // b.plast
  422e6c:	ldurb	w1, [x8, #-1]
  422e70:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  422e74:	add	x0, x0, #0xf9b
  422e78:	mov	w2, #0xe                   	// #14
  422e7c:	bl	404b70 <memchr@plt>
  422e80:	cbz	x0, 4233e4 <wcrtomb@plt+0x1e5c4>
  422e84:	ldr	d0, [x29, #24]
  422e88:	ucvtf	d0, d0
  422e8c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422e90:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422e94:	mov	w10, #0x1                   	// #1
  422e98:	mov	w0, wzr
  422e9c:	str	d0, [x8, #632]
  422ea0:	strb	w10, [x9, #76]
  422ea4:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422ea8:	mov	w0, #0x3                   	// #3
  422eac:	bl	4239cc <wcrtomb@plt+0x1ebac>
  422eb0:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422eb4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422eb8:	mov	w9, #0x1                   	// #1
  422ebc:	mov	w0, wzr
  422ec0:	strb	w9, [x8, #968]
  422ec4:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422ec8:	ldr	x1, [x20]
  422ecc:	mov	w0, #0x2                   	// #2
  422ed0:	bl	423a30 <wcrtomb@plt+0x1ec10>
  422ed4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422ed8:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  422edc:	mov	w10, #0x1                   	// #1
  422ee0:	str	x19, [x8, #832]
  422ee4:	str	w10, [x9, #972]
  422ee8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422eec:	mov	w9, #0x1                   	// #1
  422ef0:	mov	w0, wzr
  422ef4:	strb	w9, [x8, #33]
  422ef8:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422efc:	ldr	x1, [x20]
  422f00:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  422f04:	add	x0, x0, #0x66e
  422f08:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  422f0c:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422f10:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422f14:	mov	w9, #0x1                   	// #1
  422f18:	str	w9, [x8, #972]
  422f1c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422f20:	ldr	x8, [x8, #48]
  422f24:	tbz	x8, #63, 42349c <wcrtomb@plt+0x1e67c>
  422f28:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  422f2c:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x16da0>
  422f30:	add	x8, x8, #0x8
  422f34:	add	x9, x9, #0xffa
  422f38:	cmp	w21, #0x119
  422f3c:	adrp	x3, 470000 <argp_program_version_hook@@Base+0x258>
  422f40:	csel	x1, x9, x8, eq  // eq = none
  422f44:	add	x3, x3, #0x28
  422f48:	mov	x0, x20
  422f4c:	mov	x2, x19
  422f50:	bl	423bcc <wcrtomb@plt+0x1edac>
  422f54:	ldr	x1, [x20]
  422f58:	mov	w0, #0x3                   	// #3
  422f5c:	bl	423a30 <wcrtomb@plt+0x1ec10>
  422f60:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422f64:	ldr	x1, [x20]
  422f68:	mov	w0, #0x3                   	// #3
  422f6c:	bl	423b60 <wcrtomb@plt+0x1ed40>
  422f70:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  422f74:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422f78:	mov	w9, #0x1                   	// #1
  422f7c:	mov	w0, wzr
  422f80:	strb	w9, [x8, #576]
  422f84:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422f88:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  422f8c:	adrp	x3, 470000 <argp_program_version_hook@@Base+0x258>
  422f90:	add	x1, x1, #0x638
  422f94:	add	x3, x3, #0x318
  422f98:	mov	x0, x20
  422f9c:	mov	x2, x19
  422fa0:	bl	423bcc <wcrtomb@plt+0x1edac>
  422fa4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422fa8:	ldr	w9, [x8, #56]
  422fac:	cbnz	w9, 4232d4 <wcrtomb@plt+0x1e4b4>
  422fb0:	mov	w9, #0x1                   	// #1
  422fb4:	b	423068 <wcrtomb@plt+0x1e248>
  422fb8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422fbc:	mov	w9, #0x1                   	// #1
  422fc0:	mov	w0, wzr
  422fc4:	strb	w9, [x8, #757]
  422fc8:	str	x19, [x20, #24]
  422fcc:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422fd0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  422fd4:	mov	w9, #0x1                   	// #1
  422fd8:	mov	w0, wzr
  422fdc:	strb	w9, [x8, #624]
  422fe0:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  422fe4:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  422fe8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  422fec:	ldr	x9, [x20, #848]
  422ff0:	ldr	x8, [x8, #3128]
  422ff4:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  422ff8:	cmp	x9, x8
  422ffc:	b.ne	423018 <wcrtomb@plt+0x1e1f8>  // b.any
  423000:	ldr	x0, [x21, #688]
  423004:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  423008:	add	x1, x1, #0xc38
  42300c:	mov	w2, #0x8                   	// #8
  423010:	bl	43d260 <argp_usage@@Base+0xb664>
  423014:	str	x0, [x21, #688]
  423018:	ldr	x8, [x20, #848]
  42301c:	ldr	x9, [x21, #688]
  423020:	mov	w0, wzr
  423024:	add	x10, x8, #0x1
  423028:	str	x10, [x20, #848]
  42302c:	str	x19, [x9, x8, lsl #3]
  423030:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423034:	mov	w0, wzr
  423038:	str	wzr, [x20, #40]
  42303c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423040:	ldr	x1, [x20]
  423044:	mov	w0, wzr
  423048:	bl	423b60 <wcrtomb@plt+0x1ed40>
  42304c:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  423050:	mov	w8, #0x1                   	// #1
  423054:	mov	w0, wzr
  423058:	strb	w8, [x20, #16]
  42305c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423060:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423064:	mov	w9, #0x2                   	// #2
  423068:	mov	w0, wzr
  42306c:	str	w9, [x8, #56]
  423070:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423074:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  423078:	mov	w0, wzr
  42307c:	str	x19, [x8, #568]
  423080:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423084:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423088:	mov	w9, #0x1                   	// #1
  42308c:	mov	w0, wzr
  423090:	strb	w9, [x8, #953]
  423094:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423098:	mov	x0, x19
  42309c:	bl	4085e8 <wcrtomb@plt+0x37c8>
  4230a0:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4230a4:	ldr	x1, [x20]
  4230a8:	mov	w0, #0x6                   	// #6
  4230ac:	bl	423a30 <wcrtomb@plt+0x1ec10>
  4230b0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4230b4:	mov	w9, #0x1                   	// #1
  4230b8:	mov	w0, wzr
  4230bc:	strb	w9, [x8, #640]
  4230c0:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4230c4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4230c8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4230cc:	ldr	w10, [x8, #644]
  4230d0:	ldr	w11, [x9, #448]
  4230d4:	mov	w12, #0x3000                	// #12288
  4230d8:	movk	w12, #0x58, lsl #16
  4230dc:	add	w10, w10, #0x1
  4230e0:	orr	w11, w11, w12
  4230e4:	mov	w0, wzr
  4230e8:	str	w10, [x8, #644]
  4230ec:	str	w11, [x9, #448]
  4230f0:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4230f4:	ldr	x1, [x20]
  4230f8:	mov	w0, #0x5                   	// #5
  4230fc:	bl	423b60 <wcrtomb@plt+0x1ed40>
  423100:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  423104:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  423108:	add	x0, x0, #0x54c
  42310c:	bl	423d3c <wcrtomb@plt+0x1ef1c>
  423110:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423114:	mov	w9, #0x1                   	// #1
  423118:	mov	w0, wzr
  42311c:	str	w9, [x8, #896]
  423120:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423124:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423128:	mov	w9, #0x1                   	// #1
  42312c:	mov	w0, wzr
  423130:	strb	w9, [x8, #698]
  423134:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423138:	mov	w0, #0x4                   	// #4
  42313c:	bl	4239cc <wcrtomb@plt+0x1ebac>
  423140:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  423144:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423148:	mov	w9, #0xffffffff            	// #-1
  42314c:	b	4231c0 <wcrtomb@plt+0x1e3a0>
  423150:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423154:	mov	w9, #0x1                   	// #1
  423158:	mov	w0, wzr
  42315c:	strb	w9, [x8, #744]
  423160:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423164:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423168:	mov	w9, #0x1                   	// #1
  42316c:	mov	w0, wzr
  423170:	strb	w9, [x8, #592]
  423174:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423178:	ldr	x1, [x20]
  42317c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  423180:	add	x0, x0, #0x335
  423184:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  423188:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  42318c:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  423190:	add	x1, x1, #0x210
  423194:	mov	x0, x19
  423198:	bl	423dd4 <wcrtomb@plt+0x1efb4>
  42319c:	cmn	x0, #0x1
  4231a0:	b.eq	4233a8 <wcrtomb@plt+0x1e588>  // b.none
  4231a4:	mov	x8, x0
  4231a8:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  4231ac:	mov	w0, wzr
  4231b0:	str	w8, [x9, #704]
  4231b4:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4231b8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4231bc:	mov	w9, #0x1                   	// #1
  4231c0:	mov	w0, wzr
  4231c4:	str	w9, [x8, #980]
  4231c8:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4231cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4231d0:	mov	w9, #0xffffffff            	// #-1
  4231d4:	mov	w0, wzr
  4231d8:	str	w9, [x8, #984]
  4231dc:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4231e0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  4231e4:	add	x0, x0, #0x54c
  4231e8:	bl	423d3c <wcrtomb@plt+0x1ef1c>
  4231ec:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4231f0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4231f4:	mov	w0, wzr
  4231f8:	strb	wzr, [x8, #968]
  4231fc:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423200:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423204:	mov	w9, #0x1                   	// #1
  423208:	mov	w0, wzr
  42320c:	strb	w9, [x8, #776]
  423210:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423214:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423218:	mov	w9, #0xffffffff            	// #-1
  42321c:	mov	w0, wzr
  423220:	str	w9, [x8, #612]
  423224:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423228:	ldr	x1, [x20]
  42322c:	mov	w0, #0x7                   	// #7
  423230:	bl	423a30 <wcrtomb@plt+0x1ec10>
  423234:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423238:	mov	w9, #0x1                   	// #1
  42323c:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  423240:	mov	w0, wzr
  423244:	strb	w9, [x8, #843]
  423248:	str	x19, [x10, #568]
  42324c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423250:	mov	w0, #0xffffffff            	// #-1
  423254:	bl	4243b4 <wcrtomb@plt+0x1f594>
  423258:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  42325c:	ldrb	w1, [x19]
  423260:	cbz	w1, 4232d4 <wcrtomb@plt+0x1e4b4>
  423264:	add	x19, x19, #0x1
  423268:	mov	w2, #0x1                   	// #1
  42326c:	mov	x0, xzr
  423270:	bl	43abec <argp_usage@@Base+0x8ff0>
  423274:	ldrb	w1, [x19], #1
  423278:	mov	w0, wzr
  42327c:	cbnz	w1, 423268 <wcrtomb@plt+0x1e448>
  423280:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423284:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423288:	mov	w0, wzr
  42328c:	str	x19, [x8, #808]
  423290:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423294:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423298:	mov	w9, #0x1                   	// #1
  42329c:	mov	w0, wzr
  4232a0:	strb	w9, [x8, #34]
  4232a4:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4232a8:	cbz	x19, 4233d0 <wcrtomb@plt+0x1e5b0>
  4232ac:	mov	x0, x19
  4232b0:	bl	42439c <wcrtomb@plt+0x1f57c>
  4232b4:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4232b8:	ldr	x1, [x20]
  4232bc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  4232c0:	add	x0, x0, #0x33c
  4232c4:	bl	423ac8 <wcrtomb@plt+0x1eca8>
  4232c8:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4232cc:	mov	x0, x19
  4232d0:	bl	426284 <wcrtomb@plt+0x21464>
  4232d4:	mov	w0, wzr
  4232d8:	ldp	x20, x19, [sp, #48]
  4232dc:	ldr	x21, [sp, #32]
  4232e0:	ldp	x29, x30, [sp, #16]
  4232e4:	add	sp, sp, #0x40
  4232e8:	ret
  4232ec:	mov	w8, #0x5                   	// #5
  4232f0:	movk	w8, #0x100, lsl #16
  4232f4:	cmp	w21, w8
  4232f8:	b.ne	4232d8 <wcrtomb@plt+0x1e4b8>  // b.any
  4232fc:	ldr	x8, [x20]
  423300:	ldr	w8, [x8]
  423304:	cbz	w8, 423468 <wcrtomb@plt+0x1e648>
  423308:	cmp	w8, #0x2
  42330c:	b.ne	423494 <wcrtomb@plt+0x1e674>  // b.any
  423310:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423314:	add	x1, x1, #0x158
  423318:	mov	w2, #0x5                   	// #5
  42331c:	mov	x0, xzr
  423320:	bl	404bf0 <dcgettext@plt>
  423324:	ldr	x8, [x20]
  423328:	mov	x2, x0
  42332c:	mov	w0, wzr
  423330:	mov	w1, wzr
  423334:	ldp	x3, x4, [x8, #8]
  423338:	bl	4041f0 <error@plt>
  42333c:	mov	w0, #0x40                  	// #64
  423340:	bl	4041c0 <exit@plt>
  423344:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423348:	ldr	x0, [x8, #584]
  42334c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423350:	mov	w9, #0xffffffff            	// #-1
  423354:	str	w9, [x8, #784]
  423358:	cbz	x0, 4232d8 <wcrtomb@plt+0x1e4b8>
  42335c:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  423360:	add	x1, x1, #0x310
  423364:	bl	41b108 <wcrtomb@plt+0x162e8>
  423368:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  42336c:	mov	w8, #0x1                   	// #1
  423370:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  423374:	mov	w0, wzr
  423378:	str	w8, [x9, #556]
  42337c:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423380:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423384:	mov	w9, #0xa                   	// #10
  423388:	mov	w0, wzr
  42338c:	str	w9, [x8, #856]
  423390:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  423394:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423398:	mov	w9, #0x1                   	// #1
  42339c:	mov	w0, wzr
  4233a0:	str	x9, [x8, #760]
  4233a4:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4233a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4233ac:	ldr	x0, [x8, #528]
  4233b0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4233b4:	mov	w9, #0xffffffff            	// #-1
  4233b8:	str	w9, [x8, #704]
  4233bc:	cbz	x0, 4232d8 <wcrtomb@plt+0x1e4b8>
  4233c0:	adrp	x1, 470000 <argp_program_version_hook@@Base+0x258>
  4233c4:	add	x1, x1, #0x2c0
  4233c8:	bl	41b1bc <wcrtomb@plt+0x1639c>
  4233cc:	b	4232d4 <wcrtomb@plt+0x1e4b4>
  4233d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4233d4:	mov	w9, #0x1                   	// #1
  4233d8:	mov	w0, wzr
  4233dc:	strb	w9, [x8, #697]
  4233e0:	b	4232d8 <wcrtomb@plt+0x1e4b8>
  4233e4:	ldr	d0, [x29, #24]
  4233e8:	mov	x8, #0x4090000000000000    	// #4652218415073722368
  4233ec:	fmov	d1, x8
  4233f0:	ucvtf	d0, d0
  4233f4:	fmul	d0, d0, d1
  4233f8:	b	422e8c <wcrtomb@plt+0x1e06c>
  4233fc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423400:	add	x1, x1, #0x126
  423404:	mov	x19, x2
  423408:	mov	w2, #0x5                   	// #5
  42340c:	mov	x0, xzr
  423410:	bl	404bf0 <dcgettext@plt>
  423414:	mov	x1, x0
  423418:	mov	x0, x19
  42341c:	bl	42e9cc <argp_error@@Base>
  423420:	mov	w0, #0x40                  	// #64
  423424:	bl	4041c0 <exit@plt>
  423428:	bl	414aec <wcrtomb@plt+0xfccc>
  42342c:	bl	432484 <argp_usage@@Base+0x888>
  423430:	mov	w0, wzr
  423434:	bl	4041c0 <exit@plt>
  423438:	bl	424354 <wcrtomb@plt+0x1f534>
  42343c:	mov	x19, x0
  423440:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  423444:	add	x1, x1, #0x1e3
  423448:	mov	w0, #0x1                   	// #1
  42344c:	mov	x2, x19
  423450:	bl	4045f0 <__printf_chk@plt>
  423454:	bl	432484 <argp_usage@@Base+0x888>
  423458:	mov	x0, x19
  42345c:	bl	4049d0 <free@plt>
  423460:	mov	w0, wzr
  423464:	bl	4041c0 <exit@plt>
  423468:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  42346c:	add	x1, x1, #0x176
  423470:	mov	w2, #0x5                   	// #5
  423474:	mov	x0, xzr
  423478:	bl	404bf0 <dcgettext@plt>
  42347c:	ldr	x8, [x20]
  423480:	mov	x2, x0
  423484:	mov	w0, wzr
  423488:	mov	w1, wzr
  42348c:	ldr	x3, [x8, #8]
  423490:	bl	4041f0 <error@plt>
  423494:	mov	w0, #0x40                  	// #64
  423498:	bl	4041c0 <exit@plt>
  42349c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4234a0:	ldr	x8, [x8, #1008]
  4234a4:	cbz	x8, 4234ac <wcrtomb@plt+0x1e68c>
  4234a8:	blr	x8
  4234ac:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  4234b0:	add	x1, x1, #0xfdd
  4234b4:	b	4234d0 <wcrtomb@plt+0x1e6b0>
  4234b8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4234bc:	ldr	x8, [x8, #1008]
  4234c0:	cbz	x8, 4234c8 <wcrtomb@plt+0x1e6a8>
  4234c4:	blr	x8
  4234c8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4234cc:	add	x1, x1, #0x101
  4234d0:	mov	w2, #0x5                   	// #5
  4234d4:	mov	x0, xzr
  4234d8:	bl	404bf0 <dcgettext@plt>
  4234dc:	mov	x2, x0
  4234e0:	mov	w0, wzr
  4234e4:	mov	w1, wzr
  4234e8:	bl	4041f0 <error@plt>
  4234ec:	mov	w0, #0x2                   	// #2
  4234f0:	bl	421198 <wcrtomb@plt+0x1c378>
  4234f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4234f8:	ldr	x8, [x8, #1008]
  4234fc:	cbz	x8, 423504 <wcrtomb@plt+0x1e6e4>
  423500:	blr	x8
  423504:	mov	x0, x19
  423508:	bl	43beac <argp_usage@@Base+0xa2b0>
  42350c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423510:	mov	x19, x0
  423514:	add	x1, x1, #0xa5
  423518:	b	422dd4 <wcrtomb@plt+0x1dfb4>
  42351c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423520:	ldr	x8, [x8, #1008]
  423524:	cbz	x8, 42352c <wcrtomb@plt+0x1e70c>
  423528:	blr	x8
  42352c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423530:	add	x1, x1, #0xb9
  423534:	mov	w2, #0x5                   	// #5
  423538:	mov	x0, xzr
  42353c:	bl	404bf0 <dcgettext@plt>
  423540:	mov	x2, x0
  423544:	mov	w3, #0x200                 	// #512
  423548:	mov	w0, wzr
  42354c:	mov	w1, wzr
  423550:	bl	4041f0 <error@plt>
  423554:	mov	w0, #0x2                   	// #2
  423558:	bl	421198 <wcrtomb@plt+0x1c378>
  42355c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423560:	ldr	x8, [x8, #1008]
  423564:	cbz	x8, 42356c <wcrtomb@plt+0x1e74c>
  423568:	blr	x8
  42356c:	mov	x0, x19
  423570:	bl	43beac <argp_usage@@Base+0xa2b0>
  423574:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423578:	mov	x19, x0
  42357c:	add	x1, x1, #0xdf
  423580:	b	422dd4 <wcrtomb@plt+0x1dfb4>
  423584:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423588:	ldr	x8, [x8, #1008]
  42358c:	cbz	x8, 423594 <wcrtomb@plt+0x1e774>
  423590:	blr	x8
  423594:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423598:	add	x1, x1, #0x79
  42359c:	mov	w2, #0x5                   	// #5
  4235a0:	mov	x0, xzr
  4235a4:	bl	404bf0 <dcgettext@plt>
  4235a8:	mov	x2, x0
  4235ac:	mov	w0, wzr
  4235b0:	mov	w1, wzr
  4235b4:	bl	4041f0 <error@plt>
  4235b8:	bl	40dda4 <wcrtomb@plt+0x8f84>
  4235bc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4235c0:	ldr	x8, [x8, #1008]
  4235c4:	cbz	x8, 4235cc <wcrtomb@plt+0x1e7ac>
  4235c8:	blr	x8
  4235cc:	mov	x0, x19
  4235d0:	bl	43beac <argp_usage@@Base+0xa2b0>
  4235d4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  4235d8:	mov	x19, x0
  4235dc:	add	x1, x1, #0xfa9
  4235e0:	b	422dd4 <wcrtomb@plt+0x1dfb4>
  4235e4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4235e8:	ldr	x8, [x8, #1008]
  4235ec:	cbz	x8, 4235f4 <wcrtomb@plt+0x1e7d4>
  4235f0:	blr	x8
  4235f4:	mov	x0, x19
  4235f8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4235fc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423600:	mov	x19, x0
  423604:	add	x1, x1, #0x96
  423608:	mov	w2, #0x5                   	// #5
  42360c:	mov	x0, xzr
  423610:	bl	404bf0 <dcgettext@plt>
  423614:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  423618:	mov	x4, x0
  42361c:	add	x2, x2, #0x5d1
  423620:	mov	w0, wzr
  423624:	mov	w1, wzr
  423628:	mov	x3, x19
  42362c:	bl	4041f0 <error@plt>
  423630:	bl	40dda4 <wcrtomb@plt+0x8f84>
  423634:	sub	sp, sp, #0x80
  423638:	stp	x20, x19, [sp, #112]
  42363c:	cmp	w0, #0x113
  423640:	mov	x19, x1
  423644:	stp	x29, x30, [sp, #96]
  423648:	add	x29, sp, #0x60
  42364c:	b.le	42387c <wcrtomb@plt+0x1ea5c>
  423650:	cmp	w0, #0x115
  423654:	b.le	4238e4 <wcrtomb@plt+0x1eac4>
  423658:	cmp	w0, #0x116
  42365c:	b.eq	423914 <wcrtomb@plt+0x1eaf4>  // b.none
  423660:	cmp	w0, #0x14f
  423664:	b.eq	423934 <wcrtomb@plt+0x1eb14>  // b.none
  423668:	mov	w8, #0x4                   	// #4
  42366c:	movk	w8, #0x200, lsl #16
  423670:	cmp	w0, w8
  423674:	b.ne	4239b8 <wcrtomb@plt+0x1eb98>  // b.any
  423678:	adrp	x3, 43d000 <argp_usage@@Base+0xb404>
  42367c:	adrp	x4, 404000 <mbrtowc@plt-0x100>
  423680:	add	x3, x3, #0x1c4
  423684:	add	x4, x4, #0x9d0
  423688:	add	x0, sp, #0x8
  42368c:	mov	x1, xzr
  423690:	mov	x2, xzr
  423694:	bl	43df40 <_obstack_begin@@Base>
  423698:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  42369c:	add	x1, x1, #0x3d6
  4236a0:	mov	w2, #0x5                   	// #5
  4236a4:	mov	x0, xzr
  4236a8:	bl	404bf0 <dcgettext@plt>
  4236ac:	mov	x20, x0
  4236b0:	bl	404190 <strlen@plt>
  4236b4:	ldp	x9, x8, [sp, #32]
  4236b8:	mov	x19, x0
  4236bc:	sub	x8, x8, x9
  4236c0:	cmp	x8, x0
  4236c4:	b.cs	4236d4 <wcrtomb@plt+0x1e8b4>  // b.hs, b.nlast
  4236c8:	add	x0, sp, #0x8
  4236cc:	mov	x1, x19
  4236d0:	bl	43e028 <_obstack_newchunk@@Base>
  4236d4:	ldr	x0, [sp, #32]
  4236d8:	mov	x1, x20
  4236dc:	mov	x2, x19
  4236e0:	bl	404110 <memcpy@plt>
  4236e4:	ldp	x8, x9, [sp, #32]
  4236e8:	add	x8, x8, x19
  4236ec:	sub	x9, x9, x8
  4236f0:	cmp	x9, #0x1
  4236f4:	str	x8, [sp, #32]
  4236f8:	b.hi	423708 <wcrtomb@plt+0x1e8e8>  // b.pmore
  4236fc:	add	x0, sp, #0x8
  423700:	mov	w1, #0x2                   	// #2
  423704:	bl	43e028 <_obstack_newchunk@@Base>
  423708:	ldr	x8, [sp, #32]
  42370c:	mov	w9, #0xa0a                 	// #2570
  423710:	add	x0, sp, #0x8
  423714:	strh	w9, [x8]
  423718:	ldr	x8, [sp, #32]
  42371c:	add	x8, x8, #0x2
  423720:	str	x8, [sp, #32]
  423724:	bl	4244e8 <wcrtomb@plt+0x1f6c8>
  423728:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  42372c:	add	x1, x1, #0x40a
  423730:	mov	w2, #0x5                   	// #5
  423734:	mov	x0, xzr
  423738:	bl	404bf0 <dcgettext@plt>
  42373c:	mov	x19, x0
  423740:	bl	404190 <strlen@plt>
  423744:	ldp	x9, x8, [sp, #32]
  423748:	mov	x20, x0
  42374c:	sub	x8, x8, x9
  423750:	cmp	x8, x0
  423754:	b.cs	423764 <wcrtomb@plt+0x1e944>  // b.hs, b.nlast
  423758:	add	x0, sp, #0x8
  42375c:	mov	x1, x20
  423760:	bl	43e028 <_obstack_newchunk@@Base>
  423764:	ldr	x0, [sp, #32]
  423768:	mov	x1, x19
  42376c:	mov	x2, x20
  423770:	bl	404110 <memcpy@plt>
  423774:	ldr	x8, [sp, #32]
  423778:	add	x8, x8, x20
  42377c:	str	x8, [sp, #32]
  423780:	bl	424354 <wcrtomb@plt+0x1f534>
  423784:	mov	x20, x0
  423788:	bl	404190 <strlen@plt>
  42378c:	ldp	x9, x8, [sp, #32]
  423790:	mov	x19, x0
  423794:	sub	x8, x8, x9
  423798:	cmp	x8, x0
  42379c:	b.cs	4237ac <wcrtomb@plt+0x1e98c>  // b.hs, b.nlast
  4237a0:	add	x0, sp, #0x8
  4237a4:	mov	x1, x19
  4237a8:	bl	43e028 <_obstack_newchunk@@Base>
  4237ac:	ldr	x0, [sp, #32]
  4237b0:	mov	x1, x20
  4237b4:	mov	x2, x19
  4237b8:	bl	404110 <memcpy@plt>
  4237bc:	ldp	x8, x9, [sp, #32]
  4237c0:	add	x8, x8, x19
  4237c4:	cmp	x9, x8
  4237c8:	str	x8, [sp, #32]
  4237cc:	b.ne	4237dc <wcrtomb@plt+0x1e9bc>  // b.any
  4237d0:	add	x0, sp, #0x8
  4237d4:	mov	w1, #0x1                   	// #1
  4237d8:	bl	43e028 <_obstack_newchunk@@Base>
  4237dc:	ldr	x8, [sp, #32]
  4237e0:	mov	w9, #0xa                   	// #10
  4237e4:	add	x10, x8, #0x1
  4237e8:	str	x10, [sp, #32]
  4237ec:	strb	w9, [x8]
  4237f0:	ldp	x9, x8, [sp, #32]
  4237f4:	cmp	x8, x9
  4237f8:	b.ne	423808 <wcrtomb@plt+0x1e9e8>  // b.any
  4237fc:	add	x0, sp, #0x8
  423800:	mov	w1, #0x1                   	// #1
  423804:	bl	43e028 <_obstack_newchunk@@Base>
  423808:	ldr	x8, [sp, #32]
  42380c:	add	x9, x8, #0x1
  423810:	str	x9, [sp, #32]
  423814:	strb	wzr, [x8]
  423818:	ldp	x0, x8, [sp, #24]
  42381c:	cmp	x8, x0
  423820:	b.ne	423830 <wcrtomb@plt+0x1ea10>  // b.any
  423824:	ldrb	w8, [sp, #88]
  423828:	orr	w8, w8, #0x2
  42382c:	strb	w8, [sp, #88]
  423830:	ldr	x9, [sp, #56]
  423834:	ldp	x10, x8, [sp, #32]
  423838:	ldr	x11, [sp, #16]
  42383c:	add	x10, x9, x10
  423840:	bic	x9, x10, x9
  423844:	sub	x10, x9, x11
  423848:	sub	x11, x8, x11
  42384c:	cmp	x10, x11
  423850:	str	x9, [sp, #32]
  423854:	b.ls	42385c <wcrtomb@plt+0x1ea3c>  // b.plast
  423858:	str	x8, [sp, #32]
  42385c:	ldr	x8, [sp, #32]
  423860:	str	x8, [sp, #24]
  423864:	bl	43d39c <argp_usage@@Base+0xb7a0>
  423868:	mov	x19, x0
  42386c:	add	x0, sp, #0x8
  423870:	mov	x1, xzr
  423874:	bl	43e1d8 <_obstack_free@@Base>
  423878:	b	4239b8 <wcrtomb@plt+0x1eb98>
  42387c:	cmp	w0, #0x69
  423880:	b.gt	4238b4 <wcrtomb@plt+0x1ea94>
  423884:	cmp	w0, #0x4a
  423888:	b.eq	423954 <wcrtomb@plt+0x1eb34>  // b.none
  42388c:	cmp	w0, #0x5a
  423890:	b.ne	4239b8 <wcrtomb@plt+0x1eb98>  // b.any
  423894:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423898:	add	x1, x1, #0x3b8
  42389c:	mov	w2, #0x5                   	// #5
  4238a0:	mov	x0, xzr
  4238a4:	bl	404bf0 <dcgettext@plt>
  4238a8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  4238ac:	add	x1, x1, #0x66e
  4238b0:	b	4239b0 <wcrtomb@plt+0x1eb90>
  4238b4:	cmp	w0, #0x6a
  4238b8:	b.eq	423974 <wcrtomb@plt+0x1eb54>  // b.none
  4238bc:	cmp	w0, #0x7a
  4238c0:	b.ne	4239b8 <wcrtomb@plt+0x1eb98>  // b.any
  4238c4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4238c8:	add	x1, x1, #0x3b8
  4238cc:	mov	w2, #0x5                   	// #5
  4238d0:	mov	x0, xzr
  4238d4:	bl	404bf0 <dcgettext@plt>
  4238d8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  4238dc:	add	x1, x1, #0x6fe
  4238e0:	b	4239b0 <wcrtomb@plt+0x1eb90>
  4238e4:	cmp	w0, #0x114
  4238e8:	b.eq	423994 <wcrtomb@plt+0x1eb74>  // b.none
  4238ec:	cmp	w0, #0x115
  4238f0:	b.ne	4239b8 <wcrtomb@plt+0x1eb98>  // b.any
  4238f4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4238f8:	add	x1, x1, #0x3b8
  4238fc:	mov	w2, #0x5                   	// #5
  423900:	mov	x0, xzr
  423904:	bl	404bf0 <dcgettext@plt>
  423908:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  42390c:	add	x1, x1, #0x32b
  423910:	b	4239b0 <wcrtomb@plt+0x1eb90>
  423914:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423918:	add	x1, x1, #0x3b8
  42391c:	mov	w2, #0x5                   	// #5
  423920:	mov	x0, xzr
  423924:	bl	404bf0 <dcgettext@plt>
  423928:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  42392c:	add	x1, x1, #0x335
  423930:	b	4239b0 <wcrtomb@plt+0x1eb90>
  423934:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423938:	add	x1, x1, #0x3b8
  42393c:	mov	w2, #0x5                   	// #5
  423940:	mov	x0, xzr
  423944:	bl	404bf0 <dcgettext@plt>
  423948:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  42394c:	add	x1, x1, #0x33c
  423950:	b	4239b0 <wcrtomb@plt+0x1eb90>
  423954:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423958:	add	x1, x1, #0x3b8
  42395c:	mov	w2, #0x5                   	// #5
  423960:	mov	x0, xzr
  423964:	bl	404bf0 <dcgettext@plt>
  423968:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x14da0>
  42396c:	add	x1, x1, #0x78c
  423970:	b	4239b0 <wcrtomb@plt+0x1eb90>
  423974:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423978:	add	x1, x1, #0x3b8
  42397c:	mov	w2, #0x5                   	// #5
  423980:	mov	x0, xzr
  423984:	bl	404bf0 <dcgettext@plt>
  423988:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  42398c:	add	x1, x1, #0x31c
  423990:	b	4239b0 <wcrtomb@plt+0x1eb90>
  423994:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423998:	add	x1, x1, #0x3b8
  42399c:	mov	w2, #0x5                   	// #5
  4239a0:	mov	x0, xzr
  4239a4:	bl	404bf0 <dcgettext@plt>
  4239a8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  4239ac:	add	x1, x1, #0x324
  4239b0:	bl	43d794 <argp_usage@@Base+0xbb98>
  4239b4:	mov	x19, x0
  4239b8:	mov	x0, x19
  4239bc:	ldp	x20, x19, [sp, #112]
  4239c0:	ldp	x29, x30, [sp, #96]
  4239c4:	add	sp, sp, #0x80
  4239c8:	ret
  4239cc:	stp	x29, x30, [sp, #-16]!
  4239d0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4239d4:	ldr	w9, [x8, #860]
  4239d8:	mov	x29, sp
  4239dc:	cbz	w9, 4239e8 <wcrtomb@plt+0x1ebc8>
  4239e0:	cmp	w9, w0
  4239e4:	b.ne	4239f4 <wcrtomb@plt+0x1ebd4>  // b.any
  4239e8:	str	w0, [x8, #860]
  4239ec:	ldp	x29, x30, [sp], #16
  4239f0:	ret
  4239f4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4239f8:	ldr	x8, [x8, #1008]
  4239fc:	cbz	x8, 423a04 <wcrtomb@plt+0x1ebe4>
  423a00:	blr	x8
  423a04:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423a08:	add	x1, x1, #0x187
  423a0c:	mov	w2, #0x5                   	// #5
  423a10:	mov	x0, xzr
  423a14:	bl	404bf0 <dcgettext@plt>
  423a18:	mov	x2, x0
  423a1c:	mov	w0, wzr
  423a20:	mov	w1, wzr
  423a24:	bl	4041f0 <error@plt>
  423a28:	mov	w0, #0x2                   	// #2
  423a2c:	bl	421198 <wcrtomb@plt+0x1c378>
  423a30:	stp	x29, x30, [sp, #-48]!
  423a34:	cmp	w0, #0xa
  423a38:	str	x21, [sp, #16]
  423a3c:	stp	x20, x19, [sp, #32]
  423a40:	mov	x29, sp
  423a44:	b.cs	423ac4 <wcrtomb@plt+0x1eca4>  // b.hs, b.nlast
  423a48:	ldr	x8, [x1, #8]
  423a4c:	mov	x19, x1
  423a50:	mov	w21, w0
  423a54:	cbz	x8, 423a68 <wcrtomb@plt+0x1ec48>
  423a58:	mov	x0, x8
  423a5c:	bl	404190 <strlen@plt>
  423a60:	add	x0, x0, #0x21
  423a64:	b	423a6c <wcrtomb@plt+0x1ec4c>
  423a68:	mov	w0, #0x20                  	// #32
  423a6c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  423a70:	ldr	x1, [x19, #8]
  423a74:	mov	x20, x0
  423a78:	cbz	x1, 423a88 <wcrtomb@plt+0x1ec68>
  423a7c:	add	x0, x20, #0x20
  423a80:	bl	404b20 <strcpy@plt>
  423a84:	b	423a8c <wcrtomb@plt+0x1ec6c>
  423a88:	mov	x0, xzr
  423a8c:	str	x0, [x20, #8]
  423a90:	ldr	w8, [x19]
  423a94:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  423a98:	lsl	x9, x21, #3
  423a9c:	add	x10, x10, #0xc48
  423aa0:	str	w8, [x20]
  423aa4:	ldr	x8, [x19, #16]
  423aa8:	ldr	x0, [x10, x9]
  423aac:	str	x20, [x10, x9]
  423ab0:	ldr	x21, [sp, #16]
  423ab4:	stp	x8, x0, [x20, #16]
  423ab8:	ldp	x20, x19, [sp, #32]
  423abc:	ldp	x29, x30, [sp], #48
  423ac0:	ret
  423ac4:	bl	404870 <abort@plt>
  423ac8:	stp	x29, x30, [sp, #-48]!
  423acc:	stp	x20, x19, [sp, #32]
  423ad0:	mov	x19, x0
  423ad4:	mov	w0, wzr
  423ad8:	str	x21, [sp, #16]
  423adc:	mov	x29, sp
  423ae0:	bl	423a30 <wcrtomb@plt+0x1ec10>
  423ae4:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  423ae8:	ldr	x8, [x21, #904]
  423aec:	cbz	x8, 423b10 <wcrtomb@plt+0x1ecf0>
  423af0:	mov	x20, x0
  423af4:	mov	x0, x8
  423af8:	mov	x1, x19
  423afc:	bl	404920 <strcmp@plt>
  423b00:	cbz	w0, 423b10 <wcrtomb@plt+0x1ecf0>
  423b04:	ldr	w8, [x20]
  423b08:	cmp	w8, #0x1
  423b0c:	b.eq	423b24 <wcrtomb@plt+0x1ed04>  // b.none
  423b10:	str	x19, [x21, #904]
  423b14:	ldp	x20, x19, [sp, #32]
  423b18:	ldr	x21, [sp, #16]
  423b1c:	ldp	x29, x30, [sp], #48
  423b20:	ret
  423b24:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423b28:	ldr	x8, [x8, #1008]
  423b2c:	cbz	x8, 423b34 <wcrtomb@plt+0x1ed14>
  423b30:	blr	x8
  423b34:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423b38:	add	x1, x1, #0x1da
  423b3c:	mov	w2, #0x5                   	// #5
  423b40:	mov	x0, xzr
  423b44:	bl	404bf0 <dcgettext@plt>
  423b48:	mov	x2, x0
  423b4c:	mov	w0, wzr
  423b50:	mov	w1, wzr
  423b54:	bl	4041f0 <error@plt>
  423b58:	mov	w0, #0x2                   	// #2
  423b5c:	bl	421198 <wcrtomb@plt+0x1c378>
  423b60:	stp	x29, x30, [sp, #-48]!
  423b64:	stp	x20, x19, [sp, #32]
  423b68:	mov	w19, w0
  423b6c:	mov	w0, #0x9                   	// #9
  423b70:	str	x21, [sp, #16]
  423b74:	mov	x29, sp
  423b78:	mov	x20, x1
  423b7c:	bl	423a30 <wcrtomb@plt+0x1ec10>
  423b80:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  423b84:	cbz	x0, 423ba4 <wcrtomb@plt+0x1ed84>
  423b88:	mov	x1, x0
  423b8c:	mov	x0, x20
  423b90:	bl	4243ec <wcrtomb@plt+0x1f5cc>
  423b94:	cbz	w0, 423ba4 <wcrtomb@plt+0x1ed84>
  423b98:	ldr	w8, [x21, #752]
  423b9c:	cmp	w8, w19
  423ba0:	b.ne	423bb8 <wcrtomb@plt+0x1ed98>  // b.any
  423ba4:	str	w19, [x21, #752]
  423ba8:	ldp	x20, x19, [sp, #32]
  423bac:	ldr	x21, [sp, #16]
  423bb0:	ldp	x29, x30, [sp], #48
  423bb4:	ret
  423bb8:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x15da0>
  423bbc:	add	x9, x9, #0x48
  423bc0:	ldr	x0, [x9, w19, sxtw #3]
  423bc4:	ldr	x1, [x9, x8, lsl #3]
  423bc8:	bl	424440 <wcrtomb@plt+0x1f620>
  423bcc:	sub	sp, sp, #0xc0
  423bd0:	stp	x29, x30, [sp, #128]
  423bd4:	stp	x22, x21, [sp, #160]
  423bd8:	stp	x20, x19, [sp, #176]
  423bdc:	ldrb	w8, [x2]
  423be0:	mov	x19, x3
  423be4:	mov	x20, x2
  423be8:	str	x23, [sp, #144]
  423bec:	and	w8, w8, #0xfe
  423bf0:	cmp	w8, #0x2e
  423bf4:	add	x29, sp, #0x80
  423bf8:	b.ne	423c24 <wcrtomb@plt+0x1ee04>  // b.any
  423bfc:	mov	x1, sp
  423c00:	mov	x0, x20
  423c04:	bl	4500a0 <_obstack_memory_used@@Base+0x11e40>
  423c08:	cbnz	w0, 423cf8 <wcrtomb@plt+0x1eed8>
  423c0c:	mov	x0, sp
  423c10:	bl	43cc84 <argp_usage@@Base+0xb088>
  423c14:	mov	x8, x0
  423c18:	mov	w0, wzr
  423c1c:	stp	x8, x1, [x19]
  423c20:	b	423ce0 <wcrtomb@plt+0x1eec0>
  423c24:	mov	x22, x1
  423c28:	mov	x21, x0
  423c2c:	mov	x0, x19
  423c30:	mov	x1, x20
  423c34:	mov	x2, xzr
  423c38:	bl	438ae4 <argp_usage@@Base+0x6ee8>
  423c3c:	tbz	w0, #0, 423c7c <wcrtomb@plt+0x1ee5c>
  423c40:	mov	w0, #0x28                  	// #40
  423c44:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  423c48:	ldr	q0, [x19]
  423c4c:	mov	x23, x0
  423c50:	str	x22, [x0, #24]
  423c54:	stur	q0, [x0, #8]
  423c58:	mov	x0, x20
  423c5c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  423c60:	mov	x8, x0
  423c64:	str	x8, [x23, #32]
  423c68:	ldr	x8, [x21, #8]
  423c6c:	mov	w0, wzr
  423c70:	str	x8, [x23]
  423c74:	str	x23, [x21, #8]
  423c78:	b	423ce0 <wcrtomb@plt+0x1eec0>
  423c7c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423c80:	ldr	x8, [x8, #1008]
  423c84:	cbz	x8, 423c8c <wcrtomb@plt+0x1ee6c>
  423c88:	blr	x8
  423c8c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423c90:	add	x1, x1, #0x2a6
  423c94:	mov	w2, #0x5                   	// #5
  423c98:	mov	x0, xzr
  423c9c:	bl	404bf0 <dcgettext@plt>
  423ca0:	ldp	x8, x1, [x19]
  423ca4:	mov	x21, x0
  423ca8:	mov	w2, wzr
  423cac:	mov	x0, x8
  423cb0:	bl	418528 <wcrtomb@plt+0x13708>
  423cb4:	mov	x22, x0
  423cb8:	mov	x0, x20
  423cbc:	bl	43c05c <argp_usage@@Base+0xa460>
  423cc0:	mov	x4, x0
  423cc4:	mov	w0, wzr
  423cc8:	mov	w1, wzr
  423ccc:	mov	x2, x21
  423cd0:	mov	x3, x22
  423cd4:	bl	4041f0 <error@plt>
  423cd8:	str	xzr, [x19, #8]
  423cdc:	mov	w0, #0x1                   	// #1
  423ce0:	ldp	x20, x19, [sp, #176]
  423ce4:	ldp	x22, x21, [sp, #160]
  423ce8:	ldr	x23, [sp, #144]
  423cec:	ldp	x29, x30, [sp, #128]
  423cf0:	add	sp, sp, #0xc0
  423cf4:	ret
  423cf8:	mov	x0, x20
  423cfc:	bl	4286a4 <wcrtomb@plt+0x23884>
  423d00:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423d04:	ldr	x8, [x8, #1008]
  423d08:	cbz	x8, 423d10 <wcrtomb@plt+0x1eef0>
  423d0c:	blr	x8
  423d10:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423d14:	add	x1, x1, #0x28b
  423d18:	mov	w2, #0x5                   	// #5
  423d1c:	mov	x0, xzr
  423d20:	bl	404bf0 <dcgettext@plt>
  423d24:	mov	x2, x0
  423d28:	mov	w0, wzr
  423d2c:	mov	w1, wzr
  423d30:	bl	4041f0 <error@plt>
  423d34:	mov	w0, #0x2                   	// #2
  423d38:	bl	421198 <wcrtomb@plt+0x1c378>
  423d3c:	stp	x29, x30, [sp, #-32]!
  423d40:	stp	x20, x19, [sp, #16]
  423d44:	adrp	x20, 453000 <_obstack_memory_used@@Base+0x14da0>
  423d48:	mov	x19, x0
  423d4c:	add	x20, x20, #0xc70
  423d50:	mov	x29, sp
  423d54:	ldur	x0, [x20, #-8]
  423d58:	mov	x1, x19
  423d5c:	bl	404920 <strcmp@plt>
  423d60:	cbz	w0, 423dbc <wcrtomb@plt+0x1ef9c>
  423d64:	ldr	x8, [x20, #8]
  423d68:	add	x20, x20, #0x10
  423d6c:	cbnz	x8, 423d54 <wcrtomb@plt+0x1ef34>
  423d70:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423d74:	ldr	x8, [x8, #1008]
  423d78:	cbz	x8, 423d80 <wcrtomb@plt+0x1ef60>
  423d7c:	blr	x8
  423d80:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423d84:	add	x1, x1, #0x2dd
  423d88:	mov	w2, #0x5                   	// #5
  423d8c:	mov	x0, xzr
  423d90:	bl	404bf0 <dcgettext@plt>
  423d94:	mov	x20, x0
  423d98:	mov	x0, x19
  423d9c:	bl	43beac <argp_usage@@Base+0xa2b0>
  423da0:	mov	x3, x0
  423da4:	mov	w0, wzr
  423da8:	mov	w1, wzr
  423dac:	mov	x2, x20
  423db0:	bl	4041f0 <error@plt>
  423db4:	mov	w0, #0x2                   	// #2
  423db8:	bl	421198 <wcrtomb@plt+0x1c378>
  423dbc:	ldr	w8, [x20]
  423dc0:	ldp	x20, x19, [sp, #16]
  423dc4:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  423dc8:	str	w8, [x9, #816]
  423dcc:	ldp	x29, x30, [sp], #32
  423dd0:	ret
  423dd4:	sub	sp, sp, #0x40
  423dd8:	stp	x29, x30, [sp, #16]
  423ddc:	stp	x20, x19, [sp, #48]
  423de0:	add	x29, sp, #0x10
  423de4:	mov	x19, x1
  423de8:	mov	x8, #0xffffffffffffffff    	// #-1
  423dec:	mov	w1, #0x3a                  	// #58
  423df0:	str	x21, [sp, #32]
  423df4:	mov	x20, x0
  423df8:	str	x8, [x29, #24]
  423dfc:	bl	404a70 <strchr@plt>
  423e00:	cbz	x0, 423e4c <wcrtomb@plt+0x1f02c>
  423e04:	mov	x21, x0
  423e08:	strb	wzr, [x21], #1
  423e0c:	ldrb	w8, [x20]
  423e10:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x17da0>
  423e14:	add	x4, x4, #0xd3e
  423e18:	add	x1, sp, #0x8
  423e1c:	cmp	w8, #0x0
  423e20:	add	x3, x29, #0x18
  423e24:	mov	w2, #0xa                   	// #10
  423e28:	mov	x0, x21
  423e2c:	csel	x20, xzr, x20, eq  // eq = none
  423e30:	bl	43d428 <argp_usage@@Base+0xb82c>
  423e34:	ldr	w8, [x29, #28]
  423e38:	orr	w8, w0, w8
  423e3c:	cmp	w8, #0x0
  423e40:	csel	x8, xzr, x21, eq  // eq = none
  423e44:	cbz	x8, 423ebc <wcrtomb@plt+0x1f09c>
  423e48:	b	423ee4 <wcrtomb@plt+0x1f0c4>
  423e4c:	ldrb	w8, [x20]
  423e50:	sub	w8, w8, #0x30
  423e54:	cmp	w8, #0x9
  423e58:	b.hi	423e84 <wcrtomb@plt+0x1f064>  // b.pmore
  423e5c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x17da0>
  423e60:	add	x4, x4, #0xd3e
  423e64:	add	x1, sp, #0x8
  423e68:	mov	x3, sp
  423e6c:	mov	w2, #0xa                   	// #10
  423e70:	mov	x0, x20
  423e74:	bl	43d428 <argp_usage@@Base+0xb82c>
  423e78:	cmp	w0, #0x1
  423e7c:	b.ne	423e90 <wcrtomb@plt+0x1f070>  // b.any
  423e80:	b	423eb0 <wcrtomb@plt+0x1f090>
  423e84:	mov	w0, #0x4                   	// #4
  423e88:	cmp	w0, #0x1
  423e8c:	b.eq	423eb0 <wcrtomb@plt+0x1f090>  // b.none
  423e90:	cbnz	w0, 423edc <wcrtomb@plt+0x1f0bc>
  423e94:	ldr	x9, [sp]
  423e98:	lsr	x8, x9, #32
  423e9c:	cbnz	x8, 423eb0 <wcrtomb@plt+0x1f090>
  423ea0:	mov	x20, xzr
  423ea4:	str	x9, [x29, #24]
  423ea8:	cbz	x8, 423ebc <wcrtomb@plt+0x1f09c>
  423eac:	b	423ee4 <wcrtomb@plt+0x1f0c4>
  423eb0:	mov	x8, x20
  423eb4:	mov	x20, xzr
  423eb8:	cbnz	x8, 423ee4 <wcrtomb@plt+0x1f0c4>
  423ebc:	cbz	x20, 423ec4 <wcrtomb@plt+0x1f0a4>
  423ec0:	str	x20, [x19]
  423ec4:	ldr	x0, [x29, #24]
  423ec8:	ldp	x20, x19, [sp, #48]
  423ecc:	ldr	x21, [sp, #32]
  423ed0:	ldp	x29, x30, [sp, #16]
  423ed4:	add	sp, sp, #0x40
  423ed8:	ret
  423edc:	mov	x8, xzr
  423ee0:	cbz	x8, 423ebc <wcrtomb@plt+0x1f09c>
  423ee4:	mov	x19, x8
  423ee8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423eec:	ldr	x8, [x8, #1008]
  423ef0:	cbz	x8, 423ef8 <wcrtomb@plt+0x1f0d8>
  423ef4:	blr	x8
  423ef8:	mov	x0, x19
  423efc:	bl	43beac <argp_usage@@Base+0xa2b0>
  423f00:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423f04:	mov	x19, x0
  423f08:	add	x1, x1, #0x2f8
  423f0c:	mov	w2, #0x5                   	// #5
  423f10:	mov	x0, xzr
  423f14:	bl	404bf0 <dcgettext@plt>
  423f18:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  423f1c:	mov	x4, x0
  423f20:	add	x2, x2, #0x5d1
  423f24:	mov	w0, wzr
  423f28:	mov	w1, wzr
  423f2c:	mov	x3, x19
  423f30:	bl	4041f0 <error@plt>
  423f34:	bl	40dda4 <wcrtomb@plt+0x8f84>
  423f38:	stp	x29, x30, [sp, #-48]!
  423f3c:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  423f40:	ldr	x1, [x8, #3224]
  423f44:	stp	x20, x19, [sp, #32]
  423f48:	mov	x19, x0
  423f4c:	str	x21, [sp, #16]
  423f50:	mov	x29, sp
  423f54:	cbz	x1, 423f80 <wcrtomb@plt+0x1f160>
  423f58:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x1ada0>
  423f5c:	mov	x20, xzr
  423f60:	add	x21, x21, #0xc98
  423f64:	mov	x0, x19
  423f68:	bl	404920 <strcmp@plt>
  423f6c:	cbz	w0, 423fc4 <wcrtomb@plt+0x1f1a4>
  423f70:	add	x8, x21, x20, lsl #3
  423f74:	ldr	x1, [x8, #8]
  423f78:	add	x20, x20, #0x1
  423f7c:	cbnz	x1, 423f64 <wcrtomb@plt+0x1f144>
  423f80:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  423f84:	ldr	x8, [x8, #1008]
  423f88:	cbz	x8, 423f90 <wcrtomb@plt+0x1f170>
  423f8c:	blr	x8
  423f90:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  423f94:	add	x1, x1, #0x312
  423f98:	mov	w2, #0x5                   	// #5
  423f9c:	mov	x0, xzr
  423fa0:	bl	404bf0 <dcgettext@plt>
  423fa4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  423fa8:	ldr	x4, [x8, #3544]
  423fac:	mov	x2, x0
  423fb0:	mov	w0, wzr
  423fb4:	mov	w1, wzr
  423fb8:	mov	x3, x19
  423fbc:	bl	4041f0 <error@plt>
  423fc0:	bl	40dda4 <wcrtomb@plt+0x8f84>
  423fc4:	mov	x0, xzr
  423fc8:	mov	w1, w20
  423fcc:	bl	43abd4 <argp_usage@@Base+0x8fd8>
  423fd0:	ldp	x20, x19, [sp, #32]
  423fd4:	ldr	x21, [sp, #16]
  423fd8:	ldp	x29, x30, [sp], #48
  423fdc:	ret
  423fe0:	sub	sp, sp, #0xf0
  423fe4:	adrp	x3, 43d000 <argp_usage@@Base+0xb404>
  423fe8:	adrp	x4, 404000 <mbrtowc@plt-0x100>
  423fec:	stp	x20, x19, [sp, #224]
  423ff0:	mov	x19, x1
  423ff4:	mov	x20, x0
  423ff8:	add	x3, x3, #0x1c4
  423ffc:	add	x4, x4, #0x9d0
  424000:	add	x0, sp, #0x38
  424004:	mov	x1, xzr
  424008:	mov	x2, xzr
  42400c:	stp	x29, x30, [sp, #144]
  424010:	str	x27, [sp, #160]
  424014:	stp	x26, x25, [sp, #176]
  424018:	stp	x24, x23, [sp, #192]
  42401c:	stp	x22, x21, [sp, #208]
  424020:	add	x29, sp, #0x90
  424024:	bl	43df40 <_obstack_begin@@Base>
  424028:	ldrb	w8, [x19]
  42402c:	cbz	w8, 4242a8 <wcrtomb@plt+0x1f488>
  424030:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x17da0>
  424034:	adrp	x22, 456000 <_obstack_memory_used@@Base+0x17da0>
  424038:	add	x21, x21, #0xdc8
  42403c:	add	x22, x22, #0x35b
  424040:	b	424060 <wcrtomb@plt+0x1f240>
  424044:	ldrb	w8, [x19], #1
  424048:	ldr	x9, [sp, #80]
  42404c:	add	x10, x9, #0x1
  424050:	str	x10, [sp, #80]
  424054:	strb	w8, [x9]
  424058:	ldrb	w8, [x19]
  42405c:	cbz	w8, 4242a8 <wcrtomb@plt+0x1f488>
  424060:	mov	x0, x19
  424064:	mov	x1, x21
  424068:	bl	404cc0 <strcspn@plt>
  42406c:	mov	x23, x0
  424070:	mov	w1, #0x3d                  	// #61
  424074:	mov	x0, x19
  424078:	mov	x2, x23
  42407c:	bl	404b70 <memchr@plt>
  424080:	cbz	x0, 4241a0 <wcrtomb@plt+0x1f380>
  424084:	ldp	x9, x8, [sp, #80]
  424088:	sub	x10, x0, x19
  42408c:	add	x24, x10, #0x1
  424090:	mov	x26, x0
  424094:	sub	x8, x8, x9
  424098:	cmp	x8, x24
  42409c:	b.cs	4240ac <wcrtomb@plt+0x1f28c>  // b.hs, b.nlast
  4240a0:	add	x0, sp, #0x38
  4240a4:	mov	x1, x24
  4240a8:	bl	43e028 <_obstack_newchunk@@Base>
  4240ac:	ldr	x0, [sp, #80]
  4240b0:	mov	x1, x19
  4240b4:	mov	x2, x24
  4240b8:	bl	404110 <memcpy@plt>
  4240bc:	ldr	x8, [sp, #80]
  4240c0:	mov	x25, x26
  4240c4:	add	x8, x8, x24
  4240c8:	str	x8, [sp, #80]
  4240cc:	ldrb	w27, [x25, #1]!
  4240d0:	sub	x24, x23, x24
  4240d4:	cbz	x27, 4241ec <wcrtomb@plt+0x1f3cc>
  4240d8:	bl	404950 <__ctype_b_loc@plt>
  4240dc:	ldr	x8, [x0]
  4240e0:	ldrh	w9, [x8, x27, lsl #1]
  4240e4:	tbz	w9, #13, 42411c <wcrtomb@plt+0x1f2fc>
  4240e8:	mov	x9, xzr
  4240ec:	add	x10, x26, x9
  4240f0:	ldrb	w27, [x10, #2]
  4240f4:	cbz	x27, 4241d8 <wcrtomb@plt+0x1f3b8>
  4240f8:	ldrh	w10, [x8, x27, lsl #1]
  4240fc:	add	x9, x9, #0x1
  424100:	tbnz	w10, #13, 4240ec <wcrtomb@plt+0x1f2cc>
  424104:	add	x8, x23, x19
  424108:	mvn	x10, x9
  42410c:	sub	x8, x8, x26
  424110:	add	x26, x26, x9
  424114:	add	x24, x10, x8
  424118:	add	x25, x26, #0x1
  42411c:	cmp	w27, #0x7b
  424120:	b.ne	4241ec <wcrtomb@plt+0x1f3cc>  // b.any
  424124:	ldrb	w8, [x26, x24]
  424128:	cmp	w8, #0x7d
  42412c:	b.ne	4241ec <wcrtomb@plt+0x1f3cc>  // b.any
  424130:	mov	x0, x24
  424134:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  424138:	add	x1, x26, #0x2
  42413c:	sub	x26, x24, #0x2
  424140:	mov	x2, x26
  424144:	mov	x27, x0
  424148:	bl	404110 <memcpy@plt>
  42414c:	add	x3, sp, #0x28
  424150:	mov	x0, x20
  424154:	mov	x1, x22
  424158:	mov	x2, x27
  42415c:	strb	wzr, [x27, x26]
  424160:	bl	423bcc <wcrtomb@plt+0x1edac>
  424164:	cbz	w0, 42424c <wcrtomb@plt+0x1f42c>
  424168:	ldp	x9, x8, [sp, #80]
  42416c:	sub	x8, x8, x9
  424170:	cmp	x8, x24
  424174:	b.cs	424184 <wcrtomb@plt+0x1f364>  // b.hs, b.nlast
  424178:	add	x0, sp, #0x38
  42417c:	mov	x1, x24
  424180:	bl	43e028 <_obstack_newchunk@@Base>
  424184:	ldr	x0, [sp, #80]
  424188:	mov	x1, x25
  42418c:	mov	x2, x24
  424190:	bl	404110 <memcpy@plt>
  424194:	ldr	x8, [sp, #80]
  424198:	add	x8, x8, x24
  42419c:	b	424298 <wcrtomb@plt+0x1f478>
  4241a0:	ldp	x9, x8, [sp, #80]
  4241a4:	sub	x8, x8, x9
  4241a8:	cmp	x8, x23
  4241ac:	b.cs	4241bc <wcrtomb@plt+0x1f39c>  // b.hs, b.nlast
  4241b0:	add	x0, sp, #0x38
  4241b4:	mov	x1, x23
  4241b8:	bl	43e028 <_obstack_newchunk@@Base>
  4241bc:	ldr	x0, [sp, #80]
  4241c0:	mov	x1, x19
  4241c4:	mov	x2, x23
  4241c8:	bl	404110 <memcpy@plt>
  4241cc:	ldr	x8, [sp, #80]
  4241d0:	add	x8, x8, x23
  4241d4:	b	424220 <wcrtomb@plt+0x1f400>
  4241d8:	add	x8, x23, x19
  4241dc:	sub	x8, x8, x26
  4241e0:	sub	x8, x8, x9
  4241e4:	sub	x24, x8, #0x2
  4241e8:	add	x25, x10, #0x2
  4241ec:	ldp	x9, x8, [sp, #80]
  4241f0:	sub	x8, x8, x9
  4241f4:	cmp	x8, x24
  4241f8:	b.cs	424208 <wcrtomb@plt+0x1f3e8>  // b.hs, b.nlast
  4241fc:	add	x0, sp, #0x38
  424200:	mov	x1, x24
  424204:	bl	43e028 <_obstack_newchunk@@Base>
  424208:	ldr	x0, [sp, #80]
  42420c:	mov	x1, x25
  424210:	mov	x2, x24
  424214:	bl	404110 <memcpy@plt>
  424218:	ldr	x8, [sp, #80]
  42421c:	add	x8, x8, x24
  424220:	str	x8, [sp, #80]
  424224:	add	x19, x19, x23
  424228:	ldrb	w8, [x19]
  42422c:	cbz	w8, 424058 <wcrtomb@plt+0x1f238>
  424230:	ldp	x9, x8, [sp, #80]
  424234:	cmp	x8, x9
  424238:	b.ne	424044 <wcrtomb@plt+0x1f224>  // b.any
  42423c:	add	x0, sp, #0x38
  424240:	mov	w1, #0x1                   	// #1
  424244:	bl	43e028 <_obstack_newchunk@@Base>
  424248:	b	424044 <wcrtomb@plt+0x1f224>
  42424c:	ldp	x0, x1, [sp, #40]
  424250:	add	x2, sp, #0x8
  424254:	bl	419d94 <wcrtomb@plt+0x14f74>
  424258:	mov	x24, x0
  42425c:	bl	404190 <strlen@plt>
  424260:	ldp	x9, x8, [sp, #80]
  424264:	mov	x25, x0
  424268:	sub	x8, x8, x9
  42426c:	cmp	x8, x0
  424270:	b.cs	424280 <wcrtomb@plt+0x1f460>  // b.hs, b.nlast
  424274:	add	x0, sp, #0x38
  424278:	mov	x1, x25
  42427c:	bl	43e028 <_obstack_newchunk@@Base>
  424280:	ldr	x0, [sp, #80]
  424284:	mov	x1, x24
  424288:	mov	x2, x25
  42428c:	bl	404110 <memcpy@plt>
  424290:	ldr	x8, [sp, #80]
  424294:	add	x8, x8, x25
  424298:	mov	x0, x27
  42429c:	str	x8, [sp, #80]
  4242a0:	bl	4049d0 <free@plt>
  4242a4:	b	424224 <wcrtomb@plt+0x1f404>
  4242a8:	ldp	x9, x8, [sp, #80]
  4242ac:	cmp	x8, x9
  4242b0:	b.ne	4242c0 <wcrtomb@plt+0x1f4a0>  // b.any
  4242b4:	add	x0, sp, #0x38
  4242b8:	mov	w1, #0x1                   	// #1
  4242bc:	bl	43e028 <_obstack_newchunk@@Base>
  4242c0:	ldr	x8, [sp, #80]
  4242c4:	add	x9, x8, #0x1
  4242c8:	str	x9, [sp, #80]
  4242cc:	strb	wzr, [x8]
  4242d0:	ldp	x0, x8, [sp, #72]
  4242d4:	cmp	x8, x0
  4242d8:	b.ne	4242e8 <wcrtomb@plt+0x1f4c8>  // b.any
  4242dc:	ldrb	w8, [sp, #136]
  4242e0:	orr	w8, w8, #0x2
  4242e4:	strb	w8, [sp, #136]
  4242e8:	ldr	x9, [sp, #104]
  4242ec:	ldp	x10, x8, [sp, #80]
  4242f0:	ldr	x11, [sp, #64]
  4242f4:	add	x10, x9, x10
  4242f8:	bic	x9, x10, x9
  4242fc:	sub	x10, x9, x11
  424300:	sub	x11, x8, x11
  424304:	cmp	x10, x11
  424308:	str	x9, [sp, #80]
  42430c:	b.ls	424314 <wcrtomb@plt+0x1f4f4>  // b.plast
  424310:	str	x8, [sp, #80]
  424314:	ldr	x8, [sp, #80]
  424318:	str	x8, [sp, #72]
  42431c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  424320:	mov	x19, x0
  424324:	add	x0, sp, #0x38
  424328:	mov	x1, xzr
  42432c:	bl	43e1d8 <_obstack_free@@Base>
  424330:	mov	x0, x19
  424334:	ldp	x20, x19, [sp, #224]
  424338:	ldp	x22, x21, [sp, #208]
  42433c:	ldp	x24, x23, [sp, #192]
  424340:	ldp	x26, x25, [sp, #176]
  424344:	ldr	x27, [sp, #160]
  424348:	ldp	x29, x30, [sp, #144]
  42434c:	add	sp, sp, #0xf0
  424350:	ret
  424354:	stp	x29, x30, [sp, #-16]!
  424358:	mov	w0, #0x6                   	// #6
  42435c:	mov	x29, sp
  424360:	bl	421324 <wcrtomb@plt+0x1c504>
  424364:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  424368:	add	x8, x8, #0xc98
  42436c:	ldr	x4, [x8, #56]
  424370:	mov	x1, x0
  424374:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  424378:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  42437c:	adrp	x5, 456000 <_obstack_memory_used@@Base+0x17da0>
  424380:	add	x0, x0, #0x368
  424384:	add	x2, x2, #0xabd
  424388:	add	x5, x5, #0x3a2
  42438c:	mov	w3, #0x14                  	// #20
  424390:	bl	43d794 <argp_usage@@Base+0xbb98>
  424394:	ldp	x29, x30, [sp], #16
  424398:	ret
  42439c:	stp	x29, x30, [sp, #-16]!
  4243a0:	mov	x29, sp
  4243a4:	bl	421394 <wcrtomb@plt+0x1c574>
  4243a8:	bl	424498 <wcrtomb@plt+0x1f678>
  4243ac:	ldp	x29, x30, [sp], #16
  4243b0:	ret
  4243b4:	stp	x29, x30, [sp, #-32]!
  4243b8:	str	x19, [sp, #16]
  4243bc:	mov	w19, w0
  4243c0:	cmp	w0, #0x1
  4243c4:	mov	x29, sp
  4243c8:	b.ne	4243d8 <wcrtomb@plt+0x1f5b8>  // b.any
  4243cc:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x16da0>
  4243d0:	add	x0, x0, #0x54c
  4243d4:	bl	423d3c <wcrtomb@plt+0x1ef1c>
  4243d8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4243dc:	str	w19, [x8, #656]
  4243e0:	ldr	x19, [sp, #16]
  4243e4:	ldp	x29, x30, [sp], #32
  4243e8:	ret
  4243ec:	stp	x29, x30, [sp, #-16]!
  4243f0:	ldr	w8, [x0]
  4243f4:	ldr	w9, [x1]
  4243f8:	mov	x29, sp
  4243fc:	cmp	w8, w9
  424400:	b.ne	424418 <wcrtomb@plt+0x1f5f8>  // b.any
  424404:	cmp	w8, #0x1
  424408:	b.ne	424424 <wcrtomb@plt+0x1f604>  // b.any
  42440c:	mov	w0, #0x1                   	// #1
  424410:	ldp	x29, x30, [sp], #16
  424414:	ret
  424418:	mov	w0, wzr
  42441c:	ldp	x29, x30, [sp], #16
  424420:	ret
  424424:	ldr	x0, [x0, #8]
  424428:	ldr	x1, [x1, #8]
  42442c:	bl	404920 <strcmp@plt>
  424430:	cmp	w0, #0x0
  424434:	cset	w0, eq  // eq = none
  424438:	ldp	x29, x30, [sp], #16
  42443c:	ret
  424440:	stp	x29, x30, [sp, #-32]!
  424444:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  424448:	ldr	x8, [x8, #1008]
  42444c:	stp	x20, x19, [sp, #16]
  424450:	mov	x19, x1
  424454:	mov	x20, x0
  424458:	mov	x29, sp
  42445c:	cbz	x8, 424464 <wcrtomb@plt+0x1f644>
  424460:	blr	x8
  424464:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  424468:	add	x1, x1, #0x26d
  42446c:	mov	w2, #0x5                   	// #5
  424470:	mov	x0, xzr
  424474:	bl	404bf0 <dcgettext@plt>
  424478:	mov	x2, x0
  42447c:	mov	w0, wzr
  424480:	mov	w1, wzr
  424484:	mov	x3, x20
  424488:	mov	x4, x19
  42448c:	bl	4041f0 <error@plt>
  424490:	mov	w0, #0x2                   	// #2
  424494:	bl	421198 <wcrtomb@plt+0x1c378>
  424498:	stp	x29, x30, [sp, #-16]!
  42449c:	adrp	x1, 424000 <wcrtomb@plt+0x1f1e0>
  4244a0:	add	x1, x1, #0x4b4
  4244a4:	mov	x29, sp
  4244a8:	bl	404440 <signal@plt>
  4244ac:	ldp	x29, x30, [sp], #16
  4244b0:	ret
  4244b4:	stp	x29, x30, [sp, #-32]!
  4244b8:	str	x19, [sp, #16]
  4244bc:	mov	x29, sp
  4244c0:	mov	w19, w0
  4244c4:	bl	405108 <wcrtomb@plt+0x2e8>
  4244c8:	bl	40553c <wcrtomb@plt+0x71c>
  4244cc:	adrp	x1, 424000 <wcrtomb@plt+0x1f1e0>
  4244d0:	add	x1, x1, #0x4b4
  4244d4:	mov	w0, w19
  4244d8:	bl	404440 <signal@plt>
  4244dc:	ldr	x19, [sp, #16]
  4244e0:	ldp	x29, x30, [sp], #32
  4244e4:	ret
  4244e8:	stp	x29, x30, [sp, #-80]!
  4244ec:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4244f0:	stp	x20, x19, [sp, #64]
  4244f4:	ldr	x20, [x8, #3224]
  4244f8:	str	x25, [sp, #16]
  4244fc:	stp	x24, x23, [sp, #32]
  424500:	stp	x22, x21, [sp, #48]
  424504:	mov	x29, sp
  424508:	cbz	x20, 4245cc <wcrtomb@plt+0x1f7ac>
  42450c:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  424510:	add	x8, x8, #0xc98
  424514:	mov	x19, x0
  424518:	mov	w22, #0x2020                	// #8224
  42451c:	add	x23, x8, #0x8
  424520:	mov	w24, #0xa                   	// #10
  424524:	b	424540 <wcrtomb@plt+0x1f720>
  424528:	ldr	x8, [x19, #24]
  42452c:	add	x9, x8, #0x1
  424530:	str	x9, [x19, #24]
  424534:	strb	w24, [x8]
  424538:	ldr	x20, [x23], #8
  42453c:	cbz	x20, 4245cc <wcrtomb@plt+0x1f7ac>
  424540:	ldp	x9, x8, [x19, #24]
  424544:	sub	x8, x8, x9
  424548:	cmp	x8, #0x1
  42454c:	b.hi	42455c <wcrtomb@plt+0x1f73c>  // b.pmore
  424550:	mov	w1, #0x2                   	// #2
  424554:	mov	x0, x19
  424558:	bl	43e028 <_obstack_newchunk@@Base>
  42455c:	ldr	x8, [x19, #24]
  424560:	mov	x0, x20
  424564:	strh	w22, [x8]
  424568:	ldr	x8, [x19, #24]
  42456c:	add	x25, x8, #0x2
  424570:	str	x25, [x19, #24]
  424574:	bl	404190 <strlen@plt>
  424578:	ldr	x8, [x19, #32]
  42457c:	mov	x21, x0
  424580:	sub	x8, x8, x25
  424584:	cmp	x8, x0
  424588:	b.cs	424598 <wcrtomb@plt+0x1f778>  // b.hs, b.nlast
  42458c:	mov	x0, x19
  424590:	mov	x1, x21
  424594:	bl	43e028 <_obstack_newchunk@@Base>
  424598:	ldr	x0, [x19, #24]
  42459c:	mov	x1, x20
  4245a0:	mov	x2, x21
  4245a4:	bl	404110 <memcpy@plt>
  4245a8:	ldp	x8, x9, [x19, #24]
  4245ac:	add	x8, x8, x21
  4245b0:	cmp	x9, x8
  4245b4:	str	x8, [x19, #24]
  4245b8:	b.ne	424528 <wcrtomb@plt+0x1f708>  // b.any
  4245bc:	mov	w1, #0x1                   	// #1
  4245c0:	mov	x0, x19
  4245c4:	bl	43e028 <_obstack_newchunk@@Base>
  4245c8:	b	424528 <wcrtomb@plt+0x1f708>
  4245cc:	ldp	x20, x19, [sp, #64]
  4245d0:	ldp	x22, x21, [sp, #48]
  4245d4:	ldp	x24, x23, [sp, #32]
  4245d8:	ldr	x25, [sp, #16]
  4245dc:	ldp	x29, x30, [sp], #80
  4245e0:	ret
  4245e4:	stp	x29, x30, [sp, #-32]!
  4245e8:	adrp	x8, 46d000 <_obstack_memory_used@@Base+0x2eda0>
  4245ec:	ldr	x8, [x8, #408]
  4245f0:	stp	x20, x19, [sp, #16]
  4245f4:	mov	w19, w0
  4245f8:	mov	w1, w19
  4245fc:	mov	x0, x8
  424600:	mov	x29, sp
  424604:	bl	42488c <wcrtomb@plt+0x1fa6c>
  424608:	cbnz	x0, 424640 <wcrtomb@plt+0x1f820>
  42460c:	adrp	x8, 46d000 <_obstack_memory_used@@Base+0x2eda0>
  424610:	ldr	x9, [x8, #440]
  424614:	cbz	x9, 42463c <wcrtomb@plt+0x1f81c>
  424618:	ldr	x8, [x9]
  42461c:	cbz	x8, 42463c <wcrtomb@plt+0x1f81c>
  424620:	add	x20, x9, #0x20
  424624:	ldr	x0, [x8]
  424628:	mov	w1, w19
  42462c:	bl	42488c <wcrtomb@plt+0x1fa6c>
  424630:	cbnz	x0, 424640 <wcrtomb@plt+0x1f820>
  424634:	ldr	x8, [x20], #32
  424638:	cbnz	x8, 424624 <wcrtomb@plt+0x1f804>
  42463c:	mov	x0, xzr
  424640:	ldp	x20, x19, [sp, #16]
  424644:	ldp	x29, x30, [sp], #32
  424648:	ret
  42464c:	sub	sp, sp, #0x130
  424650:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  424654:	add	x0, x0, #0x849
  424658:	stp	x29, x30, [sp, #272]
  42465c:	stp	x28, x19, [sp, #288]
  424660:	add	x29, sp, #0x110
  424664:	bl	404d30 <getenv@plt>
  424668:	adrp	x8, 454000 <_obstack_memory_used@@Base+0x15da0>
  42466c:	add	x8, x8, #0x80
  424670:	ldp	q0, q1, [x8]
  424674:	stp	q0, q1, [sp]
  424678:	cbz	x0, 4246d0 <wcrtomb@plt+0x1f8b0>
  42467c:	mov	w2, #0xe46                 	// #3654
  424680:	mov	w8, #0x1                   	// #1
  424684:	add	x1, sp, #0x28
  424688:	movk	w2, #0x200, lsl #16
  42468c:	str	x8, [sp, #56]
  424690:	bl	429ff0 <wcrtomb@plt+0x251d0>
  424694:	cbnz	w0, 4246e0 <wcrtomb@plt+0x1f8c0>
  424698:	ldr	x8, [sp, #40]
  42469c:	cbz	x8, 4246c8 <wcrtomb@plt+0x1f8a8>
  4246a0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4246a4:	ldr	x9, [x9, #3544]
  4246a8:	ldr	x10, [sp, #48]
  4246ac:	mov	x2, sp
  4246b0:	str	x9, [x10]
  4246b4:	ldr	w9, [sp, #56]
  4246b8:	ldr	x1, [sp, #48]
  4246bc:	add	w0, w9, w8
  4246c0:	bl	421440 <wcrtomb@plt+0x1c620>
  4246c4:	str	xzr, [sp, #40]
  4246c8:	add	x0, sp, #0x28
  4246cc:	bl	42a140 <wcrtomb@plt+0x25320>
  4246d0:	ldp	x28, x19, [sp, #288]
  4246d4:	ldp	x29, x30, [sp, #272]
  4246d8:	add	sp, sp, #0x130
  4246dc:	ret
  4246e0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4246e4:	ldr	x8, [x8, #1008]
  4246e8:	cbz	x8, 4246f0 <wcrtomb@plt+0x1f8d0>
  4246ec:	blr	x8
  4246f0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4246f4:	add	x1, x1, #0x855
  4246f8:	mov	w2, #0x5                   	// #5
  4246fc:	mov	x0, xzr
  424700:	bl	404bf0 <dcgettext@plt>
  424704:	mov	x19, x0
  424708:	add	x0, sp, #0x28
  42470c:	bl	42a218 <wcrtomb@plt+0x253f8>
  424710:	mov	x3, x0
  424714:	mov	w0, wzr
  424718:	mov	w1, wzr
  42471c:	mov	x2, x19
  424720:	bl	4041f0 <error@plt>
  424724:	bl	40dda4 <wcrtomb@plt+0x8f84>
  424728:	stp	x29, x30, [sp, #-16]!
  42472c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  424730:	ldr	w8, [x8, #816]
  424734:	mov	w9, #0x1                   	// #1
  424738:	mov	x29, sp
  42473c:	lsl	w8, w9, w8
  424740:	mov	w9, #0x54                  	// #84
  424744:	tst	w8, w9
  424748:	b.eq	424754 <wcrtomb@plt+0x1f934>  // b.none
  42474c:	ldp	x29, x30, [sp], #16
  424750:	ret
  424754:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  424758:	ldr	x8, [x8, #1008]
  42475c:	cbz	x8, 424764 <wcrtomb@plt+0x1f944>
  424760:	blr	x8
  424764:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  424768:	add	x1, x1, #0x872
  42476c:	mov	w2, #0x5                   	// #5
  424770:	mov	x0, xzr
  424774:	bl	404bf0 <dcgettext@plt>
  424778:	mov	x2, x0
  42477c:	mov	w0, wzr
  424780:	mov	w1, wzr
  424784:	bl	4041f0 <error@plt>
  424788:	mov	w0, #0x2                   	// #2
  42478c:	bl	421198 <wcrtomb@plt+0x1c378>
  424790:	stp	x29, x30, [sp, #-16]!
  424794:	mov	x29, sp
  424798:	bl	4247b4 <wcrtomb@plt+0x1f994>
  42479c:	cbz	x0, 4247ac <wcrtomb@plt+0x1f98c>
  4247a0:	ldr	w8, [x0]
  4247a4:	cmp	w8, #0x1
  4247a8:	cset	w0, eq  // eq = none
  4247ac:	ldp	x29, x30, [sp], #16
  4247b0:	ret
  4247b4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4247b8:	add	x8, x8, #0xc48
  4247bc:	ldr	x0, [x8, w0, sxtw #3]
  4247c0:	ret
  4247c4:	stp	x29, x30, [sp, #-64]!
  4247c8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4247cc:	stp	x22, x21, [sp, #32]
  4247d0:	ldr	x22, [x8, #3088]
  4247d4:	stp	x24, x23, [sp, #16]
  4247d8:	stp	x20, x19, [sp, #48]
  4247dc:	mov	x29, sp
  4247e0:	cbz	x22, 424878 <wcrtomb@plt+0x1fa58>
  4247e4:	adrp	x19, 456000 <_obstack_memory_used@@Base+0x17da0>
  4247e8:	adrp	x23, 470000 <argp_program_version_hook@@Base+0x258>
  4247ec:	adrp	x24, 470000 <argp_program_version_hook@@Base+0x258>
  4247f0:	add	x19, x19, #0x8a5
  4247f4:	b	424834 <wcrtomb@plt+0x1fa14>
  4247f8:	mov	w2, #0x5                   	// #5
  4247fc:	mov	x0, xzr
  424800:	mov	x1, x19
  424804:	bl	404bf0 <dcgettext@plt>
  424808:	ldp	x3, x4, [x20, #24]
  42480c:	mov	x2, x0
  424810:	mov	w0, wzr
  424814:	mov	w1, wzr
  424818:	mov	x5, x21
  42481c:	bl	4041f0 <error@plt>
  424820:	ldr	x0, [x20, #32]
  424824:	bl	4049d0 <free@plt>
  424828:	mov	x0, x20
  42482c:	bl	4049d0 <free@plt>
  424830:	cbz	x22, 424878 <wcrtomb@plt+0x1fa58>
  424834:	mov	x20, x22
  424838:	ldr	w8, [x23, #644]
  42483c:	ldr	x22, [x22]
  424840:	cbz	w8, 424820 <wcrtomb@plt+0x1fa00>
  424844:	ldp	x0, x1, [x20, #8]
  424848:	mov	w2, #0x1                   	// #1
  42484c:	bl	418528 <wcrtomb@plt+0x13708>
  424850:	ldr	x8, [x20, #32]
  424854:	mov	x21, x0
  424858:	mov	x1, x21
  42485c:	mov	x0, x8
  424860:	bl	404920 <strcmp@plt>
  424864:	cbz	w0, 424820 <wcrtomb@plt+0x1fa00>
  424868:	ldr	x8, [x24, #1008]
  42486c:	cbz	x8, 4247f8 <wcrtomb@plt+0x1f9d8>
  424870:	blr	x8
  424874:	b	4247f8 <wcrtomb@plt+0x1f9d8>
  424878:	ldp	x20, x19, [sp, #48]
  42487c:	ldp	x22, x21, [sp, #32]
  424880:	ldp	x24, x23, [sp, #16]
  424884:	ldp	x29, x30, [sp], #64
  424888:	ret
  42488c:	ldr	x8, [x0]
  424890:	cbnz	x8, 4248b4 <wcrtomb@plt+0x1fa94>
  424894:	ldr	w8, [x0, #8]
  424898:	cbnz	w8, 4248b4 <wcrtomb@plt+0x1fa94>
  42489c:	ldr	x8, [x0, #16]
  4248a0:	cbnz	x8, 4248b4 <wcrtomb@plt+0x1fa94>
  4248a4:	ldr	w8, [x0, #24]
  4248a8:	cbnz	w8, 4248b4 <wcrtomb@plt+0x1fa94>
  4248ac:	ldr	x8, [x0, #32]
  4248b0:	cbz	x8, 4248d0 <wcrtomb@plt+0x1fab0>
  4248b4:	ldr	w8, [x0, #8]
  4248b8:	cmp	w8, w1
  4248bc:	b.eq	4248d4 <wcrtomb@plt+0x1fab4>  // b.none
  4248c0:	add	x0, x0, #0x30
  4248c4:	ldr	x8, [x0]
  4248c8:	cbnz	x8, 4248b4 <wcrtomb@plt+0x1fa94>
  4248cc:	b	424894 <wcrtomb@plt+0x1fa74>
  4248d0:	mov	x0, xzr
  4248d4:	ret
  4248d8:	stp	x29, x30, [sp, #-16]!
  4248dc:	mov	x29, sp
  4248e0:	ldrb	w8, [x0]
  4248e4:	cbz	w8, 4248f4 <wcrtomb@plt+0x1fad4>
  4248e8:	bl	4248fc <wcrtomb@plt+0x1fadc>
  4248ec:	ldrb	w8, [x0]
  4248f0:	cbnz	w8, 4248e8 <wcrtomb@plt+0x1fac8>
  4248f4:	ldp	x29, x30, [sp], #16
  4248f8:	ret
  4248fc:	stp	x29, x30, [sp, #-96]!
  424900:	stp	x28, x27, [sp, #16]
  424904:	stp	x26, x25, [sp, #32]
  424908:	stp	x24, x23, [sp, #48]
  42490c:	stp	x22, x21, [sp, #64]
  424910:	stp	x20, x19, [sp, #80]
  424914:	mov	x29, sp
  424918:	sub	sp, sp, #0x220
  42491c:	mov	x21, x0
  424920:	bl	4250d0 <wcrtomb@plt+0x202b0>
  424924:	ldrb	w8, [x21]
  424928:	cmp	w8, #0x73
  42492c:	b.ne	424ab4 <wcrtomb@plt+0x1fc94>  // b.any
  424930:	ldrb	w20, [x21, #1]
  424934:	ldrb	w8, [x21, #2]
  424938:	mov	x19, x0
  42493c:	mov	w26, #0x2                   	// #2
  424940:	cmp	w8, w20
  424944:	b.eq	424988 <wcrtomb@plt+0x1fb68>  // b.none
  424948:	cbz	w8, 424988 <wcrtomb@plt+0x1fb68>
  42494c:	mov	w26, #0x2                   	// #2
  424950:	and	w8, w8, #0xff
  424954:	cmp	w8, #0x5c
  424958:	b.ne	424970 <wcrtomb@plt+0x1fb50>  // b.any
  42495c:	sxtw	x8, w26
  424960:	add	x8, x8, #0x1
  424964:	ldrb	w9, [x21, x8]
  424968:	cmp	w9, #0x0
  42496c:	csel	w26, w26, w8, eq  // eq = none
  424970:	sxtw	x8, w26
  424974:	add	x26, x8, #0x1
  424978:	ldrb	w8, [x21, x26]
  42497c:	cmp	w8, w20
  424980:	b.eq	424988 <wcrtomb@plt+0x1fb68>  // b.none
  424984:	cbnz	w8, 424950 <wcrtomb@plt+0x1fb30>
  424988:	cmp	w8, w20
  42498c:	b.ne	424dcc <wcrtomb@plt+0x1ffac>  // b.any
  424990:	sxtw	x8, w26
  424994:	add	x28, x8, #0x1
  424998:	str	x8, [sp]
  42499c:	add	x8, x21, x28
  4249a0:	ldrb	w9, [x8]
  4249a4:	mov	w27, w28
  4249a8:	cmp	w9, w20
  4249ac:	b.eq	4249f0 <wcrtomb@plt+0x1fbd0>  // b.none
  4249b0:	cbz	w9, 4249f0 <wcrtomb@plt+0x1fbd0>
  4249b4:	and	w8, w9, #0xff
  4249b8:	cmp	w8, #0x5c
  4249bc:	b.ne	4249d4 <wcrtomb@plt+0x1fbb4>  // b.any
  4249c0:	sxtw	x8, w27
  4249c4:	add	x8, x8, #0x1
  4249c8:	ldrb	w9, [x21, x8]
  4249cc:	cmp	w9, #0x0
  4249d0:	csel	w27, w27, w8, eq  // eq = none
  4249d4:	sxtw	x8, w27
  4249d8:	add	x27, x8, #0x1
  4249dc:	ldrb	w9, [x21, x27]
  4249e0:	cmp	w9, w20
  4249e4:	b.eq	4249ec <wcrtomb@plt+0x1fbcc>  // b.none
  4249e8:	cbnz	w9, 4249b4 <wcrtomb@plt+0x1fb94>
  4249ec:	add	x8, x21, x27
  4249f0:	cmp	w9, w20
  4249f4:	b.ne	424dcc <wcrtomb@plt+0x1ffac>  // b.any
  4249f8:	str	wzr, [x19, #8]
  4249fc:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424a00:	ldr	w9, [x9, #424]
  424a04:	mov	x23, x19
  424a08:	mov	w22, wzr
  424a0c:	sub	x25, x29, #0x10
  424a10:	str	w9, [x23, #12]!
  424a14:	b	424a38 <wcrtomb@plt+0x1fc18>
  424a18:	sub	x1, x29, #0x10
  424a1c:	mov	x0, x24
  424a20:	mov	w2, wzr
  424a24:	bl	404180 <strtoul@plt>
  424a28:	str	w0, [x19, #16]
  424a2c:	ldr	x8, [x25]
  424a30:	sub	x8, x8, #0x1
  424a34:	str	x8, [x25]
  424a38:	add	x24, x8, #0x1
  424a3c:	str	x24, [x25]
  424a40:	ldrb	w1, [x8, #1]
  424a44:	sub	w9, w1, #0x30
  424a48:	cmp	w9, #0xa
  424a4c:	b.cc	424a18 <wcrtomb@plt+0x1fbf8>  // b.lo, b.ul, b.last
  424a50:	cmp	w1, #0x68
  424a54:	b.le	424a74 <wcrtomb@plt+0x1fc54>
  424a58:	cmp	w1, #0x69
  424a5c:	b.eq	424a88 <wcrtomb@plt+0x1fc68>  // b.none
  424a60:	cmp	w1, #0x78
  424a64:	b.ne	424aa0 <wcrtomb@plt+0x1fc80>  // b.any
  424a68:	ldr	x8, [x25]
  424a6c:	orr	w22, w22, #0x1
  424a70:	b	424a38 <wcrtomb@plt+0x1fc18>
  424a74:	cmp	w1, #0x67
  424a78:	b.ne	424a94 <wcrtomb@plt+0x1fc74>  // b.any
  424a7c:	mov	w8, #0x1                   	// #1
  424a80:	str	w8, [x19, #8]
  424a84:	b	424aac <wcrtomb@plt+0x1fc8c>
  424a88:	ldr	x8, [x25]
  424a8c:	orr	w22, w22, #0x2
  424a90:	b	424a38 <wcrtomb@plt+0x1fc18>
  424a94:	cbz	w1, 424b14 <wcrtomb@plt+0x1fcf4>
  424a98:	cmp	w1, #0x3b
  424a9c:	b.eq	424b0c <wcrtomb@plt+0x1fcec>  // b.none
  424aa0:	mov	x0, x23
  424aa4:	bl	425108 <wcrtomb@plt+0x202e8>
  424aa8:	cbnz	w0, 424de8 <wcrtomb@plt+0x1ffc8>
  424aac:	ldr	x8, [x25]
  424ab0:	b	424a38 <wcrtomb@plt+0x1fc18>
  424ab4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  424ab8:	add	x1, x1, #0x971
  424abc:	mov	w2, #0x6                   	// #6
  424ac0:	mov	x0, x21
  424ac4:	bl	4045a0 <strncmp@plt>
  424ac8:	cbnz	w0, 424dcc <wcrtomb@plt+0x1ffac>
  424acc:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424ad0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424ad4:	add	x19, x21, #0x6
  424ad8:	add	x20, x20, #0x1a8
  424adc:	str	wzr, [x8, #424]
  424ae0:	ldrb	w1, [x19]
  424ae4:	cbz	w1, 424d68 <wcrtomb@plt+0x1ff48>
  424ae8:	cmp	w1, #0x3b
  424aec:	b.eq	424d64 <wcrtomb@plt+0x1ff44>  // b.none
  424af0:	mov	x0, x20
  424af4:	bl	425108 <wcrtomb@plt+0x202e8>
  424af8:	cbnz	w0, 424d8c <wcrtomb@plt+0x1ff6c>
  424afc:	add	x19, x19, #0x1
  424b00:	ldrb	w1, [x19]
  424b04:	cbnz	w1, 424ae8 <wcrtomb@plt+0x1fcc8>
  424b08:	b	424d68 <wcrtomb@plt+0x1ff48>
  424b0c:	add	x8, x8, #0x2
  424b10:	str	x8, [x25]
  424b14:	sub	w8, w26, #0x1
  424b18:	sxtw	x0, w8
  424b1c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  424b20:	ldr	x8, [sp]
  424b24:	add	x1, x21, #0x2
  424b28:	mov	x23, x0
  424b2c:	sub	x24, x8, #0x2
  424b30:	mov	x2, x24
  424b34:	bl	404110 <memcpy@plt>
  424b38:	strb	wzr, [x23, x24]
  424b3c:	add	x24, x19, #0x18
  424b40:	mov	x0, x24
  424b44:	mov	x1, x23
  424b48:	mov	w2, w22
  424b4c:	bl	43ea48 <_obstack_memory_used@@Base+0x7e8>
  424b50:	cbnz	w0, 424e50 <wcrtomb@plt+0x20030>
  424b54:	ldrb	w8, [x23]
  424b58:	cmp	w8, #0x5e
  424b5c:	b.ne	424b68 <wcrtomb@plt+0x1fd48>  // b.any
  424b60:	str	wzr, [x19, #8]
  424b64:	b	424b84 <wcrtomb@plt+0x1fd64>
  424b68:	cmp	w26, #0x3
  424b6c:	b.lt	424b84 <wcrtomb@plt+0x1fd64>  // b.tstop
  424b70:	ldr	x8, [sp]
  424b74:	add	x8, x8, x23
  424b78:	ldurb	w8, [x8, #-3]
  424b7c:	cmp	w8, #0x24
  424b80:	b.eq	424b60 <wcrtomb@plt+0x1fd40>  // b.none
  424b84:	mov	x0, x23
  424b88:	bl	4049d0 <free@plt>
  424b8c:	sxtw	x8, w27
  424b90:	sxtw	x24, w28
  424b94:	sub	x23, x8, x24
  424b98:	add	w8, w23, #0x1
  424b9c:	sxtw	x0, w8
  424ba0:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  424ba4:	add	x1, x21, x24
  424ba8:	mov	x2, x23
  424bac:	mov	x22, x0
  424bb0:	bl	404110 <memcpy@plt>
  424bb4:	add	x8, sp, #0xc
  424bb8:	adrp	x24, 456000 <_obstack_memory_used@@Base+0x17da0>
  424bbc:	strb	wzr, [x22, x23]
  424bc0:	mov	w23, #0x5c                  	// #92
  424bc4:	orr	x21, x8, #0x2
  424bc8:	add	x24, x24, #0x8f0
  424bcc:	mov	x1, x22
  424bd0:	str	x22, [sp, #16]
  424bd4:	b	424bf8 <wcrtomb@plt+0x1fdd8>
  424bd8:	mov	x0, x19
  424bdc:	bl	425184 <wcrtomb@plt+0x20364>
  424be0:	mov	x0, x19
  424be4:	mov	x1, xzr
  424be8:	bl	4251e0 <wcrtomb@plt+0x203c0>
  424bec:	ldr	x8, [sp, #16]
  424bf0:	add	x1, x8, #0x1
  424bf4:	str	x1, [sp, #16]
  424bf8:	ldr	x2, [sp, #16]
  424bfc:	ldrb	w8, [x2]
  424c00:	cbz	w8, 424d4c <wcrtomb@plt+0x1ff2c>
  424c04:	cmp	w8, #0x26
  424c08:	b.eq	424bd8 <wcrtomb@plt+0x1fdb8>  // b.none
  424c0c:	cmp	w8, #0x5c
  424c10:	b.eq	424c20 <wcrtomb@plt+0x1fe00>  // b.none
  424c14:	add	x8, x2, #0x1
  424c18:	str	x8, [sp, #16]
  424c1c:	b	424bf8 <wcrtomb@plt+0x1fdd8>
  424c20:	mov	x0, x19
  424c24:	bl	425184 <wcrtomb@plt+0x20364>
  424c28:	ldr	x8, [sp, #16]
  424c2c:	add	x0, x8, #0x1
  424c30:	str	x0, [sp, #16]
  424c34:	ldrb	w8, [x8, #1]
  424c38:	sub	w9, w8, #0x26
  424c3c:	cmp	w9, #0x50
  424c40:	b.hi	424d18 <wcrtomb@plt+0x1fef8>  // b.pmore
  424c44:	adr	x10, 424c54 <wcrtomb@plt+0x1fe34>
  424c48:	ldrb	w11, [x24, x9]
  424c4c:	add	x10, x10, x11, lsl #2
  424c50:	br	x10
  424c54:	add	x1, sp, #0x10
  424c58:	mov	w2, #0xa                   	// #10
  424c5c:	bl	404180 <strtoul@plt>
  424c60:	ldr	x8, [x19, #72]
  424c64:	cmp	x0, x8
  424c68:	b.hi	424e14 <wcrtomb@plt+0x1fff4>  // b.pmore
  424c6c:	mov	x1, x0
  424c70:	mov	x0, x19
  424c74:	bl	4251e0 <wcrtomb@plt+0x203c0>
  424c78:	ldr	x1, [sp, #16]
  424c7c:	b	424bf8 <wcrtomb@plt+0x1fdd8>
  424c80:	mov	w1, #0xd                   	// #13
  424c84:	b	424cfc <wcrtomb@plt+0x1fedc>
  424c88:	mov	w1, #0x8                   	// #8
  424c8c:	b	424cfc <wcrtomb@plt+0x1fedc>
  424c90:	mov	w1, #0x2                   	// #2
  424c94:	b	424cdc <wcrtomb@plt+0x1febc>
  424c98:	mov	w1, #0x26                  	// #38
  424c9c:	b	424cfc <wcrtomb@plt+0x1fedc>
  424ca0:	mov	w1, #0x9                   	// #9
  424ca4:	b	424cfc <wcrtomb@plt+0x1fedc>
  424ca8:	mov	w1, #0x3                   	// #3
  424cac:	b	424cdc <wcrtomb@plt+0x1febc>
  424cb0:	mov	w1, #0xb                   	// #11
  424cb4:	b	424cfc <wcrtomb@plt+0x1fedc>
  424cb8:	mov	w1, #0x1                   	// #1
  424cbc:	b	424cdc <wcrtomb@plt+0x1febc>
  424cc0:	mov	w1, #0xa                   	// #10
  424cc4:	b	424cfc <wcrtomb@plt+0x1fedc>
  424cc8:	mov	x0, x19
  424ccc:	mov	w1, wzr
  424cd0:	bl	425254 <wcrtomb@plt+0x20434>
  424cd4:	b	424d04 <wcrtomb@plt+0x1fee4>
  424cd8:	mov	w1, #0x4                   	// #4
  424cdc:	mov	x0, x19
  424ce0:	bl	425254 <wcrtomb@plt+0x20434>
  424ce4:	b	424d04 <wcrtomb@plt+0x1fee4>
  424ce8:	mov	w1, #0x5c                  	// #92
  424cec:	b	424cfc <wcrtomb@plt+0x1fedc>
  424cf0:	mov	w1, #0x7                   	// #7
  424cf4:	b	424cfc <wcrtomb@plt+0x1fedc>
  424cf8:	mov	w1, #0xc                   	// #12
  424cfc:	mov	x0, x19
  424d00:	bl	42520c <wcrtomb@plt+0x203ec>
  424d04:	ldr	x8, [sp, #16]
  424d08:	add	x8, x8, #0x1
  424d0c:	str	x8, [sp, #16]
  424d10:	mov	x1, x8
  424d14:	b	424bf8 <wcrtomb@plt+0x1fdd8>
  424d18:	cmp	w8, w20
  424d1c:	b.ne	424d2c <wcrtomb@plt+0x1ff0c>  // b.any
  424d20:	mov	x0, x19
  424d24:	mov	w1, w20
  424d28:	b	424d00 <wcrtomb@plt+0x1fee0>
  424d2c:	strb	w23, [sp, #12]
  424d30:	ldrb	w8, [x0]
  424d34:	add	x1, sp, #0xc
  424d38:	mov	x0, x19
  424d3c:	mov	x2, x21
  424d40:	strb	w8, [sp, #13]
  424d44:	bl	425184 <wcrtomb@plt+0x20364>
  424d48:	b	424d04 <wcrtomb@plt+0x1fee4>
  424d4c:	mov	x0, x19
  424d50:	bl	425184 <wcrtomb@plt+0x20364>
  424d54:	mov	x0, x22
  424d58:	bl	4049d0 <free@plt>
  424d5c:	ldr	x19, [x25]
  424d60:	b	424d68 <wcrtomb@plt+0x1ff48>
  424d64:	add	x19, x19, #0x1
  424d68:	mov	x0, x19
  424d6c:	add	sp, sp, #0x220
  424d70:	ldp	x20, x19, [sp, #80]
  424d74:	ldp	x22, x21, [sp, #64]
  424d78:	ldp	x24, x23, [sp, #48]
  424d7c:	ldp	x26, x25, [sp, #32]
  424d80:	ldp	x28, x27, [sp, #16]
  424d84:	ldp	x29, x30, [sp], #96
  424d88:	ret
  424d8c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  424d90:	ldr	x8, [x8, #1008]
  424d94:	cbz	x8, 424d9c <wcrtomb@plt+0x1ff7c>
  424d98:	blr	x8
  424d9c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  424da0:	add	x1, x1, #0x978
  424da4:	mov	w2, #0x5                   	// #5
  424da8:	mov	x0, xzr
  424dac:	bl	404bf0 <dcgettext@plt>
  424db0:	ldrb	w3, [x19]
  424db4:	mov	x2, x0
  424db8:	mov	w0, wzr
  424dbc:	mov	w1, wzr
  424dc0:	bl	4041f0 <error@plt>
  424dc4:	mov	w0, #0x2                   	// #2
  424dc8:	bl	421198 <wcrtomb@plt+0x1c378>
  424dcc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  424dd0:	ldr	x8, [x8, #1008]
  424dd4:	cbz	x8, 424ddc <wcrtomb@plt+0x1ffbc>
  424dd8:	blr	x8
  424ddc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  424de0:	add	x1, x1, #0x993
  424de4:	b	424e2c <wcrtomb@plt+0x2000c>
  424de8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  424dec:	ldr	x8, [x8, #1008]
  424df0:	cbz	x8, 424df8 <wcrtomb@plt+0x1ffd8>
  424df4:	blr	x8
  424df8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  424dfc:	add	x1, x1, #0x9b0
  424e00:	mov	w2, #0x5                   	// #5
  424e04:	mov	x0, xzr
  424e08:	bl	404bf0 <dcgettext@plt>
  424e0c:	ldrb	w3, [x24]
  424e10:	b	424db4 <wcrtomb@plt+0x1ff94>
  424e14:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  424e18:	ldr	x8, [x8, #1008]
  424e1c:	cbz	x8, 424e24 <wcrtomb@plt+0x20004>
  424e20:	blr	x8
  424e24:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  424e28:	add	x1, x1, #0x9fa
  424e2c:	mov	w2, #0x5                   	// #5
  424e30:	mov	x0, xzr
  424e34:	bl	404bf0 <dcgettext@plt>
  424e38:	mov	x2, x0
  424e3c:	mov	w0, wzr
  424e40:	mov	w1, wzr
  424e44:	bl	4041f0 <error@plt>
  424e48:	mov	w0, #0x2                   	// #2
  424e4c:	bl	421198 <wcrtomb@plt+0x1c378>
  424e50:	add	x2, sp, #0x10
  424e54:	mov	w3, #0x200                 	// #512
  424e58:	mov	x1, x24
  424e5c:	bl	43eb48 <_obstack_memory_used@@Base+0x8e8>
  424e60:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  424e64:	ldr	x8, [x8, #1008]
  424e68:	cbz	x8, 424e70 <wcrtomb@plt+0x20050>
  424e6c:	blr	x8
  424e70:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  424e74:	add	x1, x1, #0x9d9
  424e78:	mov	w2, #0x5                   	// #5
  424e7c:	mov	x0, xzr
  424e80:	bl	404bf0 <dcgettext@plt>
  424e84:	mov	x2, x0
  424e88:	add	x3, sp, #0x10
  424e8c:	mov	w0, wzr
  424e90:	mov	w1, wzr
  424e94:	bl	4041f0 <error@plt>
  424e98:	mov	w0, #0x2                   	// #2
  424e9c:	bl	421198 <wcrtomb@plt+0x1c378>
  424ea0:	stp	x29, x30, [sp, #-64]!
  424ea4:	stp	x22, x21, [sp, #32]
  424ea8:	stp	x20, x19, [sp, #48]
  424eac:	ldr	x8, [x0]
  424eb0:	mov	x29, sp
  424eb4:	mov	x22, x2
  424eb8:	mov	x20, x0
  424ebc:	mov	w0, w1
  424ec0:	add	x2, x29, #0x18
  424ec4:	mov	x1, x8
  424ec8:	str	x23, [sp, #16]
  424ecc:	mov	x23, x3
  424ed0:	bl	424f8c <wcrtomb@plt+0x2016c>
  424ed4:	mov	w19, w0
  424ed8:	tbz	w0, #0, 424f30 <wcrtomb@plt+0x20110>
  424edc:	ldr	x21, [x29, #24]
  424ee0:	mov	x1, x21
  424ee4:	cbz	x22, 424ef8 <wcrtomb@plt+0x200d8>
  424ee8:	mov	x0, x21
  424eec:	mov	x1, x23
  424ef0:	blr	x22
  424ef4:	mov	x1, x0
  424ef8:	mov	x0, x20
  424efc:	bl	419680 <wcrtomb@plt+0x14860>
  424f00:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424f04:	add	x8, x8, #0xca0
  424f08:	ldr	x9, [x8]
  424f0c:	cmp	x21, x9
  424f10:	b.ls	424f64 <wcrtomb@plt+0x20144>  // b.plast
  424f14:	ldr	x8, [x8, #24]
  424f18:	cmp	x21, x8
  424f1c:	b.cs	424f64 <wcrtomb@plt+0x20144>  // b.hs, b.nlast
  424f20:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424f24:	add	x8, x8, #0xca8
  424f28:	stp	x21, x21, [x8]
  424f2c:	b	424f74 <wcrtomb@plt+0x20154>
  424f30:	cbz	x22, 424f74 <wcrtomb@plt+0x20154>
  424f34:	str	xzr, [x20]
  424f38:	ldr	x19, [x29, #24]
  424f3c:	mov	x1, x23
  424f40:	mov	x0, x19
  424f44:	blr	x22
  424f48:	mov	x1, x0
  424f4c:	mov	x0, x20
  424f50:	bl	419680 <wcrtomb@plt+0x14860>
  424f54:	mov	x0, x19
  424f58:	bl	4049d0 <free@plt>
  424f5c:	mov	w19, #0x1                   	// #1
  424f60:	b	424f74 <wcrtomb@plt+0x20154>
  424f64:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424f68:	add	x0, x0, #0xc98
  424f6c:	mov	x1, x21
  424f70:	bl	43e1d8 <_obstack_free@@Base>
  424f74:	and	w0, w19, #0x1
  424f78:	ldp	x20, x19, [sp, #48]
  424f7c:	ldp	x22, x21, [sp, #32]
  424f80:	ldr	x23, [sp, #16]
  424f84:	ldp	x29, x30, [sp], #64
  424f88:	ret
  424f8c:	stp	x29, x30, [sp, #-80]!
  424f90:	stp	x22, x21, [sp, #48]
  424f94:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424f98:	ldrb	w8, [x22, #3328]
  424f9c:	stp	x20, x19, [sp, #64]
  424fa0:	mov	x19, x2
  424fa4:	mov	x20, x1
  424fa8:	mov	w21, w0
  424fac:	str	x25, [sp, #16]
  424fb0:	stp	x24, x23, [sp, #32]
  424fb4:	mov	x29, sp
  424fb8:	tbnz	w8, #0, 424fe8 <wcrtomb@plt+0x201c8>
  424fbc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424fc0:	adrp	x3, 43d000 <argp_usage@@Base+0xb404>
  424fc4:	adrp	x4, 404000 <mbrtowc@plt-0x100>
  424fc8:	add	x0, x0, #0xc98
  424fcc:	add	x3, x3, #0x1c4
  424fd0:	add	x4, x4, #0x9d0
  424fd4:	mov	x1, xzr
  424fd8:	mov	x2, xzr
  424fdc:	bl	43df40 <_obstack_begin@@Base>
  424fe0:	mov	w8, #0x1                   	// #1
  424fe4:	strb	w8, [x22, #3328]
  424fe8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424fec:	ldr	x22, [x8, #3312]
  424ff0:	cbz	x22, 425078 <wcrtomb@plt+0x20258>
  424ff4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424ff8:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  424ffc:	mov	w8, wzr
  425000:	add	x23, x23, #0xca8
  425004:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425008:	add	x25, x25, #0xca0
  42500c:	b	425044 <wcrtomb@plt+0x20224>
  425010:	ldr	x8, [x25, #40]
  425014:	ldp	x10, x11, [x25, #16]
  425018:	ldr	x9, [x25]
  42501c:	add	x10, x8, x10
  425020:	bic	x8, x10, x8
  425024:	sub	x12, x11, x9
  425028:	sub	x9, x8, x9
  42502c:	cmp	x9, x12
  425030:	csel	x8, x11, x8, hi  // hi = pmore
  425034:	stp	x8, x8, [x25, #8]
  425038:	mov	w8, #0x1                   	// #1
  42503c:	ldr	x22, [x22]
  425040:	cbz	x22, 42507c <wcrtomb@plt+0x2025c>
  425044:	ldr	w9, [x22, #12]
  425048:	tst	w9, w21
  42504c:	b.eq	42503c <wcrtomb@plt+0x2021c>  // b.none
  425050:	mov	x0, x22
  425054:	mov	x1, x20
  425058:	bl	4252c8 <wcrtomb@plt+0x204a8>
  42505c:	ldp	x20, x8, [x23]
  425060:	cmp	x8, x20
  425064:	b.ne	425010 <wcrtomb@plt+0x201f0>  // b.any
  425068:	ldrb	w8, [x24, #3304]
  42506c:	orr	w8, w8, #0x2
  425070:	strb	w8, [x24, #3304]
  425074:	b	425010 <wcrtomb@plt+0x201f0>
  425078:	mov	w8, wzr
  42507c:	str	x20, [x19]
  425080:	ldp	x20, x19, [sp, #64]
  425084:	ldp	x22, x21, [sp, #48]
  425088:	ldp	x24, x23, [sp, #32]
  42508c:	ldr	x25, [sp, #16]
  425090:	and	w0, w8, #0x1
  425094:	ldp	x29, x30, [sp], #80
  425098:	ret
  42509c:	stp	x29, x30, [sp, #-16]!
  4250a0:	mov	x2, xzr
  4250a4:	mov	x3, xzr
  4250a8:	mov	x29, sp
  4250ac:	bl	424ea0 <wcrtomb@plt+0x20080>
  4250b0:	and	w0, w0, #0x1
  4250b4:	ldp	x29, x30, [sp], #16
  4250b8:	ret
  4250bc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4250c0:	ldr	x8, [x8, #3312]
  4250c4:	cmp	x8, #0x0
  4250c8:	cset	w0, ne  // ne = any
  4250cc:	ret
  4250d0:	stp	x29, x30, [sp, #-16]!
  4250d4:	mov	w0, #0x70                  	// #112
  4250d8:	mov	x29, sp
  4250dc:	bl	43d2f8 <argp_usage@@Base+0xb6fc>
  4250e0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4250e4:	ldr	x9, [x8, #3320]
  4250e8:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4250ec:	add	x10, x10, #0xcf0
  4250f0:	cmp	x9, #0x0
  4250f4:	csel	x9, x10, x9, eq  // eq = none
  4250f8:	str	x0, [x9]
  4250fc:	str	x0, [x8, #3320]
  425100:	ldp	x29, x30, [sp], #16
  425104:	ret
  425108:	sub	w9, w1, #0x48
  42510c:	cmp	w9, #0x2b
  425110:	mov	w8, #0x1                   	// #1
  425114:	b.hi	42517c <wcrtomb@plt+0x2035c>  // b.pmore
  425118:	adrp	x10, 456000 <_obstack_memory_used@@Base+0x17da0>
  42511c:	add	x10, x10, #0x941
  425120:	adr	x11, 425130 <wcrtomb@plt+0x20310>
  425124:	ldrb	w12, [x10, x9]
  425128:	add	x11, x11, x12, lsl #2
  42512c:	br	x11
  425130:	ldr	w8, [x0]
  425134:	and	w9, w8, #0xfffffffd
  425138:	b	425174 <wcrtomb@plt+0x20354>
  42513c:	ldr	w8, [x0]
  425140:	and	w9, w8, #0xfffffffe
  425144:	b	425174 <wcrtomb@plt+0x20354>
  425148:	ldr	w8, [x0]
  42514c:	and	w9, w8, #0xfffffffb
  425150:	b	425174 <wcrtomb@plt+0x20354>
  425154:	ldr	w8, [x0]
  425158:	orr	w9, w8, #0x2
  42515c:	b	425174 <wcrtomb@plt+0x20354>
  425160:	ldr	w8, [x0]
  425164:	orr	w9, w8, #0x1
  425168:	b	425174 <wcrtomb@plt+0x20354>
  42516c:	ldr	w8, [x0]
  425170:	orr	w9, w8, #0x4
  425174:	mov	w8, wzr
  425178:	str	w9, [x0]
  42517c:	mov	w0, w8
  425180:	ret
  425184:	stp	x29, x30, [sp, #-48]!
  425188:	stp	x20, x19, [sp, #32]
  42518c:	subs	x19, x2, x1
  425190:	str	x21, [sp, #16]
  425194:	mov	x29, sp
  425198:	b.eq	4251d0 <wcrtomb@plt+0x203b0>  // b.none
  42519c:	mov	x20, x1
  4251a0:	bl	425280 <wcrtomb@plt+0x20460>
  4251a4:	mov	x21, x0
  4251a8:	str	wzr, [x0, #8]
  4251ac:	add	x0, x19, #0x1
  4251b0:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  4251b4:	mov	x1, x20
  4251b8:	mov	x2, x19
  4251bc:	str	x0, [x21, #16]
  4251c0:	bl	404110 <memcpy@plt>
  4251c4:	ldr	x8, [x21, #16]
  4251c8:	strb	wzr, [x8, x19]
  4251cc:	str	x19, [x21, #24]
  4251d0:	ldp	x20, x19, [sp, #32]
  4251d4:	ldr	x21, [sp, #16]
  4251d8:	ldp	x29, x30, [sp], #48
  4251dc:	ret
  4251e0:	stp	x29, x30, [sp, #-32]!
  4251e4:	str	x19, [sp, #16]
  4251e8:	mov	x29, sp
  4251ec:	mov	x19, x1
  4251f0:	bl	425280 <wcrtomb@plt+0x20460>
  4251f4:	str	x19, [x0, #16]
  4251f8:	ldr	x19, [sp, #16]
  4251fc:	mov	w8, #0x1                   	// #1
  425200:	str	w8, [x0, #8]
  425204:	ldp	x29, x30, [sp], #32
  425208:	ret
  42520c:	stp	x29, x30, [sp, #-32]!
  425210:	stp	x20, x19, [sp, #16]
  425214:	mov	x29, sp
  425218:	mov	w19, w1
  42521c:	bl	425280 <wcrtomb@plt+0x20460>
  425220:	mov	x20, x0
  425224:	str	wzr, [x0, #8]
  425228:	mov	w0, #0x2                   	// #2
  42522c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  425230:	str	x0, [x20, #16]
  425234:	strb	w19, [x0]
  425238:	ldr	x8, [x20, #16]
  42523c:	mov	w9, #0x1                   	// #1
  425240:	strb	wzr, [x8, #1]
  425244:	str	x9, [x20, #24]
  425248:	ldp	x20, x19, [sp, #16]
  42524c:	ldp	x29, x30, [sp], #32
  425250:	ret
  425254:	stp	x29, x30, [sp, #-32]!
  425258:	str	x19, [sp, #16]
  42525c:	mov	x29, sp
  425260:	mov	w19, w1
  425264:	bl	425280 <wcrtomb@plt+0x20460>
  425268:	str	w19, [x0, #16]
  42526c:	ldr	x19, [sp, #16]
  425270:	mov	w8, #0x2                   	// #2
  425274:	str	w8, [x0, #8]
  425278:	ldp	x29, x30, [sp], #32
  42527c:	ret
  425280:	stp	x29, x30, [sp, #-32]!
  425284:	str	x19, [sp, #16]
  425288:	mov	x19, x0
  42528c:	mov	w0, #0x20                  	// #32
  425290:	mov	x29, sp
  425294:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  425298:	str	xzr, [x0]
  42529c:	ldr	x8, [x19, #96]
  4252a0:	add	x9, x19, #0x58
  4252a4:	cmp	x8, #0x0
  4252a8:	csel	x8, x9, x8, eq  // eq = none
  4252ac:	str	x0, [x8]
  4252b0:	ldr	x8, [x19, #104]
  4252b4:	add	x8, x8, #0x1
  4252b8:	stp	x0, x8, [x19, #96]
  4252bc:	ldr	x19, [sp, #16]
  4252c0:	ldp	x29, x30, [sp], #32
  4252c4:	ret
  4252c8:	sub	sp, sp, #0x70
  4252cc:	stp	x29, x30, [sp, #16]
  4252d0:	stp	x28, x27, [sp, #32]
  4252d4:	stp	x26, x25, [sp, #48]
  4252d8:	stp	x24, x23, [sp, #64]
  4252dc:	stp	x22, x21, [sp, #80]
  4252e0:	stp	x20, x19, [sp, #96]
  4252e4:	ldr	x8, [x0, #72]
  4252e8:	mov	x21, x0
  4252ec:	add	x9, x0, #0x18
  4252f0:	add	x29, sp, #0x10
  4252f4:	lsl	x8, x8, #4
  4252f8:	add	x0, x8, #0x10
  4252fc:	mov	x20, x1
  425300:	str	x9, [sp, #8]
  425304:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  425308:	mov	x19, x0
  42530c:	mov	w23, wzr
  425310:	mov	w24, wzr
  425314:	mov	x27, xzr
  425318:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42531c:	str	x21, [sp]
  425320:	b	42534c <wcrtomb@plt+0x2052c>
  425324:	ldr	x0, [x28, #3248]
  425328:	mov	x1, x20
  42532c:	mov	x2, x25
  425330:	bl	404110 <memcpy@plt>
  425334:	ldr	x8, [x28, #3248]
  425338:	add	x8, x8, x25
  42533c:	str	x8, [x28, #3248]
  425340:	mov	w8, #0x3                   	// #3
  425344:	cmp	w8, #0x3
  425348:	b.eq	425668 <wcrtomb@plt+0x20848>  // b.none
  42534c:	ldrb	w8, [x20]
  425350:	cbz	w8, 425668 <wcrtomb@plt+0x20848>
  425354:	ldr	x8, [x21, #72]
  425358:	ldr	x0, [sp, #8]
  42535c:	mov	x1, x20
  425360:	mov	x3, x19
  425364:	add	x2, x8, #0x1
  425368:	mov	w4, wzr
  42536c:	bl	43ed9c <_obstack_memory_used@@Base+0xb3c>
  425370:	cbz	w0, 4253d8 <wcrtomb@plt+0x205b8>
  425374:	mov	x0, x20
  425378:	bl	404190 <strlen@plt>
  42537c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425380:	add	x9, x9, #0xcb0
  425384:	ldp	x9, x8, [x9]
  425388:	mov	x25, x0
  42538c:	sub	x8, x8, x9
  425390:	cmp	x8, x0
  425394:	b.cs	4253a8 <wcrtomb@plt+0x20588>  // b.hs, b.nlast
  425398:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42539c:	add	x0, x0, #0xc98
  4253a0:	mov	x1, x25
  4253a4:	bl	43e028 <_obstack_newchunk@@Base>
  4253a8:	ldr	x0, [x28, #3248]
  4253ac:	mov	x1, x20
  4253b0:	mov	x2, x25
  4253b4:	bl	404110 <memcpy@plt>
  4253b8:	ldr	x8, [x28, #3248]
  4253bc:	add	x8, x8, x25
  4253c0:	str	x8, [x28, #3248]
  4253c4:	ldr	w8, [x21, #8]
  4253c8:	add	x20, x20, x25
  4253cc:	cbz	w8, 42548c <wcrtomb@plt+0x2066c>
  4253d0:	mov	w8, wzr
  4253d4:	b	425344 <wcrtomb@plt+0x20524>
  4253d8:	ldp	x26, x25, [x19]
  4253dc:	cbz	x26, 425424 <wcrtomb@plt+0x20604>
  4253e0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4253e4:	add	x9, x9, #0xcb0
  4253e8:	ldp	x9, x8, [x9]
  4253ec:	sub	x8, x8, x9
  4253f0:	cmp	x8, x26
  4253f4:	b.cs	425408 <wcrtomb@plt+0x205e8>  // b.hs, b.nlast
  4253f8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4253fc:	add	x0, x0, #0xc98
  425400:	mov	x1, x26
  425404:	bl	43e028 <_obstack_newchunk@@Base>
  425408:	ldr	x0, [x28, #3248]
  42540c:	mov	x1, x20
  425410:	mov	x2, x26
  425414:	bl	404110 <memcpy@plt>
  425418:	ldr	x8, [x28, #3248]
  42541c:	add	x8, x8, x26
  425420:	str	x8, [x28, #3248]
  425424:	ldr	w8, [x21, #16]
  425428:	add	x27, x27, #0x1
  42542c:	cbz	w8, 4254c4 <wcrtomb@plt+0x206a4>
  425430:	cmp	x27, x8
  425434:	b.cs	4254c4 <wcrtomb@plt+0x206a4>  // b.hs, b.nlast
  425438:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42543c:	add	x9, x9, #0xcb0
  425440:	ldp	x9, x8, [x9]
  425444:	sub	x8, x8, x9
  425448:	cmp	x8, x25
  42544c:	b.cs	425460 <wcrtomb@plt+0x20640>  // b.hs, b.nlast
  425450:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425454:	add	x0, x0, #0xc98
  425458:	mov	x1, x25
  42545c:	bl	43e028 <_obstack_newchunk@@Base>
  425460:	ldr	x0, [x28, #3248]
  425464:	mov	x1, x20
  425468:	mov	x2, x25
  42546c:	bl	404110 <memcpy@plt>
  425470:	ldr	x8, [x28, #3248]
  425474:	add	x20, x20, x25
  425478:	add	x8, x8, x25
  42547c:	str	x8, [x28, #3248]
  425480:	mov	w8, #0x2                   	// #2
  425484:	cbnz	w8, 425344 <wcrtomb@plt+0x20524>
  425488:	b	4253c4 <wcrtomb@plt+0x205a4>
  42548c:	mov	x0, x20
  425490:	bl	404190 <strlen@plt>
  425494:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425498:	add	x9, x9, #0xcb0
  42549c:	ldp	x9, x8, [x9]
  4254a0:	mov	x25, x0
  4254a4:	sub	x8, x8, x9
  4254a8:	cmp	x8, x0
  4254ac:	b.cs	425324 <wcrtomb@plt+0x20504>  // b.hs, b.nlast
  4254b0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4254b4:	add	x0, x0, #0xc98
  4254b8:	mov	x1, x25
  4254bc:	bl	43e028 <_obstack_newchunk@@Base>
  4254c0:	b	425324 <wcrtomb@plt+0x20504>
  4254c4:	ldr	x21, [x21, #88]
  4254c8:	cbz	x21, 425658 <wcrtomb@plt+0x20838>
  4254cc:	mov	x22, x27
  4254d0:	b	4254e0 <wcrtomb@plt+0x206c0>
  4254d4:	mov	w24, w8
  4254d8:	ldr	x21, [x21]
  4254dc:	cbz	x21, 425658 <wcrtomb@plt+0x20838>
  4254e0:	ldr	w8, [x21, #8]
  4254e4:	cmp	w8, #0x2
  4254e8:	b.eq	425570 <wcrtomb@plt+0x20750>  // b.none
  4254ec:	cmp	w8, #0x1
  4254f0:	b.eq	4255b4 <wcrtomb@plt+0x20794>  // b.none
  4254f4:	cbnz	w8, 4254d8 <wcrtomb@plt+0x206b8>
  4254f8:	ldr	x26, [x21, #16]
  4254fc:	cbz	w24, 425528 <wcrtomb@plt+0x20708>
  425500:	ldr	x2, [x21, #24]
  425504:	mov	w0, w24
  425508:	mov	x1, x26
  42550c:	bl	4256c4 <wcrtomb@plt+0x208a4>
  425510:	sub	w8, w24, #0x1
  425514:	cmp	w8, #0x2
  425518:	csel	w8, wzr, w23, cc  // cc = lo, ul, last
  42551c:	mov	x26, x0
  425520:	csel	w24, w23, w24, cc  // cc = lo, ul, last
  425524:	mov	w23, w8
  425528:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42552c:	add	x9, x9, #0xcb0
  425530:	ldp	x9, x8, [x9]
  425534:	ldr	x27, [x21, #24]
  425538:	sub	x8, x8, x9
  42553c:	cmp	x8, x27
  425540:	b.cs	425554 <wcrtomb@plt+0x20734>  // b.hs, b.nlast
  425544:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425548:	add	x0, x0, #0xc98
  42554c:	mov	x1, x27
  425550:	bl	43e028 <_obstack_newchunk@@Base>
  425554:	ldr	x0, [x28, #3248]
  425558:	mov	x1, x26
  42555c:	mov	x2, x27
  425560:	bl	404110 <memcpy@plt>
  425564:	ldr	x8, [x28, #3248]
  425568:	add	x8, x8, x27
  42556c:	b	42564c <wcrtomb@plt+0x2082c>
  425570:	ldr	w8, [x21, #16]
  425574:	cmp	w8, #0x4
  425578:	b.hi	4254d8 <wcrtomb@plt+0x206b8>  // b.pmore
  42557c:	mov	w9, #0x1                   	// #1
  425580:	lsl	w9, w9, w8
  425584:	mov	w10, #0x19                  	// #25
  425588:	tst	w9, w10
  42558c:	b.ne	4254d4 <wcrtomb@plt+0x206b4>  // b.any
  425590:	cmp	w23, #0x4
  425594:	b.hi	4254d4 <wcrtomb@plt+0x206b4>  // b.pmore
  425598:	mov	w9, #0x1                   	// #1
  42559c:	lsl	w9, w9, w23
  4255a0:	mov	w10, #0x19                  	// #25
  4255a4:	tst	w9, w10
  4255a8:	b.eq	4254d4 <wcrtomb@plt+0x206b4>  // b.none
  4255ac:	mov	w23, w24
  4255b0:	b	4254d4 <wcrtomb@plt+0x206b4>
  4255b4:	ldr	x9, [x21, #16]
  4255b8:	lsl	x8, x9, #4
  4255bc:	ldr	x8, [x19, x8]
  4255c0:	cmn	x8, #0x1
  4255c4:	b.eq	4254d8 <wcrtomb@plt+0x206b8>  // b.none
  4255c8:	add	x9, x19, x9, lsl #4
  4255cc:	ldr	x9, [x9, #8]
  4255d0:	cmn	x9, #0x1
  4255d4:	b.eq	4254d8 <wcrtomb@plt+0x206b8>  // b.none
  4255d8:	sub	x26, x9, x8
  4255dc:	add	x27, x20, x8
  4255e0:	cbz	w24, 42560c <wcrtomb@plt+0x207ec>
  4255e4:	mov	w0, w24
  4255e8:	mov	x1, x27
  4255ec:	mov	x2, x26
  4255f0:	bl	4256c4 <wcrtomb@plt+0x208a4>
  4255f4:	sub	w8, w24, #0x1
  4255f8:	cmp	w8, #0x2
  4255fc:	csel	w8, wzr, w23, cc  // cc = lo, ul, last
  425600:	mov	x27, x0
  425604:	csel	w24, w23, w24, cc  // cc = lo, ul, last
  425608:	mov	w23, w8
  42560c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425610:	add	x9, x9, #0xcb0
  425614:	ldp	x9, x8, [x9]
  425618:	sub	x8, x8, x9
  42561c:	cmp	x8, x26
  425620:	b.cs	425634 <wcrtomb@plt+0x20814>  // b.hs, b.nlast
  425624:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425628:	add	x0, x0, #0xc98
  42562c:	mov	x1, x26
  425630:	bl	43e028 <_obstack_newchunk@@Base>
  425634:	ldr	x0, [x28, #3248]
  425638:	mov	x1, x27
  42563c:	mov	x2, x26
  425640:	bl	404110 <memcpy@plt>
  425644:	ldr	x8, [x28, #3248]
  425648:	add	x8, x8, x26
  42564c:	str	x8, [x28, #3248]
  425650:	mov	x27, x22
  425654:	b	4254d8 <wcrtomb@plt+0x206b8>
  425658:	ldr	x21, [sp]
  42565c:	mov	w8, wzr
  425660:	cbnz	wzr, 425344 <wcrtomb@plt+0x20524>
  425664:	b	4253c4 <wcrtomb@plt+0x205a4>
  425668:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42566c:	add	x9, x9, #0xcb0
  425670:	ldp	x9, x8, [x9]
  425674:	cmp	x8, x9
  425678:	b.ne	42568c <wcrtomb@plt+0x2086c>  // b.any
  42567c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425680:	add	x0, x0, #0xc98
  425684:	mov	w1, #0x1                   	// #1
  425688:	bl	43e028 <_obstack_newchunk@@Base>
  42568c:	ldr	x8, [x28, #3248]
  425690:	mov	x0, x19
  425694:	add	x9, x8, #0x1
  425698:	str	x9, [x28, #3248]
  42569c:	strb	wzr, [x8]
  4256a0:	bl	4049d0 <free@plt>
  4256a4:	ldp	x20, x19, [sp, #96]
  4256a8:	ldp	x22, x21, [sp, #80]
  4256ac:	ldp	x24, x23, [sp, #64]
  4256b0:	ldp	x26, x25, [sp, #48]
  4256b4:	ldp	x28, x27, [sp, #32]
  4256b8:	ldp	x29, x30, [sp, #16]
  4256bc:	add	sp, sp, #0x70
  4256c0:	ret
  4256c4:	stp	x29, x30, [sp, #-48]!
  4256c8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4256cc:	ldr	x9, [x8, #3344]
  4256d0:	stp	x22, x21, [sp, #16]
  4256d4:	stp	x20, x19, [sp, #32]
  4256d8:	mov	x19, x2
  4256dc:	mov	x21, x1
  4256e0:	mov	w20, w0
  4256e4:	cmp	x9, x2
  4256e8:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4256ec:	mov	x29, sp
  4256f0:	b.cs	425708 <wcrtomb@plt+0x208e8>  // b.hs, b.nlast
  4256f4:	ldr	x0, [x22, #3336]
  4256f8:	mov	x1, x19
  4256fc:	str	x19, [x8, #3344]
  425700:	bl	43d21c <argp_usage@@Base+0xb620>
  425704:	str	x0, [x22, #3336]
  425708:	ldr	x0, [x22, #3336]
  42570c:	mov	x1, x21
  425710:	mov	x2, x19
  425714:	bl	404110 <memcpy@plt>
  425718:	sub	w8, w20, #0x1
  42571c:	cmp	w8, #0x3
  425720:	b.hi	4257bc <wcrtomb@plt+0x2099c>  // b.pmore
  425724:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  425728:	add	x9, x9, #0x96d
  42572c:	adr	x10, 42573c <wcrtomb@plt+0x2091c>
  425730:	ldrb	w11, [x9, x8]
  425734:	add	x10, x10, x11, lsl #2
  425738:	br	x10
  42573c:	bl	404740 <__ctype_toupper_loc@plt>
  425740:	b	425748 <wcrtomb@plt+0x20928>
  425744:	bl	4043b0 <__ctype_tolower_loc@plt>
  425748:	ldr	x8, [x22, #3336]
  42574c:	ldr	x9, [x0]
  425750:	ldrb	w10, [x8]
  425754:	ldr	w9, [x9, x10, lsl #2]
  425758:	strb	w9, [x8]
  42575c:	b	4257bc <wcrtomb@plt+0x2099c>
  425760:	cmp	x19, #0x1
  425764:	b.lt	4257bc <wcrtomb@plt+0x2099c>  // b.tstop
  425768:	ldr	x20, [x22, #3336]
  42576c:	add	x19, x20, x19
  425770:	bl	404740 <__ctype_toupper_loc@plt>
  425774:	ldr	x8, [x0]
  425778:	ldrb	w9, [x20]
  42577c:	ldr	w8, [x8, x9, lsl #2]
  425780:	strb	w8, [x20], #1
  425784:	cmp	x20, x19
  425788:	b.cc	425774 <wcrtomb@plt+0x20954>  // b.lo, b.ul, b.last
  42578c:	b	4257bc <wcrtomb@plt+0x2099c>
  425790:	cmp	x19, #0x1
  425794:	b.lt	4257bc <wcrtomb@plt+0x2099c>  // b.tstop
  425798:	ldr	x20, [x22, #3336]
  42579c:	add	x19, x20, x19
  4257a0:	bl	4043b0 <__ctype_tolower_loc@plt>
  4257a4:	ldr	x8, [x0]
  4257a8:	ldrb	w9, [x20]
  4257ac:	ldr	w8, [x8, x9, lsl #2]
  4257b0:	strb	w8, [x20], #1
  4257b4:	cmp	x20, x19
  4257b8:	b.cc	4257a4 <wcrtomb@plt+0x20984>  // b.lo, b.ul, b.last
  4257bc:	ldr	x0, [x22, #3336]
  4257c0:	ldp	x20, x19, [sp, #32]
  4257c4:	ldp	x22, x21, [sp, #16]
  4257c8:	ldp	x29, x30, [sp], #48
  4257cc:	ret
  4257d0:	stp	x29, x30, [sp, #-32]!
  4257d4:	mov	w0, #0x1                   	// #1
  4257d8:	stp	x20, x19, [sp, #16]
  4257dc:	mov	x29, sp
  4257e0:	bl	425810 <wcrtomb@plt+0x209f0>
  4257e4:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4257e8:	ldr	x0, [x19, #3352]
  4257ec:	cbz	x0, 425804 <wcrtomb@plt+0x209e4>
  4257f0:	ldr	x20, [x0]
  4257f4:	bl	4049d0 <free@plt>
  4257f8:	mov	x0, x20
  4257fc:	str	x20, [x19, #3352]
  425800:	cbnz	x20, 4257f0 <wcrtomb@plt+0x209d0>
  425804:	ldp	x20, x19, [sp, #16]
  425808:	ldp	x29, x30, [sp], #32
  42580c:	ret
  425810:	sub	sp, sp, #0x70
  425814:	stp	x24, x23, [sp, #64]
  425818:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42581c:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425820:	stp	x22, x21, [sp, #80]
  425824:	ldr	x22, [x24, #3360]
  425828:	ldr	w8, [x8]
  42582c:	stp	x29, x30, [sp, #16]
  425830:	stp	x20, x19, [sp, #96]
  425834:	add	x29, sp, #0x10
  425838:	mov	w20, w0
  42583c:	stp	x28, x27, [sp, #32]
  425840:	stp	x26, x25, [sp, #48]
  425844:	stur	w8, [x29, #-4]
  425848:	cbz	x22, 425974 <wcrtomb@plt+0x20b54>
  42584c:	adrp	x21, 454000 <_obstack_memory_used@@Base+0x15da0>
  425850:	mov	x28, xzr
  425854:	adrp	x25, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  425858:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42585c:	add	x21, x21, #0x232
  425860:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425864:	b	425874 <wcrtomb@plt+0x20a54>
  425868:	mov	x28, x22
  42586c:	mov	x22, x19
  425870:	cbz	x22, 425974 <wcrtomb@plt+0x20b54>
  425874:	ldr	x19, [x22]
  425878:	tbnz	w20, #0, 42588c <wcrtomb@plt+0x20a6c>
  42587c:	ldr	x8, [x27, #3952]
  425880:	ldr	x9, [x22, #32]
  425884:	cmp	x8, x9
  425888:	b.ls	425868 <wcrtomb@plt+0x20a48>  // b.plast
  42588c:	ldr	w0, [x22, #8]
  425890:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  425894:	ldrb	w8, [x22, #24]
  425898:	cbz	w8, 42590c <wcrtomb@plt+0x20aec>
  42589c:	ldr	w8, [x22, #8]
  4258a0:	cbz	w8, 4258bc <wcrtomb@plt+0x20a9c>
  4258a4:	ldr	x0, [x22, #16]
  4258a8:	ldrb	w8, [x0]
  4258ac:	cbz	w8, 425940 <wcrtomb@plt+0x20b20>
  4258b0:	mov	x1, x21
  4258b4:	bl	404920 <strcmp@plt>
  4258b8:	cbz	w0, 42593c <wcrtomb@plt+0x20b1c>
  4258bc:	ldr	x23, [x22, #16]
  4258c0:	ldr	w0, [x25, #2240]
  4258c4:	mov	w2, #0x200                 	// #512
  4258c8:	mov	x1, x23
  4258cc:	bl	404320 <unlinkat@plt>
  4258d0:	cbz	w0, 425900 <wcrtomb@plt+0x20ae0>
  4258d4:	bl	404d00 <__errno_location@plt>
  4258d8:	ldr	w9, [x0]
  4258dc:	cmp	w9, #0x2
  4258e0:	b.eq	425900 <wcrtomb@plt+0x20ae0>  // b.none
  4258e4:	cmp	w9, #0x11
  4258e8:	mov	w8, wzr
  4258ec:	b.eq	425940 <wcrtomb@plt+0x20b20>  // b.none
  4258f0:	cmp	w9, #0x27
  4258f4:	b.eq	425940 <wcrtomb@plt+0x20b20>  // b.none
  4258f8:	mov	x0, x23
  4258fc:	bl	42842c <wcrtomb@plt+0x2360c>
  425900:	mov	w8, #0x1                   	// #1
  425904:	tbz	w8, #0, 425870 <wcrtomb@plt+0x20a50>
  425908:	b	42594c <wcrtomb@plt+0x20b2c>
  42590c:	ldr	w0, [x25, #2240]
  425910:	ldr	x1, [x22, #16]
  425914:	mov	w2, wzr
  425918:	bl	404320 <unlinkat@plt>
  42591c:	cbz	w0, 42594c <wcrtomb@plt+0x20b2c>
  425920:	bl	404d00 <__errno_location@plt>
  425924:	ldr	w8, [x0]
  425928:	cmp	w8, #0x2
  42592c:	b.eq	42594c <wcrtomb@plt+0x20b2c>  // b.none
  425930:	ldr	x0, [x22, #16]
  425934:	bl	428724 <wcrtomb@plt+0x23904>
  425938:	b	42594c <wcrtomb@plt+0x20b2c>
  42593c:	mov	w8, wzr
  425940:	mov	x28, x22
  425944:	mov	x22, x19
  425948:	tbz	w8, #0, 425870 <wcrtomb@plt+0x20a50>
  42594c:	mov	x0, x22
  425950:	bl	425c10 <wcrtomb@plt+0x20df0>
  425954:	ldr	x8, [x26, #3376]
  425958:	sub	x8, x8, #0x1
  42595c:	str	x8, [x26, #3376]
  425960:	cbz	x28, 42596c <wcrtomb@plt+0x20b4c>
  425964:	str	x19, [x28]
  425968:	b	42586c <wcrtomb@plt+0x20a4c>
  42596c:	str	x19, [x24, #3360]
  425970:	b	42586c <wcrtomb@plt+0x20a4c>
  425974:	ldr	x19, [x24, #3360]
  425978:	cbz	x19, 425a30 <wcrtomb@plt+0x20c10>
  42597c:	tbz	w20, #0, 425a50 <wcrtomb@plt+0x20c30>
  425980:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x15da0>
  425984:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  425988:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42598c:	add	x20, x20, #0x232
  425990:	b	4259ac <wcrtomb@plt+0x20b8c>
  425994:	mov	x0, x21
  425998:	bl	425c10 <wcrtomb@plt+0x20df0>
  42599c:	ldr	x8, [x24, #3376]
  4259a0:	sub	x8, x8, #0x1
  4259a4:	str	x8, [x24, #3376]
  4259a8:	cbz	x19, 425a3c <wcrtomb@plt+0x20c1c>
  4259ac:	mov	x21, x19
  4259b0:	ldr	w0, [x21, #8]
  4259b4:	ldr	x19, [x19]
  4259b8:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  4259bc:	ldr	w8, [x21, #8]
  4259c0:	cbz	w8, 4259e4 <wcrtomb@plt+0x20bc4>
  4259c4:	ldrb	w8, [x21, #24]
  4259c8:	cbz	w8, 4259e4 <wcrtomb@plt+0x20bc4>
  4259cc:	ldr	x0, [x21, #16]
  4259d0:	ldrb	w8, [x0]
  4259d4:	cbz	w8, 4259ec <wcrtomb@plt+0x20bcc>
  4259d8:	mov	x1, x20
  4259dc:	bl	404920 <strcmp@plt>
  4259e0:	cbz	w0, 4259ec <wcrtomb@plt+0x20bcc>
  4259e4:	ldr	x22, [x21, #16]
  4259e8:	b	425a00 <wcrtomb@plt+0x20be0>
  4259ec:	bl	41ac34 <wcrtomb@plt+0x15e14>
  4259f0:	ldr	w8, [x21, #8]
  4259f4:	mov	x22, x0
  4259f8:	sub	w0, w8, #0x1
  4259fc:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  425a00:	ldr	w0, [x23, #2240]
  425a04:	mov	w2, #0x200                 	// #512
  425a08:	mov	x1, x22
  425a0c:	bl	404320 <unlinkat@plt>
  425a10:	cbz	w0, 425994 <wcrtomb@plt+0x20b74>
  425a14:	bl	404d00 <__errno_location@plt>
  425a18:	ldr	w8, [x0]
  425a1c:	cmp	w8, #0x2
  425a20:	b.eq	425994 <wcrtomb@plt+0x20b74>  // b.none
  425a24:	mov	x0, x22
  425a28:	bl	42842c <wcrtomb@plt+0x2360c>
  425a2c:	b	425994 <wcrtomb@plt+0x20b74>
  425a30:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425a34:	add	x8, x8, #0xd28
  425a38:	b	425a4c <wcrtomb@plt+0x20c2c>
  425a3c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425a40:	str	xzr, [x8, #3368]
  425a44:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425a48:	add	x8, x8, #0xd20
  425a4c:	str	xzr, [x8]
  425a50:	ldur	w0, [x29, #-4]
  425a54:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  425a58:	ldp	x20, x19, [sp, #96]
  425a5c:	ldp	x22, x21, [sp, #80]
  425a60:	ldp	x24, x23, [sp, #64]
  425a64:	ldp	x26, x25, [sp, #48]
  425a68:	ldp	x28, x27, [sp, #32]
  425a6c:	ldp	x29, x30, [sp, #16]
  425a70:	add	sp, sp, #0x70
  425a74:	ret
  425a78:	stp	x29, x30, [sp, #-64]!
  425a7c:	stp	x22, x21, [sp, #32]
  425a80:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425a84:	ldr	x8, [x22, #3360]
  425a88:	stp	x24, x23, [sp, #16]
  425a8c:	stp	x20, x19, [sp, #48]
  425a90:	mov	w20, w1
  425a94:	mov	x21, x0
  425a98:	and	w24, w1, #0x1
  425a9c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425aa0:	mov	x29, sp
  425aa4:	cbz	x8, 425ac0 <wcrtomb@plt+0x20ca0>
  425aa8:	ldr	x9, [x23, #3952]
  425aac:	ldr	x8, [x8, #32]
  425ab0:	cmp	x9, x8
  425ab4:	b.ls	425ac0 <wcrtomb@plt+0x20ca0>  // b.plast
  425ab8:	mov	w0, wzr
  425abc:	bl	425810 <wcrtomb@plt+0x209f0>
  425ac0:	bl	425b98 <wcrtomb@plt+0x20d78>
  425ac4:	str	xzr, [x0]
  425ac8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425acc:	ldr	w8, [x8]
  425ad0:	mov	x19, x0
  425ad4:	str	w8, [x0, #8]
  425ad8:	mov	x0, x21
  425adc:	bl	43d39c <argp_usage@@Base+0xb7a0>
  425ae0:	str	x0, [x19, #16]
  425ae4:	bl	4198e4 <wcrtomb@plt+0x14ac4>
  425ae8:	strb	w24, [x19, #24]
  425aec:	ldr	x8, [x23, #3952]
  425af0:	str	x8, [x19, #32]
  425af4:	tbz	w20, #0, 425b70 <wcrtomb@plt+0x20d50>
  425af8:	ldr	x0, [x19, #16]
  425afc:	ldrb	w8, [x0]
  425b00:	cbz	w8, 425b14 <wcrtomb@plt+0x20cf4>
  425b04:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  425b08:	add	x1, x1, #0x232
  425b0c:	bl	404920 <strcmp@plt>
  425b10:	cbnz	w0, 425b70 <wcrtomb@plt+0x20d50>
  425b14:	ldr	x8, [x22, #3360]
  425b18:	cbz	x8, 425b70 <wcrtomb@plt+0x20d50>
  425b1c:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x15da0>
  425b20:	mov	x22, xzr
  425b24:	add	x20, x20, #0x232
  425b28:	b	425b44 <wcrtomb@plt+0x20d24>
  425b2c:	ldr	w8, [x22, #8]
  425b30:	ldr	w9, [x19, #8]
  425b34:	cmp	w8, w9
  425b38:	b.lt	425b78 <wcrtomb@plt+0x20d58>  // b.tstop
  425b3c:	ldr	x8, [x22]
  425b40:	cbz	x8, 425b70 <wcrtomb@plt+0x20d50>
  425b44:	mov	x21, x22
  425b48:	mov	x22, x8
  425b4c:	ldrb	w8, [x8, #24]
  425b50:	cbz	w8, 425b3c <wcrtomb@plt+0x20d1c>
  425b54:	ldr	x0, [x22, #16]
  425b58:	ldrb	w8, [x0]
  425b5c:	cbz	w8, 425b2c <wcrtomb@plt+0x20d0c>
  425b60:	mov	x1, x20
  425b64:	bl	404920 <strcmp@plt>
  425b68:	cbnz	w0, 425b3c <wcrtomb@plt+0x20d1c>
  425b6c:	b	425b2c <wcrtomb@plt+0x20d0c>
  425b70:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425b74:	ldr	x21, [x8, #3368]
  425b78:	mov	x0, x21
  425b7c:	mov	x1, x19
  425b80:	bl	425bd0 <wcrtomb@plt+0x20db0>
  425b84:	ldp	x20, x19, [sp, #48]
  425b88:	ldp	x22, x21, [sp, #32]
  425b8c:	ldp	x24, x23, [sp, #16]
  425b90:	ldp	x29, x30, [sp], #64
  425b94:	ret
  425b98:	stp	x29, x30, [sp, #-16]!
  425b9c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425ba0:	ldr	x0, [x8, #3352]
  425ba4:	mov	x29, sp
  425ba8:	cbz	x0, 425bc0 <wcrtomb@plt+0x20da0>
  425bac:	ldr	x9, [x0]
  425bb0:	str	x9, [x8, #3352]
  425bb4:	str	xzr, [x0]
  425bb8:	ldp	x29, x30, [sp], #16
  425bbc:	ret
  425bc0:	mov	w0, #0x28                  	// #40
  425bc4:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  425bc8:	ldp	x29, x30, [sp], #16
  425bcc:	ret
  425bd0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425bd4:	add	x8, x8, #0xd20
  425bd8:	cmp	x0, #0x0
  425bdc:	csel	x8, x8, x0, eq  // eq = none
  425be0:	ldr	x9, [x8]
  425be4:	str	x9, [x1]
  425be8:	str	x1, [x8]
  425bec:	ldr	x8, [x1]
  425bf0:	cbnz	x8, 425bfc <wcrtomb@plt+0x20ddc>
  425bf4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425bf8:	str	x1, [x8, #3368]
  425bfc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425c00:	ldr	x9, [x8, #3376]
  425c04:	add	x9, x9, #0x1
  425c08:	str	x9, [x8, #3376]
  425c0c:	ret
  425c10:	stp	x29, x30, [sp, #-32]!
  425c14:	str	x19, [sp, #16]
  425c18:	mov	x19, x0
  425c1c:	ldr	x0, [x0, #16]
  425c20:	mov	x29, sp
  425c24:	bl	4049d0 <free@plt>
  425c28:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425c2c:	ldr	x9, [x8, #3352]
  425c30:	str	x9, [x19]
  425c34:	str	x19, [x8, #3352]
  425c38:	ldr	x19, [sp, #16]
  425c3c:	ldp	x29, x30, [sp], #32
  425c40:	ret
  425c44:	sub	sp, sp, #0xf0
  425c48:	stp	x29, x30, [sp, #144]
  425c4c:	stp	x28, x27, [sp, #160]
  425c50:	stp	x26, x25, [sp, #176]
  425c54:	stp	x24, x23, [sp, #192]
  425c58:	stp	x22, x21, [sp, #208]
  425c5c:	stp	x20, x19, [sp, #224]
  425c60:	add	x29, sp, #0x90
  425c64:	bl	41b4a4 <wcrtomb@plt+0x16684>
  425c68:	mov	w0, #0x2                   	// #2
  425c6c:	mov	w28, #0x2                   	// #2
  425c70:	bl	405f4c <wcrtomb@plt+0x112c>
  425c74:	bl	4119d8 <wcrtomb@plt+0xcbb8>
  425c78:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425c7c:	adrp	x20, 470000 <argp_program_version_hook@@Base+0x258>
  425c80:	adrp	x23, 456000 <_obstack_memory_used@@Base+0x17da0>
  425c84:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425c88:	mov	w25, wzr
  425c8c:	mov	w26, wzr
  425c90:	add	x19, x19, #0xfe8
  425c94:	add	x20, x20, #0x60
  425c98:	add	x23, x23, #0xa35
  425c9c:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425ca0:	add	x21, x21, #0xfd0
  425ca4:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  425ca8:	b	425ccc <wcrtomb@plt+0x20eac>
  425cac:	ldr	x8, [x22, #4072]
  425cb0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425cb4:	str	x8, [x9, #4008]
  425cb8:	mov	w26, #0x1                   	// #1
  425cbc:	mov	x0, x20
  425cc0:	bl	4224cc <wcrtomb@plt+0x1d6ac>
  425cc4:	mov	w25, w24
  425cc8:	tbnz	w26, #0, 425ed4 <wcrtomb@plt+0x210b4>
  425ccc:	mov	x0, x19
  425cd0:	mov	x1, x20
  425cd4:	mov	w2, wzr
  425cd8:	bl	4172f0 <wcrtomb@plt+0x124d0>
  425cdc:	mov	w24, w0
  425ce0:	cmp	w0, #0x5
  425ce4:	b.hi	425cbc <wcrtomb@plt+0x20e9c>  // b.pmore
  425ce8:	mov	w8, w24
  425cec:	adr	x9, 425cac <wcrtomb@plt+0x20e8c>
  425cf0:	ldrb	w10, [x23, x8]
  425cf4:	add	x9, x9, x10, lsl #2
  425cf8:	br	x9
  425cfc:	ldr	x0, [x22, #4072]
  425d00:	mov	x1, x20
  425d04:	mov	x2, x21
  425d08:	mov	w3, wzr
  425d0c:	bl	417798 <wcrtomb@plt+0x12978>
  425d10:	ldr	x8, [x22, #4072]
  425d14:	mov	x1, x20
  425d18:	ldrb	w0, [x8, #156]
  425d1c:	bl	416ce0 <wcrtomb@plt+0x11ec0>
  425d20:	ldr	w8, [x27, #860]
  425d24:	ldr	w9, [x21]
  425d28:	cmp	w8, #0x8
  425d2c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425d30:	str	w9, [x8, #816]
  425d34:	b.ne	425d68 <wcrtomb@plt+0x20f48>  // b.any
  425d38:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425d3c:	ldr	x0, [x8, #104]
  425d40:	bl	41c4ac <wcrtomb@plt+0x1768c>
  425d44:	cbz	x0, 425d68 <wcrtomb@plt+0x20f48>
  425d48:	mov	x25, x0
  425d4c:	ldr	w0, [x0, #40]
  425d50:	bl	41aaa4 <wcrtomb@plt+0x15c84>
  425d54:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425d58:	ldr	x0, [x8, #104]
  425d5c:	add	x1, sp, #0x10
  425d60:	bl	41a52c <wcrtomb@plt+0x1570c>
  425d64:	cbz	w0, 425e10 <wcrtomb@plt+0x20ff0>
  425d68:	bl	417ab0 <wcrtomb@plt+0x12c90>
  425d6c:	b	425cbc <wcrtomb@plt+0x20e9c>
  425d70:	ldr	x0, [x22, #4072]
  425d74:	bl	405744 <wcrtomb@plt+0x924>
  425d78:	cmp	w25, #0x4
  425d7c:	b.hi	425cbc <wcrtomb@plt+0x20e9c>  // b.pmore
  425d80:	adrp	x11, 456000 <_obstack_memory_used@@Base+0x17da0>
  425d84:	mov	w8, w25
  425d88:	add	x11, x11, #0xa3b
  425d8c:	adr	x9, 425d9c <wcrtomb@plt+0x20f7c>
  425d90:	ldrb	w10, [x11, x8]
  425d94:	add	x9, x9, x10, lsl #2
  425d98:	br	x9
  425d9c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425da0:	ldr	x8, [x8, #1008]
  425da4:	cbz	x8, 425dac <wcrtomb@plt+0x20f8c>
  425da8:	blr	x8
  425dac:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  425db0:	mov	w2, #0x5                   	// #5
  425db4:	mov	x0, xzr
  425db8:	add	x1, x1, #0x447
  425dbc:	bl	404bf0 <dcgettext@plt>
  425dc0:	mov	x2, x0
  425dc4:	mov	w0, wzr
  425dc8:	mov	w1, wzr
  425dcc:	bl	4041f0 <error@plt>
  425dd0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425dd4:	ldr	x8, [x8, #1008]
  425dd8:	cbz	x8, 425de0 <wcrtomb@plt+0x20fc0>
  425ddc:	blr	x8
  425de0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  425de4:	mov	w2, #0x5                   	// #5
  425de8:	mov	x0, xzr
  425dec:	add	x1, x1, #0xc8
  425df0:	bl	404bf0 <dcgettext@plt>
  425df4:	mov	x2, x0
  425df8:	mov	w0, wzr
  425dfc:	mov	w1, wzr
  425e00:	bl	4041f0 <error@plt>
  425e04:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425e08:	str	w28, [x8, #3456]
  425e0c:	b	425cbc <wcrtomb@plt+0x20e9c>
  425e10:	ldr	w8, [sp, #32]
  425e14:	and	w8, w8, #0xf000
  425e18:	cmp	w8, #0x4, lsl #12
  425e1c:	b.ne	425ea8 <wcrtomb@plt+0x21088>  // b.any
  425e20:	ldr	x0, [x25, #16]
  425e24:	mov	w1, #0x1                   	// #1
  425e28:	bl	41a230 <wcrtomb@plt+0x15410>
  425e2c:	cbz	x0, 425d68 <wcrtomb@plt+0x20f48>
  425e30:	mov	x27, x0
  425e34:	ldr	x0, [x25, #16]
  425e38:	bl	41a974 <wcrtomb@plt+0x15b54>
  425e3c:	ldrb	w8, [x27]
  425e40:	str	x27, [sp, #8]
  425e44:	mov	x27, x0
  425e48:	cbz	w8, 425e80 <wcrtomb@plt+0x21060>
  425e4c:	ldr	x28, [sp, #8]
  425e50:	mov	x0, x27
  425e54:	mov	x1, x28
  425e58:	bl	41af44 <wcrtomb@plt+0x16124>
  425e5c:	ldr	w1, [x25, #40]
  425e60:	mov	w2, wzr
  425e64:	mov	x3, xzr
  425e68:	bl	41b6c4 <wcrtomb@plt+0x168a4>
  425e6c:	mov	x0, x28
  425e70:	bl	404190 <strlen@plt>
  425e74:	add	x28, x0, x28
  425e78:	ldrb	w8, [x28, #1]!
  425e7c:	cbnz	w8, 425e50 <wcrtomb@plt+0x21030>
  425e80:	mov	x0, x27
  425e84:	bl	41af18 <wcrtomb@plt+0x160f8>
  425e88:	ldr	x0, [sp, #8]
  425e8c:	bl	4049d0 <free@plt>
  425e90:	mov	x0, x25
  425e94:	bl	41b834 <wcrtomb@plt+0x16a14>
  425e98:	adrp	x27, 470000 <argp_program_version_hook@@Base+0x258>
  425e9c:	mov	w28, #0x2                   	// #2
  425ea0:	bl	417ab0 <wcrtomb@plt+0x12c90>
  425ea4:	b	425cbc <wcrtomb@plt+0x20e9c>
  425ea8:	add	x0, sp, #0x10
  425eac:	bl	43cc84 <argp_usage@@Base+0xb088>
  425eb0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425eb4:	add	x8, x8, #0x148
  425eb8:	ldp	x2, x3, [x8]
  425ebc:	bl	422590 <wcrtomb@plt+0x1d770>
  425ec0:	cmp	w0, #0x0
  425ec4:	b.gt	425d68 <wcrtomb@plt+0x20f48>
  425ec8:	mov	x0, x25
  425ecc:	bl	41b834 <wcrtomb@plt+0x16a14>
  425ed0:	b	425d68 <wcrtomb@plt+0x20f48>
  425ed4:	bl	40558c <wcrtomb@plt+0x76c>
  425ed8:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  425edc:	ldr	x9, [x9, #4008]
  425ee0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425ee4:	mov	w10, #0x1                   	// #1
  425ee8:	strb	w10, [x8, #992]
  425eec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  425ef0:	str	x9, [x8, #1000]
  425ef4:	bl	41c52c <wcrtomb@plt+0x1770c>
  425ef8:	cbz	x0, 425f68 <wcrtomb@plt+0x21148>
  425efc:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x11da0>
  425f00:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  425f04:	add	x19, x19, #0xf27
  425f08:	b	425f24 <wcrtomb@plt+0x21104>
  425f0c:	mov	x0, xzr
  425f10:	mov	x1, x20
  425f14:	mov	x2, x20
  425f18:	bl	40b6fc <wcrtomb@plt+0x68dc>
  425f1c:	bl	41c52c <wcrtomb@plt+0x1770c>
  425f20:	cbz	x0, 425f68 <wcrtomb@plt+0x21148>
  425f24:	ldr	x20, [x0, #16]
  425f28:	mov	x1, xzr
  425f2c:	mov	x0, x20
  425f30:	bl	40e11c <wcrtomb@plt+0x92fc>
  425f34:	tbnz	w0, #0, 425f1c <wcrtomb@plt+0x210fc>
  425f38:	ldrb	w8, [x21, #592]
  425f3c:	cbz	w8, 425f50 <wcrtomb@plt+0x21130>
  425f40:	mov	x0, x19
  425f44:	mov	x1, x20
  425f48:	bl	4211d4 <wcrtomb@plt+0x1c3b4>
  425f4c:	cbz	w0, 425f1c <wcrtomb@plt+0x210fc>
  425f50:	ldr	w8, [x27, #860]
  425f54:	cmp	w8, #0x2
  425f58:	b.ne	425f0c <wcrtomb@plt+0x210ec>  // b.any
  425f5c:	mov	x0, x20
  425f60:	bl	425f9c <wcrtomb@plt+0x2117c>
  425f64:	b	425f1c <wcrtomb@plt+0x210fc>
  425f68:	bl	40a740 <wcrtomb@plt+0x5920>
  425f6c:	bl	405c30 <wcrtomb@plt+0xe10>
  425f70:	bl	4257d0 <wcrtomb@plt+0x209b0>
  425f74:	bl	41baa8 <wcrtomb@plt+0x16c88>
  425f78:	ldp	x20, x19, [sp, #224]
  425f7c:	ldp	x22, x21, [sp, #208]
  425f80:	ldp	x24, x23, [sp, #192]
  425f84:	ldp	x26, x25, [sp, #176]
  425f88:	ldp	x28, x27, [sp, #160]
  425f8c:	ldp	x29, x30, [sp, #144]
  425f90:	add	sp, sp, #0xf0
  425f94:	ret
  425f98:	bl	404870 <abort@plt>
  425f9c:	sub	sp, sp, #0xe0
  425fa0:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  425fa4:	ldr	w8, [x8, #2240]
  425fa8:	stp	x20, x19, [sp, #208]
  425fac:	mov	x19, x0
  425fb0:	mov	x1, x19
  425fb4:	mov	w0, w8
  425fb8:	mov	w2, wzr
  425fbc:	stp	x29, x30, [sp, #160]
  425fc0:	stp	x24, x23, [sp, #176]
  425fc4:	stp	x22, x21, [sp, #192]
  425fc8:	add	x29, sp, #0xa0
  425fcc:	bl	404ce0 <openat@plt>
  425fd0:	tbnz	w0, #31, 425ff0 <wcrtomb@plt+0x211d0>
  425fd4:	add	x1, sp, #0x20
  425fd8:	mov	w21, w0
  425fdc:	bl	4500b0 <_obstack_memory_used@@Base+0x11e50>
  425fe0:	cbz	w0, 425ffc <wcrtomb@plt+0x211dc>
  425fe4:	mov	x0, x19
  425fe8:	bl	4286a4 <wcrtomb@plt+0x23884>
  425fec:	b	42607c <wcrtomb@plt+0x2125c>
  425ff0:	mov	x0, x19
  425ff4:	bl	428160 <wcrtomb@plt+0x23340>
  425ff8:	b	426090 <wcrtomb@plt+0x21270>
  425ffc:	ldr	x20, [sp, #80]
  426000:	cmp	x20, #0x1
  426004:	b.lt	42607c <wcrtomb@plt+0x2125c>  // b.tstop
  426008:	mov	w24, #0x200                 	// #512
  42600c:	bl	4055d4 <wcrtomb@plt+0x7b4>
  426010:	mov	x22, x0
  426014:	bl	405788 <wcrtomb@plt+0x968>
  426018:	mov	x23, x0
  42601c:	cmp	x20, x0
  426020:	b.cs	426044 <wcrtomb@plt+0x21224>  // b.hs, b.nlast
  426024:	ands	x8, x20, #0x1ff
  426028:	mov	x23, x20
  42602c:	b.eq	426044 <wcrtomb@plt+0x21224>  // b.none
  426030:	add	x0, x22, x20
  426034:	sub	x2, x24, x8
  426038:	mov	w1, wzr
  42603c:	bl	404600 <memset@plt>
  426040:	mov	x23, x20
  426044:	mov	w0, w21
  426048:	mov	x1, x22
  42604c:	mov	x2, x23
  426050:	bl	43c740 <argp_usage@@Base+0xab44>
  426054:	cbz	x0, 4260a8 <wcrtomb@plt+0x21288>
  426058:	cmn	x0, #0x1
  42605c:	b.eq	426110 <wcrtomb@plt+0x212f0>  // b.none
  426060:	sub	x8, x0, #0x1
  426064:	and	x8, x8, #0xfffffffffffffe00
  426068:	sub	x20, x20, x0
  42606c:	add	x0, x22, x8
  426070:	bl	405744 <wcrtomb@plt+0x924>
  426074:	cmp	x20, #0x0
  426078:	b.gt	42600c <wcrtomb@plt+0x211ec>
  42607c:	mov	w0, w21
  426080:	bl	4047c0 <close@plt>
  426084:	cbz	w0, 426090 <wcrtomb@plt+0x21270>
  426088:	mov	x0, x19
  42608c:	bl	428014 <wcrtomb@plt+0x231f4>
  426090:	ldp	x20, x19, [sp, #208]
  426094:	ldp	x22, x21, [sp, #192]
  426098:	ldp	x24, x23, [sp, #176]
  42609c:	ldp	x29, x30, [sp, #160]
  4260a0:	add	sp, sp, #0xe0
  4260a4:	ret
  4260a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4260ac:	ldr	x8, [x8, #1008]
  4260b0:	cbz	x8, 4260b8 <wcrtomb@plt+0x21298>
  4260b4:	blr	x8
  4260b8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4260bc:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  4260c0:	add	x1, x1, #0xa40
  4260c4:	add	x2, x2, #0xa5b
  4260c8:	mov	w4, #0x5                   	// #5
  4260cc:	mov	x0, xzr
  4260d0:	mov	x3, x20
  4260d4:	bl	404af0 <dcngettext@plt>
  4260d8:	mov	x21, x0
  4260dc:	mov	x0, x19
  4260e0:	bl	43beac <argp_usage@@Base+0xa2b0>
  4260e4:	mov	x19, x0
  4260e8:	add	x1, sp, #0x8
  4260ec:	mov	x0, x20
  4260f0:	bl	43650c <argp_usage@@Base+0x4910>
  4260f4:	mov	x4, x0
  4260f8:	mov	w0, wzr
  4260fc:	mov	w1, wzr
  426100:	mov	x2, x21
  426104:	mov	x3, x19
  426108:	bl	4041f0 <error@plt>
  42610c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  426110:	ldr	x8, [sp, #80]
  426114:	mov	x0, x19
  426118:	mov	x2, x23
  42611c:	sub	x1, x8, x20
  426120:	bl	428354 <wcrtomb@plt+0x23534>
  426124:	sub	sp, sp, #0x50
  426128:	and	w0, w0, #0x1
  42612c:	stp	x29, x30, [sp, #32]
  426130:	stp	x22, x21, [sp, #48]
  426134:	stp	x20, x19, [sp, #64]
  426138:	add	x29, sp, #0x20
  42613c:	mov	x19, x2
  426140:	mov	x21, x1
  426144:	bl	4261e8 <wcrtomb@plt+0x213c8>
  426148:	cmn	x0, #0x1
  42614c:	b.eq	426168 <wcrtomb@plt+0x21348>  // b.none
  426150:	mov	x20, x0
  426154:	cbnz	x0, 426170 <wcrtomb@plt+0x21350>
  426158:	mov	x0, x21
  42615c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  426160:	str	x0, [x19]
  426164:	b	4261d0 <wcrtomb@plt+0x213b0>
  426168:	mov	w0, wzr
  42616c:	b	4261d4 <wcrtomb@plt+0x213b4>
  426170:	mov	x0, x21
  426174:	bl	404190 <strlen@plt>
  426178:	add	x8, x0, #0x1
  42617c:	mov	w0, #0x1                   	// #1
  426180:	bfi	x0, x8, #4, #60
  426184:	stp	x0, x8, [sp]
  426188:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  42618c:	mov	x22, x0
  426190:	str	x0, [sp, #16]
  426194:	sub	x1, x29, #0x8
  426198:	add	x2, sp, #0x8
  42619c:	add	x3, sp, #0x10
  4261a0:	mov	x4, sp
  4261a4:	mov	x0, x20
  4261a8:	stur	x21, [x29, #-8]
  4261ac:	bl	404940 <iconv@plt>
  4261b0:	cbz	x0, 4261c4 <wcrtomb@plt+0x213a4>
  4261b4:	mov	x0, x22
  4261b8:	bl	4049d0 <free@plt>
  4261bc:	mov	w0, wzr
  4261c0:	b	4261d4 <wcrtomb@plt+0x213b4>
  4261c4:	ldr	x8, [sp, #16]
  4261c8:	strb	wzr, [x8]
  4261cc:	str	x22, [x19]
  4261d0:	mov	w0, #0x1                   	// #1
  4261d4:	ldp	x20, x19, [sp, #64]
  4261d8:	ldp	x22, x21, [sp, #48]
  4261dc:	ldp	x29, x30, [sp, #32]
  4261e0:	add	sp, sp, #0x50
  4261e4:	ret
  4261e8:	stp	x29, x30, [sp, #-48]!
  4261ec:	str	x21, [sp, #16]
  4261f0:	stp	x20, x19, [sp, #32]
  4261f4:	mov	w19, w0
  4261f8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4261fc:	and	x20, x19, #0x1
  426200:	add	x21, x21, #0x1b0
  426204:	ldr	x8, [x21, x20, lsl #3]
  426208:	mov	x29, sp
  42620c:	cmn	x8, #0x1
  426210:	b.ne	426244 <wcrtomb@plt+0x21424>  // b.any
  426214:	bl	436544 <argp_usage@@Base+0x4948>
  426218:	mov	x2, x0
  42621c:	tbz	w19, #0, 426230 <wcrtomb@plt+0x21410>
  426220:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  426224:	add	x0, x0, #0xa77
  426228:	mov	x1, x2
  42622c:	b	42623c <wcrtomb@plt+0x2141c>
  426230:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  426234:	add	x1, x1, #0xa77
  426238:	mov	x0, x2
  42623c:	bl	404b50 <iconv_open@plt>
  426240:	str	x0, [x21, x20, lsl #3]
  426244:	ldr	x0, [x21, x20, lsl #3]
  426248:	ldp	x20, x19, [sp, #32]
  42624c:	ldr	x21, [sp, #16]
  426250:	ldp	x29, x30, [sp], #48
  426254:	ret
  426258:	ldrb	w9, [x0]
  42625c:	cbz	w9, 426274 <wcrtomb@plt+0x21454>
  426260:	add	x8, x0, #0x1
  426264:	sxtb	w9, w9
  426268:	tbnz	w9, #31, 42627c <wcrtomb@plt+0x2145c>
  42626c:	ldrb	w9, [x8], #1
  426270:	cbnz	w9, 426264 <wcrtomb@plt+0x21444>
  426274:	mov	w0, #0x1                   	// #1
  426278:	ret
  42627c:	mov	w0, wzr
  426280:	ret
  426284:	stp	x29, x30, [sp, #-48]!
  426288:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  42628c:	add	x1, x1, #0x3b3
  426290:	stp	x22, x21, [sp, #16]
  426294:	stp	x20, x19, [sp, #32]
  426298:	mov	x29, sp
  42629c:	mov	x19, x0
  4262a0:	bl	404920 <strcmp@plt>
  4262a4:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4262a8:	cbz	w0, 4262ec <wcrtomb@plt+0x214cc>
  4262ac:	mov	x0, x19
  4262b0:	bl	404190 <strlen@plt>
  4262b4:	cmp	x0, #0x3
  4262b8:	b.cc	4262f4 <wcrtomb@plt+0x214d4>  // b.lo, b.ul, b.last
  4262bc:	ldrh	w8, [x19]
  4262c0:	ldrb	w10, [x19, #2]
  4262c4:	mov	w9, #0x6f6e                	// #28526
  4262c8:	mov	w11, #0x2d                  	// #45
  4262cc:	eor	w8, w8, w9
  4262d0:	eor	w9, w10, w11
  4262d4:	orr	w8, w8, w9
  4262d8:	add	x12, x19, #0x3
  4262dc:	tst	w8, #0xffff
  4262e0:	cset	w22, eq  // eq = none
  4262e4:	csel	x19, x12, x19, eq  // eq = none
  4262e8:	b	4262f8 <wcrtomb@plt+0x214d8>
  4262ec:	mov	w8, wzr
  4262f0:	b	426344 <wcrtomb@plt+0x21524>
  4262f4:	mov	w22, wzr
  4262f8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4262fc:	ldr	x5, [x8, #960]
  426300:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426304:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  426308:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  42630c:	add	x20, x20, #0x1c4
  426310:	add	x0, x0, #0xa81
  426314:	add	x2, x2, #0xbb8
  426318:	mov	w4, #0x4                   	// #4
  42631c:	mov	x1, x19
  426320:	mov	x3, x20
  426324:	bl	42e4c8 <wcrtomb@plt+0x296a8>
  426328:	ldr	w8, [x20, x0, lsl #2]
  42632c:	cbz	w22, 42633c <wcrtomb@plt+0x2151c>
  426330:	ldr	w9, [x21, #448]
  426334:	bic	w8, w9, w8
  426338:	b	426344 <wcrtomb@plt+0x21524>
  42633c:	ldr	w9, [x21, #448]
  426340:	orr	w8, w9, w8
  426344:	str	w8, [x21, #448]
  426348:	ldp	x20, x19, [sp, #32]
  42634c:	ldp	x22, x21, [sp, #16]
  426350:	ldp	x29, x30, [sp], #48
  426354:	ret
  426358:	stp	x29, x30, [sp, #-48]!
  42635c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426360:	ldr	w8, [x8, #896]
  426364:	stp	x22, x21, [sp, #16]
  426368:	stp	x20, x19, [sp, #32]
  42636c:	mov	x29, sp
  426370:	cmp	w8, #0x1
  426374:	b.lt	4263dc <wcrtomb@plt+0x215bc>  // b.tstop
  426378:	mov	x20, x2
  42637c:	add	x2, x2, #0x58
  426380:	mov	w21, w4
  426384:	mov	x19, x1
  426388:	mov	w22, w0
  42638c:	bl	4263ec <wcrtomb@plt+0x215cc>
  426390:	cbz	w0, 4263dc <wcrtomb@plt+0x215bc>
  426394:	cmn	w0, #0x1
  426398:	b.ne	4263b0 <wcrtomb@plt+0x21590>  // b.any
  42639c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4263a0:	add	x0, x0, #0xc88
  4263a4:	mov	x1, x19
  4263a8:	bl	427e70 <wcrtomb@plt+0x23050>
  4263ac:	b	4263dc <wcrtomb@plt+0x215bc>
  4263b0:	add	x2, x20, #0x38
  4263b4:	add	x3, x20, #0x40
  4263b8:	mov	w0, w22
  4263bc:	mov	x1, x19
  4263c0:	bl	4265c8 <wcrtomb@plt+0x217a8>
  4263c4:	cbnz	w21, 4263dc <wcrtomb@plt+0x215bc>
  4263c8:	add	x2, x20, #0x48
  4263cc:	add	x3, x20, #0x50
  4263d0:	mov	w0, w22
  4263d4:	mov	x1, x19
  4263d8:	bl	426670 <wcrtomb@plt+0x21850>
  4263dc:	ldp	x20, x19, [sp, #32]
  4263e0:	ldp	x22, x21, [sp, #16]
  4263e4:	ldp	x29, x30, [sp], #48
  4263e8:	ret
  4263ec:	stp	x29, x30, [sp, #-96]!
  4263f0:	str	x28, [sp, #16]
  4263f4:	stp	x26, x25, [sp, #32]
  4263f8:	stp	x24, x23, [sp, #48]
  4263fc:	stp	x22, x21, [sp, #64]
  426400:	stp	x20, x19, [sp, #80]
  426404:	mov	x29, sp
  426408:	sub	sp, sp, #0xfc0
  42640c:	mov	x20, x2
  426410:	cmn	w0, #0x64
  426414:	mov	x21, x1
  426418:	b.eq	426428 <wcrtomb@plt+0x21608>  // b.none
  42641c:	ldrb	w8, [x21]
  426420:	cmp	w8, #0x2f
  426424:	b.ne	42645c <wcrtomb@plt+0x2163c>  // b.any
  426428:	mov	x0, x21
  42642c:	mov	x1, x20
  426430:	bl	433404 <argp_usage@@Base+0x1808>
  426434:	mov	w19, w0
  426438:	mov	w0, w19
  42643c:	add	sp, sp, #0xfc0
  426440:	ldp	x20, x19, [sp, #80]
  426444:	ldp	x22, x21, [sp, #64]
  426448:	ldp	x24, x23, [sp, #48]
  42644c:	ldp	x26, x25, [sp, #32]
  426450:	ldr	x28, [sp, #16]
  426454:	ldp	x29, x30, [sp], #96
  426458:	ret
  42645c:	mov	w22, w0
  426460:	mov	x0, sp
  426464:	mov	w1, w22
  426468:	mov	x2, x21
  42646c:	mov	x26, sp
  426470:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  426474:	cbz	x0, 4264b4 <wcrtomb@plt+0x21694>
  426478:	mov	x1, x20
  42647c:	mov	x24, x0
  426480:	bl	433404 <argp_usage@@Base+0x1808>
  426484:	mov	w19, w0
  426488:	bl	404d00 <__errno_location@plt>
  42648c:	ldr	w25, [x0]
  426490:	mov	x23, x0
  426494:	cmp	x24, x26
  426498:	b.eq	4264a4 <wcrtomb@plt+0x21684>  // b.none
  42649c:	mov	x0, x24
  4264a0:	bl	4049d0 <free@plt>
  4264a4:	cmn	w19, #0x1
  4264a8:	b.eq	4264b8 <wcrtomb@plt+0x21698>  // b.none
  4264ac:	mov	w8, #0x1                   	// #1
  4264b0:	b	4264e4 <wcrtomb@plt+0x216c4>
  4264b4:	b	4264e8 <wcrtomb@plt+0x216c8>
  4264b8:	cmp	w25, #0x26
  4264bc:	mov	w8, wzr
  4264c0:	b.hi	426574 <wcrtomb@plt+0x21754>  // b.pmore
  4264c4:	mov	w9, w25
  4264c8:	mov	w10, #0x1                   	// #1
  4264cc:	lsl	x9, x10, x9
  4264d0:	mov	x10, #0x2006                	// #8198
  4264d4:	movk	x10, #0x10, lsl #16
  4264d8:	movk	x10, #0x40, lsl #32
  4264dc:	tst	x9, x10
  4264e0:	b.eq	426574 <wcrtomb@plt+0x21754>  // b.none
  4264e4:	cbnz	w8, 4264ec <wcrtomb@plt+0x216cc>
  4264e8:	mov	w8, wzr
  4264ec:	cbnz	w8, 426438 <wcrtomb@plt+0x21618>
  4264f0:	mov	x0, sp
  4264f4:	bl	43c888 <argp_usage@@Base+0xac8c>
  4264f8:	cbnz	w0, 4265b0 <wcrtomb@plt+0x21790>
  4264fc:	tbnz	w22, #31, 426528 <wcrtomb@plt+0x21708>
  426500:	ldr	w8, [sp]
  426504:	cmp	w8, w22
  426508:	b.ne	426528 <wcrtomb@plt+0x21708>  // b.any
  42650c:	mov	x0, sp
  426510:	bl	43c910 <argp_usage@@Base+0xad14>
  426514:	bl	404d00 <__errno_location@plt>
  426518:	mov	w8, #0x9                   	// #9
  42651c:	str	w8, [x0]
  426520:	mov	w19, #0xffffffff            	// #-1
  426524:	b	426438 <wcrtomb@plt+0x21618>
  426528:	mov	w0, w22
  42652c:	bl	404200 <fchdir@plt>
  426530:	cbz	w0, 426554 <wcrtomb@plt+0x21734>
  426534:	bl	404d00 <__errno_location@plt>
  426538:	ldr	w20, [x0]
  42653c:	mov	x19, x0
  426540:	mov	x0, sp
  426544:	bl	43c910 <argp_usage@@Base+0xad14>
  426548:	str	w20, [x19]
  42654c:	mov	w19, #0xffffffff            	// #-1
  426550:	b	426438 <wcrtomb@plt+0x21618>
  426554:	mov	x0, x21
  426558:	mov	x1, x20
  42655c:	bl	433404 <argp_usage@@Base+0x1808>
  426560:	mov	w19, w0
  426564:	cmn	w0, #0x1
  426568:	b.eq	426584 <wcrtomb@plt+0x21764>  // b.none
  42656c:	mov	w20, wzr
  426570:	b	42658c <wcrtomb@plt+0x2176c>
  426574:	cmp	w25, #0x5f
  426578:	b.eq	4264e4 <wcrtomb@plt+0x216c4>  // b.none
  42657c:	str	w25, [x23]
  426580:	b	4264ac <wcrtomb@plt+0x2168c>
  426584:	bl	404d00 <__errno_location@plt>
  426588:	ldr	w20, [x0]
  42658c:	mov	x0, sp
  426590:	bl	43c8e0 <argp_usage@@Base+0xace4>
  426594:	cbnz	w0, 4265bc <wcrtomb@plt+0x2179c>
  426598:	mov	x0, sp
  42659c:	bl	43c910 <argp_usage@@Base+0xad14>
  4265a0:	cbz	w20, 426438 <wcrtomb@plt+0x21618>
  4265a4:	bl	404d00 <__errno_location@plt>
  4265a8:	str	w20, [x0]
  4265ac:	b	426438 <wcrtomb@plt+0x21618>
  4265b0:	bl	404d00 <__errno_location@plt>
  4265b4:	ldr	w0, [x0]
  4265b8:	bl	436eb4 <argp_usage@@Base+0x52b8>
  4265bc:	bl	404d00 <__errno_location@plt>
  4265c0:	ldr	w0, [x0]
  4265c4:	bl	436ef4 <argp_usage@@Base+0x52f8>
  4265c8:	stp	x29, x30, [sp, #-64]!
  4265cc:	stp	x22, x21, [sp, #32]
  4265d0:	mov	x21, x2
  4265d4:	mov	w2, #0x8000                	// #32768
  4265d8:	str	x23, [sp, #16]
  4265dc:	stp	x20, x19, [sp, #48]
  4265e0:	mov	x29, sp
  4265e4:	mov	x20, x3
  4265e8:	mov	x19, x1
  4265ec:	bl	4273c4 <wcrtomb@plt+0x225a4>
  4265f0:	cbz	x0, 426630 <wcrtomb@plt+0x21810>
  4265f4:	mov	x1, xzr
  4265f8:	mov	x23, x0
  4265fc:	bl	4047e0 <acl_to_text@plt>
  426600:	mov	x22, x0
  426604:	mov	x0, x23
  426608:	bl	404df0 <acl_free@plt>
  42660c:	cbz	x22, 42664c <wcrtomb@plt+0x2182c>
  426610:	mov	x0, x22
  426614:	bl	43d39c <argp_usage@@Base+0xb7a0>
  426618:	mov	x1, x20
  42661c:	str	x0, [x21]
  426620:	bl	427598 <wcrtomb@plt+0x22778>
  426624:	mov	x0, x22
  426628:	bl	404df0 <acl_free@plt>
  42662c:	b	42665c <wcrtomb@plt+0x2183c>
  426630:	bl	404d00 <__errno_location@plt>
  426634:	ldr	w8, [x0]
  426638:	cmp	w8, #0x5f
  42663c:	b.eq	42665c <wcrtomb@plt+0x2183c>  // b.none
  426640:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  426644:	add	x0, x0, #0xd20
  426648:	b	426654 <wcrtomb@plt+0x21834>
  42664c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  426650:	add	x0, x0, #0xd30
  426654:	mov	x1, x19
  426658:	bl	427e70 <wcrtomb@plt+0x23050>
  42665c:	ldp	x20, x19, [sp, #48]
  426660:	ldp	x22, x21, [sp, #32]
  426664:	ldr	x23, [sp, #16]
  426668:	ldp	x29, x30, [sp], #64
  42666c:	ret
  426670:	stp	x29, x30, [sp, #-64]!
  426674:	stp	x22, x21, [sp, #32]
  426678:	mov	x21, x2
  42667c:	mov	w2, #0x4000                	// #16384
  426680:	str	x23, [sp, #16]
  426684:	stp	x20, x19, [sp, #48]
  426688:	mov	x29, sp
  42668c:	mov	x20, x3
  426690:	mov	x19, x1
  426694:	bl	4273c4 <wcrtomb@plt+0x225a4>
  426698:	cbz	x0, 4266d8 <wcrtomb@plt+0x218b8>
  42669c:	mov	x1, xzr
  4266a0:	mov	x23, x0
  4266a4:	bl	4047e0 <acl_to_text@plt>
  4266a8:	mov	x22, x0
  4266ac:	mov	x0, x23
  4266b0:	bl	404df0 <acl_free@plt>
  4266b4:	cbz	x22, 4266f4 <wcrtomb@plt+0x218d4>
  4266b8:	mov	x0, x22
  4266bc:	bl	43d39c <argp_usage@@Base+0xb7a0>
  4266c0:	mov	x1, x20
  4266c4:	str	x0, [x21]
  4266c8:	bl	427598 <wcrtomb@plt+0x22778>
  4266cc:	mov	x0, x22
  4266d0:	bl	404df0 <acl_free@plt>
  4266d4:	b	426704 <wcrtomb@plt+0x218e4>
  4266d8:	bl	404d00 <__errno_location@plt>
  4266dc:	ldr	w8, [x0]
  4266e0:	cmp	w8, #0x5f
  4266e4:	b.eq	426704 <wcrtomb@plt+0x218e4>  // b.none
  4266e8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4266ec:	add	x0, x0, #0xd20
  4266f0:	b	4266fc <wcrtomb@plt+0x218dc>
  4266f4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4266f8:	add	x0, x0, #0xd30
  4266fc:	mov	x1, x19
  426700:	bl	427e70 <wcrtomb@plt+0x23050>
  426704:	ldp	x20, x19, [sp, #48]
  426708:	ldp	x22, x21, [sp, #32]
  42670c:	ldr	x23, [sp, #16]
  426710:	ldp	x29, x30, [sp], #64
  426714:	ret
  426718:	stp	x29, x30, [sp, #-48]!
  42671c:	and	w8, w2, #0xff
  426720:	cmp	w8, #0x32
  426724:	str	x21, [sp, #16]
  426728:	stp	x20, x19, [sp, #32]
  42672c:	mov	x29, sp
  426730:	b.eq	42678c <wcrtomb@plt+0x2196c>  // b.none
  426734:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426738:	ldr	w8, [x8, #896]
  42673c:	cmp	w8, #0x1
  426740:	b.lt	42678c <wcrtomb@plt+0x2196c>  // b.tstop
  426744:	ldr	x3, [x0, #56]
  426748:	mov	w21, w2
  42674c:	mov	w2, #0x8000                	// #32768
  426750:	mov	w4, wzr
  426754:	mov	x19, x1
  426758:	mov	x20, x0
  42675c:	bl	42679c <wcrtomb@plt+0x2197c>
  426760:	and	w8, w21, #0xff
  426764:	cmp	w8, #0x44
  426768:	b.eq	426774 <wcrtomb@plt+0x21954>  // b.none
  42676c:	cmp	w8, #0x35
  426770:	b.ne	42678c <wcrtomb@plt+0x2196c>  // b.any
  426774:	ldr	x3, [x20, #72]
  426778:	mov	w2, #0x4000                	// #16384
  42677c:	mov	w4, #0x1                   	// #1
  426780:	mov	x0, x20
  426784:	mov	x1, x19
  426788:	bl	42679c <wcrtomb@plt+0x2197c>
  42678c:	ldp	x20, x19, [sp, #32]
  426790:	ldr	x21, [sp, #16]
  426794:	ldp	x29, x30, [sp], #48
  426798:	ret
  42679c:	stp	x29, x30, [sp, #-48]!
  4267a0:	str	x21, [sp, #16]
  4267a4:	stp	x20, x19, [sp, #32]
  4267a8:	mov	w21, w2
  4267ac:	mov	x19, x1
  4267b0:	mov	x29, sp
  4267b4:	cbz	x3, 426848 <wcrtomb@plt+0x21a28>
  4267b8:	mov	x0, x3
  4267bc:	mov	x20, x3
  4267c0:	bl	427618 <wcrtomb@plt+0x227f8>
  4267c4:	bl	404c20 <acl_from_text@plt>
  4267c8:	mov	x20, x0
  4267cc:	cbz	x0, 4268c0 <wcrtomb@plt+0x21aa0>
  4267d0:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  4267d4:	ldr	w0, [x8, #2240]
  4267d8:	mov	x1, x19
  4267dc:	mov	w2, w21
  4267e0:	mov	x3, x20
  4267e4:	bl	427970 <wcrtomb@plt+0x22b50>
  4267e8:	cmn	w0, #0x1
  4267ec:	b.ne	42683c <wcrtomb@plt+0x21a1c>  // b.any
  4267f0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4267f4:	ldrb	w8, [x8, #450]
  4267f8:	tbz	w8, #5, 42683c <wcrtomb@plt+0x21a1c>
  4267fc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426800:	ldr	x8, [x8, #1008]
  426804:	cbz	x8, 42680c <wcrtomb@plt+0x219ec>
  426808:	blr	x8
  42680c:	bl	404d00 <__errno_location@plt>
  426810:	ldr	w21, [x0]
  426814:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  426818:	add	x1, x1, #0xd92
  42681c:	mov	w2, #0x5                   	// #5
  426820:	mov	x0, xzr
  426824:	bl	404bf0 <dcgettext@plt>
  426828:	mov	x2, x0
  42682c:	mov	w0, wzr
  426830:	mov	w1, w21
  426834:	mov	x3, x19
  426838:	bl	4041f0 <error@plt>
  42683c:	mov	x0, x20
  426840:	bl	404df0 <acl_free@plt>
  426844:	b	4268d0 <wcrtomb@plt+0x21ab0>
  426848:	tbz	w4, #0, 4268b0 <wcrtomb@plt+0x21a90>
  42684c:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  426850:	ldr	w0, [x8, #2240]
  426854:	mov	x1, x19
  426858:	bl	4276ec <wcrtomb@plt+0x228cc>
  42685c:	cbz	w0, 4268d0 <wcrtomb@plt+0x21ab0>
  426860:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426864:	ldrb	w8, [x8, #450]
  426868:	tbz	w8, #5, 4268d0 <wcrtomb@plt+0x21ab0>
  42686c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426870:	ldr	x8, [x8, #1008]
  426874:	cbz	x8, 42687c <wcrtomb@plt+0x21a5c>
  426878:	blr	x8
  42687c:	bl	404d00 <__errno_location@plt>
  426880:	ldr	w20, [x0]
  426884:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  426888:	add	x1, x1, #0xd3f
  42688c:	mov	w2, #0x5                   	// #5
  426890:	mov	x0, xzr
  426894:	bl	404bf0 <dcgettext@plt>
  426898:	mov	x2, x0
  42689c:	mov	w0, wzr
  4268a0:	mov	w1, w20
  4268a4:	mov	x3, x19
  4268a8:	bl	4041f0 <error@plt>
  4268ac:	b	4268d0 <wcrtomb@plt+0x21ab0>
  4268b0:	ldr	w0, [x0, #104]
  4268b4:	bl	4278b0 <wcrtomb@plt+0x22a90>
  4268b8:	mov	x20, x0
  4268bc:	cbnz	x0, 4267d0 <wcrtomb@plt+0x219b0>
  4268c0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4268c4:	add	x0, x0, #0xd84
  4268c8:	mov	x1, x19
  4268cc:	bl	427e70 <wcrtomb@plt+0x23050>
  4268d0:	ldp	x20, x19, [sp, #32]
  4268d4:	ldr	x21, [sp, #16]
  4268d8:	ldp	x29, x30, [sp], #48
  4268dc:	ret
  4268e0:	stp	x29, x30, [sp, #-32]!
  4268e4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4268e8:	add	x8, x8, #0xd38
  4268ec:	add	x9, x8, #0x18
  4268f0:	tst	w1, #0x1
  4268f4:	stp	x20, x19, [sp, #16]
  4268f8:	csel	x20, x8, x9, ne  // ne = any
  4268fc:	mov	x19, x0
  426900:	mov	x0, x20
  426904:	mov	x29, sp
  426908:	bl	42692c <wcrtomb@plt+0x21b0c>
  42690c:	ldr	x8, [x20, #16]
  426910:	ldr	x9, [x20]
  426914:	add	x10, x8, #0x1
  426918:	str	x10, [x20, #16]
  42691c:	str	x19, [x9, x8, lsl #3]
  426920:	ldp	x20, x19, [sp, #16]
  426924:	ldp	x29, x30, [sp], #32
  426928:	ret
  42692c:	stp	x29, x30, [sp, #-32]!
  426930:	str	x19, [sp, #16]
  426934:	mov	x1, x0
  426938:	ldr	x8, [x1, #8]!
  42693c:	mov	x29, sp
  426940:	ldr	x9, [x1, #8]
  426944:	cmp	x9, x8
  426948:	b.ne	42696c <wcrtomb@plt+0x21b4c>  // b.any
  42694c:	mov	x19, x0
  426950:	cbnz	x8, 42695c <wcrtomb@plt+0x21b3c>
  426954:	mov	w8, #0x4                   	// #4
  426958:	str	x8, [x1]
  42695c:	ldr	x0, [x19]
  426960:	mov	w2, #0x8                   	// #8
  426964:	bl	43d260 <argp_usage@@Base+0xb664>
  426968:	str	x0, [x19]
  42696c:	ldr	x19, [sp, #16]
  426970:	ldp	x29, x30, [sp], #32
  426974:	ret
  426978:	stp	x29, x30, [sp, #-32]!
  42697c:	str	x19, [sp, #16]
  426980:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426984:	add	x19, x19, #0xd38
  426988:	mov	x0, x19
  42698c:	mov	x29, sp
  426990:	bl	4269a8 <wcrtomb@plt+0x21b88>
  426994:	add	x0, x19, #0x18
  426998:	bl	4269a8 <wcrtomb@plt+0x21b88>
  42699c:	ldr	x19, [sp, #16]
  4269a0:	ldp	x29, x30, [sp], #32
  4269a4:	ret
  4269a8:	stp	x29, x30, [sp, #-16]!
  4269ac:	ldr	x8, [x0, #8]
  4269b0:	mov	x29, sp
  4269b4:	cbz	x8, 4269c0 <wcrtomb@plt+0x21ba0>
  4269b8:	ldr	x0, [x0]
  4269bc:	bl	4049d0 <free@plt>
  4269c0:	ldp	x29, x30, [sp], #16
  4269c4:	ret
  4269c8:	sub	sp, sp, #0x70
  4269cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4269d0:	ldr	w8, [x8, #656]
  4269d4:	stp	x29, x30, [sp, #16]
  4269d8:	stp	x28, x27, [sp, #32]
  4269dc:	stp	x26, x25, [sp, #48]
  4269e0:	cmp	w8, #0x1
  4269e4:	stp	x24, x23, [sp, #64]
  4269e8:	stp	x22, x21, [sp, #80]
  4269ec:	stp	x20, x19, [sp, #96]
  4269f0:	add	x29, sp, #0x10
  4269f4:	str	x2, [sp, #8]
  4269f8:	b.lt	426c1c <wcrtomb@plt+0x21dfc>  // b.tstop
  4269fc:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426a00:	ldr	x8, [x21, #3432]
  426a04:	mov	w20, w3
  426a08:	mov	x19, x1
  426a0c:	mov	w22, w0
  426a10:	cbnz	x8, 426a2c <wcrtomb@plt+0x21c0c>
  426a14:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426a18:	add	x1, x1, #0x228
  426a1c:	mov	w2, #0x1                   	// #1
  426a20:	mov	x0, xzr
  426a24:	bl	43d260 <argp_usage@@Base+0xb664>
  426a28:	str	x0, [x21, #3432]
  426a2c:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426a30:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426a34:	add	x24, x24, #0x228
  426a38:	ldr	x2, [x21, #3432]
  426a3c:	ldr	x3, [x25, #552]
  426a40:	cbz	w20, 426a60 <wcrtomb@plt+0x21c40>
  426a44:	mov	w0, w20
  426a48:	mov	x1, x2
  426a4c:	mov	x2, x3
  426a50:	bl	404bb0 <flistxattr@plt>
  426a54:	cmn	x0, #0x1
  426a58:	b.eq	426a74 <wcrtomb@plt+0x21c54>  // b.none
  426a5c:	b	426a9c <wcrtomb@plt+0x21c7c>
  426a60:	mov	w0, w22
  426a64:	mov	x1, x19
  426a68:	bl	42df34 <wcrtomb@plt+0x29114>
  426a6c:	cmn	x0, #0x1
  426a70:	b.ne	426a9c <wcrtomb@plt+0x21c7c>  // b.any
  426a74:	bl	404d00 <__errno_location@plt>
  426a78:	ldr	w8, [x0]
  426a7c:	cmp	w8, #0x22
  426a80:	b.ne	426bf0 <wcrtomb@plt+0x21dd0>  // b.any
  426a84:	ldr	x0, [x21, #3432]
  426a88:	mov	w2, #0x1                   	// #1
  426a8c:	mov	x1, x24
  426a90:	bl	43d260 <argp_usage@@Base+0xb664>
  426a94:	str	x0, [x21, #3432]
  426a98:	b	426a38 <wcrtomb@plt+0x21c18>
  426a9c:	mov	x23, x0
  426aa0:	cmn	x23, #0x1
  426aa4:	b.eq	426bfc <wcrtomb@plt+0x21ddc>  // b.none
  426aa8:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426aac:	ldr	x8, [x25, #3440]
  426ab0:	ldr	x24, [x21, #3432]
  426ab4:	cbnz	x8, 426ad0 <wcrtomb@plt+0x21cb0>
  426ab8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426abc:	add	x1, x1, #0x230
  426ac0:	mov	w2, #0x1                   	// #1
  426ac4:	mov	x0, xzr
  426ac8:	bl	43d260 <argp_usage@@Base+0xb664>
  426acc:	str	x0, [x25, #3440]
  426ad0:	cmp	x23, #0x1
  426ad4:	b.lt	426c1c <wcrtomb@plt+0x21dfc>  // b.tstop
  426ad8:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  426adc:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  426ae0:	add	x8, x8, #0xcbc
  426ae4:	add	x9, x9, #0xcb0
  426ae8:	cmp	w20, #0x0
  426aec:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426af0:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426af4:	csel	x8, x9, x8, eq  // eq = none
  426af8:	add	x26, x26, #0x230
  426afc:	str	x8, [sp]
  426b00:	b	426b18 <wcrtomb@plt+0x21cf8>
  426b04:	add	x8, x27, #0x1
  426b08:	sub	x23, x23, x8
  426b0c:	cmp	x23, #0x0
  426b10:	add	x24, x24, x8
  426b14:	b.le	426c1c <wcrtomb@plt+0x21dfc>
  426b18:	mov	x0, x24
  426b1c:	bl	404190 <strlen@plt>
  426b20:	mov	x27, x0
  426b24:	ldr	x3, [x25, #3440]
  426b28:	ldr	x4, [x21, #560]
  426b2c:	cbz	w20, 426b50 <wcrtomb@plt+0x21d30>
  426b30:	mov	w0, w20
  426b34:	mov	x1, x24
  426b38:	mov	x2, x3
  426b3c:	mov	x3, x4
  426b40:	bl	404a30 <fgetxattr@plt>
  426b44:	cmn	x0, #0x1
  426b48:	b.eq	426b68 <wcrtomb@plt+0x21d48>  // b.none
  426b4c:	b	426b90 <wcrtomb@plt+0x21d70>
  426b50:	mov	w0, w22
  426b54:	mov	x1, x19
  426b58:	mov	x2, x24
  426b5c:	bl	42db4c <wcrtomb@plt+0x28d2c>
  426b60:	cmn	x0, #0x1
  426b64:	b.ne	426b90 <wcrtomb@plt+0x21d70>  // b.any
  426b68:	bl	404d00 <__errno_location@plt>
  426b6c:	ldr	w8, [x0]
  426b70:	cmp	w8, #0x22
  426b74:	b.ne	426bc4 <wcrtomb@plt+0x21da4>  // b.any
  426b78:	ldr	x0, [x25, #3440]
  426b7c:	mov	w2, #0x1                   	// #1
  426b80:	mov	x1, x26
  426b84:	bl	43d260 <argp_usage@@Base+0xb664>
  426b88:	str	x0, [x25, #3440]
  426b8c:	b	426b24 <wcrtomb@plt+0x21d04>
  426b90:	mov	x28, x0
  426b94:	cmn	x28, #0x1
  426b98:	b.eq	426bd0 <wcrtomb@plt+0x21db0>  // b.none
  426b9c:	mov	w1, #0x1                   	// #1
  426ba0:	mov	x0, x24
  426ba4:	bl	426c3c <wcrtomb@plt+0x21e1c>
  426ba8:	tbnz	w0, #0, 426b04 <wcrtomb@plt+0x21ce4>
  426bac:	ldr	x2, [x25, #3440]
  426bb0:	ldr	x0, [sp, #8]
  426bb4:	mov	x1, x24
  426bb8:	mov	x3, x28
  426bbc:	bl	411a94 <wcrtomb@plt+0xcc74>
  426bc0:	b	426b04 <wcrtomb@plt+0x21ce4>
  426bc4:	mov	x28, #0xffffffffffffffff    	// #-1
  426bc8:	cmn	x28, #0x1
  426bcc:	b.ne	426b9c <wcrtomb@plt+0x21d7c>  // b.any
  426bd0:	bl	404d00 <__errno_location@plt>
  426bd4:	ldr	w8, [x0]
  426bd8:	cmp	w8, #0x3d
  426bdc:	b.eq	426b04 <wcrtomb@plt+0x21ce4>  // b.none
  426be0:	ldr	x0, [sp]
  426be4:	mov	x1, x19
  426be8:	bl	427e70 <wcrtomb@plt+0x23050>
  426bec:	b	426b04 <wcrtomb@plt+0x21ce4>
  426bf0:	mov	x23, #0xffffffffffffffff    	// #-1
  426bf4:	cmn	x23, #0x1
  426bf8:	b.ne	426aa8 <wcrtomb@plt+0x21c88>  // b.any
  426bfc:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  426c00:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  426c04:	add	x8, x8, #0xca5
  426c08:	add	x9, x9, #0xc98
  426c0c:	cmp	w20, #0x0
  426c10:	csel	x0, x9, x8, eq  // eq = none
  426c14:	mov	x1, x19
  426c18:	bl	427e70 <wcrtomb@plt+0x23050>
  426c1c:	ldp	x20, x19, [sp, #96]
  426c20:	ldp	x22, x21, [sp, #80]
  426c24:	ldp	x24, x23, [sp, #64]
  426c28:	ldp	x26, x25, [sp, #48]
  426c2c:	ldp	x28, x27, [sp, #32]
  426c30:	ldp	x29, x30, [sp, #16]
  426c34:	add	sp, sp, #0x70
  426c38:	ret
  426c3c:	stp	x29, x30, [sp, #-32]!
  426c40:	and	w1, w1, #0x1
  426c44:	str	x19, [sp, #16]
  426c48:	mov	x29, sp
  426c4c:	mov	x19, x0
  426c50:	bl	427bd0 <wcrtomb@plt+0x22db0>
  426c54:	tbz	w0, #0, 426c64 <wcrtomb@plt+0x21e44>
  426c58:	mov	x0, x19
  426c5c:	bl	427c24 <wcrtomb@plt+0x22e04>
  426c60:	b	426c68 <wcrtomb@plt+0x21e48>
  426c64:	mov	w0, #0x1                   	// #1
  426c68:	ldr	x19, [sp, #16]
  426c6c:	and	w0, w0, #0x1
  426c70:	ldp	x29, x30, [sp], #32
  426c74:	ret
  426c78:	stp	x29, x30, [sp, #-32]!
  426c7c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426c80:	ldr	w8, [x8, #984]
  426c84:	str	x19, [sp, #16]
  426c88:	mov	x29, sp
  426c8c:	cmp	w8, #0x1
  426c90:	b.lt	426cdc <wcrtomb@plt+0x21ebc>  // b.tstop
  426c94:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426c98:	ldrb	w8, [x19, #3448]
  426c9c:	tbnz	w8, #0, 426cd4 <wcrtomb@plt+0x21eb4>
  426ca0:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426ca4:	ldr	x8, [x8, #1008]
  426ca8:	cbz	x8, 426cb0 <wcrtomb@plt+0x21e90>
  426cac:	blr	x8
  426cb0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  426cb4:	add	x1, x1, #0xcc6
  426cb8:	mov	w2, #0x5                   	// #5
  426cbc:	mov	x0, xzr
  426cc0:	bl	404bf0 <dcgettext@plt>
  426cc4:	mov	x2, x0
  426cc8:	mov	w0, wzr
  426ccc:	mov	w1, wzr
  426cd0:	bl	4041f0 <error@plt>
  426cd4:	mov	w8, #0x1                   	// #1
  426cd8:	strb	w8, [x19, #3448]
  426cdc:	ldr	x19, [sp, #16]
  426ce0:	ldp	x29, x30, [sp], #32
  426ce4:	ret
  426ce8:	stp	x29, x30, [sp, #-32]!
  426cec:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426cf0:	ldr	w8, [x8, #984]
  426cf4:	str	x19, [sp, #16]
  426cf8:	mov	x29, sp
  426cfc:	cmp	w8, #0x1
  426d00:	b.lt	426d4c <wcrtomb@plt+0x21f2c>  // b.tstop
  426d04:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426d08:	ldrb	w8, [x19, #3452]
  426d0c:	tbnz	w8, #0, 426d44 <wcrtomb@plt+0x21f24>
  426d10:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426d14:	ldr	x8, [x8, #1008]
  426d18:	cbz	x8, 426d20 <wcrtomb@plt+0x21f00>
  426d1c:	blr	x8
  426d20:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  426d24:	add	x1, x1, #0xcc6
  426d28:	mov	w2, #0x5                   	// #5
  426d2c:	mov	x0, xzr
  426d30:	bl	404bf0 <dcgettext@plt>
  426d34:	mov	x2, x0
  426d38:	mov	w0, wzr
  426d3c:	mov	w1, wzr
  426d40:	bl	4041f0 <error@plt>
  426d44:	mov	w8, #0x1                   	// #1
  426d48:	strb	w8, [x19, #3452]
  426d4c:	ldr	x19, [sp, #16]
  426d50:	ldp	x29, x30, [sp], #32
  426d54:	ret
  426d58:	stp	x29, x30, [sp, #-80]!
  426d5c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426d60:	ldr	w8, [x8, #656]
  426d64:	stp	x26, x25, [sp, #16]
  426d68:	stp	x24, x23, [sp, #32]
  426d6c:	stp	x22, x21, [sp, #48]
  426d70:	cmp	w8, #0x1
  426d74:	stp	x20, x19, [sp, #64]
  426d78:	mov	x29, sp
  426d7c:	b.lt	426e2c <wcrtomb@plt+0x2200c>  // b.tstop
  426d80:	ldr	x8, [x0, #328]
  426d84:	mov	x22, x0
  426d88:	cbz	x8, 426e2c <wcrtomb@plt+0x2200c>
  426d8c:	ldr	x8, [x22, #328]
  426d90:	cbz	x8, 426e2c <wcrtomb@plt+0x2200c>
  426d94:	adrp	x23, 456000 <_obstack_memory_used@@Base+0x17da0>
  426d98:	mov	w19, w3
  426d9c:	mov	w20, w2
  426da0:	mov	x21, x1
  426da4:	mov	x25, xzr
  426da8:	mov	x26, xzr
  426dac:	add	x23, x23, #0xce7
  426db0:	b	426dc8 <wcrtomb@plt+0x21fa8>
  426db4:	ldr	x8, [x22, #328]
  426db8:	add	x26, x26, #0x1
  426dbc:	add	x25, x25, #0x18
  426dc0:	cmp	x26, x8
  426dc4:	b.cs	426e2c <wcrtomb@plt+0x2200c>  // b.hs, b.nlast
  426dc8:	ldr	x8, [x22, #336]
  426dcc:	and	w9, w20, #0xff
  426dd0:	cmp	w9, #0x30
  426dd4:	ldr	x8, [x8, x25]
  426dd8:	add	x24, x8, #0xd
  426ddc:	b.ne	426dfc <wcrtomb@plt+0x21fdc>  // b.any
  426de0:	mov	x0, x24
  426de4:	mov	x1, x23
  426de8:	bl	404920 <strcmp@plt>
  426dec:	cmp	w0, #0x0
  426df0:	cset	w8, ne  // ne = any
  426df4:	cmp	w8, w19
  426df8:	b.eq	426db4 <wcrtomb@plt+0x21f94>  // b.none
  426dfc:	mov	x0, x24
  426e00:	mov	w1, wzr
  426e04:	bl	426c3c <wcrtomb@plt+0x21e1c>
  426e08:	tbnz	w0, #0, 426db4 <wcrtomb@plt+0x21f94>
  426e0c:	ldr	x8, [x22, #336]
  426e10:	mov	x0, x21
  426e14:	mov	w1, w20
  426e18:	mov	x2, x24
  426e1c:	add	x8, x8, x25
  426e20:	ldp	x3, x4, [x8, #8]
  426e24:	bl	426e44 <wcrtomb@plt+0x22024>
  426e28:	b	426db4 <wcrtomb@plt+0x21f94>
  426e2c:	ldp	x20, x19, [sp, #64]
  426e30:	ldp	x22, x21, [sp, #48]
  426e34:	ldp	x24, x23, [sp, #32]
  426e38:	ldp	x26, x25, [sp, #16]
  426e3c:	ldp	x29, x30, [sp], #80
  426e40:	ret
  426e44:	stp	x29, x30, [sp, #-48]!
  426e48:	stp	x22, x21, [sp, #16]
  426e4c:	stp	x20, x19, [sp, #32]
  426e50:	mov	x29, sp
  426e54:	cbz	x3, 426f00 <wcrtomb@plt+0x220e0>
  426e58:	adrp	x8, 46c000 <_obstack_memory_used@@Base+0x2dda0>
  426e5c:	mov	x20, x0
  426e60:	ldr	w0, [x8, #2240]
  426e64:	and	w8, w1, #0xff
  426e68:	mov	x19, x2
  426e6c:	mov	x1, x20
  426e70:	cmp	w8, #0x32
  426e74:	b.ne	426e94 <wcrtomb@plt+0x22074>  // b.any
  426e78:	mov	w5, wzr
  426e7c:	bl	42d73c <wcrtomb@plt+0x2891c>
  426e80:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x17da0>
  426e84:	add	x21, x21, #0xdff
  426e88:	cmn	w0, #0x1
  426e8c:	b.ne	426f00 <wcrtomb@plt+0x220e0>  // b.any
  426e90:	b	426eac <wcrtomb@plt+0x2208c>
  426e94:	mov	w5, wzr
  426e98:	bl	42d528 <wcrtomb@plt+0x28708>
  426e9c:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x17da0>
  426ea0:	add	x21, x21, #0xdf4
  426ea4:	cmn	w0, #0x1
  426ea8:	b.ne	426f00 <wcrtomb@plt+0x220e0>  // b.any
  426eac:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  426eb0:	ldrb	w8, [x8, #450]
  426eb4:	tbz	w8, #5, 426f00 <wcrtomb@plt+0x220e0>
  426eb8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426ebc:	ldr	x8, [x8, #1008]
  426ec0:	cbz	x8, 426ec8 <wcrtomb@plt+0x220a8>
  426ec4:	blr	x8
  426ec8:	bl	404d00 <__errno_location@plt>
  426ecc:	ldr	w22, [x0]
  426ed0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  426ed4:	add	x1, x1, #0xe09
  426ed8:	mov	w2, #0x5                   	// #5
  426edc:	mov	x0, xzr
  426ee0:	bl	404bf0 <dcgettext@plt>
  426ee4:	mov	x2, x0
  426ee8:	mov	w0, wzr
  426eec:	mov	w1, w22
  426ef0:	mov	x3, x21
  426ef4:	mov	x4, x19
  426ef8:	mov	x5, x20
  426efc:	bl	4041f0 <error@plt>
  426f00:	ldp	x20, x19, [sp, #32]
  426f04:	ldp	x22, x21, [sp, #16]
  426f08:	ldp	x29, x30, [sp], #48
  426f0c:	ret
  426f10:	stp	x29, x30, [sp, #-64]!
  426f14:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426f18:	ldr	w8, [x8, #644]
  426f1c:	stp	x20, x19, [sp, #48]
  426f20:	mov	x19, x1
  426f24:	stp	x24, x23, [sp, #16]
  426f28:	cmp	w8, #0x1
  426f2c:	stp	x22, x21, [sp, #32]
  426f30:	mov	x29, sp
  426f34:	b.gt	426f40 <wcrtomb@plt+0x22120>
  426f38:	strb	wzr, [x19]
  426f3c:	b	427018 <wcrtomb@plt+0x221f8>
  426f40:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  426f44:	ldr	w9, [x8, #656]
  426f48:	mov	x20, x0
  426f4c:	adrp	x22, 470000 <argp_program_version_hook@@Base+0x258>
  426f50:	adrp	x21, 470000 <argp_program_version_hook@@Base+0x258>
  426f54:	cmp	w9, #0x1
  426f58:	b.ge	426f74 <wcrtomb@plt+0x22154>  // b.tcont
  426f5c:	ldr	w9, [x22, #984]
  426f60:	cmp	w9, #0x0
  426f64:	b.gt	426f74 <wcrtomb@plt+0x22154>
  426f68:	ldr	w9, [x21, #896]
  426f6c:	cmp	w9, #0x1
  426f70:	b.lt	426f7c <wcrtomb@plt+0x2215c>  // b.tstop
  426f74:	mov	w9, #0x20                  	// #32
  426f78:	strh	w9, [x19]
  426f7c:	ldr	w8, [x8, #656]
  426f80:	cmp	w8, #0x1
  426f84:	b.lt	426fd8 <wcrtomb@plt+0x221b8>  // b.tstop
  426f88:	ldr	x8, [x20, #328]
  426f8c:	cbz	x8, 426fd8 <wcrtomb@plt+0x221b8>
  426f90:	ldr	x8, [x20, #328]
  426f94:	cbz	x8, 426fd8 <wcrtomb@plt+0x221b8>
  426f98:	mov	x23, xzr
  426f9c:	mov	x24, xzr
  426fa0:	ldr	x8, [x20, #336]
  426fa4:	mov	w1, wzr
  426fa8:	ldr	x8, [x8, x23]
  426fac:	add	x0, x8, #0xd
  426fb0:	bl	426c3c <wcrtomb@plt+0x21e1c>
  426fb4:	tbz	w0, #0, 426fd0 <wcrtomb@plt+0x221b0>
  426fb8:	ldr	x8, [x20, #328]
  426fbc:	add	x24, x24, #0x1
  426fc0:	add	x23, x23, #0x18
  426fc4:	cmp	x8, x24
  426fc8:	b.hi	426fa0 <wcrtomb@plt+0x22180>  // b.pmore
  426fcc:	b	426fd8 <wcrtomb@plt+0x221b8>
  426fd0:	mov	w8, #0x2a                  	// #42
  426fd4:	strb	w8, [x19]
  426fd8:	ldr	w8, [x22, #984]
  426fdc:	cmp	w8, #0x1
  426fe0:	b.lt	426ff4 <wcrtomb@plt+0x221d4>  // b.tstop
  426fe4:	ldr	x8, [x20, #48]
  426fe8:	cbz	x8, 426ff4 <wcrtomb@plt+0x221d4>
  426fec:	mov	w8, #0x2e                  	// #46
  426ff0:	strb	w8, [x19]
  426ff4:	ldr	w8, [x21, #896]
  426ff8:	cmp	w8, #0x1
  426ffc:	b.lt	427018 <wcrtomb@plt+0x221f8>  // b.tstop
  427000:	ldr	x8, [x20, #64]
  427004:	cbnz	x8, 427010 <wcrtomb@plt+0x221f0>
  427008:	ldr	x8, [x20, #80]
  42700c:	cbz	x8, 427018 <wcrtomb@plt+0x221f8>
  427010:	mov	w8, #0x2b                  	// #43
  427014:	strb	w8, [x19]
  427018:	ldp	x20, x19, [sp, #48]
  42701c:	ldp	x22, x21, [sp, #32]
  427020:	ldp	x24, x23, [sp, #16]
  427024:	ldp	x29, x30, [sp], #64
  427028:	ret
  42702c:	stp	x29, x30, [sp, #-64]!
  427030:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427034:	ldr	w8, [x8, #644]
  427038:	stp	x24, x23, [sp, #16]
  42703c:	stp	x22, x21, [sp, #32]
  427040:	stp	x20, x19, [sp, #48]
  427044:	cmp	w8, #0x3
  427048:	mov	x29, sp
  42704c:	b.lt	4271a0 <wcrtomb@plt+0x22380>  // b.tstop
  427050:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427054:	ldr	w8, [x8, #984]
  427058:	mov	x19, x0
  42705c:	cmp	w8, #0x1
  427060:	b.lt	427084 <wcrtomb@plt+0x22264>  // b.tstop
  427064:	ldr	x3, [x19, #48]
  427068:	cbz	x3, 427084 <wcrtomb@plt+0x22264>
  42706c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  427070:	ldr	x0, [x8, #3928]
  427074:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  427078:	add	x2, x2, #0xcfb
  42707c:	mov	w1, #0x1                   	// #1
  427080:	bl	404910 <__fprintf_chk@plt>
  427084:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427088:	ldr	w8, [x8, #896]
  42708c:	cmp	w8, #0x1
  427090:	b.lt	427114 <wcrtomb@plt+0x222f4>  // b.tstop
  427094:	ldr	x8, [x19, #64]
  427098:	cbnz	x8, 4270a4 <wcrtomb@plt+0x22284>
  42709c:	ldr	x8, [x19, #80]
  4270a0:	cbz	x8, 427114 <wcrtomb@plt+0x222f4>
  4270a4:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4270a8:	ldr	x0, [x20, #3928]
  4270ac:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  4270b0:	add	x2, x2, #0xd04
  4270b4:	mov	w1, #0x1                   	// #1
  4270b8:	bl	404910 <__fprintf_chk@plt>
  4270bc:	ldp	x1, x2, [x19, #56]
  4270c0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4270c4:	add	x0, x0, #0xd3e
  4270c8:	bl	4271b4 <wcrtomb@plt+0x22394>
  4270cc:	ldr	x8, [x19, #64]
  4270d0:	cbz	x8, 4270f0 <wcrtomb@plt+0x222d0>
  4270d4:	ldr	x8, [x19, #80]
  4270d8:	cbz	x8, 4270f0 <wcrtomb@plt+0x222d0>
  4270dc:	ldr	x0, [x20, #3928]
  4270e0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  4270e4:	add	x2, x2, #0xdc8
  4270e8:	mov	w1, #0x1                   	// #1
  4270ec:	bl	404910 <__fprintf_chk@plt>
  4270f0:	ldp	x1, x2, [x19, #72]
  4270f4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4270f8:	add	x0, x0, #0xd0a
  4270fc:	bl	4271b4 <wcrtomb@plt+0x22394>
  427100:	ldr	x0, [x20, #3928]
  427104:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  427108:	add	x2, x2, #0x365
  42710c:	mov	w1, #0x1                   	// #1
  427110:	bl	404910 <__fprintf_chk@plt>
  427114:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427118:	ldr	w8, [x8, #656]
  42711c:	cmp	w8, #0x1
  427120:	b.lt	4271a0 <wcrtomb@plt+0x22380>  // b.tstop
  427124:	ldr	x8, [x19, #328]
  427128:	cbz	x8, 4271a0 <wcrtomb@plt+0x22380>
  42712c:	ldr	x8, [x19, #328]
  427130:	cbz	x8, 4271a0 <wcrtomb@plt+0x22380>
  427134:	adrp	x20, 456000 <_obstack_memory_used@@Base+0x17da0>
  427138:	mov	x22, xzr
  42713c:	mov	x23, xzr
  427140:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x30da0>
  427144:	add	x20, x20, #0xd13
  427148:	b	427160 <wcrtomb@plt+0x22340>
  42714c:	ldr	x8, [x19, #328]
  427150:	add	x23, x23, #0x1
  427154:	add	x22, x22, #0x18
  427158:	cmp	x8, x23
  42715c:	b.ls	4271a0 <wcrtomb@plt+0x22380>  // b.plast
  427160:	ldr	x8, [x19, #336]
  427164:	mov	w1, wzr
  427168:	ldr	x8, [x8, x22]
  42716c:	add	x21, x8, #0xd
  427170:	mov	x0, x21
  427174:	bl	426c3c <wcrtomb@plt+0x21e1c>
  427178:	tbnz	w0, #0, 42714c <wcrtomb@plt+0x2232c>
  42717c:	ldr	x8, [x19, #336]
  427180:	ldr	x0, [x24, #3928]
  427184:	mov	w1, #0x1                   	// #1
  427188:	mov	x2, x20
  42718c:	add	x8, x8, x22
  427190:	ldr	x3, [x8, #16]
  427194:	mov	x4, x21
  427198:	bl	404910 <__fprintf_chk@plt>
  42719c:	b	42714c <wcrtomb@plt+0x2232c>
  4271a0:	ldp	x20, x19, [sp, #48]
  4271a4:	ldp	x22, x21, [sp, #32]
  4271a8:	ldp	x24, x23, [sp, #16]
  4271ac:	ldp	x29, x30, [sp], #64
  4271b0:	ret
  4271b4:	sub	sp, sp, #0xc0
  4271b8:	stp	x29, x30, [sp, #96]
  4271bc:	stp	x28, x27, [sp, #112]
  4271c0:	stp	x26, x25, [sp, #128]
  4271c4:	stp	x24, x23, [sp, #144]
  4271c8:	stp	x22, x21, [sp, #160]
  4271cc:	stp	x20, x19, [sp, #176]
  4271d0:	add	x29, sp, #0x60
  4271d4:	cbz	x1, 4273a4 <wcrtomb@plt+0x22584>
  4271d8:	mov	x19, x2
  4271dc:	cbz	x2, 4273a4 <wcrtomb@plt+0x22584>
  4271e0:	mov	x20, x1
  4271e4:	mov	x21, x0
  4271e8:	bl	404190 <strlen@plt>
  4271ec:	adrp	x3, 43d000 <argp_usage@@Base+0xb404>
  4271f0:	adrp	x4, 404000 <mbrtowc@plt-0x100>
  4271f4:	mov	x22, x0
  4271f8:	add	x3, x3, #0x1c4
  4271fc:	add	x4, x4, #0x9d0
  427200:	add	x0, sp, #0x8
  427204:	mov	x1, xzr
  427208:	mov	x2, xzr
  42720c:	bl	43df40 <_obstack_begin@@Base>
  427210:	adrp	x23, 459000 <_obstack_memory_used@@Base+0x1ada0>
  427214:	mov	w27, wzr
  427218:	sxtw	x22, w22
  42721c:	add	x23, x23, #0x584
  427220:	mov	w28, #0x2c                  	// #44
  427224:	mov	x24, x20
  427228:	b	42725c <wcrtomb@plt+0x2243c>
  42722c:	ldr	x0, [sp, #32]
  427230:	mov	x1, x24
  427234:	mov	x2, x26
  427238:	bl	404110 <memcpy@plt>
  42723c:	ldr	x8, [sp, #32]
  427240:	add	w9, w25, #0x1
  427244:	add	w27, w9, w27
  427248:	add	x24, x24, w9, sxtw
  42724c:	add	x8, x8, x26
  427250:	str	x8, [sp, #32]
  427254:	mov	w8, #0x1                   	// #1
  427258:	tbz	w8, #0, 42730c <wcrtomb@plt+0x224ec>
  42725c:	sxtw	x8, w27
  427260:	cmp	x8, x19
  427264:	b.hi	42730c <wcrtomb@plt+0x224ec>  // b.pmore
  427268:	mov	x0, x24
  42726c:	mov	x1, x23
  427270:	bl	404cc0 <strcspn@plt>
  427274:	mov	x25, x0
  427278:	cbz	w25, 427304 <wcrtomb@plt+0x224e4>
  42727c:	cmp	x24, x20
  427280:	b.eq	4272ac <wcrtomb@plt+0x2248c>  // b.none
  427284:	ldp	x9, x8, [sp, #32]
  427288:	cmp	x8, x9
  42728c:	b.ne	42729c <wcrtomb@plt+0x2247c>  // b.any
  427290:	add	x0, sp, #0x8
  427294:	mov	w1, #0x1                   	// #1
  427298:	bl	43e028 <_obstack_newchunk@@Base>
  42729c:	ldr	x8, [sp, #32]
  4272a0:	add	x9, x8, #0x1
  4272a4:	str	x9, [sp, #32]
  4272a8:	strb	w28, [x8]
  4272ac:	ldp	x9, x8, [sp, #32]
  4272b0:	sub	x8, x8, x9
  4272b4:	cmp	x8, x22
  4272b8:	b.cs	4272c8 <wcrtomb@plt+0x224a8>  // b.hs, b.nlast
  4272bc:	add	x0, sp, #0x8
  4272c0:	mov	x1, x22
  4272c4:	bl	43e028 <_obstack_newchunk@@Base>
  4272c8:	ldr	x0, [sp, #32]
  4272cc:	mov	x1, x21
  4272d0:	mov	x2, x22
  4272d4:	bl	404110 <memcpy@plt>
  4272d8:	ldp	x8, x9, [sp, #32]
  4272dc:	sxtw	x26, w25
  4272e0:	add	x8, x8, x22
  4272e4:	sub	x9, x9, x8
  4272e8:	cmp	x9, x26
  4272ec:	str	x8, [sp, #32]
  4272f0:	b.cs	42722c <wcrtomb@plt+0x2240c>  // b.hs, b.nlast
  4272f4:	add	x0, sp, #0x8
  4272f8:	mov	x1, x26
  4272fc:	bl	43e028 <_obstack_newchunk@@Base>
  427300:	b	42722c <wcrtomb@plt+0x2240c>
  427304:	mov	w8, wzr
  427308:	tbnz	w8, #0, 42725c <wcrtomb@plt+0x2243c>
  42730c:	ldp	x9, x8, [sp, #32]
  427310:	cmp	x8, x9
  427314:	b.ne	427324 <wcrtomb@plt+0x22504>  // b.any
  427318:	add	x0, sp, #0x8
  42731c:	mov	w1, #0x1                   	// #1
  427320:	bl	43e028 <_obstack_newchunk@@Base>
  427324:	ldr	x8, [sp, #32]
  427328:	add	x9, x8, #0x1
  42732c:	str	x9, [sp, #32]
  427330:	strb	wzr, [x8]
  427334:	ldp	x3, x8, [sp, #24]
  427338:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42733c:	ldr	x0, [x9, #3928]
  427340:	cmp	x8, x3
  427344:	b.ne	427354 <wcrtomb@plt+0x22534>  // b.any
  427348:	ldrb	w8, [sp, #88]
  42734c:	orr	w8, w8, #0x2
  427350:	strb	w8, [sp, #88]
  427354:	ldr	x9, [sp, #56]
  427358:	ldp	x10, x8, [sp, #32]
  42735c:	ldr	x11, [sp, #16]
  427360:	add	x10, x9, x10
  427364:	bic	x9, x10, x9
  427368:	sub	x10, x9, x11
  42736c:	sub	x11, x8, x11
  427370:	cmp	x10, x11
  427374:	str	x9, [sp, #32]
  427378:	b.ls	427380 <wcrtomb@plt+0x22560>  // b.plast
  42737c:	str	x8, [sp, #32]
  427380:	ldr	x8, [sp, #32]
  427384:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  427388:	add	x2, x2, #0x386
  42738c:	mov	w1, #0x1                   	// #1
  427390:	str	x8, [sp, #24]
  427394:	bl	404910 <__fprintf_chk@plt>
  427398:	add	x0, sp, #0x8
  42739c:	mov	x1, xzr
  4273a0:	bl	43e1d8 <_obstack_free@@Base>
  4273a4:	ldp	x20, x19, [sp, #176]
  4273a8:	ldp	x22, x21, [sp, #160]
  4273ac:	ldp	x24, x23, [sp, #144]
  4273b0:	ldp	x26, x25, [sp, #128]
  4273b4:	ldp	x28, x27, [sp, #112]
  4273b8:	ldp	x29, x30, [sp, #96]
  4273bc:	add	sp, sp, #0xc0
  4273c0:	ret
  4273c4:	stp	x29, x30, [sp, #-96]!
  4273c8:	str	x28, [sp, #16]
  4273cc:	stp	x26, x25, [sp, #32]
  4273d0:	stp	x24, x23, [sp, #48]
  4273d4:	stp	x22, x21, [sp, #64]
  4273d8:	stp	x20, x19, [sp, #80]
  4273dc:	mov	x29, sp
  4273e0:	sub	sp, sp, #0xfc0
  4273e4:	mov	w20, w2
  4273e8:	cmn	w0, #0x64
  4273ec:	mov	x21, x1
  4273f0:	b.eq	427400 <wcrtomb@plt+0x225e0>  // b.none
  4273f4:	ldrb	w8, [x21]
  4273f8:	cmp	w8, #0x2f
  4273fc:	b.ne	427434 <wcrtomb@plt+0x22614>  // b.any
  427400:	mov	x0, x21
  427404:	mov	w1, w20
  427408:	bl	404970 <acl_get_file@plt>
  42740c:	mov	x19, x0
  427410:	mov	x0, x19
  427414:	add	sp, sp, #0xfc0
  427418:	ldp	x20, x19, [sp, #80]
  42741c:	ldp	x22, x21, [sp, #64]
  427420:	ldp	x24, x23, [sp, #48]
  427424:	ldp	x26, x25, [sp, #32]
  427428:	ldr	x28, [sp, #16]
  42742c:	ldp	x29, x30, [sp], #96
  427430:	ret
  427434:	mov	w22, w0
  427438:	mov	x0, sp
  42743c:	mov	w1, w22
  427440:	mov	x2, x21
  427444:	mov	x26, sp
  427448:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  42744c:	cbz	x0, 427488 <wcrtomb@plt+0x22668>
  427450:	mov	w1, w20
  427454:	mov	x24, x0
  427458:	bl	404970 <acl_get_file@plt>
  42745c:	mov	x19, x0
  427460:	bl	404d00 <__errno_location@plt>
  427464:	ldr	w25, [x0]
  427468:	mov	x23, x0
  42746c:	cmp	x24, x26
  427470:	b.eq	42747c <wcrtomb@plt+0x2265c>  // b.none
  427474:	mov	x0, x24
  427478:	bl	4049d0 <free@plt>
  42747c:	cbz	x19, 42748c <wcrtomb@plt+0x2266c>
  427480:	mov	w8, #0x1                   	// #1
  427484:	b	4274b8 <wcrtomb@plt+0x22698>
  427488:	b	4274bc <wcrtomb@plt+0x2269c>
  42748c:	cmp	w25, #0x26
  427490:	mov	w8, wzr
  427494:	b.hi	427544 <wcrtomb@plt+0x22724>  // b.pmore
  427498:	mov	w9, w25
  42749c:	mov	w10, #0x1                   	// #1
  4274a0:	lsl	x9, x10, x9
  4274a4:	mov	x10, #0x2006                	// #8198
  4274a8:	movk	x10, #0x10, lsl #16
  4274ac:	movk	x10, #0x40, lsl #32
  4274b0:	tst	x9, x10
  4274b4:	b.eq	427544 <wcrtomb@plt+0x22724>  // b.none
  4274b8:	cbnz	w8, 4274c0 <wcrtomb@plt+0x226a0>
  4274bc:	mov	w8, wzr
  4274c0:	cbnz	w8, 427410 <wcrtomb@plt+0x225f0>
  4274c4:	mov	x0, sp
  4274c8:	bl	43c888 <argp_usage@@Base+0xac8c>
  4274cc:	cbnz	w0, 427580 <wcrtomb@plt+0x22760>
  4274d0:	tbnz	w22, #31, 4274fc <wcrtomb@plt+0x226dc>
  4274d4:	ldr	w8, [sp]
  4274d8:	cmp	w8, w22
  4274dc:	b.ne	4274fc <wcrtomb@plt+0x226dc>  // b.any
  4274e0:	mov	x0, sp
  4274e4:	bl	43c910 <argp_usage@@Base+0xad14>
  4274e8:	bl	404d00 <__errno_location@plt>
  4274ec:	mov	w8, #0x9                   	// #9
  4274f0:	mov	x19, xzr
  4274f4:	str	w8, [x0]
  4274f8:	b	427410 <wcrtomb@plt+0x225f0>
  4274fc:	mov	w0, w22
  427500:	bl	404200 <fchdir@plt>
  427504:	cbz	w0, 427528 <wcrtomb@plt+0x22708>
  427508:	bl	404d00 <__errno_location@plt>
  42750c:	ldr	w21, [x0]
  427510:	mov	x20, x0
  427514:	mov	x0, sp
  427518:	bl	43c910 <argp_usage@@Base+0xad14>
  42751c:	mov	x19, xzr
  427520:	str	w21, [x20]
  427524:	b	427410 <wcrtomb@plt+0x225f0>
  427528:	mov	x0, x21
  42752c:	mov	w1, w20
  427530:	bl	404970 <acl_get_file@plt>
  427534:	mov	x19, x0
  427538:	cbz	x0, 427554 <wcrtomb@plt+0x22734>
  42753c:	mov	w20, wzr
  427540:	b	42755c <wcrtomb@plt+0x2273c>
  427544:	cmp	w25, #0x5f
  427548:	b.eq	4274b8 <wcrtomb@plt+0x22698>  // b.none
  42754c:	str	w25, [x23]
  427550:	b	427480 <wcrtomb@plt+0x22660>
  427554:	bl	404d00 <__errno_location@plt>
  427558:	ldr	w20, [x0]
  42755c:	mov	x0, sp
  427560:	bl	43c8e0 <argp_usage@@Base+0xace4>
  427564:	cbnz	w0, 42758c <wcrtomb@plt+0x2276c>
  427568:	mov	x0, sp
  42756c:	bl	43c910 <argp_usage@@Base+0xad14>
  427570:	cbz	w20, 427410 <wcrtomb@plt+0x225f0>
  427574:	bl	404d00 <__errno_location@plt>
  427578:	str	w20, [x0]
  42757c:	b	427410 <wcrtomb@plt+0x225f0>
  427580:	bl	404d00 <__errno_location@plt>
  427584:	ldr	w0, [x0]
  427588:	bl	436eb4 <argp_usage@@Base+0x52b8>
  42758c:	bl	404d00 <__errno_location@plt>
  427590:	ldr	w0, [x0]
  427594:	bl	436ef4 <argp_usage@@Base+0x52f8>
  427598:	stp	x29, x30, [sp, #-32]!
  42759c:	stp	x20, x19, [sp, #16]
  4275a0:	mov	x19, x1
  4275a4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4275a8:	add	x1, x1, #0xd3c
  4275ac:	mov	x29, sp
  4275b0:	mov	x20, x0
  4275b4:	bl	404cc0 <strcspn@plt>
  4275b8:	add	x8, x20, x0
  4275bc:	mov	x9, x8
  4275c0:	b	4275c8 <wcrtomb@plt+0x227a8>
  4275c4:	add	x9, x9, #0x1
  4275c8:	ldrb	w10, [x9]
  4275cc:	cmp	w10, #0x9
  4275d0:	b.eq	4275c4 <wcrtomb@plt+0x227a4>  // b.none
  4275d4:	cmp	w10, #0x23
  4275d8:	b.ne	4275f0 <wcrtomb@plt+0x227d0>  // b.any
  4275dc:	sub	x9, x9, #0x1
  4275e0:	ldrb	w10, [x9, #1]!
  4275e4:	cmp	w10, #0xa
  4275e8:	b.ne	4275e0 <wcrtomb@plt+0x227c0>  // b.any
  4275ec:	b	4275c8 <wcrtomb@plt+0x227a8>
  4275f0:	cbz	w10, 427600 <wcrtomb@plt+0x227e0>
  4275f4:	add	x9, x9, #0x1
  4275f8:	strb	w10, [x8], #1
  4275fc:	b	4275c8 <wcrtomb@plt+0x227a8>
  427600:	sub	x9, x8, x20
  427604:	str	x9, [x19]
  427608:	strb	wzr, [x8]
  42760c:	ldp	x20, x19, [sp, #16]
  427610:	ldp	x29, x30, [sp], #32
  427614:	ret
  427618:	stp	x29, x30, [sp, #-64]!
  42761c:	stp	x24, x23, [sp, #16]
  427620:	stp	x22, x21, [sp, #32]
  427624:	stp	x20, x19, [sp, #48]
  427628:	ldrb	w8, [x0]
  42762c:	mov	x19, x0
  427630:	mov	x20, x0
  427634:	mov	x22, x0
  427638:	mov	x29, sp
  42763c:	cbz	w8, 4276c8 <wcrtomb@plt+0x228a8>
  427640:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x17da0>
  427644:	add	x21, x21, #0xdc7
  427648:	mov	x23, x19
  42764c:	mov	x20, x19
  427650:	b	427668 <wcrtomb@plt+0x22848>
  427654:	add	x22, x22, #0x1
  427658:	strb	w8, [x20], #1
  42765c:	ldrb	w8, [x22]
  427660:	mov	x23, x22
  427664:	cbz	w8, 4276c8 <wcrtomb@plt+0x228a8>
  427668:	mov	x0, x23
  42766c:	bl	427b5c <wcrtomb@plt+0x22d3c>
  427670:	mov	x22, x0
  427674:	cmp	x23, x20
  427678:	sub	x24, x0, x23
  42767c:	b.eq	427690 <wcrtomb@plt+0x22870>  // b.none
  427680:	mov	x0, x20
  427684:	mov	x1, x23
  427688:	mov	x2, x24
  42768c:	bl	404120 <memmove@plt>
  427690:	ldrb	w8, [x22]
  427694:	add	x20, x20, x24
  427698:	cmp	w8, #0x3a
  42769c:	b.ne	4276b0 <wcrtomb@plt+0x22890>  // b.any
  4276a0:	mov	x0, x22
  4276a4:	mov	x1, x21
  4276a8:	bl	404cc0 <strcspn@plt>
  4276ac:	add	x22, x22, x0
  4276b0:	ldrb	w8, [x22]
  4276b4:	cmp	w8, #0x2c
  4276b8:	b.eq	427654 <wcrtomb@plt+0x22834>  // b.none
  4276bc:	cmp	w8, #0xa
  4276c0:	b.eq	427654 <wcrtomb@plt+0x22834>  // b.none
  4276c4:	b	42765c <wcrtomb@plt+0x2283c>
  4276c8:	cmp	x22, x20
  4276cc:	b.eq	4276d4 <wcrtomb@plt+0x228b4>  // b.none
  4276d0:	strb	wzr, [x20]
  4276d4:	mov	x0, x19
  4276d8:	ldp	x20, x19, [sp, #48]
  4276dc:	ldp	x22, x21, [sp, #32]
  4276e0:	ldp	x24, x23, [sp, #16]
  4276e4:	ldp	x29, x30, [sp], #64
  4276e8:	ret
  4276ec:	stp	x29, x30, [sp, #-80]!
  4276f0:	stp	x28, x25, [sp, #16]
  4276f4:	stp	x24, x23, [sp, #32]
  4276f8:	stp	x22, x21, [sp, #48]
  4276fc:	stp	x20, x19, [sp, #64]
  427700:	mov	x29, sp
  427704:	sub	sp, sp, #0xfc0
  427708:	cmn	w0, #0x64
  42770c:	mov	x20, x1
  427710:	b.eq	427720 <wcrtomb@plt+0x22900>  // b.none
  427714:	ldrb	w8, [x20]
  427718:	cmp	w8, #0x2f
  42771c:	b.ne	42774c <wcrtomb@plt+0x2292c>  // b.any
  427720:	mov	x0, x20
  427724:	bl	404450 <acl_delete_def_file@plt>
  427728:	mov	w19, w0
  42772c:	mov	w0, w19
  427730:	add	sp, sp, #0xfc0
  427734:	ldp	x20, x19, [sp, #64]
  427738:	ldp	x22, x21, [sp, #48]
  42773c:	ldp	x24, x23, [sp, #32]
  427740:	ldp	x28, x25, [sp, #16]
  427744:	ldp	x29, x30, [sp], #80
  427748:	ret
  42774c:	mov	w21, w0
  427750:	mov	x0, sp
  427754:	mov	w1, w21
  427758:	mov	x2, x20
  42775c:	mov	x25, sp
  427760:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  427764:	cbz	x0, 4277a0 <wcrtomb@plt+0x22980>
  427768:	mov	x23, x0
  42776c:	bl	404450 <acl_delete_def_file@plt>
  427770:	mov	w19, w0
  427774:	bl	404d00 <__errno_location@plt>
  427778:	ldr	w24, [x0]
  42777c:	mov	x22, x0
  427780:	cmp	x23, x25
  427784:	b.eq	427790 <wcrtomb@plt+0x22970>  // b.none
  427788:	mov	x0, x23
  42778c:	bl	4049d0 <free@plt>
  427790:	cmn	w19, #0x1
  427794:	b.eq	4277a4 <wcrtomb@plt+0x22984>  // b.none
  427798:	mov	w8, #0x1                   	// #1
  42779c:	b	4277d0 <wcrtomb@plt+0x229b0>
  4277a0:	b	4277d4 <wcrtomb@plt+0x229b4>
  4277a4:	cmp	w24, #0x26
  4277a8:	mov	w8, wzr
  4277ac:	b.hi	42785c <wcrtomb@plt+0x22a3c>  // b.pmore
  4277b0:	mov	w9, w24
  4277b4:	mov	w10, #0x1                   	// #1
  4277b8:	lsl	x9, x10, x9
  4277bc:	mov	x10, #0x2006                	// #8198
  4277c0:	movk	x10, #0x10, lsl #16
  4277c4:	movk	x10, #0x40, lsl #32
  4277c8:	tst	x9, x10
  4277cc:	b.eq	42785c <wcrtomb@plt+0x22a3c>  // b.none
  4277d0:	cbnz	w8, 4277d8 <wcrtomb@plt+0x229b8>
  4277d4:	mov	w8, wzr
  4277d8:	cbnz	w8, 42772c <wcrtomb@plt+0x2290c>
  4277dc:	mov	x0, sp
  4277e0:	bl	43c888 <argp_usage@@Base+0xac8c>
  4277e4:	cbnz	w0, 427898 <wcrtomb@plt+0x22a78>
  4277e8:	tbnz	w21, #31, 427814 <wcrtomb@plt+0x229f4>
  4277ec:	ldr	w8, [sp]
  4277f0:	cmp	w8, w21
  4277f4:	b.ne	427814 <wcrtomb@plt+0x229f4>  // b.any
  4277f8:	mov	x0, sp
  4277fc:	bl	43c910 <argp_usage@@Base+0xad14>
  427800:	bl	404d00 <__errno_location@plt>
  427804:	mov	w8, #0x9                   	// #9
  427808:	str	w8, [x0]
  42780c:	mov	w19, #0xffffffff            	// #-1
  427810:	b	42772c <wcrtomb@plt+0x2290c>
  427814:	mov	w0, w21
  427818:	bl	404200 <fchdir@plt>
  42781c:	cbz	w0, 427840 <wcrtomb@plt+0x22a20>
  427820:	bl	404d00 <__errno_location@plt>
  427824:	ldr	w20, [x0]
  427828:	mov	x19, x0
  42782c:	mov	x0, sp
  427830:	bl	43c910 <argp_usage@@Base+0xad14>
  427834:	str	w20, [x19]
  427838:	mov	w19, #0xffffffff            	// #-1
  42783c:	b	42772c <wcrtomb@plt+0x2290c>
  427840:	mov	x0, x20
  427844:	bl	404450 <acl_delete_def_file@plt>
  427848:	mov	w19, w0
  42784c:	cmn	w0, #0x1
  427850:	b.eq	42786c <wcrtomb@plt+0x22a4c>  // b.none
  427854:	mov	w20, wzr
  427858:	b	427874 <wcrtomb@plt+0x22a54>
  42785c:	cmp	w24, #0x5f
  427860:	b.eq	4277d0 <wcrtomb@plt+0x229b0>  // b.none
  427864:	str	w24, [x22]
  427868:	b	427798 <wcrtomb@plt+0x22978>
  42786c:	bl	404d00 <__errno_location@plt>
  427870:	ldr	w20, [x0]
  427874:	mov	x0, sp
  427878:	bl	43c8e0 <argp_usage@@Base+0xace4>
  42787c:	cbnz	w0, 4278a4 <wcrtomb@plt+0x22a84>
  427880:	mov	x0, sp
  427884:	bl	43c910 <argp_usage@@Base+0xad14>
  427888:	cbz	w20, 42772c <wcrtomb@plt+0x2290c>
  42788c:	bl	404d00 <__errno_location@plt>
  427890:	str	w20, [x0]
  427894:	b	42772c <wcrtomb@plt+0x2290c>
  427898:	bl	404d00 <__errno_location@plt>
  42789c:	ldr	w0, [x0]
  4278a0:	bl	436eb4 <argp_usage@@Base+0x52b8>
  4278a4:	bl	404d00 <__errno_location@plt>
  4278a8:	ldr	w0, [x0]
  4278ac:	bl	436ef4 <argp_usage@@Base+0x52f8>
  4278b0:	sub	sp, sp, #0x30
  4278b4:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  4278b8:	add	x8, x8, #0xdce
  4278bc:	ldp	q0, q1, [x8]
  4278c0:	stp	x29, x30, [sp, #32]
  4278c4:	add	x29, sp, #0x20
  4278c8:	stp	q0, q1, [sp]
  4278cc:	tbnz	w0, #8, 42790c <wcrtomb@plt+0x22aec>
  4278d0:	tbnz	w0, #7, 427918 <wcrtomb@plt+0x22af8>
  4278d4:	tbnz	w0, #6, 427924 <wcrtomb@plt+0x22b04>
  4278d8:	tbnz	w0, #5, 427930 <wcrtomb@plt+0x22b10>
  4278dc:	tbnz	w0, #4, 42793c <wcrtomb@plt+0x22b1c>
  4278e0:	tbnz	w0, #3, 427948 <wcrtomb@plt+0x22b28>
  4278e4:	tbnz	w0, #2, 427954 <wcrtomb@plt+0x22b34>
  4278e8:	tbnz	w0, #1, 427960 <wcrtomb@plt+0x22b40>
  4278ec:	tbz	w0, #0, 4278f8 <wcrtomb@plt+0x22ad8>
  4278f0:	mov	w8, #0x78                  	// #120
  4278f4:	strb	w8, [sp, #30]
  4278f8:	mov	x0, sp
  4278fc:	bl	404c20 <acl_from_text@plt>
  427900:	ldp	x29, x30, [sp, #32]
  427904:	add	sp, sp, #0x30
  427908:	ret
  42790c:	mov	w8, #0x72                  	// #114
  427910:	strb	w8, [sp, #6]
  427914:	tbz	w0, #7, 4278d4 <wcrtomb@plt+0x22ab4>
  427918:	mov	w8, #0x77                  	// #119
  42791c:	strb	w8, [sp, #7]
  427920:	tbz	w0, #6, 4278d8 <wcrtomb@plt+0x22ab8>
  427924:	mov	w8, #0x78                  	// #120
  427928:	strb	w8, [sp, #8]
  42792c:	tbz	w0, #5, 4278dc <wcrtomb@plt+0x22abc>
  427930:	mov	w8, #0x72                  	// #114
  427934:	strb	w8, [sp, #17]
  427938:	tbz	w0, #4, 4278e0 <wcrtomb@plt+0x22ac0>
  42793c:	mov	w8, #0x77                  	// #119
  427940:	strb	w8, [sp, #18]
  427944:	tbz	w0, #3, 4278e4 <wcrtomb@plt+0x22ac4>
  427948:	mov	w8, #0x78                  	// #120
  42794c:	strb	w8, [sp, #19]
  427950:	tbz	w0, #2, 4278e8 <wcrtomb@plt+0x22ac8>
  427954:	mov	w8, #0x72                  	// #114
  427958:	strb	w8, [sp, #28]
  42795c:	tbz	w0, #1, 4278ec <wcrtomb@plt+0x22acc>
  427960:	mov	w8, #0x77                  	// #119
  427964:	strb	w8, [sp, #29]
  427968:	tbnz	w0, #0, 4278f0 <wcrtomb@plt+0x22ad0>
  42796c:	b	4278f8 <wcrtomb@plt+0x22ad8>
  427970:	stp	x29, x30, [sp, #-96]!
  427974:	stp	x28, x27, [sp, #16]
  427978:	stp	x26, x25, [sp, #32]
  42797c:	stp	x24, x23, [sp, #48]
  427980:	stp	x22, x21, [sp, #64]
  427984:	stp	x20, x19, [sp, #80]
  427988:	mov	x29, sp
  42798c:	sub	sp, sp, #0xfc0
  427990:	mov	x19, x3
  427994:	mov	w20, w2
  427998:	cmn	w0, #0x64
  42799c:	mov	x22, x1
  4279a0:	b.eq	4279b0 <wcrtomb@plt+0x22b90>  // b.none
  4279a4:	ldrb	w8, [x22]
  4279a8:	cmp	w8, #0x2f
  4279ac:	b.ne	4279e8 <wcrtomb@plt+0x22bc8>  // b.any
  4279b0:	mov	x0, x22
  4279b4:	mov	w1, w20
  4279b8:	mov	x2, x19
  4279bc:	bl	404750 <acl_set_file@plt>
  4279c0:	mov	w21, w0
  4279c4:	mov	w0, w21
  4279c8:	add	sp, sp, #0xfc0
  4279cc:	ldp	x20, x19, [sp, #80]
  4279d0:	ldp	x22, x21, [sp, #64]
  4279d4:	ldp	x24, x23, [sp, #48]
  4279d8:	ldp	x26, x25, [sp, #32]
  4279dc:	ldp	x28, x27, [sp, #16]
  4279e0:	ldp	x29, x30, [sp], #96
  4279e4:	ret
  4279e8:	mov	w23, w0
  4279ec:	mov	x0, sp
  4279f0:	mov	w1, w23
  4279f4:	mov	x2, x22
  4279f8:	mov	x27, sp
  4279fc:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  427a00:	cbz	x0, 427a44 <wcrtomb@plt+0x22c24>
  427a04:	mov	w1, w20
  427a08:	mov	x2, x19
  427a0c:	mov	x25, x0
  427a10:	bl	404750 <acl_set_file@plt>
  427a14:	mov	w21, w0
  427a18:	bl	404d00 <__errno_location@plt>
  427a1c:	ldr	w26, [x0]
  427a20:	mov	x24, x0
  427a24:	cmp	x25, x27
  427a28:	b.eq	427a34 <wcrtomb@plt+0x22c14>  // b.none
  427a2c:	mov	x0, x25
  427a30:	bl	4049d0 <free@plt>
  427a34:	cmn	w21, #0x1
  427a38:	b.eq	427a48 <wcrtomb@plt+0x22c28>  // b.none
  427a3c:	mov	w8, #0x1                   	// #1
  427a40:	b	427a74 <wcrtomb@plt+0x22c54>
  427a44:	b	427a78 <wcrtomb@plt+0x22c58>
  427a48:	cmp	w26, #0x26
  427a4c:	mov	w8, wzr
  427a50:	b.hi	427b08 <wcrtomb@plt+0x22ce8>  // b.pmore
  427a54:	mov	w9, w26
  427a58:	mov	w10, #0x1                   	// #1
  427a5c:	lsl	x9, x10, x9
  427a60:	mov	x10, #0x2006                	// #8198
  427a64:	movk	x10, #0x10, lsl #16
  427a68:	movk	x10, #0x40, lsl #32
  427a6c:	tst	x9, x10
  427a70:	b.eq	427b08 <wcrtomb@plt+0x22ce8>  // b.none
  427a74:	cbnz	w8, 427a7c <wcrtomb@plt+0x22c5c>
  427a78:	mov	w8, wzr
  427a7c:	cbnz	w8, 4279c4 <wcrtomb@plt+0x22ba4>
  427a80:	mov	x0, sp
  427a84:	bl	43c888 <argp_usage@@Base+0xac8c>
  427a88:	cbnz	w0, 427b44 <wcrtomb@plt+0x22d24>
  427a8c:	tbnz	w23, #31, 427ab8 <wcrtomb@plt+0x22c98>
  427a90:	ldr	w8, [sp]
  427a94:	cmp	w8, w23
  427a98:	b.ne	427ab8 <wcrtomb@plt+0x22c98>  // b.any
  427a9c:	mov	x0, sp
  427aa0:	bl	43c910 <argp_usage@@Base+0xad14>
  427aa4:	bl	404d00 <__errno_location@plt>
  427aa8:	mov	w8, #0x9                   	// #9
  427aac:	str	w8, [x0]
  427ab0:	mov	w21, #0xffffffff            	// #-1
  427ab4:	b	4279c4 <wcrtomb@plt+0x22ba4>
  427ab8:	mov	w0, w23
  427abc:	bl	404200 <fchdir@plt>
  427ac0:	cbz	w0, 427ae4 <wcrtomb@plt+0x22cc4>
  427ac4:	bl	404d00 <__errno_location@plt>
  427ac8:	ldr	w20, [x0]
  427acc:	mov	x19, x0
  427ad0:	mov	x0, sp
  427ad4:	bl	43c910 <argp_usage@@Base+0xad14>
  427ad8:	str	w20, [x19]
  427adc:	mov	w21, #0xffffffff            	// #-1
  427ae0:	b	4279c4 <wcrtomb@plt+0x22ba4>
  427ae4:	mov	x0, x22
  427ae8:	mov	w1, w20
  427aec:	mov	x2, x19
  427af0:	bl	404750 <acl_set_file@plt>
  427af4:	mov	w21, w0
  427af8:	cmn	w0, #0x1
  427afc:	b.eq	427b18 <wcrtomb@plt+0x22cf8>  // b.none
  427b00:	mov	w19, wzr
  427b04:	b	427b20 <wcrtomb@plt+0x22d00>
  427b08:	cmp	w26, #0x5f
  427b0c:	b.eq	427a74 <wcrtomb@plt+0x22c54>  // b.none
  427b10:	str	w26, [x24]
  427b14:	b	427a3c <wcrtomb@plt+0x22c1c>
  427b18:	bl	404d00 <__errno_location@plt>
  427b1c:	ldr	w19, [x0]
  427b20:	mov	x0, sp
  427b24:	bl	43c8e0 <argp_usage@@Base+0xace4>
  427b28:	cbnz	w0, 427b50 <wcrtomb@plt+0x22d30>
  427b2c:	mov	x0, sp
  427b30:	bl	43c910 <argp_usage@@Base+0xad14>
  427b34:	cbz	w19, 4279c4 <wcrtomb@plt+0x22ba4>
  427b38:	bl	404d00 <__errno_location@plt>
  427b3c:	str	w19, [x0]
  427b40:	b	4279c4 <wcrtomb@plt+0x22ba4>
  427b44:	bl	404d00 <__errno_location@plt>
  427b48:	ldr	w0, [x0]
  427b4c:	bl	436eb4 <argp_usage@@Base+0x52b8>
  427b50:	bl	404d00 <__errno_location@plt>
  427b54:	ldr	w0, [x0]
  427b58:	bl	436ef4 <argp_usage@@Base+0x52f8>
  427b5c:	stp	x29, x30, [sp, #-32]!
  427b60:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427b64:	add	x1, x1, #0xdca
  427b68:	str	x19, [sp, #16]
  427b6c:	mov	x29, sp
  427b70:	mov	x19, x0
  427b74:	bl	404cc0 <strcspn@plt>
  427b78:	add	x0, x19, x0
  427b7c:	ldrb	w8, [x0]
  427b80:	cmp	w8, #0x3a
  427b84:	b.ne	427bc4 <wcrtomb@plt+0x22da4>  // b.any
  427b88:	add	x19, x0, #0x1
  427b8c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427b90:	add	x1, x1, #0xdca
  427b94:	mov	x0, x19
  427b98:	bl	404cc0 <strcspn@plt>
  427b9c:	add	x0, x19, x0
  427ba0:	ldrb	w8, [x0]
  427ba4:	cmp	w8, #0x3a
  427ba8:	b.ne	427bc4 <wcrtomb@plt+0x22da4>  // b.any
  427bac:	add	x19, x0, #0x1
  427bb0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427bb4:	add	x1, x1, #0xdca
  427bb8:	mov	x0, x19
  427bbc:	bl	404cc0 <strcspn@plt>
  427bc0:	add	x0, x19, x0
  427bc4:	ldr	x19, [sp, #16]
  427bc8:	ldp	x29, x30, [sp], #32
  427bcc:	ret
  427bd0:	stp	x29, x30, [sp, #-16]!
  427bd4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  427bd8:	ldr	x8, [x8, #3392]
  427bdc:	mov	x29, sp
  427be0:	cbz	x8, 427bf4 <wcrtomb@plt+0x22dd4>
  427be4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  427be8:	add	x1, x1, #0xd38
  427bec:	bl	427c58 <wcrtomb@plt+0x22e38>
  427bf0:	b	427c18 <wcrtomb@plt+0x22df8>
  427bf4:	tbz	w1, #0, 427c00 <wcrtomb@plt+0x22de0>
  427bf8:	mov	w0, #0x1                   	// #1
  427bfc:	b	427c18 <wcrtomb@plt+0x22df8>
  427c00:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427c04:	add	x1, x1, #0xdee
  427c08:	mov	w2, #0x5                   	// #5
  427c0c:	bl	4045a0 <strncmp@plt>
  427c10:	cmp	w0, #0x0
  427c14:	cset	w0, eq  // eq = none
  427c18:	and	w0, w0, #0x1
  427c1c:	ldp	x29, x30, [sp], #16
  427c20:	ret
  427c24:	stp	x29, x30, [sp, #-16]!
  427c28:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  427c2c:	ldr	x8, [x8, #3416]
  427c30:	mov	x29, sp
  427c34:	cbz	x8, 427c48 <wcrtomb@plt+0x22e28>
  427c38:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x30da0>
  427c3c:	add	x1, x1, #0xd50
  427c40:	bl	427c58 <wcrtomb@plt+0x22e38>
  427c44:	b	427c4c <wcrtomb@plt+0x22e2c>
  427c48:	mov	w0, wzr
  427c4c:	and	w0, w0, #0x1
  427c50:	ldp	x29, x30, [sp], #16
  427c54:	ret
  427c58:	stp	x29, x30, [sp, #-48]!
  427c5c:	stp	x20, x19, [sp, #32]
  427c60:	ldr	x8, [x1, #8]
  427c64:	str	x21, [sp, #16]
  427c68:	mov	x29, sp
  427c6c:	cbz	x8, 427cac <wcrtomb@plt+0x22e8c>
  427c70:	ldr	x8, [x1, #16]
  427c74:	mov	x19, x1
  427c78:	cbz	x8, 427cac <wcrtomb@plt+0x22e8c>
  427c7c:	mov	x20, x0
  427c80:	mov	x21, xzr
  427c84:	ldr	x8, [x19]
  427c88:	mov	x1, x20
  427c8c:	mov	w2, wzr
  427c90:	ldr	x0, [x8, x21, lsl #3]
  427c94:	bl	404ac0 <fnmatch@plt>
  427c98:	cbz	w0, 427cb4 <wcrtomb@plt+0x22e94>
  427c9c:	ldr	x8, [x19, #16]
  427ca0:	add	x21, x21, #0x1
  427ca4:	cmp	x8, x21
  427ca8:	b.hi	427c84 <wcrtomb@plt+0x22e64>  // b.pmore
  427cac:	mov	w0, wzr
  427cb0:	b	427cb8 <wcrtomb@plt+0x22e98>
  427cb4:	mov	w0, #0x1                   	// #1
  427cb8:	ldp	x20, x19, [sp, #32]
  427cbc:	ldr	x21, [sp, #16]
  427cc0:	ldp	x29, x30, [sp], #48
  427cc4:	ret
  427cc8:	tst	w0, #0x100
  427ccc:	mov	w8, #0x72                  	// #114
  427cd0:	mov	w9, #0x2d                  	// #45
  427cd4:	mov	w10, #0x77                  	// #119
  427cd8:	csel	w14, w9, w8, eq  // eq = none
  427cdc:	tst	w0, #0x80
  427ce0:	mov	w11, #0x53                  	// #83
  427ce4:	mov	w12, #0x73                  	// #115
  427ce8:	mov	w13, #0x78                  	// #120
  427cec:	strb	w14, [x1]
  427cf0:	csel	w14, w9, w10, eq  // eq = none
  427cf4:	tst	w0, #0x40
  427cf8:	strb	w14, [x1, #1]
  427cfc:	csel	w14, w12, w11, ne  // ne = any
  427d00:	csel	w15, w13, w9, ne  // ne = any
  427d04:	tst	w0, #0x800
  427d08:	csel	w14, w15, w14, eq  // eq = none
  427d0c:	tst	w0, #0x20
  427d10:	strb	w14, [x1, #2]
  427d14:	csel	w14, w9, w8, eq  // eq = none
  427d18:	tst	w0, #0x10
  427d1c:	strb	w14, [x1, #3]
  427d20:	csel	w14, w9, w10, eq  // eq = none
  427d24:	tst	w0, #0x8
  427d28:	csel	w11, w12, w11, ne  // ne = any
  427d2c:	csel	w12, w13, w9, ne  // ne = any
  427d30:	tst	w0, #0x400
  427d34:	csel	w11, w12, w11, eq  // eq = none
  427d38:	tst	w0, #0x4
  427d3c:	csel	w8, w9, w8, eq  // eq = none
  427d40:	tst	w0, #0x2
  427d44:	mov	w15, #0x54                  	// #84
  427d48:	strb	w14, [x1, #4]
  427d4c:	mov	w14, #0x74                  	// #116
  427d50:	strb	w8, [x1, #6]
  427d54:	csel	w8, w9, w10, eq  // eq = none
  427d58:	tst	w0, #0x1
  427d5c:	strb	w8, [x1, #7]
  427d60:	csel	w8, w14, w15, ne  // ne = any
  427d64:	csel	w9, w13, w9, ne  // ne = any
  427d68:	tst	w0, #0x200
  427d6c:	csel	w8, w9, w8, eq  // eq = none
  427d70:	strb	w11, [x1, #5]
  427d74:	strb	w8, [x1, #8]
  427d78:	strb	wzr, [x1, #9]
  427d7c:	ret
  427d80:	stp	x29, x30, [sp, #-48]!
  427d84:	stp	x22, x21, [sp, #16]
  427d88:	stp	x20, x19, [sp, #32]
  427d8c:	mov	x29, sp
  427d90:	mov	x20, x1
  427d94:	mov	x19, x0
  427d98:	bl	404d00 <__errno_location@plt>
  427d9c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427da0:	ldr	x8, [x8, #1008]
  427da4:	ldr	w21, [x0]
  427da8:	cbz	x8, 427db0 <wcrtomb@plt+0x22f90>
  427dac:	blr	x8
  427db0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427db4:	add	x1, x1, #0xe3e
  427db8:	mov	w2, #0x5                   	// #5
  427dbc:	mov	x0, xzr
  427dc0:	bl	404bf0 <dcgettext@plt>
  427dc4:	mov	x22, x0
  427dc8:	mov	x0, x20
  427dcc:	bl	43beac <argp_usage@@Base+0xa2b0>
  427dd0:	mov	x3, x0
  427dd4:	mov	w0, wzr
  427dd8:	mov	w1, w21
  427ddc:	mov	x2, x22
  427de0:	mov	x4, x19
  427de4:	bl	4041f0 <error@plt>
  427de8:	ldp	x20, x19, [sp, #32]
  427dec:	ldp	x22, x21, [sp, #16]
  427df0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  427df4:	mov	w9, #0x2                   	// #2
  427df8:	str	w9, [x8, #3456]
  427dfc:	ldp	x29, x30, [sp], #48
  427e00:	ret
  427e04:	stp	x29, x30, [sp, #-48]!
  427e08:	stp	x22, x21, [sp, #16]
  427e0c:	stp	x20, x19, [sp, #32]
  427e10:	mov	x29, sp
  427e14:	mov	x20, x1
  427e18:	mov	x19, x0
  427e1c:	bl	404d00 <__errno_location@plt>
  427e20:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427e24:	ldr	x8, [x8, #1008]
  427e28:	ldr	w21, [x0]
  427e2c:	cbz	x8, 427e34 <wcrtomb@plt+0x23014>
  427e30:	blr	x8
  427e34:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427e38:	add	x1, x1, #0xe3e
  427e3c:	mov	w2, #0x5                   	// #5
  427e40:	mov	x0, xzr
  427e44:	bl	404bf0 <dcgettext@plt>
  427e48:	mov	x22, x0
  427e4c:	mov	x0, x20
  427e50:	bl	43beac <argp_usage@@Base+0xa2b0>
  427e54:	mov	x3, x0
  427e58:	mov	w0, wzr
  427e5c:	mov	w1, w21
  427e60:	mov	x2, x22
  427e64:	mov	x4, x19
  427e68:	bl	4041f0 <error@plt>
  427e6c:	bl	40dda4 <wcrtomb@plt+0x8f84>
  427e70:	stp	x29, x30, [sp, #-48]!
  427e74:	stp	x22, x21, [sp, #16]
  427e78:	stp	x20, x19, [sp, #32]
  427e7c:	mov	x29, sp
  427e80:	mov	x20, x1
  427e84:	mov	x19, x0
  427e88:	bl	404d00 <__errno_location@plt>
  427e8c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427e90:	ldr	x8, [x8, #1008]
  427e94:	ldr	w21, [x0]
  427e98:	cbz	x8, 427ea0 <wcrtomb@plt+0x23080>
  427e9c:	blr	x8
  427ea0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427ea4:	add	x1, x1, #0xe4c
  427ea8:	mov	w2, #0x5                   	// #5
  427eac:	mov	x0, xzr
  427eb0:	bl	404bf0 <dcgettext@plt>
  427eb4:	mov	x22, x0
  427eb8:	mov	x0, x20
  427ebc:	bl	43beac <argp_usage@@Base+0xa2b0>
  427ec0:	mov	x3, x0
  427ec4:	mov	w0, wzr
  427ec8:	mov	w1, w21
  427ecc:	mov	x2, x22
  427ed0:	mov	x4, x19
  427ed4:	bl	4041f0 <error@plt>
  427ed8:	ldp	x20, x19, [sp, #32]
  427edc:	ldp	x22, x21, [sp, #16]
  427ee0:	ldp	x29, x30, [sp], #48
  427ee4:	ret
  427ee8:	sub	sp, sp, #0x40
  427eec:	stp	x29, x30, [sp, #16]
  427ef0:	str	x21, [sp, #32]
  427ef4:	stp	x20, x19, [sp, #48]
  427ef8:	add	x29, sp, #0x10
  427efc:	mov	w21, w1
  427f00:	mov	x20, x0
  427f04:	bl	404d00 <__errno_location@plt>
  427f08:	ldr	w19, [x0]
  427f0c:	add	x1, sp, #0x4
  427f10:	mov	w0, w21
  427f14:	bl	427cc8 <wcrtomb@plt+0x22ea8>
  427f18:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427f1c:	ldr	x8, [x8, #1008]
  427f20:	cbz	x8, 427f28 <wcrtomb@plt+0x23108>
  427f24:	blr	x8
  427f28:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427f2c:	add	x1, x1, #0xe63
  427f30:	mov	w2, #0x5                   	// #5
  427f34:	mov	x0, xzr
  427f38:	bl	404bf0 <dcgettext@plt>
  427f3c:	mov	x21, x0
  427f40:	mov	x0, x20
  427f44:	bl	43beac <argp_usage@@Base+0xa2b0>
  427f48:	mov	x3, x0
  427f4c:	add	x4, sp, #0x4
  427f50:	mov	w0, wzr
  427f54:	mov	w1, w19
  427f58:	mov	x2, x21
  427f5c:	bl	4041f0 <error@plt>
  427f60:	ldp	x20, x19, [sp, #48]
  427f64:	ldr	x21, [sp, #32]
  427f68:	ldp	x29, x30, [sp, #16]
  427f6c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  427f70:	mov	w9, #0x2                   	// #2
  427f74:	str	w9, [x8, #3456]
  427f78:	add	sp, sp, #0x40
  427f7c:	ret
  427f80:	stp	x29, x30, [sp, #-64]!
  427f84:	str	x23, [sp, #16]
  427f88:	stp	x22, x21, [sp, #32]
  427f8c:	stp	x20, x19, [sp, #48]
  427f90:	mov	x29, sp
  427f94:	mov	w19, w2
  427f98:	mov	w20, w1
  427f9c:	mov	x22, x0
  427fa0:	bl	404d00 <__errno_location@plt>
  427fa4:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  427fa8:	ldr	x8, [x8, #1008]
  427fac:	ldr	w21, [x0]
  427fb0:	cbz	x8, 427fb8 <wcrtomb@plt+0x23198>
  427fb4:	blr	x8
  427fb8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  427fbc:	add	x1, x1, #0xe80
  427fc0:	mov	w2, #0x5                   	// #5
  427fc4:	mov	x0, xzr
  427fc8:	bl	404bf0 <dcgettext@plt>
  427fcc:	mov	x23, x0
  427fd0:	mov	x0, x22
  427fd4:	bl	43beac <argp_usage@@Base+0xa2b0>
  427fd8:	mov	x3, x0
  427fdc:	mov	w4, w20
  427fe0:	mov	w5, w19
  427fe4:	mov	w0, wzr
  427fe8:	mov	w1, w21
  427fec:	mov	x2, x23
  427ff0:	bl	4041f0 <error@plt>
  427ff4:	ldp	x20, x19, [sp, #48]
  427ff8:	ldp	x22, x21, [sp, #32]
  427ffc:	ldr	x23, [sp, #16]
  428000:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428004:	mov	w9, #0x2                   	// #2
  428008:	str	w9, [x8, #3456]
  42800c:	ldp	x29, x30, [sp], #64
  428010:	ret
  428014:	stp	x29, x30, [sp, #-16]!
  428018:	mov	x1, x0
  42801c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  428020:	add	x0, x0, #0x8be
  428024:	mov	x29, sp
  428028:	bl	427d80 <wcrtomb@plt+0x22f60>
  42802c:	ldp	x29, x30, [sp], #16
  428030:	ret
  428034:	stp	x29, x30, [sp, #-16]!
  428038:	mov	x1, x0
  42803c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x14da0>
  428040:	add	x0, x0, #0x8be
  428044:	mov	x29, sp
  428048:	bl	427e70 <wcrtomb@plt+0x23050>
  42804c:	ldp	x29, x30, [sp], #16
  428050:	ret
  428054:	stp	x29, x30, [sp, #-16]!
  428058:	mov	x1, x0
  42805c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  428060:	add	x0, x0, #0xeb0
  428064:	mov	x29, sp
  428068:	bl	427e04 <wcrtomb@plt+0x22fe4>
  42806c:	stp	x29, x30, [sp, #-48]!
  428070:	stp	x22, x21, [sp, #16]
  428074:	stp	x20, x19, [sp, #32]
  428078:	mov	x29, sp
  42807c:	mov	x21, x1
  428080:	mov	x19, x0
  428084:	bl	404d00 <__errno_location@plt>
  428088:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42808c:	ldr	x8, [x8, #1008]
  428090:	ldr	w20, [x0]
  428094:	cbz	x8, 42809c <wcrtomb@plt+0x2327c>
  428098:	blr	x8
  42809c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4280a0:	add	x1, x1, #0xeb5
  4280a4:	mov	w2, #0x5                   	// #5
  4280a8:	mov	x0, xzr
  4280ac:	bl	404bf0 <dcgettext@plt>
  4280b0:	mov	x22, x0
  4280b4:	mov	x0, x21
  4280b8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4280bc:	mov	x21, x0
  4280c0:	mov	w0, #0x1                   	// #1
  4280c4:	mov	x1, x19
  4280c8:	bl	43c044 <argp_usage@@Base+0xa448>
  4280cc:	mov	x4, x0
  4280d0:	mov	w0, wzr
  4280d4:	mov	w1, w20
  4280d8:	mov	x2, x22
  4280dc:	mov	x3, x21
  4280e0:	bl	4041f0 <error@plt>
  4280e4:	ldp	x20, x19, [sp, #32]
  4280e8:	ldp	x22, x21, [sp, #16]
  4280ec:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4280f0:	mov	w9, #0x2                   	// #2
  4280f4:	str	w9, [x8, #3456]
  4280f8:	ldp	x29, x30, [sp], #48
  4280fc:	ret
  428100:	stp	x29, x30, [sp, #-16]!
  428104:	mov	x1, x0
  428108:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  42810c:	add	x0, x0, #0xed0
  428110:	mov	x29, sp
  428114:	bl	427d80 <wcrtomb@plt+0x22f60>
  428118:	ldp	x29, x30, [sp], #16
  42811c:	ret
  428120:	stp	x29, x30, [sp, #-16]!
  428124:	mov	x1, x0
  428128:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  42812c:	add	x0, x0, #0xed6
  428130:	mov	x29, sp
  428134:	bl	427d80 <wcrtomb@plt+0x22f60>
  428138:	ldp	x29, x30, [sp], #16
  42813c:	ret
  428140:	stp	x29, x30, [sp, #-16]!
  428144:	mov	x1, x0
  428148:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  42814c:	add	x0, x0, #0xedd
  428150:	mov	x29, sp
  428154:	bl	427d80 <wcrtomb@plt+0x22f60>
  428158:	ldp	x29, x30, [sp], #16
  42815c:	ret
  428160:	stp	x29, x30, [sp, #-16]!
  428164:	mov	x1, x0
  428168:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  42816c:	add	x0, x0, #0xee3
  428170:	mov	x29, sp
  428174:	bl	427d80 <wcrtomb@plt+0x22f60>
  428178:	ldp	x29, x30, [sp], #16
  42817c:	ret
  428180:	stp	x29, x30, [sp, #-16]!
  428184:	mov	x1, x0
  428188:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  42818c:	add	x0, x0, #0xee3
  428190:	mov	x29, sp
  428194:	bl	427e04 <wcrtomb@plt+0x22fe4>
  428198:	stp	x29, x30, [sp, #-16]!
  42819c:	mov	x1, x0
  4281a0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4281a4:	add	x0, x0, #0xee3
  4281a8:	mov	x29, sp
  4281ac:	bl	427e70 <wcrtomb@plt+0x23050>
  4281b0:	ldp	x29, x30, [sp], #16
  4281b4:	ret
  4281b8:	stp	x29, x30, [sp, #-16]!
  4281bc:	mov	x1, x0
  4281c0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  4281c4:	add	x0, x0, #0x35d
  4281c8:	mov	x29, sp
  4281cc:	bl	427d80 <wcrtomb@plt+0x22f60>
  4281d0:	ldp	x29, x30, [sp], #16
  4281d4:	ret
  4281d8:	sub	sp, sp, #0x60
  4281dc:	stp	x29, x30, [sp, #32]
  4281e0:	str	x23, [sp, #48]
  4281e4:	stp	x22, x21, [sp, #64]
  4281e8:	stp	x20, x19, [sp, #80]
  4281ec:	add	x29, sp, #0x20
  4281f0:	mov	x19, x2
  4281f4:	mov	x20, x1
  4281f8:	mov	x22, x0
  4281fc:	bl	404d00 <__errno_location@plt>
  428200:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  428204:	ldr	x8, [x8, #1008]
  428208:	ldr	w21, [x0]
  42820c:	cbz	x8, 428214 <wcrtomb@plt+0x233f4>
  428210:	blr	x8
  428214:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  428218:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  42821c:	add	x1, x1, #0xee8
  428220:	add	x2, x2, #0xf1a
  428224:	mov	w4, #0x5                   	// #5
  428228:	mov	x0, xzr
  42822c:	mov	x3, x19
  428230:	bl	404af0 <dcngettext@plt>
  428234:	mov	x23, x0
  428238:	mov	x0, x22
  42823c:	bl	43beac <argp_usage@@Base+0xa2b0>
  428240:	mov	x22, x0
  428244:	add	x1, sp, #0x8
  428248:	mov	x0, x20
  42824c:	bl	43650c <argp_usage@@Base+0x4910>
  428250:	mov	x4, x0
  428254:	mov	w0, wzr
  428258:	mov	w1, w21
  42825c:	mov	x2, x23
  428260:	mov	x3, x22
  428264:	mov	x5, x19
  428268:	bl	4041f0 <error@plt>
  42826c:	ldp	x20, x19, [sp, #80]
  428270:	ldp	x22, x21, [sp, #64]
  428274:	ldr	x23, [sp, #48]
  428278:	ldp	x29, x30, [sp, #32]
  42827c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428280:	mov	w9, #0x2                   	// #2
  428284:	str	w9, [x8, #3456]
  428288:	add	sp, sp, #0x60
  42828c:	ret
  428290:	sub	sp, sp, #0x60
  428294:	stp	x29, x30, [sp, #32]
  428298:	str	x23, [sp, #48]
  42829c:	stp	x22, x21, [sp, #64]
  4282a0:	stp	x20, x19, [sp, #80]
  4282a4:	add	x29, sp, #0x20
  4282a8:	mov	x19, x2
  4282ac:	mov	x20, x1
  4282b0:	mov	x22, x0
  4282b4:	bl	404d00 <__errno_location@plt>
  4282b8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4282bc:	ldr	x8, [x8, #1008]
  4282c0:	ldr	w21, [x0]
  4282c4:	cbz	x8, 4282cc <wcrtomb@plt+0x234ac>
  4282c8:	blr	x8
  4282cc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4282d0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  4282d4:	add	x1, x1, #0xf4d
  4282d8:	add	x2, x2, #0xf88
  4282dc:	mov	w4, #0x5                   	// #5
  4282e0:	mov	x0, xzr
  4282e4:	mov	x3, x19
  4282e8:	bl	404af0 <dcngettext@plt>
  4282ec:	mov	x23, x0
  4282f0:	mov	x0, x22
  4282f4:	bl	43beac <argp_usage@@Base+0xa2b0>
  4282f8:	mov	x22, x0
  4282fc:	add	x1, sp, #0x8
  428300:	mov	x0, x20
  428304:	bl	43650c <argp_usage@@Base+0x4910>
  428308:	mov	x4, x0
  42830c:	mov	w0, wzr
  428310:	mov	w1, w21
  428314:	mov	x2, x23
  428318:	mov	x3, x22
  42831c:	mov	x5, x19
  428320:	bl	4041f0 <error@plt>
  428324:	ldp	x20, x19, [sp, #80]
  428328:	ldp	x22, x21, [sp, #64]
  42832c:	ldr	x23, [sp, #48]
  428330:	ldp	x29, x30, [sp, #32]
  428334:	add	sp, sp, #0x60
  428338:	ret
  42833c:	stp	x29, x30, [sp, #-16]!
  428340:	mov	x1, x0
  428344:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x11da0>
  428348:	add	x0, x0, #0x35d
  42834c:	mov	x29, sp
  428350:	bl	427e04 <wcrtomb@plt+0x22fe4>
  428354:	sub	sp, sp, #0x60
  428358:	stp	x29, x30, [sp, #32]
  42835c:	str	x23, [sp, #48]
  428360:	stp	x22, x21, [sp, #64]
  428364:	stp	x20, x19, [sp, #80]
  428368:	add	x29, sp, #0x20
  42836c:	mov	x19, x2
  428370:	mov	x20, x1
  428374:	mov	x22, x0
  428378:	bl	404d00 <__errno_location@plt>
  42837c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  428380:	ldr	x8, [x8, #1008]
  428384:	ldr	w21, [x0]
  428388:	cbz	x8, 428390 <wcrtomb@plt+0x23570>
  42838c:	blr	x8
  428390:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  428394:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x17da0>
  428398:	add	x1, x1, #0xee8
  42839c:	add	x2, x2, #0xf1a
  4283a0:	mov	w4, #0x5                   	// #5
  4283a4:	mov	x0, xzr
  4283a8:	mov	x3, x19
  4283ac:	bl	404af0 <dcngettext@plt>
  4283b0:	mov	x23, x0
  4283b4:	mov	x0, x22
  4283b8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4283bc:	mov	x22, x0
  4283c0:	add	x1, sp, #0x8
  4283c4:	mov	x0, x20
  4283c8:	bl	43650c <argp_usage@@Base+0x4910>
  4283cc:	mov	x4, x0
  4283d0:	mov	w0, wzr
  4283d4:	mov	w1, w21
  4283d8:	mov	x2, x23
  4283dc:	mov	x3, x22
  4283e0:	mov	x5, x19
  4283e4:	bl	4041f0 <error@plt>
  4283e8:	bl	40dda4 <wcrtomb@plt+0x8f84>
  4283ec:	stp	x29, x30, [sp, #-16]!
  4283f0:	mov	x1, x0
  4283f4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  4283f8:	add	x0, x0, #0xfc4
  4283fc:	mov	x29, sp
  428400:	bl	427d80 <wcrtomb@plt+0x22f60>
  428404:	ldp	x29, x30, [sp], #16
  428408:	ret
  42840c:	stp	x29, x30, [sp, #-16]!
  428410:	mov	x1, x0
  428414:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  428418:	add	x0, x0, #0xfc4
  42841c:	mov	x29, sp
  428420:	bl	427e70 <wcrtomb@plt+0x23050>
  428424:	ldp	x29, x30, [sp], #16
  428428:	ret
  42842c:	stp	x29, x30, [sp, #-16]!
  428430:	mov	x1, x0
  428434:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  428438:	add	x0, x0, #0xfcd
  42843c:	mov	x29, sp
  428440:	bl	427d80 <wcrtomb@plt+0x22f60>
  428444:	ldp	x29, x30, [sp], #16
  428448:	ret
  42844c:	stp	x29, x30, [sp, #-16]!
  428450:	mov	x1, x0
  428454:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  428458:	add	x0, x0, #0xfd3
  42845c:	mov	x29, sp
  428460:	bl	427d80 <wcrtomb@plt+0x22f60>
  428464:	ldp	x29, x30, [sp], #16
  428468:	ret
  42846c:	stp	x29, x30, [sp, #-16]!
  428470:	mov	x1, x0
  428474:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  428478:	add	x0, x0, #0xfd3
  42847c:	mov	x29, sp
  428480:	bl	427e70 <wcrtomb@plt+0x23050>
  428484:	ldp	x29, x30, [sp], #16
  428488:	ret
  42848c:	stp	x29, x30, [sp, #-16]!
  428490:	mov	x1, x0
  428494:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  428498:	add	x0, x0, #0x65e
  42849c:	mov	x29, sp
  4284a0:	bl	427d80 <wcrtomb@plt+0x22f60>
  4284a4:	ldp	x29, x30, [sp], #16
  4284a8:	ret
  4284ac:	sub	sp, sp, #0x50
  4284b0:	stp	x29, x30, [sp, #32]
  4284b4:	stp	x22, x21, [sp, #48]
  4284b8:	stp	x20, x19, [sp, #64]
  4284bc:	add	x29, sp, #0x20
  4284c0:	mov	x19, x1
  4284c4:	mov	x21, x0
  4284c8:	bl	404d00 <__errno_location@plt>
  4284cc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4284d0:	ldr	x8, [x8, #1008]
  4284d4:	ldr	w20, [x0]
  4284d8:	cbz	x8, 4284e0 <wcrtomb@plt+0x236c0>
  4284dc:	blr	x8
  4284e0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4284e4:	add	x1, x1, #0xfdb
  4284e8:	mov	w2, #0x5                   	// #5
  4284ec:	mov	x0, xzr
  4284f0:	bl	404bf0 <dcgettext@plt>
  4284f4:	mov	x22, x0
  4284f8:	mov	x0, x21
  4284fc:	bl	43beac <argp_usage@@Base+0xa2b0>
  428500:	mov	x21, x0
  428504:	add	x1, sp, #0x8
  428508:	mov	x0, x19
  42850c:	bl	43650c <argp_usage@@Base+0x4910>
  428510:	mov	x4, x0
  428514:	mov	w0, wzr
  428518:	mov	w1, w20
  42851c:	mov	x2, x22
  428520:	mov	x3, x21
  428524:	bl	4041f0 <error@plt>
  428528:	ldp	x20, x19, [sp, #64]
  42852c:	ldp	x22, x21, [sp, #48]
  428530:	ldp	x29, x30, [sp, #32]
  428534:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428538:	mov	w9, #0x2                   	// #2
  42853c:	str	w9, [x8, #3456]
  428540:	add	sp, sp, #0x50
  428544:	ret
  428548:	stp	x29, x30, [sp, #-16]!
  42854c:	mov	x1, x0
  428550:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  428554:	add	x0, x0, #0x65e
  428558:	mov	x29, sp
  42855c:	bl	427e70 <wcrtomb@plt+0x23050>
  428560:	ldp	x29, x30, [sp], #16
  428564:	ret
  428568:	sub	sp, sp, #0x50
  42856c:	stp	x29, x30, [sp, #32]
  428570:	stp	x22, x21, [sp, #48]
  428574:	stp	x20, x19, [sp, #64]
  428578:	add	x29, sp, #0x20
  42857c:	mov	x19, x1
  428580:	mov	x21, x0
  428584:	bl	404d00 <__errno_location@plt>
  428588:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  42858c:	ldr	x8, [x8, #1008]
  428590:	ldr	w20, [x0]
  428594:	cbz	x8, 42859c <wcrtomb@plt+0x2377c>
  428598:	blr	x8
  42859c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4285a0:	add	x1, x1, #0xff1
  4285a4:	mov	w2, #0x5                   	// #5
  4285a8:	mov	x0, xzr
  4285ac:	bl	404bf0 <dcgettext@plt>
  4285b0:	mov	x22, x0
  4285b4:	mov	x0, x21
  4285b8:	bl	43beac <argp_usage@@Base+0xa2b0>
  4285bc:	mov	x21, x0
  4285c0:	add	x1, sp, #0x8
  4285c4:	mov	x0, x19
  4285c8:	bl	43650c <argp_usage@@Base+0x4910>
  4285cc:	mov	x4, x0
  4285d0:	mov	w0, wzr
  4285d4:	mov	w1, w20
  4285d8:	mov	x2, x22
  4285dc:	mov	x3, x21
  4285e0:	bl	4041f0 <error@plt>
  4285e4:	ldp	x20, x19, [sp, #64]
  4285e8:	ldp	x22, x21, [sp, #48]
  4285ec:	ldp	x29, x30, [sp, #32]
  4285f0:	add	sp, sp, #0x50
  4285f4:	ret
  4285f8:	stp	x29, x30, [sp, #-48]!
  4285fc:	stp	x22, x21, [sp, #16]
  428600:	stp	x20, x19, [sp, #32]
  428604:	mov	x29, sp
  428608:	mov	x21, x1
  42860c:	mov	x19, x0
  428610:	bl	404d00 <__errno_location@plt>
  428614:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  428618:	ldr	x8, [x8, #1008]
  42861c:	ldr	w20, [x0]
  428620:	cbz	x8, 428628 <wcrtomb@plt+0x23808>
  428624:	blr	x8
  428628:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42862c:	add	x1, x1, #0x10
  428630:	mov	w2, #0x5                   	// #5
  428634:	mov	x0, xzr
  428638:	bl	404bf0 <dcgettext@plt>
  42863c:	mov	x22, x0
  428640:	mov	x0, x21
  428644:	bl	43beac <argp_usage@@Base+0xa2b0>
  428648:	mov	x21, x0
  42864c:	mov	w0, #0x1                   	// #1
  428650:	mov	x1, x19
  428654:	bl	43c044 <argp_usage@@Base+0xa448>
  428658:	mov	x4, x0
  42865c:	mov	w0, wzr
  428660:	mov	w1, w20
  428664:	mov	x2, x22
  428668:	mov	x3, x21
  42866c:	bl	4041f0 <error@plt>
  428670:	ldp	x20, x19, [sp, #32]
  428674:	ldp	x22, x21, [sp, #16]
  428678:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42867c:	mov	w9, #0x2                   	// #2
  428680:	str	w9, [x8, #3456]
  428684:	ldp	x29, x30, [sp], #48
  428688:	ret
  42868c:	stp	x29, x30, [sp, #-16]!
  428690:	mov	x1, x0
  428694:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  428698:	add	x0, x0, #0x1d
  42869c:	mov	x29, sp
  4286a0:	bl	427e04 <wcrtomb@plt+0x22fe4>
  4286a4:	stp	x29, x30, [sp, #-16]!
  4286a8:	mov	x1, x0
  4286ac:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  4286b0:	add	x0, x0, #0x1d
  4286b4:	mov	x29, sp
  4286b8:	bl	427d80 <wcrtomb@plt+0x22f60>
  4286bc:	ldp	x29, x30, [sp], #16
  4286c0:	ret
  4286c4:	stp	x29, x30, [sp, #-16]!
  4286c8:	mov	x1, x0
  4286cc:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x13da0>
  4286d0:	add	x0, x0, #0x1d
  4286d4:	mov	x29, sp
  4286d8:	bl	427e70 <wcrtomb@plt+0x23050>
  4286dc:	ldp	x29, x30, [sp], #16
  4286e0:	ret
  4286e4:	stp	x29, x30, [sp, #-16]!
  4286e8:	mov	x1, x0
  4286ec:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  4286f0:	add	x0, x0, #0x30
  4286f4:	mov	x29, sp
  4286f8:	bl	427d80 <wcrtomb@plt+0x22f60>
  4286fc:	ldp	x29, x30, [sp], #16
  428700:	ret
  428704:	stp	x29, x30, [sp, #-16]!
  428708:	mov	x1, x0
  42870c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  428710:	add	x0, x0, #0x30
  428714:	mov	x29, sp
  428718:	bl	427e70 <wcrtomb@plt+0x23050>
  42871c:	ldp	x29, x30, [sp], #16
  428720:	ret
  428724:	stp	x29, x30, [sp, #-16]!
  428728:	mov	x1, x0
  42872c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  428730:	add	x0, x0, #0x8b8
  428734:	mov	x29, sp
  428738:	bl	427d80 <wcrtomb@plt+0x22f60>
  42873c:	ldp	x29, x30, [sp], #16
  428740:	ret
  428744:	stp	x29, x30, [sp, #-16]!
  428748:	mov	x1, x0
  42874c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  428750:	add	x0, x0, #0x39
  428754:	mov	x29, sp
  428758:	bl	427d80 <wcrtomb@plt+0x22f60>
  42875c:	ldp	x29, x30, [sp], #16
  428760:	ret
  428764:	stp	x29, x30, [sp, #-16]!
  428768:	mov	x1, x0
  42876c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  428770:	add	x0, x0, #0x3f
  428774:	mov	x29, sp
  428778:	bl	427d80 <wcrtomb@plt+0x22f60>
  42877c:	ldp	x29, x30, [sp], #16
  428780:	ret
  428784:	stp	x29, x30, [sp, #-16]!
  428788:	mov	x1, x0
  42878c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  428790:	add	x0, x0, #0xbb1
  428794:	mov	x29, sp
  428798:	bl	427d80 <wcrtomb@plt+0x22f60>
  42879c:	ldp	x29, x30, [sp], #16
  4287a0:	ret
  4287a4:	stp	x29, x30, [sp, #-48]!
  4287a8:	stp	x20, x19, [sp, #32]
  4287ac:	mov	x20, x0
  4287b0:	str	x21, [sp, #16]
  4287b4:	mov	x29, sp
  4287b8:	cbz	x1, 428820 <wcrtomb@plt+0x23a00>
  4287bc:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4287c0:	ldr	x8, [x8, #1008]
  4287c4:	mov	x19, x2
  4287c8:	mov	x21, x1
  4287cc:	cbz	x8, 4287d4 <wcrtomb@plt+0x239b4>
  4287d0:	blr	x8
  4287d4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4287d8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  4287dc:	add	x1, x1, #0x47
  4287e0:	add	x2, x2, #0x66
  4287e4:	mov	w4, #0x5                   	// #5
  4287e8:	mov	x0, xzr
  4287ec:	mov	x3, x19
  4287f0:	bl	404af0 <dcngettext@plt>
  4287f4:	mov	x2, x0
  4287f8:	mov	w0, wzr
  4287fc:	mov	w1, wzr
  428800:	mov	x3, x20
  428804:	mov	x4, x21
  428808:	mov	x5, x19
  42880c:	bl	4041f0 <error@plt>
  428810:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428814:	mov	w9, #0x2                   	// #2
  428818:	str	w9, [x8, #3456]
  42881c:	b	428828 <wcrtomb@plt+0x23a08>
  428820:	mov	x0, x20
  428824:	bl	428784 <wcrtomb@plt+0x23964>
  428828:	ldp	x20, x19, [sp, #32]
  42882c:	ldr	x21, [sp, #16]
  428830:	ldp	x29, x30, [sp], #48
  428834:	ret
  428838:	stp	x29, x30, [sp, #-16]!
  42883c:	mov	x1, x0
  428840:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  428844:	add	x0, x0, #0x86
  428848:	mov	x29, sp
  42884c:	bl	427e04 <wcrtomb@plt+0x22fe4>
  428850:	stp	x29, x30, [sp, #-16]!
  428854:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428858:	ldr	x0, [x8, #3464]
  42885c:	mov	x29, sp
  428860:	cbz	x0, 428878 <wcrtomb@plt+0x23a58>
  428864:	bl	434ccc <argp_usage@@Base+0x30d0>
  428868:	cbz	x0, 428878 <wcrtomb@plt+0x23a58>
  42886c:	mov	w0, #0x1                   	// #1
  428870:	ldp	x29, x30, [sp], #16
  428874:	ret
  428878:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42887c:	ldr	x0, [x8, #3472]
  428880:	cbz	x0, 428890 <wcrtomb@plt+0x23a70>
  428884:	bl	434ccc <argp_usage@@Base+0x30d0>
  428888:	cmp	x0, #0x0
  42888c:	cset	w0, ne  // ne = any
  428890:	ldp	x29, x30, [sp], #16
  428894:	ret
  428898:	sub	sp, sp, #0x40
  42889c:	stp	x22, x21, [sp, #32]
  4288a0:	stp	x20, x19, [sp, #48]
  4288a4:	mov	w19, w1
  4288a8:	mov	x20, x0
  4288ac:	mov	x21, x0
  4288b0:	stp	x29, x30, [sp, #16]
  4288b4:	add	x29, sp, #0x10
  4288b8:	tbnz	w2, #0, 428998 <wcrtomb@plt+0x23b78>
  4288bc:	mov	x8, xzr
  4288c0:	mov	x9, x20
  4288c4:	ldrb	w10, [x9]
  4288c8:	cmp	w10, #0x2e
  4288cc:	b.eq	4288d8 <wcrtomb@plt+0x23ab8>  // b.none
  4288d0:	cbnz	w10, 4288fc <wcrtomb@plt+0x23adc>
  4288d4:	b	428920 <wcrtomb@plt+0x23b00>
  4288d8:	ldrb	w10, [x9, #1]
  4288dc:	cmp	w10, #0x2e
  4288e0:	b.ne	4288fc <wcrtomb@plt+0x23adc>  // b.any
  4288e4:	mov	x10, x9
  4288e8:	ldrb	w11, [x10, #2]!
  4288ec:	cmp	w11, #0x2f
  4288f0:	b.eq	4288f8 <wcrtomb@plt+0x23ad8>  // b.none
  4288f4:	cbnz	w11, 4288fc <wcrtomb@plt+0x23adc>
  4288f8:	sub	x8, x10, x20
  4288fc:	add	x10, x9, #0x1
  428900:	mov	x9, x10
  428904:	ldurb	w10, [x10, #-1]
  428908:	cmp	w10, #0x2f
  42890c:	b.eq	4288c4 <wcrtomb@plt+0x23aa4>  // b.none
  428910:	mov	x10, x9
  428914:	ldrb	w11, [x10], #1
  428918:	cbnz	w11, 428900 <wcrtomb@plt+0x23ae0>
  42891c:	b	4288c4 <wcrtomb@plt+0x23aa4>
  428920:	add	x8, x20, x8
  428924:	sub	x21, x8, #0x1
  428928:	ldrb	w8, [x21, #1]!
  42892c:	cmp	w8, #0x2f
  428930:	b.eq	428928 <wcrtomb@plt+0x23b08>  // b.none
  428934:	subs	x2, x21, x20
  428938:	b.eq	428998 <wcrtomb@plt+0x23b78>  // b.none
  42893c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428940:	and	x22, x19, #0x1
  428944:	add	x8, x8, #0xd88
  428948:	add	x0, x8, x22, lsl #3
  42894c:	add	x3, sp, #0x8
  428950:	mov	x1, x20
  428954:	bl	428a0c <wcrtomb@plt+0x23bec>
  428958:	tbz	w0, #0, 428998 <wcrtomb@plt+0x23b78>
  42895c:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  428960:	ldr	x8, [x8, #1008]
  428964:	cbz	x8, 42896c <wcrtomb@plt+0x23b4c>
  428968:	blr	x8
  42896c:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  428970:	add	x8, x8, #0x90
  428974:	ldr	x1, [x8, x22, lsl #3]
  428978:	mov	w2, #0x5                   	// #5
  42897c:	mov	x0, xzr
  428980:	bl	404bf0 <dcgettext@plt>
  428984:	ldr	x3, [sp, #8]
  428988:	mov	x2, x0
  42898c:	mov	w0, wzr
  428990:	mov	w1, wzr
  428994:	bl	4041f0 <error@plt>
  428998:	ldrb	w8, [x21]
  42899c:	cbnz	w8, 4289f4 <wcrtomb@plt+0x23bd4>
  4289a0:	cmp	x21, x20
  4289a4:	b.ne	4289ec <wcrtomb@plt+0x23bcc>  // b.any
  4289a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4289ac:	ldr	x8, [x8, #1008]
  4289b0:	cbz	x8, 4289b8 <wcrtomb@plt+0x23b98>
  4289b4:	blr	x8
  4289b8:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  4289bc:	and	x8, x19, #0x1
  4289c0:	add	x9, x9, #0xa0
  4289c4:	ldr	x1, [x9, x8, lsl #3]
  4289c8:	mov	w2, #0x5                   	// #5
  4289cc:	mov	x0, xzr
  4289d0:	bl	404bf0 <dcgettext@plt>
  4289d4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  4289d8:	mov	x3, x0
  4289dc:	add	x2, x2, #0x386
  4289e0:	mov	w0, wzr
  4289e4:	mov	w1, wzr
  4289e8:	bl	4041f0 <error@plt>
  4289ec:	adrp	x21, 454000 <_obstack_memory_used@@Base+0x15da0>
  4289f0:	add	x21, x21, #0x232
  4289f4:	mov	x0, x21
  4289f8:	ldp	x20, x19, [sp, #48]
  4289fc:	ldp	x22, x21, [sp, #32]
  428a00:	ldp	x29, x30, [sp, #16]
  428a04:	add	sp, sp, #0x40
  428a08:	ret
  428a0c:	stp	x29, x30, [sp, #-64]!
  428a10:	stp	x24, x23, [sp, #16]
  428a14:	stp	x22, x21, [sp, #32]
  428a18:	stp	x20, x19, [sp, #48]
  428a1c:	ldr	x22, [x0]
  428a20:	mov	x19, x3
  428a24:	mov	x21, x0
  428a28:	mov	x24, x1
  428a2c:	mov	x29, sp
  428a30:	cbz	x2, 428a5c <wcrtomb@plt+0x23c3c>
  428a34:	add	x0, x2, #0x1
  428a38:	mov	x23, x2
  428a3c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  428a40:	mov	x1, x24
  428a44:	mov	x2, x23
  428a48:	mov	x20, x0
  428a4c:	bl	404110 <memcpy@plt>
  428a50:	strb	wzr, [x20, x23]
  428a54:	cbnz	x22, 428a98 <wcrtomb@plt+0x23c78>
  428a58:	b	428a6c <wcrtomb@plt+0x23c4c>
  428a5c:	mov	x0, x24
  428a60:	bl	43d39c <argp_usage@@Base+0xb7a0>
  428a64:	mov	x20, x0
  428a68:	cbnz	x22, 428a98 <wcrtomb@plt+0x23c78>
  428a6c:	adrp	x2, 428000 <wcrtomb@plt+0x231e0>
  428a70:	adrp	x3, 428000 <wcrtomb@plt+0x231e0>
  428a74:	add	x2, x2, #0xae4
  428a78:	add	x3, x3, #0xaf8
  428a7c:	mov	x0, xzr
  428a80:	mov	x1, xzr
  428a84:	mov	x4, xzr
  428a88:	bl	435130 <argp_usage@@Base+0x3534>
  428a8c:	mov	x22, x0
  428a90:	str	x0, [x21]
  428a94:	cbz	x0, 428ae0 <wcrtomb@plt+0x23cc0>
  428a98:	mov	x0, x22
  428a9c:	mov	x1, x20
  428aa0:	bl	43599c <argp_usage@@Base+0x3da0>
  428aa4:	cbz	x0, 428ae0 <wcrtomb@plt+0x23cc0>
  428aa8:	cmp	x0, x20
  428aac:	b.eq	428ac0 <wcrtomb@plt+0x23ca0>  // b.none
  428ab0:	mov	x0, x20
  428ab4:	bl	4049d0 <free@plt>
  428ab8:	mov	w0, wzr
  428abc:	b	428acc <wcrtomb@plt+0x23cac>
  428ac0:	cbz	x19, 428ac8 <wcrtomb@plt+0x23ca8>
  428ac4:	str	x20, [x19]
  428ac8:	mov	w0, #0x1                   	// #1
  428acc:	ldp	x20, x19, [sp, #48]
  428ad0:	ldp	x22, x21, [sp, #32]
  428ad4:	ldp	x24, x23, [sp, #16]
  428ad8:	ldp	x29, x30, [sp], #64
  428adc:	ret
  428ae0:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  428ae4:	stp	x29, x30, [sp, #-16]!
  428ae8:	mov	x29, sp
  428aec:	bl	4350d8 <argp_usage@@Base+0x34dc>
  428af0:	ldp	x29, x30, [sp], #16
  428af4:	ret
  428af8:	stp	x29, x30, [sp, #-16]!
  428afc:	mov	x29, sp
  428b00:	bl	404920 <strcmp@plt>
  428b04:	cmp	w0, #0x0
  428b08:	cset	w0, eq  // eq = none
  428b0c:	ldp	x29, x30, [sp], #16
  428b10:	ret
  428b14:	sub	sp, sp, #0x80
  428b18:	stp	x28, x27, [sp, #48]
  428b1c:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428b20:	add	x27, x27, #0x240
  428b24:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428b28:	stp	x24, x23, [sp, #80]
  428b2c:	stp	x22, x21, [sp, #96]
  428b30:	stp	x20, x19, [sp, #112]
  428b34:	mov	x24, x3
  428b38:	mov	w20, w2
  428b3c:	mov	w22, w1
  428b40:	mov	x19, xzr
  428b44:	add	x8, x8, #0x264
  428b48:	mov	x9, x27
  428b4c:	stp	x29, x30, [sp, #32]
  428b50:	stp	x26, x25, [sp, #64]
  428b54:	add	x29, sp, #0x20
  428b58:	b	428b70 <wcrtomb@plt+0x23d50>
  428b5c:	add	x19, x19, #0x1
  428b60:	add	x9, x9, #0x8
  428b64:	cmp	x19, #0x4
  428b68:	add	x8, x8, #0x8
  428b6c:	b.eq	428b88 <wcrtomb@plt+0x23d68>  // b.none
  428b70:	ldr	w10, [x9]
  428b74:	cmn	w10, #0x1
  428b78:	b.ne	428b5c <wcrtomb@plt+0x23d3c>  // b.any
  428b7c:	ldr	w10, [x8]
  428b80:	cmn	w10, #0x1
  428b84:	b.ne	428b5c <wcrtomb@plt+0x23d3c>  // b.any
  428b88:	cmp	w19, #0x4
  428b8c:	b.ne	428b9c <wcrtomb@plt+0x23d7c>  // b.any
  428b90:	bl	404d00 <__errno_location@plt>
  428b94:	mov	w8, #0x18                  	// #24
  428b98:	b	428cf4 <wcrtomb@plt+0x23ed4>
  428b9c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  428ba0:	mov	x21, x0
  428ba4:	mov	x26, xzr
  428ba8:	mov	x23, xzr
  428bac:	add	x8, x0, #0x1
  428bb0:	mov	x25, x0
  428bb4:	b	428bbc <wcrtomb@plt+0x23d9c>
  428bb8:	add	x8, x8, #0x1
  428bbc:	ldurb	w9, [x8, #-1]
  428bc0:	cmp	w9, #0x3f
  428bc4:	b.gt	428be0 <wcrtomb@plt+0x23dc0>
  428bc8:	cmp	w9, #0x3a
  428bcc:	b.ne	428c00 <wcrtomb@plt+0x23de0>  // b.any
  428bd0:	cbnz	x23, 428bb8 <wcrtomb@plt+0x23d98>
  428bd4:	mov	x23, x8
  428bd8:	sturb	wzr, [x8, #-1]
  428bdc:	b	428bb8 <wcrtomb@plt+0x23d98>
  428be0:	cmp	w9, #0x40
  428be4:	b.ne	428bb8 <wcrtomb@plt+0x23d98>  // b.any
  428be8:	cbnz	x26, 428bb8 <wcrtomb@plt+0x23d98>
  428bec:	sturb	wzr, [x8, #-1]
  428bf0:	mov	x26, x25
  428bf4:	mov	x25, x8
  428bf8:	add	x8, x8, #0x1
  428bfc:	b	428bbc <wcrtomb@plt+0x23d9c>
  428c00:	cbz	w9, 428c20 <wcrtomb@plt+0x23e00>
  428c04:	cmp	w9, #0xa
  428c08:	b.ne	428bb8 <wcrtomb@plt+0x23d98>  // b.any
  428c0c:	mov	x0, x21
  428c10:	bl	4049d0 <free@plt>
  428c14:	bl	404d00 <__errno_location@plt>
  428c18:	mov	w8, #0x2                   	// #2
  428c1c:	b	428cf4 <wcrtomb@plt+0x23ed4>
  428c20:	mov	x0, x25
  428c24:	bl	404dc0 <gethostbyname@plt>
  428c28:	cbz	x0, 428cb4 <wcrtomb@plt+0x23e94>
  428c2c:	cbz	x26, 428cdc <wcrtomb@plt+0x23ebc>
  428c30:	ldrb	w8, [x26]
  428c34:	cmp	w8, #0x0
  428c38:	csel	x8, xzr, x26, eq  // eq = none
  428c3c:	cbz	x24, 428ce4 <wcrtomb@plt+0x23ec4>
  428c40:	mov	x0, x24
  428c44:	str	x8, [sp, #16]
  428c48:	bl	432690 <argp_usage@@Base+0xa94>
  428c4c:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428c50:	add	x26, x26, #0x260
  428c54:	str	x0, [sp, #8]
  428c58:	add	x0, x26, w19, uxtw #3
  428c5c:	stur	x0, [x29, #-8]
  428c60:	bl	4042f0 <pipe@plt>
  428c64:	cmn	w0, #0x1
  428c68:	b.eq	428c98 <wcrtomb@plt+0x23e78>  // b.none
  428c6c:	mov	w8, w19
  428c70:	add	x28, x27, x8, lsl #3
  428c74:	mov	x0, x28
  428c78:	str	x8, [sp]
  428c7c:	bl	4042f0 <pipe@plt>
  428c80:	cmn	w0, #0x1
  428c84:	b.eq	428c98 <wcrtomb@plt+0x23e78>  // b.none
  428c88:	bl	404380 <fork@plt>
  428c8c:	cbz	w0, 428d1c <wcrtomb@plt+0x23efc>
  428c90:	cmn	w0, #0x1
  428c94:	b.ne	428e40 <wcrtomb@plt+0x24020>  // b.any
  428c98:	bl	404d00 <__errno_location@plt>
  428c9c:	ldr	w20, [x0]
  428ca0:	mov	x19, x0
  428ca4:	mov	x0, x21
  428ca8:	bl	4049d0 <free@plt>
  428cac:	str	w20, [x19]
  428cb0:	b	428cf8 <wcrtomb@plt+0x23ed8>
  428cb4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  428cb8:	add	x1, x1, #0x158
  428cbc:	mov	w2, #0x5                   	// #5
  428cc0:	bl	404bf0 <dcgettext@plt>
  428cc4:	mov	x2, x0
  428cc8:	mov	w0, #0x80                  	// #128
  428ccc:	mov	w1, wzr
  428cd0:	mov	x3, x25
  428cd4:	bl	4041f0 <error@plt>
  428cd8:	cbnz	x26, 428c30 <wcrtomb@plt+0x23e10>
  428cdc:	mov	x8, xzr
  428ce0:	cbnz	x24, 428c40 <wcrtomb@plt+0x23e20>
  428ce4:	mov	x0, x21
  428ce8:	bl	4049d0 <free@plt>
  428cec:	bl	404d00 <__errno_location@plt>
  428cf0:	mov	w8, #0x5                   	// #5
  428cf4:	str	w8, [x0]
  428cf8:	mov	w0, #0xffffffff            	// #-1
  428cfc:	ldp	x20, x19, [sp, #112]
  428d00:	ldp	x22, x21, [sp, #96]
  428d04:	ldp	x24, x23, [sp, #80]
  428d08:	ldp	x26, x25, [sp, #64]
  428d0c:	ldp	x28, x27, [sp, #48]
  428d10:	ldp	x29, x30, [sp, #32]
  428d14:	add	sp, sp, #0x80
  428d18:	ret
  428d1c:	ldur	x8, [x29, #-8]
  428d20:	mov	w1, wzr
  428d24:	ldr	w0, [x8]
  428d28:	bl	404c60 <dup2@plt>
  428d2c:	tbnz	w0, #31, 428d8c <wcrtomb@plt+0x23f6c>
  428d30:	ldur	x8, [x29, #-8]
  428d34:	ldr	w0, [x8]
  428d38:	cbz	w0, 428d44 <wcrtomb@plt+0x23f24>
  428d3c:	bl	4047c0 <close@plt>
  428d40:	cbnz	w0, 428d8c <wcrtomb@plt+0x23f6c>
  428d44:	ldr	x8, [sp]
  428d48:	add	x8, x26, x8, lsl #3
  428d4c:	ldr	w0, [x8, #4]
  428d50:	cbz	w0, 428d5c <wcrtomb@plt+0x23f3c>
  428d54:	bl	4047c0 <close@plt>
  428d58:	cbnz	w0, 428d8c <wcrtomb@plt+0x23f6c>
  428d5c:	ldr	x8, [sp]
  428d60:	mov	w1, #0x1                   	// #1
  428d64:	add	x26, x27, x8, lsl #3
  428d68:	ldr	w0, [x26, #4]!
  428d6c:	bl	404c60 <dup2@plt>
  428d70:	tbnz	w0, #31, 428d8c <wcrtomb@plt+0x23f6c>
  428d74:	ldr	w0, [x28]
  428d78:	bl	4047c0 <close@plt>
  428d7c:	cbnz	w0, 428d8c <wcrtomb@plt+0x23f6c>
  428d80:	ldr	w0, [x26]
  428d84:	bl	4047c0 <close@plt>
  428d88:	cbz	w0, 428db8 <wcrtomb@plt+0x23f98>
  428d8c:	bl	404d00 <__errno_location@plt>
  428d90:	ldr	w28, [x0]
  428d94:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  428d98:	add	x1, x1, #0x17d
  428d9c:	mov	w2, #0x5                   	// #5
  428da0:	mov	x0, xzr
  428da4:	bl	404bf0 <dcgettext@plt>
  428da8:	mov	x2, x0
  428dac:	mov	w0, #0x80                  	// #128
  428db0:	mov	w1, w28
  428db4:	bl	4041f0 <error@plt>
  428db8:	bl	4042e0 <getuid@plt>
  428dbc:	bl	404150 <setuid@plt>
  428dc0:	cbnz	w0, 428f10 <wcrtomb@plt+0x240f0>
  428dc4:	bl	404a10 <getgid@plt>
  428dc8:	bl	404880 <setgid@plt>
  428dcc:	cbnz	w0, 428f10 <wcrtomb@plt+0x240f0>
  428dd0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  428dd4:	ldr	x5, [x8, #568]
  428dd8:	ldr	x4, [sp, #16]
  428ddc:	cbz	x4, 428e00 <wcrtomb@plt+0x23fe0>
  428de0:	ldr	x1, [sp, #8]
  428de4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  428de8:	add	x3, x3, #0x1a4
  428dec:	mov	x0, x24
  428df0:	mov	x2, x25
  428df4:	mov	x6, xzr
  428df8:	bl	404220 <execl@plt>
  428dfc:	b	428e14 <wcrtomb@plt+0x23ff4>
  428e00:	ldr	x1, [sp, #8]
  428e04:	mov	x0, x24
  428e08:	mov	x2, x25
  428e0c:	mov	x3, x5
  428e10:	bl	404220 <execl@plt>
  428e14:	bl	404d00 <__errno_location@plt>
  428e18:	ldr	w24, [x0]
  428e1c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  428e20:	add	x1, x1, #0x1a7
  428e24:	mov	w2, #0x5                   	// #5
  428e28:	mov	x0, xzr
  428e2c:	bl	404bf0 <dcgettext@plt>
  428e30:	mov	x2, x0
  428e34:	mov	w0, #0x80                  	// #128
  428e38:	mov	w1, w24
  428e3c:	bl	4041f0 <error@plt>
  428e40:	ldr	x8, [sp]
  428e44:	add	x8, x27, x8, lsl #3
  428e48:	ldr	w0, [x8, #4]
  428e4c:	bl	4047c0 <close@plt>
  428e50:	ldur	x8, [x29, #-8]
  428e54:	ldr	w0, [x8]
  428e58:	bl	4047c0 <close@plt>
  428e5c:	mov	x0, x23
  428e60:	bl	404190 <strlen@plt>
  428e64:	mov	x25, x0
  428e68:	add	x0, x0, #0x3e8
  428e6c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  428e70:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  428e74:	add	x3, x3, #0x1c3
  428e78:	mov	w1, #0x1                   	// #1
  428e7c:	mov	x2, #0xffffffffffffffff    	// #-1
  428e80:	mov	x4, x23
  428e84:	mov	x24, x0
  428e88:	bl	4041b0 <__sprintf_chk@plt>
  428e8c:	add	x8, x24, x25
  428e90:	add	x0, x8, #0x2
  428e94:	mov	w1, w22
  428e98:	bl	428f14 <wcrtomb@plt+0x240f4>
  428e9c:	mov	x0, x24
  428ea0:	bl	404190 <strlen@plt>
  428ea4:	mov	w8, #0xa                   	// #10
  428ea8:	strh	w8, [x24, x0]
  428eac:	mov	w0, w19
  428eb0:	mov	x1, x24
  428eb4:	bl	429130 <wcrtomb@plt+0x24310>
  428eb8:	cmn	w0, #0x1
  428ebc:	b.eq	428ee8 <wcrtomb@plt+0x240c8>  // b.none
  428ec0:	mov	w0, w19
  428ec4:	bl	4291c4 <wcrtomb@plt+0x243a4>
  428ec8:	cmn	x0, #0x1
  428ecc:	b.eq	428ee8 <wcrtomb@plt+0x240c8>  // b.none
  428ed0:	mov	x0, x24
  428ed4:	bl	4049d0 <free@plt>
  428ed8:	mov	x0, x21
  428edc:	bl	4049d0 <free@plt>
  428ee0:	add	w0, w19, w20
  428ee4:	b	428cfc <wcrtomb@plt+0x23edc>
  428ee8:	bl	404d00 <__errno_location@plt>
  428eec:	ldr	w20, [x0]
  428ef0:	mov	x0, x24
  428ef4:	bl	4049d0 <free@plt>
  428ef8:	mov	x0, x21
  428efc:	bl	4049d0 <free@plt>
  428f00:	mov	w0, w19
  428f04:	mov	w1, w20
  428f08:	bl	429200 <wcrtomb@plt+0x243e0>
  428f0c:	b	428cf8 <wcrtomb@plt+0x23ed8>
  428f10:	bl	404870 <abort@plt>
  428f14:	stp	x29, x30, [sp, #-32]!
  428f18:	stp	x20, x19, [sp, #16]
  428f1c:	mov	w20, w1
  428f20:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  428f24:	add	x3, x3, #0x1e7
  428f28:	mov	w1, #0x1                   	// #1
  428f2c:	mov	x2, #0xffffffffffffffff    	// #-1
  428f30:	mov	w4, w20
  428f34:	mov	x29, sp
  428f38:	mov	x19, x0
  428f3c:	bl	4041b0 <__sprintf_chk@plt>
  428f40:	and	w8, w20, #0x3
  428f44:	cmp	w8, #0x2
  428f48:	b.eq	429100 <wcrtomb@plt+0x242e0>  // b.none
  428f4c:	cmp	w8, #0x1
  428f50:	b.eq	428f6c <wcrtomb@plt+0x2414c>  // b.none
  428f54:	cbnz	w8, 42912c <wcrtomb@plt+0x2430c>
  428f58:	mov	x0, x19
  428f5c:	bl	404190 <strlen@plt>
  428f60:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  428f64:	add	x8, x8, #0x1eb
  428f68:	b	428f7c <wcrtomb@plt+0x2415c>
  428f6c:	mov	x0, x19
  428f70:	bl	404190 <strlen@plt>
  428f74:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  428f78:	add	x8, x8, #0x1fb
  428f7c:	ldr	x8, [x8]
  428f80:	add	x9, x19, x0
  428f84:	strb	wzr, [x9, #8]
  428f88:	str	x8, [x9]
  428f8c:	tbz	w20, #10, 428fb4 <wcrtomb@plt+0x24194>
  428f90:	mov	x0, x19
  428f94:	bl	404190 <strlen@plt>
  428f98:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  428f9c:	add	x8, x8, #0x204
  428fa0:	ldr	x8, [x8]
  428fa4:	add	x9, x19, x0
  428fa8:	mov	w10, #0x44                  	// #68
  428fac:	strh	w10, [x9, #8]
  428fb0:	str	x8, [x9]
  428fb4:	tbnz	w20, #6, 42906c <wcrtomb@plt+0x2424c>
  428fb8:	tbnz	w20, #12, 429090 <wcrtomb@plt+0x24270>
  428fbc:	tbnz	w20, #7, 4290b4 <wcrtomb@plt+0x24294>
  428fc0:	tbnz	w20, #8, 4290d4 <wcrtomb@plt+0x242b4>
  428fc4:	tbz	w20, #11, 428ff0 <wcrtomb@plt+0x241d0>
  428fc8:	mov	x0, x19
  428fcc:	bl	404190 <strlen@plt>
  428fd0:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  428fd4:	add	x8, x8, #0x232
  428fd8:	ldr	x8, [x8]
  428fdc:	mov	w10, #0x434f                	// #17231
  428fe0:	add	x9, x19, x0
  428fe4:	movk	w10, #0x4b, lsl #16
  428fe8:	str	x8, [x9]
  428fec:	str	w10, [x9, #8]
  428ff0:	mov	w8, #0x1000                	// #4096
  428ff4:	movk	w8, #0x10, lsl #16
  428ff8:	tst	w20, w8
  428ffc:	b.eq	42903c <wcrtomb@plt+0x2421c>  // b.none
  429000:	mov	x0, x19
  429004:	bl	404190 <strlen@plt>
  429008:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  42900c:	add	x8, x8, #0x23e
  429010:	ldr	x8, [x8]
  429014:	add	x9, x19, x0
  429018:	mov	x0, x19
  42901c:	strb	wzr, [x9, #8]
  429020:	str	x8, [x9]
  429024:	bl	404190 <strlen@plt>
  429028:	mov	x8, #0x4f7c                	// #20348
  42902c:	movk	x8, #0x535f, lsl #16
  429030:	movk	x8, #0x4e59, lsl #32
  429034:	movk	x8, #0x43, lsl #48
  429038:	str	x8, [x19, x0]
  42903c:	tbz	w20, #9, 429060 <wcrtomb@plt+0x24240>
  429040:	mov	x0, x19
  429044:	bl	404190 <strlen@plt>
  429048:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  42904c:	add	x8, x8, #0x24f
  429050:	ldr	x8, [x8]
  429054:	add	x9, x19, x0
  429058:	strb	wzr, [x9, #8]
  42905c:	str	x8, [x9]
  429060:	ldp	x20, x19, [sp, #16]
  429064:	ldp	x29, x30, [sp], #32
  429068:	ret
  42906c:	mov	x0, x19
  429070:	bl	404190 <strlen@plt>
  429074:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  429078:	add	x8, x8, #0x20e
  42907c:	ldr	x8, [x8]
  429080:	add	x9, x19, x0
  429084:	strb	wzr, [x9, #8]
  429088:	str	x8, [x9]
  42908c:	tbz	w20, #12, 428fbc <wcrtomb@plt+0x2419c>
  429090:	mov	x0, x19
  429094:	bl	404190 <strlen@plt>
  429098:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  42909c:	add	x8, x8, #0x217
  4290a0:	ldr	x8, [x8]
  4290a4:	add	x9, x19, x0
  4290a8:	strb	wzr, [x9, #8]
  4290ac:	str	x8, [x9]
  4290b0:	tbz	w20, #7, 428fc0 <wcrtomb@plt+0x241a0>
  4290b4:	mov	x0, x19
  4290b8:	bl	404190 <strlen@plt>
  4290bc:	mov	x8, #0x4f7c                	// #20348
  4290c0:	movk	x8, #0x455f, lsl #16
  4290c4:	movk	x8, #0x4358, lsl #32
  4290c8:	movk	x8, #0x4c, lsl #48
  4290cc:	str	x8, [x19, x0]
  4290d0:	tbz	w20, #8, 428fc4 <wcrtomb@plt+0x241a4>
  4290d4:	mov	x0, x19
  4290d8:	bl	404190 <strlen@plt>
  4290dc:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  4290e0:	add	x8, x8, #0x228
  4290e4:	ldr	x8, [x8]
  4290e8:	add	x9, x19, x0
  4290ec:	mov	w10, #0x59                  	// #89
  4290f0:	strh	w10, [x9, #8]
  4290f4:	str	x8, [x9]
  4290f8:	tbnz	w20, #11, 428fc8 <wcrtomb@plt+0x241a8>
  4290fc:	b	428ff0 <wcrtomb@plt+0x241d0>
  429100:	mov	x0, x19
  429104:	bl	404190 <strlen@plt>
  429108:	mov	w9, #0x5f4f                	// #24399
  42910c:	mov	w10, #0x5744                	// #22340
  429110:	add	x8, x19, x0
  429114:	movk	w9, #0x4452, lsl #16
  429118:	movk	w10, #0x52, lsl #16
  42911c:	str	w9, [x8]
  429120:	stur	w10, [x8, #3]
  429124:	tbnz	w20, #10, 428f90 <wcrtomb@plt+0x24170>
  429128:	b	428fb4 <wcrtomb@plt+0x24194>
  42912c:	bl	404870 <abort@plt>
  429130:	stp	x29, x30, [sp, #-48]!
  429134:	stp	x20, x19, [sp, #32]
  429138:	mov	w19, w0
  42913c:	mov	x0, x1
  429140:	stp	x22, x21, [sp, #16]
  429144:	mov	x29, sp
  429148:	mov	x20, x1
  42914c:	bl	404190 <strlen@plt>
  429150:	mov	x21, x0
  429154:	mov	w0, #0xd                   	// #13
  429158:	mov	w1, #0x1                   	// #1
  42915c:	bl	404440 <signal@plt>
  429160:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  429164:	add	x8, x8, #0x260
  429168:	add	x8, x8, w19, sxtw #3
  42916c:	ldr	w8, [x8, #4]
  429170:	mov	x22, x0
  429174:	mov	x1, x20
  429178:	mov	x2, x21
  42917c:	mov	w0, w8
  429180:	bl	434bec <argp_usage@@Base+0x2ff0>
  429184:	mov	x20, x0
  429188:	mov	w0, #0xd                   	// #13
  42918c:	mov	x1, x22
  429190:	bl	404440 <signal@plt>
  429194:	cmp	x20, x21
  429198:	b.ne	4291a4 <wcrtomb@plt+0x24384>  // b.any
  42919c:	mov	w0, wzr
  4291a0:	b	4291b4 <wcrtomb@plt+0x24394>
  4291a4:	mov	w1, #0x5                   	// #5
  4291a8:	mov	w0, w19
  4291ac:	bl	429200 <wcrtomb@plt+0x243e0>
  4291b0:	mov	w0, #0xffffffff            	// #-1
  4291b4:	ldp	x20, x19, [sp, #32]
  4291b8:	ldp	x22, x21, [sp, #16]
  4291bc:	ldp	x29, x30, [sp], #48
  4291c0:	ret
  4291c4:	sub	sp, sp, #0x50
  4291c8:	mov	x1, sp
  4291cc:	stp	x29, x30, [sp, #64]
  4291d0:	add	x29, sp, #0x40
  4291d4:	bl	4297dc <wcrtomb@plt+0x249bc>
  4291d8:	cbz	x0, 4291f0 <wcrtomb@plt+0x243d0>
  4291dc:	bl	4047f0 <atol@plt>
  4291e0:	tbz	x0, #63, 4291f4 <wcrtomb@plt+0x243d4>
  4291e4:	bl	404d00 <__errno_location@plt>
  4291e8:	mov	w8, #0x5                   	// #5
  4291ec:	str	w8, [x0]
  4291f0:	mov	x0, #0xffffffffffffffff    	// #-1
  4291f4:	ldp	x29, x30, [sp, #64]
  4291f8:	add	sp, sp, #0x50
  4291fc:	ret
  429200:	stp	x29, x30, [sp, #-48]!
  429204:	stp	x22, x21, [sp, #16]
  429208:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42920c:	stp	x20, x19, [sp, #32]
  429210:	sbfiz	x20, x0, #3, #32
  429214:	add	x21, x21, #0x240
  429218:	ldr	w0, [x21, x20]
  42921c:	mov	x29, sp
  429220:	mov	w19, w1
  429224:	bl	4047c0 <close@plt>
  429228:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42922c:	add	x8, x8, #0x260
  429230:	add	x22, x8, x20
  429234:	ldr	w0, [x22, #4]
  429238:	bl	4047c0 <close@plt>
  42923c:	mov	w8, #0xffffffff            	// #-1
  429240:	str	w8, [x21, x20]
  429244:	str	w8, [x22, #4]
  429248:	bl	404d00 <__errno_location@plt>
  42924c:	str	w19, [x0]
  429250:	ldp	x20, x19, [sp, #32]
  429254:	ldp	x22, x21, [sp, #16]
  429258:	ldp	x29, x30, [sp], #48
  42925c:	ret
  429260:	stp	x29, x30, [sp, #-32]!
  429264:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  429268:	add	x1, x1, #0x1c8
  42926c:	stp	x20, x19, [sp, #16]
  429270:	mov	x29, sp
  429274:	mov	w19, w0
  429278:	bl	429130 <wcrtomb@plt+0x24310>
  42927c:	cmn	w0, #0x1
  429280:	b.eq	4292a4 <wcrtomb@plt+0x24484>  // b.none
  429284:	mov	w0, w19
  429288:	bl	4291c4 <wcrtomb@plt+0x243a4>
  42928c:	mov	x20, x0
  429290:	bl	404d00 <__errno_location@plt>
  429294:	ldr	w1, [x0]
  429298:	mov	w0, w19
  42929c:	bl	429200 <wcrtomb@plt+0x243e0>
  4292a0:	b	4292a8 <wcrtomb@plt+0x24488>
  4292a4:	mov	w20, #0xffffffff            	// #-1
  4292a8:	mov	w0, w20
  4292ac:	ldp	x20, x19, [sp, #16]
  4292b0:	ldp	x29, x30, [sp], #32
  4292b4:	ret
  4292b8:	sub	sp, sp, #0x80
  4292bc:	stp	x22, x21, [sp, #96]
  4292c0:	mov	x22, x2
  4292c4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  4292c8:	stp	x20, x19, [sp, #112]
  4292cc:	mov	x20, x1
  4292d0:	mov	w19, w0
  4292d4:	add	x3, x3, #0x1cb
  4292d8:	mov	x0, sp
  4292dc:	mov	w1, #0x1                   	// #1
  4292e0:	mov	w2, #0x40                  	// #64
  4292e4:	mov	x4, x22
  4292e8:	stp	x29, x30, [sp, #64]
  4292ec:	str	x23, [sp, #80]
  4292f0:	add	x29, sp, #0x40
  4292f4:	bl	4041b0 <__sprintf_chk@plt>
  4292f8:	mov	x1, sp
  4292fc:	mov	w0, w19
  429300:	bl	429130 <wcrtomb@plt+0x24310>
  429304:	cmn	w0, #0x1
  429308:	b.eq	429380 <wcrtomb@plt+0x24560>  // b.none
  42930c:	mov	w0, w19
  429310:	bl	4291c4 <wcrtomb@plt+0x243a4>
  429314:	mov	x21, x0
  429318:	cmn	x0, #0x1
  42931c:	mov	x0, #0xffffffffffffffff    	// #-1
  429320:	b.eq	429384 <wcrtomb@plt+0x24564>  // b.none
  429324:	cmp	x21, x22
  429328:	b.hi	429384 <wcrtomb@plt+0x24564>  // b.pmore
  42932c:	cbz	x21, 42936c <wcrtomb@plt+0x2454c>
  429330:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  429334:	add	x8, x8, #0x240
  429338:	mov	x22, xzr
  42933c:	add	x23, x8, w19, sxtw #3
  429340:	ldr	w0, [x23]
  429344:	sub	x2, x21, x22
  429348:	mov	x1, x20
  42934c:	bl	43c740 <argp_usage@@Base+0xab44>
  429350:	add	x8, x0, #0x1
  429354:	cmp	x8, #0x1
  429358:	b.ls	429374 <wcrtomb@plt+0x24554>  // b.plast
  42935c:	add	x22, x0, x22
  429360:	cmp	x21, x22
  429364:	add	x20, x20, x0
  429368:	b.hi	429340 <wcrtomb@plt+0x24520>  // b.pmore
  42936c:	mov	x0, x21
  429370:	b	429384 <wcrtomb@plt+0x24564>
  429374:	mov	w1, #0x5                   	// #5
  429378:	mov	w0, w19
  42937c:	bl	429200 <wcrtomb@plt+0x243e0>
  429380:	mov	x0, #0xffffffffffffffff    	// #-1
  429384:	ldp	x20, x19, [sp, #112]
  429388:	ldp	x22, x21, [sp, #96]
  42938c:	ldr	x23, [sp, #80]
  429390:	ldp	x29, x30, [sp, #64]
  429394:	add	sp, sp, #0x80
  429398:	ret
  42939c:	sub	sp, sp, #0x70
  4293a0:	stp	x20, x19, [sp, #96]
  4293a4:	mov	x20, x2
  4293a8:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  4293ac:	stp	x22, x21, [sp, #80]
  4293b0:	mov	x21, x1
  4293b4:	mov	w19, w0
  4293b8:	add	x3, x3, #0x1d1
  4293bc:	mov	x0, sp
  4293c0:	mov	w1, #0x1                   	// #1
  4293c4:	mov	w2, #0x40                  	// #64
  4293c8:	mov	x4, x20
  4293cc:	stp	x29, x30, [sp, #64]
  4293d0:	add	x29, sp, #0x40
  4293d4:	bl	4041b0 <__sprintf_chk@plt>
  4293d8:	mov	x1, sp
  4293dc:	mov	w0, w19
  4293e0:	bl	429130 <wcrtomb@plt+0x24310>
  4293e4:	cmn	w0, #0x1
  4293e8:	b.eq	429474 <wcrtomb@plt+0x24654>  // b.none
  4293ec:	mov	w0, #0xd                   	// #13
  4293f0:	mov	w1, #0x1                   	// #1
  4293f4:	bl	404440 <signal@plt>
  4293f8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4293fc:	add	x8, x8, #0x260
  429400:	add	x8, x8, w19, sxtw #3
  429404:	ldr	w8, [x8, #4]
  429408:	mov	x22, x0
  42940c:	mov	x1, x21
  429410:	mov	x2, x20
  429414:	mov	w0, w8
  429418:	bl	434bec <argp_usage@@Base+0x2ff0>
  42941c:	mov	x21, x0
  429420:	mov	w0, #0xd                   	// #13
  429424:	mov	x1, x22
  429428:	bl	404440 <signal@plt>
  42942c:	cmp	x21, x20
  429430:	b.ne	429460 <wcrtomb@plt+0x24640>  // b.any
  429434:	mov	w0, w19
  429438:	bl	4291c4 <wcrtomb@plt+0x243a4>
  42943c:	cmp	x0, x20
  429440:	ccmp	x0, #0x0, #0x8, ne  // ne = any
  429444:	csel	x21, x21, x0, lt  // lt = tstop
  429448:	cmp	x0, #0x0
  42944c:	mov	x8, x0
  429450:	csel	x0, xzr, x20, lt  // lt = tstop
  429454:	tbnz	x8, #63, 429478 <wcrtomb@plt+0x24658>
  429458:	cmp	x8, x20
  42945c:	b.eq	429478 <wcrtomb@plt+0x24658>  // b.none
  429460:	mov	w1, #0x5                   	// #5
  429464:	mov	w0, w19
  429468:	bl	429200 <wcrtomb@plt+0x243e0>
  42946c:	mov	x0, x21
  429470:	b	429478 <wcrtomb@plt+0x24658>
  429474:	mov	x0, xzr
  429478:	ldp	x20, x19, [sp, #96]
  42947c:	ldp	x22, x21, [sp, #80]
  429480:	ldp	x29, x30, [sp, #64]
  429484:	add	sp, sp, #0x70
  429488:	ret
  42948c:	sub	sp, sp, #0x80
  429490:	cmp	x1, #0x0
  429494:	add	x9, sp, #0x8
  429498:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  42949c:	str	x19, [sp, #112]
  4294a0:	mov	w5, w2
  4294a4:	mov	w19, w0
  4294a8:	movk	x8, #0xcccd
  4294ac:	cneg	x10, x1, mi  // mi = first
  4294b0:	add	x4, x9, #0x13
  4294b4:	mov	w9, #0xa                   	// #10
  4294b8:	stp	x29, x30, [sp, #96]
  4294bc:	add	x29, sp, #0x60
  4294c0:	strb	wzr, [sp, #28]
  4294c4:	umulh	x11, x10, x8
  4294c8:	lsr	x11, x11, #3
  4294cc:	msub	w12, w11, w9, w10
  4294d0:	orr	w12, w12, #0x30
  4294d4:	cmp	x10, #0x9
  4294d8:	strb	w12, [x4], #-1
  4294dc:	mov	x10, x11
  4294e0:	b.hi	4294c4 <wcrtomb@plt+0x246a4>  // b.pmore
  4294e4:	tbnz	x1, #63, 42952c <wcrtomb@plt+0x2470c>
  4294e8:	add	x4, x4, #0x1
  4294ec:	cmp	w5, #0x3
  4294f0:	b.cs	42953c <wcrtomb@plt+0x2471c>  // b.hs, b.nlast
  4294f4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  4294f8:	add	x3, x3, #0x1d7
  4294fc:	add	x0, sp, #0x20
  429500:	mov	w1, #0x1                   	// #1
  429504:	mov	w2, #0x40                  	// #64
  429508:	bl	4041b0 <__sprintf_chk@plt>
  42950c:	add	x1, sp, #0x20
  429510:	mov	w0, w19
  429514:	bl	429130 <wcrtomb@plt+0x24310>
  429518:	cmn	w0, #0x1
  42951c:	b.eq	429540 <wcrtomb@plt+0x24720>  // b.none
  429520:	mov	w0, w19
  429524:	bl	429554 <wcrtomb@plt+0x24734>
  429528:	b	429544 <wcrtomb@plt+0x24724>
  42952c:	mov	w8, #0x2d                  	// #45
  429530:	strb	w8, [x4]
  429534:	cmp	w5, #0x3
  429538:	b.cc	4294f4 <wcrtomb@plt+0x246d4>  // b.lo, b.ul, b.last
  42953c:	bl	404870 <abort@plt>
  429540:	mov	x0, #0xffffffffffffffff    	// #-1
  429544:	ldr	x19, [sp, #112]
  429548:	ldp	x29, x30, [sp, #96]
  42954c:	add	sp, sp, #0x80
  429550:	ret
  429554:	sub	sp, sp, #0x50
  429558:	mov	x1, sp
  42955c:	stp	x29, x30, [sp, #64]
  429560:	add	x29, sp, #0x40
  429564:	bl	4297dc <wcrtomb@plt+0x249bc>
  429568:	cbnz	x0, 429574 <wcrtomb@plt+0x24754>
  42956c:	b	429604 <wcrtomb@plt+0x247e4>
  429570:	add	x0, x0, #0x1
  429574:	ldrb	w9, [x0]
  429578:	cmp	w9, #0x20
  42957c:	b.eq	429570 <wcrtomb@plt+0x24750>  // b.none
  429580:	cmp	w9, #0x9
  429584:	b.eq	429570 <wcrtomb@plt+0x24750>  // b.none
  429588:	cmp	w9, #0x2d
  42958c:	cset	w10, eq  // eq = none
  429590:	cmp	w9, #0x2b
  429594:	cset	w11, eq  // eq = none
  429598:	mov	x8, xzr
  42959c:	orr	w10, w10, w11
  4295a0:	b	4295b0 <wcrtomb@plt+0x24790>
  4295a4:	mov	w11, #0x5                   	// #5
  4295a8:	add	x10, x10, #0x1
  4295ac:	cbnz	w11, 4295fc <wcrtomb@plt+0x247dc>
  4295b0:	ldrb	w11, [x0, x10]
  4295b4:	sub	x11, x11, #0x30
  4295b8:	cmp	w11, #0x9
  4295bc:	b.hi	4295a4 <wcrtomb@plt+0x24784>  // b.pmore
  4295c0:	add	x12, x8, x8, lsl #2
  4295c4:	cmp	w9, #0x2d
  4295c8:	lsl	x13, x12, #1
  4295cc:	cneg	x11, x11, eq  // eq = none
  4295d0:	add	x12, x11, x13
  4295d4:	b.ne	4295e8 <wcrtomb@plt+0x247c8>  // b.any
  4295d8:	cmp	x13, x12
  4295dc:	b.ge	4295f0 <wcrtomb@plt+0x247d0>  // b.tcont
  4295e0:	mov	w11, #0x1                   	// #1
  4295e4:	b	4295a8 <wcrtomb@plt+0x24788>
  4295e8:	cmp	x12, x13
  4295ec:	b.lt	4295e0 <wcrtomb@plt+0x247c0>  // b.tstop
  4295f0:	mov	w11, wzr
  4295f4:	mov	x8, x12
  4295f8:	b	4295a8 <wcrtomb@plt+0x24788>
  4295fc:	cmp	w11, #0x5
  429600:	b.eq	429608 <wcrtomb@plt+0x247e8>  // b.none
  429604:	mov	x8, #0xffffffffffffffff    	// #-1
  429608:	ldp	x29, x30, [sp, #64]
  42960c:	mov	x0, x8
  429610:	add	sp, sp, #0x50
  429614:	ret
  429618:	sub	sp, sp, #0x90
  42961c:	mov	w8, #0x6d02                	// #27906
  429620:	movk	w8, #0x8030, lsl #16
  429624:	stp	x20, x19, [sp, #128]
  429628:	mov	x19, x2
  42962c:	cmp	w1, w8
  429630:	mov	w20, w0
  429634:	stp	x29, x30, [sp, #96]
  429638:	stp	x22, x21, [sp, #112]
  42963c:	add	x29, sp, #0x60
  429640:	b.eq	4296a8 <wcrtomb@plt+0x24888>  // b.none
  429644:	mov	w8, #0x6d01                	// #27905
  429648:	movk	w8, #0x4008, lsl #16
  42964c:	cmp	w1, w8
  429650:	b.ne	4296e8 <wcrtomb@plt+0x248c8>  // b.any
  429654:	ldrsw	x9, [x19, #4]
  429658:	add	x10, sp, #0x8
  42965c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  429660:	movk	x8, #0xcccd
  429664:	cmp	x9, #0x0
  429668:	add	x5, x10, #0x13
  42966c:	cneg	x10, x9, mi  // mi = first
  429670:	mov	w9, #0xa                   	// #10
  429674:	strb	wzr, [sp, #28]
  429678:	umulh	x11, x10, x8
  42967c:	lsr	x11, x11, #3
  429680:	msub	w12, w11, w9, w10
  429684:	orr	w12, w12, #0x30
  429688:	cmp	x10, #0x9
  42968c:	strb	w12, [x5], #-1
  429690:	mov	x10, x11
  429694:	b.hi	429678 <wcrtomb@plt+0x24858>  // b.pmore
  429698:	ldr	w8, [x19, #4]
  42969c:	tbnz	w8, #31, 4296f8 <wcrtomb@plt+0x248d8>
  4296a0:	add	x5, x5, #0x1
  4296a4:	b	429700 <wcrtomb@plt+0x248e0>
  4296a8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4296ac:	add	x1, x1, #0xb98
  4296b0:	mov	w0, w20
  4296b4:	bl	429130 <wcrtomb@plt+0x24310>
  4296b8:	cmn	w0, #0x1
  4296bc:	b.eq	4297c4 <wcrtomb@plt+0x249a4>  // b.none
  4296c0:	mov	w0, w20
  4296c4:	bl	4291c4 <wcrtomb@plt+0x243a4>
  4296c8:	cmn	x0, #0x1
  4296cc:	b.eq	4297c8 <wcrtomb@plt+0x249a8>  // b.none
  4296d0:	mov	x21, x0
  4296d4:	cmp	x0, #0x8
  4296d8:	b.ls	42973c <wcrtomb@plt+0x2491c>  // b.plast
  4296dc:	bl	404d00 <__errno_location@plt>
  4296e0:	mov	w8, #0x4b                  	// #75
  4296e4:	b	4296f0 <wcrtomb@plt+0x248d0>
  4296e8:	bl	404d00 <__errno_location@plt>
  4296ec:	mov	w8, #0x5f                  	// #95
  4296f0:	str	w8, [x0]
  4296f4:	b	4297c4 <wcrtomb@plt+0x249a4>
  4296f8:	mov	w8, #0x2d                  	// #45
  4296fc:	strb	w8, [x5]
  429700:	ldrsh	w4, [x19]
  429704:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  429708:	add	x3, x3, #0x1df
  42970c:	add	x0, sp, #0x20
  429710:	mov	w1, #0x1                   	// #1
  429714:	mov	w2, #0x40                  	// #64
  429718:	bl	4041b0 <__sprintf_chk@plt>
  42971c:	add	x1, sp, #0x20
  429720:	mov	w0, w20
  429724:	bl	429130 <wcrtomb@plt+0x24310>
  429728:	cmn	w0, #0x1
  42972c:	b.eq	4297c4 <wcrtomb@plt+0x249a4>  // b.none
  429730:	mov	w0, w20
  429734:	bl	4291c4 <wcrtomb@plt+0x243a4>
  429738:	b	4297c8 <wcrtomb@plt+0x249a8>
  42973c:	cbz	x21, 429778 <wcrtomb@plt+0x24958>
  429740:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  429744:	add	x8, x8, #0x240
  429748:	add	x22, x8, w20, sxtw #3
  42974c:	ldr	w0, [x22]
  429750:	mov	x1, x19
  429754:	mov	x2, x21
  429758:	bl	43c740 <argp_usage@@Base+0xab44>
  42975c:	add	x8, x0, #0x1
  429760:	cmp	x8, #0x1
  429764:	b.ls	4297b8 <wcrtomb@plt+0x24998>  // b.plast
  429768:	sub	x21, x21, x0
  42976c:	cmp	x21, #0x0
  429770:	add	x19, x19, x0
  429774:	b.gt	42974c <wcrtomb@plt+0x2492c>
  429778:	ldr	x8, [x19]
  42977c:	mov	w0, wzr
  429780:	cmp	x8, #0x100
  429784:	b.lt	4297c8 <wcrtomb@plt+0x249a8>  // b.tstop
  429788:	cbz	x21, 4297c8 <wcrtomb@plt+0x249a8>
  42978c:	mov	x8, xzr
  429790:	add	x9, x19, x8
  429794:	ldrb	w10, [x9, #1]
  429798:	ldrb	w11, [x9]
  42979c:	add	x8, x8, #0x2
  4297a0:	mov	w0, wzr
  4297a4:	cmp	x8, x21
  4297a8:	strb	w10, [x9]
  4297ac:	strb	w11, [x9, #1]
  4297b0:	b.cc	429790 <wcrtomb@plt+0x24970>  // b.lo, b.ul, b.last
  4297b4:	b	4297c8 <wcrtomb@plt+0x249a8>
  4297b8:	mov	w1, #0x5                   	// #5
  4297bc:	mov	w0, w20
  4297c0:	bl	429200 <wcrtomb@plt+0x243e0>
  4297c4:	mov	w0, #0xffffffff            	// #-1
  4297c8:	ldp	x20, x19, [sp, #128]
  4297cc:	ldp	x22, x21, [sp, #112]
  4297d0:	ldp	x29, x30, [sp, #96]
  4297d4:	add	sp, sp, #0x90
  4297d8:	ret
  4297dc:	stp	x29, x30, [sp, #-80]!
  4297e0:	stp	x24, x23, [sp, #32]
  4297e4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4297e8:	stp	x20, x19, [sp, #64]
  4297ec:	mov	w19, w0
  4297f0:	add	x23, x23, #0x240
  4297f4:	str	x25, [sp, #16]
  4297f8:	stp	x22, x21, [sp, #48]
  4297fc:	mov	x20, x1
  429800:	mov	x24, xzr
  429804:	sxtw	x22, w19
  429808:	add	x25, x23, w0, sxtw #3
  42980c:	mov	x29, sp
  429810:	ldr	w0, [x25]
  429814:	add	x21, x20, x24
  429818:	mov	w2, #0x1                   	// #1
  42981c:	mov	x1, x21
  429820:	bl	43c740 <argp_usage@@Base+0xab44>
  429824:	cmp	x0, #0x1
  429828:	b.ne	4298d8 <wcrtomb@plt+0x24ab8>  // b.any
  42982c:	ldrb	w8, [x21]
  429830:	cmp	w8, #0xa
  429834:	b.eq	429854 <wcrtomb@plt+0x24a34>  // b.none
  429838:	add	x24, x24, #0x1
  42983c:	cmp	w24, #0x40
  429840:	b.ne	429810 <wcrtomb@plt+0x249f0>  // b.any
  429844:	mov	w24, #0x40                  	// #64
  429848:	cmp	w24, #0x40
  42984c:	b.ne	429860 <wcrtomb@plt+0x24a40>  // b.any
  429850:	b	4298d8 <wcrtomb@plt+0x24ab8>
  429854:	strb	wzr, [x20, x24]
  429858:	cmp	w24, #0x40
  42985c:	b.eq	4298d8 <wcrtomb@plt+0x24ab8>  // b.none
  429860:	add	x20, x20, #0x1
  429864:	ldurb	w8, [x20, #-1]
  429868:	cmp	w8, #0x20
  42986c:	b.eq	429860 <wcrtomb@plt+0x24a40>  // b.none
  429870:	sub	w9, w8, #0x45
  429874:	cmp	w9, #0x2
  429878:	b.cs	4298d0 <wcrtomb@plt+0x24ab0>  // b.hs, b.nlast
  42987c:	add	x21, x23, x22, lsl #3
  429880:	ldr	w0, [x21]
  429884:	add	x1, x29, #0x1c
  429888:	mov	w2, #0x1                   	// #1
  42988c:	bl	43c740 <argp_usage@@Base+0xab44>
  429890:	cmp	x0, #0x1
  429894:	b.ne	4298a4 <wcrtomb@plt+0x24a84>  // b.any
  429898:	ldrb	w8, [x29, #28]
  42989c:	cmp	w8, #0xa
  4298a0:	b.ne	429880 <wcrtomb@plt+0x24a60>  // b.any
  4298a4:	mov	x0, x20
  4298a8:	bl	404490 <atoi@plt>
  4298ac:	mov	w21, w0
  4298b0:	bl	404d00 <__errno_location@plt>
  4298b4:	str	w21, [x0]
  4298b8:	ldurb	w8, [x20, #-1]
  4298bc:	cmp	w8, #0x46
  4298c0:	b.ne	4298e4 <wcrtomb@plt+0x24ac4>  // b.any
  4298c4:	mov	w0, w19
  4298c8:	mov	w1, w21
  4298cc:	b	4298e0 <wcrtomb@plt+0x24ac0>
  4298d0:	cmp	w8, #0x41
  4298d4:	b.eq	4298e8 <wcrtomb@plt+0x24ac8>  // b.none
  4298d8:	mov	w1, #0x5                   	// #5
  4298dc:	mov	w0, w19
  4298e0:	bl	429200 <wcrtomb@plt+0x243e0>
  4298e4:	mov	x20, xzr
  4298e8:	mov	x0, x20
  4298ec:	ldp	x20, x19, [sp, #64]
  4298f0:	ldp	x22, x21, [sp, #48]
  4298f4:	ldp	x24, x23, [sp, #32]
  4298f8:	ldr	x25, [sp, #16]
  4298fc:	ldp	x29, x30, [sp], #80
  429900:	ret
  429904:	stp	x29, x30, [sp, #-64]!
  429908:	stp	x24, x23, [sp, #16]
  42990c:	stp	x22, x21, [sp, #32]
  429910:	stp	x20, x19, [sp, #48]
  429914:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x18da0>
  429918:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x18da0>
  42991c:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x18da0>
  429920:	mov	x19, xzr
  429924:	mov	w24, #0x1                   	// #1
  429928:	add	x23, x23, #0x258
  42992c:	add	x20, x20, #0x26e
  429930:	add	x21, x21, #0x264
  429934:	mov	x29, sp
  429938:	b	42994c <wcrtomb@plt+0x24b2c>
  42993c:	mov	w24, wzr
  429940:	add	x19, x19, #0x1
  429944:	cmp	x19, #0x3
  429948:	b.eq	4299b4 <wcrtomb@plt+0x24b94>  // b.none
  42994c:	mov	w1, #0x1                   	// #1
  429950:	mov	w0, w19
  429954:	bl	43db94 <argp_usage@@Base+0xbf98>
  429958:	tbz	w0, #31, 429940 <wcrtomb@plt+0x24b20>
  42995c:	bl	404d00 <__errno_location@plt>
  429960:	ldr	w8, [x0]
  429964:	cmp	w8, #0x9
  429968:	b.ne	42993c <wcrtomb@plt+0x24b1c>  // b.any
  42996c:	ldr	w22, [x23, x19, lsl #2]
  429970:	sub	x8, x19, #0x1
  429974:	cmp	x8, #0x2
  429978:	b.cc	429994 <wcrtomb@plt+0x24b74>  // b.lo, b.ul, b.last
  42997c:	mov	x0, x21
  429980:	mov	w1, w22
  429984:	bl	404530 <open@plt>
  429988:	cmp	x19, w0, uxtw
  42998c:	cset	w0, ne  // ne = any
  429990:	b.eq	4299a0 <wcrtomb@plt+0x24b80>  // b.none
  429994:	mov	x0, x20
  429998:	mov	w1, w22
  42999c:	bl	404530 <open@plt>
  4299a0:	cmp	x19, w0, uxtw
  4299a4:	b.eq	429940 <wcrtomb@plt+0x24b20>  // b.none
  4299a8:	tbnz	w0, #31, 42993c <wcrtomb@plt+0x24b1c>
  4299ac:	bl	4047c0 <close@plt>
  4299b0:	b	42993c <wcrtomb@plt+0x24b1c>
  4299b4:	and	w0, w24, #0x1
  4299b8:	ldp	x20, x19, [sp, #48]
  4299bc:	ldp	x22, x21, [sp, #32]
  4299c0:	ldp	x24, x23, [sp, #16]
  4299c4:	ldp	x29, x30, [sp], #64
  4299c8:	ret
  4299cc:	stp	x29, x30, [sp, #-64]!
  4299d0:	stp	x22, x21, [sp, #32]
  4299d4:	stp	x20, x19, [sp, #48]
  4299d8:	ldr	x8, [x0]
  4299dc:	mov	w22, w1
  4299e0:	str	x23, [sp, #16]
  4299e4:	sxtw	x23, w22
  4299e8:	add	x8, x23, x8
  4299ec:	add	x1, x8, #0x1
  4299f0:	mov	x29, sp
  4299f4:	mov	x20, x2
  4299f8:	mov	x19, x0
  4299fc:	bl	429adc <wcrtomb@plt+0x24cbc>
  429a00:	mov	w21, w0
  429a04:	cbnz	w0, 429ac4 <wcrtomb@plt+0x24ca4>
  429a08:	cbz	w22, 429aa4 <wcrtomb@plt+0x24c84>
  429a0c:	mov	x22, xzr
  429a10:	ldr	x0, [x20, x22, lsl #3]
  429a14:	bl	404780 <strdup@plt>
  429a18:	cbz	x0, 429a3c <wcrtomb@plt+0x24c1c>
  429a1c:	ldp	x10, x8, [x19, #8]
  429a20:	ldr	x9, [x19]
  429a24:	add	x8, x8, x22
  429a28:	add	x8, x8, x9
  429a2c:	str	x0, [x10, x8, lsl #3]
  429a30:	mov	w8, #0x1                   	// #1
  429a34:	tbnz	w8, #0, 429a94 <wcrtomb@plt+0x24c74>
  429a38:	b	429ac4 <wcrtomb@plt+0x24ca4>
  429a3c:	cbz	x22, 429a80 <wcrtomb@plt+0x24c60>
  429a40:	sub	x21, x22, #0x1
  429a44:	ldp	x10, x8, [x19, #8]
  429a48:	ldr	x9, [x19]
  429a4c:	add	x8, x8, x9
  429a50:	add	x8, x21, x8
  429a54:	ldr	x0, [x10, x8, lsl #3]
  429a58:	bl	4049d0 <free@plt>
  429a5c:	ldp	x10, x8, [x19, #8]
  429a60:	ldr	x9, [x19]
  429a64:	add	x8, x8, x9
  429a68:	add	x8, x21, x8
  429a6c:	sub	x21, x21, #0x1
  429a70:	cmn	x21, #0x1
  429a74:	str	xzr, [x10, x8, lsl #3]
  429a78:	b.ne	429a44 <wcrtomb@plt+0x24c24>  // b.any
  429a7c:	mov	x22, xzr
  429a80:	mov	x0, x19
  429a84:	bl	429b94 <wcrtomb@plt+0x24d74>
  429a88:	mov	w21, w0
  429a8c:	mov	w8, wzr
  429a90:	tbz	w8, #0, 429ac4 <wcrtomb@plt+0x24ca4>
  429a94:	add	x22, x22, #0x1
  429a98:	cmp	x22, x23
  429a9c:	b.cc	429a10 <wcrtomb@plt+0x24bf0>  // b.lo, b.ul, b.last
  429aa0:	b	429aa8 <wcrtomb@plt+0x24c88>
  429aa4:	mov	x22, xzr
  429aa8:	ldp	x8, x10, [x19]
  429aac:	ldr	x9, [x19, #16]
  429ab0:	mov	w21, wzr
  429ab4:	add	x8, x8, x22
  429ab8:	str	x8, [x19]
  429abc:	add	x8, x9, x8
  429ac0:	str	xzr, [x10, x8, lsl #3]
  429ac4:	mov	w0, w21
  429ac8:	ldp	x20, x19, [sp, #48]
  429acc:	ldp	x22, x21, [sp, #32]
  429ad0:	ldr	x23, [sp, #16]
  429ad4:	ldp	x29, x30, [sp], #64
  429ad8:	ret
  429adc:	stp	x29, x30, [sp, #-32]!
  429ae0:	stp	x20, x19, [sp, #16]
  429ae4:	ldrb	w8, [x0, #32]
  429ae8:	mov	x19, x0
  429aec:	mov	x29, sp
  429af0:	tbnz	w8, #1, 429b44 <wcrtomb@plt+0x24d24>
  429af4:	mov	x8, xzr
  429af8:	ldr	x0, [x19, #8]
  429afc:	cbz	x0, 429b50 <wcrtomb@plt+0x24d30>
  429b00:	ldr	x9, [x19]
  429b04:	ldr	x10, [x19, #24]
  429b08:	add	x8, x9, x8
  429b0c:	add	x9, x8, x1
  429b10:	cmp	x10, x9
  429b14:	b.cs	429b80 <wcrtomb@plt+0x24d60>  // b.hs, b.nlast
  429b18:	cmp	x1, #0x80
  429b1c:	mov	w9, #0x80                  	// #128
  429b20:	csel	x9, x1, x9, hi  // hi = pmore
  429b24:	add	x20, x8, x9
  429b28:	lsl	x1, x20, #3
  429b2c:	bl	404730 <realloc@plt>
  429b30:	cbz	x0, 429b70 <wcrtomb@plt+0x24d50>
  429b34:	mov	w1, wzr
  429b38:	str	x20, [x19, #24]
  429b3c:	str	x0, [x19, #8]
  429b40:	b	429b84 <wcrtomb@plt+0x24d64>
  429b44:	ldr	x8, [x19, #16]
  429b48:	ldr	x0, [x19, #8]
  429b4c:	cbnz	x0, 429b00 <wcrtomb@plt+0x24ce0>
  429b50:	add	x8, x8, x1
  429b54:	cmp	x8, #0x80
  429b58:	mov	w8, #0x80                  	// #128
  429b5c:	csel	x20, x1, x8, hi  // hi = pmore
  429b60:	mov	w1, #0x8                   	// #8
  429b64:	mov	x0, x20
  429b68:	bl	4046a0 <calloc@plt>
  429b6c:	cbnz	x0, 429b34 <wcrtomb@plt+0x24d14>
  429b70:	mov	x0, x19
  429b74:	bl	429b94 <wcrtomb@plt+0x24d74>
  429b78:	mov	w1, w0
  429b7c:	b	429b84 <wcrtomb@plt+0x24d64>
  429b80:	mov	w1, wzr
  429b84:	ldp	x20, x19, [sp, #16]
  429b88:	mov	w0, w1
  429b8c:	ldp	x29, x30, [sp], #32
  429b90:	ret
  429b94:	stp	x29, x30, [sp, #-32]!
  429b98:	str	x19, [sp, #16]
  429b9c:	mov	x29, sp
  429ba0:	mov	x19, x0
  429ba4:	bl	404d00 <__errno_location@plt>
  429ba8:	mov	w8, #0xc                   	// #12
  429bac:	str	w8, [x0]
  429bb0:	ldrb	w8, [x19, #32]
  429bb4:	mov	w9, #0x2                   	// #2
  429bb8:	str	w9, [x19, #192]
  429bbc:	tbnz	w8, #7, 429bf0 <wcrtomb@plt+0x24dd0>
  429bc0:	ldrb	w8, [x19, #32]
  429bc4:	tbnz	w8, #4, 429c04 <wcrtomb@plt+0x24de4>
  429bc8:	ldrb	w8, [x19, #32]
  429bcc:	tbnz	w8, #3, 429bd8 <wcrtomb@plt+0x24db8>
  429bd0:	mov	x0, x19
  429bd4:	bl	42a140 <wcrtomb@plt+0x25320>
  429bd8:	mov	x0, x19
  429bdc:	bl	42a17c <wcrtomb@plt+0x2535c>
  429be0:	ldr	w0, [x19, #192]
  429be4:	ldr	x19, [sp, #16]
  429be8:	ldp	x29, x30, [sp], #32
  429bec:	ret
  429bf0:	ldr	x8, [x19, #88]
  429bf4:	mov	x0, x19
  429bf8:	blr	x8
  429bfc:	ldrb	w8, [x19, #32]
  429c00:	tbz	w8, #4, 429bc8 <wcrtomb@plt+0x24da8>
  429c04:	mov	x0, x19
  429c08:	bl	42a260 <wcrtomb@plt+0x25440>
  429c0c:	ldrb	w8, [x19, #32]
  429c10:	tbz	w8, #3, 429bd0 <wcrtomb@plt+0x24db0>
  429c14:	b	429bd8 <wcrtomb@plt+0x24db8>
  429c18:	stp	x29, x30, [sp, #-96]!
  429c1c:	stp	x26, x25, [sp, #32]
  429c20:	stp	x24, x23, [sp, #48]
  429c24:	stp	x22, x21, [sp, #64]
  429c28:	stp	x20, x19, [sp, #80]
  429c2c:	str	wzr, [x2]
  429c30:	ldrb	w8, [x0]
  429c34:	str	x27, [sp, #16]
  429c38:	mov	x29, sp
  429c3c:	cbz	w8, 429d14 <wcrtomb@plt+0x24ef4>
  429c40:	mov	x24, #0x1                   	// #1
  429c44:	mov	x19, x2
  429c48:	mov	w21, w1
  429c4c:	mov	x20, xzr
  429c50:	add	x22, x0, #0x1
  429c54:	mov	w23, #0x1                   	// #1
  429c58:	movk	x24, #0x5, lsl #32
  429c5c:	mov	w25, #0x3                   	// #3
  429c60:	mov	w26, #0x2                   	// #2
  429c64:	mov	w27, #0x4                   	// #4
  429c68:	b	429c84 <wcrtomb@plt+0x24e64>
  429c6c:	bl	429d38 <wcrtomb@plt+0x24f18>
  429c70:	cmp	w0, #0x0
  429c74:	csel	x9, x27, x26, eq  // eq = none
  429c78:	ldrb	w8, [x22], #1
  429c7c:	add	x20, x20, x9
  429c80:	cbz	w8, 429d18 <wcrtomb@plt+0x24ef8>
  429c84:	and	w9, w8, #0xff
  429c88:	cmp	w9, #0x3f
  429c8c:	b.hi	429ca0 <wcrtomb@plt+0x24e80>  // b.pmore
  429c90:	lsl	x8, x23, x8
  429c94:	and	x8, x8, x24
  429c98:	cbz	x8, 429ca0 <wcrtomb@plt+0x24e80>
  429c9c:	str	w23, [x19]
  429ca0:	ldurb	w0, [x22, #-1]
  429ca4:	cmp	w0, #0x21
  429ca8:	b.gt	429cc4 <wcrtomb@plt+0x24ea4>
  429cac:	cmp	w0, #0x9
  429cb0:	b.eq	429cdc <wcrtomb@plt+0x24ebc>  // b.none
  429cb4:	cmp	w0, #0x20
  429cb8:	b.ne	429ce8 <wcrtomb@plt+0x24ec8>  // b.any
  429cbc:	mov	w9, #0x1                   	// #1
  429cc0:	b	429c78 <wcrtomb@plt+0x24e58>
  429cc4:	cmp	w0, #0x5c
  429cc8:	b.eq	429cdc <wcrtomb@plt+0x24ebc>  // b.none
  429ccc:	cmp	w0, #0x22
  429cd0:	b.ne	429ce8 <wcrtomb@plt+0x24ec8>  // b.any
  429cd4:	mov	w9, #0x2                   	// #2
  429cd8:	b	429c78 <wcrtomb@plt+0x24e58>
  429cdc:	cbz	w21, 429c6c <wcrtomb@plt+0x24e4c>
  429ce0:	mov	w9, #0x3                   	// #3
  429ce4:	b	429c78 <wcrtomb@plt+0x24e58>
  429ce8:	sxtb	w8, w0
  429cec:	cmp	w0, #0x1f
  429cf0:	cset	w9, hi  // hi = pmore
  429cf4:	cmp	w8, #0x0
  429cf8:	cset	w8, ge  // ge = tcont
  429cfc:	tst	w9, w8
  429d00:	and	w10, w9, w8
  429d04:	csinc	x9, x25, xzr, eq  // eq = none
  429d08:	tbnz	w10, #0, 429c78 <wcrtomb@plt+0x24e58>
  429d0c:	cbz	w21, 429c6c <wcrtomb@plt+0x24e4c>
  429d10:	b	429c78 <wcrtomb@plt+0x24e58>
  429d14:	mov	x20, xzr
  429d18:	mov	x0, x20
  429d1c:	ldp	x20, x19, [sp, #80]
  429d20:	ldp	x22, x21, [sp, #64]
  429d24:	ldp	x24, x23, [sp, #48]
  429d28:	ldp	x26, x25, [sp, #32]
  429d2c:	ldr	x27, [sp, #16]
  429d30:	ldp	x29, x30, [sp], #96
  429d34:	ret
  429d38:	stp	x29, x30, [sp, #-16]!
  429d3c:	mov	x29, sp
  429d40:	bl	429d98 <wcrtomb@plt+0x24f78>
  429d44:	ldp	x29, x30, [sp], #16
  429d48:	ret
  429d4c:	stp	x29, x30, [sp, #-16]!
  429d50:	mov	w1, w0
  429d54:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x30da0>
  429d58:	add	x0, x0, #0x280
  429d5c:	mov	x29, sp
  429d60:	bl	429d6c <wcrtomb@plt+0x24f4c>
  429d64:	ldp	x29, x30, [sp], #16
  429d68:	ret
  429d6c:	ldrb	w9, [x0]
  429d70:	cbz	w9, 429d90 <wcrtomb@plt+0x24f70>
  429d74:	add	x8, x0, #0x2
  429d78:	ldurb	w0, [x8, #-1]
  429d7c:	cbz	w0, 429d94 <wcrtomb@plt+0x24f74>
  429d80:	cmp	w1, w9, uxtb
  429d84:	b.eq	429d94 <wcrtomb@plt+0x24f74>  // b.none
  429d88:	ldrb	w9, [x8], #2
  429d8c:	cbnz	w9, 429d78 <wcrtomb@plt+0x24f58>
  429d90:	mov	w0, wzr
  429d94:	ret
  429d98:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  429d9c:	ldrb	w8, [x8, #640]
  429da0:	cbz	w8, 429dc4 <wcrtomb@plt+0x24fa4>
  429da4:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  429da8:	add	x9, x9, #0x282
  429dac:	ldurb	w10, [x9, #-1]
  429db0:	cbz	w10, 429dc4 <wcrtomb@plt+0x24fa4>
  429db4:	cmp	w10, w0
  429db8:	b.eq	429dcc <wcrtomb@plt+0x24fac>  // b.none
  429dbc:	ldrb	w8, [x9], #2
  429dc0:	cbnz	w8, 429dac <wcrtomb@plt+0x24f8c>
  429dc4:	mov	w0, wzr
  429dc8:	ret
  429dcc:	and	w0, w8, #0xff
  429dd0:	ret
  429dd4:	stp	x29, x30, [sp, #-80]!
  429dd8:	stp	x24, x23, [sp, #32]
  429ddc:	stp	x22, x21, [sp, #48]
  429de0:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x18da0>
  429de4:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x18da0>
  429de8:	stp	x20, x19, [sp, #64]
  429dec:	mov	w19, w2
  429df0:	mov	x20, x1
  429df4:	mov	x21, x0
  429df8:	mov	w24, #0x5c                  	// #92
  429dfc:	add	x22, x22, #0x289
  429e00:	add	x23, x23, #0x282
  429e04:	str	x25, [sp, #16]
  429e08:	mov	x29, sp
  429e0c:	b	429e50 <wcrtomb@plt+0x25030>
  429e10:	cmp	w8, #0x9
  429e14:	b.ne	429eac <wcrtomb@plt+0x2508c>  // b.any
  429e18:	ldrb	w5, [x20]
  429e1c:	cbz	w19, 429e84 <wcrtomb@plt+0x25064>
  429e20:	add	x0, x29, #0x1c
  429e24:	mov	w1, #0x4                   	// #4
  429e28:	mov	w2, #0x1                   	// #1
  429e2c:	mov	w3, #0x4                   	// #4
  429e30:	mov	x4, x23
  429e34:	bl	404460 <__snprintf_chk@plt>
  429e38:	ldrh	w8, [x29, #28]
  429e3c:	ldrb	w9, [x29, #30]
  429e40:	add	x20, x20, #0x1
  429e44:	strh	w8, [x21]
  429e48:	strb	w9, [x21, #2]
  429e4c:	add	x21, x21, #0x3
  429e50:	ldrb	w8, [x20]
  429e54:	cmp	w8, #0x21
  429e58:	b.le	429e10 <wcrtomb@plt+0x24ff0>
  429e5c:	cmp	w8, #0x5c
  429e60:	b.eq	429e18 <wcrtomb@plt+0x24ff8>  // b.none
  429e64:	cmp	w8, #0x22
  429e68:	b.ne	429eb0 <wcrtomb@plt+0x25090>  // b.any
  429e6c:	strb	w24, [x21]
  429e70:	ldrb	w8, [x20], #1
  429e74:	add	x9, x21, #0x2
  429e78:	strb	w8, [x21, #1]
  429e7c:	mov	x21, x9
  429e80:	b	429e50 <wcrtomb@plt+0x25030>
  429e84:	mov	w0, w5
  429e88:	bl	429d38 <wcrtomb@plt+0x24f18>
  429e8c:	mov	x25, x21
  429e90:	strb	w24, [x25], #1
  429e94:	cbz	w0, 429ecc <wcrtomb@plt+0x250ac>
  429e98:	add	x8, x21, #0x2
  429e9c:	strb	w0, [x21, #1]
  429ea0:	mov	x21, x8
  429ea4:	add	x20, x20, #0x1
  429ea8:	b	429e50 <wcrtomb@plt+0x25030>
  429eac:	cbz	w8, 429f00 <wcrtomb@plt+0x250e0>
  429eb0:	cmp	w8, #0x20
  429eb4:	b.cc	429e18 <wcrtomb@plt+0x24ff8>  // b.lo, b.ul, b.last
  429eb8:	sxtb	w9, w8
  429ebc:	tbnz	w9, #31, 429e18 <wcrtomb@plt+0x24ff8>
  429ec0:	strb	w8, [x21], #1
  429ec4:	add	x20, x20, #0x1
  429ec8:	b	429e50 <wcrtomb@plt+0x25030>
  429ecc:	ldrb	w5, [x20], #1
  429ed0:	add	x0, x29, #0x1c
  429ed4:	mov	w1, #0x4                   	// #4
  429ed8:	mov	w2, #0x1                   	// #1
  429edc:	mov	w3, #0x4                   	// #4
  429ee0:	mov	x4, x22
  429ee4:	bl	404460 <__snprintf_chk@plt>
  429ee8:	ldrh	w8, [x29, #28]
  429eec:	ldrb	w9, [x29, #30]
  429ef0:	add	x21, x21, #0x4
  429ef4:	strh	w8, [x25]
  429ef8:	strb	w9, [x25, #2]
  429efc:	b	429e50 <wcrtomb@plt+0x25030>
  429f00:	ldp	x20, x19, [sp, #64]
  429f04:	ldp	x22, x21, [sp, #48]
  429f08:	ldp	x24, x23, [sp, #32]
  429f0c:	ldr	x25, [sp, #16]
  429f10:	ldp	x29, x30, [sp], #80
  429f14:	ret
  429f18:	stp	x29, x30, [sp, #-16]!
  429f1c:	mov	x29, sp
  429f20:	bl	429f2c <wcrtomb@plt+0x2510c>
  429f24:	ldp	x29, x30, [sp], #16
  429f28:	ret
  429f2c:	stp	x29, x30, [sp, #-32]!
  429f30:	stp	x20, x19, [sp, #16]
  429f34:	mov	x19, x2
  429f38:	mov	x29, sp
  429f3c:	cbz	x0, 429f78 <wcrtomb@plt+0x25158>
  429f40:	mov	x2, x1
  429f44:	mov	x1, x0
  429f48:	mov	x0, x19
  429f4c:	bl	42a5ec <wcrtomb@plt+0x257cc>
  429f50:	mov	w20, w0
  429f54:	cbnz	w0, 429fa4 <wcrtomb@plt+0x25184>
  429f58:	mov	x20, xzr
  429f5c:	str	wzr, [x19, #224]
  429f60:	mov	x0, x19
  429f64:	mov	x1, x20
  429f68:	bl	42a798 <wcrtomb@plt+0x25978>
  429f6c:	mov	w20, w0
  429f70:	cbnz	w0, 429fa4 <wcrtomb@plt+0x25184>
  429f74:	b	429f98 <wcrtomb@plt+0x25178>
  429f78:	tbnz	w3, #29, 429f90 <wcrtomb@plt+0x25170>
  429f7c:	mov	w1, #0x3                   	// #3
  429f80:	mov	w20, #0x3                   	// #3
  429f84:	mov	x0, x19
  429f88:	bl	42a2cc <wcrtomb@plt+0x254ac>
  429f8c:	b	429fa4 <wcrtomb@plt+0x25184>
  429f90:	ldr	x8, [x19, #208]
  429f94:	cbz	x8, 429fb4 <wcrtomb@plt+0x25194>
  429f98:	mov	x0, x19
  429f9c:	bl	42a2fc <wcrtomb@plt+0x254dc>
  429fa0:	mov	w20, w0
  429fa4:	mov	w0, w20
  429fa8:	ldp	x20, x19, [sp, #16]
  429fac:	ldp	x29, x30, [sp], #32
  429fb0:	ret
  429fb4:	ldp	x9, x8, [x19, #176]
  429fb8:	cmp	x8, x9
  429fbc:	b.ne	429fcc <wcrtomb@plt+0x251ac>  // b.any
  429fc0:	mov	w1, #0x6                   	// #6
  429fc4:	mov	w20, #0x6                   	// #6
  429fc8:	b	429f84 <wcrtomb@plt+0x25164>
  429fcc:	mov	x0, x19
  429fd0:	bl	42a588 <wcrtomb@plt+0x25768>
  429fd4:	ldr	w8, [x19, #32]
  429fd8:	mov	x20, x0
  429fdc:	mov	x0, x19
  429fe0:	orr	w8, w8, #0x8
  429fe4:	str	w8, [x19, #32]
  429fe8:	bl	42a5a4 <wcrtomb@plt+0x25784>
  429fec:	b	429f60 <wcrtomb@plt+0x25140>
  429ff0:	stp	x29, x30, [sp, #-48]!
  429ff4:	str	x21, [sp, #16]
  429ff8:	stp	x20, x19, [sp, #32]
  429ffc:	mov	w19, w2
  42a000:	mov	x20, x1
  42a004:	mov	x21, x0
  42a008:	mov	x29, sp
  42a00c:	cbz	x0, 42a020 <wcrtomb@plt+0x25200>
  42a010:	mov	x0, x21
  42a014:	bl	404190 <strlen@plt>
  42a018:	mov	x1, x0
  42a01c:	b	42a024 <wcrtomb@plt+0x25204>
  42a020:	mov	x1, xzr
  42a024:	mov	x0, x21
  42a028:	mov	x2, x20
  42a02c:	mov	w3, w19
  42a030:	bl	429f18 <wcrtomb@plt+0x250f8>
  42a034:	ldp	x20, x19, [sp, #32]
  42a038:	ldr	x21, [sp, #16]
  42a03c:	ldp	x29, x30, [sp], #48
  42a040:	ret
  42a044:	stp	x29, x30, [sp, #-32]!
  42a048:	stp	x20, x19, [sp, #16]
  42a04c:	ldr	x8, [x0]
  42a050:	mov	x19, x0
  42a054:	mov	x29, sp
  42a058:	cbz	x8, 42a098 <wcrtomb@plt+0x25278>
  42a05c:	mov	x20, xzr
  42a060:	b	42a074 <wcrtomb@plt+0x25254>
  42a064:	ldr	x8, [x19]
  42a068:	add	x20, x20, #0x1
  42a06c:	cmp	x20, x8
  42a070:	b.cs	42a098 <wcrtomb@plt+0x25278>  // b.hs, b.nlast
  42a074:	ldp	x9, x8, [x19, #8]
  42a078:	add	x8, x20, x8
  42a07c:	ldr	x0, [x9, x8, lsl #3]
  42a080:	cbz	x0, 42a064 <wcrtomb@plt+0x25244>
  42a084:	bl	4049d0 <free@plt>
  42a088:	ldp	x9, x8, [x19, #8]
  42a08c:	add	x8, x20, x8
  42a090:	str	xzr, [x9, x8, lsl #3]
  42a094:	b	42a064 <wcrtomb@plt+0x25244>
  42a098:	str	xzr, [x19]
  42a09c:	ldp	x20, x19, [sp, #16]
  42a0a0:	ldp	x29, x30, [sp], #32
  42a0a4:	ret
  42a0a8:	stp	x29, x30, [sp, #-32]!
  42a0ac:	stp	x20, x19, [sp, #16]
  42a0b0:	ldrb	w8, [x0, #32]
  42a0b4:	mov	x29, sp
  42a0b8:	tbnz	w8, #2, 42a0fc <wcrtomb@plt+0x252dc>
  42a0bc:	mov	x19, x0
  42a0c0:	ldr	x8, [x19, #120]!
  42a0c4:	cbz	x8, 42a0fc <wcrtomb@plt+0x252dc>
  42a0c8:	ldr	x0, [x19]
  42a0cc:	ldr	x8, [x0]
  42a0d0:	cbz	x8, 42a0f0 <wcrtomb@plt+0x252d0>
  42a0d4:	mov	w20, #0x8                   	// #8
  42a0d8:	mov	x0, x8
  42a0dc:	bl	4049d0 <free@plt>
  42a0e0:	ldr	x0, [x19]
  42a0e4:	ldr	x8, [x0, x20]
  42a0e8:	add	x20, x20, #0x8
  42a0ec:	cbnz	x8, 42a0d8 <wcrtomb@plt+0x252b8>
  42a0f0:	bl	4049d0 <free@plt>
  42a0f4:	stp	xzr, xzr, [x19]
  42a0f8:	str	xzr, [x19, #16]
  42a0fc:	ldp	x20, x19, [sp, #16]
  42a100:	ldp	x29, x30, [sp], #32
  42a104:	ret
  42a108:	stp	x29, x30, [sp, #-32]!
  42a10c:	ldr	w8, [x0, #192]
  42a110:	str	x19, [sp, #16]
  42a114:	mov	x19, x0
  42a118:	mov	x29, sp
  42a11c:	cmp	w8, #0x9
  42a120:	b.ne	42a12c <wcrtomb@plt+0x2530c>  // b.any
  42a124:	ldr	x0, [x19, #200]
  42a128:	bl	4049d0 <free@plt>
  42a12c:	str	xzr, [x19, #200]
  42a130:	str	wzr, [x19, #192]
  42a134:	ldr	x19, [sp, #16]
  42a138:	ldp	x29, x30, [sp], #32
  42a13c:	ret
  42a140:	stp	x29, x30, [sp, #-32]!
  42a144:	str	x19, [sp, #16]
  42a148:	mov	x29, sp
  42a14c:	mov	x19, x0
  42a150:	bl	42a17c <wcrtomb@plt+0x2535c>
  42a154:	mov	x0, x19
  42a158:	bl	42a044 <wcrtomb@plt+0x25224>
  42a15c:	ldr	x0, [x19, #8]
  42a160:	bl	4049d0 <free@plt>
  42a164:	mov	x0, x19
  42a168:	str	xzr, [x19, #8]
  42a16c:	bl	42a0a8 <wcrtomb@plt+0x25288>
  42a170:	ldr	x19, [sp, #16]
  42a174:	ldp	x29, x30, [sp], #32
  42a178:	ret
  42a17c:	stp	x29, x30, [sp, #-32]!
  42a180:	stp	x20, x19, [sp, #16]
  42a184:	mov	x19, x0
  42a188:	ldr	x0, [x19, #208]!
  42a18c:	mov	x29, sp
  42a190:	cbz	x0, 42a1a4 <wcrtomb@plt+0x25384>
  42a194:	ldr	x20, [x0, #8]
  42a198:	bl	42ac58 <wcrtomb@plt+0x25e38>
  42a19c:	mov	x0, x20
  42a1a0:	cbnz	x20, 42a194 <wcrtomb@plt+0x25374>
  42a1a4:	stp	xzr, xzr, [x19]
  42a1a8:	ldp	x20, x19, [sp, #16]
  42a1ac:	ldp	x29, x30, [sp], #32
  42a1b0:	ret
  42a1b4:	stp	x29, x30, [sp, #-48]!
  42a1b8:	str	x21, [sp, #16]
  42a1bc:	stp	x20, x19, [sp, #32]
  42a1c0:	mov	x19, x0
  42a1c4:	ldp	x8, x0, [x0]
  42a1c8:	mov	x20, x1
  42a1cc:	mov	x29, sp
  42a1d0:	mov	x21, x2
  42a1d4:	lsl	x8, x8, #3
  42a1d8:	add	x1, x8, #0x8
  42a1dc:	bl	404730 <realloc@plt>
  42a1e0:	cbz	x0, 42a204 <wcrtomb@plt+0x253e4>
  42a1e4:	mov	x8, x0
  42a1e8:	str	x8, [x21]
  42a1ec:	ldr	x8, [x19]
  42a1f0:	mov	w0, wzr
  42a1f4:	str	x8, [x20]
  42a1f8:	str	xzr, [x19, #24]
  42a1fc:	stp	xzr, xzr, [x19]
  42a200:	b	42a208 <wcrtomb@plt+0x253e8>
  42a204:	mov	w0, #0xffffffff            	// #-1
  42a208:	ldp	x20, x19, [sp, #32]
  42a20c:	ldr	x21, [sp, #16]
  42a210:	ldp	x29, x30, [sp], #48
  42a214:	ret
  42a218:	ldrsw	x8, [x0, #192]
  42a21c:	cmp	w8, #0x9
  42a220:	b.ne	42a230 <wcrtomb@plt+0x25410>  // b.any
  42a224:	add	x8, x0, #0xc8
  42a228:	ldr	x0, [x8]
  42a22c:	ret
  42a230:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42a234:	ldr	w9, [x9, #736]
  42a238:	cmp	w8, w9
  42a23c:	b.ge	42a254 <wcrtomb@plt+0x25434>  // b.tcont
  42a240:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42a244:	add	x9, x9, #0x298
  42a248:	add	x8, x9, x8, lsl #3
  42a24c:	ldr	x0, [x8]
  42a250:	ret
  42a254:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a258:	add	x0, x0, #0x325
  42a25c:	ret
  42a260:	stp	x29, x30, [sp, #-32]!
  42a264:	stp	x20, x19, [sp, #16]
  42a268:	ldr	w8, [x0, #192]
  42a26c:	ldr	x20, [x0, #96]
  42a270:	mov	x19, x0
  42a274:	mov	x29, sp
  42a278:	cmp	w8, #0x1
  42a27c:	b.ne	42a2a8 <wcrtomb@plt+0x25488>  // b.any
  42a280:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a284:	add	x1, x1, #0x333
  42a288:	mov	w2, #0x5                   	// #5
  42a28c:	mov	x0, xzr
  42a290:	bl	404bf0 <dcgettext@plt>
  42a294:	ldr	x8, [x19, #168]
  42a298:	ldr	x2, [x19, #184]
  42a29c:	ldrb	w1, [x8, x2]
  42a2a0:	blr	x20
  42a2a4:	b	42a2c0 <wcrtomb@plt+0x254a0>
  42a2a8:	mov	x0, x19
  42a2ac:	bl	42a218 <wcrtomb@plt+0x253f8>
  42a2b0:	mov	x1, x0
  42a2b4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a2b8:	add	x0, x0, #0x386
  42a2bc:	blr	x20
  42a2c0:	ldp	x20, x19, [sp, #16]
  42a2c4:	ldp	x29, x30, [sp], #32
  42a2c8:	ret
  42a2cc:	stp	x29, x30, [sp, #-32]!
  42a2d0:	ldrb	w8, [x0, #32]
  42a2d4:	str	x19, [sp, #16]
  42a2d8:	mov	w19, w1
  42a2dc:	mov	x29, sp
  42a2e0:	str	w1, [x0, #192]
  42a2e4:	tbz	w8, #4, 42a2ec <wcrtomb@plt+0x254cc>
  42a2e8:	bl	42a260 <wcrtomb@plt+0x25440>
  42a2ec:	mov	w0, w19
  42a2f0:	ldr	x19, [sp, #16]
  42a2f4:	ldp	x29, x30, [sp], #32
  42a2f8:	ret
  42a2fc:	stp	x29, x30, [sp, #-80]!
  42a300:	stp	x22, x21, [sp, #48]
  42a304:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a308:	stp	x20, x19, [sp, #64]
  42a30c:	mov	x20, x0
  42a310:	add	x21, x21, #0x358
  42a314:	str	x25, [sp, #16]
  42a318:	stp	x24, x23, [sp, #32]
  42a31c:	mov	x29, sp
  42a320:	b	42a344 <wcrtomb@plt+0x25524>
  42a324:	mov	x0, x20
  42a328:	bl	42aa90 <wcrtomb@plt+0x25c70>
  42a32c:	mov	x1, x0
  42a330:	mov	x0, x20
  42a334:	bl	42a798 <wcrtomb@plt+0x25978>
  42a338:	cmp	w0, #0x0
  42a33c:	csel	w19, w19, w0, eq  // eq = none
  42a340:	cbnz	w0, 42a56c <wcrtomb@plt+0x2574c>
  42a344:	ldr	x22, [x20, #208]
  42a348:	mov	w24, wzr
  42a34c:	mov	x23, xzr
  42a350:	b	42a374 <wcrtomb@plt+0x25554>
  42a354:	mov	w24, wzr
  42a358:	ldrb	w9, [x20, #35]
  42a35c:	mov	w8, wzr
  42a360:	add	x23, x23, #0x1
  42a364:	tst	w9, #0x20
  42a368:	csel	x22, x25, xzr, eq  // eq = none
  42a36c:	cmp	w8, #0x4
  42a370:	b.eq	42a440 <wcrtomb@plt+0x25620>  // b.none
  42a374:	cbz	x22, 42a440 <wcrtomb@plt+0x25620>
  42a378:	ldrb	w8, [x22, #16]
  42a37c:	ldr	x25, [x22, #8]
  42a380:	tbnz	w8, #6, 42a3b4 <wcrtomb@plt+0x25594>
  42a384:	ldrb	w8, [x20, #36]
  42a388:	cmp	w24, #0x0
  42a38c:	cinc	x23, x23, ne  // ne = any
  42a390:	tbz	w8, #7, 42a354 <wcrtomb@plt+0x25534>
  42a394:	ldp	x9, x8, [x20, #40]
  42a398:	mov	w24, wzr
  42a39c:	add	x8, x23, x8
  42a3a0:	add	x8, x8, #0x1
  42a3a4:	cmp	x8, x9
  42a3a8:	b.ne	42a358 <wcrtomb@plt+0x25538>  // b.any
  42a3ac:	mov	w8, #0x4                   	// #4
  42a3b0:	b	42a36c <wcrtomb@plt+0x2554c>
  42a3b4:	ldr	w8, [x20, #32]
  42a3b8:	tbnz	w8, #12, 42a3dc <wcrtomb@plt+0x255bc>
  42a3bc:	ldrb	w8, [x20, #36]
  42a3c0:	tbz	w8, #7, 42a358 <wcrtomb@plt+0x25538>
  42a3c4:	mov	x0, x20
  42a3c8:	mov	x1, x22
  42a3cc:	bl	42a9f0 <wcrtomb@plt+0x25bd0>
  42a3d0:	mov	w8, #0x3                   	// #3
  42a3d4:	mov	x22, x25
  42a3d8:	b	42a36c <wcrtomb@plt+0x2554c>
  42a3dc:	tbz	w8, #11, 42a358 <wcrtomb@plt+0x25538>
  42a3e0:	mov	x0, x20
  42a3e4:	mov	x1, x22
  42a3e8:	bl	42a9c0 <wcrtomb@plt+0x25ba0>
  42a3ec:	ldrb	w9, [x0]
  42a3f0:	cbz	w24, 42a418 <wcrtomb@plt+0x255f8>
  42a3f4:	cmp	w24, w9
  42a3f8:	b.ne	42a42c <wcrtomb@plt+0x2560c>  // b.any
  42a3fc:	mov	x0, x20
  42a400:	mov	x1, x22
  42a404:	bl	42a9f0 <wcrtomb@plt+0x25bd0>
  42a408:	mov	w8, #0x3                   	// #3
  42a40c:	mov	x22, x25
  42a410:	cbnz	w8, 42a36c <wcrtomb@plt+0x2554c>
  42a414:	b	42a358 <wcrtomb@plt+0x25538>
  42a418:	mov	w8, #0x3                   	// #3
  42a41c:	mov	w24, w9
  42a420:	mov	x22, x25
  42a424:	cbnz	w8, 42a36c <wcrtomb@plt+0x2554c>
  42a428:	b	42a358 <wcrtomb@plt+0x25538>
  42a42c:	mov	w8, wzr
  42a430:	mov	w24, wzr
  42a434:	add	x23, x23, #0x1
  42a438:	cbnz	w8, 42a36c <wcrtomb@plt+0x2554c>
  42a43c:	b	42a358 <wcrtomb@plt+0x25538>
  42a440:	cbz	x22, 42a458 <wcrtomb@plt+0x25638>
  42a444:	mov	x0, x20
  42a448:	mov	x1, x22
  42a44c:	bl	42aa34 <wcrtomb@plt+0x25c14>
  42a450:	cbnz	w0, 42a4a0 <wcrtomb@plt+0x25680>
  42a454:	add	x23, x23, #0x1
  42a458:	cbnz	x23, 42a490 <wcrtomb@plt+0x25670>
  42a45c:	ldr	w8, [x20, #32]
  42a460:	tbz	w8, #29, 42a490 <wcrtomb@plt+0x25670>
  42a464:	ldp	x10, x9, [x20, #176]
  42a468:	cmp	x9, x10
  42a46c:	b.cs	42a564 <wcrtomb@plt+0x25744>  // b.hs, b.nlast
  42a470:	tbz	w8, #21, 42a324 <wcrtomb@plt+0x25504>
  42a474:	ldr	x22, [x20, #104]
  42a478:	mov	w2, #0x5                   	// #5
  42a47c:	mov	x0, xzr
  42a480:	mov	x1, x21
  42a484:	bl	404bf0 <dcgettext@plt>
  42a488:	blr	x22
  42a48c:	b	42a324 <wcrtomb@plt+0x25504>
  42a490:	add	x1, x23, #0x1
  42a494:	mov	x0, x20
  42a498:	bl	429adc <wcrtomb@plt+0x24cbc>
  42a49c:	cbz	w0, 42a4bc <wcrtomb@plt+0x2569c>
  42a4a0:	ldr	w19, [x20, #192]
  42a4a4:	b	42a56c <wcrtomb@plt+0x2574c>
  42a4a8:	mov	x0, x20
  42a4ac:	bl	429b94 <wcrtomb@plt+0x24d74>
  42a4b0:	mov	w19, w0
  42a4b4:	mov	w8, #0x1                   	// #1
  42a4b8:	cbnz	w8, 42a544 <wcrtomb@plt+0x25724>
  42a4bc:	ldr	x22, [x20, #208]
  42a4c0:	cbz	x22, 42a54c <wcrtomb@plt+0x2572c>
  42a4c4:	mov	x0, x20
  42a4c8:	mov	x1, x22
  42a4cc:	bl	42a9c0 <wcrtomb@plt+0x25ba0>
  42a4d0:	mov	x21, x0
  42a4d4:	mov	x0, x22
  42a4d8:	bl	42aabc <wcrtomb@plt+0x25c9c>
  42a4dc:	mov	x22, x0
  42a4e0:	add	x0, x0, #0x1
  42a4e4:	bl	4044f0 <malloc@plt>
  42a4e8:	ldp	x10, x8, [x20, #8]
  42a4ec:	ldr	x9, [x20]
  42a4f0:	add	x8, x9, x8
  42a4f4:	str	x0, [x10, x8, lsl #3]
  42a4f8:	cbz	x0, 42a4a8 <wcrtomb@plt+0x25688>
  42a4fc:	mov	x1, x21
  42a500:	mov	x2, x22
  42a504:	mov	x23, x0
  42a508:	bl	404110 <memcpy@plt>
  42a50c:	strb	wzr, [x23, x22]
  42a510:	ldr	x1, [x20, #208]
  42a514:	mov	x0, x20
  42a518:	bl	42a9f0 <wcrtomb@plt+0x25bd0>
  42a51c:	ldr	x8, [x20]
  42a520:	ldrb	w10, [x20, #35]
  42a524:	ldr	x9, [x20, #48]
  42a528:	add	x8, x8, #0x1
  42a52c:	sbfx	w10, w10, #5, #1
  42a530:	add	x9, x9, #0x1
  42a534:	str	x8, [x20]
  42a538:	and	w8, w10, #0x6
  42a53c:	str	x9, [x20, #48]
  42a540:	cbz	w8, 42a4bc <wcrtomb@plt+0x2569c>
  42a544:	cmp	w8, #0x6
  42a548:	b.ne	42a56c <wcrtomb@plt+0x2574c>  // b.any
  42a54c:	ldp	x10, x8, [x20, #8]
  42a550:	ldr	x9, [x20]
  42a554:	mov	w19, wzr
  42a558:	add	x8, x9, x8
  42a55c:	str	xzr, [x10, x8, lsl #3]
  42a560:	b	42a56c <wcrtomb@plt+0x2574c>
  42a564:	mov	w19, wzr
  42a568:	str	xzr, [x20, #96]
  42a56c:	mov	w0, w19
  42a570:	ldp	x20, x19, [sp, #64]
  42a574:	ldp	x22, x21, [sp, #48]
  42a578:	ldp	x24, x23, [sp, #32]
  42a57c:	ldr	x25, [sp, #16]
  42a580:	ldp	x29, x30, [sp], #80
  42a584:	ret
  42a588:	stp	x29, x30, [sp, #-16]!
  42a58c:	ldr	w8, [x0, #32]
  42a590:	mov	x29, sp
  42a594:	and	w1, w8, #0x1000
  42a598:	bl	42ac8c <wcrtomb@plt+0x25e6c>
  42a59c:	ldp	x29, x30, [sp], #16
  42a5a0:	ret
  42a5a4:	stp	x29, x30, [sp, #-32]!
  42a5a8:	ldr	w8, [x0, #32]
  42a5ac:	str	x19, [sp, #16]
  42a5b0:	mov	x19, x0
  42a5b4:	mov	x29, sp
  42a5b8:	tbnz	w8, #3, 42a5c8 <wcrtomb@plt+0x257a8>
  42a5bc:	str	xzr, [x19, #24]
  42a5c0:	stp	xzr, xzr, [x19]
  42a5c4:	b	42a5dc <wcrtomb@plt+0x257bc>
  42a5c8:	tbnz	w8, #0, 42a5d4 <wcrtomb@plt+0x257b4>
  42a5cc:	mov	x0, x19
  42a5d0:	bl	42a044 <wcrtomb@plt+0x25224>
  42a5d4:	mov	x0, x19
  42a5d8:	bl	42a108 <wcrtomb@plt+0x252e8>
  42a5dc:	str	wzr, [x19, #192]
  42a5e0:	ldr	x19, [sp, #16]
  42a5e4:	ldp	x29, x30, [sp], #32
  42a5e8:	ret
  42a5ec:	stp	x29, x30, [sp, #-32]!
  42a5f0:	str	x19, [sp, #16]
  42a5f4:	mov	x19, x0
  42a5f8:	mov	x29, sp
  42a5fc:	str	w3, [x0, #32]
  42a600:	tbnz	w3, #16, 42a628 <wcrtomb@plt+0x25808>
  42a604:	adrp	x8, 42a000 <wcrtomb@plt+0x251e0>
  42a608:	add	x8, x8, #0xc9c
  42a60c:	str	x8, [x19, #88]
  42a610:	tbz	w3, #17, 42a62c <wcrtomb@plt+0x2580c>
  42a614:	tbnz	w3, #6, 42a63c <wcrtomb@plt+0x2581c>
  42a618:	stp	xzr, xzr, [x19, #120]
  42a61c:	str	xzr, [x19, #136]
  42a620:	tbnz	w3, #2, 42a648 <wcrtomb@plt+0x25828>
  42a624:	b	42a640 <wcrtomb@plt+0x25820>
  42a628:	tbnz	w3, #17, 42a614 <wcrtomb@plt+0x257f4>
  42a62c:	adrp	x8, 42a000 <wcrtomb@plt+0x251e0>
  42a630:	add	x8, x8, #0xcd4
  42a634:	str	x8, [x19, #96]
  42a638:	tbz	w3, #6, 42a618 <wcrtomb@plt+0x257f8>
  42a63c:	tbnz	w3, #2, 42a648 <wcrtomb@plt+0x25828>
  42a640:	ldr	x8, [x19, #160]
  42a644:	cbz	x8, 42a674 <wcrtomb@plt+0x25854>
  42a648:	mov	w8, #0x240000              	// #2359296
  42a64c:	and	w8, w3, w8
  42a650:	cmp	w8, #0x200, lsl #12
  42a654:	b.ne	42a6a0 <wcrtomb@plt+0x25880>  // b.any
  42a658:	tbnz	w3, #17, 42a66c <wcrtomb@plt+0x2584c>
  42a65c:	tbnz	w3, #4, 42a694 <wcrtomb@plt+0x25874>
  42a660:	and	w8, w3, #0xffdfffff
  42a664:	str	w8, [x19, #32]
  42a668:	b	42a6a0 <wcrtomb@plt+0x25880>
  42a66c:	ldr	x8, [x19, #96]
  42a670:	b	42a69c <wcrtomb@plt+0x2587c>
  42a674:	mov	w1, #0x3                   	// #3
  42a678:	mov	x0, x19
  42a67c:	bl	42a2cc <wcrtomb@plt+0x254ac>
  42a680:	bl	404d00 <__errno_location@plt>
  42a684:	mov	w8, #0x16                  	// #22
  42a688:	str	w8, [x0]
  42a68c:	ldr	w0, [x19, #192]
  42a690:	b	42a78c <wcrtomb@plt+0x2596c>
  42a694:	adrp	x8, 42a000 <wcrtomb@plt+0x251e0>
  42a698:	add	x8, x8, #0xcd4
  42a69c:	str	x8, [x19, #104]
  42a6a0:	ldr	w8, [x19, #32]
  42a6a4:	stp	x1, x2, [x19, #168]
  42a6a8:	tbnz	w8, #1, 42a6f0 <wcrtomb@plt+0x258d0>
  42a6ac:	str	xzr, [x19, #16]
  42a6b0:	tbz	w8, #14, 42a6f4 <wcrtomb@plt+0x258d4>
  42a6b4:	tbnz	w8, #15, 42a704 <wcrtomb@plt+0x258e4>
  42a6b8:	str	xzr, [x19, #64]
  42a6bc:	tbz	w8, #26, 42a708 <wcrtomb@plt+0x258e8>
  42a6c0:	tbnz	w8, #31, 42a6c8 <wcrtomb@plt+0x258a8>
  42a6c4:	str	wzr, [x19, #36]
  42a6c8:	tbnz	w8, #28, 42a714 <wcrtomb@plt+0x258f4>
  42a6cc:	tbnz	w8, #25, 42a728 <wcrtomb@plt+0x25908>
  42a6d0:	ldr	w10, [x19, #36]
  42a6d4:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  42a6d8:	adrp	x11, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a6dc:	add	x9, x9, #0xd3e
  42a6e0:	add	x11, x11, #0x367
  42a6e4:	stp	x9, x11, [x19, #72]
  42a6e8:	orr	w9, w10, #0x100
  42a6ec:	b	42a740 <wcrtomb@plt+0x25920>
  42a6f0:	tbnz	w8, #14, 42a6b4 <wcrtomb@plt+0x25894>
  42a6f4:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a6f8:	add	x9, x9, #0x363
  42a6fc:	str	x9, [x19, #56]
  42a700:	tbz	w8, #15, 42a6b8 <wcrtomb@plt+0x25898>
  42a704:	tbnz	w8, #26, 42a6c0 <wcrtomb@plt+0x258a0>
  42a708:	str	xzr, [x19, #152]
  42a70c:	tbz	w8, #31, 42a6c4 <wcrtomb@plt+0x258a4>
  42a710:	b	42a6c8 <wcrtomb@plt+0x258a8>
  42a714:	ldr	x9, [x19, #72]
  42a718:	cbz	x9, 42a748 <wcrtomb@plt+0x25928>
  42a71c:	ldr	x9, [x19, #80]
  42a720:	cbnz	x9, 42a768 <wcrtomb@plt+0x25948>
  42a724:	b	42a75c <wcrtomb@plt+0x2593c>
  42a728:	ldr	w10, [x19, #36]
  42a72c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42a730:	add	x9, x9, #0x280
  42a734:	stp	x9, x9, [x19, #72]
  42a738:	mov	w9, #0x660                 	// #1632
  42a73c:	orr	w9, w10, w9
  42a740:	str	w9, [x19, #36]
  42a744:	b	42a768 <wcrtomb@plt+0x25948>
  42a748:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  42a74c:	add	x9, x9, #0xd3e
  42a750:	str	x9, [x19, #72]
  42a754:	ldr	x9, [x19, #80]
  42a758:	cbnz	x9, 42a768 <wcrtomb@plt+0x25948>
  42a75c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  42a760:	add	x9, x9, #0xd3e
  42a764:	str	x9, [x19, #80]
  42a768:	str	xzr, [x19, #184]
  42a76c:	str	xzr, [x19, #48]
  42a770:	tbz	w8, #3, 42a77c <wcrtomb@plt+0x2595c>
  42a774:	mov	x0, x19
  42a778:	bl	42a17c <wcrtomb@plt+0x2535c>
  42a77c:	mov	x0, x19
  42a780:	stp	xzr, xzr, [x19, #208]
  42a784:	bl	42a5a4 <wcrtomb@plt+0x25784>
  42a788:	mov	w0, wzr
  42a78c:	ldr	x19, [sp, #16]
  42a790:	ldp	x29, x30, [sp], #32
  42a794:	ret
  42a798:	stp	x29, x30, [sp, #-64]!
  42a79c:	stp	x24, x23, [sp, #16]
  42a7a0:	stp	x22, x21, [sp, #32]
  42a7a4:	stp	x20, x19, [sp, #48]
  42a7a8:	ldrb	w8, [x0, #34]
  42a7ac:	mov	x19, x0
  42a7b0:	mov	x20, x1
  42a7b4:	mov	x29, sp
  42a7b8:	tbnz	w8, #5, 42a7c8 <wcrtomb@plt+0x259a8>
  42a7bc:	ldrb	w8, [x19, #34]
  42a7c0:	tbz	w8, #6, 42a7f8 <wcrtomb@plt+0x259d8>
  42a7c4:	b	42a810 <wcrtomb@plt+0x259f0>
  42a7c8:	ldr	x21, [x19, #104]
  42a7cc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a7d0:	add	x1, x1, #0x36c
  42a7d4:	mov	w2, #0x5                   	// #5
  42a7d8:	mov	x0, xzr
  42a7dc:	bl	404bf0 <dcgettext@plt>
  42a7e0:	ldr	w1, [x19, #224]
  42a7e4:	ldr	w2, [x19, #176]
  42a7e8:	ldr	x3, [x19, #168]
  42a7ec:	blr	x21
  42a7f0:	ldrb	w8, [x19, #34]
  42a7f4:	tbnz	w8, #6, 42a810 <wcrtomb@plt+0x259f0>
  42a7f8:	ldrb	w8, [x19, #36]
  42a7fc:	tbz	w8, #7, 42a82c <wcrtomb@plt+0x25a0c>
  42a800:	ldp	x9, x8, [x19, #40]
  42a804:	add	x8, x8, #0x1
  42a808:	cmp	x8, x9
  42a80c:	b.ne	42a82c <wcrtomb@plt+0x25a0c>  // b.any
  42a810:	mov	w2, #0x1                   	// #1
  42a814:	mov	x0, x19
  42a818:	mov	x1, x20
  42a81c:	bl	42ad68 <wcrtomb@plt+0x25f48>
  42a820:	cmp	w0, #0x2
  42a824:	b.ne	42a88c <wcrtomb@plt+0x25a6c>  // b.any
  42a828:	b	42a9a8 <wcrtomb@plt+0x25b88>
  42a82c:	mov	x0, x19
  42a830:	mov	x1, x20
  42a834:	mov	w2, wzr
  42a838:	bl	42ad68 <wcrtomb@plt+0x25f48>
  42a83c:	cmp	w0, #0x1
  42a840:	b.ne	42a858 <wcrtomb@plt+0x25a38>  // b.any
  42a844:	mov	x0, x19
  42a848:	bl	42aa90 <wcrtomb@plt+0x25c70>
  42a84c:	mov	x1, x0
  42a850:	mov	x0, x19
  42a854:	b	42a834 <wcrtomb@plt+0x25a14>
  42a858:	ldr	x8, [x19, #216]
  42a85c:	cbz	x8, 42a86c <wcrtomb@plt+0x25a4c>
  42a860:	ldr	w9, [x8, #16]
  42a864:	and	w9, w9, #0xffffffef
  42a868:	str	w9, [x8, #16]
  42a86c:	cmp	w0, #0x2
  42a870:	b.ne	42a884 <wcrtomb@plt+0x25a64>  // b.any
  42a874:	ldr	w0, [x19, #192]
  42a878:	mov	w8, wzr
  42a87c:	cbnz	w8, 42a88c <wcrtomb@plt+0x25a6c>
  42a880:	b	42a9ac <wcrtomb@plt+0x25b8c>
  42a884:	mov	w8, #0x1                   	// #1
  42a888:	cbz	w8, 42a9ac <wcrtomb@plt+0x25b8c>
  42a88c:	ldrb	w8, [x19, #34]
  42a890:	tbz	w8, #5, 42a8cc <wcrtomb@plt+0x25aac>
  42a894:	ldr	x21, [x19, #104]
  42a898:	ldr	w20, [x19, #224]
  42a89c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a8a0:	add	x1, x1, #0x389
  42a8a4:	mov	w2, #0x5                   	// #5
  42a8a8:	mov	x0, xzr
  42a8ac:	bl	404bf0 <dcgettext@plt>
  42a8b0:	mov	x2, x0
  42a8b4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a8b8:	add	x0, x0, #0x37f
  42a8bc:	mov	w1, w20
  42a8c0:	blr	x21
  42a8c4:	mov	x0, x19
  42a8c8:	bl	42b0f4 <wcrtomb@plt+0x262d4>
  42a8cc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42a8d0:	ldr	x8, [x8, #744]
  42a8d4:	cbz	x8, 42a9a8 <wcrtomb@plt+0x25b88>
  42a8d8:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42a8dc:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a8e0:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x18da0>
  42a8e4:	add	x20, x20, #0x2e8
  42a8e8:	add	x21, x21, #0x37f
  42a8ec:	add	x22, x22, #0x397
  42a8f0:	b	42a8fc <wcrtomb@plt+0x25adc>
  42a8f4:	ldr	x8, [x20, #24]!
  42a8f8:	cbz	x8, 42a9a8 <wcrtomb@plt+0x25b88>
  42a8fc:	mov	x0, x20
  42a900:	mov	x1, x19
  42a904:	bl	42b1d0 <wcrtomb@plt+0x263b0>
  42a908:	cbz	w0, 42a8f4 <wcrtomb@plt+0x25ad4>
  42a90c:	ldrb	w8, [x20, #12]
  42a910:	tbz	w8, #2, 42a958 <wcrtomb@plt+0x25b38>
  42a914:	mov	x0, x19
  42a918:	bl	42b200 <wcrtomb@plt+0x263e0>
  42a91c:	cbnz	w0, 42a9a8 <wcrtomb@plt+0x25b88>
  42a920:	ldrb	w8, [x19, #34]
  42a924:	tbz	w8, #5, 42a958 <wcrtomb@plt+0x25b38>
  42a928:	ldr	x24, [x19, #104]
  42a92c:	ldr	w23, [x19, #224]
  42a930:	mov	w2, #0x5                   	// #5
  42a934:	mov	x0, xzr
  42a938:	mov	x1, x22
  42a93c:	bl	404bf0 <dcgettext@plt>
  42a940:	mov	x2, x0
  42a944:	mov	x0, x21
  42a948:	mov	w1, w23
  42a94c:	blr	x24
  42a950:	mov	x0, x19
  42a954:	bl	42b0f4 <wcrtomb@plt+0x262d4>
  42a958:	ldr	x8, [x20, #16]
  42a95c:	cbz	x8, 42a8f4 <wcrtomb@plt+0x25ad4>
  42a960:	mov	x0, x19
  42a964:	blr	x8
  42a968:	cbnz	w0, 42a9a8 <wcrtomb@plt+0x25b88>
  42a96c:	ldrb	w8, [x19, #34]
  42a970:	tbz	w8, #5, 42a8f4 <wcrtomb@plt+0x25ad4>
  42a974:	ldr	x1, [x20]
  42a978:	ldr	x24, [x19, #104]
  42a97c:	ldr	w23, [x19, #224]
  42a980:	mov	w2, #0x5                   	// #5
  42a984:	mov	x0, xzr
  42a988:	bl	404bf0 <dcgettext@plt>
  42a98c:	mov	x2, x0
  42a990:	mov	x0, x21
  42a994:	mov	w1, w23
  42a998:	blr	x24
  42a99c:	mov	x0, x19
  42a9a0:	bl	42b0f4 <wcrtomb@plt+0x262d4>
  42a9a4:	b	42a8f4 <wcrtomb@plt+0x25ad4>
  42a9a8:	ldr	w0, [x19, #192]
  42a9ac:	ldp	x20, x19, [sp, #48]
  42a9b0:	ldp	x22, x21, [sp, #32]
  42a9b4:	ldp	x24, x23, [sp, #16]
  42a9b8:	ldp	x29, x30, [sp], #64
  42a9bc:	ret
  42a9c0:	ldr	w8, [x1, #16]
  42a9c4:	tbnz	w8, #0, 42a9dc <wcrtomb@plt+0x25bbc>
  42a9c8:	tbnz	w8, #1, 42a9e8 <wcrtomb@plt+0x25bc8>
  42a9cc:	ldr	x8, [x0, #168]
  42a9d0:	ldr	x9, [x1, #24]
  42a9d4:	add	x0, x8, x9
  42a9d8:	ret
  42a9dc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  42a9e0:	add	x0, x0, #0xd3e
  42a9e4:	ret
  42a9e8:	ldr	x0, [x1, #24]
  42a9ec:	ret
  42a9f0:	ldp	x8, x9, [x1]
  42a9f4:	cbz	x8, 42aa14 <wcrtomb@plt+0x25bf4>
  42a9f8:	str	x9, [x8, #8]
  42a9fc:	ldr	x9, [x1, #8]
  42aa00:	cbnz	x9, 42aa18 <wcrtomb@plt+0x25bf8>
  42aa04:	ldr	w9, [x8, #16]
  42aa08:	and	w9, w9, #0xffffffef
  42aa0c:	str	w9, [x8, #16]
  42aa10:	b	42aa18 <wcrtomb@plt+0x25bf8>
  42aa14:	str	x9, [x0, #208]
  42aa18:	ldp	x9, x8, [x1]
  42aa1c:	add	x10, x0, #0xd8
  42aa20:	cmp	x8, #0x0
  42aa24:	csel	x8, x10, x8, eq  // eq = none
  42aa28:	str	x9, [x8]
  42aa2c:	stp	xzr, xzr, [x1]
  42aa30:	ret
  42aa34:	stp	x29, x30, [sp, #-16]!
  42aa38:	ldr	x8, [x1, #8]
  42aa3c:	mov	x29, sp
  42aa40:	cbz	x8, 42aa84 <wcrtomb@plt+0x25c64>
  42aa44:	cbz	x1, 42aa70 <wcrtomb@plt+0x25c50>
  42aa48:	ldr	x8, [x1, #8]
  42aa4c:	cbz	x8, 42aa70 <wcrtomb@plt+0x25c50>
  42aa50:	mov	x9, x1
  42aa54:	ldr	w10, [x9, #16]
  42aa58:	mov	x11, x8
  42aa5c:	orr	w8, w10, #0x10
  42aa60:	str	w8, [x9, #16]
  42aa64:	ldr	x8, [x11, #8]
  42aa68:	mov	x9, x11
  42aa6c:	cbnz	x8, 42aa54 <wcrtomb@plt+0x25c34>
  42aa70:	bl	42aafc <wcrtomb@plt+0x25cdc>
  42aa74:	cbz	w0, 42aa84 <wcrtomb@plt+0x25c64>
  42aa78:	mov	w0, #0x1                   	// #1
  42aa7c:	ldp	x29, x30, [sp], #16
  42aa80:	ret
  42aa84:	mov	w0, wzr
  42aa88:	ldp	x29, x30, [sp], #16
  42aa8c:	ret
  42aa90:	stp	x29, x30, [sp, #-16]!
  42aa94:	ldrb	w8, [x0, #33]
  42aa98:	mov	x29, sp
  42aa9c:	tbnz	w8, #4, 42aaac <wcrtomb@plt+0x25c8c>
  42aaa0:	ldr	w8, [x0, #36]
  42aaa4:	ubfx	w1, w8, #7, #1
  42aaa8:	b	42aab0 <wcrtomb@plt+0x25c90>
  42aaac:	mov	w1, #0x1                   	// #1
  42aab0:	bl	42ac8c <wcrtomb@plt+0x25e6c>
  42aab4:	ldp	x29, x30, [sp], #16
  42aab8:	ret
  42aabc:	stp	x29, x30, [sp, #-16]!
  42aac0:	ldr	w8, [x0, #16]
  42aac4:	mov	x29, sp
  42aac8:	tbnz	w8, #0, 42aae0 <wcrtomb@plt+0x25cc0>
  42aacc:	tbnz	w8, #1, 42aaec <wcrtomb@plt+0x25ccc>
  42aad0:	ldp	x9, x8, [x0, #24]
  42aad4:	sub	x0, x8, x9
  42aad8:	ldp	x29, x30, [sp], #16
  42aadc:	ret
  42aae0:	mov	x0, xzr
  42aae4:	ldp	x29, x30, [sp], #16
  42aae8:	ret
  42aaec:	ldr	x0, [x0, #24]
  42aaf0:	bl	404190 <strlen@plt>
  42aaf4:	ldp	x29, x30, [sp], #16
  42aaf8:	ret
  42aafc:	stp	x29, x30, [sp, #-96]!
  42ab00:	stp	x28, x27, [sp, #16]
  42ab04:	stp	x26, x25, [sp, #32]
  42ab08:	stp	x24, x23, [sp, #48]
  42ab0c:	stp	x22, x21, [sp, #64]
  42ab10:	stp	x20, x19, [sp, #80]
  42ab14:	ldrb	w8, [x1, #16]
  42ab18:	mov	x29, sp
  42ab1c:	tbnz	w8, #4, 42ab28 <wcrtomb@plt+0x25d08>
  42ab20:	mov	w0, wzr
  42ab24:	b	42ac3c <wcrtomb@plt+0x25e1c>
  42ab28:	mov	x19, x1
  42ab2c:	mov	x20, x0
  42ab30:	cbz	x1, 42ac10 <wcrtomb@plt+0x25df0>
  42ab34:	mov	x22, xzr
  42ab38:	mov	x21, x19
  42ab3c:	ldr	w23, [x21, #16]
  42ab40:	mov	x0, x21
  42ab44:	bl	42aabc <wcrtomb@plt+0x25c9c>
  42ab48:	add	x22, x0, x22
  42ab4c:	tbz	w23, #4, 42ab58 <wcrtomb@plt+0x25d38>
  42ab50:	ldr	x21, [x21, #8]
  42ab54:	cbnz	x21, 42ab3c <wcrtomb@plt+0x25d1c>
  42ab58:	add	x0, x22, #0x1
  42ab5c:	bl	4044f0 <malloc@plt>
  42ab60:	cbz	x0, 42ac20 <wcrtomb@plt+0x25e00>
  42ab64:	mov	x22, x0
  42ab68:	mov	w27, wzr
  42ab6c:	mov	x24, x19
  42ab70:	mov	x23, x0
  42ab74:	b	42ab80 <wcrtomb@plt+0x25d60>
  42ab78:	mov	x24, x28
  42ab7c:	cbnz	w27, 42abf0 <wcrtomb@plt+0x25dd0>
  42ab80:	ldr	x28, [x24, #8]
  42ab84:	mov	x0, x20
  42ab88:	mov	x1, x24
  42ab8c:	bl	42a9c0 <wcrtomb@plt+0x25ba0>
  42ab90:	mov	x25, x0
  42ab94:	mov	x0, x24
  42ab98:	bl	42aabc <wcrtomb@plt+0x25c9c>
  42ab9c:	mov	x26, x0
  42aba0:	mov	x0, x23
  42aba4:	mov	x1, x25
  42aba8:	mov	x2, x26
  42abac:	bl	404110 <memcpy@plt>
  42abb0:	cmp	x24, x19
  42abb4:	add	x23, x23, x26
  42abb8:	b.eq	42ab78 <wcrtomb@plt+0x25d58>  // b.none
  42abbc:	ldr	w8, [x24, #16]
  42abc0:	ldr	w9, [x19, #16]
  42abc4:	mov	x0, x20
  42abc8:	mov	x1, x24
  42abcc:	and	w8, w8, #0x4
  42abd0:	orr	w8, w9, w8
  42abd4:	str	w8, [x19, #16]
  42abd8:	bl	42a9f0 <wcrtomb@plt+0x25bd0>
  42abdc:	cmp	x24, x21
  42abe0:	mov	x0, x24
  42abe4:	cset	w27, eq  // eq = none
  42abe8:	bl	42ac58 <wcrtomb@plt+0x25e38>
  42abec:	b	42ab78 <wcrtomb@plt+0x25d58>
  42abf0:	strb	wzr, [x23]
  42abf4:	ldr	w9, [x19, #16]
  42abf8:	and	w8, w9, #0xffffffef
  42abfc:	str	w8, [x19, #16]
  42ac00:	tbnz	w9, #1, 42ac2c <wcrtomb@plt+0x25e0c>
  42ac04:	orr	w8, w8, #0x2
  42ac08:	str	w8, [x19, #16]
  42ac0c:	b	42ac34 <wcrtomb@plt+0x25e14>
  42ac10:	mov	w0, #0x1                   	// #1
  42ac14:	mov	x21, x19
  42ac18:	bl	4044f0 <malloc@plt>
  42ac1c:	cbnz	x0, 42ab64 <wcrtomb@plt+0x25d44>
  42ac20:	mov	x0, x20
  42ac24:	bl	429b94 <wcrtomb@plt+0x24d74>
  42ac28:	b	42ac3c <wcrtomb@plt+0x25e1c>
  42ac2c:	ldr	x0, [x19, #24]
  42ac30:	bl	4049d0 <free@plt>
  42ac34:	mov	w0, wzr
  42ac38:	str	x22, [x19, #24]
  42ac3c:	ldp	x20, x19, [sp, #80]
  42ac40:	ldp	x22, x21, [sp, #64]
  42ac44:	ldp	x24, x23, [sp, #48]
  42ac48:	ldp	x26, x25, [sp, #32]
  42ac4c:	ldp	x28, x27, [sp, #16]
  42ac50:	ldp	x29, x30, [sp], #96
  42ac54:	ret
  42ac58:	stp	x29, x30, [sp, #-32]!
  42ac5c:	ldrb	w8, [x0, #16]
  42ac60:	str	x19, [sp, #16]
  42ac64:	mov	x19, x0
  42ac68:	mov	x29, sp
  42ac6c:	tbz	w8, #1, 42ac78 <wcrtomb@plt+0x25e58>
  42ac70:	ldr	x0, [x19, #24]
  42ac74:	bl	4049d0 <free@plt>
  42ac78:	mov	x0, x19
  42ac7c:	bl	4049d0 <free@plt>
  42ac80:	ldr	x19, [sp, #16]
  42ac84:	ldp	x29, x30, [sp], #32
  42ac88:	ret
  42ac8c:	ldr	x8, [x0, #184]
  42ac90:	cmp	w1, #0x0
  42ac94:	cinc	x0, x8, eq  // eq = none
  42ac98:	ret
  42ac9c:	stp	x29, x30, [sp, #-32]!
  42aca0:	str	x19, [sp, #16]
  42aca4:	ldr	x19, [x0, #96]
  42aca8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  42acac:	add	x1, x1, #0x127
  42acb0:	mov	w2, #0x5                   	// #5
  42acb4:	mov	x0, xzr
  42acb8:	mov	x29, sp
  42acbc:	bl	404bf0 <dcgettext@plt>
  42acc0:	mov	x1, x0
  42acc4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42acc8:	add	x0, x0, #0x386
  42accc:	blr	x19
  42acd0:	bl	404870 <abort@plt>
  42acd4:	sub	sp, sp, #0x120
  42acd8:	stp	x29, x30, [sp, #256]
  42acdc:	add	x29, sp, #0x100
  42ace0:	mov	x9, #0xffffffffffffffc8    	// #-56
  42ace4:	mov	x10, sp
  42ace8:	sub	x11, x29, #0x78
  42acec:	movk	x9, #0xff80, lsl #32
  42acf0:	add	x12, x29, #0x20
  42acf4:	add	x10, x10, #0x80
  42acf8:	add	x11, x11, #0x38
  42acfc:	stp	x28, x19, [sp, #272]
  42ad00:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42ad04:	stp	x10, x9, [x29, #-48]
  42ad08:	stp	x12, x11, [x29, #-64]
  42ad0c:	mov	x8, x0
  42ad10:	stp	x1, x2, [x29, #-120]
  42ad14:	stp	x3, x4, [x29, #-104]
  42ad18:	stp	x5, x6, [x29, #-88]
  42ad1c:	stur	x7, [x29, #-72]
  42ad20:	stp	q0, q1, [sp]
  42ad24:	ldr	x0, [x19, #1136]
  42ad28:	ldp	q0, q1, [x29, #-64]
  42ad2c:	sub	x3, x29, #0x20
  42ad30:	mov	w1, #0x1                   	// #1
  42ad34:	mov	x2, x8
  42ad38:	stp	q2, q3, [sp, #32]
  42ad3c:	stp	q4, q5, [sp, #64]
  42ad40:	stp	q6, q7, [sp, #96]
  42ad44:	stp	q0, q1, [x29, #-32]
  42ad48:	bl	404690 <__vfprintf_chk@plt>
  42ad4c:	ldr	x1, [x19, #1136]
  42ad50:	mov	w0, #0xa                   	// #10
  42ad54:	bl	404330 <fputc@plt>
  42ad58:	ldp	x28, x19, [sp, #272]
  42ad5c:	ldp	x29, x30, [sp, #256]
  42ad60:	add	sp, sp, #0x120
  42ad64:	ret
  42ad68:	sub	sp, sp, #0x70
  42ad6c:	stp	x29, x30, [sp, #16]
  42ad70:	stp	x28, x27, [sp, #32]
  42ad74:	stp	x26, x25, [sp, #48]
  42ad78:	stp	x24, x23, [sp, #64]
  42ad7c:	stp	x22, x21, [sp, #80]
  42ad80:	stp	x20, x19, [sp, #96]
  42ad84:	ldp	x23, x22, [x0, #168]
  42ad88:	ldr	x24, [x0, #64]
  42ad8c:	ldr	x28, [x0, #216]
  42ad90:	mov	x19, x0
  42ad94:	cmp	x22, x1
  42ad98:	add	x29, sp, #0x10
  42ad9c:	str	x1, [sp, #8]
  42ada0:	b.ls	42ae14 <wcrtomb@plt+0x25ff4>  // b.plast
  42ada4:	ldr	w26, [x19, #32]
  42ada8:	mov	w20, w2
  42adac:	mov	x21, x1
  42adb0:	tbz	w26, #13, 42ae20 <wcrtomb@plt+0x26000>
  42adb4:	add	x8, x21, #0x3
  42adb8:	cmp	x8, x22
  42adbc:	b.cs	42ae20 <wcrtomb@plt+0x26000>  // b.hs, b.nlast
  42adc0:	ldrb	w8, [x23, x21]
  42adc4:	cmp	w8, #0x73
  42adc8:	b.ne	42ae20 <wcrtomb@plt+0x26000>  // b.any
  42adcc:	add	x8, x21, x23
  42add0:	ldrb	w1, [x8, #1]
  42add4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42add8:	add	x0, x0, #0x3a7
  42addc:	mov	w2, #0x21                  	// #33
  42ade0:	bl	404b70 <memchr@plt>
  42ade4:	cbz	x0, 42ae20 <wcrtomb@plt+0x26000>
  42ade8:	mov	x0, x23
  42adec:	mov	x1, x21
  42adf0:	mov	x2, x22
  42adf4:	bl	42b254 <wcrtomb@plt+0x26434>
  42adf8:	sxtw	x8, w0
  42adfc:	mov	w25, wzr
  42ae00:	str	x8, [sp, #8]
  42ae04:	mov	w3, #0x20                  	// #32
  42ae08:	ldr	x2, [sp, #8]
  42ae0c:	cbnz	w25, 42b020 <wcrtomb@plt+0x26200>
  42ae10:	b	42b03c <wcrtomb@plt+0x2621c>
  42ae14:	mov	w0, wzr
  42ae18:	str	wzr, [x19, #192]
  42ae1c:	b	42b0d4 <wcrtomb@plt+0x262b4>
  42ae20:	cbz	w20, 42afc4 <wcrtomb@plt+0x261a4>
  42ae24:	ldr	x27, [sp, #8]
  42ae28:	cmp	x27, x22
  42ae2c:	b.cs	42afb0 <wcrtomb@plt+0x26190>  // b.hs, b.nlast
  42ae30:	adrp	x26, 457000 <_obstack_memory_used@@Base+0x18da0>
  42ae34:	mov	w25, wzr
  42ae38:	add	x26, x26, #0x3cb
  42ae3c:	cbz	x24, 42ae50 <wcrtomb@plt+0x26030>
  42ae40:	ldrb	w1, [x23, x27]
  42ae44:	mov	x0, x24
  42ae48:	bl	404a70 <strchr@plt>
  42ae4c:	cbnz	x0, 42b094 <wcrtomb@plt+0x26274>
  42ae50:	ldr	w8, [x19, #32]
  42ae54:	tst	w8, #0x600
  42ae58:	b.eq	42aef8 <wcrtomb@plt+0x260d8>  // b.none
  42ae5c:	ldrb	w9, [x23, x27]
  42ae60:	cmp	w9, #0x5c
  42ae64:	b.ne	42ae90 <wcrtomb@plt+0x26070>  // b.any
  42ae68:	add	x8, x27, #0x1
  42ae6c:	cmp	x8, x22
  42ae70:	str	x8, [sp, #8]
  42ae74:	b.eq	42afb4 <wcrtomb@plt+0x26194>  // b.none
  42ae78:	add	x8, x8, #0x1
  42ae7c:	add	x27, x27, #0x2
  42ae80:	cmp	x8, x22
  42ae84:	str	x8, [sp, #8]
  42ae88:	b.cc	42ae3c <wcrtomb@plt+0x2601c>  // b.lo, b.ul, b.last
  42ae8c:	b	42b014 <wcrtomb@plt+0x261f4>
  42ae90:	tbz	w8, #9, 42ae9c <wcrtomb@plt+0x2607c>
  42ae94:	cmp	w9, #0x27
  42ae98:	b.eq	42aea8 <wcrtomb@plt+0x26088>  // b.none
  42ae9c:	tbz	w8, #10, 42aef8 <wcrtomb@plt+0x260d8>
  42aea0:	cmp	w9, #0x22
  42aea4:	b.ne	42aef8 <wcrtomb@plt+0x260d8>  // b.any
  42aea8:	cbz	w25, 42aec0 <wcrtomb@plt+0x260a0>
  42aeac:	ldr	x8, [x19, #216]
  42aeb0:	cbz	x8, 42aec0 <wcrtomb@plt+0x260a0>
  42aeb4:	ldr	w9, [x8, #16]
  42aeb8:	orr	w9, w9, #0x10
  42aebc:	str	w9, [x8, #16]
  42aec0:	mov	w3, #0x10                  	// #16
  42aec4:	mov	x0, x19
  42aec8:	mov	x1, x21
  42aecc:	mov	x2, x27
  42aed0:	bl	42b38c <wcrtomb@plt+0x2656c>
  42aed4:	cbnz	w0, 42b04c <wcrtomb@plt+0x2622c>
  42aed8:	ldr	x1, [sp, #8]
  42aedc:	add	x2, sp, #0x8
  42aee0:	mov	x0, x19
  42aee4:	bl	42b400 <wcrtomb@plt+0x265e0>
  42aee8:	cbnz	w0, 42b04c <wcrtomb@plt+0x2622c>
  42aeec:	ldr	x8, [sp, #8]
  42aef0:	mov	w25, #0x1                   	// #1
  42aef4:	add	x21, x8, #0x1
  42aef8:	ldr	x8, [sp, #8]
  42aefc:	ldrb	w9, [x23, x8]
  42af00:	cmp	w9, #0x24
  42af04:	b.ne	42af78 <wcrtomb@plt+0x26158>  // b.any
  42af08:	ldrb	w9, [x19, #32]
  42af0c:	tbnz	w9, #6, 42af40 <wcrtomb@plt+0x26120>
  42af10:	add	x9, x8, x23
  42af14:	ldrb	w9, [x9, #1]
  42af18:	cmp	w9, #0x7b
  42af1c:	b.ne	42af40 <wcrtomb@plt+0x26120>  // b.any
  42af20:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x18da0>
  42af24:	add	x1, x8, #0x2
  42af28:	add	x3, sp, #0x8
  42af2c:	mov	x0, x23
  42af30:	mov	x2, x22
  42af34:	add	x4, x4, #0x3c8
  42af38:	bl	42b4a0 <wcrtomb@plt+0x26680>
  42af3c:	cbz	w0, 42af9c <wcrtomb@plt+0x2617c>
  42af40:	ldrb	w8, [x19, #32]
  42af44:	tbnz	w8, #2, 42af78 <wcrtomb@plt+0x26158>
  42af48:	ldr	x8, [sp, #8]
  42af4c:	add	x9, x8, x23
  42af50:	ldrb	w9, [x9, #1]
  42af54:	cmp	w9, #0x28
  42af58:	b.ne	42af78 <wcrtomb@plt+0x26158>  // b.any
  42af5c:	add	x1, x8, #0x2
  42af60:	add	x3, sp, #0x8
  42af64:	mov	x0, x23
  42af68:	mov	x2, x22
  42af6c:	mov	x4, x26
  42af70:	bl	42b4a0 <wcrtomb@plt+0x26680>
  42af74:	cbz	w0, 42af9c <wcrtomb@plt+0x2617c>
  42af78:	cbnz	w20, 42af90 <wcrtomb@plt+0x26170>
  42af7c:	ldr	x8, [sp, #8]
  42af80:	ldr	x0, [x19, #56]
  42af84:	ldrb	w1, [x23, x8]
  42af88:	bl	404a70 <strchr@plt>
  42af8c:	cbnz	x0, 42afb4 <wcrtomb@plt+0x26194>
  42af90:	ldr	x8, [sp, #8]
  42af94:	add	x8, x8, #0x1
  42af98:	str	x8, [sp, #8]
  42af9c:	ldr	x27, [sp, #8]
  42afa0:	mov	w3, wzr
  42afa4:	cmp	x27, x22
  42afa8:	b.cc	42ae3c <wcrtomb@plt+0x2601c>  // b.lo, b.ul, b.last
  42afac:	b	42b018 <wcrtomb@plt+0x261f8>
  42afb0:	mov	w25, wzr
  42afb4:	mov	w3, wzr
  42afb8:	ldr	x2, [sp, #8]
  42afbc:	cbnz	w25, 42b020 <wcrtomb@plt+0x26200>
  42afc0:	b	42b03c <wcrtomb@plt+0x2621c>
  42afc4:	ldr	x0, [x19, #56]
  42afc8:	ldrb	w1, [x23, x21]
  42afcc:	bl	404a70 <strchr@plt>
  42afd0:	cbz	x0, 42ae24 <wcrtomb@plt+0x26004>
  42afd4:	tbnz	w26, #12, 42aff8 <wcrtomb@plt+0x261d8>
  42afd8:	ldrb	w8, [x19, #36]
  42afdc:	tbnz	w8, #7, 42aff8 <wcrtomb@plt+0x261d8>
  42afe0:	mov	w8, #0x100                 	// #256
  42afe4:	mov	w25, wzr
  42afe8:	bic	w3, w8, w26, lsr #3
  42afec:	ldr	x2, [sp, #8]
  42aff0:	cbnz	w25, 42b020 <wcrtomb@plt+0x26200>
  42aff4:	b	42b03c <wcrtomb@plt+0x2621c>
  42aff8:	add	x8, x21, #0x1
  42affc:	mov	w25, wzr
  42b000:	str	x8, [sp, #8]
  42b004:	mov	w3, #0x40                  	// #64
  42b008:	ldr	x2, [sp, #8]
  42b00c:	cbnz	w25, 42b020 <wcrtomb@plt+0x26200>
  42b010:	b	42b03c <wcrtomb@plt+0x2621c>
  42b014:	mov	w3, wzr
  42b018:	ldr	x2, [sp, #8]
  42b01c:	cbz	w25, 42b03c <wcrtomb@plt+0x2621c>
  42b020:	cmp	x2, x21
  42b024:	b.ls	42b03c <wcrtomb@plt+0x2621c>  // b.plast
  42b028:	ldr	x8, [x19, #216]
  42b02c:	cbz	x8, 42b03c <wcrtomb@plt+0x2621c>
  42b030:	ldr	w9, [x8, #16]
  42b034:	orr	w9, w9, #0x10
  42b038:	str	w9, [x8, #16]
  42b03c:	mov	x0, x19
  42b040:	mov	x1, x21
  42b044:	bl	42b38c <wcrtomb@plt+0x2656c>
  42b048:	cbz	w0, 42b054 <wcrtomb@plt+0x26234>
  42b04c:	mov	w0, #0x2                   	// #2
  42b050:	b	42b0d4 <wcrtomb@plt+0x262b4>
  42b054:	ldr	x8, [sp, #8]
  42b058:	ldrb	w9, [x19, #35]
  42b05c:	str	x8, [x19, #184]
  42b060:	tbnz	w9, #5, 42b08c <wcrtomb@plt+0x2626c>
  42b064:	cbz	w20, 42b0d0 <wcrtomb@plt+0x262b0>
  42b068:	cbnz	x28, 42b070 <wcrtomb@plt+0x26250>
  42b06c:	ldr	x28, [x19, #208]
  42b070:	cbz	x28, 42b0d0 <wcrtomb@plt+0x262b0>
  42b074:	ldr	w8, [x28, #16]
  42b078:	orr	w8, w8, #0x4
  42b07c:	str	w8, [x28, #16]
  42b080:	ldr	x28, [x28, #8]
  42b084:	cbnz	x28, 42b074 <wcrtomb@plt+0x26254>
  42b088:	b	42b0d0 <wcrtomb@plt+0x262b0>
  42b08c:	mov	w0, wzr
  42b090:	b	42b0d4 <wcrtomb@plt+0x262b4>
  42b094:	add	x8, x27, #0x1
  42b098:	mov	x20, x8
  42b09c:	cmp	x8, x22
  42b0a0:	b.cs	42b0b4 <wcrtomb@plt+0x26294>  // b.hs, b.nlast
  42b0a4:	ldrb	w8, [x23, x20]
  42b0a8:	cmp	w8, #0xa
  42b0ac:	add	x8, x20, #0x1
  42b0b0:	b.ne	42b098 <wcrtomb@plt+0x26278>  // b.any
  42b0b4:	mov	x0, x19
  42b0b8:	mov	x1, x21
  42b0bc:	mov	x2, x27
  42b0c0:	mov	w3, wzr
  42b0c4:	bl	42b38c <wcrtomb@plt+0x2656c>
  42b0c8:	cbnz	w0, 42b04c <wcrtomb@plt+0x2622c>
  42b0cc:	str	x20, [x19, #184]
  42b0d0:	mov	w0, #0x1                   	// #1
  42b0d4:	ldp	x20, x19, [sp, #96]
  42b0d8:	ldp	x22, x21, [sp, #80]
  42b0dc:	ldp	x24, x23, [sp, #64]
  42b0e0:	ldp	x26, x25, [sp, #48]
  42b0e4:	ldp	x28, x27, [sp, #32]
  42b0e8:	ldp	x29, x30, [sp, #16]
  42b0ec:	add	sp, sp, #0x70
  42b0f0:	ret
  42b0f4:	stp	x29, x30, [sp, #-96]!
  42b0f8:	stp	x26, x25, [sp, #32]
  42b0fc:	stp	x24, x23, [sp, #48]
  42b100:	stp	x22, x21, [sp, #64]
  42b104:	stp	x20, x19, [sp, #80]
  42b108:	ldr	x20, [x0, #208]
  42b10c:	str	x27, [sp, #16]
  42b110:	mov	x29, sp
  42b114:	cbz	x20, 42b1b4 <wcrtomb@plt+0x26394>
  42b118:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x18da0>
  42b11c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42b120:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x18da0>
  42b124:	mov	x19, x0
  42b128:	mov	w21, wzr
  42b12c:	add	x22, x22, #0x3ed
  42b130:	add	x23, x23, #0xd98
  42b134:	add	x24, x24, #0x3ce
  42b138:	b	42b178 <wcrtomb@plt+0x26358>
  42b13c:	ldr	w8, [x20, #32]
  42b140:	ldr	x9, [x20, #24]
  42b144:	ldr	x10, [x19, #168]
  42b148:	mov	x0, x22
  42b14c:	mov	w1, w26
  42b150:	sub	w6, w8, w9
  42b154:	add	x7, x10, x9
  42b158:	mov	w2, w21
  42b15c:	mov	x3, x20
  42b160:	mov	w4, w25
  42b164:	mov	x5, x23
  42b168:	blr	x27
  42b16c:	ldr	x20, [x20, #8]
  42b170:	add	w21, w21, #0x1
  42b174:	cbz	x20, 42b1b4 <wcrtomb@plt+0x26394>
  42b178:	ldr	w25, [x20, #16]
  42b17c:	ldr	x27, [x19, #104]
  42b180:	ldr	w26, [x19, #224]
  42b184:	mov	w0, w25
  42b188:	bl	42b5d8 <wcrtomb@plt+0x267b8>
  42b18c:	tbz	w25, #1, 42b13c <wcrtomb@plt+0x2631c>
  42b190:	ldr	x6, [x20, #24]
  42b194:	mov	x0, x24
  42b198:	mov	w1, w26
  42b19c:	mov	w2, w21
  42b1a0:	mov	x3, x20
  42b1a4:	mov	w4, w25
  42b1a8:	mov	x5, x23
  42b1ac:	blr	x27
  42b1b0:	b	42b16c <wcrtomb@plt+0x2634c>
  42b1b4:	ldp	x20, x19, [sp, #80]
  42b1b8:	ldp	x22, x21, [sp, #64]
  42b1bc:	ldp	x24, x23, [sp, #48]
  42b1c0:	ldp	x26, x25, [sp, #32]
  42b1c4:	ldr	x27, [sp, #16]
  42b1c8:	ldp	x29, x30, [sp], #96
  42b1cc:	ret
  42b1d0:	ldr	w8, [x1, #32]
  42b1d4:	ldp	w9, w10, [x0, #8]
  42b1d8:	and	w8, w9, w8
  42b1dc:	cmp	w8, w9
  42b1e0:	cset	w9, eq  // eq = none
  42b1e4:	tst	w10, #0x2
  42b1e8:	csel	w8, w8, w9, eq  // eq = none
  42b1ec:	cmp	w8, #0x0
  42b1f0:	cset	w9, eq  // eq = none
  42b1f4:	tst	w10, #0x1
  42b1f8:	csel	w0, w8, w9, eq  // eq = none
  42b1fc:	ret
  42b200:	stp	x29, x30, [sp, #-32]!
  42b204:	stp	x20, x19, [sp, #16]
  42b208:	ldr	x20, [x0, #208]
  42b20c:	mov	x29, sp
  42b210:	cbz	x20, 42b244 <wcrtomb@plt+0x26424>
  42b214:	mov	x19, x0
  42b218:	b	42b224 <wcrtomb@plt+0x26404>
  42b21c:	ldr	x20, [x20, #8]
  42b220:	cbz	x20, 42b244 <wcrtomb@plt+0x26424>
  42b224:	ldrb	w8, [x20, #16]
  42b228:	tbz	w8, #4, 42b21c <wcrtomb@plt+0x263fc>
  42b22c:	mov	x0, x19
  42b230:	mov	x1, x20
  42b234:	bl	42aafc <wcrtomb@plt+0x25cdc>
  42b238:	cbz	w0, 42b21c <wcrtomb@plt+0x263fc>
  42b23c:	mov	w0, #0x1                   	// #1
  42b240:	b	42b248 <wcrtomb@plt+0x26428>
  42b244:	mov	w0, wzr
  42b248:	ldp	x20, x19, [sp, #16]
  42b24c:	ldp	x29, x30, [sp], #32
  42b250:	ret
  42b254:	stp	x29, x30, [sp, #-64]!
  42b258:	stp	x22, x21, [sp, #32]
  42b25c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x18da0>
  42b260:	stp	x20, x19, [sp, #48]
  42b264:	mov	x20, x2
  42b268:	mov	x19, x1
  42b26c:	mov	x21, x0
  42b270:	add	x22, x22, #0x3a7
  42b274:	str	x23, [sp, #16]
  42b278:	mov	x29, sp
  42b27c:	ldrb	w8, [x21, x19]
  42b280:	mov	w9, wzr
  42b284:	cmp	w8, #0x3b
  42b288:	cinc	x19, x19, eq  // eq = none
  42b28c:	ldrb	w8, [x21, x19]
  42b290:	cmp	w8, #0x73
  42b294:	mov	w8, #0x3                   	// #3
  42b298:	b.ne	42b340 <wcrtomb@plt+0x26520>  // b.any
  42b29c:	add	x10, x19, #0x3
  42b2a0:	cmp	x10, x20
  42b2a4:	b.cs	42b340 <wcrtomb@plt+0x26520>  // b.hs, b.nlast
  42b2a8:	add	x8, x19, x21
  42b2ac:	ldrb	w23, [x8, #1]
  42b2b0:	mov	w2, #0x21                  	// #33
  42b2b4:	mov	x0, x22
  42b2b8:	mov	w1, w23
  42b2bc:	bl	404b70 <memchr@plt>
  42b2c0:	cbz	x0, 42b364 <wcrtomb@plt+0x26544>
  42b2c4:	add	x19, x19, #0x2
  42b2c8:	mov	w8, #0x1                   	// #1
  42b2cc:	cmp	x19, x20
  42b2d0:	b.cc	42b2ec <wcrtomb@plt+0x264cc>  // b.lo, b.ul, b.last
  42b2d4:	b	42b33c <wcrtomb@plt+0x2651c>
  42b2d8:	cmp	w9, w23
  42b2dc:	cinc	w8, w8, eq  // eq = none
  42b2e0:	add	x19, x19, #0x1
  42b2e4:	cmp	x19, x20
  42b2e8:	b.cs	42b33c <wcrtomb@plt+0x2651c>  // b.hs, b.nlast
  42b2ec:	ldrb	w9, [x21, x19]
  42b2f0:	cmp	w8, #0x3
  42b2f4:	b.ne	42b324 <wcrtomb@plt+0x26504>  // b.any
  42b2f8:	cmp	w9, w23
  42b2fc:	b.eq	42b33c <wcrtomb@plt+0x2651c>  // b.none
  42b300:	sub	w10, w9, #0x30
  42b304:	cmp	w10, #0xa
  42b308:	b.cc	42b2e0 <wcrtomb@plt+0x264c0>  // b.lo, b.ul, b.last
  42b30c:	and	w9, w9, #0xffffffdf
  42b310:	sub	w9, w9, #0x41
  42b314:	and	w9, w9, #0xff
  42b318:	cmp	w9, #0x1a
  42b31c:	b.cc	42b2e0 <wcrtomb@plt+0x264c0>  // b.lo, b.ul, b.last
  42b320:	b	42b33c <wcrtomb@plt+0x2651c>
  42b324:	cmp	w9, #0x5c
  42b328:	b.ne	42b2d8 <wcrtomb@plt+0x264b8>  // b.any
  42b32c:	add	x19, x19, #0x1
  42b330:	add	x19, x19, #0x1
  42b334:	cmp	x19, x20
  42b338:	b.cc	42b2ec <wcrtomb@plt+0x264cc>  // b.lo, b.ul, b.last
  42b33c:	mov	w9, #0x1                   	// #1
  42b340:	cmp	x19, x20
  42b344:	b.cs	42b374 <wcrtomb@plt+0x26554>  // b.hs, b.nlast
  42b348:	cmp	w8, #0x3
  42b34c:	b.ne	42b374 <wcrtomb@plt+0x26554>  // b.any
  42b350:	cbz	w9, 42b374 <wcrtomb@plt+0x26554>
  42b354:	ldrb	w8, [x21, x19]
  42b358:	cmp	w8, #0x3b
  42b35c:	b.eq	42b27c <wcrtomb@plt+0x2645c>  // b.none
  42b360:	b	42b374 <wcrtomb@plt+0x26554>
  42b364:	mov	w9, wzr
  42b368:	mov	w8, #0x3                   	// #3
  42b36c:	cmp	x19, x20
  42b370:	b.cc	42b348 <wcrtomb@plt+0x26528>  // b.lo, b.ul, b.last
  42b374:	mov	w0, w19
  42b378:	ldp	x20, x19, [sp, #48]
  42b37c:	ldp	x22, x21, [sp, #32]
  42b380:	ldr	x23, [sp, #16]
  42b384:	ldp	x29, x30, [sp], #64
  42b388:	ret
  42b38c:	sub	sp, sp, #0x40
  42b390:	stp	x22, x21, [sp, #32]
  42b394:	stp	x20, x19, [sp, #48]
  42b398:	mov	w21, w3
  42b39c:	mov	x19, x2
  42b3a0:	mov	x22, x1
  42b3a4:	cmp	x2, x1
  42b3a8:	mov	x20, x0
  42b3ac:	stp	x29, x30, [sp, #16]
  42b3b0:	add	x29, sp, #0x10
  42b3b4:	b.ne	42b3bc <wcrtomb@plt+0x2659c>  // b.any
  42b3b8:	tbz	w21, #8, 42b3e8 <wcrtomb@plt+0x265c8>
  42b3bc:	add	x1, sp, #0x8
  42b3c0:	mov	x0, x20
  42b3c4:	bl	42b564 <wcrtomb@plt+0x26744>
  42b3c8:	cbnz	w0, 42b3ec <wcrtomb@plt+0x265cc>
  42b3cc:	ldr	x1, [sp, #8]
  42b3d0:	mov	w8, #0xfffffefd            	// #-259
  42b3d4:	and	w8, w21, w8
  42b3d8:	mov	x0, x20
  42b3dc:	str	w8, [x1, #16]
  42b3e0:	stp	x22, x19, [x1, #24]
  42b3e4:	bl	42b5ac <wcrtomb@plt+0x2678c>
  42b3e8:	mov	w0, wzr
  42b3ec:	ldp	x20, x19, [sp, #48]
  42b3f0:	ldp	x22, x21, [sp, #32]
  42b3f4:	ldp	x29, x30, [sp, #16]
  42b3f8:	add	sp, sp, #0x40
  42b3fc:	ret
  42b400:	stp	x29, x30, [sp, #-32]!
  42b404:	stp	x20, x19, [sp, #16]
  42b408:	ldr	x9, [x0, #176]
  42b40c:	mov	x8, x1
  42b410:	add	x1, x1, #0x1
  42b414:	mov	x29, sp
  42b418:	cmp	x1, x9
  42b41c:	b.cs	42b460 <wcrtomb@plt+0x26640>  // b.hs, b.nlast
  42b420:	ldr	x10, [x0, #168]
  42b424:	mov	x19, x2
  42b428:	mov	x20, x1
  42b42c:	ldrb	w11, [x10, x8]
  42b430:	ldrb	w12, [x10, x20]
  42b434:	cmp	w12, w11
  42b438:	b.eq	42b47c <wcrtomb@plt+0x2665c>  // b.none
  42b43c:	cmp	w11, #0x22
  42b440:	cset	w13, eq  // eq = none
  42b444:	cmp	w12, #0x5c
  42b448:	cset	w12, eq  // eq = none
  42b44c:	and	w12, w13, w12
  42b450:	add	x12, x20, x12
  42b454:	add	x20, x12, #0x1
  42b458:	cmp	x20, x9
  42b45c:	b.cc	42b430 <wcrtomb@plt+0x26610>  // b.lo, b.ul, b.last
  42b460:	mov	w1, #0x1                   	// #1
  42b464:	str	x8, [x0, #184]
  42b468:	bl	42a2cc <wcrtomb@plt+0x254ac>
  42b46c:	mov	w0, #0x2                   	// #2
  42b470:	ldp	x20, x19, [sp, #16]
  42b474:	ldp	x29, x30, [sp], #32
  42b478:	ret
  42b47c:	cmp	w11, #0x27
  42b480:	mov	w8, #0x104                 	// #260
  42b484:	mov	w9, #0x10c                 	// #268
  42b488:	csel	w3, w9, w8, eq  // eq = none
  42b48c:	mov	x2, x20
  42b490:	bl	42b38c <wcrtomb@plt+0x2656c>
  42b494:	cbnz	w0, 42b46c <wcrtomb@plt+0x2664c>
  42b498:	str	x20, [x19]
  42b49c:	b	42b470 <wcrtomb@plt+0x26650>
  42b4a0:	cmp	x1, x2
  42b4a4:	b.cs	42b55c <wcrtomb@plt+0x2673c>  // b.hs, b.nlast
  42b4a8:	mov	w9, wzr
  42b4ac:	mov	w8, #0x1                   	// #1
  42b4b0:	b	42b4cc <wcrtomb@plt+0x266ac>
  42b4b4:	ldrb	w10, [x0, x1]
  42b4b8:	cmp	w10, #0x27
  42b4bc:	csel	w9, wzr, w9, eq  // eq = none
  42b4c0:	add	x1, x1, #0x1
  42b4c4:	cmp	x1, x2
  42b4c8:	b.cs	42b55c <wcrtomb@plt+0x2673c>  // b.hs, b.nlast
  42b4cc:	cmp	w9, #0x2
  42b4d0:	b.eq	42b4fc <wcrtomb@plt+0x266dc>  // b.none
  42b4d4:	cmp	w9, #0x1
  42b4d8:	b.eq	42b4b4 <wcrtomb@plt+0x26694>  // b.none
  42b4dc:	cbnz	w9, 42b4c0 <wcrtomb@plt+0x266a0>
  42b4e0:	ldrb	w10, [x0, x1]
  42b4e4:	cmp	w10, #0x22
  42b4e8:	b.eq	42b518 <wcrtomb@plt+0x266f8>  // b.none
  42b4ec:	cmp	w10, #0x27
  42b4f0:	b.ne	42b520 <wcrtomb@plt+0x26700>  // b.any
  42b4f4:	mov	w9, #0x1                   	// #1
  42b4f8:	b	42b4c0 <wcrtomb@plt+0x266a0>
  42b4fc:	ldrb	w10, [x0, x1]
  42b500:	cmp	w10, #0x22
  42b504:	b.eq	42b534 <wcrtomb@plt+0x26714>  // b.none
  42b508:	cmp	w10, #0x5c
  42b50c:	b.ne	42b4c0 <wcrtomb@plt+0x266a0>  // b.any
  42b510:	add	x1, x1, #0x1
  42b514:	b	42b4c0 <wcrtomb@plt+0x266a0>
  42b518:	mov	w9, #0x2                   	// #2
  42b51c:	b	42b4c0 <wcrtomb@plt+0x266a0>
  42b520:	ldrb	w11, [x4]
  42b524:	cmp	w10, w11
  42b528:	b.ne	42b53c <wcrtomb@plt+0x2671c>  // b.any
  42b52c:	add	x8, x8, #0x1
  42b530:	b	42b4c0 <wcrtomb@plt+0x266a0>
  42b534:	mov	w9, wzr
  42b538:	b	42b4c0 <wcrtomb@plt+0x266a0>
  42b53c:	ldrb	w11, [x4, #1]
  42b540:	cmp	w10, w11
  42b544:	b.ne	42b4c0 <wcrtomb@plt+0x266a0>  // b.any
  42b548:	subs	x8, x8, #0x1
  42b54c:	b.ne	42b4c0 <wcrtomb@plt+0x266a0>  // b.any
  42b550:	mov	w0, wzr
  42b554:	str	x1, [x3]
  42b558:	ret
  42b55c:	mov	w0, #0x1                   	// #1
  42b560:	ret
  42b564:	stp	x29, x30, [sp, #-32]!
  42b568:	stp	x20, x19, [sp, #16]
  42b56c:	mov	x19, x1
  42b570:	mov	x20, x0
  42b574:	mov	w0, #0x1                   	// #1
  42b578:	mov	w1, #0x28                  	// #40
  42b57c:	mov	x29, sp
  42b580:	bl	4046a0 <calloc@plt>
  42b584:	cbz	x0, 42b598 <wcrtomb@plt+0x26778>
  42b588:	mov	x8, x0
  42b58c:	mov	w0, wzr
  42b590:	str	x8, [x19]
  42b594:	b	42b5a0 <wcrtomb@plt+0x26780>
  42b598:	mov	x0, x20
  42b59c:	bl	429b94 <wcrtomb@plt+0x24d74>
  42b5a0:	ldp	x20, x19, [sp, #16]
  42b5a4:	ldp	x29, x30, [sp], #32
  42b5a8:	ret
  42b5ac:	str	xzr, [x1, #8]
  42b5b0:	ldr	x8, [x0, #216]
  42b5b4:	add	x9, x0, #0xd0
  42b5b8:	str	x8, [x1]
  42b5bc:	ldr	x8, [x0, #216]
  42b5c0:	add	x10, x8, #0x8
  42b5c4:	cmp	x8, #0x0
  42b5c8:	csel	x8, x9, x10, eq  // eq = none
  42b5cc:	str	x1, [x8]
  42b5d0:	str	x1, [x0, #216]
  42b5d4:	ret
  42b5d8:	tst	w0, #0x1
  42b5dc:	mov	w8, #0x6e                  	// #110
  42b5e0:	mov	w9, #0x2d                  	// #45
  42b5e4:	mov	w10, #0x77                  	// #119
  42b5e8:	csel	w8, w9, w8, eq  // eq = none
  42b5ec:	tst	w0, #0x2
  42b5f0:	csel	w8, w8, w10, eq  // eq = none
  42b5f4:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42b5f8:	add	x10, x10, #0xd98
  42b5fc:	strb	w8, [x10]
  42b600:	mov	w8, #0x71                  	// #113
  42b604:	tst	w0, #0x4
  42b608:	csel	w8, w9, w8, eq  // eq = none
  42b60c:	strb	w8, [x10, #1]
  42b610:	mov	w8, #0x45                  	// #69
  42b614:	tst	w0, #0x8
  42b618:	csel	w8, w9, w8, eq  // eq = none
  42b61c:	strb	w8, [x10, #2]
  42b620:	mov	w8, #0x6a                  	// #106
  42b624:	tst	w0, #0x10
  42b628:	csel	w8, w9, w8, eq  // eq = none
  42b62c:	strb	w8, [x10, #3]
  42b630:	mov	w8, #0x73                  	// #115
  42b634:	tst	w0, #0x20
  42b638:	csel	w8, w9, w8, eq  // eq = none
  42b63c:	tst	w0, #0x40
  42b640:	mov	w11, #0x64                  	// #100
  42b644:	strb	w8, [x10, #4]
  42b648:	csel	w8, w9, w11, eq  // eq = none
  42b64c:	strb	w8, [x10, #5]
  42b650:	strb	wzr, [x10, #6]
  42b654:	ret
  42b658:	stp	x29, x30, [sp, #-16]!
  42b65c:	ldr	x11, [x0, #208]
  42b660:	mov	x29, sp
  42b664:	cbz	x11, 42b734 <wcrtomb@plt+0x26914>
  42b668:	mov	x9, #0x600                 	// #1536
  42b66c:	mov	w8, #0x1                   	// #1
  42b670:	movk	x9, #0x1, lsl #32
  42b674:	b	42b680 <wcrtomb@plt+0x26860>
  42b678:	ldr	x11, [x10, #8]
  42b67c:	cbz	x11, 42b734 <wcrtomb@plt+0x26914>
  42b680:	ldrb	w10, [x11, #16]
  42b684:	tbnz	w10, #2, 42b6c4 <wcrtomb@plt+0x268a4>
  42b688:	ldp	x10, x12, [x11, #24]
  42b68c:	cmp	x10, x12
  42b690:	b.cs	42b6c0 <wcrtomb@plt+0x268a0>  // b.hs, b.nlast
  42b694:	ldr	x12, [x0, #168]
  42b698:	ldrb	w13, [x12, x10]
  42b69c:	cmp	w13, #0x20
  42b6a0:	b.hi	42b6c0 <wcrtomb@plt+0x268a0>  // b.pmore
  42b6a4:	lsl	x13, x8, x13
  42b6a8:	tst	x13, x9
  42b6ac:	b.eq	42b6c0 <wcrtomb@plt+0x268a0>  // b.none
  42b6b0:	ldr	x13, [x11, #32]
  42b6b4:	add	x10, x10, #0x1
  42b6b8:	cmp	x10, x13
  42b6bc:	b.cc	42b698 <wcrtomb@plt+0x26878>  // b.lo, b.ul, b.last
  42b6c0:	str	x10, [x11, #24]
  42b6c4:	mov	x10, x11
  42b6c8:	ldr	x11, [x11, #8]
  42b6cc:	cbz	x11, 42b6d8 <wcrtomb@plt+0x268b8>
  42b6d0:	ldrb	w12, [x10, #16]
  42b6d4:	tbnz	w12, #4, 42b6c4 <wcrtomb@plt+0x268a4>
  42b6d8:	ldr	w11, [x10, #16]
  42b6dc:	tbnz	w11, #2, 42b678 <wcrtomb@plt+0x26858>
  42b6e0:	ldp	x13, x12, [x10, #24]
  42b6e4:	cmp	x12, x13
  42b6e8:	b.ls	42b71c <wcrtomb@plt+0x268fc>  // b.plast
  42b6ec:	ldr	x14, [x0, #168]
  42b6f0:	sub	x14, x14, #0x1
  42b6f4:	ldrb	w15, [x14, x12]
  42b6f8:	cmp	w15, #0x20
  42b6fc:	b.hi	42b71c <wcrtomb@plt+0x268fc>  // b.pmore
  42b700:	lsl	x15, x8, x15
  42b704:	tst	x15, x9
  42b708:	b.eq	42b71c <wcrtomb@plt+0x268fc>  // b.none
  42b70c:	ldr	x13, [x10, #24]
  42b710:	sub	x12, x12, #0x1
  42b714:	cmp	x12, x13
  42b718:	b.hi	42b6f4 <wcrtomb@plt+0x268d4>  // b.pmore
  42b71c:	cmp	x13, x12
  42b720:	str	x12, [x10, #32]
  42b724:	b.ne	42b678 <wcrtomb@plt+0x26858>  // b.any
  42b728:	orr	w11, w11, #0x1
  42b72c:	str	w11, [x10, #16]
  42b730:	b	42b678 <wcrtomb@plt+0x26858>
  42b734:	bl	42be58 <wcrtomb@plt+0x27038>
  42b738:	mov	w0, wzr
  42b73c:	ldp	x29, x30, [sp], #16
  42b740:	ret
  42b744:	stp	x29, x30, [sp, #-64]!
  42b748:	stp	x22, x21, [sp, #32]
  42b74c:	stp	x20, x19, [sp, #48]
  42b750:	ldr	x22, [x0, #208]
  42b754:	adrp	x20, 42c000 <wcrtomb@plt+0x271e0>
  42b758:	adrp	x21, 42c000 <wcrtomb@plt+0x271e0>
  42b75c:	mov	x19, x0
  42b760:	add	x20, x20, #0xa4
  42b764:	add	x21, x21, #0xb0
  42b768:	str	x23, [sp, #16]
  42b76c:	mov	x29, sp
  42b770:	b	42b780 <wcrtomb@plt+0x26960>
  42b774:	mov	w8, #0x1                   	// #1
  42b778:	mov	x22, x23
  42b77c:	tbz	w8, #0, 42b7b0 <wcrtomb@plt+0x26990>
  42b780:	cbz	x22, 42b7b8 <wcrtomb@plt+0x26998>
  42b784:	ldrb	w8, [x22, #16]
  42b788:	ldr	x23, [x22, #8]
  42b78c:	tbnz	w8, #3, 42b774 <wcrtomb@plt+0x26954>
  42b790:	mov	x0, x19
  42b794:	mov	x1, x22
  42b798:	mov	x2, x20
  42b79c:	mov	x3, x21
  42b7a0:	bl	42bed0 <wcrtomb@plt+0x270b0>
  42b7a4:	cbz	w0, 42b774 <wcrtomb@plt+0x26954>
  42b7a8:	mov	w8, wzr
  42b7ac:	tbnz	w8, #0, 42b780 <wcrtomb@plt+0x26960>
  42b7b0:	mov	w0, #0x1                   	// #1
  42b7b4:	b	42b7c4 <wcrtomb@plt+0x269a4>
  42b7b8:	mov	x0, x19
  42b7bc:	bl	42be58 <wcrtomb@plt+0x27038>
  42b7c0:	mov	w0, wzr
  42b7c4:	ldp	x20, x19, [sp, #48]
  42b7c8:	ldp	x22, x21, [sp, #32]
  42b7cc:	ldr	x23, [sp, #16]
  42b7d0:	ldp	x29, x30, [sp], #64
  42b7d4:	ret
  42b7d8:	sub	sp, sp, #0x70
  42b7dc:	stp	x29, x30, [sp, #16]
  42b7e0:	stp	x28, x27, [sp, #32]
  42b7e4:	stp	x26, x25, [sp, #48]
  42b7e8:	stp	x24, x23, [sp, #64]
  42b7ec:	stp	x22, x21, [sp, #80]
  42b7f0:	stp	x20, x19, [sp, #96]
  42b7f4:	ldr	x20, [x0, #208]
  42b7f8:	add	x29, sp, #0x10
  42b7fc:	cbz	x20, 42b9bc <wcrtomb@plt+0x26b9c>
  42b800:	mov	x19, x0
  42b804:	mov	x21, xzr
  42b808:	mov	x22, xzr
  42b80c:	ldrb	w8, [x20, #16]
  42b810:	tbnz	w8, #2, 42b874 <wcrtomb@plt+0x26a54>
  42b814:	mov	x0, x19
  42b818:	mov	x1, x20
  42b81c:	bl	42a9c0 <wcrtomb@plt+0x25ba0>
  42b820:	ldrb	w8, [x0]
  42b824:	cmp	w8, #0x7e
  42b828:	b.ne	42b9a0 <wcrtomb@plt+0x26b80>  // b.any
  42b82c:	mov	x23, x0
  42b830:	mov	x0, x20
  42b834:	bl	42aabc <wcrtomb@plt+0x25c9c>
  42b838:	mov	x25, x0
  42b83c:	mov	w24, #0x1                   	// #1
  42b840:	cmp	x0, #0x2
  42b844:	b.cc	42b864 <wcrtomb@plt+0x26a44>  // b.lo, b.ul, b.last
  42b848:	ldrb	w8, [x23, x24]
  42b84c:	cmp	w8, #0x2f
  42b850:	b.eq	42b864 <wcrtomb@plt+0x26a44>  // b.none
  42b854:	add	x24, x24, #0x1
  42b858:	cmp	x25, x24
  42b85c:	b.ne	42b848 <wcrtomb@plt+0x26a28>  // b.any
  42b860:	mov	x24, x25
  42b864:	cmp	x24, x25
  42b868:	b.ne	42b87c <wcrtomb@plt+0x26a5c>  // b.any
  42b86c:	mov	w8, #0x4                   	// #4
  42b870:	b	42b99c <wcrtomb@plt+0x26b7c>
  42b874:	mov	w8, #0x4                   	// #4
  42b878:	b	42b9a4 <wcrtomb@plt+0x26b84>
  42b87c:	cmp	x24, #0x2
  42b880:	b.cc	42b8b0 <wcrtomb@plt+0x26a90>  // b.lo, b.ul, b.last
  42b884:	cmp	x24, x22
  42b888:	b.ls	42b8e0 <wcrtomb@plt+0x26ac0>  // b.plast
  42b88c:	mov	x0, x21
  42b890:	mov	x1, x24
  42b894:	bl	404730 <realloc@plt>
  42b898:	cbz	x0, 42b8c4 <wcrtomb@plt+0x26aa4>
  42b89c:	mov	w8, wzr
  42b8a0:	mov	x22, x24
  42b8a4:	mov	x21, x0
  42b8a8:	cbnz	w8, 42b99c <wcrtomb@plt+0x26b7c>
  42b8ac:	b	42b8e0 <wcrtomb@plt+0x26ac0>
  42b8b0:	bl	4042e0 <getuid@plt>
  42b8b4:	bl	404930 <getpwuid@plt>
  42b8b8:	mov	x26, x0
  42b8bc:	cbnz	x0, 42b908 <wcrtomb@plt+0x26ae8>
  42b8c0:	b	42b86c <wcrtomb@plt+0x26a4c>
  42b8c4:	mov	x0, x21
  42b8c8:	bl	4049d0 <free@plt>
  42b8cc:	mov	x0, x19
  42b8d0:	bl	429b94 <wcrtomb@plt+0x24d74>
  42b8d4:	mov	w8, #0x1                   	// #1
  42b8d8:	str	w0, [sp, #4]
  42b8dc:	cbnz	w8, 42b99c <wcrtomb@plt+0x26b7c>
  42b8e0:	sub	x24, x24, #0x1
  42b8e4:	add	x1, x23, #0x1
  42b8e8:	mov	x0, x21
  42b8ec:	mov	x2, x24
  42b8f0:	bl	404110 <memcpy@plt>
  42b8f4:	mov	x0, x21
  42b8f8:	strb	wzr, [x21, x24]
  42b8fc:	bl	404630 <getpwnam@plt>
  42b900:	mov	x26, x0
  42b904:	cbz	x0, 42b86c <wcrtomb@plt+0x26a4c>
  42b908:	ldr	x0, [x26, #32]
  42b90c:	str	x22, [sp, #8]
  42b910:	bl	404190 <strlen@plt>
  42b914:	sub	x22, x25, x24
  42b918:	add	x28, x0, x22
  42b91c:	mov	x27, x0
  42b920:	mov	x0, x28
  42b924:	bl	4044f0 <malloc@plt>
  42b928:	cbz	x0, 42b980 <wcrtomb@plt+0x26b60>
  42b92c:	ldr	x1, [x26, #32]
  42b930:	mov	x2, x27
  42b934:	mov	x25, x0
  42b938:	add	x26, x28, x0
  42b93c:	bl	404110 <memcpy@plt>
  42b940:	add	x8, x23, x24
  42b944:	add	x0, x25, x27
  42b948:	add	x1, x8, #0x1
  42b94c:	sub	x2, x22, #0x1
  42b950:	bl	404110 <memcpy@plt>
  42b954:	sturb	wzr, [x26, #-1]
  42b958:	ldrb	w8, [x20, #16]
  42b95c:	tbz	w8, #1, 42b968 <wcrtomb@plt+0x26b48>
  42b960:	ldr	x0, [x20, #24]
  42b964:	bl	4049d0 <free@plt>
  42b968:	ldr	w9, [x20, #16]
  42b96c:	mov	w8, wzr
  42b970:	str	x25, [x20, #24]
  42b974:	orr	w9, w9, #0x2
  42b978:	str	w9, [x20, #16]
  42b97c:	b	42b998 <wcrtomb@plt+0x26b78>
  42b980:	mov	x0, x21
  42b984:	bl	4049d0 <free@plt>
  42b988:	mov	x0, x19
  42b98c:	bl	429b94 <wcrtomb@plt+0x24d74>
  42b990:	str	w0, [sp, #4]
  42b994:	mov	w8, #0x1                   	// #1
  42b998:	ldr	x22, [sp, #8]
  42b99c:	cbnz	w8, 42b9a4 <wcrtomb@plt+0x26b84>
  42b9a0:	mov	w8, wzr
  42b9a4:	orr	w8, w8, #0x4
  42b9a8:	cmp	w8, #0x4
  42b9ac:	b.ne	42b9d0 <wcrtomb@plt+0x26bb0>  // b.any
  42b9b0:	ldr	x20, [x20, #8]
  42b9b4:	cbnz	x20, 42b80c <wcrtomb@plt+0x269ec>
  42b9b8:	b	42b9c0 <wcrtomb@plt+0x26ba0>
  42b9bc:	mov	x21, xzr
  42b9c0:	mov	x0, x21
  42b9c4:	bl	4049d0 <free@plt>
  42b9c8:	mov	w0, wzr
  42b9cc:	b	42b9d4 <wcrtomb@plt+0x26bb4>
  42b9d0:	ldr	w0, [sp, #4]
  42b9d4:	ldp	x20, x19, [sp, #96]
  42b9d8:	ldp	x22, x21, [sp, #80]
  42b9dc:	ldp	x24, x23, [sp, #64]
  42b9e0:	ldp	x26, x25, [sp, #48]
  42b9e4:	ldp	x28, x27, [sp, #32]
  42b9e8:	ldp	x29, x30, [sp, #16]
  42b9ec:	add	sp, sp, #0x70
  42b9f0:	ret
  42b9f4:	stp	x29, x30, [sp, #-64]!
  42b9f8:	stp	x24, x23, [sp, #16]
  42b9fc:	stp	x22, x21, [sp, #32]
  42ba00:	stp	x20, x19, [sp, #48]
  42ba04:	ldr	x22, [x0, #208]
  42ba08:	adrp	x20, 42c000 <wcrtomb@plt+0x271e0>
  42ba0c:	adrp	x21, 42c000 <wcrtomb@plt+0x271e0>
  42ba10:	mov	x19, x0
  42ba14:	mov	w23, #0x48                  	// #72
  42ba18:	add	x20, x20, #0x64c
  42ba1c:	add	x21, x21, #0x678
  42ba20:	mov	x29, sp
  42ba24:	b	42ba34 <wcrtomb@plt+0x26c14>
  42ba28:	mov	w8, #0x1                   	// #1
  42ba2c:	mov	x22, x24
  42ba30:	tbz	w8, #0, 42ba68 <wcrtomb@plt+0x26c48>
  42ba34:	cbz	x22, 42ba70 <wcrtomb@plt+0x26c50>
  42ba38:	ldrb	w8, [x22, #16]
  42ba3c:	ldr	x24, [x22, #8]
  42ba40:	tst	w8, w23
  42ba44:	b.ne	42ba28 <wcrtomb@plt+0x26c08>  // b.any
  42ba48:	mov	x0, x19
  42ba4c:	mov	x1, x22
  42ba50:	mov	x2, x20
  42ba54:	mov	x3, x21
  42ba58:	bl	42bed0 <wcrtomb@plt+0x270b0>
  42ba5c:	cbz	w0, 42ba28 <wcrtomb@plt+0x26c08>
  42ba60:	mov	w8, wzr
  42ba64:	tbnz	w8, #0, 42ba34 <wcrtomb@plt+0x26c14>
  42ba68:	mov	w0, #0x1                   	// #1
  42ba6c:	b	42ba7c <wcrtomb@plt+0x26c5c>
  42ba70:	mov	x0, x19
  42ba74:	bl	42be58 <wcrtomb@plt+0x27038>
  42ba78:	mov	w0, wzr
  42ba7c:	ldp	x20, x19, [sp, #48]
  42ba80:	ldp	x22, x21, [sp, #32]
  42ba84:	ldp	x24, x23, [sp, #16]
  42ba88:	ldp	x29, x30, [sp], #64
  42ba8c:	ret
  42ba90:	stp	x29, x30, [sp, #-80]!
  42ba94:	stp	x24, x23, [sp, #32]
  42ba98:	stp	x22, x21, [sp, #48]
  42ba9c:	stp	x20, x19, [sp, #64]
  42baa0:	ldr	x20, [x0, #208]
  42baa4:	str	x25, [sp, #16]
  42baa8:	mov	x29, sp
  42baac:	cbz	x20, 42bb80 <wcrtomb@plt+0x26d60>
  42bab0:	mov	x19, x0
  42bab4:	mov	w25, #0x1                   	// #1
  42bab8:	mov	x0, x19
  42babc:	mov	x1, x20
  42bac0:	bl	42a9c0 <wcrtomb@plt+0x25ba0>
  42bac4:	mov	x22, x0
  42bac8:	mov	x0, x20
  42bacc:	bl	42aabc <wcrtomb@plt+0x25c9c>
  42bad0:	ldrb	w8, [x19, #33]
  42bad4:	mov	x23, x0
  42bad8:	tst	w8, #0x6
  42badc:	b.eq	42baf0 <wcrtomb@plt+0x26cd0>  // b.none
  42bae0:	ldr	w8, [x20, #16]
  42bae4:	bic	w8, w25, w8, lsr #3
  42bae8:	cbnz	w8, 42baf8 <wcrtomb@plt+0x26cd8>
  42baec:	b	42bb58 <wcrtomb@plt+0x26d38>
  42baf0:	mov	w8, wzr
  42baf4:	cbz	w8, 42bb58 <wcrtomb@plt+0x26d38>
  42baf8:	ldrb	w8, [x20, #16]
  42bafc:	tbnz	w8, #1, 42bb38 <wcrtomb@plt+0x26d18>
  42bb00:	add	x0, x23, #0x1
  42bb04:	bl	4044f0 <malloc@plt>
  42bb08:	cbz	x0, 42bb68 <wcrtomb@plt+0x26d48>
  42bb0c:	mov	x1, x22
  42bb10:	mov	x2, x23
  42bb14:	mov	x24, x0
  42bb18:	bl	404110 <memcpy@plt>
  42bb1c:	strb	wzr, [x24, x23]
  42bb20:	ldr	w9, [x20, #16]
  42bb24:	mov	w8, wzr
  42bb28:	str	x24, [x20, #24]
  42bb2c:	orr	w9, w9, #0x2
  42bb30:	str	w9, [x20, #16]
  42bb34:	cbnz	w8, 42bb58 <wcrtomb@plt+0x26d38>
  42bb38:	ldr	w8, [x20, #16]
  42bb3c:	ldr	x2, [x20, #24]
  42bb40:	mov	x0, x19
  42bb44:	mov	x3, x22
  42bb48:	and	w1, w8, #0x4
  42bb4c:	mov	x4, x23
  42bb50:	bl	42d228 <wcrtomb@plt+0x28408>
  42bb54:	mov	w8, wzr
  42bb58:	cbnz	w8, 42bb84 <wcrtomb@plt+0x26d64>
  42bb5c:	ldr	x20, [x20, #8]
  42bb60:	cbnz	x20, 42bab8 <wcrtomb@plt+0x26c98>
  42bb64:	b	42bb80 <wcrtomb@plt+0x26d60>
  42bb68:	mov	x0, x19
  42bb6c:	bl	429b94 <wcrtomb@plt+0x24d74>
  42bb70:	mov	w21, w0
  42bb74:	mov	w8, #0x1                   	// #1
  42bb78:	cbnz	w8, 42bb58 <wcrtomb@plt+0x26d38>
  42bb7c:	b	42bb38 <wcrtomb@plt+0x26d18>
  42bb80:	mov	w21, wzr
  42bb84:	mov	w0, w21
  42bb88:	ldp	x20, x19, [sp, #64]
  42bb8c:	ldp	x22, x21, [sp, #48]
  42bb90:	ldp	x24, x23, [sp, #32]
  42bb94:	ldr	x25, [sp, #16]
  42bb98:	ldp	x29, x30, [sp], #80
  42bb9c:	ret
  42bba0:	sub	sp, sp, #0x130
  42bba4:	stp	x29, x30, [sp, #208]
  42bba8:	stp	x28, x27, [sp, #224]
  42bbac:	stp	x26, x25, [sp, #240]
  42bbb0:	stp	x24, x23, [sp, #256]
  42bbb4:	stp	x22, x21, [sp, #272]
  42bbb8:	stp	x20, x19, [sp, #288]
  42bbbc:	ldr	x23, [x0, #208]
  42bbc0:	add	x29, sp, #0xd0
  42bbc4:	cbz	x23, 42be30 <wcrtomb@plt+0x27010>
  42bbc8:	ldr	w8, [x0, #36]
  42bbcc:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x18da0>
  42bbd0:	mov	x19, x0
  42bbd4:	add	x21, x21, #0x4e0
  42bbd8:	lsl	w8, w8, #5
  42bbdc:	and	w20, w8, #0x80
  42bbe0:	ldrb	w8, [x23, #16]
  42bbe4:	ldr	x27, [x23, #8]
  42bbe8:	tbnz	w8, #2, 42bc7c <wcrtomb@plt+0x26e5c>
  42bbec:	mov	x0, x19
  42bbf0:	mov	x1, x23
  42bbf4:	bl	42a9c0 <wcrtomb@plt+0x25ba0>
  42bbf8:	mov	x25, x0
  42bbfc:	mov	x0, x23
  42bc00:	bl	42aabc <wcrtomb@plt+0x25c9c>
  42bc04:	mov	x26, x0
  42bc08:	mov	x0, x25
  42bc0c:	mov	w1, w26
  42bc10:	bl	42d4d0 <wcrtomb@plt+0x286b0>
  42bc14:	cbz	w0, 42be18 <wcrtomb@plt+0x26ff8>
  42bc18:	add	x0, x26, #0x1
  42bc1c:	bl	4044f0 <malloc@plt>
  42bc20:	cbz	x0, 42bd90 <wcrtomb@plt+0x26f70>
  42bc24:	mov	x1, x25
  42bc28:	mov	x2, x26
  42bc2c:	mov	x24, x0
  42bc30:	bl	404110 <memcpy@plt>
  42bc34:	sub	x3, x29, #0x48
  42bc38:	mov	x0, x24
  42bc3c:	mov	w1, w20
  42bc40:	mov	x2, xzr
  42bc44:	strb	wzr, [x24, x26]
  42bc48:	bl	404c30 <glob@plt>
  42bc4c:	cmp	w0, #0x3
  42bc50:	b.eq	42bd14 <wcrtomb@plt+0x26ef4>  // b.none
  42bc54:	cmp	w0, #0x1
  42bc58:	b.eq	42bd88 <wcrtomb@plt+0x26f68>  // b.none
  42bc5c:	cbnz	w0, 42bda8 <wcrtomb@plt+0x26f88>
  42bc60:	mov	x0, x24
  42bc64:	bl	4049d0 <free@plt>
  42bc68:	ldur	x8, [x29, #-72]
  42bc6c:	cbz	x8, 42bdcc <wcrtomb@plt+0x26fac>
  42bc70:	mov	x26, xzr
  42bc74:	mov	x24, x23
  42bc78:	b	42bca0 <wcrtomb@plt+0x26e80>
  42bc7c:	mov	w8, #0x4                   	// #4
  42bc80:	b	42be1c <wcrtomb@plt+0x26ffc>
  42bc84:	mov	w8, #0x1                   	// #1
  42bc88:	mov	w22, #0x1                   	// #1
  42bc8c:	cbnz	w8, 42be14 <wcrtomb@plt+0x26ff4>
  42bc90:	ldur	x8, [x29, #-72]
  42bc94:	add	x26, x26, #0x1
  42bc98:	cmp	x8, x26
  42bc9c:	b.ls	42bdcc <wcrtomb@plt+0x26fac>  // b.plast
  42bca0:	add	x1, sp, #0x8
  42bca4:	mov	x0, x19
  42bca8:	bl	42b564 <wcrtomb@plt+0x26744>
  42bcac:	cbnz	w0, 42bc84 <wcrtomb@plt+0x26e64>
  42bcb0:	ldur	x8, [x29, #-64]
  42bcb4:	ldr	x0, [x8, x26, lsl #3]
  42bcb8:	bl	404780 <strdup@plt>
  42bcbc:	ldr	x25, [sp, #8]
  42bcc0:	cbz	x0, 42bcf4 <wcrtomb@plt+0x26ed4>
  42bcc4:	ldr	w8, [x25, #16]
  42bcc8:	str	x0, [x25, #24]
  42bccc:	mov	x0, x19
  42bcd0:	mov	x1, x25
  42bcd4:	orr	w8, w8, #0x6
  42bcd8:	mov	x2, x24
  42bcdc:	str	w8, [x25, #16]
  42bce0:	bl	42c448 <wcrtomb@plt+0x27628>
  42bce4:	mov	w8, wzr
  42bce8:	mov	x24, x25
  42bcec:	cbz	wzr, 42bc90 <wcrtomb@plt+0x26e70>
  42bcf0:	b	42be14 <wcrtomb@plt+0x26ff4>
  42bcf4:	mov	x0, x25
  42bcf8:	bl	42ac58 <wcrtomb@plt+0x25e38>
  42bcfc:	mov	x0, x19
  42bd00:	bl	429b94 <wcrtomb@plt+0x24d74>
  42bd04:	mov	w22, w0
  42bd08:	mov	w8, #0x1                   	// #1
  42bd0c:	cbz	w8, 42bc90 <wcrtomb@plt+0x26e70>
  42bd10:	b	42be14 <wcrtomb@plt+0x26ff4>
  42bd14:	ldr	w8, [x19, #36]
  42bd18:	tbnz	w8, #0, 42bdf4 <wcrtomb@plt+0x26fd4>
  42bd1c:	tbz	w8, #1, 42be08 <wcrtomb@plt+0x26fe8>
  42bd20:	ldr	w8, [x19, #192]
  42bd24:	cmp	w8, #0x9
  42bd28:	b.ne	42bd34 <wcrtomb@plt+0x26f14>  // b.any
  42bd2c:	ldr	x0, [x19, #200]
  42bd30:	bl	4049d0 <free@plt>
  42bd34:	mov	w2, #0x5                   	// #5
  42bd38:	mov	x0, xzr
  42bd3c:	mov	x1, x21
  42bd40:	bl	404bf0 <dcgettext@plt>
  42bd44:	mov	x4, x0
  42bd48:	add	x0, sp, #0x8
  42bd4c:	mov	w1, #0x80                  	// #128
  42bd50:	mov	w2, #0x1                   	// #1
  42bd54:	mov	w3, #0x80                  	// #128
  42bd58:	mov	x5, x24
  42bd5c:	bl	404460 <__snprintf_chk@plt>
  42bd60:	mov	x0, x24
  42bd64:	bl	4049d0 <free@plt>
  42bd68:	add	x0, sp, #0x8
  42bd6c:	bl	404780 <strdup@plt>
  42bd70:	str	x0, [x19, #200]
  42bd74:	cbz	x0, 42bd90 <wcrtomb@plt+0x26f70>
  42bd78:	mov	w1, #0x9                   	// #9
  42bd7c:	mov	x0, x19
  42bd80:	mov	w22, #0x9                   	// #9
  42bd84:	b	42bdbc <wcrtomb@plt+0x26f9c>
  42bd88:	mov	x0, x24
  42bd8c:	bl	4049d0 <free@plt>
  42bd90:	mov	x0, x19
  42bd94:	bl	429b94 <wcrtomb@plt+0x24d74>
  42bd98:	mov	w22, w0
  42bd9c:	mov	w8, #0x1                   	// #1
  42bda0:	cbnz	w8, 42be1c <wcrtomb@plt+0x26ffc>
  42bda4:	b	42be18 <wcrtomb@plt+0x26ff8>
  42bda8:	mov	x0, x24
  42bdac:	bl	4049d0 <free@plt>
  42bdb0:	mov	w1, #0x8                   	// #8
  42bdb4:	mov	x0, x19
  42bdb8:	mov	w22, #0x8                   	// #8
  42bdbc:	bl	42a2cc <wcrtomb@plt+0x254ac>
  42bdc0:	mov	w8, #0x1                   	// #1
  42bdc4:	cbnz	w8, 42be1c <wcrtomb@plt+0x26ffc>
  42bdc8:	b	42be18 <wcrtomb@plt+0x26ff8>
  42bdcc:	sub	x0, x29, #0x48
  42bdd0:	bl	404a80 <globfree@plt>
  42bdd4:	mov	x0, x19
  42bdd8:	mov	x1, x23
  42bddc:	bl	42a9f0 <wcrtomb@plt+0x25bd0>
  42bde0:	mov	x0, x23
  42bde4:	bl	42ac58 <wcrtomb@plt+0x25e38>
  42bde8:	mov	w8, wzr
  42bdec:	cbnz	w8, 42be1c <wcrtomb@plt+0x26ffc>
  42bdf0:	b	42be18 <wcrtomb@plt+0x26ff8>
  42bdf4:	mov	x0, x19
  42bdf8:	mov	x1, x23
  42bdfc:	bl	42a9f0 <wcrtomb@plt+0x25bd0>
  42be00:	mov	x0, x23
  42be04:	bl	42ac58 <wcrtomb@plt+0x25e38>
  42be08:	mov	x0, x24
  42be0c:	bl	4049d0 <free@plt>
  42be10:	mov	w8, #0x4                   	// #4
  42be14:	cbnz	w8, 42be1c <wcrtomb@plt+0x26ffc>
  42be18:	mov	w8, wzr
  42be1c:	orr	w8, w8, #0x4
  42be20:	cmp	w8, #0x4
  42be24:	b.ne	42be34 <wcrtomb@plt+0x27014>  // b.any
  42be28:	mov	x23, x27
  42be2c:	cbnz	x27, 42bbe0 <wcrtomb@plt+0x26dc0>
  42be30:	mov	w22, wzr
  42be34:	mov	w0, w22
  42be38:	ldp	x20, x19, [sp, #288]
  42be3c:	ldp	x22, x21, [sp, #272]
  42be40:	ldp	x24, x23, [sp, #256]
  42be44:	ldp	x26, x25, [sp, #240]
  42be48:	ldp	x28, x27, [sp, #224]
  42be4c:	ldp	x29, x30, [sp, #208]
  42be50:	add	sp, sp, #0x130
  42be54:	ret
  42be58:	stp	x29, x30, [sp, #-48]!
  42be5c:	stp	x20, x19, [sp, #32]
  42be60:	ldr	x20, [x0, #208]
  42be64:	str	x21, [sp, #16]
  42be68:	mov	x29, sp
  42be6c:	cbz	x20, 42bec0 <wcrtomb@plt+0x270a0>
  42be70:	mov	x19, x0
  42be74:	b	42be80 <wcrtomb@plt+0x27060>
  42be78:	mov	x20, x21
  42be7c:	cbz	x21, 42bec0 <wcrtomb@plt+0x270a0>
  42be80:	ldrb	w8, [x20, #16]
  42be84:	ldr	x21, [x20, #8]
  42be88:	tbz	w8, #6, 42bea0 <wcrtomb@plt+0x27080>
  42be8c:	ldr	x8, [x20]
  42be90:	cbz	x8, 42bea0 <wcrtomb@plt+0x27080>
  42be94:	ldr	w9, [x8, #16]
  42be98:	and	w9, w9, #0xffffffef
  42be9c:	str	w9, [x8, #16]
  42bea0:	ldrb	w8, [x20, #16]
  42bea4:	tbz	w8, #0, 42be78 <wcrtomb@plt+0x27058>
  42bea8:	mov	x0, x19
  42beac:	mov	x1, x20
  42beb0:	bl	42a9f0 <wcrtomb@plt+0x25bd0>
  42beb4:	mov	x0, x20
  42beb8:	bl	42ac58 <wcrtomb@plt+0x25e38>
  42bebc:	b	42be78 <wcrtomb@plt+0x27058>
  42bec0:	ldp	x20, x19, [sp, #32]
  42bec4:	ldr	x21, [sp, #16]
  42bec8:	ldp	x29, x30, [sp], #48
  42becc:	ret
  42bed0:	sub	sp, sp, #0x70
  42bed4:	stp	x29, x30, [sp, #16]
  42bed8:	stp	x28, x27, [sp, #32]
  42bedc:	stp	x26, x25, [sp, #48]
  42bee0:	stp	x24, x23, [sp, #64]
  42bee4:	stp	x22, x21, [sp, #80]
  42bee8:	stp	x20, x19, [sp, #96]
  42beec:	add	x29, sp, #0x10
  42bef0:	mov	x22, x3
  42bef4:	mov	x23, x2
  42bef8:	mov	x19, x1
  42befc:	mov	x20, x0
  42bf00:	bl	42a9c0 <wcrtomb@plt+0x25ba0>
  42bf04:	mov	x25, x0
  42bf08:	mov	x0, x19
  42bf0c:	bl	42aabc <wcrtomb@plt+0x25c9c>
  42bf10:	cmp	x0, #0x1
  42bf14:	stp	x19, x25, [sp]
  42bf18:	b.lt	42c004 <wcrtomb@plt+0x271e4>  // b.tstop
  42bf1c:	mov	x24, x0
  42bf20:	mov	x21, xzr
  42bf24:	add	x27, x25, x0
  42bf28:	mov	w28, #0x14                  	// #20
  42bf2c:	mov	x26, x25
  42bf30:	b	42bf50 <wcrtomb@plt+0x27130>
  42bf34:	mov	w8, wzr
  42bf38:	cbz	w8, 42c058 <wcrtomb@plt+0x27238>
  42bf3c:	ldr	x8, [sp, #8]
  42bf40:	add	x25, x8, #0x1
  42bf44:	cmp	x25, x27
  42bf48:	str	x25, [sp, #8]
  42bf4c:	b.cs	42c00c <wcrtomb@plt+0x271ec>  // b.hs, b.nlast
  42bf50:	ldrb	w8, [x25]
  42bf54:	cmp	w8, #0x24
  42bf58:	b.eq	42bf70 <wcrtomb@plt+0x27150>  // b.none
  42bf5c:	cmp	w8, #0x5c
  42bf60:	b.ne	42bf3c <wcrtomb@plt+0x2711c>  // b.any
  42bf64:	add	x8, x25, #0x1
  42bf68:	str	x8, [sp, #8]
  42bf6c:	b	42bf3c <wcrtomb@plt+0x2711c>
  42bf70:	ldrb	w0, [x25, #1]
  42bf74:	blr	x23
  42bf78:	cbz	w0, 42bf3c <wcrtomb@plt+0x2711c>
  42bf7c:	ldp	x8, x9, [sp]
  42bf80:	cmp	x8, x19
  42bf84:	sub	x25, x9, x26
  42bf88:	b.eq	42bf98 <wcrtomb@plt+0x27178>  // b.none
  42bf8c:	ldr	w9, [x8, #16]
  42bf90:	orr	w9, w9, #0x10
  42bf94:	str	w9, [x8, #16]
  42bf98:	mov	x1, sp
  42bf9c:	mov	w5, #0x10                  	// #16
  42bfa0:	mov	x0, x20
  42bfa4:	mov	x2, x19
  42bfa8:	mov	x3, x21
  42bfac:	mov	x4, x25
  42bfb0:	bl	42c340 <wcrtomb@plt+0x27520>
  42bfb4:	cbnz	w0, 42bf34 <wcrtomb@plt+0x27114>
  42bfb8:	ldr	x8, [sp, #8]
  42bfbc:	sub	x2, x24, x25
  42bfc0:	mov	x3, sp
  42bfc4:	add	x4, sp, #0x8
  42bfc8:	add	x1, x8, #0x1
  42bfcc:	str	x1, [sp, #8]
  42bfd0:	ldr	w8, [x19, #16]
  42bfd4:	mov	x0, x20
  42bfd8:	and	w5, w8, w28
  42bfdc:	blr	x22
  42bfe0:	cbnz	w0, 42bf34 <wcrtomb@plt+0x27114>
  42bfe4:	ldr	x8, [sp, #8]
  42bfe8:	sub	x9, x21, x26
  42bfec:	add	x9, x9, x8
  42bff0:	add	x26, x8, #0x1
  42bff4:	add	x21, x9, #0x1
  42bff8:	mov	w8, #0x1                   	// #1
  42bffc:	cbnz	w8, 42bf3c <wcrtomb@plt+0x2711c>
  42c000:	b	42c058 <wcrtomb@plt+0x27238>
  42c004:	mov	x21, xzr
  42c008:	mov	x26, x25
  42c00c:	cmp	x25, x26
  42c010:	b.ls	42c060 <wcrtomb@plt+0x27240>  // b.plast
  42c014:	ldr	x8, [sp]
  42c018:	cmp	x8, x19
  42c01c:	b.eq	42c02c <wcrtomb@plt+0x2720c>  // b.none
  42c020:	ldr	w9, [x8, #16]
  42c024:	orr	w9, w9, #0x10
  42c028:	str	w9, [x8, #16]
  42c02c:	ldr	x8, [sp, #8]
  42c030:	ldr	w9, [x19, #16]
  42c034:	mov	w10, #0x14                  	// #20
  42c038:	mov	x1, sp
  42c03c:	sub	x4, x8, x26
  42c040:	and	w5, w9, w10
  42c044:	mov	x0, x20
  42c048:	mov	x2, x19
  42c04c:	mov	x3, x21
  42c050:	bl	42c340 <wcrtomb@plt+0x27520>
  42c054:	cbz	w0, 42c060 <wcrtomb@plt+0x27240>
  42c058:	mov	w0, #0x1                   	// #1
  42c05c:	b	42c084 <wcrtomb@plt+0x27264>
  42c060:	ldr	x8, [sp]
  42c064:	cmp	x8, x19
  42c068:	b.eq	42c080 <wcrtomb@plt+0x27260>  // b.none
  42c06c:	mov	x0, x20
  42c070:	mov	x1, x19
  42c074:	bl	42a9f0 <wcrtomb@plt+0x25bd0>
  42c078:	mov	x0, x19
  42c07c:	bl	42ac58 <wcrtomb@plt+0x25e38>
  42c080:	mov	w0, wzr
  42c084:	ldp	x20, x19, [sp, #96]
  42c088:	ldp	x22, x21, [sp, #80]
  42c08c:	ldp	x24, x23, [sp, #64]
  42c090:	ldp	x26, x25, [sp, #48]
  42c094:	ldp	x28, x27, [sp, #32]
  42c098:	ldp	x29, x30, [sp, #16]
  42c09c:	add	sp, sp, #0x70
  42c0a0:	ret
  42c0a4:	cmp	w0, #0x28
  42c0a8:	cset	w0, eq  // eq = none
  42c0ac:	ret
  42c0b0:	sub	sp, sp, #0x140
  42c0b4:	stp	x29, x30, [sp, #240]
  42c0b8:	stp	x24, x23, [sp, #272]
  42c0bc:	stp	x22, x21, [sp, #288]
  42c0c0:	add	x29, sp, #0xf0
  42c0c4:	mov	x22, x4
  42c0c8:	add	x23, x1, #0x1
  42c0cc:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x18da0>
  42c0d0:	stp	x20, x19, [sp, #304]
  42c0d4:	mov	x20, x3
  42c0d8:	mov	x19, x0
  42c0dc:	sub	x2, x2, #0x1
  42c0e0:	add	x4, x4, #0x3cb
  42c0e4:	add	x3, x29, #0x18
  42c0e8:	mov	x0, x23
  42c0ec:	mov	x1, xzr
  42c0f0:	str	x28, [sp, #256]
  42c0f4:	mov	w21, w5
  42c0f8:	bl	42b4a0 <wcrtomb@plt+0x26680>
  42c0fc:	cbz	w0, 42c130 <wcrtomb@plt+0x27310>
  42c100:	mov	w1, #0x7                   	// #7
  42c104:	mov	x0, x19
  42c108:	bl	42a2cc <wcrtomb@plt+0x254ac>
  42c10c:	mov	w22, #0x1                   	// #1
  42c110:	mov	w0, w22
  42c114:	ldp	x20, x19, [sp, #304]
  42c118:	ldp	x22, x21, [sp, #288]
  42c11c:	ldp	x24, x23, [sp, #272]
  42c120:	ldr	x28, [sp, #256]
  42c124:	ldp	x29, x30, [sp, #240]
  42c128:	add	sp, sp, #0x140
  42c12c:	ret
  42c130:	ldr	x24, [x29, #24]
  42c134:	add	x8, x23, x24
  42c138:	str	x8, [x22]
  42c13c:	ldrb	w8, [x19, #36]
  42c140:	tbnz	w8, #3, 42c164 <wcrtomb@plt+0x27344>
  42c144:	ldp	x4, x8, [x19, #152]
  42c148:	sub	x0, x29, #0x8
  42c14c:	mov	x1, x23
  42c150:	mov	x2, x24
  42c154:	mov	x3, xzr
  42c158:	blr	x8
  42c15c:	mov	w22, w0
  42c160:	b	42c1c8 <wcrtomb@plt+0x273a8>
  42c164:	mov	x1, sp
  42c168:	mov	w4, #0x700                 	// #1792
  42c16c:	mov	w5, #0x1                   	// #1
  42c170:	mov	x0, x19
  42c174:	mov	x2, x23
  42c178:	mov	w3, w24
  42c17c:	bl	42c4d0 <wcrtomb@plt+0x276b0>
  42c180:	cbz	w0, 42c19c <wcrtomb@plt+0x2737c>
  42c184:	mov	w22, w0
  42c188:	mov	x1, sp
  42c18c:	mov	x0, x19
  42c190:	bl	42c5f4 <wcrtomb@plt+0x277d4>
  42c194:	mov	w23, wzr
  42c198:	b	42c1bc <wcrtomb@plt+0x2739c>
  42c19c:	ldr	x3, [sp, #8]
  42c1a0:	ldp	x4, x8, [x19, #152]
  42c1a4:	sub	x0, x29, #0x8
  42c1a8:	mov	x1, x23
  42c1ac:	mov	x2, x24
  42c1b0:	blr	x8
  42c1b4:	mov	w22, w0
  42c1b8:	mov	w23, #0x1                   	// #1
  42c1bc:	mov	x0, sp
  42c1c0:	bl	42a140 <wcrtomb@plt+0x25320>
  42c1c4:	tbz	w23, #0, 42c10c <wcrtomb@plt+0x272ec>
  42c1c8:	cbz	w22, 42c1ec <wcrtomb@plt+0x273cc>
  42c1cc:	cmp	w22, #0x9
  42c1d0:	b.eq	42c228 <wcrtomb@plt+0x27408>  // b.none
  42c1d4:	cmp	w22, #0x2
  42c1d8:	b.ne	42c244 <wcrtomb@plt+0x27424>  // b.any
  42c1dc:	mov	x0, x19
  42c1e0:	bl	429b94 <wcrtomb@plt+0x24d74>
  42c1e4:	mov	w22, w0
  42c1e8:	b	42c110 <wcrtomb@plt+0x272f0>
  42c1ec:	ldur	x22, [x29, #-8]
  42c1f0:	cbz	x22, 42c29c <wcrtomb@plt+0x2747c>
  42c1f4:	tbnz	w21, #2, 42c250 <wcrtomb@plt+0x27430>
  42c1f8:	ldrb	w8, [x22]
  42c1fc:	cbz	w8, 42c294 <wcrtomb@plt+0x27474>
  42c200:	mov	x0, x22
  42c204:	bl	404190 <strlen@plt>
  42c208:	ldrb	w8, [x19, #33]
  42c20c:	mov	x3, x0
  42c210:	tbnz	w8, #4, 42c2d0 <wcrtomb@plt+0x274b0>
  42c214:	ldr	w8, [x19, #36]
  42c218:	mov	w4, #0x744                 	// #1860
  42c21c:	lsr	w8, w8, #7
  42c220:	bfi	w4, w8, #12, #1
  42c224:	b	42c2d4 <wcrtomb@plt+0x274b4>
  42c228:	ldr	w8, [x19, #192]
  42c22c:	cmp	w8, #0x9
  42c230:	b.ne	42c23c <wcrtomb@plt+0x2741c>  // b.any
  42c234:	ldr	x0, [x19, #200]
  42c238:	bl	4049d0 <free@plt>
  42c23c:	ldur	x8, [x29, #-8]
  42c240:	str	x8, [x19, #200]
  42c244:	mov	x0, x19
  42c248:	mov	w1, w22
  42c24c:	b	42c108 <wcrtomb@plt+0x272e8>
  42c250:	mov	x1, sp
  42c254:	mov	x0, x19
  42c258:	bl	42b564 <wcrtomb@plt+0x26744>
  42c25c:	cbnz	w0, 42c10c <wcrtomb@plt+0x272ec>
  42c260:	ldr	x23, [sp]
  42c264:	ldr	x2, [x20]
  42c268:	mov	x0, x19
  42c26c:	mov	x1, x23
  42c270:	bl	42c448 <wcrtomb@plt+0x27628>
  42c274:	mov	w8, #0xa                   	// #10
  42c278:	orr	w8, w21, w8
  42c27c:	str	x23, [x20]
  42c280:	str	w8, [x23, #16]
  42c284:	ldur	x8, [x29, #-8]
  42c288:	mov	w22, wzr
  42c28c:	str	x8, [x23, #24]
  42c290:	b	42c110 <wcrtomb@plt+0x272f0>
  42c294:	mov	x0, x22
  42c298:	bl	4049d0 <free@plt>
  42c29c:	mov	x1, sp
  42c2a0:	mov	x0, x19
  42c2a4:	bl	42b564 <wcrtomb@plt+0x26744>
  42c2a8:	mov	w22, #0x1                   	// #1
  42c2ac:	cbnz	w0, 42c110 <wcrtomb@plt+0x272f0>
  42c2b0:	ldr	x21, [sp]
  42c2b4:	ldr	x2, [x20]
  42c2b8:	mov	x0, x19
  42c2bc:	mov	x1, x21
  42c2c0:	bl	42c448 <wcrtomb@plt+0x27628>
  42c2c4:	str	x21, [x20]
  42c2c8:	str	w22, [x21, #16]
  42c2cc:	b	42c338 <wcrtomb@plt+0x27518>
  42c2d0:	mov	w4, #0x1744                	// #5956
  42c2d4:	mov	x1, sp
  42c2d8:	mov	x0, x19
  42c2dc:	mov	x2, x22
  42c2e0:	mov	w5, wzr
  42c2e4:	bl	42c4d0 <wcrtomb@plt+0x276b0>
  42c2e8:	ldur	x8, [x29, #-8]
  42c2ec:	mov	w21, w0
  42c2f0:	mov	x0, x8
  42c2f4:	bl	4049d0 <free@plt>
  42c2f8:	cbz	w21, 42c314 <wcrtomb@plt+0x274f4>
  42c2fc:	mov	x1, sp
  42c300:	mov	x0, x19
  42c304:	bl	42c5f4 <wcrtomb@plt+0x277d4>
  42c308:	mov	x0, sp
  42c30c:	bl	42a140 <wcrtomb@plt+0x25320>
  42c310:	b	42c10c <wcrtomb@plt+0x272ec>
  42c314:	ldr	x1, [sp, #208]
  42c318:	ldr	x2, [x20]
  42c31c:	mov	x0, x19
  42c320:	bl	42c448 <wcrtomb@plt+0x27628>
  42c324:	ldr	x8, [sp, #216]
  42c328:	mov	x0, sp
  42c32c:	str	x8, [x20]
  42c330:	stp	xzr, xzr, [sp, #208]
  42c334:	bl	42a140 <wcrtomb@plt+0x25320>
  42c338:	mov	w22, wzr
  42c33c:	b	42c110 <wcrtomb@plt+0x272f0>
  42c340:	sub	sp, sp, #0x60
  42c344:	stp	x29, x30, [sp, #16]
  42c348:	stp	x26, x25, [sp, #32]
  42c34c:	stp	x24, x23, [sp, #48]
  42c350:	stp	x22, x21, [sp, #64]
  42c354:	stp	x20, x19, [sp, #80]
  42c358:	add	x29, sp, #0x10
  42c35c:	cbz	x4, 42c38c <wcrtomb@plt+0x2756c>
  42c360:	mov	x20, x1
  42c364:	add	x1, sp, #0x8
  42c368:	mov	w19, w5
  42c36c:	mov	x22, x4
  42c370:	mov	x23, x3
  42c374:	mov	x25, x2
  42c378:	mov	x24, x0
  42c37c:	bl	42b564 <wcrtomb@plt+0x26744>
  42c380:	cbz	w0, 42c394 <wcrtomb@plt+0x27574>
  42c384:	mov	w0, #0x1                   	// #1
  42c388:	b	42c41c <wcrtomb@plt+0x275fc>
  42c38c:	mov	w0, wzr
  42c390:	b	42c41c <wcrtomb@plt+0x275fc>
  42c394:	ldr	x21, [sp, #8]
  42c398:	ldr	x2, [x20]
  42c39c:	mov	x0, x24
  42c3a0:	mov	x1, x21
  42c3a4:	bl	42c448 <wcrtomb@plt+0x27628>
  42c3a8:	ldrb	w8, [x25, #16]
  42c3ac:	tbnz	w8, #1, 42c3c4 <wcrtomb@plt+0x275a4>
  42c3b0:	ldr	x8, [x25, #24]
  42c3b4:	add	x8, x8, x23
  42c3b8:	add	x9, x8, x22
  42c3bc:	stp	x8, x9, [x21, #24]
  42c3c0:	b	42c408 <wcrtomb@plt+0x275e8>
  42c3c4:	mov	x0, x24
  42c3c8:	mov	x1, x25
  42c3cc:	bl	42a9c0 <wcrtomb@plt+0x25ba0>
  42c3d0:	mov	x26, x0
  42c3d4:	add	x0, x22, #0x1
  42c3d8:	bl	4044f0 <malloc@plt>
  42c3dc:	cbz	x0, 42c438 <wcrtomb@plt+0x27618>
  42c3e0:	add	x1, x26, x23
  42c3e4:	mov	x2, x22
  42c3e8:	mov	x25, x0
  42c3ec:	bl	404110 <memcpy@plt>
  42c3f0:	mov	w8, #0x2                   	// #2
  42c3f4:	mov	w9, #0x1                   	// #1
  42c3f8:	strb	wzr, [x25, x22]
  42c3fc:	str	w8, [x21, #16]
  42c400:	str	x25, [x21, #24]
  42c404:	tbz	w9, #0, 42c41c <wcrtomb@plt+0x275fc>
  42c408:	ldr	w8, [x21, #16]
  42c40c:	mov	w0, wzr
  42c410:	orr	w8, w8, w19
  42c414:	str	w8, [x21, #16]
  42c418:	str	x21, [x20]
  42c41c:	ldp	x20, x19, [sp, #80]
  42c420:	ldp	x22, x21, [sp, #64]
  42c424:	ldp	x24, x23, [sp, #48]
  42c428:	ldp	x26, x25, [sp, #32]
  42c42c:	ldp	x29, x30, [sp, #16]
  42c430:	add	sp, sp, #0x60
  42c434:	ret
  42c438:	mov	x0, x24
  42c43c:	bl	429b94 <wcrtomb@plt+0x24d74>
  42c440:	tbnz	wzr, #0, 42c408 <wcrtomb@plt+0x275e8>
  42c444:	b	42c41c <wcrtomb@plt+0x275fc>
  42c448:	stp	x29, x30, [sp, #-48]!
  42c44c:	str	x21, [sp, #16]
  42c450:	stp	x20, x19, [sp, #32]
  42c454:	mov	x8, x0
  42c458:	ldr	x9, [x8, #208]!
  42c45c:	mov	x21, x0
  42c460:	mov	x19, x1
  42c464:	mov	x29, sp
  42c468:	cbz	x9, 42c49c <wcrtomb@plt+0x2767c>
  42c46c:	mov	x0, x19
  42c470:	mov	x20, x2
  42c474:	bl	42c4b8 <wcrtomb@plt+0x27698>
  42c478:	mov	x8, x20
  42c47c:	ldr	x9, [x8, #8]!
  42c480:	add	x10, x21, #0xd8
  42c484:	cmp	x9, #0x0
  42c488:	csel	x10, x10, x9, eq  // eq = none
  42c48c:	str	x0, [x10]
  42c490:	str	x9, [x0, #8]
  42c494:	str	x20, [x19]
  42c498:	b	42c4a4 <wcrtomb@plt+0x27684>
  42c49c:	stp	xzr, xzr, [x19]
  42c4a0:	str	x19, [x21, #216]
  42c4a4:	str	x19, [x8]
  42c4a8:	ldp	x20, x19, [sp, #32]
  42c4ac:	ldr	x21, [sp, #16]
  42c4b0:	ldp	x29, x30, [sp], #48
  42c4b4:	ret
  42c4b8:	mov	x8, x0
  42c4bc:	mov	x0, x8
  42c4c0:	cbz	x8, 42c4cc <wcrtomb@plt+0x276ac>
  42c4c4:	ldr	x8, [x0, #8]
  42c4c8:	cbnz	x8, 42c4bc <wcrtomb@plt+0x2769c>
  42c4cc:	ret
  42c4d0:	stp	x29, x30, [sp, #-48]!
  42c4d4:	stp	x22, x21, [sp, #16]
  42c4d8:	stp	x20, x19, [sp, #32]
  42c4dc:	ldr	x8, [x0, #56]
  42c4e0:	mov	w20, w5
  42c4e4:	mov	x9, x2
  42c4e8:	mov	x21, x0
  42c4ec:	str	x8, [x1, #56]
  42c4f0:	ldr	x8, [x0, #104]
  42c4f4:	mov	x19, x1
  42c4f8:	mov	x29, sp
  42c4fc:	str	x8, [x1, #104]
  42c500:	ldr	x8, [x0, #96]
  42c504:	str	x8, [x1, #96]
  42c508:	ldr	x8, [x0, #88]
  42c50c:	str	x8, [x1, #88]
  42c510:	tbnz	w4, #6, 42c534 <wcrtomb@plt+0x27714>
  42c514:	ldr	x8, [x21, #112]
  42c518:	mov	w10, #0x8180000             	// #135790592
  42c51c:	str	x8, [x19, #112]
  42c520:	ldr	x8, [x21, #144]
  42c524:	str	x8, [x19, #144]
  42c528:	ldr	w8, [x21, #32]
  42c52c:	and	w8, w8, w10
  42c530:	orr	w4, w8, w4
  42c534:	tbnz	w4, #2, 42c540 <wcrtomb@plt+0x27720>
  42c538:	ldr	x8, [x21, #160]
  42c53c:	str	x8, [x19, #160]
  42c540:	mov	w8, #0x44                  	// #68
  42c544:	bics	wzr, w8, w4
  42c548:	b.eq	42c560 <wcrtomb@plt+0x27740>  // b.none
  42c54c:	ldr	x8, [x21, #152]
  42c550:	str	x8, [x19, #152]
  42c554:	ldr	w8, [x21, #32]
  42c558:	and	w8, w8, #0x4000000
  42c55c:	orr	w4, w8, w4
  42c560:	ldr	w8, [x21, #36]
  42c564:	mov	w10, #0x10                  	// #16
  42c568:	movk	w10, #0x8020, lsl #16
  42c56c:	mov	w11, #0x4000                	// #16384
  42c570:	str	w8, [x19, #36]
  42c574:	ldr	w8, [x21, #32]
  42c578:	movk	w11, #0x7, lsl #16
  42c57c:	sxtw	x2, w3
  42c580:	mov	x0, x19
  42c584:	and	w8, w8, w10
  42c588:	orr	w8, w4, w8
  42c58c:	orr	w8, w8, w11
  42c590:	mov	x1, x9
  42c594:	mov	w3, w8
  42c598:	bl	42a5ec <wcrtomb@plt+0x257cc>
  42c59c:	mov	w22, w0
  42c5a0:	cbnz	w0, 42c5d8 <wcrtomb@plt+0x277b8>
  42c5a4:	ldr	w8, [x21, #224]
  42c5a8:	mov	x0, x19
  42c5ac:	mov	x1, xzr
  42c5b0:	add	w8, w8, #0x1
  42c5b4:	str	w8, [x19, #224]
  42c5b8:	bl	42a798 <wcrtomb@plt+0x25978>
  42c5bc:	cbnz	w0, 42c5cc <wcrtomb@plt+0x277ac>
  42c5c0:	cbz	w20, 42c5ec <wcrtomb@plt+0x277cc>
  42c5c4:	mov	x0, x19
  42c5c8:	bl	42a2fc <wcrtomb@plt+0x254dc>
  42c5cc:	mov	w22, w0
  42c5d0:	mov	x0, x19
  42c5d4:	bl	42a17c <wcrtomb@plt+0x2535c>
  42c5d8:	mov	w0, w22
  42c5dc:	ldp	x20, x19, [sp, #32]
  42c5e0:	ldp	x22, x21, [sp, #16]
  42c5e4:	ldp	x29, x30, [sp], #48
  42c5e8:	ret
  42c5ec:	mov	w22, wzr
  42c5f0:	b	42c5d8 <wcrtomb@plt+0x277b8>
  42c5f4:	stp	x29, x30, [sp, #-32]!
  42c5f8:	stp	x20, x19, [sp, #16]
  42c5fc:	ldr	w8, [x0, #192]
  42c600:	mov	x20, x0
  42c604:	mov	x19, x1
  42c608:	mov	x29, sp
  42c60c:	cmp	w8, #0x9
  42c610:	b.ne	42c61c <wcrtomb@plt+0x277fc>  // b.any
  42c614:	ldr	x0, [x20, #200]
  42c618:	bl	4049d0 <free@plt>
  42c61c:	ldr	w8, [x19, #192]
  42c620:	str	w8, [x20, #192]
  42c624:	ldr	w8, [x19, #192]
  42c628:	cmp	w8, #0x9
  42c62c:	b.ne	42c640 <wcrtomb@plt+0x27820>  // b.any
  42c630:	ldr	x8, [x19, #200]
  42c634:	str	x8, [x20, #200]
  42c638:	str	wzr, [x19, #192]
  42c63c:	str	xzr, [x19, #200]
  42c640:	ldp	x20, x19, [sp, #16]
  42c644:	ldp	x29, x30, [sp], #32
  42c648:	ret
  42c64c:	and	w8, w0, #0xffffffdf
  42c650:	cmp	w0, #0x7b
  42c654:	sub	w8, w8, #0x41
  42c658:	cset	w9, eq  // eq = none
  42c65c:	cmp	w8, #0x1a
  42c660:	cset	w8, cc  // cc = lo, ul, last
  42c664:	cmp	w0, #0x5f
  42c668:	orr	w8, w9, w8
  42c66c:	cset	w9, eq  // eq = none
  42c670:	orr	w0, w9, w8
  42c674:	ret
  42c678:	stp	x29, x30, [sp, #-96]!
  42c67c:	stp	x28, x27, [sp, #16]
  42c680:	stp	x26, x25, [sp, #32]
  42c684:	stp	x24, x23, [sp, #48]
  42c688:	stp	x22, x21, [sp, #64]
  42c68c:	stp	x20, x19, [sp, #80]
  42c690:	mov	x29, sp
  42c694:	sub	sp, sp, #0x1f0
  42c698:	mov	x23, x1
  42c69c:	ldrb	w8, [x23], #-1
  42c6a0:	mov	w21, w5
  42c6a4:	mov	x22, x4
  42c6a8:	mov	x20, x3
  42c6ac:	and	w9, w8, #0xffffffdf
  42c6b0:	sub	w9, w9, #0x41
  42c6b4:	and	w9, w9, #0xff
  42c6b8:	mov	x27, x1
  42c6bc:	cmp	w9, #0x1a
  42c6c0:	mov	x19, x0
  42c6c4:	b.cc	42c6d8 <wcrtomb@plt+0x278b8>  // b.lo, b.ul, b.last
  42c6c8:	cmp	w8, #0x7b
  42c6cc:	b.eq	42c800 <wcrtomb@plt+0x279e0>  // b.none
  42c6d0:	cmp	w8, #0x5f
  42c6d4:	b.ne	42c89c <wcrtomb@plt+0x27a7c>  // b.any
  42c6d8:	mov	w24, #0x1                   	// #1
  42c6dc:	cmp	x2, #0x2
  42c6e0:	b.cs	42c6f4 <wcrtomb@plt+0x278d4>  // b.hs, b.nlast
  42c6e4:	b	42c72c <wcrtomb@plt+0x2790c>
  42c6e8:	add	x24, x24, #0x1
  42c6ec:	cmp	x2, x24
  42c6f0:	b.eq	42c728 <wcrtomb@plt+0x27908>  // b.none
  42c6f4:	ldrb	w8, [x27, x24]
  42c6f8:	and	w9, w8, #0xffffffdf
  42c6fc:	sub	w9, w9, #0x41
  42c700:	and	w9, w9, #0xff
  42c704:	cmp	w9, #0x1a
  42c708:	b.cc	42c6e8 <wcrtomb@plt+0x278c8>  // b.lo, b.ul, b.last
  42c70c:	cmp	w8, #0x5f
  42c710:	b.eq	42c6e8 <wcrtomb@plt+0x278c8>  // b.none
  42c714:	sub	w8, w8, #0x30
  42c718:	and	w8, w8, #0xff
  42c71c:	cmp	w8, #0x9
  42c720:	b.ls	42c6e8 <wcrtomb@plt+0x278c8>  // b.plast
  42c724:	b	42c72c <wcrtomb@plt+0x2790c>
  42c728:	mov	x24, x2
  42c72c:	add	x8, x27, x24
  42c730:	sub	x8, x8, #0x1
  42c734:	mov	x28, xzr
  42c738:	str	x8, [x22]
  42c73c:	mov	x25, x27
  42c740:	cbz	x28, 42c774 <wcrtomb@plt+0x27954>
  42c744:	ldrb	w8, [x28]
  42c748:	mov	x27, xzr
  42c74c:	mov	w26, #0x5                   	// #5
  42c750:	cmp	x8, #0x3f
  42c754:	b.hi	42c8dc <wcrtomb@plt+0x27abc>  // b.pmore
  42c758:	mov	w9, #0x1                   	// #1
  42c75c:	lsl	x8, x9, x8
  42c760:	mov	x9, #0x1                   	// #1
  42c764:	movk	x9, #0x2800, lsl #32
  42c768:	movk	x9, #0xa000, lsl #48
  42c76c:	and	x8, x8, x9
  42c770:	cbz	x8, 42c8dc <wcrtomb@plt+0x27abc>
  42c774:	sub	x3, x29, #0x18
  42c778:	mov	x0, x19
  42c77c:	mov	x1, x25
  42c780:	mov	x2, x24
  42c784:	bl	42ce70 <wcrtomb@plt+0x28050>
  42c788:	cbz	w0, 42c7b4 <wcrtomb@plt+0x27994>
  42c78c:	ldrb	w8, [x19, #34]
  42c790:	tbz	w8, #4, 42c7d8 <wcrtomb@plt+0x279b8>
  42c794:	ldp	x8, x3, [x19, #144]
  42c798:	sub	x0, x29, #0x10
  42c79c:	mov	x1, x25
  42c7a0:	mov	x2, x24
  42c7a4:	blr	x8
  42c7a8:	mov	w26, w0
  42c7ac:	cbnz	w26, 42c8d8 <wcrtomb@plt+0x27ab8>
  42c7b0:	b	42c7e0 <wcrtomb@plt+0x279c0>
  42c7b4:	ldur	x0, [x29, #-24]
  42c7b8:	cbz	x0, 42c7d8 <wcrtomb@plt+0x279b8>
  42c7bc:	bl	404780 <strdup@plt>
  42c7c0:	cmp	x0, #0x0
  42c7c4:	cset	w8, eq  // eq = none
  42c7c8:	stur	x0, [x29, #-16]
  42c7cc:	lsl	w26, w8, #1
  42c7d0:	cbnz	w26, 42c8d8 <wcrtomb@plt+0x27ab8>
  42c7d4:	b	42c7e0 <wcrtomb@plt+0x279c0>
  42c7d8:	mov	w26, #0x5                   	// #5
  42c7dc:	cbnz	w26, 42c8d8 <wcrtomb@plt+0x27ab8>
  42c7e0:	ldur	x0, [x29, #-16]
  42c7e4:	cbz	x0, 42c8c0 <wcrtomb@plt+0x27aa0>
  42c7e8:	ldrb	w8, [x0]
  42c7ec:	cmp	w8, #0x0
  42c7f0:	csel	x27, x28, xzr, ne  // ne = any
  42c7f4:	cbnz	w8, 42c8dc <wcrtomb@plt+0x27abc>
  42c7f8:	cbnz	x28, 42c8c4 <wcrtomb@plt+0x27aa4>
  42c7fc:	b	42c8dc <wcrtomb@plt+0x27abc>
  42c800:	sub	x26, x2, #0x1
  42c804:	cmp	x26, #0x2
  42c808:	add	x25, x27, #0x1
  42c80c:	b.cc	42c8b4 <wcrtomb@plt+0x27a94>  // b.lo, b.ul, b.last
  42c810:	mov	x8, #0x1                   	// #1
  42c814:	movk	x8, #0x2800, lsl #32
  42c818:	mov	w10, #0x2                   	// #2
  42c81c:	movk	x8, #0xa000, lsl #48
  42c820:	mov	w9, #0x1                   	// #1
  42c824:	sub	x10, x10, x2
  42c828:	mov	w24, #0x1                   	// #1
  42c82c:	b	42c840 <wcrtomb@plt+0x27a20>
  42c830:	add	x24, x24, #0x1
  42c834:	add	x11, x10, x24
  42c838:	cmp	x11, #0x1
  42c83c:	b.eq	42cab8 <wcrtomb@plt+0x27c98>  // b.none
  42c840:	add	x12, x27, x24
  42c844:	ldrb	w11, [x12, #1]
  42c848:	cmp	w11, #0x7d
  42c84c:	b.eq	42cba8 <wcrtomb@plt+0x27d88>  // b.none
  42c850:	cmp	w11, #0x3a
  42c854:	b.eq	42cbb4 <wcrtomb@plt+0x27d94>  // b.none
  42c858:	cmp	w11, #0x3f
  42c85c:	b.hi	42c830 <wcrtomb@plt+0x27a10>  // b.pmore
  42c860:	lsl	x11, x9, x11
  42c864:	and	x11, x11, x8
  42c868:	cbz	x11, 42c830 <wcrtomb@plt+0x27a10>
  42c86c:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x18da0>
  42c870:	add	x4, x4, #0x3c8
  42c874:	add	x3, sp, #0xf0
  42c878:	mov	x0, x25
  42c87c:	mov	x1, x24
  42c880:	mov	x2, x26
  42c884:	bl	42b4a0 <wcrtomb@plt+0x26680>
  42c888:	cbnz	w0, 42cbf0 <wcrtomb@plt+0x27dd0>
  42c88c:	ldr	x8, [sp, #240]
  42c890:	add	x9, x27, x24
  42c894:	add	x28, x9, #0x1
  42c898:	b	42cbe0 <wcrtomb@plt+0x27dc0>
  42c89c:	add	x1, sp, #0x8
  42c8a0:	mov	x0, x19
  42c8a4:	bl	42b564 <wcrtomb@plt+0x26744>
  42c8a8:	cbz	w0, 42c9ec <wcrtomb@plt+0x27bcc>
  42c8ac:	mov	w26, #0x1                   	// #1
  42c8b0:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42c8b4:	mov	x28, xzr
  42c8b8:	mov	w24, #0x1                   	// #1
  42c8bc:	b	42cbe8 <wcrtomb@plt+0x27dc8>
  42c8c0:	cbz	x28, 42cac4 <wcrtomb@plt+0x27ca4>
  42c8c4:	ldurb	w8, [x28, #-1]
  42c8c8:	cmp	w8, #0x3a
  42c8cc:	b.ne	42c8d8 <wcrtomb@plt+0x27ab8>  // b.any
  42c8d0:	bl	4049d0 <free@plt>
  42c8d4:	mov	w26, #0x5                   	// #5
  42c8d8:	mov	x27, x28
  42c8dc:	cmp	w26, #0x9
  42c8e0:	b.hi	42c9d8 <wcrtomb@plt+0x27bb8>  // b.pmore
  42c8e4:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  42c8e8:	mov	w8, w26
  42c8ec:	add	x9, x9, #0x278
  42c8f0:	adr	x10, 42c900 <wcrtomb@plt+0x27ae0>
  42c8f4:	ldrb	w11, [x9, x8]
  42c8f8:	add	x10, x10, x11, lsl #2
  42c8fc:	br	x10
  42c900:	cbz	x27, 42ca94 <wcrtomb@plt+0x27c74>
  42c904:	ldrb	w8, [x27]
  42c908:	cmp	w8, #0x2b
  42c90c:	b.ne	42ca94 <wcrtomb@plt+0x27c74>  // b.any
  42c910:	ldr	w8, [x22]
  42c914:	ldr	w9, [x19, #32]
  42c918:	add	x2, x27, #0x1
  42c91c:	mov	w10, #0x44                  	// #68
  42c920:	sub	w3, w8, w2
  42c924:	and	w8, w9, w10
  42c928:	mov	w9, #0x700                 	// #1792
  42c92c:	movk	w9, #0x40, lsl #16
  42c930:	orr	w4, w8, w9
  42c934:	add	x1, sp, #0xf0
  42c938:	mov	w5, #0x1                   	// #1
  42c93c:	mov	x0, x19
  42c940:	bl	42c4d0 <wcrtomb@plt+0x276b0>
  42c944:	cbz	w0, 42cb3c <wcrtomb@plt+0x27d1c>
  42c948:	mov	w26, w0
  42c94c:	mov	w8, wzr
  42c950:	tbnz	wzr, #0, 42cc6c <wcrtomb@plt+0x27e4c>
  42c954:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42c958:	cbz	x27, 42ca48 <wcrtomb@plt+0x27c28>
  42c95c:	ldrb	w8, [x27]
  42c960:	cmp	w8, #0x2d
  42c964:	b.eq	42c978 <wcrtomb@plt+0x27b58>  // b.none
  42c968:	cmp	w8, #0x3f
  42c96c:	b.eq	42cad4 <wcrtomb@plt+0x27cb4>  // b.none
  42c970:	cmp	w8, #0x3d
  42c974:	b.ne	42cc5c <wcrtomb@plt+0x27e3c>  // b.any
  42c978:	ldr	w8, [x22]
  42c97c:	ldr	w9, [x19, #32]
  42c980:	add	x2, x27, #0x1
  42c984:	mov	w10, #0x44                  	// #68
  42c988:	sub	w3, w8, w2
  42c98c:	and	w8, w9, w10
  42c990:	mov	w9, #0x700                 	// #1792
  42c994:	movk	w9, #0x40, lsl #16
  42c998:	orr	w4, w8, w9
  42c99c:	add	x1, sp, #0xf0
  42c9a0:	mov	w5, #0x1                   	// #1
  42c9a4:	mov	x0, x19
  42c9a8:	bl	42c4d0 <wcrtomb@plt+0x276b0>
  42c9ac:	cbz	w0, 42cb6c <wcrtomb@plt+0x27d4c>
  42c9b0:	mov	w26, w0
  42c9b4:	mov	w8, wzr
  42c9b8:	b	42cc68 <wcrtomb@plt+0x27e48>
  42c9bc:	ldr	w8, [x19, #192]
  42c9c0:	cmp	w8, #0x9
  42c9c4:	b.ne	42c9d0 <wcrtomb@plt+0x27bb0>  // b.any
  42c9c8:	ldr	x0, [x19, #200]
  42c9cc:	bl	4049d0 <free@plt>
  42c9d0:	ldur	x8, [x29, #-16]
  42c9d4:	str	x8, [x19, #200]
  42c9d8:	mov	x0, x19
  42c9dc:	mov	w1, w26
  42c9e0:	bl	42a2cc <wcrtomb@plt+0x254ac>
  42c9e4:	mov	w26, #0x1                   	// #1
  42c9e8:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42c9ec:	ldr	x1, [sp, #8]
  42c9f0:	ldr	x2, [x20]
  42c9f4:	mov	x0, x19
  42c9f8:	bl	42c448 <wcrtomb@plt+0x27628>
  42c9fc:	ldr	x8, [sp, #8]
  42ca00:	orr	w9, w21, #0x2
  42ca04:	mov	w0, #0x3                   	// #3
  42ca08:	str	x8, [x20]
  42ca0c:	str	w9, [x8, #16]
  42ca10:	bl	4044f0 <malloc@plt>
  42ca14:	ldr	x8, [sp, #8]
  42ca18:	str	x0, [x8, #24]
  42ca1c:	cbz	x0, 42ca9c <wcrtomb@plt+0x27c7c>
  42ca20:	mov	w8, #0x24                  	// #36
  42ca24:	strb	w8, [x0]
  42ca28:	ldrb	w8, [x27]
  42ca2c:	ldr	x9, [sp, #8]
  42ca30:	mov	w26, wzr
  42ca34:	strb	w8, [x0, #1]
  42ca38:	ldr	x8, [x9, #24]
  42ca3c:	strb	wzr, [x8, #2]
  42ca40:	str	x27, [x22]
  42ca44:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42ca48:	ldr	w8, [x19, #32]
  42ca4c:	tbnz	w8, #5, 42caac <wcrtomb@plt+0x27c8c>
  42ca50:	tbz	w8, #24, 42ca78 <wcrtomb@plt+0x27c58>
  42ca54:	ldr	x26, [x19, #96]
  42ca58:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42ca5c:	add	x1, x1, #0x4b0
  42ca60:	mov	w2, #0x5                   	// #5
  42ca64:	mov	x0, xzr
  42ca68:	bl	404bf0 <dcgettext@plt>
  42ca6c:	mov	w1, w24
  42ca70:	mov	x2, x25
  42ca74:	blr	x26
  42ca78:	ldrb	w8, [x19, #34]
  42ca7c:	tbnz	w8, #7, 42cc04 <wcrtomb@plt+0x27de4>
  42ca80:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  42ca84:	add	x0, x0, #0xd3e
  42ca88:	bl	404780 <strdup@plt>
  42ca8c:	stur	x0, [x29, #-16]
  42ca90:	cbz	x0, 42ca9c <wcrtomb@plt+0x27c7c>
  42ca94:	mov	w26, #0x4                   	// #4
  42ca98:	b	42cc6c <wcrtomb@plt+0x27e4c>
  42ca9c:	mov	x0, x19
  42caa0:	bl	429b94 <wcrtomb@plt+0x24d74>
  42caa4:	mov	w26, w0
  42caa8:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42caac:	mov	w1, #0x5                   	// #5
  42cab0:	mov	x0, x19
  42cab4:	b	42c9e0 <wcrtomb@plt+0x27bc0>
  42cab8:	mov	x28, xzr
  42cabc:	mov	x24, x26
  42cac0:	b	42cbe8 <wcrtomb@plt+0x27dc8>
  42cac4:	mov	x27, xzr
  42cac8:	cmp	w26, #0x9
  42cacc:	b.ls	42c8e4 <wcrtomb@plt+0x27ac4>  // b.plast
  42cad0:	b	42c9d8 <wcrtomb@plt+0x27bb8>
  42cad4:	ldr	x8, [x22]
  42cad8:	add	x26, x27, #0x1
  42cadc:	subs	x27, x8, x26
  42cae0:	b.eq	42cc10 <wcrtomb@plt+0x27df0>  // b.none
  42cae4:	ldr	w8, [x19, #32]
  42cae8:	mov	w9, #0x44                  	// #68
  42caec:	add	x1, sp, #0xf0
  42caf0:	mov	w5, #0x1                   	// #1
  42caf4:	and	w8, w8, w9
  42caf8:	mov	w9, #0x700                 	// #1792
  42cafc:	movk	w9, #0x40, lsl #16
  42cb00:	orr	w4, w8, w9
  42cb04:	mov	x0, x19
  42cb08:	mov	x2, x26
  42cb0c:	mov	w3, w27
  42cb10:	bl	42c4d0 <wcrtomb@plt+0x276b0>
  42cb14:	ldr	x8, [x19, #96]
  42cb18:	cbz	w0, 42cc38 <wcrtomb@plt+0x27e18>
  42cb1c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42cb20:	add	x0, x0, #0x4a5
  42cb24:	mov	w1, w24
  42cb28:	mov	x2, x25
  42cb2c:	mov	w3, w27
  42cb30:	mov	x4, x26
  42cb34:	blr	x8
  42cb38:	b	42cc54 <wcrtomb@plt+0x27e34>
  42cb3c:	ldur	x0, [x29, #-16]
  42cb40:	bl	4049d0 <free@plt>
  42cb44:	ldr	x8, [sp, #248]
  42cb48:	add	x0, sp, #0xf0
  42cb4c:	ldr	x9, [x8]
  42cb50:	stur	x9, [x29, #-16]
  42cb54:	str	xzr, [x8]
  42cb58:	bl	42a140 <wcrtomb@plt+0x25320>
  42cb5c:	mov	w26, #0x4                   	// #4
  42cb60:	mov	w8, #0x1                   	// #1
  42cb64:	tbnz	w8, #0, 42cc6c <wcrtomb@plt+0x27e4c>
  42cb68:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42cb6c:	ldr	x8, [sp, #248]
  42cb70:	add	x0, sp, #0xf0
  42cb74:	ldr	x9, [x8]
  42cb78:	stur	x9, [x29, #-16]
  42cb7c:	str	xzr, [x8]
  42cb80:	bl	42a140 <wcrtomb@plt+0x25320>
  42cb84:	ldrb	w8, [x27]
  42cb88:	cmp	w8, #0x3d
  42cb8c:	b.ne	42cc60 <wcrtomb@plt+0x27e40>  // b.any
  42cb90:	ldur	x3, [x29, #-16]
  42cb94:	mov	x0, x19
  42cb98:	mov	x1, x25
  42cb9c:	mov	x2, x24
  42cba0:	bl	42cfb4 <wcrtomb@plt+0x28194>
  42cba4:	b	42cc60 <wcrtomb@plt+0x27e40>
  42cba8:	add	x8, x12, #0x1
  42cbac:	mov	x28, xzr
  42cbb0:	b	42cbe4 <wcrtomb@plt+0x27dc4>
  42cbb4:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x18da0>
  42cbb8:	add	x1, x24, #0x1
  42cbbc:	add	x4, x4, #0x3c8
  42cbc0:	add	x3, sp, #0xf0
  42cbc4:	mov	x0, x25
  42cbc8:	mov	x2, x26
  42cbcc:	bl	42b4a0 <wcrtomb@plt+0x26680>
  42cbd0:	cbnz	w0, 42cbf0 <wcrtomb@plt+0x27dd0>
  42cbd4:	ldr	x8, [sp, #240]
  42cbd8:	add	x9, x27, x24
  42cbdc:	add	x28, x9, #0x2
  42cbe0:	add	x8, x25, x8
  42cbe4:	str	x8, [x22]
  42cbe8:	cmp	x24, x26
  42cbec:	b.ne	42c740 <wcrtomb@plt+0x27920>  // b.any
  42cbf0:	mov	w1, #0x4                   	// #4
  42cbf4:	mov	x0, x19
  42cbf8:	mov	w26, #0x4                   	// #4
  42cbfc:	bl	42a2cc <wcrtomb@plt+0x254ac>
  42cc00:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42cc04:	stur	xzr, [x29, #-16]
  42cc08:	mov	w26, #0x4                   	// #4
  42cc0c:	b	42cc6c <wcrtomb@plt+0x27e4c>
  42cc10:	ldr	x26, [x19, #96]
  42cc14:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42cc18:	add	x1, x1, #0x47d
  42cc1c:	mov	w2, #0x5                   	// #5
  42cc20:	mov	x0, xzr
  42cc24:	bl	404bf0 <dcgettext@plt>
  42cc28:	mov	w1, w24
  42cc2c:	mov	x2, x25
  42cc30:	blr	x26
  42cc34:	b	42cc5c <wcrtomb@plt+0x27e3c>
  42cc38:	ldr	x9, [sp, #248]
  42cc3c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42cc40:	add	x0, x0, #0x49c
  42cc44:	mov	w1, w24
  42cc48:	ldr	x3, [x9]
  42cc4c:	mov	x2, x25
  42cc50:	blr	x8
  42cc54:	add	x0, sp, #0xf0
  42cc58:	bl	42a140 <wcrtomb@plt+0x25320>
  42cc5c:	stur	xzr, [x29, #-16]
  42cc60:	mov	w26, #0x4                   	// #4
  42cc64:	mov	w8, #0x1                   	// #1
  42cc68:	tbz	w8, #0, 42cdd4 <wcrtomb@plt+0x27fb4>
  42cc6c:	ldur	x24, [x29, #-16]
  42cc70:	cbz	x24, 42cca8 <wcrtomb@plt+0x27e88>
  42cc74:	tbnz	w21, #2, 42ccd0 <wcrtomb@plt+0x27eb0>
  42cc78:	ldrb	w8, [x24]
  42cc7c:	cbz	w8, 42ccf0 <wcrtomb@plt+0x27ed0>
  42cc80:	mov	x0, x24
  42cc84:	bl	404190 <strlen@plt>
  42cc88:	ldrb	w8, [x19, #33]
  42cc8c:	mov	x3, x0
  42cc90:	tbnz	w8, #4, 42cd60 <wcrtomb@plt+0x27f40>
  42cc94:	ldr	w8, [x19, #36]
  42cc98:	mov	w4, #0x644                 	// #1604
  42cc9c:	lsr	w8, w8, #7
  42cca0:	bfi	w4, w8, #12, #1
  42cca4:	b	42cd64 <wcrtomb@plt+0x27f44>
  42cca8:	ldrb	w8, [x19, #34]
  42ccac:	tbz	w8, #7, 42ccf8 <wcrtomb@plt+0x27ed8>
  42ccb0:	ldr	x22, [x22]
  42ccb4:	add	x1, sp, #0x8
  42ccb8:	mov	x0, x19
  42ccbc:	bl	42b564 <wcrtomb@plt+0x26744>
  42ccc0:	cbz	w0, 42cdf8 <wcrtomb@plt+0x27fd8>
  42ccc4:	mov	w8, wzr
  42ccc8:	mov	w26, #0x1                   	// #1
  42cccc:	b	42ce68 <wcrtomb@plt+0x28048>
  42ccd0:	add	x1, sp, #0x8
  42ccd4:	mov	x0, x19
  42ccd8:	bl	42b564 <wcrtomb@plt+0x26744>
  42ccdc:	cbz	w0, 42cd2c <wcrtomb@plt+0x27f0c>
  42cce0:	ldur	x0, [x29, #-16]
  42cce4:	bl	4049d0 <free@plt>
  42cce8:	mov	w26, #0x1                   	// #1
  42ccec:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42ccf0:	mov	x0, x24
  42ccf4:	bl	4049d0 <free@plt>
  42ccf8:	add	x1, sp, #0x8
  42ccfc:	mov	x0, x19
  42cd00:	bl	42b564 <wcrtomb@plt+0x26744>
  42cd04:	mov	w26, #0x1                   	// #1
  42cd08:	cbnz	w0, 42cdd4 <wcrtomb@plt+0x27fb4>
  42cd0c:	ldr	x1, [sp, #8]
  42cd10:	ldr	x2, [x20]
  42cd14:	mov	x0, x19
  42cd18:	bl	42c448 <wcrtomb@plt+0x27628>
  42cd1c:	ldr	x8, [sp, #8]
  42cd20:	str	x8, [x20]
  42cd24:	str	w26, [x8, #16]
  42cd28:	b	42cdd0 <wcrtomb@plt+0x27fb0>
  42cd2c:	ldr	x1, [sp, #8]
  42cd30:	ldr	x2, [x20]
  42cd34:	mov	x0, x19
  42cd38:	bl	42c448 <wcrtomb@plt+0x27628>
  42cd3c:	ldr	x8, [sp, #8]
  42cd40:	mov	w9, #0xa                   	// #10
  42cd44:	orr	w9, w21, w9
  42cd48:	str	x8, [x20]
  42cd4c:	str	w9, [x8, #16]
  42cd50:	ldur	x8, [x29, #-16]
  42cd54:	ldr	x9, [sp, #8]
  42cd58:	str	x8, [x9, #24]
  42cd5c:	b	42cdd0 <wcrtomb@plt+0x27fb0>
  42cd60:	mov	w4, #0x1644                	// #5700
  42cd64:	add	x1, sp, #0x8
  42cd68:	mov	x0, x19
  42cd6c:	mov	x2, x24
  42cd70:	mov	w5, wzr
  42cd74:	bl	42c4d0 <wcrtomb@plt+0x276b0>
  42cd78:	ldur	x8, [x29, #-16]
  42cd7c:	mov	w21, w0
  42cd80:	mov	x0, x8
  42cd84:	bl	4049d0 <free@plt>
  42cd88:	cbz	w21, 42cda4 <wcrtomb@plt+0x27f84>
  42cd8c:	add	x1, sp, #0x8
  42cd90:	mov	x0, x19
  42cd94:	bl	42c5f4 <wcrtomb@plt+0x277d4>
  42cd98:	mov	w19, wzr
  42cd9c:	mov	w26, #0x1                   	// #1
  42cda0:	b	42cdc4 <wcrtomb@plt+0x27fa4>
  42cda4:	ldr	x1, [sp, #216]
  42cda8:	ldr	x2, [x20]
  42cdac:	mov	x0, x19
  42cdb0:	bl	42c448 <wcrtomb@plt+0x27628>
  42cdb4:	ldr	x8, [sp, #224]
  42cdb8:	mov	w19, #0x1                   	// #1
  42cdbc:	str	x8, [x20]
  42cdc0:	stp	xzr, xzr, [sp, #216]
  42cdc4:	add	x0, sp, #0x8
  42cdc8:	bl	42a140 <wcrtomb@plt+0x25320>
  42cdcc:	tbz	w19, #0, 42cdd4 <wcrtomb@plt+0x27fb4>
  42cdd0:	mov	w26, wzr
  42cdd4:	mov	w0, w26
  42cdd8:	add	sp, sp, #0x1f0
  42cddc:	ldp	x20, x19, [sp, #80]
  42cde0:	ldp	x22, x21, [sp, #64]
  42cde4:	ldp	x24, x23, [sp, #48]
  42cde8:	ldp	x26, x25, [sp, #32]
  42cdec:	ldp	x28, x27, [sp, #16]
  42cdf0:	ldp	x29, x30, [sp], #96
  42cdf4:	ret
  42cdf8:	ldr	x1, [sp, #8]
  42cdfc:	ldr	x2, [x20]
  42ce00:	mov	x0, x19
  42ce04:	sub	x22, x22, x23
  42ce08:	bl	42c448 <wcrtomb@plt+0x27628>
  42ce0c:	ldr	x8, [sp, #8]
  42ce10:	mov	w9, #0xa                   	// #10
  42ce14:	orr	w9, w21, w9
  42ce18:	add	x0, x22, #0x2
  42ce1c:	str	x8, [x20]
  42ce20:	str	w9, [x8, #16]
  42ce24:	bl	4044f0 <malloc@plt>
  42ce28:	ldr	x8, [sp, #8]
  42ce2c:	str	x0, [x8, #24]
  42ce30:	cbz	x0, 42ce58 <wcrtomb@plt+0x28038>
  42ce34:	add	x19, x22, #0x1
  42ce38:	mov	x1, x23
  42ce3c:	mov	x2, x19
  42ce40:	bl	404110 <memcpy@plt>
  42ce44:	ldr	x8, [sp, #8]
  42ce48:	ldr	x8, [x8, #24]
  42ce4c:	strb	wzr, [x8, x19]
  42ce50:	mov	w8, #0x1                   	// #1
  42ce54:	b	42ce68 <wcrtomb@plt+0x28048>
  42ce58:	mov	x0, x19
  42ce5c:	bl	429b94 <wcrtomb@plt+0x24d74>
  42ce60:	mov	w26, w0
  42ce64:	mov	w8, wzr
  42ce68:	tbnz	w8, #0, 42cdd0 <wcrtomb@plt+0x27fb0>
  42ce6c:	b	42cdd4 <wcrtomb@plt+0x27fb4>
  42ce70:	stp	x29, x30, [sp, #-80]!
  42ce74:	stp	x24, x23, [sp, #32]
  42ce78:	stp	x22, x21, [sp, #48]
  42ce7c:	stp	x20, x19, [sp, #64]
  42ce80:	ldr	w8, [x0, #32]
  42ce84:	str	x25, [sp, #16]
  42ce88:	mov	x29, sp
  42ce8c:	tbnz	w8, #19, 42ceac <wcrtomb@plt+0x2808c>
  42ce90:	mov	w0, #0x5                   	// #5
  42ce94:	ldp	x20, x19, [sp, #64]
  42ce98:	ldp	x22, x21, [sp, #48]
  42ce9c:	ldp	x24, x23, [sp, #32]
  42cea0:	ldr	x25, [sp, #16]
  42cea4:	ldp	x29, x30, [sp], #80
  42cea8:	ret
  42ceac:	ldr	x24, [x0, #112]
  42ceb0:	mov	x19, x3
  42ceb4:	mov	x20, x2
  42ceb8:	mov	x22, x0
  42cebc:	mov	x21, x1
  42cec0:	tbnz	w8, #27, 42cf34 <wcrtomb@plt+0x28114>
  42cec4:	cbz	x24, 42ce90 <wcrtomb@plt+0x28070>
  42cec8:	ldr	x8, [x24]
  42cecc:	cbz	x8, 42ce90 <wcrtomb@plt+0x28070>
  42ced0:	mov	x9, xzr
  42ced4:	b	42cee4 <wcrtomb@plt+0x280c4>
  42ced8:	add	x9, x9, #0x1
  42cedc:	ldr	x8, [x24, x9, lsl #3]
  42cee0:	cbz	x8, 42ce90 <wcrtomb@plt+0x28070>
  42cee4:	mov	x10, xzr
  42cee8:	cbz	x20, 42cf0c <wcrtomb@plt+0x280ec>
  42ceec:	ldrb	w11, [x21, x10]
  42cef0:	ldrb	w12, [x8, x10]
  42cef4:	cmp	w11, w12
  42cef8:	b.ne	42cf0c <wcrtomb@plt+0x280ec>  // b.any
  42cefc:	add	x10, x10, #0x1
  42cf00:	cmp	x20, x10
  42cf04:	b.ne	42ceec <wcrtomb@plt+0x280cc>  // b.any
  42cf08:	mov	x10, x20
  42cf0c:	cmp	x10, x20
  42cf10:	b.ne	42ced8 <wcrtomb@plt+0x280b8>  // b.any
  42cf14:	ldrb	w11, [x8, x10]
  42cf18:	cmp	w11, #0x3d
  42cf1c:	b.ne	42ced8 <wcrtomb@plt+0x280b8>  // b.any
  42cf20:	add	x8, x8, x10
  42cf24:	add	x8, x8, #0x1
  42cf28:	mov	w0, wzr
  42cf2c:	str	x8, [x19]
  42cf30:	b	42ce94 <wcrtomb@plt+0x28074>
  42cf34:	ldr	x23, [x24]
  42cf38:	cbz	x23, 42ce90 <wcrtomb@plt+0x28070>
  42cf3c:	mov	x25, xzr
  42cf40:	b	42cf6c <wcrtomb@plt+0x2814c>
  42cf44:	add	x25, x25, #0x1
  42cf48:	ldr	x8, [x24, x25, lsl #3]
  42cf4c:	cmp	x8, #0x0
  42cf50:	cset	w8, eq  // eq = none
  42cf54:	lsl	w8, w8, #1
  42cf58:	cbnz	w8, 42cfa4 <wcrtomb@plt+0x28184>
  42cf5c:	ldr	x24, [x22, #112]
  42cf60:	add	x25, x25, #0x1
  42cf64:	ldr	x23, [x24, x25, lsl #3]
  42cf68:	cbz	x23, 42ce90 <wcrtomb@plt+0x28070>
  42cf6c:	mov	x0, x23
  42cf70:	bl	404190 <strlen@plt>
  42cf74:	cmp	x0, x20
  42cf78:	b.ne	42cf44 <wcrtomb@plt+0x28124>  // b.any
  42cf7c:	mov	x2, x0
  42cf80:	mov	x0, x23
  42cf84:	mov	x1, x21
  42cf88:	bl	4046d0 <bcmp@plt>
  42cf8c:	cbnz	w0, 42cf44 <wcrtomb@plt+0x28124>
  42cf90:	add	x8, x24, x25, lsl #3
  42cf94:	ldr	x8, [x8, #8]
  42cf98:	str	x8, [x19]
  42cf9c:	mov	w8, #0x1                   	// #1
  42cfa0:	cbz	w8, 42cf5c <wcrtomb@plt+0x2813c>
  42cfa4:	cmp	w8, #0x2
  42cfa8:	b.eq	42ce90 <wcrtomb@plt+0x28070>  // b.none
  42cfac:	mov	w0, wzr
  42cfb0:	b	42ce94 <wcrtomb@plt+0x28074>
  42cfb4:	stp	x29, x30, [sp, #-96]!
  42cfb8:	stp	x26, x25, [sp, #32]
  42cfbc:	stp	x24, x23, [sp, #48]
  42cfc0:	stp	x22, x21, [sp, #64]
  42cfc4:	stp	x20, x19, [sp, #80]
  42cfc8:	ldr	w23, [x0, #32]
  42cfcc:	str	x27, [sp, #16]
  42cfd0:	ldp	x10, x9, [x0, #128]
  42cfd4:	mov	w8, #0x1                   	// #1
  42cfd8:	tst	w23, #0x8000000
  42cfdc:	cinc	x8, x8, ne  // ne = any
  42cfe0:	add	x10, x8, x10
  42cfe4:	mov	x20, x3
  42cfe8:	mov	x21, x2
  42cfec:	mov	x19, x0
  42cff0:	cmp	x10, x9
  42cff4:	mov	x22, x1
  42cff8:	mov	x29, sp
  42cffc:	b.cc	42d130 <wcrtomb@plt+0x28310>  // b.lo, b.ul, b.last
  42d000:	ldr	x10, [x19, #120]
  42d004:	cbz	x10, 42d028 <wcrtomb@plt+0x28208>
  42d008:	ldr	x0, [x19, #120]
  42d00c:	lsl	x8, x9, #1
  42d010:	lsl	x1, x9, #4
  42d014:	str	x8, [x19, #136]
  42d018:	bl	404730 <realloc@plt>
  42d01c:	cbz	x0, 42d054 <wcrtomb@plt+0x28234>
  42d020:	stp	x0, x0, [x19, #112]
  42d024:	b	42d128 <wcrtomb@plt+0x28308>
  42d028:	tbnz	w23, #19, 42d064 <wcrtomb@plt+0x28244>
  42d02c:	mov	w0, #0x10                  	// #16
  42d030:	mov	w1, #0x8                   	// #8
  42d034:	bl	4046a0 <calloc@plt>
  42d038:	cbz	x0, 42d054 <wcrtomb@plt+0x28234>
  42d03c:	mov	w8, #0x10                  	// #16
  42d040:	orr	w9, w23, #0x80000
  42d044:	stp	x0, x0, [x19, #112]
  42d048:	stp	xzr, x8, [x19, #128]
  42d04c:	str	w9, [x19, #32]
  42d050:	b	42d128 <wcrtomb@plt+0x28308>
  42d054:	mov	x0, x19
  42d058:	bl	429b94 <wcrtomb@plt+0x24d74>
  42d05c:	mov	w8, #0x1                   	// #1
  42d060:	b	42d12c <wcrtomb@plt+0x2830c>
  42d064:	ldr	x9, [x19, #112]
  42d068:	cbz	x9, 42d084 <wcrtomb@plt+0x28264>
  42d06c:	mov	x10, xzr
  42d070:	ldr	x11, [x9, x10, lsl #3]
  42d074:	add	x10, x10, #0x1
  42d078:	cbnz	x11, 42d070 <wcrtomb@plt+0x28250>
  42d07c:	sub	x25, x10, #0x1
  42d080:	b	42d088 <wcrtomb@plt+0x28268>
  42d084:	mov	x25, xzr
  42d088:	add	x8, x8, x25
  42d08c:	add	x24, x8, #0x1
  42d090:	mov	w1, #0x8                   	// #8
  42d094:	mov	x0, x24
  42d098:	bl	4046a0 <calloc@plt>
  42d09c:	cbz	x0, 42d118 <wcrtomb@plt+0x282f8>
  42d0a0:	mov	x23, x0
  42d0a4:	cbz	x25, 42d0d8 <wcrtomb@plt+0x282b8>
  42d0a8:	mov	x26, xzr
  42d0ac:	ldr	x8, [x19, #112]
  42d0b0:	lsl	x27, x26, #3
  42d0b4:	ldr	x0, [x8, x27]
  42d0b8:	bl	404780 <strdup@plt>
  42d0bc:	str	x0, [x23, x27]
  42d0c0:	cbz	x0, 42d0f4 <wcrtomb@plt+0x282d4>
  42d0c4:	add	x26, x26, #0x1
  42d0c8:	cmp	x25, x26
  42d0cc:	b.ne	42d0ac <wcrtomb@plt+0x2828c>  // b.any
  42d0d0:	mov	x9, x25
  42d0d4:	b	42d0dc <wcrtomb@plt+0x282bc>
  42d0d8:	mov	x9, xzr
  42d0dc:	mov	w8, wzr
  42d0e0:	str	xzr, [x23, x9, lsl #3]
  42d0e4:	stp	x25, x24, [x19, #128]
  42d0e8:	stp	x23, x23, [x19, #112]
  42d0ec:	cbnz	wzr, 42d12c <wcrtomb@plt+0x2830c>
  42d0f0:	b	42d128 <wcrtomb@plt+0x28308>
  42d0f4:	sub	x24, x26, #0x1
  42d0f8:	ldr	x0, [x23, x24, lsl #3]
  42d0fc:	bl	4049d0 <free@plt>
  42d100:	add	x8, x24, #0x1
  42d104:	sub	x24, x24, #0x1
  42d108:	cmp	x8, #0x1
  42d10c:	b.hi	42d0f8 <wcrtomb@plt+0x282d8>  // b.pmore
  42d110:	mov	x0, x23
  42d114:	bl	4049d0 <free@plt>
  42d118:	mov	x0, x19
  42d11c:	bl	429b94 <wcrtomb@plt+0x24d74>
  42d120:	mov	w8, #0x1                   	// #1
  42d124:	cbnz	w8, 42d12c <wcrtomb@plt+0x2830c>
  42d128:	mov	w8, wzr
  42d12c:	cbnz	w8, 42d20c <wcrtomb@plt+0x283ec>
  42d130:	ldrb	w8, [x19, #35]
  42d134:	tbnz	w8, #3, 42d18c <wcrtomb@plt+0x2836c>
  42d138:	mov	x0, x20
  42d13c:	bl	404190 <strlen@plt>
  42d140:	add	x8, x21, x0
  42d144:	add	x0, x8, #0x2
  42d148:	bl	4044f0 <malloc@plt>
  42d14c:	cbz	x0, 42d204 <wcrtomb@plt+0x283e4>
  42d150:	mov	x1, x22
  42d154:	mov	x2, x21
  42d158:	mov	x23, x0
  42d15c:	bl	404110 <memcpy@plt>
  42d160:	add	x0, x23, x21
  42d164:	mov	w8, #0x3d                  	// #61
  42d168:	strb	w8, [x0], #1
  42d16c:	mov	x1, x20
  42d170:	bl	404b20 <strcpy@plt>
  42d174:	ldr	x8, [x19, #128]
  42d178:	ldr	x9, [x19, #112]
  42d17c:	add	x10, x8, #0x1
  42d180:	add	x8, x9, x8, lsl #3
  42d184:	str	x10, [x19, #128]
  42d188:	b	42d1e0 <wcrtomb@plt+0x283c0>
  42d18c:	add	x0, x21, #0x1
  42d190:	bl	4044f0 <malloc@plt>
  42d194:	cbz	x0, 42d204 <wcrtomb@plt+0x283e4>
  42d198:	mov	x1, x22
  42d19c:	mov	x2, x21
  42d1a0:	mov	x24, x0
  42d1a4:	bl	404110 <memcpy@plt>
  42d1a8:	mov	x0, x20
  42d1ac:	strb	wzr, [x24, x21]
  42d1b0:	bl	404780 <strdup@plt>
  42d1b4:	cbz	x0, 42d1fc <wcrtomb@plt+0x283dc>
  42d1b8:	ldr	x8, [x19, #128]
  42d1bc:	ldr	x9, [x19, #112]
  42d1c0:	mov	x23, x0
  42d1c4:	add	x10, x8, #0x1
  42d1c8:	str	x10, [x19, #128]
  42d1cc:	str	x24, [x9, x8, lsl #3]
  42d1d0:	ldr	x9, [x19, #112]
  42d1d4:	add	x8, x8, #0x2
  42d1d8:	str	x8, [x19, #128]
  42d1dc:	add	x8, x9, x10, lsl #3
  42d1e0:	str	x23, [x8]
  42d1e4:	ldr	x8, [x19, #128]
  42d1e8:	ldr	x9, [x19, #112]
  42d1ec:	add	x10, x8, #0x1
  42d1f0:	str	x10, [x19, #128]
  42d1f4:	str	xzr, [x9, x8, lsl #3]
  42d1f8:	b	42d20c <wcrtomb@plt+0x283ec>
  42d1fc:	mov	x0, x24
  42d200:	bl	4049d0 <free@plt>
  42d204:	mov	x0, x19
  42d208:	bl	429b94 <wcrtomb@plt+0x24d74>
  42d20c:	ldp	x20, x19, [sp, #80]
  42d210:	ldp	x22, x21, [sp, #64]
  42d214:	ldp	x24, x23, [sp, #48]
  42d218:	ldp	x26, x25, [sp, #32]
  42d21c:	ldr	x27, [sp, #16]
  42d220:	ldp	x29, x30, [sp], #96
  42d224:	ret
  42d228:	sub	sp, sp, #0x80
  42d22c:	stp	x22, x21, [sp, #96]
  42d230:	mov	x21, x2
  42d234:	stp	x29, x30, [sp, #32]
  42d238:	stp	x28, x27, [sp, #48]
  42d23c:	stp	x26, x25, [sp, #64]
  42d240:	stp	x24, x23, [sp, #80]
  42d244:	stp	x20, x19, [sp, #112]
  42d248:	add	x29, sp, #0x20
  42d24c:	cbz	x4, 42d3c4 <wcrtomb@plt+0x285a4>
  42d250:	cmp	w1, #0x0
  42d254:	cset	w12, ne  // ne = any
  42d258:	mov	w9, #0x40                  	// #64
  42d25c:	lsl	x13, x12, #2
  42d260:	add	x12, x0, w12, uxtw #3
  42d264:	mov	w10, #0x20                  	// #32
  42d268:	mov	w11, #0x10                  	// #16
  42d26c:	lsl	w24, w9, w13
  42d270:	add	x9, x12, #0x48
  42d274:	mov	x19, x4
  42d278:	mov	x20, x3
  42d27c:	mov	x22, x0
  42d280:	mov	x8, xzr
  42d284:	mov	w28, wzr
  42d288:	lsl	w25, w10, w13
  42d28c:	str	x9, [sp, #16]
  42d290:	lsl	w9, w11, w13
  42d294:	str	w9, [sp, #12]
  42d298:	b	42d2d4 <wcrtomb@plt+0x284b4>
  42d29c:	add	x1, x23, #0x1
  42d2a0:	sub	x0, x29, #0x4
  42d2a4:	mov	w2, #0x10                  	// #16
  42d2a8:	mov	w3, #0x2                   	// #2
  42d2ac:	bl	42d3e8 <wcrtomb@plt+0x285c8>
  42d2b0:	cbz	w0, 42d360 <wcrtomb@plt+0x28540>
  42d2b4:	ldur	w8, [x29, #-4]
  42d2b8:	add	w9, w28, w0
  42d2bc:	add	w27, w9, #0x2
  42d2c0:	strb	w8, [x21], #1
  42d2c4:	sxtw	x8, w27
  42d2c8:	cmp	x8, x19
  42d2cc:	mov	w28, w27
  42d2d0:	b.cs	42d3c4 <wcrtomb@plt+0x285a4>  // b.hs, b.nlast
  42d2d4:	ldrb	w8, [x20, x8]
  42d2d8:	sxtw	x9, w28
  42d2dc:	add	x27, x9, #0x1
  42d2e0:	cmp	w8, #0x5c
  42d2e4:	b.ne	42d2c0 <wcrtomb@plt+0x284a0>  // b.any
  42d2e8:	ldr	w26, [x22, #36]
  42d2ec:	tst	w26, w24
  42d2f0:	b.eq	42d318 <wcrtomb@plt+0x284f8>  // b.none
  42d2f4:	add	x23, x20, x27
  42d2f8:	ldrb	w8, [x23]
  42d2fc:	orr	w8, w8, #0x20
  42d300:	cmp	w8, #0x78
  42d304:	b.ne	42d318 <wcrtomb@plt+0x284f8>  // b.any
  42d308:	sub	x8, x19, x27
  42d30c:	cmp	x8, #0x1
  42d310:	b.ls	42d360 <wcrtomb@plt+0x28540>  // b.plast
  42d314:	b	42d29c <wcrtomb@plt+0x2847c>
  42d318:	tst	w26, w25
  42d31c:	b.eq	42d37c <wcrtomb@plt+0x2855c>  // b.none
  42d320:	add	x23, x20, x27
  42d324:	ldrb	w8, [x23]
  42d328:	sub	w8, w8, #0x30
  42d32c:	cmp	w8, #0x9
  42d330:	b.hi	42d37c <wcrtomb@plt+0x2855c>  // b.pmore
  42d334:	cmp	x27, x19
  42d338:	b.eq	42d360 <wcrtomb@plt+0x28540>  // b.none
  42d33c:	sub	x0, x29, #0x4
  42d340:	mov	w2, #0x8                   	// #8
  42d344:	mov	w3, #0x3                   	// #3
  42d348:	mov	x1, x23
  42d34c:	bl	42d3e8 <wcrtomb@plt+0x285c8>
  42d350:	cbz	w0, 42d360 <wcrtomb@plt+0x28540>
  42d354:	ldur	w8, [x29, #-4]
  42d358:	add	w27, w0, w27
  42d35c:	b	42d2c0 <wcrtomb@plt+0x284a0>
  42d360:	mov	w8, #0x5c                  	// #92
  42d364:	strb	w8, [x21]
  42d368:	ldrb	w8, [x23]
  42d36c:	add	w27, w28, #0x2
  42d370:	strb	w8, [x21, #1]
  42d374:	add	x21, x21, #0x2
  42d378:	b	42d2c4 <wcrtomb@plt+0x284a4>
  42d37c:	ldr	x8, [sp, #16]
  42d380:	ldrb	w1, [x20, x27]
  42d384:	ldr	x0, [x8]
  42d388:	bl	429d6c <wcrtomb@plt+0x24f4c>
  42d38c:	stur	w0, [x29, #-4]
  42d390:	cbz	w0, 42d3a0 <wcrtomb@plt+0x28580>
  42d394:	strb	w0, [x21], #1
  42d398:	add	w27, w28, #0x2
  42d39c:	b	42d2c4 <wcrtomb@plt+0x284a4>
  42d3a0:	ldr	w8, [sp, #12]
  42d3a4:	tst	w26, w8
  42d3a8:	b.eq	42d3b4 <wcrtomb@plt+0x28594>  // b.none
  42d3ac:	mov	w8, #0x5c                  	// #92
  42d3b0:	strb	w8, [x21], #1
  42d3b4:	ldrb	w8, [x20, x27]
  42d3b8:	add	w9, w28, #0x2
  42d3bc:	mov	w27, w9
  42d3c0:	b	42d2c0 <wcrtomb@plt+0x284a0>
  42d3c4:	strb	wzr, [x21]
  42d3c8:	ldp	x20, x19, [sp, #112]
  42d3cc:	ldp	x22, x21, [sp, #96]
  42d3d0:	ldp	x24, x23, [sp, #80]
  42d3d4:	ldp	x26, x25, [sp, #64]
  42d3d8:	ldp	x28, x27, [sp, #48]
  42d3dc:	ldp	x29, x30, [sp, #32]
  42d3e0:	add	sp, sp, #0x80
  42d3e4:	ret
  42d3e8:	stp	x29, x30, [sp, #-80]!
  42d3ec:	stp	x20, x19, [sp, #64]
  42d3f0:	cmp	w3, #0x1
  42d3f4:	mov	x19, x0
  42d3f8:	stp	x26, x25, [sp, #16]
  42d3fc:	stp	x24, x23, [sp, #32]
  42d400:	stp	x22, x21, [sp, #48]
  42d404:	mov	x29, sp
  42d408:	b.lt	42d4a0 <wcrtomb@plt+0x28680>  // b.tstop
  42d40c:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x18da0>
  42d410:	mov	w21, w2
  42d414:	mov	x22, x1
  42d418:	mov	x26, xzr
  42d41c:	mov	w25, wzr
  42d420:	mov	w20, w3
  42d424:	add	x23, x23, #0x4d3
  42d428:	b	42d440 <wcrtomb@plt+0x28620>
  42d42c:	mov	w8, wzr
  42d430:	cbz	w8, 42d4ac <wcrtomb@plt+0x2868c>
  42d434:	add	x26, x26, #0x1
  42d438:	cmp	w20, w26
  42d43c:	b.eq	42d4b0 <wcrtomb@plt+0x28690>  // b.none
  42d440:	ldrsb	w8, [x22, x26]
  42d444:	tbnz	w8, #31, 42d42c <wcrtomb@plt+0x2860c>
  42d448:	and	w24, w8, #0xff
  42d44c:	sub	w8, w24, #0x30
  42d450:	cmp	w8, #0x9
  42d454:	b.ls	42d478 <wcrtomb@plt+0x28658>  // b.plast
  42d458:	mov	w2, #0xd                   	// #13
  42d45c:	mov	x0, x23
  42d460:	mov	w1, w24
  42d464:	bl	404b70 <memchr@plt>
  42d468:	cbz	x0, 42d490 <wcrtomb@plt+0x28670>
  42d46c:	mov	w0, w24
  42d470:	bl	404500 <toupper@plt>
  42d474:	sub	w8, w0, #0x37
  42d478:	cmp	w8, w21
  42d47c:	b.ge	42d42c <wcrtomb@plt+0x2860c>  // b.tcont
  42d480:	madd	w25, w25, w21, w8
  42d484:	mov	w8, #0x1                   	// #1
  42d488:	cbnz	w8, 42d434 <wcrtomb@plt+0x28614>
  42d48c:	b	42d4ac <wcrtomb@plt+0x2868c>
  42d490:	mov	w8, #0xff                  	// #255
  42d494:	cmp	w8, w21
  42d498:	b.lt	42d480 <wcrtomb@plt+0x28660>  // b.tstop
  42d49c:	b	42d42c <wcrtomb@plt+0x2860c>
  42d4a0:	mov	w20, wzr
  42d4a4:	mov	w25, wzr
  42d4a8:	b	42d4b0 <wcrtomb@plt+0x28690>
  42d4ac:	mov	w20, w26
  42d4b0:	str	w25, [x19]
  42d4b4:	mov	w0, w20
  42d4b8:	ldp	x20, x19, [sp, #64]
  42d4bc:	ldp	x22, x21, [sp, #48]
  42d4c0:	ldp	x24, x23, [sp, #32]
  42d4c4:	ldp	x26, x25, [sp, #16]
  42d4c8:	ldp	x29, x30, [sp], #80
  42d4cc:	ret
  42d4d0:	stp	x29, x30, [sp, #-48]!
  42d4d4:	str	x21, [sp, #16]
  42d4d8:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x18da0>
  42d4dc:	stp	x20, x19, [sp, #32]
  42d4e0:	mov	w19, w1
  42d4e4:	mov	x20, x0
  42d4e8:	add	x21, x21, #0x4fa
  42d4ec:	mov	x29, sp
  42d4f0:	cbz	w19, 42d514 <wcrtomb@plt+0x286f4>
  42d4f4:	ldrb	w1, [x20], #1
  42d4f8:	mov	w2, #0x4                   	// #4
  42d4fc:	mov	x0, x21
  42d500:	sub	w19, w19, #0x1
  42d504:	bl	404b70 <memchr@plt>
  42d508:	cbz	x0, 42d4f0 <wcrtomb@plt+0x286d0>
  42d50c:	mov	w0, #0x1                   	// #1
  42d510:	b	42d518 <wcrtomb@plt+0x286f8>
  42d514:	mov	w0, wzr
  42d518:	ldp	x20, x19, [sp, #32]
  42d51c:	ldr	x21, [sp, #16]
  42d520:	ldp	x29, x30, [sp], #48
  42d524:	ret
  42d528:	stp	x29, x30, [sp, #-96]!
  42d52c:	stp	x28, x27, [sp, #16]
  42d530:	stp	x26, x25, [sp, #32]
  42d534:	stp	x24, x23, [sp, #48]
  42d538:	stp	x22, x21, [sp, #64]
  42d53c:	stp	x20, x19, [sp, #80]
  42d540:	mov	x29, sp
  42d544:	sub	sp, sp, #0xfd0
  42d548:	mov	w19, w5
  42d54c:	mov	x20, x4
  42d550:	mov	x21, x3
  42d554:	mov	x22, x2
  42d558:	cmn	w0, #0x64
  42d55c:	mov	x24, x1
  42d560:	b.eq	42d570 <wcrtomb@plt+0x28750>  // b.none
  42d564:	ldrb	w8, [x24]
  42d568:	cmp	w8, #0x2f
  42d56c:	b.ne	42d5b0 <wcrtomb@plt+0x28790>  // b.any
  42d570:	mov	x0, x24
  42d574:	mov	x1, x22
  42d578:	mov	x2, x21
  42d57c:	mov	x3, x20
  42d580:	mov	w4, w19
  42d584:	bl	4045d0 <setxattr@plt>
  42d588:	mov	w23, w0
  42d58c:	mov	w0, w23
  42d590:	add	sp, sp, #0xfd0
  42d594:	ldp	x20, x19, [sp, #80]
  42d598:	ldp	x22, x21, [sp, #64]
  42d59c:	ldp	x24, x23, [sp, #48]
  42d5a0:	ldp	x26, x25, [sp, #32]
  42d5a4:	ldp	x28, x27, [sp, #16]
  42d5a8:	ldp	x29, x30, [sp], #96
  42d5ac:	ret
  42d5b0:	mov	w25, w0
  42d5b4:	add	x0, sp, #0x8
  42d5b8:	mov	w1, w25
  42d5bc:	mov	x2, x24
  42d5c0:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  42d5c4:	cbz	x0, 42d61c <wcrtomb@plt+0x287fc>
  42d5c8:	mov	x1, x22
  42d5cc:	mov	x2, x21
  42d5d0:	mov	x3, x20
  42d5d4:	mov	w4, w19
  42d5d8:	mov	x27, x0
  42d5dc:	bl	4045d0 <setxattr@plt>
  42d5e0:	add	x28, sp, #0x8
  42d5e4:	mov	w23, w0
  42d5e8:	bl	404d00 <__errno_location@plt>
  42d5ec:	ldr	w11, [x0]
  42d5f0:	mov	x26, x0
  42d5f4:	cmp	x27, x28
  42d5f8:	b.eq	42d60c <wcrtomb@plt+0x287ec>  // b.none
  42d5fc:	mov	x0, x27
  42d600:	mov	w27, w11
  42d604:	bl	4049d0 <free@plt>
  42d608:	mov	w11, w27
  42d60c:	cmn	w23, #0x1
  42d610:	b.eq	42d620 <wcrtomb@plt+0x28800>  // b.none
  42d614:	mov	w8, #0x1                   	// #1
  42d618:	b	42d64c <wcrtomb@plt+0x2882c>
  42d61c:	b	42d650 <wcrtomb@plt+0x28830>
  42d620:	cmp	w11, #0x26
  42d624:	mov	w8, wzr
  42d628:	b.hi	42d6e8 <wcrtomb@plt+0x288c8>  // b.pmore
  42d62c:	mov	w9, w11
  42d630:	mov	w10, #0x1                   	// #1
  42d634:	lsl	x9, x10, x9
  42d638:	mov	x10, #0x2006                	// #8198
  42d63c:	movk	x10, #0x10, lsl #16
  42d640:	movk	x10, #0x40, lsl #32
  42d644:	tst	x9, x10
  42d648:	b.eq	42d6e8 <wcrtomb@plt+0x288c8>  // b.none
  42d64c:	cbnz	w8, 42d654 <wcrtomb@plt+0x28834>
  42d650:	mov	w8, wzr
  42d654:	cbnz	w8, 42d58c <wcrtomb@plt+0x2876c>
  42d658:	add	x0, sp, #0x8
  42d65c:	bl	43c888 <argp_usage@@Base+0xac8c>
  42d660:	cbnz	w0, 42d724 <wcrtomb@plt+0x28904>
  42d664:	tbnz	w25, #31, 42d690 <wcrtomb@plt+0x28870>
  42d668:	ldr	w8, [sp, #8]
  42d66c:	cmp	w8, w25
  42d670:	b.ne	42d690 <wcrtomb@plt+0x28870>  // b.any
  42d674:	add	x0, sp, #0x8
  42d678:	bl	43c910 <argp_usage@@Base+0xad14>
  42d67c:	bl	404d00 <__errno_location@plt>
  42d680:	mov	w8, #0x9                   	// #9
  42d684:	str	w8, [x0]
  42d688:	mov	w23, #0xffffffff            	// #-1
  42d68c:	b	42d58c <wcrtomb@plt+0x2876c>
  42d690:	mov	w0, w25
  42d694:	bl	404200 <fchdir@plt>
  42d698:	cbz	w0, 42d6bc <wcrtomb@plt+0x2889c>
  42d69c:	bl	404d00 <__errno_location@plt>
  42d6a0:	ldr	w20, [x0]
  42d6a4:	mov	x19, x0
  42d6a8:	add	x0, sp, #0x8
  42d6ac:	bl	43c910 <argp_usage@@Base+0xad14>
  42d6b0:	str	w20, [x19]
  42d6b4:	mov	w23, #0xffffffff            	// #-1
  42d6b8:	b	42d58c <wcrtomb@plt+0x2876c>
  42d6bc:	mov	x0, x24
  42d6c0:	mov	x1, x22
  42d6c4:	mov	x2, x21
  42d6c8:	mov	x3, x20
  42d6cc:	mov	w4, w19
  42d6d0:	bl	4045d0 <setxattr@plt>
  42d6d4:	mov	w23, w0
  42d6d8:	cmn	w0, #0x1
  42d6dc:	b.eq	42d6f8 <wcrtomb@plt+0x288d8>  // b.none
  42d6e0:	mov	w19, wzr
  42d6e4:	b	42d700 <wcrtomb@plt+0x288e0>
  42d6e8:	cmp	w11, #0x5f
  42d6ec:	b.eq	42d64c <wcrtomb@plt+0x2882c>  // b.none
  42d6f0:	str	w11, [x26]
  42d6f4:	b	42d614 <wcrtomb@plt+0x287f4>
  42d6f8:	bl	404d00 <__errno_location@plt>
  42d6fc:	ldr	w19, [x0]
  42d700:	add	x0, sp, #0x8
  42d704:	bl	43c8e0 <argp_usage@@Base+0xace4>
  42d708:	cbnz	w0, 42d730 <wcrtomb@plt+0x28910>
  42d70c:	add	x0, sp, #0x8
  42d710:	bl	43c910 <argp_usage@@Base+0xad14>
  42d714:	cbz	w19, 42d58c <wcrtomb@plt+0x2876c>
  42d718:	bl	404d00 <__errno_location@plt>
  42d71c:	str	w19, [x0]
  42d720:	b	42d58c <wcrtomb@plt+0x2876c>
  42d724:	bl	404d00 <__errno_location@plt>
  42d728:	ldr	w0, [x0]
  42d72c:	bl	436eb4 <argp_usage@@Base+0x52b8>
  42d730:	bl	404d00 <__errno_location@plt>
  42d734:	ldr	w0, [x0]
  42d738:	bl	436ef4 <argp_usage@@Base+0x52f8>
  42d73c:	stp	x29, x30, [sp, #-96]!
  42d740:	stp	x28, x27, [sp, #16]
  42d744:	stp	x26, x25, [sp, #32]
  42d748:	stp	x24, x23, [sp, #48]
  42d74c:	stp	x22, x21, [sp, #64]
  42d750:	stp	x20, x19, [sp, #80]
  42d754:	mov	x29, sp
  42d758:	sub	sp, sp, #0xfd0
  42d75c:	mov	w19, w5
  42d760:	mov	x20, x4
  42d764:	mov	x21, x3
  42d768:	mov	x22, x2
  42d76c:	cmn	w0, #0x64
  42d770:	mov	x24, x1
  42d774:	b.eq	42d784 <wcrtomb@plt+0x28964>  // b.none
  42d778:	ldrb	w8, [x24]
  42d77c:	cmp	w8, #0x2f
  42d780:	b.ne	42d7c4 <wcrtomb@plt+0x289a4>  // b.any
  42d784:	mov	x0, x24
  42d788:	mov	x1, x22
  42d78c:	mov	x2, x21
  42d790:	mov	x3, x20
  42d794:	mov	w4, w19
  42d798:	bl	4046b0 <lsetxattr@plt>
  42d79c:	mov	w23, w0
  42d7a0:	mov	w0, w23
  42d7a4:	add	sp, sp, #0xfd0
  42d7a8:	ldp	x20, x19, [sp, #80]
  42d7ac:	ldp	x22, x21, [sp, #64]
  42d7b0:	ldp	x24, x23, [sp, #48]
  42d7b4:	ldp	x26, x25, [sp, #32]
  42d7b8:	ldp	x28, x27, [sp, #16]
  42d7bc:	ldp	x29, x30, [sp], #96
  42d7c0:	ret
  42d7c4:	mov	w25, w0
  42d7c8:	add	x0, sp, #0x8
  42d7cc:	mov	w1, w25
  42d7d0:	mov	x2, x24
  42d7d4:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  42d7d8:	cbz	x0, 42d830 <wcrtomb@plt+0x28a10>
  42d7dc:	mov	x1, x22
  42d7e0:	mov	x2, x21
  42d7e4:	mov	x3, x20
  42d7e8:	mov	w4, w19
  42d7ec:	mov	x27, x0
  42d7f0:	bl	4046b0 <lsetxattr@plt>
  42d7f4:	add	x28, sp, #0x8
  42d7f8:	mov	w23, w0
  42d7fc:	bl	404d00 <__errno_location@plt>
  42d800:	ldr	w11, [x0]
  42d804:	mov	x26, x0
  42d808:	cmp	x27, x28
  42d80c:	b.eq	42d820 <wcrtomb@plt+0x28a00>  // b.none
  42d810:	mov	x0, x27
  42d814:	mov	w27, w11
  42d818:	bl	4049d0 <free@plt>
  42d81c:	mov	w11, w27
  42d820:	cmn	w23, #0x1
  42d824:	b.eq	42d834 <wcrtomb@plt+0x28a14>  // b.none
  42d828:	mov	w8, #0x1                   	// #1
  42d82c:	b	42d860 <wcrtomb@plt+0x28a40>
  42d830:	b	42d864 <wcrtomb@plt+0x28a44>
  42d834:	cmp	w11, #0x26
  42d838:	mov	w8, wzr
  42d83c:	b.hi	42d8fc <wcrtomb@plt+0x28adc>  // b.pmore
  42d840:	mov	w9, w11
  42d844:	mov	w10, #0x1                   	// #1
  42d848:	lsl	x9, x10, x9
  42d84c:	mov	x10, #0x2006                	// #8198
  42d850:	movk	x10, #0x10, lsl #16
  42d854:	movk	x10, #0x40, lsl #32
  42d858:	tst	x9, x10
  42d85c:	b.eq	42d8fc <wcrtomb@plt+0x28adc>  // b.none
  42d860:	cbnz	w8, 42d868 <wcrtomb@plt+0x28a48>
  42d864:	mov	w8, wzr
  42d868:	cbnz	w8, 42d7a0 <wcrtomb@plt+0x28980>
  42d86c:	add	x0, sp, #0x8
  42d870:	bl	43c888 <argp_usage@@Base+0xac8c>
  42d874:	cbnz	w0, 42d938 <wcrtomb@plt+0x28b18>
  42d878:	tbnz	w25, #31, 42d8a4 <wcrtomb@plt+0x28a84>
  42d87c:	ldr	w8, [sp, #8]
  42d880:	cmp	w8, w25
  42d884:	b.ne	42d8a4 <wcrtomb@plt+0x28a84>  // b.any
  42d888:	add	x0, sp, #0x8
  42d88c:	bl	43c910 <argp_usage@@Base+0xad14>
  42d890:	bl	404d00 <__errno_location@plt>
  42d894:	mov	w8, #0x9                   	// #9
  42d898:	str	w8, [x0]
  42d89c:	mov	w23, #0xffffffff            	// #-1
  42d8a0:	b	42d7a0 <wcrtomb@plt+0x28980>
  42d8a4:	mov	w0, w25
  42d8a8:	bl	404200 <fchdir@plt>
  42d8ac:	cbz	w0, 42d8d0 <wcrtomb@plt+0x28ab0>
  42d8b0:	bl	404d00 <__errno_location@plt>
  42d8b4:	ldr	w20, [x0]
  42d8b8:	mov	x19, x0
  42d8bc:	add	x0, sp, #0x8
  42d8c0:	bl	43c910 <argp_usage@@Base+0xad14>
  42d8c4:	str	w20, [x19]
  42d8c8:	mov	w23, #0xffffffff            	// #-1
  42d8cc:	b	42d7a0 <wcrtomb@plt+0x28980>
  42d8d0:	mov	x0, x24
  42d8d4:	mov	x1, x22
  42d8d8:	mov	x2, x21
  42d8dc:	mov	x3, x20
  42d8e0:	mov	w4, w19
  42d8e4:	bl	4046b0 <lsetxattr@plt>
  42d8e8:	mov	w23, w0
  42d8ec:	cmn	w0, #0x1
  42d8f0:	b.eq	42d90c <wcrtomb@plt+0x28aec>  // b.none
  42d8f4:	mov	w19, wzr
  42d8f8:	b	42d914 <wcrtomb@plt+0x28af4>
  42d8fc:	cmp	w11, #0x5f
  42d900:	b.eq	42d860 <wcrtomb@plt+0x28a40>  // b.none
  42d904:	str	w11, [x26]
  42d908:	b	42d828 <wcrtomb@plt+0x28a08>
  42d90c:	bl	404d00 <__errno_location@plt>
  42d910:	ldr	w19, [x0]
  42d914:	add	x0, sp, #0x8
  42d918:	bl	43c8e0 <argp_usage@@Base+0xace4>
  42d91c:	cbnz	w0, 42d944 <wcrtomb@plt+0x28b24>
  42d920:	add	x0, sp, #0x8
  42d924:	bl	43c910 <argp_usage@@Base+0xad14>
  42d928:	cbz	w19, 42d7a0 <wcrtomb@plt+0x28980>
  42d92c:	bl	404d00 <__errno_location@plt>
  42d930:	str	w19, [x0]
  42d934:	b	42d7a0 <wcrtomb@plt+0x28980>
  42d938:	bl	404d00 <__errno_location@plt>
  42d93c:	ldr	w0, [x0]
  42d940:	bl	436eb4 <argp_usage@@Base+0x52b8>
  42d944:	bl	404d00 <__errno_location@plt>
  42d948:	ldr	w0, [x0]
  42d94c:	bl	436ef4 <argp_usage@@Base+0x52f8>
  42d950:	stp	x29, x30, [sp, #-96]!
  42d954:	stp	x28, x27, [sp, #16]
  42d958:	stp	x26, x25, [sp, #32]
  42d95c:	stp	x24, x23, [sp, #48]
  42d960:	stp	x22, x21, [sp, #64]
  42d964:	stp	x20, x19, [sp, #80]
  42d968:	mov	x29, sp
  42d96c:	sub	sp, sp, #0xfd0
  42d970:	mov	x19, x4
  42d974:	mov	x20, x3
  42d978:	mov	x21, x2
  42d97c:	cmn	w0, #0x64
  42d980:	mov	x23, x1
  42d984:	b.eq	42d994 <wcrtomb@plt+0x28b74>  // b.none
  42d988:	ldrb	w8, [x23]
  42d98c:	cmp	w8, #0x2f
  42d990:	b.ne	42d9d0 <wcrtomb@plt+0x28bb0>  // b.any
  42d994:	mov	x0, x23
  42d998:	mov	x1, x21
  42d99c:	mov	x2, x20
  42d9a0:	mov	x3, x19
  42d9a4:	bl	4048d0 <getxattr@plt>
  42d9a8:	mov	x22, x0
  42d9ac:	mov	x0, x22
  42d9b0:	add	sp, sp, #0xfd0
  42d9b4:	ldp	x20, x19, [sp, #80]
  42d9b8:	ldp	x22, x21, [sp, #64]
  42d9bc:	ldp	x24, x23, [sp, #48]
  42d9c0:	ldp	x26, x25, [sp, #32]
  42d9c4:	ldp	x28, x27, [sp, #16]
  42d9c8:	ldp	x29, x30, [sp], #96
  42d9cc:	ret
  42d9d0:	mov	w24, w0
  42d9d4:	add	x0, sp, #0x8
  42d9d8:	mov	w1, w24
  42d9dc:	mov	x2, x23
  42d9e0:	add	x28, sp, #0x8
  42d9e4:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  42d9e8:	cbz	x0, 42da30 <wcrtomb@plt+0x28c10>
  42d9ec:	mov	x1, x21
  42d9f0:	mov	x2, x20
  42d9f4:	mov	x3, x19
  42d9f8:	mov	x26, x0
  42d9fc:	bl	4048d0 <getxattr@plt>
  42da00:	mov	x22, x0
  42da04:	bl	404d00 <__errno_location@plt>
  42da08:	ldr	w27, [x0]
  42da0c:	mov	x25, x0
  42da10:	cmp	x26, x28
  42da14:	b.eq	42da20 <wcrtomb@plt+0x28c00>  // b.none
  42da18:	mov	x0, x26
  42da1c:	bl	4049d0 <free@plt>
  42da20:	cmn	x22, #0x1
  42da24:	b.eq	42da34 <wcrtomb@plt+0x28c14>  // b.none
  42da28:	mov	w8, #0x1                   	// #1
  42da2c:	b	42da60 <wcrtomb@plt+0x28c40>
  42da30:	b	42da64 <wcrtomb@plt+0x28c44>
  42da34:	cmp	w27, #0x26
  42da38:	mov	w8, wzr
  42da3c:	b.hi	42daf8 <wcrtomb@plt+0x28cd8>  // b.pmore
  42da40:	mov	w9, w27
  42da44:	mov	w10, #0x1                   	// #1
  42da48:	lsl	x9, x10, x9
  42da4c:	mov	x10, #0x2006                	// #8198
  42da50:	movk	x10, #0x10, lsl #16
  42da54:	movk	x10, #0x40, lsl #32
  42da58:	tst	x9, x10
  42da5c:	b.eq	42daf8 <wcrtomb@plt+0x28cd8>  // b.none
  42da60:	cbnz	w8, 42da68 <wcrtomb@plt+0x28c48>
  42da64:	mov	w8, wzr
  42da68:	cbnz	w8, 42d9ac <wcrtomb@plt+0x28b8c>
  42da6c:	add	x0, sp, #0x8
  42da70:	bl	43c888 <argp_usage@@Base+0xac8c>
  42da74:	cbnz	w0, 42db34 <wcrtomb@plt+0x28d14>
  42da78:	tbnz	w24, #31, 42daa4 <wcrtomb@plt+0x28c84>
  42da7c:	ldr	w8, [sp, #8]
  42da80:	cmp	w8, w24
  42da84:	b.ne	42daa4 <wcrtomb@plt+0x28c84>  // b.any
  42da88:	add	x0, sp, #0x8
  42da8c:	bl	43c910 <argp_usage@@Base+0xad14>
  42da90:	bl	404d00 <__errno_location@plt>
  42da94:	mov	w8, #0x9                   	// #9
  42da98:	str	w8, [x0]
  42da9c:	mov	x22, #0xffffffffffffffff    	// #-1
  42daa0:	b	42d9ac <wcrtomb@plt+0x28b8c>
  42daa4:	mov	w0, w24
  42daa8:	bl	404200 <fchdir@plt>
  42daac:	cbz	w0, 42dad0 <wcrtomb@plt+0x28cb0>
  42dab0:	bl	404d00 <__errno_location@plt>
  42dab4:	ldr	w20, [x0]
  42dab8:	mov	x19, x0
  42dabc:	add	x0, sp, #0x8
  42dac0:	bl	43c910 <argp_usage@@Base+0xad14>
  42dac4:	str	w20, [x19]
  42dac8:	mov	x22, #0xffffffffffffffff    	// #-1
  42dacc:	b	42d9ac <wcrtomb@plt+0x28b8c>
  42dad0:	mov	x0, x23
  42dad4:	mov	x1, x21
  42dad8:	mov	x2, x20
  42dadc:	mov	x3, x19
  42dae0:	bl	4048d0 <getxattr@plt>
  42dae4:	mov	x22, x0
  42dae8:	cmn	x0, #0x1
  42daec:	b.eq	42db08 <wcrtomb@plt+0x28ce8>  // b.none
  42daf0:	mov	w19, wzr
  42daf4:	b	42db10 <wcrtomb@plt+0x28cf0>
  42daf8:	cmp	w27, #0x5f
  42dafc:	b.eq	42da60 <wcrtomb@plt+0x28c40>  // b.none
  42db00:	str	w27, [x25]
  42db04:	b	42da28 <wcrtomb@plt+0x28c08>
  42db08:	bl	404d00 <__errno_location@plt>
  42db0c:	ldr	w19, [x0]
  42db10:	add	x0, sp, #0x8
  42db14:	bl	43c8e0 <argp_usage@@Base+0xace4>
  42db18:	cbnz	w0, 42db40 <wcrtomb@plt+0x28d20>
  42db1c:	add	x0, sp, #0x8
  42db20:	bl	43c910 <argp_usage@@Base+0xad14>
  42db24:	cbz	w19, 42d9ac <wcrtomb@plt+0x28b8c>
  42db28:	bl	404d00 <__errno_location@plt>
  42db2c:	str	w19, [x0]
  42db30:	b	42d9ac <wcrtomb@plt+0x28b8c>
  42db34:	bl	404d00 <__errno_location@plt>
  42db38:	ldr	w0, [x0]
  42db3c:	bl	436eb4 <argp_usage@@Base+0x52b8>
  42db40:	bl	404d00 <__errno_location@plt>
  42db44:	ldr	w0, [x0]
  42db48:	bl	436ef4 <argp_usage@@Base+0x52f8>
  42db4c:	stp	x29, x30, [sp, #-96]!
  42db50:	stp	x28, x27, [sp, #16]
  42db54:	stp	x26, x25, [sp, #32]
  42db58:	stp	x24, x23, [sp, #48]
  42db5c:	stp	x22, x21, [sp, #64]
  42db60:	stp	x20, x19, [sp, #80]
  42db64:	mov	x29, sp
  42db68:	sub	sp, sp, #0xfd0
  42db6c:	mov	x19, x4
  42db70:	mov	x20, x3
  42db74:	mov	x21, x2
  42db78:	cmn	w0, #0x64
  42db7c:	mov	x23, x1
  42db80:	b.eq	42db90 <wcrtomb@plt+0x28d70>  // b.none
  42db84:	ldrb	w8, [x23]
  42db88:	cmp	w8, #0x2f
  42db8c:	b.ne	42dbcc <wcrtomb@plt+0x28dac>  // b.any
  42db90:	mov	x0, x23
  42db94:	mov	x1, x21
  42db98:	mov	x2, x20
  42db9c:	mov	x3, x19
  42dba0:	bl	404770 <lgetxattr@plt>
  42dba4:	mov	x22, x0
  42dba8:	mov	x0, x22
  42dbac:	add	sp, sp, #0xfd0
  42dbb0:	ldp	x20, x19, [sp, #80]
  42dbb4:	ldp	x22, x21, [sp, #64]
  42dbb8:	ldp	x24, x23, [sp, #48]
  42dbbc:	ldp	x26, x25, [sp, #32]
  42dbc0:	ldp	x28, x27, [sp, #16]
  42dbc4:	ldp	x29, x30, [sp], #96
  42dbc8:	ret
  42dbcc:	mov	w24, w0
  42dbd0:	add	x0, sp, #0x8
  42dbd4:	mov	w1, w24
  42dbd8:	mov	x2, x23
  42dbdc:	add	x28, sp, #0x8
  42dbe0:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  42dbe4:	cbz	x0, 42dc2c <wcrtomb@plt+0x28e0c>
  42dbe8:	mov	x1, x21
  42dbec:	mov	x2, x20
  42dbf0:	mov	x3, x19
  42dbf4:	mov	x26, x0
  42dbf8:	bl	404770 <lgetxattr@plt>
  42dbfc:	mov	x22, x0
  42dc00:	bl	404d00 <__errno_location@plt>
  42dc04:	ldr	w27, [x0]
  42dc08:	mov	x25, x0
  42dc0c:	cmp	x26, x28
  42dc10:	b.eq	42dc1c <wcrtomb@plt+0x28dfc>  // b.none
  42dc14:	mov	x0, x26
  42dc18:	bl	4049d0 <free@plt>
  42dc1c:	cmn	x22, #0x1
  42dc20:	b.eq	42dc30 <wcrtomb@plt+0x28e10>  // b.none
  42dc24:	mov	w8, #0x1                   	// #1
  42dc28:	b	42dc5c <wcrtomb@plt+0x28e3c>
  42dc2c:	b	42dc60 <wcrtomb@plt+0x28e40>
  42dc30:	cmp	w27, #0x26
  42dc34:	mov	w8, wzr
  42dc38:	b.hi	42dcf4 <wcrtomb@plt+0x28ed4>  // b.pmore
  42dc3c:	mov	w9, w27
  42dc40:	mov	w10, #0x1                   	// #1
  42dc44:	lsl	x9, x10, x9
  42dc48:	mov	x10, #0x2006                	// #8198
  42dc4c:	movk	x10, #0x10, lsl #16
  42dc50:	movk	x10, #0x40, lsl #32
  42dc54:	tst	x9, x10
  42dc58:	b.eq	42dcf4 <wcrtomb@plt+0x28ed4>  // b.none
  42dc5c:	cbnz	w8, 42dc64 <wcrtomb@plt+0x28e44>
  42dc60:	mov	w8, wzr
  42dc64:	cbnz	w8, 42dba8 <wcrtomb@plt+0x28d88>
  42dc68:	add	x0, sp, #0x8
  42dc6c:	bl	43c888 <argp_usage@@Base+0xac8c>
  42dc70:	cbnz	w0, 42dd30 <wcrtomb@plt+0x28f10>
  42dc74:	tbnz	w24, #31, 42dca0 <wcrtomb@plt+0x28e80>
  42dc78:	ldr	w8, [sp, #8]
  42dc7c:	cmp	w8, w24
  42dc80:	b.ne	42dca0 <wcrtomb@plt+0x28e80>  // b.any
  42dc84:	add	x0, sp, #0x8
  42dc88:	bl	43c910 <argp_usage@@Base+0xad14>
  42dc8c:	bl	404d00 <__errno_location@plt>
  42dc90:	mov	w8, #0x9                   	// #9
  42dc94:	str	w8, [x0]
  42dc98:	mov	x22, #0xffffffffffffffff    	// #-1
  42dc9c:	b	42dba8 <wcrtomb@plt+0x28d88>
  42dca0:	mov	w0, w24
  42dca4:	bl	404200 <fchdir@plt>
  42dca8:	cbz	w0, 42dccc <wcrtomb@plt+0x28eac>
  42dcac:	bl	404d00 <__errno_location@plt>
  42dcb0:	ldr	w20, [x0]
  42dcb4:	mov	x19, x0
  42dcb8:	add	x0, sp, #0x8
  42dcbc:	bl	43c910 <argp_usage@@Base+0xad14>
  42dcc0:	str	w20, [x19]
  42dcc4:	mov	x22, #0xffffffffffffffff    	// #-1
  42dcc8:	b	42dba8 <wcrtomb@plt+0x28d88>
  42dccc:	mov	x0, x23
  42dcd0:	mov	x1, x21
  42dcd4:	mov	x2, x20
  42dcd8:	mov	x3, x19
  42dcdc:	bl	404770 <lgetxattr@plt>
  42dce0:	mov	x22, x0
  42dce4:	cmn	x0, #0x1
  42dce8:	b.eq	42dd04 <wcrtomb@plt+0x28ee4>  // b.none
  42dcec:	mov	w19, wzr
  42dcf0:	b	42dd0c <wcrtomb@plt+0x28eec>
  42dcf4:	cmp	w27, #0x5f
  42dcf8:	b.eq	42dc5c <wcrtomb@plt+0x28e3c>  // b.none
  42dcfc:	str	w27, [x25]
  42dd00:	b	42dc24 <wcrtomb@plt+0x28e04>
  42dd04:	bl	404d00 <__errno_location@plt>
  42dd08:	ldr	w19, [x0]
  42dd0c:	add	x0, sp, #0x8
  42dd10:	bl	43c8e0 <argp_usage@@Base+0xace4>
  42dd14:	cbnz	w0, 42dd3c <wcrtomb@plt+0x28f1c>
  42dd18:	add	x0, sp, #0x8
  42dd1c:	bl	43c910 <argp_usage@@Base+0xad14>
  42dd20:	cbz	w19, 42dba8 <wcrtomb@plt+0x28d88>
  42dd24:	bl	404d00 <__errno_location@plt>
  42dd28:	str	w19, [x0]
  42dd2c:	b	42dba8 <wcrtomb@plt+0x28d88>
  42dd30:	bl	404d00 <__errno_location@plt>
  42dd34:	ldr	w0, [x0]
  42dd38:	bl	436eb4 <argp_usage@@Base+0x52b8>
  42dd3c:	bl	404d00 <__errno_location@plt>
  42dd40:	ldr	w0, [x0]
  42dd44:	bl	436ef4 <argp_usage@@Base+0x52f8>
  42dd48:	stp	x29, x30, [sp, #-96]!
  42dd4c:	stp	x28, x27, [sp, #16]
  42dd50:	stp	x26, x25, [sp, #32]
  42dd54:	stp	x24, x23, [sp, #48]
  42dd58:	stp	x22, x21, [sp, #64]
  42dd5c:	stp	x20, x19, [sp, #80]
  42dd60:	mov	x29, sp
  42dd64:	sub	sp, sp, #0xfc0
  42dd68:	mov	x19, x3
  42dd6c:	mov	x20, x2
  42dd70:	cmn	w0, #0x64
  42dd74:	mov	x22, x1
  42dd78:	b.eq	42dd88 <wcrtomb@plt+0x28f68>  // b.none
  42dd7c:	ldrb	w8, [x22]
  42dd80:	cmp	w8, #0x2f
  42dd84:	b.ne	42ddc0 <wcrtomb@plt+0x28fa0>  // b.any
  42dd88:	mov	x0, x22
  42dd8c:	mov	x1, x20
  42dd90:	mov	x2, x19
  42dd94:	bl	4046c0 <listxattr@plt>
  42dd98:	mov	x21, x0
  42dd9c:	mov	x0, x21
  42dda0:	add	sp, sp, #0xfc0
  42dda4:	ldp	x20, x19, [sp, #80]
  42dda8:	ldp	x22, x21, [sp, #64]
  42ddac:	ldp	x24, x23, [sp, #48]
  42ddb0:	ldp	x26, x25, [sp, #32]
  42ddb4:	ldp	x28, x27, [sp, #16]
  42ddb8:	ldp	x29, x30, [sp], #96
  42ddbc:	ret
  42ddc0:	mov	w23, w0
  42ddc4:	mov	x0, sp
  42ddc8:	mov	w1, w23
  42ddcc:	mov	x2, x22
  42ddd0:	mov	x27, sp
  42ddd4:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  42ddd8:	cbz	x0, 42de1c <wcrtomb@plt+0x28ffc>
  42dddc:	mov	x1, x20
  42dde0:	mov	x2, x19
  42dde4:	mov	x25, x0
  42dde8:	bl	4046c0 <listxattr@plt>
  42ddec:	mov	x21, x0
  42ddf0:	bl	404d00 <__errno_location@plt>
  42ddf4:	ldr	w26, [x0]
  42ddf8:	mov	x24, x0
  42ddfc:	cmp	x25, x27
  42de00:	b.eq	42de0c <wcrtomb@plt+0x28fec>  // b.none
  42de04:	mov	x0, x25
  42de08:	bl	4049d0 <free@plt>
  42de0c:	cmn	x21, #0x1
  42de10:	b.eq	42de20 <wcrtomb@plt+0x29000>  // b.none
  42de14:	mov	w8, #0x1                   	// #1
  42de18:	b	42de4c <wcrtomb@plt+0x2902c>
  42de1c:	b	42de50 <wcrtomb@plt+0x29030>
  42de20:	cmp	w26, #0x26
  42de24:	mov	w8, wzr
  42de28:	b.hi	42dee0 <wcrtomb@plt+0x290c0>  // b.pmore
  42de2c:	mov	w9, w26
  42de30:	mov	w10, #0x1                   	// #1
  42de34:	lsl	x9, x10, x9
  42de38:	mov	x10, #0x2006                	// #8198
  42de3c:	movk	x10, #0x10, lsl #16
  42de40:	movk	x10, #0x40, lsl #32
  42de44:	tst	x9, x10
  42de48:	b.eq	42dee0 <wcrtomb@plt+0x290c0>  // b.none
  42de4c:	cbnz	w8, 42de54 <wcrtomb@plt+0x29034>
  42de50:	mov	w8, wzr
  42de54:	cbnz	w8, 42dd9c <wcrtomb@plt+0x28f7c>
  42de58:	mov	x0, sp
  42de5c:	bl	43c888 <argp_usage@@Base+0xac8c>
  42de60:	cbnz	w0, 42df1c <wcrtomb@plt+0x290fc>
  42de64:	tbnz	w23, #31, 42de90 <wcrtomb@plt+0x29070>
  42de68:	ldr	w8, [sp]
  42de6c:	cmp	w8, w23
  42de70:	b.ne	42de90 <wcrtomb@plt+0x29070>  // b.any
  42de74:	mov	x0, sp
  42de78:	bl	43c910 <argp_usage@@Base+0xad14>
  42de7c:	bl	404d00 <__errno_location@plt>
  42de80:	mov	w8, #0x9                   	// #9
  42de84:	str	w8, [x0]
  42de88:	mov	x21, #0xffffffffffffffff    	// #-1
  42de8c:	b	42dd9c <wcrtomb@plt+0x28f7c>
  42de90:	mov	w0, w23
  42de94:	bl	404200 <fchdir@plt>
  42de98:	cbz	w0, 42debc <wcrtomb@plt+0x2909c>
  42de9c:	bl	404d00 <__errno_location@plt>
  42dea0:	ldr	w20, [x0]
  42dea4:	mov	x19, x0
  42dea8:	mov	x0, sp
  42deac:	bl	43c910 <argp_usage@@Base+0xad14>
  42deb0:	str	w20, [x19]
  42deb4:	mov	x21, #0xffffffffffffffff    	// #-1
  42deb8:	b	42dd9c <wcrtomb@plt+0x28f7c>
  42debc:	mov	x0, x22
  42dec0:	mov	x1, x20
  42dec4:	mov	x2, x19
  42dec8:	bl	4046c0 <listxattr@plt>
  42decc:	mov	x21, x0
  42ded0:	cmn	x0, #0x1
  42ded4:	b.eq	42def0 <wcrtomb@plt+0x290d0>  // b.none
  42ded8:	mov	w19, wzr
  42dedc:	b	42def8 <wcrtomb@plt+0x290d8>
  42dee0:	cmp	w26, #0x5f
  42dee4:	b.eq	42de4c <wcrtomb@plt+0x2902c>  // b.none
  42dee8:	str	w26, [x24]
  42deec:	b	42de14 <wcrtomb@plt+0x28ff4>
  42def0:	bl	404d00 <__errno_location@plt>
  42def4:	ldr	w19, [x0]
  42def8:	mov	x0, sp
  42defc:	bl	43c8e0 <argp_usage@@Base+0xace4>
  42df00:	cbnz	w0, 42df28 <wcrtomb@plt+0x29108>
  42df04:	mov	x0, sp
  42df08:	bl	43c910 <argp_usage@@Base+0xad14>
  42df0c:	cbz	w19, 42dd9c <wcrtomb@plt+0x28f7c>
  42df10:	bl	404d00 <__errno_location@plt>
  42df14:	str	w19, [x0]
  42df18:	b	42dd9c <wcrtomb@plt+0x28f7c>
  42df1c:	bl	404d00 <__errno_location@plt>
  42df20:	ldr	w0, [x0]
  42df24:	bl	436eb4 <argp_usage@@Base+0x52b8>
  42df28:	bl	404d00 <__errno_location@plt>
  42df2c:	ldr	w0, [x0]
  42df30:	bl	436ef4 <argp_usage@@Base+0x52f8>
  42df34:	stp	x29, x30, [sp, #-96]!
  42df38:	stp	x28, x27, [sp, #16]
  42df3c:	stp	x26, x25, [sp, #32]
  42df40:	stp	x24, x23, [sp, #48]
  42df44:	stp	x22, x21, [sp, #64]
  42df48:	stp	x20, x19, [sp, #80]
  42df4c:	mov	x29, sp
  42df50:	sub	sp, sp, #0xfc0
  42df54:	mov	x19, x3
  42df58:	mov	x20, x2
  42df5c:	cmn	w0, #0x64
  42df60:	mov	x22, x1
  42df64:	b.eq	42df74 <wcrtomb@plt+0x29154>  // b.none
  42df68:	ldrb	w8, [x22]
  42df6c:	cmp	w8, #0x2f
  42df70:	b.ne	42dfac <wcrtomb@plt+0x2918c>  // b.any
  42df74:	mov	x0, x22
  42df78:	mov	x1, x20
  42df7c:	mov	x2, x19
  42df80:	bl	404c50 <llistxattr@plt>
  42df84:	mov	x21, x0
  42df88:	mov	x0, x21
  42df8c:	add	sp, sp, #0xfc0
  42df90:	ldp	x20, x19, [sp, #80]
  42df94:	ldp	x22, x21, [sp, #64]
  42df98:	ldp	x24, x23, [sp, #48]
  42df9c:	ldp	x26, x25, [sp, #32]
  42dfa0:	ldp	x28, x27, [sp, #16]
  42dfa4:	ldp	x29, x30, [sp], #96
  42dfa8:	ret
  42dfac:	mov	w23, w0
  42dfb0:	mov	x0, sp
  42dfb4:	mov	w1, w23
  42dfb8:	mov	x2, x22
  42dfbc:	mov	x27, sp
  42dfc0:	bl	43e2d4 <_obstack_memory_used@@Base+0x74>
  42dfc4:	cbz	x0, 42e008 <wcrtomb@plt+0x291e8>
  42dfc8:	mov	x1, x20
  42dfcc:	mov	x2, x19
  42dfd0:	mov	x25, x0
  42dfd4:	bl	404c50 <llistxattr@plt>
  42dfd8:	mov	x21, x0
  42dfdc:	bl	404d00 <__errno_location@plt>
  42dfe0:	ldr	w26, [x0]
  42dfe4:	mov	x24, x0
  42dfe8:	cmp	x25, x27
  42dfec:	b.eq	42dff8 <wcrtomb@plt+0x291d8>  // b.none
  42dff0:	mov	x0, x25
  42dff4:	bl	4049d0 <free@plt>
  42dff8:	cmn	x21, #0x1
  42dffc:	b.eq	42e00c <wcrtomb@plt+0x291ec>  // b.none
  42e000:	mov	w8, #0x1                   	// #1
  42e004:	b	42e038 <wcrtomb@plt+0x29218>
  42e008:	b	42e03c <wcrtomb@plt+0x2921c>
  42e00c:	cmp	w26, #0x26
  42e010:	mov	w8, wzr
  42e014:	b.hi	42e0cc <wcrtomb@plt+0x292ac>  // b.pmore
  42e018:	mov	w9, w26
  42e01c:	mov	w10, #0x1                   	// #1
  42e020:	lsl	x9, x10, x9
  42e024:	mov	x10, #0x2006                	// #8198
  42e028:	movk	x10, #0x10, lsl #16
  42e02c:	movk	x10, #0x40, lsl #32
  42e030:	tst	x9, x10
  42e034:	b.eq	42e0cc <wcrtomb@plt+0x292ac>  // b.none
  42e038:	cbnz	w8, 42e040 <wcrtomb@plt+0x29220>
  42e03c:	mov	w8, wzr
  42e040:	cbnz	w8, 42df88 <wcrtomb@plt+0x29168>
  42e044:	mov	x0, sp
  42e048:	bl	43c888 <argp_usage@@Base+0xac8c>
  42e04c:	cbnz	w0, 42e108 <wcrtomb@plt+0x292e8>
  42e050:	tbnz	w23, #31, 42e07c <wcrtomb@plt+0x2925c>
  42e054:	ldr	w8, [sp]
  42e058:	cmp	w8, w23
  42e05c:	b.ne	42e07c <wcrtomb@plt+0x2925c>  // b.any
  42e060:	mov	x0, sp
  42e064:	bl	43c910 <argp_usage@@Base+0xad14>
  42e068:	bl	404d00 <__errno_location@plt>
  42e06c:	mov	w8, #0x9                   	// #9
  42e070:	str	w8, [x0]
  42e074:	mov	x21, #0xffffffffffffffff    	// #-1
  42e078:	b	42df88 <wcrtomb@plt+0x29168>
  42e07c:	mov	w0, w23
  42e080:	bl	404200 <fchdir@plt>
  42e084:	cbz	w0, 42e0a8 <wcrtomb@plt+0x29288>
  42e088:	bl	404d00 <__errno_location@plt>
  42e08c:	ldr	w20, [x0]
  42e090:	mov	x19, x0
  42e094:	mov	x0, sp
  42e098:	bl	43c910 <argp_usage@@Base+0xad14>
  42e09c:	str	w20, [x19]
  42e0a0:	mov	x21, #0xffffffffffffffff    	// #-1
  42e0a4:	b	42df88 <wcrtomb@plt+0x29168>
  42e0a8:	mov	x0, x22
  42e0ac:	mov	x1, x20
  42e0b0:	mov	x2, x19
  42e0b4:	bl	404c50 <llistxattr@plt>
  42e0b8:	mov	x21, x0
  42e0bc:	cmn	x0, #0x1
  42e0c0:	b.eq	42e0dc <wcrtomb@plt+0x292bc>  // b.none
  42e0c4:	mov	w19, wzr
  42e0c8:	b	42e0e4 <wcrtomb@plt+0x292c4>
  42e0cc:	cmp	w26, #0x5f
  42e0d0:	b.eq	42e038 <wcrtomb@plt+0x29218>  // b.none
  42e0d4:	str	w26, [x24]
  42e0d8:	b	42e000 <wcrtomb@plt+0x291e0>
  42e0dc:	bl	404d00 <__errno_location@plt>
  42e0e0:	ldr	w19, [x0]
  42e0e4:	mov	x0, sp
  42e0e8:	bl	43c8e0 <argp_usage@@Base+0xace4>
  42e0ec:	cbnz	w0, 42e114 <wcrtomb@plt+0x292f4>
  42e0f0:	mov	x0, sp
  42e0f4:	bl	43c910 <argp_usage@@Base+0xad14>
  42e0f8:	cbz	w19, 42df88 <wcrtomb@plt+0x29168>
  42e0fc:	bl	404d00 <__errno_location@plt>
  42e100:	str	w19, [x0]
  42e104:	b	42df88 <wcrtomb@plt+0x29168>
  42e108:	bl	404d00 <__errno_location@plt>
  42e10c:	ldr	w0, [x0]
  42e110:	bl	436eb4 <argp_usage@@Base+0x52b8>
  42e114:	bl	404d00 <__errno_location@plt>
  42e118:	ldr	w0, [x0]
  42e11c:	bl	436ef4 <argp_usage@@Base+0x52f8>
  42e120:	stp	x29, x30, [sp, #-96]!
  42e124:	cmp	x2, #0x401
  42e128:	mov	w8, #0x401                 	// #1025
  42e12c:	stp	x26, x25, [sp, #32]
  42e130:	stp	x22, x21, [sp, #64]
  42e134:	stp	x20, x19, [sp, #80]
  42e138:	mov	x19, x1
  42e13c:	mov	w20, w0
  42e140:	csinc	x21, x8, x2, cs  // cs = hs, nlast
  42e144:	mov	w26, #0xc                   	// #12
  42e148:	str	x27, [sp, #16]
  42e14c:	stp	x24, x23, [sp, #48]
  42e150:	mov	x29, sp
  42e154:	b	42e164 <wcrtomb@plt+0x29344>
  42e158:	mov	w8, wzr
  42e15c:	mov	x22, xzr
  42e160:	tbz	w8, #0, 42e21c <wcrtomb@plt+0x293fc>
  42e164:	mov	x0, x21
  42e168:	bl	4044f0 <malloc@plt>
  42e16c:	cbz	x0, 42e158 <wcrtomb@plt+0x29338>
  42e170:	mov	x23, x0
  42e174:	mov	w0, w20
  42e178:	mov	x1, x19
  42e17c:	mov	x2, x23
  42e180:	mov	x3, x21
  42e184:	bl	404e10 <readlinkat@plt>
  42e188:	mov	x24, x0
  42e18c:	tbz	x0, #63, 42e1a0 <wcrtomb@plt+0x29380>
  42e190:	bl	404d00 <__errno_location@plt>
  42e194:	ldr	w27, [x0]
  42e198:	cmp	w27, #0x22
  42e19c:	b.ne	42e1ec <wcrtomb@plt+0x293cc>  // b.any
  42e1a0:	cmp	x24, x21
  42e1a4:	b.cs	42e1b8 <wcrtomb@plt+0x29398>  // b.hs, b.nlast
  42e1a8:	mov	w8, wzr
  42e1ac:	strb	wzr, [x23, x24]
  42e1b0:	mov	x22, x23
  42e1b4:	b	42e160 <wcrtomb@plt+0x29340>
  42e1b8:	mov	x0, x23
  42e1bc:	bl	4049d0 <free@plt>
  42e1c0:	lsr	x8, x21, #62
  42e1c4:	cbnz	x8, 42e1d4 <wcrtomb@plt+0x293b4>
  42e1c8:	lsl	x21, x21, #1
  42e1cc:	mov	w8, #0x1                   	// #1
  42e1d0:	b	42e160 <wcrtomb@plt+0x29340>
  42e1d4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  42e1d8:	cmp	x21, x8
  42e1dc:	b.cs	42e208 <wcrtomb@plt+0x293e8>  // b.hs, b.nlast
  42e1e0:	mov	w8, #0x1                   	// #1
  42e1e4:	mov	x21, #0x7fffffffffffffff    	// #9223372036854775807
  42e1e8:	b	42e160 <wcrtomb@plt+0x29340>
  42e1ec:	mov	x25, x0
  42e1f0:	mov	x0, x23
  42e1f4:	bl	4049d0 <free@plt>
  42e1f8:	mov	w8, wzr
  42e1fc:	mov	x22, xzr
  42e200:	str	w27, [x25]
  42e204:	b	42e160 <wcrtomb@plt+0x29340>
  42e208:	bl	404d00 <__errno_location@plt>
  42e20c:	mov	w8, wzr
  42e210:	mov	x22, xzr
  42e214:	str	w26, [x0]
  42e218:	b	42e160 <wcrtomb@plt+0x29340>
  42e21c:	mov	x0, x22
  42e220:	ldp	x20, x19, [sp, #80]
  42e224:	ldp	x22, x21, [sp, #64]
  42e228:	ldp	x24, x23, [sp, #48]
  42e22c:	ldp	x26, x25, [sp, #32]
  42e230:	ldr	x27, [sp, #16]
  42e234:	ldp	x29, x30, [sp], #96
  42e238:	ret
  42e23c:	stp	x29, x30, [sp, #-16]!
  42e240:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42e244:	ldr	w0, [x8, #1008]
  42e248:	mov	x29, sp
  42e24c:	bl	4041c0 <exit@plt>
  42e250:	stp	x29, x30, [sp, #-96]!
  42e254:	stp	x28, x27, [sp, #16]
  42e258:	stp	x26, x25, [sp, #32]
  42e25c:	stp	x24, x23, [sp, #48]
  42e260:	stp	x22, x21, [sp, #64]
  42e264:	stp	x20, x19, [sp, #80]
  42e268:	mov	x29, sp
  42e26c:	mov	x19, x3
  42e270:	mov	x20, x2
  42e274:	mov	x24, x1
  42e278:	mov	x21, x0
  42e27c:	bl	404190 <strlen@plt>
  42e280:	ldr	x25, [x24]
  42e284:	cbz	x25, 42e304 <wcrtomb@plt+0x294e4>
  42e288:	mov	x22, x0
  42e28c:	mov	w26, wzr
  42e290:	mov	x23, xzr
  42e294:	add	x28, x24, #0x8
  42e298:	mov	x27, #0xffffffffffffffff    	// #-1
  42e29c:	mov	x24, x20
  42e2a0:	b	42e2b8 <wcrtomb@plt+0x29498>
  42e2a4:	mov	x27, x23
  42e2a8:	ldr	x25, [x28, x23, lsl #3]
  42e2ac:	add	x23, x23, #0x1
  42e2b0:	add	x24, x24, x19
  42e2b4:	cbz	x25, 42e30c <wcrtomb@plt+0x294ec>
  42e2b8:	mov	x0, x25
  42e2bc:	mov	x1, x21
  42e2c0:	mov	x2, x22
  42e2c4:	bl	4045a0 <strncmp@plt>
  42e2c8:	cbnz	w0, 42e2a8 <wcrtomb@plt+0x29488>
  42e2cc:	mov	x0, x25
  42e2d0:	bl	404190 <strlen@plt>
  42e2d4:	cmp	x0, x22
  42e2d8:	b.eq	42e318 <wcrtomb@plt+0x294f8>  // b.none
  42e2dc:	cmn	x27, #0x1
  42e2e0:	b.eq	42e2a4 <wcrtomb@plt+0x29484>  // b.none
  42e2e4:	cbz	x20, 42e2fc <wcrtomb@plt+0x294dc>
  42e2e8:	madd	x0, x27, x19, x20
  42e2ec:	mov	x1, x24
  42e2f0:	mov	x2, x19
  42e2f4:	bl	4046d0 <bcmp@plt>
  42e2f8:	cbz	w0, 42e2a8 <wcrtomb@plt+0x29488>
  42e2fc:	mov	w26, #0x1                   	// #1
  42e300:	b	42e2a8 <wcrtomb@plt+0x29488>
  42e304:	mov	w26, wzr
  42e308:	mov	x27, #0xffffffffffffffff    	// #-1
  42e30c:	tst	w26, #0x1
  42e310:	mov	x8, #0xfffffffffffffffe    	// #-2
  42e314:	csel	x23, x8, x27, ne  // ne = any
  42e318:	mov	x0, x23
  42e31c:	ldp	x20, x19, [sp, #80]
  42e320:	ldp	x22, x21, [sp, #64]
  42e324:	ldp	x24, x23, [sp, #48]
  42e328:	ldp	x26, x25, [sp, #32]
  42e32c:	ldp	x28, x27, [sp, #16]
  42e330:	ldp	x29, x30, [sp], #96
  42e334:	ret
  42e338:	stp	x29, x30, [sp, #-48]!
  42e33c:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e340:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e344:	add	x8, x8, #0x519
  42e348:	add	x9, x9, #0x4fe
  42e34c:	cmn	x2, #0x1
  42e350:	stp	x20, x19, [sp, #32]
  42e354:	mov	x19, x1
  42e358:	mov	x20, x0
  42e35c:	csel	x1, x9, x8, eq  // eq = none
  42e360:	mov	w2, #0x5                   	// #5
  42e364:	mov	x0, xzr
  42e368:	str	x21, [sp, #16]
  42e36c:	mov	x29, sp
  42e370:	bl	404bf0 <dcgettext@plt>
  42e374:	mov	x21, x0
  42e378:	mov	w1, #0x8                   	// #8
  42e37c:	mov	w0, wzr
  42e380:	mov	x2, x19
  42e384:	bl	43bd10 <argp_usage@@Base+0xa114>
  42e388:	mov	x19, x0
  42e38c:	mov	w0, #0x1                   	// #1
  42e390:	mov	x1, x20
  42e394:	bl	43c044 <argp_usage@@Base+0xa448>
  42e398:	mov	x4, x0
  42e39c:	mov	w0, wzr
  42e3a0:	mov	w1, wzr
  42e3a4:	mov	x2, x21
  42e3a8:	mov	x3, x19
  42e3ac:	bl	4041f0 <error@plt>
  42e3b0:	ldp	x20, x19, [sp, #32]
  42e3b4:	ldr	x21, [sp, #16]
  42e3b8:	ldp	x29, x30, [sp], #48
  42e3bc:	ret
  42e3c0:	stp	x29, x30, [sp, #-96]!
  42e3c4:	stp	x20, x19, [sp, #80]
  42e3c8:	mov	x20, x1
  42e3cc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e3d0:	stp	x22, x21, [sp, #64]
  42e3d4:	mov	x19, x2
  42e3d8:	mov	x21, x0
  42e3dc:	add	x1, x1, #0x536
  42e3e0:	mov	w2, #0x5                   	// #5
  42e3e4:	mov	x0, xzr
  42e3e8:	stp	x28, x27, [sp, #16]
  42e3ec:	stp	x26, x25, [sp, #32]
  42e3f0:	stp	x24, x23, [sp, #48]
  42e3f4:	mov	x29, sp
  42e3f8:	bl	404bf0 <dcgettext@plt>
  42e3fc:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42e400:	ldr	x1, [x26, #1136]
  42e404:	bl	404c10 <fputs_unlocked@plt>
  42e408:	ldr	x24, [x21]
  42e40c:	cbz	x24, 42e4a0 <wcrtomb@plt+0x29680>
  42e410:	add	x27, x21, #0x8
  42e414:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e418:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e41c:	mov	x23, xzr
  42e420:	mov	x28, xzr
  42e424:	add	x21, x21, #0x54b
  42e428:	add	x22, x22, #0x553
  42e42c:	b	42e464 <wcrtomb@plt+0x29644>
  42e430:	ldr	x23, [x26, #1136]
  42e434:	mov	x0, x24
  42e438:	bl	43c05c <argp_usage@@Base+0xa460>
  42e43c:	mov	x3, x0
  42e440:	mov	w1, #0x1                   	// #1
  42e444:	mov	x0, x23
  42e448:	mov	x2, x21
  42e44c:	bl	404910 <__fprintf_chk@plt>
  42e450:	mov	x23, x20
  42e454:	ldr	x24, [x27, x28, lsl #3]
  42e458:	add	x28, x28, #0x1
  42e45c:	add	x20, x20, x19
  42e460:	cbz	x24, 42e4a0 <wcrtomb@plt+0x29680>
  42e464:	cbz	x28, 42e430 <wcrtomb@plt+0x29610>
  42e468:	mov	x0, x23
  42e46c:	mov	x1, x20
  42e470:	mov	x2, x19
  42e474:	bl	4046d0 <bcmp@plt>
  42e478:	cbnz	w0, 42e430 <wcrtomb@plt+0x29610>
  42e47c:	ldr	x25, [x26, #1136]
  42e480:	mov	x0, x24
  42e484:	bl	43c05c <argp_usage@@Base+0xa460>
  42e488:	mov	x3, x0
  42e48c:	mov	w1, #0x1                   	// #1
  42e490:	mov	x0, x25
  42e494:	mov	x2, x22
  42e498:	bl	404910 <__fprintf_chk@plt>
  42e49c:	b	42e454 <wcrtomb@plt+0x29634>
  42e4a0:	ldr	x1, [x26, #1136]
  42e4a4:	mov	w0, #0xa                   	// #10
  42e4a8:	bl	404400 <putc_unlocked@plt>
  42e4ac:	ldp	x20, x19, [sp, #80]
  42e4b0:	ldp	x22, x21, [sp, #64]
  42e4b4:	ldp	x24, x23, [sp, #48]
  42e4b8:	ldp	x26, x25, [sp, #32]
  42e4bc:	ldp	x28, x27, [sp, #16]
  42e4c0:	ldp	x29, x30, [sp], #96
  42e4c4:	ret
  42e4c8:	stp	x29, x30, [sp, #-64]!
  42e4cc:	stp	x24, x23, [sp, #16]
  42e4d0:	stp	x22, x21, [sp, #32]
  42e4d4:	mov	x21, x3
  42e4d8:	mov	x22, x2
  42e4dc:	mov	x23, x1
  42e4e0:	mov	x24, x0
  42e4e4:	mov	x0, x1
  42e4e8:	mov	x1, x2
  42e4ec:	mov	x2, x3
  42e4f0:	mov	x3, x4
  42e4f4:	stp	x20, x19, [sp, #48]
  42e4f8:	mov	x29, sp
  42e4fc:	mov	x19, x5
  42e500:	mov	x20, x4
  42e504:	bl	42e250 <wcrtomb@plt+0x29430>
  42e508:	mov	x2, x0
  42e50c:	tbz	x0, #63, 42e534 <wcrtomb@plt+0x29714>
  42e510:	mov	x0, x24
  42e514:	mov	x1, x23
  42e518:	bl	42e338 <wcrtomb@plt+0x29518>
  42e51c:	mov	x0, x22
  42e520:	mov	x1, x21
  42e524:	mov	x2, x20
  42e528:	bl	42e3c0 <wcrtomb@plt+0x295a0>
  42e52c:	blr	x19
  42e530:	mov	x2, #0xffffffffffffffff    	// #-1
  42e534:	ldp	x20, x19, [sp, #48]
  42e538:	ldp	x22, x21, [sp, #32]
  42e53c:	ldp	x24, x23, [sp, #16]
  42e540:	mov	x0, x2
  42e544:	ldp	x29, x30, [sp], #64
  42e548:	ret
  42e54c:	stp	x29, x30, [sp, #-64]!
  42e550:	stp	x22, x21, [sp, #32]
  42e554:	stp	x20, x19, [sp, #48]
  42e558:	ldr	x20, [x1]
  42e55c:	str	x23, [sp, #16]
  42e560:	mov	x29, sp
  42e564:	cbz	x20, 42e5b4 <wcrtomb@plt+0x29794>
  42e568:	mov	x22, x2
  42e56c:	mov	x23, x1
  42e570:	mov	x1, x2
  42e574:	mov	x2, x3
  42e578:	mov	x19, x3
  42e57c:	mov	x21, x0
  42e580:	bl	4046d0 <bcmp@plt>
  42e584:	cbz	w0, 42e5b4 <wcrtomb@plt+0x29794>
  42e588:	add	x22, x22, x19
  42e58c:	add	x23, x23, #0x8
  42e590:	ldr	x20, [x23]
  42e594:	cbz	x20, 42e5b4 <wcrtomb@plt+0x29794>
  42e598:	mov	x0, x21
  42e59c:	mov	x1, x22
  42e5a0:	mov	x2, x19
  42e5a4:	bl	4046d0 <bcmp@plt>
  42e5a8:	add	x22, x22, x19
  42e5ac:	add	x23, x23, #0x8
  42e5b0:	cbnz	w0, 42e590 <wcrtomb@plt+0x29770>
  42e5b4:	mov	x0, x20
  42e5b8:	ldp	x20, x19, [sp, #48]
  42e5bc:	ldp	x22, x21, [sp, #32]
  42e5c0:	ldr	x23, [sp, #16]
  42e5c4:	ldp	x29, x30, [sp], #64
  42e5c8:	ret

000000000042e5cc <argp_help@@Base>:
  42e5cc:	stp	x29, x30, [sp, #-16]!
  42e5d0:	mov	x4, x3
  42e5d4:	mov	w3, w2
  42e5d8:	mov	x2, x1
  42e5dc:	mov	x1, xzr
  42e5e0:	mov	x29, sp
  42e5e4:	bl	42e5f0 <argp_help@@Base+0x24>
  42e5e8:	ldp	x29, x30, [sp], #16
  42e5ec:	ret
  42e5f0:	stp	x29, x30, [sp, #-96]!
  42e5f4:	stp	x28, x27, [sp, #16]
  42e5f8:	stp	x26, x25, [sp, #32]
  42e5fc:	stp	x24, x23, [sp, #48]
  42e600:	stp	x22, x21, [sp, #64]
  42e604:	stp	x20, x19, [sp, #80]
  42e608:	mov	x29, sp
  42e60c:	sub	sp, sp, #0x20
  42e610:	stp	x4, x1, [x29, #-24]
  42e614:	cbz	x2, 42e8ec <argp_help@@Base+0x320>
  42e618:	mov	x21, x0
  42e61c:	mov	x0, x2
  42e620:	mov	w22, w3
  42e624:	mov	x23, x2
  42e628:	bl	404230 <flockfile@plt>
  42e62c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42e630:	ldr	w8, [x8, #1004]
  42e634:	cbnz	w8, 42e640 <argp_help@@Base+0x74>
  42e638:	ldur	x0, [x29, #-16]
  42e63c:	bl	42ec7c <argp_failure@@Base+0x190>
  42e640:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42e644:	ldrsw	x2, [x8, #1000]
  42e648:	mov	x0, x23
  42e64c:	mov	x1, xzr
  42e650:	mov	x3, xzr
  42e654:	bl	44b4cc <_obstack_memory_used@@Base+0xd26c>
  42e658:	cbz	x0, 42e800 <argp_help@@Base+0x234>
  42e65c:	mov	w8, #0xb                   	// #11
  42e660:	mov	x20, x0
  42e664:	tst	w22, w8
  42e668:	b.eq	42e90c <argp_help@@Base+0x340>  // b.none
  42e66c:	mov	x0, x21
  42e670:	mov	x1, xzr
  42e674:	bl	42ef84 <argp_failure@@Base+0x498>
  42e678:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e67c:	add	x1, x1, #0x56d
  42e680:	mov	x25, x0
  42e684:	bl	42f024 <argp_failure@@Base+0x538>
  42e688:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e68c:	add	x1, x1, #0xb3d
  42e690:	mov	x0, x25
  42e694:	bl	42f024 <argp_failure@@Base+0x538>
  42e698:	mov	x0, x25
  42e69c:	bl	42f044 <argp_failure@@Base+0x558>
  42e6a0:	tst	w22, #0x3
  42e6a4:	b.eq	42e918 <argp_help@@Base+0x34c>  // b.none
  42e6a8:	mov	x0, x21
  42e6ac:	stur	x23, [x29, #-32]
  42e6b0:	bl	42f08c <argp_failure@@Base+0x5a0>
  42e6b4:	add	x9, x0, #0xf
  42e6b8:	mov	x8, sp
  42e6bc:	and	x9, x9, #0xfffffffffffffff0
  42e6c0:	sub	x26, x8, x9
  42e6c4:	mov	x2, x0
  42e6c8:	mov	sp, x26
  42e6cc:	mov	x0, x26
  42e6d0:	mov	w1, wzr
  42e6d4:	bl	404600 <memset@plt>
  42e6d8:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e6dc:	add	x23, x23, #0x572
  42e6e0:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42e6e4:	mov	w27, #0x1                   	// #1
  42e6e8:	b	42e748 <argp_help@@Base+0x17c>
  42e6ec:	mov	x0, x25
  42e6f0:	mov	x1, x20
  42e6f4:	bl	42f0f8 <argp_failure@@Base+0x60c>
  42e6f8:	orr	w22, w22, #0x2
  42e6fc:	ldur	x1, [x29, #-16]
  42e700:	sub	x2, x29, #0x8
  42e704:	mov	w3, #0x1                   	// #1
  42e708:	mov	x0, x21
  42e70c:	mov	x4, x20
  42e710:	bl	42f26c <argp_failure@@Base+0x780>
  42e714:	mov	w24, w0
  42e718:	sxtw	x1, w19
  42e71c:	mov	x0, x20
  42e720:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  42e724:	sxtw	x1, w23
  42e728:	mov	x0, x20
  42e72c:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  42e730:	mov	w1, #0xa                   	// #10
  42e734:	mov	x0, x20
  42e738:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42e73c:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e740:	add	x23, x23, #0x579
  42e744:	cbz	w24, 42e7cc <argp_help@@Base+0x200>
  42e748:	ldrsw	x1, [x28, #996]
  42e74c:	mov	x0, x20
  42e750:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  42e754:	stur	x26, [x29, #-8]
  42e758:	ldr	x8, [x21, #48]
  42e75c:	mov	x19, x0
  42e760:	mov	w2, #0x5                   	// #5
  42e764:	mov	x1, x23
  42e768:	mov	x0, x8
  42e76c:	bl	404bf0 <dcgettext@plt>
  42e770:	ldur	x3, [x29, #-24]
  42e774:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  42e778:	mov	x2, x0
  42e77c:	mov	x0, x20
  42e780:	add	x1, x1, #0xfa0
  42e784:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  42e788:	ldrsw	x1, [x28, #996]
  42e78c:	mov	x0, x20
  42e790:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  42e794:	mov	x23, x0
  42e798:	tbz	w22, #1, 42e6ec <argp_help@@Base+0x120>
  42e79c:	mov	x8, x25
  42e7a0:	ldr	w8, [x25, #8]
  42e7a4:	cbz	w8, 42e6fc <argp_help@@Base+0x130>
  42e7a8:	ldr	x0, [x21, #48]
  42e7ac:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e7b0:	mov	w2, #0x5                   	// #5
  42e7b4:	add	x1, x1, #0x580
  42e7b8:	bl	404bf0 <dcgettext@plt>
  42e7bc:	mov	x1, x0
  42e7c0:	mov	x0, x20
  42e7c4:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  42e7c8:	b	42e6fc <argp_help@@Base+0x130>
  42e7cc:	ldur	x23, [x29, #-32]
  42e7d0:	tbz	w22, #4, 42e7f4 <argp_help@@Base+0x228>
  42e7d4:	ldur	x1, [x29, #-16]
  42e7d8:	mov	w4, #0x1                   	// #1
  42e7dc:	mov	x0, x21
  42e7e0:	mov	w2, wzr
  42e7e4:	mov	w3, wzr
  42e7e8:	mov	x5, x20
  42e7ec:	bl	42f42c <argp_failure@@Base+0x940>
  42e7f0:	orr	w27, w0, w27
  42e7f4:	tbnz	w22, #2, 42e80c <argp_help@@Base+0x240>
  42e7f8:	tbnz	w22, #3, 42e83c <argp_help@@Base+0x270>
  42e7fc:	b	42e868 <argp_help@@Base+0x29c>
  42e800:	mov	x0, x23
  42e804:	bl	404520 <funlockfile@plt>
  42e808:	b	42e8ec <argp_help@@Base+0x320>
  42e80c:	ldr	x0, [x21, #48]
  42e810:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e814:	add	x1, x1, #0x58d
  42e818:	mov	w2, #0x5                   	// #5
  42e81c:	bl	404bf0 <dcgettext@plt>
  42e820:	ldur	x2, [x29, #-24]
  42e824:	mov	x1, x0
  42e828:	mov	x0, x20
  42e82c:	mov	x3, x2
  42e830:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  42e834:	mov	w27, #0x1                   	// #1
  42e838:	tbz	w22, #3, 42e868 <argp_help@@Base+0x29c>
  42e83c:	ldr	w8, [x25, #8]
  42e840:	cbz	w8, 42e868 <argp_help@@Base+0x29c>
  42e844:	cbz	w27, 42e854 <argp_help@@Base+0x288>
  42e848:	mov	w1, #0xa                   	// #10
  42e84c:	mov	x0, x20
  42e850:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42e854:	ldur	x1, [x29, #-16]
  42e858:	mov	x0, x25
  42e85c:	mov	x2, x20
  42e860:	bl	42f6a4 <argp_failure@@Base+0xbb8>
  42e864:	mov	w27, #0x1                   	// #1
  42e868:	tbz	w22, #5, 42e88c <argp_help@@Base+0x2c0>
  42e86c:	ldur	x1, [x29, #-16]
  42e870:	mov	w2, #0x1                   	// #1
  42e874:	mov	x0, x21
  42e878:	mov	w3, w27
  42e87c:	mov	w4, wzr
  42e880:	mov	x5, x20
  42e884:	bl	42f42c <argp_failure@@Base+0x940>
  42e888:	orr	w27, w0, w27
  42e88c:	tbz	w22, #6, 42e8d0 <argp_help@@Base+0x304>
  42e890:	adrp	x19, 470000 <argp_program_version_hook@@Base+0x258>
  42e894:	ldr	x8, [x19, #1048]
  42e898:	cbz	x8, 42e8d0 <argp_help@@Base+0x304>
  42e89c:	cbz	w27, 42e8ac <argp_help@@Base+0x2e0>
  42e8a0:	mov	w1, #0xa                   	// #10
  42e8a4:	mov	x0, x20
  42e8a8:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42e8ac:	ldr	x0, [x21, #48]
  42e8b0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42e8b4:	add	x1, x1, #0x5c4
  42e8b8:	mov	w2, #0x5                   	// #5
  42e8bc:	bl	404bf0 <dcgettext@plt>
  42e8c0:	ldr	x2, [x19, #1048]
  42e8c4:	mov	x1, x0
  42e8c8:	mov	x0, x20
  42e8cc:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  42e8d0:	mov	x0, x23
  42e8d4:	bl	404520 <funlockfile@plt>
  42e8d8:	cbz	x25, 42e8e4 <argp_help@@Base+0x318>
  42e8dc:	mov	x0, x25
  42e8e0:	bl	42f7a8 <argp_failure@@Base+0xcbc>
  42e8e4:	mov	x0, x20
  42e8e8:	bl	44b54c <_obstack_memory_used@@Base+0xd2ec>
  42e8ec:	mov	sp, x29
  42e8f0:	ldp	x20, x19, [sp, #80]
  42e8f4:	ldp	x22, x21, [sp, #64]
  42e8f8:	ldp	x24, x23, [sp, #48]
  42e8fc:	ldp	x26, x25, [sp, #32]
  42e900:	ldp	x28, x27, [sp, #16]
  42e904:	ldp	x29, x30, [sp], #96
  42e908:	ret
  42e90c:	mov	x25, xzr
  42e910:	tst	w22, #0x3
  42e914:	b.ne	42e6a8 <argp_help@@Base+0xdc>  // b.any
  42e918:	mov	w27, wzr
  42e91c:	tbnz	w22, #4, 42e7d4 <argp_help@@Base+0x208>
  42e920:	b	42e7f4 <argp_help@@Base+0x228>

000000000042e924 <argp_state_help@@Base>:
  42e924:	stp	x29, x30, [sp, #-32]!
  42e928:	stp	x20, x19, [sp, #16]
  42e92c:	mov	w19, w2
  42e930:	mov	x2, x1
  42e934:	mov	x20, x0
  42e938:	mov	x29, sp
  42e93c:	cbz	x0, 42e950 <argp_state_help@@Base+0x2c>
  42e940:	cbz	x2, 42e9ac <argp_state_help@@Base+0x88>
  42e944:	ldr	w8, [x20, #28]
  42e948:	tbz	w8, #1, 42e954 <argp_state_help@@Base+0x30>
  42e94c:	b	42e9ac <argp_state_help@@Base+0x88>
  42e950:	cbz	x2, 42e9ac <argp_state_help@@Base+0x88>
  42e954:	cbz	x20, 42e968 <argp_state_help@@Base+0x44>
  42e958:	ldr	w8, [x20, #28]
  42e95c:	lsl	w8, w8, #1
  42e960:	and	w8, w8, #0x80
  42e964:	orr	w19, w8, w19
  42e968:	cbz	x20, 42e98c <argp_state_help@@Base+0x68>
  42e96c:	ldr	x0, [x20]
  42e970:	ldr	x4, [x20, #64]
  42e974:	mov	x1, x20
  42e978:	mov	w3, w19
  42e97c:	bl	42e5f0 <argp_help@@Base+0x24>
  42e980:	ldrb	w8, [x20, #28]
  42e984:	tbz	w8, #5, 42e9a4 <argp_state_help@@Base+0x80>
  42e988:	b	42e9ac <argp_state_help@@Base+0x88>
  42e98c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42e990:	ldr	x4, [x8, #1168]
  42e994:	mov	x0, xzr
  42e998:	mov	x1, x20
  42e99c:	mov	w3, w19
  42e9a0:	bl	42e5f0 <argp_help@@Base+0x24>
  42e9a4:	tbnz	w19, #8, 42e9b8 <argp_state_help@@Base+0x94>
  42e9a8:	tbnz	w19, #9, 42e9c4 <argp_state_help@@Base+0xa0>
  42e9ac:	ldp	x20, x19, [sp, #16]
  42e9b0:	ldp	x29, x30, [sp], #32
  42e9b4:	ret
  42e9b8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42e9bc:	ldr	w0, [x8, #1112]
  42e9c0:	bl	4041c0 <exit@plt>
  42e9c4:	mov	w0, wzr
  42e9c8:	bl	4041c0 <exit@plt>

000000000042e9cc <argp_error@@Base>:
  42e9cc:	sub	sp, sp, #0x120
  42e9d0:	stp	x29, x30, [sp, #240]
  42e9d4:	stp	x20, x19, [sp, #272]
  42e9d8:	add	x29, sp, #0xf0
  42e9dc:	mov	x20, x1
  42e9e0:	mov	x19, x0
  42e9e4:	stp	x28, x21, [sp, #256]
  42e9e8:	stp	x2, x3, [x29, #-112]
  42e9ec:	stp	x4, x5, [x29, #-96]
  42e9f0:	stp	x6, x7, [x29, #-80]
  42e9f4:	stp	q1, q2, [sp, #16]
  42e9f8:	stp	q3, q4, [sp, #48]
  42e9fc:	str	q0, [sp]
  42ea00:	stp	q5, q6, [sp, #80]
  42ea04:	str	q7, [sp, #112]
  42ea08:	cbz	x0, 42ea24 <argp_error@@Base+0x58>
  42ea0c:	ldrb	w8, [x19, #28]
  42ea10:	tbnz	w8, #1, 42ead8 <argp_error@@Base+0x10c>
  42ea14:	add	x8, x19, #0x48
  42ea18:	ldr	x21, [x8]
  42ea1c:	cbnz	x21, 42ea34 <argp_error@@Base+0x68>
  42ea20:	b	42ead8 <argp_error@@Base+0x10c>
  42ea24:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42ea28:	add	x8, x8, #0x470
  42ea2c:	ldr	x21, [x8]
  42ea30:	cbz	x21, 42ead8 <argp_error@@Base+0x10c>
  42ea34:	mov	x0, x21
  42ea38:	bl	404230 <flockfile@plt>
  42ea3c:	mov	x8, #0xffffffffffffffd0    	// #-48
  42ea40:	mov	x9, sp
  42ea44:	sub	x10, x29, #0x70
  42ea48:	adrp	x13, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42ea4c:	movk	x8, #0xff80, lsl #32
  42ea50:	add	x11, x29, #0x30
  42ea54:	add	x12, x19, #0x40
  42ea58:	add	x13, x13, #0x490
  42ea5c:	cmp	x19, #0x0
  42ea60:	add	x9, x9, #0x80
  42ea64:	add	x10, x10, #0x30
  42ea68:	stp	x9, x8, [x29, #-48]
  42ea6c:	stp	x11, x10, [x29, #-64]
  42ea70:	csel	x8, x12, x13, ne  // ne = any
  42ea74:	ldr	x0, [x8]
  42ea78:	mov	x1, x21
  42ea7c:	bl	404c10 <fputs_unlocked@plt>
  42ea80:	mov	w0, #0x3a                  	// #58
  42ea84:	mov	x1, x21
  42ea88:	bl	404400 <putc_unlocked@plt>
  42ea8c:	mov	w0, #0x20                  	// #32
  42ea90:	mov	x1, x21
  42ea94:	bl	404400 <putc_unlocked@plt>
  42ea98:	ldp	q0, q1, [x29, #-64]
  42ea9c:	sub	x3, x29, #0x20
  42eaa0:	mov	w1, #0x1                   	// #1
  42eaa4:	mov	x0, x21
  42eaa8:	mov	x2, x20
  42eaac:	stp	q0, q1, [x29, #-32]
  42eab0:	bl	404690 <__vfprintf_chk@plt>
  42eab4:	mov	w0, #0xa                   	// #10
  42eab8:	mov	x1, x21
  42eabc:	bl	404400 <putc_unlocked@plt>
  42eac0:	mov	w2, #0x104                 	// #260
  42eac4:	mov	x0, x19
  42eac8:	mov	x1, x21
  42eacc:	bl	42e924 <argp_state_help@@Base>
  42ead0:	mov	x0, x21
  42ead4:	bl	404520 <funlockfile@plt>
  42ead8:	ldp	x20, x19, [sp, #272]
  42eadc:	ldp	x28, x21, [sp, #256]
  42eae0:	ldp	x29, x30, [sp, #240]
  42eae4:	add	sp, sp, #0x120
  42eae8:	ret

000000000042eaec <argp_failure@@Base>:
  42eaec:	sub	sp, sp, #0x1d0
  42eaf0:	stp	x28, x23, [sp, #416]
  42eaf4:	stp	x22, x21, [sp, #432]
  42eaf8:	stp	x20, x19, [sp, #448]
  42eafc:	mov	x23, x3
  42eb00:	mov	w22, w2
  42eb04:	mov	w19, w1
  42eb08:	mov	x20, x0
  42eb0c:	stp	x29, x30, [sp, #400]
  42eb10:	add	x29, sp, #0x190
  42eb14:	stp	x4, x5, [sp, #128]
  42eb18:	stp	x6, x7, [sp, #144]
  42eb1c:	stp	q0, q1, [sp]
  42eb20:	stp	q2, q3, [sp, #32]
  42eb24:	stp	q4, q5, [sp, #64]
  42eb28:	stp	q6, q7, [sp, #96]
  42eb2c:	cbz	x0, 42eb48 <argp_failure@@Base+0x5c>
  42eb30:	ldrb	w8, [x20, #28]
  42eb34:	tbnz	w8, #1, 42ec5c <argp_failure@@Base+0x170>
  42eb38:	add	x8, x20, #0x48
  42eb3c:	ldr	x21, [x8]
  42eb40:	cbnz	x21, 42eb58 <argp_failure@@Base+0x6c>
  42eb44:	b	42ec5c <argp_failure@@Base+0x170>
  42eb48:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42eb4c:	add	x8, x8, #0x470
  42eb50:	ldr	x21, [x8]
  42eb54:	cbz	x21, 42ec5c <argp_failure@@Base+0x170>
  42eb58:	mov	x0, x21
  42eb5c:	bl	404230 <flockfile@plt>
  42eb60:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42eb64:	add	x8, x20, #0x40
  42eb68:	add	x9, x9, #0x490
  42eb6c:	cmp	x20, #0x0
  42eb70:	csel	x8, x8, x9, ne  // ne = any
  42eb74:	ldr	x0, [x8]
  42eb78:	mov	x1, x21
  42eb7c:	bl	404c10 <fputs_unlocked@plt>
  42eb80:	cbz	x23, 42ebdc <argp_failure@@Base+0xf0>
  42eb84:	mov	x8, #0xffffffffffffffe0    	// #-32
  42eb88:	mov	x10, sp
  42eb8c:	add	x11, sp, #0x80
  42eb90:	movk	x8, #0xff80, lsl #32
  42eb94:	add	x9, x29, #0x40
  42eb98:	add	x10, x10, #0x80
  42eb9c:	add	x11, x11, #0x20
  42eba0:	mov	w0, #0x3a                  	// #58
  42eba4:	mov	x1, x21
  42eba8:	stp	x10, x8, [x29, #-16]
  42ebac:	stp	x9, x11, [x29, #-32]
  42ebb0:	bl	404400 <putc_unlocked@plt>
  42ebb4:	mov	w0, #0x20                  	// #32
  42ebb8:	mov	x1, x21
  42ebbc:	bl	404400 <putc_unlocked@plt>
  42ebc0:	ldp	q0, q1, [x29, #-32]
  42ebc4:	add	x3, sp, #0xa0
  42ebc8:	mov	w1, #0x1                   	// #1
  42ebcc:	mov	x0, x21
  42ebd0:	mov	x2, x23
  42ebd4:	stp	q0, q1, [sp, #160]
  42ebd8:	bl	404690 <__vfprintf_chk@plt>
  42ebdc:	cbz	w22, 42ec38 <argp_failure@@Base+0x14c>
  42ebe0:	mov	w0, #0x3a                  	// #58
  42ebe4:	mov	x1, x21
  42ebe8:	bl	404400 <putc_unlocked@plt>
  42ebec:	mov	w0, #0x20                  	// #32
  42ebf0:	mov	x1, x21
  42ebf4:	bl	404400 <putc_unlocked@plt>
  42ebf8:	add	x1, sp, #0xa0
  42ebfc:	mov	w2, #0xc8                  	// #200
  42ec00:	mov	w0, w22
  42ec04:	bl	404680 <strerror_r@plt>
  42ec08:	cbnz	x0, 42ec30 <argp_failure@@Base+0x144>
  42ec0c:	mov	w0, w22
  42ec10:	bl	4047b0 <strerror@plt>
  42ec14:	cbnz	x0, 42ec30 <argp_failure@@Base+0x144>
  42ec18:	ldr	x8, [x20]
  42ec1c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42ec20:	add	x1, x1, #0x558
  42ec24:	mov	w2, #0x5                   	// #5
  42ec28:	ldr	x0, [x8, #48]
  42ec2c:	bl	404bf0 <dcgettext@plt>
  42ec30:	mov	x1, x21
  42ec34:	bl	404c10 <fputs_unlocked@plt>
  42ec38:	mov	w0, #0xa                   	// #10
  42ec3c:	mov	x1, x21
  42ec40:	bl	404400 <putc_unlocked@plt>
  42ec44:	mov	x0, x21
  42ec48:	bl	404520 <funlockfile@plt>
  42ec4c:	cbz	w19, 42ec5c <argp_failure@@Base+0x170>
  42ec50:	cbz	x20, 42ec74 <argp_failure@@Base+0x188>
  42ec54:	ldrb	w8, [x20, #28]
  42ec58:	tbz	w8, #5, 42ec74 <argp_failure@@Base+0x188>
  42ec5c:	ldp	x20, x19, [sp, #448]
  42ec60:	ldp	x22, x21, [sp, #432]
  42ec64:	ldp	x28, x23, [sp, #416]
  42ec68:	ldp	x29, x30, [sp, #400]
  42ec6c:	add	sp, sp, #0x1d0
  42ec70:	ret
  42ec74:	mov	w0, w19
  42ec78:	bl	4041c0 <exit@plt>
  42ec7c:	sub	sp, sp, #0x90
  42ec80:	stp	x20, x19, [sp, #128]
  42ec84:	mov	x19, x0
  42ec88:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42ec8c:	add	x0, x0, #0x5d8
  42ec90:	stp	x29, x30, [sp, #48]
  42ec94:	stp	x28, x27, [sp, #64]
  42ec98:	stp	x26, x25, [sp, #80]
  42ec9c:	stp	x24, x23, [sp, #96]
  42eca0:	stp	x22, x21, [sp, #112]
  42eca4:	add	x29, sp, #0x30
  42eca8:	bl	404d30 <getenv@plt>
  42ecac:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42ecb0:	add	x8, x8, #0x3c8
  42ecb4:	ldp	q0, q1, [x8]
  42ecb8:	ldr	x8, [x8, #32]
  42ecbc:	stp	q0, q1, [sp]
  42ecc0:	str	x8, [sp, #32]
  42ecc4:	cbz	x0, 42ef64 <argp_failure@@Base+0x478>
  42ecc8:	ldrb	w8, [x0]
  42eccc:	mov	x20, x0
  42ecd0:	cbz	w8, 42ef58 <argp_failure@@Base+0x46c>
  42ecd4:	bl	404950 <__ctype_b_loc@plt>
  42ecd8:	adrp	x28, 457000 <_obstack_memory_used@@Base+0x18da0>
  42ecdc:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x18da0>
  42ece0:	mov	x21, x0
  42ece4:	add	x28, x28, #0x81e
  42ece8:	add	x22, x22, #0x8ae
  42ecec:	b	42ecfc <argp_failure@@Base+0x210>
  42ecf0:	cbnz	w9, 42ef1c <argp_failure@@Base+0x430>
  42ecf4:	ldrb	w8, [x20]
  42ecf8:	cbz	w8, 42ef58 <argp_failure@@Base+0x46c>
  42ecfc:	ldr	x27, [x21]
  42ed00:	add	x8, x20, #0x2
  42ed04:	sub	x10, x20, #0x1
  42ed08:	ldurb	w9, [x8, #-2]
  42ed0c:	mov	x24, x10
  42ed10:	add	x8, x8, #0x1
  42ed14:	add	x10, x10, #0x1
  42ed18:	ldrh	w11, [x27, x9, lsl #1]
  42ed1c:	tbnz	w11, #13, 42ed08 <argp_failure@@Base+0x21c>
  42ed20:	sub	x20, x8, #0x3
  42ed24:	tbz	w11, #10, 42ecf0 <argp_failure@@Base+0x204>
  42ed28:	mov	x10, x20
  42ed2c:	b	42ed38 <argp_failure@@Base+0x24c>
  42ed30:	add	x10, x10, #0x1
  42ed34:	add	x24, x24, #0x1
  42ed38:	ldrb	w11, [x10]
  42ed3c:	ldrh	w12, [x27, x11, lsl #1]
  42ed40:	tbnz	w12, #3, 42ed30 <argp_failure@@Base+0x244>
  42ed44:	cmp	w11, #0x5f
  42ed48:	b.eq	42ed30 <argp_failure@@Base+0x244>  // b.none
  42ed4c:	cmp	w11, #0x2d
  42ed50:	b.eq	42ed30 <argp_failure@@Base+0x244>  // b.none
  42ed54:	ldrb	w11, [x24, #1]!
  42ed58:	ldrh	w12, [x27, x11, lsl #1]
  42ed5c:	tbnz	w12, #13, 42ed54 <argp_failure@@Base+0x268>
  42ed60:	sub	x25, x10, x20
  42ed64:	cbz	w11, 42ed78 <argp_failure@@Base+0x28c>
  42ed68:	cmp	w11, #0x3d
  42ed6c:	b.eq	42ed94 <argp_failure@@Base+0x2a8>  // b.none
  42ed70:	cmp	w11, #0x2c
  42ed74:	b.ne	42eda0 <argp_failure@@Base+0x2b4>  // b.any
  42ed78:	mov	w23, #0x1                   	// #1
  42ed7c:	cbnz	w23, 42eda8 <argp_failure@@Base+0x2bc>
  42ed80:	ldrb	w8, [x24]
  42ed84:	ldrh	w8, [x27, x8, lsl #1]
  42ed88:	tbnz	w8, #11, 42ede0 <argp_failure@@Base+0x2f4>
  42ed8c:	mov	w26, wzr
  42ed90:	b	42ee0c <argp_failure@@Base+0x320>
  42ed94:	ldrb	w10, [x24, #1]!
  42ed98:	ldrh	w10, [x27, x10, lsl #1]
  42ed9c:	tbnz	w10, #13, 42ed94 <argp_failure@@Base+0x2a8>
  42eda0:	mov	w23, wzr
  42eda4:	cbz	w23, 42ed80 <argp_failure@@Base+0x294>
  42eda8:	cmp	w9, #0x6e
  42edac:	b.ne	42edd8 <argp_failure@@Base+0x2ec>  // b.any
  42edb0:	ldurb	w9, [x8, #-2]
  42edb4:	cmp	w9, #0x6f
  42edb8:	b.ne	42edd8 <argp_failure@@Base+0x2ec>  // b.any
  42edbc:	ldurb	w9, [x8, #-1]
  42edc0:	cmp	w9, #0x2d
  42edc4:	b.ne	42edd8 <argp_failure@@Base+0x2ec>  // b.any
  42edc8:	mov	w26, wzr
  42edcc:	sub	x25, x25, #0x3
  42edd0:	mov	x20, x8
  42edd4:	b	42ee0c <argp_failure@@Base+0x320>
  42edd8:	mov	w26, #0x1                   	// #1
  42eddc:	b	42ee0c <argp_failure@@Base+0x320>
  42ede0:	mov	x0, x24
  42ede4:	bl	404490 <atoi@plt>
  42ede8:	mov	w26, w0
  42edec:	sub	x8, x24, #0x1
  42edf0:	mov	x24, x8
  42edf4:	ldrb	w9, [x8, #1]!
  42edf8:	ldrh	w9, [x27, x9, lsl #1]
  42edfc:	tbnz	w9, #11, 42edf0 <argp_failure@@Base+0x304>
  42ee00:	ldrb	w8, [x24, #1]!
  42ee04:	ldrh	w8, [x27, x8, lsl #1]
  42ee08:	tbnz	w8, #13, 42ee00 <argp_failure@@Base+0x314>
  42ee0c:	mov	x27, x28
  42ee10:	b	42ee20 <argp_failure@@Base+0x334>
  42ee14:	add	x27, x27, #0x10
  42ee18:	cmp	x27, x22
  42ee1c:	b.cs	42ee68 <argp_failure@@Base+0x37c>  // b.hs, b.nlast
  42ee20:	mov	x0, x27
  42ee24:	bl	404190 <strlen@plt>
  42ee28:	cmp	x0, x25
  42ee2c:	b.ne	42ee14 <argp_failure@@Base+0x328>  // b.any
  42ee30:	mov	x0, x20
  42ee34:	mov	x1, x27
  42ee38:	mov	x2, x25
  42ee3c:	bl	4045a0 <strncmp@plt>
  42ee40:	cbnz	w0, 42ee14 <argp_failure@@Base+0x328>
  42ee44:	cbz	w23, 42ee50 <argp_failure@@Base+0x364>
  42ee48:	ldrb	w8, [x27, #14]
  42ee4c:	cbz	w8, 42eed0 <argp_failure@@Base+0x3e4>
  42ee50:	ldrb	w8, [x27, #15]
  42ee54:	mov	x9, sp
  42ee58:	str	w26, [x9, x8]
  42ee5c:	cmp	x27, x22
  42ee60:	b.ne	42eeb4 <argp_failure@@Base+0x3c8>  // b.any
  42ee64:	b	42ee74 <argp_failure@@Base+0x388>
  42ee68:	mov	x27, x22
  42ee6c:	cmp	x27, x22
  42ee70:	b.ne	42eeb4 <argp_failure@@Base+0x3c8>  // b.any
  42ee74:	cbz	x19, 42ee84 <argp_failure@@Base+0x398>
  42ee78:	ldr	x8, [x19]
  42ee7c:	ldr	x0, [x8, #48]
  42ee80:	b	42ee88 <argp_failure@@Base+0x39c>
  42ee84:	mov	x0, xzr
  42ee88:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42ee8c:	mov	w2, #0x5                   	// #5
  42ee90:	add	x1, x1, #0x615
  42ee94:	bl	404bf0 <dcgettext@plt>
  42ee98:	mov	x3, x0
  42ee9c:	mov	x0, x19
  42eea0:	mov	w1, wzr
  42eea4:	mov	w2, wzr
  42eea8:	mov	w4, w25
  42eeac:	mov	x5, x20
  42eeb0:	bl	42eaec <argp_failure@@Base>
  42eeb4:	mov	x8, x24
  42eeb8:	ldrb	w9, [x8], #1
  42eebc:	cmp	w9, #0x2c
  42eec0:	csel	x20, x8, x24, eq  // eq = none
  42eec4:	ldrb	w8, [x20]
  42eec8:	cbnz	w8, 42ecfc <argp_failure@@Base+0x210>
  42eecc:	b	42ef58 <argp_failure@@Base+0x46c>
  42eed0:	cbz	x19, 42eee0 <argp_failure@@Base+0x3f4>
  42eed4:	ldr	x8, [x19]
  42eed8:	ldr	x0, [x8, #48]
  42eedc:	b	42eee4 <argp_failure@@Base+0x3f8>
  42eee0:	mov	x0, xzr
  42eee4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42eee8:	mov	w2, #0x5                   	// #5
  42eeec:	add	x1, x1, #0x5e6
  42eef0:	bl	404bf0 <dcgettext@plt>
  42eef4:	mov	x3, x0
  42eef8:	mov	x0, x19
  42eefc:	mov	w1, wzr
  42ef00:	mov	w2, wzr
  42ef04:	mov	w4, w25
  42ef08:	mov	x5, x20
  42ef0c:	bl	42eaec <argp_failure@@Base>
  42ef10:	cmp	x27, x22
  42ef14:	b.ne	42eeb4 <argp_failure@@Base+0x3c8>  // b.any
  42ef18:	b	42ee74 <argp_failure@@Base+0x388>
  42ef1c:	cbz	x19, 42ef2c <argp_failure@@Base+0x440>
  42ef20:	ldr	x8, [x19]
  42ef24:	ldr	x0, [x8, #48]
  42ef28:	b	42ef30 <argp_failure@@Base+0x444>
  42ef2c:	mov	x0, xzr
  42ef30:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42ef34:	add	x1, x1, #0x63b
  42ef38:	mov	w2, #0x5                   	// #5
  42ef3c:	bl	404bf0 <dcgettext@plt>
  42ef40:	mov	x3, x0
  42ef44:	mov	x0, x19
  42ef48:	mov	w1, wzr
  42ef4c:	mov	w2, wzr
  42ef50:	mov	x4, x20
  42ef54:	bl	42eaec <argp_failure@@Base>
  42ef58:	mov	x1, sp
  42ef5c:	mov	x0, x19
  42ef60:	bl	42f7fc <argp_failure@@Base+0xd10>
  42ef64:	ldp	x20, x19, [sp, #128]
  42ef68:	ldp	x22, x21, [sp, #112]
  42ef6c:	ldp	x24, x23, [sp, #96]
  42ef70:	ldp	x26, x25, [sp, #80]
  42ef74:	ldp	x28, x27, [sp, #64]
  42ef78:	ldp	x29, x30, [sp, #48]
  42ef7c:	add	sp, sp, #0x90
  42ef80:	ret
  42ef84:	stp	x29, x30, [sp, #-48]!
  42ef88:	stp	x22, x21, [sp, #16]
  42ef8c:	stp	x20, x19, [sp, #32]
  42ef90:	ldr	x22, [x0, #32]
  42ef94:	mov	x29, sp
  42ef98:	mov	x19, x0
  42ef9c:	mov	x20, x1
  42efa0:	bl	42f8b8 <argp_failure@@Base+0xdcc>
  42efa4:	mov	x21, x0
  42efa8:	cbz	x22, 42efb4 <argp_failure@@Base+0x4c8>
  42efac:	ldr	x8, [x22]
  42efb0:	cbnz	x8, 42f00c <argp_failure@@Base+0x520>
  42efb4:	mov	x0, x21
  42efb8:	ldp	x20, x19, [sp, #32]
  42efbc:	ldp	x22, x21, [sp, #16]
  42efc0:	ldp	x29, x30, [sp], #48
  42efc4:	ret
  42efc8:	ldr	x8, [x19, #32]
  42efcc:	ldr	x2, [x22, #16]
  42efd0:	mov	x0, x21
  42efd4:	mov	x4, x20
  42efd8:	sub	x8, x22, x8
  42efdc:	lsr	x3, x8, #5
  42efe0:	mov	x5, x19
  42efe4:	bl	42fac4 <argp_failure@@Base+0xfd8>
  42efe8:	mov	x2, x0
  42efec:	ldr	x0, [x22]
  42eff0:	mov	x1, x2
  42eff4:	bl	42ef84 <argp_failure@@Base+0x498>
  42eff8:	mov	x1, x0
  42effc:	mov	x0, x21
  42f000:	bl	42fb40 <argp_failure@@Base+0x1054>
  42f004:	ldr	x8, [x22, #32]!
  42f008:	cbz	x8, 42efb4 <argp_failure@@Base+0x4c8>
  42f00c:	ldr	w1, [x22, #24]
  42f010:	cbnz	w1, 42efc8 <argp_failure@@Base+0x4dc>
  42f014:	ldr	x8, [x22, #16]
  42f018:	mov	x2, x20
  42f01c:	cbnz	x8, 42efc8 <argp_failure@@Base+0x4dc>
  42f020:	b	42efec <argp_failure@@Base+0x500>
  42f024:	stp	x29, x30, [sp, #-16]!
  42f028:	mov	x29, sp
  42f02c:	bl	42fda0 <argp_failure@@Base+0x12b4>
  42f030:	cbz	x0, 42f03c <argp_failure@@Base+0x550>
  42f034:	mov	w8, #0xffffffff            	// #-1
  42f038:	str	w8, [x0, #24]
  42f03c:	ldp	x29, x30, [sp], #16
  42f040:	ret
  42f044:	stp	x29, x30, [sp, #-16]!
  42f048:	ldr	w1, [x0, #8]
  42f04c:	mov	x29, sp
  42f050:	cbz	w1, 42f084 <argp_failure@@Base+0x598>
  42f054:	ldr	x9, [x0]
  42f058:	mov	w8, wzr
  42f05c:	add	x9, x9, #0x30
  42f060:	str	w8, [x9], #56
  42f064:	add	w8, w8, #0x1
  42f068:	cmp	w1, w8
  42f06c:	b.ne	42f060 <argp_failure@@Base+0x574>  // b.any
  42f070:	ldr	x0, [x0]
  42f074:	adrp	x3, 42f000 <argp_failure@@Base+0x514>
  42f078:	add	x3, x3, #0xe3c
  42f07c:	mov	w2, #0x38                  	// #56
  42f080:	bl	404360 <qsort@plt>
  42f084:	ldp	x29, x30, [sp], #16
  42f088:	ret
  42f08c:	stp	x29, x30, [sp, #-32]!
  42f090:	stp	x20, x19, [sp, #16]
  42f094:	mov	x8, x0
  42f098:	ldr	x0, [x0, #16]
  42f09c:	ldr	x20, [x8, #32]
  42f0a0:	mov	x29, sp
  42f0a4:	cbz	x0, 42f0c0 <argp_failure@@Base+0x5d4>
  42f0a8:	mov	w1, #0xa                   	// #10
  42f0ac:	bl	404a70 <strchr@plt>
  42f0b0:	cmp	x0, #0x0
  42f0b4:	cset	w19, ne  // ne = any
  42f0b8:	cbnz	x20, 42f0c8 <argp_failure@@Base+0x5dc>
  42f0bc:	b	42f0e8 <argp_failure@@Base+0x5fc>
  42f0c0:	mov	x19, xzr
  42f0c4:	cbz	x20, 42f0e8 <argp_failure@@Base+0x5fc>
  42f0c8:	ldr	x8, [x20]
  42f0cc:	cbz	x8, 42f0e8 <argp_failure@@Base+0x5fc>
  42f0d0:	add	x20, x20, #0x20
  42f0d4:	mov	x0, x8
  42f0d8:	bl	42f08c <argp_failure@@Base+0x5a0>
  42f0dc:	ldr	x8, [x20], #32
  42f0e0:	add	x19, x0, x19
  42f0e4:	cbnz	x8, 42f0d4 <argp_failure@@Base+0x5e8>
  42f0e8:	mov	x0, x19
  42f0ec:	ldp	x20, x19, [sp, #16]
  42f0f0:	ldp	x29, x30, [sp], #32
  42f0f4:	ret
  42f0f8:	stp	x29, x30, [sp, #-80]!
  42f0fc:	stp	x24, x23, [sp, #32]
  42f100:	stp	x22, x21, [sp, #48]
  42f104:	stp	x20, x19, [sp, #64]
  42f108:	ldr	w24, [x0, #8]
  42f10c:	str	x25, [sp, #16]
  42f110:	mov	x29, sp
  42f114:	cbz	w24, 42f250 <argp_failure@@Base+0x764>
  42f118:	mov	x20, x0
  42f11c:	ldr	x0, [x0, #16]
  42f120:	mov	x19, x1
  42f124:	bl	404190 <strlen@plt>
  42f128:	add	x9, x0, #0x10
  42f12c:	mov	x8, sp
  42f130:	and	x9, x9, #0xfffffffffffffff0
  42f134:	sub	x21, x8, x9
  42f138:	mov	sp, x21
  42f13c:	str	x21, [x29, #24]
  42f140:	ldr	x22, [x20]
  42f144:	adrp	x23, 430000 <argp_failure@@Base+0x1514>
  42f148:	add	x23, x23, #0x274
  42f14c:	ldr	x8, [x22, #40]
  42f150:	add	x3, x29, #0x18
  42f154:	mov	x0, x22
  42f158:	mov	x1, x23
  42f15c:	ldr	x2, [x8, #48]
  42f160:	bl	430190 <argp_failure@@Base+0x16a4>
  42f164:	subs	w24, w24, #0x1
  42f168:	add	x22, x22, #0x38
  42f16c:	b.ne	42f14c <argp_failure@@Base+0x660>  // b.any
  42f170:	ldr	x8, [x29, #24]
  42f174:	cmp	x8, x21
  42f178:	b.ls	42f19c <argp_failure@@Base+0x6b0>  // b.plast
  42f17c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42f180:	add	x9, x8, #0x1
  42f184:	add	x1, x1, #0x75c
  42f188:	mov	x0, x19
  42f18c:	mov	x2, x21
  42f190:	str	x9, [x29, #24]
  42f194:	strb	wzr, [x8]
  42f198:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  42f19c:	ldr	w23, [x20, #8]
  42f1a0:	cbz	w23, 42f1d4 <argp_failure@@Base+0x6e8>
  42f1a4:	ldr	x21, [x20]
  42f1a8:	adrp	x22, 430000 <argp_failure@@Base+0x1514>
  42f1ac:	add	x22, x22, #0x2b8
  42f1b0:	ldr	x8, [x21, #40]
  42f1b4:	mov	x0, x21
  42f1b8:	mov	x1, x22
  42f1bc:	mov	x3, x19
  42f1c0:	ldr	x2, [x8, #48]
  42f1c4:	bl	430190 <argp_failure@@Base+0x16a4>
  42f1c8:	subs	w23, w23, #0x1
  42f1cc:	add	x21, x21, #0x38
  42f1d0:	b.ne	42f1b0 <argp_failure@@Base+0x6c4>  // b.any
  42f1d4:	ldr	w23, [x20, #8]
  42f1d8:	cbz	w23, 42f250 <argp_failure@@Base+0x764>
  42f1dc:	ldr	x24, [x20]
  42f1e0:	b	42f1f0 <argp_failure@@Base+0x704>
  42f1e4:	subs	w23, w23, #0x1
  42f1e8:	add	x24, x24, #0x38
  42f1ec:	b.eq	42f250 <argp_failure@@Base+0x764>  // b.none
  42f1f0:	ldr	w8, [x24, #8]
  42f1f4:	cbz	w8, 42f1e4 <argp_failure@@Base+0x6f8>
  42f1f8:	ldr	x9, [x24, #40]
  42f1fc:	ldr	x20, [x24]
  42f200:	mov	w0, wzr
  42f204:	sub	w25, w8, #0x1
  42f208:	ldr	x21, [x9, #48]
  42f20c:	mov	x22, x20
  42f210:	ldr	x8, [x22]
  42f214:	cbz	x8, 42f23c <argp_failure@@Base+0x750>
  42f218:	ldr	w8, [x22, #24]
  42f21c:	tst	w8, #0x4
  42f220:	csel	x20, x22, x20, eq  // eq = none
  42f224:	tbnz	w8, #1, 42f23c <argp_failure@@Base+0x750>
  42f228:	mov	x0, x22
  42f22c:	mov	x1, x20
  42f230:	mov	x2, x21
  42f234:	mov	x3, x19
  42f238:	bl	430358 <argp_failure@@Base+0x186c>
  42f23c:	subs	w25, w25, #0x1
  42f240:	b.cc	42f1e4 <argp_failure@@Base+0x6f8>  // b.lo, b.ul, b.last
  42f244:	add	x22, x22, #0x30
  42f248:	cbz	w0, 42f210 <argp_failure@@Base+0x724>
  42f24c:	b	42f1e4 <argp_failure@@Base+0x6f8>
  42f250:	mov	sp, x29
  42f254:	ldp	x20, x19, [sp, #64]
  42f258:	ldp	x22, x21, [sp, #48]
  42f25c:	ldp	x24, x23, [sp, #32]
  42f260:	ldr	x25, [sp, #16]
  42f264:	ldp	x29, x30, [sp], #80
  42f268:	ret
  42f26c:	sub	sp, sp, #0x70
  42f270:	stp	x29, x30, [sp, #16]
  42f274:	stp	x28, x27, [sp, #32]
  42f278:	stp	x26, x25, [sp, #48]
  42f27c:	stp	x24, x23, [sp, #64]
  42f280:	stp	x22, x21, [sp, #80]
  42f284:	stp	x20, x19, [sp, #96]
  42f288:	mov	x23, x0
  42f28c:	ldr	x8, [x23, #16]
  42f290:	ldr	x26, [x0, #32]
  42f294:	ldr	x0, [x0, #48]
  42f298:	ldr	x28, [x2]
  42f29c:	mov	x21, x2
  42f2a0:	mov	x22, x1
  42f2a4:	mov	w2, #0x5                   	// #5
  42f2a8:	mov	x1, x8
  42f2ac:	add	x29, sp, #0x10
  42f2b0:	mov	x20, x4
  42f2b4:	mov	w19, w3
  42f2b8:	bl	404bf0 <dcgettext@plt>
  42f2bc:	mov	w1, #0x6                   	// #6
  42f2c0:	movk	w1, #0x200, lsl #16
  42f2c4:	mov	x2, x23
  42f2c8:	mov	x3, x22
  42f2cc:	mov	x24, x0
  42f2d0:	bl	430444 <argp_failure@@Base+0x1958>
  42f2d4:	mov	x25, x0
  42f2d8:	cbz	x0, 42f32c <argp_failure@@Base+0x840>
  42f2dc:	mov	w1, #0xa                   	// #10
  42f2e0:	mov	x0, x25
  42f2e4:	bl	404be0 <strchrnul@plt>
  42f2e8:	ldrb	w8, [x0]
  42f2ec:	mov	x23, x0
  42f2f0:	stp	x26, x28, [sp]
  42f2f4:	cbz	w8, 42f340 <argp_failure@@Base+0x854>
  42f2f8:	ldrb	w8, [x28]
  42f2fc:	cbz	w8, 42f34c <argp_failure@@Base+0x860>
  42f300:	ldrb	w27, [x28]
  42f304:	mov	w28, wzr
  42f308:	add	x26, x23, #0x1
  42f30c:	mov	w1, #0xa                   	// #10
  42f310:	mov	x0, x26
  42f314:	bl	404be0 <strchrnul@plt>
  42f318:	add	w28, w28, #0x1
  42f31c:	cmp	w28, w27
  42f320:	mov	x23, x0
  42f324:	b.cc	42f308 <argp_failure@@Base+0x81c>  // b.lo, b.ul, b.last
  42f328:	b	42f350 <argp_failure@@Base+0x864>
  42f32c:	mov	w27, wzr
  42f330:	mov	x23, xzr
  42f334:	cmp	x25, x24
  42f338:	b.ne	42f390 <argp_failure@@Base+0x8a4>  // b.any
  42f33c:	b	42f39c <argp_failure@@Base+0x8b0>
  42f340:	mov	w28, wzr
  42f344:	mov	x26, x25
  42f348:	b	42f360 <argp_failure@@Base+0x874>
  42f34c:	mov	x26, x25
  42f350:	ldr	x8, [x21]
  42f354:	mov	w28, #0x1                   	// #1
  42f358:	add	x8, x8, #0x1
  42f35c:	str	x8, [x21]
  42f360:	sub	x27, x23, x26
  42f364:	add	x1, x27, #0x1
  42f368:	mov	x0, x20
  42f36c:	bl	430400 <argp_failure@@Base+0x1914>
  42f370:	mov	x0, x20
  42f374:	mov	x1, x26
  42f378:	mov	x2, x27
  42f37c:	bl	44bc38 <_obstack_memory_used@@Base+0xd9d8>
  42f380:	mov	w27, w28
  42f384:	ldp	x26, x28, [sp]
  42f388:	cmp	x25, x24
  42f38c:	b.eq	42f39c <argp_failure@@Base+0x8b0>  // b.none
  42f390:	cbz	x25, 42f39c <argp_failure@@Base+0x8b0>
  42f394:	mov	x0, x25
  42f398:	bl	4049d0 <free@plt>
  42f39c:	cbz	x26, 42f3d4 <argp_failure@@Base+0x8e8>
  42f3a0:	ldr	x8, [x26]
  42f3a4:	cbz	x8, 42f3d4 <argp_failure@@Base+0x8e8>
  42f3a8:	add	x24, x26, #0x20
  42f3ac:	mov	x0, x8
  42f3b0:	mov	x1, x22
  42f3b4:	mov	x2, x21
  42f3b8:	mov	w3, w19
  42f3bc:	mov	x4, x20
  42f3c0:	bl	42f26c <argp_failure@@Base+0x780>
  42f3c4:	ldr	x8, [x24], #32
  42f3c8:	cmp	w0, #0x0
  42f3cc:	cset	w19, eq  // eq = none
  42f3d0:	cbnz	x8, 42f3ac <argp_failure@@Base+0x8c0>
  42f3d4:	cbz	w27, 42f404 <argp_failure@@Base+0x918>
  42f3d8:	cbz	w19, 42f404 <argp_failure@@Base+0x918>
  42f3dc:	ldrb	w9, [x23]
  42f3e0:	ldrb	w8, [x28]
  42f3e4:	cbz	w9, 42f3f8 <argp_failure@@Base+0x90c>
  42f3e8:	add	w8, w8, #0x1
  42f3ec:	mov	w19, wzr
  42f3f0:	strb	w8, [x28]
  42f3f4:	b	42f404 <argp_failure@@Base+0x918>
  42f3f8:	cbz	w8, 42f400 <argp_failure@@Base+0x914>
  42f3fc:	strb	wzr, [x28]
  42f400:	mov	w19, #0x1                   	// #1
  42f404:	cmp	w19, #0x0
  42f408:	ldp	x20, x19, [sp, #96]
  42f40c:	ldp	x22, x21, [sp, #80]
  42f410:	ldp	x24, x23, [sp, #64]
  42f414:	ldp	x26, x25, [sp, #48]
  42f418:	ldp	x28, x27, [sp, #32]
  42f41c:	ldp	x29, x30, [sp, #16]
  42f420:	cset	w0, eq  // eq = none
  42f424:	add	sp, sp, #0x70
  42f428:	ret
  42f42c:	sub	sp, sp, #0x70
  42f430:	stp	x29, x30, [sp, #16]
  42f434:	stp	x28, x27, [sp, #32]
  42f438:	stp	x26, x25, [sp, #48]
  42f43c:	stp	x24, x23, [sp, #64]
  42f440:	stp	x22, x21, [sp, #80]
  42f444:	stp	x20, x19, [sp, #96]
  42f448:	mov	x24, x0
  42f44c:	ldr	x8, [x24, #24]
  42f450:	ldr	x0, [x0, #48]
  42f454:	mov	w22, w2
  42f458:	mov	x23, x1
  42f45c:	mov	w2, #0x5                   	// #5
  42f460:	mov	x1, x8
  42f464:	add	x29, sp, #0x10
  42f468:	mov	x19, x5
  42f46c:	mov	w20, w4
  42f470:	mov	w21, w3
  42f474:	bl	404bf0 <dcgettext@plt>
  42f478:	ldr	x8, [x24, #32]
  42f47c:	str	x8, [sp, #8]
  42f480:	cbz	x0, 42f4b4 <argp_failure@@Base+0x9c8>
  42f484:	mov	w1, #0xb                   	// #11
  42f488:	mov	x25, x0
  42f48c:	bl	404a70 <strchr@plt>
  42f490:	cmp	x0, #0x0
  42f494:	csinc	x9, xzr, x0, eq  // eq = none
  42f498:	cmp	x0, #0x0
  42f49c:	sub	x8, x0, x25
  42f4a0:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  42f4a4:	csel	x26, x8, xzr, eq  // eq = none
  42f4a8:	cmp	w22, #0x0
  42f4ac:	csel	x28, x25, x9, eq  // eq = none
  42f4b0:	b	42f4bc <argp_failure@@Base+0x9d0>
  42f4b4:	mov	x26, xzr
  42f4b8:	mov	x28, xzr
  42f4bc:	ldr	x8, [x24, #40]
  42f4c0:	mov	w25, #0x1                   	// #1
  42f4c4:	movk	w25, #0x200, lsl #16
  42f4c8:	cbz	x8, 42f540 <argp_failure@@Base+0xa54>
  42f4cc:	cbz	x26, 42f4e0 <argp_failure@@Base+0x9f4>
  42f4d0:	mov	x0, x28
  42f4d4:	mov	x1, x26
  42f4d8:	bl	404a50 <strndup@plt>
  42f4dc:	mov	x28, x0
  42f4e0:	mov	x0, x24
  42f4e4:	mov	x1, x23
  42f4e8:	bl	431318 <argp_parse@@Base+0x7c8>
  42f4ec:	ldr	x8, [x24, #40]
  42f4f0:	cmp	w22, #0x0
  42f4f4:	mov	x2, x0
  42f4f8:	cinc	w0, w25, ne  // ne = any
  42f4fc:	mov	x1, x28
  42f500:	str	x2, [sp]
  42f504:	blr	x8
  42f508:	mov	x25, x0
  42f50c:	cbz	x25, 42f54c <argp_failure@@Base+0xa60>
  42f510:	cbz	w21, 42f520 <argp_failure@@Base+0xa34>
  42f514:	mov	w1, #0xa                   	// #10
  42f518:	mov	x0, x19
  42f51c:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42f520:	cbz	x26, 42f55c <argp_failure@@Base+0xa70>
  42f524:	cmp	x25, x28
  42f528:	b.ne	42f55c <argp_failure@@Base+0xa70>  // b.any
  42f52c:	mov	x0, x19
  42f530:	mov	x1, x28
  42f534:	mov	x2, x26
  42f538:	bl	44bc38 <_obstack_memory_used@@Base+0xd9d8>
  42f53c:	b	42f568 <argp_failure@@Base+0xa7c>
  42f540:	str	xzr, [sp]
  42f544:	mov	x25, x28
  42f548:	cbnz	x25, 42f510 <argp_failure@@Base+0xa24>
  42f54c:	mov	w27, wzr
  42f550:	cmp	x25, x28
  42f554:	b.ne	42f594 <argp_failure@@Base+0xaa8>  // b.any
  42f558:	b	42f5a0 <argp_failure@@Base+0xab4>
  42f55c:	mov	x0, x19
  42f560:	mov	x1, x25
  42f564:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  42f568:	mov	x0, x19
  42f56c:	bl	44be20 <_obstack_memory_used@@Base+0xdbc0>
  42f570:	ldr	x8, [x19, #8]
  42f574:	cmp	x0, x8
  42f578:	b.ls	42f588 <argp_failure@@Base+0xa9c>  // b.plast
  42f57c:	mov	w1, #0xa                   	// #10
  42f580:	mov	x0, x19
  42f584:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42f588:	mov	w27, #0x1                   	// #1
  42f58c:	cmp	x25, x28
  42f590:	b.eq	42f5a0 <argp_failure@@Base+0xab4>  // b.none
  42f594:	cbz	x25, 42f5a0 <argp_failure@@Base+0xab4>
  42f598:	mov	x0, x25
  42f59c:	bl	4049d0 <free@plt>
  42f5a0:	cbz	x26, 42f5b8 <argp_failure@@Base+0xacc>
  42f5a4:	cbz	x28, 42f5b8 <argp_failure@@Base+0xacc>
  42f5a8:	ldr	x8, [x24, #40]
  42f5ac:	cbz	x8, 42f5b8 <argp_failure@@Base+0xacc>
  42f5b0:	mov	x0, x28
  42f5b4:	bl	4049d0 <free@plt>
  42f5b8:	cbz	w22, 42f630 <argp_failure@@Base+0xb44>
  42f5bc:	ldr	x8, [x24, #40]
  42f5c0:	cbz	x8, 42f630 <argp_failure@@Base+0xb44>
  42f5c4:	ldr	x2, [sp]
  42f5c8:	mov	w9, #0x1                   	// #1
  42f5cc:	movk	w9, #0x200, lsl #16
  42f5d0:	add	w0, w9, #0x3
  42f5d4:	mov	x1, xzr
  42f5d8:	blr	x8
  42f5dc:	cbz	x0, 42f630 <argp_failure@@Base+0xb44>
  42f5e0:	mov	x24, x0
  42f5e4:	orr	w8, w27, w21
  42f5e8:	cbz	w8, 42f5f8 <argp_failure@@Base+0xb0c>
  42f5ec:	mov	w1, #0xa                   	// #10
  42f5f0:	mov	x0, x19
  42f5f4:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42f5f8:	mov	x0, x19
  42f5fc:	mov	x1, x24
  42f600:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  42f604:	mov	x0, x24
  42f608:	bl	4049d0 <free@plt>
  42f60c:	mov	x0, x19
  42f610:	bl	44be20 <_obstack_memory_used@@Base+0xdbc0>
  42f614:	ldr	x8, [x19, #8]
  42f618:	cmp	x0, x8
  42f61c:	b.ls	42f62c <argp_failure@@Base+0xb40>  // b.plast
  42f620:	mov	w1, #0xa                   	// #10
  42f624:	mov	x0, x19
  42f628:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42f62c:	mov	w27, #0x1                   	// #1
  42f630:	ldr	x9, [sp, #8]
  42f634:	cbz	x9, 42f680 <argp_failure@@Base+0xb94>
  42f638:	ldr	x8, [x9]
  42f63c:	cbz	x8, 42f680 <argp_failure@@Base+0xb94>
  42f640:	add	x24, x9, #0x20
  42f644:	b	42f678 <argp_failure@@Base+0xb8c>
  42f648:	orr	w9, w27, w21
  42f64c:	cmp	w9, #0x0
  42f650:	cset	w3, ne  // ne = any
  42f654:	mov	x0, x8
  42f658:	mov	x1, x23
  42f65c:	mov	w2, w22
  42f660:	mov	w4, w20
  42f664:	mov	x5, x19
  42f668:	bl	42f42c <argp_failure@@Base+0x940>
  42f66c:	ldr	x8, [x24], #32
  42f670:	orr	w27, w0, w27
  42f674:	cbz	x8, 42f680 <argp_failure@@Base+0xb94>
  42f678:	cbz	w20, 42f648 <argp_failure@@Base+0xb5c>
  42f67c:	cbz	w27, 42f648 <argp_failure@@Base+0xb5c>
  42f680:	mov	w0, w27
  42f684:	ldp	x20, x19, [sp, #96]
  42f688:	ldp	x22, x21, [sp, #80]
  42f68c:	ldp	x24, x23, [sp, #64]
  42f690:	ldp	x26, x25, [sp, #48]
  42f694:	ldp	x28, x27, [sp, #32]
  42f698:	ldp	x29, x30, [sp, #16]
  42f69c:	add	sp, sp, #0x70
  42f6a0:	ret
  42f6a4:	sub	sp, sp, #0x40
  42f6a8:	stp	x29, x30, [sp, #16]
  42f6ac:	stp	x22, x21, [sp, #32]
  42f6b0:	stp	x20, x19, [sp, #48]
  42f6b4:	stp	xzr, xzr, [sp]
  42f6b8:	ldr	w22, [x0, #8]
  42f6bc:	mov	x19, x2
  42f6c0:	mov	x20, x1
  42f6c4:	add	x29, sp, #0x10
  42f6c8:	cbz	w22, 42f6f0 <argp_failure@@Base+0xc04>
  42f6cc:	ldr	x21, [x0]
  42f6d0:	mov	x3, sp
  42f6d4:	mov	x0, x21
  42f6d8:	mov	x1, x20
  42f6dc:	mov	x2, x19
  42f6e0:	bl	4304a4 <argp_failure@@Base+0x19b8>
  42f6e4:	subs	w22, w22, #0x1
  42f6e8:	add	x21, x21, #0x38
  42f6ec:	b.ne	42f6d0 <argp_failure@@Base+0xbe4>  // b.any
  42f6f0:	ldr	w8, [sp, #12]
  42f6f4:	cbz	w8, 42f794 <argp_failure@@Base+0xca8>
  42f6f8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42f6fc:	ldr	w8, [x8, #972]
  42f700:	cbz	w8, 42f794 <argp_failure@@Base+0xca8>
  42f704:	cbz	x20, 42f714 <argp_failure@@Base+0xc28>
  42f708:	ldr	x8, [x20]
  42f70c:	ldr	x0, [x8, #48]
  42f710:	b	42f718 <argp_failure@@Base+0xc2c>
  42f714:	mov	x0, xzr
  42f718:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42f71c:	add	x1, x1, #0x797
  42f720:	mov	w2, #0x5                   	// #5
  42f724:	bl	404bf0 <dcgettext@plt>
  42f728:	mov	x21, x0
  42f72c:	cbz	x20, 42f738 <argp_failure@@Base+0xc4c>
  42f730:	ldr	x2, [x20]
  42f734:	b	42f73c <argp_failure@@Base+0xc50>
  42f738:	mov	x2, xzr
  42f73c:	mov	w1, #0x5                   	// #5
  42f740:	movk	w1, #0x200, lsl #16
  42f744:	mov	x0, x21
  42f748:	mov	x3, x20
  42f74c:	bl	430444 <argp_failure@@Base+0x1958>
  42f750:	cbz	x0, 42f794 <argp_failure@@Base+0xca8>
  42f754:	ldrb	w8, [x0]
  42f758:	mov	x20, x0
  42f75c:	cbz	w8, 42f784 <argp_failure@@Base+0xc98>
  42f760:	mov	w1, #0xa                   	// #10
  42f764:	mov	x0, x19
  42f768:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42f76c:	mov	x0, x19
  42f770:	mov	x1, x20
  42f774:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  42f778:	mov	w1, #0xa                   	// #10
  42f77c:	mov	x0, x19
  42f780:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  42f784:	cmp	x20, x21
  42f788:	b.eq	42f794 <argp_failure@@Base+0xca8>  // b.none
  42f78c:	mov	x0, x20
  42f790:	bl	4049d0 <free@plt>
  42f794:	ldp	x20, x19, [sp, #48]
  42f798:	ldp	x22, x21, [sp, #32]
  42f79c:	ldp	x29, x30, [sp, #16]
  42f7a0:	add	sp, sp, #0x40
  42f7a4:	ret
  42f7a8:	stp	x29, x30, [sp, #-32]!
  42f7ac:	stp	x20, x19, [sp, #16]
  42f7b0:	mov	x19, x0
  42f7b4:	ldr	x0, [x0, #24]
  42f7b8:	mov	x29, sp
  42f7bc:	cbz	x0, 42f7d0 <argp_failure@@Base+0xce4>
  42f7c0:	ldr	x20, [x0, #40]
  42f7c4:	bl	4049d0 <free@plt>
  42f7c8:	mov	x0, x20
  42f7cc:	cbnz	x20, 42f7c0 <argp_failure@@Base+0xcd4>
  42f7d0:	ldr	w8, [x19, #8]
  42f7d4:	cbz	w8, 42f7e8 <argp_failure@@Base+0xcfc>
  42f7d8:	ldr	x0, [x19]
  42f7dc:	bl	4049d0 <free@plt>
  42f7e0:	ldr	x0, [x19, #16]
  42f7e4:	bl	4049d0 <free@plt>
  42f7e8:	mov	x0, x19
  42f7ec:	bl	4049d0 <free@plt>
  42f7f0:	ldp	x20, x19, [sp, #16]
  42f7f4:	ldp	x29, x30, [sp], #32
  42f7f8:	ret
  42f7fc:	stp	x29, x30, [sp, #-32]!
  42f800:	stp	x20, x19, [sp, #16]
  42f804:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x18da0>
  42f808:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  42f80c:	mov	x20, x0
  42f810:	add	x19, x19, #0x81e
  42f814:	add	x8, x8, #0x8ae
  42f818:	mov	x29, sp
  42f81c:	b	42f82c <argp_failure@@Base+0xd40>
  42f820:	add	x19, x19, #0x10
  42f824:	cmp	x19, x8
  42f828:	b.cs	42f88c <argp_failure@@Base+0xda0>  // b.hs, b.nlast
  42f82c:	ldrb	w9, [x19, #14]
  42f830:	cbnz	w9, 42f820 <argp_failure@@Base+0xd34>
  42f834:	ldrb	w9, [x19, #15]
  42f838:	cmp	x9, #0x20
  42f83c:	b.eq	42f820 <argp_failure@@Base+0xd34>  // b.none
  42f840:	ldr	w9, [x1, x9]
  42f844:	ldr	w10, [x1, #32]
  42f848:	cmp	w9, w10
  42f84c:	b.lt	42f820 <argp_failure@@Base+0xd34>  // b.tstop
  42f850:	ldr	x8, [x20]
  42f854:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42f858:	add	x1, x1, #0x658
  42f85c:	mov	w2, #0x5                   	// #5
  42f860:	ldr	x0, [x8, #48]
  42f864:	bl	404bf0 <dcgettext@plt>
  42f868:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x18da0>
  42f86c:	mov	x3, x0
  42f870:	add	x4, x4, #0x68c
  42f874:	mov	x0, x20
  42f878:	mov	w1, wzr
  42f87c:	mov	w2, wzr
  42f880:	mov	x5, x19
  42f884:	bl	42eaec <argp_failure@@Base>
  42f888:	b	42f8ac <argp_failure@@Base+0xdc0>
  42f88c:	ldr	x8, [x1, #32]
  42f890:	ldp	q0, q1, [x1]
  42f894:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  42f898:	add	x9, x9, #0x3c8
  42f89c:	mov	w10, #0x1                   	// #1
  42f8a0:	str	x8, [x9, #32]
  42f8a4:	stp	q0, q1, [x9]
  42f8a8:	str	w10, [x9, #36]
  42f8ac:	ldp	x20, x19, [sp, #16]
  42f8b0:	ldp	x29, x30, [sp], #32
  42f8b4:	ret
  42f8b8:	stp	x29, x30, [sp, #-80]!
  42f8bc:	stp	x26, x25, [sp, #16]
  42f8c0:	stp	x24, x23, [sp, #32]
  42f8c4:	stp	x22, x21, [sp, #48]
  42f8c8:	stp	x20, x19, [sp, #64]
  42f8cc:	ldr	x22, [x0]
  42f8d0:	mov	x20, x0
  42f8d4:	mov	w0, #0x20                  	// #32
  42f8d8:	mov	x29, sp
  42f8dc:	mov	x21, x1
  42f8e0:	bl	4044f0 <malloc@plt>
  42f8e4:	cbz	x0, 42fa84 <argp_failure@@Base+0xf98>
  42f8e8:	mov	x19, x0
  42f8ec:	str	wzr, [x0, #8]
  42f8f0:	str	xzr, [x0, #24]
  42f8f4:	cbz	x22, 42f99c <argp_failure@@Base+0xeb0>
  42f8f8:	ldrb	w8, [x22, #24]
  42f8fc:	tbnz	w8, #2, 42faa4 <argp_failure@@Base+0xfb8>
  42f900:	mov	x0, x22
  42f904:	bl	431c64 <argp_usage@@Base+0x68>
  42f908:	cbz	w0, 42f914 <argp_failure@@Base+0xe28>
  42f90c:	mov	w23, #0x1                   	// #1
  42f910:	b	42f95c <argp_failure@@Base+0xe70>
  42f914:	mov	w24, wzr
  42f918:	mov	x23, x22
  42f91c:	b	42f940 <argp_failure@@Base+0xe54>
  42f920:	mov	x0, x23
  42f924:	bl	431c1c <argp_usage@@Base+0x20>
  42f928:	add	x23, x23, #0x30
  42f92c:	cmp	w0, #0x0
  42f930:	mov	x0, x23
  42f934:	cinc	w24, w24, ne  // ne = any
  42f938:	bl	431c64 <argp_usage@@Base+0x68>
  42f93c:	cbnz	w0, 42f958 <argp_failure@@Base+0xe6c>
  42f940:	ldrb	w8, [x23, #24]
  42f944:	tbnz	w8, #2, 42f920 <argp_failure@@Base+0xe34>
  42f948:	ldr	w8, [x19, #8]
  42f94c:	add	w8, w8, #0x1
  42f950:	str	w8, [x19, #8]
  42f954:	b	42f920 <argp_failure@@Base+0xe34>
  42f958:	add	w23, w24, #0x1
  42f95c:	ldr	w8, [x19, #8]
  42f960:	mov	w9, #0x38                  	// #56
  42f964:	mul	x0, x8, x9
  42f968:	bl	4044f0 <malloc@plt>
  42f96c:	mov	x24, x0
  42f970:	str	x0, [x19]
  42f974:	mov	x0, x23
  42f978:	bl	4044f0 <malloc@plt>
  42f97c:	str	x0, [x19, #16]
  42f980:	cbz	x0, 42fa64 <argp_failure@@Base+0xf78>
  42f984:	cbz	x24, 42fa64 <argp_failure@@Base+0xf78>
  42f988:	mov	x23, x0
  42f98c:	mov	x0, x22
  42f990:	bl	431c64 <argp_usage@@Base+0x68>
  42f994:	cbz	w0, 42f9b8 <argp_failure@@Base+0xecc>
  42f998:	strb	wzr, [x23]
  42f99c:	mov	x0, x19
  42f9a0:	ldp	x20, x19, [sp, #64]
  42f9a4:	ldp	x22, x21, [sp, #48]
  42f9a8:	ldp	x24, x23, [sp, #32]
  42f9ac:	ldp	x26, x25, [sp, #16]
  42f9b0:	ldp	x29, x30, [sp], #80
  42f9b4:	ret
  42f9b8:	mov	w8, wzr
  42f9bc:	b	42f9d8 <argp_failure@@Base+0xeec>
  42f9c0:	mov	x0, x25
  42f9c4:	add	x24, x24, #0x38
  42f9c8:	bl	431c64 <argp_usage@@Base+0x68>
  42f9cc:	mov	w8, w26
  42f9d0:	mov	x22, x25
  42f9d4:	cbnz	w0, 42f998 <argp_failure@@Base+0xeac>
  42f9d8:	str	x22, [x24]
  42f9dc:	str	wzr, [x24, #8]
  42f9e0:	str	x23, [x24, #16]
  42f9e4:	ldr	w26, [x22, #40]
  42f9e8:	cbnz	w26, 42fa08 <argp_failure@@Base+0xf1c>
  42f9ec:	ldr	x9, [x22]
  42f9f0:	cbz	x9, 42f9fc <argp_failure@@Base+0xf10>
  42f9f4:	mov	w26, w8
  42f9f8:	b	42fa08 <argp_failure@@Base+0xf1c>
  42f9fc:	ldr	w9, [x22, #8]
  42fa00:	cmp	w9, #0x0
  42fa04:	cinc	w26, w8, eq  // eq = none
  42fa08:	str	w26, [x24, #24]
  42fa0c:	stp	x21, x20, [x24, #32]
  42fa10:	ldr	w8, [x24, #8]
  42fa14:	mov	x0, x22
  42fa18:	add	w8, w8, #0x1
  42fa1c:	str	w8, [x24, #8]
  42fa20:	bl	431c1c <argp_usage@@Base+0x20>
  42fa24:	cbz	w0, 42fa44 <argp_failure@@Base+0xf58>
  42fa28:	ldr	w25, [x22, #8]
  42fa2c:	ldr	x1, [x19, #16]
  42fa30:	mov	x2, x23
  42fa34:	mov	w0, w25
  42fa38:	bl	42fd74 <argp_failure@@Base+0x1288>
  42fa3c:	cbnz	w0, 42fa44 <argp_failure@@Base+0xf58>
  42fa40:	strb	w25, [x23], #1
  42fa44:	add	x25, x22, #0x30
  42fa48:	mov	x0, x25
  42fa4c:	bl	431c64 <argp_usage@@Base+0x68>
  42fa50:	cbnz	w0, 42f9c0 <argp_failure@@Base+0xed4>
  42fa54:	ldrb	w8, [x22, #72]
  42fa58:	mov	x22, x25
  42fa5c:	tbnz	w8, #2, 42fa10 <argp_failure@@Base+0xf24>
  42fa60:	b	42f9c0 <argp_failure@@Base+0xed4>
  42fa64:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fa68:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fa6c:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fa70:	add	x0, x0, #0x6f4
  42fa74:	add	x1, x1, #0x698
  42fa78:	add	x3, x3, #0x6a4
  42fa7c:	mov	w2, #0x1d1                 	// #465
  42fa80:	bl	404cf0 <__assert_fail@plt>
  42fa84:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fa88:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fa8c:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fa90:	add	x0, x0, #0x694
  42fa94:	add	x1, x1, #0x698
  42fa98:	add	x3, x3, #0x6a4
  42fa9c:	mov	w2, #0x1b9                 	// #441
  42faa0:	bl	404cf0 <__assert_fail@plt>
  42faa4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42faa8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42faac:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fab0:	add	x0, x0, #0x6e4
  42fab4:	add	x1, x1, #0x698
  42fab8:	add	x3, x3, #0x6a4
  42fabc:	mov	w2, #0x1c3                 	// #451
  42fac0:	bl	404cf0 <__assert_fail@plt>
  42fac4:	stp	x29, x30, [sp, #-64]!
  42fac8:	stp	x20, x19, [sp, #48]
  42facc:	mov	x19, x0
  42fad0:	mov	w0, #0x30                  	// #48
  42fad4:	stp	x24, x23, [sp, #16]
  42fad8:	stp	x22, x21, [sp, #32]
  42fadc:	mov	x29, sp
  42fae0:	mov	x21, x5
  42fae4:	mov	x20, x4
  42fae8:	mov	w22, w3
  42faec:	mov	x23, x2
  42faf0:	mov	w24, w1
  42faf4:	bl	4044f0 <malloc@plt>
  42faf8:	cbz	x0, 42fb2c <argp_failure@@Base+0x1040>
  42fafc:	str	x23, [x0]
  42fb00:	stp	w22, w24, [x0, #8]
  42fb04:	stp	x20, x21, [x0, #16]
  42fb08:	cbz	x20, 42fb18 <argp_failure@@Base+0x102c>
  42fb0c:	ldr	w8, [x20, #32]
  42fb10:	add	w8, w8, #0x1
  42fb14:	b	42fb1c <argp_failure@@Base+0x1030>
  42fb18:	mov	w8, wzr
  42fb1c:	str	w8, [x0, #32]
  42fb20:	ldr	x8, [x19, #24]
  42fb24:	str	x8, [x0, #40]
  42fb28:	str	x0, [x19, #24]
  42fb2c:	ldp	x20, x19, [sp, #48]
  42fb30:	ldp	x22, x21, [sp, #32]
  42fb34:	ldp	x24, x23, [sp, #16]
  42fb38:	ldp	x29, x30, [sp], #64
  42fb3c:	ret
  42fb40:	sub	sp, sp, #0x80
  42fb44:	stp	x24, x23, [sp, #80]
  42fb48:	stp	x20, x19, [sp, #112]
  42fb4c:	mov	x19, x1
  42fb50:	mov	x24, x0
  42fb54:	add	x9, x0, #0x18
  42fb58:	stp	x29, x30, [sp, #32]
  42fb5c:	stp	x28, x27, [sp, #48]
  42fb60:	stp	x26, x25, [sp, #64]
  42fb64:	stp	x22, x21, [sp, #96]
  42fb68:	add	x29, sp, #0x20
  42fb6c:	ldr	x10, [x9]
  42fb70:	mov	x8, x9
  42fb74:	add	x9, x10, #0x28
  42fb78:	cbnz	x10, 42fb6c <argp_failure@@Base+0x1080>
  42fb7c:	ldr	x9, [x19, #24]
  42fb80:	str	x9, [x8]
  42fb84:	ldr	w8, [x19, #8]
  42fb88:	str	xzr, [x19, #24]
  42fb8c:	cbz	w8, 42fd2c <argp_failure@@Base+0x1240>
  42fb90:	ldr	w20, [x24, #8]
  42fb94:	cbz	w20, 42fc5c <argp_failure@@Base+0x1170>
  42fb98:	add	w25, w20, w8
  42fb9c:	mov	w8, #0x38                  	// #56
  42fba0:	umull	x0, w25, w8
  42fba4:	bl	4044f0 <malloc@plt>
  42fba8:	ldr	x8, [x24, #16]
  42fbac:	mov	x26, x0
  42fbb0:	mov	x0, x8
  42fbb4:	bl	404190 <strlen@plt>
  42fbb8:	ldr	x8, [x19, #16]
  42fbbc:	and	x23, x0, #0xffffffff
  42fbc0:	mov	x0, x8
  42fbc4:	bl	404190 <strlen@plt>
  42fbc8:	add	x8, x23, x0
  42fbcc:	add	x0, x8, #0x1
  42fbd0:	bl	4044f0 <malloc@plt>
  42fbd4:	cbz	x26, 42fd54 <argp_failure@@Base+0x1268>
  42fbd8:	mov	x22, x0
  42fbdc:	cbz	x0, 42fd54 <argp_failure@@Base+0x1268>
  42fbe0:	ldr	x1, [x24]
  42fbe4:	mov	w21, #0x38                  	// #56
  42fbe8:	mul	x2, x20, x21
  42fbec:	mov	x3, #0xffffffffffffffff    	// #-1
  42fbf0:	mov	x0, x26
  42fbf4:	bl	404ba0 <__mempcpy_chk@plt>
  42fbf8:	ldr	w8, [x19, #8]
  42fbfc:	ldr	x1, [x19]
  42fc00:	mov	x3, #0xffffffffffffffff    	// #-1
  42fc04:	mul	x2, x8, x21
  42fc08:	bl	404ba0 <__mempcpy_chk@plt>
  42fc0c:	ldr	x1, [x24, #16]
  42fc10:	mov	x3, #0xffffffffffffffff    	// #-1
  42fc14:	mov	x0, x22
  42fc18:	mov	x2, x23
  42fc1c:	bl	404ba0 <__mempcpy_chk@plt>
  42fc20:	ldr	w8, [x24, #8]
  42fc24:	stur	x24, [x29, #-8]
  42fc28:	stur	w25, [x29, #-12]
  42fc2c:	str	x26, [sp, #8]
  42fc30:	cbz	w8, 42fc78 <argp_failure@@Base+0x118c>
  42fc34:	ldr	x9, [x24, #16]
  42fc38:	mov	x27, x26
  42fc3c:	ldr	x10, [x27, #16]
  42fc40:	subs	w8, w8, #0x1
  42fc44:	sub	x10, x10, x9
  42fc48:	add	x10, x22, x10
  42fc4c:	str	x10, [x27, #16]
  42fc50:	add	x27, x27, #0x38
  42fc54:	b.ne	42fc3c <argp_failure@@Base+0x1150>  // b.any
  42fc58:	b	42fc7c <argp_failure@@Base+0x1190>
  42fc5c:	str	w8, [x24, #8]
  42fc60:	ldr	x8, [x19]
  42fc64:	str	x8, [x24]
  42fc68:	ldr	x8, [x19, #16]
  42fc6c:	str	x8, [x24, #16]
  42fc70:	str	wzr, [x19, #8]
  42fc74:	b	42fd2c <argp_failure@@Base+0x1240>
  42fc78:	mov	x27, x26
  42fc7c:	ldr	w28, [x19, #8]
  42fc80:	add	x23, x22, x23
  42fc84:	cbz	w28, 42fcfc <argp_failure@@Base+0x1210>
  42fc88:	ldr	x21, [x19, #16]
  42fc8c:	mov	x26, x23
  42fc90:	b	42fca0 <argp_failure@@Base+0x11b4>
  42fc94:	subs	w28, w28, #0x1
  42fc98:	add	x27, x27, #0x38
  42fc9c:	b.eq	42fd00 <argp_failure@@Base+0x1214>  // b.none
  42fca0:	ldr	w20, [x27, #8]
  42fca4:	str	x26, [x27, #16]
  42fca8:	cbz	w20, 42fc94 <argp_failure@@Base+0x11a8>
  42fcac:	ldr	x24, [x27]
  42fcb0:	b	42fcc4 <argp_failure@@Base+0x11d8>
  42fcb4:	add	x21, x21, #0x1
  42fcb8:	subs	w20, w20, #0x1
  42fcbc:	add	x24, x24, #0x30
  42fcc0:	b.eq	42fc94 <argp_failure@@Base+0x11a8>  // b.none
  42fcc4:	ldrb	w25, [x21]
  42fcc8:	mov	x0, x24
  42fccc:	bl	431c1c <argp_usage@@Base+0x20>
  42fcd0:	cbz	w0, 42fcb8 <argp_failure@@Base+0x11cc>
  42fcd4:	ldr	w8, [x24, #8]
  42fcd8:	cmp	w8, w25
  42fcdc:	b.ne	42fcb8 <argp_failure@@Base+0x11cc>  // b.any
  42fce0:	mov	w0, w25
  42fce4:	mov	x1, x22
  42fce8:	mov	x2, x23
  42fcec:	bl	42fd74 <argp_failure@@Base+0x1288>
  42fcf0:	cbnz	w0, 42fcb4 <argp_failure@@Base+0x11c8>
  42fcf4:	strb	w25, [x26], #1
  42fcf8:	b	42fcb4 <argp_failure@@Base+0x11c8>
  42fcfc:	mov	x26, x23
  42fd00:	ldur	x20, [x29, #-8]
  42fd04:	strb	wzr, [x26]
  42fd08:	ldr	x0, [x20]
  42fd0c:	bl	4049d0 <free@plt>
  42fd10:	ldr	x0, [x20, #16]
  42fd14:	bl	4049d0 <free@plt>
  42fd18:	ldr	x8, [sp, #8]
  42fd1c:	str	x22, [x20, #16]
  42fd20:	str	x8, [x20]
  42fd24:	ldur	w8, [x29, #-12]
  42fd28:	str	w8, [x20, #8]
  42fd2c:	mov	x0, x19
  42fd30:	bl	42f7a8 <argp_failure@@Base+0xcbc>
  42fd34:	ldp	x20, x19, [sp, #112]
  42fd38:	ldp	x22, x21, [sp, #96]
  42fd3c:	ldp	x24, x23, [sp, #80]
  42fd40:	ldp	x26, x25, [sp, #64]
  42fd44:	ldp	x28, x27, [sp, #48]
  42fd48:	ldp	x29, x30, [sp, #32]
  42fd4c:	add	sp, sp, #0x80
  42fd50:	ret
  42fd54:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fd58:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fd5c:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  42fd60:	add	x0, x0, #0x717
  42fd64:	add	x1, x1, #0x698
  42fd68:	add	x3, x3, #0x730
  42fd6c:	mov	w2, #0x366                 	// #870
  42fd70:	bl	404cf0 <__assert_fail@plt>
  42fd74:	cmp	x1, x2
  42fd78:	b.cs	42fd90 <argp_failure@@Base+0x12a4>  // b.hs, b.nlast
  42fd7c:	ldrb	w8, [x1], #1
  42fd80:	cmp	w8, w0, uxtb
  42fd84:	b.eq	42fd98 <argp_failure@@Base+0x12ac>  // b.none
  42fd88:	cmp	x2, x1
  42fd8c:	b.ne	42fd7c <argp_failure@@Base+0x1290>  // b.any
  42fd90:	mov	w0, wzr
  42fd94:	ret
  42fd98:	mov	w0, #0x1                   	// #1
  42fd9c:	ret
  42fda0:	stp	x29, x30, [sp, #-64]!
  42fda4:	stp	x24, x23, [sp, #16]
  42fda8:	stp	x22, x21, [sp, #32]
  42fdac:	stp	x20, x19, [sp, #48]
  42fdb0:	ldr	x21, [x0]
  42fdb4:	ldr	w22, [x0, #8]
  42fdb8:	mov	x19, x1
  42fdbc:	mov	x29, sp
  42fdc0:	b	42fdd0 <argp_failure@@Base+0x12e4>
  42fdc4:	add	x21, x21, #0x38
  42fdc8:	mov	w8, #0x1                   	// #1
  42fdcc:	tbz	w8, #0, 42fe24 <argp_failure@@Base+0x1338>
  42fdd0:	cbz	w22, 42fe20 <argp_failure@@Base+0x1334>
  42fdd4:	ldr	w23, [x21, #8]
  42fdd8:	sub	w22, w22, #0x1
  42fddc:	cbz	w23, 42fdc4 <argp_failure@@Base+0x12d8>
  42fde0:	ldr	x24, [x21]
  42fde4:	b	42fdf4 <argp_failure@@Base+0x1308>
  42fde8:	sub	w23, w23, #0x1
  42fdec:	add	x24, x24, #0x30
  42fdf0:	cbz	w23, 42fdc4 <argp_failure@@Base+0x12d8>
  42fdf4:	ldr	x0, [x24]
  42fdf8:	cbz	x0, 42fde8 <argp_failure@@Base+0x12fc>
  42fdfc:	ldrb	w8, [x24, #24]
  42fe00:	tbnz	w8, #1, 42fde8 <argp_failure@@Base+0x12fc>
  42fe04:	mov	x1, x19
  42fe08:	bl	404920 <strcmp@plt>
  42fe0c:	cbnz	w0, 42fde8 <argp_failure@@Base+0x12fc>
  42fe10:	mov	w8, wzr
  42fe14:	mov	x20, x21
  42fe18:	tbnz	w8, #0, 42fdd0 <argp_failure@@Base+0x12e4>
  42fe1c:	b	42fe24 <argp_failure@@Base+0x1338>
  42fe20:	mov	x20, xzr
  42fe24:	mov	x0, x20
  42fe28:	ldp	x20, x19, [sp, #48]
  42fe2c:	ldp	x22, x21, [sp, #32]
  42fe30:	ldp	x24, x23, [sp, #16]
  42fe34:	ldp	x29, x30, [sp], #64
  42fe38:	ret
  42fe3c:	stp	x29, x30, [sp, #-16]!
  42fe40:	mov	x29, sp
  42fe44:	bl	42fe50 <argp_failure@@Base+0x1364>
  42fe48:	ldp	x29, x30, [sp], #16
  42fe4c:	ret
  42fe50:	sub	sp, sp, #0x60
  42fe54:	stp	x29, x30, [sp, #16]
  42fe58:	stp	x24, x23, [sp, #48]
  42fe5c:	stp	x22, x21, [sp, #64]
  42fe60:	stp	x20, x19, [sp, #80]
  42fe64:	mov	x21, x1
  42fe68:	mov	x22, x0
  42fe6c:	ldr	x0, [x0, #32]
  42fe70:	ldr	x1, [x1, #32]
  42fe74:	ldr	w20, [x22, #24]
  42fe78:	ldr	w19, [x21, #24]
  42fe7c:	str	x25, [sp, #32]
  42fe80:	cmp	x0, x1
  42fe84:	add	x29, sp, #0x10
  42fe88:	b.eq	42fe9c <argp_failure@@Base+0x13b0>  // b.none
  42fe8c:	cbz	x0, 42ff50 <argp_failure@@Base+0x1464>
  42fe90:	cbz	x1, 42ff78 <argp_failure@@Base+0x148c>
  42fe94:	bl	43003c <argp_failure@@Base+0x1550>
  42fe98:	b	42ff8c <argp_failure@@Base+0x14a0>
  42fe9c:	cmp	w20, w19
  42fea0:	b.ne	42ff68 <argp_failure@@Base+0x147c>  // b.any
  42fea4:	mov	x0, x22
  42fea8:	bl	4300ac <argp_failure@@Base+0x15c0>
  42feac:	mov	w19, w0
  42feb0:	mov	x0, x21
  42feb4:	bl	4300ac <argp_failure@@Base+0x15c0>
  42feb8:	ldr	x8, [x22]
  42febc:	ldr	x9, [x21]
  42fec0:	mov	w20, w0
  42fec4:	mov	x0, x22
  42fec8:	ldr	w25, [x8, #24]
  42fecc:	ldr	w24, [x9, #24]
  42fed0:	bl	4300d4 <argp_failure@@Base+0x15e8>
  42fed4:	mov	x22, x0
  42fed8:	str	x0, [x29, #24]
  42fedc:	mov	x0, x21
  42fee0:	bl	4300d4 <argp_failure@@Base+0x15e8>
  42fee4:	mov	x21, x0
  42fee8:	mov	w23, wzr
  42feec:	str	x0, [sp, #8]
  42fef0:	tbz	w25, #3, 42ff08 <argp_failure@@Base+0x141c>
  42fef4:	cbz	x22, 42ff08 <argp_failure@@Base+0x141c>
  42fef8:	add	x0, x29, #0x18
  42fefc:	bl	43010c <argp_failure@@Base+0x1620>
  42ff00:	cmp	w0, #0x0
  42ff04:	cset	w23, ne  // ne = any
  42ff08:	mov	w8, wzr
  42ff0c:	tbz	w24, #3, 42ff24 <argp_failure@@Base+0x1438>
  42ff10:	cbz	x21, 42ff24 <argp_failure@@Base+0x1438>
  42ff14:	add	x0, sp, #0x8
  42ff18:	bl	43010c <argp_failure@@Base+0x1620>
  42ff1c:	cmp	w0, #0x0
  42ff20:	cset	w8, ne  // ne = any
  42ff24:	subs	w0, w23, w8
  42ff28:	b.ne	42ff8c <argp_failure@@Base+0x14a0>  // b.any
  42ff2c:	ldr	x0, [x29, #24]
  42ff30:	ldr	x1, [sp, #8]
  42ff34:	orr	w8, w20, w19
  42ff38:	tst	w8, #0xff
  42ff3c:	b.ne	42ffa8 <argp_failure@@Base+0x14bc>  // b.any
  42ff40:	cbz	x0, 42ffa8 <argp_failure@@Base+0x14bc>
  42ff44:	cbz	x1, 42ffa8 <argp_failure@@Base+0x14bc>
  42ff48:	bl	404700 <strcasecmp@plt>
  42ff4c:	b	42ff8c <argp_failure@@Base+0x14a0>
  42ff50:	mov	x0, x1
  42ff54:	bl	430028 <argp_failure@@Base+0x153c>
  42ff58:	ldr	w1, [x0, #12]
  42ff5c:	mov	w2, #0xffffffff            	// #-1
  42ff60:	mov	w0, w20
  42ff64:	b	42ff88 <argp_failure@@Base+0x149c>
  42ff68:	mov	w0, w20
  42ff6c:	mov	w1, w19
  42ff70:	mov	w2, wzr
  42ff74:	b	42ff88 <argp_failure@@Base+0x149c>
  42ff78:	bl	430028 <argp_failure@@Base+0x153c>
  42ff7c:	ldr	w0, [x0, #12]
  42ff80:	mov	w2, #0x1                   	// #1
  42ff84:	mov	w1, w19
  42ff88:	bl	42fffc <argp_failure@@Base+0x1510>
  42ff8c:	ldp	x20, x19, [sp, #80]
  42ff90:	ldp	x22, x21, [sp, #64]
  42ff94:	ldp	x24, x23, [sp, #48]
  42ff98:	ldr	x25, [sp, #32]
  42ff9c:	ldp	x29, x30, [sp, #16]
  42ffa0:	add	sp, sp, #0x60
  42ffa4:	ret
  42ffa8:	tst	w19, #0xff
  42ffac:	b.ne	42ffb8 <argp_failure@@Base+0x14cc>  // b.any
  42ffb0:	cbz	x0, 42ffb8 <argp_failure@@Base+0x14cc>
  42ffb4:	ldrb	w19, [x0]
  42ffb8:	tst	w20, #0xff
  42ffbc:	b.ne	42ffd0 <argp_failure@@Base+0x14e4>  // b.any
  42ffc0:	cbz	x1, 42ffcc <argp_failure@@Base+0x14e0>
  42ffc4:	ldrb	w20, [x1]
  42ffc8:	b	42ffd0 <argp_failure@@Base+0x14e4>
  42ffcc:	mov	w20, wzr
  42ffd0:	bl	4043b0 <__ctype_tolower_loc@plt>
  42ffd4:	ldr	x8, [x0]
  42ffd8:	and	x9, x19, #0xff
  42ffdc:	and	x10, x20, #0xff
  42ffe0:	ldr	w9, [x8, x9, lsl #2]
  42ffe4:	ldr	w8, [x8, x10, lsl #2]
  42ffe8:	and	w10, w20, #0xff
  42ffec:	subs	w8, w9, w8
  42fff0:	sub	w9, w10, w19, uxtb
  42fff4:	csel	w0, w9, w8, eq  // eq = none
  42fff8:	b	42ff8c <argp_failure@@Base+0x14a0>
  42fffc:	subs	w8, w0, w1
  430000:	b.eq	430018 <argp_failure@@Base+0x152c>  // b.none
  430004:	tst	w1, w0
  430008:	b.lt	430020 <argp_failure@@Base+0x1534>  // b.tstop
  43000c:	orr	w9, w1, w0
  430010:	tbz	w9, #31, 430020 <argp_failure@@Base+0x1534>
  430014:	sub	w2, w1, w0
  430018:	mov	w0, w2
  43001c:	ret
  430020:	mov	w0, w8
  430024:	ret
  430028:	mov	x8, x0
  43002c:	ldr	x0, [x0, #16]
  430030:	cbnz	x0, 430028 <argp_failure@@Base+0x153c>
  430034:	mov	x0, x8
  430038:	ret
  43003c:	stp	x29, x30, [sp, #-16]!
  430040:	ldr	w8, [x0, #32]
  430044:	ldr	w9, [x1, #32]
  430048:	mov	x29, sp
  43004c:	cmp	w8, w9
  430050:	b.le	430070 <argp_failure@@Base+0x1584>
  430054:	ldr	w9, [x1, #32]
  430058:	ldr	x0, [x0, #16]
  43005c:	ldr	w8, [x0, #32]
  430060:	cmp	w8, w9
  430064:	b.gt	430058 <argp_failure@@Base+0x156c>
  430068:	b	430070 <argp_failure@@Base+0x1584>
  43006c:	ldr	x1, [x1, #16]
  430070:	ldr	w9, [x1, #32]
  430074:	cmp	w9, w8
  430078:	b.gt	43006c <argp_failure@@Base+0x1580>
  43007c:	mov	x8, x1
  430080:	mov	x9, x0
  430084:	ldr	x0, [x0, #16]
  430088:	ldr	x1, [x1, #16]
  43008c:	cmp	x0, x1
  430090:	b.ne	43007c <argp_failure@@Base+0x1590>  // b.any
  430094:	ldp	w10, w1, [x8, #8]
  430098:	ldp	w9, w0, [x9, #8]
  43009c:	sub	w2, w10, w9
  4300a0:	bl	42fffc <argp_failure@@Base+0x1510>
  4300a4:	ldp	x29, x30, [sp], #16
  4300a8:	ret
  4300ac:	stp	x29, x30, [sp, #-16]!
  4300b0:	ldr	x8, [x0, #40]
  4300b4:	adrp	x1, 430000 <argp_failure@@Base+0x1514>
  4300b8:	add	x1, x1, #0x24c
  4300bc:	mov	x3, xzr
  4300c0:	ldr	x2, [x8, #48]
  4300c4:	mov	x29, sp
  4300c8:	bl	430190 <argp_failure@@Base+0x16a4>
  4300cc:	ldp	x29, x30, [sp], #16
  4300d0:	ret
  4300d4:	ldr	w8, [x0, #8]
  4300d8:	cbz	w8, 430104 <argp_failure@@Base+0x1618>
  4300dc:	ldr	x9, [x0]
  4300e0:	b	4300f0 <argp_failure@@Base+0x1604>
  4300e4:	subs	w8, w8, #0x1
  4300e8:	add	x9, x9, #0x30
  4300ec:	b.eq	430104 <argp_failure@@Base+0x1618>  // b.none
  4300f0:	ldr	x0, [x9]
  4300f4:	cbz	x0, 4300e4 <argp_failure@@Base+0x15f8>
  4300f8:	ldrb	w10, [x9, #24]
  4300fc:	tbnz	w10, #1, 4300e4 <argp_failure@@Base+0x15f8>
  430100:	ret
  430104:	mov	x0, xzr
  430108:	ret
  43010c:	stp	x29, x30, [sp, #-32]!
  430110:	str	x19, [sp, #16]
  430114:	mov	x29, sp
  430118:	mov	x19, x0
  43011c:	bl	404950 <__ctype_b_loc@plt>
  430120:	ldr	x9, [x19]
  430124:	ldr	x10, [x0]
  430128:	ldrb	w8, [x9]
  43012c:	ldrh	w10, [x10, x8, lsl #1]
  430130:	tbz	w10, #13, 43014c <argp_failure@@Base+0x1660>
  430134:	add	x9, x9, #0x1
  430138:	str	x9, [x19]
  43013c:	ldr	x10, [x0]
  430140:	ldrb	w8, [x9], #1
  430144:	ldrh	w10, [x10, x8, lsl #1]
  430148:	tbnz	w10, #13, 430138 <argp_failure@@Base+0x164c>
  43014c:	ldr	x9, [x19]
  430150:	cmp	w8, #0x2d
  430154:	cset	w8, ne  // ne = any
  430158:	ldrb	w10, [x9]
  43015c:	cbz	w10, 430180 <argp_failure@@Base+0x1694>
  430160:	add	x9, x9, #0x1
  430164:	ldr	x11, [x0]
  430168:	and	x10, x10, #0xff
  43016c:	ldrh	w10, [x11, x10, lsl #1]
  430170:	tbnz	w10, #3, 430180 <argp_failure@@Base+0x1694>
  430174:	str	x9, [x19]
  430178:	ldrb	w10, [x9], #1
  43017c:	cbnz	w10, 430164 <argp_failure@@Base+0x1678>
  430180:	ldr	x19, [sp, #16]
  430184:	mov	w0, w8
  430188:	ldp	x29, x30, [sp], #32
  43018c:	ret
  430190:	stp	x29, x30, [sp, #-80]!
  430194:	stp	x26, x25, [sp, #16]
  430198:	stp	x24, x23, [sp, #32]
  43019c:	stp	x22, x21, [sp, #48]
  4301a0:	stp	x20, x19, [sp, #64]
  4301a4:	ldr	w8, [x0, #8]
  4301a8:	mov	x29, sp
  4301ac:	cbz	w8, 43022c <argp_failure@@Base+0x1740>
  4301b0:	ldr	x22, [x0]
  4301b4:	ldr	x25, [x0, #16]
  4301b8:	mov	x19, x3
  4301bc:	mov	x20, x2
  4301c0:	mov	x21, x1
  4301c4:	mov	w23, wzr
  4301c8:	sub	w26, w8, #0x1
  4301cc:	mov	x24, x22
  4301d0:	mov	x0, x24
  4301d4:	bl	431c1c <argp_usage@@Base+0x20>
  4301d8:	cbz	w0, 430218 <argp_failure@@Base+0x172c>
  4301dc:	ldrb	w8, [x25]
  4301e0:	ldr	w9, [x24, #8]
  4301e4:	cmp	w9, w8
  4301e8:	b.ne	430218 <argp_failure@@Base+0x172c>  // b.any
  4301ec:	ldr	w8, [x24, #24]
  4301f0:	tst	w8, #0x4
  4301f4:	csel	x22, x24, x22, eq  // eq = none
  4301f8:	tbnz	w8, #1, 430214 <argp_failure@@Base+0x1728>
  4301fc:	mov	x0, x24
  430200:	mov	x1, x22
  430204:	mov	x2, x20
  430208:	mov	x3, x19
  43020c:	blr	x21
  430210:	mov	w23, w0
  430214:	add	x25, x25, #0x1
  430218:	subs	w26, w26, #0x1
  43021c:	b.cc	430230 <argp_failure@@Base+0x1744>  // b.lo, b.ul, b.last
  430220:	add	x24, x24, #0x30
  430224:	cbz	w23, 4301d0 <argp_failure@@Base+0x16e4>
  430228:	b	430230 <argp_failure@@Base+0x1744>
  43022c:	mov	w23, wzr
  430230:	mov	w0, w23
  430234:	ldp	x20, x19, [sp, #64]
  430238:	ldp	x22, x21, [sp, #48]
  43023c:	ldp	x24, x23, [sp, #32]
  430240:	ldp	x26, x25, [sp, #16]
  430244:	ldp	x29, x30, [sp], #80
  430248:	ret
  43024c:	stp	x29, x30, [sp, #-32]!
  430250:	str	x19, [sp, #16]
  430254:	mov	x29, sp
  430258:	mov	x19, x0
  43025c:	bl	431c1c <argp_usage@@Base+0x20>
  430260:	cbz	w0, 430268 <argp_failure@@Base+0x177c>
  430264:	ldr	w0, [x19, #8]
  430268:	ldr	x19, [sp, #16]
  43026c:	ldp	x29, x30, [sp], #32
  430270:	ret
  430274:	ldr	x8, [x0, #16]
  430278:	cbz	x8, 430284 <argp_failure@@Base+0x1798>
  43027c:	mov	w0, wzr
  430280:	ret
  430284:	ldr	x8, [x1, #16]
  430288:	cbnz	x8, 43027c <argp_failure@@Base+0x1790>
  43028c:	ldr	w8, [x0, #24]
  430290:	ldr	w9, [x1, #24]
  430294:	orr	w8, w9, w8
  430298:	tbnz	w8, #4, 43027c <argp_failure@@Base+0x1790>
  43029c:	ldr	x8, [x3]
  4302a0:	ldr	w9, [x0, #8]
  4302a4:	add	x10, x8, #0x1
  4302a8:	str	x10, [x3]
  4302ac:	strb	w9, [x8]
  4302b0:	mov	w0, wzr
  4302b4:	ret
  4302b8:	stp	x29, x30, [sp, #-48]!
  4302bc:	stp	x22, x21, [sp, #16]
  4302c0:	stp	x20, x19, [sp, #32]
  4302c4:	mov	x9, x1
  4302c8:	ldr	w10, [x0, #24]
  4302cc:	ldr	w11, [x9, #24]
  4302d0:	ldr	x1, [x0, #16]
  4302d4:	mov	x19, x3
  4302d8:	mov	x8, x2
  4302dc:	mov	x20, x0
  4302e0:	orr	w22, w11, w10
  4302e4:	mov	x29, sp
  4302e8:	cbnz	x1, 4302f0 <argp_failure@@Base+0x1804>
  4302ec:	ldr	x1, [x9, #16]
  4302f0:	tbnz	w22, #4, 430344 <argp_failure@@Base+0x1858>
  4302f4:	cbz	x1, 430344 <argp_failure@@Base+0x1858>
  4302f8:	mov	w2, #0x5                   	// #5
  4302fc:	mov	x0, x8
  430300:	bl	404bf0 <dcgettext@plt>
  430304:	mov	x21, x0
  430308:	tbnz	w22, #0, 43032c <argp_failure@@Base+0x1840>
  43030c:	mov	x0, x21
  430310:	bl	404190 <strlen@plt>
  430314:	add	x1, x0, #0x6
  430318:	mov	x0, x19
  43031c:	bl	430400 <argp_failure@@Base+0x1914>
  430320:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  430324:	add	x1, x1, #0x76e
  430328:	b	430334 <argp_failure@@Base+0x1848>
  43032c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  430330:	add	x1, x1, #0x763
  430334:	ldr	w2, [x20, #8]
  430338:	mov	x0, x19
  43033c:	mov	x3, x21
  430340:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  430344:	ldp	x20, x19, [sp, #32]
  430348:	ldp	x22, x21, [sp, #16]
  43034c:	mov	w0, wzr
  430350:	ldp	x29, x30, [sp], #48
  430354:	ret
  430358:	stp	x29, x30, [sp, #-48]!
  43035c:	stp	x20, x19, [sp, #32]
  430360:	mov	x9, x1
  430364:	ldr	w10, [x0, #24]
  430368:	ldr	w11, [x9, #24]
  43036c:	ldr	x1, [x0, #16]
  430370:	str	x21, [sp, #16]
  430374:	mov	x19, x3
  430378:	mov	x8, x2
  43037c:	mov	x20, x0
  430380:	orr	w21, w11, w10
  430384:	mov	x29, sp
  430388:	cbz	x1, 430394 <argp_failure@@Base+0x18a8>
  43038c:	tbz	w21, #4, 43039c <argp_failure@@Base+0x18b0>
  430390:	b	4303ec <argp_failure@@Base+0x1900>
  430394:	ldr	x1, [x9, #16]
  430398:	tbnz	w21, #4, 4303ec <argp_failure@@Base+0x1900>
  43039c:	cbz	x1, 4303c4 <argp_failure@@Base+0x18d8>
  4303a0:	mov	w2, #0x5                   	// #5
  4303a4:	mov	x0, x8
  4303a8:	bl	404bf0 <dcgettext@plt>
  4303ac:	ldr	x2, [x20]
  4303b0:	mov	x3, x0
  4303b4:	tbnz	w21, #0, 4303dc <argp_failure@@Base+0x18f0>
  4303b8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4303bc:	add	x1, x1, #0x784
  4303c0:	b	4303e4 <argp_failure@@Base+0x18f8>
  4303c4:	ldr	x2, [x20]
  4303c8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4303cc:	add	x1, x1, #0x78f
  4303d0:	mov	x0, x19
  4303d4:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  4303d8:	b	4303ec <argp_failure@@Base+0x1900>
  4303dc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4303e0:	add	x1, x1, #0x777
  4303e4:	mov	x0, x19
  4303e8:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  4303ec:	ldp	x20, x19, [sp, #32]
  4303f0:	ldr	x21, [sp, #16]
  4303f4:	mov	w0, wzr
  4303f8:	ldp	x29, x30, [sp], #48
  4303fc:	ret
  430400:	stp	x29, x30, [sp, #-32]!
  430404:	stp	x20, x19, [sp, #16]
  430408:	mov	x29, sp
  43040c:	mov	x19, x1
  430410:	mov	x20, x0
  430414:	bl	44be20 <_obstack_memory_used@@Base+0xdbc0>
  430418:	ldr	x8, [x20, #16]
  43041c:	add	x9, x0, x19
  430420:	mov	w10, #0xa                   	// #10
  430424:	mov	x0, x20
  430428:	cmp	x9, x8
  43042c:	mov	w8, #0x20                  	// #32
  430430:	csel	w1, w8, w10, cc  // cc = lo, ul, last
  430434:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  430438:	ldp	x20, x19, [sp, #16]
  43043c:	ldp	x29, x30, [sp], #32
  430440:	ret
  430444:	stp	x29, x30, [sp, #-48]!
  430448:	stp	x20, x19, [sp, #32]
  43044c:	mov	x19, x0
  430450:	str	x21, [sp, #16]
  430454:	mov	x29, sp
  430458:	cbz	x2, 430490 <argp_failure@@Base+0x19a4>
  43045c:	ldr	x8, [x2, #40]
  430460:	mov	x21, x2
  430464:	cbz	x8, 430490 <argp_failure@@Base+0x19a4>
  430468:	mov	w20, w1
  43046c:	mov	x0, x21
  430470:	mov	x1, x3
  430474:	bl	431318 <argp_parse@@Base+0x7c8>
  430478:	ldr	x8, [x21, #40]
  43047c:	mov	x2, x0
  430480:	mov	w0, w20
  430484:	mov	x1, x19
  430488:	blr	x8
  43048c:	mov	x19, x0
  430490:	mov	x0, x19
  430494:	ldp	x20, x19, [sp, #32]
  430498:	ldr	x21, [sp, #16]
  43049c:	ldp	x29, x30, [sp], #48
  4304a0:	ret
  4304a4:	sub	sp, sp, #0xa0
  4304a8:	stp	x29, x30, [sp, #64]
  4304ac:	stp	x28, x27, [sp, #80]
  4304b0:	stp	x26, x25, [sp, #96]
  4304b4:	stp	x24, x23, [sp, #112]
  4304b8:	stp	x22, x21, [sp, #128]
  4304bc:	stp	x20, x19, [sp, #144]
  4304c0:	ldr	x23, [x0]
  4304c4:	ldr	x28, [x0, #16]
  4304c8:	mov	x21, x0
  4304cc:	mov	x24, x1
  4304d0:	mov	x0, x2
  4304d4:	mov	x1, xzr
  4304d8:	add	x29, sp, #0x40
  4304dc:	mov	x20, x3
  4304e0:	mov	x19, x2
  4304e4:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  4304e8:	ldr	x11, [x19, #24]
  4304ec:	mov	w8, #0x1                   	// #1
  4304f0:	stp	x21, x19, [sp, #24]
  4304f4:	str	x20, [sp, #40]
  4304f8:	stp	x11, x20, [sp, #8]
  4304fc:	str	w8, [sp, #48]
  430500:	str	x24, [sp, #56]
  430504:	ldrb	w8, [x23, #24]
  430508:	str	x0, [sp]
  43050c:	tbnz	w8, #3, 430544 <argp_failure@@Base+0x1a58>
  430510:	ldr	w8, [x21, #8]
  430514:	cbz	w8, 430544 <argp_failure@@Base+0x1a58>
  430518:	mov	x9, x23
  43051c:	b	43052c <argp_failure@@Base+0x1a40>
  430520:	subs	w8, w8, #0x1
  430524:	add	x9, x9, #0x30
  430528:	b.eq	430544 <argp_failure@@Base+0x1a58>  // b.none
  43052c:	ldr	x10, [x9]
  430530:	cbz	x10, 430520 <argp_failure@@Base+0x1a34>
  430534:	ldrb	w10, [x9, #24]
  430538:	tbnz	w10, #1, 430520 <argp_failure@@Base+0x1a34>
  43053c:	mov	w22, #0x1                   	// #1
  430540:	b	430548 <argp_failure@@Base+0x1a5c>
  430544:	mov	w22, wzr
  430548:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43054c:	ldrsw	x1, [x8, #976]
  430550:	mov	x0, x19
  430554:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  430558:	ldr	w20, [x21, #8]
  43055c:	cbz	w20, 430620 <argp_failure@@Base+0x1b34>
  430560:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  430564:	adrp	x26, 457000 <_obstack_memory_used@@Base+0x18da0>
  430568:	add	x25, x25, #0x3c8
  43056c:	add	x26, x26, #0x80b
  430570:	mov	x27, x23
  430574:	b	4305a4 <argp_failure@@Base+0x1ab8>
  430578:	mov	x3, xzr
  43057c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  430580:	mov	x0, x23
  430584:	add	x1, x1, #0x385
  430588:	mov	x2, x26
  43058c:	mov	x4, x19
  430590:	bl	43099c <argp_failure@@Base+0x1eb0>
  430594:	add	x28, x28, #0x1
  430598:	subs	w20, w20, #0x1
  43059c:	add	x27, x27, #0x30
  4305a0:	b.eq	430620 <argp_failure@@Base+0x1b34>  // b.none
  4305a4:	mov	x0, x27
  4305a8:	bl	431c1c <argp_usage@@Base+0x20>
  4305ac:	cbz	w0, 430598 <argp_failure@@Base+0x1aac>
  4305b0:	ldr	w8, [x27, #8]
  4305b4:	ldrb	w9, [x28]
  4305b8:	cmp	w8, w9
  4305bc:	b.ne	430598 <argp_failure@@Base+0x1aac>  // b.any
  4305c0:	ldrb	w8, [x27, #24]
  4305c4:	tbnz	w8, #1, 430594 <argp_failure@@Base+0x1aa8>
  4305c8:	ldr	w0, [x25, #8]
  4305cc:	add	x1, sp, #0x18
  4305d0:	bl	4308b4 <argp_failure@@Base+0x1dc8>
  4305d4:	mov	w1, #0x2d                  	// #45
  4305d8:	mov	x0, x19
  4305dc:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  4305e0:	ldrb	w1, [x28]
  4305e4:	mov	x0, x19
  4305e8:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  4305ec:	cbz	w22, 430610 <argp_failure@@Base+0x1b24>
  4305f0:	ldr	w8, [x25]
  4305f4:	cbnz	w8, 430610 <argp_failure@@Base+0x1b24>
  4305f8:	ldr	x8, [x23, #16]
  4305fc:	cbz	x8, 430594 <argp_failure@@Base+0x1aa8>
  430600:	ldr	x8, [sp, #16]
  430604:	mov	w9, #0x1                   	// #1
  430608:	str	w9, [x8, #12]
  43060c:	b	430594 <argp_failure@@Base+0x1aa8>
  430610:	cbz	x24, 430578 <argp_failure@@Base+0x1a8c>
  430614:	ldr	x8, [x24]
  430618:	ldr	x3, [x8, #48]
  43061c:	b	43057c <argp_failure@@Base+0x1a90>
  430620:	ldrb	w8, [x23, #24]
  430624:	tbnz	w8, #3, 4306c0 <argp_failure@@Base+0x1bd4>
  430628:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43062c:	ldrsw	x1, [x20, #980]
  430630:	mov	x0, x19
  430634:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  430638:	ldr	w22, [x21, #8]
  43063c:	cbz	w22, 430734 <argp_failure@@Base+0x1c48>
  430640:	adrp	x25, 457000 <_obstack_memory_used@@Base+0x18da0>
  430644:	adrp	x26, 459000 <_obstack_memory_used@@Base+0x1ada0>
  430648:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x18da0>
  43064c:	add	x25, x25, #0x810
  430650:	add	x26, x26, #0xb9d
  430654:	add	x27, x27, #0x815
  430658:	mov	x28, x23
  43065c:	b	430688 <argp_failure@@Base+0x1b9c>
  430660:	ldr	x8, [x24]
  430664:	ldr	x3, [x8, #48]
  430668:	mov	x0, x23
  43066c:	mov	x1, x26
  430670:	mov	x2, x27
  430674:	mov	x4, x19
  430678:	bl	43099c <argp_failure@@Base+0x1eb0>
  43067c:	subs	w22, w22, #0x1
  430680:	add	x28, x28, #0x30
  430684:	b.eq	430734 <argp_failure@@Base+0x1c48>  // b.none
  430688:	ldr	x8, [x28]
  43068c:	cbz	x8, 43067c <argp_failure@@Base+0x1b90>
  430690:	ldrb	w8, [x28, #24]
  430694:	tbnz	w8, #1, 43067c <argp_failure@@Base+0x1b90>
  430698:	ldr	w0, [x20, #980]
  43069c:	add	x1, sp, #0x18
  4306a0:	bl	4308b4 <argp_failure@@Base+0x1dc8>
  4306a4:	ldr	x2, [x28]
  4306a8:	mov	x0, x19
  4306ac:	mov	x1, x25
  4306b0:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  4306b4:	cbnz	x24, 430660 <argp_failure@@Base+0x1b74>
  4306b8:	mov	x3, xzr
  4306bc:	b	430668 <argp_failure@@Base+0x1b7c>
  4306c0:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4306c4:	ldrsw	x1, [x20, #984]
  4306c8:	mov	x0, x19
  4306cc:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  4306d0:	ldr	w22, [x21, #8]
  4306d4:	cbz	w22, 430734 <argp_failure@@Base+0x1c48>
  4306d8:	mov	x25, x23
  4306dc:	b	43070c <argp_failure@@Base+0x1c20>
  4306e0:	ldr	x8, [x24]
  4306e4:	ldr	x0, [x8, #48]
  4306e8:	ldr	x1, [x25]
  4306ec:	mov	w2, #0x5                   	// #5
  4306f0:	bl	404bf0 <dcgettext@plt>
  4306f4:	mov	x1, x0
  4306f8:	mov	x0, x19
  4306fc:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  430700:	subs	w22, w22, #0x1
  430704:	add	x25, x25, #0x30
  430708:	b.eq	430734 <argp_failure@@Base+0x1c48>  // b.none
  43070c:	ldr	x8, [x25]
  430710:	cbz	x8, 430700 <argp_failure@@Base+0x1c14>
  430714:	ldrb	w8, [x25, #24]
  430718:	tbnz	w8, #1, 430700 <argp_failure@@Base+0x1c14>
  43071c:	ldr	w0, [x20, #984]
  430720:	add	x1, sp, #0x18
  430724:	bl	4308b4 <argp_failure@@Base+0x1dc8>
  430728:	cbnz	x24, 4306e0 <argp_failure@@Base+0x1bf4>
  43072c:	mov	x0, xzr
  430730:	b	4306e8 <argp_failure@@Base+0x1bfc>
  430734:	mov	x0, x19
  430738:	mov	x1, xzr
  43073c:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  430740:	ldr	w8, [sp, #48]
  430744:	cbz	w8, 430774 <argp_failure@@Base+0x1c88>
  430748:	mov	x0, x23
  43074c:	bl	431c1c <argp_usage@@Base+0x20>
  430750:	ldp	x20, x22, [sp]
  430754:	cbnz	w0, 43087c <argp_failure@@Base+0x1d90>
  430758:	ldr	x8, [x23]
  43075c:	cbnz	x8, 43087c <argp_failure@@Base+0x1d90>
  430760:	ldr	x0, [x23, #32]
  430764:	ldr	x1, [x21, #40]
  430768:	add	x2, sp, #0x18
  43076c:	bl	4309f8 <argp_failure@@Base+0x1f0c>
  430770:	b	430874 <argp_failure@@Base+0x1d88>
  430774:	ldr	x1, [x23, #32]
  430778:	cbz	x1, 430790 <argp_failure@@Base+0x1ca4>
  43077c:	ldr	x22, [sp, #8]
  430780:	cbz	x24, 43079c <argp_failure@@Base+0x1cb0>
  430784:	ldr	x8, [x24]
  430788:	ldr	x0, [x8, #48]
  43078c:	b	4307a0 <argp_failure@@Base+0x1cb4>
  430790:	ldr	x22, [sp, #8]
  430794:	mov	x25, xzr
  430798:	b	4307ac <argp_failure@@Base+0x1cc0>
  43079c:	mov	x0, xzr
  4307a0:	mov	w2, #0x5                   	// #5
  4307a4:	bl	404bf0 <dcgettext@plt>
  4307a8:	mov	x25, x0
  4307ac:	ldr	w1, [x23, #8]
  4307b0:	ldr	x2, [x21, #40]
  4307b4:	mov	x0, x25
  4307b8:	mov	x3, x24
  4307bc:	bl	430444 <argp_failure@@Base+0x1958>
  4307c0:	cbz	x0, 430858 <argp_failure@@Base+0x1d6c>
  4307c4:	ldrb	w8, [x0]
  4307c8:	mov	x23, x0
  4307cc:	cbz	w8, 430848 <argp_failure@@Base+0x1d5c>
  4307d0:	mov	x0, x19
  4307d4:	bl	44be20 <_obstack_memory_used@@Base+0xdbc0>
  4307d8:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4307dc:	ldrsw	x1, [x20, #988]
  4307e0:	mov	x24, x0
  4307e4:	mov	x0, x19
  4307e8:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  4307ec:	ldrsw	x1, [x20, #988]
  4307f0:	mov	x0, x19
  4307f4:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  4307f8:	ldr	w1, [x20, #988]
  4307fc:	add	w8, w1, #0x3
  430800:	cmp	w8, w24
  430804:	b.cs	430818 <argp_failure@@Base+0x1d2c>  // b.hs, b.nlast
  430808:	mov	w1, #0xa                   	// #10
  43080c:	mov	x0, x19
  430810:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  430814:	b	43083c <argp_failure@@Base+0x1d50>
  430818:	cmp	w1, w24
  43081c:	b.ls	43082c <argp_failure@@Base+0x1d40>  // b.plast
  430820:	mov	x0, x19
  430824:	bl	430adc <argp_failure@@Base+0x1ff0>
  430828:	b	43083c <argp_failure@@Base+0x1d50>
  43082c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x11da0>
  430830:	add	x1, x1, #0xdf2
  430834:	mov	x0, x19
  430838:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  43083c:	mov	x0, x19
  430840:	mov	x1, x23
  430844:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  430848:	cmp	x23, x25
  43084c:	b.eq	430858 <argp_failure@@Base+0x1d6c>  // b.none
  430850:	mov	x0, x23
  430854:	bl	4049d0 <free@plt>
  430858:	mov	x0, x19
  43085c:	mov	x1, xzr
  430860:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  430864:	mov	w1, #0xa                   	// #10
  430868:	mov	x0, x19
  43086c:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  430870:	ldr	x20, [sp]
  430874:	ldr	x8, [sp, #16]
  430878:	str	x21, [x8]
  43087c:	sxtw	x1, w20
  430880:	mov	x0, x19
  430884:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  430888:	sxtw	x1, w22
  43088c:	mov	x0, x19
  430890:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  430894:	ldp	x20, x19, [sp, #144]
  430898:	ldp	x22, x21, [sp, #128]
  43089c:	ldp	x24, x23, [sp, #112]
  4308a0:	ldp	x26, x25, [sp, #96]
  4308a4:	ldp	x28, x27, [sp, #80]
  4308a8:	ldp	x29, x30, [sp, #64]
  4308ac:	add	sp, sp, #0xa0
  4308b0:	ret
  4308b4:	stp	x29, x30, [sp, #-64]!
  4308b8:	stp	x22, x21, [sp, #32]
  4308bc:	stp	x20, x19, [sp, #48]
  4308c0:	ldr	w8, [x1, #24]
  4308c4:	mov	x20, x1
  4308c8:	mov	w19, w0
  4308cc:	str	x23, [sp, #16]
  4308d0:	mov	x29, sp
  4308d4:	cbz	w8, 43096c <argp_failure@@Base+0x1e80>
  4308d8:	ldr	x9, [x20, #16]
  4308dc:	ldr	x8, [x20]
  4308e0:	ldr	x23, [x9]
  4308e4:	ldr	x21, [x8, #32]
  4308e8:	cbz	x23, 430910 <argp_failure@@Base+0x1e24>
  4308ec:	ldr	w9, [x9, #8]
  4308f0:	cbz	w9, 430910 <argp_failure@@Base+0x1e24>
  4308f4:	ldr	w8, [x8, #24]
  4308f8:	ldr	w9, [x23, #24]
  4308fc:	cmp	w8, w9
  430900:	b.eq	430910 <argp_failure@@Base+0x1e24>  // b.none
  430904:	ldr	x0, [x20, #8]
  430908:	mov	w1, #0xa                   	// #10
  43090c:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  430910:	cbz	x21, 430964 <argp_failure@@Base+0x1e78>
  430914:	ldr	x22, [x21]
  430918:	cbz	x22, 430964 <argp_failure@@Base+0x1e78>
  43091c:	ldrb	w8, [x22]
  430920:	cbz	w8, 430964 <argp_failure@@Base+0x1e78>
  430924:	cbz	x23, 430940 <argp_failure@@Base+0x1e54>
  430928:	ldr	x0, [x23, #32]
  43092c:	cmp	x0, x21
  430930:	b.eq	430964 <argp_failure@@Base+0x1e78>  // b.none
  430934:	mov	x1, x21
  430938:	bl	430b28 <argp_failure@@Base+0x203c>
  43093c:	cbnz	w0, 430964 <argp_failure@@Base+0x1e78>
  430940:	ldr	x8, [x20, #8]
  430944:	ldr	x1, [x21, #24]
  430948:	mov	x0, x22
  43094c:	mov	x2, x20
  430950:	ldrsw	x23, [x8, #24]
  430954:	bl	4309f8 <argp_failure@@Base+0x1f0c>
  430958:	ldr	x0, [x20, #8]
  43095c:	mov	x1, x23
  430960:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  430964:	str	wzr, [x20, #24]
  430968:	b	43097c <argp_failure@@Base+0x1e90>
  43096c:	ldr	x0, [x20, #8]
  430970:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  430974:	add	x1, x1, #0x81b
  430978:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  43097c:	ldr	x0, [x20, #8]
  430980:	mov	w1, w19
  430984:	bl	430adc <argp_failure@@Base+0x1ff0>
  430988:	ldp	x20, x19, [sp, #48]
  43098c:	ldp	x22, x21, [sp, #32]
  430990:	ldr	x23, [sp, #16]
  430994:	ldp	x29, x30, [sp], #64
  430998:	ret
  43099c:	stp	x29, x30, [sp, #-48]!
  4309a0:	stp	x22, x21, [sp, #16]
  4309a4:	stp	x20, x19, [sp, #32]
  4309a8:	ldr	x8, [x0, #16]
  4309ac:	mov	x29, sp
  4309b0:	cbz	x8, 4309e8 <argp_failure@@Base+0x1efc>
  4309b4:	ldr	w22, [x0, #24]
  4309b8:	mov	x20, x2
  4309bc:	mov	x21, x1
  4309c0:	mov	w2, #0x5                   	// #5
  4309c4:	mov	x0, x3
  4309c8:	mov	x1, x8
  4309cc:	mov	x19, x4
  4309d0:	bl	404bf0 <dcgettext@plt>
  4309d4:	tst	w22, #0x1
  4309d8:	mov	x2, x0
  4309dc:	csel	x1, x21, x20, eq  // eq = none
  4309e0:	mov	x0, x19
  4309e4:	bl	44bb28 <_obstack_memory_used@@Base+0xd8c8>
  4309e8:	ldp	x20, x19, [sp, #32]
  4309ec:	ldp	x22, x21, [sp, #16]
  4309f0:	ldp	x29, x30, [sp], #48
  4309f4:	ret
  4309f8:	stp	x29, x30, [sp, #-48]!
  4309fc:	stp	x22, x21, [sp, #16]
  430a00:	stp	x20, x19, [sp, #32]
  430a04:	ldr	x8, [x1, #48]
  430a08:	mov	x19, x2
  430a0c:	mov	x21, x1
  430a10:	mov	x1, x0
  430a14:	mov	w2, #0x5                   	// #5
  430a18:	mov	x0, x8
  430a1c:	mov	x29, sp
  430a20:	bl	404bf0 <dcgettext@plt>
  430a24:	ldr	x3, [x19, #32]
  430a28:	mov	w1, #0x3                   	// #3
  430a2c:	movk	w1, #0x200, lsl #16
  430a30:	mov	x2, x21
  430a34:	mov	x20, x0
  430a38:	bl	430444 <argp_failure@@Base+0x1958>
  430a3c:	mov	x21, x0
  430a40:	cbz	x0, 430abc <argp_failure@@Base+0x1fd0>
  430a44:	ldrb	w8, [x21]
  430a48:	cbz	w8, 430ab0 <argp_failure@@Base+0x1fc4>
  430a4c:	ldr	x8, [x19, #16]
  430a50:	ldr	x8, [x8]
  430a54:	cbz	x8, 430a64 <argp_failure@@Base+0x1f78>
  430a58:	ldr	x0, [x19, #8]
  430a5c:	mov	w1, #0xa                   	// #10
  430a60:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  430a64:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  430a68:	ldr	x0, [x19, #8]
  430a6c:	ldr	w1, [x22, #992]
  430a70:	bl	430adc <argp_failure@@Base+0x1ff0>
  430a74:	ldr	x0, [x19, #8]
  430a78:	ldrsw	x1, [x22, #992]
  430a7c:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  430a80:	ldr	x0, [x19, #8]
  430a84:	ldrsw	x1, [x22, #992]
  430a88:	bl	44bddc <_obstack_memory_used@@Base+0xdb7c>
  430a8c:	ldr	x0, [x19, #8]
  430a90:	mov	x1, x21
  430a94:	bl	44bcac <_obstack_memory_used@@Base+0xda4c>
  430a98:	ldr	x0, [x19, #8]
  430a9c:	mov	x1, xzr
  430aa0:	bl	44bd54 <_obstack_memory_used@@Base+0xdaf4>
  430aa4:	ldr	x0, [x19, #8]
  430aa8:	mov	w1, #0xa                   	// #10
  430aac:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  430ab0:	ldr	x8, [x19, #16]
  430ab4:	mov	w9, #0x1                   	// #1
  430ab8:	str	w9, [x8, #8]
  430abc:	cmp	x21, x20
  430ac0:	b.eq	430acc <argp_failure@@Base+0x1fe0>  // b.none
  430ac4:	mov	x0, x21
  430ac8:	bl	4049d0 <free@plt>
  430acc:	ldp	x20, x19, [sp, #32]
  430ad0:	ldp	x22, x21, [sp, #16]
  430ad4:	ldp	x29, x30, [sp], #48
  430ad8:	ret
  430adc:	stp	x29, x30, [sp, #-32]!
  430ae0:	stp	x20, x19, [sp, #16]
  430ae4:	mov	x29, sp
  430ae8:	mov	w20, w1
  430aec:	mov	x19, x0
  430af0:	bl	44be20 <_obstack_memory_used@@Base+0xdbc0>
  430af4:	sub	w8, w20, w0
  430af8:	cmp	w8, #0x1
  430afc:	b.lt	430b1c <argp_failure@@Base+0x2030>  // b.tstop
  430b00:	add	w20, w8, #0x1
  430b04:	mov	w1, #0x20                  	// #32
  430b08:	mov	x0, x19
  430b0c:	bl	44bcfc <_obstack_memory_used@@Base+0xda9c>
  430b10:	sub	w20, w20, #0x1
  430b14:	cmp	w20, #0x1
  430b18:	b.gt	430b04 <argp_failure@@Base+0x2018>
  430b1c:	ldp	x20, x19, [sp, #16]
  430b20:	ldp	x29, x30, [sp], #32
  430b24:	ret
  430b28:	cmp	x0, x1
  430b2c:	b.eq	430b44 <argp_failure@@Base+0x2058>  // b.none
  430b30:	cbz	x0, 430b44 <argp_failure@@Base+0x2058>
  430b34:	ldr	x0, [x0, #16]
  430b38:	cmp	x0, x1
  430b3c:	b.eq	430b44 <argp_failure@@Base+0x2058>  // b.none
  430b40:	cbnz	x0, 430b34 <argp_failure@@Base+0x2048>
  430b44:	cmp	x0, x1
  430b48:	cset	w0, eq  // eq = none
  430b4c:	ret

0000000000430b50 <argp_parse@@Base>:
  430b50:	stp	x29, x30, [sp, #-80]!
  430b54:	stp	x28, x25, [sp, #16]
  430b58:	stp	x24, x23, [sp, #32]
  430b5c:	stp	x22, x21, [sp, #48]
  430b60:	stp	x20, x19, [sp, #64]
  430b64:	mov	x29, sp
  430b68:	sub	sp, sp, #0xe0
  430b6c:	mov	x20, x5
  430b70:	mov	x19, x4
  430b74:	mov	w21, w3
  430b78:	mov	x22, x2
  430b7c:	mov	w23, w1
  430b80:	mov	x24, x0
  430b84:	stur	wzr, [x29, #-220]
  430b88:	tbnz	w3, #0, 430bac <argp_parse@@Base+0x5c>
  430b8c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  430b90:	ldr	x9, [x8, #1128]
  430b94:	cbnz	x9, 430ba0 <argp_parse@@Base+0x50>
  430b98:	ldr	x9, [x22]
  430b9c:	str	x9, [x8, #1128]
  430ba0:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  430ba4:	ldr	x8, [x25, #1168]
  430ba8:	cbz	x8, 430c9c <argp_parse@@Base+0x14c>
  430bac:	tbnz	w21, #4, 430c3c <argp_parse@@Base+0xec>
  430bb0:	mov	x10, sp
  430bb4:	sub	x8, x10, #0x80
  430bb8:	mov	sp, x8
  430bbc:	mov	x11, sp
  430bc0:	sub	x9, x11, #0x40
  430bc4:	mov	sp, x9
  430bc8:	movi	v0.2d, #0x0
  430bcc:	stur	xzr, [x11, #-16]
  430bd0:	stp	q0, q0, [x11, #-48]
  430bd4:	stur	q0, [x11, #-64]
  430bd8:	stur	x8, [x11, #-32]
  430bdc:	stp	q0, q0, [x10, #-32]
  430be0:	stp	q0, q0, [x10, #-64]
  430be4:	stp	q0, q0, [x10, #-96]
  430be8:	stp	q0, q0, [x10, #-128]
  430bec:	cbz	x24, 430bf4 <argp_parse@@Base+0xa4>
  430bf0:	str	x24, [x8], #32
  430bf4:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  430bf8:	ldr	x10, [x10, #1032]
  430bfc:	adrp	x11, 457000 <_obstack_memory_used@@Base+0x18da0>
  430c00:	add	x11, x11, #0x8b0
  430c04:	str	x11, [x8]
  430c08:	cbnz	x10, 430c20 <argp_parse@@Base+0xd0>
  430c0c:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  430c10:	ldr	x10, [x10, #3496]
  430c14:	cbnz	x10, 430c20 <argp_parse@@Base+0xd0>
  430c18:	mov	w10, #0x1                   	// #1
  430c1c:	b	430c30 <argp_parse@@Base+0xe0>
  430c20:	adrp	x10, 457000 <_obstack_memory_used@@Base+0x18da0>
  430c24:	add	x10, x10, #0x8e8
  430c28:	str	x10, [x8, #32]
  430c2c:	mov	w10, #0x2                   	// #2
  430c30:	lsl	x10, x10, #5
  430c34:	mov	x24, x9
  430c38:	str	xzr, [x8, x10]
  430c3c:	sub	x0, x29, #0xd8
  430c40:	mov	x1, x24
  430c44:	mov	w2, w23
  430c48:	mov	x3, x22
  430c4c:	mov	w4, w21
  430c50:	mov	x5, x20
  430c54:	bl	430cb0 <argp_parse@@Base+0x160>
  430c58:	cbnz	w0, 430c80 <argp_parse@@Base+0x130>
  430c5c:	sub	x0, x29, #0xd8
  430c60:	sub	x1, x29, #0xdc
  430c64:	bl	430f1c <argp_parse@@Base+0x3cc>
  430c68:	cbz	w0, 430c5c <argp_parse@@Base+0x10c>
  430c6c:	ldur	w2, [x29, #-220]
  430c70:	mov	w1, w0
  430c74:	sub	x0, x29, #0xd8
  430c78:	mov	x3, x19
  430c7c:	bl	4310ac <argp_parse@@Base+0x55c>
  430c80:	mov	sp, x29
  430c84:	ldp	x20, x19, [sp, #64]
  430c88:	ldp	x22, x21, [sp, #48]
  430c8c:	ldp	x24, x23, [sp, #32]
  430c90:	ldp	x28, x25, [sp, #16]
  430c94:	ldp	x29, x30, [sp], #80
  430c98:	ret
  430c9c:	ldr	x0, [x22]
  430ca0:	bl	432690 <argp_usage@@Base+0xa94>
  430ca4:	str	x0, [x25, #1168]
  430ca8:	tbz	w21, #4, 430bb0 <argp_parse@@Base+0x60>
  430cac:	b	430c3c <argp_parse@@Base+0xec>
  430cb0:	sub	sp, sp, #0xb0
  430cb4:	mov	w8, #0x1                   	// #1
  430cb8:	stp	x29, x30, [sp, #80]
  430cbc:	stp	x24, x23, [sp, #128]
  430cc0:	stp	x22, x21, [sp, #144]
  430cc4:	stp	x20, x19, [sp, #160]
  430cc8:	add	x29, sp, #0x50
  430ccc:	mov	x21, x5
  430cd0:	mov	w23, w4
  430cd4:	mov	x20, x3
  430cd8:	mov	w24, w2
  430cdc:	mov	x22, x1
  430ce0:	mov	x19, x0
  430ce4:	movi	v0.2d, #0x0
  430ce8:	bic	w8, w8, w4, lsr #2
  430cec:	stp	x28, x27, [sp, #96]
  430cf0:	stp	x26, x25, [sp, #112]
  430cf4:	stp	q0, q0, [sp, #16]
  430cf8:	str	q0, [sp]
  430cfc:	stp	x8, xzr, [x29, #-32]
  430d00:	stp	xzr, xzr, [x29, #-16]
  430d04:	cbz	x1, 430d14 <argp_parse@@Base+0x1c4>
  430d08:	sub	x1, x29, #0x20
  430d0c:	mov	x0, x22
  430d10:	bl	43151c <argp_parse@@Base+0x9cc>
  430d14:	ldp	x8, x9, [x29, #-16]
  430d18:	mov	w10, #0x48                  	// #72
  430d1c:	mul	x8, x8, x10
  430d20:	lsl	x25, x9, #3
  430d24:	add	x27, x8, #0x48
  430d28:	ldp	x8, x9, [x29, #-32]
  430d2c:	add	x28, x27, x25
  430d30:	add	x9, x28, x9, lsl #5
  430d34:	add	x26, x9, #0x20
  430d38:	add	x8, x8, x26
  430d3c:	add	x0, x8, #0x1
  430d40:	bl	4044f0 <malloc@plt>
  430d44:	str	x0, [x19, #208]
  430d48:	cbz	x0, 430e80 <argp_parse@@Base+0x330>
  430d4c:	add	x8, x0, x27
  430d50:	add	x9, x0, x28
  430d54:	add	x10, x0, x26
  430d58:	mov	x11, #0x100000001           	// #4294967297
  430d5c:	str	x0, [x19, #80]
  430d60:	str	x8, [x19, #96]
  430d64:	stp	x10, x9, [x19, #8]
  430d68:	str	x11, [x19, #24]
  430d6c:	ldp	q1, q0, [sp, #16]
  430d70:	ldr	q2, [sp]
  430d74:	mov	x0, x8
  430d78:	mov	w1, wzr
  430d7c:	mov	x2, x25
  430d80:	stp	q1, q0, [x19, #48]
  430d84:	str	q2, [x19, #32]
  430d88:	bl	404600 <memset@plt>
  430d8c:	mov	x0, x19
  430d90:	mov	x1, x22
  430d94:	mov	w2, w23
  430d98:	bl	4315e4 <argp_parse@@Base+0xa94>
  430d9c:	movi	v0.2d, #0x0
  430da0:	mov	x22, x19
  430da4:	str	q0, [x22, #112]!
  430da8:	ldr	x8, [x19]
  430dac:	stp	q0, q0, [x19, #176]
  430db0:	stp	q0, q0, [x19, #144]
  430db4:	str	q0, [x19, #128]
  430db8:	str	x8, [x22]
  430dbc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  430dc0:	str	w24, [x19, #120]
  430dc4:	str	x20, [x19, #128]
  430dc8:	stp	wzr, w23, [x19, #136]
  430dcc:	ldr	x8, [x8, #1136]
  430dd0:	ldp	x23, x9, [x19, #80]
  430dd4:	str	x8, [x19, #184]
  430dd8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  430ddc:	ldr	x8, [x8, #1144]
  430de0:	cmp	x23, x9
  430de4:	mov	w9, #0x1                   	// #1
  430de8:	str	w9, [x19, #104]
  430dec:	stp	x8, x19, [x19, #192]
  430df0:	b.cs	430df8 <argp_parse@@Base+0x2a8>  // b.hs, b.nlast
  430df4:	str	x21, [x23, #48]
  430df8:	ldr	x8, [x19, #88]
  430dfc:	cmp	x23, x8
  430e00:	b.cs	430e88 <argp_parse@@Base+0x338>  // b.hs, b.nlast
  430e04:	mov	w0, wzr
  430e08:	b	430e34 <argp_parse@@Base+0x2e4>
  430e0c:	mov	w2, #0x3                   	// #3
  430e10:	movk	w2, #0x100, lsl #16
  430e14:	mov	x0, x23
  430e18:	mov	x1, x22
  430e1c:	mov	x3, xzr
  430e20:	bl	431688 <argp_parse@@Base+0xb38>
  430e24:	ldr	x8, [x19, #88]
  430e28:	add	x23, x23, #0x48
  430e2c:	cmp	x23, x8
  430e30:	b.cs	430e8c <argp_parse@@Base+0x33c>  // b.hs, b.nlast
  430e34:	cmp	w0, #0x7
  430e38:	b.eq	430e40 <argp_parse@@Base+0x2f0>  // b.none
  430e3c:	cbnz	w0, 430e94 <argp_parse@@Base+0x344>
  430e40:	ldr	x8, [x23, #32]
  430e44:	cbz	x8, 430e58 <argp_parse@@Base+0x308>
  430e48:	ldr	x8, [x8, #56]
  430e4c:	ldr	w9, [x23, #40]
  430e50:	ldr	x8, [x8, x9, lsl #3]
  430e54:	str	x8, [x23, #48]
  430e58:	ldr	x8, [x23]
  430e5c:	cbnz	x8, 430e0c <argp_parse@@Base+0x2bc>
  430e60:	ldr	x8, [x23, #8]
  430e64:	ldr	x8, [x8, #32]
  430e68:	cbz	x8, 430e0c <argp_parse@@Base+0x2bc>
  430e6c:	ldr	x8, [x8]
  430e70:	cbz	x8, 430e0c <argp_parse@@Base+0x2bc>
  430e74:	ldp	x8, x9, [x23, #48]
  430e78:	str	x8, [x9]
  430e7c:	b	430e0c <argp_parse@@Base+0x2bc>
  430e80:	mov	w0, #0xc                   	// #12
  430e84:	b	430efc <argp_parse@@Base+0x3ac>
  430e88:	mov	w0, wzr
  430e8c:	cmp	w0, #0x7
  430e90:	csel	w0, wzr, w0, eq  // eq = none
  430e94:	cbnz	w0, 430efc <argp_parse@@Base+0x3ac>
  430e98:	ldr	w8, [x19, #140]
  430e9c:	tbnz	w8, #1, 430eac <argp_parse@@Base+0x35c>
  430ea0:	mov	w8, #0x1                   	// #1
  430ea4:	str	w8, [x19, #28]
  430ea8:	b	430ecc <argp_parse@@Base+0x37c>
  430eac:	str	wzr, [x19, #28]
  430eb0:	tbz	w8, #0, 430ecc <argp_parse@@Base+0x37c>
  430eb4:	ldr	x8, [x19, #128]
  430eb8:	ldr	w9, [x19, #120]
  430ebc:	sub	x8, x8, #0x8
  430ec0:	add	w9, w9, #0x1
  430ec4:	str	x8, [x19, #128]
  430ec8:	str	w9, [x19, #120]
  430ecc:	ldr	x8, [x19, #128]
  430ed0:	cmp	x8, x20
  430ed4:	b.eq	430ee4 <argp_parse@@Base+0x394>  // b.none
  430ed8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  430edc:	ldr	x8, [x8, #1168]
  430ee0:	b	430ef4 <argp_parse@@Base+0x3a4>
  430ee4:	ldr	x0, [x20]
  430ee8:	cbz	x0, 430ed8 <argp_parse@@Base+0x388>
  430eec:	bl	432690 <argp_usage@@Base+0xa94>
  430ef0:	mov	x8, x0
  430ef4:	mov	w0, wzr
  430ef8:	str	x8, [x19, #176]
  430efc:	ldp	x20, x19, [sp, #160]
  430f00:	ldp	x22, x21, [sp, #144]
  430f04:	ldp	x24, x23, [sp, #128]
  430f08:	ldp	x26, x25, [sp, #112]
  430f0c:	ldp	x28, x27, [sp, #96]
  430f10:	ldp	x29, x30, [sp, #80]
  430f14:	add	sp, sp, #0xb0
  430f18:	ret
  430f1c:	stp	x29, x30, [sp, #-48]!
  430f20:	stp	x22, x21, [sp, #16]
  430f24:	stp	x20, x19, [sp, #32]
  430f28:	ldr	w8, [x0, #148]
  430f2c:	mov	x20, x0
  430f30:	mov	x19, x1
  430f34:	mov	x29, sp
  430f38:	cbz	w8, 430f4c <argp_parse@@Base+0x3fc>
  430f3c:	ldr	w9, [x20, #136]
  430f40:	cmp	w9, w8
  430f44:	b.ge	430f4c <argp_parse@@Base+0x3fc>  // b.tcont
  430f48:	str	wzr, [x20, #148]
  430f4c:	ldr	w8, [x20, #104]
  430f50:	cbz	w8, 430fdc <argp_parse@@Base+0x48c>
  430f54:	ldr	w8, [x20, #148]
  430f58:	mov	w21, #0xffffffff            	// #-1
  430f5c:	cbnz	w8, 430fe0 <argp_parse@@Base+0x490>
  430f60:	ldr	w8, [x20, #136]
  430f64:	mov	x5, x20
  430f68:	mov	x4, xzr
  430f6c:	str	w8, [x5, #24]!
  430f70:	ldr	w0, [x5, #96]
  430f74:	ldr	x1, [x5, #104]
  430f78:	ldrb	w8, [x5, #116]
  430f7c:	ldp	x2, x3, [x5, #-16]
  430f80:	str	w21, [x5, #8]
  430f84:	tbnz	w8, #6, 430f90 <argp_parse@@Base+0x440>
  430f88:	bl	43de74 <argp_usage@@Base+0xc278>
  430f8c:	b	430f94 <argp_parse@@Base+0x444>
  430f90:	bl	43deb0 <argp_usage@@Base+0xc2b4>
  430f94:	ldr	w22, [x20, #24]
  430f98:	mov	w21, w0
  430f9c:	cmp	w0, #0x3f
  430fa0:	str	w22, [x20, #136]
  430fa4:	b.eq	431008 <argp_parse@@Base+0x4b8>  // b.none
  430fa8:	cmn	w21, #0x1
  430fac:	b.ne	430fe0 <argp_parse@@Base+0x490>  // b.any
  430fb0:	cmp	w22, #0x2
  430fb4:	str	wzr, [x20, #104]
  430fb8:	b.lt	430fdc <argp_parse@@Base+0x48c>  // b.tstop
  430fbc:	ldr	x8, [x20, #128]
  430fc0:	sub	w9, w22, #0x1
  430fc4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  430fc8:	add	x1, x1, #0xabc
  430fcc:	ldr	x0, [x8, w9, sxtw #3]
  430fd0:	bl	404920 <strcmp@plt>
  430fd4:	cbnz	w0, 430fdc <argp_parse@@Base+0x48c>
  430fd8:	str	w22, [x20, #148]
  430fdc:	mov	w21, #0xffffffff            	// #-1
  430fe0:	cmn	w21, #0x1
  430fe4:	b.eq	43102c <argp_parse@@Base+0x4dc>  // b.none
  430fe8:	cmp	w21, #0x1
  430fec:	b.ne	431064 <argp_parse@@Base+0x514>  // b.any
  430ff0:	ldr	x1, [x20, #40]
  430ff4:	mov	x0, x20
  430ff8:	bl	43197c <argp_parse@@Base+0xe2c>
  430ffc:	cmp	w0, #0x7
  431000:	b.eq	431078 <argp_parse@@Base+0x528>  // b.none
  431004:	b	43109c <argp_parse@@Base+0x54c>
  431008:	ldr	w8, [x20, #32]
  43100c:	cmn	w8, #0x1
  431010:	b.eq	431020 <argp_parse@@Base+0x4d0>  // b.none
  431014:	mov	w8, wzr
  431018:	mov	w0, #0x7                   	// #7
  43101c:	b	431098 <argp_parse@@Base+0x548>
  431020:	mov	w21, #0x3f                  	// #63
  431024:	cmn	w21, #0x1
  431028:	b.ne	430fe8 <argp_parse@@Base+0x498>  // b.any
  43102c:	ldrsw	x8, [x20, #136]
  431030:	ldr	w9, [x20, #120]
  431034:	cmp	w8, w9
  431038:	b.ge	431090 <argp_parse@@Base+0x540>  // b.tcont
  43103c:	ldrb	w9, [x20, #140]
  431040:	tbnz	w9, #2, 431090 <argp_parse@@Base+0x540>
  431044:	ldr	x9, [x20, #128]
  431048:	add	w10, w8, #0x1
  43104c:	str	w10, [x20, #136]
  431050:	mov	w21, #0x1                   	// #1
  431054:	ldr	x8, [x9, x8, lsl #3]
  431058:	str	x8, [x20, #40]
  43105c:	cmp	w21, #0x1
  431060:	b.eq	430ff0 <argp_parse@@Base+0x4a0>  // b.none
  431064:	mov	x0, x20
  431068:	mov	w1, w21
  43106c:	bl	431a90 <argp_parse@@Base+0xf40>
  431070:	cmp	w0, #0x7
  431074:	b.ne	43109c <argp_parse@@Base+0x54c>  // b.any
  431078:	cmp	w21, #0x1
  43107c:	cset	w8, eq  // eq = none
  431080:	cmn	w21, #0x1
  431084:	cset	w9, eq  // eq = none
  431088:	orr	w8, w9, w8
  43108c:	b	431098 <argp_parse@@Base+0x548>
  431090:	mov	w0, #0x7                   	// #7
  431094:	mov	w8, #0x1                   	// #1
  431098:	str	w8, [x19]
  43109c:	ldp	x20, x19, [sp, #32]
  4310a0:	ldp	x22, x21, [sp, #16]
  4310a4:	ldp	x29, x30, [sp], #48
  4310a8:	ret
  4310ac:	stp	x29, x30, [sp, #-64]!
  4310b0:	cmp	w2, #0x0
  4310b4:	stp	x24, x23, [sp, #16]
  4310b8:	ccmp	w1, #0x7, #0x0, ne  // ne = any
  4310bc:	mov	w24, #0x1                   	// #1
  4310c0:	stp	x20, x19, [sp, #48]
  4310c4:	mov	x19, x0
  4310c8:	csel	w20, wzr, w1, eq  // eq = none
  4310cc:	movk	w24, #0x100, lsl #16
  4310d0:	stp	x22, x21, [sp, #32]
  4310d4:	mov	x29, sp
  4310d8:	cbz	w20, 431130 <argp_parse@@Base+0x5e0>
  4310dc:	cbz	w20, 431200 <argp_parse@@Base+0x6b0>
  4310e0:	cmp	w20, #0x7
  4310e4:	b.ne	4310f8 <argp_parse@@Base+0x5a8>  // b.any
  4310e8:	ldr	x1, [x19, #184]
  4310ec:	add	x0, x19, #0x70
  4310f0:	mov	w2, #0x104                 	// #260
  4310f4:	bl	42e924 <argp_state_help@@Base>
  4310f8:	ldp	x21, x8, [x19, #80]
  4310fc:	cmp	x21, x8
  431100:	b.cs	431270 <argp_parse@@Base+0x720>  // b.hs, b.nlast
  431104:	add	x22, x19, #0x70
  431108:	add	w2, w24, #0x4
  43110c:	mov	x0, x21
  431110:	mov	x1, x22
  431114:	mov	x3, xzr
  431118:	bl	431688 <argp_parse@@Base+0xb38>
  43111c:	ldr	x8, [x19, #88]
  431120:	add	x21, x21, #0x48
  431124:	cmp	x21, x8
  431128:	b.cc	431108 <argp_parse@@Base+0x5b8>  // b.lo, b.ul, b.last
  43112c:	b	431270 <argp_parse@@Base+0x720>
  431130:	ldr	w8, [x19, #136]
  431134:	ldr	w9, [x19, #120]
  431138:	mov	x21, x3
  43113c:	cmp	w8, w9
  431140:	b.ne	431220 <argp_parse@@Base+0x6d0>  // b.any
  431144:	ldp	x23, x8, [x19, #80]
  431148:	add	x22, x19, #0x70
  43114c:	mov	w20, wzr
  431150:	cmp	x23, x8
  431154:	b.cc	43118c <argp_parse@@Base+0x63c>  // b.lo, b.ul, b.last
  431158:	ldr	x9, [x19, #80]
  43115c:	sub	x23, x8, #0x48
  431160:	cmp	x23, x9
  431164:	b.cs	4311e4 <argp_parse@@Base+0x694>  // b.hs, b.nlast
  431168:	cmp	w20, #0x7
  43116c:	csel	w20, wzr, w20, eq  // eq = none
  431170:	b	4311f0 <argp_parse@@Base+0x6a0>
  431174:	ldr	w8, [x23, #24]
  431178:	cbz	w8, 43119c <argp_parse@@Base+0x64c>
  43117c:	ldr	x8, [x19, #88]
  431180:	add	x23, x23, #0x48
  431184:	cmp	x23, x8
  431188:	b.cs	431158 <argp_parse@@Base+0x608>  // b.hs, b.nlast
  43118c:	cmp	w20, #0x7
  431190:	b.eq	431174 <argp_parse@@Base+0x624>  // b.none
  431194:	cbz	w20, 431174 <argp_parse@@Base+0x624>
  431198:	b	431158 <argp_parse@@Base+0x608>
  43119c:	add	w2, w24, #0x1
  4311a0:	mov	x0, x23
  4311a4:	mov	x1, x22
  4311a8:	mov	x3, xzr
  4311ac:	bl	431688 <argp_parse@@Base+0xb38>
  4311b0:	mov	w20, w0
  4311b4:	b	43117c <argp_parse@@Base+0x62c>
  4311b8:	mov	w2, #0x1                   	// #1
  4311bc:	movk	w2, #0x100, lsl #16
  4311c0:	mov	x0, x23
  4311c4:	mov	x1, x22
  4311c8:	mov	x3, xzr
  4311cc:	bl	431688 <argp_parse@@Base+0xb38>
  4311d0:	ldr	x8, [x19, #80]
  4311d4:	sub	x23, x23, #0x48
  4311d8:	mov	w20, w0
  4311dc:	cmp	x23, x8
  4311e0:	b.cc	431168 <argp_parse@@Base+0x618>  // b.lo, b.ul, b.last
  4311e4:	cmp	w20, #0x7
  4311e8:	b.eq	4311b8 <argp_parse@@Base+0x668>  // b.none
  4311ec:	cbz	w20, 4311b8 <argp_parse@@Base+0x668>
  4311f0:	cbz	x21, 4310dc <argp_parse@@Base+0x58c>
  4311f4:	ldr	w8, [x19, #136]
  4311f8:	str	w8, [x21]
  4311fc:	b	4310dc <argp_parse@@Base+0x58c>
  431200:	ldp	x9, x8, [x19, #80]
  431204:	sub	x21, x8, #0x48
  431208:	cmp	x21, x9
  43120c:	b.cs	431230 <argp_parse@@Base+0x6e0>  // b.hs, b.nlast
  431210:	mov	w20, wzr
  431214:	cmp	w20, #0x7
  431218:	csel	w20, wzr, w20, eq  // eq = none
  43121c:	b	431270 <argp_parse@@Base+0x720>
  431220:	cbz	x21, 4312d4 <argp_parse@@Base+0x784>
  431224:	mov	w20, wzr
  431228:	str	w8, [x21]
  43122c:	b	4310dc <argp_parse@@Base+0x58c>
  431230:	mov	w20, wzr
  431234:	add	x22, x19, #0x70
  431238:	b	431264 <argp_parse@@Base+0x714>
  43123c:	add	w2, w24, #0x3
  431240:	mov	x0, x21
  431244:	mov	x1, x22
  431248:	mov	x3, xzr
  43124c:	bl	431688 <argp_parse@@Base+0xb38>
  431250:	ldr	x8, [x19, #80]
  431254:	sub	x21, x21, #0x48
  431258:	mov	w20, w0
  43125c:	cmp	x21, x8
  431260:	b.cc	431214 <argp_parse@@Base+0x6c4>  // b.lo, b.ul, b.last
  431264:	cmp	w20, #0x7
  431268:	b.eq	43123c <argp_parse@@Base+0x6ec>  // b.none
  43126c:	cbz	w20, 43123c <argp_parse@@Base+0x6ec>
  431270:	ldp	x9, x8, [x19, #80]
  431274:	sub	x21, x8, #0x48
  431278:	cmp	x21, x9
  43127c:	b.cc	4312a8 <argp_parse@@Base+0x758>  // b.lo, b.ul, b.last
  431280:	add	x22, x19, #0x70
  431284:	add	w2, w24, #0x6
  431288:	mov	x0, x21
  43128c:	mov	x1, x22
  431290:	mov	x3, xzr
  431294:	bl	431688 <argp_parse@@Base+0xb38>
  431298:	ldr	x8, [x19, #80]
  43129c:	sub	x21, x21, #0x48
  4312a0:	cmp	x21, x8
  4312a4:	b.cs	431284 <argp_parse@@Base+0x734>  // b.hs, b.nlast
  4312a8:	ldr	x0, [x19, #208]
  4312ac:	cmp	w20, #0x7
  4312b0:	mov	w8, #0x16                  	// #22
  4312b4:	csel	w19, w8, w20, eq  // eq = none
  4312b8:	bl	4049d0 <free@plt>
  4312bc:	mov	w0, w19
  4312c0:	ldp	x20, x19, [sp, #48]
  4312c4:	ldp	x22, x21, [sp, #32]
  4312c8:	ldp	x24, x23, [sp, #16]
  4312cc:	ldp	x29, x30, [sp], #64
  4312d0:	ret
  4312d4:	ldrb	w8, [x19, #140]
  4312d8:	tbnz	w8, #1, 431310 <argp_parse@@Base+0x7c0>
  4312dc:	ldr	x20, [x19, #184]
  4312e0:	cbz	x20, 431310 <argp_parse@@Base+0x7c0>
  4312e4:	ldr	x8, [x19]
  4312e8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4312ec:	add	x1, x1, #0xb7d
  4312f0:	mov	w2, #0x5                   	// #5
  4312f4:	ldr	x0, [x8, #48]
  4312f8:	bl	404bf0 <dcgettext@plt>
  4312fc:	ldr	x3, [x19, #176]
  431300:	mov	x2, x0
  431304:	mov	w1, #0x1                   	// #1
  431308:	mov	x0, x20
  43130c:	bl	404910 <__fprintf_chk@plt>
  431310:	mov	w20, #0x7                   	// #7
  431314:	b	4310dc <argp_parse@@Base+0x58c>
  431318:	cbz	x1, 431350 <argp_parse@@Base+0x800>
  43131c:	ldr	x9, [x1, #88]
  431320:	ldp	x8, x10, [x9, #80]
  431324:	cmp	x8, x10
  431328:	b.cs	431348 <argp_parse@@Base+0x7f8>  // b.hs, b.nlast
  43132c:	ldr	x10, [x8, #8]
  431330:	cmp	x10, x0
  431334:	b.eq	431358 <argp_parse@@Base+0x808>  // b.none
  431338:	ldr	x10, [x9, #88]
  43133c:	add	x8, x8, #0x48
  431340:	cmp	x8, x10
  431344:	b.cc	43132c <argp_parse@@Base+0x7dc>  // b.lo, b.ul, b.last
  431348:	mov	w8, #0x1                   	// #1
  43134c:	cbz	w8, 431354 <argp_parse@@Base+0x804>
  431350:	mov	x0, xzr
  431354:	ret
  431358:	ldr	x0, [x8, #48]
  43135c:	mov	w8, wzr
  431360:	cbnz	w8, 431350 <argp_parse@@Base+0x800>
  431364:	b	431354 <argp_parse@@Base+0x804>
  431368:	stp	x29, x30, [sp, #-32]!
  43136c:	stp	x20, x19, [sp, #16]
  431370:	mov	x19, x2
  431374:	mov	x20, x1
  431378:	mov	w8, w0
  43137c:	cmn	w0, #0x3
  431380:	mov	w0, #0x7                   	// #7
  431384:	mov	x29, sp
  431388:	b.gt	4313a8 <argp_parse@@Base+0x858>
  43138c:	cmn	w8, #0x4
  431390:	b.eq	4313cc <argp_parse@@Base+0x87c>  // b.none
  431394:	cmn	w8, #0x3
  431398:	b.ne	431458 <argp_parse@@Base+0x908>  // b.any
  43139c:	ldr	x1, [x19, #80]
  4313a0:	mov	w2, #0x201                 	// #513
  4313a4:	b	4313c0 <argp_parse@@Base+0x870>
  4313a8:	cmn	w8, #0x2
  4313ac:	b.eq	431418 <argp_parse@@Base+0x8c8>  // b.none
  4313b0:	cmp	w8, #0x3f
  4313b4:	b.ne	431458 <argp_parse@@Base+0x908>  // b.any
  4313b8:	ldr	x1, [x19, #80]
  4313bc:	mov	w2, #0x27a                 	// #634
  4313c0:	mov	x0, x19
  4313c4:	bl	42e924 <argp_state_help@@Base>
  4313c8:	b	431454 <argp_parse@@Base+0x904>
  4313cc:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  4313d0:	add	x8, x8, #0xb2a
  4313d4:	cmp	x20, #0x0
  4313d8:	csel	x0, x8, x20, eq  // eq = none
  4313dc:	bl	404490 <atoi@plt>
  4313e0:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4313e4:	str	w0, [x19, #3488]
  4313e8:	ldr	w8, [x19, #3488]
  4313ec:	subs	w8, w8, #0x1
  4313f0:	str	w8, [x19, #3488]
  4313f4:	b.lt	431454 <argp_parse@@Base+0x904>  // b.tstop
  4313f8:	mov	w0, #0x1                   	// #1
  4313fc:	bl	404650 <sleep@plt>
  431400:	ldr	w8, [x19, #3488]
  431404:	sub	w9, w8, #0x1
  431408:	cmp	w8, #0x0
  43140c:	str	w9, [x19, #3488]
  431410:	b.gt	4313f8 <argp_parse@@Base+0x8a8>
  431414:	b	431454 <argp_parse@@Base+0x904>
  431418:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43141c:	mov	x0, x20
  431420:	str	x20, [x8, #1128]
  431424:	bl	432690 <argp_usage@@Base+0xa94>
  431428:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43142c:	str	x0, [x19, #64]
  431430:	str	x0, [x8, #1168]
  431434:	ldr	w8, [x19, #28]
  431438:	and	w8, w8, #0x3
  43143c:	cmp	w8, #0x1
  431440:	b.ne	431454 <argp_parse@@Base+0x904>  // b.any
  431444:	ldr	x8, [x19, #16]
  431448:	mov	w0, wzr
  43144c:	str	x20, [x8]
  431450:	b	431458 <argp_parse@@Base+0x908>
  431454:	mov	w0, wzr
  431458:	ldp	x20, x19, [sp, #16]
  43145c:	ldp	x29, x30, [sp], #32
  431460:	ret
  431464:	stp	x29, x30, [sp, #-32]!
  431468:	cmp	w0, #0x56
  43146c:	str	x19, [sp, #16]
  431470:	mov	x29, sp
  431474:	b.ne	4314a0 <argp_parse@@Base+0x950>  // b.any
  431478:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43147c:	ldr	x8, [x8, #3496]
  431480:	mov	x19, x2
  431484:	cbz	x8, 4314a8 <argp_parse@@Base+0x958>
  431488:	ldr	x0, [x19, #80]
  43148c:	mov	x1, x19
  431490:	blr	x8
  431494:	ldrb	w8, [x19, #28]
  431498:	tbnz	w8, #5, 4314d0 <argp_parse@@Base+0x980>
  43149c:	b	431514 <argp_parse@@Base+0x9c4>
  4314a0:	mov	w0, #0x7                   	// #7
  4314a4:	b	4314d4 <argp_parse@@Base+0x984>
  4314a8:	adrp	x8, 470000 <argp_program_version_hook@@Base+0x258>
  4314ac:	ldr	x3, [x8, #1032]
  4314b0:	cbz	x3, 4314e0 <argp_parse@@Base+0x990>
  4314b4:	ldr	x0, [x19, #80]
  4314b8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  4314bc:	add	x2, x2, #0x1e3
  4314c0:	mov	w1, #0x1                   	// #1
  4314c4:	bl	404910 <__fprintf_chk@plt>
  4314c8:	ldrb	w8, [x19, #28]
  4314cc:	tbz	w8, #5, 431514 <argp_parse@@Base+0x9c4>
  4314d0:	mov	w0, wzr
  4314d4:	ldr	x19, [sp, #16]
  4314d8:	ldp	x29, x30, [sp], #32
  4314dc:	ret
  4314e0:	ldr	x8, [x19]
  4314e4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4314e8:	add	x1, x1, #0xb45
  4314ec:	mov	w2, #0x5                   	// #5
  4314f0:	ldr	x0, [x8, #48]
  4314f4:	bl	404bf0 <dcgettext@plt>
  4314f8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4314fc:	mov	x2, x0
  431500:	add	x1, x1, #0x386
  431504:	mov	x0, x19
  431508:	bl	42e9cc <argp_error@@Base>
  43150c:	ldrb	w8, [x19, #28]
  431510:	tbnz	w8, #5, 4314d0 <argp_parse@@Base+0x980>
  431514:	mov	w0, wzr
  431518:	bl	4041c0 <exit@plt>
  43151c:	stp	x29, x30, [sp, #-48]!
  431520:	stp	x22, x21, [sp, #16]
  431524:	stp	x20, x19, [sp, #32]
  431528:	ldr	x20, [x0]
  43152c:	ldr	x21, [x0, #32]
  431530:	mov	x19, x1
  431534:	mov	x29, sp
  431538:	cbz	x20, 43158c <argp_parse@@Base+0xa3c>
  43153c:	ldr	x8, [x19, #16]
  431540:	mov	x0, x20
  431544:	add	x8, x8, #0x1
  431548:	str	x8, [x19, #16]
  43154c:	bl	431c64 <argp_usage@@Base+0x68>
  431550:	mov	w22, wzr
  431554:	cbnz	w0, 431570 <argp_parse@@Base+0xa20>
  431558:	add	x20, x20, #0x30
  43155c:	mov	x0, x20
  431560:	add	w22, w22, #0x1
  431564:	bl	431c64 <argp_usage@@Base+0x68>
  431568:	add	x20, x20, #0x30
  43156c:	cbz	w0, 43155c <argp_parse@@Base+0xa0c>
  431570:	ldr	x9, [x19]
  431574:	add	w10, w22, w22, lsl #1
  431578:	mov	x8, x19
  43157c:	add	x9, x9, x10
  431580:	str	x9, [x8], #8
  431584:	mov	w9, w22
  431588:	b	43159c <argp_parse@@Base+0xa4c>
  43158c:	ldr	x8, [x0, #8]
  431590:	cbz	x8, 4315a8 <argp_parse@@Base+0xa58>
  431594:	add	x8, x19, #0x10
  431598:	mov	w9, #0x1                   	// #1
  43159c:	ldr	x10, [x8]
  4315a0:	add	x9, x10, x9
  4315a4:	str	x9, [x8]
  4315a8:	cbz	x21, 4315d4 <argp_parse@@Base+0xa84>
  4315ac:	ldr	x0, [x21]
  4315b0:	cbz	x0, 4315d4 <argp_parse@@Base+0xa84>
  4315b4:	add	x20, x21, #0x20
  4315b8:	mov	x1, x19
  4315bc:	bl	43151c <argp_parse@@Base+0x9cc>
  4315c0:	ldr	x8, [x19, #24]
  4315c4:	add	x8, x8, #0x1
  4315c8:	str	x8, [x19, #24]
  4315cc:	ldr	x0, [x20], #32
  4315d0:	cbnz	x0, 4315b8 <argp_parse@@Base+0xa68>
  4315d4:	ldp	x20, x19, [sp, #32]
  4315d8:	ldp	x22, x21, [sp, #16]
  4315dc:	ldp	x29, x30, [sp], #48
  4315e0:	ret
  4315e4:	sub	sp, sp, #0x40
  4315e8:	stp	x29, x30, [sp, #32]
  4315ec:	ldr	x8, [x0, #8]
  4315f0:	str	x19, [sp, #48]
  4315f4:	mov	x19, x0
  4315f8:	add	x29, sp, #0x20
  4315fc:	stp	x0, x8, [sp]
  431600:	ldr	x8, [x0, #16]
  431604:	str	x8, [sp, #16]
  431608:	ldr	x8, [x0, #96]
  43160c:	str	x8, [sp, #24]
  431610:	tbnz	w2, #3, 431624 <argp_parse@@Base+0xad4>
  431614:	tbz	w2, #2, 431638 <argp_parse@@Base+0xae8>
  431618:	ldr	x8, [sp, #8]
  43161c:	mov	w9, #0x2b                  	// #43
  431620:	b	43162c <argp_parse@@Base+0xadc>
  431624:	ldr	x8, [sp, #8]
  431628:	mov	w9, #0x2d                  	// #45
  43162c:	add	x10, x8, #0x1
  431630:	str	x10, [sp, #8]
  431634:	strb	w9, [x8]
  431638:	ldr	x8, [sp, #8]
  43163c:	strb	wzr, [x8]
  431640:	ldr	x8, [sp, #16]
  431644:	str	xzr, [x8]
  431648:	str	x1, [x19]
  43164c:	cbz	x1, 431670 <argp_parse@@Base+0xb20>
  431650:	ldr	x3, [x19, #80]
  431654:	mov	x4, sp
  431658:	mov	x0, x1
  43165c:	mov	x1, xzr
  431660:	mov	w2, wzr
  431664:	bl	4316f0 <argp_parse@@Base+0xba0>
  431668:	str	x0, [x19, #88]
  43166c:	b	431678 <argp_parse@@Base+0xb28>
  431670:	ldr	x8, [x19, #80]
  431674:	str	x8, [x19, #88]
  431678:	ldr	x19, [sp, #48]
  43167c:	ldp	x29, x30, [sp, #32]
  431680:	add	sp, sp, #0x40
  431684:	ret
  431688:	stp	x29, x30, [sp, #-32]!
  43168c:	stp	x20, x19, [sp, #16]
  431690:	ldr	x8, [x0]
  431694:	mov	x29, sp
  431698:	cbz	x8, 4316e0 <argp_parse@@Base+0xb90>
  43169c:	ldr	x9, [x0, #64]
  4316a0:	mov	x20, x1
  4316a4:	mov	x19, x0
  4316a8:	str	x9, [x1, #56]
  4316ac:	ldr	x9, [x0, #48]
  4316b0:	str	x9, [x1, #40]
  4316b4:	ldr	x9, [x0, #56]
  4316b8:	str	x9, [x1, #48]
  4316bc:	ldr	w9, [x0, #24]
  4316c0:	mov	w0, w2
  4316c4:	mov	x2, x20
  4316c8:	str	w9, [x1, #32]
  4316cc:	mov	x1, x3
  4316d0:	blr	x8
  4316d4:	ldr	x8, [x20, #56]
  4316d8:	str	x8, [x19, #64]
  4316dc:	b	4316e4 <argp_parse@@Base+0xb94>
  4316e0:	mov	w0, #0x7                   	// #7
  4316e4:	ldp	x20, x19, [sp, #16]
  4316e8:	ldp	x29, x30, [sp], #32
  4316ec:	ret
  4316f0:	stp	x29, x30, [sp, #-96]!
  4316f4:	stp	x28, x27, [sp, #16]
  4316f8:	stp	x26, x25, [sp, #32]
  4316fc:	stp	x24, x23, [sp, #48]
  431700:	stp	x22, x21, [sp, #64]
  431704:	stp	x20, x19, [sp, #80]
  431708:	ldr	x24, [x0]
  43170c:	ldr	x25, [x0, #32]
  431710:	mov	x19, x4
  431714:	mov	x20, x3
  431718:	mov	w21, w2
  43171c:	mov	x23, x0
  431720:	mov	x22, x1
  431724:	mov	x29, sp
  431728:	cbz	x24, 431850 <argp_parse@@Base+0xd00>
  43172c:	mov	x0, x24
  431730:	bl	431c64 <argp_usage@@Base+0x68>
  431734:	cbnz	w0, 431858 <argp_parse@@Base+0xd08>
  431738:	mov	w28, #0x3a                  	// #58
  43173c:	mov	x26, x24
  431740:	b	431784 <argp_parse@@Base+0xc34>
  431744:	ldr	w10, [x27, #80]
  431748:	mov	w12, #0x39000000            	// #956301312
  43174c:	add	x11, x8, #0x20
  431750:	sub	w10, w20, w10
  431754:	lsr	w10, w10, #3
  431758:	mul	w10, w10, w12
  43175c:	bfxil	w10, w9, #0, #24
  431760:	mov	w9, #0x1000000             	// #16777216
  431764:	add	w9, w10, w9
  431768:	str	w9, [x8, #24]
  43176c:	str	x11, [x19, #16]
  431770:	str	xzr, [x8, #32]
  431774:	add	x24, x24, #0x30
  431778:	mov	x0, x24
  43177c:	bl	431c64 <argp_usage@@Base+0x68>
  431780:	cbnz	w0, 431858 <argp_parse@@Base+0xd08>
  431784:	ldrb	w8, [x24, #24]
  431788:	tst	w8, #0x4
  43178c:	csel	x26, x24, x26, eq  // eq = none
  431790:	ldrb	w8, [x26, #24]
  431794:	tbnz	w8, #3, 431774 <argp_parse@@Base+0xc24>
  431798:	mov	x0, x24
  43179c:	bl	431c1c <argp_usage@@Base+0x20>
  4317a0:	cbz	w0, 4317f0 <argp_parse@@Base+0xca0>
  4317a4:	ldr	x8, [x19, #8]
  4317a8:	ldr	w9, [x24, #8]
  4317ac:	add	x10, x8, #0x1
  4317b0:	str	x10, [x19, #8]
  4317b4:	strb	w9, [x8]
  4317b8:	ldr	x8, [x26, #16]
  4317bc:	cbz	x8, 4317e8 <argp_parse@@Base+0xc98>
  4317c0:	ldr	x8, [x19, #8]
  4317c4:	add	x9, x8, #0x1
  4317c8:	str	x9, [x19, #8]
  4317cc:	strb	w28, [x8]
  4317d0:	ldrb	w8, [x26, #24]
  4317d4:	tbz	w8, #0, 4317e8 <argp_parse@@Base+0xc98>
  4317d8:	ldr	x8, [x19, #8]
  4317dc:	add	x9, x8, #0x1
  4317e0:	str	x9, [x19, #8]
  4317e4:	strb	w28, [x8]
  4317e8:	ldr	x8, [x19, #8]
  4317ec:	strb	wzr, [x8]
  4317f0:	ldr	x1, [x24]
  4317f4:	cbz	x1, 431774 <argp_parse@@Base+0xc24>
  4317f8:	ldr	x27, [x19]
  4317fc:	ldr	x0, [x27, #16]
  431800:	bl	431910 <argp_parse@@Base+0xdc0>
  431804:	tbz	w0, #31, 431774 <argp_parse@@Base+0xc24>
  431808:	ldr	x8, [x24]
  43180c:	ldr	x9, [x19, #16]
  431810:	str	x8, [x9]
  431814:	ldr	x8, [x26, #16]
  431818:	cbz	x8, 431830 <argp_parse@@Base+0xce0>
  43181c:	ldrb	w8, [x26, #24]
  431820:	tst	w8, #0x1
  431824:	mov	w8, #0x1                   	// #1
  431828:	cinc	w9, w8, ne  // ne = any
  43182c:	b	431834 <argp_parse@@Base+0xce4>
  431830:	mov	w9, wzr
  431834:	ldr	x8, [x19, #16]
  431838:	str	w9, [x8, #8]
  43183c:	str	xzr, [x8, #16]
  431840:	ldr	w9, [x24, #8]
  431844:	cbnz	w9, 431744 <argp_parse@@Base+0xbf4>
  431848:	ldr	w9, [x26, #8]
  43184c:	b	431744 <argp_parse@@Base+0xbf4>
  431850:	ldr	x8, [x23, #8]
  431854:	cbz	x8, 431900 <argp_parse@@Base+0xdb0>
  431858:	ldr	x8, [x23, #8]
  43185c:	stp	x8, x23, [x20]
  431860:	ldr	x8, [x19, #8]
  431864:	str	wzr, [x20, #24]
  431868:	str	x22, [x20, #32]
  43186c:	str	w21, [x20, #40]
  431870:	stp	xzr, xzr, [x20, #56]
  431874:	str	x8, [x20, #16]
  431878:	str	xzr, [x20, #48]
  43187c:	cbz	x25, 4318a8 <argp_parse@@Base+0xd58>
  431880:	mov	w8, #0xffffffff            	// #-1
  431884:	add	w8, w8, #0x1
  431888:	lsl	x9, x8, #5
  43188c:	ldr	x9, [x25, x9]
  431890:	cbnz	x9, 431884 <argp_parse@@Base+0xd34>
  431894:	ldr	x9, [x19, #24]
  431898:	str	x9, [x20, #56]
  43189c:	ldr	x9, [x19, #24]
  4318a0:	add	x8, x9, w8, uxtw #3
  4318a4:	str	x8, [x19, #24]
  4318a8:	add	x3, x20, #0x48
  4318ac:	cbz	x25, 4318e0 <argp_parse@@Base+0xd90>
  4318b0:	ldr	x0, [x25]
  4318b4:	cbz	x0, 4318e0 <argp_parse@@Base+0xd90>
  4318b8:	mov	w2, wzr
  4318bc:	add	x21, x25, #0x20
  4318c0:	mov	x1, x20
  4318c4:	mov	x4, x19
  4318c8:	add	w22, w2, #0x1
  4318cc:	bl	4316f0 <argp_parse@@Base+0xba0>
  4318d0:	mov	x3, x0
  4318d4:	ldr	x0, [x21], #32
  4318d8:	mov	w2, w22
  4318dc:	cbnz	x0, 4318c0 <argp_parse@@Base+0xd70>
  4318e0:	ldp	x20, x19, [sp, #80]
  4318e4:	ldp	x22, x21, [sp, #64]
  4318e8:	ldp	x24, x23, [sp, #48]
  4318ec:	ldp	x26, x25, [sp, #32]
  4318f0:	ldp	x28, x27, [sp, #16]
  4318f4:	mov	x0, x3
  4318f8:	ldp	x29, x30, [sp], #96
  4318fc:	ret
  431900:	mov	x3, x20
  431904:	mov	x20, xzr
  431908:	cbnz	x25, 4318b0 <argp_parse@@Base+0xd60>
  43190c:	b	4318e0 <argp_parse@@Base+0xd90>
  431910:	stp	x29, x30, [sp, #-48]!
  431914:	stp	x20, x19, [sp, #32]
  431918:	mov	x19, x0
  43191c:	ldr	x0, [x0]
  431920:	str	x21, [sp, #16]
  431924:	mov	x20, x1
  431928:	mov	x21, x19
  43192c:	mov	x29, sp
  431930:	cbz	x0, 431958 <argp_parse@@Base+0xe08>
  431934:	mov	x21, x19
  431938:	b	431944 <argp_parse@@Base+0xdf4>
  43193c:	ldr	x0, [x21, #32]!
  431940:	cbz	x0, 431958 <argp_parse@@Base+0xe08>
  431944:	cbz	x20, 43193c <argp_parse@@Base+0xdec>
  431948:	mov	x1, x20
  43194c:	bl	404920 <strcmp@plt>
  431950:	cbnz	w0, 43193c <argp_parse@@Base+0xdec>
  431954:	b	431964 <argp_parse@@Base+0xe14>
  431958:	cbz	x20, 431964 <argp_parse@@Base+0xe14>
  43195c:	mov	w0, #0xffffffff            	// #-1
  431960:	b	43196c <argp_parse@@Base+0xe1c>
  431964:	sub	x8, x21, x19
  431968:	lsr	x0, x8, #5
  43196c:	ldp	x20, x19, [sp, #32]
  431970:	ldr	x21, [sp, #16]
  431974:	ldp	x29, x30, [sp], #48
  431978:	ret
  43197c:	stp	x29, x30, [sp, #-64]!
  431980:	str	x23, [sp, #16]
  431984:	stp	x22, x21, [sp, #32]
  431988:	stp	x20, x19, [sp, #48]
  43198c:	ldr	w23, [x0, #136]
  431990:	ldp	x20, x8, [x0, #80]
  431994:	mov	x19, x0
  431998:	mov	x29, sp
  43199c:	sub	w9, w23, #0x1
  4319a0:	cmp	x20, x8
  4319a4:	str	w9, [x0, #136]
  4319a8:	b.cs	431a30 <argp_parse@@Base+0xee0>  // b.hs, b.nlast
  4319ac:	mov	x21, x1
  4319b0:	add	x22, x19, #0x70
  4319b4:	ldr	w8, [x19, #136]
  4319b8:	mov	x0, x20
  4319bc:	mov	x1, x22
  4319c0:	mov	w2, wzr
  4319c4:	add	w8, w8, #0x1
  4319c8:	mov	x3, x21
  4319cc:	str	w8, [x19, #136]
  4319d0:	bl	431688 <argp_parse@@Base+0xb38>
  4319d4:	cmp	w0, #0x7
  4319d8:	b.ne	431a0c <argp_parse@@Base+0xebc>  // b.any
  4319dc:	ldr	w8, [x19, #136]
  4319e0:	mov	w2, #0x6                   	// #6
  4319e4:	movk	w2, #0x100, lsl #16
  4319e8:	mov	x0, x20
  4319ec:	sub	w8, w8, #0x1
  4319f0:	mov	x1, x22
  4319f4:	mov	x3, xzr
  4319f8:	str	w8, [x19, #136]
  4319fc:	bl	431688 <argp_parse@@Base+0xb38>
  431a00:	mov	w8, #0x6                   	// #6
  431a04:	movk	w8, #0x100, lsl #16
  431a08:	b	431a10 <argp_parse@@Base+0xec0>
  431a0c:	mov	w8, wzr
  431a10:	cmp	w0, #0x7
  431a14:	add	x20, x20, #0x48
  431a18:	b.ne	431a28 <argp_parse@@Base+0xed8>  // b.any
  431a1c:	ldr	x9, [x19, #88]
  431a20:	cmp	x20, x9
  431a24:	b.cc	4319b4 <argp_parse@@Base+0xe64>  // b.lo, b.ul, b.last
  431a28:	cbnz	w0, 431a7c <argp_parse@@Base+0xf2c>
  431a2c:	b	431a3c <argp_parse@@Base+0xeec>
  431a30:	mov	w8, wzr
  431a34:	mov	w0, #0x7                   	// #7
  431a38:	cbnz	w0, 431a7c <argp_parse@@Base+0xf2c>
  431a3c:	mov	w9, #0x6                   	// #6
  431a40:	movk	w9, #0x100, lsl #16
  431a44:	cmp	w8, w9
  431a48:	b.ne	431a54 <argp_parse@@Base+0xf04>  // b.any
  431a4c:	ldr	w8, [x19, #120]
  431a50:	str	w8, [x19, #136]
  431a54:	ldr	w8, [x19, #136]
  431a58:	subs	w8, w8, w23
  431a5c:	b.ge	431a6c <argp_parse@@Base+0xf1c>  // b.tcont
  431a60:	mov	w8, #0x1                   	// #1
  431a64:	str	w8, [x19, #104]
  431a68:	b	431a7c <argp_parse@@Base+0xf2c>
  431a6c:	ldur	w9, [x20, #-48]
  431a70:	add	w8, w8, w9
  431a74:	add	w8, w8, #0x1
  431a78:	stur	w8, [x20, #-48]
  431a7c:	ldp	x20, x19, [sp, #48]
  431a80:	ldp	x22, x21, [sp, #32]
  431a84:	ldr	x23, [sp, #16]
  431a88:	ldp	x29, x30, [sp], #64
  431a8c:	ret
  431a90:	stp	x29, x30, [sp, #-48]!
  431a94:	stp	x22, x21, [sp, #16]
  431a98:	stp	x20, x19, [sp, #32]
  431a9c:	mov	w20, w1
  431aa0:	asr	w22, w1, #24
  431aa4:	mov	x19, x0
  431aa8:	mov	x29, sp
  431aac:	cbz	w22, 431ae4 <argp_parse@@Base+0xf94>
  431ab0:	ldr	x8, [x19, #80]
  431ab4:	ldr	x3, [x19, #40]
  431ab8:	sbfx	w2, w20, #23, #1
  431abc:	sub	w9, w22, #0x1
  431ac0:	mov	w10, #0x48                  	// #72
  431ac4:	bfxil	w2, w20, #0, #24
  431ac8:	smaddl	x0, w9, w10, x8
  431acc:	add	x1, x19, #0x70
  431ad0:	bl	431688 <argp_parse@@Base+0xb38>
  431ad4:	mov	w21, w0
  431ad8:	cmp	w21, #0x7
  431adc:	b.ne	431bd8 <argp_parse@@Base+0x1088>  // b.any
  431ae0:	b	431b2c <argp_parse@@Base+0xfdc>
  431ae4:	ldr	x0, [x19, #8]
  431ae8:	mov	w1, w20
  431aec:	bl	404a70 <strchr@plt>
  431af0:	cbz	x0, 431b20 <argp_parse@@Base+0xfd0>
  431af4:	mov	x8, x0
  431af8:	ldp	x0, x9, [x19, #80]
  431afc:	cmp	x0, x9
  431b00:	b.cs	431b20 <argp_parse@@Base+0xfd0>  // b.hs, b.nlast
  431b04:	ldr	x9, [x0, #16]
  431b08:	cmp	x9, x8
  431b0c:	b.hi	431bec <argp_parse@@Base+0x109c>  // b.pmore
  431b10:	ldr	x9, [x19, #88]
  431b14:	add	x0, x0, #0x48
  431b18:	cmp	x0, x9
  431b1c:	b.cc	431b04 <argp_parse@@Base+0xfb4>  // b.lo, b.ul, b.last
  431b20:	mov	w21, #0x7                   	// #7
  431b24:	cmp	w21, #0x7
  431b28:	b.ne	431bd8 <argp_parse@@Base+0x1088>  // b.any
  431b2c:	cbz	w22, 431ba8 <argp_parse@@Base+0x1058>
  431b30:	ldr	x8, [x19, #16]
  431b34:	ldr	w9, [x8, #24]
  431b38:	cmp	w9, w20
  431b3c:	b.eq	431b60 <argp_parse@@Base+0x1010>  // b.none
  431b40:	ldr	x9, [x8]
  431b44:	cbz	x9, 431b60 <argp_parse@@Base+0x1010>
  431b48:	ldr	w10, [x8, #56]
  431b4c:	add	x9, x8, #0x20
  431b50:	mov	x8, x9
  431b54:	cmp	w10, w20
  431b58:	b.ne	431b40 <argp_parse@@Base+0xff0>  // b.any
  431b5c:	mov	x8, x9
  431b60:	ldr	x8, [x8]
  431b64:	ldr	x9, [x19], #112
  431b68:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  431b6c:	add	x1, x1, #0xa70
  431b70:	cmp	x8, #0x0
  431b74:	ldr	x0, [x9, #48]
  431b78:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  431b7c:	add	x9, x9, #0xb79
  431b80:	mov	w2, #0x5                   	// #5
  431b84:	csel	x20, x9, x8, eq  // eq = none
  431b88:	bl	404bf0 <dcgettext@plt>
  431b8c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  431b90:	mov	x3, x0
  431b94:	add	x1, x1, #0xb70
  431b98:	mov	x0, x19
  431b9c:	mov	x2, x20
  431ba0:	bl	42e9cc <argp_error@@Base>
  431ba4:	b	431bd8 <argp_parse@@Base+0x1088>
  431ba8:	ldr	x8, [x19], #112
  431bac:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  431bb0:	add	x1, x1, #0xa70
  431bb4:	mov	w2, #0x5                   	// #5
  431bb8:	ldr	x0, [x8, #48]
  431bbc:	bl	404bf0 <dcgettext@plt>
  431bc0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  431bc4:	mov	x3, x0
  431bc8:	add	x1, x1, #0xb68
  431bcc:	mov	x0, x19
  431bd0:	mov	w2, w20
  431bd4:	bl	42e9cc <argp_error@@Base>
  431bd8:	mov	w0, w21
  431bdc:	ldp	x20, x19, [sp, #32]
  431be0:	ldp	x22, x21, [sp, #16]
  431be4:	ldp	x29, x30, [sp], #48
  431be8:	ret
  431bec:	ldr	x3, [x19, #40]
  431bf0:	add	x1, x19, #0x70
  431bf4:	mov	w2, w20
  431bf8:	b	431ad0 <argp_parse@@Base+0xf80>

0000000000431bfc <argp_usage@@Base>:
  431bfc:	stp	x29, x30, [sp, #-16]!
  431c00:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431c04:	ldr	x1, [x8, #1136]
  431c08:	mov	w2, #0x106                 	// #262
  431c0c:	mov	x29, sp
  431c10:	bl	42e924 <argp_state_help@@Base>
  431c14:	ldp	x29, x30, [sp], #16
  431c18:	ret
  431c1c:	stp	x29, x30, [sp, #-32]!
  431c20:	ldrb	w8, [x0, #24]
  431c24:	str	x19, [sp, #16]
  431c28:	mov	x29, sp
  431c2c:	tbnz	w8, #3, 431c54 <argp_usage@@Base+0x58>
  431c30:	ldrsw	x19, [x0, #8]
  431c34:	sub	w8, w19, #0x1
  431c38:	cmp	w8, #0xfe
  431c3c:	b.hi	431c54 <argp_usage@@Base+0x58>  // b.pmore
  431c40:	bl	404950 <__ctype_b_loc@plt>
  431c44:	ldr	x8, [x0]
  431c48:	ldrh	w8, [x8, x19, lsl #1]
  431c4c:	ubfx	w0, w8, #14, #1
  431c50:	b	431c58 <argp_usage@@Base+0x5c>
  431c54:	mov	w0, wzr
  431c58:	ldr	x19, [sp, #16]
  431c5c:	ldp	x29, x30, [sp], #32
  431c60:	ret
  431c64:	ldr	w8, [x0, #8]
  431c68:	cbz	w8, 431c74 <argp_usage@@Base+0x78>
  431c6c:	mov	w0, wzr
  431c70:	ret
  431c74:	ldr	x8, [x0]
  431c78:	cbz	x8, 431c84 <argp_usage@@Base+0x88>
  431c7c:	mov	w0, wzr
  431c80:	ret
  431c84:	ldr	x8, [x0, #32]
  431c88:	cbz	x8, 431c94 <argp_usage@@Base+0x98>
  431c8c:	mov	w0, wzr
  431c90:	ret
  431c94:	ldr	w8, [x0, #40]
  431c98:	cmp	w8, #0x0
  431c9c:	cset	w0, eq  // eq = none
  431ca0:	ret
  431ca4:	adrp	x9, 431000 <argp_parse@@Base+0x4b0>
  431ca8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431cac:	add	x9, x9, #0xcc8
  431cb0:	adrp	x10, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431cb4:	adrp	x11, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431cb8:	str	x9, [x8, #3496]
  431cbc:	str	x0, [x10, #3504]
  431cc0:	str	x1, [x11, #3512]
  431cc4:	ret
  431cc8:	stp	x29, x30, [sp, #-16]!
  431ccc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431cd0:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431cd4:	ldr	x1, [x8, #3504]
  431cd8:	ldr	x4, [x9, #3512]
  431cdc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x12da0>
  431ce0:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x12da0>
  431ce4:	add	x2, x2, #0xd3a
  431ce8:	add	x3, x3, #0xd94
  431cec:	mov	x29, sp
  431cf0:	bl	43d010 <argp_usage@@Base+0xb414>
  431cf4:	ldp	x29, x30, [sp], #16
  431cf8:	ret
  431cfc:	stp	x29, x30, [sp, #-32]!
  431d00:	stp	x20, x19, [sp, #16]
  431d04:	mov	x19, x0
  431d08:	mov	x29, sp
  431d0c:	cbz	x0, 431d38 <argp_usage@@Base+0x13c>
  431d10:	cbz	x19, 431d4c <argp_usage@@Base+0x150>
  431d14:	ldrb	w8, [x19]
  431d18:	adrp	x20, 453000 <_obstack_memory_used@@Base+0x14da0>
  431d1c:	add	x20, x20, #0x194
  431d20:	cbz	w8, 431d54 <argp_usage@@Base+0x158>
  431d24:	mov	x0, x19
  431d28:	bl	432690 <argp_usage@@Base+0xa94>
  431d2c:	cmp	x19, x0
  431d30:	csel	x20, x19, x20, eq  // eq = none
  431d34:	b	431d54 <argp_usage@@Base+0x158>
  431d38:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  431d3c:	add	x0, x0, #0x424
  431d40:	bl	404d30 <getenv@plt>
  431d44:	mov	x19, x0
  431d48:	cbnz	x19, 431d14 <argp_usage@@Base+0x118>
  431d4c:	adrp	x20, 453000 <_obstack_memory_used@@Base+0x14da0>
  431d50:	add	x20, x20, #0x194
  431d54:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431d58:	str	x20, [x8, #3520]
  431d5c:	ldp	x20, x19, [sp, #16]
  431d60:	ldp	x29, x30, [sp], #32
  431d64:	ret
  431d68:	sub	sp, sp, #0x90
  431d6c:	str	w0, [sp, #12]
  431d70:	mov	x0, x1
  431d74:	stp	x29, x30, [sp, #48]
  431d78:	stp	x28, x27, [sp, #64]
  431d7c:	stp	x26, x25, [sp, #80]
  431d80:	stp	x24, x23, [sp, #96]
  431d84:	stp	x22, x21, [sp, #112]
  431d88:	stp	x20, x19, [sp, #128]
  431d8c:	add	x29, sp, #0x30
  431d90:	mov	w19, w3
  431d94:	mov	w24, w2
  431d98:	mov	x20, x1
  431d9c:	bl	432690 <argp_usage@@Base+0xa94>
  431da0:	sub	x22, x0, x20
  431da4:	bl	404190 <strlen@plt>
  431da8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431dac:	ldr	x8, [x21, #3520]
  431db0:	add	x23, x22, x0
  431db4:	cbnz	x8, 431dc0 <argp_usage@@Base+0x1c4>
  431db8:	mov	x0, xzr
  431dbc:	bl	431cfc <argp_usage@@Base+0x100>
  431dc0:	ldr	x0, [x21, #3520]
  431dc4:	bl	404190 <strlen@plt>
  431dc8:	add	x25, x0, #0x1
  431dcc:	cmp	x25, #0x9
  431dd0:	mov	w8, #0x9                   	// #9
  431dd4:	csinc	x8, x8, x0, ls  // ls = plast
  431dd8:	add	x8, x23, x8
  431ddc:	add	x0, x8, #0x1
  431de0:	str	x0, [sp]
  431de4:	bl	4044f0 <malloc@plt>
  431de8:	stur	x0, [x29, #-8]
  431dec:	cbz	x0, 431f70 <argp_usage@@Base+0x374>
  431df0:	mov	w8, #0xffffffff            	// #-1
  431df4:	add	x27, x23, #0x1
  431df8:	stur	xzr, [x29, #-16]
  431dfc:	str	xzr, [sp, #16]
  431e00:	stur	w8, [x29, #-20]
  431e04:	b	431e10 <argp_usage@@Base+0x214>
  431e08:	mov	w8, #0x3                   	// #3
  431e0c:	cbnz	w8, 431f30 <argp_usage@@Base+0x334>
  431e10:	ldur	x21, [x29, #-8]
  431e14:	mov	x1, x20
  431e18:	mov	x2, x27
  431e1c:	mov	x0, x21
  431e20:	bl	404110 <memcpy@plt>
  431e24:	cmp	w24, #0x1
  431e28:	b.ne	431e44 <argp_usage@@Base+0x248>  // b.any
  431e2c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431e30:	ldr	x1, [x8, #3520]
  431e34:	add	x0, x21, x23
  431e38:	mov	x2, x25
  431e3c:	bl	404110 <memcpy@plt>
  431e40:	b	431eb8 <argp_usage@@Base+0x2bc>
  431e44:	ldr	w0, [sp, #12]
  431e48:	ldr	x2, [sp]
  431e4c:	sub	x1, x29, #0x8
  431e50:	sub	x5, x29, #0x10
  431e54:	sub	x6, x29, #0x14
  431e58:	mov	x3, x23
  431e5c:	mov	x4, x22
  431e60:	bl	431f90 <argp_usage@@Base+0x394>
  431e64:	cmp	w0, #0x1
  431e68:	b.eq	431ea4 <argp_usage@@Base+0x2a8>  // b.none
  431e6c:	cmp	w0, #0x2
  431e70:	b.eq	431e80 <argp_usage@@Base+0x284>  // b.none
  431e74:	cmp	w0, #0x3
  431e78:	b.ne	431eb8 <argp_usage@@Base+0x2bc>  // b.any
  431e7c:	b	431f4c <argp_usage@@Base+0x350>
  431e80:	cmp	w24, #0x2
  431e84:	b.ne	431ea4 <argp_usage@@Base+0x2a8>  // b.any
  431e88:	ldur	x8, [x29, #-8]
  431e8c:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  431e90:	ldr	x1, [x9, #3520]
  431e94:	mov	x2, x25
  431e98:	add	x0, x8, x23
  431e9c:	bl	404110 <memcpy@plt>
  431ea0:	mov	w24, #0x1                   	// #1
  431ea4:	ldur	x0, [x29, #-8]
  431ea8:	ldur	w2, [x29, #-20]
  431eac:	add	x3, sp, #0x10
  431eb0:	mov	x1, x23
  431eb4:	bl	43229c <argp_usage@@Base+0x6a0>
  431eb8:	tbz	w19, #0, 431f38 <argp_usage@@Base+0x33c>
  431ebc:	ldur	w8, [x29, #-20]
  431ec0:	tbz	w8, #31, 431ed0 <argp_usage@@Base+0x2d4>
  431ec4:	mov	x22, xzr
  431ec8:	mov	w8, #0xffffff9c            	// #-100
  431ecc:	stur	w8, [x29, #-20]
  431ed0:	ldur	x28, [x29, #-8]
  431ed4:	ldur	w2, [x29, #-20]
  431ed8:	cmp	w24, #0x1
  431edc:	cset	w4, ne  // ne = any
  431ee0:	add	x3, x28, x22
  431ee4:	mov	w0, #0xffffff9c            	// #-100
  431ee8:	mov	x1, x20
  431eec:	bl	43c564 <argp_usage@@Base+0xa968>
  431ef0:	cbz	w0, 431e08 <argp_usage@@Base+0x20c>
  431ef4:	bl	404d00 <__errno_location@plt>
  431ef8:	ldr	w26, [x0]
  431efc:	cmp	w26, #0x11
  431f00:	b.ne	431f0c <argp_usage@@Base+0x310>  // b.any
  431f04:	mov	w8, wzr
  431f08:	b	431e0c <argp_usage@@Base+0x210>
  431f0c:	mov	x21, x0
  431f10:	ldur	x0, [x29, #-16]
  431f14:	cbz	x0, 431f1c <argp_usage@@Base+0x320>
  431f18:	bl	404790 <closedir@plt>
  431f1c:	mov	x0, x28
  431f20:	bl	4049d0 <free@plt>
  431f24:	mov	w8, #0x1                   	// #1
  431f28:	str	w26, [x21]
  431f2c:	b	431e0c <argp_usage@@Base+0x210>
  431f30:	cmp	w8, #0x3
  431f34:	b.ne	431f6c <argp_usage@@Base+0x370>  // b.any
  431f38:	ldur	x0, [x29, #-16]
  431f3c:	cbz	x0, 431f44 <argp_usage@@Base+0x348>
  431f40:	bl	404790 <closedir@plt>
  431f44:	ldur	x0, [x29, #-8]
  431f48:	b	431f70 <argp_usage@@Base+0x374>
  431f4c:	ldur	x0, [x29, #-8]
  431f50:	bl	4049d0 <free@plt>
  431f54:	bl	404d00 <__errno_location@plt>
  431f58:	mov	x8, x0
  431f5c:	mov	w9, #0xc                   	// #12
  431f60:	mov	x0, xzr
  431f64:	str	w9, [x8]
  431f68:	b	431f70 <argp_usage@@Base+0x374>
  431f6c:	mov	x0, xzr
  431f70:	ldp	x20, x19, [sp, #128]
  431f74:	ldp	x22, x21, [sp, #112]
  431f78:	ldp	x24, x23, [sp, #96]
  431f7c:	ldp	x26, x25, [sp, #80]
  431f80:	ldp	x28, x27, [sp, #64]
  431f84:	ldp	x29, x30, [sp, #48]
  431f88:	add	sp, sp, #0x90
  431f8c:	ret
  431f90:	sub	sp, sp, #0xa0
  431f94:	stp	x29, x30, [sp, #64]
  431f98:	stp	x28, x27, [sp, #80]
  431f9c:	stp	x26, x25, [sp, #96]
  431fa0:	stp	x24, x23, [sp, #112]
  431fa4:	stp	x22, x21, [sp, #128]
  431fa8:	stp	x20, x19, [sp, #144]
  431fac:	ldr	x22, [x1]
  431fb0:	ldr	x25, [x5]
  431fb4:	add	x29, sp, #0x40
  431fb8:	mov	w28, w0
  431fbc:	add	x27, x22, x4
  431fc0:	mov	x0, x27
  431fc4:	mov	x26, x6
  431fc8:	mov	x23, x5
  431fcc:	mov	x20, x4
  431fd0:	mov	x21, x3
  431fd4:	stur	x2, [x29, #-24]
  431fd8:	mov	x19, x1
  431fdc:	bl	4326dc <argp_usage@@Base+0xae0>
  431fe0:	mov	x24, x0
  431fe4:	cbz	x25, 431ff8 <argp_usage@@Base+0x3fc>
  431fe8:	mov	x0, x25
  431fec:	bl	404960 <rewinddir@plt>
  431ff0:	mov	w26, #0x2                   	// #2
  431ff4:	b	43205c <argp_usage@@Base+0x460>
  431ff8:	ldrh	w8, [x27]
  431ffc:	mov	w9, #0x2e                  	// #46
  432000:	mov	w0, w28
  432004:	mov	x1, x22
  432008:	mov	w2, wzr
  43200c:	mov	x3, x26
  432010:	sturh	w8, [x29, #-4]
  432014:	strh	w9, [x27]
  432018:	bl	436f34 <argp_usage@@Base+0x5338>
  43201c:	mov	x25, x0
  432020:	mov	w26, #0x2                   	// #2
  432024:	cbnz	x0, 432038 <argp_usage@@Base+0x43c>
  432028:	bl	404d00 <__errno_location@plt>
  43202c:	ldr	w8, [x0]
  432030:	cmp	w8, #0xc
  432034:	cinc	w26, w26, eq  // eq = none
  432038:	ldurh	w8, [x29, #-4]
  43203c:	mov	w10, #0x7e2e                	// #32302
  432040:	add	x9, x27, x24
  432044:	movk	w10, #0x7e31, lsl #16
  432048:	strh	w8, [x27]
  43204c:	strb	wzr, [x9, #4]
  432050:	str	w10, [x9]
  432054:	cbz	x25, 432278 <argp_usage@@Base+0x67c>
  432058:	str	x25, [x23]
  43205c:	mov	x0, x25
  432060:	bl	404720 <readdir@plt>
  432064:	stur	x19, [x29, #-16]
  432068:	cbz	x0, 43225c <argp_usage@@Base+0x660>
  43206c:	add	x8, x21, #0x4
  432070:	mov	x23, x0
  432074:	add	x19, x24, #0x4
  432078:	add	x27, x24, #0x2
  43207c:	stp	x8, x21, [sp, #8]
  432080:	mov	w8, #0x1                   	// #1
  432084:	str	x8, [sp, #24]
  432088:	stur	w26, [x29, #-28]
  43208c:	add	x28, x23, #0x13
  432090:	mov	x0, x28
  432094:	bl	404190 <strlen@plt>
  432098:	cmp	x0, x19
  43209c:	b.cc	432138 <argp_usage@@Base+0x53c>  // b.lo, b.ul, b.last
  4320a0:	add	x0, x22, x20
  4320a4:	mov	x1, x28
  4320a8:	mov	x2, x27
  4320ac:	bl	4046d0 <bcmp@plt>
  4320b0:	cbnz	w0, 432138 <argp_usage@@Base+0x53c>
  4320b4:	add	x28, x23, x24
  4320b8:	ldrb	w9, [x28, #21]!
  4320bc:	sub	w8, w9, #0x31
  4320c0:	cmp	w8, #0x8
  4320c4:	b.hi	432138 <argp_usage@@Base+0x53c>  // b.pmore
  4320c8:	sub	x8, x28, #0x2
  4320cc:	ldrb	w8, [x8, #3]
  4320d0:	cmp	w9, #0x39
  4320d4:	cset	w21, eq  // eq = none
  4320d8:	sub	w9, w8, #0x30
  4320dc:	cmp	w9, #0x9
  4320e0:	b.hi	432120 <argp_usage@@Base+0x524>  // b.pmore
  4320e4:	add	x9, x23, x24
  4320e8:	mov	w10, #0x17                  	// #23
  4320ec:	and	w11, w8, #0xff
  4320f0:	ldrb	w8, [x9, x10]
  4320f4:	cmp	w11, #0x39
  4320f8:	cset	w11, eq  // eq = none
  4320fc:	and	w21, w21, w11
  432100:	sub	w11, w8, #0x30
  432104:	cmp	w11, #0xa
  432108:	add	x10, x10, #0x1
  43210c:	b.cc	4320ec <argp_usage@@Base+0x4f0>  // b.lo, b.ul, b.last
  432110:	sub	x23, x10, #0x16
  432114:	cmp	w8, #0x7e
  432118:	b.eq	43212c <argp_usage@@Base+0x530>  // b.none
  43211c:	b	432138 <argp_usage@@Base+0x53c>
  432120:	mov	w23, #0x1                   	// #1
  432124:	cmp	w8, #0x7e
  432128:	b.ne	432138 <argp_usage@@Base+0x53c>  // b.any
  43212c:	add	x8, x23, x28
  432130:	ldrb	w8, [x8, #1]
  432134:	cbz	w8, 432164 <argp_usage@@Base+0x568>
  432138:	mov	w8, #0x2                   	// #2
  43213c:	mov	w21, w26
  432140:	orr	w8, w8, #0x2
  432144:	cmp	w8, #0x2
  432148:	b.ne	432270 <argp_usage@@Base+0x674>  // b.any
  43214c:	mov	x0, x25
  432150:	bl	404720 <readdir@plt>
  432154:	mov	x23, x0
  432158:	mov	w26, w21
  43215c:	cbnz	x0, 43208c <argp_usage@@Base+0x490>
  432160:	b	432260 <argp_usage@@Base+0x664>
  432164:	ldr	x8, [sp, #24]
  432168:	cmp	x8, x23
  43216c:	b.cc	432194 <argp_usage@@Base+0x598>  // b.lo, b.ul, b.last
  432170:	b.ne	432138 <argp_usage@@Base+0x53c>  // b.any
  432174:	ldr	x8, [sp, #16]
  432178:	mov	x1, x28
  43217c:	mov	x2, x23
  432180:	add	x8, x22, x8
  432184:	add	x0, x8, #0x2
  432188:	bl	4048e0 <memcmp@plt>
  43218c:	cmp	w0, #0x0
  432190:	b.gt	432138 <argp_usage@@Base+0x53c>
  432194:	ldr	x8, [sp, #8]
  432198:	add	x9, x23, x21
  43219c:	str	x9, [sp, #24]
  4321a0:	add	x8, x8, x9
  4321a4:	ldur	x9, [x29, #-24]
  4321a8:	cmp	x9, x8
  4321ac:	b.cs	4321fc <argp_usage@@Base+0x600>  // b.hs, b.nlast
  4321b0:	lsr	x9, x8, #62
  4321b4:	cmp	x9, #0x0
  4321b8:	cset	w9, eq  // eq = none
  4321bc:	lsl	x26, x8, x9
  4321c0:	mov	x0, x22
  4321c4:	mov	x1, x26
  4321c8:	bl	404730 <realloc@plt>
  4321cc:	cbz	x0, 4321e4 <argp_usage@@Base+0x5e8>
  4321d0:	mov	w8, wzr
  4321d4:	mov	x22, x0
  4321d8:	stur	x26, [x29, #-24]
  4321dc:	cbnz	w8, 432140 <argp_usage@@Base+0x544>
  4321e0:	b	4321fc <argp_usage@@Base+0x600>
  4321e4:	ldur	x8, [x29, #-16]
  4321e8:	str	x22, [x8]
  4321ec:	mov	w8, #0x3                   	// #3
  4321f0:	stur	w8, [x29, #-28]
  4321f4:	mov	w8, #0x1                   	// #1
  4321f8:	cbnz	w8, 432140 <argp_usage@@Base+0x544>
  4321fc:	ldr	x9, [sp, #16]
  432200:	mov	w10, #0x7e2e                	// #32302
  432204:	add	x2, x23, #0x2
  432208:	mov	x1, x28
  43220c:	add	x8, x22, x9
  432210:	strh	w10, [x22, x9]
  432214:	mov	w9, #0x30                  	// #48
  432218:	strb	w9, [x8, #2]!
  43221c:	add	x26, x8, x21
  432220:	mov	x0, x26
  432224:	bl	404110 <memcpy@plt>
  432228:	add	x9, x26, x23
  43222c:	ldrb	w10, [x9, #-1]!
  432230:	cmp	w10, #0x39
  432234:	b.ne	43224c <argp_usage@@Base+0x650>  // b.any
  432238:	mov	w8, #0x30                  	// #48
  43223c:	strb	w8, [x9]
  432240:	ldrb	w10, [x9, #-1]!
  432244:	cmp	w10, #0x39
  432248:	b.eq	43223c <argp_usage@@Base+0x640>  // b.none
  43224c:	mov	w8, wzr
  432250:	add	w10, w10, #0x1
  432254:	strb	w10, [x9]
  432258:	b	432140 <argp_usage@@Base+0x544>
  43225c:	mov	w21, w26
  432260:	ldur	x8, [x29, #-16]
  432264:	mov	w0, w21
  432268:	str	x22, [x8]
  43226c:	b	43227c <argp_usage@@Base+0x680>
  432270:	ldur	w0, [x29, #-28]
  432274:	b	43227c <argp_usage@@Base+0x680>
  432278:	mov	w0, w26
  43227c:	ldp	x20, x19, [sp, #144]
  432280:	ldp	x22, x21, [sp, #128]
  432284:	ldp	x24, x23, [sp, #112]
  432288:	ldp	x26, x25, [sp, #96]
  43228c:	ldp	x28, x27, [sp, #80]
  432290:	ldp	x29, x30, [sp, #64]
  432294:	add	sp, sp, #0xa0
  432298:	ret
  43229c:	stp	x29, x30, [sp, #-80]!
  4322a0:	str	x25, [sp, #16]
  4322a4:	stp	x24, x23, [sp, #32]
  4322a8:	stp	x22, x21, [sp, #48]
  4322ac:	stp	x20, x19, [sp, #64]
  4322b0:	mov	x29, sp
  4322b4:	mov	x22, x3
  4322b8:	mov	w24, w2
  4322bc:	mov	x20, x1
  4322c0:	mov	x21, x0
  4322c4:	bl	432690 <argp_usage@@Base+0xa94>
  4322c8:	mov	x19, x0
  4322cc:	bl	4326dc <argp_usage@@Base+0xae0>
  4322d0:	mov	x23, x0
  4322d4:	cmp	x0, #0xf
  4322d8:	b.cc	432314 <argp_usage@@Base+0x718>  // b.lo, b.ul, b.last
  4322dc:	ldr	x8, [x22]
  4322e0:	cbnz	x8, 43237c <argp_usage@@Base+0x780>
  4322e4:	tbnz	w24, #31, 432324 <argp_usage@@Base+0x728>
  4322e8:	bl	404d00 <__errno_location@plt>
  4322ec:	mov	x25, x0
  4322f0:	str	wzr, [x0]
  4322f4:	mov	w1, #0x3                   	// #3
  4322f8:	mov	w0, w24
  4322fc:	bl	4048c0 <fpathconf@plt>
  432300:	ldr	w8, [x25]
  432304:	cmp	w8, #0x0
  432308:	cset	w8, eq  // eq = none
  43230c:	sub	x8, x0, x8
  432310:	b	432364 <argp_usage@@Base+0x768>
  432314:	mov	w8, #0xff                  	// #255
  432318:	cmp	x8, x23
  43231c:	b.cc	432388 <argp_usage@@Base+0x78c>  // b.lo, b.ul, b.last
  432320:	b	4323a4 <argp_usage@@Base+0x7a8>
  432324:	ldrh	w8, [x19]
  432328:	mov	w9, #0x2e                  	// #46
  43232c:	strh	w8, [x29, #28]
  432330:	strh	w9, [x19]
  432334:	bl	404d00 <__errno_location@plt>
  432338:	mov	x24, x0
  43233c:	str	wzr, [x0]
  432340:	mov	w1, #0x3                   	// #3
  432344:	mov	x0, x21
  432348:	bl	404370 <pathconf@plt>
  43234c:	ldr	w8, [x24]
  432350:	ldrh	w9, [x29, #28]
  432354:	cmp	w8, #0x0
  432358:	cset	w8, eq  // eq = none
  43235c:	sub	x8, x0, x8
  432360:	strh	w9, [x19]
  432364:	cmn	x8, #0x1
  432368:	mov	w9, #0xe                   	// #14
  43236c:	csinv	x9, x9, xzr, ne  // ne = any
  432370:	cmp	x8, #0x0
  432374:	csel	x8, x8, x9, ge  // ge = tcont
  432378:	str	x8, [x22]
  43237c:	ldr	x8, [x22]
  432380:	cmp	x8, x23
  432384:	b.cs	4323a4 <argp_usage@@Base+0x7a8>  // b.hs, b.nlast
  432388:	add	x9, x21, x20
  43238c:	sub	x9, x9, x19
  432390:	sub	x10, x8, #0x1
  432394:	cmp	x8, x9
  432398:	csel	x8, x9, x10, hi  // hi = pmore
  43239c:	mov	w9, #0x7e                  	// #126
  4323a0:	strh	w9, [x19, x8]
  4323a4:	ldp	x20, x19, [sp, #64]
  4323a8:	ldp	x22, x21, [sp, #48]
  4323ac:	ldp	x24, x23, [sp, #32]
  4323b0:	ldr	x25, [sp, #16]
  4323b4:	ldp	x29, x30, [sp], #80
  4323b8:	ret
  4323bc:	stp	x29, x30, [sp, #-16]!
  4323c0:	mov	w3, wzr
  4323c4:	mov	x29, sp
  4323c8:	bl	431d68 <argp_usage@@Base+0x16c>
  4323cc:	cbz	x0, 4323d8 <argp_usage@@Base+0x7dc>
  4323d0:	ldp	x29, x30, [sp], #16
  4323d4:	ret
  4323d8:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  4323dc:	stp	x29, x30, [sp, #-32]!
  4323e0:	str	x19, [sp, #16]
  4323e4:	mov	x29, sp
  4323e8:	cbz	x1, 432420 <argp_usage@@Base+0x824>
  4323ec:	ldrb	w8, [x1]
  4323f0:	cbz	w8, 432420 <argp_usage@@Base+0x824>
  4323f4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4323f8:	ldr	x5, [x8, #960]
  4323fc:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x18da0>
  432400:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  432404:	add	x19, x19, #0xba0
  432408:	add	x2, x2, #0xbc0
  43240c:	mov	w4, #0x4                   	// #4
  432410:	mov	x3, x19
  432414:	bl	42e4c8 <wcrtomb@plt+0x296a8>
  432418:	ldr	w0, [x19, x0, lsl #2]
  43241c:	b	432424 <argp_usage@@Base+0x828>
  432420:	mov	w0, #0x2                   	// #2
  432424:	ldr	x19, [sp, #16]
  432428:	ldp	x29, x30, [sp], #32
  43242c:	ret
  432430:	stp	x29, x30, [sp, #-16]!
  432434:	mov	x29, sp
  432438:	cbz	x1, 432444 <argp_usage@@Base+0x848>
  43243c:	ldrb	w8, [x1]
  432440:	cbnz	w8, 43245c <argp_usage@@Base+0x860>
  432444:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  432448:	add	x0, x0, #0xc09
  43244c:	bl	404d30 <getenv@plt>
  432450:	mov	x1, x0
  432454:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  432458:	add	x0, x0, #0xc08
  43245c:	bl	4323dc <argp_usage@@Base+0x7e0>
  432460:	ldp	x29, x30, [sp], #16
  432464:	ret
  432468:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43246c:	str	x0, [x8, #3528]
  432470:	ret
  432474:	and	w8, w0, #0x1
  432478:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43247c:	strb	w8, [x9, #3536]
  432480:	ret
  432484:	stp	x29, x30, [sp, #-48]!
  432488:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43248c:	ldr	x0, [x8, #1144]
  432490:	str	x21, [sp, #16]
  432494:	stp	x20, x19, [sp, #32]
  432498:	mov	x29, sp
  43249c:	bl	44c0dc <_obstack_memory_used@@Base+0xde7c>
  4324a0:	cbz	w0, 4324c0 <argp_usage@@Base+0x8c4>
  4324a4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4324a8:	ldrb	w8, [x8, #3536]
  4324ac:	cbz	w8, 4324e0 <argp_usage@@Base+0x8e4>
  4324b0:	bl	404d00 <__errno_location@plt>
  4324b4:	ldr	w8, [x0]
  4324b8:	cmp	w8, #0x20
  4324bc:	b.ne	4324e0 <argp_usage@@Base+0x8e4>  // b.any
  4324c0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4324c4:	ldr	x0, [x8, #1136]
  4324c8:	bl	44c0dc <_obstack_memory_used@@Base+0xde7c>
  4324cc:	cbnz	w0, 43254c <argp_usage@@Base+0x950>
  4324d0:	ldp	x20, x19, [sp, #32]
  4324d4:	ldr	x21, [sp, #16]
  4324d8:	ldp	x29, x30, [sp], #48
  4324dc:	ret
  4324e0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4324e4:	add	x1, x1, #0xc40
  4324e8:	mov	w2, #0x5                   	// #5
  4324ec:	mov	x0, xzr
  4324f0:	bl	404bf0 <dcgettext@plt>
  4324f4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4324f8:	ldr	x21, [x8, #3528]
  4324fc:	mov	x19, x0
  432500:	bl	404d00 <__errno_location@plt>
  432504:	ldr	w20, [x0]
  432508:	cbnz	x21, 432528 <argp_usage@@Base+0x92c>
  43250c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  432510:	add	x2, x2, #0x386
  432514:	mov	w0, wzr
  432518:	mov	w1, w20
  43251c:	mov	x3, x19
  432520:	bl	4041f0 <error@plt>
  432524:	b	43254c <argp_usage@@Base+0x950>
  432528:	mov	x0, x21
  43252c:	bl	43beac <argp_usage@@Base+0xa2b0>
  432530:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x13da0>
  432534:	mov	x3, x0
  432538:	add	x2, x2, #0x5d1
  43253c:	mov	w0, wzr
  432540:	mov	w1, w20
  432544:	mov	x4, x19
  432548:	bl	4041f0 <error@plt>
  43254c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  432550:	ldr	w0, [x8, #1008]
  432554:	bl	404130 <_exit@plt>
  432558:	stp	x29, x30, [sp, #-16]!
  43255c:	mov	x29, sp
  432560:	bl	432624 <argp_usage@@Base+0xa28>
  432564:	cbz	x0, 432570 <argp_usage@@Base+0x974>
  432568:	ldp	x29, x30, [sp], #16
  43256c:	ret
  432570:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  432574:	stp	x29, x30, [sp, #-32]!
  432578:	stp	x20, x19, [sp, #16]
  43257c:	mov	x29, sp
  432580:	mov	x19, x0
  432584:	bl	432690 <argp_usage@@Base+0xa94>
  432588:	ldrb	w8, [x0]
  43258c:	cbz	w8, 4325ac <argp_usage@@Base+0x9b0>
  432590:	mov	x20, x0
  432594:	bl	4326dc <argp_usage@@Base+0xae0>
  432598:	ldrb	w8, [x20, x0]
  43259c:	cmp	w8, #0x2f
  4325a0:	cinc	x1, x0, eq  // eq = none
  4325a4:	mov	x0, x20
  4325a8:	b	4325bc <argp_usage@@Base+0x9c0>
  4325ac:	mov	x0, x19
  4325b0:	bl	4326dc <argp_usage@@Base+0xae0>
  4325b4:	mov	x1, x0
  4325b8:	mov	x0, x19
  4325bc:	bl	43d40c <argp_usage@@Base+0xb810>
  4325c0:	ldp	x20, x19, [sp, #16]
  4325c4:	ldp	x29, x30, [sp], #32
  4325c8:	ret
  4325cc:	stp	x29, x30, [sp, #-48]!
  4325d0:	str	x21, [sp, #16]
  4325d4:	stp	x20, x19, [sp, #32]
  4325d8:	mov	x20, x0
  4325dc:	ldrb	w8, [x20], #-1
  4325e0:	mov	x29, sp
  4325e4:	mov	x19, x0
  4325e8:	cmp	w8, #0x2f
  4325ec:	cset	w21, eq  // eq = none
  4325f0:	bl	432690 <argp_usage@@Base+0xa94>
  4325f4:	sub	x8, x0, x19
  4325f8:	mov	x0, x8
  4325fc:	cmp	x8, x21
  432600:	b.ls	432614 <argp_usage@@Base+0xa18>  // b.plast
  432604:	ldrb	w8, [x20, x0]
  432608:	cmp	w8, #0x2f
  43260c:	sub	x8, x0, #0x1
  432610:	b.eq	4325f8 <argp_usage@@Base+0x9fc>  // b.none
  432614:	ldp	x20, x19, [sp, #32]
  432618:	ldr	x21, [sp, #16]
  43261c:	ldp	x29, x30, [sp], #48
  432620:	ret
  432624:	stp	x29, x30, [sp, #-48]!
  432628:	str	x21, [sp, #16]
  43262c:	stp	x20, x19, [sp, #32]
  432630:	mov	x29, sp
  432634:	mov	x21, x0
  432638:	bl	4325cc <argp_usage@@Base+0x9d0>
  43263c:	cmp	x0, #0x0
  432640:	cinc	x8, x0, eq  // eq = none
  432644:	mov	x20, x0
  432648:	add	x0, x8, #0x1
  43264c:	bl	4044f0 <malloc@plt>
  432650:	mov	x19, x0
  432654:	cbz	x0, 43267c <argp_usage@@Base+0xa80>
  432658:	mov	x0, x19
  43265c:	mov	x1, x21
  432660:	mov	x2, x20
  432664:	bl	404110 <memcpy@plt>
  432668:	cbnz	x20, 432678 <argp_usage@@Base+0xa7c>
  43266c:	mov	w8, #0x2e                  	// #46
  432670:	mov	w20, #0x1                   	// #1
  432674:	strb	w8, [x19]
  432678:	strb	wzr, [x19, x20]
  43267c:	mov	x0, x19
  432680:	ldp	x20, x19, [sp, #32]
  432684:	ldr	x21, [sp, #16]
  432688:	ldp	x29, x30, [sp], #48
  43268c:	ret
  432690:	sub	x0, x0, #0x1
  432694:	ldrb	w8, [x0, #1]!
  432698:	cmp	w8, #0x2f
  43269c:	b.eq	432694 <argp_usage@@Base+0xa98>  // b.none
  4326a0:	mov	w8, wzr
  4326a4:	mov	x9, x0
  4326a8:	b	4326b4 <argp_usage@@Base+0xab8>
  4326ac:	mov	w8, #0x1                   	// #1
  4326b0:	add	x9, x9, #0x1
  4326b4:	ldrb	w10, [x9]
  4326b8:	cmp	w10, #0x2f
  4326bc:	b.eq	4326ac <argp_usage@@Base+0xab0>  // b.none
  4326c0:	cbz	w10, 4326d8 <argp_usage@@Base+0xadc>
  4326c4:	tst	w8, #0x1
  4326c8:	mov	w8, wzr
  4326cc:	csel	x0, x9, x0, ne  // ne = any
  4326d0:	add	x9, x9, #0x1
  4326d4:	b	4326b4 <argp_usage@@Base+0xab8>
  4326d8:	ret
  4326dc:	stp	x29, x30, [sp, #-32]!
  4326e0:	str	x19, [sp, #16]
  4326e4:	mov	x29, sp
  4326e8:	mov	x19, x0
  4326ec:	bl	404190 <strlen@plt>
  4326f0:	mov	x8, x0
  4326f4:	sub	x9, x19, #0x1
  4326f8:	mov	x0, x8
  4326fc:	cmp	x8, #0x2
  432700:	b.cc	432714 <argp_usage@@Base+0xb18>  // b.lo, b.ul, b.last
  432704:	ldrb	w8, [x9, x0]
  432708:	cmp	w8, #0x2f
  43270c:	sub	x8, x0, #0x1
  432710:	b.eq	4326f8 <argp_usage@@Base+0xafc>  // b.none
  432714:	ldr	x19, [sp, #16]
  432718:	ldp	x29, x30, [sp], #32
  43271c:	ret
  432720:	stp	x29, x30, [sp, #-32]!
  432724:	str	x19, [sp, #16]
  432728:	mov	x29, sp
  43272c:	mov	x19, x0
  432730:	bl	432690 <argp_usage@@Base+0xa94>
  432734:	ldrb	w8, [x0]
  432738:	cmp	w8, #0x0
  43273c:	csel	x19, x19, x0, eq  // eq = none
  432740:	mov	x0, x19
  432744:	bl	4326dc <argp_usage@@Base+0xae0>
  432748:	ldrb	w8, [x19, x0]
  43274c:	strb	wzr, [x19, x0]
  432750:	ldr	x19, [sp, #16]
  432754:	cmp	w8, #0x0
  432758:	cset	w0, ne  // ne = any
  43275c:	ldp	x29, x30, [sp], #32
  432760:	ret
  432764:	stp	x29, x30, [sp, #-32]!
  432768:	stp	x20, x19, [sp, #16]
  43276c:	mov	x20, x0
  432770:	mov	w0, #0x10                  	// #16
  432774:	mov	x29, sp
  432778:	mov	x19, x1
  43277c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  432780:	ldr	x8, [x20, #8]
  432784:	stp	x8, x19, [x0]
  432788:	str	x0, [x20, #8]
  43278c:	ldp	x20, x19, [sp, #16]
  432790:	ldp	x29, x30, [sp], #32
  432794:	ret
  432798:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  43279c:	add	x9, x9, #0xc4c
  4327a0:	b	4327a8 <argp_usage@@Base+0xbac>
  4327a4:	tbnz	w1, #27, 432804 <argp_usage@@Base+0xc08>
  4327a8:	ldrb	w10, [x0], #1
  4327ac:	mov	w8, #0x1                   	// #1
  4327b0:	cmp	w10, #0x7d
  4327b4:	b.hi	4327a8 <argp_usage@@Base+0xbac>  // b.pmore
  4327b8:	adr	x11, 4327a4 <argp_usage@@Base+0xba8>
  4327bc:	ldrb	w12, [x9, x10]
  4327c0:	add	x11, x11, x12, lsl #2
  4327c4:	br	x11
  4327c8:	tbz	w1, #5, 4327a8 <argp_usage@@Base+0xbac>
  4327cc:	ldrb	w8, [x0]
  4327d0:	cmp	w8, #0x28
  4327d4:	b.ne	4327a8 <argp_usage@@Base+0xbac>  // b.any
  4327d8:	b	432804 <argp_usage@@Base+0xc08>
  4327dc:	tbnz	w1, #27, 4327a8 <argp_usage@@Base+0xbac>
  4327e0:	tbnz	w1, #1, 4327f8 <argp_usage@@Base+0xbfc>
  4327e4:	ldrb	w8, [x0]
  4327e8:	cmp	w8, #0x0
  4327ec:	cset	w8, ne  // ne = any
  4327f0:	add	x0, x0, x8
  4327f4:	b	4327a8 <argp_usage@@Base+0xbac>
  4327f8:	mov	w8, wzr
  4327fc:	add	x0, x0, x8
  432800:	b	4327a8 <argp_usage@@Base+0xbac>
  432804:	mov	w0, #0x1                   	// #1
  432808:	ret
  43280c:	mov	w8, wzr
  432810:	mov	w0, w8
  432814:	ret
  432818:	stp	x29, x30, [sp, #-16]!
  43281c:	mov	w0, #0x10                  	// #16
  432820:	mov	x29, sp
  432824:	bl	43d2f8 <argp_usage@@Base+0xb6fc>
  432828:	ldp	x29, x30, [sp], #16
  43282c:	ret
  432830:	stp	x29, x30, [sp, #-48]!
  432834:	stp	x20, x19, [sp, #32]
  432838:	mov	x19, x0
  43283c:	ldr	x0, [x0]
  432840:	str	x21, [sp, #16]
  432844:	mov	x29, sp
  432848:	cbz	x0, 43285c <argp_usage@@Base+0xc60>
  43284c:	ldr	x20, [x0]
  432850:	bl	432894 <argp_usage@@Base+0xc98>
  432854:	mov	x0, x20
  432858:	cbnz	x20, 43284c <argp_usage@@Base+0xc50>
  43285c:	ldr	x20, [x19, #8]
  432860:	cbz	x20, 43287c <argp_usage@@Base+0xc80>
  432864:	ldp	x21, x0, [x20]
  432868:	bl	4049d0 <free@plt>
  43286c:	mov	x0, x20
  432870:	bl	4049d0 <free@plt>
  432874:	mov	x20, x21
  432878:	cbnz	x21, 432864 <argp_usage@@Base+0xc68>
  43287c:	mov	x0, x19
  432880:	bl	4049d0 <free@plt>
  432884:	ldp	x20, x19, [sp, #32]
  432888:	ldr	x21, [sp, #16]
  43288c:	ldp	x29, x30, [sp], #48
  432890:	ret
  432894:	stp	x29, x30, [sp, #-48]!
  432898:	stp	x20, x19, [sp, #32]
  43289c:	ldr	w8, [x0, #8]
  4328a0:	mov	x19, x0
  4328a4:	str	x21, [sp, #16]
  4328a8:	mov	x29, sp
  4328ac:	cbz	w8, 432900 <argp_usage@@Base+0xd04>
  4328b0:	cmp	w8, #0x1
  4328b4:	b.ne	432910 <argp_usage@@Base+0xd14>  // b.any
  4328b8:	ldr	x8, [x19, #32]
  4328bc:	ldr	x0, [x19, #16]
  4328c0:	cbz	x8, 43290c <argp_usage@@Base+0xd10>
  4328c4:	mov	x20, xzr
  4328c8:	mov	x21, xzr
  4328cc:	b	4328e8 <argp_usage@@Base+0xcec>
  4328d0:	ldr	x8, [x19, #32]
  4328d4:	ldr	x0, [x19, #16]
  4328d8:	add	x21, x21, #0x1
  4328dc:	add	x20, x20, #0x48
  4328e0:	cmp	x21, x8
  4328e4:	b.cs	43290c <argp_usage@@Base+0xd10>  // b.hs, b.nlast
  4328e8:	add	x8, x0, x20
  4328ec:	ldrb	w9, [x8, #3]
  4328f0:	tbz	w9, #3, 4328d0 <argp_usage@@Base+0xcd4>
  4328f4:	add	x0, x8, #0x8
  4328f8:	bl	43ebd8 <_obstack_memory_used@@Base+0x978>
  4328fc:	b	4328d0 <argp_usage@@Base+0xcd4>
  432900:	ldr	x0, [x19, #16]
  432904:	bl	4353e4 <argp_usage@@Base+0x37e8>
  432908:	b	432910 <argp_usage@@Base+0xd14>
  43290c:	bl	4049d0 <free@plt>
  432910:	mov	x0, x19
  432914:	bl	4049d0 <free@plt>
  432918:	ldp	x20, x19, [sp, #32]
  43291c:	ldr	x21, [sp, #16]
  432920:	ldp	x29, x30, [sp], #48
  432924:	ret
  432928:	stp	x29, x30, [sp, #-48]!
  43292c:	adrp	x8, 404000 <mbrtowc@plt-0x100>
  432930:	adrp	x9, 432000 <argp_usage@@Base+0x404>
  432934:	add	x8, x8, #0xac0
  432938:	add	x9, x9, #0x9cc
  43293c:	tst	w2, #0x10000000
  432940:	stp	x22, x21, [sp, #16]
  432944:	csel	x22, x9, x8, eq  // eq = none
  432948:	stp	x20, x19, [sp, #32]
  43294c:	mov	x29, sp
  432950:	mov	w19, w2
  432954:	mov	x21, x1
  432958:	mov	x20, x0
  43295c:	blr	x22
  432960:	cmp	w0, #0x0
  432964:	cset	w8, eq  // eq = none
  432968:	tbnz	w19, #30, 4329b8 <argp_usage@@Base+0xdbc>
  43296c:	ldrb	w9, [x21]
  432970:	cbz	w9, 4329b8 <argp_usage@@Base+0xdbc>
  432974:	cbz	w0, 4329b8 <argp_usage@@Base+0xdbc>
  432978:	add	x21, x21, #0x1
  43297c:	and	w9, w9, #0xff
  432980:	cmp	w9, #0x2f
  432984:	b.ne	4329ac <argp_usage@@Base+0xdb0>  // b.any
  432988:	ldrb	w9, [x21]
  43298c:	cmp	w9, #0x2f
  432990:	b.eq	4329ac <argp_usage@@Base+0xdb0>  // b.none
  432994:	mov	x0, x20
  432998:	mov	x1, x21
  43299c:	mov	w2, w19
  4329a0:	blr	x22
  4329a4:	cmp	w0, #0x0
  4329a8:	cset	w8, eq  // eq = none
  4329ac:	ldrb	w9, [x21], #1
  4329b0:	cbz	w9, 4329b8 <argp_usage@@Base+0xdbc>
  4329b4:	tbz	w8, #0, 43297c <argp_usage@@Base+0xd80>
  4329b8:	ldp	x20, x19, [sp, #32]
  4329bc:	ldp	x22, x21, [sp, #16]
  4329c0:	and	w0, w8, #0x1
  4329c4:	ldp	x29, x30, [sp], #48
  4329c8:	ret
  4329cc:	stp	x29, x30, [sp, #-64]!
  4329d0:	stp	x20, x19, [sp, #48]
  4329d4:	mov	x20, x1
  4329d8:	mov	x19, x0
  4329dc:	str	x23, [sp, #16]
  4329e0:	stp	x22, x21, [sp, #32]
  4329e4:	mov	x29, sp
  4329e8:	tbnz	w2, #3, 432a04 <argp_usage@@Base+0xe08>
  4329ec:	mov	x0, x19
  4329f0:	mov	x1, x20
  4329f4:	tbz	w2, #4, 432a58 <argp_usage@@Base+0xe5c>
  4329f8:	bl	436580 <argp_usage@@Base+0x4984>
  4329fc:	mov	w21, w0
  432a00:	b	432aa0 <argp_usage@@Base+0xea4>
  432a04:	tbz	w2, #4, 432a64 <argp_usage@@Base+0xe68>
  432a08:	mov	x0, x20
  432a0c:	bl	43d39c <argp_usage@@Base+0xb7a0>
  432a10:	mov	x20, x0
  432a14:	mov	w23, #0x2f                  	// #47
  432a18:	mov	x22, x0
  432a1c:	mov	w1, #0x2f                  	// #47
  432a20:	mov	x0, x22
  432a24:	bl	404a70 <strchr@plt>
  432a28:	mov	x22, x0
  432a2c:	cbz	x0, 432a34 <argp_usage@@Base+0xe38>
  432a30:	strb	wzr, [x22]
  432a34:	mov	x0, x19
  432a38:	mov	x1, x20
  432a3c:	bl	436580 <argp_usage@@Base+0x4984>
  432a40:	mov	w21, w0
  432a44:	cbz	x22, 432a98 <argp_usage@@Base+0xe9c>
  432a48:	cmp	w21, #0x1
  432a4c:	b.lt	432a98 <argp_usage@@Base+0xe9c>  // b.tstop
  432a50:	strb	w23, [x22], #1
  432a54:	b	432a1c <argp_usage@@Base+0xe20>
  432a58:	bl	404920 <strcmp@plt>
  432a5c:	mov	w21, w0
  432a60:	b	432aa0 <argp_usage@@Base+0xea4>
  432a64:	mov	x0, x19
  432a68:	bl	404190 <strlen@plt>
  432a6c:	mov	x22, x0
  432a70:	mov	x0, x19
  432a74:	mov	x1, x20
  432a78:	mov	x2, x22
  432a7c:	bl	4045a0 <strncmp@plt>
  432a80:	mov	w21, w0
  432a84:	cbnz	w0, 432aa0 <argp_usage@@Base+0xea4>
  432a88:	ldrb	w8, [x20, x22]
  432a8c:	cmp	w8, #0x2f
  432a90:	csel	w21, wzr, w8, eq  // eq = none
  432a94:	b	432aa0 <argp_usage@@Base+0xea4>
  432a98:	mov	x0, x20
  432a9c:	bl	4049d0 <free@plt>
  432aa0:	mov	w0, w21
  432aa4:	ldp	x20, x19, [sp, #48]
  432aa8:	ldp	x22, x21, [sp, #32]
  432aac:	ldr	x23, [sp, #16]
  432ab0:	ldp	x29, x30, [sp], #64
  432ab4:	ret
  432ab8:	stp	x29, x30, [sp, #-48]!
  432abc:	stp	x20, x19, [sp, #32]
  432ac0:	ldr	x8, [x0]
  432ac4:	str	x21, [sp, #16]
  432ac8:	mov	x29, sp
  432acc:	cbz	x8, 432b34 <argp_usage@@Base+0xf38>
  432ad0:	mov	x21, x1
  432ad4:	mov	x20, xzr
  432ad8:	b	432af4 <argp_usage@@Base+0xef8>
  432adc:	mov	x0, x19
  432ae0:	mov	x1, x21
  432ae4:	bl	432c0c <argp_usage@@Base+0x1010>
  432ae8:	tbnz	w0, #0, 432b2c <argp_usage@@Base+0xf30>
  432aec:	ldr	x8, [x19]
  432af0:	cbz	x8, 432b3c <argp_usage@@Base+0xf40>
  432af4:	mov	x19, x8
  432af8:	ldr	w8, [x8, #8]
  432afc:	cbnz	w8, 432adc <argp_usage@@Base+0xee0>
  432b00:	cbnz	x20, 432b18 <argp_usage@@Base+0xf1c>
  432b04:	mov	x0, x21
  432b08:	bl	404190 <strlen@plt>
  432b0c:	add	x0, x0, #0x1
  432b10:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  432b14:	mov	x20, x0
  432b18:	mov	x0, x19
  432b1c:	mov	x1, x21
  432b20:	mov	x2, x20
  432b24:	bl	432b6c <argp_usage@@Base+0xf70>
  432b28:	tbz	w0, #0, 432aec <argp_usage@@Base+0xef0>
  432b2c:	mov	w21, wzr
  432b30:	b	432b40 <argp_usage@@Base+0xf44>
  432b34:	mov	w0, wzr
  432b38:	b	432b5c <argp_usage@@Base+0xf60>
  432b3c:	mov	w21, #0x1                   	// #1
  432b40:	mov	x0, x20
  432b44:	bl	4049d0 <free@plt>
  432b48:	ldr	w8, [x19, #12]
  432b4c:	mov	w9, #0x1                   	// #1
  432b50:	bic	w8, w9, w8, lsr #29
  432b54:	cmp	w21, w8
  432b58:	cset	w0, ne  // ne = any
  432b5c:	ldp	x20, x19, [sp, #32]
  432b60:	ldr	x21, [sp, #16]
  432b64:	ldp	x29, x30, [sp], #48
  432b68:	ret
  432b6c:	stp	x29, x30, [sp, #-48]!
  432b70:	stp	x22, x21, [sp, #16]
  432b74:	stp	x20, x19, [sp, #32]
  432b78:	ldr	w22, [x0, #12]
  432b7c:	ldr	x20, [x0, #16]
  432b80:	mov	x19, x2
  432b84:	mov	x21, x1
  432b88:	mov	x29, sp
  432b8c:	mov	x0, x19
  432b90:	mov	x1, x21
  432b94:	bl	404b20 <strcpy@plt>
  432b98:	mov	x0, x20
  432b9c:	mov	x1, x19
  432ba0:	bl	434e74 <argp_usage@@Base+0x3278>
  432ba4:	cbnz	x0, 432bf0 <argp_usage@@Base+0xff4>
  432ba8:	tbnz	w22, #3, 432bcc <argp_usage@@Base+0xfd0>
  432bac:	tbnz	w22, #30, 432c04 <argp_usage@@Base+0x1008>
  432bb0:	mov	w1, #0x2f                  	// #47
  432bb4:	mov	x0, x21
  432bb8:	bl	404a70 <strchr@plt>
  432bbc:	cmp	x0, #0x0
  432bc0:	csinc	x21, xzr, x0, eq  // eq = none
  432bc4:	cbnz	x0, 432b8c <argp_usage@@Base+0xf90>
  432bc8:	b	432bf4 <argp_usage@@Base+0xff8>
  432bcc:	mov	w1, #0x2f                  	// #47
  432bd0:	mov	x0, x19
  432bd4:	bl	4047d0 <strrchr@plt>
  432bd8:	cbz	x0, 432bac <argp_usage@@Base+0xfb0>
  432bdc:	strb	wzr, [x0]
  432be0:	mov	x0, x20
  432be4:	mov	x1, x19
  432be8:	bl	434e74 <argp_usage@@Base+0x3278>
  432bec:	cbz	x0, 432bcc <argp_usage@@Base+0xfd0>
  432bf0:	mov	w0, #0x1                   	// #1
  432bf4:	ldp	x20, x19, [sp, #32]
  432bf8:	ldp	x22, x21, [sp, #16]
  432bfc:	ldp	x29, x30, [sp], #48
  432c00:	ret
  432c04:	mov	w0, wzr
  432c08:	b	432bf4 <argp_usage@@Base+0xff8>
  432c0c:	stp	x29, x30, [sp, #-48]!
  432c10:	stp	x20, x19, [sp, #32]
  432c14:	str	x21, [sp, #16]
  432c18:	ldr	x21, [x0, #32]
  432c1c:	mov	x29, sp
  432c20:	cbz	x21, 432c48 <argp_usage@@Base+0x104c>
  432c24:	ldr	x20, [x0, #16]
  432c28:	mov	x19, x1
  432c2c:	mov	x0, x20
  432c30:	mov	x1, x19
  432c34:	bl	433208 <argp_usage@@Base+0x160c>
  432c38:	tbnz	w0, #0, 432c50 <argp_usage@@Base+0x1054>
  432c3c:	subs	x21, x21, #0x1
  432c40:	add	x20, x20, #0x48
  432c44:	b.ne	432c2c <argp_usage@@Base+0x1030>  // b.any
  432c48:	mov	w0, wzr
  432c4c:	b	432c54 <argp_usage@@Base+0x1058>
  432c50:	mov	w0, #0x1                   	// #1
  432c54:	ldp	x20, x19, [sp, #32]
  432c58:	ldr	x21, [sp, #16]
  432c5c:	ldp	x29, x30, [sp], #48
  432c60:	ret
  432c64:	stp	x29, x30, [sp, #-80]!
  432c68:	stp	x22, x21, [sp, #48]
  432c6c:	stp	x20, x19, [sp, #64]
  432c70:	mov	w20, w2
  432c74:	mov	x19, x1
  432c78:	tst	w2, #0x18000000
  432c7c:	mov	x21, x0
  432c80:	str	x25, [sp, #16]
  432c84:	stp	x24, x23, [sp, #32]
  432c88:	mov	x29, sp
  432c8c:	b.eq	432d44 <argp_usage@@Base+0x1148>  // b.none
  432c90:	mov	x0, x19
  432c94:	mov	w1, w20
  432c98:	bl	432798 <argp_usage@@Base+0xb9c>
  432c9c:	tbz	w0, #0, 432d44 <argp_usage@@Base+0x1148>
  432ca0:	ldr	x8, [x21]
  432ca4:	cbz	x8, 432cc0 <argp_usage@@Base+0x10c4>
  432ca8:	ldr	w9, [x8, #8]
  432cac:	cmp	w9, #0x1
  432cb0:	b.ne	432cc0 <argp_usage@@Base+0x10c4>  // b.any
  432cb4:	ldr	w8, [x8, #12]
  432cb8:	eor	w8, w8, w20
  432cbc:	tbz	w8, #29, 432cd0 <argp_usage@@Base+0x10d4>
  432cc0:	mov	w1, #0x1                   	// #1
  432cc4:	mov	x0, x21
  432cc8:	mov	w2, w20
  432ccc:	bl	432eac <argp_usage@@Base+0x12b0>
  432cd0:	ldr	x22, [x21]
  432cd4:	mov	x1, x22
  432cd8:	ldr	x8, [x22, #32]
  432cdc:	ldr	x9, [x1, #24]!
  432ce0:	cmp	x8, x9
  432ce4:	b.ne	432cf8 <argp_usage@@Base+0x10fc>  // b.any
  432ce8:	ldr	x0, [x22, #16]
  432cec:	mov	w2, #0x48                  	// #72
  432cf0:	bl	43d260 <argp_usage@@Base+0xb664>
  432cf4:	str	x0, [x22, #16]
  432cf8:	ldr	x23, [x22, #32]
  432cfc:	ldr	x24, [x22, #16]
  432d00:	mov	w8, #0x48                  	// #72
  432d04:	add	x9, x23, #0x1
  432d08:	mul	x8, x23, x8
  432d0c:	str	x9, [x22, #32]
  432d10:	str	w20, [x24, x8]
  432d14:	tbnz	w20, #27, 432de0 <argp_usage@@Base+0x11e4>
  432d18:	tbz	w20, #26, 432d34 <argp_usage@@Base+0x1138>
  432d1c:	mov	x0, x19
  432d20:	bl	43d39c <argp_usage@@Base+0xb7a0>
  432d24:	mov	x19, x0
  432d28:	mov	x0, x21
  432d2c:	mov	x1, x19
  432d30:	bl	432764 <argp_usage@@Base+0xb68>
  432d34:	mov	w8, #0x48                  	// #72
  432d38:	madd	x8, x23, x8, x24
  432d3c:	str	x19, [x8, #8]
  432d40:	b	432dc8 <argp_usage@@Base+0x11cc>
  432d44:	ldr	x8, [x21]
  432d48:	cbz	x8, 432d6c <argp_usage@@Base+0x1170>
  432d4c:	ldr	w9, [x8, #8]
  432d50:	cbnz	w9, 432d6c <argp_usage@@Base+0x1170>
  432d54:	ldr	w8, [x8, #12]
  432d58:	mov	w9, #0x18                  	// #24
  432d5c:	movk	w9, #0x6000, lsl #16
  432d60:	eor	w8, w8, w20
  432d64:	tst	w8, w9
  432d68:	b.eq	432d7c <argp_usage@@Base+0x1180>  // b.none
  432d6c:	mov	x0, x21
  432d70:	mov	w1, wzr
  432d74:	mov	w2, w20
  432d78:	bl	432eac <argp_usage@@Base+0x12b0>
  432d7c:	ldr	x21, [x21]
  432d80:	mov	x0, x19
  432d84:	bl	43d39c <argp_usage@@Base+0xb7a0>
  432d88:	mov	w8, #0x2                   	// #2
  432d8c:	movk	w8, #0x1000, lsl #16
  432d90:	and	w8, w20, w8
  432d94:	mov	w9, #0x10000000            	// #268435456
  432d98:	cmp	w8, w9
  432d9c:	mov	x19, x0
  432da0:	b.ne	432dac <argp_usage@@Base+0x11b0>  // b.any
  432da4:	mov	x0, x19
  432da8:	bl	432f3c <argp_usage@@Base+0x1340>
  432dac:	ldr	x0, [x21, #16]
  432db0:	mov	x1, x19
  432db4:	bl	43599c <argp_usage@@Base+0x3da0>
  432db8:	cmp	x0, x19
  432dbc:	b.eq	432dc8 <argp_usage@@Base+0x11cc>  // b.none
  432dc0:	mov	x0, x19
  432dc4:	bl	4049d0 <free@plt>
  432dc8:	ldp	x20, x19, [sp, #64]
  432dcc:	ldp	x22, x21, [sp, #48]
  432dd0:	ldp	x24, x23, [sp, #32]
  432dd4:	ldr	x25, [sp, #16]
  432dd8:	ldp	x29, x30, [sp], #80
  432ddc:	ret
  432de0:	lsr	w8, w20, #3
  432de4:	and	w8, w8, #0x2
  432de8:	mov	w9, #0x9                   	// #9
  432dec:	orr	w21, w8, w9
  432df0:	tbnz	w20, #3, 432e14 <argp_usage@@Base+0x1218>
  432df4:	mov	w8, #0x48                  	// #72
  432df8:	madd	x8, x23, x8, x24
  432dfc:	add	x0, x8, #0x8
  432e00:	mov	x1, x19
  432e04:	mov	w2, w21
  432e08:	bl	43ea48 <_obstack_memory_used@@Base+0x7e8>
  432e0c:	mov	w19, w0
  432e10:	b	432e98 <argp_usage@@Base+0x129c>
  432e14:	mov	x0, x19
  432e18:	bl	404190 <strlen@plt>
  432e1c:	sub	x8, x19, #0x1
  432e20:	cbz	x0, 432e94 <argp_usage@@Base+0x1298>
  432e24:	ldrb	w9, [x8, x0]
  432e28:	sub	x25, x0, #0x1
  432e2c:	mov	x0, x25
  432e30:	cmp	w9, #0x2f
  432e34:	b.eq	432e20 <argp_usage@@Base+0x1224>  // b.none
  432e38:	add	x0, x25, #0x8
  432e3c:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  432e40:	add	x2, x25, #0x1
  432e44:	mov	x1, x19
  432e48:	mov	x20, x0
  432e4c:	bl	404110 <memcpy@plt>
  432e50:	mov	w9, #0x2f28                	// #12072
  432e54:	mov	w10, #0x292a                	// #10538
  432e58:	add	x8, x20, x25
  432e5c:	movk	w9, #0x2a2e, lsl #16
  432e60:	movk	w10, #0x3f, lsl #16
  432e64:	mov	w11, #0x48                  	// #72
  432e68:	stur	w9, [x8, #1]
  432e6c:	str	w10, [x8, #4]
  432e70:	madd	x8, x23, x11, x24
  432e74:	add	x0, x8, #0x8
  432e78:	mov	x1, x20
  432e7c:	mov	w2, w21
  432e80:	bl	43ea48 <_obstack_memory_used@@Base+0x7e8>
  432e84:	mov	w19, w0
  432e88:	mov	x0, x20
  432e8c:	bl	4049d0 <free@plt>
  432e90:	b	432e98 <argp_usage@@Base+0x129c>
  432e94:	mov	w19, #0x1                   	// #1
  432e98:	cbz	w19, 432dc8 <argp_usage@@Base+0x11cc>
  432e9c:	ldr	x8, [x22, #32]
  432ea0:	sub	x8, x8, #0x1
  432ea4:	str	x8, [x22, #32]
  432ea8:	b	432dc8 <argp_usage@@Base+0x11cc>
  432eac:	stp	x29, x30, [sp, #-48]!
  432eb0:	stp	x20, x19, [sp, #32]
  432eb4:	mov	x19, x0
  432eb8:	mov	w0, #0x28                  	// #40
  432ebc:	stp	x22, x21, [sp, #16]
  432ec0:	mov	x29, sp
  432ec4:	mov	w21, w2
  432ec8:	mov	w22, w1
  432ecc:	bl	43d2f8 <argp_usage@@Base+0xb6fc>
  432ed0:	mov	x20, x0
  432ed4:	stp	w22, w21, [x0, #8]
  432ed8:	cbnz	w22, 432f20 <argp_usage@@Base+0x1324>
  432edc:	adrp	x8, 433000 <argp_usage@@Base+0x1404>
  432ee0:	adrp	x9, 433000 <argp_usage@@Base+0x1404>
  432ee4:	adrp	x10, 433000 <argp_usage@@Base+0x1404>
  432ee8:	adrp	x11, 433000 <argp_usage@@Base+0x1404>
  432eec:	add	x8, x8, #0x2f4
  432ef0:	add	x9, x9, #0x248
  432ef4:	tst	w21, #0x10
  432ef8:	add	x10, x10, #0x324
  432efc:	add	x11, x11, #0x308
  432f00:	adrp	x4, 433000 <argp_usage@@Base+0x1404>
  432f04:	csel	x2, x9, x8, ne  // ne = any
  432f08:	csel	x3, x11, x10, ne  // ne = any
  432f0c:	add	x4, x4, #0x340
  432f10:	mov	x0, xzr
  432f14:	mov	x1, xzr
  432f18:	bl	435130 <argp_usage@@Base+0x3534>
  432f1c:	str	x0, [x20, #16]
  432f20:	ldr	x8, [x19]
  432f24:	str	x8, [x20]
  432f28:	str	x20, [x19]
  432f2c:	ldp	x20, x19, [sp, #32]
  432f30:	ldp	x22, x21, [sp, #16]
  432f34:	ldp	x29, x30, [sp], #48
  432f38:	ret
  432f3c:	mov	x8, x0
  432f40:	b	432f60 <argp_usage@@Base+0x1364>
  432f44:	ldrb	w9, [x8, #1]
  432f48:	cmp	w9, #0x0
  432f4c:	cset	w9, ne  // ne = any
  432f50:	add	x8, x8, x9
  432f54:	ldrb	w9, [x8], #1
  432f58:	strb	w9, [x0], #1
  432f5c:	cbz	w9, 432f74 <argp_usage@@Base+0x1378>
  432f60:	ldrb	w9, [x8]
  432f64:	cmp	w9, #0x5c
  432f68:	b.eq	432f44 <argp_usage@@Base+0x1348>  // b.none
  432f6c:	mov	w9, wzr
  432f70:	b	432f50 <argp_usage@@Base+0x1354>
  432f74:	ret
  432f78:	sub	sp, sp, #0x70
  432f7c:	stp	x24, x23, [sp, #64]
  432f80:	mov	x23, x0
  432f84:	mov	x0, x2
  432f88:	stp	x29, x30, [sp, #16]
  432f8c:	stp	x28, x27, [sp, #32]
  432f90:	stp	x26, x25, [sp, #48]
  432f94:	stp	x22, x21, [sp, #80]
  432f98:	stp	x20, x19, [sp, #96]
  432f9c:	add	x29, sp, #0x10
  432fa0:	mov	x19, x5
  432fa4:	mov	w20, w4
  432fa8:	mov	w21, w3
  432fac:	mov	x24, x2
  432fb0:	mov	x22, x1
  432fb4:	str	xzr, [sp, #8]
  432fb8:	bl	4047a0 <getc_unlocked@plt>
  432fbc:	cmn	w0, #0x1
  432fc0:	b.eq	433014 <argp_usage@@Base+0x1418>  // b.none
  432fc4:	mov	w26, w0
  432fc8:	mov	x25, xzr
  432fcc:	mov	x28, xzr
  432fd0:	b	432ff4 <argp_usage@@Base+0x13f8>
  432fd4:	mov	x0, x24
  432fd8:	add	x27, x28, #0x1
  432fdc:	strb	w26, [x25, x28]
  432fe0:	bl	4047a0 <getc_unlocked@plt>
  432fe4:	mov	w26, w0
  432fe8:	cmn	w0, #0x1
  432fec:	mov	x28, x27
  432ff0:	b.eq	43301c <argp_usage@@Base+0x1420>  // b.none
  432ff4:	ldr	x8, [sp, #8]
  432ff8:	cmp	x28, x8
  432ffc:	b.ne	432fd4 <argp_usage@@Base+0x13d8>  // b.any
  433000:	add	x1, sp, #0x8
  433004:	mov	x0, x25
  433008:	bl	43d2e0 <argp_usage@@Base+0xb6e4>
  43300c:	mov	x25, x0
  433010:	b	432fd4 <argp_usage@@Base+0x13d8>
  433014:	mov	x27, xzr
  433018:	mov	x25, xzr
  43301c:	mov	x0, x24
  433020:	bl	4042d0 <ferror_unlocked@plt>
  433024:	cbz	w0, 433034 <argp_usage@@Base+0x1438>
  433028:	bl	404d00 <__errno_location@plt>
  43302c:	ldr	w26, [x0]
  433030:	b	433038 <argp_usage@@Base+0x143c>
  433034:	mov	w26, wzr
  433038:	add	x1, x27, #0x1
  43303c:	mov	x0, x25
  433040:	bl	43d21c <argp_usage@@Base+0xb620>
  433044:	mov	x24, x0
  433048:	add	x8, x0, x27
  43304c:	strb	w20, [x8]
  433050:	cbz	x27, 433068 <argp_usage@@Base+0x146c>
  433054:	add	x9, x27, x24
  433058:	ldurb	w9, [x9, #-1]
  43305c:	cmp	w9, w20, uxtb
  433060:	cset	w9, ne  // ne = any
  433064:	b	43306c <argp_usage@@Base+0x1470>
  433068:	mov	x9, xzr
  43306c:	mov	x0, x22
  433070:	mov	x1, x24
  433074:	add	x27, x8, x9
  433078:	bl	432764 <argp_usage@@Base+0xb68>
  43307c:	cmp	x24, x27
  433080:	b.cs	4330f8 <argp_usage@@Base+0x14fc>  // b.hs, b.nlast
  433084:	and	x28, x20, #0xff
  433088:	mov	x25, x24
  43308c:	b	4330b8 <argp_usage@@Base+0x14bc>
  433090:	mov	x0, x22
  433094:	mov	x1, x25
  433098:	mov	w2, w21
  43309c:	mov	x3, x19
  4330a0:	strb	wzr, [x9]
  4330a4:	blr	x23
  4330a8:	add	x25, x24, #0x1
  4330ac:	add	x24, x24, #0x1
  4330b0:	cmp	x24, x27
  4330b4:	b.eq	4330f8 <argp_usage@@Base+0x14fc>  // b.none
  4330b8:	ldrb	w8, [x24]
  4330bc:	cmp	w8, w20, uxtb
  4330c0:	b.ne	4330ac <argp_usage@@Base+0x14b0>  // b.any
  4330c4:	bl	404950 <__ctype_b_loc@plt>
  4330c8:	ldr	x8, [x0]
  4330cc:	mov	x9, x24
  4330d0:	ldrh	w10, [x8, x28, lsl #1]
  4330d4:	tbz	w10, #13, 433090 <argp_usage@@Base+0x1494>
  4330d8:	mov	x9, x24
  4330dc:	cmp	x25, x9
  4330e0:	b.eq	4330a8 <argp_usage@@Base+0x14ac>  // b.none
  4330e4:	ldrb	w10, [x9, #-1]!
  4330e8:	ldrh	w10, [x8, x10, lsl #1]
  4330ec:	tbnz	w10, #13, 4330dc <argp_usage@@Base+0x14e0>
  4330f0:	add	x9, x9, #0x1
  4330f4:	b	433090 <argp_usage@@Base+0x1494>
  4330f8:	bl	404d00 <__errno_location@plt>
  4330fc:	str	w26, [x0]
  433100:	cmp	w26, #0x0
  433104:	ldp	x20, x19, [sp, #96]
  433108:	ldp	x22, x21, [sp, #80]
  43310c:	ldp	x24, x23, [sp, #64]
  433110:	ldp	x26, x25, [sp, #48]
  433114:	ldp	x28, x27, [sp, #32]
  433118:	ldp	x29, x30, [sp, #16]
  43311c:	csetm	w8, ne  // ne = any
  433120:	mov	w0, w8
  433124:	add	sp, sp, #0x70
  433128:	ret
  43312c:	stp	x29, x30, [sp, #-64]!
  433130:	mov	x29, sp
  433134:	stp	x22, x21, [sp, #32]
  433138:	stp	x20, x19, [sp, #48]
  43313c:	str	x0, [x29, #24]
  433140:	ldrb	w8, [x2]
  433144:	mov	w19, w4
  433148:	mov	w20, w3
  43314c:	mov	x21, x1
  433150:	cmp	w8, #0x2d
  433154:	str	x23, [sp, #16]
  433158:	b.ne	43318c <argp_usage@@Base+0x1590>  // b.any
  43315c:	ldrb	w8, [x2, #1]
  433160:	cmp	w8, #0x0
  433164:	cset	w23, eq  // eq = none
  433168:	cbnz	w23, 433194 <argp_usage@@Base+0x1598>
  43316c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  433170:	add	x1, x1, #0x133
  433174:	mov	x0, x2
  433178:	bl	4044c0 <fopen@plt>
  43317c:	mov	x22, x0
  433180:	cbnz	x0, 43319c <argp_usage@@Base+0x15a0>
  433184:	mov	w19, #0xffffffff            	// #-1
  433188:	b	4331c4 <argp_usage@@Base+0x15c8>
  43318c:	mov	w23, wzr
  433190:	cbz	w23, 43316c <argp_usage@@Base+0x1570>
  433194:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  433198:	ldr	x22, [x8, #1152]
  43319c:	adrp	x0, 433000 <argp_usage@@Base+0x1404>
  4331a0:	add	x0, x0, #0x1f0
  4331a4:	add	x5, x29, #0x18
  4331a8:	mov	x1, x21
  4331ac:	mov	x2, x22
  4331b0:	mov	w3, w20
  4331b4:	mov	w4, w19
  4331b8:	bl	432f78 <argp_usage@@Base+0x137c>
  4331bc:	mov	w19, w0
  4331c0:	tbz	w23, #0, 4331cc <argp_usage@@Base+0x15d0>
  4331c4:	mov	w0, w19
  4331c8:	b	4331dc <argp_usage@@Base+0x15e0>
  4331cc:	mov	x0, x22
  4331d0:	bl	404470 <fclose@plt>
  4331d4:	cmp	w0, #0x0
  4331d8:	csinv	w0, w19, wzr, eq  // eq = none
  4331dc:	ldp	x20, x19, [sp, #48]
  4331e0:	ldp	x22, x21, [sp, #32]
  4331e4:	ldr	x23, [sp, #16]
  4331e8:	ldp	x29, x30, [sp], #64
  4331ec:	ret
  4331f0:	stp	x29, x30, [sp, #-16]!
  4331f4:	ldr	x8, [x3]
  4331f8:	mov	x29, sp
  4331fc:	blr	x8
  433200:	ldp	x29, x30, [sp], #16
  433204:	ret
  433208:	stp	x29, x30, [sp, #-16]!
  43320c:	ldr	w2, [x0], #8
  433210:	mov	x29, sp
  433214:	tbnz	w2, #27, 433224 <argp_usage@@Base+0x1628>
  433218:	ldr	x0, [x0]
  43321c:	bl	432928 <argp_usage@@Base+0xd2c>
  433220:	b	43323c <argp_usage@@Base+0x1640>
  433224:	mov	x2, xzr
  433228:	mov	x3, xzr
  43322c:	mov	w4, wzr
  433230:	bl	43ed9c <_obstack_memory_used@@Base+0xb3c>
  433234:	cmp	w0, #0x0
  433238:	cset	w0, eq  // eq = none
  43323c:	and	w0, w0, #0x1
  433240:	ldp	x29, x30, [sp], #16
  433244:	ret
  433248:	sub	sp, sp, #0x60
  43324c:	str	x0, [sp, #16]
  433250:	mov	x0, sp
  433254:	stp	x29, x30, [sp, #64]
  433258:	stp	x20, x19, [sp, #80]
  43325c:	add	x29, sp, #0x40
  433260:	mov	x19, x1
  433264:	strb	wzr, [sp]
  433268:	stur	xzr, [sp, #4]
  43326c:	strb	wzr, [sp, #12]
  433270:	bl	4367b4 <argp_usage@@Base+0x4bb8>
  433274:	ldrb	w8, [sp, #32]
  433278:	ldr	w0, [sp, #36]
  43327c:	cbz	w8, 433288 <argp_usage@@Base+0x168c>
  433280:	mov	x20, xzr
  433284:	cbz	w0, 4332e0 <argp_usage@@Base+0x16e4>
  433288:	mov	x20, xzr
  43328c:	tst	w8, #0xff
  433290:	b.eq	43329c <argp_usage@@Base+0x16a0>  // b.none
  433294:	bl	404da0 <towlower@plt>
  433298:	b	4332a4 <argp_usage@@Base+0x16a8>
  43329c:	ldr	x8, [sp, #16]
  4332a0:	ldrb	w0, [x8]
  4332a4:	lsl	x8, x20, #5
  4332a8:	ldp	x10, x9, [sp, #16]
  4332ac:	sub	x8, x8, x20
  4332b0:	add	x8, x8, w0, uxtw
  4332b4:	udiv	x11, x8, x19
  4332b8:	msub	x20, x11, x19, x8
  4332bc:	add	x8, x10, x9
  4332c0:	mov	x0, sp
  4332c4:	str	x8, [sp, #16]
  4332c8:	strb	wzr, [sp, #12]
  4332cc:	bl	4367b4 <argp_usage@@Base+0x4bb8>
  4332d0:	ldrb	w8, [sp, #32]
  4332d4:	ldr	w0, [sp, #36]
  4332d8:	cbz	w8, 43328c <argp_usage@@Base+0x1690>
  4332dc:	cbnz	w0, 43328c <argp_usage@@Base+0x1690>
  4332e0:	mov	x0, x20
  4332e4:	ldp	x20, x19, [sp, #80]
  4332e8:	ldp	x29, x30, [sp, #64]
  4332ec:	add	sp, sp, #0x60
  4332f0:	ret
  4332f4:	stp	x29, x30, [sp, #-16]!
  4332f8:	mov	x29, sp
  4332fc:	bl	4350d8 <argp_usage@@Base+0x34dc>
  433300:	ldp	x29, x30, [sp], #16
  433304:	ret
  433308:	stp	x29, x30, [sp, #-16]!
  43330c:	mov	x29, sp
  433310:	bl	436580 <argp_usage@@Base+0x4984>
  433314:	cmp	w0, #0x0
  433318:	cset	w0, eq  // eq = none
  43331c:	ldp	x29, x30, [sp], #16
  433320:	ret
  433324:	stp	x29, x30, [sp, #-16]!
  433328:	mov	x29, sp
  43332c:	bl	404920 <strcmp@plt>
  433330:	cmp	w0, #0x0
  433334:	cset	w0, eq  // eq = none
  433338:	ldp	x29, x30, [sp], #16
  43333c:	ret
  433340:	stp	x29, x30, [sp, #-16]!
  433344:	mov	x29, sp
  433348:	bl	4049d0 <free@plt>
  43334c:	ldp	x29, x30, [sp], #16
  433350:	ret
  433354:	stp	x29, x30, [sp, #-64]!
  433358:	stp	x24, x23, [sp, #16]
  43335c:	stp	x22, x21, [sp, #32]
  433360:	stp	x20, x19, [sp, #48]
  433364:	mov	w20, w4
  433368:	mov	x21, x3
  43336c:	mov	x22, x2
  433370:	mov	w23, w1
  433374:	mov	w24, w0
  433378:	mov	x29, sp
  43337c:	tbnz	w0, #31, 433398 <argp_usage@@Base+0x179c>
  433380:	mov	w0, w24
  433384:	mov	x1, x21
  433388:	bl	404590 <futimens@plt>
  43338c:	mov	w19, w0
  433390:	cbnz	x22, 4333a0 <argp_usage@@Base+0x17a4>
  433394:	b	4333d4 <argp_usage@@Base+0x17d8>
  433398:	mov	w19, #0x1                   	// #1
  43339c:	cbz	x22, 4333d4 <argp_usage@@Base+0x17d8>
  4333a0:	tbnz	w24, #31, 4333bc <argp_usage@@Base+0x17c0>
  4333a4:	cmn	w19, #0x1
  4333a8:	b.ne	4333d4 <argp_usage@@Base+0x17d8>  // b.any
  4333ac:	bl	404d00 <__errno_location@plt>
  4333b0:	ldr	w8, [x0]
  4333b4:	cmp	w8, #0x26
  4333b8:	b.ne	4333d4 <argp_usage@@Base+0x17d8>  // b.any
  4333bc:	mov	w0, w23
  4333c0:	mov	x1, x22
  4333c4:	mov	x2, x21
  4333c8:	mov	w3, w20
  4333cc:	bl	404aa0 <utimensat@plt>
  4333d0:	mov	w19, w0
  4333d4:	cmp	w19, #0x1
  4333d8:	b.ne	4333ec <argp_usage@@Base+0x17f0>  // b.any
  4333dc:	bl	404d00 <__errno_location@plt>
  4333e0:	mov	w8, #0x9                   	// #9
  4333e4:	mov	w19, #0xffffffff            	// #-1
  4333e8:	str	w8, [x0]
  4333ec:	mov	w0, w19
  4333f0:	ldp	x20, x19, [sp, #48]
  4333f4:	ldp	x22, x21, [sp, #32]
  4333f8:	ldp	x24, x23, [sp, #16]
  4333fc:	ldp	x29, x30, [sp], #64
  433400:	ret
  433404:	stp	x29, x30, [sp, #-48]!
  433408:	stp	x20, x19, [sp, #32]
  43340c:	ldr	w8, [x1, #16]
  433410:	str	x21, [sp, #16]
  433414:	mov	x29, sp
  433418:	and	w8, w8, #0xf000
  43341c:	cmp	w8, #0xa, lsl #12
  433420:	b.ne	43342c <argp_usage@@Base+0x1830>  // b.any
  433424:	mov	w19, wzr
  433428:	b	4334d4 <argp_usage@@Base+0x18d8>
  43342c:	mov	x21, x1
  433430:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  433434:	add	x1, x1, #0xd4d
  433438:	mov	x2, xzr
  43343c:	mov	x3, xzr
  433440:	mov	x20, x0
  433444:	bl	4048d0 <getxattr@plt>
  433448:	mov	x19, x0
  43344c:	tbz	x0, #63, 433468 <argp_usage@@Base+0x186c>
  433450:	bl	404d00 <__errno_location@plt>
  433454:	ldr	w8, [x0]
  433458:	cmp	w8, #0x3d
  43345c:	b.ne	433468 <argp_usage@@Base+0x186c>  // b.any
  433460:	mov	x19, xzr
  433464:	b	433478 <argp_usage@@Base+0x187c>
  433468:	cmp	x19, #0x0
  43346c:	b.le	433478 <argp_usage@@Base+0x187c>
  433470:	mov	w19, #0x1                   	// #1
  433474:	b	4334d4 <argp_usage@@Base+0x18d8>
  433478:	cbnz	x19, 4334c0 <argp_usage@@Base+0x18c4>
  43347c:	ldr	w8, [x21, #16]
  433480:	and	w8, w8, #0xf000
  433484:	cmp	w8, #0x4, lsl #12
  433488:	b.ne	4334bc <argp_usage@@Base+0x18c0>  // b.any
  43348c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  433490:	add	x1, x1, #0xd65
  433494:	mov	x0, x20
  433498:	mov	x2, xzr
  43349c:	mov	x3, xzr
  4334a0:	bl	4048d0 <getxattr@plt>
  4334a4:	mov	x19, x0
  4334a8:	tbz	x0, #63, 4334e8 <argp_usage@@Base+0x18ec>
  4334ac:	bl	404d00 <__errno_location@plt>
  4334b0:	ldr	w8, [x0]
  4334b4:	cmp	w8, #0x3d
  4334b8:	b.ne	4334e8 <argp_usage@@Base+0x18ec>  // b.any
  4334bc:	mov	x19, xzr
  4334c0:	tbz	x19, #63, 4334d4 <argp_usage@@Base+0x18d8>
  4334c4:	bl	404d00 <__errno_location@plt>
  4334c8:	ldr	w0, [x0]
  4334cc:	bl	44b48c <_obstack_memory_used@@Base+0xd22c>
  4334d0:	sbfx	w19, w0, #0, #1
  4334d4:	mov	w0, w19
  4334d8:	ldp	x20, x19, [sp, #32]
  4334dc:	ldr	x21, [sp, #16]
  4334e0:	ldp	x29, x30, [sp], #48
  4334e4:	ret
  4334e8:	cmp	x19, #0x0
  4334ec:	b.gt	433470 <argp_usage@@Base+0x1874>
  4334f0:	b	4334c0 <argp_usage@@Base+0x18c4>
  4334f4:	stp	x29, x30, [sp, #-16]!
  4334f8:	mov	w5, w4
  4334fc:	mov	x4, x3
  433500:	mov	w3, wzr
  433504:	mov	x29, sp
  433508:	bl	433514 <argp_usage@@Base+0x1918>
  43350c:	ldp	x29, x30, [sp], #16
  433510:	ret
  433514:	stp	x29, x30, [sp, #-96]!
  433518:	stp	x28, x27, [sp, #16]
  43351c:	stp	x26, x25, [sp, #32]
  433520:	stp	x24, x23, [sp, #48]
  433524:	stp	x22, x21, [sp, #64]
  433528:	stp	x20, x19, [sp, #80]
  43352c:	mov	x29, sp
  433530:	sub	sp, sp, #0x4c0
  433534:	ldr	x8, [x2, #48]
  433538:	ldr	w9, [x2, #8]
  43353c:	adrp	x10, 456000 <_obstack_memory_used@@Base+0x17da0>
  433540:	add	x10, x10, #0xd3e
  433544:	cmp	x8, #0x0
  433548:	csel	x12, x10, x8, eq  // eq = none
  43354c:	ldrb	w8, [x1]
  433550:	mov	w11, #0xc                   	// #12
  433554:	cmp	w9, #0x0
  433558:	csel	w10, w11, w9, eq  // eq = none
  43355c:	subs	w9, w9, #0xc
  433560:	csel	w9, w9, w10, gt
  433564:	str	w5, [sp, #60]
  433568:	str	x4, [sp, #64]
  43356c:	str	w3, [sp, #132]
  433570:	cbz	w8, 434ae0 <argp_usage@@Base+0x2ee4>
  433574:	sub	x8, x29, #0x20
  433578:	str	w9, [sp, #36]
  43357c:	sub	x9, x29, #0x28
  433580:	add	x8, x8, #0x17
  433584:	str	x8, [sp, #88]
  433588:	orr	x8, x9, #0x2
  43358c:	add	x10, sp, #0x90
  433590:	str	x8, [sp, #96]
  433594:	orr	x8, x9, #0x3
  433598:	mov	w17, #0xcccc                	// #52428
  43359c:	str	x8, [sp, #72]
  4335a0:	orr	x8, x10, #0x1
  4335a4:	mov	x23, x1
  4335a8:	mov	x28, x0
  4335ac:	mov	x16, xzr
  4335b0:	movk	w17, #0xccc, lsl #16
  4335b4:	mov	w18, #0xa                   	// #10
  4335b8:	stp	x12, x8, [sp, #40]
  4335bc:	str	x0, [sp, #136]
  4335c0:	stp	x2, x8, [sp, #112]
  4335c4:	ldrb	w0, [x23]
  4335c8:	cmp	w0, #0x25
  4335cc:	b.ne	433638 <argp_usage@@Base+0x1a3c>  // b.any
  4335d0:	ldr	w0, [sp, #132]
  4335d4:	mov	w26, wzr
  4335d8:	mov	w20, wzr
  4335dc:	add	x23, x23, #0x1
  4335e0:	b	4335f4 <argp_usage@@Base+0x19f8>
  4335e4:	cmp	w8, #0x2d
  4335e8:	b.ne	433624 <argp_usage@@Base+0x1a28>  // b.any
  4335ec:	add	x23, x23, #0x1
  4335f0:	mov	w20, w8
  4335f4:	ldrb	w8, [x23]
  4335f8:	cmp	w8, #0x2f
  4335fc:	b.le	4335e4 <argp_usage@@Base+0x19e8>
  433600:	cmp	w8, #0x30
  433604:	b.eq	4335ec <argp_usage@@Base+0x19f0>  // b.none
  433608:	cmp	w8, #0x5f
  43360c:	b.eq	4335ec <argp_usage@@Base+0x19f0>  // b.none
  433610:	cmp	w8, #0x5e
  433614:	b.ne	433648 <argp_usage@@Base+0x1a4c>  // b.any
  433618:	mov	w0, #0x1                   	// #1
  43361c:	add	x23, x23, #0x1
  433620:	b	4335f4 <argp_usage@@Base+0x19f8>
  433624:	cmp	w8, #0x23
  433628:	b.ne	433648 <argp_usage@@Base+0x1a4c>  // b.any
  43362c:	mov	w26, #0x1                   	// #1
  433630:	add	x23, x23, #0x1
  433634:	b	4335f4 <argp_usage@@Base+0x19f8>
  433638:	cmn	x16, #0x3
  43363c:	b.ls	433698 <argp_usage@@Base+0x1a9c>  // b.plast
  433640:	mov	w8, #0x1                   	// #1
  433644:	b	4336c0 <argp_usage@@Base+0x1ac4>
  433648:	sub	w8, w8, #0x30
  43364c:	cmp	w8, #0x9
  433650:	b.hi	4336d0 <argp_usage@@Base+0x1ad4>  // b.pmore
  433654:	mov	w22, wzr
  433658:	b	433670 <argp_usage@@Base+0x1a74>
  43365c:	mov	w22, #0x7fffffff            	// #2147483647
  433660:	ldrb	w8, [x23, #1]!
  433664:	sub	w8, w8, #0x30
  433668:	cmp	w8, #0xa
  43366c:	b.cs	4336d4 <argp_usage@@Base+0x1ad8>  // b.hs, b.nlast
  433670:	cmp	w22, w17
  433674:	b.gt	43365c <argp_usage@@Base+0x1a60>
  433678:	b.ne	433688 <argp_usage@@Base+0x1a8c>  // b.any
  43367c:	ldrb	w8, [x23]
  433680:	cmp	w8, #0x37
  433684:	b.hi	43365c <argp_usage@@Base+0x1a60>  // b.pmore
  433688:	ldrb	w8, [x23]
  43368c:	madd	w8, w22, w18, w8
  433690:	sub	w22, w8, #0x30
  433694:	b	433660 <argp_usage@@Base+0x1a64>
  433698:	cbz	x28, 4336b8 <argp_usage@@Base+0x1abc>
  43369c:	mov	x1, x28
  4336a0:	mov	x19, x16
  4336a4:	bl	404330 <fputc@plt>
  4336a8:	mov	w17, #0xcccc                	// #52428
  4336ac:	mov	w18, #0xa                   	// #10
  4336b0:	movk	w17, #0xccc, lsl #16
  4336b4:	mov	x16, x19
  4336b8:	mov	w8, wzr
  4336bc:	add	x16, x16, #0x1
  4336c0:	cmp	w8, #0x0
  4336c4:	mov	w9, #0x4                   	// #4
  4336c8:	csel	w8, w9, w8, eq  // eq = none
  4336cc:	b	434430 <argp_usage@@Base+0x2834>
  4336d0:	mov	w22, #0xffffffff            	// #-1
  4336d4:	ldrb	w28, [x23]
  4336d8:	cmp	w28, #0x4f
  4336dc:	b.eq	4336e8 <argp_usage@@Base+0x1aec>  // b.none
  4336e0:	cmp	w28, #0x45
  4336e4:	b.ne	4336f0 <argp_usage@@Base+0x1af4>  // b.any
  4336e8:	add	x23, x23, #0x1
  4336ec:	b	4336f4 <argp_usage@@Base+0x1af8>
  4336f0:	mov	w28, wzr
  4336f4:	ldrb	w1, [x23]
  4336f8:	cmp	w1, #0x7a
  4336fc:	b.hi	433e10 <argp_usage@@Base+0x2214>  // b.pmore
  433700:	adrp	x12, 457000 <_obstack_memory_used@@Base+0x18da0>
  433704:	add	x12, x12, #0xd7e
  433708:	adr	x10, 433730 <argp_usage@@Base+0x1b34>
  43370c:	ldrh	w11, [x12, x1, lsl #1]
  433710:	add	x10, x10, x11, lsl #2
  433714:	adrp	x27, 452000 <_obstack_memory_used@@Base+0x13da0>
  433718:	mov	w24, wzr
  43371c:	mov	w19, wzr
  433720:	mov	w9, wzr
  433724:	mov	x8, xzr
  433728:	add	x27, x27, #0x31c
  43372c:	br	x10
  433730:	cmp	w28, #0x4f
  433734:	mov	w24, wzr
  433738:	b.ne	4337b4 <argp_usage@@Base+0x1bb8>  // b.any
  43373c:	mov	w19, w24
  433740:	b	433e14 <argp_usage@@Base+0x2218>
  433744:	cmp	w28, #0x45
  433748:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  43374c:	ldr	x9, [sp, #112]
  433750:	str	x1, [sp, #24]
  433754:	str	w0, [sp, #108]
  433758:	str	x16, [sp, #80]
  43375c:	ldp	w24, w1, [x9, #20]
  433760:	ldr	w27, [x9, #28]
  433764:	mov	w8, #0xffffff9c            	// #-100
  433768:	mov	w9, #0x12c                 	// #300
  43376c:	cmp	w24, #0x0
  433770:	csel	w8, w9, w8, lt  // lt = tstop
  433774:	mov	w0, w27
  433778:	add	w19, w8, w24
  43377c:	mov	w26, w1
  433780:	bl	434bb0 <argp_usage@@Base+0x2fb4>
  433784:	tbnz	w0, #31, 433f28 <argp_usage@@Base+0x232c>
  433788:	mov	w25, w0
  43378c:	tst	w19, #0x3
  433790:	b.eq	434454 <argp_usage@@Base+0x2858>  // b.none
  433794:	mov	w8, wzr
  433798:	b	434648 <argp_usage@@Base+0x2a4c>
  43379c:	cbnz	w28, 433e10 <argp_usage@@Base+0x2214>
  4337a0:	b	433844 <argp_usage@@Base+0x1c48>
  4337a4:	mov	w24, wzr
  4337a8:	cmp	w28, #0x45
  4337ac:	orr	w0, w26, w0
  4337b0:	b.eq	43373c <argp_usage@@Base+0x1b40>  // b.none
  4337b4:	mov	w19, w24
  4337b8:	b	433fbc <argp_usage@@Base+0x23c0>
  4337bc:	mov	w19, wzr
  4337c0:	sub	x23, x23, #0x1
  4337c4:	b	433e14 <argp_usage@@Base+0x2218>
  4337c8:	cbnz	w28, 433e10 <argp_usage@@Base+0x2214>
  4337cc:	bic	w8, w22, w22, asr #31
  4337d0:	cmp	w8, #0x1
  4337d4:	csinc	w19, w8, wzr, hi  // hi = pmore
  4337d8:	mvn	x9, x16
  4337dc:	cmp	x19, x9
  4337e0:	b.cs	433d6c <argp_usage@@Base+0x2170>  // b.hs, b.nlast
  4337e4:	ldr	x28, [sp, #136]
  4337e8:	cbz	x28, 434920 <argp_usage@@Base+0x2d24>
  4337ec:	mov	x24, x16
  4337f0:	cmp	w8, #0x2
  4337f4:	b.cc	434904 <argp_usage@@Base+0x2d08>  // b.lo, b.ul, b.last
  4337f8:	sxtw	x8, w22
  4337fc:	cmp	w20, #0x30
  433800:	sub	x20, x8, #0x1
  433804:	b.ne	4348ec <argp_usage@@Base+0x2cf0>  // b.any
  433808:	cbz	x20, 434904 <argp_usage@@Base+0x2d08>
  43380c:	mov	w0, #0x30                  	// #48
  433810:	mov	x1, x28
  433814:	bl	404330 <fputc@plt>
  433818:	subs	x20, x20, #0x1
  43381c:	b.ne	43380c <argp_usage@@Base+0x1c10>  // b.any
  433820:	b	434904 <argp_usage@@Base+0x2d08>
  433824:	mov	w8, #0x1                   	// #1
  433828:	ldrb	w9, [x23, x8]
  43382c:	cmp	w9, #0x3a
  433830:	b.ne	433de4 <argp_usage@@Base+0x21e8>  // b.any
  433834:	add	x8, x8, #0x1
  433838:	b	433828 <argp_usage@@Base+0x1c2c>
  43383c:	cmp	w28, #0x45
  433840:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433844:	mov	w24, wzr
  433848:	mov	w19, wzr
  43384c:	orr	w0, w26, w0
  433850:	b	433fbc <argp_usage@@Base+0x23c0>
  433854:	cmp	w28, #0x45
  433858:	b.eq	433dd8 <argp_usage@@Base+0x21dc>  // b.none
  43385c:	ldr	x9, [sp, #112]
  433860:	mov	w10, #0x851f                	// #34079
  433864:	movk	w10, #0x51eb, lsl #16
  433868:	mov	w11, #0x64                  	// #100
  43386c:	ldrsw	x9, [x9, #20]
  433870:	mov	w25, wzr
  433874:	mov	w8, wzr
  433878:	mov	w19, #0x2                   	// #2
  43387c:	mul	x10, x9, x10
  433880:	lsr	x12, x10, #63
  433884:	asr	x10, x10, #37
  433888:	add	w10, w10, w12
  43388c:	cmn	x9, #0x76c
  433890:	msub	w9, w10, w11, w9
  433894:	cset	w12, lt  // lt = tstop
  433898:	cset	w11, gt
  43389c:	cmp	w9, #0x0
  4338a0:	cset	w9, lt  // lt = tstop
  4338a4:	and	w9, w11, w9
  4338a8:	sub	w9, w10, w9
  4338ac:	str	x12, [sp, #120]
  4338b0:	add	w21, w9, #0x13
  4338b4:	b	433fa8 <argp_usage@@Base+0x23ac>
  4338b8:	cbnz	w28, 433e10 <argp_usage@@Base+0x2214>
  4338bc:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x18da0>
  4338c0:	add	x27, x27, #0xe78
  4338c4:	b	433994 <argp_usage@@Base+0x1d98>
  4338c8:	cbnz	w28, 433e10 <argp_usage@@Base+0x2214>
  4338cc:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x18da0>
  4338d0:	add	x27, x27, #0xe81
  4338d4:	b	433994 <argp_usage@@Base+0x1d98>
  4338d8:	cmp	w28, #0x45
  4338dc:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  4338e0:	ldr	x8, [sp, #112]
  4338e4:	ldr	w9, [x8, #8]
  4338e8:	b	433f8c <argp_usage@@Base+0x2390>
  4338ec:	cmp	w28, #0x45
  4338f0:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  4338f4:	ldr	w9, [sp, #36]
  4338f8:	b	433f8c <argp_usage@@Base+0x2390>
  4338fc:	cmp	w28, #0x45
  433900:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433904:	ldr	x8, [sp, #112]
  433908:	ldr	w9, [x8, #4]
  43390c:	b	433f8c <argp_usage@@Base+0x2390>
  433910:	cmp	w28, #0x45
  433914:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433918:	cmn	w22, #0x1
  43391c:	b.eq	4345c4 <argp_usage@@Base+0x29c8>  // b.none
  433920:	cmp	w22, #0x8
  433924:	b.gt	434628 <argp_usage@@Base+0x2a2c>
  433928:	ldr	w9, [sp, #60]
  43392c:	sub	w8, w22, #0x1
  433930:	mov	w10, #0x6667                	// #26215
  433934:	movk	w10, #0x6666, lsl #16
  433938:	smull	x9, w9, w10
  43393c:	add	w8, w8, #0x1
  433940:	lsr	x10, x9, #63
  433944:	asr	x9, x9, #34
  433948:	cmp	w8, #0x8
  43394c:	add	w9, w9, w10
  433950:	b.lt	433930 <argp_usage@@Base+0x1d34>  // b.tstop
  433954:	mov	w19, w22
  433958:	b	433f90 <argp_usage@@Base+0x2394>
  43395c:	mov	w9, #0x1                   	// #1
  433960:	mov	w1, #0x70                  	// #112
  433964:	eor	w8, w26, #0x1
  433968:	mov	w19, wzr
  43396c:	and	w0, w0, w8
  433970:	orr	w24, w26, w9
  433974:	b	433fbc <argp_usage@@Base+0x23c0>
  433978:	cmp	w28, #0x45
  43397c:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433980:	ldr	x8, [sp, #112]
  433984:	ldr	w9, [x8]
  433988:	b	433f8c <argp_usage@@Base+0x2390>
  43398c:	adrp	x27, 459000 <_obstack_memory_used@@Base+0x1ada0>
  433990:	add	x27, x27, #0xb91
  433994:	ldr	x2, [sp, #112]
  433998:	ldr	x4, [sp, #64]
  43399c:	ldr	w5, [sp, #60]
  4339a0:	mov	w26, w0
  4339a4:	and	w3, w0, #0x1
  4339a8:	mov	x0, xzr
  4339ac:	mov	x1, x27
  4339b0:	mov	x24, x16
  4339b4:	bl	433514 <argp_usage@@Base+0x1918>
  4339b8:	bic	w8, w22, w22, asr #31
  4339bc:	cmp	x0, x8
  4339c0:	csel	x19, x8, x0, cc  // cc = lo, ul, last
  4339c4:	mvn	x9, x24
  4339c8:	mov	x16, x24
  4339cc:	cmp	x19, x9
  4339d0:	b.cs	433a14 <argp_usage@@Base+0x1e18>  // b.hs, b.nlast
  4339d4:	ldr	x28, [sp, #136]
  4339d8:	mov	w18, #0xa                   	// #10
  4339dc:	cbz	x28, 434564 <argp_usage@@Base+0x2968>
  4339e0:	cmp	x0, x8
  4339e4:	b.cs	434540 <argp_usage@@Base+0x2944>  // b.hs, b.nlast
  4339e8:	sxtw	x8, w22
  4339ec:	cmp	w20, #0x30
  4339f0:	sub	x20, x8, x0
  4339f4:	b.ne	434528 <argp_usage@@Base+0x292c>  // b.any
  4339f8:	cbz	x20, 434540 <argp_usage@@Base+0x2944>
  4339fc:	mov	w0, #0x30                  	// #48
  433a00:	mov	x1, x28
  433a04:	bl	404330 <fputc@plt>
  433a08:	subs	x20, x20, #0x1
  433a0c:	b.ne	4339fc <argp_usage@@Base+0x1e00>  // b.any
  433a10:	b	434540 <argp_usage@@Base+0x2944>
  433a14:	ldr	x28, [sp, #136]
  433a18:	mov	w8, #0x1                   	// #1
  433a1c:	mov	w18, #0xa                   	// #10
  433a20:	b	43456c <argp_usage@@Base+0x2970>
  433a24:	cmp	w28, #0x45
  433a28:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433a2c:	ldr	x9, [sp, #112]
  433a30:	mov	w10, #0x2493                	// #9363
  433a34:	movk	w10, #0x9249, lsl #16
  433a38:	ldp	w9, w8, [x9, #24]
  433a3c:	sub	w8, w8, w9
  433a40:	b	433a84 <argp_usage@@Base+0x1e88>
  433a44:	cmp	w28, #0x45
  433a48:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433a4c:	ldr	x9, [sp, #112]
  433a50:	mov	w10, #0x2493                	// #9363
  433a54:	movk	w10, #0x9249, lsl #16
  433a58:	ldp	w8, w9, [x9, #24]
  433a5c:	add	w8, w8, #0x6
  433a60:	smull	x11, w8, w10
  433a64:	lsr	x11, x11, #32
  433a68:	add	w11, w11, w8
  433a6c:	asr	w12, w11, #2
  433a70:	add	w11, w12, w11, lsr #31
  433a74:	lsl	w12, w11, #3
  433a78:	sub	w11, w12, w11
  433a7c:	sub	w8, w11, w8
  433a80:	add	w8, w9, w8
  433a84:	add	w8, w8, #0x7
  433a88:	smull	x9, w8, w10
  433a8c:	lsr	x9, x9, #32
  433a90:	add	w8, w9, w8
  433a94:	asr	w9, w8, #2
  433a98:	add	w9, w9, w8, lsr #31
  433a9c:	b	433f8c <argp_usage@@Base+0x2390>
  433aa0:	cmp	w28, #0x45
  433aa4:	b.eq	433dd8 <argp_usage@@Base+0x21dc>  // b.none
  433aa8:	cmp	w28, #0x4f
  433aac:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433ab0:	ldr	x9, [sp, #112]
  433ab4:	mov	w25, wzr
  433ab8:	mov	w8, wzr
  433abc:	mov	w19, #0x4                   	// #4
  433ac0:	ldr	w9, [x9, #20]
  433ac4:	cmn	w9, #0x76c
  433ac8:	add	w21, w9, #0x76c
  433acc:	b	433be8 <argp_usage@@Base+0x1fec>
  433ad0:	str	w0, [sp, #108]
  433ad4:	ldr	x0, [sp, #40]
  433ad8:	mov	x24, x16
  433adc:	bl	404190 <strlen@plt>
  433ae0:	bic	w8, w22, w22, asr #31
  433ae4:	cmp	x0, x8
  433ae8:	csel	x19, x8, x0, cc  // cc = lo, ul, last
  433aec:	mvn	x9, x24
  433af0:	mov	x16, x24
  433af4:	cmp	x19, x9
  433af8:	b.cs	433f44 <argp_usage@@Base+0x2348>  // b.hs, b.nlast
  433afc:	ldr	x28, [sp, #136]
  433b00:	cbz	x28, 434850 <argp_usage@@Base+0x2c54>
  433b04:	mov	x27, x0
  433b08:	cmp	x0, x8
  433b0c:	b.cs	43468c <argp_usage@@Base+0x2a90>  // b.hs, b.nlast
  433b10:	sxtw	x8, w22
  433b14:	cmp	w20, #0x30
  433b18:	sub	x20, x8, x27
  433b1c:	b.ne	434674 <argp_usage@@Base+0x2a78>  // b.any
  433b20:	cbz	x20, 43468c <argp_usage@@Base+0x2a90>
  433b24:	mov	w0, #0x30                  	// #48
  433b28:	mov	x1, x28
  433b2c:	bl	404330 <fputc@plt>
  433b30:	subs	x20, x20, #0x1
  433b34:	b.ne	433b24 <argp_usage@@Base+0x1f28>  // b.any
  433b38:	b	43468c <argp_usage@@Base+0x2a90>
  433b3c:	cmp	w28, #0x45
  433b40:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433b44:	ldr	x8, [sp, #112]
  433b48:	ldr	w9, [x8, #12]
  433b4c:	b	433f8c <argp_usage@@Base+0x2390>
  433b50:	cmp	w28, #0x45
  433b54:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433b58:	ldr	x8, [sp, #112]
  433b5c:	ldr	w9, [x8, #12]
  433b60:	b	433ba4 <argp_usage@@Base+0x1fa8>
  433b64:	cmp	w28, #0x45
  433b68:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433b6c:	ldr	x9, [sp, #112]
  433b70:	mov	w25, wzr
  433b74:	mov	w8, wzr
  433b78:	mov	w19, #0x3                   	// #3
  433b7c:	ldr	w9, [x9, #28]
  433b80:	b	433be0 <argp_usage@@Base+0x1fe4>
  433b84:	cmp	w28, #0x45
  433b88:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433b8c:	ldr	x8, [sp, #112]
  433b90:	ldr	w9, [x8, #8]
  433b94:	b	433ba4 <argp_usage@@Base+0x1fa8>
  433b98:	ldr	w9, [sp, #36]
  433b9c:	cmp	w28, #0x45
  433ba0:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433ba4:	and	w8, w20, #0xff
  433ba8:	cmp	w8, #0x2d
  433bac:	mov	w19, #0x2                   	// #2
  433bb0:	b.eq	433f90 <argp_usage@@Base+0x2394>  // b.none
  433bb4:	cmp	w8, #0x30
  433bb8:	b.eq	433f90 <argp_usage@@Base+0x2394>  // b.none
  433bbc:	mov	w20, #0x5f                  	// #95
  433bc0:	b	433f8c <argp_usage@@Base+0x2390>
  433bc4:	cmp	w28, #0x45
  433bc8:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433bcc:	ldr	x9, [sp, #112]
  433bd0:	mov	w25, wzr
  433bd4:	mov	w8, wzr
  433bd8:	mov	w19, #0x2                   	// #2
  433bdc:	ldr	w9, [x9, #16]
  433be0:	cmn	w9, #0x1
  433be4:	add	w21, w9, #0x1
  433be8:	cset	w9, lt  // lt = tstop
  433bec:	str	x9, [sp, #120]
  433bf0:	b	433fa8 <argp_usage@@Base+0x23ac>
  433bf4:	bic	w8, w22, w22, asr #31
  433bf8:	cmp	w8, #0x1
  433bfc:	csinc	w19, w8, wzr, hi  // hi = pmore
  433c00:	mvn	x9, x16
  433c04:	cmp	x19, x9
  433c08:	b.cs	433d6c <argp_usage@@Base+0x2170>  // b.hs, b.nlast
  433c0c:	ldr	x28, [sp, #136]
  433c10:	cbz	x28, 434920 <argp_usage@@Base+0x2d24>
  433c14:	mov	x24, x16
  433c18:	cmp	w8, #0x2
  433c1c:	b.cc	4346e0 <argp_usage@@Base+0x2ae4>  // b.lo, b.ul, b.last
  433c20:	sxtw	x8, w22
  433c24:	cmp	w20, #0x30
  433c28:	sub	x20, x8, #0x1
  433c2c:	b.ne	4346c8 <argp_usage@@Base+0x2acc>  // b.any
  433c30:	cbz	x20, 4346e0 <argp_usage@@Base+0x2ae4>
  433c34:	mov	w0, #0x30                  	// #48
  433c38:	mov	x1, x28
  433c3c:	bl	404330 <fputc@plt>
  433c40:	subs	x20, x20, #0x1
  433c44:	b.ne	433c34 <argp_usage@@Base+0x2038>  // b.any
  433c48:	b	4346e0 <argp_usage@@Base+0x2ae4>
  433c4c:	ldr	x9, [sp, #112]
  433c50:	mov	w10, #0xb                   	// #11
  433c54:	mov	w25, wzr
  433c58:	mov	w8, wzr
  433c5c:	ldr	w9, [x9, #16]
  433c60:	str	xzr, [sp, #120]
  433c64:	mov	w19, #0x1                   	// #1
  433c68:	mul	w9, w9, w10
  433c6c:	asr	w9, w9, #5
  433c70:	add	w21, w9, #0x1
  433c74:	b	433fa8 <argp_usage@@Base+0x23ac>
  433c78:	ldr	x9, [sp, #112]
  433c7c:	mov	w26, w0
  433c80:	ldr	x0, [sp, #64]
  433c84:	add	x1, sp, #0x90
  433c88:	ldr	x8, [x9, #48]
  433c8c:	ldp	q1, q0, [x9, #16]
  433c90:	ldr	q2, [x9]
  433c94:	mov	x24, x16
  433c98:	str	x8, [sp, #192]
  433c9c:	stp	q1, q0, [sp, #160]
  433ca0:	str	q2, [sp, #144]
  433ca4:	bl	44b2a4 <_obstack_memory_used@@Base+0xd044>
  433ca8:	ldr	x28, [sp, #88]
  433cac:	lsr	x8, x0, #63
  433cb0:	str	x8, [sp, #120]
  433cb4:	mov	x8, x0
  433cb8:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  433cbc:	movk	x9, #0x6667
  433cc0:	smulh	x9, x8, x9
  433cc4:	asr	x12, x9, #2
  433cc8:	mov	w10, #0xa                   	// #10
  433ccc:	add	x9, x12, x9, lsr #63
  433cd0:	cmp	x0, #0x0
  433cd4:	add	x11, x8, #0x9
  433cd8:	msub	w8, w9, w10, w8
  433cdc:	cneg	w8, w8, lt  // lt = tstop
  433ce0:	add	w8, w8, #0x30
  433ce4:	cmp	x11, #0x12
  433ce8:	strb	w8, [x28, #-1]!
  433cec:	mov	x8, x9
  433cf0:	b.hi	433cb8 <argp_usage@@Base+0x20bc>  // b.pmore
  433cf4:	mov	w17, #0xcccc                	// #52428
  433cf8:	mov	w8, wzr
  433cfc:	mov	w19, #0x1                   	// #1
  433d00:	mov	x16, x24
  433d04:	movk	w17, #0xccc, lsl #16
  433d08:	mov	w18, #0xa                   	// #10
  433d0c:	mov	w0, w26
  433d10:	b	4340c0 <argp_usage@@Base+0x24c4>
  433d14:	bic	w8, w22, w22, asr #31
  433d18:	cmp	w8, #0x1
  433d1c:	csinc	w19, w8, wzr, hi  // hi = pmore
  433d20:	mvn	x9, x16
  433d24:	cmp	x19, x9
  433d28:	b.cs	433d6c <argp_usage@@Base+0x2170>  // b.hs, b.nlast
  433d2c:	ldr	x28, [sp, #136]
  433d30:	cbz	x28, 434920 <argp_usage@@Base+0x2d24>
  433d34:	mov	x24, x16
  433d38:	cmp	w8, #0x2
  433d3c:	b.cc	434700 <argp_usage@@Base+0x2b04>  // b.lo, b.ul, b.last
  433d40:	sxtw	x8, w22
  433d44:	cmp	w20, #0x30
  433d48:	sub	x20, x8, #0x1
  433d4c:	b.ne	4346e8 <argp_usage@@Base+0x2aec>  // b.any
  433d50:	cbz	x20, 434700 <argp_usage@@Base+0x2b04>
  433d54:	mov	w0, #0x30                  	// #48
  433d58:	mov	x1, x28
  433d5c:	bl	404330 <fputc@plt>
  433d60:	subs	x20, x20, #0x1
  433d64:	b.ne	433d54 <argp_usage@@Base+0x2158>  // b.any
  433d68:	b	434700 <argp_usage@@Base+0x2b04>
  433d6c:	ldr	x28, [sp, #136]
  433d70:	mov	w8, #0x1                   	// #1
  433d74:	cbnz	w8, 434430 <argp_usage@@Base+0x2834>
  433d78:	b	43442c <argp_usage@@Base+0x2830>
  433d7c:	ldr	x8, [sp, #112]
  433d80:	mov	w9, #0x2493                	// #9363
  433d84:	movk	w9, #0x9249, lsl #16
  433d88:	mov	w19, #0x1                   	// #1
  433d8c:	ldr	w8, [x8, #24]
  433d90:	add	w8, w8, #0x6
  433d94:	smull	x9, w8, w9
  433d98:	lsr	x9, x9, #32
  433d9c:	add	w9, w9, w8
  433da0:	asr	w10, w9, #2
  433da4:	add	w9, w10, w9, lsr #31
  433da8:	sub	w9, w9, w9, lsl #3
  433dac:	add	w8, w8, w9
  433db0:	add	w9, w8, #0x1
  433db4:	b	433f90 <argp_usage@@Base+0x2394>
  433db8:	cmp	w28, #0x45
  433dbc:	b.eq	433e10 <argp_usage@@Base+0x2214>  // b.none
  433dc0:	ldr	x8, [sp, #112]
  433dc4:	mov	w19, #0x1                   	// #1
  433dc8:	ldr	w9, [x8, #24]
  433dcc:	b	433f90 <argp_usage@@Base+0x2394>
  433dd0:	cmp	w28, #0x45
  433dd4:	b.ne	433f50 <argp_usage@@Base+0x2354>  // b.any
  433dd8:	mov	w24, wzr
  433ddc:	mov	w19, wzr
  433de0:	b	433fbc <argp_usage@@Base+0x23c0>
  433de4:	cmp	w9, #0x7a
  433de8:	b.ne	433e10 <argp_usage@@Base+0x2214>  // b.any
  433dec:	add	x23, x23, x8
  433df0:	ldr	x10, [sp, #112]
  433df4:	ldr	w9, [x10, #32]
  433df8:	tbnz	w9, #31, 433f3c <argp_usage@@Base+0x2340>
  433dfc:	ldr	w9, [x10, #40]
  433e00:	tbnz	w9, #31, 434484 <argp_usage@@Base+0x2888>
  433e04:	cbz	w9, 43448c <argp_usage@@Base+0x2890>
  433e08:	str	xzr, [sp, #120]
  433e0c:	b	4344a0 <argp_usage@@Base+0x28a4>
  433e10:	mov	w19, wzr
  433e14:	ldr	x28, [sp, #136]
  433e18:	mov	x9, xzr
  433e1c:	mov	x8, x9
  433e20:	ldrb	w9, [x23, x9]
  433e24:	cmp	w9, #0x25
  433e28:	sub	x9, x8, #0x1
  433e2c:	b.ne	433e1c <argp_usage@@Base+0x2220>  // b.any
  433e30:	neg	x10, x9
  433e34:	bic	w11, w22, w22, asr #31
  433e38:	cmp	w11, w10
  433e3c:	csel	w24, w10, w11, cc  // cc = lo, ul, last
  433e40:	mvn	x12, x16
  433e44:	cmp	x24, x12
  433e48:	b.cs	433ea4 <argp_usage@@Base+0x22a8>  // b.hs, b.nlast
  433e4c:	cbz	x28, 433f18 <argp_usage@@Base+0x231c>
  433e50:	add	x26, x23, x9
  433e54:	and	x27, x10, #0xffffffff
  433e58:	str	w0, [sp, #108]
  433e5c:	str	x16, [sp, #80]
  433e60:	cbnz	w19, 433ed8 <argp_usage@@Base+0x22dc>
  433e64:	cmp	w11, w10
  433e68:	b.ls	433ed8 <argp_usage@@Base+0x22dc>  // b.plast
  433e6c:	cmp	w20, #0x30
  433e70:	sxtw	x9, w22
  433e74:	b.ne	433eb0 <argp_usage@@Base+0x22b4>  // b.any
  433e78:	cmp	x27, x9
  433e7c:	b.eq	433ed8 <argp_usage@@Base+0x22dc>  // b.none
  433e80:	mov	w10, #0x1                   	// #1
  433e84:	sub	w8, w10, w8
  433e88:	sub	x19, x9, x8
  433e8c:	mov	w0, #0x30                  	// #48
  433e90:	mov	x1, x28
  433e94:	bl	404330 <fputc@plt>
  433e98:	subs	x19, x19, #0x1
  433e9c:	b.ne	433e8c <argp_usage@@Base+0x2290>  // b.any
  433ea0:	b	433ed8 <argp_usage@@Base+0x22dc>
  433ea4:	mov	w8, #0x1                   	// #1
  433ea8:	cbnz	w8, 434430 <argp_usage@@Base+0x2834>
  433eac:	b	43442c <argp_usage@@Base+0x2830>
  433eb0:	cmp	x27, x9
  433eb4:	b.eq	433ed8 <argp_usage@@Base+0x22dc>  // b.none
  433eb8:	mov	w10, #0x1                   	// #1
  433ebc:	sub	w8, w10, w8
  433ec0:	sub	x19, x9, x8
  433ec4:	mov	w0, #0x20                  	// #32
  433ec8:	mov	x1, x28
  433ecc:	bl	404330 <fputc@plt>
  433ed0:	subs	x19, x19, #0x1
  433ed4:	b.ne	433ec4 <argp_usage@@Base+0x22c8>  // b.any
  433ed8:	ldr	w8, [sp, #108]
  433edc:	add	x1, x26, #0x1
  433ee0:	tbz	w8, #0, 433ef4 <argp_usage@@Base+0x22f8>
  433ee4:	mov	x0, x28
  433ee8:	mov	x2, x27
  433eec:	bl	434b5c <argp_usage@@Base+0x2f60>
  433ef0:	b	433f08 <argp_usage@@Base+0x230c>
  433ef4:	mov	w2, #0x1                   	// #1
  433ef8:	mov	x0, x1
  433efc:	mov	x1, x27
  433f00:	mov	x3, x28
  433f04:	bl	404ab0 <fwrite@plt>
  433f08:	ldr	x16, [sp, #80]
  433f0c:	mov	w17, #0xcccc                	// #52428
  433f10:	movk	w17, #0xccc, lsl #16
  433f14:	mov	w18, #0xa                   	// #10
  433f18:	mov	w8, wzr
  433f1c:	add	x16, x16, x24
  433f20:	cbnz	w8, 434430 <argp_usage@@Base+0x2834>
  433f24:	b	43442c <argp_usage@@Base+0x2830>
  433f28:	sub	w8, w19, #0x1
  433f2c:	tst	w8, #0x3
  433f30:	b.eq	43457c <argp_usage@@Base+0x2980>  // b.none
  433f34:	mov	w8, wzr
  433f38:	b	43471c <argp_usage@@Base+0x2b20>
  433f3c:	ldr	x28, [sp, #136]
  433f40:	b	43442c <argp_usage@@Base+0x2830>
  433f44:	ldr	x28, [sp, #136]
  433f48:	mov	w8, #0x1                   	// #1
  433f4c:	b	434858 <argp_usage@@Base+0x2c5c>
  433f50:	ldr	x8, [sp, #112]
  433f54:	mov	w9, #0x851f                	// #34079
  433f58:	movk	w9, #0x51eb, lsl #16
  433f5c:	mov	w10, #0x64                  	// #100
  433f60:	ldrsw	x8, [x8, #20]
  433f64:	mul	x9, x8, x9
  433f68:	lsr	x11, x9, #63
  433f6c:	asr	x9, x9, #37
  433f70:	add	w9, w9, w11
  433f74:	cmn	w8, #0x76c
  433f78:	msub	w8, w9, w10, w8
  433f7c:	add	w9, w8, #0x64
  433f80:	csneg	w9, w9, w8, ge  // ge = tcont
  433f84:	cmp	w8, #0x0
  433f88:	csel	w9, w9, w8, lt  // lt = tstop
  433f8c:	mov	w19, #0x2                   	// #2
  433f90:	mov	w25, wzr
  433f94:	mov	w8, wzr
  433f98:	lsr	w10, w9, #31
  433f9c:	mov	w21, w9
  433fa0:	str	x10, [sp, #120]
  433fa4:	str	w9, [sp, #56]
  433fa8:	cmp	w28, #0x4f
  433fac:	b.ne	43406c <argp_usage@@Base+0x2470>  // b.any
  433fb0:	ldr	x9, [sp, #120]
  433fb4:	tbnz	w9, #0, 43406c <argp_usage@@Base+0x2470>
  433fb8:	mov	w24, wzr
  433fbc:	mov	w8, #0x2520                	// #9504
  433fc0:	sturh	w8, [x29, #-40]
  433fc4:	ldr	x8, [sp, #96]
  433fc8:	mov	x26, x16
  433fcc:	str	w0, [sp, #108]
  433fd0:	cbz	w28, 433fdc <argp_usage@@Base+0x23e0>
  433fd4:	ldr	x8, [sp, #72]
  433fd8:	sturb	w28, [x29, #-38]
  433fdc:	ldr	x3, [sp, #112]
  433fe0:	strb	w1, [x8]
  433fe4:	add	x0, sp, #0x90
  433fe8:	sub	x2, x29, #0x28
  433fec:	mov	w1, #0x400                 	// #1024
  433ff0:	strb	wzr, [x8, #1]
  433ff4:	bl	404310 <strftime@plt>
  433ff8:	ldr	x28, [sp, #136]
  433ffc:	cbz	x0, 434180 <argp_usage@@Base+0x2584>
  434000:	sub	x27, x0, #0x1
  434004:	bic	w8, w22, w22, asr #31
  434008:	cmp	x27, x8
  43400c:	csel	x10, x8, x27, cc  // cc = lo, ul, last
  434010:	mvn	x9, x26
  434014:	mov	w17, #0xcccc                	// #52428
  434018:	mov	x16, x26
  43401c:	cmp	x10, x9
  434020:	movk	w17, #0xccc, lsl #16
  434024:	mov	w18, #0xa                   	// #10
  434028:	b.cs	434194 <argp_usage@@Base+0x2598>  // b.hs, b.nlast
  43402c:	cbz	x28, 434418 <argp_usage@@Base+0x281c>
  434030:	str	x10, [sp, #80]
  434034:	cbnz	w19, 4343bc <argp_usage@@Base+0x27c0>
  434038:	cmp	x27, x8
  43403c:	b.cs	4343bc <argp_usage@@Base+0x27c0>  // b.hs, b.nlast
  434040:	sxtw	x8, w22
  434044:	cmp	w20, #0x30
  434048:	sub	x19, x8, x27
  43404c:	b.ne	4343a4 <argp_usage@@Base+0x27a8>  // b.any
  434050:	cbz	x19, 4343bc <argp_usage@@Base+0x27c0>
  434054:	mov	w0, #0x30                  	// #48
  434058:	mov	x1, x28
  43405c:	bl	404330 <fputc@plt>
  434060:	subs	x19, x19, #0x1
  434064:	b.ne	434054 <argp_usage@@Base+0x2458>  // b.any
  434068:	b	4343bc <argp_usage@@Base+0x27c0>
  43406c:	ldr	x9, [sp, #120]
  434070:	ldr	x28, [sp, #88]
  434074:	tst	w9, #0x1
  434078:	cneg	w9, w21, ne  // ne = any
  43407c:	tbz	w25, #0, 434088 <argp_usage@@Base+0x248c>
  434080:	mov	w10, #0x3a                  	// #58
  434084:	strb	w10, [x28, #-1]!
  434088:	mov	w10, #0xcccd                	// #52429
  43408c:	movk	w10, #0xcccc, lsl #16
  434090:	umull	x10, w9, w10
  434094:	mov	w11, #0xa                   	// #10
  434098:	lsr	x21, x10, #35
  43409c:	msub	w10, w21, w11, w9
  4340a0:	orr	w10, w10, #0x30
  4340a4:	asr	w25, w25, #1
  4340a8:	cmp	w9, #0x9
  4340ac:	strb	w10, [x28, #-1]!
  4340b0:	mov	w9, w21
  4340b4:	b.hi	43407c <argp_usage@@Base+0x2480>  // b.pmore
  4340b8:	mov	w9, w21
  4340bc:	cbnz	w25, 43407c <argp_usage@@Base+0x2480>
  4340c0:	cmp	w19, w22
  4340c4:	mov	w9, #0x2b                  	// #43
  4340c8:	csel	w11, w22, w19, lt  // lt = tstop
  4340cc:	cmp	w8, #0x0
  4340d0:	csel	w8, w9, wzr, ne  // ne = any
  4340d4:	ldr	x9, [sp, #120]
  4340d8:	mov	w10, #0x2d                  	// #45
  4340dc:	tst	w9, #0x1
  4340e0:	csel	w27, w10, w8, ne  // ne = any
  4340e4:	cmp	w20, #0x2d
  4340e8:	b.ne	4341a0 <argp_usage@@Base+0x25a4>  // b.any
  4340ec:	cbz	w27, 4349f4 <argp_usage@@Base+0x2df8>
  4340f0:	bic	w8, w22, w22, asr #31
  4340f4:	cmp	w8, #0x1
  4340f8:	csinc	w19, w8, wzr, hi  // hi = pmore
  4340fc:	mvn	x9, x16
  434100:	cmp	x19, x9
  434104:	b.cs	434310 <argp_usage@@Base+0x2714>  // b.hs, b.nlast
  434108:	ldr	x9, [sp, #136]
  43410c:	cbz	x9, 434170 <argp_usage@@Base+0x2574>
  434110:	ldr	x24, [sp, #136]
  434114:	str	w0, [sp, #108]
  434118:	str	x16, [sp, #80]
  43411c:	str	x11, [sp, #24]
  434120:	cbnz	w11, 43414c <argp_usage@@Base+0x2550>
  434124:	cmp	w8, #0x2
  434128:	b.cc	43414c <argp_usage@@Base+0x2550>  // b.lo, b.ul, b.last
  43412c:	sxtw	x8, w22
  434130:	subs	x26, x8, #0x1
  434134:	b.eq	43414c <argp_usage@@Base+0x2550>  // b.none
  434138:	mov	w0, #0x20                  	// #32
  43413c:	mov	x1, x24
  434140:	bl	404330 <fputc@plt>
  434144:	subs	x26, x26, #0x1
  434148:	b.ne	434138 <argp_usage@@Base+0x253c>  // b.any
  43414c:	mov	w0, w27
  434150:	mov	x1, x24
  434154:	bl	404330 <fputc@plt>
  434158:	ldr	x16, [sp, #80]
  43415c:	ldr	w0, [sp, #108]
  434160:	ldr	x11, [sp, #24]
  434164:	mov	w17, #0xcccc                	// #52428
  434168:	movk	w17, #0xccc, lsl #16
  43416c:	mov	w18, #0xa                   	// #10
  434170:	mov	w8, wzr
  434174:	add	x16, x16, x19
  434178:	cbnz	w8, 4349ec <argp_usage@@Base+0x2df0>
  43417c:	b	4349f4 <argp_usage@@Base+0x2df8>
  434180:	mov	w17, #0xcccc                	// #52428
  434184:	mov	x16, x26
  434188:	movk	w17, #0xccc, lsl #16
  43418c:	mov	w18, #0xa                   	// #10
  434190:	b	434424 <argp_usage@@Base+0x2828>
  434194:	mov	w8, #0x1                   	// #1
  434198:	cbnz	w8, 434428 <argp_usage@@Base+0x282c>
  43419c:	b	434424 <argp_usage@@Base+0x2828>
  4341a0:	ldr	x9, [sp, #88]
  4341a4:	cmp	w27, #0x0
  4341a8:	cset	w10, ne  // ne = any
  4341ac:	sxtw	x8, w11
  4341b0:	sub	x9, x28, x9
  4341b4:	sub	x9, x9, x10
  4341b8:	add	x10, x9, x8
  4341bc:	cmp	w10, #0x1
  4341c0:	b.lt	4342a0 <argp_usage@@Base+0x26a4>  // b.tstop
  4341c4:	cmp	w20, #0x5f
  4341c8:	b.ne	43431c <argp_usage@@Base+0x2720>  // b.any
  4341cc:	sxtw	x26, w10
  4341d0:	mvn	x8, x16
  4341d4:	cmp	x26, x8
  4341d8:	b.cs	43439c <argp_usage@@Base+0x27a0>  // b.hs, b.nlast
  4341dc:	ldr	x19, [sp, #136]
  4341e0:	stp	x10, x11, [sp, #16]
  4341e4:	str	w0, [sp, #108]
  4341e8:	str	x16, [sp, #80]
  4341ec:	cbz	x19, 434218 <argp_usage@@Base+0x261c>
  4341f0:	ldr	x8, [sp, #16]
  4341f4:	lsl	x8, x8, #32
  4341f8:	cbz	x8, 434218 <argp_usage@@Base+0x261c>
  4341fc:	mov	x24, xzr
  434200:	mov	w0, #0x20                  	// #32
  434204:	mov	x1, x19
  434208:	bl	404330 <fputc@plt>
  43420c:	add	x24, x24, #0x1
  434210:	cmp	x24, x26
  434214:	b.cc	434200 <argp_usage@@Base+0x2604>  // b.lo, b.ul, b.last
  434218:	ldr	x8, [sp, #16]
  43421c:	ldr	x16, [sp, #80]
  434220:	subs	w8, w22, w8
  434224:	add	x16, x26, x16
  434228:	csel	w22, w8, wzr, gt
  43422c:	cbz	w27, 4345ac <argp_usage@@Base+0x29b0>
  434230:	cmp	w22, #0x1
  434234:	csinc	w19, w22, wzr, hi  // hi = pmore
  434238:	mvn	x8, x16
  43423c:	cmp	x19, x8
  434240:	b.cs	434600 <argp_usage@@Base+0x2a04>  // b.hs, b.nlast
  434244:	ldr	x8, [sp, #136]
  434248:	cbz	x8, 434294 <argp_usage@@Base+0x2698>
  43424c:	ldr	x24, [sp, #136]
  434250:	ldr	x8, [sp, #24]
  434254:	str	x16, [sp, #80]
  434258:	cbnz	w8, 434284 <argp_usage@@Base+0x2688>
  43425c:	cmp	w22, #0x2
  434260:	b.cc	434284 <argp_usage@@Base+0x2688>  // b.lo, b.ul, b.last
  434264:	mov	w8, w22
  434268:	subs	x26, x8, #0x1
  43426c:	b.eq	434284 <argp_usage@@Base+0x2688>  // b.none
  434270:	mov	w0, #0x20                  	// #32
  434274:	mov	x1, x24
  434278:	bl	404330 <fputc@plt>
  43427c:	subs	x26, x26, #0x1
  434280:	b.ne	434270 <argp_usage@@Base+0x2674>  // b.any
  434284:	mov	w0, w27
  434288:	mov	x1, x24
  43428c:	bl	404330 <fputc@plt>
  434290:	ldr	x16, [sp, #80]
  434294:	mov	w8, wzr
  434298:	add	x16, x16, x19
  43429c:	b	434604 <argp_usage@@Base+0x2a08>
  4342a0:	cbz	w27, 4349e4 <argp_usage@@Base+0x2de8>
  4342a4:	bic	w8, w22, w22, asr #31
  4342a8:	cmp	w8, #0x1
  4342ac:	csinc	w19, w8, wzr, hi  // hi = pmore
  4342b0:	mvn	x9, x16
  4342b4:	cmp	x19, x9
  4342b8:	b.cs	434448 <argp_usage@@Base+0x284c>  // b.hs, b.nlast
  4342bc:	ldr	x9, [sp, #136]
  4342c0:	cbz	x9, 4348dc <argp_usage@@Base+0x2ce0>
  4342c4:	ldr	x24, [sp, #136]
  4342c8:	str	w0, [sp, #108]
  4342cc:	str	x16, [sp, #80]
  4342d0:	str	x11, [sp, #24]
  4342d4:	cbnz	w11, 4348b8 <argp_usage@@Base+0x2cbc>
  4342d8:	cmp	w8, #0x2
  4342dc:	b.cc	4348b8 <argp_usage@@Base+0x2cbc>  // b.lo, b.ul, b.last
  4342e0:	sxtw	x8, w22
  4342e4:	cmp	w20, #0x30
  4342e8:	sub	x26, x8, #0x1
  4342ec:	b.ne	43489c <argp_usage@@Base+0x2ca0>  // b.any
  4342f0:	ldr	x24, [sp, #136]
  4342f4:	cbz	x26, 4348b8 <argp_usage@@Base+0x2cbc>
  4342f8:	mov	w0, #0x30                  	// #48
  4342fc:	mov	x1, x24
  434300:	bl	404330 <fputc@plt>
  434304:	subs	x26, x26, #0x1
  434308:	b.ne	4342f8 <argp_usage@@Base+0x26fc>  // b.any
  43430c:	b	4348b8 <argp_usage@@Base+0x2cbc>
  434310:	mov	w8, #0x1                   	// #1
  434314:	cbnz	w8, 4349ec <argp_usage@@Base+0x2df0>
  434318:	b	4349f4 <argp_usage@@Base+0x2df8>
  43431c:	mvn	x9, x16
  434320:	cmp	x8, x9
  434324:	b.cs	43439c <argp_usage@@Base+0x27a0>  // b.hs, b.nlast
  434328:	str	x10, [sp, #16]
  43432c:	cbz	w27, 434980 <argp_usage@@Base+0x2d84>
  434330:	bic	w8, w22, w22, asr #31
  434334:	cmp	w8, #0x1
  434338:	csinc	w12, w8, wzr, hi  // hi = pmore
  43433c:	cmp	x12, x9
  434340:	b.cs	434620 <argp_usage@@Base+0x2a24>  // b.hs, b.nlast
  434344:	ldr	x9, [sp, #136]
  434348:	cbz	x9, 434974 <argp_usage@@Base+0x2d78>
  43434c:	ldr	x24, [sp, #136]
  434350:	mov	x19, x11
  434354:	str	x12, [sp, #8]
  434358:	str	w0, [sp, #108]
  43435c:	str	x16, [sp, #80]
  434360:	cbnz	w11, 43494c <argp_usage@@Base+0x2d50>
  434364:	cmp	w8, #0x2
  434368:	b.cc	43494c <argp_usage@@Base+0x2d50>  // b.lo, b.ul, b.last
  43436c:	sxtw	x8, w22
  434370:	cmp	w20, #0x30
  434374:	sub	x26, x8, #0x1
  434378:	b.ne	434930 <argp_usage@@Base+0x2d34>  // b.any
  43437c:	ldr	x24, [sp, #136]
  434380:	cbz	x26, 43494c <argp_usage@@Base+0x2d50>
  434384:	mov	w0, #0x30                  	// #48
  434388:	mov	x1, x24
  43438c:	bl	404330 <fputc@plt>
  434390:	subs	x26, x26, #0x1
  434394:	b.ne	434384 <argp_usage@@Base+0x2788>  // b.any
  434398:	b	43494c <argp_usage@@Base+0x2d50>
  43439c:	mov	w8, #0x1                   	// #1
  4343a0:	b	4349e8 <argp_usage@@Base+0x2dec>
  4343a4:	cbz	x19, 4343bc <argp_usage@@Base+0x27c0>
  4343a8:	mov	w0, #0x20                  	// #32
  4343ac:	mov	x1, x28
  4343b0:	bl	404330 <fputc@plt>
  4343b4:	subs	x19, x19, #0x1
  4343b8:	b.ne	4343a8 <argp_usage@@Base+0x27ac>  // b.any
  4343bc:	tbz	w24, #0, 4343d4 <argp_usage@@Base+0x27d8>
  4343c0:	ldr	x1, [sp, #48]
  4343c4:	mov	x0, x28
  4343c8:	mov	x2, x27
  4343cc:	bl	434b08 <argp_usage@@Base+0x2f0c>
  4343d0:	b	434404 <argp_usage@@Base+0x2808>
  4343d4:	ldr	w8, [sp, #108]
  4343d8:	tbz	w8, #0, 4343f0 <argp_usage@@Base+0x27f4>
  4343dc:	ldr	x1, [sp, #48]
  4343e0:	mov	x0, x28
  4343e4:	mov	x2, x27
  4343e8:	bl	434b5c <argp_usage@@Base+0x2f60>
  4343ec:	b	434404 <argp_usage@@Base+0x2808>
  4343f0:	ldr	x0, [sp, #48]
  4343f4:	mov	w2, #0x1                   	// #1
  4343f8:	mov	x1, x27
  4343fc:	mov	x3, x28
  434400:	bl	404ab0 <fwrite@plt>
  434404:	ldr	x10, [sp, #80]
  434408:	mov	w17, #0xcccc                	// #52428
  43440c:	mov	x16, x26
  434410:	movk	w17, #0xccc, lsl #16
  434414:	mov	w18, #0xa                   	// #10
  434418:	mov	w8, wzr
  43441c:	add	x16, x10, x16
  434420:	cbnz	w8, 434428 <argp_usage@@Base+0x282c>
  434424:	mov	w8, wzr
  434428:	cbnz	w8, 434430 <argp_usage@@Base+0x2834>
  43442c:	mov	w8, wzr
  434430:	orr	w8, w8, #0x4
  434434:	cmp	w8, #0x4
  434438:	b.ne	434ae0 <argp_usage@@Base+0x2ee4>  // b.any
  43443c:	ldrb	w8, [x23, #1]!
  434440:	cbnz	w8, 4335c4 <argp_usage@@Base+0x19c8>
  434444:	b	434ae4 <argp_usage@@Base+0x2ee8>
  434448:	mov	w8, #0x1                   	// #1
  43444c:	cbnz	w8, 4349e8 <argp_usage@@Base+0x2dec>
  434450:	b	4349e4 <argp_usage@@Base+0x2de8>
  434454:	mov	w8, #0x5c29                	// #23593
  434458:	mov	w9, #0xb850                	// #47184
  43445c:	movk	w8, #0xc28f, lsl #16
  434460:	movk	w9, #0x51e, lsl #16
  434464:	madd	w8, w19, w8, w9
  434468:	mov	w10, #0x5c28                	// #23592
  43446c:	ror	w9, w8, #2
  434470:	movk	w10, #0x28f, lsl #16
  434474:	cmp	w9, w10
  434478:	b.ls	434634 <argp_usage@@Base+0x2a38>  // b.plast
  43447c:	mov	w8, #0x1                   	// #1
  434480:	b	434648 <argp_usage@@Base+0x2a4c>
  434484:	mov	w10, #0x1                   	// #1
  434488:	b	43449c <argp_usage@@Base+0x28a0>
  43448c:	ldr	x10, [sp, #40]
  434490:	ldrb	w10, [x10]
  434494:	cmp	w10, #0x2d
  434498:	cset	w10, eq  // eq = none
  43449c:	str	x10, [sp, #120]
  4344a0:	cmp	x8, #0x3
  4344a4:	b.hi	4345d4 <argp_usage@@Base+0x29d8>  // b.pmore
  4344a8:	mov	w10, #0x8889                	// #34953
  4344ac:	movk	w10, #0x8888, lsl #16
  4344b0:	mov	w11, #0xb3c5                	// #46021
  4344b4:	adrp	x12, 457000 <_obstack_memory_used@@Base+0x18da0>
  4344b8:	movk	w11, #0x91a2, lsl #16
  4344bc:	add	x12, x12, #0xe74
  4344c0:	smull	x13, w9, w10
  4344c4:	smull	x11, w9, w11
  4344c8:	adr	x14, 434518 <argp_usage@@Base+0x291c>
  4344cc:	ldrb	w15, [x12, x8]
  4344d0:	add	x14, x14, x15, lsl #2
  4344d4:	lsr	x8, x13, #32
  4344d8:	lsr	x11, x11, #32
  4344dc:	add	w8, w8, w9
  4344e0:	add	w11, w11, w9
  4344e4:	asr	w12, w8, #5
  4344e8:	add	w12, w12, w8, lsr #31
  4344ec:	asr	w8, w11, #11
  4344f0:	add	w21, w8, w11, lsr #31
  4344f4:	smull	x8, w12, w10
  4344f8:	lsr	x8, x8, #32
  4344fc:	add	w8, w8, w12
  434500:	asr	w10, w8, #5
  434504:	add	w8, w10, w8, lsr #31
  434508:	mov	w10, #0x3c                  	// #60
  43450c:	msub	w8, w8, w10, w12
  434510:	msub	w9, w12, w10, w9
  434514:	br	x14
  434518:	mov	w9, #0x64                  	// #100
  43451c:	mov	w25, wzr
  434520:	mov	w19, #0x5                   	// #5
  434524:	b	43487c <argp_usage@@Base+0x2c80>
  434528:	cbz	x20, 434540 <argp_usage@@Base+0x2944>
  43452c:	mov	w0, #0x20                  	// #32
  434530:	mov	x1, x28
  434534:	bl	404330 <fputc@plt>
  434538:	subs	x20, x20, #0x1
  43453c:	b.ne	43452c <argp_usage@@Base+0x2930>  // b.any
  434540:	ldr	x2, [sp, #112]
  434544:	ldr	x4, [sp, #64]
  434548:	ldr	w5, [sp, #60]
  43454c:	and	w3, w26, #0x1
  434550:	mov	x0, x28
  434554:	mov	x1, x27
  434558:	bl	433514 <argp_usage@@Base+0x1918>
  43455c:	mov	x16, x24
  434560:	mov	w18, #0xa                   	// #10
  434564:	mov	w8, wzr
  434568:	add	x16, x19, x16
  43456c:	mov	w17, #0xcccc                	// #52428
  434570:	movk	w17, #0xccc, lsl #16
  434574:	cbnz	w8, 434430 <argp_usage@@Base+0x2834>
  434578:	b	43442c <argp_usage@@Base+0x2830>
  43457c:	mov	w9, #0x5c29                	// #23593
  434580:	mov	w10, #0xb850                	// #47184
  434584:	movk	w9, #0xc28f, lsl #16
  434588:	movk	w10, #0x51e, lsl #16
  43458c:	madd	w8, w8, w9, w10
  434590:	mov	w10, #0x5c28                	// #23592
  434594:	ror	w9, w8, #2
  434598:	movk	w10, #0x28f, lsl #16
  43459c:	cmp	w9, w10
  4345a0:	b.ls	434708 <argp_usage@@Base+0x2b0c>  // b.plast
  4345a4:	mov	w8, #0x1                   	// #1
  4345a8:	b	43471c <argp_usage@@Base+0x2b20>
  4345ac:	ldr	w0, [sp, #108]
  4345b0:	ldr	x11, [sp, #24]
  4345b4:	mov	w17, #0xcccc                	// #52428
  4345b8:	movk	w17, #0xccc, lsl #16
  4345bc:	mov	w18, #0xa                   	// #10
  4345c0:	b	4349e4 <argp_usage@@Base+0x2de8>
  4345c4:	ldr	w9, [sp, #60]
  4345c8:	mov	w22, #0x9                   	// #9
  4345cc:	mov	w19, #0x9                   	// #9
  4345d0:	b	433f90 <argp_usage@@Base+0x2394>
  4345d4:	mov	w19, wzr
  4345d8:	mov	w8, #0x18                  	// #24
  4345dc:	b	434884 <argp_usage@@Base+0x2c88>
  4345e0:	cbz	w9, 43486c <argp_usage@@Base+0x2c70>
  4345e4:	mov	w10, #0x2710                	// #10000
  4345e8:	mov	w11, #0x64                  	// #100
  4345ec:	madd	w9, w21, w10, w9
  4345f0:	mov	w19, #0x9                   	// #9
  4345f4:	mov	w25, #0x14                  	// #20
  4345f8:	madd	w21, w8, w11, w9
  4345fc:	b	434880 <argp_usage@@Base+0x2c84>
  434600:	mov	w8, #0x1                   	// #1
  434604:	ldr	w0, [sp, #108]
  434608:	ldr	x11, [sp, #24]
  43460c:	mov	w17, #0xcccc                	// #52428
  434610:	movk	w17, #0xccc, lsl #16
  434614:	mov	w18, #0xa                   	// #10
  434618:	cbnz	w8, 4349e8 <argp_usage@@Base+0x2dec>
  43461c:	b	4349e4 <argp_usage@@Base+0x2de8>
  434620:	mov	w8, #0x1                   	// #1
  434624:	b	43497c <argp_usage@@Base+0x2d80>
  434628:	ldr	w9, [sp, #60]
  43462c:	mov	w19, w22
  434630:	b	433f90 <argp_usage@@Base+0x2394>
  434634:	mov	w9, #0xd70b                	// #55051
  434638:	ror	w8, w8, #4
  43463c:	movk	w9, #0xa3, lsl #16
  434640:	cmp	w8, w9
  434644:	cset	w8, cc  // cc = lo, ul, last
  434648:	cmp	w8, #0x0
  43464c:	mov	w8, #0x16d                 	// #365
  434650:	cinc	w8, w8, ne  // ne = any
  434654:	mov	w1, w26
  434658:	sub	w0, w27, w8
  43465c:	bl	434bb0 <argp_usage@@Base+0x2fb4>
  434660:	mvn	w8, w0
  434664:	cmp	w0, #0x0
  434668:	lsr	w9, w8, #31
  43466c:	csel	w0, w0, w25, ge  // ge = tcont
  434670:	b	434738 <argp_usage@@Base+0x2b3c>
  434674:	cbz	x20, 43468c <argp_usage@@Base+0x2a90>
  434678:	mov	w0, #0x20                  	// #32
  43467c:	mov	x1, x28
  434680:	bl	404330 <fputc@plt>
  434684:	subs	x20, x20, #0x1
  434688:	b.ne	434678 <argp_usage@@Base+0x2a7c>  // b.any
  43468c:	tbz	w26, #0, 4346a4 <argp_usage@@Base+0x2aa8>
  434690:	ldr	x1, [sp, #40]
  434694:	mov	x0, x28
  434698:	mov	x2, x27
  43469c:	bl	434b08 <argp_usage@@Base+0x2f0c>
  4346a0:	b	43484c <argp_usage@@Base+0x2c50>
  4346a4:	ldr	w9, [sp, #108]
  4346a8:	eor	w8, w26, #0x1
  4346ac:	and	w8, w9, w8
  4346b0:	tbz	w8, #0, 434838 <argp_usage@@Base+0x2c3c>
  4346b4:	ldr	x1, [sp, #40]
  4346b8:	mov	x0, x28
  4346bc:	mov	x2, x27
  4346c0:	bl	434b5c <argp_usage@@Base+0x2f60>
  4346c4:	b	43484c <argp_usage@@Base+0x2c50>
  4346c8:	cbz	x20, 4346e0 <argp_usage@@Base+0x2ae4>
  4346cc:	mov	w0, #0x20                  	// #32
  4346d0:	mov	x1, x28
  4346d4:	bl	404330 <fputc@plt>
  4346d8:	subs	x20, x20, #0x1
  4346dc:	b.ne	4346cc <argp_usage@@Base+0x2ad0>  // b.any
  4346e0:	mov	w0, #0xa                   	// #10
  4346e4:	b	434908 <argp_usage@@Base+0x2d0c>
  4346e8:	cbz	x20, 434700 <argp_usage@@Base+0x2b04>
  4346ec:	mov	w0, #0x20                  	// #32
  4346f0:	mov	x1, x28
  4346f4:	bl	404330 <fputc@plt>
  4346f8:	subs	x20, x20, #0x1
  4346fc:	b.ne	4346ec <argp_usage@@Base+0x2af0>  // b.any
  434700:	mov	w0, #0x9                   	// #9
  434704:	b	434908 <argp_usage@@Base+0x2d0c>
  434708:	mov	w9, #0xd70b                	// #55051
  43470c:	ror	w8, w8, #4
  434710:	movk	w9, #0xa3, lsl #16
  434714:	cmp	w8, w9
  434718:	cset	w8, cc  // cc = lo, ul, last
  43471c:	cmp	w8, #0x0
  434720:	mov	w8, #0x16d                 	// #365
  434724:	cinc	w8, w8, ne  // ne = any
  434728:	mov	w1, w26
  43472c:	add	w0, w8, w27
  434730:	bl	434bb0 <argp_usage@@Base+0x2fb4>
  434734:	mov	w9, #0xffffffff            	// #-1
  434738:	ldr	x1, [sp, #24]
  43473c:	ldr	x16, [sp, #80]
  434740:	mov	w17, #0xcccc                	// #52428
  434744:	movk	w17, #0xccc, lsl #16
  434748:	mov	w18, #0xa                   	// #10
  43474c:	cmp	w1, #0x47
  434750:	b.eq	4347a4 <argp_usage@@Base+0x2ba8>  // b.none
  434754:	cmp	w1, #0x67
  434758:	b.ne	4347d8 <argp_usage@@Base+0x2bdc>  // b.any
  43475c:	mov	w8, #0x851f                	// #34079
  434760:	movk	w8, #0x51eb, lsl #16
  434764:	smull	x11, w24, w8
  434768:	lsr	x12, x11, #63
  43476c:	asr	x11, x11, #37
  434770:	mov	w10, #0x64                  	// #100
  434774:	add	w11, w11, w12
  434778:	msub	w11, w11, w10, w24
  43477c:	add	w11, w9, w11
  434780:	smull	x8, w11, w8
  434784:	lsr	x12, x8, #63
  434788:	asr	x8, x8, #37
  43478c:	add	w8, w8, w12
  434790:	msub	w12, w8, w10, w11
  434794:	tbnz	w12, #31, 434804 <argp_usage@@Base+0x2c08>
  434798:	str	w12, [sp, #56]
  43479c:	mov	w8, wzr
  4347a0:	b	434820 <argp_usage@@Base+0x2c24>
  4347a4:	mov	w8, #0xfffff894            	// #-1900
  4347a8:	sub	w8, w8, w9
  4347ac:	cmp	w24, w8
  4347b0:	add	w10, w24, w9
  4347b4:	cset	w8, lt  // lt = tstop
  4347b8:	mov	w19, #0x4                   	// #4
  4347bc:	add	w21, w10, #0x76c
  4347c0:	str	x8, [sp, #120]
  4347c4:	mov	w8, #0x1                   	// #1
  4347c8:	ldr	w0, [sp, #108]
  4347cc:	tbnz	w8, #0, 43482c <argp_usage@@Base+0x2c30>
  4347d0:	ldr	w9, [sp, #56]
  4347d4:	b	433f90 <argp_usage@@Base+0x2394>
  4347d8:	mov	w9, #0x2493                	// #9363
  4347dc:	movk	w9, #0x9249, lsl #16
  4347e0:	smull	x9, w0, w9
  4347e4:	lsr	x9, x9, #32
  4347e8:	add	w9, w9, w0
  4347ec:	asr	w10, w9, #2
  4347f0:	add	w9, w10, w9, lsr #31
  4347f4:	mov	w8, wzr
  4347f8:	add	w9, w9, #0x1
  4347fc:	str	w9, [sp, #56]
  434800:	b	434820 <argp_usage@@Base+0x2c24>
  434804:	mov	w10, #0xfffff894            	// #-1900
  434808:	sub	w9, w10, w9
  43480c:	add	w11, w12, #0x64
  434810:	cmp	w24, w9
  434814:	csneg	w12, w11, w12, ge  // ge = tcont
  434818:	mov	w8, wzr
  43481c:	str	w12, [sp, #56]
  434820:	mov	w19, #0x2                   	// #2
  434824:	ldr	w0, [sp, #108]
  434828:	tbz	w8, #0, 4347d0 <argp_usage@@Base+0x2bd4>
  43482c:	mov	w25, wzr
  434830:	mov	w8, wzr
  434834:	b	433fa8 <argp_usage@@Base+0x23ac>
  434838:	ldr	x0, [sp, #40]
  43483c:	mov	w2, #0x1                   	// #1
  434840:	mov	x1, x27
  434844:	mov	x3, x28
  434848:	bl	404ab0 <fwrite@plt>
  43484c:	mov	x16, x24
  434850:	mov	w8, wzr
  434854:	add	x16, x19, x16
  434858:	mov	w17, #0xcccc                	// #52428
  43485c:	movk	w17, #0xccc, lsl #16
  434860:	mov	w18, #0xa                   	// #10
  434864:	cbnz	w8, 434430 <argp_usage@@Base+0x2834>
  434868:	b	43442c <argp_usage@@Base+0x2830>
  43486c:	cbz	w8, 434ad4 <argp_usage@@Base+0x2ed8>
  434870:	mov	w9, #0x64                  	// #100
  434874:	mov	w19, #0x6                   	// #6
  434878:	mov	w25, #0x4                   	// #4
  43487c:	madd	w21, w21, w9, w8
  434880:	mov	w8, #0x4a                  	// #74
  434884:	cmp	w8, #0x18
  434888:	b.eq	433e14 <argp_usage@@Base+0x2218>  // b.none
  43488c:	cmp	w8, #0x4a
  434890:	b.ne	4349ec <argp_usage@@Base+0x2df0>  // b.any
  434894:	mov	w8, #0x1                   	// #1
  434898:	b	433fa8 <argp_usage@@Base+0x23ac>
  43489c:	ldr	x24, [sp, #136]
  4348a0:	cbz	x26, 4348b8 <argp_usage@@Base+0x2cbc>
  4348a4:	mov	w0, #0x20                  	// #32
  4348a8:	mov	x1, x24
  4348ac:	bl	404330 <fputc@plt>
  4348b0:	subs	x26, x26, #0x1
  4348b4:	b.ne	4348a4 <argp_usage@@Base+0x2ca8>  // b.any
  4348b8:	mov	w0, w27
  4348bc:	mov	x1, x24
  4348c0:	bl	404330 <fputc@plt>
  4348c4:	ldr	x16, [sp, #80]
  4348c8:	ldr	w0, [sp, #108]
  4348cc:	ldr	x11, [sp, #24]
  4348d0:	mov	w17, #0xcccc                	// #52428
  4348d4:	movk	w17, #0xccc, lsl #16
  4348d8:	mov	w18, #0xa                   	// #10
  4348dc:	mov	w8, wzr
  4348e0:	add	x16, x16, x19
  4348e4:	cbnz	w8, 4349e8 <argp_usage@@Base+0x2dec>
  4348e8:	b	4349e4 <argp_usage@@Base+0x2de8>
  4348ec:	cbz	x20, 434904 <argp_usage@@Base+0x2d08>
  4348f0:	mov	w0, #0x20                  	// #32
  4348f4:	mov	x1, x28
  4348f8:	bl	404330 <fputc@plt>
  4348fc:	subs	x20, x20, #0x1
  434900:	b.ne	4348f0 <argp_usage@@Base+0x2cf4>  // b.any
  434904:	ldrb	w0, [x23]
  434908:	mov	x1, x28
  43490c:	bl	404330 <fputc@plt>
  434910:	mov	w17, #0xcccc                	// #52428
  434914:	mov	x16, x24
  434918:	movk	w17, #0xccc, lsl #16
  43491c:	mov	w18, #0xa                   	// #10
  434920:	mov	w8, wzr
  434924:	add	x16, x16, x19
  434928:	cbnz	wzr, 434430 <argp_usage@@Base+0x2834>
  43492c:	b	43442c <argp_usage@@Base+0x2830>
  434930:	ldr	x24, [sp, #136]
  434934:	cbz	x26, 43494c <argp_usage@@Base+0x2d50>
  434938:	mov	w0, #0x20                  	// #32
  43493c:	mov	x1, x24
  434940:	bl	404330 <fputc@plt>
  434944:	subs	x26, x26, #0x1
  434948:	b.ne	434938 <argp_usage@@Base+0x2d3c>  // b.any
  43494c:	mov	w0, w27
  434950:	mov	x1, x24
  434954:	bl	404330 <fputc@plt>
  434958:	ldr	x16, [sp, #80]
  43495c:	ldr	w0, [sp, #108]
  434960:	ldr	x12, [sp, #8]
  434964:	mov	w17, #0xcccc                	// #52428
  434968:	movk	w17, #0xccc, lsl #16
  43496c:	mov	w18, #0xa                   	// #10
  434970:	mov	x11, x19
  434974:	mov	w8, wzr
  434978:	add	x16, x16, x12
  43497c:	cbnz	w8, 4349e8 <argp_usage@@Base+0x2dec>
  434980:	ldr	x24, [sp, #136]
  434984:	mov	w27, w0
  434988:	mov	x19, x16
  43498c:	str	x11, [sp, #24]
  434990:	cbz	x24, 4349c4 <argp_usage@@Base+0x2dc8>
  434994:	ldr	x8, [sp, #16]
  434998:	lsl	x8, x8, #32
  43499c:	cbz	x8, 4349c4 <argp_usage@@Base+0x2dc8>
  4349a0:	ldr	x8, [sp, #16]
  4349a4:	mov	x22, xzr
  4349a8:	sxtw	x26, w8
  4349ac:	mov	w0, #0x30                  	// #48
  4349b0:	mov	x1, x24
  4349b4:	bl	404330 <fputc@plt>
  4349b8:	add	x22, x22, #0x1
  4349bc:	cmp	x22, x26
  4349c0:	b.cc	4349ac <argp_usage@@Base+0x2db0>  // b.lo, b.ul, b.last
  4349c4:	ldp	x8, x11, [sp, #16]
  4349c8:	mov	x16, x19
  4349cc:	mov	w17, #0xcccc                	// #52428
  4349d0:	mov	w22, wzr
  4349d4:	add	x16, x19, w8, sxtw
  4349d8:	movk	w17, #0xccc, lsl #16
  4349dc:	mov	w18, #0xa                   	// #10
  4349e0:	mov	w0, w27
  4349e4:	mov	w8, wzr
  4349e8:	cbz	w8, 4349f4 <argp_usage@@Base+0x2df8>
  4349ec:	ldr	x28, [sp, #136]
  4349f0:	b	434430 <argp_usage@@Base+0x2834>
  4349f4:	ldr	x8, [sp, #88]
  4349f8:	mvn	x9, x16
  4349fc:	sub	x27, x8, x28
  434a00:	bic	w8, w22, w22, asr #31
  434a04:	cmp	x27, x8
  434a08:	csel	x19, x8, x27, cc  // cc = lo, ul, last
  434a0c:	cmp	x19, x9
  434a10:	b.cs	434a60 <argp_usage@@Base+0x2e64>  // b.hs, b.nlast
  434a14:	ldr	x9, [sp, #136]
  434a18:	cbz	x9, 434ac0 <argp_usage@@Base+0x2ec4>
  434a1c:	mov	w26, w0
  434a20:	mov	x24, x16
  434a24:	cbnz	w11, 434a84 <argp_usage@@Base+0x2e88>
  434a28:	cmp	x27, x8
  434a2c:	b.cs	434a84 <argp_usage@@Base+0x2e88>  // b.hs, b.nlast
  434a30:	sxtw	x8, w22
  434a34:	cmp	w20, #0x30
  434a38:	sub	x20, x8, x27
  434a3c:	b.ne	434a68 <argp_usage@@Base+0x2e6c>  // b.any
  434a40:	ldr	x22, [sp, #136]
  434a44:	cbz	x20, 434a84 <argp_usage@@Base+0x2e88>
  434a48:	mov	w0, #0x30                  	// #48
  434a4c:	mov	x1, x22
  434a50:	bl	404330 <fputc@plt>
  434a54:	subs	x20, x20, #0x1
  434a58:	b.ne	434a48 <argp_usage@@Base+0x2e4c>  // b.any
  434a5c:	b	434a84 <argp_usage@@Base+0x2e88>
  434a60:	mov	w8, #0x1                   	// #1
  434a64:	b	434ac8 <argp_usage@@Base+0x2ecc>
  434a68:	ldr	x22, [sp, #136]
  434a6c:	cbz	x20, 434a84 <argp_usage@@Base+0x2e88>
  434a70:	mov	w0, #0x20                  	// #32
  434a74:	mov	x1, x22
  434a78:	bl	404330 <fputc@plt>
  434a7c:	subs	x20, x20, #0x1
  434a80:	b.ne	434a70 <argp_usage@@Base+0x2e74>  // b.any
  434a84:	tbz	w26, #0, 434a9c <argp_usage@@Base+0x2ea0>
  434a88:	ldr	x0, [sp, #136]
  434a8c:	mov	x1, x28
  434a90:	mov	x2, x27
  434a94:	bl	434b5c <argp_usage@@Base+0x2f60>
  434a98:	b	434ab0 <argp_usage@@Base+0x2eb4>
  434a9c:	ldr	x3, [sp, #136]
  434aa0:	mov	w2, #0x1                   	// #1
  434aa4:	mov	x0, x28
  434aa8:	mov	x1, x27
  434aac:	bl	404ab0 <fwrite@plt>
  434ab0:	mov	w17, #0xcccc                	// #52428
  434ab4:	mov	x16, x24
  434ab8:	movk	w17, #0xccc, lsl #16
  434abc:	mov	w18, #0xa                   	// #10
  434ac0:	mov	w8, wzr
  434ac4:	add	x16, x19, x16
  434ac8:	ldr	x28, [sp, #136]
  434acc:	cbnz	w8, 434430 <argp_usage@@Base+0x2834>
  434ad0:	b	43442c <argp_usage@@Base+0x2830>
  434ad4:	mov	w25, wzr
  434ad8:	mov	w19, #0x3                   	// #3
  434adc:	b	434880 <argp_usage@@Base+0x2c84>
  434ae0:	mov	x16, xzr
  434ae4:	mov	x0, x16
  434ae8:	add	sp, sp, #0x4c0
  434aec:	ldp	x20, x19, [sp, #80]
  434af0:	ldp	x22, x21, [sp, #64]
  434af4:	ldp	x24, x23, [sp, #48]
  434af8:	ldp	x26, x25, [sp, #32]
  434afc:	ldp	x28, x27, [sp, #16]
  434b00:	ldp	x29, x30, [sp], #96
  434b04:	ret
  434b08:	stp	x29, x30, [sp, #-48]!
  434b0c:	stp	x22, x21, [sp, #16]
  434b10:	stp	x20, x19, [sp, #32]
  434b14:	mov	x29, sp
  434b18:	cbz	x2, 434b4c <argp_usage@@Base+0x2f50>
  434b1c:	mov	x19, x2
  434b20:	mov	x20, x1
  434b24:	mov	x21, x0
  434b28:	bl	4043b0 <__ctype_tolower_loc@plt>
  434b2c:	mov	x22, x0
  434b30:	ldr	x8, [x22]
  434b34:	ldrb	w9, [x20], #1
  434b38:	mov	x1, x21
  434b3c:	sub	x19, x19, #0x1
  434b40:	ldr	w0, [x8, x9, lsl #2]
  434b44:	bl	404330 <fputc@plt>
  434b48:	cbnz	x19, 434b30 <argp_usage@@Base+0x2f34>
  434b4c:	ldp	x20, x19, [sp, #32]
  434b50:	ldp	x22, x21, [sp, #16]
  434b54:	ldp	x29, x30, [sp], #48
  434b58:	ret
  434b5c:	stp	x29, x30, [sp, #-48]!
  434b60:	stp	x22, x21, [sp, #16]
  434b64:	stp	x20, x19, [sp, #32]
  434b68:	mov	x29, sp
  434b6c:	cbz	x2, 434ba0 <argp_usage@@Base+0x2fa4>
  434b70:	mov	x19, x2
  434b74:	mov	x20, x1
  434b78:	mov	x21, x0
  434b7c:	bl	404740 <__ctype_toupper_loc@plt>
  434b80:	mov	x22, x0
  434b84:	ldr	x8, [x22]
  434b88:	ldrb	w9, [x20], #1
  434b8c:	mov	x1, x21
  434b90:	sub	x19, x19, #0x1
  434b94:	ldr	w0, [x8, x9, lsl #2]
  434b98:	bl	404330 <fputc@plt>
  434b9c:	cbnz	x19, 434b84 <argp_usage@@Base+0x2f88>
  434ba0:	ldp	x20, x19, [sp, #32]
  434ba4:	ldp	x22, x21, [sp, #16]
  434ba8:	ldp	x29, x30, [sp], #48
  434bac:	ret
  434bb0:	sub	w8, w0, w1
  434bb4:	mov	w9, #0x2493                	// #9363
  434bb8:	add	w8, w8, #0x17e
  434bbc:	movk	w9, #0x9249, lsl #16
  434bc0:	smull	x9, w8, w9
  434bc4:	lsr	x9, x9, #32
  434bc8:	add	w9, w9, w8
  434bcc:	asr	w10, w9, #2
  434bd0:	add	w9, w10, w9, lsr #31
  434bd4:	lsl	w10, w9, #3
  434bd8:	sub	w9, w10, w9
  434bdc:	sub	w8, w9, w8
  434be0:	add	w8, w0, w8
  434be4:	add	w0, w8, #0x3
  434be8:	ret
  434bec:	stp	x29, x30, [sp, #-64]!
  434bf0:	str	x23, [sp, #16]
  434bf4:	stp	x22, x21, [sp, #32]
  434bf8:	stp	x20, x19, [sp, #48]
  434bfc:	mov	x20, x2
  434c00:	mov	x21, x1
  434c04:	mov	w22, w0
  434c08:	mov	x19, xzr
  434c0c:	mov	w23, #0x1c                  	// #28
  434c10:	mov	x29, sp
  434c14:	b	434c2c <argp_usage@@Base+0x3030>
  434c18:	add	x19, x0, x19
  434c1c:	add	x21, x21, x0
  434c20:	sub	x20, x20, x0
  434c24:	mov	w8, #0x1                   	// #1
  434c28:	tbz	w8, #0, 434c64 <argp_usage@@Base+0x3068>
  434c2c:	cbz	x20, 434c64 <argp_usage@@Base+0x3068>
  434c30:	mov	w0, w22
  434c34:	mov	x1, x21
  434c38:	mov	x2, x20
  434c3c:	bl	43c7e4 <argp_usage@@Base+0xabe8>
  434c40:	cmn	x0, #0x1
  434c44:	b.eq	434c5c <argp_usage@@Base+0x3060>  // b.none
  434c48:	cbnz	x0, 434c18 <argp_usage@@Base+0x301c>
  434c4c:	bl	404d00 <__errno_location@plt>
  434c50:	mov	w8, wzr
  434c54:	str	w23, [x0]
  434c58:	b	434c28 <argp_usage@@Base+0x302c>
  434c5c:	mov	w8, wzr
  434c60:	b	434c28 <argp_usage@@Base+0x302c>
  434c64:	mov	x0, x19
  434c68:	ldp	x20, x19, [sp, #48]
  434c6c:	ldp	x22, x21, [sp, #32]
  434c70:	ldr	x23, [sp, #16]
  434c74:	ldp	x29, x30, [sp], #64
  434c78:	ret
  434c7c:	stp	x29, x30, [sp, #-16]!
  434c80:	mov	x1, x0
  434c84:	mov	w0, wzr
  434c88:	mov	x29, sp
  434c8c:	bl	404350 <clock_gettime@plt>
  434c90:	ldp	x29, x30, [sp], #16
  434c94:	ret
  434c98:	sub	sp, sp, #0x20
  434c9c:	mov	x0, sp
  434ca0:	stp	x29, x30, [sp, #16]
  434ca4:	add	x29, sp, #0x10
  434ca8:	bl	434c7c <argp_usage@@Base+0x3080>
  434cac:	ldp	x0, x1, [sp]
  434cb0:	ldp	x29, x30, [sp, #16]
  434cb4:	add	sp, sp, #0x20
  434cb8:	ret
  434cbc:	ldr	x0, [x0, #16]
  434cc0:	ret
  434cc4:	ldr	x0, [x0, #24]
  434cc8:	ret
  434ccc:	ldr	x0, [x0, #32]
  434cd0:	ret
  434cd4:	ldp	x8, x9, [x0]
  434cd8:	cmp	x8, x9
  434cdc:	b.cs	434d20 <argp_usage@@Base+0x3124>  // b.hs, b.nlast
  434ce0:	ldr	x9, [x0, #8]
  434ce4:	mov	x0, xzr
  434ce8:	b	434cf8 <argp_usage@@Base+0x30fc>
  434cec:	add	x8, x8, #0x10
  434cf0:	cmp	x8, x9
  434cf4:	b.cs	434d24 <argp_usage@@Base+0x3128>  // b.hs, b.nlast
  434cf8:	ldr	x10, [x8]
  434cfc:	cbz	x10, 434cec <argp_usage@@Base+0x30f0>
  434d00:	mov	x10, xzr
  434d04:	mov	x11, x8
  434d08:	ldr	x11, [x11, #8]
  434d0c:	add	x10, x10, #0x1
  434d10:	cbnz	x11, 434d08 <argp_usage@@Base+0x310c>
  434d14:	cmp	x10, x0
  434d18:	csel	x0, x10, x0, hi  // hi = pmore
  434d1c:	b	434cec <argp_usage@@Base+0x30f0>
  434d20:	mov	x0, xzr
  434d24:	ret
  434d28:	ldp	x9, x8, [x0]
  434d2c:	cmp	x9, x8
  434d30:	b.cs	434d70 <argp_usage@@Base+0x3174>  // b.hs, b.nlast
  434d34:	ldr	x11, [x0, #8]
  434d38:	mov	x8, xzr
  434d3c:	mov	x10, xzr
  434d40:	b	434d50 <argp_usage@@Base+0x3154>
  434d44:	add	x9, x9, #0x10
  434d48:	cmp	x9, x11
  434d4c:	b.cs	434d78 <argp_usage@@Base+0x317c>  // b.hs, b.nlast
  434d50:	ldr	x12, [x9]
  434d54:	cbz	x12, 434d44 <argp_usage@@Base+0x3148>
  434d58:	mov	x12, x9
  434d5c:	ldr	x12, [x12, #8]
  434d60:	add	x8, x8, #0x1
  434d64:	cbnz	x12, 434d5c <argp_usage@@Base+0x3160>
  434d68:	add	x10, x10, #0x1
  434d6c:	b	434d44 <argp_usage@@Base+0x3148>
  434d70:	mov	x10, xzr
  434d74:	mov	x8, xzr
  434d78:	ldr	x9, [x0, #24]
  434d7c:	cmp	x10, x9
  434d80:	b.ne	434d98 <argp_usage@@Base+0x319c>  // b.any
  434d84:	ldr	x9, [x0, #32]
  434d88:	cmp	x8, x9
  434d8c:	b.ne	434d98 <argp_usage@@Base+0x319c>  // b.any
  434d90:	mov	w0, #0x1                   	// #1
  434d94:	ret
  434d98:	mov	w0, wzr
  434d9c:	ret
  434da0:	stp	x29, x30, [sp, #-64]!
  434da4:	str	x23, [sp, #16]
  434da8:	stp	x22, x21, [sp, #32]
  434dac:	stp	x20, x19, [sp, #48]
  434db0:	mov	x29, sp
  434db4:	mov	x19, x1
  434db8:	mov	x20, x0
  434dbc:	bl	434ccc <argp_usage@@Base+0x30d0>
  434dc0:	mov	x21, x0
  434dc4:	mov	x0, x20
  434dc8:	bl	434cbc <argp_usage@@Base+0x30c0>
  434dcc:	mov	x22, x0
  434dd0:	mov	x0, x20
  434dd4:	bl	434cc4 <argp_usage@@Base+0x30c8>
  434dd8:	mov	x23, x0
  434ddc:	mov	x0, x20
  434de0:	bl	434cd4 <argp_usage@@Base+0x30d8>
  434de4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  434de8:	mov	x20, x0
  434dec:	add	x2, x2, #0xe8a
  434df0:	mov	w1, #0x1                   	// #1
  434df4:	mov	x0, x19
  434df8:	mov	x3, x21
  434dfc:	bl	404910 <__fprintf_chk@plt>
  434e00:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  434e04:	add	x2, x2, #0xea2
  434e08:	mov	w1, #0x1                   	// #1
  434e0c:	mov	x0, x19
  434e10:	mov	x3, x22
  434e14:	bl	404910 <__fprintf_chk@plt>
  434e18:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  434e1c:	ucvtf	d0, x23
  434e20:	fmov	d1, x8
  434e24:	fmul	d0, d0, d1
  434e28:	ucvtf	d1, x22
  434e2c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  434e30:	fdiv	d0, d0, d1
  434e34:	add	x2, x2, #0xeba
  434e38:	mov	w1, #0x1                   	// #1
  434e3c:	mov	x0, x19
  434e40:	mov	x3, x23
  434e44:	bl	404910 <__fprintf_chk@plt>
  434e48:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  434e4c:	add	x2, x2, #0xedb
  434e50:	mov	w1, #0x1                   	// #1
  434e54:	mov	x0, x19
  434e58:	mov	x3, x20
  434e5c:	bl	404910 <__fprintf_chk@plt>
  434e60:	ldp	x20, x19, [sp, #48]
  434e64:	ldp	x22, x21, [sp, #32]
  434e68:	ldr	x23, [sp, #16]
  434e6c:	ldp	x29, x30, [sp], #64
  434e70:	ret
  434e74:	stp	x29, x30, [sp, #-48]!
  434e78:	str	x21, [sp, #16]
  434e7c:	stp	x20, x19, [sp, #32]
  434e80:	mov	x29, sp
  434e84:	mov	x19, x1
  434e88:	mov	x20, x0
  434e8c:	bl	434ee4 <argp_usage@@Base+0x32e8>
  434e90:	ldr	x8, [x0]
  434e94:	mov	x21, x0
  434e98:	mov	x0, xzr
  434e9c:	cbz	x8, 434ed4 <argp_usage@@Base+0x32d8>
  434ea0:	cbz	x21, 434ed4 <argp_usage@@Base+0x32d8>
  434ea4:	ldr	x1, [x21]
  434ea8:	cmp	x1, x19
  434eac:	b.eq	434ed0 <argp_usage@@Base+0x32d4>  // b.none
  434eb0:	ldr	x8, [x20, #56]
  434eb4:	mov	x0, x19
  434eb8:	blr	x8
  434ebc:	tbnz	w0, #0, 434ed0 <argp_usage@@Base+0x32d4>
  434ec0:	ldr	x21, [x21, #8]
  434ec4:	cbnz	x21, 434ea4 <argp_usage@@Base+0x32a8>
  434ec8:	mov	x0, xzr
  434ecc:	b	434ed4 <argp_usage@@Base+0x32d8>
  434ed0:	ldr	x0, [x21]
  434ed4:	ldp	x20, x19, [sp, #32]
  434ed8:	ldr	x21, [sp, #16]
  434edc:	ldp	x29, x30, [sp], #48
  434ee0:	ret
  434ee4:	stp	x29, x30, [sp, #-32]!
  434ee8:	ldr	x8, [x0, #16]
  434eec:	ldr	x9, [x0, #48]
  434ef0:	str	x19, [sp, #16]
  434ef4:	mov	x19, x0
  434ef8:	mov	x0, x1
  434efc:	mov	x1, x8
  434f00:	mov	x29, sp
  434f04:	blr	x9
  434f08:	ldr	x8, [x19, #16]
  434f0c:	cmp	x0, x8
  434f10:	b.cs	434f28 <argp_usage@@Base+0x332c>  // b.hs, b.nlast
  434f14:	ldr	x8, [x19]
  434f18:	ldr	x19, [sp, #16]
  434f1c:	add	x0, x8, x0, lsl #4
  434f20:	ldp	x29, x30, [sp], #32
  434f24:	ret
  434f28:	bl	404870 <abort@plt>
  434f2c:	stp	x29, x30, [sp, #-16]!
  434f30:	ldr	x8, [x0, #32]
  434f34:	mov	x29, sp
  434f38:	cbz	x8, 434f54 <argp_usage@@Base+0x3358>
  434f3c:	ldr	x9, [x0]
  434f40:	ldr	x8, [x0, #8]
  434f44:	cmp	x9, x8
  434f48:	b.cs	434f60 <argp_usage@@Base+0x3364>  // b.hs, b.nlast
  434f4c:	ldr	x8, [x9], #16
  434f50:	cbz	x8, 434f40 <argp_usage@@Base+0x3344>
  434f54:	mov	x0, x8
  434f58:	ldp	x29, x30, [sp], #16
  434f5c:	ret
  434f60:	bl	404870 <abort@plt>
  434f64:	stp	x29, x30, [sp, #-32]!
  434f68:	stp	x20, x19, [sp, #16]
  434f6c:	mov	x29, sp
  434f70:	mov	x20, x1
  434f74:	mov	x19, x0
  434f78:	bl	434ee4 <argp_usage@@Base+0x32e8>
  434f7c:	mov	x8, x0
  434f80:	b	434f8c <argp_usage@@Base+0x3390>
  434f84:	ldr	x8, [x8, #8]
  434f88:	cbz	x8, 434fa8 <argp_usage@@Base+0x33ac>
  434f8c:	ldr	x9, [x8]
  434f90:	cmp	x9, x20
  434f94:	b.ne	434f84 <argp_usage@@Base+0x3388>  // b.any
  434f98:	ldr	x9, [x8, #8]
  434f9c:	cbz	x9, 434f84 <argp_usage@@Base+0x3388>
  434fa0:	ldr	x0, [x9]
  434fa4:	b	434fc8 <argp_usage@@Base+0x33cc>
  434fa8:	ldr	x8, [x19, #8]
  434fac:	add	x9, x0, #0x10
  434fb0:	cmp	x9, x8
  434fb4:	b.cs	434fc4 <argp_usage@@Base+0x33c8>  // b.hs, b.nlast
  434fb8:	ldr	x0, [x9], #16
  434fbc:	cbz	x0, 434fb0 <argp_usage@@Base+0x33b4>
  434fc0:	b	434fc8 <argp_usage@@Base+0x33cc>
  434fc4:	mov	x0, xzr
  434fc8:	ldp	x20, x19, [sp, #16]
  434fcc:	ldp	x29, x30, [sp], #32
  434fd0:	ret
  434fd4:	ldp	x9, x8, [x0]
  434fd8:	cmp	x9, x8
  434fdc:	b.cs	435038 <argp_usage@@Base+0x343c>  // b.hs, b.nlast
  434fe0:	mov	x10, xzr
  434fe4:	ldr	x8, [x9]
  434fe8:	cbz	x8, 435018 <argp_usage@@Base+0x341c>
  434fec:	cbz	x9, 435018 <argp_usage@@Base+0x341c>
  434ff0:	mov	x11, x9
  434ff4:	cmp	x10, x2
  434ff8:	b.cs	435040 <argp_usage@@Base+0x3444>  // b.hs, b.nlast
  434ffc:	ldr	x8, [x11]
  435000:	str	x8, [x1, x10, lsl #3]
  435004:	ldr	x11, [x11, #8]
  435008:	add	x8, x10, #0x1
  43500c:	mov	x10, x8
  435010:	cbnz	x11, 434ff4 <argp_usage@@Base+0x33f8>
  435014:	b	43501c <argp_usage@@Base+0x3420>
  435018:	mov	x8, x10
  43501c:	ldr	x10, [x0, #8]
  435020:	add	x9, x9, #0x10
  435024:	cmp	x9, x10
  435028:	mov	x10, x8
  43502c:	b.cc	434fe4 <argp_usage@@Base+0x33e8>  // b.lo, b.ul, b.last
  435030:	mov	x0, x8
  435034:	ret
  435038:	mov	x0, xzr
  43503c:	ret
  435040:	mov	x0, x10
  435044:	ret
  435048:	stp	x29, x30, [sp, #-64]!
  43504c:	stp	x24, x23, [sp, #16]
  435050:	stp	x22, x21, [sp, #32]
  435054:	stp	x20, x19, [sp, #48]
  435058:	ldp	x23, x8, [x0]
  43505c:	mov	x29, sp
  435060:	cmp	x23, x8
  435064:	b.cs	4350bc <argp_usage@@Base+0x34c0>  // b.hs, b.nlast
  435068:	mov	x19, x2
  43506c:	mov	x20, x0
  435070:	mov	x22, x1
  435074:	mov	x21, xzr
  435078:	b	43508c <argp_usage@@Base+0x3490>
  43507c:	ldr	x8, [x20, #8]
  435080:	add	x23, x23, #0x10
  435084:	cmp	x23, x8
  435088:	b.cs	4350c0 <argp_usage@@Base+0x34c4>  // b.hs, b.nlast
  43508c:	ldr	x8, [x23]
  435090:	cbz	x8, 43507c <argp_usage@@Base+0x3480>
  435094:	cbz	x23, 43507c <argp_usage@@Base+0x3480>
  435098:	mov	x24, x23
  43509c:	ldr	x0, [x24]
  4350a0:	mov	x1, x19
  4350a4:	blr	x22
  4350a8:	tbz	w0, #0, 4350c0 <argp_usage@@Base+0x34c4>
  4350ac:	ldr	x24, [x24, #8]
  4350b0:	add	x21, x21, #0x1
  4350b4:	cbnz	x24, 43509c <argp_usage@@Base+0x34a0>
  4350b8:	b	43507c <argp_usage@@Base+0x3480>
  4350bc:	mov	x21, xzr
  4350c0:	mov	x0, x21
  4350c4:	ldp	x20, x19, [sp, #48]
  4350c8:	ldp	x22, x21, [sp, #32]
  4350cc:	ldp	x24, x23, [sp, #16]
  4350d0:	ldp	x29, x30, [sp], #64
  4350d4:	ret
  4350d8:	ldrb	w9, [x0]
  4350dc:	cbz	w9, 43510c <argp_usage@@Base+0x3510>
  4350e0:	mov	x8, x0
  4350e4:	mov	x0, xzr
  4350e8:	add	x8, x8, #0x1
  4350ec:	lsl	x10, x0, #5
  4350f0:	sub	x10, x10, x0
  4350f4:	add	x10, x10, w9, uxtb
  4350f8:	ldrb	w9, [x8], #1
  4350fc:	udiv	x11, x10, x1
  435100:	msub	x0, x11, x1, x10
  435104:	cbnz	w9, 4350ec <argp_usage@@Base+0x34f0>
  435108:	ret
  43510c:	mov	x0, xzr
  435110:	ret
  435114:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  435118:	add	x8, x8, #0xef4
  43511c:	ldr	w9, [x8, #16]
  435120:	ldr	q0, [x8]
  435124:	str	w9, [x0, #16]
  435128:	str	q0, [x0]
  43512c:	ret
  435130:	stp	x29, x30, [sp, #-64]!
  435134:	adrp	x8, 435000 <argp_usage@@Base+0x3404>
  435138:	add	x8, x8, #0x204
  43513c:	cmp	x2, #0x0
  435140:	adrp	x9, 435000 <argp_usage@@Base+0x3404>
  435144:	stp	x24, x23, [sp, #16]
  435148:	stp	x22, x21, [sp, #32]
  43514c:	mov	x21, x0
  435150:	add	x9, x9, #0x230
  435154:	csel	x23, x8, x2, eq  // eq = none
  435158:	cmp	x3, #0x0
  43515c:	mov	w0, #0x50                  	// #80
  435160:	stp	x20, x19, [sp, #48]
  435164:	mov	x29, sp
  435168:	mov	x19, x4
  43516c:	mov	x22, x1
  435170:	csel	x24, x9, x3, eq  // eq = none
  435174:	bl	4044f0 <malloc@plt>
  435178:	mov	x20, x0
  43517c:	cbz	x0, 4351ec <argp_usage@@Base+0x35f0>
  435180:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  435184:	add	x8, x8, #0xef4
  435188:	cmp	x22, #0x0
  43518c:	csel	x22, x8, x22, eq  // eq = none
  435190:	mov	x0, x20
  435194:	str	x22, [x20, #40]
  435198:	bl	43523c <argp_usage@@Base+0x3640>
  43519c:	tbz	w0, #0, 4351e0 <argp_usage@@Base+0x35e4>
  4351a0:	mov	x0, x21
  4351a4:	mov	x1, x22
  4351a8:	bl	4352e4 <argp_usage@@Base+0x36e8>
  4351ac:	str	x0, [x20, #16]
  4351b0:	cbz	x0, 4351e0 <argp_usage@@Base+0x35e4>
  4351b4:	mov	w1, #0x10                  	// #16
  4351b8:	mov	x21, x0
  4351bc:	bl	4046a0 <calloc@plt>
  4351c0:	str	x0, [x20]
  4351c4:	cbz	x0, 4351e0 <argp_usage@@Base+0x35e4>
  4351c8:	add	x8, x0, x21, lsl #4
  4351cc:	stp	xzr, xzr, [x20, #24]
  4351d0:	stp	x23, x24, [x20, #48]
  4351d4:	str	x8, [x20, #8]
  4351d8:	stp	x19, xzr, [x20, #64]
  4351dc:	b	4351ec <argp_usage@@Base+0x35f0>
  4351e0:	mov	x0, x20
  4351e4:	bl	4049d0 <free@plt>
  4351e8:	mov	x20, xzr
  4351ec:	mov	x0, x20
  4351f0:	ldp	x20, x19, [sp, #48]
  4351f4:	ldp	x22, x21, [sp, #32]
  4351f8:	ldp	x24, x23, [sp, #16]
  4351fc:	ldp	x29, x30, [sp], #64
  435200:	ret
  435204:	stp	x29, x30, [sp, #-32]!
  435208:	str	x19, [sp, #16]
  43520c:	mov	x19, x1
  435210:	mov	w1, #0x3                   	// #3
  435214:	mov	x29, sp
  435218:	bl	44bea0 <_obstack_memory_used@@Base+0xdc40>
  43521c:	udiv	x8, x0, x19
  435220:	msub	x0, x8, x19, x0
  435224:	ldr	x19, [sp, #16]
  435228:	ldp	x29, x30, [sp], #32
  43522c:	ret
  435230:	cmp	x0, x1
  435234:	cset	w0, eq  // eq = none
  435238:	ret
  43523c:	ldr	x8, [x0, #40]
  435240:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  435244:	add	x9, x9, #0xef4
  435248:	cmp	x8, x9
  43524c:	b.eq	4352dc <argp_usage@@Base+0x36e0>  // b.none
  435250:	ldr	s0, [x8, #8]
  435254:	mov	w10, #0xcccd                	// #52429
  435258:	movk	w10, #0x3dcc, lsl #16
  43525c:	fmov	s1, w10
  435260:	fcmp	s0, s1
  435264:	b.le	4352a0 <argp_usage@@Base+0x36a4>
  435268:	mov	w10, #0x6666                	// #26214
  43526c:	movk	w10, #0x3f66, lsl #16
  435270:	fmov	s1, w10
  435274:	fcmp	s0, s1
  435278:	b.pl	4352a0 <argp_usage@@Base+0x36a4>  // b.nfrst
  43527c:	ldr	s1, [x8, #12]
  435280:	mov	w10, #0xcccd                	// #52429
  435284:	movk	w10, #0x3f8c, lsl #16
  435288:	fmov	s2, w10
  43528c:	fcmp	s1, s2
  435290:	b.le	4352a0 <argp_usage@@Base+0x36a4>
  435294:	ldr	s1, [x8]
  435298:	fcmp	s1, #0.0
  43529c:	b.ge	4352ac <argp_usage@@Base+0x36b0>  // b.tcont
  4352a0:	str	x9, [x0, #40]
  4352a4:	mov	w0, wzr
  4352a8:	ret
  4352ac:	mov	w10, #0xcccd                	// #52429
  4352b0:	movk	w10, #0x3dcc, lsl #16
  4352b4:	fmov	s2, w10
  4352b8:	fadd	s1, s1, s2
  4352bc:	fcmp	s1, s0
  4352c0:	b.pl	4352a0 <argp_usage@@Base+0x36a4>  // b.nfrst
  4352c4:	ldr	s0, [x8, #4]
  4352c8:	fmov	s2, #1.000000000000000000e+00
  4352cc:	fcmp	s0, s2
  4352d0:	b.hi	4352a0 <argp_usage@@Base+0x36a4>  // b.pmore
  4352d4:	fcmp	s1, s0
  4352d8:	b.pl	4352a0 <argp_usage@@Base+0x36a4>  // b.nfrst
  4352dc:	mov	w0, #0x1                   	// #1
  4352e0:	ret
  4352e4:	stp	x29, x30, [sp, #-16]!
  4352e8:	ldrb	w8, [x1, #16]
  4352ec:	mov	x29, sp
  4352f0:	cbnz	w8, 435318 <argp_usage@@Base+0x371c>
  4352f4:	ldr	s0, [x1, #8]
  4352f8:	mov	w8, #0x5f800000            	// #1602224128
  4352fc:	ucvtf	s1, x0
  435300:	fmov	s2, w8
  435304:	fdiv	s0, s1, s0
  435308:	fcvtzu	x8, s0
  43530c:	fcmp	s0, s2
  435310:	csel	x0, x8, x0, lt  // lt = tstop
  435314:	b.ge	435330 <argp_usage@@Base+0x3734>  // b.tcont
  435318:	bl	435abc <argp_usage@@Base+0x3ec0>
  43531c:	lsr	x8, x0, #60
  435320:	cmp	x8, #0x0
  435324:	csel	x0, xzr, x0, ne  // ne = any
  435328:	ldp	x29, x30, [sp], #16
  43532c:	ret
  435330:	mov	x0, xzr
  435334:	ldp	x29, x30, [sp], #16
  435338:	ret
  43533c:	stp	x29, x30, [sp, #-48]!
  435340:	str	x21, [sp, #16]
  435344:	stp	x20, x19, [sp, #32]
  435348:	ldp	x20, x8, [x0]
  43534c:	mov	x19, x0
  435350:	mov	x29, sp
  435354:	b	435364 <argp_usage@@Base+0x3768>
  435358:	stp	xzr, xzr, [x20]
  43535c:	ldr	x8, [x19, #8]
  435360:	add	x20, x20, #0x10
  435364:	cmp	x20, x8
  435368:	b.cs	4353d0 <argp_usage@@Base+0x37d4>  // b.hs, b.nlast
  43536c:	ldr	x8, [x20]
  435370:	cbz	x8, 43535c <argp_usage@@Base+0x3760>
  435374:	ldr	x8, [x19, #64]
  435378:	ldr	x21, [x20, #8]
  43537c:	cmp	x8, #0x0
  435380:	cset	w9, ne  // ne = any
  435384:	cbnz	x21, 4353c0 <argp_usage@@Base+0x37c4>
  435388:	cbz	w9, 435358 <argp_usage@@Base+0x375c>
  43538c:	ldr	x0, [x20]
  435390:	blr	x8
  435394:	b	435358 <argp_usage@@Base+0x375c>
  435398:	str	xzr, [x21]
  43539c:	ldr	x8, [x19, #72]
  4353a0:	ldr	x10, [x21, #8]
  4353a4:	str	x8, [x21, #8]
  4353a8:	ldr	x8, [x19, #64]
  4353ac:	str	x21, [x19, #72]
  4353b0:	mov	x21, x10
  4353b4:	cmp	x8, #0x0
  4353b8:	cset	w9, ne  // ne = any
  4353bc:	cbz	x10, 435388 <argp_usage@@Base+0x378c>
  4353c0:	tbz	w9, #0, 435398 <argp_usage@@Base+0x379c>
  4353c4:	ldr	x0, [x21]
  4353c8:	blr	x8
  4353cc:	b	435398 <argp_usage@@Base+0x379c>
  4353d0:	stp	xzr, xzr, [x19, #24]
  4353d4:	ldp	x20, x19, [sp, #32]
  4353d8:	ldr	x21, [sp, #16]
  4353dc:	ldp	x29, x30, [sp], #48
  4353e0:	ret
  4353e4:	stp	x29, x30, [sp, #-48]!
  4353e8:	stp	x20, x19, [sp, #32]
  4353ec:	ldr	x8, [x0, #64]
  4353f0:	mov	x19, x0
  4353f4:	str	x21, [sp, #16]
  4353f8:	mov	x29, sp
  4353fc:	cbz	x8, 435448 <argp_usage@@Base+0x384c>
  435400:	ldr	x8, [x19, #32]
  435404:	cbz	x8, 435448 <argp_usage@@Base+0x384c>
  435408:	ldp	x20, x8, [x19]
  43540c:	b	435418 <argp_usage@@Base+0x381c>
  435410:	ldr	x8, [x19, #8]
  435414:	add	x20, x20, #0x10
  435418:	cmp	x20, x8
  43541c:	b.cs	435448 <argp_usage@@Base+0x384c>  // b.hs, b.nlast
  435420:	ldr	x8, [x20]
  435424:	cbz	x8, 435410 <argp_usage@@Base+0x3814>
  435428:	cbz	x20, 435410 <argp_usage@@Base+0x3814>
  43542c:	mov	x21, x20
  435430:	ldr	x8, [x19, #64]
  435434:	ldr	x0, [x21]
  435438:	blr	x8
  43543c:	ldr	x21, [x21, #8]
  435440:	cbnz	x21, 435430 <argp_usage@@Base+0x3834>
  435444:	b	435410 <argp_usage@@Base+0x3814>
  435448:	ldp	x20, x8, [x19]
  43544c:	b	435458 <argp_usage@@Base+0x385c>
  435450:	ldr	x8, [x19, #8]
  435454:	add	x20, x20, #0x10
  435458:	cmp	x20, x8
  43545c:	b.cs	43547c <argp_usage@@Base+0x3880>  // b.hs, b.nlast
  435460:	ldr	x0, [x20, #8]
  435464:	cbz	x0, 435450 <argp_usage@@Base+0x3854>
  435468:	ldr	x21, [x0, #8]
  43546c:	bl	4049d0 <free@plt>
  435470:	mov	x0, x21
  435474:	cbnz	x21, 435468 <argp_usage@@Base+0x386c>
  435478:	b	435450 <argp_usage@@Base+0x3854>
  43547c:	ldr	x0, [x19, #72]
  435480:	cbz	x0, 435494 <argp_usage@@Base+0x3898>
  435484:	ldr	x20, [x0, #8]
  435488:	bl	4049d0 <free@plt>
  43548c:	mov	x0, x20
  435490:	cbnz	x20, 435484 <argp_usage@@Base+0x3888>
  435494:	ldr	x0, [x19]
  435498:	bl	4049d0 <free@plt>
  43549c:	mov	x0, x19
  4354a0:	bl	4049d0 <free@plt>
  4354a4:	ldp	x20, x19, [sp, #32]
  4354a8:	ldr	x21, [sp, #16]
  4354ac:	ldp	x29, x30, [sp], #48
  4354b0:	ret
  4354b4:	sub	sp, sp, #0x70
  4354b8:	stp	x29, x30, [sp, #80]
  4354bc:	stp	x20, x19, [sp, #96]
  4354c0:	ldr	x8, [x0, #40]
  4354c4:	mov	x19, x0
  4354c8:	mov	x0, x1
  4354cc:	add	x29, sp, #0x50
  4354d0:	mov	x1, x8
  4354d4:	bl	4352e4 <argp_usage@@Base+0x36e8>
  4354d8:	cbz	x0, 4355c8 <argp_usage@@Base+0x39cc>
  4354dc:	ldr	x8, [x19, #16]
  4354e0:	mov	x20, x0
  4354e4:	cmp	x0, x8
  4354e8:	b.ne	4354f4 <argp_usage@@Base+0x38f8>  // b.any
  4354ec:	mov	w0, #0x1                   	// #1
  4354f0:	b	4355c8 <argp_usage@@Base+0x39cc>
  4354f4:	mov	w1, #0x10                  	// #16
  4354f8:	mov	x0, x20
  4354fc:	bl	4046a0 <calloc@plt>
  435500:	str	x0, [sp]
  435504:	cbz	x0, 4355c8 <argp_usage@@Base+0x39cc>
  435508:	ldr	x8, [sp]
  43550c:	stp	xzr, xzr, [sp, #24]
  435510:	mov	x0, sp
  435514:	mov	x1, x19
  435518:	add	x8, x8, x20, lsl #4
  43551c:	stp	x8, x20, [sp, #8]
  435520:	ldr	x8, [x19, #40]
  435524:	mov	w2, wzr
  435528:	str	x8, [sp, #40]
  43552c:	ldr	x8, [x19, #48]
  435530:	str	x8, [sp, #48]
  435534:	ldr	x8, [x19, #56]
  435538:	str	x8, [sp, #56]
  43553c:	ldr	x8, [x19, #64]
  435540:	str	x8, [sp, #64]
  435544:	ldr	x8, [x19, #72]
  435548:	str	x8, [sp, #72]
  43554c:	bl	4355dc <argp_usage@@Base+0x39e0>
  435550:	tbz	w0, #0, 43558c <argp_usage@@Base+0x3990>
  435554:	ldr	x0, [x19]
  435558:	bl	4049d0 <free@plt>
  43555c:	ldr	x8, [sp]
  435560:	mov	w0, #0x1                   	// #1
  435564:	str	x8, [x19]
  435568:	ldr	x8, [sp, #8]
  43556c:	str	x8, [x19, #8]
  435570:	ldr	x8, [sp, #16]
  435574:	str	x8, [x19, #16]
  435578:	ldr	x8, [sp, #24]
  43557c:	str	x8, [x19, #24]
  435580:	ldr	x8, [sp, #72]
  435584:	str	x8, [x19, #72]
  435588:	b	4355c8 <argp_usage@@Base+0x39cc>
  43558c:	ldr	x8, [sp, #72]
  435590:	mov	x1, sp
  435594:	mov	w2, #0x1                   	// #1
  435598:	mov	x0, x19
  43559c:	str	x8, [x19, #72]
  4355a0:	bl	4355dc <argp_usage@@Base+0x39e0>
  4355a4:	tbz	w0, #0, 4355d8 <argp_usage@@Base+0x39dc>
  4355a8:	mov	x1, sp
  4355ac:	mov	x0, x19
  4355b0:	mov	w2, wzr
  4355b4:	bl	4355dc <argp_usage@@Base+0x39e0>
  4355b8:	tbz	w0, #0, 4355d8 <argp_usage@@Base+0x39dc>
  4355bc:	ldr	x0, [sp]
  4355c0:	bl	4049d0 <free@plt>
  4355c4:	mov	w0, wzr
  4355c8:	ldp	x20, x19, [sp, #96]
  4355cc:	ldp	x29, x30, [sp, #80]
  4355d0:	add	sp, sp, #0x70
  4355d4:	ret
  4355d8:	bl	404870 <abort@plt>
  4355dc:	stp	x29, x30, [sp, #-80]!
  4355e0:	str	x25, [sp, #16]
  4355e4:	stp	x24, x23, [sp, #32]
  4355e8:	stp	x22, x21, [sp, #48]
  4355ec:	stp	x20, x19, [sp, #64]
  4355f0:	ldp	x24, x8, [x1]
  4355f4:	mov	x29, sp
  4355f8:	cmp	x24, x8
  4355fc:	b.cs	435718 <argp_usage@@Base+0x3b1c>  // b.hs, b.nlast
  435600:	mov	w19, w2
  435604:	mov	x20, x1
  435608:	mov	x21, x0
  43560c:	b	435630 <argp_usage@@Base+0x3a34>
  435610:	mov	w8, #0x4                   	// #4
  435614:	orr	w8, w8, #0x4
  435618:	cmp	w8, #0x4
  43561c:	b.ne	435720 <argp_usage@@Base+0x3b24>  // b.any
  435620:	ldr	x8, [x20, #8]
  435624:	add	x24, x24, #0x10
  435628:	cmp	x24, x8
  43562c:	b.cs	435718 <argp_usage@@Base+0x3b1c>  // b.hs, b.nlast
  435630:	ldr	x8, [x24]
  435634:	cbz	x8, 435620 <argp_usage@@Base+0x3a24>
  435638:	ldr	x22, [x24, #8]
  43563c:	cbnz	x22, 435668 <argp_usage@@Base+0x3a6c>
  435640:	b	435698 <argp_usage@@Base+0x3a9c>
  435644:	str	x23, [x0]
  435648:	ldr	x8, [x21, #24]
  43564c:	mov	x0, x21
  435650:	mov	x1, x22
  435654:	add	x8, x8, #0x1
  435658:	str	x8, [x21, #24]
  43565c:	bl	435b50 <argp_usage@@Base+0x3f54>
  435660:	mov	x22, x25
  435664:	cbz	x25, 435698 <argp_usage@@Base+0x3a9c>
  435668:	ldr	x23, [x22]
  43566c:	mov	x0, x21
  435670:	mov	x1, x23
  435674:	bl	434ee4 <argp_usage@@Base+0x32e8>
  435678:	ldr	x8, [x0]
  43567c:	ldr	x25, [x22, #8]
  435680:	cbz	x8, 435644 <argp_usage@@Base+0x3a48>
  435684:	ldr	x8, [x0, #8]
  435688:	str	x8, [x22, #8]
  43568c:	str	x22, [x0, #8]
  435690:	mov	x22, x25
  435694:	cbnz	x25, 435668 <argp_usage@@Base+0x3a6c>
  435698:	ldr	x22, [x24]
  43569c:	str	xzr, [x24, #8]
  4356a0:	tbnz	w19, #0, 435610 <argp_usage@@Base+0x3a14>
  4356a4:	mov	x0, x21
  4356a8:	mov	x1, x22
  4356ac:	bl	434ee4 <argp_usage@@Base+0x32e8>
  4356b0:	ldr	x8, [x0]
  4356b4:	mov	x23, x0
  4356b8:	cbz	x8, 4356e4 <argp_usage@@Base+0x3ae8>
  4356bc:	mov	x0, x21
  4356c0:	bl	435968 <argp_usage@@Base+0x3d6c>
  4356c4:	cbz	x0, 43570c <argp_usage@@Base+0x3b10>
  4356c8:	str	x22, [x0]
  4356cc:	ldr	x9, [x23, #8]
  4356d0:	mov	w8, wzr
  4356d4:	str	x9, [x0, #8]
  4356d8:	str	x0, [x23, #8]
  4356dc:	cbnz	wzr, 435614 <argp_usage@@Base+0x3a18>
  4356e0:	b	4356f4 <argp_usage@@Base+0x3af8>
  4356e4:	str	x22, [x23]
  4356e8:	ldr	x8, [x21, #24]
  4356ec:	add	x8, x8, #0x1
  4356f0:	str	x8, [x21, #24]
  4356f4:	str	xzr, [x24]
  4356f8:	ldr	x9, [x20, #24]
  4356fc:	mov	w8, wzr
  435700:	sub	x9, x9, #0x1
  435704:	str	x9, [x20, #24]
  435708:	b	435614 <argp_usage@@Base+0x3a18>
  43570c:	mov	w8, #0x1                   	// #1
  435710:	cbnz	w8, 435614 <argp_usage@@Base+0x3a18>
  435714:	b	4356f4 <argp_usage@@Base+0x3af8>
  435718:	mov	w0, #0x1                   	// #1
  43571c:	b	435724 <argp_usage@@Base+0x3b28>
  435720:	mov	w0, wzr
  435724:	ldp	x20, x19, [sp, #64]
  435728:	ldp	x22, x21, [sp, #48]
  43572c:	ldp	x24, x23, [sp, #32]
  435730:	ldr	x25, [sp, #16]
  435734:	ldp	x29, x30, [sp], #80
  435738:	ret
  43573c:	stp	x29, x30, [sp, #-48]!
  435740:	str	x21, [sp, #16]
  435744:	stp	x20, x19, [sp, #32]
  435748:	mov	x29, sp
  43574c:	cbz	x1, 435888 <argp_usage@@Base+0x3c8c>
  435750:	mov	x21, x2
  435754:	add	x2, x29, #0x18
  435758:	mov	w3, wzr
  43575c:	mov	x20, x1
  435760:	mov	x19, x0
  435764:	bl	43588c <argp_usage@@Base+0x3c90>
  435768:	cbz	x0, 435780 <argp_usage@@Base+0x3b84>
  43576c:	cbz	x21, 435850 <argp_usage@@Base+0x3c54>
  435770:	mov	x8, x0
  435774:	mov	w0, wzr
  435778:	str	x8, [x21]
  43577c:	b	435878 <argp_usage@@Base+0x3c7c>
  435780:	ldr	x8, [x19, #40]
  435784:	ldp	x10, x9, [x19, #16]
  435788:	ldr	s0, [x8, #8]
  43578c:	ucvtf	s2, x10
  435790:	ucvtf	s1, x9
  435794:	fmul	s0, s0, s2
  435798:	fcmp	s0, s1
  43579c:	b.pl	435818 <argp_usage@@Base+0x3c1c>  // b.nfrst
  4357a0:	mov	x0, x19
  4357a4:	bl	43523c <argp_usage@@Base+0x3640>
  4357a8:	ldr	x8, [x19, #40]
  4357ac:	ldp	x10, x9, [x19, #16]
  4357b0:	ldr	s0, [x8, #8]
  4357b4:	ucvtf	s1, x10
  4357b8:	ucvtf	s2, x9
  4357bc:	fmul	s3, s0, s1
  4357c0:	fcmp	s3, s2
  4357c4:	b.pl	435818 <argp_usage@@Base+0x3c1c>  // b.nfrst
  4357c8:	ldr	s2, [x8, #12]
  4357cc:	ldrb	w8, [x8, #16]
  4357d0:	fmul	s1, s2, s1
  4357d4:	cmp	w8, #0x0
  4357d8:	fmul	s0, s0, s1
  4357dc:	mov	w8, #0x5f800000            	// #1602224128
  4357e0:	fcsel	s0, s0, s1, eq  // eq = none
  4357e4:	fmov	s1, w8
  4357e8:	fcmp	s0, s1
  4357ec:	b.ge	435858 <argp_usage@@Base+0x3c5c>  // b.tcont
  4357f0:	fcvtzu	x1, s0
  4357f4:	mov	x0, x19
  4357f8:	bl	4354b4 <argp_usage@@Base+0x38b8>
  4357fc:	tbz	w0, #0, 435858 <argp_usage@@Base+0x3c5c>
  435800:	add	x2, x29, #0x18
  435804:	mov	x0, x19
  435808:	mov	x1, x20
  43580c:	mov	w3, wzr
  435810:	bl	43588c <argp_usage@@Base+0x3c90>
  435814:	cbnz	x0, 435888 <argp_usage@@Base+0x3c8c>
  435818:	ldr	x21, [x29, #24]
  43581c:	ldr	x8, [x21]
  435820:	cbz	x8, 435860 <argp_usage@@Base+0x3c64>
  435824:	mov	x0, x19
  435828:	bl	435968 <argp_usage@@Base+0x3d6c>
  43582c:	cbz	x0, 435858 <argp_usage@@Base+0x3c5c>
  435830:	str	x20, [x0]
  435834:	ldr	x8, [x21, #8]
  435838:	str	x8, [x0, #8]
  43583c:	str	x0, [x21, #8]
  435840:	ldr	x8, [x19, #32]
  435844:	add	x8, x8, #0x1
  435848:	str	x8, [x19, #32]
  43584c:	b	435874 <argp_usage@@Base+0x3c78>
  435850:	mov	w0, wzr
  435854:	b	435878 <argp_usage@@Base+0x3c7c>
  435858:	mov	w0, #0xffffffff            	// #-1
  43585c:	b	435878 <argp_usage@@Base+0x3c7c>
  435860:	str	x20, [x21]
  435864:	ldp	x9, x8, [x19, #24]
  435868:	add	x8, x8, #0x1
  43586c:	add	x9, x9, #0x1
  435870:	stp	x9, x8, [x19, #24]
  435874:	mov	w0, #0x1                   	// #1
  435878:	ldp	x20, x19, [sp, #32]
  43587c:	ldr	x21, [sp, #16]
  435880:	ldp	x29, x30, [sp], #48
  435884:	ret
  435888:	bl	404870 <abort@plt>
  43588c:	stp	x29, x30, [sp, #-64]!
  435890:	str	x23, [sp, #16]
  435894:	stp	x22, x21, [sp, #32]
  435898:	stp	x20, x19, [sp, #48]
  43589c:	mov	x29, sp
  4358a0:	mov	w21, w3
  4358a4:	mov	x23, x2
  4358a8:	mov	x22, x1
  4358ac:	mov	x19, x0
  4358b0:	bl	434ee4 <argp_usage@@Base+0x32e8>
  4358b4:	str	x0, [x23]
  4358b8:	ldr	x1, [x0]
  4358bc:	cbz	x1, 435924 <argp_usage@@Base+0x3d28>
  4358c0:	mov	x20, x0
  4358c4:	cmp	x1, x22
  4358c8:	b.eq	4358dc <argp_usage@@Base+0x3ce0>  // b.none
  4358cc:	ldr	x8, [x19, #56]
  4358d0:	mov	x0, x22
  4358d4:	blr	x8
  4358d8:	tbz	w0, #0, 4358f8 <argp_usage@@Base+0x3cfc>
  4358dc:	ldr	x22, [x20]
  4358e0:	tbz	w21, #0, 435950 <argp_usage@@Base+0x3d54>
  4358e4:	ldr	x1, [x20, #8]
  4358e8:	cbz	x1, 43594c <argp_usage@@Base+0x3d50>
  4358ec:	ldr	q0, [x1]
  4358f0:	str	q0, [x20]
  4358f4:	b	435940 <argp_usage@@Base+0x3d44>
  4358f8:	ldr	x8, [x20, #8]!
  4358fc:	cbz	x8, 435924 <argp_usage@@Base+0x3d28>
  435900:	ldr	x1, [x8]
  435904:	cmp	x1, x22
  435908:	b.eq	43592c <argp_usage@@Base+0x3d30>  // b.none
  43590c:	ldr	x8, [x19, #56]
  435910:	mov	x0, x22
  435914:	blr	x8
  435918:	tbnz	w0, #0, 43592c <argp_usage@@Base+0x3d30>
  43591c:	ldr	x20, [x20]
  435920:	b	4358f8 <argp_usage@@Base+0x3cfc>
  435924:	mov	x22, xzr
  435928:	b	435950 <argp_usage@@Base+0x3d54>
  43592c:	ldr	x1, [x20]
  435930:	ldr	x22, [x1]
  435934:	tbz	w21, #0, 435950 <argp_usage@@Base+0x3d54>
  435938:	ldr	x8, [x1, #8]
  43593c:	str	x8, [x20]
  435940:	mov	x0, x19
  435944:	bl	435b50 <argp_usage@@Base+0x3f54>
  435948:	b	435950 <argp_usage@@Base+0x3d54>
  43594c:	str	xzr, [x20]
  435950:	mov	x0, x22
  435954:	ldp	x20, x19, [sp, #48]
  435958:	ldp	x22, x21, [sp, #32]
  43595c:	ldr	x23, [sp, #16]
  435960:	ldp	x29, x30, [sp], #64
  435964:	ret
  435968:	stp	x29, x30, [sp, #-16]!
  43596c:	mov	x8, x0
  435970:	ldr	x0, [x0, #72]
  435974:	mov	x29, sp
  435978:	cbz	x0, 43598c <argp_usage@@Base+0x3d90>
  43597c:	ldr	x9, [x0, #8]
  435980:	str	x9, [x8, #72]
  435984:	ldp	x29, x30, [sp], #16
  435988:	ret
  43598c:	mov	w0, #0x10                  	// #16
  435990:	bl	4044f0 <malloc@plt>
  435994:	ldp	x29, x30, [sp], #16
  435998:	ret
  43599c:	stp	x29, x30, [sp, #-32]!
  4359a0:	mov	x29, sp
  4359a4:	add	x2, x29, #0x18
  4359a8:	str	x19, [sp, #16]
  4359ac:	mov	x19, x1
  4359b0:	bl	43573c <argp_usage@@Base+0x3b40>
  4359b4:	ldr	x8, [x29, #24]
  4359b8:	cmp	w0, #0x0
  4359bc:	csel	x8, x8, x19, eq  // eq = none
  4359c0:	ldr	x19, [sp, #16]
  4359c4:	cmn	w0, #0x1
  4359c8:	csel	x0, xzr, x8, eq  // eq = none
  4359cc:	ldp	x29, x30, [sp], #32
  4359d0:	ret
  4359d4:	stp	x29, x30, [sp, #-48]!
  4359d8:	mov	x29, sp
  4359dc:	add	x2, x29, #0x18
  4359e0:	mov	w3, #0x1                   	// #1
  4359e4:	str	x21, [sp, #16]
  4359e8:	stp	x20, x19, [sp, #32]
  4359ec:	mov	x20, x0
  4359f0:	bl	43588c <argp_usage@@Base+0x3c90>
  4359f4:	mov	x19, x0
  4359f8:	cbz	x0, 435aa8 <argp_usage@@Base+0x3eac>
  4359fc:	ldr	x8, [x20, #32]
  435a00:	sub	x8, x8, #0x1
  435a04:	str	x8, [x20, #32]
  435a08:	ldr	x8, [x29, #24]
  435a0c:	ldr	x8, [x8]
  435a10:	cbnz	x8, 435aa8 <argp_usage@@Base+0x3eac>
  435a14:	ldp	x10, x8, [x20, #16]
  435a18:	ldr	x9, [x20, #40]
  435a1c:	sub	x8, x8, #0x1
  435a20:	str	x8, [x20, #24]
  435a24:	ldr	s0, [x9]
  435a28:	ucvtf	s2, x10
  435a2c:	ucvtf	s1, x8
  435a30:	fmul	s0, s0, s2
  435a34:	fcmp	s0, s1
  435a38:	b.le	435aa8 <argp_usage@@Base+0x3eac>
  435a3c:	mov	x0, x20
  435a40:	bl	43523c <argp_usage@@Base+0x3640>
  435a44:	ldr	x8, [x20, #40]
  435a48:	ldp	x10, x9, [x20, #16]
  435a4c:	ldr	s1, [x8]
  435a50:	ucvtf	s0, x10
  435a54:	ucvtf	s2, x9
  435a58:	fmul	s1, s1, s0
  435a5c:	fcmp	s1, s2
  435a60:	b.le	435aa8 <argp_usage@@Base+0x3eac>
  435a64:	ldr	s1, [x8, #4]
  435a68:	ldrb	w9, [x8, #16]
  435a6c:	fmul	s0, s1, s0
  435a70:	cbnz	w9, 435a7c <argp_usage@@Base+0x3e80>
  435a74:	ldr	s1, [x8, #8]
  435a78:	fmul	s0, s0, s1
  435a7c:	fcvtzu	x1, s0
  435a80:	mov	x0, x20
  435a84:	bl	4354b4 <argp_usage@@Base+0x38b8>
  435a88:	tbnz	w0, #0, 435aa8 <argp_usage@@Base+0x3eac>
  435a8c:	ldr	x0, [x20, #72]
  435a90:	cbz	x0, 435aa4 <argp_usage@@Base+0x3ea8>
  435a94:	ldr	x21, [x0, #8]
  435a98:	bl	4049d0 <free@plt>
  435a9c:	mov	x0, x21
  435aa0:	cbnz	x21, 435a94 <argp_usage@@Base+0x3e98>
  435aa4:	str	xzr, [x20, #72]
  435aa8:	mov	x0, x19
  435aac:	ldp	x20, x19, [sp, #32]
  435ab0:	ldr	x21, [sp, #16]
  435ab4:	ldp	x29, x30, [sp], #48
  435ab8:	ret
  435abc:	stp	x29, x30, [sp, #-32]!
  435ac0:	cmp	x0, #0xa
  435ac4:	mov	w8, #0xa                   	// #10
  435ac8:	csel	x8, x0, x8, hi  // hi = pmore
  435acc:	str	x19, [sp, #16]
  435ad0:	orr	x19, x8, #0x1
  435ad4:	mov	x29, sp
  435ad8:	cmn	x19, #0x1
  435adc:	b.eq	435af8 <argp_usage@@Base+0x3efc>  // b.none
  435ae0:	mov	x0, x19
  435ae4:	bl	435b08 <argp_usage@@Base+0x3f0c>
  435ae8:	tbnz	w0, #0, 435af8 <argp_usage@@Base+0x3efc>
  435aec:	add	x19, x19, #0x2
  435af0:	cmn	x19, #0x1
  435af4:	b.ne	435ae0 <argp_usage@@Base+0x3ee4>  // b.any
  435af8:	mov	x0, x19
  435afc:	ldr	x19, [sp, #16]
  435b00:	ldp	x29, x30, [sp], #32
  435b04:	ret
  435b08:	mov	w8, #0x3                   	// #3
  435b0c:	cmp	x0, #0xa
  435b10:	b.cc	435b3c <argp_usage@@Base+0x3f40>  // b.lo, b.ul, b.last
  435b14:	mov	w9, #0x9                   	// #9
  435b18:	mov	w10, #0x10                  	// #16
  435b1c:	udiv	x11, x0, x8
  435b20:	msub	x11, x11, x8, x0
  435b24:	cbz	x11, 435b3c <argp_usage@@Base+0x3f40>
  435b28:	add	x9, x10, x9
  435b2c:	add	x8, x8, #0x2
  435b30:	cmp	x9, x0
  435b34:	add	x10, x10, #0x8
  435b38:	b.cc	435b1c <argp_usage@@Base+0x3f20>  // b.lo, b.ul, b.last
  435b3c:	udiv	x9, x0, x8
  435b40:	msub	x8, x9, x8, x0
  435b44:	cmp	x8, #0x0
  435b48:	cset	w0, ne  // ne = any
  435b4c:	ret
  435b50:	str	xzr, [x1]
  435b54:	ldr	x8, [x0, #72]
  435b58:	str	x8, [x1, #8]
  435b5c:	str	x1, [x0, #72]
  435b60:	ret
  435b64:	sub	sp, sp, #0xa0
  435b68:	tst	w2, #0x20
  435b6c:	mov	w8, #0x3e8                 	// #1000
  435b70:	mov	w9, #0x400                 	// #1024
  435b74:	stp	x29, x30, [sp, #64]
  435b78:	stp	x28, x27, [sp, #80]
  435b7c:	stp	x26, x25, [sp, #96]
  435b80:	stp	x24, x23, [sp, #112]
  435b84:	stp	x22, x21, [sp, #128]
  435b88:	stp	x20, x19, [sp, #144]
  435b8c:	add	x29, sp, #0x40
  435b90:	mov	x21, x4
  435b94:	mov	x23, x3
  435b98:	mov	w19, w2
  435b9c:	mov	x20, x1
  435ba0:	mov	x28, x0
  435ba4:	and	w25, w2, #0x3
  435ba8:	csel	w22, w9, w8, ne  // ne = any
  435bac:	bl	4043d0 <localeconv@plt>
  435bb0:	ldr	x27, [x0]
  435bb4:	mov	x24, x0
  435bb8:	mov	x0, x27
  435bbc:	bl	404190 <strlen@plt>
  435bc0:	ldp	x24, x9, [x24, #8]
  435bc4:	sub	x8, x0, #0x1
  435bc8:	cmp	x8, #0x10
  435bcc:	adrp	x8, 454000 <_obstack_memory_used@@Base+0x15da0>
  435bd0:	add	x8, x8, #0x232
  435bd4:	csinc	x26, x0, xzr, cc  // cc = lo, ul, last
  435bd8:	csel	x8, x27, x8, cc  // cc = lo, ul, last
  435bdc:	mov	x0, x24
  435be0:	str	x9, [sp, #8]
  435be4:	stur	x8, [x29, #-16]
  435be8:	bl	404190 <strlen@plt>
  435bec:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  435bf0:	add	x8, x8, #0xd3e
  435bf4:	cmp	x0, #0x11
  435bf8:	csel	x27, x24, x8, cc  // cc = lo, ul, last
  435bfc:	cmp	x21, x23
  435c00:	add	x24, x20, #0x287
  435c04:	b.ls	435c70 <argp_usage@@Base+0x4074>  // b.plast
  435c08:	cbz	x23, 435c88 <argp_usage@@Base+0x408c>
  435c0c:	udiv	x9, x21, x23
  435c10:	msub	x8, x9, x23, x21
  435c14:	cbnz	x8, 435c88 <argp_usage@@Base+0x408c>
  435c18:	str	x27, [sp, #32]
  435c1c:	udiv	x27, x28, x9
  435c20:	msub	x8, x27, x9, x28
  435c24:	add	x8, x8, x8, lsl #2
  435c28:	lsl	x11, x8, #1
  435c2c:	udiv	x8, x11, x9
  435c30:	msub	x11, x8, x9, x11
  435c34:	lsl	x11, x11, #1
  435c38:	cmp	x11, #0x0
  435c3c:	mov	w10, #0x2                   	// #2
  435c40:	cset	w12, ne  // ne = any
  435c44:	cmp	x9, x11
  435c48:	cinc	w10, w10, cc  // cc = lo, ul, last
  435c4c:	cmp	x11, x9
  435c50:	csel	w9, w12, w10, cc  // cc = lo, ul, last
  435c54:	tbz	w19, #4, 435e84 <argp_usage@@Base+0x4288>
  435c58:	cmp	x27, x22
  435c5c:	b.cs	435f20 <argp_usage@@Base+0x4324>  // b.hs, b.nlast
  435c60:	mov	w23, wzr
  435c64:	mov	x28, x24
  435c68:	cbnz	w25, 435fec <argp_usage@@Base+0x43f0>
  435c6c:	b	436038 <argp_usage@@Base+0x443c>
  435c70:	udiv	x10, x23, x21
  435c74:	msub	x8, x10, x21, x23
  435c78:	cbnz	x8, 435c88 <argp_usage@@Base+0x408c>
  435c7c:	umulh	x8, x10, x28
  435c80:	cmp	xzr, x8
  435c84:	b.eq	435e70 <argp_usage@@Base+0x4274>  // b.none
  435c88:	mov	x0, x21
  435c8c:	bl	44ff08 <_obstack_memory_used@@Base+0x11ca8>
  435c90:	mov	x0, x28
  435c94:	str	q0, [sp, #32]
  435c98:	bl	44ff08 <_obstack_memory_used@@Base+0x11ca8>
  435c9c:	mov	x0, x23
  435ca0:	stur	q0, [x29, #-16]
  435ca4:	bl	44ff08 <_obstack_memory_used@@Base+0x11ca8>
  435ca8:	ldr	q1, [sp, #32]
  435cac:	bl	44ea30 <_obstack_memory_used@@Base+0x107d0>
  435cb0:	ldur	q1, [x29, #-16]
  435cb4:	bl	44f598 <_obstack_memory_used@@Base+0x11338>
  435cb8:	tbnz	w19, #4, 435cf4 <argp_usage@@Base+0x40f8>
  435cbc:	mov	w0, w25
  435cc0:	bl	4360c0 <argp_usage@@Base+0x44c4>
  435cc4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  435cc8:	add	x3, x3, #0xf40
  435ccc:	mov	w1, #0x1                   	// #1
  435cd0:	mov	x2, #0xffffffffffffffff    	// #-1
  435cd4:	mov	x0, x20
  435cd8:	bl	4041b0 <__sprintf_chk@plt>
  435cdc:	mov	x0, x20
  435ce0:	bl	404190 <strlen@plt>
  435ce4:	mov	x2, x0
  435ce8:	mov	x26, xzr
  435cec:	mov	w23, #0xffffffff            	// #-1
  435cf0:	b	435e0c <argp_usage@@Base+0x4210>
  435cf4:	mov	w0, w22
  435cf8:	str	q0, [sp, #16]
  435cfc:	mov	x28, x27
  435d00:	bl	44fd80 <_obstack_memory_used@@Base+0x11b20>
  435d04:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  435d08:	str	q0, [sp, #32]
  435d0c:	ldr	q0, [x8, #3856]
  435d10:	mov	w23, wzr
  435d14:	stur	q0, [x29, #-16]
  435d18:	ldur	q0, [x29, #-16]
  435d1c:	ldr	q1, [sp, #32]
  435d20:	mov	w27, w23
  435d24:	bl	44f598 <_obstack_memory_used@@Base+0x11338>
  435d28:	ldr	q1, [sp, #32]
  435d2c:	add	w23, w23, #0x1
  435d30:	stur	q0, [x29, #-16]
  435d34:	bl	44f598 <_obstack_memory_used@@Base+0x11338>
  435d38:	cmp	w27, #0x6
  435d3c:	b.hi	435d50 <argp_usage@@Base+0x4154>  // b.pmore
  435d40:	ldr	q1, [sp, #16]
  435d44:	bl	44f458 <_obstack_memory_used@@Base+0x111f8>
  435d48:	cmp	w0, #0x0
  435d4c:	b.le	435d18 <argp_usage@@Base+0x411c>
  435d50:	ldr	q0, [sp, #16]
  435d54:	ldur	q1, [x29, #-16]
  435d58:	bl	44ea30 <_obstack_memory_used@@Base+0x107d0>
  435d5c:	mov	w0, w25
  435d60:	stur	q0, [x29, #-16]
  435d64:	bl	4360c0 <argp_usage@@Base+0x44c4>
  435d68:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  435d6c:	add	x3, x3, #0xf46
  435d70:	mov	w1, #0x1                   	// #1
  435d74:	mov	x2, #0xffffffffffffffff    	// #-1
  435d78:	mov	x0, x20
  435d7c:	bl	4041b0 <__sprintf_chk@plt>
  435d80:	mov	x0, x20
  435d84:	bl	404190 <strlen@plt>
  435d88:	tst	w19, #0x20
  435d8c:	mov	w8, #0x2                   	// #2
  435d90:	cinc	x8, x8, eq  // eq = none
  435d94:	add	x8, x8, x26
  435d98:	cmp	x8, x0
  435d9c:	mov	x27, x28
  435da0:	b.cc	435dc0 <argp_usage@@Base+0x41c4>  // b.lo, b.ul, b.last
  435da4:	mov	x2, x0
  435da8:	add	x26, x26, #0x1
  435dac:	tbz	w19, #3, 435e0c <argp_usage@@Base+0x4210>
  435db0:	add	x8, x2, x20
  435db4:	ldurb	w8, [x8, #-1]
  435db8:	cmp	w8, #0x30
  435dbc:	b.ne	435e0c <argp_usage@@Base+0x4210>  // b.any
  435dc0:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  435dc4:	ldr	q1, [x8, #3872]
  435dc8:	ldur	q0, [x29, #-16]
  435dcc:	str	q1, [sp, #32]
  435dd0:	bl	44f598 <_obstack_memory_used@@Base+0x11338>
  435dd4:	mov	w0, w25
  435dd8:	bl	4360c0 <argp_usage@@Base+0x44c4>
  435ddc:	ldr	q1, [sp, #32]
  435de0:	bl	44ea30 <_obstack_memory_used@@Base+0x107d0>
  435de4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  435de8:	add	x3, x3, #0xf40
  435dec:	mov	w1, #0x1                   	// #1
  435df0:	mov	x2, #0xffffffffffffffff    	// #-1
  435df4:	mov	x0, x20
  435df8:	bl	4041b0 <__sprintf_chk@plt>
  435dfc:	mov	x0, x20
  435e00:	bl	404190 <strlen@plt>
  435e04:	mov	x2, x0
  435e08:	mov	x26, xzr
  435e0c:	sub	x25, x24, x2
  435e10:	mov	x0, x25
  435e14:	mov	x1, x20
  435e18:	bl	404120 <memmove@plt>
  435e1c:	sub	x28, x24, x26
  435e20:	tbz	w19, #2, 435e3c <argp_usage@@Base+0x4240>
  435e24:	ldr	x2, [sp, #8]
  435e28:	sub	x1, x28, x25
  435e2c:	mov	x0, x25
  435e30:	mov	x3, x27
  435e34:	bl	436140 <argp_usage@@Base+0x4544>
  435e38:	mov	x25, x0
  435e3c:	tbz	w19, #7, 435ef8 <argp_usage@@Base+0x42fc>
  435e40:	tbz	w23, #31, 435e98 <argp_usage@@Base+0x429c>
  435e44:	cmp	x21, #0x2
  435e48:	b.cc	435e94 <argp_usage@@Base+0x4298>  // b.lo, b.ul, b.last
  435e4c:	mov	w23, wzr
  435e50:	mov	w8, #0x1                   	// #1
  435e54:	cmp	w23, #0x7
  435e58:	b.eq	435fa8 <argp_usage@@Base+0x43ac>  // b.none
  435e5c:	mul	x8, x8, x22
  435e60:	cmp	x8, x21
  435e64:	add	w23, w23, #0x1
  435e68:	b.cc	435e54 <argp_usage@@Base+0x4258>  // b.lo, b.ul, b.last
  435e6c:	b	435e98 <argp_usage@@Base+0x429c>
  435e70:	str	x27, [sp, #32]
  435e74:	mov	w9, wzr
  435e78:	mov	w8, wzr
  435e7c:	mul	x27, x10, x28
  435e80:	tbnz	w19, #4, 435c58 <argp_usage@@Base+0x405c>
  435e84:	mov	w23, #0xffffffff            	// #-1
  435e88:	mov	x28, x24
  435e8c:	cbnz	w25, 435fec <argp_usage@@Base+0x43f0>
  435e90:	b	436038 <argp_usage@@Base+0x443c>
  435e94:	mov	w23, wzr
  435e98:	and	w8, w19, #0x100
  435e9c:	tbz	w19, #6, 435eb4 <argp_usage@@Base+0x42b8>
  435ea0:	orr	w9, w23, w8
  435ea4:	cbz	w9, 435eb4 <argp_usage@@Base+0x42b8>
  435ea8:	add	x24, x20, #0x288
  435eac:	mov	w9, #0x20                  	// #32
  435eb0:	strb	w9, [x20, #647]
  435eb4:	cbz	w23, 435edc <argp_usage@@Base+0x42e0>
  435eb8:	tbnz	w19, #5, 435ecc <argp_usage@@Base+0x42d0>
  435ebc:	cmp	w23, #0x1
  435ec0:	b.ne	435ecc <argp_usage@@Base+0x42d0>  // b.any
  435ec4:	mov	w9, #0x6b                  	// #107
  435ec8:	b	435ed8 <argp_usage@@Base+0x42dc>
  435ecc:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  435ed0:	add	x9, x9, #0xf98
  435ed4:	ldrb	w9, [x9, w23, sxtw]
  435ed8:	strb	w9, [x24], #1
  435edc:	cbz	w8, 435ef8 <argp_usage@@Base+0x42fc>
  435ee0:	tbz	w19, #5, 435ef0 <argp_usage@@Base+0x42f4>
  435ee4:	cbz	w23, 435ef0 <argp_usage@@Base+0x42f4>
  435ee8:	mov	w8, #0x69                  	// #105
  435eec:	strb	w8, [x24], #1
  435ef0:	mov	w8, #0x42                  	// #66
  435ef4:	strb	w8, [x24], #1
  435ef8:	strb	wzr, [x24]
  435efc:	mov	x0, x25
  435f00:	ldp	x20, x19, [sp, #144]
  435f04:	ldp	x22, x21, [sp, #128]
  435f08:	ldp	x24, x23, [sp, #112]
  435f0c:	ldp	x26, x25, [sp, #96]
  435f10:	ldp	x28, x27, [sp, #80]
  435f14:	ldp	x29, x30, [sp, #64]
  435f18:	add	sp, sp, #0xa0
  435f1c:	ret
  435f20:	mov	w12, wzr
  435f24:	mov	w10, #0xa                   	// #10
  435f28:	mov	w11, #0x2                   	// #2
  435f2c:	mov	x13, x27
  435f30:	udiv	x27, x27, x22
  435f34:	msub	w13, w27, w22, w13
  435f38:	madd	w13, w13, w10, w8
  435f3c:	udiv	w8, w13, w22
  435f40:	msub	w13, w8, w22, w13
  435f44:	lsl	w13, w13, #1
  435f48:	add	w13, w13, w9, asr #1
  435f4c:	cmp	w13, w22
  435f50:	b.cs	435f60 <argp_usage@@Base+0x4364>  // b.hs, b.nlast
  435f54:	cmn	w13, w9
  435f58:	cset	w9, ne  // ne = any
  435f5c:	b	435f6c <argp_usage@@Base+0x4370>
  435f60:	add	w9, w13, w9
  435f64:	cmp	w22, w9
  435f68:	cinc	w9, w11, cc  // cc = lo, ul, last
  435f6c:	cmp	w12, #0x6
  435f70:	add	w23, w12, #0x1
  435f74:	b.hi	435f84 <argp_usage@@Base+0x4388>  // b.pmore
  435f78:	cmp	x27, x22
  435f7c:	mov	w12, w23
  435f80:	b.cs	435f2c <argp_usage@@Base+0x4330>  // b.hs, b.nlast
  435f84:	cmp	x27, #0x9
  435f88:	b.hi	435fe4 <argp_usage@@Base+0x43e8>  // b.pmore
  435f8c:	cmp	w25, #0x1
  435f90:	b.ne	435fb8 <argp_usage@@Base+0x43bc>  // b.any
  435f94:	and	w10, w8, #0x1
  435f98:	add	w10, w9, w10
  435f9c:	cmp	w10, #0x2
  435fa0:	b.hi	435fc0 <argp_usage@@Base+0x43c4>  // b.pmore
  435fa4:	b	435fd4 <argp_usage@@Base+0x43d8>
  435fa8:	mov	w23, #0x8                   	// #8
  435fac:	and	w8, w19, #0x100
  435fb0:	tbnz	w19, #6, 435ea0 <argp_usage@@Base+0x42a4>
  435fb4:	b	435eb4 <argp_usage@@Base+0x42b8>
  435fb8:	cbnz	w25, 435fd4 <argp_usage@@Base+0x43d8>
  435fbc:	cbz	w9, 435fd4 <argp_usage@@Base+0x43d8>
  435fc0:	add	w10, w8, #0x1
  435fc4:	cmp	w10, #0xa
  435fc8:	mov	w9, wzr
  435fcc:	csinc	w8, wzr, w8, eq  // eq = none
  435fd0:	cinc	x27, x27, eq  // eq = none
  435fd4:	cmp	x27, #0x9
  435fd8:	b.hi	435fe4 <argp_usage@@Base+0x43e8>  // b.pmore
  435fdc:	tbz	w19, #3, 43600c <argp_usage@@Base+0x4410>
  435fe0:	cbnz	w8, 43600c <argp_usage@@Base+0x4410>
  435fe4:	mov	x28, x24
  435fe8:	cbz	w25, 436038 <argp_usage@@Base+0x443c>
  435fec:	cmp	w25, #0x1
  435ff0:	b.ne	436084 <argp_usage@@Base+0x4488>  // b.any
  435ff4:	and	x10, x27, #0x1
  435ff8:	cmn	x10, w9, sxtw
  435ffc:	cinc	w8, w8, ne  // ne = any
  436000:	cmp	w8, #0x5
  436004:	b.gt	436044 <argp_usage@@Base+0x4448>
  436008:	b	436084 <argp_usage@@Base+0x4488>
  43600c:	ldur	x1, [x29, #-16]
  436010:	add	x9, x20, #0x286
  436014:	sub	x28, x9, x26
  436018:	add	w8, w8, #0x30
  43601c:	mov	x0, x28
  436020:	mov	x2, x26
  436024:	strb	w8, [x20, #646]
  436028:	bl	404110 <memcpy@plt>
  43602c:	mov	w9, wzr
  436030:	mov	w8, wzr
  436034:	cbnz	w25, 435fec <argp_usage@@Base+0x43f0>
  436038:	add	w8, w8, w9
  43603c:	cmp	w8, #0x1
  436040:	b.lt	436084 <argp_usage@@Base+0x4488>  // b.tstop
  436044:	cmp	w23, #0x7
  436048:	add	x27, x27, #0x1
  43604c:	b.gt	436084 <argp_usage@@Base+0x4488>
  436050:	tbz	w19, #4, 436084 <argp_usage@@Base+0x4488>
  436054:	cmp	x27, x22
  436058:	b.ne	436084 <argp_usage@@Base+0x4488>  // b.any
  43605c:	add	w23, w23, #0x1
  436060:	tbnz	w19, #3, 436080 <argp_usage@@Base+0x4484>
  436064:	mov	w8, #0x30                  	// #48
  436068:	ldur	x1, [x29, #-16]
  43606c:	strb	w8, [x28, #-1]!
  436070:	sub	x28, x28, x26
  436074:	mov	x0, x28
  436078:	mov	x2, x26
  43607c:	bl	404110 <memcpy@plt>
  436080:	mov	w27, #0x1                   	// #1
  436084:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  436088:	movk	x8, #0xcccd
  43608c:	mov	w9, #0xa                   	// #10
  436090:	mov	x25, x28
  436094:	umulh	x10, x27, x8
  436098:	lsr	x10, x10, #3
  43609c:	msub	w11, w10, w9, w27
  4360a0:	orr	w11, w11, #0x30
  4360a4:	cmp	x27, #0x9
  4360a8:	strb	w11, [x25, #-1]!
  4360ac:	mov	x27, x10
  4360b0:	b.hi	436094 <argp_usage@@Base+0x4498>  // b.pmore
  4360b4:	ldr	x27, [sp, #32]
  4360b8:	tbnz	w19, #2, 435e24 <argp_usage@@Base+0x4228>
  4360bc:	b	435e3c <argp_usage@@Base+0x4240>
  4360c0:	sub	sp, sp, #0x30
  4360c4:	cmp	w0, #0x1
  4360c8:	stp	x29, x30, [sp, #16]
  4360cc:	stp	x20, x19, [sp, #32]
  4360d0:	add	x29, sp, #0x10
  4360d4:	b.eq	436130 <argp_usage@@Base+0x4534>  // b.none
  4360d8:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  4360dc:	ldr	q1, [x8, #3888]
  4360e0:	mov	w19, w0
  4360e4:	str	q0, [sp]
  4360e8:	bl	44f458 <_obstack_memory_used@@Base+0x111f8>
  4360ec:	cmp	w0, #0x0
  4360f0:	b.ge	43612c <argp_usage@@Base+0x4530>  // b.tcont
  4360f4:	ldr	q0, [sp]
  4360f8:	bl	44fde8 <_obstack_memory_used@@Base+0x11b88>
  4360fc:	cmp	w19, #0x0
  436100:	mov	x20, x0
  436104:	cset	w19, eq  // eq = none
  436108:	bl	44ff08 <_obstack_memory_used@@Base+0x11ca8>
  43610c:	ldr	q1, [sp]
  436110:	bl	44f350 <_obstack_memory_used@@Base+0x110f0>
  436114:	cmp	w0, #0x0
  436118:	cset	w8, ne  // ne = any
  43611c:	and	w8, w19, w8
  436120:	add	x0, x8, x20
  436124:	bl	44ff08 <_obstack_memory_used@@Base+0x11ca8>
  436128:	b	436130 <argp_usage@@Base+0x4534>
  43612c:	ldr	q0, [sp]
  436130:	ldp	x20, x19, [sp, #32]
  436134:	ldp	x29, x30, [sp, #16]
  436138:	add	sp, sp, #0x30
  43613c:	ret
  436140:	sub	sp, sp, #0x90
  436144:	stp	x24, x23, [sp, #96]
  436148:	mov	x23, x0
  43614c:	mov	x0, x3
  436150:	stp	x29, x30, [sp, #48]
  436154:	str	x27, [sp, #64]
  436158:	stp	x26, x25, [sp, #80]
  43615c:	stp	x22, x21, [sp, #112]
  436160:	stp	x20, x19, [sp, #128]
  436164:	add	x29, sp, #0x30
  436168:	mov	x19, x3
  43616c:	mov	x20, x2
  436170:	mov	x21, x1
  436174:	bl	404190 <strlen@plt>
  436178:	mov	x22, x0
  43617c:	add	x0, sp, #0x4
  436180:	mov	w3, #0x29                  	// #41
  436184:	mov	x1, x23
  436188:	mov	x2, x21
  43618c:	add	x26, sp, #0x4
  436190:	bl	404420 <__memcpy_chk@plt>
  436194:	add	x23, x23, x21
  436198:	neg	x27, x22
  43619c:	mov	x24, #0xffffffffffffffff    	// #-1
  4361a0:	b	4361c0 <argp_usage@@Base+0x45c4>
  4361a4:	add	x23, x23, x27
  4361a8:	mov	x0, x23
  4361ac:	mov	x1, x19
  4361b0:	mov	x2, x22
  4361b4:	bl	404110 <memcpy@plt>
  4361b8:	mov	w8, #0x1                   	// #1
  4361bc:	tbz	w8, #0, 43620c <argp_usage@@Base+0x4610>
  4361c0:	mov	x8, x20
  4361c4:	ldrb	w9, [x8], #1
  4361c8:	cmp	w9, #0xff
  4361cc:	csel	x10, x21, x9, eq  // eq = none
  4361d0:	cmp	w9, #0x0
  4361d4:	csel	x9, x24, x10, eq  // eq = none
  4361d8:	csel	x20, x20, x8, eq  // eq = none
  4361dc:	cmp	x21, x9
  4361e0:	csel	x24, x21, x9, cc  // cc = lo, ul, last
  4361e4:	sub	x23, x23, x24
  4361e8:	sub	x21, x21, x24
  4361ec:	add	x1, x26, x21
  4361f0:	mov	x0, x23
  4361f4:	mov	x2, x24
  4361f8:	bl	404110 <memcpy@plt>
  4361fc:	cbnz	x21, 4361a4 <argp_usage@@Base+0x45a8>
  436200:	mov	w8, wzr
  436204:	mov	x25, x23
  436208:	tbnz	w8, #0, 4361c0 <argp_usage@@Base+0x45c4>
  43620c:	mov	x0, x25
  436210:	ldp	x20, x19, [sp, #128]
  436214:	ldp	x22, x21, [sp, #112]
  436218:	ldp	x24, x23, [sp, #96]
  43621c:	ldp	x26, x25, [sp, #80]
  436220:	ldr	x27, [sp, #64]
  436224:	ldp	x29, x30, [sp, #48]
  436228:	add	sp, sp, #0x90
  43622c:	ret
  436230:	stp	x29, x30, [sp, #-32]!
  436234:	str	x19, [sp, #16]
  436238:	mov	x19, x2
  43623c:	mov	x2, x1
  436240:	mov	x1, x19
  436244:	mov	x29, sp
  436248:	bl	43626c <argp_usage@@Base+0x4670>
  43624c:	ldr	x8, [x19]
  436250:	cbnz	x8, 436260 <argp_usage@@Base+0x4664>
  436254:	bl	4363c0 <argp_usage@@Base+0x47c4>
  436258:	str	x0, [x19]
  43625c:	mov	w0, #0x4                   	// #4
  436260:	ldr	x19, [sp, #16]
  436264:	ldp	x29, x30, [sp], #32
  436268:	ret
  43626c:	stp	x29, x30, [sp, #-64]!
  436270:	stp	x20, x19, [sp, #48]
  436274:	mov	x19, x2
  436278:	mov	x20, x1
  43627c:	str	x23, [sp, #16]
  436280:	stp	x22, x21, [sp, #32]
  436284:	mov	x29, sp
  436288:	cbnz	x0, 4362ac <argp_usage@@Base+0x46b0>
  43628c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  436290:	add	x0, x0, #0xf4c
  436294:	bl	404d30 <getenv@plt>
  436298:	cbnz	x0, 4362ac <argp_usage@@Base+0x46b0>
  43629c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  4362a0:	add	x0, x0, #0xf57
  4362a4:	bl	404d30 <getenv@plt>
  4362a8:	cbz	x0, 436360 <argp_usage@@Base+0x4764>
  4362ac:	mov	x8, x0
  4362b0:	ldrb	w9, [x8], #1
  4362b4:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x18da0>
  4362b8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4362bc:	add	x22, x22, #0xfc0
  4362c0:	cmp	w9, #0x27
  4362c4:	csel	x21, x8, x0, eq  // eq = none
  4362c8:	cset	w9, eq  // eq = none
  4362cc:	add	x1, x1, #0xfa8
  4362d0:	mov	w3, #0x4                   	// #4
  4362d4:	mov	x0, x21
  4362d8:	mov	x2, x22
  4362dc:	lsl	w23, w9, #2
  4362e0:	bl	42e250 <wcrtomb@plt+0x29430>
  4362e4:	tbnz	w0, #31, 436300 <argp_usage@@Base+0x4704>
  4362e8:	sbfiz	x8, x0, #2, #32
  4362ec:	ldr	w8, [x22, x8]
  4362f0:	mov	w0, #0x1                   	// #1
  4362f4:	str	x0, [x20]
  4362f8:	orr	w23, w8, w23
  4362fc:	b	4363a4 <argp_usage@@Base+0x47a8>
  436300:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x18da0>
  436304:	add	x4, x4, #0xf61
  436308:	add	x1, x29, #0x18
  43630c:	mov	x0, x21
  436310:	mov	w2, wzr
  436314:	mov	x3, x20
  436318:	bl	43d428 <argp_usage@@Base+0xb82c>
  43631c:	cbz	w0, 436330 <argp_usage@@Base+0x4734>
  436320:	mov	w8, wzr
  436324:	str	wzr, [x19]
  436328:	tbnz	w8, #0, 4363a4 <argp_usage@@Base+0x47a8>
  43632c:	b	4363ac <argp_usage@@Base+0x47b0>
  436330:	ldrb	w8, [x21]
  436334:	sub	w8, w8, #0x30
  436338:	cmp	w8, #0xa
  43633c:	b.cc	43639c <argp_usage@@Base+0x47a0>  // b.lo, b.ul, b.last
  436340:	ldr	x8, [x29, #24]
  436344:	cmp	x8, x21
  436348:	b.eq	436370 <argp_usage@@Base+0x4774>  // b.none
  43634c:	ldrb	w9, [x21, #1]!
  436350:	sub	w9, w9, #0x30
  436354:	cmp	w9, #0xa
  436358:	b.cs	436344 <argp_usage@@Base+0x4748>  // b.hs, b.nlast
  43635c:	b	43639c <argp_usage@@Base+0x47a0>
  436360:	bl	4363c0 <argp_usage@@Base+0x47c4>
  436364:	mov	w23, wzr
  436368:	str	x0, [x20]
  43636c:	b	4363a4 <argp_usage@@Base+0x47a8>
  436370:	ldurb	w9, [x8, #-1]
  436374:	mov	w10, #0x80                  	// #128
  436378:	cmp	w9, #0x42
  43637c:	mov	w9, #0x180                 	// #384
  436380:	csel	w9, w9, w10, eq  // eq = none
  436384:	orr	w23, w9, w23
  436388:	b.ne	436398 <argp_usage@@Base+0x479c>  // b.any
  43638c:	ldurb	w8, [x8, #-2]
  436390:	cmp	w8, #0x69
  436394:	b.ne	43639c <argp_usage@@Base+0x47a0>  // b.any
  436398:	orr	w23, w23, #0x20
  43639c:	mov	w8, #0x1                   	// #1
  4363a0:	tbz	w8, #0, 4363ac <argp_usage@@Base+0x47b0>
  4363a4:	mov	w0, wzr
  4363a8:	str	w23, [x19]
  4363ac:	ldp	x20, x19, [sp, #48]
  4363b0:	ldp	x22, x21, [sp, #32]
  4363b4:	ldr	x23, [sp, #16]
  4363b8:	ldp	x29, x30, [sp], #64
  4363bc:	ret
  4363c0:	stp	x29, x30, [sp, #-16]!
  4363c4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  4363c8:	add	x0, x0, #0xf85
  4363cc:	mov	x29, sp
  4363d0:	bl	404d30 <getenv@plt>
  4363d4:	cmp	x0, #0x0
  4363d8:	mov	w8, #0x200                 	// #512
  4363dc:	mov	w9, #0x400                 	// #1024
  4363e0:	csel	x0, x9, x8, eq  // eq = none
  4363e4:	ldp	x29, x30, [sp], #16
  4363e8:	ret
  4363ec:	mov	x8, x0
  4363f0:	mov	x0, x1
  4363f4:	strb	wzr, [x0, #20]!
  4363f8:	tbnz	x8, #63, 436434 <argp_usage@@Base+0x4838>
  4363fc:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  436400:	movk	x9, #0x6667
  436404:	mov	w10, #0xa                   	// #10
  436408:	smulh	x11, x8, x9
  43640c:	asr	x13, x11, #2
  436410:	add	x11, x13, x11, lsr #63
  436414:	add	x12, x8, #0x9
  436418:	msub	w8, w11, w10, w8
  43641c:	add	w8, w8, #0x30
  436420:	cmp	x12, #0x12
  436424:	strb	w8, [x0, #-1]!
  436428:	mov	x8, x11
  43642c:	b.hi	436408 <argp_usage@@Base+0x480c>  // b.pmore
  436430:	ret
  436434:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  436438:	add	x0, x1, #0x13
  43643c:	movk	x9, #0x6667
  436440:	mov	w10, #0xa                   	// #10
  436444:	smulh	x11, x8, x9
  436448:	asr	x13, x11, #2
  43644c:	neg	w12, w8
  436450:	add	x11, x13, x11, lsr #63
  436454:	madd	w12, w11, w10, w12
  436458:	add	x8, x8, #0x9
  43645c:	add	w12, w12, #0x30
  436460:	cmp	x8, #0x12
  436464:	strb	w12, [x0], #-1
  436468:	mov	x8, x11
  43646c:	b.hi	436444 <argp_usage@@Base+0x4848>  // b.pmore
  436470:	mov	w8, #0x2d                  	// #45
  436474:	strb	w8, [x0]
  436478:	ret
  43647c:	mov	x8, x0
  436480:	mov	x0, x1
  436484:	strb	wzr, [x0, #20]!
  436488:	tbnz	x8, #63, 4364c4 <argp_usage@@Base+0x48c8>
  43648c:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  436490:	movk	x9, #0x6667
  436494:	mov	w10, #0xa                   	// #10
  436498:	smulh	x11, x8, x9
  43649c:	asr	x13, x11, #2
  4364a0:	add	x11, x13, x11, lsr #63
  4364a4:	add	x12, x8, #0x9
  4364a8:	msub	w8, w11, w10, w8
  4364ac:	add	w8, w8, #0x30
  4364b0:	cmp	x12, #0x12
  4364b4:	strb	w8, [x0, #-1]!
  4364b8:	mov	x8, x11
  4364bc:	b.hi	436498 <argp_usage@@Base+0x489c>  // b.pmore
  4364c0:	ret
  4364c4:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  4364c8:	add	x0, x1, #0x13
  4364cc:	movk	x9, #0x6667
  4364d0:	mov	w10, #0xa                   	// #10
  4364d4:	smulh	x11, x8, x9
  4364d8:	asr	x13, x11, #2
  4364dc:	neg	w12, w8
  4364e0:	add	x11, x13, x11, lsr #63
  4364e4:	madd	w12, w11, w10, w12
  4364e8:	add	x8, x8, #0x9
  4364ec:	add	w12, w12, #0x30
  4364f0:	cmp	x8, #0x12
  4364f4:	strb	w12, [x0], #-1
  4364f8:	mov	x8, x11
  4364fc:	b.hi	4364d4 <argp_usage@@Base+0x48d8>  // b.pmore
  436500:	mov	w8, #0x2d                  	// #45
  436504:	strb	w8, [x0]
  436508:	ret
  43650c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  436510:	movk	x8, #0xcccd
  436514:	strb	wzr, [x1, #20]!
  436518:	mov	w9, #0xa                   	// #10
  43651c:	umulh	x10, x0, x8
  436520:	lsr	x10, x10, #3
  436524:	msub	w11, w10, w9, w0
  436528:	orr	w11, w11, #0x30
  43652c:	cmp	x0, #0x9
  436530:	strb	w11, [x1, #-1]!
  436534:	mov	x0, x10
  436538:	b.hi	43651c <argp_usage@@Base+0x4920>  // b.pmore
  43653c:	mov	x0, x1
  436540:	ret
  436544:	stp	x29, x30, [sp, #-16]!
  436548:	mov	w0, #0xe                   	// #14
  43654c:	mov	x29, sp
  436550:	bl	4044b0 <nl_langinfo@plt>
  436554:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  436558:	add	x8, x8, #0xd3e
  43655c:	cmp	x0, #0x0
  436560:	csel	x8, x8, x0, eq  // eq = none
  436564:	ldrb	w9, [x8]
  436568:	adrp	x10, 457000 <_obstack_memory_used@@Base+0x18da0>
  43656c:	add	x10, x10, #0xfc8
  436570:	cmp	w9, #0x0
  436574:	csel	x0, x10, x8, eq  // eq = none
  436578:	ldp	x29, x30, [sp], #16
  43657c:	ret
  436580:	sub	sp, sp, #0xc0
  436584:	cmp	x0, x1
  436588:	stp	x29, x30, [sp, #128]
  43658c:	str	x23, [sp, #144]
  436590:	stp	x22, x21, [sp, #160]
  436594:	stp	x20, x19, [sp, #176]
  436598:	add	x29, sp, #0x80
  43659c:	b.eq	4366f4 <argp_usage@@Base+0x4af8>  // b.none
  4365a0:	mov	x19, x1
  4365a4:	mov	x20, x0
  4365a8:	bl	404a00 <__ctype_get_mb_cur_max@plt>
  4365ac:	cmp	x0, #0x1
  4365b0:	b.ls	4366fc <argp_usage@@Base+0x4b00>  // b.plast
  4365b4:	str	x20, [sp, #80]
  4365b8:	mov	w20, #0xffffffff            	// #-1
  4365bc:	mov	w21, #0x1                   	// #1
  4365c0:	strb	wzr, [sp, #64]
  4365c4:	stur	xzr, [sp, #68]
  4365c8:	strb	wzr, [sp, #76]
  4365cc:	str	x19, [sp, #16]
  4365d0:	strb	wzr, [sp]
  4365d4:	stur	xzr, [sp, #4]
  4365d8:	strb	wzr, [sp, #12]
  4365dc:	b	43660c <argp_usage@@Base+0x4a10>
  4365e0:	ldp	x9, x8, [sp, #80]
  4365e4:	ldp	x11, x10, [sp, #16]
  4365e8:	mov	w0, w22
  4365ec:	strb	wzr, [sp, #76]
  4365f0:	add	x8, x9, x8
  4365f4:	add	x9, x11, x10
  4365f8:	str	x8, [sp, #80]
  4365fc:	mov	w8, #0x1                   	// #1
  436600:	strb	wzr, [sp, #12]
  436604:	str	x9, [sp, #16]
  436608:	tbz	w8, #0, 43679c <argp_usage@@Base+0x4ba0>
  43660c:	add	x0, sp, #0x40
  436610:	bl	4367b4 <argp_usage@@Base+0x4bb8>
  436614:	ldrb	w8, [sp, #96]
  436618:	cbz	w8, 436624 <argp_usage@@Base+0x4a28>
  43661c:	ldr	w8, [sp, #100]
  436620:	cbz	w8, 436758 <argp_usage@@Base+0x4b5c>
  436624:	mov	x0, sp
  436628:	bl	4367b4 <argp_usage@@Base+0x4bb8>
  43662c:	ldrb	w8, [sp, #32]
  436630:	cbz	w8, 43663c <argp_usage@@Base+0x4a40>
  436634:	ldr	w9, [sp, #36]
  436638:	cbz	w9, 436758 <argp_usage@@Base+0x4b5c>
  43663c:	ldrb	w9, [sp, #96]
  436640:	cbz	w9, 43666c <argp_usage@@Base+0x4a70>
  436644:	cbz	w8, 43667c <argp_usage@@Base+0x4a80>
  436648:	ldr	w0, [sp, #100]
  43664c:	bl	404da0 <towlower@plt>
  436650:	ldr	w8, [sp, #36]
  436654:	mov	w19, w0
  436658:	mov	w0, w8
  43665c:	bl	404da0 <towlower@plt>
  436660:	sub	w0, w19, w0
  436664:	cbnz	w0, 4366e4 <argp_usage@@Base+0x4ae8>
  436668:	b	4365e0 <argp_usage@@Base+0x49e4>
  43666c:	cbz	w8, 436688 <argp_usage@@Base+0x4a8c>
  436670:	mov	w0, #0x1                   	// #1
  436674:	cbnz	w0, 4366e4 <argp_usage@@Base+0x4ae8>
  436678:	b	4365e0 <argp_usage@@Base+0x49e4>
  43667c:	mov	w0, #0xffffffff            	// #-1
  436680:	cbnz	w0, 4366e4 <argp_usage@@Base+0x4ae8>
  436684:	b	4365e0 <argp_usage@@Base+0x49e4>
  436688:	ldr	x2, [sp, #88]
  43668c:	ldr	x8, [sp, #24]
  436690:	cmp	x2, x8
  436694:	b.ne	4366ac <argp_usage@@Base+0x4ab0>  // b.any
  436698:	ldr	x0, [sp, #80]
  43669c:	ldr	x1, [sp, #16]
  4366a0:	bl	4048e0 <memcmp@plt>
  4366a4:	cbnz	w0, 4366e4 <argp_usage@@Base+0x4ae8>
  4366a8:	b	4365e0 <argp_usage@@Base+0x49e4>
  4366ac:	ldr	x0, [sp, #80]
  4366b0:	ldr	x1, [sp, #16]
  4366b4:	cmp	x2, x8
  4366b8:	b.cs	4366d0 <argp_usage@@Base+0x4ad4>  // b.hs, b.nlast
  4366bc:	bl	4048e0 <memcmp@plt>
  4366c0:	cmp	w0, #0x1
  4366c4:	cneg	w0, w20, ge  // ge = tcont
  4366c8:	cbnz	w0, 4366e4 <argp_usage@@Base+0x4ae8>
  4366cc:	b	4365e0 <argp_usage@@Base+0x49e4>
  4366d0:	mov	x2, x8
  4366d4:	bl	4048e0 <memcmp@plt>
  4366d8:	cmp	w0, #0x0
  4366dc:	cneg	w0, w21, lt  // lt = tstop
  4366e0:	cbz	w0, 4365e0 <argp_usage@@Base+0x49e4>
  4366e4:	mov	w22, w0
  4366e8:	mov	w8, wzr
  4366ec:	tbnz	wzr, #0, 43660c <argp_usage@@Base+0x4a10>
  4366f0:	b	43679c <argp_usage@@Base+0x4ba0>
  4366f4:	mov	w0, wzr
  4366f8:	b	43679c <argp_usage@@Base+0x4ba0>
  4366fc:	bl	404950 <__ctype_b_loc@plt>
  436700:	ldr	x21, [x0]
  436704:	ldrb	w22, [x20]
  436708:	ldrh	w8, [x21, x22, lsl #1]
  43670c:	tbz	w8, #8, 436720 <argp_usage@@Base+0x4b24>
  436710:	bl	4043b0 <__ctype_tolower_loc@plt>
  436714:	ldr	x8, [x0]
  436718:	lsl	x9, x22, #2
  43671c:	ldrb	w22, [x8, x9]
  436720:	ldrb	w23, [x19]
  436724:	ldrh	w8, [x21, x23, lsl #1]
  436728:	tbz	w8, #8, 43673c <argp_usage@@Base+0x4b40>
  43672c:	bl	4043b0 <__ctype_tolower_loc@plt>
  436730:	ldr	x8, [x0]
  436734:	lsl	x9, x23, #2
  436738:	ldrb	w23, [x8, x9]
  43673c:	cbz	w22, 436750 <argp_usage@@Base+0x4b54>
  436740:	add	x20, x20, #0x1
  436744:	cmp	w22, w23
  436748:	add	x19, x19, #0x1
  43674c:	b.eq	436704 <argp_usage@@Base+0x4b08>  // b.none
  436750:	sub	w0, w22, w23
  436754:	b	43679c <argp_usage@@Base+0x4ba0>
  436758:	add	x0, sp, #0x40
  43675c:	bl	4367b4 <argp_usage@@Base+0x4bb8>
  436760:	ldrb	w8, [sp, #96]
  436764:	mov	w0, #0x1                   	// #1
  436768:	cbz	w8, 43679c <argp_usage@@Base+0x4ba0>
  43676c:	ldr	w8, [sp, #100]
  436770:	cbnz	w8, 43679c <argp_usage@@Base+0x4ba0>
  436774:	mov	x0, sp
  436778:	bl	4367b4 <argp_usage@@Base+0x4bb8>
  43677c:	ldrb	w8, [sp, #32]
  436780:	ldr	w9, [sp, #36]
  436784:	cmp	w8, #0x0
  436788:	cset	w8, eq  // eq = none
  43678c:	cmp	w9, #0x0
  436790:	cset	w9, ne  // ne = any
  436794:	orr	w8, w8, w9
  436798:	sbfx	w0, w8, #0, #1
  43679c:	ldp	x20, x19, [sp, #176]
  4367a0:	ldp	x22, x21, [sp, #160]
  4367a4:	ldr	x23, [sp, #144]
  4367a8:	ldp	x29, x30, [sp, #128]
  4367ac:	add	sp, sp, #0xc0
  4367b0:	ret
  4367b4:	stp	x29, x30, [sp, #-48]!
  4367b8:	stp	x22, x21, [sp, #16]
  4367bc:	stp	x20, x19, [sp, #32]
  4367c0:	ldrb	w8, [x0, #12]
  4367c4:	mov	x29, sp
  4367c8:	cbnz	w8, 4368bc <argp_usage@@Base+0x4cc0>
  4367cc:	ldrb	w8, [x0]
  4367d0:	mov	x19, x0
  4367d4:	cbnz	w8, 436818 <argp_usage@@Base+0x4c1c>
  4367d8:	ldr	x8, [x19, #16]
  4367dc:	ldrb	w0, [x8]
  4367e0:	bl	44c374 <_obstack_memory_used@@Base+0xe114>
  4367e4:	tbz	w0, #0, 436804 <argp_usage@@Base+0x4c08>
  4367e8:	ldr	x8, [x19, #16]
  4367ec:	mov	w9, #0x1                   	// #1
  4367f0:	str	x9, [x19, #24]
  4367f4:	ldrb	w8, [x8]
  4367f8:	strb	w9, [x19, #32]
  4367fc:	str	w8, [x19, #36]
  436800:	b	4368b4 <argp_usage@@Base+0x4cb8>
  436804:	add	x0, x19, #0x4
  436808:	bl	404890 <mbsinit@plt>
  43680c:	cbz	w0, 4368cc <argp_usage@@Base+0x4cd0>
  436810:	mov	w8, #0x1                   	// #1
  436814:	strb	w8, [x19]
  436818:	ldr	x22, [x19, #16]
  43681c:	add	x21, x19, #0x24
  436820:	bl	404a00 <__ctype_get_mb_cur_max@plt>
  436824:	mov	x1, x0
  436828:	mov	x0, x22
  43682c:	bl	43ccd0 <argp_usage@@Base+0xb0d4>
  436830:	add	x20, x19, #0x4
  436834:	mov	x2, x0
  436838:	mov	x0, x21
  43683c:	mov	x1, x22
  436840:	mov	x3, x20
  436844:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  436848:	cmn	x0, #0x2
  43684c:	str	x0, [x19, #24]
  436850:	b.eq	4368a4 <argp_usage@@Base+0x4ca8>  // b.none
  436854:	cbz	x0, 43686c <argp_usage@@Base+0x4c70>
  436858:	cmn	x0, #0x1
  43685c:	b.ne	436888 <argp_usage@@Base+0x4c8c>  // b.any
  436860:	mov	w8, #0x1                   	// #1
  436864:	str	x8, [x19, #24]
  436868:	b	4368b0 <argp_usage@@Base+0x4cb4>
  43686c:	ldr	x8, [x19, #16]
  436870:	mov	w9, #0x1                   	// #1
  436874:	str	x9, [x19, #24]
  436878:	ldrb	w8, [x8]
  43687c:	cbnz	w8, 4368ec <argp_usage@@Base+0x4cf0>
  436880:	ldr	w8, [x21]
  436884:	cbnz	w8, 43690c <argp_usage@@Base+0x4d10>
  436888:	mov	w8, #0x1                   	// #1
  43688c:	mov	x0, x20
  436890:	strb	w8, [x19, #32]
  436894:	bl	404890 <mbsinit@plt>
  436898:	cbz	w0, 4368b4 <argp_usage@@Base+0x4cb8>
  43689c:	strb	wzr, [x19]
  4368a0:	b	4368b4 <argp_usage@@Base+0x4cb8>
  4368a4:	ldr	x0, [x19, #16]
  4368a8:	bl	404190 <strlen@plt>
  4368ac:	str	x0, [x19, #24]
  4368b0:	strb	wzr, [x19, #32]
  4368b4:	mov	w8, #0x1                   	// #1
  4368b8:	strb	w8, [x19, #12]
  4368bc:	ldp	x20, x19, [sp, #32]
  4368c0:	ldp	x22, x21, [sp, #16]
  4368c4:	ldp	x29, x30, [sp], #48
  4368c8:	ret
  4368cc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  4368d0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4368d4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  4368d8:	add	x0, x0, #0xcd1
  4368dc:	add	x1, x1, #0xce8
  4368e0:	add	x3, x3, #0xcf4
  4368e4:	mov	w2, #0x96                  	// #150
  4368e8:	bl	404cf0 <__assert_fail@plt>
  4368ec:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  4368f0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  4368f4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  4368f8:	add	x0, x0, #0xd24
  4368fc:	add	x1, x1, #0xce8
  436900:	add	x3, x3, #0xcf4
  436904:	mov	w2, #0xb2                  	// #178
  436908:	bl	404cf0 <__assert_fail@plt>
  43690c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  436910:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x18da0>
  436914:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x18da0>
  436918:	add	x0, x0, #0xd3b
  43691c:	add	x1, x1, #0xce8
  436920:	add	x3, x3, #0xcf4
  436924:	mov	w2, #0xb3                  	// #179
  436928:	bl	404cf0 <__assert_fail@plt>
  43692c:	ldr	x8, [x0, #16]
  436930:	add	x8, x8, x1
  436934:	str	x8, [x0, #16]
  436938:	ret
  43693c:	stp	x29, x30, [sp, #-16]!
  436940:	ldrb	w8, [x1]
  436944:	mov	x29, sp
  436948:	strb	w8, [x0]
  43694c:	cbz	w8, 43695c <argp_usage@@Base+0x4d60>
  436950:	ldur	x8, [x1, #4]
  436954:	stur	x8, [x0, #4]
  436958:	b	436960 <argp_usage@@Base+0x4d64>
  43695c:	stur	xzr, [x0, #4]
  436960:	ldrb	w9, [x1, #12]
  436964:	add	x8, x0, #0x10
  436968:	add	x1, x1, #0x10
  43696c:	strb	w9, [x0, #12]
  436970:	mov	x0, x8
  436974:	bl	44c310 <_obstack_memory_used@@Base+0xe0b0>
  436978:	ldp	x29, x30, [sp], #16
  43697c:	ret
  436980:	stp	x29, x30, [sp, #-96]!
  436984:	stp	x28, x27, [sp, #16]
  436988:	stp	x26, x25, [sp, #32]
  43698c:	stp	x24, x23, [sp, #48]
  436990:	stp	x22, x21, [sp, #64]
  436994:	stp	x20, x19, [sp, #80]
  436998:	ldrb	w8, [x0]
  43699c:	mov	x19, x0
  4369a0:	mov	x29, sp
  4369a4:	and	w8, w8, #0xf8
  4369a8:	cmp	w8, #0x30
  4369ac:	b.ne	4369f0 <argp_usage@@Base+0x4df4>  // b.any
  4369b0:	mov	w0, wzr
  4369b4:	mov	x8, x19
  4369b8:	mov	x20, x19
  4369bc:	ldrb	w9, [x20], #1
  4369c0:	add	w9, w9, w0, lsl #3
  4369c4:	sub	w0, w9, #0x30
  4369c8:	cmp	w0, #0xfff
  4369cc:	b.hi	4369e8 <argp_usage@@Base+0x4dec>  // b.pmore
  4369d0:	ldrb	w9, [x8, #1]
  4369d4:	and	w8, w9, #0xf8
  4369d8:	cmp	w8, #0x30
  4369dc:	mov	x8, x20
  4369e0:	b.eq	4369bc <argp_usage@@Base+0x4dc0>  // b.none
  4369e4:	cbz	w9, 436cd4 <argp_usage@@Base+0x50d8>
  4369e8:	mov	x20, xzr
  4369ec:	b	436d04 <argp_usage@@Base+0x5108>
  4369f0:	mov	w0, #0x1                   	// #1
  4369f4:	mov	x8, x19
  4369f8:	b	436a08 <argp_usage@@Base+0x4e0c>
  4369fc:	mov	w10, #0x1                   	// #1
  436a00:	add	x0, x10, x0
  436a04:	add	x8, x8, #0x1
  436a08:	ldrb	w9, [x8]
  436a0c:	cmp	w9, #0x2c
  436a10:	b.le	436a2c <argp_usage@@Base+0x4e30>
  436a14:	cmp	w9, #0x2d
  436a18:	b.eq	4369fc <argp_usage@@Base+0x4e00>  // b.none
  436a1c:	cmp	w9, #0x3d
  436a20:	mov	w10, #0x1                   	// #1
  436a24:	b.eq	436a00 <argp_usage@@Base+0x4e04>  // b.none
  436a28:	b	436a3c <argp_usage@@Base+0x4e40>
  436a2c:	cmp	w9, #0x2b
  436a30:	mov	w10, #0x1                   	// #1
  436a34:	b.eq	436a00 <argp_usage@@Base+0x4e04>  // b.none
  436a38:	cbz	w9, 436a44 <argp_usage@@Base+0x4e48>
  436a3c:	mov	x10, xzr
  436a40:	b	436a00 <argp_usage@@Base+0x4e04>
  436a44:	mov	w1, #0x10                  	// #16
  436a48:	bl	43d198 <argp_usage@@Base+0xb59c>
  436a4c:	adrp	x24, 458000 <_obstack_memory_used@@Base+0x19da0>
  436a50:	adrp	x25, 457000 <_obstack_memory_used@@Base+0x18da0>
  436a54:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x18da0>
  436a58:	mov	x20, x0
  436a5c:	mov	x22, xzr
  436a60:	add	x24, x24, #0x4
  436a64:	add	x25, x25, #0xfe3
  436a68:	mov	w26, #0x124                 	// #292
  436a6c:	mov	w27, #0x92                  	// #146
  436a70:	mov	w28, #0x49                  	// #73
  436a74:	add	x21, x21, #0xfce
  436a78:	mov	w9, wzr
  436a7c:	b	436a8c <argp_usage@@Base+0x4e90>
  436a80:	mov	w8, #0xfff                 	// #4095
  436a84:	orr	w9, w9, w8
  436a88:	add	x19, x19, #0x1
  436a8c:	ldrb	w8, [x19]
  436a90:	sub	w10, w8, #0x61
  436a94:	cmp	w10, #0x14
  436a98:	b.hi	436ac0 <argp_usage@@Base+0x4ec4>  // b.pmore
  436a9c:	adr	x11, 436a80 <argp_usage@@Base+0x4e84>
  436aa0:	ldrb	w8, [x21, x10]
  436aa4:	add	x11, x11, x8, lsl #2
  436aa8:	mov	w8, #0x9c0                 	// #2496
  436aac:	br	x11
  436ab0:	mov	w8, #0x438                 	// #1080
  436ab4:	b	436a84 <argp_usage@@Base+0x4e88>
  436ab8:	mov	w8, #0x207                 	// #519
  436abc:	b	436a84 <argp_usage@@Base+0x4e88>
  436ac0:	cmp	w8, #0x3d
  436ac4:	b.hi	436c98 <argp_usage@@Base+0x509c>  // b.pmore
  436ac8:	mov	w10, #0x1                   	// #1
  436acc:	lsl	x8, x10, x8
  436ad0:	mov	x10, #0x280000000000        	// #43980465111040
  436ad4:	movk	x10, #0x2000, lsl #48
  436ad8:	tst	x8, x10
  436adc:	b.eq	436c98 <argp_usage@@Base+0x509c>  // b.none
  436ae0:	mov	x10, x19
  436ae4:	ldrb	w8, [x10, #1]!
  436ae8:	ldrb	w23, [x19]
  436aec:	sub	w11, w8, #0x30
  436af0:	cmp	w11, #0x8
  436af4:	b.cs	436b48 <argp_usage@@Base+0x4f4c>  // b.hs, b.nlast
  436af8:	mov	w8, wzr
  436afc:	add	x10, x19, #0x2
  436b00:	mov	x19, x10
  436b04:	ldurb	w10, [x10, #-1]
  436b08:	add	w8, w10, w8, lsl #3
  436b0c:	sub	w8, w8, #0x30
  436b10:	cmp	w8, #0xfff
  436b14:	b.hi	436b30 <argp_usage@@Base+0x4f34>  // b.pmore
  436b18:	mov	x10, x19
  436b1c:	ldrb	w11, [x10], #1
  436b20:	and	w12, w11, #0xf8
  436b24:	cmp	w12, #0x30
  436b28:	b.eq	436b00 <argp_usage@@Base+0x4f04>  // b.none
  436b2c:	cbz	w9, 436b74 <argp_usage@@Base+0x4f78>
  436b30:	mov	w11, wzr
  436b34:	mov	w8, #0x3                   	// #3
  436b38:	mov	w10, #0xe                   	// #14
  436b3c:	cmp	w10, #0x12
  436b40:	b.ne	436c64 <argp_usage@@Base+0x5068>  // b.any
  436b44:	b	436c34 <argp_usage@@Base+0x5038>
  436b48:	cmp	w8, #0x67
  436b4c:	b.eq	436ba4 <argp_usage@@Base+0x4fa8>  // b.none
  436b50:	cmp	w8, #0x6f
  436b54:	b.eq	436bb8 <argp_usage@@Base+0x4fbc>  // b.none
  436b58:	cmp	w8, #0x75
  436b5c:	b.ne	436bcc <argp_usage@@Base+0x4fd0>  // b.any
  436b60:	mov	w11, wzr
  436b64:	add	x19, x19, #0x2
  436b68:	mov	w8, #0x3                   	// #3
  436b6c:	mov	w0, #0x1c0                 	// #448
  436b70:	b	436c34 <argp_usage@@Base+0x5038>
  436b74:	cmp	w11, #0x2c
  436b78:	b.eq	436b80 <argp_usage@@Base+0x4f84>  // b.none
  436b7c:	cbnz	w11, 436b30 <argp_usage@@Base+0x4f34>
  436b80:	mov	w0, w8
  436b84:	bl	436d24 <argp_usage@@Base+0x5128>
  436b88:	mov	w8, #0x1                   	// #1
  436b8c:	mov	w9, #0xfff                 	// #4095
  436b90:	mov	w10, #0x12                  	// #18
  436b94:	mov	w11, #0xfff                 	// #4095
  436b98:	cmp	w10, #0x12
  436b9c:	b.ne	436c64 <argp_usage@@Base+0x5068>  // b.any
  436ba0:	b	436c34 <argp_usage@@Base+0x5038>
  436ba4:	mov	w11, wzr
  436ba8:	add	x19, x19, #0x2
  436bac:	mov	w8, #0x3                   	// #3
  436bb0:	mov	w0, #0x38                  	// #56
  436bb4:	b	436c34 <argp_usage@@Base+0x5038>
  436bb8:	mov	w11, wzr
  436bbc:	add	x19, x19, #0x2
  436bc0:	mov	w8, #0x3                   	// #3
  436bc4:	mov	w0, #0x7                   	// #7
  436bc8:	b	436c34 <argp_usage@@Base+0x5038>
  436bcc:	mov	w0, wzr
  436bd0:	mov	w8, #0x1                   	// #1
  436bd4:	mov	x19, x10
  436bd8:	b	436bec <argp_usage@@Base+0x4ff0>
  436bdc:	orr	w0, w0, #0x200
  436be0:	mov	w10, w8
  436be4:	add	x19, x19, #0x1
  436be8:	mov	w8, w10
  436bec:	ldrb	w10, [x19]
  436bf0:	sub	w10, w10, #0x58
  436bf4:	cmp	w10, #0x20
  436bf8:	b.hi	436c30 <argp_usage@@Base+0x5034>  // b.pmore
  436bfc:	adr	x11, 436bdc <argp_usage@@Base+0x4fe0>
  436c00:	ldrb	w12, [x25, x10]
  436c04:	add	x11, x11, x12, lsl #2
  436c08:	mov	w10, #0x2                   	// #2
  436c0c:	br	x11
  436c10:	orr	w0, w0, w26
  436c14:	b	436be0 <argp_usage@@Base+0x4fe4>
  436c18:	orr	w0, w0, #0xc00
  436c1c:	b	436be0 <argp_usage@@Base+0x4fe4>
  436c20:	orr	w0, w0, w27
  436c24:	b	436be0 <argp_usage@@Base+0x4fe4>
  436c28:	orr	w0, w0, w28
  436c2c:	b	436be0 <argp_usage@@Base+0x4fe4>
  436c30:	mov	w11, wzr
  436c34:	add	x12, x20, x22, lsl #4
  436c38:	cmp	w9, #0x0
  436c3c:	strb	w8, [x12, #1]
  436c40:	csinv	w8, w9, wzr, ne  // ne = any
  436c44:	and	w8, w8, w0
  436c48:	cmp	w11, #0x0
  436c4c:	mov	w10, wzr
  436c50:	add	x22, x22, #0x1
  436c54:	csel	w8, w8, w11, eq  // eq = none
  436c58:	strb	w23, [x12]
  436c5c:	stp	w9, w0, [x12, #4]
  436c60:	str	w8, [x12, #12]
  436c64:	cbnz	w10, 436c9c <argp_usage@@Base+0x50a0>
  436c68:	ldrb	w8, [x19]
  436c6c:	mov	w10, #0x7                   	// #7
  436c70:	sub	w8, w8, #0x2b
  436c74:	cmp	w8, #0x12
  436c78:	b.hi	436c9c <argp_usage@@Base+0x50a0>  // b.pmore
  436c7c:	adr	x11, 436ae0 <argp_usage@@Base+0x4ee4>
  436c80:	ldrb	w12, [x24, x8]
  436c84:	add	x11, x11, x12, lsl #2
  436c88:	br	x11
  436c8c:	mov	w10, wzr
  436c90:	cbz	w10, 436ca0 <argp_usage@@Base+0x50a4>
  436c94:	b	436ca8 <argp_usage@@Base+0x50ac>
  436c98:	mov	w10, #0xe                   	// #14
  436c9c:	cbnz	w10, 436ca8 <argp_usage@@Base+0x50ac>
  436ca0:	add	x19, x19, #0x1
  436ca4:	b	436a78 <argp_usage@@Base+0x4e7c>
  436ca8:	cmp	w10, #0x7
  436cac:	b.eq	436cbc <argp_usage@@Base+0x50c0>  // b.none
  436cb0:	cmp	w10, #0xe
  436cb4:	b.eq	436cc4 <argp_usage@@Base+0x50c8>  // b.none
  436cb8:	b	436d04 <argp_usage@@Base+0x5108>
  436cbc:	ldrb	w8, [x19]
  436cc0:	cbz	w8, 436cfc <argp_usage@@Base+0x5100>
  436cc4:	mov	x0, x20
  436cc8:	bl	4049d0 <free@plt>
  436ccc:	mov	x20, xzr
  436cd0:	b	436d04 <argp_usage@@Base+0x5108>
  436cd4:	bl	436d24 <argp_usage@@Base+0x5128>
  436cd8:	sub	x8, x20, x19
  436cdc:	and	w9, w0, #0xc00
  436ce0:	orr	w9, w9, #0x3ff
  436ce4:	cmp	x8, #0x5
  436ce8:	mov	w8, #0xfff                 	// #4095
  436cec:	csel	w1, w9, w8, lt  // lt = tstop
  436cf0:	bl	436d28 <argp_usage@@Base+0x512c>
  436cf4:	mov	x20, x0
  436cf8:	b	436d04 <argp_usage@@Base+0x5108>
  436cfc:	add	x8, x20, x22, lsl #4
  436d00:	strb	wzr, [x8, #1]
  436d04:	mov	x0, x20
  436d08:	ldp	x20, x19, [sp, #80]
  436d0c:	ldp	x22, x21, [sp, #64]
  436d10:	ldp	x24, x23, [sp, #48]
  436d14:	ldp	x26, x25, [sp, #32]
  436d18:	ldp	x28, x27, [sp, #16]
  436d1c:	ldp	x29, x30, [sp], #96
  436d20:	ret
  436d24:	ret
  436d28:	stp	x29, x30, [sp, #-32]!
  436d2c:	stp	x20, x19, [sp, #16]
  436d30:	mov	w20, w0
  436d34:	mov	w0, #0x20                  	// #32
  436d38:	mov	x29, sp
  436d3c:	mov	w19, w1
  436d40:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  436d44:	stp	w20, w19, [x0, #8]
  436d48:	ldp	x20, x19, [sp, #16]
  436d4c:	mov	w8, #0x13d                 	// #317
  436d50:	mov	w9, #0xfff                 	// #4095
  436d54:	strh	w8, [x0]
  436d58:	str	w9, [x0, #4]
  436d5c:	strb	wzr, [x0, #17]
  436d60:	ldp	x29, x30, [sp], #32
  436d64:	ret
  436d68:	sub	sp, sp, #0x90
  436d6c:	mov	x1, sp
  436d70:	stp	x29, x30, [sp, #128]
  436d74:	add	x29, sp, #0x80
  436d78:	bl	4500a0 <_obstack_memory_used@@Base+0x11e40>
  436d7c:	cbz	w0, 436d88 <argp_usage@@Base+0x518c>
  436d80:	mov	x0, xzr
  436d84:	b	436d94 <argp_usage@@Base+0x5198>
  436d88:	ldr	w0, [sp, #16]
  436d8c:	mov	w1, #0xfff                 	// #4095
  436d90:	bl	436d28 <argp_usage@@Base+0x512c>
  436d94:	ldp	x29, x30, [sp, #128]
  436d98:	add	sp, sp, #0x90
  436d9c:	ret
  436da0:	ldrb	w17, [x3, #1]
  436da4:	and	w0, w0, #0xfff
  436da8:	mov	w8, wzr
  436dac:	cbz	w17, 436ea8 <argp_usage@@Base+0x52ac>
  436db0:	tst	w1, #0x1
  436db4:	mov	w14, #0xc00                 	// #3072
  436db8:	and	w9, w1, #0x1
  436dbc:	mvn	w10, w2
  436dc0:	add	x11, x3, #0x8
  436dc4:	mov	w12, #0x49                  	// #73
  436dc8:	mov	w13, #0x124                 	// #292
  436dcc:	csel	w14, w14, wzr, ne  // ne = any
  436dd0:	mov	w15, #0x92                  	// #146
  436dd4:	b	436dec <argp_usage@@Base+0x51f0>
  436dd8:	orr	w8, w18, w8
  436ddc:	bic	w0, w0, w18
  436de0:	ldrb	w17, [x11, #9]
  436de4:	add	x11, x11, #0x10
  436de8:	cbz	w17, 436ea8 <argp_usage@@Base+0x52ac>
  436dec:	ldr	w2, [x11, #4]
  436df0:	ldp	w16, w18, [x11, #-4]
  436df4:	and	w1, w17, #0xff
  436df8:	cmp	w1, #0x2
  436dfc:	bic	w17, w14, w2
  436e00:	b.eq	436e38 <argp_usage@@Base+0x523c>  // b.none
  436e04:	cmp	w1, #0x3
  436e08:	b.ne	436e4c <argp_usage@@Base+0x5250>  // b.any
  436e0c:	and	w18, w18, w0
  436e10:	tst	w18, w13
  436e14:	csel	w1, wzr, w13, eq  // eq = none
  436e18:	tst	w18, w15
  436e1c:	csel	w2, wzr, w15, eq  // eq = none
  436e20:	tst	w18, w12
  436e24:	orr	w18, w2, w18
  436e28:	csel	w3, wzr, w12, eq  // eq = none
  436e2c:	orr	w18, w18, w1
  436e30:	orr	w18, w18, w3
  436e34:	b	436e4c <argp_usage@@Base+0x5250>
  436e38:	and	w1, w0, w12
  436e3c:	orr	w1, w1, w9
  436e40:	orr	w2, w18, w12
  436e44:	cmp	w1, #0x0
  436e48:	csel	w18, w18, w2, eq  // eq = none
  436e4c:	ldurb	w1, [x11, #-8]
  436e50:	cmp	w16, #0x0
  436e54:	csel	w2, w16, w10, ne  // ne = any
  436e58:	bic	w2, w2, w17
  436e5c:	cmp	w1, #0x2b
  436e60:	and	w18, w2, w18
  436e64:	b.eq	436e9c <argp_usage@@Base+0x52a0>  // b.none
  436e68:	cmp	w1, #0x2d
  436e6c:	b.eq	436dd8 <argp_usage@@Base+0x51dc>  // b.none
  436e70:	cmp	w1, #0x3d
  436e74:	b.ne	436de0 <argp_usage@@Base+0x51e4>  // b.any
  436e78:	cmp	w16, #0x0
  436e7c:	csinv	w16, wzr, w16, eq  // eq = none
  436e80:	orr	w16, w16, w17
  436e84:	mvn	w17, w16
  436e88:	and	w16, w16, w0
  436e8c:	and	w17, w17, #0xfff
  436e90:	orr	w8, w17, w8
  436e94:	orr	w0, w18, w16
  436e98:	b	436de0 <argp_usage@@Base+0x51e4>
  436e9c:	orr	w8, w18, w8
  436ea0:	orr	w0, w18, w0
  436ea4:	b	436de0 <argp_usage@@Base+0x51e4>
  436ea8:	cbz	x4, 436eb0 <argp_usage@@Base+0x52b4>
  436eac:	str	w8, [x4]
  436eb0:	ret
  436eb4:	stp	x29, x30, [sp, #-32]!
  436eb8:	stp	x20, x19, [sp, #16]
  436ebc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  436ec0:	ldr	w19, [x8, #1008]
  436ec4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  436ec8:	mov	w20, w0
  436ecc:	add	x1, x1, #0x17
  436ed0:	mov	w2, #0x5                   	// #5
  436ed4:	mov	x0, xzr
  436ed8:	mov	x29, sp
  436edc:	bl	404bf0 <dcgettext@plt>
  436ee0:	mov	x2, x0
  436ee4:	mov	w0, w19
  436ee8:	mov	w1, w20
  436eec:	bl	4041f0 <error@plt>
  436ef0:	bl	404870 <abort@plt>
  436ef4:	stp	x29, x30, [sp, #-32]!
  436ef8:	stp	x20, x19, [sp, #16]
  436efc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  436f00:	ldr	w19, [x8, #1008]
  436f04:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  436f08:	mov	w20, w0
  436f0c:	add	x1, x1, #0x42
  436f10:	mov	w2, #0x5                   	// #5
  436f14:	mov	x0, xzr
  436f18:	mov	x29, sp
  436f1c:	bl	404bf0 <dcgettext@plt>
  436f20:	mov	x2, x0
  436f24:	mov	w0, w19
  436f28:	mov	w1, w20
  436f2c:	bl	4041f0 <error@plt>
  436f30:	bl	404870 <abort@plt>
  436f34:	stp	x29, x30, [sp, #-48]!
  436f38:	mov	w8, #0x4900                	// #18688
  436f3c:	movk	w8, #0x8, lsl #16
  436f40:	orr	w2, w2, w8
  436f44:	stp	x22, x21, [sp, #16]
  436f48:	stp	x20, x19, [sp, #32]
  436f4c:	mov	x29, sp
  436f50:	mov	x19, x3
  436f54:	bl	44da58 <_obstack_memory_used@@Base+0xf7f8>
  436f58:	tbnz	w0, #31, 436f74 <argp_usage@@Base+0x5378>
  436f5c:	mov	w21, w0
  436f60:	bl	404820 <fdopendir@plt>
  436f64:	mov	x20, x0
  436f68:	cbz	x0, 436f7c <argp_usage@@Base+0x5380>
  436f6c:	str	w21, [x19]
  436f70:	b	436f94 <argp_usage@@Base+0x5398>
  436f74:	mov	x20, xzr
  436f78:	b	436f94 <argp_usage@@Base+0x5398>
  436f7c:	bl	404d00 <__errno_location@plt>
  436f80:	ldr	w22, [x0]
  436f84:	mov	x19, x0
  436f88:	mov	w0, w21
  436f8c:	bl	4047c0 <close@plt>
  436f90:	str	w22, [x19]
  436f94:	mov	x0, x20
  436f98:	ldp	x20, x19, [sp, #32]
  436f9c:	ldp	x22, x21, [sp, #16]
  436fa0:	ldp	x29, x30, [sp], #48
  436fa4:	ret
  436fa8:	stp	x29, x30, [sp, #-96]!
  436fac:	stp	x28, x27, [sp, #16]
  436fb0:	stp	x26, x25, [sp, #32]
  436fb4:	stp	x24, x23, [sp, #48]
  436fb8:	stp	x22, x21, [sp, #64]
  436fbc:	stp	x20, x19, [sp, #80]
  436fc0:	mov	x29, sp
  436fc4:	sub	sp, sp, #0x540
  436fc8:	add	x9, x0, #0x20
  436fcc:	mov	x12, x0
  436fd0:	mov	w8, wzr
  436fd4:	mov	x22, xzr
  436fd8:	movi	v0.2d, #0x0
  436fdc:	add	x23, sp, #0x78
  436fe0:	str	x9, [sp, #24]
  436fe4:	add	x9, x0, #0x58
  436fe8:	mov	w15, #0xfffffffe            	// #-2
  436fec:	mov	w13, #0x38                  	// #56
  436ff0:	sub	x14, x29, #0x68
  436ff4:	stur	xzr, [x29, #-16]
  436ff8:	sturh	wzr, [x29, #-104]
  436ffc:	str	x9, [sp, #16]
  437000:	stp	q0, q0, [x29, #-48]
  437004:	stur	q0, [x29, #-64]
  437008:	str	x0, [sp, #56]
  43700c:	b	43702c <argp_usage@@Base+0x5430>
  437010:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x19da0>
  437014:	add	x9, x9, #0x4ce
  437018:	ldrsb	w8, [x9, x8]
  43701c:	cmp	x22, #0x11
  437020:	add	x22, x22, #0x1
  437024:	strh	w8, [x14, x22, lsl #1]
  437028:	b.gt	437bb0 <argp_usage@@Base+0x5fb4>
  43702c:	cmp	w8, #0xc
  437030:	b.eq	437ba8 <argp_usage@@Base+0x5fac>  // b.none
  437034:	sxtw	x19, w8
  437038:	adrp	x8, 458000 <_obstack_memory_used@@Base+0x19da0>
  43703c:	add	x8, x8, #0x120
  437040:	ldrsb	x20, [x8, x19]
  437044:	cmn	x20, #0x5d
  437048:	b.eq	4370e0 <argp_usage@@Base+0x54e4>  // b.none
  43704c:	cmn	w15, #0x2
  437050:	b.ne	437070 <argp_usage@@Base+0x5474>  // b.any
  437054:	sub	x0, x29, #0x40
  437058:	mov	x1, x12
  43705c:	bl	437bec <argp_usage@@Base+0x5ff0>
  437060:	ldr	x12, [sp, #56]
  437064:	sub	x14, x29, #0x68
  437068:	mov	w13, #0x38                  	// #56
  43706c:	mov	w15, w0
  437070:	cmp	w15, #0x1
  437074:	b.lt	437090 <argp_usage@@Base+0x5494>  // b.tstop
  437078:	cmp	w15, #0x115
  43707c:	b.hi	43709c <argp_usage@@Base+0x54a0>  // b.pmore
  437080:	adrp	x8, 458000 <_obstack_memory_used@@Base+0x19da0>
  437084:	add	x8, x8, #0x192
  437088:	ldrb	w8, [x8, w15, sxtw]
  43708c:	b	4370a0 <argp_usage@@Base+0x54a4>
  437090:	mov	w8, wzr
  437094:	mov	w15, wzr
  437098:	b	4370a0 <argp_usage@@Base+0x54a4>
  43709c:	mov	w8, #0x2                   	// #2
  4370a0:	add	x9, x8, x20
  4370a4:	cmp	w9, #0x70
  4370a8:	b.hi	4370e0 <argp_usage@@Base+0x54e4>  // b.pmore
  4370ac:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x19da0>
  4370b0:	add	x10, x10, #0x2a8
  4370b4:	ldrsb	w10, [x10, x9]
  4370b8:	cmp	w8, w10
  4370bc:	b.ne	4370e0 <argp_usage@@Base+0x54e4>  // b.any
  4370c0:	adrp	x8, 458000 <_obstack_memory_used@@Base+0x19da0>
  4370c4:	add	x8, x8, #0x319
  4370c8:	ldrb	w8, [x8, x9]
  4370cc:	orr	x9, x9, #0x4
  4370d0:	cmp	x9, #0x6f
  4370d4:	b.ne	437178 <argp_usage@@Base+0x557c>  // b.any
  4370d8:	neg	w8, w8
  4370dc:	b	4370f0 <argp_usage@@Base+0x54f4>
  4370e0:	adrp	x8, 458000 <_obstack_memory_used@@Base+0x19da0>
  4370e4:	add	x8, x8, #0x38a
  4370e8:	ldrb	w8, [x8, x19]
  4370ec:	cbz	w8, 437bc4 <argp_usage@@Base+0x5fc8>
  4370f0:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x19da0>
  4370f4:	sxtw	x28, w8
  4370f8:	add	x9, x9, #0x3fc
  4370fc:	ldrb	w26, [x9, x28]
  437100:	mov	w9, #0x1                   	// #1
  437104:	sub	w8, w8, #0x4
  437108:	cmp	w8, #0x57
  43710c:	sub	x9, x9, x26
  437110:	madd	x9, x9, x13, x23
  437114:	ldp	x24, x19, [x9]
  437118:	ldp	x17, x18, [x9, #16]
  43711c:	ldp	x27, x20, [x9, #32]
  437120:	ldp	w25, w16, [x9, #48]
  437124:	b.hi	4378bc <argp_usage@@Base+0x5cc0>  // b.pmore
  437128:	adrp	x11, 458000 <_obstack_memory_used@@Base+0x19da0>
  43712c:	add	x11, x11, #0x70
  437130:	adr	x9, 437140 <argp_usage@@Base+0x5544>
  437134:	ldrh	w10, [x11, x8, lsl #1]
  437138:	add	x9, x9, x10, lsl #2
  43713c:	br	x9
  437140:	ldr	x8, [x23, #48]
  437144:	ldp	q1, q0, [x23, #16]
  437148:	ldr	q2, [x23]
  43714c:	add	x1, sp, #0x40
  437150:	mov	w2, #0x1                   	// #1
  437154:	mov	w21, #0x1                   	// #1
  437158:	mov	x0, x12
  43715c:	str	x8, [sp, #112]
  437160:	stp	q1, q0, [sp, #80]
  437164:	str	q2, [sp, #64]
  437168:	stp	w15, w16, [sp, #40]
  43716c:	str	x17, [sp, #32]
  437170:	str	x18, [sp, #48]
  437174:	b	437a1c <argp_usage@@Base+0x5e20>
  437178:	ldur	x9, [x29, #-16]
  43717c:	ldp	q1, q0, [x29, #-48]
  437180:	ldur	q2, [x29, #-64]
  437184:	mov	w15, #0xfffffffe            	// #-2
  437188:	str	x9, [x23, #104]
  43718c:	stur	q0, [x23, #88]
  437190:	stur	q1, [x23, #72]
  437194:	stur	q2, [x23, #56]
  437198:	add	x23, x23, #0x38
  43719c:	b	43701c <argp_usage@@Base+0x5420>
  4371a0:	ldur	x24, [x23, #-48]
  4371a4:	b	4377f0 <argp_usage@@Base+0x5bf4>
  4371a8:	ldur	x19, [x23, #-48]
  4371ac:	b	43781c <argp_usage@@Base+0x5c20>
  4371b0:	ldr	x8, [x23]
  4371b4:	tbnz	x8, #63, 437a4c <argp_usage@@Base+0x5e50>
  4371b8:	cbz	x8, 437b64 <argp_usage@@Base+0x5f68>
  4371bc:	ldur	x9, [x23, #-48]
  4371c0:	tbnz	x9, #63, 437b4c <argp_usage@@Base+0x5f50>
  4371c4:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4371c8:	b	437a60 <argp_usage@@Base+0x5e64>
  4371cc:	ldr	x17, [x23]
  4371d0:	mov	x24, xzr
  4371d4:	mov	x19, xzr
  4371d8:	b	437824 <argp_usage@@Base+0x5c28>
  4371dc:	ldur	x18, [x23, #-48]
  4371e0:	b	43786c <argp_usage@@Base+0x5c70>
  4371e4:	ldur	x27, [x23, #-48]
  4371e8:	b	4378a4 <argp_usage@@Base+0x5ca8>
  4371ec:	ldur	x20, [x23, #-48]
  4371f0:	b	437954 <argp_usage@@Base+0x5d58>
  4371f4:	ldur	x20, [x23, #-56]
  4371f8:	ldur	w25, [x23, #-48]
  4371fc:	mov	x24, xzr
  437200:	mov	x19, xzr
  437204:	mov	x17, xzr
  437208:	mov	x18, xzr
  43720c:	mov	x27, xzr
  437210:	b	4378bc <argp_usage@@Base+0x5cc0>
  437214:	ldr	x24, [x23, #8]
  437218:	mov	x19, xzr
  43721c:	b	4378bc <argp_usage@@Base+0x5cc0>
  437220:	ldr	q0, [x23]
  437224:	ldr	x9, [sp, #16]
  437228:	mov	w8, #0x1                   	// #1
  43722c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  437230:	add	x1, x1, #0xe6e
  437234:	str	q0, [x9]
  437238:	strb	w8, [x12, #160]
  43723c:	b	4372f0 <argp_usage@@Base+0x56f4>
  437240:	ldr	x8, [x12, #200]
  437244:	ldr	x9, [x12, #168]
  437248:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  43724c:	add	x1, x1, #0xe80
  437250:	add	x8, x8, #0x1
  437254:	add	x9, x9, #0x1
  437258:	str	x8, [x12, #200]
  43725c:	str	x9, [x12, #168]
  437260:	b	4372f0 <argp_usage@@Base+0x56f4>
  437264:	ldr	x8, [x12, #200]
  437268:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x15da0>
  43726c:	add	x1, x1, #0xd2f
  437270:	add	x8, x8, #0x1
  437274:	str	x8, [x12, #200]
  437278:	b	4372f0 <argp_usage@@Base+0x56f4>
  43727c:	ldr	x8, [x12, #184]
  437280:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  437284:	add	x1, x1, #0xe89
  437288:	add	x8, x8, #0x1
  43728c:	str	x8, [x12, #184]
  437290:	b	4372f0 <argp_usage@@Base+0x56f4>
  437294:	ldr	x8, [x12, #208]
  437298:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  43729c:	add	x1, x1, #0xe8f
  4372a0:	add	x8, x8, #0x1
  4372a4:	str	x8, [x12, #208]
  4372a8:	b	4372f0 <argp_usage@@Base+0x56f4>
  4372ac:	ldr	x8, [x12, #168]
  4372b0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x16da0>
  4372b4:	add	x1, x1, #0xff5
  4372b8:	add	x8, x8, #0x1
  4372bc:	str	x8, [x12, #168]
  4372c0:	b	4372f0 <argp_usage@@Base+0x56f4>
  4372c4:	ldr	x8, [x12, #176]
  4372c8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  4372cc:	add	x1, x1, #0xe94
  4372d0:	add	x8, x8, #0x1
  4372d4:	str	x8, [x12, #176]
  4372d8:	b	4372f0 <argp_usage@@Base+0x56f4>
  4372dc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  4372e0:	add	x1, x1, #0xe98
  4372e4:	b	43731c <argp_usage@@Base+0x5720>
  4372e8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  4372ec:	add	x1, x1, #0x9e
  4372f0:	mov	w2, #0x5                   	// #5
  4372f4:	mov	x0, xzr
  4372f8:	stp	w15, w16, [sp, #40]
  4372fc:	mov	x21, x17
  437300:	str	x18, [sp, #48]
  437304:	bl	404bf0 <dcgettext@plt>
  437308:	ldr	x1, [sp, #56]
  43730c:	bl	437fb0 <argp_usage@@Base+0x63b4>
  437310:	b	43733c <argp_usage@@Base+0x5740>
  437314:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  437318:	add	x1, x1, #0xea1
  43731c:	mov	w2, #0x5                   	// #5
  437320:	mov	x0, xzr
  437324:	stp	w15, w16, [sp, #40]
  437328:	mov	x21, x17
  43732c:	str	x18, [sp, #48]
  437330:	bl	404bf0 <dcgettext@plt>
  437334:	ldr	x1, [sp, #56]
  437338:	bl	438284 <argp_usage@@Base+0x6688>
  43733c:	ldr	x18, [sp, #48]
  437340:	ldr	w16, [sp, #44]
  437344:	mov	x17, x21
  437348:	ldr	w15, [sp, #40]
  43734c:	ldr	x12, [sp, #56]
  437350:	sub	x14, x29, #0x68
  437354:	mov	w13, #0x38                  	// #56
  437358:	b	4378bc <argp_usage@@Base+0x5cc0>
  43735c:	ldur	x1, [x23, #-48]
  437360:	mov	x0, x12
  437364:	mov	x2, xzr
  437368:	b	437378 <argp_usage@@Base+0x577c>
  43736c:	ldur	x1, [x23, #-160]
  437370:	ldur	x2, [x23, #-48]
  437374:	mov	x0, x12
  437378:	mov	x3, xzr
  43737c:	mov	w4, wzr
  437380:	b	43739c <argp_usage@@Base+0x57a0>
  437384:	sub	x8, x23, #0x110
  437388:	ldur	x2, [x23, #-160]
  43738c:	ldur	x3, [x23, #-56]
  437390:	ldr	x1, [x8]
  437394:	ldur	w4, [x23, #-48]
  437398:	mov	x0, x12
  43739c:	mov	w21, w15
  4373a0:	str	w16, [sp, #44]
  4373a4:	str	x17, [sp, #32]
  4373a8:	str	x18, [sp, #48]
  4373ac:	bl	4383c0 <argp_usage@@Base+0x67c4>
  4373b0:	ldp	x18, x12, [sp, #48]
  4373b4:	ldr	x8, [x23]
  4373b8:	ldr	x17, [sp, #32]
  4373bc:	ldr	w16, [sp, #44]
  4373c0:	mov	w15, w21
  4373c4:	sub	x14, x29, #0x68
  4373c8:	mov	w13, #0x38                  	// #56
  4373cc:	str	w8, [x12, #28]
  4373d0:	b	4378bc <argp_usage@@Base+0x5cc0>
  4373d4:	ldur	x1, [x23, #-48]
  4373d8:	mov	x0, x12
  4373dc:	mov	x2, xzr
  4373e0:	b	4373f0 <argp_usage@@Base+0x57f4>
  4373e4:	ldur	x1, [x23, #-160]
  4373e8:	ldur	x2, [x23, #-48]
  4373ec:	mov	x0, x12
  4373f0:	mov	x3, xzr
  4373f4:	mov	w4, wzr
  4373f8:	b	437414 <argp_usage@@Base+0x5818>
  4373fc:	sub	x8, x23, #0x110
  437400:	ldur	x2, [x23, #-160]
  437404:	ldur	x3, [x23, #-56]
  437408:	ldr	x1, [x8]
  43740c:	ldur	w4, [x23, #-48]
  437410:	mov	x0, x12
  437414:	mov	w21, w15
  437418:	str	w16, [sp, #44]
  43741c:	str	x17, [sp, #32]
  437420:	str	x18, [sp, #48]
  437424:	bl	4383c0 <argp_usage@@Base+0x67c4>
  437428:	ldp	x18, x12, [sp, #48]
  43742c:	ldr	x17, [sp, #32]
  437430:	ldr	w16, [sp, #44]
  437434:	mov	w8, #0x2                   	// #2
  437438:	mov	w15, w21
  43743c:	sub	x14, x29, #0x68
  437440:	mov	w13, #0x38                  	// #56
  437444:	str	w8, [x12, #28]
  437448:	b	4378bc <argp_usage@@Base+0x5cc0>
  43744c:	ldr	x8, [x12, #208]
  437450:	add	x1, sp, #0x40
  437454:	mov	x0, x12
  437458:	mov	w21, w15
  43745c:	add	x8, x8, #0x1
  437460:	str	x8, [x12, #208]
  437464:	ldur	x8, [x23, #-40]
  437468:	ldur	q0, [x23, #-56]
  43746c:	ldr	x2, [x23]
  437470:	str	w16, [sp, #44]
  437474:	str	x8, [sp, #80]
  437478:	str	q0, [sp, #64]
  43747c:	str	x17, [sp, #32]
  437480:	str	x18, [sp, #48]
  437484:	bl	4383d0 <argp_usage@@Base+0x67d4>
  437488:	b	4377cc <argp_usage@@Base+0x5bd0>
  43748c:	ldr	x8, [x23]
  437490:	str	w8, [x12, #20]
  437494:	b	4378bc <argp_usage@@Base+0x5cc0>
  437498:	ldr	x8, [x12, #192]
  43749c:	mov	w9, #0x1                   	// #1
  4374a0:	str	w9, [x12, #20]
  4374a4:	add	x8, x8, #0x1
  4374a8:	str	x8, [x12, #192]
  4374ac:	b	4378bc <argp_usage@@Base+0x5cc0>
  4374b0:	ldr	x8, [x23]
  4374b4:	str	w8, [x12, #24]
  4374b8:	b	4378bc <argp_usage@@Base+0x5cc0>
  4374bc:	mov	w8, #0x6270                	// #25200
  4374c0:	str	w8, [x12, #24]
  4374c4:	b	4378bc <argp_usage@@Base+0x5cc0>
  4374c8:	ldur	x8, [x23, #-56]
  4374cc:	str	x18, [sp, #48]
  4374d0:	str	x17, [sp, #32]
  4374d4:	stp	w15, w16, [sp, #40]
  4374d8:	str	w8, [x12, #24]
  4374dc:	b	4374f4 <argp_usage@@Base+0x58f8>
  4374e0:	mov	w8, #0x6270                	// #25200
  4374e4:	str	x18, [sp, #48]
  4374e8:	str	x17, [sp, #32]
  4374ec:	stp	w15, w16, [sp, #40]
  4374f0:	str	w8, [x12, #24]
  4374f4:	ldr	x8, [x23, #48]
  4374f8:	ldp	q1, q0, [x23, #16]
  4374fc:	ldr	q2, [x23]
  437500:	add	x1, sp, #0x40
  437504:	mov	w2, #0x1                   	// #1
  437508:	mov	x0, x12
  43750c:	str	x8, [sp, #112]
  437510:	stp	q1, q0, [sp, #80]
  437514:	str	q2, [sp, #64]
  437518:	mov	w21, #0x1                   	// #1
  43751c:	bl	4384e4 <argp_usage@@Base+0x68e8>
  437520:	tbz	w0, #0, 437bc8 <argp_usage@@Base+0x5fcc>
  437524:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  437528:	add	x1, x1, #0xe98
  43752c:	mov	w2, #0x5                   	// #5
  437530:	mov	x0, xzr
  437534:	bl	404bf0 <dcgettext@plt>
  437538:	ldr	x21, [sp, #56]
  43753c:	mov	x1, x21
  437540:	bl	438284 <argp_usage@@Base+0x6688>
  437544:	ldp	w15, w16, [sp, #40]
  437548:	ldr	x17, [sp, #32]
  43754c:	ldr	x18, [sp, #48]
  437550:	mov	x12, x21
  437554:	mov	w13, #0x38                  	// #56
  437558:	sub	x14, x29, #0x68
  43755c:	b	4378bc <argp_usage@@Base+0x5cc0>
  437560:	ldur	x8, [x23, #-40]
  437564:	ldur	q0, [x23, #-56]
  437568:	ldr	x2, [x23]
  43756c:	add	x1, sp, #0x40
  437570:	mov	x0, x12
  437574:	str	x18, [sp, #48]
  437578:	str	x17, [sp, #32]
  43757c:	mov	w21, w16
  437580:	str	w15, [sp, #40]
  437584:	str	x8, [sp, #80]
  437588:	str	q0, [sp, #64]
  43758c:	bl	4383d0 <argp_usage@@Base+0x67d4>
  437590:	tbz	w0, #0, 437bc4 <argp_usage@@Base+0x5fc8>
  437594:	ldur	x8, [x23, #-112]
  437598:	tbnz	x8, #63, 437afc <argp_usage@@Base+0x5f00>
  43759c:	ldp	x18, x12, [sp, #48]
  4375a0:	ldr	w15, [sp, #40]
  4375a4:	ldr	x17, [sp, #32]
  4375a8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4375ac:	ldrsw	x9, [x12, #24]
  4375b0:	sub	x10, x10, x8
  4375b4:	mov	w13, #0x38                  	// #56
  4375b8:	sub	x14, x29, #0x68
  4375bc:	cmp	x10, x9
  4375c0:	mov	w16, w21
  4375c4:	b.ge	437b28 <argp_usage@@Base+0x5f2c>  // b.tcont
  4375c8:	b	437bb8 <argp_usage@@Base+0x5fbc>
  4375cc:	ldr	w8, [x23]
  4375d0:	b	4375d8 <argp_usage@@Base+0x59dc>
  4375d4:	ldur	w8, [x23, #-56]
  4375d8:	add	w8, w8, #0xe10
  4375dc:	str	w8, [x12, #24]
  4375e0:	b	4378bc <argp_usage@@Base+0x5cc0>
  4375e4:	str	xzr, [x12, #8]
  4375e8:	ldr	x8, [x23]
  4375ec:	str	w8, [x12, #16]
  4375f0:	b	4378bc <argp_usage@@Base+0x5cc0>
  4375f4:	str	xzr, [x12, #8]
  4375f8:	ldur	x8, [x23, #-56]
  4375fc:	str	w8, [x12, #16]
  437600:	b	4378bc <argp_usage@@Base+0x5cc0>
  437604:	ldur	x8, [x23, #-56]
  437608:	b	437610 <argp_usage@@Base+0x5a14>
  43760c:	ldur	x8, [x23, #-48]
  437610:	str	x8, [x12, #8]
  437614:	ldr	x8, [x23]
  437618:	mov	w9, #0x1                   	// #1
  43761c:	strb	w9, [x12, #224]
  437620:	str	w8, [x12, #16]
  437624:	b	4378bc <argp_usage@@Base+0x5cc0>
  437628:	ldur	x21, [x23, #-208]
  43762c:	ldrb	w8, [x12, #217]
  437630:	cmp	x21, #0x4
  437634:	b.lt	437a70 <argp_usage@@Base+0x5e74>  // b.tstop
  437638:	sub	x9, x23, #0xe0
  43763c:	cbz	w8, 437688 <argp_usage@@Base+0x5a8c>
  437640:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  437644:	add	x1, x1, #0xea8
  437648:	mov	w2, #0x5                   	// #5
  43764c:	mov	x0, xzr
  437650:	stp	w15, w16, [sp, #40]
  437654:	str	x17, [sp, #32]
  437658:	str	x18, [sp, #48]
  43765c:	str	x9, [sp, #8]
  437660:	bl	404bf0 <dcgettext@plt>
  437664:	ldur	x1, [x23, #-216]
  437668:	mov	x2, x21
  43766c:	bl	438910 <argp_usage@@Base+0x6d14>
  437670:	ldr	x9, [sp, #8]
  437674:	ldp	x18, x12, [sp, #48]
  437678:	ldr	x17, [sp, #32]
  43767c:	ldp	w15, w16, [sp, #40]
  437680:	sub	x14, x29, #0x68
  437684:	mov	w13, #0x38                  	// #56
  437688:	ldr	x8, [x9, #16]
  43768c:	ldr	q0, [x9]
  437690:	ldr	x9, [sp, #24]
  437694:	str	x8, [x9, #16]
  437698:	str	q0, [x9]
  43769c:	ldur	x8, [x23, #-104]
  4376a0:	b	43770c <argp_usage@@Base+0x5b10>
  4376a4:	ldur	x8, [x23, #-104]
  4376a8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4376ac:	str	x8, [x12, #64]
  4376b0:	ldur	x8, [x23, #-56]
  4376b4:	str	x8, [x12, #56]
  4376b8:	ldr	x8, [x23, #8]
  4376bc:	neg	x10, x8
  4376c0:	cmp	x8, x9
  4376c4:	b	4376f4 <argp_usage@@Base+0x5af8>
  4376c8:	ldur	x8, [x23, #-112]
  4376cc:	str	x8, [x12, #56]
  4376d0:	ldur	x9, [x23, #-48]
  4376d4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4376d8:	neg	x10, x9
  4376dc:	cmp	x9, x8
  4376e0:	str	x10, [x12, #64]
  4376e4:	b.eq	437bc4 <argp_usage@@Base+0x5fc8>  // b.none
  4376e8:	ldr	x9, [x23, #8]
  4376ec:	neg	x10, x9
  4376f0:	cmp	x9, x8
  4376f4:	str	x10, [x12, #40]
  4376f8:	b.eq	437bc4 <argp_usage@@Base+0x5fc8>  // b.none
  4376fc:	ldr	x8, [x23, #16]
  437700:	str	x8, [x12, #48]
  437704:	b	4378bc <argp_usage@@Base+0x5cc0>
  437708:	ldur	x8, [x23, #-56]
  43770c:	str	x8, [x12, #56]
  437710:	ldr	x8, [x23, #8]
  437714:	str	x8, [x12, #64]
  437718:	b	4378bc <argp_usage@@Base+0x5cc0>
  43771c:	ldur	x8, [x23, #-168]
  437720:	b	437ab4 <argp_usage@@Base+0x5eb8>
  437724:	ldur	x8, [x23, #-48]
  437728:	str	x8, [x12, #64]
  43772c:	ldr	x8, [x23]
  437730:	str	x8, [x12, #56]
  437734:	b	4378bc <argp_usage@@Base+0x5cc0>
  437738:	ldur	x8, [x23, #-104]
  43773c:	str	x8, [x12, #64]
  437740:	ldur	x8, [x23, #-56]
  437744:	str	x8, [x12, #56]
  437748:	b	437ac0 <argp_usage@@Base+0x5ec4>
  43774c:	ldur	x8, [x23, #-96]
  437750:	ldur	q0, [x23, #-112]
  437754:	ldr	x9, [sp, #24]
  437758:	str	x8, [x9, #16]
  43775c:	str	q0, [x9]
  437760:	ldur	x9, [x23, #-48]
  437764:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  437768:	neg	x10, x9
  43776c:	cmp	x9, x8
  437770:	str	x10, [x12, #56]
  437774:	b.eq	437bc4 <argp_usage@@Base+0x5fc8>  // b.none
  437778:	ldr	x9, [x23, #8]
  43777c:	neg	x10, x9
  437780:	cmp	x9, x8
  437784:	str	x10, [x12, #64]
  437788:	b.ne	4378bc <argp_usage@@Base+0x5cc0>  // b.any
  43778c:	b	437bc4 <argp_usage@@Base+0x5fc8>
  437790:	ldr	w2, [x23]
  437794:	ldur	x8, [x23, #-8]
  437798:	ldur	q0, [x23, #-24]
  43779c:	ldur	q1, [x23, #-40]
  4377a0:	ldur	q2, [x23, #-56]
  4377a4:	add	x1, sp, #0x40
  4377a8:	mov	x0, x12
  4377ac:	str	x8, [sp, #112]
  4377b0:	stp	q1, q0, [sp, #80]
  4377b4:	str	q2, [sp, #64]
  4377b8:	mov	w21, w15
  4377bc:	str	w16, [sp, #44]
  4377c0:	str	x17, [sp, #32]
  4377c4:	str	x18, [sp, #48]
  4377c8:	bl	4384e4 <argp_usage@@Base+0x68e8>
  4377cc:	ldp	x18, x12, [sp, #48]
  4377d0:	ldr	x17, [sp, #32]
  4377d4:	ldr	w16, [sp, #44]
  4377d8:	mov	w15, w21
  4377dc:	sub	x14, x29, #0x68
  4377e0:	mov	w13, #0x38                  	// #56
  4377e4:	tbnz	w0, #0, 4378bc <argp_usage@@Base+0x5cc0>
  4377e8:	b	437bc4 <argp_usage@@Base+0x5fc8>
  4377ec:	ldur	x24, [x23, #-56]
  4377f0:	mov	x19, xzr
  4377f4:	b	437820 <argp_usage@@Base+0x5c24>
  4377f8:	mov	x19, xzr
  4377fc:	mov	x17, xzr
  437800:	mov	x18, xzr
  437804:	mov	x27, xzr
  437808:	mov	x20, xzr
  43780c:	mov	w25, wzr
  437810:	mov	w24, #0x1                   	// #1
  437814:	b	4378bc <argp_usage@@Base+0x5cc0>
  437818:	ldur	x19, [x23, #-56]
  43781c:	mov	x24, xzr
  437820:	mov	x17, xzr
  437824:	mov	x18, xzr
  437828:	b	437878 <argp_usage@@Base+0x5c7c>
  43782c:	mov	x24, xzr
  437830:	mov	x17, xzr
  437834:	mov	x18, xzr
  437838:	mov	x27, xzr
  43783c:	mov	x20, xzr
  437840:	mov	w25, wzr
  437844:	mov	w19, #0x1                   	// #1
  437848:	b	4378bc <argp_usage@@Base+0x5cc0>
  43784c:	ldr	x8, [x23]
  437850:	tbnz	x8, #63, 437ad8 <argp_usage@@Base+0x5edc>
  437854:	cbz	x8, 437b84 <argp_usage@@Base+0x5f88>
  437858:	ldur	x9, [x23, #-56]
  43785c:	tbnz	x9, #63, 437b6c <argp_usage@@Base+0x5f70>
  437860:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  437864:	b	437aec <argp_usage@@Base+0x5ef0>
  437868:	ldur	x18, [x23, #-56]
  43786c:	mov	x24, xzr
  437870:	mov	x19, xzr
  437874:	mov	x17, xzr
  437878:	mov	x27, xzr
  43787c:	b	4378b4 <argp_usage@@Base+0x5cb8>
  437880:	mov	x24, xzr
  437884:	mov	x19, xzr
  437888:	mov	x17, xzr
  43788c:	mov	x27, xzr
  437890:	mov	x20, xzr
  437894:	mov	w25, wzr
  437898:	mov	w18, #0x1                   	// #1
  43789c:	b	4378bc <argp_usage@@Base+0x5cc0>
  4378a0:	ldur	x27, [x23, #-56]
  4378a4:	mov	x24, xzr
  4378a8:	mov	x19, xzr
  4378ac:	mov	x17, xzr
  4378b0:	mov	x18, xzr
  4378b4:	mov	x20, xzr
  4378b8:	mov	w25, wzr
  4378bc:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x19da0>
  4378c0:	add	x9, x9, #0x458
  4378c4:	ldrb	w9, [x9, x28]
  4378c8:	mneg	x8, x26, x13
  4378cc:	add	x23, x23, x8
  4378d0:	sub	x22, x22, x26
  4378d4:	sub	x8, x9, #0x1c
  4378d8:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x19da0>
  4378dc:	add	x9, x9, #0x4b4
  4378e0:	ldrsh	x10, [x14, x22, lsl #1]
  4378e4:	ldrsb	x9, [x9, x8]
  4378e8:	str	x24, [x23, #56]!
  4378ec:	stp	x19, x17, [x23, #8]
  4378f0:	stp	x18, x27, [x23, #24]
  4378f4:	add	x9, x10, x9
  4378f8:	cmp	w9, #0x70
  4378fc:	str	x20, [x23, #40]
  437900:	stp	w25, w16, [x23, #48]
  437904:	b.hi	437010 <argp_usage@@Base+0x5414>  // b.pmore
  437908:	adrp	x11, 458000 <_obstack_memory_used@@Base+0x19da0>
  43790c:	add	x11, x11, #0x2a8
  437910:	ldrsb	w11, [x11, x9]
  437914:	and	w10, w10, #0xffff
  437918:	cmp	w10, w11, uxth
  43791c:	b.ne	437010 <argp_usage@@Base+0x5414>  // b.any
  437920:	adrp	x8, 458000 <_obstack_memory_used@@Base+0x19da0>
  437924:	add	x8, x8, #0x319
  437928:	ldrb	w8, [x8, x9]
  43792c:	b	43701c <argp_usage@@Base+0x5420>
  437930:	mov	x24, xzr
  437934:	mov	x19, xzr
  437938:	mov	x17, xzr
  43793c:	mov	x18, xzr
  437940:	mov	x20, xzr
  437944:	mov	w25, wzr
  437948:	mov	w27, #0x1                   	// #1
  43794c:	b	4378bc <argp_usage@@Base+0x5cc0>
  437950:	ldur	x20, [x23, #-56]
  437954:	mov	x24, xzr
  437958:	mov	x19, xzr
  43795c:	mov	x17, xzr
  437960:	mov	x18, xzr
  437964:	mov	x27, xzr
  437968:	mov	w25, wzr
  43796c:	b	4378bc <argp_usage@@Base+0x5cc0>
  437970:	mov	x24, xzr
  437974:	mov	x19, xzr
  437978:	mov	x17, xzr
  43797c:	mov	x18, xzr
  437980:	mov	x27, xzr
  437984:	mov	w25, wzr
  437988:	mov	w20, #0x1                   	// #1
  43798c:	b	4378bc <argp_usage@@Base+0x5cc0>
  437990:	ldr	x8, [x23, #16]
  437994:	ldr	q0, [x23]
  437998:	add	x1, sp, #0x40
  43799c:	mov	x0, x12
  4379a0:	str	x8, [sp, #80]
  4379a4:	str	q0, [sp, #64]
  4379a8:	str	w15, [sp, #40]
  4379ac:	mov	w21, w16
  4379b0:	str	x17, [sp, #32]
  4379b4:	str	x18, [sp, #48]
  4379b8:	bl	4389b8 <argp_usage@@Base+0x6dbc>
  4379bc:	ldr	x18, [sp, #48]
  4379c0:	ldr	x17, [sp, #32]
  4379c4:	mov	w16, w21
  4379c8:	b	437348 <argp_usage@@Base+0x574c>
  4379cc:	ldur	x8, [x23, #-40]
  4379d0:	ldur	q0, [x23, #-56]
  4379d4:	add	x1, sp, #0x40
  4379d8:	mov	x0, x12
  4379dc:	str	x8, [sp, #80]
  4379e0:	str	q0, [sp, #64]
  4379e4:	stp	w15, w16, [sp, #40]
  4379e8:	str	x17, [sp, #32]
  4379ec:	str	x18, [sp, #48]
  4379f0:	bl	4389b8 <argp_usage@@Base+0x6dbc>
  4379f4:	ldr	x8, [x23, #48]
  4379f8:	ldp	q1, q0, [x23, #16]
  4379fc:	ldr	q2, [x23]
  437a00:	ldr	x0, [sp, #56]
  437a04:	str	x8, [sp, #112]
  437a08:	stp	q1, q0, [sp, #80]
  437a0c:	str	q2, [sp, #64]
  437a10:	add	x1, sp, #0x40
  437a14:	mov	w2, #0x1                   	// #1
  437a18:	mov	w21, #0x1                   	// #1
  437a1c:	bl	4384e4 <argp_usage@@Base+0x68e8>
  437a20:	ldp	x18, x12, [sp, #48]
  437a24:	ldr	x17, [sp, #32]
  437a28:	ldp	w15, w16, [sp, #40]
  437a2c:	sub	x14, x29, #0x68
  437a30:	mov	w13, #0x38                  	// #56
  437a34:	tbnz	w0, #0, 4378bc <argp_usage@@Base+0x5cc0>
  437a38:	b	437bc8 <argp_usage@@Base+0x5fcc>
  437a3c:	mov	x24, #0xffffffffffffffff    	// #-1
  437a40:	b	4378bc <argp_usage@@Base+0x5cc0>
  437a44:	ldr	x24, [x23, #8]
  437a48:	b	4378bc <argp_usage@@Base+0x5cc0>
  437a4c:	ldur	x9, [x23, #-48]
  437a50:	tbnz	x9, #63, 437b54 <argp_usage@@Base+0x5f58>
  437a54:	cmn	x8, #0x1
  437a58:	b.eq	437b64 <argp_usage@@Base+0x5f68>  // b.none
  437a5c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437a60:	sdiv	x10, x10, x8
  437a64:	cmp	x10, x9
  437a68:	b.ge	437b64 <argp_usage@@Base+0x5f68>  // b.tcont
  437a6c:	b	437bc4 <argp_usage@@Base+0x5fc8>
  437a70:	cbz	w8, 437ab0 <argp_usage@@Base+0x5eb4>
  437a74:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  437a78:	add	x1, x1, #0xee0
  437a7c:	mov	w2, #0x5                   	// #5
  437a80:	mov	x0, xzr
  437a84:	stp	w15, w16, [sp, #40]
  437a88:	mov	x21, x17
  437a8c:	str	x18, [sp, #48]
  437a90:	bl	404bf0 <dcgettext@plt>
  437a94:	ldur	x1, [x23, #-216]
  437a98:	bl	438910 <argp_usage@@Base+0x6d14>
  437a9c:	ldp	x18, x12, [sp, #48]
  437aa0:	ldp	w15, w16, [sp, #40]
  437aa4:	mov	x17, x21
  437aa8:	sub	x14, x29, #0x68
  437aac:	mov	w13, #0x38                  	// #56
  437ab0:	ldur	x8, [x23, #-216]
  437ab4:	str	x8, [x12, #56]
  437ab8:	ldur	x8, [x23, #-104]
  437abc:	str	x8, [x12, #64]
  437ac0:	ldr	x8, [x23, #16]
  437ac4:	ldr	q0, [x23]
  437ac8:	ldr	x9, [sp, #24]
  437acc:	str	x8, [x9, #16]
  437ad0:	str	q0, [x9]
  437ad4:	b	4378bc <argp_usage@@Base+0x5cc0>
  437ad8:	ldur	x9, [x23, #-56]
  437adc:	tbnz	x9, #63, 437b74 <argp_usage@@Base+0x5f78>
  437ae0:	cmn	x8, #0x1
  437ae4:	b.eq	437b84 <argp_usage@@Base+0x5f88>  // b.none
  437ae8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437aec:	sdiv	x10, x10, x8
  437af0:	cmp	x10, x9
  437af4:	b.ge	437b84 <argp_usage@@Base+0x5f88>  // b.tcont
  437af8:	b	437bc4 <argp_usage@@Base+0x5fc8>
  437afc:	ldp	x18, x12, [sp, #48]
  437b00:	ldr	w15, [sp, #40]
  437b04:	ldr	x17, [sp, #32]
  437b08:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437b0c:	ldrsw	x9, [x12, #24]
  437b10:	sub	x10, x10, x8
  437b14:	mov	w13, #0x38                  	// #56
  437b18:	sub	x14, x29, #0x68
  437b1c:	cmp	x10, x9
  437b20:	mov	w16, w21
  437b24:	b.gt	437bb8 <argp_usage@@Base+0x5fbc>
  437b28:	ldrsw	x9, [x12, #24]
  437b2c:	mov	w11, #0x80000000            	// #-2147483648
  437b30:	add	x10, x8, x9
  437b34:	add	x10, x10, x11
  437b38:	lsr	x10, x10, #32
  437b3c:	cbnz	x10, 437bb8 <argp_usage@@Base+0x5fbc>
  437b40:	add	w8, w9, w8
  437b44:	str	w8, [x12, #24]
  437b48:	b	4378bc <argp_usage@@Base+0x5cc0>
  437b4c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437b50:	b	437b58 <argp_usage@@Base+0x5f5c>
  437b54:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  437b58:	sdiv	x10, x10, x8
  437b5c:	cmp	x9, x10
  437b60:	b.lt	437bc4 <argp_usage@@Base+0x5fc8>  // b.tstop
  437b64:	ldur	x9, [x23, #-48]
  437b68:	b	437b88 <argp_usage@@Base+0x5f8c>
  437b6c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437b70:	b	437b78 <argp_usage@@Base+0x5f7c>
  437b74:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  437b78:	sdiv	x10, x10, x8
  437b7c:	cmp	x9, x10
  437b80:	b.lt	437bc4 <argp_usage@@Base+0x5fc8>  // b.tstop
  437b84:	ldur	x9, [x23, #-56]
  437b88:	mov	x24, xzr
  437b8c:	mov	x19, xzr
  437b90:	mov	x18, xzr
  437b94:	mov	x27, xzr
  437b98:	mov	x20, xzr
  437b9c:	mov	w25, wzr
  437ba0:	mul	x17, x9, x8
  437ba4:	b	4378bc <argp_usage@@Base+0x5cc0>
  437ba8:	mov	w21, wzr
  437bac:	b	437bc8 <argp_usage@@Base+0x5fcc>
  437bb0:	mov	w21, #0x2                   	// #2
  437bb4:	b	437bc8 <argp_usage@@Base+0x5fcc>
  437bb8:	ldr	w9, [x12, #24]
  437bbc:	add	w8, w9, w8
  437bc0:	str	w8, [x12, #24]
  437bc4:	mov	w21, #0x1                   	// #1
  437bc8:	mov	w0, w21
  437bcc:	add	sp, sp, #0x540
  437bd0:	ldp	x20, x19, [sp, #80]
  437bd4:	ldp	x22, x21, [sp, #64]
  437bd8:	ldp	x24, x23, [sp, #48]
  437bdc:	ldp	x26, x25, [sp, #32]
  437be0:	ldp	x28, x27, [sp, #16]
  437be4:	ldp	x29, x30, [sp], #96
  437be8:	ret
  437bec:	sub	sp, sp, #0x80
  437bf0:	stp	x26, x25, [sp, #64]
  437bf4:	mov	x25, #0x3333333333333333    	// #3689348814741910323
  437bf8:	stp	x24, x23, [sp, #80]
  437bfc:	movk	x25, #0x3334
  437c00:	mov	x24, #0xcccccccccccccccc    	// #-3689348814741910324
  437c04:	stp	x28, x27, [sp, #48]
  437c08:	stp	x20, x19, [sp, #112]
  437c0c:	mov	x19, x1
  437c10:	mov	x27, x0
  437c14:	movk	x25, #0xf333, lsl #48
  437c18:	mov	w26, #0x30                  	// #48
  437c1c:	mov	x28, #0x7fffffffffffffff    	// #9223372036854775807
  437c20:	movk	x24, #0xccc, lsl #48
  437c24:	stp	x29, x30, [sp, #32]
  437c28:	stp	x22, x21, [sp, #96]
  437c2c:	add	x29, sp, #0x20
  437c30:	str	x0, [sp]
  437c34:	b	437c40 <argp_usage@@Base+0x6044>
  437c38:	mov	w8, #0x1                   	// #1
  437c3c:	tbz	w8, #0, 437f8c <argp_usage@@Base+0x6390>
  437c40:	ldr	x8, [x19]
  437c44:	ldrb	w22, [x8]
  437c48:	mov	w0, w22
  437c4c:	bl	44c054 <_obstack_memory_used@@Base+0xddf4>
  437c50:	tbz	w0, #0, 437c68 <argp_usage@@Base+0x606c>
  437c54:	ldr	x8, [x19]
  437c58:	add	x9, x8, #0x1
  437c5c:	str	x9, [x19]
  437c60:	ldrb	w22, [x8, #1]
  437c64:	b	437c48 <argp_usage@@Base+0x604c>
  437c68:	mov	w0, w22
  437c6c:	bl	44bfe0 <_obstack_memory_used@@Base+0xdd80>
  437c70:	tbz	w0, #0, 437c8c <argp_usage@@Base+0x6090>
  437c74:	cmp	w22, #0x2d
  437c78:	b.eq	437c9c <argp_usage@@Base+0x60a0>  // b.none
  437c7c:	cmp	w22, #0x2b
  437c80:	b.eq	437c9c <argp_usage@@Base+0x60a0>  // b.none
  437c84:	mov	w20, wzr
  437c88:	b	437cd4 <argp_usage@@Base+0x60d8>
  437c8c:	cmp	w22, #0x2b
  437c90:	b.eq	437c9c <argp_usage@@Base+0x60a0>  // b.none
  437c94:	cmp	w22, #0x2d
  437c98:	b.ne	437d64 <argp_usage@@Base+0x6168>  // b.any
  437c9c:	ldr	x8, [x19]
  437ca0:	add	x9, x8, #0x1
  437ca4:	str	x9, [x19]
  437ca8:	ldrb	w23, [x8, #1]
  437cac:	mov	w0, w23
  437cb0:	bl	44c054 <_obstack_memory_used@@Base+0xddf4>
  437cb4:	tbnz	w0, #0, 437c9c <argp_usage@@Base+0x60a0>
  437cb8:	cmp	w22, #0x2d
  437cbc:	mov	w8, #0xffffffff            	// #-1
  437cc0:	mov	w0, w23
  437cc4:	cneg	w20, w8, ne  // ne = any
  437cc8:	bl	44bfe0 <_obstack_memory_used@@Base+0xdd80>
  437ccc:	tbz	w0, #0, 437c38 <argp_usage@@Base+0x603c>
  437cd0:	mov	w22, w23
  437cd4:	ldr	x8, [x19]
  437cd8:	mov	x21, xzr
  437cdc:	add	x23, x8, #0x2
  437ce0:	b	437d0c <argp_usage@@Base+0x6110>
  437ce4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437ce8:	sub	x10, x10, x9
  437cec:	cmp	x8, x10
  437cf0:	b.lt	437d54 <argp_usage@@Base+0x6158>  // b.tstop
  437cf4:	ldurb	w22, [x23, #-1]
  437cf8:	add	x21, x8, x9
  437cfc:	mov	w0, w22
  437d00:	bl	44bfe0 <_obstack_memory_used@@Base+0xdd80>
  437d04:	add	x23, x23, #0x1
  437d08:	tbz	w0, #0, 437db8 <argp_usage@@Base+0x61bc>
  437d0c:	tbnz	x21, #63, 437d1c <argp_usage@@Base+0x6120>
  437d10:	cmp	x21, x24
  437d14:	b.le	437d24 <argp_usage@@Base+0x6128>
  437d18:	b	437d54 <argp_usage@@Base+0x6158>
  437d1c:	cmp	x21, x25
  437d20:	b.lt	437d54 <argp_usage@@Base+0x6158>  // b.tstop
  437d24:	and	w9, w22, #0xff
  437d28:	sub	w10, w26, w9
  437d2c:	sub	w9, w9, #0x30
  437d30:	cmp	w20, #0x0
  437d34:	add	x8, x21, x21, lsl #2
  437d38:	csel	w10, w10, w9, lt  // lt = tstop
  437d3c:	lsl	x8, x8, #1
  437d40:	sxtw	x9, w10
  437d44:	tbnz	w10, #31, 437ce4 <argp_usage@@Base+0x60e8>
  437d48:	sub	x10, x28, x9
  437d4c:	cmp	x10, x8
  437d50:	b.ge	437cf4 <argp_usage@@Base+0x60f8>  // b.tcont
  437d54:	mov	w21, #0x3f                  	// #63
  437d58:	mov	w8, wzr
  437d5c:	tbnz	wzr, #0, 437c40 <argp_usage@@Base+0x6044>
  437d60:	b	437f8c <argp_usage@@Base+0x6390>
  437d64:	mov	w0, w22
  437d68:	bl	44bf74 <_obstack_memory_used@@Base+0xdd14>
  437d6c:	tbnz	w0, #0, 437eec <argp_usage@@Base+0x62f0>
  437d70:	cmp	w22, #0x28
  437d74:	b.ne	437f48 <argp_usage@@Base+0x634c>  // b.any
  437d78:	mov	x8, xzr
  437d7c:	b	437d88 <argp_usage@@Base+0x618c>
  437d80:	sub	x8, x8, #0x1
  437d84:	cbz	x8, 437e4c <argp_usage@@Base+0x6250>
  437d88:	ldr	x9, [x19]
  437d8c:	add	x10, x9, #0x1
  437d90:	str	x10, [x19]
  437d94:	ldrb	w9, [x9]
  437d98:	cmp	w9, #0x28
  437d9c:	b.eq	437db0 <argp_usage@@Base+0x61b4>  // b.none
  437da0:	cmp	w9, #0x29
  437da4:	b.eq	437d80 <argp_usage@@Base+0x6184>  // b.none
  437da8:	cbnz	w9, 437d84 <argp_usage@@Base+0x6188>
  437dac:	b	437e3c <argp_usage@@Base+0x6240>
  437db0:	add	x8, x8, #0x1
  437db4:	b	437d84 <argp_usage@@Base+0x6188>
  437db8:	orr	w8, w22, #0x2
  437dbc:	cmp	w8, #0x2e
  437dc0:	b.ne	437e0c <argp_usage@@Base+0x6210>  // b.any
  437dc4:	ldurb	w0, [x23, #-1]
  437dc8:	bl	44bfe0 <_obstack_memory_used@@Base+0xdd80>
  437dcc:	tbz	w0, #0, 437e0c <argp_usage@@Base+0x6210>
  437dd0:	ldurb	w8, [x23, #-1]
  437dd4:	mov	w27, #0x8                   	// #8
  437dd8:	sub	w22, w8, #0x30
  437ddc:	b	437de8 <argp_usage@@Base+0x61ec>
  437de0:	subs	w27, w27, #0x1
  437de4:	b.eq	437e58 <argp_usage@@Base+0x625c>  // b.none
  437de8:	ldrb	w0, [x23]
  437dec:	add	w8, w22, w22, lsl #2
  437df0:	lsl	w22, w8, #1
  437df4:	bl	44bfe0 <_obstack_memory_used@@Base+0xdd80>
  437df8:	tbz	w0, #0, 437de0 <argp_usage@@Base+0x61e4>
  437dfc:	ldrb	w8, [x23], #1
  437e00:	add	w8, w22, w8
  437e04:	sub	w22, w8, #0x30
  437e08:	b	437de0 <argp_usage@@Base+0x61e4>
  437e0c:	lsr	w9, w20, #31
  437e10:	str	x21, [x27, #8]
  437e14:	strb	w9, [x27]
  437e18:	ldr	x9, [x19]
  437e1c:	sub	x10, x23, #0x2
  437e20:	mov	w8, wzr
  437e24:	cmp	w20, #0x0
  437e28:	sub	x9, x10, x9
  437e2c:	str	x9, [x27, #16]
  437e30:	mov	w9, #0x112                 	// #274
  437e34:	str	x10, [x19]
  437e38:	b	437ee0 <argp_usage@@Base+0x62e4>
  437e3c:	mov	w8, wzr
  437e40:	mov	w21, wzr
  437e44:	tbnz	w8, #0, 437c40 <argp_usage@@Base+0x6044>
  437e48:	b	437f8c <argp_usage@@Base+0x6390>
  437e4c:	mov	w8, #0x1                   	// #1
  437e50:	tbnz	w8, #0, 437c40 <argp_usage@@Base+0x6044>
  437e54:	b	437f8c <argp_usage@@Base+0x6390>
  437e58:	tbnz	w20, #31, 437e64 <argp_usage@@Base+0x6268>
  437e5c:	ldr	x27, [sp]
  437e60:	b	437e94 <argp_usage@@Base+0x6298>
  437e64:	ldrb	w0, [x23]
  437e68:	bl	44bfe0 <_obstack_memory_used@@Base+0xdd80>
  437e6c:	ldr	x27, [sp]
  437e70:	tbz	w0, #0, 437e94 <argp_usage@@Base+0x6298>
  437e74:	ldrb	w8, [x23]
  437e78:	cmp	w8, #0x30
  437e7c:	b.ne	437e90 <argp_usage@@Base+0x6294>  // b.any
  437e80:	ldrb	w0, [x23, #1]!
  437e84:	bl	44bfe0 <_obstack_memory_used@@Base+0xdd80>
  437e88:	tbnz	w0, #0, 437e74 <argp_usage@@Base+0x6278>
  437e8c:	b	437e94 <argp_usage@@Base+0x6298>
  437e90:	add	w22, w22, #0x1
  437e94:	sub	x23, x23, #0x1
  437e98:	ldrb	w0, [x23, #1]!
  437e9c:	bl	44bfe0 <_obstack_memory_used@@Base+0xdd80>
  437ea0:	tbnz	w0, #0, 437e98 <argp_usage@@Base+0x629c>
  437ea4:	tbz	w20, #31, 437ec8 <argp_usage@@Base+0x62cc>
  437ea8:	cbz	w22, 437ec8 <argp_usage@@Base+0x62cc>
  437eac:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  437eb0:	cmp	x21, x8
  437eb4:	b.eq	437d54 <argp_usage@@Base+0x6158>  // b.none
  437eb8:	mov	w8, #0xca00                	// #51712
  437ebc:	movk	w8, #0x3b9a, lsl #16
  437ec0:	sub	x21, x21, #0x1
  437ec4:	sub	w22, w8, w22
  437ec8:	sxtw	x9, w22
  437ecc:	mov	w8, wzr
  437ed0:	cmp	w20, #0x0
  437ed4:	stp	x21, x9, [x27]
  437ed8:	str	x23, [x19]
  437edc:	mov	w9, #0x114                 	// #276
  437ee0:	cinc	w21, w9, eq  // eq = none
  437ee4:	tbnz	w8, #0, 437c40 <argp_usage@@Base+0x6044>
  437ee8:	b	437f8c <argp_usage@@Base+0x6390>
  437eec:	add	x20, sp, #0xc
  437ef0:	add	x21, x20, #0x13
  437ef4:	cmp	x20, x21
  437ef8:	b.cs	437f00 <argp_usage@@Base+0x6304>  // b.hs, b.nlast
  437efc:	strb	w22, [x20], #1
  437f00:	ldr	x8, [x19]
  437f04:	add	x9, x8, #0x1
  437f08:	str	x9, [x19]
  437f0c:	ldrb	w22, [x8, #1]
  437f10:	mov	w0, w22
  437f14:	bl	44bf74 <_obstack_memory_used@@Base+0xdd14>
  437f18:	tbnz	w0, #0, 437ef4 <argp_usage@@Base+0x62f8>
  437f1c:	cmp	w22, #0x2e
  437f20:	b.eq	437ef4 <argp_usage@@Base+0x62f8>  // b.none
  437f24:	add	x1, sp, #0xc
  437f28:	mov	x0, x19
  437f2c:	strb	wzr, [x20]
  437f30:	bl	43a7e8 <argp_usage@@Base+0x8bec>
  437f34:	cbz	x0, 437f64 <argp_usage@@Base+0x6368>
  437f38:	ldrsw	x8, [x0, #12]
  437f3c:	str	x8, [x27]
  437f40:	ldr	w21, [x0, #8]
  437f44:	b	437f8c <argp_usage@@Base+0x6390>
  437f48:	ldr	x8, [x19]
  437f4c:	add	x9, x8, #0x1
  437f50:	str	x9, [x19]
  437f54:	ldrb	w0, [x8]
  437f58:	bl	43aa18 <argp_usage@@Base+0x8e1c>
  437f5c:	and	w21, w0, #0xff
  437f60:	b	437f8c <argp_usage@@Base+0x6390>
  437f64:	ldrb	w8, [x19, #217]
  437f68:	cbz	w8, 437f88 <argp_usage@@Base+0x638c>
  437f6c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  437f70:	add	x1, x1, #0x776
  437f74:	mov	w2, #0x5                   	// #5
  437f78:	mov	x0, xzr
  437f7c:	bl	404bf0 <dcgettext@plt>
  437f80:	add	x1, sp, #0xc
  437f84:	bl	438910 <argp_usage@@Base+0x6d14>
  437f88:	mov	w21, #0x3f                  	// #63
  437f8c:	mov	w0, w21
  437f90:	ldp	x20, x19, [sp, #112]
  437f94:	ldp	x22, x21, [sp, #96]
  437f98:	ldp	x24, x23, [sp, #80]
  437f9c:	ldp	x26, x25, [sp, #64]
  437fa0:	ldp	x28, x27, [sp, #48]
  437fa4:	ldp	x29, x30, [sp, #32]
  437fa8:	add	sp, sp, #0x80
  437fac:	ret
  437fb0:	sub	sp, sp, #0xb0
  437fb4:	stp	x29, x30, [sp, #112]
  437fb8:	stp	x22, x21, [sp, #144]
  437fbc:	stp	x20, x19, [sp, #160]
  437fc0:	ldrb	w8, [x1, #217]
  437fc4:	str	x23, [sp, #128]
  437fc8:	add	x29, sp, #0x70
  437fcc:	cbnz	w8, 437fe8 <argp_usage@@Base+0x63ec>
  437fd0:	ldp	x20, x19, [sp, #160]
  437fd4:	ldp	x22, x21, [sp, #144]
  437fd8:	ldr	x23, [sp, #128]
  437fdc:	ldp	x29, x30, [sp, #112]
  437fe0:	add	sp, sp, #0xb0
  437fe4:	ret
  437fe8:	mov	x19, x1
  437fec:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  437ff0:	mov	x20, x0
  437ff4:	add	x1, x1, #0x684
  437ff8:	mov	w2, #0x5                   	// #5
  437ffc:	mov	x0, xzr
  438000:	bl	404bf0 <dcgettext@plt>
  438004:	mov	x1, x20
  438008:	bl	438910 <argp_usage@@Base+0x6d14>
  43800c:	ldr	x8, [x19, #168]
  438010:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  438014:	cbz	x8, 438048 <argp_usage@@Base+0x644c>
  438018:	ldrb	w8, [x19, #218]
  43801c:	cbnz	w8, 438048 <argp_usage@@Base+0x644c>
  438020:	ldr	x0, [x22, #1136]
  438024:	ldr	x3, [x19, #40]
  438028:	ldp	x4, x5, [x19, #56]
  43802c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438030:	add	x2, x2, #0x695
  438034:	mov	w1, #0x1                   	// #1
  438038:	mov	w23, #0x1                   	// #1
  43803c:	bl	404910 <__fprintf_chk@plt>
  438040:	strb	w23, [x19, #218]
  438044:	b	43804c <argp_usage@@Base+0x6450>
  438048:	mov	w23, wzr
  43804c:	ldrb	w8, [x19, #216]
  438050:	ldrb	w9, [x19, #223]
  438054:	cmp	w8, w9
  438058:	b.eq	4380a4 <argp_usage@@Base+0x64a8>  // b.none
  43805c:	cbz	w23, 43806c <argp_usage@@Base+0x6470>
  438060:	ldr	x1, [x22, #1136]
  438064:	mov	w0, #0x20                  	// #32
  438068:	bl	404330 <fputc@plt>
  43806c:	ldr	x20, [x22, #1136]
  438070:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438074:	add	x1, x1, #0x6af
  438078:	mov	w2, #0x5                   	// #5
  43807c:	mov	x0, xzr
  438080:	bl	404bf0 <dcgettext@plt>
  438084:	ldr	x3, [x19, #40]
  438088:	mov	x2, x0
  43808c:	mov	w1, #0x1                   	// #1
  438090:	mov	x0, x20
  438094:	mov	w23, #0x1                   	// #1
  438098:	bl	404910 <__fprintf_chk@plt>
  43809c:	ldrb	w8, [x19, #216]
  4380a0:	strb	w8, [x19, #223]
  4380a4:	ldr	x8, [x19, #200]
  4380a8:	cbz	x8, 438120 <argp_usage@@Base+0x6524>
  4380ac:	ldrb	w8, [x19, #221]
  4380b0:	cbnz	w8, 438120 <argp_usage@@Base+0x6524>
  4380b4:	ldp	x4, x5, [x19, #80]
  4380b8:	ldr	x0, [x22, #1136]
  4380bc:	ldr	x3, [x19, #72]
  4380c0:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4380c4:	eor	w8, w23, #0x1
  4380c8:	add	x9, x9, #0x6bb
  4380cc:	add	x2, x9, x8
  4380d0:	mov	w1, #0x1                   	// #1
  4380d4:	bl	404910 <__fprintf_chk@plt>
  4380d8:	ldr	x3, [x19, #96]
  4380dc:	cbz	x3, 4380f4 <argp_usage@@Base+0x64f8>
  4380e0:	ldr	x0, [x22, #1136]
  4380e4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4380e8:	add	x2, x2, #0x6ce
  4380ec:	mov	w1, #0x1                   	// #1
  4380f0:	bl	404910 <__fprintf_chk@plt>
  4380f4:	ldr	w8, [x19, #28]
  4380f8:	cmp	w8, #0x1
  4380fc:	b.ne	438118 <argp_usage@@Base+0x651c>  // b.any
  438100:	ldr	x3, [x22, #1136]
  438104:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438108:	add	x0, x0, #0xf8
  43810c:	mov	w1, #0x2                   	// #2
  438110:	mov	w2, #0x1                   	// #1
  438114:	bl	404ab0 <fwrite@plt>
  438118:	mov	w23, #0x1                   	// #1
  43811c:	strb	w23, [x19, #221]
  438120:	ldr	x8, [x19, #176]
  438124:	cbz	x8, 43818c <argp_usage@@Base+0x6590>
  438128:	ldrb	w8, [x19, #219]
  43812c:	cbnz	w8, 43818c <argp_usage@@Base+0x6590>
  438130:	cbz	w23, 438140 <argp_usage@@Base+0x6544>
  438134:	ldr	x1, [x22, #1136]
  438138:	mov	w0, #0x20                  	// #32
  43813c:	bl	404330 <fputc@plt>
  438140:	ldr	x20, [x22, #1136]
  438144:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438148:	add	x1, x1, #0x6d4
  43814c:	mov	w2, #0x5                   	// #5
  438150:	mov	x0, xzr
  438154:	bl	404bf0 <dcgettext@plt>
  438158:	mov	x21, x0
  43815c:	add	x1, sp, #0xc
  438160:	mov	x0, x19
  438164:	bl	43a530 <argp_usage@@Base+0x8934>
  438168:	ldr	x4, [x19, #8]
  43816c:	ldr	w5, [x19, #16]
  438170:	mov	x3, x0
  438174:	mov	w1, #0x1                   	// #1
  438178:	mov	x0, x20
  43817c:	mov	x2, x21
  438180:	mov	w23, #0x1                   	// #1
  438184:	bl	404910 <__fprintf_chk@plt>
  438188:	strb	w23, [x19, #219]
  43818c:	ldr	x8, [x19, #184]
  438190:	cbz	x8, 4381e0 <argp_usage@@Base+0x65e4>
  438194:	ldrb	w8, [x19, #220]
  438198:	cbnz	w8, 4381e0 <argp_usage@@Base+0x65e4>
  43819c:	ldr	x10, [x19, #192]
  4381a0:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4381a4:	ldr	x0, [x22, #1136]
  4381a8:	eor	w8, w23, #0x1
  4381ac:	add	x9, x9, #0x6f3
  4381b0:	ldr	w3, [x19, #20]
  4381b4:	add	x2, x9, x8
  4381b8:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4381bc:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  4381c0:	add	x8, x8, #0x6ff
  4381c4:	add	x9, x9, #0xd3e
  4381c8:	cmp	x10, #0x0
  4381cc:	csel	x4, x9, x8, eq  // eq = none
  4381d0:	mov	w1, #0x1                   	// #1
  4381d4:	mov	w23, #0x1                   	// #1
  4381d8:	bl	404910 <__fprintf_chk@plt>
  4381dc:	strb	w23, [x19, #220]
  4381e0:	ldr	x8, [x19, #208]
  4381e4:	cbz	x8, 43822c <argp_usage@@Base+0x6630>
  4381e8:	ldrb	w8, [x19, #222]
  4381ec:	cbnz	w8, 43822c <argp_usage@@Base+0x6630>
  4381f0:	ldr	w0, [x19, #24]
  4381f4:	ldr	x20, [x22, #1136]
  4381f8:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4381fc:	eor	w8, w23, #0x1
  438200:	add	x9, x9, #0x704
  438204:	add	x1, sp, #0xc
  438208:	add	x21, x9, x8
  43820c:	bl	439f70 <argp_usage@@Base+0x8374>
  438210:	mov	x3, x0
  438214:	mov	w1, #0x1                   	// #1
  438218:	mov	x0, x20
  43821c:	mov	x2, x21
  438220:	mov	w23, #0x1                   	// #1
  438224:	bl	404910 <__fprintf_chk@plt>
  438228:	strb	w23, [x19, #222]
  43822c:	ldrb	w8, [x19, #160]
  438230:	cbz	w8, 438274 <argp_usage@@Base+0x6678>
  438234:	ldr	x19, [x19, #88]
  438238:	cbz	w23, 438248 <argp_usage@@Base+0x664c>
  43823c:	ldr	x1, [x22, #1136]
  438240:	mov	w0, #0x20                  	// #32
  438244:	bl	404330 <fputc@plt>
  438248:	ldr	x20, [x22, #1136]
  43824c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438250:	add	x1, x1, #0x70b
  438254:	mov	w2, #0x5                   	// #5
  438258:	mov	x0, xzr
  43825c:	bl	404bf0 <dcgettext@plt>
  438260:	mov	x2, x0
  438264:	mov	w1, #0x1                   	// #1
  438268:	mov	x0, x20
  43826c:	mov	x3, x19
  438270:	bl	404910 <__fprintf_chk@plt>
  438274:	ldr	x1, [x22, #1136]
  438278:	mov	w0, #0xa                   	// #10
  43827c:	bl	404330 <fputc@plt>
  438280:	b	437fd0 <argp_usage@@Base+0x63d4>
  438284:	stp	x29, x30, [sp, #-32]!
  438288:	stp	x20, x19, [sp, #16]
  43828c:	ldrb	w8, [x1, #217]
  438290:	mov	x29, sp
  438294:	cbnz	w8, 4382a4 <argp_usage@@Base+0x66a8>
  438298:	ldp	x20, x19, [sp, #16]
  43829c:	ldp	x29, x30, [sp], #32
  4382a0:	ret
  4382a4:	mov	x19, x1
  4382a8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4382ac:	mov	x20, x0
  4382b0:	add	x1, x1, #0x684
  4382b4:	mov	w2, #0x5                   	// #5
  4382b8:	mov	x0, xzr
  4382bc:	bl	404bf0 <dcgettext@plt>
  4382c0:	mov	x1, x20
  4382c4:	bl	438910 <argp_usage@@Base+0x6d14>
  4382c8:	ldr	x1, [x19, #104]
  4382cc:	cbnz	x1, 438324 <argp_usage@@Base+0x6728>
  4382d0:	ldr	x8, [x19, #112]
  4382d4:	cbnz	x8, 438324 <argp_usage@@Base+0x6728>
  4382d8:	ldr	x8, [x19, #120]
  4382dc:	cbnz	x8, 438324 <argp_usage@@Base+0x6728>
  4382e0:	ldr	x8, [x19, #128]
  4382e4:	cbnz	x8, 438324 <argp_usage@@Base+0x6728>
  4382e8:	ldr	x8, [x19, #136]
  4382ec:	cbnz	x8, 438324 <argp_usage@@Base+0x6728>
  4382f0:	ldr	x8, [x19, #144]
  4382f4:	cbnz	x8, 438324 <argp_usage@@Base+0x6728>
  4382f8:	ldr	w8, [x19, #152]
  4382fc:	cbnz	w8, 438324 <argp_usage@@Base+0x6728>
  438300:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438304:	add	x1, x1, #0x722
  438308:	mov	w2, #0x5                   	// #5
  43830c:	mov	x0, xzr
  438310:	bl	404bf0 <dcgettext@plt>
  438314:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  438318:	ldr	x1, [x8, #1136]
  43831c:	bl	4041a0 <fputs@plt>
  438320:	b	438298 <argp_usage@@Base+0x669c>
  438324:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438328:	add	x2, x2, #0x732
  43832c:	mov	w0, wzr
  438330:	bl	43a794 <argp_usage@@Base+0x8b98>
  438334:	ldr	x1, [x19, #112]
  438338:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43833c:	and	w0, w0, #0x1
  438340:	add	x2, x2, #0x73a
  438344:	bl	43a794 <argp_usage@@Base+0x8b98>
  438348:	ldr	x1, [x19, #120]
  43834c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438350:	and	w0, w0, #0x1
  438354:	add	x2, x2, #0x743
  438358:	bl	43a794 <argp_usage@@Base+0x8b98>
  43835c:	ldr	x1, [x19, #128]
  438360:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438364:	and	w0, w0, #0x1
  438368:	add	x2, x2, #0x74a
  43836c:	bl	43a794 <argp_usage@@Base+0x8b98>
  438370:	ldr	x1, [x19, #136]
  438374:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438378:	and	w0, w0, #0x1
  43837c:	add	x2, x2, #0x752
  438380:	bl	43a794 <argp_usage@@Base+0x8b98>
  438384:	ldr	x1, [x19, #144]
  438388:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x19da0>
  43838c:	and	w0, w0, #0x1
  438390:	add	x2, x2, #0xe78
  438394:	bl	43a794 <argp_usage@@Base+0x8b98>
  438398:	ldrsw	x1, [x19, #152]
  43839c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4383a0:	and	w0, w0, #0x1
  4383a4:	add	x2, x2, #0x75a
  4383a8:	bl	43a794 <argp_usage@@Base+0x8b98>
  4383ac:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  4383b0:	ldr	x1, [x8, #1136]
  4383b4:	mov	w0, #0xa                   	// #10
  4383b8:	bl	404330 <fputc@plt>
  4383bc:	b	438298 <argp_usage@@Base+0x669c>
  4383c0:	sxtw	x8, w4
  4383c4:	stp	x1, x2, [x0, #72]
  4383c8:	stp	x3, x8, [x0, #88]
  4383cc:	ret
  4383d0:	tbz	x2, #63, 4383f0 <argp_usage@@Base+0x67f4>
  4383d4:	ldr	x8, [x1, #16]
  4383d8:	cmp	x8, #0x2
  4383dc:	b.gt	4383f0 <argp_usage@@Base+0x67f4>
  4383e0:	ldr	x8, [x1, #8]
  4383e4:	mov	w9, #0x64                  	// #100
  4383e8:	mul	x8, x8, x9
  4383ec:	str	x8, [x1, #8]
  4383f0:	ldr	x8, [x1, #8]
  4383f4:	tbnz	x2, #63, 438418 <argp_usage@@Base+0x681c>
  4383f8:	tbnz	x8, #63, 438458 <argp_usage@@Base+0x685c>
  4383fc:	mov	x9, #0x2222222222222222    	// #2459565876494606882
  438400:	movk	x9, #0x2223
  438404:	movk	x9, #0x222, lsl #48
  438408:	cmp	x8, x9
  43840c:	b.lt	43846c <argp_usage@@Base+0x6870>  // b.tstop
  438410:	mov	w10, #0x1                   	// #1
  438414:	b	438470 <argp_usage@@Base+0x6874>
  438418:	mov	x9, #0xd70b                	// #55051
  43841c:	movk	x9, #0x70a3, lsl #16
  438420:	movk	x9, #0xa3d, lsl #32
  438424:	movk	x9, #0xa3d7, lsl #48
  438428:	smulh	x9, x8, x9
  43842c:	add	x9, x9, x8
  438430:	asr	x12, x9, #6
  438434:	mov	w11, #0x64                  	// #100
  438438:	add	x9, x12, x9, lsr #63
  43843c:	mov	w10, #0x3c                  	// #60
  438440:	msub	x8, x9, x11, x8
  438444:	madd	x9, x9, x10, x8
  438448:	mov	w10, #0x1                   	// #1
  43844c:	mov	w8, wzr
  438450:	cbnz	w10, 4384b8 <argp_usage@@Base+0x68bc>
  438454:	b	4384dc <argp_usage@@Base+0x68e0>
  438458:	mov	x9, #0xdddddddddddddddd    	// #-2459565876494606883
  43845c:	movk	x9, #0xddde
  438460:	movk	x9, #0xfddd, lsl #48
  438464:	cmp	x8, x9
  438468:	b.lt	438410 <argp_usage@@Base+0x6814>  // b.tstop
  43846c:	mov	w10, wzr
  438470:	ldrb	w11, [x1]
  438474:	mov	w9, #0x3c                  	// #60
  438478:	mul	x9, x8, x9
  43847c:	cbz	w11, 438494 <argp_usage@@Base+0x6898>
  438480:	orr	x8, x2, #0x8000000000000000
  438484:	cmp	x9, x8
  438488:	cset	w8, lt  // lt = tstop
  43848c:	sub	x9, x9, x2
  438490:	b	4384a8 <argp_usage@@Base+0x68ac>
  438494:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  438498:	sub	x8, x8, x2
  43849c:	cmp	x8, x9
  4384a0:	cset	w8, lt  // lt = tstop
  4384a4:	add	x9, x9, x2
  4384a8:	orr	w8, w10, w8
  4384ac:	eor	w10, w8, #0x1
  4384b0:	mov	w8, wzr
  4384b4:	cbz	w10, 4384dc <argp_usage@@Base+0x68e0>
  4384b8:	add	x10, x9, #0x5a0
  4384bc:	cmp	x10, #0xb40
  4384c0:	b.hi	4384dc <argp_usage@@Base+0x68e0>  // b.pmore
  4384c4:	mov	w8, #0x3c                  	// #60
  4384c8:	mul	w8, w9, w8
  4384cc:	str	w8, [x0, #24]
  4384d0:	mov	w8, #0x1                   	// #1
  4384d4:	mov	w0, w8
  4384d8:	ret
  4384dc:	mov	w0, w8
  4384e0:	ret
  4384e4:	ldr	w8, [x1, #48]
  4384e8:	tbnz	w2, #31, 43850c <argp_usage@@Base+0x6910>
  4384ec:	tbnz	w8, #31, 438528 <argp_usage@@Base+0x692c>
  4384f0:	ldr	w9, [x0, #152]
  4384f4:	mov	w10, #0x7fffffff            	// #2147483647
  4384f8:	sub	w10, w10, w8
  4384fc:	cmp	w10, w9
  438500:	b.ge	43853c <argp_usage@@Base+0x6940>  // b.tcont
  438504:	mov	w9, #0x1                   	// #1
  438508:	b	438540 <argp_usage@@Base+0x6944>
  43850c:	tbnz	w8, #31, 438720 <argp_usage@@Base+0x6b24>
  438510:	ldr	w9, [x0, #152]
  438514:	orr	w10, w8, #0x80000000
  438518:	cmp	w9, w10
  43851c:	b.ge	438734 <argp_usage@@Base+0x6b38>  // b.tcont
  438520:	mov	w9, #0x1                   	// #1
  438524:	b	438738 <argp_usage@@Base+0x6b3c>
  438528:	ldr	w9, [x0, #152]
  43852c:	mov	w10, #0x80000000            	// #-2147483648
  438530:	sub	w10, w10, w8
  438534:	cmp	w9, w10
  438538:	b.lt	438504 <argp_usage@@Base+0x6908>  // b.tstop
  43853c:	mov	w9, wzr
  438540:	ldr	w10, [x0, #152]
  438544:	add	w8, w10, w8
  438548:	str	w8, [x0, #152]
  43854c:	ldr	x8, [x1, #40]
  438550:	tbnz	x8, #63, 438570 <argp_usage@@Base+0x6974>
  438554:	ldr	x10, [x0, #144]
  438558:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  43855c:	sub	x11, x11, x8
  438560:	cmp	x11, x10
  438564:	b.ge	438584 <argp_usage@@Base+0x6988>  // b.tcont
  438568:	mov	w11, #0x1                   	// #1
  43856c:	b	438588 <argp_usage@@Base+0x698c>
  438570:	ldr	x10, [x0, #144]
  438574:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  438578:	sub	x11, x11, x8
  43857c:	cmp	x10, x11
  438580:	b.lt	438568 <argp_usage@@Base+0x696c>  // b.tstop
  438584:	mov	w11, wzr
  438588:	ldr	x10, [x0, #144]
  43858c:	add	x8, x10, x8
  438590:	str	x8, [x0, #144]
  438594:	ldr	x10, [x1, #32]
  438598:	orr	w8, w11, w9
  43859c:	tbnz	x10, #63, 4385bc <argp_usage@@Base+0x69c0>
  4385a0:	ldr	x9, [x0, #136]
  4385a4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4385a8:	sub	x11, x11, x10
  4385ac:	cmp	x11, x9
  4385b0:	b.ge	4385d0 <argp_usage@@Base+0x69d4>  // b.tcont
  4385b4:	mov	w11, #0x1                   	// #1
  4385b8:	b	4385d4 <argp_usage@@Base+0x69d8>
  4385bc:	ldr	x9, [x0, #136]
  4385c0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4385c4:	sub	x11, x11, x10
  4385c8:	cmp	x9, x11
  4385cc:	b.lt	4385b4 <argp_usage@@Base+0x69b8>  // b.tstop
  4385d0:	mov	w11, wzr
  4385d4:	ldr	x9, [x0, #136]
  4385d8:	orr	w8, w8, w11
  4385dc:	add	x9, x9, x10
  4385e0:	str	x9, [x0, #136]
  4385e4:	ldr	x9, [x1, #24]
  4385e8:	tbnz	x9, #63, 438608 <argp_usage@@Base+0x6a0c>
  4385ec:	ldr	x10, [x0, #128]
  4385f0:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4385f4:	sub	x11, x11, x9
  4385f8:	cmp	x11, x10
  4385fc:	b.ge	43861c <argp_usage@@Base+0x6a20>  // b.tcont
  438600:	mov	w10, #0x1                   	// #1
  438604:	b	438620 <argp_usage@@Base+0x6a24>
  438608:	ldr	x10, [x0, #128]
  43860c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  438610:	sub	x11, x11, x9
  438614:	cmp	x10, x11
  438618:	b.lt	438600 <argp_usage@@Base+0x6a04>  // b.tstop
  43861c:	mov	w10, wzr
  438620:	ldr	x11, [x0, #128]
  438624:	orr	w8, w8, w10
  438628:	add	x9, x11, x9
  43862c:	str	x9, [x0, #128]
  438630:	ldr	x9, [x1, #16]
  438634:	tbnz	x9, #63, 438654 <argp_usage@@Base+0x6a58>
  438638:	ldr	x10, [x0, #120]
  43863c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  438640:	sub	x11, x11, x9
  438644:	cmp	x11, x10
  438648:	b.ge	438668 <argp_usage@@Base+0x6a6c>  // b.tcont
  43864c:	mov	w10, #0x1                   	// #1
  438650:	b	43866c <argp_usage@@Base+0x6a70>
  438654:	ldr	x10, [x0, #120]
  438658:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  43865c:	sub	x11, x11, x9
  438660:	cmp	x10, x11
  438664:	b.lt	43864c <argp_usage@@Base+0x6a50>  // b.tstop
  438668:	mov	w10, wzr
  43866c:	ldr	x11, [x0, #120]
  438670:	orr	w8, w8, w10
  438674:	add	x9, x11, x9
  438678:	str	x9, [x0, #120]
  43867c:	ldr	x9, [x1, #8]
  438680:	tbnz	x9, #63, 4386a0 <argp_usage@@Base+0x6aa4>
  438684:	ldr	x10, [x0, #112]
  438688:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  43868c:	sub	x11, x11, x9
  438690:	cmp	x11, x10
  438694:	b.ge	4386b4 <argp_usage@@Base+0x6ab8>  // b.tcont
  438698:	mov	w10, #0x1                   	// #1
  43869c:	b	4386b8 <argp_usage@@Base+0x6abc>
  4386a0:	ldr	x10, [x0, #112]
  4386a4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4386a8:	sub	x11, x11, x9
  4386ac:	cmp	x10, x11
  4386b0:	b.lt	438698 <argp_usage@@Base+0x6a9c>  // b.tstop
  4386b4:	mov	w10, wzr
  4386b8:	ldr	x11, [x0, #112]
  4386bc:	orr	w8, w8, w10
  4386c0:	add	x9, x11, x9
  4386c4:	str	x9, [x0, #112]
  4386c8:	ldr	x9, [x1]
  4386cc:	tbnz	x9, #63, 4386ec <argp_usage@@Base+0x6af0>
  4386d0:	ldr	x10, [x0, #104]
  4386d4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4386d8:	sub	x11, x11, x9
  4386dc:	cmp	x11, x10
  4386e0:	b.ge	438700 <argp_usage@@Base+0x6b04>  // b.tcont
  4386e4:	mov	w10, #0x1                   	// #1
  4386e8:	b	438704 <argp_usage@@Base+0x6b08>
  4386ec:	ldr	x10, [x0, #104]
  4386f0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4386f4:	sub	x11, x11, x9
  4386f8:	cmp	x10, x11
  4386fc:	b.lt	4386e4 <argp_usage@@Base+0x6ae8>  // b.tstop
  438700:	mov	w10, wzr
  438704:	ldr	x11, [x0, #104]
  438708:	orr	w8, w8, w10
  43870c:	add	x9, x11, x9
  438710:	str	x9, [x0, #104]
  438714:	cbz	w8, 438900 <argp_usage@@Base+0x6d04>
  438718:	mov	w0, wzr
  43871c:	ret
  438720:	ldr	w9, [x0, #152]
  438724:	mov	w10, #0x7fffffff            	// #2147483647
  438728:	add	w10, w8, w10
  43872c:	cmp	w10, w9
  438730:	b.lt	438520 <argp_usage@@Base+0x6924>  // b.tstop
  438734:	mov	w9, wzr
  438738:	ldr	w10, [x0, #152]
  43873c:	sub	w8, w10, w8
  438740:	str	w8, [x0, #152]
  438744:	ldr	x8, [x1, #40]
  438748:	tbnz	x8, #63, 438764 <argp_usage@@Base+0x6b68>
  43874c:	ldr	x10, [x0, #144]
  438750:	orr	x11, x8, #0x8000000000000000
  438754:	cmp	x10, x11
  438758:	b.ge	438778 <argp_usage@@Base+0x6b7c>  // b.tcont
  43875c:	mov	w11, #0x1                   	// #1
  438760:	b	43877c <argp_usage@@Base+0x6b80>
  438764:	ldr	x10, [x0, #144]
  438768:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  43876c:	add	x11, x8, x11
  438770:	cmp	x11, x10
  438774:	b.lt	43875c <argp_usage@@Base+0x6b60>  // b.tstop
  438778:	mov	w11, wzr
  43877c:	ldr	x10, [x0, #144]
  438780:	sub	x8, x10, x8
  438784:	str	x8, [x0, #144]
  438788:	ldr	x10, [x1, #32]
  43878c:	orr	w8, w11, w9
  438790:	tbnz	x10, #63, 4387ac <argp_usage@@Base+0x6bb0>
  438794:	ldr	x9, [x0, #136]
  438798:	orr	x11, x10, #0x8000000000000000
  43879c:	cmp	x9, x11
  4387a0:	b.ge	4387c0 <argp_usage@@Base+0x6bc4>  // b.tcont
  4387a4:	mov	w11, #0x1                   	// #1
  4387a8:	b	4387c4 <argp_usage@@Base+0x6bc8>
  4387ac:	ldr	x9, [x0, #136]
  4387b0:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4387b4:	add	x11, x10, x11
  4387b8:	cmp	x11, x9
  4387bc:	b.lt	4387a4 <argp_usage@@Base+0x6ba8>  // b.tstop
  4387c0:	mov	w11, wzr
  4387c4:	ldr	x9, [x0, #136]
  4387c8:	orr	w8, w8, w11
  4387cc:	sub	x9, x9, x10
  4387d0:	str	x9, [x0, #136]
  4387d4:	ldr	x9, [x1, #24]
  4387d8:	tbnz	x9, #63, 4387f4 <argp_usage@@Base+0x6bf8>
  4387dc:	ldr	x10, [x0, #128]
  4387e0:	orr	x11, x9, #0x8000000000000000
  4387e4:	cmp	x10, x11
  4387e8:	b.ge	438808 <argp_usage@@Base+0x6c0c>  // b.tcont
  4387ec:	mov	w10, #0x1                   	// #1
  4387f0:	b	43880c <argp_usage@@Base+0x6c10>
  4387f4:	ldr	x10, [x0, #128]
  4387f8:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4387fc:	add	x11, x9, x11
  438800:	cmp	x11, x10
  438804:	b.lt	4387ec <argp_usage@@Base+0x6bf0>  // b.tstop
  438808:	mov	w10, wzr
  43880c:	ldr	x11, [x0, #128]
  438810:	orr	w8, w8, w10
  438814:	sub	x9, x11, x9
  438818:	str	x9, [x0, #128]
  43881c:	ldr	x9, [x1, #16]
  438820:	tbnz	x9, #63, 43883c <argp_usage@@Base+0x6c40>
  438824:	ldr	x10, [x0, #120]
  438828:	orr	x11, x9, #0x8000000000000000
  43882c:	cmp	x10, x11
  438830:	b.ge	438850 <argp_usage@@Base+0x6c54>  // b.tcont
  438834:	mov	w10, #0x1                   	// #1
  438838:	b	438854 <argp_usage@@Base+0x6c58>
  43883c:	ldr	x10, [x0, #120]
  438840:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  438844:	add	x11, x9, x11
  438848:	cmp	x11, x10
  43884c:	b.lt	438834 <argp_usage@@Base+0x6c38>  // b.tstop
  438850:	mov	w10, wzr
  438854:	ldr	x11, [x0, #120]
  438858:	orr	w8, w8, w10
  43885c:	sub	x9, x11, x9
  438860:	str	x9, [x0, #120]
  438864:	ldr	x9, [x1, #8]
  438868:	tbnz	x9, #63, 438884 <argp_usage@@Base+0x6c88>
  43886c:	ldr	x10, [x0, #112]
  438870:	orr	x11, x9, #0x8000000000000000
  438874:	cmp	x10, x11
  438878:	b.ge	438898 <argp_usage@@Base+0x6c9c>  // b.tcont
  43887c:	mov	w10, #0x1                   	// #1
  438880:	b	43889c <argp_usage@@Base+0x6ca0>
  438884:	ldr	x10, [x0, #112]
  438888:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  43888c:	add	x11, x9, x11
  438890:	cmp	x11, x10
  438894:	b.lt	43887c <argp_usage@@Base+0x6c80>  // b.tstop
  438898:	mov	w10, wzr
  43889c:	ldr	x11, [x0, #112]
  4388a0:	orr	w8, w8, w10
  4388a4:	sub	x9, x11, x9
  4388a8:	str	x9, [x0, #112]
  4388ac:	ldr	x9, [x1]
  4388b0:	tbnz	x9, #63, 4388cc <argp_usage@@Base+0x6cd0>
  4388b4:	ldr	x10, [x0, #104]
  4388b8:	orr	x11, x9, #0x8000000000000000
  4388bc:	cmp	x10, x11
  4388c0:	b.ge	4388e0 <argp_usage@@Base+0x6ce4>  // b.tcont
  4388c4:	mov	w10, #0x1                   	// #1
  4388c8:	b	4388e4 <argp_usage@@Base+0x6ce8>
  4388cc:	ldr	x10, [x0, #104]
  4388d0:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4388d4:	add	x11, x9, x11
  4388d8:	cmp	x11, x10
  4388dc:	b.lt	4388c4 <argp_usage@@Base+0x6cc8>  // b.tstop
  4388e0:	mov	w10, wzr
  4388e4:	ldr	x11, [x0, #104]
  4388e8:	orr	w8, w8, w10
  4388ec:	sub	x9, x11, x9
  4388f0:	str	x9, [x0, #104]
  4388f4:	cbz	w8, 438900 <argp_usage@@Base+0x6d04>
  4388f8:	mov	w0, wzr
  4388fc:	ret
  438900:	mov	w8, #0x1                   	// #1
  438904:	strb	w8, [x0, #161]
  438908:	mov	w0, w8
  43890c:	ret
  438910:	sub	sp, sp, #0x130
  438914:	stp	x29, x30, [sp, #256]
  438918:	stp	x20, x19, [sp, #288]
  43891c:	add	x29, sp, #0x100
  438920:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  438924:	stp	x3, x4, [x29, #-104]
  438928:	ldr	x3, [x20, #1136]
  43892c:	mov	x19, x0
  438930:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438934:	stp	x1, x2, [x29, #-120]
  438938:	add	x0, x0, #0x76f
  43893c:	mov	w1, #0x6                   	// #6
  438940:	mov	w2, #0x1                   	// #1
  438944:	str	x28, [sp, #272]
  438948:	stp	x5, x6, [x29, #-88]
  43894c:	stur	x7, [x29, #-72]
  438950:	stp	q0, q1, [sp]
  438954:	stp	q2, q3, [sp, #32]
  438958:	stp	q4, q5, [sp, #64]
  43895c:	stp	q6, q7, [sp, #96]
  438960:	bl	404ab0 <fwrite@plt>
  438964:	sub	x9, x29, #0x78
  438968:	mov	x10, sp
  43896c:	mov	x11, #0xffffffffffffffc8    	// #-56
  438970:	add	x8, x29, #0x30
  438974:	movk	x11, #0xff80, lsl #32
  438978:	add	x9, x9, #0x38
  43897c:	add	x10, x10, #0x80
  438980:	stp	x8, x9, [x29, #-64]
  438984:	stp	x10, x11, [x29, #-48]
  438988:	ldp	q0, q1, [x29, #-64]
  43898c:	ldr	x0, [x20, #1136]
  438990:	sub	x3, x29, #0x20
  438994:	mov	w1, #0x1                   	// #1
  438998:	mov	x2, x19
  43899c:	stp	q0, q1, [x29, #-32]
  4389a0:	bl	404690 <__vfprintf_chk@plt>
  4389a4:	ldp	x20, x19, [sp, #288]
  4389a8:	ldr	x28, [sp, #272]
  4389ac:	ldp	x29, x30, [sp, #256]
  4389b0:	add	sp, sp, #0x130
  4389b4:	ret
  4389b8:	ldr	x9, [x0, #168]
  4389bc:	cbz	x9, 4389d0 <argp_usage@@Base+0x6dd4>
  4389c0:	ldr	x8, [x0, #48]
  4389c4:	cbnz	x8, 4389d0 <argp_usage@@Base+0x6dd4>
  4389c8:	ldrb	w8, [x0, #161]
  4389cc:	cbz	w8, 438ab4 <argp_usage@@Base+0x6eb8>
  4389d0:	ldr	x8, [x1, #16]
  4389d4:	cmp	x8, #0x5
  4389d8:	b.lt	438a50 <argp_usage@@Base+0x6e54>  // b.tstop
  4389dc:	add	x9, x9, #0x1
  4389e0:	str	x9, [x0, #168]
  4389e4:	ldr	x9, [x1, #8]
  4389e8:	mov	x10, #0xd70b                	// #55051
  4389ec:	mov	x11, #0x594b                	// #22859
  4389f0:	movk	x10, #0x70a3, lsl #16
  4389f4:	movk	x11, #0x3886, lsl #16
  4389f8:	movk	x10, #0xa3d, lsl #32
  4389fc:	movk	x11, #0xc5d6, lsl #32
  438a00:	movk	x10, #0xa3d7, lsl #48
  438a04:	movk	x11, #0x346d, lsl #48
  438a08:	smulh	x12, x9, x10
  438a0c:	smulh	x11, x9, x11
  438a10:	add	x12, x12, x9
  438a14:	asr	x13, x11, #11
  438a18:	add	x11, x13, x11, lsr #63
  438a1c:	asr	x13, x12, #6
  438a20:	add	x12, x13, x12, lsr #63
  438a24:	smulh	x10, x12, x10
  438a28:	add	x10, x10, x12
  438a2c:	asr	x13, x10, #6
  438a30:	add	x10, x13, x10, lsr #63
  438a34:	mov	w13, #0x64                  	// #100
  438a38:	sub	x8, x8, #0x4
  438a3c:	msub	x9, x12, x13, x9
  438a40:	msub	x10, x10, x13, x12
  438a44:	stp	x10, x9, [x0, #56]
  438a48:	stp	x11, x8, [x0, #40]
  438a4c:	ret
  438a50:	ldr	x9, [x0, #200]
  438a54:	cmp	x8, #0x2
  438a58:	add	x9, x9, #0x1
  438a5c:	str	x9, [x0, #200]
  438a60:	ldr	x9, [x1, #8]
  438a64:	b.gt	438a74 <argp_usage@@Base+0x6e78>
  438a68:	mov	x8, xzr
  438a6c:	str	x9, [x0, #72]
  438a70:	b	438aa0 <argp_usage@@Base+0x6ea4>
  438a74:	mov	x8, #0xd70b                	// #55051
  438a78:	movk	x8, #0x70a3, lsl #16
  438a7c:	movk	x8, #0xa3d, lsl #32
  438a80:	movk	x8, #0xa3d7, lsl #48
  438a84:	smulh	x8, x9, x8
  438a88:	add	x8, x8, x9
  438a8c:	asr	x11, x8, #6
  438a90:	mov	w10, #0x64                  	// #100
  438a94:	add	x8, x11, x8, lsr #63
  438a98:	str	x8, [x0, #72]
  438a9c:	msub	x8, x8, x10, x9
  438aa0:	str	x8, [x0, #80]
  438aa4:	mov	w8, #0x2                   	// #2
  438aa8:	stp	xzr, xzr, [x0, #88]
  438aac:	str	w8, [x0, #28]
  438ab0:	ret
  438ab4:	ldr	x8, [x0, #200]
  438ab8:	cbnz	x8, 438ac8 <argp_usage@@Base+0x6ecc>
  438abc:	ldr	x8, [x1, #16]
  438ac0:	cmp	x8, #0x3
  438ac4:	b.lt	4389d0 <argp_usage@@Base+0x6dd4>  // b.tstop
  438ac8:	mov	w8, #0x1                   	// #1
  438acc:	strb	w8, [x0, #216]
  438ad0:	ldr	x8, [x1, #16]
  438ad4:	ldr	q0, [x1]
  438ad8:	str	x8, [x0, #48]
  438adc:	str	q0, [x0, #32]
  438ae0:	ret
  438ae4:	stp	x29, x30, [sp, #-64]!
  438ae8:	stp	x22, x21, [sp, #32]
  438aec:	mov	x21, x0
  438af0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x19da0>
  438af4:	add	x0, x0, #0xf22
  438af8:	str	x23, [sp, #16]
  438afc:	stp	x20, x19, [sp, #48]
  438b00:	mov	x29, sp
  438b04:	mov	x19, x2
  438b08:	mov	x20, x1
  438b0c:	bl	404d30 <getenv@plt>
  438b10:	mov	x23, x0
  438b14:	bl	44af00 <_obstack_memory_used@@Base+0xcca0>
  438b18:	cbz	x0, 438b4c <argp_usage@@Base+0x6f50>
  438b1c:	mov	x22, x0
  438b20:	mov	x0, x21
  438b24:	mov	x1, x20
  438b28:	mov	x2, x19
  438b2c:	mov	w3, wzr
  438b30:	mov	x4, x22
  438b34:	mov	x5, x23
  438b38:	bl	438b68 <argp_usage@@Base+0x6f6c>
  438b3c:	mov	w19, w0
  438b40:	mov	x0, x22
  438b44:	bl	44afb0 <_obstack_memory_used@@Base+0xcd50>
  438b48:	b	438b50 <argp_usage@@Base+0x6f54>
  438b4c:	mov	w19, wzr
  438b50:	and	w0, w19, #0x1
  438b54:	ldp	x20, x19, [sp, #48]
  438b58:	ldp	x22, x21, [sp, #32]
  438b5c:	ldr	x23, [sp, #16]
  438b60:	ldp	x29, x30, [sp], #64
  438b64:	ret
  438b68:	stp	x29, x30, [sp, #-96]!
  438b6c:	stp	x28, x27, [sp, #16]
  438b70:	stp	x26, x25, [sp, #32]
  438b74:	stp	x24, x23, [sp, #48]
  438b78:	stp	x22, x21, [sp, #64]
  438b7c:	stp	x20, x19, [sp, #80]
  438b80:	mov	x29, sp
  438b84:	sub	sp, sp, #0x3c0
  438b88:	stp	x5, x0, [sp, #8]
  438b8c:	mov	x0, x1
  438b90:	mov	x27, x4
  438b94:	mov	w24, w3
  438b98:	mov	x25, x2
  438b9c:	mov	x20, x1
  438ba0:	bl	404190 <strlen@plt>
  438ba4:	mov	x21, x0
  438ba8:	cbnz	x25, 438bb8 <argp_usage@@Base+0x6fbc>
  438bac:	add	x0, sp, #0x248
  438bb0:	add	x25, sp, #0x248
  438bb4:	bl	434c7c <argp_usage@@Base+0x3080>
  438bb8:	ldp	x28, x19, [x25]
  438bbc:	add	x22, sp, #0xc0
  438bc0:	add	x23, x20, x21
  438bc4:	add	x26, x20, #0x3
  438bc8:	ldurb	w0, [x26, #-3]
  438bcc:	bl	44c054 <_obstack_memory_used@@Base+0xddf4>
  438bd0:	add	x26, x26, #0x1
  438bd4:	tbnz	w0, #0, 438bc8 <argp_usage@@Base+0x6fcc>
  438bd8:	sub	x20, x26, #0x4
  438bdc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  438be0:	movi	v0.2d, #0x0
  438be4:	add	x1, x1, #0xf25
  438be8:	mov	w2, #0x4                   	// #4
  438bec:	mov	x0, x20
  438bf0:	str	xzr, [sp, #576]
  438bf4:	stp	q0, q0, [sp, #544]
  438bf8:	str	q0, [sp, #528]
  438bfc:	bl	4045a0 <strncmp@plt>
  438c00:	cbz	w0, 438dd8 <argp_usage@@Base+0x71dc>
  438c04:	mov	x8, xzr
  438c08:	str	xzr, [sp, #24]
  438c0c:	mov	x21, x27
  438c10:	add	x2, sp, #0x1d8
  438c14:	mov	x0, x21
  438c18:	mov	x1, x25
  438c1c:	bl	44afe0 <_obstack_memory_used@@Base+0xcd80>
  438c20:	cbz	x0, 439260 <argp_usage@@Base+0x7664>
  438c24:	and	w10, w24, #0x1
  438c28:	ldrb	w8, [x20]
  438c2c:	strb	w10, [sp, #409]
  438c30:	mov	w10, #0x2                   	// #2
  438c34:	ldrsw	x12, [sp, #480]
  438c38:	str	w10, [sp, #220]
  438c3c:	ldrsw	x10, [sp, #476]
  438c40:	cmp	w8, #0x0
  438c44:	ldrsw	x8, [sp, #472]
  438c48:	ldrsw	x11, [sp, #484]
  438c4c:	stp	x12, x10, [sp, #264]
  438c50:	ldrsw	x10, [sp, #492]
  438c54:	ldrsw	x12, [sp, #488]
  438c58:	ldp	q0, q1, [sp, #528]
  438c5c:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  438c60:	add	x9, x9, #0xd4b
  438c64:	sxtw	x13, w19
  438c68:	add	x10, x10, #0x76c
  438c6c:	add	x12, x12, #0x1
  438c70:	stp	x8, x13, [sp, #280]
  438c74:	csel	x8, x9, x20, eq  // eq = none
  438c78:	stp	x10, xzr, [sp, #232]
  438c7c:	stp	x12, x11, [sp, #248]
  438c80:	str	x8, [sp, #192]
  438c84:	stur	q0, [x22, #104]
  438c88:	ldr	q0, [sp, #560]
  438c8c:	ldr	x10, [sp, #576]
  438c90:	ldr	w9, [sp, #504]
  438c94:	ldr	x11, [sp, #520]
  438c98:	stur	q0, [x22, #136]
  438c9c:	movi	v0.2d, #0x0
  438ca0:	mov	w19, #0xa700                	// #42752
  438ca4:	stur	q1, [x22, #120]
  438ca8:	add	x8, sp, #0xc0
  438cac:	mov	w20, #0x10d                 	// #269
  438cb0:	str	x10, [sp, #344]
  438cb4:	strh	wzr, [sp, #352]
  438cb8:	stur	q0, [x22, #168]
  438cbc:	stur	q0, [x22, #184]
  438cc0:	stur	q0, [x22, #200]
  438cc4:	strb	wzr, [sp, #408]
  438cc8:	stur	wzr, [x22, #218]
  438ccc:	stur	wzr, [x22, #221]
  438cd0:	mov	w22, #0xa700                	// #42752
  438cd4:	movk	w19, #0x76, lsl #16
  438cd8:	mov	w24, #0x3                   	// #3
  438cdc:	add	x25, x8, #0x58
  438ce0:	stur	w9, [x29, #-40]
  438ce4:	str	x11, [sp, #424]
  438ce8:	str	w20, [sp, #432]
  438cec:	str	w9, [sp, #436]
  438cf0:	str	xzr, [sp, #440]
  438cf4:	movk	w22, #0x76, lsl #16
  438cf8:	eor	x8, x22, #0x7fffffffffffffff
  438cfc:	cmp	x8, x28
  438d00:	b.ge	438d0c <argp_usage@@Base+0x7110>  // b.tcont
  438d04:	mov	w8, #0xd                   	// #13
  438d08:	b	438d44 <argp_usage@@Base+0x7148>
  438d0c:	add	x8, x28, x22
  438d10:	add	x1, sp, #0x58
  438d14:	sub	x2, x29, #0x100
  438d18:	mov	x0, x21
  438d1c:	str	x8, [sp, #88]
  438d20:	bl	44afe0 <_obstack_memory_used@@Base+0xcd80>
  438d24:	cbz	x0, 438d40 <argp_usage@@Base+0x7144>
  438d28:	ldur	x8, [x29, #-208]
  438d2c:	cbz	x8, 438d44 <argp_usage@@Base+0x7148>
  438d30:	ldur	w9, [x29, #-224]
  438d34:	ldr	w10, [sp, #436]
  438d38:	cmp	w9, w10
  438d3c:	b.ne	438d58 <argp_usage@@Base+0x715c>  // b.any
  438d40:	mov	w8, wzr
  438d44:	cbnz	w8, 438d6c <argp_usage@@Base+0x7170>
  438d48:	subs	x24, x24, #0x1
  438d4c:	add	x22, x22, x19
  438d50:	b.ne	438cf8 <argp_usage@@Base+0x70fc>  // b.any
  438d54:	b	438d6c <argp_usage@@Base+0x7170>
  438d58:	str	x8, [sp, #440]
  438d5c:	str	w20, [sp, #448]
  438d60:	str	w9, [sp, #452]
  438d64:	str	xzr, [sp, #456]
  438d68:	b	438d04 <argp_usage@@Base+0x7108>
  438d6c:	ldr	x0, [sp, #424]
  438d70:	cbz	x0, 438d90 <argp_usage@@Base+0x7194>
  438d74:	ldr	x1, [sp, #440]
  438d78:	cbz	x1, 438d90 <argp_usage@@Base+0x7194>
  438d7c:	bl	404920 <strcmp@plt>
  438d80:	cbnz	w0, 438d90 <argp_usage@@Base+0x7194>
  438d84:	mov	w8, #0xffffffff            	// #-1
  438d88:	str	w8, [sp, #436]
  438d8c:	str	xzr, [sp, #440]
  438d90:	add	x0, sp, #0xc0
  438d94:	bl	436fa8 <argp_usage@@Base+0x53ac>
  438d98:	ldrb	w8, [sp, #409]
  438d9c:	cbz	w0, 438e38 <argp_usage@@Base+0x723c>
  438da0:	cbz	w8, 439260 <argp_usage@@Base+0x7664>
  438da4:	ldr	x8, [sp, #192]
  438da8:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x19da0>
  438dac:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x19da0>
  438db0:	add	x9, x9, #0xf2a
  438db4:	add	x10, x10, #0xf41
  438db8:	cmp	x23, x8
  438dbc:	csel	x1, x10, x9, hi  // hi = pmore
  438dc0:	mov	w2, #0x5                   	// #5
  438dc4:	mov	x0, xzr
  438dc8:	bl	404bf0 <dcgettext@plt>
  438dcc:	ldr	x1, [sp, #192]
  438dd0:	bl	438910 <argp_usage@@Base+0x6d14>
  438dd4:	b	439260 <argp_usage@@Base+0x7664>
  438dd8:	mov	w0, #0x1                   	// #1
  438ddc:	mov	x8, x26
  438de0:	b	438dec <argp_usage@@Base+0x71f0>
  438de4:	add	x8, x8, #0x1
  438de8:	add	x0, x0, #0x1
  438dec:	ldrb	w9, [x8]
  438df0:	cmp	w9, #0x5c
  438df4:	b.eq	438e08 <argp_usage@@Base+0x720c>  // b.none
  438df8:	cbz	w9, 438e1c <argp_usage@@Base+0x7220>
  438dfc:	cmp	w9, #0x22
  438e00:	b.ne	438de4 <argp_usage@@Base+0x71e8>  // b.any
  438e04:	b	438e94 <argp_usage@@Base+0x7298>
  438e08:	ldrb	w9, [x8, #1]!
  438e0c:	cmp	w9, #0x22
  438e10:	b.eq	438de4 <argp_usage@@Base+0x71e8>  // b.none
  438e14:	cmp	w9, #0x5c
  438e18:	b.eq	438de4 <argp_usage@@Base+0x71e8>  // b.none
  438e1c:	str	xzr, [sp, #24]
  438e20:	mov	x21, x27
  438e24:	mov	w8, wzr
  438e28:	cmp	w8, #0x7
  438e2c:	b.eq	439260 <argp_usage@@Base+0x7664>  // b.none
  438e30:	cbz	w8, 438c10 <argp_usage@@Base+0x7014>
  438e34:	b	43927c <argp_usage@@Base+0x7680>
  438e38:	cbnz	w8, 43904c <argp_usage@@Base+0x7450>
  438e3c:	ldrb	w8, [sp, #352]
  438e40:	cbz	w8, 43913c <argp_usage@@Base+0x7540>
  438e44:	ldr	q0, [x25]
  438e48:	ldr	x8, [sp, #16]
  438e4c:	str	q0, [x8]
  438e50:	ldrb	w8, [sp, #409]
  438e54:	cbz	w8, 43903c <argp_usage@@Base+0x7440>
  438e58:	ldr	x19, [sp, #8]
  438e5c:	cbz	x19, 438f48 <argp_usage@@Base+0x734c>
  438e60:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  438e64:	add	x1, x1, #0xfc2
  438e68:	mov	x0, x19
  438e6c:	bl	404920 <strcmp@plt>
  438e70:	cbz	w0, 438f54 <argp_usage@@Base+0x7358>
  438e74:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438e78:	add	x1, x1, #0x61a
  438e7c:	mov	w2, #0x5                   	// #5
  438e80:	mov	x0, xzr
  438e84:	bl	404bf0 <dcgettext@plt>
  438e88:	mov	x1, x19
  438e8c:	bl	438910 <argp_usage@@Base+0x6d14>
  438e90:	b	438f6c <argp_usage@@Base+0x7370>
  438e94:	cmp	x0, #0x65
  438e98:	str	x27, [sp]
  438e9c:	b.cc	438eb8 <argp_usage@@Base+0x72bc>  // b.lo, b.ul, b.last
  438ea0:	bl	4044f0 <malloc@plt>
  438ea4:	mov	x27, x0
  438ea8:	mov	x8, x0
  438eac:	cbnz	x0, 438ec0 <argp_usage@@Base+0x72c4>
  438eb0:	str	xzr, [sp, #24]
  438eb4:	b	438f30 <argp_usage@@Base+0x7334>
  438eb8:	mov	x8, xzr
  438ebc:	add	x27, sp, #0x25c
  438ec0:	ldrb	w9, [x26]
  438ec4:	str	x8, [sp, #24]
  438ec8:	mov	x8, x27
  438ecc:	cmp	w9, #0x22
  438ed0:	b.eq	438ef4 <argp_usage@@Base+0x72f8>  // b.none
  438ed4:	and	w9, w9, #0xff
  438ed8:	cmp	w9, #0x5c
  438edc:	cinc	x26, x26, eq  // eq = none
  438ee0:	ldrb	w9, [x26]
  438ee4:	strb	w9, [x8], #1
  438ee8:	ldrb	w9, [x26, #1]!
  438eec:	cmp	w9, #0x22
  438ef0:	b.ne	438ed4 <argp_usage@@Base+0x72d8>  // b.any
  438ef4:	mov	x0, x27
  438ef8:	strb	wzr, [x8]
  438efc:	bl	44af00 <_obstack_memory_used@@Base+0xcca0>
  438f00:	cbz	x0, 438f30 <argp_usage@@Base+0x7334>
  438f04:	mov	x21, x0
  438f08:	ldrb	w0, [x26, #1]!
  438f0c:	bl	44c054 <_obstack_memory_used@@Base+0xddf4>
  438f10:	tbnz	w0, #0, 438f08 <argp_usage@@Base+0x730c>
  438f14:	str	x27, [sp, #8]
  438f18:	ldr	x27, [sp]
  438f1c:	mov	w8, #0x4                   	// #4
  438f20:	mov	x20, x26
  438f24:	cmp	w8, #0x4
  438f28:	b.ne	438e28 <argp_usage@@Base+0x722c>  // b.any
  438f2c:	b	438e24 <argp_usage@@Base+0x7228>
  438f30:	ldr	x27, [sp]
  438f34:	mov	w8, #0x7                   	// #7
  438f38:	mov	x21, x27
  438f3c:	cmp	w8, #0x4
  438f40:	b.eq	438e24 <argp_usage@@Base+0x7228>  // b.none
  438f44:	b	438e28 <argp_usage@@Base+0x722c>
  438f48:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438f4c:	add	x1, x1, #0x5e6
  438f50:	b	438f5c <argp_usage@@Base+0x7360>
  438f54:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438f58:	add	x1, x1, #0x600
  438f5c:	mov	w2, #0x5                   	// #5
  438f60:	mov	x0, xzr
  438f64:	bl	404bf0 <dcgettext@plt>
  438f68:	bl	438910 <argp_usage@@Base+0x6d14>
  438f6c:	ldr	x19, [sp, #16]
  438f70:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438f74:	add	x1, x1, #0x63f
  438f78:	mov	w2, #0x5                   	// #5
  438f7c:	ldr	x23, [x19]
  438f80:	ldr	w24, [x19, #8]
  438f84:	mov	x0, xzr
  438f88:	bl	404bf0 <dcgettext@plt>
  438f8c:	mov	x1, x23
  438f90:	mov	w2, w24
  438f94:	bl	438910 <argp_usage@@Base+0x6d14>
  438f98:	add	x1, sp, #0x58
  438f9c:	mov	x0, x19
  438fa0:	bl	404640 <gmtime_r@plt>
  438fa4:	cbz	x0, 438fdc <argp_usage@@Base+0x73e0>
  438fa8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438fac:	add	x1, x1, #0x660
  438fb0:	mov	w2, #0x5                   	// #5
  438fb4:	mov	x0, xzr
  438fb8:	bl	404bf0 <dcgettext@plt>
  438fbc:	mov	x23, x0
  438fc0:	add	x0, sp, #0x58
  438fc4:	sub	x2, x29, #0x100
  438fc8:	mov	x1, xzr
  438fcc:	bl	43a610 <argp_usage@@Base+0x8a14>
  438fd0:	mov	x1, x0
  438fd4:	mov	x0, x23
  438fd8:	bl	438910 <argp_usage@@Base+0x6d14>
  438fdc:	ldr	x1, [sp, #16]
  438fe0:	add	x2, sp, #0x20
  438fe4:	mov	x0, x21
  438fe8:	bl	44afe0 <_obstack_memory_used@@Base+0xcd80>
  438fec:	cbz	x0, 43903c <argp_usage@@Base+0x7440>
  438ff0:	ldr	w22, [sp, #72]
  438ff4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  438ff8:	add	x1, x1, #0x671
  438ffc:	mov	w2, #0x5                   	// #5
  439000:	mov	x0, xzr
  439004:	bl	404bf0 <dcgettext@plt>
  439008:	mov	x23, x0
  43900c:	add	x0, sp, #0x20
  439010:	sub	x2, x29, #0x100
  439014:	mov	x1, xzr
  439018:	bl	43a610 <argp_usage@@Base+0x8a14>
  43901c:	mov	x24, x0
  439020:	sub	x1, x29, #0x9c
  439024:	mov	w0, w22
  439028:	bl	439f70 <argp_usage@@Base+0x8374>
  43902c:	mov	x2, x0
  439030:	mov	x0, x23
  439034:	mov	x1, x24
  439038:	bl	438910 <argp_usage@@Base+0x6d14>
  43903c:	mov	w26, #0x1                   	// #1
  439040:	cmp	x21, x27
  439044:	b.ne	43926c <argp_usage@@Base+0x7670>  // b.any
  439048:	b	439274 <argp_usage@@Base+0x7678>
  43904c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  439050:	add	x1, x1, #0xf69
  439054:	mov	w2, #0x5                   	// #5
  439058:	mov	x0, xzr
  43905c:	bl	404bf0 <dcgettext@plt>
  439060:	bl	438910 <argp_usage@@Base+0x6d14>
  439064:	ldrb	w8, [sp, #352]
  439068:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43906c:	cbnz	w8, 439090 <argp_usage@@Base+0x7494>
  439070:	ldr	x8, [sp, #400]
  439074:	cbnz	x8, 4390a0 <argp_usage@@Base+0x74a4>
  439078:	ldr	x20, [sp, #8]
  43907c:	cbnz	x20, 439328 <argp_usage@@Base+0x772c>
  439080:	ldr	x24, [x19, #1136]
  439084:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439088:	add	x1, x1, #0x3
  43908c:	b	4390ac <argp_usage@@Base+0x74b0>
  439090:	ldr	x24, [x19, #1136]
  439094:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  439098:	add	x1, x1, #0xf7a
  43909c:	b	4390ac <argp_usage@@Base+0x74b0>
  4390a0:	ldr	x24, [x19, #1136]
  4390a4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  4390a8:	add	x1, x1, #0xf93
  4390ac:	mov	w2, #0x5                   	// #5
  4390b0:	mov	x0, xzr
  4390b4:	bl	404bf0 <dcgettext@plt>
  4390b8:	mov	x2, x0
  4390bc:	mov	w1, #0x1                   	// #1
  4390c0:	mov	x0, x24
  4390c4:	bl	404910 <__fprintf_chk@plt>
  4390c8:	ldr	x8, [sp, #376]
  4390cc:	cbz	x8, 4390f8 <argp_usage@@Base+0x74fc>
  4390d0:	ldr	x8, [sp, #400]
  4390d4:	cbnz	x8, 4390f8 <argp_usage@@Base+0x74fc>
  4390d8:	ldr	w8, [sp, #212]
  4390dc:	cmp	w8, #0x1
  4390e0:	b.lt	4390f8 <argp_usage@@Base+0x74fc>  // b.tstop
  4390e4:	ldr	x0, [x19, #1136]
  4390e8:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4390ec:	add	x2, x2, #0x12
  4390f0:	mov	w1, #0x1                   	// #1
  4390f4:	bl	404910 <__fprintf_chk@plt>
  4390f8:	ldr	x8, [sp, #400]
  4390fc:	cbz	x8, 439128 <argp_usage@@Base+0x752c>
  439100:	ldr	w0, [sp, #216]
  439104:	ldr	x24, [x19, #1136]
  439108:	sub	x1, x29, #0x9c
  43910c:	bl	439f70 <argp_usage@@Base+0x8374>
  439110:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439114:	mov	x3, x0
  439118:	add	x2, x2, #0x18
  43911c:	mov	w1, #0x1                   	// #1
  439120:	mov	x0, x24
  439124:	bl	404910 <__fprintf_chk@plt>
  439128:	ldr	x1, [x19, #1136]
  43912c:	mov	w0, #0xa                   	// #10
  439130:	bl	404330 <fputc@plt>
  439134:	ldrb	w8, [sp, #352]
  439138:	cbnz	w8, 438e44 <argp_usage@@Base+0x7248>
  43913c:	ldp	x9, x12, [sp, #360]
  439140:	ldp	x8, x11, [sp, #392]
  439144:	ldp	x10, x13, [sp, #376]
  439148:	orr	x9, x9, x8
  43914c:	orr	x9, x9, x12
  439150:	add	x10, x11, x10
  439154:	orr	x11, x9, x13
  439158:	ldrb	w9, [sp, #409]
  43915c:	orr	x10, x11, x10
  439160:	cmp	x10, #0x2
  439164:	b.lt	4391e8 <argp_usage@@Base+0x75ec>  // b.tstop
  439168:	cbz	w9, 439260 <argp_usage@@Base+0x7664>
  43916c:	cmp	x8, #0x2
  439170:	b.lt	439180 <argp_usage@@Base+0x7584>  // b.tstop
  439174:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439178:	add	x0, x0, #0x1e
  43917c:	bl	438910 <argp_usage@@Base+0x6d14>
  439180:	ldr	x8, [sp, #360]
  439184:	cmp	x8, #0x2
  439188:	b.lt	439198 <argp_usage@@Base+0x759c>  // b.tstop
  43918c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439190:	add	x0, x0, #0x3f
  439194:	bl	438910 <argp_usage@@Base+0x6d14>
  439198:	ldr	x8, [sp, #368]
  43919c:	cmp	x8, #0x2
  4391a0:	b.lt	4391b0 <argp_usage@@Base+0x75b4>  // b.tstop
  4391a4:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4391a8:	add	x0, x0, #0x60
  4391ac:	bl	438910 <argp_usage@@Base+0x6d14>
  4391b0:	ldr	x8, [sp, #384]
  4391b4:	cmp	x8, #0x2
  4391b8:	b.lt	4391c8 <argp_usage@@Base+0x75cc>  // b.tstop
  4391bc:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4391c0:	add	x0, x0, #0x81
  4391c4:	bl	438910 <argp_usage@@Base+0x6d14>
  4391c8:	ldr	x8, [sp, #376]
  4391cc:	ldr	x9, [sp, #400]
  4391d0:	add	x8, x9, x8
  4391d4:	cmp	x8, #0x2
  4391d8:	b.lt	439260 <argp_usage@@Base+0x7664>  // b.tstop
  4391dc:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4391e0:	add	x0, x0, #0xad
  4391e4:	b	43925c <argp_usage@@Base+0x7660>
  4391e8:	cmp	w9, #0x0
  4391ec:	ldr	q0, [sp, #224]
  4391f0:	ldr	x9, [sp, #240]
  4391f4:	sub	x8, x29, #0x48
  4391f8:	cset	w1, ne  // ne = any
  4391fc:	add	x2, x8, #0x14
  439200:	sub	x0, x29, #0x100
  439204:	stur	q0, [x29, #-256]
  439208:	stur	x9, [x29, #-240]
  43920c:	bl	43a08c <argp_usage@@Base+0x8490>
  439210:	tbz	w0, #0, 439240 <argp_usage@@Base+0x7644>
  439214:	ldr	x8, [sp, #248]
  439218:	mov	w9, #0x7fffffff            	// #2147483647
  43921c:	add	x9, x8, x9
  439220:	sub	w8, w8, #0x1
  439224:	lsr	x9, x9, #32
  439228:	stur	w8, [x29, #-56]
  43922c:	cbnz	x9, 439240 <argp_usage@@Base+0x7644>
  439230:	ldr	x8, [sp, #256]
  439234:	cmp	x8, w8, sxtw
  439238:	stur	w8, [x29, #-60]
  43923c:	b.eq	4392a0 <argp_usage@@Base+0x76a4>  // b.none
  439240:	ldrb	w8, [sp, #409]
  439244:	cbz	w8, 439260 <argp_usage@@Base+0x7664>
  439248:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43924c:	add	x1, x1, #0xd3
  439250:	mov	w2, #0x5                   	// #5
  439254:	mov	x0, xzr
  439258:	bl	404bf0 <dcgettext@plt>
  43925c:	bl	438910 <argp_usage@@Base+0x6d14>
  439260:	mov	w26, wzr
  439264:	cmp	x21, x27
  439268:	b.eq	439274 <argp_usage@@Base+0x7678>  // b.none
  43926c:	mov	x0, x21
  439270:	bl	44afb0 <_obstack_memory_used@@Base+0xcd50>
  439274:	ldr	x0, [sp, #24]
  439278:	bl	4049d0 <free@plt>
  43927c:	and	w0, w26, #0x1
  439280:	add	sp, sp, #0x3c0
  439284:	ldp	x20, x19, [sp, #80]
  439288:	ldp	x22, x21, [sp, #64]
  43928c:	ldp	x24, x23, [sp, #48]
  439290:	ldp	x26, x25, [sp, #32]
  439294:	ldp	x28, x27, [sp, #16]
  439298:	ldp	x29, x30, [sp], #96
  43929c:	ret
  4392a0:	ldr	x19, [sp, #392]
  4392a4:	cbnz	x19, 4392bc <argp_usage@@Base+0x76c0>
  4392a8:	ldrb	w8, [sp, #353]
  4392ac:	cbz	w8, 4393a8 <argp_usage@@Base+0x77ac>
  4392b0:	ldp	x8, x9, [sp, #360]
  4392b4:	orr	x8, x9, x8
  4392b8:	cbnz	x8, 4393a8 <argp_usage@@Base+0x77ac>
  4392bc:	ldr	w24, [sp, #220]
  4392c0:	ldr	x0, [sp, #264]
  4392c4:	mov	w1, w24
  4392c8:	bl	43a168 <argp_usage@@Base+0x856c>
  4392cc:	stur	w0, [x29, #-64]
  4392d0:	tbnz	w0, #31, 439354 <argp_usage@@Base+0x7758>
  4392d4:	ldp	x8, x9, [sp, #272]
  4392d8:	ldrb	w10, [sp, #409]
  4392dc:	stp	w9, w8, [x29, #-72]
  4392e0:	cbz	w10, 4393c8 <argp_usage@@Base+0x77cc>
  4392e4:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4392e8:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4392ec:	add	x8, x8, #0x116
  4392f0:	add	x9, x9, #0x144
  4392f4:	cmp	x19, #0x0
  4392f8:	csel	x1, x9, x8, eq  // eq = none
  4392fc:	mov	w2, #0x5                   	// #5
  439300:	mov	x0, xzr
  439304:	bl	404bf0 <dcgettext@plt>
  439308:	mov	x24, x0
  43930c:	sub	x0, x29, #0x48
  439310:	sub	x1, x29, #0x100
  439314:	bl	43a1b4 <argp_usage@@Base+0x85b8>
  439318:	mov	x1, x0
  43931c:	mov	x0, x24
  439320:	bl	438910 <argp_usage@@Base+0x6d14>
  439324:	b	4393c8 <argp_usage@@Base+0x77cc>
  439328:	cmp	x21, x27
  43932c:	b.ne	4394dc <argp_usage@@Base+0x78e0>  // b.any
  439330:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  439334:	add	x1, x1, #0xfc2
  439338:	mov	x0, x20
  43933c:	bl	404920 <strcmp@plt>
  439340:	ldr	x24, [x19, #1136]
  439344:	cbnz	w0, 439610 <argp_usage@@Base+0x7a14>
  439348:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  43934c:	add	x1, x1, #0xfc7
  439350:	b	4390ac <argp_usage@@Base+0x74b0>
  439354:	ldrb	w8, [sp, #409]
  439358:	cbz	w8, 439260 <argp_usage@@Base+0x7664>
  43935c:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  439360:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439364:	add	x8, x8, #0xd3e
  439368:	add	x9, x9, #0xf8
  43936c:	cmp	w24, #0x1
  439370:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x16da0>
  439374:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439378:	add	x10, x10, #0x6b3
  43937c:	csel	x8, x9, x8, eq  // eq = none
  439380:	cmp	w24, #0x0
  439384:	add	x1, x1, #0xfb
  439388:	mov	w2, #0x5                   	// #5
  43938c:	mov	x0, xzr
  439390:	csel	x22, x10, x8, eq  // eq = none
  439394:	bl	404bf0 <dcgettext@plt>
  439398:	ldr	x1, [sp, #264]
  43939c:	mov	x2, x22
  4393a0:	bl	438910 <argp_usage@@Base+0x6d14>
  4393a4:	b	439260 <argp_usage@@Base+0x7664>
  4393a8:	ldrb	w8, [sp, #409]
  4393ac:	stur	xzr, [x29, #-72]
  4393b0:	stur	wzr, [x29, #-64]
  4393b4:	str	xzr, [sp, #288]
  4393b8:	cbz	w8, 4393c8 <argp_usage@@Base+0x77cc>
  4393bc:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4393c0:	add	x0, x0, #0x170
  4393c4:	bl	438910 <argp_usage@@Base+0x6d14>
  4393c8:	ldp	x8, x9, [sp, #360]
  4393cc:	ldr	x10, [sp, #392]
  4393d0:	orr	x8, x9, x8
  4393d4:	orr	x8, x8, x10
  4393d8:	cbz	x8, 4393e4 <argp_usage@@Base+0x77e8>
  4393dc:	mov	w8, #0xffffffff            	// #-1
  4393e0:	stur	w8, [x29, #-40]
  4393e4:	ldr	x8, [sp, #376]
  4393e8:	cbz	x8, 4393f4 <argp_usage@@Base+0x77f8>
  4393ec:	ldr	w8, [sp, #212]
  4393f0:	stur	w8, [x29, #-40]
  4393f4:	sub	x14, x29, #0x80
  4393f8:	ldur	x8, [x29, #-72]
  4393fc:	ldur	x9, [x14, #68]
  439400:	ldur	w10, [x29, #-64]
  439404:	ldur	w11, [x29, #-52]
  439408:	ldur	w12, [x29, #-40]
  43940c:	mov	w13, #0xffffffff            	// #-1
  439410:	sub	x1, x29, #0x48
  439414:	mov	x0, x21
  439418:	stur	x8, [x29, #-128]
  43941c:	stur	w10, [x29, #-120]
  439420:	stur	x9, [x14, #12]
  439424:	stur	w11, [x29, #-108]
  439428:	stur	w12, [x29, #-96]
  43942c:	stur	w13, [x29, #-48]
  439430:	bl	44b2a4 <_obstack_memory_used@@Base+0xd044>
  439434:	mov	x24, x0
  439438:	sub	x0, x29, #0x80
  43943c:	sub	x1, x29, #0x48
  439440:	bl	43a1f8 <argp_usage@@Base+0x85fc>
  439444:	tbnz	w0, #0, 439558 <argp_usage@@Base+0x795c>
  439448:	ldr	x19, [sp, #400]
  43944c:	cbz	x19, 4394ec <argp_usage@@Base+0x78f0>
  439450:	ldr	w0, [sp, #216]
  439454:	mov	w8, #0x58                  	// #88
  439458:	strb	w8, [sp, #90]
  43945c:	add	x8, sp, #0x58
  439460:	mov	w9, #0x5858                	// #22616
  439464:	orr	x1, x8, #0x3
  439468:	strh	w9, [sp, #88]
  43946c:	bl	439f70 <argp_usage@@Base+0x8374>
  439470:	add	x0, sp, #0x58
  439474:	bl	44af00 <_obstack_memory_used@@Base+0xcca0>
  439478:	cbz	x0, 4394f4 <argp_usage@@Base+0x78f8>
  43947c:	sub	x14, x29, #0x80
  439480:	ldur	x8, [x29, #-128]
  439484:	ldur	x9, [x14, #12]
  439488:	ldur	w10, [x29, #-120]
  43948c:	ldur	w11, [x29, #-108]
  439490:	ldur	w12, [x29, #-96]
  439494:	mov	w13, #0xffffffff            	// #-1
  439498:	sub	x1, x29, #0x48
  43949c:	mov	x26, x0
  4394a0:	stur	x8, [x29, #-72]
  4394a4:	stur	w10, [x29, #-64]
  4394a8:	stur	x9, [x14, #68]
  4394ac:	stur	w12, [x29, #-40]
  4394b0:	stp	w11, w13, [x29, #-52]
  4394b4:	bl	44b2a4 <_obstack_memory_used@@Base+0xd044>
  4394b8:	mov	x24, x0
  4394bc:	sub	x0, x29, #0x80
  4394c0:	sub	x1, x29, #0x48
  4394c4:	bl	43a1f8 <argp_usage@@Base+0x85fc>
  4394c8:	mov	w25, w0
  4394cc:	mov	x0, x26
  4394d0:	bl	44afb0 <_obstack_memory_used@@Base+0xcd50>
  4394d4:	mov	w8, wzr
  4394d8:	b	439520 <argp_usage@@Base+0x7924>
  4394dc:	ldr	x24, [x19, #1136]
  4394e0:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  4394e4:	add	x1, x1, #0xfab
  4394e8:	b	439618 <argp_usage@@Base+0x7a1c>
  4394ec:	mov	w25, wzr
  4394f0:	b	439524 <argp_usage@@Base+0x7928>
  4394f4:	ldrb	w8, [sp, #409]
  4394f8:	cbz	w8, 439518 <argp_usage@@Base+0x791c>
  4394fc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439500:	add	x1, x1, #0x1a4
  439504:	mov	w2, #0x5                   	// #5
  439508:	mov	x0, xzr
  43950c:	bl	404bf0 <dcgettext@plt>
  439510:	add	x1, sp, #0x58
  439514:	bl	438910 <argp_usage@@Base+0x6d14>
  439518:	mov	w25, wzr
  43951c:	mov	w8, #0x7                   	// #7
  439520:	cbnz	w8, 43954c <argp_usage@@Base+0x7950>
  439524:	tbz	w25, #0, 439530 <argp_usage@@Base+0x7934>
  439528:	mov	w8, wzr
  43952c:	b	43954c <argp_usage@@Base+0x7950>
  439530:	cmp	x19, #0x0
  439534:	cset	w3, ne  // ne = any
  439538:	sub	x0, x29, #0x80
  43953c:	sub	x1, x29, #0x48
  439540:	add	x2, sp, #0xc0
  439544:	bl	43a258 <argp_usage@@Base+0x865c>
  439548:	mov	w8, #0x7                   	// #7
  43954c:	cmp	w8, #0x7
  439550:	b.eq	439260 <argp_usage@@Base+0x7664>  // b.none
  439554:	cbnz	w8, 43927c <argp_usage@@Base+0x7680>
  439558:	ldr	x8, [sp, #368]
  43955c:	cbz	x8, 4397e4 <argp_usage@@Base+0x7be8>
  439560:	ldr	x8, [sp, #360]
  439564:	cbnz	x8, 4397e4 <argp_usage@@Base+0x7be8>
  439568:	ldr	x9, [sp, #200]
  43956c:	ldur	w8, [x29, #-48]
  439570:	ldr	w10, [sp, #208]
  439574:	cmp	x9, #0x0
  439578:	cset	w11, gt
  43957c:	subs	w8, w10, w8
  439580:	cset	w10, ne  // ne = any
  439584:	and	w10, w11, w10
  439588:	subs	x9, x9, x10
  43958c:	b.mi	4395ac <argp_usage@@Base+0x79b0>  // b.first
  439590:	mov	x10, #0x9249                	// #37449
  439594:	movk	x10, #0x4924, lsl #16
  439598:	movk	x10, #0x2492, lsl #32
  43959c:	movk	x10, #0x1249, lsl #48
  4395a0:	cmp	x9, x10
  4395a4:	b.gt	439608 <argp_usage@@Base+0x7a0c>
  4395a8:	b	4395c4 <argp_usage@@Base+0x79c8>
  4395ac:	mov	x10, #0x6db7                	// #28087
  4395b0:	movk	x10, #0xb6db, lsl #16
  4395b4:	movk	x10, #0xdb6d, lsl #32
  4395b8:	movk	x10, #0xedb6, lsl #48
  4395bc:	cmp	x9, x10
  4395c0:	b.lt	439608 <argp_usage@@Base+0x7a0c>  // b.tstop
  4395c4:	lsl	x10, x9, #3
  4395c8:	subs	x9, x10, x9
  4395cc:	b.mi	439644 <argp_usage@@Base+0x7a48>  // b.first
  4395d0:	mov	w12, #0x2493                	// #9363
  4395d4:	add	w11, w8, #0x7
  4395d8:	movk	w12, #0x9249, lsl #16
  4395dc:	smull	x12, w11, w12
  4395e0:	lsr	x12, x12, #32
  4395e4:	add	w12, w12, w11
  4395e8:	asr	w13, w12, #2
  4395ec:	add	w12, w13, w12, lsr #31
  4395f0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4395f4:	sub	w12, w12, w12, lsl #3
  4395f8:	sub	x10, x10, x9
  4395fc:	add	w11, w11, w12
  439600:	cmp	x10, w11, sxtw
  439604:	b.ge	43967c <argp_usage@@Base+0x7a80>  // b.tcont
  439608:	mov	x24, #0xffffffffffffffff    	// #-1
  43960c:	b	439718 <argp_usage@@Base+0x7b1c>
  439610:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x19da0>
  439614:	add	x1, x1, #0xfe9
  439618:	mov	w2, #0x5                   	// #5
  43961c:	mov	x0, xzr
  439620:	bl	404bf0 <dcgettext@plt>
  439624:	mov	x2, x0
  439628:	mov	w1, #0x1                   	// #1
  43962c:	mov	x0, x24
  439630:	mov	x3, x20
  439634:	bl	404910 <__fprintf_chk@plt>
  439638:	ldr	x8, [sp, #376]
  43963c:	cbnz	x8, 4390d0 <argp_usage@@Base+0x74d4>
  439640:	b	4390f8 <argp_usage@@Base+0x74fc>
  439644:	mov	w11, #0x2493                	// #9363
  439648:	add	w10, w8, #0x7
  43964c:	movk	w11, #0x9249, lsl #16
  439650:	smull	x11, w10, w11
  439654:	lsr	x11, x11, #32
  439658:	add	w11, w11, w10
  43965c:	asr	w13, w11, #2
  439660:	add	w11, w13, w11, lsr #31
  439664:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  439668:	sub	w11, w11, w11, lsl #3
  43966c:	add	w10, w10, w11
  439670:	sub	x11, x12, x9
  439674:	cmp	x11, w10, sxtw
  439678:	b.gt	439608 <argp_usage@@Base+0x7a0c>
  43967c:	add	w10, w8, #0x7
  439680:	mov	w8, #0x2493                	// #9363
  439684:	movk	w8, #0x9249, lsl #16
  439688:	smull	x8, w10, w8
  43968c:	lsr	x8, x8, #32
  439690:	add	w11, w8, w10
  439694:	asr	w12, w11, #2
  439698:	ldursw	x8, [x29, #-60]
  43969c:	add	w11, w12, w11, lsr #31
  4396a0:	sub	w11, w11, w11, lsl #3
  4396a4:	add	w10, w10, w11
  4396a8:	add	x9, x9, w10, sxtw
  4396ac:	tbnz	w8, #31, 4396c4 <argp_usage@@Base+0x7ac8>
  4396b0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4396b4:	sub	x10, x10, x8
  4396b8:	cmp	x10, x9
  4396bc:	b.ge	4396d4 <argp_usage@@Base+0x7ad8>  // b.tcont
  4396c0:	b	4396e8 <argp_usage@@Base+0x7aec>
  4396c4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4396c8:	sub	x10, x10, x8
  4396cc:	cmp	x9, x10
  4396d0:	b.lt	4396e8 <argp_usage@@Base+0x7aec>  // b.tstop
  4396d4:	add	x10, x9, x8
  4396d8:	mov	w11, #0x80000000            	// #-2147483648
  4396dc:	add	x10, x10, x11
  4396e0:	lsr	x10, x10, #32
  4396e4:	cbz	x10, 4396f8 <argp_usage@@Base+0x7afc>
  4396e8:	add	w8, w8, w9
  4396ec:	stur	w8, [x29, #-60]
  4396f0:	mov	x24, #0xffffffffffffffff    	// #-1
  4396f4:	b	439718 <argp_usage@@Base+0x7b1c>
  4396f8:	add	w8, w8, w9
  4396fc:	mov	w9, #0xffffffff            	// #-1
  439700:	sub	x1, x29, #0x48
  439704:	mov	x0, x21
  439708:	stur	w8, [x29, #-60]
  43970c:	stur	w9, [x29, #-40]
  439710:	bl	44b2a4 <_obstack_memory_used@@Base+0xd044>
  439714:	mov	x24, x0
  439718:	ldrb	w8, [sp, #409]
  43971c:	cmn	x24, #0x1
  439720:	b.eq	439778 <argp_usage@@Base+0x7b7c>  // b.none
  439724:	cbz	w8, 4397e0 <argp_usage@@Base+0x7be4>
  439728:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43972c:	add	x1, x1, #0x211
  439730:	mov	w2, #0x5                   	// #5
  439734:	mov	x0, xzr
  439738:	bl	404bf0 <dcgettext@plt>
  43973c:	mov	x25, x0
  439740:	add	x0, sp, #0xc0
  439744:	add	x1, sp, #0x58
  439748:	bl	43a530 <argp_usage@@Base+0x8934>
  43974c:	mov	x26, x0
  439750:	sub	x0, x29, #0x48
  439754:	add	x1, sp, #0xc0
  439758:	sub	x2, x29, #0x100
  43975c:	bl	43a610 <argp_usage@@Base+0x8a14>
  439760:	mov	x2, x0
  439764:	mov	x0, x25
  439768:	mov	x1, x26
  43976c:	bl	438910 <argp_usage@@Base+0x6d14>
  439770:	mov	w8, wzr
  439774:	b	4397e0 <argp_usage@@Base+0x7be4>
  439778:	cbz	w8, 4397dc <argp_usage@@Base+0x7be0>
  43977c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439780:	add	x1, x1, #0x1c2
  439784:	mov	w2, #0x5                   	// #5
  439788:	mov	x0, xzr
  43978c:	bl	404bf0 <dcgettext@plt>
  439790:	mov	x25, x0
  439794:	add	x0, sp, #0xc0
  439798:	add	x1, sp, #0x58
  43979c:	bl	43a530 <argp_usage@@Base+0x8934>
  4397a0:	ldr	x26, [sp, #200]
  4397a4:	mov	x19, x27
  4397a8:	ldr	w27, [sp, #208]
  4397ac:	mov	x28, x0
  4397b0:	sub	x0, x29, #0x48
  4397b4:	add	x1, sp, #0xc0
  4397b8:	sub	x2, x29, #0x100
  4397bc:	bl	43a610 <argp_usage@@Base+0x8a14>
  4397c0:	mov	x4, x0
  4397c4:	mov	x0, x25
  4397c8:	mov	x1, x28
  4397cc:	mov	x2, x26
  4397d0:	mov	w3, w27
  4397d4:	mov	x27, x19
  4397d8:	bl	438910 <argp_usage@@Base+0x6d14>
  4397dc:	mov	w8, #0x7                   	// #7
  4397e0:	cbnz	w8, 439e5c <argp_usage@@Base+0x8260>
  4397e4:	ldrb	w8, [sp, #409]
  4397e8:	cbz	w8, 43989c <argp_usage@@Base+0x7ca0>
  4397ec:	ldp	x8, x9, [sp, #360]
  4397f0:	orr	x8, x9, x8
  4397f4:	cbnz	x8, 439828 <argp_usage@@Base+0x7c2c>
  4397f8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4397fc:	add	x1, x1, #0x22f
  439800:	mov	w2, #0x5                   	// #5
  439804:	mov	x0, xzr
  439808:	bl	404bf0 <dcgettext@plt>
  43980c:	mov	x25, x0
  439810:	sub	x0, x29, #0x48
  439814:	sub	x1, x29, #0x100
  439818:	bl	43a6b8 <argp_usage@@Base+0x8abc>
  43981c:	mov	x1, x0
  439820:	mov	x0, x25
  439824:	bl	438910 <argp_usage@@Base+0x6d14>
  439828:	ldr	x8, [sp, #368]
  43982c:	cbz	x8, 439868 <argp_usage@@Base+0x7c6c>
  439830:	ldr	x8, [sp, #360]
  439834:	cbz	x8, 439868 <argp_usage@@Base+0x7c6c>
  439838:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43983c:	add	x1, x1, #0x25b
  439840:	mov	w2, #0x5                   	// #5
  439844:	mov	x0, xzr
  439848:	bl	404bf0 <dcgettext@plt>
  43984c:	mov	x25, x0
  439850:	add	x0, sp, #0xc0
  439854:	add	x1, sp, #0x58
  439858:	bl	43a530 <argp_usage@@Base+0x8934>
  43985c:	mov	x1, x0
  439860:	mov	x0, x25
  439864:	bl	438910 <argp_usage@@Base+0x6d14>
  439868:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43986c:	add	x1, x1, #0x294
  439870:	mov	w2, #0x5                   	// #5
  439874:	mov	x0, xzr
  439878:	bl	404bf0 <dcgettext@plt>
  43987c:	mov	x25, x0
  439880:	sub	x0, x29, #0x48
  439884:	add	x1, sp, #0xc0
  439888:	sub	x2, x29, #0x100
  43988c:	bl	43a610 <argp_usage@@Base+0x8a14>
  439890:	mov	x1, x0
  439894:	mov	x0, x25
  439898:	bl	438910 <argp_usage@@Base+0x6d14>
  43989c:	ldp	x8, x9, [sp, #296]
  4398a0:	ldr	x10, [sp, #312]
  4398a4:	orr	x11, x9, x8
  4398a8:	orr	x10, x11, x10
  4398ac:	cbz	x10, 439a34 <argp_usage@@Base+0x7e38>
  4398b0:	ldrb	w10, [sp, #409]
  4398b4:	cbz	w10, 439910 <argp_usage@@Base+0x7d14>
  4398b8:	orr	x8, x9, x8
  4398bc:	cbz	x8, 4398e4 <argp_usage@@Base+0x7ce8>
  4398c0:	ldur	w8, [x29, #-60]
  4398c4:	cmp	w8, #0xf
  4398c8:	b.eq	4398e4 <argp_usage@@Base+0x7ce8>  // b.none
  4398cc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4398d0:	add	x1, x1, #0x2ae
  4398d4:	mov	w2, #0x5                   	// #5
  4398d8:	mov	x0, xzr
  4398dc:	bl	404bf0 <dcgettext@plt>
  4398e0:	bl	438910 <argp_usage@@Base+0x6d14>
  4398e4:	ldr	x8, [sp, #312]
  4398e8:	cbz	x8, 439910 <argp_usage@@Base+0x7d14>
  4398ec:	ldur	w8, [x29, #-64]
  4398f0:	cmp	w8, #0xc
  4398f4:	b.eq	439910 <argp_usage@@Base+0x7d14>  // b.none
  4398f8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  4398fc:	add	x1, x1, #0x30f
  439900:	mov	w2, #0x5                   	// #5
  439904:	mov	x0, xzr
  439908:	bl	404bf0 <dcgettext@plt>
  43990c:	bl	438910 <argp_usage@@Base+0x6d14>
  439910:	ldr	x8, [sp, #296]
  439914:	tbnz	x8, #63, 439930 <argp_usage@@Base+0x7d34>
  439918:	ldursw	x9, [x29, #-52]
  43991c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  439920:	sub	x10, x10, x8
  439924:	cmp	x10, x9
  439928:	b.ge	439944 <argp_usage@@Base+0x7d48>  // b.tcont
  43992c:	b	439a00 <argp_usage@@Base+0x7e04>
  439930:	ldursw	x9, [x29, #-52]
  439934:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  439938:	sub	x10, x10, x8
  43993c:	cmp	x10, x9
  439940:	b.gt	439a00 <argp_usage@@Base+0x7e04>
  439944:	ldursw	x9, [x29, #-52]
  439948:	mov	w11, #0x80000000            	// #-2147483648
  43994c:	add	x10, x8, x9
  439950:	add	x10, x10, x11
  439954:	lsr	x10, x10, #32
  439958:	cbnz	x10, 439a00 <argp_usage@@Base+0x7e04>
  43995c:	ldr	x10, [sp, #304]
  439960:	tbnz	x10, #63, 43997c <argp_usage@@Base+0x7d80>
  439964:	ldursw	x11, [x29, #-56]
  439968:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  43996c:	sub	x12, x12, x10
  439970:	cmp	x12, x11
  439974:	b.ge	439990 <argp_usage@@Base+0x7d94>  // b.tcont
  439978:	b	439a00 <argp_usage@@Base+0x7e04>
  43997c:	ldursw	x11, [x29, #-56]
  439980:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  439984:	sub	x12, x12, x10
  439988:	cmp	x12, x11
  43998c:	b.gt	439a00 <argp_usage@@Base+0x7e04>
  439990:	ldursw	x11, [x29, #-56]
  439994:	mov	w13, #0x80000000            	// #-2147483648
  439998:	add	x12, x10, x11
  43999c:	add	x12, x12, x13
  4399a0:	lsr	x12, x12, #32
  4399a4:	cbnz	x12, 439a00 <argp_usage@@Base+0x7e04>
  4399a8:	ldr	x12, [sp, #312]
  4399ac:	mov	x20, x27
  4399b0:	tbnz	x12, #63, 4399d0 <argp_usage@@Base+0x7dd4>
  4399b4:	ldursw	x13, [x29, #-60]
  4399b8:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  4399bc:	sub	x14, x14, x12
  4399c0:	mov	x27, x20
  4399c4:	cmp	x14, x13
  4399c8:	b.ge	4399e8 <argp_usage@@Base+0x7dec>  // b.tcont
  4399cc:	b	439a00 <argp_usage@@Base+0x7e04>
  4399d0:	ldursw	x13, [x29, #-60]
  4399d4:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
  4399d8:	sub	x14, x14, x12
  4399dc:	mov	x27, x20
  4399e0:	cmp	x14, x13
  4399e4:	b.gt	439a00 <argp_usage@@Base+0x7e04>
  4399e8:	ldursw	x13, [x29, #-60]
  4399ec:	mov	w15, #0x80000000            	// #-2147483648
  4399f0:	add	x14, x12, x13
  4399f4:	add	x14, x14, x15
  4399f8:	lsr	x14, x14, #32
  4399fc:	cbz	x14, 439c14 <argp_usage@@Base+0x8018>
  439a00:	ldrb	w8, [sp, #409]
  439a04:	cbz	w8, 439a2c <argp_usage@@Base+0x7e30>
  439a08:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439a0c:	add	x1, x1, #0x356
  439a10:	mov	w2, #0x5                   	// #5
  439a14:	mov	x0, xzr
  439a18:	bl	404bf0 <dcgettext@plt>
  439a1c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439a20:	add	x1, x1, #0x364
  439a24:	mov	w2, #0x877                 	// #2167
  439a28:	bl	438910 <argp_usage@@Base+0x6d14>
  439a2c:	mov	w8, #0x7                   	// #7
  439a30:	cbnz	w8, 439e5c <argp_usage@@Base+0x8260>
  439a34:	ldr	x8, [sp, #400]
  439a38:	cbz	x8, 439adc <argp_usage@@Base+0x7ee0>
  439a3c:	ldur	x9, [x29, #-32]
  439a40:	ldrsw	x10, [sp, #216]
  439a44:	tbnz	x9, #63, 439a5c <argp_usage@@Base+0x7e60>
  439a48:	orr	x8, x9, #0x8000000000000000
  439a4c:	cmp	x8, x10
  439a50:	b.le	439a6c <argp_usage@@Base+0x7e70>
  439a54:	mov	w8, #0x1                   	// #1
  439a58:	b	439a70 <argp_usage@@Base+0x7e74>
  439a5c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  439a60:	add	x8, x9, x8
  439a64:	cmp	x8, x10
  439a68:	b.lt	439a54 <argp_usage@@Base+0x7e58>  // b.tstop
  439a6c:	mov	w8, wzr
  439a70:	subs	x9, x10, x9
  439a74:	b.mi	439a8c <argp_usage@@Base+0x7e90>  // b.first
  439a78:	orr	x10, x9, #0x8000000000000000
  439a7c:	cmp	x24, x10
  439a80:	b.ge	439a9c <argp_usage@@Base+0x7ea0>  // b.tcont
  439a84:	mov	w10, #0x1                   	// #1
  439a88:	b	439aa0 <argp_usage@@Base+0x7ea4>
  439a8c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  439a90:	add	x10, x9, x10
  439a94:	cmp	x10, x24
  439a98:	b.lt	439a84 <argp_usage@@Base+0x7e88>  // b.tstop
  439a9c:	mov	w10, wzr
  439aa0:	orr	w8, w10, w8
  439aa4:	cbz	w8, 439ad4 <argp_usage@@Base+0x7ed8>
  439aa8:	ldrb	w8, [sp, #409]
  439aac:	cbz	w8, 439acc <argp_usage@@Base+0x7ed0>
  439ab0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439ab4:	add	x1, x1, #0x4c9
  439ab8:	mov	w2, #0x5                   	// #5
  439abc:	mov	x0, xzr
  439ac0:	bl	404bf0 <dcgettext@plt>
  439ac4:	ldr	w1, [sp, #216]
  439ac8:	bl	438910 <argp_usage@@Base+0x6d14>
  439acc:	mov	w8, #0x7                   	// #7
  439ad0:	b	439ad8 <argp_usage@@Base+0x7edc>
  439ad4:	sub	x24, x24, x9
  439ad8:	cbnz	w8, 439e5c <argp_usage@@Base+0x8260>
  439adc:	ldrb	w8, [sp, #409]
  439ae0:	cbz	w8, 439b1c <argp_usage@@Base+0x7f20>
  439ae4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439ae8:	add	x1, x1, #0x4f4
  439aec:	mov	w2, #0x5                   	// #5
  439af0:	mov	x0, xzr
  439af4:	bl	404bf0 <dcgettext@plt>
  439af8:	mov	x25, x0
  439afc:	sub	x0, x29, #0x48
  439b00:	add	x1, sp, #0xc0
  439b04:	sub	x2, x29, #0x100
  439b08:	bl	43a610 <argp_usage@@Base+0x8a14>
  439b0c:	mov	x1, x0
  439b10:	mov	x0, x25
  439b14:	mov	x2, x24
  439b18:	bl	438910 <argp_usage@@Base+0x6d14>
  439b1c:	ldr	x11, [sp, #288]
  439b20:	ldr	x8, [sp, #320]
  439b24:	ldrsw	x9, [sp, #344]
  439b28:	tbnz	x8, #63, 439b48 <argp_usage@@Base+0x7f4c>
  439b2c:	mov	x10, #0x5e6f                	// #24175
  439b30:	movk	x10, #0x3c4d, lsl #16
  439b34:	movk	x10, #0x1a2b, lsl #32
  439b38:	movk	x10, #0x9, lsl #48
  439b3c:	cmp	x8, x10
  439b40:	b.le	439b60 <argp_usage@@Base+0x7f64>
  439b44:	b	439e38 <argp_usage@@Base+0x823c>
  439b48:	mov	x10, #0xa191                	// #41361
  439b4c:	movk	x10, #0xc3b2, lsl #16
  439b50:	movk	x10, #0xe5d4, lsl #32
  439b54:	movk	x10, #0xfff6, lsl #48
  439b58:	cmp	x8, x10
  439b5c:	b.lt	439e38 <argp_usage@@Base+0x823c>  // b.tstop
  439b60:	mov	w10, #0xe10                 	// #3600
  439b64:	mul	x12, x8, x10
  439b68:	tbnz	x12, #63, 439b80 <argp_usage@@Base+0x7f84>
  439b6c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  439b70:	sub	x10, x10, x12
  439b74:	cmp	x10, x24
  439b78:	b.ge	439b90 <argp_usage@@Base+0x7f94>  // b.tcont
  439b7c:	b	439e38 <argp_usage@@Base+0x823c>
  439b80:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  439b84:	sub	x10, x10, x12
  439b88:	cmp	x24, x10
  439b8c:	b.lt	439e38 <argp_usage@@Base+0x823c>  // b.tstop
  439b90:	ldr	x10, [sp, #328]
  439b94:	tbnz	x10, #63, 439bac <argp_usage@@Base+0x7fb0>
  439b98:	mov	x13, #0x2222222222222222    	// #2459565876494606882
  439b9c:	movk	x13, #0x222, lsl #48
  439ba0:	cmp	x10, x13
  439ba4:	b.le	439bc0 <argp_usage@@Base+0x7fc4>
  439ba8:	b	439e38 <argp_usage@@Base+0x823c>
  439bac:	mov	x13, #0xdddddddddddddddd    	// #-2459565876494606883
  439bb0:	movk	x13, #0xddde
  439bb4:	movk	x13, #0xfddd, lsl #48
  439bb8:	cmp	x10, x13
  439bbc:	b.lt	439e38 <argp_usage@@Base+0x823c>  // b.tstop
  439bc0:	mov	w13, #0x3c                  	// #60
  439bc4:	mov	x19, x27
  439bc8:	mul	x13, x10, x13
  439bcc:	add	x14, x12, x24
  439bd0:	tbnz	x13, #63, 439be4 <argp_usage@@Base+0x7fe8>
  439bd4:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  439bd8:	sub	x12, x12, x13
  439bdc:	cmp	x12, x14
  439be0:	b	439bf0 <argp_usage@@Base+0x7ff4>
  439be4:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  439be8:	sub	x12, x12, x13
  439bec:	cmp	x14, x12
  439bf0:	mov	x27, x19
  439bf4:	b.lt	439e38 <argp_usage@@Base+0x823c>  // b.tstop
  439bf8:	ldr	x12, [sp, #336]
  439bfc:	add	x13, x13, x14
  439c00:	tbnz	x12, #63, 439da4 <argp_usage@@Base+0x81a8>
  439c04:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  439c08:	sub	x14, x14, x12
  439c0c:	cmp	x14, x13
  439c10:	b	439db0 <argp_usage@@Base+0x81b4>
  439c14:	add	w25, w9, w8
  439c18:	add	w19, w11, w10
  439c1c:	ldur	x8, [x29, #-128]
  439c20:	ldur	w9, [x29, #-120]
  439c24:	ldur	w10, [x29, #-96]
  439c28:	add	w26, w13, w12
  439c2c:	sub	x1, x29, #0x48
  439c30:	mov	x0, x21
  439c34:	stp	w26, w19, [x29, #-60]
  439c38:	stur	w9, [x29, #-64]
  439c3c:	stur	x8, [x29, #-72]
  439c40:	stur	w25, [x29, #-52]
  439c44:	stur	w10, [x29, #-40]
  439c48:	bl	44b2a4 <_obstack_memory_used@@Base+0xd044>
  439c4c:	ldrb	w8, [sp, #409]
  439c50:	cmn	x0, #0x1
  439c54:	b.eq	439f24 <argp_usage@@Base+0x8328>  // b.none
  439c58:	mov	x24, x0
  439c5c:	cbz	w8, 439f64 <argp_usage@@Base+0x8368>
  439c60:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439c64:	add	x1, x1, #0x3b4
  439c68:	mov	w2, #0x5                   	// #5
  439c6c:	mov	x0, xzr
  439c70:	bl	404bf0 <dcgettext@plt>
  439c74:	ldp	x1, x2, [sp, #296]
  439c78:	ldr	x3, [sp, #312]
  439c7c:	bl	438910 <argp_usage@@Base+0x6d14>
  439c80:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439c84:	add	x1, x1, #0x3f1
  439c88:	mov	w2, #0x5                   	// #5
  439c8c:	mov	x0, xzr
  439c90:	bl	404bf0 <dcgettext@plt>
  439c94:	mov	x27, x0
  439c98:	sub	x0, x29, #0x48
  439c9c:	add	x1, sp, #0xc0
  439ca0:	sub	x2, x29, #0x100
  439ca4:	bl	43a610 <argp_usage@@Base+0x8a14>
  439ca8:	mov	x1, x0
  439cac:	mov	x0, x27
  439cb0:	bl	438910 <argp_usage@@Base+0x6d14>
  439cb4:	ldur	w8, [x29, #-96]
  439cb8:	cmn	w8, #0x1
  439cbc:	b.eq	439ce4 <argp_usage@@Base+0x80e8>  // b.none
  439cc0:	ldur	w9, [x29, #-40]
  439cc4:	cmp	w9, w8
  439cc8:	b.eq	439ce4 <argp_usage@@Base+0x80e8>  // b.none
  439ccc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439cd0:	add	x1, x1, #0x40b
  439cd4:	mov	w2, #0x5                   	// #5
  439cd8:	mov	x0, xzr
  439cdc:	bl	404bf0 <dcgettext@plt>
  439ce0:	bl	438910 <argp_usage@@Base+0x6d14>
  439ce4:	ldr	x8, [sp, #312]
  439ce8:	cbnz	x8, 439d9c <argp_usage@@Base+0x81a0>
  439cec:	ldur	w8, [x29, #-60]
  439cf0:	cmp	w8, w26
  439cf4:	b.ne	439d10 <argp_usage@@Base+0x8114>  // b.any
  439cf8:	ldr	x9, [sp, #304]
  439cfc:	mov	w8, wzr
  439d00:	cbnz	x9, 439f64 <argp_usage@@Base+0x8368>
  439d04:	ldur	w9, [x29, #-56]
  439d08:	cmp	w9, w19
  439d0c:	b.eq	439f64 <argp_usage@@Base+0x8368>  // b.none
  439d10:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439d14:	add	x1, x1, #0x448
  439d18:	mov	w2, #0x5                   	// #5
  439d1c:	mov	x0, xzr
  439d20:	bl	404bf0 <dcgettext@plt>
  439d24:	bl	438910 <argp_usage@@Base+0x6d14>
  439d28:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439d2c:	add	x1, x1, #0x483
  439d30:	mov	w2, #0x5                   	// #5
  439d34:	mov	x0, xzr
  439d38:	bl	404bf0 <dcgettext@plt>
  439d3c:	mov	x27, x0
  439d40:	add	x1, sp, #0x20
  439d44:	mov	w0, w25
  439d48:	bl	43a718 <argp_usage@@Base+0x8b1c>
  439d4c:	mov	x1, x0
  439d50:	add	w2, w19, #0x1
  439d54:	mov	x0, x27
  439d58:	mov	w3, w26
  439d5c:	bl	438910 <argp_usage@@Base+0x6d14>
  439d60:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439d64:	add	x1, x1, #0x4a6
  439d68:	mov	w2, #0x5                   	// #5
  439d6c:	mov	x0, xzr
  439d70:	bl	404bf0 <dcgettext@plt>
  439d74:	ldur	w8, [x29, #-52]
  439d78:	mov	x25, x0
  439d7c:	add	x1, sp, #0x20
  439d80:	mov	w0, w8
  439d84:	bl	43a718 <argp_usage@@Base+0x8b1c>
  439d88:	ldp	w3, w8, [x29, #-60]
  439d8c:	mov	x1, x0
  439d90:	mov	x0, x25
  439d94:	add	w2, w8, #0x1
  439d98:	bl	438910 <argp_usage@@Base+0x6d14>
  439d9c:	mov	w8, wzr
  439da0:	b	439f64 <argp_usage@@Base+0x8368>
  439da4:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
  439da8:	sub	x14, x14, x12
  439dac:	cmp	x13, x14
  439db0:	mov	x27, x19
  439db4:	b.lt	439e38 <argp_usage@@Base+0x823c>  // b.tstop
  439db8:	mov	x15, #0x94b3                	// #38067
  439dbc:	movk	x15, #0x26d6, lsl #16
  439dc0:	movk	x15, #0xbe8, lsl #32
  439dc4:	add	x14, x11, x9
  439dc8:	movk	x15, #0x112e, lsl #48
  439dcc:	smulh	x16, x14, x15
  439dd0:	mov	w11, #0xca00                	// #51712
  439dd4:	asr	x17, x16, #26
  439dd8:	movk	w11, #0x3b9a, lsl #16
  439ddc:	add	x16, x17, x16, lsr #63
  439de0:	msub	x16, x16, x11, x14
  439de4:	add	x16, x16, x11
  439de8:	smulh	x17, x16, x15
  439dec:	asr	x18, x17, #26
  439df0:	add	x17, x18, x17, lsr #63
  439df4:	msub	x11, x17, x11, x16
  439df8:	sub	x14, x14, x11
  439dfc:	smulh	x14, x14, x15
  439e00:	asr	x15, x14, #26
  439e04:	add	x15, x15, x14, lsr #63
  439e08:	add	x13, x12, x13
  439e0c:	sxtw	x14, w15
  439e10:	tbnz	w15, #31, 439e24 <argp_usage@@Base+0x8228>
  439e14:	mov	x15, #0x7fffffffffffffff    	// #9223372036854775807
  439e18:	sub	x15, x15, x14
  439e1c:	cmp	x15, x13
  439e20:	b	439e30 <argp_usage@@Base+0x8234>
  439e24:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
  439e28:	sub	x15, x15, x14
  439e2c:	cmp	x13, x15
  439e30:	mov	x27, x19
  439e34:	b.ge	439e6c <argp_usage@@Base+0x8270>  // b.tcont
  439e38:	ldrb	w8, [sp, #409]
  439e3c:	cbz	w8, 439e58 <argp_usage@@Base+0x825c>
  439e40:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439e44:	add	x1, x1, #0x50e
  439e48:	mov	w2, #0x5                   	// #5
  439e4c:	mov	x0, xzr
  439e50:	bl	404bf0 <dcgettext@plt>
  439e54:	bl	438910 <argp_usage@@Base+0x6d14>
  439e58:	mov	w8, #0x7                   	// #7
  439e5c:	cmp	w8, #0x7
  439e60:	b.eq	439260 <argp_usage@@Base+0x7664>  // b.none
  439e64:	cbz	w8, 438e50 <argp_usage@@Base+0x7254>
  439e68:	b	43927c <argp_usage@@Base+0x7680>
  439e6c:	add	x24, x13, x14
  439e70:	ldr	x13, [sp, #16]
  439e74:	stp	x24, x11, [x13]
  439e78:	ldrb	w11, [sp, #409]
  439e7c:	cbz	w11, 439f18 <argp_usage@@Base+0x831c>
  439e80:	orr	x8, x8, x9
  439e84:	orr	x8, x8, x10
  439e88:	orr	x8, x8, x12
  439e8c:	cbz	x8, 439f1c <argp_usage@@Base+0x8320>
  439e90:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439e94:	add	x1, x1, #0x53e
  439e98:	mov	w2, #0x5                   	// #5
  439e9c:	mov	x0, xzr
  439ea0:	bl	404bf0 <dcgettext@plt>
  439ea4:	ldp	x1, x2, [sp, #320]
  439ea8:	ldr	x3, [sp, #336]
  439eac:	ldr	w4, [sp, #344]
  439eb0:	bl	438910 <argp_usage@@Base+0x6d14>
  439eb4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439eb8:	add	x1, x1, #0x587
  439ebc:	mov	w2, #0x5                   	// #5
  439ec0:	mov	x0, xzr
  439ec4:	bl	404bf0 <dcgettext@plt>
  439ec8:	mov	x1, x24
  439ecc:	bl	438910 <argp_usage@@Base+0x6d14>
  439ed0:	ldur	w8, [x29, #-40]
  439ed4:	cmn	w8, #0x1
  439ed8:	b.eq	439f18 <argp_usage@@Base+0x831c>  // b.none
  439edc:	ldr	x1, [sp, #16]
  439ee0:	add	x2, sp, #0x20
  439ee4:	mov	x0, x21
  439ee8:	bl	44afe0 <_obstack_memory_used@@Base+0xcd80>
  439eec:	cbz	x0, 439f18 <argp_usage@@Base+0x831c>
  439ef0:	ldur	w8, [x29, #-40]
  439ef4:	ldr	w9, [sp, #64]
  439ef8:	cmp	w8, w9
  439efc:	b.eq	439f18 <argp_usage@@Base+0x831c>  // b.none
  439f00:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439f04:	add	x1, x1, #0x5a9
  439f08:	mov	w2, #0x5                   	// #5
  439f0c:	mov	x0, xzr
  439f10:	bl	404bf0 <dcgettext@plt>
  439f14:	bl	438910 <argp_usage@@Base+0x6d14>
  439f18:	mov	w8, wzr
  439f1c:	mov	x27, x19
  439f20:	b	439e5c <argp_usage@@Base+0x8260>
  439f24:	cbz	w8, 439f5c <argp_usage@@Base+0x8360>
  439f28:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439f2c:	add	x1, x1, #0x375
  439f30:	mov	w2, #0x5                   	// #5
  439f34:	mov	x0, xzr
  439f38:	bl	404bf0 <dcgettext@plt>
  439f3c:	mov	x24, x0
  439f40:	sub	x0, x29, #0x48
  439f44:	add	x1, sp, #0xc0
  439f48:	sub	x2, x29, #0x100
  439f4c:	bl	43a610 <argp_usage@@Base+0x8a14>
  439f50:	mov	x1, x0
  439f54:	mov	x0, x24
  439f58:	bl	438910 <argp_usage@@Base+0x6d14>
  439f5c:	mov	x24, #0xffffffffffffffff    	// #-1
  439f60:	mov	w8, #0x7                   	// #7
  439f64:	mov	x27, x20
  439f68:	cbnz	w8, 439e5c <argp_usage@@Base+0x8260>
  439f6c:	b	439a34 <argp_usage@@Base+0x7e38>
  439f70:	stp	x29, x30, [sp, #-48]!
  439f74:	mov	w8, #0xb3c5                	// #46021
  439f78:	movk	w8, #0x91a2, lsl #16
  439f7c:	smull	x8, w0, w8
  439f80:	lsr	x8, x8, #32
  439f84:	add	w8, w8, w0
  439f88:	asr	w10, w8, #11
  439f8c:	str	x21, [sp, #16]
  439f90:	add	w21, w10, w8, lsr #31
  439f94:	cmp	w21, #0x0
  439f98:	stp	x20, x19, [sp, #32]
  439f9c:	mov	x19, x1
  439fa0:	mov	w9, #0x2b                  	// #43
  439fa4:	cneg	w5, w21, mi  // mi = first
  439fa8:	cmp	w0, #0x0
  439fac:	mov	w8, #0x2d                  	// #45
  439fb0:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x1ada0>
  439fb4:	mov	w20, w0
  439fb8:	csel	w4, w8, w9, lt  // lt = tstop
  439fbc:	add	x3, x3, #0x9c6
  439fc0:	mov	w1, #0x1                   	// #1
  439fc4:	mov	x2, #0xffffffffffffffff    	// #-1
  439fc8:	mov	x0, x19
  439fcc:	mov	x29, sp
  439fd0:	bl	4041b0 <__sprintf_chk@plt>
  439fd4:	mov	w8, #0xe10                 	// #3600
  439fd8:	msub	w9, w21, w8, w20
  439fdc:	cmp	w9, #0x0
  439fe0:	cneg	w8, w9, mi  // mi = first
  439fe4:	cbz	w9, 43a078 <argp_usage@@Base+0x847c>
  439fe8:	mov	w10, #0x8889                	// #34953
  439fec:	movk	w10, #0x8888, lsl #16
  439ff0:	mov	w14, #0x81b5                	// #33205
  439ff4:	movk	w14, #0x1b4e, lsl #16
  439ff8:	umull	x10, w8, w10
  439ffc:	mov	w12, #0x3c                  	// #60
  43a000:	umull	x14, w8, w14
  43a004:	lsr	x15, x10, #37
  43a008:	mov	w11, #0xcccd                	// #52429
  43a00c:	msub	w10, w15, w12, w8
  43a010:	lsr	x8, x14, #38
  43a014:	add	x13, x19, w0, sxtw
  43a018:	movk	w11, #0xcccc, lsl #16
  43a01c:	add	w8, w8, #0x30
  43a020:	strb	w8, [x13, #1]
  43a024:	mul	x8, x15, x11
  43a028:	mov	w12, #0xa                   	// #10
  43a02c:	lsr	x8, x8, #35
  43a030:	msub	w8, w8, w12, w15
  43a034:	mov	w9, #0x3a                  	// #58
  43a038:	orr	w14, w8, #0x30
  43a03c:	add	x8, x13, #0x3
  43a040:	strb	w9, [x13]
  43a044:	strb	w14, [x13, #2]
  43a048:	cbz	w10, 43a074 <argp_usage@@Base+0x8478>
  43a04c:	strb	w9, [x8]
  43a050:	umull	x9, w10, w11
  43a054:	lsr	x9, x9, #35
  43a058:	orr	w11, w9, #0x30
  43a05c:	msub	w9, w9, w12, w10
  43a060:	orr	w9, w9, #0x30
  43a064:	add	x10, x8, #0x3
  43a068:	strb	w11, [x8, #1]
  43a06c:	strb	w9, [x8, #2]
  43a070:	mov	x8, x10
  43a074:	strb	wzr, [x8]
  43a078:	mov	x0, x19
  43a07c:	ldp	x20, x19, [sp, #32]
  43a080:	ldr	x21, [sp, #16]
  43a084:	ldp	x29, x30, [sp], #48
  43a088:	ret
  43a08c:	stp	x29, x30, [sp, #-48]!
  43a090:	stp	x22, x21, [sp, #16]
  43a094:	stp	x20, x19, [sp, #32]
  43a098:	ldr	x19, [x0, #8]
  43a09c:	mov	x20, x2
  43a0a0:	mov	w21, w1
  43a0a4:	mov	x29, sp
  43a0a8:	tbnz	x19, #63, 43a0f4 <argp_usage@@Base+0x84f8>
  43a0ac:	ldr	x8, [x0, #16]
  43a0b0:	mov	x22, x0
  43a0b4:	cmp	x8, #0x2
  43a0b8:	b.ne	43a0f4 <argp_usage@@Base+0x84f8>  // b.any
  43a0bc:	cmp	x19, #0x45
  43a0c0:	mov	w8, #0x76c                 	// #1900
  43a0c4:	mov	w9, #0x7d0                 	// #2000
  43a0c8:	csel	x8, x9, x8, lt  // lt = tstop
  43a0cc:	add	x19, x8, x19
  43a0d0:	tbz	w21, #0, 43a0f4 <argp_usage@@Base+0x84f8>
  43a0d4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a0d8:	add	x1, x1, #0x9cd
  43a0dc:	mov	w2, #0x5                   	// #5
  43a0e0:	mov	x0, xzr
  43a0e4:	bl	404bf0 <dcgettext@plt>
  43a0e8:	ldr	x1, [x22, #8]
  43a0ec:	mov	x2, x19
  43a0f0:	bl	438910 <argp_usage@@Base+0x6d14>
  43a0f4:	tbnz	x19, #63, 43a138 <argp_usage@@Base+0x853c>
  43a0f8:	mov	w8, #0x76c                 	// #1900
  43a0fc:	movk	w8, #0x8000, lsl #16
  43a100:	cmp	x19, x8
  43a104:	sub	w8, w19, #0x76c
  43a108:	b.lt	43a150 <argp_usage@@Base+0x8554>  // b.tstop
  43a10c:	str	w8, [x20]
  43a110:	tbz	w21, #0, 43a130 <argp_usage@@Base+0x8534>
  43a114:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a118:	add	x1, x1, #0x9f7
  43a11c:	mov	w2, #0x5                   	// #5
  43a120:	mov	x0, xzr
  43a124:	bl	404bf0 <dcgettext@plt>
  43a128:	mov	x1, x19
  43a12c:	bl	438910 <argp_usage@@Base+0x6d14>
  43a130:	mov	w0, wzr
  43a134:	b	43a158 <argp_usage@@Base+0x855c>
  43a138:	mov	x9, #0xfffffffffffff895    	// #-1899
  43a13c:	mov	w8, #0xfffff894            	// #-1900
  43a140:	movk	x9, #0x7fff, lsl #16
  43a144:	cmp	x19, x9
  43a148:	sub	w8, w8, w19
  43a14c:	b.lt	43a10c <argp_usage@@Base+0x8510>  // b.tstop
  43a150:	str	w8, [x20]
  43a154:	mov	w0, #0x1                   	// #1
  43a158:	ldp	x20, x19, [sp, #32]
  43a15c:	ldp	x22, x21, [sp, #16]
  43a160:	ldp	x29, x30, [sp], #48
  43a164:	ret
  43a168:	cbz	w1, 43a190 <argp_usage@@Base+0x8594>
  43a16c:	cmp	w1, #0x1
  43a170:	b.ne	43a1a8 <argp_usage@@Base+0x85ac>  // b.any
  43a174:	sub	x8, x0, #0x1
  43a178:	cmp	x0, #0xc
  43a17c:	add	x9, x0, #0xc
  43a180:	csinv	x10, x0, xzr, eq  // eq = none
  43a184:	cmp	x8, #0xb
  43a188:	csel	x0, x9, x10, cc  // cc = lo, ul, last
  43a18c:	ret
  43a190:	sub	x8, x0, #0x1
  43a194:	cmp	x0, #0xc
  43a198:	csetm	x9, ne  // ne = any
  43a19c:	cmp	x8, #0xb
  43a1a0:	csel	x0, x0, x9, cc  // cc = lo, ul, last
  43a1a4:	ret
  43a1a8:	cmp	x0, #0x18
  43a1ac:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
  43a1b0:	ret
  43a1b4:	stp	x29, x30, [sp, #-32]!
  43a1b8:	str	x19, [sp, #16]
  43a1bc:	ldp	w6, w5, [x0, #4]
  43a1c0:	ldr	w7, [x0]
  43a1c4:	mov	x19, x1
  43a1c8:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a1cc:	add	x4, x4, #0xa15
  43a1d0:	mov	w1, #0x64                  	// #100
  43a1d4:	mov	w2, #0x1                   	// #1
  43a1d8:	mov	x3, #0xffffffffffffffff    	// #-1
  43a1dc:	mov	x0, x19
  43a1e0:	mov	x29, sp
  43a1e4:	bl	404460 <__snprintf_chk@plt>
  43a1e8:	mov	x0, x19
  43a1ec:	ldr	x19, [sp, #16]
  43a1f0:	ldp	x29, x30, [sp], #32
  43a1f4:	ret
  43a1f8:	ldr	w8, [x1, #24]
  43a1fc:	tbnz	w8, #31, 43a250 <argp_usage@@Base+0x8654>
  43a200:	ldp	w8, w9, [x0]
  43a204:	ldp	w10, w11, [x1]
  43a208:	ldp	w12, w13, [x0, #8]
  43a20c:	eor	w8, w10, w8
  43a210:	ldp	w10, w14, [x1, #8]
  43a214:	eor	w9, w11, w9
  43a218:	ldp	w11, w15, [x1, #16]
  43a21c:	orr	w8, w9, w8
  43a220:	eor	w10, w10, w12
  43a224:	eor	w13, w14, w13
  43a228:	ldp	w12, w14, [x0, #16]
  43a22c:	orr	w8, w8, w10
  43a230:	orr	w8, w8, w13
  43a234:	eor	w11, w11, w12
  43a238:	orr	w8, w8, w11
  43a23c:	eor	w9, w15, w14
  43a240:	orr	w8, w8, w9
  43a244:	cmp	w8, #0x0
  43a248:	cset	w0, eq  // eq = none
  43a24c:	ret
  43a250:	mov	w0, wzr
  43a254:	ret
  43a258:	sub	sp, sp, #0x100
  43a25c:	stp	x29, x30, [sp, #160]
  43a260:	stp	x28, x27, [sp, #176]
  43a264:	stp	x26, x25, [sp, #192]
  43a268:	stp	x24, x23, [sp, #208]
  43a26c:	stp	x22, x21, [sp, #224]
  43a270:	stp	x20, x19, [sp, #240]
  43a274:	ldp	w15, w17, [x0]
  43a278:	ldp	w16, w18, [x1]
  43a27c:	mov	x21, x1
  43a280:	mov	x22, x0
  43a284:	ldr	w0, [x0, #8]
  43a288:	ldr	w1, [x1, #8]
  43a28c:	ldp	w23, w27, [x22, #12]
  43a290:	ldp	w25, w26, [x21, #12]
  43a294:	cmp	w15, w16
  43a298:	ldr	w19, [x22, #20]
  43a29c:	ldr	w28, [x21, #20]
  43a2a0:	cset	w8, eq  // eq = none
  43a2a4:	cmp	w17, w18
  43a2a8:	cset	w9, eq  // eq = none
  43a2ac:	cmp	w0, w1
  43a2b0:	ldrb	w14, [x2, #217]
  43a2b4:	cset	w10, ne  // ne = any
  43a2b8:	cmp	w23, w25
  43a2bc:	cset	w11, eq  // eq = none
  43a2c0:	cmp	w27, w26
  43a2c4:	cset	w12, eq  // eq = none
  43a2c8:	cmp	w19, w28
  43a2cc:	cset	w13, eq  // eq = none
  43a2d0:	add	x29, sp, #0xa0
  43a2d4:	cbz	w14, 43a510 <argp_usage@@Base+0x8914>
  43a2d8:	and	w8, w8, w9
  43a2dc:	and	w8, w8, w10
  43a2e0:	and	w9, w12, w13
  43a2e4:	and	w8, w8, w11
  43a2e8:	stp	w15, w1, [sp, #44]
  43a2ec:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a2f0:	mov	x20, x2
  43a2f4:	and	w8, w8, w9
  43a2f8:	add	x1, x1, #0xa24
  43a2fc:	mov	w2, #0x5                   	// #5
  43a300:	stp	w0, w18, [sp, #28]
  43a304:	mov	x0, xzr
  43a308:	stp	w8, w3, [sp, #52]
  43a30c:	stp	w17, w16, [sp, #36]
  43a310:	bl	404bf0 <dcgettext@plt>
  43a314:	bl	438910 <argp_usage@@Base+0x6d14>
  43a318:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a31c:	add	x1, x1, #0xa45
  43a320:	mov	w2, #0x5                   	// #5
  43a324:	mov	x0, xzr
  43a328:	bl	404bf0 <dcgettext@plt>
  43a32c:	mov	w24, w25
  43a330:	mov	w25, w23
  43a334:	mov	x23, x0
  43a338:	add	x2, sp, #0x3c
  43a33c:	mov	x0, x22
  43a340:	mov	x1, x20
  43a344:	bl	43a610 <argp_usage@@Base+0x8a14>
  43a348:	mov	x1, x0
  43a34c:	mov	x0, x23
  43a350:	mov	w23, w25
  43a354:	mov	w25, w24
  43a358:	bl	438910 <argp_usage@@Base+0x6d14>
  43a35c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a360:	add	x1, x1, #0xa63
  43a364:	mov	w2, #0x5                   	// #5
  43a368:	mov	x0, xzr
  43a36c:	bl	404bf0 <dcgettext@plt>
  43a370:	mov	x22, x0
  43a374:	add	x2, sp, #0x3c
  43a378:	mov	x0, x21
  43a37c:	mov	x1, x20
  43a380:	bl	43a610 <argp_usage@@Base+0x8a14>
  43a384:	mov	x1, x0
  43a388:	mov	x0, x22
  43a38c:	bl	438910 <argp_usage@@Base+0x6d14>
  43a390:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a394:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  43a398:	add	x8, x8, #0xaba
  43a39c:	add	x9, x9, #0xd3e
  43a3a0:	cmp	w19, w28
  43a3a4:	csel	x5, x9, x8, eq  // eq = none
  43a3a8:	ldr	w8, [sp, #48]
  43a3ac:	ldp	w11, w12, [sp, #28]
  43a3b0:	adrp	x10, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a3b4:	add	x10, x10, #0xabc
  43a3b8:	cmp	w27, w26
  43a3bc:	csel	x6, x9, x10, eq  // eq = none
  43a3c0:	cmp	w23, w24
  43a3c4:	csel	x7, x9, x10, eq  // eq = none
  43a3c8:	cmp	w11, w8
  43a3cc:	ldp	w11, w13, [sp, #36]
  43a3d0:	csel	x8, x9, x10, eq  // eq = none
  43a3d4:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a3d8:	add	x4, x4, #0xa81
  43a3dc:	cmp	w11, w12
  43a3e0:	ldr	w12, [sp, #44]
  43a3e4:	csel	x11, x9, x10, eq  // eq = none
  43a3e8:	add	x0, sp, #0x3c
  43a3ec:	mov	w1, #0x64                  	// #100
  43a3f0:	cmp	w12, w13
  43a3f4:	csel	x9, x9, x10, eq  // eq = none
  43a3f8:	mov	w2, #0x1                   	// #1
  43a3fc:	mov	w3, #0x64                  	// #100
  43a400:	stp	x11, x9, [sp, #8]
  43a404:	str	x8, [sp]
  43a408:	bl	404460 <__snprintf_chk@plt>
  43a40c:	tbnz	w0, #31, 43a450 <argp_usage@@Base+0x8854>
  43a410:	cmp	w0, #0x63
  43a414:	mov	w8, #0x63                  	// #99
  43a418:	csel	w9, w0, w8, cc  // cc = lo, ul, last
  43a41c:	add	x8, sp, #0x3c
  43a420:	sub	x8, x8, #0x1
  43a424:	subs	x10, x9, #0x1
  43a428:	b.lt	43a444 <argp_usage@@Base+0x8848>  // b.tstop
  43a42c:	ldrb	w9, [x8, x9]
  43a430:	cmp	w9, #0x20
  43a434:	mov	x9, x10
  43a438:	b.eq	43a424 <argp_usage@@Base+0x8828>  // b.none
  43a43c:	add	x8, x10, #0x1
  43a440:	b	43a448 <argp_usage@@Base+0x884c>
  43a444:	mov	x8, xzr
  43a448:	add	x9, sp, #0x3c
  43a44c:	strb	wzr, [x9, w8, sxtw]
  43a450:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  43a454:	add	x0, x0, #0x1e3
  43a458:	add	x1, sp, #0x3c
  43a45c:	bl	438910 <argp_usage@@Base+0x6d14>
  43a460:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a464:	add	x1, x1, #0xabf
  43a468:	mov	w2, #0x5                   	// #5
  43a46c:	mov	x0, xzr
  43a470:	bl	404bf0 <dcgettext@plt>
  43a474:	bl	438910 <argp_usage@@Base+0x6d14>
  43a478:	ldr	w8, [sp, #52]
  43a47c:	cbz	w8, 43a498 <argp_usage@@Base+0x889c>
  43a480:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a484:	add	x1, x1, #0xad7
  43a488:	mov	w2, #0x5                   	// #5
  43a48c:	mov	x0, xzr
  43a490:	bl	404bf0 <dcgettext@plt>
  43a494:	bl	438910 <argp_usage@@Base+0x6d14>
  43a498:	cmp	w23, w25
  43a49c:	b.eq	43a4c0 <argp_usage@@Base+0x88c4>  // b.none
  43a4a0:	cmp	w27, w26
  43a4a4:	b.eq	43a4c0 <argp_usage@@Base+0x88c4>  // b.none
  43a4a8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a4ac:	add	x1, x1, #0xb09
  43a4b0:	mov	w2, #0x5                   	// #5
  43a4b4:	mov	x0, xzr
  43a4b8:	bl	404bf0 <dcgettext@plt>
  43a4bc:	bl	438910 <argp_usage@@Base+0x6d14>
  43a4c0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a4c4:	add	x1, x1, #0xb30
  43a4c8:	mov	w2, #0x5                   	// #5
  43a4cc:	mov	x0, xzr
  43a4d0:	bl	404bf0 <dcgettext@plt>
  43a4d4:	bl	438910 <argp_usage@@Base+0x6d14>
  43a4d8:	ldr	w10, [sp, #56]
  43a4dc:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a4e0:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a4e4:	add	x8, x8, #0xb6f
  43a4e8:	add	x9, x9, #0xb5c
  43a4ec:	tst	w10, #0x1
  43a4f0:	csel	x1, x9, x8, ne  // ne = any
  43a4f4:	mov	w2, #0x5                   	// #5
  43a4f8:	mov	x0, xzr
  43a4fc:	bl	404bf0 <dcgettext@plt>
  43a500:	mov	x1, x0
  43a504:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a508:	add	x0, x0, #0xb51
  43a50c:	bl	438910 <argp_usage@@Base+0x6d14>
  43a510:	ldp	x20, x19, [sp, #240]
  43a514:	ldp	x22, x21, [sp, #224]
  43a518:	ldp	x24, x23, [sp, #208]
  43a51c:	ldp	x26, x25, [sp, #192]
  43a520:	ldp	x28, x27, [sp, #176]
  43a524:	ldp	x29, x30, [sp, #160]
  43a528:	add	sp, sp, #0x100
  43a52c:	ret
  43a530:	stp	x29, x30, [sp, #-32]!
  43a534:	stp	x20, x19, [sp, #16]
  43a538:	ldrb	w8, [x0, #224]
  43a53c:	mov	x20, x0
  43a540:	mov	x19, x1
  43a544:	mov	x29, sp
  43a548:	cbz	w8, 43a57c <argp_usage@@Base+0x8980>
  43a54c:	ldr	x5, [x20, #8]
  43a550:	add	x8, x5, #0x1
  43a554:	cmp	x8, #0xd
  43a558:	b.hi	43a590 <argp_usage@@Base+0x8994>  // b.pmore
  43a55c:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x19da0>
  43a560:	mov	w8, #0xb                   	// #11
  43a564:	add	x9, x9, #0xdb8
  43a568:	madd	x8, x5, x8, x9
  43a56c:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x18da0>
  43a570:	add	x5, x8, #0xb
  43a574:	add	x4, x4, #0x386
  43a578:	b	43a598 <argp_usage@@Base+0x899c>
  43a57c:	mov	w0, wzr
  43a580:	strb	wzr, [x19]
  43a584:	ldrsw	x9, [x20, #16]
  43a588:	tbz	w9, #31, 43a5b4 <argp_usage@@Base+0x89b8>
  43a58c:	b	43a600 <argp_usage@@Base+0x8a04>
  43a590:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a594:	add	x4, x4, #0x71e
  43a598:	mov	w1, #0x64                  	// #100
  43a59c:	mov	w2, #0x1                   	// #1
  43a5a0:	mov	x3, #0xffffffffffffffff    	// #-1
  43a5a4:	mov	x0, x19
  43a5a8:	bl	404460 <__snprintf_chk@plt>
  43a5ac:	ldrsw	x9, [x20, #16]
  43a5b0:	tbnz	w9, #31, 43a600 <argp_usage@@Base+0x8a04>
  43a5b4:	cmp	w0, #0x63
  43a5b8:	b.hi	43a600 <argp_usage@@Base+0x8a04>  // b.pmore
  43a5bc:	cmp	w9, #0x6
  43a5c0:	b.gt	43a600 <argp_usage@@Base+0x8a04>
  43a5c4:	mov	w10, #0x64                  	// #100
  43a5c8:	adrp	x11, 457000 <_obstack_memory_used@@Base+0x18da0>
  43a5cc:	adrp	x12, 458000 <_obstack_memory_used@@Base+0x19da0>
  43a5d0:	add	x8, x19, w0, sxtw
  43a5d4:	cmp	w0, #0x0
  43a5d8:	add	x11, x11, #0x385
  43a5dc:	add	x12, x12, #0xe52
  43a5e0:	sub	w10, w10, w0
  43a5e4:	cinc	x4, x11, eq  // eq = none
  43a5e8:	sxtw	x1, w10
  43a5ec:	add	x5, x12, x9, lsl #2
  43a5f0:	mov	w2, #0x1                   	// #1
  43a5f4:	mov	x3, #0xffffffffffffffff    	// #-1
  43a5f8:	mov	x0, x8
  43a5fc:	bl	404460 <__snprintf_chk@plt>
  43a600:	mov	x0, x19
  43a604:	ldp	x20, x19, [sp, #16]
  43a608:	ldp	x29, x30, [sp], #32
  43a60c:	ret
  43a610:	sub	sp, sp, #0x50
  43a614:	stp	x20, x19, [sp, #64]
  43a618:	mov	x19, x2
  43a61c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a620:	mov	x20, x1
  43a624:	mov	x3, x0
  43a628:	add	x2, x2, #0xb80
  43a62c:	mov	w1, #0x64                  	// #100
  43a630:	mov	x0, x19
  43a634:	mov	x4, xzr
  43a638:	mov	w5, wzr
  43a63c:	stp	x29, x30, [sp, #32]
  43a640:	str	x21, [sp, #48]
  43a644:	add	x29, sp, #0x20
  43a648:	bl	44c394 <_obstack_memory_used@@Base+0xe134>
  43a64c:	cbz	x20, 43a6a0 <argp_usage@@Base+0x8aa4>
  43a650:	cmp	w0, #0x63
  43a654:	b.gt	43a6a0 <argp_usage@@Base+0x8aa4>
  43a658:	ldr	x8, [x20, #208]
  43a65c:	cbz	x8, 43a6a0 <argp_usage@@Base+0x8aa4>
  43a660:	ldr	w8, [x20, #24]
  43a664:	mov	x9, #0x6400000000          	// #429496729600
  43a668:	add	x20, x19, w0, sxtw
  43a66c:	sub	x9, x9, x0, lsl #32
  43a670:	add	x1, sp, #0x4
  43a674:	mov	w0, w8
  43a678:	asr	x21, x9, #32
  43a67c:	bl	439f70 <argp_usage@@Base+0x8374>
  43a680:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a684:	mov	x5, x0
  43a688:	add	x4, x4, #0xb9a
  43a68c:	mov	w2, #0x1                   	// #1
  43a690:	mov	x3, #0xffffffffffffffff    	// #-1
  43a694:	mov	x0, x20
  43a698:	mov	x1, x21
  43a69c:	bl	404460 <__snprintf_chk@plt>
  43a6a0:	mov	x0, x19
  43a6a4:	ldp	x20, x19, [sp, #64]
  43a6a8:	ldr	x21, [sp, #48]
  43a6ac:	ldp	x29, x30, [sp, #32]
  43a6b0:	add	sp, sp, #0x50
  43a6b4:	ret
  43a6b8:	sub	sp, sp, #0x30
  43a6bc:	stp	x29, x30, [sp, #16]
  43a6c0:	stp	x20, x19, [sp, #32]
  43a6c4:	mov	x19, x0
  43a6c8:	ldr	w0, [x0, #20]
  43a6cc:	mov	x20, x1
  43a6d0:	mov	x1, sp
  43a6d4:	add	x29, sp, #0x10
  43a6d8:	bl	43a718 <argp_usage@@Base+0x8b1c>
  43a6dc:	ldp	w7, w8, [x19, #12]
  43a6e0:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a6e4:	mov	x5, x0
  43a6e8:	add	x4, x4, #0xba1
  43a6ec:	add	w6, w8, #0x1
  43a6f0:	mov	w1, #0x64                  	// #100
  43a6f4:	mov	w2, #0x1                   	// #1
  43a6f8:	mov	x3, #0xffffffffffffffff    	// #-1
  43a6fc:	mov	x0, x20
  43a700:	bl	404460 <__snprintf_chk@plt>
  43a704:	mov	x0, x20
  43a708:	ldp	x20, x19, [sp, #32]
  43a70c:	ldp	x29, x30, [sp, #16]
  43a710:	add	sp, sp, #0x30
  43a714:	ret
  43a718:	stp	x29, x30, [sp, #-32]!
  43a71c:	mov	w9, #0x851f                	// #34079
  43a720:	movk	w9, #0x51eb, lsl #16
  43a724:	smull	x9, w0, w9
  43a728:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a72c:	lsr	x11, x9, #63
  43a730:	asr	x9, x9, #37
  43a734:	cmn	w0, #0x76d
  43a738:	add	x8, x8, #0xbb6
  43a73c:	mov	w10, #0xffffffed            	// #-19
  43a740:	add	w9, w9, w11
  43a744:	mov	w11, #0x64                  	// #100
  43a748:	cinc	x3, x8, gt
  43a74c:	cmn	w0, #0x7cf
  43a750:	msub	w8, w9, w11, w0
  43a754:	add	w11, w9, #0x13
  43a758:	sub	w9, w10, w9
  43a75c:	str	x19, [sp, #16]
  43a760:	mov	x19, x1
  43a764:	csel	w4, w9, w11, lt  // lt = tstop
  43a768:	cmp	w8, #0x0
  43a76c:	cneg	w5, w8, mi  // mi = first
  43a770:	mov	w1, #0x1                   	// #1
  43a774:	mov	x2, #0xffffffffffffffff    	// #-1
  43a778:	mov	x0, x19
  43a77c:	mov	x29, sp
  43a780:	bl	4041b0 <__sprintf_chk@plt>
  43a784:	mov	x0, x19
  43a788:	ldr	x19, [sp, #16]
  43a78c:	ldp	x29, x30, [sp], #32
  43a790:	ret
  43a794:	stp	x29, x30, [sp, #-32]!
  43a798:	str	x19, [sp, #16]
  43a79c:	mov	w19, w0
  43a7a0:	mov	x29, sp
  43a7a4:	cbz	x1, 43a7d8 <argp_usage@@Base+0x8bdc>
  43a7a8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43a7ac:	ldr	x0, [x8, #1136]
  43a7b0:	mvn	w8, w19
  43a7b4:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a7b8:	and	x8, x8, #0x1
  43a7bc:	add	x9, x9, #0x766
  43a7c0:	mov	x4, x2
  43a7c4:	mov	x3, x1
  43a7c8:	add	x2, x9, x8
  43a7cc:	mov	w1, #0x1                   	// #1
  43a7d0:	mov	w19, #0x1                   	// #1
  43a7d4:	bl	404910 <__fprintf_chk@plt>
  43a7d8:	and	w0, w19, #0x1
  43a7dc:	ldr	x19, [sp, #16]
  43a7e0:	ldp	x29, x30, [sp], #32
  43a7e4:	ret
  43a7e8:	stp	x29, x30, [sp, #-64]!
  43a7ec:	stp	x22, x21, [sp, #32]
  43a7f0:	stp	x20, x19, [sp, #48]
  43a7f4:	ldrb	w8, [x1]
  43a7f8:	mov	x19, x1
  43a7fc:	mov	x20, x0
  43a800:	str	x23, [sp, #16]
  43a804:	mov	x29, sp
  43a808:	cbz	w8, 43a828 <argp_usage@@Base+0x8c2c>
  43a80c:	add	x21, x19, #0x1
  43a810:	and	w0, w8, #0xff
  43a814:	bl	44c0c8 <_obstack_memory_used@@Base+0xde68>
  43a818:	ldrb	w8, [x21]
  43a81c:	sturb	w0, [x21, #-1]
  43a820:	add	x21, x21, #0x1
  43a824:	cbnz	w8, 43a810 <argp_usage@@Base+0x8c14>
  43a828:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x19da0>
  43a82c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a830:	add	x21, x21, #0x4e8
  43a834:	add	x1, x1, #0x790
  43a838:	mov	x0, x19
  43a83c:	bl	404920 <strcmp@plt>
  43a840:	cbz	w0, 43a8d4 <argp_usage@@Base+0x8cd8>
  43a844:	ldr	x1, [x21, #16]!
  43a848:	cbnz	x1, 43a838 <argp_usage@@Base+0x8c3c>
  43a84c:	mov	x0, x19
  43a850:	bl	404190 <strlen@plt>
  43a854:	mov	x22, x0
  43a858:	cmp	x0, #0x3
  43a85c:	b.eq	43a878 <argp_usage@@Base+0x8c7c>  // b.none
  43a860:	cmp	x22, #0x4
  43a864:	b.ne	43a880 <argp_usage@@Base+0x8c84>  // b.any
  43a868:	ldrb	w8, [x19, #3]
  43a86c:	cmp	w8, #0x2e
  43a870:	cset	w23, eq  // eq = none
  43a874:	b	43a884 <argp_usage@@Base+0x8c88>
  43a878:	mov	w23, #0x1                   	// #1
  43a87c:	b	43a884 <argp_usage@@Base+0x8c88>
  43a880:	mov	w23, wzr
  43a884:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x19da0>
  43a888:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a88c:	add	x21, x21, #0x538
  43a890:	add	x1, x1, #0x7a0
  43a894:	cbz	w23, 43a8ac <argp_usage@@Base+0x8cb0>
  43a898:	mov	w2, #0x3                   	// #3
  43a89c:	mov	x0, x19
  43a8a0:	bl	4045a0 <strncmp@plt>
  43a8a4:	cbnz	w0, 43a8b8 <argp_usage@@Base+0x8cbc>
  43a8a8:	b	43a8d4 <argp_usage@@Base+0x8cd8>
  43a8ac:	mov	x0, x19
  43a8b0:	bl	404920 <strcmp@plt>
  43a8b4:	cbz	w0, 43a8d4 <argp_usage@@Base+0x8cd8>
  43a8b8:	ldr	x1, [x21, #16]!
  43a8bc:	cbnz	x1, 43a894 <argp_usage@@Base+0x8c98>
  43a8c0:	mov	x0, x20
  43a8c4:	mov	x1, x19
  43a8c8:	bl	43aa1c <argp_usage@@Base+0x8e20>
  43a8cc:	mov	x21, x0
  43a8d0:	cbz	x0, 43a8ec <argp_usage@@Base+0x8cf0>
  43a8d4:	mov	x0, x21
  43a8d8:	ldp	x20, x19, [sp, #48]
  43a8dc:	ldp	x22, x21, [sp, #32]
  43a8e0:	ldr	x23, [sp, #16]
  43a8e4:	ldp	x29, x30, [sp], #64
  43a8e8:	ret
  43a8ec:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a8f0:	add	x1, x1, #0x700
  43a8f4:	mov	x0, x19
  43a8f8:	bl	404920 <strcmp@plt>
  43a8fc:	cbz	w0, 43aa0c <argp_usage@@Base+0x8e10>
  43a900:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x19da0>
  43a904:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a908:	add	x21, x21, #0x6d8
  43a90c:	add	x1, x1, #0x908
  43a910:	mov	x0, x19
  43a914:	bl	404920 <strcmp@plt>
  43a918:	cbz	w0, 43a8d4 <argp_usage@@Base+0x8cd8>
  43a91c:	ldr	x1, [x21, #16]!
  43a920:	cbnz	x1, 43a910 <argp_usage@@Base+0x8d14>
  43a924:	sub	x23, x22, #0x1
  43a928:	ldrb	w8, [x19, x23]
  43a92c:	cmp	w8, #0x53
  43a930:	b.ne	43a964 <argp_usage@@Base+0x8d68>  // b.any
  43a934:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x19da0>
  43a938:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a93c:	add	x21, x21, #0x6d8
  43a940:	add	x1, x1, #0x908
  43a944:	strb	wzr, [x19, x23]
  43a948:	mov	x0, x19
  43a94c:	bl	404920 <strcmp@plt>
  43a950:	cbz	w0, 43a8d4 <argp_usage@@Base+0x8cd8>
  43a954:	ldr	x1, [x21, #16]!
  43a958:	cbnz	x1, 43a948 <argp_usage@@Base+0x8d4c>
  43a95c:	mov	w8, #0x53                  	// #83
  43a960:	strb	w8, [x19, x23]
  43a964:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x19da0>
  43a968:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43a96c:	add	x21, x21, #0x788
  43a970:	add	x1, x1, #0x93d
  43a974:	mov	x0, x19
  43a978:	bl	404920 <strcmp@plt>
  43a97c:	cbz	w0, 43a8d4 <argp_usage@@Base+0x8cd8>
  43a980:	ldr	x1, [x21, #16]!
  43a984:	cbnz	x1, 43a974 <argp_usage@@Base+0x8d78>
  43a988:	cmp	x22, #0x1
  43a98c:	b.ne	43a9b8 <argp_usage@@Base+0x8dbc>  // b.any
  43a990:	ldrb	w8, [x19]
  43a994:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x19da0>
  43a998:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x15da0>
  43a99c:	add	x21, x21, #0x8d8
  43a9a0:	add	x9, x9, #0x136
  43a9a4:	ldrb	w9, [x9]
  43a9a8:	cmp	w8, w9
  43a9ac:	b.eq	43a8d4 <argp_usage@@Base+0x8cd8>  // b.none
  43a9b0:	ldr	x9, [x21, #16]!
  43a9b4:	cbnz	x9, 43a9a4 <argp_usage@@Base+0x8da8>
  43a9b8:	ldrb	w8, [x19]
  43a9bc:	cbz	w8, 43aa04 <argp_usage@@Base+0x8e08>
  43a9c0:	mov	w8, wzr
  43a9c4:	add	x9, x19, #0x1
  43a9c8:	mov	x10, x19
  43a9cc:	ldurb	w11, [x9, #-1]
  43a9d0:	ldrb	w12, [x9], #1
  43a9d4:	cmp	w11, #0x2e
  43a9d8:	cset	w11, eq  // eq = none
  43a9dc:	cinc	x10, x10, ne  // ne = any
  43a9e0:	orr	w8, w8, w11
  43a9e4:	strb	w12, [x10]
  43a9e8:	cbnz	w12, 43a9cc <argp_usage@@Base+0x8dd0>
  43a9ec:	tbz	w8, #0, 43aa04 <argp_usage@@Base+0x8e08>
  43a9f0:	mov	x0, x20
  43a9f4:	mov	x1, x19
  43a9f8:	bl	43aa1c <argp_usage@@Base+0x8e20>
  43a9fc:	mov	x21, x0
  43aa00:	cbnz	x0, 43a8d4 <argp_usage@@Base+0x8cd8>
  43aa04:	mov	x21, xzr
  43aa08:	b	43a8d4 <argp_usage@@Base+0x8cd8>
  43aa0c:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x19da0>
  43aa10:	add	x21, x21, #0x6c8
  43aa14:	b	43a8d4 <argp_usage@@Base+0x8cd8>
  43aa18:	ret
  43aa1c:	stp	x29, x30, [sp, #-48]!
  43aa20:	stp	x20, x19, [sp, #32]
  43aa24:	mov	x19, x1
  43aa28:	adrp	x20, 458000 <_obstack_memory_used@@Base+0x19da0>
  43aa2c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43aa30:	str	x21, [sp, #16]
  43aa34:	mov	x21, x0
  43aa38:	add	x20, x20, #0xa78
  43aa3c:	add	x1, x1, #0x84b
  43aa40:	mov	x29, sp
  43aa44:	mov	x0, x19
  43aa48:	bl	404920 <strcmp@plt>
  43aa4c:	cbz	w0, 43aaa0 <argp_usage@@Base+0x8ea4>
  43aa50:	ldr	x1, [x20, #16]!
  43aa54:	cbnz	x1, 43aa44 <argp_usage@@Base+0x8e48>
  43aa58:	ldr	x1, [x21, #232]!
  43aa5c:	cbz	x1, 43aa78 <argp_usage@@Base+0x8e7c>
  43aa60:	mov	x20, x21
  43aa64:	mov	x0, x19
  43aa68:	bl	404920 <strcmp@plt>
  43aa6c:	cbz	w0, 43aaa0 <argp_usage@@Base+0x8ea4>
  43aa70:	ldr	x1, [x20, #16]!
  43aa74:	cbnz	x1, 43aa64 <argp_usage@@Base+0x8e68>
  43aa78:	adrp	x20, 458000 <_obstack_memory_used@@Base+0x19da0>
  43aa7c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43aa80:	add	x20, x20, #0xab8
  43aa84:	add	x1, x1, #0x852
  43aa88:	mov	x0, x19
  43aa8c:	bl	404920 <strcmp@plt>
  43aa90:	cbz	w0, 43aaa0 <argp_usage@@Base+0x8ea4>
  43aa94:	ldr	x1, [x20, #16]!
  43aa98:	cbnz	x1, 43aa88 <argp_usage@@Base+0x8e8c>
  43aa9c:	mov	x20, xzr
  43aaa0:	mov	x0, x20
  43aaa4:	ldp	x20, x19, [sp, #32]
  43aaa8:	ldr	x21, [sp, #16]
  43aaac:	ldp	x29, x30, [sp], #48
  43aab0:	ret
  43aab4:	mov	w0, #0xffffffff            	// #-1
  43aab8:	ret
  43aabc:	mov	w0, #0xffffffff            	// #-1
  43aac0:	ret
  43aac4:	stp	x29, x30, [sp, #-32]!
  43aac8:	stp	x20, x19, [sp, #16]
  43aacc:	mov	x29, sp
  43aad0:	cbz	x0, 43ab50 <argp_usage@@Base+0x8f54>
  43aad4:	mov	w1, #0x2f                  	// #47
  43aad8:	mov	x19, x0
  43aadc:	bl	4047d0 <strrchr@plt>
  43aae0:	cmp	x0, #0x0
  43aae4:	csinc	x20, x19, x0, eq  // eq = none
  43aae8:	sub	x8, x20, x19
  43aaec:	cmp	x8, #0x7
  43aaf0:	b.lt	43ab34 <argp_usage@@Base+0x8f38>  // b.tstop
  43aaf4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43aaf8:	sub	x0, x20, #0x7
  43aafc:	add	x1, x1, #0xbf8
  43ab00:	mov	w2, #0x7                   	// #7
  43ab04:	bl	4045a0 <strncmp@plt>
  43ab08:	cbnz	w0, 43ab34 <argp_usage@@Base+0x8f38>
  43ab0c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ab10:	add	x1, x1, #0xc00
  43ab14:	mov	w2, #0x3                   	// #3
  43ab18:	mov	x0, x20
  43ab1c:	bl	4045a0 <strncmp@plt>
  43ab20:	mov	x19, x20
  43ab24:	cbnz	w0, 43ab34 <argp_usage@@Base+0x8f38>
  43ab28:	add	x19, x20, #0x3
  43ab2c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ab30:	str	x19, [x8, #1168]
  43ab34:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ab38:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ab3c:	str	x19, [x8, #3544]
  43ab40:	str	x19, [x9, #1128]
  43ab44:	ldp	x20, x19, [sp, #16]
  43ab48:	ldp	x29, x30, [sp], #32
  43ab4c:	ret
  43ab50:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ab54:	ldr	x3, [x8, #1136]
  43ab58:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ab5c:	add	x0, x0, #0xbc0
  43ab60:	mov	w1, #0x37                  	// #55
  43ab64:	mov	w2, #0x1                   	// #1
  43ab68:	bl	404ab0 <fwrite@plt>
  43ab6c:	bl	404870 <abort@plt>
  43ab70:	stp	x29, x30, [sp, #-48]!
  43ab74:	str	x21, [sp, #16]
  43ab78:	stp	x20, x19, [sp, #32]
  43ab7c:	mov	x29, sp
  43ab80:	mov	x19, x0
  43ab84:	bl	404d00 <__errno_location@plt>
  43ab88:	ldr	w21, [x0]
  43ab8c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ab90:	add	x8, x8, #0xde0
  43ab94:	cmp	x19, #0x0
  43ab98:	mov	x20, x0
  43ab9c:	csel	x0, x8, x19, eq  // eq = none
  43aba0:	mov	w1, #0x38                  	// #56
  43aba4:	bl	43d358 <argp_usage@@Base+0xb75c>
  43aba8:	str	w21, [x20]
  43abac:	ldp	x20, x19, [sp, #32]
  43abb0:	ldr	x21, [sp, #16]
  43abb4:	ldp	x29, x30, [sp], #48
  43abb8:	ret
  43abbc:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43abc0:	add	x8, x8, #0xde0
  43abc4:	cmp	x0, #0x0
  43abc8:	csel	x8, x8, x0, eq  // eq = none
  43abcc:	ldr	w0, [x8]
  43abd0:	ret
  43abd4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43abd8:	add	x8, x8, #0xde0
  43abdc:	cmp	x0, #0x0
  43abe0:	csel	x8, x8, x0, eq  // eq = none
  43abe4:	str	w1, [x8]
  43abe8:	ret
  43abec:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43abf0:	add	x8, x8, #0xde0
  43abf4:	cmp	x0, #0x0
  43abf8:	ubfx	w9, w1, #5, #3
  43abfc:	csel	x8, x8, x0, eq  // eq = none
  43ac00:	add	x8, x8, w9, uxtw #2
  43ac04:	ldr	w9, [x8, #8]
  43ac08:	lsr	w10, w9, w1
  43ac0c:	and	w0, w10, #0x1
  43ac10:	and	w10, w2, #0x1
  43ac14:	eor	w10, w0, w10
  43ac18:	lsl	w10, w10, w1
  43ac1c:	eor	w9, w10, w9
  43ac20:	str	w9, [x8, #8]
  43ac24:	ret
  43ac28:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ac2c:	add	x8, x8, #0xde0
  43ac30:	cmp	x0, #0x0
  43ac34:	csel	x8, x8, x0, eq  // eq = none
  43ac38:	ldr	w0, [x8, #4]
  43ac3c:	str	w1, [x8, #4]
  43ac40:	ret
  43ac44:	stp	x29, x30, [sp, #-16]!
  43ac48:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ac4c:	add	x8, x8, #0xde0
  43ac50:	cmp	x0, #0x0
  43ac54:	csel	x8, x8, x0, eq  // eq = none
  43ac58:	mov	w9, #0xa                   	// #10
  43ac5c:	mov	x29, sp
  43ac60:	str	w9, [x8]
  43ac64:	cbz	x1, 43ac78 <argp_usage@@Base+0x907c>
  43ac68:	cbz	x2, 43ac78 <argp_usage@@Base+0x907c>
  43ac6c:	stp	x1, x2, [x8, #40]
  43ac70:	ldp	x29, x30, [sp], #16
  43ac74:	ret
  43ac78:	bl	404870 <abort@plt>
  43ac7c:	sub	sp, sp, #0x60
  43ac80:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ac84:	add	x8, x8, #0xde0
  43ac88:	cmp	x4, #0x0
  43ac8c:	stp	x29, x30, [sp, #16]
  43ac90:	str	x25, [sp, #32]
  43ac94:	stp	x24, x23, [sp, #48]
  43ac98:	stp	x22, x21, [sp, #64]
  43ac9c:	stp	x20, x19, [sp, #80]
  43aca0:	add	x29, sp, #0x10
  43aca4:	mov	x19, x3
  43aca8:	mov	x20, x2
  43acac:	mov	x21, x1
  43acb0:	mov	x22, x0
  43acb4:	csel	x24, x8, x4, eq  // eq = none
  43acb8:	bl	404d00 <__errno_location@plt>
  43acbc:	ldp	w4, w5, [x24]
  43acc0:	ldp	x7, x8, [x24, #40]
  43acc4:	ldr	w25, [x0]
  43acc8:	mov	x23, x0
  43accc:	add	x6, x24, #0x8
  43acd0:	mov	x0, x22
  43acd4:	mov	x1, x21
  43acd8:	mov	x2, x20
  43acdc:	mov	x3, x19
  43ace0:	str	x8, [sp]
  43ace4:	bl	43ad08 <argp_usage@@Base+0x910c>
  43ace8:	str	w25, [x23]
  43acec:	ldp	x20, x19, [sp, #80]
  43acf0:	ldp	x22, x21, [sp, #64]
  43acf4:	ldp	x24, x23, [sp, #48]
  43acf8:	ldr	x25, [sp, #32]
  43acfc:	ldp	x29, x30, [sp, #16]
  43ad00:	add	sp, sp, #0x60
  43ad04:	ret
  43ad08:	sub	sp, sp, #0x120
  43ad0c:	stp	x29, x30, [sp, #192]
  43ad10:	add	x29, sp, #0xc0
  43ad14:	ldr	x8, [x29, #96]
  43ad18:	stp	x28, x27, [sp, #208]
  43ad1c:	stp	x26, x25, [sp, #224]
  43ad20:	stp	x24, x23, [sp, #240]
  43ad24:	stp	x22, x21, [sp, #256]
  43ad28:	stp	x20, x19, [sp, #272]
  43ad2c:	str	x7, [sp, #80]
  43ad30:	stur	x6, [x29, #-48]
  43ad34:	mov	w19, w5
  43ad38:	mov	w20, w4
  43ad3c:	mov	x23, x3
  43ad40:	mov	x21, x2
  43ad44:	mov	x27, x1
  43ad48:	str	x8, [sp, #96]
  43ad4c:	mov	x24, x0
  43ad50:	bl	404a00 <__ctype_get_mb_cur_max@plt>
  43ad54:	mov	w1, w20
  43ad58:	mov	x22, xzr
  43ad5c:	mov	w8, wzr
  43ad60:	mov	w28, wzr
  43ad64:	str	w19, [sp, #64]
  43ad68:	ubfx	w19, w19, #1, #1
  43ad6c:	add	x9, x21, #0x1
  43ad70:	mov	w15, #0x1                   	// #1
  43ad74:	str	x0, [sp, #56]
  43ad78:	stur	xzr, [x29, #-80]
  43ad7c:	stur	xzr, [x29, #-56]
  43ad80:	str	wzr, [sp, #88]
  43ad84:	stur	x9, [x29, #-72]
  43ad88:	cmp	w1, #0xa
  43ad8c:	b.hi	43b960 <argp_usage@@Base+0x9d64>  // b.pmore
  43ad90:	adrp	x12, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ad94:	mov	w9, w1
  43ad98:	add	x12, x12, #0xc08
  43ad9c:	adr	x10, 43adc0 <argp_usage@@Base+0x91c4>
  43ada0:	ldrb	w11, [x12, x9]
  43ada4:	add	x10, x10, x11, lsl #2
  43ada8:	mov	x26, x27
  43adac:	mov	x20, xzr
  43adb0:	mov	w16, wzr
  43adb4:	mov	w9, #0x1                   	// #1
  43adb8:	mov	w27, w28
  43adbc:	br	x10
  43adc0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43adc4:	add	x0, x0, #0xd5e
  43adc8:	mov	w20, w1
  43adcc:	mov	w22, w15
  43add0:	bl	43c078 <argp_usage@@Base+0xa47c>
  43add4:	str	x0, [sp, #80]
  43add8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x17da0>
  43addc:	add	x0, x0, #0x824
  43ade0:	mov	w1, w20
  43ade4:	bl	43c078 <argp_usage@@Base+0xa47c>
  43ade8:	mov	w15, w22
  43adec:	mov	w1, w20
  43adf0:	str	x0, [sp, #96]
  43adf4:	stur	w1, [x29, #-28]
  43adf8:	tbnz	w19, #0, 43ae38 <argp_usage@@Base+0x923c>
  43adfc:	ldr	x8, [sp, #80]
  43ae00:	ldrb	w9, [x8]
  43ae04:	cbz	w9, 43ae38 <argp_usage@@Base+0x923c>
  43ae08:	mov	w27, w15
  43ae0c:	mov	x10, xzr
  43ae10:	add	x8, x8, #0x1
  43ae14:	b	43ae28 <argp_usage@@Base+0x922c>
  43ae18:	ldrb	w9, [x8, x10]
  43ae1c:	add	x20, x10, #0x1
  43ae20:	mov	x10, x20
  43ae24:	cbz	w9, 43ae40 <argp_usage@@Base+0x9244>
  43ae28:	cmp	x10, x26
  43ae2c:	b.cs	43ae18 <argp_usage@@Base+0x921c>  // b.hs, b.nlast
  43ae30:	strb	w9, [x24, x10]
  43ae34:	b	43ae18 <argp_usage@@Base+0x921c>
  43ae38:	mov	w27, w15
  43ae3c:	mov	x20, xzr
  43ae40:	ldr	x25, [sp, #96]
  43ae44:	mov	x0, x25
  43ae48:	bl	404190 <strlen@plt>
  43ae4c:	ldur	w1, [x29, #-28]
  43ae50:	mov	x22, x0
  43ae54:	stur	x25, [x29, #-56]
  43ae58:	mov	w9, #0x1                   	// #1
  43ae5c:	mov	w16, w19
  43ae60:	mov	w15, w27
  43ae64:	mov	w27, w28
  43ae68:	b	43af14 <argp_usage@@Base+0x9318>
  43ae6c:	mov	w19, #0x1                   	// #1
  43ae70:	mov	w1, #0x5                   	// #5
  43ae74:	tbz	w19, #0, 43aea0 <argp_usage@@Base+0x92a4>
  43ae78:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  43ae7c:	mov	x20, xzr
  43ae80:	mov	w22, #0x1                   	// #1
  43ae84:	add	x8, x8, #0x36a
  43ae88:	stur	x8, [x29, #-56]
  43ae8c:	b	43aec0 <argp_usage@@Base+0x92c4>
  43ae90:	mov	x20, xzr
  43ae94:	mov	w16, wzr
  43ae98:	mov	w9, w8
  43ae9c:	b	43af14 <argp_usage@@Base+0x9318>
  43aea0:	cbz	x26, 43aeac <argp_usage@@Base+0x92b0>
  43aea4:	mov	w8, #0x22                  	// #34
  43aea8:	strb	w8, [x24]
  43aeac:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x18da0>
  43aeb0:	add	x8, x8, #0x36a
  43aeb4:	mov	w20, #0x1                   	// #1
  43aeb8:	stur	x8, [x29, #-56]
  43aebc:	mov	w22, #0x1                   	// #1
  43aec0:	mov	w9, #0x1                   	// #1
  43aec4:	b	43af10 <argp_usage@@Base+0x9314>
  43aec8:	mov	w8, #0x1                   	// #1
  43aecc:	mov	w19, #0x1                   	// #1
  43aed0:	eor	w9, w19, #0x1
  43aed4:	orr	w8, w8, w9
  43aed8:	tbz	w19, #0, 43aee8 <argp_usage@@Base+0x92ec>
  43aedc:	mov	x20, xzr
  43aee0:	mov	w1, #0x2                   	// #2
  43aee4:	b	43aefc <argp_usage@@Base+0x9300>
  43aee8:	cbz	x26, 43aef4 <argp_usage@@Base+0x92f8>
  43aeec:	mov	w9, #0x27                  	// #39
  43aef0:	strb	w9, [x24]
  43aef4:	mov	w1, #0x2                   	// #2
  43aef8:	mov	w20, #0x1                   	// #1
  43aefc:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x17da0>
  43af00:	add	x9, x9, #0x824
  43af04:	stur	x9, [x29, #-56]
  43af08:	mov	w22, #0x1                   	// #1
  43af0c:	mov	w9, w8
  43af10:	mov	w16, w19
  43af14:	ldur	x8, [x29, #-48]
  43af18:	mov	w14, w9
  43af1c:	eor	w17, w16, #0x1
  43af20:	stur	w17, [x29, #-60]
  43af24:	cmp	x8, #0x0
  43af28:	cset	w8, eq  // eq = none
  43af2c:	cmp	x22, #0x0
  43af30:	cset	w9, ne  // ne = any
  43af34:	cmp	w1, #0x2
  43af38:	cset	w10, ne  // ne = any
  43af3c:	and	w13, w10, w14
  43af40:	and	w11, w9, w16
  43af44:	orr	w10, w10, w17
  43af48:	and	w17, w9, w13
  43af4c:	orr	w9, w13, w16
  43af50:	eor	w9, w9, #0x1
  43af54:	cset	w12, eq  // eq = none
  43af58:	orr	w8, w8, w9
  43af5c:	mov	x25, xzr
  43af60:	and	w11, w14, w11
  43af64:	stur	w10, [x29, #-84]
  43af68:	and	w10, w12, w16
  43af6c:	stur	w8, [x29, #-24]
  43af70:	eor	w8, w14, #0x1
  43af74:	str	w11, [sp, #72]
  43af78:	str	w10, [sp, #92]
  43af7c:	stur	w14, [x29, #-64]
  43af80:	str	w8, [sp, #76]
  43af84:	stp	w16, w1, [x29, #-32]
  43af88:	stur	w17, [x29, #-36]
  43af8c:	b	43af94 <argp_usage@@Base+0x9398>
  43af90:	add	x25, x25, #0x1
  43af94:	cmn	x23, #0x1
  43af98:	b.eq	43afac <argp_usage@@Base+0x93b0>  // b.none
  43af9c:	cmp	x25, x23
  43afa0:	cset	w8, eq  // eq = none
  43afa4:	tbz	w8, #0, 43afbc <argp_usage@@Base+0x93c0>
  43afa8:	b	43b810 <argp_usage@@Base+0x9c14>
  43afac:	ldrb	w8, [x21, x25]
  43afb0:	cmp	w8, #0x0
  43afb4:	cset	w8, eq  // eq = none
  43afb8:	tbnz	w8, #0, 43b810 <argp_usage@@Base+0x9c14>
  43afbc:	cbz	w17, 43aff8 <argp_usage@@Base+0x93fc>
  43afc0:	cmp	x22, #0x2
  43afc4:	add	x19, x25, x22
  43afc8:	b.cc	43aff0 <argp_usage@@Base+0x93f4>  // b.lo, b.ul, b.last
  43afcc:	cmn	x23, #0x1
  43afd0:	b.ne	43aff0 <argp_usage@@Base+0x93f4>  // b.any
  43afd4:	mov	x0, x21
  43afd8:	mov	w23, w15
  43afdc:	bl	404190 <strlen@plt>
  43afe0:	ldp	w17, w16, [x29, #-36]
  43afe4:	ldur	w1, [x29, #-28]
  43afe8:	mov	w15, w23
  43afec:	mov	x23, x0
  43aff0:	cmp	x19, x23
  43aff4:	b.ls	43b134 <argp_usage@@Base+0x9538>  // b.plast
  43aff8:	mov	w28, wzr
  43affc:	ldrb	w19, [x21, x25]
  43b000:	cmp	w19, #0x7e
  43b004:	b.hi	43b268 <argp_usage@@Base+0x966c>  // b.pmore
  43b008:	adrp	x14, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43b00c:	add	x14, x14, #0xc13
  43b010:	adr	x13, 43b034 <argp_usage@@Base+0x9438>
  43b014:	ldrb	w10, [x14, x19]
  43b018:	add	x13, x13, x10, lsl #2
  43b01c:	mov	w11, wzr
  43b020:	mov	w9, wzr
  43b024:	mov	w8, #0x1                   	// #1
  43b028:	mov	w12, #0x6e                  	// #110
  43b02c:	mov	w10, #0x61                  	// #97
  43b030:	br	x13
  43b034:	ldur	w10, [x29, #-24]
  43b038:	tbnz	w10, #0, 43b058 <argp_usage@@Base+0x945c>
  43b03c:	ldur	x11, [x29, #-48]
  43b040:	ubfx	w10, w19, #5, #3
  43b044:	ldr	w10, [x11, w10, uxtw #2]
  43b048:	lsr	w10, w10, w19
  43b04c:	tbz	w10, #0, 43b058 <argp_usage@@Base+0x945c>
  43b050:	mov	w10, w19
  43b054:	b	43b060 <argp_usage@@Base+0x9464>
  43b058:	mov	w10, w19
  43b05c:	tbz	w28, #0, 43b0d8 <argp_usage@@Base+0x94dc>
  43b060:	tbz	w16, #0, 43b06c <argp_usage@@Base+0x9470>
  43b064:	mov	w10, #0x10                  	// #16
  43b068:	b	43b124 <argp_usage@@Base+0x9528>
  43b06c:	cmp	w1, #0x2
  43b070:	cset	w9, ne  // ne = any
  43b074:	orr	w9, w9, w27
  43b078:	tbnz	w9, #0, 43b0bc <argp_usage@@Base+0x94c0>
  43b07c:	cmp	x20, x26
  43b080:	b.cs	43b08c <argp_usage@@Base+0x9490>  // b.hs, b.nlast
  43b084:	mov	w9, #0x27                  	// #39
  43b088:	strb	w9, [x24, x20]
  43b08c:	add	x9, x20, #0x1
  43b090:	cmp	x9, x26
  43b094:	b.cs	43b0a0 <argp_usage@@Base+0x94a4>  // b.hs, b.nlast
  43b098:	mov	w11, #0x24                  	// #36
  43b09c:	strb	w11, [x24, x9]
  43b0a0:	add	x9, x20, #0x2
  43b0a4:	cmp	x9, x26
  43b0a8:	b.cs	43b0b4 <argp_usage@@Base+0x94b8>  // b.hs, b.nlast
  43b0ac:	mov	w11, #0x27                  	// #39
  43b0b0:	strb	w11, [x24, x9]
  43b0b4:	add	x20, x20, #0x3
  43b0b8:	mov	w27, #0x1                   	// #1
  43b0bc:	cmp	x20, x26
  43b0c0:	b.cs	43b0cc <argp_usage@@Base+0x94d0>  // b.hs, b.nlast
  43b0c4:	mov	w9, #0x5c                  	// #92
  43b0c8:	strb	w9, [x24, x20]
  43b0cc:	add	x20, x20, #0x1
  43b0d0:	mov	w9, #0x1                   	// #1
  43b0d4:	mov	w19, w10
  43b0d8:	tbnz	w9, #0, 43b10c <argp_usage@@Base+0x9510>
  43b0dc:	tbz	w27, #0, 43b10c <argp_usage@@Base+0x9510>
  43b0e0:	cmp	x20, x26
  43b0e4:	b.cs	43b0f0 <argp_usage@@Base+0x94f4>  // b.hs, b.nlast
  43b0e8:	mov	w9, #0x27                  	// #39
  43b0ec:	strb	w9, [x24, x20]
  43b0f0:	add	x9, x20, #0x1
  43b0f4:	cmp	x9, x26
  43b0f8:	b.cs	43b104 <argp_usage@@Base+0x9508>  // b.hs, b.nlast
  43b0fc:	mov	w10, #0x27                  	// #39
  43b100:	strb	w10, [x24, x9]
  43b104:	mov	w27, wzr
  43b108:	add	x20, x20, #0x2
  43b10c:	cmp	x20, x26
  43b110:	b.cs	43b118 <argp_usage@@Base+0x951c>  // b.hs, b.nlast
  43b114:	strb	w19, [x24, x20]
  43b118:	mov	w10, wzr
  43b11c:	add	x20, x20, #0x1
  43b120:	and	w15, w15, w8
  43b124:	cbz	w10, 43af90 <argp_usage@@Base+0x9394>
  43b128:	cmp	w10, #0xf
  43b12c:	b.eq	43af90 <argp_usage@@Base+0x9394>  // b.none
  43b130:	b	43b894 <argp_usage@@Base+0x9c98>
  43b134:	ldur	x1, [x29, #-56]
  43b138:	add	x0, x21, x25
  43b13c:	mov	x2, x22
  43b140:	mov	w19, w15
  43b144:	bl	4046d0 <bcmp@plt>
  43b148:	ldur	w9, [x29, #-60]
  43b14c:	cmp	w0, #0x0
  43b150:	cset	w8, ne  // ne = any
  43b154:	cset	w28, eq  // eq = none
  43b158:	orr	w8, w8, w9
  43b15c:	tbz	w8, #0, 43b170 <argp_usage@@Base+0x9574>
  43b160:	ldp	w16, w1, [x29, #-32]
  43b164:	ldur	w17, [x29, #-36]
  43b168:	mov	w15, w19
  43b16c:	b	43affc <argp_usage@@Base+0x9400>
  43b170:	ldp	w16, w1, [x29, #-32]
  43b174:	ldur	w17, [x29, #-36]
  43b178:	mov	w10, #0x10                  	// #16
  43b17c:	mov	w15, w19
  43b180:	b	43b124 <argp_usage@@Base+0x9528>
  43b184:	cmp	x23, #0x1
  43b188:	b.eq	43b1ac <argp_usage@@Base+0x95b0>  // b.none
  43b18c:	cmn	x23, #0x1
  43b190:	b.ne	43b1b0 <argp_usage@@Base+0x95b4>  // b.any
  43b194:	ldrb	w8, [x21, #1]
  43b198:	cbz	w8, 43b1ac <argp_usage@@Base+0x95b0>
  43b19c:	mov	w9, wzr
  43b1a0:	mov	w8, wzr
  43b1a4:	mov	x23, #0xffffffffffffffff    	// #-1
  43b1a8:	b	43b034 <argp_usage@@Base+0x9438>
  43b1ac:	cbz	x25, 43b1bc <argp_usage@@Base+0x95c0>
  43b1b0:	mov	w9, wzr
  43b1b4:	mov	w8, wzr
  43b1b8:	b	43b034 <argp_usage@@Base+0x9438>
  43b1bc:	mov	w11, #0x1                   	// #1
  43b1c0:	cmp	w1, #0x2
  43b1c4:	b.ne	43b1cc <argp_usage@@Base+0x95d0>  // b.any
  43b1c8:	tbnz	w16, #0, 43b064 <argp_usage@@Base+0x9468>
  43b1cc:	mov	w9, wzr
  43b1d0:	mov	w8, w11
  43b1d4:	b	43b034 <argp_usage@@Base+0x9438>
  43b1d8:	cmp	w1, #0x2
  43b1dc:	b.ne	43b298 <argp_usage@@Base+0x969c>  // b.any
  43b1e0:	tbnz	w16, #0, 43b064 <argp_usage@@Base+0x9468>
  43b1e4:	b	43b2a4 <argp_usage@@Base+0x96a8>
  43b1e8:	mov	w10, #0x66                  	// #102
  43b1ec:	b	43b2bc <argp_usage@@Base+0x96c0>
  43b1f0:	mov	w12, #0x74                  	// #116
  43b1f4:	b	43b2b0 <argp_usage@@Base+0x96b4>
  43b1f8:	mov	w10, #0x62                  	// #98
  43b1fc:	b	43b2bc <argp_usage@@Base+0x96c0>
  43b200:	mov	w12, #0x72                  	// #114
  43b204:	b	43b2b0 <argp_usage@@Base+0x96b4>
  43b208:	ldur	w8, [x29, #-64]
  43b20c:	tbz	w8, #0, 43b2d0 <argp_usage@@Base+0x96d4>
  43b210:	tbnz	w16, #0, 43b064 <argp_usage@@Base+0x9468>
  43b214:	cmp	w1, #0x2
  43b218:	cset	w8, ne  // ne = any
  43b21c:	orr	w8, w8, w27
  43b220:	tbz	w8, #0, 43b730 <argp_usage@@Base+0x9b34>
  43b224:	mov	x9, x20
  43b228:	b	43b770 <argp_usage@@Base+0x9b74>
  43b22c:	cmp	w1, #0x5
  43b230:	b.eq	43b44c <argp_usage@@Base+0x9850>  // b.none
  43b234:	cmp	w1, #0x2
  43b238:	b.ne	43b1b0 <argp_usage@@Base+0x95b4>  // b.any
  43b23c:	tbz	w16, #0, 43b1b0 <argp_usage@@Base+0x95b4>
  43b240:	b	43b064 <argp_usage@@Base+0x9468>
  43b244:	mov	w10, #0x76                  	// #118
  43b248:	b	43b2bc <argp_usage@@Base+0x96c0>
  43b24c:	cmp	w1, #0x2
  43b250:	b.ne	43b2e0 <argp_usage@@Base+0x96e4>  // b.any
  43b254:	tbz	w16, #0, 43b530 <argp_usage@@Base+0x9934>
  43b258:	mov	w8, #0x1                   	// #1
  43b25c:	mov	w10, #0x10                  	// #16
  43b260:	str	w8, [sp, #88]
  43b264:	b	43b124 <argp_usage@@Base+0x9528>
  43b268:	ldr	x8, [sp, #56]
  43b26c:	str	w15, [sp, #52]
  43b270:	str	x24, [sp, #40]
  43b274:	cmp	x8, #0x1
  43b278:	b.ne	43b2e8 <argp_usage@@Base+0x96ec>  // b.any
  43b27c:	bl	404950 <__ctype_b_loc@plt>
  43b280:	ldr	x8, [x0]
  43b284:	ldur	w1, [x29, #-28]
  43b288:	mov	w24, #0x1                   	// #1
  43b28c:	ldrh	w8, [x8, x19, lsl #1]
  43b290:	ubfx	w10, w8, #14, #1
  43b294:	b	43b5b0 <argp_usage@@Base+0x99b4>
  43b298:	ldr	w8, [sp, #72]
  43b29c:	mov	w12, w19
  43b2a0:	tbz	w8, #0, 43b2b0 <argp_usage@@Base+0x96b4>
  43b2a4:	mov	w9, wzr
  43b2a8:	mov	w8, wzr
  43b2ac:	b	43b0d8 <argp_usage@@Base+0x94dc>
  43b2b0:	ldur	w8, [x29, #-84]
  43b2b4:	mov	w10, w12
  43b2b8:	tbz	w8, #0, 43b064 <argp_usage@@Base+0x9468>
  43b2bc:	ldur	w11, [x29, #-64]
  43b2c0:	mov	w9, wzr
  43b2c4:	mov	w8, wzr
  43b2c8:	tbz	w11, #0, 43b034 <argp_usage@@Base+0x9438>
  43b2cc:	b	43b060 <argp_usage@@Base+0x9464>
  43b2d0:	ldr	w8, [sp, #64]
  43b2d4:	tbz	w8, #0, 43b1b0 <argp_usage@@Base+0x95b4>
  43b2d8:	mov	w10, #0xf                   	// #15
  43b2dc:	b	43b124 <argp_usage@@Base+0x9528>
  43b2e0:	mov	w9, wzr
  43b2e4:	b	43b59c <argp_usage@@Base+0x99a0>
  43b2e8:	cmn	x23, #0x1
  43b2ec:	str	x22, [sp, #16]
  43b2f0:	stur	xzr, [x29, #-16]
  43b2f4:	b.ne	43b304 <argp_usage@@Base+0x9708>  // b.any
  43b2f8:	mov	x0, x21
  43b2fc:	bl	404190 <strlen@plt>
  43b300:	mov	x23, x0
  43b304:	sub	x8, x23, x25
  43b308:	str	x8, [sp, #8]
  43b30c:	add	x8, x21, x25
  43b310:	str	x8, [sp, #32]
  43b314:	ldur	x8, [x29, #-72]
  43b318:	mov	x24, xzr
  43b31c:	add	x8, x8, x25
  43b320:	str	x8, [sp, #24]
  43b324:	mov	w8, #0x1                   	// #1
  43b328:	str	w8, [sp, #68]
  43b32c:	add	x8, x24, x25
  43b330:	add	x1, x21, x8
  43b334:	sub	x2, x23, x8
  43b338:	sub	x0, x29, #0x14
  43b33c:	sub	x3, x29, #0x10
  43b340:	mov	w22, w27
  43b344:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  43b348:	cbz	x0, 43b3a0 <argp_usage@@Base+0x97a4>
  43b34c:	mov	x27, x0
  43b350:	cmn	x0, #0x1
  43b354:	b.eq	43b39c <argp_usage@@Base+0x97a0>  // b.none
  43b358:	cmn	x27, #0x2
  43b35c:	b.ne	43b3a8 <argp_usage@@Base+0x97ac>  // b.any
  43b360:	add	x8, x24, x25
  43b364:	cmp	x8, x23
  43b368:	mov	w27, w22
  43b36c:	b.cs	43b390 <argp_usage@@Base+0x9794>  // b.hs, b.nlast
  43b370:	ldr	x9, [sp, #32]
  43b374:	ldrb	w8, [x9, x24]
  43b378:	cbz	w8, 43b390 <argp_usage@@Base+0x9794>
  43b37c:	add	x24, x24, #0x1
  43b380:	add	x8, x25, x24
  43b384:	cmp	x8, x23
  43b388:	b.cc	43b374 <argp_usage@@Base+0x9778>  // b.lo, b.ul, b.last
  43b38c:	ldr	x24, [sp, #8]
  43b390:	str	wzr, [sp, #68]
  43b394:	mov	w10, #0x34                  	// #52
  43b398:	b	43b438 <argp_usage@@Base+0x983c>
  43b39c:	str	wzr, [sp, #68]
  43b3a0:	mov	w10, #0x34                  	// #52
  43b3a4:	b	43b434 <argp_usage@@Base+0x9838>
  43b3a8:	ldr	w8, [sp, #92]
  43b3ac:	cbz	w8, 43b410 <argp_usage@@Base+0x9814>
  43b3b0:	cmp	x27, #0x2
  43b3b4:	b.cc	43b408 <argp_usage@@Base+0x980c>  // b.lo, b.ul, b.last
  43b3b8:	ldr	x9, [sp, #24]
  43b3bc:	sub	x8, x27, #0x1
  43b3c0:	add	x9, x9, x24
  43b3c4:	b	43b3d4 <argp_usage@@Base+0x97d8>
  43b3c8:	subs	x8, x8, #0x1
  43b3cc:	add	x9, x9, #0x1
  43b3d0:	b.eq	43b408 <argp_usage@@Base+0x980c>  // b.none
  43b3d4:	ldrb	w10, [x9]
  43b3d8:	sub	w10, w10, #0x5b
  43b3dc:	cmp	w10, #0x21
  43b3e0:	b.hi	43b3c8 <argp_usage@@Base+0x97cc>  // b.pmore
  43b3e4:	mov	w11, #0x1                   	// #1
  43b3e8:	lsl	x10, x11, x10
  43b3ec:	mov	x11, #0x2b                  	// #43
  43b3f0:	movk	x11, #0x2, lsl #32
  43b3f4:	tst	x10, x11
  43b3f8:	b.eq	43b3c8 <argp_usage@@Base+0x97cc>  // b.none
  43b3fc:	mov	w10, #0x10                  	// #16
  43b400:	cbnz	w10, 43b434 <argp_usage@@Base+0x9838>
  43b404:	b	43b410 <argp_usage@@Base+0x9814>
  43b408:	mov	w10, wzr
  43b40c:	cbnz	w10, 43b434 <argp_usage@@Base+0x9838>
  43b410:	ldur	w0, [x29, #-20]
  43b414:	bl	404ca0 <iswprint@plt>
  43b418:	ldr	w9, [sp, #68]
  43b41c:	cmp	w0, #0x0
  43b420:	cset	w8, ne  // ne = any
  43b424:	mov	w10, wzr
  43b428:	and	w9, w9, w8
  43b42c:	add	x24, x27, x24
  43b430:	str	w9, [sp, #68]
  43b434:	mov	w27, w22
  43b438:	cbnz	w10, 43b500 <argp_usage@@Base+0x9904>
  43b43c:	sub	x0, x29, #0x10
  43b440:	bl	404890 <mbsinit@plt>
  43b444:	cbz	w0, 43b32c <argp_usage@@Base+0x9730>
  43b448:	b	43b508 <argp_usage@@Base+0x990c>
  43b44c:	ldr	w8, [sp, #64]
  43b450:	tbz	w8, #2, 43b1b0 <argp_usage@@Base+0x95b4>
  43b454:	add	x10, x25, #0x2
  43b458:	cmp	x10, x23
  43b45c:	b.cs	43b1b0 <argp_usage@@Base+0x95b4>  // b.hs, b.nlast
  43b460:	add	x8, x25, x21
  43b464:	ldrb	w8, [x8, #1]
  43b468:	cmp	w8, #0x3f
  43b46c:	b.ne	43b1b0 <argp_usage@@Base+0x95b4>  // b.any
  43b470:	ldrb	w11, [x21, x10]
  43b474:	mov	w9, wzr
  43b478:	cmp	w11, #0x3e
  43b47c:	b.hi	43b808 <argp_usage@@Base+0x9c0c>  // b.pmore
  43b480:	mov	w8, #0x1                   	// #1
  43b484:	mov	x12, #0xa38200000000        	// #179778741075968
  43b488:	lsl	x8, x8, x11
  43b48c:	movk	x12, #0x7000, lsl #48
  43b490:	tst	x8, x12
  43b494:	b.eq	43b808 <argp_usage@@Base+0x9c0c>  // b.none
  43b498:	tbnz	w16, #0, 43b064 <argp_usage@@Base+0x9468>
  43b49c:	cmp	x20, x26
  43b4a0:	b.cs	43b4ac <argp_usage@@Base+0x98b0>  // b.hs, b.nlast
  43b4a4:	mov	w8, #0x3f                  	// #63
  43b4a8:	strb	w8, [x24, x20]
  43b4ac:	add	x8, x20, #0x1
  43b4b0:	cmp	x8, x26
  43b4b4:	b.cs	43b4c0 <argp_usage@@Base+0x98c4>  // b.hs, b.nlast
  43b4b8:	mov	w9, #0x22                  	// #34
  43b4bc:	strb	w9, [x24, x8]
  43b4c0:	add	x8, x20, #0x2
  43b4c4:	cmp	x8, x26
  43b4c8:	b.cs	43b4d4 <argp_usage@@Base+0x98d8>  // b.hs, b.nlast
  43b4cc:	mov	w9, #0x22                  	// #34
  43b4d0:	strb	w9, [x24, x8]
  43b4d4:	add	x8, x20, #0x3
  43b4d8:	cmp	x8, x26
  43b4dc:	b.cs	43b4e8 <argp_usage@@Base+0x98ec>  // b.hs, b.nlast
  43b4e0:	mov	w9, #0x3f                  	// #63
  43b4e4:	strb	w9, [x24, x8]
  43b4e8:	mov	w9, wzr
  43b4ec:	mov	w8, wzr
  43b4f0:	add	x20, x20, #0x4
  43b4f4:	mov	x25, x10
  43b4f8:	mov	w19, w11
  43b4fc:	b	43b034 <argp_usage@@Base+0x9438>
  43b500:	cmp	w10, #0x34
  43b504:	b.ne	43b50c <argp_usage@@Base+0x9910>  // b.any
  43b508:	mov	w10, wzr
  43b50c:	ldp	w16, w1, [x29, #-32]
  43b510:	ldr	w15, [sp, #52]
  43b514:	ldr	x22, [sp, #16]
  43b518:	ldur	w17, [x29, #-36]
  43b51c:	cbz	w10, 43b5ac <argp_usage@@Base+0x99b0>
  43b520:	ldr	x24, [sp, #40]
  43b524:	mov	w11, wzr
  43b528:	mov	w8, wzr
  43b52c:	b	43b7ec <argp_usage@@Base+0x9bf0>
  43b530:	ldur	x10, [x29, #-80]
  43b534:	cmp	x26, #0x0
  43b538:	cset	w8, eq  // eq = none
  43b53c:	cmp	x10, #0x0
  43b540:	cset	w9, ne  // ne = any
  43b544:	orr	w8, w9, w8
  43b548:	cmp	w8, #0x0
  43b54c:	csel	x10, x10, x26, ne  // ne = any
  43b550:	csel	x26, x26, xzr, ne  // ne = any
  43b554:	cmp	x20, x26
  43b558:	stur	x10, [x29, #-80]
  43b55c:	b.cs	43b568 <argp_usage@@Base+0x996c>  // b.hs, b.nlast
  43b560:	mov	w8, #0x27                  	// #39
  43b564:	strb	w8, [x24, x20]
  43b568:	add	x8, x20, #0x1
  43b56c:	cmp	x8, x26
  43b570:	b.cs	43b57c <argp_usage@@Base+0x9980>  // b.hs, b.nlast
  43b574:	mov	w9, #0x5c                  	// #92
  43b578:	strb	w9, [x24, x8]
  43b57c:	add	x8, x20, #0x2
  43b580:	cmp	x8, x26
  43b584:	b.cs	43b590 <argp_usage@@Base+0x9994>  // b.hs, b.nlast
  43b588:	mov	w9, #0x27                  	// #39
  43b58c:	strb	w9, [x24, x8]
  43b590:	mov	w27, wzr
  43b594:	mov	w9, wzr
  43b598:	add	x20, x20, #0x3
  43b59c:	mov	w8, #0x1                   	// #1
  43b5a0:	str	w8, [sp, #88]
  43b5a4:	mov	w8, #0x1                   	// #1
  43b5a8:	b	43b034 <argp_usage@@Base+0x9438>
  43b5ac:	ldr	w10, [sp, #68]
  43b5b0:	ldr	w9, [sp, #76]
  43b5b4:	and	w8, w10, #0x1
  43b5b8:	cmp	x24, #0x1
  43b5bc:	orr	w9, w10, w9
  43b5c0:	b.hi	43b5e0 <argp_usage@@Base+0x99e4>  // b.pmore
  43b5c4:	tbz	w9, #0, 43b5e0 <argp_usage@@Base+0x99e4>
  43b5c8:	ldr	x24, [sp, #40]
  43b5cc:	ldr	w15, [sp, #52]
  43b5d0:	ldp	w17, w16, [x29, #-36]
  43b5d4:	mov	w11, wzr
  43b5d8:	mov	w10, wzr
  43b5dc:	b	43b7ec <argp_usage@@Base+0x9bf0>
  43b5e0:	add	x10, x24, x25
  43b5e4:	ldr	x24, [sp, #40]
  43b5e8:	ldr	w15, [sp, #52]
  43b5ec:	ldp	w17, w16, [x29, #-36]
  43b5f0:	mov	w11, wzr
  43b5f4:	b	43b608 <argp_usage@@Base+0x9a0c>
  43b5f8:	ldur	x13, [x29, #-72]
  43b5fc:	add	x20, x20, #0x1
  43b600:	ldrb	w19, [x13, x25]
  43b604:	mov	x25, x12
  43b608:	tbz	w9, #0, 43b62c <argp_usage@@Base+0x9a30>
  43b60c:	tbz	w28, #0, 43b6d4 <argp_usage@@Base+0x9ad8>
  43b610:	cmp	x20, x26
  43b614:	b.cs	43b620 <argp_usage@@Base+0x9a24>  // b.hs, b.nlast
  43b618:	mov	w12, #0x5c                  	// #92
  43b61c:	strb	w12, [x24, x20]
  43b620:	mov	w28, wzr
  43b624:	add	x20, x20, #0x1
  43b628:	b	43b6d4 <argp_usage@@Base+0x9ad8>
  43b62c:	tbnz	w16, #0, 43b7e8 <argp_usage@@Base+0x9bec>
  43b630:	cmp	w1, #0x2
  43b634:	cset	w11, ne  // ne = any
  43b638:	orr	w11, w11, w27
  43b63c:	tbnz	w11, #0, 43b680 <argp_usage@@Base+0x9a84>
  43b640:	cmp	x20, x26
  43b644:	b.cs	43b650 <argp_usage@@Base+0x9a54>  // b.hs, b.nlast
  43b648:	mov	w11, #0x27                  	// #39
  43b64c:	strb	w11, [x24, x20]
  43b650:	add	x11, x20, #0x1
  43b654:	cmp	x11, x26
  43b658:	b.cs	43b664 <argp_usage@@Base+0x9a68>  // b.hs, b.nlast
  43b65c:	mov	w12, #0x24                  	// #36
  43b660:	strb	w12, [x24, x11]
  43b664:	add	x11, x20, #0x2
  43b668:	cmp	x11, x26
  43b66c:	b.cs	43b678 <argp_usage@@Base+0x9a7c>  // b.hs, b.nlast
  43b670:	mov	w12, #0x27                  	// #39
  43b674:	strb	w12, [x24, x11]
  43b678:	add	x20, x20, #0x3
  43b67c:	mov	w27, #0x1                   	// #1
  43b680:	cmp	x20, x26
  43b684:	b.cs	43b690 <argp_usage@@Base+0x9a94>  // b.hs, b.nlast
  43b688:	mov	w11, #0x5c                  	// #92
  43b68c:	strb	w11, [x24, x20]
  43b690:	add	x11, x20, #0x1
  43b694:	cmp	x11, x26
  43b698:	b.cs	43b6a8 <argp_usage@@Base+0x9aac>  // b.hs, b.nlast
  43b69c:	mov	w12, #0x30                  	// #48
  43b6a0:	bfxil	w12, w19, #6, #2
  43b6a4:	strb	w12, [x24, x11]
  43b6a8:	add	x11, x20, #0x2
  43b6ac:	cmp	x11, x26
  43b6b0:	b.cs	43b6c0 <argp_usage@@Base+0x9ac4>  // b.hs, b.nlast
  43b6b4:	mov	w12, #0x30                  	// #48
  43b6b8:	bfxil	w12, w19, #3, #3
  43b6bc:	strb	w12, [x24, x11]
  43b6c0:	mov	w12, #0x30                  	// #48
  43b6c4:	bfxil	w12, w19, #0, #3
  43b6c8:	add	x20, x20, #0x3
  43b6cc:	mov	w11, #0x1                   	// #1
  43b6d0:	mov	w19, w12
  43b6d4:	add	x12, x25, #0x1
  43b6d8:	cmp	x10, x12
  43b6dc:	b.ls	43b728 <argp_usage@@Base+0x9b2c>  // b.plast
  43b6e0:	and	w13, w11, #0x1
  43b6e4:	orn	w13, w13, w27
  43b6e8:	tbnz	w13, #0, 43b718 <argp_usage@@Base+0x9b1c>
  43b6ec:	cmp	x20, x26
  43b6f0:	b.cs	43b6fc <argp_usage@@Base+0x9b00>  // b.hs, b.nlast
  43b6f4:	mov	w13, #0x27                  	// #39
  43b6f8:	strb	w13, [x24, x20]
  43b6fc:	add	x13, x20, #0x1
  43b700:	cmp	x13, x26
  43b704:	b.cs	43b710 <argp_usage@@Base+0x9b14>  // b.hs, b.nlast
  43b708:	mov	w14, #0x27                  	// #39
  43b70c:	strb	w14, [x24, x13]
  43b710:	mov	w27, wzr
  43b714:	add	x20, x20, #0x2
  43b718:	cmp	x20, x26
  43b71c:	b.cs	43b5f8 <argp_usage@@Base+0x99fc>  // b.hs, b.nlast
  43b720:	strb	w19, [x24, x20]
  43b724:	b	43b5f8 <argp_usage@@Base+0x99fc>
  43b728:	mov	w10, #0x2c                  	// #44
  43b72c:	b	43b7ec <argp_usage@@Base+0x9bf0>
  43b730:	cmp	x20, x26
  43b734:	b.cs	43b740 <argp_usage@@Base+0x9b44>  // b.hs, b.nlast
  43b738:	mov	w8, #0x27                  	// #39
  43b73c:	strb	w8, [x24, x20]
  43b740:	add	x8, x20, #0x1
  43b744:	cmp	x8, x26
  43b748:	b.cs	43b754 <argp_usage@@Base+0x9b58>  // b.hs, b.nlast
  43b74c:	mov	w9, #0x24                  	// #36
  43b750:	strb	w9, [x24, x8]
  43b754:	add	x8, x20, #0x2
  43b758:	cmp	x8, x26
  43b75c:	b.cs	43b768 <argp_usage@@Base+0x9b6c>  // b.hs, b.nlast
  43b760:	mov	w9, #0x27                  	// #39
  43b764:	strb	w9, [x24, x8]
  43b768:	add	x9, x20, #0x3
  43b76c:	mov	w27, #0x1                   	// #1
  43b770:	cmp	x9, x26
  43b774:	b.cs	43b780 <argp_usage@@Base+0x9b84>  // b.hs, b.nlast
  43b778:	mov	w8, #0x5c                  	// #92
  43b77c:	strb	w8, [x24, x9]
  43b780:	cmp	w1, #0x2
  43b784:	add	x20, x9, #0x1
  43b788:	b.eq	43b7d8 <argp_usage@@Base+0x9bdc>  // b.none
  43b78c:	add	x8, x25, #0x1
  43b790:	cmp	x8, x23
  43b794:	b.cs	43b7d8 <argp_usage@@Base+0x9bdc>  // b.hs, b.nlast
  43b798:	ldrb	w8, [x21, x8]
  43b79c:	sub	w8, w8, #0x30
  43b7a0:	cmp	w8, #0x9
  43b7a4:	b.hi	43b7d8 <argp_usage@@Base+0x9bdc>  // b.pmore
  43b7a8:	cmp	x20, x26
  43b7ac:	b.cs	43b7b8 <argp_usage@@Base+0x9bbc>  // b.hs, b.nlast
  43b7b0:	mov	w8, #0x30                  	// #48
  43b7b4:	strb	w8, [x24, x20]
  43b7b8:	add	x8, x9, #0x2
  43b7bc:	cmp	x8, x26
  43b7c0:	b.cs	43b7cc <argp_usage@@Base+0x9bd0>  // b.hs, b.nlast
  43b7c4:	mov	w10, #0x30                  	// #48
  43b7c8:	strb	w10, [x24, x8]
  43b7cc:	mov	w8, wzr
  43b7d0:	add	x20, x9, #0x3
  43b7d4:	b	43b7dc <argp_usage@@Base+0x9be0>
  43b7d8:	mov	w8, wzr
  43b7dc:	mov	w9, #0x1                   	// #1
  43b7e0:	mov	w19, #0x30                  	// #48
  43b7e4:	b	43b034 <argp_usage@@Base+0x9438>
  43b7e8:	mov	w10, #0x10                  	// #16
  43b7ec:	cmp	w8, #0x0
  43b7f0:	cset	w8, ne  // ne = any
  43b7f4:	cmp	w10, #0x2c
  43b7f8:	and	w9, w11, #0x1
  43b7fc:	b.eq	43b0d8 <argp_usage@@Base+0x94dc>  // b.none
  43b800:	cbz	w10, 43b034 <argp_usage@@Base+0x9438>
  43b804:	b	43b124 <argp_usage@@Base+0x9528>
  43b808:	mov	w8, w9
  43b80c:	b	43b034 <argp_usage@@Base+0x9438>
  43b810:	cmp	x20, #0x0
  43b814:	cset	w8, eq  // eq = none
  43b818:	cmp	w1, #0x2
  43b81c:	cset	w9, eq  // eq = none
  43b820:	and	w8, w9, w8
  43b824:	and	w8, w16, w8
  43b828:	tbnz	w8, #0, 43b89c <argp_usage@@Base+0x9ca0>
  43b82c:	ldur	w9, [x29, #-64]
  43b830:	cmp	w1, #0x2
  43b834:	cset	w8, ne  // ne = any
  43b838:	orr	w8, w16, w8
  43b83c:	tbnz	w8, #0, 43b870 <argp_usage@@Base+0x9c74>
  43b840:	ldr	w8, [sp, #88]
  43b844:	eor	w8, w8, #0x1
  43b848:	tbnz	w8, #0, 43b870 <argp_usage@@Base+0x9c74>
  43b84c:	tbnz	w15, #0, 43b93c <argp_usage@@Base+0x9d40>
  43b850:	ldur	x8, [x29, #-80]
  43b854:	cbz	x8, 43b870 <argp_usage@@Base+0x9c74>
  43b858:	mov	w28, w27
  43b85c:	ldur	x27, [x29, #-80]
  43b860:	mov	w1, #0x2                   	// #2
  43b864:	mov	w8, w9
  43b868:	mov	w19, w16
  43b86c:	cbz	x26, 43ad88 <argp_usage@@Base+0x918c>
  43b870:	ldur	x10, [x29, #-56]
  43b874:	cmp	x10, #0x0
  43b878:	cset	w8, eq  // eq = none
  43b87c:	orr	w8, w8, w16
  43b880:	tbnz	w8, #0, 43b92c <argp_usage@@Base+0x9d30>
  43b884:	ldrb	w9, [x10]
  43b888:	cbz	w9, 43b92c <argp_usage@@Base+0x9d30>
  43b88c:	add	x8, x10, #0x1
  43b890:	b	43b8f8 <argp_usage@@Base+0x9cfc>
  43b894:	cmp	w10, #0x10
  43b898:	b.ne	43b908 <argp_usage@@Base+0x9d0c>  // b.any
  43b89c:	ldur	w8, [x29, #-64]
  43b8a0:	mov	w9, #0x4                   	// #4
  43b8a4:	mov	x0, x24
  43b8a8:	mov	x2, x21
  43b8ac:	tst	w8, #0x1
  43b8b0:	mov	w8, #0x2                   	// #2
  43b8b4:	csel	w8, w9, w8, ne  // ne = any
  43b8b8:	cmp	w1, #0x2
  43b8bc:	csel	w4, w8, w1, eq  // eq = none
  43b8c0:	ldr	w8, [sp, #64]
  43b8c4:	mov	x1, x26
  43b8c8:	mov	x3, x23
  43b8cc:	mov	x6, xzr
  43b8d0:	and	w5, w8, #0xfffffffd
  43b8d4:	ldr	x8, [sp, #96]
  43b8d8:	str	x8, [sp]
  43b8dc:	ldr	x7, [sp, #80]
  43b8e0:	bl	43ad08 <argp_usage@@Base+0x910c>
  43b8e4:	mov	x20, x0
  43b8e8:	b	43b908 <argp_usage@@Base+0x9d0c>
  43b8ec:	ldrb	w9, [x8], #1
  43b8f0:	add	x20, x20, #0x1
  43b8f4:	cbz	w9, 43b92c <argp_usage@@Base+0x9d30>
  43b8f8:	cmp	x20, x26
  43b8fc:	b.cs	43b8ec <argp_usage@@Base+0x9cf0>  // b.hs, b.nlast
  43b900:	strb	w9, [x24, x20]
  43b904:	b	43b8ec <argp_usage@@Base+0x9cf0>
  43b908:	mov	x0, x20
  43b90c:	ldp	x20, x19, [sp, #272]
  43b910:	ldp	x22, x21, [sp, #256]
  43b914:	ldp	x24, x23, [sp, #240]
  43b918:	ldp	x26, x25, [sp, #224]
  43b91c:	ldp	x28, x27, [sp, #208]
  43b920:	ldp	x29, x30, [sp, #192]
  43b924:	add	sp, sp, #0x120
  43b928:	ret
  43b92c:	cmp	x20, x26
  43b930:	b.cs	43b908 <argp_usage@@Base+0x9d0c>  // b.hs, b.nlast
  43b934:	strb	wzr, [x24, x20]
  43b938:	b	43b908 <argp_usage@@Base+0x9d0c>
  43b93c:	ldr	x8, [sp, #96]
  43b940:	ldur	x1, [x29, #-80]
  43b944:	ldr	w5, [sp, #64]
  43b948:	ldur	x6, [x29, #-48]
  43b94c:	mov	w4, #0x5                   	// #5
  43b950:	mov	x0, x24
  43b954:	mov	x2, x21
  43b958:	mov	x3, x23
  43b95c:	b	43b8d8 <argp_usage@@Base+0x9cdc>
  43b960:	bl	404870 <abort@plt>
  43b964:	stp	x29, x30, [sp, #-16]!
  43b968:	mov	x3, x2
  43b96c:	mov	x2, xzr
  43b970:	mov	x29, sp
  43b974:	bl	43b980 <argp_usage@@Base+0x9d84>
  43b978:	ldp	x29, x30, [sp], #16
  43b97c:	ret
  43b980:	sub	sp, sp, #0x70
  43b984:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43b988:	add	x8, x8, #0xde0
  43b98c:	cmp	x3, #0x0
  43b990:	stp	x29, x30, [sp, #16]
  43b994:	stp	x28, x27, [sp, #32]
  43b998:	stp	x26, x25, [sp, #48]
  43b99c:	stp	x24, x23, [sp, #64]
  43b9a0:	stp	x22, x21, [sp, #80]
  43b9a4:	stp	x20, x19, [sp, #96]
  43b9a8:	add	x29, sp, #0x10
  43b9ac:	mov	x19, x2
  43b9b0:	mov	x22, x1
  43b9b4:	mov	x23, x0
  43b9b8:	csel	x21, x8, x3, eq  // eq = none
  43b9bc:	bl	404d00 <__errno_location@plt>
  43b9c0:	ldp	w4, w8, [x21]
  43b9c4:	cmp	x19, #0x0
  43b9c8:	ldp	x7, x9, [x21, #40]
  43b9cc:	ldr	w28, [x0]
  43b9d0:	cset	w10, eq  // eq = none
  43b9d4:	orr	w25, w8, w10
  43b9d8:	add	x26, x21, #0x8
  43b9dc:	mov	x24, x0
  43b9e0:	mov	x0, xzr
  43b9e4:	mov	x1, xzr
  43b9e8:	mov	x2, x23
  43b9ec:	mov	x3, x22
  43b9f0:	mov	w5, w25
  43b9f4:	mov	x6, x26
  43b9f8:	str	x9, [sp]
  43b9fc:	bl	43ad08 <argp_usage@@Base+0x910c>
  43ba00:	add	x27, x0, #0x1
  43ba04:	mov	x20, x0
  43ba08:	mov	x0, x27
  43ba0c:	bl	43d2cc <argp_usage@@Base+0xb6d0>
  43ba10:	ldr	w4, [x21]
  43ba14:	ldp	x7, x8, [x21, #40]
  43ba18:	mov	x1, x27
  43ba1c:	mov	x2, x23
  43ba20:	mov	x3, x22
  43ba24:	mov	w5, w25
  43ba28:	mov	x6, x26
  43ba2c:	mov	x21, x0
  43ba30:	str	x8, [sp]
  43ba34:	bl	43ad08 <argp_usage@@Base+0x910c>
  43ba38:	str	w28, [x24]
  43ba3c:	cbz	x19, 43ba44 <argp_usage@@Base+0x9e48>
  43ba40:	str	x20, [x19]
  43ba44:	mov	x0, x21
  43ba48:	ldp	x20, x19, [sp, #96]
  43ba4c:	ldp	x22, x21, [sp, #80]
  43ba50:	ldp	x24, x23, [sp, #64]
  43ba54:	ldp	x26, x25, [sp, #48]
  43ba58:	ldp	x28, x27, [sp, #32]
  43ba5c:	ldp	x29, x30, [sp, #16]
  43ba60:	add	sp, sp, #0x70
  43ba64:	ret
  43ba68:	stp	x29, x30, [sp, #-64]!
  43ba6c:	stp	x20, x19, [sp, #48]
  43ba70:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ba74:	stp	x22, x21, [sp, #32]
  43ba78:	ldr	w8, [x20, #1024]
  43ba7c:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43ba80:	ldr	x19, [x21, #1016]
  43ba84:	str	x23, [sp, #16]
  43ba88:	cmp	w8, #0x2
  43ba8c:	mov	x29, sp
  43ba90:	b.lt	43bab4 <argp_usage@@Base+0x9eb8>  // b.tstop
  43ba94:	add	x22, x19, #0x18
  43ba98:	mov	w23, #0x1                   	// #1
  43ba9c:	ldr	x0, [x22], #16
  43baa0:	bl	4049d0 <free@plt>
  43baa4:	ldrsw	x8, [x20, #1024]
  43baa8:	add	x23, x23, #0x1
  43baac:	cmp	x23, x8
  43bab0:	b.lt	43ba9c <argp_usage@@Base+0x9ea0>  // b.tstop
  43bab4:	ldr	x0, [x19, #8]
  43bab8:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43babc:	add	x23, x23, #0xe18
  43bac0:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43bac4:	cmp	x0, x23
  43bac8:	add	x22, x22, #0x408
  43bacc:	b.eq	43badc <argp_usage@@Base+0x9ee0>  // b.none
  43bad0:	bl	4049d0 <free@plt>
  43bad4:	mov	w8, #0x100                 	// #256
  43bad8:	stp	x8, x23, [x22]
  43badc:	cmp	x19, x22
  43bae0:	b.eq	43baf0 <argp_usage@@Base+0x9ef4>  // b.none
  43bae4:	mov	x0, x19
  43bae8:	bl	4049d0 <free@plt>
  43baec:	str	x22, [x21, #1016]
  43baf0:	mov	w8, #0x1                   	// #1
  43baf4:	str	w8, [x20, #1024]
  43baf8:	ldp	x20, x19, [sp, #48]
  43bafc:	ldp	x22, x21, [sp, #32]
  43bb00:	ldr	x23, [sp, #16]
  43bb04:	ldp	x29, x30, [sp], #64
  43bb08:	ret
  43bb0c:	stp	x29, x30, [sp, #-16]!
  43bb10:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43bb14:	add	x3, x3, #0xde0
  43bb18:	mov	x2, #0xffffffffffffffff    	// #-1
  43bb1c:	mov	x29, sp
  43bb20:	bl	43bb2c <argp_usage@@Base+0x9f30>
  43bb24:	ldp	x29, x30, [sp], #16
  43bb28:	ret
  43bb2c:	sub	sp, sp, #0x80
  43bb30:	stp	x29, x30, [sp, #32]
  43bb34:	add	x29, sp, #0x20
  43bb38:	stp	x28, x27, [sp, #48]
  43bb3c:	stp	x26, x25, [sp, #64]
  43bb40:	stp	x24, x23, [sp, #80]
  43bb44:	stp	x22, x21, [sp, #96]
  43bb48:	stp	x20, x19, [sp, #112]
  43bb4c:	mov	x22, x3
  43bb50:	stur	x2, [x29, #-8]
  43bb54:	mov	x21, x1
  43bb58:	mov	w23, w0
  43bb5c:	bl	404d00 <__errno_location@plt>
  43bb60:	tbnz	w23, #31, 43bcb0 <argp_usage@@Base+0xa0b4>
  43bb64:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43bb68:	ldr	w8, [x25, #1024]
  43bb6c:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43bb70:	ldr	w20, [x0]
  43bb74:	ldr	x27, [x28, #1016]
  43bb78:	mov	x19, x0
  43bb7c:	cmp	w8, w23
  43bb80:	b.gt	43bbec <argp_usage@@Base+0x9ff0>
  43bb84:	mov	w8, #0x7fffffff            	// #2147483647
  43bb88:	cmp	w23, w8
  43bb8c:	stur	w20, [x29, #-12]
  43bb90:	b.eq	43bcb4 <argp_usage@@Base+0xa0b8>  // b.none
  43bb94:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43bb98:	add	x20, x20, #0x408
  43bb9c:	add	w26, w23, #0x1
  43bba0:	cmp	x27, x20
  43bba4:	csel	x0, xzr, x27, eq  // eq = none
  43bba8:	sbfiz	x1, x26, #4, #32
  43bbac:	bl	43d21c <argp_usage@@Base+0xb620>
  43bbb0:	mov	x24, x0
  43bbb4:	cmp	x27, x20
  43bbb8:	str	x0, [x28, #1016]
  43bbbc:	b.ne	43bbc8 <argp_usage@@Base+0x9fcc>  // b.any
  43bbc0:	ldr	q0, [x20]
  43bbc4:	str	q0, [x24]
  43bbc8:	ldrsw	x8, [x25, #1024]
  43bbcc:	mov	w1, wzr
  43bbd0:	add	x0, x24, x8, lsl #4
  43bbd4:	sub	w8, w26, w8
  43bbd8:	sbfiz	x2, x8, #4, #32
  43bbdc:	bl	404600 <memset@plt>
  43bbe0:	ldur	w20, [x29, #-12]
  43bbe4:	mov	x27, x24
  43bbe8:	str	w26, [x25, #1024]
  43bbec:	add	x28, x27, w23, sxtw #4
  43bbf0:	mov	x27, x28
  43bbf4:	ldr	x26, [x28]
  43bbf8:	ldr	x23, [x27, #8]!
  43bbfc:	ldp	w4, w8, [x22]
  43bc00:	ldp	x7, x9, [x22, #40]
  43bc04:	ldur	x3, [x29, #-8]
  43bc08:	add	x24, x22, #0x8
  43bc0c:	orr	w25, w8, #0x1
  43bc10:	mov	x0, x23
  43bc14:	mov	x1, x26
  43bc18:	mov	x2, x21
  43bc1c:	mov	w5, w25
  43bc20:	mov	x6, x24
  43bc24:	str	x9, [sp]
  43bc28:	bl	43ad08 <argp_usage@@Base+0x910c>
  43bc2c:	cmp	x26, x0
  43bc30:	b.hi	43bc88 <argp_usage@@Base+0xa08c>  // b.pmore
  43bc34:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43bc38:	add	x8, x8, #0xe18
  43bc3c:	add	x26, x0, #0x1
  43bc40:	cmp	x23, x8
  43bc44:	str	x26, [x28]
  43bc48:	b.eq	43bc54 <argp_usage@@Base+0xa058>  // b.none
  43bc4c:	mov	x0, x23
  43bc50:	bl	4049d0 <free@plt>
  43bc54:	mov	x0, x26
  43bc58:	bl	43d2cc <argp_usage@@Base+0xb6d0>
  43bc5c:	str	x0, [x27]
  43bc60:	ldr	w4, [x22]
  43bc64:	ldp	x7, x8, [x22, #40]
  43bc68:	ldur	x3, [x29, #-8]
  43bc6c:	mov	x1, x26
  43bc70:	mov	x2, x21
  43bc74:	mov	w5, w25
  43bc78:	mov	x6, x24
  43bc7c:	mov	x23, x0
  43bc80:	str	x8, [sp]
  43bc84:	bl	43ad08 <argp_usage@@Base+0x910c>
  43bc88:	str	w20, [x19]
  43bc8c:	mov	x0, x23
  43bc90:	ldp	x20, x19, [sp, #112]
  43bc94:	ldp	x22, x21, [sp, #96]
  43bc98:	ldp	x24, x23, [sp, #80]
  43bc9c:	ldp	x26, x25, [sp, #64]
  43bca0:	ldp	x28, x27, [sp, #48]
  43bca4:	ldp	x29, x30, [sp, #32]
  43bca8:	add	sp, sp, #0x80
  43bcac:	ret
  43bcb0:	bl	404870 <abort@plt>
  43bcb4:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43bcb8:	stp	x29, x30, [sp, #-16]!
  43bcbc:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43bcc0:	add	x3, x3, #0xde0
  43bcc4:	mov	x29, sp
  43bcc8:	bl	43bb2c <argp_usage@@Base+0x9f30>
  43bccc:	ldp	x29, x30, [sp], #16
  43bcd0:	ret
  43bcd4:	stp	x29, x30, [sp, #-16]!
  43bcd8:	mov	x1, x0
  43bcdc:	mov	w0, wzr
  43bce0:	mov	x29, sp
  43bce4:	bl	43bb0c <argp_usage@@Base+0x9f10>
  43bce8:	ldp	x29, x30, [sp], #16
  43bcec:	ret
  43bcf0:	stp	x29, x30, [sp, #-16]!
  43bcf4:	mov	x2, x1
  43bcf8:	mov	x1, x0
  43bcfc:	mov	w0, wzr
  43bd00:	mov	x29, sp
  43bd04:	bl	43bcb8 <argp_usage@@Base+0xa0bc>
  43bd08:	ldp	x29, x30, [sp], #16
  43bd0c:	ret
  43bd10:	sub	sp, sp, #0x60
  43bd14:	stp	x20, x19, [sp, #80]
  43bd18:	mov	w20, w0
  43bd1c:	add	x8, sp, #0x8
  43bd20:	mov	w0, w1
  43bd24:	stp	x29, x30, [sp, #64]
  43bd28:	add	x29, sp, #0x40
  43bd2c:	mov	x19, x2
  43bd30:	bl	43bd58 <argp_usage@@Base+0xa15c>
  43bd34:	add	x3, sp, #0x8
  43bd38:	mov	x2, #0xffffffffffffffff    	// #-1
  43bd3c:	mov	w0, w20
  43bd40:	mov	x1, x19
  43bd44:	bl	43bb2c <argp_usage@@Base+0x9f30>
  43bd48:	ldp	x20, x19, [sp, #80]
  43bd4c:	ldp	x29, x30, [sp, #64]
  43bd50:	add	sp, sp, #0x60
  43bd54:	ret
  43bd58:	stp	x29, x30, [sp, #-16]!
  43bd5c:	movi	v0.2d, #0x0
  43bd60:	cmp	w0, #0xa
  43bd64:	mov	x29, sp
  43bd68:	str	xzr, [x8, #48]
  43bd6c:	stp	q0, q0, [x8, #16]
  43bd70:	str	q0, [x8]
  43bd74:	b.eq	43bd84 <argp_usage@@Base+0xa188>  // b.none
  43bd78:	str	w0, [x8]
  43bd7c:	ldp	x29, x30, [sp], #16
  43bd80:	ret
  43bd84:	bl	404870 <abort@plt>
  43bd88:	sub	sp, sp, #0x70
  43bd8c:	str	x21, [sp, #80]
  43bd90:	mov	w21, w0
  43bd94:	add	x8, sp, #0x8
  43bd98:	mov	w0, w1
  43bd9c:	stp	x29, x30, [sp, #64]
  43bda0:	stp	x20, x19, [sp, #96]
  43bda4:	add	x29, sp, #0x40
  43bda8:	mov	x19, x3
  43bdac:	mov	x20, x2
  43bdb0:	bl	43bd58 <argp_usage@@Base+0xa15c>
  43bdb4:	add	x3, sp, #0x8
  43bdb8:	mov	w0, w21
  43bdbc:	mov	x1, x20
  43bdc0:	mov	x2, x19
  43bdc4:	bl	43bb2c <argp_usage@@Base+0x9f30>
  43bdc8:	ldp	x20, x19, [sp, #96]
  43bdcc:	ldr	x21, [sp, #80]
  43bdd0:	ldp	x29, x30, [sp, #64]
  43bdd4:	add	sp, sp, #0x70
  43bdd8:	ret
  43bddc:	stp	x29, x30, [sp, #-16]!
  43bde0:	mov	x2, x1
  43bde4:	mov	w1, w0
  43bde8:	mov	w0, wzr
  43bdec:	mov	x29, sp
  43bdf0:	bl	43bd10 <argp_usage@@Base+0xa114>
  43bdf4:	ldp	x29, x30, [sp], #16
  43bdf8:	ret
  43bdfc:	stp	x29, x30, [sp, #-16]!
  43be00:	mov	x3, x2
  43be04:	mov	x2, x1
  43be08:	mov	w1, w0
  43be0c:	mov	w0, wzr
  43be10:	mov	x29, sp
  43be14:	bl	43bd88 <argp_usage@@Base+0xa18c>
  43be18:	ldp	x29, x30, [sp], #16
  43be1c:	ret
  43be20:	sub	sp, sp, #0x60
  43be24:	adrp	x9, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43be28:	add	x9, x9, #0xde0
  43be2c:	ldp	q0, q1, [x9]
  43be30:	ldr	q2, [x9, #32]
  43be34:	ldr	x9, [x9, #48]
  43be38:	mov	w8, w2
  43be3c:	stp	x20, x19, [sp, #80]
  43be40:	mov	x19, x1
  43be44:	mov	x20, x0
  43be48:	mov	x0, sp
  43be4c:	mov	w2, #0x1                   	// #1
  43be50:	mov	w1, w8
  43be54:	stp	x29, x30, [sp, #64]
  43be58:	add	x29, sp, #0x40
  43be5c:	stp	q0, q1, [sp]
  43be60:	str	q2, [sp, #32]
  43be64:	str	x9, [sp, #48]
  43be68:	bl	43abec <argp_usage@@Base+0x8ff0>
  43be6c:	mov	x3, sp
  43be70:	mov	w0, wzr
  43be74:	mov	x1, x20
  43be78:	mov	x2, x19
  43be7c:	bl	43bb2c <argp_usage@@Base+0x9f30>
  43be80:	ldp	x20, x19, [sp, #80]
  43be84:	ldp	x29, x30, [sp, #64]
  43be88:	add	sp, sp, #0x60
  43be8c:	ret
  43be90:	stp	x29, x30, [sp, #-16]!
  43be94:	mov	w2, w1
  43be98:	mov	x1, #0xffffffffffffffff    	// #-1
  43be9c:	mov	x29, sp
  43bea0:	bl	43be20 <argp_usage@@Base+0xa224>
  43bea4:	ldp	x29, x30, [sp], #16
  43bea8:	ret
  43beac:	stp	x29, x30, [sp, #-16]!
  43beb0:	mov	w1, #0x3a                  	// #58
  43beb4:	mov	x29, sp
  43beb8:	bl	43be90 <argp_usage@@Base+0xa294>
  43bebc:	ldp	x29, x30, [sp], #16
  43bec0:	ret
  43bec4:	stp	x29, x30, [sp, #-16]!
  43bec8:	mov	w2, #0x3a                  	// #58
  43becc:	mov	x29, sp
  43bed0:	bl	43be20 <argp_usage@@Base+0xa224>
  43bed4:	ldp	x29, x30, [sp], #16
  43bed8:	ret
  43bedc:	sub	sp, sp, #0x60
  43bee0:	stp	x20, x19, [sp, #80]
  43bee4:	mov	w20, w0
  43bee8:	add	x8, sp, #0x8
  43beec:	mov	w0, w1
  43bef0:	stp	x29, x30, [sp, #64]
  43bef4:	add	x29, sp, #0x40
  43bef8:	mov	x19, x2
  43befc:	bl	43bd58 <argp_usage@@Base+0xa15c>
  43bf00:	add	x0, sp, #0x8
  43bf04:	mov	w1, #0x3a                  	// #58
  43bf08:	mov	w2, #0x1                   	// #1
  43bf0c:	bl	43abec <argp_usage@@Base+0x8ff0>
  43bf10:	add	x3, sp, #0x8
  43bf14:	mov	x2, #0xffffffffffffffff    	// #-1
  43bf18:	mov	w0, w20
  43bf1c:	mov	x1, x19
  43bf20:	bl	43bb2c <argp_usage@@Base+0x9f30>
  43bf24:	ldp	x20, x19, [sp, #80]
  43bf28:	ldp	x29, x30, [sp, #64]
  43bf2c:	add	sp, sp, #0x60
  43bf30:	ret
  43bf34:	stp	x29, x30, [sp, #-16]!
  43bf38:	mov	x4, #0xffffffffffffffff    	// #-1
  43bf3c:	mov	x29, sp
  43bf40:	bl	43bf4c <argp_usage@@Base+0xa350>
  43bf44:	ldp	x29, x30, [sp], #16
  43bf48:	ret
  43bf4c:	sub	sp, sp, #0x70
  43bf50:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43bf54:	add	x8, x8, #0xde0
  43bf58:	ldp	q0, q1, [x8]
  43bf5c:	ldr	q2, [x8, #32]
  43bf60:	ldr	x8, [x8, #48]
  43bf64:	str	x21, [sp, #80]
  43bf68:	mov	w21, w0
  43bf6c:	mov	x0, sp
  43bf70:	stp	x29, x30, [sp, #64]
  43bf74:	stp	x20, x19, [sp, #96]
  43bf78:	add	x29, sp, #0x40
  43bf7c:	mov	x19, x4
  43bf80:	mov	x20, x3
  43bf84:	stp	q0, q1, [sp]
  43bf88:	str	q2, [sp, #32]
  43bf8c:	str	x8, [sp, #48]
  43bf90:	bl	43ac44 <argp_usage@@Base+0x9048>
  43bf94:	mov	x3, sp
  43bf98:	mov	w0, w21
  43bf9c:	mov	x1, x20
  43bfa0:	mov	x2, x19
  43bfa4:	bl	43bb2c <argp_usage@@Base+0x9f30>
  43bfa8:	ldp	x20, x19, [sp, #96]
  43bfac:	ldr	x21, [sp, #80]
  43bfb0:	ldp	x29, x30, [sp, #64]
  43bfb4:	add	sp, sp, #0x70
  43bfb8:	ret
  43bfbc:	stp	x29, x30, [sp, #-16]!
  43bfc0:	mov	x3, x2
  43bfc4:	mov	x2, x1
  43bfc8:	mov	x1, x0
  43bfcc:	mov	w0, wzr
  43bfd0:	mov	x29, sp
  43bfd4:	bl	43bf34 <argp_usage@@Base+0xa338>
  43bfd8:	ldp	x29, x30, [sp], #16
  43bfdc:	ret
  43bfe0:	stp	x29, x30, [sp, #-16]!
  43bfe4:	mov	x4, x3
  43bfe8:	mov	x3, x2
  43bfec:	mov	x2, x1
  43bff0:	mov	x1, x0
  43bff4:	mov	w0, wzr
  43bff8:	mov	x29, sp
  43bffc:	bl	43bf4c <argp_usage@@Base+0xa350>
  43c000:	ldp	x29, x30, [sp], #16
  43c004:	ret
  43c008:	stp	x29, x30, [sp, #-16]!
  43c00c:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43c010:	add	x3, x3, #0x418
  43c014:	mov	x29, sp
  43c018:	bl	43bb2c <argp_usage@@Base+0x9f30>
  43c01c:	ldp	x29, x30, [sp], #16
  43c020:	ret
  43c024:	stp	x29, x30, [sp, #-16]!
  43c028:	mov	x2, x1
  43c02c:	mov	x1, x0
  43c030:	mov	w0, wzr
  43c034:	mov	x29, sp
  43c038:	bl	43c008 <argp_usage@@Base+0xa40c>
  43c03c:	ldp	x29, x30, [sp], #16
  43c040:	ret
  43c044:	stp	x29, x30, [sp, #-16]!
  43c048:	mov	x2, #0xffffffffffffffff    	// #-1
  43c04c:	mov	x29, sp
  43c050:	bl	43c008 <argp_usage@@Base+0xa40c>
  43c054:	ldp	x29, x30, [sp], #16
  43c058:	ret
  43c05c:	stp	x29, x30, [sp, #-16]!
  43c060:	mov	x1, x0
  43c064:	mov	w0, wzr
  43c068:	mov	x29, sp
  43c06c:	bl	43c044 <argp_usage@@Base+0xa448>
  43c070:	ldp	x29, x30, [sp], #16
  43c074:	ret
  43c078:	stp	x29, x30, [sp, #-48]!
  43c07c:	stp	x20, x19, [sp, #32]
  43c080:	mov	x20, x0
  43c084:	mov	w19, w1
  43c088:	mov	w2, #0x5                   	// #5
  43c08c:	mov	x0, xzr
  43c090:	mov	x1, x20
  43c094:	str	x21, [sp, #16]
  43c098:	mov	x29, sp
  43c09c:	bl	404bf0 <dcgettext@plt>
  43c0a0:	cmp	x0, x20
  43c0a4:	b.ne	43c130 <argp_usage@@Base+0xa534>  // b.any
  43c0a8:	bl	436544 <argp_usage@@Base+0x4948>
  43c0ac:	mov	w1, #0x55                  	// #85
  43c0b0:	mov	w2, #0x54                  	// #84
  43c0b4:	mov	w3, #0x46                  	// #70
  43c0b8:	mov	w4, #0x2d                  	// #45
  43c0bc:	mov	w5, #0x38                  	// #56
  43c0c0:	mov	w6, wzr
  43c0c4:	mov	w7, wzr
  43c0c8:	mov	x21, x0
  43c0cc:	bl	43c15c <argp_usage@@Base+0xa560>
  43c0d0:	cbz	w0, 43c0ec <argp_usage@@Base+0xa4f0>
  43c0d4:	ldrb	w8, [x20]
  43c0d8:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43c0dc:	adrp	x10, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43c0e0:	add	x9, x9, #0xd64
  43c0e4:	add	x10, x10, #0xd60
  43c0e8:	b	43c128 <argp_usage@@Base+0xa52c>
  43c0ec:	mov	w1, #0x47                  	// #71
  43c0f0:	mov	w2, #0x42                  	// #66
  43c0f4:	mov	w3, #0x31                  	// #49
  43c0f8:	mov	w4, #0x38                  	// #56
  43c0fc:	mov	w5, #0x30                  	// #48
  43c100:	mov	w6, #0x33                  	// #51
  43c104:	mov	w7, #0x30                  	// #48
  43c108:	mov	x0, x21
  43c10c:	bl	43c15c <argp_usage@@Base+0xa560>
  43c110:	cbz	w0, 43c140 <argp_usage@@Base+0xa544>
  43c114:	ldrb	w8, [x20]
  43c118:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43c11c:	adrp	x10, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43c120:	add	x9, x9, #0xd6c
  43c124:	add	x10, x10, #0xd68
  43c128:	cmp	w8, #0x60
  43c12c:	csel	x0, x10, x9, eq  // eq = none
  43c130:	ldp	x20, x19, [sp, #32]
  43c134:	ldr	x21, [sp, #16]
  43c138:	ldp	x29, x30, [sp], #48
  43c13c:	ret
  43c140:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x17da0>
  43c144:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x18da0>
  43c148:	add	x8, x8, #0x824
  43c14c:	add	x9, x9, #0x36a
  43c150:	cmp	w19, #0x9
  43c154:	csel	x0, x9, x8, eq  // eq = none
  43c158:	b	43c130 <argp_usage@@Base+0xa534>
  43c15c:	stp	x29, x30, [sp, #-80]!
  43c160:	stp	x26, x25, [sp, #16]
  43c164:	mov	x25, x0
  43c168:	and	w0, w1, #0xff
  43c16c:	stp	x24, x23, [sp, #32]
  43c170:	stp	x22, x21, [sp, #48]
  43c174:	stp	x20, x19, [sp, #64]
  43c178:	mov	x29, sp
  43c17c:	mov	w19, w7
  43c180:	mov	w20, w6
  43c184:	mov	w21, w5
  43c188:	mov	w22, w4
  43c18c:	mov	w23, w3
  43c190:	mov	w24, w2
  43c194:	mov	w26, w1
  43c198:	bl	44c07c <_obstack_memory_used@@Base+0xde1c>
  43c19c:	ldrb	w8, [x25]
  43c1a0:	tbz	w0, #0, 43c1b8 <argp_usage@@Base+0xa5bc>
  43c1a4:	and	w8, w8, #0xffffffdf
  43c1a8:	cmp	w8, w26, uxtb
  43c1ac:	b.eq	43c1c0 <argp_usage@@Base+0xa5c4>  // b.none
  43c1b0:	mov	w0, wzr
  43c1b4:	b	43c1f0 <argp_usage@@Base+0xa5f4>
  43c1b8:	cmp	w8, w26, uxtb
  43c1bc:	b.ne	43c1b0 <argp_usage@@Base+0xa5b4>  // b.any
  43c1c0:	tst	w26, #0xff
  43c1c4:	b.eq	43c1ec <argp_usage@@Base+0xa5f0>  // b.none
  43c1c8:	mov	x0, x25
  43c1cc:	mov	w1, w24
  43c1d0:	mov	w2, w23
  43c1d4:	mov	w3, w22
  43c1d8:	mov	w4, w21
  43c1dc:	mov	w5, w20
  43c1e0:	mov	w6, w19
  43c1e4:	bl	43c208 <argp_usage@@Base+0xa60c>
  43c1e8:	b	43c1f0 <argp_usage@@Base+0xa5f4>
  43c1ec:	mov	w0, #0x1                   	// #1
  43c1f0:	ldp	x20, x19, [sp, #64]
  43c1f4:	ldp	x22, x21, [sp, #48]
  43c1f8:	ldp	x24, x23, [sp, #32]
  43c1fc:	ldp	x26, x25, [sp, #16]
  43c200:	ldp	x29, x30, [sp], #80
  43c204:	ret
  43c208:	stp	x29, x30, [sp, #-80]!
  43c20c:	stp	x24, x23, [sp, #32]
  43c210:	mov	x24, x0
  43c214:	and	w0, w1, #0xff
  43c218:	str	x25, [sp, #16]
  43c21c:	stp	x22, x21, [sp, #48]
  43c220:	stp	x20, x19, [sp, #64]
  43c224:	mov	x29, sp
  43c228:	mov	w19, w6
  43c22c:	mov	w20, w5
  43c230:	mov	w21, w4
  43c234:	mov	w22, w3
  43c238:	mov	w23, w2
  43c23c:	mov	w25, w1
  43c240:	bl	44c07c <_obstack_memory_used@@Base+0xde1c>
  43c244:	ldrb	w8, [x24, #1]
  43c248:	tbz	w0, #0, 43c260 <argp_usage@@Base+0xa664>
  43c24c:	and	w8, w8, #0xffffffdf
  43c250:	cmp	w8, w25, uxtb
  43c254:	b.eq	43c268 <argp_usage@@Base+0xa66c>  // b.none
  43c258:	mov	w0, wzr
  43c25c:	b	43c294 <argp_usage@@Base+0xa698>
  43c260:	cmp	w8, w25, uxtb
  43c264:	b.ne	43c258 <argp_usage@@Base+0xa65c>  // b.any
  43c268:	tst	w25, #0xff
  43c26c:	b.eq	43c290 <argp_usage@@Base+0xa694>  // b.none
  43c270:	mov	x0, x24
  43c274:	mov	w1, w23
  43c278:	mov	w2, w22
  43c27c:	mov	w3, w21
  43c280:	mov	w4, w20
  43c284:	mov	w5, w19
  43c288:	bl	43c2ac <argp_usage@@Base+0xa6b0>
  43c28c:	b	43c294 <argp_usage@@Base+0xa698>
  43c290:	mov	w0, #0x1                   	// #1
  43c294:	ldp	x20, x19, [sp, #64]
  43c298:	ldp	x22, x21, [sp, #48]
  43c29c:	ldp	x24, x23, [sp, #32]
  43c2a0:	ldr	x25, [sp, #16]
  43c2a4:	ldp	x29, x30, [sp], #80
  43c2a8:	ret
  43c2ac:	stp	x29, x30, [sp, #-64]!
  43c2b0:	stp	x24, x23, [sp, #16]
  43c2b4:	mov	x23, x0
  43c2b8:	and	w0, w1, #0xff
  43c2bc:	stp	x22, x21, [sp, #32]
  43c2c0:	stp	x20, x19, [sp, #48]
  43c2c4:	mov	x29, sp
  43c2c8:	mov	w19, w5
  43c2cc:	mov	w20, w4
  43c2d0:	mov	w21, w3
  43c2d4:	mov	w22, w2
  43c2d8:	mov	w24, w1
  43c2dc:	bl	44c07c <_obstack_memory_used@@Base+0xde1c>
  43c2e0:	ldrb	w8, [x23, #2]
  43c2e4:	tbz	w0, #0, 43c2fc <argp_usage@@Base+0xa700>
  43c2e8:	and	w8, w8, #0xffffffdf
  43c2ec:	cmp	w8, w24, uxtb
  43c2f0:	b.eq	43c304 <argp_usage@@Base+0xa708>  // b.none
  43c2f4:	mov	w0, wzr
  43c2f8:	b	43c32c <argp_usage@@Base+0xa730>
  43c2fc:	cmp	w8, w24, uxtb
  43c300:	b.ne	43c2f4 <argp_usage@@Base+0xa6f8>  // b.any
  43c304:	tst	w24, #0xff
  43c308:	b.eq	43c328 <argp_usage@@Base+0xa72c>  // b.none
  43c30c:	mov	x0, x23
  43c310:	mov	w1, w22
  43c314:	mov	w2, w21
  43c318:	mov	w3, w20
  43c31c:	mov	w4, w19
  43c320:	bl	43c340 <argp_usage@@Base+0xa744>
  43c324:	b	43c32c <argp_usage@@Base+0xa730>
  43c328:	mov	w0, #0x1                   	// #1
  43c32c:	ldp	x20, x19, [sp, #48]
  43c330:	ldp	x22, x21, [sp, #32]
  43c334:	ldp	x24, x23, [sp, #16]
  43c338:	ldp	x29, x30, [sp], #64
  43c33c:	ret
  43c340:	stp	x29, x30, [sp, #-64]!
  43c344:	stp	x22, x21, [sp, #32]
  43c348:	mov	x22, x0
  43c34c:	and	w0, w1, #0xff
  43c350:	str	x23, [sp, #16]
  43c354:	stp	x20, x19, [sp, #48]
  43c358:	mov	x29, sp
  43c35c:	mov	w19, w4
  43c360:	mov	w20, w3
  43c364:	mov	w21, w2
  43c368:	mov	w23, w1
  43c36c:	bl	44c07c <_obstack_memory_used@@Base+0xde1c>
  43c370:	ldrb	w8, [x22, #3]
  43c374:	tbz	w0, #0, 43c38c <argp_usage@@Base+0xa790>
  43c378:	and	w8, w8, #0xffffffdf
  43c37c:	cmp	w8, w23, uxtb
  43c380:	b.eq	43c394 <argp_usage@@Base+0xa798>  // b.none
  43c384:	mov	w0, wzr
  43c388:	b	43c3b8 <argp_usage@@Base+0xa7bc>
  43c38c:	cmp	w8, w23, uxtb
  43c390:	b.ne	43c384 <argp_usage@@Base+0xa788>  // b.any
  43c394:	tst	w23, #0xff
  43c398:	b.eq	43c3b4 <argp_usage@@Base+0xa7b8>  // b.none
  43c39c:	mov	x0, x22
  43c3a0:	mov	w1, w21
  43c3a4:	mov	w2, w20
  43c3a8:	mov	w3, w19
  43c3ac:	bl	43c3cc <argp_usage@@Base+0xa7d0>
  43c3b0:	b	43c3b8 <argp_usage@@Base+0xa7bc>
  43c3b4:	mov	w0, #0x1                   	// #1
  43c3b8:	ldp	x20, x19, [sp, #48]
  43c3bc:	ldp	x22, x21, [sp, #32]
  43c3c0:	ldr	x23, [sp, #16]
  43c3c4:	ldp	x29, x30, [sp], #64
  43c3c8:	ret
  43c3cc:	stp	x29, x30, [sp, #-48]!
  43c3d0:	stp	x22, x21, [sp, #16]
  43c3d4:	mov	x21, x0
  43c3d8:	and	w0, w1, #0xff
  43c3dc:	stp	x20, x19, [sp, #32]
  43c3e0:	mov	x29, sp
  43c3e4:	mov	w19, w3
  43c3e8:	mov	w20, w2
  43c3ec:	mov	w22, w1
  43c3f0:	bl	44c07c <_obstack_memory_used@@Base+0xde1c>
  43c3f4:	ldrb	w8, [x21, #4]
  43c3f8:	tbz	w0, #0, 43c410 <argp_usage@@Base+0xa814>
  43c3fc:	and	w8, w8, #0xffffffdf
  43c400:	cmp	w8, w22, uxtb
  43c404:	b.eq	43c418 <argp_usage@@Base+0xa81c>  // b.none
  43c408:	mov	w0, wzr
  43c40c:	b	43c438 <argp_usage@@Base+0xa83c>
  43c410:	cmp	w8, w22, uxtb
  43c414:	b.ne	43c408 <argp_usage@@Base+0xa80c>  // b.any
  43c418:	tst	w22, #0xff
  43c41c:	b.eq	43c434 <argp_usage@@Base+0xa838>  // b.none
  43c420:	mov	x0, x21
  43c424:	mov	w1, w20
  43c428:	mov	w2, w19
  43c42c:	bl	43c448 <argp_usage@@Base+0xa84c>
  43c430:	b	43c438 <argp_usage@@Base+0xa83c>
  43c434:	mov	w0, #0x1                   	// #1
  43c438:	ldp	x20, x19, [sp, #32]
  43c43c:	ldp	x22, x21, [sp, #16]
  43c440:	ldp	x29, x30, [sp], #48
  43c444:	ret
  43c448:	stp	x29, x30, [sp, #-48]!
  43c44c:	stp	x20, x19, [sp, #32]
  43c450:	mov	x20, x0
  43c454:	and	w0, w1, #0xff
  43c458:	str	x21, [sp, #16]
  43c45c:	mov	x29, sp
  43c460:	mov	w19, w2
  43c464:	mov	w21, w1
  43c468:	bl	44c07c <_obstack_memory_used@@Base+0xde1c>
  43c46c:	ldrb	w8, [x20, #5]
  43c470:	tbz	w0, #0, 43c488 <argp_usage@@Base+0xa88c>
  43c474:	and	w8, w8, #0xffffffdf
  43c478:	cmp	w8, w21, uxtb
  43c47c:	b.eq	43c490 <argp_usage@@Base+0xa894>  // b.none
  43c480:	mov	w0, wzr
  43c484:	b	43c4ac <argp_usage@@Base+0xa8b0>
  43c488:	cmp	w8, w21, uxtb
  43c48c:	b.ne	43c480 <argp_usage@@Base+0xa884>  // b.any
  43c490:	tst	w21, #0xff
  43c494:	b.eq	43c4a8 <argp_usage@@Base+0xa8ac>  // b.none
  43c498:	mov	x0, x20
  43c49c:	mov	w1, w19
  43c4a0:	bl	43c4bc <argp_usage@@Base+0xa8c0>
  43c4a4:	b	43c4ac <argp_usage@@Base+0xa8b0>
  43c4a8:	mov	w0, #0x1                   	// #1
  43c4ac:	ldp	x20, x19, [sp, #32]
  43c4b0:	ldr	x21, [sp, #16]
  43c4b4:	ldp	x29, x30, [sp], #48
  43c4b8:	ret
  43c4bc:	stp	x29, x30, [sp, #-32]!
  43c4c0:	stp	x20, x19, [sp, #16]
  43c4c4:	mov	x19, x0
  43c4c8:	and	w0, w1, #0xff
  43c4cc:	mov	x29, sp
  43c4d0:	mov	w20, w1
  43c4d4:	bl	44c07c <_obstack_memory_used@@Base+0xde1c>
  43c4d8:	ldrb	w8, [x19, #6]
  43c4dc:	tbz	w0, #0, 43c4f4 <argp_usage@@Base+0xa8f8>
  43c4e0:	and	w8, w8, #0xffffffdf
  43c4e4:	cmp	w8, w20, uxtb
  43c4e8:	b.eq	43c4fc <argp_usage@@Base+0xa900>  // b.none
  43c4ec:	mov	w0, wzr
  43c4f0:	b	43c514 <argp_usage@@Base+0xa918>
  43c4f4:	cmp	w8, w20, uxtb
  43c4f8:	b.ne	43c4ec <argp_usage@@Base+0xa8f0>  // b.any
  43c4fc:	tst	w20, #0xff
  43c500:	b.eq	43c510 <argp_usage@@Base+0xa914>  // b.none
  43c504:	mov	x0, x19
  43c508:	bl	43c520 <argp_usage@@Base+0xa924>
  43c50c:	b	43c514 <argp_usage@@Base+0xa918>
  43c510:	mov	w0, #0x1                   	// #1
  43c514:	ldp	x20, x19, [sp, #16]
  43c518:	ldp	x29, x30, [sp], #32
  43c51c:	ret
  43c520:	stp	x29, x30, [sp, #-32]!
  43c524:	str	x19, [sp, #16]
  43c528:	mov	x19, x0
  43c52c:	mov	w0, wzr
  43c530:	mov	x29, sp
  43c534:	bl	44c07c <_obstack_memory_used@@Base+0xde1c>
  43c538:	ldrb	w8, [x19, #7]
  43c53c:	tbz	w0, #0, 43c550 <argp_usage@@Base+0xa954>
  43c540:	tst	w8, #0xffffffdf
  43c544:	b.eq	43c554 <argp_usage@@Base+0xa958>  // b.none
  43c548:	mov	w0, wzr
  43c54c:	b	43c558 <argp_usage@@Base+0xa95c>
  43c550:	cbnz	w8, 43c548 <argp_usage@@Base+0xa94c>
  43c554:	mov	w0, #0x1                   	// #1
  43c558:	ldr	x19, [sp, #16]
  43c55c:	ldp	x29, x30, [sp], #32
  43c560:	ret
  43c564:	sub	sp, sp, #0x150
  43c568:	stp	x29, x30, [sp, #256]
  43c56c:	stp	x28, x25, [sp, #272]
  43c570:	stp	x24, x23, [sp, #288]
  43c574:	stp	x22, x21, [sp, #304]
  43c578:	stp	x20, x19, [sp, #320]
  43c57c:	add	x29, sp, #0x100
  43c580:	mov	w25, w4
  43c584:	mov	x19, x3
  43c588:	mov	w20, w2
  43c58c:	mov	x21, x1
  43c590:	mov	w22, w0
  43c594:	bl	4049f0 <renameat2@plt>
  43c598:	mov	w24, w0
  43c59c:	bl	404d00 <__errno_location@plt>
  43c5a0:	tbz	w24, #31, 43c6ec <argp_usage@@Base+0xaaf0>
  43c5a4:	ldr	w8, [x0]
  43c5a8:	mov	x23, x0
  43c5ac:	cmp	w8, #0x16
  43c5b0:	b.eq	43c5c4 <argp_usage@@Base+0xa9c8>  // b.none
  43c5b4:	cmp	w8, #0x5f
  43c5b8:	b.eq	43c5c4 <argp_usage@@Base+0xa9c8>  // b.none
  43c5bc:	cmp	w8, #0x26
  43c5c0:	b.ne	43c6ec <argp_usage@@Base+0xaaf0>  // b.any
  43c5c4:	cbz	w25, 43c614 <argp_usage@@Base+0xaa18>
  43c5c8:	cmp	w25, #0x1
  43c5cc:	b.ne	43c600 <argp_usage@@Base+0xaa04>  // b.any
  43c5d0:	mov	x2, sp
  43c5d4:	mov	w0, w20
  43c5d8:	mov	x1, x19
  43c5dc:	bl	43ccb8 <argp_usage@@Base+0xb0bc>
  43c5e0:	cbz	w0, 43c5f8 <argp_usage@@Base+0xa9fc>
  43c5e4:	ldr	w8, [x23]
  43c5e8:	cmp	w8, #0x2
  43c5ec:	b.eq	43c610 <argp_usage@@Base+0xaa14>  // b.none
  43c5f0:	cmp	w8, #0x4b
  43c5f4:	b.ne	43c608 <argp_usage@@Base+0xaa0c>  // b.any
  43c5f8:	mov	w0, #0x11                  	// #17
  43c5fc:	b	43c604 <argp_usage@@Base+0xaa08>
  43c600:	mov	w0, #0x5f                  	// #95
  43c604:	bl	43c71c <argp_usage@@Base+0xab20>
  43c608:	mov	w24, #0xffffffff            	// #-1
  43c60c:	b	43c6ec <argp_usage@@Base+0xaaf0>
  43c610:	mov	w25, #0x1                   	// #1
  43c614:	mov	x0, x21
  43c618:	bl	404190 <strlen@plt>
  43c61c:	mov	x24, x0
  43c620:	mov	x0, x19
  43c624:	bl	404190 <strlen@plt>
  43c628:	cbz	x24, 43c6d4 <argp_usage@@Base+0xaad8>
  43c62c:	cbz	x0, 43c6d4 <argp_usage@@Base+0xaad8>
  43c630:	add	x8, x24, x21
  43c634:	ldurb	w8, [x8, #-1]
  43c638:	cmp	w8, #0x2f
  43c63c:	b.eq	43c650 <argp_usage@@Base+0xaa54>  // b.none
  43c640:	add	x8, x0, x19
  43c644:	ldurb	w8, [x8, #-1]
  43c648:	cmp	w8, #0x2f
  43c64c:	b.ne	43c6d4 <argp_usage@@Base+0xaad8>  // b.any
  43c650:	add	x2, sp, #0x80
  43c654:	mov	w0, w22
  43c658:	mov	x1, x21
  43c65c:	bl	43ccb8 <argp_usage@@Base+0xb0bc>
  43c660:	cbnz	w0, 43c608 <argp_usage@@Base+0xaa0c>
  43c664:	cbz	w25, 43c680 <argp_usage@@Base+0xaa84>
  43c668:	ldr	w8, [sp, #144]
  43c66c:	and	w8, w8, #0xf000
  43c670:	cmp	w8, #0x4, lsl #12
  43c674:	b.eq	43c6d4 <argp_usage@@Base+0xaad8>  // b.none
  43c678:	mov	w0, #0x2                   	// #2
  43c67c:	b	43c604 <argp_usage@@Base+0xaa08>
  43c680:	mov	x2, sp
  43c684:	mov	w0, w20
  43c688:	mov	x1, x19
  43c68c:	bl	43ccb8 <argp_usage@@Base+0xb0bc>
  43c690:	cbz	w0, 43c6b4 <argp_usage@@Base+0xaab8>
  43c694:	ldr	w8, [x23]
  43c698:	cmp	w8, #0x2
  43c69c:	b.ne	43c608 <argp_usage@@Base+0xaa0c>  // b.any
  43c6a0:	ldr	w8, [sp, #144]
  43c6a4:	and	w8, w8, #0xf000
  43c6a8:	cmp	w8, #0x4, lsl #12
  43c6ac:	b.ne	43c608 <argp_usage@@Base+0xaa0c>  // b.any
  43c6b0:	b	43c6d4 <argp_usage@@Base+0xaad8>
  43c6b4:	ldr	w8, [sp, #16]
  43c6b8:	and	w8, w8, #0xf000
  43c6bc:	cmp	w8, #0x4, lsl #12
  43c6c0:	b.ne	43c70c <argp_usage@@Base+0xab10>  // b.any
  43c6c4:	ldr	w8, [sp, #144]
  43c6c8:	and	w8, w8, #0xf000
  43c6cc:	cmp	w8, #0x4, lsl #12
  43c6d0:	b.ne	43c714 <argp_usage@@Base+0xab18>  // b.any
  43c6d4:	mov	w0, w22
  43c6d8:	mov	x1, x21
  43c6dc:	mov	w2, w20
  43c6e0:	mov	x3, x19
  43c6e4:	bl	404a20 <renameat@plt>
  43c6e8:	mov	w24, w0
  43c6ec:	mov	w0, w24
  43c6f0:	ldp	x20, x19, [sp, #320]
  43c6f4:	ldp	x22, x21, [sp, #304]
  43c6f8:	ldp	x24, x23, [sp, #288]
  43c6fc:	ldp	x28, x25, [sp, #272]
  43c700:	ldp	x29, x30, [sp, #256]
  43c704:	add	sp, sp, #0x150
  43c708:	ret
  43c70c:	mov	w0, #0x14                  	// #20
  43c710:	b	43c604 <argp_usage@@Base+0xaa08>
  43c714:	mov	w0, #0x15                  	// #21
  43c718:	b	43c604 <argp_usage@@Base+0xaa08>
  43c71c:	stp	x29, x30, [sp, #-32]!
  43c720:	str	x19, [sp, #16]
  43c724:	mov	x29, sp
  43c728:	mov	w19, w0
  43c72c:	bl	404d00 <__errno_location@plt>
  43c730:	str	w19, [x0]
  43c734:	ldr	x19, [sp, #16]
  43c738:	ldp	x29, x30, [sp], #32
  43c73c:	ret
  43c740:	stp	x29, x30, [sp, #-64]!
  43c744:	stp	x24, x23, [sp, #16]
  43c748:	stp	x22, x21, [sp, #32]
  43c74c:	stp	x20, x19, [sp, #48]
  43c750:	mov	x19, x2
  43c754:	mov	x20, x1
  43c758:	mov	w21, w0
  43c75c:	mov	w24, #0x7ff00000            	// #2146435072
  43c760:	mov	x29, sp
  43c764:	b	43c774 <argp_usage@@Base+0xab78>
  43c768:	mov	w8, #0x1                   	// #1
  43c76c:	mov	x22, x23
  43c770:	cbnz	w8, 43c7cc <argp_usage@@Base+0xabd0>
  43c774:	mov	w0, w21
  43c778:	mov	x1, x20
  43c77c:	mov	x2, x19
  43c780:	bl	404b60 <read@plt>
  43c784:	mov	x23, x0
  43c788:	tbz	x0, #63, 43c768 <argp_usage@@Base+0xab6c>
  43c78c:	bl	404d00 <__errno_location@plt>
  43c790:	ldr	w8, [x0]
  43c794:	cmp	w8, #0x4
  43c798:	b.ne	43c7a4 <argp_usage@@Base+0xaba8>  // b.any
  43c79c:	mov	w8, wzr
  43c7a0:	b	43c770 <argp_usage@@Base+0xab74>
  43c7a4:	cmp	w8, #0x16
  43c7a8:	cset	w8, eq  // eq = none
  43c7ac:	cmp	x19, x24
  43c7b0:	cset	w9, hi  // hi = pmore
  43c7b4:	and	w10, w9, w8
  43c7b8:	tst	w9, w8
  43c7bc:	csel	x19, x24, x19, ne  // ne = any
  43c7c0:	csel	x22, x22, x23, ne  // ne = any
  43c7c4:	eor	w8, w10, #0x1
  43c7c8:	b	43c770 <argp_usage@@Base+0xab74>
  43c7cc:	mov	x0, x22
  43c7d0:	ldp	x20, x19, [sp, #48]
  43c7d4:	ldp	x22, x21, [sp, #32]
  43c7d8:	ldp	x24, x23, [sp, #16]
  43c7dc:	ldp	x29, x30, [sp], #64
  43c7e0:	ret
  43c7e4:	stp	x29, x30, [sp, #-64]!
  43c7e8:	stp	x24, x23, [sp, #16]
  43c7ec:	stp	x22, x21, [sp, #32]
  43c7f0:	stp	x20, x19, [sp, #48]
  43c7f4:	mov	x19, x2
  43c7f8:	mov	x20, x1
  43c7fc:	mov	w21, w0
  43c800:	mov	w24, #0x7ff00000            	// #2146435072
  43c804:	mov	x29, sp
  43c808:	b	43c818 <argp_usage@@Base+0xac1c>
  43c80c:	mov	w8, #0x1                   	// #1
  43c810:	mov	x22, x23
  43c814:	cbnz	w8, 43c870 <argp_usage@@Base+0xac74>
  43c818:	mov	w0, w21
  43c81c:	mov	x1, x20
  43c820:	mov	x2, x19
  43c824:	bl	404830 <write@plt>
  43c828:	mov	x23, x0
  43c82c:	tbz	x0, #63, 43c80c <argp_usage@@Base+0xac10>
  43c830:	bl	404d00 <__errno_location@plt>
  43c834:	ldr	w8, [x0]
  43c838:	cmp	w8, #0x4
  43c83c:	b.ne	43c848 <argp_usage@@Base+0xac4c>  // b.any
  43c840:	mov	w8, wzr
  43c844:	b	43c814 <argp_usage@@Base+0xac18>
  43c848:	cmp	w8, #0x16
  43c84c:	cset	w8, eq  // eq = none
  43c850:	cmp	x19, x24
  43c854:	cset	w9, hi  // hi = pmore
  43c858:	and	w10, w9, w8
  43c85c:	tst	w9, w8
  43c860:	csel	x19, x24, x19, ne  // ne = any
  43c864:	csel	x22, x22, x23, ne  // ne = any
  43c868:	eor	w8, w10, #0x1
  43c86c:	b	43c814 <argp_usage@@Base+0xac18>
  43c870:	mov	x0, x22
  43c874:	ldp	x20, x19, [sp, #48]
  43c878:	ldp	x22, x21, [sp, #32]
  43c87c:	ldp	x24, x23, [sp, #16]
  43c880:	ldp	x29, x30, [sp], #64
  43c884:	ret
  43c888:	stp	x29, x30, [sp, #-32]!
  43c88c:	str	x19, [sp, #16]
  43c890:	mov	x19, x0
  43c894:	str	xzr, [x0, #8]
  43c898:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x15da0>
  43c89c:	add	x0, x0, #0x232
  43c8a0:	mov	w1, #0x80000               	// #524288
  43c8a4:	mov	x29, sp
  43c8a8:	bl	44c1e0 <_obstack_memory_used@@Base+0xdf80>
  43c8ac:	str	w0, [x19]
  43c8b0:	tbnz	w0, #31, 43c8bc <argp_usage@@Base+0xacc0>
  43c8b4:	mov	w0, wzr
  43c8b8:	b	43c8d4 <argp_usage@@Base+0xacd8>
  43c8bc:	mov	x0, xzr
  43c8c0:	mov	x1, xzr
  43c8c4:	bl	404140 <getcwd@plt>
  43c8c8:	cmp	x0, #0x0
  43c8cc:	str	x0, [x19, #8]
  43c8d0:	csetm	w0, eq  // eq = none
  43c8d4:	ldr	x19, [sp, #16]
  43c8d8:	ldp	x29, x30, [sp], #32
  43c8dc:	ret
  43c8e0:	stp	x29, x30, [sp, #-16]!
  43c8e4:	mov	x8, x0
  43c8e8:	ldr	w0, [x0]
  43c8ec:	mov	x29, sp
  43c8f0:	tbnz	w0, #31, 43c900 <argp_usage@@Base+0xad04>
  43c8f4:	bl	404200 <fchdir@plt>
  43c8f8:	ldp	x29, x30, [sp], #16
  43c8fc:	ret
  43c900:	ldr	x0, [x8, #8]
  43c904:	bl	43d808 <argp_usage@@Base+0xbc0c>
  43c908:	ldp	x29, x30, [sp], #16
  43c90c:	ret
  43c910:	stp	x29, x30, [sp, #-32]!
  43c914:	str	x19, [sp, #16]
  43c918:	mov	x19, x0
  43c91c:	ldr	w0, [x0]
  43c920:	mov	x29, sp
  43c924:	tbnz	w0, #31, 43c92c <argp_usage@@Base+0xad30>
  43c928:	bl	4047c0 <close@plt>
  43c92c:	ldr	x0, [x19, #8]
  43c930:	bl	4049d0 <free@plt>
  43c934:	ldr	x19, [sp, #16]
  43c938:	ldp	x29, x30, [sp], #32
  43c93c:	ret
  43c940:	sub	sp, sp, #0x90
  43c944:	stp	x29, x30, [sp, #48]
  43c948:	stp	x28, x27, [sp, #64]
  43c94c:	stp	x26, x25, [sp, #80]
  43c950:	stp	x24, x23, [sp, #96]
  43c954:	stp	x22, x21, [sp, #112]
  43c958:	stp	x20, x19, [sp, #128]
  43c95c:	add	x29, sp, #0x30
  43c960:	cbz	x0, 43cae0 <argp_usage@@Base+0xaee4>
  43c964:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43c968:	add	x8, x8, #0xd70
  43c96c:	ldr	x8, [x8, w1, uxtw #3]
  43c970:	mov	x24, x0
  43c974:	mov	w22, w1
  43c978:	str	x8, [sp, #8]
  43c97c:	bl	404d00 <__errno_location@plt>
  43c980:	mov	x23, x0
  43c984:	mov	x28, xzr
  43c988:	mov	x21, xzr
  43c98c:	mov	x19, xzr
  43c990:	sub	x22, x22, #0x1
  43c994:	str	xzr, [sp, #16]
  43c998:	stur	xzr, [x29, #-16]
  43c99c:	str	xzr, [sp, #24]
  43c9a0:	b	43c9ac <argp_usage@@Base+0xadb0>
  43c9a4:	mov	w8, wzr
  43c9a8:	tbz	w8, #0, 43cabc <argp_usage@@Base+0xaec0>
  43c9ac:	mov	x0, x24
  43c9b0:	str	wzr, [x23]
  43c9b4:	bl	404720 <readdir@plt>
  43c9b8:	cbz	x0, 43c9a4 <argp_usage@@Base+0xada8>
  43c9bc:	mov	x26, x0
  43c9c0:	ldrb	w8, [x26, #19]!
  43c9c4:	mov	x27, x0
  43c9c8:	cmp	w8, #0x2e
  43c9cc:	b.ne	43c9e4 <argp_usage@@Base+0xade8>  // b.any
  43c9d0:	ldrb	w8, [x27, #20]
  43c9d4:	cmp	w8, #0x2e
  43c9d8:	mov	w8, #0x1                   	// #1
  43c9dc:	cinc	x8, x8, eq  // eq = none
  43c9e0:	b	43c9e8 <argp_usage@@Base+0xadec>
  43c9e4:	mov	x8, xzr
  43c9e8:	add	x8, x27, x8
  43c9ec:	ldrb	w8, [x8, #19]
  43c9f0:	cbz	w8, 43cab4 <argp_usage@@Base+0xaeb8>
  43c9f4:	mov	x0, x26
  43c9f8:	bl	404190 <strlen@plt>
  43c9fc:	cmp	x22, #0x1
  43ca00:	add	x25, x0, #0x1
  43ca04:	b.hi	43ca3c <argp_usage@@Base+0xae40>  // b.pmore
  43ca08:	ldr	x8, [sp, #16]
  43ca0c:	mov	x20, x22
  43ca10:	cmp	x8, x21
  43ca14:	b.ne	43ca88 <argp_usage@@Base+0xae8c>  // b.any
  43ca18:	ldur	x0, [x29, #-16]
  43ca1c:	sub	x1, x29, #0x8
  43ca20:	mov	w2, #0x10                  	// #16
  43ca24:	stur	x8, [x29, #-8]
  43ca28:	bl	43d260 <argp_usage@@Base+0xb664>
  43ca2c:	ldur	x8, [x29, #-8]
  43ca30:	mov	x22, x0
  43ca34:	str	x8, [sp, #16]
  43ca38:	b	43ca8c <argp_usage@@Base+0xae90>
  43ca3c:	ldr	x8, [sp, #24]
  43ca40:	sub	x8, x8, x28
  43ca44:	cmp	x8, x25
  43ca48:	b.hi	43ca74 <argp_usage@@Base+0xae78>  // b.pmore
  43ca4c:	adds	x8, x25, x28
  43ca50:	stur	x8, [x29, #-8]
  43ca54:	b.cs	43cba4 <argp_usage@@Base+0xafa8>  // b.hs, b.nlast
  43ca58:	sub	x1, x29, #0x8
  43ca5c:	mov	w2, #0x1                   	// #1
  43ca60:	mov	x0, x19
  43ca64:	bl	43d260 <argp_usage@@Base+0xb664>
  43ca68:	ldur	x8, [x29, #-8]
  43ca6c:	mov	x19, x0
  43ca70:	str	x8, [sp, #24]
  43ca74:	add	x0, x19, x28
  43ca78:	mov	x1, x26
  43ca7c:	mov	x2, x25
  43ca80:	bl	404110 <memcpy@plt>
  43ca84:	b	43cab0 <argp_usage@@Base+0xaeb4>
  43ca88:	ldur	x22, [x29, #-16]
  43ca8c:	mov	x0, x26
  43ca90:	bl	43d39c <argp_usage@@Base+0xb7a0>
  43ca94:	add	x8, x22, x21, lsl #4
  43ca98:	str	x0, [x8]
  43ca9c:	ldr	x9, [x27]
  43caa0:	stur	x22, [x29, #-16]
  43caa4:	add	x21, x21, #0x1
  43caa8:	mov	x22, x20
  43caac:	str	x9, [x8, #8]
  43cab0:	add	x28, x25, x28
  43cab4:	mov	w8, #0x1                   	// #1
  43cab8:	tbnz	w8, #0, 43c9ac <argp_usage@@Base+0xadb0>
  43cabc:	ldr	w20, [x23]
  43cac0:	cbz	w20, 43cae8 <argp_usage@@Base+0xaeec>
  43cac4:	ldur	x0, [x29, #-16]
  43cac8:	bl	4049d0 <free@plt>
  43cacc:	mov	x0, x19
  43cad0:	bl	4049d0 <free@plt>
  43cad4:	mov	x19, xzr
  43cad8:	str	w20, [x23]
  43cadc:	b	43cb80 <argp_usage@@Base+0xaf84>
  43cae0:	mov	x19, xzr
  43cae4:	b	43cb80 <argp_usage@@Base+0xaf84>
  43cae8:	cmp	x22, #0x1
  43caec:	b.hi	43cb60 <argp_usage@@Base+0xaf64>  // b.pmore
  43caf0:	ldur	x23, [x29, #-16]
  43caf4:	cbz	x21, 43cb0c <argp_usage@@Base+0xaf10>
  43caf8:	ldr	x3, [sp, #8]
  43cafc:	mov	w2, #0x10                  	// #16
  43cb00:	mov	x0, x23
  43cb04:	mov	x1, x21
  43cb08:	bl	404360 <qsort@plt>
  43cb0c:	add	x0, x28, #0x1
  43cb10:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  43cb14:	mov	x19, x0
  43cb18:	mov	x28, xzr
  43cb1c:	cbz	x21, 43cb54 <argp_usage@@Base+0xaf58>
  43cb20:	mov	x20, x23
  43cb24:	ldr	x1, [x20]
  43cb28:	add	x22, x19, x28
  43cb2c:	mov	x0, x22
  43cb30:	bl	4043e0 <stpcpy@plt>
  43cb34:	ldr	x8, [x20], #16
  43cb38:	sub	x9, x28, x22
  43cb3c:	add	x9, x9, x0
  43cb40:	add	x28, x9, #0x1
  43cb44:	mov	x0, x8
  43cb48:	bl	4049d0 <free@plt>
  43cb4c:	subs	x21, x21, #0x1
  43cb50:	b.ne	43cb24 <argp_usage@@Base+0xaf28>  // b.any
  43cb54:	mov	x0, x23
  43cb58:	bl	4049d0 <free@plt>
  43cb5c:	b	43cb7c <argp_usage@@Base+0xaf80>
  43cb60:	ldr	x8, [sp, #24]
  43cb64:	cmp	x28, x8
  43cb68:	b.ne	43cb7c <argp_usage@@Base+0xaf80>  // b.any
  43cb6c:	add	x1, x28, #0x1
  43cb70:	mov	x0, x19
  43cb74:	bl	43d21c <argp_usage@@Base+0xb620>
  43cb78:	mov	x19, x0
  43cb7c:	strb	wzr, [x19, x28]
  43cb80:	mov	x0, x19
  43cb84:	ldp	x20, x19, [sp, #128]
  43cb88:	ldp	x22, x21, [sp, #112]
  43cb8c:	ldp	x24, x23, [sp, #96]
  43cb90:	ldp	x26, x25, [sp, #80]
  43cb94:	ldp	x28, x27, [sp, #64]
  43cb98:	ldp	x29, x30, [sp, #48]
  43cb9c:	add	sp, sp, #0x90
  43cba0:	ret
  43cba4:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43cba8:	stp	x29, x30, [sp, #-48]!
  43cbac:	str	x21, [sp, #16]
  43cbb0:	stp	x20, x19, [sp, #32]
  43cbb4:	mov	x29, sp
  43cbb8:	mov	w19, w1
  43cbbc:	bl	44c14c <_obstack_memory_used@@Base+0xdeec>
  43cbc0:	cbz	x0, 43cc00 <argp_usage@@Base+0xb004>
  43cbc4:	mov	w1, w19
  43cbc8:	mov	x20, x0
  43cbcc:	bl	43c940 <argp_usage@@Base+0xad44>
  43cbd0:	mov	x19, x0
  43cbd4:	mov	x0, x20
  43cbd8:	bl	404790 <closedir@plt>
  43cbdc:	cbz	w0, 43cc04 <argp_usage@@Base+0xb008>
  43cbe0:	bl	404d00 <__errno_location@plt>
  43cbe4:	ldr	w21, [x0]
  43cbe8:	mov	x20, x0
  43cbec:	mov	x0, x19
  43cbf0:	bl	4049d0 <free@plt>
  43cbf4:	mov	x19, xzr
  43cbf8:	str	w21, [x20]
  43cbfc:	b	43cc04 <argp_usage@@Base+0xb008>
  43cc00:	mov	x19, xzr
  43cc04:	mov	x0, x19
  43cc08:	ldp	x20, x19, [sp, #32]
  43cc0c:	ldr	x21, [sp, #16]
  43cc10:	ldp	x29, x30, [sp], #48
  43cc14:	ret
  43cc18:	stp	x29, x30, [sp, #-16]!
  43cc1c:	ldr	x0, [x0]
  43cc20:	ldr	x1, [x1]
  43cc24:	mov	x29, sp
  43cc28:	bl	404920 <strcmp@plt>
  43cc2c:	ldp	x29, x30, [sp], #16
  43cc30:	ret
  43cc34:	ldr	x8, [x0, #8]
  43cc38:	ldr	x9, [x1, #8]
  43cc3c:	cmp	x8, x9
  43cc40:	cset	w8, hi  // hi = pmore
  43cc44:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  43cc48:	ret
  43cc4c:	ldr	x0, [x0, #80]
  43cc50:	ret
  43cc54:	ldr	x0, [x0, #112]
  43cc58:	ret
  43cc5c:	ldr	x0, [x0, #96]
  43cc60:	ret
  43cc64:	mov	x0, xzr
  43cc68:	ret
  43cc6c:	ldp	x8, x1, [x0, #72]
  43cc70:	mov	x0, x8
  43cc74:	ret
  43cc78:	ldp	x8, x1, [x0, #104]
  43cc7c:	mov	x0, x8
  43cc80:	ret
  43cc84:	ldp	x8, x1, [x0, #88]
  43cc88:	mov	x0, x8
  43cc8c:	ret
  43cc90:	mov	x0, #0xffffffffffffffff    	// #-1
  43cc94:	mov	x1, #0xffffffffffffffff    	// #-1
  43cc98:	ret
  43cc9c:	ret
  43cca0:	stp	x29, x30, [sp, #-16]!
  43cca4:	mov	w3, wzr
  43cca8:	mov	x29, sp
  43ccac:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  43ccb0:	ldp	x29, x30, [sp], #16
  43ccb4:	ret
  43ccb8:	stp	x29, x30, [sp, #-16]!
  43ccbc:	mov	w3, #0x100                 	// #256
  43ccc0:	mov	x29, sp
  43ccc4:	bl	4500c0 <_obstack_memory_used@@Base+0x11e60>
  43ccc8:	ldp	x29, x30, [sp], #16
  43cccc:	ret
  43ccd0:	stp	x29, x30, [sp, #-32]!
  43ccd4:	stp	x20, x19, [sp, #16]
  43ccd8:	mov	x19, x1
  43ccdc:	mov	w1, wzr
  43cce0:	mov	x2, x19
  43cce4:	mov	x29, sp
  43cce8:	mov	x20, x0
  43ccec:	bl	404b70 <memchr@plt>
  43ccf0:	sub	x8, x0, x20
  43ccf4:	cmp	x0, #0x0
  43ccf8:	csinc	x0, x19, x8, eq  // eq = none
  43ccfc:	ldp	x20, x19, [sp, #16]
  43cd00:	ldp	x29, x30, [sp], #32
  43cd04:	ret
  43cd08:	ret
  43cd0c:	cmp	x0, x2
  43cd10:	b.ge	43cd1c <argp_usage@@Base+0xb120>  // b.tcont
  43cd14:	mov	w0, #0xffffffff            	// #-1
  43cd18:	ret
  43cd1c:	b.le	43cd28 <argp_usage@@Base+0xb12c>
  43cd20:	mov	w0, #0x1                   	// #1
  43cd24:	ret
  43cd28:	sub	w0, w1, w3
  43cd2c:	ret
  43cd30:	orr	x8, x1, x0
  43cd34:	cmp	x8, #0x0
  43cd38:	cset	w8, ne  // ne = any
  43cd3c:	cmp	x0, #0x0
  43cd40:	csinv	w0, w8, wzr, ge  // ge = tcont
  43cd44:	ret
  43cd48:	mov	x8, #0xcd6500000000        	// #225833675390976
  43cd4c:	movk	x8, #0x41cd, lsl #48
  43cd50:	scvtf	d1, x1
  43cd54:	fmov	d2, x8
  43cd58:	scvtf	d0, x0
  43cd5c:	fdiv	d1, d1, d2
  43cd60:	fadd	d0, d1, d0
  43cd64:	ret
  43cd68:	sub	sp, sp, #0x50
  43cd6c:	str	x21, [sp, #48]
  43cd70:	stp	x20, x19, [sp, #64]
  43cd74:	mov	x21, x5
  43cd78:	mov	x20, x4
  43cd7c:	mov	x5, x3
  43cd80:	mov	x4, x2
  43cd84:	mov	x19, x0
  43cd88:	stp	x29, x30, [sp, #32]
  43cd8c:	add	x29, sp, #0x20
  43cd90:	cbz	x1, 43cdb0 <argp_usage@@Base+0xb1b4>
  43cd94:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cd98:	mov	x3, x1
  43cd9c:	add	x2, x2, #0xd92
  43cda0:	mov	w1, #0x1                   	// #1
  43cda4:	mov	x0, x19
  43cda8:	bl	404910 <__fprintf_chk@plt>
  43cdac:	b	43cdcc <argp_usage@@Base+0xb1d0>
  43cdb0:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cdb4:	add	x2, x2, #0xd9e
  43cdb8:	mov	w1, #0x1                   	// #1
  43cdbc:	mov	x0, x19
  43cdc0:	mov	x3, x4
  43cdc4:	mov	x4, x5
  43cdc8:	bl	404910 <__fprintf_chk@plt>
  43cdcc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cdd0:	add	x1, x1, #0xda5
  43cdd4:	mov	w2, #0x5                   	// #5
  43cdd8:	mov	x0, xzr
  43cddc:	bl	404bf0 <dcgettext@plt>
  43cde0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43cde4:	mov	x3, x0
  43cde8:	add	x2, x2, #0x8b
  43cdec:	mov	w1, #0x1                   	// #1
  43cdf0:	mov	w4, #0x7e3                 	// #2019
  43cdf4:	mov	x0, x19
  43cdf8:	bl	404910 <__fprintf_chk@plt>
  43cdfc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ce00:	add	x1, x1, #0xda9
  43ce04:	mov	w2, #0x5                   	// #5
  43ce08:	mov	x0, xzr
  43ce0c:	bl	404bf0 <dcgettext@plt>
  43ce10:	mov	x1, x19
  43ce14:	bl	404c10 <fputs_unlocked@plt>
  43ce18:	cmp	x21, #0x9
  43ce1c:	b.hi	43ce64 <argp_usage@@Base+0xb268>  // b.pmore
  43ce20:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ce24:	add	x8, x8, #0xd88
  43ce28:	adr	x9, 43ce38 <argp_usage@@Base+0xb23c>
  43ce2c:	ldrb	w10, [x8, x21]
  43ce30:	add	x9, x9, x10, lsl #2
  43ce34:	br	x9
  43ce38:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ce3c:	add	x1, x1, #0xe75
  43ce40:	mov	w2, #0x5                   	// #5
  43ce44:	mov	x0, xzr
  43ce48:	bl	404bf0 <dcgettext@plt>
  43ce4c:	ldr	x3, [x20]
  43ce50:	mov	x2, x0
  43ce54:	mov	w1, #0x1                   	// #1
  43ce58:	mov	x0, x19
  43ce5c:	bl	404910 <__fprintf_chk@plt>
  43ce60:	b	43cffc <argp_usage@@Base+0xb400>
  43ce64:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ce68:	add	x1, x1, #0xfb4
  43ce6c:	b	43cf90 <argp_usage@@Base+0xb394>
  43ce70:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ce74:	add	x1, x1, #0xe85
  43ce78:	mov	w2, #0x5                   	// #5
  43ce7c:	mov	x0, xzr
  43ce80:	bl	404bf0 <dcgettext@plt>
  43ce84:	ldp	x3, x4, [x20]
  43ce88:	mov	x2, x0
  43ce8c:	mov	w1, #0x1                   	// #1
  43ce90:	mov	x0, x19
  43ce94:	bl	404910 <__fprintf_chk@plt>
  43ce98:	b	43cffc <argp_usage@@Base+0xb400>
  43ce9c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cea0:	add	x1, x1, #0xe9c
  43cea4:	mov	w2, #0x5                   	// #5
  43cea8:	mov	x0, xzr
  43ceac:	bl	404bf0 <dcgettext@plt>
  43ceb0:	ldp	x3, x4, [x20]
  43ceb4:	ldr	x5, [x20, #16]
  43ceb8:	mov	x2, x0
  43cebc:	mov	w1, #0x1                   	// #1
  43cec0:	mov	x0, x19
  43cec4:	bl	404910 <__fprintf_chk@plt>
  43cec8:	b	43cffc <argp_usage@@Base+0xb400>
  43cecc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43ced0:	add	x1, x1, #0xeb8
  43ced4:	mov	w2, #0x5                   	// #5
  43ced8:	mov	x0, xzr
  43cedc:	bl	404bf0 <dcgettext@plt>
  43cee0:	ldp	x3, x4, [x20]
  43cee4:	ldp	x5, x6, [x20, #16]
  43cee8:	mov	x2, x0
  43ceec:	mov	w1, #0x1                   	// #1
  43cef0:	mov	x0, x19
  43cef4:	bl	404910 <__fprintf_chk@plt>
  43cef8:	b	43cffc <argp_usage@@Base+0xb400>
  43cefc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cf00:	add	x1, x1, #0xed8
  43cf04:	mov	w2, #0x5                   	// #5
  43cf08:	mov	x0, xzr
  43cf0c:	bl	404bf0 <dcgettext@plt>
  43cf10:	ldp	x3, x4, [x20]
  43cf14:	ldp	x5, x6, [x20, #16]
  43cf18:	ldr	x7, [x20, #32]
  43cf1c:	mov	x2, x0
  43cf20:	mov	w1, #0x1                   	// #1
  43cf24:	b	43cff4 <argp_usage@@Base+0xb3f8>
  43cf28:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cf2c:	add	x1, x1, #0xefc
  43cf30:	mov	w2, #0x5                   	// #5
  43cf34:	mov	x0, xzr
  43cf38:	bl	404bf0 <dcgettext@plt>
  43cf3c:	ldp	x3, x4, [x20]
  43cf40:	ldp	x5, x6, [x20, #16]
  43cf44:	ldp	x7, x8, [x20, #32]
  43cf48:	mov	x2, x0
  43cf4c:	b	43cf7c <argp_usage@@Base+0xb380>
  43cf50:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cf54:	add	x1, x1, #0xf24
  43cf58:	mov	w2, #0x5                   	// #5
  43cf5c:	mov	x0, xzr
  43cf60:	bl	404bf0 <dcgettext@plt>
  43cf64:	ldr	x9, [x20, #48]
  43cf68:	ldp	x3, x4, [x20]
  43cf6c:	ldp	x5, x6, [x20, #16]
  43cf70:	ldp	x7, x8, [x20, #32]
  43cf74:	mov	x2, x0
  43cf78:	str	x9, [sp, #8]
  43cf7c:	mov	w1, #0x1                   	// #1
  43cf80:	str	x8, [sp]
  43cf84:	b	43cff4 <argp_usage@@Base+0xb3f8>
  43cf88:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cf8c:	add	x1, x1, #0xf80
  43cf90:	mov	w2, #0x5                   	// #5
  43cf94:	mov	x0, xzr
  43cf98:	bl	404bf0 <dcgettext@plt>
  43cf9c:	ldp	x3, x4, [x20]
  43cfa0:	ldp	x5, x6, [x20, #16]
  43cfa4:	ldr	x7, [x20, #32]
  43cfa8:	ldur	q0, [x20, #40]
  43cfac:	ldp	x8, x9, [x20, #56]
  43cfb0:	mov	x2, x0
  43cfb4:	str	x9, [sp, #24]
  43cfb8:	b	43cfe8 <argp_usage@@Base+0xb3ec>
  43cfbc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43cfc0:	add	x1, x1, #0xf50
  43cfc4:	mov	w2, #0x5                   	// #5
  43cfc8:	mov	x0, xzr
  43cfcc:	bl	404bf0 <dcgettext@plt>
  43cfd0:	ldp	x3, x4, [x20]
  43cfd4:	ldp	x5, x6, [x20, #16]
  43cfd8:	ldr	x7, [x20, #32]
  43cfdc:	ldur	q0, [x20, #40]
  43cfe0:	ldr	x8, [x20, #56]
  43cfe4:	mov	x2, x0
  43cfe8:	mov	w1, #0x1                   	// #1
  43cfec:	str	x8, [sp, #16]
  43cff0:	str	q0, [sp]
  43cff4:	mov	x0, x19
  43cff8:	bl	404910 <__fprintf_chk@plt>
  43cffc:	ldp	x20, x19, [sp, #64]
  43d000:	ldr	x21, [sp, #48]
  43d004:	ldp	x29, x30, [sp, #32]
  43d008:	add	sp, sp, #0x50
  43d00c:	ret
  43d010:	stp	x29, x30, [sp, #-16]!
  43d014:	mov	x8, xzr
  43d018:	mov	x29, sp
  43d01c:	ldr	x9, [x4, x8, lsl #3]
  43d020:	add	x8, x8, #0x1
  43d024:	cbnz	x9, 43d01c <argp_usage@@Base+0xb420>
  43d028:	sub	x5, x8, #0x1
  43d02c:	bl	43cd68 <argp_usage@@Base+0xb16c>
  43d030:	ldp	x29, x30, [sp], #16
  43d034:	ret
  43d038:	sub	sp, sp, #0x60
  43d03c:	mov	x5, xzr
  43d040:	mov	x8, sp
  43d044:	stp	x29, x30, [sp, #80]
  43d048:	add	x29, sp, #0x50
  43d04c:	ldrsw	x9, [x4, #24]
  43d050:	tbz	w9, #31, 43d064 <argp_usage@@Base+0xb468>
  43d054:	add	w10, w9, #0x8
  43d058:	cmp	w10, #0x0
  43d05c:	str	w10, [x4, #24]
  43d060:	b.le	43d08c <argp_usage@@Base+0xb490>
  43d064:	ldr	x9, [x4]
  43d068:	add	x10, x9, #0x8
  43d06c:	str	x10, [x4]
  43d070:	ldr	x9, [x9]
  43d074:	str	x9, [x8, x5, lsl #3]
  43d078:	cbz	x9, 43d098 <argp_usage@@Base+0xb49c>
  43d07c:	add	x5, x5, #0x1
  43d080:	cmp	x5, #0xa
  43d084:	b.ne	43d04c <argp_usage@@Base+0xb450>  // b.any
  43d088:	b	43d098 <argp_usage@@Base+0xb49c>
  43d08c:	ldr	x10, [x4, #8]
  43d090:	add	x9, x10, x9
  43d094:	b	43d070 <argp_usage@@Base+0xb474>
  43d098:	mov	x4, sp
  43d09c:	bl	43cd68 <argp_usage@@Base+0xb16c>
  43d0a0:	ldp	x29, x30, [sp, #80]
  43d0a4:	add	sp, sp, #0x60
  43d0a8:	ret
  43d0ac:	sub	sp, sp, #0xf0
  43d0b0:	stp	x29, x30, [sp, #224]
  43d0b4:	add	x29, sp, #0xe0
  43d0b8:	mov	x8, #0xffffffffffffffe0    	// #-32
  43d0bc:	mov	x9, sp
  43d0c0:	sub	x10, x29, #0x60
  43d0c4:	movk	x8, #0xff80, lsl #32
  43d0c8:	add	x11, x29, #0x10
  43d0cc:	add	x9, x9, #0x80
  43d0d0:	add	x10, x10, #0x20
  43d0d4:	stp	x9, x8, [x29, #-16]
  43d0d8:	stp	x11, x10, [x29, #-32]
  43d0dc:	stp	x4, x5, [x29, #-96]
  43d0e0:	stp	x6, x7, [x29, #-80]
  43d0e4:	stp	q0, q1, [sp]
  43d0e8:	ldp	q0, q1, [x29, #-32]
  43d0ec:	sub	x4, x29, #0x40
  43d0f0:	stp	q2, q3, [sp, #32]
  43d0f4:	stp	q4, q5, [sp, #64]
  43d0f8:	stp	q6, q7, [sp, #96]
  43d0fc:	stp	q0, q1, [x29, #-64]
  43d100:	bl	43d038 <argp_usage@@Base+0xb43c>
  43d104:	ldp	x29, x30, [sp, #224]
  43d108:	add	sp, sp, #0xf0
  43d10c:	ret
  43d110:	stp	x29, x30, [sp, #-16]!
  43d114:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  43d118:	add	x1, x1, #0xff0
  43d11c:	mov	w2, #0x5                   	// #5
  43d120:	mov	x0, xzr
  43d124:	mov	x29, sp
  43d128:	bl	404bf0 <dcgettext@plt>
  43d12c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d130:	mov	x1, x0
  43d134:	add	x2, x2, #0x5
  43d138:	mov	w0, #0x1                   	// #1
  43d13c:	bl	4045f0 <__printf_chk@plt>
  43d140:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d144:	add	x1, x1, #0x15
  43d148:	mov	w2, #0x5                   	// #5
  43d14c:	mov	x0, xzr
  43d150:	bl	404bf0 <dcgettext@plt>
  43d154:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x12da0>
  43d158:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d15c:	mov	x1, x0
  43d160:	add	x2, x2, #0xd3a
  43d164:	add	x3, x3, #0x29
  43d168:	mov	w0, #0x1                   	// #1
  43d16c:	bl	4045f0 <__printf_chk@plt>
  43d170:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d174:	add	x1, x1, #0x4a
  43d178:	mov	w2, #0x5                   	// #5
  43d17c:	mov	x0, xzr
  43d180:	bl	404bf0 <dcgettext@plt>
  43d184:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43d188:	ldr	x1, [x8, #1144]
  43d18c:	bl	404c10 <fputs_unlocked@plt>
  43d190:	ldp	x29, x30, [sp], #16
  43d194:	ret
  43d198:	stp	x29, x30, [sp, #-16]!
  43d19c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  43d1a0:	udiv	x8, x8, x1
  43d1a4:	cmp	x8, x0
  43d1a8:	mov	x29, sp
  43d1ac:	b.cc	43d1c0 <argp_usage@@Base+0xb5c4>  // b.lo, b.ul, b.last
  43d1b0:	mul	x0, x1, x0
  43d1b4:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  43d1b8:	ldp	x29, x30, [sp], #16
  43d1bc:	ret
  43d1c0:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43d1c4:	stp	x29, x30, [sp, #-32]!
  43d1c8:	str	x19, [sp, #16]
  43d1cc:	mov	x29, sp
  43d1d0:	mov	x19, x0
  43d1d4:	bl	4044f0 <malloc@plt>
  43d1d8:	cbz	x19, 43d1e0 <argp_usage@@Base+0xb5e4>
  43d1dc:	cbz	x0, 43d1ec <argp_usage@@Base+0xb5f0>
  43d1e0:	ldr	x19, [sp, #16]
  43d1e4:	ldp	x29, x30, [sp], #32
  43d1e8:	ret
  43d1ec:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43d1f0:	stp	x29, x30, [sp, #-16]!
  43d1f4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  43d1f8:	udiv	x8, x8, x2
  43d1fc:	cmp	x8, x1
  43d200:	mov	x29, sp
  43d204:	b.cc	43d218 <argp_usage@@Base+0xb61c>  // b.lo, b.ul, b.last
  43d208:	mul	x1, x2, x1
  43d20c:	bl	43d21c <argp_usage@@Base+0xb620>
  43d210:	ldp	x29, x30, [sp], #16
  43d214:	ret
  43d218:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43d21c:	stp	x29, x30, [sp, #-32]!
  43d220:	str	x19, [sp, #16]
  43d224:	mov	x19, x1
  43d228:	mov	x29, sp
  43d22c:	cbz	x0, 43d240 <argp_usage@@Base+0xb644>
  43d230:	cbnz	x19, 43d240 <argp_usage@@Base+0xb644>
  43d234:	bl	4049d0 <free@plt>
  43d238:	mov	x0, xzr
  43d23c:	b	43d250 <argp_usage@@Base+0xb654>
  43d240:	mov	x1, x19
  43d244:	bl	404730 <realloc@plt>
  43d248:	cbz	x19, 43d250 <argp_usage@@Base+0xb654>
  43d24c:	cbz	x0, 43d25c <argp_usage@@Base+0xb660>
  43d250:	ldr	x19, [sp, #16]
  43d254:	ldp	x29, x30, [sp], #32
  43d258:	ret
  43d25c:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43d260:	stp	x29, x30, [sp, #-16]!
  43d264:	ldr	x8, [x1]
  43d268:	mov	x29, sp
  43d26c:	cbz	x0, 43d290 <argp_usage@@Base+0xb694>
  43d270:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  43d274:	movk	x9, #0x5554
  43d278:	udiv	x9, x9, x2
  43d27c:	cmp	x9, x8
  43d280:	b.ls	43d2c8 <argp_usage@@Base+0xb6cc>  // b.plast
  43d284:	add	x8, x8, x8, lsr #1
  43d288:	add	x8, x8, #0x1
  43d28c:	b	43d2b4 <argp_usage@@Base+0xb6b8>
  43d290:	cbnz	x8, 43d2a4 <argp_usage@@Base+0xb6a8>
  43d294:	mov	w8, #0x80                  	// #128
  43d298:	udiv	x8, x8, x2
  43d29c:	cmp	x2, #0x80
  43d2a0:	cinc	x8, x8, hi  // hi = pmore
  43d2a4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  43d2a8:	udiv	x9, x9, x2
  43d2ac:	cmp	x9, x8
  43d2b0:	b.cc	43d2c8 <argp_usage@@Base+0xb6cc>  // b.lo, b.ul, b.last
  43d2b4:	str	x8, [x1]
  43d2b8:	mul	x1, x8, x2
  43d2bc:	bl	43d21c <argp_usage@@Base+0xb620>
  43d2c0:	ldp	x29, x30, [sp], #16
  43d2c4:	ret
  43d2c8:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43d2cc:	stp	x29, x30, [sp, #-16]!
  43d2d0:	mov	x29, sp
  43d2d4:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  43d2d8:	ldp	x29, x30, [sp], #16
  43d2dc:	ret
  43d2e0:	stp	x29, x30, [sp, #-16]!
  43d2e4:	mov	w2, #0x1                   	// #1
  43d2e8:	mov	x29, sp
  43d2ec:	bl	43d260 <argp_usage@@Base+0xb664>
  43d2f0:	ldp	x29, x30, [sp], #16
  43d2f4:	ret
  43d2f8:	stp	x29, x30, [sp, #-32]!
  43d2fc:	stp	x20, x19, [sp, #16]
  43d300:	mov	x29, sp
  43d304:	mov	x19, x0
  43d308:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  43d30c:	mov	w1, wzr
  43d310:	mov	x2, x19
  43d314:	mov	x20, x0
  43d318:	bl	404600 <memset@plt>
  43d31c:	mov	x0, x20
  43d320:	ldp	x20, x19, [sp, #16]
  43d324:	ldp	x29, x30, [sp], #32
  43d328:	ret
  43d32c:	stp	x29, x30, [sp, #-16]!
  43d330:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  43d334:	udiv	x8, x8, x1
  43d338:	cmp	x8, x0
  43d33c:	mov	x29, sp
  43d340:	b.cc	43d354 <argp_usage@@Base+0xb758>  // b.lo, b.ul, b.last
  43d344:	bl	4046a0 <calloc@plt>
  43d348:	cbz	x0, 43d354 <argp_usage@@Base+0xb758>
  43d34c:	ldp	x29, x30, [sp], #16
  43d350:	ret
  43d354:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43d358:	stp	x29, x30, [sp, #-48]!
  43d35c:	stp	x20, x19, [sp, #32]
  43d360:	mov	x20, x0
  43d364:	mov	x0, x1
  43d368:	str	x21, [sp, #16]
  43d36c:	mov	x29, sp
  43d370:	mov	x19, x1
  43d374:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  43d378:	mov	x1, x20
  43d37c:	mov	x2, x19
  43d380:	mov	x21, x0
  43d384:	bl	404110 <memcpy@plt>
  43d388:	mov	x0, x21
  43d38c:	ldp	x20, x19, [sp, #32]
  43d390:	ldr	x21, [sp, #16]
  43d394:	ldp	x29, x30, [sp], #48
  43d398:	ret
  43d39c:	stp	x29, x30, [sp, #-32]!
  43d3a0:	str	x19, [sp, #16]
  43d3a4:	mov	x29, sp
  43d3a8:	mov	x19, x0
  43d3ac:	bl	404190 <strlen@plt>
  43d3b0:	add	x1, x0, #0x1
  43d3b4:	mov	x0, x19
  43d3b8:	bl	43d358 <argp_usage@@Base+0xb75c>
  43d3bc:	ldr	x19, [sp, #16]
  43d3c0:	ldp	x29, x30, [sp], #32
  43d3c4:	ret
  43d3c8:	stp	x29, x30, [sp, #-32]!
  43d3cc:	mov	x0, xzr
  43d3d0:	mov	x1, xzr
  43d3d4:	str	x19, [sp, #16]
  43d3d8:	mov	x29, sp
  43d3dc:	bl	404140 <getcwd@plt>
  43d3e0:	mov	x19, x0
  43d3e4:	cbnz	x0, 43d3f8 <argp_usage@@Base+0xb7fc>
  43d3e8:	bl	404d00 <__errno_location@plt>
  43d3ec:	ldr	w8, [x0]
  43d3f0:	cmp	w8, #0xc
  43d3f4:	b.eq	43d408 <argp_usage@@Base+0xb80c>  // b.none
  43d3f8:	mov	x0, x19
  43d3fc:	ldr	x19, [sp, #16]
  43d400:	ldp	x29, x30, [sp], #32
  43d404:	ret
  43d408:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43d40c:	stp	x29, x30, [sp, #-16]!
  43d410:	mov	x29, sp
  43d414:	bl	404a50 <strndup@plt>
  43d418:	cbz	x0, 43d424 <argp_usage@@Base+0xb828>
  43d41c:	ldp	x29, x30, [sp], #16
  43d420:	ret
  43d424:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  43d428:	sub	sp, sp, #0x60
  43d42c:	cmp	w2, #0x25
  43d430:	stp	x29, x30, [sp, #16]
  43d434:	str	x25, [sp, #32]
  43d438:	stp	x24, x23, [sp, #48]
  43d43c:	stp	x22, x21, [sp, #64]
  43d440:	stp	x20, x19, [sp, #80]
  43d444:	add	x29, sp, #0x10
  43d448:	b.cs	43d6f4 <argp_usage@@Base+0xbaf8>  // b.hs, b.nlast
  43d44c:	mov	x22, x4
  43d450:	mov	x19, x3
  43d454:	mov	w24, w2
  43d458:	mov	x21, x1
  43d45c:	mov	x20, x0
  43d460:	bl	404d00 <__errno_location@plt>
  43d464:	mov	x23, x0
  43d468:	str	wzr, [x0]
  43d46c:	bl	404950 <__ctype_b_loc@plt>
  43d470:	ldr	x8, [x0]
  43d474:	mov	x10, x20
  43d478:	ldrb	w9, [x10], #1
  43d47c:	ldrh	w11, [x8, x9, lsl #1]
  43d480:	tbnz	w11, #13, 43d478 <argp_usage@@Base+0xb87c>
  43d484:	cmp	x21, #0x0
  43d488:	add	x8, x29, #0x18
  43d48c:	csel	x21, x8, x21, eq  // eq = none
  43d490:	cmp	w9, #0x2d
  43d494:	b.ne	43d4bc <argp_usage@@Base+0xb8c0>  // b.any
  43d498:	mov	w20, #0x4                   	// #4
  43d49c:	mov	w0, w20
  43d4a0:	ldp	x20, x19, [sp, #80]
  43d4a4:	ldp	x22, x21, [sp, #64]
  43d4a8:	ldp	x24, x23, [sp, #48]
  43d4ac:	ldr	x25, [sp, #32]
  43d4b0:	ldp	x29, x30, [sp, #16]
  43d4b4:	add	sp, sp, #0x60
  43d4b8:	ret
  43d4bc:	mov	x0, x20
  43d4c0:	mov	x1, x21
  43d4c4:	mov	w2, w24
  43d4c8:	bl	404840 <strtoumax@plt>
  43d4cc:	str	x0, [sp, #8]
  43d4d0:	ldr	x25, [x21]
  43d4d4:	cmp	x25, x20
  43d4d8:	b.eq	43d580 <argp_usage@@Base+0xb984>  // b.none
  43d4dc:	ldr	w20, [x23]
  43d4e0:	cbz	w20, 43d4f0 <argp_usage@@Base+0xb8f4>
  43d4e4:	cmp	w20, #0x22
  43d4e8:	b.ne	43d498 <argp_usage@@Base+0xb89c>  // b.any
  43d4ec:	mov	w20, #0x1                   	// #1
  43d4f0:	cbz	x22, 43d5a8 <argp_usage@@Base+0xb9ac>
  43d4f4:	ldrb	w23, [x25]
  43d4f8:	cbz	w23, 43d5b4 <argp_usage@@Base+0xb9b8>
  43d4fc:	mov	x0, x22
  43d500:	mov	w1, w23
  43d504:	bl	404a70 <strchr@plt>
  43d508:	cbz	x0, 43d608 <argp_usage@@Base+0xba0c>
  43d50c:	sub	w8, w23, #0x45
  43d510:	mov	w1, #0x400                 	// #1024
  43d514:	cmp	w8, #0x2f
  43d518:	mov	w24, #0x1                   	// #1
  43d51c:	b.hi	43d5d0 <argp_usage@@Base+0xb9d4>  // b.pmore
  43d520:	mov	w9, #0x1                   	// #1
  43d524:	lsl	x8, x9, x8
  43d528:	mov	x9, #0x8945                	// #35141
  43d52c:	movk	x9, #0x30, lsl #16
  43d530:	movk	x9, #0x8144, lsl #32
  43d534:	tst	x8, x9
  43d538:	b.eq	43d5d0 <argp_usage@@Base+0xb9d4>  // b.none
  43d53c:	mov	w1, #0x30                  	// #48
  43d540:	mov	x0, x22
  43d544:	bl	404a70 <strchr@plt>
  43d548:	cbz	x0, 43d5bc <argp_usage@@Base+0xb9c0>
  43d54c:	ldrb	w8, [x25, #1]
  43d550:	cmp	w8, #0x42
  43d554:	b.eq	43d5c8 <argp_usage@@Base+0xb9cc>  // b.none
  43d558:	cmp	w8, #0x44
  43d55c:	b.eq	43d5c8 <argp_usage@@Base+0xb9cc>  // b.none
  43d560:	cmp	w8, #0x69
  43d564:	b.ne	43d5bc <argp_usage@@Base+0xb9c0>  // b.any
  43d568:	ldrb	w8, [x25, #2]
  43d56c:	mov	w9, #0x3                   	// #3
  43d570:	mov	w1, #0x400                 	// #1024
  43d574:	cmp	w8, #0x42
  43d578:	csinc	x24, x9, xzr, eq  // eq = none
  43d57c:	b	43d5d0 <argp_usage@@Base+0xb9d4>
  43d580:	cbz	x22, 43d498 <argp_usage@@Base+0xb89c>
  43d584:	ldrb	w1, [x25]
  43d588:	cbz	w1, 43d498 <argp_usage@@Base+0xb89c>
  43d58c:	mov	x0, x22
  43d590:	bl	404a70 <strchr@plt>
  43d594:	cbz	x0, 43d498 <argp_usage@@Base+0xb89c>
  43d598:	mov	w8, #0x1                   	// #1
  43d59c:	mov	w20, wzr
  43d5a0:	str	x8, [sp, #8]
  43d5a4:	cbnz	x22, 43d4f4 <argp_usage@@Base+0xb8f8>
  43d5a8:	ldr	x8, [sp, #8]
  43d5ac:	str	x8, [x19]
  43d5b0:	b	43d49c <argp_usage@@Base+0xb8a0>
  43d5b4:	mov	w0, w20
  43d5b8:	b	43d6e4 <argp_usage@@Base+0xbae8>
  43d5bc:	mov	w1, #0x400                 	// #1024
  43d5c0:	mov	w24, #0x1                   	// #1
  43d5c4:	b	43d5d0 <argp_usage@@Base+0xb9d4>
  43d5c8:	mov	w1, #0x3e8                 	// #1000
  43d5cc:	mov	w24, #0x2                   	// #2
  43d5d0:	sub	w8, w23, #0x42
  43d5d4:	cmp	w8, #0x35
  43d5d8:	b.hi	43d608 <argp_usage@@Base+0xba0c>  // b.pmore
  43d5dc:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d5e0:	add	x9, x9, #0xba
  43d5e4:	adr	x10, 43d5f8 <argp_usage@@Base+0xb9fc>
  43d5e8:	ldrb	w11, [x9, x8]
  43d5ec:	add	x10, x10, x11, lsl #2
  43d5f0:	mov	w0, wzr
  43d5f4:	br	x10
  43d5f8:	add	x0, sp, #0x8
  43d5fc:	mov	w2, #0x3                   	// #3
  43d600:	bl	43d73c <argp_usage@@Base+0xbb40>
  43d604:	b	43d6b0 <argp_usage@@Base+0xbab4>
  43d608:	ldr	x9, [sp, #8]
  43d60c:	mov	w8, wzr
  43d610:	str	x9, [x19]
  43d614:	orr	w9, w20, #0x2
  43d618:	b	43d6d8 <argp_usage@@Base+0xbadc>
  43d61c:	add	x0, sp, #0x8
  43d620:	mov	w2, #0x1                   	// #1
  43d624:	bl	43d73c <argp_usage@@Base+0xbb40>
  43d628:	b	43d6b0 <argp_usage@@Base+0xbab4>
  43d62c:	add	x0, sp, #0x8
  43d630:	mov	w2, #0x2                   	// #2
  43d634:	bl	43d73c <argp_usage@@Base+0xbb40>
  43d638:	b	43d6b0 <argp_usage@@Base+0xbab4>
  43d63c:	add	x0, sp, #0x8
  43d640:	mov	w2, #0x4                   	// #4
  43d644:	bl	43d73c <argp_usage@@Base+0xbb40>
  43d648:	b	43d6b0 <argp_usage@@Base+0xbab4>
  43d64c:	add	x0, sp, #0x8
  43d650:	mov	w1, #0x400                 	// #1024
  43d654:	b	43d6ac <argp_usage@@Base+0xbab0>
  43d658:	add	x0, sp, #0x8
  43d65c:	mov	w2, #0x6                   	// #6
  43d660:	bl	43d73c <argp_usage@@Base+0xbb40>
  43d664:	b	43d6b0 <argp_usage@@Base+0xbab4>
  43d668:	add	x0, sp, #0x8
  43d66c:	mov	w2, #0x5                   	// #5
  43d670:	bl	43d73c <argp_usage@@Base+0xbb40>
  43d674:	b	43d6b0 <argp_usage@@Base+0xbab4>
  43d678:	add	x0, sp, #0x8
  43d67c:	mov	w2, #0x8                   	// #8
  43d680:	bl	43d73c <argp_usage@@Base+0xbb40>
  43d684:	b	43d6b0 <argp_usage@@Base+0xbab4>
  43d688:	add	x0, sp, #0x8
  43d68c:	mov	w2, #0x7                   	// #7
  43d690:	bl	43d73c <argp_usage@@Base+0xbb40>
  43d694:	b	43d6b0 <argp_usage@@Base+0xbab4>
  43d698:	add	x0, sp, #0x8
  43d69c:	mov	w1, #0x200                 	// #512
  43d6a0:	b	43d6ac <argp_usage@@Base+0xbab0>
  43d6a4:	add	x0, sp, #0x8
  43d6a8:	mov	w1, #0x2                   	// #2
  43d6ac:	bl	43d714 <argp_usage@@Base+0xbb18>
  43d6b0:	ldr	x8, [x21]
  43d6b4:	orr	w10, w0, w20
  43d6b8:	orr	w11, w10, #0x2
  43d6bc:	add	x9, x8, x24
  43d6c0:	str	x9, [x21]
  43d6c4:	ldrb	w9, [x8, x24]
  43d6c8:	mov	w8, #0x1                   	// #1
  43d6cc:	cmp	w9, #0x0
  43d6d0:	csel	w20, w10, w11, eq  // eq = none
  43d6d4:	mov	w9, #0x4                   	// #4
  43d6d8:	mov	w0, w20
  43d6dc:	mov	w20, w9
  43d6e0:	cbz	w8, 43d49c <argp_usage@@Base+0xb8a0>
  43d6e4:	ldr	x8, [sp, #8]
  43d6e8:	mov	w20, w0
  43d6ec:	str	x8, [x19]
  43d6f0:	b	43d49c <argp_usage@@Base+0xb8a0>
  43d6f4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d6f8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d6fc:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d700:	add	x0, x0, #0xf0
  43d704:	add	x1, x1, #0x116
  43d708:	add	x3, x3, #0x122
  43d70c:	mov	w2, #0x54                  	// #84
  43d710:	bl	404cf0 <__assert_fail@plt>
  43d714:	ldr	x8, [x0]
  43d718:	sxtw	x9, w1
  43d71c:	umulh	x10, x9, x8
  43d720:	mul	x9, x8, x9
  43d724:	cmp	xzr, x10
  43d728:	cset	w8, ne  // ne = any
  43d72c:	csinv	x9, x9, xzr, eq  // eq = none
  43d730:	str	x9, [x0]
  43d734:	mov	w0, w8
  43d738:	ret
  43d73c:	stp	x29, x30, [sp, #-48]!
  43d740:	stp	x22, x21, [sp, #16]
  43d744:	stp	x20, x19, [sp, #32]
  43d748:	mov	x29, sp
  43d74c:	cbz	w2, 43d77c <argp_usage@@Base+0xbb80>
  43d750:	mov	w19, w2
  43d754:	mov	w20, w1
  43d758:	mov	x21, x0
  43d75c:	mov	w22, wzr
  43d760:	mov	x0, x21
  43d764:	mov	w1, w20
  43d768:	sub	w19, w19, #0x1
  43d76c:	bl	43d714 <argp_usage@@Base+0xbb18>
  43d770:	orr	w22, w0, w22
  43d774:	cbnz	w19, 43d760 <argp_usage@@Base+0xbb64>
  43d778:	b	43d780 <argp_usage@@Base+0xbb84>
  43d77c:	mov	w22, wzr
  43d780:	mov	w0, w22
  43d784:	ldp	x20, x19, [sp, #32]
  43d788:	ldp	x22, x21, [sp, #16]
  43d78c:	ldp	x29, x30, [sp], #48
  43d790:	ret
  43d794:	sub	sp, sp, #0x120
  43d798:	stp	x29, x30, [sp, #256]
  43d79c:	add	x29, sp, #0x100
  43d7a0:	mov	x8, #0xffffffffffffffc8    	// #-56
  43d7a4:	mov	x9, sp
  43d7a8:	sub	x10, x29, #0x78
  43d7ac:	movk	x8, #0xff80, lsl #32
  43d7b0:	add	x11, x29, #0x20
  43d7b4:	add	x9, x9, #0x80
  43d7b8:	add	x10, x10, #0x38
  43d7bc:	stp	x9, x8, [x29, #-16]
  43d7c0:	stp	x11, x10, [x29, #-32]
  43d7c4:	stp	x1, x2, [x29, #-120]
  43d7c8:	stp	x3, x4, [x29, #-104]
  43d7cc:	stp	x5, x6, [x29, #-88]
  43d7d0:	stur	x7, [x29, #-72]
  43d7d4:	stp	q0, q1, [sp]
  43d7d8:	ldp	q0, q1, [x29, #-32]
  43d7dc:	sub	x1, x29, #0x40
  43d7e0:	str	x28, [sp, #272]
  43d7e4:	stp	q2, q3, [sp, #32]
  43d7e8:	stp	q4, q5, [sp, #64]
  43d7ec:	stp	q6, q7, [sp, #96]
  43d7f0:	stp	q0, q1, [x29, #-64]
  43d7f4:	bl	44db54 <_obstack_memory_used@@Base+0xf8f4>
  43d7f8:	ldr	x28, [sp, #272]
  43d7fc:	ldp	x29, x30, [sp, #256]
  43d800:	add	sp, sp, #0x120
  43d804:	ret
  43d808:	sub	sp, sp, #0x50
  43d80c:	stp	x29, x30, [sp, #16]
  43d810:	stp	x24, x23, [sp, #32]
  43d814:	stp	x22, x21, [sp, #48]
  43d818:	stp	x20, x19, [sp, #64]
  43d81c:	add	x29, sp, #0x10
  43d820:	mov	x20, x0
  43d824:	bl	4049c0 <chdir@plt>
  43d828:	mov	w21, w0
  43d82c:	cbz	w0, 43d9f0 <argp_usage@@Base+0xbdf4>
  43d830:	bl	404d00 <__errno_location@plt>
  43d834:	ldr	w8, [x0]
  43d838:	cmp	w8, #0x24
  43d83c:	b.ne	43d9f0 <argp_usage@@Base+0xbdf4>  // b.any
  43d840:	mov	x19, x0
  43d844:	mov	x0, x20
  43d848:	bl	404190 <strlen@plt>
  43d84c:	mov	x21, x0
  43d850:	add	x0, sp, #0x8
  43d854:	bl	43dabc <argp_usage@@Base+0xbec0>
  43d858:	cbz	x21, 43da3c <argp_usage@@Base+0xbe40>
  43d85c:	cmp	x21, #0xfff
  43d860:	b.ls	43da5c <argp_usage@@Base+0xbe60>  // b.plast
  43d864:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d868:	add	x1, x1, #0x23e
  43d86c:	mov	x0, x20
  43d870:	bl	404a60 <strspn@plt>
  43d874:	mov	x22, x20
  43d878:	cbz	x0, 43d914 <argp_usage@@Base+0xbd18>
  43d87c:	mov	x23, x0
  43d880:	cmp	x0, #0x2
  43d884:	b.ne	43d8cc <argp_usage@@Base+0xbcd0>  // b.any
  43d888:	add	x0, x20, #0x3
  43d88c:	sub	x2, x21, #0x3
  43d890:	mov	w1, #0x2f                  	// #47
  43d894:	mov	w23, #0x2f                  	// #47
  43d898:	bl	404b70 <memchr@plt>
  43d89c:	cbz	x0, 43d8e8 <argp_usage@@Base+0xbcec>
  43d8a0:	mov	x22, x0
  43d8a4:	strb	wzr, [x0]
  43d8a8:	add	x0, sp, #0x8
  43d8ac:	mov	x1, x20
  43d8b0:	bl	43dac8 <argp_usage@@Base+0xbecc>
  43d8b4:	strb	w23, [x22]
  43d8b8:	cbz	w0, 43d900 <argp_usage@@Base+0xbd04>
  43d8bc:	mov	w8, #0x2                   	// #2
  43d8c0:	mov	x22, x20
  43d8c4:	cbnz	w8, 43d9ac <argp_usage@@Base+0xbdb0>
  43d8c8:	b	43d914 <argp_usage@@Base+0xbd18>
  43d8cc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43d8d0:	add	x1, x1, #0x23e
  43d8d4:	add	x0, sp, #0x8
  43d8d8:	bl	43dac8 <argp_usage@@Base+0xbecc>
  43d8dc:	cbnz	w0, 43d9dc <argp_usage@@Base+0xbde0>
  43d8e0:	add	x22, x20, x23
  43d8e4:	b	43d914 <argp_usage@@Base+0xbd18>
  43d8e8:	mov	w8, #0x24                  	// #36
  43d8ec:	str	w8, [x19]
  43d8f0:	mov	w8, #0x1                   	// #1
  43d8f4:	mov	x22, x20
  43d8f8:	cbnz	w8, 43d9ac <argp_usage@@Base+0xbdb0>
  43d8fc:	b	43d914 <argp_usage@@Base+0xbd18>
  43d900:	add	x0, x22, #0x1
  43d904:	bl	43db10 <argp_usage@@Base+0xbf14>
  43d908:	mov	x22, x0
  43d90c:	mov	w8, wzr
  43d910:	cbnz	w8, 43d9ac <argp_usage@@Base+0xbdb0>
  43d914:	ldrb	w8, [x22]
  43d918:	cmp	w8, #0x2f
  43d91c:	b.eq	43da7c <argp_usage@@Base+0xbe80>  // b.none
  43d920:	add	x21, x20, x21
  43d924:	cmp	x22, x21
  43d928:	b.hi	43da9c <argp_usage@@Base+0xbea0>  // b.pmore
  43d92c:	mov	w23, #0x2f                  	// #47
  43d930:	mov	w24, #0x24                  	// #36
  43d934:	b	43d944 <argp_usage@@Base+0xbd48>
  43d938:	mov	w8, #0x1                   	// #1
  43d93c:	str	w24, [x19]
  43d940:	cbnz	w8, 43d9ac <argp_usage@@Base+0xbdb0>
  43d944:	sub	x8, x21, x22
  43d948:	cmp	x8, #0x1, lsl #12
  43d94c:	b.lt	43d9b8 <argp_usage@@Base+0xbdbc>  // b.tstop
  43d950:	mov	w1, #0x2f                  	// #47
  43d954:	mov	w2, #0x1000                	// #4096
  43d958:	mov	x0, x22
  43d95c:	bl	404a90 <memrchr@plt>
  43d960:	cbz	x0, 43d938 <argp_usage@@Base+0xbd3c>
  43d964:	sub	x8, x0, x22
  43d968:	mov	x20, x0
  43d96c:	cmp	x8, #0x1, lsl #12
  43d970:	strb	wzr, [x0]
  43d974:	b.ge	43da1c <argp_usage@@Base+0xbe20>  // b.tcont
  43d978:	add	x0, sp, #0x8
  43d97c:	mov	x1, x22
  43d980:	bl	43dac8 <argp_usage@@Base+0xbecc>
  43d984:	strb	w23, [x20]
  43d988:	cbz	w0, 43d998 <argp_usage@@Base+0xbd9c>
  43d98c:	mov	w8, #0x2                   	// #2
  43d990:	cbz	w8, 43d944 <argp_usage@@Base+0xbd48>
  43d994:	b	43d9ac <argp_usage@@Base+0xbdb0>
  43d998:	add	x0, x20, #0x1
  43d99c:	bl	43db10 <argp_usage@@Base+0xbf14>
  43d9a0:	mov	x22, x0
  43d9a4:	mov	w8, wzr
  43d9a8:	cbz	wzr, 43d944 <argp_usage@@Base+0xbd48>
  43d9ac:	cmp	w8, #0x2
  43d9b0:	b.eq	43d9dc <argp_usage@@Base+0xbde0>  // b.none
  43d9b4:	b	43d9ec <argp_usage@@Base+0xbdf0>
  43d9b8:	cmp	x22, x21
  43d9bc:	b.cs	43d9d0 <argp_usage@@Base+0xbdd4>  // b.hs, b.nlast
  43d9c0:	add	x0, sp, #0x8
  43d9c4:	mov	x1, x22
  43d9c8:	bl	43dac8 <argp_usage@@Base+0xbecc>
  43d9cc:	cbnz	w0, 43d9dc <argp_usage@@Base+0xbde0>
  43d9d0:	add	x0, sp, #0x8
  43d9d4:	bl	43db3c <argp_usage@@Base+0xbf40>
  43d9d8:	cbz	w0, 43da0c <argp_usage@@Base+0xbe10>
  43d9dc:	ldr	w20, [x19]
  43d9e0:	add	x0, sp, #0x8
  43d9e4:	bl	43db54 <argp_usage@@Base+0xbf58>
  43d9e8:	str	w20, [x19]
  43d9ec:	mov	w21, #0xffffffff            	// #-1
  43d9f0:	mov	w0, w21
  43d9f4:	ldp	x20, x19, [sp, #64]
  43d9f8:	ldp	x22, x21, [sp, #48]
  43d9fc:	ldp	x24, x23, [sp, #32]
  43da00:	ldp	x29, x30, [sp, #16]
  43da04:	add	sp, sp, #0x50
  43da08:	ret
  43da0c:	add	x0, sp, #0x8
  43da10:	bl	43db54 <argp_usage@@Base+0xbf58>
  43da14:	mov	w21, wzr
  43da18:	b	43d9f0 <argp_usage@@Base+0xbdf4>
  43da1c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da20:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da24:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da28:	add	x0, x0, #0x1c4
  43da2c:	add	x1, x1, #0x179
  43da30:	add	x3, x3, #0x186
  43da34:	mov	w2, #0xb3                  	// #179
  43da38:	bl	404cf0 <__assert_fail@plt>
  43da3c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da40:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da44:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da48:	add	x0, x0, #0x171
  43da4c:	add	x1, x1, #0x179
  43da50:	add	x3, x3, #0x186
  43da54:	mov	w2, #0x7e                  	// #126
  43da58:	bl	404cf0 <__assert_fail@plt>
  43da5c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da60:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da64:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da68:	add	x0, x0, #0x19d
  43da6c:	add	x1, x1, #0x179
  43da70:	add	x3, x3, #0x186
  43da74:	mov	w2, #0x7f                  	// #127
  43da78:	bl	404cf0 <__assert_fail@plt>
  43da7c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da80:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da84:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43da88:	add	x0, x0, #0x1a9
  43da8c:	add	x1, x1, #0x179
  43da90:	add	x3, x3, #0x186
  43da94:	mov	w2, #0xa2                  	// #162
  43da98:	bl	404cf0 <__assert_fail@plt>
  43da9c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43daa0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43daa4:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43daa8:	add	x0, x0, #0x1b5
  43daac:	add	x1, x1, #0x179
  43dab0:	add	x3, x3, #0x186
  43dab4:	mov	w2, #0xa3                  	// #163
  43dab8:	bl	404cf0 <__assert_fail@plt>
  43dabc:	mov	w8, #0xffffff9c            	// #-100
  43dac0:	str	w8, [x0]
  43dac4:	ret
  43dac8:	stp	x29, x30, [sp, #-32]!
  43dacc:	stp	x20, x19, [sp, #16]
  43dad0:	mov	x19, x0
  43dad4:	ldr	w0, [x0]
  43dad8:	mov	w2, #0x4900                	// #18688
  43dadc:	mov	x29, sp
  43dae0:	bl	404ce0 <openat@plt>
  43dae4:	tbnz	w0, #31, 43db00 <argp_usage@@Base+0xbf04>
  43dae8:	mov	w20, w0
  43daec:	mov	x0, x19
  43daf0:	bl	43db54 <argp_usage@@Base+0xbf58>
  43daf4:	mov	w0, wzr
  43daf8:	str	w20, [x19]
  43dafc:	b	43db04 <argp_usage@@Base+0xbf08>
  43db00:	mov	w0, #0xffffffff            	// #-1
  43db04:	ldp	x20, x19, [sp, #16]
  43db08:	ldp	x29, x30, [sp], #32
  43db0c:	ret
  43db10:	stp	x29, x30, [sp, #-32]!
  43db14:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43db18:	add	x1, x1, #0x23e
  43db1c:	str	x19, [sp, #16]
  43db20:	mov	x29, sp
  43db24:	mov	x19, x0
  43db28:	bl	404a60 <strspn@plt>
  43db2c:	add	x0, x19, x0
  43db30:	ldr	x19, [sp, #16]
  43db34:	ldp	x29, x30, [sp], #32
  43db38:	ret
  43db3c:	stp	x29, x30, [sp, #-16]!
  43db40:	ldr	w0, [x0]
  43db44:	mov	x29, sp
  43db48:	bl	404200 <fchdir@plt>
  43db4c:	ldp	x29, x30, [sp], #16
  43db50:	ret
  43db54:	stp	x29, x30, [sp, #-16]!
  43db58:	ldr	w0, [x0]
  43db5c:	mov	x29, sp
  43db60:	tbnz	w0, #31, 43db6c <argp_usage@@Base+0xbf70>
  43db64:	bl	4047c0 <close@plt>
  43db68:	cbnz	w0, 43db74 <argp_usage@@Base+0xbf78>
  43db6c:	ldp	x29, x30, [sp], #16
  43db70:	ret
  43db74:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43db78:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43db7c:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43db80:	add	x0, x0, #0x1d7
  43db84:	add	x1, x1, #0x179
  43db88:	add	x3, x3, #0x1e4
  43db8c:	mov	w2, #0x40                  	// #64
  43db90:	bl	404cf0 <__assert_fail@plt>
  43db94:	sub	sp, sp, #0xe0
  43db98:	stp	x29, x30, [sp, #208]
  43db9c:	add	x29, sp, #0xd0
  43dba0:	mov	x8, #0xffffffffffffffd0    	// #-48
  43dba4:	mov	x9, sp
  43dba8:	sub	x10, x29, #0x50
  43dbac:	movk	x8, #0xff80, lsl #32
  43dbb0:	add	x11, x29, #0x10
  43dbb4:	cmp	w1, #0xb
  43dbb8:	add	x9, x9, #0x80
  43dbbc:	add	x10, x10, #0x30
  43dbc0:	stp	x2, x3, [x29, #-80]
  43dbc4:	stp	x4, x5, [x29, #-64]
  43dbc8:	stp	x6, x7, [x29, #-48]
  43dbcc:	stp	q1, q2, [sp, #16]
  43dbd0:	stp	q3, q4, [sp, #48]
  43dbd4:	str	q0, [sp]
  43dbd8:	stp	q5, q6, [sp, #80]
  43dbdc:	str	q7, [sp, #112]
  43dbe0:	stp	x9, x8, [x29, #-16]
  43dbe4:	stp	x11, x10, [x29, #-32]
  43dbe8:	b.hi	43dc40 <argp_usage@@Base+0xc044>  // b.pmore
  43dbec:	mov	w8, #0x1                   	// #1
  43dbf0:	lsl	w8, w8, w1
  43dbf4:	mov	w9, #0x514                 	// #1300
  43dbf8:	tst	w8, w9
  43dbfc:	b.ne	43dc74 <argp_usage@@Base+0xc078>  // b.any
  43dc00:	mov	w9, #0xa0a                 	// #2570
  43dc04:	tst	w8, w9
  43dc08:	b.ne	43dc6c <argp_usage@@Base+0xc070>  // b.any
  43dc0c:	cbnz	w1, 43dc40 <argp_usage@@Base+0xc044>
  43dc10:	ldursw	x8, [x29, #-8]
  43dc14:	tbz	w8, #31, 43dc28 <argp_usage@@Base+0xc02c>
  43dc18:	add	w9, w8, #0x8
  43dc1c:	cmp	w9, #0x0
  43dc20:	stur	w9, [x29, #-8]
  43dc24:	b.le	43dd38 <argp_usage@@Base+0xc13c>
  43dc28:	ldur	x8, [x29, #-32]
  43dc2c:	add	x9, x8, #0x8
  43dc30:	stur	x9, [x29, #-32]
  43dc34:	ldr	w1, [x8]
  43dc38:	bl	43dd44 <argp_usage@@Base+0xc148>
  43dc3c:	b	43dca0 <argp_usage@@Base+0xc0a4>
  43dc40:	sub	w8, w1, #0x400
  43dc44:	cmp	w8, #0xa
  43dc48:	b.hi	43dcf0 <argp_usage@@Base+0xc0f4>  // b.pmore
  43dc4c:	mov	w9, #0x1                   	// #1
  43dc50:	lsl	w9, w9, w8
  43dc54:	mov	w10, #0x285                 	// #645
  43dc58:	tst	w9, w10
  43dc5c:	b.ne	43dc74 <argp_usage@@Base+0xc078>  // b.any
  43dc60:	mov	w10, #0x502                 	// #1282
  43dc64:	tst	w9, w10
  43dc68:	b.eq	43dcac <argp_usage@@Base+0xc0b0>  // b.none
  43dc6c:	bl	404ae0 <fcntl@plt>
  43dc70:	b	43dca0 <argp_usage@@Base+0xc0a4>
  43dc74:	ldursw	x8, [x29, #-8]
  43dc78:	tbz	w8, #31, 43dc8c <argp_usage@@Base+0xc090>
  43dc7c:	add	w9, w8, #0x8
  43dc80:	cmp	w9, #0x0
  43dc84:	stur	w9, [x29, #-8]
  43dc88:	b.le	43dce4 <argp_usage@@Base+0xc0e8>
  43dc8c:	ldur	x8, [x29, #-32]
  43dc90:	add	x9, x8, #0x8
  43dc94:	stur	x9, [x29, #-32]
  43dc98:	ldr	w2, [x8]
  43dc9c:	bl	404ae0 <fcntl@plt>
  43dca0:	ldp	x29, x30, [sp, #208]
  43dca4:	add	sp, sp, #0xe0
  43dca8:	ret
  43dcac:	cmp	w8, #0x6
  43dcb0:	b.ne	43dcf0 <argp_usage@@Base+0xc0f4>  // b.any
  43dcb4:	ldursw	x8, [x29, #-8]
  43dcb8:	tbz	w8, #31, 43dccc <argp_usage@@Base+0xc0d0>
  43dcbc:	add	w9, w8, #0x8
  43dcc0:	cmp	w9, #0x0
  43dcc4:	stur	w9, [x29, #-8]
  43dcc8:	b.le	43dd20 <argp_usage@@Base+0xc124>
  43dccc:	ldur	x8, [x29, #-32]
  43dcd0:	add	x9, x8, #0x8
  43dcd4:	stur	x9, [x29, #-32]
  43dcd8:	ldr	w1, [x8]
  43dcdc:	bl	43dd60 <argp_usage@@Base+0xc164>
  43dce0:	b	43dca0 <argp_usage@@Base+0xc0a4>
  43dce4:	ldur	x9, [x29, #-24]
  43dce8:	add	x8, x9, x8
  43dcec:	b	43dc98 <argp_usage@@Base+0xc09c>
  43dcf0:	ldursw	x8, [x29, #-8]
  43dcf4:	tbz	w8, #31, 43dd08 <argp_usage@@Base+0xc10c>
  43dcf8:	add	w9, w8, #0x8
  43dcfc:	cmp	w9, #0x0
  43dd00:	stur	w9, [x29, #-8]
  43dd04:	b.le	43dd2c <argp_usage@@Base+0xc130>
  43dd08:	ldur	x8, [x29, #-32]
  43dd0c:	add	x9, x8, #0x8
  43dd10:	stur	x9, [x29, #-32]
  43dd14:	ldr	x2, [x8]
  43dd18:	bl	404ae0 <fcntl@plt>
  43dd1c:	b	43dca0 <argp_usage@@Base+0xc0a4>
  43dd20:	ldur	x9, [x29, #-24]
  43dd24:	add	x8, x9, x8
  43dd28:	b	43dcd8 <argp_usage@@Base+0xc0dc>
  43dd2c:	ldur	x9, [x29, #-24]
  43dd30:	add	x8, x9, x8
  43dd34:	b	43dd14 <argp_usage@@Base+0xc118>
  43dd38:	ldur	x9, [x29, #-24]
  43dd3c:	add	x8, x9, x8
  43dd40:	b	43dc34 <argp_usage@@Base+0xc038>
  43dd44:	stp	x29, x30, [sp, #-16]!
  43dd48:	mov	w2, w1
  43dd4c:	mov	w1, wzr
  43dd50:	mov	x29, sp
  43dd54:	bl	404ae0 <fcntl@plt>
  43dd58:	ldp	x29, x30, [sp], #16
  43dd5c:	ret
  43dd60:	stp	x29, x30, [sp, #-48]!
  43dd64:	stp	x22, x21, [sp, #16]
  43dd68:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43dd6c:	ldr	w8, [x22, #3864]
  43dd70:	stp	x20, x19, [sp, #32]
  43dd74:	mov	w20, w1
  43dd78:	mov	w21, w0
  43dd7c:	mov	x29, sp
  43dd80:	tbnz	w8, #31, 43dde0 <argp_usage@@Base+0xc1e4>
  43dd84:	mov	w1, #0x406                 	// #1030
  43dd88:	mov	w0, w21
  43dd8c:	mov	w2, w20
  43dd90:	bl	404ae0 <fcntl@plt>
  43dd94:	mov	w19, w0
  43dd98:	tbz	w0, #31, 43ddd0 <argp_usage@@Base+0xc1d4>
  43dd9c:	bl	404d00 <__errno_location@plt>
  43dda0:	ldr	w8, [x0]
  43dda4:	cmp	w8, #0x16
  43dda8:	b.ne	43ddd0 <argp_usage@@Base+0xc1d4>  // b.any
  43ddac:	mov	w0, w21
  43ddb0:	mov	w1, w20
  43ddb4:	bl	43dd44 <argp_usage@@Base+0xc148>
  43ddb8:	mov	w19, w0
  43ddbc:	tbnz	w0, #31, 43ddd8 <argp_usage@@Base+0xc1dc>
  43ddc0:	mov	w8, #0xffffffff            	// #-1
  43ddc4:	str	w8, [x22, #3864]
  43ddc8:	tbz	w19, #31, 43ddf4 <argp_usage@@Base+0xc1f8>
  43ddcc:	b	43de44 <argp_usage@@Base+0xc248>
  43ddd0:	mov	w8, #0x1                   	// #1
  43ddd4:	str	w8, [x22, #3864]
  43ddd8:	tbz	w19, #31, 43ddf4 <argp_usage@@Base+0xc1f8>
  43dddc:	b	43de44 <argp_usage@@Base+0xc248>
  43dde0:	mov	w0, w21
  43dde4:	mov	w1, w20
  43dde8:	bl	43dd44 <argp_usage@@Base+0xc148>
  43ddec:	mov	w19, w0
  43ddf0:	tbnz	w19, #31, 43de44 <argp_usage@@Base+0xc248>
  43ddf4:	ldr	w8, [x22, #3864]
  43ddf8:	cmn	w8, #0x1
  43ddfc:	b.ne	43de44 <argp_usage@@Base+0xc248>  // b.any
  43de00:	mov	w1, #0x1                   	// #1
  43de04:	mov	w0, w19
  43de08:	bl	404ae0 <fcntl@plt>
  43de0c:	tbnz	w0, #31, 43de28 <argp_usage@@Base+0xc22c>
  43de10:	orr	w2, w0, #0x1
  43de14:	mov	w1, #0x2                   	// #2
  43de18:	mov	w0, w19
  43de1c:	bl	404ae0 <fcntl@plt>
  43de20:	cmn	w0, #0x1
  43de24:	b.ne	43de44 <argp_usage@@Base+0xc248>  // b.any
  43de28:	bl	404d00 <__errno_location@plt>
  43de2c:	ldr	w21, [x0]
  43de30:	mov	x20, x0
  43de34:	mov	w0, w19
  43de38:	bl	4047c0 <close@plt>
  43de3c:	mov	w19, #0xffffffff            	// #-1
  43de40:	str	w21, [x20]
  43de44:	mov	w0, w19
  43de48:	ldp	x20, x19, [sp, #32]
  43de4c:	ldp	x22, x21, [sp, #16]
  43de50:	ldp	x29, x30, [sp], #48
  43de54:	ret
  43de58:	stp	x29, x30, [sp, #-16]!
  43de5c:	mov	w5, wzr
  43de60:	mov	w6, wzr
  43de64:	mov	x29, sp
  43de68:	bl	44e918 <_obstack_memory_used@@Base+0x106b8>
  43de6c:	ldp	x29, x30, [sp], #16
  43de70:	ret
  43de74:	stp	x29, x30, [sp, #-16]!
  43de78:	mov	x6, x5
  43de7c:	mov	w5, wzr
  43de80:	mov	w7, wzr
  43de84:	mov	x29, sp
  43de88:	bl	44dd4c <_obstack_memory_used@@Base+0xfaec>
  43de8c:	ldp	x29, x30, [sp], #16
  43de90:	ret
  43de94:	stp	x29, x30, [sp, #-16]!
  43de98:	mov	w5, #0x1                   	// #1
  43de9c:	mov	w6, wzr
  43dea0:	mov	x29, sp
  43dea4:	bl	44e918 <_obstack_memory_used@@Base+0x106b8>
  43dea8:	ldp	x29, x30, [sp], #16
  43deac:	ret
  43deb0:	stp	x29, x30, [sp, #-16]!
  43deb4:	mov	x6, x5
  43deb8:	mov	w5, #0x1                   	// #1
  43debc:	mov	w7, wzr
  43dec0:	mov	x29, sp
  43dec4:	bl	44dd4c <_obstack_memory_used@@Base+0xfaec>
  43dec8:	ldp	x29, x30, [sp], #16
  43decc:	ret
  43ded0:	sub	sp, sp, #0x40
  43ded4:	stp	x29, x30, [sp, #16]
  43ded8:	add	x29, sp, #0x10
  43dedc:	cmp	x0, #0x0
  43dee0:	sub	x8, x29, #0x4
  43dee4:	stp	x20, x19, [sp, #48]
  43dee8:	csel	x20, x8, x0, eq  // eq = none
  43deec:	mov	x0, x20
  43def0:	stp	x22, x21, [sp, #32]
  43def4:	mov	x22, x2
  43def8:	mov	x19, x1
  43defc:	bl	404100 <mbrtowc@plt>
  43df00:	mov	x21, x0
  43df04:	cbz	x22, 43df28 <argp_usage@@Base+0xc32c>
  43df08:	cmn	x21, #0x2
  43df0c:	b.cc	43df28 <argp_usage@@Base+0xc32c>  // b.lo, b.ul, b.last
  43df10:	mov	w0, wzr
  43df14:	bl	44c284 <_obstack_memory_used@@Base+0xe024>
  43df18:	tbnz	w0, #0, 43df28 <argp_usage@@Base+0xc32c>
  43df1c:	ldrb	w8, [x19]
  43df20:	mov	w21, #0x1                   	// #1
  43df24:	str	w8, [x20]
  43df28:	mov	x0, x21
  43df2c:	ldp	x20, x19, [sp, #48]
  43df30:	ldp	x22, x21, [sp, #32]
  43df34:	ldp	x29, x30, [sp, #16]
  43df38:	add	sp, sp, #0x40
  43df3c:	ret

000000000043df40 <_obstack_begin@@Base>:
  43df40:	stp	x29, x30, [sp, #-16]!
  43df44:	ldrb	w8, [x0, #80]
  43df48:	mov	x29, sp
  43df4c:	stp	x3, x4, [x0, #56]
  43df50:	and	w8, w8, #0xfe
  43df54:	strb	w8, [x0, #80]
  43df58:	bl	43df68 <_obstack_begin@@Base+0x28>
  43df5c:	mov	w0, #0x1                   	// #1
  43df60:	ldp	x29, x30, [sp], #16
  43df64:	ret
  43df68:	stp	x29, x30, [sp, #-48]!
  43df6c:	cmp	x2, #0x0
  43df70:	mov	w8, #0x10                  	// #16
  43df74:	stp	x20, x19, [sp, #32]
  43df78:	mov	w9, #0xfe0                 	// #4064
  43df7c:	csel	x20, x8, x2, eq  // eq = none
  43df80:	cmp	x1, #0x0
  43df84:	str	x21, [sp, #16]
  43df88:	csel	x1, x9, x1, eq  // eq = none
  43df8c:	sub	x21, x20, #0x1
  43df90:	mov	x29, sp
  43df94:	mov	x19, x0
  43df98:	str	x1, [x0]
  43df9c:	str	x21, [x0, #48]
  43dfa0:	bl	43e138 <_obstack_newchunk@@Base+0x110>
  43dfa4:	str	x0, [x19, #8]
  43dfa8:	cbz	x0, 43dff0 <_obstack_begin@@Base+0xb0>
  43dfac:	ldr	x10, [x19]
  43dfb0:	add	x8, x0, x21
  43dfb4:	neg	x9, x20
  43dfb8:	add	x8, x8, #0x10
  43dfbc:	and	x8, x8, x9
  43dfc0:	stp	x8, x8, [x19, #16]
  43dfc4:	add	x8, x0, x10
  43dfc8:	str	x8, [x0]
  43dfcc:	str	x8, [x19, #32]
  43dfd0:	str	xzr, [x0, #8]
  43dfd4:	ldrb	w8, [x19, #80]
  43dfd8:	ldr	x21, [sp, #16]
  43dfdc:	and	w8, w8, #0xfffffff9
  43dfe0:	strb	w8, [x19, #80]
  43dfe4:	ldp	x20, x19, [sp, #32]
  43dfe8:	ldp	x29, x30, [sp], #48
  43dfec:	ret
  43dff0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43dff4:	ldr	x8, [x8, #1104]
  43dff8:	blr	x8

000000000043dffc <_obstack_begin_1@@Base>:
  43dffc:	stp	x29, x30, [sp, #-16]!
  43e000:	ldrb	w8, [x0, #80]
  43e004:	mov	x29, sp
  43e008:	stp	x3, x4, [x0, #56]
  43e00c:	str	x5, [x0, #72]
  43e010:	orr	w8, w8, #0x1
  43e014:	strb	w8, [x0, #80]
  43e018:	bl	43df68 <_obstack_begin@@Base+0x28>
  43e01c:	mov	w0, #0x1                   	// #1
  43e020:	ldp	x29, x30, [sp], #16
  43e024:	ret

000000000043e028 <_obstack_newchunk@@Base>:
  43e028:	stp	x29, x30, [sp, #-64]!
  43e02c:	str	x23, [sp, #16]
  43e030:	stp	x22, x21, [sp, #32]
  43e034:	stp	x20, x19, [sp, #48]
  43e038:	ldp	x9, x8, [x0, #16]
  43e03c:	ldr	x10, [x0, #48]
  43e040:	ldp	x11, x21, [x0]
  43e044:	mov	x19, x0
  43e048:	sub	x20, x8, x9
  43e04c:	adds	x8, x20, x1
  43e050:	lsr	x9, x20, #3
  43e054:	cset	w12, cs  // cs = hs, nlast
  43e058:	adds	x10, x8, x10
  43e05c:	add	x9, x9, #0x64
  43e060:	cset	w8, cs  // cs = hs, nlast
  43e064:	adds	x9, x9, x10
  43e068:	csel	x9, x10, x9, cs  // cs = hs, nlast
  43e06c:	cmp	x9, x11
  43e070:	mov	x22, xzr
  43e074:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  43e078:	mov	x29, sp
  43e07c:	tbnz	w12, #0, 43e094 <_obstack_newchunk@@Base+0x6c>
  43e080:	tbnz	w8, #0, 43e094 <_obstack_newchunk@@Base+0x6c>
  43e084:	mov	x0, x19
  43e088:	mov	x1, x23
  43e08c:	bl	43e138 <_obstack_newchunk@@Base+0x110>
  43e090:	mov	x22, x0
  43e094:	cbz	x22, 43e12c <_obstack_newchunk@@Base+0x104>
  43e098:	add	x8, x22, x23
  43e09c:	str	x22, [x19, #8]
  43e0a0:	str	x21, [x22, #8]
  43e0a4:	str	x8, [x19, #32]
  43e0a8:	str	x8, [x22]
  43e0ac:	ldr	x8, [x19, #48]
  43e0b0:	ldr	x1, [x19, #16]
  43e0b4:	mov	x2, x20
  43e0b8:	add	x9, x22, x8
  43e0bc:	add	x9, x9, #0x10
  43e0c0:	bic	x23, x9, x8
  43e0c4:	mov	x0, x23
  43e0c8:	bl	404110 <memcpy@plt>
  43e0cc:	ldrb	w8, [x19, #80]
  43e0d0:	tbnz	w8, #1, 43e104 <_obstack_newchunk@@Base+0xdc>
  43e0d4:	ldr	x8, [x19, #48]
  43e0d8:	ldr	x9, [x19, #16]
  43e0dc:	add	x10, x21, x8
  43e0e0:	add	x10, x10, #0x10
  43e0e4:	bic	x8, x10, x8
  43e0e8:	cmp	x9, x8
  43e0ec:	b.ne	43e104 <_obstack_newchunk@@Base+0xdc>  // b.any
  43e0f0:	ldr	x8, [x21, #8]
  43e0f4:	mov	x0, x19
  43e0f8:	mov	x1, x21
  43e0fc:	str	x8, [x22, #8]
  43e100:	bl	43e170 <_obstack_newchunk@@Base+0x148>
  43e104:	ldrb	w8, [x19, #80]
  43e108:	add	x9, x23, x20
  43e10c:	stp	x23, x9, [x19, #16]
  43e110:	ldr	x23, [sp, #16]
  43e114:	and	w8, w8, #0xfffffffd
  43e118:	strb	w8, [x19, #80]
  43e11c:	ldp	x20, x19, [sp, #48]
  43e120:	ldp	x22, x21, [sp, #32]
  43e124:	ldp	x29, x30, [sp], #64
  43e128:	ret
  43e12c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43e130:	ldr	x8, [x8, #1104]
  43e134:	blr	x8
  43e138:	stp	x29, x30, [sp, #-16]!
  43e13c:	ldrb	w8, [x0, #80]
  43e140:	mov	x29, sp
  43e144:	tbnz	w8, #0, 43e15c <_obstack_newchunk@@Base+0x134>
  43e148:	ldr	x8, [x0, #56]
  43e14c:	mov	x0, x1
  43e150:	blr	x8
  43e154:	ldp	x29, x30, [sp], #16
  43e158:	ret
  43e15c:	ldr	x8, [x0, #56]
  43e160:	ldr	x0, [x0, #72]
  43e164:	blr	x8
  43e168:	ldp	x29, x30, [sp], #16
  43e16c:	ret
  43e170:	stp	x29, x30, [sp, #-16]!
  43e174:	ldrb	w8, [x0, #80]
  43e178:	mov	x29, sp
  43e17c:	tbnz	w8, #0, 43e194 <_obstack_newchunk@@Base+0x16c>
  43e180:	ldr	x8, [x0, #64]
  43e184:	mov	x0, x1
  43e188:	blr	x8
  43e18c:	ldp	x29, x30, [sp], #16
  43e190:	ret
  43e194:	ldp	x8, x0, [x0, #64]
  43e198:	blr	x8
  43e19c:	ldp	x29, x30, [sp], #16
  43e1a0:	ret

000000000043e1a4 <_obstack_allocated_p@@Base>:
  43e1a4:	ldr	x8, [x0, #8]
  43e1a8:	b	43e1b0 <_obstack_allocated_p@@Base+0xc>
  43e1ac:	ldr	x8, [x8, #8]
  43e1b0:	cmp	x8, #0x0
  43e1b4:	cset	w9, ne  // ne = any
  43e1b8:	cbz	x8, 43e1d0 <_obstack_allocated_p@@Base+0x2c>
  43e1bc:	cmp	x8, x1
  43e1c0:	b.cs	43e1ac <_obstack_allocated_p@@Base+0x8>  // b.hs, b.nlast
  43e1c4:	ldr	x10, [x8]
  43e1c8:	cmp	x10, x1
  43e1cc:	b.cc	43e1ac <_obstack_allocated_p@@Base+0x8>  // b.lo, b.ul, b.last
  43e1d0:	and	w0, w9, #0x1
  43e1d4:	ret

000000000043e1d8 <_obstack_free@@Base>:
  43e1d8:	stp	x29, x30, [sp, #-48]!
  43e1dc:	stp	x20, x19, [sp, #32]
  43e1e0:	ldr	x8, [x0, #8]
  43e1e4:	mov	x20, x1
  43e1e8:	str	x21, [sp, #16]
  43e1ec:	mov	x29, sp
  43e1f0:	cbz	x8, 43e248 <_obstack_free@@Base+0x70>
  43e1f4:	mov	x19, x0
  43e1f8:	b	43e220 <_obstack_free@@Base+0x48>
  43e1fc:	ldr	x21, [x8, #8]
  43e200:	mov	x0, x19
  43e204:	mov	x1, x8
  43e208:	bl	43e170 <_obstack_newchunk@@Base+0x148>
  43e20c:	ldrb	w8, [x19, #80]
  43e210:	orr	w8, w8, #0x2
  43e214:	strb	w8, [x19, #80]
  43e218:	mov	x8, x21
  43e21c:	cbz	x21, 43e248 <_obstack_free@@Base+0x70>
  43e220:	cmp	x8, x20
  43e224:	b.cs	43e1fc <_obstack_free@@Base+0x24>  // b.hs, b.nlast
  43e228:	ldr	x9, [x8]
  43e22c:	cmp	x9, x20
  43e230:	b.cc	43e1fc <_obstack_free@@Base+0x24>  // b.lo, b.ul, b.last
  43e234:	stp	x20, x20, [x19, #16]
  43e238:	ldr	x9, [x8]
  43e23c:	str	x8, [x19, #8]
  43e240:	str	x9, [x19, #32]
  43e244:	b	43e24c <_obstack_free@@Base+0x74>
  43e248:	cbnz	x20, 43e25c <_obstack_free@@Base+0x84>
  43e24c:	ldp	x20, x19, [sp, #32]
  43e250:	ldr	x21, [sp, #16]
  43e254:	ldp	x29, x30, [sp], #48
  43e258:	ret
  43e25c:	bl	404870 <abort@plt>

000000000043e260 <_obstack_memory_used@@Base>:
  43e260:	ldr	x8, [x0, #8]
  43e264:	cbz	x8, 43e280 <_obstack_memory_used@@Base+0x20>
  43e268:	mov	x0, xzr
  43e26c:	sub	x10, x0, x8
  43e270:	ldp	x9, x8, [x8]
  43e274:	add	x0, x10, x9
  43e278:	cbnz	x8, 43e26c <_obstack_memory_used@@Base+0xc>
  43e27c:	ret
  43e280:	mov	x0, xzr
  43e284:	ret
  43e288:	stp	x29, x30, [sp, #-32]!
  43e28c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43e290:	str	x19, [sp, #16]
  43e294:	ldr	x19, [x8, #1136]
  43e298:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x12da0>
  43e29c:	add	x1, x1, #0x127
  43e2a0:	mov	w2, #0x5                   	// #5
  43e2a4:	mov	x0, xzr
  43e2a8:	mov	x29, sp
  43e2ac:	bl	404bf0 <dcgettext@plt>
  43e2b0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  43e2b4:	mov	x3, x0
  43e2b8:	add	x2, x2, #0x1e3
  43e2bc:	mov	w1, #0x1                   	// #1
  43e2c0:	mov	x0, x19
  43e2c4:	bl	404910 <__fprintf_chk@plt>
  43e2c8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43e2cc:	ldr	w0, [x8, #1008]
  43e2d0:	bl	4041c0 <exit@plt>
  43e2d4:	sub	sp, sp, #0x60
  43e2d8:	stp	x29, x30, [sp, #32]
  43e2dc:	stp	x24, x23, [sp, #48]
  43e2e0:	stp	x22, x21, [sp, #64]
  43e2e4:	stp	x20, x19, [sp, #80]
  43e2e8:	ldrb	w8, [x2]
  43e2ec:	mov	x20, x0
  43e2f0:	add	x29, sp, #0x20
  43e2f4:	cbz	w8, 43e360 <_obstack_memory_used@@Base+0x100>
  43e2f8:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  43e2fc:	ldr	w8, [x23, #3868]
  43e300:	mov	x19, x2
  43e304:	mov	w21, w1
  43e308:	cbz	w8, 43e368 <_obstack_memory_used@@Base+0x108>
  43e30c:	ldr	w8, [x23, #3868]
  43e310:	tbnz	w8, #31, 43e3fc <_obstack_memory_used@@Base+0x19c>
  43e314:	mov	x0, x19
  43e318:	bl	404190 <strlen@plt>
  43e31c:	add	x0, x0, #0x1b
  43e320:	cmp	x0, #0xfc1
  43e324:	b.cc	43e334 <_obstack_memory_used@@Base+0xd4>  // b.lo, b.ul, b.last
  43e328:	bl	4044f0 <malloc@plt>
  43e32c:	mov	x20, x0
  43e330:	cbz	x0, 43e3e0 <_obstack_memory_used@@Base+0x180>
  43e334:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43e338:	add	x3, x3, #0x22e
  43e33c:	mov	w1, #0x1                   	// #1
  43e340:	mov	x2, #0xffffffffffffffff    	// #-1
  43e344:	mov	x0, x20
  43e348:	mov	w4, w21
  43e34c:	mov	w22, #0x1                   	// #1
  43e350:	bl	4041b0 <__sprintf_chk@plt>
  43e354:	sxtw	x8, w0
  43e358:	cbz	w22, 43e3fc <_obstack_memory_used@@Base+0x19c>
  43e35c:	b	43e3ec <_obstack_memory_used@@Base+0x18c>
  43e360:	strb	wzr, [x20]
  43e364:	b	43e400 <_obstack_memory_used@@Base+0x1a0>
  43e368:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43e36c:	add	x0, x0, #0x209
  43e370:	mov	w1, #0x4900                	// #18688
  43e374:	bl	404530 <open@plt>
  43e378:	tbnz	w0, #31, 43e3cc <_obstack_memory_used@@Base+0x16c>
  43e37c:	mov	w22, w0
  43e380:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43e384:	add	x3, x3, #0x217
  43e388:	mov	x0, sp
  43e38c:	mov	w1, #0x1                   	// #1
  43e390:	mov	w2, #0x20                  	// #32
  43e394:	mov	w4, w22
  43e398:	mov	w24, #0x1                   	// #1
  43e39c:	bl	4041b0 <__sprintf_chk@plt>
  43e3a0:	mov	x0, sp
  43e3a4:	mov	w1, wzr
  43e3a8:	bl	4048a0 <access@plt>
  43e3ac:	cmp	w0, #0x0
  43e3b0:	cneg	w8, w24, ne  // ne = any
  43e3b4:	mov	w0, w22
  43e3b8:	str	w8, [x23, #3868]
  43e3bc:	bl	4047c0 <close@plt>
  43e3c0:	ldr	w8, [x23, #3868]
  43e3c4:	tbz	w8, #31, 43e314 <_obstack_memory_used@@Base+0xb4>
  43e3c8:	b	43e3fc <_obstack_memory_used@@Base+0x19c>
  43e3cc:	mov	w8, #0xffffffff            	// #-1
  43e3d0:	str	w8, [x23, #3868]
  43e3d4:	ldr	w8, [x23, #3868]
  43e3d8:	tbz	w8, #31, 43e314 <_obstack_memory_used@@Base+0xb4>
  43e3dc:	b	43e3fc <_obstack_memory_used@@Base+0x19c>
  43e3e0:	mov	x8, xzr
  43e3e4:	mov	w22, wzr
  43e3e8:	cbz	w22, 43e3fc <_obstack_memory_used@@Base+0x19c>
  43e3ec:	add	x0, x20, x8
  43e3f0:	mov	x1, x19
  43e3f4:	bl	404b20 <strcpy@plt>
  43e3f8:	b	43e400 <_obstack_memory_used@@Base+0x1a0>
  43e3fc:	mov	x20, xzr
  43e400:	mov	x0, x20
  43e404:	ldp	x20, x19, [sp, #80]
  43e408:	ldp	x22, x21, [sp, #64]
  43e40c:	ldp	x24, x23, [sp, #48]
  43e410:	ldp	x29, x30, [sp, #32]
  43e414:	add	sp, sp, #0x60
  43e418:	ret
  43e41c:	stp	x29, x30, [sp, #-16]!
  43e420:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  43e424:	ldr	x3, [x9, #1040]
  43e428:	ldrb	w9, [x2, #56]
  43e42c:	mov	x8, x1
  43e430:	mov	x1, x0
  43e434:	ubfx	x10, x3, #21, #11
  43e438:	and	w10, w10, #0x10
  43e43c:	and	w9, w9, #0xffffffef
  43e440:	orr	w9, w9, w10
  43e444:	orr	w9, w9, #0x80
  43e448:	strb	w9, [x2, #56]
  43e44c:	mov	x0, x2
  43e450:	mov	x2, x8
  43e454:	mov	x29, sp
  43e458:	bl	43e498 <_obstack_memory_used@@Base+0x238>
  43e45c:	cbz	w0, 43e48c <_obstack_memory_used@@Base+0x22c>
  43e460:	adrp	x8, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43e464:	add	x8, x8, #0x4e8
  43e468:	ldr	x8, [x8, w0, sxtw #3]
  43e46c:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43e470:	add	x9, x9, #0x369
  43e474:	mov	w2, #0x5                   	// #5
  43e478:	add	x1, x9, x8
  43e47c:	mov	x0, xzr
  43e480:	bl	404bf0 <dcgettext@plt>
  43e484:	ldp	x29, x30, [sp], #16
  43e488:	ret
  43e48c:	mov	x0, xzr
  43e490:	ldp	x29, x30, [sp], #16
  43e494:	ret
  43e498:	sub	sp, sp, #0xe0
  43e49c:	stp	x29, x30, [sp, #160]
  43e4a0:	add	x29, sp, #0xa0
  43e4a4:	str	x23, [sp, #176]
  43e4a8:	stp	x22, x21, [sp, #192]
  43e4ac:	stp	x20, x19, [sp, #208]
  43e4b0:	str	wzr, [x29, #28]
  43e4b4:	ldrb	w8, [x0, #56]
  43e4b8:	ldp	x20, x9, [x0]
  43e4bc:	mov	w10, #0x90                  	// #144
  43e4c0:	mov	x21, x3
  43e4c4:	mov	x22, x2
  43e4c8:	mov	x23, x1
  43e4cc:	mov	x19, x0
  43e4d0:	and	w8, w8, w10
  43e4d4:	cmp	x9, #0xe7
  43e4d8:	stp	xzr, x3, [x0, #16]
  43e4dc:	str	xzr, [x0, #48]
  43e4e0:	strb	w8, [x0, #56]
  43e4e4:	b.ls	43e5d4 <_obstack_memory_used@@Base+0x374>  // b.plast
  43e4e8:	mov	w8, #0xe8                  	// #232
  43e4ec:	mov	x0, x20
  43e4f0:	mov	x1, x22
  43e4f4:	str	x8, [x19, #16]
  43e4f8:	bl	43fab4 <_obstack_memory_used@@Base+0x1854>
  43e4fc:	str	w0, [x29, #28]
  43e500:	cbnz	w0, 43e5c4 <_obstack_memory_used@@Base+0x364>
  43e504:	ldr	x3, [x19, #40]
  43e508:	ubfx	x4, x21, #22, #1
  43e50c:	add	x0, sp, #0x8
  43e510:	mov	x1, x23
  43e514:	mov	x2, x22
  43e518:	mov	x5, x20
  43e51c:	bl	43fcac <_obstack_memory_used@@Base+0x1a4c>
  43e520:	str	w0, [x29, #28]
  43e524:	cbnz	w0, 43e5b4 <_obstack_memory_used@@Base+0x354>
  43e528:	add	x0, sp, #0x8
  43e52c:	add	x3, x29, #0x1c
  43e530:	mov	x1, x19
  43e534:	mov	x2, x21
  43e538:	str	xzr, [x19, #48]
  43e53c:	bl	43fe64 <_obstack_memory_used@@Base+0x1c04>
  43e540:	str	x0, [x20, #104]
  43e544:	cbz	x0, 43e5b4 <_obstack_memory_used@@Base+0x354>
  43e548:	mov	x0, x19
  43e54c:	bl	43ff38 <_obstack_memory_used@@Base+0x1cd8>
  43e550:	str	w0, [x29, #28]
  43e554:	cbnz	w0, 43e5b4 <_obstack_memory_used@@Base+0x354>
  43e558:	tbnz	w21, #22, 43e574 <_obstack_memory_used@@Base+0x314>
  43e55c:	ldrb	w8, [x20, #176]
  43e560:	tbz	w8, #2, 43e574 <_obstack_memory_used@@Base+0x314>
  43e564:	ldr	x8, [x19, #40]
  43e568:	cbnz	x8, 43e574 <_obstack_memory_used@@Base+0x314>
  43e56c:	mov	x0, x20
  43e570:	bl	440114 <_obstack_memory_used@@Base+0x1eb4>
  43e574:	mov	x0, x20
  43e578:	bl	44029c <_obstack_memory_used@@Base+0x203c>
  43e57c:	str	w0, [x29, #28]
  43e580:	mov	x0, x19
  43e584:	bl	43fddc <_obstack_memory_used@@Base+0x1b7c>
  43e588:	add	x0, sp, #0x8
  43e58c:	bl	43fe28 <_obstack_memory_used@@Base+0x1bc8>
  43e590:	ldr	w8, [x29, #28]
  43e594:	cbnz	w8, 43e5c4 <_obstack_memory_used@@Base+0x364>
  43e598:	ldr	w0, [x29, #28]
  43e59c:	ldp	x20, x19, [sp, #208]
  43e5a0:	ldp	x22, x21, [sp, #192]
  43e5a4:	ldr	x23, [sp, #176]
  43e5a8:	ldp	x29, x30, [sp, #160]
  43e5ac:	add	sp, sp, #0xe0
  43e5b0:	ret
  43e5b4:	mov	x0, x19
  43e5b8:	bl	43fddc <_obstack_memory_used@@Base+0x1b7c>
  43e5bc:	add	x0, sp, #0x8
  43e5c0:	bl	43fe28 <_obstack_memory_used@@Base+0x1bc8>
  43e5c4:	mov	x0, x20
  43e5c8:	bl	43ec1c <_obstack_memory_used@@Base+0x9bc>
  43e5cc:	stp	xzr, xzr, [x19]
  43e5d0:	b	43e598 <_obstack_memory_used@@Base+0x338>
  43e5d4:	mov	w1, #0xe8                  	// #232
  43e5d8:	mov	x0, x20
  43e5dc:	bl	404730 <realloc@plt>
  43e5e0:	cbz	x0, 43e5f4 <_obstack_memory_used@@Base+0x394>
  43e5e4:	mov	x20, x0
  43e5e8:	mov	w8, #0xe8                  	// #232
  43e5ec:	stp	x0, x8, [x19]
  43e5f0:	b	43e4e8 <_obstack_memory_used@@Base+0x288>
  43e5f4:	mov	w0, #0xc                   	// #12
  43e5f8:	b	43e59c <_obstack_memory_used@@Base+0x33c>
  43e5fc:	adrp	x9, 470000 <argp_program_version_hook@@Base+0x258>
  43e600:	ldr	x8, [x9, #1040]
  43e604:	str	x0, [x9, #1040]
  43e608:	mov	x0, x8
  43e60c:	ret
  43e610:	stp	x29, x30, [sp, #-48]!
  43e614:	stp	x20, x19, [sp, #32]
  43e618:	ldr	x20, [x0, #32]
  43e61c:	str	x21, [sp, #16]
  43e620:	ldr	x21, [x0]
  43e624:	movi	v0.2d, #0x0
  43e628:	stp	q0, q0, [x20, #224]
  43e62c:	stp	q0, q0, [x20, #192]
  43e630:	stp	q0, q0, [x20, #160]
  43e634:	stp	q0, q0, [x20, #128]
  43e638:	stp	q0, q0, [x20, #96]
  43e63c:	stp	q0, q0, [x20, #64]
  43e640:	stp	q0, q0, [x20, #32]
  43e644:	stp	q0, q0, [x20]
  43e648:	ldr	x1, [x21, #72]
  43e64c:	mov	x2, x20
  43e650:	mov	x29, sp
  43e654:	mov	x19, x0
  43e658:	bl	43e6cc <_obstack_memory_used@@Base+0x46c>
  43e65c:	ldp	x8, x1, [x21, #72]
  43e660:	cmp	x8, x1
  43e664:	b.eq	43e674 <_obstack_memory_used@@Base+0x414>  // b.none
  43e668:	mov	x0, x19
  43e66c:	mov	x2, x20
  43e670:	bl	43e6cc <_obstack_memory_used@@Base+0x46c>
  43e674:	ldr	x8, [x21, #72]
  43e678:	ldr	x1, [x21, #88]
  43e67c:	cmp	x8, x1
  43e680:	b.eq	43e690 <_obstack_memory_used@@Base+0x430>  // b.none
  43e684:	mov	x0, x19
  43e688:	mov	x2, x20
  43e68c:	bl	43e6cc <_obstack_memory_used@@Base+0x46c>
  43e690:	ldr	x8, [x21, #72]
  43e694:	ldr	x1, [x21, #96]
  43e698:	cmp	x8, x1
  43e69c:	b.eq	43e6ac <_obstack_memory_used@@Base+0x44c>  // b.none
  43e6a0:	mov	x0, x19
  43e6a4:	mov	x2, x20
  43e6a8:	bl	43e6cc <_obstack_memory_used@@Base+0x46c>
  43e6ac:	ldrb	w8, [x19, #56]
  43e6b0:	ldr	x21, [sp, #16]
  43e6b4:	mov	w0, wzr
  43e6b8:	orr	w8, w8, #0x8
  43e6bc:	strb	w8, [x19, #56]
  43e6c0:	ldp	x20, x19, [sp, #32]
  43e6c4:	ldp	x29, x30, [sp], #48
  43e6c8:	ret
  43e6cc:	sub	sp, sp, #0x1a0
  43e6d0:	stp	x29, x30, [sp, #320]
  43e6d4:	stp	x28, x27, [sp, #336]
  43e6d8:	stp	x26, x25, [sp, #352]
  43e6dc:	stp	x24, x23, [sp, #368]
  43e6e0:	stp	x22, x21, [sp, #384]
  43e6e4:	stp	x20, x19, [sp, #400]
  43e6e8:	ldr	x23, [x0]
  43e6ec:	mov	x20, x2
  43e6f0:	add	x29, sp, #0x140
  43e6f4:	str	x0, [sp, #32]
  43e6f8:	ldr	w8, [x23, #180]
  43e6fc:	cmp	w8, #0x1
  43e700:	b.ne	43e710 <_obstack_memory_used@@Base+0x4b0>  // b.any
  43e704:	ldrb	w8, [x0, #26]
  43e708:	ubfx	w24, w8, #6, #1
  43e70c:	b	43e714 <_obstack_memory_used@@Base+0x4b4>
  43e710:	mov	w24, wzr
  43e714:	ldr	x8, [x1, #16]
  43e718:	cmp	x8, #0x1
  43e71c:	b.lt	43ea28 <_obstack_memory_used@@Base+0x7c8>  // b.tstop
  43e720:	add	x8, sp, #0x28
  43e724:	mov	x10, xzr
  43e728:	mov	w27, #0x1                   	// #1
  43e72c:	orr	x8, x8, #0x1
  43e730:	stp	x8, x1, [sp, #8]
  43e734:	b	43e74c <_obstack_memory_used@@Base+0x4ec>
  43e738:	ldp	x1, x10, [sp, #16]
  43e73c:	ldr	x8, [x1, #16]
  43e740:	add	x10, x10, #0x1
  43e744:	cmp	x10, x8
  43e748:	b.ge	43ea28 <_obstack_memory_used@@Base+0x7c8>  // b.tcont
  43e74c:	ldr	x8, [x1, #24]
  43e750:	str	x10, [sp, #24]
  43e754:	ldr	x21, [x8, x10, lsl #3]
  43e758:	ldr	x8, [x23]
  43e75c:	lsl	x22, x21, #4
  43e760:	add	x9, x8, x21, lsl #4
  43e764:	ldrb	w8, [x9, #8]
  43e768:	cmp	w8, #0x1
  43e76c:	b.eq	43e7e0 <_obstack_memory_used@@Base+0x580>  // b.none
  43e770:	cmp	w8, #0x6
  43e774:	b.eq	43e8c4 <_obstack_memory_used@@Base+0x664>  // b.none
  43e778:	cmp	w8, #0x3
  43e77c:	b.ne	43e930 <_obstack_memory_used@@Base+0x6d0>  // b.any
  43e780:	mov	x26, xzr
  43e784:	mov	x28, xzr
  43e788:	b	43e79c <_obstack_memory_used@@Base+0x53c>
  43e78c:	add	x26, x26, #0x1
  43e790:	cmp	x26, #0x4
  43e794:	add	x28, x21, w28, sxtw
  43e798:	b.eq	43e738 <_obstack_memory_used@@Base+0x4d8>  // b.none
  43e79c:	ldr	x8, [x23]
  43e7a0:	mov	x21, xzr
  43e7a4:	add	x25, x20, w28, sxtw
  43e7a8:	ldr	x8, [x8, x22]
  43e7ac:	ldr	x19, [x8, x26, lsl #3]
  43e7b0:	b	43e7c0 <_obstack_memory_used@@Base+0x560>
  43e7b4:	add	x21, x21, #0x1
  43e7b8:	cmp	x21, #0x40
  43e7bc:	b.eq	43e78c <_obstack_memory_used@@Base+0x52c>  // b.none
  43e7c0:	lsr	x8, x19, x21
  43e7c4:	tbz	w8, #0, 43e7b4 <_obstack_memory_used@@Base+0x554>
  43e7c8:	strb	w27, [x25, x21]
  43e7cc:	cbz	w24, 43e7b4 <_obstack_memory_used@@Base+0x554>
  43e7d0:	add	w0, w28, w21
  43e7d4:	bl	404d10 <tolower@plt>
  43e7d8:	strb	w27, [x20, w0, sxtw]
  43e7dc:	b	43e7b4 <_obstack_memory_used@@Base+0x554>
  43e7e0:	ldrb	w0, [x9]
  43e7e4:	strb	w27, [x20, x0]
  43e7e8:	cbz	w24, 43e7f4 <_obstack_memory_used@@Base+0x594>
  43e7ec:	bl	404d10 <tolower@plt>
  43e7f0:	strb	w27, [x20, w0, sxtw]
  43e7f4:	ldr	x8, [sp, #32]
  43e7f8:	ldrb	w8, [x8, #26]
  43e7fc:	tbz	w8, #6, 43e738 <_obstack_memory_used@@Base+0x4d8>
  43e800:	ldr	w8, [x23, #180]
  43e804:	cmp	w8, #0x2
  43e808:	b.lt	43e738 <_obstack_memory_used@@Base+0x4d8>  // b.tstop
  43e80c:	ldr	x8, [x23]
  43e810:	add	x9, x21, #0x1
  43e814:	mov	w13, #0x1                   	// #1
  43e818:	movk	w13, #0x20, lsl #16
  43e81c:	ldrb	w8, [x8, x22]
  43e820:	strb	w8, [sp, #40]
  43e824:	ldr	x8, [x23, #16]
  43e828:	cmp	x9, x8
  43e82c:	ldr	x8, [sp, #8]
  43e830:	b.cs	43e870 <_obstack_memory_used@@Base+0x610>  // b.hs, b.nlast
  43e834:	ldr	x8, [sp, #8]
  43e838:	ldr	x10, [x23]
  43e83c:	add	w12, w13, #0xfe
  43e840:	add	x10, x10, x22
  43e844:	ldr	w11, [x10, #24]
  43e848:	and	w11, w11, w12
  43e84c:	cmp	w11, w13
  43e850:	b.ne	43e870 <_obstack_memory_used@@Base+0x610>  // b.any
  43e854:	ldrb	w10, [x10, #16]
  43e858:	add	x9, x9, #0x1
  43e85c:	add	x22, x22, #0x10
  43e860:	strb	w10, [x8], #1
  43e864:	ldr	x10, [x23, #16]
  43e868:	cmp	x9, x10
  43e86c:	b.cc	43e838 <_obstack_memory_used@@Base+0x5d8>  // b.lo, b.ul, b.last
  43e870:	add	x9, sp, #0x28
  43e874:	sub	x22, x8, x9
  43e878:	sub	x0, x29, #0xc
  43e87c:	add	x1, sp, #0x28
  43e880:	sub	x3, x29, #0x18
  43e884:	mov	x2, x22
  43e888:	stur	xzr, [x29, #-24]
  43e88c:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  43e890:	cmp	x0, x22
  43e894:	b.ne	43e738 <_obstack_memory_used@@Base+0x4d8>  // b.any
  43e898:	ldur	w0, [x29, #-12]
  43e89c:	bl	404da0 <towlower@plt>
  43e8a0:	mov	w1, w0
  43e8a4:	add	x0, sp, #0x28
  43e8a8:	sub	x2, x29, #0x18
  43e8ac:	bl	404e20 <wcrtomb@plt>
  43e8b0:	cmn	x0, #0x1
  43e8b4:	b.eq	43e738 <_obstack_memory_used@@Base+0x4d8>  // b.none
  43e8b8:	ldrb	w8, [sp, #40]
  43e8bc:	strb	w27, [x20, x8]
  43e8c0:	b	43e738 <_obstack_memory_used@@Base+0x4d8>
  43e8c4:	ldr	w8, [x23, #180]
  43e8c8:	ldr	x22, [x9]
  43e8cc:	cmp	w8, #0x2
  43e8d0:	b.lt	43e94c <_obstack_memory_used@@Base+0x6ec>  // b.tstop
  43e8d4:	ldr	x8, [x22, #72]
  43e8d8:	cbnz	x8, 43e8ec <_obstack_memory_used@@Base+0x68c>
  43e8dc:	ldrb	w8, [x22, #32]
  43e8e0:	tbnz	w8, #0, 43e8ec <_obstack_memory_used@@Base+0x68c>
  43e8e4:	ldr	x8, [x22, #64]
  43e8e8:	cbz	x8, 43e94c <_obstack_memory_used@@Base+0x6ec>
  43e8ec:	sturb	wzr, [x29, #-24]
  43e8f0:	b	43e904 <_obstack_memory_used@@Base+0x6a4>
  43e8f4:	ldurb	w8, [x29, #-24]
  43e8f8:	add	w8, w8, #0x1
  43e8fc:	sturb	w8, [x29, #-24]
  43e900:	tbnz	w8, #8, 43e738 <_obstack_memory_used@@Base+0x4d8>
  43e904:	sub	x1, x29, #0x18
  43e908:	add	x3, sp, #0x28
  43e90c:	mov	w2, #0x1                   	// #1
  43e910:	mov	x0, xzr
  43e914:	str	xzr, [sp, #40]
  43e918:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  43e91c:	cmn	x0, #0x2
  43e920:	b.ne	43e8f4 <_obstack_memory_used@@Base+0x694>  // b.any
  43e924:	ldurb	w8, [x29, #-24]
  43e928:	strb	w27, [x20, x8]
  43e92c:	b	43e8f4 <_obstack_memory_used@@Base+0x694>
  43e930:	cmp	w8, #0x7
  43e934:	b.hi	43e738 <_obstack_memory_used@@Base+0x4d8>  // b.pmore
  43e938:	lsl	w9, w27, w8
  43e93c:	mov	w10, #0xa4                  	// #164
  43e940:	tst	w9, w10
  43e944:	b.eq	43e738 <_obstack_memory_used@@Base+0x4d8>  // b.none
  43e948:	b	43e9ec <_obstack_memory_used@@Base+0x78c>
  43e94c:	ldr	x8, [x22, #40]
  43e950:	cmp	x8, #0x1
  43e954:	b.lt	43e738 <_obstack_memory_used@@Base+0x4d8>  // b.tstop
  43e958:	mov	x26, xzr
  43e95c:	b	43e970 <_obstack_memory_used@@Base+0x710>
  43e960:	ldr	x8, [x22, #40]
  43e964:	add	x26, x26, #0x1
  43e968:	cmp	x26, x8
  43e96c:	b.ge	43e738 <_obstack_memory_used@@Base+0x4d8>  // b.tcont
  43e970:	stur	xzr, [x29, #-24]
  43e974:	ldr	x8, [x22]
  43e978:	add	x0, sp, #0x28
  43e97c:	sub	x2, x29, #0x18
  43e980:	ldr	w1, [x8, x26, lsl #2]
  43e984:	bl	404e20 <wcrtomb@plt>
  43e988:	cmn	x0, #0x1
  43e98c:	b.eq	43e9a4 <_obstack_memory_used@@Base+0x744>  // b.none
  43e990:	ldrb	w0, [sp, #40]
  43e994:	strb	w27, [x20, x0]
  43e998:	cbz	w24, 43e9a4 <_obstack_memory_used@@Base+0x744>
  43e99c:	bl	404d10 <tolower@plt>
  43e9a0:	strb	w27, [x20, w0, sxtw]
  43e9a4:	ldr	x8, [sp, #32]
  43e9a8:	ldrb	w8, [x8, #26]
  43e9ac:	tbz	w8, #6, 43e960 <_obstack_memory_used@@Base+0x700>
  43e9b0:	ldr	w8, [x23, #180]
  43e9b4:	cmp	w8, #0x2
  43e9b8:	b.lt	43e960 <_obstack_memory_used@@Base+0x700>  // b.tstop
  43e9bc:	ldr	x8, [x22]
  43e9c0:	ldr	w0, [x8, x26, lsl #2]
  43e9c4:	bl	404da0 <towlower@plt>
  43e9c8:	mov	w1, w0
  43e9cc:	add	x0, sp, #0x28
  43e9d0:	sub	x2, x29, #0x18
  43e9d4:	bl	404e20 <wcrtomb@plt>
  43e9d8:	cmn	x0, #0x1
  43e9dc:	b.eq	43e960 <_obstack_memory_used@@Base+0x700>  // b.none
  43e9e0:	ldrb	w8, [sp, #40]
  43e9e4:	strb	w27, [x20, x8]
  43e9e8:	b	43e960 <_obstack_memory_used@@Base+0x700>
  43e9ec:	movi	v0.16b, #0x1
  43e9f0:	cmp	w8, #0x2
  43e9f4:	stp	q0, q0, [x20, #224]
  43e9f8:	stp	q0, q0, [x20, #192]
  43e9fc:	stp	q0, q0, [x20, #160]
  43ea00:	stp	q0, q0, [x20, #128]
  43ea04:	stp	q0, q0, [x20, #96]
  43ea08:	stp	q0, q0, [x20, #64]
  43ea0c:	stp	q0, q0, [x20, #32]
  43ea10:	stp	q0, q0, [x20]
  43ea14:	b.ne	43ea28 <_obstack_memory_used@@Base+0x7c8>  // b.any
  43ea18:	ldr	x9, [sp, #32]
  43ea1c:	ldrb	w8, [x9, #56]
  43ea20:	orr	w8, w8, #0x1
  43ea24:	strb	w8, [x9, #56]
  43ea28:	ldp	x20, x19, [sp, #400]
  43ea2c:	ldp	x22, x21, [sp, #384]
  43ea30:	ldp	x24, x23, [sp, #368]
  43ea34:	ldp	x26, x25, [sp, #352]
  43ea38:	ldp	x28, x27, [sp, #336]
  43ea3c:	ldp	x29, x30, [sp, #320]
  43ea40:	add	sp, sp, #0x1a0
  43ea44:	ret
  43ea48:	stp	x29, x30, [sp, #-48]!
  43ea4c:	stp	x20, x19, [sp, #32]
  43ea50:	mov	x19, x0
  43ea54:	stp	xzr, xzr, [x0]
  43ea58:	str	xzr, [x0, #16]
  43ea5c:	mov	w0, #0x100                 	// #256
  43ea60:	stp	x22, x21, [sp, #16]
  43ea64:	mov	x29, sp
  43ea68:	mov	w21, w2
  43ea6c:	mov	x20, x1
  43ea70:	bl	4044f0 <malloc@plt>
  43ea74:	str	x0, [x19, #32]
  43ea78:	cbz	x0, 43eb30 <_obstack_memory_used@@Base+0x8d0>
  43ea7c:	mov	w8, #0xb2fc                	// #45820
  43ea80:	mov	w9, #0x2c6                 	// #710
  43ea84:	tst	w21, #0x1
  43ea88:	movk	w8, #0x3, lsl #16
  43ea8c:	movk	w9, #0x101, lsl #16
  43ea90:	lsl	w10, w21, #21
  43ea94:	csel	x8, x9, x8, eq  // eq = none
  43ea98:	and	w9, w10, #0x400000
  43ea9c:	orr	x22, x8, x9
  43eaa0:	tbnz	w21, #2, 43eab0 <_obstack_memory_used@@Base+0x850>
  43eaa4:	ldrb	w8, [x19, #56]
  43eaa8:	and	w8, w8, #0x7f
  43eaac:	b	43eac8 <_obstack_memory_used@@Base+0x868>
  43eab0:	ldrb	w8, [x19, #56]
  43eab4:	mov	w9, #0xb2be                	// #45758
  43eab8:	movk	w9, #0x143, lsl #16
  43eabc:	and	x9, x22, x9
  43eac0:	orr	x22, x9, #0x100
  43eac4:	orr	w8, w8, #0x80
  43eac8:	strb	w8, [x19, #56]
  43eacc:	and	w8, w8, #0xff
  43ead0:	lsl	w9, w21, #1
  43ead4:	and	w9, w9, #0x10
  43ead8:	and	w8, w8, #0xffffffef
  43eadc:	orr	w8, w8, w9
  43eae0:	mov	x0, x20
  43eae4:	strb	w8, [x19, #56]
  43eae8:	str	xzr, [x19, #40]
  43eaec:	bl	404190 <strlen@plt>
  43eaf0:	mov	x2, x0
  43eaf4:	mov	x0, x19
  43eaf8:	mov	x1, x20
  43eafc:	mov	x3, x22
  43eb00:	bl	43e498 <_obstack_memory_used@@Base+0x238>
  43eb04:	cmp	w0, #0x10
  43eb08:	mov	w8, #0x8                   	// #8
  43eb0c:	csel	w20, w8, w0, eq  // eq = none
  43eb10:	cbnz	w20, 43eb38 <_obstack_memory_used@@Base+0x8d8>
  43eb14:	mov	x0, x19
  43eb18:	bl	43e610 <_obstack_memory_used@@Base+0x3b0>
  43eb1c:	mov	w0, w20
  43eb20:	ldp	x20, x19, [sp, #32]
  43eb24:	ldp	x22, x21, [sp, #16]
  43eb28:	ldp	x29, x30, [sp], #48
  43eb2c:	ret
  43eb30:	mov	w20, #0xc                   	// #12
  43eb34:	b	43eb1c <_obstack_memory_used@@Base+0x8bc>
  43eb38:	ldr	x0, [x19, #32]
  43eb3c:	bl	4049d0 <free@plt>
  43eb40:	str	xzr, [x19, #32]
  43eb44:	b	43eb1c <_obstack_memory_used@@Base+0x8bc>
  43eb48:	stp	x29, x30, [sp, #-48]!
  43eb4c:	cmp	w0, #0x11
  43eb50:	stp	x22, x21, [sp, #16]
  43eb54:	stp	x20, x19, [sp, #32]
  43eb58:	mov	x29, sp
  43eb5c:	b.cs	43ebd4 <_obstack_memory_used@@Base+0x974>  // b.hs, b.nlast
  43eb60:	adrp	x8, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43eb64:	add	x8, x8, #0x4e8
  43eb68:	ldr	x8, [x8, w0, sxtw #3]
  43eb6c:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43eb70:	add	x9, x9, #0x369
  43eb74:	mov	x19, x2
  43eb78:	add	x1, x9, x8
  43eb7c:	mov	w2, #0x5                   	// #5
  43eb80:	mov	x0, xzr
  43eb84:	mov	x20, x3
  43eb88:	bl	404bf0 <dcgettext@plt>
  43eb8c:	mov	x21, x0
  43eb90:	bl	404190 <strlen@plt>
  43eb94:	add	x22, x0, #0x1
  43eb98:	cbz	x20, 43ebb4 <_obstack_memory_used@@Base+0x954>
  43eb9c:	cmp	x22, x20
  43eba0:	mov	x2, x22
  43eba4:	b.hi	43ebc8 <_obstack_memory_used@@Base+0x968>  // b.pmore
  43eba8:	mov	x0, x19
  43ebac:	mov	x1, x21
  43ebb0:	bl	404110 <memcpy@plt>
  43ebb4:	mov	x0, x22
  43ebb8:	ldp	x20, x19, [sp, #32]
  43ebbc:	ldp	x22, x21, [sp, #16]
  43ebc0:	ldp	x29, x30, [sp], #48
  43ebc4:	ret
  43ebc8:	sub	x2, x20, #0x1
  43ebcc:	strb	wzr, [x19, x2]
  43ebd0:	b	43eba8 <_obstack_memory_used@@Base+0x948>
  43ebd4:	bl	404870 <abort@plt>
  43ebd8:	stp	x29, x30, [sp, #-32]!
  43ebdc:	str	x19, [sp, #16]
  43ebe0:	mov	x19, x0
  43ebe4:	ldr	x0, [x0]
  43ebe8:	mov	x29, sp
  43ebec:	cbz	x0, 43ebf4 <_obstack_memory_used@@Base+0x994>
  43ebf0:	bl	43ec1c <_obstack_memory_used@@Base+0x9bc>
  43ebf4:	ldr	x0, [x19, #32]
  43ebf8:	stp	xzr, xzr, [x19]
  43ebfc:	bl	4049d0 <free@plt>
  43ec00:	ldr	x0, [x19, #40]
  43ec04:	str	xzr, [x19, #32]
  43ec08:	bl	4049d0 <free@plt>
  43ec0c:	str	xzr, [x19, #40]
  43ec10:	ldr	x19, [sp, #16]
  43ec14:	ldp	x29, x30, [sp], #32
  43ec18:	ret
  43ec1c:	stp	x29, x30, [sp, #-64]!
  43ec20:	stp	x24, x23, [sp, #16]
  43ec24:	stp	x22, x21, [sp, #32]
  43ec28:	stp	x20, x19, [sp, #48]
  43ec2c:	ldr	x8, [x0]
  43ec30:	mov	x19, x0
  43ec34:	mov	x29, sp
  43ec38:	cbz	x8, 43ec6c <_obstack_memory_used@@Base+0xa0c>
  43ec3c:	ldr	x8, [x19, #16]
  43ec40:	cbz	x8, 43ec6c <_obstack_memory_used@@Base+0xa0c>
  43ec44:	mov	x20, xzr
  43ec48:	mov	x21, xzr
  43ec4c:	ldr	x8, [x19]
  43ec50:	add	x0, x8, x20
  43ec54:	bl	43f9bc <_obstack_memory_used@@Base+0x175c>
  43ec58:	ldr	x8, [x19, #16]
  43ec5c:	add	x21, x21, #0x1
  43ec60:	add	x20, x20, #0x10
  43ec64:	cmp	x21, x8
  43ec68:	b.cc	43ec4c <_obstack_memory_used@@Base+0x9ec>  // b.lo, b.ul, b.last
  43ec6c:	ldr	x0, [x19, #24]
  43ec70:	bl	4049d0 <free@plt>
  43ec74:	ldr	x8, [x19, #16]
  43ec78:	cbz	x8, 43ecd0 <_obstack_memory_used@@Base+0xa70>
  43ec7c:	mov	x20, xzr
  43ec80:	mov	w21, #0x10                  	// #16
  43ec84:	b	43ec9c <_obstack_memory_used@@Base+0xa3c>
  43ec88:	ldr	x8, [x19, #16]
  43ec8c:	add	x20, x20, #0x1
  43ec90:	add	x21, x21, #0x18
  43ec94:	cmp	x20, x8
  43ec98:	b.cs	43ecd0 <_obstack_memory_used@@Base+0xa70>  // b.hs, b.nlast
  43ec9c:	ldr	x8, [x19, #48]
  43eca0:	cbz	x8, 43ecac <_obstack_memory_used@@Base+0xa4c>
  43eca4:	ldr	x0, [x8, x21]
  43eca8:	bl	4049d0 <free@plt>
  43ecac:	ldr	x8, [x19, #56]
  43ecb0:	cbz	x8, 43ecbc <_obstack_memory_used@@Base+0xa5c>
  43ecb4:	ldr	x0, [x8, x21]
  43ecb8:	bl	4049d0 <free@plt>
  43ecbc:	ldr	x8, [x19, #40]
  43ecc0:	cbz	x8, 43ec88 <_obstack_memory_used@@Base+0xa28>
  43ecc4:	ldr	x0, [x8, x21]
  43ecc8:	bl	4049d0 <free@plt>
  43eccc:	b	43ec88 <_obstack_memory_used@@Base+0xa28>
  43ecd0:	ldr	x0, [x19, #40]
  43ecd4:	bl	4049d0 <free@plt>
  43ecd8:	ldr	x0, [x19, #48]
  43ecdc:	bl	4049d0 <free@plt>
  43ece0:	ldr	x0, [x19, #56]
  43ece4:	bl	4049d0 <free@plt>
  43ece8:	ldr	x0, [x19]
  43ecec:	bl	4049d0 <free@plt>
  43ecf0:	ldr	x8, [x19, #64]
  43ecf4:	cbz	x8, 43ed58 <_obstack_memory_used@@Base+0xaf8>
  43ecf8:	mov	x20, xzr
  43ecfc:	mov	w21, #0x18                  	// #24
  43ed00:	b	43ed1c <_obstack_memory_used@@Base+0xabc>
  43ed04:	ldr	x0, [x22]
  43ed08:	bl	4049d0 <free@plt>
  43ed0c:	ldr	x8, [x19, #136]
  43ed10:	cmp	x20, x8
  43ed14:	add	x20, x20, #0x1
  43ed18:	b.cs	43ed58 <_obstack_memory_used@@Base+0xaf8>  // b.hs, b.nlast
  43ed1c:	ldr	x8, [x19, #64]
  43ed20:	madd	x23, x20, x21, x8
  43ed24:	mov	x22, x23
  43ed28:	ldr	x8, [x22], #16
  43ed2c:	cmp	x8, #0x1
  43ed30:	b.lt	43ed04 <_obstack_memory_used@@Base+0xaa4>  // b.tstop
  43ed34:	mov	x24, xzr
  43ed38:	ldr	x8, [x22]
  43ed3c:	ldr	x0, [x8, x24, lsl #3]
  43ed40:	bl	43fa04 <_obstack_memory_used@@Base+0x17a4>
  43ed44:	ldr	x8, [x23]
  43ed48:	add	x24, x24, #0x1
  43ed4c:	cmp	x24, x8
  43ed50:	b.lt	43ed38 <_obstack_memory_used@@Base+0xad8>  // b.tstop
  43ed54:	b	43ed04 <_obstack_memory_used@@Base+0xaa4>
  43ed58:	ldr	x0, [x19, #64]
  43ed5c:	bl	4049d0 <free@plt>
  43ed60:	ldr	x0, [x19, #120]
  43ed64:	adrp	x8, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43ed68:	add	x8, x8, #0x570
  43ed6c:	cmp	x0, x8
  43ed70:	b.eq	43ed78 <_obstack_memory_used@@Base+0xb18>  // b.none
  43ed74:	bl	4049d0 <free@plt>
  43ed78:	ldr	x0, [x19, #224]
  43ed7c:	bl	4049d0 <free@plt>
  43ed80:	mov	x0, x19
  43ed84:	bl	4049d0 <free@plt>
  43ed88:	ldp	x20, x19, [sp, #48]
  43ed8c:	ldp	x22, x21, [sp, #32]
  43ed90:	ldp	x24, x23, [sp, #16]
  43ed94:	ldp	x29, x30, [sp], #64
  43ed98:	ret
  43ed9c:	cmp	w4, #0x7
  43eda0:	b.ls	43edac <_obstack_memory_used@@Base+0xb4c>  // b.plast
  43eda4:	mov	w0, #0x2                   	// #2
  43eda8:	ret
  43edac:	sub	sp, sp, #0x50
  43edb0:	str	x23, [sp, #32]
  43edb4:	stp	x22, x21, [sp, #48]
  43edb8:	stp	x20, x19, [sp, #64]
  43edbc:	mov	w22, w4
  43edc0:	mov	x19, x3
  43edc4:	mov	x21, x2
  43edc8:	mov	x20, x1
  43edcc:	mov	x23, x0
  43edd0:	stp	x29, x30, [sp, #16]
  43edd4:	add	x29, sp, #0x10
  43edd8:	tbnz	w4, #2, 43ee14 <_obstack_memory_used@@Base+0xbb4>
  43eddc:	mov	x0, x20
  43ede0:	bl	404190 <strlen@plt>
  43ede4:	mov	x2, x0
  43ede8:	mov	x3, xzr
  43edec:	ldrb	w8, [x23, #56]
  43edf0:	tbz	w8, #4, 43ee20 <_obstack_memory_used@@Base+0xbc0>
  43edf4:	str	w22, [sp]
  43edf8:	mov	x0, x23
  43edfc:	mov	x1, x20
  43ee00:	mov	x4, x2
  43ee04:	mov	x5, x2
  43ee08:	mov	x6, xzr
  43ee0c:	mov	x7, xzr
  43ee10:	b	43ee3c <_obstack_memory_used@@Base+0xbdc>
  43ee14:	ldp	x3, x2, [x19]
  43ee18:	ldrb	w8, [x23, #56]
  43ee1c:	tbnz	w8, #4, 43edf4 <_obstack_memory_used@@Base+0xb94>
  43ee20:	mov	x0, x23
  43ee24:	mov	x1, x20
  43ee28:	mov	x4, x2
  43ee2c:	mov	x5, x2
  43ee30:	mov	x6, x21
  43ee34:	mov	x7, x19
  43ee38:	str	w22, [sp]
  43ee3c:	bl	43ee60 <_obstack_memory_used@@Base+0xc00>
  43ee40:	ldp	x20, x19, [sp, #64]
  43ee44:	ldp	x22, x21, [sp, #48]
  43ee48:	ldr	x23, [sp, #32]
  43ee4c:	ldp	x29, x30, [sp, #16]
  43ee50:	cmp	w0, #0x0
  43ee54:	cset	w0, ne  // ne = any
  43ee58:	add	sp, sp, #0x50
  43ee5c:	ret
  43ee60:	sub	sp, sp, #0x1d0
  43ee64:	stp	x29, x30, [sp, #368]
  43ee68:	stp	x28, x27, [sp, #384]
  43ee6c:	stp	x26, x25, [sp, #400]
  43ee70:	stp	x24, x23, [sp, #416]
  43ee74:	stp	x22, x21, [sp, #432]
  43ee78:	stp	x20, x19, [sp, #448]
  43ee7c:	ldr	x27, [x0]
  43ee80:	movi	v0.2d, #0x0
  43ee84:	stp	q0, q0, [sp, #320]
  43ee88:	stp	q0, q0, [sp, #288]
  43ee8c:	stp	q0, q0, [sp, #256]
  43ee90:	stp	q0, q0, [sp, #224]
  43ee94:	stp	q0, q0, [sp, #192]
  43ee98:	stp	q0, q0, [sp, #160]
  43ee9c:	stp	q0, q0, [sp, #128]
  43eea0:	stp	q0, q0, [sp, #96]
  43eea4:	str	x27, [sp, #248]
  43eea8:	ldr	x8, [x0, #32]
  43eeac:	mov	x28, x5
  43eeb0:	mov	x22, x3
  43eeb4:	mov	x24, x2
  43eeb8:	mov	x23, x0
  43eebc:	mov	x25, x1
  43eec0:	add	x29, sp, #0x170
  43eec4:	cbz	x8, 43eee4 <_obstack_memory_used@@Base+0xc84>
  43eec8:	ldrb	w9, [x23, #56]
  43eecc:	mov	w10, #0x9                   	// #9
  43eed0:	and	w9, w9, w10
  43eed4:	cmp	w9, #0x8
  43eed8:	ccmp	x22, x4, #0x4, eq  // eq = none
  43eedc:	csel	x21, x8, xzr, ne  // ne = any
  43eee0:	b	43eee8 <_obstack_memory_used@@Base+0xc88>
  43eee4:	mov	x21, xzr
  43eee8:	ldr	x8, [x23, #48]
  43eeec:	ldr	x9, [x23, #16]
  43eef0:	mvn	x10, x8
  43eef4:	add	x10, x10, x6
  43eef8:	cmp	x8, x6
  43eefc:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
  43ef00:	cbz	x9, 43f440 <_obstack_memory_used@@Base+0x11e0>
  43ef04:	ldr	x10, [x27, #72]
  43ef08:	cbz	x10, 43f440 <_obstack_memory_used@@Base+0x11e0>
  43ef0c:	ldr	x9, [x27, #80]
  43ef10:	cbz	x9, 43f440 <_obstack_memory_used@@Base+0x11e0>
  43ef14:	ldr	x8, [x27, #88]
  43ef18:	cbz	x8, 43f440 <_obstack_memory_used@@Base+0x11e0>
  43ef1c:	ldr	x11, [x27, #96]
  43ef20:	cbz	x11, 43f440 <_obstack_memory_used@@Base+0x11e0>
  43ef24:	ldr	x10, [x10, #16]
  43ef28:	ldr	x26, [x23, #40]
  43ef2c:	cbnz	x10, 43ef38 <_obstack_memory_used@@Base+0xcd8>
  43ef30:	ldr	x9, [x9, #16]
  43ef34:	cbz	x9, 43f420 <_obstack_memory_used@@Base+0x11c0>
  43ef38:	mov	x20, x4
  43ef3c:	sub	x8, x6, x12
  43ef40:	mov	x19, x7
  43ef44:	str	x12, [sp, #40]
  43ef48:	str	x8, [sp, #80]
  43ef4c:	str	x6, [sp, #16]
  43ef50:	cbz	x8, 43ef5c <_obstack_memory_used@@Base+0xcfc>
  43ef54:	mov	w8, #0x1                   	// #1
  43ef58:	b	43ef68 <_obstack_memory_used@@Base+0xd08>
  43ef5c:	ldr	x8, [x27, #152]
  43ef60:	cmp	x8, #0x0
  43ef64:	cset	w8, ne  // ne = any
  43ef68:	str	w8, [sp, #60]
  43ef6c:	ldr	x8, [x27, #16]
  43ef70:	ldr	x9, [x23, #24]
  43ef74:	add	x0, sp, #0x60
  43ef78:	mov	x1, x25
  43ef7c:	add	x3, x8, #0x1
  43ef80:	ubfx	x5, x9, #22, #1
  43ef84:	mov	x2, x24
  43ef88:	mov	x4, x26
  43ef8c:	mov	x6, x27
  43ef90:	bl	4454f4 <_obstack_memory_used@@Base+0x7294>
  43ef94:	mov	x9, x27
  43ef98:	str	x27, [sp, #88]
  43ef9c:	cbnz	w0, 43f58c <_obstack_memory_used@@Base+0x132c>
  43efa0:	stp	x28, x28, [sp, #192]
  43efa4:	ldrb	w8, [x23, #56]
  43efa8:	str	x23, [sp, #72]
  43efac:	ldr	w23, [x29, #96]
  43efb0:	add	x0, sp, #0x60
  43efb4:	lsr	w8, w8, #7
  43efb8:	strb	w8, [sp, #237]
  43efbc:	ldr	x8, [x9, #152]
  43efc0:	mov	w1, w23
  43efc4:	lsl	x2, x8, #1
  43efc8:	bl	4455b0 <_obstack_memory_used@@Base+0x7350>
  43efcc:	cbnz	w0, 43f58c <_obstack_memory_used@@Base+0x132c>
  43efd0:	ldp	x8, x27, [sp, #80]
  43efd4:	cmp	x8, #0x1
  43efd8:	b.hi	43efec <_obstack_memory_used@@Base+0xd8c>  // b.pmore
  43efdc:	ldrb	w8, [x27, #176]
  43efe0:	tbnz	w8, #1, 43efec <_obstack_memory_used@@Base+0xd8c>
  43efe4:	str	xzr, [sp, #280]
  43efe8:	b	43f010 <_obstack_memory_used@@Base+0xdb0>
  43efec:	ldr	x8, [sp, #160]
  43eff0:	mov	x9, #0x1ffffffffffffffe    	// #2305843009213693950
  43eff4:	cmp	x8, x9
  43eff8:	b.hi	43f594 <_obstack_memory_used@@Base+0x1334>  // b.pmore
  43effc:	lsl	x8, x8, #3
  43f000:	add	x0, x8, #0x8
  43f004:	bl	4044f0 <malloc@plt>
  43f008:	str	x0, [sp, #280]
  43f00c:	cbz	x0, 43f594 <_obstack_memory_used@@Base+0x1334>
  43f010:	tst	w23, #0x1
  43f014:	mov	w8, #0x4                   	// #4
  43f018:	mov	w9, #0x6                   	// #6
  43f01c:	csel	w8, w9, w8, eq  // eq = none
  43f020:	stur	x22, [x29, #-16]
  43f024:	str	w8, [sp, #208]
  43f028:	ldr	w10, [x27, #180]
  43f02c:	cmp	x20, x22
  43f030:	mov	w8, #0xffffffff            	// #-1
  43f034:	str	w23, [sp, #68]
  43f038:	cneg	w8, w8, ge  // ge = tcont
  43f03c:	csel	x28, x20, x22, lt  // lt = tstop
  43f040:	csel	x23, x22, x20, lt  // lt = tstop
  43f044:	str	x19, [sp, #48]
  43f048:	str	w10, [sp, #64]
  43f04c:	cbz	x21, 43f064 <_obstack_memory_used@@Base+0xe04>
  43f050:	ldr	x9, [sp, #72]
  43f054:	cmp	w10, #0x1
  43f058:	b.ne	43f06c <_obstack_memory_used@@Base+0xe0c>  // b.any
  43f05c:	mov	w9, #0x4                   	// #4
  43f060:	b	43f084 <_obstack_memory_used@@Base+0xe24>
  43f064:	mov	w9, #0x8                   	// #8
  43f068:	b	43f09c <_obstack_memory_used@@Base+0xe3c>
  43f06c:	ldr	x9, [x9, #24]
  43f070:	and	x9, x9, #0x400000
  43f074:	orr	x9, x26, x9
  43f078:	cmp	x9, #0x0
  43f07c:	cset	w9, eq  // eq = none
  43f080:	lsl	w9, w9, #2
  43f084:	cmp	x20, x22
  43f088:	cset	w10, ge  // ge = tcont
  43f08c:	cmp	x26, #0x0
  43f090:	cset	w11, ne  // ne = any
  43f094:	bfi	w11, w10, #1, #1
  43f098:	orr	w9, w11, w9
  43f09c:	ldur	x10, [x29, #-16]
  43f0a0:	mov	w27, #0x1                   	// #1
  43f0a4:	cmp	x10, x28
  43f0a8:	b.lt	43f598 <_obstack_memory_used@@Base+0x1338>  // b.tstop
  43f0ac:	cmp	x23, x10
  43f0b0:	b.lt	43f598 <_obstack_memory_used@@Base+0x1338>  // b.tstop
  43f0b4:	sxtw	x10, w8
  43f0b8:	add	x8, sp, #0x60
  43f0bc:	cmp	x20, x22
  43f0c0:	mov	x22, x10
  43f0c4:	sub	x10, x29, #0x10
  43f0c8:	add	x8, x8, #0xc0
  43f0cc:	sub	w20, w9, #0x4
  43f0d0:	str	x8, [sp, #32]
  43f0d4:	csel	x8, xzr, x10, lt  // lt = tstop
  43f0d8:	str	x8, [sp, #24]
  43f0dc:	cmp	w20, #0x4
  43f0e0:	b.hi	43f14c <_obstack_memory_used@@Base+0xeec>  // b.pmore
  43f0e4:	adrp	x10, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43f0e8:	add	x10, x10, #0x240
  43f0ec:	adr	x8, 43f0fc <_obstack_memory_used@@Base+0xe9c>
  43f0f0:	ldrb	w9, [x10, x20]
  43f0f4:	add	x8, x8, x9, lsl #2
  43f0f8:	br	x8
  43f0fc:	ldur	x8, [x29, #-16]
  43f100:	cmp	x8, x28
  43f104:	cset	w9, lt  // lt = tstop
  43f108:	b.lt	43f3b4 <_obstack_memory_used@@Base+0x1154>  // b.tstop
  43f10c:	cmp	x8, x24
  43f110:	b.ge	43f120 <_obstack_memory_used@@Base+0xec0>  // b.tcont
  43f114:	ldrb	w10, [x25, x8]
  43f118:	cbnz	x26, 43f128 <_obstack_memory_used@@Base+0xec8>
  43f11c:	b	43f12c <_obstack_memory_used@@Base+0xecc>
  43f120:	mov	w10, wzr
  43f124:	cbz	x26, 43f12c <_obstack_memory_used@@Base+0xecc>
  43f128:	ldrb	w10, [x26, w10, uxtw]
  43f12c:	ldrb	w10, [x21, w10, uxtw]
  43f130:	cbnz	w10, 43f288 <_obstack_memory_used@@Base+0x1028>
  43f134:	cmp	x8, x28
  43f138:	sub	x8, x8, #0x1
  43f13c:	cset	w9, le
  43f140:	stur	x8, [x29, #-16]
  43f144:	b.gt	43f10c <_obstack_memory_used@@Base+0xeac>
  43f148:	b	43f3b4 <_obstack_memory_used@@Base+0x1154>
  43f14c:	mov	w27, #0x1                   	// #1
  43f150:	mov	w11, #0x2                   	// #2
  43f154:	b	43f16c <_obstack_memory_used@@Base+0xf0c>
  43f158:	mov	x9, xzr
  43f15c:	ldrb	w9, [x21, x9]
  43f160:	cbz	w9, 43f1a0 <_obstack_memory_used@@Base+0xf40>
  43f164:	mov	w8, #0xe                   	// #14
  43f168:	cbnz	w8, 43f274 <_obstack_memory_used@@Base+0x1014>
  43f16c:	ldur	x1, [x29, #-16]
  43f170:	ldr	x8, [sp, #136]
  43f174:	ldr	x10, [sp, #152]
  43f178:	sub	x9, x1, x8
  43f17c:	cmp	x9, x10
  43f180:	b.cs	43f1cc <_obstack_memory_used@@Base+0xf6c>  // b.hs, b.nlast
  43f184:	ldur	x8, [x29, #-16]
  43f188:	cmp	x8, x24
  43f18c:	b.ge	43f158 <_obstack_memory_used@@Base+0xef8>  // b.tcont
  43f190:	ldr	x10, [sp, #104]
  43f194:	ldrb	w9, [x10, x9]
  43f198:	ldrb	w9, [x21, x9]
  43f19c:	cbnz	w9, 43f164 <_obstack_memory_used@@Base+0xf04>
  43f1a0:	add	x8, x8, x22
  43f1a4:	cmp	x8, x28
  43f1a8:	cset	w9, lt  // lt = tstop
  43f1ac:	cmp	x8, x23
  43f1b0:	stur	x8, [x29, #-16]
  43f1b4:	cset	w8, gt
  43f1b8:	orr	w8, w9, w8
  43f1bc:	cmp	w8, #0x0
  43f1c0:	csinc	w27, w27, wzr, eq  // eq = none
  43f1c4:	csel	w8, w11, wzr, ne  // ne = any
  43f1c8:	b	43f168 <_obstack_memory_used@@Base+0xf08>
  43f1cc:	ldr	w2, [sp, #68]
  43f1d0:	add	x0, sp, #0x60
  43f1d4:	bl	445648 <_obstack_memory_used@@Base+0x73e8>
  43f1d8:	mov	w27, w0
  43f1dc:	cbnz	w0, 43f1f4 <_obstack_memory_used@@Base+0xf94>
  43f1e0:	ldur	x8, [x29, #-16]
  43f1e4:	ldr	x9, [sp, #136]
  43f1e8:	mov	w11, #0x2                   	// #2
  43f1ec:	sub	x9, x8, x9
  43f1f0:	b	43f184 <_obstack_memory_used@@Base+0xf24>
  43f1f4:	mov	w8, #0x2                   	// #2
  43f1f8:	mov	w11, #0x2                   	// #2
  43f1fc:	b	43f168 <_obstack_memory_used@@Base+0xf08>
  43f200:	ldur	x8, [x29, #-16]
  43f204:	cmp	x8, x23
  43f208:	b.ge	43f258 <_obstack_memory_used@@Base+0xff8>  // b.tcont
  43f20c:	ldrb	w9, [x25, x8]
  43f210:	ldrb	w9, [x21, x9]
  43f214:	cbnz	w9, 43f258 <_obstack_memory_used@@Base+0xff8>
  43f218:	add	x8, x8, #0x1
  43f21c:	cmp	x8, x23
  43f220:	stur	x8, [x29, #-16]
  43f224:	b.lt	43f20c <_obstack_memory_used@@Base+0xfac>  // b.tstop
  43f228:	b	43f258 <_obstack_memory_used@@Base+0xff8>
  43f22c:	ldur	x8, [x29, #-16]
  43f230:	cmp	x8, x23
  43f234:	b.ge	43f258 <_obstack_memory_used@@Base+0xff8>  // b.tcont
  43f238:	ldrb	w9, [x25, x8]
  43f23c:	ldrb	w9, [x26, x9]
  43f240:	ldrb	w9, [x21, x9]
  43f244:	cbnz	w9, 43f258 <_obstack_memory_used@@Base+0xff8>
  43f248:	add	x8, x8, #0x1
  43f24c:	cmp	x8, x23
  43f250:	stur	x8, [x29, #-16]
  43f254:	b.lt	43f238 <_obstack_memory_used@@Base+0xfd8>  // b.tstop
  43f258:	ldur	x8, [x29, #-16]
  43f25c:	cmp	x8, x23
  43f260:	b.ne	43f28c <_obstack_memory_used@@Base+0x102c>  // b.any
  43f264:	cmp	x8, x24
  43f268:	b.ge	43f3a0 <_obstack_memory_used@@Base+0x1140>  // b.tcont
  43f26c:	ldrb	w8, [x25, x8]
  43f270:	b	43f3a4 <_obstack_memory_used@@Base+0x1144>
  43f274:	cmp	w8, #0x2
  43f278:	b.eq	43f598 <_obstack_memory_used@@Base+0x1338>  // b.none
  43f27c:	cmp	w8, #0xe
  43f280:	b.eq	43f28c <_obstack_memory_used@@Base+0x102c>  // b.none
  43f284:	b	43f448 <_obstack_memory_used@@Base+0x11e8>
  43f288:	tbnz	w9, #0, 43f3b4 <_obstack_memory_used@@Base+0x1154>
  43f28c:	ldur	x1, [x29, #-16]
  43f290:	ldr	w2, [sp, #68]
  43f294:	add	x0, sp, #0x60
  43f298:	bl	445648 <_obstack_memory_used@@Base+0x73e8>
  43f29c:	mov	w27, w0
  43f2a0:	cbnz	w0, 43f598 <_obstack_memory_used@@Base+0x1338>
  43f2a4:	ldr	w8, [sp, #64]
  43f2a8:	cmp	w8, #0x1
  43f2ac:	b.eq	43f2c8 <_obstack_memory_used@@Base+0x1068>  // b.none
  43f2b0:	ldr	x8, [sp, #144]
  43f2b4:	cbz	x8, 43f2c8 <_obstack_memory_used@@Base+0x1068>
  43f2b8:	ldr	x8, [sp, #112]
  43f2bc:	ldr	w8, [x8]
  43f2c0:	cmn	w8, #0x1
  43f2c4:	b.eq	43f37c <_obstack_memory_used@@Base+0x111c>  // b.none
  43f2c8:	ldp	x2, x8, [sp, #24]
  43f2cc:	ldr	w1, [sp, #60]
  43f2d0:	add	x0, sp, #0x60
  43f2d4:	str	wzr, [sp, #320]
  43f2d8:	stp	xzr, xzr, [x8]
  43f2dc:	bl	445c14 <_obstack_memory_used@@Base+0x79b4>
  43f2e0:	cmn	x0, #0x1
  43f2e4:	b.eq	43f374 <_obstack_memory_used@@Base+0x1114>  // b.none
  43f2e8:	mov	x2, x0
  43f2ec:	cmn	x0, #0x2
  43f2f0:	b.eq	43f594 <_obstack_memory_used@@Base+0x1334>  // b.none
  43f2f4:	ldp	x8, x9, [sp, #72]
  43f2f8:	str	x2, [sp, #264]
  43f2fc:	str	x22, [sp, #8]
  43f300:	ldrb	w8, [x8, #56]
  43f304:	cmp	x9, #0x1
  43f308:	cset	w9, hi  // hi = pmore
  43f30c:	tst	w8, #0x10
  43f310:	cset	w8, eq  // eq = none
  43f314:	and	w22, w9, w8
  43f318:	tbnz	w22, #0, 43f328 <_obstack_memory_used@@Base+0x10c8>
  43f31c:	ldr	x8, [sp, #88]
  43f320:	ldr	x8, [x8, #152]
  43f324:	cbz	x8, 43f33c <_obstack_memory_used@@Base+0x10dc>
  43f328:	ldr	x8, [sp, #280]
  43f32c:	add	x0, sp, #0x60
  43f330:	ldr	x1, [x8, x2, lsl #3]
  43f334:	bl	445f68 <_obstack_memory_used@@Base+0x7d08>
  43f338:	str	x0, [sp, #272]
  43f33c:	cbz	w22, 43f34c <_obstack_memory_used@@Base+0x10ec>
  43f340:	ldr	x8, [sp, #88]
  43f344:	ldrb	w8, [x8, #176]
  43f348:	tbnz	w8, #0, 43f358 <_obstack_memory_used@@Base+0x10f8>
  43f34c:	ldr	x8, [sp, #88]
  43f350:	ldr	x8, [x8, #152]
  43f354:	cbz	x8, 43f3bc <_obstack_memory_used@@Base+0x115c>
  43f358:	add	x0, sp, #0x60
  43f35c:	bl	445ff4 <_obstack_memory_used@@Base+0x7d94>
  43f360:	mov	w27, w0
  43f364:	cbz	w0, 43f3bc <_obstack_memory_used@@Base+0x115c>
  43f368:	ldr	x22, [sp, #8]
  43f36c:	cmp	w27, #0x1
  43f370:	b.ne	43f598 <_obstack_memory_used@@Base+0x1338>  // b.any
  43f374:	add	x0, sp, #0x60
  43f378:	bl	4461dc <_obstack_memory_used@@Base+0x7f7c>
  43f37c:	ldur	x8, [x29, #-16]
  43f380:	mov	w27, #0x1                   	// #1
  43f384:	add	x8, x8, x22
  43f388:	cmp	x8, x28
  43f38c:	stur	x8, [x29, #-16]
  43f390:	b.lt	43f598 <_obstack_memory_used@@Base+0x1338>  // b.tstop
  43f394:	cmp	x23, x8
  43f398:	b.ge	43f0dc <_obstack_memory_used@@Base+0xe7c>  // b.tcont
  43f39c:	b	43f598 <_obstack_memory_used@@Base+0x1338>
  43f3a0:	mov	w8, wzr
  43f3a4:	cbz	x26, 43f3ac <_obstack_memory_used@@Base+0x114c>
  43f3a8:	ldrb	w8, [x26, w8, uxtw]
  43f3ac:	ldrb	w8, [x21, w8, uxtw]
  43f3b0:	cbnz	w8, 43f28c <_obstack_memory_used@@Base+0x102c>
  43f3b4:	mov	w27, #0x1                   	// #1
  43f3b8:	b	43f598 <_obstack_memory_used@@Base+0x1338>
  43f3bc:	ldr	x21, [sp, #80]
  43f3c0:	cbz	x21, 43f598 <_obstack_memory_used@@Base+0x1338>
  43f3c4:	ldr	x20, [sp, #48]
  43f3c8:	cmp	x21, #0x1
  43f3cc:	b.eq	43f3f0 <_obstack_memory_used@@Base+0x1190>  // b.none
  43f3d0:	ldr	x8, [sp, #40]
  43f3d4:	ldr	x9, [sp, #16]
  43f3d8:	add	x0, x20, #0x10
  43f3dc:	mov	w1, #0xff                  	// #255
  43f3e0:	mvn	x8, x8
  43f3e4:	add	x8, x8, x9
  43f3e8:	lsl	x2, x8, #4
  43f3ec:	bl	404600 <memset@plt>
  43f3f0:	ldr	x8, [sp, #264]
  43f3f4:	cmp	x21, #0x2
  43f3f8:	stp	xzr, x8, [x20]
  43f3fc:	ldr	x8, [sp, #72]
  43f400:	b.cc	43f478 <_obstack_memory_used@@Base+0x1218>  // b.lo, b.ul, b.last
  43f404:	ldrb	w8, [x8, #56]
  43f408:	tbnz	w8, #4, 43f478 <_obstack_memory_used@@Base+0x1218>
  43f40c:	ldr	x9, [sp, #88]
  43f410:	ldrb	w8, [x9, #176]
  43f414:	tbnz	w8, #0, 43f454 <_obstack_memory_used@@Base+0x11f4>
  43f418:	mov	w4, wzr
  43f41c:	b	43f460 <_obstack_memory_used@@Base+0x1200>
  43f420:	ldr	x8, [x8, #16]
  43f424:	cbz	x8, 43f430 <_obstack_memory_used@@Base+0x11d0>
  43f428:	ldrsb	w8, [x23, #56]
  43f42c:	tbnz	w8, #31, 43ef38 <_obstack_memory_used@@Base+0xcd8>
  43f430:	mov	x20, xzr
  43f434:	cbz	x22, 43f44c <_obstack_memory_used@@Base+0x11ec>
  43f438:	mov	x22, x20
  43f43c:	cbz	x4, 43ef3c <_obstack_memory_used@@Base+0xcdc>
  43f440:	mov	w27, #0x1                   	// #1
  43f444:	b	43f5bc <_obstack_memory_used@@Base+0x135c>
  43f448:	b	43f5bc <_obstack_memory_used@@Base+0x135c>
  43f44c:	mov	x22, x20
  43f450:	b	43ef3c <_obstack_memory_used@@Base+0xcdc>
  43f454:	ldr	x8, [x9, #152]
  43f458:	cmp	x8, #0x0
  43f45c:	cset	w4, gt
  43f460:	ldr	x3, [sp, #48]
  43f464:	ldp	x0, x2, [sp, #72]
  43f468:	add	x1, sp, #0x60
  43f46c:	bl	4462a0 <_obstack_memory_used@@Base+0x8040>
  43f470:	mov	w27, w0
  43f474:	cbnz	w0, 43f598 <_obstack_memory_used@@Base+0x1338>
  43f478:	ldr	x20, [sp, #48]
  43f47c:	ldrb	w9, [sp, #236]
  43f480:	ldr	x10, [sp, #144]
  43f484:	ldr	x11, [sp, #120]
  43f488:	ldur	x12, [x29, #-16]
  43f48c:	ldr	x21, [sp, #80]
  43f490:	add	x13, sp, #0x60
  43f494:	mov	x8, xzr
  43f498:	add	x13, x13, #0x38
  43f49c:	add	x14, x20, #0x8
  43f4a0:	b	43f4c4 <_obstack_memory_used@@Base+0x1264>
  43f4a4:	ldp	x15, x16, [x14, #-8]
  43f4a8:	add	x15, x15, x12
  43f4ac:	add	x16, x16, x12
  43f4b0:	stp	x15, x16, [x14, #-8]
  43f4b4:	add	x8, x8, #0x1
  43f4b8:	cmp	x8, x21
  43f4bc:	add	x14, x14, #0x10
  43f4c0:	b.cs	43f504 <_obstack_memory_used@@Base+0x12a4>  // b.hs, b.nlast
  43f4c4:	ldur	x15, [x14, #-8]
  43f4c8:	cmn	x15, #0x1
  43f4cc:	b.eq	43f4b4 <_obstack_memory_used@@Base+0x1254>  // b.none
  43f4d0:	cbz	w9, 43f4a4 <_obstack_memory_used@@Base+0x1244>
  43f4d4:	add	x16, x11, x15, lsl #3
  43f4d8:	cmp	x15, x10
  43f4dc:	ldr	x15, [x14]
  43f4e0:	csel	x16, x13, x16, eq  // eq = none
  43f4e4:	ldr	x16, [x16]
  43f4e8:	add	x17, x11, x15, lsl #3
  43f4ec:	cmp	x15, x10
  43f4f0:	stur	x16, [x14, #-8]
  43f4f4:	csel	x15, x13, x17, eq  // eq = none
  43f4f8:	ldr	x15, [x15]
  43f4fc:	str	x15, [x14]
  43f500:	b	43f4a4 <_obstack_memory_used@@Base+0x1244>
  43f504:	ldr	x10, [sp, #40]
  43f508:	cmp	x10, #0x1
  43f50c:	b.lt	43f524 <_obstack_memory_used@@Base+0x12c4>  // b.tstop
  43f510:	add	x0, x20, x21, lsl #4
  43f514:	lsl	x2, x10, #4
  43f518:	mov	w1, #0xff                  	// #255
  43f51c:	bl	404600 <memset@plt>
  43f520:	ldr	x10, [sp, #40]
  43f524:	ldr	x8, [sp, #88]
  43f528:	ldr	x8, [x8, #224]
  43f52c:	cbz	x8, 43f598 <_obstack_memory_used@@Base+0x1338>
  43f530:	cmp	x21, #0x2
  43f534:	b.cc	43f598 <_obstack_memory_used@@Base+0x1338>  // b.lo, b.ul, b.last
  43f538:	ldr	x11, [sp, #16]
  43f53c:	mvn	x10, x10
  43f540:	mov	x9, xzr
  43f544:	add	x10, x10, x11
  43f548:	add	x11, x20, #0x18
  43f54c:	b	43f560 <_obstack_memory_used@@Base+0x1300>
  43f550:	add	x9, x9, #0x1
  43f554:	cmp	x10, x9
  43f558:	add	x11, x11, #0x10
  43f55c:	b.eq	43f598 <_obstack_memory_used@@Base+0x1338>  // b.none
  43f560:	ldr	x12, [x8, x9, lsl #3]
  43f564:	cmp	x9, x12
  43f568:	b.eq	43f550 <_obstack_memory_used@@Base+0x12f0>  // b.none
  43f56c:	add	x12, x20, x12, lsl #4
  43f570:	ldr	x12, [x12, #16]
  43f574:	stur	x12, [x11, #-8]
  43f578:	ldr	x12, [x8, x9, lsl #3]
  43f57c:	add	x12, x20, x12, lsl #4
  43f580:	ldr	x12, [x12, #24]
  43f584:	str	x12, [x11]
  43f588:	b	43f550 <_obstack_memory_used@@Base+0x12f0>
  43f58c:	mov	w27, w0
  43f590:	b	43f598 <_obstack_memory_used@@Base+0x1338>
  43f594:	mov	w27, #0xc                   	// #12
  43f598:	ldr	x0, [sp, #280]
  43f59c:	bl	4049d0 <free@plt>
  43f5a0:	ldr	x8, [sp, #88]
  43f5a4:	ldr	x8, [x8, #152]
  43f5a8:	cbz	x8, 43f5b4 <_obstack_memory_used@@Base+0x1354>
  43f5ac:	add	x0, sp, #0x60
  43f5b0:	bl	446550 <_obstack_memory_used@@Base+0x82f0>
  43f5b4:	add	x0, sp, #0x60
  43f5b8:	bl	43fe28 <_obstack_memory_used@@Base+0x1bc8>
  43f5bc:	mov	w0, w27
  43f5c0:	ldp	x20, x19, [sp, #448]
  43f5c4:	ldp	x22, x21, [sp, #432]
  43f5c8:	ldp	x24, x23, [sp, #416]
  43f5cc:	ldp	x26, x25, [sp, #400]
  43f5d0:	ldp	x28, x27, [sp, #384]
  43f5d4:	ldp	x29, x30, [sp, #368]
  43f5d8:	add	sp, sp, #0x1d0
  43f5dc:	ret
  43f5e0:	stp	x29, x30, [sp, #-16]!
  43f5e4:	mov	x6, x4
  43f5e8:	mov	w7, #0x1                   	// #1
  43f5ec:	mov	x4, xzr
  43f5f0:	mov	x5, x2
  43f5f4:	mov	x29, sp
  43f5f8:	bl	43f604 <_obstack_memory_used@@Base+0x13a4>
  43f5fc:	ldp	x29, x30, [sp], #16
  43f600:	ret
  43f604:	sub	sp, sp, #0x70
  43f608:	cmp	x3, x2
  43f60c:	cset	w8, gt
  43f610:	orr	x8, x8, x3, lsr #63
  43f614:	stp	x29, x30, [sp, #16]
  43f618:	stp	x28, x27, [sp, #32]
  43f61c:	stp	x26, x25, [sp, #48]
  43f620:	stp	x24, x23, [sp, #64]
  43f624:	stp	x22, x21, [sp, #80]
  43f628:	stp	x20, x19, [sp, #96]
  43f62c:	add	x29, sp, #0x10
  43f630:	cbnz	x8, 43f7ac <_obstack_memory_used@@Base+0x154c>
  43f634:	add	x8, x4, x3
  43f638:	ldrb	w20, [x0, #56]
  43f63c:	bic	x9, x8, x8, asr #63
  43f640:	cmp	x8, x2
  43f644:	csel	x26, x2, x9, gt
  43f648:	mov	x25, x6
  43f64c:	mov	x22, x5
  43f650:	mov	x19, x3
  43f654:	mov	x23, x2
  43f658:	mov	x24, x1
  43f65c:	mov	x21, x0
  43f660:	cmp	x26, x3
  43f664:	stur	w7, [x29, #-4]
  43f668:	b.le	43f680 <_obstack_memory_used@@Base+0x1420>
  43f66c:	tbnz	w20, #3, 43f680 <_obstack_memory_used@@Base+0x1420>
  43f670:	ldr	x8, [x21, #32]
  43f674:	cbz	x8, 43f680 <_obstack_memory_used@@Base+0x1420>
  43f678:	mov	x0, x21
  43f67c:	bl	43e610 <_obstack_memory_used@@Base+0x3b0>
  43f680:	ldrb	w8, [x21, #56]
  43f684:	tst	w8, #0x10
  43f688:	csel	x27, x25, xzr, eq  // eq = none
  43f68c:	cbz	x27, 43f6b8 <_obstack_memory_used@@Base+0x1458>
  43f690:	and	w8, w8, #0x6
  43f694:	cmp	w8, #0x4
  43f698:	b.ne	43f6ac <_obstack_memory_used@@Base+0x144c>  // b.any
  43f69c:	ldr	x8, [x27]
  43f6a0:	ldr	x9, [x21, #48]
  43f6a4:	cmp	x8, x9
  43f6a8:	b.ls	43f7bc <_obstack_memory_used@@Base+0x155c>  // b.plast
  43f6ac:	ldr	x8, [x21, #48]
  43f6b0:	add	x28, x8, #0x1
  43f6b4:	b	43f6bc <_obstack_memory_used@@Base+0x145c>
  43f6b8:	mov	w28, #0x1                   	// #1
  43f6bc:	lsl	x0, x28, #4
  43f6c0:	bl	4044f0 <malloc@plt>
  43f6c4:	cbz	x0, 43f7b4 <_obstack_memory_used@@Base+0x1554>
  43f6c8:	mov	x25, x0
  43f6cc:	ubfx	w8, w20, #5, #2
  43f6d0:	mov	x0, x21
  43f6d4:	mov	x1, x24
  43f6d8:	mov	x2, x23
  43f6dc:	mov	x3, x19
  43f6e0:	mov	x4, x26
  43f6e4:	mov	x5, x22
  43f6e8:	mov	x6, x28
  43f6ec:	mov	x7, x25
  43f6f0:	str	w8, [sp]
  43f6f4:	bl	43ee60 <_obstack_memory_used@@Base+0xc00>
  43f6f8:	cbz	w0, 43f714 <_obstack_memory_used@@Base+0x14b4>
  43f6fc:	cmp	w0, #0x1
  43f700:	mov	x8, #0xfffffffffffffffe    	// #-2
  43f704:	cinc	x21, x8, eq  // eq = none
  43f708:	ldur	w8, [x29, #-4]
  43f70c:	cbz	x21, 43f768 <_obstack_memory_used@@Base+0x1508>
  43f710:	b	43f780 <_obstack_memory_used@@Base+0x1520>
  43f714:	cbz	x27, 43f75c <_obstack_memory_used@@Base+0x14fc>
  43f718:	ldrb	w8, [x21, #56]
  43f71c:	mov	x0, x27
  43f720:	mov	x1, x25
  43f724:	mov	x2, x28
  43f728:	ubfx	w3, w8, #1, #2
  43f72c:	bl	44536c <_obstack_memory_used@@Base+0x710c>
  43f730:	ldrb	w8, [x21, #56]
  43f734:	ubfiz	w9, w0, #1, #2
  43f738:	tst	w0, #0x3
  43f73c:	mov	x10, #0xfffffffffffffffe    	// #-2
  43f740:	and	w8, w8, #0xfffffff9
  43f744:	orr	w8, w9, w8
  43f748:	strb	w8, [x21, #56]
  43f74c:	csel	x21, x10, xzr, eq  // eq = none
  43f750:	ldur	w8, [x29, #-4]
  43f754:	cbz	x21, 43f768 <_obstack_memory_used@@Base+0x1508>
  43f758:	b	43f780 <_obstack_memory_used@@Base+0x1520>
  43f75c:	mov	x21, xzr
  43f760:	ldur	w8, [x29, #-4]
  43f764:	cbnz	x21, 43f780 <_obstack_memory_used@@Base+0x1520>
  43f768:	ldr	x21, [x25]
  43f76c:	tbz	w8, #0, 43f780 <_obstack_memory_used@@Base+0x1520>
  43f770:	cmp	x21, x19
  43f774:	b.ne	43f7cc <_obstack_memory_used@@Base+0x156c>  // b.any
  43f778:	ldr	x8, [x25, #8]
  43f77c:	sub	x21, x8, x19
  43f780:	mov	x0, x25
  43f784:	bl	4049d0 <free@plt>
  43f788:	mov	x0, x21
  43f78c:	ldp	x20, x19, [sp, #96]
  43f790:	ldp	x22, x21, [sp, #80]
  43f794:	ldp	x24, x23, [sp, #64]
  43f798:	ldp	x26, x25, [sp, #48]
  43f79c:	ldp	x28, x27, [sp, #32]
  43f7a0:	ldp	x29, x30, [sp, #16]
  43f7a4:	add	sp, sp, #0x70
  43f7a8:	ret
  43f7ac:	mov	x21, #0xffffffffffffffff    	// #-1
  43f7b0:	b	43f788 <_obstack_memory_used@@Base+0x1528>
  43f7b4:	mov	x21, #0xfffffffffffffffe    	// #-2
  43f7b8:	b	43f788 <_obstack_memory_used@@Base+0x1528>
  43f7bc:	cmp	x8, #0x1
  43f7c0:	csel	x27, xzr, x27, lt  // lt = tstop
  43f7c4:	csinc	x28, x8, xzr, ge  // ge = tcont
  43f7c8:	b	43f6bc <_obstack_memory_used@@Base+0x145c>
  43f7cc:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43f7d0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43f7d4:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43f7d8:	add	x0, x0, #0x6de
  43f7dc:	add	x1, x1, #0x6f7
  43f7e0:	add	x3, x3, #0x703
  43f7e4:	mov	w2, #0x1be                 	// #446
  43f7e8:	bl	404cf0 <__assert_fail@plt>
  43f7ec:	stp	x29, x30, [sp, #-16]!
  43f7f0:	mov	x6, x5
  43f7f4:	mov	x5, x2
  43f7f8:	mov	w7, wzr
  43f7fc:	mov	x29, sp
  43f800:	bl	43f604 <_obstack_memory_used@@Base+0x13a4>
  43f804:	ldp	x29, x30, [sp], #16
  43f808:	ret
  43f80c:	sub	sp, sp, #0x20
  43f810:	mov	x8, x6
  43f814:	mov	w9, #0x1                   	// #1
  43f818:	str	x7, [sp]
  43f81c:	mov	x6, xzr
  43f820:	mov	x7, x8
  43f824:	stp	x29, x30, [sp, #16]
  43f828:	add	x29, sp, #0x10
  43f82c:	strb	w9, [sp, #8]
  43f830:	bl	43f840 <_obstack_memory_used@@Base+0x15e0>
  43f834:	ldp	x29, x30, [sp, #16]
  43f838:	add	sp, sp, #0x20
  43f83c:	ret
  43f840:	sub	sp, sp, #0x70
  43f844:	stp	x29, x30, [sp, #16]
  43f848:	add	x29, sp, #0x10
  43f84c:	stp	x22, x21, [sp, #80]
  43f850:	ldr	x22, [x29, #96]
  43f854:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  43f858:	sub	x9, x9, x4
  43f85c:	orr	x8, x4, x2
  43f860:	cmp	x9, x2
  43f864:	orr	x8, x8, x22
  43f868:	cset	w9, lt  // lt = tstop
  43f86c:	orr	x8, x9, x8, lsr #63
  43f870:	stp	x28, x27, [sp, #32]
  43f874:	stp	x26, x25, [sp, #48]
  43f878:	stp	x24, x23, [sp, #64]
  43f87c:	stp	x20, x19, [sp, #96]
  43f880:	cbnz	x8, 43f95c <_obstack_memory_used@@Base+0x16fc>
  43f884:	mov	x10, x7
  43f888:	mov	x20, x6
  43f88c:	mov	x21, x5
  43f890:	mov	x28, x4
  43f894:	mov	x19, x2
  43f898:	mov	x24, x1
  43f89c:	mov	x23, x0
  43f8a0:	cmp	x4, #0x1
  43f8a4:	add	x25, x4, x2
  43f8a8:	b.lt	43f8f4 <_obstack_memory_used@@Base+0x1694>  // b.tstop
  43f8ac:	mov	x27, x3
  43f8b0:	cmp	x19, #0x1
  43f8b4:	b.lt	43f8fc <_obstack_memory_used@@Base+0x169c>  // b.tstop
  43f8b8:	mov	x0, x25
  43f8bc:	str	x10, [sp, #8]
  43f8c0:	bl	4044f0 <malloc@plt>
  43f8c4:	cbz	x0, 43f95c <_obstack_memory_used@@Base+0x16fc>
  43f8c8:	mov	x1, x24
  43f8cc:	mov	x2, x19
  43f8d0:	mov	x26, x0
  43f8d4:	bl	404110 <memcpy@plt>
  43f8d8:	add	x0, x26, x19
  43f8dc:	mov	x1, x27
  43f8e0:	mov	x2, x28
  43f8e4:	bl	404110 <memcpy@plt>
  43f8e8:	ldr	x10, [sp, #8]
  43f8ec:	mov	x24, x26
  43f8f0:	b	43f904 <_obstack_memory_used@@Base+0x16a4>
  43f8f4:	mov	x26, xzr
  43f8f8:	b	43f904 <_obstack_memory_used@@Base+0x16a4>
  43f8fc:	mov	x26, xzr
  43f900:	mov	x24, x27
  43f904:	ldrb	w8, [x29, #104]
  43f908:	mov	x0, x23
  43f90c:	mov	x1, x24
  43f910:	mov	x2, x25
  43f914:	and	w7, w8, #0x1
  43f918:	mov	x3, x21
  43f91c:	mov	x4, x20
  43f920:	mov	x5, x22
  43f924:	mov	x6, x10
  43f928:	bl	43f604 <_obstack_memory_used@@Base+0x13a4>
  43f92c:	mov	x19, x0
  43f930:	mov	x0, x26
  43f934:	bl	4049d0 <free@plt>
  43f938:	mov	x0, x19
  43f93c:	ldp	x20, x19, [sp, #96]
  43f940:	ldp	x22, x21, [sp, #80]
  43f944:	ldp	x24, x23, [sp, #64]
  43f948:	ldp	x26, x25, [sp, #48]
  43f94c:	ldp	x28, x27, [sp, #32]
  43f950:	ldp	x29, x30, [sp, #16]
  43f954:	add	sp, sp, #0x70
  43f958:	ret
  43f95c:	mov	x19, #0xfffffffffffffffe    	// #-2
  43f960:	b	43f938 <_obstack_memory_used@@Base+0x16d8>
  43f964:	sub	sp, sp, #0x20
  43f968:	stp	x29, x30, [sp, #16]
  43f96c:	add	x29, sp, #0x10
  43f970:	ldr	x8, [x29, #16]
  43f974:	strb	wzr, [sp, #8]
  43f978:	str	x8, [sp]
  43f97c:	bl	43f840 <_obstack_memory_used@@Base+0x15e0>
  43f980:	ldp	x29, x30, [sp, #16]
  43f984:	add	sp, sp, #0x20
  43f988:	ret
  43f98c:	ldrb	w8, [x0, #56]
  43f990:	and	w8, w8, #0xfffffff9
  43f994:	cbz	x2, 43f9ac <_obstack_memory_used@@Base+0x174c>
  43f998:	orr	w8, w8, #0x2
  43f99c:	strb	w8, [x0, #56]
  43f9a0:	stp	x2, x3, [x1]
  43f9a4:	str	x4, [x1, #16]
  43f9a8:	ret
  43f9ac:	strb	w8, [x0, #56]
  43f9b0:	stp	xzr, xzr, [x1]
  43f9b4:	str	xzr, [x1, #16]
  43f9b8:	ret
  43f9bc:	stp	x29, x30, [sp, #-16]!
  43f9c0:	ldr	w8, [x0, #8]
  43f9c4:	mov	w9, #0xff                  	// #255
  43f9c8:	movk	w9, #0x4, lsl #16
  43f9cc:	mov	x29, sp
  43f9d0:	and	w8, w8, w9
  43f9d4:	cmp	w8, #0x6
  43f9d8:	b.ne	43f9ec <_obstack_memory_used@@Base+0x178c>  // b.any
  43f9dc:	ldr	x0, [x0]
  43f9e0:	bl	43fa70 <_obstack_memory_used@@Base+0x1810>
  43f9e4:	ldp	x29, x30, [sp], #16
  43f9e8:	ret
  43f9ec:	cmp	w8, #0x3
  43f9f0:	b.ne	43f9fc <_obstack_memory_used@@Base+0x179c>  // b.any
  43f9f4:	ldr	x0, [x0]
  43f9f8:	bl	4049d0 <free@plt>
  43f9fc:	ldp	x29, x30, [sp], #16
  43fa00:	ret
  43fa04:	stp	x29, x30, [sp, #-32]!
  43fa08:	str	x19, [sp, #16]
  43fa0c:	mov	x19, x0
  43fa10:	ldr	x0, [x0, #48]
  43fa14:	mov	x29, sp
  43fa18:	bl	4049d0 <free@plt>
  43fa1c:	ldr	x0, [x19, #72]
  43fa20:	bl	4049d0 <free@plt>
  43fa24:	ldr	x8, [x19, #80]
  43fa28:	add	x9, x19, #0x8
  43fa2c:	cmp	x8, x9
  43fa30:	b.eq	43fa44 <_obstack_memory_used@@Base+0x17e4>  // b.none
  43fa34:	ldr	x0, [x8, #16]
  43fa38:	bl	4049d0 <free@plt>
  43fa3c:	ldr	x0, [x19, #80]
  43fa40:	bl	4049d0 <free@plt>
  43fa44:	ldr	x0, [x19, #24]
  43fa48:	bl	4049d0 <free@plt>
  43fa4c:	ldr	x0, [x19, #96]
  43fa50:	bl	4049d0 <free@plt>
  43fa54:	ldr	x0, [x19, #88]
  43fa58:	bl	4049d0 <free@plt>
  43fa5c:	mov	x0, x19
  43fa60:	bl	4049d0 <free@plt>
  43fa64:	ldr	x19, [sp, #16]
  43fa68:	ldp	x29, x30, [sp], #32
  43fa6c:	ret
  43fa70:	stp	x29, x30, [sp, #-32]!
  43fa74:	str	x19, [sp, #16]
  43fa78:	mov	x19, x0
  43fa7c:	ldr	x0, [x0]
  43fa80:	mov	x29, sp
  43fa84:	bl	4049d0 <free@plt>
  43fa88:	ldr	x0, [x19, #8]
  43fa8c:	bl	4049d0 <free@plt>
  43fa90:	ldr	x0, [x19, #16]
  43fa94:	bl	4049d0 <free@plt>
  43fa98:	ldr	x0, [x19, #24]
  43fa9c:	bl	4049d0 <free@plt>
  43faa0:	mov	x0, x19
  43faa4:	bl	4049d0 <free@plt>
  43faa8:	ldr	x19, [sp, #16]
  43faac:	ldp	x29, x30, [sp], #32
  43fab0:	ret
  43fab4:	stp	x29, x30, [sp, #-64]!
  43fab8:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  43fabc:	movk	x8, #0x5554
  43fac0:	movk	x8, #0x555, lsl #48
  43fac4:	movi	v0.2d, #0x0
  43fac8:	cmp	x1, x8
  43facc:	mov	w8, #0xf                   	// #15
  43fad0:	stp	x24, x23, [sp, #16]
  43fad4:	stp	x22, x21, [sp, #32]
  43fad8:	stp	x20, x19, [sp, #48]
  43fadc:	mov	x29, sp
  43fae0:	str	xzr, [x0, #224]
  43fae4:	stp	q0, q0, [x0, #192]
  43fae8:	stp	q0, q0, [x0, #160]
  43faec:	stp	q0, q0, [x0, #128]
  43faf0:	stp	q0, q0, [x0, #96]
  43faf4:	stp	q0, q0, [x0, #64]
  43faf8:	stp	q0, q0, [x0, #32]
  43fafc:	stp	q0, q0, [x0]
  43fb00:	str	w8, [x0, #128]
  43fb04:	b.hi	43fca4 <_obstack_memory_used@@Base+0x1a44>  // b.pmore
  43fb08:	add	x8, x1, #0x1
  43fb0c:	mov	x19, x0
  43fb10:	str	x8, [x0, #8]
  43fb14:	lsl	x0, x8, #4
  43fb18:	mov	x20, x1
  43fb1c:	bl	4044f0 <malloc@plt>
  43fb20:	mov	w8, #0x1                   	// #1
  43fb24:	str	x0, [x19]
  43fb28:	mov	x21, x8
  43fb2c:	cmp	x8, x20
  43fb30:	lsl	x8, x8, #1
  43fb34:	b.ls	43fb28 <_obstack_memory_used@@Base+0x18c8>  // b.plast
  43fb38:	mov	w0, #0x18                  	// #24
  43fb3c:	mov	x1, x21
  43fb40:	bl	4046a0 <calloc@plt>
  43fb44:	sub	x8, x21, #0x1
  43fb48:	str	x0, [x19, #64]
  43fb4c:	str	x8, [x19, #136]
  43fb50:	bl	404a00 <__ctype_get_mb_cur_max@plt>
  43fb54:	str	w0, [x19, #180]
  43fb58:	mov	w0, #0xe                   	// #14
  43fb5c:	bl	4044b0 <nl_langinfo@plt>
  43fb60:	ldrb	w8, [x0]
  43fb64:	orr	w8, w8, #0x20
  43fb68:	cmp	w8, #0x75
  43fb6c:	b.ne	43fbb8 <_obstack_memory_used@@Base+0x1958>  // b.any
  43fb70:	ldrb	w8, [x0, #1]
  43fb74:	orr	w8, w8, #0x20
  43fb78:	cmp	w8, #0x74
  43fb7c:	b.ne	43fbb8 <_obstack_memory_used@@Base+0x1958>  // b.any
  43fb80:	ldrb	w8, [x0, #2]
  43fb84:	orr	w8, w8, #0x20
  43fb88:	cmp	w8, #0x66
  43fb8c:	b.ne	43fbb8 <_obstack_memory_used@@Base+0x1958>  // b.any
  43fb90:	ldrb	w8, [x0, #3]!
  43fb94:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x17da0>
  43fb98:	add	x1, x1, #0xa7b
  43fb9c:	cmp	w8, #0x2d
  43fba0:	cinc	x0, x0, eq  // eq = none
  43fba4:	bl	404920 <strcmp@plt>
  43fba8:	cbnz	w0, 43fbb8 <_obstack_memory_used@@Base+0x1958>
  43fbac:	ldrb	w8, [x19, #176]
  43fbb0:	orr	w8, w8, #0x4
  43fbb4:	strb	w8, [x19, #176]
  43fbb8:	ldrb	w8, [x19, #176]
  43fbbc:	ldr	w9, [x19, #180]
  43fbc0:	and	w10, w8, #0xfffffff7
  43fbc4:	cmp	w9, #0x2
  43fbc8:	strb	w10, [x19, #176]
  43fbcc:	b.lt	43fc78 <_obstack_memory_used@@Base+0x1a18>  // b.tstop
  43fbd0:	tbnz	w8, #2, 43fc6c <_obstack_memory_used@@Base+0x1a0c>
  43fbd4:	mov	w0, #0x20                  	// #32
  43fbd8:	mov	w1, #0x1                   	// #1
  43fbdc:	bl	4046a0 <calloc@plt>
  43fbe0:	str	x0, [x19, #120]
  43fbe4:	cbz	x0, 43fca4 <_obstack_memory_used@@Base+0x1a44>
  43fbe8:	mov	x21, xzr
  43fbec:	mov	w8, wzr
  43fbf0:	mov	w22, #0x1                   	// #1
  43fbf4:	b	43fc08 <_obstack_memory_used@@Base+0x19a8>
  43fbf8:	add	x21, x21, #0x1
  43fbfc:	cmp	x21, #0x4
  43fc00:	add	w8, w24, w23
  43fc04:	b.eq	43fc78 <_obstack_memory_used@@Base+0x1a18>  // b.none
  43fc08:	mov	x23, xzr
  43fc0c:	mov	w24, w8
  43fc10:	b	43fc20 <_obstack_memory_used@@Base+0x19c0>
  43fc14:	add	x23, x23, #0x1
  43fc18:	cmp	x23, #0x40
  43fc1c:	b.eq	43fbf8 <_obstack_memory_used@@Base+0x1998>  // b.none
  43fc20:	add	x20, x24, x23
  43fc24:	mov	w0, w20
  43fc28:	bl	404850 <btowc@plt>
  43fc2c:	cmn	w0, #0x1
  43fc30:	b.eq	43fc4c <_obstack_memory_used@@Base+0x19ec>  // b.none
  43fc34:	ldr	x8, [x19, #120]
  43fc38:	lsl	x9, x21, #3
  43fc3c:	lsl	x11, x22, x23
  43fc40:	ldr	x10, [x8, x9]
  43fc44:	orr	x10, x10, x11
  43fc48:	str	x10, [x8, x9]
  43fc4c:	cmp	w20, #0x7f
  43fc50:	b.hi	43fc14 <_obstack_memory_used@@Base+0x19b4>  // b.pmore
  43fc54:	cmp	w20, w0
  43fc58:	b.eq	43fc14 <_obstack_memory_used@@Base+0x19b4>  // b.none
  43fc5c:	ldrb	w8, [x19, #176]
  43fc60:	orr	w8, w8, #0x8
  43fc64:	strb	w8, [x19, #176]
  43fc68:	b	43fc14 <_obstack_memory_used@@Base+0x19b4>
  43fc6c:	adrp	x8, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  43fc70:	add	x8, x8, #0x570
  43fc74:	str	x8, [x19, #120]
  43fc78:	ldr	x8, [x19]
  43fc7c:	mov	w0, #0xc                   	// #12
  43fc80:	cbz	x8, 43fc90 <_obstack_memory_used@@Base+0x1a30>
  43fc84:	ldr	x8, [x19, #64]
  43fc88:	cmp	x8, #0x0
  43fc8c:	csel	w0, w0, wzr, eq  // eq = none
  43fc90:	ldp	x20, x19, [sp, #48]
  43fc94:	ldp	x22, x21, [sp, #32]
  43fc98:	ldp	x24, x23, [sp, #16]
  43fc9c:	ldp	x29, x30, [sp], #64
  43fca0:	ret
  43fca4:	mov	w0, #0xc                   	// #12
  43fca8:	b	43fc90 <_obstack_memory_used@@Base+0x1a30>
  43fcac:	stp	x29, x30, [sp, #-64]!
  43fcb0:	stp	x20, x19, [sp, #48]
  43fcb4:	mov	x19, x0
  43fcb8:	movi	v0.2d, #0x0
  43fcbc:	stp	x24, x23, [sp, #16]
  43fcc0:	stp	x22, x21, [sp, #32]
  43fcc4:	mov	w23, w4
  43fcc8:	mov	x21, x2
  43fccc:	mov	x24, x1
  43fcd0:	str	xzr, [x0, #144]
  43fcd4:	stp	q0, q0, [x0, #112]
  43fcd8:	stp	q0, q0, [x0, #80]
  43fcdc:	stp	q0, q0, [x0, #48]
  43fce0:	stp	q0, q0, [x0, #16]
  43fce4:	str	q0, [x0]
  43fce8:	and	w4, w4, #0x1
  43fcec:	mov	x0, x1
  43fcf0:	mov	x1, x2
  43fcf4:	mov	x2, x19
  43fcf8:	mov	x29, sp
  43fcfc:	mov	x20, x5
  43fd00:	mov	x22, x3
  43fd04:	bl	4404c0 <_obstack_memory_used@@Base+0x2260>
  43fd08:	cmp	x21, #0x1
  43fd0c:	b.lt	43fd20 <_obstack_memory_used@@Base+0x1ac0>  // b.tstop
  43fd10:	add	x1, x21, #0x1
  43fd14:	mov	x0, x19
  43fd18:	bl	440510 <_obstack_memory_used@@Base+0x22b0>
  43fd1c:	cbnz	w0, 43fdc8 <_obstack_memory_used@@Base+0x1b68>
  43fd20:	ldrb	w8, [x19, #139]
  43fd24:	cbz	w8, 43fd2c <_obstack_memory_used@@Base+0x1acc>
  43fd28:	ldr	x24, [x19, #8]
  43fd2c:	str	x24, [x19, #8]
  43fd30:	ldr	w8, [x20, #180]
  43fd34:	cmp	w8, #0x2
  43fd38:	tbz	w23, #0, 43fd84 <_obstack_memory_used@@Base+0x1b24>
  43fd3c:	b.lt	43fd98 <_obstack_memory_used@@Base+0x1b38>  // b.tstop
  43fd40:	mov	x0, x19
  43fd44:	bl	4405c4 <_obstack_memory_used@@Base+0x2364>
  43fd48:	cbnz	w0, 43fdc8 <_obstack_memory_used@@Base+0x1b68>
  43fd4c:	ldr	x8, [x19, #56]
  43fd50:	cmp	x8, x21
  43fd54:	b.ge	43fdb4 <_obstack_memory_used@@Base+0x1b54>  // b.tcont
  43fd58:	ldr	x9, [x19, #48]
  43fd5c:	ldrsw	x10, [x20, #180]
  43fd60:	ldr	x8, [x19, #64]
  43fd64:	add	x9, x9, x10
  43fd68:	cmp	x8, x9
  43fd6c:	b.gt	43fdb4 <_obstack_memory_used@@Base+0x1b54>
  43fd70:	lsl	x1, x8, #1
  43fd74:	mov	x0, x19
  43fd78:	bl	440510 <_obstack_memory_used@@Base+0x22b0>
  43fd7c:	cbz	w0, 43fd40 <_obstack_memory_used@@Base+0x1ae0>
  43fd80:	b	43fdc8 <_obstack_memory_used@@Base+0x1b68>
  43fd84:	b.lt	43fda8 <_obstack_memory_used@@Base+0x1b48>  // b.tstop
  43fd88:	mov	x0, x19
  43fd8c:	bl	440c3c <_obstack_memory_used@@Base+0x29dc>
  43fd90:	mov	w0, wzr
  43fd94:	b	43fdc8 <_obstack_memory_used@@Base+0x1b68>
  43fd98:	mov	x0, x19
  43fd9c:	bl	440bbc <_obstack_memory_used@@Base+0x295c>
  43fda0:	mov	w0, wzr
  43fda4:	b	43fdc8 <_obstack_memory_used@@Base+0x1b68>
  43fda8:	cbz	x22, 43fdbc <_obstack_memory_used@@Base+0x1b5c>
  43fdac:	mov	x0, x19
  43fdb0:	bl	440de0 <_obstack_memory_used@@Base+0x2b80>
  43fdb4:	mov	w0, wzr
  43fdb8:	b	43fdc8 <_obstack_memory_used@@Base+0x1b68>
  43fdbc:	ldr	x8, [x19, #64]
  43fdc0:	mov	w0, wzr
  43fdc4:	stp	x8, x8, [x19, #48]
  43fdc8:	ldp	x20, x19, [sp, #48]
  43fdcc:	ldp	x22, x21, [sp, #32]
  43fdd0:	ldp	x24, x23, [sp, #16]
  43fdd4:	ldp	x29, x30, [sp], #64
  43fdd8:	ret
  43fddc:	stp	x29, x30, [sp, #-32]!
  43fde0:	stp	x20, x19, [sp, #16]
  43fde4:	ldr	x19, [x0]
  43fde8:	mov	x29, sp
  43fdec:	ldr	x0, [x19, #112]
  43fdf0:	cbz	x0, 43fe04 <_obstack_memory_used@@Base+0x1ba4>
  43fdf4:	ldr	x20, [x0]
  43fdf8:	bl	4049d0 <free@plt>
  43fdfc:	mov	x0, x20
  43fe00:	cbnz	x20, 43fdf4 <_obstack_memory_used@@Base+0x1b94>
  43fe04:	ldr	x0, [x19, #32]
  43fe08:	mov	w8, #0xf                   	// #15
  43fe0c:	str	w8, [x19, #128]
  43fe10:	stp	xzr, xzr, [x19, #104]
  43fe14:	bl	4049d0 <free@plt>
  43fe18:	str	xzr, [x19, #32]
  43fe1c:	ldp	x20, x19, [sp, #16]
  43fe20:	ldp	x29, x30, [sp], #32
  43fe24:	ret
  43fe28:	stp	x29, x30, [sp, #-32]!
  43fe2c:	str	x19, [sp, #16]
  43fe30:	mov	x19, x0
  43fe34:	ldr	x0, [x0, #16]
  43fe38:	mov	x29, sp
  43fe3c:	bl	4049d0 <free@plt>
  43fe40:	ldr	x0, [x19, #24]
  43fe44:	bl	4049d0 <free@plt>
  43fe48:	ldrb	w8, [x19, #139]
  43fe4c:	cbz	w8, 43fe58 <_obstack_memory_used@@Base+0x1bf8>
  43fe50:	ldr	x0, [x19, #8]
  43fe54:	bl	4049d0 <free@plt>
  43fe58:	ldr	x19, [sp, #16]
  43fe5c:	ldp	x29, x30, [sp], #32
  43fe60:	ret
  43fe64:	sub	sp, sp, #0x50
  43fe68:	stp	x29, x30, [sp, #16]
  43fe6c:	stp	x22, x21, [sp, #48]
  43fe70:	stp	x20, x19, [sp, #64]
  43fe74:	ldr	x20, [x1]
  43fe78:	str	x23, [sp, #32]
  43fe7c:	mov	x23, x0
  43fe80:	mov	x21, x2
  43fe84:	mov	x22, x1
  43fe88:	str	x2, [x20, #216]
  43fe8c:	orr	x2, x2, #0x800000
  43fe90:	mov	x0, sp
  43fe94:	mov	x1, x23
  43fe98:	add	x29, sp, #0x10
  43fe9c:	mov	x19, x3
  43fea0:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  43fea4:	mov	x2, sp
  43fea8:	mov	x0, x23
  43feac:	mov	x1, x22
  43feb0:	mov	x3, x21
  43feb4:	mov	x4, xzr
  43feb8:	mov	x5, x19
  43febc:	bl	440e58 <_obstack_memory_used@@Base+0x2bf8>
  43fec0:	mov	x21, x0
  43fec4:	cbnz	x0, 43fed0 <_obstack_memory_used@@Base+0x1c70>
  43fec8:	ldr	w8, [x19]
  43fecc:	cbnz	w8, 43ff20 <_obstack_memory_used@@Base+0x1cc0>
  43fed0:	mov	w3, #0x2                   	// #2
  43fed4:	mov	x0, x20
  43fed8:	mov	x1, xzr
  43fedc:	mov	x2, xzr
  43fee0:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  43fee4:	mov	x22, x0
  43fee8:	cbz	x21, 43ff00 <_obstack_memory_used@@Base+0x1ca0>
  43feec:	mov	w3, #0x10                  	// #16
  43fef0:	mov	x0, x20
  43fef4:	mov	x1, x21
  43fef8:	mov	x2, x22
  43fefc:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  43ff00:	cbz	x22, 43ff28 <_obstack_memory_used@@Base+0x1cc8>
  43ff04:	cbz	x0, 43ff28 <_obstack_memory_used@@Base+0x1cc8>
  43ff08:	ldp	x20, x19, [sp, #64]
  43ff0c:	ldp	x22, x21, [sp, #48]
  43ff10:	ldr	x23, [sp, #32]
  43ff14:	ldp	x29, x30, [sp, #16]
  43ff18:	add	sp, sp, #0x50
  43ff1c:	ret
  43ff20:	mov	x0, xzr
  43ff24:	b	43ff08 <_obstack_memory_used@@Base+0x1ca8>
  43ff28:	mov	x0, xzr
  43ff2c:	mov	w8, #0xc                   	// #12
  43ff30:	str	w8, [x19]
  43ff34:	b	43ff08 <_obstack_memory_used@@Base+0x1ca8>
  43ff38:	stp	x29, x30, [sp, #-32]!
  43ff3c:	stp	x20, x19, [sp, #16]
  43ff40:	ldr	x19, [x0]
  43ff44:	mov	x20, x0
  43ff48:	mov	x29, sp
  43ff4c:	ldr	x8, [x19, #8]
  43ff50:	lsl	x0, x8, #3
  43ff54:	bl	4044f0 <malloc@plt>
  43ff58:	ldr	x8, [x19, #8]
  43ff5c:	str	x0, [x19, #24]
  43ff60:	lsl	x0, x8, #3
  43ff64:	bl	4044f0 <malloc@plt>
  43ff68:	ldr	x8, [x19, #8]
  43ff6c:	str	x0, [x19, #32]
  43ff70:	add	x8, x8, x8, lsl #1
  43ff74:	lsl	x0, x8, #3
  43ff78:	bl	4044f0 <malloc@plt>
  43ff7c:	ldr	x8, [x19, #8]
  43ff80:	str	x0, [x19, #40]
  43ff84:	add	x8, x8, x8, lsl #1
  43ff88:	lsl	x0, x8, #3
  43ff8c:	bl	4044f0 <malloc@plt>
  43ff90:	ldr	x9, [x19, #24]
  43ff94:	str	x0, [x19, #48]
  43ff98:	cbz	x9, 44010c <_obstack_memory_used@@Base+0x1eac>
  43ff9c:	ldr	x9, [x19, #32]
  43ffa0:	cbz	x9, 44010c <_obstack_memory_used@@Base+0x1eac>
  43ffa4:	mov	x8, x0
  43ffa8:	mov	w0, #0xc                   	// #12
  43ffac:	cbz	x8, 4400d8 <_obstack_memory_used@@Base+0x1e78>
  43ffb0:	ldr	x8, [x19, #40]
  43ffb4:	cbz	x8, 4400d8 <_obstack_memory_used@@Base+0x1e78>
  43ffb8:	ldr	x8, [x20, #48]
  43ffbc:	lsl	x0, x8, #3
  43ffc0:	bl	4044f0 <malloc@plt>
  43ffc4:	str	x0, [x19, #224]
  43ffc8:	cbz	x0, 440030 <_obstack_memory_used@@Base+0x1dd0>
  43ffcc:	ldr	x8, [x20, #48]
  43ffd0:	cbz	x8, 43fff0 <_obstack_memory_used@@Base+0x1d90>
  43ffd4:	ldr	x8, [x19, #224]
  43ffd8:	mov	x9, xzr
  43ffdc:	str	x9, [x8, x9, lsl #3]
  43ffe0:	ldr	x10, [x20, #48]
  43ffe4:	add	x9, x9, #0x1
  43ffe8:	cmp	x9, x10
  43ffec:	b.cc	43ffdc <_obstack_memory_used@@Base+0x1d7c>  // b.lo, b.ul, b.last
  43fff0:	ldr	x0, [x19, #104]
  43fff4:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x4da0>
  43fff8:	add	x1, x1, #0xb7c
  43fffc:	mov	x2, x19
  440000:	bl	443ac8 <_obstack_memory_used@@Base+0x5868>
  440004:	ldr	x8, [x20, #48]
  440008:	cbz	x8, 440018 <_obstack_memory_used@@Base+0x1db8>
  44000c:	ldr	x10, [x19, #224]
  440010:	ldr	x9, [x10]
  440014:	cbz	x9, 4400e4 <_obstack_memory_used@@Base+0x1e84>
  440018:	mov	x9, xzr
  44001c:	cmp	x9, x8
  440020:	b.ne	440030 <_obstack_memory_used@@Base+0x1dd0>  // b.any
  440024:	ldr	x0, [x19, #224]
  440028:	bl	4049d0 <free@plt>
  44002c:	str	xzr, [x19, #224]
  440030:	ldr	x0, [x19, #104]
  440034:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x4da0>
  440038:	add	x1, x1, #0xc24
  44003c:	mov	x2, x20
  440040:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  440044:	cbnz	w0, 4400d8 <_obstack_memory_used@@Base+0x1e78>
  440048:	ldr	x0, [x19, #104]
  44004c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x4da0>
  440050:	add	x1, x1, #0xcac
  440054:	mov	x2, x19
  440058:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  44005c:	cbnz	w0, 4400d8 <_obstack_memory_used@@Base+0x1e78>
  440060:	ldr	x0, [x19, #104]
  440064:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x4da0>
  440068:	add	x1, x1, #0xd48
  44006c:	mov	x2, x19
  440070:	bl	443ac8 <_obstack_memory_used@@Base+0x5868>
  440074:	ldr	x0, [x19, #104]
  440078:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x4da0>
  44007c:	add	x1, x1, #0xda4
  440080:	mov	x2, x19
  440084:	bl	443ac8 <_obstack_memory_used@@Base+0x5868>
  440088:	cbnz	w0, 4400d8 <_obstack_memory_used@@Base+0x1e78>
  44008c:	mov	x0, x19
  440090:	bl	443f40 <_obstack_memory_used@@Base+0x5ce0>
  440094:	cbnz	w0, 4400d8 <_obstack_memory_used@@Base+0x1e78>
  440098:	ldrb	w8, [x20, #56]
  44009c:	tbnz	w8, #4, 4400b0 <_obstack_memory_used@@Base+0x1e50>
  4400a0:	ldr	x8, [x20, #48]
  4400a4:	cbz	x8, 4400b0 <_obstack_memory_used@@Base+0x1e50>
  4400a8:	ldrb	w8, [x19, #176]
  4400ac:	tbnz	w8, #0, 4400b8 <_obstack_memory_used@@Base+0x1e58>
  4400b0:	ldr	x8, [x19, #152]
  4400b4:	cbz	x8, 4400d8 <_obstack_memory_used@@Base+0x1e78>
  4400b8:	ldr	x8, [x19, #16]
  4400bc:	add	x8, x8, x8, lsl #1
  4400c0:	lsl	x0, x8, #3
  4400c4:	bl	4044f0 <malloc@plt>
  4400c8:	str	x0, [x19, #56]
  4400cc:	cbz	x0, 44010c <_obstack_memory_used@@Base+0x1eac>
  4400d0:	mov	x0, x19
  4400d4:	bl	444054 <_obstack_memory_used@@Base+0x5df4>
  4400d8:	ldp	x20, x19, [sp, #16]
  4400dc:	ldp	x29, x30, [sp], #32
  4400e0:	ret
  4400e4:	mov	w11, #0x1                   	// #1
  4400e8:	ldr	x8, [x20, #48]
  4400ec:	mov	x9, x11
  4400f0:	cmp	x11, x8
  4400f4:	b.cs	44001c <_obstack_memory_used@@Base+0x1dbc>  // b.hs, b.nlast
  4400f8:	ldr	x11, [x10, x9, lsl #3]
  4400fc:	cmp	x9, x11
  440100:	add	x11, x9, #0x1
  440104:	b.eq	4400e8 <_obstack_memory_used@@Base+0x1e88>  // b.none
  440108:	b	44001c <_obstack_memory_used@@Base+0x1dbc>
  44010c:	mov	w0, #0xc                   	// #12
  440110:	b	4400d8 <_obstack_memory_used@@Base+0x1e78>
  440114:	stp	x29, x30, [sp, #-16]!
  440118:	ldr	x8, [x0, #16]
  44011c:	mov	x29, sp
  440120:	cbz	x8, 440148 <_obstack_memory_used@@Base+0x1ee8>
  440124:	ldr	x11, [x0]
  440128:	adrp	x12, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44012c:	mov	w8, wzr
  440130:	mov	w9, wzr
  440134:	mov	x10, xzr
  440138:	add	x12, x12, #0x245
  44013c:	mov	w13, #0x1                   	// #1
  440140:	mov	w14, #0x8b                  	// #139
  440144:	b	440220 <_obstack_memory_used@@Base+0x1fc0>
  440148:	mov	w9, wzr
  44014c:	tbnz	w9, #0, 440154 <_obstack_memory_used@@Base+0x1ef4>
  440150:	tbz	w8, #0, 4401c4 <_obstack_memory_used@@Base+0x1f64>
  440154:	ldr	x9, [x0, #16]
  440158:	cbz	x9, 4401c4 <_obstack_memory_used@@Base+0x1f64>
  44015c:	mov	x9, xzr
  440160:	mov	x10, xzr
  440164:	b	440188 <_obstack_memory_used@@Base+0x1f28>
  440168:	and	w12, w12, #0xffffff00
  44016c:	orr	w12, w12, #0x7
  440170:	str	w12, [x11, #8]
  440174:	ldr	x11, [x0, #16]
  440178:	add	x10, x10, #0x1
  44017c:	add	x9, x9, #0x10
  440180:	cmp	x10, x11
  440184:	b.cs	4401c4 <_obstack_memory_used@@Base+0x1f64>  // b.hs, b.nlast
  440188:	ldr	x13, [x0]
  44018c:	add	x11, x13, x9
  440190:	ldr	w12, [x11, #8]
  440194:	and	w14, w12, #0xff
  440198:	cmp	w14, #0x5
  44019c:	b.eq	440168 <_obstack_memory_used@@Base+0x1f08>  // b.none
  4401a0:	cmp	w14, #0x1
  4401a4:	b.ne	440174 <_obstack_memory_used@@Base+0x1f14>  // b.any
  4401a8:	ldrsb	w13, [x13, x9]
  4401ac:	tbnz	w13, #31, 4401bc <_obstack_memory_used@@Base+0x1f5c>
  4401b0:	cmp	w14, #0x5
  4401b4:	b.eq	440168 <_obstack_memory_used@@Base+0x1f08>  // b.none
  4401b8:	b	440174 <_obstack_memory_used@@Base+0x1f14>
  4401bc:	and	w12, w12, #0xffdfffff
  4401c0:	b	440170 <_obstack_memory_used@@Base+0x1f10>
  4401c4:	ldr	x10, [x0, #152]
  4401c8:	mov	w9, #0x1                   	// #1
  4401cc:	ldrb	w11, [x0, #176]
  4401d0:	str	w9, [x0, #180]
  4401d4:	cmp	x10, #0x0
  4401d8:	cset	w9, gt
  4401dc:	orr	w8, w8, w9
  4401e0:	mov	w12, #0x2                   	// #2
  4401e4:	tst	w8, #0x1
  4401e8:	csel	w8, w12, wzr, ne  // ne = any
  4401ec:	and	w9, w11, #0xfffffff9
  4401f0:	orr	w8, w8, w9
  4401f4:	strb	w8, [x0, #176]
  4401f8:	ldp	x29, x30, [sp], #16
  4401fc:	ret
  440200:	ldrsb	w15, [x15]
  440204:	cmp	w15, #0x0
  440208:	cset	w15, lt  // lt = tstop
  44020c:	orr	w9, w9, w15
  440210:	ldr	x15, [x0, #16]
  440214:	add	x10, x10, #0x1
  440218:	cmp	x10, x15
  44021c:	b.cs	44014c <_obstack_memory_used@@Base+0x1eec>  // b.hs, b.nlast
  440220:	add	x15, x11, x10, lsl #4
  440224:	ldrb	w16, [x15, #8]
  440228:	sub	w16, w16, #0x1
  44022c:	cmp	w16, #0xb
  440230:	b.hi	440298 <_obstack_memory_used@@Base+0x2038>  // b.pmore
  440234:	adr	x17, 4401f8 <_obstack_memory_used@@Base+0x1f98>
  440238:	ldrb	w18, [x12, x16]
  44023c:	add	x17, x17, x18, lsl #2
  440240:	br	x17
  440244:	lsl	x16, x10, #4
  440248:	ldr	x16, [x11, x16]
  44024c:	mov	x15, xzr
  440250:	add	x16, x16, #0x10
  440254:	ldr	x17, [x16, x15]
  440258:	cbnz	x17, 4401f8 <_obstack_memory_used@@Base+0x1f98>
  44025c:	add	x15, x15, #0x8
  440260:	cmp	x15, #0x10
  440264:	b.ne	440254 <_obstack_memory_used@@Base+0x1ff4>  // b.any
  440268:	b	440210 <_obstack_memory_used@@Base+0x1fb0>
  44026c:	ldr	w15, [x15]
  440270:	sub	w15, w15, #0x10
  440274:	ror	w15, w15, #4
  440278:	cmp	w15, #0x7
  44027c:	b.hi	4401f8 <_obstack_memory_used@@Base+0x1f98>  // b.pmore
  440280:	lsl	w15, w13, w15
  440284:	tst	w15, w14
  440288:	b.ne	440210 <_obstack_memory_used@@Base+0x1fb0>  // b.any
  44028c:	b	4401f8 <_obstack_memory_used@@Base+0x1f98>
  440290:	mov	w8, #0x1                   	// #1
  440294:	b	440210 <_obstack_memory_used@@Base+0x1fb0>
  440298:	bl	404870 <abort@plt>
  44029c:	sub	sp, sp, #0x60
  4402a0:	stp	x29, x30, [sp, #32]
  4402a4:	stp	x22, x21, [sp, #64]
  4402a8:	stp	x20, x19, [sp, #80]
  4402ac:	ldr	x8, [x0, #104]
  4402b0:	ldr	x9, [x0, #48]
  4402b4:	mov	w10, #0x18                  	// #24
  4402b8:	mov	x19, x0
  4402bc:	ldr	x8, [x8, #24]
  4402c0:	str	x23, [sp, #48]
  4402c4:	add	x29, sp, #0x20
  4402c8:	ldr	x8, [x8, #56]
  4402cc:	str	x8, [x0, #144]
  4402d0:	madd	x1, x8, x10, x9
  4402d4:	add	x0, sp, #0x8
  4402d8:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  4402dc:	str	w0, [x29, #28]
  4402e0:	cbnz	w0, 4404b8 <_obstack_memory_used@@Base+0x2258>
  4402e4:	ldr	x8, [x19, #152]
  4402e8:	cmp	x8, #0x1
  4402ec:	b.lt	4403fc <_obstack_memory_used@@Base+0x219c>  // b.tstop
  4402f0:	ldr	x8, [sp, #16]
  4402f4:	cmp	x8, #0x1
  4402f8:	b.lt	4403fc <_obstack_memory_used@@Base+0x219c>  // b.tstop
  4402fc:	mov	x22, xzr
  440300:	mov	w23, #0x18                  	// #24
  440304:	ldr	x10, [sp, #24]
  440308:	ldr	x11, [x19]
  44030c:	ldr	x9, [x10, x22, lsl #3]
  440310:	add	x12, x11, x9, lsl #4
  440314:	ldrb	w12, [x12, #8]
  440318:	cmp	w12, #0x4
  44031c:	b.ne	440370 <_obstack_memory_used@@Base+0x2110>  // b.any
  440320:	cmp	x8, #0x1
  440324:	b.lt	4403ac <_obstack_memory_used@@Base+0x214c>  // b.tstop
  440328:	mov	x12, xzr
  44032c:	add	x13, x11, x9, lsl #4
  440330:	b	440340 <_obstack_memory_used@@Base+0x20e0>
  440334:	add	x12, x12, #0x1
  440338:	cmp	x8, x12
  44033c:	b.eq	440378 <_obstack_memory_used@@Base+0x2118>  // b.none
  440340:	ldr	x14, [x10, x12, lsl #3]
  440344:	add	x15, x11, x14, lsl #4
  440348:	ldrb	w15, [x15, #8]
  44034c:	cmp	w15, #0x9
  440350:	b.ne	440334 <_obstack_memory_used@@Base+0x20d4>  // b.any
  440354:	lsl	x14, x14, #4
  440358:	ldr	x14, [x11, x14]
  44035c:	ldr	x15, [x13]
  440360:	cmp	x14, x15
  440364:	b.ne	440334 <_obstack_memory_used@@Base+0x20d4>  // b.any
  440368:	cmp	x12, x8
  44036c:	b.ne	440384 <_obstack_memory_used@@Base+0x2124>  // b.any
  440370:	mov	w8, #0x4                   	// #4
  440374:	b	4403e0 <_obstack_memory_used@@Base+0x2180>
  440378:	mov	x12, x8
  44037c:	cmp	x12, x8
  440380:	b.eq	440370 <_obstack_memory_used@@Base+0x2110>  // b.none
  440384:	ldr	x8, [x19, #40]
  440388:	add	x0, sp, #0x8
  44038c:	madd	x8, x9, x23, x8
  440390:	ldr	x8, [x8, #16]
  440394:	ldr	x21, [x8]
  440398:	mov	x1, x21
  44039c:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  4403a0:	cbz	x0, 4403bc <_obstack_memory_used@@Base+0x215c>
  4403a4:	mov	w8, wzr
  4403a8:	b	4403e0 <_obstack_memory_used@@Base+0x2180>
  4403ac:	mov	x12, xzr
  4403b0:	cmp	x12, x8
  4403b4:	b.eq	440370 <_obstack_memory_used@@Base+0x2110>  // b.none
  4403b8:	b	440384 <_obstack_memory_used@@Base+0x2124>
  4403bc:	ldr	x8, [x19, #48]
  4403c0:	add	x0, sp, #0x8
  4403c4:	madd	x1, x21, x23, x8
  4403c8:	bl	4449c4 <_obstack_memory_used@@Base+0x6764>
  4403cc:	cmp	w0, #0x0
  4403d0:	cset	w8, ne  // ne = any
  4403d4:	csel	x22, xzr, x22, eq  // eq = none
  4403d8:	csel	w20, w20, w0, eq  // eq = none
  4403dc:	cbz	w0, 4403a4 <_obstack_memory_used@@Base+0x2144>
  4403e0:	orr	w8, w8, #0x4
  4403e4:	cmp	w8, #0x4
  4403e8:	b.ne	440494 <_obstack_memory_used@@Base+0x2234>  // b.any
  4403ec:	ldr	x8, [sp, #16]
  4403f0:	add	x22, x22, #0x1
  4403f4:	cmp	x22, x8
  4403f8:	b.lt	440304 <_obstack_memory_used@@Base+0x20a4>  // b.tstop
  4403fc:	add	x0, x29, #0x1c
  440400:	add	x2, sp, #0x8
  440404:	mov	x1, x19
  440408:	mov	w3, wzr
  44040c:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  440410:	str	x0, [x19, #72]
  440414:	cbz	x0, 4404b0 <_obstack_memory_used@@Base+0x2250>
  440418:	ldrsb	w8, [x0, #104]
  44041c:	tbnz	w8, #31, 44042c <_obstack_memory_used@@Base+0x21cc>
  440420:	stp	x0, x0, [x19, #88]
  440424:	str	x0, [x19, #80]
  440428:	b	440488 <_obstack_memory_used@@Base+0x2228>
  44042c:	add	x0, x29, #0x1c
  440430:	add	x2, sp, #0x8
  440434:	mov	w3, #0x1                   	// #1
  440438:	mov	x1, x19
  44043c:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  440440:	str	x0, [x19, #80]
  440444:	add	x0, x29, #0x1c
  440448:	add	x2, sp, #0x8
  44044c:	mov	w3, #0x2                   	// #2
  440450:	mov	x1, x19
  440454:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  440458:	str	x0, [x19, #88]
  44045c:	add	x0, x29, #0x1c
  440460:	add	x2, sp, #0x8
  440464:	mov	w3, #0x6                   	// #6
  440468:	mov	x1, x19
  44046c:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  440470:	ldr	x8, [x19, #80]
  440474:	str	x0, [x19, #96]
  440478:	cbz	x8, 4404b0 <_obstack_memory_used@@Base+0x2250>
  44047c:	cbz	x0, 4404b0 <_obstack_memory_used@@Base+0x2250>
  440480:	ldr	x8, [x19, #88]
  440484:	cbz	x8, 4404b0 <_obstack_memory_used@@Base+0x2250>
  440488:	ldr	x0, [sp, #24]
  44048c:	bl	4049d0 <free@plt>
  440490:	mov	w20, wzr
  440494:	mov	w0, w20
  440498:	ldp	x20, x19, [sp, #80]
  44049c:	ldp	x22, x21, [sp, #64]
  4404a0:	ldr	x23, [sp, #48]
  4404a4:	ldp	x29, x30, [sp, #32]
  4404a8:	add	sp, sp, #0x60
  4404ac:	ret
  4404b0:	ldr	w20, [x29, #28]
  4404b4:	b	440494 <_obstack_memory_used@@Base+0x2234>
  4404b8:	mov	w20, w0
  4404bc:	b	440494 <_obstack_memory_used@@Base+0x2234>
  4404c0:	and	w8, w4, #0x1
  4404c4:	cmp	x3, #0x0
  4404c8:	strb	w8, [x2, #136]
  4404cc:	cset	w8, ne  // ne = any
  4404d0:	orr	w8, w8, w4
  4404d4:	and	w8, w8, #0x1
  4404d8:	str	x0, [x2]
  4404dc:	stp	x1, x1, [x2, #80]
  4404e0:	str	x3, [x2, #120]
  4404e4:	strb	w8, [x2, #139]
  4404e8:	ldr	w8, [x5, #180]
  4404ec:	str	w8, [x2, #144]
  4404f0:	ldrb	w8, [x5, #176]
  4404f4:	ubfx	w8, w8, #2, #1
  4404f8:	strb	w8, [x2, #137]
  4404fc:	ldrb	w8, [x5, #176]
  440500:	stp	x1, x1, [x2, #96]
  440504:	ubfx	w8, w8, #3, #1
  440508:	strb	w8, [x2, #138]
  44050c:	ret
  440510:	stp	x29, x30, [sp, #-32]!
  440514:	stp	x20, x19, [sp, #16]
  440518:	ldr	w8, [x0, #144]
  44051c:	mov	x19, x0
  440520:	mov	x20, x1
  440524:	mov	x29, sp
  440528:	cmp	w8, #0x2
  44052c:	b.lt	440580 <_obstack_memory_used@@Base+0x2320>  // b.tstop
  440530:	lsr	x8, x20, #61
  440534:	cbnz	x8, 4405b0 <_obstack_memory_used@@Base+0x2350>
  440538:	ldr	x0, [x19, #16]
  44053c:	lsl	x1, x20, #2
  440540:	bl	404730 <realloc@plt>
  440544:	cbz	x0, 4405b0 <_obstack_memory_used@@Base+0x2350>
  440548:	mov	x8, x0
  44054c:	ldr	x0, [x19, #24]
  440550:	str	x8, [x19, #16]
  440554:	cbz	x0, 440570 <_obstack_memory_used@@Base+0x2310>
  440558:	lsl	x1, x20, #3
  44055c:	bl	404730 <realloc@plt>
  440560:	cbz	x0, 4405b8 <_obstack_memory_used@@Base+0x2358>
  440564:	mov	w8, wzr
  440568:	str	x0, [x19, #24]
  44056c:	cbnz	w8, 440574 <_obstack_memory_used@@Base+0x2314>
  440570:	mov	w8, wzr
  440574:	cbz	w8, 440580 <_obstack_memory_used@@Base+0x2320>
  440578:	mov	w0, #0xc                   	// #12
  44057c:	b	4405a4 <_obstack_memory_used@@Base+0x2344>
  440580:	ldrb	w8, [x19, #139]
  440584:	cbz	w8, 44059c <_obstack_memory_used@@Base+0x233c>
  440588:	ldr	x0, [x19, #8]
  44058c:	mov	x1, x20
  440590:	bl	404730 <realloc@plt>
  440594:	cbz	x0, 440578 <_obstack_memory_used@@Base+0x2318>
  440598:	str	x0, [x19, #8]
  44059c:	mov	w0, wzr
  4405a0:	str	x20, [x19, #64]
  4405a4:	ldp	x20, x19, [sp, #16]
  4405a8:	ldp	x29, x30, [sp], #32
  4405ac:	ret
  4405b0:	mov	w8, #0x1                   	// #1
  4405b4:	b	440574 <_obstack_memory_used@@Base+0x2314>
  4405b8:	mov	w8, #0x1                   	// #1
  4405bc:	cbnz	w8, 440574 <_obstack_memory_used@@Base+0x2314>
  4405c0:	b	440570 <_obstack_memory_used@@Base+0x2310>
  4405c4:	sub	sp, sp, #0xb0
  4405c8:	stp	x29, x30, [sp, #80]
  4405cc:	stp	x28, x27, [sp, #96]
  4405d0:	stp	x26, x25, [sp, #112]
  4405d4:	stp	x24, x23, [sp, #128]
  4405d8:	stp	x22, x21, [sp, #144]
  4405dc:	stp	x20, x19, [sp, #160]
  4405e0:	ldr	x8, [x0, #64]
  4405e4:	ldr	x9, [x0, #88]
  4405e8:	ldrb	w10, [x0, #138]
  4405ec:	ldr	x27, [x0, #48]
  4405f0:	mov	x19, x0
  4405f4:	cmp	x8, x9
  4405f8:	csel	x26, x9, x8, gt
  4405fc:	add	x29, sp, #0x50
  440600:	cbnz	w10, 440614 <_obstack_memory_used@@Base+0x23b4>
  440604:	ldr	x8, [x19, #120]
  440608:	cbnz	x8, 440614 <_obstack_memory_used@@Base+0x23b4>
  44060c:	ldrb	w8, [x19, #140]
  440610:	cbz	w8, 44061c <_obstack_memory_used@@Base+0x23bc>
  440614:	ldr	x25, [x19, #56]
  440618:	b	440828 <_obstack_memory_used@@Base+0x25c8>
  44061c:	cmp	x26, x27
  440620:	b.le	440818 <_obstack_memory_used@@Base+0x25b8>
  440624:	adrp	x23, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  440628:	add	x20, x19, #0x20
  44062c:	add	x23, x23, #0x251
  440630:	mov	x28, x26
  440634:	ldr	x21, [x19, #40]
  440638:	ldr	x22, [x19]
  44063c:	add	x8, x21, x27
  440640:	ldrsb	w24, [x22, x8]
  440644:	tbnz	w24, #31, 440684 <_obstack_memory_used@@Base+0x2424>
  440648:	mov	x0, x20
  44064c:	bl	404890 <mbsinit@plt>
  440650:	cbz	w0, 440684 <_obstack_memory_used@@Base+0x2424>
  440654:	and	x21, x24, #0xff
  440658:	bl	404740 <__ctype_toupper_loc@plt>
  44065c:	ldr	x8, [x0]
  440660:	ldr	x9, [x19, #8]
  440664:	ldr	w8, [x8, x21, lsl #2]
  440668:	strb	w8, [x9, x27]
  44066c:	ldp	x8, x9, [x19, #8]
  440670:	ldrb	w8, [x8, x27]
  440674:	str	w8, [x9, x27, lsl #2]
  440678:	add	x27, x27, #0x1
  44067c:	mov	w8, #0x2                   	// #2
  440680:	b	4407f4 <_obstack_memory_used@@Base+0x2594>
  440684:	ldr	x8, [x20]
  440688:	add	x9, x22, x21
  44068c:	sub	x2, x26, x27
  440690:	add	x1, x9, x27
  440694:	add	x0, sp, #0x4
  440698:	mov	x3, x20
  44069c:	stur	x8, [x29, #-8]
  4406a0:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  4406a4:	sub	x24, x0, #0x1
  4406a8:	mov	x21, x0
  4406ac:	cmn	x24, #0x4
  4406b0:	b.hi	440730 <_obstack_memory_used@@Base+0x24d0>  // b.pmore
  4406b4:	ldr	w0, [sp, #4]
  4406b8:	bl	404c90 <towupper@plt>
  4406bc:	ldr	w8, [sp, #4]
  4406c0:	mov	w22, w0
  4406c4:	cmp	w0, w8
  4406c8:	b.ne	4406ec <_obstack_memory_used@@Base+0x248c>  // b.any
  4406cc:	ldp	x9, x8, [x19]
  4406d0:	ldr	x10, [x19, #40]
  4406d4:	mov	x2, x21
  4406d8:	add	x0, x8, x27
  4406dc:	add	x8, x9, x10
  4406e0:	add	x1, x8, x27
  4406e4:	bl	404110 <memcpy@plt>
  4406e8:	b	4407a4 <_obstack_memory_used@@Base+0x2544>
  4406ec:	add	x0, sp, #0x8
  4406f0:	sub	x2, x29, #0x8
  4406f4:	mov	w1, w22
  4406f8:	bl	404e20 <wcrtomb@plt>
  4406fc:	cmp	x21, x0
  440700:	b.ne	440798 <_obstack_memory_used@@Base+0x2538>  // b.any
  440704:	ldr	x8, [x19, #8]
  440708:	add	x1, sp, #0x8
  44070c:	mov	x2, x21
  440710:	add	x0, x8, x27
  440714:	bl	404110 <memcpy@plt>
  440718:	mov	w8, wzr
  44071c:	cbz	w8, 4407a4 <_obstack_memory_used@@Base+0x2544>
  440720:	mov	x26, x27
  440724:	mov	x27, x26
  440728:	cbnz	w8, 4407f4 <_obstack_memory_used@@Base+0x2594>
  44072c:	b	4407ec <_obstack_memory_used@@Base+0x258c>
  440730:	add	x8, x21, #0x1
  440734:	cmp	x8, #0x2
  440738:	b.cs	440770 <_obstack_memory_used@@Base+0x2510>  // b.hs, b.nlast
  44073c:	ldr	x8, [x19, #40]
  440740:	ldp	x9, x10, [x19]
  440744:	add	x26, x27, #0x1
  440748:	cmn	x21, #0x1
  44074c:	add	x8, x8, x27
  440750:	ldrb	w8, [x9, x8]
  440754:	strb	w8, [x10, x27]
  440758:	ldr	x9, [x19, #16]
  44075c:	str	w8, [x9, x27, lsl #2]
  440760:	b.ne	4407ec <_obstack_memory_used@@Base+0x258c>  // b.any
  440764:	ldur	x8, [x29, #-8]
  440768:	str	x8, [x20]
  44076c:	b	4407ec <_obstack_memory_used@@Base+0x258c>
  440770:	cmn	x21, #0x2
  440774:	b.ne	440788 <_obstack_memory_used@@Base+0x2528>  // b.any
  440778:	ldr	x8, [x19, #64]
  44077c:	ldr	x9, [x19, #88]
  440780:	cmp	x8, x9
  440784:	b.ge	44073c <_obstack_memory_used@@Base+0x24dc>  // b.tcont
  440788:	ldur	x8, [x29, #-8]
  44078c:	str	x8, [x20]
  440790:	mov	w8, #0x3                   	// #3
  440794:	b	4407f4 <_obstack_memory_used@@Base+0x2594>
  440798:	mov	w8, #0x4                   	// #4
  44079c:	mov	x25, x27
  4407a0:	cbnz	w8, 440720 <_obstack_memory_used@@Base+0x24c0>
  4407a4:	ldr	x8, [x19, #16]
  4407a8:	add	x9, x21, x27
  4407ac:	add	x26, x27, #0x1
  4407b0:	cmp	x26, x9
  4407b4:	str	w22, [x8, x27, lsl #2]
  4407b8:	b.ge	4407e0 <_obstack_memory_used@@Base+0x2580>  // b.tcont
  4407bc:	add	x8, x8, x27, lsl #2
  4407c0:	lsl	x9, x21, #2
  4407c4:	add	x0, x8, #0x4
  4407c8:	sub	x2, x9, #0x4
  4407cc:	mov	w1, #0xff                  	// #255
  4407d0:	bl	404600 <memset@plt>
  4407d4:	subs	x24, x24, #0x1
  4407d8:	add	x26, x26, #0x1
  4407dc:	b.ne	4407d4 <_obstack_memory_used@@Base+0x2574>  // b.any
  4407e0:	mov	w8, wzr
  4407e4:	mov	x27, x26
  4407e8:	cbnz	w8, 4407f4 <_obstack_memory_used@@Base+0x2594>
  4407ec:	mov	w8, wzr
  4407f0:	mov	x27, x26
  4407f4:	cmp	w8, #0x4
  4407f8:	b.hi	440824 <_obstack_memory_used@@Base+0x25c4>  // b.pmore
  4407fc:	adr	x9, 440810 <_obstack_memory_used@@Base+0x25b0>
  440800:	ldrb	w10, [x23, x8]
  440804:	add	x9, x9, x10, lsl #2
  440808:	mov	x26, x28
  44080c:	br	x9
  440810:	cmp	x26, x27
  440814:	b.gt	440634 <_obstack_memory_used@@Base+0x23d4>
  440818:	mov	w0, wzr
  44081c:	stp	x27, x27, [x19, #48]
  440820:	b	440954 <_obstack_memory_used@@Base+0x26f4>
  440824:	b	440954 <_obstack_memory_used@@Base+0x26f4>
  440828:	cmp	x27, x26
  44082c:	b.ge	440944 <_obstack_memory_used@@Base+0x26e4>  // b.tcont
  440830:	mov	x22, x19
  440834:	ldr	x8, [x22, #32]!
  440838:	sub	x2, x26, x27
  44083c:	stur	x8, [x29, #-8]
  440840:	ldr	x8, [x22, #88]
  440844:	cbnz	x8, 440974 <_obstack_memory_used@@Base+0x2714>
  440848:	ldr	x8, [x19]
  44084c:	ldr	x9, [x19, #40]
  440850:	add	x8, x8, x9
  440854:	add	x24, x8, x25
  440858:	mov	x0, sp
  44085c:	mov	x1, x24
  440860:	mov	x3, x22
  440864:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  440868:	sub	x28, x0, #0x1
  44086c:	mov	x20, x0
  440870:	cmn	x28, #0x4
  440874:	b.hi	4409cc <_obstack_memory_used@@Base+0x276c>  // b.pmore
  440878:	ldr	w0, [sp]
  44087c:	bl	404c90 <towupper@plt>
  440880:	ldr	w8, [sp]
  440884:	mov	w21, w0
  440888:	cmp	w0, w8
  44088c:	b.ne	4408a8 <_obstack_memory_used@@Base+0x2648>  // b.any
  440890:	ldr	x8, [x19, #8]
  440894:	mov	x1, x24
  440898:	mov	x2, x20
  44089c:	add	x0, x8, x27
  4408a0:	bl	404110 <memcpy@plt>
  4408a4:	b	4408dc <_obstack_memory_used@@Base+0x267c>
  4408a8:	add	x0, sp, #0x8
  4408ac:	sub	x2, x29, #0x8
  4408b0:	mov	w1, w21
  4408b4:	bl	404e20 <wcrtomb@plt>
  4408b8:	subs	x9, x0, x20
  4408bc:	b.ne	440a38 <_obstack_memory_used@@Base+0x27d8>  // b.any
  4408c0:	ldr	x8, [x19, #8]
  4408c4:	add	x1, sp, #0x8
  4408c8:	add	x0, x8, x27
  4408cc:	mov	x2, x20
  4408d0:	bl	404110 <memcpy@plt>
  4408d4:	mov	w8, wzr
  4408d8:	cbnz	wzr, 440930 <_obstack_memory_used@@Base+0x26d0>
  4408dc:	ldrb	w8, [x19, #140]
  4408e0:	cbz	w8, 4408e8 <_obstack_memory_used@@Base+0x2688>
  4408e4:	cbnz	x20, 440a68 <_obstack_memory_used@@Base+0x2808>
  4408e8:	ldr	x8, [x19, #16]
  4408ec:	add	x9, x27, x20
  4408f0:	add	x22, x27, #0x1
  4408f4:	add	x25, x25, x20
  4408f8:	cmp	x22, x9
  4408fc:	str	w21, [x8, x27, lsl #2]
  440900:	b.ge	440928 <_obstack_memory_used@@Base+0x26c8>  // b.tcont
  440904:	add	x8, x8, x27, lsl #2
  440908:	lsl	x9, x20, #2
  44090c:	add	x0, x8, #0x4
  440910:	sub	x2, x9, #0x4
  440914:	mov	w1, #0xff                  	// #255
  440918:	bl	404600 <memset@plt>
  44091c:	subs	x28, x28, #0x1
  440920:	add	x22, x22, #0x1
  440924:	b.ne	44091c <_obstack_memory_used@@Base+0x26bc>  // b.any
  440928:	mov	w8, wzr
  44092c:	mov	x27, x22
  440930:	cbz	w8, 440828 <_obstack_memory_used@@Base+0x25c8>
  440934:	cmp	w8, #0x8
  440938:	b.eq	440828 <_obstack_memory_used@@Base+0x25c8>  // b.none
  44093c:	cmp	w8, #0x7
  440940:	b.ne	440950 <_obstack_memory_used@@Base+0x26f0>  // b.any
  440944:	mov	w0, wzr
  440948:	stp	x27, x25, [x19, #48]
  44094c:	b	440954 <_obstack_memory_used@@Base+0x26f4>
  440950:	mov	w0, #0xc                   	// #12
  440954:	ldp	x20, x19, [sp, #160]
  440958:	ldp	x22, x21, [sp, #144]
  44095c:	ldp	x24, x23, [sp, #128]
  440960:	ldp	x26, x25, [sp, #112]
  440964:	ldp	x28, x27, [sp, #96]
  440968:	ldp	x29, x30, [sp, #80]
  44096c:	add	sp, sp, #0xb0
  440970:	ret
  440974:	ldr	w9, [x19, #144]
  440978:	add	x24, sp, #0x8
  44097c:	cmp	w9, #0x1
  440980:	b.lt	440858 <_obstack_memory_used@@Base+0x25f8>  // b.tstop
  440984:	cmp	x2, #0x1
  440988:	b.lt	440858 <_obstack_memory_used@@Base+0x25f8>  // b.tstop
  44098c:	ldr	x11, [x19, #40]
  440990:	ldr	x12, [x19]
  440994:	ldrsw	x10, [x19, #144]
  440998:	mov	x9, xzr
  44099c:	add	x11, x25, x11
  4409a0:	add	x11, x12, x11
  4409a4:	ldrb	w12, [x11, x9]
  4409a8:	add	x24, sp, #0x8
  4409ac:	ldrb	w12, [x8, x12]
  4409b0:	strb	w12, [x24, x9]
  4409b4:	add	x9, x9, #0x1
  4409b8:	cmp	x9, x10
  4409bc:	b.ge	440858 <_obstack_memory_used@@Base+0x25f8>  // b.tcont
  4409c0:	cmp	x2, x9
  4409c4:	b.gt	4409a4 <_obstack_memory_used@@Base+0x2744>
  4409c8:	b	440858 <_obstack_memory_used@@Base+0x25f8>
  4409cc:	add	x8, x20, #0x1
  4409d0:	cmp	x8, #0x2
  4409d4:	b.cc	4409f0 <_obstack_memory_used@@Base+0x2790>  // b.lo, b.ul, b.last
  4409d8:	cmn	x20, #0x2
  4409dc:	b.ne	440b80 <_obstack_memory_used@@Base+0x2920>  // b.any
  4409e0:	ldr	x8, [x19, #64]
  4409e4:	ldr	x9, [x19, #88]
  4409e8:	cmp	x8, x9
  4409ec:	b.lt	440b80 <_obstack_memory_used@@Base+0x2920>  // b.tstop
  4409f0:	ldr	x8, [x19, #40]
  4409f4:	ldr	x10, [x19]
  4409f8:	ldr	x9, [x19, #120]
  4409fc:	add	x8, x8, x25
  440a00:	ldrb	w8, [x10, x8]
  440a04:	cbnz	x9, 440b98 <_obstack_memory_used@@Base+0x2938>
  440a08:	ldr	x9, [x19, #8]
  440a0c:	strb	w8, [x9, x27]
  440a10:	ldrb	w9, [x19, #140]
  440a14:	cbnz	w9, 440ba0 <_obstack_memory_used@@Base+0x2940>
  440a18:	ldr	x10, [x19, #16]
  440a1c:	add	x25, x25, #0x1
  440a20:	add	x9, x27, #0x1
  440a24:	cmn	x20, #0x1
  440a28:	str	w8, [x10, x27, lsl #2]
  440a2c:	b.eq	440bac <_obstack_memory_used@@Base+0x294c>  // b.none
  440a30:	mov	x27, x9
  440a34:	b	440828 <_obstack_memory_used@@Base+0x25c8>
  440a38:	mov	x23, x0
  440a3c:	cmn	x0, #0x1
  440a40:	b.eq	440a8c <_obstack_memory_used@@Base+0x282c>  // b.none
  440a44:	ldr	x8, [x19, #64]
  440a48:	add	x24, x23, x27
  440a4c:	cmp	x24, x8
  440a50:	b.ls	440a98 <_obstack_memory_used@@Base+0x2838>  // b.plast
  440a54:	ldur	x8, [x29, #-8]
  440a58:	str	x8, [x22]
  440a5c:	mov	w8, #0x7                   	// #7
  440a60:	cbnz	w8, 440930 <_obstack_memory_used@@Base+0x26d0>
  440a64:	b	4408dc <_obstack_memory_used@@Base+0x267c>
  440a68:	ldr	x8, [x19, #24]
  440a6c:	mov	x9, x25
  440a70:	mov	x10, x20
  440a74:	add	x8, x8, x27, lsl #3
  440a78:	str	x9, [x8], #8
  440a7c:	subs	x10, x10, #0x1
  440a80:	add	x9, x9, #0x1
  440a84:	b.ne	440a78 <_obstack_memory_used@@Base+0x2818>  // b.any
  440a88:	b	4408e8 <_obstack_memory_used@@Base+0x2688>
  440a8c:	ldr	x8, [x19, #8]
  440a90:	mov	x1, x24
  440a94:	b	4408c8 <_obstack_memory_used@@Base+0x2668>
  440a98:	mov	x22, x9
  440a9c:	ldr	x9, [x19, #24]
  440aa0:	cbnz	x9, 440ab4 <_obstack_memory_used@@Base+0x2854>
  440aa4:	lsl	x0, x8, #3
  440aa8:	bl	4044f0 <malloc@plt>
  440aac:	str	x0, [x19, #24]
  440ab0:	cbz	x0, 440b8c <_obstack_memory_used@@Base+0x292c>
  440ab4:	ldrb	w8, [x19, #140]
  440ab8:	cbnz	w8, 440ae0 <_obstack_memory_used@@Base+0x2880>
  440abc:	cbz	x27, 440ad8 <_obstack_memory_used@@Base+0x2878>
  440ac0:	ldr	x8, [x19, #24]
  440ac4:	mov	x9, xzr
  440ac8:	str	x9, [x8, x9, lsl #3]
  440acc:	add	x9, x9, #0x1
  440ad0:	cmp	x27, x9
  440ad4:	b.ne	440ac8 <_obstack_memory_used@@Base+0x2868>  // b.any
  440ad8:	mov	w8, #0x1                   	// #1
  440adc:	strb	w8, [x19, #140]
  440ae0:	ldr	x8, [x19, #8]
  440ae4:	add	x1, sp, #0x8
  440ae8:	mov	x2, x23
  440aec:	add	x0, x8, x27
  440af0:	bl	404110 <memcpy@plt>
  440af4:	ldr	x8, [x19, #16]
  440af8:	cmp	x23, #0x2
  440afc:	mov	x13, x25
  440b00:	str	w21, [x8, x27, lsl #2]
  440b04:	ldr	x9, [x19, #24]
  440b08:	str	x25, [x9, x27, lsl #3]
  440b0c:	b.cc	440b40 <_obstack_memory_used@@Base+0x28e0>  // b.lo, b.ul, b.last
  440b10:	add	x8, x8, x27, lsl #2
  440b14:	add	x9, x9, x27, lsl #3
  440b18:	mov	w10, #0x1                   	// #1
  440b1c:	mov	w11, #0xffffffff            	// #-1
  440b20:	cmp	x10, x20
  440b24:	csel	x12, x10, x28, cc  // cc = lo, ul, last
  440b28:	add	x12, x12, x13
  440b2c:	str	x12, [x9, x10, lsl #3]
  440b30:	str	w11, [x8, x10, lsl #2]
  440b34:	add	x10, x10, #0x1
  440b38:	cmp	x23, x10
  440b3c:	b.ne	440b20 <_obstack_memory_used@@Base+0x28c0>  // b.any
  440b40:	ldp	x8, x9, [x19, #88]
  440b44:	add	x8, x8, x22
  440b48:	cmp	x9, x13
  440b4c:	str	x8, [x19, #88]
  440b50:	b.le	440b60 <_obstack_memory_used@@Base+0x2900>
  440b54:	ldr	x9, [x19, #104]
  440b58:	add	x9, x9, x22
  440b5c:	str	x9, [x19, #104]
  440b60:	ldr	x9, [x19, #64]
  440b64:	add	x25, x20, x25
  440b68:	mov	x27, x24
  440b6c:	cmp	x9, x8
  440b70:	csel	x26, x8, x9, gt
  440b74:	mov	w8, #0x8                   	// #8
  440b78:	cbnz	w8, 440930 <_obstack_memory_used@@Base+0x26d0>
  440b7c:	b	4408dc <_obstack_memory_used@@Base+0x267c>
  440b80:	ldur	x8, [x29, #-8]
  440b84:	str	x8, [x22]
  440b88:	b	440944 <_obstack_memory_used@@Base+0x26e4>
  440b8c:	mov	w8, #0x1                   	// #1
  440b90:	cbnz	w8, 440930 <_obstack_memory_used@@Base+0x26d0>
  440b94:	b	4408dc <_obstack_memory_used@@Base+0x267c>
  440b98:	ldrb	w8, [x9, x8]
  440b9c:	b	440a08 <_obstack_memory_used@@Base+0x27a8>
  440ba0:	ldr	x9, [x19, #24]
  440ba4:	str	x25, [x9, x27, lsl #3]
  440ba8:	b	440a18 <_obstack_memory_used@@Base+0x27b8>
  440bac:	ldur	x8, [x29, #-8]
  440bb0:	mov	x27, x9
  440bb4:	str	x8, [x22]
  440bb8:	b	440828 <_obstack_memory_used@@Base+0x25c8>
  440bbc:	stp	x29, x30, [sp, #-48]!
  440bc0:	stp	x20, x19, [sp, #32]
  440bc4:	ldr	x8, [x0, #64]
  440bc8:	ldr	x9, [x0, #88]
  440bcc:	ldr	x20, [x0, #48]
  440bd0:	str	x21, [sp, #16]
  440bd4:	mov	x19, x0
  440bd8:	cmp	x8, x9
  440bdc:	csel	x21, x9, x8, gt
  440be0:	mov	x29, sp
  440be4:	cmp	x20, x21
  440be8:	b.ge	440c28 <_obstack_memory_used@@Base+0x29c8>  // b.tcont
  440bec:	ldr	x8, [x19]
  440bf0:	ldr	x9, [x19, #40]
  440bf4:	add	x9, x8, x9
  440bf8:	ldr	x8, [x19, #120]
  440bfc:	ldrb	w0, [x9, x20]
  440c00:	cbnz	x8, 440c20 <_obstack_memory_used@@Base+0x29c0>
  440c04:	bl	404500 <toupper@plt>
  440c08:	ldr	x8, [x19, #8]
  440c0c:	strb	w0, [x8, x20]
  440c10:	add	x20, x20, #0x1
  440c14:	cmp	x20, x21
  440c18:	b.lt	440bec <_obstack_memory_used@@Base+0x298c>  // b.tstop
  440c1c:	b	440c28 <_obstack_memory_used@@Base+0x29c8>
  440c20:	ldrb	w0, [x8, x0]
  440c24:	b	440c04 <_obstack_memory_used@@Base+0x29a4>
  440c28:	stp	x20, x20, [x19, #48]
  440c2c:	ldp	x20, x19, [sp, #32]
  440c30:	ldr	x21, [sp, #16]
  440c34:	ldp	x29, x30, [sp], #48
  440c38:	ret
  440c3c:	sub	sp, sp, #0x90
  440c40:	stp	x29, x30, [sp, #80]
  440c44:	stp	x24, x23, [sp, #96]
  440c48:	stp	x22, x21, [sp, #112]
  440c4c:	stp	x20, x19, [sp, #128]
  440c50:	ldr	x8, [x0, #64]
  440c54:	ldr	x9, [x0, #88]
  440c58:	ldr	x23, [x0, #48]
  440c5c:	mov	x19, x0
  440c60:	add	x20, x0, #0x20
  440c64:	cmp	x8, x9
  440c68:	csel	x22, x9, x8, gt
  440c6c:	add	x29, sp, #0x50
  440c70:	b	440c80 <_obstack_memory_used@@Base+0x2a20>
  440c74:	mov	w8, #0x1                   	// #1
  440c78:	mov	x23, x24
  440c7c:	tbz	w8, #0, 440dc4 <_obstack_memory_used@@Base+0x2b64>
  440c80:	subs	x2, x22, x23
  440c84:	b.le	440dc4 <_obstack_memory_used@@Base+0x2b64>
  440c88:	ldr	x8, [x19, #120]
  440c8c:	ldr	x24, [x19, #32]
  440c90:	cbnz	x8, 440d54 <_obstack_memory_used@@Base+0x2af4>
  440c94:	ldr	x8, [x19]
  440c98:	ldr	x9, [x19, #40]
  440c9c:	add	x8, x8, x9
  440ca0:	add	x1, x8, x23
  440ca4:	add	x0, sp, #0xc
  440ca8:	mov	x3, x20
  440cac:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  440cb0:	add	x8, x0, #0x1
  440cb4:	cmp	x8, #0x2
  440cb8:	b.cc	440ce8 <_obstack_memory_used@@Base+0x2a88>  // b.lo, b.ul, b.last
  440cbc:	mov	x21, x0
  440cc0:	cmn	x0, #0x2
  440cc4:	b.ne	440d0c <_obstack_memory_used@@Base+0x2aac>  // b.any
  440cc8:	ldr	x8, [x19, #64]
  440ccc:	ldr	x9, [x19, #88]
  440cd0:	cmp	x8, x9
  440cd4:	b.ge	440ce8 <_obstack_memory_used@@Base+0x2a88>  // b.tcont
  440cd8:	mov	w8, wzr
  440cdc:	str	x24, [x20]
  440ce0:	tbnz	w8, #0, 440c80 <_obstack_memory_used@@Base+0x2a20>
  440ce4:	b	440dc4 <_obstack_memory_used@@Base+0x2b64>
  440ce8:	ldr	x8, [x19, #40]
  440cec:	ldr	x9, [x19]
  440cf0:	add	x8, x8, x23
  440cf4:	ldrb	w8, [x9, x8]
  440cf8:	str	w8, [sp, #12]
  440cfc:	ldr	x9, [x19, #120]
  440d00:	cbnz	x9, 440db8 <_obstack_memory_used@@Base+0x2b58>
  440d04:	mov	w21, #0x1                   	// #1
  440d08:	str	x24, [x20]
  440d0c:	ldr	w9, [sp, #12]
  440d10:	ldr	x8, [x19, #16]
  440d14:	add	x10, x21, x23
  440d18:	add	x24, x23, #0x1
  440d1c:	cmp	x24, x10
  440d20:	str	w9, [x8, x23, lsl #2]
  440d24:	b.ge	440c74 <_obstack_memory_used@@Base+0x2a14>  // b.tcont
  440d28:	add	x8, x8, x23, lsl #2
  440d2c:	lsl	x9, x21, #2
  440d30:	add	x0, x8, #0x4
  440d34:	sub	x2, x9, #0x4
  440d38:	mov	w1, #0xff                  	// #255
  440d3c:	bl	404600 <memset@plt>
  440d40:	sub	x8, x21, #0x1
  440d44:	subs	x8, x8, #0x1
  440d48:	add	x24, x24, #0x1
  440d4c:	b.ne	440d44 <_obstack_memory_used@@Base+0x2ae4>  // b.any
  440d50:	b	440c74 <_obstack_memory_used@@Base+0x2a14>
  440d54:	ldr	w8, [x19, #144]
  440d58:	add	x1, sp, #0x10
  440d5c:	cmp	w8, #0x1
  440d60:	b.lt	440ca4 <_obstack_memory_used@@Base+0x2a44>  // b.tstop
  440d64:	cmp	x2, #0x1
  440d68:	b.lt	440ca4 <_obstack_memory_used@@Base+0x2a44>  // b.tstop
  440d6c:	mov	x8, xzr
  440d70:	ldr	x9, [x19, #40]
  440d74:	ldp	x10, x12, [x19]
  440d78:	ldr	x11, [x19, #120]
  440d7c:	add	x1, sp, #0x10
  440d80:	add	x9, x10, x9
  440d84:	add	x9, x9, x23
  440d88:	ldrb	w9, [x9, x8]
  440d8c:	add	x10, x12, x23
  440d90:	ldrb	w9, [x11, x9]
  440d94:	strb	w9, [x10, x8]
  440d98:	strb	w9, [x1, x8]
  440d9c:	ldr	w9, [x19, #144]
  440da0:	add	x8, x8, #0x1
  440da4:	cmp	w9, w8
  440da8:	b.le	440ca4 <_obstack_memory_used@@Base+0x2a44>
  440dac:	cmp	x2, x8
  440db0:	b.gt	440d70 <_obstack_memory_used@@Base+0x2b10>
  440db4:	b	440ca4 <_obstack_memory_used@@Base+0x2a44>
  440db8:	ldrb	w8, [x9, x8]
  440dbc:	str	w8, [sp, #12]
  440dc0:	b	440d04 <_obstack_memory_used@@Base+0x2aa4>
  440dc4:	stp	x23, x23, [x19, #48]
  440dc8:	ldp	x20, x19, [sp, #128]
  440dcc:	ldp	x22, x21, [sp, #112]
  440dd0:	ldp	x24, x23, [sp, #96]
  440dd4:	ldp	x29, x30, [sp, #80]
  440dd8:	add	sp, sp, #0x90
  440ddc:	ret
  440de0:	ldr	x9, [x0, #64]
  440de4:	ldr	x10, [x0, #88]
  440de8:	ldr	x8, [x0, #48]
  440dec:	cmp	x9, x10
  440df0:	csel	x9, x10, x9, gt
  440df4:	cmp	x8, x9
  440df8:	b.ge	440e24 <_obstack_memory_used@@Base+0x2bc4>  // b.tcont
  440dfc:	ldr	x10, [x0, #40]
  440e00:	ldp	x11, x13, [x0]
  440e04:	ldr	x12, [x0, #120]
  440e08:	add	x10, x11, x10
  440e0c:	ldrb	w10, [x10, x8]
  440e10:	ldrb	w10, [x12, x10]
  440e14:	strb	w10, [x13, x8]
  440e18:	add	x8, x8, #0x1
  440e1c:	cmp	x8, x9
  440e20:	b.lt	440dfc <_obstack_memory_used@@Base+0x2b9c>  // b.tstop
  440e24:	stp	x8, x8, [x0, #48]
  440e28:	ret
  440e2c:	stp	x29, x30, [sp, #-32]!
  440e30:	str	x19, [sp, #16]
  440e34:	mov	x29, sp
  440e38:	mov	x19, x1
  440e3c:	bl	440fc4 <_obstack_memory_used@@Base+0x2d64>
  440e40:	ldr	x8, [x19, #72]
  440e44:	add	x8, x8, w0, sxtw
  440e48:	str	x8, [x19, #72]
  440e4c:	ldr	x19, [sp, #16]
  440e50:	ldp	x29, x30, [sp], #32
  440e54:	ret
  440e58:	sub	sp, sp, #0x70
  440e5c:	stp	x29, x30, [sp, #16]
  440e60:	stp	x28, x27, [sp, #32]
  440e64:	stp	x26, x25, [sp, #48]
  440e68:	stp	x24, x23, [sp, #64]
  440e6c:	stp	x22, x21, [sp, #80]
  440e70:	stp	x20, x19, [sp, #96]
  440e74:	ldr	x25, [x1]
  440e78:	add	x29, sp, #0x10
  440e7c:	mov	x20, x5
  440e80:	mov	x21, x4
  440e84:	ldr	x8, [x25, #168]
  440e88:	mov	x22, x3
  440e8c:	mov	x23, x2
  440e90:	mov	x24, x1
  440e94:	str	x8, [sp, #8]
  440e98:	mov	x26, x0
  440e9c:	bl	4415c0 <_obstack_memory_used@@Base+0x3360>
  440ea0:	mov	x19, x0
  440ea4:	cbnz	x0, 440eb0 <_obstack_memory_used@@Base+0x2c50>
  440ea8:	ldr	w8, [x20]
  440eac:	cbnz	w8, 440f98 <_obstack_memory_used@@Base+0x2d38>
  440eb0:	orr	x27, x22, #0x800000
  440eb4:	b	440ed4 <_obstack_memory_used@@Base+0x2c74>
  440eb8:	mov	x2, xzr
  440ebc:	mov	w3, #0xa                   	// #10
  440ec0:	mov	x0, x25
  440ec4:	mov	x1, x19
  440ec8:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  440ecc:	mov	x19, x0
  440ed0:	cbz	x0, 440f54 <_obstack_memory_used@@Base+0x2cf4>
  440ed4:	ldrb	w8, [x23, #8]
  440ed8:	cmp	w8, #0xa
  440edc:	b.ne	440f5c <_obstack_memory_used@@Base+0x2cfc>  // b.any
  440ee0:	mov	x0, x23
  440ee4:	mov	x1, x26
  440ee8:	mov	x2, x27
  440eec:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  440ef0:	ldrb	w8, [x23, #8]
  440ef4:	orr	w9, w8, #0x8
  440ef8:	cmp	w9, #0xa
  440efc:	b.eq	440eb8 <_obstack_memory_used@@Base+0x2c58>  // b.none
  440f00:	cbz	x21, 440f0c <_obstack_memory_used@@Base+0x2cac>
  440f04:	cmp	w8, #0x9
  440f08:	b.eq	440eb8 <_obstack_memory_used@@Base+0x2c58>  // b.none
  440f0c:	ldr	x8, [sp, #8]
  440f10:	ldr	x28, [x25, #168]
  440f14:	mov	x0, x26
  440f18:	mov	x1, x24
  440f1c:	mov	x2, x23
  440f20:	mov	x3, x22
  440f24:	mov	x4, x21
  440f28:	mov	x5, x20
  440f2c:	str	x8, [x25, #168]
  440f30:	bl	4415c0 <_obstack_memory_used@@Base+0x3360>
  440f34:	mov	x2, x0
  440f38:	cbnz	x0, 440f44 <_obstack_memory_used@@Base+0x2ce4>
  440f3c:	ldr	w8, [x20]
  440f40:	cbnz	w8, 440f80 <_obstack_memory_used@@Base+0x2d20>
  440f44:	ldr	x8, [x25, #168]
  440f48:	orr	x8, x8, x28
  440f4c:	str	x8, [x25, #168]
  440f50:	b	440ebc <_obstack_memory_used@@Base+0x2c5c>
  440f54:	mov	w8, #0xc                   	// #12
  440f58:	str	w8, [x20]
  440f5c:	mov	x0, x19
  440f60:	ldp	x20, x19, [sp, #96]
  440f64:	ldp	x22, x21, [sp, #80]
  440f68:	ldp	x24, x23, [sp, #64]
  440f6c:	ldp	x26, x25, [sp, #48]
  440f70:	ldp	x28, x27, [sp, #32]
  440f74:	ldp	x29, x30, [sp, #16]
  440f78:	add	sp, sp, #0x70
  440f7c:	ret
  440f80:	cbz	x19, 440f5c <_obstack_memory_used@@Base+0x2cfc>
  440f84:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x2da0>
  440f88:	add	x1, x1, #0x7ac
  440f8c:	mov	x0, x19
  440f90:	mov	x2, xzr
  440f94:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  440f98:	mov	x19, xzr
  440f9c:	b	440f5c <_obstack_memory_used@@Base+0x2cfc>
  440fa0:	sub	sp, sp, #0x20
  440fa4:	strb	w3, [sp, #8]
  440fa8:	mov	x3, sp
  440fac:	stp	x29, x30, [sp, #16]
  440fb0:	add	x29, sp, #0x10
  440fb4:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  440fb8:	ldp	x29, x30, [sp, #16]
  440fbc:	add	sp, sp, #0x20
  440fc0:	ret
  440fc4:	sub	sp, sp, #0x60
  440fc8:	stp	x29, x30, [sp, #16]
  440fcc:	stp	x26, x25, [sp, #32]
  440fd0:	stp	x24, x23, [sp, #48]
  440fd4:	stp	x22, x21, [sp, #64]
  440fd8:	stp	x20, x19, [sp, #80]
  440fdc:	ldr	x9, [x1, #104]
  440fe0:	ldr	x8, [x1, #72]
  440fe4:	mov	x19, x0
  440fe8:	add	x29, sp, #0x10
  440fec:	cmp	x9, x8
  440ff0:	b.le	4410cc <_obstack_memory_used@@Base+0x2e6c>
  440ff4:	ldr	x9, [x1, #8]
  440ff8:	mov	x23, x19
  440ffc:	mov	w26, #0xff00                	// #65280
  441000:	mov	x20, x2
  441004:	ldrb	w24, [x9, x8]
  441008:	mov	x21, x1
  44100c:	movk	w26, #0xff9f, lsl #16
  441010:	strb	w24, [x23], #8
  441014:	ldr	w25, [x23]
  441018:	and	w8, w25, #0xff9fffff
  44101c:	str	w8, [x23]
  441020:	ldr	w8, [x1, #144]
  441024:	cmp	w8, #0x2
  441028:	b.lt	44104c <_obstack_memory_used@@Base+0x2dec>  // b.tstop
  44102c:	ldr	x8, [x21, #72]
  441030:	ldr	x9, [x21, #48]
  441034:	cmp	x8, x9
  441038:	b.eq	44104c <_obstack_memory_used@@Base+0x2dec>  // b.none
  44103c:	ldr	x9, [x21, #16]
  441040:	ldr	w8, [x9, x8, lsl #2]
  441044:	cmn	w8, #0x1
  441048:	b.eq	441214 <_obstack_memory_used@@Base+0x2fb4>  // b.none
  44104c:	cmp	w24, #0x5c
  441050:	b.ne	4410dc <_obstack_memory_used@@Base+0x2e7c>  // b.any
  441054:	ldr	x8, [x21, #72]
  441058:	ldr	x9, [x21, #88]
  44105c:	add	x8, x8, #0x1
  441060:	cmp	x8, x9
  441064:	b.ge	44112c <_obstack_memory_used@@Base+0x2ecc>  // b.tcont
  441068:	mov	x0, x21
  44106c:	bl	4414e8 <_obstack_memory_used@@Base+0x3288>
  441070:	and	w8, w25, w26
  441074:	orr	w24, w8, #0x1
  441078:	strb	w0, [x19]
  44107c:	str	w24, [x19, #8]
  441080:	ldr	w8, [x21, #144]
  441084:	mov	w22, w0
  441088:	cmp	w8, #0x2
  44108c:	b.lt	441198 <_obstack_memory_used@@Base+0x2f38>  // b.tstop
  441090:	ldr	x8, [x21, #72]
  441094:	mov	x0, x21
  441098:	add	x1, x8, #0x1
  44109c:	bl	44159c <_obstack_memory_used@@Base+0x333c>
  4410a0:	mov	w21, w0
  4410a4:	bl	404bc0 <iswalnum@plt>
  4410a8:	ldr	w9, [x23]
  4410ac:	cmp	w0, #0x0
  4410b0:	mov	w8, #0x5f                  	// #95
  4410b4:	ccmp	w21, w8, #0x4, eq  // eq = none
  4410b8:	mov	w8, #0x400000              	// #4194304
  4410bc:	csel	w8, w8, wzr, eq  // eq = none
  4410c0:	and	w9, w9, #0xffbfffff
  4410c4:	orr	w8, w8, w9
  4410c8:	b	4411c0 <_obstack_memory_used@@Base+0x2f60>
  4410cc:	mov	w8, #0x2                   	// #2
  4410d0:	mov	w0, wzr
  4410d4:	strb	w8, [x19, #8]
  4410d8:	b	441340 <_obstack_memory_used@@Base+0x30e0>
  4410dc:	and	w8, w25, w26
  4410e0:	orr	w22, w8, #0x1
  4410e4:	str	w22, [x23]
  4410e8:	ldr	w8, [x21, #144]
  4410ec:	cmp	w8, #0x2
  4410f0:	b.lt	441138 <_obstack_memory_used@@Base+0x2ed8>  // b.tstop
  4410f4:	ldr	x1, [x21, #72]
  4410f8:	mov	x0, x21
  4410fc:	bl	44159c <_obstack_memory_used@@Base+0x333c>
  441100:	mov	w22, w0
  441104:	bl	404bc0 <iswalnum@plt>
  441108:	ldr	w9, [x23]
  44110c:	cmp	w0, #0x0
  441110:	mov	w8, #0x5f                  	// #95
  441114:	ccmp	w22, w8, #0x4, eq  // eq = none
  441118:	mov	w8, #0x400000              	// #4194304
  44111c:	csel	w8, w8, wzr, eq  // eq = none
  441120:	and	w9, w9, #0xffbfffff
  441124:	orr	w8, w8, w9
  441128:	b	441164 <_obstack_memory_used@@Base+0x2f04>
  44112c:	and	w8, w25, w26
  441130:	mov	w9, #0x24                  	// #36
  441134:	b	441220 <_obstack_memory_used@@Base+0x2fc0>
  441138:	bl	404950 <__ctype_b_loc@plt>
  44113c:	ldr	x8, [x0]
  441140:	cmp	w24, #0x5f
  441144:	cset	w9, eq  // eq = none
  441148:	ldrh	w8, [x8, x24, lsl #1]
  44114c:	and	w8, w8, #0x8
  441150:	orr	w8, w9, w8, lsr #3
  441154:	cmp	w8, #0x0
  441158:	mov	w8, #0x400000              	// #4194304
  44115c:	csel	w8, w8, wzr, ne  // ne = any
  441160:	orr	w8, w8, w22
  441164:	sub	w9, w24, #0xa
  441168:	cmp	w9, #0x73
  44116c:	mov	w0, #0x1                   	// #1
  441170:	str	w8, [x23]
  441174:	b.hi	441340 <_obstack_memory_used@@Base+0x30e0>  // b.pmore
  441178:	adrp	x10, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44117c:	add	x10, x10, #0x256
  441180:	adr	x11, 441190 <_obstack_memory_used@@Base+0x2f30>
  441184:	ldrb	w12, [x10, x9]
  441188:	add	x11, x11, x12, lsl #2
  44118c:	br	x11
  441190:	tbnz	w20, #11, 441330 <_obstack_memory_used@@Base+0x30d0>
  441194:	b	44133c <_obstack_memory_used@@Base+0x30dc>
  441198:	bl	404950 <__ctype_b_loc@plt>
  44119c:	ldr	x8, [x0]
  4411a0:	and	x9, x22, #0xff
  4411a4:	ldrh	w8, [x8, x9, lsl #1]
  4411a8:	and	w9, w22, #0xff
  4411ac:	cmp	w9, #0x5f
  4411b0:	cset	w9, eq  // eq = none
  4411b4:	ubfx	w8, w8, #3, #1
  4411b8:	orr	w8, w8, w9
  4411bc:	orr	w8, w24, w8, lsl #22
  4411c0:	and	w9, w22, #0xff
  4411c4:	sub	w9, w9, #0x27
  4411c8:	cmp	w9, #0x56
  4411cc:	mov	w0, #0x2                   	// #2
  4411d0:	str	w8, [x23]
  4411d4:	b.hi	441340 <_obstack_memory_used@@Base+0x30e0>  // b.pmore
  4411d8:	adrp	x10, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4411dc:	add	x10, x10, #0x2ca
  4411e0:	adr	x11, 4411f0 <_obstack_memory_used@@Base+0x2f90>
  4411e4:	ldrb	w12, [x10, x9]
  4411e8:	add	x11, x11, x12, lsl #2
  4411ec:	br	x11
  4411f0:	tbnz	w20, #14, 4414e0 <_obstack_memory_used@@Base+0x3280>
  4411f4:	and	x9, x22, #0xff
  4411f8:	and	w8, w8, #0xffffff00
  4411fc:	orr	w8, w8, #0x4
  441200:	sub	x9, x9, #0x31
  441204:	str	w8, [x19, #8]
  441208:	str	x9, [x19]
  44120c:	mov	w0, #0x2                   	// #2
  441210:	b	441340 <_obstack_memory_used@@Base+0x30e0>
  441214:	mov	w9, #0x1                   	// #1
  441218:	and	w8, w25, w26
  44121c:	movk	w9, #0x20, lsl #16
  441220:	orr	w8, w8, w9
  441224:	b	441338 <_obstack_memory_used@@Base+0x30d8>
  441228:	tbnz	w20, #3, 441270 <_obstack_memory_used@@Base+0x3010>
  44122c:	ldr	x8, [x21, #72]
  441230:	ldr	x9, [x21, #88]
  441234:	add	x8, x8, #0x1
  441238:	cmp	x8, x9
  44123c:	b.eq	441270 <_obstack_memory_used@@Base+0x3010>  // b.none
  441240:	mov	x0, sp
  441244:	mov	x1, x21
  441248:	mov	x2, x20
  44124c:	str	x8, [x21, #72]
  441250:	bl	440fc4 <_obstack_memory_used@@Base+0x2d64>
  441254:	ldr	x8, [x21, #72]
  441258:	sub	x8, x8, #0x1
  44125c:	str	x8, [x21, #72]
  441260:	ldrb	w8, [sp, #8]
  441264:	sub	w8, w8, #0x9
  441268:	cmp	w8, #0x1
  44126c:	b.hi	44133c <_obstack_memory_used@@Base+0x30dc>  // b.pmore
  441270:	mov	w8, #0xc                   	// #12
  441274:	mov	w9, #0x20                  	// #32
  441278:	strb	w8, [x19, #8]
  44127c:	str	w9, [x19]
  441280:	b	44133c <_obstack_memory_used@@Base+0x30dc>
  441284:	tbz	w20, #13, 44133c <_obstack_memory_used@@Base+0x30dc>
  441288:	and	w8, w8, #0xffffff00
  44128c:	orr	w8, w8, #0x8
  441290:	b	441338 <_obstack_memory_used@@Base+0x30d8>
  441294:	tbz	w20, #13, 44133c <_obstack_memory_used@@Base+0x30dc>
  441298:	mov	w9, #0x9                   	// #9
  44129c:	b	441334 <_obstack_memory_used@@Base+0x30d4>
  4412a0:	mov	w9, #0xb                   	// #11
  4412a4:	b	441334 <_obstack_memory_used@@Base+0x30d4>
  4412a8:	mov	w9, #0x402                 	// #1026
  4412ac:	tst	x20, x9
  4412b0:	b.ne	44133c <_obstack_memory_used@@Base+0x30dc>  // b.any
  4412b4:	mov	w9, #0x12                  	// #18
  4412b8:	b	441334 <_obstack_memory_used@@Base+0x30d4>
  4412bc:	mov	w9, #0x5                   	// #5
  4412c0:	b	441334 <_obstack_memory_used@@Base+0x30d4>
  4412c4:	mov	w9, #0x402                 	// #1026
  4412c8:	tst	x20, x9
  4412cc:	b.ne	44133c <_obstack_memory_used@@Base+0x30dc>  // b.any
  4412d0:	mov	w9, #0x13                  	// #19
  4412d4:	b	441334 <_obstack_memory_used@@Base+0x30d4>
  4412d8:	mov	w9, #0x14                  	// #20
  4412dc:	b	441334 <_obstack_memory_used@@Base+0x30d4>
  4412e0:	mov	w9, #0x8                   	// #8
  4412e4:	movk	w9, #0x80, lsl #16
  4412e8:	tst	x20, x9
  4412ec:	b.eq	441378 <_obstack_memory_used@@Base+0x3118>  // b.none
  4412f0:	and	w8, w8, #0xffffff00
  4412f4:	mov	w9, #0x10                  	// #16
  4412f8:	orr	w8, w8, #0xc
  4412fc:	str	w9, [x19]
  441300:	str	w8, [x19, #8]
  441304:	b	44133c <_obstack_memory_used@@Base+0x30dc>
  441308:	mvn	w9, w20
  44130c:	mov	w10, #0x1200                	// #4608
  441310:	tst	x9, x10
  441314:	b.ne	44133c <_obstack_memory_used@@Base+0x30dc>  // b.any
  441318:	mov	w9, #0x17                  	// #23
  44131c:	b	441334 <_obstack_memory_used@@Base+0x30d4>
  441320:	mov	w9, #0x8400                	// #33792
  441324:	and	x9, x20, x9
  441328:	cmp	x9, #0x8, lsl #12
  44132c:	b.ne	44133c <_obstack_memory_used@@Base+0x30dc>  // b.any
  441330:	mov	w9, #0xa                   	// #10
  441334:	bfxil	w8, w9, #0, #8
  441338:	str	w8, [x23]
  44133c:	mov	w0, #0x1                   	// #1
  441340:	ldp	x20, x19, [sp, #80]
  441344:	ldp	x22, x21, [sp, #64]
  441348:	ldp	x24, x23, [sp, #48]
  44134c:	ldp	x26, x25, [sp, #32]
  441350:	ldp	x29, x30, [sp, #16]
  441354:	add	sp, sp, #0x60
  441358:	ret
  44135c:	mvn	w9, w20
  441360:	mov	w10, #0x1200                	// #4608
  441364:	tst	x9, x10
  441368:	b.ne	44133c <_obstack_memory_used@@Base+0x30dc>  // b.any
  44136c:	and	w8, w8, #0xffffff00
  441370:	orr	w8, w8, #0x18
  441374:	b	441338 <_obstack_memory_used@@Base+0x30d8>
  441378:	ldr	x9, [x21, #72]
  44137c:	cbz	x9, 4412f0 <_obstack_memory_used@@Base+0x3090>
  441380:	tbz	w20, #11, 44133c <_obstack_memory_used@@Base+0x30dc>
  441384:	ldr	x10, [x21, #8]
  441388:	add	x9, x9, x10
  44138c:	ldurb	w9, [x9, #-1]
  441390:	cmp	w9, #0xa
  441394:	b.eq	4412f0 <_obstack_memory_used@@Base+0x3090>  // b.none
  441398:	b	44133c <_obstack_memory_used@@Base+0x30dc>
  44139c:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  4413a0:	and	w8, w8, #0xffffff00
  4413a4:	mov	w9, #0x80                  	// #128
  4413a8:	b	44145c <_obstack_memory_used@@Base+0x31fc>
  4413ac:	tbnz	w20, #13, 4414e0 <_obstack_memory_used@@Base+0x3280>
  4413b0:	and	w8, w8, #0xffffff00
  4413b4:	orr	w8, w8, #0x8
  4413b8:	b	4414b8 <_obstack_memory_used@@Base+0x3258>
  4413bc:	tbnz	w20, #13, 4414e0 <_obstack_memory_used@@Base+0x3280>
  4413c0:	mov	w9, #0x9                   	// #9
  4413c4:	b	4414b4 <_obstack_memory_used@@Base+0x3254>
  4413c8:	mov	w9, #0x402                 	// #1026
  4413cc:	and	x9, x20, x9
  4413d0:	cmp	x9, #0x2
  4413d4:	b.ne	4414e0 <_obstack_memory_used@@Base+0x3280>  // b.any
  4413d8:	mov	w9, #0x12                  	// #18
  4413dc:	b	4414b4 <_obstack_memory_used@@Base+0x3254>
  4413e0:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  4413e4:	and	w8, w8, #0xffffff00
  4413e8:	mov	w9, #0x6                   	// #6
  4413ec:	b	44145c <_obstack_memory_used@@Base+0x31fc>
  4413f0:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  4413f4:	and	w8, w8, #0xffffff00
  4413f8:	mov	w9, #0x9                   	// #9
  4413fc:	b	44145c <_obstack_memory_used@@Base+0x31fc>
  441400:	mov	w9, #0x402                 	// #1026
  441404:	and	x9, x20, x9
  441408:	cmp	x9, #0x2
  44140c:	b.ne	4414e0 <_obstack_memory_used@@Base+0x3280>  // b.any
  441410:	mov	w9, #0x13                  	// #19
  441414:	b	4414b4 <_obstack_memory_used@@Base+0x3254>
  441418:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  44141c:	and	w8, w8, #0xffffff00
  441420:	mov	w9, #0x200                 	// #512
  441424:	b	44145c <_obstack_memory_used@@Base+0x31fc>
  441428:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  44142c:	mov	w9, #0x23                  	// #35
  441430:	b	4414b4 <_obstack_memory_used@@Base+0x3254>
  441434:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  441438:	mov	w9, #0x21                  	// #33
  44143c:	b	4414b4 <_obstack_memory_used@@Base+0x3254>
  441440:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  441444:	and	w8, w8, #0xffffff00
  441448:	mov	w9, #0x40                  	// #64
  44144c:	b	44145c <_obstack_memory_used@@Base+0x31fc>
  441450:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  441454:	and	w8, w8, #0xffffff00
  441458:	mov	w9, #0x100                 	// #256
  44145c:	orr	w8, w8, #0xc
  441460:	str	w9, [x19]
  441464:	str	w8, [x19, #8]
  441468:	mov	w0, #0x2                   	// #2
  44146c:	b	441340 <_obstack_memory_used@@Base+0x30e0>
  441470:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  441474:	mov	w9, #0x22                  	// #34
  441478:	b	4414b4 <_obstack_memory_used@@Base+0x3254>
  44147c:	tbnz	w20, #19, 4414e0 <_obstack_memory_used@@Base+0x3280>
  441480:	and	w8, w8, #0xffffff00
  441484:	orr	w8, w8, #0x20
  441488:	b	4414b8 <_obstack_memory_used@@Base+0x3258>
  44148c:	mov	w9, #0x1200                	// #4608
  441490:	and	x9, x20, x9
  441494:	cmp	x9, #0x200
  441498:	b.ne	4414e0 <_obstack_memory_used@@Base+0x3280>  // b.any
  44149c:	mov	w9, #0x17                  	// #23
  4414a0:	b	4414b4 <_obstack_memory_used@@Base+0x3254>
  4414a4:	mov	w9, #0x8400                	// #33792
  4414a8:	tst	x20, x9
  4414ac:	b.ne	4414e0 <_obstack_memory_used@@Base+0x3280>  // b.any
  4414b0:	mov	w9, #0xa                   	// #10
  4414b4:	bfxil	w8, w9, #0, #8
  4414b8:	str	w8, [x23]
  4414bc:	mov	w0, #0x2                   	// #2
  4414c0:	b	441340 <_obstack_memory_used@@Base+0x30e0>
  4414c4:	mov	w9, #0x1200                	// #4608
  4414c8:	and	x9, x20, x9
  4414cc:	cmp	x9, #0x200
  4414d0:	b.ne	4414e0 <_obstack_memory_used@@Base+0x3280>  // b.any
  4414d4:	and	w8, w8, #0xffffff00
  4414d8:	orr	w8, w8, #0x18
  4414dc:	b	4414b8 <_obstack_memory_used@@Base+0x3258>
  4414e0:	mov	w0, #0x2                   	// #2
  4414e4:	b	441340 <_obstack_memory_used@@Base+0x30e0>
  4414e8:	ldrb	w8, [x0, #139]
  4414ec:	cbnz	w8, 44150c <_obstack_memory_used@@Base+0x32ac>
  4414f0:	ldr	x8, [x0, #8]
  4414f4:	ldr	x9, [x0, #72]
  4414f8:	add	x8, x9, x8
  4414fc:	add	x8, x8, #0x1
  441500:	ldrb	w8, [x8]
  441504:	mov	w0, w8
  441508:	ret
  44150c:	ldr	w8, [x0, #144]
  441510:	cmp	w8, #0x2
  441514:	b.lt	44154c <_obstack_memory_used@@Base+0x32ec>  // b.tstop
  441518:	ldr	x10, [x0, #72]
  44151c:	ldr	x9, [x0, #16]
  441520:	add	x8, x10, #0x1
  441524:	ldr	w11, [x9, x8, lsl #2]
  441528:	cmn	w11, #0x1
  44152c:	b.eq	441590 <_obstack_memory_used@@Base+0x3330>  // b.none
  441530:	ldr	x11, [x0, #48]
  441534:	add	x10, x10, #0x2
  441538:	cmp	x11, x10
  44153c:	b.eq	44154c <_obstack_memory_used@@Base+0x32ec>  // b.none
  441540:	ldr	w9, [x9, x10, lsl #2]
  441544:	cmn	w9, #0x1
  441548:	b.eq	441590 <_obstack_memory_used@@Base+0x3330>  // b.none
  44154c:	ldr	x8, [x0, #72]
  441550:	ldrb	w10, [x0, #140]
  441554:	add	x9, x8, #0x1
  441558:	cbz	w10, 441568 <_obstack_memory_used@@Base+0x3308>
  44155c:	ldr	x8, [x0, #24]
  441560:	ldr	x8, [x8, x9, lsl #3]
  441564:	b	44156c <_obstack_memory_used@@Base+0x330c>
  441568:	mov	x8, x9
  44156c:	ldr	x11, [x0, #40]
  441570:	ldr	x12, [x0]
  441574:	add	x8, x11, x8
  441578:	ldrsb	w8, [x12, x8]
  44157c:	cbz	w10, 441504 <_obstack_memory_used@@Base+0x32a4>
  441580:	tbz	w8, #31, 441504 <_obstack_memory_used@@Base+0x32a4>
  441584:	ldr	x8, [x0, #8]
  441588:	add	x8, x8, x9
  44158c:	b	441500 <_obstack_memory_used@@Base+0x32a0>
  441590:	ldr	x9, [x0, #8]
  441594:	add	x8, x9, x8
  441598:	b	441500 <_obstack_memory_used@@Base+0x32a0>
  44159c:	ldr	w8, [x0, #144]
  4415a0:	cmp	w8, #0x1
  4415a4:	b.ne	4415b4 <_obstack_memory_used@@Base+0x3354>  // b.any
  4415a8:	ldr	x8, [x0, #8]
  4415ac:	ldrb	w0, [x8, x1]
  4415b0:	ret
  4415b4:	ldr	x8, [x0, #16]
  4415b8:	ldr	w0, [x8, x1, lsl #2]
  4415bc:	ret
  4415c0:	stp	x29, x30, [sp, #-96]!
  4415c4:	stp	x28, x27, [sp, #16]
  4415c8:	stp	x26, x25, [sp, #32]
  4415cc:	stp	x24, x23, [sp, #48]
  4415d0:	stp	x22, x21, [sp, #64]
  4415d4:	stp	x20, x19, [sp, #80]
  4415d8:	ldr	x25, [x1]
  4415dc:	mov	x29, sp
  4415e0:	mov	x20, x5
  4415e4:	mov	x21, x4
  4415e8:	mov	x22, x3
  4415ec:	mov	x23, x2
  4415f0:	mov	x24, x1
  4415f4:	mov	x26, x0
  4415f8:	bl	4417c8 <_obstack_memory_used@@Base+0x3568>
  4415fc:	mov	x19, x0
  441600:	cbnz	x0, 44160c <_obstack_memory_used@@Base+0x33ac>
  441604:	ldr	w8, [x20]
  441608:	cbnz	w8, 4416c8 <_obstack_memory_used@@Base+0x3468>
  44160c:	adrp	x27, 441000 <_obstack_memory_used@@Base+0x2da0>
  441610:	add	x27, x27, #0x7ac
  441614:	b	441620 <_obstack_memory_used@@Base+0x33c0>
  441618:	cmp	x19, #0x0
  44161c:	csel	x19, x28, x19, eq  // eq = none
  441620:	ldrb	w8, [x23, #8]
  441624:	orr	w9, w8, #0x8
  441628:	cmp	w9, #0xa
  44162c:	b.eq	4416cc <_obstack_memory_used@@Base+0x346c>  // b.none
  441630:	cbz	x21, 44163c <_obstack_memory_used@@Base+0x33dc>
  441634:	cmp	w8, #0x9
  441638:	b.eq	4416cc <_obstack_memory_used@@Base+0x346c>  // b.none
  44163c:	mov	x0, x26
  441640:	mov	x1, x24
  441644:	mov	x2, x23
  441648:	mov	x3, x22
  44164c:	mov	x4, x21
  441650:	mov	x5, x20
  441654:	bl	4417c8 <_obstack_memory_used@@Base+0x3568>
  441658:	mov	x28, x0
  44165c:	cbnz	x0, 441668 <_obstack_memory_used@@Base+0x3408>
  441660:	ldr	w8, [x20]
  441664:	cbnz	w8, 4416ec <_obstack_memory_used@@Base+0x348c>
  441668:	cbz	x19, 441618 <_obstack_memory_used@@Base+0x33b8>
  44166c:	cbz	x28, 441618 <_obstack_memory_used@@Base+0x33b8>
  441670:	mov	w3, #0x10                  	// #16
  441674:	mov	x0, x25
  441678:	mov	x1, x19
  44167c:	mov	x2, x28
  441680:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  441684:	cbz	x0, 441698 <_obstack_memory_used@@Base+0x3438>
  441688:	mov	w8, #0x1                   	// #1
  44168c:	mov	x19, x0
  441690:	tbnz	w8, #0, 441620 <_obstack_memory_used@@Base+0x33c0>
  441694:	b	4416c8 <_obstack_memory_used@@Base+0x3468>
  441698:	mov	x0, x28
  44169c:	mov	x1, x27
  4416a0:	mov	x2, xzr
  4416a4:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  4416a8:	mov	x0, x19
  4416ac:	mov	x1, x27
  4416b0:	mov	x2, xzr
  4416b4:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  4416b8:	mov	w8, wzr
  4416bc:	mov	w9, #0xc                   	// #12
  4416c0:	str	w9, [x20]
  4416c4:	tbnz	w8, #0, 441620 <_obstack_memory_used@@Base+0x33c0>
  4416c8:	mov	x19, xzr
  4416cc:	mov	x0, x19
  4416d0:	ldp	x20, x19, [sp, #80]
  4416d4:	ldp	x22, x21, [sp, #64]
  4416d8:	ldp	x24, x23, [sp, #48]
  4416dc:	ldp	x26, x25, [sp, #32]
  4416e0:	ldp	x28, x27, [sp, #16]
  4416e4:	ldp	x29, x30, [sp], #96
  4416e8:	ret
  4416ec:	cbz	x19, 4416cc <_obstack_memory_used@@Base+0x346c>
  4416f0:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x2da0>
  4416f4:	add	x1, x1, #0x7ac
  4416f8:	mov	x0, x19
  4416fc:	mov	x2, xzr
  441700:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  441704:	b	4416c8 <_obstack_memory_used@@Base+0x3468>
  441708:	stp	x29, x30, [sp, #-64]!
  44170c:	stp	x20, x19, [sp, #48]
  441710:	mov	x19, x2
  441714:	mov	x20, x1
  441718:	str	x23, [sp, #16]
  44171c:	stp	x22, x21, [sp, #32]
  441720:	mov	x29, sp
  441724:	mov	x22, x0
  441728:	ldr	x0, [x0, #8]
  44172c:	cbnz	x0, 441724 <_obstack_memory_used@@Base+0x34c4>
  441730:	ldr	x8, [x22, #16]
  441734:	cbz	x8, 441754 <_obstack_memory_used@@Base+0x34f4>
  441738:	cbnz	x0, 441724 <_obstack_memory_used@@Base+0x34c4>
  44173c:	ldr	x0, [x22, #16]
  441740:	b	441724 <_obstack_memory_used@@Base+0x34c4>
  441744:	mov	w8, wzr
  441748:	mov	w21, w0
  44174c:	cbnz	w8, 441780 <_obstack_memory_used@@Base+0x3520>
  441750:	b	441794 <_obstack_memory_used@@Base+0x3534>
  441754:	mov	x0, x19
  441758:	mov	x1, x22
  44175c:	blr	x20
  441760:	cbnz	w0, 441744 <_obstack_memory_used@@Base+0x34e4>
  441764:	ldr	x9, [x22]
  441768:	cmp	x9, #0x0
  44176c:	cset	w8, ne  // ne = any
  441770:	csel	x23, x23, x22, eq  // eq = none
  441774:	csel	x22, x22, x9, eq  // eq = none
  441778:	csel	w21, wzr, w21, eq  // eq = none
  44177c:	cbz	w8, 441794 <_obstack_memory_used@@Base+0x3534>
  441780:	ldr	x0, [x22, #16]
  441784:	cmp	x0, x23
  441788:	b.eq	441754 <_obstack_memory_used@@Base+0x34f4>  // b.none
  44178c:	cbz	x0, 441754 <_obstack_memory_used@@Base+0x34f4>
  441790:	b	441724 <_obstack_memory_used@@Base+0x34c4>
  441794:	mov	w0, w21
  441798:	ldp	x20, x19, [sp, #48]
  44179c:	ldp	x22, x21, [sp, #32]
  4417a0:	ldr	x23, [sp, #16]
  4417a4:	ldp	x29, x30, [sp], #64
  4417a8:	ret
  4417ac:	stp	x29, x30, [sp, #-16]!
  4417b0:	add	x0, x1, #0x28
  4417b4:	mov	x29, sp
  4417b8:	bl	43f9bc <_obstack_memory_used@@Base+0x175c>
  4417bc:	mov	w0, wzr
  4417c0:	ldp	x29, x30, [sp], #16
  4417c4:	ret
  4417c8:	stp	x29, x30, [sp, #-96]!
  4417cc:	stp	x28, x27, [sp, #16]
  4417d0:	stp	x26, x25, [sp, #32]
  4417d4:	stp	x24, x23, [sp, #48]
  4417d8:	stp	x22, x21, [sp, #64]
  4417dc:	stp	x20, x19, [sp, #80]
  4417e0:	ldr	w8, [x2, #8]
  4417e4:	mov	x24, xzr
  4417e8:	mov	x29, sp
  4417ec:	and	w9, w8, #0xff
  4417f0:	sub	w9, w9, #0x1
  4417f4:	cmp	w9, #0x23
  4417f8:	b.hi	441ba0 <_obstack_memory_used@@Base+0x3940>  // b.pmore
  4417fc:	ldr	x23, [x1]
  441800:	adrp	x10, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  441804:	add	x10, x10, #0x321
  441808:	adr	x11, 441830 <_obstack_memory_used@@Base+0x35d0>
  44180c:	ldrb	w12, [x10, x9]
  441810:	add	x11, x11, x12, lsl #2
  441814:	mov	x19, x5
  441818:	mov	x25, x4
  44181c:	mov	x20, x3
  441820:	mov	x21, x2
  441824:	mov	x26, x1
  441828:	mov	x22, x0
  44182c:	br	x11
  441830:	tbnz	w20, #5, 441b8c <_obstack_memory_used@@Base+0x392c>
  441834:	tbnz	w20, #4, 441bc0 <_obstack_memory_used@@Base+0x3960>
  441838:	tbnz	w20, #17, 4418ac <_obstack_memory_used@@Base+0x364c>
  44183c:	and	w9, w8, #0xff
  441840:	cmp	w9, #0x9
  441844:	b.ne	4418ac <_obstack_memory_used@@Base+0x364c>  // b.any
  441848:	mov	w8, #0x10                  	// #16
  44184c:	b	441b98 <_obstack_memory_used@@Base+0x3938>
  441850:	ldr	x1, [x22, #120]
  441854:	and	w8, w8, #0xff
  441858:	cmp	w8, #0x21
  44185c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  441860:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  441864:	cset	w4, eq  // eq = none
  441868:	add	x2, x2, #0x5a8
  44186c:	add	x3, x3, #0x5ae
  441870:	b	441894 <_obstack_memory_used@@Base+0x3634>
  441874:	ldr	x1, [x22, #120]
  441878:	and	w8, w8, #0xff
  44187c:	cmp	w8, #0x23
  441880:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  441884:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x17da0>
  441888:	cset	w4, eq  // eq = none
  44188c:	add	x2, x2, #0x5b0
  441890:	add	x3, x3, #0xd3e
  441894:	mov	x0, x23
  441898:	mov	x5, x19
  44189c:	bl	4424e4 <_obstack_memory_used@@Base+0x4284>
  4418a0:	mov	x24, x0
  4418a4:	cbz	x0, 441aa4 <_obstack_memory_used@@Base+0x3844>
  4418a8:	b	441aac <_obstack_memory_used@@Base+0x384c>
  4418ac:	and	w8, w8, #0xffffff00
  4418b0:	orr	w8, w8, #0x1
  4418b4:	mov	x0, x23
  4418b8:	mov	x1, xzr
  4418bc:	mov	x2, xzr
  4418c0:	mov	x3, x21
  4418c4:	str	w8, [x21, #8]
  4418c8:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  4418cc:	mov	x24, x0
  4418d0:	cbnz	x0, 441aac <_obstack_memory_used@@Base+0x384c>
  4418d4:	b	441978 <_obstack_memory_used@@Base+0x3718>
  4418d8:	mov	x0, x23
  4418dc:	mov	x1, xzr
  4418e0:	mov	x2, xzr
  4418e4:	mov	x3, x21
  4418e8:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  4418ec:	mov	x24, x0
  4418f0:	cbz	x0, 441978 <_obstack_memory_used@@Base+0x3718>
  4418f4:	ldr	w8, [x23, #180]
  4418f8:	cmp	w8, #0x2
  4418fc:	b.lt	441aac <_obstack_memory_used@@Base+0x384c>  // b.tstop
  441900:	ldr	x9, [x22, #104]
  441904:	ldr	x8, [x22, #72]
  441908:	cmp	x9, x8
  44190c:	b.le	441aac <_obstack_memory_used@@Base+0x384c>
  441910:	ldr	x9, [x22, #48]
  441914:	cmp	x8, x9
  441918:	b.eq	441aac <_obstack_memory_used@@Base+0x384c>  // b.none
  44191c:	ldr	x9, [x22, #16]
  441920:	ldr	w8, [x9, x8, lsl #2]
  441924:	cmn	w8, #0x1
  441928:	b.ne	441aac <_obstack_memory_used@@Base+0x384c>  // b.any
  44192c:	mov	x0, x21
  441930:	mov	x1, x22
  441934:	mov	x2, x20
  441938:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  44193c:	mov	x0, x23
  441940:	mov	x1, xzr
  441944:	mov	x2, xzr
  441948:	mov	x3, x21
  44194c:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  441950:	mov	x25, x0
  441954:	mov	w3, #0x10                  	// #16
  441958:	mov	x0, x23
  44195c:	mov	x1, x24
  441960:	mov	x2, x25
  441964:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  441968:	cbz	x25, 441974 <_obstack_memory_used@@Base+0x3714>
  44196c:	mov	x24, x0
  441970:	cbnz	x0, 441900 <_obstack_memory_used@@Base+0x36a0>
  441974:	mov	x24, xzr
  441978:	mov	w8, #0xc                   	// #12
  44197c:	str	w8, [x19]
  441980:	b	441ba0 <_obstack_memory_used@@Base+0x3940>
  441984:	ldr	w8, [x21]
  441988:	ldr	x9, [x23, #168]
  44198c:	mov	w10, #0x1                   	// #1
  441990:	lsl	w8, w10, w8
  441994:	sxtw	x8, w8
  441998:	tst	x9, x8
  44199c:	b.eq	441c8c <_obstack_memory_used@@Base+0x3a2c>  // b.none
  4419a0:	ldr	x9, [x23, #160]
  4419a4:	mov	x0, x23
  4419a8:	mov	x1, xzr
  4419ac:	mov	x2, xzr
  4419b0:	orr	x8, x9, x8
  4419b4:	mov	x3, x21
  4419b8:	str	x8, [x23, #160]
  4419bc:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  4419c0:	mov	x24, x0
  4419c4:	cbz	x0, 441978 <_obstack_memory_used@@Base+0x3718>
  4419c8:	ldr	x8, [x23, #152]
  4419cc:	ldrb	w9, [x23, #176]
  4419d0:	add	x8, x8, #0x1
  4419d4:	orr	w9, w9, #0x2
  4419d8:	str	x8, [x23, #152]
  4419dc:	strb	w9, [x23, #176]
  4419e0:	b	441aac <_obstack_memory_used@@Base+0x384c>
  4419e4:	mov	x0, x23
  4419e8:	mov	x1, xzr
  4419ec:	mov	x2, xzr
  4419f0:	mov	x3, x21
  4419f4:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  4419f8:	mov	x24, x0
  4419fc:	cbz	x0, 441978 <_obstack_memory_used@@Base+0x3718>
  441a00:	ldr	w8, [x23, #180]
  441a04:	cmp	w8, #0x2
  441a08:	b.lt	441aac <_obstack_memory_used@@Base+0x384c>  // b.tstop
  441a0c:	ldrb	w8, [x23, #176]
  441a10:	orr	w8, w8, #0x2
  441a14:	strb	w8, [x23, #176]
  441a18:	b	441aac <_obstack_memory_used@@Base+0x384c>
  441a1c:	add	x4, x25, #0x1
  441a20:	mov	x0, x22
  441a24:	mov	x1, x26
  441a28:	mov	x2, x21
  441a2c:	mov	x3, x20
  441a30:	mov	x5, x19
  441a34:	bl	441d3c <_obstack_memory_used@@Base+0x3adc>
  441a38:	mov	x24, x0
  441a3c:	cbz	x0, 441aa4 <_obstack_memory_used@@Base+0x3844>
  441a40:	b	441aac <_obstack_memory_used@@Base+0x384c>
  441a44:	ldrh	w8, [x21]
  441a48:	mov	w9, #0x30f                 	// #783
  441a4c:	tst	w8, w9
  441a50:	b.eq	441a64 <_obstack_memory_used@@Base+0x3804>  // b.none
  441a54:	ldrb	w8, [x23, #176]
  441a58:	tbnz	w8, #4, 441a64 <_obstack_memory_used@@Base+0x3804>
  441a5c:	mov	x0, x23
  441a60:	bl	442418 <_obstack_memory_used@@Base+0x41b8>
  441a64:	ldr	w8, [x21]
  441a68:	cmp	w8, #0x100
  441a6c:	b.eq	441bf4 <_obstack_memory_used@@Base+0x3994>  // b.none
  441a70:	cmp	w8, #0x200
  441a74:	b.ne	441c5c <_obstack_memory_used@@Base+0x39fc>  // b.any
  441a78:	mov	w24, #0xa                   	// #10
  441a7c:	mov	w8, #0x5                   	// #5
  441a80:	b	441bfc <_obstack_memory_used@@Base+0x399c>
  441a84:	mov	x0, x22
  441a88:	mov	x1, x23
  441a8c:	mov	x2, x21
  441a90:	mov	x3, x20
  441a94:	mov	x4, x19
  441a98:	bl	441e74 <_obstack_memory_used@@Base+0x3c14>
  441a9c:	mov	x24, x0
  441aa0:	cbnz	x0, 441aac <_obstack_memory_used@@Base+0x384c>
  441aa4:	ldr	w8, [x19]
  441aa8:	cbnz	w8, 441b80 <_obstack_memory_used@@Base+0x3920>
  441aac:	mov	x0, x21
  441ab0:	mov	x1, x22
  441ab4:	mov	x2, x20
  441ab8:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  441abc:	mov	w28, #0x800                 	// #2048
  441ac0:	mov	w27, #0x1                   	// #1
  441ac4:	movk	w28, #0x8c, lsl #16
  441ac8:	mov	w25, #0xd                   	// #13
  441acc:	b	441adc <_obstack_memory_used@@Base+0x387c>
  441ad0:	mov	w8, #0x1                   	// #1
  441ad4:	mov	x24, x26
  441ad8:	tbz	w8, #0, 441b80 <_obstack_memory_used@@Base+0x3920>
  441adc:	ldrb	w8, [x21, #8]
  441ae0:	cmp	w8, #0x17
  441ae4:	b.hi	441ba0 <_obstack_memory_used@@Base+0x3940>  // b.pmore
  441ae8:	lsl	w8, w27, w8
  441aec:	tst	w8, w28
  441af0:	b.eq	441ba0 <_obstack_memory_used@@Base+0x3940>  // b.none
  441af4:	mov	x0, x24
  441af8:	mov	x1, x22
  441afc:	mov	x2, x23
  441b00:	mov	x3, x21
  441b04:	mov	x4, x20
  441b08:	mov	x5, x19
  441b0c:	bl	4426c0 <_obstack_memory_used@@Base+0x4460>
  441b10:	mov	x26, x0
  441b14:	cbnz	x0, 441b20 <_obstack_memory_used@@Base+0x38c0>
  441b18:	ldr	w8, [x19]
  441b1c:	cbnz	w8, 441b5c <_obstack_memory_used@@Base+0x38fc>
  441b20:	tbz	w20, #24, 441ad0 <_obstack_memory_used@@Base+0x3870>
  441b24:	ldrb	w8, [x21, #8]
  441b28:	cmp	w8, #0x17
  441b2c:	b.eq	441b38 <_obstack_memory_used@@Base+0x38d8>  // b.none
  441b30:	cmp	w8, #0xb
  441b34:	b.ne	441ad0 <_obstack_memory_used@@Base+0x3870>  // b.any
  441b38:	cbz	x26, 441b50 <_obstack_memory_used@@Base+0x38f0>
  441b3c:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x2da0>
  441b40:	mov	x0, x26
  441b44:	add	x1, x1, #0x7ac
  441b48:	mov	x2, xzr
  441b4c:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  441b50:	mov	w8, wzr
  441b54:	str	w25, [x19]
  441b58:	b	441ad4 <_obstack_memory_used@@Base+0x3874>
  441b5c:	cbz	x24, 441b74 <_obstack_memory_used@@Base+0x3914>
  441b60:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x2da0>
  441b64:	mov	x0, x24
  441b68:	add	x1, x1, #0x7ac
  441b6c:	mov	x2, xzr
  441b70:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  441b74:	mov	w8, wzr
  441b78:	mov	x26, x24
  441b7c:	b	441ad4 <_obstack_memory_used@@Base+0x3874>
  441b80:	mov	x24, xzr
  441b84:	b	441ba0 <_obstack_memory_used@@Base+0x3940>
  441b88:	tbz	w20, #24, 441830 <_obstack_memory_used@@Base+0x35d0>
  441b8c:	mov	w8, #0xd                   	// #13
  441b90:	b	441b98 <_obstack_memory_used@@Base+0x3938>
  441b94:	mov	w8, #0x5                   	// #5
  441b98:	mov	x24, xzr
  441b9c:	str	w8, [x19]
  441ba0:	mov	x0, x24
  441ba4:	ldp	x20, x19, [sp, #80]
  441ba8:	ldp	x22, x21, [sp, #64]
  441bac:	ldp	x24, x23, [sp, #48]
  441bb0:	ldp	x26, x25, [sp, #32]
  441bb4:	ldp	x28, x27, [sp, #16]
  441bb8:	ldp	x29, x30, [sp], #96
  441bbc:	ret
  441bc0:	mov	x0, x21
  441bc4:	mov	x1, x22
  441bc8:	mov	x2, x20
  441bcc:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  441bd0:	mov	x0, x22
  441bd4:	mov	x1, x26
  441bd8:	mov	x2, x21
  441bdc:	mov	x3, x20
  441be0:	mov	x4, x25
  441be4:	mov	x5, x19
  441be8:	bl	4417c8 <_obstack_memory_used@@Base+0x3568>
  441bec:	mov	x24, x0
  441bf0:	b	441ba0 <_obstack_memory_used@@Base+0x3940>
  441bf4:	mov	w24, #0x9                   	// #9
  441bf8:	mov	w8, #0x6                   	// #6
  441bfc:	mov	x0, x23
  441c00:	mov	x1, xzr
  441c04:	mov	x2, xzr
  441c08:	mov	x3, x21
  441c0c:	str	w8, [x21]
  441c10:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  441c14:	mov	x26, x0
  441c18:	mov	x0, x23
  441c1c:	mov	x1, xzr
  441c20:	mov	x2, xzr
  441c24:	mov	x3, x21
  441c28:	str	w24, [x21]
  441c2c:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  441c30:	mov	x25, x0
  441c34:	mov	w3, #0xa                   	// #10
  441c38:	mov	x0, x23
  441c3c:	mov	x1, x26
  441c40:	mov	x2, x25
  441c44:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  441c48:	cbz	x26, 441974 <_obstack_memory_used@@Base+0x3714>
  441c4c:	cbz	x25, 441974 <_obstack_memory_used@@Base+0x3714>
  441c50:	mov	x24, x0
  441c54:	cbnz	x0, 441c78 <_obstack_memory_used@@Base+0x3a18>
  441c58:	b	441974 <_obstack_memory_used@@Base+0x3714>
  441c5c:	mov	x0, x23
  441c60:	mov	x1, xzr
  441c64:	mov	x2, xzr
  441c68:	mov	x3, x21
  441c6c:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  441c70:	mov	x24, x0
  441c74:	cbz	x0, 441978 <_obstack_memory_used@@Base+0x3718>
  441c78:	mov	x0, x21
  441c7c:	mov	x1, x22
  441c80:	mov	x2, x20
  441c84:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  441c88:	b	441ba0 <_obstack_memory_used@@Base+0x3940>
  441c8c:	mov	w8, #0x6                   	// #6
  441c90:	b	441b98 <_obstack_memory_used@@Base+0x3938>
  441c94:	stp	x29, x30, [sp, #-48]!
  441c98:	stp	x22, x21, [sp, #16]
  441c9c:	stp	x20, x19, [sp, #32]
  441ca0:	ldr	w8, [x0, #128]
  441ca4:	mov	x21, x3
  441ca8:	mov	x19, x2
  441cac:	mov	x22, x0
  441cb0:	cmp	w8, #0xf
  441cb4:	mov	x20, x1
  441cb8:	mov	x29, sp
  441cbc:	b.eq	441d1c <_obstack_memory_used@@Base+0x3abc>  // b.none
  441cc0:	ldrsw	x8, [x22, #128]
  441cc4:	ldr	x9, [x22, #112]
  441cc8:	add	w10, w8, #0x1
  441ccc:	add	x0, x9, x8, lsl #6
  441cd0:	str	w10, [x22, #128]
  441cd4:	str	xzr, [x0, #8]!
  441cd8:	stp	x20, x19, [x0, #8]
  441cdc:	ldr	q0, [x21]
  441ce0:	mov	x9, #0xffffffffffffffff    	// #-1
  441ce4:	stp	xzr, xzr, [x0, #24]
  441ce8:	str	x9, [x0, #56]
  441cec:	stur	q0, [x0, #40]
  441cf0:	ldr	w8, [x0, #48]
  441cf4:	and	w8, w8, #0xfff3ffff
  441cf8:	str	w8, [x0, #48]
  441cfc:	cbz	x20, 441d04 <_obstack_memory_used@@Base+0x3aa4>
  441d00:	str	x0, [x20]
  441d04:	cbz	x19, 441d0c <_obstack_memory_used@@Base+0x3aac>
  441d08:	str	x0, [x19]
  441d0c:	ldp	x20, x19, [sp, #32]
  441d10:	ldp	x22, x21, [sp, #16]
  441d14:	ldp	x29, x30, [sp], #48
  441d18:	ret
  441d1c:	mov	w0, #0x3c8                 	// #968
  441d20:	bl	4044f0 <malloc@plt>
  441d24:	cbz	x0, 441d0c <_obstack_memory_used@@Base+0x3aac>
  441d28:	ldr	x8, [x22, #112]
  441d2c:	str	x8, [x0]
  441d30:	str	x0, [x22, #112]
  441d34:	str	wzr, [x22, #128]
  441d38:	b	441cc0 <_obstack_memory_used@@Base+0x3a60>
  441d3c:	stp	x29, x30, [sp, #-80]!
  441d40:	stp	x26, x25, [sp, #16]
  441d44:	stp	x24, x23, [sp, #32]
  441d48:	stp	x22, x21, [sp, #48]
  441d4c:	stp	x20, x19, [sp, #64]
  441d50:	ldr	x26, [x1, #48]
  441d54:	ldr	x20, [x1]
  441d58:	mov	x21, x2
  441d5c:	mov	x25, x0
  441d60:	add	x8, x26, #0x1
  441d64:	mov	x24, x1
  441d68:	str	x8, [x1, #48]
  441d6c:	orr	x2, x3, #0x800000
  441d70:	mov	x0, x21
  441d74:	mov	x1, x25
  441d78:	mov	x29, sp
  441d7c:	mov	x19, x5
  441d80:	mov	x22, x4
  441d84:	mov	x23, x3
  441d88:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  441d8c:	ldrb	w8, [x21, #8]
  441d90:	cmp	w8, #0x9
  441d94:	b.ne	441da0 <_obstack_memory_used@@Base+0x3b40>  // b.any
  441d98:	mov	x1, xzr
  441d9c:	b	441ddc <_obstack_memory_used@@Base+0x3b7c>
  441da0:	mov	x0, x25
  441da4:	mov	x1, x24
  441da8:	mov	x2, x21
  441dac:	mov	x3, x23
  441db0:	mov	x4, x22
  441db4:	mov	x5, x19
  441db8:	bl	440e58 <_obstack_memory_used@@Base+0x2bf8>
  441dbc:	ldr	w8, [x19]
  441dc0:	mov	x1, x0
  441dc4:	cbnz	w8, 441dd4 <_obstack_memory_used@@Base+0x3b74>
  441dc8:	ldrb	w8, [x21, #8]
  441dcc:	cmp	w8, #0x9
  441dd0:	b.ne	441e38 <_obstack_memory_used@@Base+0x3bd8>  // b.any
  441dd4:	ldr	w8, [x19]
  441dd8:	cbnz	w8, 441e6c <_obstack_memory_used@@Base+0x3c0c>
  441ddc:	cmp	x26, #0x8
  441de0:	b.hi	441dfc <_obstack_memory_used@@Base+0x3b9c>  // b.pmore
  441de4:	ldr	x8, [x20, #168]
  441de8:	mov	w9, #0x1                   	// #1
  441dec:	lsl	w9, w9, w26
  441df0:	sxtw	x9, w9
  441df4:	orr	x8, x8, x9
  441df8:	str	x8, [x20, #168]
  441dfc:	mov	w3, #0x11                  	// #17
  441e00:	mov	x0, x20
  441e04:	mov	x2, xzr
  441e08:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  441e0c:	cbz	x0, 441e2c <_obstack_memory_used@@Base+0x3bcc>
  441e10:	str	x26, [x0, #40]
  441e14:	ldp	x20, x19, [sp, #64]
  441e18:	ldp	x22, x21, [sp, #48]
  441e1c:	ldp	x24, x23, [sp, #32]
  441e20:	ldp	x26, x25, [sp, #16]
  441e24:	ldp	x29, x30, [sp], #80
  441e28:	ret
  441e2c:	mov	w8, #0xc                   	// #12
  441e30:	str	w8, [x19]
  441e34:	b	441e14 <_obstack_memory_used@@Base+0x3bb4>
  441e38:	cbz	x1, 441e5c <_obstack_memory_used@@Base+0x3bfc>
  441e3c:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x2da0>
  441e40:	add	x8, x8, #0x7ac
  441e44:	mov	x0, x1
  441e48:	mov	x21, x1
  441e4c:	mov	x1, x8
  441e50:	mov	x2, xzr
  441e54:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  441e58:	mov	x1, x21
  441e5c:	mov	w8, #0x8                   	// #8
  441e60:	str	w8, [x19]
  441e64:	ldr	w8, [x19]
  441e68:	cbz	w8, 441ddc <_obstack_memory_used@@Base+0x3b7c>
  441e6c:	mov	x0, xzr
  441e70:	b	441e14 <_obstack_memory_used@@Base+0x3bb4>
  441e74:	sub	sp, sp, #0x100
  441e78:	stp	x29, x30, [sp, #160]
  441e7c:	stp	x24, x23, [sp, #208]
  441e80:	stp	x20, x19, [sp, #240]
  441e84:	add	x29, sp, #0xa0
  441e88:	mov	x19, x1
  441e8c:	mov	x23, x0
  441e90:	mov	w0, #0x20                  	// #32
  441e94:	mov	w1, #0x1                   	// #1
  441e98:	stp	x28, x27, [sp, #176]
  441e9c:	stp	x26, x25, [sp, #192]
  441ea0:	stp	x22, x21, [sp, #224]
  441ea4:	str	x4, [sp, #24]
  441ea8:	mov	x24, x3
  441eac:	mov	x25, x2
  441eb0:	stp	xzr, xzr, [x29, #-16]
  441eb4:	bl	4046a0 <calloc@plt>
  441eb8:	mov	x20, x0
  441ebc:	mov	w0, #0x50                  	// #80
  441ec0:	mov	w1, #0x1                   	// #1
  441ec4:	bl	4046a0 <calloc@plt>
  441ec8:	mov	x21, x0
  441ecc:	cbz	x20, 4423bc <_obstack_memory_used@@Base+0x415c>
  441ed0:	cbz	x21, 4423bc <_obstack_memory_used@@Base+0x415c>
  441ed4:	mov	x0, x25
  441ed8:	mov	x1, x23
  441edc:	mov	x2, x24
  441ee0:	bl	4429e0 <_obstack_memory_used@@Base+0x4780>
  441ee4:	ldrb	w8, [x25, #8]
  441ee8:	mov	w26, w0
  441eec:	cmp	w8, #0x19
  441ef0:	b.eq	441f04 <_obstack_memory_used@@Base+0x3ca4>  // b.none
  441ef4:	cmp	w8, #0x2
  441ef8:	b.eq	44232c <_obstack_memory_used@@Base+0x40cc>  // b.none
  441efc:	str	wzr, [sp, #12]
  441f00:	b	441f54 <_obstack_memory_used@@Base+0x3cf4>
  441f04:	ldrb	w8, [x21, #32]
  441f08:	orr	w8, w8, #0x1
  441f0c:	strb	w8, [x21, #32]
  441f10:	tbz	w24, #8, 441f20 <_obstack_memory_used@@Base+0x3cc0>
  441f14:	mov	w1, #0xa                   	// #10
  441f18:	mov	x0, x20
  441f1c:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  441f20:	ldr	x8, [x23, #72]
  441f24:	mov	x0, x25
  441f28:	mov	x1, x23
  441f2c:	mov	x2, x24
  441f30:	add	x8, x8, w26, sxtw
  441f34:	str	x8, [x23, #72]
  441f38:	bl	4429e0 <_obstack_memory_used@@Base+0x4780>
  441f3c:	ldrb	w8, [x25, #8]
  441f40:	cmp	w8, #0x2
  441f44:	b.eq	44232c <_obstack_memory_used@@Base+0x40cc>  // b.none
  441f48:	mov	w26, w0
  441f4c:	mov	w8, #0x1                   	// #1
  441f50:	str	w8, [sp, #12]
  441f54:	ldr	w8, [x25, #8]
  441f58:	and	w9, w8, #0xff
  441f5c:	cmp	w9, #0x15
  441f60:	b.ne	441f70 <_obstack_memory_used@@Base+0x3d10>  // b.any
  441f64:	and	w8, w8, #0xffffff00
  441f68:	orr	w8, w8, #0x1
  441f6c:	str	w8, [x25, #8]
  441f70:	add	x28, sp, #0x50
  441f74:	mov	w27, #0x3                   	// #3
  441f78:	mov	w22, #0x1                   	// #1
  441f7c:	str	xzr, [sp, #16]
  441f80:	b	441f90 <_obstack_memory_used@@Base+0x3d30>
  441f84:	mov	w22, wzr
  441f88:	mov	w8, #0x4                   	// #4
  441f8c:	cbnz	w8, 44220c <_obstack_memory_used@@Base+0x3fac>
  441f90:	and	w5, w22, #0x1
  441f94:	sub	x0, x29, #0x20
  441f98:	mov	x1, x23
  441f9c:	mov	x2, x25
  441fa0:	mov	w3, w26
  441fa4:	mov	x4, x24
  441fa8:	stur	x28, [x29, #-24]
  441fac:	stur	w27, [x29, #-32]
  441fb0:	bl	442b6c <_obstack_memory_used@@Base+0x490c>
  441fb4:	cbnz	w0, 4421c0 <_obstack_memory_used@@Base+0x3f60>
  441fb8:	mov	x0, x25
  441fbc:	mov	x1, x23
  441fc0:	mov	x2, x24
  441fc4:	bl	4429e0 <_obstack_memory_used@@Base+0x4780>
  441fc8:	ldur	w22, [x29, #-32]
  441fcc:	mov	w26, w0
  441fd0:	mov	w3, wzr
  441fd4:	cmp	w22, #0x2
  441fd8:	b.eq	442008 <_obstack_memory_used@@Base+0x3da8>  // b.none
  441fdc:	cmp	w22, #0x4
  441fe0:	mov	w8, w3
  441fe4:	b.eq	44200c <_obstack_memory_used@@Base+0x3dac>  // b.none
  441fe8:	ldrb	w8, [x25, #8]
  441fec:	cmp	w8, #0x16
  441ff0:	b.eq	4420d0 <_obstack_memory_used@@Base+0x3e70>  // b.none
  441ff4:	cmp	w8, #0x2
  441ff8:	b.eq	442198 <_obstack_memory_used@@Base+0x3f38>  // b.none
  441ffc:	mov	w3, wzr
  442000:	mov	w8, wzr
  442004:	b	44200c <_obstack_memory_used@@Base+0x3dac>
  442008:	mov	w8, w3
  44200c:	cbz	w8, 44209c <_obstack_memory_used@@Base+0x3e3c>
  442010:	add	x8, sp, #0x30
  442014:	sub	x0, x29, #0x30
  442018:	add	x2, sp, #0x20
  44201c:	mov	w5, #0x1                   	// #1
  442020:	mov	x1, x23
  442024:	mov	x4, x24
  442028:	stur	x8, [x29, #-40]
  44202c:	stur	w27, [x29, #-48]
  442030:	bl	442b6c <_obstack_memory_used@@Base+0x490c>
  442034:	cbnz	w0, 4421bc <_obstack_memory_used@@Base+0x3f5c>
  442038:	mov	x0, x25
  44203c:	mov	x1, x23
  442040:	mov	x2, x24
  442044:	bl	4429e0 <_obstack_memory_used@@Base+0x4780>
  442048:	ldr	w8, [x19, #180]
  44204c:	mov	w26, w0
  442050:	sub	x3, x29, #0x8
  442054:	sub	x4, x29, #0x20
  442058:	cmp	w8, #0x1
  44205c:	csel	x2, x21, xzr, gt
  442060:	sub	x5, x29, #0x30
  442064:	mov	x0, x24
  442068:	mov	x1, x20
  44206c:	bl	442c84 <_obstack_memory_used@@Base+0x4a24>
  442070:	ldr	x8, [sp, #24]
  442074:	str	w0, [x8]
  442078:	cbnz	w0, 4421b0 <_obstack_memory_used@@Base+0x3f50>
  44207c:	ldrb	w8, [x25, #8]
  442080:	cmp	w8, #0x15
  442084:	b.eq	441f84 <_obstack_memory_used@@Base+0x3d24>  // b.none
  442088:	cmp	w8, #0x2
  44208c:	b.eq	442198 <_obstack_memory_used@@Base+0x3f38>  // b.none
  442090:	mov	w22, wzr
  442094:	mov	w8, wzr
  442098:	b	441f8c <_obstack_memory_used@@Base+0x3d2c>
  44209c:	cmp	w22, #0x4
  4420a0:	b.hi	4423f8 <_obstack_memory_used@@Base+0x4198>  // b.pmore
  4420a4:	adrp	x11, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4420a8:	mov	w8, w22
  4420ac:	add	x11, x11, #0x345
  4420b0:	adr	x9, 4420c0 <_obstack_memory_used@@Base+0x3e60>
  4420b4:	ldrb	w10, [x11, x8]
  4420b8:	add	x9, x9, x10, lsl #2
  4420bc:	br	x9
  4420c0:	ldurb	w1, [x29, #-24]
  4420c4:	mov	x0, x20
  4420c8:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4420cc:	b	44207c <_obstack_memory_used@@Base+0x3e1c>
  4420d0:	ldr	x8, [x23, #72]
  4420d4:	add	x0, sp, #0x20
  4420d8:	mov	x1, x23
  4420dc:	mov	x2, x24
  4420e0:	add	x8, x8, w26, sxtw
  4420e4:	str	x8, [x23, #72]
  4420e8:	bl	4429e0 <_obstack_memory_used@@Base+0x4780>
  4420ec:	ldrb	w8, [sp, #40]
  4420f0:	mov	w3, w0
  4420f4:	cmp	w8, #0x15
  4420f8:	b.eq	442178 <_obstack_memory_used@@Base+0x3f18>  // b.none
  4420fc:	cmp	w8, #0x2
  442100:	b.eq	442198 <_obstack_memory_used@@Base+0x3f38>  // b.none
  442104:	mov	w8, #0x1                   	// #1
  442108:	b	44200c <_obstack_memory_used@@Base+0x3dac>
  44210c:	ldr	x0, [x23, #120]
  442110:	ldur	x4, [x29, #-24]
  442114:	sub	x3, x29, #0x10
  442118:	mov	x1, x20
  44211c:	mov	x2, x21
  442120:	mov	x5, x24
  442124:	bl	442f88 <_obstack_memory_used@@Base+0x4d28>
  442128:	b	442070 <_obstack_memory_used@@Base+0x3e10>
  44212c:	ldur	x1, [x29, #-24]
  442130:	mov	x0, x20
  442134:	bl	442ef8 <_obstack_memory_used@@Base+0x4c98>
  442138:	b	442070 <_obstack_memory_used@@Base+0x3e10>
  44213c:	ldur	x1, [x29, #-24]
  442140:	mov	x0, x20
  442144:	bl	442f40 <_obstack_memory_used@@Base+0x4ce0>
  442148:	b	442070 <_obstack_memory_used@@Base+0x3e10>
  44214c:	ldr	x8, [x21, #40]
  442150:	ldr	x9, [sp, #16]
  442154:	cmp	x9, x8
  442158:	b.eq	4421d0 <_obstack_memory_used@@Base+0x3f70>  // b.none
  44215c:	ldr	x8, [x21, #40]
  442160:	ldur	w9, [x29, #-24]
  442164:	ldr	x10, [x21]
  442168:	add	x11, x8, #0x1
  44216c:	str	x11, [x21, #40]
  442170:	str	w9, [x10, x8, lsl #2]
  442174:	b	44207c <_obstack_memory_used@@Base+0x3e1c>
  442178:	ldr	x9, [x23, #72]
  44217c:	neg	w10, w26
  442180:	mov	w8, wzr
  442184:	add	x9, x9, w10, sxtw
  442188:	str	x9, [x23, #72]
  44218c:	mov	w9, #0x1                   	// #1
  442190:	strb	w9, [x25, #8]
  442194:	b	44200c <_obstack_memory_used@@Base+0x3dac>
  442198:	ldr	x8, [sp, #24]
  44219c:	mov	w9, #0x7                   	// #7
  4421a0:	mov	w22, wzr
  4421a4:	str	w9, [x8]
  4421a8:	mov	w8, #0x2                   	// #2
  4421ac:	b	441f8c <_obstack_memory_used@@Base+0x3d2c>
  4421b0:	mov	w22, wzr
  4421b4:	mov	w8, #0x2                   	// #2
  4421b8:	b	441f8c <_obstack_memory_used@@Base+0x3d2c>
  4421bc:	mov	w22, wzr
  4421c0:	ldr	x8, [sp, #24]
  4421c4:	str	w0, [x8]
  4421c8:	mov	w8, #0x2                   	// #2
  4421cc:	b	441f8c <_obstack_memory_used@@Base+0x3d2c>
  4421d0:	ldr	x0, [x21]
  4421d4:	mov	w9, #0x1                   	// #1
  4421d8:	bfi	x9, x8, #1, #63
  4421dc:	lsl	x1, x9, #2
  4421e0:	str	x9, [sp, #16]
  4421e4:	bl	404730 <realloc@plt>
  4421e8:	cbz	x0, 442200 <_obstack_memory_used@@Base+0x3fa0>
  4421ec:	mov	w8, wzr
  4421f0:	str	x0, [x21]
  4421f4:	cbz	w8, 44215c <_obstack_memory_used@@Base+0x3efc>
  4421f8:	mov	w22, wzr
  4421fc:	b	441f8c <_obstack_memory_used@@Base+0x3d2c>
  442200:	mov	w8, #0x6                   	// #6
  442204:	cbnz	w8, 4421f8 <_obstack_memory_used@@Base+0x3f98>
  442208:	b	44215c <_obstack_memory_used@@Base+0x3efc>
  44220c:	cmp	w8, #0x2
  442210:	b.eq	442334 <_obstack_memory_used@@Base+0x40d4>  // b.none
  442214:	cmp	w8, #0x6
  442218:	b.eq	442328 <_obstack_memory_used@@Base+0x40c8>  // b.none
  44221c:	cmp	w8, #0x4
  442220:	b.ne	4422dc <_obstack_memory_used@@Base+0x407c>  // b.any
  442224:	ldr	x8, [x23, #72]
  442228:	add	x8, x8, w26, sxtw
  44222c:	str	x8, [x23, #72]
  442230:	ldr	w8, [sp, #12]
  442234:	cbz	w8, 442240 <_obstack_memory_used@@Base+0x3fe0>
  442238:	mov	x0, x20
  44223c:	bl	443644 <_obstack_memory_used@@Base+0x53e4>
  442240:	ldr	w8, [x19, #180]
  442244:	cmp	w8, #0x2
  442248:	b.lt	442258 <_obstack_memory_used@@Base+0x3ff8>  // b.tstop
  44224c:	ldr	x1, [x19, #120]
  442250:	mov	x0, x20
  442254:	bl	443664 <_obstack_memory_used@@Base+0x5404>
  442258:	ldr	x8, [x21, #40]
  44225c:	cbnz	x8, 442278 <_obstack_memory_used@@Base+0x4018>
  442260:	ldr	x8, [x21, #48]
  442264:	cbnz	x8, 442278 <_obstack_memory_used@@Base+0x4018>
  442268:	ldr	x8, [x21, #56]
  44226c:	cbnz	x8, 442278 <_obstack_memory_used@@Base+0x4018>
  442270:	ldr	x8, [x21, #64]
  442274:	cbz	x8, 44236c <_obstack_memory_used@@Base+0x410c>
  442278:	ldrb	w8, [x19, #176]
  44227c:	add	x3, sp, #0x50
  442280:	mov	x0, x19
  442284:	mov	x1, xzr
  442288:	orr	w8, w8, #0x2
  44228c:	strb	w8, [x19, #176]
  442290:	ldr	w22, [sp, #88]
  442294:	mov	w8, #0x6                   	// #6
  442298:	mov	x2, xzr
  44229c:	strb	w8, [sp, #88]
  4422a0:	str	x21, [sp, #80]
  4422a4:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  4422a8:	cbz	x0, 4423ec <_obstack_memory_used@@Base+0x418c>
  4422ac:	mov	x23, x0
  4422b0:	mov	x9, xzr
  4422b4:	and	w8, w22, #0xffffff00
  4422b8:	ldr	x10, [x20, x9]
  4422bc:	cbnz	x10, 4422e0 <_obstack_memory_used@@Base+0x4080>
  4422c0:	add	x9, x9, #0x8
  4422c4:	cmp	x9, #0x20
  4422c8:	b.ne	4422b8 <_obstack_memory_used@@Base+0x4058>  // b.any
  4422cc:	mov	x0, x20
  4422d0:	bl	4049d0 <free@plt>
  4422d4:	mov	x1, x23
  4422d8:	b	442320 <_obstack_memory_used@@Base+0x40c0>
  4422dc:	b	442348 <_obstack_memory_used@@Base+0x40e8>
  4422e0:	orr	w8, w8, #0x3
  4422e4:	add	x3, sp, #0x50
  4422e8:	mov	x0, x19
  4422ec:	mov	x1, xzr
  4422f0:	mov	x2, xzr
  4422f4:	str	w8, [sp, #88]
  4422f8:	str	x20, [sp, #80]
  4422fc:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  442300:	mov	x1, x0
  442304:	cbz	x0, 4423e0 <_obstack_memory_used@@Base+0x4180>
  442308:	mov	w3, #0xa                   	// #10
  44230c:	mov	x0, x19
  442310:	mov	x2, x23
  442314:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  442318:	mov	x1, x0
  44231c:	cbz	x0, 4423e0 <_obstack_memory_used@@Base+0x4180>
  442320:	mov	w8, wzr
  442324:	tbz	wzr, #0, 442348 <_obstack_memory_used@@Base+0x40e8>
  442328:	mov	w8, #0xc                   	// #12
  44232c:	ldr	x9, [sp, #24]
  442330:	str	w8, [x9]
  442334:	mov	x0, x20
  442338:	bl	4049d0 <free@plt>
  44233c:	mov	x0, x21
  442340:	bl	43fa70 <_obstack_memory_used@@Base+0x1810>
  442344:	mov	x1, xzr
  442348:	ldp	x20, x19, [sp, #240]
  44234c:	ldp	x22, x21, [sp, #224]
  442350:	ldp	x24, x23, [sp, #208]
  442354:	ldp	x26, x25, [sp, #192]
  442358:	ldp	x28, x27, [sp, #176]
  44235c:	ldp	x29, x30, [sp, #160]
  442360:	mov	x0, x1
  442364:	add	sp, sp, #0x100
  442368:	ret
  44236c:	ldr	w8, [x19, #180]
  442370:	cmp	w8, #0x2
  442374:	b.lt	442388 <_obstack_memory_used@@Base+0x4128>  // b.tstop
  442378:	ldr	x8, [x21, #72]
  44237c:	cbnz	x8, 442278 <_obstack_memory_used@@Base+0x4018>
  442380:	ldrb	w8, [x21, #32]
  442384:	tbnz	w8, #0, 442278 <_obstack_memory_used@@Base+0x4018>
  442388:	mov	x0, x21
  44238c:	bl	43fa70 <_obstack_memory_used@@Base+0x1810>
  442390:	mov	w8, #0x3                   	// #3
  442394:	add	x3, sp, #0x50
  442398:	mov	x0, x19
  44239c:	mov	x1, xzr
  4423a0:	mov	x2, xzr
  4423a4:	strb	w8, [sp, #88]
  4423a8:	str	x20, [sp, #80]
  4423ac:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  4423b0:	mov	x1, x0
  4423b4:	cbnz	x0, 442348 <_obstack_memory_used@@Base+0x40e8>
  4423b8:	b	442328 <_obstack_memory_used@@Base+0x40c8>
  4423bc:	mov	x0, x20
  4423c0:	bl	4049d0 <free@plt>
  4423c4:	mov	x0, x21
  4423c8:	bl	4049d0 <free@plt>
  4423cc:	ldr	x9, [sp, #24]
  4423d0:	mov	w8, #0xc                   	// #12
  4423d4:	mov	x1, xzr
  4423d8:	str	w8, [x9]
  4423dc:	b	442348 <_obstack_memory_used@@Base+0x40e8>
  4423e0:	mov	w8, #0x1                   	// #1
  4423e4:	tbnz	w8, #0, 442328 <_obstack_memory_used@@Base+0x40c8>
  4423e8:	b	442348 <_obstack_memory_used@@Base+0x40e8>
  4423ec:	mov	w8, #0x1                   	// #1
  4423f0:	tbnz	w8, #0, 442328 <_obstack_memory_used@@Base+0x40c8>
  4423f4:	b	442348 <_obstack_memory_used@@Base+0x40e8>
  4423f8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  4423fc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  442400:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  442404:	add	x0, x0, #0xd4b
  442408:	add	x1, x1, #0x5b6
  44240c:	add	x3, x3, #0x5c2
  442410:	mov	w2, #0xced                 	// #3309
  442414:	bl	404cf0 <__assert_fail@plt>
  442418:	stp	x29, x30, [sp, #-48]!
  44241c:	stp	x20, x19, [sp, #32]
  442420:	ldrb	w8, [x0, #176]
  442424:	mov	x19, x0
  442428:	str	x21, [sp, #16]
  44242c:	mov	x29, sp
  442430:	orr	w9, w8, #0x10
  442434:	strb	w9, [x0, #176]
  442438:	tbnz	w8, #3, 442464 <_obstack_memory_used@@Base+0x4204>
  44243c:	mov	x10, #0x7fffffe07fffffe     	// #576460743847706622
  442440:	mov	x9, #0x3ff000000000000     	// #287948901175001088
  442444:	movk	x10, #0x87ff, lsl #16
  442448:	stp	x9, x10, [x19, #184]
  44244c:	tbz	w8, #2, 442470 <_obstack_memory_used@@Base+0x4210>
  442450:	stp	xzr, xzr, [x19, #200]
  442454:	ldp	x20, x19, [sp, #32]
  442458:	ldr	x21, [sp, #16]
  44245c:	ldp	x29, x30, [sp], #48
  442460:	ret
  442464:	mov	x21, xzr
  442468:	mov	x20, xzr
  44246c:	b	442478 <_obstack_memory_used@@Base+0x4218>
  442470:	mov	w20, #0x2                   	// #2
  442474:	mov	w21, #0x80                  	// #128
  442478:	bl	404950 <__ctype_b_loc@plt>
  44247c:	ldr	x8, [x0]
  442480:	mov	w9, #0x1                   	// #1
  442484:	add	x8, x8, x21, lsl #1
  442488:	b	4424a0 <_obstack_memory_used@@Base+0x4240>
  44248c:	add	x20, x20, #0x1
  442490:	add	x21, x21, #0x40
  442494:	cmp	x20, #0x4
  442498:	add	x8, x8, #0x80
  44249c:	b.eq	442454 <_obstack_memory_used@@Base+0x41f4>  // b.none
  4424a0:	add	x11, x19, x20, lsl #3
  4424a4:	mov	x10, xzr
  4424a8:	add	x11, x11, #0xb8
  4424ac:	b	4424cc <_obstack_memory_used@@Base+0x426c>
  4424b0:	ldr	x12, [x11]
  4424b4:	lsl	x13, x9, x10
  4424b8:	orr	x12, x12, x13
  4424bc:	str	x12, [x11]
  4424c0:	add	x10, x10, #0x1
  4424c4:	cmp	x10, #0x40
  4424c8:	b.eq	44248c <_obstack_memory_used@@Base+0x422c>  // b.none
  4424cc:	add	x12, x21, x10
  4424d0:	cmp	x12, #0x5f
  4424d4:	b.eq	4424b0 <_obstack_memory_used@@Base+0x4250>  // b.none
  4424d8:	ldrh	w12, [x8, x10, lsl #1]
  4424dc:	tbz	w12, #3, 4424c0 <_obstack_memory_used@@Base+0x4260>
  4424e0:	b	4424b0 <_obstack_memory_used@@Base+0x4250>
  4424e4:	sub	sp, sp, #0x70
  4424e8:	stp	x29, x30, [sp, #32]
  4424ec:	stp	x26, x25, [sp, #48]
  4424f0:	stp	x22, x21, [sp, #80]
  4424f4:	add	x29, sp, #0x20
  4424f8:	mov	x26, x1
  4424fc:	mov	x22, x0
  442500:	mov	w0, #0x20                  	// #32
  442504:	mov	w1, #0x1                   	// #1
  442508:	stp	x24, x23, [sp, #64]
  44250c:	stp	x20, x19, [sp, #96]
  442510:	mov	x19, x5
  442514:	mov	w23, w4
  442518:	mov	x24, x3
  44251c:	mov	x25, x2
  442520:	stur	xzr, [x29, #-8]
  442524:	bl	4046a0 <calloc@plt>
  442528:	cbz	x0, 442650 <_obstack_memory_used@@Base+0x43f0>
  44252c:	mov	x20, x0
  442530:	mov	w0, #0x50                  	// #80
  442534:	mov	w1, #0x1                   	// #1
  442538:	bl	4046a0 <calloc@plt>
  44253c:	cbz	x0, 442688 <_obstack_memory_used@@Base+0x4428>
  442540:	ldrb	w8, [x0, #32]
  442544:	mov	x21, x0
  442548:	sub	x3, x29, #0x8
  44254c:	mov	x1, x20
  442550:	bfxil	w8, w23, #0, #1
  442554:	strb	w8, [x0, #32]
  442558:	mov	x0, x26
  44255c:	mov	x2, x21
  442560:	mov	x4, x25
  442564:	mov	x5, xzr
  442568:	bl	442f88 <_obstack_memory_used@@Base+0x4d28>
  44256c:	cbnz	w0, 442694 <_obstack_memory_used@@Base+0x4434>
  442570:	ldrb	w8, [x24]
  442574:	cbz	w8, 442590 <_obstack_memory_used@@Base+0x4330>
  442578:	add	x24, x24, #0x1
  44257c:	and	x1, x8, #0xff
  442580:	mov	x0, x20
  442584:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  442588:	ldrb	w8, [x24], #1
  44258c:	cbnz	w8, 44257c <_obstack_memory_used@@Base+0x431c>
  442590:	tbz	w23, #0, 44259c <_obstack_memory_used@@Base+0x433c>
  442594:	mov	x0, x20
  442598:	bl	443644 <_obstack_memory_used@@Base+0x53e4>
  44259c:	ldr	w8, [x22, #180]
  4425a0:	cmp	w8, #0x2
  4425a4:	b.lt	4425b4 <_obstack_memory_used@@Base+0x4354>  // b.tstop
  4425a8:	ldr	x1, [x22, #120]
  4425ac:	mov	x0, x20
  4425b0:	bl	443664 <_obstack_memory_used@@Base+0x5404>
  4425b4:	ldr	w24, [sp, #16]
  4425b8:	mov	w8, #0x3                   	// #3
  4425bc:	add	x3, sp, #0x8
  4425c0:	mov	x0, x22
  4425c4:	mov	x1, xzr
  4425c8:	mov	x2, xzr
  4425cc:	strb	w8, [sp, #16]
  4425d0:	str	x20, [sp, #8]
  4425d4:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  4425d8:	cbz	x0, 442640 <_obstack_memory_used@@Base+0x43e0>
  4425dc:	ldr	w8, [x22, #180]
  4425e0:	mov	x23, x0
  4425e4:	cmp	w8, #0x2
  4425e8:	b.lt	442660 <_obstack_memory_used@@Base+0x4400>  // b.tstop
  4425ec:	and	w8, w24, #0xffffff00
  4425f0:	orr	w8, w8, #0x6
  4425f4:	str	w8, [sp, #16]
  4425f8:	str	x21, [sp, #8]
  4425fc:	ldrb	w8, [x22, #176]
  442600:	add	x3, sp, #0x8
  442604:	mov	x0, x22
  442608:	mov	x1, xzr
  44260c:	orr	w8, w8, #0x2
  442610:	mov	x2, xzr
  442614:	strb	w8, [x22, #176]
  442618:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  44261c:	cbz	x0, 4426b4 <_obstack_memory_used@@Base+0x4454>
  442620:	mov	x2, x0
  442624:	mov	w3, #0xa                   	// #10
  442628:	mov	x0, x22
  44262c:	mov	x1, x23
  442630:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  442634:	mov	x23, x0
  442638:	mov	w8, wzr
  44263c:	tbz	w8, #0, 442668 <_obstack_memory_used@@Base+0x4408>
  442640:	mov	x0, x20
  442644:	bl	4049d0 <free@plt>
  442648:	mov	x0, x21
  44264c:	bl	43fa70 <_obstack_memory_used@@Base+0x1810>
  442650:	mov	x23, xzr
  442654:	mov	w8, #0xc                   	// #12
  442658:	str	w8, [x19]
  44265c:	b	442668 <_obstack_memory_used@@Base+0x4408>
  442660:	mov	x0, x21
  442664:	bl	43fa70 <_obstack_memory_used@@Base+0x1810>
  442668:	mov	x0, x23
  44266c:	ldp	x20, x19, [sp, #96]
  442670:	ldp	x22, x21, [sp, #80]
  442674:	ldp	x24, x23, [sp, #64]
  442678:	ldp	x26, x25, [sp, #48]
  44267c:	ldp	x29, x30, [sp, #32]
  442680:	add	sp, sp, #0x70
  442684:	ret
  442688:	mov	x0, x20
  44268c:	bl	4049d0 <free@plt>
  442690:	b	442650 <_obstack_memory_used@@Base+0x43f0>
  442694:	mov	w25, w0
  442698:	mov	x0, x20
  44269c:	bl	4049d0 <free@plt>
  4426a0:	mov	x0, x21
  4426a4:	bl	43fa70 <_obstack_memory_used@@Base+0x1810>
  4426a8:	mov	x23, xzr
  4426ac:	str	w25, [x19]
  4426b0:	b	442668 <_obstack_memory_used@@Base+0x4408>
  4426b4:	mov	w8, #0x1                   	// #1
  4426b8:	tbnz	w8, #0, 442640 <_obstack_memory_used@@Base+0x43e0>
  4426bc:	b	442668 <_obstack_memory_used@@Base+0x4408>
  4426c0:	sub	sp, sp, #0x70
  4426c4:	stp	x29, x30, [sp, #16]
  4426c8:	stp	x26, x25, [sp, #48]
  4426cc:	stp	x24, x23, [sp, #64]
  4426d0:	stp	x22, x21, [sp, #80]
  4426d4:	stp	x20, x19, [sp, #96]
  4426d8:	ldr	q0, [x3]
  4426dc:	str	x27, [sp, #32]
  4426e0:	ldr	x27, [x1, #72]
  4426e4:	mov	x20, x5
  4426e8:	str	q0, [sp]
  4426ec:	ldrb	w8, [x3, #8]
  4426f0:	mov	x25, x4
  4426f4:	mov	x24, x3
  4426f8:	mov	x21, x2
  4426fc:	mov	x26, x1
  442700:	cmp	w8, #0x17
  442704:	mov	x19, x0
  442708:	add	x29, sp, #0x10
  44270c:	b.ne	442770 <_obstack_memory_used@@Base+0x4510>  // b.any
  442710:	mov	x0, x26
  442714:	mov	x1, x24
  442718:	mov	x2, x25
  44271c:	bl	4438e0 <_obstack_memory_used@@Base+0x5680>
  442720:	mov	x23, x0
  442724:	cmn	x0, #0x1
  442728:	b.eq	442788 <_obstack_memory_used@@Base+0x4528>  // b.none
  44272c:	cmn	x23, #0x2
  442730:	b.eq	4427ac <_obstack_memory_used@@Base+0x454c>  // b.none
  442734:	ldrb	w8, [x24, #8]
  442738:	mov	x22, x23
  44273c:	cmp	w8, #0x18
  442740:	b.eq	4427b8 <_obstack_memory_used@@Base+0x4558>  // b.none
  442744:	cmp	w8, #0x1
  442748:	b.ne	4427b4 <_obstack_memory_used@@Base+0x4554>  // b.any
  44274c:	ldrb	w8, [x24]
  442750:	cmp	w8, #0x2c
  442754:	b.ne	4427b4 <_obstack_memory_used@@Base+0x4554>  // b.any
  442758:	mov	x0, x26
  44275c:	mov	x1, x24
  442760:	mov	x2, x25
  442764:	bl	4438e0 <_obstack_memory_used@@Base+0x5680>
  442768:	mov	x22, x0
  44276c:	b	4427b8 <_obstack_memory_used@@Base+0x4558>
  442770:	cmp	w8, #0x12
  442774:	cset	w23, eq  // eq = none
  442778:	cmp	w8, #0x13
  44277c:	mov	w8, #0x1                   	// #1
  442780:	cneg	x22, x8, ne  // ne = any
  442784:	b	4427f4 <_obstack_memory_used@@Base+0x4594>
  442788:	ldrb	w8, [x24, #8]
  44278c:	cmp	w8, #0x1
  442790:	b.ne	4428ec <_obstack_memory_used@@Base+0x468c>  // b.any
  442794:	ldrb	w8, [x24]
  442798:	cmp	w8, #0x2c
  44279c:	b.ne	4428ec <_obstack_memory_used@@Base+0x468c>  // b.any
  4427a0:	mov	x23, xzr
  4427a4:	cmn	x23, #0x2
  4427a8:	b.ne	442734 <_obstack_memory_used@@Base+0x44d4>  // b.any
  4427ac:	mov	x22, xzr
  4427b0:	b	4427b8 <_obstack_memory_used@@Base+0x4558>
  4427b4:	mov	x22, #0xfffffffffffffffe    	// #-2
  4427b8:	cmn	x23, #0x2
  4427bc:	b.eq	4429a4 <_obstack_memory_used@@Base+0x4744>  // b.none
  4427c0:	cmn	x22, #0x2
  4427c4:	b.eq	4429a4 <_obstack_memory_used@@Base+0x4744>  // b.none
  4427c8:	cmn	x22, #0x1
  4427cc:	b.eq	4427d8 <_obstack_memory_used@@Base+0x4578>  // b.none
  4427d0:	cmp	x23, x22
  4427d4:	b.gt	4428ec <_obstack_memory_used@@Base+0x468c>
  4427d8:	ldrb	w8, [x24, #8]
  4427dc:	cmp	w8, #0x18
  4427e0:	b.ne	4428ec <_obstack_memory_used@@Base+0x468c>  // b.any
  4427e4:	cmn	x22, #0x1
  4427e8:	csel	x8, x23, x22, eq  // eq = none
  4427ec:	cmp	x8, #0x8, lsl #12
  4427f0:	b.ge	4429c0 <_obstack_memory_used@@Base+0x4760>  // b.tcont
  4427f4:	mov	x0, x24
  4427f8:	mov	x1, x26
  4427fc:	mov	x2, x25
  442800:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  442804:	cbz	x19, 4428f8 <_obstack_memory_used@@Base+0x4698>
  442808:	orr	x8, x22, x23
  44280c:	cbz	x8, 44291c <_obstack_memory_used@@Base+0x46bc>
  442810:	subs	x25, x23, #0x1
  442814:	b.ge	442938 <_obstack_memory_used@@Base+0x46d8>  // b.tcont
  442818:	mov	x24, xzr
  44281c:	ldrb	w8, [x19, #48]
  442820:	cmp	w8, #0x11
  442824:	b.ne	44283c <_obstack_memory_used@@Base+0x45dc>  // b.any
  442828:	ldr	x2, [x19, #40]
  44282c:	adrp	x1, 443000 <_obstack_memory_used@@Base+0x4da0>
  442830:	add	x1, x1, #0xa9c
  442834:	mov	x0, x19
  442838:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  44283c:	cmn	x22, #0x1
  442840:	mov	w8, #0xa                   	// #10
  442844:	cinc	w3, w8, eq  // eq = none
  442848:	mov	x0, x21
  44284c:	mov	x1, x19
  442850:	mov	x2, xzr
  442854:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  442858:	cbz	x0, 44299c <_obstack_memory_used@@Base+0x473c>
  44285c:	add	x8, x23, #0x2
  442860:	mov	x25, x0
  442864:	cmp	x8, x22
  442868:	b.gt	4428c4 <_obstack_memory_used@@Base+0x4664>
  44286c:	add	x23, x23, #0x1
  442870:	mov	x0, x19
  442874:	mov	x1, x21
  442878:	bl	4439b4 <_obstack_memory_used@@Base+0x5754>
  44287c:	mov	x19, x0
  442880:	mov	w3, #0x10                  	// #16
  442884:	mov	x0, x21
  442888:	mov	x1, x25
  44288c:	mov	x2, x19
  442890:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  442894:	cbz	x19, 44299c <_obstack_memory_used@@Base+0x473c>
  442898:	mov	x1, x0
  44289c:	cbz	x0, 44299c <_obstack_memory_used@@Base+0x473c>
  4428a0:	mov	w3, #0xa                   	// #10
  4428a4:	mov	x0, x21
  4428a8:	mov	x2, xzr
  4428ac:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  4428b0:	cbz	x0, 44299c <_obstack_memory_used@@Base+0x473c>
  4428b4:	add	x23, x23, #0x1
  4428b8:	mov	x25, x0
  4428bc:	cmp	x23, x22
  4428c0:	b.lt	442870 <_obstack_memory_used@@Base+0x4610>  // b.tstop
  4428c4:	cbz	x24, 4428e4 <_obstack_memory_used@@Base+0x4684>
  4428c8:	mov	w3, #0x10                  	// #16
  4428cc:	mov	x0, x21
  4428d0:	mov	x1, x24
  4428d4:	mov	x2, x25
  4428d8:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  4428dc:	mov	x19, x0
  4428e0:	b	4428f8 <_obstack_memory_used@@Base+0x4698>
  4428e4:	mov	x19, x25
  4428e8:	b	4428f8 <_obstack_memory_used@@Base+0x4698>
  4428ec:	mov	w8, #0xa                   	// #10
  4428f0:	mov	x19, xzr
  4428f4:	str	w8, [x20]
  4428f8:	mov	x0, x19
  4428fc:	ldp	x20, x19, [sp, #96]
  442900:	ldp	x22, x21, [sp, #80]
  442904:	ldp	x24, x23, [sp, #64]
  442908:	ldp	x26, x25, [sp, #48]
  44290c:	ldr	x27, [sp, #32]
  442910:	ldp	x29, x30, [sp, #16]
  442914:	add	sp, sp, #0x70
  442918:	ret
  44291c:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x2da0>
  442920:	add	x1, x1, #0x7ac
  442924:	mov	x0, x19
  442928:	mov	x2, xzr
  44292c:	bl	441708 <_obstack_memory_used@@Base+0x34a8>
  442930:	mov	x19, xzr
  442934:	b	4428f8 <_obstack_memory_used@@Base+0x4698>
  442938:	mov	x24, x19
  44293c:	b.eq	442978 <_obstack_memory_used@@Base+0x4718>  // b.none
  442940:	mov	x0, x19
  442944:	mov	x1, x21
  442948:	bl	4439b4 <_obstack_memory_used@@Base+0x5754>
  44294c:	mov	x19, x0
  442950:	mov	w3, #0x10                  	// #16
  442954:	mov	x0, x21
  442958:	mov	x1, x24
  44295c:	mov	x2, x19
  442960:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  442964:	cbz	x19, 44299c <_obstack_memory_used@@Base+0x473c>
  442968:	mov	x24, x0
  44296c:	cbz	x0, 44299c <_obstack_memory_used@@Base+0x473c>
  442970:	subs	x25, x25, #0x1
  442974:	b.ne	442940 <_obstack_memory_used@@Base+0x46e0>  // b.any
  442978:	cmp	x23, x22
  44297c:	b.ne	442988 <_obstack_memory_used@@Base+0x4728>  // b.any
  442980:	mov	x19, x24
  442984:	b	4428f8 <_obstack_memory_used@@Base+0x4698>
  442988:	mov	x0, x19
  44298c:	mov	x1, x21
  442990:	bl	4439b4 <_obstack_memory_used@@Base+0x5754>
  442994:	mov	x19, x0
  442998:	cbnz	x0, 44281c <_obstack_memory_used@@Base+0x45bc>
  44299c:	mov	w8, #0xc                   	// #12
  4429a0:	b	4428f0 <_obstack_memory_used@@Base+0x4690>
  4429a4:	tbz	w25, #21, 4429c8 <_obstack_memory_used@@Base+0x4768>
  4429a8:	str	x27, [x26, #72]
  4429ac:	ldr	q0, [sp]
  4429b0:	mov	w8, #0x1                   	// #1
  4429b4:	str	q0, [x24]
  4429b8:	strb	w8, [x24, #8]
  4429bc:	b	4428f8 <_obstack_memory_used@@Base+0x4698>
  4429c0:	mov	w8, #0xf                   	// #15
  4429c4:	b	4428f0 <_obstack_memory_used@@Base+0x4690>
  4429c8:	ldrb	w8, [x24, #8]
  4429cc:	mov	x19, xzr
  4429d0:	cmp	w8, #0x2
  4429d4:	mov	w8, #0x9                   	// #9
  4429d8:	cinc	w8, w8, ne  // ne = any
  4429dc:	b	4428f4 <_obstack_memory_used@@Base+0x4694>
  4429e0:	ldr	x9, [x1, #104]
  4429e4:	ldr	x8, [x1, #72]
  4429e8:	cmp	x9, x8
  4429ec:	b.le	442a60 <_obstack_memory_used@@Base+0x4800>
  4429f0:	ldr	x9, [x1, #8]
  4429f4:	ldrb	w9, [x9, x8]
  4429f8:	strb	w9, [x0]
  4429fc:	ldr	w8, [x1, #144]
  442a00:	cmp	w8, #0x2
  442a04:	b.lt	442a28 <_obstack_memory_used@@Base+0x47c8>  // b.tstop
  442a08:	ldr	x8, [x1, #72]
  442a0c:	ldr	x10, [x1, #48]
  442a10:	cmp	x8, x10
  442a14:	b.eq	442a28 <_obstack_memory_used@@Base+0x47c8>  // b.none
  442a18:	ldr	x10, [x1, #16]
  442a1c:	ldr	w8, [x10, x8, lsl #2]
  442a20:	cmn	w8, #0x1
  442a24:	b.eq	442ac0 <_obstack_memory_used@@Base+0x4860>  // b.none
  442a28:	tbz	w2, #0, 442a70 <_obstack_memory_used@@Base+0x4810>
  442a2c:	cmp	w9, #0x5c
  442a30:	b.ne	442a70 <_obstack_memory_used@@Base+0x4810>  // b.any
  442a34:	ldr	x8, [x1, #72]
  442a38:	ldr	x10, [x1, #88]
  442a3c:	add	x8, x8, #0x1
  442a40:	cmp	x8, x10
  442a44:	b.ge	442a70 <_obstack_memory_used@@Base+0x4810>  // b.tcont
  442a48:	ldr	x9, [x1, #8]
  442a4c:	str	x8, [x1, #72]
  442a50:	ldrb	w9, [x9, x8]
  442a54:	mov	w8, #0x1                   	// #1
  442a58:	strb	w9, [x0]
  442a5c:	b	442ac4 <_obstack_memory_used@@Base+0x4864>
  442a60:	mov	w9, #0x2                   	// #2
  442a64:	strb	w9, [x0, #8]
  442a68:	mov	w0, wzr
  442a6c:	ret
  442a70:	cmp	w9, #0x5c
  442a74:	b.gt	442aa8 <_obstack_memory_used@@Base+0x4848>
  442a78:	cmp	w9, #0x2d
  442a7c:	b.eq	442ad0 <_obstack_memory_used@@Base+0x4870>  // b.none
  442a80:	cmp	w9, #0x5b
  442a84:	b.ne	442ac0 <_obstack_memory_used@@Base+0x4860>  // b.any
  442a88:	ldr	x8, [x1, #72]
  442a8c:	ldr	x10, [x1, #88]
  442a90:	add	x8, x8, #0x1
  442a94:	cmp	x8, x10
  442a98:	b.ge	442ae8 <_obstack_memory_used@@Base+0x4888>  // b.tcont
  442a9c:	ldr	x10, [x1, #8]
  442aa0:	ldrb	w8, [x10, x8]
  442aa4:	b	442aec <_obstack_memory_used@@Base+0x488c>
  442aa8:	cmp	w9, #0x5d
  442aac:	b.eq	442ad8 <_obstack_memory_used@@Base+0x4878>  // b.none
  442ab0:	cmp	w9, #0x5e
  442ab4:	b.ne	442ac0 <_obstack_memory_used@@Base+0x4860>  // b.any
  442ab8:	mov	w8, #0x19                  	// #25
  442abc:	b	442adc <_obstack_memory_used@@Base+0x487c>
  442ac0:	mov	w8, #0x1                   	// #1
  442ac4:	strb	w8, [x0, #8]
  442ac8:	mov	w0, w8
  442acc:	ret
  442ad0:	mov	w8, #0x16                  	// #22
  442ad4:	b	442adc <_obstack_memory_used@@Base+0x487c>
  442ad8:	mov	w8, #0x15                  	// #21
  442adc:	strb	w8, [x0, #8]
  442ae0:	mov	w0, #0x1                   	// #1
  442ae4:	ret
  442ae8:	mov	w8, wzr
  442aec:	cmp	w8, #0x3d
  442af0:	strb	w8, [x0]
  442af4:	b.eq	442b28 <_obstack_memory_used@@Base+0x48c8>  // b.none
  442af8:	cmp	w8, #0x3a
  442afc:	b.eq	442b10 <_obstack_memory_used@@Base+0x48b0>  // b.none
  442b00:	cmp	w8, #0x2e
  442b04:	b.ne	442b14 <_obstack_memory_used@@Base+0x48b4>  // b.any
  442b08:	mov	w8, #0x1a                  	// #26
  442b0c:	b	442b34 <_obstack_memory_used@@Base+0x48d4>
  442b10:	tbnz	w2, #2, 442b30 <_obstack_memory_used@@Base+0x48d0>
  442b14:	mov	w8, #0x1                   	// #1
  442b18:	strb	w8, [x0, #8]
  442b1c:	strb	w9, [x0]
  442b20:	mov	w0, w8
  442b24:	ret
  442b28:	mov	w8, #0x1c                  	// #28
  442b2c:	b	442b34 <_obstack_memory_used@@Base+0x48d4>
  442b30:	mov	w8, #0x1e                  	// #30
  442b34:	strb	w8, [x0, #8]
  442b38:	mov	w0, #0x2                   	// #2
  442b3c:	ret
  442b40:	add	x8, x1, #0x3f
  442b44:	cmp	x1, #0x0
  442b48:	csel	x8, x8, x1, lt  // lt = tstop
  442b4c:	asr	x8, x8, #6
  442b50:	lsl	x8, x8, #3
  442b54:	ldr	x9, [x0, x8]
  442b58:	mov	w10, #0x1                   	// #1
  442b5c:	lsl	x10, x10, x1
  442b60:	orr	x9, x9, x10
  442b64:	str	x9, [x0, x8]
  442b68:	ret
  442b6c:	sub	sp, sp, #0x60
  442b70:	stp	x29, x30, [sp, #16]
  442b74:	stp	x26, x25, [sp, #32]
  442b78:	stp	x24, x23, [sp, #48]
  442b7c:	stp	x22, x21, [sp, #64]
  442b80:	stp	x20, x19, [sp, #80]
  442b84:	ldr	x24, [x1, #72]
  442b88:	mov	x20, x1
  442b8c:	mov	x19, x0
  442b90:	mov	x0, x1
  442b94:	mov	x1, x24
  442b98:	add	x29, sp, #0x10
  442b9c:	mov	w23, w5
  442ba0:	mov	x22, x4
  442ba4:	mov	w26, w3
  442ba8:	mov	x21, x2
  442bac:	bl	443688 <_obstack_memory_used@@Base+0x5428>
  442bb0:	cmp	w0, #0x2
  442bb4:	b.lt	442bec <_obstack_memory_used@@Base+0x498c>  // b.tstop
  442bb8:	mov	w25, w0
  442bbc:	mov	w8, #0x1                   	// #1
  442bc0:	mov	x0, x20
  442bc4:	mov	x1, x24
  442bc8:	str	w8, [x19]
  442bcc:	bl	44159c <_obstack_memory_used@@Base+0x333c>
  442bd0:	mov	w8, w0
  442bd4:	str	w8, [x19, #8]
  442bd8:	ldr	x8, [x20, #72]
  442bdc:	mov	w0, wzr
  442be0:	add	x8, x8, w25, sxtw
  442be4:	str	x8, [x20, #72]
  442be8:	b	442c60 <_obstack_memory_used@@Base+0x4a00>
  442bec:	add	x8, x24, w26, sxtw
  442bf0:	str	x8, [x20, #72]
  442bf4:	ldrb	w8, [x21, #8]
  442bf8:	sub	w8, w8, #0x16
  442bfc:	cmp	w8, #0x8
  442c00:	b.hi	442c50 <_obstack_memory_used@@Base+0x49f0>  // b.pmore
  442c04:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  442c08:	add	x9, x9, #0x34a
  442c0c:	adr	x10, 442c1c <_obstack_memory_used@@Base+0x49bc>
  442c10:	ldrb	w11, [x9, x8]
  442c14:	add	x10, x10, x11, lsl #2
  442c18:	br	x10
  442c1c:	mov	x0, x19
  442c20:	mov	x1, x20
  442c24:	mov	x2, x21
  442c28:	bl	4436e0 <_obstack_memory_used@@Base+0x5480>
  442c2c:	b	442c60 <_obstack_memory_used@@Base+0x4a00>
  442c30:	tbnz	w23, #0, 442c50 <_obstack_memory_used@@Base+0x49f0>
  442c34:	mov	x0, sp
  442c38:	mov	x1, x20
  442c3c:	mov	x2, x22
  442c40:	bl	4429e0 <_obstack_memory_used@@Base+0x4780>
  442c44:	ldrb	w8, [sp, #8]
  442c48:	cmp	w8, #0x15
  442c4c:	b.ne	442c7c <_obstack_memory_used@@Base+0x4a1c>  // b.any
  442c50:	str	wzr, [x19]
  442c54:	ldrb	w8, [x21]
  442c58:	mov	w0, wzr
  442c5c:	strb	w8, [x19, #8]
  442c60:	ldp	x20, x19, [sp, #80]
  442c64:	ldp	x22, x21, [sp, #64]
  442c68:	ldp	x24, x23, [sp, #48]
  442c6c:	ldp	x26, x25, [sp, #32]
  442c70:	ldp	x29, x30, [sp, #16]
  442c74:	add	sp, sp, #0x60
  442c78:	ret
  442c7c:	mov	w0, #0xb                   	// #11
  442c80:	b	442c60 <_obstack_memory_used@@Base+0x4a00>
  442c84:	stp	x29, x30, [sp, #-80]!
  442c88:	stp	x26, x25, [sp, #16]
  442c8c:	stp	x24, x23, [sp, #32]
  442c90:	stp	x22, x21, [sp, #48]
  442c94:	stp	x20, x19, [sp, #64]
  442c98:	ldr	w26, [x4]
  442c9c:	mov	x22, x0
  442ca0:	mov	w0, #0xb                   	// #11
  442ca4:	mov	x29, sp
  442ca8:	cmp	w26, #0x2
  442cac:	b.eq	442e64 <_obstack_memory_used@@Base+0x4c04>  // b.none
  442cb0:	cmp	w26, #0x4
  442cb4:	b.eq	442e64 <_obstack_memory_used@@Base+0x4c04>  // b.none
  442cb8:	ldr	w25, [x5]
  442cbc:	mov	x23, x5
  442cc0:	mov	w0, #0xb                   	// #11
  442cc4:	cmp	w25, #0x2
  442cc8:	b.eq	442e64 <_obstack_memory_used@@Base+0x4c04>  // b.none
  442ccc:	cmp	w25, #0x4
  442cd0:	b.eq	442e64 <_obstack_memory_used@@Base+0x4c04>  // b.none
  442cd4:	mov	x24, x4
  442cd8:	mov	x21, x3
  442cdc:	mov	x20, x2
  442ce0:	mov	x19, x1
  442ce4:	cmp	w26, #0x3
  442ce8:	b.ne	442cfc <_obstack_memory_used@@Base+0x4a9c>  // b.any
  442cec:	ldr	x0, [x24, #8]
  442cf0:	bl	404190 <strlen@plt>
  442cf4:	cmp	x0, #0x1
  442cf8:	b.hi	442e7c <_obstack_memory_used@@Base+0x4c1c>  // b.pmore
  442cfc:	cmp	w25, #0x3
  442d00:	b.ne	442d14 <_obstack_memory_used@@Base+0x4ab4>  // b.any
  442d04:	ldr	x0, [x23, #8]
  442d08:	bl	404190 <strlen@plt>
  442d0c:	cmp	x0, #0x1
  442d10:	b.hi	442e7c <_obstack_memory_used@@Base+0x4c1c>  // b.pmore
  442d14:	cmp	w26, #0x3
  442d18:	b.eq	442d40 <_obstack_memory_used@@Base+0x4ae0>  // b.none
  442d1c:	cbnz	w26, 442d54 <_obstack_memory_used@@Base+0x4af4>
  442d20:	ldrb	w0, [x24, #8]
  442d24:	cmp	w25, #0x3
  442d28:	b.ne	442d60 <_obstack_memory_used@@Base+0x4b00>  // b.any
  442d2c:	ldr	x8, [x23, #8]
  442d30:	ldrb	w25, [x8]
  442d34:	cmp	w26, #0x3
  442d38:	b.ne	442d80 <_obstack_memory_used@@Base+0x4b20>  // b.any
  442d3c:	b	442d84 <_obstack_memory_used@@Base+0x4b24>
  442d40:	ldr	x8, [x24, #8]
  442d44:	ldrb	w0, [x8]
  442d48:	cmp	w25, #0x3
  442d4c:	b.ne	442d60 <_obstack_memory_used@@Base+0x4b00>  // b.any
  442d50:	b	442d2c <_obstack_memory_used@@Base+0x4acc>
  442d54:	mov	w0, wzr
  442d58:	cmp	w25, #0x3
  442d5c:	b.eq	442d2c <_obstack_memory_used@@Base+0x4acc>  // b.none
  442d60:	cbnz	w25, 442d74 <_obstack_memory_used@@Base+0x4b14>
  442d64:	ldrb	w25, [x23, #8]
  442d68:	cmp	w26, #0x3
  442d6c:	b.ne	442d80 <_obstack_memory_used@@Base+0x4b20>  // b.any
  442d70:	b	442d84 <_obstack_memory_used@@Base+0x4b24>
  442d74:	mov	w25, wzr
  442d78:	cmp	w26, #0x3
  442d7c:	b.eq	442d84 <_obstack_memory_used@@Base+0x4b24>  // b.none
  442d80:	cbnz	w26, 442d94 <_obstack_memory_used@@Base+0x4b34>
  442d84:	mov	x1, x20
  442d88:	bl	4438c4 <_obstack_memory_used@@Base+0x5664>
  442d8c:	mov	w24, w0
  442d90:	b	442d98 <_obstack_memory_used@@Base+0x4b38>
  442d94:	ldr	w24, [x24, #8]
  442d98:	ldr	w8, [x23]
  442d9c:	cmp	w8, #0x3
  442da0:	b.eq	442da8 <_obstack_memory_used@@Base+0x4b48>  // b.none
  442da4:	cbnz	w8, 442dbc <_obstack_memory_used@@Base+0x4b5c>
  442da8:	mov	w0, w25
  442dac:	mov	x1, x20
  442db0:	bl	4438c4 <_obstack_memory_used@@Base+0x5664>
  442db4:	mov	w23, w0
  442db8:	b	442dc0 <_obstack_memory_used@@Base+0x4b60>
  442dbc:	ldr	w23, [x23, #8]
  442dc0:	mov	w9, #0x3                   	// #3
  442dc4:	cmn	w24, #0x1
  442dc8:	mov	w8, #0x1                   	// #1
  442dcc:	b.eq	442e5c <_obstack_memory_used@@Base+0x4bfc>  // b.none
  442dd0:	cmn	w23, #0x1
  442dd4:	b.eq	442e5c <_obstack_memory_used@@Base+0x4bfc>  // b.none
  442dd8:	tbz	w22, #16, 442de4 <_obstack_memory_used@@Base+0x4b84>
  442ddc:	cmp	w24, w23
  442de0:	b.hi	442e84 <_obstack_memory_used@@Base+0x4c24>  // b.pmore
  442de4:	cbz	x20, 442e18 <_obstack_memory_used@@Base+0x4bb8>
  442de8:	ldr	x9, [x21]
  442dec:	ldr	x8, [x20, #64]
  442df0:	cmp	x9, x8
  442df4:	b.eq	442e90 <_obstack_memory_used@@Base+0x4c30>  // b.none
  442df8:	ldr	x8, [x20, #64]
  442dfc:	ldr	x9, [x20, #8]
  442e00:	lsl	x10, x8, #2
  442e04:	str	w24, [x9, x10]
  442e08:	ldr	x9, [x20, #16]
  442e0c:	add	x8, x8, #0x1
  442e10:	str	x8, [x20, #64]
  442e14:	str	w23, [x9, x10]
  442e18:	mov	x20, xzr
  442e1c:	mov	w21, w23
  442e20:	mov	w22, w24
  442e24:	b	442e34 <_obstack_memory_used@@Base+0x4bd4>
  442e28:	add	x20, x20, #0x1
  442e2c:	cmp	x20, #0x100
  442e30:	b.eq	442e54 <_obstack_memory_used@@Base+0x4bf4>  // b.none
  442e34:	cmp	x20, x22
  442e38:	b.cc	442e28 <_obstack_memory_used@@Base+0x4bc8>  // b.lo, b.ul, b.last
  442e3c:	cmp	x20, x21
  442e40:	b.hi	442e28 <_obstack_memory_used@@Base+0x4bc8>  // b.pmore
  442e44:	mov	x0, x19
  442e48:	mov	x1, x20
  442e4c:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  442e50:	b	442e28 <_obstack_memory_used@@Base+0x4bc8>
  442e54:	mov	w8, wzr
  442e58:	mov	w9, #0xc                   	// #12
  442e5c:	cmp	w8, #0x0
  442e60:	csel	w0, wzr, w9, eq  // eq = none
  442e64:	ldp	x20, x19, [sp, #64]
  442e68:	ldp	x22, x21, [sp, #48]
  442e6c:	ldp	x24, x23, [sp, #32]
  442e70:	ldp	x26, x25, [sp, #16]
  442e74:	ldp	x29, x30, [sp], #80
  442e78:	ret
  442e7c:	mov	w0, #0x3                   	// #3
  442e80:	b	442e64 <_obstack_memory_used@@Base+0x4c04>
  442e84:	mov	w9, #0xb                   	// #11
  442e88:	mov	w8, #0x1                   	// #1
  442e8c:	b	442e5c <_obstack_memory_used@@Base+0x4bfc>
  442e90:	ldr	x0, [x20, #8]
  442e94:	mov	w26, #0x1                   	// #1
  442e98:	bfi	x26, x8, #1, #63
  442e9c:	lsl	x25, x26, #2
  442ea0:	mov	x1, x25
  442ea4:	bl	404730 <realloc@plt>
  442ea8:	ldr	x8, [x20, #16]
  442eac:	mov	x22, x0
  442eb0:	mov	x1, x25
  442eb4:	mov	x0, x8
  442eb8:	bl	404730 <realloc@plt>
  442ebc:	mov	x25, x0
  442ec0:	cbz	x22, 442edc <_obstack_memory_used@@Base+0x4c7c>
  442ec4:	cbz	x25, 442edc <_obstack_memory_used@@Base+0x4c7c>
  442ec8:	mov	w8, wzr
  442ecc:	stp	x22, x25, [x20, #8]
  442ed0:	str	x26, [x21]
  442ed4:	cbnz	w8, 442e58 <_obstack_memory_used@@Base+0x4bf8>
  442ed8:	b	442df8 <_obstack_memory_used@@Base+0x4b98>
  442edc:	mov	x0, x22
  442ee0:	bl	4049d0 <free@plt>
  442ee4:	mov	x0, x25
  442ee8:	bl	4049d0 <free@plt>
  442eec:	mov	w8, #0x1                   	// #1
  442ef0:	cbnz	w8, 442e58 <_obstack_memory_used@@Base+0x4bf8>
  442ef4:	b	442df8 <_obstack_memory_used@@Base+0x4b98>
  442ef8:	stp	x29, x30, [sp, #-32]!
  442efc:	stp	x20, x19, [sp, #16]
  442f00:	mov	x19, x0
  442f04:	mov	x0, x1
  442f08:	mov	x29, sp
  442f0c:	mov	x20, x1
  442f10:	bl	404190 <strlen@plt>
  442f14:	cmp	x0, #0x1
  442f18:	b.ne	442f38 <_obstack_memory_used@@Base+0x4cd8>  // b.any
  442f1c:	ldrb	w1, [x20]
  442f20:	mov	x0, x19
  442f24:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  442f28:	mov	w0, wzr
  442f2c:	ldp	x20, x19, [sp, #16]
  442f30:	ldp	x29, x30, [sp], #32
  442f34:	ret
  442f38:	mov	w0, #0x3                   	// #3
  442f3c:	b	442f2c <_obstack_memory_used@@Base+0x4ccc>
  442f40:	stp	x29, x30, [sp, #-32]!
  442f44:	stp	x20, x19, [sp, #16]
  442f48:	mov	x19, x0
  442f4c:	mov	x0, x1
  442f50:	mov	x29, sp
  442f54:	mov	x20, x1
  442f58:	bl	404190 <strlen@plt>
  442f5c:	cmp	x0, #0x1
  442f60:	b.ne	442f80 <_obstack_memory_used@@Base+0x4d20>  // b.any
  442f64:	ldrb	w1, [x20]
  442f68:	mov	x0, x19
  442f6c:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  442f70:	mov	w0, wzr
  442f74:	ldp	x20, x19, [sp, #16]
  442f78:	ldp	x29, x30, [sp], #32
  442f7c:	ret
  442f80:	mov	w0, #0x3                   	// #3
  442f84:	b	442f74 <_obstack_memory_used@@Base+0x4d14>
  442f88:	stp	x29, x30, [sp, #-64]!
  442f8c:	stp	x24, x23, [sp, #16]
  442f90:	stp	x22, x21, [sp, #32]
  442f94:	stp	x20, x19, [sp, #48]
  442f98:	mov	x21, x4
  442f9c:	mov	x23, x3
  442fa0:	mov	x22, x2
  442fa4:	mov	x19, x1
  442fa8:	mov	x20, x0
  442fac:	mov	x29, sp
  442fb0:	tbz	w5, #22, 442fe4 <_obstack_memory_used@@Base+0x4d84>
  442fb4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  442fb8:	add	x1, x1, #0x628
  442fbc:	mov	x0, x21
  442fc0:	bl	404920 <strcmp@plt>
  442fc4:	cbz	w0, 442fdc <_obstack_memory_used@@Base+0x4d7c>
  442fc8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  442fcc:	add	x1, x1, #0x62e
  442fd0:	mov	x0, x21
  442fd4:	bl	404920 <strcmp@plt>
  442fd8:	cbnz	w0, 442fe4 <_obstack_memory_used@@Base+0x4d84>
  442fdc:	adrp	x21, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  442fe0:	add	x21, x21, #0x634
  442fe4:	ldr	x9, [x23]
  442fe8:	ldr	x8, [x22, #72]
  442fec:	cmp	x9, x8
  442ff0:	b.eq	443510 <_obstack_memory_used@@Base+0x52b0>  // b.none
  442ff4:	mov	x0, x21
  442ff8:	bl	404250 <wctype@plt>
  442ffc:	ldr	x8, [x22, #72]
  443000:	ldr	x9, [x22, #24]
  443004:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443008:	add	x1, x1, #0x5a8
  44300c:	add	x10, x8, #0x1
  443010:	str	x10, [x22, #72]
  443014:	str	x0, [x9, x8, lsl #3]
  443018:	mov	x0, x21
  44301c:	bl	404920 <strcmp@plt>
  443020:	cbz	w0, 443108 <_obstack_memory_used@@Base+0x4ea8>
  443024:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443028:	add	x1, x1, #0x63a
  44302c:	mov	x0, x21
  443030:	bl	404920 <strcmp@plt>
  443034:	cbz	w0, 443144 <_obstack_memory_used@@Base+0x4ee4>
  443038:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44303c:	add	x1, x1, #0x62e
  443040:	mov	x0, x21
  443044:	bl	404920 <strcmp@plt>
  443048:	cbz	w0, 443180 <_obstack_memory_used@@Base+0x4f20>
  44304c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443050:	add	x1, x1, #0x5b0
  443054:	mov	x0, x21
  443058:	bl	404920 <strcmp@plt>
  44305c:	cbz	w0, 4431bc <_obstack_memory_used@@Base+0x4f5c>
  443060:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443064:	add	x1, x1, #0x634
  443068:	mov	x0, x21
  44306c:	bl	404920 <strcmp@plt>
  443070:	cbz	w0, 4431f8 <_obstack_memory_used@@Base+0x4f98>
  443074:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443078:	add	x1, x1, #0x659
  44307c:	mov	x0, x21
  443080:	bl	404920 <strcmp@plt>
  443084:	cbz	w0, 443234 <_obstack_memory_used@@Base+0x4fd4>
  443088:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44308c:	add	x1, x1, #0x640
  443090:	mov	x0, x21
  443094:	bl	404920 <strcmp@plt>
  443098:	cbz	w0, 443288 <_obstack_memory_used@@Base+0x5028>
  44309c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4430a0:	add	x1, x1, #0x628
  4430a4:	mov	x0, x21
  4430a8:	bl	404920 <strcmp@plt>
  4430ac:	cbz	w0, 4432c8 <_obstack_memory_used@@Base+0x5068>
  4430b0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4430b4:	add	x1, x1, #0x646
  4430b8:	mov	x0, x21
  4430bc:	bl	404920 <strcmp@plt>
  4430c0:	cbz	w0, 443308 <_obstack_memory_used@@Base+0x50a8>
  4430c4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4430c8:	add	x1, x1, #0x64c
  4430cc:	mov	x0, x21
  4430d0:	bl	404920 <strcmp@plt>
  4430d4:	cbz	w0, 443374 <_obstack_memory_used@@Base+0x5114>
  4430d8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4430dc:	add	x1, x1, #0x652
  4430e0:	mov	x0, x21
  4430e4:	bl	404920 <strcmp@plt>
  4430e8:	cbz	w0, 4433e0 <_obstack_memory_used@@Base+0x5180>
  4430ec:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4430f0:	add	x1, x1, #0x658
  4430f4:	mov	x0, x21
  4430f8:	bl	404920 <strcmp@plt>
  4430fc:	cbz	w0, 44344c <_obstack_memory_used@@Base+0x51ec>
  443100:	mov	w0, #0x4                   	// #4
  443104:	b	443274 <_obstack_memory_used@@Base+0x5014>
  443108:	bl	404950 <__ctype_b_loc@plt>
  44310c:	mov	x21, x0
  443110:	cbz	x20, 443128 <_obstack_memory_used@@Base+0x4ec8>
  443114:	mov	x22, xzr
  443118:	b	443358 <_obstack_memory_used@@Base+0x50f8>
  44311c:	add	x20, x20, #0x1
  443120:	cmp	x20, #0x100
  443124:	b.eq	443270 <_obstack_memory_used@@Base+0x5010>  // b.none
  443128:	ldr	x8, [x21]
  44312c:	ldrh	w8, [x8, x20, lsl #1]
  443130:	tbz	w8, #3, 44311c <_obstack_memory_used@@Base+0x4ebc>
  443134:	mov	x0, x19
  443138:	mov	x1, x20
  44313c:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443140:	b	44311c <_obstack_memory_used@@Base+0x4ebc>
  443144:	bl	404950 <__ctype_b_loc@plt>
  443148:	mov	x21, x0
  44314c:	cbz	x20, 443164 <_obstack_memory_used@@Base+0x4f04>
  443150:	mov	x22, xzr
  443154:	b	4433c4 <_obstack_memory_used@@Base+0x5164>
  443158:	add	x20, x20, #0x1
  44315c:	cmp	x20, #0x100
  443160:	b.eq	443270 <_obstack_memory_used@@Base+0x5010>  // b.none
  443164:	ldr	x8, [x21]
  443168:	ldrh	w8, [x8, x20, lsl #1]
  44316c:	tbz	w8, #1, 443158 <_obstack_memory_used@@Base+0x4ef8>
  443170:	mov	x0, x19
  443174:	mov	x1, x20
  443178:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  44317c:	b	443158 <_obstack_memory_used@@Base+0x4ef8>
  443180:	bl	404950 <__ctype_b_loc@plt>
  443184:	mov	x21, x0
  443188:	cbz	x20, 4431a0 <_obstack_memory_used@@Base+0x4f40>
  44318c:	mov	x22, xzr
  443190:	b	443430 <_obstack_memory_used@@Base+0x51d0>
  443194:	add	x20, x20, #0x1
  443198:	cmp	x20, #0x100
  44319c:	b.eq	443270 <_obstack_memory_used@@Base+0x5010>  // b.none
  4431a0:	ldr	x8, [x21]
  4431a4:	ldrh	w8, [x8, x20, lsl #1]
  4431a8:	tbz	w8, #9, 443194 <_obstack_memory_used@@Base+0x4f34>
  4431ac:	mov	x0, x19
  4431b0:	mov	x1, x20
  4431b4:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4431b8:	b	443194 <_obstack_memory_used@@Base+0x4f34>
  4431bc:	bl	404950 <__ctype_b_loc@plt>
  4431c0:	mov	x21, x0
  4431c4:	cbz	x20, 4431dc <_obstack_memory_used@@Base+0x4f7c>
  4431c8:	mov	x22, xzr
  4431cc:	b	44349c <_obstack_memory_used@@Base+0x523c>
  4431d0:	add	x20, x20, #0x1
  4431d4:	cmp	x20, #0x100
  4431d8:	b.eq	443270 <_obstack_memory_used@@Base+0x5010>  // b.none
  4431dc:	ldr	x8, [x21]
  4431e0:	ldrh	w8, [x8, x20, lsl #1]
  4431e4:	tbz	w8, #13, 4431d0 <_obstack_memory_used@@Base+0x4f70>
  4431e8:	mov	x0, x19
  4431ec:	mov	x1, x20
  4431f0:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4431f4:	b	4431d0 <_obstack_memory_used@@Base+0x4f70>
  4431f8:	bl	404950 <__ctype_b_loc@plt>
  4431fc:	mov	x21, x0
  443200:	cbz	x20, 443218 <_obstack_memory_used@@Base+0x4fb8>
  443204:	mov	x22, xzr
  443208:	b	4434c8 <_obstack_memory_used@@Base+0x5268>
  44320c:	add	x20, x20, #0x1
  443210:	cmp	x20, #0x100
  443214:	b.eq	443270 <_obstack_memory_used@@Base+0x5010>  // b.none
  443218:	ldr	x8, [x21]
  44321c:	ldrh	w8, [x8, x20, lsl #1]
  443220:	tbz	w8, #10, 44320c <_obstack_memory_used@@Base+0x4fac>
  443224:	mov	x0, x19
  443228:	mov	x1, x20
  44322c:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443230:	b	44320c <_obstack_memory_used@@Base+0x4fac>
  443234:	bl	404950 <__ctype_b_loc@plt>
  443238:	mov	x21, x0
  44323c:	cbz	x20, 443254 <_obstack_memory_used@@Base+0x4ff4>
  443240:	mov	x22, xzr
  443244:	b	4434f4 <_obstack_memory_used@@Base+0x5294>
  443248:	add	x20, x20, #0x1
  44324c:	cmp	x20, #0x100
  443250:	b.eq	443270 <_obstack_memory_used@@Base+0x5010>  // b.none
  443254:	ldr	x8, [x21]
  443258:	ldrh	w8, [x8, x20, lsl #1]
  44325c:	tbz	w8, #11, 443248 <_obstack_memory_used@@Base+0x4fe8>
  443260:	mov	x0, x19
  443264:	mov	x1, x20
  443268:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  44326c:	b	443248 <_obstack_memory_used@@Base+0x4fe8>
  443270:	mov	w0, wzr
  443274:	ldp	x20, x19, [sp, #48]
  443278:	ldp	x22, x21, [sp, #32]
  44327c:	ldp	x24, x23, [sp, #16]
  443280:	ldp	x29, x30, [sp], #64
  443284:	ret
  443288:	bl	404950 <__ctype_b_loc@plt>
  44328c:	mov	x21, x0
  443290:	cbz	x20, 4432ac <_obstack_memory_used@@Base+0x504c>
  443294:	mov	x22, xzr
  443298:	b	443544 <_obstack_memory_used@@Base+0x52e4>
  44329c:	add	x20, x20, #0x1
  4432a0:	cmp	x20, #0x100
  4432a4:	mov	w0, wzr
  4432a8:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  4432ac:	ldr	x8, [x21]
  4432b0:	ldrh	w8, [x8, x20, lsl #1]
  4432b4:	tbz	w8, #14, 44329c <_obstack_memory_used@@Base+0x503c>
  4432b8:	mov	x0, x19
  4432bc:	mov	x1, x20
  4432c0:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4432c4:	b	44329c <_obstack_memory_used@@Base+0x503c>
  4432c8:	bl	404950 <__ctype_b_loc@plt>
  4432cc:	mov	x21, x0
  4432d0:	cbz	x20, 4432ec <_obstack_memory_used@@Base+0x508c>
  4432d4:	mov	x22, xzr
  4432d8:	b	443570 <_obstack_memory_used@@Base+0x5310>
  4432dc:	add	x20, x20, #0x1
  4432e0:	cmp	x20, #0x100
  4432e4:	mov	w0, wzr
  4432e8:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  4432ec:	ldr	x8, [x21]
  4432f0:	ldrh	w8, [x8, x20, lsl #1]
  4432f4:	tbz	w8, #8, 4432dc <_obstack_memory_used@@Base+0x507c>
  4432f8:	mov	x0, x19
  4432fc:	mov	x1, x20
  443300:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443304:	b	4432dc <_obstack_memory_used@@Base+0x507c>
  443308:	bl	404950 <__ctype_b_loc@plt>
  44330c:	mov	x21, x0
  443310:	cbz	x20, 44332c <_obstack_memory_used@@Base+0x50cc>
  443314:	mov	x22, xzr
  443318:	b	44359c <_obstack_memory_used@@Base+0x533c>
  44331c:	add	x20, x20, #0x1
  443320:	cmp	x20, #0x100
  443324:	mov	w0, wzr
  443328:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  44332c:	ldr	x8, [x21]
  443330:	ldrh	w8, [x8, x20, lsl #1]
  443334:	tbz	w8, #0, 44331c <_obstack_memory_used@@Base+0x50bc>
  443338:	mov	x0, x19
  44333c:	mov	x1, x20
  443340:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443344:	b	44331c <_obstack_memory_used@@Base+0x50bc>
  443348:	add	x22, x22, #0x1
  44334c:	cmp	x22, #0x100
  443350:	mov	w0, wzr
  443354:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  443358:	ldr	x8, [x21]
  44335c:	ldrh	w8, [x8, x22, lsl #1]
  443360:	tbz	w8, #3, 443348 <_obstack_memory_used@@Base+0x50e8>
  443364:	ldrb	w1, [x20, x22]
  443368:	mov	x0, x19
  44336c:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443370:	b	443348 <_obstack_memory_used@@Base+0x50e8>
  443374:	bl	404950 <__ctype_b_loc@plt>
  443378:	mov	x21, x0
  44337c:	cbz	x20, 443398 <_obstack_memory_used@@Base+0x5138>
  443380:	mov	x22, xzr
  443384:	b	4435c8 <_obstack_memory_used@@Base+0x5368>
  443388:	add	x20, x20, #0x1
  44338c:	cmp	x20, #0x100
  443390:	mov	w0, wzr
  443394:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  443398:	ldr	x8, [x21]
  44339c:	ldrsh	w8, [x8, x20, lsl #1]
  4433a0:	tbz	w8, #31, 443388 <_obstack_memory_used@@Base+0x5128>
  4433a4:	mov	x0, x19
  4433a8:	mov	x1, x20
  4433ac:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4433b0:	b	443388 <_obstack_memory_used@@Base+0x5128>
  4433b4:	add	x22, x22, #0x1
  4433b8:	cmp	x22, #0x100
  4433bc:	mov	w0, wzr
  4433c0:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  4433c4:	ldr	x8, [x21]
  4433c8:	ldrh	w8, [x8, x22, lsl #1]
  4433cc:	tbz	w8, #1, 4433b4 <_obstack_memory_used@@Base+0x5154>
  4433d0:	ldrb	w1, [x20, x22]
  4433d4:	mov	x0, x19
  4433d8:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4433dc:	b	4433b4 <_obstack_memory_used@@Base+0x5154>
  4433e0:	bl	404950 <__ctype_b_loc@plt>
  4433e4:	mov	x21, x0
  4433e8:	cbz	x20, 443404 <_obstack_memory_used@@Base+0x51a4>
  4433ec:	mov	x22, xzr
  4433f0:	b	4435f4 <_obstack_memory_used@@Base+0x5394>
  4433f4:	add	x20, x20, #0x1
  4433f8:	cmp	x20, #0x100
  4433fc:	mov	w0, wzr
  443400:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  443404:	ldr	x8, [x21]
  443408:	ldrh	w8, [x8, x20, lsl #1]
  44340c:	tbz	w8, #2, 4433f4 <_obstack_memory_used@@Base+0x5194>
  443410:	mov	x0, x19
  443414:	mov	x1, x20
  443418:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  44341c:	b	4433f4 <_obstack_memory_used@@Base+0x5194>
  443420:	add	x22, x22, #0x1
  443424:	cmp	x22, #0x100
  443428:	mov	w0, wzr
  44342c:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  443430:	ldr	x8, [x21]
  443434:	ldrh	w8, [x8, x22, lsl #1]
  443438:	tbz	w8, #9, 443420 <_obstack_memory_used@@Base+0x51c0>
  44343c:	ldrb	w1, [x20, x22]
  443440:	mov	x0, x19
  443444:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443448:	b	443420 <_obstack_memory_used@@Base+0x51c0>
  44344c:	bl	404950 <__ctype_b_loc@plt>
  443450:	mov	x21, x0
  443454:	cbz	x20, 443470 <_obstack_memory_used@@Base+0x5210>
  443458:	mov	x22, xzr
  44345c:	b	443620 <_obstack_memory_used@@Base+0x53c0>
  443460:	add	x20, x20, #0x1
  443464:	cmp	x20, #0x100
  443468:	mov	w0, wzr
  44346c:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  443470:	ldr	x8, [x21]
  443474:	ldrh	w8, [x8, x20, lsl #1]
  443478:	tbz	w8, #12, 443460 <_obstack_memory_used@@Base+0x5200>
  44347c:	mov	x0, x19
  443480:	mov	x1, x20
  443484:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443488:	b	443460 <_obstack_memory_used@@Base+0x5200>
  44348c:	add	x22, x22, #0x1
  443490:	cmp	x22, #0x100
  443494:	mov	w0, wzr
  443498:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  44349c:	ldr	x8, [x21]
  4434a0:	ldrh	w8, [x8, x22, lsl #1]
  4434a4:	tbz	w8, #13, 44348c <_obstack_memory_used@@Base+0x522c>
  4434a8:	ldrb	w1, [x20, x22]
  4434ac:	mov	x0, x19
  4434b0:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4434b4:	b	44348c <_obstack_memory_used@@Base+0x522c>
  4434b8:	add	x22, x22, #0x1
  4434bc:	cmp	x22, #0x100
  4434c0:	mov	w0, wzr
  4434c4:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  4434c8:	ldr	x8, [x21]
  4434cc:	ldrh	w8, [x8, x22, lsl #1]
  4434d0:	tbz	w8, #10, 4434b8 <_obstack_memory_used@@Base+0x5258>
  4434d4:	ldrb	w1, [x20, x22]
  4434d8:	mov	x0, x19
  4434dc:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4434e0:	b	4434b8 <_obstack_memory_used@@Base+0x5258>
  4434e4:	add	x22, x22, #0x1
  4434e8:	cmp	x22, #0x100
  4434ec:	mov	w0, wzr
  4434f0:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  4434f4:	ldr	x8, [x21]
  4434f8:	ldrh	w8, [x8, x22, lsl #1]
  4434fc:	tbz	w8, #11, 4434e4 <_obstack_memory_used@@Base+0x5284>
  443500:	ldrb	w1, [x20, x22]
  443504:	mov	x0, x19
  443508:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  44350c:	b	4434e4 <_obstack_memory_used@@Base+0x5284>
  443510:	ldr	x0, [x22, #24]
  443514:	mov	w24, #0x1                   	// #1
  443518:	bfi	x24, x8, #1, #63
  44351c:	lsl	x1, x24, #3
  443520:	bl	404730 <realloc@plt>
  443524:	cbz	x0, 44363c <_obstack_memory_used@@Base+0x53dc>
  443528:	str	x0, [x22, #24]
  44352c:	str	x24, [x23]
  443530:	b	442ff4 <_obstack_memory_used@@Base+0x4d94>
  443534:	add	x22, x22, #0x1
  443538:	cmp	x22, #0x100
  44353c:	mov	w0, wzr
  443540:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  443544:	ldr	x8, [x21]
  443548:	ldrh	w8, [x8, x22, lsl #1]
  44354c:	tbz	w8, #14, 443534 <_obstack_memory_used@@Base+0x52d4>
  443550:	ldrb	w1, [x20, x22]
  443554:	mov	x0, x19
  443558:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  44355c:	b	443534 <_obstack_memory_used@@Base+0x52d4>
  443560:	add	x22, x22, #0x1
  443564:	cmp	x22, #0x100
  443568:	mov	w0, wzr
  44356c:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  443570:	ldr	x8, [x21]
  443574:	ldrh	w8, [x8, x22, lsl #1]
  443578:	tbz	w8, #8, 443560 <_obstack_memory_used@@Base+0x5300>
  44357c:	ldrb	w1, [x20, x22]
  443580:	mov	x0, x19
  443584:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443588:	b	443560 <_obstack_memory_used@@Base+0x5300>
  44358c:	add	x22, x22, #0x1
  443590:	cmp	x22, #0x100
  443594:	mov	w0, wzr
  443598:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  44359c:	ldr	x8, [x21]
  4435a0:	ldrh	w8, [x8, x22, lsl #1]
  4435a4:	tbz	w8, #0, 44358c <_obstack_memory_used@@Base+0x532c>
  4435a8:	ldrb	w1, [x20, x22]
  4435ac:	mov	x0, x19
  4435b0:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4435b4:	b	44358c <_obstack_memory_used@@Base+0x532c>
  4435b8:	add	x22, x22, #0x1
  4435bc:	cmp	x22, #0x100
  4435c0:	mov	w0, wzr
  4435c4:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  4435c8:	ldr	x8, [x21]
  4435cc:	ldrsh	w8, [x8, x22, lsl #1]
  4435d0:	tbz	w8, #31, 4435b8 <_obstack_memory_used@@Base+0x5358>
  4435d4:	ldrb	w1, [x20, x22]
  4435d8:	mov	x0, x19
  4435dc:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  4435e0:	b	4435b8 <_obstack_memory_used@@Base+0x5358>
  4435e4:	add	x22, x22, #0x1
  4435e8:	cmp	x22, #0x100
  4435ec:	mov	w0, wzr
  4435f0:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  4435f4:	ldr	x8, [x21]
  4435f8:	ldrh	w8, [x8, x22, lsl #1]
  4435fc:	tbz	w8, #2, 4435e4 <_obstack_memory_used@@Base+0x5384>
  443600:	ldrb	w1, [x20, x22]
  443604:	mov	x0, x19
  443608:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  44360c:	b	4435e4 <_obstack_memory_used@@Base+0x5384>
  443610:	add	x22, x22, #0x1
  443614:	cmp	x22, #0x100
  443618:	mov	w0, wzr
  44361c:	b.eq	443274 <_obstack_memory_used@@Base+0x5014>  // b.none
  443620:	ldr	x8, [x21]
  443624:	ldrh	w8, [x8, x22, lsl #1]
  443628:	tbz	w8, #12, 443610 <_obstack_memory_used@@Base+0x53b0>
  44362c:	ldrb	w1, [x20, x22]
  443630:	mov	x0, x19
  443634:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  443638:	b	443610 <_obstack_memory_used@@Base+0x53b0>
  44363c:	mov	w0, #0xc                   	// #12
  443640:	b	443274 <_obstack_memory_used@@Base+0x5014>
  443644:	mov	x8, xzr
  443648:	ldr	x9, [x0, x8]
  44364c:	mvn	x9, x9
  443650:	str	x9, [x0, x8]
  443654:	add	x8, x8, #0x8
  443658:	cmp	x8, #0x20
  44365c:	b.ne	443648 <_obstack_memory_used@@Base+0x53e8>  // b.any
  443660:	ret
  443664:	mov	x8, xzr
  443668:	ldr	x9, [x1, x8]
  44366c:	ldr	x10, [x0, x8]
  443670:	and	x9, x10, x9
  443674:	str	x9, [x0, x8]
  443678:	add	x8, x8, #0x8
  44367c:	cmp	x8, #0x20
  443680:	b.ne	443668 <_obstack_memory_used@@Base+0x5408>  // b.any
  443684:	ret
  443688:	ldr	w9, [x0, #144]
  44368c:	cmp	w9, #0x1
  443690:	b.eq	4436d8 <_obstack_memory_used@@Base+0x5478>  // b.none
  443694:	ldr	x9, [x0, #48]
  443698:	add	x10, x1, #0x1
  44369c:	mov	x8, x0
  4436a0:	cmp	x10, x9
  4436a4:	b.ge	4436d8 <_obstack_memory_used@@Base+0x5478>  // b.tcont
  4436a8:	ldr	x9, [x8, #16]
  4436ac:	mov	w0, #0x1                   	// #1
  4436b0:	add	x9, x9, x1, lsl #2
  4436b4:	ldr	w10, [x9, x0, lsl #2]
  4436b8:	cmn	w10, #0x1
  4436bc:	b.ne	4436d4 <_obstack_memory_used@@Base+0x5474>  // b.any
  4436c0:	ldr	x10, [x8, #48]
  4436c4:	add	x0, x0, #0x1
  4436c8:	add	x11, x1, x0
  4436cc:	cmp	x11, x10
  4436d0:	b.lt	4436b4 <_obstack_memory_used@@Base+0x5454>  // b.tstop
  4436d4:	ret
  4436d8:	mov	w0, #0x1                   	// #1
  4436dc:	ret
  4436e0:	stp	x29, x30, [sp, #-64]!
  4436e4:	stp	x22, x21, [sp, #32]
  4436e8:	stp	x20, x19, [sp, #48]
  4436ec:	ldr	x8, [x1, #104]
  4436f0:	ldr	x9, [x1, #72]
  4436f4:	str	x23, [sp, #16]
  4436f8:	mov	x29, sp
  4436fc:	cmp	x8, x9
  443700:	b.le	4437c0 <_obstack_memory_used@@Base+0x5560>
  443704:	ldrb	w23, [x2]
  443708:	mov	x20, x2
  44370c:	mov	x21, x1
  443710:	mov	x19, x0
  443714:	mov	x22, xzr
  443718:	b	443730 <_obstack_memory_used@@Base+0x54d0>
  44371c:	ldr	x8, [x19, #8]
  443720:	strb	w0, [x8, x22]
  443724:	add	x22, x22, #0x1
  443728:	cmp	x22, #0x20
  44372c:	b.eq	4437c0 <_obstack_memory_used@@Base+0x5560>  // b.none
  443730:	ldrb	w8, [x20, #8]
  443734:	cmp	w8, #0x1e
  443738:	b.ne	443748 <_obstack_memory_used@@Base+0x54e8>  // b.any
  44373c:	mov	x0, x21
  443740:	bl	4437f4 <_obstack_memory_used@@Base+0x5594>
  443744:	b	44375c <_obstack_memory_used@@Base+0x54fc>
  443748:	ldr	x8, [x21, #72]
  44374c:	ldr	x9, [x21, #8]
  443750:	add	x10, x8, #0x1
  443754:	str	x10, [x21, #72]
  443758:	ldrb	w0, [x9, x8]
  44375c:	ldr	x9, [x21, #104]
  443760:	ldr	x8, [x21, #72]
  443764:	cmp	x9, x8
  443768:	b.le	4437c0 <_obstack_memory_used@@Base+0x5560>
  44376c:	cmp	w23, w0, uxtb
  443770:	b.ne	44371c <_obstack_memory_used@@Base+0x54bc>  // b.any
  443774:	ldr	x9, [x21, #8]
  443778:	ldrb	w9, [x9, x8]
  44377c:	cmp	w9, #0x5d
  443780:	b.ne	44371c <_obstack_memory_used@@Base+0x54bc>  // b.any
  443784:	add	x8, x8, #0x1
  443788:	str	x8, [x21, #72]
  44378c:	ldr	x8, [x19, #8]
  443790:	strb	wzr, [x8, x22]
  443794:	ldrb	w8, [x20, #8]
  443798:	cmp	w8, #0x1e
  44379c:	b.eq	4437d8 <_obstack_memory_used@@Base+0x5578>  // b.none
  4437a0:	cmp	w8, #0x1c
  4437a4:	b.eq	4437e4 <_obstack_memory_used@@Base+0x5584>  // b.none
  4437a8:	cmp	w8, #0x1a
  4437ac:	mov	w0, wzr
  4437b0:	b.ne	4437c4 <_obstack_memory_used@@Base+0x5564>  // b.any
  4437b4:	mov	w0, wzr
  4437b8:	mov	w8, #0x3                   	// #3
  4437bc:	b	4437ec <_obstack_memory_used@@Base+0x558c>
  4437c0:	mov	w0, #0x7                   	// #7
  4437c4:	ldp	x20, x19, [sp, #48]
  4437c8:	ldp	x22, x21, [sp, #32]
  4437cc:	ldr	x23, [sp, #16]
  4437d0:	ldp	x29, x30, [sp], #64
  4437d4:	ret
  4437d8:	mov	w0, wzr
  4437dc:	mov	w8, #0x4                   	// #4
  4437e0:	b	4437ec <_obstack_memory_used@@Base+0x558c>
  4437e4:	mov	w0, wzr
  4437e8:	mov	w8, #0x2                   	// #2
  4437ec:	str	w8, [x19]
  4437f0:	b	4437c4 <_obstack_memory_used@@Base+0x5564>
  4437f4:	stp	x29, x30, [sp, #-48]!
  4437f8:	stp	x20, x19, [sp, #32]
  4437fc:	ldrb	w8, [x0, #139]
  443800:	str	x21, [sp, #16]
  443804:	mov	x29, sp
  443808:	cbnz	w8, 443834 <_obstack_memory_used@@Base+0x55d4>
  44380c:	ldr	x8, [x0, #72]
  443810:	ldr	x9, [x0, #8]
  443814:	add	x10, x8, #0x1
  443818:	str	x10, [x0, #72]
  44381c:	ldrb	w19, [x9, x8]
  443820:	mov	w0, w19
  443824:	ldp	x20, x19, [sp, #32]
  443828:	ldr	x21, [sp, #16]
  44382c:	ldp	x29, x30, [sp], #48
  443830:	ret
  443834:	ldrb	w8, [x0, #140]
  443838:	cbz	w8, 443890 <_obstack_memory_used@@Base+0x5630>
  44383c:	ldr	x21, [x0, #72]
  443840:	ldr	x8, [x0, #48]
  443844:	cmp	x21, x8
  443848:	b.eq	44385c <_obstack_memory_used@@Base+0x55fc>  // b.none
  44384c:	ldr	x8, [x0, #16]
  443850:	ldr	w8, [x8, x21, lsl #2]
  443854:	cmn	w8, #0x1
  443858:	b.eq	4438b0 <_obstack_memory_used@@Base+0x5650>  // b.none
  44385c:	ldr	x8, [x0, #24]
  443860:	ldr	x9, [x0, #40]
  443864:	ldr	x10, [x0]
  443868:	ldr	x8, [x8, x21, lsl #3]
  44386c:	add	x8, x9, x8
  443870:	ldrsb	w19, [x10, x8]
  443874:	tbnz	w19, #31, 4438b0 <_obstack_memory_used@@Base+0x5650>
  443878:	mov	x1, x21
  44387c:	mov	x20, x0
  443880:	bl	443688 <_obstack_memory_used@@Base+0x5428>
  443884:	add	x8, x21, w0, sxtw
  443888:	str	x8, [x20, #72]
  44388c:	b	443820 <_obstack_memory_used@@Base+0x55c0>
  443890:	ldr	x8, [x0, #72]
  443894:	ldr	x9, [x0, #40]
  443898:	ldr	x10, [x0]
  44389c:	add	x11, x8, #0x1
  4438a0:	str	x11, [x0, #72]
  4438a4:	add	x8, x8, x9
  4438a8:	ldrb	w19, [x10, x8]
  4438ac:	b	443820 <_obstack_memory_used@@Base+0x55c0>
  4438b0:	ldr	x8, [x0, #8]
  4438b4:	add	x9, x21, #0x1
  4438b8:	str	x9, [x0, #72]
  4438bc:	ldrb	w19, [x8, x21]
  4438c0:	b	443820 <_obstack_memory_used@@Base+0x55c0>
  4438c4:	and	w0, w0, #0xff
  4438c8:	cbz	x1, 4438dc <_obstack_memory_used@@Base+0x567c>
  4438cc:	stp	x29, x30, [sp, #-16]!
  4438d0:	mov	x29, sp
  4438d4:	bl	404850 <btowc@plt>
  4438d8:	ldp	x29, x30, [sp], #16
  4438dc:	ret
  4438e0:	stp	x29, x30, [sp, #-80]!
  4438e4:	str	x25, [sp, #16]
  4438e8:	stp	x24, x23, [sp, #32]
  4438ec:	stp	x22, x21, [sp, #48]
  4438f0:	stp	x20, x19, [sp, #64]
  4438f4:	mov	x19, x2
  4438f8:	mov	x20, x1
  4438fc:	mov	x21, x0
  443900:	mov	x9, #0xffffffffffffffff    	// #-1
  443904:	mov	w23, #0xa                   	// #10
  443908:	mov	w24, #0x8030                	// #32816
  44390c:	mov	w25, #0x8000                	// #32768
  443910:	mov	x29, sp
  443914:	mov	x0, x20
  443918:	mov	x1, x21
  44391c:	mov	x2, x19
  443920:	mov	x22, x9
  443924:	bl	440e2c <_obstack_memory_used@@Base+0x2bcc>
  443928:	ldrb	w10, [x20, #8]
  44392c:	cmp	w10, #0x18
  443930:	b.eq	443998 <_obstack_memory_used@@Base+0x5738>  // b.none
  443934:	cmp	w10, #0x2
  443938:	b.eq	443994 <_obstack_memory_used@@Base+0x5734>  // b.none
  44393c:	ldrb	w8, [x20]
  443940:	cmp	w8, #0x2c
  443944:	b.eq	443998 <_obstack_memory_used@@Base+0x5738>  // b.none
  443948:	cmp	w8, #0x30
  44394c:	mov	x9, #0xfffffffffffffffe    	// #-2
  443950:	b.cc	443914 <_obstack_memory_used@@Base+0x56b4>  // b.lo, b.ul, b.last
  443954:	cmp	w10, #0x1
  443958:	b.ne	443914 <_obstack_memory_used@@Base+0x56b4>  // b.any
  44395c:	cmn	x22, #0x2
  443960:	mov	x9, #0xfffffffffffffffe    	// #-2
  443964:	b.eq	443914 <_obstack_memory_used@@Base+0x56b4>  // b.none
  443968:	cmp	w8, #0x39
  44396c:	b.hi	443914 <_obstack_memory_used@@Base+0x56b4>  // b.pmore
  443970:	cmn	x22, #0x1
  443974:	b.eq	44398c <_obstack_memory_used@@Base+0x572c>  // b.none
  443978:	madd	x8, x22, x23, x8
  44397c:	sub	x9, x8, #0x30
  443980:	cmp	x8, x24
  443984:	csel	x9, x25, x9, gt
  443988:	b	443914 <_obstack_memory_used@@Base+0x56b4>
  44398c:	sub	x9, x8, #0x30
  443990:	b	443914 <_obstack_memory_used@@Base+0x56b4>
  443994:	mov	x22, #0xfffffffffffffffe    	// #-2
  443998:	mov	x0, x22
  44399c:	ldp	x20, x19, [sp, #64]
  4439a0:	ldp	x22, x21, [sp, #48]
  4439a4:	ldp	x24, x23, [sp, #32]
  4439a8:	ldr	x25, [sp, #16]
  4439ac:	ldp	x29, x30, [sp], #80
  4439b0:	ret
  4439b4:	stp	x29, x30, [sp, #-64]!
  4439b8:	str	x23, [sp, #16]
  4439bc:	stp	x22, x21, [sp, #32]
  4439c0:	stp	x20, x19, [sp, #48]
  4439c4:	mov	x3, x0
  4439c8:	ldr	x22, [x3], #40
  4439cc:	mov	x20, x0
  4439d0:	mov	x19, x1
  4439d4:	mov	x0, x1
  4439d8:	mov	x1, xzr
  4439dc:	mov	x2, xzr
  4439e0:	mov	x29, sp
  4439e4:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  4439e8:	str	x0, [x29, #24]
  4439ec:	cbz	x0, 443a80 <_obstack_memory_used@@Base+0x5820>
  4439f0:	add	x23, x29, #0x18
  4439f4:	b	443a08 <_obstack_memory_used@@Base+0x57a8>
  4439f8:	ldr	x21, [x29, #24]
  4439fc:	mov	w8, wzr
  443a00:	cbnz	w8, 443a64 <_obstack_memory_used@@Base+0x5804>
  443a04:	b	443a84 <_obstack_memory_used@@Base+0x5824>
  443a08:	str	x22, [x0]
  443a0c:	ldr	x8, [x23]
  443a10:	ldr	w9, [x8, #48]
  443a14:	orr	w9, w9, #0x40000
  443a18:	str	w9, [x8, #48]
  443a1c:	ldr	x8, [x20, #8]
  443a20:	ldr	x22, [x23]
  443a24:	cbz	x8, 443a40 <_obstack_memory_used@@Base+0x57e0>
  443a28:	add	x23, x22, #0x8
  443a2c:	mov	x20, x8
  443a30:	b	443a64 <_obstack_memory_used@@Base+0x5804>
  443a34:	ldr	x20, [x8]
  443a38:	ldr	x22, [x22]
  443a3c:	cbz	x20, 4439f8 <_obstack_memory_used@@Base+0x5798>
  443a40:	mov	x9, x8
  443a44:	mov	x8, x20
  443a48:	ldr	x20, [x20, #16]
  443a4c:	cmp	x20, x9
  443a50:	b.eq	443a34 <_obstack_memory_used@@Base+0x57d4>  // b.none
  443a54:	cbz	x20, 443a34 <_obstack_memory_used@@Base+0x57d4>
  443a58:	add	x23, x22, #0x10
  443a5c:	mov	w8, #0x1                   	// #1
  443a60:	cbz	w8, 443a84 <_obstack_memory_used@@Base+0x5824>
  443a64:	add	x3, x20, #0x28
  443a68:	mov	x0, x19
  443a6c:	mov	x1, xzr
  443a70:	mov	x2, xzr
  443a74:	bl	441c94 <_obstack_memory_used@@Base+0x3a34>
  443a78:	str	x0, [x23]
  443a7c:	cbnz	x0, 443a08 <_obstack_memory_used@@Base+0x57a8>
  443a80:	mov	x21, xzr
  443a84:	mov	x0, x21
  443a88:	ldp	x20, x19, [sp, #48]
  443a8c:	ldp	x22, x21, [sp, #32]
  443a90:	ldr	x23, [sp, #16]
  443a94:	ldp	x29, x30, [sp], #64
  443a98:	ret
  443a9c:	ldr	w8, [x1, #48]
  443aa0:	and	w9, w8, #0xff
  443aa4:	cmp	w9, #0x11
  443aa8:	b.ne	443ac0 <_obstack_memory_used@@Base+0x5860>  // b.any
  443aac:	ldr	x9, [x1, #40]
  443ab0:	cmp	x9, x0
  443ab4:	b.ne	443ac0 <_obstack_memory_used@@Base+0x5860>  // b.any
  443ab8:	orr	w8, w8, #0x80000
  443abc:	str	w8, [x1, #48]
  443ac0:	mov	w0, wzr
  443ac4:	ret
  443ac8:	stp	x29, x30, [sp, #-48]!
  443acc:	stp	x22, x21, [sp, #16]
  443ad0:	stp	x20, x19, [sp, #32]
  443ad4:	mov	x19, x2
  443ad8:	mov	x20, x1
  443adc:	mov	x22, x0
  443ae0:	mov	x29, sp
  443ae4:	b	443af4 <_obstack_memory_used@@Base+0x5894>
  443ae8:	mov	w9, wzr
  443aec:	mov	x22, x8
  443af0:	cbnz	w9, 443b68 <_obstack_memory_used@@Base+0x5908>
  443af4:	mov	x0, x19
  443af8:	mov	x1, x22
  443afc:	blr	x20
  443b00:	cbnz	w0, 443b5c <_obstack_memory_used@@Base+0x58fc>
  443b04:	ldr	x8, [x22, #8]
  443b08:	cbnz	x8, 443ae8 <_obstack_memory_used@@Base+0x5888>
  443b0c:	mov	x9, xzr
  443b10:	b	443b1c <_obstack_memory_used@@Base+0x58bc>
  443b14:	ldr	x22, [x9]
  443b18:	cbz	x22, 443b44 <_obstack_memory_used@@Base+0x58e4>
  443b1c:	ldr	x8, [x22, #16]
  443b20:	mov	x10, x9
  443b24:	mov	x9, x22
  443b28:	cmp	x8, x10
  443b2c:	b.eq	443b14 <_obstack_memory_used@@Base+0x58b4>  // b.none
  443b30:	cbz	x8, 443b14 <_obstack_memory_used@@Base+0x58b4>
  443b34:	mov	w9, wzr
  443b38:	mov	x22, x8
  443b3c:	cbnz	w9, 443af0 <_obstack_memory_used@@Base+0x5890>
  443b40:	b	443ae8 <_obstack_memory_used@@Base+0x5888>
  443b44:	mov	x8, xzr
  443b48:	mov	w21, wzr
  443b4c:	mov	w9, #0x1                   	// #1
  443b50:	mov	x22, x8
  443b54:	cbnz	w9, 443af0 <_obstack_memory_used@@Base+0x5890>
  443b58:	b	443ae8 <_obstack_memory_used@@Base+0x5888>
  443b5c:	mov	w9, #0x1                   	// #1
  443b60:	mov	w21, w0
  443b64:	b	443af0 <_obstack_memory_used@@Base+0x5890>
  443b68:	mov	w0, w21
  443b6c:	ldp	x20, x19, [sp, #32]
  443b70:	ldp	x22, x21, [sp, #16]
  443b74:	ldp	x29, x30, [sp], #48
  443b78:	ret
  443b7c:	ldrb	w8, [x1, #48]
  443b80:	cmp	w8, #0x11
  443b84:	b.eq	443bc8 <_obstack_memory_used@@Base+0x5968>  // b.none
  443b88:	cmp	w8, #0x4
  443b8c:	b.ne	443c1c <_obstack_memory_used@@Base+0x59bc>  // b.any
  443b90:	ldr	x9, [x0, #224]
  443b94:	cbz	x9, 443bc0 <_obstack_memory_used@@Base+0x5960>
  443b98:	ldr	x8, [x1, #40]
  443b9c:	mov	w10, #0x1                   	// #1
  443ba0:	sbfiz	x8, x8, #3, #32
  443ba4:	ldr	x8, [x9, x8]
  443ba8:	str	x8, [x1, #40]
  443bac:	ldr	x9, [x0, #160]
  443bb0:	lsl	w8, w10, w8
  443bb4:	sxtw	x8, w8
  443bb8:	orr	x8, x9, x8
  443bbc:	b	443c18 <_obstack_memory_used@@Base+0x59b8>
  443bc0:	cmp	w8, #0x11
  443bc4:	b.ne	443c1c <_obstack_memory_used@@Base+0x59bc>  // b.any
  443bc8:	ldr	x8, [x1, #8]
  443bcc:	cbz	x8, 443c1c <_obstack_memory_used@@Base+0x59bc>
  443bd0:	ldrb	w9, [x8, #48]
  443bd4:	cmp	w9, #0x11
  443bd8:	b.ne	443c1c <_obstack_memory_used@@Base+0x59bc>  // b.any
  443bdc:	ldr	x9, [x8, #8]
  443be0:	ldr	x8, [x8, #40]
  443be4:	str	x9, [x1, #8]
  443be8:	cbz	x9, 443bf0 <_obstack_memory_used@@Base+0x5990>
  443bec:	str	x1, [x9]
  443bf0:	ldr	x9, [x0, #224]
  443bf4:	ldr	x10, [x1, #40]
  443bf8:	cmp	x8, #0x3f
  443bfc:	ldr	x10, [x9, x10, lsl #3]
  443c00:	str	x10, [x9, x8, lsl #3]
  443c04:	b.gt	443c1c <_obstack_memory_used@@Base+0x59bc>
  443c08:	ldr	x9, [x0, #160]
  443c0c:	mov	w10, #0x1                   	// #1
  443c10:	lsl	x8, x10, x8
  443c14:	bic	x8, x9, x8
  443c18:	str	x8, [x0, #160]
  443c1c:	mov	w0, wzr
  443c20:	ret
  443c24:	sub	sp, sp, #0x30
  443c28:	stp	x29, x30, [sp, #16]
  443c2c:	add	x29, sp, #0x10
  443c30:	stp	x20, x19, [sp, #32]
  443c34:	stur	wzr, [x29, #-4]
  443c38:	ldr	x2, [x1, #8]
  443c3c:	mov	x19, x1
  443c40:	mov	x20, x0
  443c44:	cbz	x2, 443c6c <_obstack_memory_used@@Base+0x5a0c>
  443c48:	ldrb	w8, [x2, #48]
  443c4c:	cmp	w8, #0x11
  443c50:	b.ne	443c6c <_obstack_memory_used@@Base+0x5a0c>  // b.any
  443c54:	sub	x0, x29, #0x4
  443c58:	mov	x1, x20
  443c5c:	bl	444134 <_obstack_memory_used@@Base+0x5ed4>
  443c60:	str	x0, [x19, #8]
  443c64:	cbz	x0, 443c6c <_obstack_memory_used@@Base+0x5a0c>
  443c68:	str	x19, [x0]
  443c6c:	ldr	x2, [x19, #16]
  443c70:	cbz	x2, 443c98 <_obstack_memory_used@@Base+0x5a38>
  443c74:	ldrb	w8, [x2, #48]
  443c78:	cmp	w8, #0x11
  443c7c:	b.ne	443c98 <_obstack_memory_used@@Base+0x5a38>  // b.any
  443c80:	sub	x0, x29, #0x4
  443c84:	mov	x1, x20
  443c88:	bl	444134 <_obstack_memory_used@@Base+0x5ed4>
  443c8c:	str	x0, [x19, #16]
  443c90:	cbz	x0, 443c98 <_obstack_memory_used@@Base+0x5a38>
  443c94:	str	x19, [x0]
  443c98:	ldur	w0, [x29, #-4]
  443c9c:	ldp	x20, x19, [sp, #32]
  443ca0:	ldp	x29, x30, [sp, #16]
  443ca4:	add	sp, sp, #0x30
  443ca8:	ret
  443cac:	stp	x29, x30, [sp, #-32]!
  443cb0:	stp	x20, x19, [sp, #16]
  443cb4:	ldrb	w8, [x1, #48]
  443cb8:	mov	x19, x1
  443cbc:	mov	x29, sp
  443cc0:	cmp	w8, #0x10
  443cc4:	b.ne	443ce4 <_obstack_memory_used@@Base+0x5a84>  // b.any
  443cc8:	ldr	x8, [x19, #8]
  443ccc:	mov	w0, wzr
  443cd0:	ldr	x9, [x8, #24]
  443cd4:	str	x9, [x19, #24]
  443cd8:	ldr	x8, [x8, #56]
  443cdc:	str	x8, [x19, #56]
  443ce0:	b	443d34 <_obstack_memory_used@@Base+0x5ad4>
  443ce4:	ldp	x1, x2, [x19, #40]
  443ce8:	mov	x20, x0
  443cec:	str	x19, [x19, #24]
  443cf0:	bl	444258 <_obstack_memory_used@@Base+0x5ff8>
  443cf4:	cmn	x0, #0x1
  443cf8:	str	x0, [x19, #56]
  443cfc:	b.eq	443d40 <_obstack_memory_used@@Base+0x5ae0>  // b.none
  443d00:	ldrb	w9, [x19, #48]
  443d04:	cmp	w9, #0xc
  443d08:	b.ne	443d30 <_obstack_memory_used@@Base+0x5ad0>  // b.any
  443d0c:	ldr	x9, [x20]
  443d10:	mov	x8, x0
  443d14:	ldr	w10, [x19, #40]
  443d18:	mov	w0, wzr
  443d1c:	add	x8, x9, x8, lsl #4
  443d20:	ldr	w9, [x8, #8]
  443d24:	bfi	w9, w10, #8, #10
  443d28:	str	w9, [x8, #8]
  443d2c:	b	443d34 <_obstack_memory_used@@Base+0x5ad4>
  443d30:	mov	w0, wzr
  443d34:	ldp	x20, x19, [sp, #16]
  443d38:	ldp	x29, x30, [sp], #32
  443d3c:	ret
  443d40:	mov	w0, #0xc                   	// #12
  443d44:	b	443d34 <_obstack_memory_used@@Base+0x5ad4>
  443d48:	ldrb	w8, [x1, #48]
  443d4c:	cmp	w8, #0x10
  443d50:	b.eq	443d6c <_obstack_memory_used@@Base+0x5b0c>  // b.none
  443d54:	cmp	w8, #0xb
  443d58:	b.ne	443d7c <_obstack_memory_used@@Base+0x5b1c>  // b.any
  443d5c:	ldr	x8, [x1, #8]
  443d60:	mov	w0, wzr
  443d64:	str	x1, [x8, #32]
  443d68:	ret
  443d6c:	ldp	x9, x8, [x1, #8]
  443d70:	ldr	x10, [x8, #24]
  443d74:	str	x10, [x9, #32]
  443d78:	b	443d94 <_obstack_memory_used@@Base+0x5b34>
  443d7c:	ldr	x8, [x1, #8]
  443d80:	cbz	x8, 443d8c <_obstack_memory_used@@Base+0x5b2c>
  443d84:	ldr	x9, [x1, #32]
  443d88:	str	x9, [x8, #32]
  443d8c:	ldr	x8, [x1, #16]
  443d90:	cbz	x8, 443d9c <_obstack_memory_used@@Base+0x5b3c>
  443d94:	ldr	x9, [x1, #32]
  443d98:	str	x9, [x8, #32]
  443d9c:	mov	w0, wzr
  443da0:	ret
  443da4:	stp	x29, x30, [sp, #-16]!
  443da8:	ldr	w8, [x1, #48]
  443dac:	ldr	x9, [x1, #56]
  443db0:	mov	x29, sp
  443db4:	and	w10, w8, #0xff
  443db8:	sub	w10, w10, #0x2
  443dbc:	cmp	w10, #0xe
  443dc0:	b.hi	443e9c <_obstack_memory_used@@Base+0x5c3c>  // b.pmore
  443dc4:	adrp	x11, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443dc8:	add	x11, x11, #0x353
  443dcc:	adr	x12, 443de0 <_obstack_memory_used@@Base+0x5b80>
  443dd0:	ldrb	w13, [x11, x10]
  443dd4:	add	x12, x12, x13, lsl #2
  443dd8:	mov	w2, wzr
  443ddc:	br	x12
  443de0:	ldr	x8, [x1, #32]
  443de4:	ldr	x10, [x0, #40]
  443de8:	ldr	x1, [x8, #56]
  443dec:	mov	w8, #0x18                  	// #24
  443df0:	madd	x0, x9, x8, x10
  443df4:	bl	4444b4 <_obstack_memory_used@@Base+0x6254>
  443df8:	mov	w2, w0
  443dfc:	b	443eb4 <_obstack_memory_used@@Base+0x5c54>
  443e00:	ldrb	w8, [x0, #176]
  443e04:	add	x10, x1, #0x20
  443e08:	orr	w8, w8, #0x1
  443e0c:	strb	w8, [x0, #176]
  443e10:	ldp	x8, x11, [x1, #8]
  443e14:	add	x12, x8, #0x18
  443e18:	cmp	x8, #0x0
  443e1c:	csel	x8, x10, x12, eq  // eq = none
  443e20:	ldr	x8, [x8]
  443e24:	cmp	x11, #0x0
  443e28:	ldr	x1, [x8, #56]
  443e2c:	add	x8, x11, #0x18
  443e30:	csel	x8, x10, x8, eq  // eq = none
  443e34:	tbnz	x1, #63, 443ec0 <_obstack_memory_used@@Base+0x5c60>
  443e38:	ldr	x8, [x8]
  443e3c:	ldr	x2, [x8, #56]
  443e40:	tbnz	x2, #63, 443ee0 <_obstack_memory_used@@Base+0x5c80>
  443e44:	ldr	x8, [x0, #40]
  443e48:	mov	w10, #0x18                  	// #24
  443e4c:	madd	x0, x9, x10, x8
  443e50:	bl	444424 <_obstack_memory_used@@Base+0x61c4>
  443e54:	mov	w2, w0
  443e58:	b	443eb4 <_obstack_memory_used@@Base+0x5c54>
  443e5c:	ldr	x8, [x1, #32]
  443e60:	ldr	x10, [x0, #24]
  443e64:	ldr	x8, [x8, #56]
  443e68:	str	x8, [x10, x9, lsl #3]
  443e6c:	ldrb	w10, [x1, #48]
  443e70:	cmp	w10, #0x4
  443e74:	b.ne	443e94 <_obstack_memory_used@@Base+0x5c34>  // b.any
  443e78:	ldr	x10, [x0, #40]
  443e7c:	mov	w11, #0x18                  	// #24
  443e80:	mov	x1, x8
  443e84:	madd	x0, x9, x11, x10
  443e88:	b	443df4 <_obstack_memory_used@@Base+0x5b94>
  443e8c:	ldr	x8, [x1, #32]
  443e90:	cbnz	x8, 443f00 <_obstack_memory_used@@Base+0x5ca0>
  443e94:	mov	w2, wzr
  443e98:	b	443eb4 <_obstack_memory_used@@Base+0x5c54>
  443e9c:	tbnz	w8, #3, 443f20 <_obstack_memory_used@@Base+0x5cc0>
  443ea0:	ldr	x8, [x1, #32]
  443ea4:	ldr	x10, [x0, #24]
  443ea8:	mov	w2, wzr
  443eac:	ldr	x8, [x8, #56]
  443eb0:	str	x8, [x10, x9, lsl #3]
  443eb4:	mov	w0, w2
  443eb8:	ldp	x29, x30, [sp], #16
  443ebc:	ret
  443ec0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443ec4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443ec8:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443ecc:	add	x0, x0, #0x6a5
  443ed0:	add	x1, x1, #0x5b6
  443ed4:	add	x3, x3, #0x672
  443ed8:	mov	w2, #0x5af                 	// #1455
  443edc:	bl	404cf0 <__assert_fail@plt>
  443ee0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443ee4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443ee8:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443eec:	add	x0, x0, #0x6af
  443ef0:	add	x1, x1, #0x5b6
  443ef4:	add	x3, x3, #0x672
  443ef8:	mov	w2, #0x5b0                 	// #1456
  443efc:	bl	404cf0 <__assert_fail@plt>
  443f00:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443f04:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443f08:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443f0c:	add	x0, x0, #0x65f
  443f10:	add	x1, x1, #0x5b6
  443f14:	add	x3, x3, #0x672
  443f18:	mov	w2, #0x59f                 	// #1439
  443f1c:	bl	404cf0 <__assert_fail@plt>
  443f20:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443f24:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443f28:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  443f2c:	add	x0, x0, #0x6ba
  443f30:	add	x1, x1, #0x5b6
  443f34:	add	x3, x3, #0x672
  443f38:	mov	w2, #0x5c2                 	// #1474
  443f3c:	bl	404cf0 <__assert_fail@plt>
  443f40:	sub	sp, sp, #0x60
  443f44:	stp	x24, x23, [sp, #48]
  443f48:	stp	x22, x21, [sp, #64]
  443f4c:	stp	x20, x19, [sp, #80]
  443f50:	mov	x19, x0
  443f54:	mov	x8, xzr
  443f58:	mov	w23, wzr
  443f5c:	mov	w22, #0x18                  	// #24
  443f60:	stp	x29, x30, [sp, #32]
  443f64:	add	x29, sp, #0x20
  443f68:	b	443f70 <_obstack_memory_used@@Base+0x5d10>
  443f6c:	add	x8, x8, #0x1
  443f70:	ldr	x10, [x19, #16]
  443f74:	cmp	x8, x10
  443f78:	cset	w9, ne  // ne = any
  443f7c:	csel	x21, x8, xzr, ne  // ne = any
  443f80:	tbnz	w23, #0, 443f98 <_obstack_memory_used@@Base+0x5d38>
  443f84:	cmp	x8, x10
  443f88:	b.ne	443f98 <_obstack_memory_used@@Base+0x5d38>  // b.any
  443f8c:	mov	w24, #0x2                   	// #2
  443f90:	cbnz	w24, 444010 <_obstack_memory_used@@Base+0x5db0>
  443f94:	b	443f6c <_obstack_memory_used@@Base+0x5d0c>
  443f98:	ldr	x8, [x19, #48]
  443f9c:	and	w23, w23, w9
  443fa0:	madd	x8, x21, x22, x8
  443fa4:	ldr	x8, [x8, #8]
  443fa8:	cbz	x8, 443fbc <_obstack_memory_used@@Base+0x5d5c>
  443fac:	mov	w24, #0x4                   	// #4
  443fb0:	mov	x8, x21
  443fb4:	cbnz	w24, 444010 <_obstack_memory_used@@Base+0x5db0>
  443fb8:	b	443f6c <_obstack_memory_used@@Base+0x5d0c>
  443fbc:	add	x0, sp, #0x8
  443fc0:	mov	w3, #0x1                   	// #1
  443fc4:	mov	x1, x19
  443fc8:	mov	x2, x21
  443fcc:	mov	w24, #0x1                   	// #1
  443fd0:	bl	444504 <_obstack_memory_used@@Base+0x62a4>
  443fd4:	cbnz	w0, 44401c <_obstack_memory_used@@Base+0x5dbc>
  443fd8:	ldr	x8, [x19, #48]
  443fdc:	madd	x8, x21, x22, x8
  443fe0:	ldr	x8, [x8, #8]
  443fe4:	cbz	x8, 443ff8 <_obstack_memory_used@@Base+0x5d98>
  443fe8:	mov	w24, wzr
  443fec:	mov	x8, x21
  443ff0:	cbnz	w24, 444010 <_obstack_memory_used@@Base+0x5db0>
  443ff4:	b	443f6c <_obstack_memory_used@@Base+0x5d0c>
  443ff8:	ldr	x0, [sp, #24]
  443ffc:	bl	4049d0 <free@plt>
  444000:	mov	w24, wzr
  444004:	mov	w23, #0x1                   	// #1
  444008:	mov	x8, x21
  44400c:	cbz	w24, 443f6c <_obstack_memory_used@@Base+0x5d0c>
  444010:	cmp	w24, #0x4
  444014:	b.eq	443f6c <_obstack_memory_used@@Base+0x5d0c>  // b.none
  444018:	b	44402c <_obstack_memory_used@@Base+0x5dcc>
  44401c:	mov	x8, x21
  444020:	mov	w20, w0
  444024:	cbnz	w24, 444010 <_obstack_memory_used@@Base+0x5db0>
  444028:	b	443f6c <_obstack_memory_used@@Base+0x5d0c>
  44402c:	cmp	w24, #0x2
  444030:	b.ne	444038 <_obstack_memory_used@@Base+0x5dd8>  // b.any
  444034:	mov	w20, wzr
  444038:	mov	w0, w20
  44403c:	ldp	x20, x19, [sp, #80]
  444040:	ldp	x22, x21, [sp, #64]
  444044:	ldp	x24, x23, [sp, #48]
  444048:	ldp	x29, x30, [sp, #32]
  44404c:	add	sp, sp, #0x60
  444050:	ret
  444054:	stp	x29, x30, [sp, #-64]!
  444058:	stp	x22, x21, [sp, #32]
  44405c:	stp	x20, x19, [sp, #48]
  444060:	ldr	x8, [x0, #16]
  444064:	mov	x19, x0
  444068:	str	x23, [sp, #16]
  44406c:	mov	x29, sp
  444070:	cbz	x8, 4440a0 <_obstack_memory_used@@Base+0x5e40>
  444074:	mov	x8, xzr
  444078:	mov	x9, xzr
  44407c:	ldr	x10, [x19, #56]
  444080:	add	x9, x9, #0x1
  444084:	add	x10, x10, x8
  444088:	stp	xzr, xzr, [x10]
  44408c:	str	xzr, [x10, #16]
  444090:	ldr	x10, [x19, #16]
  444094:	add	x8, x8, #0x18
  444098:	cmp	x9, x10
  44409c:	b.cc	44407c <_obstack_memory_used@@Base+0x5e1c>  // b.lo, b.ul, b.last
  4440a0:	ldr	x8, [x19, #16]
  4440a4:	cbz	x8, 444114 <_obstack_memory_used@@Base+0x5eb4>
  4440a8:	mov	x20, xzr
  4440ac:	mov	w21, #0x18                  	// #24
  4440b0:	b	4440c4 <_obstack_memory_used@@Base+0x5e64>
  4440b4:	ldr	x8, [x19, #16]
  4440b8:	add	x20, x20, #0x1
  4440bc:	cmp	x20, x8
  4440c0:	b.cs	444114 <_obstack_memory_used@@Base+0x5eb4>  // b.hs, b.nlast
  4440c4:	ldr	x8, [x19, #48]
  4440c8:	madd	x8, x20, x21, x8
  4440cc:	ldr	x9, [x8, #8]
  4440d0:	cmp	x9, #0x1
  4440d4:	b.lt	4440b4 <_obstack_memory_used@@Base+0x5e54>  // b.tstop
  4440d8:	ldr	x22, [x8, #16]
  4440dc:	mov	x23, xzr
  4440e0:	ldr	x8, [x19, #56]
  4440e4:	ldr	x9, [x22, x23, lsl #3]
  4440e8:	mov	x1, x20
  4440ec:	madd	x0, x9, x21, x8
  4440f0:	bl	444d54 <_obstack_memory_used@@Base+0x6af4>
  4440f4:	tbz	w0, #0, 44412c <_obstack_memory_used@@Base+0x5ecc>
  4440f8:	ldr	x8, [x19, #48]
  4440fc:	add	x23, x23, #0x1
  444100:	madd	x8, x20, x21, x8
  444104:	ldr	x8, [x8, #8]
  444108:	cmp	x23, x8
  44410c:	b.lt	4440e0 <_obstack_memory_used@@Base+0x5e80>  // b.tstop
  444110:	b	4440b4 <_obstack_memory_used@@Base+0x5e54>
  444114:	mov	w0, wzr
  444118:	ldp	x20, x19, [sp, #48]
  44411c:	ldp	x22, x21, [sp, #32]
  444120:	ldr	x23, [sp, #16]
  444124:	ldp	x29, x30, [sp], #64
  444128:	ret
  44412c:	mov	w0, #0xc                   	// #12
  444130:	b	444118 <_obstack_memory_used@@Base+0x5eb8>
  444134:	stp	x29, x30, [sp, #-80]!
  444138:	stp	x24, x23, [sp, #32]
  44413c:	stp	x22, x21, [sp, #48]
  444140:	stp	x20, x19, [sp, #64]
  444144:	ldr	x19, [x2, #8]
  444148:	ldr	x23, [x1]
  44414c:	mov	x20, x2
  444150:	mov	x21, x0
  444154:	str	x25, [sp, #16]
  444158:	mov	x29, sp
  44415c:	cbz	x19, 444180 <_obstack_memory_used@@Base+0x5f20>
  444160:	ldrb	w8, [x1, #56]
  444164:	tbz	w8, #4, 444180 <_obstack_memory_used@@Base+0x5f20>
  444168:	ldr	x8, [x20, #40]
  44416c:	cmp	x8, #0x3f
  444170:	b.gt	44422c <_obstack_memory_used@@Base+0x5fcc>
  444174:	ldr	x9, [x23, #160]
  444178:	lsr	x8, x9, x8
  44417c:	tbz	w8, #0, 44422c <_obstack_memory_used@@Base+0x5fcc>
  444180:	mov	w3, #0x8                   	// #8
  444184:	mov	x0, x23
  444188:	mov	x1, xzr
  44418c:	mov	x2, xzr
  444190:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  444194:	mov	x22, x0
  444198:	mov	w3, #0x9                   	// #9
  44419c:	mov	x0, x23
  4441a0:	mov	x1, xzr
  4441a4:	mov	x2, xzr
  4441a8:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  4441ac:	mov	x24, x0
  4441b0:	mov	x25, x0
  4441b4:	cbz	x19, 4441d0 <_obstack_memory_used@@Base+0x5f70>
  4441b8:	mov	w3, #0x10                  	// #16
  4441bc:	mov	x0, x23
  4441c0:	mov	x1, x19
  4441c4:	mov	x2, x24
  4441c8:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  4441cc:	mov	x25, x0
  4441d0:	mov	w3, #0x10                  	// #16
  4441d4:	mov	x0, x23
  4441d8:	mov	x1, x22
  4441dc:	mov	x2, x25
  4441e0:	bl	440fa0 <_obstack_memory_used@@Base+0x2d40>
  4441e4:	cbz	x24, 444248 <_obstack_memory_used@@Base+0x5fe8>
  4441e8:	cbz	x22, 444248 <_obstack_memory_used@@Base+0x5fe8>
  4441ec:	cbz	x25, 444248 <_obstack_memory_used@@Base+0x5fe8>
  4441f0:	mov	x19, x0
  4441f4:	cbz	x0, 444248 <_obstack_memory_used@@Base+0x5fe8>
  4441f8:	ldr	x8, [x20, #40]
  4441fc:	str	x8, [x24, #40]
  444200:	str	x8, [x22, #40]
  444204:	ldr	w8, [x20, #48]
  444208:	ldr	w9, [x24, #48]
  44420c:	and	w8, w8, #0x80000
  444210:	and	w9, w9, #0xfff7ffff
  444214:	orr	w9, w9, w8
  444218:	str	w9, [x24, #48]
  44421c:	ldr	w9, [x22, #48]
  444220:	and	w9, w9, #0xfff7ffff
  444224:	orr	w8, w9, w8
  444228:	str	w8, [x22, #48]
  44422c:	mov	x0, x19
  444230:	ldp	x20, x19, [sp, #64]
  444234:	ldp	x22, x21, [sp, #48]
  444238:	ldp	x24, x23, [sp, #32]
  44423c:	ldr	x25, [sp, #16]
  444240:	ldp	x29, x30, [sp], #80
  444244:	ret
  444248:	mov	w8, #0xc                   	// #12
  44424c:	mov	x19, xzr
  444250:	str	w8, [x21]
  444254:	b	44422c <_obstack_memory_used@@Base+0x5fcc>
  444258:	stp	x29, x30, [sp, #-80]!
  44425c:	stp	x26, x25, [sp, #16]
  444260:	stp	x24, x23, [sp, #32]
  444264:	stp	x22, x21, [sp, #48]
  444268:	stp	x20, x19, [sp, #64]
  44426c:	ldp	x24, x8, [x0, #8]
  444270:	mov	x20, x2
  444274:	mov	x19, x0
  444278:	mov	x21, x1
  44427c:	cmp	x8, x24
  444280:	mov	x29, sp
  444284:	b.cs	444354 <_obstack_memory_used@@Base+0x60f4>  // b.hs, b.nlast
  444288:	ldr	x8, [x19]
  44428c:	ldr	x9, [x19, #16]
  444290:	add	x8, x8, x9, lsl #4
  444294:	stp	x21, x20, [x8]
  444298:	ldr	x8, [x19]
  44429c:	ldr	x9, [x19, #16]
  4442a0:	add	x9, x8, x9, lsl #4
  4442a4:	ldr	w10, [x9, #8]
  4442a8:	and	w8, w20, #0xff
  4442ac:	cmp	w8, #0x5
  4442b0:	and	w10, w10, #0xfffc00ff
  4442b4:	str	w10, [x9, #8]
  4442b8:	b.ne	4442d0 <_obstack_memory_used@@Base+0x6070>  // b.any
  4442bc:	ldr	w9, [x19, #180]
  4442c0:	cmp	w9, #0x1
  4442c4:	b.le	4442d0 <_obstack_memory_used@@Base+0x6070>
  4442c8:	mov	w8, #0x100000              	// #1048576
  4442cc:	b	4442dc <_obstack_memory_used@@Base+0x607c>
  4442d0:	cmp	w8, #0x6
  4442d4:	cset	w8, eq  // eq = none
  4442d8:	lsl	w8, w8, #20
  4442dc:	ldr	x9, [x19]
  4442e0:	ldr	x10, [x19, #16]
  4442e4:	add	x9, x9, x10, lsl #4
  4442e8:	ldr	w10, [x9, #8]
  4442ec:	and	w10, w10, #0xffefffff
  4442f0:	orr	w8, w10, w8
  4442f4:	str	w8, [x9, #8]
  4442f8:	ldp	x9, x8, [x19, #16]
  4442fc:	mov	x10, #0xffffffffffffffff    	// #-1
  444300:	str	x10, [x8, x9, lsl #3]
  444304:	ldr	x8, [x19, #40]
  444308:	ldr	x9, [x19, #16]
  44430c:	mov	w10, #0x18                  	// #24
  444310:	madd	x8, x9, x10, x8
  444314:	stp	xzr, xzr, [x8]
  444318:	str	xzr, [x8, #16]
  44431c:	ldr	x8, [x19, #48]
  444320:	ldr	x9, [x19, #16]
  444324:	madd	x8, x9, x10, x8
  444328:	stp	xzr, xzr, [x8]
  44432c:	str	xzr, [x8, #16]
  444330:	ldr	x0, [x19, #16]
  444334:	add	x8, x0, #0x1
  444338:	str	x8, [x19, #16]
  44433c:	ldp	x20, x19, [sp, #64]
  444340:	ldp	x22, x21, [sp, #48]
  444344:	ldp	x24, x23, [sp, #32]
  444348:	ldp	x26, x25, [sp, #16]
  44434c:	ldp	x29, x30, [sp], #80
  444350:	ret
  444354:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  444358:	lsl	x26, x24, #1
  44435c:	movk	x8, #0xaaa, lsl #48
  444360:	cmp	x26, x8
  444364:	b.hi	4443f0 <_obstack_memory_used@@Base+0x6190>  // b.pmore
  444368:	ldr	x0, [x19]
  44436c:	lsl	x1, x24, #5
  444370:	bl	404730 <realloc@plt>
  444374:	cbz	x0, 4443f0 <_obstack_memory_used@@Base+0x6190>
  444378:	ldr	x8, [x19, #24]
  44437c:	lsl	x23, x24, #4
  444380:	str	x0, [x19]
  444384:	mov	x1, x23
  444388:	mov	x0, x8
  44438c:	bl	404730 <realloc@plt>
  444390:	ldr	x8, [x19, #32]
  444394:	mov	x22, x0
  444398:	mov	x1, x23
  44439c:	mov	x0, x8
  4443a0:	bl	404730 <realloc@plt>
  4443a4:	mov	x23, x0
  4443a8:	ldr	x0, [x19, #40]
  4443ac:	add	x8, x24, x24, lsl #1
  4443b0:	lsl	x25, x8, #4
  4443b4:	mov	x1, x25
  4443b8:	bl	404730 <realloc@plt>
  4443bc:	ldr	x8, [x19, #48]
  4443c0:	mov	x24, x0
  4443c4:	mov	x1, x25
  4443c8:	mov	x0, x8
  4443cc:	bl	404730 <realloc@plt>
  4443d0:	cbz	x22, 4443f8 <_obstack_memory_used@@Base+0x6198>
  4443d4:	cbz	x23, 4443f8 <_obstack_memory_used@@Base+0x6198>
  4443d8:	cbz	x24, 4443f8 <_obstack_memory_used@@Base+0x6198>
  4443dc:	cbz	x0, 4443f8 <_obstack_memory_used@@Base+0x6198>
  4443e0:	stp	x22, x23, [x19, #24]
  4443e4:	stp	x24, x0, [x19, #40]
  4443e8:	str	x26, [x19, #8]
  4443ec:	b	444288 <_obstack_memory_used@@Base+0x6028>
  4443f0:	mov	x0, #0xffffffffffffffff    	// #-1
  4443f4:	b	44433c <_obstack_memory_used@@Base+0x60dc>
  4443f8:	mov	x19, x0
  4443fc:	mov	x0, x22
  444400:	bl	4049d0 <free@plt>
  444404:	mov	x0, x23
  444408:	bl	4049d0 <free@plt>
  44440c:	mov	x0, x24
  444410:	bl	4049d0 <free@plt>
  444414:	mov	x0, x19
  444418:	bl	4049d0 <free@plt>
  44441c:	mov	x0, #0xffffffffffffffff    	// #-1
  444420:	b	44433c <_obstack_memory_used@@Base+0x60dc>
  444424:	stp	x29, x30, [sp, #-48]!
  444428:	mov	w8, #0x2                   	// #2
  44442c:	str	x21, [sp, #16]
  444430:	stp	x20, x19, [sp, #32]
  444434:	mov	x21, x0
  444438:	str	x8, [x0]
  44443c:	mov	w0, #0x10                  	// #16
  444440:	mov	x29, sp
  444444:	mov	x20, x2
  444448:	mov	x19, x1
  44444c:	bl	4044f0 <malloc@plt>
  444450:	str	x0, [x21, #16]
  444454:	cbz	x0, 4444ac <_obstack_memory_used@@Base+0x624c>
  444458:	cmp	x19, x20
  44445c:	b.ne	444478 <_obstack_memory_used@@Base+0x6218>  // b.any
  444460:	ldr	x8, [x21, #16]
  444464:	mov	w9, #0x1                   	// #1
  444468:	mov	w0, wzr
  44446c:	str	x9, [x21, #8]
  444470:	str	x19, [x8]
  444474:	b	44449c <_obstack_memory_used@@Base+0x623c>
  444478:	ldr	x8, [x21, #16]
  44447c:	mov	w9, #0x2                   	// #2
  444480:	cmp	x19, x20
  444484:	mov	w0, wzr
  444488:	str	x9, [x21, #8]
  44448c:	b.ge	444498 <_obstack_memory_used@@Base+0x6238>  // b.tcont
  444490:	stp	x19, x20, [x8]
  444494:	b	44449c <_obstack_memory_used@@Base+0x623c>
  444498:	stp	x20, x19, [x8]
  44449c:	ldp	x20, x19, [sp, #32]
  4444a0:	ldr	x21, [sp, #16]
  4444a4:	ldp	x29, x30, [sp], #48
  4444a8:	ret
  4444ac:	mov	w0, #0xc                   	// #12
  4444b0:	b	44449c <_obstack_memory_used@@Base+0x623c>
  4444b4:	stp	x29, x30, [sp, #-32]!
  4444b8:	mov	w8, #0x1                   	// #1
  4444bc:	stp	x20, x19, [sp, #16]
  4444c0:	mov	x19, x0
  4444c4:	stp	x8, x8, [x0]
  4444c8:	mov	w0, #0x8                   	// #8
  4444cc:	mov	x29, sp
  4444d0:	mov	x20, x1
  4444d4:	bl	4044f0 <malloc@plt>
  4444d8:	str	x0, [x19, #16]
  4444dc:	cbz	x0, 4444f8 <_obstack_memory_used@@Base+0x6298>
  4444e0:	mov	x8, x0
  4444e4:	mov	w0, wzr
  4444e8:	str	x20, [x8]
  4444ec:	ldp	x20, x19, [sp, #16]
  4444f0:	ldp	x29, x30, [sp], #32
  4444f4:	ret
  4444f8:	stp	xzr, xzr, [x19]
  4444fc:	mov	w0, #0xc                   	// #12
  444500:	b	4444ec <_obstack_memory_used@@Base+0x628c>
  444504:	sub	sp, sp, #0x90
  444508:	stp	x29, x30, [sp, #48]
  44450c:	stp	x26, x25, [sp, #80]
  444510:	stp	x24, x23, [sp, #96]
  444514:	stp	x22, x21, [sp, #112]
  444518:	stp	x20, x19, [sp, #128]
  44451c:	ldr	x8, [x1, #40]
  444520:	mov	w9, #0x18                  	// #24
  444524:	mov	x22, x1
  444528:	mov	x19, x0
  44452c:	madd	x8, x2, x9, x8
  444530:	ldr	x8, [x8, #8]
  444534:	add	x0, sp, #0x18
  444538:	str	x27, [sp, #64]
  44453c:	add	x29, sp, #0x30
  444540:	add	x1, x8, #0x1
  444544:	mov	w21, w3
  444548:	mov	x20, x2
  44454c:	bl	44475c <_obstack_memory_used@@Base+0x64fc>
  444550:	cbnz	w0, 44474c <_obstack_memory_used@@Base+0x64ec>
  444554:	ldr	x8, [x22, #48]
  444558:	mov	w9, #0x18                  	// #24
  44455c:	madd	x8, x20, x9, x8
  444560:	mov	x9, #0xffffffffffffffff    	// #-1
  444564:	str	x9, [x8, #8]
  444568:	ldr	x8, [x22]
  44456c:	add	x9, x8, x20, lsl #4
  444570:	ldr	w9, [x9, #8]
  444574:	ubfx	w4, w9, #8, #10
  444578:	cbz	w4, 4445c4 <_obstack_memory_used@@Base+0x6364>
  44457c:	ldr	x9, [x22, #40]
  444580:	mov	w10, #0x18                  	// #24
  444584:	madd	x10, x20, x10, x9
  444588:	ldr	x10, [x10, #8]
  44458c:	cbz	x10, 4445c4 <_obstack_memory_used@@Base+0x6364>
  444590:	mov	w10, #0x18                  	// #24
  444594:	madd	x9, x20, x10, x9
  444598:	ldr	x9, [x9, #16]
  44459c:	ldr	x9, [x9]
  4445a0:	add	x8, x8, x9, lsl #4
  4445a4:	ldrb	w8, [x8, #10]
  4445a8:	tbnz	w8, #2, 4445c4 <_obstack_memory_used@@Base+0x6364>
  4445ac:	mov	x0, x22
  4445b0:	mov	x1, x20
  4445b4:	mov	x2, x20
  4445b8:	mov	x3, x20
  4445bc:	bl	444798 <_obstack_memory_used@@Base+0x6538>
  4445c0:	cbnz	w0, 44474c <_obstack_memory_used@@Base+0x64ec>
  4445c4:	ldr	x8, [x22]
  4445c8:	add	x8, x8, x20, lsl #4
  4445cc:	ldrb	w8, [x8, #8]
  4445d0:	tbz	w8, #3, 4446c0 <_obstack_memory_used@@Base+0x6460>
  4445d4:	ldr	x8, [x22, #40]
  4445d8:	mov	w9, #0x18                  	// #24
  4445dc:	madd	x9, x20, x9, x8
  4445e0:	ldr	x9, [x9, #8]
  4445e4:	cmp	x9, #0x1
  4445e8:	b.lt	4446c0 <_obstack_memory_used@@Base+0x6460>  // b.tstop
  4445ec:	mov	w27, wzr
  4445f0:	mov	x25, xzr
  4445f4:	mov	w26, #0x18                  	// #24
  4445f8:	madd	x8, x20, x26, x8
  4445fc:	ldr	x8, [x8, #16]
  444600:	ldr	x24, [x8, x25, lsl #3]
  444604:	ldr	x8, [x22, #48]
  444608:	madd	x9, x24, x26, x8
  44460c:	ldr	x9, [x9, #8]
  444610:	cmn	x9, #0x1
  444614:	b.eq	444638 <_obstack_memory_used@@Base+0x63d8>  // b.none
  444618:	cbnz	x9, 444640 <_obstack_memory_used@@Base+0x63e0>
  44461c:	mov	x0, sp
  444620:	mov	x1, x22
  444624:	mov	x2, x24
  444628:	mov	w3, wzr
  44462c:	bl	444504 <_obstack_memory_used@@Base+0x62a4>
  444630:	cbz	w0, 444654 <_obstack_memory_used@@Base+0x63f4>
  444634:	b	4446b4 <_obstack_memory_used@@Base+0x6454>
  444638:	mov	w8, #0x4                   	// #4
  44463c:	b	444688 <_obstack_memory_used@@Base+0x6428>
  444640:	madd	x8, x24, x26, x8
  444644:	ldr	x9, [x8, #16]
  444648:	ldr	q0, [x8]
  44464c:	str	x9, [sp, #16]
  444650:	str	q0, [sp]
  444654:	add	x0, sp, #0x18
  444658:	mov	x1, sp
  44465c:	bl	4449c4 <_obstack_memory_used@@Base+0x6764>
  444660:	cbnz	w0, 4446b4 <_obstack_memory_used@@Base+0x6454>
  444664:	ldr	x8, [x22, #48]
  444668:	madd	x8, x24, x26, x8
  44466c:	ldr	x8, [x8, #8]
  444670:	cbz	x8, 44467c <_obstack_memory_used@@Base+0x641c>
  444674:	mov	w8, wzr
  444678:	b	44468c <_obstack_memory_used@@Base+0x642c>
  44467c:	ldr	x0, [sp, #16]
  444680:	bl	4049d0 <free@plt>
  444684:	mov	w8, wzr
  444688:	mov	w27, #0x1                   	// #1
  44468c:	orr	w8, w8, #0x4
  444690:	cmp	w8, #0x4
  444694:	b.ne	44471c <_obstack_memory_used@@Base+0x64bc>  // b.any
  444698:	ldr	x8, [x22, #40]
  44469c:	add	x25, x25, #0x1
  4446a0:	madd	x9, x20, x26, x8
  4446a4:	ldr	x9, [x9, #8]
  4446a8:	cmp	x25, x9
  4446ac:	b.lt	4445f8 <_obstack_memory_used@@Base+0x6398>  // b.tstop
  4446b0:	b	444740 <_obstack_memory_used@@Base+0x64e0>
  4446b4:	mov	w8, #0x1                   	// #1
  4446b8:	mov	w23, w0
  4446bc:	b	44468c <_obstack_memory_used@@Base+0x642c>
  4446c0:	mov	w23, #0x1                   	// #1
  4446c4:	add	x0, sp, #0x18
  4446c8:	mov	x1, x20
  4446cc:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  4446d0:	tbz	w0, #0, 444754 <_obstack_memory_used@@Base+0x64f4>
  4446d4:	ldr	x8, [x22, #48]
  4446d8:	orr	w9, w23, w21
  4446dc:	tbz	w9, #0, 4446fc <_obstack_memory_used@@Base+0x649c>
  4446e0:	ldr	x9, [sp, #40]
  4446e4:	ldur	q0, [sp, #24]
  4446e8:	mov	w10, #0x18                  	// #24
  4446ec:	madd	x8, x20, x10, x8
  4446f0:	str	x9, [x8, #16]
  4446f4:	str	q0, [x8]
  4446f8:	b	444708 <_obstack_memory_used@@Base+0x64a8>
  4446fc:	mov	w9, #0x18                  	// #24
  444700:	madd	x8, x20, x9, x8
  444704:	str	xzr, [x8, #8]
  444708:	ldr	x8, [sp, #40]
  44470c:	ldur	q0, [sp, #24]
  444710:	mov	w23, wzr
  444714:	str	x8, [x19, #16]
  444718:	str	q0, [x19]
  44471c:	mov	w0, w23
  444720:	ldp	x20, x19, [sp, #128]
  444724:	ldp	x22, x21, [sp, #112]
  444728:	ldp	x24, x23, [sp, #96]
  44472c:	ldp	x26, x25, [sp, #80]
  444730:	ldr	x27, [sp, #64]
  444734:	ldp	x29, x30, [sp, #48]
  444738:	add	sp, sp, #0x90
  44473c:	ret
  444740:	tst	w27, #0x1
  444744:	cset	w23, eq  // eq = none
  444748:	b	4446c4 <_obstack_memory_used@@Base+0x6464>
  44474c:	mov	w23, w0
  444750:	b	44471c <_obstack_memory_used@@Base+0x64bc>
  444754:	mov	w23, #0xc                   	// #12
  444758:	b	44471c <_obstack_memory_used@@Base+0x64bc>
  44475c:	stp	x29, x30, [sp, #-32]!
  444760:	str	x19, [sp, #16]
  444764:	mov	x19, x0
  444768:	stp	x1, xzr, [x0]
  44476c:	lsl	x0, x1, #3
  444770:	mov	x29, sp
  444774:	bl	4044f0 <malloc@plt>
  444778:	str	x0, [x19, #16]
  44477c:	ldr	x19, [sp, #16]
  444780:	cmp	x0, #0x0
  444784:	mov	w8, #0xc                   	// #12
  444788:	csel	w8, w8, wzr, eq  // eq = none
  44478c:	mov	w0, w8
  444790:	ldp	x29, x30, [sp], #32
  444794:	ret
  444798:	stp	x29, x30, [sp, #-96]!
  44479c:	stp	x28, x27, [sp, #16]
  4447a0:	stp	x24, x23, [sp, #48]
  4447a4:	stp	x22, x21, [sp, #64]
  4447a8:	stp	x20, x19, [sp, #80]
  4447ac:	mov	w19, w4
  4447b0:	mov	x20, x3
  4447b4:	mov	x24, x2
  4447b8:	mov	x23, x1
  4447bc:	mov	x21, x0
  4447c0:	mov	w27, #0x18                  	// #24
  4447c4:	mov	w28, #0xc                   	// #12
  4447c8:	stp	x26, x25, [sp, #32]
  4447cc:	mov	x29, sp
  4447d0:	b	4447e8 <_obstack_memory_used@@Base+0x6588>
  4447d4:	ldr	x8, [x21, #24]
  4447d8:	ldr	x9, [x8, x23, lsl #3]
  4447dc:	str	x9, [x8, x24, lsl #3]
  4447e0:	mov	w8, #0x2                   	// #2
  4447e4:	cbnz	w8, 444998 <_obstack_memory_used@@Base+0x6738>
  4447e8:	ldr	x8, [x21]
  4447ec:	add	x8, x8, x23, lsl #4
  4447f0:	ldrb	w9, [x8, #8]!
  4447f4:	cmp	w9, #0x4
  4447f8:	b.ne	44483c <_obstack_memory_used@@Base+0x65dc>  // b.any
  4447fc:	ldr	x8, [x21, #24]
  444800:	ldr	x9, [x21, #40]
  444804:	mov	x0, x21
  444808:	mov	w2, w19
  44480c:	ldr	x25, [x8, x23, lsl #3]
  444810:	madd	x8, x24, x27, x9
  444814:	str	xzr, [x8, #8]
  444818:	mov	x1, x25
  44481c:	bl	444c40 <_obstack_memory_used@@Base+0x69e0>
  444820:	cmn	x0, #0x1
  444824:	b.eq	44497c <_obstack_memory_used@@Base+0x671c>  // b.none
  444828:	ldr	x8, [x21, #24]
  44482c:	mov	x26, x0
  444830:	ldr	x9, [x8, x23, lsl #3]
  444834:	str	x9, [x8, x24, lsl #3]
  444838:	b	4448fc <_obstack_memory_used@@Base+0x669c>
  44483c:	ldr	x26, [x21, #40]
  444840:	madd	x9, x23, x27, x26
  444844:	ldr	x9, [x9, #8]
  444848:	cbz	x9, 4447d4 <_obstack_memory_used@@Base+0x6574>
  44484c:	madd	x10, x23, x27, x26
  444850:	ldr	x10, [x10, #16]
  444854:	cmp	x9, #0x1
  444858:	ldr	x25, [x10]
  44485c:	madd	x10, x24, x27, x26
  444860:	str	xzr, [x10, #8]
  444864:	b.ne	444898 <_obstack_memory_used@@Base+0x6638>  // b.any
  444868:	cmp	x23, x20
  44486c:	b.ne	4448d4 <_obstack_memory_used@@Base+0x6674>  // b.any
  444870:	cmp	x24, x23
  444874:	b.eq	4448d4 <_obstack_memory_used@@Base+0x6674>  // b.none
  444878:	madd	x0, x24, x27, x26
  44487c:	mov	x1, x25
  444880:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  444884:	tst	w0, #0x1
  444888:	mov	w8, #0x1                   	// #1
  44488c:	cinc	w8, w8, ne  // ne = any
  444890:	csel	w22, w22, w28, ne  // ne = any
  444894:	b	4447e4 <_obstack_memory_used@@Base+0x6584>
  444898:	mov	x0, x21
  44489c:	mov	x1, x25
  4448a0:	mov	w2, w19
  4448a4:	bl	444cdc <_obstack_memory_used@@Base+0x6a7c>
  4448a8:	cmn	x0, #0x1
  4448ac:	b.eq	444920 <_obstack_memory_used@@Base+0x66c0>  // b.none
  4448b0:	mov	x1, x0
  4448b4:	madd	x0, x24, x27, x26
  4448b8:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  4448bc:	tbz	w0, #0, 44497c <_obstack_memory_used@@Base+0x671c>
  4448c0:	ldr	x8, [x21, #40]
  4448c4:	madd	x8, x23, x27, x8
  4448c8:	ldr	x8, [x8, #16]
  4448cc:	ldr	x25, [x8, #8]
  4448d0:	b	4448e0 <_obstack_memory_used@@Base+0x6680>
  4448d4:	ldr	w8, [x8]
  4448d8:	ubfx	w8, w8, #8, #10
  4448dc:	orr	w19, w8, w19
  4448e0:	mov	x0, x21
  4448e4:	mov	x1, x25
  4448e8:	mov	w2, w19
  4448ec:	bl	444c40 <_obstack_memory_used@@Base+0x69e0>
  4448f0:	cmn	x0, #0x1
  4448f4:	b.eq	44497c <_obstack_memory_used@@Base+0x671c>  // b.none
  4448f8:	mov	x26, x0
  4448fc:	ldr	x8, [x21, #40]
  444900:	mov	x1, x26
  444904:	madd	x0, x24, x27, x8
  444908:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  44490c:	tbz	w0, #0, 44497c <_obstack_memory_used@@Base+0x671c>
  444910:	mov	w8, wzr
  444914:	mov	x23, x25
  444918:	mov	x24, x26
  44491c:	b	4447e4 <_obstack_memory_used@@Base+0x6584>
  444920:	mov	x0, x21
  444924:	mov	x1, x25
  444928:	mov	w2, w19
  44492c:	bl	444c40 <_obstack_memory_used@@Base+0x69e0>
  444930:	cmn	x0, #0x1
  444934:	b.eq	444988 <_obstack_memory_used@@Base+0x6728>  // b.none
  444938:	ldr	x8, [x21, #40]
  44493c:	mov	x26, x0
  444940:	mov	x1, x26
  444944:	madd	x0, x24, x27, x8
  444948:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  44494c:	tbz	w0, #0, 444988 <_obstack_memory_used@@Base+0x6728>
  444950:	mov	x0, x21
  444954:	mov	x1, x25
  444958:	mov	x2, x26
  44495c:	mov	x3, x20
  444960:	mov	w4, w19
  444964:	bl	444798 <_obstack_memory_used@@Base+0x6538>
  444968:	cmp	w0, #0x0
  44496c:	cset	w8, ne  // ne = any
  444970:	csel	w22, w22, w0, eq  // eq = none
  444974:	cbnz	w8, 4447e4 <_obstack_memory_used@@Base+0x6584>
  444978:	b	4448c0 <_obstack_memory_used@@Base+0x6660>
  44497c:	mov	w22, #0xc                   	// #12
  444980:	mov	w8, #0x1                   	// #1
  444984:	b	4447e4 <_obstack_memory_used@@Base+0x6584>
  444988:	mov	w22, #0xc                   	// #12
  44498c:	mov	w8, #0x1                   	// #1
  444990:	cbnz	w8, 4447e4 <_obstack_memory_used@@Base+0x6584>
  444994:	b	4448c0 <_obstack_memory_used@@Base+0x6660>
  444998:	cmp	w8, #0x2
  44499c:	b.ne	4449a4 <_obstack_memory_used@@Base+0x6744>  // b.any
  4449a0:	mov	w22, wzr
  4449a4:	mov	w0, w22
  4449a8:	ldp	x20, x19, [sp, #80]
  4449ac:	ldp	x22, x21, [sp, #64]
  4449b0:	ldp	x24, x23, [sp, #48]
  4449b4:	ldp	x26, x25, [sp, #32]
  4449b8:	ldp	x28, x27, [sp, #16]
  4449bc:	ldp	x29, x30, [sp], #96
  4449c0:	ret
  4449c4:	stp	x29, x30, [sp, #-48]!
  4449c8:	str	x21, [sp, #16]
  4449cc:	stp	x20, x19, [sp, #32]
  4449d0:	mov	x29, sp
  4449d4:	cbz	x1, 444abc <_obstack_memory_used@@Base+0x685c>
  4449d8:	ldr	x8, [x1, #8]
  4449dc:	mov	x20, x1
  4449e0:	cbz	x8, 444abc <_obstack_memory_used@@Base+0x685c>
  4449e4:	ldp	x9, x10, [x0]
  4449e8:	mov	x19, x0
  4449ec:	add	x10, x10, x8, lsl #1
  4449f0:	cmp	x9, x10
  4449f4:	b.ge	444a18 <_obstack_memory_used@@Base+0x67b8>  // b.tcont
  4449f8:	ldr	x0, [x19, #16]
  4449fc:	add	x21, x9, x8
  444a00:	lsl	x1, x21, #4
  444a04:	bl	404730 <realloc@plt>
  444a08:	cbz	x0, 444b4c <_obstack_memory_used@@Base+0x68ec>
  444a0c:	lsl	x8, x21, #1
  444a10:	str	x0, [x19, #16]
  444a14:	str	x8, [x19]
  444a18:	ldr	x11, [x19, #8]
  444a1c:	ldr	x10, [x20, #8]
  444a20:	cbz	x11, 444b38 <_obstack_memory_used@@Base+0x68d8>
  444a24:	sub	x8, x10, #0x1
  444a28:	sub	x9, x11, #0x1
  444a2c:	orr	x12, x8, x9
  444a30:	add	x21, x11, x10, lsl #1
  444a34:	tbnz	x12, #63, 444a80 <_obstack_memory_used@@Base+0x6820>
  444a38:	ldr	x10, [x19, #16]
  444a3c:	ldr	x11, [x20, #16]
  444a40:	b	444a58 <_obstack_memory_used@@Base+0x67f8>
  444a44:	sub	x8, x8, #0x1
  444a48:	sub	x21, x21, #0x1
  444a4c:	str	x12, [x10, x21, lsl #3]
  444a50:	orr	x12, x8, x9
  444a54:	tbnz	x12, #63, 444a80 <_obstack_memory_used@@Base+0x6820>
  444a58:	ldr	x13, [x10, x9, lsl #3]
  444a5c:	ldr	x12, [x11, x8, lsl #3]
  444a60:	cmp	x13, x12
  444a64:	b.ne	444a70 <_obstack_memory_used@@Base+0x6810>  // b.any
  444a68:	sub	x8, x8, #0x1
  444a6c:	b	444a74 <_obstack_memory_used@@Base+0x6814>
  444a70:	b.lt	444a44 <_obstack_memory_used@@Base+0x67e4>  // b.tstop
  444a74:	sub	x9, x9, #0x1
  444a78:	orr	x12, x8, x9
  444a7c:	tbz	x12, #63, 444a58 <_obstack_memory_used@@Base+0x67f8>
  444a80:	tbnz	x8, #63, 444aa0 <_obstack_memory_used@@Base+0x6840>
  444a84:	ldr	x9, [x19, #16]
  444a88:	ldr	x1, [x20, #16]
  444a8c:	add	x8, x8, #0x1
  444a90:	sub	x21, x21, x8
  444a94:	add	x0, x9, x21, lsl #3
  444a98:	lsl	x2, x8, #3
  444a9c:	bl	404110 <memcpy@plt>
  444aa0:	ldr	x9, [x19, #8]
  444aa4:	ldr	x8, [x20, #8]
  444aa8:	add	x8, x9, x8, lsl #1
  444aac:	sub	x8, x8, #0x1
  444ab0:	sub	x10, x8, x21
  444ab4:	adds	x11, x10, #0x1
  444ab8:	b.cc	444ad0 <_obstack_memory_used@@Base+0x6870>  // b.lo, b.ul, b.last
  444abc:	mov	w0, wzr
  444ac0:	ldp	x20, x19, [sp, #32]
  444ac4:	ldr	x21, [sp, #16]
  444ac8:	ldp	x29, x30, [sp], #48
  444acc:	ret
  444ad0:	ldr	x0, [x19, #16]
  444ad4:	sub	x10, x9, #0x1
  444ad8:	add	x9, x11, x9
  444adc:	str	x9, [x19, #8]
  444ae0:	add	x9, x0, x10, lsl #3
  444ae4:	lsl	x2, x11, #3
  444ae8:	neg	x11, x11
  444aec:	ldr	x12, [x0, x8, lsl #3]
  444af0:	ldr	x13, [x0, x10, lsl #3]
  444af4:	cmp	x12, x13
  444af8:	b.le	444b14 <_obstack_memory_used@@Base+0x68b4>
  444afc:	sub	x8, x8, #0x1
  444b00:	str	x12, [x9, x2]
  444b04:	adds	x11, x11, #0x1
  444b08:	sub	x2, x2, #0x8
  444b0c:	b.cc	444aec <_obstack_memory_used@@Base+0x688c>  // b.lo, b.ul, b.last
  444b10:	b	444abc <_obstack_memory_used@@Base+0x685c>
  444b14:	str	x13, [x9, x2]
  444b18:	cmp	x10, #0x0
  444b1c:	sub	x10, x10, #0x1
  444b20:	neg	x11, x11
  444b24:	sub	x9, x9, #0x8
  444b28:	b.gt	444ae4 <_obstack_memory_used@@Base+0x6884>
  444b2c:	add	x1, x0, x21, lsl #3
  444b30:	bl	404110 <memcpy@plt>
  444b34:	b	444abc <_obstack_memory_used@@Base+0x685c>
  444b38:	str	x10, [x19, #8]
  444b3c:	ldp	x8, x1, [x20, #8]
  444b40:	ldr	x0, [x19, #16]
  444b44:	lsl	x2, x8, #3
  444b48:	b	444b30 <_obstack_memory_used@@Base+0x68d0>
  444b4c:	mov	w0, #0xc                   	// #12
  444b50:	b	444ac0 <_obstack_memory_used@@Base+0x6860>
  444b54:	stp	x29, x30, [sp, #-32]!
  444b58:	stp	x20, x19, [sp, #16]
  444b5c:	ldr	x8, [x0]
  444b60:	mov	x19, x0
  444b64:	mov	x20, x1
  444b68:	mov	x29, sp
  444b6c:	cbz	x8, 444b94 <_obstack_memory_used@@Base+0x6934>
  444b70:	ldr	x9, [x19, #8]
  444b74:	cbnz	x9, 444bb4 <_obstack_memory_used@@Base+0x6954>
  444b78:	ldr	x8, [x19, #16]
  444b7c:	str	x20, [x8]
  444b80:	ldr	x8, [x19, #8]
  444b84:	mov	w0, #0x1                   	// #1
  444b88:	add	x8, x8, #0x1
  444b8c:	str	x8, [x19, #8]
  444b90:	b	444ba8 <_obstack_memory_used@@Base+0x6948>
  444b94:	mov	x0, x19
  444b98:	mov	x1, x20
  444b9c:	bl	4444b4 <_obstack_memory_used@@Base+0x6254>
  444ba0:	cmp	w0, #0x0
  444ba4:	cset	w0, eq  // eq = none
  444ba8:	ldp	x20, x19, [sp, #16]
  444bac:	ldp	x29, x30, [sp], #32
  444bb0:	ret
  444bb4:	cmp	x8, x9
  444bb8:	b.ne	444bd8 <_obstack_memory_used@@Base+0x6978>  // b.any
  444bbc:	ldr	x0, [x19, #16]
  444bc0:	lsl	x9, x8, #1
  444bc4:	lsl	x1, x8, #4
  444bc8:	str	x9, [x19]
  444bcc:	bl	404730 <realloc@plt>
  444bd0:	cbz	x0, 444ba8 <_obstack_memory_used@@Base+0x6948>
  444bd4:	str	x0, [x19, #16]
  444bd8:	ldp	x9, x8, [x19, #8]
  444bdc:	ldr	x10, [x8]
  444be0:	cmp	x10, x20
  444be4:	b.le	444c10 <_obstack_memory_used@@Base+0x69b0>
  444be8:	cmp	x9, #0x1
  444bec:	b.lt	444c38 <_obstack_memory_used@@Base+0x69d8>  // b.tstop
  444bf0:	mov	x10, x9
  444bf4:	add	x11, x8, x10, lsl #3
  444bf8:	ldur	x12, [x11, #-8]
  444bfc:	subs	x9, x10, #0x1
  444c00:	mov	x10, x9
  444c04:	str	x12, [x11]
  444c08:	b.gt	444bf4 <_obstack_memory_used@@Base+0x6994>
  444c0c:	b	444c38 <_obstack_memory_used@@Base+0x69d8>
  444c10:	add	x10, x8, x9, lsl #3
  444c14:	ldur	x10, [x10, #-8]
  444c18:	cmp	x10, x20
  444c1c:	b.le	444c38 <_obstack_memory_used@@Base+0x69d8>
  444c20:	add	x11, x8, x9, lsl #3
  444c24:	str	x10, [x11]
  444c28:	ldur	x10, [x11, #-16]
  444c2c:	sub	x9, x9, #0x1
  444c30:	cmp	x10, x20
  444c34:	b.gt	444c20 <_obstack_memory_used@@Base+0x69c0>
  444c38:	str	x20, [x8, x9, lsl #3]
  444c3c:	b	444b80 <_obstack_memory_used@@Base+0x6920>
  444c40:	stp	x29, x30, [sp, #-48]!
  444c44:	stp	x20, x19, [sp, #32]
  444c48:	ldr	x8, [x0]
  444c4c:	str	x21, [sp, #16]
  444c50:	mov	x19, x1
  444c54:	mov	w21, w2
  444c58:	add	x8, x8, x1, lsl #4
  444c5c:	ldp	x1, x8, [x8]
  444c60:	mov	x29, sp
  444c64:	mov	x20, x0
  444c68:	mov	x2, x8
  444c6c:	bl	444258 <_obstack_memory_used@@Base+0x5ff8>
  444c70:	cmn	x0, #0x1
  444c74:	b.eq	444ccc <_obstack_memory_used@@Base+0x6a6c>  // b.none
  444c78:	ldr	x8, [x20]
  444c7c:	lsl	x9, x0, #4
  444c80:	add	x8, x8, x9
  444c84:	ldr	w10, [x8, #8]
  444c88:	bfi	w10, w21, #8, #10
  444c8c:	str	w10, [x8, #8]
  444c90:	ldr	x8, [x20]
  444c94:	add	x10, x8, x19, lsl #4
  444c98:	ldr	w10, [x10, #8]
  444c9c:	add	x8, x8, x9
  444ca0:	ldr	w11, [x8, #8]
  444ca4:	and	w10, w10, #0x3ff00
  444ca8:	orr	w10, w10, w11
  444cac:	str	w10, [x8, #8]
  444cb0:	ldr	x8, [x20]
  444cb4:	add	x8, x8, x9
  444cb8:	ldr	w9, [x8, #8]
  444cbc:	orr	w9, w9, #0x40000
  444cc0:	str	w9, [x8, #8]
  444cc4:	ldr	x8, [x20, #32]
  444cc8:	str	x19, [x8, x0, lsl #3]
  444ccc:	ldp	x20, x19, [sp, #32]
  444cd0:	ldr	x21, [sp, #16]
  444cd4:	ldp	x29, x30, [sp], #48
  444cd8:	ret
  444cdc:	ldr	x11, [x0, #16]
  444ce0:	mov	x8, #0xffffffffffffffff    	// #-1
  444ce4:	sub	x9, x11, #0x1
  444ce8:	cmp	x9, #0x1
  444cec:	b.lt	444d44 <_obstack_memory_used@@Base+0x6ae4>  // b.tstop
  444cf0:	ldr	x10, [x0]
  444cf4:	add	x10, x10, x9, lsl #4
  444cf8:	ldr	w12, [x10, #8]
  444cfc:	tbz	w12, #18, 444d44 <_obstack_memory_used@@Base+0x6ae4>
  444d00:	ldr	x10, [x0, #32]
  444d04:	lsl	x8, x11, #4
  444d08:	sub	x11, x8, #0x18
  444d0c:	ldr	x8, [x10, x9, lsl #3]
  444d10:	cmp	x8, x1
  444d14:	b.ne	444d24 <_obstack_memory_used@@Base+0x6ac4>  // b.any
  444d18:	ubfx	w8, w12, #8, #10
  444d1c:	cmp	w8, w2
  444d20:	b.eq	444d4c <_obstack_memory_used@@Base+0x6aec>  // b.none
  444d24:	sub	x9, x9, #0x1
  444d28:	cmp	x9, #0x1
  444d2c:	mov	x8, #0xffffffffffffffff    	// #-1
  444d30:	b.lt	444d44 <_obstack_memory_used@@Base+0x6ae4>  // b.tstop
  444d34:	ldr	x12, [x0]
  444d38:	ldr	w12, [x12, x11]
  444d3c:	sub	x11, x11, #0x10
  444d40:	tbnz	w12, #18, 444d0c <_obstack_memory_used@@Base+0x6aac>
  444d44:	mov	x0, x8
  444d48:	ret
  444d4c:	mov	x0, x9
  444d50:	ret
  444d54:	stp	x29, x30, [sp, #-32]!
  444d58:	stp	x20, x19, [sp, #16]
  444d5c:	ldp	x8, x9, [x0]
  444d60:	mov	x19, x0
  444d64:	mov	x20, x1
  444d68:	mov	x29, sp
  444d6c:	cmp	x8, x9
  444d70:	b.ne	444d94 <_obstack_memory_used@@Base+0x6b34>  // b.any
  444d74:	ldr	x0, [x19, #16]
  444d78:	lsl	x8, x8, #1
  444d7c:	add	x8, x8, #0x2
  444d80:	lsl	x1, x8, #3
  444d84:	str	x8, [x19]
  444d88:	bl	404730 <realloc@plt>
  444d8c:	cbz	x0, 444da8 <_obstack_memory_used@@Base+0x6b48>
  444d90:	str	x0, [x19, #16]
  444d94:	ldp	x8, x9, [x19, #8]
  444d98:	mov	w0, #0x1                   	// #1
  444d9c:	add	x10, x8, #0x1
  444da0:	str	x10, [x19, #8]
  444da4:	str	x20, [x9, x8, lsl #3]
  444da8:	ldp	x20, x19, [sp, #16]
  444dac:	ldp	x29, x30, [sp], #32
  444db0:	ret
  444db4:	stp	x29, x30, [sp, #-48]!
  444db8:	stp	x20, x19, [sp, #32]
  444dbc:	ldr	x8, [x1, #8]
  444dc0:	str	x21, [sp, #16]
  444dc4:	mov	x19, x0
  444dc8:	mov	x29, sp
  444dcc:	str	x8, [x0, #8]
  444dd0:	ldr	x21, [x1, #8]
  444dd4:	cmp	x21, #0x1
  444dd8:	b.lt	444e08 <_obstack_memory_used@@Base+0x6ba8>  // b.tstop
  444ddc:	lsl	x0, x8, #3
  444de0:	mov	x20, x1
  444de4:	str	x8, [x19]
  444de8:	bl	4044f0 <malloc@plt>
  444dec:	str	x0, [x19, #16]
  444df0:	cbz	x0, 444e24 <_obstack_memory_used@@Base+0x6bc4>
  444df4:	ldr	x1, [x20, #16]
  444df8:	lsl	x2, x21, #3
  444dfc:	bl	404110 <memcpy@plt>
  444e00:	mov	w0, wzr
  444e04:	b	444e14 <_obstack_memory_used@@Base+0x6bb4>
  444e08:	mov	w0, wzr
  444e0c:	stp	xzr, xzr, [x19]
  444e10:	str	xzr, [x19, #16]
  444e14:	ldp	x20, x19, [sp, #32]
  444e18:	ldr	x21, [sp, #16]
  444e1c:	ldp	x29, x30, [sp], #48
  444e20:	ret
  444e24:	stp	xzr, xzr, [x19]
  444e28:	mov	w0, #0xc                   	// #12
  444e2c:	b	444e14 <_obstack_memory_used@@Base+0x6bb4>
  444e30:	ldr	x8, [x0, #8]
  444e34:	subs	x8, x8, #0x1
  444e38:	b.lt	444e6c <_obstack_memory_used@@Base+0x6c0c>  // b.tstop
  444e3c:	b.eq	444e74 <_obstack_memory_used@@Base+0x6c14>  // b.none
  444e40:	ldr	x10, [x0, #16]
  444e44:	mov	x9, xzr
  444e48:	add	x11, x8, x9
  444e4c:	lsr	x11, x11, #1
  444e50:	ldr	x12, [x10, x11, lsl #3]
  444e54:	cmp	x12, x1
  444e58:	csinc	x9, x9, x11, ge  // ge = tcont
  444e5c:	csel	x8, x8, x11, lt  // lt = tstop
  444e60:	cmp	x9, x8
  444e64:	b.cc	444e48 <_obstack_memory_used@@Base+0x6be8>  // b.lo, b.ul, b.last
  444e68:	b	444e78 <_obstack_memory_used@@Base+0x6c18>
  444e6c:	mov	x0, xzr
  444e70:	ret
  444e74:	mov	x9, xzr
  444e78:	ldr	x8, [x0, #16]
  444e7c:	ldr	x8, [x8, x9, lsl #3]
  444e80:	cmp	x8, x1
  444e84:	csinc	x0, xzr, x9, ne  // ne = any
  444e88:	ret
  444e8c:	stp	x29, x30, [sp, #-96]!
  444e90:	stp	x28, x27, [sp, #16]
  444e94:	stp	x26, x25, [sp, #32]
  444e98:	stp	x24, x23, [sp, #48]
  444e9c:	stp	x22, x21, [sp, #64]
  444ea0:	stp	x20, x19, [sp, #80]
  444ea4:	ldr	x8, [x2, #8]
  444ea8:	mov	x19, x0
  444eac:	mov	x29, sp
  444eb0:	cbz	x8, 444f80 <_obstack_memory_used@@Base+0x6d20>
  444eb4:	mov	x22, x1
  444eb8:	mov	x0, x2
  444ebc:	mov	w1, w3
  444ec0:	mov	w20, w3
  444ec4:	mov	x21, x2
  444ec8:	bl	444fa8 <_obstack_memory_used@@Base+0x6d48>
  444ecc:	ldr	x9, [x22, #136]
  444ed0:	ldr	x8, [x22, #64]
  444ed4:	mov	w10, #0x18                  	// #24
  444ed8:	mov	x23, x0
  444edc:	and	x9, x9, x0
  444ee0:	madd	x25, x9, x10, x8
  444ee4:	ldr	x10, [x25]
  444ee8:	cmp	x10, #0x1
  444eec:	b.lt	444f58 <_obstack_memory_used@@Base+0x6cf8>  // b.tstop
  444ef0:	mov	w10, #0x18                  	// #24
  444ef4:	madd	x8, x9, x10, x8
  444ef8:	ldr	x27, [x8, #16]
  444efc:	mov	x26, xzr
  444f00:	ldr	x28, [x27, x26, lsl #3]
  444f04:	ldr	x8, [x28]
  444f08:	cmp	x8, x23
  444f0c:	b.ne	444f40 <_obstack_memory_used@@Base+0x6ce0>  // b.any
  444f10:	ldrb	w8, [x28, #104]
  444f14:	and	w8, w8, #0xf
  444f18:	cmp	w8, w20
  444f1c:	b.ne	444f40 <_obstack_memory_used@@Base+0x6ce0>  // b.any
  444f20:	ldr	x0, [x28, #80]
  444f24:	mov	x1, x21
  444f28:	bl	444fd4 <_obstack_memory_used@@Base+0x6d74>
  444f2c:	tbz	w0, #0, 444f40 <_obstack_memory_used@@Base+0x6ce0>
  444f30:	mov	x24, x28
  444f34:	mov	w8, wzr
  444f38:	tbnz	wzr, #0, 444f48 <_obstack_memory_used@@Base+0x6ce8>
  444f3c:	b	444f88 <_obstack_memory_used@@Base+0x6d28>
  444f40:	mov	w8, #0x1                   	// #1
  444f44:	tbz	w8, #0, 444f88 <_obstack_memory_used@@Base+0x6d28>
  444f48:	ldr	x8, [x25]
  444f4c:	add	x26, x26, #0x1
  444f50:	cmp	x26, x8
  444f54:	b.lt	444f00 <_obstack_memory_used@@Base+0x6ca0>  // b.tstop
  444f58:	mov	x0, x22
  444f5c:	mov	x1, x21
  444f60:	mov	w2, w20
  444f64:	mov	x3, x23
  444f68:	bl	445034 <_obstack_memory_used@@Base+0x6dd4>
  444f6c:	mov	x24, x0
  444f70:	cbnz	x0, 444f88 <_obstack_memory_used@@Base+0x6d28>
  444f74:	mov	w8, #0xc                   	// #12
  444f78:	str	w8, [x19]
  444f7c:	b	444f88 <_obstack_memory_used@@Base+0x6d28>
  444f80:	mov	x24, xzr
  444f84:	str	wzr, [x19]
  444f88:	mov	x0, x24
  444f8c:	ldp	x20, x19, [sp, #80]
  444f90:	ldp	x22, x21, [sp, #64]
  444f94:	ldp	x24, x23, [sp, #48]
  444f98:	ldp	x26, x25, [sp, #32]
  444f9c:	ldp	x28, x27, [sp, #16]
  444fa0:	ldp	x29, x30, [sp], #96
  444fa4:	ret
  444fa8:	ldr	x9, [x0, #8]
  444fac:	mov	x8, x0
  444fb0:	cmp	x9, #0x1
  444fb4:	add	x0, x9, w1, uxtw
  444fb8:	b.lt	444fd0 <_obstack_memory_used@@Base+0x6d70>  // b.tstop
  444fbc:	ldr	x8, [x8, #16]
  444fc0:	ldr	x10, [x8], #8
  444fc4:	subs	x9, x9, #0x1
  444fc8:	add	x0, x10, x0
  444fcc:	b.ne	444fc0 <_obstack_memory_used@@Base+0x6d60>  // b.any
  444fd0:	ret
  444fd4:	mov	w8, wzr
  444fd8:	cbz	x0, 445024 <_obstack_memory_used@@Base+0x6dc4>
  444fdc:	cbz	x1, 445024 <_obstack_memory_used@@Base+0x6dc4>
  444fe0:	ldr	x8, [x0, #8]
  444fe4:	ldr	x9, [x1, #8]
  444fe8:	cmp	x8, x9
  444fec:	b.ne	445020 <_obstack_memory_used@@Base+0x6dc0>  // b.any
  444ff0:	sub	x8, x8, #0x1
  444ff4:	add	x9, x8, #0x1
  444ff8:	cmp	x9, #0x1
  444ffc:	b.lt	44502c <_obstack_memory_used@@Base+0x6dcc>  // b.tstop
  445000:	ldr	x9, [x0, #16]
  445004:	ldr	x10, [x1, #16]
  445008:	lsl	x11, x8, #3
  44500c:	sub	x8, x8, #0x1
  445010:	ldr	x9, [x9, x11]
  445014:	ldr	x10, [x10, x11]
  445018:	cmp	x9, x10
  44501c:	b.eq	444ff4 <_obstack_memory_used@@Base+0x6d94>  // b.none
  445020:	mov	w8, wzr
  445024:	mov	w0, w8
  445028:	ret
  44502c:	mov	w0, #0x1                   	// #1
  445030:	ret
  445034:	stp	x29, x30, [sp, #-96]!
  445038:	stp	x24, x23, [sp, #48]
  44503c:	stp	x22, x21, [sp, #64]
  445040:	mov	x23, x1
  445044:	mov	x21, x0
  445048:	mov	w0, #0x70                  	// #112
  44504c:	mov	w1, #0x1                   	// #1
  445050:	str	x27, [sp, #16]
  445054:	stp	x26, x25, [sp, #32]
  445058:	stp	x20, x19, [sp, #80]
  44505c:	mov	x29, sp
  445060:	mov	x20, x3
  445064:	mov	w22, w2
  445068:	bl	4046a0 <calloc@plt>
  44506c:	mov	x19, x0
  445070:	cbz	x0, 4451f0 <_obstack_memory_used@@Base+0x6f90>
  445074:	add	x24, x19, #0x8
  445078:	mov	x0, x24
  44507c:	mov	x1, x23
  445080:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  445084:	cbnz	w0, 4451e4 <_obstack_memory_used@@Base+0x6f84>
  445088:	ldrb	w8, [x19, #104]
  44508c:	str	x24, [x19, #80]
  445090:	bfxil	w8, w22, #0, #4
  445094:	strb	w8, [x19, #104]
  445098:	ldr	x8, [x23, #8]
  44509c:	cmp	x8, #0x1
  4450a0:	b.lt	4451c4 <_obstack_memory_used@@Base+0x6f64>  // b.tstop
  4450a4:	mov	x25, xzr
  4450a8:	mov	x26, xzr
  4450ac:	ldr	x8, [x23, #16]
  4450b0:	ldr	x9, [x21]
  4450b4:	ldr	x8, [x8, x25, lsl #3]
  4450b8:	add	x8, x9, x8, lsl #4
  4450bc:	ldr	w27, [x8, #8]
  4450c0:	and	w8, w27, #0x3ffff
  4450c4:	cmp	w8, #0x1
  4450c8:	b.ne	4450d4 <_obstack_memory_used@@Base+0x6e74>  // b.any
  4450cc:	mov	w8, #0x4                   	// #4
  4450d0:	b	445180 <_obstack_memory_used@@Base+0x6f20>
  4450d4:	ldrb	w9, [x19, #104]
  4450d8:	lsr	w11, w27, #15
  4450dc:	and	w10, w27, #0xff
  4450e0:	and	w11, w11, #0x20
  4450e4:	and	w8, w27, #0x3ff00
  4450e8:	orr	w9, w9, w11
  4450ec:	cmp	w10, #0x2
  4450f0:	strb	w9, [x19, #104]
  4450f4:	b.eq	445108 <_obstack_memory_used@@Base+0x6ea8>  // b.none
  4450f8:	cmp	w10, #0x4
  4450fc:	b.ne	445114 <_obstack_memory_used@@Base+0x6eb4>  // b.any
  445100:	mov	w10, #0x40                  	// #64
  445104:	b	44510c <_obstack_memory_used@@Base+0x6eac>
  445108:	mov	w10, #0x10                  	// #16
  44510c:	orr	w9, w9, w10
  445110:	strb	w9, [x19, #104]
  445114:	cbz	w8, 445180 <_obstack_memory_used@@Base+0x6f20>
  445118:	ldr	x8, [x19, #80]
  44511c:	cmp	x8, x24
  445120:	b.eq	445160 <_obstack_memory_used@@Base+0x6f00>  // b.none
  445124:	tbnz	w22, #0, 44512c <_obstack_memory_used@@Base+0x6ecc>
  445128:	tbnz	w27, #8, 445148 <_obstack_memory_used@@Base+0x6ee8>
  44512c:	tbz	w22, #0, 445134 <_obstack_memory_used@@Base+0x6ed4>
  445130:	tbnz	w27, #9, 445148 <_obstack_memory_used@@Base+0x6ee8>
  445134:	tbnz	w22, #1, 44513c <_obstack_memory_used@@Base+0x6edc>
  445138:	tbnz	w27, #12, 445148 <_obstack_memory_used@@Base+0x6ee8>
  44513c:	mov	w8, wzr
  445140:	tbnz	w22, #2, 445180 <_obstack_memory_used@@Base+0x6f20>
  445144:	tbz	w27, #14, 445180 <_obstack_memory_used@@Base+0x6f20>
  445148:	sub	x1, x25, x26
  44514c:	mov	x0, x24
  445150:	bl	445210 <_obstack_memory_used@@Base+0x6fb0>
  445154:	mov	w8, wzr
  445158:	add	x26, x26, #0x1
  44515c:	b	445180 <_obstack_memory_used@@Base+0x6f20>
  445160:	mov	w0, #0x18                  	// #24
  445164:	bl	4044f0 <malloc@plt>
  445168:	str	x0, [x19, #80]
  44516c:	cbz	x0, 4451b8 <_obstack_memory_used@@Base+0x6f58>
  445170:	mov	x1, x23
  445174:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  445178:	cbz	w0, 4451a0 <_obstack_memory_used@@Base+0x6f40>
  44517c:	mov	w8, #0x1                   	// #1
  445180:	orr	w8, w8, #0x4
  445184:	cmp	w8, #0x4
  445188:	b.ne	4451ec <_obstack_memory_used@@Base+0x6f8c>  // b.any
  44518c:	ldr	x8, [x23, #8]
  445190:	add	x25, x25, #0x1
  445194:	cmp	x25, x8
  445198:	b.lt	4450ac <_obstack_memory_used@@Base+0x6e4c>  // b.tstop
  44519c:	b	4451c4 <_obstack_memory_used@@Base+0x6f64>
  4451a0:	ldrb	w8, [x19, #104]
  4451a4:	mov	x26, xzr
  4451a8:	orr	w8, w8, #0x80
  4451ac:	strb	w8, [x19, #104]
  4451b0:	tbz	w22, #0, 445128 <_obstack_memory_used@@Base+0x6ec8>
  4451b4:	b	44512c <_obstack_memory_used@@Base+0x6ecc>
  4451b8:	mov	x0, x19
  4451bc:	bl	43fa04 <_obstack_memory_used@@Base+0x17a4>
  4451c0:	b	44517c <_obstack_memory_used@@Base+0x6f1c>
  4451c4:	mov	x0, x21
  4451c8:	mov	x1, x19
  4451cc:	mov	x2, x20
  4451d0:	bl	445254 <_obstack_memory_used@@Base+0x6ff4>
  4451d4:	cbz	w0, 4451f0 <_obstack_memory_used@@Base+0x6f90>
  4451d8:	mov	x0, x19
  4451dc:	bl	43fa04 <_obstack_memory_used@@Base+0x17a4>
  4451e0:	b	4451ec <_obstack_memory_used@@Base+0x6f8c>
  4451e4:	mov	x0, x19
  4451e8:	bl	4049d0 <free@plt>
  4451ec:	mov	x19, xzr
  4451f0:	mov	x0, x19
  4451f4:	ldp	x20, x19, [sp, #80]
  4451f8:	ldp	x22, x21, [sp, #64]
  4451fc:	ldp	x24, x23, [sp, #48]
  445200:	ldp	x26, x25, [sp, #32]
  445204:	ldr	x27, [sp, #16]
  445208:	ldp	x29, x30, [sp], #96
  44520c:	ret
  445210:	tbnz	x1, #63, 445250 <_obstack_memory_used@@Base+0x6ff0>
  445214:	ldr	x8, [x0, #8]
  445218:	cmp	x8, x1
  44521c:	b.le	445250 <_obstack_memory_used@@Base+0x6ff0>
  445220:	sub	x8, x8, #0x1
  445224:	cmp	x8, x1
  445228:	str	x8, [x0, #8]
  44522c:	b.le	445250 <_obstack_memory_used@@Base+0x6ff0>
  445230:	ldr	x8, [x0, #16]
  445234:	add	x9, x8, x1, lsl #3
  445238:	ldr	x10, [x9, #8]
  44523c:	add	x1, x1, #0x1
  445240:	str	x10, [x9]
  445244:	ldr	x9, [x0, #8]
  445248:	cmp	x1, x9
  44524c:	b.lt	445234 <_obstack_memory_used@@Base+0x6fd4>  // b.tstop
  445250:	ret
  445254:	stp	x29, x30, [sp, #-80]!
  445258:	stp	x24, x23, [sp, #32]
  44525c:	stp	x22, x21, [sp, #48]
  445260:	stp	x20, x19, [sp, #64]
  445264:	mov	x19, x1
  445268:	ldr	x1, [x1, #16]
  44526c:	add	x22, x19, #0x20
  445270:	mov	x21, x0
  445274:	mov	x0, x22
  445278:	str	x25, [sp, #16]
  44527c:	mov	x29, sp
  445280:	mov	x20, x2
  445284:	str	x2, [x19]
  445288:	bl	44475c <_obstack_memory_used@@Base+0x64fc>
  44528c:	cbnz	w0, 4452d8 <_obstack_memory_used@@Base+0x7078>
  445290:	ldr	x8, [x19, #16]
  445294:	cmp	x8, #0x1
  445298:	b.lt	4452e0 <_obstack_memory_used@@Base+0x7080>  // b.tstop
  44529c:	mov	x23, xzr
  4452a0:	b	4452b4 <_obstack_memory_used@@Base+0x7054>
  4452a4:	ldr	x8, [x19, #16]
  4452a8:	add	x23, x23, #0x1
  4452ac:	cmp	x23, x8
  4452b0:	b.ge	4452e0 <_obstack_memory_used@@Base+0x7080>  // b.tcont
  4452b4:	ldr	x8, [x19, #24]
  4452b8:	ldr	x1, [x8, x23, lsl #3]
  4452bc:	ldr	x8, [x21]
  4452c0:	add	x8, x8, x1, lsl #4
  4452c4:	ldrb	w8, [x8, #8]
  4452c8:	tbnz	w8, #3, 4452a4 <_obstack_memory_used@@Base+0x7044>
  4452cc:	mov	x0, x22
  4452d0:	bl	444d54 <_obstack_memory_used@@Base+0x6af4>
  4452d4:	tbnz	w0, #0, 4452a4 <_obstack_memory_used@@Base+0x7044>
  4452d8:	mov	w0, #0xc                   	// #12
  4452dc:	b	445328 <_obstack_memory_used@@Base+0x70c8>
  4452e0:	ldr	x8, [x21, #136]
  4452e4:	ldr	x21, [x21, #64]
  4452e8:	mov	w9, #0x18                  	// #24
  4452ec:	and	x22, x8, x20
  4452f0:	madd	x20, x22, x9, x21
  4452f4:	mov	x23, x20
  4452f8:	ldr	x9, [x23, #8]!
  4452fc:	ldr	x8, [x20]
  445300:	cmp	x9, x8
  445304:	b.le	445340 <_obstack_memory_used@@Base+0x70e0>
  445308:	mov	w8, #0x18                  	// #24
  44530c:	ldr	x9, [x20]
  445310:	madd	x8, x22, x8, x21
  445314:	ldr	x8, [x8, #16]
  445318:	mov	w0, wzr
  44531c:	add	x10, x9, #0x1
  445320:	str	x10, [x20]
  445324:	str	x19, [x8, x9, lsl #3]
  445328:	ldp	x20, x19, [sp, #64]
  44532c:	ldp	x22, x21, [sp, #48]
  445330:	ldp	x24, x23, [sp, #32]
  445334:	ldr	x25, [sp, #16]
  445338:	ldp	x29, x30, [sp], #80
  44533c:	ret
  445340:	mov	w9, #0x18                  	// #24
  445344:	madd	x24, x22, x9, x21
  445348:	ldr	x0, [x24, #16]!
  44534c:	lsl	x8, x8, #1
  445350:	add	x25, x8, #0x2
  445354:	lsl	x1, x25, #3
  445358:	bl	404730 <realloc@plt>
  44535c:	cbz	x0, 4452d8 <_obstack_memory_used@@Base+0x7078>
  445360:	str	x0, [x24]
  445364:	str	x25, [x23]
  445368:	b	445308 <_obstack_memory_used@@Base+0x70a8>
  44536c:	stp	x29, x30, [sp, #-64]!
  445370:	stp	x22, x21, [sp, #32]
  445374:	stp	x20, x19, [sp, #48]
  445378:	mov	x19, x2
  44537c:	mov	x21, x1
  445380:	cmp	w3, #0x2
  445384:	mov	x20, x0
  445388:	stp	x24, x23, [sp, #16]
  44538c:	mov	x29, sp
  445390:	b.eq	445414 <_obstack_memory_used@@Base+0x71b4>  // b.none
  445394:	cmp	w3, #0x1
  445398:	add	x24, x19, #0x1
  44539c:	b.eq	4453d4 <_obstack_memory_used@@Base+0x7174>  // b.none
  4453a0:	cbnz	w3, 4454b4 <_obstack_memory_used@@Base+0x7254>
  4453a4:	lsl	x23, x24, #3
  4453a8:	mov	x0, x23
  4453ac:	bl	4044f0 <malloc@plt>
  4453b0:	str	x0, [x20, #8]
  4453b4:	cbz	x0, 445460 <_obstack_memory_used@@Base+0x7200>
  4453b8:	mov	x22, x0
  4453bc:	mov	x0, x23
  4453c0:	bl	4044f0 <malloc@plt>
  4453c4:	str	x0, [x20, #16]
  4453c8:	cbz	x0, 4454a4 <_obstack_memory_used@@Base+0x7244>
  4453cc:	str	x24, [x20]
  4453d0:	b	4453e0 <_obstack_memory_used@@Base+0x7180>
  4453d4:	ldr	x8, [x20]
  4453d8:	cmp	x24, x8
  4453dc:	b.hi	445474 <_obstack_memory_used@@Base+0x7214>  // b.pmore
  4453e0:	mov	w0, #0x1                   	// #1
  4453e4:	cmp	x19, #0x1
  4453e8:	b.lt	44542c <_obstack_memory_used@@Base+0x71cc>  // b.tstop
  4453ec:	ldp	x8, x9, [x20, #8]
  4453f0:	add	x10, x21, #0x8
  4453f4:	mov	x11, x19
  4453f8:	ldur	x12, [x10, #-8]
  4453fc:	subs	x11, x11, #0x1
  445400:	str	x12, [x8], #8
  445404:	ldr	x12, [x10], #16
  445408:	str	x12, [x9], #8
  44540c:	b.ne	4453f8 <_obstack_memory_used@@Base+0x7198>  // b.any
  445410:	b	445430 <_obstack_memory_used@@Base+0x71d0>
  445414:	ldr	x8, [x20]
  445418:	cmp	x8, x19
  44541c:	b.cc	4454d4 <_obstack_memory_used@@Base+0x7274>  // b.lo, b.ul, b.last
  445420:	mov	w0, #0x2                   	// #2
  445424:	cmp	x19, #0x1
  445428:	b.ge	4453ec <_obstack_memory_used@@Base+0x718c>  // b.tcont
  44542c:	mov	x19, xzr
  445430:	ldr	x8, [x20]
  445434:	cmp	x19, x8
  445438:	b.cs	445460 <_obstack_memory_used@@Base+0x7200>  // b.hs, b.nlast
  44543c:	ldp	x9, x8, [x20, #8]
  445440:	mov	x10, #0xffffffffffffffff    	// #-1
  445444:	lsl	x11, x19, #3
  445448:	str	x10, [x8, x11]
  44544c:	str	x10, [x9, x11]
  445450:	ldr	x11, [x20]
  445454:	add	x19, x19, #0x1
  445458:	cmp	x19, x11
  44545c:	b.cc	445444 <_obstack_memory_used@@Base+0x71e4>  // b.lo, b.ul, b.last
  445460:	ldp	x20, x19, [sp, #48]
  445464:	ldp	x22, x21, [sp, #32]
  445468:	ldp	x24, x23, [sp, #16]
  44546c:	ldp	x29, x30, [sp], #64
  445470:	ret
  445474:	ldr	x0, [x20, #8]
  445478:	lsl	x23, x24, #3
  44547c:	mov	x1, x23
  445480:	bl	404730 <realloc@plt>
  445484:	cbz	x0, 445460 <_obstack_memory_used@@Base+0x7200>
  445488:	mov	x22, x0
  44548c:	ldr	x0, [x20, #16]
  445490:	mov	x1, x23
  445494:	bl	404730 <realloc@plt>
  445498:	cbz	x0, 4454a4 <_obstack_memory_used@@Base+0x7244>
  44549c:	stp	x22, x0, [x20, #8]
  4454a0:	b	4453cc <_obstack_memory_used@@Base+0x716c>
  4454a4:	mov	x0, x22
  4454a8:	bl	4049d0 <free@plt>
  4454ac:	mov	w0, wzr
  4454b0:	b	445460 <_obstack_memory_used@@Base+0x7200>
  4454b4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4454b8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4454bc:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4454c0:	add	x0, x0, #0x77c
  4454c4:	add	x1, x1, #0x6f7
  4454c8:	add	x3, x3, #0x799
  4454cc:	mov	w2, #0x1f9                 	// #505
  4454d0:	bl	404cf0 <__assert_fail@plt>
  4454d4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4454d8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4454dc:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4454e0:	add	x0, x0, #0x7e2
  4454e4:	add	x1, x1, #0x6f7
  4454e8:	add	x3, x3, #0x799
  4454ec:	mov	w2, #0x1fb                 	// #507
  4454f0:	bl	404cf0 <__assert_fail@plt>
  4454f4:	stp	x29, x30, [sp, #-64]!
  4454f8:	stp	x22, x21, [sp, #32]
  4454fc:	stp	x20, x19, [sp, #48]
  445500:	ldrsw	x9, [x6, #180]
  445504:	add	x10, x2, #0x1
  445508:	mov	x8, x4
  44550c:	mov	x19, x0
  445510:	cmp	x9, x3
  445514:	csel	x9, x9, x3, gt
  445518:	cmp	x10, x9
  44551c:	str	x23, [sp, #16]
  445520:	mov	x21, x2
  445524:	mov	x22, x1
  445528:	csinc	x23, x9, x2, ge  // ge = tcont
  44552c:	and	w4, w5, #0x1
  445530:	mov	x0, x1
  445534:	mov	x1, x2
  445538:	mov	x2, x19
  44553c:	mov	x3, x8
  445540:	mov	x5, x6
  445544:	mov	x29, sp
  445548:	mov	x20, x6
  44554c:	bl	4404c0 <_obstack_memory_used@@Base+0x2260>
  445550:	mov	x0, x19
  445554:	mov	x1, x23
  445558:	bl	440510 <_obstack_memory_used@@Base+0x22b0>
  44555c:	cbnz	w0, 44559c <_obstack_memory_used@@Base+0x733c>
  445560:	add	x8, x20, #0xb8
  445564:	str	x8, [x19, #128]
  445568:	ldrb	w8, [x20, #176]
  44556c:	ldrb	w9, [x19, #139]
  445570:	ubfx	w8, w8, #4, #1
  445574:	strb	w8, [x19, #142]
  445578:	cbz	w9, 445584 <_obstack_memory_used@@Base+0x7324>
  44557c:	mov	x8, xzr
  445580:	b	445594 <_obstack_memory_used@@Base+0x7334>
  445584:	str	x22, [x19, #8]
  445588:	ldr	w8, [x20, #180]
  44558c:	cmp	w8, #0x1
  445590:	csel	x8, xzr, x21, gt
  445594:	mov	w0, wzr
  445598:	stp	x8, x8, [x19, #48]
  44559c:	ldp	x20, x19, [sp, #48]
  4455a0:	ldp	x22, x21, [sp, #32]
  4455a4:	ldr	x23, [sp, #16]
  4455a8:	ldp	x29, x30, [sp], #64
  4455ac:	ret
  4455b0:	stp	x29, x30, [sp, #-48]!
  4455b4:	stp	x20, x19, [sp, #32]
  4455b8:	mov	x19, x2
  4455bc:	mov	x20, x0
  4455c0:	mov	x8, #0xffffffffffffffff    	// #-1
  4455c4:	cmp	x2, #0x1
  4455c8:	str	x21, [sp, #16]
  4455cc:	mov	x29, sp
  4455d0:	str	w1, [x0, #160]
  4455d4:	str	x8, [x0, #168]
  4455d8:	b.lt	44561c <_obstack_memory_used@@Base+0x73bc>  // b.tstop
  4455dc:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  4455e0:	movk	x8, #0x666, lsl #48
  4455e4:	cmp	x19, x8
  4455e8:	b.hi	445640 <_obstack_memory_used@@Base+0x73e0>  // b.pmore
  4455ec:	add	x8, x19, x19, lsl #2
  4455f0:	lsl	x0, x8, #3
  4455f4:	bl	4044f0 <malloc@plt>
  4455f8:	mov	x21, x0
  4455fc:	str	x0, [x20, #216]
  445600:	lsl	x0, x19, #3
  445604:	bl	4044f0 <malloc@plt>
  445608:	mov	x8, x0
  44560c:	str	x0, [x20, #248]
  445610:	mov	w0, #0xc                   	// #12
  445614:	cbz	x21, 445630 <_obstack_memory_used@@Base+0x73d0>
  445618:	cbz	x8, 445630 <_obstack_memory_used@@Base+0x73d0>
  44561c:	mov	w0, wzr
  445620:	mov	w8, #0x1                   	// #1
  445624:	str	x19, [x20, #208]
  445628:	str	w8, [x20, #224]
  44562c:	str	x19, [x20, #240]
  445630:	ldp	x20, x19, [sp, #32]
  445634:	ldr	x21, [sp, #16]
  445638:	ldp	x29, x30, [sp], #48
  44563c:	ret
  445640:	mov	w0, #0xc                   	// #12
  445644:	b	445630 <_obstack_memory_used@@Base+0x73d0>
  445648:	sub	sp, sp, #0x60
  44564c:	stp	x29, x30, [sp, #16]
  445650:	str	x25, [sp, #32]
  445654:	stp	x24, x23, [sp, #48]
  445658:	stp	x22, x21, [sp, #64]
  44565c:	stp	x20, x19, [sp, #80]
  445660:	mov	x8, x0
  445664:	ldr	x9, [x8, #40]!
  445668:	mov	x19, x0
  44566c:	mov	x20, x1
  445670:	mov	w21, w2
  445674:	cmp	x9, x1
  445678:	add	x29, sp, #0x10
  44567c:	b.le	4457d0 <_obstack_memory_used@@Base+0x7570>
  445680:	ldr	w9, [x19, #144]
  445684:	cmp	w9, #0x2
  445688:	b.lt	445690 <_obstack_memory_used@@Base+0x7430>  // b.tstop
  44568c:	str	xzr, [x19, #32]
  445690:	ldr	x9, [x19, #80]
  445694:	ldr	x10, [x19, #96]
  445698:	strb	wzr, [x19, #140]
  44569c:	tst	w21, #0x1
  4456a0:	str	x9, [x19, #88]
  4456a4:	str	x10, [x19, #104]
  4456a8:	stp	xzr, xzr, [x8]
  4456ac:	str	xzr, [x8, #16]
  4456b0:	ldrb	w8, [x19, #139]
  4456b4:	mov	w9, #0x4                   	// #4
  4456b8:	mov	w10, #0x6                   	// #6
  4456bc:	csel	w9, w10, w9, eq  // eq = none
  4456c0:	mov	x22, x20
  4456c4:	str	w9, [x19, #112]
  4456c8:	cbnz	w8, 4456d8 <_obstack_memory_used@@Base+0x7478>
  4456cc:	ldr	x8, [x19]
  4456d0:	mov	x22, x20
  4456d4:	str	x8, [x19, #8]
  4456d8:	cbz	x22, 445754 <_obstack_memory_used@@Base+0x74f4>
  4456dc:	ldr	x8, [x19, #56]
  4456e0:	cmp	x22, x8
  4456e4:	b.ge	4457dc <_obstack_memory_used@@Base+0x757c>  // b.tcont
  4456e8:	ldrb	w8, [x19, #140]
  4456ec:	cbnz	w8, 4458f0 <_obstack_memory_used@@Base+0x7690>
  4456f0:	sub	x1, x22, #0x1
  4456f4:	mov	x0, x19
  4456f8:	mov	w2, w21
  4456fc:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  445700:	ldr	w8, [x19, #144]
  445704:	str	w0, [x19, #112]
  445708:	cmp	w8, #0x2
  44570c:	b.lt	445728 <_obstack_memory_used@@Base+0x74c8>  // b.tstop
  445710:	ldr	x8, [x19, #48]
  445714:	ldr	x0, [x19, #16]
  445718:	sub	x8, x8, x22
  44571c:	add	x1, x0, x22, lsl #2
  445720:	lsl	x2, x8, #2
  445724:	bl	404120 <memmove@plt>
  445728:	ldrb	w8, [x19, #139]
  44572c:	cbnz	w8, 4459e4 <_obstack_memory_used@@Base+0x7784>
  445730:	ldp	x8, x9, [x19, #48]
  445734:	sub	x8, x8, x22
  445738:	sub	x9, x9, x22
  44573c:	stp	x8, x9, [x19, #48]
  445740:	ldrb	w8, [x19, #139]
  445744:	cbnz	w8, 445754 <_obstack_memory_used@@Base+0x74f4>
  445748:	ldr	x8, [x19, #8]
  44574c:	add	x8, x8, x22
  445750:	str	x8, [x19, #8]
  445754:	ldr	x8, [x19, #88]
  445758:	ldr	x9, [x19, #104]
  44575c:	ldr	w10, [x19, #144]
  445760:	str	x20, [x19, #40]
  445764:	sub	x8, x8, x22
  445768:	sub	x9, x9, x22
  44576c:	cmp	w10, #0x2
  445770:	str	x8, [x19, #88]
  445774:	str	x9, [x19, #104]
  445778:	b.lt	445794 <_obstack_memory_used@@Base+0x7534>  // b.tstop
  44577c:	ldrb	w8, [x19, #136]
  445780:	cbz	w8, 4457a4 <_obstack_memory_used@@Base+0x7544>
  445784:	mov	x0, x19
  445788:	bl	4405c4 <_obstack_memory_used@@Base+0x2364>
  44578c:	cbnz	w0, 4457b4 <_obstack_memory_used@@Base+0x7554>
  445790:	b	4457ac <_obstack_memory_used@@Base+0x754c>
  445794:	ldrb	w9, [x19, #139]
  445798:	cbnz	w9, 445a70 <_obstack_memory_used@@Base+0x7810>
  44579c:	str	x8, [x19, #48]
  4457a0:	b	4457ac <_obstack_memory_used@@Base+0x754c>
  4457a4:	mov	x0, x19
  4457a8:	bl	440c3c <_obstack_memory_used@@Base+0x29dc>
  4457ac:	mov	w0, wzr
  4457b0:	str	xzr, [x19, #72]
  4457b4:	ldp	x20, x19, [sp, #80]
  4457b8:	ldp	x22, x21, [sp, #64]
  4457bc:	ldp	x24, x23, [sp, #48]
  4457c0:	ldr	x25, [sp, #32]
  4457c4:	ldp	x29, x30, [sp, #16]
  4457c8:	add	sp, sp, #0x60
  4457cc:	ret
  4457d0:	sub	x22, x20, x9
  4457d4:	cbnz	x22, 4456dc <_obstack_memory_used@@Base+0x747c>
  4457d8:	b	445754 <_obstack_memory_used@@Base+0x74f4>
  4457dc:	ldrb	w8, [x19, #140]
  4457e0:	ldr	x23, [x19, #48]
  4457e4:	cbnz	w8, 445b68 <_obstack_memory_used@@Base+0x7908>
  4457e8:	ldrsw	x8, [x19, #144]
  4457ec:	str	xzr, [x19, #48]
  4457f0:	cmp	w8, #0x2
  4457f4:	b.lt	445a84 <_obstack_memory_used@@Base+0x7824>  // b.tstop
  4457f8:	mov	w9, #0xffffffff            	// #-1
  4457fc:	str	w9, [x29, #28]
  445800:	ldrb	w9, [x19, #137]
  445804:	cbz	w9, 44589c <_obstack_memory_used@@Base+0x763c>
  445808:	ldr	x9, [x19]
  44580c:	ldr	x11, [x19, #40]
  445810:	sub	x8, x22, x8
  445814:	add	x10, x9, x11
  445818:	add	x11, x22, x11
  44581c:	add	x8, x10, x8
  445820:	add	x11, x11, x9
  445824:	cmp	x8, x9
  445828:	add	x24, x10, x22
  44582c:	csel	x9, x9, x8, cc  // cc = lo, ul, last
  445830:	sub	x8, x11, #0x1
  445834:	cmp	x8, x9
  445838:	b.cc	44589c <_obstack_memory_used@@Base+0x763c>  // b.lo, b.ul, b.last
  44583c:	ldrb	w11, [x8], #-1
  445840:	and	w11, w11, #0xc0
  445844:	cmp	w11, #0x80
  445848:	b.eq	445834 <_obstack_memory_used@@Base+0x75d4>  // b.none
  44584c:	ldr	x11, [x19, #88]
  445850:	ldr	x9, [x19, #120]
  445854:	add	x25, x8, #0x1
  445858:	mov	x1, x25
  44585c:	add	x10, x10, x11
  445860:	sub	x2, x10, x25
  445864:	cbnz	x9, 445bd8 <_obstack_memory_used@@Base+0x7978>
  445868:	add	x0, x29, #0x18
  44586c:	add	x3, sp, #0x8
  445870:	str	xzr, [sp, #8]
  445874:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  445878:	sub	x8, x24, x25
  44587c:	subs	x8, x0, x8
  445880:	b.cc	44589c <_obstack_memory_used@@Base+0x763c>  // b.lo, b.ul, b.last
  445884:	cmn	x0, #0x3
  445888:	b.hi	44589c <_obstack_memory_used@@Base+0x763c>  // b.pmore
  44588c:	str	xzr, [x19, #32]
  445890:	str	x8, [x19, #48]
  445894:	ldr	w8, [x29, #24]
  445898:	str	w8, [x29, #28]
  44589c:	ldr	w8, [x29, #28]
  4458a0:	cmn	w8, #0x1
  4458a4:	b.ne	4458c0 <_obstack_memory_used@@Base+0x7660>  // b.any
  4458a8:	add	x2, x29, #0x1c
  4458ac:	mov	x0, x19
  4458b0:	mov	x1, x20
  4458b4:	bl	446664 <_obstack_memory_used@@Base+0x8404>
  4458b8:	sub	x8, x0, x20
  4458bc:	str	x8, [x19, #48]
  4458c0:	ldr	w9, [x29, #28]
  4458c4:	cmn	w9, #0x1
  4458c8:	b.eq	445b2c <_obstack_memory_used@@Base+0x78cc>  // b.none
  4458cc:	ldrb	w8, [x19, #142]
  4458d0:	cbnz	w8, 445bb0 <_obstack_memory_used@@Base+0x7950>
  4458d4:	cmp	w9, #0xa
  4458d8:	b.ne	445b40 <_obstack_memory_used@@Base+0x78e0>  // b.any
  4458dc:	ldrb	w8, [x19, #141]
  4458e0:	cmp	w8, #0x0
  4458e4:	cset	w8, ne  // ne = any
  4458e8:	lsl	w0, w8, #1
  4458ec:	b	445b44 <_obstack_memory_used@@Base+0x78e4>
  4458f0:	ldr	x24, [x19, #48]
  4458f4:	ldr	x23, [x19, #24]
  4458f8:	mov	x8, xzr
  4458fc:	mov	x10, x24
  445900:	b	445910 <_obstack_memory_used@@Base+0x76b0>
  445904:	cmp	x8, x12
  445908:	mov	x10, x12
  44590c:	b.ge	445940 <_obstack_memory_used@@Base+0x76e0>  // b.tcont
  445910:	add	x9, x8, x10
  445914:	cmp	x9, #0x0
  445918:	cinc	x9, x9, lt  // lt = tstop
  44591c:	asr	x9, x9, #1
  445920:	ldr	x11, [x23, x9, lsl #3]
  445924:	mov	x12, x9
  445928:	cmp	x11, x22
  44592c:	b.gt	445904 <_obstack_memory_used@@Base+0x76a4>
  445930:	b.ge	445940 <_obstack_memory_used@@Base+0x76e0>  // b.tcont
  445934:	add	x8, x9, #0x1
  445938:	mov	x12, x10
  44593c:	b	445904 <_obstack_memory_used@@Base+0x76a4>
  445940:	cmp	x11, x22
  445944:	cinc	x25, x9, lt  // lt = tstop
  445948:	sub	x1, x25, #0x1
  44594c:	mov	x0, x19
  445950:	mov	w2, w21
  445954:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  445958:	subs	x8, x24, x22
  44595c:	str	w0, [x19, #112]
  445960:	b.le	4459fc <_obstack_memory_used@@Base+0x779c>
  445964:	cmp	x25, x22
  445968:	b.ne	4459fc <_obstack_memory_used@@Base+0x779c>  // b.any
  44596c:	ldr	x9, [x23, x25, lsl #3]
  445970:	cmp	x9, x22
  445974:	b.ne	4459fc <_obstack_memory_used@@Base+0x779c>  // b.any
  445978:	ldr	x0, [x19, #16]
  44597c:	lsl	x2, x8, #2
  445980:	add	x1, x0, x22, lsl #2
  445984:	bl	404120 <memmove@plt>
  445988:	ldr	x0, [x19, #8]
  44598c:	ldr	x8, [x19, #48]
  445990:	add	x1, x0, x22
  445994:	sub	x2, x8, x22
  445998:	bl	404120 <memmove@plt>
  44599c:	ldp	x8, x9, [x19, #48]
  4459a0:	sub	x8, x8, x22
  4459a4:	sub	x9, x9, x22
  4459a8:	cmp	x8, #0x1
  4459ac:	stp	x8, x9, [x19, #48]
  4459b0:	b.lt	445740 <_obstack_memory_used@@Base+0x74e0>  // b.tstop
  4459b4:	ldr	x9, [x19, #24]
  4459b8:	mov	x8, xzr
  4459bc:	add	x10, x9, x22, lsl #3
  4459c0:	lsl	x11, x8, #3
  4459c4:	ldr	x12, [x10, x11]
  4459c8:	add	x8, x8, #0x1
  4459cc:	sub	x12, x12, x22
  4459d0:	str	x12, [x9, x11]
  4459d4:	ldr	x11, [x19, #48]
  4459d8:	cmp	x8, x11
  4459dc:	b.lt	4459c0 <_obstack_memory_used@@Base+0x7760>  // b.tstop
  4459e0:	b	445740 <_obstack_memory_used@@Base+0x74e0>
  4459e4:	ldr	x0, [x19, #8]
  4459e8:	ldr	x8, [x19, #48]
  4459ec:	add	x1, x0, x22
  4459f0:	sub	x2, x8, x22
  4459f4:	bl	404120 <memmove@plt>
  4459f8:	b	445730 <_obstack_memory_used@@Base+0x74d0>
  4459fc:	ldr	x9, [x19, #96]
  445a00:	ldr	x8, [x19, #80]
  445a04:	sub	x10, x22, x20
  445a08:	strb	wzr, [x19, #140]
  445a0c:	add	x9, x10, x9
  445a10:	add	x8, x10, x8
  445a14:	str	x9, [x19, #104]
  445a18:	sub	x9, x23, #0x8
  445a1c:	str	x8, [x19, #88]
  445a20:	mov	x8, x25
  445a24:	subs	x25, x25, #0x1
  445a28:	b.lt	445a38 <_obstack_memory_used@@Base+0x77d8>  // b.tstop
  445a2c:	ldr	x10, [x9, x8, lsl #3]
  445a30:	cmp	x10, x22
  445a34:	b.eq	445a20 <_obstack_memory_used@@Base+0x77c0>  // b.none
  445a38:	cmp	x8, x24
  445a3c:	b.ge	445a60 <_obstack_memory_used@@Base+0x7800>  // b.tcont
  445a40:	ldr	x9, [x19, #16]
  445a44:	ldr	w10, [x9, x8, lsl #2]
  445a48:	cmn	w10, #0x1
  445a4c:	b.ne	445a60 <_obstack_memory_used@@Base+0x7800>  // b.any
  445a50:	add	x8, x8, #0x1
  445a54:	cmp	x24, x8
  445a58:	b.ne	445a44 <_obstack_memory_used@@Base+0x77e4>  // b.any
  445a5c:	mov	x8, x24
  445a60:	cmp	x8, x24
  445a64:	b.ne	445ac0 <_obstack_memory_used@@Base+0x7860>  // b.any
  445a68:	str	xzr, [x19, #48]
  445a6c:	b	445b50 <_obstack_memory_used@@Base+0x78f0>
  445a70:	ldrb	w8, [x19, #136]
  445a74:	cbz	w8, 445b18 <_obstack_memory_used@@Base+0x78b8>
  445a78:	mov	x0, x19
  445a7c:	bl	440bbc <_obstack_memory_used@@Base+0x295c>
  445a80:	b	4457ac <_obstack_memory_used@@Base+0x754c>
  445a84:	ldr	x8, [x19, #40]
  445a88:	ldr	x9, [x19]
  445a8c:	add	x8, x22, x8
  445a90:	add	x9, x8, x9
  445a94:	ldr	x8, [x19, #120]
  445a98:	ldurb	w21, [x9, #-1]
  445a9c:	str	xzr, [x19, #56]
  445aa0:	cbz	x8, 445aa8 <_obstack_memory_used@@Base+0x7848>
  445aa4:	ldrb	w21, [x8, x21]
  445aa8:	ldr	x0, [x19, #128]
  445aac:	mov	x1, x21
  445ab0:	bl	446728 <_obstack_memory_used@@Base+0x84c8>
  445ab4:	tbz	w0, #0, 445afc <_obstack_memory_used@@Base+0x789c>
  445ab8:	mov	w8, #0x1                   	// #1
  445abc:	b	445b60 <_obstack_memory_used@@Base+0x7900>
  445ac0:	ldr	x8, [x23, x8, lsl #3]
  445ac4:	subs	x21, x8, x22
  445ac8:	str	x21, [x19, #48]
  445acc:	b.eq	445b50 <_obstack_memory_used@@Base+0x78f0>  // b.none
  445ad0:	cmp	x21, #0x1
  445ad4:	b.lt	445ae8 <_obstack_memory_used@@Base+0x7888>  // b.tstop
  445ad8:	ldr	x0, [x19, #16]
  445adc:	lsl	x2, x21, #2
  445ae0:	mov	w1, #0xff                  	// #255
  445ae4:	bl	404600 <memset@plt>
  445ae8:	ldr	x0, [x19, #8]
  445aec:	mov	w1, #0xff                  	// #255
  445af0:	mov	x2, x21
  445af4:	bl	404600 <memset@plt>
  445af8:	b	445b50 <_obstack_memory_used@@Base+0x78f0>
  445afc:	cmp	w21, #0xa
  445b00:	b.ne	445b5c <_obstack_memory_used@@Base+0x78fc>  // b.any
  445b04:	ldrb	w8, [x19, #141]
  445b08:	cmp	w8, #0x0
  445b0c:	cset	w8, ne  // ne = any
  445b10:	lsl	w8, w8, #1
  445b14:	b	445b60 <_obstack_memory_used@@Base+0x7900>
  445b18:	ldr	x8, [x19, #120]
  445b1c:	cbz	x8, 4457ac <_obstack_memory_used@@Base+0x754c>
  445b20:	mov	x0, x19
  445b24:	bl	440de0 <_obstack_memory_used@@Base+0x2b80>
  445b28:	b	4457ac <_obstack_memory_used@@Base+0x754c>
  445b2c:	sub	x1, x23, #0x1
  445b30:	mov	x0, x19
  445b34:	mov	w2, w21
  445b38:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  445b3c:	b	445b44 <_obstack_memory_used@@Base+0x78e4>
  445b40:	mov	w0, wzr
  445b44:	ldr	x21, [x19, #48]
  445b48:	str	w0, [x19, #112]
  445b4c:	cbnz	x21, 445b8c <_obstack_memory_used@@Base+0x792c>
  445b50:	ldr	x8, [x19, #48]
  445b54:	str	x8, [x19, #56]
  445b58:	b	445740 <_obstack_memory_used@@Base+0x74e0>
  445b5c:	mov	w8, wzr
  445b60:	str	w8, [x19, #112]
  445b64:	b	445740 <_obstack_memory_used@@Base+0x74e0>
  445b68:	ldr	x8, [x19, #80]
  445b6c:	ldr	x9, [x19, #96]
  445b70:	sub	x10, x22, x20
  445b74:	strb	wzr, [x19, #140]
  445b78:	add	x8, x10, x8
  445b7c:	add	x9, x10, x9
  445b80:	str	x8, [x19, #88]
  445b84:	str	x9, [x19, #104]
  445b88:	b	4457e8 <_obstack_memory_used@@Base+0x7588>
  445b8c:	cmp	x21, #0x1
  445b90:	b.lt	445ba4 <_obstack_memory_used@@Base+0x7944>  // b.tstop
  445b94:	ldr	x0, [x19, #16]
  445b98:	lsl	x2, x21, #2
  445b9c:	mov	w1, #0xff                  	// #255
  445ba0:	bl	404600 <memset@plt>
  445ba4:	ldrb	w8, [x19, #139]
  445ba8:	cbnz	w8, 445ae8 <_obstack_memory_used@@Base+0x7888>
  445bac:	b	445b50 <_obstack_memory_used@@Base+0x78f0>
  445bb0:	mov	w0, w9
  445bb4:	mov	w21, w9
  445bb8:	bl	404bc0 <iswalnum@plt>
  445bbc:	mov	w8, w0
  445bc0:	cmp	w21, #0x5f
  445bc4:	mov	w0, #0x1                   	// #1
  445bc8:	b.eq	445b44 <_obstack_memory_used@@Base+0x78e4>  // b.none
  445bcc:	mov	w9, w21
  445bd0:	cbz	w8, 4458d4 <_obstack_memory_used@@Base+0x7674>
  445bd4:	b	445b44 <_obstack_memory_used@@Base+0x78e4>
  445bd8:	cmp	x2, #0x6
  445bdc:	mov	w10, #0x6                   	// #6
  445be0:	csel	x10, x2, x10, lt  // lt = tstop
  445be4:	cmp	w10, #0x1
  445be8:	mov	x1, sp
  445bec:	b.lt	445868 <_obstack_memory_used@@Base+0x7608>  // b.tstop
  445bf0:	sxtw	x10, w10
  445bf4:	sub	x11, x1, #0x1
  445bf8:	ldrb	w12, [x8, x10]
  445bfc:	mov	x1, sp
  445c00:	ldrb	w12, [x9, x12]
  445c04:	strb	w12, [x11, x10]
  445c08:	subs	x10, x10, #0x1
  445c0c:	b.gt	445bf8 <_obstack_memory_used@@Base+0x7998>
  445c10:	b	445868 <_obstack_memory_used@@Base+0x7608>
  445c14:	sub	sp, sp, #0x70
  445c18:	stp	x29, x30, [sp, #16]
  445c1c:	stp	x28, x27, [sp, #32]
  445c20:	stp	x26, x25, [sp, #48]
  445c24:	stp	x24, x23, [sp, #64]
  445c28:	stp	x22, x21, [sp, #80]
  445c2c:	stp	x20, x19, [sp, #96]
  445c30:	ldr	x23, [x0, #152]
  445c34:	add	x29, sp, #0x10
  445c38:	ldr	x20, [x0, #72]
  445c3c:	stur	wzr, [x29, #-4]
  445c40:	ldr	x24, [x23, #72]
  445c44:	cmp	x2, #0x0
  445c48:	mov	x25, x2
  445c4c:	mov	w21, w1
  445c50:	ldrsb	w8, [x24, #104]
  445c54:	mov	x22, x0
  445c58:	cset	w19, ne  // ne = any
  445c5c:	tbz	w8, #31, 445c90 <_obstack_memory_used@@Base+0x7a30>
  445c60:	ldr	w2, [x22, #160]
  445c64:	sub	x1, x20, #0x1
  445c68:	mov	x0, x22
  445c6c:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  445c70:	tbnz	w0, #0, 445c8c <_obstack_memory_used@@Base+0x7a2c>
  445c74:	mov	w3, w0
  445c78:	cbz	w0, 445c90 <_obstack_memory_used@@Base+0x7a30>
  445c7c:	tbz	w3, #1, 445cc0 <_obstack_memory_used@@Base+0x7a60>
  445c80:	tbz	w3, #2, 445cc0 <_obstack_memory_used@@Base+0x7a60>
  445c84:	ldr	x24, [x23, #96]
  445c88:	b	445c90 <_obstack_memory_used@@Base+0x7a30>
  445c8c:	ldr	x24, [x23, #80]
  445c90:	cbz	x24, 445ce8 <_obstack_memory_used@@Base+0x7a88>
  445c94:	ldr	x8, [x22, #184]
  445c98:	cbz	x8, 445ca8 <_obstack_memory_used@@Base+0x7a48>
  445c9c:	str	x24, [x8, x20, lsl #3]
  445ca0:	ldr	x8, [x23, #152]
  445ca4:	cbnz	x8, 445d28 <_obstack_memory_used@@Base+0x7ac8>
  445ca8:	ldrsb	w8, [x24, #104]
  445cac:	str	x25, [sp]
  445cb0:	tbnz	w8, #4, 445d14 <_obstack_memory_used@@Base+0x7ab4>
  445cb4:	mov	x27, xzr
  445cb8:	mov	x23, #0xffffffffffffffff    	// #-1
  445cbc:	b	445da8 <_obstack_memory_used@@Base+0x7b48>
  445cc0:	tbnz	w3, #1, 445ce0 <_obstack_memory_used@@Base+0x7a80>
  445cc4:	tbz	w3, #2, 445c90 <_obstack_memory_used@@Base+0x7a30>
  445cc8:	ldr	x2, [x24, #80]
  445ccc:	sub	x0, x29, #0x4
  445cd0:	mov	x1, x23
  445cd4:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  445cd8:	mov	x24, x0
  445cdc:	b	445c90 <_obstack_memory_used@@Base+0x7a30>
  445ce0:	ldr	x24, [x23, #88]
  445ce4:	b	445c90 <_obstack_memory_used@@Base+0x7a30>
  445ce8:	ldur	w8, [x29, #-4]
  445cec:	cmp	w8, #0xc
  445cf0:	b.eq	445f18 <_obstack_memory_used@@Base+0x7cb8>  // b.none
  445cf4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  445cf8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  445cfc:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  445d00:	add	x0, x0, #0x7fa
  445d04:	add	x1, x1, #0x6f7
  445d08:	add	x3, x3, #0x80c
  445d0c:	mov	w2, #0x435                 	// #1077
  445d10:	bl	404cf0 <__assert_fail@plt>
  445d14:	tbnz	w8, #31, 445d68 <_obstack_memory_used@@Base+0x7b08>
  445d18:	tbz	w21, #0, 445d8c <_obstack_memory_used@@Base+0x7b2c>
  445d1c:	mov	w27, #0x1                   	// #1
  445d20:	mov	x23, x20
  445d24:	b	445da8 <_obstack_memory_used@@Base+0x7b48>
  445d28:	add	x23, x24, #0x8
  445d2c:	mov	x0, x22
  445d30:	mov	x1, x23
  445d34:	mov	x2, xzr
  445d38:	bl	446748 <_obstack_memory_used@@Base+0x84e8>
  445d3c:	stur	w0, [x29, #-4]
  445d40:	cbnz	w0, 445f40 <_obstack_memory_used@@Base+0x7ce0>
  445d44:	ldrb	w8, [x24, #104]
  445d48:	tbz	w8, #6, 445d60 <_obstack_memory_used@@Base+0x7b00>
  445d4c:	mov	x0, x22
  445d50:	mov	x1, x23
  445d54:	bl	44680c <_obstack_memory_used@@Base+0x85ac>
  445d58:	stur	w0, [x29, #-4]
  445d5c:	cbnz	w0, 445f40 <_obstack_memory_used@@Base+0x7ce0>
  445d60:	mov	w19, wzr
  445d64:	b	445ca8 <_obstack_memory_used@@Base+0x7a48>
  445d68:	mov	x0, x22
  445d6c:	mov	x1, x24
  445d70:	mov	x2, x20
  445d74:	bl	445f68 <_obstack_memory_used@@Base+0x7d08>
  445d78:	cmp	x0, #0x0
  445d7c:	cset	w27, ne  // ne = any
  445d80:	csinv	x23, x20, xzr, ne  // ne = any
  445d84:	cbz	x0, 445da8 <_obstack_memory_used@@Base+0x7b48>
  445d88:	tbnz	w21, #0, 445da8 <_obstack_memory_used@@Base+0x7b48>
  445d8c:	mov	x23, x20
  445d90:	b	445f1c <_obstack_memory_used@@Base+0x7cbc>
  445d94:	mov	w27, #0x1                   	// #1
  445d98:	mov	w8, wzr
  445d9c:	mov	x24, x25
  445da0:	mov	w19, w26
  445da4:	cbnz	w8, 445ef8 <_obstack_memory_used@@Base+0x7c98>
  445da8:	ldr	x9, [x22, #104]
  445dac:	ldr	x8, [x22, #72]
  445db0:	cmp	x9, x8
  445db4:	b.le	445f00 <_obstack_memory_used@@Base+0x7ca0>
  445db8:	ldr	x9, [x22, #64]
  445dbc:	add	x28, x8, #0x1
  445dc0:	cmp	x28, x9
  445dc4:	b.ge	445ea0 <_obstack_memory_used@@Base+0x7c40>  // b.tcont
  445dc8:	ldr	x9, [x22, #48]
  445dcc:	cmp	x28, x9
  445dd0:	b.ge	445eb0 <_obstack_memory_used@@Base+0x7c50>  // b.tcont
  445dd4:	sub	x0, x29, #0x4
  445dd8:	mov	x1, x22
  445ddc:	mov	x2, x24
  445de0:	bl	446bf4 <_obstack_memory_used@@Base+0x8994>
  445de4:	ldr	x8, [x22, #184]
  445de8:	mov	x25, x0
  445dec:	cbz	x8, 445e04 <_obstack_memory_used@@Base+0x7ba4>
  445df0:	sub	x0, x29, #0x4
  445df4:	mov	x1, x22
  445df8:	mov	x2, x25
  445dfc:	bl	446cb8 <_obstack_memory_used@@Base+0x8a58>
  445e00:	mov	x25, x0
  445e04:	cbz	x25, 445e54 <_obstack_memory_used@@Base+0x7bf4>
  445e08:	cmp	x24, x25
  445e0c:	ldrsb	w8, [x25, #104]
  445e10:	cset	w9, eq  // eq = none
  445e14:	tst	w19, w9
  445e18:	and	w26, w19, w9
  445e1c:	csel	x20, x28, x20, ne  // ne = any
  445e20:	tbz	w8, #4, 445d98 <_obstack_memory_used@@Base+0x7b38>
  445e24:	tbz	w8, #31, 445e3c <_obstack_memory_used@@Base+0x7bdc>
  445e28:	ldr	x2, [x22, #72]
  445e2c:	mov	x0, x22
  445e30:	mov	x1, x25
  445e34:	bl	445f68 <_obstack_memory_used@@Base+0x7d08>
  445e38:	cbz	x0, 445d98 <_obstack_memory_used@@Base+0x7b38>
  445e3c:	ldr	x23, [x22, #72]
  445e40:	str	xzr, [sp]
  445e44:	tbnz	w21, #0, 445d94 <_obstack_memory_used@@Base+0x7b34>
  445e48:	mov	w8, #0x3                   	// #3
  445e4c:	mov	w27, #0x1                   	// #1
  445e50:	b	445d9c <_obstack_memory_used@@Base+0x7b3c>
  445e54:	ldur	w8, [x29, #-4]
  445e58:	cbnz	w8, 445ee8 <_obstack_memory_used@@Base+0x7c88>
  445e5c:	cmp	x27, #0x0
  445e60:	cset	w8, ne  // ne = any
  445e64:	eor	w9, w21, #0x1
  445e68:	mov	x25, xzr
  445e6c:	and	w9, w8, w9
  445e70:	mov	w8, #0x3                   	// #3
  445e74:	tbnz	w9, #0, 445e98 <_obstack_memory_used@@Base+0x7c38>
  445e78:	ldr	x9, [x22, #184]
  445e7c:	cbz	x9, 445e98 <_obstack_memory_used@@Base+0x7c38>
  445e80:	sub	x0, x29, #0x4
  445e84:	mov	x1, x22
  445e88:	bl	446e04 <_obstack_memory_used@@Base+0x8ba4>
  445e8c:	mov	x25, x0
  445e90:	cbnz	x0, 445e08 <_obstack_memory_used@@Base+0x7ba8>
  445e94:	mov	w8, #0x3                   	// #3
  445e98:	mov	w26, w19
  445e9c:	b	445d9c <_obstack_memory_used@@Base+0x7b3c>
  445ea0:	ldr	x10, [x22, #88]
  445ea4:	cmp	x9, x10
  445ea8:	b.ge	445dc8 <_obstack_memory_used@@Base+0x7b68>  // b.tcont
  445eac:	b	445ebc <_obstack_memory_used@@Base+0x7c5c>
  445eb0:	ldr	x10, [x22, #88]
  445eb4:	cmp	x9, x10
  445eb8:	b.ge	445dd4 <_obstack_memory_used@@Base+0x7b74>  // b.tcont
  445ebc:	add	w1, w8, #0x2
  445ec0:	mov	x0, x22
  445ec4:	bl	446b2c <_obstack_memory_used@@Base+0x88cc>
  445ec8:	stur	w0, [x29, #-4]
  445ecc:	cbz	w0, 445dd4 <_obstack_memory_used@@Base+0x7b74>
  445ed0:	cmp	w0, #0xc
  445ed4:	b.ne	445f48 <_obstack_memory_used@@Base+0x7ce8>  // b.any
  445ed8:	mov	w8, #0x1                   	// #1
  445edc:	mov	x25, x24
  445ee0:	mov	w26, w19
  445ee4:	b	445d9c <_obstack_memory_used@@Base+0x7b3c>
  445ee8:	mov	x25, xzr
  445eec:	mov	w8, #0x1                   	// #1
  445ef0:	mov	w26, w19
  445ef4:	b	445d9c <_obstack_memory_used@@Base+0x7b3c>
  445ef8:	cmp	w8, #0x3
  445efc:	b.ne	445f18 <_obstack_memory_used@@Base+0x7cb8>  // b.any
  445f00:	ldr	x9, [sp]
  445f04:	cbz	x9, 445f1c <_obstack_memory_used@@Base+0x7cbc>
  445f08:	ldr	x8, [x9]
  445f0c:	add	x8, x8, x20
  445f10:	str	x8, [x9]
  445f14:	b	445f1c <_obstack_memory_used@@Base+0x7cbc>
  445f18:	mov	x23, #0xfffffffffffffffe    	// #-2
  445f1c:	mov	x0, x23
  445f20:	ldp	x20, x19, [sp, #96]
  445f24:	ldp	x22, x21, [sp, #80]
  445f28:	ldp	x24, x23, [sp, #64]
  445f2c:	ldp	x26, x25, [sp, #48]
  445f30:	ldp	x28, x27, [sp, #32]
  445f34:	ldp	x29, x30, [sp, #16]
  445f38:	add	sp, sp, #0x70
  445f3c:	ret
  445f40:	sxtw	x23, w0
  445f44:	b	445f1c <_obstack_memory_used@@Base+0x7cbc>
  445f48:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  445f4c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  445f50:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  445f54:	add	x0, x0, #0x7fa
  445f58:	add	x1, x1, #0x6f7
  445f5c:	add	x3, x3, #0x80c
  445f60:	mov	w2, #0x46c                 	// #1132
  445f64:	bl	404cf0 <__assert_fail@plt>
  445f68:	stp	x29, x30, [sp, #-64]!
  445f6c:	stp	x24, x23, [sp, #16]
  445f70:	stp	x22, x21, [sp, #32]
  445f74:	stp	x20, x19, [sp, #48]
  445f78:	mov	x8, x2
  445f7c:	ldr	w2, [x0, #160]
  445f80:	mov	x19, x1
  445f84:	mov	x1, x8
  445f88:	mov	x29, sp
  445f8c:	mov	x21, x0
  445f90:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  445f94:	ldr	x8, [x19, #16]
  445f98:	cmp	x8, #0x1
  445f9c:	b.lt	445fd8 <_obstack_memory_used@@Base+0x7d78>  // b.tstop
  445fa0:	ldr	x21, [x21, #152]
  445fa4:	ldr	x23, [x19, #24]
  445fa8:	mov	w20, w0
  445fac:	mov	x24, xzr
  445fb0:	ldr	x22, [x23, x24, lsl #3]
  445fb4:	mov	x0, x21
  445fb8:	mov	w2, w20
  445fbc:	mov	x1, x22
  445fc0:	bl	449568 <_obstack_memory_used@@Base+0xb308>
  445fc4:	tbnz	w0, #0, 445fdc <_obstack_memory_used@@Base+0x7d7c>
  445fc8:	ldr	x8, [x19, #16]
  445fcc:	add	x24, x24, #0x1
  445fd0:	cmp	x24, x8
  445fd4:	b.lt	445fb0 <_obstack_memory_used@@Base+0x7d50>  // b.tstop
  445fd8:	mov	x22, xzr
  445fdc:	mov	x0, x22
  445fe0:	ldp	x20, x19, [sp, #48]
  445fe4:	ldp	x22, x21, [sp, #32]
  445fe8:	ldp	x24, x23, [sp, #16]
  445fec:	ldp	x29, x30, [sp], #64
  445ff0:	ret
  445ff4:	sub	sp, sp, #0x90
  445ff8:	stp	x29, x30, [sp, #64]
  445ffc:	stp	x26, x25, [sp, #80]
  446000:	stp	x24, x23, [sp, #96]
  446004:	stp	x22, x21, [sp, #112]
  446008:	stp	x20, x19, [sp, #128]
  44600c:	ldr	x21, [x0, #168]
  446010:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  446014:	add	x29, sp, #0x40
  446018:	cmp	x21, x8
  44601c:	b.hi	4461c0 <_obstack_memory_used@@Base+0x7f60>  // b.pmore
  446020:	ldr	x24, [x0, #152]
  446024:	ldr	x23, [x0, #176]
  446028:	lsl	x8, x21, #3
  44602c:	add	x22, x8, #0x8
  446030:	mov	x20, x0
  446034:	mov	x0, x22
  446038:	bl	4044f0 <malloc@plt>
  44603c:	mov	x19, x0
  446040:	cbz	x0, 4461c8 <_obstack_memory_used@@Base+0x7f68>
  446044:	ldr	x8, [x24, #152]
  446048:	cbz	x8, 446104 <_obstack_memory_used@@Base+0x7ea4>
  44604c:	mov	x0, x22
  446050:	bl	4044f0 <malloc@plt>
  446054:	mov	x22, x0
  446058:	cbz	x0, 4461cc <_obstack_memory_used@@Base+0x7f6c>
  44605c:	add	x26, x21, #0x1
  446060:	lsl	x2, x26, #3
  446064:	mov	x0, x22
  446068:	mov	w1, wzr
  44606c:	bl	404600 <memset@plt>
  446070:	add	x0, sp, #0x8
  446074:	mov	x1, x19
  446078:	mov	x2, x22
  44607c:	mov	x3, x23
  446080:	mov	x4, x21
  446084:	bl	4495c4 <_obstack_memory_used@@Base+0xb364>
  446088:	add	x1, sp, #0x8
  44608c:	mov	x0, x20
  446090:	bl	4495d8 <_obstack_memory_used@@Base+0xb378>
  446094:	ldr	x8, [sp, #56]
  446098:	mov	w25, w0
  44609c:	mov	x0, x8
  4460a0:	bl	4049d0 <free@plt>
  4460a4:	cbnz	w25, 446190 <_obstack_memory_used@@Base+0x7f30>
  4460a8:	ldr	x8, [x19]
  4460ac:	cbnz	x8, 446150 <_obstack_memory_used@@Base+0x7ef0>
  4460b0:	ldr	x8, [x22]
  4460b4:	cbnz	x8, 446150 <_obstack_memory_used@@Base+0x7ef0>
  4460b8:	subs	x21, x21, #0x1
  4460bc:	b.lt	4460fc <_obstack_memory_used@@Base+0x7e9c>  // b.tstop
  4460c0:	ldr	x8, [x20, #184]
  4460c4:	b	4460d8 <_obstack_memory_used@@Base+0x7e78>
  4460c8:	add	x9, x21, #0x1
  4460cc:	sub	x21, x21, #0x1
  4460d0:	cmp	x9, #0x2
  4460d4:	b.lt	4460fc <_obstack_memory_used@@Base+0x7e9c>  // b.tstop
  4460d8:	ldr	x1, [x8, x21, lsl #3]
  4460dc:	cbz	x1, 4460c8 <_obstack_memory_used@@Base+0x7e68>
  4460e0:	ldrb	w9, [x1, #104]
  4460e4:	tbz	w9, #4, 4460c8 <_obstack_memory_used@@Base+0x7e68>
  4460e8:	mov	x0, x20
  4460ec:	mov	x2, x21
  4460f0:	bl	445f68 <_obstack_memory_used@@Base+0x7d08>
  4460f4:	mov	x23, x0
  4460f8:	b	44605c <_obstack_memory_used@@Base+0x7dfc>
  4460fc:	mov	w25, #0x1                   	// #1
  446100:	b	446190 <_obstack_memory_used@@Base+0x7f30>
  446104:	add	x0, sp, #0x8
  446108:	mov	x1, x19
  44610c:	mov	x2, xzr
  446110:	mov	x3, x23
  446114:	mov	x4, x21
  446118:	bl	4495c4 <_obstack_memory_used@@Base+0xb364>
  44611c:	add	x1, sp, #0x8
  446120:	mov	x0, x20
  446124:	bl	4495d8 <_obstack_memory_used@@Base+0xb378>
  446128:	ldr	x8, [sp, #56]
  44612c:	mov	w25, w0
  446130:	mov	x0, x8
  446134:	bl	4049d0 <free@plt>
  446138:	cbnz	w25, 4461d4 <_obstack_memory_used@@Base+0x7f74>
  44613c:	ldr	x8, [x19]
  446140:	cbnz	x8, 446174 <_obstack_memory_used@@Base+0x7f14>
  446144:	mov	x22, xzr
  446148:	mov	w25, #0x1                   	// #1
  44614c:	b	446190 <_obstack_memory_used@@Base+0x7f30>
  446150:	mov	x0, x24
  446154:	mov	x1, x19
  446158:	mov	x2, x22
  44615c:	mov	x3, x26
  446160:	bl	4496d4 <_obstack_memory_used@@Base+0xb474>
  446164:	mov	w25, w0
  446168:	mov	x0, x22
  44616c:	bl	4049d0 <free@plt>
  446170:	cbnz	w25, 4461d4 <_obstack_memory_used@@Base+0x7f74>
  446174:	ldr	x0, [x20, #184]
  446178:	bl	4049d0 <free@plt>
  44617c:	mov	w25, wzr
  446180:	mov	x22, xzr
  446184:	stp	x23, x19, [x20, #176]
  446188:	mov	x19, xzr
  44618c:	str	x21, [x20, #168]
  446190:	mov	x0, x19
  446194:	bl	4049d0 <free@plt>
  446198:	mov	x0, x22
  44619c:	bl	4049d0 <free@plt>
  4461a0:	mov	w0, w25
  4461a4:	ldp	x20, x19, [sp, #128]
  4461a8:	ldp	x22, x21, [sp, #112]
  4461ac:	ldp	x24, x23, [sp, #96]
  4461b0:	ldp	x26, x25, [sp, #80]
  4461b4:	ldp	x29, x30, [sp, #64]
  4461b8:	add	sp, sp, #0x90
  4461bc:	ret
  4461c0:	mov	w25, #0xc                   	// #12
  4461c4:	b	4461a0 <_obstack_memory_used@@Base+0x7f40>
  4461c8:	mov	x22, xzr
  4461cc:	mov	w25, #0xc                   	// #12
  4461d0:	b	446190 <_obstack_memory_used@@Base+0x7f30>
  4461d4:	mov	x22, xzr
  4461d8:	b	446190 <_obstack_memory_used@@Base+0x7f30>
  4461dc:	stp	x29, x30, [sp, #-64]!
  4461e0:	stp	x22, x21, [sp, #32]
  4461e4:	stp	x20, x19, [sp, #48]
  4461e8:	ldr	x8, [x0, #232]
  4461ec:	mov	x19, x0
  4461f0:	str	x23, [sp, #16]
  4461f4:	mov	x29, sp
  4461f8:	cmp	x8, #0x1
  4461fc:	b.lt	446284 <_obstack_memory_used@@Base+0x8024>  // b.tstop
  446200:	mov	x22, xzr
  446204:	b	446220 <_obstack_memory_used@@Base+0x7fc0>
  446208:	mov	x0, x20
  44620c:	bl	4049d0 <free@plt>
  446210:	ldr	x8, [x19, #232]
  446214:	add	x22, x22, #0x1
  446218:	cmp	x22, x8
  44621c:	b.ge	446284 <_obstack_memory_used@@Base+0x8024>  // b.tcont
  446220:	ldr	x8, [x19, #248]
  446224:	ldr	x20, [x8, x22, lsl #3]
  446228:	ldr	x8, [x20, #32]
  44622c:	cmp	x8, #0x1
  446230:	b.lt	446260 <_obstack_memory_used@@Base+0x8000>  // b.tstop
  446234:	mov	x23, xzr
  446238:	ldr	x8, [x20, #40]
  44623c:	ldr	x21, [x8, x23, lsl #3]
  446240:	ldr	x0, [x21, #32]
  446244:	bl	4049d0 <free@plt>
  446248:	mov	x0, x21
  44624c:	bl	4049d0 <free@plt>
  446250:	ldr	x8, [x20, #32]
  446254:	add	x23, x23, #0x1
  446258:	cmp	x23, x8
  44625c:	b.lt	446238 <_obstack_memory_used@@Base+0x7fd8>  // b.tstop
  446260:	ldr	x0, [x20, #40]
  446264:	bl	4049d0 <free@plt>
  446268:	ldr	x8, [x20, #16]
  44626c:	cbz	x8, 446208 <_obstack_memory_used@@Base+0x7fa8>
  446270:	ldr	x0, [x8, #16]
  446274:	bl	4049d0 <free@plt>
  446278:	ldr	x0, [x20, #16]
  44627c:	bl	4049d0 <free@plt>
  446280:	b	446208 <_obstack_memory_used@@Base+0x7fa8>
  446284:	str	xzr, [x19, #232]
  446288:	str	xzr, [x19, #200]
  44628c:	ldp	x20, x19, [sp, #48]
  446290:	ldp	x22, x21, [sp, #32]
  446294:	ldr	x23, [sp, #16]
  446298:	ldp	x29, x30, [sp], #64
  44629c:	ret
  4462a0:	stp	x29, x30, [sp, #-96]!
  4462a4:	stp	x28, x27, [sp, #16]
  4462a8:	stp	x26, x25, [sp, #32]
  4462ac:	stp	x24, x23, [sp, #48]
  4462b0:	stp	x22, x21, [sp, #64]
  4462b4:	stp	x20, x19, [sp, #80]
  4462b8:	mov	x29, sp
  4462bc:	sub	sp, sp, #0x40
  4462c0:	adrp	x8, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4462c4:	add	x8, x8, #0x590
  4462c8:	ldr	q0, [x8]
  4462cc:	ldr	x8, [x8, #16]
  4462d0:	ldr	x23, [x0]
  4462d4:	mov	x20, x3
  4462d8:	mov	x21, x2
  4462dc:	mov	x22, x1
  4462e0:	stur	q0, [x29, #-64]
  4462e4:	stur	x8, [x29, #-48]
  4462e8:	tbz	w4, #0, 44630c <_obstack_memory_used@@Base+0x80ac>
  4462ec:	ldur	x8, [x29, #-56]
  4462f0:	add	x8, x8, x8, lsl #1
  4462f4:	lsl	x0, x8, #4
  4462f8:	bl	4044f0 <malloc@plt>
  4462fc:	stur	x0, [x29, #-48]
  446300:	cbz	x0, 44652c <_obstack_memory_used@@Base+0x82cc>
  446304:	sub	x19, x29, #0x40
  446308:	b	446310 <_obstack_memory_used@@Base+0x80b0>
  44630c:	mov	x19, xzr
  446310:	ldr	x25, [x23, #144]
  446314:	lsl	x26, x21, #4
  446318:	cmp	x26, #0xfbf
  44631c:	stp	xzr, xzr, [x29, #-32]
  446320:	stur	xzr, [x29, #-16]
  446324:	b.hi	446344 <_obstack_memory_used@@Base+0x80e4>  // b.pmore
  446328:	add	x9, x26, #0xf
  44632c:	mov	x8, sp
  446330:	and	x9, x9, #0xfffffffffffffff0
  446334:	sub	x24, x8, x9
  446338:	mov	sp, x24
  44633c:	mov	w27, wzr
  446340:	b	446358 <_obstack_memory_used@@Base+0x80f8>
  446344:	mov	x0, x26
  446348:	bl	4044f0 <malloc@plt>
  44634c:	cbz	x0, 446524 <_obstack_memory_used@@Base+0x82c4>
  446350:	mov	x24, x0
  446354:	mov	w27, #0x1                   	// #1
  446358:	mov	x0, x24
  44635c:	mov	x1, x20
  446360:	mov	x2, x26
  446364:	bl	404110 <memcpy@plt>
  446368:	ldp	x26, x8, [x20]
  44636c:	cmp	x26, x8
  446370:	stur	x26, [x29, #-8]
  446374:	b.le	44639c <_obstack_memory_used@@Base+0x813c>
  446378:	ldur	x0, [x29, #-16]
  44637c:	bl	4049d0 <free@plt>
  446380:	cbz	w27, 44638c <_obstack_memory_used@@Base+0x812c>
  446384:	mov	x0, x24
  446388:	bl	4049d0 <free@plt>
  44638c:	mov	x0, x19
  446390:	bl	44a918 <_obstack_memory_used@@Base+0xc6b8>
  446394:	mov	w0, wzr
  446398:	b	446530 <_obstack_memory_used@@Base+0x82d0>
  44639c:	add	x28, x20, #0x8
  4463a0:	mov	x0, x23
  4463a4:	mov	x1, x20
  4463a8:	mov	x2, x24
  4463ac:	mov	x3, x25
  4463b0:	mov	x4, x26
  4463b4:	mov	x5, x21
  4463b8:	bl	44a990 <_obstack_memory_used@@Base+0xc730>
  4463bc:	ldr	x8, [x20, #8]
  4463c0:	cmp	x26, x8
  4463c4:	b.ne	44648c <_obstack_memory_used@@Base+0x822c>  // b.any
  4463c8:	ldr	x8, [x22, #176]
  4463cc:	cmp	x25, x8
  4463d0:	b.ne	44648c <_obstack_memory_used@@Base+0x822c>  // b.any
  4463d4:	cbz	x19, 44643c <_obstack_memory_used@@Base+0x81dc>
  4463d8:	mov	x8, xzr
  4463dc:	cbz	x21, 44640c <_obstack_memory_used@@Base+0x81ac>
  4463e0:	mov	x9, x28
  4463e4:	b	4463f8 <_obstack_memory_used@@Base+0x8198>
  4463e8:	add	x8, x8, #0x1
  4463ec:	cmp	x21, x8
  4463f0:	add	x9, x9, #0x10
  4463f4:	b.eq	44645c <_obstack_memory_used@@Base+0x81fc>  // b.none
  4463f8:	ldur	x10, [x9, #-8]
  4463fc:	tbnz	x10, #63, 4463e8 <_obstack_memory_used@@Base+0x8188>
  446400:	ldr	x10, [x9]
  446404:	cmn	x10, #0x1
  446408:	b.ne	4463e8 <_obstack_memory_used@@Base+0x8188>  // b.any
  44640c:	cmp	x8, x21
  446410:	b.ne	446468 <_obstack_memory_used@@Base+0x8208>  // b.any
  446414:	ldur	x0, [x29, #-16]
  446418:	bl	4049d0 <free@plt>
  44641c:	cbz	w27, 446428 <_obstack_memory_used@@Base+0x81c8>
  446420:	mov	x0, x24
  446424:	bl	4049d0 <free@plt>
  446428:	mov	x0, x19
  44642c:	bl	44a918 <_obstack_memory_used@@Base+0xc6b8>
  446430:	mov	w8, wzr
  446434:	cbnz	w8, 44648c <_obstack_memory_used@@Base+0x822c>
  446438:	b	446394 <_obstack_memory_used@@Base+0x8134>
  44643c:	ldur	x0, [x29, #-16]
  446440:	bl	4049d0 <free@plt>
  446444:	cbz	w27, 446450 <_obstack_memory_used@@Base+0x81f0>
  446448:	mov	x0, x24
  44644c:	bl	4049d0 <free@plt>
  446450:	mov	w8, wzr
  446454:	cbnz	w8, 44648c <_obstack_memory_used@@Base+0x822c>
  446458:	b	446394 <_obstack_memory_used@@Base+0x8134>
  44645c:	mov	x8, x21
  446460:	cmp	x8, x21
  446464:	b.eq	446414 <_obstack_memory_used@@Base+0x81b4>  // b.none
  446468:	sub	x1, x29, #0x8
  44646c:	sub	x4, x29, #0x20
  446470:	mov	x0, x19
  446474:	mov	x2, x21
  446478:	mov	x3, x20
  44647c:	bl	44aa4c <_obstack_memory_used@@Base+0xc7ec>
  446480:	mov	x25, x0
  446484:	mov	w8, #0x1                   	// #1
  446488:	cbz	w8, 446394 <_obstack_memory_used@@Base+0x8134>
  44648c:	sub	x3, x29, #0x8
  446490:	sub	x5, x29, #0x20
  446494:	mov	x0, x22
  446498:	mov	x1, x21
  44649c:	mov	x2, x20
  4464a0:	mov	x4, x25
  4464a4:	mov	x6, x19
  4464a8:	bl	44ab0c <_obstack_memory_used@@Base+0xc8ac>
  4464ac:	mov	x25, x0
  4464b0:	tbnz	x0, #63, 4464c8 <_obstack_memory_used@@Base+0x8268>
  4464b4:	ldur	x26, [x29, #-8]
  4464b8:	ldr	x8, [x20, #8]
  4464bc:	cmp	x26, x8
  4464c0:	b.le	4463a0 <_obstack_memory_used@@Base+0x8140>
  4464c4:	b	446378 <_obstack_memory_used@@Base+0x8118>
  4464c8:	cmn	x25, #0x2
  4464cc:	b.eq	446510 <_obstack_memory_used@@Base+0x82b0>  // b.none
  4464d0:	cbz	x19, 4464f4 <_obstack_memory_used@@Base+0x8294>
  4464d4:	sub	x1, x29, #0x8
  4464d8:	sub	x4, x29, #0x20
  4464dc:	mov	x0, x19
  4464e0:	mov	x2, x21
  4464e4:	mov	x3, x20
  4464e8:	bl	44aa4c <_obstack_memory_used@@Base+0xc7ec>
  4464ec:	mov	x25, x0
  4464f0:	b	4464b4 <_obstack_memory_used@@Base+0x8254>
  4464f4:	ldur	x0, [x29, #-16]
  4464f8:	bl	4049d0 <free@plt>
  4464fc:	cbz	w27, 446508 <_obstack_memory_used@@Base+0x82a8>
  446500:	mov	x0, x24
  446504:	bl	4049d0 <free@plt>
  446508:	mov	w0, #0x1                   	// #1
  44650c:	b	446530 <_obstack_memory_used@@Base+0x82d0>
  446510:	ldur	x0, [x29, #-16]
  446514:	bl	4049d0 <free@plt>
  446518:	cbz	w27, 446524 <_obstack_memory_used@@Base+0x82c4>
  44651c:	mov	x0, x24
  446520:	bl	4049d0 <free@plt>
  446524:	mov	x0, x19
  446528:	bl	44a918 <_obstack_memory_used@@Base+0xc6b8>
  44652c:	mov	w0, #0xc                   	// #12
  446530:	mov	sp, x29
  446534:	ldp	x20, x19, [sp, #80]
  446538:	ldp	x22, x21, [sp, #64]
  44653c:	ldp	x24, x23, [sp, #48]
  446540:	ldp	x26, x25, [sp, #32]
  446544:	ldp	x28, x27, [sp, #16]
  446548:	ldp	x29, x30, [sp], #96
  44654c:	ret
  446550:	stp	x29, x30, [sp, #-32]!
  446554:	str	x19, [sp, #16]
  446558:	mov	x29, sp
  44655c:	mov	x19, x0
  446560:	bl	4461dc <_obstack_memory_used@@Base+0x7f7c>
  446564:	ldr	x0, [x19, #248]
  446568:	bl	4049d0 <free@plt>
  44656c:	ldr	x0, [x19, #216]
  446570:	bl	4049d0 <free@plt>
  446574:	ldr	x19, [sp, #16]
  446578:	ldp	x29, x30, [sp], #32
  44657c:	ret
  446580:	stp	x29, x30, [sp, #-32]!
  446584:	stp	x20, x19, [sp, #16]
  446588:	mov	x19, x0
  44658c:	mov	x29, sp
  446590:	tbnz	x1, #63, 4465c8 <_obstack_memory_used@@Base+0x8368>
  446594:	ldr	x8, [x19, #88]
  446598:	cmp	x8, x1
  44659c:	b.eq	44662c <_obstack_memory_used@@Base+0x83cc>  // b.none
  4465a0:	ldr	w8, [x19, #144]
  4465a4:	cmp	w8, #0x2
  4465a8:	b.lt	4465d0 <_obstack_memory_used@@Base+0x8370>  // b.tstop
  4465ac:	ldr	x9, [x19, #16]
  4465b0:	ldr	w8, [x9, x1, lsl #2]
  4465b4:	cmn	w8, #0x1
  4465b8:	b.ne	4465f0 <_obstack_memory_used@@Base+0x8390>  // b.any
  4465bc:	cmp	x1, #0x0
  4465c0:	sub	x1, x1, #0x1
  4465c4:	b.gt	4465b0 <_obstack_memory_used@@Base+0x8350>
  4465c8:	ldr	w0, [x19, #112]
  4465cc:	b	446620 <_obstack_memory_used@@Base+0x83c0>
  4465d0:	ldr	x8, [x19, #8]
  4465d4:	ldr	x0, [x19, #128]
  4465d8:	ldrb	w20, [x8, x1]
  4465dc:	mov	x1, x20
  4465e0:	bl	446728 <_obstack_memory_used@@Base+0x84c8>
  4465e4:	tbz	w0, #0, 446614 <_obstack_memory_used@@Base+0x83b4>
  4465e8:	mov	w0, #0x1                   	// #1
  4465ec:	b	446620 <_obstack_memory_used@@Base+0x83c0>
  4465f0:	ldrb	w9, [x19, #142]
  4465f4:	cbnz	w9, 44663c <_obstack_memory_used@@Base+0x83dc>
  4465f8:	cmp	w8, #0xa
  4465fc:	b.ne	44661c <_obstack_memory_used@@Base+0x83bc>  // b.any
  446600:	ldrb	w8, [x19, #141]
  446604:	cmp	w8, #0x0
  446608:	cset	w8, ne  // ne = any
  44660c:	lsl	w0, w8, #1
  446610:	b	446620 <_obstack_memory_used@@Base+0x83c0>
  446614:	cmp	w20, #0xa
  446618:	b.eq	446600 <_obstack_memory_used@@Base+0x83a0>  // b.none
  44661c:	mov	w0, wzr
  446620:	ldp	x20, x19, [sp, #16]
  446624:	ldp	x29, x30, [sp], #32
  446628:	ret
  44662c:	and	w8, w2, #0x2
  446630:	mov	w9, #0xa                   	// #10
  446634:	eor	w0, w8, w9
  446638:	b	446620 <_obstack_memory_used@@Base+0x83c0>
  44663c:	mov	w0, w8
  446640:	mov	w20, w8
  446644:	bl	404bc0 <iswalnum@plt>
  446648:	mov	w9, w0
  44664c:	cmp	w20, #0x5f
  446650:	mov	w0, #0x1                   	// #1
  446654:	b.eq	446620 <_obstack_memory_used@@Base+0x83c0>  // b.none
  446658:	mov	w8, w20
  44665c:	cbz	w9, 4465f8 <_obstack_memory_used@@Base+0x8398>
  446660:	b	446620 <_obstack_memory_used@@Base+0x83c0>
  446664:	stp	x29, x30, [sp, #-80]!
  446668:	stp	x24, x23, [sp, #32]
  44666c:	stp	x22, x21, [sp, #48]
  446670:	stp	x20, x19, [sp, #64]
  446674:	ldr	x8, [x0, #40]
  446678:	ldr	x9, [x0, #56]
  44667c:	mov	x20, x2
  446680:	str	x25, [sp, #16]
  446684:	mov	x29, sp
  446688:	add	x19, x9, x8
  44668c:	cmp	x19, x1
  446690:	b.ge	446704 <_obstack_memory_used@@Base+0x84a4>  // b.tcont
  446694:	mov	x21, x1
  446698:	mov	x22, x0
  44669c:	add	x23, x0, #0x20
  4466a0:	ldr	x8, [x22, #80]
  4466a4:	ldr	x9, [x22]
  4466a8:	ldr	x25, [x22, #32]
  4466ac:	add	x0, x29, #0x1c
  4466b0:	sub	x24, x8, x19
  4466b4:	add	x1, x9, x19
  4466b8:	mov	x2, x24
  4466bc:	mov	x3, x23
  4466c0:	bl	43ded0 <argp_usage@@Base+0xc2d4>
  4466c4:	sub	x8, x0, #0x1
  4466c8:	cmn	x8, #0x3
  4466cc:	b.cs	4466e4 <_obstack_memory_used@@Base+0x8484>  // b.hs, b.nlast
  4466d0:	ldr	w8, [x29, #28]
  4466d4:	add	x19, x0, x19
  4466d8:	cmp	x19, x21
  4466dc:	b.lt	4466a0 <_obstack_memory_used@@Base+0x8440>  // b.tstop
  4466e0:	b	446708 <_obstack_memory_used@@Base+0x84a8>
  4466e4:	mov	w8, wzr
  4466e8:	cbz	x24, 4466f8 <_obstack_memory_used@@Base+0x8498>
  4466ec:	cbz	x0, 4466f8 <_obstack_memory_used@@Base+0x8498>
  4466f0:	ldr	x8, [x22]
  4466f4:	ldrb	w8, [x8, x19]
  4466f8:	str	x25, [x23]
  4466fc:	mov	w0, #0x1                   	// #1
  446700:	b	4466d4 <_obstack_memory_used@@Base+0x8474>
  446704:	mov	w8, #0xffffffff            	// #-1
  446708:	str	w8, [x20]
  44670c:	mov	x0, x19
  446710:	ldp	x20, x19, [sp, #64]
  446714:	ldp	x22, x21, [sp, #48]
  446718:	ldp	x24, x23, [sp, #32]
  44671c:	ldr	x25, [sp, #16]
  446720:	ldp	x29, x30, [sp], #80
  446724:	ret
  446728:	add	x8, x1, #0x3f
  44672c:	cmp	x1, #0x0
  446730:	csel	x8, x8, x1, lt  // lt = tstop
  446734:	asr	x8, x8, #6
  446738:	ldr	x8, [x0, x8, lsl #3]
  44673c:	lsr	x8, x8, x1
  446740:	and	w0, w8, #0x1
  446744:	ret
  446748:	stp	x29, x30, [sp, #-64]!
  44674c:	stp	x24, x23, [sp, #16]
  446750:	stp	x22, x21, [sp, #32]
  446754:	stp	x20, x19, [sp, #48]
  446758:	ldr	x8, [x1, #8]
  44675c:	mov	x29, sp
  446760:	cmp	x8, #0x1
  446764:	b.lt	4467f0 <_obstack_memory_used@@Base+0x8590>  // b.tstop
  446768:	ldr	x24, [x0, #152]
  44676c:	mov	x19, x2
  446770:	mov	x20, x1
  446774:	mov	x21, x0
  446778:	mov	x23, xzr
  44677c:	ldr	x8, [x20, #16]
  446780:	ldr	x1, [x8, x23, lsl #3]
  446784:	ldr	x8, [x24]
  446788:	add	x9, x8, x1, lsl #4
  44678c:	ldrb	w9, [x9, #8]
  446790:	cmp	w9, #0x8
  446794:	b.ne	4467c4 <_obstack_memory_used@@Base+0x8564>  // b.any
  446798:	lsl	x9, x1, #4
  44679c:	ldr	x8, [x8, x9]
  4467a0:	cmp	x8, #0x3f
  4467a4:	b.gt	4467c4 <_obstack_memory_used@@Base+0x8564>
  4467a8:	ldr	x9, [x24, #160]
  4467ac:	lsr	x8, x9, x8
  4467b0:	tbz	w8, #0, 4467c4 <_obstack_memory_used@@Base+0x8564>
  4467b4:	mov	x0, x21
  4467b8:	mov	x2, x19
  4467bc:	bl	446e8c <_obstack_memory_used@@Base+0x8c2c>
  4467c0:	cbnz	w0, 4467e0 <_obstack_memory_used@@Base+0x8580>
  4467c4:	mov	w8, #0x1                   	// #1
  4467c8:	tbz	w8, #0, 4467f4 <_obstack_memory_used@@Base+0x8594>
  4467cc:	ldr	x8, [x20, #8]
  4467d0:	add	x23, x23, #0x1
  4467d4:	cmp	x23, x8
  4467d8:	b.lt	44677c <_obstack_memory_used@@Base+0x851c>  // b.tstop
  4467dc:	b	4467f0 <_obstack_memory_used@@Base+0x8590>
  4467e0:	mov	w8, wzr
  4467e4:	mov	w22, w0
  4467e8:	tbnz	w8, #0, 4467cc <_obstack_memory_used@@Base+0x856c>
  4467ec:	b	4467f4 <_obstack_memory_used@@Base+0x8594>
  4467f0:	mov	w22, wzr
  4467f4:	mov	w0, w22
  4467f8:	ldp	x20, x19, [sp, #48]
  4467fc:	ldp	x22, x21, [sp, #32]
  446800:	ldp	x24, x23, [sp, #16]
  446804:	ldp	x29, x30, [sp], #64
  446808:	ret
  44680c:	sub	sp, sp, #0xa0
  446810:	stp	x29, x30, [sp, #64]
  446814:	stp	x28, x27, [sp, #80]
  446818:	stp	x26, x25, [sp, #96]
  44681c:	stp	x24, x23, [sp, #112]
  446820:	stp	x22, x21, [sp, #128]
  446824:	stp	x20, x19, [sp, #144]
  446828:	ldr	x8, [x1, #8]
  44682c:	add	x29, sp, #0x40
  446830:	cmp	x8, #0x1
  446834:	b.lt	446af8 <_obstack_memory_used@@Base+0x8898>  // b.tstop
  446838:	ldr	x25, [x0, #152]
  44683c:	ldr	x22, [x0, #72]
  446840:	mov	x24, x1
  446844:	mov	x20, x0
  446848:	mov	x26, xzr
  44684c:	str	x1, [sp]
  446850:	str	x25, [sp, #16]
  446854:	b	446868 <_obstack_memory_used@@Base+0x8608>
  446858:	ldr	x8, [x24, #8]
  44685c:	add	x26, x26, #0x1
  446860:	cmp	x26, x8
  446864:	b.ge	446af8 <_obstack_memory_used@@Base+0x8898>  // b.tcont
  446868:	ldr	x8, [x24, #16]
  44686c:	ldr	x23, [x8, x26, lsl #3]
  446870:	ldr	x8, [x25]
  446874:	add	x8, x8, x23, lsl #4
  446878:	ldr	w19, [x8, #8]
  44687c:	and	w8, w19, #0xff
  446880:	cmp	w8, #0x4
  446884:	b.ne	4468c4 <_obstack_memory_used@@Base+0x8664>  // b.any
  446888:	tst	w19, #0x3ff00
  44688c:	b.eq	4468d0 <_obstack_memory_used@@Base+0x8670>  // b.none
  446890:	ldr	w2, [x20, #160]
  446894:	mov	x0, x20
  446898:	mov	x1, x22
  44689c:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  4468a0:	and	w8, w0, #0x1
  4468a4:	tbz	w19, #10, 4468ac <_obstack_memory_used@@Base+0x864c>
  4468a8:	cbz	w8, 4468c4 <_obstack_memory_used@@Base+0x8664>
  4468ac:	tbz	w19, #11, 4468b4 <_obstack_memory_used@@Base+0x8654>
  4468b0:	cbnz	w8, 4468c4 <_obstack_memory_used@@Base+0x8664>
  4468b4:	tbz	w19, #13, 4468bc <_obstack_memory_used@@Base+0x865c>
  4468b8:	tbz	w0, #1, 4468c4 <_obstack_memory_used@@Base+0x8664>
  4468bc:	tbz	w19, #15, 4468d0 <_obstack_memory_used@@Base+0x8670>
  4468c0:	tbnz	w0, #3, 4468d0 <_obstack_memory_used@@Base+0x8670>
  4468c4:	mov	w8, #0x4                   	// #4
  4468c8:	cbnz	w8, 446ae0 <_obstack_memory_used@@Base+0x8880>
  4468cc:	b	446858 <_obstack_memory_used@@Base+0x85f8>
  4468d0:	ldr	x28, [x20, #200]
  4468d4:	mov	x0, x20
  4468d8:	mov	x1, x23
  4468dc:	mov	x2, x22
  4468e0:	bl	446f24 <_obstack_memory_used@@Base+0x8cc4>
  4468e4:	stur	w0, [x29, #-4]
  4468e8:	cbnz	w0, 446aec <_obstack_memory_used@@Base+0x888c>
  4468ec:	ldr	x8, [x20, #200]
  4468f0:	cmp	x28, x8
  4468f4:	b.ge	446ad8 <_obstack_memory_used@@Base+0x8878>  // b.tcont
  4468f8:	add	x8, x28, x28, lsl #2
  4468fc:	lsl	x27, x8, #3
  446900:	ldr	x8, [x20, #216]
  446904:	ldr	x9, [x8, x27]
  446908:	cmp	x9, x23
  44690c:	b.ne	446944 <_obstack_memory_used@@Base+0x86e4>  // b.any
  446910:	add	x8, x8, x27
  446914:	ldr	x9, [x8, #8]
  446918:	cmp	x9, x22
  44691c:	b.ne	446944 <_obstack_memory_used@@Base+0x86e4>  // b.any
  446920:	ldp	x21, x19, [x8, #16]
  446924:	ldr	x8, [x25, #48]
  446928:	cmp	x19, x21
  44692c:	b.ne	44696c <_obstack_memory_used@@Base+0x870c>  // b.any
  446930:	ldr	x9, [x25, #40]
  446934:	mov	w11, #0x18                  	// #24
  446938:	madd	x9, x23, x11, x9
  44693c:	ldr	x9, [x9, #16]
  446940:	b	446978 <_obstack_memory_used@@Base+0x8718>
  446944:	mov	w8, #0x8                   	// #8
  446948:	orr	w9, w8, #0x8
  44694c:	cmp	w9, #0x8
  446950:	b.ne	446adc <_obstack_memory_used@@Base+0x887c>  // b.any
  446954:	ldr	x8, [x20, #200]
  446958:	add	x28, x28, #0x1
  44695c:	add	x27, x27, #0x28
  446960:	cmp	x28, x8
  446964:	b.lt	446900 <_obstack_memory_used@@Base+0x86a0>  // b.tstop
  446968:	b	446ad8 <_obstack_memory_used@@Base+0x8878>
  44696c:	ldr	x9, [x25, #24]
  446970:	mov	w11, #0x18                  	// #24
  446974:	add	x9, x9, x23, lsl #3
  446978:	ldr	x9, [x9]
  44697c:	ldr	w2, [x20, #160]
  446980:	add	x10, x19, x22
  446984:	sub	x24, x10, x21
  446988:	madd	x8, x9, x11, x8
  44698c:	sub	x1, x24, #0x1
  446990:	mov	x0, x20
  446994:	str	x8, [sp, #24]
  446998:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  44699c:	ldr	x8, [x20, #184]
  4469a0:	mov	w25, w0
  4469a4:	ldr	x9, [x8, x22, lsl #3]
  4469a8:	ldr	x8, [x8, x24, lsl #3]
  4469ac:	cbz	x9, 446a28 <_obstack_memory_used@@Base+0x87c8>
  4469b0:	ldr	x9, [x9, #16]
  4469b4:	str	x9, [sp, #8]
  4469b8:	cbz	x8, 446a30 <_obstack_memory_used@@Base+0x87d0>
  4469bc:	ldr	x1, [x8, #80]
  4469c0:	ldr	x2, [sp, #24]
  4469c4:	add	x0, sp, #0x20
  4469c8:	bl	4472e0 <_obstack_memory_used@@Base+0x9080>
  4469cc:	stur	w0, [x29, #-4]
  4469d0:	cbnz	w0, 446ac8 <_obstack_memory_used@@Base+0x8868>
  4469d4:	ldr	x1, [sp, #16]
  4469d8:	sub	x0, x29, #0x4
  4469dc:	add	x2, sp, #0x20
  4469e0:	mov	w3, w25
  4469e4:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  4469e8:	ldr	x8, [x20, #184]
  4469ec:	lsl	x24, x24, #3
  4469f0:	str	x0, [x8, x24]
  4469f4:	ldr	x0, [sp, #48]
  4469f8:	bl	4049d0 <free@plt>
  4469fc:	ldr	x8, [x20, #184]
  446a00:	ldur	w9, [x29, #-4]
  446a04:	ldr	x8, [x8, x24]
  446a08:	cmp	w9, #0x0
  446a0c:	ccmp	x8, #0x0, #0x0, ne  // ne = any
  446a10:	mov	w8, #0x5                   	// #5
  446a14:	csel	w8, w8, wzr, eq  // eq = none
  446a18:	ldr	x24, [sp]
  446a1c:	ldr	x25, [sp, #16]
  446a20:	cbnz	w8, 446948 <_obstack_memory_used@@Base+0x86e8>
  446a24:	b	446a68 <_obstack_memory_used@@Base+0x8808>
  446a28:	str	xzr, [sp, #8]
  446a2c:	cbnz	x8, 4469bc <_obstack_memory_used@@Base+0x875c>
  446a30:	ldp	x1, x2, [sp, #16]
  446a34:	sub	x0, x29, #0x4
  446a38:	mov	w3, w25
  446a3c:	mov	x25, x1
  446a40:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  446a44:	ldr	x8, [x20, #184]
  446a48:	lsl	x9, x24, #3
  446a4c:	ldr	x24, [sp]
  446a50:	str	x0, [x8, x9]
  446a54:	ldr	x8, [x20, #184]
  446a58:	ldr	x8, [x8, x9]
  446a5c:	cbnz	x8, 446a68 <_obstack_memory_used@@Base+0x8808>
  446a60:	ldur	w8, [x29, #-4]
  446a64:	cbnz	w8, 446ac0 <_obstack_memory_used@@Base+0x8860>
  446a68:	cmp	x19, x21
  446a6c:	b.ne	446ab8 <_obstack_memory_used@@Base+0x8858>  // b.any
  446a70:	ldr	x8, [x20, #184]
  446a74:	ldr	x9, [sp, #8]
  446a78:	ldr	x8, [x8, x22, lsl #3]
  446a7c:	ldr	x8, [x8, #16]
  446a80:	cmp	x8, x9
  446a84:	b.le	446ab8 <_obstack_memory_used@@Base+0x8858>
  446a88:	ldr	x19, [sp, #24]
  446a8c:	mov	x0, x20
  446a90:	mov	x2, x22
  446a94:	mov	x1, x19
  446a98:	bl	446748 <_obstack_memory_used@@Base+0x84e8>
  446a9c:	stur	w0, [x29, #-4]
  446aa0:	cbnz	w0, 446ac0 <_obstack_memory_used@@Base+0x8860>
  446aa4:	mov	x0, x20
  446aa8:	mov	x1, x19
  446aac:	bl	44680c <_obstack_memory_used@@Base+0x85ac>
  446ab0:	stur	w0, [x29, #-4]
  446ab4:	cbnz	w0, 446ac0 <_obstack_memory_used@@Base+0x8860>
  446ab8:	mov	w8, wzr
  446abc:	b	446948 <_obstack_memory_used@@Base+0x86e8>
  446ac0:	mov	w8, #0x5                   	// #5
  446ac4:	b	446948 <_obstack_memory_used@@Base+0x86e8>
  446ac8:	ldr	x0, [sp, #48]
  446acc:	bl	4049d0 <free@plt>
  446ad0:	mov	w8, #0x5                   	// #5
  446ad4:	b	446a18 <_obstack_memory_used@@Base+0x87b8>
  446ad8:	mov	w8, wzr
  446adc:	cbz	w8, 446858 <_obstack_memory_used@@Base+0x85f8>
  446ae0:	cmp	w8, #0x4
  446ae4:	b.eq	446858 <_obstack_memory_used@@Base+0x85f8>  // b.none
  446ae8:	b	446b20 <_obstack_memory_used@@Base+0x88c0>
  446aec:	mov	w8, #0x5                   	// #5
  446af0:	cbnz	w8, 446ae0 <_obstack_memory_used@@Base+0x8880>
  446af4:	b	446858 <_obstack_memory_used@@Base+0x85f8>
  446af8:	stur	wzr, [x29, #-4]
  446afc:	ldur	w0, [x29, #-4]
  446b00:	ldp	x20, x19, [sp, #144]
  446b04:	ldp	x22, x21, [sp, #128]
  446b08:	ldp	x24, x23, [sp, #112]
  446b0c:	ldp	x26, x25, [sp, #96]
  446b10:	ldp	x28, x27, [sp, #80]
  446b14:	ldp	x29, x30, [sp, #64]
  446b18:	add	sp, sp, #0xa0
  446b1c:	ret
  446b20:	cmp	w8, #0x5
  446b24:	b.eq	446afc <_obstack_memory_used@@Base+0x889c>  // b.none
  446b28:	b	446b00 <_obstack_memory_used@@Base+0x88a0>
  446b2c:	stp	x29, x30, [sp, #-32]!
  446b30:	ldr	x8, [x0, #64]
  446b34:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  446b38:	str	x19, [sp, #16]
  446b3c:	mov	x29, sp
  446b40:	cmp	x8, x9
  446b44:	b.hi	446bec <_obstack_memory_used@@Base+0x898c>  // b.pmore
  446b48:	ldr	x9, [x0, #88]
  446b4c:	lsl	x8, x8, #1
  446b50:	sxtw	x10, w1
  446b54:	mov	x19, x0
  446b58:	cmp	x9, x8
  446b5c:	csel	x8, x9, x8, lt  // lt = tstop
  446b60:	cmp	x8, x10
  446b64:	csel	x1, x8, x10, gt
  446b68:	bl	440510 <_obstack_memory_used@@Base+0x22b0>
  446b6c:	cbnz	w0, 446be0 <_obstack_memory_used@@Base+0x8980>
  446b70:	ldr	x0, [x19, #184]
  446b74:	cbz	x0, 446b90 <_obstack_memory_used@@Base+0x8930>
  446b78:	ldr	x8, [x19, #64]
  446b7c:	lsl	x8, x8, #3
  446b80:	add	x1, x8, #0x8
  446b84:	bl	404730 <realloc@plt>
  446b88:	cbz	x0, 446bec <_obstack_memory_used@@Base+0x898c>
  446b8c:	str	x0, [x19, #184]
  446b90:	ldr	w8, [x19, #144]
  446b94:	ldrb	w9, [x19, #136]
  446b98:	cmp	w8, #0x2
  446b9c:	cbz	w9, 446bb4 <_obstack_memory_used@@Base+0x8954>
  446ba0:	mov	x0, x19
  446ba4:	b.lt	446bc4 <_obstack_memory_used@@Base+0x8964>  // b.tstop
  446ba8:	bl	4405c4 <_obstack_memory_used@@Base+0x2364>
  446bac:	cbz	w0, 446bdc <_obstack_memory_used@@Base+0x897c>
  446bb0:	b	446be0 <_obstack_memory_used@@Base+0x8980>
  446bb4:	b.lt	446bcc <_obstack_memory_used@@Base+0x896c>  // b.tstop
  446bb8:	mov	x0, x19
  446bbc:	bl	440c3c <_obstack_memory_used@@Base+0x29dc>
  446bc0:	b	446bdc <_obstack_memory_used@@Base+0x897c>
  446bc4:	bl	440bbc <_obstack_memory_used@@Base+0x295c>
  446bc8:	b	446bdc <_obstack_memory_used@@Base+0x897c>
  446bcc:	ldr	x8, [x19, #120]
  446bd0:	cbz	x8, 446bdc <_obstack_memory_used@@Base+0x897c>
  446bd4:	mov	x0, x19
  446bd8:	bl	440de0 <_obstack_memory_used@@Base+0x2b80>
  446bdc:	mov	w0, wzr
  446be0:	ldr	x19, [sp, #16]
  446be4:	ldp	x29, x30, [sp], #32
  446be8:	ret
  446bec:	mov	w0, #0xc                   	// #12
  446bf0:	b	446be0 <_obstack_memory_used@@Base+0x8980>
  446bf4:	stp	x29, x30, [sp, #-64]!
  446bf8:	stp	x22, x21, [sp, #32]
  446bfc:	stp	x20, x19, [sp, #48]
  446c00:	ldrb	w8, [x2, #104]
  446c04:	mov	x20, x2
  446c08:	mov	x19, x1
  446c0c:	mov	x21, x0
  446c10:	str	x23, [sp, #16]
  446c14:	mov	x29, sp
  446c18:	tbnz	w8, #5, 446c78 <_obstack_memory_used@@Base+0x8a18>
  446c1c:	ldr	x8, [x19, #72]
  446c20:	ldr	x9, [x19, #8]
  446c24:	add	x10, x8, #0x1
  446c28:	str	x10, [x19, #72]
  446c2c:	ldrb	w22, [x9, x8]
  446c30:	ldr	x8, [x20, #88]
  446c34:	cbnz	x8, 446c60 <_obstack_memory_used@@Base+0x8a00>
  446c38:	ldr	x23, [x20, #96]
  446c3c:	cbnz	x23, 446c94 <_obstack_memory_used@@Base+0x8a34>
  446c40:	ldr	x0, [x19, #152]
  446c44:	mov	x1, x20
  446c48:	bl	448a70 <_obstack_memory_used@@Base+0xa810>
  446c4c:	tbnz	w0, #0, 446c30 <_obstack_memory_used@@Base+0x89d0>
  446c50:	mov	x0, xzr
  446c54:	mov	w8, #0xc                   	// #12
  446c58:	str	w8, [x21]
  446c5c:	b	446c64 <_obstack_memory_used@@Base+0x8a04>
  446c60:	ldr	x0, [x8, x22, lsl #3]
  446c64:	ldp	x20, x19, [sp, #48]
  446c68:	ldp	x22, x21, [sp, #32]
  446c6c:	ldr	x23, [sp, #16]
  446c70:	ldp	x29, x30, [sp], #64
  446c74:	ret
  446c78:	mov	x0, x19
  446c7c:	mov	x1, x20
  446c80:	bl	4488a4 <_obstack_memory_used@@Base+0xa644>
  446c84:	str	w0, [x21]
  446c88:	cbz	w0, 446c1c <_obstack_memory_used@@Base+0x89bc>
  446c8c:	mov	x0, xzr
  446c90:	b	446c64 <_obstack_memory_used@@Base+0x8a04>
  446c94:	ldr	x8, [x19, #72]
  446c98:	ldr	w2, [x19, #160]
  446c9c:	mov	x0, x19
  446ca0:	sub	x1, x8, #0x1
  446ca4:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  446ca8:	ubfiz	w8, w0, #8, #1
  446cac:	orr	x8, x8, x22
  446cb0:	ldr	x0, [x23, x8, lsl #3]
  446cb4:	b	446c64 <_obstack_memory_used@@Base+0x8a04>
  446cb8:	sub	sp, sp, #0x60
  446cbc:	stp	x29, x30, [sp, #32]
  446cc0:	stp	x24, x23, [sp, #48]
  446cc4:	stp	x22, x21, [sp, #64]
  446cc8:	stp	x20, x19, [sp, #80]
  446ccc:	ldr	x20, [x1, #72]
  446cd0:	ldp	x8, x9, [x1, #184]
  446cd4:	ldr	x23, [x1, #152]
  446cd8:	mov	x22, x2
  446cdc:	mov	x19, x1
  446ce0:	cmp	x20, x9
  446ce4:	mov	x21, x0
  446ce8:	add	x29, sp, #0x20
  446cec:	b.le	446cfc <_obstack_memory_used@@Base+0x8a9c>
  446cf0:	str	x22, [x8, x20, lsl #3]
  446cf4:	str	x20, [x19, #192]
  446cf8:	b	446d94 <_obstack_memory_used@@Base+0x8b34>
  446cfc:	ldr	x9, [x8, x20, lsl #3]
  446d00:	cbz	x9, 446d30 <_obstack_memory_used@@Base+0x8ad0>
  446d04:	ldr	x8, [x8, x20, lsl #3]
  446d08:	ldr	x2, [x8, #80]
  446d0c:	cbz	x22, 446d38 <_obstack_memory_used@@Base+0x8ad8>
  446d10:	ldr	x24, [x22, #80]
  446d14:	mov	x0, sp
  446d18:	mov	x1, x24
  446d1c:	bl	4472e0 <_obstack_memory_used@@Base+0x9080>
  446d20:	str	w0, [x21]
  446d24:	cbz	w0, 446d4c <_obstack_memory_used@@Base+0x8aec>
  446d28:	mov	w8, wzr
  446d2c:	b	446d90 <_obstack_memory_used@@Base+0x8b30>
  446d30:	str	x22, [x8, x20, lsl #3]
  446d34:	b	446d94 <_obstack_memory_used@@Base+0x8b34>
  446d38:	ldr	x8, [x2, #16]
  446d3c:	ldr	q0, [x2]
  446d40:	mov	x24, xzr
  446d44:	str	x8, [sp, #16]
  446d48:	str	q0, [sp]
  446d4c:	ldr	x8, [x19, #72]
  446d50:	ldr	w2, [x19, #160]
  446d54:	mov	x0, x19
  446d58:	sub	x1, x8, #0x1
  446d5c:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  446d60:	mov	w3, w0
  446d64:	mov	x2, sp
  446d68:	mov	x0, x21
  446d6c:	mov	x1, x23
  446d70:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  446d74:	ldr	x8, [x19, #184]
  446d78:	mov	x22, x0
  446d7c:	str	x0, [x8, x20, lsl #3]
  446d80:	cbz	x24, 446d8c <_obstack_memory_used@@Base+0x8b2c>
  446d84:	ldr	x0, [sp, #16]
  446d88:	bl	4049d0 <free@plt>
  446d8c:	mov	w8, #0x1                   	// #1
  446d90:	cbz	w8, 446de4 <_obstack_memory_used@@Base+0x8b84>
  446d94:	cbz	x22, 446de8 <_obstack_memory_used@@Base+0x8b88>
  446d98:	ldr	x8, [x23, #152]
  446d9c:	cbz	x8, 446de8 <_obstack_memory_used@@Base+0x8b88>
  446da0:	add	x23, x22, #0x8
  446da4:	mov	x0, x19
  446da8:	mov	x1, x23
  446dac:	mov	x2, x20
  446db0:	bl	446748 <_obstack_memory_used@@Base+0x84e8>
  446db4:	str	w0, [x21]
  446db8:	cbnz	w0, 446de4 <_obstack_memory_used@@Base+0x8b84>
  446dbc:	ldrb	w8, [x22, #104]
  446dc0:	tbz	w8, #6, 446de8 <_obstack_memory_used@@Base+0x8b88>
  446dc4:	mov	x0, x19
  446dc8:	mov	x1, x23
  446dcc:	bl	44680c <_obstack_memory_used@@Base+0x85ac>
  446dd0:	str	w0, [x21]
  446dd4:	cbnz	w0, 446de4 <_obstack_memory_used@@Base+0x8b84>
  446dd8:	ldr	x8, [x19, #184]
  446ddc:	ldr	x22, [x8, x20, lsl #3]
  446de0:	b	446de8 <_obstack_memory_used@@Base+0x8b88>
  446de4:	mov	x22, xzr
  446de8:	mov	x0, x22
  446dec:	ldp	x20, x19, [sp, #80]
  446df0:	ldp	x22, x21, [sp, #64]
  446df4:	ldp	x24, x23, [sp, #48]
  446df8:	ldp	x29, x30, [sp, #32]
  446dfc:	add	sp, sp, #0x60
  446e00:	ret
  446e04:	stp	x29, x30, [sp, #-32]!
  446e08:	stp	x20, x19, [sp, #16]
  446e0c:	mov	x19, x1
  446e10:	mov	x20, x0
  446e14:	mov	x29, sp
  446e18:	ldr	x8, [x19, #192]
  446e1c:	ldr	x9, [x19, #72]
  446e20:	cmp	x9, x8
  446e24:	b.ge	446e64 <_obstack_memory_used@@Base+0x8c04>  // b.tcont
  446e28:	ldr	x10, [x19, #72]
  446e2c:	ldr	x11, [x19, #184]
  446e30:	add	x10, x10, #0x1
  446e34:	str	x10, [x19, #72]
  446e38:	add	x10, x11, x9, lsl #3
  446e3c:	ldr	x10, [x10, #8]
  446e40:	add	x9, x9, #0x1
  446e44:	cbz	x10, 446e20 <_obstack_memory_used@@Base+0x8bc0>
  446e48:	mov	x0, x20
  446e4c:	mov	x1, x19
  446e50:	mov	x2, xzr
  446e54:	bl	446cb8 <_obstack_memory_used@@Base+0x8a58>
  446e58:	mov	w8, #0x1                   	// #1
  446e5c:	cbnz	w8, 446e6c <_obstack_memory_used@@Base+0x8c0c>
  446e60:	b	446e7c <_obstack_memory_used@@Base+0x8c1c>
  446e64:	mov	w8, wzr
  446e68:	cbz	w8, 446e7c <_obstack_memory_used@@Base+0x8c1c>
  446e6c:	cbnz	x0, 446e80 <_obstack_memory_used@@Base+0x8c20>
  446e70:	ldr	w8, [x20]
  446e74:	cbz	w8, 446e18 <_obstack_memory_used@@Base+0x8bb8>
  446e78:	b	446e80 <_obstack_memory_used@@Base+0x8c20>
  446e7c:	mov	x0, xzr
  446e80:	ldp	x20, x19, [sp, #16]
  446e84:	ldp	x29, x30, [sp], #32
  446e88:	ret
  446e8c:	stp	x29, x30, [sp, #-48]!
  446e90:	stp	x22, x21, [sp, #16]
  446e94:	stp	x20, x19, [sp, #32]
  446e98:	ldp	x8, x22, [x0, #232]
  446e9c:	mov	x19, x2
  446ea0:	mov	x20, x0
  446ea4:	mov	x21, x1
  446ea8:	cmp	x8, x22
  446eac:	mov	x29, sp
  446eb0:	b.eq	446f00 <_obstack_memory_used@@Base+0x8ca0>  // b.none
  446eb4:	mov	w0, #0x1                   	// #1
  446eb8:	mov	w1, #0x30                  	// #48
  446ebc:	bl	4046a0 <calloc@plt>
  446ec0:	ldr	x8, [x20, #232]
  446ec4:	ldr	x9, [x20, #248]
  446ec8:	lsl	x10, x8, #3
  446ecc:	str	x0, [x9, x10]
  446ed0:	ldr	x9, [x20, #248]
  446ed4:	ldr	x9, [x9, x10]
  446ed8:	cbz	x9, 446f1c <_obstack_memory_used@@Base+0x8cbc>
  446edc:	mov	w0, wzr
  446ee0:	add	x8, x8, #0x1
  446ee4:	str	x21, [x9, #8]
  446ee8:	str	x8, [x20, #232]
  446eec:	str	x19, [x9]
  446ef0:	ldp	x20, x19, [sp, #32]
  446ef4:	ldp	x22, x21, [sp, #16]
  446ef8:	ldp	x29, x30, [sp], #48
  446efc:	ret
  446f00:	ldr	x0, [x20, #248]
  446f04:	lsl	x1, x22, #4
  446f08:	bl	404730 <realloc@plt>
  446f0c:	cbz	x0, 446f1c <_obstack_memory_used@@Base+0x8cbc>
  446f10:	lsl	x8, x22, #1
  446f14:	stp	x8, x0, [x20, #240]
  446f18:	b	446eb4 <_obstack_memory_used@@Base+0x8c54>
  446f1c:	mov	w0, #0xc                   	// #12
  446f20:	b	446ef0 <_obstack_memory_used@@Base+0x8c90>
  446f24:	sub	sp, sp, #0x90
  446f28:	stp	x29, x30, [sp, #48]
  446f2c:	stp	x28, x27, [sp, #64]
  446f30:	stp	x26, x25, [sp, #80]
  446f34:	stp	x24, x23, [sp, #96]
  446f38:	stp	x22, x21, [sp, #112]
  446f3c:	stp	x20, x19, [sp, #128]
  446f40:	ldr	x21, [x0, #152]
  446f44:	ldr	x28, [x0, #8]
  446f48:	add	x29, sp, #0x30
  446f4c:	stp	x1, x2, [x29, #-16]
  446f50:	mov	x1, x2
  446f54:	mov	x20, x0
  446f58:	bl	4474e0 <_obstack_memory_used@@Base+0x9280>
  446f5c:	cmn	x0, #0x1
  446f60:	b.eq	446f8c <_obstack_memory_used@@Base+0x8d2c>  // b.none
  446f64:	ldr	x8, [x20, #216]
  446f68:	ldur	x10, [x29, #-16]
  446f6c:	mov	w9, #0x28                  	// #40
  446f70:	madd	x8, x0, x9, x8
  446f74:	ldr	x9, [x8]
  446f78:	cmp	x9, x10
  446f7c:	b.eq	4472bc <_obstack_memory_used@@Base+0x905c>  // b.none
  446f80:	ldrb	w9, [x8, #32]
  446f84:	add	x8, x8, #0x28
  446f88:	cbnz	w9, 446f74 <_obstack_memory_used@@Base+0x8d14>
  446f8c:	ldr	x8, [x20, #232]
  446f90:	cmp	x8, #0x1
  446f94:	b.lt	4472bc <_obstack_memory_used@@Base+0x905c>  // b.tstop
  446f98:	ldur	x9, [x29, #-16]
  446f9c:	ldr	x8, [x21]
  446fa0:	mov	x24, xzr
  446fa4:	str	wzr, [sp, #12]
  446fa8:	lsl	x9, x9, #4
  446fac:	ldr	x22, [x8, x9]
  446fb0:	stp	x22, x21, [sp, #16]
  446fb4:	b	446fc8 <_obstack_memory_used@@Base+0x8d68>
  446fb8:	ldr	x8, [x20, #232]
  446fbc:	add	x24, x24, #0x1
  446fc0:	cmp	x24, x8
  446fc4:	b.ge	4472bc <_obstack_memory_used@@Base+0x905c>  // b.tcont
  446fc8:	ldr	x8, [x20, #248]
  446fcc:	ldr	x9, [x21]
  446fd0:	ldr	x25, [x8, x24, lsl #3]
  446fd4:	ldr	x8, [x25, #8]
  446fd8:	lsl	x8, x8, #4
  446fdc:	ldr	x8, [x9, x8]
  446fe0:	cmp	x8, x22
  446fe4:	b.ne	4470dc <_obstack_memory_used@@Base+0x8e7c>  // b.any
  446fe8:	ldr	x8, [x25, #32]
  446fec:	ldr	x23, [x25]
  446ff0:	cmp	x8, #0x1
  446ff4:	b.lt	4470e4 <_obstack_memory_used@@Base+0x8e84>  // b.tstop
  446ff8:	ldur	x19, [x29, #-8]
  446ffc:	mov	x21, xzr
  447000:	b	447014 <_obstack_memory_used@@Base+0x8db4>
  447004:	ldr	x8, [x25, #32]
  447008:	add	x21, x21, #0x1
  44700c:	cmp	x21, x8
  447010:	b.ge	4470f8 <_obstack_memory_used@@Base+0x8e98>  // b.tcont
  447014:	ldr	x8, [x25, #40]
  447018:	ldr	x26, [x8, x21, lsl #3]
  44701c:	ldr	x22, [x26, #8]
  447020:	sub	x27, x22, x23
  447024:	cmp	x27, #0x1
  447028:	b.lt	447058 <_obstack_memory_used@@Base+0x8df8>  // b.tstop
  44702c:	ldr	x8, [x20, #48]
  447030:	add	x1, x27, x19
  447034:	cmp	x1, x8
  447038:	b.gt	4470a0 <_obstack_memory_used@@Base+0x8e40>
  44703c:	add	x0, x28, x19
  447040:	add	x1, x28, x23
  447044:	mov	x2, x27
  447048:	bl	4046d0 <bcmp@plt>
  44704c:	cbz	w0, 447058 <_obstack_memory_used@@Base+0x8df8>
  447050:	mov	w8, #0x7                   	// #7
  447054:	b	447090 <_obstack_memory_used@@Base+0x8e30>
  447058:	ldp	x3, x4, [x29, #-16]
  44705c:	mov	x0, x20
  447060:	mov	x1, x25
  447064:	mov	x2, x26
  447068:	add	x19, x27, x19
  44706c:	bl	447604 <_obstack_memory_used@@Base+0x93a4>
  447070:	ldr	x28, [x20, #8]
  447074:	cmp	w0, #0x1
  447078:	b.ne	447084 <_obstack_memory_used@@Base+0x8e24>  // b.any
  44707c:	mov	w8, #0x9                   	// #9
  447080:	b	44708c <_obstack_memory_used@@Base+0x8e2c>
  447084:	cbnz	w0, 4470c0 <_obstack_memory_used@@Base+0x8e60>
  447088:	mov	w8, wzr
  44708c:	mov	x23, x22
  447090:	cbz	w8, 447004 <_obstack_memory_used@@Base+0x8da4>
  447094:	cmp	w8, #0x9
  447098:	b.eq	447004 <_obstack_memory_used@@Base+0x8da4>  // b.none
  44709c:	b	4470f0 <_obstack_memory_used@@Base+0x8e90>
  4470a0:	ldr	x8, [x20, #88]
  4470a4:	cmp	x1, x8
  4470a8:	b.gt	447050 <_obstack_memory_used@@Base+0x8df0>
  4470ac:	mov	x0, x20
  4470b0:	bl	447564 <_obstack_memory_used@@Base+0x9304>
  4470b4:	cbnz	w0, 4470d0 <_obstack_memory_used@@Base+0x8e70>
  4470b8:	ldr	x28, [x20, #8]
  4470bc:	b	44703c <_obstack_memory_used@@Base+0x8ddc>
  4470c0:	mov	w8, #0x1                   	// #1
  4470c4:	mov	x23, x22
  4470c8:	str	w0, [sp, #12]
  4470cc:	b	447090 <_obstack_memory_used@@Base+0x8e30>
  4470d0:	mov	w8, #0x1                   	// #1
  4470d4:	str	w0, [sp, #12]
  4470d8:	b	447090 <_obstack_memory_used@@Base+0x8e30>
  4470dc:	mov	w8, #0x6                   	// #6
  4470e0:	b	4472a8 <_obstack_memory_used@@Base+0x9048>
  4470e4:	ldur	x19, [x29, #-8]
  4470e8:	mov	x21, xzr
  4470ec:	b	4470f8 <_obstack_memory_used@@Base+0x8e98>
  4470f0:	cmp	w8, #0x7
  4470f4:	b.ne	447108 <_obstack_memory_used@@Base+0x8ea8>  // b.any
  4470f8:	ldr	x8, [x25, #32]
  4470fc:	cmp	x21, x8
  447100:	b.ge	447110 <_obstack_memory_used@@Base+0x8eb0>  // b.tcont
  447104:	mov	w8, #0x6                   	// #6
  447108:	ldp	x22, x21, [sp, #16]
  44710c:	b	4472a8 <_obstack_memory_used@@Base+0x9048>
  447110:	ldur	x8, [x29, #-8]
  447114:	ldr	x22, [sp, #16]
  447118:	cmp	x21, #0x0
  44711c:	cinc	x26, x23, ne  // ne = any
  447120:	cmp	x26, x8
  447124:	b.le	447130 <_obstack_memory_used@@Base+0x8ed0>
  447128:	ldr	x21, [sp, #24]
  44712c:	b	4472a4 <_obstack_memory_used@@Base+0x9044>
  447130:	ldr	x21, [sp, #24]
  447134:	b	447148 <_obstack_memory_used@@Base+0x8ee8>
  447138:	ldur	x8, [x29, #-8]
  44713c:	cmp	x26, x8
  447140:	add	x26, x26, #0x1
  447144:	b.ge	4472a4 <_obstack_memory_used@@Base+0x9044>  // b.tcont
  447148:	ldr	x8, [x25]
  44714c:	cmp	x26, x8
  447150:	b.le	447178 <_obstack_memory_used@@Base+0x8f18>
  447154:	ldr	x8, [x20, #48]
  447158:	cmp	x19, x8
  44715c:	b.ge	447254 <_obstack_memory_used@@Base+0x8ff4>  // b.tcont
  447160:	add	x9, x28, x26
  447164:	ldrb	w8, [x28, x19]
  447168:	ldurb	w9, [x9, #-1]
  44716c:	add	x19, x19, #0x1
  447170:	cmp	w8, w9
  447174:	b.ne	447278 <_obstack_memory_used@@Base+0x9018>  // b.any
  447178:	ldr	x8, [x20, #184]
  44717c:	ldr	x8, [x8, x26, lsl #3]
  447180:	cbz	x8, 447224 <_obstack_memory_used@@Base+0x8fc4>
  447184:	add	x1, x8, #0x8
  447188:	mov	w3, #0x9                   	// #9
  44718c:	mov	x0, x21
  447190:	mov	x2, x22
  447194:	bl	447694 <_obstack_memory_used@@Base+0x9434>
  447198:	cmn	x0, #0x1
  44719c:	b.eq	447224 <_obstack_memory_used@@Base+0x8fc4>  // b.none
  4471a0:	ldr	x8, [x25, #16]
  4471a4:	mov	x27, x0
  4471a8:	cbnz	x8, 4471c8 <_obstack_memory_used@@Base+0x8f68>
  4471ac:	ldr	x8, [x25]
  4471b0:	mov	w0, #0x18                  	// #24
  4471b4:	sub	x8, x26, x8
  4471b8:	add	x1, x8, #0x1
  4471bc:	bl	4046a0 <calloc@plt>
  4471c0:	str	x0, [x25, #16]
  4471c4:	cbz	x0, 447240 <_obstack_memory_used@@Base+0x8fe0>
  4471c8:	ldp	x2, x1, [x25, #8]
  4471cc:	ldr	x3, [x25]
  4471d0:	mov	w6, #0x9                   	// #9
  4471d4:	mov	x0, x20
  4471d8:	mov	x4, x27
  4471dc:	mov	x5, x26
  4471e0:	bl	447704 <_obstack_memory_used@@Base+0x94a4>
  4471e4:	cmp	w0, #0x1
  4471e8:	b.eq	447224 <_obstack_memory_used@@Base+0x8fc4>  // b.none
  4471ec:	cbnz	w0, 44728c <_obstack_memory_used@@Base+0x902c>
  4471f0:	mov	x0, x25
  4471f4:	mov	x1, x27
  4471f8:	mov	x2, x26
  4471fc:	bl	447a50 <_obstack_memory_used@@Base+0x97f0>
  447200:	cbz	x0, 447240 <_obstack_memory_used@@Base+0x8fe0>
  447204:	ldp	x3, x4, [x29, #-16]
  447208:	mov	x2, x0
  44720c:	mov	x0, x20
  447210:	mov	x1, x25
  447214:	bl	447604 <_obstack_memory_used@@Base+0x93a4>
  447218:	ldr	x28, [x20, #8]
  44721c:	cmp	w0, #0x1
  447220:	b.ne	447230 <_obstack_memory_used@@Base+0x8fd0>  // b.any
  447224:	mov	w8, #0xc                   	// #12
  447228:	cbnz	w8, 447280 <_obstack_memory_used@@Base+0x9020>
  44722c:	b	447138 <_obstack_memory_used@@Base+0x8ed8>
  447230:	cbnz	w0, 44728c <_obstack_memory_used@@Base+0x902c>
  447234:	mov	w8, wzr
  447238:	cbnz	w8, 447280 <_obstack_memory_used@@Base+0x9020>
  44723c:	b	447138 <_obstack_memory_used@@Base+0x8ed8>
  447240:	mov	w8, #0xc                   	// #12
  447244:	str	w8, [sp, #12]
  447248:	mov	w8, #0x1                   	// #1
  44724c:	cbnz	w8, 447280 <_obstack_memory_used@@Base+0x9020>
  447250:	b	447138 <_obstack_memory_used@@Base+0x8ed8>
  447254:	ldr	x8, [x20, #88]
  447258:	cmp	x19, x8
  44725c:	b.ge	447278 <_obstack_memory_used@@Base+0x9018>  // b.tcont
  447260:	add	w1, w19, #0x1
  447264:	mov	x0, x20
  447268:	bl	446b2c <_obstack_memory_used@@Base+0x88cc>
  44726c:	cbnz	w0, 44728c <_obstack_memory_used@@Base+0x902c>
  447270:	ldr	x28, [x20, #8]
  447274:	b	447160 <_obstack_memory_used@@Base+0x8f00>
  447278:	mov	w8, #0xa                   	// #10
  44727c:	cbz	w8, 447138 <_obstack_memory_used@@Base+0x8ed8>
  447280:	cmp	w8, #0xc
  447284:	b.eq	447138 <_obstack_memory_used@@Base+0x8ed8>  // b.none
  447288:	b	44729c <_obstack_memory_used@@Base+0x903c>
  44728c:	mov	w8, #0x1                   	// #1
  447290:	str	w0, [sp, #12]
  447294:	cbnz	w8, 447280 <_obstack_memory_used@@Base+0x9020>
  447298:	b	447138 <_obstack_memory_used@@Base+0x8ed8>
  44729c:	cmp	w8, #0xa
  4472a0:	b.ne	4472a8 <_obstack_memory_used@@Base+0x9048>  // b.any
  4472a4:	mov	w8, wzr
  4472a8:	cmp	w8, #0x6
  4472ac:	b.eq	446fb8 <_obstack_memory_used@@Base+0x8d58>  // b.none
  4472b0:	cbz	w8, 446fb8 <_obstack_memory_used@@Base+0x8d58>
  4472b4:	ldr	w0, [sp, #12]
  4472b8:	b	4472c0 <_obstack_memory_used@@Base+0x9060>
  4472bc:	mov	w0, wzr
  4472c0:	ldp	x20, x19, [sp, #128]
  4472c4:	ldp	x22, x21, [sp, #112]
  4472c8:	ldp	x24, x23, [sp, #96]
  4472cc:	ldp	x26, x25, [sp, #80]
  4472d0:	ldp	x28, x27, [sp, #64]
  4472d4:	ldp	x29, x30, [sp, #48]
  4472d8:	add	sp, sp, #0x90
  4472dc:	ret
  4472e0:	stp	x29, x30, [sp, #-64]!
  4472e4:	stp	x20, x19, [sp, #48]
  4472e8:	mov	x20, x2
  4472ec:	mov	x19, x0
  4472f0:	stp	x24, x23, [sp, #16]
  4472f4:	stp	x22, x21, [sp, #32]
  4472f8:	mov	x29, sp
  4472fc:	cbz	x1, 447410 <_obstack_memory_used@@Base+0x91b0>
  447300:	ldr	x8, [x1, #8]
  447304:	mov	x21, x1
  447308:	cbz	x20, 4473f8 <_obstack_memory_used@@Base+0x9198>
  44730c:	cmp	x8, #0x1
  447310:	b.lt	4473f8 <_obstack_memory_used@@Base+0x9198>  // b.tstop
  447314:	ldr	x9, [x20, #8]
  447318:	cmp	x9, #0x1
  44731c:	b.lt	4473f8 <_obstack_memory_used@@Base+0x9198>  // b.tstop
  447320:	add	x8, x9, x8
  447324:	lsl	x0, x8, #3
  447328:	str	x8, [x19]
  44732c:	bl	4044f0 <malloc@plt>
  447330:	str	x0, [x19, #16]
  447334:	cbz	x0, 4474d8 <_obstack_memory_used@@Base+0x9278>
  447338:	ldr	x8, [x21, #8]
  44733c:	cmp	x8, #0x0
  447340:	cset	w9, gt
  447344:	cmp	x8, #0x1
  447348:	b.lt	447440 <_obstack_memory_used@@Base+0x91e0>  // b.tstop
  44734c:	ldr	x10, [x20, #8]
  447350:	cmp	x10, #0x1
  447354:	b.lt	44744c <_obstack_memory_used@@Base+0x91ec>  // b.tstop
  447358:	mov	x24, xzr
  44735c:	mov	x13, xzr
  447360:	mov	x23, xzr
  447364:	mov	x22, x13
  447368:	mov	x10, x23
  44736c:	ldr	x8, [x21, #16]
  447370:	ldr	x9, [x20, #16]
  447374:	ldr	x12, [x8, x24, lsl #3]
  447378:	ldr	x11, [x9, x22, lsl #3]
  44737c:	cmp	x12, x11
  447380:	b.le	4473b8 <_obstack_memory_used@@Base+0x9158>
  447384:	ldr	x8, [x19, #16]
  447388:	add	x22, x22, #0x1
  44738c:	add	x23, x10, #0x1
  447390:	str	x11, [x8, x10, lsl #3]
  447394:	ldr	x8, [x21, #8]
  447398:	cmp	x8, x24
  44739c:	cset	w9, gt
  4473a0:	b.le	44748c <_obstack_memory_used@@Base+0x922c>
  4473a4:	ldr	x10, [x20, #8]
  4473a8:	cmp	x22, x10
  4473ac:	mov	x10, x23
  4473b0:	b.lt	44736c <_obstack_memory_used@@Base+0x910c>  // b.tstop
  4473b4:	b	447458 <_obstack_memory_used@@Base+0x91f8>
  4473b8:	ldr	x8, [x19, #16]
  4473bc:	add	x24, x24, #0x1
  4473c0:	cinc	x13, x22, eq  // eq = none
  4473c4:	add	x23, x10, #0x1
  4473c8:	str	x12, [x8, x10, lsl #3]
  4473cc:	ldr	x8, [x21, #8]
  4473d0:	cmp	x8, x24
  4473d4:	cset	w9, gt
  4473d8:	b.le	447484 <_obstack_memory_used@@Base+0x9224>
  4473dc:	ldr	x14, [x20, #8]
  4473e0:	cmp	x13, x14
  4473e4:	b.lt	447364 <_obstack_memory_used@@Base+0x9104>  // b.tstop
  4473e8:	cmp	x12, x11
  4473ec:	cinc	x22, x22, eq  // eq = none
  4473f0:	add	x23, x10, #0x1
  4473f4:	b	447458 <_obstack_memory_used@@Base+0x91f8>
  4473f8:	cmp	x8, #0x1
  4473fc:	b.lt	447410 <_obstack_memory_used@@Base+0x91b0>  // b.tstop
  447400:	mov	x0, x19
  447404:	mov	x1, x21
  447408:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  44740c:	b	4474c4 <_obstack_memory_used@@Base+0x9264>
  447410:	cbz	x20, 447430 <_obstack_memory_used@@Base+0x91d0>
  447414:	ldr	x8, [x20, #8]
  447418:	cmp	x8, #0x1
  44741c:	b.lt	447430 <_obstack_memory_used@@Base+0x91d0>  // b.tstop
  447420:	mov	x0, x19
  447424:	mov	x1, x20
  447428:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  44742c:	b	4474c4 <_obstack_memory_used@@Base+0x9264>
  447430:	mov	w0, wzr
  447434:	stp	xzr, xzr, [x19]
  447438:	str	xzr, [x19, #16]
  44743c:	b	4474c4 <_obstack_memory_used@@Base+0x9264>
  447440:	mov	x22, xzr
  447444:	mov	x23, xzr
  447448:	b	44748c <_obstack_memory_used@@Base+0x922c>
  44744c:	mov	x24, xzr
  447450:	mov	x23, xzr
  447454:	mov	x22, xzr
  447458:	cbz	w9, 44748c <_obstack_memory_used@@Base+0x922c>
  44745c:	ldr	x9, [x19, #16]
  447460:	ldr	x10, [x21, #16]
  447464:	sub	x8, x8, x24
  447468:	lsl	x2, x8, #3
  44746c:	add	x0, x9, x23, lsl #3
  447470:	add	x1, x10, x24, lsl #3
  447474:	bl	404110 <memcpy@plt>
  447478:	ldr	x8, [x21, #8]
  44747c:	sub	x9, x23, x24
  447480:	b	4474b8 <_obstack_memory_used@@Base+0x9258>
  447484:	cmp	x12, x11
  447488:	cinc	x22, x22, eq  // eq = none
  44748c:	ldr	x8, [x20, #8]
  447490:	subs	x8, x8, x22
  447494:	b.le	4474bc <_obstack_memory_used@@Base+0x925c>
  447498:	ldr	x9, [x19, #16]
  44749c:	ldr	x10, [x20, #16]
  4474a0:	lsl	x2, x8, #3
  4474a4:	add	x0, x9, x23, lsl #3
  4474a8:	add	x1, x10, x22, lsl #3
  4474ac:	bl	404110 <memcpy@plt>
  4474b0:	ldr	x8, [x20, #8]
  4474b4:	sub	x9, x23, x22
  4474b8:	add	x23, x9, x8
  4474bc:	mov	w0, wzr
  4474c0:	str	x23, [x19, #8]
  4474c4:	ldp	x20, x19, [sp, #48]
  4474c8:	ldp	x22, x21, [sp, #32]
  4474cc:	ldp	x24, x23, [sp, #16]
  4474d0:	ldp	x29, x30, [sp], #64
  4474d4:	ret
  4474d8:	mov	w0, #0xc                   	// #12
  4474dc:	b	4474c4 <_obstack_memory_used@@Base+0x9264>
  4474e0:	ldr	x9, [x0, #200]
  4474e4:	mov	x8, x0
  4474e8:	cmp	x9, #0x1
  4474ec:	b.lt	447538 <_obstack_memory_used@@Base+0x92d8>  // b.tstop
  4474f0:	ldr	x10, [x8, #216]
  4474f4:	mov	x0, xzr
  4474f8:	mov	w11, #0x28                  	// #40
  4474fc:	mov	x12, x9
  447500:	add	x13, x0, x12
  447504:	cmp	x13, #0x0
  447508:	cinc	x13, x13, lt  // lt = tstop
  44750c:	asr	x13, x13, #1
  447510:	madd	x14, x13, x11, x10
  447514:	ldr	x14, [x14, #8]
  447518:	cmp	x14, x1
  44751c:	csel	x12, x12, x13, lt  // lt = tstop
  447520:	csinc	x0, x0, x13, ge  // ge = tcont
  447524:	cmp	x0, x12
  447528:	b.lt	447500 <_obstack_memory_used@@Base+0x92a0>  // b.tstop
  44752c:	cmp	x0, x9
  447530:	b.lt	447544 <_obstack_memory_used@@Base+0x92e4>  // b.tstop
  447534:	b	44755c <_obstack_memory_used@@Base+0x92fc>
  447538:	mov	x0, xzr
  44753c:	cmp	x0, x9
  447540:	b.ge	44755c <_obstack_memory_used@@Base+0x92fc>  // b.tcont
  447544:	ldr	x8, [x8, #216]
  447548:	mov	w9, #0x28                  	// #40
  44754c:	madd	x8, x0, x9, x8
  447550:	ldr	x8, [x8, #8]
  447554:	cmp	x8, x1
  447558:	b.eq	447560 <_obstack_memory_used@@Base+0x9300>  // b.none
  44755c:	mov	x0, #0xffffffffffffffff    	// #-1
  447560:	ret
  447564:	stp	x29, x30, [sp, #-48]!
  447568:	stp	x20, x19, [sp, #32]
  44756c:	ldr	x8, [x0, #64]
  447570:	str	x21, [sp, #16]
  447574:	ldr	x21, [x0, #192]
  447578:	mov	x19, x0
  44757c:	mov	x20, x1
  447580:	cmp	x8, x1
  447584:	mov	x29, sp
  447588:	b.gt	447598 <_obstack_memory_used@@Base+0x9338>
  44758c:	ldr	x9, [x19, #88]
  447590:	cmp	x8, x9
  447594:	b.lt	4475b0 <_obstack_memory_used@@Base+0x9350>  // b.tstop
  447598:	ldr	x8, [x19, #48]
  44759c:	cmp	x8, x20
  4475a0:	b.gt	4475c0 <_obstack_memory_used@@Base+0x9360>
  4475a4:	ldr	x9, [x19, #88]
  4475a8:	cmp	x8, x9
  4475ac:	b.ge	4475c0 <_obstack_memory_used@@Base+0x9360>  // b.tcont
  4475b0:	add	w1, w20, #0x1
  4475b4:	mov	x0, x19
  4475b8:	bl	446b2c <_obstack_memory_used@@Base+0x88cc>
  4475bc:	cbnz	w0, 4475f4 <_obstack_memory_used@@Base+0x9394>
  4475c0:	cmp	x21, x20
  4475c4:	b.ge	4475f0 <_obstack_memory_used@@Base+0x9390>  // b.tcont
  4475c8:	ldr	x8, [x19, #184]
  4475cc:	sub	x9, x20, x21
  4475d0:	lsl	x2, x9, #3
  4475d4:	mov	w1, wzr
  4475d8:	add	x8, x8, x21, lsl #3
  4475dc:	add	x0, x8, #0x8
  4475e0:	bl	404600 <memset@plt>
  4475e4:	mov	w0, wzr
  4475e8:	str	x20, [x19, #192]
  4475ec:	b	4475f4 <_obstack_memory_used@@Base+0x9394>
  4475f0:	mov	w0, wzr
  4475f4:	ldp	x20, x19, [sp, #32]
  4475f8:	ldr	x21, [sp, #16]
  4475fc:	ldp	x29, x30, [sp], #48
  447600:	ret
  447604:	stp	x29, x30, [sp, #-64]!
  447608:	stp	x22, x21, [sp, #32]
  44760c:	stp	x20, x19, [sp, #48]
  447610:	mov	x22, x2
  447614:	str	x23, [sp, #16]
  447618:	mov	x23, x3
  44761c:	ldr	x2, [x2]
  447620:	ldr	x3, [x22, #8]
  447624:	mov	x19, x4
  447628:	mov	x21, x1
  44762c:	add	x1, x22, #0x10
  447630:	mov	w6, #0x8                   	// #8
  447634:	mov	x4, x23
  447638:	mov	x5, x19
  44763c:	mov	x29, sp
  447640:	mov	x20, x0
  447644:	bl	447704 <_obstack_memory_used@@Base+0x94a4>
  447648:	cbnz	w0, 447680 <_obstack_memory_used@@Base+0x9420>
  44764c:	ldr	x3, [x21]
  447650:	ldr	x4, [x22, #8]
  447654:	mov	x0, x20
  447658:	mov	x1, x23
  44765c:	mov	x2, x19
  447660:	bl	447ad0 <_obstack_memory_used@@Base+0x9870>
  447664:	cbnz	w0, 447680 <_obstack_memory_used@@Base+0x9420>
  447668:	ldr	x8, [x22, #8]
  44766c:	ldr	x9, [x21]
  447670:	mov	x0, x20
  447674:	add	x8, x8, x19
  447678:	sub	x1, x8, x9
  44767c:	bl	447564 <_obstack_memory_used@@Base+0x9304>
  447680:	ldp	x20, x19, [sp, #48]
  447684:	ldp	x22, x21, [sp, #32]
  447688:	ldr	x23, [sp, #16]
  44768c:	ldp	x29, x30, [sp], #64
  447690:	ret
  447694:	ldr	x8, [x1, #8]
  447698:	cmp	x8, #0x1
  44769c:	b.lt	4476fc <_obstack_memory_used@@Base+0x949c>  // b.tstop
  4476a0:	ldr	x9, [x1, #16]
  4476a4:	ldr	x10, [x0]
  4476a8:	mov	x8, xzr
  4476ac:	b	4476c8 <_obstack_memory_used@@Base+0x9468>
  4476b0:	mov	w12, #0x1                   	// #1
  4476b4:	tbz	w12, #0, 4476f8 <_obstack_memory_used@@Base+0x9498>
  4476b8:	ldr	x11, [x1, #8]
  4476bc:	add	x8, x8, #0x1
  4476c0:	cmp	x8, x11
  4476c4:	b.ge	4476fc <_obstack_memory_used@@Base+0x949c>  // b.tcont
  4476c8:	ldr	x11, [x9, x8, lsl #3]
  4476cc:	add	x12, x10, x11, lsl #4
  4476d0:	ldrb	w12, [x12, #8]
  4476d4:	cmp	w12, w3
  4476d8:	b.ne	4476b0 <_obstack_memory_used@@Base+0x9450>  // b.any
  4476dc:	lsl	x12, x11, #4
  4476e0:	ldr	x12, [x10, x12]
  4476e4:	cmp	x12, x2
  4476e8:	b.ne	4476b0 <_obstack_memory_used@@Base+0x9450>  // b.any
  4476ec:	mov	w12, wzr
  4476f0:	mov	x0, x11
  4476f4:	tbnz	w12, #0, 4476b8 <_obstack_memory_used@@Base+0x9458>
  4476f8:	ret
  4476fc:	mov	x0, #0xffffffffffffffff    	// #-1
  447700:	ret
  447704:	sub	sp, sp, #0xa0
  447708:	stp	x29, x30, [sp, #64]
  44770c:	stp	x28, x27, [sp, #80]
  447710:	stp	x26, x25, [sp, #96]
  447714:	stp	x24, x23, [sp, #112]
  447718:	stp	x22, x21, [sp, #128]
  44771c:	stp	x20, x19, [sp, #144]
  447720:	ldr	x24, [x0, #152]
  447724:	add	x29, sp, #0x40
  447728:	stur	wzr, [x29, #-4]
  44772c:	ldrsw	x9, [x0, #224]
  447730:	ldr	x8, [x24]
  447734:	ldr	x19, [x1, #8]
  447738:	lsl	x10, x2, #4
  44773c:	mov	w23, w6
  447740:	ldr	x25, [x8, x10]
  447744:	add	x8, x9, x5
  447748:	mov	x20, x5
  44774c:	mov	x28, x2
  447750:	mov	x22, x1
  447754:	mov	x21, x0
  447758:	cmp	x19, x8
  44775c:	mov	x27, x3
  447760:	str	x4, [sp, #8]
  447764:	b.le	4479f8 <_obstack_memory_used@@Base+0x9798>
  447768:	ldr	x9, [x21, #184]
  44776c:	ldr	x8, [x22]
  447770:	ldr	x10, [x21, #72]
  447774:	ldr	w2, [x21, #160]
  447778:	str	x9, [sp, #24]
  44777c:	ldr	x9, [x22, #16]
  447780:	cmp	x8, #0x0
  447784:	csel	x26, x27, x8, eq  // eq = none
  447788:	sub	x1, x26, #0x1
  44778c:	mov	x0, x21
  447790:	str	x10, [sp, #16]
  447794:	str	x9, [x21, #184]
  447798:	str	x26, [x21, #72]
  44779c:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  4477a0:	cmp	x26, x27
  4477a4:	mov	w19, w0
  4477a8:	b.ne	4477e4 <_obstack_memory_used@@Base+0x9584>  // b.any
  4477ac:	add	x0, sp, #0x20
  4477b0:	mov	x1, x28
  4477b4:	bl	4444b4 <_obstack_memory_used@@Base+0x6254>
  4477b8:	stur	w0, [x29, #-4]
  4477bc:	cbnz	w0, 4479d8 <_obstack_memory_used@@Base+0x9778>
  4477c0:	add	x1, sp, #0x20
  4477c4:	mov	x0, x24
  4477c8:	mov	x2, x25
  4477cc:	mov	w3, w23
  4477d0:	bl	447bdc <_obstack_memory_used@@Base+0x997c>
  4477d4:	stur	w0, [x29, #-4]
  4477d8:	cbnz	w0, 447980 <_obstack_memory_used@@Base+0x9720>
  4477dc:	mov	x28, xzr
  4477e0:	b	447818 <_obstack_memory_used@@Base+0x95b8>
  4477e4:	ldr	x8, [x21, #184]
  4477e8:	ldr	x28, [x8, x26, lsl #3]
  4477ec:	cbz	x28, 4477f8 <_obstack_memory_used@@Base+0x9598>
  4477f0:	ldrb	w8, [x28, #104]
  4477f4:	tbnz	w8, #6, 447804 <_obstack_memory_used@@Base+0x95a4>
  4477f8:	stp	xzr, xzr, [sp, #32]
  4477fc:	str	xzr, [sp, #48]
  447800:	b	447818 <_obstack_memory_used@@Base+0x95b8>
  447804:	add	x1, x28, #0x8
  447808:	add	x0, sp, #0x20
  44780c:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  447810:	stur	w0, [x29, #-4]
  447814:	cbnz	w0, 4479d8 <_obstack_memory_used@@Base+0x9778>
  447818:	cmp	x26, x27
  44781c:	b.eq	44782c <_obstack_memory_used@@Base+0x95cc>  // b.none
  447820:	cbz	x28, 447880 <_obstack_memory_used@@Base+0x9620>
  447824:	ldrb	w8, [x28, #104]
  447828:	tbz	w8, #6, 447880 <_obstack_memory_used@@Base+0x9620>
  44782c:	ldr	x8, [sp, #40]
  447830:	cbz	x8, 447854 <_obstack_memory_used@@Base+0x95f4>
  447834:	add	x1, sp, #0x20
  447838:	mov	x0, x21
  44783c:	mov	x2, x26
  447840:	mov	x3, x25
  447844:	mov	w4, w23
  447848:	bl	447d08 <_obstack_memory_used@@Base+0x9aa8>
  44784c:	stur	w0, [x29, #-4]
  447850:	cbnz	w0, 447980 <_obstack_memory_used@@Base+0x9720>
  447854:	sub	x0, x29, #0x4
  447858:	add	x2, sp, #0x20
  44785c:	mov	x1, x24
  447860:	mov	w3, w19
  447864:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  447868:	mov	x28, x0
  44786c:	cbnz	x0, 447878 <_obstack_memory_used@@Base+0x9618>
  447870:	ldur	w8, [x29, #-4]
  447874:	cbnz	w8, 447980 <_obstack_memory_used@@Base+0x9720>
  447878:	ldr	x8, [x21, #184]
  44787c:	str	x28, [x8, x26, lsl #3]
  447880:	cmp	x26, x20
  447884:	b.ge	447994 <_obstack_memory_used@@Base+0x9734>  // b.tcont
  447888:	mov	x27, xzr
  44788c:	b	4478b0 <_obstack_memory_used@@Base+0x9650>
  447890:	ldr	x8, [x21, #184]
  447894:	cmp	x28, #0x0
  447898:	csinc	x27, xzr, x27, ne  // ne = any
  44789c:	cmp	x20, x19
  4478a0:	add	x8, x8, x26, lsl #3
  4478a4:	mov	x26, x19
  4478a8:	str	x28, [x8, #8]
  4478ac:	b.eq	447990 <_obstack_memory_used@@Base+0x9730>  // b.none
  4478b0:	ldrsw	x8, [x21, #224]
  4478b4:	cmp	x27, x8
  4478b8:	b.gt	447994 <_obstack_memory_used@@Base+0x9734>
  4478bc:	str	xzr, [sp, #40]
  4478c0:	ldr	x8, [x21, #184]
  4478c4:	add	x8, x8, x26, lsl #3
  4478c8:	ldr	x8, [x8, #8]
  4478cc:	cbz	x8, 4478e4 <_obstack_memory_used@@Base+0x9684>
  4478d0:	add	x1, x8, #0x8
  4478d4:	add	x0, sp, #0x20
  4478d8:	bl	4449c4 <_obstack_memory_used@@Base+0x6764>
  4478dc:	stur	w0, [x29, #-4]
  4478e0:	cbnz	w0, 447980 <_obstack_memory_used@@Base+0x9720>
  4478e4:	cbz	x28, 447904 <_obstack_memory_used@@Base+0x96a4>
  4478e8:	add	x2, x28, #0x20
  4478ec:	add	x3, sp, #0x20
  4478f0:	mov	x0, x21
  4478f4:	mov	x1, x26
  4478f8:	bl	447f7c <_obstack_memory_used@@Base+0x9d1c>
  4478fc:	stur	w0, [x29, #-4]
  447900:	cbnz	w0, 447980 <_obstack_memory_used@@Base+0x9720>
  447904:	ldr	x8, [sp, #40]
  447908:	add	x19, x26, #0x1
  44790c:	cbz	x8, 44794c <_obstack_memory_used@@Base+0x96ec>
  447910:	add	x1, sp, #0x20
  447914:	mov	x0, x24
  447918:	mov	x2, x25
  44791c:	mov	w3, w23
  447920:	bl	447bdc <_obstack_memory_used@@Base+0x997c>
  447924:	stur	w0, [x29, #-4]
  447928:	cbnz	w0, 447980 <_obstack_memory_used@@Base+0x9720>
  44792c:	add	x1, sp, #0x20
  447930:	mov	x0, x21
  447934:	mov	x2, x19
  447938:	mov	x3, x25
  44793c:	mov	w4, w23
  447940:	bl	447d08 <_obstack_memory_used@@Base+0x9aa8>
  447944:	stur	w0, [x29, #-4]
  447948:	cbnz	w0, 447980 <_obstack_memory_used@@Base+0x9720>
  44794c:	ldr	w2, [x21, #160]
  447950:	mov	x0, x21
  447954:	mov	x1, x26
  447958:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  44795c:	mov	w3, w0
  447960:	sub	x0, x29, #0x4
  447964:	add	x2, sp, #0x20
  447968:	mov	x1, x24
  44796c:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  447970:	mov	x28, x0
  447974:	cbnz	x0, 447890 <_obstack_memory_used@@Base+0x9630>
  447978:	ldur	w8, [x29, #-4]
  44797c:	cbz	w8, 447890 <_obstack_memory_used@@Base+0x9630>
  447980:	ldr	x0, [sp, #48]
  447984:	bl	4049d0 <free@plt>
  447988:	ldur	w0, [x29, #-4]
  44798c:	b	4479d8 <_obstack_memory_used@@Base+0x9778>
  447990:	mov	x26, x20
  447994:	ldr	x0, [sp, #48]
  447998:	bl	4049d0 <free@plt>
  44799c:	ldr	x8, [x21, #184]
  4479a0:	ldr	x9, [sp, #24]
  4479a4:	ldr	x8, [x8, x20, lsl #3]
  4479a8:	str	x26, [x22]
  4479ac:	str	x9, [x21, #184]
  4479b0:	ldr	x9, [sp, #16]
  4479b4:	str	x9, [x21, #72]
  4479b8:	cbz	x8, 4479d4 <_obstack_memory_used@@Base+0x9774>
  4479bc:	ldr	x1, [sp, #8]
  4479c0:	add	x0, x8, #0x8
  4479c4:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  4479c8:	cbz	x0, 4479d4 <_obstack_memory_used@@Base+0x9774>
  4479cc:	mov	w0, wzr
  4479d0:	b	4479d8 <_obstack_memory_used@@Base+0x9778>
  4479d4:	mov	w0, #0x1                   	// #1
  4479d8:	ldp	x20, x19, [sp, #144]
  4479dc:	ldp	x22, x21, [sp, #128]
  4479e0:	ldp	x24, x23, [sp, #112]
  4479e4:	ldp	x26, x25, [sp, #96]
  4479e8:	ldp	x28, x27, [sp, #80]
  4479ec:	ldp	x29, x30, [sp, #64]
  4479f0:	add	sp, sp, #0xa0
  4479f4:	ret
  4479f8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4479fc:	sub	x9, x9, x19
  447a00:	cmp	x9, x8
  447a04:	b.le	447a48 <_obstack_memory_used@@Base+0x97e8>
  447a08:	add	x8, x8, #0x1
  447a0c:	add	x26, x8, x19
  447a10:	str	x8, [sp, #24]
  447a14:	lsr	x8, x26, #61
  447a18:	cbnz	x8, 447a48 <_obstack_memory_used@@Base+0x97e8>
  447a1c:	ldr	x0, [x22, #16]
  447a20:	lsl	x1, x26, #3
  447a24:	bl	404730 <realloc@plt>
  447a28:	cbz	x0, 447a48 <_obstack_memory_used@@Base+0x97e8>
  447a2c:	stp	x26, x0, [x22, #8]
  447a30:	ldr	x8, [sp, #24]
  447a34:	add	x0, x0, x19, lsl #3
  447a38:	mov	w1, wzr
  447a3c:	lsl	x2, x8, #3
  447a40:	bl	404600 <memset@plt>
  447a44:	b	447768 <_obstack_memory_used@@Base+0x9508>
  447a48:	mov	w0, #0xc                   	// #12
  447a4c:	b	4479d8 <_obstack_memory_used@@Base+0x9778>
  447a50:	stp	x29, x30, [sp, #-48]!
  447a54:	stp	x22, x21, [sp, #16]
  447a58:	stp	x20, x19, [sp, #32]
  447a5c:	ldp	x8, x9, [x0, #24]
  447a60:	mov	x20, x2
  447a64:	mov	x19, x0
  447a68:	mov	x21, x1
  447a6c:	cmp	x9, x8
  447a70:	mov	x29, sp
  447a74:	b.eq	447aac <_obstack_memory_used@@Base+0x984c>  // b.none
  447a78:	mov	w0, #0x1                   	// #1
  447a7c:	mov	w1, #0x28                  	// #40
  447a80:	bl	4046a0 <calloc@plt>
  447a84:	cbz	x0, 447a9c <_obstack_memory_used@@Base+0x983c>
  447a88:	ldp	x9, x8, [x19, #32]
  447a8c:	str	x0, [x8, x9, lsl #3]
  447a90:	add	x8, x9, #0x1
  447a94:	stp	x21, x20, [x0]
  447a98:	str	x8, [x19, #32]
  447a9c:	ldp	x20, x19, [sp, #32]
  447aa0:	ldp	x22, x21, [sp, #16]
  447aa4:	ldp	x29, x30, [sp], #48
  447aa8:	ret
  447aac:	ldr	x0, [x19, #40]
  447ab0:	mov	w22, #0x1                   	// #1
  447ab4:	bfi	x22, x8, #1, #63
  447ab8:	lsl	x1, x22, #3
  447abc:	bl	404730 <realloc@plt>
  447ac0:	cbz	x0, 447a9c <_obstack_memory_used@@Base+0x983c>
  447ac4:	str	x0, [x19, #40]
  447ac8:	str	x22, [x19, #24]
  447acc:	b	447a78 <_obstack_memory_used@@Base+0x9818>
  447ad0:	stp	x29, x30, [sp, #-64]!
  447ad4:	stp	x24, x23, [sp, #16]
  447ad8:	stp	x22, x21, [sp, #32]
  447adc:	stp	x20, x19, [sp, #48]
  447ae0:	ldp	x9, x8, [x0, #200]
  447ae4:	mov	x20, x4
  447ae8:	mov	x21, x3
  447aec:	mov	x22, x2
  447af0:	mov	x19, x0
  447af4:	cmp	x9, x8
  447af8:	mov	x23, x1
  447afc:	mov	x29, sp
  447b00:	b.lt	447b40 <_obstack_memory_used@@Base+0x98e0>  // b.tstop
  447b04:	ldr	x0, [x19, #216]
  447b08:	add	x8, x8, x8, lsl #2
  447b0c:	lsl	x1, x8, #4
  447b10:	bl	404730 <realloc@plt>
  447b14:	cbz	x0, 447bcc <_obstack_memory_used@@Base+0x996c>
  447b18:	ldp	x8, x24, [x19, #200]
  447b1c:	mov	w9, #0x28                  	// #40
  447b20:	str	x0, [x19, #216]
  447b24:	mov	w1, wzr
  447b28:	madd	x0, x8, x9, x0
  447b2c:	add	x8, x24, x24, lsl #2
  447b30:	lsl	x2, x8, #3
  447b34:	bl	404600 <memset@plt>
  447b38:	lsl	x8, x24, #1
  447b3c:	str	x8, [x19, #208]
  447b40:	ldr	x8, [x19, #200]
  447b44:	subs	x9, x8, #0x1
  447b48:	b.lt	447b74 <_obstack_memory_used@@Base+0x9914>  // b.tstop
  447b4c:	ldr	x10, [x19, #216]
  447b50:	mov	w11, #0x28                  	// #40
  447b54:	madd	x11, x9, x11, x10
  447b58:	ldr	x11, [x11, #8]
  447b5c:	cmp	x11, x22
  447b60:	b.ne	447b74 <_obstack_memory_used@@Base+0x9914>  // b.any
  447b64:	mov	w11, #0x28                  	// #40
  447b68:	madd	x9, x9, x11, x10
  447b6c:	mov	w10, #0x1                   	// #1
  447b70:	strb	w10, [x9, #32]
  447b74:	ldr	x10, [x19, #216]
  447b78:	mov	w11, #0x28                  	// #40
  447b7c:	subs	x9, x20, x21
  447b80:	mov	w0, wzr
  447b84:	madd	x10, x8, x11, x10
  447b88:	add	x8, x8, #0x1
  447b8c:	csetm	w11, eq  // eq = none
  447b90:	stp	x23, x22, [x10]
  447b94:	stp	x21, x20, [x10, #16]
  447b98:	strh	w11, [x10, #34]
  447b9c:	str	x8, [x19, #200]
  447ba0:	strb	wzr, [x10, #32]
  447ba4:	ldrsw	x8, [x19, #224]
  447ba8:	cmp	x9, x8
  447bac:	b.le	447bb8 <_obstack_memory_used@@Base+0x9958>
  447bb0:	mov	w0, wzr
  447bb4:	str	w9, [x19, #224]
  447bb8:	ldp	x20, x19, [sp, #48]
  447bbc:	ldp	x22, x21, [sp, #32]
  447bc0:	ldp	x24, x23, [sp, #16]
  447bc4:	ldp	x29, x30, [sp], #64
  447bc8:	ret
  447bcc:	ldr	x0, [x19, #216]
  447bd0:	bl	4049d0 <free@plt>
  447bd4:	mov	w0, #0xc                   	// #12
  447bd8:	b	447bb8 <_obstack_memory_used@@Base+0x9958>
  447bdc:	sub	sp, sp, #0x80
  447be0:	stp	x29, x30, [sp, #32]
  447be4:	stp	x26, x25, [sp, #64]
  447be8:	stp	x24, x23, [sp, #80]
  447bec:	stp	x22, x21, [sp, #96]
  447bf0:	stp	x20, x19, [sp, #112]
  447bf4:	mov	x19, x1
  447bf8:	ldr	x1, [x1, #8]
  447bfc:	mov	x22, x0
  447c00:	add	x0, sp, #0x8
  447c04:	str	x27, [sp, #48]
  447c08:	add	x29, sp, #0x20
  447c0c:	mov	w20, w3
  447c10:	mov	x21, x2
  447c14:	bl	44475c <_obstack_memory_used@@Base+0x64fc>
  447c18:	cbnz	w0, 447d00 <_obstack_memory_used@@Base+0x9aa0>
  447c1c:	ldr	x8, [x19, #8]
  447c20:	cmp	x8, #0x1
  447c24:	b.lt	447cc0 <_obstack_memory_used@@Base+0x9a60>  // b.tstop
  447c28:	mov	x26, xzr
  447c2c:	mov	w27, #0x18                  	// #24
  447c30:	ldr	x8, [x19, #16]
  447c34:	mov	x0, x22
  447c38:	mov	x2, x21
  447c3c:	mov	w3, w20
  447c40:	ldr	x24, [x8, x26, lsl #3]
  447c44:	ldr	x8, [x22, #48]
  447c48:	madd	x25, x24, x27, x8
  447c4c:	mov	x1, x25
  447c50:	bl	447694 <_obstack_memory_used@@Base+0x9434>
  447c54:	cmn	x0, #0x1
  447c58:	b.eq	447c94 <_obstack_memory_used@@Base+0x9a34>  // b.none
  447c5c:	add	x1, sp, #0x8
  447c60:	mov	x0, x22
  447c64:	mov	x2, x24
  447c68:	mov	x3, x21
  447c6c:	mov	w4, w20
  447c70:	bl	448158 <_obstack_memory_used@@Base+0x9ef8>
  447c74:	cbnz	w0, 447ca4 <_obstack_memory_used@@Base+0x9a44>
  447c78:	mov	w8, #0x1                   	// #1
  447c7c:	tbz	w8, #0, 447cdc <_obstack_memory_used@@Base+0x9a7c>
  447c80:	ldr	x8, [x19, #8]
  447c84:	add	x26, x26, #0x1
  447c88:	cmp	x26, x8
  447c8c:	b.lt	447c30 <_obstack_memory_used@@Base+0x99d0>  // b.tstop
  447c90:	b	447cc0 <_obstack_memory_used@@Base+0x9a60>
  447c94:	add	x0, sp, #0x8
  447c98:	mov	x1, x25
  447c9c:	bl	4449c4 <_obstack_memory_used@@Base+0x6764>
  447ca0:	cbz	w0, 447c78 <_obstack_memory_used@@Base+0x9a18>
  447ca4:	mov	w24, w0
  447ca8:	ldr	x0, [sp, #24]
  447cac:	bl	4049d0 <free@plt>
  447cb0:	mov	w23, w24
  447cb4:	mov	w8, wzr
  447cb8:	tbnz	wzr, #0, 447c80 <_obstack_memory_used@@Base+0x9a20>
  447cbc:	b	447cdc <_obstack_memory_used@@Base+0x9a7c>
  447cc0:	ldr	x0, [x19, #16]
  447cc4:	bl	4049d0 <free@plt>
  447cc8:	ldr	x8, [sp, #24]
  447ccc:	ldur	q0, [sp, #8]
  447cd0:	mov	w23, wzr
  447cd4:	str	x8, [x19, #16]
  447cd8:	str	q0, [x19]
  447cdc:	mov	w0, w23
  447ce0:	ldp	x20, x19, [sp, #112]
  447ce4:	ldp	x22, x21, [sp, #96]
  447ce8:	ldp	x24, x23, [sp, #80]
  447cec:	ldp	x26, x25, [sp, #64]
  447cf0:	ldr	x27, [sp, #48]
  447cf4:	ldp	x29, x30, [sp, #32]
  447cf8:	add	sp, sp, #0x80
  447cfc:	ret
  447d00:	mov	w23, w0
  447d04:	b	447cdc <_obstack_memory_used@@Base+0x9a7c>
  447d08:	sub	sp, sp, #0x90
  447d0c:	stp	x29, x30, [sp, #48]
  447d10:	stp	x28, x27, [sp, #64]
  447d14:	stp	x26, x25, [sp, #80]
  447d18:	stp	x24, x23, [sp, #96]
  447d1c:	stp	x22, x21, [sp, #112]
  447d20:	stp	x20, x19, [sp, #128]
  447d24:	ldr	x23, [x0, #152]
  447d28:	mov	x24, x1
  447d2c:	mov	x1, x2
  447d30:	add	x29, sp, #0x30
  447d34:	str	w4, [sp, #12]
  447d38:	str	x3, [sp]
  447d3c:	mov	x21, x2
  447d40:	mov	x22, x0
  447d44:	bl	4474e0 <_obstack_memory_used@@Base+0x9280>
  447d48:	cmn	x0, #0x1
  447d4c:	b.eq	447f54 <_obstack_memory_used@@Base+0x9cf4>  // b.none
  447d50:	mov	x25, x0
  447d54:	ldr	x8, [x22, #216]
  447d58:	mov	w9, #0x28                  	// #40
  447d5c:	madd	x20, x25, x9, x8
  447d60:	b	447d70 <_obstack_memory_used@@Base+0x9b10>
  447d64:	ldrb	w8, [x20, #32]
  447d68:	add	x20, x20, #0x28
  447d6c:	cbz	w8, 447f54 <_obstack_memory_used@@Base+0x9cf4>
  447d70:	ldr	x1, [x20]
  447d74:	mov	x0, x24
  447d78:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  447d7c:	cbz	x0, 447dbc <_obstack_memory_used@@Base+0x9b5c>
  447d80:	ldp	x9, x8, [x20, #16]
  447d84:	add	x8, x8, x21
  447d88:	sub	x19, x8, x9
  447d8c:	cmp	x19, x21
  447d90:	b.ne	447dc4 <_obstack_memory_used@@Base+0x9b64>  // b.any
  447d94:	ldr	x8, [x23, #40]
  447d98:	ldr	x9, [x20]
  447d9c:	mov	w10, #0x18                  	// #24
  447da0:	mov	x0, x24
  447da4:	madd	x8, x9, x10, x8
  447da8:	ldr	x8, [x8, #16]
  447dac:	ldr	x27, [x8]
  447db0:	mov	x1, x27
  447db4:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  447db8:	cbz	x0, 447dfc <_obstack_memory_used@@Base+0x9b9c>
  447dbc:	mov	w8, #0x4                   	// #4
  447dc0:	b	447eb8 <_obstack_memory_used@@Base+0x9c58>
  447dc4:	ldr	x9, [x23, #24]
  447dc8:	ldr	x8, [x22, #184]
  447dcc:	ldr	x10, [x20]
  447dd0:	ldr	x8, [x8, x19, lsl #3]
  447dd4:	ldr	x27, [x9, x10, lsl #3]
  447dd8:	cbz	x8, 447e58 <_obstack_memory_used@@Base+0x9bf8>
  447ddc:	add	x28, x8, #0x8
  447de0:	mov	x0, x28
  447de4:	mov	x1, x27
  447de8:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  447dec:	cbz	x0, 447ec8 <_obstack_memory_used@@Base+0x9c68>
  447df0:	mov	w8, #0x4                   	// #4
  447df4:	cbnz	w8, 447eb8 <_obstack_memory_used@@Base+0x9c58>
  447df8:	b	447e6c <_obstack_memory_used@@Base+0x9c0c>
  447dfc:	add	x0, sp, #0x10
  447e00:	mov	x1, x27
  447e04:	bl	4444b4 <_obstack_memory_used@@Base+0x6254>
  447e08:	ldr	x2, [sp]
  447e0c:	ldr	w3, [sp, #12]
  447e10:	mov	w27, w0
  447e14:	stur	w0, [x29, #-4]
  447e18:	add	x1, sp, #0x10
  447e1c:	mov	x0, x23
  447e20:	bl	447bdc <_obstack_memory_used@@Base+0x997c>
  447e24:	mov	w28, w0
  447e28:	add	x1, sp, #0x10
  447e2c:	mov	x0, x24
  447e30:	bl	4449c4 <_obstack_memory_used@@Base+0x6764>
  447e34:	ldr	x8, [sp, #32]
  447e38:	mov	w19, w0
  447e3c:	mov	x0, x8
  447e40:	bl	4049d0 <free@plt>
  447e44:	orr	w8, w28, w27
  447e48:	orr	w8, w8, w19
  447e4c:	cbnz	w8, 447efc <_obstack_memory_used@@Base+0x9c9c>
  447e50:	mov	w8, #0x2                   	// #2
  447e54:	b	447eb8 <_obstack_memory_used@@Base+0x9c58>
  447e58:	add	x0, sp, #0x10
  447e5c:	mov	x1, x27
  447e60:	bl	4444b4 <_obstack_memory_used@@Base+0x6254>
  447e64:	stur	w0, [x29, #-4]
  447e68:	cbnz	w0, 447f18 <_obstack_memory_used@@Base+0x9cb8>
  447e6c:	sub	x0, x29, #0x4
  447e70:	add	x2, sp, #0x10
  447e74:	mov	x1, x23
  447e78:	bl	448288 <_obstack_memory_used@@Base+0xa028>
  447e7c:	ldr	x8, [x22, #184]
  447e80:	lsl	x19, x19, #3
  447e84:	str	x0, [x8, x19]
  447e88:	ldr	x0, [sp, #32]
  447e8c:	bl	4049d0 <free@plt>
  447e90:	ldr	x8, [x22, #184]
  447e94:	ldur	w9, [x29, #-4]
  447e98:	ldr	x8, [x8, x19]
  447e9c:	cmp	x8, #0x0
  447ea0:	cset	w10, eq  // eq = none
  447ea4:	cmp	w9, #0x0
  447ea8:	cset	w11, ne  // ne = any
  447eac:	tst	w10, w11
  447eb0:	and	w8, w10, w11
  447eb4:	csel	w26, w9, w26, ne  // ne = any
  447eb8:	cbz	w8, 447d64 <_obstack_memory_used@@Base+0x9b04>
  447ebc:	cmp	w8, #0x4
  447ec0:	b.eq	447d64 <_obstack_memory_used@@Base+0x9b04>  // b.none
  447ec4:	b	447f48 <_obstack_memory_used@@Base+0x9ce8>
  447ec8:	add	x0, sp, #0x10
  447ecc:	mov	x1, x28
  447ed0:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  447ed4:	mov	w28, w0
  447ed8:	stur	w0, [x29, #-4]
  447edc:	add	x0, sp, #0x10
  447ee0:	mov	x1, x27
  447ee4:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  447ee8:	cbnz	w28, 447f24 <_obstack_memory_used@@Base+0x9cc4>
  447eec:	tbz	w0, #0, 447f24 <_obstack_memory_used@@Base+0x9cc4>
  447ef0:	mov	w8, wzr
  447ef4:	cbnz	w8, 447eb8 <_obstack_memory_used@@Base+0x9c58>
  447ef8:	b	447e6c <_obstack_memory_used@@Base+0x9c0c>
  447efc:	cmp	w28, #0x0
  447f00:	csel	w8, w19, w28, eq  // eq = none
  447f04:	cmp	w27, #0x0
  447f08:	csel	w26, w8, w27, eq  // eq = none
  447f0c:	stur	w26, [x29, #-4]
  447f10:	mov	w8, #0x1                   	// #1
  447f14:	b	447eb8 <_obstack_memory_used@@Base+0x9c58>
  447f18:	mov	w8, #0x1                   	// #1
  447f1c:	mov	w26, w0
  447f20:	b	447eb8 <_obstack_memory_used@@Base+0x9c58>
  447f24:	ldr	x0, [sp, #32]
  447f28:	bl	4049d0 <free@plt>
  447f2c:	cmp	w28, #0x0
  447f30:	mov	w8, #0xc                   	// #12
  447f34:	csel	w26, w8, w28, eq  // eq = none
  447f38:	mov	w8, #0x1                   	// #1
  447f3c:	stur	w26, [x29, #-4]
  447f40:	cbnz	w8, 447eb8 <_obstack_memory_used@@Base+0x9c58>
  447f44:	b	447e6c <_obstack_memory_used@@Base+0x9c0c>
  447f48:	cmp	w8, #0x2
  447f4c:	b.eq	447d54 <_obstack_memory_used@@Base+0x9af4>  // b.none
  447f50:	b	447f58 <_obstack_memory_used@@Base+0x9cf8>
  447f54:	mov	w26, wzr
  447f58:	mov	w0, w26
  447f5c:	ldp	x20, x19, [sp, #128]
  447f60:	ldp	x22, x21, [sp, #112]
  447f64:	ldp	x24, x23, [sp, #96]
  447f68:	ldp	x26, x25, [sp, #80]
  447f6c:	ldp	x28, x27, [sp, #64]
  447f70:	ldp	x29, x30, [sp, #48]
  447f74:	add	sp, sp, #0x90
  447f78:	ret
  447f7c:	sub	sp, sp, #0xa0
  447f80:	stp	x29, x30, [sp, #64]
  447f84:	stp	x28, x27, [sp, #80]
  447f88:	stp	x26, x25, [sp, #96]
  447f8c:	stp	x24, x23, [sp, #112]
  447f90:	stp	x22, x21, [sp, #128]
  447f94:	stp	x20, x19, [sp, #144]
  447f98:	add	x29, sp, #0x40
  447f9c:	ldr	x22, [x0, #152]
  447fa0:	stur	wzr, [x29, #-4]
  447fa4:	stp	xzr, xzr, [sp, #32]
  447fa8:	str	xzr, [sp, #48]
  447fac:	ldr	x8, [x2, #8]
  447fb0:	cmp	x8, #0x1
  447fb4:	b.lt	448124 <_obstack_memory_used@@Base+0x9ec4>  // b.tstop
  447fb8:	add	x8, sp, #0x20
  447fbc:	add	x8, x8, #0x10
  447fc0:	mov	x23, x3
  447fc4:	mov	x20, x2
  447fc8:	mov	x21, x0
  447fcc:	mov	x27, x1
  447fd0:	mov	x24, xzr
  447fd4:	stp	x8, x1, [sp, #16]
  447fd8:	ldr	x8, [x20, #16]
  447fdc:	ldr	x25, [x8, x24, lsl #3]
  447fe0:	ldr	x8, [x22]
  447fe4:	add	x8, x8, x25, lsl #4
  447fe8:	ldrb	w8, [x8, #10]
  447fec:	tbnz	w8, #4, 447ff8 <_obstack_memory_used@@Base+0x9d98>
  447ff0:	mov	w26, wzr
  447ff4:	b	448094 <_obstack_memory_used@@Base+0x9e34>
  447ff8:	mov	x0, x22
  447ffc:	mov	x1, x25
  448000:	mov	x2, x21
  448004:	mov	x3, x27
  448008:	bl	4484bc <_obstack_memory_used@@Base+0xa25c>
  44800c:	mov	w26, w0
  448010:	cmp	w0, #0x2
  448014:	b.lt	448094 <_obstack_memory_used@@Base+0x9e34>  // b.tstop
  448018:	ldr	x8, [x21, #184]
  44801c:	ldr	x9, [x22, #24]
  448020:	add	x19, x27, w26, sxtw
  448024:	ldr	x8, [x8, x19, lsl #3]
  448028:	ldr	x28, [x9, x25, lsl #3]
  44802c:	str	xzr, [sp, #40]
  448030:	cbz	x8, 448048 <_obstack_memory_used@@Base+0x9de8>
  448034:	add	x1, x8, #0x8
  448038:	add	x0, sp, #0x20
  44803c:	bl	4449c4 <_obstack_memory_used@@Base+0x6764>
  448040:	stur	w0, [x29, #-4]
  448044:	cbnz	w0, 448100 <_obstack_memory_used@@Base+0x9ea0>
  448048:	add	x0, sp, #0x20
  44804c:	mov	x1, x28
  448050:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  448054:	tbz	w0, #0, 4480f8 <_obstack_memory_used@@Base+0x9e98>
  448058:	sub	x0, x29, #0x4
  44805c:	add	x2, sp, #0x20
  448060:	mov	x1, x22
  448064:	bl	448288 <_obstack_memory_used@@Base+0xa028>
  448068:	ldr	x8, [x21, #184]
  44806c:	lsl	x9, x19, #3
  448070:	str	x0, [x8, x9]
  448074:	ldr	x8, [x21, #184]
  448078:	ldr	x9, [x8, x9]
  44807c:	mov	w8, wzr
  448080:	cbnz	x9, 44808c <_obstack_memory_used@@Base+0x9e2c>
  448084:	ldur	w27, [x29, #-4]
  448088:	cbnz	w27, 448104 <_obstack_memory_used@@Base+0x9ea4>
  44808c:	ldr	x27, [sp, #24]
  448090:	cbnz	w8, 4480c8 <_obstack_memory_used@@Base+0x9e68>
  448094:	cbnz	w26, 4480b0 <_obstack_memory_used@@Base+0x9e50>
  448098:	ldr	x8, [x22]
  44809c:	mov	x0, x21
  4480a0:	mov	x2, x27
  4480a4:	add	x1, x8, x25, lsl #4
  4480a8:	bl	44879c <_obstack_memory_used@@Base+0xa53c>
  4480ac:	tbz	w0, #0, 4480c4 <_obstack_memory_used@@Base+0x9e64>
  4480b0:	ldr	x8, [x22, #24]
  4480b4:	mov	x0, x23
  4480b8:	ldr	x1, [x8, x25, lsl #3]
  4480bc:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  4480c0:	tbz	w0, #0, 4480e0 <_obstack_memory_used@@Base+0x9e80>
  4480c4:	mov	w8, wzr
  4480c8:	cbnz	w8, 448134 <_obstack_memory_used@@Base+0x9ed4>
  4480cc:	ldr	x8, [x20, #8]
  4480d0:	add	x24, x24, #0x1
  4480d4:	cmp	x24, x8
  4480d8:	b.lt	447fd8 <_obstack_memory_used@@Base+0x9d78>  // b.tstop
  4480dc:	b	448124 <_obstack_memory_used@@Base+0x9ec4>
  4480e0:	ldr	x0, [sp, #48]
  4480e4:	bl	4049d0 <free@plt>
  4480e8:	mov	w8, #0x1                   	// #1
  4480ec:	mov	w9, #0xc                   	// #12
  4480f0:	str	w9, [sp, #12]
  4480f4:	b	4480c8 <_obstack_memory_used@@Base+0x9e68>
  4480f8:	mov	w27, #0xc                   	// #12
  4480fc:	b	448104 <_obstack_memory_used@@Base+0x9ea4>
  448100:	mov	w27, w0
  448104:	ldr	x8, [sp, #16]
  448108:	ldr	x0, [x8]
  44810c:	bl	4049d0 <free@plt>
  448110:	mov	w8, #0x1                   	// #1
  448114:	str	w27, [sp, #12]
  448118:	ldr	x27, [sp, #24]
  44811c:	cbnz	w8, 4480c8 <_obstack_memory_used@@Base+0x9e68>
  448120:	b	448094 <_obstack_memory_used@@Base+0x9e34>
  448124:	ldr	x0, [sp, #48]
  448128:	bl	4049d0 <free@plt>
  44812c:	mov	w0, wzr
  448130:	b	448138 <_obstack_memory_used@@Base+0x9ed8>
  448134:	ldr	w0, [sp, #12]
  448138:	ldp	x20, x19, [sp, #144]
  44813c:	ldp	x22, x21, [sp, #128]
  448140:	ldp	x24, x23, [sp, #112]
  448144:	ldp	x26, x25, [sp, #96]
  448148:	ldp	x28, x27, [sp, #80]
  44814c:	ldp	x29, x30, [sp, #64]
  448150:	add	sp, sp, #0xa0
  448154:	ret
  448158:	stp	x29, x30, [sp, #-80]!
  44815c:	str	x25, [sp, #16]
  448160:	stp	x24, x23, [sp, #32]
  448164:	stp	x22, x21, [sp, #48]
  448168:	stp	x20, x19, [sp, #64]
  44816c:	mov	w20, w4
  448170:	mov	x21, x3
  448174:	mov	x23, x2
  448178:	mov	x22, x1
  44817c:	mov	x24, x0
  448180:	mov	w25, #0x18                  	// #24
  448184:	mov	x29, sp
  448188:	b	448194 <_obstack_memory_used@@Base+0x9f34>
  44818c:	mov	w8, #0x2                   	// #2
  448190:	cbnz	w8, 448260 <_obstack_memory_used@@Base+0xa000>
  448194:	mov	x0, x22
  448198:	mov	x1, x23
  44819c:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  4481a0:	cbnz	x0, 448268 <_obstack_memory_used@@Base+0xa008>
  4481a4:	ldr	x8, [x24]
  4481a8:	add	x9, x8, x23, lsl #4
  4481ac:	ldrb	w9, [x9, #8]
  4481b0:	cmp	w9, w20
  4481b4:	b.ne	4481e4 <_obstack_memory_used@@Base+0x9f84>  // b.any
  4481b8:	lsl	x9, x23, #4
  4481bc:	ldr	x8, [x8, x9]
  4481c0:	cmp	x8, x21
  4481c4:	b.ne	4481e4 <_obstack_memory_used@@Base+0x9f84>  // b.any
  4481c8:	cmp	w20, #0x9
  4481cc:	b.ne	44818c <_obstack_memory_used@@Base+0x9f2c>  // b.any
  4481d0:	mov	x0, x22
  4481d4:	mov	x1, x23
  4481d8:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  4481dc:	tbnz	w0, #0, 44818c <_obstack_memory_used@@Base+0x9f2c>
  4481e0:	b	448254 <_obstack_memory_used@@Base+0x9ff4>
  4481e4:	mov	x0, x22
  4481e8:	mov	x1, x23
  4481ec:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  4481f0:	tbz	w0, #0, 448254 <_obstack_memory_used@@Base+0x9ff4>
  4481f4:	ldr	x8, [x24, #40]
  4481f8:	madd	x9, x23, x25, x8
  4481fc:	ldr	x9, [x9, #8]
  448200:	cbz	x9, 44818c <_obstack_memory_used@@Base+0x9f2c>
  448204:	cmp	x9, #0x2
  448208:	b.ne	44823c <_obstack_memory_used@@Base+0x9fdc>  // b.any
  44820c:	madd	x8, x23, x25, x8
  448210:	ldr	x8, [x8, #16]
  448214:	mov	x0, x24
  448218:	mov	x1, x22
  44821c:	mov	x3, x21
  448220:	ldr	x2, [x8, #8]
  448224:	mov	w4, w20
  448228:	bl	448158 <_obstack_memory_used@@Base+0x9ef8>
  44822c:	cmp	w0, #0x0
  448230:	cset	w8, ne  // ne = any
  448234:	csel	w19, w19, w0, eq  // eq = none
  448238:	cbnz	w0, 448190 <_obstack_memory_used@@Base+0x9f30>
  44823c:	ldr	x8, [x24, #40]
  448240:	madd	x8, x23, x25, x8
  448244:	ldr	x8, [x8, #16]
  448248:	ldr	x23, [x8]
  44824c:	mov	w8, wzr
  448250:	b	448190 <_obstack_memory_used@@Base+0x9f30>
  448254:	mov	w19, #0xc                   	// #12
  448258:	mov	w8, #0x1                   	// #1
  44825c:	b	448190 <_obstack_memory_used@@Base+0x9f30>
  448260:	cmp	w8, #0x2
  448264:	b.ne	44826c <_obstack_memory_used@@Base+0xa00c>  // b.any
  448268:	mov	w19, wzr
  44826c:	mov	w0, w19
  448270:	ldp	x20, x19, [sp, #64]
  448274:	ldp	x22, x21, [sp, #48]
  448278:	ldp	x24, x23, [sp, #32]
  44827c:	ldr	x25, [sp, #16]
  448280:	ldp	x29, x30, [sp], #80
  448284:	ret
  448288:	stp	x29, x30, [sp, #-96]!
  44828c:	stp	x26, x25, [sp, #32]
  448290:	stp	x24, x23, [sp, #48]
  448294:	stp	x22, x21, [sp, #64]
  448298:	stp	x20, x19, [sp, #80]
  44829c:	ldr	x8, [x2, #8]
  4482a0:	mov	x19, x0
  4482a4:	str	x27, [sp, #16]
  4482a8:	mov	x29, sp
  4482ac:	cbz	x8, 44837c <_obstack_memory_used@@Base+0xa11c>
  4482b0:	mov	x21, x1
  4482b4:	mov	x0, x2
  4482b8:	mov	w1, wzr
  4482bc:	mov	x20, x2
  4482c0:	bl	444fa8 <_obstack_memory_used@@Base+0x6d48>
  4482c4:	ldr	x9, [x21, #136]
  4482c8:	ldr	x8, [x21, #64]
  4482cc:	mov	w10, #0x18                  	// #24
  4482d0:	mov	x22, x0
  4482d4:	and	x9, x9, x0
  4482d8:	madd	x24, x9, x10, x8
  4482dc:	ldr	x10, [x24]
  4482e0:	cmp	x10, #0x1
  4482e4:	b.lt	448344 <_obstack_memory_used@@Base+0xa0e4>  // b.tstop
  4482e8:	mov	w10, #0x18                  	// #24
  4482ec:	madd	x8, x9, x10, x8
  4482f0:	ldr	x26, [x8, #16]
  4482f4:	mov	x25, xzr
  4482f8:	ldr	x27, [x26, x25, lsl #3]
  4482fc:	ldr	x8, [x27]
  448300:	cmp	x22, x8
  448304:	b.ne	448324 <_obstack_memory_used@@Base+0xa0c4>  // b.any
  448308:	add	x0, x27, #0x8
  44830c:	mov	x1, x20
  448310:	bl	444fd4 <_obstack_memory_used@@Base+0x6d74>
  448314:	tst	w0, #0x1
  448318:	and	w8, w0, #0x1
  44831c:	csel	x23, x27, x23, ne  // ne = any
  448320:	b	448328 <_obstack_memory_used@@Base+0xa0c8>
  448324:	mov	w8, #0x4                   	// #4
  448328:	orr	w8, w8, #0x4
  44832c:	cmp	w8, #0x4
  448330:	b.ne	44835c <_obstack_memory_used@@Base+0xa0fc>  // b.any
  448334:	ldr	x8, [x24]
  448338:	add	x25, x25, #0x1
  44833c:	cmp	x25, x8
  448340:	b.lt	4482f8 <_obstack_memory_used@@Base+0xa098>  // b.tstop
  448344:	mov	x0, x21
  448348:	mov	x1, x20
  44834c:	mov	x2, x22
  448350:	bl	448394 <_obstack_memory_used@@Base+0xa134>
  448354:	mov	x23, x0
  448358:	cbz	x0, 448388 <_obstack_memory_used@@Base+0xa128>
  44835c:	mov	x0, x23
  448360:	ldp	x20, x19, [sp, #80]
  448364:	ldp	x22, x21, [sp, #64]
  448368:	ldp	x24, x23, [sp, #48]
  44836c:	ldp	x26, x25, [sp, #32]
  448370:	ldr	x27, [sp, #16]
  448374:	ldp	x29, x30, [sp], #96
  448378:	ret
  44837c:	mov	x23, xzr
  448380:	str	wzr, [x19]
  448384:	b	44835c <_obstack_memory_used@@Base+0xa0fc>
  448388:	mov	w8, #0xc                   	// #12
  44838c:	str	w8, [x19]
  448390:	b	44835c <_obstack_memory_used@@Base+0xa0fc>
  448394:	stp	x29, x30, [sp, #-64]!
  448398:	stp	x22, x21, [sp, #32]
  44839c:	mov	x22, x1
  4483a0:	mov	x21, x0
  4483a4:	mov	w0, #0x70                  	// #112
  4483a8:	mov	w1, #0x1                   	// #1
  4483ac:	str	x23, [sp, #16]
  4483b0:	stp	x20, x19, [sp, #48]
  4483b4:	mov	x29, sp
  4483b8:	mov	x20, x2
  4483bc:	bl	4046a0 <calloc@plt>
  4483c0:	mov	x19, x0
  4483c4:	cbz	x0, 448488 <_obstack_memory_used@@Base+0xa228>
  4483c8:	add	x23, x19, #0x8
  4483cc:	mov	x0, x23
  4483d0:	mov	x1, x22
  4483d4:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  4483d8:	cbnz	w0, 4484a0 <_obstack_memory_used@@Base+0xa240>
  4483dc:	str	x23, [x19, #80]
  4483e0:	ldr	x8, [x22, #8]
  4483e4:	cmp	x8, #0x1
  4483e8:	b.lt	448474 <_obstack_memory_used@@Base+0xa214>  // b.tstop
  4483ec:	ldr	x8, [x21]
  4483f0:	ldp	x10, x9, [x22, #8]
  4483f4:	mov	x11, xzr
  4483f8:	b	44841c <_obstack_memory_used@@Base+0xa1bc>
  4483fc:	ldr	w12, [x12]
  448400:	tst	w12, #0x3ff00
  448404:	b.eq	448410 <_obstack_memory_used@@Base+0xa1b0>  // b.none
  448408:	orr	w12, w13, #0x80
  44840c:	strb	w12, [x19, #104]
  448410:	add	x11, x11, #0x1
  448414:	cmp	x11, x10
  448418:	b.ge	448474 <_obstack_memory_used@@Base+0xa214>  // b.tcont
  44841c:	ldr	x12, [x9, x11, lsl #3]
  448420:	add	x12, x8, x12, lsl #4
  448424:	ldr	w13, [x12, #8]!
  448428:	and	w14, w13, #0x3ffff
  44842c:	cmp	w14, #0x1
  448430:	b.eq	448410 <_obstack_memory_used@@Base+0xa1b0>  // b.none
  448434:	ldrb	w15, [x19, #104]
  448438:	lsr	w16, w13, #15
  44843c:	and	w14, w13, #0xff
  448440:	and	w13, w16, #0x20
  448444:	orr	w13, w15, w13
  448448:	cmp	w14, #0xc
  44844c:	strb	w13, [x19, #104]
  448450:	b.eq	448408 <_obstack_memory_used@@Base+0xa1a8>  // b.none
  448454:	cmp	w14, #0x4
  448458:	b.eq	44846c <_obstack_memory_used@@Base+0xa20c>  // b.none
  44845c:	cmp	w14, #0x2
  448460:	b.ne	4483fc <_obstack_memory_used@@Base+0xa19c>  // b.any
  448464:	orr	w12, w13, #0x10
  448468:	b	44840c <_obstack_memory_used@@Base+0xa1ac>
  44846c:	orr	w12, w13, #0x40
  448470:	b	44840c <_obstack_memory_used@@Base+0xa1ac>
  448474:	mov	x0, x21
  448478:	mov	x1, x19
  44847c:	mov	x2, x20
  448480:	bl	445254 <_obstack_memory_used@@Base+0x6ff4>
  448484:	cbnz	w0, 4484ac <_obstack_memory_used@@Base+0xa24c>
  448488:	mov	x0, x19
  44848c:	ldp	x20, x19, [sp, #48]
  448490:	ldp	x22, x21, [sp, #32]
  448494:	ldr	x23, [sp, #16]
  448498:	ldp	x29, x30, [sp], #64
  44849c:	ret
  4484a0:	mov	x0, x19
  4484a4:	bl	4049d0 <free@plt>
  4484a8:	b	4484b4 <_obstack_memory_used@@Base+0xa254>
  4484ac:	mov	x0, x19
  4484b0:	bl	43fa04 <_obstack_memory_used@@Base+0x17a4>
  4484b4:	mov	x19, xzr
  4484b8:	b	448488 <_obstack_memory_used@@Base+0xa228>
  4484bc:	stp	x29, x30, [sp, #-80]!
  4484c0:	stp	x24, x23, [sp, #32]
  4484c4:	stp	x22, x21, [sp, #48]
  4484c8:	stp	x20, x19, [sp, #64]
  4484cc:	ldr	x24, [x0]
  4484d0:	str	x25, [sp, #16]
  4484d4:	mov	x20, x3
  4484d8:	mov	x22, x2
  4484dc:	add	x8, x24, x1, lsl #4
  4484e0:	ldrb	w25, [x8, #8]
  4484e4:	mov	x29, sp
  4484e8:	cmp	w25, #0x7
  4484ec:	b.eq	448690 <_obstack_memory_used@@Base+0xa430>  // b.none
  4484f0:	mov	x21, x0
  4484f4:	mov	x23, x1
  4484f8:	mov	x0, x22
  4484fc:	mov	x1, x20
  448500:	bl	443688 <_obstack_memory_used@@Base+0x5428>
  448504:	cmp	w25, #0x5
  448508:	mov	w19, w0
  44850c:	b.ne	448548 <_obstack_memory_used@@Base+0xa2e8>  // b.any
  448510:	cmp	w19, #0x2
  448514:	b.lt	44865c <_obstack_memory_used@@Base+0xa3fc>  // b.tstop
  448518:	ldr	x8, [x21, #216]
  44851c:	tbnz	w8, #6, 448530 <_obstack_memory_used@@Base+0xa2d0>
  448520:	ldr	x9, [x22, #8]
  448524:	ldrb	w9, [x9, x20]
  448528:	cmp	w9, #0xa
  44852c:	b.eq	44865c <_obstack_memory_used@@Base+0xa3fc>  // b.none
  448530:	tbz	w8, #7, 448540 <_obstack_memory_used@@Base+0xa2e0>
  448534:	ldr	x8, [x22, #8]
  448538:	ldrb	w8, [x8, x20]
  44853c:	cbz	w8, 44865c <_obstack_memory_used@@Base+0xa3fc>
  448540:	mov	w21, w19
  448544:	b	448660 <_obstack_memory_used@@Base+0xa400>
  448548:	cmp	w25, #0x6
  44854c:	mov	w21, wzr
  448550:	b.ne	448660 <_obstack_memory_used@@Base+0xa400>  // b.any
  448554:	cmp	w19, #0x2
  448558:	b.lt	448660 <_obstack_memory_used@@Base+0xa400>  // b.tstop
  44855c:	lsl	x8, x23, #4
  448560:	ldr	x23, [x24, x8]
  448564:	ldr	x8, [x23, #64]
  448568:	cbnz	x8, 44857c <_obstack_memory_used@@Base+0xa31c>
  44856c:	ldr	x8, [x23, #72]
  448570:	cbnz	x8, 44857c <_obstack_memory_used@@Base+0xa31c>
  448574:	ldr	x8, [x23, #40]
  448578:	cbz	x8, 448688 <_obstack_memory_used@@Base+0xa428>
  44857c:	mov	x0, x22
  448580:	mov	x1, x20
  448584:	bl	44159c <_obstack_memory_used@@Base+0x333c>
  448588:	mov	w20, w0
  44858c:	ldr	x8, [x23, #40]
  448590:	cmp	x8, #0x1
  448594:	b.lt	4485bc <_obstack_memory_used@@Base+0xa35c>  // b.tstop
  448598:	ldr	x8, [x23]
  44859c:	mov	x9, xzr
  4485a0:	ldr	w10, [x8, x9, lsl #2]
  4485a4:	cmp	w20, w10
  4485a8:	b.eq	448648 <_obstack_memory_used@@Base+0xa3e8>  // b.none
  4485ac:	ldr	x10, [x23, #40]
  4485b0:	add	x9, x9, #0x1
  4485b4:	cmp	x9, x10
  4485b8:	b.lt	4485a0 <_obstack_memory_used@@Base+0xa340>  // b.tstop
  4485bc:	ldr	x8, [x23, #72]
  4485c0:	cmp	x8, #0x1
  4485c4:	b.lt	448600 <_obstack_memory_used@@Base+0xa3a0>  // b.tstop
  4485c8:	mov	w21, wzr
  4485cc:	mov	x22, xzr
  4485d0:	ldr	x8, [x23, #24]
  4485d4:	mov	w0, w20
  4485d8:	ldr	x1, [x8, x22, lsl #3]
  4485dc:	bl	4044e0 <iswctype@plt>
  4485e0:	cmp	w0, #0x0
  4485e4:	csel	w21, w21, w19, eq  // eq = none
  4485e8:	cbnz	w0, 44864c <_obstack_memory_used@@Base+0xa3ec>
  4485ec:	ldr	x8, [x23, #72]
  4485f0:	add	x22, x22, #0x1
  4485f4:	cmp	x22, x8
  4485f8:	b.lt	4485d0 <_obstack_memory_used@@Base+0xa370>  // b.tstop
  4485fc:	b	448604 <_obstack_memory_used@@Base+0xa3a4>
  448600:	mov	w21, wzr
  448604:	ldr	x8, [x23, #64]
  448608:	cmp	x8, #0x1
  44860c:	b.lt	44864c <_obstack_memory_used@@Base+0xa3ec>  // b.tstop
  448610:	ldr	x8, [x23, #8]
  448614:	mov	x9, xzr
  448618:	b	44862c <_obstack_memory_used@@Base+0xa3cc>
  44861c:	ldr	x10, [x23, #64]
  448620:	add	x9, x9, #0x1
  448624:	cmp	x9, x10
  448628:	b.ge	44864c <_obstack_memory_used@@Base+0xa3ec>  // b.tcont
  44862c:	ldr	w10, [x8, x9, lsl #2]
  448630:	cmp	w10, w20
  448634:	b.hi	44861c <_obstack_memory_used@@Base+0xa3bc>  // b.pmore
  448638:	ldr	x10, [x23, #16]
  44863c:	ldr	w10, [x10, x9, lsl #2]
  448640:	cmp	w20, w10
  448644:	b.hi	44861c <_obstack_memory_used@@Base+0xa3bc>  // b.pmore
  448648:	mov	w21, w19
  44864c:	ldrb	w8, [x23, #32]
  448650:	tbz	w8, #0, 448660 <_obstack_memory_used@@Base+0xa400>
  448654:	cmp	w21, #0x0
  448658:	b.le	44867c <_obstack_memory_used@@Base+0xa41c>
  44865c:	mov	w21, wzr
  448660:	mov	w0, w21
  448664:	ldp	x20, x19, [sp, #64]
  448668:	ldp	x22, x21, [sp, #48]
  44866c:	ldp	x24, x23, [sp, #32]
  448670:	ldr	x25, [sp, #16]
  448674:	ldp	x29, x30, [sp], #80
  448678:	ret
  44867c:	cmp	w19, #0x1
  448680:	csinc	w21, w19, wzr, gt
  448684:	b	448660 <_obstack_memory_used@@Base+0xa400>
  448688:	mov	w20, wzr
  44868c:	b	44858c <_obstack_memory_used@@Base+0xa32c>
  448690:	ldr	x8, [x22, #8]
  448694:	ldrb	w10, [x8, x20]
  448698:	cmp	w10, #0xc2
  44869c:	b.cc	44865c <_obstack_memory_used@@Base+0xa3fc>  // b.lo, b.ul, b.last
  4486a0:	ldr	x9, [x22, #88]
  4486a4:	add	x11, x20, #0x2
  4486a8:	cmp	x11, x9
  4486ac:	b.gt	44865c <_obstack_memory_used@@Base+0xa3fc>
  4486b0:	add	x11, x20, x8
  4486b4:	ldrb	w11, [x11, #1]
  4486b8:	cmp	w10, #0xdf
  4486bc:	b.hi	4486dc <_obstack_memory_used@@Base+0xa47c>  // b.pmore
  4486c0:	sxtb	w8, w11
  4486c4:	cmp	w11, #0xbf
  4486c8:	mov	w9, #0xffffffff            	// #-1
  4486cc:	ccmp	w8, w9, #0x0, ls  // ls = plast
  4486d0:	mov	w8, #0x2                   	// #2
  4486d4:	csel	w21, wzr, w8, gt
  4486d8:	b	448660 <_obstack_memory_used@@Base+0xa400>
  4486dc:	cmp	w10, #0xef
  4486e0:	b.hi	4486fc <_obstack_memory_used@@Base+0xa49c>  // b.pmore
  4486e4:	cmp	w10, #0xe0
  4486e8:	mov	w10, #0x3                   	// #3
  4486ec:	b.ne	448758 <_obstack_memory_used@@Base+0xa4f8>  // b.any
  4486f0:	cmp	w11, #0xa0
  4486f4:	b.cc	44865c <_obstack_memory_used@@Base+0xa3fc>  // b.lo, b.ul, b.last
  4486f8:	b	448758 <_obstack_memory_used@@Base+0xa4f8>
  4486fc:	cmp	w10, #0xf7
  448700:	b.hi	44871c <_obstack_memory_used@@Base+0xa4bc>  // b.pmore
  448704:	cmp	w10, #0xf0
  448708:	mov	w10, #0x4                   	// #4
  44870c:	b.ne	448758 <_obstack_memory_used@@Base+0xa4f8>  // b.any
  448710:	cmp	w11, #0x90
  448714:	b.cc	44865c <_obstack_memory_used@@Base+0xa3fc>  // b.lo, b.ul, b.last
  448718:	b	448758 <_obstack_memory_used@@Base+0xa4f8>
  44871c:	cmp	w10, #0xfb
  448720:	b.hi	44873c <_obstack_memory_used@@Base+0xa4dc>  // b.pmore
  448724:	cmp	w10, #0xf8
  448728:	mov	w10, #0x5                   	// #5
  44872c:	b.ne	448758 <_obstack_memory_used@@Base+0xa4f8>  // b.any
  448730:	cmp	w11, #0x88
  448734:	b.cc	44865c <_obstack_memory_used@@Base+0xa3fc>  // b.lo, b.ul, b.last
  448738:	b	448758 <_obstack_memory_used@@Base+0xa4f8>
  44873c:	cmp	w10, #0xfd
  448740:	b.hi	44865c <_obstack_memory_used@@Base+0xa3fc>  // b.pmore
  448744:	cmp	w10, #0xfc
  448748:	mov	w10, #0x6                   	// #6
  44874c:	b.ne	448758 <_obstack_memory_used@@Base+0xa4f8>  // b.any
  448750:	cmp	w11, #0x84
  448754:	b.cc	44865c <_obstack_memory_used@@Base+0xa3fc>  // b.lo, b.ul, b.last
  448758:	add	x11, x10, x20
  44875c:	cmp	x11, x9
  448760:	b.gt	44865c <_obstack_memory_used@@Base+0xa3fc>
  448764:	add	x8, x20, x8
  448768:	sub	x9, x10, #0x1
  44876c:	add	x8, x8, #0x1
  448770:	ldrb	w11, [x8]
  448774:	mov	w21, wzr
  448778:	sxtb	w12, w11
  44877c:	tbz	w12, #31, 448660 <_obstack_memory_used@@Base+0xa400>
  448780:	cmp	w11, #0xbf
  448784:	b.hi	448660 <_obstack_memory_used@@Base+0xa400>  // b.pmore
  448788:	subs	x9, x9, #0x1
  44878c:	add	x8, x8, #0x1
  448790:	b.ne	448770 <_obstack_memory_used@@Base+0xa510>  // b.any
  448794:	mov	w21, w10
  448798:	b	448660 <_obstack_memory_used@@Base+0xa400>
  44879c:	stp	x29, x30, [sp, #-48]!
  4487a0:	stp	x20, x19, [sp, #32]
  4487a4:	str	x21, [sp, #16]
  4487a8:	ldr	w21, [x1, #8]
  4487ac:	mov	x20, x0
  4487b0:	mov	w0, wzr
  4487b4:	mov	x29, sp
  4487b8:	and	w9, w21, #0xff
  4487bc:	sub	w9, w9, #0x1
  4487c0:	cmp	w9, #0x6
  4487c4:	b.hi	448880 <_obstack_memory_used@@Base+0xa620>  // b.pmore
  4487c8:	ldr	x10, [x20, #8]
  4487cc:	mov	x8, x1
  4487d0:	mov	x19, x2
  4487d4:	ldrb	w1, [x10, x2]
  4487d8:	adrp	x10, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  4487dc:	add	x10, x10, #0x362
  4487e0:	adr	x11, 4487f0 <_obstack_memory_used@@Base+0xa590>
  4487e4:	ldrb	w12, [x10, x9]
  4487e8:	add	x11, x11, x12, lsl #2
  4487ec:	br	x11
  4487f0:	ldrb	w8, [x8]
  4487f4:	cmp	w8, w1
  4487f8:	b.eq	448840 <_obstack_memory_used@@Base+0xa5e0>  // b.none
  4487fc:	b	448874 <_obstack_memory_used@@Base+0xa614>
  448800:	ldr	x0, [x8]
  448804:	bl	446728 <_obstack_memory_used@@Base+0x84c8>
  448808:	tbz	w0, #0, 448874 <_obstack_memory_used@@Base+0xa614>
  44880c:	b	448840 <_obstack_memory_used@@Base+0xa5e0>
  448810:	sxtb	w8, w1
  448814:	tbnz	w8, #31, 448874 <_obstack_memory_used@@Base+0xa614>
  448818:	cbz	w1, 448834 <_obstack_memory_used@@Base+0xa5d4>
  44881c:	cmp	w1, #0xa
  448820:	b.ne	448840 <_obstack_memory_used@@Base+0xa5e0>  // b.any
  448824:	ldr	x8, [x20, #152]
  448828:	ldrb	w8, [x8, #216]
  44882c:	tbz	w8, #6, 448874 <_obstack_memory_used@@Base+0xa614>
  448830:	cbnz	w1, 448840 <_obstack_memory_used@@Base+0xa5e0>
  448834:	ldr	x8, [x20, #152]
  448838:	ldrb	w8, [x8, #216]
  44883c:	tbnz	w8, #7, 448874 <_obstack_memory_used@@Base+0xa614>
  448840:	tst	w21, #0x3ff00
  448844:	b.eq	44887c <_obstack_memory_used@@Base+0xa61c>  // b.none
  448848:	ldr	w2, [x20, #160]
  44884c:	mov	x0, x20
  448850:	mov	x1, x19
  448854:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  448858:	and	w8, w0, #0x1
  44885c:	tbz	w21, #10, 448864 <_obstack_memory_used@@Base+0xa604>
  448860:	cbz	w8, 448874 <_obstack_memory_used@@Base+0xa614>
  448864:	tbz	w21, #11, 44886c <_obstack_memory_used@@Base+0xa60c>
  448868:	cbnz	w8, 448874 <_obstack_memory_used@@Base+0xa614>
  44886c:	tbz	w21, #13, 448890 <_obstack_memory_used@@Base+0xa630>
  448870:	tbnz	w0, #1, 448890 <_obstack_memory_used@@Base+0xa630>
  448874:	mov	w0, wzr
  448878:	b	448880 <_obstack_memory_used@@Base+0xa620>
  44887c:	mov	w0, #0x1                   	// #1
  448880:	ldp	x20, x19, [sp, #32]
  448884:	ldr	x21, [sp, #16]
  448888:	ldp	x29, x30, [sp], #48
  44888c:	ret
  448890:	tst	w21, #0x8000
  448894:	cset	w8, eq  // eq = none
  448898:	and	w9, w0, #0x8
  44889c:	orr	w0, w8, w9, lsr #3
  4488a0:	b	448880 <_obstack_memory_used@@Base+0xa620>
  4488a4:	sub	sp, sp, #0x70
  4488a8:	stp	x29, x30, [sp, #32]
  4488ac:	stp	x26, x25, [sp, #48]
  4488b0:	stp	x24, x23, [sp, #64]
  4488b4:	stp	x22, x21, [sp, #80]
  4488b8:	stp	x20, x19, [sp, #96]
  4488bc:	ldr	x8, [x1, #16]
  4488c0:	add	x29, sp, #0x20
  4488c4:	cmp	x8, #0x1
  4488c8:	b.lt	448a4c <_obstack_memory_used@@Base+0xa7ec>  // b.tstop
  4488cc:	ldr	x21, [x0, #152]
  4488d0:	mov	x19, x1
  4488d4:	mov	x20, x0
  4488d8:	mov	x25, xzr
  4488dc:	mov	w26, #0x18                  	// #24
  4488e0:	ldr	x8, [x19, #24]
  4488e4:	ldr	x23, [x8, x25, lsl #3]
  4488e8:	ldr	x8, [x21]
  4488ec:	add	x8, x8, x23, lsl #4
  4488f0:	ldr	w24, [x8, #8]
  4488f4:	tbz	w24, #20, 4489b4 <_obstack_memory_used@@Base+0xa754>
  4488f8:	tst	w24, #0x3ff00
  4488fc:	b.eq	448934 <_obstack_memory_used@@Base+0xa6d4>  // b.none
  448900:	ldr	x1, [x20, #72]
  448904:	ldr	w2, [x20, #160]
  448908:	mov	x0, x20
  44890c:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  448910:	and	w8, w0, #0x1
  448914:	tbz	w24, #10, 44891c <_obstack_memory_used@@Base+0xa6bc>
  448918:	cbz	w8, 4489b4 <_obstack_memory_used@@Base+0xa754>
  44891c:	tbz	w24, #11, 448924 <_obstack_memory_used@@Base+0xa6c4>
  448920:	cbnz	w8, 4489b4 <_obstack_memory_used@@Base+0xa754>
  448924:	tbz	w24, #13, 44892c <_obstack_memory_used@@Base+0xa6cc>
  448928:	tbz	w0, #1, 4489b4 <_obstack_memory_used@@Base+0xa754>
  44892c:	tbz	w24, #15, 448934 <_obstack_memory_used@@Base+0xa6d4>
  448930:	tbz	w0, #3, 4489b4 <_obstack_memory_used@@Base+0xa754>
  448934:	ldr	x3, [x20, #72]
  448938:	mov	x0, x21
  44893c:	mov	x1, x23
  448940:	mov	x2, x20
  448944:	bl	4484bc <_obstack_memory_used@@Base+0xa25c>
  448948:	cbz	w0, 4489b4 <_obstack_memory_used@@Base+0xa754>
  44894c:	ldr	x8, [x20, #72]
  448950:	ldr	w9, [x20, #224]
  448954:	add	x24, x8, w0, sxtw
  448958:	cmp	w9, w0
  44895c:	csel	w8, w0, w9, lt  // lt = tstop
  448960:	mov	x0, x20
  448964:	mov	x1, x24
  448968:	str	w8, [x20, #224]
  44896c:	bl	447564 <_obstack_memory_used@@Base+0x9304>
  448970:	stur	w0, [x29, #-4]
  448974:	cbnz	w0, 4489a8 <_obstack_memory_used@@Base+0xa748>
  448978:	ldr	x8, [x21, #24]
  44897c:	ldr	x9, [x20, #184]
  448980:	ldr	x10, [x21, #48]
  448984:	ldr	x8, [x8, x23, lsl #3]
  448988:	ldr	x23, [x9, x24, lsl #3]
  44898c:	madd	x2, x8, x26, x10
  448990:	cbz	x23, 4489d8 <_obstack_memory_used@@Base+0xa778>
  448994:	ldr	x1, [x23, #80]
  448998:	mov	x0, sp
  44899c:	bl	4472e0 <_obstack_memory_used@@Base+0x9080>
  4489a0:	stur	w0, [x29, #-4]
  4489a4:	cbz	w0, 4489e8 <_obstack_memory_used@@Base+0xa788>
  4489a8:	mov	w8, #0x1                   	// #1
  4489ac:	mov	w22, w0
  4489b0:	b	4489b8 <_obstack_memory_used@@Base+0xa758>
  4489b4:	mov	w8, #0x4                   	// #4
  4489b8:	orr	w8, w8, #0x4
  4489bc:	cmp	w8, #0x4
  4489c0:	b.ne	448a50 <_obstack_memory_used@@Base+0xa7f0>  // b.any
  4489c4:	ldr	x8, [x19, #16]
  4489c8:	add	x25, x25, #0x1
  4489cc:	cmp	x25, x8
  4489d0:	b.lt	4488e0 <_obstack_memory_used@@Base+0xa680>  // b.tstop
  4489d4:	b	448a4c <_obstack_memory_used@@Base+0xa7ec>
  4489d8:	ldr	x8, [x2, #16]
  4489dc:	ldr	q0, [x2]
  4489e0:	str	x8, [sp, #16]
  4489e4:	str	q0, [sp]
  4489e8:	ldr	w2, [x20, #160]
  4489ec:	sub	x1, x24, #0x1
  4489f0:	mov	x0, x20
  4489f4:	bl	446580 <_obstack_memory_used@@Base+0x8320>
  4489f8:	mov	w3, w0
  4489fc:	sub	x0, x29, #0x4
  448a00:	mov	x2, sp
  448a04:	mov	x1, x21
  448a08:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  448a0c:	ldr	x8, [x20, #184]
  448a10:	str	x0, [x8, x24, lsl #3]
  448a14:	cbz	x23, 448a20 <_obstack_memory_used@@Base+0xa7c0>
  448a18:	ldr	x0, [sp, #16]
  448a1c:	bl	4049d0 <free@plt>
  448a20:	ldr	x8, [x20, #184]
  448a24:	ldur	w9, [x29, #-4]
  448a28:	ldr	x8, [x8, x24, lsl #3]
  448a2c:	cmp	x8, #0x0
  448a30:	cset	w10, eq  // eq = none
  448a34:	cmp	w9, #0x0
  448a38:	cset	w11, ne  // ne = any
  448a3c:	tst	w10, w11
  448a40:	and	w8, w10, w11
  448a44:	csel	w22, w9, w22, ne  // ne = any
  448a48:	b	4489b8 <_obstack_memory_used@@Base+0xa758>
  448a4c:	mov	w22, wzr
  448a50:	mov	w0, w22
  448a54:	ldp	x20, x19, [sp, #96]
  448a58:	ldp	x22, x21, [sp, #80]
  448a5c:	ldp	x24, x23, [sp, #64]
  448a60:	ldp	x26, x25, [sp, #48]
  448a64:	ldp	x29, x30, [sp, #32]
  448a68:	add	sp, sp, #0x70
  448a6c:	ret
  448a70:	stp	x29, x30, [sp, #-96]!
  448a74:	stp	x28, x27, [sp, #16]
  448a78:	stp	x26, x25, [sp, #32]
  448a7c:	stp	x24, x23, [sp, #48]
  448a80:	stp	x22, x21, [sp, #64]
  448a84:	stp	x20, x19, [sp, #80]
  448a88:	mov	x29, sp
  448a8c:	sub	sp, sp, #0x70
  448a90:	mov	x23, x0
  448a94:	mov	w0, #0x3800                	// #14336
  448a98:	mov	x26, x1
  448a9c:	bl	4044f0 <malloc@plt>
  448aa0:	cbz	x0, 448f4c <_obstack_memory_used@@Base+0xacec>
  448aa4:	mov	w8, #0x1800                	// #6144
  448aa8:	mov	x25, x0
  448aac:	add	x21, x0, x8
  448ab0:	mov	x19, x26
  448ab4:	mov	x0, x23
  448ab8:	mov	x1, x26
  448abc:	mov	x2, x25
  448ac0:	mov	x3, x21
  448ac4:	str	xzr, [x19, #88]!
  448ac8:	str	xzr, [x26, #96]
  448acc:	bl	448f90 <_obstack_memory_used@@Base+0xad30>
  448ad0:	mov	x20, x0
  448ad4:	cmp	x0, #0x0
  448ad8:	b.le	448e08 <_obstack_memory_used@@Base+0xaba8>
  448adc:	add	x1, x20, #0x1
  448ae0:	sub	x0, x29, #0x20
  448ae4:	bl	44475c <_obstack_memory_used@@Base+0x64fc>
  448ae8:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  448aec:	movk	x8, #0xa855
  448af0:	movk	x8, #0xaaa, lsl #48
  448af4:	mov	x22, xzr
  448af8:	mov	w24, wzr
  448afc:	cmp	x20, x8
  448b00:	stur	w0, [x29, #-4]
  448b04:	b.hi	448d10 <_obstack_memory_used@@Base+0xaab0>  // b.pmore
  448b08:	cbnz	w0, 448d10 <_obstack_memory_used@@Base+0xaab0>
  448b0c:	add	x8, x20, x20, lsl #1
  448b10:	lsl	x0, x8, #3
  448b14:	mov	w8, #0x3800                	// #14336
  448b18:	add	x8, x0, x8
  448b1c:	cmp	x8, #0xfbf
  448b20:	b.hi	448b40 <_obstack_memory_used@@Base+0xa8e0>  // b.pmore
  448b24:	add	x9, x0, #0xf
  448b28:	mov	x8, sp
  448b2c:	and	x9, x9, #0xfffffffffffffff0
  448b30:	sub	x22, x8, x9
  448b34:	mov	sp, x22
  448b38:	mov	w8, wzr
  448b3c:	b	448b50 <_obstack_memory_used@@Base+0xa8f0>
  448b40:	bl	4044f0 <malloc@plt>
  448b44:	mov	x22, x0
  448b48:	cbz	x0, 448f6c <_obstack_memory_used@@Base+0xad0c>
  448b4c:	mov	w8, #0x1                   	// #1
  448b50:	stur	w8, [x29, #-88]
  448b54:	lsl	x8, x20, #3
  448b58:	add	x9, x22, x8
  448b5c:	sub	x0, x29, #0x40
  448b60:	stp	x26, x19, [x29, #-104]
  448b64:	stur	x9, [x29, #-72]
  448b68:	add	x27, x9, x8
  448b6c:	bl	4494f4 <_obstack_memory_used@@Base+0xb294>
  448b70:	cmp	x20, #0x1
  448b74:	b.lt	448d50 <_obstack_memory_used@@Base+0xaaf0>  // b.tstop
  448b78:	mov	x26, xzr
  448b7c:	stur	wzr, [x29, #-84]
  448b80:	mov	w24, #0x18                  	// #24
  448b84:	stur	x21, [x29, #-80]
  448b88:	stur	xzr, [x29, #-24]
  448b8c:	madd	x28, x26, x24, x25
  448b90:	ldr	x8, [x28, #8]!
  448b94:	cmp	x8, #0x1
  448b98:	b.lt	448c2c <_obstack_memory_used@@Base+0xa9cc>  // b.tstop
  448b9c:	ldur	w0, [x29, #-4]
  448ba0:	madd	x8, x26, x24, x25
  448ba4:	mov	x21, x27
  448ba8:	mov	x27, x22
  448bac:	mov	x19, xzr
  448bb0:	mov	x22, x25
  448bb4:	add	x25, x8, #0x10
  448bb8:	b	448bcc <_obstack_memory_used@@Base+0xa96c>
  448bbc:	ldr	x8, [x28]
  448bc0:	add	x19, x19, #0x1
  448bc4:	cmp	x19, x8
  448bc8:	b.ge	448c18 <_obstack_memory_used@@Base+0xa9b8>  // b.tcont
  448bcc:	ldr	x8, [x25]
  448bd0:	ldr	x9, [x23, #24]
  448bd4:	ldr	x8, [x8, x19, lsl #3]
  448bd8:	ldr	x8, [x9, x8, lsl #3]
  448bdc:	cmn	x8, #0x1
  448be0:	b.eq	448bbc <_obstack_memory_used@@Base+0xa95c>  // b.none
  448be4:	ldr	x9, [x23, #48]
  448be8:	sub	x0, x29, #0x20
  448bec:	madd	x1, x8, x24, x9
  448bf0:	bl	4449c4 <_obstack_memory_used@@Base+0x6764>
  448bf4:	cbz	w0, 448bbc <_obstack_memory_used@@Base+0xa95c>
  448bf8:	mov	x25, x22
  448bfc:	mov	x22, x27
  448c00:	mov	x27, x21
  448c04:	ldur	x21, [x29, #-80]
  448c08:	mov	w8, wzr
  448c0c:	stur	w0, [x29, #-4]
  448c10:	tbnz	w8, #0, 448cf4 <_obstack_memory_used@@Base+0xaa94>
  448c14:	b	448d0c <_obstack_memory_used@@Base+0xaaac>
  448c18:	mov	x25, x22
  448c1c:	mov	x22, x27
  448c20:	mov	x27, x21
  448c24:	ldur	x21, [x29, #-80]
  448c28:	stur	w0, [x29, #-4]
  448c2c:	sub	x0, x29, #0x4
  448c30:	sub	x2, x29, #0x20
  448c34:	mov	x1, x23
  448c38:	mov	w3, wzr
  448c3c:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  448c40:	str	x0, [x22, x26, lsl #3]
  448c44:	cbnz	x0, 448c50 <_obstack_memory_used@@Base+0xa9f0>
  448c48:	ldur	w8, [x29, #-4]
  448c4c:	cbnz	w8, 448d04 <_obstack_memory_used@@Base+0xaaa4>
  448c50:	ldrsb	w8, [x0, #104]
  448c54:	tbnz	w8, #31, 448c70 <_obstack_memory_used@@Base+0xaa10>
  448c58:	ldur	x9, [x29, #-72]
  448c5c:	lsl	x8, x26, #3
  448c60:	str	x0, [x9, x8]
  448c64:	ldr	x9, [x22, x8]
  448c68:	str	x9, [x27, x8]
  448c6c:	b	448ce0 <_obstack_memory_used@@Base+0xaa80>
  448c70:	sub	x0, x29, #0x4
  448c74:	sub	x2, x29, #0x20
  448c78:	mov	w3, #0x1                   	// #1
  448c7c:	mov	x1, x23
  448c80:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  448c84:	ldur	x8, [x29, #-72]
  448c88:	str	x0, [x8, x26, lsl #3]
  448c8c:	cbnz	x0, 448c98 <_obstack_memory_used@@Base+0xaa38>
  448c90:	ldur	w8, [x29, #-4]
  448c94:	cbnz	w8, 448d04 <_obstack_memory_used@@Base+0xaaa4>
  448c98:	ldr	x8, [x22, x26, lsl #3]
  448c9c:	cmp	x8, x0
  448ca0:	b.eq	448cbc <_obstack_memory_used@@Base+0xaa5c>  // b.none
  448ca4:	ldr	w8, [x23, #180]
  448ca8:	ldur	w9, [x29, #-84]
  448cac:	cmp	w8, #0x1
  448cb0:	cset	w8, gt
  448cb4:	orr	w9, w9, w8
  448cb8:	stur	w9, [x29, #-84]
  448cbc:	sub	x0, x29, #0x4
  448cc0:	sub	x2, x29, #0x20
  448cc4:	mov	w3, #0x2                   	// #2
  448cc8:	mov	x1, x23
  448ccc:	bl	444e8c <_obstack_memory_used@@Base+0x6c2c>
  448cd0:	str	x0, [x27, x26, lsl #3]
  448cd4:	cbnz	x0, 448ce0 <_obstack_memory_used@@Base+0xaa80>
  448cd8:	ldur	w8, [x29, #-4]
  448cdc:	cbnz	w8, 448d04 <_obstack_memory_used@@Base+0xaaa4>
  448ce0:	add	x1, x21, x26, lsl #5
  448ce4:	sub	x0, x29, #0x40
  448ce8:	bl	449500 <_obstack_memory_used@@Base+0xb2a0>
  448cec:	mov	w8, #0x1                   	// #1
  448cf0:	tbz	w8, #0, 448d0c <_obstack_memory_used@@Base+0xaaac>
  448cf4:	add	x26, x26, #0x1
  448cf8:	cmp	x26, x20
  448cfc:	b.ne	448b88 <_obstack_memory_used@@Base+0xa928>  // b.any
  448d00:	b	448d54 <_obstack_memory_used@@Base+0xaaf4>
  448d04:	mov	w8, wzr
  448d08:	tbnz	w8, #0, 448cf4 <_obstack_memory_used@@Base+0xaa94>
  448d0c:	ldur	w24, [x29, #-88]
  448d10:	cbz	w24, 448d1c <_obstack_memory_used@@Base+0xaabc>
  448d14:	mov	x0, x22
  448d18:	bl	4049d0 <free@plt>
  448d1c:	ldur	x0, [x29, #-16]
  448d20:	bl	4049d0 <free@plt>
  448d24:	cmp	x20, #0x1
  448d28:	b.lt	448d40 <_obstack_memory_used@@Base+0xaae0>  // b.tstop
  448d2c:	add	x19, x25, #0x10
  448d30:	ldr	x0, [x19], #24
  448d34:	bl	4049d0 <free@plt>
  448d38:	subs	x20, x20, #0x1
  448d3c:	b.ne	448d30 <_obstack_memory_used@@Base+0xaad0>  // b.any
  448d40:	mov	x0, x25
  448d44:	bl	4049d0 <free@plt>
  448d48:	mov	w0, wzr
  448d4c:	b	448f4c <_obstack_memory_used@@Base+0xacec>
  448d50:	stur	wzr, [x29, #-84]
  448d54:	ldur	w26, [x29, #-84]
  448d58:	tbnz	w26, #0, 448e1c <_obstack_memory_used@@Base+0xabbc>
  448d5c:	mov	w0, #0x8                   	// #8
  448d60:	mov	w1, #0x100                 	// #256
  448d64:	bl	4046a0 <calloc@plt>
  448d68:	ldur	x8, [x29, #-96]
  448d6c:	ldur	w24, [x29, #-88]
  448d70:	str	x0, [x8]
  448d74:	cbz	x0, 448d10 <_obstack_memory_used@@Base+0xaab0>
  448d78:	mov	x28, x0
  448d7c:	mov	x8, xzr
  448d80:	mov	x9, xzr
  448d84:	sub	x10, x29, #0x40
  448d88:	mov	x11, x21
  448d8c:	b	448da4 <_obstack_memory_used@@Base+0xab44>
  448d90:	add	x9, x9, #0x1
  448d94:	add	x8, x8, #0x40
  448d98:	cmp	x9, #0x4
  448d9c:	add	x11, x11, #0x8
  448da0:	b.eq	448ec0 <_obstack_memory_used@@Base+0xac60>  // b.none
  448da4:	ldr	x12, [x10, x9, lsl #3]
  448da8:	cbz	x12, 448d90 <_obstack_memory_used@@Base+0xab30>
  448dac:	add	x14, x23, x9, lsl #3
  448db0:	mov	x13, x8
  448db4:	add	x14, x14, #0xb8
  448db8:	mov	w15, #0x1                   	// #1
  448dbc:	tbnz	w12, #0, 448dd4 <_obstack_memory_used@@Base+0xab74>
  448dc0:	lsl	x15, x15, #1
  448dc4:	lsr	x12, x12, #1
  448dc8:	add	x13, x13, #0x1
  448dcc:	cbnz	x12, 448dbc <_obstack_memory_used@@Base+0xab5c>
  448dd0:	b	448d90 <_obstack_memory_used@@Base+0xab30>
  448dd4:	mov	x16, #0xfffffffffffffff8    	// #-8
  448dd8:	mov	x17, x11
  448ddc:	ldr	x18, [x17], #32
  448de0:	add	x16, x16, #0x8
  448de4:	tst	x18, x15
  448de8:	b.eq	448ddc <_obstack_memory_used@@Base+0xab7c>  // b.none
  448dec:	ldr	x17, [x14]
  448df0:	tst	x17, x15
  448df4:	ldur	x17, [x29, #-72]
  448df8:	csel	x17, x22, x17, eq  // eq = none
  448dfc:	ldr	x16, [x17, x16]
  448e00:	str	x16, [x28, x13, lsl #3]
  448e04:	b	448dc0 <_obstack_memory_used@@Base+0xab60>
  448e08:	mov	x0, x25
  448e0c:	bl	4049d0 <free@plt>
  448e10:	cbz	x20, 448f74 <_obstack_memory_used@@Base+0xad14>
  448e14:	mov	w0, wzr
  448e18:	b	448f4c <_obstack_memory_used@@Base+0xacec>
  448e1c:	mov	w0, #0x8                   	// #8
  448e20:	mov	w1, #0x200                 	// #512
  448e24:	bl	4046a0 <calloc@plt>
  448e28:	ldur	x8, [x29, #-104]
  448e2c:	ldur	w24, [x29, #-88]
  448e30:	str	x0, [x8, #96]
  448e34:	cbz	x0, 448d10 <_obstack_memory_used@@Base+0xaab0>
  448e38:	mov	x28, x0
  448e3c:	mov	x8, xzr
  448e40:	mov	x9, xzr
  448e44:	sub	x10, x22, #0x8
  448e48:	sub	x11, x29, #0x40
  448e4c:	mov	x12, x21
  448e50:	b	448e68 <_obstack_memory_used@@Base+0xac08>
  448e54:	add	x9, x9, #0x1
  448e58:	add	x8, x8, #0x40
  448e5c:	cmp	x9, #0x4
  448e60:	add	x12, x12, #0x8
  448e64:	b.eq	448ec0 <_obstack_memory_used@@Base+0xac60>  // b.none
  448e68:	ldr	x13, [x11, x9, lsl #3]
  448e6c:	cbz	x13, 448e54 <_obstack_memory_used@@Base+0xabf4>
  448e70:	mov	x14, x8
  448e74:	mov	w15, #0x1                   	// #1
  448e78:	tbnz	w13, #0, 448e90 <_obstack_memory_used@@Base+0xac30>
  448e7c:	lsl	x15, x15, #1
  448e80:	lsr	x13, x13, #1
  448e84:	add	x14, x14, #0x1
  448e88:	cbnz	x13, 448e78 <_obstack_memory_used@@Base+0xac18>
  448e8c:	b	448e54 <_obstack_memory_used@@Base+0xabf4>
  448e90:	mov	x17, x12
  448e94:	mov	x16, x10
  448e98:	ldr	x18, [x17], #32
  448e9c:	add	x16, x16, #0x8
  448ea0:	tst	x18, x15
  448ea4:	b.eq	448e98 <_obstack_memory_used@@Base+0xac38>  // b.none
  448ea8:	ldr	x17, [x16]
  448eac:	ldr	x16, [x16, x20, lsl #3]
  448eb0:	add	x18, x28, x14, lsl #3
  448eb4:	str	x17, [x18]
  448eb8:	str	x16, [x18, #2048]
  448ebc:	b	448e7c <_obstack_memory_used@@Base+0xac1c>
  448ec0:	sub	x0, x29, #0x40
  448ec4:	mov	w1, #0xa                   	// #10
  448ec8:	bl	446728 <_obstack_memory_used@@Base+0x84c8>
  448ecc:	tbz	w0, #0, 448f10 <_obstack_memory_used@@Base+0xacb0>
  448ed0:	cmp	x20, #0x1
  448ed4:	b.lt	448f10 <_obstack_memory_used@@Base+0xacb0>  // b.tstop
  448ed8:	mov	x19, x20
  448edc:	mov	w1, #0xa                   	// #10
  448ee0:	mov	x0, x21
  448ee4:	bl	446728 <_obstack_memory_used@@Base+0x84c8>
  448ee8:	tbnz	w0, #0, 448f00 <_obstack_memory_used@@Base+0xaca0>
  448eec:	add	x27, x27, #0x8
  448ef0:	subs	x19, x19, #0x1
  448ef4:	add	x21, x21, #0x20
  448ef8:	b.ne	448edc <_obstack_memory_used@@Base+0xac7c>  // b.any
  448efc:	b	448f10 <_obstack_memory_used@@Base+0xacb0>
  448f00:	ldr	x8, [x27]
  448f04:	str	x8, [x28, #80]
  448f08:	tbz	w26, #0, 448f10 <_obstack_memory_used@@Base+0xacb0>
  448f0c:	str	x8, [x28, #2128]
  448f10:	cbz	w24, 448f1c <_obstack_memory_used@@Base+0xacbc>
  448f14:	mov	x0, x22
  448f18:	bl	4049d0 <free@plt>
  448f1c:	ldur	x0, [x29, #-16]
  448f20:	bl	4049d0 <free@plt>
  448f24:	cmp	x20, #0x1
  448f28:	b.lt	448f40 <_obstack_memory_used@@Base+0xace0>  // b.tstop
  448f2c:	add	x19, x25, #0x10
  448f30:	ldr	x0, [x19], #24
  448f34:	bl	4049d0 <free@plt>
  448f38:	subs	x20, x20, #0x1
  448f3c:	b.ne	448f30 <_obstack_memory_used@@Base+0xacd0>  // b.any
  448f40:	mov	x0, x25
  448f44:	bl	4049d0 <free@plt>
  448f48:	mov	w0, #0x1                   	// #1
  448f4c:	mov	sp, x29
  448f50:	ldp	x20, x19, [sp, #80]
  448f54:	ldp	x22, x21, [sp, #64]
  448f58:	ldp	x24, x23, [sp, #48]
  448f5c:	ldp	x26, x25, [sp, #32]
  448f60:	ldp	x28, x27, [sp, #16]
  448f64:	ldp	x29, x30, [sp], #96
  448f68:	ret
  448f6c:	mov	w24, wzr
  448f70:	b	448d10 <_obstack_memory_used@@Base+0xaab0>
  448f74:	mov	w0, #0x8                   	// #8
  448f78:	mov	w1, #0x100                 	// #256
  448f7c:	bl	4046a0 <calloc@plt>
  448f80:	cmp	x0, #0x0
  448f84:	str	x0, [x19]
  448f88:	cset	w0, ne  // ne = any
  448f8c:	b	448f4c <_obstack_memory_used@@Base+0xacec>
  448f90:	sub	sp, sp, #0xf0
  448f94:	stp	x29, x30, [sp, #144]
  448f98:	add	x29, sp, #0x90
  448f9c:	stp	x22, x21, [sp, #208]
  448fa0:	mov	x22, x0
  448fa4:	sub	x0, x29, #0x20
  448fa8:	stp	x28, x27, [sp, #160]
  448fac:	stp	x26, x25, [sp, #176]
  448fb0:	stp	x24, x23, [sp, #192]
  448fb4:	stp	x20, x19, [sp, #224]
  448fb8:	stp	x2, x3, [sp, #32]
  448fbc:	mov	x20, x1
  448fc0:	sub	x25, x29, #0x20
  448fc4:	bl	4494f4 <_obstack_memory_used@@Base+0xb294>
  448fc8:	ldr	x8, [x20, #16]
  448fcc:	cmp	x8, #0x1
  448fd0:	b.lt	44949c <_obstack_memory_used@@Base+0xb23c>  // b.tstop
  448fd4:	mov	x26, xzr
  448fd8:	mov	x19, xzr
  448fdc:	add	x24, x22, #0xb8
  448fe0:	sub	x28, x29, #0x40
  448fe4:	add	x23, sp, #0x30
  448fe8:	stp	x24, x22, [sp]
  448fec:	b	449000 <_obstack_memory_used@@Base+0xada0>
  448ff0:	ldr	x8, [x20, #16]
  448ff4:	add	x26, x26, #0x1
  448ff8:	cmp	x26, x8
  448ffc:	b.ge	4494d0 <_obstack_memory_used@@Base+0xb270>  // b.tcont
  449000:	ldr	x8, [x20, #24]
  449004:	ldr	x9, [x22]
  449008:	ldr	x8, [x8, x26, lsl #3]
  44900c:	add	x8, x9, x8, lsl #4
  449010:	mov	x27, x8
  449014:	ldr	w21, [x27, #8]!
  449018:	and	w9, w21, #0xff
  44901c:	cmp	w9, #0x1
  449020:	str	w9, [sp, #28]
  449024:	b.ne	449044 <_obstack_memory_used@@Base+0xade4>  // b.any
  449028:	ldrb	w1, [x8]
  44902c:	sub	x0, x29, #0x20
  449030:	str	x8, [sp, #16]
  449034:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  449038:	and	w8, w21, #0x3ff00
  44903c:	cbnz	w8, 4490a8 <_obstack_memory_used@@Base+0xae48>
  449040:	b	4492bc <_obstack_memory_used@@Base+0xb05c>
  449044:	cmp	w9, #0x7
  449048:	b.eq	449078 <_obstack_memory_used@@Base+0xae18>  // b.none
  44904c:	cmp	w9, #0x5
  449050:	b.eq	449138 <_obstack_memory_used@@Base+0xaed8>  // b.none
  449054:	cmp	w9, #0x3
  449058:	b.ne	449160 <_obstack_memory_used@@Base+0xaf00>  // b.any
  44905c:	ldr	x1, [x8]
  449060:	sub	x0, x29, #0x20
  449064:	str	x8, [sp, #16]
  449068:	bl	449500 <_obstack_memory_used@@Base+0xb2a0>
  44906c:	and	w8, w21, #0x3ff00
  449070:	cbnz	w8, 4490a8 <_obstack_memory_used@@Base+0xae48>
  449074:	b	4492bc <_obstack_memory_used@@Base+0xb05c>
  449078:	str	x8, [sp, #16]
  44907c:	mov	x8, #0xffffffffffffffff    	// #-1
  449080:	stp	x8, x8, [x29, #-32]
  449084:	ldrb	w8, [x22, #216]
  449088:	tbnz	w8, #6, 449098 <_obstack_memory_used@@Base+0xae38>
  44908c:	sub	x0, x29, #0x20
  449090:	mov	w1, #0xa                   	// #10
  449094:	bl	449530 <_obstack_memory_used@@Base+0xb2d0>
  449098:	ldrb	w8, [x22, #216]
  44909c:	tbnz	w8, #7, 44916c <_obstack_memory_used@@Base+0xaf0c>
  4490a0:	and	w8, w21, #0x3ff00
  4490a4:	cbz	w8, 4492bc <_obstack_memory_used@@Base+0xb05c>
  4490a8:	tbnz	w21, #13, 4490dc <_obstack_memory_used@@Base+0xae7c>
  4490ac:	tbnz	w21, #15, 449114 <_obstack_memory_used@@Base+0xaeb4>
  4490b0:	tbz	w21, #10, 449214 <_obstack_memory_used@@Base+0xafb4>
  4490b4:	ldr	w8, [sp, #28]
  4490b8:	cmp	w8, #0x1
  4490bc:	b.ne	449184 <_obstack_memory_used@@Base+0xaf24>  // b.any
  4490c0:	ldrb	w8, [x27, #2]
  4490c4:	tbnz	w8, #6, 449184 <_obstack_memory_used@@Base+0xaf24>
  4490c8:	sub	x0, x29, #0x20
  4490cc:	bl	4494f4 <_obstack_memory_used@@Base+0xb294>
  4490d0:	mov	w8, #0x4                   	// #4
  4490d4:	cbnz	w8, 449480 <_obstack_memory_used@@Base+0xb220>
  4490d8:	b	449214 <_obstack_memory_used@@Base+0xafb4>
  4490dc:	sub	x0, x29, #0x20
  4490e0:	mov	w1, #0xa                   	// #10
  4490e4:	bl	446728 <_obstack_memory_used@@Base+0x84c8>
  4490e8:	mov	w24, w0
  4490ec:	sub	x0, x29, #0x20
  4490f0:	bl	4494f4 <_obstack_memory_used@@Base+0xb294>
  4490f4:	tbz	w24, #0, 449128 <_obstack_memory_used@@Base+0xaec8>
  4490f8:	sub	x0, x29, #0x20
  4490fc:	mov	w1, #0xa                   	// #10
  449100:	bl	442b40 <_obstack_memory_used@@Base+0x48e0>
  449104:	mov	w8, wzr
  449108:	ldp	x24, x22, [sp]
  44910c:	cbnz	w8, 449480 <_obstack_memory_used@@Base+0xb220>
  449110:	b	4490ac <_obstack_memory_used@@Base+0xae4c>
  449114:	sub	x0, x29, #0x20
  449118:	bl	4494f4 <_obstack_memory_used@@Base+0xb294>
  44911c:	mov	w8, #0x4                   	// #4
  449120:	cbnz	w8, 449484 <_obstack_memory_used@@Base+0xb224>
  449124:	b	448ff0 <_obstack_memory_used@@Base+0xad90>
  449128:	mov	w8, #0x4                   	// #4
  44912c:	ldp	x24, x22, [sp]
  449130:	cbnz	w8, 449480 <_obstack_memory_used@@Base+0xb220>
  449134:	b	4490ac <_obstack_memory_used@@Base+0xae4c>
  449138:	str	x8, [sp, #16]
  44913c:	ldr	w8, [x22, #180]
  449140:	cmp	w8, #0x2
  449144:	b.lt	4491c8 <_obstack_memory_used@@Base+0xaf68>  // b.tstop
  449148:	ldr	x1, [x22, #120]
  44914c:	sub	x0, x29, #0x20
  449150:	bl	449500 <_obstack_memory_used@@Base+0xb2a0>
  449154:	ldrb	w8, [x22, #216]
  449158:	tbz	w8, #6, 44908c <_obstack_memory_used@@Base+0xae2c>
  44915c:	b	449098 <_obstack_memory_used@@Base+0xae38>
  449160:	mov	w8, #0x4                   	// #4
  449164:	cbnz	w8, 449484 <_obstack_memory_used@@Base+0xb224>
  449168:	b	448ff0 <_obstack_memory_used@@Base+0xad90>
  44916c:	sub	x0, x29, #0x20
  449170:	mov	x1, xzr
  449174:	bl	449530 <_obstack_memory_used@@Base+0xb2d0>
  449178:	and	w8, w21, #0x3ff00
  44917c:	cbnz	w8, 4490a8 <_obstack_memory_used@@Base+0xae48>
  449180:	b	4492bc <_obstack_memory_used@@Base+0xb05c>
  449184:	ldr	w8, [x22, #180]
  449188:	cmp	w8, #0x1
  44918c:	b.le	4491dc <_obstack_memory_used@@Base+0xaf7c>
  449190:	ldr	x10, [x22, #120]
  449194:	mov	x9, xzr
  449198:	mov	x8, xzr
  44919c:	ldr	x11, [x24, x9]
  4491a0:	ldr	x12, [x10, x9]
  4491a4:	ldr	x13, [x25, x9]
  4491a8:	orn	x11, x11, x12
  4491ac:	and	x11, x13, x11
  4491b0:	str	x11, [x25, x9]
  4491b4:	add	x9, x9, #0x8
  4491b8:	cmp	x9, #0x20
  4491bc:	orr	x8, x11, x8
  4491c0:	b.ne	44919c <_obstack_memory_used@@Base+0xaf3c>  // b.any
  4491c4:	b	449204 <_obstack_memory_used@@Base+0xafa4>
  4491c8:	sub	x0, x29, #0x20
  4491cc:	bl	449524 <_obstack_memory_used@@Base+0xb2c4>
  4491d0:	ldrb	w8, [x22, #216]
  4491d4:	tbnz	w8, #6, 449098 <_obstack_memory_used@@Base+0xae38>
  4491d8:	b	44908c <_obstack_memory_used@@Base+0xae2c>
  4491dc:	mov	x9, xzr
  4491e0:	mov	x8, xzr
  4491e4:	ldr	x10, [x24, x9]
  4491e8:	ldr	x11, [x25, x9]
  4491ec:	and	x10, x11, x10
  4491f0:	str	x10, [x25, x9]
  4491f4:	add	x9, x9, #0x8
  4491f8:	cmp	x9, #0x20
  4491fc:	orr	x8, x10, x8
  449200:	b.ne	4491e4 <_obstack_memory_used@@Base+0xaf84>  // b.any
  449204:	cmp	x8, #0x0
  449208:	cset	w8, eq  // eq = none
  44920c:	lsl	w8, w8, #2
  449210:	cbnz	w8, 449480 <_obstack_memory_used@@Base+0xb220>
  449214:	tbz	w21, #11, 4492bc <_obstack_memory_used@@Base+0xb05c>
  449218:	ldr	w8, [sp, #28]
  44921c:	cmp	w8, #0x1
  449220:	b.ne	44922c <_obstack_memory_used@@Base+0xafcc>  // b.any
  449224:	ldrb	w8, [x27, #2]
  449228:	tbnz	w8, #6, 4492ac <_obstack_memory_used@@Base+0xb04c>
  44922c:	ldr	w8, [x22, #180]
  449230:	cmp	w8, #0x1
  449234:	b.le	449270 <_obstack_memory_used@@Base+0xb010>
  449238:	ldr	x10, [x22, #120]
  44923c:	mov	x9, xzr
  449240:	mov	x8, xzr
  449244:	ldr	x11, [x24, x9]
  449248:	ldr	x12, [x10, x9]
  44924c:	ldr	x13, [x25, x9]
  449250:	and	x11, x12, x11
  449254:	bic	x11, x13, x11
  449258:	str	x11, [x25, x9]
  44925c:	add	x9, x9, #0x8
  449260:	cmp	x9, #0x20
  449264:	orr	x8, x11, x8
  449268:	b.ne	449244 <_obstack_memory_used@@Base+0xafe4>  // b.any
  44926c:	b	449298 <_obstack_memory_used@@Base+0xb038>
  449270:	mov	x9, xzr
  449274:	mov	x8, xzr
  449278:	ldr	x10, [x24, x9]
  44927c:	ldr	x11, [x25, x9]
  449280:	bic	x10, x11, x10
  449284:	str	x10, [x25, x9]
  449288:	add	x9, x9, #0x8
  44928c:	cmp	x9, #0x20
  449290:	orr	x8, x10, x8
  449294:	b.ne	449278 <_obstack_memory_used@@Base+0xb018>  // b.any
  449298:	cmp	x8, #0x0
  44929c:	cset	w8, eq  // eq = none
  4492a0:	lsl	w8, w8, #2
  4492a4:	cbnz	w8, 449480 <_obstack_memory_used@@Base+0xb220>
  4492a8:	b	4492bc <_obstack_memory_used@@Base+0xb05c>
  4492ac:	sub	x0, x29, #0x20
  4492b0:	bl	4494f4 <_obstack_memory_used@@Base+0xb294>
  4492b4:	mov	w8, #0x4                   	// #4
  4492b8:	cbnz	w8, 449480 <_obstack_memory_used@@Base+0xb220>
  4492bc:	cmp	x19, #0x1
  4492c0:	b.lt	449408 <_obstack_memory_used@@Base+0xb1a8>  // b.tstop
  4492c4:	ldr	x24, [sp, #40]
  4492c8:	ldr	w22, [sp, #28]
  4492cc:	mov	x21, xzr
  4492d0:	b	4492e4 <_obstack_memory_used@@Base+0xb084>
  4492d4:	add	x21, x21, #0x1
  4492d8:	cmp	x21, x19
  4492dc:	add	x24, x24, #0x20
  4492e0:	b.ge	449418 <_obstack_memory_used@@Base+0xb1b8>  // b.tcont
  4492e4:	cmp	w22, #0x1
  4492e8:	b.ne	449304 <_obstack_memory_used@@Base+0xb0a4>  // b.any
  4492ec:	ldr	x8, [sp, #16]
  4492f0:	ldrb	w1, [x8]
  4492f4:	ldr	x8, [sp, #40]
  4492f8:	add	x0, x8, x21, lsl #5
  4492fc:	bl	446728 <_obstack_memory_used@@Base+0x84c8>
  449300:	tbz	w0, #0, 4493dc <_obstack_memory_used@@Base+0xb17c>
  449304:	mov	x9, xzr
  449308:	mov	x8, xzr
  44930c:	ldr	x10, [x25, x9]
  449310:	ldr	x11, [x24, x9]
  449314:	and	x10, x11, x10
  449318:	str	x10, [x28, x9]
  44931c:	add	x9, x9, #0x8
  449320:	cmp	x9, #0x20
  449324:	orr	x8, x10, x8
  449328:	b.ne	44930c <_obstack_memory_used@@Base+0xb0ac>  // b.any
  44932c:	cbz	x8, 4493dc <_obstack_memory_used@@Base+0xb17c>
  449330:	mov	x22, x20
  449334:	mov	x8, xzr
  449338:	mov	x27, xzr
  44933c:	mov	x9, xzr
  449340:	ldr	x10, [x25, x8]
  449344:	ldr	x11, [x24, x8]
  449348:	bic	x12, x11, x10
  44934c:	bic	x10, x10, x11
  449350:	str	x12, [x23, x8]
  449354:	str	x10, [x25, x8]
  449358:	add	x8, x8, #0x8
  44935c:	orr	x9, x12, x9
  449360:	cmp	x8, #0x20
  449364:	orr	x27, x10, x27
  449368:	b.ne	449340 <_obstack_memory_used@@Base+0xb0e0>  // b.any
  44936c:	cbz	x9, 4493a8 <_obstack_memory_used@@Base+0xb148>
  449370:	ldr	x20, [sp, #40]
  449374:	add	x1, sp, #0x30
  449378:	add	x0, x20, x19, lsl #5
  44937c:	bl	44955c <_obstack_memory_used@@Base+0xb2fc>
  449380:	add	x0, x20, x21, lsl #5
  449384:	sub	x1, x29, #0x40
  449388:	bl	44955c <_obstack_memory_used@@Base+0xb2fc>
  44938c:	ldr	x8, [sp, #32]
  449390:	mov	w9, #0x18                  	// #24
  449394:	madd	x0, x19, x9, x8
  449398:	madd	x1, x21, x9, x8
  44939c:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  4493a0:	cbnz	w0, 4493f8 <_obstack_memory_used@@Base+0xb198>
  4493a4:	add	x19, x19, #0x1
  4493a8:	mov	x20, x22
  4493ac:	ldr	x8, [x20, #24]
  4493b0:	ldr	w22, [sp, #28]
  4493b4:	mov	w9, #0x18                  	// #24
  4493b8:	ldr	x1, [x8, x26, lsl #3]
  4493bc:	ldr	x8, [sp, #32]
  4493c0:	madd	x0, x21, x9, x8
  4493c4:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  4493c8:	tbz	w0, #0, 4493f0 <_obstack_memory_used@@Base+0xb190>
  4493cc:	cmp	x27, #0x0
  4493d0:	mov	w8, #0x11                  	// #17
  4493d4:	csel	w8, w8, wzr, eq  // eq = none
  4493d8:	b	4493e0 <_obstack_memory_used@@Base+0xb180>
  4493dc:	mov	w8, #0x13                  	// #19
  4493e0:	cbz	w8, 4492d4 <_obstack_memory_used@@Base+0xb074>
  4493e4:	cmp	w8, #0x13
  4493e8:	b.eq	4492d4 <_obstack_memory_used@@Base+0xb074>  // b.none
  4493ec:	b	449410 <_obstack_memory_used@@Base+0xb1b0>
  4493f0:	mov	w8, #0x1a                  	// #26
  4493f4:	b	4493e0 <_obstack_memory_used@@Base+0xb180>
  4493f8:	mov	x20, x22
  4493fc:	ldr	w22, [sp, #28]
  449400:	mov	w8, #0x1a                  	// #26
  449404:	b	4493e0 <_obstack_memory_used@@Base+0xb180>
  449408:	mov	x21, xzr
  44940c:	b	449418 <_obstack_memory_used@@Base+0xb1b8>
  449410:	cmp	w8, #0x11
  449414:	b.ne	44947c <_obstack_memory_used@@Base+0xb21c>  // b.any
  449418:	ldr	x24, [sp]
  44941c:	cmp	x21, x19
  449420:	b.ne	44946c <_obstack_memory_used@@Base+0xb20c>  // b.any
  449424:	ldr	x8, [sp, #40]
  449428:	sub	x1, x29, #0x20
  44942c:	add	x0, x8, x19, lsl #5
  449430:	bl	44955c <_obstack_memory_used@@Base+0xb2fc>
  449434:	ldr	x8, [x20, #24]
  449438:	mov	w9, #0x18                  	// #24
  44943c:	ldr	x1, [x8, x26, lsl #3]
  449440:	ldr	x8, [sp, #32]
  449444:	madd	x0, x19, x9, x8
  449448:	bl	4444b4 <_obstack_memory_used@@Base+0x6254>
  44944c:	ldr	x22, [sp, #8]
  449450:	cbnz	w0, 449490 <_obstack_memory_used@@Base+0xb230>
  449454:	sub	x0, x29, #0x20
  449458:	add	x19, x19, #0x1
  44945c:	bl	4494f4 <_obstack_memory_used@@Base+0xb294>
  449460:	mov	w8, wzr
  449464:	cbnz	w8, 449484 <_obstack_memory_used@@Base+0xb224>
  449468:	b	448ff0 <_obstack_memory_used@@Base+0xad90>
  44946c:	ldr	x22, [sp, #8]
  449470:	mov	w8, wzr
  449474:	cbnz	w8, 449484 <_obstack_memory_used@@Base+0xb224>
  449478:	b	448ff0 <_obstack_memory_used@@Base+0xad90>
  44947c:	ldp	x24, x22, [sp]
  449480:	cbz	w8, 448ff0 <_obstack_memory_used@@Base+0xad90>
  449484:	cmp	w8, #0x4
  449488:	b.eq	448ff0 <_obstack_memory_used@@Base+0xad90>  // b.none
  44948c:	b	4494a4 <_obstack_memory_used@@Base+0xb244>
  449490:	mov	w8, #0x1a                  	// #26
  449494:	cbnz	w8, 449484 <_obstack_memory_used@@Base+0xb224>
  449498:	b	448ff0 <_obstack_memory_used@@Base+0xad90>
  44949c:	mov	x19, xzr
  4494a0:	b	4494d0 <_obstack_memory_used@@Base+0xb270>
  4494a4:	cmp	w8, #0x1a
  4494a8:	b.ne	4494d0 <_obstack_memory_used@@Base+0xb270>  // b.any
  4494ac:	cmp	x19, #0x1
  4494b0:	b.lt	4494cc <_obstack_memory_used@@Base+0xb26c>  // b.tstop
  4494b4:	ldr	x8, [sp, #32]
  4494b8:	add	x20, x8, #0x10
  4494bc:	ldr	x0, [x20], #24
  4494c0:	bl	4049d0 <free@plt>
  4494c4:	subs	x19, x19, #0x1
  4494c8:	b.ne	4494bc <_obstack_memory_used@@Base+0xb25c>  // b.any
  4494cc:	mov	x19, #0xffffffffffffffff    	// #-1
  4494d0:	mov	x0, x19
  4494d4:	ldp	x20, x19, [sp, #224]
  4494d8:	ldp	x22, x21, [sp, #208]
  4494dc:	ldp	x24, x23, [sp, #192]
  4494e0:	ldp	x26, x25, [sp, #176]
  4494e4:	ldp	x28, x27, [sp, #160]
  4494e8:	ldp	x29, x30, [sp, #144]
  4494ec:	add	sp, sp, #0xf0
  4494f0:	ret
  4494f4:	movi	v0.2d, #0x0
  4494f8:	stp	q0, q0, [x0]
  4494fc:	ret
  449500:	mov	x8, xzr
  449504:	ldr	x9, [x1, x8]
  449508:	ldr	x10, [x0, x8]
  44950c:	orr	x9, x10, x9
  449510:	str	x9, [x0, x8]
  449514:	add	x8, x8, #0x8
  449518:	cmp	x8, #0x20
  44951c:	b.ne	449504 <_obstack_memory_used@@Base+0xb2a4>  // b.any
  449520:	ret
  449524:	movi	v0.2d, #0xffffffffffffffff
  449528:	stp	q0, q0, [x0]
  44952c:	ret
  449530:	add	x8, x1, #0x3f
  449534:	cmp	x1, #0x0
  449538:	csel	x8, x8, x1, lt  // lt = tstop
  44953c:	asr	x8, x8, #6
  449540:	lsl	x8, x8, #3
  449544:	ldr	x9, [x0, x8]
  449548:	mov	w10, #0x1                   	// #1
  44954c:	lsl	x10, x10, x1
  449550:	bic	x9, x9, x10
  449554:	str	x9, [x0, x8]
  449558:	ret
  44955c:	ldp	q1, q0, [x1]
  449560:	stp	q1, q0, [x0]
  449564:	ret
  449568:	ldr	x8, [x0]
  44956c:	add	x8, x8, x1, lsl #4
  449570:	ldr	w8, [x8, #8]
  449574:	and	w9, w8, #0xff
  449578:	cmp	w9, #0x2
  44957c:	b.ne	4495a0 <_obstack_memory_used@@Base+0xb340>  // b.any
  449580:	tst	w8, #0x3ff00
  449584:	b.eq	4495a8 <_obstack_memory_used@@Base+0xb348>  // b.none
  449588:	tbnz	w2, #0, 449590 <_obstack_memory_used@@Base+0xb330>
  44958c:	tbnz	w8, #10, 4495a0 <_obstack_memory_used@@Base+0xb340>
  449590:	tbz	w2, #0, 449598 <_obstack_memory_used@@Base+0xb338>
  449594:	tbnz	w8, #11, 4495a0 <_obstack_memory_used@@Base+0xb340>
  449598:	tbnz	w2, #1, 4495b0 <_obstack_memory_used@@Base+0xb350>
  44959c:	tbz	w8, #13, 4495b0 <_obstack_memory_used@@Base+0xb350>
  4495a0:	mov	w0, wzr
  4495a4:	ret
  4495a8:	mov	w0, #0x1                   	// #1
  4495ac:	ret
  4495b0:	tst	w8, #0x8000
  4495b4:	cset	w8, eq  // eq = none
  4495b8:	and	w9, w2, #0x8
  4495bc:	orr	w0, w8, w9, lsr #3
  4495c0:	ret
  4495c4:	stp	x1, x2, [x0]
  4495c8:	stp	x3, x4, [x0, #16]
  4495cc:	stp	xzr, xzr, [x0, #40]
  4495d0:	str	xzr, [x0, #32]
  4495d4:	ret
  4495d8:	sub	sp, sp, #0x60
  4495dc:	stp	x29, x30, [sp, #32]
  4495e0:	str	x23, [sp, #48]
  4495e4:	stp	x22, x21, [sp, #64]
  4495e8:	stp	x20, x19, [sp, #80]
  4495ec:	mov	x19, x1
  4495f0:	ldp	x1, x21, [x1, #16]
  4495f4:	mov	x20, x0
  4495f8:	add	x0, sp, #0x8
  4495fc:	add	x29, sp, #0x20
  449600:	bl	4444b4 <_obstack_memory_used@@Base+0x6254>
  449604:	cbnz	w0, 4496cc <_obstack_memory_used@@Base+0xb46c>
  449608:	add	x3, sp, #0x8
  44960c:	mov	x0, x20
  449610:	mov	x1, x19
  449614:	mov	x2, x21
  449618:	bl	4497a8 <_obstack_memory_used@@Base+0xb548>
  44961c:	cbnz	w0, 449690 <_obstack_memory_used@@Base+0xb430>
  449620:	mov	w23, wzr
  449624:	b	449640 <_obstack_memory_used@@Base+0xb3e0>
  449628:	add	x3, sp, #0x8
  44962c:	mov	x0, x20
  449630:	mov	x1, x19
  449634:	mov	x2, x21
  449638:	bl	4497a8 <_obstack_memory_used@@Base+0xb548>
  44963c:	cbnz	w0, 449690 <_obstack_memory_used@@Base+0xb430>
  449640:	subs	x8, x21, #0x1
  449644:	b.lt	4496a4 <_obstack_memory_used@@Base+0xb444>  // b.tstop
  449648:	ldr	x0, [x19]
  44964c:	ldr	w10, [x20, #224]
  449650:	ldr	x9, [x0, x21, lsl #3]
  449654:	cmp	x9, #0x0
  449658:	csinc	w23, wzr, w23, ne  // ne = any
  44965c:	cmp	w23, w10
  449660:	b.gt	449698 <_obstack_memory_used@@Base+0xb438>
  449664:	str	xzr, [sp, #16]
  449668:	ldr	x9, [x20, #184]
  44966c:	mov	x21, x8
  449670:	ldr	x9, [x9, x8, lsl #3]
  449674:	cbz	x9, 449628 <_obstack_memory_used@@Base+0xb3c8>
  449678:	add	x3, sp, #0x8
  44967c:	mov	x0, x20
  449680:	mov	x1, x19
  449684:	mov	x2, x21
  449688:	bl	4498b8 <_obstack_memory_used@@Base+0xb658>
  44968c:	cbz	w0, 449628 <_obstack_memory_used@@Base+0xb3c8>
  449690:	mov	w22, w0
  449694:	b	4496a8 <_obstack_memory_used@@Base+0xb448>
  449698:	lsl	x2, x21, #3
  44969c:	mov	w1, wzr
  4496a0:	bl	404600 <memset@plt>
  4496a4:	mov	w22, wzr
  4496a8:	ldr	x0, [sp, #24]
  4496ac:	bl	4049d0 <free@plt>
  4496b0:	mov	w0, w22
  4496b4:	ldp	x20, x19, [sp, #80]
  4496b8:	ldp	x22, x21, [sp, #64]
  4496bc:	ldr	x23, [sp, #48]
  4496c0:	ldp	x29, x30, [sp, #32]
  4496c4:	add	sp, sp, #0x60
  4496c8:	ret
  4496cc:	mov	w22, w0
  4496d0:	b	4496b0 <_obstack_memory_used@@Base+0xb450>
  4496d4:	sub	sp, sp, #0x60
  4496d8:	cmp	x3, #0x1
  4496dc:	stp	x29, x30, [sp, #32]
  4496e0:	str	x23, [sp, #48]
  4496e4:	stp	x22, x21, [sp, #64]
  4496e8:	stp	x20, x19, [sp, #80]
  4496ec:	add	x29, sp, #0x20
  4496f0:	b.lt	449788 <_obstack_memory_used@@Base+0xb528>  // b.tstop
  4496f4:	mov	x19, x3
  4496f8:	mov	x20, x2
  4496fc:	mov	x21, x1
  449700:	mov	x22, x0
  449704:	b	44971c <_obstack_memory_used@@Base+0xb4bc>
  449708:	str	x8, [x21]
  44970c:	subs	x19, x19, #0x1
  449710:	add	x20, x20, #0x8
  449714:	add	x21, x21, #0x8
  449718:	b.eq	449788 <_obstack_memory_used@@Base+0xb528>  // b.none
  44971c:	ldr	x9, [x21]
  449720:	ldr	x8, [x20]
  449724:	cbz	x9, 449708 <_obstack_memory_used@@Base+0xb4a8>
  449728:	cbz	x8, 44970c <_obstack_memory_used@@Base+0xb4ac>
  44972c:	add	x1, x9, #0x8
  449730:	add	x2, x8, #0x8
  449734:	add	x0, sp, #0x8
  449738:	bl	4472e0 <_obstack_memory_used@@Base+0x9080>
  44973c:	str	w0, [x29, #28]
  449740:	cbnz	w0, 449778 <_obstack_memory_used@@Base+0xb518>
  449744:	add	x0, x29, #0x1c
  449748:	add	x2, sp, #0x8
  44974c:	mov	x1, x22
  449750:	bl	448288 <_obstack_memory_used@@Base+0xa028>
  449754:	str	x0, [x21]
  449758:	ldr	x0, [sp, #24]
  44975c:	bl	4049d0 <free@plt>
  449760:	ldr	w9, [x29, #28]
  449764:	cmp	w9, #0x0
  449768:	cset	w8, eq  // eq = none
  44976c:	csel	w23, w23, w9, eq  // eq = none
  449770:	cbnz	w8, 44970c <_obstack_memory_used@@Base+0xb4ac>
  449774:	b	44978c <_obstack_memory_used@@Base+0xb52c>
  449778:	mov	w8, wzr
  44977c:	mov	w23, w0
  449780:	cbnz	w8, 44970c <_obstack_memory_used@@Base+0xb4ac>
  449784:	b	44978c <_obstack_memory_used@@Base+0xb52c>
  449788:	mov	w23, wzr
  44978c:	mov	w0, w23
  449790:	ldp	x20, x19, [sp, #80]
  449794:	ldp	x22, x21, [sp, #64]
  449798:	ldr	x23, [sp, #48]
  44979c:	ldp	x29, x30, [sp, #32]
  4497a0:	add	sp, sp, #0x60
  4497a4:	ret
  4497a8:	stp	x29, x30, [sp, #-80]!
  4497ac:	stp	x24, x23, [sp, #32]
  4497b0:	stp	x22, x21, [sp, #48]
  4497b4:	stp	x20, x19, [sp, #64]
  4497b8:	mov	x29, sp
  4497bc:	ldr	x24, [x0, #152]
  4497c0:	str	wzr, [x29, #28]
  4497c4:	ldr	x8, [x0, #184]
  4497c8:	str	x25, [sp, #16]
  4497cc:	mov	x19, x2
  4497d0:	mov	x20, x1
  4497d4:	ldr	x25, [x8, x2, lsl #3]
  4497d8:	ldr	x8, [x3, #8]
  4497dc:	mov	x21, x0
  4497e0:	add	x9, x25, #0x8
  4497e4:	cmp	x25, #0x0
  4497e8:	csel	x22, xzr, x9, eq  // eq = none
  4497ec:	cbz	x8, 449864 <_obstack_memory_used@@Base+0xb604>
  4497f0:	mov	x23, x3
  4497f4:	cbz	x25, 44983c <_obstack_memory_used@@Base+0xb5dc>
  4497f8:	mov	x0, x24
  4497fc:	mov	x1, x23
  449800:	mov	x2, x22
  449804:	bl	449a34 <_obstack_memory_used@@Base+0xb7d4>
  449808:	str	w0, [x29, #28]
  44980c:	cbnz	w0, 4498a0 <_obstack_memory_used@@Base+0xb640>
  449810:	ldr	x8, [x20, #40]
  449814:	cbz	x8, 44983c <_obstack_memory_used@@Base+0xb5dc>
  449818:	ldr	x4, [x21, #216]
  44981c:	add	x3, x20, #0x20
  449820:	mov	x0, x24
  449824:	mov	x1, x23
  449828:	mov	x2, x22
  44982c:	mov	x5, x19
  449830:	bl	449b14 <_obstack_memory_used@@Base+0xb8b4>
  449834:	str	w0, [x29, #28]
  449838:	cbnz	w0, 4498a0 <_obstack_memory_used@@Base+0xb640>
  44983c:	add	x0, x29, #0x1c
  449840:	mov	x1, x24
  449844:	mov	x2, x23
  449848:	bl	448288 <_obstack_memory_used@@Base+0xa028>
  44984c:	ldr	x8, [x20]
  449850:	str	x0, [x8, x19, lsl #3]
  449854:	ldr	w0, [x29, #28]
  449858:	cbnz	w0, 4498a0 <_obstack_memory_used@@Base+0xb640>
  44985c:	cbnz	x25, 449870 <_obstack_memory_used@@Base+0xb610>
  449860:	b	44989c <_obstack_memory_used@@Base+0xb63c>
  449864:	ldr	x8, [x20]
  449868:	str	xzr, [x8, x19, lsl #3]
  44986c:	cbz	x25, 44989c <_obstack_memory_used@@Base+0xb63c>
  449870:	ldr	x8, [x21, #184]
  449874:	ldr	x8, [x8, x19, lsl #3]
  449878:	ldrb	w8, [x8, #104]
  44987c:	tbz	w8, #6, 44989c <_obstack_memory_used@@Base+0xb63c>
  449880:	mov	x0, x21
  449884:	mov	x1, x20
  449888:	mov	x2, x19
  44988c:	mov	x3, x22
  449890:	bl	449df8 <_obstack_memory_used@@Base+0xbb98>
  449894:	str	w0, [x29, #28]
  449898:	cbnz	w0, 4498a0 <_obstack_memory_used@@Base+0xb640>
  44989c:	mov	w0, wzr
  4498a0:	ldp	x20, x19, [sp, #64]
  4498a4:	ldp	x22, x21, [sp, #48]
  4498a8:	ldp	x24, x23, [sp, #32]
  4498ac:	ldr	x25, [sp, #16]
  4498b0:	ldp	x29, x30, [sp], #80
  4498b4:	ret
  4498b8:	stp	x29, x30, [sp, #-96]!
  4498bc:	stp	x28, x27, [sp, #16]
  4498c0:	stp	x26, x25, [sp, #32]
  4498c4:	stp	x24, x23, [sp, #48]
  4498c8:	stp	x22, x21, [sp, #64]
  4498cc:	stp	x20, x19, [sp, #80]
  4498d0:	ldr	x8, [x0, #184]
  4498d4:	mov	x29, sp
  4498d8:	ldr	x25, [x8, x2, lsl #3]
  4498dc:	ldr	x8, [x25, #40]
  4498e0:	cmp	x8, #0x1
  4498e4:	b.lt	449a0c <_obstack_memory_used@@Base+0xb7ac>  // b.tstop
  4498e8:	ldr	x27, [x0, #152]
  4498ec:	mov	x19, x3
  4498f0:	mov	x20, x0
  4498f4:	mov	x21, x2
  4498f8:	mov	x22, x1
  4498fc:	mov	x26, xzr
  449900:	add	x28, x2, #0x1
  449904:	add	x23, x1, #0x20
  449908:	ldr	x8, [x25, #48]
  44990c:	ldr	x24, [x8, x26, lsl #3]
  449910:	ldr	x8, [x27]
  449914:	add	x8, x8, x24, lsl #4
  449918:	ldrb	w8, [x8, #10]
  44991c:	tbnz	w8, #4, 44992c <_obstack_memory_used@@Base+0xb6cc>
  449920:	mov	w0, wzr
  449924:	cbnz	w0, 449990 <_obstack_memory_used@@Base+0xb730>
  449928:	b	449948 <_obstack_memory_used@@Base+0xb6e8>
  44992c:	ldr	x4, [x22, #24]
  449930:	mov	x0, x20
  449934:	mov	x1, x22
  449938:	mov	x2, x24
  44993c:	mov	x3, x21
  449940:	bl	44a88c <_obstack_memory_used@@Base+0xc62c>
  449944:	cbnz	w0, 449990 <_obstack_memory_used@@Base+0xb730>
  449948:	ldr	x8, [x27]
  44994c:	mov	x0, x20
  449950:	mov	x2, x21
  449954:	add	x1, x8, x24, lsl #4
  449958:	bl	44879c <_obstack_memory_used@@Base+0xa53c>
  44995c:	tbz	w0, #0, 44998c <_obstack_memory_used@@Base+0xb72c>
  449960:	ldr	x8, [x22]
  449964:	ldr	x8, [x8, x28, lsl #3]
  449968:	cbz	x8, 4499e4 <_obstack_memory_used@@Base+0xb784>
  44996c:	ldr	x9, [x27, #24]
  449970:	add	x0, x8, #0x8
  449974:	ldr	x1, [x9, x24, lsl #3]
  449978:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44997c:	cmp	x0, #0x0
  449980:	cset	w0, ne  // ne = any
  449984:	cbnz	w0, 449994 <_obstack_memory_used@@Base+0xb734>
  449988:	b	4499ec <_obstack_memory_used@@Base+0xb78c>
  44998c:	mov	w0, wzr
  449990:	cbz	w0, 4499ec <_obstack_memory_used@@Base+0xb78c>
  449994:	ldr	x8, [x22, #40]
  449998:	cbz	x8, 4499cc <_obstack_memory_used@@Base+0xb76c>
  44999c:	ldr	x8, [x27, #24]
  4499a0:	add	x3, x21, w0, sxtw
  4499a4:	mov	x0, x20
  4499a8:	mov	x1, x23
  4499ac:	ldr	x2, [x8, x24, lsl #3]
  4499b0:	mov	x4, x24
  4499b4:	mov	x5, x21
  4499b8:	bl	44a494 <_obstack_memory_used@@Base+0xc234>
  4499bc:	tst	w0, #0x1
  4499c0:	mov	w8, #0x4                   	// #4
  4499c4:	csel	w8, w8, wzr, ne  // ne = any
  4499c8:	tbnz	w0, #0, 4499f0 <_obstack_memory_used@@Base+0xb790>
  4499cc:	mov	x0, x19
  4499d0:	mov	x1, x24
  4499d4:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  4499d8:	mvn	w8, w0
  4499dc:	and	w8, w8, #0x1
  4499e0:	b	4499f0 <_obstack_memory_used@@Base+0xb790>
  4499e4:	mov	w0, wzr
  4499e8:	cbnz	w0, 449994 <_obstack_memory_used@@Base+0xb734>
  4499ec:	mov	w8, #0x4                   	// #4
  4499f0:	orr	w8, w8, #0x4
  4499f4:	cmp	w8, #0x4
  4499f8:	b.ne	449a14 <_obstack_memory_used@@Base+0xb7b4>  // b.any
  4499fc:	ldr	x8, [x25, #40]
  449a00:	add	x26, x26, #0x1
  449a04:	cmp	x26, x8
  449a08:	b.lt	449908 <_obstack_memory_used@@Base+0xb6a8>  // b.tstop
  449a0c:	mov	w0, wzr
  449a10:	b	449a18 <_obstack_memory_used@@Base+0xb7b8>
  449a14:	mov	w0, #0xc                   	// #12
  449a18:	ldp	x20, x19, [sp, #80]
  449a1c:	ldp	x22, x21, [sp, #64]
  449a20:	ldp	x24, x23, [sp, #48]
  449a24:	ldp	x26, x25, [sp, #32]
  449a28:	ldp	x28, x27, [sp, #16]
  449a2c:	ldp	x29, x30, [sp], #96
  449a30:	ret
  449a34:	sub	sp, sp, #0x50
  449a38:	stp	x29, x30, [sp, #16]
  449a3c:	stp	x22, x21, [sp, #48]
  449a40:	stp	x20, x19, [sp, #64]
  449a44:	add	x29, sp, #0x10
  449a48:	mov	x20, x1
  449a4c:	mov	x21, x0
  449a50:	mov	x19, x2
  449a54:	sub	x0, x29, #0x4
  449a58:	mov	x1, x21
  449a5c:	mov	x2, x20
  449a60:	stp	x24, x23, [sp, #32]
  449a64:	stur	wzr, [x29, #-4]
  449a68:	bl	448288 <_obstack_memory_used@@Base+0xa028>
  449a6c:	ldur	w8, [x29, #-4]
  449a70:	cbnz	w8, 449aec <_obstack_memory_used@@Base+0xb88c>
  449a74:	mov	x22, x0
  449a78:	ldr	x8, [x22, #56]!
  449a7c:	cbnz	x8, 449ad8 <_obstack_memory_used@@Base+0xb878>
  449a80:	ldr	x1, [x20, #8]
  449a84:	mov	x0, x22
  449a88:	bl	44475c <_obstack_memory_used@@Base+0x64fc>
  449a8c:	stur	w0, [x29, #-4]
  449a90:	cbnz	w0, 449b0c <_obstack_memory_used@@Base+0xb8ac>
  449a94:	ldr	x8, [x20, #8]
  449a98:	cmp	x8, #0x1
  449a9c:	b.lt	449ad8 <_obstack_memory_used@@Base+0xb878>  // b.tstop
  449aa0:	mov	x23, xzr
  449aa4:	mov	w24, #0x18                  	// #24
  449aa8:	ldr	x8, [x20, #16]
  449aac:	ldr	x9, [x21, #56]
  449ab0:	mov	x0, x22
  449ab4:	ldr	x8, [x8, x23, lsl #3]
  449ab8:	madd	x1, x8, x24, x9
  449abc:	bl	4449c4 <_obstack_memory_used@@Base+0x6764>
  449ac0:	cbnz	w0, 449b08 <_obstack_memory_used@@Base+0xb8a8>
  449ac4:	ldr	x8, [x20, #8]
  449ac8:	add	x23, x23, #0x1
  449acc:	cmp	x23, x8
  449ad0:	b.lt	449aa8 <_obstack_memory_used@@Base+0xb848>  // b.tstop
  449ad4:	stur	w0, [x29, #-4]
  449ad8:	mov	x0, x20
  449adc:	mov	x1, x19
  449ae0:	mov	x2, x22
  449ae4:	bl	44a0d0 <_obstack_memory_used@@Base+0xbe70>
  449ae8:	mov	w8, w0
  449aec:	ldp	x20, x19, [sp, #64]
  449af0:	ldp	x22, x21, [sp, #48]
  449af4:	ldp	x24, x23, [sp, #32]
  449af8:	ldp	x29, x30, [sp, #16]
  449afc:	mov	w0, w8
  449b00:	add	sp, sp, #0x50
  449b04:	ret
  449b08:	stur	w0, [x29, #-4]
  449b0c:	mov	w8, #0xc                   	// #12
  449b10:	b	449aec <_obstack_memory_used@@Base+0xb88c>
  449b14:	sub	sp, sp, #0x70
  449b18:	stp	x29, x30, [sp, #16]
  449b1c:	stp	x28, x27, [sp, #32]
  449b20:	stp	x26, x25, [sp, #48]
  449b24:	stp	x24, x23, [sp, #64]
  449b28:	stp	x22, x21, [sp, #80]
  449b2c:	stp	x20, x19, [sp, #96]
  449b30:	ldr	x8, [x3, #8]
  449b34:	add	x29, sp, #0x10
  449b38:	str	x2, [sp, #8]
  449b3c:	cmp	x8, #0x1
  449b40:	b.lt	449dcc <_obstack_memory_used@@Base+0xbb6c>  // b.tstop
  449b44:	mov	x19, x5
  449b48:	mov	x20, x4
  449b4c:	mov	x21, x3
  449b50:	mov	x23, x1
  449b54:	mov	x24, x0
  449b58:	mov	x28, xzr
  449b5c:	mov	w25, #0x28                  	// #40
  449b60:	ldr	x8, [x21, #16]
  449b64:	ldr	x8, [x8, x28, lsl #3]
  449b68:	madd	x9, x8, x25, x20
  449b6c:	ldr	x9, [x9, #16]
  449b70:	cmp	x9, x19
  449b74:	b.ge	449b88 <_obstack_memory_used@@Base+0xb928>  // b.tcont
  449b78:	madd	x9, x8, x25, x20
  449b7c:	ldr	x9, [x9, #8]
  449b80:	cmp	x9, x19
  449b84:	b.ge	449bac <_obstack_memory_used@@Base+0xb94c>  // b.tcont
  449b88:	mov	w8, #0x4                   	// #4
  449b8c:	orr	w8, w8, #0x4
  449b90:	cmp	w8, #0x4
  449b94:	b.ne	449dd4 <_obstack_memory_used@@Base+0xbb74>  // b.any
  449b98:	ldr	x8, [x21, #8]
  449b9c:	add	x28, x28, #0x1
  449ba0:	cmp	x28, x8
  449ba4:	b.lt	449b60 <_obstack_memory_used@@Base+0xb900>  // b.tstop
  449ba8:	b	449dcc <_obstack_memory_used@@Base+0xbb6c>
  449bac:	madd	x9, x8, x25, x20
  449bb0:	ldr	x10, [x9]
  449bb4:	ldr	x8, [x24]
  449bb8:	ldr	x9, [x9, #24]
  449bbc:	lsl	x10, x10, #4
  449bc0:	ldr	x27, [x8, x10]
  449bc4:	cmp	x9, x19
  449bc8:	b.ne	449c48 <_obstack_memory_used@@Base+0xb9e8>  // b.any
  449bcc:	ldr	x9, [x23, #8]
  449bd0:	cmp	x9, #0x1
  449bd4:	b.lt	449ce8 <_obstack_memory_used@@Base+0xba88>  // b.tstop
  449bd8:	ldp	x11, x10, [x23, #8]
  449bdc:	mov	x9, xzr
  449be0:	mov	x26, #0xffffffffffffffff    	// #-1
  449be4:	mov	x1, #0xffffffffffffffff    	// #-1
  449be8:	b	449c08 <_obstack_memory_used@@Base+0xb9a8>
  449bec:	lsl	x13, x12, #4
  449bf0:	ldr	x13, [x8, x13]
  449bf4:	cmp	x27, x13
  449bf8:	csel	x26, x12, x26, eq  // eq = none
  449bfc:	add	x9, x9, #0x1
  449c00:	cmp	x9, x11
  449c04:	b.ge	449cf0 <_obstack_memory_used@@Base+0xba90>  // b.tcont
  449c08:	ldr	x12, [x10, x9, lsl #3]
  449c0c:	add	x13, x8, x12, lsl #4
  449c10:	ldrb	w13, [x13, #8]
  449c14:	cmp	w13, #0x9
  449c18:	b.eq	449bec <_obstack_memory_used@@Base+0xb98c>  // b.none
  449c1c:	cmp	w13, #0x8
  449c20:	b.ne	449bfc <_obstack_memory_used@@Base+0xb99c>  // b.any
  449c24:	lsl	x14, x12, #4
  449c28:	ldr	x14, [x8, x14]
  449c2c:	cmp	x27, x14
  449c30:	b.ne	449c3c <_obstack_memory_used@@Base+0xb9dc>  // b.any
  449c34:	mov	x1, x12
  449c38:	b	449bfc <_obstack_memory_used@@Base+0xb99c>
  449c3c:	cmp	w13, #0x9
  449c40:	b.ne	449bfc <_obstack_memory_used@@Base+0xb99c>  // b.any
  449c44:	b	449bec <_obstack_memory_used@@Base+0xb98c>
  449c48:	ldr	x8, [x23, #8]
  449c4c:	cmp	x8, #0x1
  449c50:	b.lt	449db0 <_obstack_memory_used@@Base+0xbb50>  // b.tstop
  449c54:	mov	x22, xzr
  449c58:	b	449c90 <_obstack_memory_used@@Base+0xba30>
  449c5c:	ldr	x3, [sp, #8]
  449c60:	mov	x0, x24
  449c64:	mov	x2, x23
  449c68:	bl	44a290 <_obstack_memory_used@@Base+0xc030>
  449c6c:	cbnz	w0, 449cd4 <_obstack_memory_used@@Base+0xba74>
  449c70:	mov	w8, wzr
  449c74:	cmp	w8, #0xd
  449c78:	b.eq	449c80 <_obstack_memory_used@@Base+0xba20>  // b.none
  449c7c:	cbnz	w8, 449b8c <_obstack_memory_used@@Base+0xb92c>
  449c80:	ldr	x8, [x23, #8]
  449c84:	add	x22, x22, #0x1
  449c88:	cmp	x22, x8
  449c8c:	b.ge	449db0 <_obstack_memory_used@@Base+0xbb50>  // b.tcont
  449c90:	ldr	x8, [x23, #16]
  449c94:	ldr	x1, [x8, x22, lsl #3]
  449c98:	ldr	x8, [x24]
  449c9c:	add	x9, x8, x1, lsl #4
  449ca0:	ldr	w9, [x9, #8]
  449ca4:	and	w9, w9, #0xfe
  449ca8:	orr	w9, w9, #0x1
  449cac:	cmp	w9, #0x9
  449cb0:	b.ne	449c70 <_obstack_memory_used@@Base+0xba10>  // b.any
  449cb4:	lsl	x9, x1, #4
  449cb8:	ldr	x8, [x8, x9]
  449cbc:	cmp	x27, x8
  449cc0:	b.eq	449c5c <_obstack_memory_used@@Base+0xb9fc>  // b.none
  449cc4:	mov	w8, #0xd                   	// #13
  449cc8:	cmp	w8, #0xd
  449ccc:	b.ne	449c7c <_obstack_memory_used@@Base+0xba1c>  // b.any
  449cd0:	b	449c80 <_obstack_memory_used@@Base+0xba20>
  449cd4:	mov	w8, #0x1                   	// #1
  449cd8:	str	w0, [sp, #4]
  449cdc:	cmp	w8, #0xd
  449ce0:	b.ne	449c7c <_obstack_memory_used@@Base+0xba1c>  // b.any
  449ce4:	b	449c80 <_obstack_memory_used@@Base+0xba20>
  449ce8:	mov	x1, #0xffffffffffffffff    	// #-1
  449cec:	mov	x26, #0xffffffffffffffff    	// #-1
  449cf0:	tbnz	x1, #63, 449d08 <_obstack_memory_used@@Base+0xbaa8>
  449cf4:	ldr	x3, [sp, #8]
  449cf8:	mov	x0, x24
  449cfc:	mov	x2, x23
  449d00:	bl	44a290 <_obstack_memory_used@@Base+0xc030>
  449d04:	cbnz	w0, 449db8 <_obstack_memory_used@@Base+0xbb58>
  449d08:	tbnz	x26, #63, 449da4 <_obstack_memory_used@@Base+0xbb44>
  449d0c:	ldr	x8, [x23, #8]
  449d10:	cmp	x8, #0x1
  449d14:	b.lt	449da4 <_obstack_memory_used@@Base+0xbb44>  // b.tstop
  449d18:	mov	x22, xzr
  449d1c:	b	449d38 <_obstack_memory_used@@Base+0xbad8>
  449d20:	mov	w8, wzr
  449d24:	cbnz	w8, 449da8 <_obstack_memory_used@@Base+0xbb48>
  449d28:	ldr	x8, [x23, #8]
  449d2c:	add	x22, x22, #0x1
  449d30:	cmp	x22, x8
  449d34:	b.ge	449da4 <_obstack_memory_used@@Base+0xbb44>  // b.tcont
  449d38:	ldr	x8, [x23, #16]
  449d3c:	mov	w25, #0x18                  	// #24
  449d40:	mov	x1, x26
  449d44:	ldr	x27, [x8, x22, lsl #3]
  449d48:	ldr	x8, [x24, #56]
  449d4c:	madd	x0, x27, x25, x8
  449d50:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  449d54:	cbnz	x0, 449d20 <_obstack_memory_used@@Base+0xbac0>
  449d58:	ldr	x8, [x24, #48]
  449d5c:	mov	x1, x26
  449d60:	madd	x0, x27, x25, x8
  449d64:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  449d68:	cbnz	x0, 449d20 <_obstack_memory_used@@Base+0xbac0>
  449d6c:	ldr	x3, [sp, #8]
  449d70:	mov	x0, x24
  449d74:	mov	x1, x27
  449d78:	mov	x2, x23
  449d7c:	bl	44a290 <_obstack_memory_used@@Base+0xc030>
  449d80:	ldr	w10, [sp, #4]
  449d84:	cmp	w0, #0x0
  449d88:	cset	w9, eq  // eq = none
  449d8c:	cset	w8, ne  // ne = any
  449d90:	csel	w10, w10, w0, eq  // eq = none
  449d94:	sub	x22, x22, x9
  449d98:	str	w10, [sp, #4]
  449d9c:	cbz	w8, 449d28 <_obstack_memory_used@@Base+0xbac8>
  449da0:	b	449da8 <_obstack_memory_used@@Base+0xbb48>
  449da4:	mov	w8, wzr
  449da8:	mov	w25, #0x28                  	// #40
  449dac:	cbnz	w8, 449b8c <_obstack_memory_used@@Base+0xb92c>
  449db0:	mov	w8, wzr
  449db4:	b	449b8c <_obstack_memory_used@@Base+0xb92c>
  449db8:	mov	w8, #0x1                   	// #1
  449dbc:	str	w0, [sp, #4]
  449dc0:	mov	w25, #0x28                  	// #40
  449dc4:	cbnz	w8, 449b8c <_obstack_memory_used@@Base+0xb92c>
  449dc8:	b	449db0 <_obstack_memory_used@@Base+0xbb50>
  449dcc:	mov	w0, wzr
  449dd0:	b	449dd8 <_obstack_memory_used@@Base+0xbb78>
  449dd4:	ldr	w0, [sp, #4]
  449dd8:	ldp	x20, x19, [sp, #96]
  449ddc:	ldp	x22, x21, [sp, #80]
  449de0:	ldp	x24, x23, [sp, #64]
  449de4:	ldp	x26, x25, [sp, #48]
  449de8:	ldp	x28, x27, [sp, #32]
  449dec:	ldp	x29, x30, [sp, #16]
  449df0:	add	sp, sp, #0x70
  449df4:	ret
  449df8:	sub	sp, sp, #0xe0
  449dfc:	stp	x29, x30, [sp, #128]
  449e00:	stp	x28, x27, [sp, #144]
  449e04:	stp	x26, x25, [sp, #160]
  449e08:	stp	x24, x23, [sp, #176]
  449e0c:	stp	x22, x21, [sp, #192]
  449e10:	stp	x20, x19, [sp, #208]
  449e14:	ldr	x22, [x0, #152]
  449e18:	mov	x23, x1
  449e1c:	mov	x1, x2
  449e20:	add	x29, sp, #0x80
  449e24:	mov	x19, x3
  449e28:	mov	x20, x2
  449e2c:	str	x0, [sp, #56]
  449e30:	bl	4474e0 <_obstack_memory_used@@Base+0x9280>
  449e34:	cmn	x0, #0x1
  449e38:	str	x0, [sp, #32]
  449e3c:	b.eq	44a0a0 <_obstack_memory_used@@Base+0xbe40>  // b.none
  449e40:	str	xzr, [sp, #64]
  449e44:	ldr	x8, [x19, #8]
  449e48:	cmp	x8, #0x1
  449e4c:	b.lt	44a084 <_obstack_memory_used@@Base+0xbe24>  // b.tstop
  449e50:	add	x9, x20, #0x1
  449e54:	str	x9, [sp]
  449e58:	ldr	x9, [sp, #32]
  449e5c:	add	x8, x23, #0x20
  449e60:	str	x8, [sp, #48]
  449e64:	add	x8, sp, #0x40
  449e68:	add	x9, x9, x9, lsl #2
  449e6c:	add	x8, x8, #0x20
  449e70:	mov	x28, xzr
  449e74:	str	x8, [sp, #40]
  449e78:	lsl	x8, x9, #3
  449e7c:	stp	x8, x19, [sp, #16]
  449e80:	b	449e94 <_obstack_memory_used@@Base+0xbc34>
  449e84:	ldr	x8, [x19, #8]
  449e88:	add	x28, x28, #0x1
  449e8c:	cmp	x28, x8
  449e90:	b.ge	44a084 <_obstack_memory_used@@Base+0xbe24>  // b.tcont
  449e94:	ldr	x8, [x19, #16]
  449e98:	ldr	x9, [x23, #16]
  449e9c:	ldr	x26, [x8, x28, lsl #3]
  449ea0:	ldr	x8, [x22]
  449ea4:	cmp	x26, x9
  449ea8:	add	x8, x8, x26, lsl #4
  449eac:	ldrb	w8, [x8, #8]
  449eb0:	b.ne	449ed0 <_obstack_memory_used@@Base+0xbc70>  // b.any
  449eb4:	cmp	w8, #0x4
  449eb8:	mov	w8, #0x4                   	// #4
  449ebc:	b.ne	44a068 <_obstack_memory_used@@Base+0xbe08>  // b.any
  449ec0:	ldr	x9, [x23, #24]
  449ec4:	cmp	x9, x20
  449ec8:	b.ne	449ed8 <_obstack_memory_used@@Base+0xbc78>  // b.any
  449ecc:	b	44a068 <_obstack_memory_used@@Base+0xbe08>
  449ed0:	cmp	w8, #0x4
  449ed4:	b.ne	44a078 <_obstack_memory_used@@Base+0xbe18>  // b.any
  449ed8:	ldr	x8, [sp, #56]
  449edc:	ldr	x24, [sp, #32]
  449ee0:	ldr	x19, [sp, #16]
  449ee4:	mov	w9, #0x28                  	// #40
  449ee8:	ldr	x8, [x8, #216]
  449eec:	madd	x21, x24, x9, x8
  449ef0:	b	449f08 <_obstack_memory_used@@Base+0xbca8>
  449ef4:	ldrb	w8, [x21, #32]
  449ef8:	add	x24, x24, #0x1
  449efc:	add	x21, x21, #0x28
  449f00:	add	x19, x19, #0x28
  449f04:	cbz	w8, 44a064 <_obstack_memory_used@@Base+0xbe04>
  449f08:	ldr	x8, [x21]
  449f0c:	cmp	x8, x26
  449f10:	b.ne	449f88 <_obstack_memory_used@@Base+0xbd28>  // b.any
  449f14:	ldp	x9, x8, [x21, #16]
  449f18:	subs	x8, x8, x9
  449f1c:	add	x25, x8, x20
  449f20:	b.eq	449f30 <_obstack_memory_used@@Base+0xbcd0>  // b.none
  449f24:	ldr	x8, [x22, #24]
  449f28:	add	x8, x8, x26, lsl #3
  449f2c:	b	449f40 <_obstack_memory_used@@Base+0xbce0>
  449f30:	ldr	x8, [x22, #40]
  449f34:	mov	w9, #0x18                  	// #24
  449f38:	madd	x8, x26, x9, x8
  449f3c:	ldr	x8, [x8, #16]
  449f40:	ldr	x9, [x23, #24]
  449f44:	cmp	x25, x9
  449f48:	b.gt	449f88 <_obstack_memory_used@@Base+0xbd28>
  449f4c:	ldr	x9, [x23]
  449f50:	ldr	x9, [x9, x25, lsl #3]
  449f54:	cbz	x9, 449f88 <_obstack_memory_used@@Base+0xbd28>
  449f58:	ldr	x27, [x8]
  449f5c:	add	x0, x9, #0x8
  449f60:	mov	x1, x27
  449f64:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  449f68:	cbz	x0, 449f88 <_obstack_memory_used@@Base+0xbd28>
  449f6c:	ldp	x1, x0, [sp, #48]
  449f70:	mov	x2, x26
  449f74:	mov	x3, x20
  449f78:	mov	x4, x27
  449f7c:	mov	x5, x25
  449f80:	bl	44a494 <_obstack_memory_used@@Base+0xc234>
  449f84:	tbz	w0, #0, 449f9c <_obstack_memory_used@@Base+0xbd3c>
  449f88:	mov	w8, #0x6                   	// #6
  449f8c:	cmp	w8, #0x6
  449f90:	b.eq	449ef4 <_obstack_memory_used@@Base+0xbc94>  // b.none
  449f94:	cbz	w8, 449ef4 <_obstack_memory_used@@Base+0xbc94>
  449f98:	b	44a064 <_obstack_memory_used@@Base+0xbe04>
  449f9c:	ldr	x8, [sp, #64]
  449fa0:	cbnz	x8, 449fc8 <_obstack_memory_used@@Base+0xbd68>
  449fa4:	ldr	x8, [x23, #48]
  449fa8:	ldp	q1, q0, [x23, #16]
  449fac:	ldr	q2, [x23]
  449fb0:	ldp	x0, x1, [sp, #40]
  449fb4:	str	x8, [sp, #112]
  449fb8:	stp	q1, q0, [sp, #80]
  449fbc:	str	q2, [sp, #64]
  449fc0:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  449fc4:	cbnz	w0, 44a048 <_obstack_memory_used@@Base+0xbde8>
  449fc8:	ldr	x0, [sp, #40]
  449fcc:	mov	x1, x24
  449fd0:	stp	x26, x20, [sp, #80]
  449fd4:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  449fd8:	tbz	w0, #0, 44a054 <_obstack_memory_used@@Base+0xbdf4>
  449fdc:	ldp	x0, x8, [sp, #56]
  449fe0:	add	x1, sp, #0x40
  449fe4:	ldr	x25, [x8, x20, lsl #3]
  449fe8:	bl	4495d8 <_obstack_memory_used@@Base+0xb378>
  449fec:	cbnz	w0, 44a048 <_obstack_memory_used@@Base+0xbde8>
  449ff0:	ldr	x1, [x23, #8]
  449ff4:	cbz	x1, 44a00c <_obstack_memory_used@@Base+0xbdac>
  449ff8:	ldr	x2, [sp, #64]
  449ffc:	ldr	x3, [sp]
  44a000:	mov	x0, x22
  44a004:	bl	4496d4 <_obstack_memory_used@@Base+0xb474>
  44a008:	cbnz	w0, 44a048 <_obstack_memory_used@@Base+0xbde8>
  44a00c:	ldr	x21, [sp, #40]
  44a010:	ldr	x8, [sp, #64]
  44a014:	str	w0, [sp, #12]
  44a018:	mov	x1, x24
  44a01c:	mov	x0, x21
  44a020:	str	x25, [x8, x20, lsl #3]
  44a024:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44a028:	sub	x1, x0, #0x1
  44a02c:	mov	x0, x21
  44a030:	bl	445210 <_obstack_memory_used@@Base+0x6fb0>
  44a034:	ldr	x9, [sp, #56]
  44a038:	mov	w8, wzr
  44a03c:	ldr	x9, [x9, #216]
  44a040:	add	x21, x9, x19
  44a044:	b	449f8c <_obstack_memory_used@@Base+0xbd2c>
  44a048:	str	w0, [sp, #12]
  44a04c:	mov	w8, #0x7                   	// #7
  44a050:	b	449f8c <_obstack_memory_used@@Base+0xbd2c>
  44a054:	mov	w8, #0xc                   	// #12
  44a058:	str	w8, [sp, #12]
  44a05c:	mov	w8, #0x7                   	// #7
  44a060:	b	449f8c <_obstack_memory_used@@Base+0xbd2c>
  44a064:	ldr	x19, [sp, #24]
  44a068:	cbz	w8, 449e84 <_obstack_memory_used@@Base+0xbc24>
  44a06c:	cmp	w8, #0x4
  44a070:	b.eq	449e84 <_obstack_memory_used@@Base+0xbc24>  // b.none
  44a074:	b	44a0a8 <_obstack_memory_used@@Base+0xbe48>
  44a078:	mov	w8, #0x4                   	// #4
  44a07c:	cbnz	w8, 44a06c <_obstack_memory_used@@Base+0xbe0c>
  44a080:	b	449e84 <_obstack_memory_used@@Base+0xbc24>
  44a084:	str	wzr, [sp, #12]
  44a088:	ldr	x8, [sp, #64]
  44a08c:	cbz	x8, 44a098 <_obstack_memory_used@@Base+0xbe38>
  44a090:	ldr	x0, [sp, #112]
  44a094:	bl	4049d0 <free@plt>
  44a098:	ldr	w0, [sp, #12]
  44a09c:	b	44a0b0 <_obstack_memory_used@@Base+0xbe50>
  44a0a0:	mov	w0, wzr
  44a0a4:	b	44a0b0 <_obstack_memory_used@@Base+0xbe50>
  44a0a8:	cmp	w8, #0x7
  44a0ac:	b.eq	44a088 <_obstack_memory_used@@Base+0xbe28>  // b.none
  44a0b0:	ldp	x20, x19, [sp, #208]
  44a0b4:	ldp	x22, x21, [sp, #192]
  44a0b8:	ldp	x24, x23, [sp, #176]
  44a0bc:	ldp	x26, x25, [sp, #160]
  44a0c0:	ldp	x28, x27, [sp, #144]
  44a0c4:	ldp	x29, x30, [sp, #128]
  44a0c8:	add	sp, sp, #0xe0
  44a0cc:	ret
  44a0d0:	stp	x29, x30, [sp, #-48]!
  44a0d4:	stp	x22, x21, [sp, #16]
  44a0d8:	stp	x20, x19, [sp, #32]
  44a0dc:	ldr	x8, [x1, #8]
  44a0e0:	mov	x29, sp
  44a0e4:	cbz	x8, 44a274 <_obstack_memory_used@@Base+0xc014>
  44a0e8:	ldr	x10, [x2, #8]
  44a0ec:	mov	x20, x2
  44a0f0:	cbz	x10, 44a274 <_obstack_memory_used@@Base+0xc014>
  44a0f4:	ldp	x9, x11, [x0]
  44a0f8:	add	x8, x10, x8
  44a0fc:	mov	x21, x1
  44a100:	mov	x19, x0
  44a104:	add	x10, x11, x8
  44a108:	cmp	x10, x9
  44a10c:	b.le	44a12c <_obstack_memory_used@@Base+0xbecc>
  44a110:	ldr	x0, [x19, #16]
  44a114:	add	x22, x9, x8
  44a118:	lsl	x1, x22, #3
  44a11c:	bl	404730 <realloc@plt>
  44a120:	cbz	x0, 44a288 <_obstack_memory_used@@Base+0xc028>
  44a124:	str	x0, [x19, #16]
  44a128:	str	x22, [x19]
  44a12c:	ldr	x13, [x19, #8]
  44a130:	ldp	x8, x9, [x21, #8]
  44a134:	ldp	x14, x10, [x20, #8]
  44a138:	add	x15, x8, x13
  44a13c:	sub	x12, x8, #0x1
  44a140:	sub	x11, x14, #0x1
  44a144:	add	x8, x15, x14
  44a148:	sub	x13, x13, #0x1
  44a14c:	ldr	x14, [x9, x12, lsl #3]
  44a150:	ldr	x15, [x10, x11, lsl #3]
  44a154:	cmp	x14, x15
  44a158:	b.eq	44a170 <_obstack_memory_used@@Base+0xbf10>  // b.none
  44a15c:	b.lt	44a1cc <_obstack_memory_used@@Base+0xbf6c>  // b.tstop
  44a160:	cmp	x12, #0x0
  44a164:	sub	x12, x12, #0x1
  44a168:	b.gt	44a14c <_obstack_memory_used@@Base+0xbeec>
  44a16c:	b	44a1d4 <_obstack_memory_used@@Base+0xbf74>
  44a170:	tbnz	x13, #63, 44a198 <_obstack_memory_used@@Base+0xbf38>
  44a174:	ldr	x15, [x19, #16]
  44a178:	mov	x16, x13
  44a17c:	ldr	x13, [x15, x16, lsl #3]
  44a180:	cmp	x13, x14
  44a184:	b.le	44a1a0 <_obstack_memory_used@@Base+0xbf40>
  44a188:	sub	x13, x16, #0x1
  44a18c:	cmp	x16, #0x0
  44a190:	mov	x16, x13
  44a194:	b.gt	44a17c <_obstack_memory_used@@Base+0xbf1c>
  44a198:	tbz	x13, #63, 44a1a8 <_obstack_memory_used@@Base+0xbf48>
  44a19c:	b	44a1b8 <_obstack_memory_used@@Base+0xbf58>
  44a1a0:	mov	x13, x16
  44a1a4:	tbnz	x13, #63, 44a1b8 <_obstack_memory_used@@Base+0xbf58>
  44a1a8:	ldr	x15, [x19, #16]
  44a1ac:	ldr	x15, [x15, x13, lsl #3]
  44a1b0:	cmp	x15, x14
  44a1b4:	b.eq	44a1c4 <_obstack_memory_used@@Base+0xbf64>  // b.none
  44a1b8:	ldr	x15, [x19, #16]
  44a1bc:	sub	x8, x8, #0x1
  44a1c0:	str	x14, [x15, x8, lsl #3]
  44a1c4:	subs	x12, x12, #0x1
  44a1c8:	b.lt	44a1d4 <_obstack_memory_used@@Base+0xbf74>  // b.tstop
  44a1cc:	subs	x11, x11, #0x1
  44a1d0:	b.ge	44a14c <_obstack_memory_used@@Base+0xbeec>  // b.tcont
  44a1d4:	ldr	x13, [x19, #8]
  44a1d8:	ldr	x14, [x21, #8]
  44a1dc:	ldr	x15, [x20, #8]
  44a1e0:	subs	x11, x13, #0x1
  44a1e4:	add	x9, x13, x14
  44a1e8:	add	x9, x9, x15
  44a1ec:	sub	x10, x9, #0x1
  44a1f0:	sub	x12, x10, x8
  44a1f4:	add	x9, x12, #0x1
  44a1f8:	add	x16, x9, x13
  44a1fc:	str	x16, [x19, #8]
  44a200:	b.lt	44a260 <_obstack_memory_used@@Base+0xc000>  // b.tstop
  44a204:	tbnz	x12, #63, 44a260 <_obstack_memory_used@@Base+0xc000>
  44a208:	ldr	x12, [x19, #16]
  44a20c:	add	x13, x13, x15
  44a210:	add	x13, x13, x14
  44a214:	sub	x13, x13, x8
  44a218:	add	x13, x12, x13, lsl #3
  44a21c:	ldr	x15, [x12, x10, lsl #3]
  44a220:	ldr	x14, [x12, x11, lsl #3]
  44a224:	cmp	x15, x14
  44a228:	b.gt	44a244 <_obstack_memory_used@@Base+0xbfe4>
  44a22c:	sub	x15, x11, #0x1
  44a230:	cmp	x11, #0x0
  44a234:	str	x14, [x13, x11, lsl #3]
  44a238:	mov	x11, x15
  44a23c:	b.gt	44a21c <_obstack_memory_used@@Base+0xbfbc>
  44a240:	b	44a260 <_obstack_memory_used@@Base+0xc000>
  44a244:	mov	x14, xzr
  44a248:	sub	x10, x10, #0x1
  44a24c:	sub	x9, x9, #0x1
  44a250:	str	x15, [x13, x11, lsl #3]
  44a254:	sub	x13, x13, #0x8
  44a258:	cbnz	x9, 44a21c <_obstack_memory_used@@Base+0xbfbc>
  44a25c:	b	44a264 <_obstack_memory_used@@Base+0xc004>
  44a260:	mov	x14, x9
  44a264:	ldr	x0, [x19, #16]
  44a268:	lsl	x2, x14, #3
  44a26c:	add	x1, x0, x8, lsl #3
  44a270:	bl	404110 <memcpy@plt>
  44a274:	mov	w0, wzr
  44a278:	ldp	x20, x19, [sp, #32]
  44a27c:	ldp	x22, x21, [sp, #16]
  44a280:	ldp	x29, x30, [sp], #48
  44a284:	ret
  44a288:	mov	w0, #0xc                   	// #12
  44a28c:	b	44a278 <_obstack_memory_used@@Base+0xc018>
  44a290:	sub	sp, sp, #0x90
  44a294:	stp	x29, x30, [sp, #48]
  44a298:	stp	x28, x27, [sp, #64]
  44a29c:	stp	x26, x25, [sp, #80]
  44a2a0:	stp	x24, x23, [sp, #96]
  44a2a4:	stp	x22, x21, [sp, #112]
  44a2a8:	stp	x20, x19, [sp, #128]
  44a2ac:	ldr	x9, [x0, #56]
  44a2b0:	mov	w8, #0x18                  	// #24
  44a2b4:	stp	xzr, xzr, [sp, #24]
  44a2b8:	str	xzr, [sp, #40]
  44a2bc:	madd	x23, x1, x8, x9
  44a2c0:	stp	x3, x9, [sp, #8]
  44a2c4:	mov	x27, x23
  44a2c8:	ldr	x8, [x27, #8]!
  44a2cc:	mov	x20, x1
  44a2d0:	mov	x19, x2
  44a2d4:	add	x29, sp, #0x30
  44a2d8:	cmp	x8, #0x1
  44a2dc:	b.lt	44a3f8 <_obstack_memory_used@@Base+0xc198>  // b.tstop
  44a2e0:	ldr	x8, [sp, #16]
  44a2e4:	mov	w9, #0x18                  	// #24
  44a2e8:	mov	x22, x0
  44a2ec:	mov	x21, xzr
  44a2f0:	madd	x8, x20, x9, x8
  44a2f4:	add	x24, x8, #0x10
  44a2f8:	ldr	x8, [x24]
  44a2fc:	ldr	x28, [x8, x21, lsl #3]
  44a300:	cmp	x28, x20
  44a304:	b.ne	44a310 <_obstack_memory_used@@Base+0xc0b0>  // b.any
  44a308:	mov	w8, #0x4                   	// #4
  44a30c:	b	44a3bc <_obstack_memory_used@@Base+0xc15c>
  44a310:	ldr	x8, [x22]
  44a314:	add	x8, x8, x28, lsl #4
  44a318:	ldrb	w8, [x8, #8]
  44a31c:	tbz	w8, #3, 44a3b8 <_obstack_memory_used@@Base+0xc158>
  44a320:	ldr	x8, [x22, #40]
  44a324:	mov	w9, #0x18                  	// #24
  44a328:	madd	x9, x28, x9, x8
  44a32c:	ldp	x9, x8, [x9, #8]
  44a330:	ldr	x26, [x8]
  44a334:	cmp	x9, #0x2
  44a338:	b.lt	44a344 <_obstack_memory_used@@Base+0xc0e4>  // b.tstop
  44a33c:	ldr	x25, [x8, #8]
  44a340:	b	44a348 <_obstack_memory_used@@Base+0xc0e8>
  44a344:	mov	x25, #0xffffffffffffffff    	// #-1
  44a348:	mov	x0, x23
  44a34c:	mov	x1, x26
  44a350:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44a354:	cbz	x0, 44a384 <_obstack_memory_used@@Base+0xc124>
  44a358:	cmp	x25, #0x1
  44a35c:	b.lt	44a3b0 <_obstack_memory_used@@Base+0xc150>  // b.tstop
  44a360:	mov	x0, x23
  44a364:	mov	x1, x25
  44a368:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44a36c:	cbnz	x0, 44a3b0 <_obstack_memory_used@@Base+0xc150>
  44a370:	mov	x0, x19
  44a374:	mov	x1, x25
  44a378:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44a37c:	cbnz	x0, 44a394 <_obstack_memory_used@@Base+0xc134>
  44a380:	b	44a3b0 <_obstack_memory_used@@Base+0xc150>
  44a384:	mov	x0, x19
  44a388:	mov	x1, x26
  44a38c:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44a390:	cbz	x0, 44a358 <_obstack_memory_used@@Base+0xc0f8>
  44a394:	ldr	x8, [x22, #56]
  44a398:	ldr	x1, [sp, #8]
  44a39c:	mov	w9, #0x18                  	// #24
  44a3a0:	add	x0, sp, #0x18
  44a3a4:	madd	x2, x28, x9, x8
  44a3a8:	bl	44a0d0 <_obstack_memory_used@@Base+0xbe70>
  44a3ac:	cbnz	w0, 44a3dc <_obstack_memory_used@@Base+0xc17c>
  44a3b0:	mov	w8, wzr
  44a3b4:	cbnz	w8, 44a3bc <_obstack_memory_used@@Base+0xc15c>
  44a3b8:	mov	w8, wzr
  44a3bc:	orr	w8, w8, #0x4
  44a3c0:	cmp	w8, #0x4
  44a3c4:	b.ne	44a470 <_obstack_memory_used@@Base+0xc210>  // b.any
  44a3c8:	ldr	x8, [x27]
  44a3cc:	add	x21, x21, #0x1
  44a3d0:	cmp	x21, x8
  44a3d4:	b.lt	44a2f8 <_obstack_memory_used@@Base+0xc098>  // b.tstop
  44a3d8:	b	44a3f8 <_obstack_memory_used@@Base+0xc198>
  44a3dc:	mov	w25, w0
  44a3e0:	ldr	x0, [sp, #40]
  44a3e4:	bl	4049d0 <free@plt>
  44a3e8:	mov	w8, #0x1                   	// #1
  44a3ec:	str	w25, [sp, #4]
  44a3f0:	cbnz	w8, 44a3bc <_obstack_memory_used@@Base+0xc15c>
  44a3f4:	b	44a3b8 <_obstack_memory_used@@Base+0xc158>
  44a3f8:	ldr	x8, [x27]
  44a3fc:	cmp	x8, #0x1
  44a400:	b.lt	44a460 <_obstack_memory_used@@Base+0xc200>  // b.tstop
  44a404:	ldr	x9, [sp, #16]
  44a408:	mov	w8, #0x18                  	// #24
  44a40c:	mov	x21, xzr
  44a410:	madd	x8, x20, x8, x9
  44a414:	add	x22, x8, #0x10
  44a418:	b	44a42c <_obstack_memory_used@@Base+0xc1cc>
  44a41c:	ldr	x8, [x27]
  44a420:	add	x21, x21, #0x1
  44a424:	cmp	x21, x8
  44a428:	b.ge	44a460 <_obstack_memory_used@@Base+0xc200>  // b.tcont
  44a42c:	ldr	x8, [x22]
  44a430:	add	x0, sp, #0x18
  44a434:	ldr	x20, [x8, x21, lsl #3]
  44a438:	mov	x1, x20
  44a43c:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44a440:	cbnz	x0, 44a41c <_obstack_memory_used@@Base+0xc1bc>
  44a444:	mov	x0, x19
  44a448:	mov	x1, x20
  44a44c:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44a450:	sub	x1, x0, #0x1
  44a454:	mov	x0, x19
  44a458:	bl	445210 <_obstack_memory_used@@Base+0x6fb0>
  44a45c:	b	44a41c <_obstack_memory_used@@Base+0xc1bc>
  44a460:	ldr	x0, [sp, #40]
  44a464:	bl	4049d0 <free@plt>
  44a468:	mov	w0, wzr
  44a46c:	b	44a474 <_obstack_memory_used@@Base+0xc214>
  44a470:	ldr	w0, [sp, #4]
  44a474:	ldp	x20, x19, [sp, #128]
  44a478:	ldp	x22, x21, [sp, #112]
  44a47c:	ldp	x24, x23, [sp, #96]
  44a480:	ldp	x26, x25, [sp, #80]
  44a484:	ldp	x28, x27, [sp, #64]
  44a488:	ldp	x29, x30, [sp, #48]
  44a48c:	add	sp, sp, #0x90
  44a490:	ret
  44a494:	sub	sp, sp, #0x70
  44a498:	stp	x24, x23, [sp, #64]
  44a49c:	mov	x23, x1
  44a4a0:	mov	x1, x3
  44a4a4:	stp	x29, x30, [sp, #16]
  44a4a8:	stp	x28, x27, [sp, #32]
  44a4ac:	stp	x26, x25, [sp, #48]
  44a4b0:	stp	x22, x21, [sp, #80]
  44a4b4:	stp	x20, x19, [sp, #96]
  44a4b8:	add	x29, sp, #0x10
  44a4bc:	mov	x19, x5
  44a4c0:	stp	x2, x4, [sp]
  44a4c4:	mov	x21, x3
  44a4c8:	mov	x24, x0
  44a4cc:	bl	4474e0 <_obstack_memory_used@@Base+0x9280>
  44a4d0:	mov	x25, x0
  44a4d4:	mov	x0, x24
  44a4d8:	mov	x1, x19
  44a4dc:	bl	4474e0 <_obstack_memory_used@@Base+0x9280>
  44a4e0:	ldr	x8, [x23, #8]
  44a4e4:	cmp	x8, #0x1
  44a4e8:	b.lt	44a574 <_obstack_memory_used@@Base+0xc314>  // b.tstop
  44a4ec:	ldr	x22, [x24, #152]
  44a4f0:	mov	x26, x0
  44a4f4:	mov	x20, xzr
  44a4f8:	ldr	x8, [x23, #16]
  44a4fc:	lsl	x28, x20, #3
  44a500:	mov	w9, #0x28                  	// #40
  44a504:	ldr	x3, [sp]
  44a508:	ldr	x1, [x8, x28]
  44a50c:	ldr	x8, [x24, #216]
  44a510:	mov	x0, x24
  44a514:	mov	x4, x21
  44a518:	mul	x9, x1, x9
  44a51c:	ldr	x8, [x8, x9]
  44a520:	ldr	x9, [x22]
  44a524:	mov	x5, x25
  44a528:	lsl	x8, x8, #4
  44a52c:	ldr	x27, [x9, x8]
  44a530:	mov	x2, x27
  44a534:	bl	44a5a0 <_obstack_memory_used@@Base+0xc340>
  44a538:	ldr	x8, [x23, #16]
  44a53c:	ldr	x3, [sp, #8]
  44a540:	mov	x2, x27
  44a544:	mov	x4, x19
  44a548:	ldr	x1, [x8, x28]
  44a54c:	mov	w28, w0
  44a550:	mov	x0, x24
  44a554:	mov	x5, x26
  44a558:	bl	44a5a0 <_obstack_memory_used@@Base+0xc340>
  44a55c:	cmp	w0, w28
  44a560:	b.ne	44a57c <_obstack_memory_used@@Base+0xc31c>  // b.any
  44a564:	ldr	x8, [x23, #8]
  44a568:	add	x20, x20, #0x1
  44a56c:	cmp	x20, x8
  44a570:	b.lt	44a4f8 <_obstack_memory_used@@Base+0xc298>  // b.tstop
  44a574:	mov	w0, wzr
  44a578:	b	44a580 <_obstack_memory_used@@Base+0xc320>
  44a57c:	mov	w0, #0x1                   	// #1
  44a580:	ldp	x20, x19, [sp, #96]
  44a584:	ldp	x22, x21, [sp, #80]
  44a588:	ldp	x24, x23, [sp, #64]
  44a58c:	ldp	x26, x25, [sp, #48]
  44a590:	ldp	x28, x27, [sp, #32]
  44a594:	ldp	x29, x30, [sp, #16]
  44a598:	add	sp, sp, #0x70
  44a59c:	ret
  44a5a0:	stp	x29, x30, [sp, #-16]!
  44a5a4:	ldr	x9, [x0, #216]
  44a5a8:	mov	w8, #0x28                  	// #40
  44a5ac:	mov	x29, sp
  44a5b0:	madd	x8, x1, x8, x9
  44a5b4:	ldr	x8, [x8, #16]
  44a5b8:	cmp	x8, x4
  44a5bc:	b.le	44a5cc <_obstack_memory_used@@Base+0xc36c>
  44a5c0:	mov	w0, #0xffffffff            	// #-1
  44a5c4:	ldp	x29, x30, [sp], #16
  44a5c8:	ret
  44a5cc:	mov	w10, #0x28                  	// #40
  44a5d0:	madd	x9, x1, x10, x9
  44a5d4:	ldr	x9, [x9, #24]
  44a5d8:	cmp	x9, x4
  44a5dc:	b.ge	44a5ec <_obstack_memory_used@@Base+0xc38c>  // b.tcont
  44a5e0:	mov	w0, #0x1                   	// #1
  44a5e4:	ldp	x29, x30, [sp], #16
  44a5e8:	ret
  44a5ec:	cmp	x8, x4
  44a5f0:	cset	w1, eq  // eq = none
  44a5f4:	cmp	x9, x4
  44a5f8:	cset	w8, eq  // eq = none
  44a5fc:	bfi	w1, w8, #1, #1
  44a600:	cbz	w1, 44a614 <_obstack_memory_used@@Base+0xc3b4>
  44a604:	mov	x4, x5
  44a608:	bl	44a620 <_obstack_memory_used@@Base+0xc3c0>
  44a60c:	ldp	x29, x30, [sp], #16
  44a610:	ret
  44a614:	mov	w0, wzr
  44a618:	ldp	x29, x30, [sp], #16
  44a61c:	ret
  44a620:	sub	sp, sp, #0x90
  44a624:	stp	x29, x30, [sp, #48]
  44a628:	stp	x28, x27, [sp, #64]
  44a62c:	stp	x26, x25, [sp, #80]
  44a630:	stp	x24, x23, [sp, #96]
  44a634:	stp	x22, x21, [sp, #112]
  44a638:	stp	x20, x19, [sp, #128]
  44a63c:	ldr	x25, [x0, #152]
  44a640:	add	x29, sp, #0x30
  44a644:	mov	w9, #0x18                  	// #24
  44a648:	stur	x0, [x29, #-8]
  44a64c:	ldr	x8, [x25, #48]
  44a650:	madd	x26, x3, x9, x8
  44a654:	ldr	x9, [x26, #8]!
  44a658:	cmp	x9, #0x1
  44a65c:	ubfx	w9, w1, #1, #1
  44a660:	str	w9, [sp, #24]
  44a664:	b.lt	44a864 <_obstack_memory_used@@Base+0xc604>  // b.tstop
  44a668:	mov	w11, #0x18                  	// #24
  44a66c:	madd	x8, x3, x11, x8
  44a670:	add	x12, x8, #0x10
  44a674:	ldr	w8, [sp, #24]
  44a678:	and	w10, w1, #0x2
  44a67c:	cmp	x2, #0x3f
  44a680:	str	w10, [sp, #20]
  44a684:	sbfx	w10, w1, #0, #1
  44a688:	mov	w9, #0x1                   	// #1
  44a68c:	stur	w10, [x29, #-20]
  44a690:	cset	w10, gt
  44a694:	lsl	x9, x9, x2
  44a698:	orr	w8, w8, w10
  44a69c:	str	w8, [sp, #16]
  44a6a0:	mvn	w8, w9
  44a6a4:	mov	x20, x3
  44a6a8:	mov	x21, x2
  44a6ac:	mov	w22, w1
  44a6b0:	mov	x28, xzr
  44a6b4:	stur	x9, [x29, #-16]
  44a6b8:	str	w8, [sp, #12]
  44a6bc:	str	x12, [sp]
  44a6c0:	b	44a6dc <_obstack_memory_used@@Base+0xc47c>
  44a6c4:	mov	w8, wzr
  44a6c8:	cbnz	wzr, 44a868 <_obstack_memory_used@@Base+0xc608>
  44a6cc:	ldr	x8, [x26]
  44a6d0:	add	x28, x28, #0x1
  44a6d4:	cmp	x28, x8
  44a6d8:	b.ge	44a864 <_obstack_memory_used@@Base+0xc604>  // b.tcont
  44a6dc:	ldr	x8, [x12]
  44a6e0:	ldr	x23, [x8, x28, lsl #3]
  44a6e4:	ldr	x8, [x25]
  44a6e8:	add	x8, x8, x23, lsl #4
  44a6ec:	ldrb	w9, [x8, #8]
  44a6f0:	cmp	w9, #0x9
  44a6f4:	b.eq	44a818 <_obstack_memory_used@@Base+0xc5b8>  // b.none
  44a6f8:	cmp	w9, #0x8
  44a6fc:	b.eq	44a834 <_obstack_memory_used@@Base+0xc5d4>  // b.none
  44a700:	cmp	w9, #0x4
  44a704:	b.ne	44a6c4 <_obstack_memory_used@@Base+0xc464>  // b.any
  44a708:	cmn	x4, #0x1
  44a70c:	b.eq	44a6c4 <_obstack_memory_used@@Base+0xc464>  // b.none
  44a710:	ldur	x8, [x29, #-8]
  44a714:	mov	w9, #0x28                  	// #40
  44a718:	ldr	x8, [x8, #216]
  44a71c:	madd	x8, x4, x9, x8
  44a720:	add	x19, x8, #0x22
  44a724:	b	44a734 <_obstack_memory_used@@Base+0xc4d4>
  44a728:	ldurb	w8, [x19, #-2]
  44a72c:	add	x19, x19, #0x28
  44a730:	cbz	w8, 44a854 <_obstack_memory_used@@Base+0xc5f4>
  44a734:	ldur	x8, [x19, #-34]
  44a738:	cmp	x8, x23
  44a73c:	b.ne	44a77c <_obstack_memory_used@@Base+0xc51c>  // b.any
  44a740:	cmp	x21, #0x3f
  44a744:	b.gt	44a758 <_obstack_memory_used@@Base+0xc4f8>
  44a748:	ldrh	w8, [x19]
  44a74c:	ldur	x9, [x29, #-16]
  44a750:	tst	x9, x8
  44a754:	b.eq	44a77c <_obstack_memory_used@@Base+0xc51c>  // b.none
  44a758:	ldr	x8, [x25, #40]
  44a75c:	madd	x8, x23, x11, x8
  44a760:	ldr	x8, [x8, #16]
  44a764:	ldr	x3, [x8]
  44a768:	cmp	x3, x20
  44a76c:	b.ne	44a790 <_obstack_memory_used@@Base+0xc530>  // b.any
  44a770:	ldur	w24, [x29, #-20]
  44a774:	mov	w8, #0x1                   	// #1
  44a778:	b	44a780 <_obstack_memory_used@@Base+0xc520>
  44a77c:	mov	w8, #0x7                   	// #7
  44a780:	cmp	w8, #0x7
  44a784:	b.eq	44a728 <_obstack_memory_used@@Base+0xc4c8>  // b.none
  44a788:	cbz	w8, 44a728 <_obstack_memory_used@@Base+0xc4c8>
  44a78c:	b	44a854 <_obstack_memory_used@@Base+0xc5f4>
  44a790:	ldur	x0, [x29, #-8]
  44a794:	mov	w1, w22
  44a798:	mov	x2, x21
  44a79c:	mov	x27, x4
  44a7a0:	bl	44a620 <_obstack_memory_used@@Base+0xc3c0>
  44a7a4:	cmn	w0, #0x1
  44a7a8:	b.eq	44a7d4 <_obstack_memory_used@@Base+0xc574>  // b.none
  44a7ac:	cbnz	w0, 44a7e8 <_obstack_memory_used@@Base+0xc588>
  44a7b0:	ldp	w9, w8, [sp, #16]
  44a7b4:	mov	x4, x27
  44a7b8:	mov	w11, #0x18                  	// #24
  44a7bc:	cmp	w8, #0x0
  44a7c0:	csel	w8, wzr, w24, ne  // ne = any
  44a7c4:	tbz	w9, #0, 44a7f8 <_obstack_memory_used@@Base+0xc598>
  44a7c8:	mov	w24, w8
  44a7cc:	ldr	w8, [sp, #24]
  44a7d0:	b	44a780 <_obstack_memory_used@@Base+0xc520>
  44a7d4:	mov	w8, #0x1                   	// #1
  44a7d8:	mov	w24, w0
  44a7dc:	mov	x4, x27
  44a7e0:	mov	w11, #0x18                  	// #24
  44a7e4:	b	44a780 <_obstack_memory_used@@Base+0xc520>
  44a7e8:	cmp	x21, #0x3f
  44a7ec:	mov	x4, x27
  44a7f0:	mov	w11, #0x18                  	// #24
  44a7f4:	b.gt	44a810 <_obstack_memory_used@@Base+0xc5b0>
  44a7f8:	ldrh	w9, [x19]
  44a7fc:	ldr	w10, [sp, #12]
  44a800:	mov	w8, wzr
  44a804:	and	w9, w9, w10
  44a808:	strh	w9, [x19]
  44a80c:	b	44a780 <_obstack_memory_used@@Base+0xc520>
  44a810:	mov	w8, wzr
  44a814:	b	44a780 <_obstack_memory_used@@Base+0xc520>
  44a818:	tbz	w22, #1, 44a6c4 <_obstack_memory_used@@Base+0xc464>
  44a81c:	ldr	x8, [x8]
  44a820:	cmp	x8, x21
  44a824:	b.ne	44a6c4 <_obstack_memory_used@@Base+0xc464>  // b.any
  44a828:	mov	w24, wzr
  44a82c:	mov	w8, #0x1                   	// #1
  44a830:	b	44a85c <_obstack_memory_used@@Base+0xc5fc>
  44a834:	tbz	w22, #0, 44a6c4 <_obstack_memory_used@@Base+0xc464>
  44a838:	ldr	x8, [x8]
  44a83c:	cmp	x8, x21
  44a840:	b.ne	44a6c4 <_obstack_memory_used@@Base+0xc464>  // b.any
  44a844:	mov	w8, #0x1                   	// #1
  44a848:	mov	w24, #0xffffffff            	// #-1
  44a84c:	cbz	w8, 44a6cc <_obstack_memory_used@@Base+0xc46c>
  44a850:	b	44a868 <_obstack_memory_used@@Base+0xc608>
  44a854:	ldr	x12, [sp]
  44a858:	cbz	w8, 44a6c4 <_obstack_memory_used@@Base+0xc464>
  44a85c:	cbz	w8, 44a6cc <_obstack_memory_used@@Base+0xc46c>
  44a860:	b	44a868 <_obstack_memory_used@@Base+0xc608>
  44a864:	ldr	w24, [sp, #24]
  44a868:	mov	w0, w24
  44a86c:	ldp	x20, x19, [sp, #128]
  44a870:	ldp	x22, x21, [sp, #112]
  44a874:	ldp	x24, x23, [sp, #96]
  44a878:	ldp	x26, x25, [sp, #80]
  44a87c:	ldp	x28, x27, [sp, #64]
  44a880:	ldp	x29, x30, [sp, #48]
  44a884:	add	sp, sp, #0x90
  44a888:	ret
  44a88c:	stp	x29, x30, [sp, #-64]!
  44a890:	stp	x24, x23, [sp, #16]
  44a894:	stp	x22, x21, [sp, #32]
  44a898:	stp	x20, x19, [sp, #48]
  44a89c:	ldr	x21, [x0, #152]
  44a8a0:	mov	x20, x2
  44a8a4:	mov	x2, x0
  44a8a8:	mov	x23, x1
  44a8ac:	mov	x0, x21
  44a8b0:	mov	x1, x20
  44a8b4:	mov	x29, sp
  44a8b8:	mov	x22, x4
  44a8bc:	mov	x24, x3
  44a8c0:	bl	4484bc <_obstack_memory_used@@Base+0xa25c>
  44a8c4:	mov	w19, w0
  44a8c8:	cmp	w0, #0x1
  44a8cc:	b.lt	44a900 <_obstack_memory_used@@Base+0xc6a0>  // b.tstop
  44a8d0:	add	x8, x24, w19, sxtw
  44a8d4:	cmp	x8, x22
  44a8d8:	b.gt	44a900 <_obstack_memory_used@@Base+0xc6a0>
  44a8dc:	ldr	x9, [x23]
  44a8e0:	ldr	x8, [x9, x8, lsl #3]
  44a8e4:	cbz	x8, 44a8fc <_obstack_memory_used@@Base+0xc69c>
  44a8e8:	ldr	x9, [x21, #24]
  44a8ec:	add	x0, x8, #0x8
  44a8f0:	ldr	x1, [x9, x20, lsl #3]
  44a8f4:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44a8f8:	cbnz	x0, 44a900 <_obstack_memory_used@@Base+0xc6a0>
  44a8fc:	mov	w19, wzr
  44a900:	mov	w0, w19
  44a904:	ldp	x20, x19, [sp, #48]
  44a908:	ldp	x22, x21, [sp, #32]
  44a90c:	ldp	x24, x23, [sp, #16]
  44a910:	ldp	x29, x30, [sp], #64
  44a914:	ret
  44a918:	cbz	x0, 44a98c <_obstack_memory_used@@Base+0xc72c>
  44a91c:	stp	x29, x30, [sp, #-48]!
  44a920:	stp	x20, x19, [sp, #32]
  44a924:	ldr	x8, [x0]
  44a928:	mov	x19, x0
  44a92c:	ldr	x0, [x0, #16]
  44a930:	str	x21, [sp, #16]
  44a934:	cmp	x8, #0x1
  44a938:	mov	x29, sp
  44a93c:	b.lt	44a97c <_obstack_memory_used@@Base+0xc71c>  // b.tstop
  44a940:	mov	x20, xzr
  44a944:	mov	x21, xzr
  44a948:	add	x8, x0, x20
  44a94c:	ldr	x0, [x8, #40]
  44a950:	bl	4049d0 <free@plt>
  44a954:	ldr	x8, [x19, #16]
  44a958:	add	x8, x8, x20
  44a95c:	ldr	x0, [x8, #16]
  44a960:	bl	4049d0 <free@plt>
  44a964:	ldr	x8, [x19]
  44a968:	ldr	x0, [x19, #16]
  44a96c:	add	x21, x21, #0x1
  44a970:	add	x20, x20, #0x30
  44a974:	cmp	x21, x8
  44a978:	b.lt	44a948 <_obstack_memory_used@@Base+0xc6e8>  // b.tstop
  44a97c:	bl	4049d0 <free@plt>
  44a980:	ldp	x20, x19, [sp, #32]
  44a984:	ldr	x21, [sp, #16]
  44a988:	ldp	x29, x30, [sp], #48
  44a98c:	ret
  44a990:	stp	x29, x30, [sp, #-16]!
  44a994:	ldr	x8, [x0]
  44a998:	mov	x29, sp
  44a99c:	add	x8, x8, x3, lsl #4
  44a9a0:	ldr	w9, [x8, #8]
  44a9a4:	and	w10, w9, #0xff
  44a9a8:	cmp	w10, #0x9
  44a9ac:	b.eq	44a9dc <_obstack_memory_used@@Base+0xc77c>  // b.none
  44a9b0:	cmp	w10, #0x8
  44a9b4:	b.ne	44aa44 <_obstack_memory_used@@Base+0xc7e4>  // b.any
  44a9b8:	ldr	x8, [x8]
  44a9bc:	add	x8, x8, #0x1
  44a9c0:	cmp	x8, x5
  44a9c4:	b.ge	44aa44 <_obstack_memory_used@@Base+0xc7e4>  // b.tcont
  44a9c8:	add	x8, x1, x8, lsl #4
  44a9cc:	mov	x9, #0xffffffffffffffff    	// #-1
  44a9d0:	stp	x4, x9, [x8]
  44a9d4:	ldp	x29, x30, [sp], #16
  44a9d8:	ret
  44a9dc:	ldr	x8, [x8]
  44a9e0:	add	x8, x8, #0x1
  44a9e4:	cmp	x8, x5
  44a9e8:	b.ge	44aa44 <_obstack_memory_used@@Base+0xc7e4>  // b.tcont
  44a9ec:	lsl	x10, x8, #4
  44a9f0:	ldr	x11, [x1, x10]
  44a9f4:	cmp	x11, x4
  44a9f8:	b.ge	44aa10 <_obstack_memory_used@@Base+0xc7b0>  // b.tcont
  44a9fc:	add	x8, x1, x8, lsl #4
  44aa00:	str	x4, [x8, #8]
  44aa04:	lsl	x8, x5, #4
  44aa08:	mov	x0, x2
  44aa0c:	b	44aa2c <_obstack_memory_used@@Base+0xc7cc>
  44aa10:	tbz	w9, #19, 44aa3c <_obstack_memory_used@@Base+0xc7dc>
  44aa14:	ldr	x9, [x2, x10]
  44aa18:	cmn	x9, #0x1
  44aa1c:	b.eq	44aa3c <_obstack_memory_used@@Base+0xc7dc>  // b.none
  44aa20:	lsl	x8, x5, #4
  44aa24:	mov	x0, x1
  44aa28:	mov	x1, x2
  44aa2c:	mov	x2, x8
  44aa30:	bl	404110 <memcpy@plt>
  44aa34:	ldp	x29, x30, [sp], #16
  44aa38:	ret
  44aa3c:	add	x8, x1, x8, lsl #4
  44aa40:	str	x4, [x8, #8]
  44aa44:	ldp	x29, x30, [sp], #16
  44aa48:	ret
  44aa4c:	stp	x29, x30, [sp, #-48]!
  44aa50:	stp	x20, x19, [sp, #32]
  44aa54:	ldr	x9, [x0]
  44aa58:	str	x21, [sp, #16]
  44aa5c:	mov	x29, sp
  44aa60:	sub	x8, x9, #0x1
  44aa64:	cmp	x9, #0x0
  44aa68:	str	x8, [x0]
  44aa6c:	b.le	44aaec <_obstack_memory_used@@Base+0xc88c>
  44aa70:	ldr	x9, [x0, #16]
  44aa74:	add	x8, x8, x8, lsl #1
  44aa78:	lsl	x21, x8, #4
  44aa7c:	mov	x20, x0
  44aa80:	add	x8, x9, x21
  44aa84:	ldr	x9, [x8]
  44aa88:	lsl	x2, x2, #4
  44aa8c:	mov	x0, x3
  44aa90:	mov	x19, x4
  44aa94:	str	x9, [x1]
  44aa98:	ldr	x1, [x8, #16]
  44aa9c:	bl	404110 <memcpy@plt>
  44aaa0:	ldr	x0, [x19, #16]
  44aaa4:	bl	4049d0 <free@plt>
  44aaa8:	ldr	x8, [x20, #16]
  44aaac:	add	x8, x8, x21
  44aab0:	ldr	x0, [x8, #16]
  44aab4:	bl	4049d0 <free@plt>
  44aab8:	ldr	x8, [x20, #16]
  44aabc:	add	x8, x8, x21
  44aac0:	ldr	x9, [x8, #40]
  44aac4:	ldur	q0, [x8, #24]
  44aac8:	str	x9, [x19, #16]
  44aacc:	str	q0, [x19]
  44aad0:	ldr	x8, [x20, #16]
  44aad4:	ldp	x20, x19, [sp, #32]
  44aad8:	add	x8, x8, x21
  44aadc:	ldr	x0, [x8, #8]
  44aae0:	ldr	x21, [sp, #16]
  44aae4:	ldp	x29, x30, [sp], #48
  44aae8:	ret
  44aaec:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44aaf0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44aaf4:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44aaf8:	add	x0, x0, #0x843
  44aafc:	add	x1, x1, #0x6f7
  44ab00:	add	x3, x3, #0x84c
  44ab04:	mov	w2, #0x553                 	// #1363
  44ab08:	bl	404cf0 <__assert_fail@plt>
  44ab0c:	sub	sp, sp, #0x70
  44ab10:	stp	x29, x30, [sp, #16]
  44ab14:	stp	x28, x27, [sp, #32]
  44ab18:	stp	x26, x25, [sp, #48]
  44ab1c:	stp	x24, x23, [sp, #64]
  44ab20:	stp	x22, x21, [sp, #80]
  44ab24:	stp	x20, x19, [sp, #96]
  44ab28:	ldr	x24, [x0, #152]
  44ab2c:	mov	x28, x6
  44ab30:	mov	x19, x5
  44ab34:	mov	x22, x4
  44ab38:	ldr	x8, [x24]
  44ab3c:	mov	x21, x3
  44ab40:	mov	x25, x2
  44ab44:	mov	x23, x0
  44ab48:	add	x9, x8, x4, lsl #4
  44ab4c:	ldr	w9, [x9, #8]
  44ab50:	add	x29, sp, #0x10
  44ab54:	tbnz	w9, #3, 44abc8 <_obstack_memory_used@@Base+0xc968>
  44ab58:	tbnz	w9, #20, 44ace0 <_obstack_memory_used@@Base+0xca80>
  44ab5c:	and	w9, w9, #0xff
  44ab60:	cmp	w9, #0x4
  44ab64:	b.ne	44ad04 <_obstack_memory_used@@Base+0xcaa4>  // b.any
  44ab68:	lsl	x9, x22, #4
  44ab6c:	ldr	x8, [x8, x9]
  44ab70:	add	x9, x25, x8, lsl #4
  44ab74:	ldp	x9, x8, [x9, #16]
  44ab78:	sub	x25, x8, x9
  44ab7c:	cbz	x28, 44ad18 <_obstack_memory_used@@Base+0xcab8>
  44ab80:	mov	x26, #0xffffffffffffffff    	// #-1
  44ab84:	cmn	x8, #0x1
  44ab88:	mov	w8, #0x1                   	// #1
  44ab8c:	b.eq	44ad74 <_obstack_memory_used@@Base+0xcb14>  // b.none
  44ab90:	cmn	x9, #0x1
  44ab94:	b.eq	44ad74 <_obstack_memory_used@@Base+0xcb14>  // b.none
  44ab98:	cbz	x25, 44ad24 <_obstack_memory_used@@Base+0xcac4>
  44ab9c:	ldr	x8, [x23, #8]
  44aba0:	ldr	x10, [x21]
  44aba4:	mov	x2, x25
  44aba8:	add	x0, x8, x9
  44abac:	add	x1, x8, x10
  44abb0:	bl	4046d0 <bcmp@plt>
  44abb4:	cmp	w0, #0x0
  44abb8:	cset	w8, ne  // ne = any
  44abbc:	cbz	w0, 44ad18 <_obstack_memory_used@@Base+0xcab8>
  44abc0:	mov	x26, #0xffffffffffffffff    	// #-1
  44abc4:	b	44ad74 <_obstack_memory_used@@Base+0xcb14>
  44abc8:	ldr	x8, [x23, #184]
  44abcc:	ldr	x9, [x21]
  44abd0:	ldr	x20, [x24, #40]
  44abd4:	mov	x26, x1
  44abd8:	mov	x0, x19
  44abdc:	ldr	x23, [x8, x9, lsl #3]
  44abe0:	mov	x1, x22
  44abe4:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  44abe8:	tbz	w0, #0, 44ae1c <_obstack_memory_used@@Base+0xcbbc>
  44abec:	mov	w8, #0x18                  	// #24
  44abf0:	madd	x27, x22, x8, x20
  44abf4:	ldr	x8, [x27, #8]!
  44abf8:	cmp	x8, #0x1
  44abfc:	b.lt	44acfc <_obstack_memory_used@@Base+0xca9c>  // b.tstop
  44ac00:	mov	w8, #0x18                  	// #24
  44ac04:	madd	x8, x22, x8, x20
  44ac08:	stp	x25, x28, [sp]
  44ac0c:	mov	x28, xzr
  44ac10:	add	x23, x23, #0x8
  44ac14:	add	x20, x8, #0x10
  44ac18:	mov	x22, #0xffffffffffffffff    	// #-1
  44ac1c:	b	44ac30 <_obstack_memory_used@@Base+0xc9d0>
  44ac20:	ldr	x8, [x27]
  44ac24:	add	x28, x28, #0x1
  44ac28:	cmp	x28, x8
  44ac2c:	b.ge	44acd8 <_obstack_memory_used@@Base+0xca78>  // b.tcont
  44ac30:	ldr	x8, [x20]
  44ac34:	mov	x0, x23
  44ac38:	ldr	x24, [x8, x28, lsl #3]
  44ac3c:	mov	x1, x24
  44ac40:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44ac44:	cbz	x0, 44ac70 <_obstack_memory_used@@Base+0xca10>
  44ac48:	cmn	x22, #0x1
  44ac4c:	b.eq	44ac7c <_obstack_memory_used@@Base+0xca1c>  // b.none
  44ac50:	mov	x0, x19
  44ac54:	mov	x1, x22
  44ac58:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44ac5c:	cbz	x0, 44ac8c <_obstack_memory_used@@Base+0xca2c>
  44ac60:	mov	w8, #0x1                   	// #1
  44ac64:	mov	x25, x24
  44ac68:	cbnz	w8, 44acc8 <_obstack_memory_used@@Base+0xca68>
  44ac6c:	b	44ac20 <_obstack_memory_used@@Base+0xc9c0>
  44ac70:	mov	w8, #0x4                   	// #4
  44ac74:	cbnz	w8, 44acc8 <_obstack_memory_used@@Base+0xca68>
  44ac78:	b	44ac20 <_obstack_memory_used@@Base+0xc9c0>
  44ac7c:	mov	w8, wzr
  44ac80:	mov	x22, x24
  44ac84:	cbnz	w8, 44acc8 <_obstack_memory_used@@Base+0xca68>
  44ac88:	b	44ac20 <_obstack_memory_used@@Base+0xc9c0>
  44ac8c:	ldr	x0, [sp, #8]
  44ac90:	cbz	x0, 44acc0 <_obstack_memory_used@@Base+0xca60>
  44ac94:	ldr	x1, [x21]
  44ac98:	ldr	x4, [sp]
  44ac9c:	mov	x2, x24
  44aca0:	mov	x3, x26
  44aca4:	mov	x5, x19
  44aca8:	bl	44ae34 <_obstack_memory_used@@Base+0xcbd4>
  44acac:	cbz	w0, 44acc0 <_obstack_memory_used@@Base+0xca60>
  44acb0:	mov	x25, #0xfffffffffffffffe    	// #-2
  44acb4:	mov	w8, #0x1                   	// #1
  44acb8:	cbnz	w8, 44acc8 <_obstack_memory_used@@Base+0xca68>
  44acbc:	b	44ac20 <_obstack_memory_used@@Base+0xc9c0>
  44acc0:	mov	w8, #0x2                   	// #2
  44acc4:	cbz	w8, 44ac20 <_obstack_memory_used@@Base+0xc9c0>
  44acc8:	cmp	w8, #0x4
  44accc:	b.eq	44ac20 <_obstack_memory_used@@Base+0xc9c0>  // b.none
  44acd0:	cmp	w8, #0x2
  44acd4:	b.ne	44ad0c <_obstack_memory_used@@Base+0xcaac>  // b.any
  44acd8:	mov	x0, x22
  44acdc:	b	44adf4 <_obstack_memory_used@@Base+0xcb94>
  44ace0:	ldr	x3, [x21]
  44ace4:	mov	x0, x24
  44ace8:	mov	x1, x22
  44acec:	mov	x2, x23
  44acf0:	bl	4484bc <_obstack_memory_used@@Base+0xa25c>
  44acf4:	sxtw	x25, w0
  44acf8:	b	44ad78 <_obstack_memory_used@@Base+0xcb18>
  44acfc:	mov	x0, #0xffffffffffffffff    	// #-1
  44ad00:	b	44adf4 <_obstack_memory_used@@Base+0xcb94>
  44ad04:	mov	x25, xzr
  44ad08:	b	44ad78 <_obstack_memory_used@@Base+0xcb18>
  44ad0c:	mov	x22, x25
  44ad10:	mov	x0, x25
  44ad14:	b	44adf4 <_obstack_memory_used@@Base+0xcb94>
  44ad18:	cbz	x25, 44ad24 <_obstack_memory_used@@Base+0xcac4>
  44ad1c:	mov	x26, #0xffffffffffffffff    	// #-1
  44ad20:	b	44ad70 <_obstack_memory_used@@Base+0xcb10>
  44ad24:	mov	x0, x19
  44ad28:	mov	x1, x22
  44ad2c:	bl	444b54 <_obstack_memory_used@@Base+0x68f4>
  44ad30:	tbz	w0, #0, 44ae24 <_obstack_memory_used@@Base+0xcbc4>
  44ad34:	ldr	x8, [x24, #40]
  44ad38:	mov	w9, #0x18                  	// #24
  44ad3c:	ldr	x10, [x23, #184]
  44ad40:	madd	x8, x22, x9, x8
  44ad44:	ldr	x9, [x21]
  44ad48:	ldr	x8, [x8, #16]
  44ad4c:	ldr	x9, [x10, x9, lsl #3]
  44ad50:	ldr	x26, [x8]
  44ad54:	add	x0, x9, #0x8
  44ad58:	mov	x1, x26
  44ad5c:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44ad60:	cmp	x0, #0x0
  44ad64:	cset	w8, ne  // ne = any
  44ad68:	csinv	x26, x26, xzr, ne  // ne = any
  44ad6c:	cbnz	w8, 44ad74 <_obstack_memory_used@@Base+0xcb14>
  44ad70:	mov	w8, wzr
  44ad74:	cbnz	w8, 44adec <_obstack_memory_used@@Base+0xcb8c>
  44ad78:	cbnz	x25, 44ad94 <_obstack_memory_used@@Base+0xcb34>
  44ad7c:	ldr	x8, [x24]
  44ad80:	ldr	x2, [x21]
  44ad84:	mov	x0, x23
  44ad88:	add	x1, x8, x22, lsl #4
  44ad8c:	bl	44879c <_obstack_memory_used@@Base+0xa53c>
  44ad90:	tbz	w0, #0, 44ae14 <_obstack_memory_used@@Base+0xcbb4>
  44ad94:	ldr	x8, [x24, #24]
  44ad98:	ldr	x9, [x21]
  44ad9c:	cmp	x25, #0x0
  44ada0:	ldr	x26, [x8, x22, lsl #3]
  44ada4:	csinc	x8, x25, xzr, ne  // ne = any
  44ada8:	add	x8, x9, x8
  44adac:	str	x8, [x21]
  44adb0:	cbz	x28, 44addc <_obstack_memory_used@@Base+0xcb7c>
  44adb4:	ldr	x9, [x23, #168]
  44adb8:	cmp	x8, x9
  44adbc:	b.gt	44ade4 <_obstack_memory_used@@Base+0xcb84>
  44adc0:	ldr	x9, [x23, #184]
  44adc4:	ldr	x8, [x9, x8, lsl #3]
  44adc8:	cbz	x8, 44ade4 <_obstack_memory_used@@Base+0xcb84>
  44adcc:	add	x0, x8, #0x8
  44add0:	mov	x1, x26
  44add4:	bl	444e30 <_obstack_memory_used@@Base+0x6bd0>
  44add8:	cbz	x0, 44ade4 <_obstack_memory_used@@Base+0xcb84>
  44addc:	str	xzr, [x19, #8]
  44ade0:	b	44ade8 <_obstack_memory_used@@Base+0xcb88>
  44ade4:	mov	x26, #0xffffffffffffffff    	// #-1
  44ade8:	mov	w8, #0x1                   	// #1
  44adec:	cmp	w8, #0x0
  44adf0:	csinv	x0, x26, xzr, ne  // ne = any
  44adf4:	ldp	x20, x19, [sp, #96]
  44adf8:	ldp	x22, x21, [sp, #80]
  44adfc:	ldp	x24, x23, [sp, #64]
  44ae00:	ldp	x26, x25, [sp, #48]
  44ae04:	ldp	x28, x27, [sp, #32]
  44ae08:	ldp	x29, x30, [sp, #16]
  44ae0c:	add	sp, sp, #0x70
  44ae10:	ret
  44ae14:	mov	w8, wzr
  44ae18:	b	44adec <_obstack_memory_used@@Base+0xcb8c>
  44ae1c:	mov	x0, #0xfffffffffffffffe    	// #-2
  44ae20:	b	44adf4 <_obstack_memory_used@@Base+0xcb94>
  44ae24:	mov	x26, #0xfffffffffffffffe    	// #-2
  44ae28:	mov	w8, #0x1                   	// #1
  44ae2c:	cbnz	w8, 44ad74 <_obstack_memory_used@@Base+0xcb14>
  44ae30:	b	44ad70 <_obstack_memory_used@@Base+0xcb10>
  44ae34:	stp	x29, x30, [sp, #-80]!
  44ae38:	stp	x26, x25, [sp, #16]
  44ae3c:	stp	x24, x23, [sp, #32]
  44ae40:	stp	x22, x21, [sp, #48]
  44ae44:	stp	x20, x19, [sp, #64]
  44ae48:	ldp	x25, x8, [x0]
  44ae4c:	mov	x19, x5
  44ae50:	mov	x21, x4
  44ae54:	mov	x22, x3
  44ae58:	add	x9, x25, #0x1
  44ae5c:	mov	x23, x2
  44ae60:	mov	x24, x1
  44ae64:	mov	x20, x0
  44ae68:	cmp	x9, x8
  44ae6c:	mov	x29, sp
  44ae70:	str	x9, [x0]
  44ae74:	b.ne	44ae98 <_obstack_memory_used@@Base+0xcc38>  // b.any
  44ae78:	ldr	x0, [x20, #16]
  44ae7c:	add	x8, x8, x8, lsl #1
  44ae80:	lsl	x1, x8, #5
  44ae84:	bl	404730 <realloc@plt>
  44ae88:	cbz	x0, 44aee4 <_obstack_memory_used@@Base+0xcc84>
  44ae8c:	ldr	x8, [x20, #8]
  44ae90:	lsl	x8, x8, #1
  44ae94:	stp	x8, x0, [x20, #8]
  44ae98:	ldr	x8, [x20, #16]
  44ae9c:	mov	w9, #0x30                  	// #48
  44aea0:	lsl	x22, x22, #4
  44aea4:	mov	x0, x22
  44aea8:	madd	x26, x25, x9, x8
  44aeac:	stp	x24, x23, [x26]
  44aeb0:	bl	4044f0 <malloc@plt>
  44aeb4:	str	x0, [x26, #16]
  44aeb8:	cbz	x0, 44aee4 <_obstack_memory_used@@Base+0xcc84>
  44aebc:	mov	x1, x21
  44aec0:	mov	x2, x22
  44aec4:	bl	404110 <memcpy@plt>
  44aec8:	ldr	x8, [x20, #16]
  44aecc:	mov	w9, #0x30                  	// #48
  44aed0:	mov	x1, x19
  44aed4:	madd	x8, x25, x9, x8
  44aed8:	add	x0, x8, #0x18
  44aedc:	bl	444db4 <_obstack_memory_used@@Base+0x6b54>
  44aee0:	b	44aee8 <_obstack_memory_used@@Base+0xcc88>
  44aee4:	mov	w0, #0xc                   	// #12
  44aee8:	ldp	x20, x19, [sp, #64]
  44aeec:	ldp	x22, x21, [sp, #48]
  44aef0:	ldp	x24, x23, [sp, #32]
  44aef4:	ldp	x26, x25, [sp, #16]
  44aef8:	ldp	x29, x30, [sp], #80
  44aefc:	ret
  44af00:	stp	x29, x30, [sp, #-48]!
  44af04:	stp	x20, x19, [sp, #32]
  44af08:	mov	x19, x0
  44af0c:	str	x21, [sp, #16]
  44af10:	mov	x29, sp
  44af14:	cbz	x0, 44af28 <_obstack_memory_used@@Base+0xccc8>
  44af18:	mov	x0, x19
  44af1c:	bl	404190 <strlen@plt>
  44af20:	add	x20, x0, #0x1
  44af24:	b	44af2c <_obstack_memory_used@@Base+0xcccc>
  44af28:	mov	x20, xzr
  44af2c:	add	x8, x20, #0x11
  44af30:	cmp	x20, #0x77
  44af34:	and	x8, x8, #0xfffffffffffffff8
  44af38:	mov	w9, #0x80                  	// #128
  44af3c:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  44af40:	bl	4044f0 <malloc@plt>
  44af44:	mov	x21, x0
  44af48:	cbz	x0, 44af74 <_obstack_memory_used@@Base+0xcd14>
  44af4c:	cmp	x19, #0x0
  44af50:	mov	x0, x21
  44af54:	cset	w8, ne  // ne = any
  44af58:	str	xzr, [x21]
  44af5c:	strb	w8, [x21, #8]
  44af60:	strb	wzr, [x0, #9]!
  44af64:	cbz	x19, 44af74 <_obstack_memory_used@@Base+0xcd14>
  44af68:	mov	x1, x19
  44af6c:	mov	x2, x20
  44af70:	bl	44af88 <_obstack_memory_used@@Base+0xcd28>
  44af74:	mov	x0, x21
  44af78:	ldp	x20, x19, [sp, #32]
  44af7c:	ldr	x21, [sp, #16]
  44af80:	ldp	x29, x30, [sp], #48
  44af84:	ret
  44af88:	stp	x29, x30, [sp, #-32]!
  44af8c:	stp	x20, x19, [sp, #16]
  44af90:	mov	x29, sp
  44af94:	mov	x19, x2
  44af98:	mov	x20, x0
  44af9c:	bl	404110 <memcpy@plt>
  44afa0:	strb	wzr, [x20, x19]
  44afa4:	ldp	x20, x19, [sp, #16]
  44afa8:	ldp	x29, x30, [sp], #32
  44afac:	ret
  44afb0:	stp	x29, x30, [sp, #-32]!
  44afb4:	cmp	x0, #0x2
  44afb8:	str	x19, [sp, #16]
  44afbc:	mov	x29, sp
  44afc0:	b.cc	44afd4 <_obstack_memory_used@@Base+0xcd74>  // b.lo, b.ul, b.last
  44afc4:	ldr	x19, [x0]
  44afc8:	bl	4049d0 <free@plt>
  44afcc:	mov	x0, x19
  44afd0:	cbnz	x19, 44afc4 <_obstack_memory_used@@Base+0xcd64>
  44afd4:	ldr	x19, [sp, #16]
  44afd8:	ldp	x29, x30, [sp], #32
  44afdc:	ret
  44afe0:	stp	x29, x30, [sp, #-48]!
  44afe4:	stp	x22, x21, [sp, #16]
  44afe8:	stp	x20, x19, [sp, #32]
  44afec:	mov	x19, x2
  44aff0:	mov	x22, x1
  44aff4:	mov	x29, sp
  44aff8:	cbz	x0, 44b030 <_obstack_memory_used@@Base+0xcdd0>
  44affc:	mov	x21, x0
  44b000:	bl	44b068 <_obstack_memory_used@@Base+0xce08>
  44b004:	cbz	x0, 44b058 <_obstack_memory_used@@Base+0xcdf8>
  44b008:	mov	x20, x0
  44b00c:	mov	x0, x22
  44b010:	mov	x1, x19
  44b014:	bl	4042a0 <localtime_r@plt>
  44b018:	cbz	x0, 44b040 <_obstack_memory_used@@Base+0xcde0>
  44b01c:	mov	x0, x21
  44b020:	mov	x1, x19
  44b024:	bl	44b0f8 <_obstack_memory_used@@Base+0xce98>
  44b028:	eor	w21, w0, #0x1
  44b02c:	b	44b044 <_obstack_memory_used@@Base+0xcde4>
  44b030:	mov	x0, x22
  44b034:	mov	x1, x19
  44b038:	bl	404640 <gmtime_r@plt>
  44b03c:	b	44b058 <_obstack_memory_used@@Base+0xcdf8>
  44b040:	mov	w21, #0x1                   	// #1
  44b044:	mov	x0, x20
  44b048:	bl	44b240 <_obstack_memory_used@@Base+0xcfe0>
  44b04c:	orn	w8, w21, w0
  44b050:	tst	w8, #0x1
  44b054:	csel	x0, xzr, x19, ne  // ne = any
  44b058:	ldp	x20, x19, [sp, #32]
  44b05c:	ldp	x22, x21, [sp, #16]
  44b060:	ldp	x29, x30, [sp], #48
  44b064:	ret
  44b068:	stp	x29, x30, [sp, #-48]!
  44b06c:	str	x21, [sp, #16]
  44b070:	stp	x20, x19, [sp, #32]
  44b074:	mov	x29, sp
  44b078:	mov	x20, x0
  44b07c:	bl	44b3d0 <_obstack_memory_used@@Base+0xd170>
  44b080:	ldrb	w8, [x20, #8]
  44b084:	mov	x19, x0
  44b088:	cbz	x0, 44b0a8 <_obstack_memory_used@@Base+0xce48>
  44b08c:	cbz	w8, 44b0ac <_obstack_memory_used@@Base+0xce4c>
  44b090:	add	x0, x20, #0x9
  44b094:	mov	x1, x19
  44b098:	bl	404920 <strcmp@plt>
  44b09c:	cbnz	w0, 44b0ac <_obstack_memory_used@@Base+0xce4c>
  44b0a0:	mov	w19, #0x1                   	// #1
  44b0a4:	b	44b0e4 <_obstack_memory_used@@Base+0xce84>
  44b0a8:	cbz	w8, 44b0a0 <_obstack_memory_used@@Base+0xce40>
  44b0ac:	mov	x0, x19
  44b0b0:	bl	44af00 <_obstack_memory_used@@Base+0xcca0>
  44b0b4:	mov	x19, x0
  44b0b8:	cbz	x0, 44b0e4 <_obstack_memory_used@@Base+0xce84>
  44b0bc:	mov	x0, x20
  44b0c0:	bl	44b3ec <_obstack_memory_used@@Base+0xd18c>
  44b0c4:	tbnz	w0, #0, 44b0e4 <_obstack_memory_used@@Base+0xce84>
  44b0c8:	bl	404d00 <__errno_location@plt>
  44b0cc:	ldr	w21, [x0]
  44b0d0:	mov	x20, x0
  44b0d4:	mov	x0, x19
  44b0d8:	bl	44afb0 <_obstack_memory_used@@Base+0xcd50>
  44b0dc:	mov	x19, xzr
  44b0e0:	str	w21, [x20]
  44b0e4:	mov	x0, x19
  44b0e8:	ldp	x20, x19, [sp, #32]
  44b0ec:	ldr	x21, [sp, #16]
  44b0f0:	ldp	x29, x30, [sp], #48
  44b0f4:	ret
  44b0f8:	stp	x29, x30, [sp, #-64]!
  44b0fc:	stp	x22, x21, [sp, #32]
  44b100:	stp	x20, x19, [sp, #48]
  44b104:	ldr	x21, [x1, #48]
  44b108:	str	x23, [sp, #16]
  44b10c:	mov	x29, sp
  44b110:	cbz	x21, 44b1a0 <_obstack_memory_used@@Base+0xcf40>
  44b114:	mov	x19, x1
  44b118:	mov	x22, x0
  44b11c:	cmp	x21, x1
  44b120:	b.cc	44b130 <_obstack_memory_used@@Base+0xced0>  // b.lo, b.ul, b.last
  44b124:	add	x8, x19, #0x38
  44b128:	cmp	x21, x8
  44b12c:	b.cc	44b1a0 <_obstack_memory_used@@Base+0xcf40>  // b.lo, b.ul, b.last
  44b130:	ldrb	w8, [x21]
  44b134:	cbz	w8, 44b194 <_obstack_memory_used@@Base+0xcf34>
  44b138:	add	x20, x22, #0x9
  44b13c:	mov	x0, x20
  44b140:	mov	x1, x21
  44b144:	bl	404920 <strcmp@plt>
  44b148:	cbz	w0, 44b19c <_obstack_memory_used@@Base+0xcf3c>
  44b14c:	ldrb	w8, [x20]
  44b150:	cbnz	w8, 44b168 <_obstack_memory_used@@Base+0xcf08>
  44b154:	add	x8, x22, #0x9
  44b158:	subs	x23, x20, x8
  44b15c:	b.ne	44b1b8 <_obstack_memory_used@@Base+0xcf58>  // b.any
  44b160:	ldrb	w8, [x22, #8]
  44b164:	cbz	w8, 44b1b8 <_obstack_memory_used@@Base+0xcf58>
  44b168:	mov	x0, x20
  44b16c:	bl	404190 <strlen@plt>
  44b170:	add	x20, x0, x20
  44b174:	ldrb	w8, [x20, #1]!
  44b178:	cbnz	w8, 44b13c <_obstack_memory_used@@Base+0xcedc>
  44b17c:	ldr	x8, [x22]
  44b180:	add	x9, x8, #0x9
  44b184:	cmp	x8, #0x0
  44b188:	csel	x20, x20, x9, eq  // eq = none
  44b18c:	csel	x22, x22, x8, eq  // eq = none
  44b190:	b	44b13c <_obstack_memory_used@@Base+0xcedc>
  44b194:	adrp	x20, 456000 <_obstack_memory_used@@Base+0x17da0>
  44b198:	add	x20, x20, #0xd3e
  44b19c:	str	x20, [x19, #48]
  44b1a0:	mov	w0, #0x1                   	// #1
  44b1a4:	ldp	x20, x19, [sp, #48]
  44b1a8:	ldp	x22, x21, [sp, #32]
  44b1ac:	ldr	x23, [sp, #16]
  44b1b0:	ldp	x29, x30, [sp], #64
  44b1b4:	ret
  44b1b8:	mov	x0, x21
  44b1bc:	bl	404190 <strlen@plt>
  44b1c0:	add	x2, x0, #0x1
  44b1c4:	mvn	x8, x23
  44b1c8:	cmp	x2, x8
  44b1cc:	b.ls	44b1e8 <_obstack_memory_used@@Base+0xcf88>  // b.plast
  44b1d0:	bl	404d00 <__errno_location@plt>
  44b1d4:	mov	w9, #0xc                   	// #12
  44b1d8:	mov	w8, wzr
  44b1dc:	str	w9, [x0]
  44b1e0:	tbnz	w8, #0, 44b19c <_obstack_memory_used@@Base+0xcf3c>
  44b1e4:	b	44b238 <_obstack_memory_used@@Base+0xcfd8>
  44b1e8:	add	x8, x2, x23
  44b1ec:	cmp	x8, #0x76
  44b1f0:	b.hi	44b20c <_obstack_memory_used@@Base+0xcfac>  // b.pmore
  44b1f4:	mov	x0, x20
  44b1f8:	mov	x1, x21
  44b1fc:	bl	44af88 <_obstack_memory_used@@Base+0xcd28>
  44b200:	mov	w8, #0x1                   	// #1
  44b204:	tbnz	w8, #0, 44b19c <_obstack_memory_used@@Base+0xcf3c>
  44b208:	b	44b238 <_obstack_memory_used@@Base+0xcfd8>
  44b20c:	mov	x0, x21
  44b210:	bl	44af00 <_obstack_memory_used@@Base+0xcca0>
  44b214:	str	x0, [x22]
  44b218:	cbz	x0, 44b230 <_obstack_memory_used@@Base+0xcfd0>
  44b21c:	add	x20, x0, #0x9
  44b220:	strb	wzr, [x0, #8]
  44b224:	mov	w8, #0x1                   	// #1
  44b228:	tbnz	w8, #0, 44b19c <_obstack_memory_used@@Base+0xcf3c>
  44b22c:	b	44b238 <_obstack_memory_used@@Base+0xcfd8>
  44b230:	mov	w8, wzr
  44b234:	tbnz	w8, #0, 44b19c <_obstack_memory_used@@Base+0xcf3c>
  44b238:	mov	w0, wzr
  44b23c:	b	44b1a4 <_obstack_memory_used@@Base+0xcf44>
  44b240:	stp	x29, x30, [sp, #-48]!
  44b244:	cmp	x0, #0x1
  44b248:	stp	x22, x21, [sp, #16]
  44b24c:	stp	x20, x19, [sp, #32]
  44b250:	mov	x29, sp
  44b254:	b.eq	44b28c <_obstack_memory_used@@Base+0xd02c>  // b.none
  44b258:	mov	x19, x0
  44b25c:	bl	404d00 <__errno_location@plt>
  44b260:	ldr	w22, [x0]
  44b264:	mov	x21, x0
  44b268:	mov	x0, x19
  44b26c:	bl	44b3ec <_obstack_memory_used@@Base+0xd18c>
  44b270:	mov	w20, w0
  44b274:	tbnz	w0, #0, 44b27c <_obstack_memory_used@@Base+0xd01c>
  44b278:	ldr	w22, [x21]
  44b27c:	mov	x0, x19
  44b280:	bl	44afb0 <_obstack_memory_used@@Base+0xcd50>
  44b284:	str	w22, [x21]
  44b288:	b	44b290 <_obstack_memory_used@@Base+0xd030>
  44b28c:	mov	w20, #0x1                   	// #1
  44b290:	and	w0, w20, #0x1
  44b294:	ldp	x20, x19, [sp, #32]
  44b298:	ldp	x22, x21, [sp, #16]
  44b29c:	ldp	x29, x30, [sp], #48
  44b2a0:	ret
  44b2a4:	sub	sp, sp, #0x70
  44b2a8:	stp	x20, x19, [sp, #96]
  44b2ac:	mov	x19, x1
  44b2b0:	stp	x29, x30, [sp, #64]
  44b2b4:	str	x21, [sp, #80]
  44b2b8:	add	x29, sp, #0x40
  44b2bc:	cbz	x0, 44b300 <_obstack_memory_used@@Base+0xd0a0>
  44b2c0:	mov	x21, x0
  44b2c4:	bl	44b068 <_obstack_memory_used@@Base+0xce08>
  44b2c8:	cbz	x0, 44b340 <_obstack_memory_used@@Base+0xd0e0>
  44b2cc:	mov	x20, x0
  44b2d0:	mov	x0, x19
  44b2d4:	bl	404810 <mktime@plt>
  44b2d8:	cmn	x0, #0x1
  44b2dc:	str	x0, [x29, #24]
  44b2e0:	b.eq	44b30c <_obstack_memory_used@@Base+0xd0ac>  // b.none
  44b2e4:	mov	x0, x21
  44b2e8:	mov	x1, x19
  44b2ec:	bl	44b0f8 <_obstack_memory_used@@Base+0xce98>
  44b2f0:	tbnz	w0, #0, 44b32c <_obstack_memory_used@@Base+0xd0cc>
  44b2f4:	mov	x8, #0xffffffffffffffff    	// #-1
  44b2f8:	str	x8, [x29, #24]
  44b2fc:	b	44b32c <_obstack_memory_used@@Base+0xd0cc>
  44b300:	mov	x0, x19
  44b304:	bl	404d70 <timegm@plt>
  44b308:	b	44b344 <_obstack_memory_used@@Base+0xd0e4>
  44b30c:	add	x0, x29, #0x18
  44b310:	add	x1, sp, #0x8
  44b314:	bl	4042a0 <localtime_r@plt>
  44b318:	cbz	x0, 44b32c <_obstack_memory_used@@Base+0xd0cc>
  44b31c:	add	x1, sp, #0x8
  44b320:	mov	x0, x19
  44b324:	bl	44b358 <_obstack_memory_used@@Base+0xd0f8>
  44b328:	cbnz	w0, 44b2e4 <_obstack_memory_used@@Base+0xd084>
  44b32c:	mov	x0, x20
  44b330:	bl	44b240 <_obstack_memory_used@@Base+0xcfe0>
  44b334:	tbz	w0, #0, 44b340 <_obstack_memory_used@@Base+0xd0e0>
  44b338:	ldr	x0, [x29, #24]
  44b33c:	b	44b344 <_obstack_memory_used@@Base+0xd0e4>
  44b340:	mov	x0, #0xffffffffffffffff    	// #-1
  44b344:	ldp	x20, x19, [sp, #96]
  44b348:	ldr	x21, [sp, #80]
  44b34c:	ldp	x29, x30, [sp, #64]
  44b350:	add	sp, sp, #0x70
  44b354:	ret
  44b358:	stp	x29, x30, [sp, #-32]!
  44b35c:	str	x19, [sp, #16]
  44b360:	ldp	w8, w9, [x0]
  44b364:	ldp	w10, w11, [x1]
  44b368:	ldp	w12, w13, [x0, #8]
  44b36c:	ldp	w14, w15, [x1, #8]
  44b370:	mov	x29, sp
  44b374:	eor	w8, w10, w8
  44b378:	eor	w9, w11, w9
  44b37c:	eor	w11, w14, w12
  44b380:	ldp	w12, w14, [x0, #16]
  44b384:	eor	w13, w15, w13
  44b388:	ldp	w10, w15, [x1, #16]
  44b38c:	orr	w8, w9, w8
  44b390:	ldr	w0, [x0, #32]
  44b394:	ldr	w1, [x1, #32]
  44b398:	orr	w8, w8, w11
  44b39c:	eor	w10, w10, w12
  44b3a0:	orr	w8, w8, w13
  44b3a4:	orr	w8, w8, w10
  44b3a8:	eor	w9, w15, w14
  44b3ac:	orr	w19, w8, w9
  44b3b0:	bl	44b464 <_obstack_memory_used@@Base+0xd204>
  44b3b4:	and	w8, w0, #0x1
  44b3b8:	orr	w8, w19, w8
  44b3bc:	ldr	x19, [sp, #16]
  44b3c0:	cmp	w8, #0x0
  44b3c4:	cset	w0, eq  // eq = none
  44b3c8:	ldp	x29, x30, [sp], #32
  44b3cc:	ret
  44b3d0:	stp	x29, x30, [sp, #-16]!
  44b3d4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x19da0>
  44b3d8:	add	x0, x0, #0xf22
  44b3dc:	mov	x29, sp
  44b3e0:	bl	404d30 <getenv@plt>
  44b3e4:	ldp	x29, x30, [sp], #16
  44b3e8:	ret
  44b3ec:	stp	x29, x30, [sp, #-16]!
  44b3f0:	ldrb	w8, [x0, #8]
  44b3f4:	add	x9, x0, #0x9
  44b3f8:	mov	x29, sp
  44b3fc:	cmp	w8, #0x0
  44b400:	csel	x0, xzr, x9, eq  // eq = none
  44b404:	bl	44b428 <_obstack_memory_used@@Base+0xd1c8>
  44b408:	cbz	w0, 44b418 <_obstack_memory_used@@Base+0xd1b8>
  44b40c:	mov	w0, wzr
  44b410:	ldp	x29, x30, [sp], #16
  44b414:	ret
  44b418:	bl	404550 <tzset@plt>
  44b41c:	mov	w0, #0x1                   	// #1
  44b420:	ldp	x29, x30, [sp], #16
  44b424:	ret
  44b428:	stp	x29, x30, [sp, #-16]!
  44b42c:	mov	x29, sp
  44b430:	cbz	x0, 44b450 <_obstack_memory_used@@Base+0xd1f0>
  44b434:	mov	x1, x0
  44b438:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x19da0>
  44b43c:	add	x0, x0, #0xf22
  44b440:	mov	w2, #0x1                   	// #1
  44b444:	bl	4042b0 <setenv@plt>
  44b448:	ldp	x29, x30, [sp], #16
  44b44c:	ret
  44b450:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x19da0>
  44b454:	add	x0, x0, #0xf22
  44b458:	bl	404b40 <unsetenv@plt>
  44b45c:	ldp	x29, x30, [sp], #16
  44b460:	ret
  44b464:	cmp	w0, #0x0
  44b468:	orr	w8, w1, w0
  44b46c:	cset	w9, eq  // eq = none
  44b470:	cmp	w1, #0x0
  44b474:	cset	w10, eq  // eq = none
  44b478:	cmp	w8, #0x0
  44b47c:	eor	w8, w9, w10
  44b480:	cset	w9, ge  // ge = tcont
  44b484:	and	w0, w9, w8
  44b488:	ret
  44b48c:	mov	w8, w0
  44b490:	cmp	w0, #0x26
  44b494:	mov	w0, wzr
  44b498:	b.hi	44b4b8 <_obstack_memory_used@@Base+0xd258>  // b.pmore
  44b49c:	mov	w9, w8
  44b4a0:	mov	w10, #0x1                   	// #1
  44b4a4:	lsl	x9, x10, x9
  44b4a8:	mov	x10, #0x410000              	// #4259840
  44b4ac:	movk	x10, #0x40, lsl #32
  44b4b0:	tst	x9, x10
  44b4b4:	b.ne	44b4c0 <_obstack_memory_used@@Base+0xd260>  // b.any
  44b4b8:	cmp	w8, #0x5f
  44b4bc:	b.ne	44b4c4 <_obstack_memory_used@@Base+0xd264>  // b.any
  44b4c0:	ret
  44b4c4:	mov	w0, #0x1                   	// #1
  44b4c8:	ret
  44b4cc:	stp	x29, x30, [sp, #-64]!
  44b4d0:	str	x23, [sp, #16]
  44b4d4:	mov	x23, x0
  44b4d8:	mov	w0, #0x48                  	// #72
  44b4dc:	stp	x22, x21, [sp, #32]
  44b4e0:	stp	x20, x19, [sp, #48]
  44b4e4:	mov	x29, sp
  44b4e8:	mov	x20, x3
  44b4ec:	mov	x21, x2
  44b4f0:	mov	x22, x1
  44b4f4:	bl	4044f0 <malloc@plt>
  44b4f8:	mov	x19, x0
  44b4fc:	cbz	x0, 44b534 <_obstack_memory_used@@Base+0xd2d4>
  44b500:	mov	w0, #0xc8                  	// #200
  44b504:	stp	x23, x22, [x19]
  44b508:	stp	x21, x20, [x19, #16]
  44b50c:	stp	xzr, xzr, [x19, #32]
  44b510:	bl	4044f0 <malloc@plt>
  44b514:	str	x0, [x19, #48]
  44b518:	cbz	x0, 44b528 <_obstack_memory_used@@Base+0xd2c8>
  44b51c:	add	x8, x0, #0xc8
  44b520:	stp	x0, x8, [x19, #56]
  44b524:	b	44b534 <_obstack_memory_used@@Base+0xd2d4>
  44b528:	mov	x0, x19
  44b52c:	bl	4049d0 <free@plt>
  44b530:	mov	x19, xzr
  44b534:	mov	x0, x19
  44b538:	ldp	x20, x19, [sp, #48]
  44b53c:	ldp	x22, x21, [sp, #32]
  44b540:	ldr	x23, [sp, #16]
  44b544:	ldp	x29, x30, [sp], #64
  44b548:	ret
  44b54c:	stp	x29, x30, [sp, #-32]!
  44b550:	str	x19, [sp, #16]
  44b554:	mov	x29, sp
  44b558:	mov	x19, x0
  44b55c:	bl	44b59c <_obstack_memory_used@@Base+0xd33c>
  44b560:	ldp	x0, x8, [x19, #48]
  44b564:	cmp	x8, x0
  44b568:	b.ls	44b580 <_obstack_memory_used@@Base+0xd320>  // b.plast
  44b56c:	ldr	x8, [x19, #56]
  44b570:	ldr	x3, [x19]
  44b574:	mov	w1, #0x1                   	// #1
  44b578:	sub	x2, x8, x0
  44b57c:	bl	404170 <fwrite_unlocked@plt>
  44b580:	ldr	x0, [x19, #48]
  44b584:	bl	4049d0 <free@plt>
  44b588:	mov	x0, x19
  44b58c:	bl	4049d0 <free@plt>
  44b590:	ldr	x19, [sp, #16]
  44b594:	ldp	x29, x30, [sp], #32
  44b598:	ret
  44b59c:	sub	sp, sp, #0x70
  44b5a0:	stp	x29, x30, [sp, #16]
  44b5a4:	stp	x28, x27, [sp, #32]
  44b5a8:	stp	x26, x25, [sp, #48]
  44b5ac:	stp	x24, x23, [sp, #64]
  44b5b0:	stp	x22, x21, [sp, #80]
  44b5b4:	stp	x20, x19, [sp, #96]
  44b5b8:	ldr	x8, [x0, #48]
  44b5bc:	ldr	x9, [x0, #32]
  44b5c0:	mov	x19, x0
  44b5c4:	add	x29, sp, #0x10
  44b5c8:	add	x25, x8, x9
  44b5cc:	b	44b5e4 <_obstack_memory_used@@Base+0xd384>
  44b5d0:	str	xzr, [x19, #40]
  44b5d4:	add	x25, x24, #0x1
  44b5d8:	mov	w8, #0x2                   	// #2
  44b5dc:	cmp	w8, #0x3
  44b5e0:	b.eq	44ba0c <_obstack_memory_used@@Base+0xd7ac>  // b.none
  44b5e4:	ldr	x8, [x19, #56]
  44b5e8:	cmp	x25, x8
  44b5ec:	b.cs	44ba0c <_obstack_memory_used@@Base+0xd7ac>  // b.hs, b.nlast
  44b5f0:	ldr	x9, [x19, #40]
  44b5f4:	cbnz	x9, 44b664 <_obstack_memory_used@@Base+0xd404>
  44b5f8:	ldr	x21, [x19, #8]
  44b5fc:	cbz	x21, 44b664 <_obstack_memory_used@@Base+0xd404>
  44b600:	ldr	x9, [x19, #64]
  44b604:	add	x10, x8, x21
  44b608:	mov	x20, x21
  44b60c:	cmp	x10, x9
  44b610:	b.cs	44b64c <_obstack_memory_used@@Base+0xd3ec>  // b.hs, b.nlast
  44b614:	add	x22, x25, x21
  44b618:	sub	x2, x8, x25
  44b61c:	mov	x0, x22
  44b620:	mov	x1, x25
  44b624:	bl	404120 <memmove@plt>
  44b628:	ldr	x8, [x19, #56]
  44b62c:	mov	w1, #0x20                  	// #32
  44b630:	mov	x0, x25
  44b634:	mov	x2, x21
  44b638:	add	x8, x8, x21
  44b63c:	str	x8, [x19, #56]
  44b640:	bl	404600 <memset@plt>
  44b644:	mov	x25, x22
  44b648:	b	44b660 <_obstack_memory_used@@Base+0xd400>
  44b64c:	ldr	x1, [x19]
  44b650:	mov	w0, #0x20                  	// #32
  44b654:	bl	404400 <putc_unlocked@plt>
  44b658:	subs	x20, x20, #0x1
  44b65c:	b.ne	44b64c <_obstack_memory_used@@Base+0xd3ec>  // b.any
  44b660:	str	x21, [x19, #40]
  44b664:	ldr	x27, [x19, #56]
  44b668:	mov	w1, #0xa                   	// #10
  44b66c:	mov	x0, x25
  44b670:	sub	x21, x27, x25
  44b674:	mov	x2, x21
  44b678:	bl	404b70 <memchr@plt>
  44b67c:	ldr	x8, [x19, #40]
  44b680:	mov	x24, x0
  44b684:	tbnz	x8, #63, 44b6a8 <_obstack_memory_used@@Base+0xd448>
  44b688:	ldr	x8, [x19, #40]
  44b68c:	cbz	x24, 44b6b4 <_obstack_memory_used@@Base+0xd454>
  44b690:	ldr	x9, [x19, #16]
  44b694:	sub	x10, x24, x25
  44b698:	add	x10, x10, x8
  44b69c:	cmp	x10, x9
  44b6a0:	b.lt	44b5d0 <_obstack_memory_used@@Base+0xd370>  // b.tstop
  44b6a4:	b	44b6d4 <_obstack_memory_used@@Base+0xd474>
  44b6a8:	str	xzr, [x19, #40]
  44b6ac:	ldr	x8, [x19, #40]
  44b6b0:	cbnz	x24, 44b690 <_obstack_memory_used@@Base+0xd430>
  44b6b4:	ldr	x10, [x19, #16]
  44b6b8:	add	x9, x8, x21
  44b6bc:	mov	x24, x27
  44b6c0:	cmp	x9, x10
  44b6c4:	b.cs	44b6d4 <_obstack_memory_used@@Base+0xd474>  // b.hs, b.nlast
  44b6c8:	str	x9, [x19, #40]
  44b6cc:	mov	w8, #0x3                   	// #3
  44b6d0:	b	44b5dc <_obstack_memory_used@@Base+0xd37c>
  44b6d4:	ldp	x20, x9, [x19, #16]
  44b6d8:	tbnz	x9, #63, 44b738 <_obstack_memory_used@@Base+0xd4d8>
  44b6dc:	subs	x26, x20, x8
  44b6e0:	lsr	x8, x26, #63
  44b6e4:	add	x20, x25, x26
  44b6e8:	eor	w28, w8, #0x1
  44b6ec:	str	x9, [sp, #8]
  44b6f0:	b.mi	44b780 <_obstack_memory_used@@Base+0xd520>  // b.first
  44b6f4:	bl	404950 <__ctype_b_loc@plt>
  44b6f8:	ldr	x8, [x0]
  44b6fc:	ldrb	w9, [x20]
  44b700:	mov	x22, x20
  44b704:	ldrh	w9, [x8, x9, lsl #1]
  44b708:	tbnz	w9, #0, 44b784 <_obstack_memory_used@@Base+0xd524>
  44b70c:	add	x9, x25, x26
  44b710:	sub	x9, x9, #0x1
  44b714:	cmp	x9, x25
  44b718:	mov	x22, x9
  44b71c:	cset	w28, cs  // cs = hs, nlast
  44b720:	b.cc	44b784 <_obstack_memory_used@@Base+0xd524>  // b.lo, b.ul, b.last
  44b724:	mov	x9, x22
  44b728:	ldrb	w10, [x9], #-1
  44b72c:	ldrh	w10, [x8, x10, lsl #1]
  44b730:	tbz	w10, #0, 44b714 <_obstack_memory_used@@Base+0xd4b4>
  44b734:	b	44b784 <_obstack_memory_used@@Base+0xd524>
  44b738:	cmp	x24, x27
  44b73c:	sub	x22, x20, #0x1
  44b740:	b.cs	44b828 <_obstack_memory_used@@Base+0xd5c8>  // b.hs, b.nlast
  44b744:	sub	x8, x22, x8
  44b748:	add	x0, x25, x8
  44b74c:	sub	x2, x27, x24
  44b750:	mov	x1, x24
  44b754:	bl	404120 <memmove@plt>
  44b758:	ldr	x8, [x19, #40]
  44b75c:	ldr	x9, [x19, #56]
  44b760:	str	xzr, [x19, #40]
  44b764:	add	x20, x25, x20
  44b768:	sub	x8, x22, x8
  44b76c:	add	x8, x25, x8
  44b770:	sub	x8, x24, x8
  44b774:	add	x8, x9, x8
  44b778:	str	x8, [x19, #56]
  44b77c:	b	44b9e8 <_obstack_memory_used@@Base+0xd788>
  44b780:	mov	x22, x20
  44b784:	add	x23, x22, #0x1
  44b788:	cmp	x23, x25
  44b78c:	b.ls	44b7c8 <_obstack_memory_used@@Base+0xd568>  // b.plast
  44b790:	cbz	w28, 44b844 <_obstack_memory_used@@Base+0xd5e4>
  44b794:	ldr	x26, [sp, #8]
  44b798:	sub	x8, x22, #0x1
  44b79c:	mov	w24, #0x20                  	// #32
  44b7a0:	mov	x22, x8
  44b7a4:	cmp	x8, x25
  44b7a8:	b.cc	44b84c <_obstack_memory_used@@Base+0xd5ec>  // b.lo, b.ul, b.last
  44b7ac:	bl	404950 <__ctype_b_loc@plt>
  44b7b0:	mov	x8, x22
  44b7b4:	ldr	x9, [x0]
  44b7b8:	ldrb	w10, [x8], #-1
  44b7bc:	ldrh	w9, [x9, x10, lsl #1]
  44b7c0:	tbnz	w9, #0, 44b7a0 <_obstack_memory_used@@Base+0xd540>
  44b7c4:	b	44b84c <_obstack_memory_used@@Base+0xd5ec>
  44b7c8:	cmp	x20, x24
  44b7cc:	b.cs	44b7fc <_obstack_memory_used@@Base+0xd59c>  // b.hs, b.nlast
  44b7d0:	add	x8, x25, x26
  44b7d4:	add	x8, x8, #0x1
  44b7d8:	mov	x20, x8
  44b7dc:	cmp	x8, x24
  44b7e0:	b.cs	44b7fc <_obstack_memory_used@@Base+0xd59c>  // b.hs, b.nlast
  44b7e4:	bl	404950 <__ctype_b_loc@plt>
  44b7e8:	mov	x8, x20
  44b7ec:	ldr	x9, [x0]
  44b7f0:	ldrb	w10, [x8], #1
  44b7f4:	ldrh	w9, [x9, x10, lsl #1]
  44b7f8:	tbz	w9, #0, 44b7d8 <_obstack_memory_used@@Base+0xd578>
  44b7fc:	cmp	x20, x24
  44b800:	b.eq	44b9f4 <_obstack_memory_used@@Base+0xd794>  // b.none
  44b804:	bl	404950 <__ctype_b_loc@plt>
  44b808:	ldr	x8, [x0]
  44b80c:	mov	x23, x20
  44b810:	ldrb	w9, [x23, #1]!
  44b814:	ldrh	w9, [x8, x9, lsl #1]
  44b818:	tbnz	w9, #0, 44b810 <_obstack_memory_used@@Base+0xd5b0>
  44b81c:	ldr	x26, [sp, #8]
  44b820:	mov	w24, #0x20                  	// #32
  44b824:	b	44b850 <_obstack_memory_used@@Base+0xd5f0>
  44b828:	add	x8, x8, x21
  44b82c:	str	x8, [x19, #40]
  44b830:	sub	x8, x22, x8
  44b834:	add	x8, x27, x8
  44b838:	str	x8, [x19, #56]
  44b83c:	mov	w8, #0x3                   	// #3
  44b840:	b	44b5dc <_obstack_memory_used@@Base+0xd37c>
  44b844:	ldr	x26, [sp, #8]
  44b848:	mov	w24, #0x20                  	// #32
  44b84c:	add	x20, x22, #0x1
  44b850:	add	x8, x27, #0x1
  44b854:	cmp	x23, x8
  44b858:	b.eq	44b878 <_obstack_memory_used@@Base+0xd618>  // b.none
  44b85c:	cmp	x27, x23
  44b860:	b.ls	44b8dc <_obstack_memory_used@@Base+0xd67c>  // b.plast
  44b864:	mvn	x8, x20
  44b868:	add	x8, x8, x23
  44b86c:	cmp	x8, x26
  44b870:	b.lt	44b890 <_obstack_memory_used@@Base+0xd630>  // b.tstop
  44b874:	b	44b8dc <_obstack_memory_used@@Base+0xd67c>
  44b878:	cmp	x27, x23
  44b87c:	b.ls	44b8dc <_obstack_memory_used@@Base+0xd67c>  // b.plast
  44b880:	ldr	x8, [x19, #64]
  44b884:	sub	x8, x8, x20
  44b888:	cmp	x8, x26
  44b88c:	b.gt	44b8dc <_obstack_memory_used@@Base+0xd67c>
  44b890:	ldr	x8, [x19, #64]
  44b894:	add	x9, x26, #0x1
  44b898:	sub	x8, x8, x27
  44b89c:	cmp	x8, x9
  44b8a0:	b.le	44b8e8 <_obstack_memory_used@@Base+0xd688>
  44b8a4:	sub	x21, x27, x23
  44b8a8:	add	x22, x20, #0x1
  44b8ac:	add	x0, x22, x26
  44b8b0:	mov	x1, x23
  44b8b4:	mov	x2, x21
  44b8b8:	bl	404120 <memmove@plt>
  44b8bc:	ldr	x8, [x19, #24]
  44b8c0:	mov	w9, #0xa                   	// #10
  44b8c4:	strb	w9, [x20]
  44b8c8:	mov	x20, x22
  44b8cc:	add	x23, x22, x8
  44b8d0:	add	x8, x23, x21
  44b8d4:	sub	x21, x8, x25
  44b8d8:	b	44b918 <_obstack_memory_used@@Base+0xd6b8>
  44b8dc:	mov	w8, #0xa                   	// #10
  44b8e0:	strb	w8, [x20], #1
  44b8e4:	b	44b918 <_obstack_memory_used@@Base+0xd6b8>
  44b8e8:	ldr	x0, [x19, #48]
  44b8ec:	subs	x2, x20, x0
  44b8f0:	b.ls	44b900 <_obstack_memory_used@@Base+0xd6a0>  // b.plast
  44b8f4:	ldr	x3, [x19]
  44b8f8:	mov	w1, #0x1                   	// #1
  44b8fc:	bl	404170 <fwrite_unlocked@plt>
  44b900:	ldr	x1, [x19]
  44b904:	mov	w0, #0xa                   	// #10
  44b908:	bl	404400 <putc_unlocked@plt>
  44b90c:	ldr	x20, [x19, #48]
  44b910:	sub	x21, x27, x20
  44b914:	mov	x25, x20
  44b918:	ldr	x8, [x19, #24]
  44b91c:	sub	x9, x23, x20
  44b920:	cmp	x9, x8
  44b924:	b.ge	44b978 <_obstack_memory_used@@Base+0xd718>  // b.tcont
  44b928:	add	x9, x25, x21
  44b92c:	add	x9, x9, #0x1
  44b930:	cmp	x23, x9
  44b934:	b.ne	44b948 <_obstack_memory_used@@Base+0xd6e8>  // b.any
  44b938:	ldr	x9, [x19, #64]
  44b93c:	sub	x9, x9, x23
  44b940:	cmp	x9, x8
  44b944:	b.ge	44b978 <_obstack_memory_used@@Base+0xd718>  // b.tcont
  44b948:	ldr	x8, [x19, #24]
  44b94c:	cmp	x8, #0x1
  44b950:	b.lt	44b9a0 <_obstack_memory_used@@Base+0xd740>  // b.tstop
  44b954:	mov	x22, xzr
  44b958:	ldr	x1, [x19]
  44b95c:	mov	w0, #0x20                  	// #32
  44b960:	bl	404400 <putc_unlocked@plt>
  44b964:	ldr	x8, [x19, #24]
  44b968:	add	x22, x22, #0x1
  44b96c:	cmp	x8, x22
  44b970:	b.gt	44b958 <_obstack_memory_used@@Base+0xd6f8>
  44b974:	b	44b9a0 <_obstack_memory_used@@Base+0xd740>
  44b978:	ldr	x8, [x19, #24]
  44b97c:	cmp	x8, #0x1
  44b980:	b.lt	44b9a0 <_obstack_memory_used@@Base+0xd740>  // b.tstop
  44b984:	mov	x8, xzr
  44b988:	strb	w24, [x20, x8]
  44b98c:	ldr	x9, [x19, #24]
  44b990:	add	x8, x8, #0x1
  44b994:	cmp	x9, x8
  44b998:	b.gt	44b988 <_obstack_memory_used@@Base+0xd728>
  44b99c:	add	x20, x20, x8
  44b9a0:	cmp	x20, x23
  44b9a4:	b.cs	44b9bc <_obstack_memory_used@@Base+0xd75c>  // b.hs, b.nlast
  44b9a8:	add	x8, x25, x21
  44b9ac:	sub	x2, x8, x23
  44b9b0:	mov	x0, x20
  44b9b4:	mov	x1, x23
  44b9b8:	bl	404120 <memmove@plt>
  44b9bc:	ldr	x10, [x19, #24]
  44b9c0:	sub	x9, x21, x23
  44b9c4:	add	x9, x9, x25
  44b9c8:	add	x9, x20, x9
  44b9cc:	cmp	x10, #0x0
  44b9d0:	mov	w8, wzr
  44b9d4:	str	x9, [x19, #56]
  44b9d8:	csinv	x9, x10, xzr, ne  // ne = any
  44b9dc:	str	x9, [x19, #40]
  44b9e0:	mov	x25, x20
  44b9e4:	cbnz	w8, 44b5dc <_obstack_memory_used@@Base+0xd37c>
  44b9e8:	mov	w8, wzr
  44b9ec:	mov	x25, x20
  44b9f0:	b	44b5dc <_obstack_memory_used@@Base+0xd37c>
  44b9f4:	str	xzr, [x19, #40]
  44b9f8:	add	x20, x24, #0x1
  44b9fc:	mov	w8, #0x2                   	// #2
  44ba00:	mov	x25, x20
  44ba04:	cbnz	w8, 44b5dc <_obstack_memory_used@@Base+0xd37c>
  44ba08:	b	44b9e8 <_obstack_memory_used@@Base+0xd788>
  44ba0c:	ldp	x9, x8, [x19, #48]
  44ba10:	sub	x8, x8, x9
  44ba14:	str	x8, [x19, #32]
  44ba18:	ldp	x20, x19, [sp, #96]
  44ba1c:	ldp	x22, x21, [sp, #80]
  44ba20:	ldp	x24, x23, [sp, #64]
  44ba24:	ldp	x26, x25, [sp, #48]
  44ba28:	ldp	x28, x27, [sp, #32]
  44ba2c:	ldp	x29, x30, [sp, #16]
  44ba30:	add	sp, sp, #0x70
  44ba34:	ret
  44ba38:	stp	x29, x30, [sp, #-32]!
  44ba3c:	stp	x20, x19, [sp, #16]
  44ba40:	ldp	x9, x8, [x0, #56]
  44ba44:	mov	x29, sp
  44ba48:	sub	x8, x8, x9
  44ba4c:	cmp	x8, x1
  44ba50:	b.cs	44bb18 <_obstack_memory_used@@Base+0xd8b8>  // b.hs, b.nlast
  44ba54:	mov	x20, x1
  44ba58:	mov	x19, x0
  44ba5c:	bl	44b59c <_obstack_memory_used@@Base+0xd33c>
  44ba60:	ldp	x0, x8, [x19, #48]
  44ba64:	ldr	x3, [x19]
  44ba68:	mov	w1, #0x1                   	// #1
  44ba6c:	sub	x2, x8, x0
  44ba70:	bl	404170 <fwrite_unlocked@plt>
  44ba74:	mov	x8, x0
  44ba78:	ldp	x0, x9, [x19, #48]
  44ba7c:	sub	x10, x9, x0
  44ba80:	cmp	x8, x10
  44ba84:	b.ne	44bacc <_obstack_memory_used@@Base+0xd86c>  // b.any
  44ba88:	ldr	x8, [x19, #64]
  44ba8c:	str	x0, [x19, #56]
  44ba90:	str	xzr, [x19, #32]
  44ba94:	sub	x8, x8, x0
  44ba98:	cmp	x8, x20
  44ba9c:	b.cs	44bb08 <_obstack_memory_used@@Base+0xd8a8>  // b.hs, b.nlast
  44baa0:	adds	x20, x8, x20
  44baa4:	b.cs	44baf4 <_obstack_memory_used@@Base+0xd894>  // b.hs, b.nlast
  44baa8:	mov	x1, x20
  44baac:	bl	404730 <realloc@plt>
  44bab0:	cbz	x0, 44baf4 <_obstack_memory_used@@Base+0xd894>
  44bab4:	mov	w8, wzr
  44bab8:	add	x9, x0, x20
  44babc:	stp	x0, x9, [x19, #56]
  44bac0:	str	x0, [x19, #48]
  44bac4:	cbnz	w8, 44bb0c <_obstack_memory_used@@Base+0xd8ac>
  44bac8:	b	44bb08 <_obstack_memory_used@@Base+0xd8a8>
  44bacc:	ldr	x10, [x19, #32]
  44bad0:	sub	x9, x9, x8
  44bad4:	add	x1, x0, x8
  44bad8:	sub	x2, x9, x0
  44badc:	sub	x8, x10, x8
  44bae0:	str	x9, [x19, #56]
  44bae4:	str	x8, [x19, #32]
  44bae8:	bl	404120 <memmove@plt>
  44baec:	mov	w8, #0x1                   	// #1
  44baf0:	b	44bb0c <_obstack_memory_used@@Base+0xd8ac>
  44baf4:	bl	404d00 <__errno_location@plt>
  44baf8:	mov	w8, #0xc                   	// #12
  44bafc:	str	w8, [x0]
  44bb00:	mov	w8, #0x1                   	// #1
  44bb04:	cbnz	w8, 44bb0c <_obstack_memory_used@@Base+0xd8ac>
  44bb08:	mov	w8, wzr
  44bb0c:	cbz	w8, 44bb18 <_obstack_memory_used@@Base+0xd8b8>
  44bb10:	mov	w0, wzr
  44bb14:	b	44bb1c <_obstack_memory_used@@Base+0xd8bc>
  44bb18:	mov	w0, #0x1                   	// #1
  44bb1c:	ldp	x20, x19, [sp, #16]
  44bb20:	ldp	x29, x30, [sp], #32
  44bb24:	ret
  44bb28:	sub	sp, sp, #0x160
  44bb2c:	stp	x29, x30, [sp, #256]
  44bb30:	stp	x24, x23, [sp, #304]
  44bb34:	add	x29, sp, #0x100
  44bb38:	mov	x24, #0xffffffffffffffd0    	// #-48
  44bb3c:	mov	x8, sp
  44bb40:	add	x9, sp, #0x80
  44bb44:	stp	x28, x27, [sp, #272]
  44bb48:	stp	x26, x25, [sp, #288]
  44bb4c:	stp	x22, x21, [sp, #320]
  44bb50:	stp	x20, x19, [sp, #336]
  44bb54:	mov	x20, x1
  44bb58:	mov	x19, x0
  44bb5c:	mov	w21, #0x96                  	// #150
  44bb60:	movk	x24, #0xff80, lsl #32
  44bb64:	add	x25, x29, #0x60
  44bb68:	add	x26, x8, #0x80
  44bb6c:	add	x27, x9, #0x30
  44bb70:	stp	x2, x3, [sp, #128]
  44bb74:	stp	x4, x5, [sp, #144]
  44bb78:	stp	x6, x7, [sp, #160]
  44bb7c:	stp	q1, q2, [sp, #16]
  44bb80:	stp	q3, q4, [sp, #48]
  44bb84:	str	q0, [sp]
  44bb88:	stp	q5, q6, [sp, #80]
  44bb8c:	str	q7, [sp, #112]
  44bb90:	mov	x0, x19
  44bb94:	mov	x1, x21
  44bb98:	bl	44ba38 <_obstack_memory_used@@Base+0xd7d8>
  44bb9c:	cbz	w0, 44bbf0 <_obstack_memory_used@@Base+0xd990>
  44bba0:	stp	x26, x24, [x29, #-64]
  44bba4:	stp	x25, x27, [x29, #-80]
  44bba8:	ldp	x0, x8, [x19, #56]
  44bbac:	ldp	q0, q1, [x29, #-80]
  44bbb0:	sub	x5, x29, #0x30
  44bbb4:	mov	w2, #0x1                   	// #1
  44bbb8:	sub	x22, x8, x0
  44bbbc:	mov	x3, #0xffffffffffffffff    	// #-1
  44bbc0:	mov	x1, x22
  44bbc4:	mov	x4, x20
  44bbc8:	stp	q0, q1, [x29, #-48]
  44bbcc:	mov	w28, #0x1                   	// #1
  44bbd0:	bl	4044d0 <__vsnprintf_chk@plt>
  44bbd4:	add	w8, w0, #0x1
  44bbd8:	sxtw	x8, w8
  44bbdc:	cmp	x22, w0, sxtw
  44bbe0:	mov	w23, w0
  44bbe4:	csel	x21, x21, x8, hi  // hi = pmore
  44bbe8:	cbnz	w28, 44bbf8 <_obstack_memory_used@@Base+0xd998>
  44bbec:	b	44bc14 <_obstack_memory_used@@Base+0xd9b4>
  44bbf0:	mov	w28, wzr
  44bbf4:	cbz	w28, 44bc14 <_obstack_memory_used@@Base+0xd9b4>
  44bbf8:	sxtw	x0, w23
  44bbfc:	cmp	x22, x0
  44bc00:	b.ls	44bb90 <_obstack_memory_used@@Base+0xd930>  // b.plast
  44bc04:	ldr	x8, [x19, #56]
  44bc08:	add	x8, x8, x0
  44bc0c:	str	x8, [x19, #56]
  44bc10:	b	44bc18 <_obstack_memory_used@@Base+0xd9b8>
  44bc14:	mov	x0, #0xffffffffffffffff    	// #-1
  44bc18:	ldp	x20, x19, [sp, #336]
  44bc1c:	ldp	x22, x21, [sp, #320]
  44bc20:	ldp	x24, x23, [sp, #304]
  44bc24:	ldp	x26, x25, [sp, #288]
  44bc28:	ldp	x28, x27, [sp, #272]
  44bc2c:	ldp	x29, x30, [sp, #256]
  44bc30:	add	sp, sp, #0x160
  44bc34:	ret
  44bc38:	stp	x29, x30, [sp, #-48]!
  44bc3c:	str	x21, [sp, #16]
  44bc40:	stp	x20, x19, [sp, #32]
  44bc44:	ldp	x8, x9, [x0, #56]
  44bc48:	mov	x20, x0
  44bc4c:	mov	x19, x2
  44bc50:	mov	x21, x1
  44bc54:	add	x8, x8, x2
  44bc58:	cmp	x8, x9
  44bc5c:	mov	x29, sp
  44bc60:	b.ls	44bc74 <_obstack_memory_used@@Base+0xda14>  // b.plast
  44bc64:	mov	x0, x20
  44bc68:	mov	x1, x19
  44bc6c:	bl	44ba38 <_obstack_memory_used@@Base+0xd7d8>
  44bc70:	cbz	w0, 44bc94 <_obstack_memory_used@@Base+0xda34>
  44bc74:	ldr	x0, [x20, #56]
  44bc78:	mov	x1, x21
  44bc7c:	mov	x2, x19
  44bc80:	bl	404110 <memcpy@plt>
  44bc84:	ldr	x8, [x20, #56]
  44bc88:	add	x8, x8, x19
  44bc8c:	str	x8, [x20, #56]
  44bc90:	b	44bc98 <_obstack_memory_used@@Base+0xda38>
  44bc94:	mov	x19, xzr
  44bc98:	mov	x0, x19
  44bc9c:	ldp	x20, x19, [sp, #32]
  44bca0:	ldr	x21, [sp, #16]
  44bca4:	ldp	x29, x30, [sp], #48
  44bca8:	ret
  44bcac:	stp	x29, x30, [sp, #-48]!
  44bcb0:	str	x21, [sp, #16]
  44bcb4:	mov	x21, x0
  44bcb8:	mov	x0, x1
  44bcbc:	stp	x20, x19, [sp, #32]
  44bcc0:	mov	x29, sp
  44bcc4:	mov	x19, x1
  44bcc8:	bl	404190 <strlen@plt>
  44bccc:	cbz	x0, 44bcec <_obstack_memory_used@@Base+0xda8c>
  44bcd0:	mov	x20, x0
  44bcd4:	mov	x0, x21
  44bcd8:	mov	x1, x19
  44bcdc:	mov	x2, x20
  44bce0:	bl	44bc38 <_obstack_memory_used@@Base+0xd9d8>
  44bce4:	cmp	x0, x20
  44bce8:	csetm	w0, ne  // ne = any
  44bcec:	ldp	x20, x19, [sp, #32]
  44bcf0:	ldr	x21, [sp, #16]
  44bcf4:	ldp	x29, x30, [sp], #48
  44bcf8:	ret
  44bcfc:	stp	x29, x30, [sp, #-32]!
  44bd00:	stp	x20, x19, [sp, #16]
  44bd04:	ldp	x8, x9, [x0, #56]
  44bd08:	mov	x19, x0
  44bd0c:	mov	w20, w1
  44bd10:	mov	x29, sp
  44bd14:	cmp	x8, x9
  44bd18:	b.cc	44bd2c <_obstack_memory_used@@Base+0xdacc>  // b.lo, b.ul, b.last
  44bd1c:	mov	w1, #0x1                   	// #1
  44bd20:	mov	x0, x19
  44bd24:	bl	44ba38 <_obstack_memory_used@@Base+0xd7d8>
  44bd28:	cbz	w0, 44bd44 <_obstack_memory_used@@Base+0xdae4>
  44bd2c:	ldr	x8, [x19, #56]
  44bd30:	and	w0, w20, #0xff
  44bd34:	add	x9, x8, #0x1
  44bd38:	str	x9, [x19, #56]
  44bd3c:	strb	w20, [x8]
  44bd40:	b	44bd48 <_obstack_memory_used@@Base+0xdae8>
  44bd44:	mov	w0, #0xffffffff            	// #-1
  44bd48:	ldp	x20, x19, [sp, #16]
  44bd4c:	ldp	x29, x30, [sp], #32
  44bd50:	ret
  44bd54:	stp	x29, x30, [sp, #-32]!
  44bd58:	stp	x20, x19, [sp, #16]
  44bd5c:	ldp	x9, x8, [x0, #48]
  44bd60:	ldr	x10, [x0, #32]
  44bd64:	mov	x19, x0
  44bd68:	mov	x20, x1
  44bd6c:	sub	x8, x8, x9
  44bd70:	cmp	x8, x10
  44bd74:	mov	x29, sp
  44bd78:	b.ls	44bd84 <_obstack_memory_used@@Base+0xdb24>  // b.plast
  44bd7c:	mov	x0, x19
  44bd80:	bl	44b59c <_obstack_memory_used@@Base+0xd33c>
  44bd84:	ldr	x0, [x19, #8]
  44bd88:	str	x20, [x19, #8]
  44bd8c:	ldp	x20, x19, [sp, #16]
  44bd90:	ldp	x29, x30, [sp], #32
  44bd94:	ret
  44bd98:	stp	x29, x30, [sp, #-32]!
  44bd9c:	stp	x20, x19, [sp, #16]
  44bda0:	ldp	x9, x8, [x0, #48]
  44bda4:	ldr	x10, [x0, #32]
  44bda8:	mov	x19, x0
  44bdac:	mov	x20, x1
  44bdb0:	sub	x8, x8, x9
  44bdb4:	cmp	x8, x10
  44bdb8:	mov	x29, sp
  44bdbc:	b.ls	44bdc8 <_obstack_memory_used@@Base+0xdb68>  // b.plast
  44bdc0:	mov	x0, x19
  44bdc4:	bl	44b59c <_obstack_memory_used@@Base+0xd33c>
  44bdc8:	ldr	x0, [x19, #16]
  44bdcc:	str	x20, [x19, #16]
  44bdd0:	ldp	x20, x19, [sp, #16]
  44bdd4:	ldp	x29, x30, [sp], #32
  44bdd8:	ret
  44bddc:	stp	x29, x30, [sp, #-32]!
  44bde0:	stp	x20, x19, [sp, #16]
  44bde4:	ldp	x9, x8, [x0, #48]
  44bde8:	ldr	x10, [x0, #32]
  44bdec:	mov	x19, x0
  44bdf0:	mov	x20, x1
  44bdf4:	sub	x8, x8, x9
  44bdf8:	cmp	x8, x10
  44bdfc:	mov	x29, sp
  44be00:	b.ls	44be0c <_obstack_memory_used@@Base+0xdbac>  // b.plast
  44be04:	mov	x0, x19
  44be08:	bl	44b59c <_obstack_memory_used@@Base+0xd33c>
  44be0c:	ldr	x0, [x19, #24]
  44be10:	str	x20, [x19, #24]
  44be14:	ldp	x20, x19, [sp, #16]
  44be18:	ldp	x29, x30, [sp], #32
  44be1c:	ret
  44be20:	stp	x29, x30, [sp, #-32]!
  44be24:	str	x19, [sp, #16]
  44be28:	ldp	x9, x8, [x0, #48]
  44be2c:	ldr	x10, [x0, #32]
  44be30:	mov	x19, x0
  44be34:	mov	x29, sp
  44be38:	sub	x8, x8, x9
  44be3c:	cmp	x8, x10
  44be40:	b.ls	44be4c <_obstack_memory_used@@Base+0xdbec>  // b.plast
  44be44:	mov	x0, x19
  44be48:	bl	44b59c <_obstack_memory_used@@Base+0xd33c>
  44be4c:	ldr	x8, [x19, #40]
  44be50:	ldr	x19, [sp, #16]
  44be54:	bic	x0, x8, x8, asr #63
  44be58:	ldp	x29, x30, [sp], #32
  44be5c:	ret
  44be60:	neg	w8, w1
  44be64:	ror	x0, x0, x8
  44be68:	ret
  44be6c:	ror	x0, x0, x1
  44be70:	ret
  44be74:	neg	w8, w1
  44be78:	ror	w0, w0, w8
  44be7c:	ret
  44be80:	ror	w0, w0, w1
  44be84:	ret
  44be88:	sxtw	x9, w1
  44be8c:	neg	x9, x9
  44be90:	lsl	x8, x0, x1
  44be94:	lsr	x9, x0, x9
  44be98:	orr	x0, x9, x8
  44be9c:	ret
  44bea0:	sxtw	x9, w1
  44bea4:	neg	x9, x9
  44bea8:	lsr	x8, x0, x1
  44beac:	lsl	x9, x0, x9
  44beb0:	orr	x0, x9, x8
  44beb4:	ret
  44beb8:	neg	w10, w1
  44bebc:	and	w8, w0, #0xffff
  44bec0:	and	w9, w1, #0xf
  44bec4:	and	w10, w10, #0xf
  44bec8:	lsl	w9, w0, w9
  44becc:	lsr	w8, w8, w10
  44bed0:	orr	w0, w9, w8
  44bed4:	ret
  44bed8:	and	w8, w0, #0xffff
  44bedc:	and	w9, w1, #0xf
  44bee0:	neg	w10, w1
  44bee4:	lsr	w8, w8, w9
  44bee8:	and	w9, w10, #0xf
  44beec:	lsl	w9, w0, w9
  44bef0:	orr	w0, w9, w8
  44bef4:	ret
  44bef8:	neg	w10, w1
  44befc:	and	w8, w0, #0xff
  44bf00:	and	w9, w1, #0x7
  44bf04:	and	w10, w10, #0x7
  44bf08:	lsl	w9, w0, w9
  44bf0c:	lsr	w8, w8, w10
  44bf10:	orr	w0, w9, w8
  44bf14:	ret
  44bf18:	and	w8, w0, #0xff
  44bf1c:	and	w9, w1, #0x7
  44bf20:	neg	w10, w1
  44bf24:	lsr	w8, w8, w9
  44bf28:	and	w9, w10, #0x7
  44bf2c:	lsl	w9, w0, w9
  44bf30:	orr	w0, w9, w8
  44bf34:	ret
  44bf38:	sub	w9, w0, #0x41
  44bf3c:	mov	w8, w0
  44bf40:	cmp	w9, #0x39
  44bf44:	mov	w0, #0x1                   	// #1
  44bf48:	b.hi	44bf60 <_obstack_memory_used@@Base+0xdd00>  // b.pmore
  44bf4c:	mov	w10, #0x1                   	// #1
  44bf50:	lsl	x9, x10, x9
  44bf54:	tst	x9, #0x3ffffff03ffffff
  44bf58:	b.eq	44bf60 <_obstack_memory_used@@Base+0xdd00>  // b.none
  44bf5c:	ret
  44bf60:	sub	w8, w8, #0x30
  44bf64:	cmp	w8, #0xa
  44bf68:	b.cc	44bf5c <_obstack_memory_used@@Base+0xdcfc>  // b.lo, b.ul, b.last
  44bf6c:	mov	w0, wzr
  44bf70:	ret
  44bf74:	sub	w8, w0, #0x41
  44bf78:	cmp	w8, #0x39
  44bf7c:	b.hi	44bf90 <_obstack_memory_used@@Base+0xdd30>  // b.pmore
  44bf80:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  44bf84:	lsr	x8, x9, x8
  44bf88:	and	w0, w8, #0x1
  44bf8c:	ret
  44bf90:	mov	w0, wzr
  44bf94:	ret
  44bf98:	cmp	w0, #0x80
  44bf9c:	cset	w0, cc  // cc = lo, ul, last
  44bfa0:	ret
  44bfa4:	cmp	w0, #0x20
  44bfa8:	cset	w8, eq  // eq = none
  44bfac:	cmp	w0, #0x9
  44bfb0:	cset	w9, eq  // eq = none
  44bfb4:	orr	w0, w8, w9
  44bfb8:	ret
  44bfbc:	mov	w8, w0
  44bfc0:	cmp	w0, #0x20
  44bfc4:	mov	w0, #0x1                   	// #1
  44bfc8:	b.cs	44bfd0 <_obstack_memory_used@@Base+0xdd70>  // b.hs, b.nlast
  44bfcc:	ret
  44bfd0:	cmp	w8, #0x7f
  44bfd4:	b.eq	44bfcc <_obstack_memory_used@@Base+0xdd6c>  // b.none
  44bfd8:	mov	w0, wzr
  44bfdc:	ret
  44bfe0:	sub	w8, w0, #0x30
  44bfe4:	cmp	w8, #0xa
  44bfe8:	cset	w0, cc  // cc = lo, ul, last
  44bfec:	ret
  44bff0:	sub	w8, w0, #0x21
  44bff4:	cmp	w8, #0x5e
  44bff8:	cset	w0, cc  // cc = lo, ul, last
  44bffc:	ret
  44c000:	sub	w8, w0, #0x61
  44c004:	cmp	w8, #0x1a
  44c008:	cset	w0, cc  // cc = lo, ul, last
  44c00c:	ret
  44c010:	sub	w8, w0, #0x20
  44c014:	cmp	w8, #0x5f
  44c018:	cset	w0, cc  // cc = lo, ul, last
  44c01c:	ret
  44c020:	sub	w8, w0, #0x21
  44c024:	cmp	w8, #0x5d
  44c028:	b.hi	44c04c <_obstack_memory_used@@Base+0xddec>  // b.pmore
  44c02c:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44c030:	add	x9, x9, #0x8a2
  44c034:	adr	x10, 44c048 <_obstack_memory_used@@Base+0xdde8>
  44c038:	ldrb	w11, [x9, x8]
  44c03c:	add	x10, x10, x11, lsl #2
  44c040:	mov	w0, #0x1                   	// #1
  44c044:	br	x10
  44c048:	ret
  44c04c:	mov	w0, wzr
  44c050:	ret
  44c054:	sub	w8, w0, #0x9
  44c058:	cmp	w8, #0x17
  44c05c:	b.hi	44c074 <_obstack_memory_used@@Base+0xde14>  // b.pmore
  44c060:	mov	w9, #0x1f                  	// #31
  44c064:	movk	w9, #0x80, lsl #16
  44c068:	lsr	w8, w9, w8
  44c06c:	and	w0, w8, #0x1
  44c070:	ret
  44c074:	mov	w0, wzr
  44c078:	ret
  44c07c:	sub	w8, w0, #0x41
  44c080:	cmp	w8, #0x1a
  44c084:	cset	w0, cc  // cc = lo, ul, last
  44c088:	ret
  44c08c:	sub	w8, w0, #0x30
  44c090:	cmp	w8, #0x36
  44c094:	b.hi	44c0ac <_obstack_memory_used@@Base+0xde4c>  // b.pmore
  44c098:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  44c09c:	movk	x9, #0x3ff
  44c0a0:	lsr	x8, x9, x8
  44c0a4:	and	w0, w8, #0x1
  44c0a8:	ret
  44c0ac:	mov	w0, wzr
  44c0b0:	ret
  44c0b4:	sub	w8, w0, #0x41
  44c0b8:	add	w9, w0, #0x20
  44c0bc:	cmp	w8, #0x1a
  44c0c0:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  44c0c4:	ret
  44c0c8:	sub	w8, w0, #0x61
  44c0cc:	sub	w9, w0, #0x20
  44c0d0:	cmp	w8, #0x1a
  44c0d4:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  44c0d8:	ret
  44c0dc:	stp	x29, x30, [sp, #-48]!
  44c0e0:	str	x21, [sp, #16]
  44c0e4:	stp	x20, x19, [sp, #32]
  44c0e8:	mov	x29, sp
  44c0ec:	mov	x20, x0
  44c0f0:	bl	4043a0 <__fpending@plt>
  44c0f4:	mov	x19, x0
  44c0f8:	mov	x0, x20
  44c0fc:	bl	4042d0 <ferror_unlocked@plt>
  44c100:	mov	w21, w0
  44c104:	mov	x0, x20
  44c108:	bl	404470 <fclose@plt>
  44c10c:	cbz	w21, 44c130 <_obstack_memory_used@@Base+0xded0>
  44c110:	cbnz	w0, 44c11c <_obstack_memory_used@@Base+0xdebc>
  44c114:	bl	404d00 <__errno_location@plt>
  44c118:	str	wzr, [x0]
  44c11c:	mov	w0, #0xffffffff            	// #-1
  44c120:	ldp	x20, x19, [sp, #32]
  44c124:	ldr	x21, [sp, #16]
  44c128:	ldp	x29, x30, [sp], #48
  44c12c:	ret
  44c130:	cbz	w0, 44c120 <_obstack_memory_used@@Base+0xdec0>
  44c134:	cbnz	x19, 44c110 <_obstack_memory_used@@Base+0xdeb0>
  44c138:	bl	404d00 <__errno_location@plt>
  44c13c:	ldr	w8, [x0]
  44c140:	cmp	w8, #0x9
  44c144:	csetm	w0, ne  // ne = any
  44c148:	b	44c120 <_obstack_memory_used@@Base+0xdec0>
  44c14c:	stp	x29, x30, [sp, #-48]!
  44c150:	stp	x22, x21, [sp, #16]
  44c154:	stp	x20, x19, [sp, #32]
  44c158:	mov	x29, sp
  44c15c:	bl	404300 <opendir@plt>
  44c160:	mov	x19, x0
  44c164:	cbz	x0, 44c1cc <_obstack_memory_used@@Base+0xdf6c>
  44c168:	mov	x0, x19
  44c16c:	bl	404b30 <dirfd@plt>
  44c170:	cmp	w0, #0x2
  44c174:	b.hi	44c1cc <_obstack_memory_used@@Base+0xdf6c>  // b.pmore
  44c178:	mov	w1, #0x406                 	// #1030
  44c17c:	mov	w2, #0x3                   	// #3
  44c180:	bl	43db94 <argp_usage@@Base+0xbf98>
  44c184:	tbnz	w0, #31, 44c1ac <_obstack_memory_used@@Base+0xdf4c>
  44c188:	mov	w21, w0
  44c18c:	bl	404820 <fdopendir@plt>
  44c190:	mov	x20, x0
  44c194:	bl	404d00 <__errno_location@plt>
  44c198:	ldr	w22, [x0]
  44c19c:	cbnz	x20, 44c1b8 <_obstack_memory_used@@Base+0xdf58>
  44c1a0:	mov	w0, w21
  44c1a4:	bl	4047c0 <close@plt>
  44c1a8:	b	44c1b8 <_obstack_memory_used@@Base+0xdf58>
  44c1ac:	bl	404d00 <__errno_location@plt>
  44c1b0:	ldr	w22, [x0]
  44c1b4:	mov	x20, xzr
  44c1b8:	mov	x0, x19
  44c1bc:	bl	404790 <closedir@plt>
  44c1c0:	bl	404d00 <__errno_location@plt>
  44c1c4:	mov	x19, x20
  44c1c8:	str	w22, [x0]
  44c1cc:	mov	x0, x19
  44c1d0:	ldp	x20, x19, [sp, #32]
  44c1d4:	ldp	x22, x21, [sp, #16]
  44c1d8:	ldp	x29, x30, [sp], #48
  44c1dc:	ret
  44c1e0:	sub	sp, sp, #0xe0
  44c1e4:	stp	x29, x30, [sp, #208]
  44c1e8:	add	x29, sp, #0xd0
  44c1ec:	stp	x2, x3, [x29, #-80]
  44c1f0:	stp	x4, x5, [x29, #-64]
  44c1f4:	stp	x6, x7, [x29, #-48]
  44c1f8:	stp	q1, q2, [sp, #16]
  44c1fc:	stp	q3, q4, [sp, #48]
  44c200:	str	q0, [sp]
  44c204:	stp	q5, q6, [sp, #80]
  44c208:	str	q7, [sp, #112]
  44c20c:	tbnz	w1, #6, 44c218 <_obstack_memory_used@@Base+0xdfb8>
  44c210:	mov	w2, wzr
  44c214:	b	44c264 <_obstack_memory_used@@Base+0xe004>
  44c218:	mov	x9, #0xffffffffffffffd0    	// #-48
  44c21c:	mov	x11, sp
  44c220:	sub	x12, x29, #0x50
  44c224:	movk	x9, #0xff80, lsl #32
  44c228:	add	x10, x29, #0x10
  44c22c:	mov	x8, #0xffffffffffffffd0    	// #-48
  44c230:	add	x11, x11, #0x80
  44c234:	add	x12, x12, #0x30
  44c238:	stp	x11, x9, [x29, #-16]
  44c23c:	stp	x10, x12, [x29, #-32]
  44c240:	tbz	w8, #31, 44c254 <_obstack_memory_used@@Base+0xdff4>
  44c244:	add	w9, w8, #0x8
  44c248:	cmp	w9, #0x0
  44c24c:	stur	w9, [x29, #-8]
  44c250:	b.le	44c278 <_obstack_memory_used@@Base+0xe018>
  44c254:	ldur	x8, [x29, #-32]
  44c258:	add	x9, x8, #0x8
  44c25c:	stur	x9, [x29, #-32]
  44c260:	ldr	w2, [x8]
  44c264:	bl	404530 <open@plt>
  44c268:	bl	44dafc <_obstack_memory_used@@Base+0xf89c>
  44c26c:	ldp	x29, x30, [sp, #208]
  44c270:	add	sp, sp, #0xe0
  44c274:	ret
  44c278:	ldur	x9, [x29, #-24]
  44c27c:	add	x8, x9, x8
  44c280:	b	44c260 <_obstack_memory_used@@Base+0xe000>
  44c284:	stp	x29, x30, [sp, #-32]!
  44c288:	mov	x1, xzr
  44c28c:	str	x19, [sp, #16]
  44c290:	mov	x29, sp
  44c294:	bl	404de0 <setlocale@plt>
  44c298:	cbz	x0, 44c2c4 <_obstack_memory_used@@Base+0xe064>
  44c29c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  44c2a0:	add	x1, x1, #0x93b
  44c2a4:	mov	x19, x0
  44c2a8:	bl	404920 <strcmp@plt>
  44c2ac:	cbz	w0, 44c2cc <_obstack_memory_used@@Base+0xe06c>
  44c2b0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44c2b4:	add	x1, x1, #0x900
  44c2b8:	mov	x0, x19
  44c2bc:	bl	404920 <strcmp@plt>
  44c2c0:	cbz	w0, 44c2cc <_obstack_memory_used@@Base+0xe06c>
  44c2c4:	mov	w0, #0x1                   	// #1
  44c2c8:	b	44c2d0 <_obstack_memory_used@@Base+0xe070>
  44c2cc:	mov	w0, wzr
  44c2d0:	ldr	x19, [sp, #16]
  44c2d4:	ldp	x29, x30, [sp], #32
  44c2d8:	ret
  44c2dc:	stp	x29, x30, [sp, #-32]!
  44c2e0:	str	x19, [sp, #16]
  44c2e4:	mov	x29, sp
  44c2e8:	mov	w19, w0
  44c2ec:	bl	404510 <wcwidth@plt>
  44c2f0:	tbz	w0, #31, 44c304 <_obstack_memory_used@@Base+0xe0a4>
  44c2f4:	mov	w0, w19
  44c2f8:	bl	404340 <iswcntrl@plt>
  44c2fc:	cmp	w0, #0x0
  44c300:	cset	w0, eq  // eq = none
  44c304:	ldr	x19, [sp, #16]
  44c308:	ldp	x29, x30, [sp], #32
  44c30c:	ret
  44c310:	stp	x29, x30, [sp, #-48]!
  44c314:	str	x21, [sp, #16]
  44c318:	stp	x20, x19, [sp, #32]
  44c31c:	mov	x19, x1
  44c320:	ldr	x21, [x1], #24
  44c324:	mov	x20, x0
  44c328:	mov	x29, sp
  44c32c:	cmp	x21, x1
  44c330:	b.ne	44c344 <_obstack_memory_used@@Base+0xe0e4>  // b.any
  44c334:	ldr	x2, [x19, #8]
  44c338:	add	x21, x20, #0x18
  44c33c:	mov	x0, x21
  44c340:	bl	404110 <memcpy@plt>
  44c344:	str	x21, [x20]
  44c348:	ldr	x8, [x19, #8]
  44c34c:	str	x8, [x20, #8]
  44c350:	ldrb	w8, [x19, #16]
  44c354:	strb	w8, [x20, #16]
  44c358:	cbz	w8, 44c364 <_obstack_memory_used@@Base+0xe104>
  44c35c:	ldr	w8, [x19, #20]
  44c360:	str	w8, [x20, #20]
  44c364:	ldp	x20, x19, [sp, #32]
  44c368:	ldr	x21, [sp, #16]
  44c36c:	ldp	x29, x30, [sp], #48
  44c370:	ret
  44c374:	lsr	w8, w0, #3
  44c378:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44c37c:	and	x8, x8, #0x1c
  44c380:	add	x9, x9, #0x908
  44c384:	ldr	w8, [x9, x8]
  44c388:	lsr	w8, w8, w0
  44c38c:	and	w0, w8, #0x1
  44c390:	ret
  44c394:	stp	x29, x30, [sp, #-16]!
  44c398:	mov	w6, w5
  44c39c:	mov	x5, x4
  44c3a0:	mov	w4, wzr
  44c3a4:	mov	x29, sp
  44c3a8:	bl	44c3b4 <_obstack_memory_used@@Base+0xe154>
  44c3ac:	ldp	x29, x30, [sp], #16
  44c3b0:	ret
  44c3b4:	stp	x29, x30, [sp, #-96]!
  44c3b8:	stp	x28, x27, [sp, #16]
  44c3bc:	stp	x26, x25, [sp, #32]
  44c3c0:	stp	x24, x23, [sp, #48]
  44c3c4:	stp	x22, x21, [sp, #64]
  44c3c8:	stp	x20, x19, [sp, #80]
  44c3cc:	mov	x29, sp
  44c3d0:	sub	sp, sp, #0x4c0
  44c3d4:	ldr	x8, [x3, #48]
  44c3d8:	ldr	w9, [x3, #8]
  44c3dc:	adrp	x10, 456000 <_obstack_memory_used@@Base+0x17da0>
  44c3e0:	add	x10, x10, #0xd3e
  44c3e4:	cmp	x8, #0x0
  44c3e8:	csel	x12, x10, x8, eq  // eq = none
  44c3ec:	ldrb	w8, [x2]
  44c3f0:	mov	w11, #0xc                   	// #12
  44c3f4:	cmp	w9, #0x0
  44c3f8:	csel	w10, w11, w9, eq  // eq = none
  44c3fc:	subs	w9, w9, #0xc
  44c400:	mov	x18, x0
  44c404:	csel	w9, w9, w10, gt
  44c408:	str	w6, [sp, #52]
  44c40c:	str	x5, [sp, #56]
  44c410:	str	w4, [sp, #140]
  44c414:	cbz	w8, 44d934 <_obstack_memory_used@@Base+0xf6d4>
  44c418:	sub	x8, x29, #0x20
  44c41c:	str	w9, [sp, #28]
  44c420:	sub	x9, x29, #0x28
  44c424:	add	x8, x8, #0x17
  44c428:	str	x8, [sp, #72]
  44c42c:	orr	x8, x9, #0x2
  44c430:	add	x10, sp, #0x90
  44c434:	str	x8, [sp, #80]
  44c438:	orr	x8, x9, #0x3
  44c43c:	mov	w16, #0xcccc                	// #52428
  44c440:	str	x8, [sp, #64]
  44c444:	orr	x8, x10, #0x1
  44c448:	mov	x25, x2
  44c44c:	mov	x0, xzr
  44c450:	movk	w16, #0xccc, lsl #16
  44c454:	mov	w17, #0xa                   	// #10
  44c458:	stp	x12, x8, [sp, #32]
  44c45c:	stp	x3, x1, [sp, #120]
  44c460:	str	x8, [sp, #96]
  44c464:	ldrb	w8, [x25]
  44c468:	cmp	w8, #0x25
  44c46c:	b.ne	44c4d8 <_obstack_memory_used@@Base+0xe278>  // b.any
  44c470:	ldr	w2, [sp, #140]
  44c474:	mov	w21, wzr
  44c478:	mov	w24, wzr
  44c47c:	add	x25, x25, #0x1
  44c480:	b	44c494 <_obstack_memory_used@@Base+0xe234>
  44c484:	cmp	w8, #0x2d
  44c488:	b.ne	44c4c4 <_obstack_memory_used@@Base+0xe264>  // b.any
  44c48c:	add	x25, x25, #0x1
  44c490:	mov	w24, w8
  44c494:	ldrb	w8, [x25]
  44c498:	cmp	w8, #0x2f
  44c49c:	b.le	44c484 <_obstack_memory_used@@Base+0xe224>
  44c4a0:	cmp	w8, #0x30
  44c4a4:	b.eq	44c48c <_obstack_memory_used@@Base+0xe22c>  // b.none
  44c4a8:	cmp	w8, #0x5f
  44c4ac:	b.eq	44c48c <_obstack_memory_used@@Base+0xe22c>  // b.none
  44c4b0:	cmp	w8, #0x5e
  44c4b4:	b.ne	44c4ec <_obstack_memory_used@@Base+0xe28c>  // b.any
  44c4b8:	mov	w2, #0x1                   	// #1
  44c4bc:	add	x25, x25, #0x1
  44c4c0:	b	44c494 <_obstack_memory_used@@Base+0xe234>
  44c4c4:	cmp	w8, #0x23
  44c4c8:	b.ne	44c4ec <_obstack_memory_used@@Base+0xe28c>  // b.any
  44c4cc:	mov	w21, #0x1                   	// #1
  44c4d0:	add	x25, x25, #0x1
  44c4d4:	b	44c494 <_obstack_memory_used@@Base+0xe234>
  44c4d8:	sub	x9, x1, x0
  44c4dc:	cmp	x9, #0x2
  44c4e0:	b.cs	44c53c <_obstack_memory_used@@Base+0xe2dc>  // b.hs, b.nlast
  44c4e4:	mov	w8, #0x1                   	// #1
  44c4e8:	b	44c54c <_obstack_memory_used@@Base+0xe2ec>
  44c4ec:	sub	w8, w8, #0x30
  44c4f0:	cmp	w8, #0x9
  44c4f4:	b.hi	44c55c <_obstack_memory_used@@Base+0xe2fc>  // b.pmore
  44c4f8:	mov	w27, wzr
  44c4fc:	b	44c514 <_obstack_memory_used@@Base+0xe2b4>
  44c500:	mov	w27, #0x7fffffff            	// #2147483647
  44c504:	ldrb	w8, [x25, #1]!
  44c508:	sub	w8, w8, #0x30
  44c50c:	cmp	w8, #0xa
  44c510:	b.cs	44c560 <_obstack_memory_used@@Base+0xe300>  // b.hs, b.nlast
  44c514:	cmp	w27, w16
  44c518:	b.gt	44c500 <_obstack_memory_used@@Base+0xe2a0>
  44c51c:	b.ne	44c52c <_obstack_memory_used@@Base+0xe2cc>  // b.any
  44c520:	ldrb	w8, [x25]
  44c524:	cmp	w8, #0x37
  44c528:	b.hi	44c500 <_obstack_memory_used@@Base+0xe2a0>  // b.pmore
  44c52c:	ldrb	w8, [x25]
  44c530:	madd	w8, w27, w17, w8
  44c534:	sub	w27, w8, #0x30
  44c538:	b	44c504 <_obstack_memory_used@@Base+0xe2a4>
  44c53c:	cbz	x18, 44c544 <_obstack_memory_used@@Base+0xe2e4>
  44c540:	strb	w8, [x18], #1
  44c544:	mov	w8, wzr
  44c548:	add	x0, x0, #0x1
  44c54c:	cmp	w8, #0x0
  44c550:	mov	w9, #0x4                   	// #4
  44c554:	csel	w8, w9, w8, eq  // eq = none
  44c558:	b	44d890 <_obstack_memory_used@@Base+0xf630>
  44c55c:	mov	w27, #0xffffffff            	// #-1
  44c560:	ldrb	w5, [x25]
  44c564:	cmp	w5, #0x4f
  44c568:	b.eq	44c574 <_obstack_memory_used@@Base+0xe314>  // b.none
  44c56c:	cmp	w5, #0x45
  44c570:	b.ne	44c57c <_obstack_memory_used@@Base+0xe31c>  // b.any
  44c574:	add	x25, x25, #0x1
  44c578:	b	44c580 <_obstack_memory_used@@Base+0xe320>
  44c57c:	mov	w5, wzr
  44c580:	ldrb	w4, [x25]
  44c584:	cmp	w4, #0x7a
  44c588:	b.hi	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.pmore
  44c58c:	adrp	x12, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44c590:	add	x12, x12, #0x928
  44c594:	adr	x10, 44c5bc <_obstack_memory_used@@Base+0xe35c>
  44c598:	ldrh	w11, [x12, x4, lsl #1]
  44c59c:	add	x10, x10, x11, lsl #2
  44c5a0:	adrp	x28, 452000 <_obstack_memory_used@@Base+0x13da0>
  44c5a4:	mov	w20, wzr
  44c5a8:	mov	w13, wzr
  44c5ac:	mov	w9, wzr
  44c5b0:	mov	x8, xzr
  44c5b4:	add	x28, x28, #0x31c
  44c5b8:	br	x10
  44c5bc:	cmp	w5, #0x4f
  44c5c0:	mov	w20, wzr
  44c5c4:	b.ne	44c644 <_obstack_memory_used@@Base+0xe3e4>  // b.any
  44c5c8:	mov	w13, w20
  44c5cc:	b	44d060 <_obstack_memory_used@@Base+0xee00>
  44c5d0:	cmp	w5, #0x45
  44c5d4:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c5d8:	str	w5, [sp, #16]
  44c5dc:	str	w2, [sp, #116]
  44c5e0:	str	x18, [sp, #88]
  44c5e4:	str	x0, [sp, #104]
  44c5e8:	ldp	w20, w1, [x3, #20]
  44c5ec:	ldr	w19, [x3, #28]
  44c5f0:	mov	w8, #0xffffff9c            	// #-100
  44c5f4:	mov	w9, #0x12c                 	// #300
  44c5f8:	cmp	w20, #0x0
  44c5fc:	csel	w8, w9, w8, lt  // lt = tstop
  44c600:	mov	w0, w19
  44c604:	mov	x23, x4
  44c608:	add	w21, w8, w20
  44c60c:	mov	w26, w1
  44c610:	bl	44da1c <_obstack_memory_used@@Base+0xf7bc>
  44c614:	tbnz	w0, #31, 44d200 <_obstack_memory_used@@Base+0xefa0>
  44c618:	mov	w28, w0
  44c61c:	tst	w21, #0x3
  44c620:	b.eq	44d280 <_obstack_memory_used@@Base+0xf020>  // b.none
  44c624:	mov	w8, wzr
  44c628:	b	44d468 <_obstack_memory_used@@Base+0xf208>
  44c62c:	cbnz	w5, 44d05c <_obstack_memory_used@@Base+0xedfc>
  44c630:	b	44c6b8 <_obstack_memory_used@@Base+0xe458>
  44c634:	mov	w20, wzr
  44c638:	cmp	w5, #0x45
  44c63c:	orr	w2, w21, w2
  44c640:	b.eq	44c5c8 <_obstack_memory_used@@Base+0xe368>  // b.none
  44c644:	mov	w13, w20
  44c648:	b	44c9f0 <_obstack_memory_used@@Base+0xe790>
  44c64c:	mov	w13, wzr
  44c650:	sub	x25, x25, #0x1
  44c654:	b	44d060 <_obstack_memory_used@@Base+0xee00>
  44c658:	cbnz	w5, 44d05c <_obstack_memory_used@@Base+0xedfc>
  44c65c:	bic	w8, w27, w27, asr #31
  44c660:	cmp	w8, #0x1
  44c664:	csinc	w20, w8, wzr, hi  // hi = pmore
  44c668:	sub	x9, x1, x0
  44c66c:	cmp	x9, x20
  44c670:	b.ls	44d884 <_obstack_memory_used@@Base+0xf624>  // b.plast
  44c674:	cbz	x18, 44d790 <_obstack_memory_used@@Base+0xf530>
  44c678:	cmp	w8, #0x2
  44c67c:	b.cc	44d788 <_obstack_memory_used@@Base+0xf528>  // b.lo, b.ul, b.last
  44c680:	sxtw	x8, w27
  44c684:	cmp	w24, #0x30
  44c688:	sub	x21, x8, #0x1
  44c68c:	b.ne	44d754 <_obstack_memory_used@@Base+0xf4f4>  // b.any
  44c690:	mov	w1, #0x30                  	// #48
  44c694:	b	44d758 <_obstack_memory_used@@Base+0xf4f8>
  44c698:	mov	w8, #0x1                   	// #1
  44c69c:	ldrb	w9, [x25, x8]
  44c6a0:	cmp	w9, #0x3a
  44c6a4:	b.ne	44d034 <_obstack_memory_used@@Base+0xedd4>  // b.any
  44c6a8:	add	x8, x8, #0x1
  44c6ac:	b	44c69c <_obstack_memory_used@@Base+0xe43c>
  44c6b0:	cmp	w5, #0x45
  44c6b4:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c6b8:	mov	w20, wzr
  44c6bc:	mov	w13, wzr
  44c6c0:	orr	w2, w21, w2
  44c6c4:	b	44c9f0 <_obstack_memory_used@@Base+0xe790>
  44c6c8:	cmp	w5, #0x45
  44c6cc:	b.eq	44d028 <_obstack_memory_used@@Base+0xedc8>  // b.none
  44c6d0:	ldrsw	x9, [x3, #20]
  44c6d4:	mov	w10, #0x851f                	// #34079
  44c6d8:	movk	w10, #0x51eb, lsl #16
  44c6dc:	mov	w11, #0x64                  	// #100
  44c6e0:	mul	x10, x9, x10
  44c6e4:	lsr	x12, x10, #63
  44c6e8:	asr	x10, x10, #37
  44c6ec:	add	w10, w10, w12
  44c6f0:	cmn	x9, #0x76c
  44c6f4:	msub	w9, w10, w11, w9
  44c6f8:	cset	w12, lt  // lt = tstop
  44c6fc:	cset	w11, gt
  44c700:	cmp	w9, #0x0
  44c704:	cset	w9, lt  // lt = tstop
  44c708:	and	w9, w11, w9
  44c70c:	sub	w9, w10, w9
  44c710:	str	x18, [sp, #88]
  44c714:	str	x0, [sp, #104]
  44c718:	mov	w19, wzr
  44c71c:	mov	w8, wzr
  44c720:	add	w22, w9, #0x13
  44c724:	mov	w13, #0x2                   	// #2
  44c728:	b	44c9d4 <_obstack_memory_used@@Base+0xe774>
  44c72c:	cbnz	w5, 44d05c <_obstack_memory_used@@Base+0xedfc>
  44c730:	adrp	x28, 457000 <_obstack_memory_used@@Base+0x18da0>
  44c734:	add	x28, x28, #0xe78
  44c738:	b	44c804 <_obstack_memory_used@@Base+0xe5a4>
  44c73c:	cbnz	w5, 44d05c <_obstack_memory_used@@Base+0xedfc>
  44c740:	adrp	x28, 457000 <_obstack_memory_used@@Base+0x18da0>
  44c744:	add	x28, x28, #0xe81
  44c748:	b	44c804 <_obstack_memory_used@@Base+0xe5a4>
  44c74c:	cmp	w5, #0x45
  44c750:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c754:	ldr	w9, [x3, #8]
  44c758:	b	44c9b4 <_obstack_memory_used@@Base+0xe754>
  44c75c:	cmp	w5, #0x45
  44c760:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c764:	ldr	w9, [sp, #28]
  44c768:	b	44c9b4 <_obstack_memory_used@@Base+0xe754>
  44c76c:	cmp	w5, #0x45
  44c770:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c774:	ldr	w9, [x3, #4]
  44c778:	b	44c9b4 <_obstack_memory_used@@Base+0xe754>
  44c77c:	cmp	w5, #0x45
  44c780:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c784:	cmn	w27, #0x1
  44c788:	str	x0, [sp, #104]
  44c78c:	str	x18, [sp, #88]
  44c790:	b.eq	44d3ec <_obstack_memory_used@@Base+0xf18c>  // b.none
  44c794:	cmp	w27, #0x8
  44c798:	b.gt	44d440 <_obstack_memory_used@@Base+0xf1e0>
  44c79c:	ldr	w9, [sp, #52]
  44c7a0:	sub	w8, w27, #0x1
  44c7a4:	mov	w10, #0x6667                	// #26215
  44c7a8:	movk	w10, #0x6666, lsl #16
  44c7ac:	smull	x9, w9, w10
  44c7b0:	add	w8, w8, #0x1
  44c7b4:	lsr	x10, x9, #63
  44c7b8:	asr	x9, x9, #34
  44c7bc:	cmp	w8, #0x8
  44c7c0:	add	w9, w9, w10
  44c7c4:	b.lt	44c7a4 <_obstack_memory_used@@Base+0xe544>  // b.tstop
  44c7c8:	mov	w13, w27
  44c7cc:	b	44c9c0 <_obstack_memory_used@@Base+0xe760>
  44c7d0:	mov	w9, #0x1                   	// #1
  44c7d4:	mov	w4, #0x70                  	// #112
  44c7d8:	eor	w8, w21, #0x1
  44c7dc:	mov	w13, wzr
  44c7e0:	and	w2, w2, w8
  44c7e4:	orr	w20, w21, w9
  44c7e8:	b	44c9f0 <_obstack_memory_used@@Base+0xe790>
  44c7ec:	cmp	w5, #0x45
  44c7f0:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c7f4:	ldr	w9, [x3]
  44c7f8:	b	44c9b4 <_obstack_memory_used@@Base+0xe754>
  44c7fc:	adrp	x28, 459000 <_obstack_memory_used@@Base+0x1ada0>
  44c800:	add	x28, x28, #0xb91
  44c804:	ldr	x5, [sp, #56]
  44c808:	ldr	w6, [sp, #52]
  44c80c:	str	w2, [sp, #116]
  44c810:	and	w4, w2, #0x1
  44c814:	mov	x1, #0xffffffffffffffff    	// #-1
  44c818:	str	x0, [sp, #104]
  44c81c:	mov	x0, xzr
  44c820:	mov	x2, x28
  44c824:	mov	x23, x18
  44c828:	bl	44c3b4 <_obstack_memory_used@@Base+0xe154>
  44c82c:	ldr	x1, [sp, #128]
  44c830:	mov	x26, x0
  44c834:	ldr	x0, [sp, #104]
  44c838:	bic	w8, w27, w27, asr #31
  44c83c:	cmp	x26, x8
  44c840:	csel	x20, x8, x26, cc  // cc = lo, ul, last
  44c844:	sub	x21, x1, x0
  44c848:	cmp	x20, x21
  44c84c:	b.cs	44c874 <_obstack_memory_used@@Base+0xe614>  // b.hs, b.nlast
  44c850:	cbz	x23, 44d214 <_obstack_memory_used@@Base+0xefb4>
  44c854:	cmp	x26, x8
  44c858:	b.cs	44d368 <_obstack_memory_used@@Base+0xf108>  // b.hs, b.nlast
  44c85c:	sxtw	x8, w27
  44c860:	cmp	w24, #0x30
  44c864:	sub	x24, x8, x26
  44c868:	b.ne	44d354 <_obstack_memory_used@@Base+0xf0f4>  // b.any
  44c86c:	mov	w1, #0x30                  	// #48
  44c870:	b	44d358 <_obstack_memory_used@@Base+0xf0f8>
  44c874:	mov	w16, #0xcccc                	// #52428
  44c878:	mov	w8, #0x1                   	// #1
  44c87c:	movk	w16, #0xccc, lsl #16
  44c880:	mov	w17, #0xa                   	// #10
  44c884:	mov	x18, x23
  44c888:	b	44d3b0 <_obstack_memory_used@@Base+0xf150>
  44c88c:	cmp	w5, #0x45
  44c890:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c894:	str	x18, [sp, #88]
  44c898:	str	x0, [sp, #104]
  44c89c:	ldp	w9, w8, [x3, #24]
  44c8a0:	mov	w10, #0x2493                	// #9363
  44c8a4:	movk	w10, #0x9249, lsl #16
  44c8a8:	sub	w8, w8, w9
  44c8ac:	b	44c8f4 <_obstack_memory_used@@Base+0xe694>
  44c8b0:	cmp	w5, #0x45
  44c8b4:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c8b8:	str	x18, [sp, #88]
  44c8bc:	str	x0, [sp, #104]
  44c8c0:	ldp	w8, w9, [x3, #24]
  44c8c4:	mov	w10, #0x2493                	// #9363
  44c8c8:	movk	w10, #0x9249, lsl #16
  44c8cc:	add	w8, w8, #0x6
  44c8d0:	smull	x11, w8, w10
  44c8d4:	lsr	x11, x11, #32
  44c8d8:	add	w11, w11, w8
  44c8dc:	asr	w12, w11, #2
  44c8e0:	add	w11, w12, w11, lsr #31
  44c8e4:	lsl	w12, w11, #3
  44c8e8:	sub	w11, w12, w11
  44c8ec:	sub	w8, w11, w8
  44c8f0:	add	w8, w9, w8
  44c8f4:	add	w8, w8, #0x7
  44c8f8:	smull	x9, w8, w10
  44c8fc:	lsr	x9, x9, #32
  44c900:	add	w8, w9, w8
  44c904:	asr	w9, w8, #2
  44c908:	add	w9, w9, w8, lsr #31
  44c90c:	b	44c9bc <_obstack_memory_used@@Base+0xe75c>
  44c910:	cmp	w5, #0x45
  44c914:	b.eq	44d028 <_obstack_memory_used@@Base+0xedc8>  // b.none
  44c918:	cmp	w5, #0x4f
  44c91c:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c920:	ldr	w9, [x3, #20]
  44c924:	str	x18, [sp, #88]
  44c928:	str	x0, [sp, #104]
  44c92c:	mov	w19, wzr
  44c930:	cmn	w9, #0x76c
  44c934:	mov	w8, wzr
  44c938:	add	w22, w9, #0x76c
  44c93c:	cset	w12, lt  // lt = tstop
  44c940:	mov	w13, #0x4                   	// #4
  44c944:	b	44c9d4 <_obstack_memory_used@@Base+0xe774>
  44c948:	mov	x26, x0
  44c94c:	ldr	x0, [sp, #32]
  44c950:	str	w2, [sp, #116]
  44c954:	mov	x20, x18
  44c958:	bl	404190 <strlen@plt>
  44c95c:	ldr	x1, [sp, #128]
  44c960:	mov	x28, x0
  44c964:	bic	w8, w27, w27, asr #31
  44c968:	cmp	x28, x8
  44c96c:	csel	x23, x8, x28, cc  // cc = lo, ul, last
  44c970:	sub	x9, x1, x26
  44c974:	mov	x0, x26
  44c978:	cmp	x23, x9
  44c97c:	b.cs	44d21c <_obstack_memory_used@@Base+0xefbc>  // b.hs, b.nlast
  44c980:	cbz	x20, 44d3fc <_obstack_memory_used@@Base+0xf19c>
  44c984:	mov	x9, x20
  44c988:	cmp	x28, x8
  44c98c:	b.cs	44d44c <_obstack_memory_used@@Base+0xf1ec>  // b.hs, b.nlast
  44c990:	sxtw	x8, w27
  44c994:	cmp	w24, #0x30
  44c998:	sub	x24, x8, x28
  44c99c:	b.ne	44d494 <_obstack_memory_used@@Base+0xf234>  // b.any
  44c9a0:	mov	w1, #0x30                  	// #48
  44c9a4:	b	44d498 <_obstack_memory_used@@Base+0xf238>
  44c9a8:	cmp	w5, #0x45
  44c9ac:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44c9b0:	ldr	w9, [x3, #12]
  44c9b4:	str	x18, [sp, #88]
  44c9b8:	str	x0, [sp, #104]
  44c9bc:	mov	w13, #0x2                   	// #2
  44c9c0:	mov	w19, wzr
  44c9c4:	mov	w8, wzr
  44c9c8:	lsr	w12, w9, #31
  44c9cc:	mov	w22, w9
  44c9d0:	str	w9, [sp, #48]
  44c9d4:	cmp	w5, #0x4f
  44c9d8:	str	x12, [sp, #96]
  44c9dc:	b.ne	44ca88 <_obstack_memory_used@@Base+0xe828>  // b.any
  44c9e0:	tbnz	w12, #0, 44ca88 <_obstack_memory_used@@Base+0xe828>
  44c9e4:	ldr	x0, [sp, #104]
  44c9e8:	ldr	x18, [sp, #88]
  44c9ec:	mov	w20, wzr
  44c9f0:	mov	w8, #0x2520                	// #9504
  44c9f4:	sturh	w8, [x29, #-40]
  44c9f8:	ldr	x8, [sp, #80]
  44c9fc:	mov	w26, w13
  44ca00:	mov	x23, x18
  44ca04:	mov	x21, x0
  44ca08:	str	w2, [sp, #116]
  44ca0c:	cbz	w5, 44ca18 <_obstack_memory_used@@Base+0xe7b8>
  44ca10:	ldr	x8, [sp, #64]
  44ca14:	sturb	w5, [x29, #-38]
  44ca18:	add	x0, sp, #0x90
  44ca1c:	sub	x2, x29, #0x28
  44ca20:	mov	w1, #0x400                 	// #1024
  44ca24:	strb	w4, [x8]
  44ca28:	strb	wzr, [x8, #1]
  44ca2c:	bl	404310 <strftime@plt>
  44ca30:	cbz	x0, 44cb9c <_obstack_memory_used@@Base+0xe93c>
  44ca34:	ldr	x1, [sp, #128]
  44ca38:	sub	x28, x0, #0x1
  44ca3c:	bic	w8, w27, w27, asr #31
  44ca40:	cmp	x28, x8
  44ca44:	csel	x10, x8, x28, cc  // cc = lo, ul, last
  44ca48:	sub	x9, x1, x21
  44ca4c:	mov	x0, x21
  44ca50:	cmp	x10, x9
  44ca54:	b.cs	44cbb8 <_obstack_memory_used@@Base+0xe958>  // b.hs, b.nlast
  44ca58:	cbz	x23, 44ccf0 <_obstack_memory_used@@Base+0xea90>
  44ca5c:	mov	x9, x23
  44ca60:	cbnz	w26, 44d13c <_obstack_memory_used@@Base+0xeedc>
  44ca64:	cmp	x28, x8
  44ca68:	ldr	w8, [sp, #116]
  44ca6c:	b.cs	44d140 <_obstack_memory_used@@Base+0xeee0>  // b.hs, b.nlast
  44ca70:	sxtw	x8, w27
  44ca74:	cmp	w24, #0x30
  44ca78:	sub	x24, x8, x28
  44ca7c:	b.ne	44d160 <_obstack_memory_used@@Base+0xef00>  // b.any
  44ca80:	mov	w1, #0x30                  	// #48
  44ca84:	b	44d164 <_obstack_memory_used@@Base+0xef04>
  44ca88:	ldr	x28, [sp, #72]
  44ca8c:	ldr	x1, [sp, #128]
  44ca90:	ldr	x0, [sp, #104]
  44ca94:	ldr	x18, [sp, #88]
  44ca98:	tst	w12, #0x1
  44ca9c:	cneg	w9, w22, ne  // ne = any
  44caa0:	tbz	w19, #0, 44caac <_obstack_memory_used@@Base+0xe84c>
  44caa4:	mov	w10, #0x3a                  	// #58
  44caa8:	strb	w10, [x28, #-1]!
  44caac:	mov	w10, #0xcccd                	// #52429
  44cab0:	movk	w10, #0xcccc, lsl #16
  44cab4:	umull	x10, w9, w10
  44cab8:	mov	w11, #0xa                   	// #10
  44cabc:	lsr	x22, x10, #35
  44cac0:	msub	w10, w22, w11, w9
  44cac4:	orr	w10, w10, #0x30
  44cac8:	asr	w19, w19, #1
  44cacc:	cmp	w9, #0x9
  44cad0:	strb	w10, [x28, #-1]!
  44cad4:	mov	w9, w22
  44cad8:	b.hi	44caa0 <_obstack_memory_used@@Base+0xe840>  // b.pmore
  44cadc:	mov	w9, w22
  44cae0:	cbnz	w19, 44caa0 <_obstack_memory_used@@Base+0xe840>
  44cae4:	cmp	w13, w27
  44cae8:	mov	w9, #0x2b                  	// #43
  44caec:	csel	w11, w27, w13, lt  // lt = tstop
  44caf0:	cmp	w8, #0x0
  44caf4:	csel	w8, w9, wzr, ne  // ne = any
  44caf8:	ldr	x9, [sp, #96]
  44cafc:	mov	w10, #0x2d                  	// #45
  44cb00:	tst	w9, #0x1
  44cb04:	csel	w23, w10, w8, ne  // ne = any
  44cb08:	cmp	w24, #0x2d
  44cb0c:	b.ne	44cbd8 <_obstack_memory_used@@Base+0xe978>  // b.any
  44cb10:	cbz	w23, 44d83c <_obstack_memory_used@@Base+0xf5dc>
  44cb14:	bic	w8, w27, w27, asr #31
  44cb18:	cmp	w8, #0x1
  44cb1c:	csinc	w26, w8, wzr, hi  // hi = pmore
  44cb20:	sub	x9, x1, x0
  44cb24:	cmp	x9, x26
  44cb28:	b.ls	44cd58 <_obstack_memory_used@@Base+0xeaf8>  // b.plast
  44cb2c:	cbz	x18, 44cb8c <_obstack_memory_used@@Base+0xe92c>
  44cb30:	cbnz	w11, 44cb88 <_obstack_memory_used@@Base+0xe928>
  44cb34:	cmp	w8, #0x2
  44cb38:	b.cc	44cb88 <_obstack_memory_used@@Base+0xe928>  // b.lo, b.ul, b.last
  44cb3c:	sxtw	x8, w27
  44cb40:	sub	x21, x8, #0x1
  44cb44:	mov	w1, #0x20                  	// #32
  44cb48:	mov	x20, x0
  44cb4c:	mov	x0, x18
  44cb50:	str	w2, [sp, #116]
  44cb54:	mov	x2, x21
  44cb58:	str	x11, [sp, #16]
  44cb5c:	str	x18, [sp, #88]
  44cb60:	bl	404600 <memset@plt>
  44cb64:	ldr	x18, [sp, #88]
  44cb68:	ldr	w2, [sp, #116]
  44cb6c:	ldp	x3, x1, [sp, #120]
  44cb70:	ldr	x11, [sp, #16]
  44cb74:	mov	w16, #0xcccc                	// #52428
  44cb78:	mov	w17, #0xa                   	// #10
  44cb7c:	movk	w16, #0xccc, lsl #16
  44cb80:	mov	x0, x20
  44cb84:	add	x18, x18, x21
  44cb88:	strb	w23, [x18], #1
  44cb8c:	mov	w8, wzr
  44cb90:	add	x0, x0, x26
  44cb94:	cbnz	wzr, 44d890 <_obstack_memory_used@@Base+0xf630>
  44cb98:	b	44d83c <_obstack_memory_used@@Base+0xf5dc>
  44cb9c:	ldp	x3, x1, [sp, #120]
  44cba0:	mov	w16, #0xcccc                	// #52428
  44cba4:	mov	x0, x21
  44cba8:	movk	w16, #0xccc, lsl #16
  44cbac:	mov	w17, #0xa                   	// #10
  44cbb0:	mov	x18, x23
  44cbb4:	b	44d1e8 <_obstack_memory_used@@Base+0xef88>
  44cbb8:	ldr	x3, [sp, #120]
  44cbbc:	mov	w16, #0xcccc                	// #52428
  44cbc0:	mov	w8, #0x1                   	// #1
  44cbc4:	movk	w16, #0xccc, lsl #16
  44cbc8:	mov	w17, #0xa                   	// #10
  44cbcc:	mov	x18, x23
  44cbd0:	cbnz	w8, 44d1ec <_obstack_memory_used@@Base+0xef8c>
  44cbd4:	b	44d1e8 <_obstack_memory_used@@Base+0xef88>
  44cbd8:	ldr	x9, [sp, #72]
  44cbdc:	cmp	w23, #0x0
  44cbe0:	cset	w10, ne  // ne = any
  44cbe4:	sxtw	x8, w11
  44cbe8:	sub	x9, x28, x9
  44cbec:	sub	x9, x9, x10
  44cbf0:	add	x26, x9, x8
  44cbf4:	cmp	w26, #0x1
  44cbf8:	b.lt	44cd08 <_obstack_memory_used@@Base+0xeaa8>  // b.tstop
  44cbfc:	cmp	w24, #0x5f
  44cc00:	b.ne	44cd64 <_obstack_memory_used@@Base+0xeb04>  // b.any
  44cc04:	sxtw	x21, w26
  44cc08:	sub	x8, x1, x0
  44cc0c:	cmp	x21, x8
  44cc10:	b.cs	44cdbc <_obstack_memory_used@@Base+0xeb5c>  // b.hs, b.nlast
  44cc14:	cbz	x18, 44cc5c <_obstack_memory_used@@Base+0xe9fc>
  44cc18:	mov	w1, #0x20                  	// #32
  44cc1c:	mov	x20, x0
  44cc20:	mov	x0, x18
  44cc24:	str	w2, [sp, #116]
  44cc28:	mov	x2, x21
  44cc2c:	str	x11, [sp, #16]
  44cc30:	str	x18, [sp, #88]
  44cc34:	bl	404600 <memset@plt>
  44cc38:	ldr	x18, [sp, #88]
  44cc3c:	ldr	w2, [sp, #116]
  44cc40:	ldp	x3, x1, [sp, #120]
  44cc44:	ldr	x11, [sp, #16]
  44cc48:	mov	w16, #0xcccc                	// #52428
  44cc4c:	mov	w17, #0xa                   	// #10
  44cc50:	movk	w16, #0xccc, lsl #16
  44cc54:	mov	x0, x20
  44cc58:	add	x18, x18, x21
  44cc5c:	subs	w8, w27, w26
  44cc60:	add	x0, x21, x0
  44cc64:	csel	w27, w8, wzr, gt
  44cc68:	cbz	w23, 44d834 <_obstack_memory_used@@Base+0xf5d4>
  44cc6c:	cmp	w27, #0x1
  44cc70:	csinc	w26, w27, wzr, hi  // hi = pmore
  44cc74:	sub	x8, x1, x0
  44cc78:	cmp	x8, x26
  44cc7c:	b.ls	44d1f4 <_obstack_memory_used@@Base+0xef94>  // b.plast
  44cc80:	cbz	x18, 44cce0 <_obstack_memory_used@@Base+0xea80>
  44cc84:	cbnz	w11, 44ccdc <_obstack_memory_used@@Base+0xea7c>
  44cc88:	cmp	w27, #0x2
  44cc8c:	b.cc	44ccdc <_obstack_memory_used@@Base+0xea7c>  // b.lo, b.ul, b.last
  44cc90:	mov	w8, w27
  44cc94:	sub	x21, x8, #0x1
  44cc98:	mov	w1, #0x20                  	// #32
  44cc9c:	mov	x20, x0
  44cca0:	mov	x0, x18
  44cca4:	str	w2, [sp, #116]
  44cca8:	mov	x2, x21
  44ccac:	str	x11, [sp, #16]
  44ccb0:	str	x18, [sp, #88]
  44ccb4:	bl	404600 <memset@plt>
  44ccb8:	ldr	x18, [sp, #88]
  44ccbc:	ldr	w2, [sp, #116]
  44ccc0:	ldp	x3, x1, [sp, #120]
  44ccc4:	ldr	x11, [sp, #16]
  44ccc8:	mov	w16, #0xcccc                	// #52428
  44cccc:	mov	w17, #0xa                   	// #10
  44ccd0:	movk	w16, #0xccc, lsl #16
  44ccd4:	mov	x0, x20
  44ccd8:	add	x18, x18, x21
  44ccdc:	strb	w23, [x18], #1
  44cce0:	mov	w8, wzr
  44cce4:	add	x0, x0, x26
  44cce8:	cbnz	wzr, 44d838 <_obstack_memory_used@@Base+0xf5d8>
  44ccec:	b	44d834 <_obstack_memory_used@@Base+0xf5d4>
  44ccf0:	ldr	x3, [sp, #120]
  44ccf4:	mov	w16, #0xcccc                	// #52428
  44ccf8:	mov	x18, xzr
  44ccfc:	movk	w16, #0xccc, lsl #16
  44cd00:	mov	w17, #0xa                   	// #10
  44cd04:	b	44d1dc <_obstack_memory_used@@Base+0xef7c>
  44cd08:	cbz	w23, 44d834 <_obstack_memory_used@@Base+0xf5d4>
  44cd0c:	bic	w8, w27, w27, asr #31
  44cd10:	cmp	w8, #0x1
  44cd14:	csinc	w26, w8, wzr, hi  // hi = pmore
  44cd18:	sub	x9, x1, x0
  44cd1c:	cmp	x9, x26
  44cd20:	b.ls	44d1f4 <_obstack_memory_used@@Base+0xef94>  // b.plast
  44cd24:	cbz	x18, 44d744 <_obstack_memory_used@@Base+0xf4e4>
  44cd28:	cbnz	w11, 44d740 <_obstack_memory_used@@Base+0xf4e0>
  44cd2c:	cmp	w8, #0x2
  44cd30:	b.cc	44d740 <_obstack_memory_used@@Base+0xf4e0>  // b.lo, b.ul, b.last
  44cd34:	sxtw	x8, w27
  44cd38:	cmp	w24, #0x30
  44cd3c:	sub	x21, x8, #0x1
  44cd40:	str	x18, [sp, #88]
  44cd44:	str	w2, [sp, #116]
  44cd48:	str	x11, [sp, #16]
  44cd4c:	b.ne	44d708 <_obstack_memory_used@@Base+0xf4a8>  // b.any
  44cd50:	mov	w1, #0x30                  	// #48
  44cd54:	b	44d70c <_obstack_memory_used@@Base+0xf4ac>
  44cd58:	mov	w8, #0x1                   	// #1
  44cd5c:	cbnz	w8, 44d890 <_obstack_memory_used@@Base+0xf630>
  44cd60:	b	44d83c <_obstack_memory_used@@Base+0xf5dc>
  44cd64:	sub	x9, x1, x0
  44cd68:	cmp	x9, x8
  44cd6c:	b.ls	44cdbc <_obstack_memory_used@@Base+0xeb5c>  // b.plast
  44cd70:	cbz	w23, 44d7e0 <_obstack_memory_used@@Base+0xf580>
  44cd74:	bic	w8, w27, w27, asr #31
  44cd78:	cmp	w8, #0x1
  44cd7c:	csinc	w21, w8, wzr, hi  // hi = pmore
  44cd80:	cmp	x9, x21
  44cd84:	b.ls	44d438 <_obstack_memory_used@@Base+0xf1d8>  // b.plast
  44cd88:	cbz	x18, 44d7d4 <_obstack_memory_used@@Base+0xf574>
  44cd8c:	cbnz	w11, 44d7d0 <_obstack_memory_used@@Base+0xf570>
  44cd90:	cmp	w8, #0x2
  44cd94:	b.cc	44d7d0 <_obstack_memory_used@@Base+0xf570>  // b.lo, b.ul, b.last
  44cd98:	sxtw	x8, w27
  44cd9c:	str	w2, [sp, #116]
  44cda0:	cmp	w24, #0x30
  44cda4:	sub	x2, x8, #0x1
  44cda8:	str	x0, [sp, #104]
  44cdac:	stp	x2, x11, [sp, #8]
  44cdb0:	b.ne	44d7a0 <_obstack_memory_used@@Base+0xf540>  // b.any
  44cdb4:	mov	w1, #0x30                  	// #48
  44cdb8:	b	44d7a4 <_obstack_memory_used@@Base+0xf544>
  44cdbc:	mov	w8, #0x1                   	// #1
  44cdc0:	b	44d838 <_obstack_memory_used@@Base+0xf5d8>
  44cdc4:	cmp	w5, #0x45
  44cdc8:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44cdcc:	ldr	w9, [x3, #12]
  44cdd0:	b	44ce20 <_obstack_memory_used@@Base+0xebc0>
  44cdd4:	cmp	w5, #0x45
  44cdd8:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44cddc:	ldr	w9, [x3, #28]
  44cde0:	str	x18, [sp, #88]
  44cde4:	str	x0, [sp, #104]
  44cde8:	mov	w19, wzr
  44cdec:	cmn	w9, #0x1
  44cdf0:	mov	w8, wzr
  44cdf4:	add	w22, w9, #0x1
  44cdf8:	cset	w12, lt  // lt = tstop
  44cdfc:	mov	w13, #0x3                   	// #3
  44ce00:	b	44c9d4 <_obstack_memory_used@@Base+0xe774>
  44ce04:	cmp	w5, #0x45
  44ce08:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44ce0c:	ldr	w9, [x3, #8]
  44ce10:	b	44ce20 <_obstack_memory_used@@Base+0xebc0>
  44ce14:	ldr	w9, [sp, #28]
  44ce18:	cmp	w5, #0x45
  44ce1c:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44ce20:	and	w8, w24, #0xff
  44ce24:	cmp	w8, #0x2d
  44ce28:	mov	w13, #0x2                   	// #2
  44ce2c:	str	x0, [sp, #104]
  44ce30:	str	x18, [sp, #88]
  44ce34:	b.eq	44c9c0 <_obstack_memory_used@@Base+0xe760>  // b.none
  44ce38:	cmp	w8, #0x30
  44ce3c:	b.eq	44c9c0 <_obstack_memory_used@@Base+0xe760>  // b.none
  44ce40:	mov	w24, #0x5f                  	// #95
  44ce44:	b	44c9bc <_obstack_memory_used@@Base+0xe75c>
  44ce48:	cmp	w5, #0x45
  44ce4c:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44ce50:	ldr	w9, [x3, #16]
  44ce54:	str	x18, [sp, #88]
  44ce58:	str	x0, [sp, #104]
  44ce5c:	mov	w19, wzr
  44ce60:	cmn	w9, #0x1
  44ce64:	mov	w8, wzr
  44ce68:	add	w22, w9, #0x1
  44ce6c:	cset	w12, lt  // lt = tstop
  44ce70:	mov	w13, #0x2                   	// #2
  44ce74:	b	44c9d4 <_obstack_memory_used@@Base+0xe774>
  44ce78:	bic	w8, w27, w27, asr #31
  44ce7c:	cmp	w8, #0x1
  44ce80:	csinc	w20, w8, wzr, hi  // hi = pmore
  44ce84:	sub	x9, x1, x0
  44ce88:	cmp	x9, x20
  44ce8c:	b.ls	44d884 <_obstack_memory_used@@Base+0xf624>  // b.plast
  44ce90:	cbz	x18, 44d790 <_obstack_memory_used@@Base+0xf530>
  44ce94:	cmp	w8, #0x2
  44ce98:	b.cc	44d524 <_obstack_memory_used@@Base+0xf2c4>  // b.lo, b.ul, b.last
  44ce9c:	sxtw	x8, w27
  44cea0:	cmp	w24, #0x30
  44cea4:	sub	x21, x8, #0x1
  44cea8:	b.ne	44d4f0 <_obstack_memory_used@@Base+0xf290>  // b.any
  44ceac:	mov	w1, #0x30                  	// #48
  44ceb0:	b	44d4f4 <_obstack_memory_used@@Base+0xf294>
  44ceb4:	ldr	w9, [x3, #16]
  44ceb8:	mov	w10, #0xb                   	// #11
  44cebc:	str	x18, [sp, #88]
  44cec0:	str	x0, [sp, #104]
  44cec4:	mul	w9, w9, w10
  44cec8:	asr	w9, w9, #5
  44cecc:	mov	w19, wzr
  44ced0:	mov	w8, wzr
  44ced4:	mov	w12, wzr
  44ced8:	add	w22, w9, #0x1
  44cedc:	mov	w13, #0x1                   	// #1
  44cee0:	b	44c9d4 <_obstack_memory_used@@Base+0xe774>
  44cee4:	mov	x20, x0
  44cee8:	ldr	x8, [x3, #48]
  44ceec:	ldp	q1, q0, [x3, #16]
  44cef0:	ldr	q2, [x3]
  44cef4:	ldr	x0, [sp, #56]
  44cef8:	add	x1, sp, #0x90
  44cefc:	mov	w23, w2
  44cf00:	mov	x21, x18
  44cf04:	str	x8, [sp, #192]
  44cf08:	stp	q1, q0, [sp, #160]
  44cf0c:	str	q2, [sp, #144]
  44cf10:	bl	44b2a4 <_obstack_memory_used@@Base+0xd044>
  44cf14:	ldr	x28, [sp, #72]
  44cf18:	lsr	x8, x0, #63
  44cf1c:	str	x8, [sp, #96]
  44cf20:	mov	x8, x0
  44cf24:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  44cf28:	movk	x9, #0x6667
  44cf2c:	smulh	x9, x8, x9
  44cf30:	asr	x12, x9, #2
  44cf34:	mov	w10, #0xa                   	// #10
  44cf38:	add	x9, x12, x9, lsr #63
  44cf3c:	cmp	x0, #0x0
  44cf40:	add	x11, x8, #0x9
  44cf44:	msub	w8, w9, w10, w8
  44cf48:	cneg	w8, w8, lt  // lt = tstop
  44cf4c:	add	w8, w8, #0x30
  44cf50:	cmp	x11, #0x12
  44cf54:	strb	w8, [x28, #-1]!
  44cf58:	mov	x8, x9
  44cf5c:	b.hi	44cf24 <_obstack_memory_used@@Base+0xecc4>  // b.pmore
  44cf60:	ldp	x3, x1, [sp, #120]
  44cf64:	mov	w16, #0xcccc                	// #52428
  44cf68:	mov	w8, wzr
  44cf6c:	mov	x0, x20
  44cf70:	movk	w16, #0xccc, lsl #16
  44cf74:	mov	w17, #0xa                   	// #10
  44cf78:	mov	x18, x21
  44cf7c:	mov	w2, w23
  44cf80:	mov	w13, #0x1                   	// #1
  44cf84:	b	44cae4 <_obstack_memory_used@@Base+0xe884>
  44cf88:	bic	w8, w27, w27, asr #31
  44cf8c:	cmp	w8, #0x1
  44cf90:	csinc	w20, w8, wzr, hi  // hi = pmore
  44cf94:	sub	x9, x1, x0
  44cf98:	cmp	x9, x20
  44cf9c:	b.ls	44d884 <_obstack_memory_used@@Base+0xf624>  // b.plast
  44cfa0:	cbz	x18, 44d790 <_obstack_memory_used@@Base+0xf530>
  44cfa4:	cmp	w8, #0x2
  44cfa8:	b.cc	44d560 <_obstack_memory_used@@Base+0xf300>  // b.lo, b.ul, b.last
  44cfac:	sxtw	x8, w27
  44cfb0:	cmp	w24, #0x30
  44cfb4:	sub	x21, x8, #0x1
  44cfb8:	b.ne	44d52c <_obstack_memory_used@@Base+0xf2cc>  // b.any
  44cfbc:	mov	w1, #0x30                  	// #48
  44cfc0:	b	44d530 <_obstack_memory_used@@Base+0xf2d0>
  44cfc4:	ldr	w8, [x3, #24]
  44cfc8:	mov	w9, #0x2493                	// #9363
  44cfcc:	movk	w9, #0x9249, lsl #16
  44cfd0:	str	x18, [sp, #88]
  44cfd4:	add	w8, w8, #0x6
  44cfd8:	smull	x9, w8, w9
  44cfdc:	lsr	x9, x9, #32
  44cfe0:	add	w9, w9, w8
  44cfe4:	asr	w10, w9, #2
  44cfe8:	add	w9, w10, w9, lsr #31
  44cfec:	sub	w9, w9, w9, lsl #3
  44cff0:	add	w8, w8, w9
  44cff4:	str	x0, [sp, #104]
  44cff8:	add	w9, w8, #0x1
  44cffc:	mov	w13, #0x1                   	// #1
  44d000:	b	44c9c0 <_obstack_memory_used@@Base+0xe760>
  44d004:	cmp	w5, #0x45
  44d008:	b.eq	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.none
  44d00c:	ldr	w9, [x3, #24]
  44d010:	str	x18, [sp, #88]
  44d014:	str	x0, [sp, #104]
  44d018:	mov	w13, #0x1                   	// #1
  44d01c:	b	44c9c0 <_obstack_memory_used@@Base+0xe760>
  44d020:	cmp	w5, #0x45
  44d024:	b.ne	44d23c <_obstack_memory_used@@Base+0xefdc>  // b.any
  44d028:	mov	w20, wzr
  44d02c:	mov	w13, wzr
  44d030:	b	44c9f0 <_obstack_memory_used@@Base+0xe790>
  44d034:	cmp	w9, #0x7a
  44d038:	b.ne	44d05c <_obstack_memory_used@@Base+0xedfc>  // b.any
  44d03c:	add	x25, x25, x8
  44d040:	ldr	w9, [x3, #32]
  44d044:	tbnz	w9, #31, 44d88c <_obstack_memory_used@@Base+0xf62c>
  44d048:	ldr	w9, [x3, #40]
  44d04c:	tbnz	w9, #31, 44d2b0 <_obstack_memory_used@@Base+0xf050>
  44d050:	cbz	w9, 44d2b8 <_obstack_memory_used@@Base+0xf058>
  44d054:	str	xzr, [sp, #96]
  44d058:	b	44d2cc <_obstack_memory_used@@Base+0xf06c>
  44d05c:	mov	w13, wzr
  44d060:	mov	x8, xzr
  44d064:	ldrb	w9, [x25, x8]
  44d068:	sub	x8, x8, #0x1
  44d06c:	cmp	w9, #0x25
  44d070:	b.ne	44d064 <_obstack_memory_used@@Base+0xee04>  // b.any
  44d074:	neg	x9, x8
  44d078:	bic	w10, w27, w27, asr #31
  44d07c:	cmp	w10, w9
  44d080:	csel	w20, w9, w10, cc  // cc = lo, ul, last
  44d084:	sub	x11, x1, x0
  44d088:	cmp	x11, x20
  44d08c:	b.ls	44d884 <_obstack_memory_used@@Base+0xf624>  // b.plast
  44d090:	cbz	x18, 44d12c <_obstack_memory_used@@Base+0xeecc>
  44d094:	add	x28, x25, x8
  44d098:	and	x26, x9, #0xffffffff
  44d09c:	cbnz	w13, 44d0e8 <_obstack_memory_used@@Base+0xee88>
  44d0a0:	cmp	w10, w9
  44d0a4:	b.ls	44d0e8 <_obstack_memory_used@@Base+0xee88>  // b.plast
  44d0a8:	sxtw	x8, w27
  44d0ac:	mov	x23, x0
  44d0b0:	cmp	w24, #0x30
  44d0b4:	sub	x21, x8, x26
  44d0b8:	str	w2, [sp, #116]
  44d0bc:	b.ne	44d0c8 <_obstack_memory_used@@Base+0xee68>  // b.any
  44d0c0:	mov	w1, #0x30                  	// #48
  44d0c4:	b	44d0cc <_obstack_memory_used@@Base+0xee6c>
  44d0c8:	mov	w1, #0x20                  	// #32
  44d0cc:	mov	x0, x18
  44d0d0:	mov	x2, x21
  44d0d4:	mov	x24, x18
  44d0d8:	bl	404600 <memset@plt>
  44d0dc:	ldr	w2, [sp, #116]
  44d0e0:	add	x18, x24, x21
  44d0e4:	mov	x0, x23
  44d0e8:	mov	x21, x0
  44d0ec:	add	x1, x28, #0x1
  44d0f0:	mov	x0, x18
  44d0f4:	tbz	w2, #0, 44d108 <_obstack_memory_used@@Base+0xeea8>
  44d0f8:	mov	x2, x26
  44d0fc:	mov	x23, x18
  44d100:	bl	44d9c4 <_obstack_memory_used@@Base+0xf764>
  44d104:	b	44d114 <_obstack_memory_used@@Base+0xeeb4>
  44d108:	mov	x2, x26
  44d10c:	mov	x23, x18
  44d110:	bl	404110 <memcpy@plt>
  44d114:	ldp	x3, x1, [sp, #120]
  44d118:	mov	w16, #0xcccc                	// #52428
  44d11c:	add	x18, x23, x26
  44d120:	mov	x0, x21
  44d124:	movk	w16, #0xccc, lsl #16
  44d128:	mov	w17, #0xa                   	// #10
  44d12c:	mov	w8, wzr
  44d130:	add	x0, x0, x20
  44d134:	cbnz	w8, 44d890 <_obstack_memory_used@@Base+0xf630>
  44d138:	b	44d88c <_obstack_memory_used@@Base+0xf62c>
  44d13c:	ldr	w8, [sp, #116]
  44d140:	mov	x0, x9
  44d144:	tbz	w20, #0, 44d18c <_obstack_memory_used@@Base+0xef2c>
  44d148:	ldr	x1, [sp, #40]
  44d14c:	mov	x2, x28
  44d150:	mov	x20, x9
  44d154:	mov	x23, x10
  44d158:	bl	44d96c <_obstack_memory_used@@Base+0xf70c>
  44d15c:	b	44d1bc <_obstack_memory_used@@Base+0xef5c>
  44d160:	mov	w1, #0x20                  	// #32
  44d164:	mov	x0, x9
  44d168:	mov	x2, x24
  44d16c:	mov	x26, x10
  44d170:	bl	404600 <memset@plt>
  44d174:	ldr	w8, [sp, #116]
  44d178:	mov	x9, x23
  44d17c:	mov	x10, x26
  44d180:	add	x9, x23, x24
  44d184:	mov	x0, x9
  44d188:	tbnz	w20, #0, 44d148 <_obstack_memory_used@@Base+0xeee8>
  44d18c:	tbz	w8, #0, 44d1a8 <_obstack_memory_used@@Base+0xef48>
  44d190:	ldr	x1, [sp, #40]
  44d194:	mov	x2, x28
  44d198:	mov	x20, x9
  44d19c:	mov	x23, x10
  44d1a0:	bl	44d9c4 <_obstack_memory_used@@Base+0xf764>
  44d1a4:	b	44d1bc <_obstack_memory_used@@Base+0xef5c>
  44d1a8:	ldr	x1, [sp, #40]
  44d1ac:	mov	x2, x28
  44d1b0:	mov	x20, x9
  44d1b4:	mov	x23, x10
  44d1b8:	bl	404110 <memcpy@plt>
  44d1bc:	ldp	x3, x1, [sp, #120]
  44d1c0:	mov	x18, x20
  44d1c4:	mov	w16, #0xcccc                	// #52428
  44d1c8:	mov	x10, x23
  44d1cc:	mov	x0, x21
  44d1d0:	movk	w16, #0xccc, lsl #16
  44d1d4:	mov	w17, #0xa                   	// #10
  44d1d8:	add	x18, x20, x28
  44d1dc:	mov	w8, wzr
  44d1e0:	add	x0, x10, x0
  44d1e4:	cbnz	w8, 44d1ec <_obstack_memory_used@@Base+0xef8c>
  44d1e8:	mov	w8, wzr
  44d1ec:	cbnz	w8, 44d890 <_obstack_memory_used@@Base+0xf630>
  44d1f0:	b	44d88c <_obstack_memory_used@@Base+0xf62c>
  44d1f4:	mov	w8, #0x1                   	// #1
  44d1f8:	cbnz	w8, 44d838 <_obstack_memory_used@@Base+0xf5d8>
  44d1fc:	b	44d834 <_obstack_memory_used@@Base+0xf5d4>
  44d200:	sub	w8, w21, #0x1
  44d204:	tst	w8, #0x3
  44d208:	b.eq	44d3bc <_obstack_memory_used@@Base+0xf15c>  // b.none
  44d20c:	mov	w8, wzr
  44d210:	b	44d57c <_obstack_memory_used@@Base+0xf31c>
  44d214:	mov	x18, xzr
  44d218:	b	44d39c <_obstack_memory_used@@Base+0xf13c>
  44d21c:	ldr	x3, [sp, #120]
  44d220:	mov	w16, #0xcccc                	// #52428
  44d224:	mov	w8, #0x1                   	// #1
  44d228:	movk	w16, #0xccc, lsl #16
  44d22c:	mov	w17, #0xa                   	// #10
  44d230:	mov	x18, x20
  44d234:	cbnz	w8, 44d890 <_obstack_memory_used@@Base+0xf630>
  44d238:	b	44d88c <_obstack_memory_used@@Base+0xf62c>
  44d23c:	ldrsw	x8, [x3, #20]
  44d240:	mov	w9, #0x851f                	// #34079
  44d244:	movk	w9, #0x51eb, lsl #16
  44d248:	mov	w10, #0x64                  	// #100
  44d24c:	mul	x9, x8, x9
  44d250:	lsr	x11, x9, #63
  44d254:	asr	x9, x9, #37
  44d258:	add	w9, w9, w11
  44d25c:	cmn	w8, #0x76c
  44d260:	msub	w8, w9, w10, w8
  44d264:	add	w9, w8, #0x64
  44d268:	csneg	w9, w9, w8, ge  // ge = tcont
  44d26c:	cmp	w8, #0x0
  44d270:	str	x18, [sp, #88]
  44d274:	str	x0, [sp, #104]
  44d278:	csel	w9, w9, w8, lt  // lt = tstop
  44d27c:	b	44c9bc <_obstack_memory_used@@Base+0xe75c>
  44d280:	mov	w8, #0x5c29                	// #23593
  44d284:	mov	w9, #0xb850                	// #47184
  44d288:	movk	w8, #0xc28f, lsl #16
  44d28c:	movk	w9, #0x51e, lsl #16
  44d290:	madd	w8, w21, w8, w9
  44d294:	mov	w10, #0x5c28                	// #23592
  44d298:	ror	w9, w8, #2
  44d29c:	movk	w10, #0x28f, lsl #16
  44d2a0:	cmp	w9, w10
  44d2a4:	b.ls	44d454 <_obstack_memory_used@@Base+0xf1f4>  // b.plast
  44d2a8:	mov	w8, #0x1                   	// #1
  44d2ac:	b	44d468 <_obstack_memory_used@@Base+0xf208>
  44d2b0:	mov	w10, #0x1                   	// #1
  44d2b4:	b	44d2c8 <_obstack_memory_used@@Base+0xf068>
  44d2b8:	ldr	x10, [sp, #32]
  44d2bc:	ldrb	w10, [x10]
  44d2c0:	cmp	w10, #0x2d
  44d2c4:	cset	w10, eq  // eq = none
  44d2c8:	str	x10, [sp, #96]
  44d2cc:	cmp	x8, #0x3
  44d2d0:	b.hi	44d40c <_obstack_memory_used@@Base+0xf1ac>  // b.pmore
  44d2d4:	mov	w10, #0x8889                	// #34953
  44d2d8:	movk	w10, #0x8888, lsl #16
  44d2dc:	mov	w11, #0xb3c5                	// #46021
  44d2e0:	adrp	x12, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44d2e4:	movk	w11, #0x91a2, lsl #16
  44d2e8:	add	x12, x12, #0xa1e
  44d2ec:	smull	x13, w9, w10
  44d2f0:	smull	x11, w9, w11
  44d2f4:	adr	x14, 44d344 <_obstack_memory_used@@Base+0xf0e4>
  44d2f8:	ldrb	w15, [x12, x8]
  44d2fc:	add	x14, x14, x15, lsl #2
  44d300:	lsr	x8, x13, #32
  44d304:	lsr	x11, x11, #32
  44d308:	add	w8, w8, w9
  44d30c:	add	w11, w11, w9
  44d310:	asr	w12, w8, #5
  44d314:	add	w12, w12, w8, lsr #31
  44d318:	asr	w8, w11, #11
  44d31c:	add	w22, w8, w11, lsr #31
  44d320:	smull	x8, w12, w10
  44d324:	lsr	x8, x8, #32
  44d328:	add	w8, w8, w12
  44d32c:	asr	w10, w8, #5
  44d330:	add	w8, w10, w8, lsr #31
  44d334:	mov	w10, #0x3c                  	// #60
  44d338:	msub	w8, w8, w10, w12
  44d33c:	msub	w9, w12, w10, w9
  44d340:	br	x14
  44d344:	mov	w9, #0x64                  	// #100
  44d348:	mov	w19, wzr
  44d34c:	mov	w13, #0x5                   	// #5
  44d350:	b	44d6dc <_obstack_memory_used@@Base+0xf47c>
  44d354:	mov	w1, #0x20                  	// #32
  44d358:	mov	x0, x23
  44d35c:	mov	x2, x24
  44d360:	bl	404600 <memset@plt>
  44d364:	add	x23, x23, x24
  44d368:	ldr	w8, [sp, #116]
  44d36c:	ldr	x3, [sp, #120]
  44d370:	ldr	x5, [sp, #56]
  44d374:	ldr	w6, [sp, #52]
  44d378:	and	w4, w8, #0x1
  44d37c:	mov	x0, x23
  44d380:	mov	x1, x21
  44d384:	mov	x2, x28
  44d388:	bl	44c3b4 <_obstack_memory_used@@Base+0xe154>
  44d38c:	ldr	x1, [sp, #128]
  44d390:	ldr	x0, [sp, #104]
  44d394:	mov	x18, x23
  44d398:	add	x18, x23, x26
  44d39c:	mov	w16, #0xcccc                	// #52428
  44d3a0:	movk	w16, #0xccc, lsl #16
  44d3a4:	mov	w17, #0xa                   	// #10
  44d3a8:	mov	w8, wzr
  44d3ac:	add	x0, x20, x0
  44d3b0:	ldr	x3, [sp, #120]
  44d3b4:	cbnz	w8, 44d890 <_obstack_memory_used@@Base+0xf630>
  44d3b8:	b	44d88c <_obstack_memory_used@@Base+0xf62c>
  44d3bc:	mov	w9, #0x5c29                	// #23593
  44d3c0:	mov	w10, #0xb850                	// #47184
  44d3c4:	movk	w9, #0xc28f, lsl #16
  44d3c8:	movk	w10, #0x51e, lsl #16
  44d3cc:	madd	w8, w8, w9, w10
  44d3d0:	mov	w10, #0x5c28                	// #23592
  44d3d4:	ror	w9, w8, #2
  44d3d8:	movk	w10, #0x28f, lsl #16
  44d3dc:	cmp	w9, w10
  44d3e0:	b.ls	44d568 <_obstack_memory_used@@Base+0xf308>  // b.plast
  44d3e4:	mov	w8, #0x1                   	// #1
  44d3e8:	b	44d57c <_obstack_memory_used@@Base+0xf31c>
  44d3ec:	ldr	w9, [sp, #52]
  44d3f0:	mov	w27, #0x9                   	// #9
  44d3f4:	mov	w13, #0x9                   	// #9
  44d3f8:	b	44c9c0 <_obstack_memory_used@@Base+0xe760>
  44d3fc:	ldr	x3, [sp, #120]
  44d400:	mov	w16, #0xcccc                	// #52428
  44d404:	mov	x18, xzr
  44d408:	b	44d910 <_obstack_memory_used@@Base+0xf6b0>
  44d40c:	mov	w13, wzr
  44d410:	mov	w8, #0xe                   	// #14
  44d414:	b	44d6e4 <_obstack_memory_used@@Base+0xf484>
  44d418:	cbz	w9, 44d6cc <_obstack_memory_used@@Base+0xf46c>
  44d41c:	mov	w10, #0x2710                	// #10000
  44d420:	mov	w11, #0x64                  	// #100
  44d424:	madd	w9, w22, w10, w9
  44d428:	mov	w13, #0x9                   	// #9
  44d42c:	mov	w19, #0x14                  	// #20
  44d430:	madd	w22, w8, w11, w9
  44d434:	b	44d6e0 <_obstack_memory_used@@Base+0xf480>
  44d438:	mov	w8, #0x1                   	// #1
  44d43c:	b	44d7dc <_obstack_memory_used@@Base+0xf57c>
  44d440:	ldr	w9, [sp, #52]
  44d444:	mov	w13, w27
  44d448:	b	44c9c0 <_obstack_memory_used@@Base+0xe760>
  44d44c:	ldr	w10, [sp, #116]
  44d450:	b	44d4b0 <_obstack_memory_used@@Base+0xf250>
  44d454:	mov	w9, #0xd70b                	// #55051
  44d458:	ror	w8, w8, #4
  44d45c:	movk	w9, #0xa3, lsl #16
  44d460:	cmp	w8, w9
  44d464:	cset	w8, cc  // cc = lo, ul, last
  44d468:	cmp	w8, #0x0
  44d46c:	mov	w8, #0x16d                 	// #365
  44d470:	cinc	w8, w8, ne  // ne = any
  44d474:	mov	w1, w26
  44d478:	sub	w0, w19, w8
  44d47c:	bl	44da1c <_obstack_memory_used@@Base+0xf7bc>
  44d480:	mvn	w8, w0
  44d484:	cmp	w0, #0x0
  44d488:	lsr	w9, w8, #31
  44d48c:	csel	w0, w0, w28, ge  // ge = tcont
  44d490:	b	44d598 <_obstack_memory_used@@Base+0xf338>
  44d494:	mov	w1, #0x20                  	// #32
  44d498:	mov	x0, x9
  44d49c:	mov	x2, x24
  44d4a0:	bl	404600 <memset@plt>
  44d4a4:	ldr	w10, [sp, #116]
  44d4a8:	mov	x9, x20
  44d4ac:	add	x9, x20, x24
  44d4b0:	tbz	w21, #0, 44d4cc <_obstack_memory_used@@Base+0xf26c>
  44d4b4:	ldr	x1, [sp, #32]
  44d4b8:	mov	x0, x9
  44d4bc:	mov	x2, x28
  44d4c0:	mov	x20, x9
  44d4c4:	bl	44d96c <_obstack_memory_used@@Base+0xf70c>
  44d4c8:	b	44d6ac <_obstack_memory_used@@Base+0xf44c>
  44d4cc:	eor	w8, w21, #0x1
  44d4d0:	mov	x0, x9
  44d4d4:	and	w8, w10, w8
  44d4d8:	tbz	w8, #0, 44d69c <_obstack_memory_used@@Base+0xf43c>
  44d4dc:	ldr	x1, [sp, #32]
  44d4e0:	mov	x2, x28
  44d4e4:	mov	x20, x9
  44d4e8:	bl	44d9c4 <_obstack_memory_used@@Base+0xf764>
  44d4ec:	b	44d6ac <_obstack_memory_used@@Base+0xf44c>
  44d4f0:	mov	w1, #0x20                  	// #32
  44d4f4:	mov	x23, x0
  44d4f8:	mov	x0, x18
  44d4fc:	mov	x2, x21
  44d500:	mov	x24, x18
  44d504:	bl	404600 <memset@plt>
  44d508:	ldp	x3, x1, [sp, #120]
  44d50c:	mov	x18, x24
  44d510:	mov	w16, #0xcccc                	// #52428
  44d514:	mov	w17, #0xa                   	// #10
  44d518:	movk	w16, #0xccc, lsl #16
  44d51c:	mov	x0, x23
  44d520:	add	x18, x24, x21
  44d524:	mov	w8, #0xa                   	// #10
  44d528:	b	44d78c <_obstack_memory_used@@Base+0xf52c>
  44d52c:	mov	w1, #0x20                  	// #32
  44d530:	mov	x23, x0
  44d534:	mov	x0, x18
  44d538:	mov	x2, x21
  44d53c:	mov	x24, x18
  44d540:	bl	404600 <memset@plt>
  44d544:	ldp	x3, x1, [sp, #120]
  44d548:	mov	x18, x24
  44d54c:	mov	w16, #0xcccc                	// #52428
  44d550:	mov	w17, #0xa                   	// #10
  44d554:	movk	w16, #0xccc, lsl #16
  44d558:	mov	x0, x23
  44d55c:	add	x18, x24, x21
  44d560:	mov	w8, #0x9                   	// #9
  44d564:	b	44d78c <_obstack_memory_used@@Base+0xf52c>
  44d568:	mov	w9, #0xd70b                	// #55051
  44d56c:	ror	w8, w8, #4
  44d570:	movk	w9, #0xa3, lsl #16
  44d574:	cmp	w8, w9
  44d578:	cset	w8, cc  // cc = lo, ul, last
  44d57c:	cmp	w8, #0x0
  44d580:	mov	w8, #0x16d                 	// #365
  44d584:	cinc	w8, w8, ne  // ne = any
  44d588:	mov	w1, w26
  44d58c:	add	w0, w8, w19
  44d590:	bl	44da1c <_obstack_memory_used@@Base+0xf7bc>
  44d594:	mov	w9, #0xffffffff            	// #-1
  44d598:	ldr	x3, [sp, #120]
  44d59c:	ldr	w2, [sp, #116]
  44d5a0:	ldr	w5, [sp, #16]
  44d5a4:	mov	w16, #0xcccc                	// #52428
  44d5a8:	mov	x4, x23
  44d5ac:	movk	w16, #0xccc, lsl #16
  44d5b0:	mov	w17, #0xa                   	// #10
  44d5b4:	cmp	w4, #0x47
  44d5b8:	b.eq	44d60c <_obstack_memory_used@@Base+0xf3ac>  // b.none
  44d5bc:	cmp	w4, #0x67
  44d5c0:	b.ne	44d638 <_obstack_memory_used@@Base+0xf3d8>  // b.any
  44d5c4:	mov	w8, #0x851f                	// #34079
  44d5c8:	movk	w8, #0x51eb, lsl #16
  44d5cc:	smull	x11, w20, w8
  44d5d0:	lsr	x12, x11, #63
  44d5d4:	asr	x11, x11, #37
  44d5d8:	mov	w10, #0x64                  	// #100
  44d5dc:	add	w11, w11, w12
  44d5e0:	msub	w11, w11, w10, w20
  44d5e4:	add	w11, w9, w11
  44d5e8:	smull	x8, w11, w8
  44d5ec:	lsr	x12, x8, #63
  44d5f0:	asr	x8, x8, #37
  44d5f4:	add	w8, w8, w12
  44d5f8:	msub	w8, w8, w10, w11
  44d5fc:	tbnz	w8, #31, 44d664 <_obstack_memory_used@@Base+0xf404>
  44d600:	str	w8, [sp, #48]
  44d604:	mov	w8, wzr
  44d608:	b	44d684 <_obstack_memory_used@@Base+0xf424>
  44d60c:	mov	w8, #0xfffff894            	// #-1900
  44d610:	sub	w8, w8, w9
  44d614:	add	w10, w20, w9
  44d618:	cmp	w20, w8
  44d61c:	mov	w13, #0x4                   	// #4
  44d620:	add	w22, w10, #0x76c
  44d624:	cset	w12, lt  // lt = tstop
  44d628:	mov	w8, #0x1                   	// #1
  44d62c:	tbnz	w8, #0, 44d690 <_obstack_memory_used@@Base+0xf430>
  44d630:	ldr	w9, [sp, #48]
  44d634:	b	44c9c0 <_obstack_memory_used@@Base+0xe760>
  44d638:	mov	w9, #0x2493                	// #9363
  44d63c:	movk	w9, #0x9249, lsl #16
  44d640:	smull	x9, w0, w9
  44d644:	lsr	x9, x9, #32
  44d648:	add	w9, w9, w0
  44d64c:	asr	w10, w9, #2
  44d650:	add	w9, w10, w9, lsr #31
  44d654:	mov	w8, wzr
  44d658:	add	w9, w9, #0x1
  44d65c:	str	w9, [sp, #48]
  44d660:	b	44d684 <_obstack_memory_used@@Base+0xf424>
  44d664:	mov	w10, #0xfffff894            	// #-1900
  44d668:	mov	w12, w8
  44d66c:	sub	w9, w10, w9
  44d670:	add	w11, w12, #0x64
  44d674:	cmp	w20, w9
  44d678:	csneg	w12, w11, w12, ge  // ge = tcont
  44d67c:	mov	w8, wzr
  44d680:	str	w12, [sp, #48]
  44d684:	ldr	x12, [sp, #96]
  44d688:	mov	w13, #0x2                   	// #2
  44d68c:	tbz	w8, #0, 44d630 <_obstack_memory_used@@Base+0xf3d0>
  44d690:	mov	w19, wzr
  44d694:	mov	w8, wzr
  44d698:	b	44c9d4 <_obstack_memory_used@@Base+0xe774>
  44d69c:	ldr	x1, [sp, #32]
  44d6a0:	mov	x2, x28
  44d6a4:	mov	x20, x9
  44d6a8:	bl	404110 <memcpy@plt>
  44d6ac:	ldp	x3, x1, [sp, #120]
  44d6b0:	mov	x18, x20
  44d6b4:	mov	w16, #0xcccc                	// #52428
  44d6b8:	mov	x0, x26
  44d6bc:	movk	w16, #0xccc, lsl #16
  44d6c0:	mov	w17, #0xa                   	// #10
  44d6c4:	add	x18, x20, x28
  44d6c8:	b	44d918 <_obstack_memory_used@@Base+0xf6b8>
  44d6cc:	cbz	w8, 44d928 <_obstack_memory_used@@Base+0xf6c8>
  44d6d0:	mov	w9, #0x64                  	// #100
  44d6d4:	mov	w13, #0x6                   	// #6
  44d6d8:	mov	w19, #0x4                   	// #4
  44d6dc:	madd	w22, w22, w9, w8
  44d6e0:	mov	w8, #0x20                  	// #32
  44d6e4:	cmp	w8, #0xe
  44d6e8:	b.eq	44d060 <_obstack_memory_used@@Base+0xee00>  // b.none
  44d6ec:	cmp	w8, #0x20
  44d6f0:	b.ne	44d890 <_obstack_memory_used@@Base+0xf630>  // b.any
  44d6f4:	ldr	x12, [sp, #96]
  44d6f8:	str	x18, [sp, #88]
  44d6fc:	str	x0, [sp, #104]
  44d700:	mov	w8, #0x1                   	// #1
  44d704:	b	44c9d4 <_obstack_memory_used@@Base+0xe774>
  44d708:	mov	w1, #0x20                  	// #32
  44d70c:	mov	x20, x0
  44d710:	mov	x0, x18
  44d714:	mov	x2, x21
  44d718:	bl	404600 <memset@plt>
  44d71c:	ldr	x18, [sp, #88]
  44d720:	ldr	w2, [sp, #116]
  44d724:	ldp	x3, x1, [sp, #120]
  44d728:	ldr	x11, [sp, #16]
  44d72c:	mov	w16, #0xcccc                	// #52428
  44d730:	mov	w17, #0xa                   	// #10
  44d734:	movk	w16, #0xccc, lsl #16
  44d738:	mov	x0, x20
  44d73c:	add	x18, x18, x21
  44d740:	strb	w23, [x18], #1
  44d744:	mov	w8, wzr
  44d748:	add	x0, x0, x26
  44d74c:	cbnz	w8, 44d838 <_obstack_memory_used@@Base+0xf5d8>
  44d750:	b	44d834 <_obstack_memory_used@@Base+0xf5d4>
  44d754:	mov	w1, #0x20                  	// #32
  44d758:	mov	x23, x0
  44d75c:	mov	x0, x18
  44d760:	mov	x2, x21
  44d764:	mov	x24, x18
  44d768:	bl	404600 <memset@plt>
  44d76c:	ldp	x3, x1, [sp, #120]
  44d770:	mov	x18, x24
  44d774:	mov	w16, #0xcccc                	// #52428
  44d778:	mov	w17, #0xa                   	// #10
  44d77c:	movk	w16, #0xccc, lsl #16
  44d780:	mov	x0, x23
  44d784:	add	x18, x24, x21
  44d788:	ldrb	w8, [x25]
  44d78c:	strb	w8, [x18], #1
  44d790:	mov	w8, wzr
  44d794:	add	x0, x0, x20
  44d798:	cbnz	wzr, 44d890 <_obstack_memory_used@@Base+0xf630>
  44d79c:	b	44d88c <_obstack_memory_used@@Base+0xf62c>
  44d7a0:	mov	w1, #0x20                  	// #32
  44d7a4:	mov	x0, x18
  44d7a8:	mov	x20, x18
  44d7ac:	bl	404600 <memset@plt>
  44d7b0:	ldp	x8, x11, [sp, #8]
  44d7b4:	ldp	x3, x1, [sp, #120]
  44d7b8:	ldr	x0, [sp, #104]
  44d7bc:	ldr	w2, [sp, #116]
  44d7c0:	mov	w16, #0xcccc                	// #52428
  44d7c4:	add	x18, x20, x8
  44d7c8:	movk	w16, #0xccc, lsl #16
  44d7cc:	mov	w17, #0xa                   	// #10
  44d7d0:	strb	w23, [x18], #1
  44d7d4:	mov	w8, wzr
  44d7d8:	add	x0, x0, x21
  44d7dc:	cbnz	w8, 44d838 <_obstack_memory_used@@Base+0xf5d8>
  44d7e0:	cbz	x18, 44d82c <_obstack_memory_used@@Base+0xf5cc>
  44d7e4:	sxtw	x21, w26
  44d7e8:	mov	w1, #0x30                  	// #48
  44d7ec:	mov	x20, x0
  44d7f0:	mov	x0, x18
  44d7f4:	mov	w27, w2
  44d7f8:	mov	x2, x21
  44d7fc:	str	x11, [sp, #16]
  44d800:	mov	x23, x18
  44d804:	bl	404600 <memset@plt>
  44d808:	ldp	x3, x1, [sp, #120]
  44d80c:	ldr	x11, [sp, #16]
  44d810:	mov	x18, x23
  44d814:	mov	w16, #0xcccc                	// #52428
  44d818:	mov	w2, w27
  44d81c:	mov	w17, #0xa                   	// #10
  44d820:	movk	w16, #0xccc, lsl #16
  44d824:	mov	x0, x20
  44d828:	add	x18, x23, x21
  44d82c:	mov	w27, wzr
  44d830:	add	x0, x0, w26, sxtw
  44d834:	mov	w8, wzr
  44d838:	cbnz	w8, 44d890 <_obstack_memory_used@@Base+0xf630>
  44d83c:	ldr	x8, [sp, #72]
  44d840:	sub	x9, x1, x0
  44d844:	sub	x26, x8, x28
  44d848:	bic	w8, w27, w27, asr #31
  44d84c:	cmp	x26, x8
  44d850:	csel	x23, x8, x26, cc  // cc = lo, ul, last
  44d854:	cmp	x23, x9
  44d858:	b.cs	44d884 <_obstack_memory_used@@Base+0xf624>  // b.hs, b.nlast
  44d85c:	cbz	x18, 44d918 <_obstack_memory_used@@Base+0xf6b8>
  44d860:	cbnz	w11, 44d8d4 <_obstack_memory_used@@Base+0xf674>
  44d864:	cmp	x26, x8
  44d868:	b.cs	44d8d4 <_obstack_memory_used@@Base+0xf674>  // b.hs, b.nlast
  44d86c:	sxtw	x8, w27
  44d870:	cmp	w24, #0x30
  44d874:	sub	x21, x8, x26
  44d878:	b.ne	44d8a8 <_obstack_memory_used@@Base+0xf648>  // b.any
  44d87c:	mov	w1, #0x30                  	// #48
  44d880:	b	44d8ac <_obstack_memory_used@@Base+0xf64c>
  44d884:	mov	w8, #0x1                   	// #1
  44d888:	cbnz	w8, 44d890 <_obstack_memory_used@@Base+0xf630>
  44d88c:	mov	w8, wzr
  44d890:	orr	w8, w8, #0x4
  44d894:	cmp	w8, #0x4
  44d898:	b.ne	44d948 <_obstack_memory_used@@Base+0xf6e8>  // b.any
  44d89c:	ldrb	w8, [x25, #1]!
  44d8a0:	cbnz	w8, 44c464 <_obstack_memory_used@@Base+0xe204>
  44d8a4:	b	44d938 <_obstack_memory_used@@Base+0xf6d8>
  44d8a8:	mov	w1, #0x20                  	// #32
  44d8ac:	mov	x20, x0
  44d8b0:	mov	x0, x18
  44d8b4:	mov	w27, w2
  44d8b8:	mov	x2, x21
  44d8bc:	mov	x24, x18
  44d8c0:	bl	404600 <memset@plt>
  44d8c4:	mov	x18, x24
  44d8c8:	mov	w2, w27
  44d8cc:	mov	x0, x20
  44d8d0:	add	x18, x24, x21
  44d8d4:	mov	x20, x0
  44d8d8:	mov	x0, x18
  44d8dc:	mov	x1, x28
  44d8e0:	tbz	w2, #0, 44d8f4 <_obstack_memory_used@@Base+0xf694>
  44d8e4:	mov	x2, x26
  44d8e8:	mov	x21, x18
  44d8ec:	bl	44d9c4 <_obstack_memory_used@@Base+0xf764>
  44d8f0:	b	44d900 <_obstack_memory_used@@Base+0xf6a0>
  44d8f4:	mov	x2, x26
  44d8f8:	mov	x21, x18
  44d8fc:	bl	404110 <memcpy@plt>
  44d900:	ldp	x3, x1, [sp, #120]
  44d904:	mov	w16, #0xcccc                	// #52428
  44d908:	add	x18, x21, x26
  44d90c:	mov	x0, x20
  44d910:	movk	w16, #0xccc, lsl #16
  44d914:	mov	w17, #0xa                   	// #10
  44d918:	mov	w8, wzr
  44d91c:	add	x0, x23, x0
  44d920:	cbnz	wzr, 44d890 <_obstack_memory_used@@Base+0xf630>
  44d924:	b	44d88c <_obstack_memory_used@@Base+0xf62c>
  44d928:	mov	w19, wzr
  44d92c:	mov	w13, #0x3                   	// #3
  44d930:	b	44d6e0 <_obstack_memory_used@@Base+0xf480>
  44d934:	mov	x0, xzr
  44d938:	cbz	x1, 44d94c <_obstack_memory_used@@Base+0xf6ec>
  44d93c:	cbz	x18, 44d94c <_obstack_memory_used@@Base+0xf6ec>
  44d940:	strb	wzr, [x18]
  44d944:	b	44d94c <_obstack_memory_used@@Base+0xf6ec>
  44d948:	mov	x0, xzr
  44d94c:	add	sp, sp, #0x4c0
  44d950:	ldp	x20, x19, [sp, #80]
  44d954:	ldp	x22, x21, [sp, #64]
  44d958:	ldp	x24, x23, [sp, #48]
  44d95c:	ldp	x26, x25, [sp, #32]
  44d960:	ldp	x28, x27, [sp, #16]
  44d964:	ldp	x29, x30, [sp], #96
  44d968:	ret
  44d96c:	stp	x29, x30, [sp, #-48]!
  44d970:	str	x21, [sp, #16]
  44d974:	stp	x20, x19, [sp, #32]
  44d978:	mov	x29, sp
  44d97c:	cbz	x2, 44d9b4 <_obstack_memory_used@@Base+0xf754>
  44d980:	mov	x19, x2
  44d984:	mov	x20, x1
  44d988:	mov	x21, x0
  44d98c:	bl	4043b0 <__ctype_tolower_loc@plt>
  44d990:	sub	x8, x21, #0x1
  44d994:	sub	x9, x20, #0x1
  44d998:	ldr	x10, [x0]
  44d99c:	ldrb	w11, [x9, x19]
  44d9a0:	ldr	w10, [x10, x11, lsl #2]
  44d9a4:	subs	x11, x19, #0x1
  44d9a8:	strb	w10, [x8, x19]
  44d9ac:	mov	x19, x11
  44d9b0:	b.ne	44d998 <_obstack_memory_used@@Base+0xf738>  // b.any
  44d9b4:	ldp	x20, x19, [sp, #32]
  44d9b8:	ldr	x21, [sp, #16]
  44d9bc:	ldp	x29, x30, [sp], #48
  44d9c0:	ret
  44d9c4:	stp	x29, x30, [sp, #-48]!
  44d9c8:	str	x21, [sp, #16]
  44d9cc:	stp	x20, x19, [sp, #32]
  44d9d0:	mov	x29, sp
  44d9d4:	cbz	x2, 44da0c <_obstack_memory_used@@Base+0xf7ac>
  44d9d8:	mov	x19, x2
  44d9dc:	mov	x20, x1
  44d9e0:	mov	x21, x0
  44d9e4:	bl	404740 <__ctype_toupper_loc@plt>
  44d9e8:	sub	x8, x21, #0x1
  44d9ec:	sub	x9, x20, #0x1
  44d9f0:	ldr	x10, [x0]
  44d9f4:	ldrb	w11, [x9, x19]
  44d9f8:	ldr	w10, [x10, x11, lsl #2]
  44d9fc:	subs	x11, x19, #0x1
  44da00:	strb	w10, [x8, x19]
  44da04:	mov	x19, x11
  44da08:	b.ne	44d9f0 <_obstack_memory_used@@Base+0xf790>  // b.any
  44da0c:	ldp	x20, x19, [sp, #32]
  44da10:	ldr	x21, [sp, #16]
  44da14:	ldp	x29, x30, [sp], #48
  44da18:	ret
  44da1c:	sub	w8, w0, w1
  44da20:	mov	w9, #0x2493                	// #9363
  44da24:	add	w8, w8, #0x17e
  44da28:	movk	w9, #0x9249, lsl #16
  44da2c:	smull	x9, w8, w9
  44da30:	lsr	x9, x9, #32
  44da34:	add	w9, w9, w8
  44da38:	asr	w10, w9, #2
  44da3c:	add	w9, w10, w9, lsr #31
  44da40:	lsl	w10, w9, #3
  44da44:	sub	w9, w10, w9
  44da48:	sub	w8, w9, w8
  44da4c:	add	w8, w0, w8
  44da50:	add	w0, w8, #0x3
  44da54:	ret
  44da58:	sub	sp, sp, #0xe0
  44da5c:	stp	x29, x30, [sp, #208]
  44da60:	add	x29, sp, #0xd0
  44da64:	stp	x3, x4, [x29, #-72]
  44da68:	stp	x5, x6, [x29, #-56]
  44da6c:	stur	x7, [x29, #-40]
  44da70:	stp	q1, q2, [sp, #16]
  44da74:	stp	q3, q4, [sp, #48]
  44da78:	str	q0, [sp]
  44da7c:	stp	q5, q6, [sp, #80]
  44da80:	str	q7, [sp, #112]
  44da84:	tbnz	w2, #6, 44da90 <_obstack_memory_used@@Base+0xf830>
  44da88:	mov	w3, wzr
  44da8c:	b	44dadc <_obstack_memory_used@@Base+0xf87c>
  44da90:	mov	x9, #0xffffffffffffffd8    	// #-40
  44da94:	mov	x11, sp
  44da98:	sub	x12, x29, #0x48
  44da9c:	movk	x9, #0xff80, lsl #32
  44daa0:	add	x10, x29, #0x10
  44daa4:	mov	x8, #0xffffffffffffffd8    	// #-40
  44daa8:	add	x11, x11, #0x80
  44daac:	add	x12, x12, #0x28
  44dab0:	stp	x11, x9, [x29, #-16]
  44dab4:	stp	x10, x12, [x29, #-32]
  44dab8:	tbz	w8, #31, 44dacc <_obstack_memory_used@@Base+0xf86c>
  44dabc:	add	w9, w8, #0x8
  44dac0:	cmp	w9, #0x0
  44dac4:	stur	w9, [x29, #-8]
  44dac8:	b.le	44daf0 <_obstack_memory_used@@Base+0xf890>
  44dacc:	ldur	x8, [x29, #-32]
  44dad0:	add	x9, x8, #0x8
  44dad4:	stur	x9, [x29, #-32]
  44dad8:	ldr	w3, [x8]
  44dadc:	bl	404ce0 <openat@plt>
  44dae0:	bl	44dafc <_obstack_memory_used@@Base+0xf89c>
  44dae4:	ldp	x29, x30, [sp, #208]
  44dae8:	add	sp, sp, #0xe0
  44daec:	ret
  44daf0:	ldur	x9, [x29, #-24]
  44daf4:	add	x8, x9, x8
  44daf8:	b	44dad8 <_obstack_memory_used@@Base+0xf878>
  44dafc:	stp	x29, x30, [sp, #-48]!
  44db00:	stp	x20, x19, [sp, #32]
  44db04:	mov	w19, w0
  44db08:	cmp	w0, #0x2
  44db0c:	stp	x22, x21, [sp, #16]
  44db10:	mov	x29, sp
  44db14:	b.hi	44db40 <_obstack_memory_used@@Base+0xf8e0>  // b.pmore
  44db18:	mov	w0, w19
  44db1c:	bl	44e99c <_obstack_memory_used@@Base+0x1073c>
  44db20:	mov	w20, w0
  44db24:	bl	404d00 <__errno_location@plt>
  44db28:	ldr	w22, [x0]
  44db2c:	mov	x21, x0
  44db30:	mov	w0, w19
  44db34:	bl	4047c0 <close@plt>
  44db38:	mov	w19, w20
  44db3c:	str	w22, [x21]
  44db40:	mov	w0, w19
  44db44:	ldp	x20, x19, [sp, #32]
  44db48:	ldp	x22, x21, [sp, #16]
  44db4c:	ldp	x29, x30, [sp], #48
  44db50:	ret
  44db54:	sub	sp, sp, #0x50
  44db58:	stp	x20, x19, [sp, #64]
  44db5c:	mov	x19, x0
  44db60:	mov	x20, x1
  44db64:	mov	x0, xzr
  44db68:	mov	x8, x19
  44db6c:	stp	x29, x30, [sp, #48]
  44db70:	add	x29, sp, #0x30
  44db74:	ldrb	w9, [x8]
  44db78:	cmp	w9, #0x25
  44db7c:	b.ne	44db98 <_obstack_memory_used@@Base+0xf938>  // b.any
  44db80:	ldrb	w9, [x8, #1]
  44db84:	cmp	w9, #0x73
  44db88:	b.ne	44dbb8 <_obstack_memory_used@@Base+0xf958>  // b.any
  44db8c:	add	x0, x0, #0x1
  44db90:	add	x8, x8, #0x2
  44db94:	b	44db74 <_obstack_memory_used@@Base+0xf914>
  44db98:	cbnz	w9, 44dbb8 <_obstack_memory_used@@Base+0xf958>
  44db9c:	ldp	q1, q0, [x20]
  44dba0:	add	x1, sp, #0x10
  44dba4:	stp	q1, q0, [sp, #16]
  44dba8:	bl	44dc10 <_obstack_memory_used@@Base+0xf9b0>
  44dbac:	mov	w8, wzr
  44dbb0:	cbnz	w8, 44dbc0 <_obstack_memory_used@@Base+0xf960>
  44dbb4:	b	44dbfc <_obstack_memory_used@@Base+0xf99c>
  44dbb8:	mov	w8, #0x1                   	// #1
  44dbbc:	cbz	w8, 44dbfc <_obstack_memory_used@@Base+0xf99c>
  44dbc0:	ldp	q1, q0, [x20]
  44dbc4:	add	x0, sp, #0x8
  44dbc8:	add	x3, sp, #0x10
  44dbcc:	mov	w1, #0x1                   	// #1
  44dbd0:	mov	x2, x19
  44dbd4:	stp	q1, q0, [sp, #16]
  44dbd8:	bl	404540 <__vasprintf_chk@plt>
  44dbdc:	tbnz	w0, #31, 44dbe8 <_obstack_memory_used@@Base+0xf988>
  44dbe0:	ldr	x0, [sp, #8]
  44dbe4:	b	44dbfc <_obstack_memory_used@@Base+0xf99c>
  44dbe8:	bl	404d00 <__errno_location@plt>
  44dbec:	ldr	w8, [x0]
  44dbf0:	cmp	w8, #0xc
  44dbf4:	b.eq	44dc0c <_obstack_memory_used@@Base+0xf9ac>  // b.none
  44dbf8:	mov	x0, xzr
  44dbfc:	ldp	x20, x19, [sp, #64]
  44dc00:	ldp	x29, x30, [sp, #48]
  44dc04:	add	sp, sp, #0x50
  44dc08:	ret
  44dc0c:	bl	40dde4 <wcrtomb@plt+0x8fc4>
  44dc10:	sub	sp, sp, #0x60
  44dc14:	stp	x29, x30, [sp, #32]
  44dc18:	stp	x24, x23, [sp, #48]
  44dc1c:	stp	x22, x21, [sp, #64]
  44dc20:	stp	x20, x19, [sp, #80]
  44dc24:	ldp	q1, q0, [x1]
  44dc28:	mov	x19, x1
  44dc2c:	mov	x20, x0
  44dc30:	mov	x21, xzr
  44dc34:	add	x29, sp, #0x20
  44dc38:	stp	q1, q0, [sp]
  44dc3c:	cbz	x0, 44dc98 <_obstack_memory_used@@Base+0xfa38>
  44dc40:	ldr	x22, [sp, #8]
  44dc44:	mov	x23, x20
  44dc48:	b	44dc78 <_obstack_memory_used@@Base+0xfa18>
  44dc4c:	ldr	x8, [sp]
  44dc50:	add	x9, x8, #0x8
  44dc54:	str	x9, [sp]
  44dc58:	ldr	x0, [x8]
  44dc5c:	bl	404190 <strlen@plt>
  44dc60:	mov	x1, x0
  44dc64:	mov	x0, x21
  44dc68:	bl	44e9b8 <_obstack_memory_used@@Base+0x10758>
  44dc6c:	subs	x23, x23, #0x1
  44dc70:	mov	x21, x0
  44dc74:	b.eq	44dc98 <_obstack_memory_used@@Base+0xfa38>  // b.none
  44dc78:	ldrsw	x8, [sp, #24]
  44dc7c:	tbz	w8, #31, 44dc4c <_obstack_memory_used@@Base+0xf9ec>
  44dc80:	add	w9, w8, #0x8
  44dc84:	cmp	w9, #0x0
  44dc88:	str	w9, [sp, #24]
  44dc8c:	b.gt	44dc4c <_obstack_memory_used@@Base+0xf9ec>
  44dc90:	add	x8, x22, x8
  44dc94:	b	44dc58 <_obstack_memory_used@@Base+0xf9f8>
  44dc98:	lsr	x8, x21, #31
  44dc9c:	cbz	x8, 44dcb4 <_obstack_memory_used@@Base+0xfa54>
  44dca0:	bl	404d00 <__errno_location@plt>
  44dca4:	mov	w8, #0x4b                  	// #75
  44dca8:	mov	x21, xzr
  44dcac:	str	w8, [x0]
  44dcb0:	b	44dd30 <_obstack_memory_used@@Base+0xfad0>
  44dcb4:	add	x0, x21, #0x1
  44dcb8:	bl	43d1c4 <argp_usage@@Base+0xb5c8>
  44dcbc:	mov	x21, x0
  44dcc0:	mov	x22, x0
  44dcc4:	cbz	x20, 44dd2c <_obstack_memory_used@@Base+0xfacc>
  44dcc8:	mov	x22, x21
  44dccc:	b	44dd08 <_obstack_memory_used@@Base+0xfaa8>
  44dcd0:	ldr	x8, [x19]
  44dcd4:	add	x9, x8, #0x8
  44dcd8:	str	x9, [x19]
  44dcdc:	ldr	x23, [x8]
  44dce0:	mov	x0, x23
  44dce4:	bl	404190 <strlen@plt>
  44dce8:	mov	x24, x0
  44dcec:	mov	x0, x22
  44dcf0:	mov	x1, x23
  44dcf4:	mov	x2, x24
  44dcf8:	bl	404110 <memcpy@plt>
  44dcfc:	subs	x20, x20, #0x1
  44dd00:	add	x22, x22, x24
  44dd04:	b.eq	44dd2c <_obstack_memory_used@@Base+0xfacc>  // b.none
  44dd08:	ldrsw	x8, [x19, #24]
  44dd0c:	tbz	w8, #31, 44dcd0 <_obstack_memory_used@@Base+0xfa70>
  44dd10:	add	w9, w8, #0x8
  44dd14:	cmp	w9, #0x0
  44dd18:	str	w9, [x19, #24]
  44dd1c:	b.gt	44dcd0 <_obstack_memory_used@@Base+0xfa70>
  44dd20:	ldr	x9, [x19, #8]
  44dd24:	add	x8, x9, x8
  44dd28:	b	44dcdc <_obstack_memory_used@@Base+0xfa7c>
  44dd2c:	strb	wzr, [x22]
  44dd30:	mov	x0, x21
  44dd34:	ldp	x20, x19, [sp, #80]
  44dd38:	ldp	x22, x21, [sp, #64]
  44dd3c:	ldp	x24, x23, [sp, #48]
  44dd40:	ldp	x29, x30, [sp, #32]
  44dd44:	add	sp, sp, #0x60
  44dd48:	ret
  44dd4c:	sub	sp, sp, #0x70
  44dd50:	cmp	w0, #0x1
  44dd54:	stp	x29, x30, [sp, #16]
  44dd58:	stp	x28, x27, [sp, #32]
  44dd5c:	stp	x26, x25, [sp, #48]
  44dd60:	stp	x24, x23, [sp, #64]
  44dd64:	stp	x22, x21, [sp, #80]
  44dd68:	stp	x20, x19, [sp, #96]
  44dd6c:	add	x29, sp, #0x10
  44dd70:	b.lt	44e070 <_obstack_memory_used@@Base+0xfe10>  // b.tstop
  44dd74:	ldp	w8, w25, [x6]
  44dd78:	mov	x19, x6
  44dd7c:	mov	w26, w5
  44dd80:	mov	x23, x4
  44dd84:	mov	x24, x3
  44dd88:	mov	x21, x2
  44dd8c:	mov	w22, w0
  44dd90:	mov	x20, x1
  44dd94:	str	xzr, [x6, #16]
  44dd98:	cbz	w8, 44ddc0 <_obstack_memory_used@@Base+0xfb60>
  44dd9c:	ldr	w8, [x19, #24]
  44dda0:	cbz	w8, 44ddc0 <_obstack_memory_used@@Base+0xfb60>
  44dda4:	ldrb	w8, [x21]
  44dda8:	cmp	w8, #0x2d
  44ddac:	b.eq	44ddb8 <_obstack_memory_used@@Base+0xfb58>  // b.none
  44ddb0:	cmp	w8, #0x2b
  44ddb4:	b.ne	44ddd4 <_obstack_memory_used@@Base+0xfb74>  // b.any
  44ddb8:	add	x21, x21, #0x1
  44ddbc:	b	44ddd4 <_obstack_memory_used@@Base+0xfb74>
  44ddc0:	mov	x0, x21
  44ddc4:	mov	x1, x19
  44ddc8:	mov	w2, w7
  44ddcc:	bl	44e238 <_obstack_memory_used@@Base+0xffd8>
  44ddd0:	mov	x21, x0
  44ddd4:	ldrb	w9, [x21]
  44ddd8:	ldr	x8, [x19, #32]
  44dddc:	cmp	w9, #0x3a
  44dde0:	csel	w25, wzr, w25, eq  // eq = none
  44dde4:	cbz	x8, 44de5c <_obstack_memory_used@@Base+0xfbfc>
  44dde8:	ldrb	w8, [x8]
  44ddec:	cbz	w8, 44de5c <_obstack_memory_used@@Base+0xfbfc>
  44ddf0:	ldr	x28, [x19, #32]
  44ddf4:	mov	x0, x21
  44ddf8:	add	x27, x28, #0x1
  44ddfc:	str	x27, [x19, #32]
  44de00:	ldrb	w26, [x28]
  44de04:	mov	w1, w26
  44de08:	bl	404a70 <strchr@plt>
  44de0c:	ldrb	w8, [x28, #1]
  44de10:	cbnz	w8, 44de20 <_obstack_memory_used@@Base+0xfbc0>
  44de14:	ldr	w8, [x19]
  44de18:	add	w8, w8, #0x1
  44de1c:	str	w8, [x19]
  44de20:	orr	w8, w26, #0x1
  44de24:	cmp	w8, #0x3b
  44de28:	b.eq	44deb0 <_obstack_memory_used@@Base+0xfc50>  // b.none
  44de2c:	cbz	x0, 44deb0 <_obstack_memory_used@@Base+0xfc50>
  44de30:	ldrb	w8, [x0]
  44de34:	cmp	w8, #0x57
  44de38:	b.ne	44def4 <_obstack_memory_used@@Base+0xfc94>  // b.any
  44de3c:	cbz	x24, 44def4 <_obstack_memory_used@@Base+0xfc94>
  44de40:	ldrb	w8, [x0, #1]
  44de44:	cmp	w8, #0x3b
  44de48:	b.ne	44def4 <_obstack_memory_used@@Base+0xfc94>  // b.any
  44de4c:	ldrb	w8, [x27]
  44de50:	cbz	w8, 44e120 <_obstack_memory_used@@Base+0xfec0>
  44de54:	str	x27, [x19, #16]
  44de58:	b	44e1e0 <_obstack_memory_used@@Base+0xff80>
  44de5c:	ldr	w9, [x19, #48]
  44de60:	ldr	w8, [x19]
  44de64:	cmp	w9, w8
  44de68:	b.le	44de70 <_obstack_memory_used@@Base+0xfc10>
  44de6c:	str	w8, [x19, #48]
  44de70:	ldr	w9, [x19, #44]
  44de74:	cmp	w9, w8
  44de78:	b.le	44de80 <_obstack_memory_used@@Base+0xfc20>
  44de7c:	str	w8, [x19, #44]
  44de80:	ldr	w9, [x19, #40]
  44de84:	cmp	w9, #0x1
  44de88:	b.ne	44df78 <_obstack_memory_used@@Base+0xfd18>  // b.any
  44de8c:	ldp	w10, w9, [x19, #44]
  44de90:	cmp	w10, w9
  44de94:	b.eq	44df1c <_obstack_memory_used@@Base+0xfcbc>  // b.none
  44de98:	cmp	w9, w8
  44de9c:	b.eq	44df1c <_obstack_memory_used@@Base+0xfcbc>  // b.none
  44dea0:	mov	x0, x20
  44dea4:	mov	x1, x19
  44dea8:	bl	44e2d4 <_obstack_memory_used@@Base+0x10074>
  44deac:	b	44df28 <_obstack_memory_used@@Base+0xfcc8>
  44deb0:	cbz	w25, 44dee8 <_obstack_memory_used@@Base+0xfc88>
  44deb4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44deb8:	ldr	x21, [x8, #1136]
  44debc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44dec0:	add	x1, x1, #0xa22
  44dec4:	mov	w2, #0x5                   	// #5
  44dec8:	mov	x0, xzr
  44decc:	bl	404bf0 <dcgettext@plt>
  44ded0:	ldr	x3, [x20]
  44ded4:	mov	x2, x0
  44ded8:	mov	w1, #0x1                   	// #1
  44dedc:	mov	x0, x21
  44dee0:	mov	w4, w26
  44dee4:	bl	404910 <__fprintf_chk@plt>
  44dee8:	str	w26, [x19, #8]
  44deec:	mov	w26, #0x3f                  	// #63
  44def0:	b	44e074 <_obstack_memory_used@@Base+0xfe14>
  44def4:	ldrb	w8, [x0, #1]
  44def8:	cmp	w8, #0x3a
  44defc:	b.ne	44e074 <_obstack_memory_used@@Base+0xfe14>  // b.any
  44df00:	ldrb	w9, [x0, #2]
  44df04:	ldrb	w8, [x27]
  44df08:	cmp	w9, #0x3a
  44df0c:	b.ne	44e098 <_obstack_memory_used@@Base+0xfe38>  // b.any
  44df10:	cbnz	w8, 44e09c <_obstack_memory_used@@Base+0xfe3c>
  44df14:	str	xzr, [x19, #16]
  44df18:	b	44e0ac <_obstack_memory_used@@Base+0xfe4c>
  44df1c:	cmp	w9, w8
  44df20:	b.eq	44df28 <_obstack_memory_used@@Base+0xfcc8>  // b.none
  44df24:	str	w8, [x19, #44]
  44df28:	ldr	w8, [x19]
  44df2c:	cmp	w8, w22
  44df30:	b.ge	44df74 <_obstack_memory_used@@Base+0xfd14>  // b.tcont
  44df34:	sxtw	x9, w8
  44df38:	add	x9, x20, x9, lsl #3
  44df3c:	b	44df54 <_obstack_memory_used@@Base+0xfcf4>
  44df40:	add	w8, w8, #0x1
  44df44:	cmp	w22, w8
  44df48:	add	x9, x9, #0x8
  44df4c:	str	w8, [x19]
  44df50:	b.eq	44df70 <_obstack_memory_used@@Base+0xfd10>  // b.none
  44df54:	ldr	x10, [x9]
  44df58:	ldrb	w11, [x10]
  44df5c:	cmp	w11, #0x2d
  44df60:	b.ne	44df40 <_obstack_memory_used@@Base+0xfce0>  // b.any
  44df64:	ldrb	w10, [x10, #1]
  44df68:	cbz	w10, 44df40 <_obstack_memory_used@@Base+0xfce0>
  44df6c:	b	44df74 <_obstack_memory_used@@Base+0xfd14>
  44df70:	mov	w8, w22
  44df74:	str	w8, [x19, #48]
  44df78:	ldrsw	x27, [x19]
  44df7c:	cmp	w27, w22
  44df80:	b.eq	44dfd8 <_obstack_memory_used@@Base+0xfd78>  // b.none
  44df84:	ldr	x0, [x20, x27, lsl #3]
  44df88:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1ada0>
  44df8c:	add	x1, x1, #0xabc
  44df90:	bl	404920 <strcmp@plt>
  44df94:	cbnz	w0, 44dfd8 <_obstack_memory_used@@Base+0xfd78>
  44df98:	ldp	w9, w10, [x19, #44]
  44df9c:	add	w8, w27, #0x1
  44dfa0:	str	w8, [x19]
  44dfa4:	cmp	w9, w10
  44dfa8:	b.eq	44dfc4 <_obstack_memory_used@@Base+0xfd64>  // b.none
  44dfac:	cmp	w10, w8
  44dfb0:	b.eq	44dfc4 <_obstack_memory_used@@Base+0xfd64>  // b.none
  44dfb4:	mov	x0, x20
  44dfb8:	mov	x1, x19
  44dfbc:	bl	44e2d4 <_obstack_memory_used@@Base+0x10074>
  44dfc0:	b	44dfd0 <_obstack_memory_used@@Base+0xfd70>
  44dfc4:	cmp	w9, w10
  44dfc8:	b.ne	44dfd0 <_obstack_memory_used@@Base+0xfd70>  // b.any
  44dfcc:	str	w8, [x19, #44]
  44dfd0:	str	w22, [x19, #48]
  44dfd4:	str	w22, [x19]
  44dfd8:	ldrsw	x8, [x19]
  44dfdc:	cmp	w8, w22
  44dfe0:	b.ne	44dff8 <_obstack_memory_used@@Base+0xfd98>  // b.any
  44dfe4:	ldp	w8, w9, [x19, #44]
  44dfe8:	cmp	w8, w9
  44dfec:	b.eq	44e070 <_obstack_memory_used@@Base+0xfe10>  // b.none
  44dff0:	str	w8, [x19]
  44dff4:	b	44e070 <_obstack_memory_used@@Base+0xfe10>
  44dff8:	ldr	x9, [x20, x8, lsl #3]
  44dffc:	ldrb	w10, [x9]
  44e000:	cmp	w10, #0x2d
  44e004:	b.ne	44e050 <_obstack_memory_used@@Base+0xfdf0>  // b.any
  44e008:	mov	x27, x9
  44e00c:	ldrb	w1, [x27, #1]!
  44e010:	cbz	w1, 44e050 <_obstack_memory_used@@Base+0xfdf0>
  44e014:	cbz	x24, 44e10c <_obstack_memory_used@@Base+0xfeac>
  44e018:	cmp	w1, #0x2d
  44e01c:	b.ne	44e0b4 <_obstack_memory_used@@Base+0xfe54>  // b.any
  44e020:	add	x8, x9, #0x2
  44e024:	str	x8, [x19, #32]
  44e028:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  44e02c:	add	x8, x8, #0xabc
  44e030:	mov	w0, w22
  44e034:	mov	x1, x20
  44e038:	mov	x2, x21
  44e03c:	mov	x3, x24
  44e040:	mov	x4, x23
  44e044:	mov	w5, w26
  44e048:	str	x8, [sp]
  44e04c:	b	44e210 <_obstack_memory_used@@Base+0xffb0>
  44e050:	ldr	w9, [x19, #40]
  44e054:	cbz	w9, 44e070 <_obstack_memory_used@@Base+0xfe10>
  44e058:	add	w9, w8, #0x1
  44e05c:	str	w9, [x19]
  44e060:	ldr	x8, [x20, x8, lsl #3]
  44e064:	mov	w26, #0x1                   	// #1
  44e068:	str	x8, [x19, #16]
  44e06c:	b	44e074 <_obstack_memory_used@@Base+0xfe14>
  44e070:	mov	w26, #0xffffffff            	// #-1
  44e074:	mov	w0, w26
  44e078:	ldp	x20, x19, [sp, #96]
  44e07c:	ldp	x22, x21, [sp, #80]
  44e080:	ldp	x24, x23, [sp, #64]
  44e084:	ldp	x26, x25, [sp, #48]
  44e088:	ldp	x28, x27, [sp, #32]
  44e08c:	ldp	x29, x30, [sp, #16]
  44e090:	add	sp, sp, #0x70
  44e094:	ret
  44e098:	cbz	w8, 44e17c <_obstack_memory_used@@Base+0xff1c>
  44e09c:	ldr	w8, [x19]
  44e0a0:	str	x27, [x19, #16]
  44e0a4:	add	w8, w8, #0x1
  44e0a8:	str	w8, [x19]
  44e0ac:	str	xzr, [x19, #32]
  44e0b0:	b	44e074 <_obstack_memory_used@@Base+0xfe14>
  44e0b4:	cbz	w26, 44e10c <_obstack_memory_used@@Base+0xfeac>
  44e0b8:	ldrb	w8, [x9, #2]
  44e0bc:	cbnz	w8, 44e0cc <_obstack_memory_used@@Base+0xfe6c>
  44e0c0:	mov	x0, x21
  44e0c4:	bl	404a70 <strchr@plt>
  44e0c8:	cbnz	x0, 44e10c <_obstack_memory_used@@Base+0xfeac>
  44e0cc:	adrp	x8, 459000 <_obstack_memory_used@@Base+0x1ada0>
  44e0d0:	add	x8, x8, #0xabd
  44e0d4:	mov	w0, w22
  44e0d8:	mov	x1, x20
  44e0dc:	mov	x2, x21
  44e0e0:	mov	x3, x24
  44e0e4:	mov	x4, x23
  44e0e8:	mov	w5, w26
  44e0ec:	mov	x6, x19
  44e0f0:	mov	w7, w25
  44e0f4:	str	x27, [x19, #32]
  44e0f8:	str	x8, [sp]
  44e0fc:	bl	44e39c <_obstack_memory_used@@Base+0x1013c>
  44e100:	mov	w26, w0
  44e104:	cmn	w0, #0x1
  44e108:	b.ne	44e074 <_obstack_memory_used@@Base+0xfe14>  // b.any
  44e10c:	ldrsw	x8, [x19]
  44e110:	ldr	x8, [x20, x8, lsl #3]
  44e114:	add	x8, x8, #0x1
  44e118:	str	x8, [x19, #32]
  44e11c:	b	44ddf0 <_obstack_memory_used@@Base+0xfb90>
  44e120:	ldrsw	x8, [x19]
  44e124:	cmp	w8, w22
  44e128:	b.ne	44e1d8 <_obstack_memory_used@@Base+0xff78>  // b.any
  44e12c:	cbz	w25, 44e164 <_obstack_memory_used@@Base+0xff04>
  44e130:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e134:	ldr	x22, [x8, #1136]
  44e138:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e13c:	add	x1, x1, #0xa3e
  44e140:	mov	w2, #0x5                   	// #5
  44e144:	mov	x0, xzr
  44e148:	bl	404bf0 <dcgettext@plt>
  44e14c:	ldr	x3, [x20]
  44e150:	mov	x2, x0
  44e154:	mov	w1, #0x1                   	// #1
  44e158:	mov	x0, x22
  44e15c:	mov	w4, w26
  44e160:	bl	404910 <__fprintf_chk@plt>
  44e164:	str	w26, [x19, #8]
  44e168:	ldrb	w8, [x21]
  44e16c:	mov	w9, #0x3f                  	// #63
  44e170:	cmp	w8, #0x3a
  44e174:	csel	w26, w8, w9, eq  // eq = none
  44e178:	b	44e074 <_obstack_memory_used@@Base+0xfe14>
  44e17c:	ldrsw	x8, [x19]
  44e180:	cmp	w8, w22
  44e184:	b.ne	44e224 <_obstack_memory_used@@Base+0xffc4>  // b.any
  44e188:	cbz	w25, 44e1c0 <_obstack_memory_used@@Base+0xff60>
  44e18c:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e190:	ldr	x22, [x8, #1136]
  44e194:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e198:	add	x1, x1, #0xa3e
  44e19c:	mov	w2, #0x5                   	// #5
  44e1a0:	mov	x0, xzr
  44e1a4:	bl	404bf0 <dcgettext@plt>
  44e1a8:	ldr	x3, [x20]
  44e1ac:	mov	x2, x0
  44e1b0:	mov	w1, #0x1                   	// #1
  44e1b4:	mov	x0, x22
  44e1b8:	mov	w4, w26
  44e1bc:	bl	404910 <__fprintf_chk@plt>
  44e1c0:	str	w26, [x19, #8]
  44e1c4:	ldrb	w8, [x21]
  44e1c8:	mov	w9, #0x3f                  	// #63
  44e1cc:	cmp	w8, #0x3a
  44e1d0:	csel	w26, w8, w9, eq  // eq = none
  44e1d4:	b	44e0ac <_obstack_memory_used@@Base+0xfe4c>
  44e1d8:	ldr	x8, [x20, x8, lsl #3]
  44e1dc:	str	x8, [x19, #16]
  44e1e0:	ldr	x8, [x19, #16]
  44e1e4:	str	xzr, [x19, #16]
  44e1e8:	mov	w0, w22
  44e1ec:	mov	x1, x20
  44e1f0:	str	x8, [x19, #32]
  44e1f4:	adrp	x8, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e1f8:	add	x8, x8, #0xa67
  44e1fc:	str	x8, [sp]
  44e200:	mov	x2, x21
  44e204:	mov	x3, x24
  44e208:	mov	x4, x23
  44e20c:	mov	w5, wzr
  44e210:	mov	x6, x19
  44e214:	mov	w7, w25
  44e218:	bl	44e39c <_obstack_memory_used@@Base+0x1013c>
  44e21c:	mov	w26, w0
  44e220:	b	44e074 <_obstack_memory_used@@Base+0xfe14>
  44e224:	add	w9, w8, #0x1
  44e228:	str	w9, [x19]
  44e22c:	ldr	x8, [x20, x8, lsl #3]
  44e230:	str	x8, [x19, #16]
  44e234:	b	44e0ac <_obstack_memory_used@@Base+0xfe4c>
  44e238:	stp	x29, x30, [sp, #-32]!
  44e23c:	stp	x20, x19, [sp, #16]
  44e240:	ldr	w8, [x1]
  44e244:	mov	x19, x1
  44e248:	mov	x20, x0
  44e24c:	mov	x29, sp
  44e250:	cbnz	w8, 44e25c <_obstack_memory_used@@Base+0xfffc>
  44e254:	mov	w8, #0x1                   	// #1
  44e258:	str	w8, [x19]
  44e25c:	ldr	w8, [x19]
  44e260:	str	xzr, [x19, #32]
  44e264:	stp	w8, w8, [x19, #44]
  44e268:	ldrb	w8, [x20]
  44e26c:	cmp	w8, #0x2b
  44e270:	b.eq	44e28c <_obstack_memory_used@@Base+0x1002c>  // b.none
  44e274:	cmp	w8, #0x2d
  44e278:	b.ne	44e298 <_obstack_memory_used@@Base+0x10038>  // b.any
  44e27c:	mov	w8, #0x2                   	// #2
  44e280:	str	w8, [x19, #40]
  44e284:	add	x20, x20, #0x1
  44e288:	b	44e2b0 <_obstack_memory_used@@Base+0x10050>
  44e28c:	str	wzr, [x19, #40]
  44e290:	add	x20, x20, #0x1
  44e294:	b	44e2b0 <_obstack_memory_used@@Base+0x10050>
  44e298:	cbnz	w2, 44e2ac <_obstack_memory_used@@Base+0x1004c>
  44e29c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x18da0>
  44e2a0:	add	x0, x0, #0xf85
  44e2a4:	bl	404d30 <getenv@plt>
  44e2a8:	cbz	x0, 44e2c8 <_obstack_memory_used@@Base+0x10068>
  44e2ac:	str	wzr, [x19, #40]
  44e2b0:	mov	w8, #0x1                   	// #1
  44e2b4:	str	w8, [x19, #24]
  44e2b8:	mov	x0, x20
  44e2bc:	ldp	x20, x19, [sp, #16]
  44e2c0:	ldp	x29, x30, [sp], #32
  44e2c4:	ret
  44e2c8:	mov	w8, #0x1                   	// #1
  44e2cc:	str	w8, [x19, #40]
  44e2d0:	b	44e2b0 <_obstack_memory_used@@Base+0x10050>
  44e2d4:	ldp	w9, w11, [x1, #44]
  44e2d8:	ldr	w8, [x1]
  44e2dc:	sxtw	x10, w11
  44e2e0:	cmp	w8, w11
  44e2e4:	b.le	44e38c <_obstack_memory_used@@Base+0x1012c>
  44e2e8:	cmp	w9, w11
  44e2ec:	b.ge	44e38c <_obstack_memory_used@@Base+0x1012c>  // b.tcont
  44e2f0:	add	x11, x0, x10, lsl #3
  44e2f4:	mov	w12, w9
  44e2f8:	mov	w13, w8
  44e2fc:	sub	w15, w13, w10
  44e300:	sub	w14, w10, w12
  44e304:	cmp	w15, w14
  44e308:	b.le	44e34c <_obstack_memory_used@@Base+0x100ec>
  44e30c:	cmp	w14, #0x1
  44e310:	b.lt	44e33c <_obstack_memory_used@@Base+0x100dc>  // b.tstop
  44e314:	sub	w16, w13, w14
  44e318:	sub	w15, w10, w12
  44e31c:	add	x16, x0, w16, sxtw #3
  44e320:	add	x17, x0, w12, sxtw #3
  44e324:	ldr	x18, [x16]
  44e328:	ldr	x2, [x17]
  44e32c:	subs	x15, x15, #0x1
  44e330:	str	x18, [x17], #8
  44e334:	str	x2, [x16], #8
  44e338:	b.ne	44e324 <_obstack_memory_used@@Base+0x100c4>  // b.any
  44e33c:	sub	w13, w13, w14
  44e340:	cmp	w13, w10
  44e344:	b.gt	44e384 <_obstack_memory_used@@Base+0x10124>
  44e348:	b	44e38c <_obstack_memory_used@@Base+0x1012c>
  44e34c:	cmp	w15, #0x1
  44e350:	b.lt	44e378 <_obstack_memory_used@@Base+0x10118>  // b.tstop
  44e354:	sub	w14, w13, w10
  44e358:	add	x16, x0, w12, sxtw #3
  44e35c:	mov	x17, x11
  44e360:	ldr	x18, [x17]
  44e364:	ldr	x2, [x16]
  44e368:	subs	x14, x14, #0x1
  44e36c:	str	x18, [x16], #8
  44e370:	str	x2, [x17], #8
  44e374:	b.ne	44e360 <_obstack_memory_used@@Base+0x10100>  // b.any
  44e378:	add	w12, w12, w15
  44e37c:	cmp	w13, w10
  44e380:	b.le	44e38c <_obstack_memory_used@@Base+0x1012c>
  44e384:	cmp	w10, w12
  44e388:	b.gt	44e2fc <_obstack_memory_used@@Base+0x1009c>
  44e38c:	sub	w9, w9, w10
  44e390:	add	w9, w9, w8
  44e394:	stp	w9, w8, [x1, #44]
  44e398:	ret
  44e39c:	sub	sp, sp, #0xb0
  44e3a0:	stp	x29, x30, [sp, #80]
  44e3a4:	add	x29, sp, #0x50
  44e3a8:	stp	x28, x27, [sp, #96]
  44e3ac:	stp	x26, x25, [sp, #112]
  44e3b0:	stp	x24, x23, [sp, #128]
  44e3b4:	stp	x22, x21, [sp, #144]
  44e3b8:	stp	x20, x19, [sp, #160]
  44e3bc:	stp	w7, w5, [x29, #-12]
  44e3c0:	ldr	x25, [x6, #32]
  44e3c4:	ldr	x27, [x29, #96]
  44e3c8:	mov	x19, x6
  44e3cc:	mov	x26, x3
  44e3d0:	mov	x23, x1
  44e3d4:	mov	x24, x25
  44e3d8:	stur	x4, [x29, #-32]
  44e3dc:	str	x2, [sp, #40]
  44e3e0:	str	w0, [sp, #36]
  44e3e4:	ldrb	w8, [x24]
  44e3e8:	cbz	w8, 44e400 <_obstack_memory_used@@Base+0x101a0>
  44e3ec:	cmp	w8, #0x3d
  44e3f0:	b.eq	44e400 <_obstack_memory_used@@Base+0x101a0>  // b.none
  44e3f4:	add	x24, x24, #0x1
  44e3f8:	ldrb	w8, [x24]
  44e3fc:	cbnz	w8, 44e3ec <_obstack_memory_used@@Base+0x1018c>
  44e400:	ldr	x8, [x19, #32]
  44e404:	ldr	x28, [x26]
  44e408:	mov	w20, wzr
  44e40c:	sub	x22, x24, x8
  44e410:	cbz	x28, 44e454 <_obstack_memory_used@@Base+0x101f4>
  44e414:	mov	x21, x26
  44e418:	b	44e428 <_obstack_memory_used@@Base+0x101c8>
  44e41c:	ldr	x28, [x21, #32]!
  44e420:	add	w20, w20, #0x1
  44e424:	cbz	x28, 44e454 <_obstack_memory_used@@Base+0x101f4>
  44e428:	mov	x0, x28
  44e42c:	mov	x1, x25
  44e430:	mov	x2, x22
  44e434:	bl	4045a0 <strncmp@plt>
  44e438:	cbnz	w0, 44e41c <_obstack_memory_used@@Base+0x101bc>
  44e43c:	mov	x0, x28
  44e440:	bl	404190 <strlen@plt>
  44e444:	cmp	x22, x0
  44e448:	b.ne	44e41c <_obstack_memory_used@@Base+0x101bc>  // b.any
  44e44c:	cbnz	x21, 44e738 <_obstack_memory_used@@Base+0x104d8>
  44e450:	b	44e45c <_obstack_memory_used@@Base+0x101fc>
  44e454:	mov	x21, xzr
  44e458:	cbnz	x21, 44e738 <_obstack_memory_used@@Base+0x104d8>
  44e45c:	ldr	x0, [x26]
  44e460:	str	x23, [sp, #24]
  44e464:	cbz	x0, 44e5ac <_obstack_memory_used@@Base+0x1034c>
  44e468:	str	x27, [sp, #16]
  44e46c:	mov	x25, xzr
  44e470:	mov	x21, xzr
  44e474:	mov	w28, w20
  44e478:	mov	w23, #0xffffffff            	// #-1
  44e47c:	mov	x27, x26
  44e480:	stur	wzr, [x29, #-4]
  44e484:	str	wzr, [sp, #32]
  44e488:	stur	xzr, [x29, #-24]
  44e48c:	str	x28, [sp, #8]
  44e490:	b	44e4a8 <_obstack_memory_used@@Base+0x10248>
  44e494:	mov	x21, x27
  44e498:	mov	w23, w25
  44e49c:	ldr	x0, [x27, #32]!
  44e4a0:	add	x25, x25, #0x1
  44e4a4:	cbz	x0, 44e59c <_obstack_memory_used@@Base+0x1033c>
  44e4a8:	ldr	x1, [x19, #32]
  44e4ac:	mov	x2, x22
  44e4b0:	bl	4045a0 <strncmp@plt>
  44e4b4:	cbnz	w0, 44e49c <_obstack_memory_used@@Base+0x1023c>
  44e4b8:	cbz	x21, 44e494 <_obstack_memory_used@@Base+0x10234>
  44e4bc:	ldur	w8, [x29, #-8]
  44e4c0:	cbnz	w8, 44e4e4 <_obstack_memory_used@@Base+0x10284>
  44e4c4:	ldr	w8, [x21, #8]
  44e4c8:	ldr	w9, [x27, #8]
  44e4cc:	cmp	w8, w9
  44e4d0:	b.ne	44e4e4 <_obstack_memory_used@@Base+0x10284>  // b.any
  44e4d4:	ldr	x8, [x21, #16]
  44e4d8:	ldr	x9, [x27, #16]
  44e4dc:	cmp	x8, x9
  44e4e0:	b.eq	44e570 <_obstack_memory_used@@Base+0x10310>  // b.none
  44e4e4:	ldur	w8, [x29, #-4]
  44e4e8:	cbnz	w8, 44e49c <_obstack_memory_used@@Base+0x1023c>
  44e4ec:	ldur	w8, [x29, #-12]
  44e4f0:	cbz	w8, 44e544 <_obstack_memory_used@@Base+0x102e4>
  44e4f4:	ldur	x8, [x29, #-24]
  44e4f8:	cbnz	x8, 44e558 <_obstack_memory_used@@Base+0x102f8>
  44e4fc:	mov	x0, x28
  44e500:	bl	4044f0 <malloc@plt>
  44e504:	cmp	x0, #0x0
  44e508:	cset	w8, eq  // eq = none
  44e50c:	stur	w8, [x29, #-4]
  44e510:	ldr	w8, [sp, #32]
  44e514:	csinc	w8, w8, wzr, eq  // eq = none
  44e518:	str	w8, [sp, #32]
  44e51c:	cbz	x0, 44e58c <_obstack_memory_used@@Base+0x1032c>
  44e520:	ldr	x2, [sp, #8]
  44e524:	mov	w1, wzr
  44e528:	stur	x0, [x29, #-24]
  44e52c:	bl	404600 <memset@plt>
  44e530:	ldur	x8, [x29, #-24]
  44e534:	mov	w9, #0x1                   	// #1
  44e538:	strb	w9, [x8, w23, sxtw]
  44e53c:	cbnz	x8, 44e560 <_obstack_memory_used@@Base+0x10300>
  44e540:	b	44e594 <_obstack_memory_used@@Base+0x10334>
  44e544:	mov	w8, #0x1                   	// #1
  44e548:	stur	w8, [x29, #-4]
  44e54c:	ldur	x8, [x29, #-24]
  44e550:	cbnz	x8, 44e560 <_obstack_memory_used@@Base+0x10300>
  44e554:	b	44e594 <_obstack_memory_used@@Base+0x10334>
  44e558:	stur	wzr, [x29, #-4]
  44e55c:	cbz	x8, 44e594 <_obstack_memory_used@@Base+0x10334>
  44e560:	mov	w9, #0x1                   	// #1
  44e564:	stur	x8, [x29, #-24]
  44e568:	strb	w9, [x8, x25]
  44e56c:	b	44e49c <_obstack_memory_used@@Base+0x1023c>
  44e570:	ldur	w8, [x29, #-4]
  44e574:	cbnz	w8, 44e49c <_obstack_memory_used@@Base+0x1023c>
  44e578:	ldr	w8, [x21, #24]
  44e57c:	ldr	w9, [x27, #24]
  44e580:	cmp	w8, w9
  44e584:	b.ne	44e4ec <_obstack_memory_used@@Base+0x1028c>  // b.any
  44e588:	b	44e49c <_obstack_memory_used@@Base+0x1023c>
  44e58c:	mov	x8, xzr
  44e590:	cbnz	x8, 44e560 <_obstack_memory_used@@Base+0x10300>
  44e594:	stur	xzr, [x29, #-24]
  44e598:	b	44e49c <_obstack_memory_used@@Base+0x1023c>
  44e59c:	ldr	x27, [sp, #16]
  44e5a0:	ldur	x0, [x29, #-24]
  44e5a4:	cbz	x0, 44e5c4 <_obstack_memory_used@@Base+0x10364>
  44e5a8:	b	44e5d4 <_obstack_memory_used@@Base+0x10374>
  44e5ac:	mov	x21, xzr
  44e5b0:	mov	w25, wzr
  44e5b4:	str	wzr, [sp, #32]
  44e5b8:	stur	wzr, [x29, #-4]
  44e5bc:	mov	w23, #0xffffffff            	// #-1
  44e5c0:	cbnz	x0, 44e5d4 <_obstack_memory_used@@Base+0x10374>
  44e5c4:	ldur	w8, [x29, #-4]
  44e5c8:	cbnz	w8, 44e5d4 <_obstack_memory_used@@Base+0x10374>
  44e5cc:	mov	w8, #0x1                   	// #1
  44e5d0:	b	44e72c <_obstack_memory_used@@Base+0x104cc>
  44e5d4:	ldur	w8, [x29, #-12]
  44e5d8:	cbz	w8, 44e62c <_obstack_memory_used@@Base+0x103cc>
  44e5dc:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e5e0:	ldr	x22, [x23, #1136]
  44e5e4:	ldur	w8, [x29, #-4]
  44e5e8:	mov	x28, x0
  44e5ec:	cbz	w8, 44e63c <_obstack_memory_used@@Base+0x103dc>
  44e5f0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e5f4:	add	x1, x1, #0xa6b
  44e5f8:	mov	w2, #0x5                   	// #5
  44e5fc:	mov	x0, xzr
  44e600:	bl	404bf0 <dcgettext@plt>
  44e604:	ldr	x8, [sp, #24]
  44e608:	ldr	x5, [x19, #32]
  44e60c:	mov	x2, x0
  44e610:	mov	w1, #0x1                   	// #1
  44e614:	ldr	x3, [x8]
  44e618:	mov	x0, x22
  44e61c:	mov	x4, x27
  44e620:	bl	404910 <__fprintf_chk@plt>
  44e624:	mov	w23, w25
  44e628:	b	44e6f4 <_obstack_memory_used@@Base+0x10494>
  44e62c:	ldr	w8, [sp, #32]
  44e630:	mov	w23, w25
  44e634:	cbnz	w8, 44e700 <_obstack_memory_used@@Base+0x104a0>
  44e638:	b	44e704 <_obstack_memory_used@@Base+0x104a4>
  44e63c:	mov	x0, x22
  44e640:	bl	404230 <flockfile@plt>
  44e644:	ldr	x22, [x23, #1136]
  44e648:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e64c:	add	x1, x1, #0xa8b
  44e650:	mov	w2, #0x5                   	// #5
  44e654:	mov	x0, xzr
  44e658:	bl	404bf0 <dcgettext@plt>
  44e65c:	ldr	x8, [sp, #24]
  44e660:	ldr	x5, [x19, #32]
  44e664:	mov	x2, x0
  44e668:	mov	w1, #0x1                   	// #1
  44e66c:	ldr	x3, [x8]
  44e670:	mov	x0, x22
  44e674:	mov	x4, x27
  44e678:	bl	404910 <__fprintf_chk@plt>
  44e67c:	mov	x25, x23
  44e680:	cbz	w20, 44e6d4 <_obstack_memory_used@@Base+0x10474>
  44e684:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e688:	mov	x23, xzr
  44e68c:	mov	w20, w20
  44e690:	add	x22, x22, #0xaba
  44e694:	mov	x9, x28
  44e698:	b	44e6ac <_obstack_memory_used@@Base+0x1044c>
  44e69c:	add	x23, x23, #0x1
  44e6a0:	cmp	x20, x23
  44e6a4:	add	x26, x26, #0x20
  44e6a8:	b.eq	44e6d8 <_obstack_memory_used@@Base+0x10478>  // b.none
  44e6ac:	ldrb	w8, [x9, x23]
  44e6b0:	cbz	w8, 44e69c <_obstack_memory_used@@Base+0x1043c>
  44e6b4:	ldr	x0, [x25, #1136]
  44e6b8:	ldr	x4, [x26]
  44e6bc:	mov	w1, #0x1                   	// #1
  44e6c0:	mov	x2, x22
  44e6c4:	mov	x3, x27
  44e6c8:	bl	404910 <__fprintf_chk@plt>
  44e6cc:	mov	x9, x28
  44e6d0:	b	44e69c <_obstack_memory_used@@Base+0x1043c>
  44e6d4:	mov	w23, wzr
  44e6d8:	ldr	x0, [x25, #1136]
  44e6dc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x18da0>
  44e6e0:	add	x2, x2, #0x365
  44e6e4:	mov	w1, #0x1                   	// #1
  44e6e8:	bl	404910 <__fprintf_chk@plt>
  44e6ec:	ldr	x0, [x25, #1136]
  44e6f0:	bl	404520 <funlockfile@plt>
  44e6f4:	ldr	w8, [sp, #32]
  44e6f8:	mov	x0, x28
  44e6fc:	cbz	w8, 44e704 <_obstack_memory_used@@Base+0x104a4>
  44e700:	bl	4049d0 <free@plt>
  44e704:	ldr	x22, [x19, #32]
  44e708:	mov	x0, x22
  44e70c:	bl	404190 <strlen@plt>
  44e710:	ldr	w9, [x19]
  44e714:	mov	w8, wzr
  44e718:	add	x10, x22, x0
  44e71c:	str	x10, [x19, #32]
  44e720:	add	w9, w9, #0x1
  44e724:	str	w9, [x19]
  44e728:	str	wzr, [x19, #8]
  44e72c:	mov	w20, w23
  44e730:	ldr	x23, [sp, #24]
  44e734:	cbz	w8, 44e844 <_obstack_memory_used@@Base+0x105e4>
  44e738:	cbz	x21, 44e768 <_obstack_memory_used@@Base+0x10508>
  44e73c:	ldr	w9, [x19]
  44e740:	str	xzr, [x19, #32]
  44e744:	add	w8, w9, #0x1
  44e748:	str	w8, [x19]
  44e74c:	ldrb	w11, [x24]
  44e750:	ldr	w10, [x21, #8]
  44e754:	cbz	w11, 44e7fc <_obstack_memory_used@@Base+0x1059c>
  44e758:	cbz	w10, 44e84c <_obstack_memory_used@@Base+0x105ec>
  44e75c:	add	x8, x24, #0x1
  44e760:	str	x8, [x19, #16]
  44e764:	b	44e820 <_obstack_memory_used@@Base+0x105c0>
  44e768:	ldur	w8, [x29, #-8]
  44e76c:	cbz	w8, 44e7a0 <_obstack_memory_used@@Base+0x10540>
  44e770:	ldrsw	x8, [x19]
  44e774:	ldr	x8, [x23, x8, lsl #3]
  44e778:	ldrb	w8, [x8, #1]
  44e77c:	cmp	w8, #0x2d
  44e780:	b.eq	44e7a0 <_obstack_memory_used@@Base+0x10540>  // b.none
  44e784:	ldr	x8, [x19, #32]
  44e788:	ldr	x0, [sp, #40]
  44e78c:	ldrb	w1, [x8]
  44e790:	bl	404a70 <strchr@plt>
  44e794:	cbz	x0, 44e7a0 <_obstack_memory_used@@Base+0x10540>
  44e798:	mov	w0, #0xffffffff            	// #-1
  44e79c:	b	44e8f8 <_obstack_memory_used@@Base+0x10698>
  44e7a0:	ldur	w8, [x29, #-12]
  44e7a4:	cbz	w8, 44e7e0 <_obstack_memory_used@@Base+0x10580>
  44e7a8:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e7ac:	ldr	x22, [x8, #1136]
  44e7b0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e7b4:	add	x1, x1, #0xac2
  44e7b8:	mov	w2, #0x5                   	// #5
  44e7bc:	mov	x0, xzr
  44e7c0:	bl	404bf0 <dcgettext@plt>
  44e7c4:	ldr	x3, [x23]
  44e7c8:	ldr	x5, [x19, #32]
  44e7cc:	mov	x2, x0
  44e7d0:	mov	w1, #0x1                   	// #1
  44e7d4:	mov	x0, x22
  44e7d8:	mov	x4, x27
  44e7dc:	bl	404910 <__fprintf_chk@plt>
  44e7e0:	ldr	w8, [x19]
  44e7e4:	str	xzr, [x19, #32]
  44e7e8:	str	wzr, [x19, #8]
  44e7ec:	mov	w0, #0x3f                  	// #63
  44e7f0:	add	w8, w8, #0x1
  44e7f4:	str	w8, [x19]
  44e7f8:	b	44e8f8 <_obstack_memory_used@@Base+0x10698>
  44e7fc:	cmp	w10, #0x1
  44e800:	b.ne	44e820 <_obstack_memory_used@@Base+0x105c0>  // b.any
  44e804:	ldr	w10, [sp, #36]
  44e808:	cmp	w8, w10
  44e80c:	b.ge	44e89c <_obstack_memory_used@@Base+0x1063c>  // b.tcont
  44e810:	add	w9, w9, #0x2
  44e814:	str	w9, [x19]
  44e818:	ldr	x8, [x23, w8, sxtw #3]
  44e81c:	b	44e760 <_obstack_memory_used@@Base+0x10500>
  44e820:	ldur	x8, [x29, #-32]
  44e824:	cbz	x8, 44e82c <_obstack_memory_used@@Base+0x105cc>
  44e828:	str	w20, [x8]
  44e82c:	ldr	x8, [x21, #16]
  44e830:	ldr	w0, [x21, #24]
  44e834:	cbz	x8, 44e8f8 <_obstack_memory_used@@Base+0x10698>
  44e838:	str	w0, [x8]
  44e83c:	mov	w0, wzr
  44e840:	b	44e8f8 <_obstack_memory_used@@Base+0x10698>
  44e844:	mov	w0, #0x3f                  	// #63
  44e848:	b	44e8f8 <_obstack_memory_used@@Base+0x10698>
  44e84c:	ldur	w8, [x29, #-12]
  44e850:	cbz	w8, 44e88c <_obstack_memory_used@@Base+0x1062c>
  44e854:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e858:	ldr	x22, [x8, #1136]
  44e85c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e860:	add	x1, x1, #0xae2
  44e864:	mov	w2, #0x5                   	// #5
  44e868:	mov	x0, xzr
  44e86c:	bl	404bf0 <dcgettext@plt>
  44e870:	ldr	x3, [x23]
  44e874:	ldr	x5, [x21]
  44e878:	mov	x2, x0
  44e87c:	mov	w1, #0x1                   	// #1
  44e880:	mov	x0, x22
  44e884:	mov	x4, x27
  44e888:	bl	404910 <__fprintf_chk@plt>
  44e88c:	ldr	w8, [x21, #24]
  44e890:	mov	w0, #0x3f                  	// #63
  44e894:	str	w8, [x19, #8]
  44e898:	b	44e8f8 <_obstack_memory_used@@Base+0x10698>
  44e89c:	ldur	w8, [x29, #-12]
  44e8a0:	cbz	w8, 44e8dc <_obstack_memory_used@@Base+0x1067c>
  44e8a4:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e8a8:	ldr	x22, [x8, #1136]
  44e8ac:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1bda0>
  44e8b0:	add	x1, x1, #0xb0f
  44e8b4:	mov	w2, #0x5                   	// #5
  44e8b8:	mov	x0, xzr
  44e8bc:	bl	404bf0 <dcgettext@plt>
  44e8c0:	ldr	x3, [x23]
  44e8c4:	ldr	x5, [x21]
  44e8c8:	mov	x2, x0
  44e8cc:	mov	w1, #0x1                   	// #1
  44e8d0:	mov	x0, x22
  44e8d4:	mov	x4, x27
  44e8d8:	bl	404910 <__fprintf_chk@plt>
  44e8dc:	ldr	w8, [x21, #24]
  44e8e0:	mov	w9, #0x3f                  	// #63
  44e8e4:	str	w8, [x19, #8]
  44e8e8:	ldr	x8, [sp, #40]
  44e8ec:	ldrb	w8, [x8]
  44e8f0:	cmp	w8, #0x3a
  44e8f4:	csel	w0, w8, w9, eq  // eq = none
  44e8f8:	ldp	x20, x19, [sp, #160]
  44e8fc:	ldp	x22, x21, [sp, #144]
  44e900:	ldp	x24, x23, [sp, #128]
  44e904:	ldp	x26, x25, [sp, #112]
  44e908:	ldp	x28, x27, [sp, #96]
  44e90c:	ldp	x29, x30, [sp, #80]
  44e910:	add	sp, sp, #0xb0
  44e914:	ret
  44e918:	stp	x29, x30, [sp, #-32]!
  44e91c:	stp	x20, x19, [sp, #16]
  44e920:	adrp	x20, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e924:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e928:	ldr	w9, [x20, #1116]
  44e92c:	ldr	w8, [x8, #1120]
  44e930:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e934:	add	x19, x19, #0xf20
  44e938:	mov	w7, w6
  44e93c:	mov	x6, x19
  44e940:	mov	x29, sp
  44e944:	stp	w9, w8, [x19]
  44e948:	bl	44dd4c <_obstack_memory_used@@Base+0xfaec>
  44e94c:	ldr	w8, [x19]
  44e950:	ldr	x9, [x19, #16]
  44e954:	ldr	w11, [x19, #8]
  44e958:	adrp	x10, 470000 <argp_program_version_hook@@Base+0x258>
  44e95c:	str	w8, [x20, #1116]
  44e960:	ldp	x20, x19, [sp, #16]
  44e964:	adrp	x12, 46f000 <_obstack_memory_used@@Base+0x30da0>
  44e968:	str	x9, [x10, #1056]
  44e96c:	str	w11, [x12, #1124]
  44e970:	ldp	x29, x30, [sp], #32
  44e974:	ret
  44e978:	stp	x29, x30, [sp, #-16]!
  44e97c:	mov	w6, #0x1                   	// #1
  44e980:	mov	x3, xzr
  44e984:	mov	x4, xzr
  44e988:	mov	w5, wzr
  44e98c:	mov	x29, sp
  44e990:	bl	44e918 <_obstack_memory_used@@Base+0x106b8>
  44e994:	ldp	x29, x30, [sp], #16
  44e998:	ret
  44e99c:	stp	x29, x30, [sp, #-16]!
  44e9a0:	mov	w2, #0x3                   	// #3
  44e9a4:	mov	w1, wzr
  44e9a8:	mov	x29, sp
  44e9ac:	bl	43db94 <argp_usage@@Base+0xbf98>
  44e9b0:	ldp	x29, x30, [sp], #16
  44e9b4:	ret
  44e9b8:	adds	x8, x0, x1
  44e9bc:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
  44e9c0:	ret
  44e9c4:	stp	x29, x30, [sp, #-32]!
  44e9c8:	str	x19, [sp, #16]
  44e9cc:	mov	x29, sp
  44e9d0:	mov	x19, x2
  44e9d4:	bl	44e9b8 <_obstack_memory_used@@Base+0x10758>
  44e9d8:	mov	x1, x19
  44e9dc:	bl	44e9b8 <_obstack_memory_used@@Base+0x10758>
  44e9e0:	ldr	x19, [sp, #16]
  44e9e4:	ldp	x29, x30, [sp], #32
  44e9e8:	ret
  44e9ec:	stp	x29, x30, [sp, #-32]!
  44e9f0:	stp	x20, x19, [sp, #16]
  44e9f4:	mov	x29, sp
  44e9f8:	mov	x19, x3
  44e9fc:	mov	x20, x2
  44ea00:	bl	44e9b8 <_obstack_memory_used@@Base+0x10758>
  44ea04:	mov	x1, x20
  44ea08:	bl	44e9b8 <_obstack_memory_used@@Base+0x10758>
  44ea0c:	mov	x1, x19
  44ea10:	bl	44e9b8 <_obstack_memory_used@@Base+0x10758>
  44ea14:	ldp	x20, x19, [sp, #16]
  44ea18:	ldp	x29, x30, [sp], #32
  44ea1c:	ret
  44ea20:	cmp	x0, x1
  44ea24:	csel	x0, x1, x0, cc  // cc = lo, ul, last
  44ea28:	ret
  44ea2c:	nop
  44ea30:	stp	x29, x30, [sp, #-48]!
  44ea34:	mov	x29, sp
  44ea38:	str	q0, [sp, #16]
  44ea3c:	str	q1, [sp, #32]
  44ea40:	ldp	x2, x0, [sp, #16]
  44ea44:	ldp	x5, x3, [sp, #32]
  44ea48:	mrs	x10, fpcr
  44ea4c:	lsr	x1, x0, #63
  44ea50:	ubfx	x6, x0, #0, #48
  44ea54:	and	w13, w1, #0xff
  44ea58:	mov	x14, x1
  44ea5c:	ubfx	x7, x0, #48, #15
  44ea60:	cbz	w7, 44ee80 <_obstack_memory_used@@Base+0x10c20>
  44ea64:	mov	w4, #0x7fff                	// #32767
  44ea68:	cmp	w7, w4
  44ea6c:	b.eq	44eec8 <_obstack_memory_used@@Base+0x10c68>  // b.none
  44ea70:	and	x7, x7, #0xffff
  44ea74:	extr	x6, x6, x2, #61
  44ea78:	mov	x15, #0xffffffffffffc001    	// #-16383
  44ea7c:	orr	x4, x6, #0x8000000000000
  44ea80:	add	x7, x7, x15
  44ea84:	lsl	x2, x2, #3
  44ea88:	mov	x1, #0x0                   	// #0
  44ea8c:	mov	x16, #0x0                   	// #0
  44ea90:	mov	w0, #0x0                   	// #0
  44ea94:	lsr	x8, x3, #63
  44ea98:	ubfx	x6, x3, #0, #48
  44ea9c:	and	w15, w8, #0xff
  44eaa0:	ubfx	x9, x3, #48, #15
  44eaa4:	cbz	w9, 44ee3c <_obstack_memory_used@@Base+0x10bdc>
  44eaa8:	mov	w11, #0x7fff                	// #32767
  44eaac:	cmp	w9, w11
  44eab0:	b.eq	44eb74 <_obstack_memory_used@@Base+0x10914>  // b.none
  44eab4:	and	x9, x9, #0xffff
  44eab8:	extr	x6, x6, x5, #61
  44eabc:	mov	x12, #0xffffffffffffc001    	// #-16383
  44eac0:	orr	x6, x6, #0x8000000000000
  44eac4:	add	x9, x9, x12
  44eac8:	lsl	x5, x5, #3
  44eacc:	sub	x7, x7, x9
  44ead0:	mov	x9, #0x0                   	// #0
  44ead4:	eor	w11, w13, w15
  44ead8:	cmp	x1, #0x9
  44eadc:	and	x3, x11, #0xff
  44eae0:	mov	x12, x3
  44eae4:	b.gt	44ee14 <_obstack_memory_used@@Base+0x10bb4>
  44eae8:	cmp	x1, #0x7
  44eaec:	b.gt	44efd4 <_obstack_memory_used@@Base+0x10d74>
  44eaf0:	cmp	x1, #0x3
  44eaf4:	b.eq	44eb10 <_obstack_memory_used@@Base+0x108b0>  // b.none
  44eaf8:	b.le	44ede4 <_obstack_memory_used@@Base+0x10b84>
  44eafc:	cmp	x1, #0x5
  44eb00:	b.eq	44ee24 <_obstack_memory_used@@Base+0x10bc4>  // b.none
  44eb04:	b.le	44ec08 <_obstack_memory_used@@Base+0x109a8>
  44eb08:	cmp	x1, #0x6
  44eb0c:	b.eq	44ebd8 <_obstack_memory_used@@Base+0x10978>  // b.none
  44eb10:	cmp	x9, #0x1
  44eb14:	b.eq	44ef58 <_obstack_memory_used@@Base+0x10cf8>  // b.none
  44eb18:	cbz	x9, 44eb2c <_obstack_memory_used@@Base+0x108cc>
  44eb1c:	cmp	x9, #0x2
  44eb20:	b.eq	44f15c <_obstack_memory_used@@Base+0x10efc>  // b.none
  44eb24:	cmp	x9, #0x3
  44eb28:	b.eq	44f144 <_obstack_memory_used@@Base+0x10ee4>  // b.none
  44eb2c:	mov	x1, #0x3fff                	// #16383
  44eb30:	mov	x12, x8
  44eb34:	add	x3, x7, x1
  44eb38:	cmp	x3, #0x0
  44eb3c:	b.le	44f018 <_obstack_memory_used@@Base+0x10db8>
  44eb40:	tst	x5, #0x7
  44eb44:	b.ne	44ef88 <_obstack_memory_used@@Base+0x10d28>  // b.any
  44eb48:	and	w11, w12, #0x1
  44eb4c:	tbz	x6, #52, 44eb58 <_obstack_memory_used@@Base+0x108f8>
  44eb50:	and	x6, x6, #0xffefffffffffffff
  44eb54:	add	x3, x7, #0x4, lsl #12
  44eb58:	mov	x1, #0x7ffe                	// #32766
  44eb5c:	cmp	x3, x1
  44eb60:	b.gt	44f100 <_obstack_memory_used@@Base+0x10ea0>
  44eb64:	and	w1, w3, #0x7fff
  44eb68:	extr	x2, x6, x5, #3
  44eb6c:	ubfx	x6, x6, #3, #48
  44eb70:	b	44ebe4 <_obstack_memory_used@@Base+0x10984>
  44eb74:	mov	x9, #0xffffffffffff8001    	// #-32767
  44eb78:	orr	x3, x6, x5
  44eb7c:	add	x7, x7, x9
  44eb80:	cbz	x3, 44eefc <_obstack_memory_used@@Base+0x10c9c>
  44eb84:	tst	x6, #0x800000000000
  44eb88:	orr	x1, x1, #0x3
  44eb8c:	csinc	w0, w0, wzr, ne  // ne = any
  44eb90:	mov	x9, #0x3                   	// #3
  44eb94:	eor	w11, w13, w15
  44eb98:	cmp	x1, #0x9
  44eb9c:	and	x3, x11, #0xff
  44eba0:	mov	x12, x3
  44eba4:	b.le	44eae8 <_obstack_memory_used@@Base+0x10888>
  44eba8:	cmp	x1, #0xf
  44ebac:	b.ne	44ee14 <_obstack_memory_used@@Base+0x10bb4>  // b.any
  44ebb0:	tbz	x4, #47, 44efc0 <_obstack_memory_used@@Base+0x10d60>
  44ebb4:	tbnz	x6, #47, 44efc0 <_obstack_memory_used@@Base+0x10d60>
  44ebb8:	orr	x6, x6, #0x800000000000
  44ebbc:	mov	w11, w15
  44ebc0:	and	x6, x6, #0xffffffffffff
  44ebc4:	mov	x2, x5
  44ebc8:	mov	w1, #0x7fff                	// #32767
  44ebcc:	b	44ebe4 <_obstack_memory_used@@Base+0x10984>
  44ebd0:	cmp	x1, #0x2
  44ebd4:	b.ne	44ec10 <_obstack_memory_used@@Base+0x109b0>  // b.any
  44ebd8:	mov	w1, #0x0                   	// #0
  44ebdc:	mov	x6, #0x0                   	// #0
  44ebe0:	mov	x2, #0x0                   	// #0
  44ebe4:	mov	x5, #0x0                   	// #0
  44ebe8:	orr	w1, w1, w11, lsl #15
  44ebec:	bfxil	x5, x6, #0, #48
  44ebf0:	fmov	d0, x2
  44ebf4:	bfi	x5, x1, #48, #16
  44ebf8:	fmov	v0.d[1], x5
  44ebfc:	cbnz	w0, 44ee04 <_obstack_memory_used@@Base+0x10ba4>
  44ec00:	ldp	x29, x30, [sp], #48
  44ec04:	ret
  44ec08:	cmp	x1, #0x4
  44ec0c:	b.eq	44ebd8 <_obstack_memory_used@@Base+0x10978>  // b.none
  44ec10:	cmp	x4, x6
  44ec14:	b.ls	44ef6c <_obstack_memory_used@@Base+0x10d0c>  // b.plast
  44ec18:	lsr	x3, x4, #1
  44ec1c:	extr	x8, x4, x2, #1
  44ec20:	lsl	x2, x2, #63
  44ec24:	ubfx	x14, x6, #20, #32
  44ec28:	extr	x9, x6, x5, #52
  44ec2c:	lsl	x13, x5, #12
  44ec30:	and	x15, x9, #0xffffffff
  44ec34:	udiv	x5, x3, x14
  44ec38:	msub	x3, x5, x14, x3
  44ec3c:	mul	x1, x15, x5
  44ec40:	extr	x3, x3, x8, #32
  44ec44:	cmp	x1, x3
  44ec48:	b.ls	44ec5c <_obstack_memory_used@@Base+0x109fc>  // b.plast
  44ec4c:	adds	x3, x9, x3
  44ec50:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  44ec54:	b.hi	44f23c <_obstack_memory_used@@Base+0x10fdc>  // b.pmore
  44ec58:	sub	x5, x5, #0x1
  44ec5c:	sub	x3, x3, x1
  44ec60:	mov	x4, x8
  44ec64:	udiv	x1, x3, x14
  44ec68:	msub	x3, x1, x14, x3
  44ec6c:	mul	x6, x15, x1
  44ec70:	bfi	x4, x3, #32, #32
  44ec74:	cmp	x6, x4
  44ec78:	b.ls	44ec8c <_obstack_memory_used@@Base+0x10a2c>  // b.plast
  44ec7c:	adds	x4, x9, x4
  44ec80:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  44ec84:	b.hi	44f230 <_obstack_memory_used@@Base+0x10fd0>  // b.pmore
  44ec88:	sub	x1, x1, #0x1
  44ec8c:	orr	x8, x1, x5, lsl #32
  44ec90:	and	x17, x13, #0xffffffff
  44ec94:	and	x1, x8, #0xffffffff
  44ec98:	lsr	x16, x13, #32
  44ec9c:	lsr	x5, x8, #32
  44eca0:	sub	x4, x4, x6
  44eca4:	mov	x18, #0x100000000           	// #4294967296
  44eca8:	mul	x3, x1, x17
  44ecac:	mul	x30, x5, x17
  44ecb0:	madd	x6, x16, x1, x30
  44ecb4:	and	x1, x3, #0xffffffff
  44ecb8:	mul	x5, x5, x16
  44ecbc:	add	x3, x6, x3, lsr #32
  44ecc0:	add	x6, x5, x18
  44ecc4:	cmp	x30, x3
  44ecc8:	csel	x5, x6, x5, hi  // hi = pmore
  44eccc:	add	x1, x1, x3, lsl #32
  44ecd0:	add	x5, x5, x3, lsr #32
  44ecd4:	cmp	x4, x5
  44ecd8:	b.cc	44efe4 <_obstack_memory_used@@Base+0x10d84>  // b.lo, b.ul, b.last
  44ecdc:	ccmp	x2, x1, #0x2, eq  // eq = none
  44ece0:	mov	x6, x8
  44ece4:	b.cc	44efe4 <_obstack_memory_used@@Base+0x10d84>  // b.lo, b.ul, b.last
  44ece8:	subs	x8, x2, x1
  44ecec:	mov	x3, #0x3fff                	// #16383
  44ecf0:	cmp	x2, x1
  44ecf4:	add	x3, x7, x3
  44ecf8:	sbc	x4, x4, x5
  44ecfc:	cmp	x9, x4
  44ed00:	b.eq	44f248 <_obstack_memory_used@@Base+0x10fe8>  // b.none
  44ed04:	udiv	x5, x4, x14
  44ed08:	msub	x4, x5, x14, x4
  44ed0c:	mul	x2, x15, x5
  44ed10:	extr	x1, x4, x8, #32
  44ed14:	cmp	x2, x1
  44ed18:	b.ls	44ed2c <_obstack_memory_used@@Base+0x10acc>  // b.plast
  44ed1c:	adds	x1, x9, x1
  44ed20:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  44ed24:	b.hi	44f300 <_obstack_memory_used@@Base+0x110a0>  // b.pmore
  44ed28:	sub	x5, x5, #0x1
  44ed2c:	sub	x1, x1, x2
  44ed30:	udiv	x2, x1, x14
  44ed34:	msub	x1, x2, x14, x1
  44ed38:	mul	x15, x15, x2
  44ed3c:	bfi	x8, x1, #32, #32
  44ed40:	mov	x1, x8
  44ed44:	cmp	x15, x8
  44ed48:	b.ls	44ed5c <_obstack_memory_used@@Base+0x10afc>  // b.plast
  44ed4c:	adds	x1, x9, x8
  44ed50:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  44ed54:	b.hi	44f30c <_obstack_memory_used@@Base+0x110ac>  // b.pmore
  44ed58:	sub	x2, x2, #0x1
  44ed5c:	orr	x5, x2, x5, lsl #32
  44ed60:	mov	x11, #0x100000000           	// #4294967296
  44ed64:	and	x4, x5, #0xffffffff
  44ed68:	sub	x1, x1, x15
  44ed6c:	lsr	x14, x5, #32
  44ed70:	mul	x2, x17, x4
  44ed74:	mul	x17, x14, x17
  44ed78:	madd	x4, x16, x4, x17
  44ed7c:	and	x8, x2, #0xffffffff
  44ed80:	mul	x16, x16, x14
  44ed84:	add	x2, x4, x2, lsr #32
  44ed88:	add	x4, x16, x11
  44ed8c:	cmp	x17, x2
  44ed90:	csel	x16, x4, x16, hi  // hi = pmore
  44ed94:	add	x4, x8, x2, lsl #32
  44ed98:	add	x16, x16, x2, lsr #32
  44ed9c:	cmp	x1, x16
  44eda0:	b.cs	44f180 <_obstack_memory_used@@Base+0x10f20>  // b.hs, b.nlast
  44eda4:	adds	x2, x9, x1
  44eda8:	sub	x8, x5, #0x1
  44edac:	mov	x1, x2
  44edb0:	b.cs	44edc4 <_obstack_memory_used@@Base+0x10b64>  // b.hs, b.nlast
  44edb4:	cmp	x2, x16
  44edb8:	b.cc	44f280 <_obstack_memory_used@@Base+0x11020>  // b.lo, b.ul, b.last
  44edbc:	ccmp	x13, x4, #0x2, eq  // eq = none
  44edc0:	b.cc	44f280 <_obstack_memory_used@@Base+0x11020>  // b.lo, b.ul, b.last
  44edc4:	cmp	x13, x4
  44edc8:	mov	x5, x8
  44edcc:	cset	w2, ne  // ne = any
  44edd0:	cmp	w2, #0x0
  44edd4:	orr	x2, x5, #0x1
  44edd8:	ccmp	x1, x16, #0x0, eq  // eq = none
  44eddc:	csel	x5, x2, x5, ne  // ne = any
  44ede0:	b	44eb38 <_obstack_memory_used@@Base+0x108d8>
  44ede4:	cmp	x1, #0x1
  44ede8:	b.ne	44ebd0 <_obstack_memory_used@@Base+0x10970>  // b.any
  44edec:	mov	x4, #0x0                   	// #0
  44edf0:	fmov	d0, x4
  44edf4:	lsl	x3, x3, #63
  44edf8:	orr	w0, w0, #0x2
  44edfc:	orr	x5, x3, #0x7fff000000000000
  44ee00:	fmov	v0.d[1], x5
  44ee04:	str	q0, [sp, #16]
  44ee08:	bl	44ffa8 <_obstack_memory_used@@Base+0x11d48>
  44ee0c:	ldr	q0, [sp, #16]
  44ee10:	b	44ec00 <_obstack_memory_used@@Base+0x109a0>
  44ee14:	cmp	x1, #0xb
  44ee18:	b.gt	44eee8 <_obstack_memory_used@@Base+0x10c88>
  44ee1c:	cmp	x1, #0xa
  44ee20:	b.ne	44eb10 <_obstack_memory_used@@Base+0x108b0>  // b.any
  44ee24:	mov	w11, #0x0                   	// #0
  44ee28:	mov	x6, #0xffffffffffff        	// #281474976710655
  44ee2c:	mov	x2, #0xffffffffffffffff    	// #-1
  44ee30:	mov	w0, #0x1                   	// #1
  44ee34:	mov	w1, #0x7fff                	// #32767
  44ee38:	b	44ebe4 <_obstack_memory_used@@Base+0x10984>
  44ee3c:	orr	x3, x6, x5
  44ee40:	cbz	x3, 44ef28 <_obstack_memory_used@@Base+0x10cc8>
  44ee44:	cbz	x6, 44f0dc <_obstack_memory_used@@Base+0x10e7c>
  44ee48:	clz	x3, x6
  44ee4c:	sub	x9, x3, #0xf
  44ee50:	add	w12, w9, #0x3
  44ee54:	mov	w11, #0x3d                  	// #61
  44ee58:	sub	w9, w11, w9
  44ee5c:	lsl	x6, x6, x12
  44ee60:	lsr	x9, x5, x9
  44ee64:	orr	x6, x9, x6
  44ee68:	lsl	x5, x5, x12
  44ee6c:	add	x7, x3, x7
  44ee70:	mov	x11, #0x3fef                	// #16367
  44ee74:	mov	x9, #0x0                   	// #0
  44ee78:	add	x7, x7, x11
  44ee7c:	b	44ead4 <_obstack_memory_used@@Base+0x10874>
  44ee80:	orr	x4, x6, x2
  44ee84:	cbz	x4, 44ef10 <_obstack_memory_used@@Base+0x10cb0>
  44ee88:	cbz	x6, 44f0b8 <_obstack_memory_used@@Base+0x10e58>
  44ee8c:	clz	x0, x6
  44ee90:	sub	x4, x0, #0xf
  44ee94:	add	w7, w4, #0x3
  44ee98:	mov	w1, #0x3d                  	// #61
  44ee9c:	sub	w4, w1, w4
  44eea0:	lsl	x6, x6, x7
  44eea4:	lsr	x4, x2, x4
  44eea8:	orr	x4, x4, x6
  44eeac:	lsl	x2, x2, x7
  44eeb0:	mov	x7, #0xffffffffffffc011    	// #-16367
  44eeb4:	mov	x1, #0x0                   	// #0
  44eeb8:	sub	x7, x7, x0
  44eebc:	mov	x16, #0x0                   	// #0
  44eec0:	mov	w0, #0x0                   	// #0
  44eec4:	b	44ea94 <_obstack_memory_used@@Base+0x10834>
  44eec8:	orr	x4, x6, x2
  44eecc:	cbnz	x4, 44ef3c <_obstack_memory_used@@Base+0x10cdc>
  44eed0:	mov	x2, #0x0                   	// #0
  44eed4:	mov	x1, #0x8                   	// #8
  44eed8:	mov	x7, #0x7fff                	// #32767
  44eedc:	mov	x16, #0x2                   	// #2
  44eee0:	mov	w0, #0x0                   	// #0
  44eee4:	b	44ea94 <_obstack_memory_used@@Base+0x10834>
  44eee8:	mov	x6, x4
  44eeec:	mov	x5, x2
  44eef0:	mov	x8, x14
  44eef4:	mov	x9, x16
  44eef8:	b	44eb10 <_obstack_memory_used@@Base+0x108b0>
  44eefc:	orr	x1, x1, #0x2
  44ef00:	mov	x6, #0x0                   	// #0
  44ef04:	mov	x5, #0x0                   	// #0
  44ef08:	mov	x9, #0x2                   	// #2
  44ef0c:	b	44eb94 <_obstack_memory_used@@Base+0x10934>
  44ef10:	mov	x2, #0x0                   	// #0
  44ef14:	mov	x1, #0x4                   	// #4
  44ef18:	mov	x7, #0x0                   	// #0
  44ef1c:	mov	x16, #0x1                   	// #1
  44ef20:	mov	w0, #0x0                   	// #0
  44ef24:	b	44ea94 <_obstack_memory_used@@Base+0x10834>
  44ef28:	orr	x1, x1, #0x1
  44ef2c:	mov	x6, #0x0                   	// #0
  44ef30:	mov	x5, #0x0                   	// #0
  44ef34:	mov	x9, #0x1                   	// #1
  44ef38:	b	44ead4 <_obstack_memory_used@@Base+0x10874>
  44ef3c:	lsr	x0, x6, #47
  44ef40:	mov	x4, x6
  44ef44:	eor	w0, w0, #0x1
  44ef48:	mov	x1, #0xc                   	// #12
  44ef4c:	mov	x7, #0x7fff                	// #32767
  44ef50:	mov	x16, #0x3                   	// #3
  44ef54:	b	44ea94 <_obstack_memory_used@@Base+0x10834>
  44ef58:	mov	w11, w8
  44ef5c:	mov	w1, #0x0                   	// #0
  44ef60:	mov	x6, #0x0                   	// #0
  44ef64:	mov	x2, #0x0                   	// #0
  44ef68:	b	44ebe4 <_obstack_memory_used@@Base+0x10984>
  44ef6c:	ccmp	x5, x2, #0x2, eq  // eq = none
  44ef70:	b.ls	44ec18 <_obstack_memory_used@@Base+0x109b8>  // b.plast
  44ef74:	mov	x8, x2
  44ef78:	sub	x7, x7, #0x1
  44ef7c:	mov	x3, x4
  44ef80:	mov	x2, #0x0                   	// #0
  44ef84:	b	44ec24 <_obstack_memory_used@@Base+0x109c4>
  44ef88:	and	x1, x10, #0xc00000
  44ef8c:	orr	w0, w0, #0x10
  44ef90:	cmp	x1, #0x400, lsl #12
  44ef94:	b.eq	44f2e8 <_obstack_memory_used@@Base+0x11088>  // b.none
  44ef98:	cmp	x1, #0x800, lsl #12
  44ef9c:	b.eq	44f1fc <_obstack_memory_used@@Base+0x10f9c>  // b.none
  44efa0:	cbnz	x1, 44eb48 <_obstack_memory_used@@Base+0x108e8>
  44efa4:	and	x1, x5, #0xf
  44efa8:	and	w11, w12, #0x1
  44efac:	cmp	x1, #0x4
  44efb0:	b.eq	44eb4c <_obstack_memory_used@@Base+0x108ec>  // b.none
  44efb4:	adds	x5, x5, #0x4
  44efb8:	cinc	x6, x6, cs  // cs = hs, nlast
  44efbc:	b	44eb4c <_obstack_memory_used@@Base+0x108ec>
  44efc0:	orr	x6, x4, #0x800000000000
  44efc4:	mov	w11, w13
  44efc8:	and	x6, x6, #0xffffffffffff
  44efcc:	mov	w1, #0x7fff                	// #32767
  44efd0:	b	44ebe4 <_obstack_memory_used@@Base+0x10984>
  44efd4:	mov	w1, #0x7fff                	// #32767
  44efd8:	mov	x6, #0x0                   	// #0
  44efdc:	mov	x2, #0x0                   	// #0
  44efe0:	b	44ebe4 <_obstack_memory_used@@Base+0x10984>
  44efe4:	adds	x3, x2, x13
  44efe8:	sub	x6, x8, #0x1
  44efec:	adc	x4, x4, x9
  44eff0:	cset	x18, cs  // cs = hs, nlast
  44eff4:	mov	x2, x3
  44eff8:	cmp	x9, x4
  44effc:	b.cs	44f170 <_obstack_memory_used@@Base+0x10f10>  // b.hs, b.nlast
  44f000:	cmp	x5, x4
  44f004:	b.ls	44f198 <_obstack_memory_used@@Base+0x10f38>  // b.plast
  44f008:	adds	x2, x13, x3
  44f00c:	sub	x6, x8, #0x2
  44f010:	adc	x4, x4, x9
  44f014:	b	44ece8 <_obstack_memory_used@@Base+0x10a88>
  44f018:	mov	x1, #0x1                   	// #1
  44f01c:	sub	x1, x1, x3
  44f020:	cmp	x1, #0x74
  44f024:	and	w11, w12, #0x1
  44f028:	b.le	44f044 <_obstack_memory_used@@Base+0x10de4>
  44f02c:	orr	x2, x5, x6
  44f030:	cbnz	x2, 44f264 <_obstack_memory_used@@Base+0x11004>
  44f034:	orr	w0, w0, #0x8
  44f038:	mov	w1, #0x0                   	// #0
  44f03c:	mov	x6, #0x0                   	// #0
  44f040:	b	44f128 <_obstack_memory_used@@Base+0x10ec8>
  44f044:	cmp	x1, #0x3f
  44f048:	b.le	44f1a4 <_obstack_memory_used@@Base+0x10f44>
  44f04c:	mov	w2, #0x80                  	// #128
  44f050:	sub	w2, w2, w1
  44f054:	cmp	x1, #0x40
  44f058:	sub	w1, w1, #0x40
  44f05c:	lsl	x2, x6, x2
  44f060:	orr	x2, x5, x2
  44f064:	csel	x5, x2, x5, ne  // ne = any
  44f068:	lsr	x6, x6, x1
  44f06c:	cmp	x5, #0x0
  44f070:	cset	x2, ne  // ne = any
  44f074:	orr	x2, x2, x6
  44f078:	ands	x6, x2, #0x7
  44f07c:	b.eq	44f1d8 <_obstack_memory_used@@Base+0x10f78>  // b.none
  44f080:	mov	x6, #0x0                   	// #0
  44f084:	and	x10, x10, #0xc00000
  44f088:	orr	w0, w0, #0x10
  44f08c:	cmp	x10, #0x400, lsl #12
  44f090:	b.eq	44f324 <_obstack_memory_used@@Base+0x110c4>  // b.none
  44f094:	cmp	x10, #0x800, lsl #12
  44f098:	b.eq	44f338 <_obstack_memory_used@@Base+0x110d8>  // b.none
  44f09c:	cbz	x10, 44f2a0 <_obstack_memory_used@@Base+0x11040>
  44f0a0:	tbnz	x6, #51, 44f2b8 <_obstack_memory_used@@Base+0x11058>
  44f0a4:	orr	w0, w0, #0x8
  44f0a8:	extr	x2, x6, x2, #3
  44f0ac:	mov	w1, #0x0                   	// #0
  44f0b0:	ubfx	x6, x6, #3, #48
  44f0b4:	b	44f128 <_obstack_memory_used@@Base+0x10ec8>
  44f0b8:	clz	x7, x2
  44f0bc:	add	x4, x7, #0x31
  44f0c0:	add	x0, x7, #0x40
  44f0c4:	cmp	x4, #0x3c
  44f0c8:	b.le	44ee94 <_obstack_memory_used@@Base+0x10c34>
  44f0cc:	sub	w4, w4, #0x3d
  44f0d0:	lsl	x4, x2, x4
  44f0d4:	mov	x2, #0x0                   	// #0
  44f0d8:	b	44eeb0 <_obstack_memory_used@@Base+0x10c50>
  44f0dc:	clz	x3, x5
  44f0e0:	add	x9, x3, #0x31
  44f0e4:	add	x3, x3, #0x40
  44f0e8:	cmp	x9, #0x3c
  44f0ec:	b.le	44ee50 <_obstack_memory_used@@Base+0x10bf0>
  44f0f0:	sub	w6, w9, #0x3d
  44f0f4:	lsl	x6, x5, x6
  44f0f8:	mov	x5, #0x0                   	// #0
  44f0fc:	b	44ee6c <_obstack_memory_used@@Base+0x10c0c>
  44f100:	and	x2, x10, #0xc00000
  44f104:	cmp	x2, #0x400, lsl #12
  44f108:	b.eq	44f2cc <_obstack_memory_used@@Base+0x1106c>  // b.none
  44f10c:	cmp	x2, #0x800, lsl #12
  44f110:	b.eq	44f214 <_obstack_memory_used@@Base+0x10fb4>  // b.none
  44f114:	cbz	x2, 44f1f0 <_obstack_memory_used@@Base+0x10f90>
  44f118:	mov	x6, #0xffffffffffff        	// #281474976710655
  44f11c:	mov	x2, #0xffffffffffffffff    	// #-1
  44f120:	mov	w3, #0x14                  	// #20
  44f124:	orr	w0, w0, w3
  44f128:	mov	x5, #0x0                   	// #0
  44f12c:	orr	w1, w1, w11, lsl #15
  44f130:	bfxil	x5, x6, #0, #48
  44f134:	fmov	d0, x2
  44f138:	bfi	x5, x1, #48, #16
  44f13c:	fmov	v0.d[1], x5
  44f140:	b	44ee04 <_obstack_memory_used@@Base+0x10ba4>
  44f144:	orr	x6, x6, #0x800000000000
  44f148:	mov	w11, w8
  44f14c:	and	x6, x6, #0xffffffffffff
  44f150:	mov	x2, x5
  44f154:	mov	w1, #0x7fff                	// #32767
  44f158:	b	44ebe4 <_obstack_memory_used@@Base+0x10984>
  44f15c:	mov	w11, w8
  44f160:	mov	w1, #0x7fff                	// #32767
  44f164:	mov	x6, #0x0                   	// #0
  44f168:	mov	x2, #0x0                   	// #0
  44f16c:	b	44ebe4 <_obstack_memory_used@@Base+0x10984>
  44f170:	cmp	x18, #0x0
  44f174:	ccmp	x9, x4, #0x0, eq  // eq = none
  44f178:	b.ne	44ece8 <_obstack_memory_used@@Base+0x10a88>  // b.any
  44f17c:	b	44f000 <_obstack_memory_used@@Base+0x10da0>
  44f180:	cmp	x4, #0x0
  44f184:	cset	w2, ne  // ne = any
  44f188:	cmp	w2, #0x0
  44f18c:	ccmp	x1, x16, #0x0, ne  // ne = any
  44f190:	b.ne	44edd0 <_obstack_memory_used@@Base+0x10b70>  // b.any
  44f194:	b	44eda4 <_obstack_memory_used@@Base+0x10b44>
  44f198:	ccmp	x1, x3, #0x0, eq  // eq = none
  44f19c:	b.ls	44ece8 <_obstack_memory_used@@Base+0x10a88>  // b.plast
  44f1a0:	b	44f008 <_obstack_memory_used@@Base+0x10da8>
  44f1a4:	mov	w2, #0x40                  	// #64
  44f1a8:	sub	w2, w2, w1
  44f1ac:	lsr	x4, x5, x1
  44f1b0:	lsl	x5, x5, x2
  44f1b4:	cmp	x5, #0x0
  44f1b8:	cset	x3, ne  // ne = any
  44f1bc:	lsl	x2, x6, x2
  44f1c0:	orr	x2, x2, x4
  44f1c4:	lsr	x6, x6, x1
  44f1c8:	orr	x2, x2, x3
  44f1cc:	tst	x2, #0x7
  44f1d0:	b.ne	44f084 <_obstack_memory_used@@Base+0x10e24>  // b.any
  44f1d4:	tbnz	x6, #51, 44f344 <_obstack_memory_used@@Base+0x110e4>
  44f1d8:	mov	w1, #0x0                   	// #0
  44f1dc:	extr	x2, x6, x2, #3
  44f1e0:	ubfx	x6, x6, #3, #48
  44f1e4:	tbz	w10, #11, 44ebe4 <_obstack_memory_used@@Base+0x10984>
  44f1e8:	orr	w0, w0, #0x8
  44f1ec:	b	44f128 <_obstack_memory_used@@Base+0x10ec8>
  44f1f0:	mov	w1, #0x7fff                	// #32767
  44f1f4:	mov	x6, #0x0                   	// #0
  44f1f8:	b	44f120 <_obstack_memory_used@@Base+0x10ec0>
  44f1fc:	mov	w11, #0x0                   	// #0
  44f200:	cbz	x12, 44eb4c <_obstack_memory_used@@Base+0x108ec>
  44f204:	adds	x5, x5, #0x8
  44f208:	mov	w11, #0x1                   	// #1
  44f20c:	cinc	x6, x6, cs  // cs = hs, nlast
  44f210:	b	44eb4c <_obstack_memory_used@@Base+0x108ec>
  44f214:	cmp	x12, #0x0
  44f218:	mov	w2, #0x7fff                	// #32767
  44f21c:	mov	x6, #0xffffffffffff        	// #281474976710655
  44f220:	csel	w1, w1, w2, eq  // eq = none
  44f224:	csel	x6, x6, xzr, eq  // eq = none
  44f228:	csetm	x2, eq  // eq = none
  44f22c:	b	44f120 <_obstack_memory_used@@Base+0x10ec0>
  44f230:	sub	x1, x1, #0x2
  44f234:	add	x4, x4, x9
  44f238:	b	44ec8c <_obstack_memory_used@@Base+0x10a2c>
  44f23c:	sub	x5, x5, #0x2
  44f240:	add	x3, x3, x9
  44f244:	b	44ec5c <_obstack_memory_used@@Base+0x109fc>
  44f248:	cmp	x3, #0x0
  44f24c:	mov	x5, #0xffffffffffffffff    	// #-1
  44f250:	b.gt	44ef88 <_obstack_memory_used@@Base+0x10d28>
  44f254:	mov	x1, #0x1                   	// #1
  44f258:	sub	x1, x1, x3
  44f25c:	cmp	x1, #0x74
  44f260:	b.le	44f044 <_obstack_memory_used@@Base+0x10de4>
  44f264:	and	x10, x10, #0xc00000
  44f268:	orr	w0, w0, #0x10
  44f26c:	cmp	x10, #0x400, lsl #12
  44f270:	b.eq	44f318 <_obstack_memory_used@@Base+0x110b8>  // b.none
  44f274:	cmp	x10, #0x800, lsl #12
  44f278:	csel	x2, x12, xzr, eq  // eq = none
  44f27c:	b	44f034 <_obstack_memory_used@@Base+0x10dd4>
  44f280:	lsl	x8, x13, #1
  44f284:	sub	x5, x5, #0x2
  44f288:	cmp	x13, x8
  44f28c:	cinc	x1, x9, hi  // hi = pmore
  44f290:	cmp	x4, x8
  44f294:	add	x1, x2, x1
  44f298:	cset	w2, ne  // ne = any
  44f29c:	b	44edd0 <_obstack_memory_used@@Base+0x10b70>
  44f2a0:	and	x1, x2, #0xf
  44f2a4:	cmp	x1, #0x4
  44f2a8:	b.eq	44f2b4 <_obstack_memory_used@@Base+0x11054>  // b.none
  44f2ac:	adds	x2, x2, #0x4
  44f2b0:	cinc	x6, x6, cs  // cs = hs, nlast
  44f2b4:	tbz	x6, #51, 44f0a4 <_obstack_memory_used@@Base+0x10e44>
  44f2b8:	orr	w0, w0, #0x8
  44f2bc:	mov	w1, #0x1                   	// #1
  44f2c0:	mov	x6, #0x0                   	// #0
  44f2c4:	mov	x2, #0x0                   	// #0
  44f2c8:	b	44f128 <_obstack_memory_used@@Base+0x10ec8>
  44f2cc:	cmp	x12, #0x0
  44f2d0:	mov	w2, #0x7fff                	// #32767
  44f2d4:	mov	x6, #0xffffffffffff        	// #281474976710655
  44f2d8:	csel	w1, w1, w2, ne  // ne = any
  44f2dc:	csel	x6, x6, xzr, ne  // ne = any
  44f2e0:	csetm	x2, ne  // ne = any
  44f2e4:	b	44f120 <_obstack_memory_used@@Base+0x10ec0>
  44f2e8:	mov	w11, #0x1                   	// #1
  44f2ec:	cbnz	x12, 44eb4c <_obstack_memory_used@@Base+0x108ec>
  44f2f0:	adds	x5, x5, #0x8
  44f2f4:	mov	w11, #0x0                   	// #0
  44f2f8:	cinc	x6, x6, cs  // cs = hs, nlast
  44f2fc:	b	44eb4c <_obstack_memory_used@@Base+0x108ec>
  44f300:	sub	x5, x5, #0x2
  44f304:	add	x1, x1, x9
  44f308:	b	44ed2c <_obstack_memory_used@@Base+0x10acc>
  44f30c:	sub	x2, x2, #0x2
  44f310:	add	x1, x1, x9
  44f314:	b	44ed5c <_obstack_memory_used@@Base+0x10afc>
  44f318:	mov	x2, #0x1                   	// #1
  44f31c:	sub	x2, x2, x12
  44f320:	b	44f034 <_obstack_memory_used@@Base+0x10dd4>
  44f324:	cbnz	x12, 44f2b4 <_obstack_memory_used@@Base+0x11054>
  44f328:	adds	x2, x2, #0x8
  44f32c:	cinc	x6, x6, cs  // cs = hs, nlast
  44f330:	tbnz	x6, #51, 44f2b8 <_obstack_memory_used@@Base+0x11058>
  44f334:	b	44f0a4 <_obstack_memory_used@@Base+0x10e44>
  44f338:	cbnz	x12, 44f328 <_obstack_memory_used@@Base+0x110c8>
  44f33c:	tbnz	x6, #51, 44f2b8 <_obstack_memory_used@@Base+0x11058>
  44f340:	b	44f0a4 <_obstack_memory_used@@Base+0x10e44>
  44f344:	orr	w0, w0, #0x10
  44f348:	b	44f2b8 <_obstack_memory_used@@Base+0x11058>
  44f34c:	nop
  44f350:	stp	x29, x30, [sp, #-48]!
  44f354:	mov	x29, sp
  44f358:	str	q0, [sp, #16]
  44f35c:	str	q1, [sp, #32]
  44f360:	ldp	x6, x1, [sp, #16]
  44f364:	ldp	x7, x0, [sp, #32]
  44f368:	mrs	x2, fpcr
  44f36c:	ubfx	x4, x1, #48, #15
  44f370:	lsr	x2, x1, #63
  44f374:	lsr	x3, x0, #63
  44f378:	ubfx	x9, x0, #0, #48
  44f37c:	mov	x5, #0x7fff                	// #32767
  44f380:	mov	x10, x6
  44f384:	cmp	x4, x5
  44f388:	and	w2, w2, #0xff
  44f38c:	ubfx	x1, x1, #0, #48
  44f390:	and	w3, w3, #0xff
  44f394:	ubfx	x0, x0, #48, #15
  44f398:	b.eq	44f3cc <_obstack_memory_used@@Base+0x1116c>  // b.none
  44f39c:	cmp	x0, x5
  44f3a0:	b.eq	44f3b8 <_obstack_memory_used@@Base+0x11158>  // b.none
  44f3a4:	cmp	x4, x0
  44f3a8:	mov	w0, #0x1                   	// #1
  44f3ac:	b.eq	44f3e4 <_obstack_memory_used@@Base+0x11184>  // b.none
  44f3b0:	ldp	x29, x30, [sp], #48
  44f3b4:	ret
  44f3b8:	orr	x8, x9, x7
  44f3bc:	cbnz	x8, 44f448 <_obstack_memory_used@@Base+0x111e8>
  44f3c0:	mov	w0, #0x1                   	// #1
  44f3c4:	ldp	x29, x30, [sp], #48
  44f3c8:	ret
  44f3cc:	orr	x5, x1, x6
  44f3d0:	cbnz	x5, 44f418 <_obstack_memory_used@@Base+0x111b8>
  44f3d4:	cmp	x0, x4
  44f3d8:	b.ne	44f3c0 <_obstack_memory_used@@Base+0x11160>  // b.any
  44f3dc:	orr	x8, x9, x7
  44f3e0:	cbnz	x8, 44f448 <_obstack_memory_used@@Base+0x111e8>
  44f3e4:	cmp	x1, x9
  44f3e8:	mov	w0, #0x1                   	// #1
  44f3ec:	ccmp	x6, x7, #0x0, eq  // eq = none
  44f3f0:	b.ne	44f3b0 <_obstack_memory_used@@Base+0x11150>  // b.any
  44f3f4:	cmp	w2, w3
  44f3f8:	mov	w0, #0x0                   	// #0
  44f3fc:	b.eq	44f3b0 <_obstack_memory_used@@Base+0x11150>  // b.none
  44f400:	mov	w0, #0x1                   	// #1
  44f404:	cbnz	x4, 44f3b0 <_obstack_memory_used@@Base+0x11150>
  44f408:	orr	x1, x1, x10
  44f40c:	cmp	x1, #0x0
  44f410:	cset	w0, ne  // ne = any
  44f414:	b	44f3b0 <_obstack_memory_used@@Base+0x11150>
  44f418:	tst	x1, #0x800000000000
  44f41c:	b.ne	44f434 <_obstack_memory_used@@Base+0x111d4>  // b.any
  44f420:	mov	w0, #0x1                   	// #1
  44f424:	bl	44ffa8 <_obstack_memory_used@@Base+0x11d48>
  44f428:	mov	w0, #0x1                   	// #1
  44f42c:	ldp	x29, x30, [sp], #48
  44f430:	ret
  44f434:	cmp	x0, x4
  44f438:	mov	w0, #0x1                   	// #1
  44f43c:	b.ne	44f3b0 <_obstack_memory_used@@Base+0x11150>  // b.any
  44f440:	orr	x8, x9, x7
  44f444:	cbz	x8, 44f3b0 <_obstack_memory_used@@Base+0x11150>
  44f448:	tst	x9, #0x800000000000
  44f44c:	b.eq	44f420 <_obstack_memory_used@@Base+0x111c0>  // b.none
  44f450:	b	44f3c0 <_obstack_memory_used@@Base+0x11160>
  44f454:	nop
  44f458:	stp	x29, x30, [sp, #-48]!
  44f45c:	mov	x29, sp
  44f460:	str	q0, [sp, #16]
  44f464:	str	q1, [sp, #32]
  44f468:	ldp	x8, x1, [sp, #16]
  44f46c:	ldp	x9, x0, [sp, #32]
  44f470:	mrs	x2, fpcr
  44f474:	ubfx	x4, x1, #48, #15
  44f478:	ubfx	x10, x1, #0, #48
  44f47c:	lsr	x2, x1, #63
  44f480:	mov	x5, #0x7fff                	// #32767
  44f484:	mov	x6, x8
  44f488:	cmp	x4, x5
  44f48c:	ubfx	x11, x0, #0, #48
  44f490:	ubfx	x7, x0, #48, #15
  44f494:	lsr	x1, x0, #63
  44f498:	mov	x3, x9
  44f49c:	b.eq	44f4d4 <_obstack_memory_used@@Base+0x11274>  // b.none
  44f4a0:	cmp	x7, x5
  44f4a4:	b.eq	44f4e4 <_obstack_memory_used@@Base+0x11284>  // b.none
  44f4a8:	cbnz	x4, 44f510 <_obstack_memory_used@@Base+0x112b0>
  44f4ac:	orr	x6, x10, x8
  44f4b0:	cmp	x6, #0x0
  44f4b4:	cset	w0, eq  // eq = none
  44f4b8:	cbnz	x7, 44f4fc <_obstack_memory_used@@Base+0x1129c>
  44f4bc:	orr	x3, x11, x9
  44f4c0:	cbnz	x3, 44f4fc <_obstack_memory_used@@Base+0x1129c>
  44f4c4:	mov	w0, #0x0                   	// #0
  44f4c8:	cbnz	x6, 44f524 <_obstack_memory_used@@Base+0x112c4>
  44f4cc:	ldp	x29, x30, [sp], #48
  44f4d0:	ret
  44f4d4:	orr	x0, x10, x8
  44f4d8:	cbnz	x0, 44f538 <_obstack_memory_used@@Base+0x112d8>
  44f4dc:	cmp	x7, x4
  44f4e0:	b.ne	44f510 <_obstack_memory_used@@Base+0x112b0>  // b.any
  44f4e4:	orr	x3, x11, x3
  44f4e8:	cbnz	x3, 44f538 <_obstack_memory_used@@Base+0x112d8>
  44f4ec:	cbnz	x4, 44f51c <_obstack_memory_used@@Base+0x112bc>
  44f4f0:	orr	x6, x10, x6
  44f4f4:	cmp	x6, #0x0
  44f4f8:	cset	w0, eq  // eq = none
  44f4fc:	cbz	w0, 44f51c <_obstack_memory_used@@Base+0x112bc>
  44f500:	cmp	x1, #0x0
  44f504:	csinv	w0, w0, wzr, ne  // ne = any
  44f508:	ldp	x29, x30, [sp], #48
  44f50c:	ret
  44f510:	cbnz	x7, 44f51c <_obstack_memory_used@@Base+0x112bc>
  44f514:	orr	x3, x11, x3
  44f518:	cbz	x3, 44f524 <_obstack_memory_used@@Base+0x112c4>
  44f51c:	cmp	x2, x1
  44f520:	b.eq	44f54c <_obstack_memory_used@@Base+0x112ec>  // b.none
  44f524:	cmp	x2, #0x0
  44f528:	mov	w0, #0xffffffff            	// #-1
  44f52c:	cneg	w0, w0, eq  // eq = none
  44f530:	ldp	x29, x30, [sp], #48
  44f534:	ret
  44f538:	mov	w0, #0x1                   	// #1
  44f53c:	bl	44ffa8 <_obstack_memory_used@@Base+0x11d48>
  44f540:	mov	w0, #0x2                   	// #2
  44f544:	ldp	x29, x30, [sp], #48
  44f548:	ret
  44f54c:	cmp	x4, x7
  44f550:	b.gt	44f524 <_obstack_memory_used@@Base+0x112c4>
  44f554:	b.lt	44f588 <_obstack_memory_used@@Base+0x11328>  // b.tstop
  44f558:	cmp	x10, x11
  44f55c:	b.hi	44f524 <_obstack_memory_used@@Base+0x112c4>  // b.pmore
  44f560:	cset	w0, eq  // eq = none
  44f564:	cmp	w0, #0x0
  44f568:	ccmp	x8, x9, #0x0, ne  // ne = any
  44f56c:	b.hi	44f524 <_obstack_memory_used@@Base+0x112c4>  // b.pmore
  44f570:	cmp	x10, x11
  44f574:	b.cc	44f588 <_obstack_memory_used@@Base+0x11328>  // b.lo, b.ul, b.last
  44f578:	cmp	w0, #0x0
  44f57c:	mov	w0, #0x0                   	// #0
  44f580:	ccmp	x8, x9, #0x2, ne  // ne = any
  44f584:	b.cs	44f4cc <_obstack_memory_used@@Base+0x1126c>  // b.hs, b.nlast
  44f588:	cmp	x2, #0x0
  44f58c:	mov	w0, #0x1                   	// #1
  44f590:	cneg	w0, w0, eq  // eq = none
  44f594:	b	44f4cc <_obstack_memory_used@@Base+0x1126c>
  44f598:	stp	x29, x30, [sp, #-80]!
  44f59c:	mov	x29, sp
  44f5a0:	str	q0, [sp, #48]
  44f5a4:	str	q1, [sp, #64]
  44f5a8:	ldp	x1, x0, [sp, #48]
  44f5ac:	ldp	x6, x2, [sp, #64]
  44f5b0:	mrs	x11, fpcr
  44f5b4:	lsr	x3, x0, #63
  44f5b8:	ubfx	x7, x0, #0, #48
  44f5bc:	and	w12, w3, #0xff
  44f5c0:	mov	x14, x3
  44f5c4:	ubfx	x3, x0, #48, #15
  44f5c8:	cbz	w3, 44f970 <_obstack_memory_used@@Base+0x11710>
  44f5cc:	mov	w4, #0x7fff                	// #32767
  44f5d0:	cmp	w3, w4
  44f5d4:	b.eq	44fa14 <_obstack_memory_used@@Base+0x117b4>  // b.none
  44f5d8:	and	x3, x3, #0xffff
  44f5dc:	extr	x4, x7, x1, #61
  44f5e0:	mov	x18, #0xffffffffffffc001    	// #-16383
  44f5e4:	orr	x7, x4, #0x8000000000000
  44f5e8:	add	x3, x3, x18
  44f5ec:	lsl	x5, x1, #3
  44f5f0:	mov	x16, #0x0                   	// #0
  44f5f4:	mov	x1, #0x0                   	// #0
  44f5f8:	mov	w0, #0x0                   	// #0
  44f5fc:	lsr	x8, x2, #63
  44f600:	ubfx	x4, x2, #0, #48
  44f604:	and	w15, w8, #0xff
  44f608:	mov	x13, x8
  44f60c:	ubfx	x9, x2, #48, #15
  44f610:	cbz	w9, 44f9d0 <_obstack_memory_used@@Base+0x11770>
  44f614:	mov	w8, #0x7fff                	// #32767
  44f618:	cmp	w9, w8
  44f61c:	b.eq	44f6a0 <_obstack_memory_used@@Base+0x11440>  // b.none
  44f620:	and	x9, x9, #0xffff
  44f624:	mov	x17, #0xffffffffffffc001    	// #-16383
  44f628:	add	x9, x9, x17
  44f62c:	extr	x2, x4, x6, #61
  44f630:	add	x9, x9, x3
  44f634:	lsl	x6, x6, #3
  44f638:	orr	x4, x2, #0x8000000000000
  44f63c:	mov	x2, #0x0                   	// #0
  44f640:	eor	w8, w12, w15
  44f644:	cmp	x1, #0xa
  44f648:	and	w10, w8, #0xff
  44f64c:	add	x3, x9, #0x1
  44f650:	and	x8, x8, #0xff
  44f654:	b.le	44f6d8 <_obstack_memory_used@@Base+0x11478>
  44f658:	cmp	x1, #0xb
  44f65c:	b.eq	44fd70 <_obstack_memory_used@@Base+0x11b10>  // b.none
  44f660:	mov	w15, w12
  44f664:	mov	x13, x14
  44f668:	mov	w10, w15
  44f66c:	cmp	x16, #0x2
  44f670:	b.eq	44fa34 <_obstack_memory_used@@Base+0x117d4>  // b.none
  44f674:	mov	x4, x7
  44f678:	mov	x6, x5
  44f67c:	mov	x2, x16
  44f680:	mov	x8, x13
  44f684:	cmp	x2, #0x3
  44f688:	b.ne	44f6f4 <_obstack_memory_used@@Base+0x11494>  // b.any
  44f68c:	orr	x4, x4, #0x800000000000
  44f690:	mov	x5, x6
  44f694:	and	x4, x4, #0xffffffffffff
  44f698:	mov	w1, #0x7fff                	// #32767
  44f69c:	b	44f708 <_obstack_memory_used@@Base+0x114a8>
  44f6a0:	mov	x8, #0x7fff                	// #32767
  44f6a4:	orr	x2, x4, x6
  44f6a8:	add	x9, x3, x8
  44f6ac:	cbnz	x2, 44f72c <_obstack_memory_used@@Base+0x114cc>
  44f6b0:	eor	w8, w12, w15
  44f6b4:	orr	x1, x1, #0x2
  44f6b8:	and	w10, w8, #0xff
  44f6bc:	cmp	x1, #0xa
  44f6c0:	add	x3, x3, #0x8, lsl #12
  44f6c4:	and	x8, x8, #0xff
  44f6c8:	mov	x6, #0x0                   	// #0
  44f6cc:	b.gt	44fce4 <_obstack_memory_used@@Base+0x11a84>
  44f6d0:	mov	x4, #0x0                   	// #0
  44f6d4:	mov	x2, #0x2                   	// #2
  44f6d8:	cmp	x1, #0x2
  44f6dc:	b.gt	44f754 <_obstack_memory_used@@Base+0x114f4>
  44f6e0:	sub	x1, x1, #0x1
  44f6e4:	cmp	x1, #0x1
  44f6e8:	b.hi	44f790 <_obstack_memory_used@@Base+0x11530>  // b.pmore
  44f6ec:	cmp	x2, #0x2
  44f6f0:	b.eq	44fa34 <_obstack_memory_used@@Base+0x117d4>  // b.none
  44f6f4:	cmp	x2, #0x1
  44f6f8:	b.ne	44f8f0 <_obstack_memory_used@@Base+0x11690>  // b.any
  44f6fc:	mov	w1, #0x0                   	// #0
  44f700:	mov	x4, #0x0                   	// #0
  44f704:	mov	x5, #0x0                   	// #0
  44f708:	mov	x3, #0x0                   	// #0
  44f70c:	orr	w1, w1, w10, lsl #15
  44f710:	bfxil	x3, x4, #0, #48
  44f714:	fmov	d0, x5
  44f718:	bfi	x3, x1, #48, #16
  44f71c:	fmov	v0.d[1], x3
  44f720:	cbnz	w0, 44fb60 <_obstack_memory_used@@Base+0x11900>
  44f724:	ldp	x29, x30, [sp], #80
  44f728:	ret
  44f72c:	tst	x4, #0x800000000000
  44f730:	eor	w8, w12, w15
  44f734:	orr	x1, x1, #0x3
  44f738:	csinc	w0, w0, wzr, ne  // ne = any
  44f73c:	and	w10, w8, #0xff
  44f740:	add	x3, x3, #0x8, lsl #12
  44f744:	cmp	x1, #0xa
  44f748:	and	x8, x8, #0xff
  44f74c:	mov	x2, #0x3                   	// #3
  44f750:	b.gt	44fd64 <_obstack_memory_used@@Base+0x11b04>
  44f754:	mov	x12, #0x1                   	// #1
  44f758:	mov	x14, #0x530                 	// #1328
  44f75c:	lsl	x1, x12, x1
  44f760:	tst	x1, x14
  44f764:	b.ne	44f964 <_obstack_memory_used@@Base+0x11704>  // b.any
  44f768:	mov	x14, #0x240                 	// #576
  44f76c:	tst	x1, x14
  44f770:	b.ne	44f94c <_obstack_memory_used@@Base+0x116ec>  // b.any
  44f774:	mov	x12, #0x88                  	// #136
  44f778:	tst	x1, x12
  44f77c:	b.eq	44f790 <_obstack_memory_used@@Base+0x11530>  // b.none
  44f780:	mov	x7, x4
  44f784:	mov	x5, x6
  44f788:	mov	x16, x2
  44f78c:	b	44f668 <_obstack_memory_used@@Base+0x11408>
  44f790:	lsr	x13, x5, #32
  44f794:	and	x12, x6, #0xffffffff
  44f798:	and	x15, x5, #0xffffffff
  44f79c:	lsr	x6, x6, #32
  44f7a0:	and	x18, x4, #0xffffffff
  44f7a4:	lsr	x2, x4, #32
  44f7a8:	mul	x4, x13, x12
  44f7ac:	stp	x21, x22, [sp, #32]
  44f7b0:	lsr	x22, x7, #32
  44f7b4:	and	x5, x7, #0xffffffff
  44f7b8:	mul	x16, x12, x15
  44f7bc:	madd	x7, x6, x15, x4
  44f7c0:	stp	x19, x20, [sp, #16]
  44f7c4:	mul	x1, x13, x18
  44f7c8:	mul	x17, x15, x18
  44f7cc:	and	x30, x16, #0xffffffff
  44f7d0:	madd	x15, x2, x15, x1
  44f7d4:	add	x16, x7, x16, lsr #32
  44f7d8:	mul	x21, x22, x12
  44f7dc:	cmp	x4, x16
  44f7e0:	mul	x20, x22, x18
  44f7e4:	mov	x14, #0x100000000           	// #4294967296
  44f7e8:	mul	x19, x13, x6
  44f7ec:	add	x15, x15, x17, lsr #32
  44f7f0:	mul	x12, x12, x5
  44f7f4:	and	x17, x17, #0xffffffff
  44f7f8:	mul	x18, x5, x18
  44f7fc:	add	x4, x19, x14
  44f800:	madd	x7, x6, x5, x21
  44f804:	csel	x19, x4, x19, hi  // hi = pmore
  44f808:	madd	x5, x2, x5, x20
  44f80c:	cmp	x1, x15
  44f810:	mul	x13, x13, x2
  44f814:	add	x17, x17, x15, lsl #32
  44f818:	mul	x6, x6, x22
  44f81c:	add	x7, x7, x12, lsr #32
  44f820:	add	x5, x5, x18, lsr #32
  44f824:	add	x4, x13, x14
  44f828:	mul	x2, x2, x22
  44f82c:	csel	x13, x4, x13, hi  // hi = pmore
  44f830:	and	x1, x18, #0xffffffff
  44f834:	cmp	x21, x7
  44f838:	add	x4, x6, x14
  44f83c:	add	x30, x30, x16, lsl #32
  44f840:	csel	x6, x4, x6, hi  // hi = pmore
  44f844:	add	x13, x13, x15, lsr #32
  44f848:	cmp	x20, x5
  44f84c:	add	x1, x1, x5, lsl #32
  44f850:	add	x16, x17, x16, lsr #32
  44f854:	add	x14, x2, x14
  44f858:	csel	x2, x14, x2, hi  // hi = pmore
  44f85c:	add	x16, x19, x16
  44f860:	adds	x1, x1, x13
  44f864:	and	x12, x12, #0xffffffff
  44f868:	cset	x13, cs  // cs = hs, nlast
  44f86c:	cmp	x16, x17
  44f870:	cset	x4, cc  // cc = lo, ul, last
  44f874:	add	x12, x12, x7, lsl #32
  44f878:	adds	x1, x1, x4
  44f87c:	lsr	x5, x5, #32
  44f880:	cset	x4, cs  // cs = hs, nlast
  44f884:	cmp	x13, #0x0
  44f888:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  44f88c:	add	x7, x6, x7, lsr #32
  44f890:	cinc	x5, x5, ne  // ne = any
  44f894:	adds	x6, x16, x12
  44f898:	cset	x4, cs  // cs = hs, nlast
  44f89c:	adds	x1, x1, x7
  44f8a0:	cset	x7, cs  // cs = hs, nlast
  44f8a4:	adds	x4, x1, x4
  44f8a8:	cset	x1, cs  // cs = hs, nlast
  44f8ac:	cmp	x7, #0x0
  44f8b0:	orr	x30, x30, x6, lsl #13
  44f8b4:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  44f8b8:	cinc	x1, x2, ne  // ne = any
  44f8bc:	cmp	x30, #0x0
  44f8c0:	add	x1, x1, x5
  44f8c4:	cset	x2, ne  // ne = any
  44f8c8:	orr	x6, x2, x6, lsr #51
  44f8cc:	orr	x6, x6, x4, lsl #13
  44f8d0:	extr	x4, x1, x4, #51
  44f8d4:	tbz	x1, #39, 44fbe8 <_obstack_memory_used@@Base+0x11988>
  44f8d8:	ldp	x19, x20, [sp, #16]
  44f8dc:	and	x1, x6, #0x1
  44f8e0:	ldp	x21, x22, [sp, #32]
  44f8e4:	orr	x6, x1, x6, lsr #1
  44f8e8:	orr	x6, x6, x4, lsl #63
  44f8ec:	lsr	x4, x4, #1
  44f8f0:	mov	x1, #0x3fff                	// #16383
  44f8f4:	add	x2, x3, x1
  44f8f8:	cmp	x2, #0x0
  44f8fc:	b.le	44fa94 <_obstack_memory_used@@Base+0x11834>
  44f900:	tst	x6, #0x7
  44f904:	b.eq	44f924 <_obstack_memory_used@@Base+0x116c4>  // b.none
  44f908:	and	x1, x11, #0xc00000
  44f90c:	orr	w0, w0, #0x10
  44f910:	cmp	x1, #0x400, lsl #12
  44f914:	b.eq	44fcdc <_obstack_memory_used@@Base+0x11a7c>  // b.none
  44f918:	cmp	x1, #0x800, lsl #12
  44f91c:	b.eq	44fc84 <_obstack_memory_used@@Base+0x11a24>  // b.none
  44f920:	cbz	x1, 44fc6c <_obstack_memory_used@@Base+0x11a0c>
  44f924:	tbz	x4, #52, 44f930 <_obstack_memory_used@@Base+0x116d0>
  44f928:	and	x4, x4, #0xffefffffffffffff
  44f92c:	add	x2, x3, #0x4, lsl #12
  44f930:	mov	x1, #0x7ffe                	// #32766
  44f934:	cmp	x2, x1
  44f938:	b.gt	44fbbc <_obstack_memory_used@@Base+0x1195c>
  44f93c:	and	w1, w2, #0x7fff
  44f940:	extr	x5, x4, x6, #3
  44f944:	ubfx	x4, x4, #3, #48
  44f948:	b	44f708 <_obstack_memory_used@@Base+0x114a8>
  44f94c:	mov	w0, w12
  44f950:	mov	w10, #0x0                   	// #0
  44f954:	mov	x4, #0xffffffffffff        	// #281474976710655
  44f958:	mov	x5, #0xffffffffffffffff    	// #-1
  44f95c:	mov	w1, #0x7fff                	// #32767
  44f960:	b	44f708 <_obstack_memory_used@@Base+0x114a8>
  44f964:	mov	w15, w10
  44f968:	mov	x13, x8
  44f96c:	b	44f668 <_obstack_memory_used@@Base+0x11408>
  44f970:	orr	x5, x7, x1
  44f974:	cbz	x5, 44fa7c <_obstack_memory_used@@Base+0x1181c>
  44f978:	cbz	x7, 44fb98 <_obstack_memory_used@@Base+0x11938>
  44f97c:	clz	x0, x7
  44f980:	sub	x4, x0, #0xf
  44f984:	add	w5, w4, #0x3
  44f988:	mov	w3, #0x3d                  	// #61
  44f98c:	sub	w3, w3, w4
  44f990:	lsl	x4, x7, x5
  44f994:	lsr	x3, x1, x3
  44f998:	orr	x7, x3, x4
  44f99c:	lsl	x5, x1, x5
  44f9a0:	lsr	x8, x2, #63
  44f9a4:	mov	x3, #0xffffffffffffc011    	// #-16367
  44f9a8:	ubfx	x4, x2, #0, #48
  44f9ac:	sub	x3, x3, x0
  44f9b0:	and	w15, w8, #0xff
  44f9b4:	mov	x13, x8
  44f9b8:	ubfx	x9, x2, #48, #15
  44f9bc:	mov	x1, #0x0                   	// #0
  44f9c0:	mov	x16, #0x0                   	// #0
  44f9c4:	mov	w0, #0x0                   	// #0
  44f9c8:	cbnz	w9, 44f614 <_obstack_memory_used@@Base+0x113b4>
  44f9cc:	nop
  44f9d0:	orr	x2, x4, x6
  44f9d4:	cbz	x2, 44fa44 <_obstack_memory_used@@Base+0x117e4>
  44f9d8:	cbz	x4, 44fb74 <_obstack_memory_used@@Base+0x11914>
  44f9dc:	clz	x9, x4
  44f9e0:	sub	x2, x9, #0xf
  44f9e4:	add	w10, w2, #0x3
  44f9e8:	mov	w8, #0x3d                  	// #61
  44f9ec:	sub	w8, w8, w2
  44f9f0:	lsl	x2, x4, x10
  44f9f4:	lsr	x8, x6, x8
  44f9f8:	orr	x4, x8, x2
  44f9fc:	lsl	x6, x6, x10
  44fa00:	sub	x9, x3, x9
  44fa04:	mov	x10, #0xffffffffffffc011    	// #-16367
  44fa08:	mov	x2, #0x0                   	// #0
  44fa0c:	add	x9, x9, x10
  44fa10:	b	44f640 <_obstack_memory_used@@Base+0x113e0>
  44fa14:	orr	x5, x7, x1
  44fa18:	cbnz	x5, 44fa5c <_obstack_memory_used@@Base+0x117fc>
  44fa1c:	mov	x7, #0x0                   	// #0
  44fa20:	mov	x1, #0x8                   	// #8
  44fa24:	mov	x3, #0x7fff                	// #32767
  44fa28:	mov	x16, #0x2                   	// #2
  44fa2c:	mov	w0, #0x0                   	// #0
  44fa30:	b	44f5fc <_obstack_memory_used@@Base+0x1139c>
  44fa34:	mov	w1, #0x7fff                	// #32767
  44fa38:	mov	x4, #0x0                   	// #0
  44fa3c:	mov	x5, #0x0                   	// #0
  44fa40:	b	44f708 <_obstack_memory_used@@Base+0x114a8>
  44fa44:	orr	x1, x1, #0x1
  44fa48:	mov	x9, x3
  44fa4c:	mov	x4, #0x0                   	// #0
  44fa50:	mov	x6, #0x0                   	// #0
  44fa54:	mov	x2, #0x1                   	// #1
  44fa58:	b	44f640 <_obstack_memory_used@@Base+0x113e0>
  44fa5c:	lsr	x0, x7, #47
  44fa60:	mov	x5, x1
  44fa64:	eor	x0, x0, #0x1
  44fa68:	mov	x1, #0xc                   	// #12
  44fa6c:	and	w0, w0, #0x1
  44fa70:	mov	x3, #0x7fff                	// #32767
  44fa74:	mov	x16, #0x3                   	// #3
  44fa78:	b	44f5fc <_obstack_memory_used@@Base+0x1139c>
  44fa7c:	mov	x7, #0x0                   	// #0
  44fa80:	mov	x1, #0x4                   	// #4
  44fa84:	mov	x3, #0x0                   	// #0
  44fa88:	mov	x16, #0x1                   	// #1
  44fa8c:	mov	w0, #0x0                   	// #0
  44fa90:	b	44f5fc <_obstack_memory_used@@Base+0x1139c>
  44fa94:	mov	x1, #0x1                   	// #1
  44fa98:	sub	x2, x1, x2
  44fa9c:	cmp	x2, #0x74
  44faa0:	b.gt	44fb18 <_obstack_memory_used@@Base+0x118b8>
  44faa4:	cmp	x2, #0x3f
  44faa8:	b.le	44fbf8 <_obstack_memory_used@@Base+0x11998>
  44faac:	mov	w1, #0x80                  	// #128
  44fab0:	sub	w1, w1, w2
  44fab4:	cmp	x2, #0x40
  44fab8:	sub	w2, w2, #0x40
  44fabc:	lsl	x1, x4, x1
  44fac0:	orr	x1, x6, x1
  44fac4:	csel	x6, x1, x6, ne  // ne = any
  44fac8:	lsr	x2, x4, x2
  44facc:	cmp	x6, #0x0
  44fad0:	cset	x5, ne  // ne = any
  44fad4:	orr	x5, x5, x2
  44fad8:	ands	x2, x5, #0x7
  44fadc:	b.eq	44fc2c <_obstack_memory_used@@Base+0x119cc>  // b.none
  44fae0:	mov	x2, #0x0                   	// #0
  44fae4:	and	x11, x11, #0xc00000
  44fae8:	orr	w0, w0, #0x10
  44faec:	cmp	x11, #0x400, lsl #12
  44faf0:	b.eq	44fd3c <_obstack_memory_used@@Base+0x11adc>  // b.none
  44faf4:	cmp	x11, #0x800, lsl #12
  44faf8:	b.eq	44fd50 <_obstack_memory_used@@Base+0x11af0>  // b.none
  44fafc:	cbz	x11, 44fc94 <_obstack_memory_used@@Base+0x11a34>
  44fb00:	tbnz	x2, #51, 44fcac <_obstack_memory_used@@Base+0x11a4c>
  44fb04:	ubfx	x4, x2, #3, #48
  44fb08:	extr	x5, x2, x5, #3
  44fb0c:	orr	w0, w0, #0x8
  44fb10:	mov	w1, #0x0                   	// #0
  44fb14:	b	44fb48 <_obstack_memory_used@@Base+0x118e8>
  44fb18:	orr	x5, x6, x4
  44fb1c:	cbz	x5, 44fb3c <_obstack_memory_used@@Base+0x118dc>
  44fb20:	and	x11, x11, #0xc00000
  44fb24:	orr	w0, w0, #0x10
  44fb28:	cmp	x11, #0x400, lsl #12
  44fb2c:	sub	x5, x1, x8
  44fb30:	b.eq	44fb3c <_obstack_memory_used@@Base+0x118dc>  // b.none
  44fb34:	cmp	x11, #0x800, lsl #12
  44fb38:	csel	x5, x8, xzr, eq  // eq = none
  44fb3c:	orr	w0, w0, #0x8
  44fb40:	mov	w1, #0x0                   	// #0
  44fb44:	mov	x4, #0x0                   	// #0
  44fb48:	mov	x3, #0x0                   	// #0
  44fb4c:	fmov	d0, x5
  44fb50:	bfxil	x3, x4, #0, #48
  44fb54:	bfi	x3, x1, #48, #15
  44fb58:	bfi	x3, x10, #63, #1
  44fb5c:	fmov	v0.d[1], x3
  44fb60:	str	q0, [sp, #48]
  44fb64:	bl	44ffa8 <_obstack_memory_used@@Base+0x11d48>
  44fb68:	ldr	q0, [sp, #48]
  44fb6c:	ldp	x29, x30, [sp], #80
  44fb70:	ret
  44fb74:	clz	x9, x6
  44fb78:	add	x2, x9, #0x31
  44fb7c:	add	x9, x9, #0x40
  44fb80:	cmp	x2, #0x3c
  44fb84:	b.le	44f9e4 <_obstack_memory_used@@Base+0x11784>
  44fb88:	sub	w2, w2, #0x3d
  44fb8c:	lsl	x4, x6, x2
  44fb90:	mov	x6, #0x0                   	// #0
  44fb94:	b	44fa00 <_obstack_memory_used@@Base+0x117a0>
  44fb98:	clz	x3, x1
  44fb9c:	add	x4, x3, #0x31
  44fba0:	add	x0, x3, #0x40
  44fba4:	cmp	x4, #0x3c
  44fba8:	b.le	44f984 <_obstack_memory_used@@Base+0x11724>
  44fbac:	sub	w4, w4, #0x3d
  44fbb0:	mov	x5, #0x0                   	// #0
  44fbb4:	lsl	x7, x1, x4
  44fbb8:	b	44f9a0 <_obstack_memory_used@@Base+0x11740>
  44fbbc:	and	x5, x11, #0xc00000
  44fbc0:	cmp	x5, #0x400, lsl #12
  44fbc4:	b.eq	44fcc0 <_obstack_memory_used@@Base+0x11a60>  // b.none
  44fbc8:	cmp	x5, #0x800, lsl #12
  44fbcc:	b.eq	44fc50 <_obstack_memory_used@@Base+0x119f0>  // b.none
  44fbd0:	cbz	x5, 44fc44 <_obstack_memory_used@@Base+0x119e4>
  44fbd4:	mov	x4, #0xffffffffffff        	// #281474976710655
  44fbd8:	mov	x5, #0xffffffffffffffff    	// #-1
  44fbdc:	mov	w2, #0x14                  	// #20
  44fbe0:	orr	w0, w0, w2
  44fbe4:	b	44fb48 <_obstack_memory_used@@Base+0x118e8>
  44fbe8:	mov	x3, x9
  44fbec:	ldp	x19, x20, [sp, #16]
  44fbf0:	ldp	x21, x22, [sp, #32]
  44fbf4:	b	44f8f0 <_obstack_memory_used@@Base+0x11690>
  44fbf8:	mov	w1, #0x40                  	// #64
  44fbfc:	sub	w1, w1, w2
  44fc00:	lsr	x3, x6, x2
  44fc04:	lsl	x6, x6, x1
  44fc08:	cmp	x6, #0x0
  44fc0c:	lsl	x5, x4, x1
  44fc10:	cset	x1, ne  // ne = any
  44fc14:	orr	x5, x5, x3
  44fc18:	lsr	x2, x4, x2
  44fc1c:	orr	x5, x5, x1
  44fc20:	tst	x5, #0x7
  44fc24:	b.ne	44fae4 <_obstack_memory_used@@Base+0x11884>  // b.any
  44fc28:	tbnz	x2, #51, 44fd5c <_obstack_memory_used@@Base+0x11afc>
  44fc2c:	ubfx	x4, x2, #3, #48
  44fc30:	extr	x5, x2, x5, #3
  44fc34:	mov	w1, #0x0                   	// #0
  44fc38:	tbz	w11, #11, 44f708 <_obstack_memory_used@@Base+0x114a8>
  44fc3c:	orr	w0, w0, #0x8
  44fc40:	b	44fb48 <_obstack_memory_used@@Base+0x118e8>
  44fc44:	mov	w1, #0x7fff                	// #32767
  44fc48:	mov	x4, #0x0                   	// #0
  44fc4c:	b	44fbdc <_obstack_memory_used@@Base+0x1197c>
  44fc50:	cmp	x8, #0x0
  44fc54:	mov	w2, #0x7fff                	// #32767
  44fc58:	mov	x4, #0xffffffffffff        	// #281474976710655
  44fc5c:	csel	w1, w1, w2, eq  // eq = none
  44fc60:	csel	x4, x4, xzr, eq  // eq = none
  44fc64:	csetm	x5, eq  // eq = none
  44fc68:	b	44fbdc <_obstack_memory_used@@Base+0x1197c>
  44fc6c:	and	x1, x6, #0xf
  44fc70:	cmp	x1, #0x4
  44fc74:	b.eq	44f924 <_obstack_memory_used@@Base+0x116c4>  // b.none
  44fc78:	adds	x6, x6, #0x4
  44fc7c:	cinc	x4, x4, cs  // cs = hs, nlast
  44fc80:	b	44f924 <_obstack_memory_used@@Base+0x116c4>
  44fc84:	cbz	x8, 44f924 <_obstack_memory_used@@Base+0x116c4>
  44fc88:	adds	x6, x6, #0x8
  44fc8c:	cinc	x4, x4, cs  // cs = hs, nlast
  44fc90:	b	44f924 <_obstack_memory_used@@Base+0x116c4>
  44fc94:	and	x1, x5, #0xf
  44fc98:	cmp	x1, #0x4
  44fc9c:	b.eq	44fca8 <_obstack_memory_used@@Base+0x11a48>  // b.none
  44fca0:	adds	x5, x5, #0x4
  44fca4:	cinc	x2, x2, cs  // cs = hs, nlast
  44fca8:	tbz	x2, #51, 44fb04 <_obstack_memory_used@@Base+0x118a4>
  44fcac:	orr	w0, w0, #0x8
  44fcb0:	mov	w1, #0x1                   	// #1
  44fcb4:	mov	x4, #0x0                   	// #0
  44fcb8:	mov	x5, #0x0                   	// #0
  44fcbc:	b	44fb48 <_obstack_memory_used@@Base+0x118e8>
  44fcc0:	cmp	x8, #0x0
  44fcc4:	mov	w2, #0x7fff                	// #32767
  44fcc8:	mov	x4, #0xffffffffffff        	// #281474976710655
  44fccc:	csel	w1, w1, w2, ne  // ne = any
  44fcd0:	csel	x4, x4, xzr, ne  // ne = any
  44fcd4:	csetm	x5, ne  // ne = any
  44fcd8:	b	44fbdc <_obstack_memory_used@@Base+0x1197c>
  44fcdc:	cbnz	x8, 44f924 <_obstack_memory_used@@Base+0x116c4>
  44fce0:	b	44fc88 <_obstack_memory_used@@Base+0x11a28>
  44fce4:	mov	x4, #0x2                   	// #2
  44fce8:	cmp	x1, #0xf
  44fcec:	b.ne	44fd10 <_obstack_memory_used@@Base+0x11ab0>  // b.any
  44fcf0:	tbz	x7, #47, 44fd28 <_obstack_memory_used@@Base+0x11ac8>
  44fcf4:	tbnz	x2, #47, 44fd28 <_obstack_memory_used@@Base+0x11ac8>
  44fcf8:	orr	x4, x2, #0x800000000000
  44fcfc:	mov	w10, w15
  44fd00:	and	x4, x4, #0xffffffffffff
  44fd04:	mov	x5, x6
  44fd08:	mov	w1, #0x7fff                	// #32767
  44fd0c:	b	44f708 <_obstack_memory_used@@Base+0x114a8>
  44fd10:	cmp	x1, #0xb
  44fd14:	b.ne	44f660 <_obstack_memory_used@@Base+0x11400>  // b.any
  44fd18:	mov	x7, x2
  44fd1c:	mov	x5, x6
  44fd20:	mov	x16, x4
  44fd24:	b	44f668 <_obstack_memory_used@@Base+0x11408>
  44fd28:	orr	x4, x7, #0x800000000000
  44fd2c:	mov	w10, w12
  44fd30:	and	x4, x4, #0xffffffffffff
  44fd34:	mov	w1, #0x7fff                	// #32767
  44fd38:	b	44f708 <_obstack_memory_used@@Base+0x114a8>
  44fd3c:	cbnz	x8, 44fca8 <_obstack_memory_used@@Base+0x11a48>
  44fd40:	adds	x5, x5, #0x8
  44fd44:	cinc	x2, x2, cs  // cs = hs, nlast
  44fd48:	tbnz	x2, #51, 44fcac <_obstack_memory_used@@Base+0x11a4c>
  44fd4c:	b	44fb04 <_obstack_memory_used@@Base+0x118a4>
  44fd50:	cbnz	x8, 44fd40 <_obstack_memory_used@@Base+0x11ae0>
  44fd54:	tbnz	x2, #51, 44fcac <_obstack_memory_used@@Base+0x11a4c>
  44fd58:	b	44fb04 <_obstack_memory_used@@Base+0x118a4>
  44fd5c:	orr	w0, w0, #0x10
  44fd60:	b	44fcac <_obstack_memory_used@@Base+0x11a4c>
  44fd64:	mov	x2, x4
  44fd68:	mov	x4, #0x3                   	// #3
  44fd6c:	b	44fce8 <_obstack_memory_used@@Base+0x11a88>
  44fd70:	mov	w10, w15
  44fd74:	mov	x8, x13
  44fd78:	b	44f684 <_obstack_memory_used@@Base+0x11424>
  44fd7c:	nop
  44fd80:	cbz	w0, 44fdc4 <_obstack_memory_used@@Base+0x11b64>
  44fd84:	mov	w0, w0
  44fd88:	mov	w1, #0x403e                	// #16446
  44fd8c:	clz	x3, x0
  44fd90:	mov	w2, #0x402f                	// #16431
  44fd94:	sub	w1, w1, w3
  44fd98:	mov	x3, #0x0                   	// #0
  44fd9c:	sub	w2, w2, w1
  44fda0:	and	w1, w1, #0x7fff
  44fda4:	lsl	x0, x0, x2
  44fda8:	and	x0, x0, #0xffffffffffff
  44fdac:	mov	x2, #0x0                   	// #0
  44fdb0:	fmov	d0, x2
  44fdb4:	bfxil	x3, x0, #0, #48
  44fdb8:	bfi	x3, x1, #48, #16
  44fdbc:	fmov	v0.d[1], x3
  44fdc0:	ret
  44fdc4:	mov	x0, #0x0                   	// #0
  44fdc8:	mov	x3, #0x0                   	// #0
  44fdcc:	bfxil	x3, x0, #0, #48
  44fdd0:	mov	x2, #0x0                   	// #0
  44fdd4:	fmov	d0, x2
  44fdd8:	mov	w1, #0x0                   	// #0
  44fddc:	bfi	x3, x1, #48, #16
  44fde0:	fmov	v0.d[1], x3
  44fde4:	ret
  44fde8:	stp	x29, x30, [sp, #-48]!
  44fdec:	mov	x29, sp
  44fdf0:	str	x19, [sp, #16]
  44fdf4:	str	q0, [sp, #32]
  44fdf8:	ldr	x19, [sp, #32]
  44fdfc:	ldr	x1, [sp, #40]
  44fe00:	mrs	x0, fpcr
  44fe04:	ubfx	x3, x1, #48, #15
  44fe08:	mov	x2, x19
  44fe0c:	mov	x4, #0x3ffe                	// #16382
  44fe10:	ubfx	x19, x1, #0, #48
  44fe14:	cmp	x3, x4
  44fe18:	b.gt	44fe44 <_obstack_memory_used@@Base+0x11be4>
  44fe1c:	cbnz	x3, 44fe28 <_obstack_memory_used@@Base+0x11bc8>
  44fe20:	orr	x19, x2, x19
  44fe24:	cbz	x19, 44fe34 <_obstack_memory_used@@Base+0x11bd4>
  44fe28:	mov	w0, #0x10                  	// #16
  44fe2c:	mov	x19, #0x0                   	// #0
  44fe30:	bl	44ffa8 <_obstack_memory_used@@Base+0x11d48>
  44fe34:	mov	x0, x19
  44fe38:	ldr	x19, [sp, #16]
  44fe3c:	ldp	x29, x30, [sp], #48
  44fe40:	ret
  44fe44:	lsr	x0, x1, #63
  44fe48:	mov	x4, #0x403f                	// #16447
  44fe4c:	and	w0, w0, #0xff
  44fe50:	and	x5, x0, #0xff
  44fe54:	sub	x4, x4, x5
  44fe58:	cmp	x4, x3
  44fe5c:	b.le	44feb0 <_obstack_memory_used@@Base+0x11c50>
  44fe60:	cbnz	x5, 44fec4 <_obstack_memory_used@@Base+0x11c64>
  44fe64:	mov	x1, x3
  44fe68:	mov	x0, #0x406f                	// #16495
  44fe6c:	sub	x3, x0, x3
  44fe70:	orr	x4, x19, #0x1000000000000
  44fe74:	cmp	x3, #0x3f
  44fe78:	b.gt	44fed4 <_obstack_memory_used@@Base+0x11c74>
  44fe7c:	mov	w3, #0xffffbfd1            	// #-16431
  44fe80:	add	w3, w1, w3
  44fe84:	sub	w1, w0, w1
  44fe88:	lsl	x0, x2, x3
  44fe8c:	cmp	x0, #0x0
  44fe90:	lsr	x19, x2, x1
  44fe94:	cset	w0, ne  // ne = any
  44fe98:	lsl	x4, x4, x3
  44fe9c:	orr	x19, x19, x4
  44fea0:	cbz	w0, 44fe34 <_obstack_memory_used@@Base+0x11bd4>
  44fea4:	mov	w0, #0x10                  	// #16
  44fea8:	bl	44ffa8 <_obstack_memory_used@@Base+0x11d48>
  44feac:	b	44fe34 <_obstack_memory_used@@Base+0x11bd4>
  44feb0:	eor	w19, w0, #0x1
  44feb4:	mov	w0, #0x1                   	// #1
  44feb8:	sbfx	x19, x19, #0, #1
  44febc:	bl	44ffa8 <_obstack_memory_used@@Base+0x11d48>
  44fec0:	b	44fe34 <_obstack_memory_used@@Base+0x11bd4>
  44fec4:	mov	w0, #0x1                   	// #1
  44fec8:	mov	x19, #0x0                   	// #0
  44fecc:	bl	44ffa8 <_obstack_memory_used@@Base+0x11d48>
  44fed0:	b	44fe34 <_obstack_memory_used@@Base+0x11bd4>
  44fed4:	mov	w0, #0xffffc011            	// #-16367
  44fed8:	add	w5, w1, w0
  44fedc:	mov	w0, #0x402f                	// #16431
  44fee0:	cmp	x3, #0x40
  44fee4:	sub	w1, w0, w1
  44fee8:	lsl	x0, x4, x5
  44feec:	orr	x0, x2, x0
  44fef0:	csel	x2, x0, x2, ne  // ne = any
  44fef4:	lsr	x19, x4, x1
  44fef8:	cmp	x2, #0x0
  44fefc:	cset	w0, ne  // ne = any
  44ff00:	b	44fea0 <_obstack_memory_used@@Base+0x11c40>
  44ff04:	nop
  44ff08:	cbz	x0, 44ff5c <_obstack_memory_used@@Base+0x11cfc>
  44ff0c:	clz	x2, x0
  44ff10:	mov	w1, #0x403e                	// #16446
  44ff14:	sub	w1, w1, w2
  44ff18:	mov	x2, #0x406f                	// #16495
  44ff1c:	and	w4, w1, #0x7fff
  44ff20:	sub	x3, x2, w1, sxtw
  44ff24:	cmp	x3, #0x3f
  44ff28:	b.gt	44ff7c <_obstack_memory_used@@Base+0x11d1c>
  44ff2c:	sub	w2, w2, w1
  44ff30:	mov	w3, #0xffffbfd1            	// #-16431
  44ff34:	add	w1, w1, w3
  44ff38:	mov	x3, #0x0                   	// #0
  44ff3c:	lsr	x1, x0, x1
  44ff40:	and	x1, x1, #0xffffffffffff
  44ff44:	lsl	x0, x0, x2
  44ff48:	fmov	d0, x0
  44ff4c:	bfxil	x3, x1, #0, #48
  44ff50:	bfi	x3, x4, #48, #16
  44ff54:	fmov	v0.d[1], x3
  44ff58:	ret
  44ff5c:	mov	x1, #0x0                   	// #0
  44ff60:	mov	x3, #0x0                   	// #0
  44ff64:	bfxil	x3, x1, #0, #48
  44ff68:	fmov	d0, x0
  44ff6c:	mov	w4, #0x0                   	// #0
  44ff70:	bfi	x3, x4, #48, #16
  44ff74:	fmov	v0.d[1], x3
  44ff78:	ret
  44ff7c:	mov	w2, #0x402f                	// #16431
  44ff80:	sub	w1, w2, w1
  44ff84:	mov	x3, #0x0                   	// #0
  44ff88:	lsl	x1, x0, x1
  44ff8c:	and	x1, x1, #0xffffffffffff
  44ff90:	mov	x0, #0x0                   	// #0
  44ff94:	fmov	d0, x0
  44ff98:	bfxil	x3, x1, #0, #48
  44ff9c:	bfi	x3, x4, #48, #16
  44ffa0:	fmov	v0.d[1], x3
  44ffa4:	ret
  44ffa8:	tbz	w0, #0, 44ffb8 <_obstack_memory_used@@Base+0x11d58>
  44ffac:	movi	v1.2s, #0x0
  44ffb0:	fdiv	s0, s1, s1
  44ffb4:	mrs	x1, fpsr
  44ffb8:	tbz	w0, #1, 44ffcc <_obstack_memory_used@@Base+0x11d6c>
  44ffbc:	fmov	s1, #1.000000000000000000e+00
  44ffc0:	movi	v2.2s, #0x0
  44ffc4:	fdiv	s0, s1, s2
  44ffc8:	mrs	x1, fpsr
  44ffcc:	tbz	w0, #2, 44ffec <_obstack_memory_used@@Base+0x11d8c>
  44ffd0:	mov	w2, #0xc5ae                	// #50606
  44ffd4:	mov	w1, #0x7f7fffff            	// #2139095039
  44ffd8:	movk	w2, #0x749d, lsl #16
  44ffdc:	fmov	s1, w1
  44ffe0:	fmov	s2, w2
  44ffe4:	fadd	s0, s1, s2
  44ffe8:	mrs	x1, fpsr
  44ffec:	tbz	w0, #3, 44fffc <_obstack_memory_used@@Base+0x11d9c>
  44fff0:	movi	v1.2s, #0x80, lsl #16
  44fff4:	fmul	s0, s1, s1
  44fff8:	mrs	x1, fpsr
  44fffc:	tbz	w0, #4, 450014 <_obstack_memory_used@@Base+0x11db4>
  450000:	mov	w0, #0x7f7fffff            	// #2139095039
  450004:	fmov	s2, #1.000000000000000000e+00
  450008:	fmov	s1, w0
  45000c:	fsub	s0, s1, s2
  450010:	mrs	x0, fpsr
  450014:	ret
  450018:	stp	x29, x30, [sp, #-64]!
  45001c:	mov	x29, sp
  450020:	stp	x19, x20, [sp, #16]
  450024:	adrp	x20, 46b000 <_obstack_memory_used@@Base+0x2cda0>
  450028:	add	x20, x20, #0xde0
  45002c:	stp	x21, x22, [sp, #32]
  450030:	adrp	x21, 46b000 <_obstack_memory_used@@Base+0x2cda0>
  450034:	add	x21, x21, #0xdd8
  450038:	sub	x20, x20, x21
  45003c:	mov	w22, w0
  450040:	stp	x23, x24, [sp, #48]
  450044:	mov	x23, x1
  450048:	mov	x24, x2
  45004c:	bl	4040c8 <mbrtowc@plt-0x38>
  450050:	cmp	xzr, x20, asr #3
  450054:	b.eq	450080 <_obstack_memory_used@@Base+0x11e20>  // b.none
  450058:	asr	x20, x20, #3
  45005c:	mov	x19, #0x0                   	// #0
  450060:	ldr	x3, [x21, x19, lsl #3]
  450064:	mov	x2, x24
  450068:	add	x19, x19, #0x1
  45006c:	mov	x1, x23
  450070:	mov	w0, w22
  450074:	blr	x3
  450078:	cmp	x20, x19
  45007c:	b.ne	450060 <_obstack_memory_used@@Base+0x11e00>  // b.any
  450080:	ldp	x19, x20, [sp, #16]
  450084:	ldp	x21, x22, [sp, #32]
  450088:	ldp	x23, x24, [sp, #48]
  45008c:	ldp	x29, x30, [sp], #64
  450090:	ret
  450094:	nop
  450098:	ret
  45009c:	nop
  4500a0:	mov	x2, x1
  4500a4:	mov	x1, x0
  4500a8:	mov	w0, #0x0                   	// #0
  4500ac:	b	404d40 <__xstat@plt>
  4500b0:	mov	x2, x1
  4500b4:	mov	w1, w0
  4500b8:	mov	w0, #0x0                   	// #0
  4500bc:	b	404bd0 <__fxstat@plt>
  4500c0:	mov	x4, x1
  4500c4:	mov	x5, x2
  4500c8:	mov	w1, w0
  4500cc:	mov	x2, x4
  4500d0:	mov	w0, #0x0                   	// #0
  4500d4:	mov	w4, w3
  4500d8:	mov	x3, x5
  4500dc:	b	404e00 <__fxstatat@plt>
  4500e0:	stp	x29, x30, [sp, #-32]!
  4500e4:	mov	w5, w2
  4500e8:	mov	x4, x1
  4500ec:	mov	x29, sp
  4500f0:	mov	w1, w0
  4500f4:	mov	x2, x4
  4500f8:	mov	w0, #0x0                   	// #0
  4500fc:	add	x4, sp, #0x18
  450100:	str	x3, [sp, #24]
  450104:	mov	w3, w5
  450108:	bl	404670 <__xmknodat@plt>
  45010c:	ldp	x29, x30, [sp], #32
  450110:	ret

Disassembly of section .fini:

0000000000450114 <.fini>:
  450114:	stp	x29, x30, [sp, #-16]!
  450118:	mov	x29, sp
  45011c:	ldp	x29, x30, [sp], #16
  450120:	ret
