
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-ac-power_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400ae8 <_init>:
  400ae8:	stp	x29, x30, [sp, #-16]!
  400aec:	mov	x29, sp
  400af0:	bl	400c90 <call_weak_fn>
  400af4:	ldp	x29, x30, [sp], #16
  400af8:	ret

Disassembly of section .plt:

0000000000400b00 <.plt>:
  400b00:	stp	x16, x30, [sp, #-16]!
  400b04:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b08:	ldr	x17, [x16, #3928]
  400b0c:	add	x16, x16, #0xf58
  400b10:	br	x17
  400b14:	nop
  400b18:	nop
  400b1c:	nop

0000000000400b20 <__libc_start_main@plt>:
  400b20:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b24:	ldr	x17, [x16, #3936]
  400b28:	add	x16, x16, #0xf60
  400b2c:	br	x17

0000000000400b30 <__gmon_start__@plt>:
  400b30:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b34:	ldr	x17, [x16, #3944]
  400b38:	add	x16, x16, #0xf68
  400b3c:	br	x17

0000000000400b40 <polkit_agent_close@plt>:
  400b40:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b44:	ldr	x17, [x16, #3952]
  400b48:	add	x16, x16, #0xf70
  400b4c:	br	x17

0000000000400b50 <log_parse_environment_realm@plt>:
  400b50:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b54:	ldr	x17, [x16, #3960]
  400b58:	add	x16, x16, #0xf78
  400b5c:	br	x17

0000000000400b60 <log_assert_failed_realm@plt>:
  400b60:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b64:	ldr	x17, [x16, #3968]
  400b68:	add	x16, x16, #0xf80
  400b6c:	br	x17

0000000000400b70 <getopt_long@plt>:
  400b70:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b74:	ldr	x17, [x16, #3976]
  400b78:	add	x16, x16, #0xf88
  400b7c:	br	x17

0000000000400b80 <log_assert_failed_unreachable_realm@plt>:
  400b80:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b84:	ldr	x17, [x16, #3984]
  400b88:	add	x16, x16, #0xf90
  400b8c:	br	x17

0000000000400b90 <abort@plt>:
  400b90:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400b94:	ldr	x17, [x16, #3992]
  400b98:	add	x16, x16, #0xf98
  400b9c:	br	x17

0000000000400ba0 <ask_password_agent_close@plt>:
  400ba0:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400ba4:	ldr	x17, [x16, #4000]
  400ba8:	add	x16, x16, #0xfa0
  400bac:	br	x17

0000000000400bb0 <version@plt>:
  400bb0:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400bb4:	ldr	x17, [x16, #4008]
  400bb8:	add	x16, x16, #0xfa8
  400bbc:	br	x17

0000000000400bc0 <pager_close@plt>:
  400bc0:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400bc4:	ldr	x17, [x16, #4016]
  400bc8:	add	x16, x16, #0xfb0
  400bcc:	br	x17

0000000000400bd0 <log_internal_realm@plt>:
  400bd0:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400bd4:	ldr	x17, [x16, #4024]
  400bd8:	add	x16, x16, #0xfb8
  400bdc:	br	x17

0000000000400be0 <on_ac_power@plt>:
  400be0:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400be4:	ldr	x17, [x16, #4032]
  400be8:	add	x16, x16, #0xfc0
  400bec:	br	x17

0000000000400bf0 <puts@plt>:
  400bf0:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400bf4:	ldr	x17, [x16, #4040]
  400bf8:	add	x16, x16, #0xfc8
  400bfc:	br	x17

0000000000400c00 <mac_selinux_finish@plt>:
  400c00:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400c04:	ldr	x17, [x16, #4048]
  400c08:	add	x16, x16, #0xfd0
  400c0c:	br	x17

0000000000400c10 <printf@plt>:
  400c10:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400c14:	ldr	x17, [x16, #4056]
  400c18:	add	x16, x16, #0xfd8
  400c1c:	br	x17

0000000000400c20 <log_open@plt>:
  400c20:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400c24:	ldr	x17, [x16, #4064]
  400c28:	add	x16, x16, #0xfe0
  400c2c:	br	x17

0000000000400c30 <log_get_max_level_realm@plt>:
  400c30:	adrp	x16, 411000 <__FRAME_END__+0xfb60>
  400c34:	ldr	x17, [x16, #4072]
  400c38:	add	x16, x16, #0xfe8
  400c3c:	br	x17

Disassembly of section .text:

0000000000400c40 <_start>:
  400c40:	mov	x29, #0x0                   	// #0
  400c44:	mov	x30, #0x0                   	// #0
  400c48:	mov	x5, x0
  400c4c:	ldr	x1, [sp]
  400c50:	add	x2, sp, #0x8
  400c54:	mov	x6, sp
  400c58:	movz	x0, #0x0, lsl #48
  400c5c:	movk	x0, #0x0, lsl #32
  400c60:	movk	x0, #0x40, lsl #16
  400c64:	movk	x0, #0xd90
  400c68:	movz	x3, #0x0, lsl #48
  400c6c:	movk	x3, #0x0, lsl #32
  400c70:	movk	x3, #0x40, lsl #16
  400c74:	movk	x3, #0x1060
  400c78:	movz	x4, #0x0, lsl #48
  400c7c:	movk	x4, #0x0, lsl #32
  400c80:	movk	x4, #0x40, lsl #16
  400c84:	movk	x4, #0x10e0
  400c88:	bl	400b20 <__libc_start_main@plt>
  400c8c:	bl	400b90 <abort@plt>

0000000000400c90 <call_weak_fn>:
  400c90:	adrp	x0, 411000 <__FRAME_END__+0xfb60>
  400c94:	ldr	x0, [x0, #4088]
  400c98:	cbz	x0, 400ca0 <call_weak_fn+0x10>
  400c9c:	b	400b30 <__gmon_start__@plt>
  400ca0:	ret

0000000000400ca4 <deregister_tm_clones>:
  400ca4:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400ca8:	add	x0, x0, #0x0
  400cac:	adrp	x1, 412000 <saved_argv@@SD_SHARED>
  400cb0:	add	x1, x1, #0x0
  400cb4:	cmp	x0, x1
  400cb8:	b.eq	400cec <deregister_tm_clones+0x48>  // b.none
  400cbc:	stp	x29, x30, [sp, #-32]!
  400cc0:	mov	x29, sp
  400cc4:	adrp	x0, 401000 <main+0x270>
  400cc8:	ldr	x0, [x0, #248]
  400ccc:	str	x0, [sp, #24]
  400cd0:	mov	x1, x0
  400cd4:	cbz	x1, 400ce4 <deregister_tm_clones+0x40>
  400cd8:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400cdc:	add	x0, x0, #0x0
  400ce0:	blr	x1
  400ce4:	ldp	x29, x30, [sp], #32
  400ce8:	ret
  400cec:	ret

0000000000400cf0 <register_tm_clones>:
  400cf0:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400cf4:	add	x0, x0, #0x0
  400cf8:	adrp	x1, 412000 <saved_argv@@SD_SHARED>
  400cfc:	add	x1, x1, #0x0
  400d00:	sub	x0, x0, x1
  400d04:	lsr	x1, x0, #63
  400d08:	add	x0, x1, x0, asr #3
  400d0c:	cmp	xzr, x0, asr #1
  400d10:	b.eq	400d48 <register_tm_clones+0x58>  // b.none
  400d14:	stp	x29, x30, [sp, #-32]!
  400d18:	mov	x29, sp
  400d1c:	asr	x1, x0, #1
  400d20:	adrp	x0, 401000 <main+0x270>
  400d24:	ldr	x0, [x0, #256]
  400d28:	str	x0, [sp, #24]
  400d2c:	mov	x2, x0
  400d30:	cbz	x2, 400d40 <register_tm_clones+0x50>
  400d34:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400d38:	add	x0, x0, #0x0
  400d3c:	blr	x2
  400d40:	ldp	x29, x30, [sp], #32
  400d44:	ret
  400d48:	ret

0000000000400d4c <__do_global_dtors_aux>:
  400d4c:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400d50:	ldrb	w0, [x0, #28]
  400d54:	cbnz	w0, 400d78 <__do_global_dtors_aux+0x2c>
  400d58:	stp	x29, x30, [sp, #-16]!
  400d5c:	mov	x29, sp
  400d60:	bl	400ca4 <deregister_tm_clones>
  400d64:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400d68:	mov	w1, #0x1                   	// #1
  400d6c:	strb	w1, [x0, #28]
  400d70:	ldp	x29, x30, [sp], #16
  400d74:	ret
  400d78:	ret

0000000000400d7c <frame_dummy>:
  400d7c:	stp	x29, x30, [sp, #-16]!
  400d80:	mov	x29, sp
  400d84:	bl	400cf0 <register_tm_clones>
  400d88:	ldp	x29, x30, [sp], #16
  400d8c:	ret

0000000000400d90 <main>:
  400d90:	stp	x29, x30, [sp, #-64]!
  400d94:	mov	x29, sp
  400d98:	stp	x19, x20, [sp, #16]
  400d9c:	stp	x21, x22, [sp, #32]
  400da0:	stp	x23, x24, [sp, #48]
  400da4:	mov	w21, w0
  400da8:	mov	x22, x1
  400dac:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400db0:	str	w21, [x0, #24]
  400db4:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400db8:	str	x1, [x0]
  400dbc:	mov	w0, #0x0                   	// #0
  400dc0:	bl	400b50 <log_parse_environment_realm@plt>
  400dc4:	bl	400c20 <log_open@plt>
  400dc8:	tbnz	w21, #31, 400e40 <main+0xb0>
  400dcc:	cbz	x22, 400e64 <main+0xd4>
  400dd0:	adrp	x20, 401000 <main+0x270>
  400dd4:	add	x20, x20, #0x2c0
  400dd8:	adrp	x19, 401000 <main+0x270>
  400ddc:	add	x19, x19, #0x230
  400de0:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400de4:	add	x23, x0, #0x1d
  400de8:	mov	w24, #0x1                   	// #1
  400dec:	mov	x4, #0x0                   	// #0
  400df0:	mov	x3, x20
  400df4:	mov	x2, x19
  400df8:	mov	x1, x22
  400dfc:	mov	w0, w21
  400e00:	bl	400b70 <getopt_long@plt>
  400e04:	tbnz	w0, #31, 400f28 <main+0x198>
  400e08:	cmp	w0, #0x76
  400e0c:	b.eq	400efc <main+0x16c>  // b.none
  400e10:	b.gt	400e88 <main+0xf8>
  400e14:	cmp	w0, #0x3f
  400e18:	b.eq	400fe0 <main+0x250>  // b.none
  400e1c:	cmp	w0, #0x68
  400e20:	b.ne	400f04 <main+0x174>  // b.any
  400e24:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400e28:	ldr	x1, [x0, #8]
  400e2c:	adrp	x0, 401000 <main+0x270>
  400e30:	add	x0, x0, #0x150
  400e34:	bl	400c10 <printf@plt>
  400e38:	mov	w20, #0x0                   	// #0
  400e3c:	b	400fe4 <main+0x254>
  400e40:	adrp	x4, 401000 <main+0x270>
  400e44:	add	x4, x4, #0x298
  400e48:	mov	w3, #0x22                  	// #34
  400e4c:	adrp	x2, 401000 <main+0x270>
  400e50:	add	x2, x2, #0x11b
  400e54:	adrp	x1, 401000 <main+0x270>
  400e58:	add	x1, x1, #0x138
  400e5c:	mov	w0, #0x0                   	// #0
  400e60:	bl	400b60 <log_assert_failed_realm@plt>
  400e64:	adrp	x4, 401000 <main+0x270>
  400e68:	add	x4, x4, #0x298
  400e6c:	mov	w3, #0x23                  	// #35
  400e70:	adrp	x2, 401000 <main+0x270>
  400e74:	add	x2, x2, #0x11b
  400e78:	adrp	x1, 401000 <main+0x270>
  400e7c:	add	x1, x1, #0x148
  400e80:	mov	w0, #0x0                   	// #0
  400e84:	bl	400b60 <log_assert_failed_realm@plt>
  400e88:	cmp	w0, #0x100
  400e8c:	b.ne	400f04 <main+0x174>  // b.any
  400e90:	bl	400bb0 <version@plt>
  400e94:	mov	w20, w0
  400e98:	cmp	w20, #0x0
  400e9c:	b.le	400fe4 <main+0x254>
  400ea0:	bl	400be0 <on_ac_power@plt>
  400ea4:	mov	w19, w0
  400ea8:	tbnz	w0, #31, 400f8c <main+0x1fc>
  400eac:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400eb0:	ldrb	w0, [x0, #29]
  400eb4:	cbz	w0, 400ed4 <main+0x144>
  400eb8:	adrp	x0, 401000 <main+0x270>
  400ebc:	add	x0, x0, #0x110
  400ec0:	adrp	x1, 401000 <main+0x270>
  400ec4:	add	x1, x1, #0x108
  400ec8:	cmp	w19, #0x0
  400ecc:	csel	x0, x1, x0, ne  // ne = any
  400ed0:	bl	400bf0 <puts@plt>
  400ed4:	cmp	w19, #0x0
  400ed8:	cset	w20, eq  // eq = none
  400edc:	bl	400ba0 <ask_password_agent_close@plt>
  400ee0:	bl	400b40 <polkit_agent_close@plt>
  400ee4:	bl	400bc0 <pager_close@plt>
  400ee8:	bl	400c00 <mac_selinux_finish@plt>
  400eec:	adrp	x0, 401000 <main+0x270>
  400ef0:	ldr	x0, [x0, #648]
  400ef4:	cbnz	x0, 401000 <main+0x270>
  400ef8:	b	401048 <main+0x2b8>
  400efc:	strb	w24, [x23]
  400f00:	b	400dec <main+0x5c>
  400f04:	adrp	x4, 401000 <main+0x270>
  400f08:	add	x4, x4, #0x298
  400f0c:	mov	w3, #0x38                  	// #56
  400f10:	adrp	x2, 401000 <main+0x270>
  400f14:	add	x2, x2, #0x11b
  400f18:	adrp	x1, 401000 <main+0x270>
  400f1c:	add	x1, x1, #0x218
  400f20:	mov	w0, #0x0                   	// #0
  400f24:	bl	400b80 <log_assert_failed_unreachable_realm@plt>
  400f28:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400f2c:	ldr	w0, [x0, #16]
  400f30:	cmp	w21, w0
  400f34:	b.le	400ea0 <main+0x110>
  400f38:	mov	w0, #0x0                   	// #0
  400f3c:	bl	400c30 <log_get_max_level_realm@plt>
  400f40:	cmp	w0, #0x2
  400f44:	b.gt	400f50 <main+0x1c0>
  400f48:	mov	w20, #0xffffffea            	// #-22
  400f4c:	b	400fe4 <main+0x254>
  400f50:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400f54:	ldr	x6, [x0, #8]
  400f58:	adrp	x5, 401000 <main+0x270>
  400f5c:	add	x5, x5, #0x238
  400f60:	adrp	x4, 401000 <main+0x270>
  400f64:	add	x4, x4, #0x2a8
  400f68:	mov	w3, #0x3c                  	// #60
  400f6c:	adrp	x2, 401000 <main+0x270>
  400f70:	add	x2, x2, #0x11b
  400f74:	mov	w1, #0x16                  	// #22
  400f78:	movk	w1, #0x4000, lsl #16
  400f7c:	mov	w0, #0x3                   	// #3
  400f80:	bl	400bd0 <log_internal_realm@plt>
  400f84:	mov	w20, w0
  400f88:	b	400e98 <main+0x108>
  400f8c:	mov	w0, #0x0                   	// #0
  400f90:	bl	400c30 <log_get_max_level_realm@plt>
  400f94:	cmp	w0, #0x2
  400f98:	b.gt	400fb0 <main+0x220>
  400f9c:	cmp	w19, #0x0
  400fa0:	cneg	w19, w19, lt  // lt = tstop
  400fa4:	and	w20, w19, #0xff
  400fa8:	neg	w20, w20
  400fac:	b	400fe4 <main+0x254>
  400fb0:	adrp	x5, 401000 <main+0x270>
  400fb4:	add	x5, x5, #0x250
  400fb8:	adrp	x4, 401000 <main+0x270>
  400fbc:	add	x4, x4, #0x2b8
  400fc0:	mov	w3, #0x52                  	// #82
  400fc4:	adrp	x2, 401000 <main+0x270>
  400fc8:	add	x2, x2, #0x11b
  400fcc:	mov	w1, w19
  400fd0:	mov	w0, #0x3                   	// #3
  400fd4:	bl	400bd0 <log_internal_realm@plt>
  400fd8:	mov	w20, w0
  400fdc:	b	400fe4 <main+0x254>
  400fe0:	mov	w20, #0xffffffea            	// #-22
  400fe4:	bl	400ba0 <ask_password_agent_close@plt>
  400fe8:	bl	400b40 <polkit_agent_close@plt>
  400fec:	bl	400bc0 <pager_close@plt>
  400ff0:	bl	400c00 <mac_selinux_finish@plt>
  400ff4:	adrp	x0, 401000 <main+0x270>
  400ff8:	ldr	x0, [x0, #648]
  400ffc:	cbz	x0, 401040 <main+0x2b0>
  401000:	adrp	x0, 401000 <main+0x270>
  401004:	ldr	x19, [x0, #648]
  401008:	add	x19, x19, #0x7
  40100c:	and	x19, x19, #0xfffffffffffffff8
  401010:	adrp	x0, 401000 <main+0x270>
  401014:	ldr	x0, [x0, #656]
  401018:	cmp	x19, x0
  40101c:	b.cs	401040 <main+0x2b0>  // b.hs, b.nlast
  401020:	adrp	x21, 401000 <main+0x270>
  401024:	ldr	x1, [x19, #8]
  401028:	ldr	x0, [x19]
  40102c:	blr	x1
  401030:	add	x19, x19, #0x10
  401034:	ldr	x1, [x21, #656]
  401038:	cmp	x19, x1
  40103c:	b.cc	401024 <main+0x294>  // b.lo, b.ul, b.last
  401040:	cmp	w20, #0x0
  401044:	csinc	w20, w20, wzr, ge  // ge = tcont
  401048:	mov	w0, w20
  40104c:	ldp	x19, x20, [sp, #16]
  401050:	ldp	x21, x22, [sp, #32]
  401054:	ldp	x23, x24, [sp, #48]
  401058:	ldp	x29, x30, [sp], #64
  40105c:	ret

0000000000401060 <__libc_csu_init>:
  401060:	stp	x29, x30, [sp, #-64]!
  401064:	mov	x29, sp
  401068:	stp	x19, x20, [sp, #16]
  40106c:	adrp	x20, 411000 <__FRAME_END__+0xfb60>
  401070:	add	x20, x20, #0xd20
  401074:	stp	x21, x22, [sp, #32]
  401078:	adrp	x21, 411000 <__FRAME_END__+0xfb60>
  40107c:	add	x21, x21, #0xd18
  401080:	sub	x20, x20, x21
  401084:	mov	w22, w0
  401088:	stp	x23, x24, [sp, #48]
  40108c:	mov	x23, x1
  401090:	mov	x24, x2
  401094:	bl	400ae8 <_init>
  401098:	cmp	xzr, x20, asr #3
  40109c:	b.eq	4010c8 <__libc_csu_init+0x68>  // b.none
  4010a0:	asr	x20, x20, #3
  4010a4:	mov	x19, #0x0                   	// #0
  4010a8:	ldr	x3, [x21, x19, lsl #3]
  4010ac:	mov	x2, x24
  4010b0:	add	x19, x19, #0x1
  4010b4:	mov	x1, x23
  4010b8:	mov	w0, w22
  4010bc:	blr	x3
  4010c0:	cmp	x20, x19
  4010c4:	b.ne	4010a8 <__libc_csu_init+0x48>  // b.any
  4010c8:	ldp	x19, x20, [sp, #16]
  4010cc:	ldp	x21, x22, [sp, #32]
  4010d0:	ldp	x23, x24, [sp, #48]
  4010d4:	ldp	x29, x30, [sp], #64
  4010d8:	ret
  4010dc:	nop

00000000004010e0 <__libc_csu_fini>:
  4010e0:	ret

Disassembly of section .fini:

00000000004010e4 <_fini>:
  4010e4:	stp	x29, x30, [sp, #-16]!
  4010e8:	mov	x29, sp
  4010ec:	ldp	x29, x30, [sp], #16
  4010f0:	ret
