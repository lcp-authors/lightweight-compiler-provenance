
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Piece.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000f48 <.init>:
 f48:	stp	x29, x30, [sp, #-16]!
 f4c:	mov	x29, sp
 f50:	bl	1200 <Perl_newSVpvn@plt+0x10>
 f54:	ldp	x29, x30, [sp], #16
 f58:	ret

Disassembly of section .plt:

0000000000000f60 <Perl_sv_2iv_flags@plt-0x20>:
     f60:	stp	x16, x30, [sp, #-16]!
     f64:	adrp	x16, 13000 <boot_Time__Piece@@Base+0x11d2c>
     f68:	ldr	x17, [x16, #4088]
     f6c:	add	x16, x16, #0xff8
     f70:	br	x17
     f74:	nop
     f78:	nop
     f7c:	nop

0000000000000f80 <Perl_sv_2iv_flags@plt>:
     f80:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     f84:	ldr	x17, [x16]
     f88:	add	x16, x16, #0x0
     f8c:	br	x17

0000000000000f90 <strlen@plt>:
     f90:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     f94:	ldr	x17, [x16, #8]
     f98:	add	x16, x16, #0x8
     f9c:	br	x17

0000000000000fa0 <Perl_newRV_noinc@plt>:
     fa0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fa4:	ldr	x17, [x16, #16]
     fa8:	add	x16, x16, #0x10
     fac:	br	x17

0000000000000fb0 <Perl_stack_grow@plt>:
     fb0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fb4:	ldr	x17, [x16, #24]
     fb8:	add	x16, x16, #0x18
     fbc:	br	x17

0000000000000fc0 <__cxa_finalize@plt>:
     fc0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fc4:	ldr	x17, [x16, #32]
     fc8:	add	x16, x16, #0x20
     fcc:	br	x17

0000000000000fd0 <strftime@plt>:
     fd0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fd4:	ldr	x17, [x16, #40]
     fd8:	add	x16, x16, #0x28
     fdc:	br	x17

0000000000000fe0 <Perl_av_len@plt>:
     fe0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     fe4:	ldr	x17, [x16, #48]
     fe8:	add	x16, x16, #0x30
     fec:	br	x17

0000000000000ff0 <Perl_warn_nocontext@plt>:
     ff0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
     ff4:	ldr	x17, [x16, #56]
     ff8:	add	x16, x16, #0x38
     ffc:	br	x17

0000000000001000 <localtime@plt>:
    1000:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1004:	ldr	x17, [x16, #64]
    1008:	add	x16, x16, #0x40
    100c:	br	x17

0000000000001010 <malloc@plt>:
    1010:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1014:	ldr	x17, [x16, #72]
    1018:	add	x16, x16, #0x48
    101c:	br	x17

0000000000001020 <tzset@plt>:
    1020:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1024:	ldr	x17, [x16, #80]
    1028:	add	x16, x16, #0x50
    102c:	br	x17

0000000000001030 <Perl_sv_2pv_flags@plt>:
    1030:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1034:	ldr	x17, [x16, #88]
    1038:	add	x16, x16, #0x58
    103c:	br	x17

0000000000001040 <Perl_xs_boot_epilog@plt>:
    1040:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1044:	ldr	x17, [x16, #96]
    1048:	add	x16, x16, #0x60
    104c:	br	x17

0000000000001050 <Perl_safesysmalloc@plt>:
    1050:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1054:	ldr	x17, [x16, #104]
    1058:	add	x16, x16, #0x68
    105c:	br	x17

0000000000001060 <gmtime@plt>:
    1060:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1064:	ldr	x17, [x16, #112]
    1068:	add	x16, x16, #0x70
    106c:	br	x17

0000000000001070 <__stack_chk_fail@plt>:
    1070:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1074:	ldr	x17, [x16, #120]
    1078:	add	x16, x16, #0x78
    107c:	br	x17

0000000000001080 <__gmon_start__@plt>:
    1080:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1084:	ldr	x17, [x16, #128]
    1088:	add	x16, x16, #0x80
    108c:	br	x17

0000000000001090 <Perl_croak_xs_usage@plt>:
    1090:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1094:	ldr	x17, [x16, #136]
    1098:	add	x16, x16, #0x88
    109c:	br	x17

00000000000010a0 <Perl_sv_2nv_flags@plt>:
    10a0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10a4:	ldr	x17, [x16, #144]
    10a8:	add	x16, x16, #0x90
    10ac:	br	x17

00000000000010b0 <Perl_av_push@plt>:
    10b0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10b4:	ldr	x17, [x16, #152]
    10b8:	add	x16, x16, #0x98
    10bc:	br	x17

00000000000010c0 <Perl_newSVpv@plt>:
    10c0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10c4:	ldr	x17, [x16, #160]
    10c8:	add	x16, x16, #0xa0
    10cc:	br	x17

00000000000010d0 <strcmp@plt>:
    10d0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10d4:	ldr	x17, [x16, #168]
    10d8:	add	x16, x16, #0xa8
    10dc:	br	x17

00000000000010e0 <__ctype_b_loc@plt>:
    10e0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10e4:	ldr	x17, [x16, #176]
    10e8:	add	x16, x16, #0xb0
    10ec:	br	x17

00000000000010f0 <strtol@plt>:
    10f0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    10f4:	ldr	x17, [x16, #184]
    10f8:	add	x16, x16, #0xb8
    10fc:	br	x17

0000000000001100 <Perl_croak_nocontext@plt>:
    1100:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1104:	ldr	x17, [x16, #192]
    1108:	add	x16, x16, #0xc0
    110c:	br	x17

0000000000001110 <free@plt>:
    1110:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1114:	ldr	x17, [x16, #200]
    1118:	add	x16, x16, #0xc8
    111c:	br	x17

0000000000001120 <strncasecmp@plt>:
    1120:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1124:	ldr	x17, [x16, #208]
    1128:	add	x16, x16, #0xd0
    112c:	br	x17

0000000000001130 <Perl_newXS_flags@plt>:
    1130:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1134:	ldr	x17, [x16, #216]
    1138:	add	x16, x16, #0xd8
    113c:	br	x17

0000000000001140 <Perl_sv_2mortal@plt>:
    1140:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1144:	ldr	x17, [x16, #224]
    1148:	add	x16, x16, #0xe0
    114c:	br	x17

0000000000001150 <Perl_safesysfree@plt>:
    1150:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1154:	ldr	x17, [x16, #232]
    1158:	add	x16, x16, #0xe8
    115c:	br	x17

0000000000001160 <Perl_safesysrealloc@plt>:
    1160:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1164:	ldr	x17, [x16, #240]
    1168:	add	x16, x16, #0xf0
    116c:	br	x17

0000000000001170 <Perl_xs_handshake@plt>:
    1170:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1174:	ldr	x17, [x16, #248]
    1178:	add	x16, x16, #0xf8
    117c:	br	x17

0000000000001180 <Perl_av_fetch@plt>:
    1180:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1184:	ldr	x17, [x16, #256]
    1188:	add	x16, x16, #0x100
    118c:	br	x17

0000000000001190 <Perl_hv_common_key_len@plt>:
    1190:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    1194:	ldr	x17, [x16, #264]
    1198:	add	x16, x16, #0x108
    119c:	br	x17

00000000000011a0 <Perl_newRV@plt>:
    11a0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11a4:	ldr	x17, [x16, #272]
    11a8:	add	x16, x16, #0x110
    11ac:	br	x17

00000000000011b0 <Perl_newSV_type@plt>:
    11b0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11b4:	ldr	x17, [x16, #280]
    11b8:	add	x16, x16, #0x118
    11bc:	br	x17

00000000000011c0 <strncpy@plt>:
    11c0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11c4:	ldr	x17, [x16, #288]
    11c8:	add	x16, x16, #0x120
    11cc:	br	x17

00000000000011d0 <Perl_newSViv@plt>:
    11d0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11d4:	ldr	x17, [x16, #296]
    11d8:	add	x16, x16, #0x128
    11dc:	br	x17

00000000000011e0 <__errno_location@plt>:
    11e0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11e4:	ldr	x17, [x16, #304]
    11e8:	add	x16, x16, #0x130
    11ec:	br	x17

00000000000011f0 <Perl_newSVpvn@plt>:
    11f0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
    11f4:	ldr	x17, [x16, #312]
    11f8:	add	x16, x16, #0x138
    11fc:	br	x17

Disassembly of section .text:

0000000000001200 <boot_Time__Piece@@Base-0xd4>:
    1200:	adrp	x0, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1204:	ldr	x0, [x0, #4048]
    1208:	cbz	x0, 1210 <Perl_newSVpvn@plt+0x20>
    120c:	b	1080 <__gmon_start__@plt>
    1210:	ret
    1214:	nop
    1218:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    121c:	add	x0, x0, #0x148
    1220:	adrp	x1, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1224:	add	x1, x1, #0x148
    1228:	cmp	x1, x0
    122c:	b.eq	1244 <Perl_newSVpvn@plt+0x54>  // b.none
    1230:	adrp	x1, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1234:	ldr	x1, [x1, #4032]
    1238:	cbz	x1, 1244 <Perl_newSVpvn@plt+0x54>
    123c:	mov	x16, x1
    1240:	br	x16
    1244:	ret
    1248:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    124c:	add	x0, x0, #0x148
    1250:	adrp	x1, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1254:	add	x1, x1, #0x148
    1258:	sub	x1, x1, x0
    125c:	lsr	x2, x1, #63
    1260:	add	x1, x2, x1, asr #3
    1264:	cmp	xzr, x1, asr #1
    1268:	asr	x1, x1, #1
    126c:	b.eq	1284 <Perl_newSVpvn@plt+0x94>  // b.none
    1270:	adrp	x2, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1274:	ldr	x2, [x2, #4064]
    1278:	cbz	x2, 1284 <Perl_newSVpvn@plt+0x94>
    127c:	mov	x16, x2
    1280:	br	x16
    1284:	ret
    1288:	stp	x29, x30, [sp, #-32]!
    128c:	mov	x29, sp
    1290:	str	x19, [sp, #16]
    1294:	adrp	x19, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1298:	ldrb	w0, [x19, #328]
    129c:	cbnz	w0, 12c4 <Perl_newSVpvn@plt+0xd4>
    12a0:	adrp	x0, 13000 <boot_Time__Piece@@Base+0x11d2c>
    12a4:	ldr	x0, [x0, #4040]
    12a8:	cbz	x0, 12b8 <Perl_newSVpvn@plt+0xc8>
    12ac:	adrp	x0, 14000 <boot_Time__Piece@@Base+0x12d2c>
    12b0:	ldr	x0, [x0, #320]
    12b4:	bl	fc0 <__cxa_finalize@plt>
    12b8:	bl	1218 <Perl_newSVpvn@plt+0x28>
    12bc:	mov	w0, #0x1                   	// #1
    12c0:	strb	w0, [x19, #328]
    12c4:	ldr	x19, [sp, #16]
    12c8:	ldp	x29, x30, [sp], #32
    12cc:	ret
    12d0:	b	1248 <Perl_newSVpvn@plt+0x58>

00000000000012d4 <boot_Time__Piece@@Base>:
    12d4:	stp	x29, x30, [sp, #-64]!
    12d8:	stp	x20, x19, [sp, #48]
    12dc:	adrp	x20, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12e0:	mov	x19, x0
    12e4:	add	x20, x20, #0x6ce
    12e8:	adrp	x3, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12ec:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    12f0:	mov	w0, #0x4e7                 	// #1255
    12f4:	add	x3, x3, #0x6d6
    12f8:	add	x4, x4, #0x6de
    12fc:	movk	w0, #0xd30, lsl #16
    1300:	mov	x1, x19
    1304:	mov	x2, x20
    1308:	stp	x24, x23, [sp, #16]
    130c:	stp	x22, x21, [sp, #32]
    1310:	mov	x29, sp
    1314:	bl	1170 <Perl_xs_handshake@plt>
    1318:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    131c:	adrp	x2, 1000 <localtime@plt>
    1320:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1324:	mov	w21, w0
    1328:	add	x1, x1, #0x6e3
    132c:	add	x2, x2, #0x464
    1330:	add	x4, x4, #0x6fa
    1334:	mov	x0, x19
    1338:	mov	x3, x20
    133c:	mov	w5, wzr
    1340:	bl	1130 <Perl_newXS_flags@plt>
    1344:	adrp	x22, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1348:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    134c:	adrp	x2, 1000 <localtime@plt>
    1350:	add	x22, x22, #0x74a
    1354:	add	x1, x1, #0x6ff
    1358:	add	x2, x2, #0x724
    135c:	mov	x0, x19
    1360:	mov	x3, x20
    1364:	mov	x4, x22
    1368:	mov	w5, wzr
    136c:	bl	1130 <Perl_newXS_flags@plt>
    1370:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1374:	adrp	x2, 1000 <localtime@plt>
    1378:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    137c:	add	x1, x1, #0x713
    1380:	add	x2, x2, #0x770
    1384:	add	x4, x4, #0x746
    1388:	mov	x0, x19
    138c:	mov	x3, x20
    1390:	mov	w5, wzr
    1394:	bl	1130 <Perl_newXS_flags@plt>
    1398:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    139c:	adrp	x2, 1000 <localtime@plt>
    13a0:	adrp	x4, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13a4:	add	x1, x1, #0x72a
    13a8:	add	x2, x2, #0xeac
    13ac:	add	x4, x4, #0x744
    13b0:	mov	x0, x19
    13b4:	mov	x3, x20
    13b8:	mov	w5, wzr
    13bc:	bl	1130 <Perl_newXS_flags@plt>
    13c0:	adrp	x23, 2000 <boot_Time__Piece@@Base+0xd2c>
    13c4:	adrp	x24, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13c8:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13cc:	add	x23, x23, #0xf4
    13d0:	add	x24, x24, #0x749
    13d4:	add	x1, x1, #0x74b
    13d8:	mov	x0, x19
    13dc:	mov	x2, x23
    13e0:	mov	x3, x20
    13e4:	mov	x4, x24
    13e8:	mov	w5, wzr
    13ec:	bl	1130 <Perl_newXS_flags@plt>
    13f0:	ldr	x8, [x0]
    13f4:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    13f8:	mov	w9, #0x1                   	// #1
    13fc:	add	x1, x1, #0x764
    1400:	mov	x0, x19
    1404:	mov	x2, x23
    1408:	mov	x3, x20
    140c:	mov	x4, x24
    1410:	mov	w5, wzr
    1414:	str	w9, [x8, #40]
    1418:	bl	1130 <Perl_newXS_flags@plt>
    141c:	ldr	x8, [x0]
    1420:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1424:	adrp	x2, 2000 <boot_Time__Piece@@Base+0xd2c>
    1428:	add	x1, x1, #0x780
    142c:	add	x2, x2, #0x26c
    1430:	mov	x0, x19
    1434:	mov	x3, x20
    1438:	mov	x4, x22
    143c:	mov	w5, wzr
    1440:	str	wzr, [x8, #40]
    1444:	bl	1130 <Perl_newXS_flags@plt>
    1448:	mov	x0, x19
    144c:	mov	w1, w21
    1450:	ldp	x20, x19, [sp, #48]
    1454:	ldp	x22, x21, [sp, #32]
    1458:	ldp	x24, x23, [sp, #16]
    145c:	ldp	x29, x30, [sp], #64
    1460:	b	1040 <Perl_xs_boot_epilog@plt>
    1464:	sub	sp, sp, #0x150
    1468:	stp	x29, x30, [sp, #240]
    146c:	str	x28, [sp, #256]
    1470:	stp	x26, x25, [sp, #272]
    1474:	stp	x24, x23, [sp, #288]
    1478:	stp	x22, x21, [sp, #304]
    147c:	stp	x20, x19, [sp, #320]
    1480:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1484:	ldr	x8, [x8, #4056]
    1488:	add	x29, sp, #0xf0
    148c:	ldr	x8, [x8]
    1490:	stur	x8, [x29, #-8]
    1494:	ldr	x8, [x0, #120]
    1498:	sub	x9, x8, #0x4
    149c:	str	x9, [x0, #120]
    14a0:	ldr	w21, [x8]
    14a4:	ldr	x8, [x0, #24]
    14a8:	ldr	x9, [x0]
    14ac:	add	x10, x8, x21, lsl #3
    14b0:	sub	x9, x9, x10
    14b4:	lsr	x22, x9, #3
    14b8:	and	w9, w22, #0xfffffffe
    14bc:	cmp	w9, #0x2
    14c0:	b.ne	1710 <boot_Time__Piece@@Base+0x43c>  // b.any
    14c4:	add	w24, w21, #0x1
    14c8:	ldr	x1, [x8, w24, sxtw #3]
    14cc:	mov	w23, #0x100                 	// #256
    14d0:	movk	w23, #0x20, lsl #16
    14d4:	add	w10, w23, #0x300
    14d8:	ldr	w9, [x1, #12]
    14dc:	mov	x19, x0
    14e0:	and	w9, w9, w10
    14e4:	cmp	w9, #0x400
    14e8:	b.ne	14f4 <boot_Time__Piece@@Base+0x220>  // b.any
    14ec:	ldr	x20, [x1, #16]
    14f0:	b	150c <boot_Time__Piece@@Base+0x238>
    14f4:	mov	w3, #0x2                   	// #2
    14f8:	mov	x0, x19
    14fc:	mov	x2, xzr
    1500:	bl	1030 <Perl_sv_2pv_flags@plt>
    1504:	ldr	x8, [x19, #24]
    1508:	mov	x20, x0
    150c:	add	w9, w21, #0x2
    1510:	ldr	x1, [x8, w9, sxtw #3]
    1514:	add	w9, w23, #0x100
    1518:	ldr	w8, [x1, #12]
    151c:	and	w8, w8, w9
    1520:	cmp	w8, #0x200
    1524:	b.ne	1534 <boot_Time__Piece@@Base+0x260>  // b.any
    1528:	ldr	x8, [x1]
    152c:	ldr	d0, [x8, #40]
    1530:	b	1540 <boot_Time__Piece@@Base+0x26c>
    1534:	mov	w2, #0x2                   	// #2
    1538:	mov	x0, x19
    153c:	bl	10a0 <Perl_sv_2nv_flags@plt>
    1540:	sxtw	x26, w24
    1544:	fcvtzs	x8, d0
    1548:	cmp	w22, #0x2
    154c:	str	x8, [sp, #64]
    1550:	b.le	15a8 <boot_Time__Piece@@Base+0x2d4>
    1554:	ldr	x8, [x19, #24]
    1558:	add	w9, w21, #0x3
    155c:	ldr	x1, [x8, w9, sxtw #3]
    1560:	ldr	w8, [x1, #12]
    1564:	and	w8, w8, w23
    1568:	cmp	w8, #0x100
    156c:	b.ne	1594 <boot_Time__Piece@@Base+0x2c0>  // b.any
    1570:	ldr	x8, [x1]
    1574:	ldr	x0, [x8, #32]
    1578:	cmp	w0, #0x1
    157c:	b.eq	15a8 <boot_Time__Piece@@Base+0x2d4>  // b.none
    1580:	add	x0, sp, #0x40
    1584:	add	x22, sp, #0x8
    1588:	add	x21, sp, #0x48
    158c:	bl	1060 <gmtime@plt>
    1590:	b	15b8 <boot_Time__Piece@@Base+0x2e4>
    1594:	mov	w2, #0x2                   	// #2
    1598:	mov	x0, x19
    159c:	bl	f80 <Perl_sv_2iv_flags@plt>
    15a0:	cmp	w0, #0x1
    15a4:	b.ne	1580 <boot_Time__Piece@@Base+0x2ac>  // b.any
    15a8:	add	x0, sp, #0x40
    15ac:	add	x21, sp, #0x48
    15b0:	add	x22, sp, #0x8
    15b4:	bl	1000 <localtime@plt>
    15b8:	ldr	x8, [x0, #48]
    15bc:	ldp	q1, q0, [x0, #16]
    15c0:	ldr	q2, [x0]
    15c4:	add	x3, sp, #0x8
    15c8:	mov	w1, #0xa0                  	// #160
    15cc:	mov	x0, x21
    15d0:	mov	x2, x20
    15d4:	str	x8, [x22, #48]
    15d8:	stp	q1, q0, [x22, #16]
    15dc:	str	q2, [x22]
    15e0:	bl	fd0 <strftime@plt>
    15e4:	sub	x8, x0, #0x1
    15e8:	mov	x22, x0
    15ec:	cmp	x8, #0x9f
    15f0:	b.cc	16a4 <boot_Time__Piece@@Base+0x3d0>  // b.lo, b.ul, b.last
    15f4:	cbnz	x22, 1600 <boot_Time__Piece@@Base+0x32c>
    15f8:	ldrb	w8, [x20]
    15fc:	cbz	w8, 16a4 <boot_Time__Piece@@Base+0x3d0>
    1600:	mov	x0, x20
    1604:	bl	f90 <strlen@plt>
    1608:	add	x24, x0, #0xa0
    160c:	mov	x25, x0
    1610:	mov	x0, x24
    1614:	bl	1050 <Perl_safesysmalloc@plt>
    1618:	cbz	x0, 16a4 <boot_Time__Piece@@Base+0x3d0>
    161c:	mov	w8, #0x64                  	// #100
    1620:	mov	x23, x0
    1624:	mul	x25, x25, x8
    1628:	add	x3, sp, #0x8
    162c:	mov	x0, x23
    1630:	mov	x1, x24
    1634:	mov	x2, x20
    1638:	bl	fd0 <strftime@plt>
    163c:	cbz	x0, 164c <boot_Time__Piece@@Base+0x378>
    1640:	mov	x2, x0
    1644:	cmp	x0, x24
    1648:	b.cc	1670 <boot_Time__Piece@@Base+0x39c>  // b.lo, b.ul, b.last
    164c:	cmp	x24, x25
    1650:	b.hi	169c <boot_Time__Piece@@Base+0x3c8>  // b.pmore
    1654:	lsl	x24, x24, #1
    1658:	mov	x0, x23
    165c:	mov	x1, x24
    1660:	bl	1160 <Perl_safesysrealloc@plt>
    1664:	mov	x23, x0
    1668:	cbnz	x0, 1628 <boot_Time__Piece@@Base+0x354>
    166c:	b	16a4 <boot_Time__Piece@@Base+0x3d0>
    1670:	mov	x0, x19
    1674:	mov	x1, x23
    1678:	bl	10c0 <Perl_newSVpv@plt>
    167c:	mov	x1, x0
    1680:	mov	x0, x19
    1684:	bl	1140 <Perl_sv_2mortal@plt>
    1688:	ldr	x8, [x19, #24]
    168c:	str	x0, [x8, x26, lsl #3]
    1690:	mov	x0, x23
    1694:	bl	1150 <Perl_safesysfree@plt>
    1698:	b	16c8 <boot_Time__Piece@@Base+0x3f4>
    169c:	mov	x0, x23
    16a0:	bl	1150 <Perl_safesysfree@plt>
    16a4:	mov	x0, x19
    16a8:	mov	x1, x21
    16ac:	mov	x2, x22
    16b0:	bl	10c0 <Perl_newSVpv@plt>
    16b4:	mov	x1, x0
    16b8:	mov	x0, x19
    16bc:	bl	1140 <Perl_sv_2mortal@plt>
    16c0:	ldr	x8, [x19, #24]
    16c4:	str	x0, [x8, x26, lsl #3]
    16c8:	ldr	x8, [x19, #24]
    16cc:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    16d0:	add	x8, x8, x26, lsl #3
    16d4:	str	x8, [x19]
    16d8:	ldur	x8, [x29, #-8]
    16dc:	ldr	x9, [x9, #4056]
    16e0:	ldr	x9, [x9]
    16e4:	cmp	x9, x8
    16e8:	b.ne	170c <boot_Time__Piece@@Base+0x438>  // b.any
    16ec:	ldp	x20, x19, [sp, #320]
    16f0:	ldp	x22, x21, [sp, #304]
    16f4:	ldp	x24, x23, [sp, #288]
    16f8:	ldp	x26, x25, [sp, #272]
    16fc:	ldr	x28, [sp, #256]
    1700:	ldp	x29, x30, [sp, #240]
    1704:	add	sp, sp, #0x150
    1708:	ret
    170c:	bl	1070 <__stack_chk_fail@plt>
    1710:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1714:	add	x8, x8, #0x79f
    1718:	mov	x0, x1
    171c:	mov	x1, x8
    1720:	bl	1090 <Perl_croak_xs_usage@plt>
    1724:	stp	x29, x30, [sp, #-16]!
    1728:	ldr	x8, [x0, #120]
    172c:	ldr	x10, [x0]
    1730:	mov	x29, sp
    1734:	sub	x9, x8, #0x4
    1738:	str	x9, [x0, #120]
    173c:	ldr	x9, [x0, #24]
    1740:	ldr	w8, [x8]
    1744:	add	x8, x9, x8, lsl #3
    1748:	sub	x8, x10, x8
    174c:	tst	x8, #0x7fffffff8
    1750:	b.ne	175c <boot_Time__Piece@@Base+0x488>  // b.any
    1754:	ldp	x29, x30, [sp], #16
    1758:	b	1020 <tzset@plt>
    175c:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1760:	add	x8, x8, #0x74a
    1764:	mov	x0, x1
    1768:	mov	x1, x8
    176c:	bl	1090 <Perl_croak_xs_usage@plt>
    1770:	sub	sp, sp, #0xc0
    1774:	stp	x29, x30, [sp, #96]
    1778:	stp	x28, x27, [sp, #112]
    177c:	stp	x26, x25, [sp, #128]
    1780:	stp	x24, x23, [sp, #144]
    1784:	stp	x22, x21, [sp, #160]
    1788:	stp	x20, x19, [sp, #176]
    178c:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1790:	ldr	x8, [x8, #4056]
    1794:	add	x29, sp, #0x60
    1798:	ldr	x8, [x8]
    179c:	stur	x8, [x29, #-8]
    17a0:	ldr	x8, [x0, #120]
    17a4:	ldr	x27, [x0]
    17a8:	sub	x9, x8, #0x4
    17ac:	str	x9, [x0, #120]
    17b0:	ldr	w20, [x8]
    17b4:	ldr	x8, [x0, #24]
    17b8:	add	x9, x8, x20, lsl #3
    17bc:	sub	x9, x27, x9
    17c0:	and	x9, x9, #0x7fffffff8
    17c4:	cmp	x9, #0x20
    17c8:	b.ne	1e80 <boot_Time__Piece@@Base+0xbac>  // b.any
    17cc:	add	w9, w20, #0x1
    17d0:	ldr	x1, [x8, w9, sxtw #3]
    17d4:	mov	w28, #0x400                 	// #1024
    17d8:	movk	w28, #0x20, lsl #16
    17dc:	mov	x19, x0
    17e0:	ldr	w9, [x1, #12]
    17e4:	and	w9, w9, w28
    17e8:	cmp	w9, #0x400
    17ec:	b.ne	17fc <boot_Time__Piece@@Base+0x528>  // b.any
    17f0:	ldr	x9, [x1, #16]
    17f4:	str	x9, [sp, #8]
    17f8:	b	1814 <boot_Time__Piece@@Base+0x540>
    17fc:	mov	w3, #0x2                   	// #2
    1800:	mov	x0, x19
    1804:	mov	x2, xzr
    1808:	bl	1030 <Perl_sv_2pv_flags@plt>
    180c:	ldr	x8, [x19, #24]
    1810:	str	x0, [sp, #8]
    1814:	add	w9, w20, #0x2
    1818:	ldr	x1, [x8, w9, sxtw #3]
    181c:	ldr	w9, [x1, #12]
    1820:	and	w9, w9, w28
    1824:	cmp	w9, #0x400
    1828:	b.ne	1838 <boot_Time__Piece@@Base+0x564>  // b.any
    182c:	ldr	x9, [x1, #16]
    1830:	str	x9, [sp]
    1834:	b	1850 <boot_Time__Piece@@Base+0x57c>
    1838:	mov	w3, #0x2                   	// #2
    183c:	mov	x0, x19
    1840:	mov	x2, xzr
    1844:	bl	1030 <Perl_sv_2pv_flags@plt>
    1848:	ldr	x8, [x19, #24]
    184c:	str	x0, [sp]
    1850:	add	w9, w20, #0x3
    1854:	ldr	x1, [x8, w9, sxtw #3]
    1858:	sub	w10, w28, #0x300
    185c:	ldr	w9, [x1, #12]
    1860:	and	w9, w9, w10
    1864:	cmp	w9, #0x100
    1868:	b.ne	1878 <boot_Time__Piece@@Base+0x5a4>  // b.any
    186c:	ldr	x9, [x1]
    1870:	ldr	x0, [x9, #32]
    1874:	b	1888 <boot_Time__Piece@@Base+0x5b4>
    1878:	mov	w2, #0x2                   	// #2
    187c:	mov	x0, x19
    1880:	bl	f80 <Perl_sv_2iv_flags@plt>
    1884:	ldr	x8, [x19, #24]
    1888:	stur	w0, [x29, #-12]
    188c:	add	w9, w20, #0x4
    1890:	movi	v0.2d, #0x0
    1894:	ldr	x8, [x8, w9, sxtw #3]
    1898:	adrp	x9, 3000 <boot_Time__Piece@@Base+0x1d2c>
    189c:	stp	q0, q0, [sp, #16]
    18a0:	str	q0, [sp, #48]
    18a4:	ldr	d0, [x9, #1488]
    18a8:	mov	w10, #0x1                   	// #1
    18ac:	mov	w9, #0xffffffff            	// #-1
    18b0:	str	xzr, [sp, #64]
    18b4:	str	w10, [sp, #28]
    18b8:	stur	d0, [sp, #36]
    18bc:	str	w9, [sp, #48]
    18c0:	ldr	x22, [x8, #16]
    18c4:	ldrb	w8, [x22, #12]
    18c8:	cmp	w8, #0xc
    18cc:	b.ne	1e94 <boot_Time__Piece@@Base+0xbc0>  // b.any
    18d0:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    18d4:	add	x2, x2, #0x87e
    18d8:	mov	w3, #0x9                   	// #9
    18dc:	mov	w4, #0x20                  	// #32
    18e0:	mov	x0, x19
    18e4:	mov	x1, x22
    18e8:	mov	x5, xzr
    18ec:	mov	w6, wzr
    18f0:	bl	1190 <Perl_hv_common_key_len@plt>
    18f4:	ldr	x8, [x0]
    18f8:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    18fc:	add	x2, x2, #0x882
    1900:	mov	w3, #0x5                   	// #5
    1904:	ldr	x23, [x8, #16]
    1908:	mov	w4, #0x20                  	// #32
    190c:	mov	x0, x19
    1910:	mov	x1, x22
    1914:	mov	x5, xzr
    1918:	mov	w6, wzr
    191c:	bl	1190 <Perl_hv_common_key_len@plt>
    1920:	ldr	x8, [x0]
    1924:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1928:	add	x2, x2, #0x888
    192c:	mov	w3, #0x3                   	// #3
    1930:	ldr	x24, [x8, #16]
    1934:	mov	w4, #0x20                  	// #32
    1938:	mov	x0, x19
    193c:	mov	x1, x22
    1940:	mov	x5, xzr
    1944:	mov	w6, wzr
    1948:	bl	1190 <Perl_hv_common_key_len@plt>
    194c:	ldr	x8, [x0]
    1950:	mov	x0, x19
    1954:	mov	x1, x24
    1958:	ldr	x25, [x8, #16]
    195c:	bl	fe0 <Perl_av_len@plt>
    1960:	adrp	x20, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1964:	add	x20, x20, #0x150
    1968:	tbnz	w0, #31, 1aac <boot_Time__Piece@@Base+0x7d8>
    196c:	mov	x26, xzr
    1970:	b	19a4 <boot_Time__Piece@@Base+0x6d0>
    1974:	mov	w3, #0x2                   	// #2
    1978:	mov	x0, x19
    197c:	mov	x2, xzr
    1980:	bl	1030 <Perl_sv_2pv_flags@plt>
    1984:	str	x0, [x20, x26, lsl #3]
    1988:	mov	x0, x19
    198c:	mov	x1, x24
    1990:	add	x21, x26, #0x1
    1994:	bl	fe0 <Perl_av_len@plt>
    1998:	cmp	x26, w0, sxtw
    199c:	mov	x26, x21
    19a0:	b.ge	1aac <boot_Time__Piece@@Base+0x7d8>  // b.tcont
    19a4:	mov	x0, x19
    19a8:	mov	x1, x23
    19ac:	mov	x2, x26
    19b0:	mov	w3, wzr
    19b4:	bl	1180 <Perl_av_fetch@plt>
    19b8:	ldr	x8, [x0]
    19bc:	mov	x0, x19
    19c0:	mov	x1, x23
    19c4:	mov	x2, x26
    19c8:	ldr	w8, [x8, #12]
    19cc:	mov	w3, wzr
    19d0:	and	w21, w8, w28
    19d4:	bl	1180 <Perl_av_fetch@plt>
    19d8:	ldr	x1, [x0]
    19dc:	cmp	w21, #0x400
    19e0:	b.ne	19ec <boot_Time__Piece@@Base+0x718>  // b.any
    19e4:	ldr	x0, [x1, #16]
    19e8:	b	19fc <boot_Time__Piece@@Base+0x728>
    19ec:	mov	w3, #0x2                   	// #2
    19f0:	mov	x0, x19
    19f4:	mov	x2, xzr
    19f8:	bl	1030 <Perl_sv_2pv_flags@plt>
    19fc:	add	x8, x20, x26, lsl #3
    1a00:	str	x0, [x8, #336]
    1a04:	mov	x0, x19
    1a08:	mov	x1, x24
    1a0c:	mov	x2, x26
    1a10:	mov	w3, wzr
    1a14:	bl	1180 <Perl_av_fetch@plt>
    1a18:	ldr	x8, [x0]
    1a1c:	mov	x0, x19
    1a20:	mov	x1, x24
    1a24:	mov	x2, x26
    1a28:	ldr	w8, [x8, #12]
    1a2c:	mov	w3, wzr
    1a30:	and	w21, w8, w28
    1a34:	bl	1180 <Perl_av_fetch@plt>
    1a38:	ldr	x1, [x0]
    1a3c:	cmp	w21, #0x400
    1a40:	b.ne	1a4c <boot_Time__Piece@@Base+0x778>  // b.any
    1a44:	ldr	x0, [x1, #16]
    1a48:	b	1a5c <boot_Time__Piece@@Base+0x788>
    1a4c:	mov	w3, #0x2                   	// #2
    1a50:	mov	x0, x19
    1a54:	mov	x2, xzr
    1a58:	bl	1030 <Perl_sv_2pv_flags@plt>
    1a5c:	add	x8, x20, x26, lsl #3
    1a60:	str	x0, [x8, #96]
    1a64:	mov	x0, x19
    1a68:	mov	x1, x25
    1a6c:	mov	x2, x26
    1a70:	mov	w3, wzr
    1a74:	bl	1180 <Perl_av_fetch@plt>
    1a78:	ldr	x8, [x0]
    1a7c:	mov	x0, x19
    1a80:	mov	x1, x25
    1a84:	mov	x2, x26
    1a88:	ldr	w8, [x8, #12]
    1a8c:	mov	w3, wzr
    1a90:	and	w21, w8, w28
    1a94:	bl	1180 <Perl_av_fetch@plt>
    1a98:	ldr	x1, [x0]
    1a9c:	cmp	w21, #0x400
    1aa0:	b.ne	1974 <boot_Time__Piece@@Base+0x6a0>  // b.any
    1aa4:	ldr	x0, [x1, #16]
    1aa8:	b	1984 <boot_Time__Piece@@Base+0x6b0>
    1aac:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1ab0:	add	x2, x2, #0x88c
    1ab4:	mov	w3, #0x7                   	// #7
    1ab8:	mov	w4, #0x20                  	// #32
    1abc:	mov	x0, x19
    1ac0:	mov	x1, x22
    1ac4:	mov	x5, xzr
    1ac8:	mov	w6, wzr
    1acc:	bl	1190 <Perl_hv_common_key_len@plt>
    1ad0:	ldr	x8, [x0]
    1ad4:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1ad8:	add	x2, x2, #0x894
    1adc:	mov	w3, #0x4                   	// #4
    1ae0:	ldr	x23, [x8, #16]
    1ae4:	mov	w4, #0x20                  	// #32
    1ae8:	mov	x0, x19
    1aec:	mov	x1, x22
    1af0:	mov	x5, xzr
    1af4:	mov	w6, wzr
    1af8:	bl	1190 <Perl_hv_common_key_len@plt>
    1afc:	ldr	x8, [x0]
    1b00:	mov	x0, x19
    1b04:	mov	x1, x23
    1b08:	ldr	x24, [x8, #16]
    1b0c:	bl	fe0 <Perl_av_len@plt>
    1b10:	tbnz	w0, #31, 1bf8 <boot_Time__Piece@@Base+0x924>
    1b14:	mov	x25, xzr
    1b18:	b	1b50 <boot_Time__Piece@@Base+0x87c>
    1b1c:	mov	w3, #0x2                   	// #2
    1b20:	mov	x0, x19
    1b24:	mov	x2, xzr
    1b28:	bl	1030 <Perl_sv_2pv_flags@plt>
    1b2c:	add	x8, x20, x25, lsl #3
    1b30:	str	x0, [x8, #248]
    1b34:	mov	x0, x19
    1b38:	mov	x1, x23
    1b3c:	add	x21, x25, #0x1
    1b40:	bl	fe0 <Perl_av_len@plt>
    1b44:	cmp	x25, w0, sxtw
    1b48:	mov	x25, x21
    1b4c:	b.ge	1bf8 <boot_Time__Piece@@Base+0x924>  // b.tcont
    1b50:	mov	x0, x19
    1b54:	mov	x1, x24
    1b58:	mov	x2, x25
    1b5c:	mov	w3, wzr
    1b60:	bl	1180 <Perl_av_fetch@plt>
    1b64:	ldr	x8, [x0]
    1b68:	mov	x0, x19
    1b6c:	mov	x1, x24
    1b70:	mov	x2, x25
    1b74:	ldr	w8, [x8, #12]
    1b78:	mov	w3, wzr
    1b7c:	and	w21, w8, w28
    1b80:	bl	1180 <Perl_av_fetch@plt>
    1b84:	ldr	x1, [x0]
    1b88:	cmp	w21, #0x400
    1b8c:	b.ne	1b98 <boot_Time__Piece@@Base+0x8c4>  // b.any
    1b90:	ldr	x0, [x1, #16]
    1b94:	b	1ba8 <boot_Time__Piece@@Base+0x8d4>
    1b98:	mov	w3, #0x2                   	// #2
    1b9c:	mov	x0, x19
    1ba0:	mov	x2, xzr
    1ba4:	bl	1030 <Perl_sv_2pv_flags@plt>
    1ba8:	add	x8, x20, x25, lsl #3
    1bac:	str	x0, [x8, #192]
    1bb0:	mov	x0, x19
    1bb4:	mov	x1, x23
    1bb8:	mov	x2, x25
    1bbc:	mov	w3, wzr
    1bc0:	bl	1180 <Perl_av_fetch@plt>
    1bc4:	ldr	x8, [x0]
    1bc8:	mov	x0, x19
    1bcc:	mov	x1, x23
    1bd0:	mov	x2, x25
    1bd4:	ldr	w8, [x8, #12]
    1bd8:	mov	w3, wzr
    1bdc:	and	w21, w8, w28
    1be0:	bl	1180 <Perl_av_fetch@plt>
    1be4:	ldr	x1, [x0]
    1be8:	cmp	w21, #0x400
    1bec:	b.ne	1b1c <boot_Time__Piece@@Base+0x848>  // b.any
    1bf0:	ldr	x0, [x1, #16]
    1bf4:	b	1b2c <boot_Time__Piece@@Base+0x858>
    1bf8:	adrp	x23, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1bfc:	add	x23, x23, #0x899
    1c00:	mov	w3, #0x2                   	// #2
    1c04:	mov	w4, #0x20                  	// #32
    1c08:	mov	x0, x19
    1c0c:	mov	x1, x22
    1c10:	mov	x2, x23
    1c14:	mov	x5, xzr
    1c18:	mov	w6, wzr
    1c1c:	bl	1190 <Perl_hv_common_key_len@plt>
    1c20:	ldr	x8, [x0]
    1c24:	mov	w3, #0x2                   	// #2
    1c28:	mov	w4, #0x20                  	// #32
    1c2c:	mov	x0, x19
    1c30:	ldr	w8, [x8, #12]
    1c34:	mov	x1, x22
    1c38:	mov	x2, x23
    1c3c:	mov	x5, xzr
    1c40:	mov	w6, wzr
    1c44:	and	w20, w8, w28
    1c48:	bl	1190 <Perl_hv_common_key_len@plt>
    1c4c:	ldr	x1, [x0]
    1c50:	cmp	w20, #0x400
    1c54:	b.ne	1c60 <boot_Time__Piece@@Base+0x98c>  // b.any
    1c58:	ldr	x0, [x1, #16]
    1c5c:	b	1c70 <boot_Time__Piece@@Base+0x99c>
    1c60:	mov	w3, #0x2                   	// #2
    1c64:	mov	x0, x19
    1c68:	mov	x2, xzr
    1c6c:	bl	1030 <Perl_sv_2pv_flags@plt>
    1c70:	adrp	x23, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1c74:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1c78:	add	x23, x23, #0x89c
    1c7c:	str	x0, [x8, #640]
    1c80:	mov	w3, #0x2                   	// #2
    1c84:	mov	w4, #0x20                  	// #32
    1c88:	mov	x0, x19
    1c8c:	mov	x1, x22
    1c90:	mov	x2, x23
    1c94:	mov	x5, xzr
    1c98:	mov	w6, wzr
    1c9c:	bl	1190 <Perl_hv_common_key_len@plt>
    1ca0:	ldr	x8, [x0]
    1ca4:	mov	w3, #0x2                   	// #2
    1ca8:	mov	w4, #0x20                  	// #32
    1cac:	mov	x0, x19
    1cb0:	ldr	w8, [x8, #12]
    1cb4:	mov	x1, x22
    1cb8:	mov	x2, x23
    1cbc:	mov	x5, xzr
    1cc0:	mov	w6, wzr
    1cc4:	and	w20, w8, w28
    1cc8:	bl	1190 <Perl_hv_common_key_len@plt>
    1ccc:	ldr	x1, [x0]
    1cd0:	cmp	w20, #0x400
    1cd4:	b.ne	1ce0 <boot_Time__Piece@@Base+0xa0c>  // b.any
    1cd8:	ldr	x0, [x1, #16]
    1cdc:	b	1cf0 <boot_Time__Piece@@Base+0xa1c>
    1ce0:	mov	w3, #0x2                   	// #2
    1ce4:	mov	x0, x19
    1ce8:	mov	x2, xzr
    1cec:	bl	1030 <Perl_sv_2pv_flags@plt>
    1cf0:	adrp	x23, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1cf4:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1cf8:	add	x23, x23, #0x89f
    1cfc:	str	x0, [x8, #648]
    1d00:	mov	w3, #0x2                   	// #2
    1d04:	mov	w4, #0x20                  	// #32
    1d08:	mov	x0, x19
    1d0c:	mov	x1, x22
    1d10:	mov	x2, x23
    1d14:	mov	x5, xzr
    1d18:	mov	w6, wzr
    1d1c:	bl	1190 <Perl_hv_common_key_len@plt>
    1d20:	ldr	x8, [x0]
    1d24:	mov	w3, #0x2                   	// #2
    1d28:	mov	w4, #0x20                  	// #32
    1d2c:	mov	x0, x19
    1d30:	ldr	w8, [x8, #12]
    1d34:	mov	x1, x22
    1d38:	mov	x2, x23
    1d3c:	mov	x5, xzr
    1d40:	mov	w6, wzr
    1d44:	and	w20, w8, w28
    1d48:	bl	1190 <Perl_hv_common_key_len@plt>
    1d4c:	ldr	x1, [x0]
    1d50:	cmp	w20, #0x400
    1d54:	b.ne	1d60 <boot_Time__Piece@@Base+0xa8c>  // b.any
    1d58:	ldr	x0, [x1, #16]
    1d5c:	b	1d70 <boot_Time__Piece@@Base+0xa9c>
    1d60:	mov	w3, #0x2                   	// #2
    1d64:	mov	x0, x19
    1d68:	mov	x2, xzr
    1d6c:	bl	1030 <Perl_sv_2pv_flags@plt>
    1d70:	adrp	x23, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1d74:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1d78:	add	x23, x23, #0x8a2
    1d7c:	str	x0, [x8, #656]
    1d80:	mov	w3, #0x2                   	// #2
    1d84:	mov	w4, #0x20                  	// #32
    1d88:	mov	x0, x19
    1d8c:	mov	x1, x22
    1d90:	mov	x2, x23
    1d94:	mov	x5, xzr
    1d98:	mov	w6, wzr
    1d9c:	bl	1190 <Perl_hv_common_key_len@plt>
    1da0:	ldr	x8, [x0]
    1da4:	mov	w3, #0x2                   	// #2
    1da8:	mov	w4, #0x20                  	// #32
    1dac:	mov	x0, x19
    1db0:	ldr	w8, [x8, #12]
    1db4:	mov	x1, x22
    1db8:	mov	x2, x23
    1dbc:	mov	x5, xzr
    1dc0:	mov	w6, wzr
    1dc4:	and	w20, w8, w28
    1dc8:	bl	1190 <Perl_hv_common_key_len@plt>
    1dcc:	ldr	x1, [x0]
    1dd0:	cmp	w20, #0x400
    1dd4:	b.ne	1de0 <boot_Time__Piece@@Base+0xb0c>  // b.any
    1dd8:	ldr	x0, [x1, #16]
    1ddc:	b	1df0 <boot_Time__Piece@@Base+0xb1c>
    1de0:	mov	w3, #0x2                   	// #2
    1de4:	mov	x0, x19
    1de8:	mov	x2, xzr
    1dec:	bl	1030 <Perl_sv_2pv_flags@plt>
    1df0:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    1df4:	str	x0, [x8, #664]
    1df8:	ldp	x1, x0, [sp]
    1dfc:	add	x2, sp, #0x10
    1e00:	sub	x3, x29, #0xc
    1e04:	bl	2690 <boot_Time__Piece@@Base+0x13bc>
    1e08:	cbz	x0, 1ea0 <boot_Time__Piece@@Base+0xbcc>
    1e0c:	ldrb	w8, [x0]
    1e10:	mov	x1, x0
    1e14:	sub	x20, x27, #0x20
    1e18:	cbz	w8, 1e34 <boot_Time__Piece@@Base+0xb60>
    1e1c:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e20:	add	x0, x0, #0x81f
    1e24:	bl	ff0 <Perl_warn_nocontext@plt>
    1e28:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e2c:	add	x0, x0, #0x848
    1e30:	bl	ff0 <Perl_warn_nocontext@plt>
    1e34:	add	x2, sp, #0x10
    1e38:	mov	x0, x19
    1e3c:	mov	x1, x20
    1e40:	bl	3074 <boot_Time__Piece@@Base+0x1da0>
    1e44:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1e48:	ldur	x8, [x29, #-8]
    1e4c:	ldr	x9, [x9, #4056]
    1e50:	ldr	x9, [x9]
    1e54:	cmp	x9, x8
    1e58:	b.ne	1e7c <boot_Time__Piece@@Base+0xba8>  // b.any
    1e5c:	ldp	x20, x19, [sp, #176]
    1e60:	ldp	x22, x21, [sp, #160]
    1e64:	ldp	x24, x23, [sp, #144]
    1e68:	ldp	x26, x25, [sp, #128]
    1e6c:	ldp	x28, x27, [sp, #112]
    1e70:	ldp	x29, x30, [sp, #96]
    1e74:	add	sp, sp, #0xc0
    1e78:	ret
    1e7c:	bl	1070 <__stack_chk_fail@plt>
    1e80:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e84:	add	x8, x8, #0x7b7
    1e88:	mov	x0, x1
    1e8c:	mov	x1, x8
    1e90:	bl	1090 <Perl_croak_xs_usage@plt>
    1e94:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1e98:	add	x0, x0, #0x7dd
    1e9c:	bl	1100 <Perl_croak_nocontext@plt>
    1ea0:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    1ea4:	add	x0, x0, #0x80c
    1ea8:	bl	1100 <Perl_croak_nocontext@plt>
    1eac:	sub	sp, sp, #0xb0
    1eb0:	stp	x29, x30, [sp, #80]
    1eb4:	str	x27, [sp, #96]
    1eb8:	stp	x26, x25, [sp, #112]
    1ebc:	stp	x24, x23, [sp, #128]
    1ec0:	stp	x22, x21, [sp, #144]
    1ec4:	stp	x20, x19, [sp, #160]
    1ec8:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    1ecc:	ldr	x8, [x8, #4056]
    1ed0:	add	x29, sp, #0x50
    1ed4:	ldr	x8, [x8]
    1ed8:	stur	x8, [x29, #-8]
    1edc:	ldr	x8, [x0, #120]
    1ee0:	ldr	x24, [x0]
    1ee4:	sub	x9, x8, #0x4
    1ee8:	str	x9, [x0, #120]
    1eec:	ldr	w26, [x8]
    1ef0:	ldr	x8, [x0, #24]
    1ef4:	add	x9, x8, x26, lsl #3
    1ef8:	sub	x9, x24, x9
    1efc:	and	x9, x9, #0x7fffffff8
    1f00:	cmp	x9, #0x30
    1f04:	b.ne	20e0 <boot_Time__Piece@@Base+0xe0c>  // b.any
    1f08:	add	w9, w26, #0x1
    1f0c:	ldr	x1, [x8, w9, sxtw #3]
    1f10:	mov	w27, #0x100                 	// #256
    1f14:	movk	w27, #0x20, lsl #16
    1f18:	mov	x19, x0
    1f1c:	ldr	w9, [x1, #12]
    1f20:	and	w9, w9, w27
    1f24:	cmp	w9, #0x100
    1f28:	b.ne	1f38 <boot_Time__Piece@@Base+0xc64>  // b.any
    1f2c:	ldr	x9, [x1]
    1f30:	ldr	x20, [x9, #32]
    1f34:	b	1f4c <boot_Time__Piece@@Base+0xc78>
    1f38:	mov	w2, #0x2                   	// #2
    1f3c:	mov	x0, x19
    1f40:	bl	f80 <Perl_sv_2iv_flags@plt>
    1f44:	ldr	x8, [x19, #24]
    1f48:	mov	x20, x0
    1f4c:	add	w9, w26, #0x2
    1f50:	ldr	x1, [x8, w9, sxtw #3]
    1f54:	ldr	w9, [x1, #12]
    1f58:	and	w9, w9, w27
    1f5c:	cmp	w9, #0x100
    1f60:	b.ne	1f70 <boot_Time__Piece@@Base+0xc9c>  // b.any
    1f64:	ldr	x9, [x1]
    1f68:	ldr	x21, [x9, #32]
    1f6c:	b	1f84 <boot_Time__Piece@@Base+0xcb0>
    1f70:	mov	w2, #0x2                   	// #2
    1f74:	mov	x0, x19
    1f78:	bl	f80 <Perl_sv_2iv_flags@plt>
    1f7c:	ldr	x8, [x19, #24]
    1f80:	mov	x21, x0
    1f84:	add	w9, w26, #0x3
    1f88:	ldr	x1, [x8, w9, sxtw #3]
    1f8c:	ldr	w9, [x1, #12]
    1f90:	and	w9, w9, w27
    1f94:	cmp	w9, #0x100
    1f98:	b.ne	1fa8 <boot_Time__Piece@@Base+0xcd4>  // b.any
    1f9c:	ldr	x9, [x1]
    1fa0:	ldr	x22, [x9, #32]
    1fa4:	b	1fbc <boot_Time__Piece@@Base+0xce8>
    1fa8:	mov	w2, #0x2                   	// #2
    1fac:	mov	x0, x19
    1fb0:	bl	f80 <Perl_sv_2iv_flags@plt>
    1fb4:	ldr	x8, [x19, #24]
    1fb8:	mov	x22, x0
    1fbc:	add	w9, w26, #0x4
    1fc0:	ldr	x1, [x8, w9, sxtw #3]
    1fc4:	ldr	w9, [x1, #12]
    1fc8:	and	w9, w9, w27
    1fcc:	cmp	w9, #0x100
    1fd0:	b.ne	1fe0 <boot_Time__Piece@@Base+0xd0c>  // b.any
    1fd4:	ldr	x9, [x1]
    1fd8:	ldr	x23, [x9, #32]
    1fdc:	b	1ff4 <boot_Time__Piece@@Base+0xd20>
    1fe0:	mov	w2, #0x2                   	// #2
    1fe4:	mov	x0, x19
    1fe8:	bl	f80 <Perl_sv_2iv_flags@plt>
    1fec:	ldr	x8, [x19, #24]
    1ff0:	mov	x23, x0
    1ff4:	add	w9, w26, #0x5
    1ff8:	ldr	x1, [x8, w9, sxtw #3]
    1ffc:	sub	x24, x24, #0x30
    2000:	ldr	w9, [x1, #12]
    2004:	and	w9, w9, w27
    2008:	cmp	w9, #0x100
    200c:	b.ne	201c <boot_Time__Piece@@Base+0xd48>  // b.any
    2010:	ldr	x9, [x1]
    2014:	ldr	x25, [x9, #32]
    2018:	b	2030 <boot_Time__Piece@@Base+0xd5c>
    201c:	mov	w2, #0x2                   	// #2
    2020:	mov	x0, x19
    2024:	bl	f80 <Perl_sv_2iv_flags@plt>
    2028:	ldr	x8, [x19, #24]
    202c:	mov	x25, x0
    2030:	add	w9, w26, #0x6
    2034:	ldr	x1, [x8, w9, sxtw #3]
    2038:	ldr	w8, [x1, #12]
    203c:	and	w8, w8, w27
    2040:	cmp	w8, #0x100
    2044:	b.ne	2054 <boot_Time__Piece@@Base+0xd80>  // b.any
    2048:	ldr	x8, [x1]
    204c:	ldr	x26, [x8, #32]
    2050:	b	2064 <boot_Time__Piece@@Base+0xd90>
    2054:	mov	w2, #0x2                   	// #2
    2058:	mov	x0, x19
    205c:	bl	f80 <Perl_sv_2iv_flags@plt>
    2060:	mov	x26, x0
    2064:	add	x0, sp, #0x8
    2068:	str	xzr, [sp, #8]
    206c:	bl	1060 <gmtime@plt>
    2070:	ldp	q0, q1, [x0]
    2074:	ldr	x8, [x0, #48]
    2078:	ldr	q2, [x0, #32]
    207c:	add	x2, sp, #0x10
    2080:	mov	x0, x19
    2084:	mov	x1, x24
    2088:	stp	q0, q1, [sp, #16]
    208c:	str	x8, [sp, #64]
    2090:	str	q2, [sp, #48]
    2094:	stp	w20, w21, [sp, #16]
    2098:	stp	w22, w23, [sp, #24]
    209c:	stp	w25, w26, [sp, #32]
    20a0:	bl	3074 <boot_Time__Piece@@Base+0x1da0>
    20a4:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    20a8:	ldur	x8, [x29, #-8]
    20ac:	ldr	x9, [x9, #4056]
    20b0:	ldr	x9, [x9]
    20b4:	cmp	x9, x8
    20b8:	b.ne	20dc <boot_Time__Piece@@Base+0xe08>  // b.any
    20bc:	ldp	x20, x19, [sp, #160]
    20c0:	ldp	x22, x21, [sp, #144]
    20c4:	ldp	x24, x23, [sp, #128]
    20c8:	ldp	x26, x25, [sp, #112]
    20cc:	ldr	x27, [sp, #96]
    20d0:	ldp	x29, x30, [sp, #80]
    20d4:	add	sp, sp, #0xb0
    20d8:	ret
    20dc:	bl	1070 <__stack_chk_fail@plt>
    20e0:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    20e4:	add	x8, x8, #0x900
    20e8:	mov	x0, x1
    20ec:	mov	x1, x8
    20f0:	bl	1090 <Perl_croak_xs_usage@plt>
    20f4:	sub	sp, sp, #0x80
    20f8:	stp	x29, x30, [sp, #80]
    20fc:	str	x21, [sp, #96]
    2100:	stp	x20, x19, [sp, #112]
    2104:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    2108:	ldr	x8, [x8, #4056]
    210c:	add	x29, sp, #0x50
    2110:	mov	x19, x0
    2114:	ldr	x8, [x8]
    2118:	stur	x8, [x29, #-8]
    211c:	ldr	x8, [x0, #120]
    2120:	ldr	x20, [x0]
    2124:	sub	x9, x8, #0x4
    2128:	str	x9, [x0, #120]
    212c:	ldrsw	x8, [x8]
    2130:	ldr	x9, [x0, #24]
    2134:	mov	x0, x1
    2138:	add	x8, x9, x8, lsl #3
    213c:	sub	x9, x20, x8
    2140:	and	x9, x9, #0x7fffffff8
    2144:	cmp	x9, #0x8
    2148:	b.ne	2260 <boot_Time__Piece@@Base+0xf8c>  // b.any
    214c:	ldr	x1, [x8, #8]
    2150:	ldr	x8, [x0]
    2154:	ldr	w9, [x1, #12]
    2158:	ldr	w21, [x8, #40]
    215c:	mov	w8, #0x200                 	// #512
    2160:	movk	w8, #0x20, lsl #16
    2164:	and	w8, w9, w8
    2168:	cmp	w8, #0x200
    216c:	b.ne	217c <boot_Time__Piece@@Base+0xea8>  // b.any
    2170:	ldr	x8, [x1]
    2174:	ldr	d0, [x8, #40]
    2178:	b	2188 <boot_Time__Piece@@Base+0xeb4>
    217c:	mov	w2, #0x2                   	// #2
    2180:	mov	x0, x19
    2184:	bl	10a0 <Perl_sv_2nv_flags@plt>
    2188:	sub	x20, x20, #0x8
    218c:	fcvtzs	x8, d0
    2190:	add	x0, sp, #0x8
    2194:	str	x8, [sp, #8]
    2198:	cbz	w21, 21a4 <boot_Time__Piece@@Base+0xed0>
    219c:	bl	1060 <gmtime@plt>
    21a0:	b	21a8 <boot_Time__Piece@@Base+0xed4>
    21a4:	bl	1000 <localtime@plt>
    21a8:	ldr	x8, [x0, #48]
    21ac:	ldp	q1, q0, [x0, #16]
    21b0:	ldr	q2, [x0]
    21b4:	str	x8, [sp, #64]
    21b8:	stp	q1, q0, [sp, #32]
    21bc:	str	q2, [sp, #16]
    21c0:	ldr	x8, [x19, #32]
    21c4:	sub	x8, x8, x20
    21c8:	cmp	x8, #0x4f
    21cc:	b.le	2240 <boot_Time__Piece@@Base+0xf6c>
    21d0:	add	x2, sp, #0x10
    21d4:	mov	x0, x19
    21d8:	mov	x1, x20
    21dc:	bl	3504 <boot_Time__Piece@@Base+0x2230>
    21e0:	ldrsw	x1, [sp, #48]
    21e4:	mov	x20, x0
    21e8:	mov	x0, x19
    21ec:	bl	11d0 <Perl_newSViv@plt>
    21f0:	mov	x8, x20
    21f4:	str	x0, [x8, #8]!
    21f8:	sub	x21, x20, #0x48
    21fc:	str	x8, [x19]
    2200:	ldr	x1, [x21, #8]!
    2204:	mov	x0, x19
    2208:	bl	1140 <Perl_sv_2mortal@plt>
    220c:	cmp	x21, x20
    2210:	b.ls	2200 <boot_Time__Piece@@Base+0xf2c>  // b.plast
    2214:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    2218:	ldur	x8, [x29, #-8]
    221c:	ldr	x9, [x9, #4056]
    2220:	ldr	x9, [x9]
    2224:	cmp	x9, x8
    2228:	b.ne	225c <boot_Time__Piece@@Base+0xf88>  // b.any
    222c:	ldp	x20, x19, [sp, #112]
    2230:	ldr	x21, [sp, #96]
    2234:	ldp	x29, x30, [sp, #80]
    2238:	add	sp, sp, #0x80
    223c:	ret
    2240:	mov	w3, #0xa                   	// #10
    2244:	mov	x0, x19
    2248:	mov	x1, x20
    224c:	mov	x2, x20
    2250:	bl	fb0 <Perl_stack_grow@plt>
    2254:	mov	x20, x0
    2258:	b	21d0 <boot_Time__Piece@@Base+0xefc>
    225c:	bl	1070 <__stack_chk_fail@plt>
    2260:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2264:	add	x1, x1, #0x920
    2268:	bl	1090 <Perl_croak_xs_usage@plt>
    226c:	sub	sp, sp, #0x150
    2270:	stp	x29, x30, [sp, #240]
    2274:	stp	x28, x27, [sp, #256]
    2278:	stp	x26, x25, [sp, #272]
    227c:	stp	x24, x23, [sp, #288]
    2280:	stp	x22, x21, [sp, #304]
    2284:	stp	x20, x19, [sp, #320]
    2288:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    228c:	ldr	x8, [x8, #4056]
    2290:	add	x29, sp, #0xf0
    2294:	ldr	x8, [x8]
    2298:	stur	x8, [x29, #-16]
    229c:	ldr	x8, [x0, #120]
    22a0:	ldr	x10, [x0]
    22a4:	sub	x9, x8, #0x4
    22a8:	str	x9, [x0, #120]
    22ac:	ldrsw	x8, [x8]
    22b0:	ldr	x9, [x0, #24]
    22b4:	add	x9, x9, x8, lsl #3
    22b8:	sub	x9, x10, x9
    22bc:	tst	x9, #0x7fffffff8
    22c0:	b.ne	267c <boot_Time__Piece@@Base+0x13a8>  // b.any
    22c4:	mov	w1, #0xc                   	// #12
    22c8:	mov	x19, x0
    22cc:	add	x27, x8, #0x1
    22d0:	bl	11b0 <Perl_newSV_type@plt>
    22d4:	mov	x20, x0
    22d8:	mov	w1, #0xb                   	// #11
    22dc:	mov	x0, x19
    22e0:	bl	11b0 <Perl_newSV_type@plt>
    22e4:	mov	x24, x0
    22e8:	mov	w1, #0xb                   	// #11
    22ec:	mov	x0, x19
    22f0:	bl	11b0 <Perl_newSV_type@plt>
    22f4:	mov	x23, x0
    22f8:	mov	w1, #0xb                   	// #11
    22fc:	mov	x0, x19
    2300:	bl	11b0 <Perl_newSV_type@plt>
    2304:	mov	x22, x0
    2308:	mov	w1, #0xb                   	// #11
    230c:	mov	x0, x19
    2310:	bl	11b0 <Perl_newSV_type@plt>
    2314:	mov	w8, #0xcc30                	// #52272
    2318:	mov	x21, x0
    231c:	movk	w8, #0x4eff, lsl #16
    2320:	add	x0, sp, #0x38
    2324:	str	x8, [sp, #56]
    2328:	bl	1060 <gmtime@plt>
    232c:	ldp	q1, q0, [x0, #16]
    2330:	ldr	x8, [x0, #48]
    2334:	ldr	q2, [x0]
    2338:	adrp	x25, 3000 <boot_Time__Piece@@Base+0x1d2c>
    233c:	adrp	x26, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2340:	mov	w28, #0x7                   	// #7
    2344:	add	x25, x25, #0x924
    2348:	add	x26, x26, #0x927
    234c:	str	x8, [sp, #48]
    2350:	stp	q1, q0, [sp, #16]
    2354:	str	q2, [sp]
    2358:	add	x0, sp, #0x40
    235c:	mov	x3, sp
    2360:	mov	w1, #0xa0                  	// #160
    2364:	mov	x2, x25
    2368:	bl	fd0 <strftime@plt>
    236c:	mov	x2, x0
    2370:	add	x1, sp, #0x40
    2374:	mov	x0, x19
    2378:	bl	11f0 <Perl_newSVpvn@plt>
    237c:	mov	x2, x0
    2380:	mov	x0, x19
    2384:	mov	x1, x24
    2388:	bl	10b0 <Perl_av_push@plt>
    238c:	add	x0, sp, #0x40
    2390:	mov	x3, sp
    2394:	mov	w1, #0xa0                  	// #160
    2398:	mov	x2, x26
    239c:	bl	fd0 <strftime@plt>
    23a0:	mov	x2, x0
    23a4:	add	x1, sp, #0x40
    23a8:	mov	x0, x19
    23ac:	bl	11f0 <Perl_newSVpvn@plt>
    23b0:	mov	x2, x0
    23b4:	mov	x0, x19
    23b8:	mov	x1, x23
    23bc:	bl	10b0 <Perl_av_push@plt>
    23c0:	ldr	w8, [sp, #24]
    23c4:	subs	x28, x28, #0x1
    23c8:	add	w8, w8, #0x1
    23cc:	str	w8, [sp, #24]
    23d0:	b.ne	2358 <boot_Time__Piece@@Base+0x1084>  // b.any
    23d4:	adrp	x25, 3000 <boot_Time__Piece@@Base+0x1d2c>
    23d8:	adrp	x26, 3000 <boot_Time__Piece@@Base+0x1d2c>
    23dc:	mov	w28, #0xc                   	// #12
    23e0:	add	x25, x25, #0x92a
    23e4:	add	x26, x26, #0x92d
    23e8:	add	x0, sp, #0x40
    23ec:	mov	x3, sp
    23f0:	mov	w1, #0xa0                  	// #160
    23f4:	mov	x2, x25
    23f8:	bl	fd0 <strftime@plt>
    23fc:	mov	x2, x0
    2400:	add	x1, sp, #0x40
    2404:	mov	x0, x19
    2408:	bl	11f0 <Perl_newSVpvn@plt>
    240c:	mov	x2, x0
    2410:	mov	x0, x19
    2414:	mov	x1, x22
    2418:	bl	10b0 <Perl_av_push@plt>
    241c:	add	x0, sp, #0x40
    2420:	mov	x3, sp
    2424:	mov	w1, #0xa0                  	// #160
    2428:	mov	x2, x26
    242c:	bl	fd0 <strftime@plt>
    2430:	mov	x2, x0
    2434:	add	x1, sp, #0x40
    2438:	mov	x0, x19
    243c:	bl	11f0 <Perl_newSVpvn@plt>
    2440:	mov	x2, x0
    2444:	mov	x0, x19
    2448:	mov	x1, x21
    244c:	bl	10b0 <Perl_av_push@plt>
    2450:	ldr	w8, [sp, #16]
    2454:	subs	x28, x28, #0x1
    2458:	add	w8, w8, #0x1
    245c:	str	w8, [sp, #16]
    2460:	b.ne	23e8 <boot_Time__Piece@@Base+0x1114>  // b.any
    2464:	mov	x0, x19
    2468:	mov	x1, x24
    246c:	bl	fa0 <Perl_newRV_noinc@plt>
    2470:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2474:	mov	x5, x0
    2478:	add	x2, x2, #0x894
    247c:	mov	w3, #0x4                   	// #4
    2480:	mov	w4, #0x24                  	// #36
    2484:	mov	x0, x19
    2488:	mov	x1, x20
    248c:	mov	w6, wzr
    2490:	bl	1190 <Perl_hv_common_key_len@plt>
    2494:	mov	x0, x19
    2498:	mov	x1, x23
    249c:	bl	fa0 <Perl_newRV_noinc@plt>
    24a0:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    24a4:	mov	x5, x0
    24a8:	add	x2, x2, #0x88c
    24ac:	mov	w3, #0x7                   	// #7
    24b0:	mov	w4, #0x24                  	// #36
    24b4:	mov	x0, x19
    24b8:	mov	x1, x20
    24bc:	mov	w6, wzr
    24c0:	bl	1190 <Perl_hv_common_key_len@plt>
    24c4:	mov	x0, x19
    24c8:	mov	x1, x22
    24cc:	bl	fa0 <Perl_newRV_noinc@plt>
    24d0:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    24d4:	mov	x5, x0
    24d8:	add	x2, x2, #0x888
    24dc:	mov	w3, #0x3                   	// #3
    24e0:	mov	w4, #0x24                  	// #36
    24e4:	mov	x0, x19
    24e8:	mov	x1, x20
    24ec:	mov	w6, wzr
    24f0:	bl	1190 <Perl_hv_common_key_len@plt>
    24f4:	mov	x0, x19
    24f8:	mov	x1, x21
    24fc:	bl	fa0 <Perl_newRV_noinc@plt>
    2500:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2504:	mov	x5, x0
    2508:	add	x2, x2, #0x882
    250c:	mov	w3, #0x5                   	// #5
    2510:	mov	w4, #0x24                  	// #36
    2514:	mov	x0, x19
    2518:	mov	x1, x20
    251c:	mov	w6, wzr
    2520:	bl	1190 <Perl_hv_common_key_len@plt>
    2524:	mov	x0, x19
    2528:	mov	x1, x21
    252c:	bl	11a0 <Perl_newRV@plt>
    2530:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2534:	mov	x5, x0
    2538:	add	x2, x2, #0x87e
    253c:	mov	w3, #0x9                   	// #9
    2540:	mov	w4, #0x24                  	// #36
    2544:	mov	x0, x19
    2548:	mov	x1, x20
    254c:	mov	w6, wzr
    2550:	bl	1190 <Perl_hv_common_key_len@plt>
    2554:	adrp	x21, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2558:	add	x21, x21, #0x8e4
    255c:	add	x0, sp, #0x40
    2560:	mov	x3, sp
    2564:	mov	w1, #0xa0                  	// #160
    2568:	mov	x2, x21
    256c:	bl	fd0 <strftime@plt>
    2570:	mov	x2, x0
    2574:	add	x1, sp, #0x40
    2578:	mov	x0, x19
    257c:	bl	11f0 <Perl_newSVpvn@plt>
    2580:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2584:	mov	x5, x0
    2588:	add	x2, x2, #0x89f
    258c:	mov	w3, #0x2                   	// #2
    2590:	mov	w4, #0x24                  	// #36
    2594:	mov	x0, x19
    2598:	mov	x1, x20
    259c:	mov	w6, wzr
    25a0:	bl	1190 <Perl_hv_common_key_len@plt>
    25a4:	mov	w8, #0x12                  	// #18
    25a8:	add	x0, sp, #0x40
    25ac:	mov	x3, sp
    25b0:	mov	w1, #0xa0                  	// #160
    25b4:	mov	x2, x21
    25b8:	str	w8, [sp, #8]
    25bc:	bl	fd0 <strftime@plt>
    25c0:	mov	x2, x0
    25c4:	add	x1, sp, #0x40
    25c8:	mov	x0, x19
    25cc:	bl	11f0 <Perl_newSVpvn@plt>
    25d0:	adrp	x2, 3000 <boot_Time__Piece@@Base+0x1d2c>
    25d4:	mov	x5, x0
    25d8:	add	x2, x2, #0x8a2
    25dc:	mov	w3, #0x2                   	// #2
    25e0:	mov	w4, #0x24                  	// #36
    25e4:	mov	x0, x19
    25e8:	mov	x1, x20
    25ec:	mov	w6, wzr
    25f0:	bl	1190 <Perl_hv_common_key_len@plt>
    25f4:	cbz	x0, 2670 <boot_Time__Piece@@Base+0x139c>
    25f8:	ldr	x8, [x0]
    25fc:	ldrb	w8, [x8, #13]
    2600:	cbz	w8, 2670 <boot_Time__Piece@@Base+0x139c>
    2604:	mov	x0, x19
    2608:	mov	x1, x20
    260c:	bl	fa0 <Perl_newRV_noinc@plt>
    2610:	mov	x1, x0
    2614:	mov	x0, x19
    2618:	bl	1140 <Perl_sv_2mortal@plt>
    261c:	ldr	x8, [x19, #24]
    2620:	lsl	x9, x27, #3
    2624:	str	x0, [x8, x9]
    2628:	ldr	x8, [x19, #24]
    262c:	add	x8, x8, x9
    2630:	str	x8, [x19]
    2634:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    2638:	ldur	x8, [x29, #-16]
    263c:	ldr	x9, [x9, #4056]
    2640:	ldr	x9, [x9]
    2644:	cmp	x9, x8
    2648:	b.ne	266c <boot_Time__Piece@@Base+0x1398>  // b.any
    264c:	ldp	x20, x19, [sp, #320]
    2650:	ldp	x22, x21, [sp, #304]
    2654:	ldp	x24, x23, [sp, #288]
    2658:	ldp	x26, x25, [sp, #272]
    265c:	ldp	x28, x27, [sp, #256]
    2660:	ldp	x29, x30, [sp, #240]
    2664:	add	sp, sp, #0x150
    2668:	ret
    266c:	bl	1070 <__stack_chk_fail@plt>
    2670:	adrp	x0, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2674:	add	x0, x0, #0x930
    2678:	bl	1100 <Perl_croak_nocontext@plt>
    267c:	adrp	x8, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2680:	add	x8, x8, #0x74a
    2684:	mov	x0, x1
    2688:	mov	x1, x8
    268c:	bl	1090 <Perl_croak_xs_usage@plt>
    2690:	sub	sp, sp, #0x80
    2694:	stp	x29, x30, [sp, #32]
    2698:	stp	x28, x27, [sp, #48]
    269c:	stp	x26, x25, [sp, #64]
    26a0:	stp	x24, x23, [sp, #80]
    26a4:	stp	x22, x21, [sp, #96]
    26a8:	stp	x20, x19, [sp, #112]
    26ac:	adrp	x8, 13000 <boot_Time__Piece@@Base+0x11d2c>
    26b0:	ldr	x8, [x8, #4056]
    26b4:	add	x29, sp, #0x20
    26b8:	mov	x22, x0
    26bc:	ldr	x8, [x8]
    26c0:	stur	x8, [x29, #-8]
    26c4:	ldrb	w24, [x1]
    26c8:	cbz	w24, 3014 <boot_Time__Piece@@Base+0x1d40>
    26cc:	adrp	x25, 3000 <boot_Time__Piece@@Base+0x1d2c>
    26d0:	mov	x19, x3
    26d4:	mov	x20, x2
    26d8:	mov	x21, x1
    26dc:	add	x25, x25, #0x5d8
    26e0:	b	26fc <boot_Time__Piece@@Base+0x1428>
    26e4:	cmp	w23, w24, uxtb
    26e8:	b.ne	3010 <boot_Time__Piece@@Base+0x1d3c>  // b.any
    26ec:	add	x22, x22, #0x1
    26f0:	add	x21, x21, #0x1
    26f4:	ldrb	w24, [x21]
    26f8:	cbz	w24, 3014 <boot_Time__Piece@@Base+0x1d40>
    26fc:	ldrb	w23, [x22]
    2700:	cbz	x23, 3014 <boot_Time__Piece@@Base+0x1d40>
    2704:	and	w8, w24, #0xff
    2708:	cmp	w8, #0x25
    270c:	b.ne	2764 <boot_Time__Piece@@Base+0x1490>  // b.any
    2710:	mov	w8, wzr
    2714:	mov	w27, wzr
    2718:	add	x21, x21, #0x2
    271c:	ldurb	w26, [x21, #-1]
    2720:	cmp	w26, #0x7a
    2724:	b.hi	26f4 <boot_Time__Piece@@Base+0x1420>  // b.pmore
    2728:	adr	x9, 26f4 <boot_Time__Piece@@Base+0x1420>
    272c:	ldrh	w10, [x25, x26, lsl #1]
    2730:	add	x9, x9, x10, lsl #2
    2734:	br	x9
    2738:	orr	w8, w27, w8
    273c:	cbnz	w8, 26f4 <boot_Time__Piece@@Base+0x1420>
    2740:	mov	w27, wzr
    2744:	mov	w8, #0x1                   	// #1
    2748:	add	x21, x21, #0x1
    274c:	b	271c <boot_Time__Piece@@Base+0x1448>
    2750:	orr	w8, w27, w8
    2754:	cbnz	w8, 26f4 <boot_Time__Piece@@Base+0x1420>
    2758:	mov	w27, #0x1                   	// #1
    275c:	add	x21, x21, #0x1
    2760:	b	271c <boot_Time__Piece@@Base+0x1448>
    2764:	bl	10e0 <__ctype_b_loc@plt>
    2768:	ldr	x8, [x0]
    276c:	and	x9, x24, #0xff
    2770:	ldrh	w9, [x8, x9, lsl #1]
    2774:	tbz	w9, #13, 26e4 <boot_Time__Piece@@Base+0x1410>
    2778:	and	x9, x23, #0xff
    277c:	ldrh	w9, [x8, x9, lsl #1]
    2780:	tbz	w9, #13, 26f0 <boot_Time__Piece@@Base+0x141c>
    2784:	ldrb	w23, [x22, #1]!
    2788:	cbnz	w23, 2778 <boot_Time__Piece@@Base+0x14a4>
    278c:	b	26f0 <boot_Time__Piece@@Base+0x141c>
    2790:	bl	10e0 <__ctype_b_loc@plt>
    2794:	ldr	x10, [x0]
    2798:	ldrh	w8, [x10, x23, lsl #1]
    279c:	tbz	w8, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    27a0:	ldrb	w9, [x22, #1]!
    27a4:	sub	w8, w23, #0x30
    27a8:	cbz	w9, 27c4 <boot_Time__Piece@@Base+0x14f0>
    27ac:	ldrh	w10, [x10, w9, uxtw #1]
    27b0:	tbz	w10, #11, 27c4 <boot_Time__Piece@@Base+0x14f0>
    27b4:	mov	w10, #0xa                   	// #10
    27b8:	madd	w8, w8, w10, w9
    27bc:	add	x22, x22, #0x1
    27c0:	sub	w8, w8, #0x30
    27c4:	cmp	w26, #0x6b
    27c8:	b.eq	27d4 <boot_Time__Piece@@Base+0x1500>  // b.none
    27cc:	cmp	w26, #0x48
    27d0:	b.ne	2b58 <boot_Time__Piece@@Base+0x1884>  // b.any
    27d4:	cmp	w8, #0x17
    27d8:	b.le	2b60 <boot_Time__Piece@@Base+0x188c>
    27dc:	b	3010 <boot_Time__Piece@@Base+0x1d3c>
    27e0:	mov	x28, xzr
    27e4:	b	2818 <boot_Time__Piece@@Base+0x1544>
    27e8:	ldr	x24, [x8, x28, lsl #3]
    27ec:	mov	x0, x24
    27f0:	bl	f90 <strlen@plt>
    27f4:	mov	x23, x0
    27f8:	mov	x0, x22
    27fc:	mov	x1, x24
    2800:	mov	x2, x23
    2804:	bl	1120 <strncasecmp@plt>
    2808:	cbz	w0, 2b98 <boot_Time__Piece@@Base+0x18c4>
    280c:	add	x28, x28, #0x1
    2810:	cmp	x28, #0xc
    2814:	b.eq	3010 <boot_Time__Piece@@Base+0x1d3c>  // b.none
    2818:	cmp	w26, #0x42
    281c:	cbz	w27, 2838 <boot_Time__Piece@@Base+0x1564>
    2820:	b.ne	280c <boot_Time__Piece@@Base+0x1538>  // b.any
    2824:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2828:	add	x8, x8, #0x150
    282c:	add	x8, x8, x28, lsl #3
    2830:	ldr	x24, [x8, #336]
    2834:	b	27ec <boot_Time__Piece@@Base+0x1518>
    2838:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    283c:	add	x8, x8, #0x150
    2840:	b.ne	27e8 <boot_Time__Piece@@Base+0x1514>  // b.any
    2844:	add	x8, x8, x28, lsl #3
    2848:	ldr	x24, [x8, #96]
    284c:	b	27ec <boot_Time__Piece@@Base+0x1518>
    2850:	bl	10e0 <__ctype_b_loc@plt>
    2854:	ldr	x8, [x0]
    2858:	ldrh	w9, [x8, x23, lsl #1]
    285c:	tbz	w9, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2860:	ldrb	w10, [x22, #1]!
    2864:	sub	w9, w23, #0x30
    2868:	cbz	x10, 2884 <boot_Time__Piece@@Base+0x15b0>
    286c:	ldrh	w11, [x8, x10, lsl #1]
    2870:	tbz	w11, #11, 2884 <boot_Time__Piece@@Base+0x15b0>
    2874:	mov	w11, #0xa                   	// #10
    2878:	madd	w9, w9, w11, w10
    287c:	add	x22, x22, #0x1
    2880:	sub	w9, w9, #0x30
    2884:	cmp	w9, #0x35
    2888:	b.gt	3010 <boot_Time__Piece@@Base+0x1d3c>
    288c:	ldrb	w9, [x22]
    2890:	cbz	x9, 26f4 <boot_Time__Piece@@Base+0x1420>
    2894:	ldrh	w9, [x8, x9, lsl #1]
    2898:	tbz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    289c:	ldrb	w9, [x21]
    28a0:	cbz	w9, 3014 <boot_Time__Piece@@Base+0x1d40>
    28a4:	and	x9, x9, #0xff
    28a8:	ldrh	w9, [x8, x9, lsl #1]
    28ac:	tbnz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    28b0:	ldrb	w9, [x21, #1]!
    28b4:	cbnz	w9, 28a4 <boot_Time__Piece@@Base+0x15d0>
    28b8:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    28bc:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    28c0:	add	x1, x1, #0x8db
    28c4:	b	2e14 <boot_Time__Piece@@Base+0x1b40>
    28c8:	cmp	w23, #0x25
    28cc:	b.ne	3010 <boot_Time__Piece@@Base+0x1d3c>  // b.any
    28d0:	add	x22, x22, #0x1
    28d4:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    28d8:	mov	x27, xzr
    28dc:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    28e0:	add	x8, x8, #0x150
    28e4:	add	x8, x8, x27, lsl #3
    28e8:	cmp	w26, #0x41
    28ec:	b.ne	28f8 <boot_Time__Piece@@Base+0x1624>  // b.any
    28f0:	ldr	x24, [x8, #248]
    28f4:	b	28fc <boot_Time__Piece@@Base+0x1628>
    28f8:	ldr	x24, [x8, #192]
    28fc:	mov	x0, x24
    2900:	bl	f90 <strlen@plt>
    2904:	mov	x23, x0
    2908:	mov	x0, x22
    290c:	mov	x1, x24
    2910:	mov	x2, x23
    2914:	bl	1120 <strncasecmp@plt>
    2918:	cbz	w0, 2bc0 <boot_Time__Piece@@Base+0x18ec>
    291c:	add	x27, x27, #0x1
    2920:	cmp	x27, #0x7
    2924:	b.ne	28dc <boot_Time__Piece@@Base+0x1608>  // b.any
    2928:	b	3010 <boot_Time__Piece@@Base+0x1d3c>
    292c:	bl	10e0 <__ctype_b_loc@plt>
    2930:	ldr	x10, [x0]
    2934:	ldrh	w8, [x10, x23, lsl #1]
    2938:	tbnz	w8, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    293c:	tbz	w8, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2940:	tbnz	w8, #11, 2e48 <boot_Time__Piece@@Base+0x1b74>
    2944:	mov	w9, wzr
    2948:	mov	x8, x22
    294c:	b	2e70 <boot_Time__Piece@@Base+0x1b9c>
    2950:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2954:	ldr	x24, [x8, #640]
    2958:	mov	x0, x24
    295c:	bl	f90 <strlen@plt>
    2960:	mov	x23, x0
    2964:	mov	x0, x22
    2968:	mov	x1, x24
    296c:	mov	x2, x23
    2970:	bl	1120 <strncasecmp@plt>
    2974:	cbz	w0, 2ba4 <boot_Time__Piece@@Base+0x18d0>
    2978:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    297c:	ldr	x1, [x8, #656]
    2980:	mov	x0, x22
    2984:	mov	x2, x23
    2988:	bl	1120 <strncasecmp@plt>
    298c:	cbz	w0, 2ba4 <boot_Time__Piece@@Base+0x18d0>
    2990:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    2994:	ldr	x24, [x8, #648]
    2998:	mov	x0, x24
    299c:	bl	f90 <strlen@plt>
    29a0:	mov	x23, x0
    29a4:	mov	x0, x22
    29a8:	mov	x1, x24
    29ac:	mov	x2, x23
    29b0:	bl	1120 <strncasecmp@plt>
    29b4:	cbz	w0, 29d0 <boot_Time__Piece@@Base+0x16fc>
    29b8:	adrp	x8, 14000 <boot_Time__Piece@@Base+0x12d2c>
    29bc:	ldr	x1, [x8, #664]
    29c0:	mov	x0, x22
    29c4:	mov	x2, x23
    29c8:	bl	1120 <strncasecmp@plt>
    29cc:	cbnz	w0, 3010 <boot_Time__Piece@@Base+0x1d3c>
    29d0:	ldr	w8, [x20, #8]
    29d4:	cmp	w8, #0xc
    29d8:	b.gt	3010 <boot_Time__Piece@@Base+0x1d3c>
    29dc:	b.eq	2bb8 <boot_Time__Piece@@Base+0x18e4>  // b.none
    29e0:	add	w8, w8, #0xc
    29e4:	str	w8, [x20, #8]
    29e8:	b	2bb8 <boot_Time__Piece@@Base+0x18e4>
    29ec:	bl	10e0 <__ctype_b_loc@plt>
    29f0:	ldr	x10, [x0]
    29f4:	ldrh	w8, [x10, x23, lsl #1]
    29f8:	tbnz	w8, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    29fc:	tbz	w8, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2a00:	cmp	w26, #0x59
    2a04:	mov	w8, #0x2                   	// #2
    2a08:	mov	w11, #0x4                   	// #4
    2a0c:	csel	x8, x11, x8, eq  // eq = none
    2a10:	mov	w9, wzr
    2a14:	add	x11, x22, x8
    2a18:	sub	x12, x8, #0x1
    2a1c:	and	x8, x23, #0xff
    2a20:	ldrh	w8, [x10, x8, lsl #1]
    2a24:	tbz	w8, #11, 2f9c <boot_Time__Piece@@Base+0x1cc8>
    2a28:	mov	w8, #0xa                   	// #10
    2a2c:	mul	w8, w9, w8
    2a30:	add	w8, w8, w23, uxtb
    2a34:	sub	w9, w8, #0x30
    2a38:	cbz	x12, 2fa4 <boot_Time__Piece@@Base+0x1cd0>
    2a3c:	ldrb	w23, [x22, #1]
    2a40:	add	x8, x22, #0x1
    2a44:	sub	x12, x12, #0x1
    2a48:	mov	x22, x8
    2a4c:	cbnz	w23, 2a1c <boot_Time__Piece@@Base+0x1748>
    2a50:	b	2fa8 <boot_Time__Piece@@Base+0x1cd4>
    2a54:	bl	10e0 <__ctype_b_loc@plt>
    2a58:	ldr	x10, [x0]
    2a5c:	ldrh	w8, [x10, x23, lsl #1]
    2a60:	tbz	w8, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2a64:	ldrb	w9, [x22, #1]!
    2a68:	sub	w8, w23, #0x30
    2a6c:	cbz	x9, 2a88 <boot_Time__Piece@@Base+0x17b4>
    2a70:	ldrh	w10, [x10, x9, lsl #1]
    2a74:	tbz	w10, #11, 2a88 <boot_Time__Piece@@Base+0x17b4>
    2a78:	mov	w10, #0xa                   	// #10
    2a7c:	madd	w8, w8, w10, w9
    2a80:	add	x22, x22, #0x1
    2a84:	sub	w8, w8, #0x30
    2a88:	cmp	w8, #0x1f
    2a8c:	b.gt	3010 <boot_Time__Piece@@Base+0x1d3c>
    2a90:	str	w8, [x20, #12]
    2a94:	ldrb	w9, [x22]
    2a98:	cbz	x9, 26f4 <boot_Time__Piece@@Base+0x1420>
    2a9c:	ldr	x8, [x0]
    2aa0:	ldrh	w9, [x8, x9, lsl #1]
    2aa4:	tbz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2aa8:	ldrb	w9, [x21]
    2aac:	cbz	w9, 3014 <boot_Time__Piece@@Base+0x1d40>
    2ab0:	and	x9, x9, #0xff
    2ab4:	ldrh	w9, [x8, x9, lsl #1]
    2ab8:	tbnz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2abc:	ldrb	w9, [x21, #1]!
    2ac0:	cbnz	w9, 2ab0 <boot_Time__Piece@@Base+0x17dc>
    2ac4:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    2ac8:	bl	10e0 <__ctype_b_loc@plt>
    2acc:	ldr	x8, [x0]
    2ad0:	ldrh	w9, [x8, x23, lsl #1]
    2ad4:	tbz	w9, #13, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2ad8:	ldrh	w9, [x8, x23, lsl #1]
    2adc:	tbz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2ae0:	ldrb	w9, [x22, #1]!
    2ae4:	ldrh	w9, [x8, x9, lsl #1]
    2ae8:	tbnz	w9, #13, 2ae0 <boot_Time__Piece@@Base+0x180c>
    2aec:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2af0:	bl	10e0 <__ctype_b_loc@plt>
    2af4:	ldr	x8, [x0]
    2af8:	ldrh	w8, [x8, x23, lsl #1]
    2afc:	tbz	w8, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2b00:	cmp	w26, #0x75
    2b04:	mov	w9, #0x6                   	// #6
    2b08:	sub	w8, w23, #0x30
    2b0c:	cinc	w9, w9, eq  // eq = none
    2b10:	cmp	w8, w9
    2b14:	b.gt	3010 <boot_Time__Piece@@Base+0x1d3c>
    2b18:	cmp	w8, #0x7
    2b1c:	csel	w8, wzr, w8, eq  // eq = none
    2b20:	str	w8, [x20, #24]
    2b24:	ldrb	w9, [x22, #1]!
    2b28:	cbz	x9, 26f4 <boot_Time__Piece@@Base+0x1420>
    2b2c:	ldr	x8, [x0]
    2b30:	ldrh	w9, [x8, x9, lsl #1]
    2b34:	tbz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2b38:	ldrb	w9, [x21]
    2b3c:	cbz	w9, 3014 <boot_Time__Piece@@Base+0x1d40>
    2b40:	and	x9, x9, #0xff
    2b44:	ldrh	w9, [x8, x9, lsl #1]
    2b48:	tbnz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2b4c:	ldrb	w9, [x21, #1]!
    2b50:	cbnz	w9, 2b40 <boot_Time__Piece@@Base+0x186c>
    2b54:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    2b58:	cmp	w8, #0xc
    2b5c:	b.gt	3010 <boot_Time__Piece@@Base+0x1d3c>
    2b60:	str	w8, [x20, #8]
    2b64:	ldrb	w9, [x22]
    2b68:	cbz	x9, 26f4 <boot_Time__Piece@@Base+0x1420>
    2b6c:	ldr	x8, [x0]
    2b70:	ldrh	w9, [x8, x9, lsl #1]
    2b74:	tbz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2b78:	ldrb	w9, [x21]
    2b7c:	cbz	w9, 3014 <boot_Time__Piece@@Base+0x1d40>
    2b80:	and	x9, x9, #0xff
    2b84:	ldrh	w9, [x8, x9, lsl #1]
    2b88:	tbnz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2b8c:	ldrb	w9, [x21, #1]!
    2b90:	cbnz	w9, 2b80 <boot_Time__Piece@@Base+0x18ac>
    2b94:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    2b98:	str	w28, [x20, #16]
    2b9c:	add	x22, x22, x23
    2ba0:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2ba4:	ldr	w8, [x20, #8]
    2ba8:	cmp	w8, #0xc
    2bac:	b.gt	3010 <boot_Time__Piece@@Base+0x1d3c>
    2bb0:	b.ne	2bb8 <boot_Time__Piece@@Base+0x18e4>  // b.any
    2bb4:	str	wzr, [x20, #8]
    2bb8:	add	x22, x22, x23
    2bbc:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2bc0:	str	w27, [x20, #24]
    2bc4:	add	x22, x22, x23
    2bc8:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2bcc:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2bd0:	add	x1, x1, #0x8a5
    2bd4:	b	2e14 <boot_Time__Piece@@Base+0x1b40>
    2bd8:	bl	10e0 <__ctype_b_loc@plt>
    2bdc:	ldr	x10, [x0]
    2be0:	ldrh	w8, [x10, x23, lsl #1]
    2be4:	tbz	w8, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2be8:	ldrb	w9, [x22, #1]!
    2bec:	sub	w8, w23, #0x30
    2bf0:	cbz	x9, 2c0c <boot_Time__Piece@@Base+0x1938>
    2bf4:	ldrh	w10, [x10, x9, lsl #1]
    2bf8:	tbz	w10, #11, 2c0c <boot_Time__Piece@@Base+0x1938>
    2bfc:	mov	w10, #0xa                   	// #10
    2c00:	madd	w8, w8, w10, w9
    2c04:	add	x22, x22, #0x1
    2c08:	sub	w8, w8, #0x30
    2c0c:	cmp	w8, #0x13
    2c10:	b.lt	3010 <boot_Time__Piece@@Base+0x1d3c>  // b.tstop
    2c14:	mov	w9, #0x64                  	// #100
    2c18:	mul	w8, w8, w9
    2c1c:	sub	w8, w8, #0x76c
    2c20:	str	w8, [x20, #20]
    2c24:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2c28:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2c2c:	add	x1, x1, #0x8c3
    2c30:	b	2e14 <boot_Time__Piece@@Base+0x1b40>
    2c34:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2c38:	add	x1, x1, #0x8cc
    2c3c:	b	2e14 <boot_Time__Piece@@Base+0x1b40>
    2c40:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2c44:	add	x1, x1, #0x8d5
    2c48:	b	2e14 <boot_Time__Piece@@Base+0x1b40>
    2c4c:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2c50:	add	x1, x1, #0x8e7
    2c54:	b	2e14 <boot_Time__Piece@@Base+0x1b40>
    2c58:	bl	10e0 <__ctype_b_loc@plt>
    2c5c:	ldr	x8, [x0]
    2c60:	mov	x26, x22
    2c64:	and	x9, x23, #0xff
    2c68:	ldrh	w9, [x8, x9, lsl #1]
    2c6c:	tbz	w9, #8, 2c78 <boot_Time__Piece@@Base+0x19a4>
    2c70:	ldrb	w23, [x26, #1]!
    2c74:	cbnz	w23, 2c64 <boot_Time__Piece@@Base+0x1990>
    2c78:	subs	x24, x26, x22
    2c7c:	b.eq	26f4 <boot_Time__Piece@@Base+0x1420>  // b.none
    2c80:	add	x0, x24, #0x1
    2c84:	bl	1010 <malloc@plt>
    2c88:	cbz	x0, 305c <boot_Time__Piece@@Base+0x1d88>
    2c8c:	mov	x1, x22
    2c90:	mov	x2, x24
    2c94:	mov	x23, x0
    2c98:	bl	11c0 <strncpy@plt>
    2c9c:	strb	wzr, [x0, x24]
    2ca0:	bl	1020 <tzset@plt>
    2ca4:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2ca8:	add	x1, x1, #0x8fc
    2cac:	mov	x0, x23
    2cb0:	bl	10d0 <strcmp@plt>
    2cb4:	cbnz	w0, 2cc0 <boot_Time__Piece@@Base+0x19ec>
    2cb8:	mov	w8, #0x1                   	// #1
    2cbc:	str	w8, [x19]
    2cc0:	mov	x0, x23
    2cc4:	bl	1110 <free@plt>
    2cc8:	ldr	w8, [x19]
    2ccc:	mov	x22, x26
    2cd0:	cbnz	w8, 26f4 <boot_Time__Piece@@Base+0x1420>
    2cd4:	b	3010 <boot_Time__Piece@@Base+0x1d3c>
    2cd8:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2cdc:	add	x1, x1, #0x8a8
    2ce0:	b	2e14 <boot_Time__Piece@@Base+0x1b40>
    2ce4:	bl	10e0 <__ctype_b_loc@plt>
    2ce8:	ldr	x11, [x0]
    2cec:	ldrh	w8, [x11, x23, lsl #1]
    2cf0:	tbz	w8, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2cf4:	mov	x10, x22
    2cf8:	ldrb	w12, [x10, #1]!
    2cfc:	sub	w8, w23, #0x30
    2d00:	cbz	x12, 2f7c <boot_Time__Piece@@Base+0x1ca8>
    2d04:	ldrh	w13, [x11, x12, lsl #1]
    2d08:	mov	x9, x10
    2d0c:	tbz	w13, #11, 2f80 <boot_Time__Piece@@Base+0x1cac>
    2d10:	ldrb	w13, [x22, #2]!
    2d14:	mov	w9, #0xa                   	// #10
    2d18:	madd	w8, w8, w9, w12
    2d1c:	sub	w8, w8, #0x30
    2d20:	mov	x9, x22
    2d24:	cbz	x13, 2f80 <boot_Time__Piece@@Base+0x1cac>
    2d28:	ldrh	w11, [x11, x13, lsl #1]
    2d2c:	tbz	w11, #11, 2f80 <boot_Time__Piece@@Base+0x1cac>
    2d30:	add	x9, x10, #0x2
    2d34:	mov	w10, #0xa                   	// #10
    2d38:	madd	w8, w8, w10, w13
    2d3c:	sub	w8, w8, #0x30
    2d40:	b	2f80 <boot_Time__Piece@@Base+0x1cac>
    2d44:	bl	10e0 <__ctype_b_loc@plt>
    2d48:	ldr	x10, [x0]
    2d4c:	ldrh	w8, [x10, x23, lsl #1]
    2d50:	tbz	w8, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2d54:	ldrb	w9, [x22, #1]!
    2d58:	sub	w8, w23, #0x30
    2d5c:	cbz	x9, 2d78 <boot_Time__Piece@@Base+0x1aa4>
    2d60:	ldrh	w10, [x10, x9, lsl #1]
    2d64:	tbz	w10, #11, 2d78 <boot_Time__Piece@@Base+0x1aa4>
    2d68:	mov	w10, #0xa                   	// #10
    2d6c:	madd	w8, w8, w10, w9
    2d70:	add	x22, x22, #0x1
    2d74:	sub	w8, w8, #0x30
    2d78:	sub	w8, w8, #0x1
    2d7c:	cmp	w8, #0xb
    2d80:	b.hi	3010 <boot_Time__Piece@@Base+0x1d3c>  // b.pmore
    2d84:	str	w8, [x20, #16]
    2d88:	ldrb	w9, [x22]
    2d8c:	cbz	x9, 26f4 <boot_Time__Piece@@Base+0x1420>
    2d90:	ldr	x8, [x0]
    2d94:	ldrh	w9, [x8, x9, lsl #1]
    2d98:	tbz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2d9c:	ldrb	w9, [x21]
    2da0:	cbz	w9, 3014 <boot_Time__Piece@@Base+0x1d40>
    2da4:	and	x9, x9, #0xff
    2da8:	ldrh	w9, [x8, x9, lsl #1]
    2dac:	tbnz	w9, #13, 26f4 <boot_Time__Piece@@Base+0x1420>
    2db0:	ldrb	w9, [x21, #1]!
    2db4:	cbnz	w9, 2da4 <boot_Time__Piece@@Base+0x1ad0>
    2db8:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    2dbc:	bl	11e0 <__errno_location@plt>
    2dc0:	ldr	w24, [x0]
    2dc4:	mov	x23, x0
    2dc8:	str	wzr, [x0]
    2dcc:	add	x1, sp, #0x10
    2dd0:	mov	w2, #0xa                   	// #10
    2dd4:	mov	x0, x22
    2dd8:	bl	10f0 <strtol@plt>
    2ddc:	ldr	w8, [x23]
    2de0:	cmp	w8, #0x22
    2de4:	b.eq	3050 <boot_Time__Piece@@Base+0x1d7c>  // b.none
    2de8:	str	x0, [sp, #8]
    2dec:	str	w24, [x23]
    2df0:	ldr	w8, [x19]
    2df4:	ldr	x22, [sp, #16]
    2df8:	add	x0, sp, #0x8
    2dfc:	cmp	w8, #0x1
    2e00:	b.ne	2e88 <boot_Time__Piece@@Base+0x1bb4>  // b.any
    2e04:	bl	1000 <localtime@plt>
    2e08:	b	2e8c <boot_Time__Piece@@Base+0x1bb8>
    2e0c:	adrp	x1, 3000 <boot_Time__Piece@@Base+0x1d2c>
    2e10:	add	x1, x1, #0x8f0
    2e14:	mov	x0, x22
    2e18:	mov	x2, x20
    2e1c:	mov	x3, x19
    2e20:	bl	2690 <boot_Time__Piece@@Base+0x13bc>
    2e24:	mov	x22, x0
    2e28:	cbnz	x0, 26f4 <boot_Time__Piece@@Base+0x1420>
    2e2c:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    2e30:	cmp	w23, #0x2b
    2e34:	b.eq	2ea0 <boot_Time__Piece@@Base+0x1bcc>  // b.none
    2e38:	cmp	w23, #0x2d
    2e3c:	b.ne	3010 <boot_Time__Piece@@Base+0x1d3c>  // b.any
    2e40:	mov	w23, #0xffffffff            	// #-1
    2e44:	b	2ea4 <boot_Time__Piece@@Base+0x1bd0>
    2e48:	mov	x8, x22
    2e4c:	ldrb	w11, [x8, #1]!
    2e50:	sub	w9, w23, #0x30
    2e54:	cbz	w11, 2e70 <boot_Time__Piece@@Base+0x1b9c>
    2e58:	ldrh	w10, [x10, w11, uxtw #1]
    2e5c:	tbz	w10, #11, 2e70 <boot_Time__Piece@@Base+0x1b9c>
    2e60:	mov	w10, #0xa                   	// #10
    2e64:	madd	w9, w9, w10, w11
    2e68:	add	x8, x22, #0x2
    2e6c:	sub	w9, w9, #0x30
    2e70:	cmp	w26, #0x4d
    2e74:	b.ne	2f3c <boot_Time__Piece@@Base+0x1c68>  // b.any
    2e78:	cmp	w9, #0x3b
    2e7c:	b.gt	3010 <boot_Time__Piece@@Base+0x1d3c>
    2e80:	str	w9, [x20, #4]
    2e84:	b	2f48 <boot_Time__Piece@@Base+0x1c74>
    2e88:	bl	1060 <gmtime@plt>
    2e8c:	ldp	q0, q1, [x0]
    2e90:	ldr	w8, [x0, #32]
    2e94:	stp	q0, q1, [x20]
    2e98:	str	w8, [x20, #32]
    2e9c:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2ea0:	mov	w23, #0x1                   	// #1
    2ea4:	bl	10e0 <__ctype_b_loc@plt>
    2ea8:	ldr	x11, [x0]
    2eac:	ldrb	w8, [x22, #1]
    2eb0:	ldrh	w9, [x11, x8, lsl #1]
    2eb4:	tbz	w9, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2eb8:	ldrb	w9, [x22, #2]
    2ebc:	ldrh	w10, [x11, x9, lsl #1]
    2ec0:	tbz	w10, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2ec4:	ldrb	w10, [x22, #3]
    2ec8:	ldrh	w12, [x11, x10, lsl #1]
    2ecc:	tbz	w12, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2ed0:	ldrb	w12, [x22, #4]
    2ed4:	ldrh	w11, [x11, x12, lsl #1]
    2ed8:	tbz	w11, #11, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2edc:	add	w8, w8, w8, lsl #2
    2ee0:	lsl	w8, w8, #1
    2ee4:	add	w8, w8, w9
    2ee8:	mov	w9, #0xa                   	// #10
    2eec:	madd	w8, w8, w9, w10
    2ef0:	mov	w10, #0xffff2fb0            	// #-53328
    2ef4:	madd	w8, w8, w9, w12
    2ef8:	mov	w9, #0x851f                	// #34079
    2efc:	movk	w9, #0x51eb, lsl #16
    2f00:	add	w8, w8, w10
    2f04:	smull	x9, w8, w9
    2f08:	lsr	x10, x9, #63
    2f0c:	asr	x9, x9, #37
    2f10:	add	w9, w9, w10
    2f14:	mov	w11, #0x64                  	// #100
    2f18:	msub	w8, w9, w11, w8
    2f1c:	ldp	w11, w10, [x20, #4]
    2f20:	add	x22, x22, #0x5
    2f24:	msub	w9, w9, w23, w10
    2f28:	mov	w10, #0x1                   	// #1
    2f2c:	msub	w8, w8, w23, w11
    2f30:	stp	w8, w9, [x20, #4]
    2f34:	str	w10, [x19]
    2f38:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2f3c:	cmp	w9, #0x3c
    2f40:	b.gt	3010 <boot_Time__Piece@@Base+0x1d3c>
    2f44:	str	w9, [x20]
    2f48:	ldrb	w10, [x8]
    2f4c:	cbz	x10, 2fe4 <boot_Time__Piece@@Base+0x1d10>
    2f50:	ldr	x9, [x0]
    2f54:	ldrh	w10, [x9, x10, lsl #1]
    2f58:	tbz	w10, #13, 2fe4 <boot_Time__Piece@@Base+0x1d10>
    2f5c:	ldrb	w10, [x21]
    2f60:	cbz	w10, 3008 <boot_Time__Piece@@Base+0x1d34>
    2f64:	and	x10, x10, #0xff
    2f68:	ldrh	w10, [x9, x10, lsl #1]
    2f6c:	tbnz	w10, #13, 2fe4 <boot_Time__Piece@@Base+0x1d10>
    2f70:	ldrb	w10, [x21, #1]!
    2f74:	cbnz	w10, 2f64 <boot_Time__Piece@@Base+0x1c90>
    2f78:	b	3008 <boot_Time__Piece@@Base+0x1d34>
    2f7c:	mov	x9, x10
    2f80:	sub	w8, w8, #0x1
    2f84:	cmp	w8, #0x16d
    2f88:	b.hi	3010 <boot_Time__Piece@@Base+0x1d3c>  // b.pmore
    2f8c:	str	w8, [x20, #28]
    2f90:	str	wzr, [x20, #12]
    2f94:	mov	x22, x9
    2f98:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2f9c:	mov	x8, x22
    2fa0:	b	2fa8 <boot_Time__Piece@@Base+0x1cd4>
    2fa4:	mov	x8, x11
    2fa8:	sub	w10, w9, #0x76c
    2fac:	cmp	w26, #0x59
    2fb0:	csel	w9, w10, w9, eq  // eq = none
    2fb4:	mov	w11, #0x79                  	// #121
    2fb8:	cmp	w9, #0x45
    2fbc:	ccmp	w26, w11, #0x0, lt  // lt = tstop
    2fc0:	add	w10, w9, #0x64
    2fc4:	csel	w9, w10, w9, eq  // eq = none
    2fc8:	tbnz	w9, #31, 3010 <boot_Time__Piece@@Base+0x1d3c>
    2fcc:	str	w9, [x20, #20]
    2fd0:	ldrb	w10, [x8]
    2fd4:	cbz	x10, 2fe4 <boot_Time__Piece@@Base+0x1d10>
    2fd8:	ldr	x9, [x0]
    2fdc:	ldrh	w10, [x9, x10, lsl #1]
    2fe0:	tbnz	w10, #13, 2fec <boot_Time__Piece@@Base+0x1d18>
    2fe4:	mov	x22, x8
    2fe8:	b	26f4 <boot_Time__Piece@@Base+0x1420>
    2fec:	ldrb	w10, [x21]
    2ff0:	cbz	w10, 3008 <boot_Time__Piece@@Base+0x1d34>
    2ff4:	and	x10, x10, #0xff
    2ff8:	ldrh	w10, [x9, x10, lsl #1]
    2ffc:	tbnz	w10, #13, 2fe4 <boot_Time__Piece@@Base+0x1d10>
    3000:	ldrb	w10, [x21, #1]!
    3004:	cbnz	w10, 2ff4 <boot_Time__Piece@@Base+0x1d20>
    3008:	mov	x22, x8
    300c:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    3010:	mov	x22, xzr
    3014:	adrp	x9, 13000 <boot_Time__Piece@@Base+0x11d2c>
    3018:	ldur	x8, [x29, #-8]
    301c:	ldr	x9, [x9, #4056]
    3020:	ldr	x9, [x9]
    3024:	cmp	x9, x8
    3028:	b.ne	3070 <boot_Time__Piece@@Base+0x1d9c>  // b.any
    302c:	mov	x0, x22
    3030:	ldp	x20, x19, [sp, #112]
    3034:	ldp	x22, x21, [sp, #96]
    3038:	ldp	x24, x23, [sp, #80]
    303c:	ldp	x26, x25, [sp, #64]
    3040:	ldp	x28, x27, [sp, #48]
    3044:	ldp	x29, x30, [sp, #32]
    3048:	add	sp, sp, #0x80
    304c:	ret
    3050:	mov	x22, xzr
    3054:	str	w24, [x23]
    3058:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    305c:	bl	11e0 <__errno_location@plt>
    3060:	mov	w8, #0xc                   	// #12
    3064:	mov	x22, xzr
    3068:	str	w8, [x0]
    306c:	b	3014 <boot_Time__Piece@@Base+0x1d40>
    3070:	bl	1070 <__stack_chk_fail@plt>
    3074:	stp	x29, x30, [sp, #-48]!
    3078:	stp	x20, x19, [sp, #32]
    307c:	ldr	w9, [x2, #28]
    3080:	str	x21, [sp, #16]
    3084:	ldr	w11, [x2, #12]
    3088:	ldp	w10, w8, [x2, #16]
    308c:	cmp	w9, #0x0
    3090:	cset	w14, ge  // ge = tcont
    3094:	cmp	w11, #0x1
    3098:	cset	w15, lt  // lt = tstop
    309c:	cmp	w10, #0x1
    30a0:	and	w14, w15, w14
    30a4:	cset	w15, lt  // lt = tstop
    30a8:	tst	w15, w14
    30ac:	csel	w10, wzr, w10, ne  // ne = any
    30b0:	mov	w12, #0xe                   	// #14
    30b4:	mov	w13, #0x2                   	// #2
    30b8:	mov	w14, #0x76b                 	// #1899
    30bc:	csinc	w9, w11, w9, eq  // eq = none
    30c0:	cmp	w10, #0x1
    30c4:	mov	w11, #0x7ae1                	// #31457
    30c8:	csel	w12, w13, w12, gt
    30cc:	cinc	w14, w14, gt
    30d0:	movk	w11, #0xae14, lsl #16
    30d4:	mov	w13, #0x851f                	// #34079
    30d8:	add	w10, w12, w10
    30dc:	mov	w12, #0x99                  	// #153
    30e0:	add	w14, w14, w8
    30e4:	mov	w8, #0x6667                	// #26215
    30e8:	movk	w13, #0x51eb, lsl #16
    30ec:	movk	w8, #0x6666, lsl #16
    30f0:	mul	w12, w10, w12
    30f4:	smull	x11, w14, w11
    30f8:	smull	x13, w14, w13
    30fc:	smull	x8, w12, w8
    3100:	lsr	x12, x11, #63
    3104:	asr	x11, x11, #37
    3108:	add	w11, w11, w12
    310c:	lsr	x12, x13, #63
    3110:	asr	x13, x13, #39
    3114:	add	w12, w13, w12
    3118:	add	w13, w14, #0x3
    311c:	cmp	w14, #0x0
    3120:	ldr	w10, [x2]
    3124:	csel	w13, w13, w14, lt  // lt = tstop
    3128:	mov	w15, #0x16d                 	// #365
    312c:	add	w9, w9, w13, asr #2
    3130:	madd	w9, w14, w15, w9
    3134:	lsr	x13, x8, #63
    3138:	asr	x8, x8, #33
    313c:	add	w9, w9, w11
    3140:	mov	x20, x2
    3144:	mov	x19, x0
    3148:	add	w8, w8, w13
    314c:	cmp	w10, #0x3d
    3150:	add	w11, w9, w12
    3154:	mov	x29, sp
    3158:	b.cs	3168 <boot_Time__Piece@@Base+0x1e94>  // b.hs, b.nlast
    315c:	mov	w9, w10
    3160:	mov	w10, wzr
    3164:	b	3170 <boot_Time__Piece@@Base+0x1e9c>
    3168:	mov	w9, wzr
    316c:	str	wzr, [x20]
    3170:	add	w8, w11, w8
    3174:	ldp	w12, w11, [x20, #4]
    3178:	mov	w13, #0x3c                  	// #60
    317c:	madd	w10, w12, w13, w10
    3180:	mov	w12, #0xe10                 	// #3600
    3184:	madd	w11, w11, w12, w10
    3188:	mov	w10, #0x5180                	// #20864
    318c:	movk	w10, #0x1, lsl #16
    3190:	tbnz	w11, #31, 31b0 <boot_Time__Piece@@Base+0x1edc>
    3194:	sub	w12, w10, #0x1
    3198:	cmp	w11, w12
    319c:	b.le	31cc <boot_Time__Piece@@Base+0x1ef8>
    31a0:	udiv	w12, w11, w10
    31a4:	add	w8, w12, w8
    31a8:	msub	w10, w12, w10, w11
    31ac:	b	31e0 <boot_Time__Piece@@Base+0x1f0c>
    31b0:	mov	w12, #0xae80                	// #44672
    31b4:	movk	w12, #0xfffe, lsl #16
    31b8:	sdiv	w13, w11, w10
    31bc:	madd	w10, w13, w12, w11
    31c0:	tbnz	w10, #31, 31d4 <boot_Time__Piece@@Base+0x1f00>
    31c4:	add	w8, w13, w8
    31c8:	b	31e0 <boot_Time__Piece@@Base+0x1f0c>
    31cc:	mov	w10, w11
    31d0:	b	31e0 <boot_Time__Piece@@Base+0x1f0c>
    31d4:	sub	w10, w13, #0x1
    31d8:	add	w8, w10, w8
    31dc:	madd	w10, w10, w12, w11
    31e0:	mov	w15, #0x6bd                 	// #1725
    31e4:	sub	w11, w8, #0x7b
    31e8:	movk	w15, #0x396b, lsl #16
    31ec:	mov	w12, #0xb3c5                	// #46021
    31f0:	smull	x15, w11, w15
    31f4:	movk	w12, #0x91a2, lsl #16
    31f8:	lsr	x16, x15, #32
    31fc:	lsr	x15, x15, #63
    3200:	add	w15, w15, w16, asr #15
    3204:	mov	w16, #0x3ab1                	// #15025
    3208:	smull	x12, w10, w12
    320c:	movk	w16, #0x2, lsl #16
    3210:	lsr	x12, x12, #32
    3214:	msub	w11, w15, w16, w11
    3218:	mov	w16, #0x190                 	// #400
    321c:	add	w12, w12, w10
    3220:	mul	w15, w15, w16
    3224:	asr	w16, w12, #11
    3228:	mov	w13, #0xe10                 	// #3600
    322c:	add	w12, w16, w12, lsr #31
    3230:	msub	w13, w12, w13, w10
    3234:	mov	w10, #0x81fb                	// #33275
    3238:	movk	w10, #0xe5ac, lsl #16
    323c:	mov	w14, #0x8889                	// #34953
    3240:	smull	x10, w11, w10
    3244:	movk	w14, #0x8888, lsl #16
    3248:	lsr	x10, x10, #32
    324c:	add	w10, w10, w11
    3250:	smull	x14, w13, w14
    3254:	str	w12, [x20, #8]
    3258:	asr	w12, w10, #15
    325c:	lsr	x14, x14, #32
    3260:	add	w12, w12, w10, lsr #31
    3264:	mov	w10, #0x64                  	// #100
    3268:	add	w14, w14, w13
    326c:	madd	w15, w12, w10, w15
    3270:	asr	w10, w14, #5
    3274:	mov	w16, #0x3c                  	// #60
    3278:	add	w14, w10, w14, lsr #31
    327c:	mov	w10, #0x8eac                	// #36524
    3280:	msub	w13, w14, w16, w13
    3284:	mov	w16, #0xb073                	// #45171
    3288:	movk	w16, #0x166d, lsl #16
    328c:	msub	w12, w12, w10, w11
    3290:	smull	x16, w12, w16
    3294:	add	w9, w13, w9
    3298:	lsr	x13, x16, #32
    329c:	lsr	x16, x16, #63
    32a0:	add	w13, w16, w13, asr #7
    32a4:	stp	w9, w14, [x20]
    32a8:	mov	w9, #0x5b5                 	// #1461
    32ac:	msub	w12, w13, w9, w12
    32b0:	mov	w9, #0xf9b1                	// #63921
    32b4:	movk	w9, #0xb38c, lsl #16
    32b8:	smull	x9, w12, w9
    32bc:	lsr	x9, x9, #32
    32c0:	add	w9, w9, w12
    32c4:	add	w14, w15, w13, lsl #2
    32c8:	asr	w13, w9, #8
    32cc:	add	w9, w13, w9, lsr #31
    32d0:	mov	w13, #0x16d                 	// #365
    32d4:	msub	w13, w9, w13, w12
    32d8:	add	w9, w14, w9
    32dc:	cbnz	w13, 3300 <boot_Time__Piece@@Base+0x202c>
    32e0:	mov	w14, #0xc550                	// #50512
    32e4:	movk	w14, #0xfffd, lsl #16
    32e8:	add	w11, w11, w14
    32ec:	cmp	w11, w10
    32f0:	b.cc	3378 <boot_Time__Piece@@Base+0x20a4>  // b.lo, b.ul, b.last
    32f4:	sub	w10, w12, #0x5b4
    32f8:	cmp	w10, #0x16c
    32fc:	b.ls	3378 <boot_Time__Piece@@Base+0x20a4>  // b.plast
    3300:	add	w11, w13, #0x7b
    3304:	mov	w10, #0x80d7                	// #32983
    3308:	movk	w10, #0xd62b, lsl #16
    330c:	add	w14, w11, w11, lsl #2
    3310:	smull	x10, w14, w10
    3314:	lsr	x10, x10, #32
    3318:	add	w10, w10, w14
    331c:	mov	w12, #0xfffffffe            	// #-2
    3320:	mov	w13, #0xfffffff2            	// #-14
    3324:	cmp	w14, #0x85d
    3328:	asr	w14, w10, #7
    332c:	csel	w12, w13, w12, gt
    3330:	mov	w13, #0x99                  	// #153
    3334:	add	w10, w14, w10, lsr #31
    3338:	mov	w14, #0x6667                	// #26215
    333c:	movk	w14, #0x6666, lsl #16
    3340:	mul	w13, w10, w13
    3344:	add	w10, w12, w10
    3348:	smull	x12, w13, w14
    334c:	lsr	x13, x12, #63
    3350:	asr	x12, x12, #33
    3354:	cinc	w9, w9, gt
    3358:	add	w12, w12, w13
    335c:	sub	w11, w11, w12
    3360:	sub	w12, w9, #0x76c
    3364:	str	w12, [x20, #20]
    3368:	cbnz	w11, 3388 <boot_Time__Piece@@Base+0x20b4>
    336c:	mov	w11, #0x1f                  	// #31
    3370:	sub	w10, w10, #0x1
    3374:	b	3388 <boot_Time__Piece@@Base+0x20b4>
    3378:	sub	w11, w9, #0x76c
    337c:	str	w11, [x20, #20]
    3380:	mov	w11, #0x1d                  	// #29
    3384:	mov	w10, #0x1                   	// #1
    3388:	str	w11, [x20, #12]
    338c:	mov	w11, #0x7ae1                	// #31457
    3390:	str	w10, [x20, #16]
    3394:	sub	w10, w9, #0x1
    3398:	movk	w11, #0xae14, lsl #16
    339c:	mov	w13, #0x851f                	// #34079
    33a0:	movk	w13, #0x51eb, lsl #16
    33a4:	smull	x11, w10, w11
    33a8:	add	w9, w9, #0x2
    33ac:	smull	x13, w10, w13
    33b0:	lsr	x14, x11, #32
    33b4:	lsr	x11, x11, #63
    33b8:	cmp	w10, #0x0
    33bc:	add	w11, w11, w14, asr #7
    33c0:	lsr	x14, x13, #32
    33c4:	lsr	x13, x13, #63
    33c8:	csel	w9, w9, w10, lt  // lt = tstop
    33cc:	add	w13, w13, w14, asr #5
    33d0:	add	w14, w8, #0x6
    33d4:	sub	w8, w8, w9, asr #2
    33d8:	mov	w9, #0x2493                	// #9363
    33dc:	movk	w9, #0x9249, lsl #16
    33e0:	smull	x9, w14, w9
    33e4:	lsr	x9, x9, #32
    33e8:	mov	w12, #0xfffffe93            	// #-365
    33ec:	add	w9, w9, w14
    33f0:	madd	w8, w10, w12, w8
    33f4:	asr	w10, w9, #2
    33f8:	add	w8, w8, w13
    33fc:	add	w9, w10, w9, lsr #31
    3400:	add	w8, w8, w11
    3404:	sub	w9, w9, w9, lsl #3
    3408:	sub	w8, w8, #0x1ad
    340c:	add	w9, w14, w9
    3410:	stp	w9, w8, [x20, #24]
    3414:	ldr	x8, [x19, #32]
    3418:	sub	x8, x8, x1
    341c:	cmp	x8, #0x57
    3420:	b.le	34ec <boot_Time__Piece@@Base+0x2218>
    3424:	mov	x0, x19
    3428:	mov	x2, x20
    342c:	bl	3504 <boot_Time__Piece@@Base+0x2230>
    3430:	mov	x20, x0
    3434:	mov	x0, x19
    3438:	mov	x1, xzr
    343c:	bl	11d0 <Perl_newSViv@plt>
    3440:	str	x0, [x20, #8]
    3444:	mov	x0, x19
    3448:	mov	x1, xzr
    344c:	bl	11d0 <Perl_newSViv@plt>
    3450:	mov	x21, x20
    3454:	str	x0, [x21, #16]!
    3458:	str	x21, [x19]
    345c:	ldur	x1, [x20, #-64]
    3460:	mov	x0, x19
    3464:	bl	1140 <Perl_sv_2mortal@plt>
    3468:	ldur	x1, [x20, #-56]
    346c:	mov	x0, x19
    3470:	bl	1140 <Perl_sv_2mortal@plt>
    3474:	ldur	x1, [x20, #-48]
    3478:	mov	x0, x19
    347c:	bl	1140 <Perl_sv_2mortal@plt>
    3480:	ldur	x1, [x20, #-40]
    3484:	mov	x0, x19
    3488:	bl	1140 <Perl_sv_2mortal@plt>
    348c:	ldur	x1, [x20, #-32]
    3490:	mov	x0, x19
    3494:	bl	1140 <Perl_sv_2mortal@plt>
    3498:	ldur	x1, [x20, #-24]
    349c:	mov	x0, x19
    34a0:	bl	1140 <Perl_sv_2mortal@plt>
    34a4:	ldur	x1, [x20, #-16]
    34a8:	mov	x0, x19
    34ac:	bl	1140 <Perl_sv_2mortal@plt>
    34b0:	ldur	x1, [x20, #-8]
    34b4:	mov	x0, x19
    34b8:	bl	1140 <Perl_sv_2mortal@plt>
    34bc:	ldr	x1, [x20]
    34c0:	mov	x0, x19
    34c4:	bl	1140 <Perl_sv_2mortal@plt>
    34c8:	ldr	x1, [x20, #8]
    34cc:	mov	x0, x19
    34d0:	bl	1140 <Perl_sv_2mortal@plt>
    34d4:	ldr	x1, [x21]
    34d8:	mov	x0, x19
    34dc:	ldp	x20, x19, [sp, #32]
    34e0:	ldr	x21, [sp, #16]
    34e4:	ldp	x29, x30, [sp], #48
    34e8:	b	1140 <Perl_sv_2mortal@plt>
    34ec:	mov	w3, #0xb                   	// #11
    34f0:	mov	x0, x19
    34f4:	mov	x2, x1
    34f8:	bl	fb0 <Perl_stack_grow@plt>
    34fc:	mov	x1, x0
    3500:	b	3424 <boot_Time__Piece@@Base+0x2150>
    3504:	stp	x29, x30, [sp, #-48]!
    3508:	stp	x20, x19, [sp, #32]
    350c:	mov	x19, x1
    3510:	ldrsw	x1, [x2]
    3514:	str	x21, [sp, #16]
    3518:	mov	x29, sp
    351c:	mov	x20, x2
    3520:	mov	x21, x0
    3524:	bl	11d0 <Perl_newSViv@plt>
    3528:	str	x0, [x19, #8]
    352c:	ldrsw	x1, [x20, #4]
    3530:	mov	x0, x21
    3534:	bl	11d0 <Perl_newSViv@plt>
    3538:	str	x0, [x19, #16]
    353c:	ldrsw	x1, [x20, #8]
    3540:	mov	x0, x21
    3544:	bl	11d0 <Perl_newSViv@plt>
    3548:	str	x0, [x19, #24]
    354c:	ldrsw	x1, [x20, #12]
    3550:	mov	x0, x21
    3554:	bl	11d0 <Perl_newSViv@plt>
    3558:	str	x0, [x19, #32]
    355c:	ldrsw	x1, [x20, #16]
    3560:	mov	x0, x21
    3564:	bl	11d0 <Perl_newSViv@plt>
    3568:	str	x0, [x19, #40]
    356c:	ldrsw	x1, [x20, #20]
    3570:	mov	x0, x21
    3574:	bl	11d0 <Perl_newSViv@plt>
    3578:	str	x0, [x19, #48]
    357c:	ldrsw	x1, [x20, #24]
    3580:	mov	x0, x21
    3584:	bl	11d0 <Perl_newSViv@plt>
    3588:	str	x0, [x19, #56]
    358c:	ldrsw	x1, [x20, #28]
    3590:	mov	x0, x21
    3594:	bl	11d0 <Perl_newSViv@plt>
    3598:	str	x0, [x19, #64]
    359c:	ldrsw	x1, [x20, #32]
    35a0:	mov	x0, x21
    35a4:	bl	11d0 <Perl_newSViv@plt>
    35a8:	str	x0, [x19, #72]!
    35ac:	mov	x0, x19
    35b0:	ldp	x20, x19, [sp, #32]
    35b4:	ldr	x21, [sp, #16]
    35b8:	ldp	x29, x30, [sp], #48
    35bc:	ret

Disassembly of section .fini:

00000000000035c0 <.fini>:
    35c0:	stp	x29, x30, [sp, #-16]!
    35c4:	mov	x29, sp
    35c8:	ldp	x29, x30, [sp], #16
    35cc:	ret
