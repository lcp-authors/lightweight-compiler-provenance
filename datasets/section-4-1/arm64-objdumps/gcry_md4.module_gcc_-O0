
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_md4.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_memcpy>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x2, [sp, #24]
  18:	ldr	x1, [sp, #32]
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <grub_memmove>
  24:	ldp	x29, x30, [sp], #48
  28:	ret

000000000000002c <md4_init>:
  2c:	sub	sp, sp, #0x20
  30:	str	x0, [sp, #8]
  34:	ldr	x0, [sp, #8]
  38:	str	x0, [sp, #24]
  3c:	ldr	x0, [sp, #24]
  40:	mov	w1, #0x2301                	// #8961
  44:	movk	w1, #0x6745, lsl #16
  48:	str	w1, [x0]
  4c:	ldr	x0, [sp, #24]
  50:	mov	w1, #0xab89                	// #43913
  54:	movk	w1, #0xefcd, lsl #16
  58:	str	w1, [x0, #4]
  5c:	ldr	x0, [sp, #24]
  60:	mov	w1, #0xdcfe                	// #56574
  64:	movk	w1, #0x98ba, lsl #16
  68:	str	w1, [x0, #8]
  6c:	ldr	x0, [sp, #24]
  70:	mov	w1, #0x5476                	// #21622
  74:	movk	w1, #0x1032, lsl #16
  78:	str	w1, [x0, #12]
  7c:	ldr	x0, [sp, #24]
  80:	str	wzr, [x0, #16]
  84:	ldr	x0, [sp, #24]
  88:	str	wzr, [x0, #84]
  8c:	nop
  90:	add	sp, sp, #0x20
  94:	ret

0000000000000098 <transform>:
  98:	stp	x29, x30, [sp, #-128]!
  9c:	mov	x29, sp
  a0:	stp	x19, x20, [sp, #16]
  a4:	stp	x21, x22, [sp, #32]
  a8:	str	x0, [sp, #56]
  ac:	str	x1, [sp, #48]
  b0:	ldr	x0, [sp, #56]
  b4:	ldr	w22, [x0]
  b8:	ldr	x0, [sp, #56]
  bc:	ldr	w21, [x0, #4]
  c0:	ldr	x0, [sp, #56]
  c4:	ldr	w20, [x0, #8]
  c8:	ldr	x0, [sp, #56]
  cc:	ldr	w19, [x0, #12]
  d0:	add	x0, sp, #0x40
  d4:	mov	x2, #0x40                  	// #64
  d8:	ldr	x1, [sp, #48]
  dc:	bl	0 <grub_memcpy>
  e0:	eor	w0, w20, w19
  e4:	and	w0, w21, w0
  e8:	eor	w0, w19, w0
  ec:	add	w1, w22, w0
  f0:	ldr	w0, [sp, #64]
  f4:	add	w0, w1, w0
  f8:	ror	w22, w0, #29
  fc:	eor	w0, w21, w20
 100:	and	w0, w22, w0
 104:	eor	w0, w20, w0
 108:	add	w1, w19, w0
 10c:	ldr	w0, [sp, #68]
 110:	add	w0, w1, w0
 114:	ror	w19, w0, #25
 118:	eor	w0, w22, w21
 11c:	and	w0, w19, w0
 120:	eor	w0, w21, w0
 124:	add	w1, w20, w0
 128:	ldr	w0, [sp, #72]
 12c:	add	w0, w1, w0
 130:	ror	w20, w0, #21
 134:	eor	w0, w19, w22
 138:	and	w0, w20, w0
 13c:	eor	w0, w22, w0
 140:	add	w1, w21, w0
 144:	ldr	w0, [sp, #76]
 148:	add	w0, w1, w0
 14c:	ror	w21, w0, #13
 150:	eor	w0, w20, w19
 154:	and	w0, w21, w0
 158:	eor	w0, w19, w0
 15c:	add	w1, w22, w0
 160:	ldr	w0, [sp, #80]
 164:	add	w0, w1, w0
 168:	ror	w22, w0, #29
 16c:	eor	w0, w21, w20
 170:	and	w0, w22, w0
 174:	eor	w0, w20, w0
 178:	add	w1, w19, w0
 17c:	ldr	w0, [sp, #84]
 180:	add	w0, w1, w0
 184:	ror	w19, w0, #25
 188:	eor	w0, w22, w21
 18c:	and	w0, w19, w0
 190:	eor	w0, w21, w0
 194:	add	w1, w20, w0
 198:	ldr	w0, [sp, #88]
 19c:	add	w0, w1, w0
 1a0:	ror	w20, w0, #21
 1a4:	eor	w0, w19, w22
 1a8:	and	w0, w20, w0
 1ac:	eor	w0, w22, w0
 1b0:	add	w1, w21, w0
 1b4:	ldr	w0, [sp, #92]
 1b8:	add	w0, w1, w0
 1bc:	ror	w21, w0, #13
 1c0:	eor	w0, w20, w19
 1c4:	and	w0, w21, w0
 1c8:	eor	w0, w19, w0
 1cc:	add	w1, w22, w0
 1d0:	ldr	w0, [sp, #96]
 1d4:	add	w0, w1, w0
 1d8:	ror	w22, w0, #29
 1dc:	eor	w0, w21, w20
 1e0:	and	w0, w22, w0
 1e4:	eor	w0, w20, w0
 1e8:	add	w1, w19, w0
 1ec:	ldr	w0, [sp, #100]
 1f0:	add	w0, w1, w0
 1f4:	ror	w19, w0, #25
 1f8:	eor	w0, w22, w21
 1fc:	and	w0, w19, w0
 200:	eor	w0, w21, w0
 204:	add	w1, w20, w0
 208:	ldr	w0, [sp, #104]
 20c:	add	w0, w1, w0
 210:	ror	w20, w0, #21
 214:	eor	w0, w19, w22
 218:	and	w0, w20, w0
 21c:	eor	w0, w22, w0
 220:	add	w1, w21, w0
 224:	ldr	w0, [sp, #108]
 228:	add	w0, w1, w0
 22c:	ror	w21, w0, #13
 230:	eor	w0, w20, w19
 234:	and	w0, w21, w0
 238:	eor	w0, w19, w0
 23c:	add	w1, w22, w0
 240:	ldr	w0, [sp, #112]
 244:	add	w0, w1, w0
 248:	ror	w22, w0, #29
 24c:	eor	w0, w21, w20
 250:	and	w0, w22, w0
 254:	eor	w0, w20, w0
 258:	add	w1, w19, w0
 25c:	ldr	w0, [sp, #116]
 260:	add	w0, w1, w0
 264:	ror	w19, w0, #25
 268:	eor	w0, w22, w21
 26c:	and	w0, w19, w0
 270:	eor	w0, w21, w0
 274:	add	w1, w20, w0
 278:	ldr	w0, [sp, #120]
 27c:	add	w0, w1, w0
 280:	ror	w20, w0, #21
 284:	eor	w0, w19, w22
 288:	and	w0, w20, w0
 28c:	eor	w0, w22, w0
 290:	add	w1, w21, w0
 294:	ldr	w0, [sp, #124]
 298:	add	w0, w1, w0
 29c:	ror	w21, w0, #13
 2a0:	orr	w0, w20, w19
 2a4:	and	w1, w21, w0
 2a8:	and	w0, w20, w19
 2ac:	orr	w0, w1, w0
 2b0:	add	w1, w22, w0
 2b4:	ldr	w0, [sp, #64]
 2b8:	add	w1, w1, w0
 2bc:	mov	w0, #0x7999                	// #31129
 2c0:	movk	w0, #0x5a82, lsl #16
 2c4:	add	w0, w1, w0
 2c8:	ror	w22, w0, #29
 2cc:	orr	w0, w21, w20
 2d0:	and	w1, w22, w0
 2d4:	and	w0, w21, w20
 2d8:	orr	w0, w1, w0
 2dc:	add	w1, w19, w0
 2e0:	ldr	w0, [sp, #80]
 2e4:	add	w1, w1, w0
 2e8:	mov	w0, #0x7999                	// #31129
 2ec:	movk	w0, #0x5a82, lsl #16
 2f0:	add	w0, w1, w0
 2f4:	ror	w19, w0, #27
 2f8:	orr	w0, w22, w21
 2fc:	and	w1, w19, w0
 300:	and	w0, w22, w21
 304:	orr	w0, w1, w0
 308:	add	w1, w20, w0
 30c:	ldr	w0, [sp, #96]
 310:	add	w1, w1, w0
 314:	mov	w0, #0x7999                	// #31129
 318:	movk	w0, #0x5a82, lsl #16
 31c:	add	w0, w1, w0
 320:	ror	w20, w0, #23
 324:	orr	w0, w19, w22
 328:	and	w1, w20, w0
 32c:	and	w0, w19, w22
 330:	orr	w0, w1, w0
 334:	add	w1, w21, w0
 338:	ldr	w0, [sp, #112]
 33c:	add	w1, w1, w0
 340:	mov	w0, #0x7999                	// #31129
 344:	movk	w0, #0x5a82, lsl #16
 348:	add	w0, w1, w0
 34c:	ror	w21, w0, #19
 350:	orr	w0, w20, w19
 354:	and	w1, w21, w0
 358:	and	w0, w20, w19
 35c:	orr	w0, w1, w0
 360:	add	w1, w22, w0
 364:	ldr	w0, [sp, #68]
 368:	add	w1, w1, w0
 36c:	mov	w0, #0x7999                	// #31129
 370:	movk	w0, #0x5a82, lsl #16
 374:	add	w0, w1, w0
 378:	ror	w22, w0, #29
 37c:	orr	w0, w21, w20
 380:	and	w1, w22, w0
 384:	and	w0, w21, w20
 388:	orr	w0, w1, w0
 38c:	add	w1, w19, w0
 390:	ldr	w0, [sp, #84]
 394:	add	w1, w1, w0
 398:	mov	w0, #0x7999                	// #31129
 39c:	movk	w0, #0x5a82, lsl #16
 3a0:	add	w0, w1, w0
 3a4:	ror	w19, w0, #27
 3a8:	orr	w0, w22, w21
 3ac:	and	w1, w19, w0
 3b0:	and	w0, w22, w21
 3b4:	orr	w0, w1, w0
 3b8:	add	w1, w20, w0
 3bc:	ldr	w0, [sp, #100]
 3c0:	add	w1, w1, w0
 3c4:	mov	w0, #0x7999                	// #31129
 3c8:	movk	w0, #0x5a82, lsl #16
 3cc:	add	w0, w1, w0
 3d0:	ror	w20, w0, #23
 3d4:	orr	w0, w19, w22
 3d8:	and	w1, w20, w0
 3dc:	and	w0, w19, w22
 3e0:	orr	w0, w1, w0
 3e4:	add	w1, w21, w0
 3e8:	ldr	w0, [sp, #116]
 3ec:	add	w1, w1, w0
 3f0:	mov	w0, #0x7999                	// #31129
 3f4:	movk	w0, #0x5a82, lsl #16
 3f8:	add	w0, w1, w0
 3fc:	ror	w21, w0, #19
 400:	orr	w0, w20, w19
 404:	and	w1, w21, w0
 408:	and	w0, w20, w19
 40c:	orr	w0, w1, w0
 410:	add	w1, w22, w0
 414:	ldr	w0, [sp, #72]
 418:	add	w1, w1, w0
 41c:	mov	w0, #0x7999                	// #31129
 420:	movk	w0, #0x5a82, lsl #16
 424:	add	w0, w1, w0
 428:	ror	w22, w0, #29
 42c:	orr	w0, w21, w20
 430:	and	w1, w22, w0
 434:	and	w0, w21, w20
 438:	orr	w0, w1, w0
 43c:	add	w1, w19, w0
 440:	ldr	w0, [sp, #88]
 444:	add	w1, w1, w0
 448:	mov	w0, #0x7999                	// #31129
 44c:	movk	w0, #0x5a82, lsl #16
 450:	add	w0, w1, w0
 454:	ror	w19, w0, #27
 458:	orr	w0, w22, w21
 45c:	and	w1, w19, w0
 460:	and	w0, w22, w21
 464:	orr	w0, w1, w0
 468:	add	w1, w20, w0
 46c:	ldr	w0, [sp, #104]
 470:	add	w1, w1, w0
 474:	mov	w0, #0x7999                	// #31129
 478:	movk	w0, #0x5a82, lsl #16
 47c:	add	w0, w1, w0
 480:	ror	w20, w0, #23
 484:	orr	w0, w19, w22
 488:	and	w1, w20, w0
 48c:	and	w0, w19, w22
 490:	orr	w0, w1, w0
 494:	add	w1, w21, w0
 498:	ldr	w0, [sp, #120]
 49c:	add	w1, w1, w0
 4a0:	mov	w0, #0x7999                	// #31129
 4a4:	movk	w0, #0x5a82, lsl #16
 4a8:	add	w0, w1, w0
 4ac:	ror	w21, w0, #19
 4b0:	orr	w0, w20, w19
 4b4:	and	w1, w21, w0
 4b8:	and	w0, w20, w19
 4bc:	orr	w0, w1, w0
 4c0:	add	w1, w22, w0
 4c4:	ldr	w0, [sp, #76]
 4c8:	add	w1, w1, w0
 4cc:	mov	w0, #0x7999                	// #31129
 4d0:	movk	w0, #0x5a82, lsl #16
 4d4:	add	w0, w1, w0
 4d8:	ror	w22, w0, #29
 4dc:	orr	w0, w21, w20
 4e0:	and	w1, w22, w0
 4e4:	and	w0, w21, w20
 4e8:	orr	w0, w1, w0
 4ec:	add	w1, w19, w0
 4f0:	ldr	w0, [sp, #92]
 4f4:	add	w1, w1, w0
 4f8:	mov	w0, #0x7999                	// #31129
 4fc:	movk	w0, #0x5a82, lsl #16
 500:	add	w0, w1, w0
 504:	ror	w19, w0, #27
 508:	orr	w0, w22, w21
 50c:	and	w1, w19, w0
 510:	and	w0, w22, w21
 514:	orr	w0, w1, w0
 518:	add	w1, w20, w0
 51c:	ldr	w0, [sp, #108]
 520:	add	w1, w1, w0
 524:	mov	w0, #0x7999                	// #31129
 528:	movk	w0, #0x5a82, lsl #16
 52c:	add	w0, w1, w0
 530:	ror	w20, w0, #23
 534:	orr	w0, w19, w22
 538:	and	w1, w20, w0
 53c:	and	w0, w19, w22
 540:	orr	w0, w1, w0
 544:	add	w1, w21, w0
 548:	ldr	w0, [sp, #124]
 54c:	add	w1, w1, w0
 550:	mov	w0, #0x7999                	// #31129
 554:	movk	w0, #0x5a82, lsl #16
 558:	add	w0, w1, w0
 55c:	ror	w21, w0, #19
 560:	eor	w0, w21, w20
 564:	eor	w0, w19, w0
 568:	add	w1, w22, w0
 56c:	ldr	w0, [sp, #64]
 570:	add	w1, w1, w0
 574:	mov	w0, #0xeba1                	// #60321
 578:	movk	w0, #0x6ed9, lsl #16
 57c:	add	w0, w1, w0
 580:	ror	w22, w0, #29
 584:	eor	w0, w22, w21
 588:	eor	w0, w20, w0
 58c:	add	w1, w19, w0
 590:	ldr	w0, [sp, #96]
 594:	add	w1, w1, w0
 598:	mov	w0, #0xeba1                	// #60321
 59c:	movk	w0, #0x6ed9, lsl #16
 5a0:	add	w0, w1, w0
 5a4:	ror	w19, w0, #23
 5a8:	eor	w0, w19, w22
 5ac:	eor	w0, w21, w0
 5b0:	add	w1, w20, w0
 5b4:	ldr	w0, [sp, #80]
 5b8:	add	w1, w1, w0
 5bc:	mov	w0, #0xeba1                	// #60321
 5c0:	movk	w0, #0x6ed9, lsl #16
 5c4:	add	w0, w1, w0
 5c8:	ror	w20, w0, #21
 5cc:	eor	w0, w20, w19
 5d0:	eor	w0, w22, w0
 5d4:	add	w1, w21, w0
 5d8:	ldr	w0, [sp, #112]
 5dc:	add	w1, w1, w0
 5e0:	mov	w0, #0xeba1                	// #60321
 5e4:	movk	w0, #0x6ed9, lsl #16
 5e8:	add	w0, w1, w0
 5ec:	ror	w21, w0, #17
 5f0:	eor	w0, w21, w20
 5f4:	eor	w0, w19, w0
 5f8:	add	w1, w22, w0
 5fc:	ldr	w0, [sp, #72]
 600:	add	w1, w1, w0
 604:	mov	w0, #0xeba1                	// #60321
 608:	movk	w0, #0x6ed9, lsl #16
 60c:	add	w0, w1, w0
 610:	ror	w22, w0, #29
 614:	eor	w0, w22, w21
 618:	eor	w0, w20, w0
 61c:	add	w1, w19, w0
 620:	ldr	w0, [sp, #104]
 624:	add	w1, w1, w0
 628:	mov	w0, #0xeba1                	// #60321
 62c:	movk	w0, #0x6ed9, lsl #16
 630:	add	w0, w1, w0
 634:	ror	w19, w0, #23
 638:	eor	w0, w19, w22
 63c:	eor	w0, w21, w0
 640:	add	w1, w20, w0
 644:	ldr	w0, [sp, #88]
 648:	add	w1, w1, w0
 64c:	mov	w0, #0xeba1                	// #60321
 650:	movk	w0, #0x6ed9, lsl #16
 654:	add	w0, w1, w0
 658:	ror	w20, w0, #21
 65c:	eor	w0, w20, w19
 660:	eor	w0, w22, w0
 664:	add	w1, w21, w0
 668:	ldr	w0, [sp, #120]
 66c:	add	w1, w1, w0
 670:	mov	w0, #0xeba1                	// #60321
 674:	movk	w0, #0x6ed9, lsl #16
 678:	add	w0, w1, w0
 67c:	ror	w21, w0, #17
 680:	eor	w0, w21, w20
 684:	eor	w0, w19, w0
 688:	add	w1, w22, w0
 68c:	ldr	w0, [sp, #68]
 690:	add	w1, w1, w0
 694:	mov	w0, #0xeba1                	// #60321
 698:	movk	w0, #0x6ed9, lsl #16
 69c:	add	w0, w1, w0
 6a0:	ror	w22, w0, #29
 6a4:	eor	w0, w22, w21
 6a8:	eor	w0, w20, w0
 6ac:	add	w1, w19, w0
 6b0:	ldr	w0, [sp, #100]
 6b4:	add	w1, w1, w0
 6b8:	mov	w0, #0xeba1                	// #60321
 6bc:	movk	w0, #0x6ed9, lsl #16
 6c0:	add	w0, w1, w0
 6c4:	ror	w19, w0, #23
 6c8:	eor	w0, w19, w22
 6cc:	eor	w0, w21, w0
 6d0:	add	w1, w20, w0
 6d4:	ldr	w0, [sp, #84]
 6d8:	add	w1, w1, w0
 6dc:	mov	w0, #0xeba1                	// #60321
 6e0:	movk	w0, #0x6ed9, lsl #16
 6e4:	add	w0, w1, w0
 6e8:	ror	w20, w0, #21
 6ec:	eor	w0, w20, w19
 6f0:	eor	w0, w22, w0
 6f4:	add	w1, w21, w0
 6f8:	ldr	w0, [sp, #116]
 6fc:	add	w1, w1, w0
 700:	mov	w0, #0xeba1                	// #60321
 704:	movk	w0, #0x6ed9, lsl #16
 708:	add	w0, w1, w0
 70c:	ror	w21, w0, #17
 710:	eor	w0, w21, w20
 714:	eor	w0, w19, w0
 718:	add	w1, w22, w0
 71c:	ldr	w0, [sp, #76]
 720:	add	w1, w1, w0
 724:	mov	w0, #0xeba1                	// #60321
 728:	movk	w0, #0x6ed9, lsl #16
 72c:	add	w0, w1, w0
 730:	ror	w22, w0, #29
 734:	eor	w0, w22, w21
 738:	eor	w0, w20, w0
 73c:	add	w1, w19, w0
 740:	ldr	w0, [sp, #108]
 744:	add	w1, w1, w0
 748:	mov	w0, #0xeba1                	// #60321
 74c:	movk	w0, #0x6ed9, lsl #16
 750:	add	w0, w1, w0
 754:	ror	w19, w0, #23
 758:	eor	w0, w19, w22
 75c:	eor	w0, w21, w0
 760:	add	w1, w20, w0
 764:	ldr	w0, [sp, #92]
 768:	add	w1, w1, w0
 76c:	mov	w0, #0xeba1                	// #60321
 770:	movk	w0, #0x6ed9, lsl #16
 774:	add	w0, w1, w0
 778:	ror	w20, w0, #21
 77c:	eor	w0, w20, w19
 780:	eor	w0, w22, w0
 784:	add	w1, w21, w0
 788:	ldr	w0, [sp, #124]
 78c:	add	w1, w1, w0
 790:	mov	w0, #0xeba1                	// #60321
 794:	movk	w0, #0x6ed9, lsl #16
 798:	add	w0, w1, w0
 79c:	ror	w21, w0, #17
 7a0:	ldr	x0, [sp, #56]
 7a4:	ldr	w0, [x0]
 7a8:	add	w1, w22, w0
 7ac:	ldr	x0, [sp, #56]
 7b0:	str	w1, [x0]
 7b4:	ldr	x0, [sp, #56]
 7b8:	ldr	w0, [x0, #4]
 7bc:	add	w1, w21, w0
 7c0:	ldr	x0, [sp, #56]
 7c4:	str	w1, [x0, #4]
 7c8:	ldr	x0, [sp, #56]
 7cc:	ldr	w0, [x0, #8]
 7d0:	add	w1, w20, w0
 7d4:	ldr	x0, [sp, #56]
 7d8:	str	w1, [x0, #8]
 7dc:	ldr	x0, [sp, #56]
 7e0:	ldr	w0, [x0, #12]
 7e4:	add	w1, w19, w0
 7e8:	ldr	x0, [sp, #56]
 7ec:	str	w1, [x0, #12]
 7f0:	nop
 7f4:	ldp	x19, x20, [sp, #16]
 7f8:	ldp	x21, x22, [sp, #32]
 7fc:	ldp	x29, x30, [sp], #128
 800:	ret

0000000000000804 <md4_write>:
 804:	stp	x29, x30, [sp, #-64]!
 808:	mov	x29, sp
 80c:	str	x0, [sp, #40]
 810:	str	x1, [sp, #32]
 814:	str	x2, [sp, #24]
 818:	ldr	x0, [sp, #32]
 81c:	str	x0, [sp, #56]
 820:	ldr	x0, [sp, #40]
 824:	str	x0, [sp, #48]
 828:	ldr	x0, [sp, #48]
 82c:	ldr	w0, [x0, #84]
 830:	cmp	w0, #0x40
 834:	b.ne	870 <md4_write+0x6c>  // b.any
 838:	ldr	x0, [sp, #48]
 83c:	add	x0, x0, #0x14
 840:	mov	x1, x0
 844:	ldr	x0, [sp, #48]
 848:	bl	98 <transform>
 84c:	mov	w0, #0x80                  	// #128
 850:	bl	0 <_gcry_burn_stack>
 854:	ldr	x0, [sp, #48]
 858:	str	wzr, [x0, #84]
 85c:	ldr	x0, [sp, #48]
 860:	ldr	w0, [x0, #16]
 864:	add	w1, w0, #0x1
 868:	ldr	x0, [sp, #48]
 86c:	str	w1, [x0, #16]
 870:	ldr	x0, [sp, #56]
 874:	cmp	x0, #0x0
 878:	b.eq	9cc <md4_write+0x1c8>  // b.none
 87c:	ldr	x0, [sp, #48]
 880:	ldr	w0, [x0, #84]
 884:	cmp	w0, #0x0
 888:	b.eq	90c <md4_write+0x108>  // b.none
 88c:	b	8d4 <md4_write+0xd0>
 890:	ldr	x0, [sp, #56]
 894:	add	x1, x0, #0x1
 898:	str	x1, [sp, #56]
 89c:	ldr	x1, [sp, #48]
 8a0:	ldr	w1, [x1, #84]
 8a4:	add	w3, w1, #0x1
 8a8:	ldr	x2, [sp, #48]
 8ac:	str	w3, [x2, #84]
 8b0:	ldrb	w3, [x0]
 8b4:	ldr	x2, [sp, #48]
 8b8:	sxtw	x0, w1
 8bc:	add	x0, x2, x0
 8c0:	mov	w1, w3
 8c4:	strb	w1, [x0, #20]
 8c8:	ldr	x0, [sp, #24]
 8cc:	sub	x0, x0, #0x1
 8d0:	str	x0, [sp, #24]
 8d4:	ldr	x0, [sp, #24]
 8d8:	cmp	x0, #0x0
 8dc:	b.eq	8f0 <md4_write+0xec>  // b.none
 8e0:	ldr	x0, [sp, #48]
 8e4:	ldr	w0, [x0, #84]
 8e8:	cmp	w0, #0x3f
 8ec:	b.le	890 <md4_write+0x8c>
 8f0:	mov	x2, #0x0                   	// #0
 8f4:	mov	x1, #0x0                   	// #0
 8f8:	ldr	x0, [sp, #48]
 8fc:	bl	804 <md4_write>
 900:	ldr	x0, [sp, #24]
 904:	cmp	x0, #0x0
 908:	b.eq	9d4 <md4_write+0x1d0>  // b.none
 90c:	mov	w0, #0x80                  	// #128
 910:	bl	0 <_gcry_burn_stack>
 914:	b	958 <md4_write+0x154>
 918:	ldr	x1, [sp, #56]
 91c:	ldr	x0, [sp, #48]
 920:	bl	98 <transform>
 924:	ldr	x0, [sp, #48]
 928:	str	wzr, [x0, #84]
 92c:	ldr	x0, [sp, #48]
 930:	ldr	w0, [x0, #16]
 934:	add	w1, w0, #0x1
 938:	ldr	x0, [sp, #48]
 93c:	str	w1, [x0, #16]
 940:	ldr	x0, [sp, #24]
 944:	sub	x0, x0, #0x40
 948:	str	x0, [sp, #24]
 94c:	ldr	x0, [sp, #56]
 950:	add	x0, x0, #0x40
 954:	str	x0, [sp, #56]
 958:	ldr	x0, [sp, #24]
 95c:	cmp	x0, #0x3f
 960:	b.hi	918 <md4_write+0x114>  // b.pmore
 964:	b	9ac <md4_write+0x1a8>
 968:	ldr	x0, [sp, #56]
 96c:	add	x1, x0, #0x1
 970:	str	x1, [sp, #56]
 974:	ldr	x1, [sp, #48]
 978:	ldr	w1, [x1, #84]
 97c:	add	w3, w1, #0x1
 980:	ldr	x2, [sp, #48]
 984:	str	w3, [x2, #84]
 988:	ldrb	w3, [x0]
 98c:	ldr	x2, [sp, #48]
 990:	sxtw	x0, w1
 994:	add	x0, x2, x0
 998:	mov	w1, w3
 99c:	strb	w1, [x0, #20]
 9a0:	ldr	x0, [sp, #24]
 9a4:	sub	x0, x0, #0x1
 9a8:	str	x0, [sp, #24]
 9ac:	ldr	x0, [sp, #24]
 9b0:	cmp	x0, #0x0
 9b4:	b.eq	9d8 <md4_write+0x1d4>  // b.none
 9b8:	ldr	x0, [sp, #48]
 9bc:	ldr	w0, [x0, #84]
 9c0:	cmp	w0, #0x3f
 9c4:	b.le	968 <md4_write+0x164>
 9c8:	b	9d8 <md4_write+0x1d4>
 9cc:	nop
 9d0:	b	9d8 <md4_write+0x1d4>
 9d4:	nop
 9d8:	ldp	x29, x30, [sp], #64
 9dc:	ret

00000000000009e0 <md4_final>:
 9e0:	stp	x29, x30, [sp, #-64]!
 9e4:	mov	x29, sp
 9e8:	str	x0, [sp, #24]
 9ec:	ldr	x0, [sp, #24]
 9f0:	str	x0, [sp, #48]
 9f4:	mov	x2, #0x0                   	// #0
 9f8:	mov	x1, #0x0                   	// #0
 9fc:	ldr	x0, [sp, #48]
 a00:	bl	804 <md4_write>
 a04:	ldr	x0, [sp, #48]
 a08:	ldr	w0, [x0, #16]
 a0c:	str	w0, [sp, #44]
 a10:	ldr	w0, [sp, #44]
 a14:	lsl	w0, w0, #6
 a18:	str	w0, [sp, #40]
 a1c:	ldr	w0, [sp, #44]
 a20:	lsr	w0, w0, #26
 a24:	str	w0, [sp, #60]
 a28:	ldr	w0, [sp, #40]
 a2c:	str	w0, [sp, #44]
 a30:	ldr	x0, [sp, #48]
 a34:	ldr	w0, [x0, #84]
 a38:	mov	w1, w0
 a3c:	ldr	w0, [sp, #40]
 a40:	add	w0, w0, w1
 a44:	str	w0, [sp, #40]
 a48:	ldr	w1, [sp, #40]
 a4c:	ldr	w0, [sp, #44]
 a50:	cmp	w1, w0
 a54:	b.cs	a64 <md4_final+0x84>  // b.hs, b.nlast
 a58:	ldr	w0, [sp, #60]
 a5c:	add	w0, w0, #0x1
 a60:	str	w0, [sp, #60]
 a64:	ldr	w0, [sp, #40]
 a68:	str	w0, [sp, #44]
 a6c:	ldr	w0, [sp, #40]
 a70:	lsl	w0, w0, #3
 a74:	str	w0, [sp, #40]
 a78:	ldr	w0, [sp, #60]
 a7c:	lsl	w0, w0, #3
 a80:	str	w0, [sp, #60]
 a84:	ldr	w0, [sp, #44]
 a88:	lsr	w0, w0, #29
 a8c:	ldr	w1, [sp, #60]
 a90:	orr	w0, w1, w0
 a94:	str	w0, [sp, #60]
 a98:	ldr	x0, [sp, #48]
 a9c:	ldr	w0, [x0, #84]
 aa0:	cmp	w0, #0x37
 aa4:	b.gt	b0c <md4_final+0x12c>
 aa8:	ldr	x0, [sp, #48]
 aac:	ldr	w0, [x0, #84]
 ab0:	add	w2, w0, #0x1
 ab4:	ldr	x1, [sp, #48]
 ab8:	str	w2, [x1, #84]
 abc:	ldr	x1, [sp, #48]
 ac0:	sxtw	x0, w0
 ac4:	add	x0, x1, x0
 ac8:	mov	w1, #0xffffff80            	// #-128
 acc:	strb	w1, [x0, #20]
 ad0:	b	af8 <md4_final+0x118>
 ad4:	ldr	x0, [sp, #48]
 ad8:	ldr	w0, [x0, #84]
 adc:	add	w2, w0, #0x1
 ae0:	ldr	x1, [sp, #48]
 ae4:	str	w2, [x1, #84]
 ae8:	ldr	x1, [sp, #48]
 aec:	sxtw	x0, w0
 af0:	add	x0, x1, x0
 af4:	strb	wzr, [x0, #20]
 af8:	ldr	x0, [sp, #48]
 afc:	ldr	w0, [x0, #84]
 b00:	cmp	w0, #0x37
 b04:	b.le	ad4 <md4_final+0xf4>
 b08:	b	b90 <md4_final+0x1b0>
 b0c:	ldr	x0, [sp, #48]
 b10:	ldr	w0, [x0, #84]
 b14:	add	w2, w0, #0x1
 b18:	ldr	x1, [sp, #48]
 b1c:	str	w2, [x1, #84]
 b20:	ldr	x1, [sp, #48]
 b24:	sxtw	x0, w0
 b28:	add	x0, x1, x0
 b2c:	mov	w1, #0xffffff80            	// #-128
 b30:	strb	w1, [x0, #20]
 b34:	b	b5c <md4_final+0x17c>
 b38:	ldr	x0, [sp, #48]
 b3c:	ldr	w0, [x0, #84]
 b40:	add	w2, w0, #0x1
 b44:	ldr	x1, [sp, #48]
 b48:	str	w2, [x1, #84]
 b4c:	ldr	x1, [sp, #48]
 b50:	sxtw	x0, w0
 b54:	add	x0, x1, x0
 b58:	strb	wzr, [x0, #20]
 b5c:	ldr	x0, [sp, #48]
 b60:	ldr	w0, [x0, #84]
 b64:	cmp	w0, #0x3f
 b68:	b.le	b38 <md4_final+0x158>
 b6c:	mov	x2, #0x0                   	// #0
 b70:	mov	x1, #0x0                   	// #0
 b74:	ldr	x0, [sp, #48]
 b78:	bl	804 <md4_write>
 b7c:	ldr	x0, [sp, #48]
 b80:	add	x0, x0, #0x14
 b84:	mov	x2, #0x38                  	// #56
 b88:	mov	w1, #0x0                   	// #0
 b8c:	bl	0 <grub_memset>
 b90:	ldr	w0, [sp, #40]
 b94:	and	w1, w0, #0xff
 b98:	ldr	x0, [sp, #48]
 b9c:	strb	w1, [x0, #76]
 ba0:	ldr	w0, [sp, #40]
 ba4:	lsr	w0, w0, #8
 ba8:	and	w1, w0, #0xff
 bac:	ldr	x0, [sp, #48]
 bb0:	strb	w1, [x0, #77]
 bb4:	ldr	w0, [sp, #40]
 bb8:	lsr	w0, w0, #16
 bbc:	and	w1, w0, #0xff
 bc0:	ldr	x0, [sp, #48]
 bc4:	strb	w1, [x0, #78]
 bc8:	ldr	w0, [sp, #40]
 bcc:	lsr	w0, w0, #24
 bd0:	and	w1, w0, #0xff
 bd4:	ldr	x0, [sp, #48]
 bd8:	strb	w1, [x0, #79]
 bdc:	ldr	w0, [sp, #60]
 be0:	and	w1, w0, #0xff
 be4:	ldr	x0, [sp, #48]
 be8:	strb	w1, [x0, #80]
 bec:	ldr	w0, [sp, #60]
 bf0:	lsr	w0, w0, #8
 bf4:	and	w1, w0, #0xff
 bf8:	ldr	x0, [sp, #48]
 bfc:	strb	w1, [x0, #81]
 c00:	ldr	w0, [sp, #60]
 c04:	lsr	w0, w0, #16
 c08:	and	w1, w0, #0xff
 c0c:	ldr	x0, [sp, #48]
 c10:	strb	w1, [x0, #82]
 c14:	ldr	w0, [sp, #60]
 c18:	lsr	w0, w0, #24
 c1c:	and	w1, w0, #0xff
 c20:	ldr	x0, [sp, #48]
 c24:	strb	w1, [x0, #83]
 c28:	ldr	x0, [sp, #48]
 c2c:	add	x0, x0, #0x14
 c30:	mov	x1, x0
 c34:	ldr	x0, [sp, #48]
 c38:	bl	98 <transform>
 c3c:	mov	w0, #0x80                  	// #128
 c40:	bl	0 <_gcry_burn_stack>
 c44:	ldr	x0, [sp, #48]
 c48:	add	x0, x0, #0x14
 c4c:	str	x0, [sp, #32]
 c50:	ldr	x0, [sp, #48]
 c54:	ldr	w1, [x0]
 c58:	ldr	x0, [sp, #32]
 c5c:	str	w1, [x0]
 c60:	ldr	x0, [sp, #32]
 c64:	add	x0, x0, #0x4
 c68:	str	x0, [sp, #32]
 c6c:	ldr	x0, [sp, #48]
 c70:	ldr	w1, [x0, #4]
 c74:	ldr	x0, [sp, #32]
 c78:	str	w1, [x0]
 c7c:	ldr	x0, [sp, #32]
 c80:	add	x0, x0, #0x4
 c84:	str	x0, [sp, #32]
 c88:	ldr	x0, [sp, #48]
 c8c:	ldr	w1, [x0, #8]
 c90:	ldr	x0, [sp, #32]
 c94:	str	w1, [x0]
 c98:	ldr	x0, [sp, #32]
 c9c:	add	x0, x0, #0x4
 ca0:	str	x0, [sp, #32]
 ca4:	ldr	x0, [sp, #48]
 ca8:	ldr	w1, [x0, #12]
 cac:	ldr	x0, [sp, #32]
 cb0:	str	w1, [x0]
 cb4:	ldr	x0, [sp, #32]
 cb8:	add	x0, x0, #0x4
 cbc:	str	x0, [sp, #32]
 cc0:	nop
 cc4:	ldp	x29, x30, [sp], #64
 cc8:	ret

0000000000000ccc <md4_read>:
 ccc:	sub	sp, sp, #0x20
 cd0:	str	x0, [sp, #8]
 cd4:	ldr	x0, [sp, #8]
 cd8:	str	x0, [sp, #24]
 cdc:	ldr	x0, [sp, #24]
 ce0:	add	x0, x0, #0x14
 ce4:	add	sp, sp, #0x20
 ce8:	ret

0000000000000cec <grub_mod_init>:
 cec:	stp	x29, x30, [sp, #-32]!
 cf0:	mov	x29, sp
 cf4:	str	x0, [sp, #24]
 cf8:	adrp	x0, 0 <grub_memcpy>
 cfc:	add	x0, x0, #0x0
 d00:	ldr	x0, [x0]
 d04:	bl	0 <grub_md_register>
 d08:	nop
 d0c:	ldp	x29, x30, [sp], #32
 d10:	ret
 d14:	nop
	...

0000000000000d20 <grub_mod_fini>:
 d20:	stp	x29, x30, [sp, #-16]!
 d24:	mov	x29, sp
 d28:	adrp	x0, 0 <grub_memcpy>
 d2c:	add	x0, x0, #0x0
 d30:	ldr	x0, [x0]
 d34:	bl	0 <grub_md_unregister>
 d38:	nop
 d3c:	ldp	x29, x30, [sp], #16
 d40:	ret
 d44:	nop
	...
