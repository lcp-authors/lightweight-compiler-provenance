In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libctf-nobfd.a_gcc_-O2:

ctf-archive.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <sort_modent_by_name>:
   0:	ldr	x0, [x0]
   4:	ldr	x1, [x1]
   8:	add	x0, x2, x0
   c:	add	x1, x2, x1
  10:	b	0 <strcmp>
  14:	nop

0000000000000018 <ctf_arc_open_by_name_internal>:
  18:	stp	x29, x30, [sp, #-128]!
  1c:	cmp	x3, #0x0
  20:	mov	x29, sp
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x24, x0
  2c:	adrp	x0, 0 <_CTF_SECTION>
  30:	add	x0, x0, #0x0
  34:	stp	x27, x28, [sp, #80]
  38:	csel	x28, x0, x3, eq  // eq = none
  3c:	mov	x23, x2
  40:	adrp	x0, 0 <sort_modent_by_name>
  44:	add	x0, x0, #0x0
  48:	stp	x19, x20, [sp, #16]
  4c:	stp	x21, x22, [sp, #32]
  50:	mov	x22, x1
  54:	mov	x21, x4
  58:	mov	x1, x28
  5c:	stp	x25, x26, [sp, #64]
  60:	bl	0 <ctf_dprintf>
  64:	ldp	x27, x20, [x24, #16]
  68:	mov	x26, #0x0                   	// #0
  6c:	nop
  70:	add	x19, x27, x26
  74:	mov	x0, x28
  78:	cmp	x27, x26
  7c:	b.ls	c0 <ctf_arc_open_by_name_internal+0xa8>  // b.plast
  80:	lsr	x19, x19, #1
  84:	lsl	x5, x19, #4
  88:	add	x5, x5, #0x28
  8c:	add	x25, x24, x5
  90:	ldr	x1, [x24, x5]
  94:	add	x1, x20, x1
  98:	add	x1, x24, x1
  9c:	bl	0 <strcmp>
  a0:	cmp	w0, #0x0
  a4:	b.lt	f0 <ctf_arc_open_by_name_internal+0xd8>  // b.tstop
  a8:	b.eq	f8 <ctf_arc_open_by_name_internal+0xe0>  // b.none
  ac:	add	x26, x19, #0x1
  b0:	mov	x0, x28
  b4:	add	x19, x27, x26
  b8:	cmp	x27, x26
  bc:	b.hi	80 <ctf_arc_open_by_name_internal+0x68>  // b.pmore
  c0:	cbz	x21, 178 <ctf_arc_open_by_name_internal+0x160>
  c4:	mov	w0, #0x415                 	// #1045
  c8:	mov	x19, #0x0                   	// #0
  cc:	str	w0, [x21]
  d0:	mov	x0, x19
  d4:	ldp	x19, x20, [sp, #16]
  d8:	ldp	x21, x22, [sp, #32]
  dc:	ldp	x23, x24, [sp, #48]
  e0:	ldp	x25, x26, [sp, #64]
  e4:	ldp	x27, x28, [sp, #80]
  e8:	ldp	x29, x30, [sp], #128
  ec:	ret
  f0:	mov	x27, x19
  f4:	b	70 <ctf_arc_open_by_name_internal+0x58>
  f8:	ldr	x19, [x25, #8]
  fc:	adrp	x0, 0 <sort_modent_by_name>
 100:	add	x0, x0, #0x0
 104:	mov	x1, x19
 108:	bl	0 <ctf_dprintf>
 10c:	ldr	x0, [x24, #32]
 110:	adrp	x5, 0 <_CTF_SECTION>
 114:	add	x5, x5, #0x0
 118:	mov	x6, #0x1                   	// #1
 11c:	add	x19, x19, x0
 120:	mov	x3, x21
 124:	add	x4, x19, #0x8
 128:	mov	x2, x23
 12c:	add	x4, x24, x4
 130:	mov	x1, x22
 134:	ldr	x7, [x24, x19]
 138:	add	x0, sp, #0x60
 13c:	stp	x5, x4, [sp, #96]
 140:	stp	x7, x6, [sp, #112]
 144:	bl	0 <ctf_bufopen>
 148:	mov	x19, x0
 14c:	cbz	x0, d0 <ctf_arc_open_by_name_internal+0xb8>
 150:	ldr	w1, [x24, #8]
 154:	bl	0 <ctf_setmodel>
 158:	mov	x0, x19
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x27, x28, [sp, #80]
 170:	ldp	x29, x30, [sp], #128
 174:	ret
 178:	mov	x19, #0x0                   	// #0
 17c:	b	d0 <ctf_arc_open_by_name_internal+0xb8>

0000000000000180 <ctf_arc_write_fd>:
 180:	stp	x29, x30, [sp, #-176]!
 184:	mov	x29, sp
 188:	stp	x19, x20, [sp, #16]
 18c:	lsl	x20, x2, #4
 190:	mov	x19, x2
 194:	stp	x21, x22, [sp, #32]
 198:	mov	w21, w0
 19c:	adrp	x0, 0 <sort_modent_by_name>
 1a0:	add	x0, x0, #0x0
 1a4:	stp	x23, x24, [sp, #48]
 1a8:	mov	x23, x3
 1ac:	stp	x27, x28, [sp, #80]
 1b0:	add	x27, x20, #0x28
 1b4:	str	x1, [sp, #96]
 1b8:	mov	x1, x2
 1bc:	str	x4, [sp, #112]
 1c0:	strb	wzr, [sp, #167]
 1c4:	bl	0 <ctf_dprintf>
 1c8:	mov	x1, x27
 1cc:	adrp	x0, 0 <sort_modent_by_name>
 1d0:	add	x0, x0, #0x0
 1d4:	bl	0 <ctf_dprintf>
 1d8:	add	x1, x20, #0x27
 1dc:	mov	w0, w21
 1e0:	mov	w2, #0x0                   	// #0
 1e4:	bl	0 <lseek>
 1e8:	tbnz	x0, #63, 2a4 <ctf_arc_write_fd+0x124>
 1ec:	add	x1, sp, #0xa7
 1f0:	mov	w0, w21
 1f4:	mov	x2, #0x1                   	// #1
 1f8:	bl	0 <write>
 1fc:	tbnz	x0, #63, 2a4 <ctf_arc_write_fd+0x124>
 200:	mov	w4, w21
 204:	mov	x1, x27
 208:	mov	x5, #0x0                   	// #0
 20c:	mov	w3, #0x1                   	// #1
 210:	mov	w2, #0x3                   	// #3
 214:	mov	x0, #0x0                   	// #0
 218:	stp	x25, x26, [sp, #64]
 21c:	bl	0 <mmap>
 220:	mov	x26, x0
 224:	sub	x0, x0, #0x1
 228:	cmn	x0, #0x3
 22c:	b.hi	570 <ctf_arc_write_fd+0x3f0>  // b.pmore
 230:	mov	x0, #0x3eeb                	// #16107
 234:	str	x19, [x26, #16]
 238:	movk	x0, #0xd762, lsl #16
 23c:	str	x27, [x26, #32]
 240:	movk	x0, #0xf2a4, lsl #32
 244:	movk	x0, #0x8b47, lsl #48
 248:	str	x0, [x26]
 24c:	cbnz	x19, 2f8 <ctf_arc_write_fd+0x178>
 250:	mov	x0, #0x0                   	// #0
 254:	bl	0 <malloc>
 258:	str	x0, [sp, #104]
 25c:	cbz	x0, 640 <ctf_arc_write_fd+0x4c0>
 260:	ldr	x4, [sp, #104]
 264:	adrp	x3, 0 <sort_modent_by_name>
 268:	add	x3, x3, #0x0
 26c:	add	x0, x26, #0x28
 270:	mov	x2, #0x10                  	// #16
 274:	mov	x1, #0x0                   	// #0
 278:	bl	0 <qsort_r>
 27c:	mov	w0, w21
 280:	mov	w2, #0x1                   	// #1
 284:	mov	x1, #0x0                   	// #0
 288:	bl	0 <lseek>
 28c:	tbz	x0, #63, 5d0 <ctf_arc_write_fd+0x450>
 290:	adrp	x20, 0 <sort_modent_by_name>
 294:	bl	0 <__errno_location>
 298:	add	x20, x20, #0x0
 29c:	mov	x19, x0
 2a0:	b	598 <ctf_arc_write_fd+0x418>
 2a4:	adrp	x20, 0 <sort_modent_by_name>
 2a8:	bl	0 <__errno_location>
 2ac:	add	x20, x20, #0x0
 2b0:	mov	x19, x0
 2b4:	ldr	w0, [x19]
 2b8:	cmp	w0, #0x3e7
 2bc:	b.le	2ec <ctf_arc_write_fd+0x16c>
 2c0:	bl	0 <ctf_errmsg>
 2c4:	mov	x1, x0
 2c8:	mov	x0, x20
 2cc:	bl	0 <ctf_dprintf>
 2d0:	ldr	w0, [x19]
 2d4:	ldp	x19, x20, [sp, #16]
 2d8:	ldp	x21, x22, [sp, #32]
 2dc:	ldp	x23, x24, [sp, #48]
 2e0:	ldp	x27, x28, [sp, #80]
 2e4:	ldp	x29, x30, [sp], #176
 2e8:	ret
 2ec:	bl	0 <strerror>
 2f0:	mov	x1, x0
 2f4:	b	2c8 <ctf_arc_write_fd+0x148>
 2f8:	ldr	x0, [sp, #96]
 2fc:	ldr	x0, [x0]
 300:	bl	0 <ctf_getmodel>
 304:	sxtw	x0, w0
 308:	ldr	x22, [x26, #16]
 30c:	str	x0, [x26, #8]
 310:	cbz	x22, 250 <ctf_arc_write_fd+0xd0>
 314:	add	x22, x23, x22, lsl #3
 318:	mov	x20, x23
 31c:	mov	x19, #0x0                   	// #0
 320:	ldr	x0, [x20], #8
 324:	add	x19, x19, #0x1
 328:	bl	0 <strlen>
 32c:	add	x19, x19, x0
 330:	cmp	x22, x20
 334:	b.ne	320 <ctf_arc_write_fd+0x1a0>  // b.any
 338:	mov	x0, x19
 33c:	bl	0 <malloc>
 340:	str	x0, [sp, #104]
 344:	cbz	x0, 640 <ctf_arc_write_fd+0x4c0>
 348:	add	x0, x26, #0x28
 34c:	mov	x19, #0x0                   	// #0
 350:	mov	x22, x0
 354:	adrp	x0, 0 <ctf_write>
 358:	add	x0, x0, #0x0
 35c:	mov	x20, #0x0                   	// #0
 360:	str	x0, [sp, #136]
 364:	adrp	x0, 0 <ctf_compress_write>
 368:	add	x0, x0, #0x0
 36c:	str	x0, [sp, #144]
 370:	str	x22, [sp, #152]
 374:	nop
 378:	ldr	x1, [x23, x20, lsl #3]
 37c:	ldr	x0, [sp, #104]
 380:	add	x0, x0, x19
 384:	bl	0 <strcpy>
 388:	ldr	x0, [sp, #96]
 38c:	str	xzr, [sp, #168]
 390:	ldr	x24, [x0, x20, lsl #3]
 394:	mov	x0, x24
 398:	bl	0 <ctf_serialize>
 39c:	tbnz	w0, #31, 560 <ctf_arc_write_fd+0x3e0>
 3a0:	mov	w0, w21
 3a4:	mov	w2, #0x1                   	// #1
 3a8:	mov	x1, #0x0                   	// #0
 3ac:	bl	0 <lseek>
 3b0:	str	x0, [sp, #128]
 3b4:	tbnz	x0, #63, 498 <ctf_arc_write_fd+0x318>
 3b8:	ldr	x1, [sp, #112]
 3bc:	add	x25, sp, #0xa8
 3c0:	ldr	x0, [x24, #416]
 3c4:	mov	x28, #0x8                   	// #8
 3c8:	cmp	x1, x0
 3cc:	ldp	x1, x0, [sp, #136]
 3d0:	csel	x0, x0, x1, cc  // cc = lo, ul, last
 3d4:	str	x0, [sp, #120]
 3d8:	mov	x2, x28
 3dc:	mov	x1, x25
 3e0:	mov	w0, w21
 3e4:	bl	0 <write>
 3e8:	tbnz	x0, #63, 498 <ctf_arc_write_fd+0x318>
 3ec:	add	x25, x25, x0
 3f0:	subs	x28, x28, x0
 3f4:	b.ne	3d8 <ctf_arc_write_fd+0x258>  // b.any
 3f8:	ldr	x2, [sp, #120]
 3fc:	mov	w1, w21
 400:	mov	x0, x24
 404:	blr	x2
 408:	cbnz	w0, 560 <ctf_arc_write_fd+0x3e0>
 40c:	mov	w0, w21
 410:	mov	w2, #0x1                   	// #1
 414:	mov	x1, #0x0                   	// #0
 418:	bl	0 <lseek>
 41c:	mov	x25, x0
 420:	tbnz	x0, #63, 498 <ctf_arc_write_fd+0x318>
 424:	ldr	x1, [sp, #128]
 428:	mov	w0, w21
 42c:	mov	w2, #0x0                   	// #0
 430:	add	x24, sp, #0xa8
 434:	sub	x3, x25, x1
 438:	str	x3, [sp, #168]
 43c:	mov	x3, #0x8                   	// #8
 440:	str	x3, [sp, #120]
 444:	bl	0 <lseek>
 448:	ldr	x3, [sp, #120]
 44c:	tbnz	x0, #63, 498 <ctf_arc_write_fd+0x318>
 450:	mov	x2, x3
 454:	mov	x1, x24
 458:	mov	w0, w21
 45c:	str	x3, [sp, #120]
 460:	bl	0 <write>
 464:	ldr	x3, [sp, #120]
 468:	tbnz	x0, #63, 498 <ctf_arc_write_fd+0x318>
 46c:	add	x24, x24, x0
 470:	subs	x3, x3, x0
 474:	b.ne	450 <ctf_arc_write_fd+0x2d0>  // b.any
 478:	add	x1, x25, #0x7
 47c:	mov	w0, w21
 480:	and	x1, x1, #0xfffffffffffffff8
 484:	mov	w2, #0x0                   	// #0
 488:	bl	0 <lseek>
 48c:	ldr	x1, [sp, #128]
 490:	tbz	x0, #63, 4bc <ctf_arc_write_fd+0x33c>
 494:	nop
 498:	bl	0 <__errno_location>
 49c:	ldr	w24, [x0]
 4a0:	neg	w24, w24
 4a4:	sxtw	x24, w24
 4a8:	add	x0, x24, #0x3e7
 4ac:	mov	x1, x24
 4b0:	cmp	x0, #0x3e6
 4b4:	b.ls	588 <ctf_arc_write_fd+0x408>  // b.plast
 4b8:	tbnz	x24, #63, 5b4 <ctf_arc_write_fd+0x434>
 4bc:	ldr	x0, [x23, x20, lsl #3]
 4c0:	sub	x1, x1, x27
 4c4:	stp	x19, x1, [x22]
 4c8:	add	x20, x20, #0x1
 4cc:	add	x19, x19, #0x1
 4d0:	bl	0 <strlen>
 4d4:	add	x22, x22, #0x10
 4d8:	ldr	x1, [x26, #16]
 4dc:	add	x19, x19, x0
 4e0:	cmp	x1, x20
 4e4:	b.hi	378 <ctf_arc_write_fd+0x1f8>  // b.pmore
 4e8:	ldr	x4, [sp, #104]
 4ec:	adrp	x3, 0 <sort_modent_by_name>
 4f0:	ldr	x0, [sp, #152]
 4f4:	add	x3, x3, #0x0
 4f8:	mov	x2, #0x10                  	// #16
 4fc:	bl	0 <qsort_r>
 500:	mov	w0, w21
 504:	mov	w2, #0x1                   	// #1
 508:	mov	x1, #0x0                   	// #0
 50c:	bl	0 <lseek>
 510:	tbnz	x0, #63, 290 <ctf_arc_write_fd+0x110>
 514:	str	x0, [x26, #24]
 518:	cmp	x19, #0x0
 51c:	b.le	5d8 <ctf_arc_write_fd+0x458>
 520:	ldr	x20, [sp, #104]
 524:	b	538 <ctf_arc_write_fd+0x3b8>
 528:	sub	x19, x19, x0
 52c:	add	x20, x20, x0
 530:	cmp	x19, #0x0
 534:	b.le	5d8 <ctf_arc_write_fd+0x458>
 538:	mov	x2, x19
 53c:	mov	x1, x20
 540:	mov	w0, w21
 544:	bl	0 <write>
 548:	tbz	x0, #63, 528 <ctf_arc_write_fd+0x3a8>
 54c:	adrp	x20, 0 <sort_modent_by_name>
 550:	bl	0 <__errno_location>
 554:	add	x20, x20, #0x0
 558:	mov	x19, x0
 55c:	b	598 <ctf_arc_write_fd+0x418>
 560:	ldr	w24, [x24, #556]
 564:	neg	w24, w24
 568:	sxtw	x24, w24
 56c:	b	4a8 <ctf_arc_write_fd+0x328>
 570:	bl	0 <__errno_location>
 574:	adrp	x20, 0 <sort_modent_by_name>
 578:	mov	x19, x0
 57c:	add	x20, x20, #0x0
 580:	ldp	x25, x26, [sp, #64]
 584:	b	2b4 <ctf_arc_write_fd+0x134>
 588:	adrp	x20, 0 <sort_modent_by_name>
 58c:	bl	0 <__errno_location>
 590:	add	x20, x20, #0x0
 594:	mov	x19, x0
 598:	ldr	x0, [sp, #104]
 59c:	bl	0 <free>
 5a0:	mov	x0, x26
 5a4:	mov	x1, x27
 5a8:	bl	0 <munmap>
 5ac:	ldp	x25, x26, [sp, #64]
 5b0:	b	2b4 <ctf_arc_write_fd+0x134>
 5b4:	bl	0 <__errno_location>
 5b8:	neg	w24, w24
 5bc:	adrp	x20, 0 <sort_modent_by_name>
 5c0:	mov	x19, x0
 5c4:	add	x20, x20, #0x0
 5c8:	str	w24, [x0]
 5cc:	b	598 <ctf_arc_write_fd+0x418>
 5d0:	str	x0, [x26, #24]
 5d4:	nop
 5d8:	ldr	x0, [sp, #104]
 5dc:	bl	0 <free>
 5e0:	mov	x1, x27
 5e4:	mov	x0, x26
 5e8:	mov	w2, #0x1                   	// #1
 5ec:	bl	0 <msync>
 5f0:	tbnz	w0, #31, 62c <ctf_arc_write_fd+0x4ac>
 5f4:	mov	x1, x27
 5f8:	mov	x0, x26
 5fc:	bl	0 <munmap>
 600:	mov	w1, w0
 604:	mov	w0, #0x0                   	// #0
 608:	tbnz	w1, #31, 614 <ctf_arc_write_fd+0x494>
 60c:	ldp	x25, x26, [sp, #64]
 610:	b	2d4 <ctf_arc_write_fd+0x154>
 614:	bl	0 <__errno_location>
 618:	adrp	x20, 0 <sort_modent_by_name>
 61c:	mov	x19, x0
 620:	add	x20, x20, #0x0
 624:	ldp	x25, x26, [sp, #64]
 628:	b	2b4 <ctf_arc_write_fd+0x134>
 62c:	adrp	x20, 0 <sort_modent_by_name>
 630:	bl	0 <__errno_location>
 634:	add	x20, x20, #0x0
 638:	mov	x19, x0
 63c:	b	5a0 <ctf_arc_write_fd+0x420>
 640:	adrp	x20, 0 <sort_modent_by_name>
 644:	bl	0 <__errno_location>
 648:	add	x20, x20, #0x0
 64c:	mov	x19, x0
 650:	b	5a0 <ctf_arc_write_fd+0x420>
 654:	nop

0000000000000658 <ctf_arc_write>:
 658:	stp	x29, x30, [sp, #-64]!
 65c:	mov	x29, sp
 660:	stp	x19, x20, [sp, #16]
 664:	mov	x19, x1
 668:	mov	w1, #0x242                 	// #578
 66c:	movk	w1, #0x8, lsl #16
 670:	stp	x21, x22, [sp, #32]
 674:	mov	x21, x2
 678:	mov	x22, x3
 67c:	mov	w2, #0x1b6                 	// #438
 680:	stp	x23, x24, [sp, #48]
 684:	mov	x23, x4
 688:	mov	x24, x0
 68c:	bl	0 <open>
 690:	tbnz	w0, #31, 70c <ctf_arc_write+0xb4>
 694:	mov	w20, w0
 698:	mov	x1, x19
 69c:	mov	x4, x23
 6a0:	mov	x3, x22
 6a4:	mov	x2, x21
 6a8:	bl	180 <ctf_arc_write_fd>
 6ac:	mov	w19, w0
 6b0:	mov	w0, w20
 6b4:	cbz	w19, 6e0 <ctf_arc_write+0x88>
 6b8:	bl	0 <close>
 6bc:	tbz	w19, #31, 6c8 <ctf_arc_write+0x70>
 6c0:	mov	x0, x24
 6c4:	bl	0 <unlink>
 6c8:	mov	w0, w19
 6cc:	ldp	x19, x20, [sp, #16]
 6d0:	ldp	x21, x22, [sp, #32]
 6d4:	ldp	x23, x24, [sp, #48]
 6d8:	ldp	x29, x30, [sp], #64
 6dc:	ret
 6e0:	bl	0 <close>
 6e4:	mov	w19, w0
 6e8:	tbnz	w0, #31, 74c <ctf_arc_write+0xf4>
 6ec:	mov	w0, w20
 6f0:	bl	0 <close>
 6f4:	mov	w0, w19
 6f8:	ldp	x19, x20, [sp, #16]
 6fc:	ldp	x21, x22, [sp, #32]
 700:	ldp	x23, x24, [sp, #48]
 704:	ldp	x29, x30, [sp], #64
 708:	ret
 70c:	bl	0 <__errno_location>
 710:	mov	x19, x0
 714:	ldr	w0, [x0]
 718:	bl	0 <strerror>
 71c:	mov	x2, x0
 720:	mov	x1, x24
 724:	adrp	x0, 0 <sort_modent_by_name>
 728:	add	x0, x0, #0x0
 72c:	bl	0 <ctf_dprintf>
 730:	ldr	w19, [x19]
 734:	ldp	x21, x22, [sp, #32]
 738:	mov	w0, w19
 73c:	ldp	x19, x20, [sp, #16]
 740:	ldp	x23, x24, [sp, #48]
 744:	ldp	x29, x30, [sp], #64
 748:	ret
 74c:	bl	0 <__errno_location>
 750:	ldr	w0, [x0]
 754:	bl	0 <strerror>
 758:	mov	x1, x0
 75c:	adrp	x0, 0 <sort_modent_by_name>
 760:	add	x0, x0, #0x0
 764:	bl	0 <ctf_dprintf>
 768:	mov	x0, x24
 76c:	bl	0 <unlink>
 770:	b	6c8 <ctf_arc_write+0x70>
 774:	nop

0000000000000778 <ctf_arc_bufopen>:
 778:	mov	x1, #0x3eeb                	// #16107
 77c:	ldr	x3, [x0]
 780:	movk	x1, #0xd762, lsl #16
 784:	movk	x1, #0xf2a4, lsl #32
 788:	movk	x1, #0x8b47, lsl #48
 78c:	cmp	x3, x1
 790:	b.ne	798 <ctf_arc_bufopen+0x20>  // b.any
 794:	ret
 798:	mov	x0, #0x0                   	// #0
 79c:	cbz	x2, 794 <ctf_arc_bufopen+0x1c>
 7a0:	mov	w1, #0x3e8                 	// #1000
 7a4:	str	w1, [x2]
 7a8:	ret
 7ac:	nop

00000000000007b0 <ctf_arc_open_internal>:
 7b0:	stp	x29, x30, [sp, #-192]!
 7b4:	mov	x29, sp
 7b8:	stp	x19, x20, [sp, #16]
 7bc:	stp	x21, x22, [sp, #32]
 7c0:	mov	x21, x0
 7c4:	mov	x22, x1
 7c8:	stp	x23, x24, [sp, #48]
 7cc:	bl	0 <libctf_init_debug>
 7d0:	mov	x0, x21
 7d4:	mov	w1, #0x0                   	// #0
 7d8:	bl	0 <open>
 7dc:	tbnz	w0, #31, 868 <ctf_arc_open_internal+0xb8>
 7e0:	mov	w19, w0
 7e4:	mov	w1, w0
 7e8:	add	x2, sp, #0x40
 7ec:	mov	w0, #0x0                   	// #0
 7f0:	bl	0 <__fxstat>
 7f4:	tbnz	w0, #31, 8fc <ctf_arc_open_internal+0x14c>
 7f8:	ldr	x1, [sp, #112]
 7fc:	mov	w4, w19
 800:	mov	x5, #0x0                   	// #0
 804:	mov	w3, #0x2                   	// #2
 808:	mov	w2, #0x3                   	// #3
 80c:	mov	x0, #0x0                   	// #0
 810:	bl	0 <mmap>
 814:	mov	x20, x0
 818:	sub	x0, x0, #0x1
 81c:	cmn	x0, #0x3
 820:	b.hi	910 <ctf_arc_open_internal+0x160>  // b.pmore
 824:	mov	x0, #0x3eeb                	// #16107
 828:	ldr	x1, [x20]
 82c:	movk	x0, #0xd762, lsl #16
 830:	movk	x0, #0xf2a4, lsl #32
 834:	movk	x0, #0x8b47, lsl #48
 838:	cmp	x1, x0
 83c:	ldr	x24, [sp, #112]
 840:	b.ne	8cc <ctf_arc_open_internal+0x11c>  // b.any
 844:	str	x24, [x20]
 848:	mov	w0, w19
 84c:	bl	0 <close>
 850:	mov	x0, x20
 854:	ldp	x19, x20, [sp, #16]
 858:	ldp	x21, x22, [sp, #32]
 85c:	ldp	x23, x24, [sp, #48]
 860:	ldp	x29, x30, [sp], #192
 864:	ret
 868:	adrp	x24, 0 <sort_modent_by_name>
 86c:	bl	0 <__errno_location>
 870:	add	x24, x24, #0x0
 874:	mov	x23, x0
 878:	ldr	w0, [x23]
 87c:	cbz	x22, 888 <ctf_arc_open_internal+0xd8>
 880:	str	w0, [x22]
 884:	ldr	w0, [x23]
 888:	cmp	w0, #0x3e7
 88c:	b.gt	8c0 <ctf_arc_open_internal+0x110>
 890:	bl	0 <strerror>
 894:	mov	x2, x0
 898:	mov	x1, x21
 89c:	mov	x0, x24
 8a0:	mov	x20, #0x0                   	// #0
 8a4:	bl	0 <ctf_dprintf>
 8a8:	mov	x0, x20
 8ac:	ldp	x19, x20, [sp, #16]
 8b0:	ldp	x21, x22, [sp, #32]
 8b4:	ldp	x23, x24, [sp, #48]
 8b8:	ldp	x29, x30, [sp], #192
 8bc:	ret
 8c0:	bl	0 <ctf_errmsg>
 8c4:	mov	x2, x0
 8c8:	b	898 <ctf_arc_open_internal+0xe8>
 8cc:	bl	0 <__errno_location>
 8d0:	mov	x23, x0
 8d4:	mov	w2, #0x3e8                 	// #1000
 8d8:	mov	x1, x24
 8dc:	mov	x0, x20
 8e0:	adrp	x24, 0 <sort_modent_by_name>
 8e4:	str	w2, [x23]
 8e8:	add	x24, x24, #0x0
 8ec:	bl	0 <munmap>
 8f0:	mov	w0, w19
 8f4:	bl	0 <close>
 8f8:	b	878 <ctf_arc_open_internal+0xc8>
 8fc:	adrp	x24, 0 <sort_modent_by_name>
 900:	bl	0 <__errno_location>
 904:	add	x24, x24, #0x0
 908:	mov	x23, x0
 90c:	b	8f0 <ctf_arc_open_internal+0x140>
 910:	adrp	x24, 0 <sort_modent_by_name>
 914:	bl	0 <__errno_location>
 918:	add	x24, x24, #0x0
 91c:	mov	x23, x0
 920:	b	8f0 <ctf_arc_open_internal+0x140>
 924:	nop

0000000000000928 <ctf_arc_close_internal>:
 928:	cbz	x0, 934 <ctf_arc_close_internal+0xc>
 92c:	ldr	x1, [x0]
 930:	b	0 <munmap>
 934:	ret

0000000000000938 <ctf_arc_close>:
 938:	cbz	x0, 9a0 <ctf_arc_close+0x68>
 93c:	stp	x29, x30, [sp, #-32]!
 940:	mov	x29, sp
 944:	str	x19, [sp, #16]
 948:	mov	x19, x0
 94c:	ldr	w0, [x0]
 950:	cbz	w0, 994 <ctf_arc_close+0x5c>
 954:	ldr	x0, [x19, #16]
 958:	cbz	x0, 964 <ctf_arc_close+0x2c>
 95c:	ldr	x1, [x0]
 960:	bl	0 <munmap>
 964:	ldr	x0, [x19, #32]
 968:	bl	0 <free>
 96c:	ldr	x0, [x19, #88]
 970:	bl	0 <free>
 974:	ldr	x1, [x19, #104]
 978:	cbz	x1, 984 <ctf_arc_close+0x4c>
 97c:	mov	x0, x19
 980:	blr	x1
 984:	mov	x0, x19
 988:	ldr	x19, [sp, #16]
 98c:	ldp	x29, x30, [sp], #32
 990:	b	0 <free>
 994:	ldr	x0, [x19, #8]
 998:	bl	0 <ctf_file_close>
 99c:	b	964 <ctf_arc_close+0x2c>
 9a0:	ret
 9a4:	nop

00000000000009a8 <ctf_arc_open_by_name_sections>:
 9a8:	stp	x29, x30, [sp, #-32]!
 9ac:	mov	x29, sp
 9b0:	ldr	w5, [x0]
 9b4:	stp	x19, x20, [sp, #16]
 9b8:	mov	x19, x0
 9bc:	cbnz	w5, 9fc <ctf_arc_open_by_name_sections+0x54>
 9c0:	mov	x0, x3
 9c4:	cbz	x3, 9dc <ctf_arc_open_by_name_sections+0x34>
 9c8:	adrp	x1, 0 <_CTF_SECTION>
 9cc:	mov	x20, x4
 9d0:	add	x1, x1, #0x0
 9d4:	bl	0 <strcmp>
 9d8:	cbnz	w0, a18 <ctf_arc_open_by_name_sections+0x70>
 9dc:	ldr	x0, [x19, #8]
 9e0:	ldr	w1, [x0, #548]
 9e4:	str	x19, [x0, #640]
 9e8:	add	w1, w1, #0x1
 9ec:	str	w1, [x0, #548]
 9f0:	ldp	x19, x20, [sp, #16]
 9f4:	ldp	x29, x30, [sp], #32
 9f8:	ret
 9fc:	ldr	x0, [x0, #16]
 a00:	bl	18 <ctf_arc_open_by_name_internal>
 a04:	cbz	x0, 9f0 <ctf_arc_open_by_name_sections+0x48>
 a08:	str	x19, [x0, #640]
 a0c:	ldp	x19, x20, [sp, #16]
 a10:	ldp	x29, x30, [sp], #32
 a14:	ret
 a18:	mov	x0, #0x0                   	// #0
 a1c:	cbz	x20, 9f0 <ctf_arc_open_by_name_sections+0x48>
 a20:	mov	w1, #0x415                 	// #1045
 a24:	str	w1, [x20]
 a28:	b	9f0 <ctf_arc_open_by_name_sections+0x48>
 a2c:	nop

0000000000000a30 <ctf_arc_open_by_name>:
 a30:	mov	x3, x1
 a34:	mov	x4, x2
 a38:	ldr	x1, [x0, #24]
 a3c:	add	x7, x0, #0x18
 a40:	ldr	x2, [x0, #56]
 a44:	cmp	x1, #0x0
 a48:	add	x6, x0, #0x38
 a4c:	csel	x1, x1, x7, eq  // eq = none
 a50:	cmp	x2, #0x0
 a54:	csel	x2, x2, x6, eq  // eq = none
 a58:	b	9a8 <ctf_arc_open_by_name_sections>
 a5c:	nop

0000000000000a60 <ctf_archive_raw_iter>:
 a60:	stp	x29, x30, [sp, #-64]!
 a64:	mov	x29, sp
 a68:	stp	x21, x22, [sp, #32]
 a6c:	mov	x21, x1
 a70:	ldr	w1, [x0]
 a74:	cbz	w1, b08 <ctf_archive_raw_iter+0xa8>
 a78:	stp	x19, x20, [sp, #16]
 a7c:	mov	x22, x2
 a80:	ldr	x19, [x0, #16]
 a84:	stp	x23, x24, [sp, #48]
 a88:	mov	x24, #0x0                   	// #0
 a8c:	add	x20, x19, #0x28
 a90:	ldp	x0, x23, [x19, #16]
 a94:	cbnz	x0, aa8 <ctf_archive_raw_iter+0x48>
 a98:	b	af0 <ctf_archive_raw_iter+0x90>
 a9c:	ldr	x0, [x19, #16]
 aa0:	cmp	x24, x0
 aa4:	b.cs	af0 <ctf_archive_raw_iter+0x90>  // b.hs, b.nlast
 aa8:	ldp	x0, x1, [x20]
 aac:	mov	x3, x22
 ab0:	ldr	x4, [x19, #32]
 ab4:	add	x24, x24, #0x1
 ab8:	add	x20, x20, #0x10
 abc:	add	x4, x4, x1
 ac0:	add	x0, x23, x0
 ac4:	add	x1, x19, x4
 ac8:	add	x0, x19, x0
 acc:	add	x1, x1, #0x8
 ad0:	ldr	x2, [x19, x4]
 ad4:	blr	x21
 ad8:	cbz	w0, a9c <ctf_archive_raw_iter+0x3c>
 adc:	ldp	x19, x20, [sp, #16]
 ae0:	ldp	x23, x24, [sp, #48]
 ae4:	ldp	x21, x22, [sp, #32]
 ae8:	ldp	x29, x30, [sp], #64
 aec:	ret
 af0:	mov	w0, #0x0                   	// #0
 af4:	ldp	x19, x20, [sp, #16]
 af8:	ldp	x21, x22, [sp, #32]
 afc:	ldp	x23, x24, [sp, #48]
 b00:	ldp	x29, x30, [sp], #64
 b04:	ret
 b08:	mov	w0, #0xffffffea            	// #-22
 b0c:	b	ae4 <ctf_archive_raw_iter+0x84>

0000000000000b10 <ctf_archive_iter>:
 b10:	stp	x29, x30, [sp, #-112]!
 b14:	add	x4, x0, #0x18
 b18:	add	x3, x0, #0x38
 b1c:	mov	x29, sp
 b20:	stp	x19, x20, [sp, #16]
 b24:	mov	x19, x0
 b28:	stp	x21, x22, [sp, #32]
 b2c:	ldr	x21, [x0, #24]
 b30:	stp	x23, x24, [sp, #48]
 b34:	ldr	w0, [x0]
 b38:	ldr	x22, [x19, #56]
 b3c:	cmp	x21, #0x0
 b40:	csel	x21, x21, x4, eq  // eq = none
 b44:	mov	x23, x1
 b48:	cmp	x22, #0x0
 b4c:	csel	x22, x22, x3, eq  // eq = none
 b50:	cbnz	w0, b78 <ctf_archive_iter+0x68>
 b54:	ldr	x0, [x19, #8]
 b58:	adrp	x1, 0 <_CTF_SECTION>
 b5c:	add	x1, x1, #0x0
 b60:	blr	x23
 b64:	ldp	x19, x20, [sp, #16]
 b68:	ldp	x21, x22, [sp, #32]
 b6c:	ldp	x23, x24, [sp, #48]
 b70:	ldp	x29, x30, [sp], #112
 b74:	ret
 b78:	stp	x25, x26, [sp, #64]
 b7c:	ldr	x26, [x19, #16]
 b80:	stp	x27, x28, [sp, #80]
 b84:	ldp	x0, x27, [x26, #16]
 b88:	cbz	x0, c20 <ctf_archive_iter+0x110>
 b8c:	mov	x25, x2
 b90:	add	x28, x26, #0x28
 b94:	mov	x24, #0x0                   	// #0
 b98:	b	bc4 <ctf_archive_iter+0xb4>
 b9c:	str	x19, [x0, #640]
 ba0:	blr	x23
 ba4:	mov	w1, w0
 ba8:	str	w1, [sp, #108]
 bac:	mov	x0, x20
 bb0:	cbnz	w1, c30 <ctf_archive_iter+0x120>
 bb4:	bl	0 <ctf_file_close>
 bb8:	ldr	x0, [x26, #16]
 bbc:	cmp	x24, x0
 bc0:	b.cs	c20 <ctf_archive_iter+0x110>  // b.hs, b.nlast
 bc4:	lsl	x3, x24, #4
 bc8:	mov	x2, x22
 bcc:	mov	x1, x21
 bd0:	add	x4, sp, #0x6c
 bd4:	mov	x0, x26
 bd8:	add	x24, x24, #0x1
 bdc:	ldr	x20, [x28, x3]
 be0:	add	x20, x27, x20
 be4:	add	x20, x26, x20
 be8:	mov	x3, x20
 bec:	bl	18 <ctf_arc_open_by_name_internal>
 bf0:	mov	x1, x20
 bf4:	mov	x2, x25
 bf8:	mov	x20, x0
 bfc:	cbnz	x0, b9c <ctf_archive_iter+0x8c>
 c00:	ldr	w0, [sp, #108]
 c04:	ldp	x19, x20, [sp, #16]
 c08:	ldp	x21, x22, [sp, #32]
 c0c:	ldp	x23, x24, [sp, #48]
 c10:	ldp	x25, x26, [sp, #64]
 c14:	ldp	x27, x28, [sp, #80]
 c18:	ldp	x29, x30, [sp], #112
 c1c:	ret
 c20:	mov	w0, #0x0                   	// #0
 c24:	ldp	x25, x26, [sp, #64]
 c28:	ldp	x27, x28, [sp, #80]
 c2c:	b	b64 <ctf_archive_iter+0x54>
 c30:	bl	0 <ctf_file_close>
 c34:	b	c00 <ctf_archive_iter+0xf0>

ctf-dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_is_slice>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x20, x1
      10:	mov	x19, x0
      14:	str	x21, [sp, #32]
      18:	mov	x21, x2
      1c:	bl	0 <ctf_type_kind>
      20:	sub	w1, w0, #0x1
      24:	cmp	w1, #0x1
      28:	ccmp	w0, #0x8, #0x4, hi  // hi = pmore
      2c:	b.ne	44 <ctf_is_slice+0x44>  // b.any
      30:	mov	x1, x20
      34:	mov	x0, x19
      38:	bl	0 <ctf_type_reference>
      3c:	cmn	x0, #0x1
      40:	b.ne	58 <ctf_is_slice+0x58>  // b.any
      44:	mov	w0, #0x0                   	// #0
      48:	ldp	x19, x20, [sp, #16]
      4c:	ldr	x21, [sp, #32]
      50:	ldp	x29, x30, [sp], #48
      54:	ret
      58:	mov	x2, x21
      5c:	mov	x1, x20
      60:	mov	x0, x19
      64:	bl	0 <ctf_type_encoding>
      68:	cmp	w0, #0x0
      6c:	cset	w0, eq  // eq = none
      70:	ldp	x19, x20, [sp, #16]
      74:	ldr	x21, [sp, #32]
      78:	ldp	x29, x30, [sp], #48
      7c:	ret

0000000000000080 <ctf_dump_member>:
      80:	stp	x29, x30, [sp, #-112]!
      84:	mov	x29, sp
      88:	stp	x19, x20, [sp, #16]
      8c:	stp	x21, x22, [sp, #32]
      90:	sxtw	x22, w3
      94:	cmp	x22, #0x0
      98:	stp	x23, x24, [sp, #48]
      9c:	mov	x21, x4
      a0:	mov	x24, x1
      a4:	stp	x25, x26, [sp, #64]
      a8:	mov	x26, x0
      ac:	mov	x25, x2
      b0:	str	xzr, [sp, #88]
      b4:	b.le	e8 <ctf_dump_member+0x68>
      b8:	adrp	x23, 0 <ctf_is_slice>
      bc:	add	x23, x23, #0x0
      c0:	mov	x19, #0x0                   	// #0
      c4:	nop
      c8:	ldr	x20, [x21]
      cc:	mov	x1, x23
      d0:	add	x19, x19, #0x1
      d4:	ldr	x0, [x20]
      d8:	bl	0 <ctf_str_append_noerr>
      dc:	str	x0, [x20]
      e0:	cmp	x19, x22
      e4:	b.ne	c8 <ctf_dump_member+0x48>  // b.any
      e8:	ldr	x0, [x21, #8]
      ec:	mov	x1, x24
      f0:	bl	0 <ctf_type_aname>
      f4:	mov	x19, x0
      f8:	cbz	x0, 21c <ctf_dump_member+0x19c>
      fc:	ldr	x0, [x21, #8]
     100:	mov	x1, x24
     104:	bl	0 <ctf_type_kind>
     108:	mov	w20, w0
     10c:	ldr	x0, [x21, #8]
     110:	mov	x1, x24
     114:	bl	0 <ctf_type_align>
     118:	mov	x7, x0
     11c:	adrp	x1, 0 <ctf_is_slice>
     120:	mov	w4, w20
     124:	mov	x6, x26
     128:	mov	x2, x25
     12c:	add	x0, sp, #0x58
     130:	mov	x5, x19
     134:	add	x1, x1, #0x0
     138:	mov	x3, x24
     13c:	bl	0 <asprintf>
     140:	tbnz	w0, #31, 24c <ctf_dump_member+0x1cc>
     144:	ldr	x20, [x21]
     148:	ldr	x1, [sp, #88]
     14c:	ldr	x0, [x20]
     150:	bl	0 <ctf_str_append_noerr>
     154:	str	x0, [x20]
     158:	mov	x0, x19
     15c:	bl	0 <free>
     160:	ldr	x0, [sp, #88]
     164:	bl	0 <free>
     168:	str	xzr, [sp, #88]
     16c:	ldr	x0, [x21, #8]
     170:	mov	x1, x24
     174:	bl	0 <ctf_type_kind>
     178:	cmp	w0, #0x1
     17c:	b.eq	194 <ctf_dump_member+0x114>  // b.none
     180:	ldr	x0, [x21, #8]
     184:	mov	x1, x24
     188:	bl	0 <ctf_type_kind>
     18c:	cmp	w0, #0x2
     190:	b.ne	2bc <ctf_dump_member+0x23c>  // b.any
     194:	add	x19, sp, #0x60
     198:	ldr	x0, [x21, #8]
     19c:	mov	x2, x19
     1a0:	mov	x1, x24
     1a4:	bl	0 <ctf_type_encoding>
     1a8:	ldp	w2, w3, [sp, #96]
     1ac:	adrp	x1, 0 <ctf_is_slice>
     1b0:	ldr	w4, [sp, #104]
     1b4:	add	x0, sp, #0x58
     1b8:	add	x1, x1, #0x0
     1bc:	bl	0 <asprintf>
     1c0:	tbnz	w0, #31, 248 <ctf_dump_member+0x1c8>
     1c4:	ldr	x19, [x21]
     1c8:	ldr	x1, [sp, #88]
     1cc:	ldr	x0, [x19]
     1d0:	bl	0 <ctf_str_append_noerr>
     1d4:	str	x0, [x19]
     1d8:	ldr	x0, [sp, #88]
     1dc:	bl	0 <free>
     1e0:	str	xzr, [sp, #88]
     1e4:	ldr	x19, [x21]
     1e8:	adrp	x1, 0 <ctf_is_slice>
     1ec:	add	x1, x1, #0x0
     1f0:	ldr	x0, [x19]
     1f4:	bl	0 <ctf_str_append_noerr>
     1f8:	mov	x1, x0
     1fc:	str	x1, [x19]
     200:	mov	w0, #0x0                   	// #0
     204:	ldp	x19, x20, [sp, #16]
     208:	ldp	x21, x22, [sp, #32]
     20c:	ldp	x23, x24, [sp, #48]
     210:	ldp	x25, x26, [sp, #64]
     214:	ldp	x29, x30, [sp], #112
     218:	ret
     21c:	cbz	x24, 230 <ctf_dump_member+0x1b0>
     220:	ldr	x0, [x21, #8]
     224:	bl	0 <ctf_errno>
     228:	cmp	w0, #0x41b
     22c:	b.ne	248 <ctf_dump_member+0x1c8>  // b.any
     230:	adrp	x1, 0 <ctf_is_slice>
     234:	mov	x2, x25
     238:	add	x0, sp, #0x58
     23c:	add	x1, x1, #0x0
     240:	bl	0 <asprintf>
     244:	tbz	w0, #31, 284 <ctf_dump_member+0x204>
     248:	mov	x19, #0x0                   	// #0
     24c:	mov	x0, x19
     250:	bl	0 <free>
     254:	ldr	x0, [sp, #88]
     258:	bl	0 <free>
     25c:	bl	0 <__errno_location>
     260:	ldr	w1, [x0]
     264:	ldr	x0, [x21, #8]
     268:	bl	0 <ctf_set_errno>
     26c:	ldp	x19, x20, [sp, #16]
     270:	ldp	x21, x22, [sp, #32]
     274:	ldp	x23, x24, [sp, #48]
     278:	ldp	x25, x26, [sp, #64]
     27c:	ldp	x29, x30, [sp], #112
     280:	ret
     284:	ldr	x19, [x21]
     288:	ldr	x1, [sp, #88]
     28c:	ldr	x0, [x19]
     290:	bl	0 <ctf_str_append_noerr>
     294:	str	x0, [x19]
     298:	ldr	x0, [sp, #88]
     29c:	bl	0 <free>
     2a0:	mov	w0, #0x0                   	// #0
     2a4:	ldp	x19, x20, [sp, #16]
     2a8:	ldp	x21, x22, [sp, #32]
     2ac:	ldp	x23, x24, [sp, #48]
     2b0:	ldp	x25, x26, [sp, #64]
     2b4:	ldp	x29, x30, [sp], #112
     2b8:	ret
     2bc:	ldr	x0, [x21, #8]
     2c0:	add	x19, sp, #0x60
     2c4:	mov	x2, x19
     2c8:	mov	x1, x24
     2cc:	bl	0 <ctf_is_slice>
     2d0:	cmp	w0, #0x8
     2d4:	b.ne	1e4 <ctf_dump_member+0x164>  // b.any
     2d8:	b	198 <ctf_dump_member+0x118>
     2dc:	nop

00000000000002e0 <ctf_dump_format_type>:
     2e0:	stp	x29, x30, [sp, #-128]!
     2e4:	cmp	w2, #0x0
     2e8:	mov	x29, sp
     2ec:	stp	x21, x22, [sp, #32]
     2f0:	adrp	x22, 0 <ctf_is_slice>
     2f4:	add	x4, x22, #0x0
     2f8:	mov	x21, x0
     2fc:	adrp	x22, 0 <ctf_is_slice>
     300:	add	x22, x22, #0x0
     304:	stp	x19, x20, [sp, #16]
     308:	mov	x19, x1
     30c:	stp	x23, x24, [sp, #48]
     310:	adrp	x23, 0 <ctf_is_slice>
     314:	add	x23, x23, #0x0
     318:	csel	x23, x23, x4, eq  // eq = none
     31c:	csel	x22, x22, x4, eq  // eq = none
     320:	mov	x1, x19
     324:	mov	x0, x21
     328:	adrp	x24, 0 <ctf_is_slice>
     32c:	add	x24, x24, #0x0
     330:	stp	x25, x26, [sp, #64]
     334:	adrp	x25, 0 <ctf_is_slice>
     338:	mov	x26, #0x0                   	// #0
     33c:	add	x25, x25, #0x0
     340:	str	x27, [sp, #80]
     344:	str	xzr, [sp, #104]
     348:	bl	0 <ctf_type_aname>
     34c:	mov	x20, x0
     350:	cbz	x0, 440 <ctf_dump_format_type+0x160>
     354:	nop
     358:	add	x2, sp, #0x70
     35c:	mov	x1, x19
     360:	mov	x0, x21
     364:	bl	0 <ctf_is_slice>
     368:	mov	x1, x19
     36c:	mov	w2, w0
     370:	mov	x0, x21
     374:	cbnz	w2, 4a0 <ctf_dump_format_type+0x1c0>
     378:	ldrb	w2, [x20]
     37c:	cmp	w2, #0x0
     380:	csel	x27, x25, x20, eq  // eq = none
     384:	bl	0 <ctf_type_size>
     388:	mov	x5, x0
     38c:	mov	x6, x22
     390:	mov	x4, x27
     394:	mov	x3, x19
     398:	mov	x2, x23
     39c:	mov	x1, x24
     3a0:	add	x0, sp, #0x68
     3a4:	bl	0 <asprintf>
     3a8:	tbnz	w0, #31, 4cc <ctf_dump_format_type+0x1ec>
     3ac:	mov	x0, x20
     3b0:	bl	0 <free>
     3b4:	ldr	x1, [sp, #104]
     3b8:	mov	x0, x26
     3bc:	bl	0 <ctf_str_append_noerr>
     3c0:	mov	x20, x0
     3c4:	ldr	x0, [sp, #104]
     3c8:	bl	0 <free>
     3cc:	str	xzr, [sp, #104]
     3d0:	mov	x1, x19
     3d4:	mov	x0, x21
     3d8:	bl	0 <ctf_type_reference>
     3dc:	mov	x19, x0
     3e0:	cmn	x0, #0x1
     3e4:	b.ne	418 <ctf_dump_format_type+0x138>  // b.any
     3e8:	mov	x0, x21
     3ec:	bl	0 <ctf_errno>
     3f0:	cmp	w0, #0x400
     3f4:	b.ne	474 <ctf_dump_format_type+0x194>  // b.any
     3f8:	mov	x0, x20
     3fc:	ldp	x19, x20, [sp, #16]
     400:	ldp	x21, x22, [sp, #32]
     404:	ldp	x23, x24, [sp, #48]
     408:	ldp	x25, x26, [sp, #64]
     40c:	ldr	x27, [sp, #80]
     410:	ldp	x29, x30, [sp], #128
     414:	ret
     418:	mov	x0, x20
     41c:	adrp	x1, 0 <ctf_is_slice>
     420:	add	x1, x1, #0x0
     424:	bl	0 <ctf_str_append_noerr>
     428:	mov	x1, x19
     42c:	mov	x26, x0
     430:	mov	x0, x21
     434:	bl	0 <ctf_type_aname>
     438:	mov	x20, x0
     43c:	cbnz	x0, 358 <ctf_dump_format_type+0x78>
     440:	cbnz	x19, 51c <ctf_dump_format_type+0x23c>
     444:	mov	x0, x26
     448:	adrp	x1, 0 <ctf_is_slice>
     44c:	add	x1, x1, #0x0
     450:	bl	0 <ctf_str_append_noerr>
     454:	mov	w1, #0x400                 	// #1024
     458:	mov	x20, x0
     45c:	mov	x0, x21
     460:	bl	0 <ctf_set_errno>
     464:	mov	x0, x21
     468:	bl	0 <ctf_errno>
     46c:	cmp	w0, #0x400
     470:	b.eq	3f8 <ctf_dump_format_type+0x118>  // b.none
     474:	mov	x0, x20
     478:	mov	x20, #0x0                   	// #0
     47c:	bl	0 <free>
     480:	mov	x0, x20
     484:	ldp	x19, x20, [sp, #16]
     488:	ldp	x21, x22, [sp, #32]
     48c:	ldp	x23, x24, [sp, #48]
     490:	ldp	x25, x26, [sp, #64]
     494:	ldr	x27, [sp, #80]
     498:	ldp	x29, x30, [sp], #128
     49c:	ret
     4a0:	add	x2, sp, #0x70
     4a4:	bl	0 <ctf_type_encoding>
     4a8:	ldp	w4, w5, [sp, #116]
     4ac:	adrp	x1, 0 <ctf_is_slice>
     4b0:	mov	x6, x22
     4b4:	add	x1, x1, #0x0
     4b8:	mov	x3, x19
     4bc:	mov	x2, x23
     4c0:	add	x0, sp, #0x68
     4c4:	bl	0 <asprintf>
     4c8:	tbz	w0, #31, 3ac <ctf_dump_format_type+0xcc>
     4cc:	bl	0 <__errno_location>
     4d0:	mov	x1, x0
     4d4:	mov	x0, x21
     4d8:	ldr	w1, [x1]
     4dc:	bl	0 <ctf_set_errno>
     4e0:	mov	x0, x20
     4e4:	bl	0 <free>
     4e8:	mov	x0, x26
     4ec:	bl	0 <free>
     4f0:	ldr	x0, [sp, #104]
     4f4:	mov	x20, #0x0                   	// #0
     4f8:	bl	0 <free>
     4fc:	mov	x0, x20
     500:	ldp	x19, x20, [sp, #16]
     504:	ldp	x21, x22, [sp, #32]
     508:	ldp	x23, x24, [sp, #48]
     50c:	ldp	x25, x26, [sp, #64]
     510:	ldr	x27, [sp, #80]
     514:	ldp	x29, x30, [sp], #128
     518:	ret
     51c:	mov	x0, x21
     520:	bl	0 <ctf_errno>
     524:	cmp	w0, #0x41b
     528:	b.ne	4e0 <ctf_dump_format_type+0x200>  // b.any
     52c:	mov	x0, x26
     530:	adrp	x1, 0 <ctf_is_slice>
     534:	add	x1, x1, #0x0
     538:	bl	0 <ctf_str_append_noerr>
     53c:	mov	w1, #0x400                 	// #1024
     540:	mov	x20, x0
     544:	mov	x0, x21
     548:	bl	0 <ctf_set_errno>
     54c:	b	464 <ctf_dump_format_type+0x184>

0000000000000550 <ctf_dump_append>:
     550:	stp	x29, x30, [sp, #-32]!
     554:	mov	x29, sp
     558:	stp	x19, x20, [sp, #16]
     55c:	mov	x19, x0
     560:	mov	x20, x1
     564:	mov	x0, #0x18                  	// #24
     568:	bl	0 <malloc>
     56c:	cbz	x0, 590 <ctf_dump_append+0x40>
     570:	mov	x1, x0
     574:	add	x0, x19, #0x18
     578:	str	x20, [x1, #16]
     57c:	bl	0 <ctf_list_append>
     580:	mov	w0, #0x0                   	// #0
     584:	ldp	x19, x20, [sp, #16]
     588:	ldp	x29, x30, [sp], #32
     58c:	ret
     590:	ldr	x0, [x19, #8]
     594:	mov	w1, #0xc                   	// #12
     598:	bl	0 <ctf_set_errno>
     59c:	b	584 <ctf_dump_append+0x34>

00000000000005a0 <ctf_dump_type>:
     5a0:	stp	x29, x30, [sp, #-80]!
     5a4:	mov	x29, sp
     5a8:	stp	x19, x20, [sp, #16]
     5ac:	mov	x19, x2
     5b0:	mov	x20, x0
     5b4:	mov	w2, w1
     5b8:	mov	x1, x0
     5bc:	ldr	x0, [x19, #8]
     5c0:	add	x3, sp, #0x38
     5c4:	stp	x3, x0, [sp, #64]
     5c8:	bl	2e0 <ctf_dump_format_type>
     5cc:	str	x0, [sp, #56]
     5d0:	cbz	x0, 6bc <ctf_dump_type+0x11c>
     5d4:	adrp	x1, 0 <ctf_is_slice>
     5d8:	add	x1, x1, #0x0
     5dc:	bl	0 <ctf_str_append_noerr>
     5e0:	mov	x4, x0
     5e4:	ldr	x0, [x19, #8]
     5e8:	adrp	x2, 0 <ctf_is_slice>
     5ec:	add	x3, sp, #0x40
     5f0:	add	x2, x2, #0x0
     5f4:	mov	x1, x20
     5f8:	str	x4, [sp, #56]
     5fc:	bl	0 <ctf_type_visit>
     600:	tbnz	w0, #31, 63c <ctf_dump_type+0x9c>
     604:	ldr	x20, [sp, #56]
     608:	mov	x0, x20
     60c:	bl	0 <strlen>
     610:	sub	x0, x0, #0x1
     614:	ldrb	w1, [x20, x0]
     618:	cmp	w1, #0xa
     61c:	b.eq	66c <ctf_dump_type+0xcc>  // b.none
     620:	mov	x1, x20
     624:	mov	x0, x19
     628:	bl	550 <ctf_dump_append>
     62c:	mov	w0, #0x0                   	// #0
     630:	ldp	x19, x20, [sp, #16]
     634:	ldp	x29, x30, [sp], #80
     638:	ret
     63c:	cbz	x20, 650 <ctf_dump_type+0xb0>
     640:	ldr	x0, [x19, #8]
     644:	bl	0 <ctf_errno>
     648:	cmp	w0, #0x41b
     64c:	b.ne	678 <ctf_dump_type+0xd8>  // b.any
     650:	ldr	x1, [sp, #56]
     654:	mov	x0, x19
     658:	bl	550 <ctf_dump_append>
     65c:	mov	w0, #0x0                   	// #0
     660:	ldp	x19, x20, [sp, #16]
     664:	ldp	x29, x30, [sp], #80
     668:	ret
     66c:	strb	wzr, [x20, x0]
     670:	ldr	x20, [sp, #56]
     674:	b	620 <ctf_dump_type+0x80>
     678:	str	x21, [sp, #32]
     67c:	adrp	x21, 0 <ctf_is_slice>
     680:	add	x21, x21, #0x0
     684:	ldr	x0, [x19, #8]
     688:	bl	0 <ctf_errno>
     68c:	bl	0 <ctf_errmsg>
     690:	mov	x3, x0
     694:	mov	x1, x21
     698:	mov	x2, x20
     69c:	adrp	x0, 0 <ctf_is_slice>
     6a0:	add	x0, x0, #0x0
     6a4:	bl	0 <ctf_dprintf>
     6a8:	ldr	x0, [sp, #56]
     6ac:	bl	0 <free>
     6b0:	mov	w0, #0xffffffff            	// #-1
     6b4:	ldr	x21, [sp, #32]
     6b8:	b	630 <ctf_dump_type+0x90>
     6bc:	str	x21, [sp, #32]
     6c0:	adrp	x21, 0 <ctf_is_slice>
     6c4:	add	x21, x21, #0x0
     6c8:	b	684 <ctf_dump_type+0xe4>
     6cc:	nop

00000000000006d0 <ctf_dump_label>:
     6d0:	stp	x29, x30, [sp, #-48]!
     6d4:	mov	x29, sp
     6d8:	stp	x19, x20, [sp, #16]
     6dc:	mov	x20, x1
     6e0:	mov	x19, x2
     6e4:	adrp	x1, 0 <ctf_is_slice>
     6e8:	mov	x2, x0
     6ec:	add	x1, x1, #0x0
     6f0:	add	x0, sp, #0x28
     6f4:	bl	0 <asprintf>
     6f8:	tbnz	w0, #31, 74c <ctf_dump_label+0x7c>
     6fc:	ldr	x1, [x20]
     700:	mov	w2, #0x1                   	// #1
     704:	ldr	x0, [x19, #8]
     708:	bl	2e0 <ctf_dump_format_type>
     70c:	mov	x20, x0
     710:	ldr	x0, [sp, #40]
     714:	cbz	x20, 768 <ctf_dump_label+0x98>
     718:	mov	x1, x20
     71c:	bl	0 <ctf_str_append_noerr>
     720:	mov	x1, x0
     724:	mov	x0, x20
     728:	str	x1, [sp, #40]
     72c:	bl	0 <free>
     730:	ldr	x1, [sp, #40]
     734:	mov	x0, x19
     738:	bl	550 <ctf_dump_append>
     73c:	mov	w0, #0x0                   	// #0
     740:	ldp	x19, x20, [sp, #16]
     744:	ldp	x29, x30, [sp], #48
     748:	ret
     74c:	bl	0 <__errno_location>
     750:	ldr	w1, [x0]
     754:	ldr	x0, [x19, #8]
     758:	bl	0 <ctf_set_errno>
     75c:	ldp	x19, x20, [sp, #16]
     760:	ldp	x29, x30, [sp], #48
     764:	ret
     768:	bl	0 <free>
     76c:	mov	w0, #0xffffffff            	// #-1
     770:	b	740 <ctf_dump_label+0x70>
     774:	nop

0000000000000778 <ctf_dump_header_strfield>:
     778:	cbnz	w3, 784 <ctf_dump_header_strfield+0xc>
     77c:	mov	w0, #0x0                   	// #0
     780:	ret
     784:	stp	x29, x30, [sp, #-64]!
     788:	mov	x29, sp
     78c:	stp	x19, x20, [sp, #16]
     790:	mov	x19, x2
     794:	mov	x20, x1
     798:	mov	w1, w3
     79c:	str	x21, [sp, #32]
     7a0:	mov	x21, x0
     7a4:	bl	0 <ctf_strptr>
     7a8:	adrp	x1, 0 <ctf_is_slice>
     7ac:	mov	x3, x0
     7b0:	mov	x2, x19
     7b4:	add	x0, sp, #0x38
     7b8:	add	x1, x1, #0x0
     7bc:	bl	0 <asprintf>
     7c0:	tbnz	w0, #31, 7e4 <ctf_dump_header_strfield+0x6c>
     7c4:	ldr	x1, [sp, #56]
     7c8:	mov	x0, x20
     7cc:	bl	550 <ctf_dump_append>
     7d0:	mov	w0, #0x0                   	// #0
     7d4:	ldp	x19, x20, [sp, #16]
     7d8:	ldr	x21, [sp, #32]
     7dc:	ldp	x29, x30, [sp], #64
     7e0:	ret
     7e4:	bl	0 <__errno_location>
     7e8:	mov	x1, x0
     7ec:	mov	x0, x21
     7f0:	ldr	w1, [x1]
     7f4:	bl	0 <ctf_set_errno>
     7f8:	b	7d4 <ctf_dump_header_strfield+0x5c>
     7fc:	nop

0000000000000800 <ctf_dump_var>:
     800:	stp	x29, x30, [sp, #-48]!
     804:	mov	x29, sp
     808:	stp	x19, x20, [sp, #16]
     80c:	mov	x20, x1
     810:	mov	x19, x2
     814:	adrp	x1, 0 <ctf_is_slice>
     818:	mov	x2, x0
     81c:	add	x1, x1, #0x0
     820:	add	x0, sp, #0x28
     824:	bl	0 <asprintf>
     828:	tbnz	w0, #31, 87c <ctf_dump_var+0x7c>
     82c:	ldr	x0, [x19, #8]
     830:	mov	x1, x20
     834:	mov	w2, #0x1                   	// #1
     838:	bl	2e0 <ctf_dump_format_type>
     83c:	mov	x20, x0
     840:	ldr	x0, [sp, #40]
     844:	cbz	x20, 898 <ctf_dump_var+0x98>
     848:	mov	x1, x20
     84c:	bl	0 <ctf_str_append_noerr>
     850:	mov	x1, x0
     854:	mov	x0, x20
     858:	str	x1, [sp, #40]
     85c:	bl	0 <free>
     860:	ldr	x1, [sp, #40]
     864:	mov	x0, x19
     868:	bl	550 <ctf_dump_append>
     86c:	mov	w0, #0x0                   	// #0
     870:	ldp	x19, x20, [sp, #16]
     874:	ldp	x29, x30, [sp], #48
     878:	ret
     87c:	bl	0 <__errno_location>
     880:	ldr	w1, [x0]
     884:	ldr	x0, [x19, #8]
     888:	bl	0 <ctf_set_errno>
     88c:	ldp	x19, x20, [sp, #16]
     890:	ldp	x29, x30, [sp], #48
     894:	ret
     898:	bl	0 <free>
     89c:	mov	w0, #0xffffffff            	// #-1
     8a0:	b	870 <ctf_dump_var+0x70>
     8a4:	nop

00000000000008a8 <ctf_dump_header_sectfield>:
     8a8:	cmp	w4, w3
     8ac:	b.ne	8b8 <ctf_dump_header_sectfield+0x10>  // b.any
     8b0:	mov	w0, #0x0                   	// #0
     8b4:	ret
     8b8:	stp	x29, x30, [sp, #-48]!
     8bc:	sub	w5, w4, w3
     8c0:	sub	w4, w4, #0x1
     8c4:	mov	x29, sp
     8c8:	mov	w3, w3
     8cc:	stp	x19, x20, [sp, #16]
     8d0:	mov	x20, x0
     8d4:	mov	x19, x1
     8d8:	add	x0, sp, #0x28
     8dc:	adrp	x1, 0 <ctf_is_slice>
     8e0:	add	x1, x1, #0x0
     8e4:	bl	0 <asprintf>
     8e8:	tbnz	w0, #31, 908 <ctf_dump_header_sectfield+0x60>
     8ec:	ldr	x1, [sp, #40]
     8f0:	mov	x0, x19
     8f4:	bl	550 <ctf_dump_append>
     8f8:	mov	w0, #0x0                   	// #0
     8fc:	ldp	x19, x20, [sp, #16]
     900:	ldp	x29, x30, [sp], #48
     904:	ret
     908:	bl	0 <__errno_location>
     90c:	mov	x1, x0
     910:	mov	x0, x20
     914:	ldr	w1, [x1]
     918:	bl	0 <ctf_set_errno>
     91c:	ldp	x19, x20, [sp, #16]
     920:	ldp	x29, x30, [sp], #48
     924:	ret

0000000000000928 <ctf_dump>:
     928:	stp	x29, x30, [sp, #-192]!
     92c:	mov	x29, sp
     930:	stp	x27, x28, [sp, #80]
     934:	ldr	x28, [x1]
     938:	stp	x19, x20, [sp, #16]
     93c:	mov	w19, w2
     940:	stp	x21, x22, [sp, #32]
     944:	mov	x20, x4
     948:	mov	x21, x3
     94c:	stp	x23, x24, [sp, #48]
     950:	mov	x22, x0
     954:	mov	x23, x1
     958:	stp	x25, x26, [sp, #64]
     95c:	cbz	x28, b34 <ctf_dump+0x20c>
     960:	ldr	w1, [x28]
     964:	cmp	w1, w2
     968:	b.ne	ad0 <ctf_dump+0x1a8>  // b.any
     96c:	ldr	x0, [x28, #16]
     970:	cbz	x0, ac8 <ctf_dump+0x1a0>
     974:	ldr	x0, [x0, #8]
     978:	str	x0, [x28, #16]
     97c:	cbz	x0, ad8 <ctf_dump+0x1b0>
     980:	ldr	x23, [x0, #16]
     984:	cbz	x21, e68 <ctf_dump+0x540>
     988:	adrp	x26, 0 <ctf_is_slice>
     98c:	mov	x25, #0x0                   	// #0
     990:	add	x26, x26, #0x0
     994:	mov	w27, #0xa                   	// #10
     998:	cbz	x23, a10 <ctf_dump+0xe8>
     99c:	ldrb	w2, [x23]
     9a0:	mov	x0, x23
     9a4:	mov	w1, #0xa                   	// #10
     9a8:	cbz	w2, a10 <ctf_dump+0xe8>
     9ac:	bl	0 <strchr>
     9b0:	mov	x24, x0
     9b4:	mov	x2, x20
     9b8:	mov	x1, x23
     9bc:	mov	w0, w19
     9c0:	cbz	x24, a54 <ctf_dump+0x12c>
     9c4:	strb	wzr, [x24]
     9c8:	blr	x21
     9cc:	mov	x28, x0
     9d0:	mov	x1, x28
     9d4:	mov	x0, x25
     9d8:	bl	0 <ctf_str_append_noerr>
     9dc:	mov	x1, x26
     9e0:	bl	0 <ctf_str_append_noerr>
     9e4:	cmp	x23, x28
     9e8:	mov	x25, x0
     9ec:	b.eq	9f8 <ctf_dump+0xd0>  // b.none
     9f0:	mov	x0, x28
     9f4:	bl	0 <free>
     9f8:	mov	x23, x24
     9fc:	mov	w1, #0xa                   	// #10
     a00:	strb	w27, [x23], #1
     a04:	ldrb	w2, [x23]
     a08:	mov	x0, x23
     a0c:	cbnz	w2, 9ac <ctf_dump+0x84>
     a10:	mov	x0, x25
     a14:	bl	0 <strlen>
     a18:	sub	x0, x0, #0x1
     a1c:	ldrb	w1, [x25, x0]
     a20:	cmp	w1, #0xa
     a24:	b.eq	aa0 <ctf_dump+0x178>  // b.none
     a28:	mov	x0, x22
     a2c:	mov	w1, #0x0                   	// #0
     a30:	bl	0 <ctf_set_errno>
     a34:	mov	x0, x25
     a38:	ldp	x19, x20, [sp, #16]
     a3c:	ldp	x21, x22, [sp, #32]
     a40:	ldp	x23, x24, [sp, #48]
     a44:	ldp	x25, x26, [sp, #64]
     a48:	ldp	x27, x28, [sp, #80]
     a4c:	ldp	x29, x30, [sp], #192
     a50:	ret
     a54:	blr	x21
     a58:	mov	x19, x0
     a5c:	mov	x1, x19
     a60:	mov	x0, x25
     a64:	bl	0 <ctf_str_append_noerr>
     a68:	adrp	x1, 0 <ctf_is_slice>
     a6c:	add	x1, x1, #0x0
     a70:	bl	0 <ctf_str_append_noerr>
     a74:	mov	x25, x0
     a78:	cmp	x23, x19
     a7c:	b.eq	a10 <ctf_dump+0xe8>  // b.none
     a80:	mov	x0, x19
     a84:	bl	0 <free>
     a88:	mov	x0, x25
     a8c:	bl	0 <strlen>
     a90:	sub	x0, x0, #0x1
     a94:	ldrb	w1, [x25, x0]
     a98:	cmp	w1, #0xa
     a9c:	b.ne	a28 <ctf_dump+0x100>  // b.any
     aa0:	strb	wzr, [x25, x0]
     aa4:	b	a28 <ctf_dump+0x100>
     aa8:	cmp	w19, #0x5
     aac:	b.eq	f20 <ctf_dump+0x5f8>  // b.none
     ab0:	cmp	w19, #0x6
     ab4:	b.ne	e44 <ctf_dump+0x51c>  // b.any
     ab8:	ldp	x24, x0, [x22, #336]
     abc:	add	x0, x24, x0
     ac0:	cmp	x24, x0
     ac4:	b.cc	e88 <ctf_dump+0x560>  // b.lo, b.ul, b.last
     ac8:	ldr	x0, [x28, #32]
     acc:	b	978 <ctf_dump+0x50>
     ad0:	mov	w1, #0x418                 	// #1048
     ad4:	bl	0 <ctf_set_errno>
     ad8:	ldr	x19, [x28, #32]
     adc:	cbz	x19, af8 <ctf_dump+0x1d0>
     ae0:	ldr	x0, [x19, #16]
     ae4:	bl	0 <free>
     ae8:	mov	x0, x19
     aec:	ldr	x19, [x19, #8]
     af0:	bl	0 <free>
     af4:	cbnz	x19, ae0 <ctf_dump+0x1b8>
     af8:	mov	x0, x28
     afc:	bl	0 <free>
     b00:	mov	x0, x22
     b04:	mov	w1, #0x0                   	// #0
     b08:	bl	0 <ctf_set_errno>
     b0c:	str	xzr, [x23]
     b10:	mov	x25, #0x0                   	// #0
     b14:	mov	x0, x25
     b18:	ldp	x19, x20, [sp, #16]
     b1c:	ldp	x21, x22, [sp, #32]
     b20:	ldp	x23, x24, [sp, #48]
     b24:	ldp	x25, x26, [sp, #64]
     b28:	ldp	x27, x28, [sp, #80]
     b2c:	ldp	x29, x30, [sp], #192
     b30:	ret
     b34:	mov	x1, #0x1                   	// #1
     b38:	mov	x0, #0x28                  	// #40
     b3c:	bl	0 <calloc>
     b40:	str	x0, [x23]
     b44:	mov	x28, x0
     b48:	cbz	x0, 1230 <ctf_dump+0x908>
     b4c:	str	w19, [x0]
     b50:	cmp	w19, #0x3
     b54:	str	x22, [x0, #8]
     b58:	b.eq	f88 <ctf_dump+0x660>  // b.none
     b5c:	b.hi	aa8 <ctf_dump+0x180>  // b.pmore
     b60:	cmp	w19, #0x1
     b64:	b.eq	f3c <ctf_dump+0x614>  // b.none
     b68:	cmp	w19, #0x2
     b6c:	b.ne	c60 <ctf_dump+0x338>  // b.any
     b70:	ldr	x1, [x22, #432]
     b74:	mov	x0, x22
     b78:	mov	x24, #0x0                   	// #0
     b7c:	cbz	x1, ac8 <ctf_dump+0x1a0>
     b80:	adrp	x27, 0 <ctf_is_slice>
     b84:	adrp	x26, 0 <ctf_is_slice>
     b88:	add	x27, x27, #0x0
     b8c:	add	x26, x26, #0x0
     b90:	b	bf0 <ctf_dump+0x2c8>
     b94:	bl	0 <asprintf>
     b98:	tbnz	w0, #31, c40 <ctf_dump+0x318>
     b9c:	ldr	x0, [x28, #8]
     ba0:	mov	x1, x25
     ba4:	mov	w2, #0x1                   	// #1
     ba8:	bl	2e0 <ctf_dump_format_type>
     bac:	mov	x25, x0
     bb0:	ldr	x0, [sp, #144]
     bb4:	cbz	x25, 11e0 <ctf_dump+0x8b8>
     bb8:	mov	x1, x25
     bbc:	bl	0 <ctf_str_append_noerr>
     bc0:	mov	x1, x0
     bc4:	mov	x0, x25
     bc8:	str	x1, [sp, #144]
     bcc:	bl	0 <free>
     bd0:	ldr	x1, [sp, #144]
     bd4:	mov	x0, x28
     bd8:	bl	550 <ctf_dump_append>
     bdc:	ldr	x0, [x22, #432]
     be0:	add	x24, x24, #0x1
     be4:	cmp	x24, x0
     be8:	b.cs	96c <ctf_dump+0x44>  // b.hs, b.nlast
     bec:	ldr	x0, [x28, #8]
     bf0:	mov	x1, x24
     bf4:	bl	0 <ctf_lookup_by_symbol>
     bf8:	mov	x25, x0
     bfc:	cmn	x0, #0x1
     c00:	b.eq	f00 <ctf_dump+0x5d8>  // b.none
     c04:	mov	x1, x24
     c08:	mov	x0, x22
     c0c:	bl	0 <ctf_lookup_symbol_name>
     c10:	mov	x4, x0
     c14:	mov	x3, x24
     c18:	mov	x2, x24
     c1c:	mov	x1, x26
     c20:	add	x0, sp, #0x90
     c24:	ldrb	w6, [x4]
     c28:	cbz	w6, b94 <ctf_dump+0x26c>
     c2c:	mov	x2, x4
     c30:	mov	x1, x27
     c34:	add	x0, sp, #0x90
     c38:	bl	0 <asprintf>
     c3c:	tbz	w0, #31, b9c <ctf_dump+0x274>
     c40:	bl	0 <__errno_location>
     c44:	mov	x1, x0
     c48:	mov	x0, x22
     c4c:	ldr	w1, [x1]
     c50:	bl	0 <ctf_set_errno>
     c54:	tbnz	w0, #31, ad8 <ctf_dump+0x1b0>
     c58:	ldr	x0, [x28, #16]
     c5c:	b	970 <ctf_dump+0x48>
     c60:	cbnz	w19, f78 <ctf_dump+0x650>
     c64:	adrp	x3, 0 <ctf_is_slice>
     c68:	add	x3, x3, #0x0
     c6c:	ldr	x24, [x22, #8]
     c70:	adrp	x1, 0 <ctf_is_slice>
     c74:	ldp	x6, x7, [x3]
     c78:	add	x0, sp, #0x88
     c7c:	ldrh	w2, [x24]
     c80:	add	x1, x1, #0x0
     c84:	stp	x6, x7, [sp, #144]
     c88:	ldp	x8, x9, [x3, #16]
     c8c:	stp	x8, x9, [sp, #160]
     c90:	ldp	x6, x7, [x3, #32]
     c94:	stp	x6, x7, [sp, #176]
     c98:	bl	0 <asprintf>
     c9c:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     ca0:	ldr	x1, [sp, #136]
     ca4:	mov	x0, x28
     ca8:	bl	550 <ctf_dump_append>
     cac:	ldrb	w2, [x24, #2]
     cb0:	cmp	w2, #0x4
     cb4:	b.ls	11e8 <ctf_dump+0x8c0>  // b.plast
     cb8:	adrp	x3, 0 <ctf_is_slice>
     cbc:	add	x3, x3, #0x0
     cc0:	adrp	x1, 0 <ctf_is_slice>
     cc4:	add	x0, sp, #0x88
     cc8:	add	x1, x1, #0x0
     ccc:	bl	0 <asprintf>
     cd0:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     cd4:	ldr	x1, [sp, #136]
     cd8:	mov	x0, x28
     cdc:	bl	550 <ctf_dump_append>
     ce0:	ldrb	w2, [x22, #16]
     ce4:	cbz	w2, d20 <ctf_dump+0x3f8>
     ce8:	tst	x2, #0x1
     cec:	adrp	x1, 0 <ctf_is_slice>
     cf0:	adrp	x3, 0 <ctf_is_slice>
     cf4:	add	x1, x1, #0x0
     cf8:	add	x3, x3, #0x0
     cfc:	add	x0, sp, #0x88
     d00:	csel	x3, x3, x1, ne  // ne = any
     d04:	adrp	x1, 0 <ctf_is_slice>
     d08:	add	x1, x1, #0x0
     d0c:	bl	0 <asprintf>
     d10:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     d14:	ldr	x1, [sp, #136]
     d18:	mov	x0, x28
     d1c:	bl	550 <ctf_dump_append>
     d20:	ldr	w3, [x24, #4]
     d24:	adrp	x2, 0 <ctf_is_slice>
     d28:	mov	x1, x28
     d2c:	add	x2, x2, #0x0
     d30:	mov	x0, x22
     d34:	bl	778 <ctf_dump_header_strfield>
     d38:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     d3c:	ldr	w3, [x24, #8]
     d40:	adrp	x2, 0 <ctf_is_slice>
     d44:	mov	x1, x28
     d48:	add	x2, x2, #0x0
     d4c:	mov	x0, x22
     d50:	bl	778 <ctf_dump_header_strfield>
     d54:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     d58:	ldr	w3, [x24, #12]
     d5c:	adrp	x2, 0 <ctf_is_slice>
     d60:	mov	x1, x28
     d64:	add	x2, x2, #0x0
     d68:	mov	x0, x22
     d6c:	bl	778 <ctf_dump_header_strfield>
     d70:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     d74:	ldp	w3, w4, [x24, #16]
     d78:	adrp	x2, 0 <ctf_is_slice>
     d7c:	mov	x1, x28
     d80:	add	x2, x2, #0x0
     d84:	mov	x0, x22
     d88:	bl	8a8 <ctf_dump_header_sectfield>
     d8c:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     d90:	ldp	w3, w4, [x24, #20]
     d94:	adrp	x2, 0 <ctf_is_slice>
     d98:	mov	x1, x28
     d9c:	add	x2, x2, #0x0
     da0:	mov	x0, x22
     da4:	bl	8a8 <ctf_dump_header_sectfield>
     da8:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     dac:	ldr	w3, [x24, #24]
     db0:	adrp	x2, 0 <ctf_is_slice>
     db4:	ldr	w4, [x24, #36]
     db8:	add	x2, x2, #0x0
     dbc:	mov	x1, x28
     dc0:	mov	x0, x22
     dc4:	bl	8a8 <ctf_dump_header_sectfield>
     dc8:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     dcc:	ldp	w3, w4, [x24, #36]
     dd0:	adrp	x2, 0 <ctf_is_slice>
     dd4:	mov	x1, x28
     dd8:	add	x2, x2, #0x0
     ddc:	mov	x0, x22
     de0:	bl	8a8 <ctf_dump_header_sectfield>
     de4:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     de8:	ldp	w3, w4, [x24, #40]
     dec:	adrp	x2, 0 <ctf_is_slice>
     df0:	mov	x1, x28
     df4:	add	x2, x2, #0x0
     df8:	mov	x0, x22
     dfc:	bl	8a8 <ctf_dump_header_sectfield>
     e00:	tbnz	w0, #31, e28 <ctf_dump+0x500>
     e04:	ldp	w3, w4, [x24, #44]
     e08:	adrp	x2, 0 <ctf_is_slice>
     e0c:	mov	x1, x28
     e10:	add	x2, x2, #0x0
     e14:	add	w4, w3, w4
     e18:	mov	x0, x22
     e1c:	add	w4, w4, #0x1
     e20:	bl	8a8 <ctf_dump_header_sectfield>
     e24:	tbz	w0, #31, 96c <ctf_dump+0x44>
     e28:	bl	0 <__errno_location>
     e2c:	mov	x1, x0
     e30:	mov	x0, x22
     e34:	ldr	w1, [x1]
     e38:	bl	0 <ctf_set_errno>
     e3c:	ldr	x0, [x28, #16]
     e40:	b	970 <ctf_dump+0x48>
     e44:	cmp	w19, #0x4
     e48:	b.ne	f78 <ctf_dump+0x650>  // b.any
     e4c:	mov	x2, x0
     e50:	adrp	x1, 0 <ctf_is_slice>
     e54:	mov	x0, x22
     e58:	add	x1, x1, #0x0
     e5c:	bl	0 <ctf_variable_iter>
     e60:	tbz	w0, #31, c58 <ctf_dump+0x330>
     e64:	b	ad8 <ctf_dump+0x1b0>
     e68:	mov	x0, x23
     e6c:	bl	0 <strdup>
     e70:	mov	x25, x0
     e74:	cbnz	x0, a28 <ctf_dump+0x100>
     e78:	mov	x0, x22
     e7c:	mov	w1, #0xc                   	// #12
     e80:	bl	0 <ctf_set_errno>
     e84:	b	a34 <ctf_dump+0x10c>
     e88:	adrp	x25, 0 <ctf_is_slice>
     e8c:	mov	x2, x24
     e90:	add	x25, x25, #0x0
     e94:	add	x27, sp, #0x90
     e98:	b	ec4 <ctf_dump+0x59c>
     e9c:	ldr	x1, [sp, #144]
     ea0:	bl	550 <ctf_dump_append>
     ea4:	mov	x0, x24
     ea8:	bl	0 <strlen>
     eac:	add	x1, x0, #0x1
     eb0:	ldp	x2, x0, [x22, #336]
     eb4:	add	x24, x24, x1
     eb8:	add	x0, x2, x0
     ebc:	cmp	x24, x0
     ec0:	b.cs	96c <ctf_dump+0x44>  // b.hs, b.nlast
     ec4:	mov	x1, x25
     ec8:	sub	x2, x24, x2
     ecc:	mov	x3, x24
     ed0:	mov	x0, x27
     ed4:	bl	0 <asprintf>
     ed8:	mov	w1, w0
     edc:	mov	x0, x28
     ee0:	tbz	w1, #31, e9c <ctf_dump+0x574>
     ee4:	bl	0 <__errno_location>
     ee8:	mov	x1, x0
     eec:	mov	x0, x22
     ef0:	ldr	w1, [x1]
     ef4:	bl	0 <ctf_set_errno>
     ef8:	ldr	x0, [x28, #16]
     efc:	b	970 <ctf_dump+0x48>
     f00:	ldr	x0, [x28, #8]
     f04:	bl	0 <ctf_errno>
     f08:	sub	w1, w0, #0x406
     f0c:	cmp	w0, #0x3f2
     f10:	b.eq	ad8 <ctf_dump+0x1b0>  // b.none
     f14:	cmp	w1, #0x1
     f18:	b.ls	bdc <ctf_dump+0x2b4>  // b.plast
     f1c:	b	c04 <ctf_dump+0x2dc>
     f20:	mov	x2, x0
     f24:	adrp	x1, 0 <ctf_is_slice>
     f28:	mov	x0, x22
     f2c:	add	x1, x1, #0x0
     f30:	bl	0 <ctf_type_iter_all>
     f34:	tbz	w0, #31, c58 <ctf_dump+0x330>
     f38:	b	ad8 <ctf_dump+0x1b0>
     f3c:	mov	x2, x0
     f40:	adrp	x1, 0 <ctf_is_slice>
     f44:	mov	x0, x22
     f48:	add	x1, x1, #0x0
     f4c:	bl	0 <ctf_label_iter>
     f50:	tbz	w0, #31, 96c <ctf_dump+0x44>
     f54:	mov	x0, x22
     f58:	bl	0 <ctf_errno>
     f5c:	cmp	w0, #0x409
     f60:	b.ne	ad8 <ctf_dump+0x1b0>  // b.any
     f64:	mov	x0, x22
     f68:	mov	w1, #0x0                   	// #0
     f6c:	bl	0 <ctf_set_errno>
     f70:	ldr	x0, [x28, #16]
     f74:	b	970 <ctf_dump+0x48>
     f78:	mov	x0, x22
     f7c:	mov	w1, #0x417                 	// #1047
     f80:	bl	0 <ctf_set_errno>
     f84:	b	ad8 <ctf_dump+0x1b0>
     f88:	ldr	x0, [x22, #432]
     f8c:	cbz	x0, ac8 <ctf_dump+0x1a0>
     f90:	add	x27, sp, #0x90
     f94:	adrp	x1, 0 <ctf_is_slice>
     f98:	adrp	x0, 0 <ctf_is_slice>
     f9c:	add	x1, x1, #0x0
     fa0:	add	x0, x0, #0x0
     fa4:	mov	x2, x27
     fa8:	mov	x24, #0x0                   	// #0
     fac:	stp	x1, x0, [sp, #112]
     fb0:	mov	x0, x22
     fb4:	mov	x1, x24
     fb8:	bl	0 <ctf_func_info>
     fbc:	cmn	w0, #0x1
     fc0:	sxtw	x26, w0
     fc4:	b.eq	1144 <ctf_dump+0x81c>  // b.none
     fc8:	ldr	w0, [sp, #152]
     fcc:	mov	x1, #0x8                   	// #8
     fd0:	bl	0 <calloc>
     fd4:	mov	x25, x0
     fd8:	cbz	x0, 121c <ctf_dump+0x8f4>
     fdc:	ldr	x0, [x28, #8]
     fe0:	mov	x1, x26
     fe4:	bl	0 <ctf_type_aname>
     fe8:	mov	x26, x0
     fec:	cbz	x0, 1210 <ctf_dump+0x8e8>
     ff0:	ldr	x1, [sp, #112]
     ff4:	bl	0 <ctf_str_append_noerr>
     ff8:	mov	x26, x0
     ffc:	mov	x1, x24
    1000:	mov	x0, x22
    1004:	bl	0 <ctf_lookup_symbol_name>
    1008:	mov	x2, x0
    100c:	ldrb	w0, [x0]
    1010:	cbnz	w0, 1164 <ctf_dump+0x83c>
    1014:	adrp	x1, 0 <ctf_is_slice>
    1018:	mov	x2, x24
    101c:	add	x1, x1, #0x0
    1020:	add	x0, sp, #0x88
    1024:	bl	0 <asprintf>
    1028:	tbnz	w0, #31, 117c <ctf_dump+0x854>
    102c:	ldr	x1, [sp, #136]
    1030:	mov	x0, x26
    1034:	bl	0 <ctf_str_append_noerr>
    1038:	adrp	x1, 0 <ctf_is_slice>
    103c:	add	x1, x1, #0x0
    1040:	bl	0 <ctf_str_append_noerr>
    1044:	mov	x26, x0
    1048:	ldr	x0, [sp, #136]
    104c:	bl	0 <free>
    1050:	ldr	w2, [sp, #152]
    1054:	mov	x3, x25
    1058:	ldr	x0, [x28, #8]
    105c:	mov	x1, x24
    1060:	bl	0 <ctf_func_args>
    1064:	tbnz	w0, #31, 1204 <ctf_dump+0x8dc>
    1068:	ldr	w0, [sp, #152]
    106c:	cbz	w0, 10e4 <ctf_dump+0x7bc>
    1070:	str	xzr, [sp, #104]
    1074:	ldr	x0, [sp, #104]
    1078:	ldr	x1, [x25, x0, lsl #3]
    107c:	ldr	x0, [x28, #8]
    1080:	bl	0 <ctf_type_aname>
    1084:	mov	x1, x0
    1088:	str	x1, [sp, #136]
    108c:	mov	x0, x26
    1090:	cbz	x1, 11a8 <ctf_dump+0x880>
    1094:	bl	0 <ctf_str_append_noerr>
    1098:	mov	x26, x0
    109c:	ldr	w2, [sp, #152]
    10a0:	ldr	x3, [sp, #104]
    10a4:	sub	w2, w2, #0x1
    10a8:	ldr	x1, [sp, #120]
    10ac:	cmp	x3, x2
    10b0:	add	x2, x3, #0x1
    10b4:	str	x2, [sp, #104]
    10b8:	b.cc	10c4 <ctf_dump+0x79c>  // b.lo, b.ul, b.last
    10bc:	ldr	w2, [sp, #156]
    10c0:	tbz	w2, #0, 10cc <ctf_dump+0x7a4>
    10c4:	bl	0 <ctf_str_append_noerr>
    10c8:	mov	x26, x0
    10cc:	ldr	x0, [sp, #136]
    10d0:	bl	0 <free>
    10d4:	ldr	x1, [sp, #104]
    10d8:	ldr	w0, [sp, #152]
    10dc:	cmp	x1, x0
    10e0:	b.cc	1074 <ctf_dump+0x74c>  // b.lo, b.ul, b.last
    10e4:	ldr	w0, [sp, #156]
    10e8:	tbnz	w0, #0, 1190 <ctf_dump+0x868>
    10ec:	adrp	x1, 0 <ctf_is_slice>
    10f0:	add	x1, x1, #0x0
    10f4:	mov	x0, x26
    10f8:	bl	0 <ctf_str_append_noerr>
    10fc:	mov	x1, x0
    1100:	mov	x0, x25
    1104:	mov	x25, x1
    1108:	bl	0 <free>
    110c:	mov	x1, x25
    1110:	mov	x0, x28
    1114:	bl	550 <ctf_dump_append>
    1118:	ldr	x0, [x22, #432]
    111c:	add	x24, x24, #0x1
    1120:	cmp	x24, x0
    1124:	b.cs	96c <ctf_dump+0x44>  // b.hs, b.nlast
    1128:	ldr	x0, [x28, #8]
    112c:	mov	x2, x27
    1130:	mov	x1, x24
    1134:	bl	0 <ctf_func_info>
    1138:	cmn	w0, #0x1
    113c:	sxtw	x26, w0
    1140:	b.ne	fc8 <ctf_dump+0x6a0>  // b.any
    1144:	ldr	x0, [x28, #8]
    1148:	bl	0 <ctf_errno>
    114c:	cmp	w0, #0x3f2
    1150:	b.eq	ad8 <ctf_dump+0x1b0>  // b.none
    1154:	sub	w0, w0, #0x404
    1158:	cmp	w0, #0x2
    115c:	b.ls	1118 <ctf_dump+0x7f0>  // b.plast
    1160:	b	fc8 <ctf_dump+0x6a0>
    1164:	adrp	x1, 0 <ctf_is_slice>
    1168:	mov	x3, x24
    116c:	add	x1, x1, #0x0
    1170:	add	x0, sp, #0x88
    1174:	bl	0 <asprintf>
    1178:	tbz	w0, #31, 102c <ctf_dump+0x704>
    117c:	mov	x0, x25
    1180:	bl	0 <free>
    1184:	mov	x0, x26
    1188:	bl	0 <free>
    118c:	b	c40 <ctf_dump+0x318>
    1190:	mov	x0, x26
    1194:	adrp	x1, 0 <ctf_is_slice>
    1198:	add	x1, x1, #0x0
    119c:	bl	0 <ctf_str_append_noerr>
    11a0:	mov	x26, x0
    11a4:	b	10ec <ctf_dump+0x7c4>
    11a8:	adrp	x19, 0 <ctf_is_slice>
    11ac:	add	x19, x19, #0x0
    11b0:	ldr	x0, [x28, #8]
    11b4:	bl	0 <ctf_errno>
    11b8:	bl	0 <ctf_errmsg>
    11bc:	mov	x3, x0
    11c0:	mov	x2, x24
    11c4:	mov	x1, x19
    11c8:	adrp	x0, 0 <ctf_is_slice>
    11cc:	add	x0, x0, #0x0
    11d0:	bl	0 <ctf_dprintf>
    11d4:	mov	x0, x25
    11d8:	bl	0 <free>
    11dc:	mov	x0, x26
    11e0:	bl	0 <free>
    11e4:	b	ad8 <ctf_dump+0x1b0>
    11e8:	add	x0, sp, #0x90
    11ec:	ldr	x3, [x0, w2, sxtw #3]
    11f0:	adrp	x0, 0 <ctf_is_slice>
    11f4:	add	x0, x0, #0x0
    11f8:	cmp	x3, #0x0
    11fc:	csel	x3, x0, x3, eq  // eq = none
    1200:	b	cc0 <ctf_dump+0x398>
    1204:	adrp	x19, 0 <ctf_is_slice>
    1208:	add	x19, x19, #0x0
    120c:	b	11b0 <ctf_dump+0x888>
    1210:	adrp	x19, 0 <ctf_is_slice>
    1214:	add	x19, x19, #0x0
    1218:	b	11b0 <ctf_dump+0x888>
    121c:	mov	x0, x22
    1220:	mov	w1, #0xc                   	// #12
    1224:	bl	0 <ctf_set_errno>
    1228:	tbz	w0, #31, c58 <ctf_dump+0x330>
    122c:	b	ad8 <ctf_dump+0x1b0>
    1230:	mov	x0, x22
    1234:	mov	w1, #0xc                   	// #12
    1238:	bl	0 <ctf_set_errno>
    123c:	b	af8 <ctf_dump+0x1d0>

ctf-create.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_sort_var>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x2
      10:	mov	x20, x1
      14:	ldr	w1, [x0]
      18:	ldp	x0, x2, [x2]
      1c:	bl	0 <ctf_strraw_explicit>
      20:	ldr	w1, [x20]
      24:	mov	x20, x0
      28:	ldp	x0, x2, [x19]
      2c:	bl	0 <ctf_strraw_explicit>
      30:	mov	x1, x0
      34:	mov	x0, x20
      38:	ldp	x19, x20, [sp, #16]
      3c:	ldp	x29, x30, [sp], #32
      40:	b	0 <strcmp>
      44:	nop

0000000000000048 <ctf_grow_ptrtab>:
      48:	stp	x29, x30, [sp, #-48]!
      4c:	mov	x29, sp
      50:	stp	x19, x20, [sp, #16]
      54:	mov	x19, x0
      58:	ldr	x0, [x0, #448]
      5c:	ldr	x2, [x19, #456]
      60:	str	x21, [sp, #32]
      64:	cbz	x0, d8 <ctf_grow_ptrtab+0x90>
      68:	ldr	x1, [x19, #480]
      6c:	mov	w21, #0x0                   	// #0
      70:	add	x1, x1, #0x2
      74:	cmp	x1, x2
      78:	b.ls	c4 <ctf_grow_ptrtab+0x7c>  // b.plast
      7c:	ucvtf	d0, x2
      80:	fmov	d1, #1.250000000000000000e+00
      84:	fmul	d0, d0, d1
      88:	fcvtzu	x20, d0
      8c:	cmp	x20, x2
      90:	mov	w21, #0x0                   	// #0
      94:	b.eq	c4 <ctf_grow_ptrtab+0x7c>  // b.none
      98:	lsl	x1, x20, #2
      9c:	bl	0 <realloc>
      a0:	cbz	x0, e0 <ctf_grow_ptrtab+0x98>
      a4:	ldr	x3, [x19, #456]
      a8:	str	x0, [x19, #448]
      ac:	mov	w1, #0x0                   	// #0
      b0:	sub	x2, x20, x3
      b4:	add	x0, x0, x3, lsl #2
      b8:	lsl	x2, x2, #2
      bc:	bl	0 <memset>
      c0:	str	x20, [x19, #456]
      c4:	mov	w0, w21
      c8:	ldp	x19, x20, [sp, #16]
      cc:	ldr	x21, [sp, #32]
      d0:	ldp	x29, x30, [sp], #48
      d4:	ret
      d8:	mov	x20, #0x400                 	// #1024
      dc:	b	8c <ctf_grow_ptrtab+0x44>
      e0:	mov	x0, x19
      e4:	mov	w1, #0xc                   	// #12
      e8:	bl	0 <ctf_set_errno>
      ec:	mov	w21, w0
      f0:	b	c4 <ctf_grow_ptrtab+0x7c>
      f4:	nop

00000000000000f8 <membadd>:
      f8:	stp	x29, x30, [sp, #-64]!
      fc:	mov	x29, sp
     100:	stp	x19, x20, [sp, #16]
     104:	mov	x20, x0
     108:	mov	x0, #0x30                  	// #48
     10c:	stp	x21, x22, [sp, #32]
     110:	mov	x22, x2
     114:	mov	x21, x3
     118:	str	x23, [sp, #48]
     11c:	mov	x23, x1
     120:	bl	0 <malloc>
     124:	cbz	x0, 190 <membadd+0x98>
     128:	mov	x19, x0
     12c:	cbz	x20, 140 <membadd+0x48>
     130:	mov	x0, x20
     134:	bl	0 <strdup>
     138:	mov	x20, x0
     13c:	cbz	x0, 188 <membadd+0x90>
     140:	ldr	x0, [x21, #16]
     144:	mov	w2, #0xffffffff            	// #-1
     148:	stp	x20, x23, [x19, #16]
     14c:	mov	x1, x19
     150:	add	x0, x0, #0x30
     154:	str	x22, [x19, #32]
     158:	str	w2, [x19, #40]
     15c:	bl	0 <ctf_list_append>
     160:	ldr	x2, [x21]
     164:	mov	w0, #0x0                   	// #0
     168:	ldr	w1, [x2, #552]
     16c:	orr	w1, w1, #0x4
     170:	str	w1, [x2, #552]
     174:	ldp	x19, x20, [sp, #16]
     178:	ldp	x21, x22, [sp, #32]
     17c:	ldr	x23, [sp, #48]
     180:	ldp	x29, x30, [sp], #64
     184:	ret
     188:	mov	x0, x19
     18c:	bl	0 <free>
     190:	ldr	x0, [x21]
     194:	mov	w1, #0xb                   	// #11
     198:	bl	0 <ctf_set_errno>
     19c:	b	174 <membadd+0x7c>

00000000000001a0 <enumcmp>:
     1a0:	stp	x29, x30, [sp, #-64]!
     1a4:	mov	x29, sp
     1a8:	stp	x19, x20, [sp, #16]
     1ac:	mov	x19, x2
     1b0:	mov	x20, x0
     1b4:	mov	x2, x0
     1b8:	add	x3, sp, #0x3c
     1bc:	ldr	x0, [x19]
     1c0:	str	x21, [sp, #32]
     1c4:	mov	w21, w1
     1c8:	ldr	x1, [x19, #8]
     1cc:	bl	0 <ctf_enum_value>
     1d0:	tbnz	w0, #31, 218 <enumcmp+0x78>
     1d4:	ldr	w2, [sp, #60]
     1d8:	mov	w0, #0x0                   	// #0
     1dc:	cmp	w2, w21
     1e0:	b.ne	1f4 <enumcmp+0x54>  // b.any
     1e4:	ldp	x19, x20, [sp, #16]
     1e8:	ldr	x21, [sp, #32]
     1ec:	ldp	x29, x30, [sp], #64
     1f0:	ret
     1f4:	mov	w1, w21
     1f8:	adrp	x0, 0 <ctf_sort_var>
     1fc:	add	x0, x0, #0x0
     200:	bl	0 <ctf_dprintf>
     204:	mov	w0, #0x1                   	// #1
     208:	ldp	x19, x20, [sp, #16]
     20c:	ldr	x21, [sp, #32]
     210:	ldp	x29, x30, [sp], #64
     214:	ret
     218:	ldr	x0, [x19]
     21c:	bl	0 <ctf_errno>
     220:	bl	0 <ctf_errmsg>
     224:	mov	x2, x0
     228:	mov	x1, x20
     22c:	adrp	x0, 0 <ctf_sort_var>
     230:	add	x0, x0, #0x0
     234:	bl	0 <ctf_dprintf>
     238:	mov	w0, #0x1                   	// #1
     23c:	ldp	x19, x20, [sp, #16]
     240:	ldr	x21, [sp, #32]
     244:	ldp	x29, x30, [sp], #64
     248:	ret
     24c:	nop

0000000000000250 <membcmp>:
     250:	stp	x29, x30, [sp, #-64]!
     254:	mov	x29, sp
     258:	stp	x19, x20, [sp, #16]
     25c:	mov	x19, x3
     260:	mov	x20, x0
     264:	add	x3, sp, #0x30
     268:	ldr	x1, [x19, #8]
     26c:	str	x21, [sp, #32]
     270:	mov	x21, x2
     274:	mov	x2, x0
     278:	ldr	x0, [x19]
     27c:	bl	0 <ctf_member_info>
     280:	tbnz	w0, #31, 2cc <membcmp+0x7c>
     284:	ldr	x2, [sp, #56]
     288:	mov	w0, #0x0                   	// #0
     28c:	cmp	x2, x21
     290:	b.ne	2a4 <membcmp+0x54>  // b.any
     294:	ldp	x19, x20, [sp, #16]
     298:	ldr	x21, [sp, #32]
     29c:	ldp	x29, x30, [sp], #64
     2a0:	ret
     2a4:	mov	x3, x21
     2a8:	mov	x1, x20
     2ac:	adrp	x0, 0 <ctf_sort_var>
     2b0:	add	x0, x0, #0x0
     2b4:	bl	0 <ctf_dprintf>
     2b8:	mov	w0, #0x1                   	// #1
     2bc:	ldp	x19, x20, [sp, #16]
     2c0:	ldr	x21, [sp, #32]
     2c4:	ldp	x29, x30, [sp], #64
     2c8:	ret
     2cc:	ldr	x0, [x19]
     2d0:	bl	0 <ctf_errno>
     2d4:	bl	0 <ctf_errmsg>
     2d8:	mov	x2, x0
     2dc:	mov	x1, x20
     2e0:	adrp	x0, 0 <ctf_sort_var>
     2e4:	add	x0, x0, #0x0
     2e8:	bl	0 <ctf_dprintf>
     2ec:	mov	w0, #0x1                   	// #1
     2f0:	ldp	x19, x20, [sp, #16]
     2f4:	ldr	x21, [sp, #32]
     2f8:	ldp	x29, x30, [sp], #64
     2fc:	ret

0000000000000300 <ctf_serialize.part.0>:
     300:	sub	sp, sp, #0x3d0
     304:	mov	w1, #0xffffdff2            	// #-8206
     308:	stp	x29, x30, [sp, #16]
     30c:	add	x29, sp, #0x10
     310:	stp	x27, x28, [sp, #96]
     314:	mov	x28, x0
     318:	mov	w0, #0x4                   	// #4
     31c:	stp	x25, x26, [sp, #80]
     320:	ldr	x25, [x28, #584]
     324:	stp	xzr, xzr, [sp, #192]
     328:	stp	x19, x20, [sp, #32]
     32c:	stp	x21, x22, [sp, #48]
     330:	stp	x23, x24, [sp, #64]
     334:	strh	w1, [sp, #192]
     338:	strb	w0, [sp, #194]
     33c:	stp	xzr, xzr, [sp, #208]
     340:	stp	xzr, xzr, [sp, #224]
     344:	str	wzr, [sp, #240]
     348:	cbz	x25, ad8 <ctf_serialize.part.0+0x7d8>
     34c:	mov	x26, #0x0                   	// #0
     350:	mov	w20, #0x1fffffff            	// #536870911
     354:	mov	w24, #0xc                   	// #12
     358:	b	398 <ctf_serialize.part.0+0x98>
     35c:	add	x26, x26, #0xc
     360:	cmp	w19, #0x7
     364:	b.hi	89c <ctf_serialize.part.0+0x59c>  // b.pmore
     368:	cmp	w19, #0x5
     36c:	b.hi	9bc <ctf_serialize.part.0+0x6bc>  // b.pmore
     370:	cmp	w19, #0x4
     374:	b.eq	8b4 <ctf_serialize.part.0+0x5b4>  // b.none
     378:	cmp	w19, #0x5
     37c:	b.ne	888 <ctf_serialize.part.0+0x588>  // b.any
     380:	add	w0, w0, #0x1
     384:	and	w0, w0, #0xfffffffe
     388:	add	x26, x26, w0, uxtw #2
     38c:	nop
     390:	ldr	x25, [x25, #8]
     394:	cbz	x25, 3f0 <ctf_serialize.part.0+0xf0>
     398:	ldr	x1, [x28]
     39c:	ldr	w0, [x25, #28]
     3a0:	ldr	x1, [x1]
     3a4:	blr	x1
     3a8:	mov	w19, w0
     3ac:	ldr	x1, [x28]
     3b0:	ldr	w0, [x25, #28]
     3b4:	ldr	x1, [x1, #16]
     3b8:	blr	x1
     3bc:	ldr	w1, [x25, #32]
     3c0:	cmn	w1, #0x1
     3c4:	b.ne	35c <ctf_serialize.part.0+0x5c>  // b.any
     3c8:	add	x26, x26, #0x14
     3cc:	cmp	w19, #0x7
     3d0:	b.hi	89c <ctf_serialize.part.0+0x59c>  // b.pmore
     3d4:	cmp	w19, #0x5
     3d8:	b.ls	370 <ctf_serialize.part.0+0x70>  // b.plast
     3dc:	mov	w1, w0
     3e0:	ldr	x25, [x25, #8]
     3e4:	add	x26, x26, x1, lsl #4
     3e8:	cbnz	x25, 398 <ctf_serialize.part.0+0x98>
     3ec:	nop
     3f0:	ldr	x0, [x28, #608]
     3f4:	cbz	x0, acc <ctf_serialize.part.0+0x7cc>
     3f8:	mov	x20, #0x0                   	// #0
     3fc:	nop
     400:	ldr	x0, [x0, #8]
     404:	add	x20, x20, #0x1
     408:	cbnz	x0, 400 <ctf_serialize.part.0+0x100>
     40c:	lsl	w0, w20, #3
     410:	add	w26, w26, w0
     414:	mov	w27, w26
     418:	stp	w0, w26, [sp, #232]
     41c:	add	x0, x27, #0x34
     420:	str	x0, [sp, #136]
     424:	bl	0 <malloc>
     428:	str	x0, [sp, #120]
     42c:	cbz	x0, a6c <ctf_serialize.part.0+0x76c>
     430:	ldr	x4, [sp, #120]
     434:	ldr	w0, [x28, #552]
     438:	add	x2, x4, #0x34
     43c:	str	x2, [sp, #128]
     440:	ldp	x2, x3, [sp, #192]
     444:	stp	x2, x3, [x4]
     448:	ldr	w1, [sp, #240]
     44c:	ldp	x2, x3, [sp, #208]
     450:	stp	x2, x3, [x4, #16]
     454:	ldp	x2, x3, [sp, #224]
     458:	stp	x2, x3, [x4, #32]
     45c:	str	w1, [x4, #48]
     460:	tbz	w0, #0, 478 <ctf_serialize.part.0+0x178>
     464:	ldr	x1, [x28, #528]
     468:	cbz	x1, 478 <ctf_serialize.part.0+0x178>
     46c:	add	x2, x4, #0x8
     470:	mov	x0, x28
     474:	bl	0 <ctf_str_add_ref>
     478:	ldr	x1, [x28, #496]
     47c:	cbz	x1, 490 <ctf_serialize.part.0+0x190>
     480:	ldr	x0, [sp, #120]
     484:	add	x2, x0, #0xc
     488:	mov	x0, x28
     48c:	bl	0 <ctf_str_add_ref>
     490:	ldr	x19, [x28, #608]
     494:	cbz	x19, ae0 <ctf_serialize.part.0+0x7e0>
     498:	ldr	x25, [sp, #128]
     49c:	mov	x26, #0x0                   	// #0
     4a0:	ldr	x1, [x19, #16]
     4a4:	mov	x2, x25
     4a8:	mov	x0, x28
     4ac:	add	x26, x26, #0x1
     4b0:	add	x25, x25, #0x8
     4b4:	bl	0 <ctf_str_add_ref>
     4b8:	ldr	x0, [x19, #24]
     4bc:	ldr	x19, [x19, #8]
     4c0:	stur	w0, [x25, #-4]
     4c4:	cbnz	x19, 4a0 <ctf_serialize.part.0+0x1a0>
     4c8:	cmp	x26, x20
     4cc:	b.ne	b28 <ctf_serialize.part.0+0x828>  // b.any
     4d0:	ldr	x1, [sp, #128]
     4d4:	lsl	x3, x26, #3
     4d8:	and	x0, x3, #0xffffffff
     4dc:	add	x27, x1, x3
     4e0:	add	x0, x0, #0x34
     4e4:	ldr	x1, [sp, #120]
     4e8:	add	x0, x1, x0
     4ec:	cmp	x27, x0
     4f0:	b.ne	b08 <ctf_serialize.part.0+0x808>  // b.any
     4f4:	ldr	x25, [x28, #584]
     4f8:	cbz	x25, 5c0 <ctf_serialize.part.0+0x2c0>
     4fc:	nop
     500:	ldr	x1, [x28]
     504:	ldr	w0, [x25, #28]
     508:	ldr	x1, [x1]
     50c:	blr	x1
     510:	mov	w26, w0
     514:	ldr	x1, [x28]
     518:	ldr	w0, [x25, #28]
     51c:	ldr	x1, [x1, #16]
     520:	blr	x1
     524:	mov	w19, w0
     528:	ldr	w2, [x25, #32]
     52c:	mov	x3, #0x14                  	// #20
     530:	add	x1, x25, #0x18
     534:	mov	x0, x27
     538:	cmn	w2, #0x1
     53c:	mov	x2, #0xc                   	// #12
     540:	csel	x24, x2, x3, ne  // ne = any
     544:	mov	x2, x24
     548:	bl	0 <memcpy>
     54c:	ldr	w1, [x27]
     550:	cbnz	w1, 908 <ctf_serialize.part.0+0x608>
     554:	add	x27, x27, x24
     558:	cmp	w26, #0x7
     55c:	b.hi	8c4 <ctf_serialize.part.0+0x5c4>  // b.pmore
     560:	cmp	w26, #0x5
     564:	b.hi	940 <ctf_serialize.part.0+0x640>  // b.pmore
     568:	cmp	w26, #0x4
     56c:	b.eq	928 <ctf_serialize.part.0+0x628>  // b.none
     570:	cmp	w26, #0x5
     574:	b.ne	8e0 <ctf_serialize.part.0+0x5e0>  // b.any
     578:	mov	x0, #0x0                   	// #0
     57c:	cbz	w19, 5b8 <ctf_serialize.part.0+0x2b8>
     580:	ldr	x1, [x25, #48]
     584:	ldr	x1, [x1, x0, lsl #3]
     588:	str	w1, [x27, x0, lsl #2]
     58c:	add	x0, x0, #0x1
     590:	cmp	w19, w0
     594:	b.hi	580 <ctf_serialize.part.0+0x280>  // b.pmore
     598:	sub	w0, w19, #0x1
     59c:	add	x1, x0, #0x1
     5a0:	lsl	x0, x0, #2
     5a4:	add	x1, x27, x1, lsl #2
     5a8:	tbz	w19, #0, a18 <ctf_serialize.part.0+0x718>
     5ac:	add	x0, x0, #0x8
     5b0:	str	wzr, [x1]
     5b4:	add	x27, x27, x0
     5b8:	ldr	x25, [x25, #8]
     5bc:	cbnz	x25, 500 <ctf_serialize.part.0+0x200>
     5c0:	ldr	x0, [sp, #120]
     5c4:	ldr	x1, [sp, #136]
     5c8:	add	x0, x0, x1
     5cc:	cmp	x27, x0
     5d0:	b.ne	ae8 <ctf_serialize.part.0+0x7e8>  // b.any
     5d4:	mov	x0, x28
     5d8:	bl	0 <ctf_str_write_strtab>
     5dc:	mov	x2, x0
     5e0:	mov	x3, x1
     5e4:	mov	x0, x28
     5e8:	stp	x2, x3, [sp, #160]
     5ec:	bl	0 <ctf_str_purge_refs>
     5f0:	ldr	x0, [sp, #160]
     5f4:	cbz	x0, a28 <ctf_serialize.part.0+0x728>
     5f8:	ldr	x0, [sp, #128]
     5fc:	add	x5, sp, #0xa0
     600:	mov	x1, x20
     604:	add	x4, sp, #0xb0
     608:	mov	x2, #0x8                   	// #8
     60c:	adrp	x3, 0 <ctf_sort_var>
     610:	add	x3, x3, #0x0
     614:	stp	x28, x5, [sp, #176]
     618:	bl	0 <qsort_r>
     61c:	ldr	x1, [sp, #120]
     620:	mov	x0, x28
     624:	ldr	x3, [sp, #136]
     628:	ldr	x2, [sp, #168]
     62c:	add	x2, x3, x2
     630:	bl	0 <ctf_realloc>
     634:	mov	x20, x0
     638:	cbz	x0, a5c <ctf_serialize.part.0+0x75c>
     63c:	ldp	x1, x2, [sp, #160]
     640:	ldr	x21, [sp, #136]
     644:	add	x0, x0, x21
     648:	bl	0 <memcpy>
     64c:	ldp	x0, x19, [sp, #160]
     650:	str	w19, [x20, #48]
     654:	bl	0 <free>
     658:	ldr	x7, [x28, #128]
     65c:	add	x0, sp, #0x9c
     660:	mov	w1, #0x1                   	// #1
     664:	str	w1, [sp]
     668:	str	x0, [sp, #8]
     66c:	add	x1, x21, w19, uxtw
     670:	mov	x0, x20
     674:	mov	x6, #0x0                   	// #0
     678:	mov	x5, #0x0                   	// #0
     67c:	mov	x4, #0x0                   	// #0
     680:	mov	x3, #0x0                   	// #0
     684:	mov	x2, #0x0                   	// #0
     688:	bl	0 <ctf_simple_open_internal>
     68c:	mov	x19, x0
     690:	cbz	x0, a98 <ctf_serialize.part.0+0x798>
     694:	mov	x0, x28
     698:	bl	0 <ctf_getmodel>
     69c:	mov	w1, w0
     6a0:	mov	x0, x19
     6a4:	bl	0 <ctf_setmodel>
     6a8:	ldr	x1, [x28, #512]
     6ac:	mov	x0, x19
     6b0:	bl	0 <ctf_import>
     6b4:	ldr	w0, [x28, #552]
     6b8:	ldr	x2, [x19, #400]
     6bc:	and	w1, w0, #0xfffffffb
     6c0:	ldr	w0, [x19, #552]
     6c4:	ldr	w3, [x28, #548]
     6c8:	orr	w0, w0, w1
     6cc:	str	w3, [x19, #548]
     6d0:	str	w0, [x19, #552]
     6d4:	cbz	x2, a20 <ctf_serialize.part.0+0x720>
     6d8:	add	x1, x28, #0x200
     6dc:	add	x0, x19, #0x200
     6e0:	ldr	x2, [x28, #568]
     6e4:	add	x8, x19, #0x288
     6e8:	ldr	w12, [x28, #384]
     6ec:	add	x20, x28, #0xd8
     6f0:	ldp	x4, x5, [x1, #88]
     6f4:	ldr	x13, [x28, #128]
     6f8:	ldp	x11, x10, [x28, #448]
     6fc:	ldr	x9, [x28, #648]
     700:	ldr	x7, [x28, #656]
     704:	ldr	x6, [x28, #664]
     708:	str	x2, [x19, #568]
     70c:	ldp	x2, x3, [x1, #64]
     710:	stp	x2, x3, [x0, #64]
     714:	mov	x1, x20
     718:	ldr	x3, [x28, #624]
     71c:	ldr	x2, [x28, #592]
     720:	str	x2, [x19, #592]
     724:	add	x3, x3, #0x1
     728:	stp	x4, x5, [x0, #88]
     72c:	mov	x2, #0x78                  	// #120
     730:	ldr	x4, [x28, #616]
     734:	add	x0, x19, #0xd8
     738:	ldr	x5, [x28, #672]
     73c:	str	x4, [x19, #616]
     740:	ldr	x4, [x28, #696]
     744:	str	x3, [x19, #624]
     748:	ldr	x3, [x28, #720]
     74c:	str	x13, [x19, #128]
     750:	str	w12, [x19, #384]
     754:	stp	x11, x10, [x19, #448]
     758:	stp	x9, x7, [x8]
     75c:	stp	x6, x5, [x8, #16]
     760:	str	x4, [x19, #696]
     764:	str	x3, [x19, #720]
     768:	ldr	x3, [x28, #680]
     76c:	ldr	x4, [x28, #624]
     770:	str	x3, [x19, #680]
     774:	ldr	x3, [x28, #688]
     778:	str	x4, [x19, #632]
     77c:	str	x3, [x19, #688]
     780:	bl	0 <memcpy>
     784:	ldp	x2, x3, [x28, #168]
     788:	ldp	x0, x1, [x28, #152]
     78c:	stp	x2, x3, [x19, #168]
     790:	ldp	x2, x3, [x28, #184]
     794:	stp	x2, x3, [x19, #184]
     798:	ldp	x2, x3, [x28, #200]
     79c:	stp	x0, x1, [x19, #152]
     7a0:	mov	x0, x19
     7a4:	stp	x2, x3, [x19, #200]
     7a8:	str	xzr, [x28, #568]
     7ac:	bl	0 <ctf_str_free_atoms>
     7b0:	add	x4, x28, #0x240
     7b4:	add	x9, x28, #0x288
     7b8:	ldr	x1, [x28, #120]
     7bc:	add	x3, x28, #0x258
     7c0:	ldr	x0, [x28, #368]
     7c4:	str	x1, [x19, #120]
     7c8:	str	x0, [x19, #368]
     7cc:	mov	x1, x28
     7d0:	str	xzr, [x28, #120]
     7d4:	add	x0, sp, #0xf8
     7d8:	str	xzr, [x28, #368]
     7dc:	mov	x2, #0x2d8                 	// #728
     7e0:	stp	xzr, xzr, [x4]
     7e4:	str	xzr, [x28, #128]
     7e8:	str	xzr, [x28, #448]
     7ec:	str	xzr, [x28, #592]
     7f0:	stp	xzr, xzr, [x9]
     7f4:	stp	xzr, xzr, [x9, #16]
     7f8:	str	xzr, [x28, #696]
     7fc:	stp	xzr, xzr, [x3]
     800:	stp	xzr, xzr, [x28, #216]
     804:	stp	xzr, xzr, [x28, #232]
     808:	stp	xzr, xzr, [x28, #248]
     80c:	stp	xzr, xzr, [x20, #48]
     810:	stp	xzr, xzr, [x20, #64]
     814:	stp	xzr, xzr, [x20, #80]
     818:	stp	xzr, xzr, [x20, #96]
     81c:	str	xzr, [x28, #160]
     820:	str	xzr, [x28, #176]
     824:	str	xzr, [x28, #192]
     828:	str	xzr, [x28, #208]
     82c:	str	xzr, [x28, #328]
     830:	bl	0 <memcpy>
     834:	mov	x1, x19
     838:	mov	x0, x28
     83c:	mov	x2, #0x2d8                 	// #728
     840:	bl	0 <memcpy>
     844:	add	x1, sp, #0xf8
     848:	mov	x2, #0x2d8                 	// #728
     84c:	mov	x0, x19
     850:	bl	0 <memcpy>
     854:	mov	w0, #0x1                   	// #1
     858:	str	w0, [x19, #548]
     85c:	mov	x0, x19
     860:	bl	0 <ctf_file_close>
     864:	mov	w0, #0x0                   	// #0
     868:	ldp	x29, x30, [sp, #16]
     86c:	ldp	x19, x20, [sp, #32]
     870:	ldp	x21, x22, [sp, #48]
     874:	ldp	x23, x24, [sp, #64]
     878:	ldp	x25, x26, [sp, #80]
     87c:	ldp	x27, x28, [sp, #96]
     880:	add	sp, sp, #0x3d0
     884:	ret
     888:	sub	w19, w19, #0x1
     88c:	cmp	w19, #0x1
     890:	b.hi	390 <ctf_serialize.part.0+0x90>  // b.pmore
     894:	add	x26, x26, #0x4
     898:	b	390 <ctf_serialize.part.0+0x90>
     89c:	cmp	w19, #0x8
     8a0:	b.eq	8bc <ctf_serialize.part.0+0x5bc>  // b.none
     8a4:	cmp	w19, #0xe
     8a8:	b.ne	390 <ctf_serialize.part.0+0x90>  // b.any
     8ac:	add	x26, x26, #0x8
     8b0:	b	390 <ctf_serialize.part.0+0x90>
     8b4:	add	x26, x26, #0xc
     8b8:	b	390 <ctf_serialize.part.0+0x90>
     8bc:	add	x26, x26, w0, uxtw #3
     8c0:	b	390 <ctf_serialize.part.0+0x90>
     8c4:	cmp	w26, #0x8
     8c8:	b.eq	988 <ctf_serialize.part.0+0x688>  // b.none
     8cc:	cmp	w26, #0xe
     8d0:	b.ne	5b8 <ctf_serialize.part.0+0x2b8>  // b.any
     8d4:	ldr	x0, [x25, #48]
     8d8:	str	x0, [x27], #8
     8dc:	b	5b8 <ctf_serialize.part.0+0x2b8>
     8e0:	sub	w4, w26, #0x1
     8e4:	cmp	w4, #0x1
     8e8:	b.hi	5b8 <ctf_serialize.part.0+0x2b8>  // b.pmore
     8ec:	ldp	w0, w1, [x25, #48]
     8f0:	ldr	w2, [x25, #56]
     8f4:	lsl	w1, w1, #16
     8f8:	orr	w0, w1, w0, lsl #24
     8fc:	orr	w0, w0, w2
     900:	str	w0, [x27], #4
     904:	b	5b8 <ctf_serialize.part.0+0x2b8>
     908:	mov	x0, x28
     90c:	bl	0 <ctf_strraw>
     910:	mov	x1, x0
     914:	cbz	x0, 554 <ctf_serialize.part.0+0x254>
     918:	mov	x2, x27
     91c:	mov	x0, x28
     920:	bl	0 <ctf_str_add_ref>
     924:	b	554 <ctf_serialize.part.0+0x254>
     928:	ldr	w0, [x25, #64]
     92c:	ldp	x2, x1, [x25, #48]
     930:	stp	w2, w1, [x27]
     934:	add	x27, x27, #0xc
     938:	stur	w0, [x27, #-4]
     93c:	b	5b8 <ctf_serialize.part.0+0x2b8>
     940:	ldr	w0, [x25, #32]
     944:	mov	w1, #0x1fffffff            	// #536870911
     948:	ldr	x19, [x25, #56]
     94c:	cmp	w0, w1
     950:	b.hi	9d0 <ctf_serialize.part.0+0x6d0>  // b.pmore
     954:	cbz	x19, 5b8 <ctf_serialize.part.0+0x2b8>
     958:	ldp	x0, x1, [x19, #24]
     95c:	stp	wzr, w1, [x27]
     960:	str	w0, [x27, #8]
     964:	ldr	x1, [x19, #16]
     968:	cbz	x1, 978 <ctf_serialize.part.0+0x678>
     96c:	mov	x2, x27
     970:	mov	x0, x28
     974:	bl	0 <ctf_str_add_ref>
     978:	ldr	x19, [x19, #8]
     97c:	add	x27, x27, #0xc
     980:	cbnz	x19, 958 <ctf_serialize.part.0+0x658>
     984:	b	5b8 <ctf_serialize.part.0+0x2b8>
     988:	ldr	x19, [x25, #56]
     98c:	cbz	x19, 5b8 <ctf_serialize.part.0+0x2b8>
     990:	ldr	w1, [x19, #40]
     994:	mov	x2, x27
     998:	mov	x0, x28
     99c:	add	x27, x27, #0x8
     9a0:	bfi	x22, x1, #32, #32
     9a4:	stur	x22, [x27, #-8]
     9a8:	ldr	x1, [x19, #16]
     9ac:	bl	0 <ctf_str_add_ref>
     9b0:	ldr	x19, [x19, #8]
     9b4:	cbnz	x19, 990 <ctf_serialize.part.0+0x690>
     9b8:	b	5b8 <ctf_serialize.part.0+0x2b8>
     9bc:	cmp	w1, w20
     9c0:	mov	w1, w0
     9c4:	b.hi	3e0 <ctf_serialize.part.0+0xe0>  // b.pmore
     9c8:	umaddl	x26, w0, w24, x26
     9cc:	b	390 <ctf_serialize.part.0+0x90>
     9d0:	cbz	x19, 5b8 <ctf_serialize.part.0+0x2b8>
     9d4:	nop
     9d8:	ldp	x1, x0, [x19, #24]
     9dc:	and	x21, x21, #0xffffffff00000000
     9e0:	bfxil	x23, x1, #0, #32
     9e4:	lsr	x1, x0, #32
     9e8:	bfi	x23, x0, #32, #32
     9ec:	bfi	x21, x1, #32, #32
     9f0:	stp	x21, x23, [x27]
     9f4:	ldr	x1, [x19, #16]
     9f8:	cbz	x1, a08 <ctf_serialize.part.0+0x708>
     9fc:	mov	x2, x27
     a00:	mov	x0, x28
     a04:	bl	0 <ctf_str_add_ref>
     a08:	ldr	x19, [x19, #8]
     a0c:	add	x27, x27, #0x10
     a10:	cbnz	x19, 9d8 <ctf_serialize.part.0+0x6d8>
     a14:	b	5b8 <ctf_serialize.part.0+0x2b8>
     a18:	mov	x27, x1
     a1c:	b	5b8 <ctf_serialize.part.0+0x2b8>
     a20:	str	x20, [x19, #400]
     a24:	b	6d8 <ctf_serialize.part.0+0x3d8>
     a28:	ldr	x0, [sp, #120]
     a2c:	bl	0 <free>
     a30:	mov	x0, x28
     a34:	mov	w1, #0xb                   	// #11
     a38:	bl	0 <ctf_set_errno>
     a3c:	ldp	x29, x30, [sp, #16]
     a40:	ldp	x19, x20, [sp, #32]
     a44:	ldp	x21, x22, [sp, #48]
     a48:	ldp	x23, x24, [sp, #64]
     a4c:	ldp	x25, x26, [sp, #80]
     a50:	ldp	x27, x28, [sp, #96]
     a54:	add	sp, sp, #0x3d0
     a58:	ret
     a5c:	ldr	x0, [sp, #120]
     a60:	bl	0 <free>
     a64:	ldr	x0, [sp, #160]
     a68:	bl	0 <free>
     a6c:	mov	x0, x28
     a70:	mov	w1, #0xb                   	// #11
     a74:	bl	0 <ctf_set_errno>
     a78:	ldp	x29, x30, [sp, #16]
     a7c:	ldp	x19, x20, [sp, #32]
     a80:	ldp	x21, x22, [sp, #48]
     a84:	ldp	x23, x24, [sp, #64]
     a88:	ldp	x25, x26, [sp, #80]
     a8c:	ldp	x27, x28, [sp, #96]
     a90:	add	sp, sp, #0x3d0
     a94:	ret
     a98:	mov	x0, x20
     a9c:	bl	0 <free>
     aa0:	ldr	w1, [sp, #156]
     aa4:	mov	x0, x28
     aa8:	bl	0 <ctf_set_errno>
     aac:	ldp	x29, x30, [sp, #16]
     ab0:	ldp	x19, x20, [sp, #32]
     ab4:	ldp	x21, x22, [sp, #48]
     ab8:	ldp	x23, x24, [sp, #64]
     abc:	ldp	x25, x26, [sp, #80]
     ac0:	ldp	x27, x28, [sp, #96]
     ac4:	add	sp, sp, #0x3d0
     ac8:	ret
     acc:	mov	w0, #0x0                   	// #0
     ad0:	mov	x20, #0x0                   	// #0
     ad4:	b	414 <ctf_serialize.part.0+0x114>
     ad8:	mov	w26, #0x0                   	// #0
     adc:	b	3f0 <ctf_serialize.part.0+0xf0>
     ae0:	mov	x26, #0x0                   	// #0
     ae4:	b	4c8 <ctf_serialize.part.0+0x1c8>
     ae8:	adrp	x3, 0 <ctf_sort_var>
     aec:	adrp	x1, 0 <ctf_sort_var>
     af0:	adrp	x0, 0 <ctf_sort_var>
     af4:	add	x3, x3, #0x0
     af8:	add	x1, x1, #0x0
     afc:	add	x0, x0, #0x0
     b00:	mov	w2, #0x1d8                 	// #472
     b04:	bl	0 <__assert_fail>
     b08:	adrp	x3, 0 <ctf_sort_var>
     b0c:	adrp	x1, 0 <ctf_sort_var>
     b10:	adrp	x0, 0 <ctf_sort_var>
     b14:	add	x3, x3, #0x0
     b18:	add	x1, x1, #0x0
     b1c:	add	x0, x0, #0x0
     b20:	mov	w2, #0x17d                 	// #381
     b24:	bl	0 <__assert_fail>
     b28:	adrp	x3, 0 <ctf_sort_var>
     b2c:	adrp	x1, 0 <ctf_sort_var>
     b30:	adrp	x0, 0 <ctf_sort_var>
     b34:	add	x3, x3, #0x0
     b38:	add	x1, x1, #0x0
     b3c:	add	x0, x0, #0x0
     b40:	mov	w2, #0x179                 	// #377
     b44:	bl	0 <__assert_fail>

0000000000000b48 <ctf_create>:
     b48:	stp	x29, x30, [sp, #-128]!
     b4c:	mov	x29, sp
     b50:	stp	x19, x20, [sp, #16]
     b54:	stp	x23, x24, [sp, #48]
     b58:	mov	x24, x0
     b5c:	bl	0 <libctf_init_debug>
     b60:	adrp	x1, 0 <ctf_hash_eq_integer>
     b64:	adrp	x0, 0 <ctf_hash_integer>
     b68:	add	x1, x1, #0x0
     b6c:	add	x0, x0, #0x0
     b70:	mov	x3, #0x0                   	// #0
     b74:	mov	x2, #0x0                   	// #0
     b78:	bl	0 <ctf_dynhash_create>
     b7c:	cbz	x0, d44 <ctf_create+0x1fc>
     b80:	adrp	x20, 0 <ctf_hash_eq_string>
     b84:	adrp	x19, 0 <ctf_hash_string>
     b88:	add	x20, x20, #0x0
     b8c:	add	x19, x19, #0x0
     b90:	mov	x1, x20
     b94:	mov	x3, #0x0                   	// #0
     b98:	mov	x2, #0x0                   	// #0
     b9c:	stp	x21, x22, [sp, #32]
     ba0:	mov	x21, x0
     ba4:	mov	x0, x19
     ba8:	bl	0 <ctf_dynhash_create>
     bac:	mov	x22, x0
     bb0:	cbz	x0, d58 <ctf_create+0x210>
     bb4:	mov	x1, x20
     bb8:	mov	x3, #0x0                   	// #0
     bbc:	mov	x2, #0x0                   	// #0
     bc0:	mov	x0, x19
     bc4:	stp	x25, x26, [sp, #64]
     bc8:	bl	0 <ctf_dynhash_create>
     bcc:	mov	x1, x20
     bd0:	mov	x25, x0
     bd4:	mov	x3, #0x0                   	// #0
     bd8:	mov	x2, #0x0                   	// #0
     bdc:	mov	x0, x19
     be0:	bl	0 <ctf_dynhash_create>
     be4:	mov	x23, x0
     be8:	mov	x1, x20
     bec:	mov	x3, #0x0                   	// #0
     bf0:	mov	x2, #0x0                   	// #0
     bf4:	mov	x0, x19
     bf8:	bl	0 <ctf_dynhash_create>
     bfc:	mov	x26, x0
     c00:	mov	x1, x20
     c04:	mov	x0, x19
     c08:	mov	x3, #0x0                   	// #0
     c0c:	mov	x2, #0x0                   	// #0
     c10:	bl	0 <ctf_dynhash_create>
     c14:	mov	x20, x0
     c18:	cmp	x25, #0x0
     c1c:	ccmp	x23, #0x0, #0x4, ne  // ne = any
     c20:	b.eq	ce0 <ctf_create+0x198>  // b.none
     c24:	cmp	x26, #0x0
     c28:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     c2c:	b.eq	ce0 <ctf_create+0x198>  // b.none
     c30:	adrp	x6, 0 <ctf_sort_var>
     c34:	add	x6, x6, #0x0
     c38:	add	x6, x6, #0x10
     c3c:	adrp	x7, 0 <_CTF_SECTION>
     c40:	add	x7, x7, #0x0
     c44:	mov	x8, #0x34                  	// #52
     c48:	mov	x5, x24
     c4c:	add	x0, sp, #0x60
     c50:	mov	x3, #0x0                   	// #0
     c54:	mov	x2, #0x0                   	// #0
     c58:	mov	x1, #0x0                   	// #0
     c5c:	str	x27, [sp, #80]
     c60:	mov	x27, #0x1                   	// #1
     c64:	mov	w4, w27
     c68:	stp	x7, x6, [sp, #96]
     c6c:	str	x8, [sp, #112]
     c70:	str	x27, [sp, #120]
     c74:	bl	0 <ctf_bufopen_internal>
     c78:	mov	x19, x0
     c7c:	cbz	x0, d3c <ctf_create+0x1f4>
     c80:	str	x25, [x0, #160]
     c84:	str	x23, [x0, #176]
     c88:	str	x26, [x0, #192]
     c8c:	str	x20, [x0, #208]
     c90:	str	x21, [x0, #568]
     c94:	str	x22, [x0, #592]
     c98:	str	xzr, [x0, #616]
     c9c:	str	x27, [x0, #624]
     ca0:	str	xzr, [x0, #632]
     ca4:	bl	0 <ctf_set_ctl_hashes>
     ca8:	mov	w1, #0x2                   	// #2
     cac:	mov	x0, x19
     cb0:	bl	0 <ctf_setmodel>
     cb4:	mov	x0, x19
     cb8:	bl	48 <ctf_grow_ptrtab>
     cbc:	tbnz	w0, #31, d68 <ctf_create+0x220>
     cc0:	ldp	x21, x22, [sp, #32]
     cc4:	ldp	x25, x26, [sp, #64]
     cc8:	ldr	x27, [sp, #80]
     ccc:	mov	x0, x19
     cd0:	ldp	x19, x20, [sp, #16]
     cd4:	ldp	x23, x24, [sp, #48]
     cd8:	ldp	x29, x30, [sp], #128
     cdc:	ret
     ce0:	mov	x0, x24
     ce4:	mov	w1, #0xb                   	// #11
     ce8:	bl	0 <ctf_set_open_errno>
     cec:	mov	x0, x25
     cf0:	bl	0 <ctf_dynhash_destroy>
     cf4:	mov	x0, x23
     cf8:	bl	0 <ctf_dynhash_destroy>
     cfc:	mov	x0, x26
     d00:	bl	0 <ctf_dynhash_destroy>
     d04:	mov	x0, x20
     d08:	bl	0 <ctf_dynhash_destroy>
     d0c:	mov	x0, x22
     d10:	bl	0 <ctf_dynhash_destroy>
     d14:	ldp	x25, x26, [sp, #64]
     d18:	mov	x0, x21
     d1c:	mov	x19, #0x0                   	// #0
     d20:	bl	0 <ctf_dynhash_destroy>
     d24:	mov	x0, x19
     d28:	ldp	x19, x20, [sp, #16]
     d2c:	ldp	x21, x22, [sp, #32]
     d30:	ldp	x23, x24, [sp, #48]
     d34:	ldp	x29, x30, [sp], #128
     d38:	ret
     d3c:	ldr	x27, [sp, #80]
     d40:	b	cec <ctf_create+0x1a4>
     d44:	mov	x0, x24
     d48:	mov	w1, #0xb                   	// #11
     d4c:	mov	x19, #0x0                   	// #0
     d50:	bl	0 <ctf_set_open_errno>
     d54:	b	ccc <ctf_create+0x184>
     d58:	mov	x0, x24
     d5c:	mov	w1, #0xb                   	// #11
     d60:	bl	0 <ctf_set_open_errno>
     d64:	b	d18 <ctf_create+0x1d0>
     d68:	mov	x0, x19
     d6c:	bl	0 <ctf_errno>
     d70:	mov	w1, w0
     d74:	mov	x0, x24
     d78:	bl	0 <ctf_set_open_errno>
     d7c:	mov	x0, x19
     d80:	mov	x19, #0x0                   	// #0
     d84:	bl	0 <ctf_file_close>
     d88:	ldp	x21, x22, [sp, #32]
     d8c:	ldp	x25, x26, [sp, #64]
     d90:	ldr	x27, [sp, #80]
     d94:	b	ccc <ctf_create+0x184>

0000000000000d98 <ctf_update>:
     d98:	ldr	w2, [x0, #552]
     d9c:	tbz	w2, #1, db4 <ctf_update+0x1c>
     da0:	mov	x1, x0
     da4:	mov	w0, #0x0                   	// #0
     da8:	ldr	x2, [x1, #480]
     dac:	str	x2, [x1, #616]
     db0:	ret
     db4:	stp	x29, x30, [sp, #-16]!
     db8:	mov	w1, #0x40d                 	// #1037
     dbc:	mov	x29, sp
     dc0:	bl	0 <ctf_set_errno>
     dc4:	ldp	x29, x30, [sp], #16
     dc8:	ret
     dcc:	nop

0000000000000dd0 <ctf_serialize>:
     dd0:	ldr	w1, [x0, #552]
     dd4:	tbz	w1, #1, dec <ctf_serialize+0x1c>
     dd8:	mov	w2, #0x0                   	// #0
     ddc:	tbnz	w1, #2, de8 <ctf_serialize+0x18>
     de0:	mov	w0, w2
     de4:	ret
     de8:	b	300 <ctf_serialize.part.0>
     dec:	stp	x29, x30, [sp, #-16]!
     df0:	mov	w1, #0x40d                 	// #1037
     df4:	mov	x29, sp
     df8:	bl	0 <ctf_set_errno>
     dfc:	ldp	x29, x30, [sp], #16
     e00:	ret
     e04:	nop

0000000000000e08 <ctf_name_table>:
     e08:	mov	x2, x0
     e0c:	cmp	w1, #0x7
     e10:	add	x0, x0, #0xa8
     e14:	b.eq	e34 <ctf_name_table+0x2c>  // b.none
     e18:	cmp	w1, #0x8
     e1c:	add	x0, x2, #0xb8
     e20:	b.eq	e34 <ctf_name_table+0x2c>  // b.none
     e24:	add	x0, x2, #0x98
     e28:	cmp	w1, #0x6
     e2c:	add	x2, x2, #0xc8
     e30:	csel	x0, x2, x0, ne  // ne = any
     e34:	ret

0000000000000e38 <ctf_dtd_insert>:
     e38:	stp	x29, x30, [sp, #-48]!
     e3c:	mov	x29, sp
     e40:	stp	x19, x20, [sp, #16]
     e44:	mov	x20, x0
     e48:	mov	x19, x1
     e4c:	ldr	x0, [x0, #568]
     e50:	str	x21, [sp, #32]
     e54:	mov	w21, w2
     e58:	mov	x2, x1
     e5c:	ldr	x1, [x1, #16]
     e60:	bl	0 <ctf_dynhash_insert>
     e64:	tbnz	w0, #31, eec <ctf_dtd_insert+0xb4>
     e68:	ldr	w1, [x19, #24]
     e6c:	cbz	w1, eb8 <ctf_dtd_insert+0x80>
     e70:	mov	x0, x20
     e74:	bl	0 <ctf_strraw>
     e78:	mov	x1, x0
     e7c:	cbz	x0, eb8 <ctf_dtd_insert+0x80>
     e80:	cmp	w21, #0x7
     e84:	add	x0, x20, #0xa8
     e88:	b.eq	ea8 <ctf_dtd_insert+0x70>  // b.none
     e8c:	cmp	w21, #0x8
     e90:	add	x0, x20, #0xb8
     e94:	b.eq	ea8 <ctf_dtd_insert+0x70>  // b.none
     e98:	cmp	w21, #0x6
     e9c:	add	x0, x20, #0x98
     ea0:	add	x2, x20, #0xc8
     ea4:	csel	x0, x2, x0, ne  // ne = any
     ea8:	ldr	x0, [x0, #8]
     eac:	ldr	x2, [x19, #16]
     eb0:	bl	0 <ctf_dynhash_insert>
     eb4:	tbnz	w0, #31, ed8 <ctf_dtd_insert+0xa0>
     eb8:	add	x0, x20, #0x240
     ebc:	mov	x1, x19
     ec0:	bl	0 <ctf_list_append>
     ec4:	mov	w0, #0x0                   	// #0
     ec8:	ldp	x19, x20, [sp, #16]
     ecc:	ldr	x21, [sp, #32]
     ed0:	ldp	x29, x30, [sp], #48
     ed4:	ret
     ed8:	ldr	x1, [x19, #16]
     edc:	ldr	x0, [x20, #568]
     ee0:	bl	0 <ctf_dynhash_remove>
     ee4:	mov	w0, #0xffffffff            	// #-1
     ee8:	b	ec8 <ctf_dtd_insert+0x90>
     eec:	mov	w0, #0xffffffff            	// #-1
     ef0:	b	ec8 <ctf_dtd_insert+0x90>
     ef4:	nop

0000000000000ef8 <ctf_add_generic>:
     ef8:	cmp	w1, #0x1
     efc:	b.hi	1008 <ctf_add_generic+0x110>  // b.pmore
     f00:	stp	x29, x30, [sp, #-64]!
     f04:	mov	x29, sp
     f08:	ldr	w1, [x0, #552]
     f0c:	stp	x19, x20, [sp, #16]
     f10:	mov	x19, x0
     f14:	tbz	w1, #1, 103c <ctf_add_generic+0x144>
     f18:	ldr	w1, [x0, #544]
     f1c:	mov	x20, x2
     f20:	stp	x21, x22, [sp, #32]
     f24:	mov	w21, w3
     f28:	add	w1, w1, #0x1
     f2c:	ldr	x3, [x0, #480]
     f30:	mov	w2, #0xfffffffd            	// #-3
     f34:	orr	x1, x1, x3
     f38:	cmp	x1, x2
     f3c:	b.hi	ff0 <ctf_add_generic+0xf8>  // b.pmore
     f40:	mov	x2, #0x7ffffffe            	// #2147483646
     f44:	cmp	x1, x2
     f48:	b.eq	ff0 <ctf_add_generic+0xf8>  // b.none
     f4c:	mov	x22, x4
     f50:	stp	x23, x24, [sp, #48]
     f54:	bl	48 <ctf_grow_ptrtab>
     f58:	tbnz	w0, #31, 104c <ctf_add_generic+0x154>
     f5c:	mov	x1, #0x1                   	// #1
     f60:	mov	x0, #0x48                  	// #72
     f64:	bl	0 <calloc>
     f68:	mov	x23, x0
     f6c:	cbz	x0, 1020 <ctf_add_generic+0x128>
     f70:	ldr	x24, [x19, #480]
     f74:	ldr	w0, [x19, #552]
     f78:	add	x24, x24, #0x1
     f7c:	str	x24, [x19, #480]
     f80:	tbz	w0, #0, f90 <ctf_add_generic+0x98>
     f84:	ldr	w0, [x19, #544]
     f88:	add	w0, w0, #0x1
     f8c:	orr	x24, x24, x0
     f90:	add	x2, x23, #0x18
     f94:	mov	x1, x20
     f98:	mov	x0, x19
     f9c:	bl	0 <ctf_str_add_ref>
     fa0:	str	x24, [x23, #16]
     fa4:	cmp	x20, #0x0
     fa8:	str	w0, [x23, #24]
     fac:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     fb0:	b.eq	1010 <ctf_add_generic+0x118>  // b.none
     fb4:	mov	w2, w21
     fb8:	mov	x1, x23
     fbc:	mov	x0, x19
     fc0:	bl	e38 <ctf_dtd_insert>
     fc4:	tbnz	w0, #31, 1068 <ctf_add_generic+0x170>
     fc8:	ldr	w0, [x19, #552]
     fcc:	orr	w0, w0, #0x4
     fd0:	str	w0, [x19, #552]
     fd4:	str	x23, [x22]
     fd8:	mov	x0, x24
     fdc:	ldp	x19, x20, [sp, #16]
     fe0:	ldp	x21, x22, [sp, #32]
     fe4:	ldp	x23, x24, [sp, #48]
     fe8:	ldp	x29, x30, [sp], #64
     fec:	ret
     ff0:	mov	x0, x19
     ff4:	mov	w1, #0x40f                 	// #1039
     ff8:	ldp	x19, x20, [sp, #16]
     ffc:	ldp	x21, x22, [sp, #32]
    1000:	ldp	x29, x30, [sp], #64
    1004:	b	0 <ctf_set_errno>
    1008:	mov	w1, #0x16                  	// #22
    100c:	b	0 <ctf_set_errno>
    1010:	ldrb	w0, [x20]
    1014:	cbz	w0, fb4 <ctf_add_generic+0xbc>
    1018:	mov	x0, x23
    101c:	bl	0 <free>
    1020:	mov	x0, x19
    1024:	mov	w1, #0xb                   	// #11
    1028:	ldp	x19, x20, [sp, #16]
    102c:	ldp	x21, x22, [sp, #32]
    1030:	ldp	x23, x24, [sp, #48]
    1034:	ldp	x29, x30, [sp], #64
    1038:	b	0 <ctf_set_errno>
    103c:	ldp	x19, x20, [sp, #16]
    1040:	mov	w1, #0x40d                 	// #1037
    1044:	ldp	x29, x30, [sp], #64
    1048:	b	0 <ctf_set_errno>
    104c:	mov	x24, #0xffffffffffffffff    	// #-1
    1050:	mov	x0, x24
    1054:	ldp	x19, x20, [sp, #16]
    1058:	ldp	x21, x22, [sp, #32]
    105c:	ldp	x23, x24, [sp, #48]
    1060:	ldp	x29, x30, [sp], #64
    1064:	ret
    1068:	mov	x0, x23
    106c:	mov	x24, #0xffffffffffffffff    	// #-1
    1070:	bl	0 <free>
    1074:	b	fd8 <ctf_add_generic+0xe0>

0000000000001078 <ctf_add_encoded>:
    1078:	stp	x29, x30, [sp, #-64]!
    107c:	mov	x29, sp
    1080:	cbz	x3, 1118 <ctf_add_encoded+0xa0>
    1084:	stp	x19, x20, [sp, #16]
    1088:	mov	w19, w4
    108c:	mov	x20, x3
    1090:	add	x4, sp, #0x38
    1094:	mov	w3, w19
    1098:	str	x21, [sp, #32]
    109c:	mov	w21, w1
    10a0:	bl	ef8 <ctf_add_generic>
    10a4:	cmn	x0, #0x1
    10a8:	b.eq	1128 <ctf_add_encoded+0xb0>  // b.none
    10ac:	ldr	w2, [x20, #8]
    10b0:	lsl	w4, w19, #26
    10b4:	ldr	x3, [sp, #56]
    10b8:	neg	w1, w2
    10bc:	and	w1, w1, #0xfffffff8
    10c0:	cmp	w21, #0x0
    10c4:	neg	w1, w1
    10c8:	orr	w2, w4, #0x2000000
    10cc:	ldr	x5, [x20]
    10d0:	lsr	w1, w1, #3
    10d4:	sub	x1, x1, #0x1
    10d8:	csel	w4, w2, w4, ne  // ne = any
    10dc:	ldr	x21, [sp, #32]
    10e0:	orr	x1, x1, x1, lsr #1
    10e4:	str	x5, [x3, #48]
    10e8:	orr	x1, x1, x1, lsr #2
    10ec:	str	w4, [x3, #28]
    10f0:	ldr	w2, [x20, #8]
    10f4:	orr	x1, x1, x1, lsr #4
    10f8:	ldp	x19, x20, [sp, #16]
    10fc:	orr	x1, x1, x1, lsr #8
    1100:	str	w2, [x3, #56]
    1104:	orr	x1, x1, x1, lsr #16
    1108:	add	x1, x1, #0x1
    110c:	str	w1, [x3, #32]
    1110:	ldp	x29, x30, [sp], #64
    1114:	ret
    1118:	mov	w1, #0x16                  	// #22
    111c:	bl	0 <ctf_set_errno>
    1120:	ldp	x29, x30, [sp], #64
    1124:	ret
    1128:	ldp	x19, x20, [sp, #16]
    112c:	ldr	x21, [sp, #32]
    1130:	ldp	x29, x30, [sp], #64
    1134:	ret

0000000000001138 <ctf_add_reftype>:
    1138:	stp	x29, x30, [sp, #-80]!
    113c:	mov	x29, sp
    1140:	stp	x21, x22, [sp, #32]
    1144:	stp	x23, x24, [sp, #48]
    1148:	mov	w23, w1
    114c:	mov	x1, #0xfffffffe            	// #4294967294
    1150:	str	x0, [sp, #72]
    1154:	cmp	x2, x1
    1158:	b.hi	11f4 <ctf_add_reftype+0xbc>  // b.pmore
    115c:	stp	x19, x20, [sp, #16]
    1160:	mov	x20, x0
    1164:	mov	x19, x2
    1168:	mov	w21, w3
    116c:	mov	x1, x2
    1170:	ldr	w24, [x20, #552]
    1174:	add	x0, sp, #0x48
    1178:	bl	0 <ctf_lookup_by_id>
    117c:	cbz	x0, 1290 <ctf_add_reftype+0x158>
    1180:	add	x4, sp, #0x40
    1184:	mov	w3, w21
    1188:	mov	w1, w23
    118c:	mov	x0, x20
    1190:	mov	x2, #0x0                   	// #0
    1194:	bl	ef8 <ctf_add_generic>
    1198:	mov	x22, x0
    119c:	cmn	x0, #0x1
    11a0:	b.eq	1290 <ctf_add_reftype+0x158>  // b.none
    11a4:	ldr	x1, [sp, #64]
    11a8:	lsl	w0, w21, #26
    11ac:	cmp	w23, #0x0
    11b0:	orr	w2, w0, #0x2000000
    11b4:	csel	w0, w2, w0, ne  // ne = any
    11b8:	cmp	w21, #0x3
    11bc:	stp	w0, w19, [x1, #28]
    11c0:	b.ne	11dc <ctf_add_reftype+0xa4>  // b.any
    11c4:	ldr	w2, [x20, #544]
    11c8:	and	w0, w24, #0x1
    11cc:	cmp	x19, w2, uxtw
    11d0:	cset	w3, hi  // hi = pmore
    11d4:	cmp	w3, w0
    11d8:	b.eq	1214 <ctf_add_reftype+0xdc>  // b.none
    11dc:	ldp	x19, x20, [sp, #16]
    11e0:	mov	x0, x22
    11e4:	ldp	x21, x22, [sp, #32]
    11e8:	ldp	x23, x24, [sp, #48]
    11ec:	ldp	x29, x30, [sp], #80
    11f0:	ret
    11f4:	mov	w1, #0x16                  	// #22
    11f8:	bl	0 <ctf_set_errno>
    11fc:	mov	x22, x0
    1200:	mov	x0, x22
    1204:	ldp	x21, x22, [sp, #32]
    1208:	ldp	x23, x24, [sp, #48]
    120c:	ldp	x29, x30, [sp], #80
    1210:	ret
    1214:	ldr	x0, [x20, #480]
    1218:	and	w19, w2, w19
    121c:	cmp	x19, x0
    1220:	b.cs	11dc <ctf_add_reftype+0xa4>  // b.hs, b.nlast
    1224:	ldr	x3, [x20, #448]
    1228:	and	w21, w2, w22
    122c:	ldr	x0, [sp, #72]
    1230:	str	w21, [x3, x19, lsl #2]
    1234:	cmp	x0, x20
    1238:	b.ne	11dc <ctf_add_reftype+0xa4>  // b.any
    123c:	ldr	x2, [x20]
    1240:	ldp	w0, w19, [x1, #28]
    1244:	ldr	x1, [x2]
    1248:	ldr	w23, [x20, #544]
    124c:	blr	x1
    1250:	cmp	w0, #0xa
    1254:	b.ne	11dc <ctf_add_reftype+0xa4>  // b.any
    1258:	ldr	x1, [sp, #64]
    125c:	mov	x0, x20
    1260:	ldr	w1, [x1, #24]
    1264:	bl	0 <ctf_strptr>
    1268:	ldrb	w0, [x0]
    126c:	cbnz	w0, 11dc <ctf_add_reftype+0xa4>
    1270:	ldr	x0, [x20, #480]
    1274:	and	w19, w19, w23
    1278:	cmp	x0, x19
    127c:	b.ls	11dc <ctf_add_reftype+0xa4>  // b.plast
    1280:	ldr	x0, [x20, #448]
    1284:	str	w21, [x0, x19, lsl #2]
    1288:	ldp	x19, x20, [sp, #16]
    128c:	b	11e0 <ctf_add_reftype+0xa8>
    1290:	mov	x22, #0xffffffffffffffff    	// #-1
    1294:	mov	x0, x22
    1298:	ldp	x19, x20, [sp, #16]
    129c:	ldp	x21, x22, [sp, #32]
    12a0:	ldp	x23, x24, [sp, #48]
    12a4:	ldp	x29, x30, [sp], #80
    12a8:	ret
    12ac:	nop

00000000000012b0 <ctf_dtd_delete>:
    12b0:	stp	x29, x30, [sp, #-64]!
    12b4:	mov	x29, sp
    12b8:	stp	x19, x20, [sp, #16]
    12bc:	mov	x20, x1
    12c0:	ldr	x1, [x0]
    12c4:	stp	x21, x22, [sp, #32]
    12c8:	mov	x22, x0
    12cc:	ldr	w0, [x20, #28]
    12d0:	ldr	x1, [x1]
    12d4:	str	x23, [sp, #48]
    12d8:	blr	x1
    12dc:	mov	w23, w0
    12e0:	ldr	x1, [x20, #16]
    12e4:	ldr	x0, [x22, #568]
    12e8:	bl	0 <ctf_dynhash_remove>
    12ec:	cmp	w23, #0x5
    12f0:	b.eq	1354 <ctf_dtd_delete+0xa4>  // b.none
    12f4:	sub	w0, w23, #0x6
    12f8:	cmp	w0, #0x2
    12fc:	b.hi	1328 <ctf_dtd_delete+0x78>  // b.pmore
    1300:	ldr	x19, [x20, #56]
    1304:	cbz	x19, 1328 <ctf_dtd_delete+0x78>
    1308:	ldr	x0, [x19, #16]
    130c:	cbz	x0, 1314 <ctf_dtd_delete+0x64>
    1310:	bl	0 <free>
    1314:	ldr	x21, [x19, #8]
    1318:	mov	x0, x19
    131c:	bl	0 <free>
    1320:	mov	x19, x21
    1324:	cbnz	x21, 1308 <ctf_dtd_delete+0x58>
    1328:	ldr	w1, [x20, #24]
    132c:	cbnz	w1, 1364 <ctf_dtd_delete+0xb4>
    1330:	add	x0, x22, #0x240
    1334:	mov	x1, x20
    1338:	bl	0 <ctf_list_delete>
    133c:	mov	x0, x20
    1340:	ldp	x19, x20, [sp, #16]
    1344:	ldp	x21, x22, [sp, #32]
    1348:	ldr	x23, [sp, #48]
    134c:	ldp	x29, x30, [sp], #64
    1350:	b	0 <free>
    1354:	ldr	x0, [x20, #48]
    1358:	bl	0 <free>
    135c:	ldr	w1, [x20, #24]
    1360:	cbz	w1, 1330 <ctf_dtd_delete+0x80>
    1364:	mov	x0, x22
    1368:	bl	0 <ctf_strraw>
    136c:	mov	x19, x0
    1370:	cbz	x0, 1330 <ctf_dtd_delete+0x80>
    1374:	cmp	w23, #0x7
    1378:	add	x0, x22, #0xa8
    137c:	b.eq	139c <ctf_dtd_delete+0xec>  // b.none
    1380:	cmp	w23, #0x8
    1384:	add	x0, x22, #0xb8
    1388:	b.eq	139c <ctf_dtd_delete+0xec>  // b.none
    138c:	cmp	w23, #0x6
    1390:	add	x0, x22, #0x98
    1394:	add	x1, x22, #0xc8
    1398:	csel	x0, x1, x0, ne  // ne = any
    139c:	ldr	x0, [x0, #8]
    13a0:	mov	x1, x19
    13a4:	bl	0 <ctf_dynhash_remove>
    13a8:	mov	x1, x19
    13ac:	add	x2, x20, #0x18
    13b0:	mov	x0, x22
    13b4:	bl	0 <ctf_str_remove_ref>
    13b8:	b	1330 <ctf_dtd_delete+0x80>
    13bc:	nop

00000000000013c0 <ctf_dtd_lookup>:
    13c0:	ldr	x0, [x0, #568]
    13c4:	b	0 <ctf_dynhash_lookup>

00000000000013c8 <ctf_dynamic_type>:
    13c8:	ldr	w3, [x0, #552]
    13cc:	tbz	w3, #1, 13f8 <ctf_dynamic_type+0x30>
    13d0:	ldr	w2, [x0, #544]
    13d4:	tbz	w3, #0, 13e8 <ctf_dynamic_type+0x20>
    13d8:	cmp	x1, x2
    13dc:	b.hi	13e8 <ctf_dynamic_type+0x20>  // b.pmore
    13e0:	ldr	x0, [x0, #512]
    13e4:	ldr	w2, [x0, #544]
    13e8:	ldr	x3, [x0, #480]
    13ec:	and	x2, x1, x2
    13f0:	cmp	x3, x2
    13f4:	b.cs	1400 <ctf_dynamic_type+0x38>  // b.hs, b.nlast
    13f8:	mov	x0, #0x0                   	// #0
    13fc:	ret
    1400:	ldr	x0, [x0, #568]
    1404:	b	0 <ctf_dynhash_lookup>

0000000000001408 <ctf_dvd_insert>:
    1408:	stp	x29, x30, [sp, #-32]!
    140c:	mov	x2, x1
    1410:	mov	x29, sp
    1414:	stp	x19, x20, [sp, #16]
    1418:	mov	x20, x0
    141c:	mov	x19, x1
    1420:	ldr	x1, [x1, #16]
    1424:	ldr	x0, [x0, #592]
    1428:	bl	0 <ctf_dynhash_insert>
    142c:	tbnz	w0, #31, 144c <ctf_dvd_insert+0x44>
    1430:	add	x0, x20, #0x258
    1434:	mov	x1, x19
    1438:	bl	0 <ctf_list_append>
    143c:	mov	w0, #0x0                   	// #0
    1440:	ldp	x19, x20, [sp, #16]
    1444:	ldp	x29, x30, [sp], #32
    1448:	ret
    144c:	mov	w0, #0xffffffff            	// #-1
    1450:	b	1440 <ctf_dvd_insert+0x38>
    1454:	nop

0000000000001458 <ctf_dvd_delete>:
    1458:	stp	x29, x30, [sp, #-32]!
    145c:	mov	x29, sp
    1460:	stp	x19, x20, [sp, #16]
    1464:	mov	x19, x1
    1468:	mov	x20, x0
    146c:	ldr	x1, [x1, #16]
    1470:	ldr	x0, [x0, #592]
    1474:	bl	0 <ctf_dynhash_remove>
    1478:	ldr	x0, [x19, #16]
    147c:	bl	0 <free>
    1480:	mov	x1, x19
    1484:	add	x0, x20, #0x258
    1488:	bl	0 <ctf_list_delete>
    148c:	mov	x0, x19
    1490:	ldp	x19, x20, [sp, #16]
    1494:	ldp	x29, x30, [sp], #32
    1498:	b	0 <free>
    149c:	nop

00000000000014a0 <ctf_dvd_lookup>:
    14a0:	ldr	x0, [x0, #592]
    14a4:	b	0 <ctf_dynhash_lookup>

00000000000014a8 <ctf_snapshot>:
    14a8:	mov	x2, x0
    14ac:	ldr	x0, [x0, #480]
    14b0:	ldr	x1, [x2, #624]
    14b4:	add	x3, x1, #0x1
    14b8:	str	x3, [x2, #624]
    14bc:	ret

00000000000014c0 <ctf_rollback>:
    14c0:	stp	x29, x30, [sp, #-112]!
    14c4:	mov	x29, sp
    14c8:	stp	x23, x24, [sp, #48]
    14cc:	mov	x23, x1
    14d0:	ldr	w1, [x0, #552]
    14d4:	tbz	w1, #1, 163c <ctf_rollback+0x17c>
    14d8:	ldr	x1, [x0, #632]
    14dc:	stp	x19, x20, [sp, #16]
    14e0:	mov	x19, x0
    14e4:	stp	x21, x22, [sp, #32]
    14e8:	cmp	x1, x2
    14ec:	mov	x22, x2
    14f0:	b.cs	1650 <ctf_rollback+0x190>  // b.hs, b.nlast
    14f4:	ldr	x21, [x0, #584]
    14f8:	cbz	x21, 1574 <ctf_rollback+0xb4>
    14fc:	stp	x25, x26, [sp, #64]
    1500:	add	x26, x0, #0xb8
    1504:	add	x25, x0, #0x98
    1508:	stp	x27, x28, [sp, #80]
    150c:	add	x27, x0, #0xa8
    1510:	add	x0, x0, #0xc8
    1514:	str	x0, [sp, #104]
    1518:	ldr	x1, [x21, #16]
    151c:	mov	x20, x21
    1520:	ldr	w0, [x19, #544]
    1524:	ldr	x21, [x21, #8]
    1528:	and	x0, x0, x1
    152c:	cmp	x0, x23
    1530:	b.ls	1568 <ctf_rollback+0xa8>  // b.plast
    1534:	ldr	x1, [x19]
    1538:	ldr	w0, [x20, #28]
    153c:	ldr	x1, [x1]
    1540:	blr	x1
    1544:	mov	w28, w0
    1548:	ldr	w1, [x20, #24]
    154c:	cbnz	w1, 15c8 <ctf_rollback+0x108>
    1550:	ldr	x1, [x20, #16]
    1554:	ldr	x0, [x19, #568]
    1558:	bl	0 <ctf_dynhash_remove>
    155c:	mov	x1, x20
    1560:	mov	x0, x19
    1564:	bl	12b0 <ctf_dtd_delete>
    1568:	cbnz	x21, 1518 <ctf_rollback+0x58>
    156c:	ldp	x25, x26, [sp, #64]
    1570:	ldp	x27, x28, [sp, #80]
    1574:	ldr	x20, [x19, #608]
    1578:	cbz	x20, 159c <ctf_rollback+0xdc>
    157c:	ldr	x2, [x20, #32]
    1580:	mov	x1, x20
    1584:	mov	x0, x19
    1588:	cmp	x2, x22
    158c:	ldr	x20, [x20, #8]
    1590:	b.ls	1578 <ctf_rollback+0xb8>  // b.plast
    1594:	bl	1458 <ctf_dvd_delete>
    1598:	cbnz	x20, 157c <ctf_rollback+0xbc>
    159c:	ldr	x1, [x19, #632]
    15a0:	str	x23, [x19, #480]
    15a4:	str	x22, [x19, #624]
    15a8:	mov	w0, #0x0                   	// #0
    15ac:	cmp	x1, x22
    15b0:	b.eq	161c <ctf_rollback+0x15c>  // b.none
    15b4:	ldp	x19, x20, [sp, #16]
    15b8:	ldp	x21, x22, [sp, #32]
    15bc:	ldp	x23, x24, [sp, #48]
    15c0:	ldp	x29, x30, [sp], #112
    15c4:	ret
    15c8:	mov	x0, x19
    15cc:	bl	0 <ctf_strraw>
    15d0:	mov	x24, x0
    15d4:	cbz	x0, 1550 <ctf_rollback+0x90>
    15d8:	mov	x1, x0
    15dc:	cmp	w28, #0x7
    15e0:	mov	x0, x27
    15e4:	b.eq	1600 <ctf_rollback+0x140>  // b.none
    15e8:	cmp	w28, #0x8
    15ec:	mov	x0, x26
    15f0:	b.eq	1600 <ctf_rollback+0x140>  // b.none
    15f4:	ldr	x0, [sp, #104]
    15f8:	cmp	w28, #0x6
    15fc:	csel	x0, x0, x25, ne  // ne = any
    1600:	ldr	x0, [x0, #8]
    1604:	bl	0 <ctf_dynhash_remove>
    1608:	mov	x1, x24
    160c:	add	x2, x20, #0x18
    1610:	mov	x0, x19
    1614:	bl	0 <ctf_str_remove_ref>
    1618:	b	1550 <ctf_rollback+0x90>
    161c:	ldr	w1, [x19, #552]
    1620:	ldp	x21, x22, [sp, #32]
    1624:	and	w1, w1, #0xfffffffb
    1628:	str	w1, [x19, #552]
    162c:	ldp	x19, x20, [sp, #16]
    1630:	ldp	x23, x24, [sp, #48]
    1634:	ldp	x29, x30, [sp], #112
    1638:	ret
    163c:	mov	w1, #0x40d                 	// #1037
    1640:	bl	0 <ctf_set_errno>
    1644:	ldp	x23, x24, [sp, #48]
    1648:	ldp	x29, x30, [sp], #112
    164c:	ret
    1650:	mov	w1, #0x412                 	// #1042
    1654:	bl	0 <ctf_set_errno>
    1658:	ldp	x19, x20, [sp, #16]
    165c:	ldp	x21, x22, [sp, #32]
    1660:	ldp	x23, x24, [sp, #48]
    1664:	ldp	x29, x30, [sp], #112
    1668:	ret
    166c:	nop

0000000000001670 <ctf_discard>:
    1670:	ldr	w3, [x0, #552]
    1674:	ldr	x2, [x0, #632]
    1678:	ldr	x1, [x0, #616]
    167c:	add	x2, x2, #0x1
    1680:	tbnz	w3, #2, 168c <ctf_discard+0x1c>
    1684:	mov	w0, #0x0                   	// #0
    1688:	ret
    168c:	b	14c0 <ctf_rollback>

0000000000001690 <ctf_add_slice>:
    1690:	stp	x29, x30, [sp, #-64]!
    1694:	mov	x29, sp
    1698:	stp	x19, x20, [sp, #16]
    169c:	mov	x20, x0
    16a0:	str	x0, [sp, #56]
    16a4:	cbz	x3, 17b4 <ctf_add_slice+0x124>
    16a8:	ldr	w0, [x3, #8]
    16ac:	mov	x19, x3
    16b0:	cmp	w0, #0xff
    16b4:	b.hi	1798 <ctf_add_slice+0x108>  // b.pmore
    16b8:	ldr	w0, [x3, #4]
    16bc:	cmp	w0, #0xff
    16c0:	b.hi	1798 <ctf_add_slice+0x108>  // b.pmore
    16c4:	stp	x21, x22, [sp, #32]
    16c8:	mov	x0, #0xfffffffe            	// #4294967294
    16cc:	mov	x21, x2
    16d0:	cmp	x2, x0
    16d4:	b.hi	17b0 <ctf_add_slice+0x120>  // b.pmore
    16d8:	mov	w22, w1
    16dc:	add	x0, sp, #0x38
    16e0:	mov	x1, x2
    16e4:	bl	0 <ctf_lookup_by_id>
    16e8:	cbz	x0, 17dc <ctf_add_slice+0x14c>
    16ec:	ldr	x0, [sp, #56]
    16f0:	mov	x1, x21
    16f4:	bl	0 <ctf_type_kind_unsliced>
    16f8:	sub	w1, w0, #0x1
    16fc:	cmp	w1, #0x1
    1700:	ccmp	w0, #0x8, #0x4, hi  // hi = pmore
    1704:	mov	x0, x20
    1708:	b.ne	17cc <ctf_add_slice+0x13c>  // b.any
    170c:	add	x4, sp, #0x30
    1710:	mov	w1, w22
    1714:	mov	w3, #0xe                   	// #14
    1718:	mov	x2, #0x0                   	// #0
    171c:	bl	ef8 <ctf_add_generic>
    1720:	cmn	x0, #0x1
    1724:	b.eq	17dc <ctf_add_slice+0x14c>  // b.none
    1728:	ldr	w3, [x19, #8]
    172c:	cmp	w22, #0x0
    1730:	ldr	x2, [sp, #48]
    1734:	neg	w1, w3
    1738:	and	w1, w1, #0xfffffff8
    173c:	mov	w4, #0x38000000            	// #939524096
    1740:	neg	w1, w1
    1744:	mov	w3, #0x3a000000            	// #973078528
    1748:	str	w21, [x2, #48]
    174c:	csel	w3, w3, w4, ne  // ne = any
    1750:	lsr	w1, w1, #3
    1754:	str	w3, [x2, #28]
    1758:	sub	x1, x1, #0x1
    175c:	ldr	w3, [x19, #8]
    1760:	ldp	x21, x22, [sp, #32]
    1764:	orr	x1, x1, x1, lsr #1
    1768:	strh	w3, [x2, #54]
    176c:	orr	x1, x1, x1, lsr #2
    1770:	ldr	w3, [x19, #4]
    1774:	orr	x1, x1, x1, lsr #4
    1778:	strh	w3, [x2, #52]
    177c:	ldp	x19, x20, [sp, #16]
    1780:	orr	x1, x1, x1, lsr #8
    1784:	orr	x1, x1, x1, lsr #16
    1788:	add	x1, x1, #0x1
    178c:	str	w1, [x2, #32]
    1790:	ldp	x29, x30, [sp], #64
    1794:	ret
    1798:	mov	x0, x20
    179c:	mov	w1, #0x416                 	// #1046
    17a0:	bl	0 <ctf_set_errno>
    17a4:	ldp	x19, x20, [sp, #16]
    17a8:	ldp	x29, x30, [sp], #64
    17ac:	ret
    17b0:	ldp	x21, x22, [sp, #32]
    17b4:	mov	x0, x20
    17b8:	mov	w1, #0x16                  	// #22
    17bc:	bl	0 <ctf_set_errno>
    17c0:	ldp	x19, x20, [sp, #16]
    17c4:	ldp	x29, x30, [sp], #64
    17c8:	ret
    17cc:	mov	w1, #0x3fe                 	// #1022
    17d0:	bl	0 <ctf_set_errno>
    17d4:	ldp	x21, x22, [sp, #32]
    17d8:	b	17a4 <ctf_add_slice+0x114>
    17dc:	mov	x0, #0xffffffffffffffff    	// #-1
    17e0:	ldp	x21, x22, [sp, #32]
    17e4:	b	17a4 <ctf_add_slice+0x114>

00000000000017e8 <ctf_add_integer>:
    17e8:	mov	w4, #0x1                   	// #1
    17ec:	b	1078 <ctf_add_encoded>

00000000000017f0 <ctf_add_float>:
    17f0:	mov	w4, #0x2                   	// #2
    17f4:	b	1078 <ctf_add_encoded>

00000000000017f8 <ctf_add_pointer>:
    17f8:	mov	w3, #0x3                   	// #3
    17fc:	b	1138 <ctf_add_reftype>

0000000000001800 <ctf_add_array>:
    1800:	stp	x29, x30, [sp, #-64]!
    1804:	mov	x29, sp
    1808:	str	x0, [sp, #48]
    180c:	cbz	x2, 18c0 <ctf_add_array+0xc0>
    1810:	str	x21, [sp, #32]
    1814:	mov	w21, w1
    1818:	ldr	x1, [x2]
    181c:	stp	x19, x20, [sp, #16]
    1820:	mov	x20, x0
    1824:	mov	x19, x2
    1828:	add	x0, sp, #0x30
    182c:	bl	0 <ctf_lookup_by_id>
    1830:	cbz	x0, 18a0 <ctf_add_array+0xa0>
    1834:	ldr	x1, [x19, #8]
    1838:	add	x0, sp, #0x30
    183c:	str	x20, [sp, #48]
    1840:	bl	0 <ctf_lookup_by_id>
    1844:	cbz	x0, 18a0 <ctf_add_array+0xa0>
    1848:	mov	x0, x20
    184c:	add	x4, sp, #0x38
    1850:	mov	w1, w21
    1854:	mov	w3, #0x4                   	// #4
    1858:	mov	x2, #0x0                   	// #0
    185c:	bl	ef8 <ctf_add_generic>
    1860:	cmn	x0, #0x1
    1864:	b.eq	18b4 <ctf_add_array+0xb4>  // b.none
    1868:	ldr	x1, [sp, #56]
    186c:	cmp	w21, #0x0
    1870:	ldp	x4, x5, [x19]
    1874:	mov	w3, #0x10000000            	// #268435456
    1878:	ldr	x21, [sp, #32]
    187c:	stp	x4, x5, [x1, #48]
    1880:	mov	w2, #0x12000000            	// #301989888
    1884:	csel	w2, w2, w3, ne  // ne = any
    1888:	ldr	x3, [x19, #16]
    188c:	ldp	x19, x20, [sp, #16]
    1890:	stp	w2, wzr, [x1, #28]
    1894:	str	x3, [x1, #64]
    1898:	ldp	x29, x30, [sp], #64
    189c:	ret
    18a0:	mov	x0, #0xffffffffffffffff    	// #-1
    18a4:	ldp	x19, x20, [sp, #16]
    18a8:	ldr	x21, [sp, #32]
    18ac:	ldp	x29, x30, [sp], #64
    18b0:	ret
    18b4:	ldp	x19, x20, [sp, #16]
    18b8:	ldr	x21, [sp, #32]
    18bc:	b	1898 <ctf_add_array+0x98>
    18c0:	mov	w1, #0x16                  	// #22
    18c4:	bl	0 <ctf_set_errno>
    18c8:	ldp	x29, x30, [sp], #64
    18cc:	ret

00000000000018d0 <ctf_set_array>:
    18d0:	stp	x29, x30, [sp, #-48]!
    18d4:	mov	x29, sp
    18d8:	stp	x19, x20, [sp, #16]
    18dc:	mov	x19, x0
    18e0:	ldr	x0, [x0, #568]
    18e4:	str	x21, [sp, #32]
    18e8:	mov	x21, x2
    18ec:	bl	0 <ctf_dynhash_lookup>
    18f0:	ldr	w1, [x19, #552]
    18f4:	tbz	w1, #1, 1964 <ctf_set_array+0x94>
    18f8:	mov	x20, x0
    18fc:	cbz	x0, 1918 <ctf_set_array+0x48>
    1900:	ldr	x1, [x19]
    1904:	ldr	w0, [x0, #28]
    1908:	ldr	x1, [x1]
    190c:	blr	x1
    1910:	cmp	w0, #0x4
    1914:	b.eq	1934 <ctf_set_array+0x64>  // b.none
    1918:	mov	x0, x19
    191c:	mov	w1, #0x3fa                 	// #1018
    1920:	bl	0 <ctf_set_errno>
    1924:	ldp	x19, x20, [sp, #16]
    1928:	ldr	x21, [sp, #32]
    192c:	ldp	x29, x30, [sp], #48
    1930:	ret
    1934:	ldr	w1, [x19, #552]
    1938:	mov	w0, #0x0                   	// #0
    193c:	ldp	x2, x3, [x21]
    1940:	orr	w1, w1, #0x4
    1944:	str	w1, [x19, #552]
    1948:	stp	x2, x3, [x20, #48]
    194c:	ldr	x1, [x21, #16]
    1950:	str	x1, [x20, #64]
    1954:	ldp	x19, x20, [sp, #16]
    1958:	ldr	x21, [sp, #32]
    195c:	ldp	x29, x30, [sp], #48
    1960:	ret
    1964:	mov	x0, x19
    1968:	mov	w1, #0x40d                 	// #1037
    196c:	bl	0 <ctf_set_errno>
    1970:	ldp	x19, x20, [sp, #16]
    1974:	ldr	x21, [sp, #32]
    1978:	ldp	x29, x30, [sp], #48
    197c:	ret

0000000000001980 <ctf_add_function>:
    1980:	stp	x29, x30, [sp, #-96]!
    1984:	mov	x29, sp
    1988:	stp	x19, x20, [sp, #16]
    198c:	stp	x21, x22, [sp, #32]
    1990:	mov	x21, x0
    1994:	str	x0, [sp, #88]
    1998:	cbz	x2, 1a34 <ctf_add_function+0xb4>
    199c:	ldr	w0, [x2, #12]
    19a0:	mov	x20, x2
    19a4:	tst	w0, #0xfffffffe
    19a8:	b.ne	1a34 <ctf_add_function+0xb4>  // b.any
    19ac:	stp	x23, x24, [sp, #48]
    19b0:	mov	x22, x3
    19b4:	ldr	w24, [x2, #8]
    19b8:	cmp	w24, #0x0
    19bc:	ccmp	x3, #0x0, #0x0, ne  // ne = any
    19c0:	b.eq	1a30 <ctf_add_function+0xb0>  // b.none
    19c4:	mov	w23, w1
    19c8:	cmp	w0, #0x0
    19cc:	ldr	x1, [x2]
    19d0:	cinc	w24, w24, ne  // ne = any
    19d4:	add	x0, sp, #0x58
    19d8:	bl	0 <ctf_lookup_by_id>
    19dc:	cbz	x0, 1a14 <ctf_add_function+0x94>
    19e0:	ldr	w0, [x20, #8]
    19e4:	cbz	w0, 1a58 <ctf_add_function+0xd8>
    19e8:	mov	x19, #0x0                   	// #0
    19ec:	b	19fc <ctf_add_function+0x7c>
    19f0:	ldr	w0, [x20, #8]
    19f4:	cmp	x0, x19
    19f8:	b.ls	1a58 <ctf_add_function+0xd8>  // b.plast
    19fc:	ldr	x1, [x22, x19, lsl #3]
    1a00:	add	x0, sp, #0x58
    1a04:	add	x19, x19, #0x1
    1a08:	str	x21, [sp, #88]
    1a0c:	bl	0 <ctf_lookup_by_id>
    1a10:	cbnz	x0, 19f0 <ctf_add_function+0x70>
    1a14:	ldp	x23, x24, [sp, #48]
    1a18:	mov	x19, #0xffffffffffffffff    	// #-1
    1a1c:	mov	x0, x19
    1a20:	ldp	x19, x20, [sp, #16]
    1a24:	ldp	x21, x22, [sp, #32]
    1a28:	ldp	x29, x30, [sp], #96
    1a2c:	ret
    1a30:	ldp	x23, x24, [sp, #48]
    1a34:	mov	x0, x21
    1a38:	mov	w1, #0x16                  	// #22
    1a3c:	bl	0 <ctf_set_errno>
    1a40:	mov	x19, x0
    1a44:	mov	x0, x19
    1a48:	ldp	x19, x20, [sp, #16]
    1a4c:	ldp	x21, x22, [sp, #32]
    1a50:	ldp	x29, x30, [sp], #96
    1a54:	ret
    1a58:	mov	w0, #0xffffff              	// #16777215
    1a5c:	cmp	w24, w0
    1a60:	b.hi	1b04 <ctf_add_function+0x184>  // b.pmore
    1a64:	str	x25, [sp, #64]
    1a68:	cbz	w24, 1b1c <ctf_add_function+0x19c>
    1a6c:	ubfiz	x0, x24, #3, #32
    1a70:	bl	0 <malloc>
    1a74:	mov	x25, x0
    1a78:	cbz	x0, 1b38 <ctf_add_function+0x1b8>
    1a7c:	mov	x0, x21
    1a80:	add	x4, sp, #0x50
    1a84:	mov	w1, w23
    1a88:	mov	w3, #0x5                   	// #5
    1a8c:	mov	x2, #0x0                   	// #0
    1a90:	bl	ef8 <ctf_add_generic>
    1a94:	mov	x19, x0
    1a98:	cmn	x0, #0x1
    1a9c:	b.eq	1b24 <ctf_add_function+0x1a4>  // b.none
    1aa0:	ldr	x21, [sp, #80]
    1aa4:	cmp	w23, #0x0
    1aa8:	mov	w0, #0x14000000            	// #335544320
    1aac:	ldr	w2, [x20, #8]
    1ab0:	mov	w1, #0x16000000            	// #369098752
    1ab4:	csel	w1, w1, w0, ne  // ne = any
    1ab8:	ldr	x0, [x20]
    1abc:	orr	w1, w24, w1
    1ac0:	stp	w1, w0, [x21, #28]
    1ac4:	lsl	x2, x2, #3
    1ac8:	mov	x1, x22
    1acc:	mov	x0, x25
    1ad0:	bl	0 <memcpy>
    1ad4:	ldr	w0, [x20, #12]
    1ad8:	tbz	w0, #0, 1ae4 <ctf_add_function+0x164>
    1adc:	sub	w24, w24, #0x1
    1ae0:	str	xzr, [x25, x24, lsl #3]
    1ae4:	ldp	x23, x24, [sp, #48]
    1ae8:	str	x25, [x21, #48]
    1aec:	mov	x0, x19
    1af0:	ldp	x19, x20, [sp, #16]
    1af4:	ldp	x21, x22, [sp, #32]
    1af8:	ldr	x25, [sp, #64]
    1afc:	ldp	x29, x30, [sp], #96
    1b00:	ret
    1b04:	mov	x0, x21
    1b08:	mov	w1, #0x4b                  	// #75
    1b0c:	bl	0 <ctf_set_errno>
    1b10:	mov	x19, x0
    1b14:	ldp	x23, x24, [sp, #48]
    1b18:	b	1a1c <ctf_add_function+0x9c>
    1b1c:	mov	x25, #0x0                   	// #0
    1b20:	b	1a7c <ctf_add_function+0xfc>
    1b24:	mov	x0, x25
    1b28:	bl	0 <free>
    1b2c:	ldp	x23, x24, [sp, #48]
    1b30:	ldr	x25, [sp, #64]
    1b34:	b	1a1c <ctf_add_function+0x9c>
    1b38:	mov	x0, x21
    1b3c:	mov	w1, #0xb                   	// #11
    1b40:	bl	0 <ctf_set_errno>
    1b44:	mov	x19, x0
    1b48:	ldp	x23, x24, [sp, #48]
    1b4c:	ldr	x25, [sp, #64]
    1b50:	b	1a1c <ctf_add_function+0x9c>
    1b54:	nop

0000000000001b58 <ctf_add_struct_sized>:
    1b58:	stp	x29, x30, [sp, #-80]!
    1b5c:	mov	x29, sp
    1b60:	stp	x19, x20, [sp, #16]
    1b64:	mov	x20, x3
    1b68:	stp	x21, x22, [sp, #32]
    1b6c:	mov	w22, w1
    1b70:	mov	x21, x2
    1b74:	str	x23, [sp, #48]
    1b78:	mov	x23, x0
    1b7c:	cbz	x2, 1b90 <ctf_add_struct_sized+0x38>
    1b80:	mov	w1, #0x6                   	// #6
    1b84:	bl	0 <ctf_lookup_by_rawname>
    1b88:	mov	x19, x0
    1b8c:	cbnz	x0, 1c1c <ctf_add_struct_sized+0xc4>
    1b90:	mov	x2, x21
    1b94:	mov	x0, x23
    1b98:	add	x4, sp, #0x48
    1b9c:	mov	w1, w22
    1ba0:	mov	w3, #0x6                   	// #6
    1ba4:	bl	ef8 <ctf_add_generic>
    1ba8:	mov	x19, x0
    1bac:	cmn	x0, #0x1
    1bb0:	b.eq	1be8 <ctf_add_struct_sized+0x90>  // b.none
    1bb4:	ldr	x0, [sp, #72]
    1bb8:	cmp	w22, #0x0
    1bbc:	mov	w1, #0x1a000000            	// #436207616
    1bc0:	mov	w2, #0x18000000            	// #402653184
    1bc4:	csel	w1, w1, w2, ne  // ne = any
    1bc8:	str	w1, [x0, #28]
    1bcc:	mov	x1, #0xfffffffe            	// #4294967294
    1bd0:	cmp	x20, x1
    1bd4:	b.ls	1c00 <ctf_add_struct_sized+0xa8>  // b.plast
    1bd8:	lsr	x1, x20, #32
    1bdc:	mov	w2, #0xffffffff            	// #-1
    1be0:	stp	w2, w1, [x0, #32]
    1be4:	str	w20, [x0, #40]
    1be8:	mov	x0, x19
    1bec:	ldp	x19, x20, [sp, #16]
    1bf0:	ldp	x21, x22, [sp, #32]
    1bf4:	ldr	x23, [sp, #48]
    1bf8:	ldp	x29, x30, [sp], #80
    1bfc:	ret
    1c00:	str	w20, [x0, #32]
    1c04:	mov	x0, x19
    1c08:	ldp	x19, x20, [sp, #16]
    1c0c:	ldp	x21, x22, [sp, #32]
    1c10:	ldr	x23, [sp, #48]
    1c14:	ldp	x29, x30, [sp], #80
    1c18:	ret
    1c1c:	mov	x1, x0
    1c20:	mov	x0, x23
    1c24:	bl	0 <ctf_type_kind>
    1c28:	cmp	w0, #0x9
    1c2c:	b.ne	1b90 <ctf_add_struct_sized+0x38>  // b.any
    1c30:	ldr	x0, [x23, #568]
    1c34:	mov	x1, x19
    1c38:	bl	0 <ctf_dynhash_lookup>
    1c3c:	b	1bb8 <ctf_add_struct_sized+0x60>

0000000000001c40 <ctf_add_struct>:
    1c40:	mov	x3, #0x0                   	// #0
    1c44:	b	1b58 <ctf_add_struct_sized>

0000000000001c48 <ctf_add_union_sized>:
    1c48:	stp	x29, x30, [sp, #-80]!
    1c4c:	mov	x29, sp
    1c50:	stp	x19, x20, [sp, #16]
    1c54:	mov	x20, x3
    1c58:	stp	x21, x22, [sp, #32]
    1c5c:	mov	w22, w1
    1c60:	mov	x21, x2
    1c64:	str	x23, [sp, #48]
    1c68:	mov	x23, x0
    1c6c:	cbz	x2, 1c80 <ctf_add_union_sized+0x38>
    1c70:	mov	w1, #0x7                   	// #7
    1c74:	bl	0 <ctf_lookup_by_rawname>
    1c78:	mov	x19, x0
    1c7c:	cbnz	x0, 1d0c <ctf_add_union_sized+0xc4>
    1c80:	mov	x2, x21
    1c84:	mov	x0, x23
    1c88:	add	x4, sp, #0x48
    1c8c:	mov	w1, w22
    1c90:	mov	w3, #0x7                   	// #7
    1c94:	bl	ef8 <ctf_add_generic>
    1c98:	mov	x19, x0
    1c9c:	cmn	x0, #0x1
    1ca0:	b.eq	1cd8 <ctf_add_union_sized+0x90>  // b.none
    1ca4:	ldr	x0, [sp, #72]
    1ca8:	cmp	w22, #0x0
    1cac:	mov	w1, #0x1e000000            	// #503316480
    1cb0:	mov	w2, #0x1c000000            	// #469762048
    1cb4:	csel	w1, w1, w2, ne  // ne = any
    1cb8:	str	w1, [x0, #28]
    1cbc:	mov	x1, #0xfffffffe            	// #4294967294
    1cc0:	cmp	x20, x1
    1cc4:	b.ls	1cf0 <ctf_add_union_sized+0xa8>  // b.plast
    1cc8:	lsr	x1, x20, #32
    1ccc:	mov	w2, #0xffffffff            	// #-1
    1cd0:	stp	w2, w1, [x0, #32]
    1cd4:	str	w20, [x0, #40]
    1cd8:	mov	x0, x19
    1cdc:	ldp	x19, x20, [sp, #16]
    1ce0:	ldp	x21, x22, [sp, #32]
    1ce4:	ldr	x23, [sp, #48]
    1ce8:	ldp	x29, x30, [sp], #80
    1cec:	ret
    1cf0:	str	w20, [x0, #32]
    1cf4:	mov	x0, x19
    1cf8:	ldp	x19, x20, [sp, #16]
    1cfc:	ldp	x21, x22, [sp, #32]
    1d00:	ldr	x23, [sp, #48]
    1d04:	ldp	x29, x30, [sp], #80
    1d08:	ret
    1d0c:	mov	x1, x0
    1d10:	mov	x0, x23
    1d14:	bl	0 <ctf_type_kind>
    1d18:	cmp	w0, #0x9
    1d1c:	b.ne	1c80 <ctf_add_union_sized+0x38>  // b.any
    1d20:	ldr	x0, [x23, #568]
    1d24:	mov	x1, x19
    1d28:	bl	0 <ctf_dynhash_lookup>
    1d2c:	b	1ca8 <ctf_add_union_sized+0x60>

0000000000001d30 <ctf_add_union>:
    1d30:	mov	x3, #0x0                   	// #0
    1d34:	b	1c48 <ctf_add_union_sized>

0000000000001d38 <ctf_add_enum>:
    1d38:	stp	x29, x30, [sp, #-64]!
    1d3c:	mov	x29, sp
    1d40:	stp	x19, x20, [sp, #16]
    1d44:	mov	x20, x0
    1d48:	stp	x21, x22, [sp, #32]
    1d4c:	mov	w22, w1
    1d50:	mov	x21, x2
    1d54:	cbz	x2, 1d68 <ctf_add_enum+0x30>
    1d58:	mov	w1, #0x8                   	// #8
    1d5c:	bl	0 <ctf_lookup_by_rawname>
    1d60:	mov	x19, x0
    1d64:	cbnz	x0, 1dc4 <ctf_add_enum+0x8c>
    1d68:	mov	x2, x21
    1d6c:	add	x4, sp, #0x38
    1d70:	mov	w1, w22
    1d74:	mov	x0, x20
    1d78:	mov	w3, #0x8                   	// #8
    1d7c:	bl	ef8 <ctf_add_generic>
    1d80:	mov	x19, x0
    1d84:	cmn	x0, #0x1
    1d88:	b.eq	1db0 <ctf_add_enum+0x78>  // b.none
    1d8c:	ldr	x0, [sp, #56]
    1d90:	cmp	w22, #0x0
    1d94:	ldr	x2, [x20, #488]
    1d98:	mov	w1, #0x22000000            	// #570425344
    1d9c:	mov	w3, #0x20000000            	// #536870912
    1da0:	csel	w1, w1, w3, ne  // ne = any
    1da4:	str	w1, [x0, #28]
    1da8:	ldr	x1, [x2, #40]
    1dac:	str	w1, [x0, #32]
    1db0:	mov	x0, x19
    1db4:	ldp	x19, x20, [sp, #16]
    1db8:	ldp	x21, x22, [sp, #32]
    1dbc:	ldp	x29, x30, [sp], #64
    1dc0:	ret
    1dc4:	mov	x1, x0
    1dc8:	mov	x0, x20
    1dcc:	bl	0 <ctf_type_kind>
    1dd0:	cmp	w0, #0x9
    1dd4:	b.ne	1d68 <ctf_add_enum+0x30>  // b.any
    1dd8:	ldr	x0, [x20, #568]
    1ddc:	mov	x1, x19
    1de0:	bl	0 <ctf_dynhash_lookup>
    1de4:	b	1d90 <ctf_add_enum+0x58>

0000000000001de8 <ctf_add_enum_encoded>:
    1de8:	stp	x29, x30, [sp, #-64]!
    1dec:	mov	x29, sp
    1df0:	stp	x19, x20, [sp, #16]
    1df4:	mov	x20, x0
    1df8:	stp	x21, x22, [sp, #32]
    1dfc:	mov	w22, w1
    1e00:	mov	x21, x2
    1e04:	str	x23, [sp, #48]
    1e08:	mov	x23, x3
    1e0c:	cbz	x2, 1e20 <ctf_add_enum_encoded+0x38>
    1e10:	mov	w1, #0x8                   	// #8
    1e14:	bl	0 <ctf_lookup_by_rawname>
    1e18:	mov	x19, x0
    1e1c:	cbnz	x0, 1e60 <ctf_add_enum_encoded+0x78>
    1e20:	mov	x2, x21
    1e24:	mov	w1, w22
    1e28:	mov	x0, x20
    1e2c:	bl	1d38 <ctf_add_enum>
    1e30:	mov	x19, x0
    1e34:	cmn	x0, #0x1
    1e38:	b.eq	1ea4 <ctf_add_enum_encoded+0xbc>  // b.none
    1e3c:	mov	x3, x23
    1e40:	mov	x2, x19
    1e44:	mov	w1, w22
    1e48:	mov	x0, x20
    1e4c:	ldp	x19, x20, [sp, #16]
    1e50:	ldp	x21, x22, [sp, #32]
    1e54:	ldr	x23, [sp, #48]
    1e58:	ldp	x29, x30, [sp], #64
    1e5c:	b	1690 <ctf_add_slice>
    1e60:	mov	x1, x0
    1e64:	mov	x0, x20
    1e68:	bl	0 <ctf_type_kind>
    1e6c:	cmp	w0, #0x9
    1e70:	b.eq	1e3c <ctf_add_enum_encoded+0x54>  // b.none
    1e74:	mov	x1, x19
    1e78:	mov	x0, x20
    1e7c:	bl	0 <ctf_type_kind_unsliced>
    1e80:	cmp	w0, #0x8
    1e84:	b.eq	1e3c <ctf_add_enum_encoded+0x54>  // b.none
    1e88:	mov	x0, x20
    1e8c:	mov	w1, #0x3fe                 	// #1022
    1e90:	ldp	x19, x20, [sp, #16]
    1e94:	ldp	x21, x22, [sp, #32]
    1e98:	ldr	x23, [sp, #48]
    1e9c:	ldp	x29, x30, [sp], #64
    1ea0:	b	0 <ctf_set_errno>
    1ea4:	ldp	x19, x20, [sp, #16]
    1ea8:	ldp	x21, x22, [sp, #32]
    1eac:	ldr	x23, [sp, #48]
    1eb0:	ldp	x29, x30, [sp], #64
    1eb4:	ret

0000000000001eb8 <ctf_add_forward>:
    1eb8:	stp	x29, x30, [sp, #-64]!
    1ebc:	mov	x29, sp
    1ec0:	stp	x19, x20, [sp, #16]
    1ec4:	mov	w19, w3
    1ec8:	sub	w3, w3, #0x6
    1ecc:	cmp	w3, #0x2
    1ed0:	b.hi	1f38 <ctf_add_forward+0x80>  // b.pmore
    1ed4:	stp	x21, x22, [sp, #32]
    1ed8:	mov	x20, x2
    1edc:	mov	w21, w1
    1ee0:	mov	x22, x0
    1ee4:	cbz	x2, 1ef0 <ctf_add_forward+0x38>
    1ee8:	mov	w1, w19
    1eec:	bl	0 <ctf_lookup_by_rawname>
    1ef0:	mov	x2, x20
    1ef4:	mov	x0, x22
    1ef8:	add	x4, sp, #0x38
    1efc:	mov	w1, w21
    1f00:	mov	w3, #0x9                   	// #9
    1f04:	bl	ef8 <ctf_add_generic>
    1f08:	cmn	x0, #0x1
    1f0c:	b.eq	1f4c <ctf_add_forward+0x94>  // b.none
    1f10:	ldr	x2, [sp, #56]
    1f14:	cmp	w21, #0x0
    1f18:	mov	w1, #0x26000000            	// #637534208
    1f1c:	mov	w3, #0x24000000            	// #603979776
    1f20:	csel	w1, w1, w3, ne  // ne = any
    1f24:	ldp	x21, x22, [sp, #32]
    1f28:	stp	w1, w19, [x2, #28]
    1f2c:	ldp	x19, x20, [sp, #16]
    1f30:	ldp	x29, x30, [sp], #64
    1f34:	ret
    1f38:	mov	w1, #0x3fd                 	// #1021
    1f3c:	bl	0 <ctf_set_errno>
    1f40:	ldp	x19, x20, [sp, #16]
    1f44:	ldp	x29, x30, [sp], #64
    1f48:	ret
    1f4c:	ldp	x21, x22, [sp, #32]
    1f50:	b	1f2c <ctf_add_forward+0x74>
    1f54:	nop

0000000000001f58 <ctf_add_typedef>:
    1f58:	stp	x29, x30, [sp, #-64]!
    1f5c:	mov	x29, sp
    1f60:	stp	x21, x22, [sp, #32]
    1f64:	mov	w21, w1
    1f68:	mov	x1, #0xfffffffe            	// #4294967294
    1f6c:	str	x0, [sp, #56]
    1f70:	cmp	x3, x1
    1f74:	b.hi	1fe0 <ctf_add_typedef+0x88>  // b.pmore
    1f78:	mov	x22, x2
    1f7c:	mov	x1, x3
    1f80:	stp	x19, x20, [sp, #16]
    1f84:	mov	x20, x0
    1f88:	mov	x19, x3
    1f8c:	add	x0, sp, #0x38
    1f90:	bl	0 <ctf_lookup_by_id>
    1f94:	cbz	x0, 1ff4 <ctf_add_typedef+0x9c>
    1f98:	mov	x2, x22
    1f9c:	mov	x0, x20
    1fa0:	add	x4, sp, #0x30
    1fa4:	mov	w1, w21
    1fa8:	mov	w3, #0xa                   	// #10
    1fac:	bl	ef8 <ctf_add_generic>
    1fb0:	cmn	x0, #0x1
    1fb4:	b.eq	1ff4 <ctf_add_typedef+0x9c>  // b.none
    1fb8:	ldr	x2, [sp, #48]
    1fbc:	cmp	w21, #0x0
    1fc0:	mov	w3, #0x28000000            	// #671088640
    1fc4:	mov	w1, #0x2a000000            	// #704643072
    1fc8:	csel	w1, w1, w3, ne  // ne = any
    1fcc:	stp	w1, w19, [x2, #28]
    1fd0:	ldp	x19, x20, [sp, #16]
    1fd4:	ldp	x21, x22, [sp, #32]
    1fd8:	ldp	x29, x30, [sp], #64
    1fdc:	ret
    1fe0:	mov	w1, #0x16                  	// #22
    1fe4:	bl	0 <ctf_set_errno>
    1fe8:	ldp	x21, x22, [sp, #32]
    1fec:	ldp	x29, x30, [sp], #64
    1ff0:	ret
    1ff4:	mov	x0, #0xffffffffffffffff    	// #-1
    1ff8:	ldp	x19, x20, [sp, #16]
    1ffc:	ldp	x21, x22, [sp, #32]
    2000:	ldp	x29, x30, [sp], #64
    2004:	ret

0000000000002008 <ctf_add_type_internal>:
    2008:	sub	sp, sp, #0x130
    200c:	stp	x29, x30, [sp, #16]
    2010:	add	x29, sp, #0x10
    2014:	str	x1, [sp, #136]
    2018:	ldr	w1, [x0, #552]
    201c:	stp	x19, x20, [sp, #32]
    2020:	str	x0, [sp, #152]
    2024:	tbz	w1, #1, 2200 <ctf_add_type_internal+0x1f8>
    2028:	mov	x20, x0
    202c:	mov	x1, x2
    2030:	add	x0, sp, #0x88
    2034:	stp	x21, x22, [sp, #48]
    2038:	mov	x21, x2
    203c:	stp	x23, x24, [sp, #64]
    2040:	mov	x24, x3
    2044:	bl	0 <ctf_lookup_by_id>
    2048:	mov	x22, x0
    204c:	ldr	x0, [sp, #136]
    2050:	cbz	x22, 2408 <ctf_add_type_internal+0x400>
    2054:	mov	x1, x21
    2058:	bl	0 <ctf_type_resolve>
    205c:	cmn	x0, #0x1
    2060:	b.eq	2220 <ctf_add_type_internal+0x218>  // b.none
    2064:	ldr	w1, [x22]
    2068:	ldr	x0, [sp, #136]
    206c:	stp	x25, x26, [sp, #80]
    2070:	stp	x27, x28, [sp, #96]
    2074:	bl	0 <ctf_strptr>
    2078:	ldr	x1, [sp, #136]
    207c:	mov	x25, x0
    2080:	ldr	w0, [x22, #4]
    2084:	ldr	x1, [x1]
    2088:	ldr	x1, [x1]
    208c:	blr	x1
    2090:	mov	w27, w0
    2094:	ldr	x1, [sp, #136]
    2098:	ldr	w0, [x22, #4]
    209c:	ldr	x1, [x1]
    20a0:	ldr	x1, [x1, #8]
    20a4:	blr	x1
    20a8:	mov	w23, w0
    20ac:	ldr	x1, [sp, #136]
    20b0:	ldr	w0, [x22, #4]
    20b4:	ldr	x1, [x1]
    20b8:	ldr	x1, [x1, #16]
    20bc:	blr	x1
    20c0:	mov	w26, w0
    20c4:	ldr	x0, [sp, #136]
    20c8:	add	x2, sp, #0x98
    20cc:	mov	x1, x21
    20d0:	bl	0 <ctf_type_mapping>
    20d4:	mov	x19, x0
    20d8:	cbnz	x0, 225c <ctf_add_type_internal+0x254>
    20dc:	str	w27, [sp, #124]
    20e0:	cmp	w27, #0x9
    20e4:	b.eq	2290 <ctf_add_type_internal+0x288>  // b.none
    20e8:	tbz	w23, #0, 2110 <ctf_add_type_internal+0x108>
    20ec:	ldrb	w0, [x25]
    20f0:	cbz	w0, 2110 <ctf_add_type_internal+0x108>
    20f4:	ldr	w1, [sp, #124]
    20f8:	mov	x2, x25
    20fc:	mov	x0, x20
    2100:	bl	0 <ctf_lookup_by_rawname>
    2104:	mov	x19, x0
    2108:	cbnz	x0, 22a0 <ctf_add_type_internal+0x298>
    210c:	nop
    2110:	mov	w28, #0x0                   	// #0
    2114:	mov	x19, #0xffffffffffffffff    	// #-1
    2118:	str	wzr, [sp, #120]
    211c:	sub	w0, w27, #0x1
    2120:	cmp	w0, #0x1
    2124:	ccmp	w27, #0xe, #0x4, hi  // hi = pmore
    2128:	ldr	x3, [sp, #136]
    212c:	b.ne	2150 <ctf_add_type_internal+0x148>  // b.any
    2130:	mov	x0, x3
    2134:	add	x2, sp, #0xa0
    2138:	mov	x1, x21
    213c:	bl	0 <ctf_type_encoding>
    2140:	cbnz	w0, 251c <ctf_add_type_internal+0x514>
    2144:	cmn	x19, #0x1
    2148:	b.ne	2438 <ctf_add_type_internal+0x430>  // b.any
    214c:	ldr	x3, [sp, #136]
    2150:	mov	x1, x21
    2154:	ldr	x0, [x24, #696]
    2158:	mov	x2, #0x1                   	// #1
    215c:	stp	x3, x21, [sp, #208]
    2160:	stp	xzr, x20, [sp, #224]
    2164:	stp	x19, xzr, [sp, #240]
    2168:	bl	0 <ctf_dynhash_insert>
    216c:	tbnz	w0, #31, 249c <ctf_add_type_internal+0x494>
    2170:	cmp	w27, #0x7
    2174:	b.hi	23a8 <ctf_add_type_internal+0x3a0>  // b.pmore
    2178:	cmp	w27, #0x5
    217c:	b.hi	25cc <ctf_add_type_internal+0x5c4>  // b.pmore
    2180:	cmp	w27, #0x3
    2184:	b.eq	2588 <ctf_add_type_internal+0x580>  // b.none
    2188:	b.ls	2338 <ctf_add_type_internal+0x330>  // b.plast
    218c:	cmp	w27, #0x4
    2190:	b.eq	2714 <ctf_add_type_internal+0x70c>  // b.none
    2194:	ldr	w2, [x22, #8]
    2198:	mov	x3, x24
    219c:	ldr	x1, [sp, #136]
    21a0:	mov	x0, x20
    21a4:	bl	2008 <ctf_add_type_internal>
    21a8:	stp	x0, xzr, [sp, #192]
    21ac:	cmn	x0, #0x1
    21b0:	b.eq	21d8 <ctf_add_type_internal+0x1d0>  // b.none
    21b4:	mov	w1, w23
    21b8:	add	x2, sp, #0xc0
    21bc:	mov	x0, x20
    21c0:	mov	x3, #0x0                   	// #0
    21c4:	bl	1980 <ctf_add_function>
    21c8:	mov	x19, x0
    21cc:	nop
    21d0:	cmn	x19, #0x1
    21d4:	b.ne	2380 <ctf_add_type_internal+0x378>  // b.any
    21d8:	mov	x19, #0xffffffffffffffff    	// #-1
    21dc:	mov	x0, x19
    21e0:	ldp	x29, x30, [sp, #16]
    21e4:	ldp	x19, x20, [sp, #32]
    21e8:	ldp	x21, x22, [sp, #48]
    21ec:	ldp	x23, x24, [sp, #64]
    21f0:	ldp	x25, x26, [sp, #80]
    21f4:	ldp	x27, x28, [sp, #96]
    21f8:	add	sp, sp, #0x130
    21fc:	ret
    2200:	mov	w1, #0x40d                 	// #1037
    2204:	bl	0 <ctf_set_errno>
    2208:	mov	x19, x0
    220c:	mov	x0, x19
    2210:	ldp	x29, x30, [sp, #16]
    2214:	ldp	x19, x20, [sp, #32]
    2218:	add	sp, sp, #0x130
    221c:	ret
    2220:	ldr	x0, [sp, #136]
    2224:	bl	0 <ctf_errno>
    2228:	cmp	w0, #0x41b
    222c:	b.ne	2064 <ctf_add_type_internal+0x5c>  // b.any
    2230:	mov	w1, w0
    2234:	mov	x0, x20
    2238:	bl	0 <ctf_set_errno>
    223c:	mov	x19, x0
    2240:	ldp	x21, x22, [sp, #48]
    2244:	ldp	x23, x24, [sp, #64]
    2248:	mov	x0, x19
    224c:	ldp	x29, x30, [sp, #16]
    2250:	ldp	x19, x20, [sp, #32]
    2254:	add	sp, sp, #0x130
    2258:	ret
    225c:	ldr	x0, [x24, #696]
    2260:	mov	x1, x21
    2264:	bl	0 <ctf_dynhash_lookup>
    2268:	cbz	x0, 24c4 <ctf_add_type_internal+0x4bc>
    226c:	mov	x0, x19
    2270:	ldp	x29, x30, [sp, #16]
    2274:	ldp	x19, x20, [sp, #32]
    2278:	ldp	x21, x22, [sp, #48]
    227c:	ldp	x23, x24, [sp, #64]
    2280:	ldp	x25, x26, [sp, #80]
    2284:	ldp	x27, x28, [sp, #96]
    2288:	add	sp, sp, #0x130
    228c:	ret
    2290:	ldr	w0, [x22, #8]
    2294:	str	w0, [sp, #124]
    2298:	tbz	w23, #0, 2110 <ctf_add_type_internal+0x108>
    229c:	b	20ec <ctf_add_type_internal+0xe4>
    22a0:	mov	x1, x0
    22a4:	mov	x0, x20
    22a8:	bl	0 <ctf_type_kind_unsliced>
    22ac:	mov	w28, w0
    22b0:	cmn	x19, #0x1
    22b4:	cset	w0, ne  // ne = any
    22b8:	cmp	w27, w28
    22bc:	csel	w1, w0, wzr, ne  // ne = any
    22c0:	str	w1, [sp, #120]
    22c4:	cbz	w1, 29a0 <ctf_add_type_internal+0x998>
    22c8:	cmp	w27, #0x9
    22cc:	b.eq	2428 <ctf_add_type_internal+0x420>  // b.none
    22d0:	cmp	w28, #0x9
    22d4:	b.ne	22e8 <ctf_add_type_internal+0x2e0>  // b.any
    22d8:	sub	w0, w27, #0x6
    22dc:	cmp	w0, #0x2
    22e0:	b.ls	211c <ctf_add_type_internal+0x114>  // b.plast
    22e4:	nop
    22e8:	mov	x1, x25
    22ec:	mov	w4, w28
    22f0:	mov	x3, x19
    22f4:	mov	w2, w27
    22f8:	adrp	x0, 0 <ctf_sort_var>
    22fc:	add	x0, x0, #0x0
    2300:	bl	0 <ctf_dprintf>
    2304:	mov	x0, x20
    2308:	mov	w1, #0x411                 	// #1041
    230c:	bl	0 <ctf_set_errno>
    2310:	mov	x19, x0
    2314:	mov	x0, x19
    2318:	ldp	x29, x30, [sp, #16]
    231c:	ldp	x19, x20, [sp, #32]
    2320:	ldp	x21, x22, [sp, #48]
    2324:	ldp	x23, x24, [sp, #64]
    2328:	ldp	x25, x26, [sp, #80]
    232c:	ldp	x27, x28, [sp, #96]
    2330:	add	sp, sp, #0x130
    2334:	ret
    2338:	cmp	w27, #0x1
    233c:	b.eq	2348 <ctf_add_type_internal+0x340>  // b.none
    2340:	cmp	w27, #0x2
    2344:	b.ne	257c <ctf_add_type_internal+0x574>  // b.any
    2348:	mov	w4, w27
    234c:	mov	x2, x25
    2350:	mov	w1, w23
    2354:	add	x3, sp, #0xa0
    2358:	mov	x0, x20
    235c:	bl	1078 <ctf_add_encoded>
    2360:	mov	x19, x0
    2364:	b	21d0 <ctf_add_type_internal+0x1c8>
    2368:	cmp	w27, #0x8
    236c:	b.eq	26c4 <ctf_add_type_internal+0x6bc>  // b.none
    2370:	cmp	w27, #0x9
    2374:	b.ne	257c <ctf_add_type_internal+0x574>  // b.any
    2378:	cmn	x19, #0x1
    237c:	b.eq	24a8 <ctf_add_type_internal+0x4a0>  // b.none
    2380:	ldr	x0, [sp, #136]
    2384:	mov	x2, x20
    2388:	mov	x1, x21
    238c:	mov	x3, x19
    2390:	bl	0 <ctf_add_type_mapping>
    2394:	ldp	x21, x22, [sp, #48]
    2398:	ldp	x23, x24, [sp, #64]
    239c:	ldp	x25, x26, [sp, #80]
    23a0:	ldp	x27, x28, [sp, #96]
    23a4:	b	220c <ctf_add_type_internal+0x204>
    23a8:	cmp	w27, #0xa
    23ac:	b.eq	2530 <ctf_add_type_internal+0x528>  // b.none
    23b0:	b.ls	2368 <ctf_add_type_internal+0x360>  // b.plast
    23b4:	cmp	w27, #0xd
    23b8:	b.ls	2588 <ctf_add_type_internal+0x580>  // b.plast
    23bc:	cmp	w27, #0xe
    23c0:	b.ne	257c <ctf_add_type_internal+0x574>  // b.any
    23c4:	ldr	x0, [sp, #136]
    23c8:	mov	x1, x21
    23cc:	bl	0 <ctf_type_reference>
    23d0:	mov	x2, x0
    23d4:	ldr	x1, [sp, #136]
    23d8:	mov	x3, x24
    23dc:	mov	x0, x20
    23e0:	bl	2008 <ctf_add_type_internal>
    23e4:	mov	x2, x0
    23e8:	cmn	x0, #0x1
    23ec:	b.eq	21d8 <ctf_add_type_internal+0x1d0>  // b.none
    23f0:	mov	w1, w23
    23f4:	add	x3, sp, #0xa0
    23f8:	mov	x0, x20
    23fc:	bl	1690 <ctf_add_slice>
    2400:	mov	x19, x0
    2404:	b	21d0 <ctf_add_type_internal+0x1c8>
    2408:	bl	0 <ctf_errno>
    240c:	mov	w1, w0
    2410:	mov	x0, x20
    2414:	bl	0 <ctf_set_errno>
    2418:	mov	x19, x0
    241c:	ldp	x21, x22, [sp, #48]
    2420:	ldp	x23, x24, [sp, #64]
    2424:	b	2248 <ctf_add_type_internal+0x240>
    2428:	sub	w0, w28, #0x6
    242c:	cmp	w0, #0x2
    2430:	b.hi	22e8 <ctf_add_type_internal+0x2e0>  // b.pmore
    2434:	b	2380 <ctf_add_type_internal+0x378>
    2438:	mov	x1, x19
    243c:	add	x0, sp, #0x118
    2440:	str	x20, [sp, #280]
    2444:	bl	0 <ctf_lookup_by_id>
    2448:	str	x0, [sp, #128]
    244c:	cbz	x0, 21d8 <ctf_add_type_internal+0x1d0>
    2450:	mov	x1, x19
    2454:	add	x2, sp, #0xb0
    2458:	mov	x0, x20
    245c:	bl	0 <ctf_type_encoding>
    2460:	cbnz	w0, 21d8 <ctf_add_type_internal+0x1d0>
    2464:	ldr	x1, [sp, #280]
    2468:	ldr	x3, [sp, #128]
    246c:	ldr	x1, [x1]
    2470:	ldr	w0, [x3, #4]
    2474:	ldr	x1, [x1, #8]
    2478:	blr	x1
    247c:	ldr	x1, [sp, #160]
    2480:	tbz	w0, #0, 27d0 <ctf_add_type_internal+0x7c8>
    2484:	ldr	x0, [sp, #176]
    2488:	cmp	x1, x0
    248c:	b.eq	2904 <ctf_add_type_internal+0x8fc>  // b.none
    2490:	mov	x0, x20
    2494:	mov	w1, #0x411                 	// #1041
    2498:	b	230c <ctf_add_type_internal+0x304>
    249c:	mov	x0, x20
    24a0:	mov	w1, #0xc                   	// #12
    24a4:	b	230c <ctf_add_type_internal+0x304>
    24a8:	ldr	w3, [sp, #124]
    24ac:	mov	x2, x25
    24b0:	mov	w1, w23
    24b4:	mov	x0, x20
    24b8:	bl	1eb8 <ctf_add_forward>
    24bc:	mov	x19, x0
    24c0:	b	21d0 <ctf_add_type_internal+0x1c8>
    24c4:	ldr	x0, [sp, #152]
    24c8:	mov	x1, x19
    24cc:	bl	0 <ctf_type_kind_unsliced>
    24d0:	cmp	w0, w27
    24d4:	b.ne	20dc <ctf_add_type_internal+0xd4>  // b.any
    24d8:	sub	w0, w27, #0x6
    24dc:	cmp	w0, #0x2
    24e0:	b.hi	20dc <ctf_add_type_internal+0xd4>  // b.pmore
    24e4:	add	x0, sp, #0x98
    24e8:	mov	x1, #0xffffffffffffffff    	// #-1
    24ec:	bl	0 <ctf_lookup_by_id>
    24f0:	cbz	x0, 2510 <ctf_add_type_internal+0x508>
    24f4:	ldr	x1, [sp, #152]
    24f8:	ldr	w0, [x0, #4]
    24fc:	ldr	x1, [x1]
    2500:	ldr	x1, [x1, #16]
    2504:	blr	x1
    2508:	cmp	w0, w26
    250c:	b.eq	226c <ctf_add_type_internal+0x264>  // b.none
    2510:	str	w27, [sp, #124]
    2514:	tbz	w23, #0, 2110 <ctf_add_type_internal+0x108>
    2518:	b	20ec <ctf_add_type_internal+0xe4>
    251c:	ldr	x0, [sp, #136]
    2520:	bl	0 <ctf_errno>
    2524:	mov	w1, w0
    2528:	mov	x0, x20
    252c:	b	230c <ctf_add_type_internal+0x304>
    2530:	ldr	x0, [sp, #136]
    2534:	mov	x1, x21
    2538:	bl	0 <ctf_type_reference>
    253c:	mov	x2, x0
    2540:	ldr	x1, [sp, #136]
    2544:	mov	x3, x24
    2548:	mov	x0, x20
    254c:	bl	2008 <ctf_add_type_internal>
    2550:	cmn	x0, #0x1
    2554:	b.eq	21d8 <ctf_add_type_internal+0x1d0>  // b.none
    2558:	cmn	x19, #0x1
    255c:	b.ne	2380 <ctf_add_type_internal+0x378>  // b.any
    2560:	mov	x3, x0
    2564:	mov	x2, x25
    2568:	mov	w1, w23
    256c:	mov	x0, x20
    2570:	bl	1f58 <ctf_add_typedef>
    2574:	mov	x19, x0
    2578:	b	21d0 <ctf_add_type_internal+0x1c8>
    257c:	mov	x0, x20
    2580:	mov	w1, #0x3ef                 	// #1007
    2584:	b	230c <ctf_add_type_internal+0x304>
    2588:	ldr	x0, [sp, #136]
    258c:	mov	x1, x21
    2590:	bl	0 <ctf_type_reference>
    2594:	mov	x2, x0
    2598:	ldr	x1, [sp, #136]
    259c:	mov	x3, x24
    25a0:	mov	x0, x20
    25a4:	bl	2008 <ctf_add_type_internal>
    25a8:	mov	x2, x0
    25ac:	cmn	x0, #0x1
    25b0:	b.eq	21d8 <ctf_add_type_internal+0x1d0>  // b.none
    25b4:	mov	w3, w27
    25b8:	mov	w1, w23
    25bc:	mov	x0, x20
    25c0:	bl	1138 <ctf_add_reftype>
    25c4:	mov	x19, x0
    25c8:	b	21d0 <ctf_add_type_internal+0x1c8>
    25cc:	ldr	w0, [sp, #120]
    25d0:	cmp	w0, #0x0
    25d4:	ccmp	w28, #0x9, #0x4, ne  // ne = any
    25d8:	b.ne	284c <ctf_add_type_internal+0x844>  // b.any
    25dc:	mov	x2, x25
    25e0:	add	x4, sp, #0x100
    25e4:	mov	w3, w27
    25e8:	mov	w1, w23
    25ec:	mov	x0, x20
    25f0:	bl	ef8 <ctf_add_generic>
    25f4:	mov	x19, x0
    25f8:	cmn	x0, #0x1
    25fc:	b.eq	21d8 <ctf_add_type_internal+0x1d0>  // b.none
    2600:	mov	x3, x0
    2604:	mov	x2, x20
    2608:	ldr	x0, [sp, #136]
    260c:	mov	x1, x21
    2610:	ldr	x4, [sp, #256]
    2614:	stp	x19, x4, [sp, #240]
    2618:	bl	0 <ctf_add_type_mapping>
    261c:	ldr	x0, [sp, #136]
    2620:	mov	x1, x21
    2624:	add	x3, sp, #0xe8
    2628:	adrp	x2, 0 <ctf_sort_var>
    262c:	add	x2, x2, #0x0
    2630:	bl	0 <ctf_member_iter>
    2634:	mov	w25, w0
    2638:	ldr	x0, [sp, #136]
    263c:	mov	x1, x21
    2640:	bl	0 <ctf_type_size>
    2644:	tbnz	x0, #63, 21d8 <ctf_add_type_internal+0x1d0>
    2648:	mov	x1, #0xfffffffe            	// #4294967294
    264c:	cmp	x0, x1
    2650:	ldr	x1, [sp, #256]
    2654:	b.le	2974 <ctf_add_type_internal+0x96c>
    2658:	lsr	x2, x0, #32
    265c:	mov	w3, #0xffffffff            	// #-1
    2660:	stp	w3, w2, [x1, #32]
    2664:	str	w0, [x1, #40]
    2668:	cmp	w23, #0x0
    266c:	and	w0, w26, #0xffffff
    2670:	ldr	x22, [x1, #56]
    2674:	orr	w0, w0, w27, lsl #26
    2678:	mov	w2, #0x2000000             	// #33554432
    267c:	csel	w23, w23, w2, eq  // eq = none
    2680:	orr	w23, w0, w23
    2684:	str	w23, [x1, #28]
    2688:	cmp	w25, #0x0
    268c:	cset	w25, ne  // ne = any
    2690:	cbz	x22, 26bc <ctf_add_type_internal+0x6b4>
    2694:	add	x23, sp, #0x118
    2698:	ldr	x1, [x22, #24]
    269c:	mov	x2, x23
    26a0:	ldr	x0, [sp, #136]
    26a4:	str	x20, [sp, #280]
    26a8:	bl	0 <ctf_type_mapping>
    26ac:	cbz	x0, 2818 <ctf_add_type_internal+0x810>
    26b0:	str	x0, [x22, #24]
    26b4:	ldr	x22, [x22, #8]
    26b8:	cbnz	x22, 2698 <ctf_add_type_internal+0x690>
    26bc:	cbz	w25, 2380 <ctf_add_type_internal+0x378>
    26c0:	b	21d8 <ctf_add_type_internal+0x1d0>
    26c4:	ldr	w0, [sp, #120]
    26c8:	cmp	w0, #0x0
    26cc:	ccmp	w28, #0x9, #0x4, ne  // ne = any
    26d0:	b.ne	28b4 <ctf_add_type_internal+0x8ac>  // b.any
    26d4:	mov	x2, x25
    26d8:	mov	w1, w23
    26dc:	mov	x0, x20
    26e0:	bl	1d38 <ctf_add_enum>
    26e4:	str	x0, [sp, #240]
    26e8:	mov	x19, x0
    26ec:	cmn	x0, #0x1
    26f0:	b.eq	21d8 <ctf_add_type_internal+0x1d0>  // b.none
    26f4:	ldr	x0, [sp, #136]
    26f8:	adrp	x2, 0 <ctf_sort_var>
    26fc:	add	x3, sp, #0xe8
    2700:	add	x2, x2, #0x0
    2704:	mov	x1, x21
    2708:	bl	0 <ctf_enum_iter>
    270c:	cbz	w0, 2380 <ctf_add_type_internal+0x378>
    2710:	b	21d8 <ctf_add_type_internal+0x1d0>
    2714:	ldr	x0, [sp, #136]
    2718:	add	x2, sp, #0x100
    271c:	mov	x1, x21
    2720:	bl	0 <ctf_array_info>
    2724:	cbnz	w0, 251c <ctf_add_type_internal+0x514>
    2728:	ldr	x1, [sp, #136]
    272c:	mov	x3, x24
    2730:	ldr	x2, [sp, #256]
    2734:	mov	x0, x20
    2738:	bl	2008 <ctf_add_type_internal>
    273c:	mov	x4, x0
    2740:	ldr	x1, [sp, #136]
    2744:	mov	x3, x24
    2748:	ldr	x2, [sp, #264]
    274c:	mov	x0, x20
    2750:	str	x4, [sp, #256]
    2754:	bl	2008 <ctf_add_type_internal>
    2758:	str	x0, [sp, #264]
    275c:	ldr	x1, [sp, #256]
    2760:	cmn	x1, #0x1
    2764:	ccmn	x0, #0x1, #0x4, ne  // ne = any
    2768:	b.eq	21d8 <ctf_add_type_internal+0x1d0>  // b.none
    276c:	cmn	x19, #0x1
    2770:	b.eq	2924 <ctf_add_type_internal+0x91c>  // b.none
    2774:	add	x23, sp, #0x118
    2778:	mov	x1, x19
    277c:	mov	x2, x23
    2780:	mov	x0, x20
    2784:	bl	0 <ctf_array_info>
    2788:	cbnz	w0, 21d8 <ctf_add_type_internal+0x1d0>
    278c:	ldr	x1, [sp, #256]
    2790:	ldr	x0, [sp, #280]
    2794:	cmp	x1, x0
    2798:	b.eq	297c <ctf_add_type_internal+0x974>  // b.none
    279c:	ldp	x3, x4, [sp, #256]
    27a0:	mov	x1, x25
    27a4:	ldp	x6, x7, [sp, #280]
    27a8:	mov	x2, x19
    27ac:	ldr	w8, [sp, #296]
    27b0:	adrp	x0, 0 <ctf_sort_var>
    27b4:	ldr	w5, [sp, #272]
    27b8:	add	x0, x0, #0x0
    27bc:	str	w8, [sp]
    27c0:	bl	0 <ctf_dprintf>
    27c4:	mov	x0, x20
    27c8:	mov	w1, #0x411                 	// #1041
    27cc:	b	230c <ctf_add_type_internal+0x304>
    27d0:	ldr	x0, [sp, #176]
    27d4:	cmp	x1, x0
    27d8:	b.eq	2800 <ctf_add_type_internal+0x7f8>  // b.none
    27dc:	mov	w0, #0x1                   	// #1
    27e0:	cmp	w0, #0x0
    27e4:	ccmp	w27, #0xe, #0x4, eq  // eq = none
    27e8:	ldr	x3, [sp, #136]
    27ec:	b.eq	2150 <ctf_add_type_internal+0x148>  // b.none
    27f0:	mov	x2, x20
    27f4:	mov	x1, x21
    27f8:	mov	x0, x3
    27fc:	b	238c <ctf_add_type_internal+0x384>
    2800:	ldr	w1, [sp, #168]
    2804:	ldr	w0, [sp, #184]
    2808:	cmp	w1, w0
    280c:	b.ne	27dc <ctf_add_type_internal+0x7d4>  // b.any
    2810:	mov	w0, #0x0                   	// #0
    2814:	b	27e0 <ctf_add_type_internal+0x7d8>
    2818:	ldr	x2, [x22, #24]
    281c:	mov	x3, x24
    2820:	ldr	x1, [sp, #136]
    2824:	mov	x0, x20
    2828:	bl	2008 <ctf_add_type_internal>
    282c:	str	x0, [x22, #24]
    2830:	cmn	x0, #0x1
    2834:	b.ne	26b4 <ctf_add_type_internal+0x6ac>  // b.any
    2838:	mov	x0, x20
    283c:	bl	0 <ctf_errno>
    2840:	cmp	w0, #0x41b
    2844:	cinc	w25, w25, ne  // ne = any
    2848:	b	26b4 <ctf_add_type_internal+0x6ac>
    284c:	ldr	x0, [sp, #136]
    2850:	mov	x1, x21
    2854:	bl	0 <ctf_type_size>
    2858:	mov	x22, x0
    285c:	mov	x1, x19
    2860:	mov	x0, x20
    2864:	bl	0 <ctf_type_size>
    2868:	cmp	x22, x0
    286c:	ldr	x0, [sp, #136]
    2870:	b.eq	293c <ctf_add_type_internal+0x934>  // b.none
    2874:	mov	x1, x21
    2878:	bl	0 <ctf_type_size>
    287c:	mov	x1, x19
    2880:	mov	x21, x0
    2884:	mov	x0, x20
    2888:	bl	0 <ctf_type_size>
    288c:	mov	x1, x25
    2890:	mov	x4, x0
    2894:	mov	x3, x21
    2898:	mov	x2, x19
    289c:	adrp	x0, 0 <ctf_sort_var>
    28a0:	add	x0, x0, #0x0
    28a4:	bl	0 <ctf_dprintf>
    28a8:	mov	x0, x20
    28ac:	mov	w1, #0x411                 	// #1041
    28b0:	b	230c <ctf_add_type_internal+0x304>
    28b4:	ldr	x0, [sp, #136]
    28b8:	adrp	x22, 0 <ctf_sort_var>
    28bc:	add	x22, x22, #0x0
    28c0:	add	x3, sp, #0xe8
    28c4:	mov	x2, x22
    28c8:	mov	x1, x21
    28cc:	bl	0 <ctf_enum_iter>
    28d0:	cbnz	w0, 28ec <ctf_add_type_internal+0x8e4>
    28d4:	mov	x2, x22
    28d8:	add	x3, sp, #0xd0
    28dc:	mov	x1, x19
    28e0:	mov	x0, x20
    28e4:	bl	0 <ctf_enum_iter>
    28e8:	cbz	w0, 2380 <ctf_add_type_internal+0x378>
    28ec:	mov	x2, x19
    28f0:	mov	x1, x25
    28f4:	adrp	x0, 0 <ctf_sort_var>
    28f8:	add	x0, x0, #0x0
    28fc:	bl	0 <ctf_dprintf>
    2900:	b	2490 <ctf_add_type_internal+0x488>
    2904:	ldr	w1, [sp, #168]
    2908:	ldr	w0, [sp, #184]
    290c:	cmp	w1, w0
    2910:	b.ne	2490 <ctf_add_type_internal+0x488>  // b.any
    2914:	cmp	w27, #0xe
    2918:	ldr	x3, [sp, #136]
    291c:	b.eq	2150 <ctf_add_type_internal+0x148>  // b.none
    2920:	b	27f0 <ctf_add_type_internal+0x7e8>
    2924:	add	x2, sp, #0x100
    2928:	mov	w1, w23
    292c:	mov	x0, x20
    2930:	bl	1800 <ctf_add_array>
    2934:	mov	x19, x0
    2938:	b	21d0 <ctf_add_type_internal+0x1c8>
    293c:	adrp	x2, 0 <ctf_sort_var>
    2940:	add	x3, sp, #0xe8
    2944:	add	x2, x2, #0x0
    2948:	mov	x1, x21
    294c:	bl	0 <ctf_member_iter>
    2950:	cbz	w0, 2380 <ctf_add_type_internal+0x378>
    2954:	mov	x1, x25
    2958:	mov	x2, x19
    295c:	adrp	x0, 0 <ctf_sort_var>
    2960:	add	x0, x0, #0x0
    2964:	bl	0 <ctf_dprintf>
    2968:	mov	x0, x20
    296c:	mov	w1, #0x411                 	// #1041
    2970:	b	230c <ctf_add_type_internal+0x304>
    2974:	str	w0, [x1, #32]
    2978:	b	2668 <ctf_add_type_internal+0x660>
    297c:	ldr	x1, [sp, #264]
    2980:	ldr	x0, [sp, #288]
    2984:	cmp	x1, x0
    2988:	b.ne	279c <ctf_add_type_internal+0x794>  // b.any
    298c:	ldr	x0, [x23, #16]
    2990:	ldr	x1, [sp, #272]
    2994:	cmp	x1, x0
    2998:	b.ne	279c <ctf_add_type_internal+0x794>  // b.any
    299c:	b	2380 <ctf_add_type_internal+0x378>
    29a0:	str	w0, [sp, #120]
    29a4:	b	211c <ctf_add_type_internal+0x114>

00000000000029a8 <ctf_add_volatile>:
    29a8:	mov	w3, #0xb                   	// #11
    29ac:	b	1138 <ctf_add_reftype>

00000000000029b0 <ctf_add_const>:
    29b0:	mov	w3, #0xc                   	// #12
    29b4:	b	1138 <ctf_add_reftype>

00000000000029b8 <ctf_add_restrict>:
    29b8:	mov	w3, #0xd                   	// #13
    29bc:	b	1138 <ctf_add_reftype>

00000000000029c0 <ctf_add_enumerator>:
    29c0:	stp	x29, x30, [sp, #-80]!
    29c4:	mov	x29, sp
    29c8:	stp	x19, x20, [sp, #16]
    29cc:	mov	x20, x0
    29d0:	ldr	x0, [x0, #568]
    29d4:	stp	x21, x22, [sp, #32]
    29d8:	mov	x21, x2
    29dc:	stp	x23, x24, [sp, #48]
    29e0:	mov	w23, w3
    29e4:	bl	0 <ctf_dynhash_lookup>
    29e8:	cbz	x21, 2b5c <ctf_add_enumerator+0x19c>
    29ec:	mov	x22, x0
    29f0:	ldr	w0, [x20, #552]
    29f4:	tbz	w0, #1, 2b3c <ctf_add_enumerator+0x17c>
    29f8:	cbz	x22, 2b6c <ctf_add_enumerator+0x1ac>
    29fc:	ldr	x1, [x20]
    2a00:	ldr	w0, [x22, #28]
    2a04:	ldr	x1, [x1]
    2a08:	str	x25, [sp, #64]
    2a0c:	blr	x1
    2a10:	mov	w19, w0
    2a14:	ldr	x1, [x20]
    2a18:	ldr	w0, [x22, #28]
    2a1c:	ldr	x1, [x1, #8]
    2a20:	blr	x1
    2a24:	mov	w24, w0
    2a28:	ldr	x1, [x20]
    2a2c:	ldr	w0, [x22, #28]
    2a30:	ldr	x1, [x1, #16]
    2a34:	blr	x1
    2a38:	mov	w25, w0
    2a3c:	cmp	w19, #0x8
    2a40:	b.ne	2a98 <ctf_add_enumerator+0xd8>  // b.any
    2a44:	mov	w0, #0xffffff              	// #16777215
    2a48:	cmp	w25, w0
    2a4c:	b.eq	2b7c <ctf_add_enumerator+0x1bc>  // b.none
    2a50:	ldr	x19, [x22, #56]
    2a54:	cbnz	x19, 2a64 <ctf_add_enumerator+0xa4>
    2a58:	b	2abc <ctf_add_enumerator+0xfc>
    2a5c:	ldr	x19, [x19, #8]
    2a60:	cbz	x19, 2abc <ctf_add_enumerator+0xfc>
    2a64:	ldr	x0, [x19, #16]
    2a68:	mov	x1, x21
    2a6c:	bl	0 <strcmp>
    2a70:	cbnz	w0, 2a5c <ctf_add_enumerator+0x9c>
    2a74:	mov	x0, x20
    2a78:	mov	w1, #0x410                 	// #1040
    2a7c:	bl	0 <ctf_set_errno>
    2a80:	ldp	x19, x20, [sp, #16]
    2a84:	ldp	x21, x22, [sp, #32]
    2a88:	ldp	x23, x24, [sp, #48]
    2a8c:	ldr	x25, [sp, #64]
    2a90:	ldp	x29, x30, [sp], #80
    2a94:	ret
    2a98:	mov	x0, x20
    2a9c:	mov	w1, #0x3fc                 	// #1020
    2aa0:	bl	0 <ctf_set_errno>
    2aa4:	ldr	x25, [sp, #64]
    2aa8:	ldp	x19, x20, [sp, #16]
    2aac:	ldp	x21, x22, [sp, #32]
    2ab0:	ldp	x23, x24, [sp, #48]
    2ab4:	ldp	x29, x30, [sp], #80
    2ab8:	ret
    2abc:	mov	x0, #0x30                  	// #48
    2ac0:	bl	0 <malloc>
    2ac4:	mov	x19, x0
    2ac8:	cbz	x0, 2b98 <ctf_add_enumerator+0x1d8>
    2acc:	mov	x0, x21
    2ad0:	bl	0 <strdup>
    2ad4:	cbz	x0, 2b90 <ctf_add_enumerator+0x1d0>
    2ad8:	cmp	w24, #0x0
    2adc:	add	w2, w25, #0x1
    2ae0:	mov	w1, #0x2000000             	// #33554432
    2ae4:	and	w2, w2, #0xffffff
    2ae8:	csel	w24, w24, w1, eq  // eq = none
    2aec:	mov	x1, #0xffffffffffffffff    	// #-1
    2af0:	orr	w2, w2, w24
    2af4:	stp	x0, x1, [x19, #16]
    2af8:	orr	w2, w2, #0x20000000
    2afc:	str	xzr, [x19, #32]
    2b00:	mov	x1, x19
    2b04:	str	w23, [x19, #40]
    2b08:	add	x0, x22, #0x30
    2b0c:	str	w2, [x22, #28]
    2b10:	bl	0 <ctf_list_append>
    2b14:	ldr	w1, [x20, #552]
    2b18:	mov	w0, #0x0                   	// #0
    2b1c:	ldr	x25, [sp, #64]
    2b20:	orr	w1, w1, #0x4
    2b24:	str	w1, [x20, #552]
    2b28:	ldp	x19, x20, [sp, #16]
    2b2c:	ldp	x21, x22, [sp, #32]
    2b30:	ldp	x23, x24, [sp, #48]
    2b34:	ldp	x29, x30, [sp], #80
    2b38:	ret
    2b3c:	mov	x0, x20
    2b40:	mov	w1, #0x40d                 	// #1037
    2b44:	bl	0 <ctf_set_errno>
    2b48:	ldp	x19, x20, [sp, #16]
    2b4c:	ldp	x21, x22, [sp, #32]
    2b50:	ldp	x23, x24, [sp, #48]
    2b54:	ldp	x29, x30, [sp], #80
    2b58:	ret
    2b5c:	mov	x0, x20
    2b60:	mov	w1, #0x16                  	// #22
    2b64:	bl	0 <ctf_set_errno>
    2b68:	b	2aa8 <ctf_add_enumerator+0xe8>
    2b6c:	mov	x0, x20
    2b70:	mov	w1, #0x3fa                 	// #1018
    2b74:	bl	0 <ctf_set_errno>
    2b78:	b	2aa8 <ctf_add_enumerator+0xe8>
    2b7c:	mov	x0, x20
    2b80:	mov	w1, #0x40e                 	// #1038
    2b84:	bl	0 <ctf_set_errno>
    2b88:	ldr	x25, [sp, #64]
    2b8c:	b	2aa8 <ctf_add_enumerator+0xe8>
    2b90:	mov	x0, x19
    2b94:	bl	0 <free>
    2b98:	mov	x0, x20
    2b9c:	mov	w1, #0xb                   	// #11
    2ba0:	bl	0 <ctf_set_errno>
    2ba4:	ldr	x25, [sp, #64]
    2ba8:	b	2aa8 <ctf_add_enumerator+0xe8>
    2bac:	nop

0000000000002bb0 <enumadd>:
    2bb0:	mov	x4, x2
    2bb4:	stp	x29, x30, [sp, #-16]!
    2bb8:	mov	x2, x0
    2bbc:	mov	x29, sp
    2bc0:	mov	w3, w1
    2bc4:	ldp	x0, x1, [x4]
    2bc8:	bl	29c0 <ctf_add_enumerator>
    2bcc:	lsr	w0, w0, #31
    2bd0:	ldp	x29, x30, [sp], #16
    2bd4:	ret

0000000000002bd8 <ctf_add_member_offset>:
    2bd8:	stp	x29, x30, [sp, #-128]!
    2bdc:	mov	x29, sp
    2be0:	stp	x19, x20, [sp, #16]
    2be4:	mov	x20, x0
    2be8:	ldr	x0, [x0, #568]
    2bec:	stp	x21, x22, [sp, #32]
    2bf0:	mov	x21, x2
    2bf4:	stp	x25, x26, [sp, #64]
    2bf8:	mov	x25, x3
    2bfc:	mov	x26, x4
    2c00:	bl	0 <ctf_dynhash_lookup>
    2c04:	ldr	w1, [x20, #552]
    2c08:	tbz	w1, #1, 2db0 <ctf_add_member_offset+0x1d8>
    2c0c:	mov	x22, x0
    2c10:	cbz	x0, 2e9c <ctf_add_member_offset+0x2c4>
    2c14:	ldr	x1, [x20]
    2c18:	stp	x23, x24, [sp, #48]
    2c1c:	ldr	w0, [x0, #28]
    2c20:	stp	x27, x28, [sp, #80]
    2c24:	ldr	x1, [x1]
    2c28:	blr	x1
    2c2c:	mov	w23, w0
    2c30:	ldr	x1, [x20]
    2c34:	ldr	w0, [x22, #28]
    2c38:	ldr	x1, [x1, #8]
    2c3c:	blr	x1
    2c40:	mov	w27, w0
    2c44:	ldr	x1, [x20]
    2c48:	ldr	w0, [x22, #28]
    2c4c:	ldr	x1, [x1, #16]
    2c50:	blr	x1
    2c54:	mov	w24, w0
    2c58:	sub	w1, w23, #0x6
    2c5c:	cmp	w1, #0x1
    2c60:	b.hi	2e4c <ctf_add_member_offset+0x274>  // b.pmore
    2c64:	mov	w0, #0xffffff              	// #16777215
    2c68:	cmp	w24, w0
    2c6c:	b.eq	2e34 <ctf_add_member_offset+0x25c>  // b.none
    2c70:	cbz	x21, 2c9c <ctf_add_member_offset+0xc4>
    2c74:	ldr	x19, [x22, #56]
    2c78:	cbz	x19, 2c9c <ctf_add_member_offset+0xc4>
    2c7c:	nop
    2c80:	ldr	x0, [x19, #16]
    2c84:	mov	x1, x21
    2c88:	cbz	x0, 2c94 <ctf_add_member_offset+0xbc>
    2c8c:	bl	0 <strcmp>
    2c90:	cbz	w0, 2e74 <ctf_add_member_offset+0x29c>
    2c94:	ldr	x19, [x19, #8]
    2c98:	cbnz	x19, 2c80 <ctf_add_member_offset+0xa8>
    2c9c:	mov	x1, x25
    2ca0:	mov	x0, x20
    2ca4:	bl	0 <ctf_type_size>
    2ca8:	mov	x19, x0
    2cac:	tbnz	x0, #63, 2f3c <ctf_add_member_offset+0x364>
    2cb0:	mov	x1, x25
    2cb4:	mov	x0, x20
    2cb8:	bl	0 <ctf_type_align>
    2cbc:	mov	x28, x0
    2cc0:	tbnz	x0, #63, 2f3c <ctf_add_member_offset+0x364>
    2cc4:	mov	x0, #0x30                  	// #48
    2cc8:	bl	0 <malloc>
    2ccc:	mov	x4, x0
    2cd0:	cbz	x0, 2f54 <ctf_add_member_offset+0x37c>
    2cd4:	cbz	x21, 2cf0 <ctf_add_member_offset+0x118>
    2cd8:	mov	x0, x21
    2cdc:	str	x4, [sp, #104]
    2ce0:	bl	0 <strdup>
    2ce4:	mov	x21, x0
    2ce8:	ldr	x4, [sp, #104]
    2cec:	cbz	x0, 2f4c <ctf_add_member_offset+0x374>
    2cf0:	mov	w0, #0xffffffff            	// #-1
    2cf4:	stp	x21, x25, [x4, #16]
    2cf8:	cmp	w24, #0x0
    2cfc:	str	w0, [x4, #40]
    2d00:	ccmp	w23, #0x6, #0x0, ne  // ne = any
    2d04:	b.eq	2dd0 <ctf_add_member_offset+0x1f8>  // b.none
    2d08:	ldr	x5, [x20]
    2d0c:	add	x1, x22, #0x18
    2d10:	mov	x0, x20
    2d14:	mov	x3, #0x0                   	// #0
    2d18:	mov	x2, #0x0                   	// #0
    2d1c:	str	x4, [sp, #104]
    2d20:	ldr	x5, [x5, #24]
    2d24:	str	xzr, [x4, #32]
    2d28:	blr	x5
    2d2c:	cmp	x19, x0
    2d30:	csel	x19, x19, x0, ge  // ge = tcont
    2d34:	ldr	x4, [sp, #104]
    2d38:	mov	x0, x19
    2d3c:	mov	x1, #0xfffffffe            	// #4294967294
    2d40:	cmp	x0, x1
    2d44:	b.ls	2e2c <ctf_add_member_offset+0x254>  // b.plast
    2d48:	lsr	x0, x0, #32
    2d4c:	mov	w1, #0xffffffff            	// #-1
    2d50:	stp	w1, w0, [x22, #32]
    2d54:	str	w19, [x22, #40]
    2d58:	add	w24, w24, #0x1
    2d5c:	cmp	w27, #0x0
    2d60:	and	w24, w24, #0xffffff
    2d64:	mov	w0, #0x2000000             	// #33554432
    2d68:	orr	w23, w24, w23, lsl #26
    2d6c:	csel	w27, w27, w0, eq  // eq = none
    2d70:	orr	w27, w23, w27
    2d74:	str	w27, [x22, #28]
    2d78:	mov	x1, x4
    2d7c:	add	x0, x22, #0x30
    2d80:	bl	0 <ctf_list_append>
    2d84:	ldr	w1, [x20, #552]
    2d88:	mov	w0, #0x0                   	// #0
    2d8c:	ldp	x23, x24, [sp, #48]
    2d90:	orr	w1, w1, #0x4
    2d94:	ldp	x27, x28, [sp, #80]
    2d98:	str	w1, [x20, #552]
    2d9c:	ldp	x19, x20, [sp, #16]
    2da0:	ldp	x21, x22, [sp, #32]
    2da4:	ldp	x25, x26, [sp, #64]
    2da8:	ldp	x29, x30, [sp], #128
    2dac:	ret
    2db0:	mov	x0, x20
    2db4:	mov	w1, #0x40d                 	// #1037
    2db8:	bl	0 <ctf_set_errno>
    2dbc:	ldp	x19, x20, [sp, #16]
    2dc0:	ldp	x21, x22, [sp, #32]
    2dc4:	ldp	x25, x26, [sp, #64]
    2dc8:	ldp	x29, x30, [sp], #128
    2dcc:	ret
    2dd0:	cmn	x26, #0x1
    2dd4:	b.eq	2eac <ctf_add_member_offset+0x2d4>  // b.none
    2dd8:	ldr	x5, [x20]
    2ddc:	add	x1, x22, #0x18
    2de0:	mov	x0, x20
    2de4:	mov	x3, #0x0                   	// #0
    2de8:	mov	x2, #0x0                   	// #0
    2dec:	str	x4, [sp, #104]
    2df0:	ldr	x5, [x5, #24]
    2df4:	str	x26, [x4, #32]
    2df8:	blr	x5
    2dfc:	cmp	w26, #0x0
    2e00:	add	w1, w26, #0x7
    2e04:	csel	w26, w1, w26, lt  // lt = tstop
    2e08:	mov	x1, #0xfffffffe            	// #4294967294
    2e0c:	ldr	x4, [sp, #104]
    2e10:	asr	w26, w26, #3
    2e14:	add	x19, x19, w26, sxtw
    2e18:	cmp	x19, x0
    2e1c:	csel	x19, x19, x0, ge  // ge = tcont
    2e20:	mov	x0, x19
    2e24:	cmp	x0, x1
    2e28:	b.hi	2d48 <ctf_add_member_offset+0x170>  // b.pmore
    2e2c:	str	w19, [x22, #32]
    2e30:	b	2d58 <ctf_add_member_offset+0x180>
    2e34:	mov	x0, x20
    2e38:	mov	w1, #0x40e                 	// #1038
    2e3c:	bl	0 <ctf_set_errno>
    2e40:	ldp	x23, x24, [sp, #48]
    2e44:	ldp	x27, x28, [sp, #80]
    2e48:	b	2dbc <ctf_add_member_offset+0x1e4>
    2e4c:	mov	x0, x20
    2e50:	mov	w1, #0x3fb                 	// #1019
    2e54:	bl	0 <ctf_set_errno>
    2e58:	ldp	x19, x20, [sp, #16]
    2e5c:	ldp	x21, x22, [sp, #32]
    2e60:	ldp	x23, x24, [sp, #48]
    2e64:	ldp	x25, x26, [sp, #64]
    2e68:	ldp	x27, x28, [sp, #80]
    2e6c:	ldp	x29, x30, [sp], #128
    2e70:	ret
    2e74:	mov	x0, x20
    2e78:	mov	w1, #0x410                 	// #1040
    2e7c:	bl	0 <ctf_set_errno>
    2e80:	ldp	x19, x20, [sp, #16]
    2e84:	ldp	x21, x22, [sp, #32]
    2e88:	ldp	x23, x24, [sp, #48]
    2e8c:	ldp	x25, x26, [sp, #64]
    2e90:	ldp	x27, x28, [sp, #80]
    2e94:	ldp	x29, x30, [sp], #128
    2e98:	ret
    2e9c:	mov	x0, x20
    2ea0:	mov	w1, #0x3fa                 	// #1018
    2ea4:	bl	0 <ctf_set_errno>
    2ea8:	b	2dbc <ctf_add_member_offset+0x1e4>
    2eac:	ldr	x21, [x22, #48]
    2eb0:	mov	x0, x20
    2eb4:	str	x4, [sp, #104]
    2eb8:	ldr	x1, [x21, #24]
    2ebc:	bl	0 <ctf_type_resolve>
    2ec0:	mov	x1, x0
    2ec4:	mov	x25, x0
    2ec8:	add	x2, sp, #0x70
    2ecc:	mov	x0, x20
    2ed0:	ldr	x21, [x21, #32]
    2ed4:	bl	0 <ctf_type_encoding>
    2ed8:	ldr	x4, [sp, #104]
    2edc:	cbnz	w0, 2f18 <ctf_add_member_offset+0x340>
    2ee0:	ldr	w0, [sp, #120]
    2ee4:	add	x21, x21, x0
    2ee8:	cmp	x28, #0x0
    2eec:	add	x0, x21, #0x7
    2ef0:	csinc	x28, x28, xzr, gt
    2ef4:	sub	x1, x28, #0x1
    2ef8:	add	x0, x1, x0, lsr #3
    2efc:	udiv	x0, x0, x28
    2f00:	mul	x28, x0, x28
    2f04:	add	x0, x19, x28
    2f08:	mov	x19, x0
    2f0c:	lsl	x28, x28, #3
    2f10:	str	x28, [x4, #32]
    2f14:	b	2d3c <ctf_add_member_offset+0x164>
    2f18:	mov	x1, x25
    2f1c:	mov	x0, x20
    2f20:	str	x4, [sp, #104]
    2f24:	bl	0 <ctf_type_size>
    2f28:	cmp	x0, #0x0
    2f2c:	add	x0, x21, x0, lsl #3
    2f30:	csel	x21, x0, x21, gt
    2f34:	ldr	x4, [sp, #104]
    2f38:	b	2ee8 <ctf_add_member_offset+0x310>
    2f3c:	mov	w0, #0xffffffff            	// #-1
    2f40:	ldp	x23, x24, [sp, #48]
    2f44:	ldp	x27, x28, [sp, #80]
    2f48:	b	2dbc <ctf_add_member_offset+0x1e4>
    2f4c:	mov	x0, x4
    2f50:	bl	0 <free>
    2f54:	mov	x0, x20
    2f58:	mov	w1, #0xb                   	// #11
    2f5c:	bl	0 <ctf_set_errno>
    2f60:	ldp	x23, x24, [sp, #48]
    2f64:	ldp	x27, x28, [sp, #80]
    2f68:	b	2dbc <ctf_add_member_offset+0x1e4>
    2f6c:	nop

0000000000002f70 <ctf_add_member_encoded>:
    2f70:	stp	x29, x30, [sp, #-80]!
    2f74:	mov	x29, sp
    2f78:	stp	x19, x20, [sp, #16]
    2f7c:	mov	x19, x0
    2f80:	mov	x20, x3
    2f84:	ldr	x0, [x0, #568]
    2f88:	stp	x21, x22, [sp, #32]
    2f8c:	mov	x22, x2
    2f90:	mov	x21, x1
    2f94:	mov	x1, x3
    2f98:	str	x23, [sp, #48]
    2f9c:	mov	x23, x4
    2fa0:	str	x5, [sp, #64]
    2fa4:	str	w6, [sp, #72]
    2fa8:	bl	0 <ctf_dynhash_lookup>
    2fac:	ldr	x1, [x19]
    2fb0:	ldr	w0, [x0, #28]
    2fb4:	ldr	x1, [x1]
    2fb8:	blr	x1
    2fbc:	sub	w1, w0, #0x1
    2fc0:	cmp	w1, #0x1
    2fc4:	ccmp	w0, #0x8, #0x4, hi  // hi = pmore
    2fc8:	b.ne	3014 <ctf_add_member_encoded+0xa4>  // b.any
    2fcc:	add	x3, sp, #0x40
    2fd0:	sxtw	x2, w20
    2fd4:	mov	x0, x19
    2fd8:	mov	w1, #0x0                   	// #0
    2fdc:	bl	1690 <ctf_add_slice>
    2fe0:	mov	x3, x0
    2fe4:	cmn	x0, #0x1
    2fe8:	b.eq	3000 <ctf_add_member_encoded+0x90>  // b.none
    2fec:	mov	x4, x23
    2ff0:	mov	x2, x22
    2ff4:	mov	x1, x21
    2ff8:	mov	x0, x19
    2ffc:	bl	2bd8 <ctf_add_member_offset>
    3000:	ldp	x19, x20, [sp, #16]
    3004:	ldp	x21, x22, [sp, #32]
    3008:	ldr	x23, [sp, #48]
    300c:	ldp	x29, x30, [sp], #80
    3010:	ret
    3014:	mov	x0, x19
    3018:	mov	w1, #0x3fe                 	// #1022
    301c:	bl	0 <ctf_set_errno>
    3020:	ldp	x19, x20, [sp, #16]
    3024:	ldp	x21, x22, [sp, #32]
    3028:	ldr	x23, [sp, #48]
    302c:	ldp	x29, x30, [sp], #80
    3030:	ret
    3034:	nop

0000000000003038 <ctf_add_member>:
    3038:	mov	x4, #0xffffffffffffffff    	// #-1
    303c:	b	2bd8 <ctf_add_member_offset>

0000000000003040 <ctf_add_variable>:
    3040:	stp	x29, x30, [sp, #-64]!
    3044:	mov	x29, sp
    3048:	ldr	w3, [x0, #552]
    304c:	str	x0, [sp, #56]
    3050:	tbz	w3, #1, 3110 <ctf_add_variable+0xd0>
    3054:	stp	x19, x20, [sp, #16]
    3058:	mov	x19, x0
    305c:	mov	x20, x1
    3060:	ldr	x0, [x0, #592]
    3064:	stp	x21, x22, [sp, #32]
    3068:	mov	x22, x2
    306c:	bl	0 <ctf_dynhash_lookup>
    3070:	cbz	x0, 3090 <ctf_add_variable+0x50>
    3074:	mov	x0, x19
    3078:	mov	w1, #0x410                 	// #1040
    307c:	bl	0 <ctf_set_errno>
    3080:	ldp	x19, x20, [sp, #16]
    3084:	ldp	x21, x22, [sp, #32]
    3088:	ldp	x29, x30, [sp], #64
    308c:	ret
    3090:	mov	x1, x22
    3094:	add	x0, sp, #0x38
    3098:	bl	0 <ctf_lookup_by_id>
    309c:	cbz	x0, 3130 <ctf_add_variable+0xf0>
    30a0:	mov	x1, x22
    30a4:	mov	x0, x19
    30a8:	bl	0 <ctf_type_resolve>
    30ac:	cmn	x0, #0x1
    30b0:	b.eq	3120 <ctf_add_variable+0xe0>  // b.none
    30b4:	mov	x0, #0x28                  	// #40
    30b8:	bl	0 <malloc>
    30bc:	mov	x21, x0
    30c0:	cbz	x0, 315c <ctf_add_variable+0x11c>
    30c4:	cbz	x20, 30d8 <ctf_add_variable+0x98>
    30c8:	mov	x0, x20
    30cc:	bl	0 <strdup>
    30d0:	str	x0, [x21, #16]
    30d4:	cbz	x0, 3154 <ctf_add_variable+0x114>
    30d8:	ldr	x2, [x19, #624]
    30dc:	mov	x1, x21
    30e0:	mov	x0, x19
    30e4:	stp	x22, x2, [x21, #24]
    30e8:	bl	1408 <ctf_dvd_insert>
    30ec:	tbnz	w0, #31, 3140 <ctf_add_variable+0x100>
    30f0:	ldr	w1, [x19, #552]
    30f4:	mov	w0, #0x0                   	// #0
    30f8:	ldp	x21, x22, [sp, #32]
    30fc:	orr	w1, w1, #0x4
    3100:	str	w1, [x19, #552]
    3104:	ldp	x19, x20, [sp, #16]
    3108:	ldp	x29, x30, [sp], #64
    310c:	ret
    3110:	mov	w1, #0x40d                 	// #1037
    3114:	bl	0 <ctf_set_errno>
    3118:	ldp	x29, x30, [sp], #64
    311c:	ret
    3120:	mov	x0, x19
    3124:	bl	0 <ctf_errno>
    3128:	cmp	w0, #0x41b
    312c:	b.ne	30b4 <ctf_add_variable+0x74>  // b.any
    3130:	mov	w0, #0xffffffff            	// #-1
    3134:	ldp	x19, x20, [sp, #16]
    3138:	ldp	x21, x22, [sp, #32]
    313c:	b	3088 <ctf_add_variable+0x48>
    3140:	ldr	x0, [x21, #16]
    3144:	bl	0 <free>
    3148:	mov	x0, x21
    314c:	bl	0 <free>
    3150:	b	3130 <ctf_add_variable+0xf0>
    3154:	mov	x0, x21
    3158:	bl	0 <free>
    315c:	mov	x0, x19
    3160:	mov	w1, #0xb                   	// #11
    3164:	bl	0 <ctf_set_errno>
    3168:	ldp	x19, x20, [sp, #16]
    316c:	ldp	x21, x22, [sp, #32]
    3170:	b	3088 <ctf_add_variable+0x48>
    3174:	nop

0000000000003178 <ctf_add_type>:
    3178:	stp	x29, x30, [sp, #-48]!
    317c:	mov	x29, sp
    3180:	stp	x19, x20, [sp, #16]
    3184:	mov	x20, x0
    3188:	mov	x19, x1
    318c:	ldr	x0, [x1, #696]
    3190:	str	x21, [sp, #32]
    3194:	mov	x21, x2
    3198:	cbz	x0, 31d4 <ctf_add_type+0x5c>
    319c:	mov	x2, x21
    31a0:	mov	x3, x19
    31a4:	mov	x1, x19
    31a8:	mov	x0, x20
    31ac:	bl	2008 <ctf_add_type_internal>
    31b0:	mov	x1, x0
    31b4:	ldr	x0, [x19, #696]
    31b8:	mov	x19, x1
    31bc:	bl	0 <ctf_dynhash_empty>
    31c0:	mov	x0, x19
    31c4:	ldp	x19, x20, [sp, #16]
    31c8:	ldr	x21, [sp, #32]
    31cc:	ldp	x29, x30, [sp], #48
    31d0:	ret
    31d4:	adrp	x1, 0 <ctf_hash_eq_integer>
    31d8:	adrp	x0, 0 <ctf_hash_integer>
    31dc:	add	x1, x1, #0x0
    31e0:	add	x0, x0, #0x0
    31e4:	mov	x3, #0x0                   	// #0
    31e8:	mov	x2, #0x0                   	// #0
    31ec:	bl	0 <ctf_dynhash_create>
    31f0:	str	x0, [x19, #696]
    31f4:	cbnz	x0, 319c <ctf_add_type+0x24>
    31f8:	mov	x0, x20
    31fc:	mov	w1, #0xc                   	// #12
    3200:	ldp	x19, x20, [sp, #16]
    3204:	ldr	x21, [sp, #32]
    3208:	ldp	x29, x30, [sp], #48
    320c:	b	0 <ctf_set_errno>

0000000000003210 <ctf_gzwrite>:
    3210:	stp	x29, x30, [sp, #-48]!
    3214:	mov	x29, sp
    3218:	stp	x19, x20, [sp, #16]
    321c:	mov	x19, #0x34                  	// #52
    3220:	ldr	x20, [x0, #8]
    3224:	stp	x21, x22, [sp, #32]
    3228:	mov	x22, x0
    322c:	mov	x21, x1
    3230:	mov	w2, w19
    3234:	mov	x1, x20
    3238:	mov	x0, x21
    323c:	bl	0 <gzwrite>
    3240:	sxtw	x0, w0
    3244:	cmp	x0, #0x0
    3248:	b.le	329c <ctf_gzwrite+0x8c>
    324c:	add	x20, x20, x0
    3250:	subs	x19, x19, x0
    3254:	b.ne	3230 <ctf_gzwrite+0x20>  // b.any
    3258:	ldp	x20, x19, [x22, #408]
    325c:	cbnz	x19, 3280 <ctf_gzwrite+0x70>
    3260:	mov	w0, #0x0                   	// #0
    3264:	ldp	x19, x20, [sp, #16]
    3268:	ldp	x21, x22, [sp, #32]
    326c:	ldp	x29, x30, [sp], #48
    3270:	ret
    3274:	add	x20, x20, x0
    3278:	subs	x19, x19, x0
    327c:	b.eq	3260 <ctf_gzwrite+0x50>  // b.none
    3280:	mov	w2, w19
    3284:	mov	x1, x20
    3288:	mov	x0, x21
    328c:	bl	0 <gzwrite>
    3290:	sxtw	x0, w0
    3294:	cmp	x0, #0x0
    3298:	b.gt	3274 <ctf_gzwrite+0x64>
    329c:	bl	0 <__errno_location>
    32a0:	mov	x1, x0
    32a4:	mov	x0, x22
    32a8:	ldr	w1, [x1]
    32ac:	bl	0 <ctf_set_errno>
    32b0:	ldp	x19, x20, [sp, #16]
    32b4:	ldp	x21, x22, [sp, #32]
    32b8:	ldp	x29, x30, [sp], #48
    32bc:	ret

00000000000032c0 <ctf_compress_write>:
    32c0:	stp	x29, x30, [sp, #-128]!
    32c4:	mov	x29, sp
    32c8:	stp	x21, x22, [sp, #32]
    32cc:	mov	w21, w1
    32d0:	mov	x22, x0
    32d4:	stp	x23, x24, [sp, #48]
    32d8:	bl	dd0 <ctf_serialize>
    32dc:	tbnz	w0, #31, 3410 <ctf_compress_write+0x150>
    32e0:	ldr	x1, [x22, #8]
    32e4:	ldr	x0, [x22, #416]
    32e8:	ldp	x2, x3, [x1]
    32ec:	stp	x2, x3, [sp, #72]
    32f0:	ldp	x2, x3, [x1, #16]
    32f4:	stp	x2, x3, [sp, #88]
    32f8:	ldrb	w2, [sp, #75]
    32fc:	ldp	x4, x5, [x1, #32]
    3300:	stp	x4, x5, [sp, #104]
    3304:	orr	w2, w2, #0x1
    3308:	ldr	w1, [x1, #48]
    330c:	strb	w2, [sp, #75]
    3310:	str	w1, [sp, #120]
    3314:	bl	0 <compressBound>
    3318:	str	x0, [sp, #64]
    331c:	bl	0 <malloc>
    3320:	mov	x24, x0
    3324:	cbz	x0, 3418 <ctf_compress_write+0x158>
    3328:	ldp	x2, x3, [x22, #408]
    332c:	add	x1, sp, #0x40
    3330:	stp	x19, x20, [sp, #16]
    3334:	add	x20, sp, #0x48
    3338:	mov	x19, #0x34                  	// #52
    333c:	bl	0 <compress>
    3340:	mov	w23, w0
    3344:	cbnz	w0, 33e8 <ctf_compress_write+0x128>
    3348:	mov	x2, x19
    334c:	mov	x1, x20
    3350:	mov	w0, w21
    3354:	bl	0 <write>
    3358:	tbnz	x0, #63, 33b0 <ctf_compress_write+0xf0>
    335c:	add	x2, x0, x0, lsl #1
    3360:	sub	x19, x19, x0
    3364:	cmp	x19, #0x0
    3368:	add	x0, x0, x2, lsl #2
    336c:	add	x20, x20, x0, lsl #2
    3370:	b.gt	3348 <ctf_compress_write+0x88>
    3374:	ldr	x2, [sp, #64]
    3378:	cmp	x2, #0x0
    337c:	b.le	33c8 <ctf_compress_write+0x108>
    3380:	mov	x19, x24
    3384:	b	33a0 <ctf_compress_write+0xe0>
    3388:	ldr	x2, [sp, #64]
    338c:	add	x19, x19, x0
    3390:	sub	x2, x2, x0
    3394:	str	x2, [sp, #64]
    3398:	cmp	x2, #0x0
    339c:	b.le	33c8 <ctf_compress_write+0x108>
    33a0:	mov	x1, x19
    33a4:	mov	w0, w21
    33a8:	bl	0 <write>
    33ac:	tbz	x0, #63, 3388 <ctf_compress_write+0xc8>
    33b0:	bl	0 <__errno_location>
    33b4:	mov	x1, x0
    33b8:	mov	x0, x22
    33bc:	ldr	w1, [x1]
    33c0:	bl	0 <ctf_set_errno>
    33c4:	mov	w23, w0
    33c8:	mov	x0, x24
    33cc:	bl	0 <free>
    33d0:	ldp	x19, x20, [sp, #16]
    33d4:	mov	w0, w23
    33d8:	ldp	x21, x22, [sp, #32]
    33dc:	ldp	x23, x24, [sp, #48]
    33e0:	ldp	x29, x30, [sp], #128
    33e4:	ret
    33e8:	bl	0 <zError>
    33ec:	mov	x1, x0
    33f0:	adrp	x0, 0 <ctf_sort_var>
    33f4:	add	x0, x0, #0x0
    33f8:	bl	0 <ctf_dprintf>
    33fc:	mov	x0, x22
    3400:	mov	w1, #0x413                 	// #1043
    3404:	bl	0 <ctf_set_errno>
    3408:	mov	w23, w0
    340c:	b	33c8 <ctf_compress_write+0x108>
    3410:	mov	w23, #0xffffffff            	// #-1
    3414:	b	33d4 <ctf_compress_write+0x114>
    3418:	mov	x0, x22
    341c:	mov	w1, #0x3f6                 	// #1014
    3420:	bl	0 <ctf_set_errno>
    3424:	mov	w23, w0
    3428:	b	33d4 <ctf_compress_write+0x114>
    342c:	nop

0000000000003430 <ctf_write_mem>:
    3430:	stp	x29, x30, [sp, #-80]!
    3434:	mov	x29, sp
    3438:	stp	x19, x20, [sp, #16]
    343c:	mov	x20, x0
    3440:	mov	x19, #0x0                   	// #0
    3444:	stp	x21, x22, [sp, #32]
    3448:	mov	x21, x1
    344c:	mov	x22, x2
    3450:	bl	dd0 <ctf_serialize>
    3454:	tbnz	w0, #31, 34f8 <ctf_write_mem+0xc8>
    3458:	ldr	x0, [x20, #416]
    345c:	bl	0 <compressBound>
    3460:	str	x0, [sp, #72]
    3464:	ldr	x1, [x20, #416]
    3468:	cmp	x1, x22
    346c:	b.cc	350c <ctf_write_mem+0xdc>  // b.lo, b.ul, b.last
    3470:	add	x0, x0, #0x34
    3474:	bl	0 <malloc>
    3478:	mov	x19, x0
    347c:	cbz	x0, 3580 <ctf_write_mem+0x150>
    3480:	ldr	x3, [x20, #8]
    3484:	mov	x6, #0x34                  	// #52
    3488:	ldr	x1, [x20, #408]
    348c:	str	x23, [sp, #48]
    3490:	add	x0, x0, x6
    3494:	ldp	x4, x5, [x3]
    3498:	stp	x4, x5, [x19]
    349c:	ldp	x4, x5, [x3, #16]
    34a0:	stp	x4, x5, [x19, #16]
    34a4:	ldp	x4, x5, [x3, #32]
    34a8:	stp	x4, x5, [x19, #32]
    34ac:	ldr	w2, [x3, #48]
    34b0:	str	x6, [x21]
    34b4:	str	w2, [x19, #48]
    34b8:	ldr	x23, [x20, #416]
    34bc:	cmp	x23, x22
    34c0:	b.cc	3518 <ctf_write_mem+0xe8>  // b.lo, b.ul, b.last
    34c4:	ldrb	w4, [x19, #3]
    34c8:	mov	x2, x1
    34cc:	mov	x3, x23
    34d0:	add	x1, sp, #0x48
    34d4:	orr	w4, w4, #0x1
    34d8:	strb	w4, [x19, #3]
    34dc:	bl	0 <compress>
    34e0:	cbnz	w0, 354c <ctf_write_mem+0x11c>
    34e4:	ldr	x0, [x21]
    34e8:	ldr	x1, [sp, #72]
    34ec:	ldr	x23, [sp, #48]
    34f0:	add	x0, x0, x1
    34f4:	str	x0, [x21]
    34f8:	mov	x0, x19
    34fc:	ldp	x19, x20, [sp, #16]
    3500:	ldp	x21, x22, [sp, #32]
    3504:	ldp	x29, x30, [sp], #80
    3508:	ret
    350c:	mov	x0, x1
    3510:	str	x1, [sp, #72]
    3514:	b	3470 <ctf_write_mem+0x40>
    3518:	ldrb	w3, [x19, #3]
    351c:	mov	x2, x23
    3520:	add	x23, x23, #0x34
    3524:	and	w3, w3, #0xfffffffe
    3528:	strb	w3, [x19, #3]
    352c:	bl	0 <memcpy>
    3530:	str	x23, [x21]
    3534:	mov	x0, x19
    3538:	ldp	x19, x20, [sp, #16]
    353c:	ldp	x21, x22, [sp, #32]
    3540:	ldr	x23, [sp, #48]
    3544:	ldp	x29, x30, [sp], #80
    3548:	ret
    354c:	bl	0 <zError>
    3550:	mov	x1, x0
    3554:	adrp	x0, 0 <ctf_sort_var>
    3558:	add	x0, x0, #0x0
    355c:	bl	0 <ctf_dprintf>
    3560:	mov	w1, #0x413                 	// #1043
    3564:	mov	x0, x20
    3568:	bl	0 <ctf_set_errno>
    356c:	mov	x0, x19
    3570:	mov	x19, #0x0                   	// #0
    3574:	bl	0 <free>
    3578:	ldr	x23, [sp, #48]
    357c:	b	34f8 <ctf_write_mem+0xc8>
    3580:	mov	x0, x20
    3584:	mov	w1, #0xc                   	// #12
    3588:	bl	0 <ctf_set_errno>
    358c:	b	34f8 <ctf_write_mem+0xc8>

0000000000003590 <ctf_write>:
    3590:	stp	x29, x30, [sp, #-48]!
    3594:	mov	x29, sp
    3598:	stp	x21, x22, [sp, #32]
    359c:	mov	w21, w1
    35a0:	mov	x22, x0
    35a4:	bl	dd0 <ctf_serialize>
    35a8:	tbnz	w0, #31, 3640 <ctf_write+0xb0>
    35ac:	stp	x19, x20, [sp, #16]
    35b0:	mov	x19, #0x34                  	// #52
    35b4:	ldr	x20, [x22, #8]
    35b8:	mov	x2, x19
    35bc:	mov	x1, x20
    35c0:	mov	w0, w21
    35c4:	bl	0 <write>
    35c8:	cmp	x0, #0x0
    35cc:	b.le	361c <ctf_write+0x8c>
    35d0:	add	x20, x20, x0
    35d4:	subs	x19, x19, x0
    35d8:	b.ne	35b8 <ctf_write+0x28>  // b.any
    35dc:	ldp	x20, x19, [x22, #408]
    35e0:	cbnz	x19, 3604 <ctf_write+0x74>
    35e4:	mov	w0, #0x0                   	// #0
    35e8:	ldp	x19, x20, [sp, #16]
    35ec:	ldp	x21, x22, [sp, #32]
    35f0:	ldp	x29, x30, [sp], #48
    35f4:	ret
    35f8:	add	x20, x20, x0
    35fc:	subs	x19, x19, x0
    3600:	b.eq	35e4 <ctf_write+0x54>  // b.none
    3604:	mov	x2, x19
    3608:	mov	x1, x20
    360c:	mov	w0, w21
    3610:	bl	0 <write>
    3614:	cmp	x0, #0x0
    3618:	b.gt	35f8 <ctf_write+0x68>
    361c:	bl	0 <__errno_location>
    3620:	mov	x1, x0
    3624:	mov	x0, x22
    3628:	ldr	w1, [x1]
    362c:	bl	0 <ctf_set_errno>
    3630:	ldp	x19, x20, [sp, #16]
    3634:	ldp	x21, x22, [sp, #32]
    3638:	ldp	x29, x30, [sp], #48
    363c:	ret
    3640:	mov	w0, #0xffffffff            	// #-1
    3644:	b	3634 <ctf_write+0xa4>

ctf-decl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_decl_init>:
   0:	mov	x1, #0xffffffffffffffff    	// #-1
   4:	stp	xzr, xzr, [x0]
   8:	stp	xzr, xzr, [x0, #16]
   c:	stp	xzr, xzr, [x0, #32]
  10:	stp	xzr, xzr, [x0, #48]
  14:	stp	x1, x1, [x0, #64]
  18:	stp	xzr, xzr, [x0, #80]
  1c:	str	xzr, [x0, #96]
  20:	ret
  24:	nop

0000000000000028 <ctf_decl_fini>:
  28:	stp	x29, x30, [sp, #-48]!
  2c:	mov	x29, sp
  30:	stp	x19, x20, [sp, #16]
  34:	add	x20, x0, #0x8
  38:	str	x21, [sp, #32]
  3c:	add	x21, x0, #0x48
  40:	ldr	x19, [x20]
  44:	cbz	x19, 58 <ctf_decl_fini+0x30>
  48:	mov	x0, x19
  4c:	ldr	x19, [x19, #8]
  50:	bl	0 <free>
  54:	cbnz	x19, 48 <ctf_decl_fini+0x20>
  58:	add	x20, x20, #0x10
  5c:	cmp	x20, x21
  60:	b.ne	40 <ctf_decl_fini+0x18>  // b.any
  64:	ldp	x19, x20, [sp, #16]
  68:	ldr	x21, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	nop

0000000000000078 <ctf_decl_push>:
  78:	stp	x29, x30, [sp, #-128]!
  7c:	mov	x29, sp
  80:	stp	x19, x20, [sp, #16]
  84:	mov	x20, x0
  88:	add	x0, sp, #0x58
  8c:	stp	x21, x22, [sp, #32]
  90:	mov	x22, x2
  94:	str	x1, [sp, #88]
  98:	mov	x1, x2
  9c:	bl	0 <ctf_lookup_by_id>
  a0:	cbz	x0, 264 <ctf_decl_push+0x1ec>
  a4:	ldr	x1, [sp, #88]
  a8:	mov	x21, x0
  ac:	ldr	w0, [x0, #4]
  b0:	stp	x23, x24, [sp, #48]
  b4:	ldr	x1, [x1]
  b8:	ldr	x1, [x1]
  bc:	blr	x1
  c0:	mov	w19, w0
  c4:	cmp	w0, #0xa
  c8:	b.eq	1dc <ctf_decl_push+0x164>  // b.none
  cc:	b.hi	16c <ctf_decl_push+0xf4>  // b.pmore
  d0:	cmp	w0, #0x4
  d4:	b.eq	280 <ctf_decl_push+0x208>  // b.none
  d8:	cmp	w0, #0x5
  dc:	b.ne	1b4 <ctf_decl_push+0x13c>  // b.any
  e0:	ldr	w2, [x21, #8]
  e4:	mov	x0, x20
  e8:	ldr	x1, [sp, #88]
  ec:	mov	w23, #0x0                   	// #0
  f0:	mov	w24, #0x1                   	// #1
  f4:	mov	w21, #0x3                   	// #3
  f8:	bl	78 <ctf_decl_push>
  fc:	nop
 100:	mov	x0, #0x20                  	// #32
 104:	bl	0 <malloc>
 108:	mov	x1, x0
 10c:	cbz	x0, 2c8 <ctf_decl_push+0x250>
 110:	ubfiz	x2, x21, #4, #32
 114:	str	x22, [x1, #16]
 118:	add	x2, x20, x2
 11c:	stp	w19, w24, [x1, #24]
 120:	mov	w0, w21
 124:	ldr	x2, [x2, #8]
 128:	cbz	x2, 218 <ctf_decl_push+0x1a0>
 12c:	ldr	w2, [x20, #80]
 130:	cmp	w2, w21
 134:	ccmp	w21, #0x1, #0x2, cc  // cc = lo, ul, last
 138:	b.ls	23c <ctf_decl_push+0x1c4>  // b.plast
 13c:	add	x0, x20, x0, lsl #4
 140:	cmp	w19, #0x4
 144:	b.eq	154 <ctf_decl_push+0xdc>  // b.none
 148:	cmp	w21, #0x0
 14c:	csel	w23, w23, wzr, eq  // eq = none
 150:	cbz	w23, 200 <ctf_decl_push+0x188>
 154:	bl	0 <ctf_list_prepend>
 158:	ldp	x23, x24, [sp, #48]
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x29, x30, [sp], #128
 168:	ret
 16c:	cmp	w0, #0xd
 170:	b.ls	244 <ctf_decl_push+0x1cc>  // b.plast
 174:	cmp	w0, #0xe
 178:	b.ne	1f0 <ctf_decl_push+0x178>  // b.any
 17c:	str	x25, [sp, #64]
 180:	mov	x1, x22
 184:	ldr	x25, [sp, #88]
 188:	mov	w23, #0x0                   	// #0
 18c:	mov	w24, #0x1                   	// #1
 190:	mov	w21, #0x0                   	// #0
 194:	mov	x0, x25
 198:	bl	0 <ctf_type_reference>
 19c:	mov	x1, x25
 1a0:	mov	x2, x0
 1a4:	mov	x0, x20
 1a8:	bl	78 <ctf_decl_push>
 1ac:	ldr	x25, [sp, #64]
 1b0:	b	100 <ctf_decl_push+0x88>
 1b4:	cmp	w0, #0x3
 1b8:	b.ne	1f0 <ctf_decl_push+0x178>  // b.any
 1bc:	ldr	w2, [x21, #8]
 1c0:	mov	w24, #0x1                   	// #1
 1c4:	ldr	x1, [sp, #88]
 1c8:	mov	x0, x20
 1cc:	mov	w21, w24
 1d0:	mov	w23, #0x0                   	// #0
 1d4:	bl	78 <ctf_decl_push>
 1d8:	b	100 <ctf_decl_push+0x88>
 1dc:	ldr	w1, [x21]
 1e0:	ldr	x0, [sp, #88]
 1e4:	bl	0 <ctf_strptr>
 1e8:	ldrb	w0, [x0]
 1ec:	cbz	w0, 2b0 <ctf_decl_push+0x238>
 1f0:	mov	w23, #0x0                   	// #0
 1f4:	mov	w24, #0x1                   	// #1
 1f8:	mov	w21, #0x0                   	// #0
 1fc:	b	100 <ctf_decl_push+0x88>
 200:	bl	0 <ctf_list_append>
 204:	ldp	x19, x20, [sp, #16]
 208:	ldp	x21, x22, [sp, #32]
 20c:	ldp	x23, x24, [sp, #48]
 210:	ldp	x29, x30, [sp], #128
 214:	ret
 218:	ldr	w3, [x20, #84]
 21c:	add	x2, x0, #0x10
 220:	add	w4, w3, #0x1
 224:	str	w4, [x20, #84]
 228:	str	w3, [x20, x2, lsl #2]
 22c:	ldr	w2, [x20, #80]
 230:	cmp	w2, w21
 234:	ccmp	w21, #0x1, #0x2, cc  // cc = lo, ul, last
 238:	b.hi	13c <ctf_decl_push+0xc4>  // b.pmore
 23c:	str	w21, [x20, #80]
 240:	b	13c <ctf_decl_push+0xc4>
 244:	ldr	w2, [x21, #8]
 248:	mov	x0, x20
 24c:	ldr	x1, [sp, #88]
 250:	mov	w23, #0x1                   	// #1
 254:	mov	w24, w23
 258:	bl	78 <ctf_decl_push>
 25c:	ldr	w21, [x20, #80]
 260:	b	100 <ctf_decl_push+0x88>
 264:	ldr	x0, [sp, #88]
 268:	ldp	x21, x22, [sp, #32]
 26c:	ldr	w0, [x0, #556]
 270:	str	w0, [x20, #96]
 274:	ldp	x19, x20, [sp, #16]
 278:	ldp	x29, x30, [sp], #128
 27c:	ret
 280:	ldr	x0, [sp, #88]
 284:	add	x2, sp, #0x68
 288:	mov	x1, x22
 28c:	mov	w23, #0x0                   	// #0
 290:	mov	w21, #0x2                   	// #2
 294:	bl	0 <ctf_array_info>
 298:	ldr	x1, [sp, #88]
 29c:	mov	x0, x20
 2a0:	ldr	x2, [sp, #104]
 2a4:	bl	78 <ctf_decl_push>
 2a8:	ldr	w24, [sp, #120]
 2ac:	b	100 <ctf_decl_push+0x88>
 2b0:	ldr	w2, [x21, #8]
 2b4:	mov	x0, x20
 2b8:	ldr	x1, [sp, #88]
 2bc:	bl	78 <ctf_decl_push>
 2c0:	ldp	x23, x24, [sp, #48]
 2c4:	b	15c <ctf_decl_push+0xe4>
 2c8:	mov	w0, #0xb                   	// #11
 2cc:	ldp	x23, x24, [sp, #48]
 2d0:	str	w0, [x20, #96]
 2d4:	b	15c <ctf_decl_push+0xe4>

00000000000002d8 <ctf_decl_sprintf>:
 2d8:	stp	x29, x30, [sp, #-288]!
 2dc:	mov	x29, sp
 2e0:	str	q0, [sp, #112]
 2e4:	str	q1, [sp, #128]
 2e8:	str	x19, [sp, #16]
 2ec:	mov	x19, x0
 2f0:	ldr	w0, [x0, #100]
 2f4:	str	q2, [sp, #144]
 2f8:	str	q3, [sp, #160]
 2fc:	str	q4, [sp, #176]
 300:	str	q5, [sp, #192]
 304:	str	q6, [sp, #208]
 308:	str	q7, [sp, #224]
 30c:	stp	x2, x3, [sp, #240]
 310:	stp	x4, x5, [sp, #256]
 314:	stp	x6, x7, [sp, #272]
 318:	cbz	w0, 328 <ctf_decl_sprintf+0x50>
 31c:	ldr	x19, [sp, #16]
 320:	ldp	x29, x30, [sp], #288
 324:	ret
 328:	add	x2, sp, #0x120
 32c:	stp	x2, x2, [sp, #80]
 330:	add	x0, sp, #0xf0
 334:	mov	w4, #0xffffffd0            	// #-48
 338:	mov	w3, #0xffffff80            	// #-128
 33c:	str	x0, [sp, #96]
 340:	add	x2, sp, #0x20
 344:	stp	w4, w3, [sp, #104]
 348:	add	x0, sp, #0x48
 34c:	ldp	x4, x5, [sp, #80]
 350:	stp	x4, x5, [sp, #32]
 354:	ldp	x4, x5, [sp, #96]
 358:	stp	x4, x5, [sp, #48]
 35c:	bl	0 <vasprintf>
 360:	cmp	w0, #0x0
 364:	b.gt	398 <ctf_decl_sprintf+0xc0>
 368:	ldr	x0, [x19, #88]
 36c:	b.ne	374 <ctf_decl_sprintf+0x9c>  // b.any
 370:	cbnz	x0, 384 <ctf_decl_sprintf+0xac>
 374:	bl	0 <free>
 378:	str	xzr, [x19, #88]
 37c:	mov	w0, #0x1                   	// #1
 380:	str	w0, [x19, #100]
 384:	ldr	x0, [sp, #72]
 388:	bl	0 <free>
 38c:	ldr	x19, [sp, #16]
 390:	ldp	x29, x30, [sp], #288
 394:	ret
 398:	ldr	x1, [sp, #72]
 39c:	ldr	x0, [x19, #88]
 3a0:	bl	0 <ctf_str_append>
 3a4:	cbz	x0, 3b0 <ctf_decl_sprintf+0xd8>
 3a8:	str	x0, [x19, #88]
 3ac:	b	384 <ctf_decl_sprintf+0xac>
 3b0:	ldr	x0, [x19, #88]
 3b4:	cbnz	x0, 384 <ctf_decl_sprintf+0xac>
 3b8:	b	374 <ctf_decl_sprintf+0x9c>
 3bc:	nop

00000000000003c0 <ctf_decl_buf>:
 3c0:	ldr	x0, [x0, #88]
 3c4:	ret

ctf-error.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_errmsg>:
   0:	sub	w1, w0, #0x3e8
   4:	cmp	w1, #0x33
   8:	b.hi	2c <ctf_errmsg+0x2c>  // b.pmore
   c:	adrp	x0, 0 <ctf_errmsg>
  10:	add	x0, x0, #0x0
  14:	ldr	x0, [x0, w1, sxtw #3]
  18:	adrp	x1, 0 <ctf_errmsg>
  1c:	add	x1, x1, #0x0
  20:	cmp	x0, #0x0
  24:	csel	x0, x1, x0, eq  // eq = none
  28:	ret
  2c:	stp	x29, x30, [sp, #-16]!
  30:	mov	x29, sp
  34:	bl	0 <ctf_strerror>
  38:	cmp	x0, #0x0
  3c:	adrp	x1, 0 <ctf_errmsg>
  40:	add	x1, x1, #0x0
  44:	csel	x0, x1, x0, eq  // eq = none
  48:	ldp	x29, x30, [sp], #16
  4c:	ret

0000000000000050 <ctf_errno>:
  50:	ldr	w0, [x0, #556]
  54:	ret

ctf-hash.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_hashtab_traverse>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0]
   c:	ldp	x4, x2, [x1]
  10:	ldp	x0, x1, [x3]
  14:	blr	x4
  18:	mov	w0, #0x1                   	// #1
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	nop

0000000000000028 <ctf_dynhash_item_free>:
  28:	stp	x29, x30, [sp, #-32]!
  2c:	mov	x29, sp
  30:	ldr	x1, [x0, #16]
  34:	str	x19, [sp, #16]
  38:	mov	x19, x0
  3c:	cbz	x1, 4c <ctf_dynhash_item_free+0x24>
  40:	ldr	x0, [x0]
  44:	cbz	x0, 4c <ctf_dynhash_item_free+0x24>
  48:	blr	x1
  4c:	ldr	x1, [x19, #24]
  50:	cbz	x1, 60 <ctf_dynhash_item_free+0x38>
  54:	ldr	x0, [x19, #8]
  58:	cbz	x0, 60 <ctf_dynhash_item_free+0x38>
  5c:	blr	x1
  60:	mov	x0, x19
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <free>

0000000000000070 <ctf_hashtab_insert>:
  70:	stp	x29, x30, [sp, #-96]!
  74:	mov	x29, sp
  78:	stp	x19, x20, [sp, #16]
  7c:	mov	x20, x1
  80:	add	x1, sp, #0x40
  84:	stp	x21, x22, [sp, #32]
  88:	mov	x22, x3
  8c:	mov	x21, x4
  90:	str	x23, [sp, #48]
  94:	mov	x23, x2
  98:	mov	w2, #0x1                   	// #1
  9c:	str	x20, [sp, #64]
  a0:	stp	xzr, xzr, [sp, #72]
  a4:	str	xzr, [sp, #88]
  a8:	bl	0 <htab_find_slot>
  ac:	mov	x19, x0
  b0:	cbz	x0, 11c <ctf_hashtab_insert+0xac>
  b4:	ldr	x0, [x0]
  b8:	cbz	x0, 104 <ctf_hashtab_insert+0x94>
  bc:	cbz	x22, cc <ctf_hashtab_insert+0x5c>
  c0:	ldr	x0, [x0]
  c4:	blr	x22
  c8:	ldr	x0, [x19]
  cc:	cbz	x21, dc <ctf_hashtab_insert+0x6c>
  d0:	ldr	x0, [x0, #8]
  d4:	blr	x21
  d8:	ldr	x0, [x19]
  dc:	str	x20, [x0]
  e0:	ldr	x0, [x19]
  e4:	str	x23, [x0, #8]
  e8:	ldr	x19, [x19]
  ec:	mov	x0, x19
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	ldp	x29, x30, [sp], #96
 100:	ret
 104:	mov	x0, #0x20                  	// #32
 108:	bl	0 <malloc>
 10c:	str	x0, [x19]
 110:	cbnz	x0, dc <ctf_hashtab_insert+0x6c>
 114:	mov	x19, #0x0                   	// #0
 118:	b	ec <ctf_hashtab_insert+0x7c>
 11c:	bl	0 <__errno_location>
 120:	mov	w1, #0xfffffff4            	// #-12
 124:	str	w1, [x0]
 128:	b	ec <ctf_hashtab_insert+0x7c>
 12c:	nop

0000000000000130 <ctf_hashtab_traverse_remove>:
 130:	stp	x29, x30, [sp, #-32]!
 134:	mov	x29, sp
 138:	stp	x19, x20, [sp, #16]
 13c:	mov	x19, x1
 140:	mov	x20, x0
 144:	ldr	x1, [x0]
 148:	ldp	x3, x2, [x19, #8]
 14c:	ldp	x0, x1, [x1]
 150:	blr	x3
 154:	cbnz	w0, 168 <ctf_hashtab_traverse_remove+0x38>
 158:	mov	w0, #0x1                   	// #1
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x29, x30, [sp], #32
 164:	ret
 168:	ldr	x0, [x19]
 16c:	mov	x1, x20
 170:	bl	0 <htab_clear_slot>
 174:	mov	w0, #0x1                   	// #1
 178:	ldp	x19, x20, [sp, #16]
 17c:	ldp	x29, x30, [sp], #32
 180:	ret
 184:	nop

0000000000000188 <ctf_hash_integer>:
 188:	adrp	x1, 0 <htab_hash_pointer>
 18c:	ldr	x0, [x0]
 190:	ldr	x1, [x1]
 194:	mov	x16, x1
 198:	br	x16
 19c:	nop

00000000000001a0 <ctf_hash_eq_integer>:
 1a0:	adrp	x2, 0 <htab_eq_pointer>
 1a4:	ldr	x0, [x0]
 1a8:	ldr	x2, [x2]
 1ac:	ldr	x1, [x1]
 1b0:	mov	x16, x2
 1b4:	br	x16

00000000000001b8 <ctf_hash_string>:
 1b8:	ldr	x0, [x0]
 1bc:	b	0 <htab_hash_string>

00000000000001c0 <ctf_hash_eq_string>:
 1c0:	stp	x29, x30, [sp, #-16]!
 1c4:	mov	x29, sp
 1c8:	ldr	x0, [x0]
 1cc:	ldr	x1, [x1]
 1d0:	bl	0 <strcmp>
 1d4:	cmp	w0, #0x0
 1d8:	cset	w0, eq  // eq = none
 1dc:	ldp	x29, x30, [sp], #16
 1e0:	ret
 1e4:	nop

00000000000001e8 <ctf_hash_type_mapping_key>:
 1e8:	stp	x29, x30, [sp, #-32]!
 1ec:	mov	x29, sp
 1f0:	stp	x19, x20, [sp, #16]
 1f4:	adrp	x19, 0 <htab_hash_pointer>
 1f8:	ldr	x20, [x0]
 1fc:	ldr	x1, [x19]
 200:	ldr	x0, [x20]
 204:	blr	x1
 208:	ldr	x1, [x19]
 20c:	mov	w19, w0
 210:	ldr	x0, [x20, #8]
 214:	blr	x1
 218:	mov	w1, #0x3b                  	// #59
 21c:	madd	w0, w0, w1, w19
 220:	ldp	x19, x20, [sp, #16]
 224:	ldp	x29, x30, [sp], #32
 228:	ret
 22c:	nop

0000000000000230 <ctf_hash_eq_type_mapping_key>:
 230:	ldr	x2, [x0]
 234:	ldr	x0, [x1]
 238:	ldr	x3, [x2]
 23c:	ldr	x1, [x0]
 240:	cmp	x3, x1
 244:	b.eq	250 <ctf_hash_eq_type_mapping_key+0x20>  // b.none
 248:	mov	w0, #0x0                   	// #0
 24c:	ret
 250:	ldr	x0, [x0, #8]
 254:	ldr	x1, [x2, #8]
 258:	cmp	x1, x0
 25c:	cset	w0, eq  // eq = none
 260:	ret
 264:	nop

0000000000000268 <ctf_dynhash_create>:
 268:	stp	x29, x30, [sp, #-64]!
 26c:	mov	x29, sp
 270:	stp	x19, x20, [sp, #16]
 274:	mov	x20, x0
 278:	mov	x0, #0x18                  	// #24
 27c:	stp	x21, x22, [sp, #32]
 280:	mov	x21, x1
 284:	mov	x22, x3
 288:	str	x23, [sp, #48]
 28c:	mov	x23, x2
 290:	bl	0 <malloc>
 294:	mov	x19, x0
 298:	cbz	x0, 2d0 <ctf_dynhash_create+0x68>
 29c:	mov	x2, x21
 2a0:	mov	x1, x20
 2a4:	adrp	x5, 0 <free>
 2a8:	adrp	x4, 0 <xcalloc>
 2ac:	add	x5, x5, #0x0
 2b0:	add	x4, x4, #0x0
 2b4:	adrp	x3, 0 <ctf_hashtab_traverse>
 2b8:	mov	x0, #0x7                   	// #7
 2bc:	add	x3, x3, #0x0
 2c0:	bl	0 <htab_create_alloc>
 2c4:	str	x0, [x19]
 2c8:	cbz	x0, 2e8 <ctf_dynhash_create+0x80>
 2cc:	stp	x23, x22, [x19, #8]
 2d0:	mov	x0, x19
 2d4:	ldp	x19, x20, [sp, #16]
 2d8:	ldp	x21, x22, [sp, #32]
 2dc:	ldr	x23, [sp, #48]
 2e0:	ldp	x29, x30, [sp], #64
 2e4:	ret
 2e8:	mov	x0, x19
 2ec:	mov	x19, #0x0                   	// #0
 2f0:	bl	0 <free>
 2f4:	b	2d0 <ctf_dynhash_create+0x68>

00000000000002f8 <ctf_dynhash_insert>:
 2f8:	stp	x29, x30, [sp, #-32]!
 2fc:	mov	x29, sp
 300:	str	x19, [sp, #16]
 304:	mov	x19, x0
 308:	ldr	x0, [x0]
 30c:	ldp	x3, x4, [x19, #8]
 310:	bl	70 <ctf_hashtab_insert>
 314:	cbz	x0, 334 <ctf_dynhash_insert+0x3c>
 318:	mov	x1, x0
 31c:	mov	w0, #0x0                   	// #0
 320:	ldp	x3, x2, [x19, #8]
 324:	stp	x3, x2, [x1, #16]
 328:	ldr	x19, [sp, #16]
 32c:	ldp	x29, x30, [sp], #32
 330:	ret
 334:	bl	0 <__errno_location>
 338:	ldr	w0, [x0]
 33c:	ldr	x19, [sp, #16]
 340:	ldp	x29, x30, [sp], #32
 344:	ret

0000000000000348 <ctf_dynhash_remove>:
 348:	stp	x29, x30, [sp, #-48]!
 34c:	mov	x2, x1
 350:	mov	x29, sp
 354:	ldr	x0, [x0]
 358:	add	x1, sp, #0x10
 35c:	stp	x2, xzr, [sp, #16]
 360:	stp	xzr, xzr, [sp, #32]
 364:	bl	0 <htab_remove_elt>
 368:	ldp	x29, x30, [sp], #48
 36c:	ret

0000000000000370 <ctf_dynhash_empty>:
 370:	ldr	x0, [x0]
 374:	b	0 <htab_empty>

0000000000000378 <ctf_dynhash_lookup>:
 378:	stp	x29, x30, [sp, #-48]!
 37c:	mov	x3, x1
 380:	mov	w2, #0x0                   	// #0
 384:	mov	x29, sp
 388:	ldr	x0, [x0]
 38c:	add	x1, sp, #0x10
 390:	str	x3, [sp, #16]
 394:	stp	xzr, xzr, [sp, #24]
 398:	str	xzr, [sp, #40]
 39c:	bl	0 <htab_find_slot>
 3a0:	cbz	x0, 3ac <ctf_dynhash_lookup+0x34>
 3a4:	ldr	x0, [x0]
 3a8:	ldr	x0, [x0, #8]
 3ac:	ldp	x29, x30, [sp], #48
 3b0:	ret
 3b4:	nop

00000000000003b8 <ctf_dynhash_iter>:
 3b8:	stp	x29, x30, [sp, #-32]!
 3bc:	mov	x4, x1
 3c0:	mov	x3, x2
 3c4:	mov	x29, sp
 3c8:	ldr	x0, [x0]
 3cc:	add	x2, sp, #0x10
 3d0:	adrp	x1, 0 <ctf_hashtab_traverse>
 3d4:	add	x1, x1, #0x0
 3d8:	stp	x4, x3, [sp, #16]
 3dc:	bl	0 <htab_traverse>
 3e0:	ldp	x29, x30, [sp], #32
 3e4:	ret

00000000000003e8 <ctf_dynhash_iter_remove>:
 3e8:	stp	x29, x30, [sp, #-48]!
 3ec:	mov	x4, x1
 3f0:	mov	x3, x2
 3f4:	mov	x29, sp
 3f8:	ldr	x0, [x0]
 3fc:	add	x2, sp, #0x18
 400:	adrp	x1, 0 <ctf_hashtab_traverse>
 404:	add	x1, x1, #0x0
 408:	stp	x0, x4, [sp, #24]
 40c:	str	x3, [sp, #40]
 410:	bl	0 <htab_traverse>
 414:	ldp	x29, x30, [sp], #48
 418:	ret
 41c:	nop

0000000000000420 <ctf_dynhash_destroy>:
 420:	stp	x29, x30, [sp, #-32]!
 424:	mov	x29, sp
 428:	str	x19, [sp, #16]
 42c:	mov	x19, x0
 430:	cbz	x0, 43c <ctf_dynhash_destroy+0x1c>
 434:	ldr	x0, [x0]
 438:	bl	0 <htab_delete>
 43c:	mov	x0, x19
 440:	ldr	x19, [sp, #16]
 444:	ldp	x29, x30, [sp], #32
 448:	b	0 <free>
 44c:	nop

0000000000000450 <ctf_hash_create>:
 450:	adrp	x5, 0 <free>
 454:	add	x5, x5, #0x0
 458:	mov	x3, x5
 45c:	adrp	x4, 0 <xcalloc>
 460:	add	x4, x4, #0x0
 464:	b	0 <htab_create_alloc>

0000000000000468 <ctf_hash_size>:
 468:	stp	x29, x30, [sp, #-16]!
 46c:	mov	x29, sp
 470:	bl	0 <htab_elements>
 474:	ldp	x29, x30, [sp], #16
 478:	ret
 47c:	nop

0000000000000480 <ctf_hash_insert_type>:
 480:	stp	x29, x30, [sp, #-48]!
 484:	mov	x29, sp
 488:	stp	x21, x22, [sp, #32]
 48c:	mov	x21, x1
 490:	mov	x22, x0
 494:	mov	w1, w3
 498:	mov	x0, x21
 49c:	stp	x19, x20, [sp, #16]
 4a0:	mov	w19, w2
 4a4:	mov	w20, w3
 4a8:	bl	0 <ctf_strraw>
 4ac:	cbz	w19, 528 <ctf_hash_insert_type+0xa8>
 4b0:	cbz	x0, 504 <ctf_hash_insert_type+0x84>
 4b4:	ldrb	w1, [x0]
 4b8:	cbnz	w1, 4d0 <ctf_hash_insert_type+0x50>
 4bc:	mov	w0, #0x0                   	// #0
 4c0:	ldp	x19, x20, [sp, #16]
 4c4:	ldp	x21, x22, [sp, #32]
 4c8:	ldp	x29, x30, [sp], #48
 4cc:	ret
 4d0:	mov	x1, x0
 4d4:	mov	w2, w19
 4d8:	mov	x0, x22
 4dc:	mov	x4, #0x0                   	// #0
 4e0:	mov	x3, #0x0                   	// #0
 4e4:	bl	70 <ctf_hashtab_insert>
 4e8:	cbnz	x0, 4bc <ctf_hash_insert_type+0x3c>
 4ec:	bl	0 <__errno_location>
 4f0:	ldr	w0, [x0]
 4f4:	ldp	x19, x20, [sp, #16]
 4f8:	ldp	x21, x22, [sp, #32]
 4fc:	ldp	x29, x30, [sp], #48
 500:	ret
 504:	mov	w0, #0x3f9                 	// #1017
 508:	tbz	w20, #31, 4c0 <ctf_hash_insert_type+0x40>
 50c:	ldr	x1, [x21, #128]
 510:	cbnz	x1, 4c0 <ctf_hash_insert_type+0x40>
 514:	ldr	x0, [x21, #352]
 518:	cmp	x0, #0x0
 51c:	cset	w0, ne  // ne = any
 520:	add	w0, w0, #0x3f8
 524:	b	4c0 <ctf_hash_insert_type+0x40>
 528:	mov	w0, #0x16                  	// #22
 52c:	ldp	x19, x20, [sp, #16]
 530:	ldp	x21, x22, [sp, #32]
 534:	ldp	x29, x30, [sp], #48
 538:	ret
 53c:	nop

0000000000000540 <ctf_hash_define_type>:
 540:	b	480 <ctf_hash_insert_type>
 544:	nop

0000000000000548 <ctf_hash_lookup_type>:
 548:	stp	x29, x30, [sp, #-48]!
 54c:	mov	x3, x2
 550:	mov	w2, #0x0                   	// #0
 554:	mov	x29, sp
 558:	add	x1, sp, #0x10
 55c:	str	x3, [sp, #16]
 560:	stp	xzr, xzr, [sp, #24]
 564:	str	xzr, [sp, #40]
 568:	bl	0 <htab_find_slot>
 56c:	cbz	x0, 580 <ctf_hash_lookup_type+0x38>
 570:	ldr	x0, [x0]
 574:	ldr	x0, [x0, #8]
 578:	ldp	x29, x30, [sp], #48
 57c:	ret
 580:	mov	x0, #0x0                   	// #0
 584:	ldp	x29, x30, [sp], #48
 588:	ret
 58c:	nop

0000000000000590 <ctf_hash_destroy>:
 590:	cbz	x0, 598 <ctf_hash_destroy+0x8>
 594:	b	0 <htab_delete>
 598:	ret

ctf-labels.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <label_info_cb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x2
  14:	ldr	x1, [x2]
  18:	bl	0 <strcmp>
  1c:	cbz	w0, 30 <label_info_cb+0x30>
  20:	mov	w0, #0x0                   	// #0
  24:	ldp	x19, x20, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	ldr	x1, [x19, #8]
  34:	mov	w0, #0x1                   	// #1
  38:	cbz	x1, 24 <label_info_cb+0x24>
  3c:	ldr	x2, [x20]
  40:	str	x2, [x1]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

0000000000000050 <ctf_label_topmost>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	ldr	x1, [x0, #32]
  5c:	stp	x19, x20, [sp, #16]
  60:	ldr	x4, [x0, #408]
  64:	ldp	w3, w1, [x1, #16]
  68:	sub	w1, w1, w3
  6c:	cmp	wzr, w1, lsr #3
  70:	b.eq	a8 <ctf_label_topmost+0x58>  // b.none
  74:	mov	w2, w3
  78:	lsr	w1, w1, #3
  7c:	sub	x2, x2, #0x8
  80:	mov	x19, x0
  84:	add	x1, x2, w1, uxtw #3
  88:	ldr	w1, [x4, x1]
  8c:	bl	0 <ctf_strraw>
  90:	mov	x20, x0
  94:	cbz	x0, c4 <ctf_label_topmost+0x74>
  98:	mov	x0, x20
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret
  a8:	mov	w1, #0x409                 	// #1033
  ac:	mov	x20, #0x0                   	// #0
  b0:	bl	0 <ctf_set_errno>
  b4:	mov	x0, x20
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret
  c4:	mov	x0, x19
  c8:	mov	w1, #0x3ef                 	// #1007
  cc:	bl	0 <ctf_set_errno>
  d0:	mov	x0, x20
  d4:	ldp	x19, x20, [sp, #16]
  d8:	ldp	x29, x30, [sp], #32
  dc:	ret

00000000000000e0 <ctf_label_iter>:
  e0:	stp	x29, x30, [sp, #-80]!
  e4:	mov	x29, sp
  e8:	stp	x21, x22, [sp, #32]
  ec:	mov	x22, x2
  f0:	ldr	x2, [x0, #408]
  f4:	str	x23, [sp, #48]
  f8:	mov	x23, x1
  fc:	stp	x19, x20, [sp, #16]
 100:	ldr	x1, [x0, #32]
 104:	ldp	w19, w3, [x1, #16]
 108:	sub	w3, w3, w19
 10c:	add	x19, x2, w19, uxtw
 110:	cmp	wzr, w3, lsr #3
 114:	b.eq	1a8 <ctf_label_iter+0xc8>  // b.none
 118:	lsr	w3, w3, #3
 11c:	mov	x21, x0
 120:	sub	w3, w3, #0x1
 124:	add	x20, x3, #0x1
 128:	add	x20, x19, x20, lsl #3
 12c:	nop
 130:	ldr	w1, [x19]
 134:	mov	x0, x21
 138:	bl	0 <ctf_strraw>
 13c:	mov	x2, x22
 140:	add	x1, sp, #0x48
 144:	cbz	x0, 178 <ctf_label_iter+0x98>
 148:	ldr	w3, [x19, #4]
 14c:	add	x19, x19, #0x8
 150:	str	x3, [sp, #72]
 154:	blr	x23
 158:	cmp	x19, x20
 15c:	cbnz	w0, 164 <ctf_label_iter+0x84>
 160:	b.ne	130 <ctf_label_iter+0x50>  // b.any
 164:	ldp	x19, x20, [sp, #16]
 168:	ldp	x21, x22, [sp, #32]
 16c:	ldr	x23, [sp, #48]
 170:	ldp	x29, x30, [sp], #80
 174:	ret
 178:	ldp	w1, w2, [x19]
 17c:	adrp	x0, 0 <label_info_cb>
 180:	add	x0, x0, #0x0
 184:	bl	0 <ctf_dprintf>
 188:	mov	x0, x21
 18c:	mov	w1, #0x3ef                 	// #1007
 190:	bl	0 <ctf_set_errno>
 194:	ldp	x19, x20, [sp, #16]
 198:	ldp	x21, x22, [sp, #32]
 19c:	ldr	x23, [sp, #48]
 1a0:	ldp	x29, x30, [sp], #80
 1a4:	ret
 1a8:	mov	w1, #0x409                 	// #1033
 1ac:	bl	0 <ctf_set_errno>
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldr	x23, [sp, #48]
 1bc:	ldp	x29, x30, [sp], #80
 1c0:	ret
 1c4:	nop

00000000000001c8 <ctf_label_info>:
 1c8:	stp	x29, x30, [sp, #-48]!
 1cc:	mov	x4, x1
 1d0:	mov	x3, x2
 1d4:	mov	x29, sp
 1d8:	adrp	x1, 0 <label_info_cb>
 1dc:	add	x2, sp, #0x20
 1e0:	add	x1, x1, #0x0
 1e4:	str	x19, [sp, #16]
 1e8:	mov	x19, x0
 1ec:	stp	x4, x3, [sp, #32]
 1f0:	bl	e0 <ctf_label_iter>
 1f4:	tbnz	w0, #31, 204 <ctf_label_info+0x3c>
 1f8:	cmp	w0, #0x1
 1fc:	b.ne	210 <ctf_label_info+0x48>  // b.any
 200:	mov	w0, #0x0                   	// #0
 204:	ldr	x19, [sp, #16]
 208:	ldp	x29, x30, [sp], #48
 20c:	ret
 210:	mov	x0, x19
 214:	mov	w1, #0x408                 	// #1032
 218:	bl	0 <ctf_set_errno>
 21c:	ldr	x19, [sp, #16]
 220:	ldp	x29, x30, [sp], #48
 224:	ret

ctf-link.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_arc_close_thunk>:
       0:	b	0 <ctf_arc_close>
       4:	nop

0000000000000008 <ctf_file_close_thunk>:
       8:	b	0 <ctf_file_close>
       c:	nop

0000000000000010 <ctf_create_per_cu>:
      10:	stp	x29, x30, [sp, #-80]!
      14:	mov	x29, sp
      18:	stp	x19, x20, [sp, #16]
      1c:	mov	x19, x0
      20:	ldr	x0, [x0, #672]
      24:	stp	x21, x22, [sp, #32]
      28:	mov	x22, x1
      2c:	stp	x23, x24, [sp, #48]
      30:	mov	x23, x2
      34:	cbz	x0, 88 <ctf_create_per_cu+0x78>
      38:	bl	0 <ctf_dynhash_lookup>
      3c:	mov	x21, x0
      40:	cbz	x0, 70 <ctf_create_per_cu+0x60>
      44:	ldr	x0, [x19, #656]
      48:	mov	x1, x21
      4c:	bl	0 <ctf_dynhash_lookup>
      50:	mov	x20, x0
      54:	cbz	x0, a0 <ctf_create_per_cu+0x90>
      58:	mov	x0, x20
      5c:	ldp	x19, x20, [sp, #16]
      60:	ldp	x21, x22, [sp, #32]
      64:	ldp	x23, x24, [sp, #48]
      68:	ldp	x29, x30, [sp], #80
      6c:	ret
      70:	ldr	x0, [x19, #672]
      74:	mov	x1, x23
      78:	bl	0 <ctf_dynhash_lookup>
      7c:	mov	x21, x0
      80:	cbnz	x0, 44 <ctf_create_per_cu+0x34>
      84:	nop
      88:	ldr	x0, [x19, #656]
      8c:	mov	x21, x22
      90:	mov	x1, x21
      94:	bl	0 <ctf_dynhash_lookup>
      98:	mov	x20, x0
      9c:	cbnz	x0, 58 <ctf_create_per_cu+0x48>
      a0:	add	x0, sp, #0x4c
      a4:	bl	0 <ctf_create>
      a8:	mov	x24, x0
      ac:	cbz	x0, 138 <ctf_create_per_cu+0x128>
      b0:	mov	x0, x21
      b4:	bl	0 <strdup>
      b8:	mov	x21, x0
      bc:	cbz	x0, 118 <ctf_create_per_cu+0x108>
      c0:	mov	x1, x0
      c4:	mov	x2, x24
      c8:	ldr	x0, [x19, #656]
      cc:	bl	0 <ctf_dynhash_insert>
      d0:	tbnz	w0, #31, 118 <ctf_create_per_cu+0x108>
      d4:	mov	x1, x19
      d8:	mov	x0, x24
      dc:	bl	0 <ctf_import>
      e0:	mov	x20, x24
      e4:	mov	x1, x23
      e8:	mov	x0, x24
      ec:	bl	0 <ctf_cuname_set>
      f0:	mov	x0, x24
      f4:	adrp	x1, 0 <_CTF_SECTION>
      f8:	add	x1, x1, #0x0
      fc:	bl	0 <ctf_parent_name_set>
     100:	mov	x0, x20
     104:	ldp	x19, x20, [sp, #16]
     108:	ldp	x21, x22, [sp, #32]
     10c:	ldp	x23, x24, [sp, #48]
     110:	ldp	x29, x30, [sp], #80
     114:	ret
     118:	mov	x0, x21
     11c:	bl	0 <free>
     120:	mov	x0, x24
     124:	bl	0 <ctf_file_close>
     128:	mov	x0, x19
     12c:	mov	w1, #0xc                   	// #12
     130:	bl	0 <ctf_set_errno>
     134:	b	58 <ctf_create_per_cu+0x48>
     138:	ldr	w0, [sp, #76]
     13c:	bl	0 <ctf_errmsg>
     140:	mov	x3, x0
     144:	mov	x1, x23
     148:	mov	x2, x22
     14c:	adrp	x0, 0 <ctf_arc_close_thunk>
     150:	add	x0, x0, #0x0
     154:	bl	0 <ctf_dprintf>
     158:	ldr	w1, [sp, #76]
     15c:	mov	x0, x19
     160:	bl	0 <ctf_set_errno>
     164:	b	58 <ctf_create_per_cu+0x48>

0000000000000168 <ctf_change_parent_name>:
     168:	mov	x0, x1
     16c:	mov	x1, x2
     170:	b	0 <ctf_parent_name_set>
     174:	nop

0000000000000178 <empty_link_type_mapping>:
     178:	ldr	x0, [x1, #664]
     17c:	cbz	x0, 184 <empty_link_type_mapping+0xc>
     180:	b	0 <ctf_dynhash_empty>
     184:	ret

0000000000000188 <ctf_link_one_input_archive_member>:
     188:	stp	x29, x30, [sp, #-48]!
     18c:	mov	x29, sp
     190:	stp	x19, x20, [sp, #16]
     194:	mov	x20, x1
     198:	mov	x19, x2
     19c:	stp	x21, x22, [sp, #32]
     1a0:	mov	x21, x0
     1a4:	mov	x0, x1
     1a8:	adrp	x1, 0 <_CTF_SECTION>
     1ac:	add	x1, x1, #0x0
     1b0:	bl	0 <strcmp>
     1b4:	cbnz	w0, 280 <ctf_link_one_input_archive_member+0xf8>
     1b8:	ldr	w1, [x19, #48]
     1bc:	cbz	w1, 1d0 <ctf_link_one_input_archive_member+0x48>
     1c0:	ldp	x19, x20, [sp, #16]
     1c4:	ldp	x21, x22, [sp, #32]
     1c8:	ldp	x29, x30, [sp], #48
     1cc:	ret
     1d0:	adrp	x22, 0 <ctf_arc_close_thunk>
     1d4:	add	x22, x22, #0x0
     1d8:	mov	x0, x22
     1dc:	bl	0 <strdup>
     1e0:	str	x0, [x19, #40]
     1e4:	cbz	x0, 2b4 <ctf_link_one_input_archive_member+0x12c>
     1e8:	ldr	x1, [x19, #8]
     1ec:	bl	0 <ctf_str_append>
     1f0:	cbz	x0, 2c4 <ctf_link_one_input_archive_member+0x13c>
     1f4:	str	x0, [x19, #40]
     1f8:	str	x20, [x19, #32]
     1fc:	mov	x1, x22
     200:	mov	x0, x20
     204:	mov	x2, #0x5                   	// #5
     208:	bl	0 <strncmp>
     20c:	cbnz	w0, 218 <ctf_link_one_input_archive_member+0x90>
     210:	add	x20, x20, #0x5
     214:	str	x20, [x19, #32]
     218:	str	x21, [x19, #16]
     21c:	adrp	x1, 0 <ctf_arc_close_thunk>
     220:	mov	x2, x19
     224:	add	x1, x1, #0x0
     228:	mov	x0, x21
     22c:	bl	0 <ctf_type_iter_all>
     230:	tbz	w0, #31, 248 <ctf_link_one_input_archive_member+0xc0>
     234:	ldr	x0, [x19, #40]
     238:	str	wzr, [x19, #56]
     23c:	bl	0 <free>
     240:	mov	w0, #0xffffffff            	// #-1
     244:	b	1c0 <ctf_link_one_input_archive_member+0x38>
     248:	mov	x2, x19
     24c:	mov	x0, x21
     250:	adrp	x1, 0 <ctf_arc_close_thunk>
     254:	add	x1, x1, #0x0
     258:	bl	0 <ctf_variable_iter>
     25c:	mov	w20, w0
     260:	ldr	x0, [x19, #40]
     264:	str	wzr, [x19, #56]
     268:	bl	0 <free>
     26c:	asr	w0, w20, #31
     270:	ldp	x19, x20, [sp, #16]
     274:	ldp	x21, x22, [sp, #32]
     278:	ldp	x29, x30, [sp], #48
     27c:	ret
     280:	mov	x0, x20
     284:	bl	0 <strdup>
     288:	ldr	x1, [x19, #24]
     28c:	str	x0, [x19, #40]
     290:	mov	x0, x21
     294:	bl	0 <ctf_import>
     298:	mov	w0, #0x1                   	// #1
     29c:	str	w0, [x19, #56]
     2a0:	ldr	x0, [x19, #40]
     2a4:	cbz	x0, 2b4 <ctf_link_one_input_archive_member+0x12c>
     2a8:	adrp	x22, 0 <ctf_arc_close_thunk>
     2ac:	add	x22, x22, #0x0
     2b0:	b	1f8 <ctf_link_one_input_archive_member+0x70>
     2b4:	mov	x0, x21
     2b8:	mov	w1, #0xc                   	// #12
     2bc:	bl	0 <ctf_set_errno>
     2c0:	b	1c0 <ctf_link_one_input_archive_member+0x38>
     2c4:	ldr	x0, [x19, #40]
     2c8:	bl	0 <free>
     2cc:	b	2a0 <ctf_link_one_input_archive_member+0x118>

00000000000002d0 <ctf_link_one_type>:
     2d0:	stp	x29, x30, [sp, #-64]!
     2d4:	mov	x29, sp
     2d8:	stp	x19, x20, [sp, #16]
     2dc:	mov	x19, x2
     2e0:	ldr	w20, [x2, #52]
     2e4:	cbnz	w20, 394 <ctf_link_one_type+0xc4>
     2e8:	ldr	w1, [x2, #56]
     2ec:	stp	x21, x22, [sp, #32]
     2f0:	mov	x21, x0
     2f4:	ldr	x0, [x2]
     2f8:	cbz	w1, 338 <ctf_link_one_type+0x68>
     2fc:	ldr	x1, [x19, #8]
     300:	ldr	x2, [x19, #32]
     304:	bl	10 <ctf_create_per_cu>
     308:	mov	x22, x0
     30c:	cbz	x0, 444 <ctf_link_one_type+0x174>
     310:	ldr	x1, [x19, #16]
     314:	mov	x2, x21
     318:	bl	0 <ctf_add_type>
     31c:	cmn	x0, #0x1
     320:	b.eq	3c0 <ctf_link_one_type+0xf0>  // b.none
     324:	ldp	x21, x22, [sp, #32]
     328:	mov	w0, w20
     32c:	ldp	x19, x20, [sp, #16]
     330:	ldp	x29, x30, [sp], #64
     334:	ret
     338:	ldr	x1, [x19, #16]
     33c:	mov	x2, x21
     340:	bl	0 <ctf_add_type>
     344:	cmn	x0, #0x1
     348:	b.ne	324 <ctf_link_one_type+0x54>  // b.any
     34c:	ldr	x0, [x19]
     350:	bl	0 <ctf_errno>
     354:	cmp	w0, #0x411
     358:	b.eq	430 <ctf_link_one_type+0x160>  // b.none
     35c:	cmp	w0, #0x41b
     360:	b.eq	324 <ctf_link_one_type+0x54>  // b.none
     364:	ldr	x22, [x19, #8]
     368:	ldr	x19, [x19, #40]
     36c:	bl	0 <ctf_errmsg>
     370:	mov	x3, x22
     374:	mov	x4, x0
     378:	mov	x1, x21
     37c:	mov	x2, x19
     380:	adrp	x0, 0 <ctf_arc_close_thunk>
     384:	add	x0, x0, #0x0
     388:	bl	0 <ctf_dprintf>
     38c:	ldp	x21, x22, [sp, #32]
     390:	b	328 <ctf_link_one_type+0x58>
     394:	adrp	x0, 0 <ctf_arc_close_thunk>
     398:	add	x0, x0, #0x0
     39c:	bl	0 <ctf_dprintf>
     3a0:	ldr	x0, [x19]
     3a4:	mov	w1, #0x419                 	// #1049
     3a8:	bl	0 <ctf_set_errno>
     3ac:	mov	w20, w0
     3b0:	mov	w0, w20
     3b4:	ldp	x19, x20, [sp, #16]
     3b8:	ldp	x29, x30, [sp], #64
     3bc:	ret
     3c0:	mov	x0, x22
     3c4:	bl	0 <ctf_errno>
     3c8:	mov	w22, w0
     3cc:	cmp	w0, #0x41b
     3d0:	b.eq	324 <ctf_link_one_type+0x54>  // b.none
     3d4:	stp	x23, x24, [sp, #48]
     3d8:	ldr	x24, [x19, #8]
     3dc:	ldr	x23, [x19, #40]
     3e0:	bl	0 <ctf_errmsg>
     3e4:	mov	x3, x24
     3e8:	mov	x5, x0
     3ec:	mov	x1, x21
     3f0:	mov	x4, x23
     3f4:	mov	x2, x23
     3f8:	adrp	x0, 0 <ctf_arc_close_thunk>
     3fc:	add	x0, x0, #0x0
     400:	bl	0 <ctf_dprintf>
     404:	cmp	w22, #0x411
     408:	b.eq	418 <ctf_link_one_type+0x148>  // b.none
     40c:	ldp	x21, x22, [sp, #32]
     410:	ldp	x23, x24, [sp, #48]
     414:	b	328 <ctf_link_one_type+0x58>
     418:	ldr	x0, [x19]
     41c:	mov	w1, #0x0                   	// #0
     420:	bl	0 <ctf_set_errno>
     424:	ldp	x21, x22, [sp, #32]
     428:	ldp	x23, x24, [sp, #48]
     42c:	b	328 <ctf_link_one_type+0x58>
     430:	ldr	x0, [x19]
     434:	mov	w1, #0x0                   	// #0
     438:	bl	0 <ctf_set_errno>
     43c:	ldr	x0, [x19]
     440:	b	2fc <ctf_link_one_type+0x2c>
     444:	mov	w20, #0xffffffff            	// #-1
     448:	ldp	x21, x22, [sp, #32]
     44c:	b	328 <ctf_link_one_type+0x58>

0000000000000450 <ctf_link_intern_extern_string>:
     450:	stp	x29, x30, [sp, #-32]!
     454:	mov	x0, x1
     458:	mov	x29, sp
     45c:	ldr	w3, [x1, #552]
     460:	ldr	x1, [x2]
     464:	str	x19, [sp, #16]
     468:	mov	x19, x2
     46c:	ldr	w2, [x2, #8]
     470:	orr	w3, w3, #0x4
     474:	str	w3, [x0, #552]
     478:	bl	0 <ctf_str_add_external>
     47c:	cbnz	w0, 488 <ctf_link_intern_extern_string+0x38>
     480:	mov	w0, #0xc                   	// #12
     484:	str	w0, [x19, #12]
     488:	ldr	x19, [sp, #16]
     48c:	ldp	x29, x30, [sp], #32
     490:	ret
     494:	nop

0000000000000498 <ctf_accumulate_archive_names>:
     498:	stp	x29, x30, [sp, #-64]!
     49c:	mov	x29, sp
     4a0:	stp	x19, x20, [sp, #16]
     4a4:	mov	x20, x1
     4a8:	mov	x19, x2
     4ac:	ldr	x1, [x2, #24]
     4b0:	stp	x23, x24, [sp, #48]
     4b4:	mov	x23, x0
     4b8:	ldr	x0, [x2]
     4bc:	add	x1, x1, #0x1
     4c0:	str	x1, [x2, #24]
     4c4:	lsl	x1, x1, #3
     4c8:	bl	0 <realloc>
     4cc:	cbz	x0, 584 <ctf_accumulate_archive_names+0xec>
     4d0:	stp	x21, x22, [sp, #32]
     4d4:	mov	x21, x0
     4d8:	ldp	x0, x1, [x19, #16]
     4dc:	lsl	x1, x1, #3
     4e0:	bl	0 <realloc>
     4e4:	mov	x22, x0
     4e8:	cbz	x0, 55c <ctf_accumulate_archive_names+0xc4>
     4ec:	ldr	x3, [x20, #680]
     4f0:	cbz	x3, 52c <ctf_accumulate_archive_names+0x94>
     4f4:	ldr	x2, [x20, #688]
     4f8:	mov	x1, x23
     4fc:	mov	x0, x20
     500:	blr	x3
     504:	mov	x24, x0
     508:	cbz	x0, 52c <ctf_accumulate_archive_names+0x94>
     50c:	ldp	x0, x1, [x19, #32]
     510:	add	x1, x1, #0x1
     514:	str	x1, [x19, #40]
     518:	lsl	x1, x1, #3
     51c:	bl	0 <realloc>
     520:	cbz	x0, 5a8 <ctf_accumulate_archive_names+0x110>
     524:	mov	x23, x24
     528:	str	x0, [x19, #32]
     52c:	ldr	x2, [x19, #24]
     530:	str	x21, [x19]
     534:	lsl	x2, x2, #3
     538:	sub	x2, x2, #0x8
     53c:	str	x23, [x21, x2]
     540:	ldp	x23, x24, [sp, #48]
     544:	str	x22, [x19, #16]
     548:	str	x20, [x22, x2]
     54c:	ldp	x19, x20, [sp, #16]
     550:	ldp	x21, x22, [sp, #32]
     554:	ldp	x29, x30, [sp], #64
     558:	ret
     55c:	ldr	x2, [x19, #24]
     560:	mov	w1, #0xc                   	// #12
     564:	ldr	x0, [x19, #8]
     568:	sub	x2, x2, #0x1
     56c:	str	x2, [x19, #24]
     570:	ldp	x19, x20, [sp, #16]
     574:	ldp	x21, x22, [sp, #32]
     578:	ldp	x23, x24, [sp, #48]
     57c:	ldp	x29, x30, [sp], #64
     580:	b	0 <ctf_set_errno>
     584:	ldr	x2, [x19, #24]
     588:	mov	w1, #0xc                   	// #12
     58c:	ldp	x23, x24, [sp, #48]
     590:	sub	x2, x2, #0x1
     594:	str	x2, [x19, #24]
     598:	ldr	x0, [x19, #8]
     59c:	ldp	x19, x20, [sp, #16]
     5a0:	ldp	x29, x30, [sp], #64
     5a4:	b	0 <ctf_set_errno>
     5a8:	ldr	x2, [x19, #40]
     5ac:	mov	w1, #0xc                   	// #12
     5b0:	ldr	x0, [x19, #8]
     5b4:	sub	x2, x2, #0x1
     5b8:	str	x2, [x19, #40]
     5bc:	b	570 <ctf_accumulate_archive_names+0xd8>

00000000000005c0 <ctf_link_one_input_archive>:
     5c0:	stp	x29, x30, [sp, #-48]!
     5c4:	mov	x3, x0
     5c8:	mov	x0, x1
     5cc:	mov	x29, sp
     5d0:	stp	x19, x20, [sp, #16]
     5d4:	mov	x19, x2
     5d8:	mov	x20, x1
     5dc:	add	x2, sp, #0x2c
     5e0:	mov	x1, #0x0                   	// #0
     5e4:	str	x3, [x19, #8]
     5e8:	str	wzr, [x19, #48]
     5ec:	bl	0 <ctf_arc_open_by_name>
     5f0:	str	x0, [x19, #24]
     5f4:	cbz	x0, 698 <ctf_link_one_input_archive+0xd8>
     5f8:	adrp	x1, 0 <_CTF_SECTION>
     5fc:	mov	x2, x19
     600:	add	x1, x1, #0x0
     604:	bl	188 <ctf_link_one_input_archive_member>
     608:	tbnz	w0, #31, 6d0 <ctf_link_one_input_archive+0x110>
     60c:	mov	w0, #0x1                   	// #1
     610:	str	w0, [x19, #48]
     614:	adrp	x1, 0 <ctf_arc_close_thunk>
     618:	mov	x2, x19
     61c:	add	x1, x1, #0x0
     620:	mov	x0, x20
     624:	bl	0 <ctf_archive_iter>
     628:	tbnz	w0, #31, 674 <ctf_link_one_input_archive+0xb4>
     62c:	ldr	x0, [x19]
     630:	mov	w1, #0x0                   	// #0
     634:	bl	0 <ctf_set_errno>
     638:	ldr	x0, [x19, #24]
     63c:	bl	0 <ctf_file_close>
     640:	ldr	x2, [x19]
     644:	ldr	x0, [x2, #664]
     648:	cbz	x0, 654 <ctf_link_one_input_archive+0x94>
     64c:	bl	0 <ctf_dynhash_empty>
     650:	ldr	x2, [x19]
     654:	adrp	x1, 0 <ctf_arc_close_thunk>
     658:	ldr	x0, [x2, #656]
     65c:	add	x1, x1, #0x0
     660:	mov	x2, #0x0                   	// #0
     664:	bl	0 <ctf_dynhash_iter>
     668:	ldp	x19, x20, [sp, #16]
     66c:	ldp	x29, x30, [sp], #48
     670:	ret
     674:	ldp	x0, x20, [x19]
     678:	bl	0 <ctf_errno>
     67c:	bl	0 <ctf_errmsg>
     680:	mov	x2, x0
     684:	mov	x1, x20
     688:	adrp	x0, 0 <ctf_arc_close_thunk>
     68c:	add	x0, x0, #0x0
     690:	bl	0 <ctf_dprintf>
     694:	b	638 <ctf_link_one_input_archive+0x78>
     698:	ldr	w2, [sp, #44]
     69c:	cmp	w2, #0x415
     6a0:	b.eq	5f8 <ctf_link_one_input_archive+0x38>  // b.none
     6a4:	ldr	x19, [x19, #8]
     6a8:	mov	w0, w2
     6ac:	bl	0 <ctf_errmsg>
     6b0:	mov	x2, x0
     6b4:	mov	x1, x19
     6b8:	adrp	x0, 0 <ctf_arc_close_thunk>
     6bc:	add	x0, x0, #0x0
     6c0:	bl	0 <ctf_dprintf>
     6c4:	ldp	x19, x20, [sp, #16]
     6c8:	ldp	x29, x30, [sp], #48
     6cc:	ret
     6d0:	ldr	x0, [x19, #24]
     6d4:	bl	0 <ctf_file_close>
     6d8:	ldp	x19, x20, [sp, #16]
     6dc:	ldp	x29, x30, [sp], #48
     6e0:	ret
     6e4:	nop

00000000000006e8 <ctf_add_type_mapping>:
     6e8:	stp	x29, x30, [sp, #-48]!
     6ec:	mov	x29, sp
     6f0:	stp	x19, x20, [sp, #16]
     6f4:	mov	x19, x2
     6f8:	stp	x21, x22, [sp, #32]
     6fc:	mov	x21, x0
     700:	ldr	w22, [x0, #544]
     704:	cmp	x22, x1
     708:	b.cc	71c <ctf_add_type_mapping+0x34>  // b.lo, b.ul, b.last
     70c:	ldr	x0, [x0, #512]
     710:	cbz	x0, 71c <ctf_add_type_mapping+0x34>
     714:	ldr	w22, [x0, #544]
     718:	mov	x21, x0
     71c:	ldr	w20, [x19, #544]
     720:	and	x22, x1, x22
     724:	cmp	x20, x3
     728:	b.cc	73c <ctf_add_type_mapping+0x54>  // b.lo, b.ul, b.last
     72c:	ldr	x0, [x19, #512]
     730:	cbz	x0, 73c <ctf_add_type_mapping+0x54>
     734:	ldr	w20, [x0, #544]
     738:	mov	x19, x0
     73c:	ldr	x0, [x19, #664]
     740:	and	x20, x3, x20
     744:	cbz	x0, 778 <ctf_add_type_mapping+0x90>
     748:	mov	x1, #0x10                  	// #16
     74c:	mov	x0, #0x1                   	// #1
     750:	bl	0 <calloc>
     754:	mov	x1, x0
     758:	cbz	x0, 7a0 <ctf_add_type_mapping+0xb8>
     75c:	mov	x2, x20
     760:	ldr	x0, [x19, #664]
     764:	ldp	x19, x20, [sp, #16]
     768:	stp	x21, x22, [x1]
     76c:	ldp	x21, x22, [sp, #32]
     770:	ldp	x29, x30, [sp], #48
     774:	b	0 <ctf_dynhash_insert>
     778:	adrp	x2, 0 <free>
     77c:	adrp	x1, 0 <ctf_hash_eq_type_mapping_key>
     780:	add	x2, x2, #0x0
     784:	add	x1, x1, #0x0
     788:	adrp	x0, 0 <ctf_hash_type_mapping_key>
     78c:	mov	x3, #0x0                   	// #0
     790:	add	x0, x0, #0x0
     794:	bl	0 <ctf_dynhash_create>
     798:	str	x0, [x19, #664]
     79c:	cbnz	x0, 748 <ctf_add_type_mapping+0x60>
     7a0:	ldp	x19, x20, [sp, #16]
     7a4:	ldp	x21, x22, [sp, #32]
     7a8:	ldp	x29, x30, [sp], #48
     7ac:	ret

00000000000007b0 <ctf_type_mapping>:
     7b0:	stp	x29, x30, [sp, #-64]!
     7b4:	mov	x3, x0
     7b8:	mov	x29, sp
     7bc:	stp	x19, x20, [sp, #16]
     7c0:	mov	x19, x2
     7c4:	ldr	w2, [x0, #544]
     7c8:	ldr	x20, [x19]
     7cc:	str	x21, [sp, #32]
     7d0:	cmp	x2, x1
     7d4:	b.cc	7e8 <ctf_type_mapping+0x38>  // b.lo, b.ul, b.last
     7d8:	ldr	x0, [x0, #512]
     7dc:	cbz	x0, 7e8 <ctf_type_mapping+0x38>
     7e0:	ldr	w2, [x0, #544]
     7e4:	mov	x3, x0
     7e8:	ldr	x0, [x20, #664]
     7ec:	and	x1, x1, x2
     7f0:	stp	x3, x1, [sp, #48]
     7f4:	cbz	x0, 854 <ctf_type_mapping+0xa4>
     7f8:	add	x21, sp, #0x30
     7fc:	mov	x1, x21
     800:	bl	0 <ctf_dynhash_lookup>
     804:	cbnz	x0, 82c <ctf_type_mapping+0x7c>
     808:	ldr	x20, [x20, #512]
     80c:	cbz	x20, 880 <ctf_type_mapping+0xd0>
     810:	ldr	x2, [x20, #664]
     814:	mov	x0, #0x0                   	// #0
     818:	cbz	x2, 840 <ctf_type_mapping+0x90>
     81c:	mov	x1, x21
     820:	mov	x0, x2
     824:	bl	0 <ctf_dynhash_lookup>
     828:	cbz	x0, 840 <ctf_type_mapping+0x90>
     82c:	ldr	x1, [x20, #512]
     830:	cbz	x1, 840 <ctf_type_mapping+0x90>
     834:	ldr	w1, [x20, #544]
     838:	add	w1, w1, #0x1
     83c:	orr	x0, x0, x1
     840:	str	x20, [x19]
     844:	ldp	x19, x20, [sp, #16]
     848:	ldr	x21, [sp, #32]
     84c:	ldp	x29, x30, [sp], #64
     850:	ret
     854:	ldr	x20, [x20, #512]
     858:	cbz	x20, 880 <ctf_type_mapping+0xd0>
     85c:	ldr	x2, [x20, #664]
     860:	add	x21, sp, #0x30
     864:	mov	x0, #0x0                   	// #0
     868:	cbz	x2, 840 <ctf_type_mapping+0x90>
     86c:	mov	x1, x21
     870:	mov	x0, x2
     874:	bl	0 <ctf_dynhash_lookup>
     878:	cbnz	x0, 82c <ctf_type_mapping+0x7c>
     87c:	b	840 <ctf_type_mapping+0x90>
     880:	mov	x0, #0x0                   	// #0
     884:	ldp	x19, x20, [sp, #16]
     888:	ldr	x21, [sp, #32]
     88c:	ldp	x29, x30, [sp], #64
     890:	ret
     894:	nop

0000000000000898 <ctf_link_one_variable>:
     898:	stp	x29, x30, [sp, #-80]!
     89c:	mov	x29, sp
     8a0:	stp	x19, x20, [sp, #16]
     8a4:	mov	x19, x2
     8a8:	add	x2, sp, #0x48
     8ac:	stp	x21, x22, [sp, #32]
     8b0:	mov	x22, x0
     8b4:	ldr	x3, [x19]
     8b8:	str	x3, [sp, #72]
     8bc:	ldr	x0, [x19, #16]
     8c0:	str	x23, [sp, #48]
     8c4:	mov	x23, x1
     8c8:	bl	7b0 <ctf_type_mapping>
     8cc:	cbz	x0, 940 <ctf_link_one_variable+0xa8>
     8d0:	mov	x20, x0
     8d4:	ldr	x0, [x19]
     8d8:	ldr	x1, [sp, #72]
     8dc:	cmp	x0, x1
     8e0:	b.eq	9d8 <ctf_link_one_variable+0x140>  // b.none
     8e4:	ldr	x1, [x19, #8]
     8e8:	ldr	x2, [x19, #32]
     8ec:	bl	10 <ctf_create_per_cu>
     8f0:	mov	x21, x0
     8f4:	cbz	x0, 9c0 <ctf_link_one_variable+0x128>
     8f8:	ldr	x0, [x21, #592]
     8fc:	mov	x1, x22
     900:	bl	0 <ctf_dynhash_lookup>
     904:	cbz	x0, 990 <ctf_link_one_variable+0xf8>
     908:	ldr	x0, [x0, #24]
     90c:	cmp	x20, x0
     910:	b.ne	92c <ctf_link_one_variable+0x94>  // b.any
     914:	mov	w0, #0x0                   	// #0
     918:	ldp	x19, x20, [sp, #16]
     91c:	ldp	x21, x22, [sp, #32]
     920:	ldr	x23, [sp, #48]
     924:	ldp	x29, x30, [sp], #80
     928:	ret
     92c:	mov	x1, x22
     930:	adrp	x0, 0 <ctf_arc_close_thunk>
     934:	add	x0, x0, #0x0
     938:	bl	0 <ctf_dprintf>
     93c:	b	914 <ctf_link_one_variable+0x7c>
     940:	ldp	x0, x1, [x19]
     944:	ldr	x2, [x19, #32]
     948:	bl	10 <ctf_create_per_cu>
     94c:	mov	x21, x0
     950:	cbz	x0, 9c0 <ctf_link_one_variable+0x128>
     954:	ldr	x0, [x19, #16]
     958:	add	x2, sp, #0x48
     95c:	mov	x1, x23
     960:	str	x21, [sp, #72]
     964:	bl	7b0 <ctf_type_mapping>
     968:	mov	x20, x0
     96c:	cbnz	x0, 8f8 <ctf_link_one_variable+0x60>
     970:	ldr	x3, [x19, #8]
     974:	mov	x2, x22
     978:	mov	x1, x23
     97c:	adrp	x0, 0 <ctf_arc_close_thunk>
     980:	add	x0, x0, #0x0
     984:	bl	0 <ctf_dprintf>
     988:	mov	w0, #0x0                   	// #0
     98c:	b	918 <ctf_link_one_variable+0x80>
     990:	mov	x2, x20
     994:	mov	x1, x22
     998:	mov	x0, x21
     99c:	bl	0 <ctf_add_variable>
     9a0:	tbz	w0, #31, 914 <ctf_link_one_variable+0x7c>
     9a4:	ldr	x19, [x19]
     9a8:	mov	x0, x21
     9ac:	bl	0 <ctf_errno>
     9b0:	mov	w1, w0
     9b4:	mov	x0, x19
     9b8:	bl	0 <ctf_set_errno>
     9bc:	b	918 <ctf_link_one_variable+0x80>
     9c0:	mov	w0, #0xffffffff            	// #-1
     9c4:	ldp	x19, x20, [sp, #16]
     9c8:	ldp	x21, x22, [sp, #32]
     9cc:	ldr	x23, [sp, #48]
     9d0:	ldp	x29, x30, [sp], #80
     9d4:	ret
     9d8:	ldr	x0, [x0, #592]
     9dc:	mov	x1, x22
     9e0:	bl	0 <ctf_dynhash_lookup>
     9e4:	mov	x21, x0
     9e8:	cbz	x0, a20 <ctf_link_one_variable+0x188>
     9ec:	ldr	x0, [x0, #24]
     9f0:	cmp	x20, x0
     9f4:	b.ne	a08 <ctf_link_one_variable+0x170>  // b.any
     9f8:	cmp	x0, x23
     9fc:	b.eq	914 <ctf_link_one_variable+0x7c>  // b.none
     a00:	ldr	x0, [x19]
     a04:	b	8e4 <ctf_link_one_variable+0x4c>
     a08:	mov	x1, x22
     a0c:	adrp	x0, 0 <ctf_arc_close_thunk>
     a10:	add	x0, x0, #0x0
     a14:	bl	0 <ctf_dprintf>
     a18:	ldr	x0, [x21, #24]
     a1c:	b	9f8 <ctf_link_one_variable+0x160>
     a20:	ldr	x0, [sp, #72]
     a24:	mov	x2, x20
     a28:	mov	x1, x22
     a2c:	bl	0 <ctf_add_variable>
     a30:	tbz	w0, #31, 914 <ctf_link_one_variable+0x7c>
     a34:	ldr	x0, [sp, #72]
     a38:	ldr	x19, [x19]
     a3c:	bl	0 <ctf_errno>
     a40:	mov	w1, w0
     a44:	mov	x0, x19
     a48:	bl	0 <ctf_set_errno>
     a4c:	b	918 <ctf_link_one_variable+0x80>

0000000000000a50 <ctf_link_add_ctf>:
     a50:	stp	x29, x30, [sp, #-64]!
     a54:	mov	x29, sp
     a58:	stp	x21, x22, [sp, #32]
     a5c:	mov	x21, x1
     a60:	ldr	x1, [x0, #656]
     a64:	cbnz	x1, ac0 <ctf_link_add_ctf+0x70>
     a68:	str	x23, [sp, #48]
     a6c:	mov	x22, x2
     a70:	ldr	x23, [x0, #648]
     a74:	stp	x19, x20, [sp, #16]
     a78:	mov	x19, x0
     a7c:	cbz	x23, b08 <ctf_link_add_ctf+0xb8>
     a80:	mov	x0, x22
     a84:	bl	0 <strdup>
     a88:	mov	x20, x0
     a8c:	cbz	x0, ad4 <ctf_link_add_ctf+0x84>
     a90:	mov	x1, x20
     a94:	mov	x2, x21
     a98:	mov	x0, x23
     a9c:	bl	0 <ctf_dynhash_insert>
     aa0:	mov	w1, w0
     aa4:	mov	w0, #0x0                   	// #0
     aa8:	tbnz	w1, #31, ad4 <ctf_link_add_ctf+0x84>
     aac:	ldp	x19, x20, [sp, #16]
     ab0:	ldp	x21, x22, [sp, #32]
     ab4:	ldr	x23, [sp, #48]
     ab8:	ldp	x29, x30, [sp], #64
     abc:	ret
     ac0:	mov	w1, #0x3f5                 	// #1013
     ac4:	bl	0 <ctf_set_errno>
     ac8:	ldp	x21, x22, [sp, #32]
     acc:	ldp	x29, x30, [sp], #64
     ad0:	ret
     ad4:	ldr	x0, [x19, #648]
     ad8:	bl	0 <free>
     adc:	str	xzr, [x19, #648]
     ae0:	mov	x0, x20
     ae4:	bl	0 <free>
     ae8:	mov	x0, x19
     aec:	mov	w1, #0xc                   	// #12
     af0:	bl	0 <ctf_set_errno>
     af4:	ldp	x19, x20, [sp, #16]
     af8:	ldp	x21, x22, [sp, #32]
     afc:	ldr	x23, [sp, #48]
     b00:	ldp	x29, x30, [sp], #64
     b04:	ret
     b08:	adrp	x3, 0 <ctf_arc_close_thunk>
     b0c:	adrp	x2, 0 <free>
     b10:	add	x3, x3, #0x0
     b14:	add	x2, x2, #0x0
     b18:	adrp	x1, 0 <ctf_hash_eq_string>
     b1c:	adrp	x0, 0 <ctf_hash_string>
     b20:	add	x1, x1, #0x0
     b24:	add	x0, x0, #0x0
     b28:	bl	0 <ctf_dynhash_create>
     b2c:	mov	x20, x0
     b30:	str	x20, [x19, #648]
     b34:	mov	x0, #0x0                   	// #0
     b38:	cbz	x20, ad8 <ctf_link_add_ctf+0x88>
     b3c:	mov	x23, x20
     b40:	b	a80 <ctf_link_add_ctf+0x30>
     b44:	nop

0000000000000b48 <ctf_link_add_cu_mapping>:
     b48:	stp	x29, x30, [sp, #-48]!
     b4c:	mov	x29, sp
     b50:	stp	x19, x20, [sp, #16]
     b54:	mov	x19, x0
     b58:	mov	x20, x2
     b5c:	ldr	x0, [x0, #672]
     b60:	str	x21, [sp, #32]
     b64:	mov	x21, x1
     b68:	cbz	x0, bd0 <ctf_link_add_cu_mapping+0x88>
     b6c:	ldr	x0, [x19, #656]
     b70:	cbz	x0, c14 <ctf_link_add_cu_mapping+0xcc>
     b74:	mov	x0, x21
     b78:	bl	0 <strdup>
     b7c:	mov	x21, x0
     b80:	mov	x0, x20
     b84:	bl	0 <strdup>
     b88:	mov	x20, x0
     b8c:	cmp	x21, #0x0
     b90:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     b94:	b.eq	c68 <ctf_link_add_cu_mapping+0x120>  // b.none
     b98:	mov	x2, x0
     b9c:	mov	x1, x0
     ba0:	mov	x0, x19
     ba4:	bl	10 <ctf_create_per_cu>
     ba8:	cbz	x0, c50 <ctf_link_add_cu_mapping+0x108>
     bac:	ldr	x0, [x19, #672]
     bb0:	mov	x2, x20
     bb4:	mov	x1, x21
     bb8:	bl	0 <ctf_dynhash_insert>
     bbc:	cbnz	w0, c44 <ctf_link_add_cu_mapping+0xfc>
     bc0:	ldp	x19, x20, [sp, #16]
     bc4:	ldr	x21, [sp, #32]
     bc8:	ldp	x29, x30, [sp], #48
     bcc:	ret
     bd0:	adrp	x3, 0 <free>
     bd4:	add	x3, x3, #0x0
     bd8:	mov	x2, x3
     bdc:	adrp	x1, 0 <ctf_hash_eq_string>
     be0:	adrp	x0, 0 <ctf_hash_string>
     be4:	add	x1, x1, #0x0
     be8:	add	x0, x0, #0x0
     bec:	bl	0 <ctf_dynhash_create>
     bf0:	str	x0, [x19, #672]
     bf4:	cbnz	x0, b6c <ctf_link_add_cu_mapping+0x24>
     bf8:	mov	x0, x19
     bfc:	mov	w1, #0xc                   	// #12
     c00:	bl	0 <ctf_set_errno>
     c04:	ldp	x19, x20, [sp, #16]
     c08:	ldr	x21, [sp, #32]
     c0c:	ldp	x29, x30, [sp], #48
     c10:	ret
     c14:	adrp	x3, 0 <ctf_arc_close_thunk>
     c18:	adrp	x2, 0 <free>
     c1c:	add	x3, x3, #0x0
     c20:	add	x2, x2, #0x0
     c24:	adrp	x1, 0 <ctf_hash_eq_string>
     c28:	adrp	x0, 0 <ctf_hash_string>
     c2c:	add	x1, x1, #0x0
     c30:	add	x0, x0, #0x0
     c34:	bl	0 <ctf_dynhash_create>
     c38:	str	x0, [x19, #656]
     c3c:	cbz	x0, bf8 <ctf_link_add_cu_mapping+0xb0>
     c40:	b	b74 <ctf_link_add_cu_mapping+0x2c>
     c44:	mov	w1, w0
     c48:	mov	x0, x19
     c4c:	bl	0 <ctf_set_errno>
     c50:	mov	x0, x21
     c54:	bl	0 <free>
     c58:	mov	x0, x20
     c5c:	bl	0 <free>
     c60:	mov	w0, #0xffffffff            	// #-1
     c64:	b	bc0 <ctf_link_add_cu_mapping+0x78>
     c68:	bl	0 <__errno_location>
     c6c:	mov	x1, x0
     c70:	mov	x0, x19
     c74:	ldr	w1, [x1]
     c78:	bl	0 <ctf_set_errno>
     c7c:	b	c50 <ctf_link_add_cu_mapping+0x108>

0000000000000c80 <ctf_link_set_memb_name_changer>:
     c80:	str	x1, [x0, #680]
     c84:	str	x2, [x0, #688]
     c88:	ret
     c8c:	nop

0000000000000c90 <ctf_link>:
     c90:	stp	x29, x30, [sp, #-96]!
     c94:	add	x2, sp, #0x28
     c98:	mov	x29, sp
     c9c:	str	x19, [sp, #16]
     ca0:	mov	x19, x0
     ca4:	stp	xzr, xzr, [sp, #40]
     ca8:	stp	xzr, xzr, [x2, #32]
     cac:	ldr	x0, [x0, #648]
     cb0:	str	w1, [sp, #84]
     cb4:	stp	xzr, xzr, [x2, #16]
     cb8:	str	x19, [sp, #32]
     cbc:	str	xzr, [x2, #48]
     cc0:	cbz	x0, cf8 <ctf_link+0x68>
     cc4:	ldr	x1, [x19, #656]
     cc8:	cbz	x1, d08 <ctf_link+0x78>
     ccc:	add	x2, sp, #0x20
     cd0:	adrp	x1, 0 <ctf_arc_close_thunk>
     cd4:	add	x1, x1, #0x0
     cd8:	bl	0 <ctf_dynhash_iter>
     cdc:	mov	x0, x19
     ce0:	bl	0 <ctf_errno>
     ce4:	cmp	w0, #0x0
     ce8:	csetm	w0, ne  // ne = any
     cec:	ldr	x19, [sp, #16]
     cf0:	ldp	x29, x30, [sp], #96
     cf4:	ret
     cf8:	mov	w0, #0x0                   	// #0
     cfc:	ldr	x19, [sp, #16]
     d00:	ldp	x29, x30, [sp], #96
     d04:	ret
     d08:	adrp	x3, 0 <ctf_arc_close_thunk>
     d0c:	adrp	x2, 0 <free>
     d10:	add	x3, x3, #0x0
     d14:	add	x2, x2, #0x0
     d18:	adrp	x1, 0 <ctf_hash_eq_string>
     d1c:	adrp	x0, 0 <ctf_hash_string>
     d20:	add	x1, x1, #0x0
     d24:	add	x0, x0, #0x0
     d28:	bl	0 <ctf_dynhash_create>
     d2c:	str	x0, [x19, #656]
     d30:	cbnz	x0, d4c <ctf_link+0xbc>
     d34:	mov	x0, x19
     d38:	mov	w1, #0xc                   	// #12
     d3c:	bl	0 <ctf_set_errno>
     d40:	ldr	x19, [sp, #16]
     d44:	ldp	x29, x30, [sp], #96
     d48:	ret
     d4c:	ldr	x0, [x19, #648]
     d50:	b	ccc <ctf_link+0x3c>
     d54:	nop

0000000000000d58 <ctf_link_add_strtab>:
     d58:	stp	x29, x30, [sp, #-96]!
     d5c:	mov	x29, sp
     d60:	stp	x19, x20, [sp, #16]
     d64:	mov	x19, x0
     d68:	mov	w20, #0x0                   	// #0
     d6c:	stp	x21, x22, [sp, #32]
     d70:	mov	x22, x1
     d74:	mov	x21, x2
     d78:	stp	x23, x24, [sp, #48]
     d7c:	adrp	x23, 0 <ctf_arc_close_thunk>
     d80:	mov	w24, #0xc                   	// #12
     d84:	add	x23, x23, #0x0
     d88:	b	dcc <ctf_link_add_strtab+0x74>
     d8c:	ldr	w4, [x19, #552]
     d90:	ldr	w2, [sp, #76]
     d94:	orr	w4, w4, #0x4
     d98:	str	w4, [x19, #552]
     d9c:	str	x3, [sp, #80]
     da0:	stp	w2, wzr, [sp, #88]
     da4:	bl	0 <ctf_str_add_external>
     da8:	cmp	w0, #0x0
     dac:	ldr	x0, [x19, #656]
     db0:	csel	w20, w20, w24, ne  // ne = any
     db4:	add	x2, sp, #0x50
     db8:	mov	x1, x23
     dbc:	bl	0 <ctf_dynhash_iter>
     dc0:	ldr	w0, [sp, #92]
     dc4:	cmp	w0, #0x0
     dc8:	csel	w20, w20, w0, eq  // eq = none
     dcc:	mov	x1, x21
     dd0:	add	x0, sp, #0x4c
     dd4:	blr	x22
     dd8:	mov	x3, x0
     ddc:	mov	x1, x3
     de0:	mov	x0, x19
     de4:	cbnz	x3, d8c <ctf_link_add_strtab+0x34>
     de8:	neg	w0, w20
     dec:	ldp	x19, x20, [sp, #16]
     df0:	ldp	x21, x22, [sp, #32]
     df4:	ldp	x23, x24, [sp, #48]
     df8:	ldp	x29, x30, [sp], #96
     dfc:	ret

0000000000000e00 <ctf_link_shuffle_syms>:
     e00:	mov	w0, #0x0                   	// #0
     e04:	ret

0000000000000e08 <ctf_link_write>:
     e08:	stp	x29, x30, [sp, #-112]!
     e0c:	mov	x29, sp
     e10:	stp	xzr, xzr, [sp, #64]
     e14:	stp	x19, x20, [sp, #16]
     e18:	mov	x20, x0
     e1c:	str	x0, [sp, #72]
     e20:	ldr	x0, [x0, #656]
     e24:	stp	x21, x22, [sp, #32]
     e28:	mov	x22, x2
     e2c:	stp	x23, x24, [sp, #48]
     e30:	mov	x23, x1
     e34:	stp	xzr, xzr, [sp, #80]
     e38:	stp	xzr, xzr, [sp, #96]
     e3c:	cbz	x0, 1008 <ctf_link_write+0x200>
     e40:	add	x2, sp, #0x40
     e44:	adrp	x1, 0 <ctf_arc_close_thunk>
     e48:	add	x1, x1, #0x0
     e4c:	bl	0 <ctf_dynhash_iter>
     e50:	mov	x0, x20
     e54:	bl	0 <ctf_errno>
     e58:	tbnz	w0, #31, 1034 <ctf_link_write+0x22c>
     e5c:	ldr	x1, [sp, #88]
     e60:	cbz	x1, 1008 <ctf_link_write+0x200>
     e64:	ldr	x0, [sp, #64]
     e68:	add	x1, x1, #0x1
     e6c:	lsl	x1, x1, #3
     e70:	bl	0 <realloc>
     e74:	mov	x21, x0
     e78:	cbz	x0, 116c <ctf_link_write+0x364>
     e7c:	ldr	x2, [sp, #88]
     e80:	mov	x1, x0
     e84:	add	x0, x0, #0x8
     e88:	str	x21, [sp, #64]
     e8c:	lsl	x2, x2, #3
     e90:	bl	0 <memmove>
     e94:	ldr	x3, [x20, #680]
     e98:	adrp	x1, 0 <_CTF_SECTION>
     e9c:	add	x1, x1, #0x0
     ea0:	str	x1, [x21]
     ea4:	mov	x21, #0x0                   	// #0
     ea8:	cbz	x3, edc <ctf_link_write+0xd4>
     eac:	ldr	x2, [x20, #688]
     eb0:	mov	x0, x20
     eb4:	blr	x3
     eb8:	mov	x21, x0
     ebc:	cbz	x0, edc <ctf_link_write+0xd4>
     ec0:	ldr	x2, [sp, #64]
     ec4:	adrp	x1, 0 <ctf_arc_close_thunk>
     ec8:	ldr	x0, [x20, #656]
     ecc:	add	x1, x1, #0x0
     ed0:	str	x21, [x2]
     ed4:	mov	x2, x21
     ed8:	bl	0 <ctf_dynhash_iter>
     edc:	ldp	x0, x1, [sp, #80]
     ee0:	add	x1, x1, #0x1
     ee4:	lsl	x1, x1, #3
     ee8:	bl	0 <realloc>
     eec:	mov	x1, x0
     ef0:	cbz	x0, 1160 <ctf_link_write+0x358>
     ef4:	ldr	x2, [sp, #88]
     ef8:	add	x0, x0, #0x8
     efc:	str	x1, [sp, #80]
     f00:	lsl	x2, x2, #3
     f04:	bl	0 <memmove>
     f08:	ldr	x0, [sp, #80]
     f0c:	str	x20, [x0]
     f10:	bl	0 <tmpfile>
     f14:	mov	x19, x0
     f18:	cbz	x0, 10fc <ctf_link_write+0x2f4>
     f1c:	bl	0 <fileno>
     f20:	ldp	x1, x2, [sp, #80]
     f24:	mov	x4, x22
     f28:	ldr	x3, [sp, #64]
     f2c:	add	x2, x2, #0x1
     f30:	bl	0 <ctf_arc_write_fd>
     f34:	tbnz	w0, #31, 1138 <ctf_link_write+0x330>
     f38:	mov	x0, x19
     f3c:	mov	w2, #0x2                   	// #2
     f40:	mov	x1, #0x0                   	// #0
     f44:	bl	0 <fseek>
     f48:	tbnz	w0, #31, 10c8 <ctf_link_write+0x2c0>
     f4c:	mov	x0, x19
     f50:	bl	0 <ftell>
     f54:	mov	x24, x0
     f58:	tbnz	x0, #63, 111c <ctf_link_write+0x314>
     f5c:	mov	x0, x19
     f60:	mov	w2, #0x0                   	// #0
     f64:	mov	x1, #0x0                   	// #0
     f68:	bl	0 <fseek>
     f6c:	tbnz	w0, #31, 1150 <ctf_link_write+0x348>
     f70:	mov	x0, x24
     f74:	bl	0 <malloc>
     f78:	mov	x22, x0
     f7c:	cbnz	x0, fa8 <ctf_link_write+0x1a0>
     f80:	b	1178 <ctf_link_write+0x370>
     f84:	mov	x3, x19
     f88:	mov	x1, x24
     f8c:	mov	x0, x22
     f90:	mov	x2, #0x1                   	// #1
     f94:	bl	0 <fread>
     f98:	cbnz	x0, fb4 <ctf_link_write+0x1ac>
     f9c:	mov	x0, x19
     fa0:	bl	0 <ferror>
     fa4:	cbnz	w0, 112c <ctf_link_write+0x324>
     fa8:	mov	x0, x19
     fac:	bl	0 <feof>
     fb0:	cbz	w0, f84 <ctf_link_write+0x17c>
     fb4:	ldr	x0, [sp, #64]
     fb8:	str	x24, [x23]
     fbc:	bl	0 <free>
     fc0:	ldr	x0, [sp, #80]
     fc4:	bl	0 <free>
     fc8:	mov	x0, x21
     fcc:	bl	0 <free>
     fd0:	ldr	x0, [sp, #104]
     fd4:	cbz	x0, 101c <ctf_link_write+0x214>
     fd8:	mov	x19, #0x0                   	// #0
     fdc:	nop
     fe0:	ldr	x0, [sp, #96]
     fe4:	ldr	x0, [x0, x19, lsl #3]
     fe8:	add	x19, x19, #0x1
     fec:	bl	0 <free>
     ff0:	ldr	x0, [sp, #104]
     ff4:	cmp	x0, x19
     ff8:	b.hi	fe0 <ctf_link_write+0x1d8>  // b.pmore
     ffc:	ldr	x0, [sp, #96]
    1000:	bl	0 <free>
    1004:	b	101c <ctf_link_write+0x214>
    1008:	mov	x2, x22
    100c:	mov	x1, x23
    1010:	mov	x0, x20
    1014:	bl	0 <ctf_write_mem>
    1018:	mov	x22, x0
    101c:	mov	x0, x22
    1020:	ldp	x19, x20, [sp, #16]
    1024:	ldp	x21, x22, [sp, #32]
    1028:	ldp	x23, x24, [sp, #48]
    102c:	ldp	x29, x30, [sp], #112
    1030:	ret
    1034:	adrp	x23, 0 <ctf_arc_close_thunk>
    1038:	add	x23, x23, #0x0
    103c:	mov	x21, #0x0                   	// #0
    1040:	ldr	x0, [sp, #64]
    1044:	bl	0 <free>
    1048:	ldr	x0, [sp, #80]
    104c:	bl	0 <free>
    1050:	mov	x0, x21
    1054:	bl	0 <free>
    1058:	ldr	x0, [sp, #104]
    105c:	cbz	x0, 108c <ctf_link_write+0x284>
    1060:	mov	x19, #0x0                   	// #0
    1064:	nop
    1068:	ldr	x0, [sp, #96]
    106c:	ldr	x0, [x0, x19, lsl #3]
    1070:	add	x19, x19, #0x1
    1074:	bl	0 <free>
    1078:	ldr	x0, [sp, #104]
    107c:	cmp	x0, x19
    1080:	b.hi	1068 <ctf_link_write+0x260>  // b.pmore
    1084:	ldr	x0, [sp, #96]
    1088:	bl	0 <free>
    108c:	mov	x0, x20
    1090:	bl	0 <ctf_errno>
    1094:	bl	0 <ctf_errmsg>
    1098:	mov	x22, #0x0                   	// #0
    109c:	mov	x2, x0
    10a0:	mov	x1, x23
    10a4:	adrp	x0, 0 <ctf_arc_close_thunk>
    10a8:	add	x0, x0, #0x0
    10ac:	bl	0 <ctf_dprintf>
    10b0:	mov	x0, x22
    10b4:	ldp	x19, x20, [sp, #16]
    10b8:	ldp	x21, x22, [sp, #32]
    10bc:	ldp	x23, x24, [sp, #48]
    10c0:	ldp	x29, x30, [sp], #112
    10c4:	ret
    10c8:	adrp	x23, 0 <ctf_arc_close_thunk>
    10cc:	add	x23, x23, #0x0
    10d0:	mov	x22, #0x0                   	// #0
    10d4:	bl	0 <__errno_location>
    10d8:	mov	x1, x0
    10dc:	mov	x0, x20
    10e0:	ldr	w1, [x1]
    10e4:	bl	0 <ctf_set_errno>
    10e8:	mov	x0, x22
    10ec:	bl	0 <free>
    10f0:	mov	x0, x19
    10f4:	bl	0 <fclose>
    10f8:	b	1040 <ctf_link_write+0x238>
    10fc:	adrp	x23, 0 <ctf_arc_close_thunk>
    1100:	add	x23, x23, #0x0
    1104:	bl	0 <__errno_location>
    1108:	mov	x1, x0
    110c:	mov	x0, x20
    1110:	ldr	w1, [x1]
    1114:	bl	0 <ctf_set_errno>
    1118:	b	1040 <ctf_link_write+0x238>
    111c:	adrp	x23, 0 <ctf_arc_close_thunk>
    1120:	mov	x22, #0x0                   	// #0
    1124:	add	x23, x23, #0x0
    1128:	b	10d4 <ctf_link_write+0x2cc>
    112c:	adrp	x23, 0 <ctf_arc_close_thunk>
    1130:	add	x23, x23, #0x0
    1134:	b	10d4 <ctf_link_write+0x2cc>
    1138:	mov	w1, w0
    113c:	adrp	x23, 0 <ctf_arc_close_thunk>
    1140:	mov	x0, x20
    1144:	add	x23, x23, #0x0
    1148:	bl	0 <ctf_set_errno>
    114c:	b	10f0 <ctf_link_write+0x2e8>
    1150:	adrp	x23, 0 <ctf_arc_close_thunk>
    1154:	mov	x22, #0x0                   	// #0
    1158:	add	x23, x23, #0x0
    115c:	b	10d4 <ctf_link_write+0x2cc>
    1160:	adrp	x23, 0 <ctf_arc_close_thunk>
    1164:	add	x23, x23, #0x0
    1168:	b	1104 <ctf_link_write+0x2fc>
    116c:	adrp	x23, 0 <ctf_arc_close_thunk>
    1170:	add	x23, x23, #0x0
    1174:	b	1104 <ctf_link_write+0x2fc>
    1178:	adrp	x23, 0 <ctf_arc_close_thunk>
    117c:	add	x23, x23, #0x0
    1180:	b	10d4 <ctf_link_write+0x2cc>

ctf-lookup.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_lookup_by_name>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	adrp	x24, 0 <ctf_lookup_by_name>
  10:	add	x24, x24, #0x0
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x25, x1
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x21, x0
  28:	add	x0, x24, #0x8
  2c:	stp	x27, x28, [sp, #80]
  30:	str	x0, [sp, #96]
  34:	cbz	x25, 2e4 <ctf_lookup_by_name+0x2e4>
  38:	mov	x0, x25
  3c:	bl	0 <strlen>
  40:	ldrb	w20, [x25]
  44:	add	x22, x25, x0
  48:	cbz	w20, 1ac <ctf_lookup_by_name+0x1ac>
  4c:	bl	0 <__ctype_b_loc>
  50:	mov	x19, x25
  54:	mov	x23, x0
  58:	mov	x27, #0x0                   	// #0
  5c:	nop
  60:	ldr	x28, [x23]
  64:	b	6c <ctf_lookup_by_name+0x6c>
  68:	ldrb	w20, [x19, #1]!
  6c:	ubfiz	x0, x20, #1, #8
  70:	ldrh	w2, [x28, x0]
  74:	tbnz	w2, #13, 68 <ctf_lookup_by_name+0x68>
  78:	cmp	x19, x22
  7c:	b.eq	2d0 <ctf_lookup_by_name+0x2d0>  // b.none
  80:	add	x26, x19, #0x1
  84:	mov	x1, x24
  88:	mov	x0, x26
  8c:	bl	0 <strpbrk>
  90:	cmp	x0, #0x0
  94:	csel	x3, x0, x22, ne  // ne = any
  98:	cmp	w20, #0x2a
  9c:	b.eq	144 <ctf_lookup_by_name+0x144>  // b.none
  a0:	ldurb	w0, [x3, #-1]
  a4:	sub	x26, x3, x19
  a8:	add	w0, w0, w26
  ac:	sub	w0, w0, #0x69
  b0:	cmp	w0, #0x14
  b4:	b.hi	d0 <ctf_lookup_by_name+0xd0>  // b.pmore
  b8:	ldr	x1, [sp, #96]
  bc:	sbfiz	x0, x0, #4, #32
  c0:	add	x1, x1, x0
  c4:	ldr	x1, [x1, #8]
  c8:	cmp	x26, x1
  cc:	b.eq	28c <ctf_lookup_by_name+0x28c>  // b.none
  d0:	ldr	x1, [x21, #216]
  d4:	add	x20, x21, #0xd8
  d8:	cbz	x1, 10c <ctf_lookup_by_name+0x10c>
  dc:	nop
  e0:	ldrb	w3, [x1]
  e4:	mov	x2, x26
  e8:	mov	x0, x19
  ec:	cbz	w3, f8 <ctf_lookup_by_name+0xf8>
  f0:	bl	0 <strncmp>
  f4:	cbnz	w0, 104 <ctf_lookup_by_name+0x104>
  f8:	ldr	x0, [x20, #8]
  fc:	cmp	x26, x0
 100:	b.cs	1dc <ctf_lookup_by_name+0x1dc>  // b.hs, b.nlast
 104:	ldr	x1, [x20, #24]!
 108:	cbnz	x1, e0 <ctf_lookup_by_name+0xe0>
 10c:	mov	x0, x21
 110:	mov	w1, #0x402                 	// #1026
 114:	bl	0 <ctf_set_errno>
 118:	ldr	x21, [x21, #512]
 11c:	cbnz	x21, 34 <ctf_lookup_by_name+0x34>
 120:	mov	x27, #0xffffffffffffffff    	// #-1
 124:	mov	x0, x27
 128:	ldp	x19, x20, [sp, #16]
 12c:	ldp	x21, x22, [sp, #32]
 130:	ldp	x23, x24, [sp, #48]
 134:	ldp	x25, x26, [sp, #64]
 138:	ldp	x27, x28, [sp, #80]
 13c:	ldp	x29, x30, [sp], #112
 140:	ret
 144:	ldr	w0, [x21, #544]
 148:	ldr	x1, [x21, #448]
 14c:	and	x0, x0, x27
 150:	ldr	w0, [x1, x0, lsl #2]
 154:	cbnz	x0, 180 <ctf_lookup_by_name+0x180>
 158:	mov	x1, x27
 15c:	mov	x0, x21
 160:	bl	0 <ctf_type_resolve_unsliced>
 164:	cmn	x0, #0x1
 168:	b.eq	10c <ctf_lookup_by_name+0x10c>  // b.none
 16c:	ldr	w1, [x21, #544]
 170:	ldr	x3, [x21, #448]
 174:	and	x0, x1, x0
 178:	ldr	w0, [x3, x0, lsl #2]
 17c:	cbz	x0, 10c <ctf_lookup_by_name+0x10c>
 180:	ldr	w1, [x21, #552]
 184:	tbz	w1, #0, 1d0 <ctf_lookup_by_name+0x1d0>
 188:	ldr	w27, [x21, #544]
 18c:	mov	x19, x26
 190:	add	w27, w27, #0x1
 194:	orr	x27, x27, x0
 198:	ldrb	w20, [x19]
 19c:	cbnz	w20, 60 <ctf_lookup_by_name+0x60>
 1a0:	cmp	x27, #0x0
 1a4:	ccmp	w20, #0x0, #0x0, ne  // ne = any
 1a8:	b.eq	124 <ctf_lookup_by_name+0x124>  // b.none
 1ac:	mov	x0, x21
 1b0:	mov	w1, #0x403                 	// #1027
 1b4:	ldp	x19, x20, [sp, #16]
 1b8:	ldp	x21, x22, [sp, #32]
 1bc:	ldp	x23, x24, [sp, #48]
 1c0:	ldp	x25, x26, [sp, #64]
 1c4:	ldp	x27, x28, [sp, #80]
 1c8:	ldp	x29, x30, [sp], #112
 1cc:	b	0 <ctf_set_errno>
 1d0:	mov	x27, x0
 1d4:	mov	x19, x26
 1d8:	b	198 <ctf_lookup_by_name+0x198>
 1dc:	ldrb	w1, [x19, x0]
 1e0:	add	x27, x19, x0
 1e4:	ldrh	w0, [x28, x1, lsl #1]
 1e8:	tbnz	w0, #13, 270 <ctf_lookup_by_name+0x270>
 1ec:	mov	x0, x27
 1f0:	mov	w1, #0x2a                  	// #42
 1f4:	bl	0 <strchr>
 1f8:	cmp	x0, #0x0
 1fc:	csel	x19, x0, x22, ne  // ne = any
 200:	ldurb	w0, [x19, #-1]
 204:	ldrh	w0, [x28, x0, lsl #1]
 208:	tbz	w0, #13, 220 <ctf_lookup_by_name+0x220>
 20c:	nop
 210:	ldurb	w0, [x19, #-2]
 214:	sub	x19, x19, #0x1
 218:	ldrh	w0, [x28, x0, lsl #1]
 21c:	tbnz	w0, #13, 210 <ctf_lookup_by_name+0x210>
 220:	ldr	x1, [x21, #712]
 224:	sub	x28, x19, x27
 228:	add	x0, x28, #0x1
 22c:	cmp	x1, x0
 230:	ldr	x0, [x21, #704]
 234:	b.cc	2b4 <ctf_lookup_by_name+0x2b4>  // b.lo, b.ul, b.last
 238:	mov	x2, x28
 23c:	mov	x1, x27
 240:	bl	0 <memcpy>
 244:	ldr	x0, [x21, #704]
 248:	strb	wzr, [x0, x28]
 24c:	ldr	x2, [x21, #704]
 250:	mov	x0, x21
 254:	ldr	x1, [x20, #16]
 258:	bl	0 <ctf_lookup_by_rawhash>
 25c:	mov	x27, x0
 260:	cbz	x0, 10c <ctf_lookup_by_name+0x10c>
 264:	ldr	x0, [x20]
 268:	cbnz	x0, 198 <ctf_lookup_by_name+0x198>
 26c:	b	10c <ctf_lookup_by_name+0x10c>
 270:	ldrb	w0, [x27, #1]!
 274:	ldrh	w0, [x28, x0, lsl #1]
 278:	tbz	w0, #13, 1ec <ctf_lookup_by_name+0x1ec>
 27c:	ldrb	w0, [x27, #1]!
 280:	ldrh	w0, [x28, x0, lsl #1]
 284:	tbz	w0, #13, 1ec <ctf_lookup_by_name+0x1ec>
 288:	b	270 <ctf_lookup_by_name+0x270>
 28c:	ldr	x1, [sp, #96]
 290:	mov	x2, x26
 294:	str	x3, [sp, #104]
 298:	ldr	x0, [x1, x0]
 29c:	mov	x1, x19
 2a0:	bl	0 <strncmp>
 2a4:	ldr	x3, [sp, #104]
 2a8:	cbnz	w0, d0 <ctf_lookup_by_name+0xd0>
 2ac:	mov	x19, x3
 2b0:	b	198 <ctf_lookup_by_name+0x198>
 2b4:	bl	0 <free>
 2b8:	mov	x1, x28
 2bc:	mov	x0, x27
 2c0:	bl	0 <xstrndup>
 2c4:	mov	x2, x0
 2c8:	str	x0, [x21, #704]
 2cc:	b	250 <ctf_lookup_by_name+0x250>
 2d0:	ldrb	w20, [x19]
 2d4:	cmp	x27, #0x0
 2d8:	ccmp	w20, #0x0, #0x0, ne  // ne = any
 2dc:	b.eq	124 <ctf_lookup_by_name+0x124>  // b.none
 2e0:	b	1ac <ctf_lookup_by_name+0x1ac>
 2e4:	mov	x0, x21
 2e8:	mov	w1, #0x16                  	// #22
 2ec:	ldp	x19, x20, [sp, #16]
 2f0:	ldp	x21, x22, [sp, #32]
 2f4:	ldp	x23, x24, [sp, #48]
 2f8:	ldp	x25, x26, [sp, #64]
 2fc:	ldp	x27, x28, [sp, #80]
 300:	ldp	x29, x30, [sp], #112
 304:	b	0 <ctf_set_errno>

0000000000000308 <ctf_lookup_variable>:
 308:	stp	x29, x30, [sp, #-80]!
 30c:	mov	x29, sp
 310:	stp	x23, x24, [sp, #48]
 314:	mov	x24, x0
 318:	mov	x23, x1
 31c:	stp	x19, x20, [sp, #16]
 320:	stp	x21, x22, [sp, #32]
 324:	str	x25, [sp, #64]
 328:	ldp	x22, x21, [x24, #464]
 32c:	cbz	x21, 384 <ctf_lookup_variable+0x7c>
 330:	mov	x20, #0x0                   	// #0
 334:	b	348 <ctf_lookup_variable+0x40>
 338:	b.eq	394 <ctf_lookup_variable+0x8c>  // b.none
 33c:	add	x20, x19, #0x1
 340:	cmp	x21, x20
 344:	b.ls	384 <ctf_lookup_variable+0x7c>  // b.plast
 348:	add	x19, x20, x21
 34c:	mov	x0, x24
 350:	lsr	x19, x19, #1
 354:	lsl	x2, x19, #3
 358:	add	x25, x22, x2
 35c:	ldr	w1, [x22, x2]
 360:	bl	0 <ctf_strptr>
 364:	mov	x1, x0
 368:	mov	x0, x23
 36c:	bl	0 <strcmp>
 370:	cmp	w0, #0x0
 374:	b.ge	338 <ctf_lookup_variable+0x30>  // b.tcont
 378:	mov	x21, x19
 37c:	cmp	x21, x20
 380:	b.hi	348 <ctf_lookup_variable+0x40>  // b.pmore
 384:	ldr	x0, [x24, #512]
 388:	cbz	x0, 3b0 <ctf_lookup_variable+0xa8>
 38c:	mov	x24, x0
 390:	b	328 <ctf_lookup_variable+0x20>
 394:	ldr	w0, [x25, #4]
 398:	ldp	x19, x20, [sp, #16]
 39c:	ldp	x21, x22, [sp, #32]
 3a0:	ldp	x23, x24, [sp, #48]
 3a4:	ldr	x25, [sp, #64]
 3a8:	ldp	x29, x30, [sp], #80
 3ac:	ret
 3b0:	mov	x0, x24
 3b4:	mov	w1, #0x407                 	// #1031
 3b8:	ldp	x19, x20, [sp, #16]
 3bc:	ldp	x21, x22, [sp, #32]
 3c0:	ldp	x23, x24, [sp, #48]
 3c4:	ldr	x25, [sp, #64]
 3c8:	ldp	x29, x30, [sp], #80
 3cc:	b	0 <ctf_set_errno>

00000000000003d0 <ctf_lookup_symbol_name>:
 3d0:	add	x2, x0, #0x38
 3d4:	stp	x29, x30, [sp, #-64]!
 3d8:	mov	x29, sp
 3dc:	ldr	x3, [x2, #8]
 3e0:	cbz	x3, 474 <ctf_lookup_symbol_name+0xa4>
 3e4:	ldr	x4, [x0, #432]
 3e8:	str	x19, [sp, #16]
 3ec:	mov	x19, x0
 3f0:	cmp	x4, x1
 3f4:	b.ls	444 <ctf_lookup_symbol_name+0x74>  // b.plast
 3f8:	ldr	x0, [x2, #24]
 3fc:	cmp	x0, #0x10
 400:	b.eq	460 <ctf_lookup_symbol_name+0x90>  // b.none
 404:	add	x1, x1, x1, lsl #1
 408:	add	x1, x3, x1, lsl #3
 40c:	ldr	x2, [x19, #360]
 410:	adrp	x0, 0 <_CTF_NULLSTR>
 414:	ldr	w1, [x1]
 418:	add	x0, x0, #0x0
 41c:	cmp	x1, x2
 420:	b.cc	430 <ctf_lookup_symbol_name+0x60>  // b.lo, b.ul, b.last
 424:	ldr	x19, [sp, #16]
 428:	ldp	x29, x30, [sp], #64
 42c:	ret
 430:	ldr	x0, [x19, #352]
 434:	ldr	x19, [sp, #16]
 438:	add	x0, x0, x1
 43c:	ldp	x29, x30, [sp], #64
 440:	ret
 444:	mov	w1, #0x16                  	// #22
 448:	bl	0 <ctf_set_errno>
 44c:	adrp	x0, 0 <_CTF_NULLSTR>
 450:	add	x0, x0, #0x0
 454:	ldr	x19, [sp, #16]
 458:	ldp	x29, x30, [sp], #64
 45c:	ret
 460:	add	x0, x3, x1, lsl #4
 464:	add	x1, sp, #0x28
 468:	bl	0 <ctf_sym_to_elf64>
 46c:	mov	x1, x0
 470:	b	40c <ctf_lookup_symbol_name+0x3c>
 474:	mov	w1, #0x3f2                 	// #1010
 478:	bl	0 <ctf_set_errno>
 47c:	adrp	x0, 0 <_CTF_NULLSTR>
 480:	add	x0, x0, #0x0
 484:	b	428 <ctf_lookup_symbol_name+0x58>

0000000000000488 <ctf_lookup_by_symbol>:
 488:	ldr	x3, [x0, #64]
 48c:	add	x4, x0, #0x38
 490:	mov	x2, x0
 494:	cbz	x3, 51c <ctf_lookup_by_symbol+0x94>
 498:	ldr	x5, [x0, #432]
 49c:	cmp	x5, x1
 4a0:	b.ls	508 <ctf_lookup_by_symbol+0x80>  // b.plast
 4a4:	ldr	x0, [x4, #24]
 4a8:	cmp	x0, #0x10
 4ac:	b.eq	4e8 <ctf_lookup_by_symbol+0x60>  // b.none
 4b0:	add	x0, x1, x1, lsl #1
 4b4:	add	x3, x3, x0, lsl #3
 4b8:	ldrb	w0, [x3, #4]
 4bc:	and	w0, w0, #0xf
 4c0:	cmp	w0, #0x1
 4c4:	b.ne	4fc <ctf_lookup_by_symbol+0x74>  // b.any
 4c8:	ldr	x0, [x2, #424]
 4cc:	ldr	w0, [x0, x1, lsl #2]
 4d0:	cmn	w0, #0x1
 4d4:	b.eq	510 <ctf_lookup_by_symbol+0x88>  // b.none
 4d8:	ldr	x1, [x2, #408]
 4dc:	ldr	w0, [x1, w0, uxtw]
 4e0:	cbz	x0, 510 <ctf_lookup_by_symbol+0x88>
 4e4:	ret
 4e8:	add	x3, x3, x1, lsl #4
 4ec:	ldrb	w0, [x3, #12]
 4f0:	and	w0, w0, #0xf
 4f4:	cmp	w0, #0x1
 4f8:	b.eq	4c8 <ctf_lookup_by_symbol+0x40>  // b.none
 4fc:	mov	x0, x2
 500:	mov	w1, #0x406                 	// #1030
 504:	b	0 <ctf_set_errno>
 508:	mov	w1, #0x16                  	// #22
 50c:	b	0 <ctf_set_errno>
 510:	mov	x0, x2
 514:	mov	w1, #0x407                 	// #1031
 518:	b	0 <ctf_set_errno>
 51c:	mov	w1, #0x3f2                 	// #1010
 520:	b	0 <ctf_set_errno>
 524:	nop

0000000000000528 <ctf_lookup_by_id>:
 528:	stp	x29, x30, [sp, #-48]!
 52c:	mov	x29, sp
 530:	stp	x19, x20, [sp, #16]
 534:	mov	x19, x0
 538:	ldr	x0, [x0]
 53c:	ldr	w2, [x0, #552]
 540:	str	x21, [sp, #32]
 544:	tbz	w2, #0, 5a4 <ctf_lookup_by_id+0x7c>
 548:	ldr	w3, [x0, #544]
 54c:	cmp	x3, x1
 550:	b.cc	5a4 <ctf_lookup_by_id+0x7c>  // b.lo, b.ul, b.last
 554:	ldr	x20, [x0, #512]
 558:	cbz	x20, 608 <ctf_lookup_by_id+0xe0>
 55c:	ldr	w2, [x20, #552]
 560:	tbnz	w2, #1, 5ac <ctf_lookup_by_id+0x84>
 564:	ldr	w2, [x20, #544]
 568:	ands	x1, x2, x1
 56c:	b.eq	5d8 <ctf_lookup_by_id+0xb0>  // b.none
 570:	ldr	x2, [x20, #480]
 574:	cmp	x2, x1
 578:	b.cc	5d8 <ctf_lookup_by_id+0xb0>  // b.lo, b.ul, b.last
 57c:	ldr	x0, [x20, #440]
 580:	ldr	x21, [x20, #408]
 584:	ldr	w0, [x0, x1, lsl #2]
 588:	str	x20, [x19]
 58c:	add	x21, x21, x0
 590:	mov	x0, x21
 594:	ldp	x19, x20, [sp, #16]
 598:	ldr	x21, [sp, #32]
 59c:	ldp	x29, x30, [sp], #48
 5a0:	ret
 5a4:	mov	x20, x0
 5a8:	tbz	w2, #1, 564 <ctf_lookup_by_id+0x3c>
 5ac:	mov	x0, x20
 5b0:	bl	0 <ctf_dynamic_type>
 5b4:	mov	x21, x0
 5b8:	cbz	x0, 5f8 <ctf_lookup_by_id+0xd0>
 5bc:	str	x20, [x19]
 5c0:	add	x21, x0, #0x18
 5c4:	mov	x0, x21
 5c8:	ldp	x19, x20, [sp, #16]
 5cc:	ldr	x21, [sp, #32]
 5d0:	ldp	x29, x30, [sp], #48
 5d4:	ret
 5d8:	mov	x21, #0x0                   	// #0
 5dc:	mov	w1, #0x3fa                 	// #1018
 5e0:	bl	0 <ctf_set_errno>
 5e4:	mov	x0, x21
 5e8:	ldp	x19, x20, [sp, #16]
 5ec:	ldr	x21, [sp, #32]
 5f0:	ldp	x29, x30, [sp], #48
 5f4:	ret
 5f8:	ldr	x0, [x19]
 5fc:	mov	w1, #0x3fa                 	// #1018
 600:	bl	0 <ctf_set_errno>
 604:	b	590 <ctf_lookup_by_id+0x68>
 608:	mov	w1, #0x3f3                 	// #1011
 60c:	mov	x21, #0x0                   	// #0
 610:	bl	0 <ctf_set_errno>
 614:	b	590 <ctf_lookup_by_id+0x68>

0000000000000618 <ctf_func_info>:
 618:	add	x4, x0, #0x38
 61c:	stp	x29, x30, [sp, #-64]!
 620:	mov	x29, sp
 624:	ldr	x3, [x4, #8]
 628:	cbz	x3, 77c <ctf_func_info+0x164>
 62c:	stp	x21, x22, [sp, #32]
 630:	mov	x21, x2
 634:	ldr	x2, [x0, #432]
 638:	stp	x19, x20, [sp, #16]
 63c:	mov	x19, x0
 640:	cmp	x2, x1
 644:	b.ls	744 <ctf_func_info+0x12c>  // b.plast
 648:	ldr	x0, [x4, #24]
 64c:	cmp	x0, #0x10
 650:	b.eq	700 <ctf_func_info+0xe8>  // b.none
 654:	add	x0, x1, x1, lsl #1
 658:	add	x3, x3, x0, lsl #3
 65c:	ldrb	w0, [x3, #4]
 660:	and	w0, w0, #0xf
 664:	cmp	w0, #0x2
 668:	b.ne	714 <ctf_func_info+0xfc>  // b.any
 66c:	ldr	x0, [x19, #424]
 670:	ldr	w0, [x0, x1, lsl #2]
 674:	cmn	w0, #0x1
 678:	b.eq	7a4 <ctf_func_info+0x18c>  // b.none
 67c:	ldr	x1, [x19]
 680:	ldr	x22, [x19, #408]
 684:	ldr	x1, [x1]
 688:	str	x23, [sp, #48]
 68c:	ldr	w23, [x22, w0, uxtw]
 690:	add	x22, x22, w0, uxtw
 694:	mov	w0, w23
 698:	blr	x1
 69c:	ldr	x1, [x19]
 6a0:	mov	w20, w0
 6a4:	mov	w0, w23
 6a8:	ldr	x1, [x1, #16]
 6ac:	blr	x1
 6b0:	mov	w1, w0
 6b4:	orr	w0, w20, w0
 6b8:	cbz	w0, 788 <ctf_func_info+0x170>
 6bc:	cmp	w20, #0x5
 6c0:	b.ne	75c <ctf_func_info+0x144>  // b.any
 6c4:	ldr	w2, [x22, #4]
 6c8:	mov	w0, #0x0                   	// #0
 6cc:	str	x2, [x21]
 6d0:	stp	w1, wzr, [x21, #8]
 6d4:	cbz	w1, 730 <ctf_func_info+0x118>
 6d8:	sub	w1, w1, #0x1
 6dc:	add	x22, x22, w1, uxtw #2
 6e0:	ldr	w2, [x22, #8]
 6e4:	cbnz	w2, 730 <ctf_func_info+0x118>
 6e8:	mov	w2, #0x1                   	// #1
 6ec:	ldp	x19, x20, [sp, #16]
 6f0:	ldr	x23, [sp, #48]
 6f4:	stp	w1, w2, [x21, #8]
 6f8:	ldp	x21, x22, [sp, #32]
 6fc:	b	728 <ctf_func_info+0x110>
 700:	add	x3, x3, x1, lsl #4
 704:	ldrb	w0, [x3, #12]
 708:	and	w0, w0, #0xf
 70c:	cmp	w0, #0x2
 710:	b.eq	66c <ctf_func_info+0x54>  // b.none
 714:	mov	x0, x19
 718:	mov	w1, #0x404                 	// #1028
 71c:	bl	0 <ctf_set_errno>
 720:	ldp	x19, x20, [sp, #16]
 724:	ldp	x21, x22, [sp, #32]
 728:	ldp	x29, x30, [sp], #64
 72c:	ret
 730:	ldp	x19, x20, [sp, #16]
 734:	ldp	x21, x22, [sp, #32]
 738:	ldr	x23, [sp, #48]
 73c:	ldp	x29, x30, [sp], #64
 740:	ret
 744:	mov	w1, #0x16                  	// #22
 748:	bl	0 <ctf_set_errno>
 74c:	ldp	x19, x20, [sp, #16]
 750:	ldp	x21, x22, [sp, #32]
 754:	ldp	x29, x30, [sp], #64
 758:	ret
 75c:	mov	x0, x19
 760:	mov	w1, #0x3ef                 	// #1007
 764:	bl	0 <ctf_set_errno>
 768:	ldp	x19, x20, [sp, #16]
 76c:	ldp	x21, x22, [sp, #32]
 770:	ldr	x23, [sp, #48]
 774:	ldp	x29, x30, [sp], #64
 778:	ret
 77c:	mov	w1, #0x3f2                 	// #1010
 780:	bl	0 <ctf_set_errno>
 784:	b	728 <ctf_func_info+0x110>
 788:	mov	x0, x19
 78c:	mov	w1, #0x405                 	// #1029
 790:	bl	0 <ctf_set_errno>
 794:	ldp	x19, x20, [sp, #16]
 798:	ldp	x21, x22, [sp, #32]
 79c:	ldr	x23, [sp, #48]
 7a0:	b	728 <ctf_func_info+0x110>
 7a4:	mov	x0, x19
 7a8:	mov	w1, #0x405                 	// #1029
 7ac:	bl	0 <ctf_set_errno>
 7b0:	ldp	x19, x20, [sp, #16]
 7b4:	ldp	x21, x22, [sp, #32]
 7b8:	b	728 <ctf_func_info+0x110>
 7bc:	nop

00000000000007c0 <ctf_func_args>:
 7c0:	stp	x29, x30, [sp, #-64]!
 7c4:	mov	x29, sp
 7c8:	stp	x19, x20, [sp, #16]
 7cc:	mov	w20, w2
 7d0:	mov	x19, x3
 7d4:	add	x2, sp, #0x30
 7d8:	stp	x21, x22, [sp, #32]
 7dc:	mov	x21, x0
 7e0:	mov	x22, x1
 7e4:	bl	618 <ctf_func_info>
 7e8:	tbnz	w0, #31, 84c <ctf_func_args+0x8c>
 7ec:	ldr	x1, [x21, #424]
 7f0:	ldr	x2, [x21, #408]
 7f4:	ldr	w0, [sp, #56]
 7f8:	ldr	w1, [x1, x22, lsl #2]
 7fc:	add	x2, x2, #0x8
 800:	cmp	w0, w20
 804:	csel	w0, w0, w20, ls  // ls = plast
 808:	add	x1, x1, x2
 80c:	cbz	w0, 838 <ctf_func_args+0x78>
 810:	sub	w0, w0, #0x1
 814:	add	x2, x0, #0x1
 818:	add	x2, x19, x2, lsl #3
 81c:	nop
 820:	mov	x0, x1
 824:	add	x1, x1, #0x4
 828:	ldr	w0, [x0]
 82c:	str	x0, [x19], #8
 830:	cmp	x19, x2
 834:	b.ne	820 <ctf_func_args+0x60>  // b.any
 838:	mov	w0, #0x0                   	// #0
 83c:	ldp	x19, x20, [sp, #16]
 840:	ldp	x21, x22, [sp, #32]
 844:	ldp	x29, x30, [sp], #64
 848:	ret
 84c:	mov	w0, #0xffffffff            	// #-1
 850:	b	83c <ctf_func_args+0x7c>

ctf-open.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <get_kind_v1>:
       0:	ubfx	x0, x0, #11, #5
       4:	ret

0000000000000008 <get_root_v1>:
       8:	ubfx	x0, x0, #10, #1
       c:	ret

0000000000000010 <get_vlen_v1>:
      10:	and	w0, w0, #0x3ff
      14:	ret

0000000000000018 <get_kind_v2>:
      18:	lsr	w0, w0, #26
      1c:	ret

0000000000000020 <get_root_v2>:
      20:	ubfx	x0, x0, #25, #1
      24:	ret

0000000000000028 <get_vlen_v2>:
      28:	and	w0, w0, #0xffffff
      2c:	ret

0000000000000030 <get_ctt_size_v1>:
      30:	ldrh	w0, [x1, #6]
      34:	mov	w5, #0xffff                	// #65535
      38:	ldp	w6, w1, [x1, #8]
      3c:	cmp	w0, w5
      40:	mov	x4, #0x8                   	// #8
      44:	and	x0, x0, #0xffff
      48:	b.eq	60 <get_ctt_size_v1+0x30>  // b.none
      4c:	cbz	x2, 54 <get_ctt_size_v1+0x24>
      50:	str	x0, [x2]
      54:	cbz	x3, 5c <get_ctt_size_v1+0x2c>
      58:	str	x4, [x3]
      5c:	ret
      60:	mov	w0, w1
      64:	mov	x4, #0x10                  	// #16
      68:	orr	x0, x0, x6, lsl #32
      6c:	b	4c <get_ctt_size_v1+0x1c>

0000000000000070 <get_ctt_size_v2>:
      70:	ldp	w0, w5, [x1, #8]
      74:	mov	x4, #0xc                   	// #12
      78:	ldr	w1, [x1, #16]
      7c:	cmn	w0, #0x1
      80:	mov	w0, w0
      84:	b.eq	9c <get_ctt_size_v2+0x2c>  // b.none
      88:	cbz	x2, 90 <get_ctt_size_v2+0x20>
      8c:	str	x0, [x2]
      90:	cbz	x3, 98 <get_ctt_size_v2+0x28>
      94:	str	x4, [x3]
      98:	ret
      9c:	mov	w0, w1
      a0:	mov	x4, #0x14                  	// #20
      a4:	orr	x0, x0, x5, lsl #32
      a8:	b	88 <get_ctt_size_v2+0x18>
      ac:	nop

00000000000000b0 <ctf_set_base>:
      b0:	stp	x29, x30, [sp, #-32]!
      b4:	mov	x29, sp
      b8:	ldp	w4, w3, [x1, #36]
      bc:	stp	x19, x20, [sp, #16]
      c0:	ldr	w6, [x1, #48]
      c4:	mov	x20, x1
      c8:	sub	w3, w3, w4
      cc:	ldr	x5, [x0, #392]
      d0:	lsr	w3, w3, #3
      d4:	ldr	x1, [x0, #408]
      d8:	mov	x19, x0
      dc:	sub	x1, x1, x5
      e0:	ldr	w5, [x20, #44]
      e4:	str	x2, [x0, #392]
      e8:	add	x2, x2, x1
      ec:	ldr	w1, [x20, #4]
      f0:	add	x4, x2, w4, uxtw
      f4:	add	x5, x2, x5
      f8:	stp	x5, x6, [x0, #336]
      fc:	str	x2, [x0, #408]
     100:	stp	x4, x3, [x0, #464]
     104:	cbnz	w1, 15c <ctf_set_base+0xac>
     108:	ldr	w1, [x20, #8]
     10c:	cbnz	w1, 16c <ctf_set_base+0xbc>
     110:	ldr	w1, [x20, #12]
     114:	cbnz	w1, 180 <ctf_set_base+0xd0>
     118:	ldr	x1, [x19, #496]
     11c:	cbz	x1, 12c <ctf_set_base+0x7c>
     120:	adrp	x0, 0 <get_kind_v1>
     124:	add	x0, x0, #0x0
     128:	bl	0 <ctf_dprintf>
     12c:	ldr	x1, [x19, #528]
     130:	cbz	x1, 194 <ctf_set_base+0xe4>
     134:	ldr	x3, [x19, #520]
     138:	adrp	x2, 0 <get_kind_v1>
     13c:	ldp	x19, x20, [sp, #16]
     140:	cmp	x3, #0x0
     144:	ldp	x29, x30, [sp], #32
     148:	add	x2, x2, #0x0
     14c:	csel	x2, x2, x3, eq  // eq = none
     150:	adrp	x0, 0 <get_kind_v1>
     154:	add	x0, x0, #0x0
     158:	b	0 <ctf_dprintf>
     15c:	bl	0 <ctf_strptr>
     160:	str	x0, [x19, #520]
     164:	ldr	w1, [x20, #8]
     168:	cbz	w1, 110 <ctf_set_base+0x60>
     16c:	mov	x0, x19
     170:	bl	0 <ctf_strptr>
     174:	ldr	w1, [x20, #12]
     178:	str	x0, [x19, #528]
     17c:	cbz	w1, 118 <ctf_set_base+0x68>
     180:	mov	x0, x19
     184:	bl	0 <ctf_strptr>
     188:	mov	x1, x0
     18c:	str	x0, [x19, #496]
     190:	b	11c <ctf_set_base+0x6c>
     194:	ldp	x19, x20, [sp, #16]
     198:	ldp	x29, x30, [sp], #32
     19c:	ret

00000000000001a0 <get_vbytes_common.isra.0>:
     1a0:	and	w2, w0, #0xffff
     1a4:	cmp	w2, #0x8
     1a8:	b.eq	214 <get_vbytes_common.isra.0+0x74>  // b.none
     1ac:	b.hi	1c8 <get_vbytes_common.isra.0+0x28>  // b.pmore
     1b0:	cmp	w2, #0x2
     1b4:	b.hi	1e4 <get_vbytes_common.isra.0+0x44>  // b.pmore
     1b8:	cmp	w2, #0x0
     1bc:	cset	x0, ne  // ne = any
     1c0:	lsl	x0, x0, #2
     1c4:	ret
     1c8:	cmp	w2, #0xd
     1cc:	mov	x0, #0x0                   	// #0
     1d0:	b.ls	1e0 <get_vbytes_common.isra.0+0x40>  // b.plast
     1d4:	cmp	w2, #0xe
     1d8:	mov	x0, #0x8                   	// #8
     1dc:	b.ne	1f0 <get_vbytes_common.isra.0+0x50>  // b.any
     1e0:	ret
     1e4:	cmp	w2, #0x3
     1e8:	mov	x0, #0x0                   	// #0
     1ec:	b.eq	1e0 <get_vbytes_common.isra.0+0x40>  // b.none
     1f0:	stp	x29, x30, [sp, #-16]!
     1f4:	mov	w1, w2
     1f8:	adrp	x0, 0 <get_kind_v1>
     1fc:	mov	x29, sp
     200:	add	x0, x0, #0x0
     204:	bl	0 <ctf_dprintf>
     208:	mov	x0, #0x3ef                 	// #1007
     20c:	ldp	x29, x30, [sp], #16
     210:	ret
     214:	lsl	x0, x1, #3
     218:	ret
     21c:	nop

0000000000000220 <get_vbytes_v2>:
     220:	and	w3, w0, #0xffff
     224:	cmp	w3, #0x5
     228:	b.eq	278 <get_vbytes_v2+0x58>  // b.none
     22c:	b.hi	240 <get_vbytes_v2+0x20>  // b.pmore
     230:	cmp	w3, #0x4
     234:	mov	x0, #0xc                   	// #12
     238:	b.ne	26c <get_vbytes_v2+0x4c>  // b.any
     23c:	ret
     240:	sub	w0, w3, #0x6
     244:	and	w0, w0, #0xffff
     248:	cmp	w0, #0x1
     24c:	b.hi	26c <get_vbytes_v2+0x4c>  // b.pmore
     250:	add	x0, x2, x2, lsl #1
     254:	mov	x3, #0x1fffffff            	// #536870911
     258:	lsl	x2, x2, #4
     25c:	cmp	x1, x3
     260:	lsl	x0, x0, #2
     264:	csel	x0, x2, x0, gt
     268:	ret
     26c:	mov	x1, x2
     270:	mov	w0, w3
     274:	b	1a0 <get_vbytes_common.isra.0>
     278:	add	x2, x2, #0x1
     27c:	and	x2, x2, #0xfffffffffffffffe
     280:	lsl	x0, x2, #2
     284:	ret

0000000000000288 <get_vbytes_v1>:
     288:	and	w3, w0, #0xffff
     28c:	cmp	w3, #0x5
     290:	b.eq	2dc <get_vbytes_v1+0x54>  // b.none
     294:	b.hi	2a8 <get_vbytes_v1+0x20>  // b.pmore
     298:	cmp	w3, #0x4
     29c:	mov	x0, #0x8                   	// #8
     2a0:	b.ne	2d0 <get_vbytes_v1+0x48>  // b.any
     2a4:	ret
     2a8:	sub	w0, w3, #0x6
     2ac:	and	w0, w0, #0xffff
     2b0:	cmp	w0, #0x1
     2b4:	b.hi	2d0 <get_vbytes_v1+0x48>  // b.pmore
     2b8:	lsl	x0, x2, #3
     2bc:	mov	x3, #0x1fff                	// #8191
     2c0:	lsl	x2, x2, #4
     2c4:	cmp	x1, x3
     2c8:	csel	x0, x2, x0, gt
     2cc:	ret
     2d0:	mov	x1, x2
     2d4:	mov	w0, w3
     2d8:	b	1a0 <get_vbytes_common.isra.0>
     2dc:	add	x2, x2, #0x1
     2e0:	and	x2, x2, #0xfffffffffffffffe
     2e4:	lsl	x0, x2, #1
     2e8:	ret
     2ec:	nop

00000000000002f0 <init_types>:
     2f0:	sub	sp, sp, #0x2a0
     2f4:	mov	x2, #0x200                 	// #512
     2f8:	stp	x29, x30, [sp]
     2fc:	mov	x29, sp
     300:	stp	x27, x28, [sp, #80]
     304:	mov	x27, x0
     308:	add	x28, sp, #0xa0
     30c:	stp	x21, x22, [sp, #32]
     310:	mov	x21, x1
     314:	mov	x0, x28
     318:	mov	w1, #0x0                   	// #0
     31c:	stp	x19, x20, [sp, #16]
     320:	stp	x23, x24, [sp, #48]
     324:	stp	x25, x26, [sp, #64]
     328:	bl	0 <memset>
     32c:	ldr	w0, [x27, #552]
     330:	ldr	w1, [x21, #8]
     334:	str	w1, [sp, #100]
     338:	tbnz	w0, #1, ef4 <init_types+0xc04>
     33c:	ldp	w25, w20, [x21, #40]
     340:	ldr	x23, [x27, #408]
     344:	mov	w3, w25
     348:	ldr	w0, [x27, #560]
     34c:	add	x19, x23, x3
     350:	add	x20, x23, x20
     354:	cmp	w0, #0x1
     358:	b.eq	998 <init_types+0x6a8>  // b.none
     35c:	cmp	x19, x20
     360:	b.cs	9b8 <init_types+0x6c8>  // b.hs, b.nlast
     364:	mov	x23, x19
     368:	add	x22, sp, #0x98
     36c:	add	x21, sp, #0x90
     370:	b	3a4 <init_types+0xb4>
     374:	and	x24, x24, #0xffff
     378:	add	x23, x23, x0
     37c:	ldr	x1, [x27, #480]
     380:	ldr	x2, [x28, x24, lsl #3]
     384:	add	x1, x1, #0x1
     388:	ldr	x0, [sp, #152]
     38c:	add	x2, x2, #0x1
     390:	str	x2, [x28, x24, lsl #3]
     394:	str	x1, [x27, #480]
     398:	add	x23, x23, x0
     39c:	cmp	x23, x20
     3a0:	b.cs	47c <init_types+0x18c>  // b.hs, b.nlast
     3a4:	ldr	x1, [x27]
     3a8:	ldr	w0, [x23, #4]
     3ac:	ldr	x1, [x1]
     3b0:	blr	x1
     3b4:	and	w25, w0, #0xffff
     3b8:	ldr	x1, [x27]
     3bc:	mov	w24, w0
     3c0:	ldr	w0, [x23, #4]
     3c4:	ldr	x1, [x1, #16]
     3c8:	blr	x1
     3cc:	mov	w26, w0
     3d0:	ldr	x5, [x27]
     3d4:	mov	x3, x22
     3d8:	mov	x2, x21
     3dc:	mov	x1, x23
     3e0:	mov	x0, x27
     3e4:	ldr	x5, [x5, #24]
     3e8:	blr	x5
     3ec:	ldr	x3, [x27]
     3f0:	mov	w2, w26
     3f4:	ldr	x1, [sp, #144]
     3f8:	mov	w0, w25
     3fc:	ldr	x3, [x3, #32]
     400:	blr	x3
     404:	tbnz	x0, #63, 458 <init_types+0x168>
     408:	cmp	w25, #0x9
     40c:	b.ne	374 <init_types+0x84>  // b.any
     410:	ldr	w1, [x23, #8]
     414:	sub	w2, w1, #0x1
     418:	cmp	w2, #0x3d
     41c:	b.ls	430 <init_types+0x140>  // b.plast
     420:	ldr	x1, [sp, #208]
     424:	add	x1, x1, #0x1
     428:	str	x1, [sp, #208]
     42c:	b	374 <init_types+0x84>
     430:	mov	w1, w1
     434:	ldr	x2, [x28, x1, lsl #3]
     438:	add	x2, x2, #0x1
     43c:	str	x2, [x28, x1, lsl #3]
     440:	b	374 <init_types+0x84>
     444:	cmp	w1, #0xe
     448:	b.eq	6f0 <init_types+0x400>  // b.none
     44c:	adrp	x0, 0 <get_kind_v1>
     450:	add	x0, x0, #0x0
     454:	bl	0 <ctf_dprintf>
     458:	mov	w0, #0x3ef                 	// #1007
     45c:	ldp	x29, x30, [sp]
     460:	ldp	x19, x20, [sp, #16]
     464:	ldp	x21, x22, [sp, #32]
     468:	ldp	x23, x24, [sp, #48]
     46c:	ldp	x25, x26, [sp, #64]
     470:	ldp	x27, x28, [sp, #80]
     474:	add	sp, sp, #0x2a0
     478:	ret
     47c:	ldr	x23, [sp, #208]
     480:	ldr	w0, [sp, #100]
     484:	cbz	w0, 904 <init_types+0x614>
     488:	mov	x1, x27
     48c:	adrp	x0, 0 <get_kind_v1>
     490:	add	x0, x0, #0x0
     494:	bl	0 <ctf_dprintf>
     498:	ldr	w0, [x27, #552]
     49c:	orr	w0, w0, #0x1
     4a0:	str	w0, [x27, #552]
     4a4:	adrp	x22, 0 <ctf_hash_eq_string>
     4a8:	adrp	x21, 0 <ctf_hash_string>
     4ac:	add	x22, x22, #0x0
     4b0:	add	x21, x21, #0x0
     4b4:	mov	x0, x23
     4b8:	mov	x2, x22
     4bc:	mov	x1, x21
     4c0:	bl	0 <ctf_hash_create>
     4c4:	str	x0, [x27, #152]
     4c8:	cbz	x0, 8e0 <init_types+0x5f0>
     4cc:	ldr	x0, [sp, #216]
     4d0:	mov	x2, x22
     4d4:	mov	x1, x21
     4d8:	bl	0 <ctf_hash_create>
     4dc:	str	x0, [x27, #168]
     4e0:	cbz	x0, 8e0 <init_types+0x5f0>
     4e4:	ldr	x0, [sp, #224]
     4e8:	mov	x2, x22
     4ec:	mov	x1, x21
     4f0:	bl	0 <ctf_hash_create>
     4f4:	str	x0, [x27, #184]
     4f8:	cbz	x0, 8e0 <init_types+0x5f0>
     4fc:	ldp	x3, x5, [sp, #168]
     500:	mov	x2, x22
     504:	ldr	x0, [sp, #200]
     508:	mov	x1, x21
     50c:	ldr	x6, [sp, #240]
     510:	add	x3, x3, x5
     514:	add	x0, x0, x6
     518:	add	x0, x0, x3
     51c:	ldp	x6, x3, [sp, #248]
     520:	ldr	x5, [sp, #184]
     524:	add	x5, x5, x6
     528:	ldr	x6, [sp, #264]
     52c:	add	x0, x0, x5
     530:	add	x3, x3, x6
     534:	add	x0, x0, x3
     538:	bl	0 <ctf_hash_create>
     53c:	str	x0, [x27, #200]
     540:	cbz	x0, 8e0 <init_types+0x5f0>
     544:	ldr	x21, [x27, #480]
     548:	add	x23, x21, #0x1
     54c:	lsl	x22, x23, #2
     550:	mov	x0, x22
     554:	bl	0 <malloc>
     558:	mov	x25, x0
     55c:	str	x25, [x27, #440]
     560:	str	x23, [x27, #456]
     564:	mov	x0, x22
     568:	mov	x1, #0x1                   	// #1
     56c:	bl	0 <calloc>
     570:	str	x0, [x27, #448]
     574:	cmp	x0, #0x0
     578:	ccmp	x25, #0x0, #0x4, ne  // ne = any
     57c:	b.eq	8e0 <init_types+0x5f0>  // b.none
     580:	ldr	w0, [sp, #100]
     584:	mov	x2, x22
     588:	mov	w1, #0x0                   	// #0
     58c:	cmp	w0, #0x0
     590:	cset	w0, ne  // ne = any
     594:	str	w0, [sp, #128]
     598:	mov	x0, x25
     59c:	str	wzr, [x25], #4
     5a0:	bl	0 <memset>
     5a4:	cmp	x19, x20
     5a8:	b.cs	e50 <init_types+0xb60>  // b.hs, b.nlast
     5ac:	add	x22, sp, #0x98
     5b0:	add	x21, sp, #0x90
     5b4:	mov	w26, #0x1                   	// #1
     5b8:	str	wzr, [sp, #112]
     5bc:	str	wzr, [sp, #120]
     5c0:	ldr	x1, [x27]
     5c4:	ldr	w0, [x19, #4]
     5c8:	ldr	x1, [x1]
     5cc:	blr	x1
     5d0:	mov	w24, w0
     5d4:	ldr	x1, [x27]
     5d8:	ldr	w0, [x19, #4]
     5dc:	ldr	x1, [x1, #8]
     5e0:	blr	x1
     5e4:	str	w0, [sp, #104]
     5e8:	ldr	x1, [x27]
     5ec:	ldr	w0, [x19, #4]
     5f0:	ldr	x1, [x1, #16]
     5f4:	blr	x1
     5f8:	mov	w23, w0
     5fc:	ldr	x6, [x27]
     600:	mov	x3, x22
     604:	mov	x2, x21
     608:	mov	x1, x19
     60c:	mov	x0, x27
     610:	ldr	x6, [x6, #24]
     614:	blr	x6
     618:	ldr	w1, [x19]
     61c:	mov	x0, x27
     620:	bl	0 <ctf_strptr>
     624:	ldr	x3, [x27]
     628:	mov	w2, w23
     62c:	ldr	x1, [sp, #144]
     630:	mov	x23, x0
     634:	ldr	x3, [x3, #32]
     638:	mov	w0, w24
     63c:	blr	x3
     640:	mov	x28, x0
     644:	and	w1, w24, #0xffff
     648:	cmp	w1, #0x7
     64c:	b.eq	950 <init_types+0x660>  // b.none
     650:	tst	w24, #0xfff8
     654:	b.ne	6b0 <init_types+0x3c0>  // b.any
     658:	cmp	w1, #0x4
     65c:	b.eq	6f0 <init_types+0x400>  // b.none
     660:	b.ls	808 <init_types+0x518>  // b.plast
     664:	cmp	w1, #0x5
     668:	b.eq	6c4 <init_types+0x3d4>  // b.none
     66c:	cmp	w1, #0x6
     670:	b.ne	f14 <init_types+0xc24>  // b.any
     674:	ldr	w1, [sp, #100]
     678:	mov	w2, w26
     67c:	ldr	x0, [x27, #152]
     680:	cbnz	w1, 918 <init_types+0x628>
     684:	ldr	w3, [x19]
     688:	mov	x1, x27
     68c:	bl	0 <ctf_hash_define_type>
     690:	cbnz	w0, 45c <init_types+0x16c>
     694:	ldr	x0, [sp, #144]
     698:	mov	x1, #0x1fffffff            	// #536870911
     69c:	cmp	x0, x1
     6a0:	ldr	w0, [sp, #112]
     6a4:	cinc	w0, w0, gt
     6a8:	str	w0, [sp, #112]
     6ac:	b	6f0 <init_types+0x400>
     6b0:	cmp	w1, #0xa
     6b4:	b.eq	6c4 <init_types+0x3d4>  // b.none
     6b8:	b.ls	858 <init_types+0x568>  // b.plast
     6bc:	cmp	w1, #0xd
     6c0:	b.hi	444 <init_types+0x154>  // b.pmore
     6c4:	ldr	w1, [sp, #100]
     6c8:	mov	w2, w26
     6cc:	ldr	x0, [x27, #200]
     6d0:	cbz	w1, 6e0 <init_types+0x3f0>
     6d4:	ldr	w2, [x27, #544]
     6d8:	add	w2, w2, #0x1
     6dc:	orr	w2, w2, w26
     6e0:	ldr	w3, [x19]
     6e4:	mov	x1, x27
     6e8:	bl	0 <ctf_hash_insert_type>
     6ec:	cbnz	w0, 45c <init_types+0x16c>
     6f0:	ldr	x1, [x27, #408]
     6f4:	add	x6, x28, x19
     6f8:	ldr	x0, [sp, #152]
     6fc:	sub	x19, x19, x1
     700:	str	w19, [x25], #4
     704:	add	w26, w26, #0x1
     708:	add	x19, x6, x0
     70c:	cmp	x19, x20
     710:	b.cc	5c0 <init_types+0x2d0>  // b.lo, b.ul, b.last
     714:	ldr	x21, [x27, #480]
     718:	mov	x1, x21
     71c:	adrp	x0, 0 <get_kind_v1>
     720:	add	x0, x0, #0x0
     724:	bl	0 <ctf_dprintf>
     728:	mov	w19, #0x1                   	// #1
     72c:	ldr	x0, [x27, #184]
     730:	bl	0 <ctf_hash_size>
     734:	mov	w1, w0
     738:	adrp	x0, 0 <get_kind_v1>
     73c:	add	x0, x0, #0x0
     740:	bl	0 <ctf_dprintf>
     744:	ldr	x0, [x27, #152]
     748:	bl	0 <ctf_hash_size>
     74c:	mov	w1, w0
     750:	ldr	w2, [sp, #112]
     754:	adrp	x0, 0 <get_kind_v1>
     758:	add	x0, x0, #0x0
     75c:	bl	0 <ctf_dprintf>
     760:	ldr	x0, [x27, #168]
     764:	bl	0 <ctf_hash_size>
     768:	mov	w1, w0
     76c:	ldr	w2, [sp, #120]
     770:	adrp	x0, 0 <get_kind_v1>
     774:	add	x0, x0, #0x0
     778:	bl	0 <ctf_dprintf>
     77c:	ldr	x0, [x27, #200]
     780:	bl	0 <ctf_hash_size>
     784:	mov	w1, w0
     788:	adrp	x0, 0 <get_kind_v1>
     78c:	add	x0, x0, #0x0
     790:	bl	0 <ctf_dprintf>
     794:	ldr	x2, [x27, #480]
     798:	mov	x1, #0x1                   	// #1
     79c:	cbz	x2, 800 <init_types+0x510>
     7a0:	ldr	x0, [x27, #448]
     7a4:	lsl	x3, x1, #2
     7a8:	ldr	w20, [x0, x1, lsl #2]
     7ac:	cbz	w20, 7f0 <init_types+0x500>
     7b0:	ldr	w0, [x27, #552]
     7b4:	tbz	w0, #1, a0c <init_types+0x71c>
     7b8:	tbz	w0, #0, 7c8 <init_types+0x4d8>
     7bc:	ldr	w1, [x27, #544]
     7c0:	add	w1, w1, #0x1
     7c4:	orr	w1, w1, w19
     7c8:	mov	x0, x27
     7cc:	bl	0 <ctf_dtd_lookup>
     7d0:	add	x21, x0, #0x18
     7d4:	ldr	x1, [x27]
     7d8:	ldr	w0, [x21, #4]
     7dc:	ldr	x1, [x1]
     7e0:	blr	x1
     7e4:	cmp	w0, #0xa
     7e8:	b.eq	9c0 <init_types+0x6d0>  // b.none
     7ec:	ldr	x2, [x27, #480]
     7f0:	add	w1, w19, #0x1
     7f4:	mov	x19, x1
     7f8:	cmp	x2, w1, uxtw
     7fc:	b.cs	7a0 <init_types+0x4b0>  // b.hs, b.nlast
     800:	mov	w0, #0x0                   	// #0
     804:	b	45c <init_types+0x16c>
     808:	cmp	w1, #0x2
     80c:	b.hi	8a0 <init_types+0x5b0>  // b.pmore
     810:	cbz	w1, 44c <init_types+0x15c>
     814:	ldr	x0, [x27, #200]
     818:	mov	x2, x23
     81c:	mov	x1, x27
     820:	bl	0 <ctf_hash_lookup_type>
     824:	cbnz	x0, 928 <init_types+0x638>
     828:	ldr	w1, [sp, #100]
     82c:	mov	w2, w26
     830:	ldr	x0, [x27, #200]
     834:	cbz	w1, 844 <init_types+0x554>
     838:	ldr	w2, [x27, #544]
     83c:	add	w2, w2, #0x1
     840:	orr	w2, w2, w26
     844:	ldr	w3, [x19]
     848:	mov	x1, x27
     84c:	bl	0 <ctf_hash_define_type>
     850:	cbz	w0, 6f0 <init_types+0x400>
     854:	b	45c <init_types+0x16c>
     858:	cmp	w1, #0x8
     85c:	b.eq	93c <init_types+0x64c>  // b.none
     860:	cmp	w1, #0x9
     864:	b.ne	eec <init_types+0xbfc>  // b.any
     868:	ldr	w1, [x19, #8]
     86c:	mov	x0, x27
     870:	bl	0 <ctf_name_table>
     874:	mov	x24, x0
     878:	ldr	x0, [x0]
     87c:	mov	x2, x23
     880:	mov	x1, x27
     884:	bl	0 <ctf_hash_lookup_type>
     888:	cbnz	x0, 6f0 <init_types+0x400>
     88c:	ldr	w1, [sp, #100]
     890:	mov	w2, w26
     894:	ldr	x0, [x24]
     898:	cbz	w1, 6e0 <init_types+0x3f0>
     89c:	b	6d4 <init_types+0x3e4>
     8a0:	cmp	w1, #0x3
     8a4:	b.ne	934 <init_types+0x644>  // b.any
     8a8:	ldr	w0, [x19, #8]
     8ac:	ldr	w1, [x27, #544]
     8b0:	ldr	w3, [sp, #128]
     8b4:	cmp	w0, w1
     8b8:	cset	w2, hi  // hi = pmore
     8bc:	cmp	w2, w3
     8c0:	b.ne	6c4 <init_types+0x3d4>  // b.any
     8c4:	ldr	x2, [x27, #480]
     8c8:	and	w0, w0, w1
     8cc:	cmp	x0, x2
     8d0:	b.hi	6c4 <init_types+0x3d4>  // b.pmore
     8d4:	ldr	x1, [x27, #448]
     8d8:	str	w26, [x1, x0, lsl #2]
     8dc:	b	6c4 <init_types+0x3d4>
     8e0:	mov	w0, #0xc                   	// #12
     8e4:	ldp	x29, x30, [sp]
     8e8:	ldp	x19, x20, [sp, #16]
     8ec:	ldp	x21, x22, [sp, #32]
     8f0:	ldp	x23, x24, [sp, #48]
     8f4:	ldp	x25, x26, [sp, #64]
     8f8:	ldp	x27, x28, [sp, #80]
     8fc:	add	sp, sp, #0x2a0
     900:	ret
     904:	mov	x1, x27
     908:	adrp	x0, 0 <get_kind_v1>
     90c:	add	x0, x0, #0x0
     910:	bl	0 <ctf_dprintf>
     914:	b	4a4 <init_types+0x1b4>
     918:	ldr	w2, [x27, #544]
     91c:	add	w2, w2, #0x1
     920:	orr	w2, w2, w26
     924:	b	684 <init_types+0x394>
     928:	ldr	x0, [sp, #104]
     92c:	tbz	w0, #0, 6f0 <init_types+0x400>
     930:	b	828 <init_types+0x538>
     934:	mov	w1, #0x4                   	// #4
     938:	b	44c <init_types+0x15c>
     93c:	ldr	w1, [sp, #100]
     940:	mov	w2, w26
     944:	ldr	x0, [x27, #184]
     948:	cbz	w1, 844 <init_types+0x554>
     94c:	b	838 <init_types+0x548>
     950:	ldr	w1, [sp, #100]
     954:	mov	w2, w26
     958:	ldr	x0, [x27, #168]
     95c:	cbz	w1, 96c <init_types+0x67c>
     960:	ldr	w2, [x27, #544]
     964:	add	w2, w2, #0x1
     968:	orr	w2, w2, w26
     96c:	ldr	w3, [x19]
     970:	mov	x1, x27
     974:	bl	0 <ctf_hash_define_type>
     978:	cbnz	w0, 45c <init_types+0x16c>
     97c:	ldr	x0, [sp, #144]
     980:	mov	x1, #0x1fffffff            	// #536870911
     984:	cmp	x0, x1
     988:	ldr	w0, [sp, #120]
     98c:	cinc	w0, w0, gt
     990:	str	w0, [sp, #120]
     994:	b	6f0 <init_types+0x400>
     998:	ldrb	w0, [x21, #2]
     99c:	cmp	w0, #0x1
     9a0:	b.eq	a20 <init_types+0x730>  // b.none
     9a4:	cmp	w0, #0x2
     9a8:	b.ne	35c <init_types+0x6c>  // b.any
     9ac:	mov	w0, #0x7fff                	// #32767
     9b0:	str	w0, [x27, #544]
     9b4:	b	35c <init_types+0x6c>
     9b8:	mov	x23, #0x0                   	// #0
     9bc:	b	480 <init_types+0x190>
     9c0:	ldr	w1, [x21]
     9c4:	mov	x0, x27
     9c8:	bl	0 <ctf_strptr>
     9cc:	ldrb	w0, [x0]
     9d0:	cbnz	w0, 7ec <init_types+0x4fc>
     9d4:	ldr	w0, [x21, #8]
     9d8:	ldr	w1, [x27, #544]
     9dc:	ldr	w4, [sp, #128]
     9e0:	cmp	w0, w1
     9e4:	cset	w3, hi  // hi = pmore
     9e8:	cmp	w3, w4
     9ec:	ldr	x2, [x27, #480]
     9f0:	b.ne	7f0 <init_types+0x500>  // b.any
     9f4:	and	w0, w0, w1
     9f8:	cmp	x0, x2
     9fc:	b.hi	7f0 <init_types+0x500>  // b.pmore
     a00:	ldr	x1, [x27, #448]
     a04:	str	w20, [x1, x0, lsl #2]
     a08:	b	7f0 <init_types+0x500>
     a0c:	ldr	x0, [x27, #440]
     a10:	ldr	x21, [x27, #408]
     a14:	ldr	w0, [x0, x3]
     a18:	add	x21, x21, x0
     a1c:	b	7d4 <init_types+0x4e4>
     a20:	ldr	x0, [x27, #400]
     a24:	str	x0, [sp, #136]
     a28:	cmp	x19, x20
     a2c:	b.cs	e5c <init_types+0xb6c>  // b.hs, b.nlast
     a30:	mov	x26, x19
     a34:	mov	x22, #0x0                   	// #0
     a38:	b	aa0 <init_types+0x7b0>
     a3c:	and	x1, x1, #0xffff
     a40:	mov	x24, #0x8                   	// #8
     a44:	str	wzr, [sp, #112]
     a48:	mov	x2, x25
     a4c:	mov	w0, w23
     a50:	str	x1, [sp, #104]
     a54:	bl	288 <get_vbytes_v1>
     a58:	ldr	x1, [sp, #104]
     a5c:	mov	x2, x25
     a60:	mov	x25, x0
     a64:	mov	w0, w23
     a68:	bl	220 <get_vbytes_v2>
     a6c:	ldr	w1, [sp, #112]
     a70:	cmp	x25, #0x0
     a74:	ccmp	w1, #0x0, #0x0, ge  // ge = tcont
     a78:	b.ne	ad8 <init_types+0x7e8>  // b.any
     a7c:	add	x1, x24, x25
     a80:	mov	x2, #0xc                   	// #12
     a84:	sub	x5, x2, x24
     a88:	sub	x0, x0, x25
     a8c:	add	x26, x26, x1
     a90:	add	x22, x5, x22
     a94:	cmp	x26, x20
     a98:	add	x22, x0, x22
     a9c:	b.cs	aec <init_types+0x7fc>  // b.hs, b.nlast
     aa0:	ldrh	w6, [x26, #4]
     aa4:	mov	w0, #0xffff                	// #65535
     aa8:	ldrh	w1, [x26, #6]
     aac:	and	x25, x6, #0x3ff
     ab0:	cmp	w1, w0
     ab4:	lsr	w23, w6, #11
     ab8:	ldp	w5, w0, [x26, #8]
     abc:	b.ne	a3c <init_types+0x74c>  // b.any
     ac0:	lsr	w1, w5, #31
     ac4:	mov	w0, w0
     ac8:	mov	x24, #0x10                  	// #16
     acc:	str	x1, [sp, #112]
     ad0:	orr	x1, x0, x5, lsl #32
     ad4:	b	a48 <init_types+0x758>
     ad8:	ldp	w19, w0, [x21, #40]
     adc:	ldr	x20, [x27, #408]
     ae0:	add	x19, x20, x19
     ae4:	add	x20, x20, x0
     ae8:	b	9ac <init_types+0x6bc>
     aec:	ldr	w25, [x21, #40]
     af0:	mov	x7, x22
     af4:	ldr	x23, [x27, #408]
     af8:	mov	w3, w25
     afc:	ldr	x24, [x27, #416]
     b00:	stp	x7, x3, [sp, #104]
     b04:	add	x24, x7, x24
     b08:	mov	x0, x24
     b0c:	bl	0 <malloc>
     b10:	mov	x26, x0
     b14:	ldp	x7, x3, [sp, #104]
     b18:	cbz	x0, e70 <init_types+0xb80>
     b1c:	mov	x2, x3
     b20:	mov	x1, x23
     b24:	stp	x3, x7, [sp, #112]
     b28:	bl	0 <memcpy>
     b2c:	ldp	w6, w2, [x21, #44]
     b30:	str	w6, [sp, #104]
     b34:	ldr	x7, [sp, #120]
     b38:	mov	w1, w6
     b3c:	add	x0, x1, x7
     b40:	add	x1, x23, x1
     b44:	add	x0, x26, x0
     b48:	bl	0 <memcpy>
     b4c:	ldr	w6, [sp, #104]
     b50:	mov	w1, #0x0                   	// #0
     b54:	ldr	x3, [sp, #112]
     b58:	sub	w2, w6, w25
     b5c:	add	x2, x2, x22
     b60:	str	w6, [sp, #104]
     b64:	add	x0, x26, x3
     b68:	bl	0 <memset>
     b6c:	ldr	w6, [sp, #104]
     b70:	add	w6, w6, w22
     b74:	str	w6, [x21, #44]
     b78:	str	x24, [x27, #416]
     b7c:	cmp	w6, w25
     b80:	b.cc	e80 <init_types+0xb90>  // b.lo, b.ul, b.last
     b84:	stp	x26, x26, [x27, #392]
     b88:	mov	x2, x26
     b8c:	mov	x0, x27
     b90:	str	x26, [x27, #408]
     b94:	mov	x1, x21
     b98:	bl	b0 <ctf_set_base>
     b9c:	ldr	x0, [x27, #408]
     ba0:	cmp	x19, x20
     ba4:	ldr	w6, [x21, #40]
     ba8:	add	x26, x0, x6
     bac:	b.cc	be4 <init_types+0x8f4>  // b.lo, b.ul, b.last
     bb0:	b	e68 <init_types+0xb78>
     bb4:	cmp	w24, #0x4
     bb8:	b.ne	da8 <init_types+0xab8>  // b.any
     bbc:	ldrh	w2, [x19]
     bc0:	ldrh	w1, [x19, #2]
     bc4:	ldr	w0, [x19, #4]
     bc8:	stp	w2, w1, [x9]
     bcc:	str	w0, [x9, #8]
     bd0:	add	x19, x19, x23
     bd4:	add	x8, x8, x9
     bd8:	cmp	x19, x20
     bdc:	mov	x26, x8
     be0:	b.cs	e04 <init_types+0xb14>  // b.hs, b.nlast
     be4:	ldrh	w2, [x19, #4]
     be8:	mov	x0, #0x8                   	// #8
     bec:	ldrh	w5, [x19, #6]
     bf0:	str	x0, [sp, #112]
     bf4:	and	w0, w2, #0x3ff
     bf8:	str	w0, [sp, #104]
     bfc:	mov	w0, #0xffff                	// #65535
     c00:	ldr	w1, [x19, #8]
     c04:	cmp	w5, w0
     c08:	and	w23, w2, #0x400
     c0c:	ldr	w0, [x19, #12]
     c10:	lsr	w24, w2, #11
     c14:	and	x25, x2, #0x3ff
     c18:	and	x22, x5, #0xffff
     c1c:	b.ne	c30 <init_types+0x940>  // b.any
     c20:	mov	w0, w0
     c24:	mov	x2, #0x10                  	// #16
     c28:	orr	x22, x0, x1, lsl #32
     c2c:	str	x2, [sp, #112]
     c30:	mov	x2, x25
     c34:	mov	x1, x22
     c38:	mov	w0, w24
     c3c:	bl	288 <get_vbytes_v1>
     c40:	lsl	w1, w24, #26
     c44:	cmp	w23, #0x0
     c48:	orr	w7, w1, #0x2000000
     c4c:	ldr	w2, [sp, #104]
     c50:	csel	w1, w7, w1, ne  // ne = any
     c54:	ldr	w7, [x19]
     c58:	orr	w1, w1, w2
     c5c:	stp	w7, w1, [x26]
     c60:	mov	x23, x0
     c64:	cmp	w24, #0xd
     c68:	b.hi	dd4 <init_types+0xae4>  // b.pmore
     c6c:	mov	x0, #0x1                   	// #1
     c70:	mov	x1, #0x1d7                 	// #471
     c74:	lsl	x0, x0, x24
     c78:	tst	x0, x1
     c7c:	b.eq	d70 <init_types+0xa80>  // b.none
     c80:	mov	x0, #0xfffffffe            	// #4294967294
     c84:	mov	w1, w22
     c88:	cmp	x22, x0
     c8c:	b.hi	df4 <init_types+0xb04>  // b.pmore
     c90:	str	w22, [x26, #8]
     c94:	mov	w1, w1
     c98:	mov	x9, #0xc                   	// #12
     c9c:	mov	x2, x25
     ca0:	mov	w0, w24
     ca4:	stp	x1, x9, [sp, #120]
     ca8:	bl	220 <get_vbytes_v2>
     cac:	mov	x8, x0
     cb0:	ldp	x1, x9, [sp, #120]
     cb4:	cmp	x22, x1
     cb8:	b.ne	ea4 <init_types+0xbb4>  // b.any
     cbc:	ldr	x0, [sp, #112]
     cc0:	add	x9, x26, x9
     cc4:	cmp	w24, #0x5
     cc8:	mov	x7, x9
     ccc:	add	x19, x19, x0
     cd0:	mov	x6, x19
     cd4:	b.eq	d88 <init_types+0xa98>  // b.none
     cd8:	b.ls	bb4 <init_types+0x8c4>  // b.plast
     cdc:	sub	w3, w24, #0x6
     ce0:	and	w3, w3, #0xffff
     ce4:	cmp	w3, #0x1
     ce8:	b.hi	da8 <init_types+0xab8>  // b.pmore
     cec:	ldr	w0, [sp, #104]
     cf0:	mov	x3, x19
     cf4:	sub	x14, x9, x19
     cf8:	mov	x13, #0x1fff                	// #8191
     cfc:	mov	x12, #0x1fffffff            	// #536870911
     d00:	cbnz	w0, d38 <init_types+0xa48>
     d04:	b	bd0 <init_types+0x8e0>
     d08:	ldrh	w0, [x6, #6]
     d0c:	cmp	x22, x12
     d10:	ldrh	w1, [x6, #4]
     d14:	ldr	w11, [x6]
     d18:	b.gt	d5c <init_types+0xa6c>
     d1c:	stp	w11, w0, [x7]
     d20:	str	w1, [x7, #8]
     d24:	add	x6, x6, #0x8
     d28:	add	x3, x3, #0x10
     d2c:	add	x7, x7, #0xc
     d30:	subs	x25, x25, #0x1
     d34:	b.eq	bd0 <init_types+0x8e0>  // b.none
     d38:	cmp	x22, x13
     d3c:	add	x10, x3, x14
     d40:	b.le	d08 <init_types+0xa18>
     d44:	ldp	w0, w15, [x3, #8]
     d48:	cmp	x22, x12
     d4c:	ldrh	w1, [x3, #4]
     d50:	ldr	w11, [x3]
     d54:	orr	x0, x15, x0, lsl #32
     d58:	b.le	d1c <init_types+0xa2c>
     d5c:	str	w11, [x10]
     d60:	lsr	x11, x0, #32
     d64:	str	w11, [x10, #4]
     d68:	stp	w1, w0, [x10, #8]
     d6c:	b	d24 <init_types+0xa34>
     d70:	mov	x1, #0x3e28                	// #15912
     d74:	tst	x0, x1
     d78:	b.eq	dd4 <init_types+0xae4>  // b.none
     d7c:	ldrh	w1, [x19, #6]
     d80:	str	w1, [x26, #8]
     d84:	b	c94 <init_types+0x9a4>
     d88:	ldr	w2, [sp, #104]
     d8c:	mov	x1, x9
     d90:	mov	x0, x19
     d94:	cbz	w2, da8 <init_types+0xab8>
     d98:	ldrh	w3, [x0], #2
     d9c:	subs	x25, x25, #0x1
     da0:	str	w3, [x1], #4
     da4:	b.ne	d98 <init_types+0xaa8>  // b.any
     da8:	cmp	x23, x8
     dac:	b.ne	ec8 <init_types+0xbd8>  // b.any
     db0:	mov	x23, x8
     db4:	mov	x2, x8
     db8:	mov	x0, x9
     dbc:	mov	x1, x19
     dc0:	str	x8, [sp, #104]
     dc4:	bl	0 <memcpy>
     dc8:	mov	x9, x0
     dcc:	ldr	x8, [sp, #104]
     dd0:	b	bd0 <init_types+0x8e0>
     dd4:	ldp	w7, w0, [x26, #12]
     dd8:	ldr	w1, [x26, #8]
     ddc:	cmn	w1, #0x1
     de0:	b.ne	c94 <init_types+0x9a4>  // b.any
     de4:	mov	w0, w0
     de8:	mov	x9, #0x14                  	// #20
     dec:	orr	x1, x0, x7, lsl #32
     df0:	b	c9c <init_types+0x9ac>
     df4:	lsr	x7, x22, #32
     df8:	mov	w0, w22
     dfc:	stp	w7, w22, [x26, #12]
     e00:	b	dd8 <init_types+0xae8>
     e04:	ldr	x0, [x27, #408]
     e08:	sub	x8, x8, x0
     e0c:	ldr	w1, [x21, #44]
     e10:	cmp	x8, x1
     e14:	b.ne	f1c <init_types+0xc2c>  // b.any
     e18:	mov	w1, #0x2                   	// #2
     e1c:	adrp	x0, 0 <get_kind_v1>
     e20:	add	x0, x0, #0x0
     e24:	str	w1, [x27, #560]
     e28:	add	x0, x0, #0x78
     e2c:	strb	w1, [x21, #2]
     e30:	str	x0, [x27]
     e34:	ldr	x0, [sp, #136]
     e38:	bl	0 <free>
     e3c:	ldp	w19, w0, [x21, #40]
     e40:	ldr	x20, [x27, #408]
     e44:	add	x19, x20, x19
     e48:	add	x20, x20, x0
     e4c:	b	9ac <init_types+0x6bc>
     e50:	str	wzr, [sp, #112]
     e54:	str	wzr, [sp, #120]
     e58:	b	718 <init_types+0x428>
     e5c:	mov	x7, #0x0                   	// #0
     e60:	mov	x22, #0x0                   	// #0
     e64:	b	afc <init_types+0x80c>
     e68:	mov	x8, x26
     e6c:	b	e08 <init_types+0xb18>
     e70:	ldr	w20, [x21, #44]
     e74:	add	x19, x23, x3
     e78:	add	x20, x23, x20
     e7c:	b	9ac <init_types+0x6bc>
     e80:	adrp	x3, 0 <get_kind_v1>
     e84:	add	x3, x3, #0x0
     e88:	adrp	x1, 0 <get_kind_v1>
     e8c:	adrp	x0, 0 <get_kind_v1>
     e90:	add	x3, x3, #0x10
     e94:	add	x1, x1, #0x0
     e98:	add	x0, x0, #0x0
     e9c:	mov	w2, #0x1d0                 	// #464
     ea0:	bl	0 <__assert_fail>
     ea4:	adrp	x3, 0 <get_kind_v1>
     ea8:	add	x3, x3, #0x0
     eac:	adrp	x1, 0 <get_kind_v1>
     eb0:	adrp	x0, 0 <get_kind_v1>
     eb4:	add	x3, x3, #0x10
     eb8:	add	x1, x1, #0x0
     ebc:	add	x0, x0, #0x0
     ec0:	mov	w2, #0x210                 	// #528
     ec4:	bl	0 <__assert_fail>
     ec8:	adrp	x3, 0 <get_kind_v1>
     ecc:	add	x3, x3, #0x0
     ed0:	adrp	x1, 0 <get_kind_v1>
     ed4:	adrp	x0, 0 <get_kind_v1>
     ed8:	add	x3, x3, #0x10
     edc:	add	x1, x1, #0x0
     ee0:	add	x0, x0, #0x0
     ee4:	mov	w2, #0x25c                 	// #604
     ee8:	bl	0 <__assert_fail>
     eec:	mov	w1, #0xa                   	// #10
     ef0:	b	44c <init_types+0x15c>
     ef4:	adrp	x3, 0 <get_kind_v1>
     ef8:	adrp	x1, 0 <get_kind_v1>
     efc:	adrp	x0, 0 <get_kind_v1>
     f00:	add	x3, x3, #0x0
     f04:	add	x1, x1, #0x0
     f08:	add	x0, x0, #0x0
     f0c:	mov	w2, #0x29c                 	// #668
     f10:	bl	0 <__assert_fail>
     f14:	mov	w1, #0x7                   	// #7
     f18:	b	44c <init_types+0x15c>
     f1c:	adrp	x3, 0 <get_kind_v1>
     f20:	add	x3, x3, #0x0
     f24:	adrp	x1, 0 <get_kind_v1>
     f28:	adrp	x0, 0 <get_kind_v1>
     f2c:	add	x3, x3, #0x10
     f30:	add	x1, x1, #0x0
     f34:	add	x0, x0, #0x0
     f38:	mov	w2, #0x265                 	// #613
     f3c:	bl	0 <__assert_fail>

0000000000000f40 <ctf_set_ctl_hashes>:
     f40:	adrp	x1, 0 <get_kind_v1>
     f44:	add	x1, x1, #0x0
     f48:	add	x10, x0, #0x98
     f4c:	add	x8, x0, #0xa8
     f50:	add	x6, x0, #0xb8
     f54:	add	x1, x1, #0xf0
     f58:	add	x5, x0, #0xc8
     f5c:	mov	x11, #0x6                   	// #6
     f60:	mov	x9, #0x5                   	// #5
     f64:	mov	x7, #0x4                   	// #4
     f68:	adrp	x4, 0 <get_kind_v1>
     f6c:	adrp	x3, 0 <get_kind_v1>
     f70:	add	x4, x4, #0x0
     f74:	add	x3, x3, #0x0
     f78:	adrp	x2, 0 <get_kind_v1>
     f7c:	add	x2, x2, #0x0
     f80:	stp	x4, x11, [x0, #216]
     f84:	stp	x10, x3, [x0, #232]
     f88:	stp	x9, x8, [x0, #248]
     f8c:	stp	x2, x7, [x0, #264]
     f90:	stp	x6, x1, [x0, #280]
     f94:	stp	xzr, x5, [x0, #296]
     f98:	stp	xzr, xzr, [x0, #312]
     f9c:	str	xzr, [x0, #328]
     fa0:	ret
     fa4:	nop

0000000000000fa8 <ctf_file_close>:
     fa8:	cbz	x0, 1138 <ctf_file_close+0x190>
     fac:	stp	x29, x30, [sp, #-32]!
     fb0:	mov	x29, sp
     fb4:	stp	x19, x20, [sp, #16]
     fb8:	mov	x19, x0
     fbc:	mov	x1, x19
     fc0:	adrp	x0, 0 <get_kind_v1>
     fc4:	add	x0, x0, #0x0
     fc8:	ldr	w2, [x19, #548]
     fcc:	bl	0 <ctf_dprintf>
     fd0:	ldr	w0, [x19, #548]
     fd4:	cmp	w0, #0x1
     fd8:	b.ls	ff0 <ctf_file_close+0x48>  // b.plast
     fdc:	sub	w0, w0, #0x1
     fe0:	str	w0, [x19, #548]
     fe4:	ldp	x19, x20, [sp, #16]
     fe8:	ldp	x29, x30, [sp], #32
     fec:	ret
     ff0:	ldr	x0, [x19, #504]
     ff4:	bl	0 <free>
     ff8:	ldr	x0, [x19, #536]
     ffc:	bl	0 <free>
    1000:	ldr	x0, [x19, #512]
    1004:	bl	fa8 <ctf_file_close>
    1008:	ldr	x20, [x19, #584]
    100c:	cbz	x20, 1024 <ctf_file_close+0x7c>
    1010:	mov	x1, x20
    1014:	mov	x0, x19
    1018:	ldr	x20, [x20, #8]
    101c:	bl	0 <ctf_dtd_delete>
    1020:	cbnz	x20, 1010 <ctf_file_close+0x68>
    1024:	ldr	x0, [x19, #568]
    1028:	bl	0 <ctf_dynhash_destroy>
    102c:	ldr	w0, [x19, #552]
    1030:	tbnz	w0, #1, 113c <ctf_file_close+0x194>
    1034:	ldr	x0, [x19, #152]
    1038:	bl	0 <ctf_hash_destroy>
    103c:	ldr	x0, [x19, #168]
    1040:	bl	0 <ctf_hash_destroy>
    1044:	ldr	x0, [x19, #184]
    1048:	bl	0 <ctf_hash_destroy>
    104c:	ldr	x0, [x19, #200]
    1050:	bl	0 <ctf_hash_destroy>
    1054:	ldr	x20, [x19, #608]
    1058:	cbz	x20, 1074 <ctf_file_close+0xcc>
    105c:	nop
    1060:	mov	x1, x20
    1064:	mov	x0, x19
    1068:	ldr	x20, [x20, #8]
    106c:	bl	0 <ctf_dvd_delete>
    1070:	cbnz	x20, 1060 <ctf_file_close+0xb8>
    1074:	ldr	x0, [x19, #592]
    1078:	adrp	x20, 0 <get_kind_v1>
    107c:	add	x20, x20, #0x0
    1080:	bl	0 <ctf_dynhash_destroy>
    1084:	mov	x0, x19
    1088:	bl	0 <ctf_str_free_atoms>
    108c:	ldr	x0, [x19, #704]
    1090:	bl	0 <free>
    1094:	ldr	x0, [x19, #24]
    1098:	add	x1, x20, #0xf0
    109c:	cmp	x0, x1
    10a0:	b.eq	10a8 <ctf_file_close+0x100>  // b.none
    10a4:	bl	0 <free>
    10a8:	ldr	x0, [x19, #56]
    10ac:	add	x1, x20, #0xf0
    10b0:	cmp	x0, x1
    10b4:	b.eq	10bc <ctf_file_close+0x114>  // b.none
    10b8:	bl	0 <free>
    10bc:	ldr	x0, [x19, #88]
    10c0:	add	x20, x20, #0xf0
    10c4:	cmp	x0, x20
    10c8:	b.eq	1160 <ctf_file_close+0x1b8>  // b.none
    10cc:	bl	0 <free>
    10d0:	ldr	x0, [x19, #400]
    10d4:	bl	0 <free>
    10d8:	ldr	x0, [x19, #128]
    10dc:	bl	0 <ctf_dynhash_destroy>
    10e0:	ldr	x0, [x19, #648]
    10e4:	bl	0 <ctf_dynhash_destroy>
    10e8:	ldr	x0, [x19, #656]
    10ec:	bl	0 <ctf_dynhash_destroy>
    10f0:	ldr	x0, [x19, #664]
    10f4:	bl	0 <ctf_dynhash_destroy>
    10f8:	ldr	x0, [x19, #672]
    10fc:	bl	0 <ctf_dynhash_destroy>
    1100:	ldr	x0, [x19, #696]
    1104:	bl	0 <ctf_dynhash_destroy>
    1108:	ldr	x0, [x19, #424]
    110c:	bl	0 <free>
    1110:	ldr	x0, [x19, #440]
    1114:	bl	0 <free>
    1118:	ldr	x0, [x19, #448]
    111c:	bl	0 <free>
    1120:	ldr	x0, [x19, #8]
    1124:	bl	0 <free>
    1128:	mov	x0, x19
    112c:	ldp	x19, x20, [sp, #16]
    1130:	ldp	x29, x30, [sp], #32
    1134:	b	0 <free>
    1138:	ret
    113c:	ldr	x0, [x19, #160]
    1140:	bl	0 <ctf_dynhash_destroy>
    1144:	ldr	x0, [x19, #176]
    1148:	bl	0 <ctf_dynhash_destroy>
    114c:	ldr	x0, [x19, #192]
    1150:	bl	0 <ctf_dynhash_destroy>
    1154:	ldr	x0, [x19, #208]
    1158:	bl	0 <ctf_dynhash_destroy>
    115c:	b	1054 <ctf_file_close+0xac>
    1160:	ldr	x0, [x19, #136]
    1164:	cbz	x0, 10d0 <ctf_file_close+0x128>
    1168:	ldr	x1, [x19, #144]
    116c:	bl	0 <ctf_munmap>
    1170:	b	10d0 <ctf_file_close+0x128>
    1174:	nop

0000000000001178 <ctf_close>:
    1178:	b	0 <ctf_arc_close>
    117c:	nop

0000000000001180 <ctf_get_arc>:
    1180:	ldr	x0, [x0, #640]
    1184:	ret

0000000000001188 <ctf_getdatasect>:
    1188:	ldp	x2, x3, [x0, #24]
    118c:	stp	x2, x3, [x8]
    1190:	ldp	x0, x1, [x0, #40]
    1194:	stp	x0, x1, [x8, #16]
    1198:	ret
    119c:	nop

00000000000011a0 <ctf_parent_file>:
    11a0:	ldr	x0, [x0, #512]
    11a4:	ret

00000000000011a8 <ctf_parent_name>:
    11a8:	ldr	x0, [x0, #528]
    11ac:	ret

00000000000011b0 <ctf_parent_name_set>:
    11b0:	stp	x29, x30, [sp, #-32]!
    11b4:	mov	x29, sp
    11b8:	stp	x19, x20, [sp, #16]
    11bc:	mov	x19, x0
    11c0:	mov	x20, x1
    11c4:	ldr	x0, [x0, #536]
    11c8:	cbz	x0, 11d0 <ctf_parent_name_set+0x20>
    11cc:	bl	0 <free>
    11d0:	mov	x0, x20
    11d4:	bl	0 <strdup>
    11d8:	str	x0, [x19, #536]
    11dc:	mov	x1, x0
    11e0:	cbz	x0, 11f8 <ctf_parent_name_set+0x48>
    11e4:	mov	w0, #0x0                   	// #0
    11e8:	str	x1, [x19, #528]
    11ec:	ldp	x19, x20, [sp, #16]
    11f0:	ldp	x29, x30, [sp], #32
    11f4:	ret
    11f8:	mov	x0, x19
    11fc:	mov	w1, #0xc                   	// #12
    1200:	bl	0 <ctf_set_errno>
    1204:	b	11ec <ctf_parent_name_set+0x3c>

0000000000001208 <ctf_cuname>:
    1208:	ldr	x0, [x0, #496]
    120c:	ret

0000000000001210 <ctf_cuname_set>:
    1210:	stp	x29, x30, [sp, #-32]!
    1214:	mov	x29, sp
    1218:	stp	x19, x20, [sp, #16]
    121c:	mov	x19, x0
    1220:	mov	x20, x1
    1224:	ldr	x0, [x0, #504]
    1228:	cbz	x0, 1230 <ctf_cuname_set+0x20>
    122c:	bl	0 <free>
    1230:	mov	x0, x20
    1234:	bl	0 <strdup>
    1238:	str	x0, [x19, #504]
    123c:	mov	x1, x0
    1240:	cbz	x0, 1258 <ctf_cuname_set+0x48>
    1244:	mov	w0, #0x0                   	// #0
    1248:	str	x1, [x19, #496]
    124c:	ldp	x19, x20, [sp, #16]
    1250:	ldp	x29, x30, [sp], #32
    1254:	ret
    1258:	mov	x0, x19
    125c:	mov	w1, #0xc                   	// #12
    1260:	bl	0 <ctf_set_errno>
    1264:	b	124c <ctf_cuname_set+0x3c>

0000000000001268 <ctf_import>:
    1268:	stp	x29, x30, [sp, #-32]!
    126c:	cmp	x0, #0x0
    1270:	ccmp	x0, x1, #0x4, ne  // ne = any
    1274:	mov	x29, sp
    1278:	stp	x19, x20, [sp, #16]
    127c:	mov	x19, x0
    1280:	b.eq	12f4 <ctf_import+0x8c>  // b.none
    1284:	mov	x20, x1
    1288:	cbz	x1, 130c <ctf_import+0xa4>
    128c:	ldr	w1, [x1, #548]
    1290:	cbz	w1, 12f4 <ctf_import+0x8c>
    1294:	ldr	x1, [x0, #488]
    1298:	ldr	x2, [x20, #488]
    129c:	cmp	x2, x1
    12a0:	b.ne	1328 <ctf_import+0xc0>  // b.any
    12a4:	ldr	x0, [x0, #512]
    12a8:	cbz	x0, 12c0 <ctf_import+0x58>
    12ac:	ldr	w1, [x0, #548]
    12b0:	sub	w1, w1, #0x1
    12b4:	str	w1, [x0, #548]
    12b8:	bl	fa8 <ctf_file_close>
    12bc:	str	xzr, [x19, #512]
    12c0:	ldr	x0, [x19, #528]
    12c4:	cbz	x0, 133c <ctf_import+0xd4>
    12c8:	ldr	w1, [x19, #552]
    12cc:	ldr	w0, [x20, #548]
    12d0:	orr	w1, w1, #0x1
    12d4:	str	w1, [x19, #552]
    12d8:	add	w0, w0, #0x1
    12dc:	str	w0, [x20, #548]
    12e0:	str	x20, [x19, #512]
    12e4:	mov	w0, #0x0                   	// #0
    12e8:	ldp	x19, x20, [sp, #16]
    12ec:	ldp	x29, x30, [sp], #32
    12f0:	ret
    12f4:	mov	x0, x19
    12f8:	mov	w1, #0x16                  	// #22
    12fc:	bl	0 <ctf_set_errno>
    1300:	ldp	x19, x20, [sp, #16]
    1304:	ldp	x29, x30, [sp], #32
    1308:	ret
    130c:	ldr	x0, [x0, #512]
    1310:	cbz	x0, 12e0 <ctf_import+0x78>
    1314:	ldr	w1, [x0, #548]
    1318:	sub	w1, w1, #0x1
    131c:	str	w1, [x0, #548]
    1320:	bl	fa8 <ctf_file_close>
    1324:	b	12e0 <ctf_import+0x78>
    1328:	mov	w1, #0x3f4                 	// #1012
    132c:	bl	0 <ctf_set_errno>
    1330:	ldp	x19, x20, [sp, #16]
    1334:	ldp	x29, x30, [sp], #32
    1338:	ret
    133c:	adrp	x1, 0 <get_kind_v1>
    1340:	mov	x0, x19
    1344:	add	x1, x1, #0x0
    1348:	bl	11b0 <ctf_parent_name_set>
    134c:	tbz	w0, #31, 12c8 <ctf_import+0x60>
    1350:	b	1300 <ctf_import+0x98>
    1354:	nop

0000000000001358 <ctf_setmodel>:
    1358:	adrp	x2, 0 <get_kind_v1>
    135c:	add	x2, x2, #0x0
    1360:	add	x2, x2, #0xf8
    1364:	mov	w3, #0x1                   	// #1
    1368:	b	1378 <ctf_setmodel+0x20>
    136c:	ldr	x3, [x2, #56]!
    1370:	cbz	x3, 1390 <ctf_setmodel+0x38>
    1374:	ldr	w3, [x2, #8]
    1378:	cmp	w3, w1
    137c:	b.ne	136c <ctf_setmodel+0x14>  // b.any
    1380:	mov	w1, #0x0                   	// #0
    1384:	str	x2, [x0, #488]
    1388:	mov	w0, w1
    138c:	ret
    1390:	stp	x29, x30, [sp, #-16]!
    1394:	mov	w1, #0x16                  	// #22
    1398:	mov	x29, sp
    139c:	bl	0 <ctf_set_errno>
    13a0:	ldp	x29, x30, [sp], #16
    13a4:	ret

00000000000013a8 <ctf_bufopen_internal>:
    13a8:	stp	x29, x30, [sp, #-176]!
    13ac:	mov	x29, sp
    13b0:	stp	x19, x20, [sp, #16]
    13b4:	mov	x19, x1
    13b8:	mov	x20, x2
    13bc:	stp	x21, x22, [sp, #32]
    13c0:	mov	w22, w4
    13c4:	stp	x23, x24, [sp, #48]
    13c8:	mov	x23, x0
    13cc:	mov	x24, x5
    13d0:	stp	x25, x26, [sp, #64]
    13d4:	mov	x25, x3
    13d8:	bl	0 <libctf_init_debug>
    13dc:	cbz	x23, 18a4 <ctf_bufopen_internal+0x4fc>
    13e0:	cbz	x19, 1404 <ctf_bufopen_internal+0x5c>
    13e4:	orr	x0, x20, x25
    13e8:	cbz	x0, 18a4 <ctf_bufopen_internal+0x4fc>
    13ec:	ldr	x0, [x19, #24]
    13f0:	and	x0, x0, #0xfffffffffffffff7
    13f4:	cmp	x0, #0x10
    13f8:	b.ne	1944 <ctf_bufopen_internal+0x59c>  // b.any
    13fc:	ldr	x0, [x19, #8]
    1400:	cbz	x0, 1a0c <ctf_bufopen_internal+0x664>
    1404:	cbz	x20, 1410 <ctf_bufopen_internal+0x68>
    1408:	ldr	x0, [x20, #8]
    140c:	cbz	x0, 1a20 <ctf_bufopen_internal+0x678>
    1410:	ldr	x0, [x23, #16]
    1414:	cmp	x0, #0x3
    1418:	b.ls	18d0 <ctf_bufopen_internal+0x528>  // b.plast
    141c:	stp	x27, x28, [sp, #80]
    1420:	adrp	x0, 0 <get_kind_v1>
    1424:	add	x0, x0, #0x0
    1428:	ldr	x28, [x23, #8]
    142c:	ldrh	w1, [x28]
    1430:	ldrb	w2, [x28, #2]
    1434:	bl	0 <ctf_dprintf>
    1438:	ldrh	w0, [x28]
    143c:	mov	w1, #0xdff2                	// #57330
    1440:	cmp	w0, w1
    1444:	b.ne	1a70 <ctf_bufopen_internal+0x6c8>  // b.any
    1448:	ldrb	w1, [x28, #2]
    144c:	sub	w0, w1, #0x1
    1450:	and	w0, w0, #0xff
    1454:	cmp	w0, #0x3
    1458:	b.hi	1a58 <ctf_bufopen_internal+0x6b0>  // b.pmore
    145c:	cmp	x19, #0x0
    1460:	cset	w0, ne  // ne = any
    1464:	str	w0, [sp, #112]
    1468:	cmp	w0, #0x0
    146c:	ccmp	w1, #0x2, #0x2, ne  // ne = any
    1470:	b.ls	1a34 <ctf_bufopen_internal+0x68c>  // b.plast
    1474:	cmp	w1, #0x4
    1478:	mov	x27, #0x34                  	// #52
    147c:	mov	x0, #0x28                  	// #40
    1480:	csel	x27, x27, x0, eq  // eq = none
    1484:	str	wzr, [sp, #104]
    1488:	ldr	x0, [x23, #16]
    148c:	cmp	x0, x27
    1490:	b.cc	18fc <ctf_bufopen_internal+0x554>  // b.lo, b.ul, b.last
    1494:	mov	x1, #0x1                   	// #1
    1498:	mov	x0, #0x2d8                 	// #728
    149c:	bl	0 <calloc>
    14a0:	mov	x26, x0
    14a4:	cbz	x0, 1aac <ctf_bufopen_internal+0x704>
    14a8:	cbz	w22, 14b4 <ctf_bufopen_internal+0x10c>
    14ac:	mov	w0, #0x2                   	// #2
    14b0:	str	w0, [x26, #552]
    14b4:	mov	x0, #0x34                  	// #52
    14b8:	bl	0 <malloc>
    14bc:	str	x0, [x26, #8]
    14c0:	mov	x21, x0
    14c4:	cbz	x0, 1aa4 <ctf_bufopen_internal+0x6fc>
    14c8:	ldr	x1, [x23, #8]
    14cc:	mov	x2, x27
    14d0:	bl	0 <memcpy>
    14d4:	ldrb	w0, [x28, #2]
    14d8:	cmp	w0, #0x3
    14dc:	b.ls	1970 <ctf_bufopen_internal+0x5c8>  // b.plast
    14e0:	ldp	w1, w2, [x21, #44]
    14e4:	ldr	w0, [sp, #104]
    14e8:	cbnz	w0, 19a4 <ctf_bufopen_internal+0x5fc>
    14ec:	ldrb	w0, [x21, #3]
    14f0:	add	w1, w1, w2
    14f4:	strb	w0, [x26, #16]
    14f8:	str	x1, [x26, #416]
    14fc:	adrp	x0, 0 <get_kind_v1>
    1500:	add	x0, x0, #0x0
    1504:	bl	0 <ctf_dprintf>
    1508:	ldr	x22, [x26, #416]
    150c:	ldr	w0, [x21, #16]
    1510:	cmp	x22, w0, uxtw
    1514:	b.cc	1914 <ctf_bufopen_internal+0x56c>  // b.lo, b.ul, b.last
    1518:	ldr	w1, [x21, #20]
    151c:	cmp	x22, w1, uxtw
    1520:	b.cc	1914 <ctf_bufopen_internal+0x56c>  // b.lo, b.ul, b.last
    1524:	ldr	w2, [x21, #24]
    1528:	orr	w7, w1, w2
    152c:	cmp	x22, w2, uxtw
    1530:	b.cc	1914 <ctf_bufopen_internal+0x56c>  // b.lo, b.ul, b.last
    1534:	ldr	w3, [x21, #28]
    1538:	cmp	x22, w3, uxtw
    153c:	b.cc	1914 <ctf_bufopen_internal+0x56c>  // b.lo, b.ul, b.last
    1540:	ldr	w5, [x21, #32]
    1544:	orr	w9, w3, w5
    1548:	cmp	x22, w5, uxtw
    154c:	b.cc	1914 <ctf_bufopen_internal+0x56c>  // b.lo, b.ul, b.last
    1550:	ldr	w8, [x21, #40]
    1554:	cmp	x22, w8, uxtw
    1558:	b.cc	1914 <ctf_bufopen_internal+0x56c>  // b.lo, b.ul, b.last
    155c:	ldr	w10, [x21, #44]
    1560:	cmp	x22, w10, uxtw
    1564:	b.cc	1914 <ctf_bufopen_internal+0x56c>  // b.lo, b.ul, b.last
    1568:	cmp	w3, w8
    156c:	csel	w11, w3, w8, ls  // ls = plast
    1570:	cmp	w1, w2
    1574:	ccmp	w0, w1, #0x2, ls  // ls = plast
    1578:	ccmp	w11, w2, #0x0, ls  // ls = plast
    157c:	ccmp	w3, w5, #0x2, cs  // cs = hs, nlast
    1580:	b.hi	1914 <ctf_bufopen_internal+0x56c>  // b.pmore
    1584:	ldr	w2, [x21, #36]
    1588:	cmp	w8, w2
    158c:	ccmp	w5, w2, #0x2, cs  // cs = hs, nlast
    1590:	ccmp	w8, w10, #0x2, ls  // ls = plast
    1594:	b.hi	1914 <ctf_bufopen_internal+0x56c>  // b.pmore
    1598:	orr	w0, w0, w8
    159c:	orr	w1, w7, w9
    15a0:	orr	w0, w0, w2
    15a4:	and	w1, w1, #0x2
    15a8:	and	w0, w0, #0x3
    15ac:	orr	w0, w0, w1
    15b0:	cbnz	w0, 1914 <ctf_bufopen_internal+0x56c>
    15b4:	ldrb	w28, [x21, #3]
    15b8:	tbnz	w28, #0, 1b1c <ctf_bufopen_internal+0x774>
    15bc:	ldr	w0, [sp, #104]
    15c0:	cbnz	w0, 1ac4 <ctf_bufopen_internal+0x71c>
    15c4:	ldr	x0, [x23, #8]
    15c8:	stp	x0, xzr, [x26, #392]
    15cc:	add	x0, x0, x27
    15d0:	str	x0, [x26, #408]
    15d4:	ldrb	w1, [x21, #2]
    15d8:	adrp	x22, 0 <get_kind_v1>
    15dc:	add	x22, x22, #0x0
    15e0:	mov	w3, #0x28                  	// #40
    15e4:	add	x2, x22, #0x28
    15e8:	str	w1, [x26, #560]
    15ec:	mov	x0, x26
    15f0:	umaddl	x1, w1, w3, x2
    15f4:	str	x1, [x26]
    15f8:	bl	0 <ctf_str_create_atoms>
    15fc:	mov	w0, #0x7fffffff            	// #2147483647
    1600:	str	w0, [x26, #544]
    1604:	ldr	w0, [sp, #112]
    1608:	ldp	x2, x3, [x23]
    160c:	stp	x2, x3, [x26, #24]
    1610:	ldp	x2, x3, [x23, #16]
    1614:	stp	x2, x3, [x26, #40]
    1618:	cbz	w0, 163c <ctf_bufopen_internal+0x294>
    161c:	ldp	x0, x1, [x19]
    1620:	stp	x0, x1, [x26, #56]
    1624:	ldp	x0, x1, [x20]
    1628:	stp	x0, x1, [x26, #88]
    162c:	ldp	x0, x1, [x19, #16]
    1630:	stp	x0, x1, [x26, #72]
    1634:	ldp	x0, x1, [x20, #16]
    1638:	stp	x0, x1, [x26, #104]
    163c:	ldr	x0, [x26, #24]
    1640:	cbz	x0, 1650 <ctf_bufopen_internal+0x2a8>
    1644:	bl	0 <strdup>
    1648:	str	x0, [x26, #24]
    164c:	cbz	x0, 1af4 <ctf_bufopen_internal+0x74c>
    1650:	ldr	x0, [x26, #56]
    1654:	cbz	x0, 1664 <ctf_bufopen_internal+0x2bc>
    1658:	bl	0 <strdup>
    165c:	str	x0, [x26, #56]
    1660:	cbz	x0, 1af4 <ctf_bufopen_internal+0x74c>
    1664:	ldr	x0, [x26, #88]
    1668:	cbz	x0, 1678 <ctf_bufopen_internal+0x2d0>
    166c:	bl	0 <strdup>
    1670:	str	x0, [x26, #88]
    1674:	cbz	x0, 1af4 <ctf_bufopen_internal+0x74c>
    1678:	ldr	x1, [x26, #24]
    167c:	cbz	x1, 1e20 <ctf_bufopen_internal+0xa78>
    1680:	ldr	x1, [x26, #56]
    1684:	cbz	x1, 1dd4 <ctf_bufopen_internal+0xa2c>
    1688:	cbz	x0, 1b94 <ctf_bufopen_internal+0x7ec>
    168c:	cbz	x20, 16a0 <ctf_bufopen_internal+0x2f8>
    1690:	ldr	x0, [x20, #8]
    1694:	str	x0, [x26, #352]
    1698:	ldr	x0, [x20, #16]
    169c:	str	x0, [x26, #360]
    16a0:	ldr	w0, [sp, #104]
    16a4:	str	x25, [x26, #128]
    16a8:	cbz	w0, 1ba0 <ctf_bufopen_internal+0x7f8>
    16ac:	ldp	w0, w2, [x21, #16]
    16b0:	ldr	x23, [x26, #408]
    16b4:	sub	w1, w2, w0
    16b8:	and	x1, x1, #0xfffffff8
    16bc:	add	x0, x23, w0, uxtw
    16c0:	add	x1, x0, x1
    16c4:	b	16dc <ctf_bufopen_internal+0x334>
    16c8:	ldp	w5, w3, [x0]
    16cc:	rev	w5, w5
    16d0:	rev	w3, w3
    16d4:	stp	w5, w3, [x0]
    16d8:	add	x0, x0, #0x8
    16dc:	cmp	x0, x1
    16e0:	b.ne	16c8 <ctf_bufopen_internal+0x320>  // b.any
    16e4:	ldr	w0, [x21, #24]
    16e8:	add	x3, x23, w2, uxtw
    16ec:	mov	x1, #0x0                   	// #0
    16f0:	sub	w0, w0, w2
    16f4:	lsr	x0, x0, #2
    16f8:	b	170c <ctf_bufopen_internal+0x364>
    16fc:	ldr	w2, [x3, x1, lsl #2]
    1700:	rev	w2, w2
    1704:	str	w2, [x3, x1, lsl #2]
    1708:	add	x1, x1, #0x1
    170c:	cmp	x0, x1
    1710:	b.ne	16fc <ctf_bufopen_internal+0x354>  // b.any
    1714:	ldp	w1, w0, [x21, #24]
    1718:	mov	x2, #0x0                   	// #0
    171c:	sub	w0, w0, w1
    1720:	add	x1, x23, w1, uxtw
    1724:	lsr	x0, x0, #2
    1728:	b	173c <ctf_bufopen_internal+0x394>
    172c:	ldr	w3, [x1, x2, lsl #2]
    1730:	rev	w3, w3
    1734:	str	w3, [x1, x2, lsl #2]
    1738:	add	x2, x2, #0x1
    173c:	cmp	x0, x2
    1740:	b.ne	172c <ctf_bufopen_internal+0x384>  // b.any
    1744:	ldp	w1, w0, [x21, #28]
    1748:	mov	x2, #0x0                   	// #0
    174c:	sub	w0, w0, w1
    1750:	add	x1, x23, w1, uxtw
    1754:	lsr	x0, x0, #2
    1758:	b	176c <ctf_bufopen_internal+0x3c4>
    175c:	ldr	w3, [x1, x2, lsl #2]
    1760:	rev	w3, w3
    1764:	str	w3, [x1, x2, lsl #2]
    1768:	add	x2, x2, #0x1
    176c:	cmp	x0, x2
    1770:	b.ne	175c <ctf_bufopen_internal+0x3b4>  // b.any
    1774:	ldp	w1, w0, [x21, #32]
    1778:	mov	x2, #0x0                   	// #0
    177c:	sub	w0, w0, w1
    1780:	add	x1, x23, w1, uxtw
    1784:	lsr	x0, x0, #2
    1788:	b	179c <ctf_bufopen_internal+0x3f4>
    178c:	ldr	w3, [x1, x2, lsl #2]
    1790:	rev	w3, w3
    1794:	str	w3, [x1, x2, lsl #2]
    1798:	add	x2, x2, #0x1
    179c:	cmp	x0, x2
    17a0:	b.ne	178c <ctf_bufopen_internal+0x3e4>  // b.any
    17a4:	ldp	w0, w2, [x21, #36]
    17a8:	sub	w1, w2, w0
    17ac:	and	x1, x1, #0xfffffff8
    17b0:	add	x0, x23, w0, uxtw
    17b4:	add	x1, x0, x1
    17b8:	b	17d0 <ctf_bufopen_internal+0x428>
    17bc:	ldp	w5, w3, [x0]
    17c0:	rev	w5, w5
    17c4:	rev	w3, w3
    17c8:	stp	w5, w3, [x0]
    17cc:	add	x0, x0, #0x8
    17d0:	cmp	x0, x1
    17d4:	b.ne	17bc <ctf_bufopen_internal+0x414>  // b.any
    17d8:	ldr	w28, [x21, #44]
    17dc:	add	x23, x23, w2, uxtw
    17e0:	sub	w28, w28, w2
    17e4:	add	x28, x23, x28
    17e8:	cmp	x23, x28
    17ec:	b.cs	1ba0 <ctf_bufopen_internal+0x7f8>  // b.hs, b.nlast
    17f0:	ldp	w0, w25, [x23]
    17f4:	ldr	w5, [x23, #8]
    17f8:	rev	w25, w25
    17fc:	rev	w0, w0
    1800:	rev	w27, w5
    1804:	stp	w0, w25, [x23]
    1808:	lsr	w3, w25, #26
    180c:	str	w27, [x23, #8]
    1810:	and	x25, x25, #0xffffff
    1814:	mov	w0, w3
    1818:	mov	x2, x25
    181c:	mov	x1, x27
    1820:	str	w3, [sp, #104]
    1824:	str	w27, [sp, #116]
    1828:	bl	220 <get_vbytes_v2>
    182c:	ldr	w5, [sp, #116]
    1830:	mov	x2, x0
    1834:	ldr	w3, [sp, #104]
    1838:	add	x0, x23, #0xc
    183c:	cmn	w5, #0x1
    1840:	mov	x4, #0x1fffffff            	// #536870911
    1844:	b.eq	1fa8 <ctf_bufopen_internal+0xc00>  // b.none
    1848:	cmp	w3, #0x5
    184c:	b.eq	1f80 <ctf_bufopen_internal+0xbd8>  // b.none
    1850:	b.ls	1e2c <ctf_bufopen_internal+0xa84>  // b.plast
    1854:	cmp	w3, #0x8
    1858:	b.eq	1f50 <ctf_bufopen_internal+0xba8>  // b.none
    185c:	b.ls	1e6c <ctf_bufopen_internal+0xac4>  // b.plast
    1860:	cmp	w3, #0xd
    1864:	b.ls	1ef4 <ctf_bufopen_internal+0xb4c>  // b.plast
    1868:	cmp	w3, #0xe
    186c:	b.ne	1ecc <ctf_bufopen_internal+0xb24>  // b.any
    1870:	cmp	x2, #0x8
    1874:	b.ne	1fc4 <ctf_bufopen_internal+0xc1c>  // b.any
    1878:	ldrh	w5, [x0, #4]
    187c:	ldrh	w1, [x0, #6]
    1880:	ldr	w7, [x0]
    1884:	rev16	w5, w5
    1888:	rev16	w1, w1
    188c:	strh	w5, [x0, #4]
    1890:	rev	w7, w7
    1894:	str	w7, [x0]
    1898:	strh	w1, [x0, #6]
    189c:	add	x23, x0, x2
    18a0:	b	17e8 <ctf_bufopen_internal+0x440>
    18a4:	mov	x0, x24
    18a8:	mov	w1, #0x16                  	// #22
    18ac:	bl	0 <ctf_set_open_errno>
    18b0:	mov	x26, x0
    18b4:	mov	x0, x26
    18b8:	ldp	x19, x20, [sp, #16]
    18bc:	ldp	x21, x22, [sp, #32]
    18c0:	ldp	x23, x24, [sp, #48]
    18c4:	ldp	x25, x26, [sp, #64]
    18c8:	ldp	x29, x30, [sp], #176
    18cc:	ret
    18d0:	mov	x0, x24
    18d4:	mov	w1, #0x3f1                 	// #1009
    18d8:	bl	0 <ctf_set_open_errno>
    18dc:	mov	x26, x0
    18e0:	mov	x0, x26
    18e4:	ldp	x19, x20, [sp, #16]
    18e8:	ldp	x21, x22, [sp, #32]
    18ec:	ldp	x23, x24, [sp, #48]
    18f0:	ldp	x25, x26, [sp, #64]
    18f4:	ldp	x29, x30, [sp], #176
    18f8:	ret
    18fc:	mov	x0, x24
    1900:	mov	w1, #0x3f1                 	// #1009
    1904:	bl	0 <ctf_set_open_errno>
    1908:	mov	x26, x0
    190c:	ldp	x27, x28, [sp, #80]
    1910:	b	18b4 <ctf_bufopen_internal+0x50c>
    1914:	mov	x0, x24
    1918:	mov	w1, #0x3ef                 	// #1007
    191c:	bl	0 <ctf_set_open_errno>
    1920:	mov	x26, x0
    1924:	mov	x0, x26
    1928:	ldp	x19, x20, [sp, #16]
    192c:	ldp	x21, x22, [sp, #32]
    1930:	ldp	x23, x24, [sp, #48]
    1934:	ldp	x25, x26, [sp, #64]
    1938:	ldp	x27, x28, [sp, #80]
    193c:	ldp	x29, x30, [sp], #176
    1940:	ret
    1944:	mov	x0, x24
    1948:	mov	w1, #0x3ec                 	// #1004
    194c:	bl	0 <ctf_set_open_errno>
    1950:	mov	x26, x0
    1954:	mov	x0, x26
    1958:	ldp	x19, x20, [sp, #16]
    195c:	ldp	x21, x22, [sp, #32]
    1960:	ldp	x23, x24, [sp, #48]
    1964:	ldp	x25, x26, [sp, #64]
    1968:	ldp	x29, x30, [sp], #176
    196c:	ret
    1970:	ldp	w3, w0, [x21, #20]
    1974:	ldp	w7, w5, [x21, #12]
    1978:	stp	wzr, w7, [x21, #12]
    197c:	ldr	w2, [x21, #36]
    1980:	ldur	x1, [x21, #28]
    1984:	stp	w5, w3, [x21, #20]
    1988:	str	w0, [x21, #28]
    198c:	str	w0, [x21, #36]
    1990:	str	x1, [x21, #40]
    1994:	ldr	w1, [x21, #32]
    1998:	str	w0, [x21, #32]
    199c:	str	w2, [x21, #48]
    19a0:	b	14e4 <ctf_bufopen_internal+0x13c>
    19a4:	ldrh	w0, [x21]
    19a8:	rev	w1, w1
    19ac:	ldp	w12, w11, [x21, #4]
    19b0:	rev16	w0, w0
    19b4:	ldp	w9, w8, [x21, #20]
    19b8:	strh	w0, [x21]
    19bc:	ldp	w7, w5, [x21, #28]
    19c0:	rev	w2, w2
    19c4:	ldp	w3, w0, [x21, #36]
    19c8:	rev	w12, w12
    19cc:	ldr	w10, [x21, #12]
    19d0:	rev	w11, w11
    19d4:	rev	w9, w9
    19d8:	rev	w8, w8
    19dc:	rev	w10, w10
    19e0:	rev	w7, w7
    19e4:	rev	w5, w5
    19e8:	rev	w3, w3
    19ec:	rev	w0, w0
    19f0:	stp	w12, w11, [x21, #4]
    19f4:	str	w10, [x21, #12]
    19f8:	stp	w9, w8, [x21, #20]
    19fc:	stp	w7, w5, [x21, #28]
    1a00:	stp	w3, w0, [x21, #36]
    1a04:	stp	w1, w2, [x21, #44]
    1a08:	b	14ec <ctf_bufopen_internal+0x144>
    1a0c:	mov	x0, x24
    1a10:	mov	w1, #0x3ed                 	// #1005
    1a14:	bl	0 <ctf_set_open_errno>
    1a18:	mov	x26, x0
    1a1c:	b	18b4 <ctf_bufopen_internal+0x50c>
    1a20:	mov	x0, x24
    1a24:	mov	w1, #0x3ee                 	// #1006
    1a28:	bl	0 <ctf_set_open_errno>
    1a2c:	mov	x26, x0
    1a30:	b	18b4 <ctf_bufopen_internal+0x50c>
    1a34:	adrp	x0, 0 <get_kind_v1>
    1a38:	add	x0, x0, #0x0
    1a3c:	bl	0 <ctf_dprintf>
    1a40:	mov	x0, x24
    1a44:	mov	w1, #0x40a                 	// #1034
    1a48:	bl	0 <ctf_set_open_errno>
    1a4c:	mov	x26, x0
    1a50:	ldp	x27, x28, [sp, #80]
    1a54:	b	18b4 <ctf_bufopen_internal+0x50c>
    1a58:	mov	x0, x24
    1a5c:	mov	w1, #0x3ea                 	// #1002
    1a60:	bl	0 <ctf_set_open_errno>
    1a64:	mov	x26, x0
    1a68:	ldp	x27, x28, [sp, #80]
    1a6c:	b	18b4 <ctf_bufopen_internal+0x50c>
    1a70:	mov	w1, #0xf2df                	// #62175
    1a74:	cmp	w0, w1
    1a78:	b.ne	18fc <ctf_bufopen_internal+0x554>  // b.any
    1a7c:	ldrb	w0, [x28, #2]
    1a80:	cmp	w0, #0x4
    1a84:	b.ne	1a58 <ctf_bufopen_internal+0x6b0>  // b.any
    1a88:	mov	w0, #0x1                   	// #1
    1a8c:	cmp	x19, #0x0
    1a90:	mov	x27, #0x34                  	// #52
    1a94:	str	w0, [sp, #104]
    1a98:	cset	w0, ne  // ne = any
    1a9c:	str	w0, [sp, #112]
    1aa0:	b	1488 <ctf_bufopen_internal+0xe0>
    1aa4:	mov	x0, x26
    1aa8:	bl	0 <free>
    1aac:	mov	x0, x24
    1ab0:	mov	w1, #0xc                   	// #12
    1ab4:	bl	0 <ctf_set_open_errno>
    1ab8:	mov	x26, x0
    1abc:	ldp	x27, x28, [sp, #80]
    1ac0:	b	18b4 <ctf_bufopen_internal+0x50c>
    1ac4:	mov	x0, x22
    1ac8:	bl	0 <malloc>
    1acc:	str	x0, [x26, #392]
    1ad0:	mov	x28, x0
    1ad4:	cbz	x0, 1b14 <ctf_bufopen_internal+0x76c>
    1ad8:	ldr	x1, [x23, #8]
    1adc:	str	x0, [x26, #400]
    1ae0:	mov	x2, x22
    1ae4:	add	x1, x1, x27
    1ae8:	bl	0 <memcpy>
    1aec:	str	x28, [x26, #408]
    1af0:	b	15d4 <ctf_bufopen_internal+0x22c>
    1af4:	mov	w1, #0xc                   	// #12
    1af8:	mov	x0, x24
    1afc:	bl	0 <ctf_set_open_errno>
    1b00:	mov	x0, x26
    1b04:	mov	x26, #0x0                   	// #0
    1b08:	bl	fa8 <ctf_file_close>
    1b0c:	ldp	x27, x28, [sp, #80]
    1b10:	b	18b4 <ctf_bufopen_internal+0x50c>
    1b14:	mov	w1, #0x3f6                 	// #1014
    1b18:	b	1af8 <ctf_bufopen_internal+0x750>
    1b1c:	mov	x0, x22
    1b20:	bl	0 <malloc>
    1b24:	str	x0, [x26, #392]
    1b28:	cbz	x0, 1b14 <ctf_bufopen_internal+0x76c>
    1b2c:	ldp	x2, x3, [x23, #8]
    1b30:	stp	x0, x0, [x26, #400]
    1b34:	and	w28, w28, #0xfffffffe
    1b38:	add	x1, sp, #0x98
    1b3c:	strb	w28, [x21, #3]
    1b40:	str	x22, [sp, #152]
    1b44:	add	x2, x2, x27
    1b48:	sub	x3, x3, x27
    1b4c:	bl	0 <uncompress>
    1b50:	cbnz	w0, 1b78 <ctf_bufopen_internal+0x7d0>
    1b54:	ldr	x1, [sp, #152]
    1b58:	ldr	x2, [x26, #416]
    1b5c:	cmp	x2, x1
    1b60:	b.eq	15d4 <ctf_bufopen_internal+0x22c>  // b.none
    1b64:	adrp	x0, 0 <get_kind_v1>
    1b68:	add	x0, x0, #0x0
    1b6c:	bl	0 <ctf_dprintf>
    1b70:	mov	w1, #0x3ef                 	// #1007
    1b74:	b	1af8 <ctf_bufopen_internal+0x750>
    1b78:	bl	0 <zError>
    1b7c:	mov	x1, x0
    1b80:	adrp	x0, 0 <get_kind_v1>
    1b84:	add	x0, x0, #0x0
    1b88:	bl	0 <ctf_dprintf>
    1b8c:	mov	w1, #0x3f7                 	// #1015
    1b90:	b	1af8 <ctf_bufopen_internal+0x750>
    1b94:	add	x0, x22, #0xf0
    1b98:	str	x0, [x26, #88]
    1b9c:	b	168c <ctf_bufopen_internal+0x2e4>
    1ba0:	ldr	x2, [x26, #392]
    1ba4:	mov	x0, x26
    1ba8:	mov	x1, x21
    1bac:	bl	b0 <ctf_set_base>
    1bb0:	ldr	w0, [x26, #552]
    1bb4:	tbnz	w0, #1, 1d98 <ctf_bufopen_internal+0x9f0>
    1bb8:	mov	x1, x21
    1bbc:	mov	x0, x26
    1bc0:	bl	2f0 <init_types>
    1bc4:	mov	w1, w0
    1bc8:	cbnz	w0, 1af8 <ctf_bufopen_internal+0x750>
    1bcc:	ldr	w0, [sp, #112]
    1bd0:	cbz	w0, 1d20 <ctf_bufopen_internal+0x978>
    1bd4:	ldp	x23, x0, [x19, #16]
    1bd8:	udiv	x23, x23, x0
    1bdc:	str	x23, [x26, #432]
    1be0:	lsl	x23, x23, #2
    1be4:	mov	x0, x23
    1be8:	bl	0 <malloc>
    1bec:	str	x0, [x26, #424]
    1bf0:	mov	x27, x0
    1bf4:	cbz	x0, 1af4 <ctf_bufopen_internal+0x74c>
    1bf8:	add	x0, x0, x23
    1bfc:	adrp	x1, 0 <get_kind_v1>
    1c00:	ldp	w24, w23, [x21, #20]
    1c04:	add	x1, x1, #0x0
    1c08:	ldr	x25, [x19, #8]
    1c0c:	str	x0, [sp, #104]
    1c10:	adrp	x0, 0 <get_kind_v1>
    1c14:	add	x0, x0, #0x0
    1c18:	str	x1, [sp, #120]
    1c1c:	str	x0, [sp, #128]
    1c20:	ldr	x0, [sp, #104]
    1c24:	cmp	x0, x27
    1c28:	b.ls	1d10 <ctf_bufopen_internal+0x968>  // b.plast
    1c2c:	ldr	x0, [x19, #24]
    1c30:	cmp	x0, #0x10
    1c34:	b.eq	1db8 <ctf_bufopen_internal+0xa10>  // b.none
    1c38:	mov	x28, x25
    1c3c:	ldr	x3, [x20, #16]
    1c40:	ldr	w0, [x28]
    1c44:	mov	w1, w0
    1c48:	cmp	x3, w0, uxtw
    1c4c:	b.ls	1dcc <ctf_bufopen_internal+0xa24>  // b.plast
    1c50:	ldr	x3, [x20, #8]
    1c54:	add	x3, x3, x1
    1c58:	cbz	w0, 1e14 <ctf_bufopen_internal+0xa6c>
    1c5c:	ldrh	w0, [x28, #6]
    1c60:	str	w0, [sp, #116]
    1c64:	cbz	w0, 1e14 <ctf_bufopen_internal+0xa6c>
    1c68:	ldr	x1, [sp, #120]
    1c6c:	mov	x0, x3
    1c70:	str	x3, [sp, #136]
    1c74:	bl	0 <strcmp>
    1c78:	cbz	w0, 1e14 <ctf_bufopen_internal+0xa6c>
    1c7c:	ldp	x1, x3, [sp, #128]
    1c80:	mov	x0, x3
    1c84:	bl	0 <strcmp>
    1c88:	cbz	w0, 1e14 <ctf_bufopen_internal+0xa6c>
    1c8c:	ldrb	w0, [x28, #4]
    1c90:	and	w0, w0, #0xf
    1c94:	cmp	w0, #0x1
    1c98:	b.eq	1de4 <ctf_bufopen_internal+0xa3c>  // b.none
    1c9c:	cmp	w0, #0x2
    1ca0:	b.ne	1e14 <ctf_bufopen_internal+0xa6c>  // b.any
    1ca4:	ldr	w0, [x21, #28]
    1ca8:	cmp	w0, w23
    1cac:	b.ls	1e14 <ctf_bufopen_internal+0xa6c>  // b.plast
    1cb0:	ldr	x1, [x26]
    1cb4:	ldr	x0, [x26, #408]
    1cb8:	ldr	x2, [x1, #16]
    1cbc:	str	w23, [x27]
    1cc0:	ldr	w1, [x0, w23, uxtw]
    1cc4:	str	w1, [sp, #116]
    1cc8:	mov	w0, w1
    1ccc:	blr	x2
    1cd0:	mov	w28, w0
    1cd4:	ldr	w1, [sp, #116]
    1cd8:	mov	w0, w1
    1cdc:	ldr	x1, [x26]
    1ce0:	ldr	x1, [x1]
    1ce4:	blr	x1
    1ce8:	add	w1, w28, #0x2
    1cec:	orr	w28, w28, w0
    1cf0:	cmp	w28, #0x0
    1cf4:	add	w0, w23, #0x4
    1cf8:	add	w23, w23, w1, lsl #2
    1cfc:	csel	w23, w23, w0, ne  // ne = any
    1d00:	ldr	x0, [x19, #24]
    1d04:	add	x27, x27, #0x4
    1d08:	add	x25, x25, x0
    1d0c:	b	1c20 <ctf_bufopen_internal+0x878>
    1d10:	ldr	x1, [x26, #432]
    1d14:	adrp	x0, 0 <get_kind_v1>
    1d18:	add	x0, x0, #0x0
    1d1c:	bl	0 <ctf_dprintf>
    1d20:	adrp	x0, 0 <get_kind_v1>
    1d24:	add	x0, x0, #0x0
    1d28:	mov	x5, #0x4                   	// #4
    1d2c:	stp	x0, x5, [x26, #264]
    1d30:	ldr	w0, [sp, #112]
    1d34:	add	x22, x22, #0xf0
    1d38:	add	x9, x26, #0x98
    1d3c:	add	x7, x26, #0xa8
    1d40:	add	x4, x26, #0xb8
    1d44:	add	x3, x26, #0xc8
    1d48:	adrp	x2, 0 <get_kind_v1>
    1d4c:	adrp	x1, 0 <get_kind_v1>
    1d50:	add	x2, x2, #0x0
    1d54:	add	x1, x1, #0x0
    1d58:	mov	x10, #0x6                   	// #6
    1d5c:	mov	x8, #0x5                   	// #5
    1d60:	stp	x2, x10, [x26, #216]
    1d64:	stp	x9, x1, [x26, #232]
    1d68:	stp	x8, x7, [x26, #248]
    1d6c:	stp	x4, x22, [x26, #280]
    1d70:	stp	xzr, x3, [x26, #296]
    1d74:	stp	xzr, xzr, [x26, #312]
    1d78:	str	xzr, [x26, #328]
    1d7c:	cbz	w0, 1da8 <ctf_bufopen_internal+0xa00>
    1d80:	ldr	x0, [x19, #24]
    1d84:	cmp	x0, #0x18
    1d88:	b.eq	1da8 <ctf_bufopen_internal+0xa00>  // b.none
    1d8c:	mov	x0, x26
    1d90:	mov	w1, #0x1                   	// #1
    1d94:	bl	1358 <ctf_setmodel>
    1d98:	mov	w0, #0x1                   	// #1
    1d9c:	ldp	x27, x28, [sp, #80]
    1da0:	str	w0, [x26, #548]
    1da4:	b	18b4 <ctf_bufopen_internal+0x50c>
    1da8:	mov	x0, x26
    1dac:	mov	w1, #0x2                   	// #2
    1db0:	bl	1358 <ctf_setmodel>
    1db4:	b	1d98 <ctf_bufopen_internal+0x9f0>
    1db8:	add	x1, sp, #0x98
    1dbc:	mov	x0, x25
    1dc0:	bl	0 <ctf_sym_to_elf64>
    1dc4:	mov	x28, x0
    1dc8:	b	1c3c <ctf_bufopen_internal+0x894>
    1dcc:	add	x3, x22, #0xf0
    1dd0:	b	1c58 <ctf_bufopen_internal+0x8b0>
    1dd4:	add	x1, x22, #0xf0
    1dd8:	str	x1, [x26, #56]
    1ddc:	cbnz	x0, 168c <ctf_bufopen_internal+0x2e4>
    1de0:	b	1b94 <ctf_bufopen_internal+0x7ec>
    1de4:	ldr	w0, [x21, #24]
    1de8:	cmp	w0, w24
    1dec:	b.ls	1e14 <ctf_bufopen_internal+0xa6c>  // b.plast
    1df0:	ldr	w1, [sp, #116]
    1df4:	mov	w0, #0xfff1                	// #65521
    1df8:	cmp	w1, w0
    1dfc:	b.eq	1e0c <ctf_bufopen_internal+0xa64>  // b.none
    1e00:	str	w24, [x27]
    1e04:	add	w24, w24, #0x4
    1e08:	b	1d00 <ctf_bufopen_internal+0x958>
    1e0c:	ldr	x0, [x28, #8]
    1e10:	cbnz	x0, 1e00 <ctf_bufopen_internal+0xa58>
    1e14:	mov	w0, #0xffffffff            	// #-1
    1e18:	str	w0, [x27]
    1e1c:	b	1d00 <ctf_bufopen_internal+0x958>
    1e20:	add	x1, x22, #0xf0
    1e24:	str	x1, [x26, #24]
    1e28:	b	1680 <ctf_bufopen_internal+0x2d8>
    1e2c:	cmp	w3, #0x3
    1e30:	b.eq	1ef4 <ctf_bufopen_internal+0xb4c>  // b.none
    1e34:	b.ls	1eac <ctf_bufopen_internal+0xb04>  // b.plast
    1e38:	cmp	w3, #0x4
    1e3c:	b.ne	1ec8 <ctf_bufopen_internal+0xb20>  // b.any
    1e40:	cmp	x2, #0xc
    1e44:	b.ne	1fe0 <ctf_bufopen_internal+0xc38>  // b.any
    1e48:	ldp	w7, w5, [x0]
    1e4c:	add	x23, x0, x2
    1e50:	ldr	w1, [x0, #8]
    1e54:	rev	w7, w7
    1e58:	rev	w5, w5
    1e5c:	rev	w1, w1
    1e60:	stp	w7, w5, [x0]
    1e64:	str	w1, [x0, #8]
    1e68:	b	17e8 <ctf_bufopen_internal+0x440>
    1e6c:	b.eq	1ecc <ctf_bufopen_internal+0xb24>  // b.none
    1e70:	cmp	x27, x4
    1e74:	mov	x5, x25
    1e78:	mov	x1, x0
    1e7c:	b.hi	1f14 <ctf_bufopen_internal+0xb6c>  // b.pmore
    1e80:	cbz	x5, 189c <ctf_bufopen_internal+0x4f4>
    1e84:	ldp	w9, w8, [x1]
    1e88:	sub	x5, x5, #0x1
    1e8c:	ldr	w7, [x1, #8]
    1e90:	rev	w9, w9
    1e94:	rev	w8, w8
    1e98:	rev	w7, w7
    1e9c:	stp	w9, w8, [x1]
    1ea0:	add	x1, x1, #0xc
    1ea4:	stur	w7, [x1, #-4]
    1ea8:	b	1e80 <ctf_bufopen_internal+0xad8>
    1eac:	cbz	w3, 1ef4 <ctf_bufopen_internal+0xb4c>
    1eb0:	b.eq	1ecc <ctf_bufopen_internal+0xb24>  // b.none
    1eb4:	ldr	w1, [x0]
    1eb8:	add	x23, x0, x2
    1ebc:	rev	w1, w1
    1ec0:	str	w1, [x0]
    1ec4:	b	17e8 <ctf_bufopen_internal+0x440>
    1ec8:	mov	w3, #0x5                   	// #5
    1ecc:	mov	w1, w3
    1ed0:	adrp	x0, 0 <get_kind_v1>
    1ed4:	add	x0, x0, #0x0
    1ed8:	bl	0 <ctf_dprintf>
    1edc:	ldr	x2, [x26, #392]
    1ee0:	mov	x1, x21
    1ee4:	mov	x0, x26
    1ee8:	bl	b0 <ctf_set_base>
    1eec:	mov	w1, #0x3ef                 	// #1007
    1ef0:	b	1af8 <ctf_bufopen_internal+0x750>
    1ef4:	cbz	x2, 189c <ctf_bufopen_internal+0x4f4>
    1ef8:	adrp	x1, 0 <get_kind_v1>
    1efc:	adrp	x0, 0 <get_kind_v1>
    1f00:	add	x3, x22, #0x1a0
    1f04:	add	x1, x1, #0x0
    1f08:	add	x0, x0, #0x0
    1f0c:	mov	w2, #0x428                 	// #1064
    1f10:	bl	0 <__assert_fail>
    1f14:	add	x25, x0, x25, lsl #4
    1f18:	b	1f40 <ctf_bufopen_internal+0xb98>
    1f1c:	ldp	w9, w8, [x1]
    1f20:	ldp	w7, w5, [x1, #8]
    1f24:	rev	w9, w9
    1f28:	rev	w8, w8
    1f2c:	stp	w9, w8, [x1]
    1f30:	rev	w7, w7
    1f34:	rev	w5, w5
    1f38:	stp	w7, w5, [x1, #8]
    1f3c:	add	x1, x1, #0x10
    1f40:	cmp	x1, x25
    1f44:	b.ne	1f1c <ctf_bufopen_internal+0xb74>  // b.any
    1f48:	add	x23, x0, x2
    1f4c:	b	17e8 <ctf_bufopen_internal+0x440>
    1f50:	add	x25, x0, x25, lsl #3
    1f54:	mov	x1, x0
    1f58:	b	1f70 <ctf_bufopen_internal+0xbc8>
    1f5c:	ldp	w7, w5, [x1]
    1f60:	rev	w7, w7
    1f64:	rev	w5, w5
    1f68:	stp	w7, w5, [x1]
    1f6c:	add	x1, x1, #0x8
    1f70:	cmp	x1, x25
    1f74:	b.ne	1f5c <ctf_bufopen_internal+0xbb4>  // b.any
    1f78:	add	x23, x0, x2
    1f7c:	b	17e8 <ctf_bufopen_internal+0x440>
    1f80:	mov	x1, #0x0                   	// #0
    1f84:	b	1f98 <ctf_bufopen_internal+0xbf0>
    1f88:	ldr	w5, [x0, x1, lsl #2]
    1f8c:	rev	w5, w5
    1f90:	str	w5, [x0, x1, lsl #2]
    1f94:	add	x1, x1, #0x1
    1f98:	cmp	x25, x1
    1f9c:	b.ne	1f88 <ctf_bufopen_internal+0xbe0>  // b.any
    1fa0:	add	x23, x0, x2
    1fa4:	b	17e8 <ctf_bufopen_internal+0x440>
    1fa8:	ldp	w27, w1, [x23, #12]
    1fac:	add	x0, x23, #0x14
    1fb0:	rev	w27, w27
    1fb4:	rev	w1, w1
    1fb8:	stp	w27, w1, [x23, #12]
    1fbc:	orr	x27, x1, x27, lsl #32
    1fc0:	b	1848 <ctf_bufopen_internal+0x4a0>
    1fc4:	adrp	x1, 0 <get_kind_v1>
    1fc8:	adrp	x0, 0 <get_kind_v1>
    1fcc:	add	x3, x22, #0x1a0
    1fd0:	add	x1, x1, #0x0
    1fd4:	add	x0, x0, #0x0
    1fd8:	mov	w2, #0x456                 	// #1110
    1fdc:	bl	0 <__assert_fail>
    1fe0:	adrp	x1, 0 <get_kind_v1>
    1fe4:	adrp	x0, 0 <get_kind_v1>
    1fe8:	add	x3, x22, #0x1a0
    1fec:	add	x1, x1, #0x0
    1ff0:	add	x0, x0, #0x0
    1ff4:	mov	w2, #0x448                 	// #1096
    1ff8:	bl	0 <__assert_fail>
    1ffc:	nop

0000000000002000 <ctf_simple_open_internal>:
    2000:	stp	x29, x30, [sp, #-112]!
    2004:	mov	x9, x1
    2008:	mov	x8, x3
    200c:	mov	x29, sp
    2010:	mov	x1, x2
    2014:	mov	x3, x7
    2018:	mov	x2, x5
    201c:	cbz	x0, 203c <ctf_simple_open_internal+0x3c>
    2020:	adrp	x5, 0 <get_kind_v1>
    2024:	add	x5, x5, #0x0
    2028:	add	x5, x5, #0x1b0
    202c:	stp	x5, x0, [sp, #16]
    2030:	add	x0, sp, #0x10
    2034:	mov	x7, #0x1                   	// #1
    2038:	stp	x9, x7, [sp, #32]
    203c:	cbz	x1, 2058 <ctf_simple_open_internal+0x58>
    2040:	adrp	x5, 0 <get_kind_v1>
    2044:	add	x5, x5, #0x0
    2048:	add	x5, x5, #0x1b0
    204c:	stp	x5, x1, [sp, #48]
    2050:	add	x1, sp, #0x30
    2054:	stp	x8, x4, [sp, #64]
    2058:	cbz	x2, 2078 <ctf_simple_open_internal+0x78>
    205c:	adrp	x4, 0 <get_kind_v1>
    2060:	add	x4, x4, #0x0
    2064:	add	x4, x4, #0x1b0
    2068:	stp	x4, x2, [sp, #80]
    206c:	add	x2, sp, #0x50
    2070:	mov	x5, #0x1                   	// #1
    2074:	stp	x6, x5, [sp, #96]
    2078:	ldr	w4, [sp, #112]
    207c:	ldr	x5, [sp, #120]
    2080:	bl	13a8 <ctf_bufopen_internal>
    2084:	ldp	x29, x30, [sp], #112
    2088:	ret
    208c:	nop

0000000000002090 <ctf_simple_open>:
    2090:	sub	sp, sp, #0x20
    2094:	stp	x29, x30, [sp, #16]
    2098:	add	x29, sp, #0x10
    209c:	str	wzr, [sp]
    20a0:	str	x7, [sp, #8]
    20a4:	mov	x7, #0x0                   	// #0
    20a8:	bl	2000 <ctf_simple_open_internal>
    20ac:	ldp	x29, x30, [sp, #16]
    20b0:	add	sp, sp, #0x20
    20b4:	ret

00000000000020b8 <ctf_bufopen>:
    20b8:	mov	x5, x3
    20bc:	mov	w4, #0x0                   	// #0
    20c0:	mov	x3, #0x0                   	// #0
    20c4:	b	13a8 <ctf_bufopen_internal>

00000000000020c8 <ctf_getmodel>:
    20c8:	ldr	x0, [x0, #488]
    20cc:	ldr	w0, [x0, #8]
    20d0:	ret
    20d4:	nop

00000000000020d8 <ctf_setspecific>:
    20d8:	str	x1, [x0, #720]
    20dc:	ret

00000000000020e0 <ctf_getspecific>:
    20e0:	ldr	x0, [x0, #720]
    20e4:	ret

ctf-string.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_str_rollback_atom>:
   0:	ldr	x0, [x2, #8]
   4:	ldr	x1, [x1, #32]
   8:	cmp	x1, x0
   c:	cset	w0, hi  // hi = pmore
  10:	ret
  14:	nop

0000000000000018 <ctf_str_purge_atom_refs>:
  18:	stp	x29, x30, [sp, #-48]!
  1c:	mov	x29, sp
  20:	stp	x19, x20, [sp, #16]
  24:	ldr	x19, [x0, #16]
  28:	cbz	x19, 5c <ctf_str_purge_atom_refs+0x44>
  2c:	str	x21, [sp, #32]
  30:	add	x21, x0, #0x8
  34:	nop
  38:	mov	x20, x19
  3c:	mov	x1, x19
  40:	ldr	x19, [x19, #8]
  44:	mov	x0, x21
  48:	bl	0 <ctf_list_delete>
  4c:	mov	x0, x20
  50:	bl	0 <free>
  54:	cbnz	x19, 38 <ctf_str_purge_atom_refs+0x20>
  58:	ldr	x21, [sp, #32]
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

0000000000000068 <ctf_str_free_atom>:
  68:	stp	x29, x30, [sp, #-32]!
  6c:	mov	x29, sp
  70:	str	x19, [sp, #16]
  74:	mov	x19, x0
  78:	bl	18 <ctf_str_purge_atom_refs>
  7c:	mov	x0, x19
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	b	0 <free>
  8c:	nop

0000000000000090 <ctf_str_purge_one_atom_refs>:
  90:	mov	x0, x1
  94:	b	18 <ctf_str_purge_atom_refs>

0000000000000098 <ctf_str_add_ref_internal>:
  98:	stp	x29, x30, [sp, #-80]!
  9c:	mov	x29, sp
  a0:	stp	x19, x20, [sp, #16]
  a4:	mov	x20, x0
  a8:	ldr	x0, [x0, #368]
  ac:	stp	x21, x22, [sp, #32]
  b0:	mov	w21, w2
  b4:	mov	x22, x4
  b8:	stp	x23, x24, [sp, #48]
  bc:	mov	w24, w3
  c0:	mov	x23, x1
  c4:	bl	0 <ctf_dynhash_lookup>
  c8:	mov	x19, x0
  cc:	cbnz	w21, ec <ctf_str_add_ref_internal+0x54>
  d0:	cbz	x0, 13c <ctf_str_add_ref_internal+0xa4>
  d4:	mov	x0, x19
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x23, x24, [sp, #48]
  e4:	ldp	x29, x30, [sp], #80
  e8:	ret
  ec:	mov	x0, #0x18                  	// #24
  f0:	str	x25, [sp, #64]
  f4:	bl	0 <malloc>
  f8:	mov	x1, x0
  fc:	mov	x25, x0
 100:	cbz	x0, 228 <ctf_str_add_ref_internal+0x190>
 104:	str	x22, [x0, #16]
 108:	cbz	x19, 144 <ctf_str_add_ref_internal+0xac>
 10c:	add	x0, x19, #0x8
 110:	bl	0 <ctf_list_append>
 114:	ldr	x0, [x20, #376]
 118:	ldr	x25, [sp, #64]
 11c:	add	x0, x0, #0x1
 120:	str	x0, [x20, #376]
 124:	mov	x0, x19
 128:	ldp	x19, x20, [sp, #16]
 12c:	ldp	x21, x22, [sp, #32]
 130:	ldp	x23, x24, [sp, #48]
 134:	ldp	x29, x30, [sp], #80
 138:	ret
 13c:	str	x25, [sp, #64]
 140:	mov	x25, #0x0                   	// #0
 144:	mov	x1, #0x1                   	// #1
 148:	mov	x0, #0x28                  	// #40
 14c:	bl	0 <calloc>
 150:	mov	x19, x0
 154:	cbz	x0, 220 <ctf_str_add_ref_internal+0x188>
 158:	mov	x0, x23
 15c:	bl	0 <strdup>
 160:	mov	x22, x0
 164:	mov	x23, x0
 168:	cbz	x0, 220 <ctf_str_add_ref_internal+0x188>
 16c:	mov	x1, x0
 170:	mov	x2, x19
 174:	ldr	x0, [x20, #368]
 178:	bl	0 <ctf_dynhash_insert>
 17c:	tbnz	w0, #31, 1f0 <ctf_str_add_ref_internal+0x158>
 180:	ldr	x0, [x20, #624]
 184:	str	x22, [x19]
 188:	str	x0, [x19, #32]
 18c:	cbnz	w24, 1b0 <ctf_str_add_ref_internal+0x118>
 190:	cbnz	w21, 1e8 <ctf_str_add_ref_internal+0x150>
 194:	mov	x0, x19
 198:	ldp	x19, x20, [sp, #16]
 19c:	ldp	x21, x22, [sp, #32]
 1a0:	ldp	x23, x24, [sp, #48]
 1a4:	ldr	x25, [sp, #64]
 1a8:	ldp	x29, x30, [sp], #80
 1ac:	ret
 1b0:	ldr	x0, [x20, #120]
 1b4:	mov	x2, x22
 1b8:	ldr	w1, [x20, #384]
 1bc:	str	w1, [x19, #24]
 1c0:	mov	w1, w1
 1c4:	bl	0 <ctf_dynhash_insert>
 1c8:	tbnz	w0, #31, 1f0 <ctf_str_add_ref_internal+0x158>
 1cc:	ldr	x0, [x19]
 1d0:	bl	0 <strlen>
 1d4:	ldr	w1, [x20, #384]
 1d8:	add	w1, w1, #0x1
 1dc:	add	w1, w1, w0
 1e0:	str	w1, [x20, #384]
 1e4:	cbz	w21, 194 <ctf_str_add_ref_internal+0xfc>
 1e8:	mov	x1, x25
 1ec:	b	10c <ctf_str_add_ref_internal+0x74>
 1f0:	ldr	x0, [x20, #368]
 1f4:	mov	x1, x22
 1f8:	bl	0 <ctf_dynhash_remove>
 1fc:	mov	x0, x19
 200:	bl	0 <free>
 204:	mov	x0, x25
 208:	bl	0 <free>
 20c:	mov	x0, x23
 210:	mov	x19, #0x0                   	// #0
 214:	bl	0 <free>
 218:	ldr	x25, [sp, #64]
 21c:	b	d4 <ctf_str_add_ref_internal+0x3c>
 220:	mov	x23, #0x0                   	// #0
 224:	b	1fc <ctf_str_add_ref_internal+0x164>
 228:	mov	x19, #0x0                   	// #0
 22c:	ldr	x25, [sp, #64]
 230:	b	d4 <ctf_str_add_ref_internal+0x3c>
 234:	nop

0000000000000238 <ctf_str_sort_strtab>:
 238:	ldr	x0, [x0]
 23c:	ldr	x1, [x1]
 240:	ldr	x0, [x0]
 244:	ldr	x1, [x1]
 248:	b	0 <strcmp>
 24c:	nop

0000000000000250 <ctf_str_populate_sorttab>:
 250:	ldr	x0, [x2, #32]
 254:	cmp	x0, x1
 258:	b.eq	298 <ctf_str_populate_sorttab+0x48>  // b.none
 25c:	stp	x29, x30, [sp, #-32]!
 260:	add	x0, x1, #0x8
 264:	mov	x29, sp
 268:	stp	x19, x20, [sp, #16]
 26c:	mov	x20, x2
 270:	mov	x19, x1
 274:	bl	0 <ctf_list_empty_p>
 278:	cbnz	w0, 28c <ctf_str_populate_sorttab+0x3c>
 27c:	ldp	x1, x0, [x20, #16]
 280:	add	x2, x0, #0x1
 284:	str	x2, [x20, #24]
 288:	str	x19, [x1, x0, lsl #3]
 28c:	ldp	x19, x20, [sp, #16]
 290:	ldp	x29, x30, [sp], #32
 294:	ret
 298:	ret
 29c:	nop

00000000000002a0 <ctf_str_count_strtab>:
 2a0:	stp	x29, x30, [sp, #-32]!
 2a4:	mov	x29, sp
 2a8:	ldr	x0, [x2, #32]
 2ac:	stp	x19, x20, [sp, #16]
 2b0:	mov	x19, x2
 2b4:	cmp	x0, x1
 2b8:	b.eq	2f0 <ctf_str_count_strtab+0x50>  // b.none
 2bc:	mov	x20, x1
 2c0:	add	x0, x1, #0x8
 2c4:	bl	0 <ctf_list_empty_p>
 2c8:	cbnz	w0, 2fc <ctf_str_count_strtab+0x5c>
 2cc:	ldr	w0, [x20, #28]
 2d0:	cbnz	w0, 2f0 <ctf_str_count_strtab+0x50>
 2d4:	ldr	x0, [x20]
 2d8:	bl	0 <strlen>
 2dc:	ldr	x20, [x19]
 2e0:	ldr	x1, [x20, #8]
 2e4:	add	x1, x1, #0x1
 2e8:	add	x1, x1, x0
 2ec:	str	x1, [x20, #8]
 2f0:	ldr	x0, [x19, #8]
 2f4:	add	x0, x0, #0x1
 2f8:	str	x0, [x19, #8]
 2fc:	ldp	x19, x20, [sp, #16]
 300:	ldp	x29, x30, [sp], #32
 304:	ret

0000000000000308 <ctf_strraw_explicit>:
 308:	cmp	w1, #0x0
 30c:	lsr	w3, w1, #31
 310:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
 314:	b.ne	34c <ctf_strraw_explicit+0x44>  // b.any
 318:	mov	w2, w3
 31c:	add	x2, x2, #0x15
 320:	add	x2, x0, x2, lsl #4
 324:	cbnz	w3, 38c <ctf_strraw_explicit+0x84>
 328:	tbz	w1, #31, 350 <ctf_strraw_explicit+0x48>
 32c:	ldr	x0, [x2]
 330:	cbz	x0, 348 <ctf_strraw_explicit+0x40>
 334:	ldr	x2, [x2, #8]
 338:	and	x1, x1, #0x7fffffff
 33c:	add	x0, x0, x1
 340:	cmp	x1, x2
 344:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
 348:	ret
 34c:	cbnz	w3, 378 <ctf_strraw_explicit+0x70>
 350:	ldr	x3, [x2, #8]
 354:	mov	w4, w1
 358:	cmp	x3, w1, uxtw
 35c:	b.hi	32c <ctf_strraw_explicit+0x24>  // b.pmore
 360:	ldr	w3, [x0, #384]
 364:	cmp	w3, w1
 368:	b.ls	32c <ctf_strraw_explicit+0x24>  // b.plast
 36c:	ldr	x0, [x0, #120]
 370:	mov	x1, x4
 374:	b	0 <ctf_dynhash_lookup>
 378:	ldr	x3, [x0, #128]
 37c:	cbz	x3, 350 <ctf_strraw_explicit+0x48>
 380:	mov	w1, w1
 384:	mov	x0, x3
 388:	b	0 <ctf_dynhash_lookup>
 38c:	ldr	x3, [x0, #128]
 390:	cbz	x3, 328 <ctf_strraw_explicit+0x20>
 394:	b	380 <ctf_strraw_explicit+0x78>

0000000000000398 <ctf_strraw>:
 398:	mov	x2, #0x0                   	// #0
 39c:	b	308 <ctf_strraw_explicit>

00000000000003a0 <ctf_strptr>:
 3a0:	stp	x29, x30, [sp, #-16]!
 3a4:	mov	x2, #0x0                   	// #0
 3a8:	mov	x29, sp
 3ac:	bl	308 <ctf_strraw_explicit>
 3b0:	cmp	x0, #0x0
 3b4:	adrp	x1, 0 <ctf_str_rollback_atom>
 3b8:	add	x1, x1, #0x0
 3bc:	csel	x0, x1, x0, eq  // eq = none
 3c0:	ldp	x29, x30, [sp], #16
 3c4:	ret

00000000000003c8 <ctf_str_create_atoms>:
 3c8:	stp	x29, x30, [sp, #-32]!
 3cc:	adrp	x3, 0 <ctf_str_rollback_atom>
 3d0:	adrp	x2, 0 <free>
 3d4:	mov	x29, sp
 3d8:	stp	x19, x20, [sp, #16]
 3dc:	mov	x19, x0
 3e0:	add	x3, x3, #0x0
 3e4:	add	x2, x2, #0x0
 3e8:	adrp	x1, 0 <ctf_hash_eq_string>
 3ec:	adrp	x0, 0 <ctf_hash_string>
 3f0:	add	x1, x1, #0x0
 3f4:	add	x0, x0, #0x0
 3f8:	bl	0 <ctf_dynhash_create>
 3fc:	str	x0, [x19, #368]
 400:	cbz	x0, 488 <ctf_str_create_atoms+0xc0>
 404:	ldr	x0, [x19, #120]
 408:	cbz	x0, 450 <ctf_str_create_atoms+0x88>
 40c:	bl	0 <__errno_location>
 410:	mov	x20, x0
 414:	adrp	x1, 0 <ctf_str_rollback_atom>
 418:	mov	x0, x19
 41c:	add	x1, x1, #0x0
 420:	mov	x4, #0x0                   	// #0
 424:	str	wzr, [x20]
 428:	mov	w3, #0x1                   	// #1
 42c:	mov	w2, #0x0                   	// #0
 430:	bl	98 <ctf_str_add_ref_internal>
 434:	ldr	w0, [x20]
 438:	cmp	w0, #0xc
 43c:	b.eq	490 <ctf_str_create_atoms+0xc8>  // b.none
 440:	mov	w0, #0x0                   	// #0
 444:	ldp	x19, x20, [sp, #16]
 448:	ldp	x29, x30, [sp], #32
 44c:	ret
 450:	adrp	x1, 0 <ctf_hash_eq_integer>
 454:	adrp	x0, 0 <ctf_hash_integer>
 458:	add	x1, x1, #0x0
 45c:	add	x0, x0, #0x0
 460:	mov	x3, #0x0                   	// #0
 464:	mov	x2, #0x0                   	// #0
 468:	bl	0 <ctf_dynhash_create>
 46c:	str	x0, [x19, #120]
 470:	cbnz	x0, 40c <ctf_str_create_atoms+0x44>
 474:	ldr	x0, [x19, #368]
 478:	bl	0 <ctf_dynhash_destroy>
 47c:	str	xzr, [x19, #368]
 480:	mov	w0, #0xfffffff4            	// #-12
 484:	b	444 <ctf_str_create_atoms+0x7c>
 488:	mov	w0, #0xfffffff4            	// #-12
 48c:	b	444 <ctf_str_create_atoms+0x7c>
 490:	ldr	x0, [x19, #120]
 494:	bl	0 <ctf_dynhash_destroy>
 498:	str	xzr, [x19, #120]
 49c:	b	474 <ctf_str_create_atoms+0xac>

00000000000004a0 <ctf_str_free_atoms>:
 4a0:	stp	x29, x30, [sp, #-32]!
 4a4:	mov	x29, sp
 4a8:	str	x19, [sp, #16]
 4ac:	mov	x19, x0
 4b0:	ldr	x0, [x0, #120]
 4b4:	bl	0 <ctf_dynhash_destroy>
 4b8:	ldr	x0, [x19, #368]
 4bc:	ldr	x19, [sp, #16]
 4c0:	ldp	x29, x30, [sp], #32
 4c4:	b	0 <ctf_dynhash_destroy>

00000000000004c8 <ctf_str_add>:
 4c8:	cbz	x1, 500 <ctf_str_add+0x38>
 4cc:	stp	x29, x30, [sp, #-16]!
 4d0:	mov	x4, #0x0                   	// #0
 4d4:	mov	w3, #0x1                   	// #1
 4d8:	mov	x29, sp
 4dc:	mov	w2, #0x0                   	// #0
 4e0:	bl	98 <ctf_str_add_ref_internal>
 4e4:	cbz	x0, 4f4 <ctf_str_add+0x2c>
 4e8:	ldr	w0, [x0, #24]
 4ec:	ldp	x29, x30, [sp], #16
 4f0:	ret
 4f4:	mov	w0, #0x0                   	// #0
 4f8:	ldp	x29, x30, [sp], #16
 4fc:	ret
 500:	mov	w0, #0x0                   	// #0
 504:	ret

0000000000000508 <ctf_str_add_ref>:
 508:	cbz	x1, 540 <ctf_str_add_ref+0x38>
 50c:	stp	x29, x30, [sp, #-16]!
 510:	mov	x4, x2
 514:	mov	w3, #0x1                   	// #1
 518:	mov	x29, sp
 51c:	mov	w2, w3
 520:	bl	98 <ctf_str_add_ref_internal>
 524:	cbz	x0, 534 <ctf_str_add_ref+0x2c>
 528:	ldr	w0, [x0, #24]
 52c:	ldp	x29, x30, [sp], #16
 530:	ret
 534:	mov	w0, #0x0                   	// #0
 538:	ldp	x29, x30, [sp], #16
 53c:	ret
 540:	mov	w0, #0x0                   	// #0
 544:	ret

0000000000000548 <ctf_str_add_external>:
 548:	cbz	x1, 59c <ctf_str_add_external+0x54>
 54c:	stp	x29, x30, [sp, #-32]!
 550:	mov	x4, #0x0                   	// #0
 554:	mov	w3, #0x0                   	// #0
 558:	mov	x29, sp
 55c:	str	x19, [sp, #16]
 560:	mov	w19, w2
 564:	mov	w2, #0x0                   	// #0
 568:	bl	98 <ctf_str_add_ref_internal>
 56c:	mov	x1, x0
 570:	cbz	x0, 58c <ctf_str_add_external+0x44>
 574:	orr	w2, w19, #0x80000000
 578:	str	w2, [x1, #28]
 57c:	mov	w0, #0x1                   	// #1
 580:	ldr	x19, [sp, #16]
 584:	ldp	x29, x30, [sp], #32
 588:	ret
 58c:	mov	w0, #0x0                   	// #0
 590:	ldr	x19, [sp, #16]
 594:	ldp	x29, x30, [sp], #32
 598:	ret
 59c:	mov	w0, #0x0                   	// #0
 5a0:	ret
 5a4:	nop

00000000000005a8 <ctf_str_remove_ref>:
 5a8:	stp	x29, x30, [sp, #-48]!
 5ac:	mov	x29, sp
 5b0:	ldr	x0, [x0, #368]
 5b4:	stp	x21, x22, [sp, #32]
 5b8:	mov	x21, x2
 5bc:	bl	0 <ctf_dynhash_lookup>
 5c0:	cbz	x0, 5f4 <ctf_str_remove_ref+0x4c>
 5c4:	stp	x19, x20, [sp, #16]
 5c8:	ldr	x19, [x0, #16]
 5cc:	cbz	x19, 5f0 <ctf_str_remove_ref+0x48>
 5d0:	add	x22, x0, #0x8
 5d4:	nop
 5d8:	mov	x20, x19
 5dc:	ldr	x19, [x19, #8]
 5e0:	ldr	x0, [x20, #16]
 5e4:	cmp	x0, x21
 5e8:	b.eq	600 <ctf_str_remove_ref+0x58>  // b.none
 5ec:	cbnz	x19, 5d8 <ctf_str_remove_ref+0x30>
 5f0:	ldp	x19, x20, [sp, #16]
 5f4:	ldp	x21, x22, [sp, #32]
 5f8:	ldp	x29, x30, [sp], #48
 5fc:	ret
 600:	mov	x1, x20
 604:	mov	x0, x22
 608:	bl	0 <ctf_list_delete>
 60c:	mov	x0, x20
 610:	bl	0 <free>
 614:	cbnz	x19, 5d8 <ctf_str_remove_ref+0x30>
 618:	b	5f0 <ctf_str_remove_ref+0x48>
 61c:	nop

0000000000000620 <ctf_str_rollback>:
 620:	stp	x29, x30, [sp, #-32]!
 624:	adrp	x3, 0 <ctf_str_rollback_atom>
 628:	mov	x29, sp
 62c:	ldr	x0, [x0, #368]
 630:	stp	x1, x2, [sp, #16]
 634:	add	x2, sp, #0x10
 638:	add	x1, x3, #0x0
 63c:	bl	0 <ctf_dynhash_iter_remove>
 640:	ldp	x29, x30, [sp], #32
 644:	ret

0000000000000648 <ctf_str_purge_refs>:
 648:	stp	x29, x30, [sp, #-32]!
 64c:	mov	x29, sp
 650:	str	x19, [sp, #16]
 654:	mov	x19, x0
 658:	ldr	x0, [x0, #376]
 65c:	cbnz	x0, 670 <ctf_str_purge_refs+0x28>
 660:	str	xzr, [x19, #376]
 664:	ldr	x19, [sp, #16]
 668:	ldp	x29, x30, [sp], #32
 66c:	ret
 670:	ldr	x0, [x19, #368]
 674:	mov	x2, #0x0                   	// #0
 678:	adrp	x1, 0 <ctf_str_rollback_atom>
 67c:	add	x1, x1, #0x0
 680:	bl	0 <ctf_dynhash_iter>
 684:	str	xzr, [x19, #376]
 688:	ldr	x19, [sp, #16]
 68c:	ldp	x29, x30, [sp], #32
 690:	ret
 694:	nop

0000000000000698 <ctf_str_write_strtab>:
 698:	stp	x29, x30, [sp, #-128]!
 69c:	adrp	x1, 0 <ctf_str_rollback_atom>
 6a0:	add	x1, x1, #0x0
 6a4:	mov	x29, sp
 6a8:	stp	x21, x22, [sp, #32]
 6ac:	mov	x22, x0
 6b0:	add	x2, sp, #0x48
 6b4:	ldr	x0, [x0, #368]
 6b8:	stp	xzr, xzr, [sp, #72]
 6bc:	str	x2, [sp, #88]
 6c0:	stp	xzr, xzr, [sp, #96]
 6c4:	stp	xzr, xzr, [sp, #112]
 6c8:	bl	0 <ctf_dynhash_lookup>
 6cc:	cbz	x0, 890 <ctf_str_write_strtab+0x1f8>
 6d0:	stp	x19, x20, [sp, #16]
 6d4:	mov	x19, x0
 6d8:	add	x2, sp, #0x58
 6dc:	ldr	x0, [x22, #368]
 6e0:	adrp	x1, 0 <ctf_str_rollback_atom>
 6e4:	add	x1, x1, #0x0
 6e8:	str	x19, [sp, #120]
 6ec:	bl	0 <ctf_dynhash_iter>
 6f0:	ldr	x1, [sp, #80]
 6f4:	adrp	x0, 0 <ctf_str_rollback_atom>
 6f8:	add	x0, x0, #0x0
 6fc:	add	x1, x1, #0x1
 700:	str	x1, [sp, #80]
 704:	bl	0 <ctf_dprintf>
 708:	ldr	x0, [sp, #96]
 70c:	mov	x1, #0x8                   	// #8
 710:	bl	0 <calloc>
 714:	mov	x21, x0
 718:	cbz	x0, 87c <ctf_str_write_strtab+0x1e4>
 71c:	ldr	x0, [x22, #368]
 720:	mov	x3, #0x1                   	// #1
 724:	add	x2, sp, #0x58
 728:	adrp	x1, 0 <ctf_str_rollback_atom>
 72c:	add	x1, x1, #0x0
 730:	str	x19, [x21]
 734:	stp	x21, x3, [sp, #104]
 738:	bl	0 <ctf_dynhash_iter>
 73c:	mov	x2, #0x8                   	// #8
 740:	ldr	x1, [sp, #96]
 744:	add	x0, x21, x2
 748:	adrp	x3, 0 <ctf_str_rollback_atom>
 74c:	add	x3, x3, #0x0
 750:	sub	x1, x1, #0x1
 754:	bl	0 <qsort>
 758:	ldr	x0, [sp, #80]
 75c:	bl	0 <malloc>
 760:	str	x0, [sp, #72]
 764:	cbz	x0, 874 <ctf_str_write_strtab+0x1dc>
 768:	ldr	x0, [x22, #128]
 76c:	cbz	x0, 8c8 <ctf_str_write_strtab+0x230>
 770:	ldr	x0, [sp, #96]
 774:	str	x23, [sp, #48]
 778:	mov	x20, #0x0                   	// #0
 77c:	mov	w19, #0x0                   	// #0
 780:	mov	w23, #0x0                   	// #0
 784:	cbz	x0, 8b0 <ctf_str_write_strtab+0x218>
 788:	ldr	x4, [x21, x20, lsl #3]
 78c:	ldr	w1, [x4, #28]
 790:	ldr	x2, [x4, #16]
 794:	cbz	w1, 820 <ctf_str_write_strtab+0x188>
 798:	cbz	x2, 7b4 <ctf_str_write_strtab+0x11c>
 79c:	nop
 7a0:	ldr	x3, [x2, #16]
 7a4:	ldr	x2, [x2, #8]
 7a8:	str	w1, [x3]
 7ac:	cbnz	x2, 7a0 <ctf_str_write_strtab+0x108>
 7b0:	ldr	w1, [x4, #28]
 7b4:	ldr	x2, [x4]
 7b8:	mov	w1, w1
 7bc:	ldr	x0, [x22, #128]
 7c0:	bl	0 <ctf_dynhash_insert>
 7c4:	tbnz	w0, #31, 864 <ctf_str_write_strtab+0x1cc>
 7c8:	ldr	x0, [x21, x20, lsl #3]
 7cc:	mov	w23, #0x1                   	// #1
 7d0:	ldr	w1, [x0, #28]
 7d4:	str	w1, [x0, #24]
 7d8:	ldr	x0, [sp, #96]
 7dc:	add	x20, x20, #0x1
 7e0:	cmp	x0, x20
 7e4:	b.hi	788 <ctf_str_write_strtab+0xf0>  // b.pmore
 7e8:	mov	x0, x21
 7ec:	bl	0 <free>
 7f0:	cbz	w23, 8b8 <ctf_str_write_strtab+0x220>
 7f4:	ldr	x0, [x22, #120]
 7f8:	bl	0 <ctf_dynhash_empty>
 7fc:	ldr	x2, [sp, #80]
 800:	ldp	x19, x20, [sp, #16]
 804:	add	w2, w2, #0x1
 808:	ldr	x23, [sp, #48]
 80c:	str	w2, [x22, #384]
 810:	ldp	x21, x22, [sp, #32]
 814:	ldp	x0, x1, [sp, #72]
 818:	ldp	x29, x30, [sp], #128
 81c:	ret
 820:	cbz	x2, 838 <ctf_str_write_strtab+0x1a0>
 824:	nop
 828:	ldr	x1, [x2, #16]
 82c:	ldr	x2, [x2, #8]
 830:	str	w19, [x1]
 834:	cbnz	x2, 828 <ctf_str_write_strtab+0x190>
 838:	ldr	x1, [x4]
 83c:	str	w19, [x4, #24]
 840:	ldr	x0, [sp, #72]
 844:	add	x0, x0, w19, uxtw
 848:	bl	0 <strcpy>
 84c:	ldr	x0, [x21, x20, lsl #3]
 850:	add	w19, w19, #0x1
 854:	ldr	x0, [x0]
 858:	bl	0 <strlen>
 85c:	add	w19, w19, w0
 860:	b	7d8 <ctf_str_write_strtab+0x140>
 864:	ldr	x23, [sp, #48]
 868:	ldr	x0, [sp, #72]
 86c:	bl	0 <free>
 870:	str	xzr, [sp, #72]
 874:	mov	x0, x21
 878:	bl	0 <free>
 87c:	ldp	x19, x20, [sp, #16]
 880:	ldp	x21, x22, [sp, #32]
 884:	ldp	x0, x1, [sp, #72]
 888:	ldp	x29, x30, [sp], #128
 88c:	ret
 890:	adrp	x0, 0 <ctf_str_rollback_atom>
 894:	add	x0, x0, #0x0
 898:	bl	0 <ctf_dprintf>
 89c:	str	xzr, [sp, #72]
 8a0:	ldp	x21, x22, [sp, #32]
 8a4:	ldp	x0, x1, [sp, #72]
 8a8:	ldp	x29, x30, [sp], #128
 8ac:	ret
 8b0:	mov	x0, x21
 8b4:	bl	0 <free>
 8b8:	ldr	x0, [x22, #128]
 8bc:	bl	0 <ctf_dynhash_destroy>
 8c0:	str	xzr, [x22, #128]
 8c4:	b	7f4 <ctf_str_write_strtab+0x15c>
 8c8:	adrp	x1, 0 <ctf_hash_eq_integer>
 8cc:	adrp	x0, 0 <ctf_hash_integer>
 8d0:	add	x1, x1, #0x0
 8d4:	add	x0, x0, #0x0
 8d8:	mov	x3, #0x0                   	// #0
 8dc:	mov	x2, #0x0                   	// #0
 8e0:	bl	0 <ctf_dynhash_create>
 8e4:	str	x0, [x22, #128]
 8e8:	cbz	x0, 868 <ctf_str_write_strtab+0x1d0>
 8ec:	b	770 <ctf_str_write_strtab+0xd8>

ctf-subr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <libctf_init_debug.part.0>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x0, 0 <libctf_init_debug.part.0>
   8:	add	x0, x0, #0x0
   c:	mov	x29, sp
  10:	bl	0 <getenv>
  14:	cmp	x0, #0x0
  18:	adrp	x1, 0 <libctf_init_debug.part.0>
  1c:	add	x2, x1, #0x0
  20:	mov	w0, #0x1                   	// #1
  24:	cset	w3, ne  // ne = any
  28:	str	w3, [x1]
  2c:	str	w0, [x2, #4]
  30:	ldp	x29, x30, [sp], #16
  34:	ret

0000000000000038 <ctf_mmap>:
  38:	stp	x29, x30, [sp, #-16]!
  3c:	mov	x5, x1
  40:	mov	w4, w2
  44:	mov	x29, sp
  48:	mov	x1, x0
  4c:	mov	w3, #0x2                   	// #2
  50:	mov	w2, #0x1                   	// #1
  54:	mov	x0, #0x0                   	// #0
  58:	bl	0 <mmap>
  5c:	cmn	x0, #0x1
  60:	csel	x0, x0, xzr, ne  // ne = any
  64:	ldp	x29, x30, [sp], #16
  68:	ret
  6c:	nop

0000000000000070 <ctf_munmap>:
  70:	b	0 <munmap>
  74:	nop

0000000000000078 <ctf_pread>:
  78:	cmp	x2, #0x0
  7c:	b.le	128 <ctf_pread+0xb0>
  80:	stp	x29, x30, [sp, #-64]!
  84:	mov	x29, sp
  88:	stp	x19, x20, [sp, #16]
  8c:	mov	x19, x2
  90:	mov	x20, x1
  94:	stp	x21, x22, [sp, #32]
  98:	mov	x21, x3
  9c:	stp	x23, x24, [sp, #48]
  a0:	mov	w23, w0
  a4:	bl	0 <__errno_location>
  a8:	mov	x22, x0
  ac:	mov	x24, #0x0                   	// #0
  b0:	str	wzr, [x22]
  b4:	mov	x1, x20
  b8:	mov	x3, x21
  bc:	mov	x2, x19
  c0:	mov	w0, w23
  c4:	bl	0 <pread>
  c8:	ldr	w1, [x22]
  cc:	tbnz	x0, #63, 10c <ctf_pread+0x94>
  d0:	cmp	w1, #0x4
  d4:	b.eq	b0 <ctf_pread+0x38>  // b.none
  d8:	sub	x19, x19, x0
  dc:	add	x24, x24, x0
  e0:	cbz	x0, f4 <ctf_pread+0x7c>
  e4:	cmp	x19, #0x0
  e8:	add	x21, x21, x0
  ec:	add	x20, x20, x0
  f0:	b.gt	b0 <ctf_pread+0x38>
  f4:	mov	x0, x24
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x23, x24, [sp, #48]
 104:	ldp	x29, x30, [sp], #64
 108:	ret
 10c:	cmp	w1, #0x4
 110:	b.eq	b0 <ctf_pread+0x38>  // b.none
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x23, x24, [sp, #48]
 120:	ldp	x29, x30, [sp], #64
 124:	ret
 128:	mov	x0, #0x0                   	// #0
 12c:	ret

0000000000000130 <ctf_strerror>:
 130:	b	0 <strerror>
 134:	nop

0000000000000138 <libctf_init_debug>:
 138:	adrp	x0, 0 <libctf_init_debug.part.0>
 13c:	ldr	w0, [x0]
 140:	cbz	w0, 148 <libctf_init_debug+0x10>
 144:	ret
 148:	b	0 <libctf_init_debug.part.0>
 14c:	nop

0000000000000150 <ctf_getdebug>:
 150:	adrp	x0, 0 <libctf_init_debug.part.0>
 154:	ldr	w0, [x0]
 158:	ret
 15c:	nop

0000000000000160 <ctf_dprintf>:
 160:	stp	x29, x30, [sp, #-288]!
 164:	adrp	x8, 0 <libctf_init_debug.part.0>
 168:	mov	x29, sp
 16c:	ldr	w8, [x8]
 170:	str	q0, [sp, #96]
 174:	str	q1, [sp, #112]
 178:	str	q2, [sp, #128]
 17c:	str	q3, [sp, #144]
 180:	str	q4, [sp, #160]
 184:	str	q5, [sp, #176]
 188:	str	q6, [sp, #192]
 18c:	str	q7, [sp, #208]
 190:	stp	x1, x2, [sp, #232]
 194:	stp	x3, x4, [sp, #248]
 198:	stp	x5, x6, [sp, #264]
 19c:	str	x7, [sp, #280]
 1a0:	cbnz	w8, 1ac <ctf_dprintf+0x4c>
 1a4:	ldp	x29, x30, [sp], #288
 1a8:	ret
 1ac:	stp	x19, x20, [sp, #16]
 1b0:	mov	x19, x0
 1b4:	adrp	x0, 0 <stdout>
 1b8:	add	x4, sp, #0x120
 1bc:	add	x3, sp, #0xe0
 1c0:	ldr	x0, [x0]
 1c4:	mov	w2, #0xffffffc8            	// #-56
 1c8:	mov	w1, #0xffffff80            	// #-128
 1cc:	adrp	x20, 0 <stderr>
 1d0:	stp	x4, x4, [sp, #64]
 1d4:	str	x3, [sp, #80]
 1d8:	stp	w2, w1, [sp, #88]
 1dc:	bl	0 <fflush>
 1e0:	ldr	x3, [x20]
 1e4:	mov	x2, #0xe                   	// #14
 1e8:	mov	x1, #0x1                   	// #1
 1ec:	adrp	x0, 0 <libctf_init_debug.part.0>
 1f0:	add	x0, x0, #0x0
 1f4:	bl	0 <fwrite>
 1f8:	ldp	x6, x7, [sp, #64]
 1fc:	mov	x1, x19
 200:	ldp	x4, x5, [sp, #80]
 204:	add	x2, sp, #0x20
 208:	ldr	x0, [x20]
 20c:	stp	x6, x7, [sp, #32]
 210:	stp	x4, x5, [sp, #48]
 214:	bl	0 <vfprintf>
 218:	ldp	x19, x20, [sp, #16]
 21c:	ldp	x29, x30, [sp], #288
 220:	ret
 224:	nop

0000000000000228 <ctf_version>:
 228:	stp	x29, x30, [sp, #-32]!
 22c:	cmp	w0, #0x0
 230:	mov	x29, sp
 234:	b.lt	2a0 <ctf_version+0x78>  // b.tstop
 238:	b.eq	274 <ctf_version+0x4c>  // b.none
 23c:	str	x19, [sp, #16]
 240:	cmp	w0, #0x4
 244:	mov	w19, w0
 248:	b.ne	284 <ctf_version+0x5c>  // b.any
 24c:	mov	w1, w19
 250:	adrp	x0, 0 <libctf_init_debug.part.0>
 254:	add	x0, x0, #0x0
 258:	bl	160 <ctf_dprintf>
 25c:	adrp	x1, 0 <libctf_init_debug.part.0>
 260:	mov	w0, w19
 264:	str	w19, [x1]
 268:	ldr	x19, [sp, #16]
 26c:	ldp	x29, x30, [sp], #32
 270:	ret
 274:	adrp	x0, 0 <libctf_init_debug.part.0>
 278:	ldr	w0, [x0]
 27c:	ldp	x29, x30, [sp], #32
 280:	ret
 284:	bl	0 <__errno_location>
 288:	mov	x1, x0
 28c:	mov	w2, #0x5f                  	// #95
 290:	mov	w0, #0xffffffff            	// #-1
 294:	ldr	x19, [sp, #16]
 298:	str	w2, [x1]
 29c:	b	27c <ctf_version+0x54>
 2a0:	bl	0 <__errno_location>
 2a4:	mov	x1, x0
 2a8:	mov	w2, #0x16                  	// #22
 2ac:	mov	w0, #0xffffffff            	// #-1
 2b0:	str	w2, [x1]
 2b4:	b	27c <ctf_version+0x54>

00000000000002b8 <ctf_setdebug>:
 2b8:	stp	x29, x30, [sp, #-32]!
 2bc:	mov	x29, sp
 2c0:	stp	x19, x20, [sp, #16]
 2c4:	adrp	x20, 0 <libctf_init_debug.part.0>
 2c8:	add	x1, x20, #0x0
 2cc:	mov	w19, w0
 2d0:	ldr	w0, [x1, #4]
 2d4:	cbz	w0, 2f4 <ctf_setdebug+0x3c>
 2d8:	mov	w1, w19
 2dc:	str	w19, [x20]
 2e0:	ldp	x19, x20, [sp, #16]
 2e4:	adrp	x0, 0 <libctf_init_debug.part.0>
 2e8:	ldp	x29, x30, [sp], #32
 2ec:	add	x0, x0, #0x0
 2f0:	b	160 <ctf_dprintf>
 2f4:	bl	0 <libctf_init_debug.part.0>
 2f8:	str	w19, [x20]
 2fc:	mov	w1, w19
 300:	adrp	x0, 0 <libctf_init_debug.part.0>
 304:	ldp	x19, x20, [sp, #16]
 308:	add	x0, x0, #0x0
 30c:	ldp	x29, x30, [sp], #32
 310:	b	160 <ctf_dprintf>

ctf-types.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_type_isparent>:
       0:	ldr	w0, [x0, #544]
       4:	cmp	x0, x1
       8:	cset	w0, cs  // cs = hs, nlast
       c:	ret

0000000000000010 <ctf_type_ischild>:
      10:	ldr	w0, [x0, #544]
      14:	cmp	x0, x1
      18:	cset	w0, cc  // cc = lo, ul, last
      1c:	ret

0000000000000020 <ctf_type_iter>:
      20:	stp	x29, x30, [sp, #-64]!
      24:	mov	x29, sp
      28:	stp	x21, x22, [sp, #32]
      2c:	ldr	x21, [x0, #480]
      30:	stp	x19, x20, [sp, #16]
      34:	mov	x20, x0
      38:	ldr	w0, [x0, #552]
      3c:	cbz	x21, d8 <ctf_type_iter+0xb8>
      40:	stp	x23, x24, [sp, #48]
      44:	mov	x22, x1
      48:	mov	x23, x2
      4c:	and	w24, w0, #0x1
      50:	mov	x19, #0x1                   	// #1
      54:	tbz	w0, #1, c0 <ctf_type_iter+0xa0>
      58:	mov	x1, x19
      5c:	tbz	w0, #0, 6c <ctf_type_iter+0x4c>
      60:	ldr	w1, [x20, #544]
      64:	add	w1, w1, #0x1
      68:	orr	x1, x1, x19
      6c:	mov	x0, x20
      70:	bl	0 <ctf_dtd_lookup>
      74:	add	x0, x0, #0x18
      78:	ldr	x1, [x20]
      7c:	ldr	w0, [x0, #4]
      80:	ldr	x1, [x1, #8]
      84:	blr	x1
      88:	cbz	w0, ac <ctf_type_iter+0x8c>
      8c:	mov	x0, x19
      90:	cbz	w24, a0 <ctf_type_iter+0x80>
      94:	ldr	w0, [x20, #544]
      98:	add	w0, w0, #0x1
      9c:	orr	x0, x0, x19
      a0:	mov	x1, x23
      a4:	blr	x22
      a8:	cbnz	w0, ec <ctf_type_iter+0xcc>
      ac:	add	x19, x19, #0x1
      b0:	cmp	x21, x19
      b4:	b.cc	d4 <ctf_type_iter+0xb4>  // b.lo, b.ul, b.last
      b8:	ldr	w0, [x20, #552]
      bc:	tbnz	w0, #1, 58 <ctf_type_iter+0x38>
      c0:	ldr	x1, [x20, #440]
      c4:	ldr	x0, [x20, #408]
      c8:	ldr	w1, [x1, x19, lsl #2]
      cc:	add	x0, x0, x1
      d0:	b	78 <ctf_type_iter+0x58>
      d4:	ldp	x23, x24, [sp, #48]
      d8:	mov	w0, #0x0                   	// #0
      dc:	ldp	x19, x20, [sp, #16]
      e0:	ldp	x21, x22, [sp, #32]
      e4:	ldp	x29, x30, [sp], #64
      e8:	ret
      ec:	ldp	x19, x20, [sp, #16]
      f0:	ldp	x21, x22, [sp, #32]
      f4:	ldp	x23, x24, [sp, #48]
      f8:	ldp	x29, x30, [sp], #64
      fc:	ret

0000000000000100 <ctf_type_iter_all>:
     100:	stp	x29, x30, [sp, #-80]!
     104:	mov	x29, sp
     108:	stp	x23, x24, [sp, #48]
     10c:	mov	x23, x2
     110:	ldr	w2, [x0, #552]
     114:	ldr	x24, [x0, #480]
     118:	cbz	x24, 1cc <ctf_type_iter_all+0xcc>
     11c:	stp	x19, x20, [sp, #16]
     120:	mov	x20, x0
     124:	mov	x19, #0x1                   	// #1
     128:	stp	x21, x22, [sp, #32]
     12c:	mov	x22, x1
     130:	str	x25, [sp, #64]
     134:	and	w25, w2, #0x1
     138:	b	1a4 <ctf_type_iter_all+0xa4>
     13c:	mov	x1, x19
     140:	tbz	w2, #0, 150 <ctf_type_iter_all+0x50>
     144:	ldr	w1, [x20, #544]
     148:	add	w1, w1, #0x1
     14c:	orr	x1, x1, x19
     150:	bl	0 <ctf_dtd_lookup>
     154:	add	x0, x0, #0x18
     158:	mov	x21, x19
     15c:	cbz	w25, 16c <ctf_type_iter_all+0x6c>
     160:	ldr	w21, [x20, #544]
     164:	add	w21, w21, #0x1
     168:	orr	x21, x21, x19
     16c:	ldr	x1, [x20]
     170:	add	x19, x19, #0x1
     174:	ldr	w0, [x0, #4]
     178:	ldr	x1, [x1, #8]
     17c:	blr	x1
     180:	cmp	w0, #0x0
     184:	cset	w1, ne  // ne = any
     188:	mov	x0, x21
     18c:	mov	x2, x23
     190:	blr	x22
     194:	cbnz	w0, 1dc <ctf_type_iter_all+0xdc>
     198:	cmp	x24, x19
     19c:	b.cc	1c0 <ctf_type_iter_all+0xc0>  // b.lo, b.ul, b.last
     1a0:	ldr	w2, [x20, #552]
     1a4:	mov	x0, x20
     1a8:	tbnz	w2, #1, 13c <ctf_type_iter_all+0x3c>
     1ac:	ldr	x1, [x20, #440]
     1b0:	ldr	x0, [x20, #408]
     1b4:	ldr	w1, [x1, x19, lsl #2]
     1b8:	add	x0, x0, x1
     1bc:	b	158 <ctf_type_iter_all+0x58>
     1c0:	ldp	x19, x20, [sp, #16]
     1c4:	ldp	x21, x22, [sp, #32]
     1c8:	ldr	x25, [sp, #64]
     1cc:	mov	w0, #0x0                   	// #0
     1d0:	ldp	x23, x24, [sp, #48]
     1d4:	ldp	x29, x30, [sp], #80
     1d8:	ret
     1dc:	mov	w0, #0x1                   	// #1
     1e0:	ldp	x19, x20, [sp, #16]
     1e4:	ldp	x21, x22, [sp, #32]
     1e8:	ldp	x23, x24, [sp, #48]
     1ec:	ldr	x25, [sp, #64]
     1f0:	ldp	x29, x30, [sp], #80
     1f4:	ret

00000000000001f8 <ctf_variable_iter>:
     1f8:	stp	x29, x30, [sp, #-64]!
     1fc:	mov	x29, sp
     200:	stp	x19, x20, [sp, #16]
     204:	mov	x19, x0
     208:	ldr	w0, [x0, #552]
     20c:	stp	x21, x22, [sp, #32]
     210:	mov	x22, x1
     214:	str	x23, [sp, #48]
     218:	mov	x23, x2
     21c:	tbz	w0, #0, 228 <ctf_variable_iter+0x30>
     220:	ldr	x1, [x19, #512]
     224:	cbz	x1, 2cc <ctf_variable_iter+0xd4>
     228:	tbnz	w0, #1, 28c <ctf_variable_iter+0x94>
     22c:	ldr	x0, [x19, #472]
     230:	mov	x21, #0x0                   	// #0
     234:	cbnz	x0, 248 <ctf_variable_iter+0x50>
     238:	b	2b4 <ctf_variable_iter+0xbc>
     23c:	ldr	x0, [x19, #472]
     240:	cmp	x0, x21
     244:	b.ls	2b4 <ctf_variable_iter+0xbc>  // b.plast
     248:	ldr	x1, [x19, #464]
     24c:	lsl	x20, x21, #3
     250:	mov	x0, x19
     254:	add	x21, x21, #0x1
     258:	ldr	w1, [x1, x20]
     25c:	bl	0 <ctf_strptr>
     260:	ldr	x1, [x19, #464]
     264:	mov	x2, x23
     268:	add	x20, x1, x20
     26c:	ldr	w1, [x20, #4]
     270:	blr	x22
     274:	cbz	w0, 23c <ctf_variable_iter+0x44>
     278:	ldp	x19, x20, [sp, #16]
     27c:	ldp	x21, x22, [sp, #32]
     280:	ldr	x23, [sp, #48]
     284:	ldp	x29, x30, [sp], #64
     288:	ret
     28c:	ldr	x19, [x19, #608]
     290:	cbnz	x19, 2a0 <ctf_variable_iter+0xa8>
     294:	b	2b4 <ctf_variable_iter+0xbc>
     298:	ldr	x19, [x19, #8]
     29c:	cbz	x19, 2b4 <ctf_variable_iter+0xbc>
     2a0:	ldp	x0, x1, [x19, #16]
     2a4:	mov	x2, x23
     2a8:	blr	x22
     2ac:	cbz	w0, 298 <ctf_variable_iter+0xa0>
     2b0:	b	278 <ctf_variable_iter+0x80>
     2b4:	mov	w0, #0x0                   	// #0
     2b8:	ldp	x19, x20, [sp, #16]
     2bc:	ldp	x21, x22, [sp, #32]
     2c0:	ldr	x23, [sp, #48]
     2c4:	ldp	x29, x30, [sp], #64
     2c8:	ret
     2cc:	mov	w0, #0x3f3                 	// #1011
     2d0:	b	278 <ctf_variable_iter+0x80>
     2d4:	nop

00000000000002d8 <ctf_type_resolve>:
     2d8:	stp	x29, x30, [sp, #-80]!
     2dc:	mov	x29, sp
     2e0:	stp	x19, x20, [sp, #16]
     2e4:	str	x0, [sp, #72]
     2e8:	cbz	x1, 394 <ctf_type_resolve+0xbc>
     2ec:	mov	x20, x1
     2f0:	stp	x21, x22, [sp, #32]
     2f4:	mov	x22, x1
     2f8:	mov	x21, x1
     2fc:	str	x23, [sp, #48]
     300:	mov	x23, x0
     304:	b	314 <ctf_type_resolve+0x3c>
     308:	mov	x21, x20
     30c:	mov	x20, x2
     310:	cbz	x2, 3e4 <ctf_type_resolve+0x10c>
     314:	mov	x1, x20
     318:	add	x0, sp, #0x48
     31c:	bl	0 <ctf_lookup_by_id>
     320:	mov	x19, x0
     324:	cbz	x0, 3b0 <ctf_type_resolve+0xd8>
     328:	ldr	x1, [sp, #72]
     32c:	ldr	w0, [x19, #4]
     330:	ldr	x1, [x1]
     334:	ldr	x2, [x1]
     338:	blr	x2
     33c:	sub	w0, w0, #0xa
     340:	cmp	w0, #0x3
     344:	b.hi	3cc <ctf_type_resolve+0xf4>  // b.pmore
     348:	ldr	w2, [x19, #8]
     34c:	cmp	x2, x20
     350:	ccmp	x2, x22, #0x4, ne  // ne = any
     354:	ccmp	x2, x21, #0x4, ne  // ne = any
     358:	b.ne	308 <ctf_type_resolve+0x30>  // b.any
     35c:	mov	x1, x22
     360:	adrp	x0, 0 <ctf_type_isparent>
     364:	add	x0, x0, #0x0
     368:	bl	0 <ctf_dprintf>
     36c:	mov	x0, x23
     370:	mov	w1, #0x3ef                 	// #1007
     374:	bl	0 <ctf_set_errno>
     378:	mov	x20, x0
     37c:	mov	x0, x20
     380:	ldp	x19, x20, [sp, #16]
     384:	ldp	x21, x22, [sp, #32]
     388:	ldr	x23, [sp, #48]
     38c:	ldp	x29, x30, [sp], #80
     390:	ret
     394:	mov	w1, #0x41b                 	// #1051
     398:	bl	0 <ctf_set_errno>
     39c:	mov	x20, x0
     3a0:	mov	x0, x20
     3a4:	ldp	x19, x20, [sp, #16]
     3a8:	ldp	x29, x30, [sp], #80
     3ac:	ret
     3b0:	mov	x20, #0xffffffffffffffff    	// #-1
     3b4:	mov	x0, x20
     3b8:	ldp	x19, x20, [sp, #16]
     3bc:	ldp	x21, x22, [sp, #32]
     3c0:	ldr	x23, [sp, #48]
     3c4:	ldp	x29, x30, [sp], #80
     3c8:	ret
     3cc:	mov	x0, x20
     3d0:	ldp	x19, x20, [sp, #16]
     3d4:	ldp	x21, x22, [sp, #32]
     3d8:	ldr	x23, [sp, #48]
     3dc:	ldp	x29, x30, [sp], #80
     3e0:	ret
     3e4:	mov	x0, x23
     3e8:	mov	w1, #0x41b                 	// #1051
     3ec:	bl	0 <ctf_set_errno>
     3f0:	mov	x20, x0
     3f4:	mov	x0, x20
     3f8:	ldp	x19, x20, [sp, #16]
     3fc:	ldp	x21, x22, [sp, #32]
     400:	ldr	x23, [sp, #48]
     404:	ldp	x29, x30, [sp], #80
     408:	ret
     40c:	nop

0000000000000410 <ctf_member_iter>:
     410:	stp	x29, x30, [sp, #-96]!
     414:	mov	x29, sp
     418:	stp	x19, x20, [sp, #16]
     41c:	mov	x20, x2
     420:	stp	x21, x22, [sp, #32]
     424:	mov	x21, x3
     428:	str	x23, [sp, #48]
     42c:	mov	x23, x0
     430:	str	x0, [sp, #72]
     434:	bl	2d8 <ctf_type_resolve>
     438:	cmn	x0, #0x1
     43c:	b.eq	5d0 <ctf_member_iter+0x1c0>  // b.none
     440:	mov	x1, x0
     444:	mov	x22, x0
     448:	add	x0, sp, #0x48
     44c:	bl	0 <ctf_lookup_by_id>
     450:	mov	x19, x0
     454:	cbz	x0, 5d0 <ctf_member_iter+0x1c0>
     458:	mov	x1, x0
     45c:	add	x3, sp, #0x58
     460:	ldr	x0, [sp, #72]
     464:	add	x2, sp, #0x50
     468:	ldr	x4, [x0]
     46c:	ldr	x4, [x4, #24]
     470:	blr	x4
     474:	ldr	x1, [sp, #72]
     478:	ldr	w0, [x19, #4]
     47c:	ldr	x1, [x1]
     480:	ldr	x1, [x1]
     484:	blr	x1
     488:	sub	w1, w0, #0x6
     48c:	cmp	w1, #0x1
     490:	b.hi	4e0 <ctf_member_iter+0xd0>  // b.pmore
     494:	ldr	x0, [sp, #72]
     498:	mov	x1, x22
     49c:	bl	0 <ctf_dynamic_type>
     4a0:	cbz	x0, 518 <ctf_member_iter+0x108>
     4a4:	ldr	x19, [x0, #56]
     4a8:	cbnz	x19, 4b8 <ctf_member_iter+0xa8>
     4ac:	b	500 <ctf_member_iter+0xf0>
     4b0:	ldr	x19, [x19, #8]
     4b4:	cbz	x19, 500 <ctf_member_iter+0xf0>
     4b8:	ldp	x0, x1, [x19, #16]
     4bc:	mov	x3, x21
     4c0:	ldr	x2, [x19, #32]
     4c4:	blr	x20
     4c8:	cbz	w0, 4b0 <ctf_member_iter+0xa0>
     4cc:	ldp	x19, x20, [sp, #16]
     4d0:	ldp	x21, x22, [sp, #32]
     4d4:	ldr	x23, [sp, #48]
     4d8:	ldp	x29, x30, [sp], #96
     4dc:	ret
     4e0:	mov	x0, x23
     4e4:	mov	w1, #0x3fb                 	// #1019
     4e8:	bl	0 <ctf_set_errno>
     4ec:	ldp	x19, x20, [sp, #16]
     4f0:	ldp	x21, x22, [sp, #32]
     4f4:	ldr	x23, [sp, #48]
     4f8:	ldp	x29, x30, [sp], #96
     4fc:	ret
     500:	mov	w0, #0x0                   	// #0
     504:	ldp	x19, x20, [sp, #16]
     508:	ldp	x21, x22, [sp, #32]
     50c:	ldr	x23, [sp, #48]
     510:	ldp	x29, x30, [sp], #96
     514:	ret
     518:	ldp	x1, x2, [sp, #72]
     51c:	mov	x0, #0x1fffffff            	// #536870911
     520:	ldr	x1, [x1]
     524:	cmp	x2, x0
     528:	ldr	x2, [sp, #88]
     52c:	ldr	w0, [x19, #4]
     530:	add	x19, x19, x2
     534:	ldr	x1, [x1, #16]
     538:	b.gt	584 <ctf_member_iter+0x174>
     53c:	blr	x1
     540:	cbz	w0, 500 <ctf_member_iter+0xf0>
     544:	sub	w0, w0, #0x1
     548:	add	x22, x19, #0xc
     54c:	mov	w1, #0xc                   	// #12
     550:	umaddl	x22, w0, w1, x22
     554:	b	560 <ctf_member_iter+0x150>
     558:	cmp	x22, x19
     55c:	b.eq	500 <ctf_member_iter+0xf0>  // b.none
     560:	ldr	w1, [x19]
     564:	ldr	x0, [sp, #72]
     568:	bl	0 <ctf_strptr>
     56c:	ldp	w2, w1, [x19, #4]
     570:	mov	x3, x21
     574:	add	x19, x19, #0xc
     578:	blr	x20
     57c:	cbz	w0, 558 <ctf_member_iter+0x148>
     580:	b	4cc <ctf_member_iter+0xbc>
     584:	blr	x1
     588:	cbz	w0, 500 <ctf_member_iter+0xf0>
     58c:	sub	w0, w0, #0x1
     590:	add	x22, x19, #0x10
     594:	add	x22, x22, w0, uxtw #4
     598:	b	5a0 <ctf_member_iter+0x190>
     59c:	b.eq	500 <ctf_member_iter+0xf0>  // b.none
     5a0:	ldr	w1, [x19]
     5a4:	ldr	x0, [sp, #72]
     5a8:	bl	0 <ctf_strptr>
     5ac:	ldp	w4, w1, [x19, #4]
     5b0:	mov	x3, x21
     5b4:	ldr	w2, [x19, #12]
     5b8:	add	x19, x19, #0x10
     5bc:	orr	x2, x2, x4, lsl #32
     5c0:	blr	x20
     5c4:	cmp	x22, x19
     5c8:	cbz	w0, 59c <ctf_member_iter+0x18c>
     5cc:	b	4cc <ctf_member_iter+0xbc>
     5d0:	mov	w0, #0xffffffff            	// #-1
     5d4:	b	4cc <ctf_member_iter+0xbc>

00000000000005d8 <ctf_type_rvisit>:
     5d8:	stp	x29, x30, [sp, #-128]!
     5dc:	mov	x29, sp
     5e0:	stp	x19, x20, [sp, #16]
     5e4:	mov	w20, w6
     5e8:	stp	x21, x22, [sp, #32]
     5ec:	mov	x21, x2
     5f0:	mov	x22, x3
     5f4:	stp	x23, x24, [sp, #48]
     5f8:	mov	x24, x4
     5fc:	stp	x25, x26, [sp, #64]
     600:	mov	x25, x5
     604:	mov	x26, x1
     608:	str	x0, [sp, #104]
     60c:	bl	2d8 <ctf_type_resolve>
     610:	cmn	x0, #0x1
     614:	b.eq	820 <ctf_type_rvisit+0x248>  // b.none
     618:	mov	x1, x0
     61c:	mov	x19, x0
     620:	add	x0, sp, #0x68
     624:	bl	0 <ctf_lookup_by_id>
     628:	mov	x23, x0
     62c:	cbz	x0, 820 <ctf_type_rvisit+0x248>
     630:	mov	x0, x24
     634:	mov	x1, x26
     638:	mov	x4, x22
     63c:	mov	w3, w20
     640:	mov	x2, x25
     644:	blr	x21
     648:	mov	w24, w0
     64c:	cbnz	w0, 6d0 <ctf_type_rvisit+0xf8>
     650:	ldr	x1, [sp, #104]
     654:	ldr	w0, [x23, #4]
     658:	ldr	x1, [x1]
     65c:	ldr	x1, [x1]
     660:	blr	x1
     664:	sub	w0, w0, #0x6
     668:	cmp	w0, #0x1
     66c:	b.hi	6d0 <ctf_type_rvisit+0xf8>  // b.pmore
     670:	ldr	x0, [sp, #104]
     674:	mov	x1, x23
     678:	add	x3, sp, #0x78
     67c:	add	x2, sp, #0x70
     680:	ldr	x4, [x0]
     684:	ldr	x4, [x4, #24]
     688:	blr	x4
     68c:	ldr	x0, [sp, #104]
     690:	mov	x1, x19
     694:	bl	0 <ctf_dynamic_type>
     698:	cbz	x0, 70c <ctf_type_rvisit+0x134>
     69c:	ldr	x19, [x0, #56]
     6a0:	cbz	x19, 6d0 <ctf_type_rvisit+0xf8>
     6a4:	add	w20, w20, #0x1
     6a8:	ldp	x4, x1, [x19, #16]
     6ac:	mov	w6, w20
     6b0:	ldr	x5, [x19, #32]
     6b4:	mov	x3, x22
     6b8:	ldr	x0, [sp, #104]
     6bc:	mov	x2, x21
     6c0:	bl	5d8 <ctf_type_rvisit>
     6c4:	cbnz	w0, 6ec <ctf_type_rvisit+0x114>
     6c8:	ldr	x19, [x19, #8]
     6cc:	cbnz	x19, 6a8 <ctf_type_rvisit+0xd0>
     6d0:	mov	w0, w24
     6d4:	ldp	x19, x20, [sp, #16]
     6d8:	ldp	x21, x22, [sp, #32]
     6dc:	ldp	x23, x24, [sp, #48]
     6e0:	ldp	x25, x26, [sp, #64]
     6e4:	ldp	x29, x30, [sp], #128
     6e8:	ret
     6ec:	mov	w24, w0
     6f0:	mov	w0, w24
     6f4:	ldp	x19, x20, [sp, #16]
     6f8:	ldp	x21, x22, [sp, #32]
     6fc:	ldp	x23, x24, [sp, #48]
     700:	ldp	x25, x26, [sp, #64]
     704:	ldp	x29, x30, [sp], #128
     708:	ret
     70c:	ldp	x1, x2, [sp, #104]
     710:	mov	x0, #0x1fffffff            	// #536870911
     714:	ldr	x1, [x1]
     718:	cmp	x2, x0
     71c:	ldr	x2, [sp, #120]
     720:	ldr	w0, [x23, #4]
     724:	add	x23, x23, x2
     728:	ldr	x1, [x1, #16]
     72c:	b.gt	7a0 <ctf_type_rvisit+0x1c8>
     730:	blr	x1
     734:	cbz	w0, 6d0 <ctf_type_rvisit+0xf8>
     738:	sub	w0, w0, #0x1
     73c:	add	x26, x23, #0xc
     740:	mov	w1, #0xc                   	// #12
     744:	add	w20, w20, #0x1
     748:	str	x27, [sp, #80]
     74c:	umaddl	x26, w0, w1, x26
     750:	ldr	w1, [x23]
     754:	add	x23, x23, #0xc
     758:	ldr	x19, [sp, #104]
     75c:	ldur	w27, [x23, #-4]
     760:	mov	x0, x19
     764:	bl	0 <ctf_strptr>
     768:	ldur	w5, [x23, #-8]
     76c:	mov	x4, x0
     770:	mov	x1, x27
     774:	mov	x0, x19
     778:	mov	w6, w20
     77c:	mov	x3, x22
     780:	mov	x2, x21
     784:	add	x5, x5, x25
     788:	bl	5d8 <ctf_type_rvisit>
     78c:	cbnz	w0, 814 <ctf_type_rvisit+0x23c>
     790:	cmp	x26, x23
     794:	b.ne	750 <ctf_type_rvisit+0x178>  // b.any
     798:	ldr	x27, [sp, #80]
     79c:	b	6d0 <ctf_type_rvisit+0xf8>
     7a0:	blr	x1
     7a4:	cbz	w0, 6d0 <ctf_type_rvisit+0xf8>
     7a8:	sub	w0, w0, #0x1
     7ac:	add	x19, x23, #0x10
     7b0:	add	w20, w20, #0x1
     7b4:	str	x27, [sp, #80]
     7b8:	add	x19, x19, w0, uxtw #4
     7bc:	ldr	w1, [x23]
     7c0:	add	x23, x23, #0x10
     7c4:	ldr	x26, [sp, #104]
     7c8:	ldur	w27, [x23, #-8]
     7cc:	mov	x0, x26
     7d0:	bl	0 <ctf_strptr>
     7d4:	ldur	w2, [x23, #-4]
     7d8:	mov	x4, x0
     7dc:	ldur	w5, [x23, #-12]
     7e0:	mov	x1, x27
     7e4:	mov	x0, x26
     7e8:	mov	w6, w20
     7ec:	mov	x3, x22
     7f0:	orr	x5, x2, x5, lsl #32
     7f4:	mov	x2, x21
     7f8:	add	x5, x5, x25
     7fc:	bl	5d8 <ctf_type_rvisit>
     800:	cbnz	w0, 814 <ctf_type_rvisit+0x23c>
     804:	cmp	x19, x23
     808:	b.ne	7bc <ctf_type_rvisit+0x1e4>  // b.any
     80c:	ldr	x27, [sp, #80]
     810:	b	6d0 <ctf_type_rvisit+0xf8>
     814:	mov	w24, w0
     818:	ldr	x27, [sp, #80]
     81c:	b	6d0 <ctf_type_rvisit+0xf8>
     820:	mov	w24, #0xffffffff            	// #-1
     824:	b	6d0 <ctf_type_rvisit+0xf8>

0000000000000828 <ctf_lookup_by_rawhash>:
     828:	mov	x3, x0
     82c:	ldr	w0, [x0, #552]
     830:	tbz	w0, #1, 840 <ctf_lookup_by_rawhash+0x18>
     834:	ldr	x0, [x1, #8]
     838:	mov	x1, x2
     83c:	b	0 <ctf_dynhash_lookup>
     840:	ldr	x0, [x1]
     844:	mov	x1, x3
     848:	b	0 <ctf_hash_lookup_type>
     84c:	nop

0000000000000850 <ctf_lookup_by_rawname>:
     850:	stp	x29, x30, [sp, #-32]!
     854:	mov	x29, sp
     858:	stp	x19, x20, [sp, #16]
     85c:	mov	x20, x2
     860:	mov	x19, x0
     864:	bl	0 <ctf_name_table>
     868:	mov	x1, x0
     86c:	mov	x2, x20
     870:	mov	x0, x19
     874:	ldp	x19, x20, [sp, #16]
     878:	ldp	x29, x30, [sp], #32
     87c:	b	828 <ctf_lookup_by_rawhash>

0000000000000880 <ctf_type_aname>:
     880:	stp	x29, x30, [sp, #-208]!
     884:	cmp	x0, #0x0
     888:	ccmn	x1, #0x1, #0x0, eq  // eq = none
     88c:	mov	x29, sp
     890:	stp	x19, x20, [sp, #16]
     894:	mov	x19, #0x0                   	// #0
     898:	b.eq	a1c <ctf_type_aname+0x19c>  // b.none
     89c:	mov	x19, x1
     8a0:	stp	x21, x22, [sp, #32]
     8a4:	mov	x22, x0
     8a8:	add	x0, sp, #0x68
     8ac:	bl	0 <ctf_decl_init>
     8b0:	add	x0, sp, #0x68
     8b4:	mov	x2, x19
     8b8:	mov	x1, x22
     8bc:	bl	0 <ctf_decl_push>
     8c0:	ldr	w0, [sp, #200]
     8c4:	cbnz	w0, ba0 <ctf_type_aname+0x320>
     8c8:	ldp	w1, w0, [sp, #172]
     8cc:	stp	x23, x24, [sp, #48]
     8d0:	stp	x25, x26, [sp, #64]
     8d4:	cmp	w0, #0x2
     8d8:	stp	x27, x28, [sp, #80]
     8dc:	b.le	a2c <ctf_type_aname+0x1ac>
     8e0:	cmp	w1, #0x1
     8e4:	mov	w26, #0x2                   	// #2
     8e8:	mov	w21, #0x1                   	// #1
     8ec:	csel	w21, w26, w21, le
     8f0:	adrp	x25, 0 <ctf_type_isparent>
     8f4:	add	x24, sp, #0x70
     8f8:	add	x25, x25, #0x0
     8fc:	mov	w19, #0x3                   	// #3
     900:	mov	w20, #0x0                   	// #0
     904:	ldr	x28, [x24]
     908:	cbz	x28, 9d8 <ctf_type_aname+0x158>
     90c:	adrp	x0, 0 <ctf_type_isparent>
     910:	add	x23, x0, #0x0
     914:	b	950 <ctf_type_aname+0xd0>
     918:	cmp	w19, #0x3
     91c:	b.eq	b64 <ctf_type_aname+0x2e4>  // b.none
     920:	b.ls	a74 <ctf_type_aname+0x1f4>  // b.plast
     924:	cmp	w19, #0x4
     928:	b.ne	af8 <ctf_type_aname+0x278>  // b.any
     92c:	ldr	w2, [x28, #28]
     930:	add	x0, sp, #0x68
     934:	adrp	x1, 0 <ctf_type_isparent>
     938:	add	x1, x1, #0x0
     93c:	bl	0 <ctf_decl_sprintf>
     940:	ldr	w19, [x28, #24]
     944:	nop
     948:	ldr	x28, [x28, #8]
     94c:	cbz	x28, 9d8 <ctf_type_aname+0x158>
     950:	ldr	x1, [x28, #16]
     954:	add	x0, sp, #0x60
     958:	str	x22, [sp, #96]
     95c:	sub	w19, w19, #0x3
     960:	bl	0 <ctf_lookup_by_id>
     964:	ldr	w1, [x0]
     968:	ldr	x0, [sp, #96]
     96c:	bl	0 <ctf_strptr>
     970:	mov	x27, x0
     974:	cmp	w19, #0x1
     978:	b.ls	988 <ctf_type_aname+0x108>  // b.plast
     97c:	mov	x1, x23
     980:	add	x0, sp, #0x68
     984:	bl	0 <ctf_decl_sprintf>
     988:	cmp	w21, w20
     98c:	b.eq	ac0 <ctf_type_aname+0x240>  // b.none
     990:	ldr	w19, [x28, #24]
     994:	cmp	w19, #0x8
     998:	b.eq	adc <ctf_type_aname+0x25c>  // b.none
     99c:	b.hi	a48 <ctf_type_aname+0x1c8>  // b.pmore
     9a0:	cmp	w19, #0x5
     9a4:	b.eq	b4c <ctf_type_aname+0x2cc>  // b.none
     9a8:	b.ls	918 <ctf_type_aname+0x98>  // b.plast
     9ac:	cmp	w19, #0x6
     9b0:	b.eq	b18 <ctf_type_aname+0x298>  // b.none
     9b4:	mov	x2, x27
     9b8:	add	x0, sp, #0x68
     9bc:	adrp	x1, 0 <ctf_type_isparent>
     9c0:	add	x1, x1, #0x0
     9c4:	bl	0 <ctf_decl_sprintf>
     9c8:	ldr	w19, [x28, #24]
     9cc:	ldr	x28, [x28, #8]
     9d0:	cbnz	x28, 950 <ctf_type_aname+0xd0>
     9d4:	nop
     9d8:	cmp	w20, w26
     9dc:	b.eq	b7c <ctf_type_aname+0x2fc>  // b.none
     9e0:	add	w20, w20, #0x1
     9e4:	add	x24, x24, #0x10
     9e8:	cmp	w20, #0x4
     9ec:	b.ne	904 <ctf_type_aname+0x84>  // b.any
     9f0:	ldr	w0, [sp, #204]
     9f4:	cbnz	w0, b90 <ctf_type_aname+0x310>
     9f8:	add	x0, sp, #0x68
     9fc:	bl	0 <ctf_decl_buf>
     a00:	mov	x19, x0
     a04:	add	x0, sp, #0x68
     a08:	bl	0 <ctf_decl_fini>
     a0c:	ldp	x21, x22, [sp, #32]
     a10:	ldp	x23, x24, [sp, #48]
     a14:	ldp	x25, x26, [sp, #64]
     a18:	ldp	x27, x28, [sp, #80]
     a1c:	mov	x0, x19
     a20:	ldp	x19, x20, [sp, #16]
     a24:	ldp	x29, x30, [sp], #208
     a28:	ret
     a2c:	mov	w26, #0x1                   	// #1
     a30:	cmp	w1, #0x1
     a34:	mov	w21, w26
     a38:	b.gt	8f0 <ctf_type_aname+0x70>
     a3c:	mov	w26, #0xffffffff            	// #-1
     a40:	mov	w21, w26
     a44:	b	8f0 <ctf_type_aname+0x70>
     a48:	cmp	w19, #0xc
     a4c:	b.eq	b00 <ctf_type_aname+0x280>  // b.none
     a50:	b.ls	a9c <ctf_type_aname+0x21c>  // b.plast
     a54:	cmp	w19, #0xd
     a58:	b.ne	948 <ctf_type_aname+0xc8>  // b.any
     a5c:	add	x0, sp, #0x68
     a60:	adrp	x1, 0 <ctf_type_isparent>
     a64:	add	x1, x1, #0x0
     a68:	bl	0 <ctf_decl_sprintf>
     a6c:	ldr	w19, [x28, #24]
     a70:	b	948 <ctf_type_aname+0xc8>
     a74:	sub	w0, w19, #0x1
     a78:	cmp	w0, #0x1
     a7c:	b.hi	948 <ctf_type_aname+0xc8>  // b.pmore
     a80:	mov	x2, x27
     a84:	add	x0, sp, #0x68
     a88:	adrp	x1, 0 <ctf_type_isparent>
     a8c:	add	x1, x1, #0x0
     a90:	bl	0 <ctf_decl_sprintf>
     a94:	ldr	w19, [x28, #24]
     a98:	b	948 <ctf_type_aname+0xc8>
     a9c:	cmp	w19, #0xb
     aa0:	b.eq	b34 <ctf_type_aname+0x2b4>  // b.none
     aa4:	cmp	w19, #0xc
     aa8:	b.eq	948 <ctf_type_aname+0xc8>  // b.none
     aac:	cmp	w19, #0x9
     ab0:	b.eq	b18 <ctf_type_aname+0x298>  // b.none
     ab4:	cmp	w19, #0xa
     ab8:	b.eq	a80 <ctf_type_aname+0x200>  // b.none
     abc:	b	948 <ctf_type_aname+0xc8>
     ac0:	mov	x1, x25
     ac4:	add	x0, sp, #0x68
     ac8:	bl	0 <ctf_decl_sprintf>
     acc:	ldr	w19, [x28, #24]
     ad0:	mov	w21, #0xffffffff            	// #-1
     ad4:	cmp	w19, #0x8
     ad8:	b.ne	99c <ctf_type_aname+0x11c>  // b.any
     adc:	mov	x2, x27
     ae0:	add	x0, sp, #0x68
     ae4:	adrp	x1, 0 <ctf_type_isparent>
     ae8:	add	x1, x1, #0x0
     aec:	bl	0 <ctf_decl_sprintf>
     af0:	ldr	w19, [x28, #24]
     af4:	b	948 <ctf_type_aname+0xc8>
     af8:	mov	w19, #0x5                   	// #5
     afc:	b	948 <ctf_type_aname+0xc8>
     b00:	add	x0, sp, #0x68
     b04:	adrp	x1, 0 <ctf_type_isparent>
     b08:	add	x1, x1, #0x0
     b0c:	bl	0 <ctf_decl_sprintf>
     b10:	ldr	w19, [x28, #24]
     b14:	b	948 <ctf_type_aname+0xc8>
     b18:	mov	x2, x27
     b1c:	add	x0, sp, #0x68
     b20:	adrp	x1, 0 <ctf_type_isparent>
     b24:	add	x1, x1, #0x0
     b28:	bl	0 <ctf_decl_sprintf>
     b2c:	ldr	w19, [x28, #24]
     b30:	b	948 <ctf_type_aname+0xc8>
     b34:	add	x0, sp, #0x68
     b38:	adrp	x1, 0 <ctf_type_isparent>
     b3c:	add	x1, x1, #0x0
     b40:	bl	0 <ctf_decl_sprintf>
     b44:	ldr	w19, [x28, #24]
     b48:	b	948 <ctf_type_aname+0xc8>
     b4c:	add	x0, sp, #0x68
     b50:	adrp	x1, 0 <ctf_type_isparent>
     b54:	add	x1, x1, #0x0
     b58:	bl	0 <ctf_decl_sprintf>
     b5c:	ldr	w19, [x28, #24]
     b60:	b	948 <ctf_type_aname+0xc8>
     b64:	add	x0, sp, #0x68
     b68:	adrp	x1, 0 <ctf_type_isparent>
     b6c:	add	x1, x1, #0x0
     b70:	bl	0 <ctf_decl_sprintf>
     b74:	ldr	w19, [x28, #24]
     b78:	b	948 <ctf_type_aname+0xc8>
     b7c:	add	x0, sp, #0x68
     b80:	adrp	x1, 0 <ctf_type_isparent>
     b84:	add	x1, x1, #0x0
     b88:	bl	0 <ctf_decl_sprintf>
     b8c:	b	9e0 <ctf_type_aname+0x160>
     b90:	mov	x0, x22
     b94:	mov	w1, #0xc                   	// #12
     b98:	bl	0 <ctf_set_errno>
     b9c:	b	9f8 <ctf_type_aname+0x178>
     ba0:	add	x0, sp, #0x68
     ba4:	bl	0 <ctf_decl_fini>
     ba8:	ldr	w1, [sp, #200]
     bac:	mov	x0, x22
     bb0:	mov	x19, #0x0                   	// #0
     bb4:	bl	0 <ctf_set_errno>
     bb8:	ldp	x21, x22, [sp, #32]
     bbc:	b	a1c <ctf_type_aname+0x19c>

0000000000000bc0 <ctf_type_lname>:
     bc0:	stp	x29, x30, [sp, #-64]!
     bc4:	mov	x29, sp
     bc8:	stp	x21, x22, [sp, #32]
     bcc:	mov	x22, x2
     bd0:	mov	x21, x3
     bd4:	str	x23, [sp, #48]
     bd8:	mov	x23, x0
     bdc:	bl	880 <ctf_type_aname>
     be0:	cbz	x0, c44 <ctf_type_lname+0x84>
     be4:	stp	x19, x20, [sp, #16]
     be8:	mov	x20, x0
     bec:	bl	0 <strlen>
     bf0:	mov	x3, x20
     bf4:	mov	x1, x21
     bf8:	adrp	x2, 0 <ctf_type_isparent>
     bfc:	add	x2, x2, #0x0
     c00:	mov	x19, x0
     c04:	mov	x0, x22
     c08:	bl	0 <snprintf>
     c0c:	mov	x0, x20
     c10:	bl	0 <free>
     c14:	cmp	x19, x21
     c18:	b.cs	c34 <ctf_type_lname+0x74>  // b.hs, b.nlast
     c1c:	mov	x0, x19
     c20:	ldp	x19, x20, [sp, #16]
     c24:	ldp	x21, x22, [sp, #32]
     c28:	ldr	x23, [sp, #48]
     c2c:	ldp	x29, x30, [sp], #64
     c30:	ret
     c34:	mov	x0, x23
     c38:	mov	w1, #0x401                 	// #1025
     c3c:	bl	0 <ctf_set_errno>
     c40:	b	c1c <ctf_type_lname+0x5c>
     c44:	mov	x0, #0xffffffffffffffff    	// #-1
     c48:	b	c24 <ctf_type_lname+0x64>
     c4c:	nop

0000000000000c50 <ctf_type_name>:
     c50:	stp	x29, x30, [sp, #-32]!
     c54:	mov	x29, sp
     c58:	stp	x19, x20, [sp, #16]
     c5c:	mov	x19, x2
     c60:	mov	x20, x3
     c64:	bl	bc0 <ctf_type_lname>
     c68:	cmp	x0, #0x0
     c6c:	ccmp	x0, x20, #0x2, ge  // ge = tcont
     c70:	csel	x0, x19, xzr, cc  // cc = lo, ul, last
     c74:	ldp	x19, x20, [sp, #16]
     c78:	ldp	x29, x30, [sp], #32
     c7c:	ret

0000000000000c80 <ctf_type_aname_raw>:
     c80:	stp	x29, x30, [sp, #-48]!
     c84:	mov	x29, sp
     c88:	str	x0, [sp, #40]
     c8c:	add	x0, sp, #0x28
     c90:	bl	0 <ctf_lookup_by_id>
     c94:	cbz	x0, cd0 <ctf_type_aname_raw+0x50>
     c98:	ldr	w1, [x0]
     c9c:	str	x19, [sp, #16]
     ca0:	mov	x19, x0
     ca4:	ldr	x0, [sp, #40]
     ca8:	bl	0 <ctf_strraw>
     cac:	cbz	x0, ccc <ctf_type_aname_raw+0x4c>
     cb0:	ldr	w1, [x19]
     cb4:	ldr	x0, [sp, #40]
     cb8:	bl	0 <ctf_strraw>
     cbc:	bl	0 <strdup>
     cc0:	ldr	x19, [sp, #16]
     cc4:	ldp	x29, x30, [sp], #48
     cc8:	ret
     ccc:	ldr	x19, [sp, #16]
     cd0:	mov	x0, #0x0                   	// #0
     cd4:	ldp	x29, x30, [sp], #48
     cd8:	ret
     cdc:	nop

0000000000000ce0 <ctf_type_kind_unsliced>:
     ce0:	stp	x29, x30, [sp, #-32]!
     ce4:	mov	x29, sp
     ce8:	str	x0, [sp, #24]
     cec:	add	x0, sp, #0x18
     cf0:	bl	0 <ctf_lookup_by_id>
     cf4:	cbz	x0, d14 <ctf_type_kind_unsliced+0x34>
     cf8:	ldr	x1, [sp, #24]
     cfc:	ldr	w0, [x0, #4]
     d00:	ldr	x1, [x1]
     d04:	ldr	x1, [x1]
     d08:	blr	x1
     d0c:	ldp	x29, x30, [sp], #32
     d10:	ret
     d14:	mov	w0, #0xffffffff            	// #-1
     d18:	b	d0c <ctf_type_kind_unsliced+0x2c>
     d1c:	nop

0000000000000d20 <ctf_type_reference>:
     d20:	stp	x29, x30, [sp, #-64]!
     d24:	mov	x29, sp
     d28:	stp	x19, x20, [sp, #16]
     d2c:	mov	x20, x0
     d30:	str	x0, [sp, #40]
     d34:	add	x0, sp, #0x28
     d38:	bl	0 <ctf_lookup_by_id>
     d3c:	cbz	x0, dd0 <ctf_type_reference+0xb0>
     d40:	ldr	x1, [sp, #40]
     d44:	mov	x19, x0
     d48:	ldr	w0, [x0, #4]
     d4c:	ldr	x1, [x1]
     d50:	ldr	x1, [x1]
     d54:	blr	x1
     d58:	cmp	w0, #0xd
     d5c:	b.ls	d98 <ctf_type_reference+0x78>  // b.plast
     d60:	cmp	w0, #0xe
     d64:	b.ne	da8 <ctf_type_reference+0x88>  // b.any
     d68:	ldr	x0, [sp, #40]
     d6c:	add	x3, sp, #0x38
     d70:	mov	x1, x19
     d74:	mov	x2, #0x0                   	// #0
     d78:	ldr	x4, [x0]
     d7c:	ldr	x4, [x4, #24]
     d80:	blr	x4
     d84:	ldr	x0, [sp, #56]
     d88:	ldr	w0, [x19, x0]
     d8c:	ldp	x19, x20, [sp, #16]
     d90:	ldp	x29, x30, [sp], #64
     d94:	ret
     d98:	cmp	w0, #0x9
     d9c:	b.hi	dc0 <ctf_type_reference+0xa0>  // b.pmore
     da0:	cmp	w0, #0x3
     da4:	b.eq	dc0 <ctf_type_reference+0xa0>  // b.none
     da8:	mov	x0, x20
     dac:	mov	w1, #0x400                 	// #1024
     db0:	bl	0 <ctf_set_errno>
     db4:	ldp	x19, x20, [sp, #16]
     db8:	ldp	x29, x30, [sp], #64
     dbc:	ret
     dc0:	ldr	w0, [x19, #8]
     dc4:	ldp	x19, x20, [sp, #16]
     dc8:	ldp	x29, x30, [sp], #64
     dcc:	ret
     dd0:	mov	x0, #0xffffffffffffffff    	// #-1
     dd4:	ldp	x19, x20, [sp, #16]
     dd8:	ldp	x29, x30, [sp], #64
     ddc:	ret

0000000000000de0 <ctf_type_resolve_unsliced>:
     de0:	stp	x29, x30, [sp, #-48]!
     de4:	mov	x29, sp
     de8:	str	x19, [sp, #16]
     dec:	str	x0, [sp, #40]
     df0:	bl	2d8 <ctf_type_resolve>
     df4:	cmn	x0, #0x1
     df8:	b.eq	e3c <ctf_type_resolve_unsliced+0x5c>  // b.none
     dfc:	mov	x19, x0
     e00:	mov	x1, x0
     e04:	add	x0, sp, #0x28
     e08:	bl	0 <ctf_lookup_by_id>
     e0c:	cbz	x0, e3c <ctf_type_resolve_unsliced+0x5c>
     e10:	ldr	x1, [sp, #40]
     e14:	ldr	w0, [x0, #4]
     e18:	ldr	x1, [x1]
     e1c:	ldr	x1, [x1]
     e20:	blr	x1
     e24:	cmp	w0, #0xe
     e28:	b.eq	e50 <ctf_type_resolve_unsliced+0x70>  // b.none
     e2c:	mov	x0, x19
     e30:	ldr	x19, [sp, #16]
     e34:	ldp	x29, x30, [sp], #48
     e38:	ret
     e3c:	mov	x19, #0xffffffffffffffff    	// #-1
     e40:	mov	x0, x19
     e44:	ldr	x19, [sp, #16]
     e48:	ldp	x29, x30, [sp], #48
     e4c:	ret
     e50:	ldr	x0, [sp, #40]
     e54:	mov	x1, x19
     e58:	bl	d20 <ctf_type_reference>
     e5c:	mov	x19, x0
     e60:	b	e2c <ctf_type_resolve_unsliced+0x4c>
     e64:	nop

0000000000000e68 <ctf_enum_iter>:
     e68:	stp	x29, x30, [sp, #-96]!
     e6c:	mov	x29, sp
     e70:	stp	x19, x20, [sp, #16]
     e74:	mov	x20, x2
     e78:	stp	x21, x22, [sp, #32]
     e7c:	mov	x21, x3
     e80:	str	x23, [sp, #48]
     e84:	mov	x23, x0
     e88:	str	x0, [sp, #72]
     e8c:	bl	de0 <ctf_type_resolve_unsliced>
     e90:	cmn	x0, #0x1
     e94:	b.eq	fc8 <ctf_enum_iter+0x160>  // b.none
     e98:	mov	x1, x0
     e9c:	mov	x22, x0
     ea0:	add	x0, sp, #0x48
     ea4:	bl	0 <ctf_lookup_by_id>
     ea8:	mov	x19, x0
     eac:	cbz	x0, fc8 <ctf_enum_iter+0x160>
     eb0:	ldr	x1, [sp, #72]
     eb4:	ldr	w0, [x0, #4]
     eb8:	ldr	x1, [x1]
     ebc:	ldr	x1, [x1]
     ec0:	blr	x1
     ec4:	cmp	w0, #0x8
     ec8:	b.ne	f4c <ctf_enum_iter+0xe4>  // b.any
     ecc:	ldr	x0, [sp, #72]
     ed0:	add	x3, sp, #0x58
     ed4:	mov	x2, #0x0                   	// #0
     ed8:	mov	x1, x19
     edc:	ldr	x4, [x0]
     ee0:	ldr	x4, [x4, #24]
     ee4:	blr	x4
     ee8:	mov	x1, x22
     eec:	mov	x0, x23
     ef0:	bl	0 <ctf_dynamic_type>
     ef4:	cbz	x0, f6c <ctf_enum_iter+0x104>
     ef8:	ldr	x19, [x0, #56]
     efc:	cbnz	x19, f0c <ctf_enum_iter+0xa4>
     f00:	b	f34 <ctf_enum_iter+0xcc>
     f04:	ldr	x19, [x19, #8]
     f08:	cbz	x19, f34 <ctf_enum_iter+0xcc>
     f0c:	ldr	w1, [x19, #40]
     f10:	mov	x2, x21
     f14:	ldr	x0, [x19, #16]
     f18:	blr	x20
     f1c:	cbz	w0, f04 <ctf_enum_iter+0x9c>
     f20:	ldp	x19, x20, [sp, #16]
     f24:	ldp	x21, x22, [sp, #32]
     f28:	ldr	x23, [sp, #48]
     f2c:	ldp	x29, x30, [sp], #96
     f30:	ret
     f34:	mov	w0, #0x0                   	// #0
     f38:	ldp	x19, x20, [sp, #16]
     f3c:	ldp	x21, x22, [sp, #32]
     f40:	ldr	x23, [sp, #48]
     f44:	ldp	x29, x30, [sp], #96
     f48:	ret
     f4c:	mov	x0, x23
     f50:	mov	w1, #0x3fc                 	// #1020
     f54:	bl	0 <ctf_set_errno>
     f58:	ldp	x19, x20, [sp, #16]
     f5c:	ldp	x21, x22, [sp, #32]
     f60:	ldr	x23, [sp, #48]
     f64:	ldp	x29, x30, [sp], #96
     f68:	ret
     f6c:	ldr	x1, [sp, #72]
     f70:	ldr	w0, [x19, #4]
     f74:	ldr	x2, [sp, #88]
     f78:	ldr	x1, [x1]
     f7c:	add	x19, x19, x2
     f80:	ldr	x1, [x1, #16]
     f84:	blr	x1
     f88:	cbz	w0, f34 <ctf_enum_iter+0xcc>
     f8c:	sub	w0, w0, #0x1
     f90:	add	x22, x19, #0x8
     f94:	add	x22, x22, w0, uxtw #3
     f98:	b	fa4 <ctf_enum_iter+0x13c>
     f9c:	cmp	x19, x22
     fa0:	b.eq	f34 <ctf_enum_iter+0xcc>  // b.none
     fa4:	ldr	w1, [x19]
     fa8:	add	x19, x19, #0x8
     fac:	ldr	x0, [sp, #72]
     fb0:	bl	0 <ctf_strptr>
     fb4:	ldur	w1, [x19, #-4]
     fb8:	mov	x2, x21
     fbc:	blr	x20
     fc0:	cbz	w0, f9c <ctf_enum_iter+0x134>
     fc4:	b	f20 <ctf_enum_iter+0xb8>
     fc8:	mov	w0, #0xffffffff            	// #-1
     fcc:	b	f20 <ctf_enum_iter+0xb8>

0000000000000fd0 <ctf_type_kind>:
     fd0:	stp	x29, x30, [sp, #-32]!
     fd4:	mov	x29, sp
     fd8:	stp	x19, x20, [sp, #16]
     fdc:	mov	x19, x0
     fe0:	mov	x20, x1
     fe4:	bl	ce0 <ctf_type_kind_unsliced>
     fe8:	tbnz	w0, #31, 1028 <ctf_type_kind+0x58>
     fec:	cmp	w0, #0xe
     ff0:	b.eq	1000 <ctf_type_kind+0x30>  // b.none
     ff4:	ldp	x19, x20, [sp, #16]
     ff8:	ldp	x29, x30, [sp], #32
     ffc:	ret
    1000:	mov	x1, x20
    1004:	mov	x0, x19
    1008:	bl	d20 <ctf_type_reference>
    100c:	mov	x1, x0
    1010:	cmn	x0, #0x1
    1014:	b.eq	1028 <ctf_type_kind+0x58>  // b.none
    1018:	mov	x0, x19
    101c:	ldp	x19, x20, [sp, #16]
    1020:	ldp	x29, x30, [sp], #32
    1024:	b	ce0 <ctf_type_kind_unsliced>
    1028:	mov	w0, #0xffffffff            	// #-1
    102c:	b	ff4 <ctf_type_kind+0x24>

0000000000001030 <ctf_type_pointer>:
    1030:	stp	x29, x30, [sp, #-48]!
    1034:	mov	x29, sp
    1038:	stp	x19, x20, [sp, #16]
    103c:	mov	x20, x0
    1040:	mov	x19, x1
    1044:	str	x0, [sp, #40]
    1048:	add	x0, sp, #0x28
    104c:	bl	0 <ctf_lookup_by_id>
    1050:	cbz	x0, 110c <ctf_type_pointer+0xdc>
    1054:	ldr	x2, [sp, #40]
    1058:	ldr	w1, [x2, #544]
    105c:	ldr	x0, [x2, #448]
    1060:	and	w3, w1, w19
    1064:	ldr	w3, [x0, x3, lsl #2]
    1068:	mov	w0, w3
    106c:	cbz	w3, 1090 <ctf_type_pointer+0x60>
    1070:	ldr	w2, [x2, #552]
    1074:	add	w1, w1, #0x1
    1078:	orr	w1, w1, w3
    107c:	ldp	x19, x20, [sp, #16]
    1080:	tst	x2, #0x1
    1084:	csel	x0, x1, x0, ne  // ne = any
    1088:	ldp	x29, x30, [sp], #48
    108c:	ret
    1090:	mov	x1, x19
    1094:	mov	x0, x2
    1098:	bl	2d8 <ctf_type_resolve>
    109c:	mov	x19, x0
    10a0:	cmn	x0, #0x1
    10a4:	b.eq	10f4 <ctf_type_pointer+0xc4>  // b.none
    10a8:	add	x0, sp, #0x28
    10ac:	mov	x1, x19
    10b0:	bl	0 <ctf_lookup_by_id>
    10b4:	cbz	x0, 10f4 <ctf_type_pointer+0xc4>
    10b8:	ldr	x3, [sp, #40]
    10bc:	ldr	w1, [x3, #544]
    10c0:	ldr	x0, [x3, #448]
    10c4:	and	w19, w1, w19
    10c8:	ldr	w2, [x0, x19, lsl #2]
    10cc:	mov	w0, w2
    10d0:	cbz	w2, 10f4 <ctf_type_pointer+0xc4>
    10d4:	ldr	w3, [x3, #552]
    10d8:	add	w1, w1, #0x1
    10dc:	orr	w1, w1, w2
    10e0:	ldp	x19, x20, [sp, #16]
    10e4:	tst	x3, #0x1
    10e8:	csel	x0, x1, x0, ne  // ne = any
    10ec:	ldp	x29, x30, [sp], #48
    10f0:	ret
    10f4:	mov	x0, x20
    10f8:	mov	w1, #0x402                 	// #1026
    10fc:	bl	0 <ctf_set_errno>
    1100:	ldp	x19, x20, [sp, #16]
    1104:	ldp	x29, x30, [sp], #48
    1108:	ret
    110c:	mov	x0, #0xffffffffffffffff    	// #-1
    1110:	ldp	x19, x20, [sp, #16]
    1114:	ldp	x29, x30, [sp], #48
    1118:	ret
    111c:	nop

0000000000001120 <ctf_type_encoding>:
    1120:	stp	x29, x30, [sp, #-96]!
    1124:	mov	x29, sp
    1128:	stp	x19, x20, [sp, #16]
    112c:	mov	x20, x1
    1130:	stp	x21, x22, [sp, #32]
    1134:	mov	x22, x0
    1138:	mov	x21, x2
    113c:	str	x0, [sp, #56]
    1140:	add	x0, sp, #0x38
    1144:	bl	0 <ctf_lookup_by_id>
    1148:	cbz	x0, 12a0 <ctf_type_encoding+0x180>
    114c:	mov	x1, x20
    1150:	mov	x19, x0
    1154:	mov	x0, x22
    1158:	bl	0 <ctf_dynamic_type>
    115c:	mov	x20, x0
    1160:	cbz	x0, 1204 <ctf_type_encoding+0xe4>
    1164:	ldr	x1, [sp, #56]
    1168:	ldr	w0, [x19, #4]
    116c:	ldr	x1, [x1]
    1170:	ldr	x1, [x1]
    1174:	blr	x1
    1178:	cmp	w0, #0x2
    117c:	b.ls	11c0 <ctf_type_encoding+0xa0>  // b.plast
    1180:	cmp	w0, #0xe
    1184:	b.ne	11c4 <ctf_type_encoding+0xa4>  // b.any
    1188:	ldr	w1, [x20, #48]
    118c:	add	x2, sp, #0x50
    1190:	ldr	x0, [sp, #56]
    1194:	bl	1120 <ctf_type_encoding>
    1198:	ldrh	w2, [x20, #52]
    119c:	ldrh	w1, [x20, #54]
    11a0:	ldr	w3, [sp, #80]
    11a4:	mov	w0, #0x0                   	// #0
    11a8:	stp	w3, w2, [x21]
    11ac:	str	w1, [x21, #8]
    11b0:	ldp	x19, x20, [sp, #16]
    11b4:	ldp	x21, x22, [sp, #32]
    11b8:	ldp	x29, x30, [sp], #96
    11bc:	ret
    11c0:	cbnz	w0, 11e0 <ctf_type_encoding+0xc0>
    11c4:	mov	x0, x22
    11c8:	mov	w1, #0x3fe                 	// #1022
    11cc:	bl	0 <ctf_set_errno>
    11d0:	ldp	x19, x20, [sp, #16]
    11d4:	ldp	x21, x22, [sp, #32]
    11d8:	ldp	x29, x30, [sp], #96
    11dc:	ret
    11e0:	ldr	x0, [x20, #48]
    11e4:	str	x0, [x21]
    11e8:	mov	w0, #0x0                   	// #0
    11ec:	ldr	w1, [x20, #56]
    11f0:	str	w1, [x21, #8]
    11f4:	ldp	x19, x20, [sp, #16]
    11f8:	ldp	x21, x22, [sp, #32]
    11fc:	ldp	x29, x30, [sp], #96
    1200:	ret
    1204:	ldr	x0, [sp, #56]
    1208:	add	x3, sp, #0x48
    120c:	mov	x1, x19
    1210:	mov	x2, #0x0                   	// #0
    1214:	ldr	x4, [x0]
    1218:	ldr	x4, [x4, #24]
    121c:	blr	x4
    1220:	ldr	x1, [sp, #56]
    1224:	ldr	w0, [x19, #4]
    1228:	ldr	x1, [x1]
    122c:	ldr	x1, [x1]
    1230:	blr	x1
    1234:	cmp	w0, #0x2
    1238:	b.eq	124c <ctf_type_encoding+0x12c>  // b.none
    123c:	cmp	w0, #0xe
    1240:	b.eq	127c <ctf_type_encoding+0x15c>  // b.none
    1244:	cmp	w0, #0x1
    1248:	b.ne	11c4 <ctf_type_encoding+0xa4>  // b.any
    124c:	ldr	x1, [sp, #72]
    1250:	mov	w0, #0x0                   	// #0
    1254:	ldr	w1, [x19, x1]
    1258:	ldp	x19, x20, [sp, #16]
    125c:	and	w2, w1, #0xffff
    1260:	str	w2, [x21, #8]
    1264:	lsr	w2, w1, #24
    1268:	ubfx	x1, x1, #16, #8
    126c:	stp	w2, w1, [x21]
    1270:	ldp	x21, x22, [sp, #32]
    1274:	ldp	x29, x30, [sp], #96
    1278:	ret
    127c:	ldr	x1, [sp, #72]
    1280:	add	x2, sp, #0x50
    1284:	ldr	x0, [sp, #56]
    1288:	add	x20, x19, x1
    128c:	ldr	w1, [x19, x1]
    1290:	bl	1120 <ctf_type_encoding>
    1294:	ldrh	w2, [x20, #4]
    1298:	ldrh	w1, [x20, #6]
    129c:	b	11a0 <ctf_type_encoding+0x80>
    12a0:	mov	w0, #0xffffffff            	// #-1
    12a4:	b	11b0 <ctf_type_encoding+0x90>

00000000000012a8 <ctf_type_cmp>:
    12a8:	cmp	x1, x3
    12ac:	mov	x5, x0
    12b0:	cset	w4, hi  // hi = pmore
    12b4:	mov	w0, #0xffffffff            	// #-1
    12b8:	csel	w0, w4, w0, cs  // cs = hs, nlast
    12bc:	cmp	x5, x2
    12c0:	b.eq	1304 <ctf_type_cmp+0x5c>  // b.none
    12c4:	ldr	w4, [x5, #544]
    12c8:	cmp	x4, x1
    12cc:	b.cc	12dc <ctf_type_cmp+0x34>  // b.lo, b.ul, b.last
    12d0:	ldr	x1, [x5, #512]
    12d4:	cmp	x1, #0x0
    12d8:	csel	x5, x5, x1, eq  // eq = none
    12dc:	ldr	w1, [x2, #544]
    12e0:	cmp	x1, x3
    12e4:	b.cc	12f4 <ctf_type_cmp+0x4c>  // b.lo, b.ul, b.last
    12e8:	ldr	x1, [x2, #512]
    12ec:	cmp	x1, #0x0
    12f0:	csel	x2, x2, x1, eq  // eq = none
    12f4:	cmp	x5, x2
    12f8:	mov	w3, #0xffffffff            	// #-1
    12fc:	csinc	w1, w0, wzr, ls  // ls = plast
    1300:	csel	w0, w1, w3, cs  // cs = hs, nlast
    1304:	ret

0000000000001308 <ctf_member_info>:
    1308:	stp	x29, x30, [sp, #-96]!
    130c:	mov	x29, sp
    1310:	stp	x19, x20, [sp, #16]
    1314:	mov	x20, x2
    1318:	stp	x21, x22, [sp, #32]
    131c:	mov	x22, x3
    1320:	mov	x21, x0
    1324:	str	x0, [sp, #72]
    1328:	bl	2d8 <ctf_type_resolve>
    132c:	cmn	x0, #0x1
    1330:	b.eq	14f0 <ctf_member_info+0x1e8>  // b.none
    1334:	mov	x1, x0
    1338:	str	x23, [sp, #48]
    133c:	mov	x23, x0
    1340:	add	x0, sp, #0x48
    1344:	bl	0 <ctf_lookup_by_id>
    1348:	mov	x19, x0
    134c:	cbz	x0, 14ec <ctf_member_info+0x1e4>
    1350:	mov	x1, x0
    1354:	add	x3, sp, #0x58
    1358:	ldr	x0, [sp, #72]
    135c:	add	x2, sp, #0x50
    1360:	ldr	x4, [x0]
    1364:	ldr	x4, [x4, #24]
    1368:	blr	x4
    136c:	ldr	x1, [sp, #72]
    1370:	ldr	w0, [x19, #4]
    1374:	ldr	x1, [x1]
    1378:	ldr	x1, [x1]
    137c:	blr	x1
    1380:	sub	w0, w0, #0x6
    1384:	cmp	w0, #0x1
    1388:	b.hi	13e4 <ctf_member_info+0xdc>  // b.pmore
    138c:	ldr	x0, [sp, #72]
    1390:	mov	x1, x23
    1394:	bl	0 <ctf_dynamic_type>
    1398:	cbz	x0, 1424 <ctf_member_info+0x11c>
    139c:	ldr	x19, [x0, #56]
    13a0:	cbnz	x19, 13b0 <ctf_member_info+0xa8>
    13a4:	b	1404 <ctf_member_info+0xfc>
    13a8:	ldr	x19, [x19, #8]
    13ac:	cbz	x19, 1404 <ctf_member_info+0xfc>
    13b0:	ldr	x0, [x19, #16]
    13b4:	mov	x1, x20
    13b8:	bl	0 <strcmp>
    13bc:	cbnz	w0, 13a8 <ctf_member_info+0xa0>
    13c0:	ldr	x1, [x19, #24]
    13c4:	ldr	x23, [sp, #48]
    13c8:	str	x1, [x22]
    13cc:	ldr	x1, [x19, #32]
    13d0:	str	x1, [x22, #8]
    13d4:	ldp	x19, x20, [sp, #16]
    13d8:	ldp	x21, x22, [sp, #32]
    13dc:	ldp	x29, x30, [sp], #96
    13e0:	ret
    13e4:	mov	x0, x21
    13e8:	mov	w1, #0x3fb                 	// #1019
    13ec:	bl	0 <ctf_set_errno>
    13f0:	ldr	x23, [sp, #48]
    13f4:	ldp	x19, x20, [sp, #16]
    13f8:	ldp	x21, x22, [sp, #32]
    13fc:	ldp	x29, x30, [sp], #96
    1400:	ret
    1404:	mov	x0, x21
    1408:	mov	w1, #0x40c                 	// #1036
    140c:	bl	0 <ctf_set_errno>
    1410:	ldp	x19, x20, [sp, #16]
    1414:	ldp	x21, x22, [sp, #32]
    1418:	ldr	x23, [sp, #48]
    141c:	ldp	x29, x30, [sp], #96
    1420:	ret
    1424:	ldp	x1, x2, [sp, #72]
    1428:	mov	x0, #0x1fffffff            	// #536870911
    142c:	ldr	x1, [x1]
    1430:	cmp	x2, x0
    1434:	ldr	x2, [sp, #88]
    1438:	ldr	w0, [x19, #4]
    143c:	add	x19, x19, x2
    1440:	ldr	x1, [x1, #16]
    1444:	b.gt	1498 <ctf_member_info+0x190>
    1448:	blr	x1
    144c:	cbz	w0, 1404 <ctf_member_info+0xfc>
    1450:	sub	w0, w0, #0x1
    1454:	add	x23, x19, #0xc
    1458:	mov	w1, #0xc                   	// #12
    145c:	umaddl	x23, w0, w1, x23
    1460:	b	1470 <ctf_member_info+0x168>
    1464:	add	x19, x19, #0xc
    1468:	cmp	x23, x19
    146c:	b.eq	1404 <ctf_member_info+0xfc>  // b.none
    1470:	ldr	w1, [x19]
    1474:	ldr	x0, [sp, #72]
    1478:	bl	0 <ctf_strptr>
    147c:	mov	x1, x20
    1480:	bl	0 <strcmp>
    1484:	cbnz	w0, 1464 <ctf_member_info+0x15c>
    1488:	ldp	w1, w2, [x19, #4]
    148c:	ldr	x23, [sp, #48]
    1490:	stp	x2, x1, [x22]
    1494:	b	13f4 <ctf_member_info+0xec>
    1498:	blr	x1
    149c:	cbz	w0, 1404 <ctf_member_info+0xfc>
    14a0:	sub	w0, w0, #0x1
    14a4:	add	x23, x19, #0x10
    14a8:	add	x23, x23, w0, uxtw #4
    14ac:	b	14bc <ctf_member_info+0x1b4>
    14b0:	add	x19, x19, #0x10
    14b4:	cmp	x23, x19
    14b8:	b.eq	1404 <ctf_member_info+0xfc>  // b.none
    14bc:	ldr	w1, [x19]
    14c0:	ldr	x0, [sp, #72]
    14c4:	bl	0 <ctf_strptr>
    14c8:	mov	x1, x20
    14cc:	bl	0 <strcmp>
    14d0:	cbnz	w0, 14b0 <ctf_member_info+0x1a8>
    14d4:	ldp	w1, w3, [x19, #4]
    14d8:	ldr	w2, [x19, #12]
    14dc:	ldr	x23, [sp, #48]
    14e0:	orr	x1, x2, x1, lsl #32
    14e4:	stp	x3, x1, [x22]
    14e8:	b	13f4 <ctf_member_info+0xec>
    14ec:	ldr	x23, [sp, #48]
    14f0:	mov	w0, #0xffffffff            	// #-1
    14f4:	b	13f4 <ctf_member_info+0xec>

00000000000014f8 <ctf_array_info>:
    14f8:	stp	x29, x30, [sp, #-80]!
    14fc:	mov	x29, sp
    1500:	stp	x19, x20, [sp, #16]
    1504:	mov	x20, x2
    1508:	stp	x21, x22, [sp, #32]
    150c:	mov	x21, x0
    1510:	mov	x22, x1
    1514:	str	x0, [sp, #56]
    1518:	add	x0, sp, #0x38
    151c:	bl	0 <ctf_lookup_by_id>
    1520:	cbz	x0, 15e4 <ctf_array_info+0xec>
    1524:	ldr	x1, [sp, #56]
    1528:	mov	x19, x0
    152c:	ldr	w0, [x0, #4]
    1530:	ldr	x1, [x1]
    1534:	ldr	x1, [x1]
    1538:	blr	x1
    153c:	cmp	w0, #0x4
    1540:	b.ne	157c <ctf_array_info+0x84>  // b.any
    1544:	mov	x1, x22
    1548:	mov	x0, x21
    154c:	bl	0 <ctf_dynamic_type>
    1550:	mov	x1, x0
    1554:	cbz	x0, 1598 <ctf_array_info+0xa0>
    1558:	ldp	x2, x3, [x0, #48]
    155c:	stp	x2, x3, [x20]
    1560:	mov	w0, #0x0                   	// #0
    1564:	ldr	x1, [x1, #64]
    1568:	str	x1, [x20, #16]
    156c:	ldp	x19, x20, [sp, #16]
    1570:	ldp	x21, x22, [sp, #32]
    1574:	ldp	x29, x30, [sp], #80
    1578:	ret
    157c:	mov	x0, x21
    1580:	mov	w1, #0x3ff                 	// #1023
    1584:	bl	0 <ctf_set_errno>
    1588:	ldp	x19, x20, [sp, #16]
    158c:	ldp	x21, x22, [sp, #32]
    1590:	ldp	x29, x30, [sp], #80
    1594:	ret
    1598:	ldr	x0, [sp, #56]
    159c:	add	x3, sp, #0x48
    15a0:	mov	x1, x19
    15a4:	mov	x2, #0x0                   	// #0
    15a8:	ldr	x4, [x0]
    15ac:	ldr	x4, [x4, #24]
    15b0:	blr	x4
    15b4:	ldr	x2, [sp, #72]
    15b8:	mov	w0, #0x0                   	// #0
    15bc:	ldp	x21, x22, [sp, #32]
    15c0:	add	x1, x19, x2
    15c4:	ldr	w2, [x19, x2]
    15c8:	str	x2, [x20]
    15cc:	ldp	w2, w1, [x1, #4]
    15d0:	str	x2, [x20, #8]
    15d4:	str	w1, [x20, #16]
    15d8:	ldp	x19, x20, [sp, #16]
    15dc:	ldp	x29, x30, [sp], #80
    15e0:	ret
    15e4:	mov	w0, #0xffffffff            	// #-1
    15e8:	b	156c <ctf_array_info+0x74>
    15ec:	nop

00000000000015f0 <ctf_type_size>:
    15f0:	stp	x29, x30, [sp, #-80]!
    15f4:	mov	x29, sp
    15f8:	str	x0, [sp, #40]
    15fc:	bl	2d8 <ctf_type_resolve>
    1600:	cmn	x0, #0x1
    1604:	b.eq	172c <ctf_type_size+0x13c>  // b.none
    1608:	mov	x1, x0
    160c:	stp	x19, x20, [sp, #16]
    1610:	mov	x20, x0
    1614:	add	x0, sp, #0x28
    1618:	bl	0 <ctf_lookup_by_id>
    161c:	mov	x19, x0
    1620:	cbz	x0, 1728 <ctf_type_size+0x138>
    1624:	ldr	x1, [sp, #40]
    1628:	ldr	w0, [x0, #4]
    162c:	ldr	x1, [x1]
    1630:	ldr	x1, [x1]
    1634:	blr	x1
    1638:	cmp	w0, #0x5
    163c:	b.eq	1700 <ctf_type_size+0x110>  // b.none
    1640:	b.hi	1684 <ctf_type_size+0x94>  // b.pmore
    1644:	cmp	w0, #0x3
    1648:	b.eq	1710 <ctf_type_size+0x120>  // b.none
    164c:	cmp	w0, #0x4
    1650:	b.ne	16d8 <ctf_type_size+0xe8>  // b.any
    1654:	ldr	x0, [sp, #40]
    1658:	mov	x1, x19
    165c:	mov	x3, #0x0                   	// #0
    1660:	mov	x2, #0x0                   	// #0
    1664:	ldr	x4, [x0]
    1668:	ldr	x4, [x4, #24]
    166c:	blr	x4
    1670:	cmp	x0, #0x0
    1674:	b.le	16a4 <ctf_type_size+0xb4>
    1678:	ldp	x19, x20, [sp, #16]
    167c:	ldp	x29, x30, [sp], #80
    1680:	ret
    1684:	cmp	w0, #0x8
    1688:	b.ne	16d8 <ctf_type_size+0xe8>  // b.any
    168c:	ldr	x0, [sp, #40]
    1690:	ldp	x19, x20, [sp, #16]
    1694:	ldr	x0, [x0, #488]
    1698:	ldr	x0, [x0, #40]
    169c:	ldp	x29, x30, [sp], #80
    16a0:	ret
    16a4:	ldr	x0, [sp, #40]
    16a8:	mov	x1, x20
    16ac:	add	x2, sp, #0x38
    16b0:	bl	14f8 <ctf_array_info>
    16b4:	tbnz	w0, #31, 1728 <ctf_type_size+0x138>
    16b8:	ldr	x0, [sp, #40]
    16bc:	ldr	x1, [sp, #56]
    16c0:	bl	15f0 <ctf_type_size>
    16c4:	tbnz	x0, #63, 1728 <ctf_type_size+0x138>
    16c8:	ldr	w1, [sp, #72]
    16cc:	ldp	x19, x20, [sp, #16]
    16d0:	mul	x0, x1, x0
    16d4:	b	167c <ctf_type_size+0x8c>
    16d8:	ldr	x0, [sp, #40]
    16dc:	mov	x1, x19
    16e0:	mov	x3, #0x0                   	// #0
    16e4:	mov	x2, #0x0                   	// #0
    16e8:	ldr	x4, [x0]
    16ec:	ldr	x4, [x4, #24]
    16f0:	blr	x4
    16f4:	ldp	x19, x20, [sp, #16]
    16f8:	ldp	x29, x30, [sp], #80
    16fc:	ret
    1700:	mov	x0, #0x0                   	// #0
    1704:	ldp	x19, x20, [sp, #16]
    1708:	ldp	x29, x30, [sp], #80
    170c:	ret
    1710:	ldr	x0, [sp, #40]
    1714:	ldp	x19, x20, [sp, #16]
    1718:	ldr	x0, [x0, #488]
    171c:	ldr	x0, [x0, #16]
    1720:	ldp	x29, x30, [sp], #80
    1724:	ret
    1728:	ldp	x19, x20, [sp, #16]
    172c:	mov	x0, #0xffffffffffffffff    	// #-1
    1730:	b	167c <ctf_type_size+0x8c>
    1734:	nop

0000000000001738 <ctf_type_align>:
    1738:	stp	x29, x30, [sp, #-96]!
    173c:	mov	x29, sp
    1740:	stp	x21, x22, [sp, #32]
    1744:	mov	x22, x0
    1748:	str	x0, [sp, #56]
    174c:	bl	2d8 <ctf_type_resolve>
    1750:	cmn	x0, #0x1
    1754:	b.eq	19a4 <ctf_type_align+0x26c>  // b.none
    1758:	mov	x1, x0
    175c:	mov	x21, x0
    1760:	add	x0, sp, #0x38
    1764:	stp	x19, x20, [sp, #16]
    1768:	bl	0 <ctf_lookup_by_id>
    176c:	mov	x20, x0
    1770:	cbz	x0, 19a0 <ctf_type_align+0x268>
    1774:	ldr	x1, [sp, #56]
    1778:	ldr	w0, [x0, #4]
    177c:	ldr	x1, [x1]
    1780:	ldr	x1, [x1]
    1784:	blr	x1
    1788:	mov	w19, w0
    178c:	cmp	w0, #0x7
    1790:	b.hi	17cc <ctf_type_align+0x94>  // b.pmore
    1794:	cmp	w0, #0x5
    1798:	b.hi	17f0 <ctf_type_align+0xb8>  // b.pmore
    179c:	cmp	w0, #0x4
    17a0:	b.eq	1844 <ctf_type_align+0x10c>  // b.none
    17a4:	sub	w19, w0, #0x3
    17a8:	tst	w19, #0xfffffffd
    17ac:	b.ne	187c <ctf_type_align+0x144>  // b.any
    17b0:	ldr	x0, [sp, #56]
    17b4:	ldp	x19, x20, [sp, #16]
    17b8:	ldr	x0, [x0, #488]
    17bc:	ldr	x0, [x0, #16]
    17c0:	ldp	x21, x22, [sp, #32]
    17c4:	ldp	x29, x30, [sp], #96
    17c8:	ret
    17cc:	cmp	w0, #0x8
    17d0:	b.ne	187c <ctf_type_align+0x144>  // b.any
    17d4:	ldr	x0, [sp, #56]
    17d8:	ldp	x19, x20, [sp, #16]
    17dc:	ldr	x0, [x0, #488]
    17e0:	ldp	x21, x22, [sp, #32]
    17e4:	ldr	x0, [x0, #40]
    17e8:	ldp	x29, x30, [sp], #96
    17ec:	ret
    17f0:	mov	x1, x21
    17f4:	mov	x0, x22
    17f8:	bl	0 <ctf_dynamic_type>
    17fc:	cbz	x0, 18b0 <ctf_type_align+0x178>
    1800:	ldr	x21, [x0, #56]
    1804:	cbz	x21, 1994 <ctf_type_align+0x25c>
    1808:	mov	x20, #0x0                   	// #0
    180c:	ldr	x1, [x21, #24]
    1810:	ldr	x0, [sp, #56]
    1814:	bl	1738 <ctf_type_align>
    1818:	cmp	x20, x0
    181c:	csel	x20, x20, x0, cs  // cs = hs, nlast
    1820:	cmp	w19, #0x6
    1824:	b.eq	1830 <ctf_type_align+0xf8>  // b.none
    1828:	ldr	x21, [x21, #8]
    182c:	cbnz	x21, 180c <ctf_type_align+0xd4>
    1830:	mov	x0, x20
    1834:	ldp	x19, x20, [sp, #16]
    1838:	ldp	x21, x22, [sp, #32]
    183c:	ldp	x29, x30, [sp], #96
    1840:	ret
    1844:	ldr	x0, [sp, #56]
    1848:	mov	x1, x21
    184c:	add	x2, sp, #0x48
    1850:	bl	14f8 <ctf_array_info>
    1854:	mov	w1, w0
    1858:	mov	x0, #0xffffffffffffffff    	// #-1
    185c:	tbnz	w1, #31, 18a8 <ctf_type_align+0x170>
    1860:	ldr	x0, [sp, #56]
    1864:	ldr	x1, [sp, #72]
    1868:	bl	1738 <ctf_type_align>
    186c:	ldp	x19, x20, [sp, #16]
    1870:	ldp	x21, x22, [sp, #32]
    1874:	ldp	x29, x30, [sp], #96
    1878:	ret
    187c:	ldr	x0, [sp, #56]
    1880:	mov	x1, x20
    1884:	mov	x3, #0x0                   	// #0
    1888:	mov	x2, #0x0                   	// #0
    188c:	ldr	x4, [x0]
    1890:	ldr	x4, [x4, #24]
    1894:	blr	x4
    1898:	ldp	x19, x20, [sp, #16]
    189c:	ldp	x21, x22, [sp, #32]
    18a0:	ldp	x29, x30, [sp], #96
    18a4:	ret
    18a8:	ldp	x19, x20, [sp, #16]
    18ac:	b	17c0 <ctf_type_align+0x88>
    18b0:	ldr	x1, [sp, #56]
    18b4:	ldr	w0, [x20, #4]
    18b8:	ldr	x1, [x1]
    18bc:	ldr	x1, [x1, #16]
    18c0:	blr	x1
    18c4:	mov	w21, w0
    18c8:	ldr	x4, [sp, #56]
    18cc:	mov	x1, x20
    18d0:	add	x3, sp, #0x48
    18d4:	add	x2, sp, #0x40
    18d8:	mov	x0, x4
    18dc:	ldr	x4, [x4]
    18e0:	ldr	x4, [x4, #24]
    18e4:	blr	x4
    18e8:	ldr	x0, [sp, #72]
    18ec:	cmp	w19, #0x6
    18f0:	add	x20, x20, x0
    18f4:	b.eq	1988 <ctf_type_align+0x250>  // b.none
    18f8:	ldr	x1, [sp, #64]
    18fc:	mov	x0, #0x1fffffff            	// #536870911
    1900:	cmp	x1, x0
    1904:	b.gt	1950 <ctf_type_align+0x218>
    1908:	mov	x0, #0x0                   	// #0
    190c:	cbz	w21, 18a8 <ctf_type_align+0x170>
    1910:	sub	w21, w21, #0x1
    1914:	mov	x19, #0x0                   	// #0
    1918:	add	x21, x21, #0x1
    191c:	add	x21, x21, x21, lsl #1
    1920:	add	x21, x20, x21, lsl #2
    1924:	ldr	w1, [x20, #8]
    1928:	add	x20, x20, #0xc
    192c:	ldr	x0, [sp, #56]
    1930:	bl	1738 <ctf_type_align>
    1934:	cmp	x19, x0
    1938:	csel	x19, x19, x0, cs  // cs = hs, nlast
    193c:	cmp	x21, x20
    1940:	b.ne	1924 <ctf_type_align+0x1ec>  // b.any
    1944:	mov	x0, x19
    1948:	ldp	x19, x20, [sp, #16]
    194c:	b	17c0 <ctf_type_align+0x88>
    1950:	cbz	w21, 1994 <ctf_type_align+0x25c>
    1954:	sub	w21, w21, #0x1
    1958:	mov	x19, #0x0                   	// #0
    195c:	add	x21, x21, #0x1
    1960:	add	x21, x20, x21, lsl #4
    1964:	ldr	w1, [x20, #8]
    1968:	add	x20, x20, #0x10
    196c:	ldr	x0, [sp, #56]
    1970:	bl	1738 <ctf_type_align>
    1974:	cmp	x19, x0
    1978:	csel	x19, x19, x0, cs  // cs = hs, nlast
    197c:	cmp	x21, x20
    1980:	b.ne	1964 <ctf_type_align+0x22c>  // b.any
    1984:	b	1944 <ctf_type_align+0x20c>
    1988:	cmp	w21, #0x0
    198c:	cset	w21, ne  // ne = any
    1990:	b	18f8 <ctf_type_align+0x1c0>
    1994:	mov	x0, #0x0                   	// #0
    1998:	ldp	x19, x20, [sp, #16]
    199c:	b	17c0 <ctf_type_align+0x88>
    19a0:	ldp	x19, x20, [sp, #16]
    19a4:	mov	x0, #0xffffffffffffffff    	// #-1
    19a8:	b	17c0 <ctf_type_align+0x88>
    19ac:	nop

00000000000019b0 <ctf_type_compat>:
    19b0:	stp	x29, x30, [sp, #-144]!
    19b4:	cmp	x1, x3
    19b8:	mov	x29, sp
    19bc:	stp	x19, x20, [sp, #16]
    19c0:	mov	x20, x3
    19c4:	str	x25, [sp, #64]
    19c8:	stp	x2, x0, [sp, #80]
    19cc:	b.cc	1b78 <ctf_type_compat+0x1c8>  // b.lo, b.ul, b.last
    19d0:	cset	w5, hi  // hi = pmore
    19d4:	cmp	x0, x2
    19d8:	b.eq	1a04 <ctf_type_compat+0x54>  // b.none
    19dc:	ldr	w3, [x0, #544]
    19e0:	ldr	w4, [x2, #544]
    19e4:	cmp	x1, x3
    19e8:	b.hi	1af0 <ctf_type_compat+0x140>  // b.pmore
    19ec:	ldr	x3, [x0, #512]
    19f0:	cbz	x3, 1af0 <ctf_type_compat+0x140>
    19f4:	cmp	x20, x4
    19f8:	b.ls	1afc <ctf_type_compat+0x14c>  // b.plast
    19fc:	cmp	x2, x3
    1a00:	b.ne	1a08 <ctf_type_compat+0x58>  // b.any
    1a04:	cbz	w5, 1b60 <ctf_type_compat+0x1b0>
    1a08:	stp	x21, x22, [sp, #32]
    1a0c:	mov	w25, #0x0                   	// #0
    1a10:	stp	x23, x24, [sp, #48]
    1a14:	bl	2d8 <ctf_type_resolve>
    1a18:	mov	x1, x0
    1a1c:	mov	x21, x0
    1a20:	ldr	x0, [sp, #88]
    1a24:	bl	fd0 <ctf_type_kind>
    1a28:	mov	w19, w0
    1a2c:	ldr	x0, [sp, #80]
    1a30:	mov	x1, x20
    1a34:	bl	2d8 <ctf_type_resolve>
    1a38:	mov	x1, x0
    1a3c:	mov	x22, x0
    1a40:	ldr	x0, [sp, #80]
    1a44:	bl	fd0 <ctf_type_kind>
    1a48:	mov	w20, w0
    1a4c:	mov	x1, x21
    1a50:	add	x0, sp, #0x58
    1a54:	bl	0 <ctf_lookup_by_id>
    1a58:	mov	x24, x0
    1a5c:	mov	x1, x22
    1a60:	add	x0, sp, #0x50
    1a64:	bl	0 <ctf_lookup_by_id>
    1a68:	mov	x23, x0
    1a6c:	cmp	x24, #0x0
    1a70:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    1a74:	b.ne	1b18 <ctf_type_compat+0x168>  // b.any
    1a78:	cmp	w19, #0x8
    1a7c:	ccmp	w20, #0x1, #0x0, eq  // eq = none
    1a80:	b.eq	1b58 <ctf_type_compat+0x1a8>  // b.none
    1a84:	cmp	w20, #0x8
    1a88:	ccmp	w19, #0x1, #0x0, eq  // eq = none
    1a8c:	b.eq	1b58 <ctf_type_compat+0x1a8>  // b.none
    1a90:	cmp	w19, w20
    1a94:	b.ne	1ad0 <ctf_type_compat+0x120>  // b.any
    1a98:	cmp	w19, #0x7
    1a9c:	b.gt	1b98 <ctf_type_compat+0x1e8>
    1aa0:	cmp	w19, #0x5
    1aa4:	b.gt	1ca0 <ctf_type_compat+0x2f0>
    1aa8:	cmp	w19, #0x3
    1aac:	b.eq	1d30 <ctf_type_compat+0x380>  // b.none
    1ab0:	b.le	1bc4 <ctf_type_compat+0x214>
    1ab4:	cmp	w19, #0x4
    1ab8:	b.ne	1ad0 <ctf_type_compat+0x120>  // b.any
    1abc:	ldr	x0, [sp, #88]
    1ac0:	mov	x1, x21
    1ac4:	add	x2, sp, #0x60
    1ac8:	bl	14f8 <ctf_array_info>
    1acc:	cbz	w0, 1c2c <ctf_type_compat+0x27c>
    1ad0:	mov	w25, #0x0                   	// #0
    1ad4:	mov	w0, w25
    1ad8:	ldp	x19, x20, [sp, #16]
    1adc:	ldp	x21, x22, [sp, #32]
    1ae0:	ldp	x23, x24, [sp, #48]
    1ae4:	ldr	x25, [sp, #64]
    1ae8:	ldp	x29, x30, [sp], #144
    1aec:	ret
    1af0:	cmp	x20, x4
    1af4:	b.hi	1a08 <ctf_type_compat+0x58>  // b.pmore
    1af8:	mov	x3, x0
    1afc:	ldr	x4, [x2, #512]
    1b00:	cmp	x4, #0x0
    1b04:	csel	x2, x2, x4, eq  // eq = none
    1b08:	cmp	x2, x3
    1b0c:	b.ne	1a08 <ctf_type_compat+0x58>  // b.any
    1b10:	cbnz	w5, 1a08 <ctf_type_compat+0x58>
    1b14:	b	1b60 <ctf_type_compat+0x1b0>
    1b18:	ldr	w1, [x24]
    1b1c:	ldr	x0, [sp, #88]
    1b20:	bl	0 <ctf_strptr>
    1b24:	mov	x24, x0
    1b28:	ldr	w1, [x23]
    1b2c:	ldr	x0, [sp, #80]
    1b30:	bl	0 <ctf_strptr>
    1b34:	mov	x1, x0
    1b38:	mov	x0, x24
    1b3c:	bl	0 <strcmp>
    1b40:	cmp	w0, #0x0
    1b44:	cset	w25, eq  // eq = none
    1b48:	cmp	w19, #0x8
    1b4c:	ccmp	w20, #0x1, #0x0, eq  // eq = none
    1b50:	b.ne	1a84 <ctf_type_compat+0xd4>  // b.any
    1b54:	nop
    1b58:	ldp	x21, x22, [sp, #32]
    1b5c:	ldp	x23, x24, [sp, #48]
    1b60:	mov	w25, #0x1                   	// #1
    1b64:	mov	w0, w25
    1b68:	ldp	x19, x20, [sp, #16]
    1b6c:	ldr	x25, [sp, #64]
    1b70:	ldp	x29, x30, [sp], #144
    1b74:	ret
    1b78:	cmp	x0, x2
    1b7c:	b.eq	1a08 <ctf_type_compat+0x58>  // b.none
    1b80:	ldr	w3, [x0, #544]
    1b84:	mov	w5, #0xffffffff            	// #-1
    1b88:	ldr	w4, [x2, #544]
    1b8c:	cmp	x1, x3
    1b90:	b.hi	1af0 <ctf_type_compat+0x140>  // b.pmore
    1b94:	b	19ec <ctf_type_compat+0x3c>
    1b98:	cmp	w19, #0x8
    1b9c:	b.eq	1cd4 <ctf_type_compat+0x324>  // b.none
    1ba0:	cmp	w19, #0x9
    1ba4:	csel	w25, w25, wzr, eq  // eq = none
    1ba8:	mov	w0, w25
    1bac:	ldp	x19, x20, [sp, #16]
    1bb0:	ldp	x21, x22, [sp, #32]
    1bb4:	ldp	x23, x24, [sp, #48]
    1bb8:	ldr	x25, [sp, #64]
    1bbc:	ldp	x29, x30, [sp], #144
    1bc0:	ret
    1bc4:	sub	w19, w19, #0x1
    1bc8:	cmp	w19, #0x1
    1bcc:	b.hi	1ad0 <ctf_type_compat+0x120>  // b.pmore
    1bd0:	ldr	x0, [sp, #88]
    1bd4:	mov	x1, x21
    1bd8:	add	x2, sp, #0x60
    1bdc:	str	xzr, [sp, #96]
    1be0:	str	wzr, [sp, #104]
    1be4:	str	xzr, [sp, #120]
    1be8:	str	wzr, [sp, #128]
    1bec:	bl	1120 <ctf_type_encoding>
    1bf0:	cbnz	w0, 1ad0 <ctf_type_compat+0x120>
    1bf4:	ldr	x0, [sp, #80]
    1bf8:	add	x2, sp, #0x78
    1bfc:	mov	x1, x22
    1c00:	bl	1120 <ctf_type_encoding>
    1c04:	cbnz	w0, 1ad0 <ctf_type_compat+0x120>
    1c08:	ldr	x1, [sp, #96]
    1c0c:	ldr	x0, [sp, #120]
    1c10:	cmp	x1, x0
    1c14:	b.eq	1c88 <ctf_type_compat+0x2d8>  // b.none
    1c18:	mov	w25, #0x1                   	// #1
    1c1c:	eor	w25, w25, #0x1
    1c20:	ldp	x21, x22, [sp, #32]
    1c24:	ldp	x23, x24, [sp, #48]
    1c28:	b	1b64 <ctf_type_compat+0x1b4>
    1c2c:	ldr	x0, [sp, #80]
    1c30:	mov	x1, x22
    1c34:	add	x2, sp, #0x78
    1c38:	bl	14f8 <ctf_array_info>
    1c3c:	cbnz	w0, 1ad0 <ctf_type_compat+0x120>
    1c40:	ldr	w1, [sp, #112]
    1c44:	ldr	w0, [sp, #136]
    1c48:	cmp	w1, w0
    1c4c:	b.ne	1ad0 <ctf_type_compat+0x120>  // b.any
    1c50:	ldp	x2, x0, [sp, #80]
    1c54:	ldr	x1, [sp, #96]
    1c58:	ldr	x3, [sp, #120]
    1c5c:	bl	19b0 <ctf_type_compat>
    1c60:	cbz	w0, 1ad0 <ctf_type_compat+0x120>
    1c64:	ldp	x2, x0, [sp, #80]
    1c68:	ldr	x1, [sp, #104]
    1c6c:	ldr	x3, [sp, #128]
    1c70:	bl	19b0 <ctf_type_compat>
    1c74:	cmp	w0, #0x0
    1c78:	cset	w25, ne  // ne = any
    1c7c:	ldp	x21, x22, [sp, #32]
    1c80:	ldp	x23, x24, [sp, #48]
    1c84:	b	1b64 <ctf_type_compat+0x1b4>
    1c88:	ldr	w1, [sp, #104]
    1c8c:	mov	w25, #0x0                   	// #0
    1c90:	ldr	w0, [sp, #128]
    1c94:	cmp	w1, w0
    1c98:	b.ne	1c18 <ctf_type_compat+0x268>  // b.any
    1c9c:	b	1c1c <ctf_type_compat+0x26c>
    1ca0:	cbz	w25, 1ad0 <ctf_type_compat+0x120>
    1ca4:	ldr	x0, [sp, #88]
    1ca8:	mov	x1, x21
    1cac:	bl	15f0 <ctf_type_size>
    1cb0:	mov	x19, x0
    1cb4:	ldr	x0, [sp, #80]
    1cb8:	mov	x1, x22
    1cbc:	bl	15f0 <ctf_type_size>
    1cc0:	cmp	x19, x0
    1cc4:	cset	w25, eq  // eq = none
    1cc8:	ldp	x21, x22, [sp, #32]
    1ccc:	ldp	x23, x24, [sp, #48]
    1cd0:	b	1b64 <ctf_type_compat+0x1b4>
    1cd4:	ldr	x0, [sp, #88]
    1cd8:	mov	x1, x21
    1cdc:	add	x2, sp, #0x60
    1ce0:	bl	1120 <ctf_type_encoding>
    1ce4:	mov	w19, w0
    1ce8:	ldr	x0, [sp, #80]
    1cec:	mov	x1, x22
    1cf0:	add	x2, sp, #0x78
    1cf4:	bl	1120 <ctf_type_encoding>
    1cf8:	cmp	w19, w0
    1cfc:	b.ne	1ad0 <ctf_type_compat+0x120>  // b.any
    1d00:	cbnz	w19, 1d24 <ctf_type_compat+0x374>
    1d04:	ldr	x1, [sp, #96]
    1d08:	ldr	x0, [sp, #120]
    1d0c:	cmp	x1, x0
    1d10:	b.ne	1ad0 <ctf_type_compat+0x120>  // b.any
    1d14:	ldr	w1, [sp, #104]
    1d18:	ldr	w0, [sp, #128]
    1d1c:	cmp	w1, w0
    1d20:	b.ne	1ad0 <ctf_type_compat+0x120>  // b.any
    1d24:	ldp	x21, x22, [sp, #32]
    1d28:	ldp	x23, x24, [sp, #48]
    1d2c:	b	1b64 <ctf_type_compat+0x1b4>
    1d30:	ldr	x20, [sp, #88]
    1d34:	mov	x1, x21
    1d38:	mov	x0, x20
    1d3c:	bl	d20 <ctf_type_reference>
    1d40:	ldr	x21, [sp, #80]
    1d44:	mov	x1, x22
    1d48:	mov	x19, x0
    1d4c:	mov	x0, x21
    1d50:	bl	d20 <ctf_type_reference>
    1d54:	mov	x2, x21
    1d58:	mov	x3, x0
    1d5c:	mov	x1, x19
    1d60:	mov	x0, x20
    1d64:	bl	19b0 <ctf_type_compat>
    1d68:	mov	w25, w0
    1d6c:	ldp	x21, x22, [sp, #32]
    1d70:	ldp	x23, x24, [sp, #48]
    1d74:	b	1b64 <ctf_type_compat+0x1b4>

0000000000001d78 <ctf_enum_name>:
    1d78:	stp	x29, x30, [sp, #-80]!
    1d7c:	mov	x29, sp
    1d80:	stp	x19, x20, [sp, #16]
    1d84:	mov	w20, w2
    1d88:	stp	x21, x22, [sp, #32]
    1d8c:	mov	x22, x0
    1d90:	str	x0, [sp, #56]
    1d94:	bl	de0 <ctf_type_resolve_unsliced>
    1d98:	cmn	x0, #0x1
    1d9c:	b.eq	1e40 <ctf_enum_name+0xc8>  // b.none
    1da0:	mov	x1, x0
    1da4:	mov	x21, x0
    1da8:	add	x0, sp, #0x38
    1dac:	bl	0 <ctf_lookup_by_id>
    1db0:	mov	x19, x0
    1db4:	cbz	x0, 1e40 <ctf_enum_name+0xc8>
    1db8:	ldr	x1, [sp, #56]
    1dbc:	ldr	w0, [x0, #4]
    1dc0:	ldr	x1, [x1]
    1dc4:	ldr	x1, [x1]
    1dc8:	blr	x1
    1dcc:	cmp	w0, #0x8
    1dd0:	b.ne	1eac <ctf_enum_name+0x134>  // b.any
    1dd4:	ldr	x0, [sp, #56]
    1dd8:	add	x3, sp, #0x48
    1ddc:	mov	x2, #0x0                   	// #0
    1de0:	mov	x1, x19
    1de4:	ldr	x4, [x0]
    1de8:	ldr	x4, [x4, #24]
    1dec:	blr	x4
    1df0:	mov	x1, x21
    1df4:	mov	x0, x22
    1df8:	bl	0 <ctf_dynamic_type>
    1dfc:	cbz	x0, 1e54 <ctf_enum_name+0xdc>
    1e00:	ldr	x1, [x0, #56]
    1e04:	cbnz	x1, 1e14 <ctf_enum_name+0x9c>
    1e08:	b	1e34 <ctf_enum_name+0xbc>
    1e0c:	ldr	x1, [x1, #8]
    1e10:	cbz	x1, 1e34 <ctf_enum_name+0xbc>
    1e14:	ldr	w2, [x1, #40]
    1e18:	cmp	w2, w20
    1e1c:	b.ne	1e0c <ctf_enum_name+0x94>  // b.any
    1e20:	ldp	x19, x20, [sp, #16]
    1e24:	ldr	x0, [x1, #16]
    1e28:	ldp	x21, x22, [sp, #32]
    1e2c:	ldp	x29, x30, [sp], #80
    1e30:	ret
    1e34:	mov	x0, x22
    1e38:	mov	w1, #0x40b                 	// #1035
    1e3c:	bl	0 <ctf_set_errno>
    1e40:	mov	x0, #0x0                   	// #0
    1e44:	ldp	x19, x20, [sp, #16]
    1e48:	ldp	x21, x22, [sp, #32]
    1e4c:	ldp	x29, x30, [sp], #80
    1e50:	ret
    1e54:	ldr	x1, [sp, #56]
    1e58:	ldr	w0, [x19, #4]
    1e5c:	ldr	x2, [sp, #72]
    1e60:	ldr	x1, [x1]
    1e64:	add	x19, x19, x2
    1e68:	ldr	x1, [x1, #16]
    1e6c:	blr	x1
    1e70:	cbz	w0, 1e34 <ctf_enum_name+0xbc>
    1e74:	sub	w0, w0, #0x1
    1e78:	add	x1, x19, #0x8
    1e7c:	add	x1, x1, w0, uxtw #3
    1e80:	b	1e90 <ctf_enum_name+0x118>
    1e84:	add	x19, x19, #0x8
    1e88:	cmp	x19, x1
    1e8c:	b.eq	1e34 <ctf_enum_name+0xbc>  // b.none
    1e90:	ldr	w0, [x19, #4]
    1e94:	cmp	w0, w20
    1e98:	b.ne	1e84 <ctf_enum_name+0x10c>  // b.any
    1e9c:	ldr	w1, [x19]
    1ea0:	ldr	x0, [sp, #56]
    1ea4:	bl	0 <ctf_strptr>
    1ea8:	b	1e44 <ctf_enum_name+0xcc>
    1eac:	mov	x0, x22
    1eb0:	mov	w1, #0x3fc                 	// #1020
    1eb4:	bl	0 <ctf_set_errno>
    1eb8:	mov	x0, #0x0                   	// #0
    1ebc:	ldp	x19, x20, [sp, #16]
    1ec0:	ldp	x21, x22, [sp, #32]
    1ec4:	ldp	x29, x30, [sp], #80
    1ec8:	ret
    1ecc:	nop

0000000000001ed0 <ctf_enum_value>:
    1ed0:	stp	x29, x30, [sp, #-96]!
    1ed4:	mov	x29, sp
    1ed8:	stp	x19, x20, [sp, #16]
    1edc:	mov	x20, x2
    1ee0:	stp	x21, x22, [sp, #32]
    1ee4:	mov	x22, x3
    1ee8:	mov	x21, x0
    1eec:	str	x0, [sp, #72]
    1ef0:	bl	de0 <ctf_type_resolve_unsliced>
    1ef4:	cmn	x0, #0x1
    1ef8:	b.eq	204c <ctf_enum_value+0x17c>  // b.none
    1efc:	mov	x1, x0
    1f00:	str	x23, [sp, #48]
    1f04:	mov	x23, x0
    1f08:	add	x0, sp, #0x48
    1f0c:	bl	0 <ctf_lookup_by_id>
    1f10:	mov	x19, x0
    1f14:	cbz	x0, 2048 <ctf_enum_value+0x178>
    1f18:	ldr	x1, [sp, #72]
    1f1c:	ldr	w0, [x0, #4]
    1f20:	ldr	x1, [x1]
    1f24:	ldr	x1, [x1]
    1f28:	blr	x1
    1f2c:	cmp	w0, #0x8
    1f30:	b.ne	2054 <ctf_enum_value+0x184>  // b.any
    1f34:	ldr	x0, [sp, #72]
    1f38:	add	x3, sp, #0x58
    1f3c:	mov	x2, #0x0                   	// #0
    1f40:	mov	x1, x19
    1f44:	ldr	x4, [x0]
    1f48:	ldr	x4, [x4, #24]
    1f4c:	blr	x4
    1f50:	mov	x1, x23
    1f54:	mov	x0, x21
    1f58:	ldr	x23, [sp, #88]
    1f5c:	bl	0 <ctf_dynamic_type>
    1f60:	cbz	x0, 1fcc <ctf_enum_value+0xfc>
    1f64:	ldr	x19, [x0, #56]
    1f68:	cbnz	x19, 1f78 <ctf_enum_value+0xa8>
    1f6c:	b	1fa8 <ctf_enum_value+0xd8>
    1f70:	ldr	x19, [x19, #8]
    1f74:	cbz	x19, 1fa8 <ctf_enum_value+0xd8>
    1f78:	ldr	x0, [x19, #16]
    1f7c:	mov	x1, x20
    1f80:	bl	0 <strcmp>
    1f84:	cbnz	w0, 1f70 <ctf_enum_value+0xa0>
    1f88:	cbz	x22, 2030 <ctf_enum_value+0x160>
    1f8c:	ldr	w1, [x19, #40]
    1f90:	ldr	x23, [sp, #48]
    1f94:	str	w1, [x22]
    1f98:	ldp	x19, x20, [sp, #16]
    1f9c:	ldp	x21, x22, [sp, #32]
    1fa0:	ldp	x29, x30, [sp], #96
    1fa4:	ret
    1fa8:	mov	x0, x21
    1fac:	mov	w1, #0x40b                 	// #1035
    1fb0:	bl	0 <ctf_set_errno>
    1fb4:	ldr	x23, [sp, #48]
    1fb8:	mov	w0, #0xffffffff            	// #-1
    1fbc:	ldp	x19, x20, [sp, #16]
    1fc0:	ldp	x21, x22, [sp, #32]
    1fc4:	ldp	x29, x30, [sp], #96
    1fc8:	ret
    1fcc:	ldr	x1, [sp, #72]
    1fd0:	ldr	w0, [x19, #4]
    1fd4:	ldr	x1, [x1]
    1fd8:	ldr	x1, [x1, #16]
    1fdc:	blr	x1
    1fe0:	cbz	w0, 1fa8 <ctf_enum_value+0xd8>
    1fe4:	add	x19, x19, x23
    1fe8:	sub	w0, w0, #0x1
    1fec:	add	x23, x19, #0x8
    1ff0:	add	x23, x23, w0, uxtw #3
    1ff4:	b	2004 <ctf_enum_value+0x134>
    1ff8:	add	x19, x19, #0x8
    1ffc:	cmp	x19, x23
    2000:	b.eq	1fa8 <ctf_enum_value+0xd8>  // b.none
    2004:	ldr	w1, [x19]
    2008:	ldr	x0, [sp, #72]
    200c:	bl	0 <ctf_strptr>
    2010:	mov	x1, x20
    2014:	bl	0 <strcmp>
    2018:	cbnz	w0, 1ff8 <ctf_enum_value+0x128>
    201c:	cbz	x22, 2030 <ctf_enum_value+0x160>
    2020:	ldr	w1, [x19, #4]
    2024:	ldr	x23, [sp, #48]
    2028:	str	w1, [x22]
    202c:	b	1fbc <ctf_enum_value+0xec>
    2030:	mov	w0, #0x0                   	// #0
    2034:	ldp	x19, x20, [sp, #16]
    2038:	ldp	x21, x22, [sp, #32]
    203c:	ldr	x23, [sp, #48]
    2040:	ldp	x29, x30, [sp], #96
    2044:	ret
    2048:	ldr	x23, [sp, #48]
    204c:	mov	w0, #0xffffffff            	// #-1
    2050:	b	1fbc <ctf_enum_value+0xec>
    2054:	mov	x0, x21
    2058:	mov	w1, #0x3fc                 	// #1020
    205c:	bl	0 <ctf_set_errno>
    2060:	mov	w0, #0xffffffff            	// #-1
    2064:	ldr	x23, [sp, #48]
    2068:	b	1fbc <ctf_enum_value+0xec>
    206c:	nop

0000000000002070 <ctf_func_type_info>:
    2070:	stp	x29, x30, [sp, #-80]!
    2074:	mov	x29, sp
    2078:	stp	x19, x20, [sp, #16]
    207c:	mov	x20, x2
    2080:	str	x0, [sp, #56]
    2084:	bl	2d8 <ctf_type_resolve>
    2088:	cmn	x0, #0x1
    208c:	b.eq	2190 <ctf_func_type_info+0x120>  // b.none
    2090:	mov	x1, x0
    2094:	str	x21, [sp, #32]
    2098:	mov	x21, x0
    209c:	add	x0, sp, #0x38
    20a0:	bl	0 <ctf_lookup_by_id>
    20a4:	mov	x19, x0
    20a8:	cbz	x0, 218c <ctf_func_type_info+0x11c>
    20ac:	mov	x1, x0
    20b0:	add	x3, sp, #0x48
    20b4:	ldr	x0, [sp, #56]
    20b8:	add	x2, sp, #0x40
    20bc:	ldr	x4, [x0]
    20c0:	ldr	x4, [x4, #24]
    20c4:	blr	x4
    20c8:	ldr	x1, [sp, #56]
    20cc:	ldr	w0, [x19, #4]
    20d0:	ldr	x1, [x1]
    20d4:	ldr	x1, [x1]
    20d8:	blr	x1
    20dc:	cmp	w0, #0x5
    20e0:	b.ne	2144 <ctf_func_type_info+0xd4>  // b.any
    20e4:	ldr	x1, [sp, #56]
    20e8:	ldp	w0, w2, [x19, #4]
    20ec:	ldr	x1, [x1]
    20f0:	ldr	x1, [x1, #16]
    20f4:	str	x2, [x20]
    20f8:	str	wzr, [x20, #12]
    20fc:	blr	x1
    2100:	mov	w1, w0
    2104:	ldr	x0, [sp, #56]
    2108:	str	w1, [x20, #8]
    210c:	mov	x1, x21
    2110:	bl	0 <ctf_dynamic_type>
    2114:	cbz	x0, 2160 <ctf_func_type_info+0xf0>
    2118:	ldr	x19, [x0, #48]
    211c:	mov	w0, #0x0                   	// #0
    2120:	ldr	w1, [x20, #8]
    2124:	cbz	w1, 2134 <ctf_func_type_info+0xc4>
    2128:	sub	w1, w1, #0x1
    212c:	ldr	w2, [x19, w1, uxtw #2]
    2130:	cbz	w2, 216c <ctf_func_type_info+0xfc>
    2134:	ldr	x21, [sp, #32]
    2138:	ldp	x19, x20, [sp, #16]
    213c:	ldp	x29, x30, [sp], #80
    2140:	ret
    2144:	ldr	x0, [sp, #56]
    2148:	mov	w1, #0x404                 	// #1028
    214c:	bl	0 <ctf_set_errno>
    2150:	ldp	x19, x20, [sp, #16]
    2154:	ldr	x21, [sp, #32]
    2158:	ldp	x29, x30, [sp], #80
    215c:	ret
    2160:	ldr	x0, [sp, #72]
    2164:	add	x19, x19, x0
    2168:	b	211c <ctf_func_type_info+0xac>
    216c:	ldr	w2, [x20, #12]
    2170:	ldr	x21, [sp, #32]
    2174:	str	w1, [x20, #8]
    2178:	orr	w1, w2, #0x1
    217c:	str	w1, [x20, #12]
    2180:	ldp	x19, x20, [sp, #16]
    2184:	ldp	x29, x30, [sp], #80
    2188:	ret
    218c:	ldr	x21, [sp, #32]
    2190:	mov	w0, #0xffffffff            	// #-1
    2194:	b	2138 <ctf_func_type_info+0xc8>

0000000000002198 <ctf_func_type_args>:
    2198:	stp	x29, x30, [sp, #-96]!
    219c:	mov	x29, sp
    21a0:	stp	x19, x20, [sp, #16]
    21a4:	mov	x20, x3
    21a8:	mov	x19, x1
    21ac:	stp	x21, x22, [sp, #32]
    21b0:	mov	w22, w2
    21b4:	add	x2, sp, #0x50
    21b8:	str	x0, [sp, #56]
    21bc:	bl	2070 <ctf_func_type_info>
    21c0:	tbnz	w0, #31, 226c <ctf_func_type_args+0xd4>
    21c4:	ldr	x0, [sp, #56]
    21c8:	mov	x1, x19
    21cc:	bl	2d8 <ctf_type_resolve>
    21d0:	mov	x21, x0
    21d4:	cmn	x0, #0x1
    21d8:	b.eq	226c <ctf_func_type_args+0xd4>  // b.none
    21dc:	mov	x1, x0
    21e0:	add	x0, sp, #0x38
    21e4:	bl	0 <ctf_lookup_by_id>
    21e8:	mov	x19, x0
    21ec:	cbz	x0, 226c <ctf_func_type_args+0xd4>
    21f0:	mov	x1, x0
    21f4:	add	x3, sp, #0x48
    21f8:	ldr	x0, [sp, #56]
    21fc:	add	x2, sp, #0x40
    2200:	ldr	x4, [x0]
    2204:	ldr	x4, [x4, #24]
    2208:	blr	x4
    220c:	ldr	x0, [sp, #56]
    2210:	mov	x1, x21
    2214:	bl	0 <ctf_dynamic_type>
    2218:	cbz	x0, 2260 <ctf_func_type_args+0xc8>
    221c:	ldr	x4, [x0, #48]
    2220:	mov	x0, #0x0                   	// #0
    2224:	ldr	w1, [sp, #88]
    2228:	cmp	w1, w22
    222c:	csel	w1, w1, w22, ls  // ls = plast
    2230:	sub	w3, w1, #0x1
    2234:	cbz	w1, 224c <ctf_func_type_args+0xb4>
    2238:	ldr	w2, [x4, x0, lsl #2]
    223c:	cmp	x0, x3
    2240:	str	x2, [x20, x0, lsl #3]
    2244:	add	x0, x0, #0x1
    2248:	b.ne	2238 <ctf_func_type_args+0xa0>  // b.any
    224c:	mov	w0, #0x0                   	// #0
    2250:	ldp	x19, x20, [sp, #16]
    2254:	ldp	x21, x22, [sp, #32]
    2258:	ldp	x29, x30, [sp], #96
    225c:	ret
    2260:	ldr	x4, [sp, #72]
    2264:	add	x4, x19, x4
    2268:	b	2220 <ctf_func_type_args+0x88>
    226c:	mov	w0, #0xffffffff            	// #-1
    2270:	b	2250 <ctf_func_type_args+0xb8>
    2274:	nop

0000000000002278 <ctf_type_visit>:
    2278:	adrp	x4, 0 <ctf_type_isparent>
    227c:	mov	w6, #0x0                   	// #0
    2280:	add	x4, x4, #0x0
    2284:	mov	x5, #0x0                   	// #0
    2288:	b	5d8 <ctf_type_rvisit>

ctf-util.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_list_append>:
   0:	ldr	x2, [x0]
   4:	str	x1, [x0]
   8:	stp	x2, xzr, [x1]
   c:	cbz	x2, 18 <ctf_list_append+0x18>
  10:	str	x1, [x2, #8]
  14:	ret
  18:	str	x1, [x0, #8]
  1c:	ret

0000000000000020 <ctf_list_prepend>:
  20:	ldr	x2, [x0, #8]
  24:	str	x1, [x0, #8]
  28:	stp	xzr, x2, [x1]
  2c:	cbz	x2, 38 <ctf_list_prepend+0x18>
  30:	str	x1, [x2]
  34:	ret
  38:	str	x1, [x0]
  3c:	ret

0000000000000040 <ctf_list_delete>:
  40:	ldp	x2, x3, [x1]
  44:	cbz	x2, 5c <ctf_list_delete+0x1c>
  48:	str	x3, [x2, #8]
  4c:	ldr	x1, [x1, #8]
  50:	cbz	x1, 68 <ctf_list_delete+0x28>
  54:	str	x2, [x1]
  58:	ret
  5c:	str	x3, [x0, #8]
  60:	ldr	x1, [x1, #8]
  64:	cbnz	x1, 54 <ctf_list_delete+0x14>
  68:	str	x2, [x0]
  6c:	ret

0000000000000070 <ctf_list_empty_p>:
  70:	ldr	x1, [x0, #8]
  74:	cbz	x1, 80 <ctf_list_empty_p+0x10>
  78:	mov	w0, #0x0                   	// #0
  7c:	ret
  80:	ldr	x0, [x0]
  84:	cmp	x0, #0x0
  88:	cset	w0, eq  // eq = none
  8c:	ret

0000000000000090 <ctf_sym_to_elf64>:
  90:	mov	x2, x0
  94:	mov	x0, x1
  98:	ldp	w4, w3, [x2]
  9c:	ldr	w1, [x2, #8]
  a0:	str	w4, [x0]
  a4:	stp	x3, x1, [x0, #8]
  a8:	ldrb	w1, [x2, #12]
  ac:	strb	w1, [x0, #4]
  b0:	ldrb	w1, [x2, #13]
  b4:	strb	w1, [x0, #5]
  b8:	ldrh	w1, [x2, #14]
  bc:	strh	w1, [x0, #6]
  c0:	ret
  c4:	nop

00000000000000c8 <ctf_str_append>:
  c8:	stp	x29, x30, [sp, #-64]!
  cc:	mov	x29, sp
  d0:	stp	x19, x20, [sp, #16]
  d4:	mov	x19, x0
  d8:	cbz	x1, 138 <ctf_str_append+0x70>
  dc:	stp	x21, x22, [sp, #32]
  e0:	mov	x20, x1
  e4:	mov	x21, #0x0                   	// #0
  e8:	str	x23, [sp, #48]
  ec:	cbz	x0, f8 <ctf_str_append+0x30>
  f0:	bl	0 <strlen>
  f4:	mov	x21, x0
  f8:	mov	x0, x20
  fc:	bl	0 <strlen>
 100:	mov	x22, x0
 104:	mov	x0, x19
 108:	add	x23, x21, x22
 10c:	add	x1, x23, #0x1
 110:	bl	0 <realloc>
 114:	mov	x19, x0
 118:	cbz	x0, 148 <ctf_str_append+0x80>
 11c:	mov	x2, x22
 120:	add	x0, x0, x21
 124:	mov	x1, x20
 128:	bl	0 <memcpy>
 12c:	strb	wzr, [x19, x23]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldr	x23, [sp, #48]
 138:	mov	x0, x19
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x29, x30, [sp], #64
 144:	ret
 148:	ldp	x21, x22, [sp, #32]
 14c:	ldr	x23, [sp, #48]
 150:	b	138 <ctf_str_append+0x70>
 154:	nop

0000000000000158 <ctf_str_append_noerr>:
 158:	stp	x29, x30, [sp, #-32]!
 15c:	mov	x29, sp
 160:	str	x19, [sp, #16]
 164:	mov	x19, x0
 168:	bl	c8 <ctf_str_append>
 16c:	cmp	x0, #0x0
 170:	csel	x0, x0, x19, ne  // ne = any
 174:	ldr	x19, [sp, #16]
 178:	ldp	x29, x30, [sp], #32
 17c:	ret

0000000000000180 <ctf_realloc>:
 180:	mov	x3, x0
 184:	mov	x0, x1
 188:	mov	x1, x2
 18c:	ldr	x2, [x3, #376]
 190:	cbnz	x2, 198 <ctf_realloc+0x18>
 194:	b	0 <realloc>
 198:	stp	x29, x30, [sp, #-16]!
 19c:	mov	x1, x3
 1a0:	adrp	x0, 0 <ctf_list_append>
 1a4:	mov	x29, sp
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <ctf_dprintf>
 1b0:	mov	x0, #0x0                   	// #0
 1b4:	ldp	x29, x30, [sp], #16
 1b8:	ret
 1bc:	nop

00000000000001c0 <ctf_set_open_errno>:
 1c0:	cbz	x0, 1c8 <ctf_set_open_errno+0x8>
 1c4:	str	w1, [x0]
 1c8:	mov	x0, #0x0                   	// #0
 1cc:	ret

00000000000001d0 <ctf_set_errno>:
 1d0:	mov	x2, x0
 1d4:	mov	x0, #0xffffffffffffffff    	// #-1
 1d8:	str	w1, [x2, #556]
 1dc:	ret
