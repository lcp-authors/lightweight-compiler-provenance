
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//wc_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401858 <.init>:
  401858:	stp	x29, x30, [sp, #-16]!
  40185c:	mov	x29, sp
  401860:	bl	401d00 <ferror@plt+0x60>
  401864:	ldp	x29, x30, [sp], #16
  401868:	ret

Disassembly of section .plt:

0000000000401870 <mbrtowc@plt-0x20>:
  401870:	stp	x16, x30, [sp, #-16]!
  401874:	adrp	x16, 419000 <_obstack_memory_used@@Base+0x127a8>
  401878:	ldr	x17, [x16, #4088]
  40187c:	add	x16, x16, #0xff8
  401880:	br	x17
  401884:	nop
  401888:	nop
  40188c:	nop

0000000000401890 <mbrtowc@plt>:
  401890:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401894:	ldr	x17, [x16]
  401898:	add	x16, x16, #0x0
  40189c:	br	x17

00000000004018a0 <memcpy@plt>:
  4018a0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4018a4:	ldr	x17, [x16, #8]
  4018a8:	add	x16, x16, #0x8
  4018ac:	br	x17

00000000004018b0 <_exit@plt>:
  4018b0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4018b4:	ldr	x17, [x16, #16]
  4018b8:	add	x16, x16, #0x10
  4018bc:	br	x17

00000000004018c0 <strlen@plt>:
  4018c0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4018c4:	ldr	x17, [x16, #24]
  4018c8:	add	x16, x16, #0x18
  4018cc:	br	x17

00000000004018d0 <exit@plt>:
  4018d0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4018d4:	ldr	x17, [x16, #32]
  4018d8:	add	x16, x16, #0x20
  4018dc:	br	x17

00000000004018e0 <error@plt>:
  4018e0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4018e4:	ldr	x17, [x16, #40]
  4018e8:	add	x16, x16, #0x28
  4018ec:	br	x17

00000000004018f0 <sysinfo@plt>:
  4018f0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4018f4:	ldr	x17, [x16, #48]
  4018f8:	add	x16, x16, #0x30
  4018fc:	br	x17

0000000000401900 <__cxa_atexit@plt>:
  401900:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401904:	ldr	x17, [x16, #56]
  401908:	add	x16, x16, #0x38
  40190c:	br	x17

0000000000401910 <iswcntrl@plt>:
  401910:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401914:	ldr	x17, [x16, #64]
  401918:	add	x16, x16, #0x40
  40191c:	br	x17

0000000000401920 <setvbuf@plt>:
  401920:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401924:	ldr	x17, [x16, #72]
  401928:	add	x16, x16, #0x48
  40192c:	br	x17

0000000000401930 <lseek@plt>:
  401930:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401934:	ldr	x17, [x16, #80]
  401938:	add	x16, x16, #0x50
  40193c:	br	x17

0000000000401940 <__fpending@plt>:
  401940:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401944:	ldr	x17, [x16, #88]
  401948:	add	x16, x16, #0x58
  40194c:	br	x17

0000000000401950 <fileno@plt>:
  401950:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401954:	ldr	x17, [x16, #96]
  401958:	add	x16, x16, #0x60
  40195c:	br	x17

0000000000401960 <fclose@plt>:
  401960:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401964:	ldr	x17, [x16, #104]
  401968:	add	x16, x16, #0x68
  40196c:	br	x17

0000000000401970 <iswspace@plt>:
  401970:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401974:	ldr	x17, [x16, #112]
  401978:	add	x16, x16, #0x70
  40197c:	br	x17

0000000000401980 <nl_langinfo@plt>:
  401980:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401984:	ldr	x17, [x16, #120]
  401988:	add	x16, x16, #0x78
  40198c:	br	x17

0000000000401990 <fopen@plt>:
  401990:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401994:	ldr	x17, [x16, #128]
  401998:	add	x16, x16, #0x80
  40199c:	br	x17

00000000004019a0 <malloc@plt>:
  4019a0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4019a4:	ldr	x17, [x16, #136]
  4019a8:	add	x16, x16, #0x88
  4019ac:	br	x17

00000000004019b0 <wcwidth@plt>:
  4019b0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4019b4:	ldr	x17, [x16, #144]
  4019b8:	add	x16, x16, #0x90
  4019bc:	br	x17

00000000004019c0 <getdelim@plt>:
  4019c0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4019c4:	ldr	x17, [x16, #152]
  4019c8:	add	x16, x16, #0x98
  4019cc:	br	x17

00000000004019d0 <open@plt>:
  4019d0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4019d4:	ldr	x17, [x16, #160]
  4019d8:	add	x16, x16, #0xa0
  4019dc:	br	x17

00000000004019e0 <strncmp@plt>:
  4019e0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4019e4:	ldr	x17, [x16, #168]
  4019e8:	add	x16, x16, #0xa8
  4019ec:	br	x17

00000000004019f0 <bindtextdomain@plt>:
  4019f0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  4019f4:	ldr	x17, [x16, #176]
  4019f8:	add	x16, x16, #0xb0
  4019fc:	br	x17

0000000000401a00 <__libc_start_main@plt>:
  401a00:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a04:	ldr	x17, [x16, #184]
  401a08:	add	x16, x16, #0xb8
  401a0c:	br	x17

0000000000401a10 <fgetc@plt>:
  401a10:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a14:	ldr	x17, [x16, #192]
  401a18:	add	x16, x16, #0xc0
  401a1c:	br	x17

0000000000401a20 <__printf_chk@plt>:
  401a20:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a24:	ldr	x17, [x16, #200]
  401a28:	add	x16, x16, #0xc8
  401a2c:	br	x17

0000000000401a30 <memset@plt>:
  401a30:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a34:	ldr	x17, [x16, #208]
  401a38:	add	x16, x16, #0xd0
  401a3c:	br	x17

0000000000401a40 <calloc@plt>:
  401a40:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a44:	ldr	x17, [x16, #216]
  401a48:	add	x16, x16, #0xd8
  401a4c:	br	x17

0000000000401a50 <realloc@plt>:
  401a50:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a54:	ldr	x17, [x16, #224]
  401a58:	add	x16, x16, #0xe0
  401a5c:	br	x17

0000000000401a60 <getpagesize@plt>:
  401a60:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a64:	ldr	x17, [x16, #232]
  401a68:	add	x16, x16, #0xe8
  401a6c:	br	x17

0000000000401a70 <close@plt>:
  401a70:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a74:	ldr	x17, [x16, #240]
  401a78:	add	x16, x16, #0xf0
  401a7c:	br	x17

0000000000401a80 <strrchr@plt>:
  401a80:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a84:	ldr	x17, [x16, #248]
  401a88:	add	x16, x16, #0xf8
  401a8c:	br	x17

0000000000401a90 <__gmon_start__@plt>:
  401a90:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401a94:	ldr	x17, [x16, #256]
  401a98:	add	x16, x16, #0x100
  401a9c:	br	x17

0000000000401aa0 <btowc@plt>:
  401aa0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401aa4:	ldr	x17, [x16, #264]
  401aa8:	add	x16, x16, #0x108
  401aac:	br	x17

0000000000401ab0 <abort@plt>:
  401ab0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #272]
  401ab8:	add	x16, x16, #0x110
  401abc:	br	x17

0000000000401ac0 <posix_fadvise@plt>:
  401ac0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #280]
  401ac8:	add	x16, x16, #0x118
  401acc:	br	x17

0000000000401ad0 <mbsinit@plt>:
  401ad0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #288]
  401ad8:	add	x16, x16, #0x120
  401adc:	br	x17

0000000000401ae0 <__overflow@plt>:
  401ae0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #296]
  401ae8:	add	x16, x16, #0x128
  401aec:	br	x17

0000000000401af0 <feof@plt>:
  401af0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #304]
  401af8:	add	x16, x16, #0x130
  401afc:	br	x17

0000000000401b00 <memcmp@plt>:
  401b00:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #312]
  401b08:	add	x16, x16, #0x138
  401b0c:	br	x17

0000000000401b10 <textdomain@plt>:
  401b10:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #320]
  401b18:	add	x16, x16, #0x140
  401b1c:	br	x17

0000000000401b20 <getopt_long@plt>:
  401b20:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #328]
  401b28:	add	x16, x16, #0x148
  401b2c:	br	x17

0000000000401b30 <__fprintf_chk@plt>:
  401b30:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #336]
  401b38:	add	x16, x16, #0x150
  401b3c:	br	x17

0000000000401b40 <strcmp@plt>:
  401b40:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #344]
  401b48:	add	x16, x16, #0x158
  401b4c:	br	x17

0000000000401b50 <__ctype_b_loc@plt>:
  401b50:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #352]
  401b58:	add	x16, x16, #0x160
  401b5c:	br	x17

0000000000401b60 <fseeko@plt>:
  401b60:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #360]
  401b68:	add	x16, x16, #0x168
  401b6c:	br	x17

0000000000401b70 <free@plt>:
  401b70:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #368]
  401b78:	add	x16, x16, #0x170
  401b7c:	br	x17

0000000000401b80 <__ctype_get_mb_cur_max@plt>:
  401b80:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #376]
  401b88:	add	x16, x16, #0x178
  401b8c:	br	x17

0000000000401b90 <strchr@plt>:
  401b90:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #384]
  401b98:	add	x16, x16, #0x180
  401b9c:	br	x17

0000000000401ba0 <fwrite@plt>:
  401ba0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #392]
  401ba8:	add	x16, x16, #0x188
  401bac:	br	x17

0000000000401bb0 <fflush@plt>:
  401bb0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #400]
  401bb8:	add	x16, x16, #0x190
  401bbc:	br	x17

0000000000401bc0 <read@plt>:
  401bc0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #408]
  401bc8:	add	x16, x16, #0x198
  401bcc:	br	x17

0000000000401bd0 <memchr@plt>:
  401bd0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #416]
  401bd8:	add	x16, x16, #0x1a0
  401bdc:	br	x17

0000000000401be0 <sysconf@plt>:
  401be0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #424]
  401be8:	add	x16, x16, #0x1a8
  401bec:	br	x17

0000000000401bf0 <__fxstat@plt>:
  401bf0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #432]
  401bf8:	add	x16, x16, #0x1b0
  401bfc:	br	x17

0000000000401c00 <dcgettext@plt>:
  401c00:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #440]
  401c08:	add	x16, x16, #0x1b8
  401c0c:	br	x17

0000000000401c10 <fputs_unlocked@plt>:
  401c10:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #448]
  401c18:	add	x16, x16, #0x1c0
  401c1c:	br	x17

0000000000401c20 <__freading@plt>:
  401c20:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #456]
  401c28:	add	x16, x16, #0x1c8
  401c2c:	br	x17

0000000000401c30 <iswprint@plt>:
  401c30:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #464]
  401c38:	add	x16, x16, #0x1d0
  401c3c:	br	x17

0000000000401c40 <__assert_fail@plt>:
  401c40:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #472]
  401c48:	add	x16, x16, #0x1d8
  401c4c:	br	x17

0000000000401c50 <__errno_location@plt>:
  401c50:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #480]
  401c58:	add	x16, x16, #0x1e0
  401c5c:	br	x17

0000000000401c60 <getenv@plt>:
  401c60:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #488]
  401c68:	add	x16, x16, #0x1e8
  401c6c:	br	x17

0000000000401c70 <__xstat@plt>:
  401c70:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #496]
  401c78:	add	x16, x16, #0x1f0
  401c7c:	br	x17

0000000000401c80 <__memmove_chk@plt>:
  401c80:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #504]
  401c88:	add	x16, x16, #0x1f8
  401c8c:	br	x17

0000000000401c90 <setlocale@plt>:
  401c90:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #512]
  401c98:	add	x16, x16, #0x200
  401c9c:	br	x17

0000000000401ca0 <ferror@plt>:
  401ca0:	adrp	x16, 41a000 <mbrtowc@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #520]
  401ca8:	add	x16, x16, #0x208
  401cac:	br	x17

Disassembly of section .text:

0000000000401cb0 <_obstack_begin@@Base-0x4984>:
  401cb0:	mov	x29, #0x0                   	// #0
  401cb4:	mov	x30, #0x0                   	// #0
  401cb8:	mov	x5, x0
  401cbc:	ldr	x1, [sp]
  401cc0:	add	x2, sp, #0x8
  401cc4:	mov	x6, sp
  401cc8:	movz	x0, #0x0, lsl #48
  401ccc:	movk	x0, #0x0, lsl #32
  401cd0:	movk	x0, #0x40, lsl #16
  401cd4:	movk	x0, #0x2ca0
  401cd8:	movz	x3, #0x0, lsl #48
  401cdc:	movk	x3, #0x0, lsl #32
  401ce0:	movk	x3, #0x40, lsl #16
  401ce4:	movk	x3, #0x69a0
  401ce8:	movz	x4, #0x0, lsl #48
  401cec:	movk	x4, #0x0, lsl #32
  401cf0:	movk	x4, #0x40, lsl #16
  401cf4:	movk	x4, #0x6a20
  401cf8:	bl	401a00 <__libc_start_main@plt>
  401cfc:	bl	401ab0 <abort@plt>
  401d00:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127a8>
  401d04:	ldr	x0, [x0, #4064]
  401d08:	cbz	x0, 401d10 <ferror@plt+0x70>
  401d0c:	b	401a90 <__gmon_start__@plt>
  401d10:	ret
  401d14:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401d18:	add	x0, x0, #0x290
  401d1c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401d20:	add	x1, x1, #0x290
  401d24:	cmp	x0, x1
  401d28:	b.eq	401d5c <ferror@plt+0xbc>  // b.none
  401d2c:	stp	x29, x30, [sp, #-32]!
  401d30:	mov	x29, sp
  401d34:	adrp	x0, 406000 <ferror@plt+0x4360>
  401d38:	ldr	x0, [x0, #2640]
  401d3c:	str	x0, [sp, #24]
  401d40:	mov	x1, x0
  401d44:	cbz	x1, 401d54 <ferror@plt+0xb4>
  401d48:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401d4c:	add	x0, x0, #0x290
  401d50:	blr	x1
  401d54:	ldp	x29, x30, [sp], #32
  401d58:	ret
  401d5c:	ret
  401d60:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401d64:	add	x0, x0, #0x290
  401d68:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401d6c:	add	x1, x1, #0x290
  401d70:	sub	x0, x0, x1
  401d74:	lsr	x1, x0, #63
  401d78:	add	x0, x1, x0, asr #3
  401d7c:	cmp	xzr, x0, asr #1
  401d80:	b.eq	401db8 <ferror@plt+0x118>  // b.none
  401d84:	stp	x29, x30, [sp, #-32]!
  401d88:	mov	x29, sp
  401d8c:	asr	x1, x0, #1
  401d90:	adrp	x0, 406000 <ferror@plt+0x4360>
  401d94:	ldr	x0, [x0, #2648]
  401d98:	str	x0, [sp, #24]
  401d9c:	mov	x2, x0
  401da0:	cbz	x2, 401db0 <ferror@plt+0x110>
  401da4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401da8:	add	x0, x0, #0x290
  401dac:	blr	x2
  401db0:	ldp	x29, x30, [sp], #32
  401db4:	ret
  401db8:	ret
  401dbc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401dc0:	ldrb	w0, [x0, #712]
  401dc4:	cbnz	w0, 401de8 <ferror@plt+0x148>
  401dc8:	stp	x29, x30, [sp, #-16]!
  401dcc:	mov	x29, sp
  401dd0:	bl	401d14 <ferror@plt+0x74>
  401dd4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401dd8:	mov	w1, #0x1                   	// #1
  401ddc:	strb	w1, [x0, #712]
  401de0:	ldp	x29, x30, [sp], #16
  401de4:	ret
  401de8:	ret
  401dec:	stp	x29, x30, [sp, #-16]!
  401df0:	mov	x29, sp
  401df4:	bl	401d60 <ferror@plt+0xc0>
  401df8:	ldp	x29, x30, [sp], #16
  401dfc:	ret
  401e00:	mov	w1, w0
  401e04:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401e08:	ldrb	w0, [x0, #720]
  401e0c:	cbnz	w0, 401e3c <ferror@plt+0x19c>
  401e10:	cmp	w1, #0xa0
  401e14:	mov	w0, #0x1                   	// #1
  401e18:	mov	w2, #0x2007                	// #8199
  401e1c:	ccmp	w1, w2, #0x4, ne  // ne = any
  401e20:	b.eq	401e40 <ferror@plt+0x1a0>  // b.none
  401e24:	mov	w0, #0x202f                	// #8239
  401e28:	cmp	w1, w0
  401e2c:	mov	w0, #0x2060                	// #8288
  401e30:	ccmp	w1, w0, #0x4, ne  // ne = any
  401e34:	cset	w0, eq  // eq = none
  401e38:	b	401e40 <ferror@plt+0x1a0>
  401e3c:	mov	w0, #0x0                   	// #0
  401e40:	ret
  401e44:	stp	x29, x30, [sp, #-112]!
  401e48:	mov	x29, sp
  401e4c:	stp	x19, x20, [sp, #16]
  401e50:	stp	x21, x22, [sp, #32]
  401e54:	stp	x23, x24, [sp, #48]
  401e58:	mov	x21, x1
  401e5c:	mov	x20, x2
  401e60:	mov	x24, x3
  401e64:	mov	x23, x4
  401e68:	mov	x22, x5
  401e6c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401e70:	ldrb	w1, [x1, #721]
  401e74:	cbnz	w1, 401f2c <ferror@plt+0x28c>
  401e78:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  401e7c:	add	x19, x19, #0x238
  401e80:	add	x19, x19, #0x1
  401e84:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401e88:	ldrb	w0, [x0, #728]
  401e8c:	cbnz	w0, 401f64 <ferror@plt+0x2c4>
  401e90:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401e94:	ldrb	w0, [x0, #729]
  401e98:	cbnz	w0, 401fa0 <ferror@plt+0x300>
  401e9c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401ea0:	ldrb	w0, [x0, #730]
  401ea4:	cbnz	w0, 401fd4 <ferror@plt+0x334>
  401ea8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401eac:	ldrb	w0, [x0, #731]
  401eb0:	cbnz	w0, 402008 <ferror@plt+0x368>
  401eb4:	cbz	x22, 401ef0 <ferror@plt+0x250>
  401eb8:	mov	w1, #0xa                   	// #10
  401ebc:	mov	x0, x22
  401ec0:	bl	401b90 <strchr@plt>
  401ec4:	cbz	x0, 401edc <ferror@plt+0x23c>
  401ec8:	mov	x2, x22
  401ecc:	mov	w1, #0x3                   	// #3
  401ed0:	mov	w0, #0x0                   	// #0
  401ed4:	bl	4054cc <ferror@plt+0x382c>
  401ed8:	mov	x22, x0
  401edc:	mov	x2, x22
  401ee0:	adrp	x1, 406000 <ferror@plt+0x4360>
  401ee4:	add	x1, x1, #0xaf0
  401ee8:	mov	w0, #0x1                   	// #1
  401eec:	bl	401a20 <__printf_chk@plt>
  401ef0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401ef4:	ldr	x0, [x0, #688]
  401ef8:	ldr	x1, [x0, #40]
  401efc:	ldr	x2, [x0, #48]
  401f00:	cmp	x1, x2
  401f04:	b.cs	402034 <ferror@plt+0x394>  // b.hs, b.nlast
  401f08:	add	x2, x1, #0x1
  401f0c:	str	x2, [x0, #40]
  401f10:	mov	w0, #0xa                   	// #10
  401f14:	strb	w0, [x1]
  401f18:	ldp	x19, x20, [sp, #16]
  401f1c:	ldp	x21, x22, [sp, #32]
  401f20:	ldp	x23, x24, [sp, #48]
  401f24:	ldp	x29, x30, [sp], #112
  401f28:	ret
  401f2c:	str	x25, [sp, #64]
  401f30:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401f34:	ldr	w25, [x1, #724]
  401f38:	add	x1, sp, #0x58
  401f3c:	bl	4039b4 <ferror@plt+0x1d14>
  401f40:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  401f44:	add	x19, x19, #0x238
  401f48:	mov	x3, x0
  401f4c:	mov	w2, w25
  401f50:	add	x1, x19, #0x1
  401f54:	mov	w0, #0x1                   	// #1
  401f58:	bl	401a20 <__printf_chk@plt>
  401f5c:	ldr	x25, [sp, #64]
  401f60:	b	401e84 <ferror@plt+0x1e4>
  401f64:	str	x25, [sp, #64]
  401f68:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401f6c:	ldr	w25, [x0, #724]
  401f70:	add	x1, sp, #0x58
  401f74:	mov	x0, x21
  401f78:	bl	4039b4 <ferror@plt+0x1d14>
  401f7c:	mov	x3, x0
  401f80:	mov	w2, w25
  401f84:	mov	x1, x19
  401f88:	mov	w0, #0x1                   	// #1
  401f8c:	bl	401a20 <__printf_chk@plt>
  401f90:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  401f94:	add	x19, x19, #0x238
  401f98:	ldr	x25, [sp, #64]
  401f9c:	b	401e90 <ferror@plt+0x1f0>
  401fa0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401fa4:	ldr	w21, [x0, #724]
  401fa8:	add	x1, sp, #0x58
  401fac:	mov	x0, x20
  401fb0:	bl	4039b4 <ferror@plt+0x1d14>
  401fb4:	mov	x3, x0
  401fb8:	mov	w2, w21
  401fbc:	mov	x1, x19
  401fc0:	mov	w0, #0x1                   	// #1
  401fc4:	bl	401a20 <__printf_chk@plt>
  401fc8:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  401fcc:	add	x19, x19, #0x238
  401fd0:	b	401e9c <ferror@plt+0x1fc>
  401fd4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  401fd8:	ldr	w20, [x0, #724]
  401fdc:	add	x1, sp, #0x58
  401fe0:	mov	x0, x24
  401fe4:	bl	4039b4 <ferror@plt+0x1d14>
  401fe8:	mov	x3, x0
  401fec:	mov	w2, w20
  401ff0:	mov	x1, x19
  401ff4:	mov	w0, #0x1                   	// #1
  401ff8:	bl	401a20 <__printf_chk@plt>
  401ffc:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  402000:	add	x19, x19, #0x238
  402004:	b	401ea8 <ferror@plt+0x208>
  402008:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40200c:	ldr	w20, [x0, #724]
  402010:	add	x1, sp, #0x58
  402014:	mov	x0, x23
  402018:	bl	4039b4 <ferror@plt+0x1d14>
  40201c:	mov	x3, x0
  402020:	mov	w2, w20
  402024:	mov	x1, x19
  402028:	mov	w0, #0x1                   	// #1
  40202c:	bl	401a20 <__printf_chk@plt>
  402030:	b	401eb4 <ferror@plt+0x214>
  402034:	mov	w1, #0xa                   	// #10
  402038:	bl	401ae0 <__overflow@plt>
  40203c:	b	401f18 <ferror@plt+0x278>
  402040:	mov	x12, #0x40b0                	// #16560
  402044:	sub	sp, sp, x12
  402048:	stp	x29, x30, [sp]
  40204c:	mov	x29, sp
  402050:	stp	x19, x20, [sp, #16]
  402054:	stp	x21, x22, [sp, #32]
  402058:	stp	x23, x24, [sp, #48]
  40205c:	stp	x27, x28, [sp, #80]
  402060:	str	w0, [sp, #112]
  402064:	str	x1, [sp, #128]
  402068:	mov	x21, x2
  40206c:	mov	x22, x3
  402070:	str	x1, [sp, #136]
  402074:	cbz	x1, 40213c <ferror@plt+0x49c>
  402078:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  40207c:	cmp	x0, #0x1
  402080:	b.ls	402158 <ferror@plt+0x4b8>  // b.plast
  402084:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402088:	add	x0, x0, #0x2d0
  40208c:	ldrb	w20, [x0, #10]
  402090:	ldrb	w0, [x0, #9]
  402094:	str	w0, [sp, #116]
  402098:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40209c:	ldrb	w0, [x0, #728]
  4020a0:	cbnz	w0, 4028a0 <ferror@plt+0xc00>
  4020a4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4020a8:	ldrb	w19, [x0, #731]
  4020ac:	eor	w0, w20, #0x1
  4020b0:	ldr	w1, [sp, #116]
  4020b4:	orr	w0, w1, w0
  4020b8:	cbnz	w0, 40217c <ferror@plt+0x4dc>
  4020bc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4020c0:	ldrb	w0, [x0, #721]
  4020c4:	orr	w0, w0, w19
  4020c8:	cbnz	w0, 402888 <ferror@plt+0xbe8>
  4020cc:	ldr	w0, [x21]
  4020d0:	cmp	w0, #0x0
  4020d4:	b.gt	4021e8 <ferror@plt+0x548>
  4020d8:	ldr	w0, [x21]
  4020dc:	cbnz	w0, 4027d0 <ferror@plt+0xb30>
  4020e0:	ldr	w0, [x21, #24]
  4020e4:	mov	w1, #0xd000                	// #53248
  4020e8:	and	w0, w0, w1
  4020ec:	cmp	w0, #0x8, lsl #12
  4020f0:	b.ne	402814 <ferror@plt+0xb74>  // b.any
  4020f4:	ldr	x19, [x21, #56]
  4020f8:	tbnz	x19, #63, 40281c <ferror@plt+0xb7c>
  4020fc:	tbnz	x22, #63, 402200 <ferror@plt+0x560>
  402100:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402104:	ldr	x0, [x0, #736]
  402108:	udiv	x28, x19, x0
  40210c:	msub	x28, x28, x0, x19
  402110:	cbz	x28, 402218 <ferror@plt+0x578>
  402114:	sub	x28, x19, x22
  402118:	cmp	x22, x19
  40211c:	csel	x28, x28, xzr, ls  // ls = plast
  402120:	mov	x21, #0x0                   	// #0
  402124:	mov	x24, #0x0                   	// #0
  402128:	mov	x27, #0x0                   	// #0
  40212c:	mov	x22, #0x0                   	// #0
  402130:	mov	w0, #0x1                   	// #1
  402134:	str	w0, [sp, #120]
  402138:	b	4023b0 <ferror@plt+0x710>
  40213c:	mov	w2, #0x5                   	// #5
  402140:	adrp	x1, 406000 <ferror@plt+0x4360>
  402144:	add	x1, x1, #0xaf8
  402148:	mov	x0, #0x0                   	// #0
  40214c:	bl	401c00 <dcgettext@plt>
  402150:	str	x0, [sp, #136]
  402154:	b	402078 <ferror@plt+0x3d8>
  402158:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40215c:	ldrb	w0, [x0, #730]
  402160:	mov	w20, #0x1                   	// #1
  402164:	cbnz	w0, 402170 <ferror@plt+0x4d0>
  402168:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40216c:	ldrb	w20, [x0, #729]
  402170:	and	w20, w20, #0x1
  402174:	str	wzr, [sp, #116]
  402178:	b	402098 <ferror@plt+0x3f8>
  40217c:	mov	w3, #0x2                   	// #2
  402180:	mov	x2, #0x0                   	// #0
  402184:	mov	x1, #0x0                   	// #0
  402188:	ldr	w0, [sp, #112]
  40218c:	bl	403968 <ferror@plt+0x1cc8>
  402190:	ldr	w0, [sp, #116]
  402194:	eor	w0, w0, #0x1
  402198:	tst	w20, w0
  40219c:	b.eq	4021b0 <ferror@plt+0x510>  // b.none
  4021a0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4021a4:	ldrb	w0, [x0, #721]
  4021a8:	orr	w0, w0, w19
  4021ac:	cbz	w0, 4020cc <ferror@plt+0x42c>
  4021b0:	stp	x25, x26, [sp, #64]
  4021b4:	ldr	w0, [sp, #116]
  4021b8:	orr	w0, w0, w19
  4021bc:	str	w0, [sp, #120]
  4021c0:	cbnz	w0, 4028c8 <ferror@plt+0xc28>
  4021c4:	mov	w24, w0
  4021c8:	mov	x28, #0x0                   	// #0
  4021cc:	mov	x22, #0x0                   	// #0
  4021d0:	add	x23, sp, #0xa8
  4021d4:	mov	x26, #0x4000                	// #16384
  4021d8:	mov	w21, #0xa                   	// #10
  4021dc:	mov	x25, #0x8888888888888888    	// #-8608480567731124088
  4021e0:	movk	x25, #0x8889
  4021e4:	b	402348 <ferror@plt+0x6a8>
  4021e8:	add	x2, x21, #0x8
  4021ec:	ldr	w1, [sp, #112]
  4021f0:	mov	w0, #0x0                   	// #0
  4021f4:	bl	401bf0 <__fxstat@plt>
  4021f8:	str	w0, [x21]
  4021fc:	b	4020d8 <ferror@plt+0x438>
  402200:	mov	w2, #0x1                   	// #1
  402204:	mov	x1, #0x0                   	// #0
  402208:	ldr	w0, [sp, #112]
  40220c:	bl	401930 <lseek@plt>
  402210:	mov	x22, x0
  402214:	b	402100 <ferror@plt+0x460>
  402218:	ldr	w1, [x21, #64]
  40221c:	add	w0, w1, #0x1
  402220:	sxtw	x0, w0
  402224:	cmp	w1, #0x0
  402228:	mov	x1, #0x201                 	// #513
  40222c:	csel	x0, x0, x1, gt
  402230:	udiv	x1, x19, x0
  402234:	msub	x0, x1, x0, x19
  402238:	sub	x19, x19, x0
  40223c:	cmp	x22, #0x0
  402240:	ccmp	x22, x19, #0x0, ge  // ge = tcont
  402244:	b.ge	4027d4 <ferror@plt+0xb34>  // b.tcont
  402248:	mov	w2, #0x1                   	// #1
  40224c:	mov	x1, x19
  402250:	ldr	w0, [sp, #112]
  402254:	bl	401930 <lseek@plt>
  402258:	sub	x19, x19, x22
  40225c:	cmp	x0, #0x0
  402260:	csel	x28, x19, x28, ge  // ge = tcont
  402264:	b	4027d4 <ferror@plt+0xb34>
  402268:	bl	401c50 <__errno_location@plt>
  40226c:	ldr	w19, [x0]
  402270:	ldr	x2, [sp, #136]
  402274:	mov	w1, #0x3                   	// #3
  402278:	mov	w0, #0x0                   	// #0
  40227c:	bl	4054cc <ferror@plt+0x382c>
  402280:	mov	x3, x0
  402284:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  402288:	add	x2, x2, #0x1e0
  40228c:	mov	w1, w19
  402290:	mov	w0, #0x0                   	// #0
  402294:	bl	4018e0 <error@plt>
  402298:	mov	x21, #0x0                   	// #0
  40229c:	mov	x24, #0x0                   	// #0
  4022a0:	mov	x27, #0x0                   	// #0
  4022a4:	mov	x22, #0x0                   	// #0
  4022a8:	str	wzr, [sp, #120]
  4022ac:	b	4023b0 <ferror@plt+0x710>
  4022b0:	mov	x21, x0
  4022b4:	mov	x24, x0
  4022b8:	mov	x27, x0
  4022bc:	mov	w0, #0x1                   	// #1
  4022c0:	str	w0, [sp, #120]
  4022c4:	b	4023b0 <ferror@plt+0x710>
  4022c8:	bl	401c50 <__errno_location@plt>
  4022cc:	ldr	w19, [x0]
  4022d0:	ldr	x2, [sp, #136]
  4022d4:	mov	w1, #0x3                   	// #3
  4022d8:	mov	w0, #0x0                   	// #0
  4022dc:	bl	4054cc <ferror@plt+0x382c>
  4022e0:	mov	x3, x0
  4022e4:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  4022e8:	add	x2, x2, #0x1e0
  4022ec:	mov	w1, w19
  4022f0:	mov	w0, #0x0                   	// #0
  4022f4:	bl	4018e0 <error@plt>
  4022f8:	mov	x21, #0x0                   	// #0
  4022fc:	mov	x24, #0x0                   	// #0
  402300:	mov	x27, #0x0                   	// #0
  402304:	ldp	x25, x26, [sp, #64]
  402308:	b	4023b0 <ferror@plt+0x710>
  40230c:	mov	x19, x22
  402310:	mov	x0, x23
  402314:	sub	x2, x20, x0
  402318:	mov	w1, w21
  40231c:	bl	401bd0 <memchr@plt>
  402320:	cbz	x0, 402334 <ferror@plt+0x694>
  402324:	add	x0, x0, #0x1
  402328:	add	x19, x19, #0x1
  40232c:	b	402314 <ferror@plt+0x674>
  402330:	mov	x19, x22
  402334:	sub	x22, x19, x22
  402338:	umulh	x27, x27, x25
  40233c:	cmp	x22, x27, lsr #3
  402340:	cset	w24, ls  // ls = plast
  402344:	mov	x22, x19
  402348:	mov	x2, x26
  40234c:	mov	x1, x23
  402350:	ldr	w0, [sp, #112]
  402354:	bl	405a1c <ferror@plt+0x3d7c>
  402358:	mov	x27, x0
  40235c:	cbz	x0, 40239c <ferror@plt+0x6fc>
  402360:	cmn	x27, #0x1
  402364:	b.eq	4022c8 <ferror@plt+0x628>  // b.none
  402368:	add	x28, x28, x27
  40236c:	add	x20, x23, x27
  402370:	cbnz	w24, 40230c <ferror@plt+0x66c>
  402374:	cmp	x20, x23
  402378:	b.eq	402330 <ferror@plt+0x690>  // b.none
  40237c:	mov	x19, x22
  402380:	add	x0, sp, #0xa8
  402384:	ldrb	w1, [x0], #1
  402388:	cmp	w1, #0xa
  40238c:	cinc	x19, x19, eq  // eq = none
  402390:	cmp	x20, x0
  402394:	b.ne	402384 <ferror@plt+0x6e4>  // b.any
  402398:	b	402334 <ferror@plt+0x694>
  40239c:	mov	x21, x0
  4023a0:	mov	x24, x0
  4023a4:	mov	w0, #0x1                   	// #1
  4023a8:	str	w0, [sp, #120]
  4023ac:	ldp	x25, x26, [sp, #64]
  4023b0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4023b4:	ldrb	w0, [x0, #729]
  4023b8:	ldr	w1, [sp, #116]
  4023bc:	cmp	w0, w1
  4023c0:	csel	x24, x24, x28, ls  // ls = plast
  4023c4:	ldr	x5, [sp, #128]
  4023c8:	mov	x4, x21
  4023cc:	mov	x3, x28
  4023d0:	mov	x2, x24
  4023d4:	mov	x1, x27
  4023d8:	mov	x0, x22
  4023dc:	bl	401e44 <ferror@plt+0x1a4>
  4023e0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4023e4:	add	x0, x0, #0x2d0
  4023e8:	ldr	x1, [x0, #24]
  4023ec:	add	x22, x1, x22
  4023f0:	str	x22, [x0, #24]
  4023f4:	ldr	x1, [x0, #32]
  4023f8:	add	x27, x1, x27
  4023fc:	str	x27, [x0, #32]
  402400:	ldr	x1, [x0, #40]
  402404:	add	x24, x1, x24
  402408:	str	x24, [x0, #40]
  40240c:	ldr	x1, [x0, #48]
  402410:	add	x28, x1, x28
  402414:	str	x28, [x0, #48]
  402418:	ldr	x0, [x0, #56]
  40241c:	cmp	x0, x21
  402420:	b.cs	40242c <ferror@plt+0x78c>  // b.hs, b.nlast
  402424:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402428:	str	x21, [x0, #776]
  40242c:	ldrb	w0, [sp, #120]
  402430:	ldp	x19, x20, [sp, #16]
  402434:	ldp	x21, x22, [sp, #32]
  402438:	ldp	x23, x24, [sp, #48]
  40243c:	ldp	x27, x28, [sp, #80]
  402440:	ldp	x29, x30, [sp]
  402444:	mov	x12, #0x40b0                	// #16560
  402448:	add	sp, sp, x12
  40244c:	ret
  402450:	bl	401c50 <__errno_location@plt>
  402454:	ldr	w19, [x0]
  402458:	ldr	x2, [sp, #136]
  40245c:	mov	w1, #0x3                   	// #3
  402460:	mov	w0, #0x0                   	// #0
  402464:	bl	4054cc <ferror@plt+0x382c>
  402468:	mov	x3, x0
  40246c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  402470:	add	x2, x2, #0x1e0
  402474:	mov	w1, w19
  402478:	mov	w0, #0x0                   	// #0
  40247c:	bl	4018e0 <error@plt>
  402480:	str	wzr, [sp, #120]
  402484:	b	402678 <ferror@plt+0x9d8>
  402488:	cmp	w0, #0x9
  40248c:	b.eq	40262c <ferror@plt+0x98c>  // b.none
  402490:	mov	x19, #0x1                   	// #1
  402494:	cmp	w0, #0xa
  402498:	b.ne	40285c <ferror@plt+0xbbc>  // b.any
  40249c:	add	x22, x22, #0x1
  4024a0:	b	4025b0 <ferror@plt+0x910>
  4024a4:	ldr	x23, [sp, #160]
  4024a8:	add	x3, sp, #0xa0
  4024ac:	mov	x2, x20
  4024b0:	mov	x1, x21
  4024b4:	add	x0, sp, #0x9c
  4024b8:	bl	406464 <ferror@plt+0x47c4>
  4024bc:	mov	x19, x0
  4024c0:	cmn	x0, #0x2
  4024c4:	b.eq	402530 <ferror@plt+0x890>  // b.none
  4024c8:	cmn	x0, #0x1
  4024cc:	b.eq	40259c <ferror@plt+0x8fc>  // b.none
  4024d0:	add	x0, sp, #0xa0
  4024d4:	bl	401ad0 <mbsinit@plt>
  4024d8:	cmp	w0, #0x0
  4024dc:	cset	w26, eq  // eq = none
  4024e0:	cbnz	x19, 402824 <ferror@plt+0xb84>
  4024e4:	str	wzr, [sp, #156]
  4024e8:	mov	x19, #0x1                   	// #1
  4024ec:	mov	w23, #0x0                   	// #0
  4024f0:	mov	w0, w23
  4024f4:	bl	401c30 <iswprint@plt>
  4024f8:	cbz	w0, 4025d0 <ferror@plt+0x930>
  4024fc:	ldr	x0, [sp, #120]
  402500:	ldrb	w0, [x0, #11]
  402504:	cbnz	w0, 40264c <ferror@plt+0x9ac>
  402508:	ldr	w23, [sp, #156]
  40250c:	mov	w0, w23
  402510:	bl	401970 <iswspace@plt>
  402514:	cbnz	w0, 4025c4 <ferror@plt+0x924>
  402518:	mov	w0, w23
  40251c:	bl	401e00 <ferror@plt+0x160>
  402520:	cbnz	w0, 4025c4 <ferror@plt+0x924>
  402524:	mov	w0, #0x1                   	// #1
  402528:	str	w0, [sp, #100]
  40252c:	b	4025d0 <ferror@plt+0x930>
  402530:	str	x23, [sp, #160]
  402534:	mov	w26, #0x1                   	// #1
  402538:	cbz	x20, 40255c <ferror@plt+0x8bc>
  40253c:	cmp	x20, #0x4, lsl #12
  402540:	b.eq	402664 <ferror@plt+0x9c4>  // b.none
  402544:	mov	x3, #0x4001                	// #16385
  402548:	mov	x2, x20
  40254c:	mov	x1, x21
  402550:	add	x0, sp, #0xa8
  402554:	bl	401c80 <__memmove_chk@plt>
  402558:	mov	w26, #0x1                   	// #1
  40255c:	mov	x2, #0x4000                	// #16384
  402560:	sub	x2, x2, x20
  402564:	add	x0, sp, #0xa8
  402568:	add	x1, x0, x20
  40256c:	ldr	w0, [sp, #112]
  402570:	bl	405a1c <ferror@plt+0x3d7c>
  402574:	cbz	x0, 402670 <ferror@plt+0x9d0>
  402578:	cmn	x0, #0x1
  40257c:	b.eq	402450 <ferror@plt+0x7b0>  // b.none
  402580:	add	x28, x28, x0
  402584:	add	x20, x20, x0
  402588:	add	x21, sp, #0xa8
  40258c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402590:	add	x0, x0, #0x2d0
  402594:	str	x0, [sp, #120]
  402598:	b	4025e0 <ferror@plt+0x940>
  40259c:	add	x21, x21, #0x1
  4025a0:	sub	x20, x20, #0x1
  4025a4:	mov	w26, #0x1                   	// #1
  4025a8:	b	4025dc <ferror@plt+0x93c>
  4025ac:	mov	x19, #0x1                   	// #1
  4025b0:	ldr	x0, [sp, #104]
  4025b4:	cmp	x0, x25
  4025b8:	csel	x0, x0, x25, cs  // cs = hs, nlast
  4025bc:	str	x0, [sp, #104]
  4025c0:	mov	x25, #0x0                   	// #0
  4025c4:	ldrb	w0, [sp, #100]
  4025c8:	add	x27, x27, x0
  4025cc:	str	wzr, [sp, #100]
  4025d0:	add	x21, x21, x19
  4025d4:	sub	x20, x20, x19
  4025d8:	add	x24, x24, #0x1
  4025dc:	cbz	x20, 40255c <ferror@plt+0x8bc>
  4025e0:	cbnz	w26, 4024a4 <ferror@plt+0x804>
  4025e4:	ldrb	w0, [x21]
  4025e8:	ubfx	x2, x0, #5, #3
  4025ec:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  4025f0:	add	x1, x1, #0x3f8
  4025f4:	ldr	w1, [x1, x2, lsl #2]
  4025f8:	lsr	w1, w1, w0
  4025fc:	tbz	w1, #0, 4024a4 <ferror@plt+0x804>
  402600:	str	w0, [sp, #156]
  402604:	cmp	w0, #0xb
  402608:	b.eq	40263c <ferror@plt+0x99c>  // b.none
  40260c:	b.ls	402488 <ferror@plt+0x7e8>  // b.plast
  402610:	cmp	w0, #0xd
  402614:	b.ls	4025ac <ferror@plt+0x90c>  // b.plast
  402618:	mov	x19, #0x1                   	// #1
  40261c:	cmp	w0, #0x20
  402620:	b.ne	40285c <ferror@plt+0xbbc>  // b.any
  402624:	add	x25, x25, #0x1
  402628:	b	4025c4 <ferror@plt+0x924>
  40262c:	mov	x19, #0x1                   	// #1
  402630:	and	x25, x25, #0xfffffffffffffff8
  402634:	add	x25, x25, #0x8
  402638:	b	4025c4 <ferror@plt+0x924>
  40263c:	mov	x19, #0x1                   	// #1
  402640:	b	4025c4 <ferror@plt+0x924>
  402644:	mov	x19, #0x1                   	// #1
  402648:	b	4025c4 <ferror@plt+0x924>
  40264c:	mov	w0, w23
  402650:	bl	4019b0 <wcwidth@plt>
  402654:	add	x1, x25, w0, sxtw
  402658:	cmp	w0, #0x0
  40265c:	csel	x25, x1, x25, gt
  402660:	b	402508 <ferror@plt+0x868>
  402664:	add	x21, x21, #0x1
  402668:	mov	x20, #0x3fff                	// #16383
  40266c:	b	402544 <ferror@plt+0x8a4>
  402670:	mov	w0, #0x1                   	// #1
  402674:	str	w0, [sp, #120]
  402678:	ldr	x0, [sp, #104]
  40267c:	cmp	x0, x25
  402680:	csel	x21, x0, x25, cs  // cs = hs, nlast
  402684:	ldrb	w0, [sp, #100]
  402688:	add	x27, x0, x27
  40268c:	ldp	x25, x26, [sp, #64]
  402690:	b	4023b0 <ferror@plt+0x710>
  402694:	bl	401c50 <__errno_location@plt>
  402698:	ldr	w19, [x0]
  40269c:	ldr	x2, [sp, #136]
  4026a0:	mov	w1, #0x3                   	// #3
  4026a4:	mov	w0, #0x0                   	// #0
  4026a8:	bl	4054cc <ferror@plt+0x382c>
  4026ac:	mov	x3, x0
  4026b0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  4026b4:	add	x2, x2, #0x1e0
  4026b8:	mov	w1, w19
  4026bc:	mov	w0, #0x0                   	// #0
  4026c0:	bl	4018e0 <error@plt>
  4026c4:	str	wzr, [sp, #120]
  4026c8:	b	4027b8 <ferror@plt+0xb18>
  4026cc:	cmp	w19, #0x9
  4026d0:	b.eq	402724 <ferror@plt+0xa84>  // b.none
  4026d4:	cmp	w19, #0xa
  4026d8:	b.ne	402730 <ferror@plt+0xa90>  // b.any
  4026dc:	add	x22, x22, #0x1
  4026e0:	cmp	x21, x23
  4026e4:	csel	x21, x21, x23, cs  // cs = hs, nlast
  4026e8:	mov	x23, #0x0                   	// #0
  4026ec:	add	x25, x25, w27, uxtb
  4026f0:	mov	w27, w26
  4026f4:	cmp	x24, x20
  4026f8:	b.eq	402780 <ferror@plt+0xae0>  // b.none
  4026fc:	ldrb	w19, [x20], #1
  402700:	cmp	w19, #0xb
  402704:	b.eq	4026ec <ferror@plt+0xa4c>  // b.none
  402708:	b.ls	4026cc <ferror@plt+0xa2c>  // b.plast
  40270c:	cmp	w19, #0xd
  402710:	b.ls	4026e0 <ferror@plt+0xa40>  // b.plast
  402714:	cmp	w19, #0x20
  402718:	b.ne	402730 <ferror@plt+0xa90>  // b.any
  40271c:	add	x23, x23, #0x1
  402720:	b	4026ec <ferror@plt+0xa4c>
  402724:	and	x23, x23, #0xfffffffffffffff8
  402728:	add	x23, x23, #0x8
  40272c:	b	4026ec <ferror@plt+0xa4c>
  402730:	bl	401b50 <__ctype_b_loc@plt>
  402734:	and	x1, x19, #0xff
  402738:	ldr	x0, [x0]
  40273c:	ldrh	w0, [x0, x1, lsl #1]
  402740:	tbz	w0, #14, 4026f4 <ferror@plt+0xa54>
  402744:	add	x23, x23, #0x1
  402748:	tbnz	w0, #13, 4026ec <ferror@plt+0xa4c>
  40274c:	mov	w0, w19
  402750:	bl	401aa0 <btowc@plt>
  402754:	bl	401e00 <ferror@plt+0x160>
  402758:	cbnz	w0, 4026ec <ferror@plt+0xa4c>
  40275c:	mov	w27, #0x1                   	// #1
  402760:	b	4026f4 <ferror@plt+0xa54>
  402764:	mov	x23, #0x0                   	// #0
  402768:	mov	w27, #0x0                   	// #0
  40276c:	mov	x21, #0x0                   	// #0
  402770:	mov	x28, #0x0                   	// #0
  402774:	mov	x25, #0x0                   	// #0
  402778:	mov	x22, #0x0                   	// #0
  40277c:	mov	w26, #0x0                   	// #0
  402780:	mov	x2, #0x4000                	// #16384
  402784:	add	x1, sp, #0xa8
  402788:	ldr	w0, [sp, #112]
  40278c:	bl	405a1c <ferror@plt+0x3d7c>
  402790:	cbz	x0, 4027b0 <ferror@plt+0xb10>
  402794:	cmn	x0, #0x1
  402798:	b.eq	402694 <ferror@plt+0x9f4>  // b.none
  40279c:	add	x28, x28, x0
  4027a0:	add	x1, sp, #0xa8
  4027a4:	add	x24, x1, x0
  4027a8:	mov	x20, x1
  4027ac:	b	4026fc <ferror@plt+0xa5c>
  4027b0:	mov	w0, #0x1                   	// #1
  4027b4:	str	w0, [sp, #120]
  4027b8:	cmp	x21, x23
  4027bc:	csel	x21, x21, x23, cs  // cs = hs, nlast
  4027c0:	add	x27, x25, w27, uxtb
  4027c4:	mov	x24, #0x0                   	// #0
  4027c8:	ldp	x25, x26, [sp, #64]
  4027cc:	b	4023b0 <ferror@plt+0x710>
  4027d0:	mov	x28, #0x0                   	// #0
  4027d4:	mov	w3, #0x2                   	// #2
  4027d8:	mov	x2, #0x0                   	// #0
  4027dc:	mov	x1, #0x0                   	// #0
  4027e0:	ldr	w0, [sp, #112]
  4027e4:	bl	403968 <ferror@plt+0x1cc8>
  4027e8:	mov	x19, #0x4000                	// #16384
  4027ec:	mov	x2, x19
  4027f0:	add	x1, sp, #0xa8
  4027f4:	ldr	w0, [sp, #112]
  4027f8:	bl	405a1c <ferror@plt+0x3d7c>
  4027fc:	mov	x22, x0
  402800:	cbz	x0, 4022b0 <ferror@plt+0x610>
  402804:	cmn	x22, #0x1
  402808:	b.eq	402268 <ferror@plt+0x5c8>  // b.none
  40280c:	add	x28, x28, x22
  402810:	b	4027ec <ferror@plt+0xb4c>
  402814:	mov	x28, #0x0                   	// #0
  402818:	b	4027d4 <ferror@plt+0xb34>
  40281c:	mov	x28, #0x0                   	// #0
  402820:	b	4027d4 <ferror@plt+0xb34>
  402824:	ldr	w23, [sp, #156]
  402828:	cmp	w23, #0xb
  40282c:	b.eq	4025c4 <ferror@plt+0x924>  // b.none
  402830:	b.ls	402848 <ferror@plt+0xba8>  // b.plast
  402834:	cmp	w23, #0xd
  402838:	b.ls	4025b0 <ferror@plt+0x910>  // b.plast
  40283c:	cmp	w23, #0x20
  402840:	b.eq	402624 <ferror@plt+0x984>  // b.none
  402844:	b	4024f0 <ferror@plt+0x850>
  402848:	cmp	w23, #0x9
  40284c:	b.eq	402630 <ferror@plt+0x990>  // b.none
  402850:	cmp	w23, #0xa
  402854:	b.eq	40249c <ferror@plt+0x7fc>  // b.none
  402858:	b	4024f0 <ferror@plt+0x850>
  40285c:	bl	401b50 <__ctype_b_loc@plt>
  402860:	ldrb	w1, [x21]
  402864:	ldr	x0, [x0]
  402868:	ldrh	w0, [x0, x1, lsl #1]
  40286c:	mov	x19, #0x1                   	// #1
  402870:	tbz	w0, #14, 4025d0 <ferror@plt+0x930>
  402874:	add	x25, x25, #0x1
  402878:	tbnz	w0, #13, 402644 <ferror@plt+0x9a4>
  40287c:	mov	x19, #0x1                   	// #1
  402880:	str	w19, [sp, #100]
  402884:	b	4025d0 <ferror@plt+0x930>
  402888:	mov	w3, #0x2                   	// #2
  40288c:	mov	x2, #0x0                   	// #0
  402890:	mov	x1, #0x0                   	// #0
  402894:	ldr	w0, [sp, #112]
  402898:	bl	403968 <ferror@plt+0x1cc8>
  40289c:	b	4021a0 <ferror@plt+0x500>
  4028a0:	mov	w3, #0x2                   	// #2
  4028a4:	mov	x2, #0x0                   	// #0
  4028a8:	mov	x1, #0x0                   	// #0
  4028ac:	ldr	w0, [sp, #112]
  4028b0:	bl	403968 <ferror@plt+0x1cc8>
  4028b4:	ldr	w0, [sp, #116]
  4028b8:	eor	w19, w0, #0x1
  4028bc:	ands	w19, w20, w19
  4028c0:	b.ne	4021a0 <ferror@plt+0x500>  // b.any
  4028c4:	stp	x25, x26, [sp, #64]
  4028c8:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  4028cc:	cmp	x0, #0x1
  4028d0:	b.ls	402764 <ferror@plt+0xac4>  // b.plast
  4028d4:	str	xzr, [sp, #160]
  4028d8:	mov	x20, #0x0                   	// #0
  4028dc:	mov	w26, #0x0                   	// #0
  4028e0:	mov	x25, #0x0                   	// #0
  4028e4:	str	wzr, [sp, #100]
  4028e8:	str	xzr, [sp, #104]
  4028ec:	mov	x28, #0x0                   	// #0
  4028f0:	mov	x24, #0x0                   	// #0
  4028f4:	mov	x27, #0x0                   	// #0
  4028f8:	mov	x22, #0x0                   	// #0
  4028fc:	b	40255c <ferror@plt+0x8bc>
  402900:	stp	x29, x30, [sp, #-160]!
  402904:	mov	x29, sp
  402908:	stp	x19, x20, [sp, #16]
  40290c:	str	x21, [sp, #32]
  402910:	mov	w19, w0
  402914:	cbz	w0, 402954 <ferror@plt+0xcb4>
  402918:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40291c:	ldr	x20, [x0, #664]
  402920:	mov	w2, #0x5                   	// #5
  402924:	adrp	x1, 406000 <ferror@plt+0x4360>
  402928:	add	x1, x1, #0xb20
  40292c:	mov	x0, #0x0                   	// #0
  402930:	bl	401c00 <dcgettext@plt>
  402934:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402938:	ldr	x3, [x1, #816]
  40293c:	mov	x2, x0
  402940:	mov	w1, #0x1                   	// #1
  402944:	mov	x0, x20
  402948:	bl	401b30 <__fprintf_chk@plt>
  40294c:	mov	w0, w19
  402950:	bl	4018d0 <exit@plt>
  402954:	mov	w2, #0x5                   	// #5
  402958:	adrp	x1, 406000 <ferror@plt+0x4360>
  40295c:	add	x1, x1, #0xb48
  402960:	mov	x0, #0x0                   	// #0
  402964:	bl	401c00 <dcgettext@plt>
  402968:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40296c:	ldr	x2, [x1, #816]
  402970:	mov	x3, x2
  402974:	mov	x1, x0
  402978:	mov	w0, #0x1                   	// #1
  40297c:	bl	401a20 <__printf_chk@plt>
  402980:	mov	w2, #0x5                   	// #5
  402984:	adrp	x1, 406000 <ferror@plt+0x4360>
  402988:	add	x1, x1, #0xb90
  40298c:	mov	x0, #0x0                   	// #0
  402990:	bl	401c00 <dcgettext@plt>
  402994:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402998:	ldr	x1, [x20, #688]
  40299c:	bl	401c10 <fputs_unlocked@plt>
  4029a0:	mov	w2, #0x5                   	// #5
  4029a4:	adrp	x1, 406000 <ferror@plt+0x4360>
  4029a8:	add	x1, x1, #0xc48
  4029ac:	mov	x0, #0x0                   	// #0
  4029b0:	bl	401c00 <dcgettext@plt>
  4029b4:	ldr	x1, [x20, #688]
  4029b8:	bl	401c10 <fputs_unlocked@plt>
  4029bc:	mov	w2, #0x5                   	// #5
  4029c0:	adrp	x1, 406000 <ferror@plt+0x4360>
  4029c4:	add	x1, x1, #0xc80
  4029c8:	mov	x0, #0x0                   	// #0
  4029cc:	bl	401c00 <dcgettext@plt>
  4029d0:	ldr	x1, [x20, #688]
  4029d4:	bl	401c10 <fputs_unlocked@plt>
  4029d8:	mov	w2, #0x5                   	// #5
  4029dc:	adrp	x1, 406000 <ferror@plt+0x4360>
  4029e0:	add	x1, x1, #0xdb0
  4029e4:	mov	x0, #0x0                   	// #0
  4029e8:	bl	401c00 <dcgettext@plt>
  4029ec:	ldr	x1, [x20, #688]
  4029f0:	bl	401c10 <fputs_unlocked@plt>
  4029f4:	mov	w2, #0x5                   	// #5
  4029f8:	adrp	x1, 406000 <ferror@plt+0x4360>
  4029fc:	add	x1, x1, #0xee0
  402a00:	mov	x0, #0x0                   	// #0
  402a04:	bl	401c00 <dcgettext@plt>
  402a08:	ldr	x1, [x20, #688]
  402a0c:	bl	401c10 <fputs_unlocked@plt>
  402a10:	mov	w2, #0x5                   	// #5
  402a14:	adrp	x1, 406000 <ferror@plt+0x4360>
  402a18:	add	x1, x1, #0xf10
  402a1c:	mov	x0, #0x0                   	// #0
  402a20:	bl	401c00 <dcgettext@plt>
  402a24:	ldr	x1, [x20, #688]
  402a28:	bl	401c10 <fputs_unlocked@plt>
  402a2c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  402a30:	add	x2, x2, #0x238
  402a34:	add	x0, x2, #0x8
  402a38:	ldr	x1, [x2, #8]
  402a3c:	ldr	x2, [x2, #16]
  402a40:	str	x1, [sp, #48]
  402a44:	str	x2, [sp, #56]
  402a48:	ldp	x2, x3, [x0, #16]
  402a4c:	stp	x2, x3, [sp, #64]
  402a50:	ldp	x2, x3, [x0, #32]
  402a54:	stp	x2, x3, [sp, #80]
  402a58:	ldp	x2, x3, [x0, #48]
  402a5c:	stp	x2, x3, [sp, #96]
  402a60:	ldp	x2, x3, [x0, #64]
  402a64:	stp	x2, x3, [sp, #112]
  402a68:	ldp	x2, x3, [x0, #80]
  402a6c:	stp	x2, x3, [sp, #128]
  402a70:	ldp	x2, x3, [x0, #96]
  402a74:	stp	x2, x3, [sp, #144]
  402a78:	add	x20, sp, #0x30
  402a7c:	cbz	x1, 402aa0 <ferror@plt+0xe00>
  402a80:	add	x20, sp, #0x30
  402a84:	adrp	x21, 406000 <ferror@plt+0x4360>
  402a88:	add	x21, x21, #0xb08
  402a8c:	mov	x0, x21
  402a90:	bl	401b40 <strcmp@plt>
  402a94:	cbz	w0, 402aa0 <ferror@plt+0xe00>
  402a98:	ldr	x1, [x20, #16]!
  402a9c:	cbnz	x1, 402a8c <ferror@plt+0xdec>
  402aa0:	ldr	x20, [x20, #8]
  402aa4:	cbz	x20, 402bf4 <ferror@plt+0xf54>
  402aa8:	mov	w2, #0x5                   	// #5
  402aac:	adrp	x1, 406000 <ferror@plt+0x4360>
  402ab0:	add	x1, x1, #0xf48
  402ab4:	mov	x0, #0x0                   	// #0
  402ab8:	bl	401c00 <dcgettext@plt>
  402abc:	adrp	x3, 406000 <ferror@plt+0x4360>
  402ac0:	add	x3, x3, #0xf60
  402ac4:	adrp	x2, 406000 <ferror@plt+0x4360>
  402ac8:	add	x2, x2, #0xf88
  402acc:	mov	x1, x0
  402ad0:	mov	w0, #0x1                   	// #1
  402ad4:	bl	401a20 <__printf_chk@plt>
  402ad8:	mov	x1, #0x0                   	// #0
  402adc:	mov	w0, #0x5                   	// #5
  402ae0:	bl	401c90 <setlocale@plt>
  402ae4:	cbz	x0, 402afc <ferror@plt+0xe5c>
  402ae8:	mov	x2, #0x3                   	// #3
  402aec:	adrp	x1, 406000 <ferror@plt+0x4360>
  402af0:	add	x1, x1, #0xf98
  402af4:	bl	4019e0 <strncmp@plt>
  402af8:	cbnz	w0, 402b78 <ferror@plt+0xed8>
  402afc:	mov	w2, #0x5                   	// #5
  402b00:	adrp	x1, 406000 <ferror@plt+0x4360>
  402b04:	add	x1, x1, #0xfe8
  402b08:	mov	x0, #0x0                   	// #0
  402b0c:	bl	401c00 <dcgettext@plt>
  402b10:	adrp	x21, 406000 <ferror@plt+0x4360>
  402b14:	add	x21, x21, #0xb08
  402b18:	mov	x3, x21
  402b1c:	adrp	x2, 406000 <ferror@plt+0x4360>
  402b20:	add	x2, x2, #0xf60
  402b24:	mov	x1, x0
  402b28:	mov	w0, #0x1                   	// #1
  402b2c:	bl	401a20 <__printf_chk@plt>
  402b30:	mov	w2, #0x5                   	// #5
  402b34:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  402b38:	add	x1, x1, #0x8
  402b3c:	mov	x0, #0x0                   	// #0
  402b40:	bl	401c00 <dcgettext@plt>
  402b44:	mov	x1, x0
  402b48:	adrp	x3, 407000 <_obstack_memory_used@@Base+0x7a8>
  402b4c:	add	x0, x3, #0xb98
  402b50:	adrp	x3, 406000 <ferror@plt+0x4360>
  402b54:	add	x3, x3, #0xb10
  402b58:	cmp	x20, x21
  402b5c:	csel	x3, x3, x0, eq  // eq = none
  402b60:	mov	x2, x20
  402b64:	mov	w0, #0x1                   	// #1
  402b68:	bl	401a20 <__printf_chk@plt>
  402b6c:	b	40294c <ferror@plt+0xcac>
  402b70:	adrp	x20, 406000 <ferror@plt+0x4360>
  402b74:	add	x20, x20, #0xb08
  402b78:	mov	w2, #0x5                   	// #5
  402b7c:	adrp	x1, 406000 <ferror@plt+0x4360>
  402b80:	add	x1, x1, #0xfa0
  402b84:	mov	x0, #0x0                   	// #0
  402b88:	bl	401c00 <dcgettext@plt>
  402b8c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402b90:	ldr	x1, [x1, #688]
  402b94:	bl	401c10 <fputs_unlocked@plt>
  402b98:	b	402afc <ferror@plt+0xe5c>
  402b9c:	mov	w2, #0x5                   	// #5
  402ba0:	adrp	x1, 406000 <ferror@plt+0x4360>
  402ba4:	add	x1, x1, #0xfe8
  402ba8:	mov	x0, #0x0                   	// #0
  402bac:	bl	401c00 <dcgettext@plt>
  402bb0:	adrp	x20, 406000 <ferror@plt+0x4360>
  402bb4:	add	x20, x20, #0xb08
  402bb8:	mov	x3, x20
  402bbc:	adrp	x2, 406000 <ferror@plt+0x4360>
  402bc0:	add	x2, x2, #0xf60
  402bc4:	mov	x1, x0
  402bc8:	mov	w0, #0x1                   	// #1
  402bcc:	bl	401a20 <__printf_chk@plt>
  402bd0:	mov	w2, #0x5                   	// #5
  402bd4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  402bd8:	add	x1, x1, #0x8
  402bdc:	mov	x0, #0x0                   	// #0
  402be0:	bl	401c00 <dcgettext@plt>
  402be4:	mov	x1, x0
  402be8:	adrp	x2, 406000 <ferror@plt+0x4360>
  402bec:	add	x3, x2, #0xb10
  402bf0:	b	402b60 <ferror@plt+0xec0>
  402bf4:	mov	w2, #0x5                   	// #5
  402bf8:	adrp	x1, 406000 <ferror@plt+0x4360>
  402bfc:	add	x1, x1, #0xf48
  402c00:	mov	x0, #0x0                   	// #0
  402c04:	bl	401c00 <dcgettext@plt>
  402c08:	adrp	x3, 406000 <ferror@plt+0x4360>
  402c0c:	add	x3, x3, #0xf60
  402c10:	adrp	x2, 406000 <ferror@plt+0x4360>
  402c14:	add	x2, x2, #0xf88
  402c18:	mov	x1, x0
  402c1c:	mov	w0, #0x1                   	// #1
  402c20:	bl	401a20 <__printf_chk@plt>
  402c24:	mov	x1, #0x0                   	// #0
  402c28:	mov	w0, #0x5                   	// #5
  402c2c:	bl	401c90 <setlocale@plt>
  402c30:	cbz	x0, 402b9c <ferror@plt+0xefc>
  402c34:	mov	x2, #0x3                   	// #3
  402c38:	adrp	x1, 406000 <ferror@plt+0x4360>
  402c3c:	add	x1, x1, #0xf98
  402c40:	bl	4019e0 <strncmp@plt>
  402c44:	cbnz	w0, 402b70 <ferror@plt+0xed0>
  402c48:	mov	w2, #0x5                   	// #5
  402c4c:	adrp	x1, 406000 <ferror@plt+0x4360>
  402c50:	add	x1, x1, #0xfe8
  402c54:	mov	x0, #0x0                   	// #0
  402c58:	bl	401c00 <dcgettext@plt>
  402c5c:	adrp	x20, 406000 <ferror@plt+0x4360>
  402c60:	add	x20, x20, #0xb08
  402c64:	mov	x3, x20
  402c68:	adrp	x2, 406000 <ferror@plt+0x4360>
  402c6c:	add	x2, x2, #0xf60
  402c70:	mov	x1, x0
  402c74:	mov	w0, #0x1                   	// #1
  402c78:	bl	401a20 <__printf_chk@plt>
  402c7c:	mov	w2, #0x5                   	// #5
  402c80:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  402c84:	add	x1, x1, #0x8
  402c88:	mov	x0, #0x0                   	// #0
  402c8c:	bl	401c00 <dcgettext@plt>
  402c90:	mov	x1, x0
  402c94:	adrp	x3, 406000 <ferror@plt+0x4360>
  402c98:	add	x3, x3, #0xb10
  402c9c:	b	402b60 <ferror@plt+0xec0>
  402ca0:	sub	sp, sp, #0x220
  402ca4:	stp	x29, x30, [sp]
  402ca8:	mov	x29, sp
  402cac:	stp	x19, x20, [sp, #16]
  402cb0:	stp	x21, x22, [sp, #32]
  402cb4:	stp	x23, x24, [sp, #48]
  402cb8:	stp	x25, x26, [sp, #64]
  402cbc:	stp	x27, x28, [sp, #80]
  402cc0:	mov	w22, w0
  402cc4:	mov	x20, x1
  402cc8:	ldr	x0, [x1]
  402ccc:	bl	403bb4 <ferror@plt+0x1f14>
  402cd0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  402cd4:	add	x1, x1, #0xb98
  402cd8:	mov	w0, #0x6                   	// #6
  402cdc:	bl	401c90 <setlocale@plt>
  402ce0:	adrp	x19, 406000 <ferror@plt+0x4360>
  402ce4:	add	x19, x19, #0xa78
  402ce8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  402cec:	add	x1, x1, #0x40
  402cf0:	mov	x0, x19
  402cf4:	bl	4019f0 <bindtextdomain@plt>
  402cf8:	mov	x0, x19
  402cfc:	bl	401b10 <textdomain@plt>
  402d00:	adrp	x0, 403000 <ferror@plt+0x1360>
  402d04:	add	x0, x0, #0x884
  402d08:	bl	406a28 <_obstack_memory_used@@Base+0x1d0>
  402d0c:	bl	401a60 <getpagesize@plt>
  402d10:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402d14:	add	x19, x21, #0x2d0
  402d18:	sxtw	x0, w0
  402d1c:	str	x0, [x19, #16]
  402d20:	mov	x3, #0x0                   	// #0
  402d24:	mov	w2, #0x1                   	// #1
  402d28:	mov	x1, #0x0                   	// #0
  402d2c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402d30:	ldr	x0, [x0, #688]
  402d34:	bl	401920 <setvbuf@plt>
  402d38:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  402d3c:	add	x0, x0, #0x58
  402d40:	bl	401c60 <getenv@plt>
  402d44:	cmp	x0, #0x0
  402d48:	cset	w0, ne  // ne = any
  402d4c:	strb	w0, [x21, #720]
  402d50:	strb	wzr, [x19, #10]
  402d54:	strb	wzr, [x19, #9]
  402d58:	strb	wzr, [x19, #8]
  402d5c:	strb	wzr, [x19, #1]
  402d60:	strb	wzr, [x19, #11]
  402d64:	str	xzr, [x19, #56]
  402d68:	str	xzr, [x19, #48]
  402d6c:	str	xzr, [x19, #40]
  402d70:	str	xzr, [x19, #32]
  402d74:	str	xzr, [x19, #24]
  402d78:	mov	x21, #0x0                   	// #0
  402d7c:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  402d80:	add	x19, x19, #0x238
  402d84:	add	x19, x19, #0x78
  402d88:	adrp	x23, 407000 <_obstack_memory_used@@Base+0x7a8>
  402d8c:	add	x23, x23, #0x88
  402d90:	adrp	x24, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402d94:	add	x24, x24, #0x2d0
  402d98:	mov	w25, #0x1                   	// #1
  402d9c:	mov	x4, #0x0                   	// #0
  402da0:	mov	x3, x19
  402da4:	mov	x2, x23
  402da8:	mov	x1, x20
  402dac:	mov	w0, w22
  402db0:	bl	401b20 <getopt_long@plt>
  402db4:	cmn	w0, #0x1
  402db8:	b.eq	402e94 <ferror@plt+0x11f4>  // b.none
  402dbc:	cmp	w0, #0x6c
  402dc0:	b.eq	402e70 <ferror@plt+0x11d0>  // b.none
  402dc4:	b.gt	402e44 <ferror@plt+0x11a4>
  402dc8:	cmp	w0, #0x4c
  402dcc:	b.eq	402e80 <ferror@plt+0x11e0>  // b.none
  402dd0:	b.le	402de4 <ferror@plt+0x1144>
  402dd4:	cmp	w0, #0x63
  402dd8:	b.ne	402e88 <ferror@plt+0x11e8>  // b.any
  402ddc:	strb	w25, [x24, #10]
  402de0:	b	402d9c <ferror@plt+0x10fc>
  402de4:	cmn	w0, #0x3
  402de8:	b.ne	402e30 <ferror@plt+0x1190>  // b.any
  402dec:	str	d8, [sp, #96]
  402df0:	mov	x6, #0x0                   	// #0
  402df4:	adrp	x5, 407000 <_obstack_memory_used@@Base+0x7a8>
  402df8:	add	x5, x5, #0x68
  402dfc:	adrp	x4, 407000 <_obstack_memory_used@@Base+0x7a8>
  402e00:	add	x4, x4, #0x78
  402e04:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402e08:	ldr	x3, [x0, #544]
  402e0c:	adrp	x2, 406000 <ferror@plt+0x4360>
  402e10:	add	x2, x2, #0xf88
  402e14:	adrp	x1, 406000 <ferror@plt+0x4360>
  402e18:	add	x1, x1, #0xb08
  402e1c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402e20:	ldr	x0, [x0, #688]
  402e24:	bl	405ef8 <ferror@plt+0x4258>
  402e28:	mov	w0, #0x0                   	// #0
  402e2c:	bl	4018d0 <exit@plt>
  402e30:	cmn	w0, #0x2
  402e34:	b.ne	402e88 <ferror@plt+0x11e8>  // b.any
  402e38:	str	d8, [sp, #96]
  402e3c:	mov	w0, #0x0                   	// #0
  402e40:	bl	402900 <ferror@plt+0xc60>
  402e44:	cmp	w0, #0x77
  402e48:	b.eq	402e78 <ferror@plt+0x11d8>  // b.none
  402e4c:	cmp	w0, #0x100
  402e50:	b.ne	402e60 <ferror@plt+0x11c0>  // b.any
  402e54:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402e58:	ldr	x21, [x0, #672]
  402e5c:	b	402d9c <ferror@plt+0x10fc>
  402e60:	cmp	w0, #0x6d
  402e64:	b.ne	402e88 <ferror@plt+0x11e8>  // b.any
  402e68:	strb	w25, [x24, #9]
  402e6c:	b	402d9c <ferror@plt+0x10fc>
  402e70:	strb	w25, [x24, #1]
  402e74:	b	402d9c <ferror@plt+0x10fc>
  402e78:	strb	w25, [x24, #8]
  402e7c:	b	402d9c <ferror@plt+0x10fc>
  402e80:	strb	w25, [x24, #11]
  402e84:	b	402d9c <ferror@plt+0x10fc>
  402e88:	str	d8, [sp, #96]
  402e8c:	mov	w0, #0x1                   	// #1
  402e90:	bl	402900 <ferror@plt+0xc60>
  402e94:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402e98:	ldrb	w0, [x0, #721]
  402e9c:	cbnz	w0, 402ee8 <ferror@plt+0x1248>
  402ea0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402ea4:	ldrb	w0, [x0, #728]
  402ea8:	cbnz	w0, 402ee8 <ferror@plt+0x1248>
  402eac:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402eb0:	ldrb	w0, [x0, #729]
  402eb4:	cbnz	w0, 402ee8 <ferror@plt+0x1248>
  402eb8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402ebc:	ldrb	w0, [x0, #730]
  402ec0:	cbnz	w0, 402ee8 <ferror@plt+0x1248>
  402ec4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402ec8:	ldrb	w0, [x0, #731]
  402ecc:	cbnz	w0, 402ee8 <ferror@plt+0x1248>
  402ed0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402ed4:	add	x0, x0, #0x2d0
  402ed8:	mov	w1, #0x1                   	// #1
  402edc:	strb	w1, [x0, #10]
  402ee0:	strb	w1, [x0, #8]
  402ee4:	strb	w1, [x0, #1]
  402ee8:	cbz	x21, 40317c <ferror@plt+0x14dc>
  402eec:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402ef0:	ldr	w0, [x0, #680]
  402ef4:	cmp	w0, w22
  402ef8:	b.lt	402fa4 <ferror@plt+0x1304>  // b.tstop
  402efc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  402f00:	add	x1, x1, #0xe0
  402f04:	mov	x0, x21
  402f08:	bl	401b40 <strcmp@plt>
  402f0c:	cbnz	w0, 403024 <ferror@plt+0x1384>
  402f10:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402f14:	ldr	x19, [x0, #696]
  402f18:	mov	x0, x19
  402f1c:	bl	401950 <fileno@plt>
  402f20:	add	x2, sp, #0x80
  402f24:	mov	w1, w0
  402f28:	mov	w0, #0x0                   	// #0
  402f2c:	bl	401bf0 <__fxstat@plt>
  402f30:	cbnz	w0, 402f44 <ferror@plt+0x12a4>
  402f34:	ldr	w0, [sp, #144]
  402f38:	and	w0, w0, #0xf000
  402f3c:	cmp	w0, #0x8, lsl #12
  402f40:	b.eq	403080 <ferror@plt+0x13e0>  // b.none
  402f44:	mov	x0, x19
  402f48:	bl	40372c <ferror@plt+0x1a8c>
  402f4c:	mov	x23, x0
  402f50:	cbz	x0, 4031fc <ferror@plt+0x155c>
  402f54:	mov	x0, #0x1                   	// #1
  402f58:	str	wzr, [sp, #124]
  402f5c:	mov	x20, #0x0                   	// #0
  402f60:	mov	x19, #0x0                   	// #0
  402f64:	mov	x1, #0x88                  	// #136
  402f68:	mul	x0, x0, x1
  402f6c:	bl	405ffc <ferror@plt+0x435c>
  402f70:	mov	x26, x0
  402f74:	cbnz	x19, 4031c4 <ferror@plt+0x1524>
  402f78:	mov	w0, #0x1                   	// #1
  402f7c:	str	w0, [x26]
  402f80:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402f84:	str	w0, [x1, #724]
  402f88:	mov	x22, #0x0                   	// #0
  402f8c:	mov	w25, #0x1                   	// #1
  402f90:	adrp	x27, 407000 <_obstack_memory_used@@Base+0x7a8>
  402f94:	add	x27, x27, #0x1b8
  402f98:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  402f9c:	add	x28, x0, #0x1e0
  402fa0:	b	403670 <ferror@plt+0x19d0>
  402fa4:	str	d8, [sp, #96]
  402fa8:	mov	w2, #0x5                   	// #5
  402fac:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  402fb0:	add	x1, x1, #0x90
  402fb4:	mov	x0, #0x0                   	// #0
  402fb8:	bl	401c00 <dcgettext@plt>
  402fbc:	mov	x19, x0
  402fc0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402fc4:	ldrsw	x0, [x0, #680]
  402fc8:	ldr	x1, [x20, x0, lsl #3]
  402fcc:	mov	w0, #0x4                   	// #4
  402fd0:	bl	4053cc <ferror@plt+0x372c>
  402fd4:	mov	x3, x0
  402fd8:	mov	x2, x19
  402fdc:	mov	w1, #0x0                   	// #0
  402fe0:	mov	w0, #0x0                   	// #0
  402fe4:	bl	4018e0 <error@plt>
  402fe8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  402fec:	ldr	x19, [x0, #664]
  402ff0:	mov	w2, #0x5                   	// #5
  402ff4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  402ff8:	add	x1, x1, #0xa8
  402ffc:	mov	x0, #0x0                   	// #0
  403000:	bl	401c00 <dcgettext@plt>
  403004:	mov	x3, x0
  403008:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  40300c:	add	x2, x2, #0x898
  403010:	mov	w1, #0x1                   	// #1
  403014:	mov	x0, x19
  403018:	bl	401b30 <__fprintf_chk@plt>
  40301c:	mov	w0, #0x1                   	// #1
  403020:	bl	402900 <ferror@plt+0xc60>
  403024:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403028:	add	x1, x1, #0xe8
  40302c:	mov	x0, x21
  403030:	bl	401990 <fopen@plt>
  403034:	mov	x19, x0
  403038:	cbnz	x0, 402f18 <ferror@plt+0x1278>
  40303c:	str	d8, [sp, #96]
  403040:	bl	401c50 <__errno_location@plt>
  403044:	ldr	w20, [x0]
  403048:	mov	w2, #0x5                   	// #5
  40304c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403050:	add	x1, x1, #0xf0
  403054:	mov	x0, #0x0                   	// #0
  403058:	bl	401c00 <dcgettext@plt>
  40305c:	mov	x19, x0
  403060:	mov	x1, x21
  403064:	mov	w0, #0x4                   	// #4
  403068:	bl	4053cc <ferror@plt+0x372c>
  40306c:	mov	x3, x0
  403070:	mov	x2, x19
  403074:	mov	w1, w20
  403078:	mov	w0, #0x1                   	// #1
  40307c:	bl	4018e0 <error@plt>
  403080:	str	d8, [sp, #96]
  403084:	ldr	d8, [sp, #176]
  403088:	scvtf	d8, d8
  40308c:	bl	403b2c <ferror@plt+0x1e8c>
  403090:	fmov	d1, #5.000000000000000000e-01
  403094:	fmul	d0, d0, d1
  403098:	mov	x0, #0x4164000000000000    	// #4711891110136381440
  40309c:	fmov	d1, x0
  4030a0:	fcmpe	d0, d1
  4030a4:	b.le	4030c0 <ferror@plt+0x1420>
  4030a8:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  4030ac:	ldr	d0, [x0, #560]
  4030b0:	fcmpe	d8, d0
  4030b4:	b.ls	4030d0 <ferror@plt+0x1430>  // b.plast
  4030b8:	ldr	d8, [sp, #96]
  4030bc:	b	402f44 <ferror@plt+0x12a4>
  4030c0:	bl	403b2c <ferror@plt+0x1e8c>
  4030c4:	fmov	d1, #5.000000000000000000e-01
  4030c8:	fmul	d0, d0, d1
  4030cc:	b	4030b0 <ferror@plt+0x1410>
  4030d0:	add	x0, sp, #0x100
  4030d4:	bl	40578c <ferror@plt+0x3aec>
  4030d8:	add	x1, sp, #0x100
  4030dc:	mov	x0, x19
  4030e0:	bl	405854 <ferror@plt+0x3bb4>
  4030e4:	ands	w0, w0, #0xff
  4030e8:	str	w0, [sp, #124]
  4030ec:	b.eq	403144 <ferror@plt+0x14a4>  // b.none
  4030f0:	mov	x0, x19
  4030f4:	bl	4062cc <ferror@plt+0x462c>
  4030f8:	cbnz	w0, 403144 <ferror@plt+0x14a4>
  4030fc:	ldr	x20, [sp, #264]
  403100:	ldr	x19, [sp, #256]
  403104:	mov	x0, x20
  403108:	bl	4036f8 <ferror@plt+0x1a58>
  40310c:	mov	x23, x0
  403110:	cbz	x0, 403200 <ferror@plt+0x1560>
  403114:	cmp	x19, #0x0
  403118:	csinc	x0, x19, xzr, ne  // ne = any
  40311c:	mov	x1, #0x88                  	// #136
  403120:	mul	x2, x0, x1
  403124:	umulh	x1, x0, x1
  403128:	cmp	x1, #0x0
  40312c:	cset	x1, ne  // ne = any
  403130:	cmp	x2, #0x0
  403134:	csinc	x1, x1, xzr, ge  // ge = tcont
  403138:	cbnz	w1, 403204 <ferror@plt+0x1564>
  40313c:	ldr	d8, [sp, #96]
  403140:	b	402f64 <ferror@plt+0x12c4>
  403144:	mov	w2, #0x5                   	// #5
  403148:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  40314c:	add	x1, x1, #0x110
  403150:	mov	x0, #0x0                   	// #0
  403154:	bl	401c00 <dcgettext@plt>
  403158:	mov	x19, x0
  40315c:	mov	x1, x21
  403160:	mov	w0, #0x4                   	// #4
  403164:	bl	4053cc <ferror@plt+0x372c>
  403168:	mov	x3, x0
  40316c:	mov	x2, x19
  403170:	mov	w1, #0x0                   	// #0
  403174:	mov	w0, #0x1                   	// #1
  403178:	bl	4018e0 <error@plt>
  40317c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403180:	ldr	w19, [x0, #680]
  403184:	cmp	w19, w22
  403188:	b.ge	4031e0 <ferror@plt+0x1540>  // b.tcont
  40318c:	add	x20, x20, w19, sxtw #3
  403190:	sub	w19, w22, w19
  403194:	sxtw	x19, w19
  403198:	mov	x0, x20
  40319c:	bl	4036f8 <ferror@plt+0x1a58>
  4031a0:	mov	x23, x0
  4031a4:	cbz	x0, 4031f4 <ferror@plt+0x1554>
  4031a8:	cmp	x19, #0x0
  4031ac:	csinc	x1, x19, xzr, ne  // ne = any
  4031b0:	mov	x0, #0x88                  	// #136
  4031b4:	mul	x0, x1, x0
  4031b8:	bl	405ffc <ferror@plt+0x435c>
  4031bc:	mov	x26, x0
  4031c0:	str	wzr, [sp, #124]
  4031c4:	cmp	x19, #0x1
  4031c8:	b.eq	403208 <ferror@plt+0x1568>  // b.none
  4031cc:	add	x24, x26, #0x8
  4031d0:	mov	x22, #0x0                   	// #0
  4031d4:	adrp	x25, 407000 <_obstack_memory_used@@Base+0x7a8>
  4031d8:	add	x25, x25, #0xe0
  4031dc:	b	403264 <ferror@plt+0x15c4>
  4031e0:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4031e4:	add	x20, x20, #0x2d0
  4031e8:	add	x20, x20, #0x40
  4031ec:	mov	x19, #0x1                   	// #1
  4031f0:	b	403198 <ferror@plt+0x14f8>
  4031f4:	str	d8, [sp, #96]
  4031f8:	b	403200 <ferror@plt+0x1560>
  4031fc:	str	d8, [sp, #96]
  403200:	bl	406288 <ferror@plt+0x45e8>
  403204:	bl	406288 <ferror@plt+0x45e8>
  403208:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40320c:	add	x1, x1, #0x2d0
  403210:	ldrb	w0, [x1, #1]
  403214:	ldrb	w2, [x1, #8]
  403218:	add	w0, w0, w2
  40321c:	ldrb	w2, [x1, #9]
  403220:	add	w0, w0, w2
  403224:	ldrb	w2, [x1, #10]
  403228:	add	w0, w0, w2
  40322c:	ldrb	w1, [x1, #11]
  403230:	add	w0, w0, w1
  403234:	cmp	w0, #0x1
  403238:	b.ne	4031cc <ferror@plt+0x152c>  // b.any
  40323c:	b	402f78 <ferror@plt+0x12d8>
  403240:	mov	x2, x24
  403244:	mov	w1, #0x0                   	// #0
  403248:	mov	w0, #0x0                   	// #0
  40324c:	bl	401bf0 <__fxstat@plt>
  403250:	stur	w0, [x24, #-8]
  403254:	add	x22, x22, #0x1
  403258:	add	x24, x24, #0x88
  40325c:	cmp	x22, x19
  403260:	b.eq	4035d4 <ferror@plt+0x1934>  // b.none
  403264:	ldr	x27, [x20, x22, lsl #3]
  403268:	cbz	x27, 403240 <ferror@plt+0x15a0>
  40326c:	mov	x1, x25
  403270:	mov	x0, x27
  403274:	bl	401b40 <strcmp@plt>
  403278:	cbz	w0, 403240 <ferror@plt+0x15a0>
  40327c:	mov	x2, x24
  403280:	mov	x1, x27
  403284:	mov	w0, #0x0                   	// #0
  403288:	bl	401c70 <__xstat@plt>
  40328c:	b	403250 <ferror@plt+0x15b0>
  403290:	ldr	x2, [x0, #56]
  403294:	add	x1, x1, x2
  403298:	add	x0, x0, #0x88
  40329c:	cmp	x0, x3
  4032a0:	b.eq	4032c4 <ferror@plt+0x1624>  // b.none
  4032a4:	ldr	w2, [x0]
  4032a8:	cbnz	w2, 403298 <ferror@plt+0x15f8>
  4032ac:	ldr	w2, [x0, #24]
  4032b0:	and	w2, w2, #0xf000
  4032b4:	cmp	w2, #0x8, lsl #12
  4032b8:	b.eq	403290 <ferror@plt+0x15f0>  // b.none
  4032bc:	mov	w5, w6
  4032c0:	b	403298 <ferror@plt+0x15f8>
  4032c4:	mov	w0, #0x1                   	// #1
  4032c8:	mov	x2, #0xa                   	// #10
  4032cc:	b	4032d8 <ferror@plt+0x1638>
  4032d0:	add	w0, w0, #0x1
  4032d4:	udiv	x1, x1, x2
  4032d8:	cmp	x1, #0x9
  4032dc:	b.hi	4032d0 <ferror@plt+0x1630>  // b.pmore
  4032e0:	cmp	w0, w5
  4032e4:	csel	w0, w0, w5, ge  // ge = tcont
  4032e8:	b	402f80 <ferror@plt+0x12e0>
  4032ec:	ldr	w0, [sp, #128]
  4032f0:	cmp	w0, #0x3
  4032f4:	b.eq	4033d0 <ferror@plt+0x1730>  // b.none
  4032f8:	cmp	w0, #0x4
  4032fc:	b.eq	403330 <ferror@plt+0x1690>  // b.none
  403300:	cmp	w0, #0x2
  403304:	b.eq	4034a8 <ferror@plt+0x1808>  // b.none
  403308:	str	d8, [sp, #96]
  40330c:	adrp	x3, 407000 <_obstack_memory_used@@Base+0x7a8>
  403310:	add	x3, x3, #0x238
  403314:	add	x3, x3, #0x198
  403318:	mov	w2, #0x33f                 	// #831
  40331c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403320:	add	x1, x1, #0x140
  403324:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  403328:	add	x0, x0, #0x150
  40332c:	bl	401c40 <__assert_fail@plt>
  403330:	bl	401c50 <__errno_location@plt>
  403334:	ldr	w20, [x0]
  403338:	mov	w2, #0x5                   	// #5
  40333c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403340:	add	x1, x1, #0x130
  403344:	mov	x0, #0x0                   	// #0
  403348:	bl	401c00 <dcgettext@plt>
  40334c:	mov	x19, x0
  403350:	mov	x2, x21
  403354:	mov	w1, #0x3                   	// #3
  403358:	mov	w0, #0x0                   	// #0
  40335c:	bl	4054cc <ferror@plt+0x382c>
  403360:	mov	x3, x0
  403364:	mov	x2, x19
  403368:	mov	w1, w20
  40336c:	mov	w0, #0x0                   	// #0
  403370:	bl	4018e0 <error@plt>
  403374:	mov	w25, #0x0                   	// #0
  403378:	ldr	w0, [sp, #124]
  40337c:	cbnz	w0, 4034f4 <ferror@plt+0x1854>
  403380:	mov	x0, x23
  403384:	bl	403814 <ferror@plt+0x1b74>
  403388:	cmp	x0, #0x1
  40338c:	b.hi	403500 <ferror@plt+0x1860>  // b.pmore
  403390:	mov	x0, x23
  403394:	bl	403838 <ferror@plt+0x1b98>
  403398:	mov	x0, x26
  40339c:	bl	401b70 <free@plt>
  4033a0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4033a4:	ldrb	w0, [x0, #792]
  4033a8:	cbnz	w0, 403550 <ferror@plt+0x18b0>
  4033ac:	eor	w0, w25, #0x1
  4033b0:	ldp	x19, x20, [sp, #16]
  4033b4:	ldp	x21, x22, [sp, #32]
  4033b8:	ldp	x23, x24, [sp, #48]
  4033bc:	ldp	x25, x26, [sp, #64]
  4033c0:	ldp	x27, x28, [sp, #80]
  4033c4:	ldp	x29, x30, [sp]
  4033c8:	add	sp, sp, #0x220
  4033cc:	ret
  4033d0:	str	d8, [sp, #96]
  4033d4:	bl	406288 <ferror@plt+0x45e8>
  4033d8:	mov	w2, #0x5                   	// #5
  4033dc:	mov	x1, x27
  4033e0:	mov	x0, #0x0                   	// #0
  4033e4:	bl	401c00 <dcgettext@plt>
  4033e8:	mov	x3, x0
  4033ec:	mov	x2, x28
  4033f0:	mov	w1, #0x0                   	// #0
  4033f4:	mov	w0, #0x0                   	// #0
  4033f8:	bl	4018e0 <error@plt>
  4033fc:	mov	w25, #0x0                   	// #0
  403400:	b	403660 <ferror@plt+0x19c0>
  403404:	mov	w1, #0x0                   	// #0
  403408:	mov	x0, x20
  40340c:	bl	4019d0 <open@plt>
  403410:	str	w0, [sp, #120]
  403414:	cmn	w0, #0x1
  403418:	b.eq	403474 <ferror@plt+0x17d4>  // b.none
  40341c:	mov	x3, #0x0                   	// #0
  403420:	mov	x2, x24
  403424:	mov	x1, x20
  403428:	ldr	w0, [sp, #120]
  40342c:	bl	402040 <ferror@plt+0x3a0>
  403430:	and	w24, w0, #0xff
  403434:	ldr	w0, [sp, #120]
  403438:	bl	401a70 <close@plt>
  40343c:	cbz	w0, 4035cc <ferror@plt+0x192c>
  403440:	bl	401c50 <__errno_location@plt>
  403444:	ldr	w24, [x0]
  403448:	mov	x2, x20
  40344c:	mov	w1, #0x3                   	// #3
  403450:	mov	w0, #0x0                   	// #0
  403454:	bl	4054cc <ferror@plt+0x382c>
  403458:	mov	x3, x0
  40345c:	mov	x2, x28
  403460:	mov	w1, w24
  403464:	mov	w0, #0x0                   	// #0
  403468:	bl	4018e0 <error@plt>
  40346c:	mov	w24, #0x0                   	// #0
  403470:	b	4035cc <ferror@plt+0x192c>
  403474:	bl	401c50 <__errno_location@plt>
  403478:	ldr	w24, [x0]
  40347c:	mov	x2, x20
  403480:	mov	w1, #0x3                   	// #3
  403484:	mov	w0, #0x0                   	// #0
  403488:	bl	4054cc <ferror@plt+0x382c>
  40348c:	mov	x3, x0
  403490:	mov	x2, x28
  403494:	mov	w1, w24
  403498:	mov	w0, #0x0                   	// #0
  40349c:	bl	4018e0 <error@plt>
  4034a0:	mov	w24, #0x0                   	// #0
  4034a4:	b	4035cc <ferror@plt+0x192c>
  4034a8:	cmp	x21, #0x0
  4034ac:	cset	w0, eq  // eq = none
  4034b0:	ands	w19, w25, w0
  4034b4:	b.eq	403378 <ferror@plt+0x16d8>  // b.none
  4034b8:	mov	x0, x23
  4034bc:	bl	403814 <ferror@plt+0x1b74>
  4034c0:	cbz	x0, 4034cc <ferror@plt+0x182c>
  4034c4:	mov	w25, w19
  4034c8:	b	403378 <ferror@plt+0x16d8>
  4034cc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4034d0:	mov	w1, #0x1                   	// #1
  4034d4:	strb	w1, [x0, #792]
  4034d8:	mov	x3, #0xffffffffffffffff    	// #-1
  4034dc:	mov	x2, x26
  4034e0:	mov	x1, #0x0                   	// #0
  4034e4:	mov	w0, #0x0                   	// #0
  4034e8:	bl	402040 <ferror@plt+0x3a0>
  4034ec:	and	w25, w0, #0xff
  4034f0:	b	403378 <ferror@plt+0x16d8>
  4034f4:	add	x0, sp, #0x100
  4034f8:	bl	405814 <ferror@plt+0x3b74>
  4034fc:	b	403380 <ferror@plt+0x16e0>
  403500:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403504:	add	x0, x0, #0x2d0
  403508:	ldr	x19, [x0, #24]
  40350c:	ldr	x20, [x0, #32]
  403510:	ldr	x21, [x0, #40]
  403514:	ldr	x22, [x0, #48]
  403518:	ldr	x24, [x0, #56]
  40351c:	mov	w2, #0x5                   	// #5
  403520:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403524:	add	x1, x1, #0x1e8
  403528:	mov	x0, #0x0                   	// #0
  40352c:	bl	401c00 <dcgettext@plt>
  403530:	mov	x5, x0
  403534:	mov	x4, x24
  403538:	mov	x3, x22
  40353c:	mov	x2, x21
  403540:	mov	x1, x20
  403544:	mov	x0, x19
  403548:	bl	401e44 <ferror@plt+0x1a4>
  40354c:	b	403390 <ferror@plt+0x16f0>
  403550:	mov	w0, #0x0                   	// #0
  403554:	bl	401a70 <close@plt>
  403558:	cbz	w0, 4033ac <ferror@plt+0x170c>
  40355c:	str	d8, [sp, #96]
  403560:	bl	401c50 <__errno_location@plt>
  403564:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  403568:	add	x2, x2, #0xe0
  40356c:	ldr	w1, [x0]
  403570:	mov	w0, #0x1                   	// #1
  403574:	bl	4018e0 <error@plt>
  403578:	ldrb	w0, [x0]
  40357c:	cbz	w0, 4033d8 <ferror@plt+0x1738>
  403580:	mov	x24, #0x88                  	// #136
  403584:	mul	x24, x22, x24
  403588:	cmp	x19, #0x0
  40358c:	csel	x24, x24, x19, ne  // ne = any
  403590:	add	x24, x26, x24
  403594:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403598:	add	x1, x1, #0xe0
  40359c:	mov	x0, x20
  4035a0:	bl	401b40 <strcmp@plt>
  4035a4:	cbnz	w0, 403404 <ferror@plt+0x1764>
  4035a8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4035ac:	mov	w1, #0x1                   	// #1
  4035b0:	strb	w1, [x0, #792]
  4035b4:	mov	x3, #0xffffffffffffffff    	// #-1
  4035b8:	mov	x2, x24
  4035bc:	mov	x1, x20
  4035c0:	mov	w0, #0x0                   	// #0
  4035c4:	bl	402040 <ferror@plt+0x3a0>
  4035c8:	and	w24, w0, #0xff
  4035cc:	and	w25, w25, w24
  4035d0:	b	403660 <ferror@plt+0x19c0>
  4035d4:	ldr	w0, [x26]
  4035d8:	cmp	w0, #0x0
  4035dc:	b.le	4035e8 <ferror@plt+0x1948>
  4035e0:	mov	w0, #0x1                   	// #1
  4035e4:	b	402f80 <ferror@plt+0x12e0>
  4035e8:	mov	x0, x26
  4035ec:	mov	x3, #0x88                  	// #136
  4035f0:	madd	x3, x19, x3, x26
  4035f4:	mov	x1, #0x0                   	// #0
  4035f8:	mov	w5, #0x1                   	// #1
  4035fc:	mov	w6, #0x7                   	// #7
  403600:	b	40329c <ferror@plt+0x15fc>
  403604:	ldrb	w0, [x20]
  403608:	cbnz	w0, 403580 <ferror@plt+0x18e0>
  40360c:	mov	x0, x23
  403610:	bl	403814 <ferror@plt+0x1b74>
  403614:	mov	x24, x0
  403618:	mov	x2, x21
  40361c:	mov	w1, #0x3                   	// #3
  403620:	mov	w0, #0x0                   	// #0
  403624:	bl	4054cc <ferror@plt+0x382c>
  403628:	mov	x20, x0
  40362c:	mov	w2, #0x5                   	// #5
  403630:	mov	x1, x27
  403634:	mov	x0, #0x0                   	// #0
  403638:	bl	401c00 <dcgettext@plt>
  40363c:	mov	x5, x0
  403640:	mov	x4, x24
  403644:	mov	x3, x20
  403648:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  40364c:	add	x2, x2, #0x1d8
  403650:	mov	w1, #0x0                   	// #0
  403654:	mov	w0, #0x0                   	// #0
  403658:	bl	4018e0 <error@plt>
  40365c:	mov	w25, #0x0                   	// #0
  403660:	cbnz	x19, 40366c <ferror@plt+0x19cc>
  403664:	mov	w0, #0x1                   	// #1
  403668:	str	w0, [x26]
  40366c:	add	x22, x22, #0x1
  403670:	add	x1, sp, #0x80
  403674:	mov	x0, x23
  403678:	bl	403768 <ferror@plt+0x1ac8>
  40367c:	mov	x20, x0
  403680:	cbz	x0, 4032ec <ferror@plt+0x164c>
  403684:	cbz	x21, 403578 <ferror@plt+0x18d8>
  403688:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  40368c:	add	x1, x1, #0xe0
  403690:	mov	x0, x21
  403694:	bl	401b40 <strcmp@plt>
  403698:	cbnz	w0, 403604 <ferror@plt+0x1964>
  40369c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  4036a0:	add	x1, x1, #0xe0
  4036a4:	mov	x0, x20
  4036a8:	bl	401b40 <strcmp@plt>
  4036ac:	cbnz	w0, 403604 <ferror@plt+0x1964>
  4036b0:	mov	w2, #0x5                   	// #5
  4036b4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  4036b8:	add	x1, x1, #0x178
  4036bc:	mov	x0, #0x0                   	// #0
  4036c0:	bl	401c00 <dcgettext@plt>
  4036c4:	mov	x24, x0
  4036c8:	mov	x1, x20
  4036cc:	mov	w0, #0x4                   	// #4
  4036d0:	bl	4053cc <ferror@plt+0x372c>
  4036d4:	mov	x3, x0
  4036d8:	mov	x2, x24
  4036dc:	mov	w1, #0x0                   	// #0
  4036e0:	mov	w0, #0x0                   	// #0
  4036e4:	bl	4018e0 <error@plt>
  4036e8:	ldrb	w0, [x20]
  4036ec:	cbz	w0, 40360c <ferror@plt+0x196c>
  4036f0:	mov	w25, #0x0                   	// #0
  4036f4:	b	403660 <ferror@plt+0x19c0>
  4036f8:	stp	x29, x30, [sp, #-32]!
  4036fc:	mov	x29, sp
  403700:	str	x19, [sp, #16]
  403704:	mov	x19, x0
  403708:	mov	x0, #0x30                  	// #48
  40370c:	bl	4019a0 <malloc@plt>
  403710:	cbz	x0, 403720 <ferror@plt+0x1a80>
  403714:	str	xzr, [x0]
  403718:	str	x19, [x0, #32]
  40371c:	str	x19, [x0, #40]
  403720:	ldr	x19, [sp, #16]
  403724:	ldp	x29, x30, [sp], #32
  403728:	ret
  40372c:	stp	x29, x30, [sp, #-32]!
  403730:	mov	x29, sp
  403734:	str	x19, [sp, #16]
  403738:	mov	x19, x0
  40373c:	mov	x0, #0x30                  	// #48
  403740:	bl	4019a0 <malloc@plt>
  403744:	cbz	x0, 40375c <ferror@plt+0x1abc>
  403748:	str	x19, [x0]
  40374c:	str	xzr, [x0, #16]
  403750:	str	xzr, [x0, #24]
  403754:	str	xzr, [x0, #8]
  403758:	str	xzr, [x0, #32]
  40375c:	ldr	x19, [sp, #16]
  403760:	ldp	x29, x30, [sp], #32
  403764:	ret
  403768:	stp	x29, x30, [sp, #-32]!
  40376c:	mov	x29, sp
  403770:	stp	x19, x20, [sp, #16]
  403774:	mov	x19, x0
  403778:	mov	x20, x1
  40377c:	ldr	x3, [x0]
  403780:	cbz	x3, 4037e0 <ferror@plt+0x1b40>
  403784:	mov	w2, #0x0                   	// #0
  403788:	add	x1, x0, #0x18
  40378c:	add	x0, x0, #0x10
  403790:	bl	4019c0 <getdelim@plt>
  403794:	tbnz	x0, #63, 4037bc <ferror@plt+0x1b1c>
  403798:	mov	w0, #0x1                   	// #1
  40379c:	str	w0, [x20]
  4037a0:	ldr	x0, [x19, #8]
  4037a4:	add	x0, x0, #0x1
  4037a8:	str	x0, [x19, #8]
  4037ac:	ldr	x0, [x19, #16]
  4037b0:	ldp	x19, x20, [sp, #16]
  4037b4:	ldp	x29, x30, [sp], #32
  4037b8:	ret
  4037bc:	ldr	x0, [x19]
  4037c0:	bl	401af0 <feof@plt>
  4037c4:	cmp	w0, #0x0
  4037c8:	mov	w0, #0x2                   	// #2
  4037cc:	mov	w1, #0x4                   	// #4
  4037d0:	csel	w0, w0, w1, ne  // ne = any
  4037d4:	str	w0, [x20]
  4037d8:	mov	x0, #0x0                   	// #0
  4037dc:	b	4037b0 <ferror@plt+0x1b10>
  4037e0:	ldr	x0, [x0, #40]
  4037e4:	ldr	x0, [x0]
  4037e8:	cbz	x0, 403808 <ferror@plt+0x1b68>
  4037ec:	mov	w0, #0x1                   	// #1
  4037f0:	str	w0, [x1]
  4037f4:	ldr	x0, [x19, #40]
  4037f8:	add	x1, x0, #0x8
  4037fc:	str	x1, [x19, #40]
  403800:	ldr	x0, [x0]
  403804:	b	4037b0 <ferror@plt+0x1b10>
  403808:	mov	w1, #0x2                   	// #2
  40380c:	str	w1, [x20]
  403810:	b	4037b0 <ferror@plt+0x1b10>
  403814:	ldr	x1, [x0]
  403818:	cbz	x1, 403824 <ferror@plt+0x1b84>
  40381c:	ldr	x0, [x0, #8]
  403820:	ret
  403824:	ldr	x1, [x0, #40]
  403828:	ldr	x0, [x0, #32]
  40382c:	sub	x0, x1, x0
  403830:	asr	x0, x0, #3
  403834:	b	403820 <ferror@plt+0x1b80>
  403838:	stp	x29, x30, [sp, #-32]!
  40383c:	mov	x29, sp
  403840:	str	x19, [sp, #16]
  403844:	mov	x19, x0
  403848:	ldr	x0, [x0]
  40384c:	cbz	x0, 403858 <ferror@plt+0x1bb8>
  403850:	ldr	x0, [x19, #16]
  403854:	bl	401b70 <free@plt>
  403858:	mov	x0, x19
  40385c:	bl	401b70 <free@plt>
  403860:	ldr	x19, [sp, #16]
  403864:	ldp	x29, x30, [sp], #32
  403868:	ret
  40386c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403870:	str	x0, [x1, #800]
  403874:	ret
  403878:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40387c:	strb	w0, [x1, #808]
  403880:	ret
  403884:	stp	x29, x30, [sp, #-48]!
  403888:	mov	x29, sp
  40388c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403890:	ldr	x0, [x0, #688]
  403894:	bl	406884 <_obstack_memory_used@@Base+0x2c>
  403898:	cbz	w0, 4038b8 <ferror@plt+0x1c18>
  40389c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4038a0:	ldrb	w0, [x0, #808]
  4038a4:	cbz	w0, 4038d0 <ferror@plt+0x1c30>
  4038a8:	bl	401c50 <__errno_location@plt>
  4038ac:	ldr	w0, [x0]
  4038b0:	cmp	w0, #0x20
  4038b4:	b.ne	4038d0 <ferror@plt+0x1c30>  // b.any
  4038b8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4038bc:	ldr	x0, [x0, #664]
  4038c0:	bl	406884 <_obstack_memory_used@@Base+0x2c>
  4038c4:	cbnz	w0, 403954 <ferror@plt+0x1cb4>
  4038c8:	ldp	x29, x30, [sp], #48
  4038cc:	ret
  4038d0:	stp	x19, x20, [sp, #16]
  4038d4:	str	x21, [sp, #32]
  4038d8:	mov	w2, #0x5                   	// #5
  4038dc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  4038e0:	add	x1, x1, #0x3e0
  4038e4:	mov	x0, #0x0                   	// #0
  4038e8:	bl	401c00 <dcgettext@plt>
  4038ec:	mov	x19, x0
  4038f0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4038f4:	ldr	x20, [x0, #800]
  4038f8:	cbz	x20, 403934 <ferror@plt+0x1c94>
  4038fc:	bl	401c50 <__errno_location@plt>
  403900:	ldr	w21, [x0]
  403904:	mov	x0, x20
  403908:	bl	40549c <ferror@plt+0x37fc>
  40390c:	mov	x4, x19
  403910:	mov	x3, x0
  403914:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  403918:	add	x2, x2, #0x3f0
  40391c:	mov	w1, w21
  403920:	mov	w0, #0x0                   	// #0
  403924:	bl	4018e0 <error@plt>
  403928:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40392c:	ldr	w0, [x0, #552]
  403930:	bl	4018b0 <_exit@plt>
  403934:	bl	401c50 <__errno_location@plt>
  403938:	mov	x3, x19
  40393c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  403940:	add	x2, x2, #0x1e0
  403944:	ldr	w1, [x0]
  403948:	mov	w0, #0x0                   	// #0
  40394c:	bl	4018e0 <error@plt>
  403950:	b	403928 <ferror@plt+0x1c88>
  403954:	stp	x19, x20, [sp, #16]
  403958:	str	x21, [sp, #32]
  40395c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403960:	ldr	w0, [x0, #552]
  403964:	bl	4018b0 <_exit@plt>
  403968:	stp	x29, x30, [sp, #-16]!
  40396c:	mov	x29, sp
  403970:	bl	401ac0 <posix_fadvise@plt>
  403974:	ldp	x29, x30, [sp], #16
  403978:	ret
  40397c:	cbz	x0, 4039b0 <ferror@plt+0x1d10>
  403980:	stp	x29, x30, [sp, #-32]!
  403984:	mov	x29, sp
  403988:	str	x19, [sp, #16]
  40398c:	mov	w19, w1
  403990:	bl	401950 <fileno@plt>
  403994:	mov	w3, w19
  403998:	mov	x2, #0x0                   	// #0
  40399c:	mov	x1, #0x0                   	// #0
  4039a0:	bl	401ac0 <posix_fadvise@plt>
  4039a4:	ldr	x19, [sp, #16]
  4039a8:	ldp	x29, x30, [sp], #32
  4039ac:	ret
  4039b0:	ret
  4039b4:	mov	x3, x0
  4039b8:	add	x0, x1, #0x14
  4039bc:	strb	wzr, [x1, #20]
  4039c0:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  4039c4:	movk	x4, #0xcccd
  4039c8:	umulh	x1, x3, x4
  4039cc:	lsr	x1, x1, #3
  4039d0:	add	x2, x1, x1, lsl #2
  4039d4:	sub	x2, x3, x2, lsl #1
  4039d8:	add	w2, w2, #0x30
  4039dc:	strb	w2, [x0, #-1]!
  4039e0:	mov	x2, x3
  4039e4:	mov	x3, x1
  4039e8:	cmp	x2, #0x9
  4039ec:	b.hi	4039c8 <ferror@plt+0x1d28>  // b.pmore
  4039f0:	ret
  4039f4:	stp	x29, x30, [sp, #-32]!
  4039f8:	mov	x29, sp
  4039fc:	str	x19, [sp, #16]
  403a00:	mov	w19, w0
  403a04:	bl	4019b0 <wcwidth@plt>
  403a08:	tbnz	w0, #31, 403a18 <ferror@plt+0x1d78>
  403a0c:	ldr	x19, [sp, #16]
  403a10:	ldp	x29, x30, [sp], #32
  403a14:	ret
  403a18:	mov	w0, w19
  403a1c:	bl	401910 <iswcntrl@plt>
  403a20:	cmp	w0, #0x0
  403a24:	cset	w0, eq  // eq = none
  403a28:	b	403a0c <ferror@plt+0x1d6c>
  403a2c:	stp	x29, x30, [sp, #-48]!
  403a30:	mov	x29, sp
  403a34:	stp	x19, x20, [sp, #16]
  403a38:	mov	x20, x0
  403a3c:	mov	x19, x1
  403a40:	ldr	x0, [x1], #24
  403a44:	cmp	x0, x1
  403a48:	b.eq	403a78 <ferror@plt+0x1dd8>  // b.none
  403a4c:	str	x0, [x20]
  403a50:	ldr	x0, [x19, #8]
  403a54:	str	x0, [x20, #8]
  403a58:	ldrb	w0, [x19, #16]
  403a5c:	strb	w0, [x20, #16]
  403a60:	cbz	w0, 403a6c <ferror@plt+0x1dcc>
  403a64:	ldr	w0, [x19, #20]
  403a68:	str	w0, [x20, #20]
  403a6c:	ldp	x19, x20, [sp, #16]
  403a70:	ldp	x29, x30, [sp], #48
  403a74:	ret
  403a78:	str	x21, [sp, #32]
  403a7c:	add	x21, x20, #0x18
  403a80:	ldr	x2, [x19, #8]
  403a84:	mov	x0, x21
  403a88:	bl	4018a0 <memcpy@plt>
  403a8c:	str	x21, [x20]
  403a90:	ldr	x21, [sp, #32]
  403a94:	b	403a50 <ferror@plt+0x1db0>
  403a98:	ubfx	x2, x0, #5, #3
  403a9c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403aa0:	add	x1, x1, #0x3f8
  403aa4:	ldr	w1, [x1, x2, lsl #2]
  403aa8:	lsr	w0, w1, w0
  403aac:	and	w0, w0, #0x1
  403ab0:	ret
  403ab4:	stp	x29, x30, [sp, #-144]!
  403ab8:	mov	x29, sp
  403abc:	str	d8, [sp, #16]
  403ac0:	mov	w0, #0x55                  	// #85
  403ac4:	bl	401be0 <sysconf@plt>
  403ac8:	scvtf	d8, x0
  403acc:	mov	w0, #0x1e                  	// #30
  403ad0:	bl	401be0 <sysconf@plt>
  403ad4:	fcmpe	d8, #0.0
  403ad8:	b.lt	403aec <ferror@plt+0x1e4c>  // b.tstop
  403adc:	fmov	d0, x0
  403ae0:	scvtf	d0, d0
  403ae4:	fcmpe	d0, #0.0
  403ae8:	b.ge	403b0c <ferror@plt+0x1e6c>  // b.tcont
  403aec:	add	x0, sp, #0x20
  403af0:	bl	4018f0 <sysinfo@plt>
  403af4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403af8:	ldr	d0, [x1, #1048]
  403afc:	cbz	w0, 403b14 <ferror@plt+0x1e74>
  403b00:	ldr	d8, [sp, #16]
  403b04:	ldp	x29, x30, [sp], #144
  403b08:	ret
  403b0c:	fmul	d0, d8, d0
  403b10:	b	403b00 <ferror@plt+0x1e60>
  403b14:	ldr	d0, [sp, #64]
  403b18:	ucvtf	d0, d0
  403b1c:	ldr	w0, [sp, #136]
  403b20:	ucvtf	d8, w0
  403b24:	fmul	d0, d0, d8
  403b28:	b	403b00 <ferror@plt+0x1e60>
  403b2c:	stp	x29, x30, [sp, #-144]!
  403b30:	mov	x29, sp
  403b34:	str	d8, [sp, #16]
  403b38:	mov	w0, #0x56                  	// #86
  403b3c:	bl	401be0 <sysconf@plt>
  403b40:	scvtf	d8, x0
  403b44:	mov	w0, #0x1e                  	// #30
  403b48:	bl	401be0 <sysconf@plt>
  403b4c:	fcmpe	d8, #0.0
  403b50:	b.lt	403b64 <ferror@plt+0x1ec4>  // b.tstop
  403b54:	fmov	d0, x0
  403b58:	scvtf	d0, d0
  403b5c:	fcmpe	d0, #0.0
  403b60:	b.ge	403b9c <ferror@plt+0x1efc>  // b.tcont
  403b64:	add	x0, sp, #0x20
  403b68:	bl	4018f0 <sysinfo@plt>
  403b6c:	cbnz	w0, 403ba4 <ferror@plt+0x1f04>
  403b70:	ldr	d0, [sp, #72]
  403b74:	ucvtf	d0, d0
  403b78:	ldr	d8, [sp, #88]
  403b7c:	ucvtf	d8, d8
  403b80:	fadd	d0, d0, d8
  403b84:	ldr	w0, [sp, #136]
  403b88:	ucvtf	d8, w0
  403b8c:	fmul	d0, d0, d8
  403b90:	ldr	d8, [sp, #16]
  403b94:	ldp	x29, x30, [sp], #144
  403b98:	ret
  403b9c:	fmul	d0, d8, d0
  403ba0:	b	403b90 <ferror@plt+0x1ef0>
  403ba4:	bl	403ab4 <ferror@plt+0x1e14>
  403ba8:	fmov	d8, #2.500000000000000000e-01
  403bac:	fmul	d0, d0, d8
  403bb0:	b	403b90 <ferror@plt+0x1ef0>
  403bb4:	stp	x29, x30, [sp, #-48]!
  403bb8:	mov	x29, sp
  403bbc:	cbz	x0, 403c34 <ferror@plt+0x1f94>
  403bc0:	stp	x19, x20, [sp, #16]
  403bc4:	mov	x19, x0
  403bc8:	mov	w1, #0x2f                  	// #47
  403bcc:	bl	401a80 <strrchr@plt>
  403bd0:	mov	x20, x0
  403bd4:	cbz	x0, 403c68 <ferror@plt+0x1fc8>
  403bd8:	str	x21, [sp, #32]
  403bdc:	add	x21, x0, #0x1
  403be0:	sub	x0, x21, x19
  403be4:	cmp	x0, #0x6
  403be8:	b.le	403c5c <ferror@plt+0x1fbc>
  403bec:	mov	x2, #0x7                   	// #7
  403bf0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403bf4:	add	x1, x1, #0x458
  403bf8:	sub	x0, x20, #0x6
  403bfc:	bl	4019e0 <strncmp@plt>
  403c00:	cbnz	w0, 403c64 <ferror@plt+0x1fc4>
  403c04:	mov	x2, #0x3                   	// #3
  403c08:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  403c0c:	add	x1, x1, #0x460
  403c10:	mov	x0, x21
  403c14:	bl	4019e0 <strncmp@plt>
  403c18:	mov	x19, x21
  403c1c:	cbnz	w0, 403c84 <ferror@plt+0x1fe4>
  403c20:	add	x19, x20, #0x4
  403c24:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403c28:	str	x19, [x0, #704]
  403c2c:	ldr	x21, [sp, #32]
  403c30:	b	403c68 <ferror@plt+0x1fc8>
  403c34:	stp	x19, x20, [sp, #16]
  403c38:	str	x21, [sp, #32]
  403c3c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403c40:	ldr	x3, [x0, #664]
  403c44:	mov	x2, #0x37                  	// #55
  403c48:	mov	x1, #0x1                   	// #1
  403c4c:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  403c50:	add	x0, x0, #0x420
  403c54:	bl	401ba0 <fwrite@plt>
  403c58:	bl	401ab0 <abort@plt>
  403c5c:	ldr	x21, [sp, #32]
  403c60:	b	403c68 <ferror@plt+0x1fc8>
  403c64:	ldr	x21, [sp, #32]
  403c68:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403c6c:	str	x19, [x0, #816]
  403c70:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  403c74:	str	x19, [x0, #656]
  403c78:	ldp	x19, x20, [sp, #16]
  403c7c:	ldp	x29, x30, [sp], #48
  403c80:	ret
  403c84:	ldr	x21, [sp, #32]
  403c88:	b	403c68 <ferror@plt+0x1fc8>
  403c8c:	stp	xzr, xzr, [x8]
  403c90:	stp	xzr, xzr, [x8, #16]
  403c94:	stp	xzr, xzr, [x8, #32]
  403c98:	str	xzr, [x8, #48]
  403c9c:	cmp	w0, #0xa
  403ca0:	b.eq	403cac <ferror@plt+0x200c>  // b.none
  403ca4:	str	w0, [x8]
  403ca8:	ret
  403cac:	stp	x29, x30, [sp, #-16]!
  403cb0:	mov	x29, sp
  403cb4:	bl	401ab0 <abort@plt>
  403cb8:	stp	x29, x30, [sp, #-48]!
  403cbc:	mov	x29, sp
  403cc0:	stp	x19, x20, [sp, #16]
  403cc4:	str	x21, [sp, #32]
  403cc8:	mov	x20, x0
  403ccc:	mov	w21, w1
  403cd0:	mov	w2, #0x5                   	// #5
  403cd4:	mov	x1, x0
  403cd8:	mov	x0, #0x0                   	// #0
  403cdc:	bl	401c00 <dcgettext@plt>
  403ce0:	mov	x19, x0
  403ce4:	cmp	x20, x0
  403ce8:	b.eq	403d00 <ferror@plt+0x2060>  // b.none
  403cec:	mov	x0, x19
  403cf0:	ldp	x19, x20, [sp, #16]
  403cf4:	ldr	x21, [sp, #32]
  403cf8:	ldp	x29, x30, [sp], #48
  403cfc:	ret
  403d00:	bl	406964 <_obstack_memory_used@@Base+0x10c>
  403d04:	ldrb	w1, [x0]
  403d08:	and	w1, w1, #0xffffffdf
  403d0c:	cmp	w1, #0x55
  403d10:	b.ne	403d90 <ferror@plt+0x20f0>  // b.any
  403d14:	ldrb	w1, [x0, #1]
  403d18:	and	w1, w1, #0xffffffdf
  403d1c:	cmp	w1, #0x54
  403d20:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403d24:	ldrb	w1, [x0, #2]
  403d28:	and	w1, w1, #0xffffffdf
  403d2c:	cmp	w1, #0x46
  403d30:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403d34:	ldrb	w1, [x0, #3]
  403d38:	cmp	w1, #0x2d
  403d3c:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403d40:	ldrb	w1, [x0, #4]
  403d44:	cmp	w1, #0x38
  403d48:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403d4c:	ldrb	w0, [x0, #5]
  403d50:	cbz	w0, 403d70 <ferror@plt+0x20d0>
  403d54:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  403d58:	add	x0, x19, #0x490
  403d5c:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  403d60:	add	x19, x19, #0x468
  403d64:	cmp	w21, #0x9
  403d68:	csel	x19, x19, x0, eq  // eq = none
  403d6c:	b	403cec <ferror@plt+0x204c>
  403d70:	ldrb	w1, [x19]
  403d74:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  403d78:	add	x0, x19, #0x470
  403d7c:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  403d80:	add	x19, x19, #0x488
  403d84:	cmp	w1, #0x60
  403d88:	csel	x19, x19, x0, eq  // eq = none
  403d8c:	b	403cec <ferror@plt+0x204c>
  403d90:	cmp	w1, #0x47
  403d94:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403d98:	ldrb	w1, [x0, #1]
  403d9c:	and	w1, w1, #0xffffffdf
  403da0:	cmp	w1, #0x42
  403da4:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403da8:	ldrb	w1, [x0, #2]
  403dac:	cmp	w1, #0x31
  403db0:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403db4:	ldrb	w1, [x0, #3]
  403db8:	cmp	w1, #0x38
  403dbc:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403dc0:	ldrb	w1, [x0, #4]
  403dc4:	cmp	w1, #0x30
  403dc8:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403dcc:	ldrb	w1, [x0, #5]
  403dd0:	cmp	w1, #0x33
  403dd4:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403dd8:	ldrb	w1, [x0, #6]
  403ddc:	cmp	w1, #0x30
  403de0:	b.ne	403d54 <ferror@plt+0x20b4>  // b.any
  403de4:	ldrb	w0, [x0, #7]
  403de8:	cbnz	w0, 403d54 <ferror@plt+0x20b4>
  403dec:	ldrb	w1, [x19]
  403df0:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  403df4:	add	x0, x19, #0x478
  403df8:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7a8>
  403dfc:	add	x19, x19, #0x480
  403e00:	cmp	w1, #0x60
  403e04:	csel	x19, x19, x0, eq  // eq = none
  403e08:	b	403cec <ferror@plt+0x204c>
  403e0c:	sub	sp, sp, #0xf0
  403e10:	stp	x29, x30, [sp, #16]
  403e14:	add	x29, sp, #0x10
  403e18:	stp	x19, x20, [sp, #32]
  403e1c:	stp	x21, x22, [sp, #48]
  403e20:	stp	x23, x24, [sp, #64]
  403e24:	stp	x25, x26, [sp, #80]
  403e28:	stp	x27, x28, [sp, #96]
  403e2c:	mov	x28, x0
  403e30:	mov	x26, x1
  403e34:	str	x2, [sp, #136]
  403e38:	mov	x24, x3
  403e3c:	mov	w25, w4
  403e40:	mov	w19, w5
  403e44:	str	w5, [sp, #184]
  403e48:	str	x6, [sp, #152]
  403e4c:	str	x7, [sp, #200]
  403e50:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  403e54:	str	x0, [sp, #168]
  403e58:	mov	x0, x19
  403e5c:	ubfx	x0, x0, #1, #1
  403e60:	str	x0, [sp, #112]
  403e64:	mov	w0, #0x1                   	// #1
  403e68:	str	w0, [sp, #128]
  403e6c:	str	wzr, [sp, #180]
  403e70:	str	wzr, [sp, #124]
  403e74:	str	wzr, [sp, #132]
  403e78:	str	xzr, [sp, #144]
  403e7c:	str	xzr, [sp, #160]
  403e80:	str	xzr, [sp, #192]
  403e84:	mov	w23, w25
  403e88:	mov	x25, x24
  403e8c:	cmp	w23, #0x4
  403e90:	b.eq	404000 <ferror@plt+0x2360>  // b.none
  403e94:	b.ls	403ee4 <ferror@plt+0x2244>  // b.plast
  403e98:	cmp	w23, #0x7
  403e9c:	b.eq	404070 <ferror@plt+0x23d0>  // b.none
  403ea0:	b.ls	403f30 <ferror@plt+0x2290>  // b.plast
  403ea4:	sub	w0, w23, #0x8
  403ea8:	cmp	w0, #0x2
  403eac:	b.hi	404060 <ferror@plt+0x23c0>  // b.pmore
  403eb0:	cmp	w23, #0xa
  403eb4:	b.ne	403fa4 <ferror@plt+0x2304>  // b.any
  403eb8:	mov	x27, #0x0                   	// #0
  403ebc:	ldr	w0, [sp, #112]
  403ec0:	cbz	w0, 403fd0 <ferror@plt+0x2330>
  403ec4:	ldr	x0, [sp, #240]
  403ec8:	bl	4018c0 <strlen@plt>
  403ecc:	str	x0, [sp, #144]
  403ed0:	ldr	x0, [sp, #240]
  403ed4:	str	x0, [sp, #160]
  403ed8:	mov	w0, #0x1                   	// #1
  403edc:	str	w0, [sp, #132]
  403ee0:	b	403f68 <ferror@plt+0x22c8>
  403ee4:	cmp	w23, #0x2
  403ee8:	b.eq	40403c <ferror@plt+0x239c>  // b.none
  403eec:	b.ls	403efc <ferror@plt+0x225c>  // b.plast
  403ef0:	mov	w0, #0x1                   	// #1
  403ef4:	str	w0, [sp, #132]
  403ef8:	b	403f08 <ferror@plt+0x2268>
  403efc:	cbz	w23, 404064 <ferror@plt+0x23c4>
  403f00:	cmp	w23, #0x1
  403f04:	b.ne	404060 <ferror@plt+0x23c0>  // b.any
  403f08:	mov	w0, #0x1                   	// #1
  403f0c:	str	w0, [sp, #112]
  403f10:	mov	x0, #0x1                   	// #1
  403f14:	str	x0, [sp, #144]
  403f18:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  403f1c:	add	x0, x0, #0x490
  403f20:	str	x0, [sp, #160]
  403f24:	mov	x27, #0x0                   	// #0
  403f28:	mov	w23, #0x2                   	// #2
  403f2c:	b	403f68 <ferror@plt+0x22c8>
  403f30:	cmp	w23, #0x5
  403f34:	b.eq	403f70 <ferror@plt+0x22d0>  // b.none
  403f38:	cmp	w23, #0x6
  403f3c:	b.ne	404060 <ferror@plt+0x23c0>  // b.any
  403f40:	mov	w0, #0x1                   	// #1
  403f44:	str	w0, [sp, #112]
  403f48:	str	w0, [sp, #132]
  403f4c:	mov	x0, #0x1                   	// #1
  403f50:	str	x0, [sp, #144]
  403f54:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  403f58:	add	x0, x0, #0x468
  403f5c:	str	x0, [sp, #160]
  403f60:	mov	x27, #0x0                   	// #0
  403f64:	mov	w23, #0x5                   	// #5
  403f68:	mov	x24, #0x0                   	// #0
  403f6c:	b	404a5c <ferror@plt+0x2dbc>
  403f70:	ldr	w0, [sp, #112]
  403f74:	cbnz	w0, 404084 <ferror@plt+0x23e4>
  403f78:	cbz	x26, 4040a8 <ferror@plt+0x2408>
  403f7c:	mov	w0, #0x22                  	// #34
  403f80:	strb	w0, [x28]
  403f84:	mov	w0, #0x1                   	// #1
  403f88:	str	w0, [sp, #132]
  403f8c:	mov	x27, #0x1                   	// #1
  403f90:	str	x27, [sp, #144]
  403f94:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  403f98:	add	x0, x0, #0x468
  403f9c:	str	x0, [sp, #160]
  403fa0:	b	403f68 <ferror@plt+0x22c8>
  403fa4:	mov	w1, w23
  403fa8:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  403fac:	add	x0, x0, #0x498
  403fb0:	bl	403cb8 <ferror@plt+0x2018>
  403fb4:	str	x0, [sp, #200]
  403fb8:	mov	w1, w23
  403fbc:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  403fc0:	add	x0, x0, #0x490
  403fc4:	bl	403cb8 <ferror@plt+0x2018>
  403fc8:	str	x0, [sp, #240]
  403fcc:	b	403eb8 <ferror@plt+0x2218>
  403fd0:	ldr	x1, [sp, #200]
  403fd4:	ldrb	w0, [x1]
  403fd8:	cbnz	w0, 403ff0 <ferror@plt+0x2350>
  403fdc:	mov	x27, #0x0                   	// #0
  403fe0:	b	403ec4 <ferror@plt+0x2224>
  403fe4:	add	x27, x27, #0x1
  403fe8:	ldrb	w0, [x1, x27]
  403fec:	cbz	w0, 403ec4 <ferror@plt+0x2224>
  403ff0:	cmp	x26, x27
  403ff4:	b.ls	403fe4 <ferror@plt+0x2344>  // b.plast
  403ff8:	strb	w0, [x28, x27]
  403ffc:	b	403fe4 <ferror@plt+0x2344>
  404000:	ldr	w0, [sp, #112]
  404004:	cbnz	w0, 403f08 <ferror@plt+0x2268>
  404008:	mov	w0, #0x1                   	// #1
  40400c:	str	w0, [sp, #132]
  404010:	cbz	x26, 4040c8 <ferror@plt+0x2428>
  404014:	mov	w0, #0x27                  	// #39
  404018:	strb	w0, [x28]
  40401c:	str	wzr, [sp, #112]
  404020:	mov	x27, #0x1                   	// #1
  404024:	str	x27, [sp, #144]
  404028:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  40402c:	add	x0, x0, #0x490
  404030:	str	x0, [sp, #160]
  404034:	mov	w23, #0x2                   	// #2
  404038:	b	403f68 <ferror@plt+0x22c8>
  40403c:	ldr	w0, [sp, #112]
  404040:	cbz	w0, 404010 <ferror@plt+0x2370>
  404044:	mov	x0, #0x1                   	// #1
  404048:	str	x0, [sp, #144]
  40404c:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  404050:	add	x0, x0, #0x490
  404054:	str	x0, [sp, #160]
  404058:	mov	x27, #0x0                   	// #0
  40405c:	b	403f68 <ferror@plt+0x22c8>
  404060:	bl	401ab0 <abort@plt>
  404064:	str	wzr, [sp, #112]
  404068:	mov	x27, #0x0                   	// #0
  40406c:	b	403f68 <ferror@plt+0x22c8>
  404070:	str	wzr, [sp, #112]
  404074:	mov	w0, #0x1                   	// #1
  404078:	str	w0, [sp, #132]
  40407c:	mov	x27, #0x0                   	// #0
  404080:	b	403f68 <ferror@plt+0x22c8>
  404084:	ldr	w0, [sp, #112]
  404088:	str	w0, [sp, #132]
  40408c:	mov	x0, #0x1                   	// #1
  404090:	str	x0, [sp, #144]
  404094:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  404098:	add	x0, x0, #0x468
  40409c:	str	x0, [sp, #160]
  4040a0:	mov	x27, #0x0                   	// #0
  4040a4:	b	403f68 <ferror@plt+0x22c8>
  4040a8:	mov	w0, #0x1                   	// #1
  4040ac:	str	w0, [sp, #132]
  4040b0:	mov	x27, #0x1                   	// #1
  4040b4:	str	x27, [sp, #144]
  4040b8:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  4040bc:	add	x0, x0, #0x468
  4040c0:	str	x0, [sp, #160]
  4040c4:	b	403f68 <ferror@plt+0x22c8>
  4040c8:	str	wzr, [sp, #112]
  4040cc:	mov	x27, #0x1                   	// #1
  4040d0:	str	x27, [sp, #144]
  4040d4:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  4040d8:	add	x0, x0, #0x490
  4040dc:	str	x0, [sp, #160]
  4040e0:	mov	w23, #0x2                   	// #2
  4040e4:	b	403f68 <ferror@plt+0x22c8>
  4040e8:	ldr	x0, [sp, #144]
  4040ec:	add	x20, x24, x0
  4040f0:	cmp	x0, #0x1
  4040f4:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  4040f8:	b.ne	404108 <ferror@plt+0x2468>  // b.any
  4040fc:	ldr	x0, [sp, #136]
  404100:	bl	4018c0 <strlen@plt>
  404104:	mov	x25, x0
  404108:	cmp	x20, x25
  40410c:	b.hi	404d38 <ferror@plt+0x3098>  // b.pmore
  404110:	ldr	x0, [sp, #136]
  404114:	add	x20, x0, x24
  404118:	ldr	x2, [sp, #144]
  40411c:	ldr	x1, [sp, #160]
  404120:	mov	x0, x20
  404124:	bl	401b00 <memcmp@plt>
  404128:	cbnz	w0, 404d38 <ferror@plt+0x3098>
  40412c:	ldr	w0, [sp, #112]
  404130:	cbnz	w0, 404158 <ferror@plt+0x24b8>
  404134:	ldrb	w20, [x20]
  404138:	cmp	w20, #0x7e
  40413c:	b.hi	404624 <ferror@plt+0x2984>  // b.pmore
  404140:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  404144:	add	x0, x0, #0x510
  404148:	ldrh	w0, [x0, w20, uxtw #1]
  40414c:	adr	x1, 404158 <ferror@plt+0x24b8>
  404150:	add	x0, x1, w0, sxth #2
  404154:	br	x0
  404158:	mov	x24, x25
  40415c:	mov	w25, w23
  404160:	b	404cc0 <ferror@plt+0x3020>
  404164:	ldr	w0, [sp, #132]
  404168:	cbnz	w0, 404184 <ferror@plt+0x24e4>
  40416c:	ldr	x0, [sp, #184]
  404170:	tbnz	w0, #0, 404a58 <ferror@plt+0x2db8>
  404174:	ldr	w0, [sp, #132]
  404178:	mov	w22, w0
  40417c:	mov	w19, w0
  404180:	b	404998 <ferror@plt+0x2cf8>
  404184:	ldr	w0, [sp, #112]
  404188:	cbnz	w0, 404c74 <ferror@plt+0x2fd4>
  40418c:	mov	w22, w0
  404190:	cmp	w23, #0x2
  404194:	cset	w1, eq  // eq = none
  404198:	ldr	w0, [sp, #124]
  40419c:	eor	w0, w0, #0x1
  4041a0:	ands	w0, w1, w0
  4041a4:	b.eq	404208 <ferror@plt+0x2568>  // b.none
  4041a8:	cmp	x26, x27
  4041ac:	b.ls	4041b8 <ferror@plt+0x2518>  // b.plast
  4041b0:	mov	w1, #0x27                  	// #39
  4041b4:	strb	w1, [x28, x27]
  4041b8:	add	x1, x27, #0x1
  4041bc:	cmp	x26, x1
  4041c0:	b.ls	4041cc <ferror@plt+0x252c>  // b.plast
  4041c4:	mov	w2, #0x24                  	// #36
  4041c8:	strb	w2, [x28, x1]
  4041cc:	add	x1, x27, #0x2
  4041d0:	cmp	x26, x1
  4041d4:	b.ls	4041e0 <ferror@plt+0x2540>  // b.plast
  4041d8:	mov	w2, #0x27                  	// #39
  4041dc:	strb	w2, [x28, x1]
  4041e0:	add	x1, x27, #0x3
  4041e4:	cmp	x26, x1
  4041e8:	b.ls	404d24 <ferror@plt+0x3084>  // b.plast
  4041ec:	mov	w2, #0x5c                  	// #92
  4041f0:	strb	w2, [x28, x1]
  4041f4:	add	x27, x27, #0x4
  4041f8:	str	w0, [sp, #124]
  4041fc:	mov	w19, #0x0                   	// #0
  404200:	mov	w20, #0x30                  	// #48
  404204:	b	4049c0 <ferror@plt+0x2d20>
  404208:	cmp	x26, x27
  40420c:	b.hi	40422c <ferror@plt+0x258c>  // b.pmore
  404210:	add	x2, x27, #0x1
  404214:	cbnz	w21, 40423c <ferror@plt+0x259c>
  404218:	mov	w0, w19
  40421c:	mov	w19, w21
  404220:	mov	x27, x2
  404224:	mov	w20, #0x30                  	// #48
  404228:	b	404998 <ferror@plt+0x2cf8>
  40422c:	mov	w1, #0x5c                  	// #92
  404230:	strb	w1, [x28, x27]
  404234:	add	x2, x27, #0x1
  404238:	cbz	w21, 404278 <ferror@plt+0x25d8>
  40423c:	add	x1, x24, #0x1
  404240:	cmp	x1, x25
  404244:	b.cs	404260 <ferror@plt+0x25c0>  // b.hs, b.nlast
  404248:	ldr	x3, [sp, #136]
  40424c:	ldrb	w1, [x3, x1]
  404250:	sub	w1, w1, #0x30
  404254:	and	w1, w1, #0xff
  404258:	cmp	w1, #0x9
  40425c:	b.ls	40428c <ferror@plt+0x25ec>  // b.plast
  404260:	mov	w1, w0
  404264:	mov	w0, w19
  404268:	mov	w19, w1
  40426c:	mov	x27, x2
  404270:	mov	w20, #0x30                  	// #48
  404274:	b	4049a8 <ferror@plt+0x2d08>
  404278:	mov	w0, w19
  40427c:	mov	w19, w21
  404280:	mov	x27, x2
  404284:	mov	w20, #0x30                  	// #48
  404288:	b	4049c0 <ferror@plt+0x2d20>
  40428c:	cmp	x26, x2
  404290:	b.ls	40429c <ferror@plt+0x25fc>  // b.plast
  404294:	mov	w1, #0x30                  	// #48
  404298:	strb	w1, [x28, x2]
  40429c:	add	x1, x27, #0x2
  4042a0:	cmp	x26, x1
  4042a4:	b.ls	4042b0 <ferror@plt+0x2610>  // b.plast
  4042a8:	mov	w2, #0x30                  	// #48
  4042ac:	strb	w2, [x28, x1]
  4042b0:	add	x2, x27, #0x3
  4042b4:	b	404260 <ferror@plt+0x25c0>
  4042b8:	mov	w22, #0x0                   	// #0
  4042bc:	cmp	w23, #0x2
  4042c0:	b.eq	4042dc <ferror@plt+0x263c>  // b.none
  4042c4:	cmp	w23, #0x5
  4042c8:	b.eq	4042f0 <ferror@plt+0x2650>  // b.none
  4042cc:	mov	w19, #0x0                   	// #0
  4042d0:	mov	w0, #0x0                   	// #0
  4042d4:	mov	w20, #0x3f                  	// #63
  4042d8:	b	404998 <ferror@plt+0x2cf8>
  4042dc:	ldr	w0, [sp, #112]
  4042e0:	cbnz	w0, 404c80 <ferror@plt+0x2fe0>
  4042e4:	mov	w19, w0
  4042e8:	mov	w20, #0x3f                  	// #63
  4042ec:	b	40460c <ferror@plt+0x296c>
  4042f0:	ldr	x0, [sp, #184]
  4042f4:	tbz	w0, #2, 404ac0 <ferror@plt+0x2e20>
  4042f8:	add	x4, x24, #0x2
  4042fc:	cmp	x4, x25
  404300:	b.cs	404ad0 <ferror@plt+0x2e30>  // b.hs, b.nlast
  404304:	ldr	x0, [sp, #136]
  404308:	add	x0, x0, x24
  40430c:	ldrb	w20, [x0, #1]
  404310:	cmp	w20, #0x3f
  404314:	b.eq	404328 <ferror@plt+0x2688>  // b.none
  404318:	mov	w19, #0x0                   	// #0
  40431c:	mov	w0, #0x0                   	// #0
  404320:	mov	w20, #0x3f                  	// #63
  404324:	b	404998 <ferror@plt+0x2cf8>
  404328:	ldr	x0, [sp, #136]
  40432c:	ldrb	w3, [x0, x4]
  404330:	cmp	w3, #0x3e
  404334:	b.hi	404ae0 <ferror@plt+0x2e40>  // b.pmore
  404338:	mov	x1, #0x1                   	// #1
  40433c:	lsl	x1, x1, x3
  404340:	mov	w19, #0x0                   	// #0
  404344:	mov	w0, #0x0                   	// #0
  404348:	mov	x2, #0xa38200000000        	// #179778741075968
  40434c:	movk	x2, #0x7000, lsl #48
  404350:	tst	x1, x2
  404354:	b.eq	404998 <ferror@plt+0x2cf8>  // b.none
  404358:	ldr	w0, [sp, #112]
  40435c:	cbnz	w0, 404d18 <ferror@plt+0x3078>
  404360:	cmp	x26, x27
  404364:	b.ls	404370 <ferror@plt+0x26d0>  // b.plast
  404368:	mov	w0, #0x3f                  	// #63
  40436c:	strb	w0, [x28, x27]
  404370:	add	x0, x27, #0x1
  404374:	cmp	x26, x0
  404378:	b.ls	404384 <ferror@plt+0x26e4>  // b.plast
  40437c:	mov	w1, #0x22                  	// #34
  404380:	strb	w1, [x28, x0]
  404384:	add	x0, x27, #0x2
  404388:	cmp	x26, x0
  40438c:	b.ls	404398 <ferror@plt+0x26f8>  // b.plast
  404390:	mov	w1, #0x22                  	// #34
  404394:	strb	w1, [x28, x0]
  404398:	add	x0, x27, #0x3
  40439c:	cmp	x26, x0
  4043a0:	b.ls	4043ac <ferror@plt+0x270c>  // b.plast
  4043a4:	mov	w1, #0x3f                  	// #63
  4043a8:	strb	w1, [x28, x0]
  4043ac:	add	x27, x27, #0x4
  4043b0:	ldr	w0, [sp, #112]
  4043b4:	mov	w19, w0
  4043b8:	mov	w20, w3
  4043bc:	mov	x24, x4
  4043c0:	b	404998 <ferror@plt+0x2cf8>
  4043c4:	mov	w22, #0x0                   	// #0
  4043c8:	mov	w20, #0x8                   	// #8
  4043cc:	mov	w0, #0x62                  	// #98
  4043d0:	b	404400 <ferror@plt+0x2760>
  4043d4:	mov	w22, #0x0                   	// #0
  4043d8:	mov	w20, #0xc                   	// #12
  4043dc:	mov	w0, #0x66                  	// #102
  4043e0:	b	404400 <ferror@plt+0x2760>
  4043e4:	mov	w22, #0x0                   	// #0
  4043e8:	mov	w20, #0xd                   	// #13
  4043ec:	mov	w0, #0x72                  	// #114
  4043f0:	ldr	w1, [sp, #112]
  4043f4:	cmp	w1, #0x0
  4043f8:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  4043fc:	b.eq	4044d8 <ferror@plt+0x2838>  // b.none
  404400:	ldr	w1, [sp, #132]
  404404:	cbnz	w1, 404b14 <ferror@plt+0x2e74>
  404408:	mov	w19, w1
  40440c:	mov	w0, w1
  404410:	b	404998 <ferror@plt+0x2cf8>
  404414:	mov	w22, #0x0                   	// #0
  404418:	mov	w20, #0x9                   	// #9
  40441c:	mov	w0, #0x74                  	// #116
  404420:	b	4043f0 <ferror@plt+0x2750>
  404424:	mov	w22, #0x0                   	// #0
  404428:	mov	w20, #0xb                   	// #11
  40442c:	mov	w0, #0x76                  	// #118
  404430:	b	404400 <ferror@plt+0x2760>
  404434:	mov	w22, #0x0                   	// #0
  404438:	cmp	w23, #0x2
  40443c:	b.eq	404468 <ferror@plt+0x27c8>  // b.none
  404440:	ldr	w0, [sp, #132]
  404444:	cmp	w0, #0x0
  404448:	ldr	w0, [sp, #112]
  40444c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404450:	ldr	w0, [sp, #176]
  404454:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404458:	b.ne	404b2c <ferror@plt+0x2e8c>  // b.any
  40445c:	mov	w20, #0x5c                  	// #92
  404460:	mov	w0, w20
  404464:	b	404400 <ferror@plt+0x2760>
  404468:	ldr	w0, [sp, #112]
  40446c:	cbnz	w0, 404c8c <ferror@plt+0x2fec>
  404470:	mov	w19, w0
  404474:	mov	w20, #0x5c                  	// #92
  404478:	eor	w0, w0, #0x1
  40447c:	ldr	w1, [sp, #124]
  404480:	and	w0, w1, w0
  404484:	tst	w0, #0xff
  404488:	b.eq	404a38 <ferror@plt+0x2d98>  // b.none
  40448c:	cmp	x26, x27
  404490:	b.ls	40449c <ferror@plt+0x27fc>  // b.plast
  404494:	mov	w0, #0x27                  	// #39
  404498:	strb	w0, [x28, x27]
  40449c:	add	x0, x27, #0x1
  4044a0:	cmp	x26, x0
  4044a4:	b.ls	4044b0 <ferror@plt+0x2810>  // b.plast
  4044a8:	mov	w1, #0x27                  	// #39
  4044ac:	strb	w1, [x28, x0]
  4044b0:	add	x27, x27, #0x2
  4044b4:	str	wzr, [sp, #124]
  4044b8:	b	404a38 <ferror@plt+0x2d98>
  4044bc:	mov	w0, #0x6e                  	// #110
  4044c0:	b	4043f0 <ferror@plt+0x2750>
  4044c4:	mov	w0, #0x6e                  	// #110
  4044c8:	b	4043f0 <ferror@plt+0x2750>
  4044cc:	mov	w22, #0x0                   	// #0
  4044d0:	mov	w0, #0x6e                  	// #110
  4044d4:	b	4043f0 <ferror@plt+0x2750>
  4044d8:	mov	x24, x25
  4044dc:	mov	w25, #0x2                   	// #2
  4044e0:	b	404cac <ferror@plt+0x300c>
  4044e4:	mov	w0, #0x61                  	// #97
  4044e8:	b	404400 <ferror@plt+0x2760>
  4044ec:	mov	w0, #0x61                  	// #97
  4044f0:	b	404400 <ferror@plt+0x2760>
  4044f4:	mov	w22, #0x0                   	// #0
  4044f8:	cmp	x25, #0x1
  4044fc:	cset	w0, ne  // ne = any
  404500:	cmn	x25, #0x1
  404504:	b.eq	40451c <ferror@plt+0x287c>  // b.none
  404508:	cbnz	w0, 404aec <ferror@plt+0x2e4c>
  40450c:	cbz	x24, 404544 <ferror@plt+0x28a4>
  404510:	mov	w19, #0x0                   	// #0
  404514:	mov	w0, #0x0                   	// #0
  404518:	b	404998 <ferror@plt+0x2cf8>
  40451c:	ldr	x0, [sp, #136]
  404520:	ldrb	w0, [x0, #1]
  404524:	cmp	w0, #0x0
  404528:	cset	w0, ne  // ne = any
  40452c:	b	404508 <ferror@plt+0x2868>
  404530:	mov	w22, #0x0                   	// #0
  404534:	b	40450c <ferror@plt+0x286c>
  404538:	mov	w22, #0x0                   	// #0
  40453c:	b	404544 <ferror@plt+0x28a4>
  404540:	mov	w19, w22
  404544:	cmp	w23, #0x2
  404548:	cset	w0, eq  // eq = none
  40454c:	ldr	w1, [sp, #112]
  404550:	ands	w0, w1, w0
  404554:	b.eq	404998 <ferror@plt+0x2cf8>  // b.none
  404558:	mov	x24, x25
  40455c:	mov	w25, #0x2                   	// #2
  404560:	b	404cac <ferror@plt+0x300c>
  404564:	ldr	w19, [sp, #112]
  404568:	b	404544 <ferror@plt+0x28a4>
  40456c:	mov	w22, #0x0                   	// #0
  404570:	mov	w19, #0x0                   	// #0
  404574:	b	404544 <ferror@plt+0x28a4>
  404578:	mov	w22, #0x0                   	// #0
  40457c:	cmp	w23, #0x2
  404580:	b.eq	404594 <ferror@plt+0x28f4>  // b.none
  404584:	str	w19, [sp, #180]
  404588:	mov	w0, #0x0                   	// #0
  40458c:	mov	w20, #0x27                  	// #39
  404590:	b	404998 <ferror@plt+0x2cf8>
  404594:	ldr	w0, [sp, #112]
  404598:	cbnz	w0, 404c98 <ferror@plt+0x2ff8>
  40459c:	cmp	x26, #0x0
  4045a0:	mov	x0, #0x0                   	// #0
  4045a4:	ldr	x1, [sp, #192]
  4045a8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  4045ac:	b.eq	4045dc <ferror@plt+0x293c>  // b.none
  4045b0:	cmp	x26, x27
  4045b4:	b.ls	4045c0 <ferror@plt+0x2920>  // b.plast
  4045b8:	mov	w0, #0x27                  	// #39
  4045bc:	strb	w0, [x28, x27]
  4045c0:	add	x0, x27, #0x1
  4045c4:	cmp	x26, x0
  4045c8:	b.ls	404614 <ferror@plt+0x2974>  // b.plast
  4045cc:	mov	w1, #0x5c                  	// #92
  4045d0:	strb	w1, [x28, x0]
  4045d4:	mov	x0, x26
  4045d8:	ldr	x26, [sp, #192]
  4045dc:	add	x1, x27, #0x2
  4045e0:	cmp	x1, x0
  4045e4:	b.cs	4045f0 <ferror@plt+0x2950>  // b.hs, b.nlast
  4045e8:	mov	w2, #0x27                  	// #39
  4045ec:	strb	w2, [x28, x1]
  4045f0:	add	x27, x27, #0x3
  4045f4:	str	w19, [sp, #180]
  4045f8:	ldr	w1, [sp, #112]
  4045fc:	str	w1, [sp, #124]
  404600:	str	x26, [sp, #192]
  404604:	mov	x26, x0
  404608:	mov	w20, #0x27                  	// #39
  40460c:	mov	w0, #0x0                   	// #0
  404610:	b	4049c0 <ferror@plt+0x2d20>
  404614:	mov	x0, x26
  404618:	ldr	x26, [sp, #192]
  40461c:	b	4045dc <ferror@plt+0x293c>
  404620:	mov	w22, #0x0                   	// #0
  404624:	ldr	x0, [sp, #168]
  404628:	cmp	x0, #0x1
  40462c:	b.ne	404668 <ferror@plt+0x29c8>  // b.any
  404630:	bl	401b50 <__ctype_b_loc@plt>
  404634:	and	x1, x20, #0xff
  404638:	ldr	x0, [x0]
  40463c:	ldrh	w19, [x0, x1, lsl #1]
  404640:	ubfx	x19, x19, #14, #1
  404644:	ldr	x0, [sp, #168]
  404648:	mov	x2, x0
  40464c:	eor	w0, w19, #0x1
  404650:	ldr	w1, [sp, #132]
  404654:	and	w0, w1, w0
  404658:	ands	w0, w0, #0xff
  40465c:	b.eq	404998 <ferror@plt+0x2cf8>  // b.none
  404660:	mov	w19, #0x0                   	// #0
  404664:	b	404814 <ferror@plt+0x2b74>
  404668:	str	xzr, [sp, #232]
  40466c:	cmn	x25, #0x1
  404670:	b.eq	404694 <ferror@plt+0x29f4>  // b.none
  404674:	mov	x0, #0x0                   	// #0
  404678:	str	w21, [sp, #176]
  40467c:	str	w20, [sp, #208]
  404680:	str	w22, [sp, #212]
  404684:	mov	x22, x0
  404688:	str	x27, [sp, #216]
  40468c:	ldr	w27, [sp, #112]
  404690:	b	404764 <ferror@plt+0x2ac4>
  404694:	ldr	x0, [sp, #136]
  404698:	bl	4018c0 <strlen@plt>
  40469c:	mov	x25, x0
  4046a0:	b	404674 <ferror@plt+0x29d4>
  4046a4:	ldr	w20, [sp, #208]
  4046a8:	mov	x2, x22
  4046ac:	mov	x0, x21
  4046b0:	ldr	w21, [sp, #176]
  4046b4:	ldr	w22, [sp, #212]
  4046b8:	ldr	x27, [sp, #216]
  4046bc:	mov	w19, #0x0                   	// #0
  4046c0:	cmp	x0, x25
  4046c4:	b.cs	40480c <ferror@plt+0x2b6c>  // b.hs, b.nlast
  4046c8:	mov	x1, x2
  4046cc:	ldr	x2, [sp, #136]
  4046d0:	ldrb	w0, [x2, x0]
  4046d4:	cbz	w0, 4046f4 <ferror@plt+0x2a54>
  4046d8:	add	x1, x1, #0x1
  4046dc:	add	x0, x24, x1
  4046e0:	cmp	x25, x0
  4046e4:	b.hi	4046d0 <ferror@plt+0x2a30>  // b.pmore
  4046e8:	mov	x2, x1
  4046ec:	mov	w19, #0x0                   	// #0
  4046f0:	b	40480c <ferror@plt+0x2b6c>
  4046f4:	mov	x2, x1
  4046f8:	mov	w19, #0x0                   	// #0
  4046fc:	b	40480c <ferror@plt+0x2b6c>
  404700:	add	x1, x1, #0x1
  404704:	cmp	x1, x21
  404708:	b.eq	404744 <ferror@plt+0x2aa4>  // b.none
  40470c:	ldrb	w0, [x1]
  404710:	sub	w0, w0, #0x5b
  404714:	and	w0, w0, #0xff
  404718:	cmp	w0, #0x21
  40471c:	b.hi	404700 <ferror@plt+0x2a60>  // b.pmore
  404720:	mov	x2, #0x1                   	// #1
  404724:	lsl	x0, x2, x0
  404728:	mov	x2, #0x2b                  	// #43
  40472c:	movk	x2, #0x2, lsl #32
  404730:	tst	x0, x2
  404734:	b.eq	404700 <ferror@plt+0x2a60>  // b.none
  404738:	mov	x24, x25
  40473c:	mov	w25, #0x2                   	// #2
  404740:	b	404cac <ferror@plt+0x300c>
  404744:	ldr	w0, [sp, #228]
  404748:	bl	401c30 <iswprint@plt>
  40474c:	cmp	w0, #0x0
  404750:	csel	w19, w19, wzr, ne  // ne = any
  404754:	add	x22, x22, x20
  404758:	add	x0, sp, #0xe8
  40475c:	bl	401ad0 <mbsinit@plt>
  404760:	cbnz	w0, 4047c4 <ferror@plt+0x2b24>
  404764:	add	x21, x24, x22
  404768:	add	x3, sp, #0xe8
  40476c:	sub	x2, x25, x21
  404770:	ldr	x0, [sp, #136]
  404774:	add	x1, x0, x21
  404778:	add	x0, sp, #0xe4
  40477c:	bl	406464 <ferror@plt+0x47c4>
  404780:	mov	x20, x0
  404784:	cbz	x0, 4047f8 <ferror@plt+0x2b58>
  404788:	cmn	x0, #0x1
  40478c:	b.eq	4047dc <ferror@plt+0x2b3c>  // b.none
  404790:	cmn	x0, #0x2
  404794:	b.eq	4046a4 <ferror@plt+0x2a04>  // b.none
  404798:	cmp	w27, #0x0
  40479c:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  4047a0:	b.ne	404744 <ferror@plt+0x2aa4>  // b.any
  4047a4:	cmp	x0, #0x1
  4047a8:	b.ls	404744 <ferror@plt+0x2aa4>  // b.plast
  4047ac:	add	x1, x21, #0x1
  4047b0:	ldr	x0, [sp, #136]
  4047b4:	add	x1, x0, x1
  4047b8:	add	x0, x0, x20
  4047bc:	add	x21, x0, x21
  4047c0:	b	40470c <ferror@plt+0x2a6c>
  4047c4:	ldr	w21, [sp, #176]
  4047c8:	ldr	w20, [sp, #208]
  4047cc:	mov	x2, x22
  4047d0:	ldr	w22, [sp, #212]
  4047d4:	ldr	x27, [sp, #216]
  4047d8:	b	40480c <ferror@plt+0x2b6c>
  4047dc:	ldr	w21, [sp, #176]
  4047e0:	ldr	w20, [sp, #208]
  4047e4:	mov	x2, x22
  4047e8:	ldr	w22, [sp, #212]
  4047ec:	ldr	x27, [sp, #216]
  4047f0:	mov	w19, #0x0                   	// #0
  4047f4:	b	40480c <ferror@plt+0x2b6c>
  4047f8:	ldr	w21, [sp, #176]
  4047fc:	ldr	w20, [sp, #208]
  404800:	mov	x2, x22
  404804:	ldr	w22, [sp, #212]
  404808:	ldr	x27, [sp, #216]
  40480c:	cmp	x2, #0x1
  404810:	b.ls	40464c <ferror@plt+0x29ac>  // b.plast
  404814:	add	x5, x24, x2
  404818:	mov	w0, #0x0                   	// #0
  40481c:	eor	w1, w19, #0x1
  404820:	ldr	w2, [sp, #132]
  404824:	and	w1, w2, w1
  404828:	and	w1, w1, #0xff
  40482c:	mov	w3, w1
  404830:	mov	w6, #0x5c                  	// #92
  404834:	mov	w7, #0x24                  	// #36
  404838:	ldr	w9, [sp, #112]
  40483c:	ldr	w4, [sp, #124]
  404840:	ldr	x8, [sp, #136]
  404844:	b	4048c0 <ferror@plt+0x2c20>
  404848:	cbz	w22, 40485c <ferror@plt+0x2bbc>
  40484c:	cmp	x26, x27
  404850:	b.ls	404858 <ferror@plt+0x2bb8>  // b.plast
  404854:	strb	w6, [x28, x27]
  404858:	add	x27, x27, #0x1
  40485c:	add	x2, x24, #0x1
  404860:	cmp	x2, x5
  404864:	b.cs	404978 <ferror@plt+0x2cd8>  // b.hs, b.nlast
  404868:	eor	w22, w0, #0x1
  40486c:	and	w22, w4, w22
  404870:	ands	w22, w22, #0xff
  404874:	b.eq	40498c <ferror@plt+0x2cec>  // b.none
  404878:	cmp	x26, x27
  40487c:	b.ls	404888 <ferror@plt+0x2be8>  // b.plast
  404880:	mov	w4, #0x27                  	// #39
  404884:	strb	w4, [x28, x27]
  404888:	add	x4, x27, #0x1
  40488c:	cmp	x26, x4
  404890:	b.ls	40489c <ferror@plt+0x2bfc>  // b.plast
  404894:	mov	w10, #0x27                  	// #39
  404898:	strb	w10, [x28, x4]
  40489c:	add	x27, x27, #0x2
  4048a0:	mov	w22, w3
  4048a4:	mov	x24, x2
  4048a8:	mov	w4, w3
  4048ac:	cmp	x26, x27
  4048b0:	b.ls	4048b8 <ferror@plt+0x2c18>  // b.plast
  4048b4:	strb	w20, [x28, x27]
  4048b8:	add	x27, x27, #0x1
  4048bc:	ldrb	w20, [x8, x24]
  4048c0:	cbz	w1, 404848 <ferror@plt+0x2ba8>
  4048c4:	cbnz	w9, 404c54 <ferror@plt+0x2fb4>
  4048c8:	cmp	w23, #0x2
  4048cc:	cset	w0, eq  // eq = none
  4048d0:	eor	w2, w4, #0x1
  4048d4:	ands	w0, w0, w2
  4048d8:	b.eq	404918 <ferror@plt+0x2c78>  // b.none
  4048dc:	cmp	x26, x27
  4048e0:	b.ls	4048ec <ferror@plt+0x2c4c>  // b.plast
  4048e4:	mov	w2, #0x27                  	// #39
  4048e8:	strb	w2, [x28, x27]
  4048ec:	add	x2, x27, #0x1
  4048f0:	cmp	x26, x2
  4048f4:	b.ls	4048fc <ferror@plt+0x2c5c>  // b.plast
  4048f8:	strb	w7, [x28, x2]
  4048fc:	add	x2, x27, #0x2
  404900:	cmp	x26, x2
  404904:	b.ls	404910 <ferror@plt+0x2c70>  // b.plast
  404908:	mov	w4, #0x27                  	// #39
  40490c:	strb	w4, [x28, x2]
  404910:	add	x27, x27, #0x3
  404914:	mov	w4, w0
  404918:	cmp	x26, x27
  40491c:	b.ls	404924 <ferror@plt+0x2c84>  // b.plast
  404920:	strb	w6, [x28, x27]
  404924:	add	x0, x27, #0x1
  404928:	cmp	x26, x0
  40492c:	b.ls	40493c <ferror@plt+0x2c9c>  // b.plast
  404930:	lsr	w2, w20, #6
  404934:	add	w2, w2, #0x30
  404938:	strb	w2, [x28, x0]
  40493c:	add	x0, x27, #0x2
  404940:	cmp	x26, x0
  404944:	b.ls	404954 <ferror@plt+0x2cb4>  // b.plast
  404948:	ubfx	x2, x20, #3, #3
  40494c:	add	w2, w2, #0x30
  404950:	strb	w2, [x28, x0]
  404954:	add	x27, x27, #0x3
  404958:	and	w20, w20, #0x7
  40495c:	add	w20, w20, #0x30
  404960:	add	x2, x24, #0x1
  404964:	cmp	x5, x2
  404968:	b.ls	404980 <ferror@plt+0x2ce0>  // b.plast
  40496c:	mov	w0, w3
  404970:	mov	x24, x2
  404974:	b	4048ac <ferror@plt+0x2c0c>
  404978:	str	w4, [sp, #124]
  40497c:	b	404478 <ferror@plt+0x27d8>
  404980:	str	w4, [sp, #124]
  404984:	mov	w0, w1
  404988:	b	404478 <ferror@plt+0x27d8>
  40498c:	mov	x24, x2
  404990:	b	4048ac <ferror@plt+0x2c0c>
  404994:	mov	w0, w22
  404998:	cmp	w21, #0x0
  40499c:	ldr	w1, [sp, #112]
  4049a0:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  4049a4:	b.eq	4049c0 <ferror@plt+0x2d20>  // b.none
  4049a8:	ldr	x2, [sp, #152]
  4049ac:	cbz	x2, 4049c0 <ferror@plt+0x2d20>
  4049b0:	ubfx	x1, x20, #5, #8
  4049b4:	ldr	w1, [x2, x1, lsl #2]
  4049b8:	lsr	w1, w1, w20
  4049bc:	tbnz	w1, #0, 4049c4 <ferror@plt+0x2d24>
  4049c0:	cbz	w22, 404478 <ferror@plt+0x27d8>
  4049c4:	ldr	w0, [sp, #112]
  4049c8:	cbnz	w0, 404ca4 <ferror@plt+0x3004>
  4049cc:	cmp	w23, #0x2
  4049d0:	cset	w0, eq  // eq = none
  4049d4:	ldr	w1, [sp, #124]
  4049d8:	eor	w1, w1, #0x1
  4049dc:	ands	w0, w0, w1
  4049e0:	b.eq	404a24 <ferror@plt+0x2d84>  // b.none
  4049e4:	cmp	x26, x27
  4049e8:	b.ls	4049f4 <ferror@plt+0x2d54>  // b.plast
  4049ec:	mov	w1, #0x27                  	// #39
  4049f0:	strb	w1, [x28, x27]
  4049f4:	add	x1, x27, #0x1
  4049f8:	cmp	x26, x1
  4049fc:	b.ls	404a08 <ferror@plt+0x2d68>  // b.plast
  404a00:	mov	w2, #0x24                  	// #36
  404a04:	strb	w2, [x28, x1]
  404a08:	add	x1, x27, #0x2
  404a0c:	cmp	x26, x1
  404a10:	b.ls	404a1c <ferror@plt+0x2d7c>  // b.plast
  404a14:	mov	w2, #0x27                  	// #39
  404a18:	strb	w2, [x28, x1]
  404a1c:	add	x27, x27, #0x3
  404a20:	str	w0, [sp, #124]
  404a24:	cmp	x26, x27
  404a28:	b.ls	404a34 <ferror@plt+0x2d94>  // b.plast
  404a2c:	mov	w0, #0x5c                  	// #92
  404a30:	strb	w0, [x28, x27]
  404a34:	add	x27, x27, #0x1
  404a38:	cmp	x27, x26
  404a3c:	b.cs	404a44 <ferror@plt+0x2da4>  // b.hs, b.nlast
  404a40:	strb	w20, [x28, x27]
  404a44:	add	x27, x27, #0x1
  404a48:	cmp	w19, #0x0
  404a4c:	ldr	w0, [sp, #128]
  404a50:	csel	w0, w0, w19, ne  // ne = any
  404a54:	str	w0, [sp, #128]
  404a58:	add	x24, x24, #0x1
  404a5c:	cmp	x25, x24
  404a60:	cset	w19, ne  // ne = any
  404a64:	cmn	x25, #0x1
  404a68:	b.eq	404b3c <ferror@plt+0x2e9c>  // b.none
  404a6c:	cbz	w19, 404b50 <ferror@plt+0x2eb0>
  404a70:	cmp	w23, #0x2
  404a74:	cset	w21, ne  // ne = any
  404a78:	ldr	w0, [sp, #132]
  404a7c:	and	w21, w0, w21
  404a80:	ldr	x0, [sp, #144]
  404a84:	cmp	x0, #0x0
  404a88:	cset	w0, ne  // ne = any
  404a8c:	str	w0, [sp, #176]
  404a90:	csel	w22, w21, wzr, ne  // ne = any
  404a94:	cbnz	w22, 4040e8 <ferror@plt+0x2448>
  404a98:	ldr	x0, [sp, #136]
  404a9c:	ldrb	w20, [x0, x24]
  404aa0:	cmp	w20, #0x7e
  404aa4:	b.hi	404624 <ferror@plt+0x2984>  // b.pmore
  404aa8:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  404aac:	add	x0, x0, #0x610
  404ab0:	ldrh	w0, [x0, w20, uxtw #1]
  404ab4:	adr	x1, 404ac0 <ferror@plt+0x2e20>
  404ab8:	add	x0, x1, w0, sxth #2
  404abc:	br	x0
  404ac0:	mov	w19, #0x0                   	// #0
  404ac4:	mov	w0, #0x0                   	// #0
  404ac8:	mov	w20, #0x3f                  	// #63
  404acc:	b	404998 <ferror@plt+0x2cf8>
  404ad0:	mov	w19, #0x0                   	// #0
  404ad4:	mov	w0, #0x0                   	// #0
  404ad8:	mov	w20, #0x3f                  	// #63
  404adc:	b	404998 <ferror@plt+0x2cf8>
  404ae0:	mov	w19, #0x0                   	// #0
  404ae4:	mov	w0, #0x0                   	// #0
  404ae8:	b	404998 <ferror@plt+0x2cf8>
  404aec:	mov	w19, #0x0                   	// #0
  404af0:	mov	w0, #0x0                   	// #0
  404af4:	b	404998 <ferror@plt+0x2cf8>
  404af8:	mov	w19, w22
  404afc:	ldr	w0, [sp, #112]
  404b00:	b	404998 <ferror@plt+0x2cf8>
  404b04:	mov	w19, w22
  404b08:	mov	w22, #0x0                   	// #0
  404b0c:	mov	w0, #0x0                   	// #0
  404b10:	b	404998 <ferror@plt+0x2cf8>
  404b14:	mov	w20, w0
  404b18:	mov	w19, #0x0                   	// #0
  404b1c:	b	4049c4 <ferror@plt+0x2d24>
  404b20:	mov	w19, #0x0                   	// #0
  404b24:	mov	w20, #0x61                  	// #97
  404b28:	b	4049c4 <ferror@plt+0x2d24>
  404b2c:	mov	w19, #0x0                   	// #0
  404b30:	mov	w0, #0x0                   	// #0
  404b34:	mov	w20, #0x5c                  	// #92
  404b38:	b	404478 <ferror@plt+0x27d8>
  404b3c:	ldr	x0, [sp, #136]
  404b40:	ldrb	w0, [x0, x24]
  404b44:	cmp	w0, #0x0
  404b48:	cset	w19, ne  // ne = any
  404b4c:	b	404a6c <ferror@plt+0x2dcc>
  404b50:	cmp	w23, #0x2
  404b54:	cset	w1, eq  // eq = none
  404b58:	cmp	w1, #0x0
  404b5c:	ldr	w0, [sp, #112]
  404b60:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404b64:	ccmp	x27, #0x0, #0x0, ne  // ne = any
  404b68:	b.eq	404c68 <ferror@plt+0x2fc8>  // b.none
  404b6c:	eor	w0, w0, #0x1
  404b70:	and	w0, w0, #0xff
  404b74:	cmp	w1, #0x0
  404b78:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404b7c:	cset	w1, ne  // ne = any
  404b80:	ldr	w2, [sp, #180]
  404b84:	ands	w1, w2, w1
  404b88:	b.eq	404bfc <ferror@plt+0x2f5c>  // b.none
  404b8c:	ldr	w0, [sp, #128]
  404b90:	cbnz	w0, 404bc4 <ferror@plt+0x2f24>
  404b94:	cmp	x26, #0x0
  404b98:	cset	w0, eq  // eq = none
  404b9c:	ldr	x2, [sp, #192]
  404ba0:	cmp	x2, #0x0
  404ba4:	csel	w0, w0, wzr, ne  // ne = any
  404ba8:	str	w0, [sp, #180]
  404bac:	mov	w23, #0x2                   	// #2
  404bb0:	cbz	w0, 404bf8 <ferror@plt+0x2f58>
  404bb4:	ldr	w0, [sp, #128]
  404bb8:	str	w0, [sp, #112]
  404bbc:	ldr	x26, [sp, #192]
  404bc0:	b	403e8c <ferror@plt+0x21ec>
  404bc4:	ldr	x0, [sp, #240]
  404bc8:	str	x0, [sp]
  404bcc:	ldr	x7, [sp, #200]
  404bd0:	ldr	x6, [sp, #152]
  404bd4:	ldr	w5, [sp, #184]
  404bd8:	mov	w4, #0x5                   	// #5
  404bdc:	mov	x3, x25
  404be0:	ldr	x2, [sp, #136]
  404be4:	ldr	x1, [sp, #192]
  404be8:	mov	x0, x28
  404bec:	bl	403e0c <ferror@plt+0x216c>
  404bf0:	mov	x27, x0
  404bf4:	b	404cf4 <ferror@plt+0x3054>
  404bf8:	mov	w0, w1
  404bfc:	ldr	x1, [sp, #160]
  404c00:	cmp	x1, #0x0
  404c04:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404c08:	b.eq	404c44 <ferror@plt+0x2fa4>  // b.none
  404c0c:	mov	x0, x1
  404c10:	ldrb	w2, [x1]
  404c14:	cbz	w2, 404c44 <ferror@plt+0x2fa4>
  404c18:	mov	x1, x27
  404c1c:	sub	x0, x0, x27
  404c20:	b	404c30 <ferror@plt+0x2f90>
  404c24:	add	x1, x1, #0x1
  404c28:	ldrb	w2, [x0, x1]
  404c2c:	cbz	w2, 404c40 <ferror@plt+0x2fa0>
  404c30:	cmp	x26, x1
  404c34:	b.ls	404c24 <ferror@plt+0x2f84>  // b.plast
  404c38:	strb	w2, [x28, x1]
  404c3c:	b	404c24 <ferror@plt+0x2f84>
  404c40:	mov	x27, x1
  404c44:	cmp	x26, x27
  404c48:	b.ls	404cf4 <ferror@plt+0x3054>  // b.plast
  404c4c:	strb	wzr, [x28, x27]
  404c50:	b	404cf4 <ferror@plt+0x3054>
  404c54:	mov	x24, x25
  404c58:	mov	w25, w23
  404c5c:	ldr	w0, [sp, #112]
  404c60:	str	w0, [sp, #132]
  404c64:	b	404cac <ferror@plt+0x300c>
  404c68:	mov	x24, x25
  404c6c:	mov	w25, #0x2                   	// #2
  404c70:	b	404cac <ferror@plt+0x300c>
  404c74:	mov	x24, x25
  404c78:	mov	w25, w23
  404c7c:	b	404cac <ferror@plt+0x300c>
  404c80:	mov	x24, x25
  404c84:	mov	w25, w23
  404c88:	b	404cac <ferror@plt+0x300c>
  404c8c:	mov	x24, x25
  404c90:	mov	w25, w23
  404c94:	b	404cac <ferror@plt+0x300c>
  404c98:	mov	x24, x25
  404c9c:	mov	w25, w23
  404ca0:	b	404cac <ferror@plt+0x300c>
  404ca4:	mov	x24, x25
  404ca8:	mov	w25, w23
  404cac:	ldr	w0, [sp, #132]
  404cb0:	cmp	w0, #0x0
  404cb4:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  404cb8:	mov	w0, #0x4                   	// #4
  404cbc:	csel	w25, w25, w0, ne  // ne = any
  404cc0:	ldr	x0, [sp, #240]
  404cc4:	str	x0, [sp]
  404cc8:	ldr	x7, [sp, #200]
  404ccc:	mov	x6, #0x0                   	// #0
  404cd0:	ldr	w0, [sp, #184]
  404cd4:	and	w5, w0, #0xfffffffd
  404cd8:	mov	w4, w25
  404cdc:	mov	x3, x24
  404ce0:	ldr	x2, [sp, #136]
  404ce4:	mov	x1, x26
  404ce8:	mov	x0, x28
  404cec:	bl	403e0c <ferror@plt+0x216c>
  404cf0:	mov	x27, x0
  404cf4:	mov	x0, x27
  404cf8:	ldp	x19, x20, [sp, #32]
  404cfc:	ldp	x21, x22, [sp, #48]
  404d00:	ldp	x23, x24, [sp, #64]
  404d04:	ldp	x25, x26, [sp, #80]
  404d08:	ldp	x27, x28, [sp, #96]
  404d0c:	ldp	x29, x30, [sp, #16]
  404d10:	add	sp, sp, #0xf0
  404d14:	ret
  404d18:	mov	x24, x25
  404d1c:	mov	w25, w23
  404d20:	b	404cc0 <ferror@plt+0x3020>
  404d24:	add	x27, x27, #0x4
  404d28:	str	w0, [sp, #124]
  404d2c:	mov	w19, #0x0                   	// #0
  404d30:	mov	w20, #0x30                  	// #48
  404d34:	b	404998 <ferror@plt+0x2cf8>
  404d38:	ldr	x0, [sp, #136]
  404d3c:	ldrb	w20, [x0, x24]
  404d40:	cmp	w20, #0x7e
  404d44:	b.hi	404620 <ferror@plt+0x2980>  // b.pmore
  404d48:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  404d4c:	add	x0, x0, #0x710
  404d50:	ldrh	w0, [x0, w20, uxtw #1]
  404d54:	adr	x1, 404d60 <ferror@plt+0x30c0>
  404d58:	add	x0, x1, w0, sxth #2
  404d5c:	br	x0
  404d60:	sub	sp, sp, #0x80
  404d64:	stp	x29, x30, [sp, #16]
  404d68:	add	x29, sp, #0x10
  404d6c:	stp	x19, x20, [sp, #32]
  404d70:	stp	x21, x22, [sp, #48]
  404d74:	stp	x23, x24, [sp, #64]
  404d78:	stp	x25, x26, [sp, #80]
  404d7c:	stp	x27, x28, [sp, #96]
  404d80:	mov	w19, w0
  404d84:	str	x1, [sp, #112]
  404d88:	str	x2, [sp, #120]
  404d8c:	mov	x20, x3
  404d90:	bl	401c50 <__errno_location@plt>
  404d94:	mov	x23, x0
  404d98:	ldr	w28, [x0]
  404d9c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404da0:	ldr	x21, [x0, #560]
  404da4:	tbnz	w19, #31, 404ee8 <ferror@plt+0x3248>
  404da8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404dac:	ldr	w0, [x0, #568]
  404db0:	cmp	w0, w19
  404db4:	b.gt	404e18 <ferror@plt+0x3178>
  404db8:	mov	w0, #0x7fffffff            	// #2147483647
  404dbc:	cmp	w19, w0
  404dc0:	b.eq	404eec <ferror@plt+0x324c>  // b.none
  404dc4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404dc8:	add	x0, x0, #0x230
  404dcc:	add	x0, x0, #0x10
  404dd0:	cmp	x21, x0
  404dd4:	b.eq	404ef0 <ferror@plt+0x3250>  // b.none
  404dd8:	add	w24, w19, #0x1
  404ddc:	sbfiz	x1, x24, #4, #32
  404de0:	mov	x0, x21
  404de4:	bl	406078 <ferror@plt+0x43d8>
  404de8:	mov	x21, x0
  404dec:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404df0:	str	x21, [x0, #560]
  404df4:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404df8:	add	x22, x22, #0x230
  404dfc:	ldr	w0, [x22, #8]
  404e00:	sub	w2, w24, w0
  404e04:	sbfiz	x2, x2, #4, #32
  404e08:	mov	w1, #0x0                   	// #0
  404e0c:	add	x0, x21, w0, sxtw #4
  404e10:	bl	401a30 <memset@plt>
  404e14:	str	w24, [x22, #8]
  404e18:	sbfiz	x19, x19, #4, #32
  404e1c:	add	x27, x21, x19
  404e20:	ldr	x25, [x21, x19]
  404e24:	ldr	x22, [x27, #8]
  404e28:	ldr	w24, [x20, #4]
  404e2c:	orr	w24, w24, #0x1
  404e30:	add	x26, x20, #0x8
  404e34:	ldr	x0, [x20, #48]
  404e38:	str	x0, [sp]
  404e3c:	ldr	x7, [x20, #40]
  404e40:	mov	x6, x26
  404e44:	mov	w5, w24
  404e48:	ldr	w4, [x20]
  404e4c:	ldr	x3, [sp, #120]
  404e50:	ldr	x2, [sp, #112]
  404e54:	mov	x1, x25
  404e58:	mov	x0, x22
  404e5c:	bl	403e0c <ferror@plt+0x216c>
  404e60:	cmp	x25, x0
  404e64:	b.hi	404ec0 <ferror@plt+0x3220>  // b.pmore
  404e68:	add	x25, x0, #0x1
  404e6c:	str	x25, [x21, x19]
  404e70:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404e74:	add	x0, x0, #0x338
  404e78:	cmp	x22, x0
  404e7c:	b.eq	404e88 <ferror@plt+0x31e8>  // b.none
  404e80:	mov	x0, x22
  404e84:	bl	401b70 <free@plt>
  404e88:	mov	x0, x25
  404e8c:	bl	405ffc <ferror@plt+0x435c>
  404e90:	mov	x22, x0
  404e94:	str	x0, [x27, #8]
  404e98:	ldr	x1, [x20, #48]
  404e9c:	str	x1, [sp]
  404ea0:	ldr	x7, [x20, #40]
  404ea4:	mov	x6, x26
  404ea8:	mov	w5, w24
  404eac:	ldr	w4, [x20]
  404eb0:	ldr	x3, [sp, #120]
  404eb4:	ldr	x2, [sp, #112]
  404eb8:	mov	x1, x25
  404ebc:	bl	403e0c <ferror@plt+0x216c>
  404ec0:	str	w28, [x23]
  404ec4:	mov	x0, x22
  404ec8:	ldp	x19, x20, [sp, #32]
  404ecc:	ldp	x21, x22, [sp, #48]
  404ed0:	ldp	x23, x24, [sp, #64]
  404ed4:	ldp	x25, x26, [sp, #80]
  404ed8:	ldp	x27, x28, [sp, #96]
  404edc:	ldp	x29, x30, [sp, #16]
  404ee0:	add	sp, sp, #0x80
  404ee4:	ret
  404ee8:	bl	401ab0 <abort@plt>
  404eec:	bl	406288 <ferror@plt+0x45e8>
  404ef0:	add	w24, w19, #0x1
  404ef4:	sbfiz	x1, x24, #4, #32
  404ef8:	mov	x0, #0x0                   	// #0
  404efc:	bl	406078 <ferror@plt+0x43d8>
  404f00:	mov	x21, x0
  404f04:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404f08:	add	x1, x0, #0x230
  404f0c:	str	x21, [x0, #560]
  404f10:	ldp	x0, x1, [x1, #16]
  404f14:	stp	x0, x1, [x21]
  404f18:	b	404df4 <ferror@plt+0x3154>
  404f1c:	stp	x29, x30, [sp, #-48]!
  404f20:	mov	x29, sp
  404f24:	stp	x19, x20, [sp, #16]
  404f28:	str	x21, [sp, #32]
  404f2c:	mov	x20, x0
  404f30:	bl	401c50 <__errno_location@plt>
  404f34:	mov	x19, x0
  404f38:	ldr	w21, [x0]
  404f3c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404f40:	add	x2, x2, #0x338
  404f44:	add	x2, x2, #0x100
  404f48:	cmp	x20, #0x0
  404f4c:	mov	x1, #0x38                  	// #56
  404f50:	csel	x0, x2, x20, eq  // eq = none
  404f54:	bl	406228 <ferror@plt+0x4588>
  404f58:	str	w21, [x19]
  404f5c:	ldp	x19, x20, [sp, #16]
  404f60:	ldr	x21, [sp, #32]
  404f64:	ldp	x29, x30, [sp], #48
  404f68:	ret
  404f6c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404f70:	add	x1, x1, #0x338
  404f74:	add	x1, x1, #0x100
  404f78:	cmp	x0, #0x0
  404f7c:	csel	x0, x1, x0, eq  // eq = none
  404f80:	ldr	w0, [x0]
  404f84:	ret
  404f88:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404f8c:	add	x2, x2, #0x338
  404f90:	add	x2, x2, #0x100
  404f94:	cmp	x0, #0x0
  404f98:	csel	x0, x2, x0, eq  // eq = none
  404f9c:	str	w1, [x0]
  404fa0:	ret
  404fa4:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404fa8:	add	x3, x3, #0x338
  404fac:	add	x3, x3, #0x100
  404fb0:	cmp	x0, #0x0
  404fb4:	csel	x0, x3, x0, eq  // eq = none
  404fb8:	add	x0, x0, #0x8
  404fbc:	ubfx	x4, x1, #5, #3
  404fc0:	and	w1, w1, #0x1f
  404fc4:	ldr	w5, [x0, x4, lsl #2]
  404fc8:	lsr	w3, w5, w1
  404fcc:	eor	w2, w3, w2
  404fd0:	and	w2, w2, #0x1
  404fd4:	lsl	w2, w2, w1
  404fd8:	eor	w2, w2, w5
  404fdc:	str	w2, [x0, x4, lsl #2]
  404fe0:	and	w0, w3, #0x1
  404fe4:	ret
  404fe8:	mov	x2, x0
  404fec:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  404ff0:	add	x0, x0, #0x338
  404ff4:	add	x0, x0, #0x100
  404ff8:	cmp	x2, #0x0
  404ffc:	csel	x2, x0, x2, eq  // eq = none
  405000:	ldr	w0, [x2, #4]
  405004:	str	w1, [x2, #4]
  405008:	ret
  40500c:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405010:	add	x3, x3, #0x338
  405014:	add	x3, x3, #0x100
  405018:	cmp	x0, #0x0
  40501c:	csel	x0, x3, x0, eq  // eq = none
  405020:	mov	w3, #0xa                   	// #10
  405024:	str	w3, [x0]
  405028:	cmp	x1, #0x0
  40502c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  405030:	b.eq	405040 <ferror@plt+0x33a0>  // b.none
  405034:	str	x1, [x0, #40]
  405038:	str	x2, [x0, #48]
  40503c:	ret
  405040:	stp	x29, x30, [sp, #-16]!
  405044:	mov	x29, sp
  405048:	bl	401ab0 <abort@plt>
  40504c:	sub	sp, sp, #0x60
  405050:	stp	x29, x30, [sp, #16]
  405054:	add	x29, sp, #0x10
  405058:	stp	x19, x20, [sp, #32]
  40505c:	stp	x21, x22, [sp, #48]
  405060:	stp	x23, x24, [sp, #64]
  405064:	str	x25, [sp, #80]
  405068:	mov	x21, x0
  40506c:	mov	x22, x1
  405070:	mov	x23, x2
  405074:	mov	x24, x3
  405078:	mov	x19, x4
  40507c:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405080:	add	x4, x4, #0x338
  405084:	add	x4, x4, #0x100
  405088:	cmp	x19, #0x0
  40508c:	csel	x19, x4, x19, eq  // eq = none
  405090:	bl	401c50 <__errno_location@plt>
  405094:	mov	x20, x0
  405098:	ldr	w25, [x0]
  40509c:	ldr	x7, [x19, #40]
  4050a0:	ldr	w5, [x19, #4]
  4050a4:	ldr	w4, [x19]
  4050a8:	ldr	x0, [x19, #48]
  4050ac:	str	x0, [sp]
  4050b0:	add	x6, x19, #0x8
  4050b4:	mov	x3, x24
  4050b8:	mov	x2, x23
  4050bc:	mov	x1, x22
  4050c0:	mov	x0, x21
  4050c4:	bl	403e0c <ferror@plt+0x216c>
  4050c8:	str	w25, [x20]
  4050cc:	ldp	x19, x20, [sp, #32]
  4050d0:	ldp	x21, x22, [sp, #48]
  4050d4:	ldp	x23, x24, [sp, #64]
  4050d8:	ldr	x25, [sp, #80]
  4050dc:	ldp	x29, x30, [sp, #16]
  4050e0:	add	sp, sp, #0x60
  4050e4:	ret
  4050e8:	sub	sp, sp, #0x80
  4050ec:	stp	x29, x30, [sp, #16]
  4050f0:	add	x29, sp, #0x10
  4050f4:	stp	x19, x20, [sp, #32]
  4050f8:	stp	x21, x22, [sp, #48]
  4050fc:	stp	x23, x24, [sp, #64]
  405100:	stp	x25, x26, [sp, #80]
  405104:	stp	x27, x28, [sp, #96]
  405108:	mov	x22, x0
  40510c:	mov	x23, x1
  405110:	mov	x20, x2
  405114:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405118:	add	x0, x0, #0x338
  40511c:	add	x0, x0, #0x100
  405120:	cmp	x3, #0x0
  405124:	csel	x19, x0, x3, eq  // eq = none
  405128:	bl	401c50 <__errno_location@plt>
  40512c:	mov	x21, x0
  405130:	ldr	w28, [x0]
  405134:	cmp	x20, #0x0
  405138:	cset	w24, eq  // eq = none
  40513c:	ldr	w0, [x19, #4]
  405140:	orr	w24, w24, w0
  405144:	add	x27, x19, #0x8
  405148:	ldr	x7, [x19, #40]
  40514c:	ldr	w4, [x19]
  405150:	ldr	x0, [x19, #48]
  405154:	str	x0, [sp]
  405158:	mov	x6, x27
  40515c:	mov	w5, w24
  405160:	mov	x3, x23
  405164:	mov	x2, x22
  405168:	mov	x1, #0x0                   	// #0
  40516c:	mov	x0, #0x0                   	// #0
  405170:	bl	403e0c <ferror@plt+0x216c>
  405174:	mov	x25, x0
  405178:	add	x26, x0, #0x1
  40517c:	mov	x0, x26
  405180:	bl	405ffc <ferror@plt+0x435c>
  405184:	str	x0, [sp, #120]
  405188:	ldr	x7, [x19, #40]
  40518c:	ldr	w4, [x19]
  405190:	ldr	x1, [x19, #48]
  405194:	str	x1, [sp]
  405198:	mov	x6, x27
  40519c:	mov	w5, w24
  4051a0:	mov	x3, x23
  4051a4:	mov	x2, x22
  4051a8:	mov	x1, x26
  4051ac:	bl	403e0c <ferror@plt+0x216c>
  4051b0:	str	w28, [x21]
  4051b4:	cbz	x20, 4051bc <ferror@plt+0x351c>
  4051b8:	str	x25, [x20]
  4051bc:	ldr	x0, [sp, #120]
  4051c0:	ldp	x19, x20, [sp, #32]
  4051c4:	ldp	x21, x22, [sp, #48]
  4051c8:	ldp	x23, x24, [sp, #64]
  4051cc:	ldp	x25, x26, [sp, #80]
  4051d0:	ldp	x27, x28, [sp, #96]
  4051d4:	ldp	x29, x30, [sp, #16]
  4051d8:	add	sp, sp, #0x80
  4051dc:	ret
  4051e0:	stp	x29, x30, [sp, #-16]!
  4051e4:	mov	x29, sp
  4051e8:	mov	x3, x2
  4051ec:	mov	x2, #0x0                   	// #0
  4051f0:	bl	4050e8 <ferror@plt+0x3448>
  4051f4:	ldp	x29, x30, [sp], #16
  4051f8:	ret
  4051fc:	stp	x29, x30, [sp, #-48]!
  405200:	mov	x29, sp
  405204:	stp	x19, x20, [sp, #16]
  405208:	str	x21, [sp, #32]
  40520c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405210:	add	x1, x0, #0x230
  405214:	ldr	x21, [x0, #560]
  405218:	ldr	w20, [x1, #8]
  40521c:	cmp	w20, #0x1
  405220:	b.le	405244 <ferror@plt+0x35a4>
  405224:	add	x19, x21, #0x18
  405228:	sub	w20, w20, #0x2
  40522c:	add	x0, x21, #0x28
  405230:	add	x20, x0, x20, lsl #4
  405234:	ldr	x0, [x19], #16
  405238:	bl	401b70 <free@plt>
  40523c:	cmp	x19, x20
  405240:	b.ne	405234 <ferror@plt+0x3594>  // b.any
  405244:	ldr	x0, [x21, #8]
  405248:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40524c:	add	x1, x1, #0x338
  405250:	cmp	x0, x1
  405254:	b.eq	405278 <ferror@plt+0x35d8>  // b.none
  405258:	bl	401b70 <free@plt>
  40525c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405260:	add	x0, x0, #0x230
  405264:	mov	x1, #0x100                 	// #256
  405268:	str	x1, [x0, #16]
  40526c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405270:	add	x1, x1, #0x338
  405274:	str	x1, [x0, #24]
  405278:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40527c:	add	x0, x0, #0x230
  405280:	add	x0, x0, #0x10
  405284:	cmp	x21, x0
  405288:	b.eq	4052a4 <ferror@plt+0x3604>  // b.none
  40528c:	mov	x0, x21
  405290:	bl	401b70 <free@plt>
  405294:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405298:	add	x0, x1, #0x230
  40529c:	add	x0, x0, #0x10
  4052a0:	str	x0, [x1, #560]
  4052a4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4052a8:	mov	w1, #0x1                   	// #1
  4052ac:	str	w1, [x0, #568]
  4052b0:	ldp	x19, x20, [sp, #16]
  4052b4:	ldr	x21, [sp, #32]
  4052b8:	ldp	x29, x30, [sp], #48
  4052bc:	ret
  4052c0:	stp	x29, x30, [sp, #-16]!
  4052c4:	mov	x29, sp
  4052c8:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4052cc:	add	x3, x3, #0x338
  4052d0:	add	x3, x3, #0x100
  4052d4:	mov	x2, #0xffffffffffffffff    	// #-1
  4052d8:	bl	404d60 <ferror@plt+0x30c0>
  4052dc:	ldp	x29, x30, [sp], #16
  4052e0:	ret
  4052e4:	stp	x29, x30, [sp, #-16]!
  4052e8:	mov	x29, sp
  4052ec:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4052f0:	add	x3, x3, #0x338
  4052f4:	add	x3, x3, #0x100
  4052f8:	bl	404d60 <ferror@plt+0x30c0>
  4052fc:	ldp	x29, x30, [sp], #16
  405300:	ret
  405304:	stp	x29, x30, [sp, #-16]!
  405308:	mov	x29, sp
  40530c:	mov	x1, x0
  405310:	mov	w0, #0x0                   	// #0
  405314:	bl	4052c0 <ferror@plt+0x3620>
  405318:	ldp	x29, x30, [sp], #16
  40531c:	ret
  405320:	stp	x29, x30, [sp, #-16]!
  405324:	mov	x29, sp
  405328:	mov	x2, x1
  40532c:	mov	x1, x0
  405330:	mov	w0, #0x0                   	// #0
  405334:	bl	4052e4 <ferror@plt+0x3644>
  405338:	ldp	x29, x30, [sp], #16
  40533c:	ret
  405340:	stp	x29, x30, [sp, #-96]!
  405344:	mov	x29, sp
  405348:	stp	x19, x20, [sp, #16]
  40534c:	mov	w19, w0
  405350:	mov	w0, w1
  405354:	mov	x20, x2
  405358:	add	x8, sp, #0x28
  40535c:	bl	403c8c <ferror@plt+0x1fec>
  405360:	add	x3, sp, #0x28
  405364:	mov	x2, #0xffffffffffffffff    	// #-1
  405368:	mov	x1, x20
  40536c:	mov	w0, w19
  405370:	bl	404d60 <ferror@plt+0x30c0>
  405374:	ldp	x19, x20, [sp, #16]
  405378:	ldp	x29, x30, [sp], #96
  40537c:	ret
  405380:	stp	x29, x30, [sp, #-112]!
  405384:	mov	x29, sp
  405388:	stp	x19, x20, [sp, #16]
  40538c:	str	x21, [sp, #32]
  405390:	mov	w19, w0
  405394:	mov	w0, w1
  405398:	mov	x20, x2
  40539c:	mov	x21, x3
  4053a0:	add	x8, sp, #0x38
  4053a4:	bl	403c8c <ferror@plt+0x1fec>
  4053a8:	add	x3, sp, #0x38
  4053ac:	mov	x2, x21
  4053b0:	mov	x1, x20
  4053b4:	mov	w0, w19
  4053b8:	bl	404d60 <ferror@plt+0x30c0>
  4053bc:	ldp	x19, x20, [sp, #16]
  4053c0:	ldr	x21, [sp, #32]
  4053c4:	ldp	x29, x30, [sp], #112
  4053c8:	ret
  4053cc:	stp	x29, x30, [sp, #-16]!
  4053d0:	mov	x29, sp
  4053d4:	mov	x2, x1
  4053d8:	mov	w1, w0
  4053dc:	mov	w0, #0x0                   	// #0
  4053e0:	bl	405340 <ferror@plt+0x36a0>
  4053e4:	ldp	x29, x30, [sp], #16
  4053e8:	ret
  4053ec:	stp	x29, x30, [sp, #-16]!
  4053f0:	mov	x29, sp
  4053f4:	mov	x3, x2
  4053f8:	mov	x2, x1
  4053fc:	mov	w1, w0
  405400:	mov	w0, #0x0                   	// #0
  405404:	bl	405380 <ferror@plt+0x36e0>
  405408:	ldp	x29, x30, [sp], #16
  40540c:	ret
  405410:	stp	x29, x30, [sp, #-96]!
  405414:	mov	x29, sp
  405418:	stp	x19, x20, [sp, #16]
  40541c:	mov	x19, x0
  405420:	mov	x20, x1
  405424:	and	w1, w2, #0xff
  405428:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40542c:	add	x2, x2, #0x338
  405430:	add	x0, x2, #0x100
  405434:	ldp	x2, x3, [x2, #256]
  405438:	stp	x2, x3, [sp, #40]
  40543c:	ldp	x2, x3, [x0, #16]
  405440:	stp	x2, x3, [sp, #56]
  405444:	ldp	x2, x3, [x0, #32]
  405448:	stp	x2, x3, [sp, #72]
  40544c:	ldr	x0, [x0, #48]
  405450:	str	x0, [sp, #88]
  405454:	mov	w2, #0x1                   	// #1
  405458:	add	x0, sp, #0x28
  40545c:	bl	404fa4 <ferror@plt+0x3304>
  405460:	add	x3, sp, #0x28
  405464:	mov	x2, x20
  405468:	mov	x1, x19
  40546c:	mov	w0, #0x0                   	// #0
  405470:	bl	404d60 <ferror@plt+0x30c0>
  405474:	ldp	x19, x20, [sp, #16]
  405478:	ldp	x29, x30, [sp], #96
  40547c:	ret
  405480:	stp	x29, x30, [sp, #-16]!
  405484:	mov	x29, sp
  405488:	mov	w2, w1
  40548c:	mov	x1, #0xffffffffffffffff    	// #-1
  405490:	bl	405410 <ferror@plt+0x3770>
  405494:	ldp	x29, x30, [sp], #16
  405498:	ret
  40549c:	stp	x29, x30, [sp, #-16]!
  4054a0:	mov	x29, sp
  4054a4:	mov	w1, #0x3a                  	// #58
  4054a8:	bl	405480 <ferror@plt+0x37e0>
  4054ac:	ldp	x29, x30, [sp], #16
  4054b0:	ret
  4054b4:	stp	x29, x30, [sp, #-16]!
  4054b8:	mov	x29, sp
  4054bc:	mov	w2, #0x3a                  	// #58
  4054c0:	bl	405410 <ferror@plt+0x3770>
  4054c4:	ldp	x29, x30, [sp], #16
  4054c8:	ret
  4054cc:	stp	x29, x30, [sp, #-160]!
  4054d0:	mov	x29, sp
  4054d4:	stp	x19, x20, [sp, #16]
  4054d8:	mov	w19, w0
  4054dc:	mov	w0, w1
  4054e0:	mov	x20, x2
  4054e4:	add	x8, sp, #0x20
  4054e8:	bl	403c8c <ferror@plt+0x1fec>
  4054ec:	ldp	x0, x1, [sp, #32]
  4054f0:	stp	x0, x1, [sp, #104]
  4054f4:	ldp	x0, x1, [sp, #48]
  4054f8:	stp	x0, x1, [sp, #120]
  4054fc:	ldp	x0, x1, [sp, #64]
  405500:	stp	x0, x1, [sp, #136]
  405504:	ldr	x0, [sp, #80]
  405508:	str	x0, [sp, #152]
  40550c:	mov	w2, #0x1                   	// #1
  405510:	mov	w1, #0x3a                  	// #58
  405514:	add	x0, sp, #0x68
  405518:	bl	404fa4 <ferror@plt+0x3304>
  40551c:	add	x3, sp, #0x68
  405520:	mov	x2, #0xffffffffffffffff    	// #-1
  405524:	mov	x1, x20
  405528:	mov	w0, w19
  40552c:	bl	404d60 <ferror@plt+0x30c0>
  405530:	ldp	x19, x20, [sp, #16]
  405534:	ldp	x29, x30, [sp], #160
  405538:	ret
  40553c:	stp	x29, x30, [sp, #-112]!
  405540:	mov	x29, sp
  405544:	stp	x19, x20, [sp, #16]
  405548:	str	x21, [sp, #32]
  40554c:	mov	w19, w0
  405550:	mov	x20, x3
  405554:	mov	x21, x4
  405558:	adrp	x5, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40555c:	add	x5, x5, #0x338
  405560:	add	x0, x5, #0x100
  405564:	ldp	x4, x5, [x5, #256]
  405568:	stp	x4, x5, [sp, #56]
  40556c:	ldp	x4, x5, [x0, #16]
  405570:	stp	x4, x5, [sp, #72]
  405574:	ldp	x4, x5, [x0, #32]
  405578:	stp	x4, x5, [sp, #88]
  40557c:	ldr	x0, [x0, #48]
  405580:	str	x0, [sp, #104]
  405584:	add	x0, sp, #0x38
  405588:	bl	40500c <ferror@plt+0x336c>
  40558c:	add	x3, sp, #0x38
  405590:	mov	x2, x21
  405594:	mov	x1, x20
  405598:	mov	w0, w19
  40559c:	bl	404d60 <ferror@plt+0x30c0>
  4055a0:	ldp	x19, x20, [sp, #16]
  4055a4:	ldr	x21, [sp, #32]
  4055a8:	ldp	x29, x30, [sp], #112
  4055ac:	ret
  4055b0:	stp	x29, x30, [sp, #-16]!
  4055b4:	mov	x29, sp
  4055b8:	mov	x4, #0xffffffffffffffff    	// #-1
  4055bc:	bl	40553c <ferror@plt+0x389c>
  4055c0:	ldp	x29, x30, [sp], #16
  4055c4:	ret
  4055c8:	stp	x29, x30, [sp, #-16]!
  4055cc:	mov	x29, sp
  4055d0:	mov	x3, x2
  4055d4:	mov	x2, x1
  4055d8:	mov	x1, x0
  4055dc:	mov	w0, #0x0                   	// #0
  4055e0:	bl	4055b0 <ferror@plt+0x3910>
  4055e4:	ldp	x29, x30, [sp], #16
  4055e8:	ret
  4055ec:	stp	x29, x30, [sp, #-16]!
  4055f0:	mov	x29, sp
  4055f4:	mov	x4, x3
  4055f8:	mov	x3, x2
  4055fc:	mov	x2, x1
  405600:	mov	x1, x0
  405604:	mov	w0, #0x0                   	// #0
  405608:	bl	40553c <ferror@plt+0x389c>
  40560c:	ldp	x29, x30, [sp], #16
  405610:	ret
  405614:	stp	x29, x30, [sp, #-16]!
  405618:	mov	x29, sp
  40561c:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405620:	add	x3, x3, #0x230
  405624:	add	x3, x3, #0x20
  405628:	bl	404d60 <ferror@plt+0x30c0>
  40562c:	ldp	x29, x30, [sp], #16
  405630:	ret
  405634:	stp	x29, x30, [sp, #-16]!
  405638:	mov	x29, sp
  40563c:	mov	x2, x1
  405640:	mov	x1, x0
  405644:	mov	w0, #0x0                   	// #0
  405648:	bl	405614 <ferror@plt+0x3974>
  40564c:	ldp	x29, x30, [sp], #16
  405650:	ret
  405654:	stp	x29, x30, [sp, #-16]!
  405658:	mov	x29, sp
  40565c:	mov	x2, #0xffffffffffffffff    	// #-1
  405660:	bl	405614 <ferror@plt+0x3974>
  405664:	ldp	x29, x30, [sp], #16
  405668:	ret
  40566c:	stp	x29, x30, [sp, #-16]!
  405670:	mov	x29, sp
  405674:	mov	x1, x0
  405678:	mov	w0, #0x0                   	// #0
  40567c:	bl	405654 <ferror@plt+0x39b4>
  405680:	ldp	x29, x30, [sp], #16
  405684:	ret
  405688:	stp	x29, x30, [sp, #-48]!
  40568c:	mov	x29, sp
  405690:	stp	x19, x20, [sp, #16]
  405694:	str	x21, [sp, #32]
  405698:	mov	x19, x0
  40569c:	ldr	x1, [x0, #48]
  4056a0:	ldr	x21, [x0, #40]
  4056a4:	sub	x20, x1, x21
  4056a8:	sub	x20, x20, #0x1
  4056ac:	cmp	x1, x21
  4056b0:	b.eq	405754 <ferror@plt+0x3ab4>  // b.none
  4056b4:	ldr	x0, [x19, #72]
  4056b8:	add	x1, x1, x0
  4056bc:	bic	x0, x1, x0
  4056c0:	str	x0, [x19, #48]
  4056c4:	ldr	x1, [x19, #32]
  4056c8:	ldr	x2, [x19, #56]
  4056cc:	sub	x0, x0, x1
  4056d0:	sub	x1, x2, x1
  4056d4:	cmp	x0, x1
  4056d8:	b.ls	4056e0 <ferror@plt+0x3a40>  // b.plast
  4056dc:	str	x2, [x19, #48]
  4056e0:	ldr	x1, [x19, #48]
  4056e4:	str	x1, [x19, #40]
  4056e8:	ldr	x0, [x19, #144]
  4056ec:	ldr	x1, [x19, #136]
  4056f0:	sub	x0, x0, x1
  4056f4:	cmp	x0, #0x7
  4056f8:	b.ls	40576c <ferror@plt+0x3acc>  // b.plast
  4056fc:	ldr	x1, [x19, #136]
  405700:	str	x21, [x1]
  405704:	ldr	x1, [x19, #136]
  405708:	add	x1, x1, #0x8
  40570c:	str	x1, [x19, #136]
  405710:	ldr	x0, [x19, #232]
  405714:	ldr	x1, [x19, #224]
  405718:	sub	x0, x0, x1
  40571c:	cmp	x0, #0x7
  405720:	b.ls	40577c <ferror@plt+0x3adc>  // b.plast
  405724:	ldr	x1, [x19, #224]
  405728:	str	x20, [x1]
  40572c:	ldr	x1, [x19, #224]
  405730:	add	x1, x1, #0x8
  405734:	str	x1, [x19, #224]
  405738:	ldr	x0, [x19]
  40573c:	add	x0, x0, #0x1
  405740:	str	x0, [x19]
  405744:	ldp	x19, x20, [sp, #16]
  405748:	ldr	x21, [sp, #32]
  40574c:	ldp	x29, x30, [sp], #48
  405750:	ret
  405754:	add	x0, x0, #0x18
  405758:	mov	x2, x0
  40575c:	ldrb	w0, [x0, #80]
  405760:	orr	w0, w0, #0x2
  405764:	strb	w0, [x2, #80]
  405768:	b	4056b4 <ferror@plt+0x3a14>
  40576c:	mov	x1, #0x8                   	// #8
  405770:	add	x0, x19, #0x70
  405774:	bl	406688 <_obstack_newchunk@@Base>
  405778:	b	4056fc <ferror@plt+0x3a5c>
  40577c:	mov	x1, #0x8                   	// #8
  405780:	add	x0, x19, #0xc8
  405784:	bl	406688 <_obstack_newchunk@@Base>
  405788:	b	405724 <ferror@plt+0x3a84>
  40578c:	stp	x29, x30, [sp, #-48]!
  405790:	mov	x29, sp
  405794:	stp	x19, x20, [sp, #16]
  405798:	str	x21, [sp, #32]
  40579c:	mov	x19, x0
  4057a0:	str	xzr, [x0]
  4057a4:	str	xzr, [x0, #8]
  4057a8:	str	xzr, [x0, #16]
  4057ac:	adrp	x21, 401000 <mbrtowc@plt-0x890>
  4057b0:	add	x21, x21, #0xb70
  4057b4:	adrp	x20, 401000 <mbrtowc@plt-0x890>
  4057b8:	add	x20, x20, #0x9a0
  4057bc:	mov	x4, x21
  4057c0:	mov	x3, x20
  4057c4:	mov	x2, #0x0                   	// #0
  4057c8:	mov	x1, #0x0                   	// #0
  4057cc:	add	x0, x0, #0x18
  4057d0:	bl	406634 <_obstack_begin@@Base>
  4057d4:	mov	x4, x21
  4057d8:	mov	x3, x20
  4057dc:	mov	x2, #0x0                   	// #0
  4057e0:	mov	x1, #0x0                   	// #0
  4057e4:	add	x0, x19, #0x70
  4057e8:	bl	406634 <_obstack_begin@@Base>
  4057ec:	mov	x4, x21
  4057f0:	mov	x3, x20
  4057f4:	mov	x2, #0x0                   	// #0
  4057f8:	mov	x1, #0x0                   	// #0
  4057fc:	add	x0, x19, #0xc8
  405800:	bl	406634 <_obstack_begin@@Base>
  405804:	ldp	x19, x20, [sp, #16]
  405808:	ldr	x21, [sp, #32]
  40580c:	ldp	x29, x30, [sp], #48
  405810:	ret
  405814:	stp	x29, x30, [sp, #-32]!
  405818:	mov	x29, sp
  40581c:	str	x19, [sp, #16]
  405820:	mov	x19, x0
  405824:	mov	x1, #0x0                   	// #0
  405828:	add	x0, x0, #0x18
  40582c:	bl	4067d8 <_obstack_free@@Base>
  405830:	mov	x1, #0x0                   	// #0
  405834:	add	x0, x19, #0x70
  405838:	bl	4067d8 <_obstack_free@@Base>
  40583c:	mov	x1, #0x0                   	// #0
  405840:	add	x0, x19, #0xc8
  405844:	bl	4067d8 <_obstack_free@@Base>
  405848:	ldr	x19, [sp, #16]
  40584c:	ldp	x29, x30, [sp], #32
  405850:	ret
  405854:	stp	x29, x30, [sp, #-48]!
  405858:	mov	x29, sp
  40585c:	stp	x19, x20, [sp, #16]
  405860:	stp	x21, x22, [sp, #32]
  405864:	mov	x21, x0
  405868:	mov	x20, x1
  40586c:	mov	x22, #0x1                   	// #1
  405870:	b	4059a4 <ferror@plt+0x3d04>
  405874:	ldr	x1, [x20, #48]
  405878:	ldr	x0, [x20, #40]
  40587c:	cmp	x1, x0
  405880:	b.eq	4058a8 <ferror@plt+0x3c08>  // b.none
  405884:	ldr	x0, [x20, #56]
  405888:	cmp	x1, x0
  40588c:	b.eq	405980 <ferror@plt+0x3ce0>  // b.none
  405890:	ldr	x0, [x20, #48]
  405894:	add	x2, x0, #0x1
  405898:	str	x2, [x20, #48]
  40589c:	strb	wzr, [x0]
  4058a0:	mov	x0, x20
  4058a4:	bl	405688 <ferror@plt+0x39e8>
  4058a8:	ldr	x0, [x20, #144]
  4058ac:	ldr	x1, [x20, #136]
  4058b0:	sub	x0, x0, x1
  4058b4:	cmp	x0, #0x7
  4058b8:	b.ls	4059e4 <ferror@plt+0x3d44>  // b.plast
  4058bc:	add	x0, x20, #0x70
  4058c0:	ldr	x1, [x20, #136]
  4058c4:	str	xzr, [x1]
  4058c8:	ldr	x1, [x20, #136]
  4058cc:	add	x1, x1, #0x8
  4058d0:	ldr	x3, [x20, #128]
  4058d4:	cmp	x1, x3
  4058d8:	b.eq	4059f4 <ferror@plt+0x3d54>  // b.none
  4058dc:	ldr	x0, [x20, #160]
  4058e0:	add	x1, x1, x0
  4058e4:	bic	x0, x1, x0
  4058e8:	str	x0, [x20, #136]
  4058ec:	ldr	x1, [x20, #120]
  4058f0:	ldr	x2, [x20, #144]
  4058f4:	sub	x0, x0, x1
  4058f8:	sub	x1, x2, x1
  4058fc:	cmp	x0, x1
  405900:	b.ls	405908 <ferror@plt+0x3c68>  // b.plast
  405904:	str	x2, [x20, #136]
  405908:	ldr	x1, [x20, #136]
  40590c:	str	x1, [x20, #128]
  405910:	str	x3, [x20, #8]
  405914:	add	x0, x20, #0xc8
  405918:	ldr	x3, [x20, #216]
  40591c:	ldr	x1, [x20, #224]
  405920:	cmp	x1, x3
  405924:	b.eq	405a08 <ferror@plt+0x3d68>  // b.none
  405928:	ldr	x0, [x20, #248]
  40592c:	add	x1, x1, x0
  405930:	bic	x0, x1, x0
  405934:	str	x0, [x20, #224]
  405938:	ldr	x1, [x20, #208]
  40593c:	ldr	x2, [x20, #232]
  405940:	sub	x0, x0, x1
  405944:	sub	x1, x2, x1
  405948:	cmp	x0, x1
  40594c:	b.ls	405954 <ferror@plt+0x3cb4>  // b.plast
  405950:	str	x2, [x20, #224]
  405954:	ldr	x1, [x20, #224]
  405958:	str	x1, [x20, #216]
  40595c:	str	x3, [x20, #16]
  405960:	mov	x0, x21
  405964:	bl	401ca0 <ferror@plt>
  405968:	cmp	w0, #0x0
  40596c:	cset	w0, eq  // eq = none
  405970:	ldp	x19, x20, [sp, #16]
  405974:	ldp	x21, x22, [sp, #32]
  405978:	ldp	x29, x30, [sp], #48
  40597c:	ret
  405980:	mov	x1, #0x1                   	// #1
  405984:	add	x0, x20, #0x18
  405988:	bl	406688 <_obstack_newchunk@@Base>
  40598c:	b	405890 <ferror@plt+0x3bf0>
  405990:	ldr	x1, [x20, #48]
  405994:	add	x3, x1, #0x1
  405998:	str	x3, [x20, #48]
  40599c:	strb	w19, [x1]
  4059a0:	cbz	w19, 4059d8 <ferror@plt+0x3d38>
  4059a4:	mov	x0, x21
  4059a8:	bl	401a10 <fgetc@plt>
  4059ac:	mov	w19, w0
  4059b0:	cmn	w0, #0x1
  4059b4:	b.eq	405874 <ferror@plt+0x3bd4>  // b.none
  4059b8:	ldr	x0, [x20, #56]
  4059bc:	ldr	x1, [x20, #48]
  4059c0:	cmp	x0, x1
  4059c4:	b.ne	405990 <ferror@plt+0x3cf0>  // b.any
  4059c8:	mov	x1, x22
  4059cc:	add	x0, x20, #0x18
  4059d0:	bl	406688 <_obstack_newchunk@@Base>
  4059d4:	b	405990 <ferror@plt+0x3cf0>
  4059d8:	mov	x0, x20
  4059dc:	bl	405688 <ferror@plt+0x39e8>
  4059e0:	b	4059a4 <ferror@plt+0x3d04>
  4059e4:	mov	x1, #0x8                   	// #8
  4059e8:	add	x0, x20, #0x70
  4059ec:	bl	406688 <_obstack_newchunk@@Base>
  4059f0:	b	4058bc <ferror@plt+0x3c1c>
  4059f4:	mov	x2, x0
  4059f8:	ldrb	w0, [x0, #80]
  4059fc:	orr	w0, w0, #0x2
  405a00:	strb	w0, [x2, #80]
  405a04:	b	4058dc <ferror@plt+0x3c3c>
  405a08:	mov	x2, x0
  405a0c:	ldrb	w0, [x0, #80]
  405a10:	orr	w0, w0, #0x2
  405a14:	strb	w0, [x2, #80]
  405a18:	b	405928 <ferror@plt+0x3c88>
  405a1c:	stp	x29, x30, [sp, #-64]!
  405a20:	mov	x29, sp
  405a24:	stp	x19, x20, [sp, #16]
  405a28:	stp	x21, x22, [sp, #32]
  405a2c:	str	x23, [sp, #48]
  405a30:	mov	w23, w0
  405a34:	mov	x22, x1
  405a38:	mov	x20, x2
  405a3c:	mov	x21, #0x7ff00000            	// #2146435072
  405a40:	b	405a48 <ferror@plt+0x3da8>
  405a44:	mov	x20, x21
  405a48:	mov	x2, x20
  405a4c:	mov	x1, x22
  405a50:	mov	w0, w23
  405a54:	bl	401bc0 <read@plt>
  405a58:	mov	x19, x0
  405a5c:	tbz	x0, #63, 405a80 <ferror@plt+0x3de0>
  405a60:	bl	401c50 <__errno_location@plt>
  405a64:	ldr	w2, [x0]
  405a68:	cmp	w2, #0x4
  405a6c:	b.eq	405a48 <ferror@plt+0x3da8>  // b.none
  405a70:	cmp	x20, x21
  405a74:	ccmp	w2, #0x16, #0x0, hi  // hi = pmore
  405a78:	b.eq	405a44 <ferror@plt+0x3da4>  // b.none
  405a7c:	mov	x0, x19
  405a80:	ldp	x19, x20, [sp, #16]
  405a84:	ldp	x21, x22, [sp, #32]
  405a88:	ldr	x23, [sp, #48]
  405a8c:	ldp	x29, x30, [sp], #64
  405a90:	ret
  405a94:	sub	sp, sp, #0x50
  405a98:	stp	x29, x30, [sp, #32]
  405a9c:	add	x29, sp, #0x20
  405aa0:	stp	x19, x20, [sp, #48]
  405aa4:	str	x21, [sp, #64]
  405aa8:	mov	x21, x0
  405aac:	mov	x20, x4
  405ab0:	mov	x19, x5
  405ab4:	cbz	x1, 405b78 <ferror@plt+0x3ed8>
  405ab8:	mov	x5, x3
  405abc:	mov	x4, x2
  405ac0:	mov	x3, x1
  405ac4:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  405ac8:	add	x2, x2, #0x890
  405acc:	mov	w1, #0x1                   	// #1
  405ad0:	bl	401b30 <__fprintf_chk@plt>
  405ad4:	mov	w2, #0x5                   	// #5
  405ad8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405adc:	add	x1, x1, #0x8a8
  405ae0:	mov	x0, #0x0                   	// #0
  405ae4:	bl	401c00 <dcgettext@plt>
  405ae8:	mov	w4, #0x7e3                 	// #2019
  405aec:	mov	x3, x0
  405af0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  405af4:	add	x2, x2, #0xba0
  405af8:	mov	w1, #0x1                   	// #1
  405afc:	mov	x0, x21
  405b00:	bl	401b30 <__fprintf_chk@plt>
  405b04:	mov	w2, #0x5                   	// #5
  405b08:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405b0c:	add	x1, x1, #0x8b0
  405b10:	mov	x0, #0x0                   	// #0
  405b14:	bl	401c00 <dcgettext@plt>
  405b18:	mov	x1, x21
  405b1c:	bl	401c10 <fputs_unlocked@plt>
  405b20:	cmp	x19, #0x5
  405b24:	b.eq	405d0c <ferror@plt+0x406c>  // b.none
  405b28:	b.hi	405bdc <ferror@plt+0x3f3c>  // b.pmore
  405b2c:	cmp	x19, #0x2
  405b30:	b.eq	405ca8 <ferror@plt+0x4008>  // b.none
  405b34:	b.ls	405b94 <ferror@plt+0x3ef4>  // b.plast
  405b38:	cmp	x19, #0x3
  405b3c:	b.eq	405cd8 <ferror@plt+0x4038>  // b.none
  405b40:	mov	w2, #0x5                   	// #5
  405b44:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405b48:	add	x1, x1, #0x9c8
  405b4c:	mov	x0, #0x0                   	// #0
  405b50:	bl	401c00 <dcgettext@plt>
  405b54:	ldr	x6, [x20, #24]
  405b58:	ldr	x5, [x20, #16]
  405b5c:	ldr	x4, [x20, #8]
  405b60:	ldr	x3, [x20]
  405b64:	mov	x2, x0
  405b68:	mov	w1, #0x1                   	// #1
  405b6c:	mov	x0, x21
  405b70:	bl	401b30 <__fprintf_chk@plt>
  405b74:	b	405bc8 <ferror@plt+0x3f28>
  405b78:	mov	x4, x3
  405b7c:	mov	x3, x2
  405b80:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  405b84:	add	x2, x2, #0x8a0
  405b88:	mov	w1, #0x1                   	// #1
  405b8c:	bl	401b30 <__fprintf_chk@plt>
  405b90:	b	405ad4 <ferror@plt+0x3e34>
  405b94:	cbz	x19, 405bc8 <ferror@plt+0x3f28>
  405b98:	cmp	x19, #0x1
  405b9c:	b.ne	405de0 <ferror@plt+0x4140>  // b.any
  405ba0:	mov	w2, #0x5                   	// #5
  405ba4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405ba8:	add	x1, x1, #0x980
  405bac:	mov	x0, #0x0                   	// #0
  405bb0:	bl	401c00 <dcgettext@plt>
  405bb4:	ldr	x3, [x20]
  405bb8:	mov	x2, x0
  405bbc:	mov	w1, #0x1                   	// #1
  405bc0:	mov	x0, x21
  405bc4:	bl	401b30 <__fprintf_chk@plt>
  405bc8:	ldp	x19, x20, [sp, #48]
  405bcc:	ldr	x21, [sp, #64]
  405bd0:	ldp	x29, x30, [sp, #32]
  405bd4:	add	sp, sp, #0x50
  405bd8:	ret
  405bdc:	cmp	x19, #0x8
  405be0:	b.eq	405d8c <ferror@plt+0x40ec>  // b.none
  405be4:	b.ls	405c4c <ferror@plt+0x3fac>  // b.plast
  405be8:	cmp	x19, #0x9
  405bec:	b.ne	405de0 <ferror@plt+0x4140>  // b.any
  405bf0:	mov	w2, #0x5                   	// #5
  405bf4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405bf8:	add	x1, x1, #0xa98
  405bfc:	mov	x0, #0x0                   	// #0
  405c00:	bl	401c00 <dcgettext@plt>
  405c04:	ldr	x1, [x20, #64]
  405c08:	str	x1, [sp, #24]
  405c0c:	ldr	x1, [x20, #56]
  405c10:	str	x1, [sp, #16]
  405c14:	ldr	x1, [x20, #48]
  405c18:	str	x1, [sp, #8]
  405c1c:	ldr	x1, [x20, #40]
  405c20:	str	x1, [sp]
  405c24:	ldr	x7, [x20, #32]
  405c28:	ldr	x6, [x20, #24]
  405c2c:	ldr	x5, [x20, #16]
  405c30:	ldr	x4, [x20, #8]
  405c34:	ldr	x3, [x20]
  405c38:	mov	x2, x0
  405c3c:	mov	w1, #0x1                   	// #1
  405c40:	mov	x0, x21
  405c44:	bl	401b30 <__fprintf_chk@plt>
  405c48:	b	405bc8 <ferror@plt+0x3f28>
  405c4c:	cmp	x19, #0x6
  405c50:	b.eq	405d48 <ferror@plt+0x40a8>  // b.none
  405c54:	cmp	x19, #0x7
  405c58:	b.ne	405de0 <ferror@plt+0x4140>  // b.any
  405c5c:	mov	w2, #0x5                   	// #5
  405c60:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405c64:	add	x1, x1, #0xa38
  405c68:	mov	x0, #0x0                   	// #0
  405c6c:	bl	401c00 <dcgettext@plt>
  405c70:	ldr	x1, [x20, #48]
  405c74:	str	x1, [sp, #8]
  405c78:	ldr	x1, [x20, #40]
  405c7c:	str	x1, [sp]
  405c80:	ldr	x7, [x20, #32]
  405c84:	ldr	x6, [x20, #24]
  405c88:	ldr	x5, [x20, #16]
  405c8c:	ldr	x4, [x20, #8]
  405c90:	ldr	x3, [x20]
  405c94:	mov	x2, x0
  405c98:	mov	w1, #0x1                   	// #1
  405c9c:	mov	x0, x21
  405ca0:	bl	401b30 <__fprintf_chk@plt>
  405ca4:	b	405bc8 <ferror@plt+0x3f28>
  405ca8:	mov	w2, #0x5                   	// #5
  405cac:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405cb0:	add	x1, x1, #0x990
  405cb4:	mov	x0, #0x0                   	// #0
  405cb8:	bl	401c00 <dcgettext@plt>
  405cbc:	ldr	x4, [x20, #8]
  405cc0:	ldr	x3, [x20]
  405cc4:	mov	x2, x0
  405cc8:	mov	w1, #0x1                   	// #1
  405ccc:	mov	x0, x21
  405cd0:	bl	401b30 <__fprintf_chk@plt>
  405cd4:	b	405bc8 <ferror@plt+0x3f28>
  405cd8:	mov	w2, #0x5                   	// #5
  405cdc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405ce0:	add	x1, x1, #0x9a8
  405ce4:	mov	x0, #0x0                   	// #0
  405ce8:	bl	401c00 <dcgettext@plt>
  405cec:	ldr	x5, [x20, #16]
  405cf0:	ldr	x4, [x20, #8]
  405cf4:	ldr	x3, [x20]
  405cf8:	mov	x2, x0
  405cfc:	mov	w1, #0x1                   	// #1
  405d00:	mov	x0, x21
  405d04:	bl	401b30 <__fprintf_chk@plt>
  405d08:	b	405bc8 <ferror@plt+0x3f28>
  405d0c:	mov	w2, #0x5                   	// #5
  405d10:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405d14:	add	x1, x1, #0x9e8
  405d18:	mov	x0, #0x0                   	// #0
  405d1c:	bl	401c00 <dcgettext@plt>
  405d20:	ldr	x7, [x20, #32]
  405d24:	ldr	x6, [x20, #24]
  405d28:	ldr	x5, [x20, #16]
  405d2c:	ldr	x4, [x20, #8]
  405d30:	ldr	x3, [x20]
  405d34:	mov	x2, x0
  405d38:	mov	w1, #0x1                   	// #1
  405d3c:	mov	x0, x21
  405d40:	bl	401b30 <__fprintf_chk@plt>
  405d44:	b	405bc8 <ferror@plt+0x3f28>
  405d48:	mov	w2, #0x5                   	// #5
  405d4c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405d50:	add	x1, x1, #0xa10
  405d54:	mov	x0, #0x0                   	// #0
  405d58:	bl	401c00 <dcgettext@plt>
  405d5c:	ldr	x1, [x20, #40]
  405d60:	str	x1, [sp]
  405d64:	ldr	x7, [x20, #32]
  405d68:	ldr	x6, [x20, #24]
  405d6c:	ldr	x5, [x20, #16]
  405d70:	ldr	x4, [x20, #8]
  405d74:	ldr	x3, [x20]
  405d78:	mov	x2, x0
  405d7c:	mov	w1, #0x1                   	// #1
  405d80:	mov	x0, x21
  405d84:	bl	401b30 <__fprintf_chk@plt>
  405d88:	b	405bc8 <ferror@plt+0x3f28>
  405d8c:	mov	w2, #0x5                   	// #5
  405d90:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405d94:	add	x1, x1, #0xa68
  405d98:	mov	x0, #0x0                   	// #0
  405d9c:	bl	401c00 <dcgettext@plt>
  405da0:	ldr	x1, [x20, #56]
  405da4:	str	x1, [sp, #16]
  405da8:	ldr	x1, [x20, #48]
  405dac:	str	x1, [sp, #8]
  405db0:	ldr	x1, [x20, #40]
  405db4:	str	x1, [sp]
  405db8:	ldr	x7, [x20, #32]
  405dbc:	ldr	x6, [x20, #24]
  405dc0:	ldr	x5, [x20, #16]
  405dc4:	ldr	x4, [x20, #8]
  405dc8:	ldr	x3, [x20]
  405dcc:	mov	x2, x0
  405dd0:	mov	w1, #0x1                   	// #1
  405dd4:	mov	x0, x21
  405dd8:	bl	401b30 <__fprintf_chk@plt>
  405ddc:	b	405bc8 <ferror@plt+0x3f28>
  405de0:	mov	w2, #0x5                   	// #5
  405de4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405de8:	add	x1, x1, #0xad0
  405dec:	mov	x0, #0x0                   	// #0
  405df0:	bl	401c00 <dcgettext@plt>
  405df4:	ldr	x1, [x20, #64]
  405df8:	str	x1, [sp, #24]
  405dfc:	ldr	x1, [x20, #56]
  405e00:	str	x1, [sp, #16]
  405e04:	ldr	x1, [x20, #48]
  405e08:	str	x1, [sp, #8]
  405e0c:	ldr	x1, [x20, #40]
  405e10:	str	x1, [sp]
  405e14:	ldr	x7, [x20, #32]
  405e18:	ldr	x6, [x20, #24]
  405e1c:	ldr	x5, [x20, #16]
  405e20:	ldr	x4, [x20, #8]
  405e24:	ldr	x3, [x20]
  405e28:	mov	x2, x0
  405e2c:	mov	w1, #0x1                   	// #1
  405e30:	mov	x0, x21
  405e34:	bl	401b30 <__fprintf_chk@plt>
  405e38:	b	405bc8 <ferror@plt+0x3f28>
  405e3c:	stp	x29, x30, [sp, #-16]!
  405e40:	mov	x29, sp
  405e44:	ldr	x5, [x4]
  405e48:	cbz	x5, 405e68 <ferror@plt+0x41c8>
  405e4c:	mov	x5, #0x0                   	// #0
  405e50:	add	x5, x5, #0x1
  405e54:	ldr	x6, [x4, x5, lsl #3]
  405e58:	cbnz	x6, 405e50 <ferror@plt+0x41b0>
  405e5c:	bl	405a94 <ferror@plt+0x3df4>
  405e60:	ldp	x29, x30, [sp], #16
  405e64:	ret
  405e68:	mov	x5, #0x0                   	// #0
  405e6c:	b	405e5c <ferror@plt+0x41bc>
  405e70:	stp	x29, x30, [sp, #-96]!
  405e74:	mov	x29, sp
  405e78:	ldr	x7, [x4]
  405e7c:	ldr	w8, [x4, #24]
  405e80:	ldr	x11, [x4, #8]
  405e84:	add	x4, sp, #0x10
  405e88:	mov	x5, #0x0                   	// #0
  405e8c:	b	405ec8 <ferror@plt+0x4228>
  405e90:	add	w9, w8, #0x8
  405e94:	cmp	w9, #0x0
  405e98:	b.le	405edc <ferror@plt+0x423c>
  405e9c:	add	x10, x7, #0xf
  405ea0:	mov	w8, w9
  405ea4:	mov	x6, x7
  405ea8:	and	x7, x10, #0xfffffffffffffff8
  405eac:	ldr	x6, [x6]
  405eb0:	str	x6, [x4]
  405eb4:	cbz	x6, 405ee8 <ferror@plt+0x4248>
  405eb8:	add	x5, x5, #0x1
  405ebc:	add	x4, x4, #0x8
  405ec0:	cmp	x5, #0xa
  405ec4:	b.eq	405ee8 <ferror@plt+0x4248>  // b.none
  405ec8:	tbnz	w8, #31, 405e90 <ferror@plt+0x41f0>
  405ecc:	add	x9, x7, #0xf
  405ed0:	mov	x6, x7
  405ed4:	and	x7, x9, #0xfffffffffffffff8
  405ed8:	b	405eac <ferror@plt+0x420c>
  405edc:	add	x6, x11, w8, sxtw
  405ee0:	mov	w8, w9
  405ee4:	b	405eac <ferror@plt+0x420c>
  405ee8:	add	x4, sp, #0x10
  405eec:	bl	405a94 <ferror@plt+0x3df4>
  405ef0:	ldp	x29, x30, [sp], #96
  405ef4:	ret
  405ef8:	stp	x29, x30, [sp, #-240]!
  405efc:	mov	x29, sp
  405f00:	str	x4, [sp, #208]
  405f04:	str	x5, [sp, #216]
  405f08:	str	x6, [sp, #224]
  405f0c:	str	x7, [sp, #232]
  405f10:	str	q0, [sp, #80]
  405f14:	str	q1, [sp, #96]
  405f18:	str	q2, [sp, #112]
  405f1c:	str	q3, [sp, #128]
  405f20:	str	q4, [sp, #144]
  405f24:	str	q5, [sp, #160]
  405f28:	str	q6, [sp, #176]
  405f2c:	str	q7, [sp, #192]
  405f30:	add	x4, sp, #0xf0
  405f34:	str	x4, [sp, #48]
  405f38:	str	x4, [sp, #56]
  405f3c:	add	x4, sp, #0xd0
  405f40:	str	x4, [sp, #64]
  405f44:	mov	w4, #0xffffffe0            	// #-32
  405f48:	str	w4, [sp, #72]
  405f4c:	mov	w4, #0xffffff80            	// #-128
  405f50:	str	w4, [sp, #76]
  405f54:	ldp	x4, x5, [sp, #48]
  405f58:	stp	x4, x5, [sp, #16]
  405f5c:	ldp	x4, x5, [sp, #64]
  405f60:	stp	x4, x5, [sp, #32]
  405f64:	add	x4, sp, #0x10
  405f68:	bl	405e70 <ferror@plt+0x41d0>
  405f6c:	ldp	x29, x30, [sp], #240
  405f70:	ret
  405f74:	stp	x29, x30, [sp, #-16]!
  405f78:	mov	x29, sp
  405f7c:	mov	w2, #0x5                   	// #5
  405f80:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405f84:	add	x1, x1, #0xb10
  405f88:	mov	x0, #0x0                   	// #0
  405f8c:	bl	401c00 <dcgettext@plt>
  405f90:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  405f94:	add	x2, x2, #0xb28
  405f98:	mov	x1, x0
  405f9c:	mov	w0, #0x1                   	// #1
  405fa0:	bl	401a20 <__printf_chk@plt>
  405fa4:	mov	w2, #0x5                   	// #5
  405fa8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405fac:	add	x1, x1, #0xb40
  405fb0:	mov	x0, #0x0                   	// #0
  405fb4:	bl	401c00 <dcgettext@plt>
  405fb8:	adrp	x3, 406000 <ferror@plt+0x4360>
  405fbc:	add	x3, x3, #0xf60
  405fc0:	adrp	x2, 406000 <ferror@plt+0x4360>
  405fc4:	add	x2, x2, #0xf88
  405fc8:	mov	x1, x0
  405fcc:	mov	w0, #0x1                   	// #1
  405fd0:	bl	401a20 <__printf_chk@plt>
  405fd4:	mov	w2, #0x5                   	// #5
  405fd8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  405fdc:	add	x1, x1, #0xb58
  405fe0:	mov	x0, #0x0                   	// #0
  405fe4:	bl	401c00 <dcgettext@plt>
  405fe8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x137a8>
  405fec:	ldr	x1, [x1, #688]
  405ff0:	bl	401c10 <fputs_unlocked@plt>
  405ff4:	ldp	x29, x30, [sp], #16
  405ff8:	ret
  405ffc:	stp	x29, x30, [sp, #-32]!
  406000:	mov	x29, sp
  406004:	str	x19, [sp, #16]
  406008:	mov	x19, x0
  40600c:	bl	4019a0 <malloc@plt>
  406010:	cmp	x0, #0x0
  406014:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  406018:	b.ne	406028 <ferror@plt+0x4388>  // b.any
  40601c:	ldr	x19, [sp, #16]
  406020:	ldp	x29, x30, [sp], #32
  406024:	ret
  406028:	bl	406288 <ferror@plt+0x45e8>
  40602c:	stp	x29, x30, [sp, #-16]!
  406030:	mov	x29, sp
  406034:	mul	x3, x0, x1
  406038:	umulh	x2, x0, x1
  40603c:	cmp	x2, #0x0
  406040:	cset	x2, ne  // ne = any
  406044:	cmp	x3, #0x0
  406048:	csinc	x2, x2, xzr, ge  // ge = tcont
  40604c:	cbnz	w2, 406060 <ferror@plt+0x43c0>
  406050:	mul	x0, x0, x1
  406054:	bl	405ffc <ferror@plt+0x435c>
  406058:	ldp	x29, x30, [sp], #16
  40605c:	ret
  406060:	bl	406288 <ferror@plt+0x45e8>
  406064:	stp	x29, x30, [sp, #-16]!
  406068:	mov	x29, sp
  40606c:	bl	405ffc <ferror@plt+0x435c>
  406070:	ldp	x29, x30, [sp], #16
  406074:	ret
  406078:	stp	x29, x30, [sp, #-32]!
  40607c:	mov	x29, sp
  406080:	cmp	x1, #0x0
  406084:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  406088:	b.ne	4060b0 <ferror@plt+0x4410>  // b.any
  40608c:	str	x19, [sp, #16]
  406090:	mov	x19, x1
  406094:	bl	401a50 <realloc@plt>
  406098:	cmp	x0, #0x0
  40609c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4060a0:	b.ne	4060bc <ferror@plt+0x441c>  // b.any
  4060a4:	ldr	x19, [sp, #16]
  4060a8:	ldp	x29, x30, [sp], #32
  4060ac:	ret
  4060b0:	bl	401b70 <free@plt>
  4060b4:	mov	x0, #0x0                   	// #0
  4060b8:	b	4060a8 <ferror@plt+0x4408>
  4060bc:	bl	406288 <ferror@plt+0x45e8>
  4060c0:	stp	x29, x30, [sp, #-16]!
  4060c4:	mov	x29, sp
  4060c8:	mul	x4, x1, x2
  4060cc:	umulh	x3, x1, x2
  4060d0:	cmp	x3, #0x0
  4060d4:	cset	x3, ne  // ne = any
  4060d8:	cmp	x4, #0x0
  4060dc:	csinc	x3, x3, xzr, ge  // ge = tcont
  4060e0:	cbnz	w3, 4060f4 <ferror@plt+0x4454>
  4060e4:	mul	x1, x1, x2
  4060e8:	bl	406078 <ferror@plt+0x43d8>
  4060ec:	ldp	x29, x30, [sp], #16
  4060f0:	ret
  4060f4:	bl	406288 <ferror@plt+0x45e8>
  4060f8:	stp	x29, x30, [sp, #-16]!
  4060fc:	mov	x29, sp
  406100:	ldr	x3, [x1]
  406104:	cbz	x0, 406138 <ferror@plt+0x4498>
  406108:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  40610c:	movk	x4, #0x5554
  406110:	udiv	x4, x4, x2
  406114:	cmp	x4, x3
  406118:	b.ls	40616c <ferror@plt+0x44cc>  // b.plast
  40611c:	add	x4, x3, #0x1
  406120:	add	x3, x4, x3, lsr #1
  406124:	str	x3, [x1]
  406128:	mul	x1, x3, x2
  40612c:	bl	406078 <ferror@plt+0x43d8>
  406130:	ldp	x29, x30, [sp], #16
  406134:	ret
  406138:	cbnz	x3, 40614c <ferror@plt+0x44ac>
  40613c:	mov	x3, #0x80                  	// #128
  406140:	udiv	x3, x3, x2
  406144:	cmp	x2, #0x80
  406148:	cinc	x3, x3, hi  // hi = pmore
  40614c:	mul	x5, x3, x2
  406150:	umulh	x4, x3, x2
  406154:	cmp	x4, #0x0
  406158:	cset	x4, ne  // ne = any
  40615c:	cmp	x5, #0x0
  406160:	csinc	x4, x4, xzr, ge  // ge = tcont
  406164:	cbz	w4, 406124 <ferror@plt+0x4484>
  406168:	bl	406288 <ferror@plt+0x45e8>
  40616c:	bl	406288 <ferror@plt+0x45e8>
  406170:	stp	x29, x30, [sp, #-16]!
  406174:	mov	x29, sp
  406178:	mov	x2, x1
  40617c:	ldr	x1, [x1]
  406180:	cbz	x0, 4061ac <ferror@plt+0x450c>
  406184:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  406188:	movk	x3, #0x5553
  40618c:	cmp	x1, x3
  406190:	b.hi	4061b8 <ferror@plt+0x4518>  // b.pmore
  406194:	add	x3, x1, #0x1
  406198:	add	x1, x3, x1, lsr #1
  40619c:	str	x1, [x2]
  4061a0:	bl	406078 <ferror@plt+0x43d8>
  4061a4:	ldp	x29, x30, [sp], #16
  4061a8:	ret
  4061ac:	cbz	x1, 4061bc <ferror@plt+0x451c>
  4061b0:	tbz	x1, #63, 40619c <ferror@plt+0x44fc>
  4061b4:	bl	406288 <ferror@plt+0x45e8>
  4061b8:	bl	406288 <ferror@plt+0x45e8>
  4061bc:	mov	x1, #0x80                  	// #128
  4061c0:	b	40619c <ferror@plt+0x44fc>
  4061c4:	stp	x29, x30, [sp, #-32]!
  4061c8:	mov	x29, sp
  4061cc:	str	x19, [sp, #16]
  4061d0:	mov	x19, x0
  4061d4:	bl	405ffc <ferror@plt+0x435c>
  4061d8:	mov	x2, x19
  4061dc:	mov	w1, #0x0                   	// #0
  4061e0:	bl	401a30 <memset@plt>
  4061e4:	ldr	x19, [sp, #16]
  4061e8:	ldp	x29, x30, [sp], #32
  4061ec:	ret
  4061f0:	stp	x29, x30, [sp, #-16]!
  4061f4:	mov	x29, sp
  4061f8:	mul	x3, x0, x1
  4061fc:	umulh	x2, x0, x1
  406200:	cmp	x2, #0x0
  406204:	cset	x2, ne  // ne = any
  406208:	cmp	x3, #0x0
  40620c:	csinc	x2, x2, xzr, ge  // ge = tcont
  406210:	cbnz	w2, 406224 <ferror@plt+0x4584>
  406214:	bl	401a40 <calloc@plt>
  406218:	cbz	x0, 406224 <ferror@plt+0x4584>
  40621c:	ldp	x29, x30, [sp], #16
  406220:	ret
  406224:	bl	406288 <ferror@plt+0x45e8>
  406228:	stp	x29, x30, [sp, #-32]!
  40622c:	mov	x29, sp
  406230:	stp	x19, x20, [sp, #16]
  406234:	mov	x20, x0
  406238:	mov	x19, x1
  40623c:	mov	x0, x1
  406240:	bl	405ffc <ferror@plt+0x435c>
  406244:	mov	x2, x19
  406248:	mov	x1, x20
  40624c:	bl	4018a0 <memcpy@plt>
  406250:	ldp	x19, x20, [sp, #16]
  406254:	ldp	x29, x30, [sp], #32
  406258:	ret
  40625c:	stp	x29, x30, [sp, #-32]!
  406260:	mov	x29, sp
  406264:	str	x19, [sp, #16]
  406268:	mov	x19, x0
  40626c:	bl	4018c0 <strlen@plt>
  406270:	add	x1, x0, #0x1
  406274:	mov	x0, x19
  406278:	bl	406228 <ferror@plt+0x4588>
  40627c:	ldr	x19, [sp, #16]
  406280:	ldp	x29, x30, [sp], #32
  406284:	ret
  406288:	stp	x29, x30, [sp, #-32]!
  40628c:	mov	x29, sp
  406290:	str	x19, [sp, #16]
  406294:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  406298:	ldr	w19, [x0, #552]
  40629c:	mov	w2, #0x5                   	// #5
  4062a0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  4062a4:	add	x1, x1, #0xbd0
  4062a8:	mov	x0, #0x0                   	// #0
  4062ac:	bl	401c00 <dcgettext@plt>
  4062b0:	mov	x3, x0
  4062b4:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  4062b8:	add	x2, x2, #0x1e0
  4062bc:	mov	w1, #0x0                   	// #0
  4062c0:	mov	w0, w19
  4062c4:	bl	4018e0 <error@plt>
  4062c8:	bl	401ab0 <abort@plt>
  4062cc:	stp	x29, x30, [sp, #-48]!
  4062d0:	mov	x29, sp
  4062d4:	stp	x19, x20, [sp, #16]
  4062d8:	mov	x19, x0
  4062dc:	bl	401950 <fileno@plt>
  4062e0:	tbnz	w0, #31, 40633c <ferror@plt+0x469c>
  4062e4:	mov	x0, x19
  4062e8:	bl	401c20 <__freading@plt>
  4062ec:	cbz	w0, 40630c <ferror@plt+0x466c>
  4062f0:	mov	x0, x19
  4062f4:	bl	401950 <fileno@plt>
  4062f8:	mov	w2, #0x1                   	// #1
  4062fc:	mov	x1, #0x0                   	// #0
  406300:	bl	401930 <lseek@plt>
  406304:	cmn	x0, #0x1
  406308:	b.eq	406358 <ferror@plt+0x46b8>  // b.none
  40630c:	mov	x0, x19
  406310:	bl	40636c <ferror@plt+0x46cc>
  406314:	cbz	w0, 406358 <ferror@plt+0x46b8>
  406318:	str	x21, [sp, #32]
  40631c:	bl	401c50 <__errno_location@plt>
  406320:	mov	x20, x0
  406324:	ldr	w21, [x0]
  406328:	mov	x0, x19
  40632c:	bl	401960 <fclose@plt>
  406330:	cbnz	w21, 406348 <ferror@plt+0x46a8>
  406334:	ldr	x21, [sp, #32]
  406338:	b	406360 <ferror@plt+0x46c0>
  40633c:	mov	x0, x19
  406340:	bl	401960 <fclose@plt>
  406344:	b	406360 <ferror@plt+0x46c0>
  406348:	str	w21, [x20]
  40634c:	mov	w0, #0xffffffff            	// #-1
  406350:	ldr	x21, [sp, #32]
  406354:	b	406360 <ferror@plt+0x46c0>
  406358:	mov	x0, x19
  40635c:	bl	401960 <fclose@plt>
  406360:	ldp	x19, x20, [sp, #16]
  406364:	ldp	x29, x30, [sp], #48
  406368:	ret
  40636c:	stp	x29, x30, [sp, #-32]!
  406370:	mov	x29, sp
  406374:	str	x19, [sp, #16]
  406378:	mov	x19, x0
  40637c:	cbz	x0, 406388 <ferror@plt+0x46e8>
  406380:	bl	401c20 <__freading@plt>
  406384:	cbnz	w0, 40639c <ferror@plt+0x46fc>
  406388:	mov	x0, x19
  40638c:	bl	401bb0 <fflush@plt>
  406390:	ldr	x19, [sp, #16]
  406394:	ldp	x29, x30, [sp], #32
  406398:	ret
  40639c:	ldr	w0, [x19]
  4063a0:	tbnz	w0, #8, 4063b0 <ferror@plt+0x4710>
  4063a4:	mov	x0, x19
  4063a8:	bl	401bb0 <fflush@plt>
  4063ac:	b	406390 <ferror@plt+0x46f0>
  4063b0:	mov	w2, #0x1                   	// #1
  4063b4:	mov	x1, #0x0                   	// #0
  4063b8:	mov	x0, x19
  4063bc:	bl	4063c4 <ferror@plt+0x4724>
  4063c0:	b	4063a4 <ferror@plt+0x4704>
  4063c4:	stp	x29, x30, [sp, #-48]!
  4063c8:	mov	x29, sp
  4063cc:	stp	x19, x20, [sp, #16]
  4063d0:	str	x21, [sp, #32]
  4063d4:	mov	x19, x0
  4063d8:	mov	x20, x1
  4063dc:	mov	w21, w2
  4063e0:	ldr	x1, [x0, #16]
  4063e4:	ldr	x0, [x0, #8]
  4063e8:	cmp	x1, x0
  4063ec:	b.eq	406410 <ferror@plt+0x4770>  // b.none
  4063f0:	mov	w2, w21
  4063f4:	mov	x1, x20
  4063f8:	mov	x0, x19
  4063fc:	bl	401b60 <fseeko@plt>
  406400:	ldp	x19, x20, [sp, #16]
  406404:	ldr	x21, [sp, #32]
  406408:	ldp	x29, x30, [sp], #48
  40640c:	ret
  406410:	ldr	x1, [x19, #40]
  406414:	ldr	x0, [x19, #32]
  406418:	cmp	x1, x0
  40641c:	b.ne	4063f0 <ferror@plt+0x4750>  // b.any
  406420:	ldr	x0, [x19, #72]
  406424:	cbnz	x0, 4063f0 <ferror@plt+0x4750>
  406428:	mov	x0, x19
  40642c:	bl	401950 <fileno@plt>
  406430:	mov	w2, w21
  406434:	mov	x1, x20
  406438:	bl	401930 <lseek@plt>
  40643c:	cmn	x0, #0x1
  406440:	b.eq	40645c <ferror@plt+0x47bc>  // b.none
  406444:	ldr	w1, [x19]
  406448:	and	w1, w1, #0xffffffef
  40644c:	str	w1, [x19]
  406450:	str	x0, [x19, #144]
  406454:	mov	w0, #0x0                   	// #0
  406458:	b	406400 <ferror@plt+0x4760>
  40645c:	mov	w0, #0xffffffff            	// #-1
  406460:	b	406400 <ferror@plt+0x4760>
  406464:	stp	x29, x30, [sp, #-64]!
  406468:	mov	x29, sp
  40646c:	stp	x19, x20, [sp, #16]
  406470:	stp	x21, x22, [sp, #32]
  406474:	mov	x19, x0
  406478:	mov	x22, x1
  40647c:	mov	x21, x2
  406480:	cmp	x0, #0x0
  406484:	add	x0, sp, #0x3c
  406488:	csel	x19, x0, x19, eq  // eq = none
  40648c:	mov	x0, x19
  406490:	bl	401890 <mbrtowc@plt>
  406494:	mov	x20, x0
  406498:	cmp	x21, #0x0
  40649c:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  4064a0:	b.hi	4064b8 <ferror@plt+0x4818>  // b.pmore
  4064a4:	mov	x0, x20
  4064a8:	ldp	x19, x20, [sp, #16]
  4064ac:	ldp	x21, x22, [sp, #32]
  4064b0:	ldp	x29, x30, [sp], #64
  4064b4:	ret
  4064b8:	mov	w0, #0x0                   	// #0
  4064bc:	bl	406900 <_obstack_memory_used@@Base+0xa8>
  4064c0:	and	w0, w0, #0xff
  4064c4:	cbnz	w0, 4064a4 <ferror@plt+0x4804>
  4064c8:	ldrb	w0, [x22]
  4064cc:	str	w0, [x19]
  4064d0:	mov	x20, #0x1                   	// #1
  4064d4:	b	4064a4 <ferror@plt+0x4804>
  4064d8:	stp	x29, x30, [sp, #-16]!
  4064dc:	mov	x29, sp
  4064e0:	mov	x2, x0
  4064e4:	ldrb	w0, [x0, #80]
  4064e8:	tbz	w0, #0, 406500 <ferror@plt+0x4860>
  4064ec:	ldr	x3, [x2, #56]
  4064f0:	ldr	x0, [x2, #72]
  4064f4:	blr	x3
  4064f8:	ldp	x29, x30, [sp], #16
  4064fc:	ret
  406500:	ldr	x2, [x2, #56]
  406504:	mov	x0, x1
  406508:	blr	x2
  40650c:	b	4064f8 <ferror@plt+0x4858>
  406510:	stp	x29, x30, [sp, #-16]!
  406514:	mov	x29, sp
  406518:	mov	x2, x0
  40651c:	ldrb	w0, [x0, #80]
  406520:	tbz	w0, #0, 406538 <ferror@plt+0x4898>
  406524:	ldr	x3, [x2, #64]
  406528:	ldr	x0, [x2, #72]
  40652c:	blr	x3
  406530:	ldp	x29, x30, [sp], #16
  406534:	ret
  406538:	ldr	x2, [x2, #64]
  40653c:	mov	x0, x1
  406540:	blr	x2
  406544:	b	406530 <ferror@plt+0x4890>
  406548:	stp	x29, x30, [sp, #-48]!
  40654c:	mov	x29, sp
  406550:	stp	x19, x20, [sp, #16]
  406554:	str	x21, [sp, #32]
  406558:	mov	x19, x0
  40655c:	cmp	x2, #0x0
  406560:	mov	x0, #0x10                  	// #16
  406564:	csel	x20, x2, x0, ne  // ne = any
  406568:	cmp	x1, #0x0
  40656c:	mov	x0, #0xfe0                 	// #4064
  406570:	csel	x1, x1, x0, ne  // ne = any
  406574:	str	x1, [x19]
  406578:	sub	x21, x20, #0x1
  40657c:	str	x21, [x19, #48]
  406580:	mov	x0, x19
  406584:	bl	4064d8 <ferror@plt+0x4838>
  406588:	str	x0, [x19, #8]
  40658c:	cbz	x0, 4065dc <ferror@plt+0x493c>
  406590:	add	x2, x0, #0x10
  406594:	add	x2, x2, x21
  406598:	neg	x20, x20
  40659c:	and	x20, x2, x20
  4065a0:	str	x20, [x19, #16]
  4065a4:	str	x20, [x19, #24]
  4065a8:	ldr	x1, [x19]
  4065ac:	add	x1, x0, x1
  4065b0:	str	x1, [x0]
  4065b4:	str	x1, [x19, #32]
  4065b8:	str	xzr, [x0, #8]
  4065bc:	ldrb	w0, [x19, #80]
  4065c0:	and	w0, w0, #0xfffffff9
  4065c4:	strb	w0, [x19, #80]
  4065c8:	mov	w0, #0x1                   	// #1
  4065cc:	ldp	x19, x20, [sp, #16]
  4065d0:	ldr	x21, [sp, #32]
  4065d4:	ldp	x29, x30, [sp], #48
  4065d8:	ret
  4065dc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4065e0:	ldr	x0, [x0, #648]
  4065e4:	blr	x0
  4065e8:	stp	x29, x30, [sp, #-32]!
  4065ec:	mov	x29, sp
  4065f0:	str	x19, [sp, #16]
  4065f4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  4065f8:	ldr	x19, [x0, #664]
  4065fc:	mov	w2, #0x5                   	// #5
  406600:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  406604:	add	x1, x1, #0xbd0
  406608:	mov	x0, #0x0                   	// #0
  40660c:	bl	401c00 <dcgettext@plt>
  406610:	mov	x3, x0
  406614:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7a8>
  406618:	add	x2, x2, #0x898
  40661c:	mov	w1, #0x1                   	// #1
  406620:	mov	x0, x19
  406624:	bl	401b30 <__fprintf_chk@plt>
  406628:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  40662c:	ldr	w0, [x0, #552]
  406630:	bl	4018d0 <exit@plt>

0000000000406634 <_obstack_begin@@Base>:
  406634:	stp	x29, x30, [sp, #-16]!
  406638:	mov	x29, sp
  40663c:	str	x3, [x0, #56]
  406640:	str	x4, [x0, #64]
  406644:	ldrb	w3, [x0, #80]
  406648:	and	w3, w3, #0xfffffffe
  40664c:	strb	w3, [x0, #80]
  406650:	bl	406548 <ferror@plt+0x48a8>
  406654:	ldp	x29, x30, [sp], #16
  406658:	ret

000000000040665c <_obstack_begin_1@@Base>:
  40665c:	stp	x29, x30, [sp, #-16]!
  406660:	mov	x29, sp
  406664:	str	x3, [x0, #56]
  406668:	str	x4, [x0, #64]
  40666c:	str	x5, [x0, #72]
  406670:	ldrb	w3, [x0, #80]
  406674:	orr	w3, w3, #0x1
  406678:	strb	w3, [x0, #80]
  40667c:	bl	406548 <ferror@plt+0x48a8>
  406680:	ldp	x29, x30, [sp], #16
  406684:	ret

0000000000406688 <_obstack_newchunk@@Base>:
  406688:	stp	x29, x30, [sp, #-64]!
  40668c:	mov	x29, sp
  406690:	stp	x19, x20, [sp, #16]
  406694:	stp	x21, x22, [sp, #32]
  406698:	str	x23, [sp, #48]
  40669c:	mov	x19, x0
  4066a0:	ldr	x22, [x0, #8]
  4066a4:	ldr	x21, [x0, #24]
  4066a8:	ldr	x0, [x0, #16]
  4066ac:	sub	x21, x21, x0
  4066b0:	add	x1, x21, x1
  4066b4:	ldr	x0, [x19, #48]
  4066b8:	add	x0, x1, x0
  4066bc:	lsr	x20, x21, #3
  4066c0:	add	x20, x20, #0x64
  4066c4:	add	x20, x20, x0
  4066c8:	ldr	x2, [x19]
  4066cc:	cmp	x2, x0
  4066d0:	csel	x2, x2, x0, cs  // cs = hs, nlast
  4066d4:	cmp	x2, x20
  4066d8:	csel	x20, x2, x20, cs  // cs = hs, nlast
  4066dc:	cmp	x21, x1
  4066e0:	ccmp	x1, x0, #0x2, ls  // ls = plast
  4066e4:	b.hi	406780 <_obstack_newchunk@@Base+0xf8>  // b.pmore
  4066e8:	mov	x1, x20
  4066ec:	mov	x0, x19
  4066f0:	bl	4064d8 <ferror@plt+0x4838>
  4066f4:	mov	x23, x0
  4066f8:	cbz	x0, 406780 <_obstack_newchunk@@Base+0xf8>
  4066fc:	str	x0, [x19, #8]
  406700:	str	x22, [x0, #8]
  406704:	add	x2, x0, x20
  406708:	str	x2, [x19, #32]
  40670c:	mov	x1, x0
  406710:	str	x2, [x1], #16
  406714:	ldr	x20, [x19, #48]
  406718:	add	x1, x1, x20
  40671c:	bic	x20, x1, x20
  406720:	mov	x2, x21
  406724:	ldr	x1, [x19, #16]
  406728:	mov	x0, x20
  40672c:	bl	4018a0 <memcpy@plt>
  406730:	ldrb	w0, [x19, #80]
  406734:	tbnz	w0, #1, 406754 <_obstack_newchunk@@Base+0xcc>
  406738:	ldr	x0, [x19, #48]
  40673c:	add	x1, x22, #0x10
  406740:	add	x1, x1, x0
  406744:	bic	x0, x1, x0
  406748:	ldr	x1, [x19, #16]
  40674c:	cmp	x1, x0
  406750:	b.eq	40678c <_obstack_newchunk@@Base+0x104>  // b.none
  406754:	str	x20, [x19, #16]
  406758:	add	x20, x20, x21
  40675c:	str	x20, [x19, #24]
  406760:	ldrb	w0, [x19, #80]
  406764:	and	w0, w0, #0xfffffffd
  406768:	strb	w0, [x19, #80]
  40676c:	ldp	x19, x20, [sp, #16]
  406770:	ldp	x21, x22, [sp, #32]
  406774:	ldr	x23, [sp, #48]
  406778:	ldp	x29, x30, [sp], #64
  40677c:	ret
  406780:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x137a8>
  406784:	ldr	x0, [x0, #648]
  406788:	blr	x0
  40678c:	ldr	x0, [x22, #8]
  406790:	str	x0, [x23, #8]
  406794:	mov	x1, x22
  406798:	mov	x0, x19
  40679c:	bl	406510 <ferror@plt+0x4870>
  4067a0:	b	406754 <_obstack_newchunk@@Base+0xcc>

00000000004067a4 <_obstack_allocated_p@@Base>:
  4067a4:	ldr	x0, [x0, #8]
  4067a8:	cbnz	x0, 4067b8 <_obstack_allocated_p@@Base+0x14>
  4067ac:	b	4067cc <_obstack_allocated_p@@Base+0x28>
  4067b0:	ldr	x0, [x0, #8]
  4067b4:	cbz	x0, 4067cc <_obstack_allocated_p@@Base+0x28>
  4067b8:	cmp	x1, x0
  4067bc:	b.ls	4067b0 <_obstack_allocated_p@@Base+0xc>  // b.plast
  4067c0:	ldr	x2, [x0]
  4067c4:	cmp	x2, x1
  4067c8:	b.cc	4067b0 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  4067cc:	cmp	x0, #0x0
  4067d0:	cset	w0, ne  // ne = any
  4067d4:	ret

00000000004067d8 <_obstack_free@@Base>:
  4067d8:	stp	x29, x30, [sp, #-48]!
  4067dc:	mov	x29, sp
  4067e0:	stp	x19, x20, [sp, #16]
  4067e4:	str	x21, [sp, #32]
  4067e8:	mov	x19, x0
  4067ec:	mov	x21, x1
  4067f0:	ldr	x1, [x0, #8]
  4067f4:	cbnz	x1, 406820 <_obstack_free@@Base+0x48>
  4067f8:	cbz	x21, 406848 <_obstack_free@@Base+0x70>
  4067fc:	bl	401ab0 <abort@plt>
  406800:	ldr	x20, [x1, #8]
  406804:	mov	x0, x19
  406808:	bl	406510 <ferror@plt+0x4870>
  40680c:	ldrb	w2, [x19, #80]
  406810:	orr	w2, w2, #0x2
  406814:	strb	w2, [x19, #80]
  406818:	cbz	x20, 4067f8 <_obstack_free@@Base+0x20>
  40681c:	mov	x1, x20
  406820:	cmp	x21, x1
  406824:	b.ls	406800 <_obstack_free@@Base+0x28>  // b.plast
  406828:	ldr	x0, [x1]
  40682c:	cmp	x0, x21
  406830:	b.cc	406800 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  406834:	str	x21, [x19, #24]
  406838:	str	x21, [x19, #16]
  40683c:	ldr	x0, [x1]
  406840:	str	x0, [x19, #32]
  406844:	str	x1, [x19, #8]
  406848:	ldp	x19, x20, [sp, #16]
  40684c:	ldr	x21, [sp, #32]
  406850:	ldp	x29, x30, [sp], #48
  406854:	ret

0000000000406858 <_obstack_memory_used@@Base>:
  406858:	ldr	x1, [x0, #8]
  40685c:	cbz	x1, 40687c <_obstack_memory_used@@Base+0x24>
  406860:	mov	x0, #0x0                   	// #0
  406864:	ldr	x2, [x1]
  406868:	sub	x2, x2, x1
  40686c:	add	x0, x0, x2
  406870:	ldr	x1, [x1, #8]
  406874:	cbnz	x1, 406864 <_obstack_memory_used@@Base+0xc>
  406878:	ret
  40687c:	mov	x0, #0x0                   	// #0
  406880:	b	406878 <_obstack_memory_used@@Base+0x20>
  406884:	stp	x29, x30, [sp, #-48]!
  406888:	mov	x29, sp
  40688c:	stp	x19, x20, [sp, #16]
  406890:	str	x21, [sp, #32]
  406894:	mov	x19, x0
  406898:	bl	401940 <__fpending@plt>
  40689c:	mov	x21, x0
  4068a0:	ldr	w20, [x19]
  4068a4:	and	w20, w20, #0x20
  4068a8:	mov	x0, x19
  4068ac:	bl	4062cc <ferror@plt+0x462c>
  4068b0:	cbnz	w20, 4068dc <_obstack_memory_used@@Base+0x84>
  4068b4:	cbz	w0, 4068cc <_obstack_memory_used@@Base+0x74>
  4068b8:	cbnz	x21, 4068f0 <_obstack_memory_used@@Base+0x98>
  4068bc:	bl	401c50 <__errno_location@plt>
  4068c0:	ldr	w0, [x0]
  4068c4:	cmp	w0, #0x9
  4068c8:	csetm	w0, ne  // ne = any
  4068cc:	ldp	x19, x20, [sp, #16]
  4068d0:	ldr	x21, [sp, #32]
  4068d4:	ldp	x29, x30, [sp], #48
  4068d8:	ret
  4068dc:	cbnz	w0, 4068f8 <_obstack_memory_used@@Base+0xa0>
  4068e0:	bl	401c50 <__errno_location@plt>
  4068e4:	str	wzr, [x0]
  4068e8:	mov	w0, #0xffffffff            	// #-1
  4068ec:	b	4068cc <_obstack_memory_used@@Base+0x74>
  4068f0:	mov	w0, #0xffffffff            	// #-1
  4068f4:	b	4068cc <_obstack_memory_used@@Base+0x74>
  4068f8:	mov	w0, #0xffffffff            	// #-1
  4068fc:	b	4068cc <_obstack_memory_used@@Base+0x74>
  406900:	stp	x29, x30, [sp, #-32]!
  406904:	mov	x29, sp
  406908:	mov	x1, #0x0                   	// #0
  40690c:	bl	401c90 <setlocale@plt>
  406910:	mov	w1, #0x1                   	// #1
  406914:	cbz	x0, 406950 <_obstack_memory_used@@Base+0xf8>
  406918:	str	x19, [sp, #16]
  40691c:	mov	x19, x0
  406920:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  406924:	add	x1, x1, #0xbe8
  406928:	bl	401b40 <strcmp@plt>
  40692c:	mov	w1, #0x0                   	// #0
  406930:	cbz	w0, 40695c <_obstack_memory_used@@Base+0x104>
  406934:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  406938:	add	x1, x1, #0xbf0
  40693c:	mov	x0, x19
  406940:	bl	401b40 <strcmp@plt>
  406944:	cmp	w0, #0x0
  406948:	cset	w1, ne  // ne = any
  40694c:	ldr	x19, [sp, #16]
  406950:	mov	w0, w1
  406954:	ldp	x29, x30, [sp], #32
  406958:	ret
  40695c:	ldr	x19, [sp, #16]
  406960:	b	406950 <_obstack_memory_used@@Base+0xf8>
  406964:	stp	x29, x30, [sp, #-16]!
  406968:	mov	x29, sp
  40696c:	mov	w0, #0xe                   	// #14
  406970:	bl	401980 <nl_langinfo@plt>
  406974:	cbz	x0, 406994 <_obstack_memory_used@@Base+0x13c>
  406978:	ldrb	w2, [x0]
  40697c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7a8>
  406980:	add	x1, x1, #0xbf8
  406984:	cmp	w2, #0x0
  406988:	csel	x0, x1, x0, eq  // eq = none
  40698c:	ldp	x29, x30, [sp], #16
  406990:	ret
  406994:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7a8>
  406998:	add	x0, x0, #0xbf8
  40699c:	b	40698c <_obstack_memory_used@@Base+0x134>
  4069a0:	stp	x29, x30, [sp, #-64]!
  4069a4:	mov	x29, sp
  4069a8:	stp	x19, x20, [sp, #16]
  4069ac:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x127a8>
  4069b0:	add	x20, x20, #0xdf0
  4069b4:	stp	x21, x22, [sp, #32]
  4069b8:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x127a8>
  4069bc:	add	x21, x21, #0xde8
  4069c0:	sub	x20, x20, x21
  4069c4:	mov	w22, w0
  4069c8:	stp	x23, x24, [sp, #48]
  4069cc:	mov	x23, x1
  4069d0:	mov	x24, x2
  4069d4:	bl	401858 <mbrtowc@plt-0x38>
  4069d8:	cmp	xzr, x20, asr #3
  4069dc:	b.eq	406a08 <_obstack_memory_used@@Base+0x1b0>  // b.none
  4069e0:	asr	x20, x20, #3
  4069e4:	mov	x19, #0x0                   	// #0
  4069e8:	ldr	x3, [x21, x19, lsl #3]
  4069ec:	mov	x2, x24
  4069f0:	add	x19, x19, #0x1
  4069f4:	mov	x1, x23
  4069f8:	mov	w0, w22
  4069fc:	blr	x3
  406a00:	cmp	x20, x19
  406a04:	b.ne	4069e8 <_obstack_memory_used@@Base+0x190>  // b.any
  406a08:	ldp	x19, x20, [sp, #16]
  406a0c:	ldp	x21, x22, [sp, #32]
  406a10:	ldp	x23, x24, [sp, #48]
  406a14:	ldp	x29, x30, [sp], #64
  406a18:	ret
  406a1c:	nop
  406a20:	ret
  406a24:	nop
  406a28:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x137a8>
  406a2c:	mov	x1, #0x0                   	// #0
  406a30:	ldr	x2, [x2, #536]
  406a34:	b	401900 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000406a38 <.fini>:
  406a38:	stp	x29, x30, [sp, #-16]!
  406a3c:	mov	x29, sp
  406a40:	ldp	x29, x30, [sp], #16
  406a44:	ret
