
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-user-runtime-dir_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004010e8 <_init>:
  4010e8:	stp	x29, x30, [sp, #-16]!
  4010ec:	mov	x29, sp
  4010f0:	bl	4013e0 <call_weak_fn>
  4010f4:	ldp	x29, x30, [sp], #16
  4010f8:	ret

Disassembly of section .plt:

0000000000401100 <__libc_start_main@plt-0x20>:
  401100:	stp	x16, x30, [sp, #-16]!
  401104:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401108:	ldr	x17, [x16, #3776]
  40110c:	add	x16, x16, #0xec0
  401110:	br	x17
  401114:	nop
  401118:	nop
  40111c:	nop

0000000000401120 <__libc_start_main@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401124:	ldr	x17, [x16, #3784]
  401128:	add	x16, x16, #0xec8
  40112c:	br	x17

0000000000401130 <abort@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401134:	ldr	x17, [x16, #3792]
  401138:	add	x16, x16, #0xed0
  40113c:	br	x17

0000000000401140 <__gmon_start__@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401144:	ldr	x17, [x16, #3800]
  401148:	add	x16, x16, #0xed8
  40114c:	br	x17

0000000000401150 <ask_password_agent_close@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401154:	ldr	x17, [x16, #3808]
  401158:	add	x16, x16, #0xee0
  40115c:	br	x17

0000000000401160 <polkit_agent_close@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401164:	ldr	x17, [x16, #3816]
  401168:	add	x16, x16, #0xee8
  40116c:	br	x17

0000000000401170 <pager_close@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401174:	ldr	x17, [x16, #3824]
  401178:	add	x16, x16, #0xef0
  40117c:	br	x17

0000000000401180 <mac_selinux_finish@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401184:	ldr	x17, [x16, #3832]
  401188:	add	x16, x16, #0xef8
  40118c:	br	x17

0000000000401190 <log_parse_environment_realm@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401194:	ldr	x17, [x16, #3840]
  401198:	add	x16, x16, #0xf00
  40119c:	br	x17

00000000004011a0 <log_open@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4011a4:	ldr	x17, [x16, #3848]
  4011a8:	add	x16, x16, #0xf08
  4011ac:	br	x17

00000000004011b0 <log_get_max_level_realm@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4011b4:	ldr	x17, [x16, #3856]
  4011b8:	add	x16, x16, #0xf10
  4011bc:	br	x17

00000000004011c0 <log_internal_realm@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4011c4:	ldr	x17, [x16, #3864]
  4011c8:	add	x16, x16, #0xf18
  4011cc:	br	x17

00000000004011d0 <abs@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4011d4:	ldr	x17, [x16, #3872]
  4011d8:	add	x16, x16, #0xf20
  4011dc:	br	x17

00000000004011e0 <strv_find@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4011e4:	ldr	x17, [x16, #3880]
  4011e8:	add	x16, x16, #0xf28
  4011ec:	br	x17

00000000004011f0 <mac_selinux_init@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4011f4:	ldr	x17, [x16, #3888]
  4011f8:	add	x16, x16, #0xf30
  4011fc:	br	x17

0000000000401200 <umask@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401204:	ldr	x17, [x16, #3896]
  401208:	add	x16, x16, #0xf38
  40120c:	br	x17

0000000000401210 <strcmp@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401214:	ldr	x17, [x16, #3904]
  401218:	add	x16, x16, #0xf40
  40121c:	br	x17

0000000000401220 <log_assert_failed_unreachable_realm@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401224:	ldr	x17, [x16, #3912]
  401228:	add	x16, x16, #0xf48
  40122c:	br	x17

0000000000401230 <get_user_creds@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401234:	ldr	x17, [x16, #3920]
  401238:	add	x16, x16, #0xf50
  40123c:	br	x17

0000000000401240 <snprintf@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401244:	ldr	x17, [x16, #3928]
  401248:	add	x16, x16, #0xf58
  40124c:	br	x17

0000000000401250 <log_assert_failed_realm@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401254:	ldr	x17, [x16, #3936]
  401258:	add	x16, x16, #0xf60
  40125c:	br	x17

0000000000401260 <parse_uid@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401264:	ldr	x17, [x16, #3944]
  401268:	add	x16, x16, #0xf68
  40126c:	br	x17

0000000000401270 <sd_bus_default_system@plt>:
  401270:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401274:	ldr	x17, [x16, #3952]
  401278:	add	x16, x16, #0xf70
  40127c:	br	x17

0000000000401280 <sd_bus_get_property_trivial@plt>:
  401280:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401284:	ldr	x17, [x16, #3960]
  401288:	add	x16, x16, #0xf78
  40128c:	br	x17

0000000000401290 <bus_error_message@plt>:
  401290:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401294:	ldr	x17, [x16, #3968]
  401298:	add	x16, x16, #0xf80
  40129c:	br	x17

00000000004012a0 <sd_bus_error_free@plt>:
  4012a0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4012a4:	ldr	x17, [x16, #3976]
  4012a8:	add	x16, x16, #0xf88
  4012ac:	br	x17

00000000004012b0 <path_is_absolute@plt>:
  4012b0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4012b4:	ldr	x17, [x16, #3984]
  4012b8:	add	x16, x16, #0xf90
  4012bc:	br	x17

00000000004012c0 <uid_is_valid@plt>:
  4012c0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4012c4:	ldr	x17, [x16, #3992]
  4012c8:	add	x16, x16, #0xf98
  4012cc:	br	x17

00000000004012d0 <mkdir_safe_label@plt>:
  4012d0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4012d4:	ldr	x17, [x16, #4000]
  4012d8:	add	x16, x16, #0xfa0
  4012dc:	br	x17

00000000004012e0 <path_is_mount_point@plt>:
  4012e0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4012e4:	ldr	x17, [x16, #4008]
  4012e8:	add	x16, x16, #0xfa8
  4012ec:	br	x17

00000000004012f0 <mac_smack_use@plt>:
  4012f0:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  4012f4:	ldr	x17, [x16, #4016]
  4012f8:	add	x16, x16, #0xfb0
  4012fc:	br	x17

0000000000401300 <mkdir_label@plt>:
  401300:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401304:	ldr	x17, [x16, #4024]
  401308:	add	x16, x16, #0xfb8
  40130c:	br	x17

0000000000401310 <mount@plt>:
  401310:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401314:	ldr	x17, [x16, #4032]
  401318:	add	x16, x16, #0xfc0
  40131c:	br	x17

0000000000401320 <__errno_location@plt>:
  401320:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401324:	ldr	x17, [x16, #4040]
  401328:	add	x16, x16, #0xfc8
  40132c:	br	x17

0000000000401330 <chmod_and_chown@plt>:
  401330:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401334:	ldr	x17, [x16, #4048]
  401338:	add	x16, x16, #0xfd0
  40133c:	br	x17

0000000000401340 <label_fix@plt>:
  401340:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401344:	ldr	x17, [x16, #4056]
  401348:	add	x16, x16, #0xfd8
  40134c:	br	x17

0000000000401350 <rmdir@plt>:
  401350:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401354:	ldr	x17, [x16, #4064]
  401358:	add	x16, x16, #0xfe0
  40135c:	br	x17

0000000000401360 <sd_bus_flush_close_unref@plt>:
  401360:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401364:	ldr	x17, [x16, #4072]
  401368:	add	x16, x16, #0xfe8
  40136c:	br	x17

0000000000401370 <rm_rf@plt>:
  401370:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401374:	ldr	x17, [x16, #4080]
  401378:	add	x16, x16, #0xff0
  40137c:	br	x17

0000000000401380 <umount2@plt>:
  401380:	adrp	x16, 41f000 <__FRAME_END__+0x1bdd8>
  401384:	ldr	x17, [x16, #4088]
  401388:	add	x16, x16, #0xff8
  40138c:	br	x17

Disassembly of section .text:

0000000000401390 <_start>:
  401390:	mov	x29, #0x0                   	// #0
  401394:	mov	x30, #0x0                   	// #0
  401398:	mov	x5, x0
  40139c:	ldr	x1, [sp]
  4013a0:	add	x2, sp, #0x8
  4013a4:	mov	x6, sp
  4013a8:	movz	x0, #0x0, lsl #48
  4013ac:	movk	x0, #0x0, lsl #32
  4013b0:	movk	x0, #0x40, lsl #16
  4013b4:	movk	x0, #0x1558
  4013b8:	movz	x3, #0x0, lsl #48
  4013bc:	movk	x3, #0x0, lsl #32
  4013c0:	movk	x3, #0x40, lsl #16
  4013c4:	movk	x3, #0x2aa8
  4013c8:	movz	x4, #0x0, lsl #48
  4013cc:	movk	x4, #0x0, lsl #32
  4013d0:	movk	x4, #0x40, lsl #16
  4013d4:	movk	x4, #0x2b28
  4013d8:	bl	401120 <__libc_start_main@plt>
  4013dc:	bl	401130 <abort@plt>

00000000004013e0 <call_weak_fn>:
  4013e0:	adrp	x0, 41f000 <__FRAME_END__+0x1bdd8>
  4013e4:	ldr	x0, [x0, #3736]
  4013e8:	cbz	x0, 4013f0 <call_weak_fn+0x10>
  4013ec:	b	401140 <__gmon_start__@plt>
  4013f0:	ret

00000000004013f4 <deregister_tm_clones>:
  4013f4:	stp	x29, x30, [sp, #-32]!
  4013f8:	mov	x29, sp
  4013fc:	adrp	x0, 420000 <__TMC_END__>
  401400:	add	x0, x0, #0x0
  401404:	str	x0, [sp, #24]
  401408:	ldr	x0, [sp, #24]
  40140c:	str	x0, [sp, #24]
  401410:	ldr	x1, [sp, #24]
  401414:	adrp	x0, 420000 <__TMC_END__>
  401418:	add	x0, x0, #0x0
  40141c:	cmp	x1, x0
  401420:	b.eq	40145c <deregister_tm_clones+0x68>  // b.none
  401424:	adrp	x0, 402000 <acquire_runtime_dir_size+0x1e8>
  401428:	add	x0, x0, #0xb40
  40142c:	ldr	x0, [x0]
  401430:	str	x0, [sp, #16]
  401434:	ldr	x0, [sp, #16]
  401438:	str	x0, [sp, #16]
  40143c:	ldr	x0, [sp, #16]
  401440:	cmp	x0, #0x0
  401444:	b.eq	401460 <deregister_tm_clones+0x6c>  // b.none
  401448:	ldr	x1, [sp, #16]
  40144c:	adrp	x0, 420000 <__TMC_END__>
  401450:	add	x0, x0, #0x0
  401454:	blr	x1
  401458:	b	401460 <deregister_tm_clones+0x6c>
  40145c:	nop
  401460:	ldp	x29, x30, [sp], #32
  401464:	ret

0000000000401468 <register_tm_clones>:
  401468:	stp	x29, x30, [sp, #-48]!
  40146c:	mov	x29, sp
  401470:	adrp	x0, 420000 <__TMC_END__>
  401474:	add	x0, x0, #0x0
  401478:	str	x0, [sp, #40]
  40147c:	ldr	x0, [sp, #40]
  401480:	str	x0, [sp, #40]
  401484:	ldr	x1, [sp, #40]
  401488:	adrp	x0, 420000 <__TMC_END__>
  40148c:	add	x0, x0, #0x0
  401490:	sub	x0, x1, x0
  401494:	asr	x0, x0, #3
  401498:	lsr	x1, x0, #63
  40149c:	add	x0, x1, x0
  4014a0:	asr	x0, x0, #1
  4014a4:	str	x0, [sp, #32]
  4014a8:	ldr	x0, [sp, #32]
  4014ac:	cmp	x0, #0x0
  4014b0:	b.eq	4014f0 <register_tm_clones+0x88>  // b.none
  4014b4:	adrp	x0, 402000 <acquire_runtime_dir_size+0x1e8>
  4014b8:	add	x0, x0, #0xb48
  4014bc:	ldr	x0, [x0]
  4014c0:	str	x0, [sp, #24]
  4014c4:	ldr	x0, [sp, #24]
  4014c8:	str	x0, [sp, #24]
  4014cc:	ldr	x0, [sp, #24]
  4014d0:	cmp	x0, #0x0
  4014d4:	b.eq	4014f4 <register_tm_clones+0x8c>  // b.none
  4014d8:	ldr	x2, [sp, #24]
  4014dc:	ldr	x1, [sp, #32]
  4014e0:	adrp	x0, 420000 <__TMC_END__>
  4014e4:	add	x0, x0, #0x0
  4014e8:	blr	x2
  4014ec:	b	4014f4 <register_tm_clones+0x8c>
  4014f0:	nop
  4014f4:	ldp	x29, x30, [sp], #48
  4014f8:	ret

00000000004014fc <__do_global_dtors_aux>:
  4014fc:	stp	x29, x30, [sp, #-16]!
  401500:	mov	x29, sp
  401504:	adrp	x0, 420000 <__TMC_END__>
  401508:	add	x0, x0, #0x18
  40150c:	ldrb	w0, [x0]
  401510:	and	x0, x0, #0xff
  401514:	cmp	x0, #0x0
  401518:	b.ne	401534 <__do_global_dtors_aux+0x38>  // b.any
  40151c:	bl	4013f4 <deregister_tm_clones>
  401520:	adrp	x0, 420000 <__TMC_END__>
  401524:	add	x0, x0, #0x18
  401528:	mov	w1, #0x1                   	// #1
  40152c:	strb	w1, [x0]
  401530:	b	401538 <__do_global_dtors_aux+0x3c>
  401534:	nop
  401538:	ldp	x29, x30, [sp], #16
  40153c:	ret

0000000000401540 <frame_dummy>:
  401540:	stp	x29, x30, [sp, #-16]!
  401544:	mov	x29, sp
  401548:	bl	401468 <register_tm_clones>
  40154c:	nop
  401550:	ldp	x29, x30, [sp], #16
  401554:	ret

0000000000401558 <main>:
  401558:	sub	sp, sp, #0x30
  40155c:	stp	x29, x30, [sp, #32]
  401560:	add	x29, sp, #0x20
  401564:	mov	w8, wzr
  401568:	mov	w9, #0x1                   	// #1
  40156c:	stur	wzr, [x29, #-4]
  401570:	stur	w0, [x29, #-8]
  401574:	str	x1, [sp, #16]
  401578:	ldur	w0, [x29, #-8]
  40157c:	ldr	x1, [sp, #16]
  401580:	str	w8, [sp, #8]
  401584:	str	w9, [sp, #4]
  401588:	bl	4015d0 <save_argc_argv>
  40158c:	ldur	w0, [x29, #-8]
  401590:	ldr	x1, [sp, #16]
  401594:	bl	401604 <run>
  401598:	str	w0, [sp, #12]
  40159c:	bl	401150 <ask_password_agent_close@plt>
  4015a0:	bl	401160 <polkit_agent_close@plt>
  4015a4:	bl	401170 <pager_close@plt>
  4015a8:	bl	401180 <mac_selinux_finish@plt>
  4015ac:	bl	4018c0 <static_destruct>
  4015b0:	ldr	w8, [sp, #12]
  4015b4:	cmp	w8, #0x0
  4015b8:	ldr	w8, [sp, #4]
  4015bc:	ldr	w9, [sp, #8]
  4015c0:	csel	w0, w8, w9, lt  // lt = tstop
  4015c4:	ldp	x29, x30, [sp, #32]
  4015c8:	add	sp, sp, #0x30
  4015cc:	ret

00000000004015d0 <save_argc_argv>:
  4015d0:	sub	sp, sp, #0x10
  4015d4:	adrp	x8, 420000 <__TMC_END__>
  4015d8:	add	x8, x8, #0x20
  4015dc:	adrp	x9, 420000 <__TMC_END__>
  4015e0:	add	x9, x9, #0x28
  4015e4:	str	w0, [sp, #12]
  4015e8:	str	x1, [sp]
  4015ec:	ldr	w10, [sp, #12]
  4015f0:	str	w10, [x8]
  4015f4:	ldr	x8, [sp]
  4015f8:	str	x8, [x9]
  4015fc:	add	sp, sp, #0x10
  401600:	ret

0000000000401604 <run>:
  401604:	sub	sp, sp, #0x90
  401608:	stp	x29, x30, [sp, #128]
  40160c:	add	x29, sp, #0x80
  401610:	mov	w8, wzr
  401614:	adrp	x9, 402000 <acquire_runtime_dir_size+0x1e8>
  401618:	add	x9, x9, #0xb50
  40161c:	add	x9, x9, #0x3
  401620:	adrp	x10, 402000 <acquire_runtime_dir_size+0x1e8>
  401624:	add	x10, x10, #0xb70
  401628:	stur	w0, [x29, #-8]
  40162c:	stur	x1, [x29, #-16]
  401630:	mov	w0, w8
  401634:	str	x9, [sp, #24]
  401638:	str	x10, [sp, #16]
  40163c:	bl	401190 <log_parse_environment_realm@plt>
  401640:	bl	4011a0 <log_open@plt>
  401644:	ldur	w8, [x29, #-8]
  401648:	cmp	w8, #0x3
  40164c:	b.eq	4016d8 <run+0xd4>  // b.none
  401650:	mov	w8, #0x3                   	// #3
  401654:	stur	w8, [x29, #-24]
  401658:	mov	w8, #0x16                  	// #22
  40165c:	movk	w8, #0x4000, lsl #16
  401660:	stur	w8, [x29, #-28]
  401664:	stur	wzr, [x29, #-32]
  401668:	ldur	w0, [x29, #-32]
  40166c:	bl	4011b0 <log_get_max_level_realm@plt>
  401670:	ldur	w8, [x29, #-24]
  401674:	and	w8, w8, #0x7
  401678:	cmp	w0, w8
  40167c:	b.lt	4016b0 <run+0xac>  // b.tstop
  401680:	ldur	w8, [x29, #-32]
  401684:	ldur	w9, [x29, #-24]
  401688:	orr	w0, w9, w8, lsl #10
  40168c:	ldur	w1, [x29, #-28]
  401690:	ldr	x2, [sp, #24]
  401694:	mov	w3, #0xb5                  	// #181
  401698:	ldr	x4, [sp, #16]
  40169c:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  4016a0:	add	x5, x5, #0xb74
  4016a4:	bl	4011c0 <log_internal_realm@plt>
  4016a8:	str	w0, [sp, #12]
  4016ac:	b	4016c4 <run+0xc0>
  4016b0:	ldur	w0, [x29, #-28]
  4016b4:	bl	4011d0 <abs@plt>
  4016b8:	mov	w8, wzr
  4016bc:	subs	w8, w8, w0, uxtb
  4016c0:	str	w8, [sp, #12]
  4016c4:	ldr	w8, [sp, #12]
  4016c8:	stur	w8, [x29, #-36]
  4016cc:	ldur	w8, [x29, #-36]
  4016d0:	stur	w8, [x29, #-4]
  4016d4:	b	4018b0 <run+0x2ac>
  4016d8:	adrp	x8, 420000 <__TMC_END__>
  4016dc:	add	x8, x8, #0x0
  4016e0:	ldr	q0, [x8]
  4016e4:	add	x0, sp, #0x40
  4016e8:	str	q0, [sp, #64]
  4016ec:	ldr	x8, [x8, #16]
  4016f0:	str	x8, [sp, #80]
  4016f4:	ldur	x8, [x29, #-16]
  4016f8:	ldr	x1, [x8, #8]
  4016fc:	bl	4011e0 <strv_find@plt>
  401700:	cbnz	x0, 40178c <run+0x188>
  401704:	mov	w8, #0x3                   	// #3
  401708:	str	w8, [sp, #60]
  40170c:	mov	w8, #0x16                  	// #22
  401710:	movk	w8, #0x4000, lsl #16
  401714:	str	w8, [sp, #56]
  401718:	str	wzr, [sp, #52]
  40171c:	ldr	w0, [sp, #52]
  401720:	bl	4011b0 <log_get_max_level_realm@plt>
  401724:	ldr	w8, [sp, #60]
  401728:	and	w8, w8, #0x7
  40172c:	cmp	w0, w8
  401730:	b.lt	401764 <run+0x160>  // b.tstop
  401734:	ldr	w8, [sp, #52]
  401738:	ldr	w9, [sp, #60]
  40173c:	orr	w0, w9, w8, lsl #10
  401740:	ldr	w1, [sp, #56]
  401744:	ldr	x2, [sp, #24]
  401748:	mov	w3, #0xb8                  	// #184
  40174c:	ldr	x4, [sp, #16]
  401750:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  401754:	add	x5, x5, #0xba1
  401758:	bl	4011c0 <log_internal_realm@plt>
  40175c:	str	w0, [sp, #8]
  401760:	b	401778 <run+0x174>
  401764:	ldr	w0, [sp, #56]
  401768:	bl	4011d0 <abs@plt>
  40176c:	mov	w8, wzr
  401770:	subs	w8, w8, w0, uxtb
  401774:	str	w8, [sp, #8]
  401778:	ldr	w8, [sp, #8]
  40177c:	str	w8, [sp, #48]
  401780:	ldr	w8, [sp, #48]
  401784:	stur	w8, [x29, #-4]
  401788:	b	4018b0 <run+0x2ac>
  40178c:	bl	4011f0 <mac_selinux_init@plt>
  401790:	stur	w0, [x29, #-20]
  401794:	ldur	w8, [x29, #-20]
  401798:	cmp	w8, #0x0
  40179c:	cset	w8, ge  // ge = tcont
  4017a0:	tbnz	w8, #0, 401828 <run+0x224>
  4017a4:	mov	w8, #0x3                   	// #3
  4017a8:	str	w8, [sp, #44]
  4017ac:	ldur	w8, [x29, #-20]
  4017b0:	str	w8, [sp, #40]
  4017b4:	str	wzr, [sp, #36]
  4017b8:	ldr	w0, [sp, #36]
  4017bc:	bl	4011b0 <log_get_max_level_realm@plt>
  4017c0:	ldr	w8, [sp, #44]
  4017c4:	and	w8, w8, #0x7
  4017c8:	cmp	w0, w8
  4017cc:	b.lt	401800 <run+0x1fc>  // b.tstop
  4017d0:	ldr	w8, [sp, #36]
  4017d4:	ldr	w9, [sp, #44]
  4017d8:	orr	w0, w9, w8, lsl #10
  4017dc:	ldr	w1, [sp, #40]
  4017e0:	ldr	x2, [sp, #24]
  4017e4:	mov	w3, #0xbc                  	// #188
  4017e8:	ldr	x4, [sp, #16]
  4017ec:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  4017f0:	add	x5, x5, #0xbd2
  4017f4:	bl	4011c0 <log_internal_realm@plt>
  4017f8:	str	w0, [sp, #4]
  4017fc:	b	401814 <run+0x210>
  401800:	ldr	w0, [sp, #40]
  401804:	bl	4011d0 <abs@plt>
  401808:	mov	w8, wzr
  40180c:	subs	w8, w8, w0, uxtb
  401810:	str	w8, [sp, #4]
  401814:	ldr	w8, [sp, #4]
  401818:	str	w8, [sp, #32]
  40181c:	ldr	w8, [sp, #32]
  401820:	stur	w8, [x29, #-4]
  401824:	b	4018b0 <run+0x2ac>
  401828:	mov	w0, #0x12                  	// #18
  40182c:	bl	401200 <umask@plt>
  401830:	ldur	x8, [x29, #-16]
  401834:	ldr	x8, [x8, #8]
  401838:	mov	x0, x8
  40183c:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  401840:	add	x1, x1, #0xb96
  401844:	bl	401210 <strcmp@plt>
  401848:	cbnz	w0, 401860 <run+0x25c>
  40184c:	ldur	x8, [x29, #-16]
  401850:	ldr	x0, [x8, #16]
  401854:	bl	401940 <do_mount>
  401858:	stur	w0, [x29, #-4]
  40185c:	b	4018b0 <run+0x2ac>
  401860:	ldur	x8, [x29, #-16]
  401864:	ldr	x0, [x8, #8]
  401868:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  40186c:	add	x1, x1, #0xb9c
  401870:	bl	401210 <strcmp@plt>
  401874:	cbnz	w0, 40188c <run+0x288>
  401878:	ldur	x8, [x29, #-16]
  40187c:	ldr	x0, [x8, #16]
  401880:	bl	401bc4 <do_umount>
  401884:	stur	w0, [x29, #-4]
  401888:	b	4018b0 <run+0x2ac>
  40188c:	mov	w8, wzr
  401890:	mov	w0, w8
  401894:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  401898:	add	x1, x1, #0xbf6
  40189c:	ldr	x2, [sp, #24]
  4018a0:	mov	w3, #0xc4                  	// #196
  4018a4:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  4018a8:	add	x4, x4, #0xc04
  4018ac:	bl	401220 <log_assert_failed_unreachable_realm@plt>
  4018b0:	ldur	w0, [x29, #-4]
  4018b4:	ldp	x29, x30, [sp, #128]
  4018b8:	add	sp, sp, #0x90
  4018bc:	ret

00000000004018c0 <static_destruct>:
  4018c0:	sub	sp, sp, #0x20
  4018c4:	stp	x29, x30, [sp, #16]
  4018c8:	add	x29, sp, #0x10
  4018cc:	adrp	x8, 41f000 <__FRAME_END__+0x1bdd8>
  4018d0:	ldr	x8, [x8, #3744]
  4018d4:	str	x8, [sp]
  4018d8:	cbnz	x8, 4018e0 <static_destruct+0x20>
  4018dc:	b	401934 <static_destruct+0x74>
  4018e0:	ldr	x0, [sp]
  4018e4:	mov	x1, #0x8                   	// #8
  4018e8:	bl	402a78 <ALIGN_TO>
  4018ec:	str	x0, [sp, #8]
  4018f0:	ldr	x8, [sp, #8]
  4018f4:	adrp	x9, 41f000 <__FRAME_END__+0x1bdd8>
  4018f8:	ldr	x9, [x9, #3752]
  4018fc:	cmp	x8, x9
  401900:	b.cs	401934 <static_destruct+0x74>  // b.hs, b.nlast
  401904:	ldr	x8, [sp, #8]
  401908:	ldr	x8, [x8, #8]
  40190c:	ldr	x9, [sp, #8]
  401910:	ldr	x0, [x9]
  401914:	blr	x8
  401918:	ldr	x8, [sp, #8]
  40191c:	add	x8, x8, #0x10
  401920:	mov	x0, x8
  401924:	mov	x1, #0x8                   	// #8
  401928:	bl	402a78 <ALIGN_TO>
  40192c:	str	x0, [sp, #8]
  401930:	b	4018f0 <static_destruct+0x30>
  401934:	ldp	x29, x30, [sp, #16]
  401938:	add	sp, sp, #0x20
  40193c:	ret

0000000000401940 <do_mount>:
  401940:	sub	sp, sp, #0xa0
  401944:	stp	x29, x30, [sp, #144]
  401948:	add	x29, sp, #0x90
  40194c:	mov	x8, xzr
  401950:	mov	w9, wzr
  401954:	adrp	x10, 402000 <acquire_runtime_dir_size+0x1e8>
  401958:	add	x10, x10, #0xb50
  40195c:	add	x10, x10, #0x3
  401960:	sub	x11, x29, #0x10
  401964:	sub	x1, x29, #0x34
  401968:	sub	x2, x29, #0x38
  40196c:	stur	x0, [x29, #-16]
  401970:	mov	x0, x11
  401974:	mov	x3, x8
  401978:	mov	x4, x8
  40197c:	mov	w5, w9
  401980:	str	x10, [sp, #40]
  401984:	bl	401230 <get_user_creds@plt>
  401988:	stur	w0, [x29, #-60]
  40198c:	ldur	w9, [x29, #-60]
  401990:	cmp	w9, #0x0
  401994:	cset	w9, ge  // ge = tcont
  401998:	tbnz	w9, #0, 401a7c <do_mount+0x13c>
  40199c:	mov	w8, #0x3                   	// #3
  4019a0:	stur	w8, [x29, #-64]
  4019a4:	ldur	w8, [x29, #-60]
  4019a8:	stur	w8, [x29, #-68]
  4019ac:	str	wzr, [sp, #72]
  4019b0:	ldr	w0, [sp, #72]
  4019b4:	bl	4011b0 <log_get_max_level_realm@plt>
  4019b8:	ldur	w8, [x29, #-64]
  4019bc:	and	w8, w8, #0x7
  4019c0:	cmp	w0, w8
  4019c4:	b.lt	401a54 <do_mount+0x114>  // b.tstop
  4019c8:	ldr	w8, [sp, #72]
  4019cc:	ldur	w9, [x29, #-64]
  4019d0:	orr	w0, w9, w8, lsl #10
  4019d4:	ldur	w1, [x29, #-68]
  4019d8:	ldur	w8, [x29, #-60]
  4019dc:	mov	w9, #0xfffffffd            	// #-3
  4019e0:	cmp	w8, w9
  4019e4:	str	w0, [sp, #36]
  4019e8:	str	w1, [sp, #32]
  4019ec:	b.ne	401a00 <do_mount+0xc0>  // b.any
  4019f0:	adrp	x8, 402000 <acquire_runtime_dir_size+0x1e8>
  4019f4:	add	x8, x8, #0xc23
  4019f8:	str	x8, [sp, #24]
  4019fc:	b	401a24 <do_mount+0xe4>
  401a00:	ldur	w8, [x29, #-60]
  401a04:	mov	w9, #0xffffffd6            	// #-42
  401a08:	adrp	x10, 402000 <acquire_runtime_dir_size+0x1e8>
  401a0c:	add	x10, x10, #0xc66
  401a10:	adrp	x11, 402000 <acquire_runtime_dir_size+0x1e8>
  401a14:	add	x11, x11, #0xc35
  401a18:	cmp	w8, w9
  401a1c:	csel	x10, x11, x10, eq  // eq = none
  401a20:	str	x10, [sp, #24]
  401a24:	ldr	x8, [sp, #24]
  401a28:	ldur	x6, [x29, #-16]
  401a2c:	ldr	w0, [sp, #36]
  401a30:	ldr	w1, [sp, #32]
  401a34:	ldr	x2, [sp, #40]
  401a38:	mov	w3, #0x8a                  	// #138
  401a3c:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  401a40:	add	x4, x4, #0xc1a
  401a44:	mov	x5, x8
  401a48:	bl	4011c0 <log_internal_realm@plt>
  401a4c:	str	w0, [sp, #20]
  401a50:	b	401a68 <do_mount+0x128>
  401a54:	ldur	w0, [x29, #-68]
  401a58:	bl	4011d0 <abs@plt>
  401a5c:	mov	w8, wzr
  401a60:	subs	w8, w8, w0, uxtb
  401a64:	str	w8, [sp, #20]
  401a68:	ldr	w8, [sp, #20]
  401a6c:	str	w8, [sp, #68]
  401a70:	ldr	w8, [sp, #68]
  401a74:	stur	w8, [x29, #-4]
  401a78:	b	401bb4 <do_mount+0x274>
  401a7c:	sub	x0, x29, #0x30
  401a80:	bl	401e18 <acquire_runtime_dir_size>
  401a84:	stur	w0, [x29, #-60]
  401a88:	ldur	w8, [x29, #-60]
  401a8c:	cmp	w8, #0x0
  401a90:	cset	w8, ge  // ge = tcont
  401a94:	tbnz	w8, #0, 401aa4 <do_mount+0x164>
  401a98:	ldur	w8, [x29, #-60]
  401a9c:	stur	w8, [x29, #-4]
  401aa0:	b	401bb4 <do_mount+0x274>
  401aa4:	ldur	w3, [x29, #-52]
  401aa8:	sub	x0, x29, #0x26
  401aac:	mov	x1, #0x16                  	// #22
  401ab0:	adrp	x2, 402000 <acquire_runtime_dir_size+0x1e8>
  401ab4:	add	x2, x2, #0xc86
  401ab8:	bl	401240 <snprintf@plt>
  401abc:	mov	w1, w0
  401ac0:	sxtw	x8, w1
  401ac4:	cmp	x8, #0x16
  401ac8:	cset	w9, cc  // cc = lo, ul, last
  401acc:	mov	w10, #0x1                   	// #1
  401ad0:	eor	w9, w9, #0x1
  401ad4:	eor	w9, w9, w10
  401ad8:	eor	w9, w9, w10
  401adc:	and	w9, w9, #0x1
  401ae0:	mov	w1, w9
  401ae4:	sxtw	x8, w1
  401ae8:	cbz	x8, 401b10 <do_mount+0x1d0>
  401aec:	mov	w8, wzr
  401af0:	mov	w0, w8
  401af4:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  401af8:	add	x1, x1, #0xc93
  401afc:	ldr	x2, [sp, #40]
  401b00:	mov	w3, #0x90                  	// #144
  401b04:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  401b08:	add	x4, x4, #0xcbf
  401b0c:	bl	401250 <log_assert_failed_realm@plt>
  401b10:	mov	w8, #0x7                   	// #7
  401b14:	str	w8, [sp, #64]
  401b18:	str	wzr, [sp, #60]
  401b1c:	str	wzr, [sp, #56]
  401b20:	ldr	w0, [sp, #56]
  401b24:	bl	4011b0 <log_get_max_level_realm@plt>
  401b28:	ldr	w8, [sp, #64]
  401b2c:	and	w8, w8, #0x7
  401b30:	cmp	w0, w8
  401b34:	b.lt	401b80 <do_mount+0x240>  // b.tstop
  401b38:	ldr	w8, [sp, #56]
  401b3c:	ldr	w9, [sp, #64]
  401b40:	orr	w0, w9, w8, lsl #10
  401b44:	ldr	w1, [sp, #60]
  401b48:	ldur	w7, [x29, #-52]
  401b4c:	ldur	w8, [x29, #-56]
  401b50:	ldr	x2, [sp, #40]
  401b54:	mov	w3, #0x92                  	// #146
  401b58:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  401b5c:	add	x4, x4, #0xc1a
  401b60:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  401b64:	add	x5, x5, #0xcda
  401b68:	sub	x6, x29, #0x26
  401b6c:	mov	x10, sp
  401b70:	str	w8, [x10]
  401b74:	bl	4011c0 <log_internal_realm@plt>
  401b78:	str	w0, [sp, #16]
  401b7c:	b	401b94 <do_mount+0x254>
  401b80:	ldr	w0, [sp, #60]
  401b84:	bl	4011d0 <abs@plt>
  401b88:	mov	w8, wzr
  401b8c:	subs	w8, w8, w0, uxtb
  401b90:	str	w8, [sp, #16]
  401b94:	ldr	w8, [sp, #16]
  401b98:	str	w8, [sp, #52]
  401b9c:	ldur	w1, [x29, #-52]
  401ba0:	ldur	w2, [x29, #-56]
  401ba4:	ldur	x3, [x29, #-48]
  401ba8:	sub	x0, x29, #0x26
  401bac:	bl	402030 <user_mkdir_runtime_path>
  401bb0:	stur	w0, [x29, #-4]
  401bb4:	ldur	w0, [x29, #-4]
  401bb8:	ldp	x29, x30, [sp, #144]
  401bbc:	add	sp, sp, #0xa0
  401bc0:	ret

0000000000401bc4 <do_umount>:
  401bc4:	sub	sp, sp, #0x80
  401bc8:	stp	x29, x30, [sp, #112]
  401bcc:	add	x29, sp, #0x70
  401bd0:	adrp	x8, 402000 <acquire_runtime_dir_size+0x1e8>
  401bd4:	add	x8, x8, #0xb50
  401bd8:	add	x8, x8, #0x3
  401bdc:	sub	x1, x29, #0x2c
  401be0:	stur	x0, [x29, #-16]
  401be4:	ldur	x0, [x29, #-16]
  401be8:	str	x8, [sp, #24]
  401bec:	bl	401260 <parse_uid@plt>
  401bf0:	cmp	w0, #0x0
  401bf4:	cset	w9, ge  // ge = tcont
  401bf8:	tbnz	w9, #0, 401d14 <do_umount+0x150>
  401bfc:	sub	x0, x29, #0x10
  401c00:	sub	x1, x29, #0x2c
  401c04:	mov	x8, xzr
  401c08:	mov	x2, x8
  401c0c:	mov	x3, x8
  401c10:	mov	x4, x8
  401c14:	mov	w9, wzr
  401c18:	mov	w5, w9
  401c1c:	bl	401230 <get_user_creds@plt>
  401c20:	stur	w0, [x29, #-48]
  401c24:	ldur	w9, [x29, #-48]
  401c28:	cmp	w9, #0x0
  401c2c:	cset	w9, ge  // ge = tcont
  401c30:	tbnz	w9, #0, 401d14 <do_umount+0x150>
  401c34:	mov	w8, #0x3                   	// #3
  401c38:	stur	w8, [x29, #-52]
  401c3c:	ldur	w8, [x29, #-48]
  401c40:	str	w8, [sp, #56]
  401c44:	str	wzr, [sp, #52]
  401c48:	ldr	w0, [sp, #52]
  401c4c:	bl	4011b0 <log_get_max_level_realm@plt>
  401c50:	ldur	w8, [x29, #-52]
  401c54:	and	w8, w8, #0x7
  401c58:	cmp	w0, w8
  401c5c:	b.lt	401cec <do_umount+0x128>  // b.tstop
  401c60:	ldr	w8, [sp, #52]
  401c64:	ldur	w9, [x29, #-52]
  401c68:	orr	w0, w9, w8, lsl #10
  401c6c:	ldr	w1, [sp, #56]
  401c70:	ldur	w8, [x29, #-48]
  401c74:	mov	w9, #0xfffffffd            	// #-3
  401c78:	cmp	w8, w9
  401c7c:	str	w0, [sp, #20]
  401c80:	str	w1, [sp, #16]
  401c84:	b.ne	401c98 <do_umount+0xd4>  // b.any
  401c88:	adrp	x8, 402000 <acquire_runtime_dir_size+0x1e8>
  401c8c:	add	x8, x8, #0xc23
  401c90:	str	x8, [sp, #8]
  401c94:	b	401cbc <do_umount+0xf8>
  401c98:	ldur	w8, [x29, #-48]
  401c9c:	mov	w9, #0xffffffd6            	// #-42
  401ca0:	adrp	x10, 402000 <acquire_runtime_dir_size+0x1e8>
  401ca4:	add	x10, x10, #0xc66
  401ca8:	adrp	x11, 402000 <acquire_runtime_dir_size+0x1e8>
  401cac:	add	x11, x11, #0xc35
  401cb0:	cmp	w8, w9
  401cb4:	csel	x10, x11, x10, eq  // eq = none
  401cb8:	str	x10, [sp, #8]
  401cbc:	ldr	x8, [sp, #8]
  401cc0:	ldur	x6, [x29, #-16]
  401cc4:	ldr	w0, [sp, #20]
  401cc8:	ldr	w1, [sp, #16]
  401ccc:	ldr	x2, [sp, #24]
  401cd0:	mov	w3, #0xa4                  	// #164
  401cd4:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  401cd8:	add	x4, x4, #0xff9
  401cdc:	mov	x5, x8
  401ce0:	bl	4011c0 <log_internal_realm@plt>
  401ce4:	str	w0, [sp, #4]
  401ce8:	b	401d00 <do_umount+0x13c>
  401cec:	ldr	w0, [sp, #56]
  401cf0:	bl	4011d0 <abs@plt>
  401cf4:	mov	w8, wzr
  401cf8:	subs	w8, w8, w0, uxtb
  401cfc:	str	w8, [sp, #4]
  401d00:	ldr	w8, [sp, #4]
  401d04:	str	w8, [sp, #48]
  401d08:	ldr	w8, [sp, #48]
  401d0c:	stur	w8, [x29, #-4]
  401d10:	b	401e08 <do_umount+0x244>
  401d14:	ldur	w3, [x29, #-44]
  401d18:	sub	x0, x29, #0x26
  401d1c:	mov	x1, #0x16                  	// #22
  401d20:	adrp	x2, 402000 <acquire_runtime_dir_size+0x1e8>
  401d24:	add	x2, x2, #0xc86
  401d28:	bl	401240 <snprintf@plt>
  401d2c:	mov	w1, w0
  401d30:	sxtw	x8, w1
  401d34:	cmp	x8, #0x16
  401d38:	cset	w9, cc  // cc = lo, ul, last
  401d3c:	mov	w10, #0x1                   	// #1
  401d40:	eor	w9, w9, #0x1
  401d44:	eor	w9, w9, w10
  401d48:	eor	w9, w9, w10
  401d4c:	and	w9, w9, #0x1
  401d50:	mov	w1, w9
  401d54:	sxtw	x8, w1
  401d58:	cbz	x8, 401d80 <do_umount+0x1bc>
  401d5c:	mov	w8, wzr
  401d60:	mov	w0, w8
  401d64:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  401d68:	add	x1, x1, #0xc93
  401d6c:	ldr	x2, [sp, #24]
  401d70:	mov	w3, #0xa7                  	// #167
  401d74:	adrp	x4, 403000 <_fini+0x4d4>
  401d78:	add	x4, x4, #0x3
  401d7c:	bl	401250 <log_assert_failed_realm@plt>
  401d80:	mov	w8, #0x7                   	// #7
  401d84:	str	w8, [sp, #44]
  401d88:	str	wzr, [sp, #40]
  401d8c:	str	wzr, [sp, #36]
  401d90:	ldr	w0, [sp, #36]
  401d94:	bl	4011b0 <log_get_max_level_realm@plt>
  401d98:	ldr	w8, [sp, #44]
  401d9c:	and	w8, w8, #0x7
  401da0:	cmp	w0, w8
  401da4:	b.lt	401de0 <do_umount+0x21c>  // b.tstop
  401da8:	ldr	w8, [sp, #36]
  401dac:	ldr	w9, [sp, #44]
  401db0:	orr	w0, w9, w8, lsl #10
  401db4:	ldr	w1, [sp, #40]
  401db8:	ldr	x2, [sp, #24]
  401dbc:	mov	w3, #0xa9                  	// #169
  401dc0:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  401dc4:	add	x4, x4, #0xff9
  401dc8:	adrp	x5, 403000 <_fini+0x4d4>
  401dcc:	add	x5, x5, #0x1f
  401dd0:	sub	x6, x29, #0x26
  401dd4:	bl	4011c0 <log_internal_realm@plt>
  401dd8:	str	w0, [sp]
  401ddc:	b	401df4 <do_umount+0x230>
  401de0:	ldr	w0, [sp, #40]
  401de4:	bl	4011d0 <abs@plt>
  401de8:	mov	w8, wzr
  401dec:	subs	w8, w8, w0, uxtb
  401df0:	str	w8, [sp]
  401df4:	ldr	w8, [sp]
  401df8:	str	w8, [sp, #32]
  401dfc:	sub	x0, x29, #0x26
  401e00:	bl	40274c <user_remove_runtime_path>
  401e04:	stur	w0, [x29, #-4]
  401e08:	ldur	w0, [x29, #-4]
  401e0c:	ldp	x29, x30, [sp, #112]
  401e10:	add	sp, sp, #0x80
  401e14:	ret

0000000000401e18 <acquire_runtime_dir_size>:
  401e18:	sub	sp, sp, #0x90
  401e1c:	stp	x29, x30, [sp, #128]
  401e20:	add	x29, sp, #0x80
  401e24:	mov	x8, xzr
  401e28:	adrp	x9, 402000 <acquire_runtime_dir_size+0x1e8>
  401e2c:	add	x9, x9, #0xb50
  401e30:	add	x9, x9, #0x3
  401e34:	sub	x10, x29, #0x30
  401e38:	stur	x0, [x29, #-16]
  401e3c:	stur	xzr, [x29, #-40]
  401e40:	stur	xzr, [x29, #-32]
  401e44:	stur	xzr, [x29, #-24]
  401e48:	stur	x8, [x29, #-48]
  401e4c:	mov	x0, x10
  401e50:	str	x9, [sp, #32]
  401e54:	bl	401270 <sd_bus_default_system@plt>
  401e58:	stur	w0, [x29, #-52]
  401e5c:	ldur	w11, [x29, #-52]
  401e60:	cmp	w11, #0x0
  401e64:	cset	w11, ge  // ge = tcont
  401e68:	tbnz	w11, #0, 401efc <acquire_runtime_dir_size+0xe4>
  401e6c:	mov	w8, #0x3                   	// #3
  401e70:	stur	w8, [x29, #-56]
  401e74:	ldur	w8, [x29, #-52]
  401e78:	stur	w8, [x29, #-60]
  401e7c:	str	wzr, [sp, #64]
  401e80:	ldr	w0, [sp, #64]
  401e84:	bl	4011b0 <log_get_max_level_realm@plt>
  401e88:	ldur	w8, [x29, #-56]
  401e8c:	and	w8, w8, #0x7
  401e90:	cmp	w0, w8
  401e94:	b.lt	401ecc <acquire_runtime_dir_size+0xb4>  // b.tstop
  401e98:	ldr	w8, [sp, #64]
  401e9c:	ldur	w9, [x29, #-56]
  401ea0:	orr	w0, w9, w8, lsl #10
  401ea4:	ldur	w1, [x29, #-60]
  401ea8:	ldr	x2, [sp, #32]
  401eac:	mov	w3, #0x1f                  	// #31
  401eb0:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  401eb4:	add	x4, x4, #0xcf7
  401eb8:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  401ebc:	add	x5, x5, #0xd10
  401ec0:	bl	4011c0 <log_internal_realm@plt>
  401ec4:	str	w0, [sp, #28]
  401ec8:	b	401ee0 <acquire_runtime_dir_size+0xc8>
  401ecc:	ldur	w0, [x29, #-60]
  401ed0:	bl	4011d0 <abs@plt>
  401ed4:	mov	w8, wzr
  401ed8:	subs	w8, w8, w0, uxtb
  401edc:	str	w8, [sp, #28]
  401ee0:	ldr	w8, [sp, #28]
  401ee4:	str	w8, [sp, #60]
  401ee8:	ldr	w8, [sp, #60]
  401eec:	stur	w8, [x29, #-4]
  401ef0:	mov	w8, #0x1                   	// #1
  401ef4:	str	w8, [sp, #56]
  401ef8:	b	402010 <acquire_runtime_dir_size+0x1f8>
  401efc:	ldur	x0, [x29, #-48]
  401f00:	ldur	x7, [x29, #-16]
  401f04:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  401f08:	add	x1, x1, #0xd34
  401f0c:	adrp	x2, 402000 <acquire_runtime_dir_size+0x1e8>
  401f10:	add	x2, x2, #0xd4b
  401f14:	adrp	x3, 402000 <acquire_runtime_dir_size+0x1e8>
  401f18:	add	x3, x3, #0xd63
  401f1c:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  401f20:	add	x4, x4, #0xd82
  401f24:	sub	x5, x29, #0x28
  401f28:	mov	w6, #0x74                  	// #116
  401f2c:	bl	401280 <sd_bus_get_property_trivial@plt>
  401f30:	stur	w0, [x29, #-52]
  401f34:	ldur	w8, [x29, #-52]
  401f38:	cmp	w8, #0x0
  401f3c:	cset	w8, ge  // ge = tcont
  401f40:	tbnz	w8, #0, 402004 <acquire_runtime_dir_size+0x1ec>
  401f44:	mov	w8, #0x3                   	// #3
  401f48:	str	w8, [sp, #52]
  401f4c:	ldur	w8, [x29, #-52]
  401f50:	str	w8, [sp, #48]
  401f54:	str	wzr, [sp, #44]
  401f58:	ldr	w0, [sp, #44]
  401f5c:	bl	4011b0 <log_get_max_level_realm@plt>
  401f60:	ldr	w8, [sp, #52]
  401f64:	and	w8, w8, #0x7
  401f68:	cmp	w0, w8
  401f6c:	b.lt	401fd4 <acquire_runtime_dir_size+0x1bc>  // b.tstop
  401f70:	ldr	w8, [sp, #44]
  401f74:	ldr	w9, [sp, #52]
  401f78:	orr	w0, w9, w8, lsl #10
  401f7c:	ldr	w1, [sp, #48]
  401f80:	ldur	w8, [x29, #-52]
  401f84:	sub	x10, x29, #0x28
  401f88:	str	w0, [sp, #24]
  401f8c:	mov	x0, x10
  401f90:	str	w1, [sp, #20]
  401f94:	mov	w1, w8
  401f98:	bl	401290 <bus_error_message@plt>
  401f9c:	ldr	w8, [sp, #24]
  401fa0:	str	x0, [sp, #8]
  401fa4:	mov	w0, w8
  401fa8:	ldr	w1, [sp, #20]
  401fac:	ldr	x2, [sp, #32]
  401fb0:	mov	w3, #0x23                  	// #35
  401fb4:	adrp	x4, 402000 <acquire_runtime_dir_size+0x1e8>
  401fb8:	add	x4, x4, #0xcf7
  401fbc:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  401fc0:	add	x5, x5, #0xd97
  401fc4:	ldr	x6, [sp, #8]
  401fc8:	bl	4011c0 <log_internal_realm@plt>
  401fcc:	str	w0, [sp, #4]
  401fd0:	b	401fe8 <acquire_runtime_dir_size+0x1d0>
  401fd4:	ldr	w0, [sp, #48]
  401fd8:	bl	4011d0 <abs@plt>
  401fdc:	mov	w8, wzr
  401fe0:	subs	w8, w8, w0, uxtb
  401fe4:	str	w8, [sp, #4]
  401fe8:	ldr	w8, [sp, #4]
  401fec:	str	w8, [sp, #40]
  401ff0:	ldr	w8, [sp, #40]
  401ff4:	stur	w8, [x29, #-4]
  401ff8:	mov	w8, #0x1                   	// #1
  401ffc:	str	w8, [sp, #56]
  402000:	b	402010 <acquire_runtime_dir_size+0x1f8>
  402004:	stur	wzr, [x29, #-4]
  402008:	mov	w8, #0x1                   	// #1
  40200c:	str	w8, [sp, #56]
  402010:	sub	x0, x29, #0x30
  402014:	bl	4026f0 <sd_bus_flush_close_unrefp>
  402018:	sub	x0, x29, #0x28
  40201c:	bl	4012a0 <sd_bus_error_free@plt>
  402020:	ldur	w0, [x29, #-4]
  402024:	ldp	x29, x30, [sp, #128]
  402028:	add	sp, sp, #0x90
  40202c:	ret

0000000000402030 <user_mkdir_runtime_path>:
  402030:	sub	sp, sp, #0x150
  402034:	stp	x29, x30, [sp, #304]
  402038:	str	x28, [sp, #320]
  40203c:	add	x29, sp, #0x130
  402040:	sub	x8, x29, #0x20
  402044:	adrp	x9, 402000 <acquire_runtime_dir_size+0x1e8>
  402048:	add	x9, x9, #0xb50
  40204c:	add	x9, x9, #0x3
  402050:	adrp	x10, 402000 <acquire_runtime_dir_size+0x1e8>
  402054:	add	x10, x10, #0xe60
  402058:	adrp	x11, 402000 <acquire_runtime_dir_size+0x1e8>
  40205c:	add	x11, x11, #0xdd1
  402060:	str	x0, [x8, #16]
  402064:	stur	w1, [x29, #-20]
  402068:	stur	w2, [x29, #-24]
  40206c:	str	x3, [x8]
  402070:	str	x8, [sp, #72]
  402074:	str	x9, [sp, #64]
  402078:	str	x10, [sp, #56]
  40207c:	str	x11, [sp, #48]
  402080:	ldr	x8, [sp, #72]
  402084:	ldr	x9, [x8, #16]
  402088:	cmp	x9, #0x0
  40208c:	cset	w10, ne  // ne = any
  402090:	mov	w11, #0x1                   	// #1
  402094:	eor	w10, w10, #0x1
  402098:	eor	w10, w10, w11
  40209c:	eor	w10, w10, w11
  4020a0:	and	w10, w10, #0x1
  4020a4:	mov	w0, w10
  4020a8:	sxtw	x9, w0
  4020ac:	cbz	x9, 4020d0 <user_mkdir_runtime_path+0xa0>
  4020b0:	mov	w8, wzr
  4020b4:	mov	w0, w8
  4020b8:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  4020bc:	add	x1, x1, #0xdc4
  4020c0:	ldr	x2, [sp, #64]
  4020c4:	mov	w3, #0x30                  	// #48
  4020c8:	ldr	x4, [sp, #48]
  4020cc:	bl	401250 <log_assert_failed_realm@plt>
  4020d0:	ldr	x8, [sp, #72]
  4020d4:	ldr	x0, [x8, #16]
  4020d8:	bl	4012b0 <path_is_absolute@plt>
  4020dc:	mov	w9, #0x1                   	// #1
  4020e0:	eor	w10, w0, #0x1
  4020e4:	eor	w10, w10, w9
  4020e8:	eor	w9, w10, w9
  4020ec:	and	w9, w9, #0x1
  4020f0:	mov	w1, w9
  4020f4:	sxtw	x8, w1
  4020f8:	cbz	x8, 40211c <user_mkdir_runtime_path+0xec>
  4020fc:	mov	w8, wzr
  402100:	mov	w0, w8
  402104:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  402108:	add	x1, x1, #0xe13
  40210c:	ldr	x2, [sp, #64]
  402110:	mov	w3, #0x31                  	// #49
  402114:	ldr	x4, [sp, #48]
  402118:	bl	401250 <log_assert_failed_realm@plt>
  40211c:	ldur	w0, [x29, #-20]
  402120:	bl	4012c0 <uid_is_valid@plt>
  402124:	mov	w8, #0x1                   	// #1
  402128:	eor	w9, w0, #0x1
  40212c:	eor	w9, w9, w8
  402130:	eor	w8, w9, w8
  402134:	and	w8, w8, #0x1
  402138:	mov	w1, w8
  40213c:	sxtw	x10, w1
  402140:	cbz	x10, 402164 <user_mkdir_runtime_path+0x134>
  402144:	mov	w8, wzr
  402148:	mov	w0, w8
  40214c:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  402150:	add	x1, x1, #0xe32
  402154:	ldr	x2, [sp, #64]
  402158:	mov	w3, #0x32                  	// #50
  40215c:	ldr	x4, [sp, #48]
  402160:	bl	401250 <log_assert_failed_realm@plt>
  402164:	ldur	w0, [x29, #-24]
  402168:	bl	402724 <gid_is_valid>
  40216c:	mov	w8, #0x1                   	// #1
  402170:	eor	w9, w0, #0x1
  402174:	eor	w9, w9, w8
  402178:	eor	w8, w9, w8
  40217c:	and	w8, w8, #0x1
  402180:	mov	w1, w8
  402184:	sxtw	x10, w1
  402188:	cbz	x10, 4021ac <user_mkdir_runtime_path+0x17c>
  40218c:	mov	w8, wzr
  402190:	mov	w0, w8
  402194:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  402198:	add	x1, x1, #0xe44
  40219c:	ldr	x2, [sp, #64]
  4021a0:	mov	w3, #0x33                  	// #51
  4021a4:	ldr	x4, [sp, #48]
  4021a8:	bl	401250 <log_assert_failed_realm@plt>
  4021ac:	adrp	x0, 402000 <acquire_runtime_dir_size+0x1e8>
  4021b0:	add	x0, x0, #0xe56
  4021b4:	mov	w1, #0x1ed                 	// #493
  4021b8:	mov	w8, wzr
  4021bc:	mov	w2, w8
  4021c0:	mov	w3, w8
  4021c4:	mov	w4, #0x2                   	// #2
  4021c8:	bl	4012d0 <mkdir_safe_label@plt>
  4021cc:	stur	w0, [x29, #-36]
  4021d0:	ldur	w8, [x29, #-36]
  4021d4:	cmp	w8, #0x0
  4021d8:	cset	w8, ge  // ge = tcont
  4021dc:	tbnz	w8, #0, 402264 <user_mkdir_runtime_path+0x234>
  4021e0:	mov	w8, #0x3                   	// #3
  4021e4:	stur	w8, [x29, #-40]
  4021e8:	ldur	w8, [x29, #-36]
  4021ec:	stur	w8, [x29, #-44]
  4021f0:	stur	wzr, [x29, #-48]
  4021f4:	ldur	w0, [x29, #-48]
  4021f8:	bl	4011b0 <log_get_max_level_realm@plt>
  4021fc:	ldur	w8, [x29, #-40]
  402200:	and	w8, w8, #0x7
  402204:	cmp	w0, w8
  402208:	b.lt	40223c <user_mkdir_runtime_path+0x20c>  // b.tstop
  40220c:	ldur	w8, [x29, #-48]
  402210:	ldur	w9, [x29, #-40]
  402214:	orr	w0, w9, w8, lsl #10
  402218:	ldur	w1, [x29, #-44]
  40221c:	ldr	x2, [sp, #64]
  402220:	mov	w3, #0x37                  	// #55
  402224:	ldr	x4, [sp, #56]
  402228:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  40222c:	add	x5, x5, #0xe78
  402230:	bl	4011c0 <log_internal_realm@plt>
  402234:	str	w0, [sp, #44]
  402238:	b	402250 <user_mkdir_runtime_path+0x220>
  40223c:	ldur	w0, [x29, #-44]
  402240:	bl	4011d0 <abs@plt>
  402244:	mov	w8, wzr
  402248:	subs	w8, w8, w0, uxtb
  40224c:	str	w8, [sp, #44]
  402250:	ldr	w8, [sp, #44]
  402254:	stur	w8, [x29, #-52]
  402258:	ldur	w8, [x29, #-52]
  40225c:	stur	w8, [x29, #-4]
  402260:	b	4026dc <user_mkdir_runtime_path+0x6ac>
  402264:	ldr	x8, [sp, #72]
  402268:	ldr	x0, [x8, #16]
  40226c:	mov	x9, xzr
  402270:	mov	x1, x9
  402274:	mov	w10, wzr
  402278:	mov	w2, w10
  40227c:	bl	4012e0 <path_is_mount_point@plt>
  402280:	cmp	w0, #0x0
  402284:	cset	w10, lt  // lt = tstop
  402288:	tbnz	w10, #0, 40230c <user_mkdir_runtime_path+0x2dc>
  40228c:	mov	w8, #0x7                   	// #7
  402290:	stur	w8, [x29, #-56]
  402294:	stur	wzr, [x29, #-60]
  402298:	stur	wzr, [x29, #-64]
  40229c:	ldur	w0, [x29, #-64]
  4022a0:	bl	4011b0 <log_get_max_level_realm@plt>
  4022a4:	ldur	w8, [x29, #-56]
  4022a8:	and	w8, w8, #0x7
  4022ac:	cmp	w0, w8
  4022b0:	b.lt	4022ec <user_mkdir_runtime_path+0x2bc>  // b.tstop
  4022b4:	ldur	w8, [x29, #-64]
  4022b8:	ldur	w9, [x29, #-56]
  4022bc:	orr	w0, w9, w8, lsl #10
  4022c0:	ldur	w1, [x29, #-60]
  4022c4:	ldr	x10, [sp, #72]
  4022c8:	ldr	x6, [x10, #16]
  4022cc:	ldr	x2, [sp, #64]
  4022d0:	mov	w3, #0x3a                  	// #58
  4022d4:	ldr	x4, [sp, #56]
  4022d8:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  4022dc:	add	x5, x5, #0xe97
  4022e0:	bl	4011c0 <log_internal_realm@plt>
  4022e4:	str	w0, [sp, #40]
  4022e8:	b	402300 <user_mkdir_runtime_path+0x2d0>
  4022ec:	ldur	w0, [x29, #-60]
  4022f0:	bl	4011d0 <abs@plt>
  4022f4:	mov	w8, wzr
  4022f8:	subs	w8, w8, w0, uxtb
  4022fc:	str	w8, [sp, #40]
  402300:	ldr	w8, [sp, #40]
  402304:	stur	w8, [x29, #-68]
  402308:	b	4026c0 <user_mkdir_runtime_path+0x690>
  40230c:	ldur	w3, [x29, #-20]
  402310:	ldur	w4, [x29, #-24]
  402314:	ldr	x8, [sp, #72]
  402318:	ldr	x5, [x8]
  40231c:	str	w3, [sp, #36]
  402320:	str	w4, [sp, #32]
  402324:	str	x5, [sp, #24]
  402328:	bl	4012f0 <mac_smack_use@plt>
  40232c:	adrp	x8, 402000 <acquire_runtime_dir_size+0x1e8>
  402330:	add	x8, x8, #0xee5
  402334:	adrp	x9, 402000 <acquire_runtime_dir_size+0x1e8>
  402338:	add	x9, x9, #0xed6
  40233c:	tst	w0, #0x1
  402340:	csel	x6, x9, x8, ne  // ne = any
  402344:	add	x0, sp, #0x96
  402348:	mov	x1, #0x56                  	// #86
  40234c:	adrp	x2, 402000 <acquire_runtime_dir_size+0x1e8>
  402350:	add	x2, x2, #0xeb3
  402354:	ldr	w3, [sp, #36]
  402358:	ldr	w4, [sp, #32]
  40235c:	ldr	x5, [sp, #24]
  402360:	bl	401240 <snprintf@plt>
  402364:	mov	w1, w0
  402368:	sxtw	x8, w1
  40236c:	cmp	x8, #0x56
  402370:	cset	w10, cc  // cc = lo, ul, last
  402374:	mov	w11, #0x1                   	// #1
  402378:	eor	w10, w10, #0x1
  40237c:	eor	w10, w10, w11
  402380:	eor	w10, w10, w11
  402384:	and	w10, w10, #0x1
  402388:	mov	w1, w10
  40238c:	sxtw	x8, w1
  402390:	cbz	x8, 4023b4 <user_mkdir_runtime_path+0x384>
  402394:	mov	w8, wzr
  402398:	mov	w0, w8
  40239c:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  4023a0:	add	x1, x1, #0xee6
  4023a4:	ldr	x2, [sp, #64]
  4023a8:	mov	w3, #0x44                  	// #68
  4023ac:	ldr	x4, [sp, #48]
  4023b0:	bl	401250 <log_assert_failed_realm@plt>
  4023b4:	ldr	x8, [sp, #72]
  4023b8:	ldr	x0, [x8, #16]
  4023bc:	mov	w1, #0x1c0                 	// #448
  4023c0:	bl	401300 <mkdir_label@plt>
  4023c4:	ldr	x8, [sp, #72]
  4023c8:	ldr	x1, [x8, #16]
  4023cc:	adrp	x9, 402000 <acquire_runtime_dir_size+0x1e8>
  4023d0:	add	x9, x9, #0xf0d
  4023d4:	mov	x0, x9
  4023d8:	mov	x2, x9
  4023dc:	mov	x3, #0x6                   	// #6
  4023e0:	add	x4, sp, #0x96
  4023e4:	bl	401310 <mount@plt>
  4023e8:	stur	w0, [x29, #-36]
  4023ec:	ldur	w10, [x29, #-36]
  4023f0:	cmp	w10, #0x0
  4023f4:	cset	w10, ge  // ge = tcont
  4023f8:	tbnz	w10, #0, 402618 <user_mkdir_runtime_path+0x5e8>
  4023fc:	mov	w8, #0x0                   	// #0
  402400:	strb	w8, [sp, #149]
  402404:	bl	401320 <__errno_location@plt>
  402408:	ldr	w8, [x0]
  40240c:	cmp	w8, #0x1
  402410:	str	w8, [sp, #20]
  402414:	b.eq	402434 <user_mkdir_runtime_path+0x404>  // b.none
  402418:	b	40241c <user_mkdir_runtime_path+0x3ec>
  40241c:	ldr	w8, [sp, #20]
  402420:	cmp	w8, #0xd
  402424:	cset	w9, eq  // eq = none
  402428:	eor	w9, w9, #0x1
  40242c:	tbnz	w9, #0, 402440 <user_mkdir_runtime_path+0x410>
  402430:	b	402434 <user_mkdir_runtime_path+0x404>
  402434:	mov	w8, #0x1                   	// #1
  402438:	strb	w8, [sp, #149]
  40243c:	b	402440 <user_mkdir_runtime_path+0x410>
  402440:	ldrb	w8, [sp, #149]
  402444:	and	w8, w8, #0x1
  402448:	strb	w8, [sp, #148]
  40244c:	ldrb	w8, [sp, #148]
  402450:	tbnz	w8, #0, 4024e4 <user_mkdir_runtime_path+0x4b4>
  402454:	mov	w8, #0x3                   	// #3
  402458:	str	w8, [sp, #144]
  40245c:	bl	401320 <__errno_location@plt>
  402460:	ldr	w8, [x0]
  402464:	str	w8, [sp, #140]
  402468:	str	wzr, [sp, #136]
  40246c:	ldr	w0, [sp, #136]
  402470:	bl	4011b0 <log_get_max_level_realm@plt>
  402474:	ldr	w8, [sp, #144]
  402478:	and	w8, w8, #0x7
  40247c:	cmp	w0, w8
  402480:	b.lt	4024bc <user_mkdir_runtime_path+0x48c>  // b.tstop
  402484:	ldr	w8, [sp, #136]
  402488:	ldr	w9, [sp, #144]
  40248c:	orr	w0, w9, w8, lsl #10
  402490:	ldr	w1, [sp, #140]
  402494:	ldr	x10, [sp, #72]
  402498:	ldr	x6, [x10, #16]
  40249c:	ldr	x2, [sp, #64]
  4024a0:	mov	w3, #0x4b                  	// #75
  4024a4:	ldr	x4, [sp, #56]
  4024a8:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  4024ac:	add	x5, x5, #0xf13
  4024b0:	bl	4011c0 <log_internal_realm@plt>
  4024b4:	str	w0, [sp, #16]
  4024b8:	b	4024d0 <user_mkdir_runtime_path+0x4a0>
  4024bc:	ldr	w0, [sp, #140]
  4024c0:	bl	4011d0 <abs@plt>
  4024c4:	mov	w8, wzr
  4024c8:	subs	w8, w8, w0, uxtb
  4024cc:	str	w8, [sp, #16]
  4024d0:	ldr	w8, [sp, #16]
  4024d4:	str	w8, [sp, #132]
  4024d8:	ldr	w8, [sp, #132]
  4024dc:	stur	w8, [x29, #-36]
  4024e0:	b	4026c8 <user_mkdir_runtime_path+0x698>
  4024e4:	mov	w8, #0x7                   	// #7
  4024e8:	str	w8, [sp, #128]
  4024ec:	bl	401320 <__errno_location@plt>
  4024f0:	ldr	w8, [x0]
  4024f4:	str	w8, [sp, #124]
  4024f8:	str	wzr, [sp, #120]
  4024fc:	ldr	w0, [sp, #120]
  402500:	bl	4011b0 <log_get_max_level_realm@plt>
  402504:	ldr	w8, [sp, #128]
  402508:	and	w8, w8, #0x7
  40250c:	cmp	w0, w8
  402510:	b.lt	40254c <user_mkdir_runtime_path+0x51c>  // b.tstop
  402514:	ldr	w8, [sp, #120]
  402518:	ldr	w9, [sp, #128]
  40251c:	orr	w0, w9, w8, lsl #10
  402520:	ldr	w1, [sp, #124]
  402524:	ldr	x10, [sp, #72]
  402528:	ldr	x6, [x10, #16]
  40252c:	ldr	x2, [sp, #64]
  402530:	mov	w3, #0x50                  	// #80
  402534:	ldr	x4, [sp, #56]
  402538:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  40253c:	add	x5, x5, #0xf43
  402540:	bl	4011c0 <log_internal_realm@plt>
  402544:	str	w0, [sp, #12]
  402548:	b	402560 <user_mkdir_runtime_path+0x530>
  40254c:	ldr	w0, [sp, #124]
  402550:	bl	4011d0 <abs@plt>
  402554:	mov	w8, wzr
  402558:	subs	w8, w8, w0, uxtb
  40255c:	str	w8, [sp, #12]
  402560:	ldr	w8, [sp, #12]
  402564:	str	w8, [sp, #116]
  402568:	ldr	x9, [sp, #72]
  40256c:	ldr	x0, [x9, #16]
  402570:	ldur	w2, [x29, #-20]
  402574:	ldur	w3, [x29, #-24]
  402578:	mov	w1, #0x1c0                 	// #448
  40257c:	bl	401330 <chmod_and_chown@plt>
  402580:	stur	w0, [x29, #-36]
  402584:	ldur	w8, [x29, #-36]
  402588:	cmp	w8, #0x0
  40258c:	cset	w8, ge  // ge = tcont
  402590:	tbnz	w8, #0, 402618 <user_mkdir_runtime_path+0x5e8>
  402594:	mov	w8, #0x3                   	// #3
  402598:	str	w8, [sp, #112]
  40259c:	ldur	w8, [x29, #-36]
  4025a0:	str	w8, [sp, #108]
  4025a4:	str	wzr, [sp, #104]
  4025a8:	ldr	w0, [sp, #104]
  4025ac:	bl	4011b0 <log_get_max_level_realm@plt>
  4025b0:	ldr	w8, [sp, #112]
  4025b4:	and	w8, w8, #0x7
  4025b8:	cmp	w0, w8
  4025bc:	b.lt	4025f8 <user_mkdir_runtime_path+0x5c8>  // b.tstop
  4025c0:	ldr	w8, [sp, #104]
  4025c4:	ldr	w9, [sp, #112]
  4025c8:	orr	w0, w9, w8, lsl #10
  4025cc:	ldr	w1, [sp, #108]
  4025d0:	ldr	x10, [sp, #72]
  4025d4:	ldr	x6, [x10, #16]
  4025d8:	ldr	x2, [sp, #64]
  4025dc:	mov	w3, #0x54                  	// #84
  4025e0:	ldr	x4, [sp, #56]
  4025e4:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  4025e8:	add	x5, x5, #0xf9f
  4025ec:	bl	4011c0 <log_internal_realm@plt>
  4025f0:	str	w0, [sp, #8]
  4025f4:	b	40260c <user_mkdir_runtime_path+0x5dc>
  4025f8:	ldr	w0, [sp, #108]
  4025fc:	bl	4011d0 <abs@plt>
  402600:	mov	w8, wzr
  402604:	subs	w8, w8, w0, uxtb
  402608:	str	w8, [sp, #8]
  40260c:	ldr	w8, [sp, #8]
  402610:	str	w8, [sp, #100]
  402614:	b	4026c8 <user_mkdir_runtime_path+0x698>
  402618:	ldr	x8, [sp, #72]
  40261c:	ldr	x0, [x8, #16]
  402620:	mov	w9, wzr
  402624:	mov	w1, w9
  402628:	bl	401340 <label_fix@plt>
  40262c:	stur	w0, [x29, #-36]
  402630:	ldur	w9, [x29, #-36]
  402634:	cmp	w9, #0x0
  402638:	cset	w9, ge  // ge = tcont
  40263c:	tbnz	w9, #0, 4026c0 <user_mkdir_runtime_path+0x690>
  402640:	mov	w8, #0x4                   	// #4
  402644:	str	w8, [sp, #96]
  402648:	ldur	w8, [x29, #-36]
  40264c:	str	w8, [sp, #92]
  402650:	str	wzr, [sp, #88]
  402654:	ldr	w0, [sp, #88]
  402658:	bl	4011b0 <log_get_max_level_realm@plt>
  40265c:	ldr	w8, [sp, #96]
  402660:	and	w8, w8, #0x7
  402664:	cmp	w0, w8
  402668:	b.lt	4026a4 <user_mkdir_runtime_path+0x674>  // b.tstop
  40266c:	ldr	w8, [sp, #88]
  402670:	ldr	w9, [sp, #96]
  402674:	orr	w0, w9, w8, lsl #10
  402678:	ldr	w1, [sp, #92]
  40267c:	ldr	x10, [sp, #72]
  402680:	ldr	x6, [x10, #16]
  402684:	ldr	x2, [sp, #64]
  402688:	mov	w3, #0x5b                  	// #91
  40268c:	ldr	x4, [sp, #56]
  402690:	adrp	x5, 402000 <acquire_runtime_dir_size+0x1e8>
  402694:	add	x5, x5, #0xfcf
  402698:	bl	4011c0 <log_internal_realm@plt>
  40269c:	str	w0, [sp, #4]
  4026a0:	b	4026b8 <user_mkdir_runtime_path+0x688>
  4026a4:	ldr	w0, [sp, #92]
  4026a8:	bl	4011d0 <abs@plt>
  4026ac:	mov	w8, wzr
  4026b0:	subs	w8, w8, w0, uxtb
  4026b4:	str	w8, [sp, #4]
  4026b8:	ldr	w8, [sp, #4]
  4026bc:	str	w8, [sp, #84]
  4026c0:	stur	wzr, [x29, #-4]
  4026c4:	b	4026dc <user_mkdir_runtime_path+0x6ac>
  4026c8:	ldr	x8, [sp, #72]
  4026cc:	ldr	x0, [x8, #16]
  4026d0:	bl	401350 <rmdir@plt>
  4026d4:	ldur	w9, [x29, #-36]
  4026d8:	stur	w9, [x29, #-4]
  4026dc:	ldur	w0, [x29, #-4]
  4026e0:	ldr	x28, [sp, #320]
  4026e4:	ldp	x29, x30, [sp, #304]
  4026e8:	add	sp, sp, #0x150
  4026ec:	ret

00000000004026f0 <sd_bus_flush_close_unrefp>:
  4026f0:	sub	sp, sp, #0x20
  4026f4:	stp	x29, x30, [sp, #16]
  4026f8:	add	x29, sp, #0x10
  4026fc:	str	x0, [sp, #8]
  402700:	ldr	x8, [sp, #8]
  402704:	ldr	x8, [x8]
  402708:	cbz	x8, 402718 <sd_bus_flush_close_unrefp+0x28>
  40270c:	ldr	x8, [sp, #8]
  402710:	ldr	x0, [x8]
  402714:	bl	401360 <sd_bus_flush_close_unref@plt>
  402718:	ldp	x29, x30, [sp, #16]
  40271c:	add	sp, sp, #0x20
  402720:	ret

0000000000402724 <gid_is_valid>:
  402724:	sub	sp, sp, #0x20
  402728:	stp	x29, x30, [sp, #16]
  40272c:	add	x29, sp, #0x10
  402730:	stur	w0, [x29, #-4]
  402734:	ldur	w0, [x29, #-4]
  402738:	bl	4012c0 <uid_is_valid@plt>
  40273c:	and	w0, w0, #0x1
  402740:	ldp	x29, x30, [sp, #16]
  402744:	add	sp, sp, #0x20
  402748:	ret

000000000040274c <user_remove_runtime_path>:
  40274c:	sub	sp, sp, #0x80
  402750:	stp	x29, x30, [sp, #112]
  402754:	add	x29, sp, #0x70
  402758:	adrp	x8, 402000 <acquire_runtime_dir_size+0x1e8>
  40275c:	add	x8, x8, #0xb50
  402760:	add	x8, x8, #0x3
  402764:	adrp	x9, 403000 <_fini+0x4d4>
  402768:	add	x9, x9, #0x59
  40276c:	stur	x0, [x29, #-16]
  402770:	str	x8, [sp, #32]
  402774:	str	x9, [sp, #24]
  402778:	ldur	x8, [x29, #-16]
  40277c:	cmp	x8, #0x0
  402780:	cset	w9, ne  // ne = any
  402784:	mov	w10, #0x1                   	// #1
  402788:	eor	w9, w9, #0x1
  40278c:	eor	w9, w9, w10
  402790:	eor	w9, w9, w10
  402794:	and	w9, w9, #0x1
  402798:	mov	w0, w9
  40279c:	sxtw	x8, w0
  4027a0:	cbz	x8, 4027c8 <user_remove_runtime_path+0x7c>
  4027a4:	mov	w8, wzr
  4027a8:	mov	w0, w8
  4027ac:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  4027b0:	add	x1, x1, #0xdc4
  4027b4:	ldr	x2, [sp, #32]
  4027b8:	mov	w3, #0x69                  	// #105
  4027bc:	adrp	x4, 403000 <_fini+0x4d4>
  4027c0:	add	x4, x4, #0x2e
  4027c4:	bl	401250 <log_assert_failed_realm@plt>
  4027c8:	ldur	x0, [x29, #-16]
  4027cc:	bl	4012b0 <path_is_absolute@plt>
  4027d0:	mov	w8, #0x1                   	// #1
  4027d4:	eor	w9, w0, #0x1
  4027d8:	eor	w9, w9, w8
  4027dc:	eor	w8, w9, w8
  4027e0:	and	w8, w8, #0x1
  4027e4:	mov	w1, w8
  4027e8:	sxtw	x10, w1
  4027ec:	cbz	x10, 402814 <user_remove_runtime_path+0xc8>
  4027f0:	mov	w8, wzr
  4027f4:	mov	w0, w8
  4027f8:	adrp	x1, 402000 <acquire_runtime_dir_size+0x1e8>
  4027fc:	add	x1, x1, #0xe13
  402800:	ldr	x2, [sp, #32]
  402804:	mov	w3, #0x6a                  	// #106
  402808:	adrp	x4, 403000 <_fini+0x4d4>
  40280c:	add	x4, x4, #0x2e
  402810:	bl	401250 <log_assert_failed_realm@plt>
  402814:	ldur	x0, [x29, #-16]
  402818:	mov	w8, wzr
  40281c:	mov	w1, w8
  402820:	bl	401370 <rm_rf@plt>
  402824:	stur	w0, [x29, #-20]
  402828:	ldur	w8, [x29, #-20]
  40282c:	cmp	w8, #0x0
  402830:	cset	w8, ge  // ge = tcont
  402834:	tbnz	w8, #0, 4028b4 <user_remove_runtime_path+0x168>
  402838:	mov	w8, #0x7                   	// #7
  40283c:	stur	w8, [x29, #-24]
  402840:	ldur	w8, [x29, #-20]
  402844:	stur	w8, [x29, #-28]
  402848:	stur	wzr, [x29, #-32]
  40284c:	ldur	w0, [x29, #-32]
  402850:	bl	4011b0 <log_get_max_level_realm@plt>
  402854:	ldur	w8, [x29, #-24]
  402858:	and	w8, w8, #0x7
  40285c:	cmp	w0, w8
  402860:	b.lt	402898 <user_remove_runtime_path+0x14c>  // b.tstop
  402864:	ldur	w8, [x29, #-32]
  402868:	ldur	w9, [x29, #-24]
  40286c:	orr	w0, w9, w8, lsl #10
  402870:	ldur	w1, [x29, #-28]
  402874:	ldur	x6, [x29, #-16]
  402878:	ldr	x2, [sp, #32]
  40287c:	mov	w3, #0x6e                  	// #110
  402880:	ldr	x4, [sp, #24]
  402884:	adrp	x5, 403000 <_fini+0x4d4>
  402888:	add	x5, x5, #0x72
  40288c:	bl	4011c0 <log_internal_realm@plt>
  402890:	str	w0, [sp, #20]
  402894:	b	4028ac <user_remove_runtime_path+0x160>
  402898:	ldur	w0, [x29, #-28]
  40289c:	bl	4011d0 <abs@plt>
  4028a0:	mov	w8, wzr
  4028a4:	subs	w8, w8, w0, uxtb
  4028a8:	str	w8, [sp, #20]
  4028ac:	ldr	w8, [sp, #20]
  4028b0:	stur	w8, [x29, #-36]
  4028b4:	ldur	x0, [x29, #-16]
  4028b8:	mov	w1, #0x2                   	// #2
  4028bc:	bl	401380 <umount2@plt>
  4028c0:	stur	w0, [x29, #-20]
  4028c4:	ldur	w8, [x29, #-20]
  4028c8:	cmp	w8, #0x0
  4028cc:	cset	w8, ge  // ge = tcont
  4028d0:	tbnz	w8, #0, 4029ac <user_remove_runtime_path+0x260>
  4028d4:	mov	w8, #0x0                   	// #0
  4028d8:	sturb	w8, [x29, #-37]
  4028dc:	bl	401320 <__errno_location@plt>
  4028e0:	ldr	w8, [x0]
  4028e4:	cmp	w8, #0x2
  4028e8:	str	w8, [sp, #16]
  4028ec:	b.eq	40290c <user_remove_runtime_path+0x1c0>  // b.none
  4028f0:	b	4028f4 <user_remove_runtime_path+0x1a8>
  4028f4:	ldr	w8, [sp, #16]
  4028f8:	cmp	w8, #0x16
  4028fc:	cset	w9, eq  // eq = none
  402900:	eor	w9, w9, #0x1
  402904:	tbnz	w9, #0, 402918 <user_remove_runtime_path+0x1cc>
  402908:	b	40290c <user_remove_runtime_path+0x1c0>
  40290c:	mov	w8, #0x1                   	// #1
  402910:	sturb	w8, [x29, #-37]
  402914:	b	402918 <user_remove_runtime_path+0x1cc>
  402918:	ldurb	w8, [x29, #-37]
  40291c:	and	w8, w8, #0x1
  402920:	sturb	w8, [x29, #-38]
  402924:	ldurb	w8, [x29, #-38]
  402928:	tbnz	w8, #0, 4029ac <user_remove_runtime_path+0x260>
  40292c:	mov	w8, #0x7                   	// #7
  402930:	stur	w8, [x29, #-44]
  402934:	bl	401320 <__errno_location@plt>
  402938:	ldr	w8, [x0]
  40293c:	stur	w8, [x29, #-48]
  402940:	stur	wzr, [x29, #-52]
  402944:	ldur	w0, [x29, #-52]
  402948:	bl	4011b0 <log_get_max_level_realm@plt>
  40294c:	ldur	w8, [x29, #-44]
  402950:	and	w8, w8, #0x7
  402954:	cmp	w0, w8
  402958:	b.lt	402990 <user_remove_runtime_path+0x244>  // b.tstop
  40295c:	ldur	w8, [x29, #-52]
  402960:	ldur	w9, [x29, #-44]
  402964:	orr	w0, w9, w8, lsl #10
  402968:	ldur	w1, [x29, #-48]
  40296c:	ldur	x6, [x29, #-16]
  402970:	ldr	x2, [sp, #32]
  402974:	mov	w3, #0x74                  	// #116
  402978:	ldr	x4, [sp, #24]
  40297c:	adrp	x5, 403000 <_fini+0x4d4>
  402980:	add	x5, x5, #0xba
  402984:	bl	4011c0 <log_internal_realm@plt>
  402988:	str	w0, [sp, #12]
  40298c:	b	4029a4 <user_remove_runtime_path+0x258>
  402990:	ldur	w0, [x29, #-48]
  402994:	bl	4011d0 <abs@plt>
  402998:	mov	w8, wzr
  40299c:	subs	w8, w8, w0, uxtb
  4029a0:	str	w8, [sp, #12]
  4029a4:	ldr	w8, [sp, #12]
  4029a8:	str	w8, [sp, #56]
  4029ac:	ldur	x0, [x29, #-16]
  4029b0:	mov	w1, #0x2                   	// #2
  4029b4:	bl	401370 <rm_rf@plt>
  4029b8:	stur	w0, [x29, #-20]
  4029bc:	ldur	w8, [x29, #-20]
  4029c0:	cmp	w8, #0x0
  4029c4:	cset	w8, ge  // ge = tcont
  4029c8:	tbnz	w8, #0, 402a64 <user_remove_runtime_path+0x318>
  4029cc:	ldur	w8, [x29, #-20]
  4029d0:	mov	w9, #0xfffffffe            	// #-2
  4029d4:	cmp	w8, w9
  4029d8:	b.eq	402a64 <user_remove_runtime_path+0x318>  // b.none
  4029dc:	mov	w8, #0x3                   	// #3
  4029e0:	str	w8, [sp, #52]
  4029e4:	ldur	w8, [x29, #-20]
  4029e8:	str	w8, [sp, #48]
  4029ec:	str	wzr, [sp, #44]
  4029f0:	ldr	w0, [sp, #44]
  4029f4:	bl	4011b0 <log_get_max_level_realm@plt>
  4029f8:	ldr	w8, [sp, #52]
  4029fc:	and	w8, w8, #0x7
  402a00:	cmp	w0, w8
  402a04:	b.lt	402a3c <user_remove_runtime_path+0x2f0>  // b.tstop
  402a08:	ldr	w8, [sp, #44]
  402a0c:	ldr	w9, [sp, #52]
  402a10:	orr	w0, w9, w8, lsl #10
  402a14:	ldr	w1, [sp, #48]
  402a18:	ldur	x6, [x29, #-16]
  402a1c:	ldr	x2, [sp, #32]
  402a20:	mov	w3, #0x78                  	// #120
  402a24:	ldr	x4, [sp, #24]
  402a28:	adrp	x5, 403000 <_fini+0x4d4>
  402a2c:	add	x5, x5, #0xf4
  402a30:	bl	4011c0 <log_internal_realm@plt>
  402a34:	str	w0, [sp, #8]
  402a38:	b	402a50 <user_remove_runtime_path+0x304>
  402a3c:	ldr	w0, [sp, #48]
  402a40:	bl	4011d0 <abs@plt>
  402a44:	mov	w8, wzr
  402a48:	subs	w8, w8, w0, uxtb
  402a4c:	str	w8, [sp, #8]
  402a50:	ldr	w8, [sp, #8]
  402a54:	str	w8, [sp, #40]
  402a58:	ldr	w8, [sp, #40]
  402a5c:	stur	w8, [x29, #-4]
  402a60:	b	402a68 <user_remove_runtime_path+0x31c>
  402a64:	stur	wzr, [x29, #-4]
  402a68:	ldur	w0, [x29, #-4]
  402a6c:	ldp	x29, x30, [sp, #112]
  402a70:	add	sp, sp, #0x80
  402a74:	ret

0000000000402a78 <ALIGN_TO>:
  402a78:	sub	sp, sp, #0x10
  402a7c:	str	x0, [sp, #8]
  402a80:	str	x1, [sp]
  402a84:	ldr	x8, [sp, #8]
  402a88:	ldr	x9, [sp]
  402a8c:	add	x8, x8, x9
  402a90:	subs	x8, x8, #0x1
  402a94:	ldr	x9, [sp]
  402a98:	subs	x9, x9, #0x1
  402a9c:	bic	x0, x8, x9
  402aa0:	add	sp, sp, #0x10
  402aa4:	ret

0000000000402aa8 <__libc_csu_init>:
  402aa8:	stp	x29, x30, [sp, #-64]!
  402aac:	mov	x29, sp
  402ab0:	stp	x19, x20, [sp, #16]
  402ab4:	adrp	x20, 41f000 <__FRAME_END__+0x1bdd8>
  402ab8:	add	x20, x20, #0xc70
  402abc:	stp	x21, x22, [sp, #32]
  402ac0:	adrp	x21, 41f000 <__FRAME_END__+0x1bdd8>
  402ac4:	add	x21, x21, #0xc68
  402ac8:	sub	x20, x20, x21
  402acc:	mov	w22, w0
  402ad0:	stp	x23, x24, [sp, #48]
  402ad4:	mov	x23, x1
  402ad8:	mov	x24, x2
  402adc:	bl	4010e8 <_init>
  402ae0:	cmp	xzr, x20, asr #3
  402ae4:	b.eq	402b10 <__libc_csu_init+0x68>  // b.none
  402ae8:	asr	x20, x20, #3
  402aec:	mov	x19, #0x0                   	// #0
  402af0:	ldr	x3, [x21, x19, lsl #3]
  402af4:	mov	x2, x24
  402af8:	add	x19, x19, #0x1
  402afc:	mov	x1, x23
  402b00:	mov	w0, w22
  402b04:	blr	x3
  402b08:	cmp	x20, x19
  402b0c:	b.ne	402af0 <__libc_csu_init+0x48>  // b.any
  402b10:	ldp	x19, x20, [sp, #16]
  402b14:	ldp	x21, x22, [sp, #32]
  402b18:	ldp	x23, x24, [sp, #48]
  402b1c:	ldp	x29, x30, [sp], #64
  402b20:	ret
  402b24:	nop

0000000000402b28 <__libc_csu_fini>:
  402b28:	ret

Disassembly of section .fini:

0000000000402b2c <_fini>:
  402b2c:	stp	x29, x30, [sp, #-16]!
  402b30:	mov	x29, sp
  402b34:	ldp	x29, x30, [sp], #16
  402b38:	ret
