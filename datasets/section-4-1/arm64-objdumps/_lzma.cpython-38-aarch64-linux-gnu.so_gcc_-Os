
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021c0 <.init>:
    21c0:	stp	x29, x30, [sp, #-16]!
    21c4:	mov	x29, sp
    21c8:	bl	2650 <_PyDict_SetItemId@plt+0x10>
    21cc:	ldp	x29, x30, [sp], #16
    21d0:	ret

Disassembly of section .plt:

00000000000021e0 <memcpy@plt-0x20>:
    21e0:	stp	x16, x30, [sp, #-16]!
    21e4:	adrp	x16, 16000 <PyInit__lzma@@Base+0x11ef8>
    21e8:	ldr	x17, [x16, #4088]
    21ec:	add	x16, x16, #0xff8
    21f0:	br	x17
    21f4:	nop
    21f8:	nop
    21fc:	nop

0000000000002200 <memcpy@plt>:
    2200:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16]
    2208:	add	x16, x16, #0x0
    220c:	br	x17

0000000000002210 <memmove@plt>:
    2210:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #8]
    2218:	add	x16, x16, #0x8
    221c:	br	x17

0000000000002220 <PyModule_AddIntConstant@plt>:
    2220:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #16]
    2228:	add	x16, x16, #0x10
    222c:	br	x17

0000000000002230 <PyMapping_Check@plt>:
    2230:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #24]
    2238:	add	x16, x16, #0x18
    223c:	br	x17

0000000000002240 <_PyBytes_Resize@plt>:
    2240:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #32]
    2248:	add	x16, x16, #0x20
    224c:	br	x17

0000000000002250 <lzma_code@plt>:
    2250:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #40]
    2258:	add	x16, x16, #0x28
    225c:	br	x17

0000000000002260 <PyEval_RestoreThread@plt>:
    2260:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #48]
    2268:	add	x16, x16, #0x30
    226c:	br	x17

0000000000002270 <PyMem_Free@plt>:
    2270:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #56]
    2278:	add	x16, x16, #0x38
    227c:	br	x17

0000000000002280 <PyLong_FromUnsignedLongLong@plt>:
    2280:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #64]
    2288:	add	x16, x16, #0x40
    228c:	br	x17

0000000000002290 <PyBuffer_Release@plt>:
    2290:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #72]
    2298:	add	x16, x16, #0x48
    229c:	br	x17

00000000000022a0 <PyLong_AsUnsignedLongLong@plt>:
    22a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #80]
    22a8:	add	x16, x16, #0x50
    22ac:	br	x17

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #88]
    22b8:	add	x16, x16, #0x58
    22bc:	br	x17

00000000000022c0 <PyMem_RawMalloc@plt>:
    22c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #96]
    22c8:	add	x16, x16, #0x60
    22cc:	br	x17

00000000000022d0 <PyBuffer_IsContiguous@plt>:
    22d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #104]
    22d8:	add	x16, x16, #0x68
    22dc:	br	x17

00000000000022e0 <PyBytes_FromStringAndSize@plt>:
    22e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #112]
    22e8:	add	x16, x16, #0x70
    22ec:	br	x17

00000000000022f0 <_Py_Dealloc@plt>:
    22f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #120]
    22f8:	add	x16, x16, #0x78
    22fc:	br	x17

0000000000002300 <PyErr_NoMemory@plt>:
    2300:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #128]
    2308:	add	x16, x16, #0x80
    230c:	br	x17

0000000000002310 <PyErr_NewExceptionWithDoc@plt>:
    2310:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #136]
    2318:	add	x16, x16, #0x88
    231c:	br	x17

0000000000002320 <PyThread_acquire_lock@plt>:
    2320:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #144]
    2328:	add	x16, x16, #0x90
    232c:	br	x17

0000000000002330 <lzma_easy_encoder@plt>:
    2330:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #152]
    2338:	add	x16, x16, #0x98
    233c:	br	x17

0000000000002340 <_PyArg_UnpackKeywords@plt>:
    2340:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #160]
    2348:	add	x16, x16, #0xa0
    234c:	br	x17

0000000000002350 <PyErr_SetString@plt>:
    2350:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #168]
    2358:	add	x16, x16, #0xa8
    235c:	br	x17

0000000000002360 <PyMapping_GetItemString@plt>:
    2360:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #176]
    2368:	add	x16, x16, #0xb0
    236c:	br	x17

0000000000002370 <lzma_raw_encoder@plt>:
    2370:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #184]
    2378:	add	x16, x16, #0xb8
    237c:	br	x17

0000000000002380 <PyMem_Realloc@plt>:
    2380:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #192]
    2388:	add	x16, x16, #0xc0
    238c:	br	x17

0000000000002390 <PyErr_SetNone@plt>:
    2390:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #200]
    2398:	add	x16, x16, #0xc8
    239c:	br	x17

00000000000023a0 <PyErr_ExceptionMatches@plt>:
    23a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #208]
    23a8:	add	x16, x16, #0xd0
    23ac:	br	x17

00000000000023b0 <lzma_properties_size@plt>:
    23b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #216]
    23b8:	add	x16, x16, #0xd8
    23bc:	br	x17

00000000000023c0 <PySequence_GetItem@plt>:
    23c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #224]
    23c8:	add	x16, x16, #0xe0
    23cc:	br	x17

00000000000023d0 <lzma_auto_decoder@plt>:
    23d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #232]
    23d8:	add	x16, x16, #0xe8
    23dc:	br	x17

00000000000023e0 <PyType_Ready@plt>:
    23e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #240]
    23e8:	add	x16, x16, #0xf0
    23ec:	br	x17

00000000000023f0 <PyLong_AsSsize_t@plt>:
    23f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #248]
    23f8:	add	x16, x16, #0xf8
    23fc:	br	x17

0000000000002400 <_PyArg_BadArgument@plt>:
    2400:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #256]
    2408:	add	x16, x16, #0x100
    240c:	br	x17

0000000000002410 <PySequence_Size@plt>:
    2410:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #264]
    2418:	add	x16, x16, #0x108
    241c:	br	x17

0000000000002420 <PyErr_Clear@plt>:
    2420:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #272]
    2428:	add	x16, x16, #0x110
    242c:	br	x17

0000000000002430 <PyBool_FromLong@plt>:
    2430:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #280]
    2438:	add	x16, x16, #0x118
    243c:	br	x17

0000000000002440 <__gmon_start__@plt>:
    2440:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #288]
    2448:	add	x16, x16, #0x120
    244c:	br	x17

0000000000002450 <PyTuple_New@plt>:
    2450:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #296]
    2458:	add	x16, x16, #0x128
    245c:	br	x17

0000000000002460 <_PyArg_CheckPositional@plt>:
    2460:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #304]
    2468:	add	x16, x16, #0x130
    246c:	br	x17

0000000000002470 <lzma_properties_decode@plt>:
    2470:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #312]
    2478:	add	x16, x16, #0x138
    247c:	br	x17

0000000000002480 <PyErr_Occurred@plt>:
    2480:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #320]
    2488:	add	x16, x16, #0x140
    248c:	br	x17

0000000000002490 <PyModule_Create2@plt>:
    2490:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #328]
    2498:	add	x16, x16, #0x148
    249c:	br	x17

00000000000024a0 <lzma_stream_decoder@plt>:
    24a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #336]
    24a8:	add	x16, x16, #0x150
    24ac:	br	x17

00000000000024b0 <lzma_alone_decoder@plt>:
    24b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #344]
    24b8:	add	x16, x16, #0x158
    24bc:	br	x17

00000000000024c0 <lzma_end@plt>:
    24c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #352]
    24c8:	add	x16, x16, #0x160
    24cc:	br	x17

00000000000024d0 <PyMem_RawFree@plt>:
    24d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #360]
    24d8:	add	x16, x16, #0x168
    24dc:	br	x17

00000000000024e0 <lzma_get_check@plt>:
    24e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #368]
    24e8:	add	x16, x16, #0x170
    24ec:	br	x17

00000000000024f0 <free@plt>:
    24f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #376]
    24f8:	add	x16, x16, #0x178
    24fc:	br	x17

0000000000002500 <PyThread_allocate_lock@plt>:
    2500:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #384]
    2508:	add	x16, x16, #0x180
    250c:	br	x17

0000000000002510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2510:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #392]
    2518:	add	x16, x16, #0x188
    251c:	br	x17

0000000000002520 <PyThread_release_lock@plt>:
    2520:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #400]
    2528:	add	x16, x16, #0x190
    252c:	br	x17

0000000000002530 <lzma_raw_decoder@plt>:
    2530:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #408]
    2538:	add	x16, x16, #0x198
    253c:	br	x17

0000000000002540 <PyDict_New@plt>:
    2540:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #416]
    2548:	add	x16, x16, #0x1a0
    254c:	br	x17

0000000000002550 <lzma_alone_encoder@plt>:
    2550:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #424]
    2558:	add	x16, x16, #0x1a8
    255c:	br	x17

0000000000002560 <PyObject_GetBuffer@plt>:
    2560:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #432]
    2568:	add	x16, x16, #0x1b0
    256c:	br	x17

0000000000002570 <lzma_properties_encode@plt>:
    2570:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #440]
    2578:	add	x16, x16, #0x1b8
    257c:	br	x17

0000000000002580 <PyEval_SaveThread@plt>:
    2580:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #448]
    2588:	add	x16, x16, #0x1c0
    258c:	br	x17

0000000000002590 <PyModule_AddObject@plt>:
    2590:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #456]
    2598:	add	x16, x16, #0x1c8
    259c:	br	x17

00000000000025a0 <PyType_IsSubtype@plt>:
    25a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #464]
    25a8:	add	x16, x16, #0x1d0
    25ac:	br	x17

00000000000025b0 <PyErr_Format@plt>:
    25b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #472]
    25b8:	add	x16, x16, #0x1d8
    25bc:	br	x17

00000000000025c0 <lzma_check_is_supported@plt>:
    25c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #480]
    25c8:	add	x16, x16, #0x1e0
    25cc:	br	x17

00000000000025d0 <lzma_stream_encoder@plt>:
    25d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #488]
    25d8:	add	x16, x16, #0x1e8
    25dc:	br	x17

00000000000025e0 <PyLong_FromLongLong@plt>:
    25e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #496]
    25e8:	add	x16, x16, #0x1f0
    25ec:	br	x17

00000000000025f0 <PyNumber_Index@plt>:
    25f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #504]
    25f8:	add	x16, x16, #0x1f8
    25fc:	br	x17

0000000000002600 <_PyLong_AsInt@plt>:
    2600:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #512]
    2608:	add	x16, x16, #0x200
    260c:	br	x17

0000000000002610 <lzma_lzma_preset@plt>:
    2610:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #520]
    2618:	add	x16, x16, #0x208
    261c:	br	x17

0000000000002620 <PyMem_Malloc@plt>:
    2620:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #528]
    2628:	add	x16, x16, #0x210
    262c:	br	x17

0000000000002630 <PyThread_free_lock@plt>:
    2630:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #536]
    2638:	add	x16, x16, #0x218
    263c:	br	x17

0000000000002640 <_PyDict_SetItemId@plt>:
    2640:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #544]
    2648:	add	x16, x16, #0x220
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <PyInit__lzma@@Base-0x1ab8>:
    2650:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    2654:	ldr	x0, [x0, #4032]
    2658:	cbz	x0, 2660 <_PyDict_SetItemId@plt+0x20>
    265c:	b	2440 <__gmon_start__@plt>
    2660:	ret
    2664:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    2668:	add	x0, x0, #0x9b0
    266c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12ef8>
    2670:	add	x1, x1, #0x9b0
    2674:	cmp	x1, x0
    2678:	b.eq	2690 <_PyDict_SetItemId@plt+0x50>  // b.none
    267c:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11ef8>
    2680:	ldr	x1, [x1, #3976]
    2684:	cbz	x1, 2690 <_PyDict_SetItemId@plt+0x50>
    2688:	mov	x16, x1
    268c:	br	x16
    2690:	ret
    2694:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    2698:	add	x0, x0, #0x9b0
    269c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12ef8>
    26a0:	add	x1, x1, #0x9b0
    26a4:	sub	x1, x1, x0
    26a8:	mov	x2, #0x2                   	// #2
    26ac:	asr	x1, x1, #3
    26b0:	sdiv	x1, x1, x2
    26b4:	cbz	x1, 26cc <_PyDict_SetItemId@plt+0x8c>
    26b8:	adrp	x2, 16000 <PyInit__lzma@@Base+0x11ef8>
    26bc:	ldr	x2, [x2, #4064]
    26c0:	cbz	x2, 26cc <_PyDict_SetItemId@plt+0x8c>
    26c4:	mov	x16, x2
    26c8:	br	x16
    26cc:	ret
    26d0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    26d4:	ldrb	w1, [x0, #2480]
    26d8:	cbnz	w1, 271c <_PyDict_SetItemId@plt+0xdc>
    26dc:	stp	x29, x30, [sp, #-32]!
    26e0:	mov	x29, sp
    26e4:	str	x19, [sp, #16]
    26e8:	mov	x19, x0
    26ec:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    26f0:	ldr	x0, [x0, #3992]
    26f4:	cbz	x0, 2704 <_PyDict_SetItemId@plt+0xc4>
    26f8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    26fc:	ldr	x0, [x0, #552]
    2700:	bl	22b0 <__cxa_finalize@plt>
    2704:	bl	2664 <_PyDict_SetItemId@plt+0x24>
    2708:	mov	w0, #0x1                   	// #1
    270c:	strb	w0, [x19, #2480]
    2710:	ldr	x19, [sp, #16]
    2714:	ldp	x29, x30, [sp], #32
    2718:	ret
    271c:	ret
    2720:	b	2694 <_PyDict_SetItemId@plt+0x54>
    2724:	mov	x0, x1
    2728:	b	24d0 <PyMem_RawFree@plt>
    272c:	cbz	x2, 2740 <_PyDict_SetItemId@plt+0x100>
    2730:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    2734:	udiv	x0, x0, x2
    2738:	cmp	x0, x1
    273c:	b.cc	2748 <_PyDict_SetItemId@plt+0x108>  // b.lo, b.ul, b.last
    2740:	mul	x0, x2, x1
    2744:	b	22c0 <PyMem_RawMalloc@plt>
    2748:	mov	x0, #0x0                   	// #0
    274c:	ret
    2750:	stp	x29, x30, [sp, #-16]!
    2754:	mov	w2, w0
    2758:	cmp	w0, #0xb
    275c:	mov	x29, sp
    2760:	b.hi	27ec <_PyDict_SetItemId@plt+0x1ac>  // b.pmore
    2764:	adrp	x0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2768:	add	x0, x0, #0xc74
    276c:	ldrb	w0, [x0, w2, uxtw]
    2770:	adr	x1, 277c <_PyDict_SetItemId@plt+0x13c>
    2774:	add	x0, x1, w0, sxtb #2
    2778:	br	x0
    277c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2780:	add	x1, x1, #0x550
    2784:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    2788:	ldr	x0, [x0, #2488]
    278c:	bl	2350 <PyErr_SetString@plt>
    2790:	b	2798 <_PyDict_SetItemId@plt+0x158>
    2794:	bl	2300 <PyErr_NoMemory@plt>
    2798:	mov	w0, #0x1                   	// #1
    279c:	ldp	x29, x30, [sp], #16
    27a0:	ret
    27a4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27a8:	add	x1, x1, #0x56c
    27ac:	b	2784 <_PyDict_SetItemId@plt+0x144>
    27b0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27b4:	add	x1, x1, #0x588
    27b8:	b	2784 <_PyDict_SetItemId@plt+0x144>
    27bc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27c0:	add	x1, x1, #0x5ae
    27c4:	b	2784 <_PyDict_SetItemId@plt+0x144>
    27c8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27cc:	add	x1, x1, #0x5cd
    27d0:	b	2784 <_PyDict_SetItemId@plt+0x144>
    27d4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27d8:	add	x1, x1, #0x5e0
    27dc:	b	2784 <_PyDict_SetItemId@plt+0x144>
    27e0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27e4:	add	x1, x1, #0x5fa
    27e8:	b	2784 <_PyDict_SetItemId@plt+0x144>
    27ec:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    27f0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27f4:	add	x1, x1, #0x609
    27f8:	ldr	x0, [x0, #2488]
    27fc:	bl	25b0 <PyErr_Format@plt>
    2800:	b	2798 <_PyDict_SetItemId@plt+0x158>
    2804:	mov	w0, #0x0                   	// #0
    2808:	b	279c <_PyDict_SetItemId@plt+0x15c>
    280c:	stp	x29, x30, [sp, #-32]!
    2810:	mov	x29, sp
    2814:	stp	x19, x20, [sp, #16]
    2818:	mov	x19, x0
    281c:	mov	w20, #0x0                   	// #0
    2820:	sbfiz	x0, x20, #4, #32
    2824:	add	x1, x19, w20, sxtw #4
    2828:	ldr	x0, [x19, x0]
    282c:	cmn	x0, #0x1
    2830:	b.ne	2840 <_PyDict_SetItemId@plt+0x200>  // b.any
    2834:	ldp	x19, x20, [sp, #16]
    2838:	ldp	x29, x30, [sp], #32
    283c:	ret
    2840:	ldr	x0, [x1, #8]
    2844:	add	w20, w20, #0x1
    2848:	bl	2270 <PyMem_Free@plt>
    284c:	b	2820 <_PyDict_SetItemId@plt+0x1e0>
    2850:	ldr	x2, [x0]
    2854:	cmp	x1, #0x0
    2858:	ldr	x2, [x2, #16]
    285c:	add	x4, x2, #0x6
    2860:	add	x2, x4, x2, asr #3
    2864:	ccmp	x2, x1, #0x4, gt
    2868:	csel	x1, x1, x2, gt
    286c:	b	2240 <_PyBytes_Resize@plt>
    2870:	stp	x29, x30, [sp, #-32]!
    2874:	mov	x29, sp
    2878:	str	x19, [sp, #16]
    287c:	mov	x19, x0
    2880:	add	x0, x0, #0x28
    2884:	bl	24c0 <lzma_end@plt>
    2888:	ldr	x0, [x19, #184]
    288c:	cbz	x0, 2894 <_PyDict_SetItemId@plt+0x254>
    2890:	bl	2630 <PyThread_free_lock@plt>
    2894:	ldr	x0, [x19, #8]
    2898:	ldr	x1, [x0, #320]
    289c:	mov	x0, x19
    28a0:	ldr	x19, [sp, #16]
    28a4:	mov	x16, x1
    28a8:	ldp	x29, x30, [sp], #32
    28ac:	br	x16
    28b0:	stp	x29, x30, [sp, #-32]!
    28b4:	mov	x29, sp
    28b8:	stp	x19, x20, [sp, #16]
    28bc:	mov	x20, x1
    28c0:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    28c4:	mov	x19, x0
    28c8:	bl	2480 <PyErr_Occurred@plt>
    28cc:	cbnz	x0, 28f0 <_PyDict_SetItemId@plt+0x2b0>
    28d0:	tst	x19, #0xffffffff00000000
    28d4:	b.eq	28f8 <_PyDict_SetItemId@plt+0x2b8>  // b.none
    28d8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    28dc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    28e0:	add	x1, x1, #0x62d
    28e4:	ldr	x0, [x0, #4040]
    28e8:	ldr	x0, [x0]
    28ec:	bl	2350 <PyErr_SetString@plt>
    28f0:	mov	w0, #0x0                   	// #0
    28f4:	b	2900 <_PyDict_SetItemId@plt+0x2c0>
    28f8:	mov	w0, #0x1                   	// #1
    28fc:	str	w19, [x20]
    2900:	ldp	x19, x20, [sp, #16]
    2904:	ldp	x29, x30, [sp], #32
    2908:	ret
    290c:	stp	x29, x30, [sp, #-32]!
    2910:	mov	x29, sp
    2914:	stp	x19, x20, [sp, #16]
    2918:	mov	x20, x1
    291c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2920:	mov	x19, x0
    2924:	bl	2480 <PyErr_Occurred@plt>
    2928:	cbnz	x0, 294c <_PyDict_SetItemId@plt+0x30c>
    292c:	tst	x19, #0xffffffff00000000
    2930:	b.eq	2954 <_PyDict_SetItemId@plt+0x314>  // b.none
    2934:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    2938:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    293c:	add	x1, x1, #0x658
    2940:	ldr	x0, [x0, #4040]
    2944:	ldr	x0, [x0]
    2948:	bl	2350 <PyErr_SetString@plt>
    294c:	mov	w0, #0x0                   	// #0
    2950:	b	295c <_PyDict_SetItemId@plt+0x31c>
    2954:	mov	w0, #0x1                   	// #1
    2958:	str	w19, [x20]
    295c:	ldp	x19, x20, [sp, #16]
    2960:	ldp	x29, x30, [sp], #32
    2964:	ret
    2968:	stp	x29, x30, [sp, #-32]!
    296c:	mov	x29, sp
    2970:	stp	x19, x20, [sp, #16]
    2974:	mov	x20, x1
    2978:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    297c:	mov	x19, x0
    2980:	bl	2480 <PyErr_Occurred@plt>
    2984:	cbnz	x0, 29a8 <_PyDict_SetItemId@plt+0x368>
    2988:	tst	x19, #0xffffffff00000000
    298c:	b.eq	29b0 <_PyDict_SetItemId@plt+0x370>  // b.none
    2990:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    2994:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2998:	add	x1, x1, #0x67b
    299c:	ldr	x0, [x0, #4040]
    29a0:	ldr	x0, [x0]
    29a4:	bl	2350 <PyErr_SetString@plt>
    29a8:	mov	w0, #0x0                   	// #0
    29ac:	b	29b8 <_PyDict_SetItemId@plt+0x378>
    29b0:	mov	w0, #0x1                   	// #1
    29b4:	str	w19, [x20]
    29b8:	ldp	x19, x20, [sp, #16]
    29bc:	ldp	x29, x30, [sp], #32
    29c0:	ret
    29c4:	ldr	x1, [x0]
    29c8:	sub	x1, x1, #0x1
    29cc:	str	x1, [x0]
    29d0:	cbnz	x1, 29d8 <_PyDict_SetItemId@plt+0x398>
    29d4:	b	22f0 <_Py_Dealloc@plt>
    29d8:	ret
    29dc:	cbz	x0, 29e4 <_PyDict_SetItemId@plt+0x3a4>
    29e0:	b	29c4 <_PyDict_SetItemId@plt+0x384>
    29e4:	ret
    29e8:	stp	x29, x30, [sp, #-112]!
    29ec:	mov	x29, sp
    29f0:	stp	x19, x20, [sp, #16]
    29f4:	mov	x19, x0
    29f8:	mov	x20, x1
    29fc:	mov	x0, #0x0                   	// #0
    2a00:	mov	x1, #0x2000                	// #8192
    2a04:	stp	x21, x22, [sp, #32]
    2a08:	mov	w22, w3
    2a0c:	stp	x23, x24, [sp, #48]
    2a10:	mov	x23, x2
    2a14:	stp	x25, x26, [sp, #64]
    2a18:	str	x27, [sp, #80]
    2a1c:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2a20:	str	x0, [sp, #104]
    2a24:	cbz	x0, 2ab8 <_PyDict_SetItemId@plt+0x478>
    2a28:	add	x1, x0, #0x20
    2a2c:	add	x25, sp, #0x68
    2a30:	ldr	x0, [x0, #16]
    2a34:	mov	w24, #0xa                   	// #10
    2a38:	stp	x20, x23, [x19, #40]
    2a3c:	stp	x1, x0, [x19, #64]
    2a40:	add	x26, x19, #0x28
    2a44:	bl	2580 <PyEval_SaveThread@plt>
    2a48:	mov	x27, x0
    2a4c:	mov	w1, w22
    2a50:	mov	x0, x26
    2a54:	bl	2250 <lzma_code@plt>
    2a58:	mov	w21, w0
    2a5c:	ldr	x20, [sp, #104]
    2a60:	cmp	x23, #0x0
    2a64:	ccmp	w0, #0xa, #0x0, eq  // eq = none
    2a68:	add	x0, x20, #0x20
    2a6c:	ldr	x20, [x19, #64]
    2a70:	sub	x20, x20, x0
    2a74:	b.ne	2a84 <_PyDict_SetItemId@plt+0x444>  // b.any
    2a78:	ldr	x0, [x19, #72]
    2a7c:	cmp	x0, #0x0
    2a80:	csel	w21, w24, wzr, eq  // eq = none
    2a84:	mov	x0, x27
    2a88:	bl	2260 <PyEval_RestoreThread@plt>
    2a8c:	mov	w0, w21
    2a90:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    2a94:	cbnz	w0, 2b30 <_PyDict_SetItemId@plt+0x4f0>
    2a98:	cbnz	w22, 2ad4 <_PyDict_SetItemId@plt+0x494>
    2a9c:	ldr	x0, [x19, #48]
    2aa0:	cbnz	x0, 2ae0 <_PyDict_SetItemId@plt+0x4a0>
    2aa4:	ldr	x0, [sp, #104]
    2aa8:	ldr	x0, [x0, #16]
    2aac:	cmp	x0, x20
    2ab0:	b.ne	2b1c <_PyDict_SetItemId@plt+0x4dc>  // b.any
    2ab4:	ldr	x0, [sp, #104]
    2ab8:	ldp	x19, x20, [sp, #16]
    2abc:	ldp	x21, x22, [sp, #32]
    2ac0:	ldp	x23, x24, [sp, #48]
    2ac4:	ldp	x25, x26, [sp, #64]
    2ac8:	ldr	x27, [sp, #80]
    2acc:	ldp	x29, x30, [sp], #112
    2ad0:	ret
    2ad4:	cmp	w22, #0x3
    2ad8:	ccmp	w21, #0x1, #0x0, eq  // eq = none
    2adc:	b.eq	2aa4 <_PyDict_SetItemId@plt+0x464>  // b.none
    2ae0:	ldr	x0, [x19, #72]
    2ae4:	cbnz	x0, 2a44 <_PyDict_SetItemId@plt+0x404>
    2ae8:	mov	x0, x25
    2aec:	mov	x1, #0xffffffffffffffff    	// #-1
    2af0:	bl	2850 <_PyDict_SetItemId@plt+0x210>
    2af4:	cmn	w0, #0x1
    2af8:	b.eq	2b30 <_PyDict_SetItemId@plt+0x4f0>  // b.none
    2afc:	ldr	x1, [sp, #104]
    2b00:	add	x0, x1, #0x20
    2b04:	add	x0, x0, x20
    2b08:	str	x0, [x19, #64]
    2b0c:	ldr	x0, [x1, #16]
    2b10:	sub	x20, x0, x20
    2b14:	str	x20, [x19, #72]
    2b18:	b	2a40 <_PyDict_SetItemId@plt+0x400>
    2b1c:	mov	x1, x20
    2b20:	add	x0, sp, #0x68
    2b24:	bl	2240 <_PyBytes_Resize@plt>
    2b28:	cmn	w0, #0x1
    2b2c:	b.ne	2ab4 <_PyDict_SetItemId@plt+0x474>  // b.any
    2b30:	ldr	x0, [sp, #104]
    2b34:	bl	29dc <_PyDict_SetItemId@plt+0x39c>
    2b38:	mov	x0, #0x0                   	// #0
    2b3c:	b	2ab8 <_PyDict_SetItemId@plt+0x478>
    2b40:	stp	x29, x30, [sp, #-32]!
    2b44:	mov	w1, #0x0                   	// #0
    2b48:	mov	x29, sp
    2b4c:	stp	x19, x20, [sp, #16]
    2b50:	mov	x19, x0
    2b54:	ldr	x0, [x0, #184]
    2b58:	bl	2320 <PyThread_acquire_lock@plt>
    2b5c:	cbnz	w0, 2b7c <_PyDict_SetItemId@plt+0x53c>
    2b60:	bl	2580 <PyEval_SaveThread@plt>
    2b64:	mov	x20, x0
    2b68:	ldr	x0, [x19, #184]
    2b6c:	mov	w1, #0x1                   	// #1
    2b70:	bl	2320 <PyThread_acquire_lock@plt>
    2b74:	mov	x0, x20
    2b78:	bl	2260 <PyEval_RestoreThread@plt>
    2b7c:	ldr	w0, [x19, #176]
    2b80:	cbz	w0, 2bb8 <_PyDict_SetItemId@plt+0x578>
    2b84:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    2b88:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2b8c:	mov	x20, #0x0                   	// #0
    2b90:	add	x1, x1, #0x69d
    2b94:	ldr	x0, [x0, #4008]
    2b98:	ldr	x0, [x0]
    2b9c:	bl	2350 <PyErr_SetString@plt>
    2ba0:	ldr	x0, [x19, #184]
    2ba4:	bl	2520 <PyThread_release_lock@plt>
    2ba8:	mov	x0, x20
    2bac:	ldp	x19, x20, [sp, #16]
    2bb0:	ldp	x29, x30, [sp], #32
    2bb4:	ret
    2bb8:	mov	w0, #0x1                   	// #1
    2bbc:	str	w0, [x19, #176]
    2bc0:	mov	w3, #0x3                   	// #3
    2bc4:	mov	x0, x19
    2bc8:	mov	x2, #0x0                   	// #0
    2bcc:	mov	x1, #0x0                   	// #0
    2bd0:	bl	29e8 <_PyDict_SetItemId@plt+0x3a8>
    2bd4:	mov	x20, x0
    2bd8:	b	2ba0 <_PyDict_SetItemId@plt+0x560>
    2bdc:	stp	x29, x30, [sp, #-128]!
    2be0:	mov	w2, #0x0                   	// #0
    2be4:	mov	x29, sp
    2be8:	str	x21, [sp, #32]
    2bec:	add	x21, sp, #0x30
    2bf0:	stp	x19, x20, [sp, #16]
    2bf4:	mov	x19, x0
    2bf8:	mov	x20, x1
    2bfc:	mov	x0, x1
    2c00:	mov	x1, x21
    2c04:	stp	xzr, xzr, [sp, #48]
    2c08:	stp	xzr, xzr, [sp, #64]
    2c0c:	stp	xzr, xzr, [sp, #80]
    2c10:	stp	xzr, xzr, [sp, #96]
    2c14:	stp	xzr, xzr, [sp, #112]
    2c18:	bl	2560 <PyObject_GetBuffer@plt>
    2c1c:	cbnz	w0, 2c50 <_PyDict_SetItemId@plt+0x610>
    2c20:	mov	x0, x21
    2c24:	mov	w1, #0x43                  	// #67
    2c28:	bl	22d0 <PyBuffer_IsContiguous@plt>
    2c2c:	cbnz	w0, 2c58 <_PyDict_SetItemId@plt+0x618>
    2c30:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2c34:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2c38:	adrp	x0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2c3c:	mov	x3, x20
    2c40:	add	x2, x2, #0x6b6
    2c44:	add	x1, x1, #0x6c8
    2c48:	add	x0, x0, #0x6ff
    2c4c:	bl	2400 <_PyArg_BadArgument@plt>
    2c50:	mov	x20, #0x0                   	// #0
    2c54:	b	2cb0 <_PyDict_SetItemId@plt+0x670>
    2c58:	ldr	x0, [x19, #184]
    2c5c:	mov	w1, #0x0                   	// #0
    2c60:	bl	2320 <PyThread_acquire_lock@plt>
    2c64:	cbnz	w0, 2c84 <_PyDict_SetItemId@plt+0x644>
    2c68:	bl	2580 <PyEval_SaveThread@plt>
    2c6c:	mov	x20, x0
    2c70:	ldr	x0, [x19, #184]
    2c74:	mov	w1, #0x1                   	// #1
    2c78:	bl	2320 <PyThread_acquire_lock@plt>
    2c7c:	mov	x0, x20
    2c80:	bl	2260 <PyEval_RestoreThread@plt>
    2c84:	ldr	w0, [x19, #176]
    2c88:	cbz	w0, 2cd4 <_PyDict_SetItemId@plt+0x694>
    2c8c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    2c90:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2c94:	mov	x20, #0x0                   	// #0
    2c98:	add	x1, x1, #0x6d1
    2c9c:	ldr	x0, [x0, #4008]
    2ca0:	ldr	x0, [x0]
    2ca4:	bl	2350 <PyErr_SetString@plt>
    2ca8:	ldr	x0, [x19, #184]
    2cac:	bl	2520 <PyThread_release_lock@plt>
    2cb0:	ldr	x0, [sp, #56]
    2cb4:	cbz	x0, 2cc0 <_PyDict_SetItemId@plt+0x680>
    2cb8:	mov	x0, x21
    2cbc:	bl	2290 <PyBuffer_Release@plt>
    2cc0:	mov	x0, x20
    2cc4:	ldp	x19, x20, [sp, #16]
    2cc8:	ldr	x21, [sp, #32]
    2ccc:	ldp	x29, x30, [sp], #128
    2cd0:	ret
    2cd4:	ldr	x1, [sp, #48]
    2cd8:	mov	x0, x19
    2cdc:	ldr	x2, [sp, #64]
    2ce0:	mov	w3, #0x0                   	// #0
    2ce4:	bl	29e8 <_PyDict_SetItemId@plt+0x3a8>
    2ce8:	mov	x20, x0
    2cec:	b	2ca8 <_PyDict_SetItemId@plt+0x668>
    2cf0:	sub	sp, sp, #0xd0
    2cf4:	stp	x29, x30, [sp, #16]
    2cf8:	add	x29, sp, #0x10
    2cfc:	stp	x19, x20, [sp, #32]
    2d00:	mov	x19, x0
    2d04:	mov	x20, x1
    2d08:	stp	x21, x22, [sp, #48]
    2d0c:	mov	x21, x2
    2d10:	stp	x23, x24, [sp, #64]
    2d14:	stp	x25, x26, [sp, #80]
    2d18:	cbz	x3, 2db0 <_PyDict_SetItemId@plt+0x770>
    2d1c:	ldr	x22, [x3, #16]
    2d20:	stp	xzr, xzr, [sp, #128]
    2d24:	sub	x0, x21, #0x1
    2d28:	stp	xzr, xzr, [sp, #144]
    2d2c:	cmp	x3, #0x0
    2d30:	ccmp	x0, #0x1, #0x2, eq  // eq = none
    2d34:	stp	xzr, xzr, [sp, #160]
    2d38:	stp	xzr, xzr, [sp, #176]
    2d3c:	stp	xzr, xzr, [sp, #192]
    2d40:	b.hi	2d48 <_PyDict_SetItemId@plt+0x708>  // b.pmore
    2d44:	cbnz	x20, 2db8 <_PyDict_SetItemId@plt+0x778>
    2d48:	add	x0, sp, #0x70
    2d4c:	str	x0, [sp]
    2d50:	mov	x1, x21
    2d54:	mov	x0, x20
    2d58:	mov	w7, #0x0                   	// #0
    2d5c:	mov	w6, #0x2                   	// #2
    2d60:	mov	w5, #0x1                   	// #1
    2d64:	adrp	x4, 17000 <PyInit__lzma@@Base+0x12ef8>
    2d68:	mov	x2, #0x0                   	// #0
    2d6c:	add	x4, x4, #0x570
    2d70:	bl	2340 <_PyArg_UnpackKeywords@plt>
    2d74:	mov	x20, x0
    2d78:	cbnz	x0, 2db8 <_PyDict_SetItemId@plt+0x778>
    2d7c:	mov	x21, #0x0                   	// #0
    2d80:	ldr	x0, [sp, #136]
    2d84:	cbz	x0, 2d90 <_PyDict_SetItemId@plt+0x750>
    2d88:	add	x0, sp, #0x80
    2d8c:	bl	2290 <PyBuffer_Release@plt>
    2d90:	mov	x0, x21
    2d94:	ldp	x29, x30, [sp, #16]
    2d98:	ldp	x19, x20, [sp, #32]
    2d9c:	ldp	x21, x22, [sp, #48]
    2da0:	ldp	x23, x24, [sp, #64]
    2da4:	ldp	x25, x26, [sp, #80]
    2da8:	add	sp, sp, #0xd0
    2dac:	ret
    2db0:	mov	x22, #0x0                   	// #0
    2db4:	b	2d20 <_PyDict_SetItemId@plt+0x6e0>
    2db8:	ldr	x0, [x20]
    2dbc:	add	x23, sp, #0x80
    2dc0:	mov	x1, x23
    2dc4:	mov	w2, #0x0                   	// #0
    2dc8:	bl	2560 <PyObject_GetBuffer@plt>
    2dcc:	cbnz	w0, 2d7c <_PyDict_SetItemId@plt+0x73c>
    2dd0:	mov	x0, x23
    2dd4:	mov	w1, #0x43                  	// #67
    2dd8:	bl	22d0 <PyBuffer_IsContiguous@plt>
    2ddc:	cbnz	w0, 2e04 <_PyDict_SetItemId@plt+0x7c4>
    2de0:	ldr	x3, [x20]
    2de4:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2de8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2dec:	add	x2, x2, #0x6b6
    2df0:	add	x1, x1, #0x6ed
    2df4:	adrp	x0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2df8:	add	x0, x0, #0x6fd
    2dfc:	bl	2400 <_PyArg_BadArgument@plt>
    2e00:	b	2d7c <_PyDict_SetItemId@plt+0x73c>
    2e04:	add	x21, x22, x21
    2e08:	cmp	x21, #0x1
    2e0c:	b.ne	2e68 <_PyDict_SetItemId@plt+0x828>  // b.any
    2e10:	mov	x22, #0xffffffffffffffff    	// #-1
    2e14:	ldr	x0, [x19, #216]
    2e18:	mov	w1, #0x0                   	// #0
    2e1c:	bl	2320 <PyThread_acquire_lock@plt>
    2e20:	cbnz	w0, 2e40 <_PyDict_SetItemId@plt+0x800>
    2e24:	bl	2580 <PyEval_SaveThread@plt>
    2e28:	mov	x20, x0
    2e2c:	ldr	x0, [x19, #216]
    2e30:	mov	w1, #0x1                   	// #1
    2e34:	bl	2320 <PyThread_acquire_lock@plt>
    2e38:	mov	x0, x20
    2e3c:	bl	2260 <PyEval_RestoreThread@plt>
    2e40:	ldrb	w24, [x19, #180]
    2e44:	cbz	w24, 2edc <_PyDict_SetItemId@plt+0x89c>
    2e48:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    2e4c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2e50:	add	x1, x1, #0x72d
    2e54:	ldr	x0, [x0, #4048]
    2e58:	ldr	x0, [x0]
    2e5c:	bl	2350 <PyErr_SetString@plt>
    2e60:	mov	x21, #0x0                   	// #0
    2e64:	b	2f3c <_PyDict_SetItemId@plt+0x8fc>
    2e68:	ldr	x0, [x20, #8]
    2e6c:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11ef8>
    2e70:	ldr	x1, [x1, #3984]
    2e74:	ldr	x0, [x0, #8]
    2e78:	cmp	x0, x1
    2e7c:	b.ne	2e9c <_PyDict_SetItemId@plt+0x85c>  // b.any
    2e80:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    2e84:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2e88:	add	x1, x1, #0x708
    2e8c:	ldr	x0, [x0, #4016]
    2e90:	ldr	x0, [x0]
    2e94:	bl	2350 <PyErr_SetString@plt>
    2e98:	b	2d7c <_PyDict_SetItemId@plt+0x73c>
    2e9c:	bl	25a0 <PyType_IsSubtype@plt>
    2ea0:	cbnz	w0, 2e80 <_PyDict_SetItemId@plt+0x840>
    2ea4:	ldr	x0, [x20, #8]
    2ea8:	bl	25f0 <PyNumber_Index@plt>
    2eac:	mov	x20, x0
    2eb0:	cbnz	x0, 2ec0 <_PyDict_SetItemId@plt+0x880>
    2eb4:	bl	2480 <PyErr_Occurred@plt>
    2eb8:	cbz	x0, 2e10 <_PyDict_SetItemId@plt+0x7d0>
    2ebc:	b	2d7c <_PyDict_SetItemId@plt+0x73c>
    2ec0:	bl	23f0 <PyLong_AsSsize_t@plt>
    2ec4:	mov	x22, x0
    2ec8:	mov	x0, x20
    2ecc:	bl	29c4 <_PyDict_SetItemId@plt+0x384>
    2ed0:	cmn	x22, #0x1
    2ed4:	b.ne	2e14 <_PyDict_SetItemId@plt+0x7d4>  // b.any
    2ed8:	b	2eb4 <_PyDict_SetItemId@plt+0x874>
    2edc:	ldr	x1, [x19, #40]
    2ee0:	add	x20, x19, #0x28
    2ee4:	ldr	x25, [sp, #128]
    2ee8:	ldr	x26, [sp, #144]
    2eec:	cbz	x1, 3064 <_PyDict_SetItemId@plt+0xa24>
    2ef0:	ldp	x0, x3, [x19, #200]
    2ef4:	ldr	x2, [x20, #8]
    2ef8:	add	x4, x1, x2
    2efc:	add	x24, x0, x3
    2f00:	sub	x24, x24, x4
    2f04:	sub	x4, x3, x2
    2f08:	cmp	x26, x4
    2f0c:	b.ls	304c <_PyDict_SetItemId@plt+0xa0c>  // b.plast
    2f10:	add	x3, x26, x3
    2f14:	sub	x23, x1, x0
    2f18:	sub	x24, x3, x24
    2f1c:	mov	x1, x24
    2f20:	bl	2380 <PyMem_Realloc@plt>
    2f24:	mov	x21, x0
    2f28:	cbnz	x0, 2f48 <_PyDict_SetItemId@plt+0x908>
    2f2c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    2f30:	ldr	x0, [x0, #4000]
    2f34:	ldr	x0, [x0]
    2f38:	bl	2390 <PyErr_SetNone@plt>
    2f3c:	ldr	x0, [x19, #216]
    2f40:	bl	2520 <PyThread_release_lock@plt>
    2f44:	b	2d80 <_PyDict_SetItemId@plt+0x740>
    2f48:	add	x1, x0, x23
    2f4c:	str	x1, [x19, #40]
    2f50:	stp	x0, x24, [x19, #200]
    2f54:	mov	x2, x26
    2f58:	ldr	x3, [x19, #40]
    2f5c:	mov	x1, x25
    2f60:	ldr	x0, [x20, #8]
    2f64:	mov	w24, #0x1                   	// #1
    2f68:	add	x0, x3, x0
    2f6c:	bl	2200 <memcpy@plt>
    2f70:	ldr	x0, [x20, #8]
    2f74:	add	x26, x0, x26
    2f78:	str	x26, [x20, #8]
    2f7c:	mov	x0, #0x1fff                	// #8191
    2f80:	cmp	x22, x0
    2f84:	b.ls	3070 <_PyDict_SetItemId@plt+0xa30>  // b.plast
    2f88:	mov	x1, #0x2000                	// #8192
    2f8c:	mov	x0, #0x0                   	// #0
    2f90:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2f94:	str	x0, [sp, #104]
    2f98:	ldr	x0, [sp, #104]
    2f9c:	cbz	x0, 3044 <_PyDict_SetItemId@plt+0xa04>
    2fa0:	add	x1, x0, #0x20
    2fa4:	add	x25, sp, #0x68
    2fa8:	ldr	x0, [x0, #16]
    2fac:	stp	x1, x0, [x20, #24]
    2fb0:	bl	2580 <PyEval_SaveThread@plt>
    2fb4:	mov	w1, #0x0                   	// #0
    2fb8:	mov	x26, x0
    2fbc:	mov	x0, x20
    2fc0:	bl	2250 <lzma_code@plt>
    2fc4:	ldr	x23, [sp, #104]
    2fc8:	mov	w21, w0
    2fcc:	cmp	w0, #0xa
    2fd0:	add	x0, x23, #0x20
    2fd4:	ldr	x23, [x20, #24]
    2fd8:	sub	x23, x23, x0
    2fdc:	b.ne	2ff4 <_PyDict_SetItemId@plt+0x9b4>  // b.any
    2fe0:	ldr	x0, [x20, #8]
    2fe4:	cbnz	x0, 2ff4 <_PyDict_SetItemId@plt+0x9b4>
    2fe8:	ldr	x0, [x20, #32]
    2fec:	cmp	x0, #0x0
    2ff0:	csel	w21, w21, wzr, eq  // eq = none
    2ff4:	mov	x0, x26
    2ff8:	bl	2260 <PyEval_RestoreThread@plt>
    2ffc:	mov	w0, w21
    3000:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    3004:	cbnz	w0, 30dc <_PyDict_SetItemId@plt+0xa9c>
    3008:	cmp	w21, #0x4
    300c:	ccmp	w21, #0x2, #0x4, ne  // ne = any
    3010:	b.ne	3020 <_PyDict_SetItemId@plt+0x9e0>  // b.any
    3014:	mov	x0, x20
    3018:	bl	24e0 <lzma_get_check@plt>
    301c:	str	w0, [x19, #176]
    3020:	cmp	w21, #0x1
    3024:	b.ne	3078 <_PyDict_SetItemId@plt+0xa38>  // b.any
    3028:	strb	w21, [x19, #180]
    302c:	ldr	x0, [sp, #104]
    3030:	ldr	x0, [x0, #16]
    3034:	cmp	x23, x0
    3038:	b.ne	30c8 <_PyDict_SetItemId@plt+0xa88>  // b.any
    303c:	ldr	x21, [sp, #104]
    3040:	cbnz	x21, 30e8 <_PyDict_SetItemId@plt+0xaa8>
    3044:	str	xzr, [x19, #40]
    3048:	b	2e60 <_PyDict_SetItemId@plt+0x820>
    304c:	cmp	x26, x24
    3050:	b.ls	2f54 <_PyDict_SetItemId@plt+0x914>  // b.plast
    3054:	bl	2210 <memmove@plt>
    3058:	ldr	x0, [x19, #200]
    305c:	str	x0, [x19, #40]
    3060:	b	2f54 <_PyDict_SetItemId@plt+0x914>
    3064:	str	x25, [x19, #40]
    3068:	str	x26, [x20, #8]
    306c:	b	2f7c <_PyDict_SetItemId@plt+0x93c>
    3070:	mov	x1, x22
    3074:	b	2f8c <_PyDict_SetItemId@plt+0x94c>
    3078:	ldr	x0, [x20, #32]
    307c:	cbnz	x0, 30bc <_PyDict_SetItemId@plt+0xa7c>
    3080:	cmp	x22, x23
    3084:	b.eq	302c <_PyDict_SetItemId@plt+0x9ec>  // b.none
    3088:	mov	x1, x22
    308c:	mov	x0, x25
    3090:	bl	2850 <_PyDict_SetItemId@plt+0x210>
    3094:	cmn	w0, #0x1
    3098:	b.eq	30dc <_PyDict_SetItemId@plt+0xa9c>  // b.none
    309c:	ldr	x1, [sp, #104]
    30a0:	add	x0, x1, #0x20
    30a4:	add	x0, x0, x23
    30a8:	str	x0, [x20, #24]
    30ac:	ldr	x0, [x1, #16]
    30b0:	sub	x23, x0, x23
    30b4:	str	x23, [x20, #32]
    30b8:	b	2fb0 <_PyDict_SetItemId@plt+0x970>
    30bc:	ldr	x0, [x20, #8]
    30c0:	cbnz	x0, 2fb0 <_PyDict_SetItemId@plt+0x970>
    30c4:	b	302c <_PyDict_SetItemId@plt+0x9ec>
    30c8:	mov	x1, x23
    30cc:	add	x0, sp, #0x68
    30d0:	bl	2240 <_PyBytes_Resize@plt>
    30d4:	cmn	w0, #0x1
    30d8:	b.ne	303c <_PyDict_SetItemId@plt+0x9fc>  // b.any
    30dc:	ldr	x0, [sp, #104]
    30e0:	bl	29dc <_PyDict_SetItemId@plt+0x39c>
    30e4:	b	3044 <_PyDict_SetItemId@plt+0xa04>
    30e8:	ldrb	w0, [x19, #180]
    30ec:	ldr	x1, [x20, #8]
    30f0:	cbz	w0, 3128 <_PyDict_SetItemId@plt+0xae8>
    30f4:	strb	wzr, [x19, #192]
    30f8:	cbz	x1, 2f3c <_PyDict_SetItemId@plt+0x8fc>
    30fc:	ldr	x0, [x19, #40]
    3100:	ldr	x20, [x19, #184]
    3104:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3108:	str	x0, [x19, #184]
    310c:	mov	x0, x20
    3110:	bl	29dc <_PyDict_SetItemId@plt+0x39c>
    3114:	ldr	x0, [x19, #184]
    3118:	cbnz	x0, 2f3c <_PyDict_SetItemId@plt+0x8fc>
    311c:	mov	x0, x21
    3120:	bl	29dc <_PyDict_SetItemId@plt+0x39c>
    3124:	b	2e60 <_PyDict_SetItemId@plt+0x820>
    3128:	cbnz	x1, 3144 <_PyDict_SetItemId@plt+0xb04>
    312c:	ldr	x0, [x20, #32]
    3130:	str	xzr, [x19, #40]
    3134:	cmp	x0, #0x0
    3138:	cset	w0, ne  // ne = any
    313c:	strb	w0, [x19, #192]
    3140:	b	2f3c <_PyDict_SetItemId@plt+0x8fc>
    3144:	strb	wzr, [x19, #192]
    3148:	cbnz	w24, 2f3c <_PyDict_SetItemId@plt+0x8fc>
    314c:	ldr	x0, [x19, #200]
    3150:	cbz	x0, 3168 <_PyDict_SetItemId@plt+0xb28>
    3154:	ldr	x2, [x19, #208]
    3158:	cmp	x1, x2
    315c:	b.ls	3194 <_PyDict_SetItemId@plt+0xb54>  // b.plast
    3160:	bl	2270 <PyMem_Free@plt>
    3164:	str	xzr, [x19, #200]
    3168:	ldr	x0, [x20, #8]
    316c:	bl	2620 <PyMem_Malloc@plt>
    3170:	str	x0, [x19, #200]
    3174:	cbnz	x0, 318c <_PyDict_SetItemId@plt+0xb4c>
    3178:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    317c:	ldr	x0, [x0, #4000]
    3180:	ldr	x0, [x0]
    3184:	bl	2390 <PyErr_SetNone@plt>
    3188:	b	311c <_PyDict_SetItemId@plt+0xadc>
    318c:	ldr	x0, [x20, #8]
    3190:	str	x0, [x19, #208]
    3194:	ldr	x2, [x20, #8]
    3198:	ldr	x1, [x19, #40]
    319c:	ldr	x0, [x19, #200]
    31a0:	bl	2200 <memcpy@plt>
    31a4:	ldr	x0, [x19, #200]
    31a8:	str	x0, [x19, #40]
    31ac:	b	2f3c <_PyDict_SetItemId@plt+0x8fc>
    31b0:	stp	x29, x30, [sp, #-32]!
    31b4:	mov	x29, sp
    31b8:	str	x19, [sp, #16]
    31bc:	mov	x19, x0
    31c0:	ldr	x0, [x0, #200]
    31c4:	cbz	x0, 31cc <_PyDict_SetItemId@plt+0xb8c>
    31c8:	bl	2270 <PyMem_Free@plt>
    31cc:	add	x0, x19, #0x28
    31d0:	bl	24c0 <lzma_end@plt>
    31d4:	ldr	x0, [x19, #184]
    31d8:	cbz	x0, 31e4 <_PyDict_SetItemId@plt+0xba4>
    31dc:	str	xzr, [x19, #184]
    31e0:	bl	29c4 <_PyDict_SetItemId@plt+0x384>
    31e4:	ldr	x0, [x19, #216]
    31e8:	cbz	x0, 31f0 <_PyDict_SetItemId@plt+0xbb0>
    31ec:	bl	2630 <PyThread_free_lock@plt>
    31f0:	ldr	x0, [x19, #8]
    31f4:	ldr	x1, [x0, #320]
    31f8:	mov	x0, x19
    31fc:	ldr	x19, [sp, #16]
    3200:	mov	x16, x1
    3204:	ldp	x29, x30, [sp], #32
    3208:	br	x16
    320c:	stp	x29, x30, [sp, #-48]!
    3210:	mov	x29, sp
    3214:	stp	x19, x20, [sp, #16]
    3218:	mov	x20, x0
    321c:	mov	x0, x2
    3220:	str	x21, [sp, #32]
    3224:	mov	x21, x1
    3228:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    322c:	cbz	x0, 3264 <_PyDict_SetItemId@plt+0xc24>
    3230:	mov	x2, x0
    3234:	mov	x1, x21
    3238:	mov	x19, x0
    323c:	mov	x0, x20
    3240:	bl	2640 <_PyDict_SetItemId@plt>
    3244:	mov	w20, w0
    3248:	mov	x0, x19
    324c:	bl	29c4 <_PyDict_SetItemId@plt+0x384>
    3250:	mov	w0, w20
    3254:	ldp	x19, x20, [sp, #16]
    3258:	ldr	x21, [sp, #32]
    325c:	ldp	x29, x30, [sp], #48
    3260:	ret
    3264:	mov	w20, #0xffffffff            	// #-1
    3268:	b	3250 <_PyDict_SetItemId@plt+0xc10>
    326c:	stp	x29, x30, [sp, #-48]!
    3270:	mov	x29, sp
    3274:	stp	x19, x20, [sp, #16]
    3278:	mov	x20, x0
    327c:	mov	x0, x2
    3280:	str	x21, [sp, #32]
    3284:	mov	x21, x1
    3288:	bl	25e0 <PyLong_FromLongLong@plt>
    328c:	cbz	x0, 32b0 <_PyDict_SetItemId@plt+0xc70>
    3290:	mov	x19, x0
    3294:	mov	x2, x0
    3298:	mov	x1, x21
    329c:	mov	x0, x20
    32a0:	bl	2590 <PyModule_AddObject@plt>
    32a4:	cbz	w0, 32b4 <_PyDict_SetItemId@plt+0xc74>
    32a8:	mov	x0, x19
    32ac:	bl	29c4 <_PyDict_SetItemId@plt+0x384>
    32b0:	mov	w0, #0xffffffff            	// #-1
    32b4:	ldp	x19, x20, [sp, #16]
    32b8:	ldr	x21, [sp, #32]
    32bc:	ldp	x29, x30, [sp], #48
    32c0:	ret
    32c4:	sub	sp, sp, #0xd0
    32c8:	stp	x29, x30, [sp, #112]
    32cc:	add	x29, sp, #0x70
    32d0:	stp	x19, x20, [sp, #128]
    32d4:	stp	x21, x22, [sp, #144]
    32d8:	mov	x22, x0
    32dc:	mov	x21, x1
    32e0:	str	x23, [sp, #160]
    32e4:	bl	2230 <PyMapping_Check@plt>
    32e8:	cbnz	w0, 3324 <_PyDict_SetItemId@plt+0xce4>
    32ec:	mov	w19, w0
    32f0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    32f4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    32f8:	add	x1, x1, #0x746
    32fc:	ldr	x0, [x0, #4016]
    3300:	ldr	x0, [x0]
    3304:	bl	2350 <PyErr_SetString@plt>
    3308:	mov	w0, w19
    330c:	ldp	x29, x30, [sp, #112]
    3310:	ldp	x19, x20, [sp, #128]
    3314:	ldp	x21, x22, [sp, #144]
    3318:	ldr	x23, [sp, #160]
    331c:	add	sp, sp, #0xd0
    3320:	ret
    3324:	mov	x0, x22
    3328:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    332c:	add	x1, x1, #0x77a
    3330:	bl	2360 <PyMapping_GetItemString@plt>
    3334:	mov	x19, x0
    3338:	cbnz	x0, 3374 <_PyDict_SetItemId@plt+0xd34>
    333c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3340:	ldr	x0, [x0, #4024]
    3344:	ldr	x0, [x0]
    3348:	bl	23a0 <PyErr_ExceptionMatches@plt>
    334c:	cbnz	w0, 3358 <_PyDict_SetItemId@plt+0xd18>
    3350:	mov	w19, #0x0                   	// #0
    3354:	b	3308 <_PyDict_SetItemId@plt+0xcc8>
    3358:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    335c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3360:	add	x1, x1, #0x77d
    3364:	ldr	x0, [x0, #4008]
    3368:	ldr	x0, [x0]
    336c:	bl	2350 <PyErr_SetString@plt>
    3370:	b	3350 <_PyDict_SetItemId@plt+0xd10>
    3374:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3378:	str	x0, [x21]
    337c:	mov	x0, x19
    3380:	bl	29c4 <_PyDict_SetItemId@plt+0x384>
    3384:	bl	2480 <PyErr_Occurred@plt>
    3388:	mov	x19, x0
    338c:	cbnz	x0, 3350 <_PyDict_SetItemId@plt+0xd10>
    3390:	ldr	x2, [x21]
    3394:	cmp	x2, #0x9
    3398:	b.hi	33c4 <_PyDict_SetItemId@plt+0xd84>  // b.pmore
    339c:	cmp	x2, #0x3
    33a0:	b.hi	35f4 <_PyDict_SetItemId@plt+0xfb4>  // b.pmore
    33a4:	b.eq	3570 <_PyDict_SetItemId@plt+0xf30>  // b.none
    33a8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    33ac:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    33b0:	add	x1, x1, #0x860
    33b4:	ldr	x0, [x0, #4008]
    33b8:	ldr	x0, [x0]
    33bc:	bl	25b0 <PyErr_Format@plt>
    33c0:	b	3350 <_PyDict_SetItemId@plt+0xd10>
    33c4:	cmp	x2, #0x21
    33c8:	b.eq	33dc <_PyDict_SetItemId@plt+0xd9c>  // b.none
    33cc:	mov	x0, #0x1                   	// #1
    33d0:	movk	x0, #0x4000, lsl #48
    33d4:	cmp	x2, x0
    33d8:	b.ne	33a8 <_PyDict_SetItemId@plt+0xd68>  // b.any
    33dc:	mov	w0, #0x6                   	// #6
    33e0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    33e4:	add	x1, x1, #0x7a6
    33e8:	str	w0, [sp, #188]
    33ec:	mov	x0, x22
    33f0:	bl	2360 <PyMapping_GetItemString@plt>
    33f4:	str	x0, [sp, #200]
    33f8:	cbnz	x0, 3430 <_PyDict_SetItemId@plt+0xdf0>
    33fc:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3400:	ldr	x0, [x0, #4024]
    3404:	ldr	x0, [x0]
    3408:	bl	23a0 <PyErr_ExceptionMatches@plt>
    340c:	cbz	w0, 3448 <_PyDict_SetItemId@plt+0xe08>
    3410:	bl	2420 <PyErr_Clear@plt>
    3414:	mov	x0, #0x70                  	// #112
    3418:	bl	2620 <PyMem_Malloc@plt>
    341c:	mov	x20, x0
    3420:	cbnz	x0, 3458 <_PyDict_SetItemId@plt+0xe18>
    3424:	bl	2300 <PyErr_NoMemory@plt>
    3428:	mov	x19, x0
    342c:	b	3448 <_PyDict_SetItemId@plt+0xe08>
    3430:	add	x1, sp, #0xbc
    3434:	bl	2968 <_PyDict_SetItemId@plt+0x328>
    3438:	mov	w20, w0
    343c:	ldr	x0, [sp, #200]
    3440:	bl	29c4 <_PyDict_SetItemId@plt+0x384>
    3444:	cbnz	w20, 3414 <_PyDict_SetItemId@plt+0xdd4>
    3448:	cmp	x19, #0x0
    344c:	str	x19, [x21, #8]
    3450:	cset	w19, ne  // ne = any
    3454:	b	3308 <_PyDict_SetItemId@plt+0xcc8>
    3458:	stp	xzr, xzr, [x0]
    345c:	adrp	x23, 17000 <PyInit__lzma@@Base+0x12ef8>
    3460:	ldr	w1, [sp, #188]
    3464:	stp	xzr, xzr, [x0, #16]
    3468:	stp	xzr, xzr, [x0, #32]
    346c:	stp	xzr, xzr, [x0, #48]
    3470:	stp	xzr, xzr, [x0, #64]
    3474:	stp	xzr, xzr, [x0, #80]
    3478:	stp	xzr, xzr, [x0, #96]
    347c:	bl	2610 <lzma_lzma_preset@plt>
    3480:	tst	w0, #0xff
    3484:	b.eq	34a8 <_PyDict_SetItemId@plt+0xe68>  // b.none
    3488:	mov	x0, x20
    348c:	bl	2270 <PyMem_Free@plt>
    3490:	ldr	x0, [x23, #2488]
    3494:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3498:	ldr	w2, [sp, #188]
    349c:	add	x1, x1, #0x7ad
    34a0:	bl	25b0 <PyErr_Format@plt>
    34a4:	b	3448 <_PyDict_SetItemId@plt+0xe08>
    34a8:	add	x0, x20, #0x2c
    34ac:	adrp	x6, 2000 <memcpy@plt-0x200>
    34b0:	add	x6, x6, #0x968
    34b4:	stp	x6, x0, [sp, #96]
    34b8:	add	x0, x20, #0x28
    34bc:	str	x0, [sp, #88]
    34c0:	adrp	x0, 2000 <memcpy@plt-0x200>
    34c4:	add	x0, x0, #0x8b0
    34c8:	str	x0, [sp, #80]
    34cc:	add	x0, x20, #0x24
    34d0:	str	x0, [sp, #72]
    34d4:	add	x0, x20, #0x20
    34d8:	str	x0, [sp, #56]
    34dc:	adrp	x0, 2000 <memcpy@plt-0x200>
    34e0:	add	x0, x0, #0x90c
    34e4:	add	x23, x23, #0x9b8
    34e8:	str	x0, [sp, #48]
    34ec:	add	x0, x20, #0x1c
    34f0:	str	x0, [sp, #40]
    34f4:	add	x0, x20, #0x18
    34f8:	str	x0, [sp, #24]
    34fc:	add	x0, x20, #0x14
    3500:	str	x0, [sp, #8]
    3504:	ldr	x0, [x23, #8]
    3508:	str	x6, [sp]
    350c:	str	x6, [sp, #16]
    3510:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12ef8>
    3514:	str	x6, [sp, #32]
    3518:	add	x3, x3, #0x570
    351c:	str	x6, [sp, #64]
    3520:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3524:	mov	x7, x20
    3528:	add	x5, sp, #0xc8
    352c:	add	x4, sp, #0xc0
    3530:	add	x3, x3, #0x40
    3534:	add	x2, x2, #0x7cc
    3538:	mov	x1, x22
    353c:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3540:	cbnz	w0, 3568 <_PyDict_SetItemId@plt+0xf28>
    3544:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3548:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    354c:	add	x1, x1, #0x7e0
    3550:	ldr	x0, [x0, #4008]
    3554:	ldr	x0, [x0]
    3558:	bl	2350 <PyErr_SetString@plt>
    355c:	mov	x0, x20
    3560:	bl	2270 <PyMem_Free@plt>
    3564:	b	3448 <_PyDict_SetItemId@plt+0xe08>
    3568:	mov	x19, x20
    356c:	b	3448 <_PyDict_SetItemId@plt+0xe08>
    3570:	mov	w0, #0x1                   	// #1
    3574:	str	w0, [sp, #192]
    3578:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    357c:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12ef8>
    3580:	add	x3, x3, #0x570
    3584:	adrp	x5, 2000 <memcpy@plt-0x200>
    3588:	ldr	x0, [x0, #2496]
    358c:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3590:	add	x6, sp, #0xc0
    3594:	add	x5, x5, #0x968
    3598:	add	x4, sp, #0xc8
    359c:	add	x3, x3, #0x98
    35a0:	add	x2, x2, #0x809
    35a4:	mov	x1, x22
    35a8:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    35ac:	cbnz	w0, 35cc <_PyDict_SetItemId@plt+0xf8c>
    35b0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    35b4:	add	x1, x1, #0x80e
    35b8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    35bc:	ldr	x0, [x0, #4008]
    35c0:	ldr	x0, [x0]
    35c4:	bl	2350 <PyErr_SetString@plt>
    35c8:	b	3448 <_PyDict_SetItemId@plt+0xe08>
    35cc:	mov	x0, #0x28                  	// #40
    35d0:	bl	2620 <PyMem_Malloc@plt>
    35d4:	mov	x19, x0
    35d8:	cbz	x0, 3424 <_PyDict_SetItemId@plt+0xde4>
    35dc:	stp	xzr, xzr, [x0]
    35e0:	stp	xzr, xzr, [x0, #16]
    35e4:	str	xzr, [x0, #32]
    35e8:	ldr	w0, [sp, #192]
    35ec:	str	w0, [x19, #4]
    35f0:	b	3448 <_PyDict_SetItemId@plt+0xe08>
    35f4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    35f8:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12ef8>
    35fc:	add	x3, x3, #0x570
    3600:	adrp	x5, 2000 <memcpy@plt-0x200>
    3604:	ldr	x0, [x0, #2496]
    3608:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    360c:	add	x6, sp, #0xc0
    3610:	add	x5, x5, #0x968
    3614:	add	x4, sp, #0xc8
    3618:	add	x3, x3, #0xb0
    361c:	add	x2, x2, #0x809
    3620:	mov	x1, x22
    3624:	str	wzr, [sp, #192]
    3628:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    362c:	cbnz	w0, 363c <_PyDict_SetItemId@plt+0xffc>
    3630:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3634:	add	x1, x1, #0x838
    3638:	b	35b8 <_PyDict_SetItemId@plt+0xf78>
    363c:	mov	x0, #0x4                   	// #4
    3640:	bl	2620 <PyMem_Malloc@plt>
    3644:	mov	x19, x0
    3648:	cbz	x0, 3424 <_PyDict_SetItemId@plt+0xde4>
    364c:	str	wzr, [x0]
    3650:	ldr	w0, [sp, #192]
    3654:	str	w0, [x19]
    3658:	b	3448 <_PyDict_SetItemId@plt+0xe08>
    365c:	stp	x29, x30, [sp, #-64]!
    3660:	mov	x29, sp
    3664:	stp	x19, x20, [sp, #16]
    3668:	stp	x21, x22, [sp, #32]
    366c:	mov	x21, x0
    3670:	mov	x22, x1
    3674:	mov	x0, x1
    3678:	stp	x23, x24, [sp, #48]
    367c:	bl	2410 <PySequence_Size@plt>
    3680:	mov	x19, x0
    3684:	cmn	x0, #0x1
    3688:	b.eq	3710 <_PyDict_SetItemId@plt+0x10d0>  // b.none
    368c:	cmp	x0, #0x4
    3690:	mov	x20, #0x0                   	// #0
    3694:	b.le	3724 <_PyDict_SetItemId@plt+0x10e4>
    3698:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    369c:	mov	w2, #0x4                   	// #4
    36a0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    36a4:	add	x1, x1, #0x878
    36a8:	ldr	x0, [x0, #4008]
    36ac:	ldr	x0, [x0]
    36b0:	bl	25b0 <PyErr_Format@plt>
    36b4:	mov	w0, #0xffffffff            	// #-1
    36b8:	ldp	x19, x20, [sp, #16]
    36bc:	ldp	x21, x22, [sp, #32]
    36c0:	ldp	x23, x24, [sp, #48]
    36c4:	ldp	x29, x30, [sp], #64
    36c8:	ret
    36cc:	mov	x1, x20
    36d0:	mov	x0, x22
    36d4:	bl	23c0 <PySequence_GetItem@plt>
    36d8:	mov	x23, x0
    36dc:	cbz	x0, 3718 <_PyDict_SetItemId@plt+0x10d8>
    36e0:	add	x1, x21, x20, lsl #4
    36e4:	bl	32c4 <_PyDict_SetItemId@plt+0xc84>
    36e8:	cmp	w0, #0x0
    36ec:	cset	w24, ne  // ne = any
    36f0:	mov	x0, x23
    36f4:	bl	29dc <_PyDict_SetItemId@plt+0x39c>
    36f8:	cbnz	w24, 3720 <_PyDict_SetItemId@plt+0x10e0>
    36fc:	lsl	x20, x20, #4
    3700:	mov	x19, #0xffffffffffffffff    	// #-1
    3704:	mov	x0, x21
    3708:	str	x19, [x21, x20]
    370c:	bl	280c <_PyDict_SetItemId@plt+0x1cc>
    3710:	mov	w0, w19
    3714:	b	36b8 <_PyDict_SetItemId@plt+0x1078>
    3718:	mov	w24, #0x0                   	// #0
    371c:	b	36f0 <_PyDict_SetItemId@plt+0x10b0>
    3720:	add	x20, x20, #0x1
    3724:	cmp	x20, x19
    3728:	b.lt	36cc <_PyDict_SetItemId@plt+0x108c>  // b.tstop
    372c:	lsl	x19, x19, #4
    3730:	mov	x0, #0xffffffffffffffff    	// #-1
    3734:	str	x0, [x21, x19]
    3738:	mov	w0, #0x0                   	// #0
    373c:	b	36b8 <_PyDict_SetItemId@plt+0x1078>
    3740:	sub	sp, sp, #0xc0
    3744:	stp	x29, x30, [sp, #16]
    3748:	add	x29, sp, #0x10
    374c:	stp	x19, x20, [sp, #32]
    3750:	mov	x20, x1
    3754:	mov	x19, x0
    3758:	stp	x21, x22, [sp, #48]
    375c:	ldr	x1, [x1, #16]
    3760:	str	x23, [sp, #64]
    3764:	cbz	x2, 37d0 <_PyDict_SetItemId@plt+0x1190>
    3768:	ldr	x22, [x2, #16]
    376c:	add	x22, x22, x1
    3770:	add	x20, x20, #0x18
    3774:	cbnz	x2, 3780 <_PyDict_SetItemId@plt+0x1140>
    3778:	cmp	x1, #0x3
    377c:	b.ls	37d8 <_PyDict_SetItemId@plt+0x1198>  // b.plast
    3780:	add	x0, sp, #0x58
    3784:	str	x0, [sp]
    3788:	adrp	x4, 17000 <PyInit__lzma@@Base+0x12ef8>
    378c:	add	x4, x4, #0x570
    3790:	mov	x0, x20
    3794:	add	x4, x4, #0xc8
    3798:	mov	w7, #0x0                   	// #0
    379c:	mov	w6, #0x3                   	// #3
    37a0:	mov	w5, #0x0                   	// #0
    37a4:	mov	x3, #0x0                   	// #0
    37a8:	bl	2340 <_PyArg_UnpackKeywords@plt>
    37ac:	mov	x20, x0
    37b0:	cbnz	x0, 37d8 <_PyDict_SetItemId@plt+0x1198>
    37b4:	mov	w0, #0xffffffff            	// #-1
    37b8:	ldp	x29, x30, [sp, #16]
    37bc:	ldp	x19, x20, [sp, #32]
    37c0:	ldp	x21, x22, [sp, #48]
    37c4:	ldr	x23, [sp, #64]
    37c8:	add	sp, sp, #0xc0
    37cc:	ret
    37d0:	mov	x22, #0x0                   	// #0
    37d4:	b	376c <_PyDict_SetItemId@plt+0x112c>
    37d8:	cbz	x22, 38f4 <_PyDict_SetItemId@plt+0x12b4>
    37dc:	ldr	x0, [x20]
    37e0:	cbz	x0, 385c <_PyDict_SetItemId@plt+0x121c>
    37e4:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11ef8>
    37e8:	ldr	x0, [x0, #8]
    37ec:	ldr	x1, [x1, #3984]
    37f0:	cmp	x0, x1
    37f4:	b.ne	3814 <_PyDict_SetItemId@plt+0x11d4>  // b.any
    37f8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    37fc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3800:	add	x1, x1, #0x708
    3804:	ldr	x0, [x0, #4016]
    3808:	ldr	x0, [x0]
    380c:	bl	2350 <PyErr_SetString@plt>
    3810:	b	37b4 <_PyDict_SetItemId@plt+0x1174>
    3814:	bl	25a0 <PyType_IsSubtype@plt>
    3818:	cbnz	w0, 37f8 <_PyDict_SetItemId@plt+0x11b8>
    381c:	ldr	x0, [x20]
    3820:	bl	2600 <_PyLong_AsInt@plt>
    3824:	mov	w21, w0
    3828:	cmn	w0, #0x1
    382c:	b.eq	3850 <_PyDict_SetItemId@plt+0x1210>  // b.none
    3830:	subs	x22, x22, #0x1
    3834:	b.ne	3860 <_PyDict_SetItemId@plt+0x1220>  // b.any
    3838:	cmp	w21, #0x3
    383c:	b.eq	38e8 <_PyDict_SetItemId@plt+0x12a8>  // b.none
    3840:	adrp	x20, 16000 <PyInit__lzma@@Base+0x11ef8>
    3844:	mov	x22, #0xffffffffffffffff    	// #-1
    3848:	ldr	x20, [x20, #4056]
    384c:	b	3904 <_PyDict_SetItemId@plt+0x12c4>
    3850:	bl	2480 <PyErr_Occurred@plt>
    3854:	cbz	x0, 3830 <_PyDict_SetItemId@plt+0x11f0>
    3858:	b	37b4 <_PyDict_SetItemId@plt+0x1174>
    385c:	mov	w21, #0x0                   	// #0
    3860:	ldr	x0, [x20, #8]
    3864:	adrp	x23, 16000 <PyInit__lzma@@Base+0x11ef8>
    3868:	cbz	x0, 387c <_PyDict_SetItemId@plt+0x123c>
    386c:	cmp	x22, #0x1
    3870:	b.ne	3880 <_PyDict_SetItemId@plt+0x1240>  // b.any
    3874:	ldr	x20, [x23, #4056]
    3878:	b	3884 <_PyDict_SetItemId@plt+0x1244>
    387c:	ldr	x0, [x23, #4056]
    3880:	ldr	x20, [x20, #16]
    3884:	ldr	x1, [x23, #4056]
    3888:	cmp	x0, x1
    388c:	b.eq	38d4 <_PyDict_SetItemId@plt+0x1294>  // b.none
    3890:	cmp	w21, #0x3
    3894:	b.ne	38ac <_PyDict_SetItemId@plt+0x126c>  // b.any
    3898:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    389c:	add	x1, x1, #0x8ac
    38a0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    38a4:	ldr	x0, [x0, #4008]
    38a8:	b	3808 <_PyDict_SetItemId@plt+0x11c8>
    38ac:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    38b0:	mov	x22, x0
    38b4:	bl	2480 <PyErr_Occurred@plt>
    38b8:	cbnz	x0, 37b4 <_PyDict_SetItemId@plt+0x1174>
    38bc:	ldr	x23, [x23, #4056]
    38c0:	cmp	x20, x23
    38c4:	b.eq	3904 <_PyDict_SetItemId@plt+0x12c4>  // b.none
    38c8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    38cc:	add	x1, x1, #0x8fc
    38d0:	b	38a0 <_PyDict_SetItemId@plt+0x1260>
    38d4:	cmp	w21, #0x3
    38d8:	mov	x22, #0xffffffffffffffff    	// #-1
    38dc:	b.ne	38bc <_PyDict_SetItemId@plt+0x127c>  // b.any
    38e0:	cmp	x20, x0
    38e4:	b.ne	3904 <_PyDict_SetItemId@plt+0x12c4>  // b.any
    38e8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    38ec:	add	x1, x1, #0x8d8
    38f0:	b	38a0 <_PyDict_SetItemId@plt+0x1260>
    38f4:	adrp	x20, 16000 <PyInit__lzma@@Base+0x11ef8>
    38f8:	mov	x22, #0xffffffffffffffff    	// #-1
    38fc:	mov	w21, #0x0                   	// #0
    3900:	ldr	x20, [x20, #4056]
    3904:	adrp	x0, 2000 <memcpy@plt-0x200>
    3908:	add	x0, x0, #0x72c
    390c:	str	x0, [x19, #16]
    3910:	adrp	x0, 2000 <memcpy@plt-0x200>
    3914:	add	x0, x0, #0x724
    3918:	str	x0, [x19, #24]
    391c:	add	x0, x19, #0x10
    3920:	stp	xzr, xzr, [x19, #32]
    3924:	str	x0, [x19, #88]
    3928:	bl	2500 <PyThread_allocate_lock@plt>
    392c:	mov	x23, x0
    3930:	cbnz	x0, 3948 <_PyDict_SetItemId@plt+0x1308>
    3934:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3938:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    393c:	add	x1, x1, #0x92a
    3940:	ldr	x0, [x0, #4000]
    3944:	b	3808 <_PyDict_SetItemId@plt+0x11c8>
    3948:	ldr	x0, [x19, #216]
    394c:	cbz	x0, 3954 <_PyDict_SetItemId@plt+0x1314>
    3950:	bl	2630 <PyThread_free_lock@plt>
    3954:	mov	w0, #0x10                  	// #16
    3958:	str	w0, [x19, #176]
    395c:	mov	w0, #0x1                   	// #1
    3960:	strb	w0, [x19, #192]
    3964:	stp	xzr, xzr, [x19, #200]
    3968:	mov	x1, #0x0                   	// #0
    396c:	mov	x0, #0x0                   	// #0
    3970:	str	x23, [x19, #216]
    3974:	ldr	x23, [x19, #184]
    3978:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    397c:	str	x0, [x19, #184]
    3980:	mov	x0, x23
    3984:	bl	29dc <_PyDict_SetItemId@plt+0x39c>
    3988:	ldr	x0, [x19, #184]
    398c:	cbz	x0, 3a3c <_PyDict_SetItemId@plt+0x13fc>
    3990:	cmp	w21, #0x3
    3994:	b.hi	3a5c <_PyDict_SetItemId@plt+0x141c>  // b.pmore
    3998:	adrp	x0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    399c:	add	x23, x19, #0x28
    39a0:	add	x0, x0, #0xc80
    39a4:	ldrb	w0, [x0, w21, uxtw]
    39a8:	adr	x1, 39b4 <_PyDict_SetItemId@plt+0x1374>
    39ac:	add	x0, x1, w0, sxtb #2
    39b0:	br	x0
    39b4:	mov	x1, x22
    39b8:	mov	x0, x23
    39bc:	mov	w2, #0x5                   	// #5
    39c0:	bl	23d0 <lzma_auto_decoder@plt>
    39c4:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    39c8:	cbnz	w0, 3a3c <_PyDict_SetItemId@plt+0x13fc>
    39cc:	mov	w0, #0x0                   	// #0
    39d0:	b	37b8 <_PyDict_SetItemId@plt+0x1178>
    39d4:	mov	x1, x22
    39d8:	mov	x0, x23
    39dc:	mov	w2, #0x5                   	// #5
    39e0:	bl	24a0 <lzma_stream_decoder@plt>
    39e4:	b	39c4 <_PyDict_SetItemId@plt+0x1384>
    39e8:	str	wzr, [x19, #176]
    39ec:	mov	x1, x22
    39f0:	mov	x0, x23
    39f4:	bl	24b0 <lzma_alone_decoder@plt>
    39f8:	b	39c4 <_PyDict_SetItemId@plt+0x1384>
    39fc:	str	wzr, [x19, #176]
    3a00:	add	x21, sp, #0x70
    3a04:	mov	x1, x20
    3a08:	mov	x0, x21
    3a0c:	bl	365c <_PyDict_SetItemId@plt+0x101c>
    3a10:	cmn	w0, #0x1
    3a14:	b.eq	3a3c <_PyDict_SetItemId@plt+0x13fc>  // b.none
    3a18:	mov	x1, x21
    3a1c:	mov	x0, x23
    3a20:	bl	2530 <lzma_raw_decoder@plt>
    3a24:	mov	w20, w0
    3a28:	mov	x0, x21
    3a2c:	bl	280c <_PyDict_SetItemId@plt+0x1cc>
    3a30:	mov	w0, w20
    3a34:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    3a38:	cbz	w0, 37b8 <_PyDict_SetItemId@plt+0x1178>
    3a3c:	ldr	x0, [x19, #184]
    3a40:	cbz	x0, 3a4c <_PyDict_SetItemId@plt+0x140c>
    3a44:	str	xzr, [x19, #184]
    3a48:	bl	29c4 <_PyDict_SetItemId@plt+0x384>
    3a4c:	ldr	x0, [x19, #216]
    3a50:	bl	2630 <PyThread_free_lock@plt>
    3a54:	str	xzr, [x19, #216]
    3a58:	b	37b4 <_PyDict_SetItemId@plt+0x1174>
    3a5c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3a60:	mov	w2, w21
    3a64:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3a68:	add	x1, x1, #0x942
    3a6c:	ldr	x0, [x0, #4008]
    3a70:	ldr	x0, [x0]
    3a74:	bl	25b0 <PyErr_Format@plt>
    3a78:	b	3a3c <_PyDict_SetItemId@plt+0x13fc>
    3a7c:	stp	x29, x30, [sp, #-192]!
    3a80:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12ef8>
    3a84:	add	x3, x3, #0x570
    3a88:	mov	x29, sp
    3a8c:	stp	x19, x20, [sp, #16]
    3a90:	mov	x19, x0
    3a94:	mov	x0, x1
    3a98:	mov	x1, x2
    3a9c:	mov	w2, #0x1                   	// #1
    3aa0:	stp	x21, x22, [sp, #32]
    3aa4:	adrp	x21, 16000 <PyInit__lzma@@Base+0x11ef8>
    3aa8:	mov	w20, #0xffffffff            	// #-1
    3aac:	stp	w2, w20, [sp, #52]
    3ab0:	mov	w2, #0x6                   	// #6
    3ab4:	str	w2, [sp, #60]
    3ab8:	add	x7, sp, #0x48
    3abc:	ldr	x2, [x21, #4056]
    3ac0:	add	x6, sp, #0x40
    3ac4:	add	x5, sp, #0x38
    3ac8:	add	x4, sp, #0x34
    3acc:	add	x3, x3, #0x108
    3ad0:	stp	x2, x2, [sp, #64]
    3ad4:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3ad8:	add	x2, x2, #0x95f
    3adc:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3ae0:	cbnz	w0, 3aec <_PyDict_SetItemId@plt+0x14ac>
    3ae4:	mov	w0, #0xffffffff            	// #-1
    3ae8:	b	3c10 <_PyDict_SetItemId@plt+0x15d0>
    3aec:	ldr	w0, [sp, #52]
    3af0:	cmp	w0, #0x1
    3af4:	b.eq	3b24 <_PyDict_SetItemId@plt+0x14e4>  // b.none
    3af8:	ldr	w0, [sp, #56]
    3afc:	add	w0, w0, #0x1
    3b00:	cmp	w0, #0x1
    3b04:	b.ls	3b24 <_PyDict_SetItemId@plt+0x14e4>  // b.plast
    3b08:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3b0c:	add	x1, x1, #0x974
    3b10:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3b14:	ldr	x0, [x0, #4008]
    3b18:	ldr	x0, [x0]
    3b1c:	bl	2350 <PyErr_SetString@plt>
    3b20:	b	3ae4 <_PyDict_SetItemId@plt+0x14a4>
    3b24:	ldr	x1, [x21, #4056]
    3b28:	ldr	x0, [sp, #64]
    3b2c:	cmp	x0, x1
    3b30:	b.ne	3b78 <_PyDict_SetItemId@plt+0x1538>  // b.any
    3b34:	adrp	x0, 2000 <memcpy@plt-0x200>
    3b38:	add	x0, x0, #0x72c
    3b3c:	str	x0, [x19, #16]
    3b40:	adrp	x0, 2000 <memcpy@plt-0x200>
    3b44:	add	x0, x0, #0x724
    3b48:	str	x0, [x19, #24]
    3b4c:	add	x0, x19, #0x10
    3b50:	str	xzr, [x19, #32]
    3b54:	str	x0, [x19, #88]
    3b58:	bl	2500 <PyThread_allocate_lock@plt>
    3b5c:	str	x0, [x19, #184]
    3b60:	cbnz	x0, 3ba0 <_PyDict_SetItemId@plt+0x1560>
    3b64:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3b68:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3b6c:	add	x1, x1, #0x92a
    3b70:	ldr	x0, [x0, #4000]
    3b74:	b	3b18 <_PyDict_SetItemId@plt+0x14d8>
    3b78:	ldr	x2, [sp, #72]
    3b7c:	cmp	x2, x1
    3b80:	b.eq	3b90 <_PyDict_SetItemId@plt+0x1550>  // b.none
    3b84:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3b88:	add	x1, x1, #0x9a5
    3b8c:	b	3b10 <_PyDict_SetItemId@plt+0x14d0>
    3b90:	add	x1, sp, #0x3c
    3b94:	bl	2968 <_PyDict_SetItemId@plt+0x328>
    3b98:	cbnz	w0, 3b34 <_PyDict_SetItemId@plt+0x14f4>
    3b9c:	b	3ae4 <_PyDict_SetItemId@plt+0x14a4>
    3ba0:	ldr	w2, [sp, #52]
    3ba4:	str	wzr, [x19, #176]
    3ba8:	cmp	w2, #0x2
    3bac:	b.eq	3c54 <_PyDict_SetItemId@plt+0x1614>  // b.none
    3bb0:	cmp	w2, #0x3
    3bb4:	b.eq	3d34 <_PyDict_SetItemId@plt+0x16f4>  // b.none
    3bb8:	cmp	w2, #0x1
    3bbc:	b.ne	3da0 <_PyDict_SetItemId@plt+0x1760>  // b.any
    3bc0:	ldr	w0, [sp, #56]
    3bc4:	cmn	w0, #0x1
    3bc8:	b.ne	3bd4 <_PyDict_SetItemId@plt+0x1594>  // b.any
    3bcc:	mov	w0, #0x4                   	// #4
    3bd0:	str	w0, [sp, #56]
    3bd4:	ldr	x21, [x21, #4056]
    3bd8:	add	x20, x19, #0x28
    3bdc:	ldr	x1, [sp, #72]
    3be0:	ldr	w22, [sp, #56]
    3be4:	cmp	x1, x21
    3be8:	b.ne	3c20 <_PyDict_SetItemId@plt+0x15e0>  // b.any
    3bec:	ldr	w1, [sp, #60]
    3bf0:	mov	x0, x20
    3bf4:	mov	w2, w22
    3bf8:	bl	2330 <lzma_easy_encoder@plt>
    3bfc:	mov	w20, w0
    3c00:	mov	w0, w20
    3c04:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    3c08:	cbnz	w0, 3cb8 <_PyDict_SetItemId@plt+0x1678>
    3c0c:	mov	w0, #0x0                   	// #0
    3c10:	ldp	x19, x20, [sp, #16]
    3c14:	ldp	x21, x22, [sp, #32]
    3c18:	ldp	x29, x30, [sp], #192
    3c1c:	ret
    3c20:	add	x21, sp, #0x50
    3c24:	mov	x0, x21
    3c28:	bl	365c <_PyDict_SetItemId@plt+0x101c>
    3c2c:	cmn	w0, #0x1
    3c30:	b.eq	3cb8 <_PyDict_SetItemId@plt+0x1678>  // b.none
    3c34:	mov	w2, w22
    3c38:	mov	x1, x21
    3c3c:	mov	x0, x20
    3c40:	bl	25d0 <lzma_stream_encoder@plt>
    3c44:	mov	w20, w0
    3c48:	mov	x0, x21
    3c4c:	bl	280c <_PyDict_SetItemId@plt+0x1cc>
    3c50:	b	3c00 <_PyDict_SetItemId@plt+0x15c0>
    3c54:	ldr	x21, [x21, #4056]
    3c58:	add	x20, x19, #0x28
    3c5c:	ldr	x1, [sp, #72]
    3c60:	cmp	x1, x21
    3c64:	add	x21, sp, #0x50
    3c68:	b.ne	3cc8 <_PyDict_SetItemId@plt+0x1688>  // b.any
    3c6c:	ldr	w22, [sp, #60]
    3c70:	mov	x0, x21
    3c74:	mov	w1, w22
    3c78:	bl	2610 <lzma_lzma_preset@plt>
    3c7c:	tst	w0, #0xff
    3c80:	b.eq	3ca0 <_PyDict_SetItemId@plt+0x1660>  // b.none
    3c84:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    3c88:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3c8c:	mov	w2, w22
    3c90:	add	x1, x1, #0x7ad
    3c94:	ldr	x0, [x0, #2488]
    3c98:	bl	25b0 <PyErr_Format@plt>
    3c9c:	b	3cb8 <_PyDict_SetItemId@plt+0x1678>
    3ca0:	mov	x0, x20
    3ca4:	mov	x1, x21
    3ca8:	bl	2550 <lzma_alone_encoder@plt>
    3cac:	mov	w20, w0
    3cb0:	bl	2480 <PyErr_Occurred@plt>
    3cb4:	cbz	x0, 3c00 <_PyDict_SetItemId@plt+0x15c0>
    3cb8:	ldr	x0, [x19, #184]
    3cbc:	bl	2630 <PyThread_free_lock@plt>
    3cc0:	str	xzr, [x19, #184]
    3cc4:	b	3ae4 <_PyDict_SetItemId@plt+0x14a4>
    3cc8:	mov	x0, x21
    3ccc:	bl	365c <_PyDict_SetItemId@plt+0x101c>
    3cd0:	cmn	w0, #0x1
    3cd4:	b.eq	3cb8 <_PyDict_SetItemId@plt+0x1678>  // b.none
    3cd8:	ldr	x1, [sp, #80]
    3cdc:	mov	x0, #0x1                   	// #1
    3ce0:	movk	x0, #0x4000, lsl #48
    3ce4:	cmp	x1, x0
    3ce8:	b.ne	3d14 <_PyDict_SetItemId@plt+0x16d4>  // b.any
    3cec:	ldr	x0, [sp, #96]
    3cf0:	cmn	x0, #0x1
    3cf4:	b.ne	3d14 <_PyDict_SetItemId@plt+0x16d4>  // b.any
    3cf8:	ldr	x1, [sp, #88]
    3cfc:	mov	x0, x20
    3d00:	bl	2550 <lzma_alone_encoder@plt>
    3d04:	mov	w20, w0
    3d08:	mov	x0, x21
    3d0c:	bl	280c <_PyDict_SetItemId@plt+0x1cc>
    3d10:	b	3cb0 <_PyDict_SetItemId@plt+0x1670>
    3d14:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3d18:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3d1c:	mov	w20, #0xb                   	// #11
    3d20:	add	x1, x1, #0x9d1
    3d24:	ldr	x0, [x0, #4008]
    3d28:	ldr	x0, [x0]
    3d2c:	bl	2350 <PyErr_SetString@plt>
    3d30:	b	3d08 <_PyDict_SetItemId@plt+0x16c8>
    3d34:	ldr	x21, [x21, #4056]
    3d38:	add	x20, x19, #0x28
    3d3c:	ldr	x1, [sp, #72]
    3d40:	cmp	x1, x21
    3d44:	b.ne	3d64 <_PyDict_SetItemId@plt+0x1724>  // b.any
    3d48:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3d4c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3d50:	add	x1, x1, #0x8d8
    3d54:	ldr	x0, [x0, #4008]
    3d58:	ldr	x0, [x0]
    3d5c:	bl	2350 <PyErr_SetString@plt>
    3d60:	b	3cb8 <_PyDict_SetItemId@plt+0x1678>
    3d64:	add	x21, sp, #0x50
    3d68:	mov	x0, x21
    3d6c:	bl	365c <_PyDict_SetItemId@plt+0x101c>
    3d70:	cmn	w0, #0x1
    3d74:	b.eq	3cb8 <_PyDict_SetItemId@plt+0x1678>  // b.none
    3d78:	mov	x1, x21
    3d7c:	mov	x0, x20
    3d80:	bl	2370 <lzma_raw_encoder@plt>
    3d84:	mov	w20, w0
    3d88:	mov	x0, x21
    3d8c:	bl	280c <_PyDict_SetItemId@plt+0x1cc>
    3d90:	mov	w0, w20
    3d94:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    3d98:	cbz	w0, 3c10 <_PyDict_SetItemId@plt+0x15d0>
    3d9c:	b	3cb8 <_PyDict_SetItemId@plt+0x1678>
    3da0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3da4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3da8:	add	x1, x1, #0x942
    3dac:	ldr	x0, [x0, #4008]
    3db0:	ldr	x0, [x0]
    3db4:	b	3c98 <_PyDict_SetItemId@plt+0x1658>
    3db8:	stp	x29, x30, [sp, #-144]!
    3dbc:	cmp	x2, #0x2
    3dc0:	mov	x29, sp
    3dc4:	stp	x19, x20, [sp, #16]
    3dc8:	mov	x20, x1
    3dcc:	stp	x21, x22, [sp, #32]
    3dd0:	stp	xzr, xzr, [sp, #64]
    3dd4:	stp	xzr, xzr, [sp, #80]
    3dd8:	stp	xzr, xzr, [sp, #96]
    3ddc:	stp	xzr, xzr, [sp, #112]
    3de0:	stp	xzr, xzr, [sp, #128]
    3de4:	b.ne	3e4c <_PyDict_SetItemId@plt+0x180c>  // b.any
    3de8:	ldr	x0, [x20]
    3dec:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3df0:	mov	x21, x0
    3df4:	bl	2480 <PyErr_Occurred@plt>
    3df8:	mov	x19, x0
    3dfc:	cbnz	x0, 3e68 <_PyDict_SetItemId@plt+0x1828>
    3e00:	ldr	x0, [x20, #8]
    3e04:	add	x22, sp, #0x40
    3e08:	mov	x1, x22
    3e0c:	mov	w2, #0x0                   	// #0
    3e10:	bl	2560 <PyObject_GetBuffer@plt>
    3e14:	cbnz	w0, 3e68 <_PyDict_SetItemId@plt+0x1828>
    3e18:	mov	x0, x22
    3e1c:	mov	w1, #0x43                  	// #67
    3e20:	bl	22d0 <PyBuffer_IsContiguous@plt>
    3e24:	cbnz	w0, 3e90 <_PyDict_SetItemId@plt+0x1850>
    3e28:	ldr	x3, [x20, #8]
    3e2c:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3e30:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3e34:	add	x2, x2, #0x6b6
    3e38:	add	x1, x1, #0xa31
    3e3c:	adrp	x0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3e40:	add	x0, x0, #0xa17
    3e44:	bl	2400 <_PyArg_BadArgument@plt>
    3e48:	b	3e6c <_PyDict_SetItemId@plt+0x182c>
    3e4c:	mov	x1, x2
    3e50:	mov	x3, #0x2                   	// #2
    3e54:	adrp	x0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3e58:	mov	x2, x3
    3e5c:	add	x0, x0, #0xa17
    3e60:	bl	2460 <_PyArg_CheckPositional@plt>
    3e64:	cbnz	w0, 3de8 <_PyDict_SetItemId@plt+0x17a8>
    3e68:	mov	x19, #0x0                   	// #0
    3e6c:	ldr	x0, [sp, #72]
    3e70:	cbz	x0, 3e7c <_PyDict_SetItemId@plt+0x183c>
    3e74:	add	x0, sp, #0x40
    3e78:	bl	2290 <PyBuffer_Release@plt>
    3e7c:	mov	x0, x19
    3e80:	ldp	x19, x20, [sp, #16]
    3e84:	ldp	x21, x22, [sp, #32]
    3e88:	ldp	x29, x30, [sp], #144
    3e8c:	ret
    3e90:	ldr	x2, [sp, #64]
    3e94:	mov	x1, #0x0                   	// #0
    3e98:	ldr	x3, [sp, #80]
    3e9c:	add	x0, sp, #0x30
    3ea0:	str	x21, [sp, #48]
    3ea4:	bl	2470 <lzma_properties_decode@plt>
    3ea8:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    3eac:	cbnz	w0, 3e6c <_PyDict_SetItemId@plt+0x182c>
    3eb0:	bl	2540 <PyDict_New@plt>
    3eb4:	mov	x19, x0
    3eb8:	cbz	x0, 3f24 <_PyDict_SetItemId@plt+0x18e4>
    3ebc:	ldr	x2, [sp, #48]
    3ec0:	adrp	x20, 17000 <PyInit__lzma@@Base+0x12ef8>
    3ec4:	add	x21, x20, #0x570
    3ec8:	add	x1, x21, #0x130
    3ecc:	bl	320c <_PyDict_SetItemId@plt+0xbcc>
    3ed0:	cmn	w0, #0x1
    3ed4:	b.eq	3f18 <_PyDict_SetItemId@plt+0x18d8>  // b.none
    3ed8:	ldr	x2, [sp, #48]
    3edc:	cmp	x2, #0x21
    3ee0:	b.eq	3f9c <_PyDict_SetItemId@plt+0x195c>  // b.none
    3ee4:	b.hi	3f30 <_PyDict_SetItemId@plt+0x18f0>  // b.pmore
    3ee8:	cmp	x2, #0x3
    3eec:	b.eq	3fac <_PyDict_SetItemId@plt+0x196c>  // b.none
    3ef0:	sub	x0, x2, #0x4
    3ef4:	cmp	x0, #0x5
    3ef8:	b.hi	3fbc <_PyDict_SetItemId@plt+0x197c>  // b.pmore
    3efc:	ldr	x0, [sp, #56]
    3f00:	add	x1, x21, #0x148
    3f04:	ldr	w2, [x0]
    3f08:	mov	x0, x19
    3f0c:	bl	320c <_PyDict_SetItemId@plt+0xbcc>
    3f10:	cmn	w0, #0x1
    3f14:	b.ne	3f24 <_PyDict_SetItemId@plt+0x18e4>  // b.any
    3f18:	mov	x0, x19
    3f1c:	mov	x19, #0x0                   	// #0
    3f20:	bl	29c4 <_PyDict_SetItemId@plt+0x384>
    3f24:	ldr	x0, [sp, #56]
    3f28:	bl	24f0 <free@plt>
    3f2c:	b	3e6c <_PyDict_SetItemId@plt+0x182c>
    3f30:	mov	x0, #0x1                   	// #1
    3f34:	movk	x0, #0x4000, lsl #48
    3f38:	cmp	x2, x0
    3f3c:	b.ne	3fbc <_PyDict_SetItemId@plt+0x197c>  // b.any
    3f40:	ldr	x22, [sp, #56]
    3f44:	add	x1, x21, #0x160
    3f48:	mov	x0, x19
    3f4c:	ldr	w2, [x22, #20]
    3f50:	bl	320c <_PyDict_SetItemId@plt+0xbcc>
    3f54:	cmn	w0, #0x1
    3f58:	b.eq	3f18 <_PyDict_SetItemId@plt+0x18d8>  // b.none
    3f5c:	ldr	w2, [x22, #24]
    3f60:	add	x20, x20, #0x570
    3f64:	add	x1, x20, #0x178
    3f68:	mov	x0, x19
    3f6c:	bl	320c <_PyDict_SetItemId@plt+0xbcc>
    3f70:	cmn	w0, #0x1
    3f74:	b.eq	3f18 <_PyDict_SetItemId@plt+0x18d8>  // b.none
    3f78:	ldr	w2, [x22, #28]
    3f7c:	add	x1, x20, #0x190
    3f80:	mov	x0, x19
    3f84:	bl	320c <_PyDict_SetItemId@plt+0xbcc>
    3f88:	cmn	w0, #0x1
    3f8c:	b.eq	3f18 <_PyDict_SetItemId@plt+0x18d8>  // b.none
    3f90:	ldr	w2, [x22]
    3f94:	add	x1, x20, #0x1a8
    3f98:	b	3f08 <_PyDict_SetItemId@plt+0x18c8>
    3f9c:	ldr	x0, [sp, #56]
    3fa0:	add	x1, x21, #0x1c0
    3fa4:	ldr	w2, [x0]
    3fa8:	b	3f08 <_PyDict_SetItemId@plt+0x18c8>
    3fac:	ldr	x0, [sp, #56]
    3fb0:	add	x1, x21, #0x1d8
    3fb4:	ldr	w2, [x0, #4]
    3fb8:	b	3f08 <_PyDict_SetItemId@plt+0x18c8>
    3fbc:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    3fc0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3fc4:	add	x1, x1, #0x860
    3fc8:	ldr	x0, [x0, #4008]
    3fcc:	ldr	x0, [x0]
    3fd0:	bl	25b0 <PyErr_Format@plt>
    3fd4:	b	3f18 <_PyDict_SetItemId@plt+0x18d8>
    3fd8:	stp	x29, x30, [sp, #-80]!
    3fdc:	mov	x0, x1
    3fe0:	mov	x1, #0xffffffffffffffff    	// #-1
    3fe4:	mov	x29, sp
    3fe8:	stp	x19, x20, [sp, #16]
    3fec:	stp	x1, xzr, [sp, #48]
    3ff0:	add	x1, sp, #0x30
    3ff4:	bl	32c4 <_PyDict_SetItemId@plt+0xc84>
    3ff8:	cbz	w0, 4028 <_PyDict_SetItemId@plt+0x19e8>
    3ffc:	ldp	x0, x1, [sp, #48]
    4000:	add	x20, sp, #0x40
    4004:	stp	x0, x1, [sp, #64]
    4008:	mov	x1, x20
    400c:	add	x0, sp, #0x2c
    4010:	bl	23b0 <lzma_properties_size@plt>
    4014:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    4018:	cbz	w0, 4030 <_PyDict_SetItemId@plt+0x19f0>
    401c:	mov	x19, #0x0                   	// #0
    4020:	mov	x0, x19
    4024:	bl	29dc <_PyDict_SetItemId@plt+0x39c>
    4028:	mov	x19, #0x0                   	// #0
    402c:	b	4058 <_PyDict_SetItemId@plt+0x1a18>
    4030:	ldr	w1, [sp, #44]
    4034:	mov	x0, #0x0                   	// #0
    4038:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    403c:	mov	x19, x0
    4040:	cbz	x0, 401c <_PyDict_SetItemId@plt+0x19dc>
    4044:	add	x1, x0, #0x20
    4048:	mov	x0, x20
    404c:	bl	2570 <lzma_properties_encode@plt>
    4050:	bl	2750 <_PyDict_SetItemId@plt+0x110>
    4054:	cbnz	w0, 4020 <_PyDict_SetItemId@plt+0x19e0>
    4058:	ldr	x0, [sp, #48]
    405c:	cmn	x0, #0x1
    4060:	b.eq	406c <_PyDict_SetItemId@plt+0x1a2c>  // b.none
    4064:	ldr	x0, [sp, #56]
    4068:	bl	2270 <PyMem_Free@plt>
    406c:	mov	x0, x19
    4070:	ldp	x19, x20, [sp, #16]
    4074:	ldp	x29, x30, [sp], #80
    4078:	ret
    407c:	stp	x29, x30, [sp, #-32]!
    4080:	mov	x29, sp
    4084:	ldr	x0, [x1, #8]
    4088:	str	x19, [sp, #16]
    408c:	mov	x19, x1
    4090:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11ef8>
    4094:	ldr	x1, [x1, #3984]
    4098:	cmp	x0, x1
    409c:	b.ne	40c8 <_PyDict_SetItemId@plt+0x1a88>  // b.any
    40a0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11ef8>
    40a4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    40a8:	add	x1, x1, #0x708
    40ac:	ldr	x0, [x0, #4016]
    40b0:	ldr	x0, [x0]
    40b4:	bl	2350 <PyErr_SetString@plt>
    40b8:	mov	x0, #0x0                   	// #0
    40bc:	ldr	x19, [sp, #16]
    40c0:	ldp	x29, x30, [sp], #32
    40c4:	ret
    40c8:	bl	25a0 <PyType_IsSubtype@plt>
    40cc:	cbnz	w0, 40a0 <_PyDict_SetItemId@plt+0x1a60>
    40d0:	mov	x0, x19
    40d4:	bl	2600 <_PyLong_AsInt@plt>
    40d8:	mov	w19, w0
    40dc:	cmn	w0, #0x1
    40e0:	b.eq	40fc <_PyDict_SetItemId@plt+0x1abc>  // b.none
    40e4:	mov	w0, w19
    40e8:	bl	25c0 <lzma_check_is_supported@plt>
    40ec:	ldr	x19, [sp, #16]
    40f0:	and	x0, x0, #0xff
    40f4:	ldp	x29, x30, [sp], #32
    40f8:	b	2430 <PyBool_FromLong@plt>
    40fc:	bl	2480 <PyErr_Occurred@plt>
    4100:	cbz	x0, 40e4 <_PyDict_SetItemId@plt+0x1aa4>
    4104:	b	40b8 <_PyDict_SetItemId@plt+0x1a78>

0000000000004108 <PyInit__lzma@@Base>:
    4108:	stp	x29, x30, [sp, #-48]!
    410c:	mov	x0, #0x0                   	// #0
    4110:	mov	x29, sp
    4114:	stp	x19, x20, [sp, #16]
    4118:	str	x21, [sp, #32]
    411c:	bl	2450 <PyTuple_New@plt>
    4120:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12ef8>
    4124:	add	x2, x1, #0x9b8
    4128:	str	x0, [x2, #8]
    412c:	cbz	x0, 4528 <PyInit__lzma@@Base+0x420>
    4130:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12ef8>
    4134:	add	x0, x0, #0x570
    4138:	mov	x20, x1
    413c:	add	x0, x0, #0x1f0
    4140:	mov	w1, #0x3f5                 	// #1013
    4144:	bl	2490 <PyModule_Create2@plt>
    4148:	mov	x19, x0
    414c:	cbz	x0, 4528 <PyInit__lzma@@Base+0x420>
    4150:	mov	x2, #0x0                   	// #0
    4154:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4158:	add	x1, x1, #0xa3c
    415c:	bl	2220 <PyModule_AddIntConstant@plt>
    4160:	cmn	w0, #0x1
    4164:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4168:	mov	x0, x19
    416c:	mov	x2, #0x1                   	// #1
    4170:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4174:	add	x1, x1, #0x99b
    4178:	bl	2220 <PyModule_AddIntConstant@plt>
    417c:	cmn	w0, #0x1
    4180:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4184:	mov	x0, x19
    4188:	mov	x2, #0x2                   	// #2
    418c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4190:	add	x1, x1, #0xa48
    4194:	bl	2220 <PyModule_AddIntConstant@plt>
    4198:	cmn	w0, #0x1
    419c:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    41a0:	mov	x0, x19
    41a4:	mov	x2, #0x3                   	// #3
    41a8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    41ac:	add	x1, x1, #0x8cd
    41b0:	bl	2220 <PyModule_AddIntConstant@plt>
    41b4:	cmn	w0, #0x1
    41b8:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    41bc:	mov	x0, x19
    41c0:	mov	x2, #0x0                   	// #0
    41c4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    41c8:	add	x1, x1, #0xa55
    41cc:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    41d0:	cmn	w0, #0x1
    41d4:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    41d8:	mov	x0, x19
    41dc:	mov	x2, #0x1                   	// #1
    41e0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    41e4:	add	x1, x1, #0xa60
    41e8:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    41ec:	cmn	w0, #0x1
    41f0:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    41f4:	mov	x0, x19
    41f8:	mov	x2, #0x4                   	// #4
    41fc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4200:	add	x1, x1, #0xa6c
    4204:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4208:	cmn	w0, #0x1
    420c:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4210:	mov	x0, x19
    4214:	mov	x2, #0xa                   	// #10
    4218:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    421c:	add	x1, x1, #0xa78
    4220:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4224:	cmn	w0, #0x1
    4228:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    422c:	mov	x0, x19
    4230:	mov	x2, #0xf                   	// #15
    4234:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4238:	add	x1, x1, #0xa85
    423c:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4240:	cmn	w0, #0x1
    4244:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4248:	mov	x0, x19
    424c:	mov	x2, #0x10                  	// #16
    4250:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4254:	add	x1, x1, #0xa92
    4258:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    425c:	cmn	w0, #0x1
    4260:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4264:	mov	x2, #0x1                   	// #1
    4268:	mov	x0, x19
    426c:	movk	x2, #0x4000, lsl #48
    4270:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4274:	add	x1, x1, #0xaa0
    4278:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    427c:	cmn	w0, #0x1
    4280:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4284:	mov	x0, x19
    4288:	mov	x2, #0x21                  	// #33
    428c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4290:	add	x1, x1, #0xaad
    4294:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4298:	cmn	w0, #0x1
    429c:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    42a0:	mov	x0, x19
    42a4:	mov	x2, #0x3                   	// #3
    42a8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    42ac:	add	x1, x1, #0xaba
    42b0:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    42b4:	cmn	w0, #0x1
    42b8:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    42bc:	mov	x0, x19
    42c0:	mov	x2, #0x4                   	// #4
    42c4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    42c8:	add	x1, x1, #0xac7
    42cc:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    42d0:	cmn	w0, #0x1
    42d4:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    42d8:	mov	x0, x19
    42dc:	mov	x2, #0x6                   	// #6
    42e0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    42e4:	add	x1, x1, #0xad2
    42e8:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    42ec:	cmn	w0, #0x1
    42f0:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    42f4:	mov	x0, x19
    42f8:	mov	x2, #0x7                   	// #7
    42fc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4300:	add	x1, x1, #0xade
    4304:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4308:	cmn	w0, #0x1
    430c:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4310:	mov	x0, x19
    4314:	mov	x2, #0x8                   	// #8
    4318:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    431c:	add	x1, x1, #0xae9
    4320:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4324:	cmn	w0, #0x1
    4328:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    432c:	mov	x0, x19
    4330:	mov	x2, #0x9                   	// #9
    4334:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4338:	add	x1, x1, #0xaf9
    433c:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4340:	cmn	w0, #0x1
    4344:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4348:	mov	x0, x19
    434c:	mov	x2, #0x5                   	// #5
    4350:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4354:	add	x1, x1, #0xb06
    4358:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    435c:	cmn	w0, #0x1
    4360:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4364:	mov	x0, x19
    4368:	mov	x2, #0x3                   	// #3
    436c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4370:	add	x1, x1, #0xb15
    4374:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4378:	cmn	w0, #0x1
    437c:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4380:	mov	x0, x19
    4384:	mov	x2, #0x4                   	// #4
    4388:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    438c:	add	x1, x1, #0xb1c
    4390:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4394:	cmn	w0, #0x1
    4398:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    439c:	mov	x0, x19
    43a0:	mov	x2, #0x12                  	// #18
    43a4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    43a8:	add	x1, x1, #0xb23
    43ac:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    43b0:	cmn	w0, #0x1
    43b4:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    43b8:	mov	x0, x19
    43bc:	mov	x2, #0x13                  	// #19
    43c0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    43c4:	add	x1, x1, #0xb2a
    43c8:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    43cc:	cmn	w0, #0x1
    43d0:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    43d4:	mov	x0, x19
    43d8:	mov	x2, #0x14                  	// #20
    43dc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    43e0:	add	x1, x1, #0xb31
    43e4:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    43e8:	cmn	w0, #0x1
    43ec:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    43f0:	mov	x0, x19
    43f4:	mov	x2, #0x1                   	// #1
    43f8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    43fc:	add	x1, x1, #0xb38
    4400:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4404:	cmn	w0, #0x1
    4408:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    440c:	mov	x0, x19
    4410:	mov	x2, #0x2                   	// #2
    4414:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4418:	add	x1, x1, #0xb42
    441c:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4420:	cmn	w0, #0x1
    4424:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4428:	mov	x0, x19
    442c:	mov	x2, #0x6                   	// #6
    4430:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4434:	add	x1, x1, #0xb4e
    4438:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    443c:	cmn	w0, #0x1
    4440:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4444:	mov	x0, x19
    4448:	mov	x2, #0x80000000            	// #2147483648
    444c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4450:	add	x1, x1, #0xb5d
    4454:	bl	326c <_PyDict_SetItemId@plt+0xc2c>
    4458:	cmn	w0, #0x1
    445c:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4460:	mov	x2, #0x0                   	// #0
    4464:	mov	x3, #0x0                   	// #0
    4468:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    446c:	adrp	x0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4470:	add	x1, x1, #0xb6c
    4474:	add	x0, x0, #0xb84
    4478:	bl	2310 <PyErr_NewExceptionWithDoc@plt>
    447c:	str	x0, [x20, #2488]
    4480:	mov	x2, x0
    4484:	cbz	x0, 4528 <PyInit__lzma@@Base+0x420>
    4488:	ldr	x0, [x0]
    448c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4490:	add	x1, x1, #0xb8a
    4494:	add	x0, x0, #0x1
    4498:	str	x0, [x2]
    449c:	mov	x0, x19
    44a0:	bl	2590 <PyModule_AddObject@plt>
    44a4:	cmn	w0, #0x1
    44a8:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    44ac:	adrp	x21, 17000 <PyInit__lzma@@Base+0x12ef8>
    44b0:	add	x20, x21, #0x230
    44b4:	mov	x0, x20
    44b8:	bl	23e0 <PyType_Ready@plt>
    44bc:	cmn	w0, #0x1
    44c0:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    44c4:	ldr	x0, [x21, #560]
    44c8:	mov	x2, x20
    44cc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    44d0:	add	x1, x1, #0xc5f
    44d4:	add	x0, x0, #0x1
    44d8:	str	x0, [x21, #560]
    44dc:	mov	x0, x19
    44e0:	bl	2590 <PyModule_AddObject@plt>
    44e4:	cmn	w0, #0x1
    44e8:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    44ec:	add	x21, x20, #0x1a0
    44f0:	mov	x0, x21
    44f4:	bl	23e0 <PyType_Ready@plt>
    44f8:	cmn	w0, #0x1
    44fc:	b.eq	4528 <PyInit__lzma@@Base+0x420>  // b.none
    4500:	ldr	x0, [x20, #416]
    4504:	mov	x2, x21
    4508:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    450c:	add	x1, x1, #0xc2c
    4510:	add	x0, x0, #0x1
    4514:	str	x0, [x20, #416]
    4518:	mov	x0, x19
    451c:	bl	2590 <PyModule_AddObject@plt>
    4520:	cmn	w0, #0x1
    4524:	b.ne	452c <PyInit__lzma@@Base+0x424>  // b.any
    4528:	mov	x19, #0x0                   	// #0
    452c:	mov	x0, x19
    4530:	ldp	x19, x20, [sp, #16]
    4534:	ldr	x21, [sp, #32]
    4538:	ldp	x29, x30, [sp], #48
    453c:	ret

Disassembly of section .fini:

0000000000004540 <.fini>:
    4540:	stp	x29, x30, [sp, #-16]!
    4544:	mov	x29, sp
    4548:	ldp	x29, x30, [sp], #16
    454c:	ret
