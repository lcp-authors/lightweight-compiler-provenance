
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sulogin-shell_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400b80 <_init>:
  400b80:	stp	x29, x30, [sp, #-16]!
  400b84:	mov	x29, sp
  400b88:	bl	400d78 <call_weak_fn>
  400b8c:	ldp	x29, x30, [sp], #16
  400b90:	ret

Disassembly of section .plt:

0000000000400b98 <__libc_start_main@plt-0x20>:
  400b98:	stp	x16, x30, [sp, #-16]!
  400b9c:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400ba0:	ldr	x17, [x16, #3904]
  400ba4:	add	x16, x16, #0xf40
  400ba8:	br	x17
  400bac:	nop
  400bb0:	nop
  400bb4:	nop

0000000000400bb8 <__libc_start_main@plt>:
  400bb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400bbc:	ldr	x17, [x16, #3912]
  400bc0:	add	x16, x16, #0xf48
  400bc4:	br	x17

0000000000400bc8 <abort@plt>:
  400bc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400bcc:	ldr	x17, [x16, #3920]
  400bd0:	add	x16, x16, #0xf50
  400bd4:	br	x17

0000000000400bd8 <__gmon_start__@plt>:
  400bd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400bdc:	ldr	x17, [x16, #3928]
  400be0:	add	x16, x16, #0xf58
  400be4:	br	x17

0000000000400be8 <log_setup_service@plt>:
  400be8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400bec:	ldr	x17, [x16, #3936]
  400bf0:	add	x16, x16, #0xf60
  400bf4:	br	x17

0000000000400bf8 <getenv_bool@plt>:
  400bf8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400bfc:	ldr	x17, [x16, #3944]
  400c00:	add	x16, x16, #0xf68
  400c04:	br	x17

0000000000400c08 <bus_connect_system_systemd@plt>:
  400c08:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c0c:	ldr	x17, [x16, #3952]
  400c10:	add	x16, x16, #0xf70
  400c14:	br	x17

0000000000400c18 <log_get_max_level_realm@plt>:
  400c18:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c1c:	ldr	x17, [x16, #3960]
  400c20:	add	x16, x16, #0xf78
  400c24:	br	x17

0000000000400c28 <log_internal_realm@plt>:
  400c28:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c2c:	ldr	x17, [x16, #3968]
  400c30:	add	x16, x16, #0xf80
  400c34:	br	x17

0000000000400c38 <abs@plt>:
  400c38:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c3c:	ldr	x17, [x16, #3976]
  400c40:	add	x16, x16, #0xf88
  400c44:	br	x17

0000000000400c48 <sd_bus_flush_close_unref@plt>:
  400c48:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c4c:	ldr	x17, [x16, #3984]
  400c50:	add	x16, x16, #0xf90
  400c54:	br	x17

0000000000400c58 <printf@plt>:
  400c58:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c5c:	ldr	x17, [x16, #3992]
  400c60:	add	x16, x16, #0xf98
  400c64:	br	x17

0000000000400c68 <fflush@plt>:
  400c68:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c6c:	ldr	x17, [x16, #4000]
  400c70:	add	x16, x16, #0xfa0
  400c74:	br	x17

0000000000400c78 <execv@plt>:
  400c78:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c7c:	ldr	x17, [x16, #4008]
  400c80:	add	x16, x16, #0xfa8
  400c84:	br	x17

0000000000400c88 <__errno_location@plt>:
  400c88:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c8c:	ldr	x17, [x16, #4016]
  400c90:	add	x16, x16, #0xfb0
  400c94:	br	x17

0000000000400c98 <_exit@plt>:
  400c98:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400c9c:	ldr	x17, [x16, #4024]
  400ca0:	add	x16, x16, #0xfb8
  400ca4:	br	x17

0000000000400ca8 <wait_for_terminate_and_check@plt>:
  400ca8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400cac:	ldr	x17, [x16, #4032]
  400cb0:	add	x16, x16, #0xfc0
  400cb4:	br	x17

0000000000400cb8 <sd_bus_message_new_method_call@plt>:
  400cb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400cbc:	ldr	x17, [x16, #4040]
  400cc0:	add	x16, x16, #0xfc8
  400cc4:	br	x17

0000000000400cc8 <sd_bus_call@plt>:
  400cc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400ccc:	ldr	x17, [x16, #4048]
  400cd0:	add	x16, x16, #0xfd0
  400cd4:	br	x17

0000000000400cd8 <bus_error_message@plt>:
  400cd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400cdc:	ldr	x17, [x16, #4056]
  400ce0:	add	x16, x16, #0xfd8
  400ce4:	br	x17

0000000000400ce8 <sd_bus_error_free@plt>:
  400ce8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400cec:	ldr	x17, [x16, #4064]
  400cf0:	add	x16, x16, #0xfe0
  400cf4:	br	x17

0000000000400cf8 <sd_bus_call_method@plt>:
  400cf8:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400cfc:	ldr	x17, [x16, #4072]
  400d00:	add	x16, x16, #0xfe8
  400d04:	br	x17

0000000000400d08 <safe_fork_full@plt>:
  400d08:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400d0c:	ldr	x17, [x16, #4080]
  400d10:	add	x16, x16, #0xff0
  400d14:	br	x17

0000000000400d18 <sd_bus_message_unref@plt>:
  400d18:	adrp	x16, 41f000 <__FRAME_END__+0x1d468>
  400d1c:	ldr	x17, [x16, #4088]
  400d20:	add	x16, x16, #0xff8
  400d24:	br	x17

Disassembly of section .text:

0000000000400d28 <_start>:
  400d28:	mov	x29, #0x0                   	// #0
  400d2c:	mov	x30, #0x0                   	// #0
  400d30:	mov	x5, x0
  400d34:	ldr	x1, [sp]
  400d38:	add	x2, sp, #0x8
  400d3c:	mov	x6, sp
  400d40:	movz	x0, #0x0, lsl #48
  400d44:	movk	x0, #0x0, lsl #32
  400d48:	movk	x0, #0x40, lsl #16
  400d4c:	movk	x0, #0xef0
  400d50:	movz	x3, #0x0, lsl #48
  400d54:	movk	x3, #0x0, lsl #32
  400d58:	movk	x3, #0x40, lsl #16
  400d5c:	movk	x3, #0x1748
  400d60:	movz	x4, #0x0, lsl #48
  400d64:	movk	x4, #0x0, lsl #32
  400d68:	movk	x4, #0x40, lsl #16
  400d6c:	movk	x4, #0x17c8
  400d70:	bl	400bb8 <__libc_start_main@plt>
  400d74:	bl	400bc8 <abort@plt>

0000000000400d78 <call_weak_fn>:
  400d78:	adrp	x0, 41f000 <__FRAME_END__+0x1d468>
  400d7c:	ldr	x0, [x0, #3880]
  400d80:	cbz	x0, 400d88 <call_weak_fn+0x10>
  400d84:	b	400bd8 <__gmon_start__@plt>
  400d88:	ret

0000000000400d8c <deregister_tm_clones>:
  400d8c:	stp	x29, x30, [sp, #-32]!
  400d90:	mov	x29, sp
  400d94:	adrp	x0, 420000 <completed.8445>
  400d98:	add	x0, x0, #0x0
  400d9c:	str	x0, [sp, #24]
  400da0:	ldr	x0, [sp, #24]
  400da4:	str	x0, [sp, #24]
  400da8:	ldr	x1, [sp, #24]
  400dac:	adrp	x0, 420000 <completed.8445>
  400db0:	add	x0, x0, #0x0
  400db4:	cmp	x1, x0
  400db8:	b.eq	400df4 <deregister_tm_clones+0x68>  // b.none
  400dbc:	adrp	x0, 401000 <main+0x110>
  400dc0:	add	x0, x0, #0x7e0
  400dc4:	ldr	x0, [x0]
  400dc8:	str	x0, [sp, #16]
  400dcc:	ldr	x0, [sp, #16]
  400dd0:	str	x0, [sp, #16]
  400dd4:	ldr	x0, [sp, #16]
  400dd8:	cmp	x0, #0x0
  400ddc:	b.eq	400df8 <deregister_tm_clones+0x6c>  // b.none
  400de0:	ldr	x1, [sp, #16]
  400de4:	adrp	x0, 420000 <completed.8445>
  400de8:	add	x0, x0, #0x0
  400dec:	blr	x1
  400df0:	b	400df8 <deregister_tm_clones+0x6c>
  400df4:	nop
  400df8:	ldp	x29, x30, [sp], #32
  400dfc:	ret

0000000000400e00 <register_tm_clones>:
  400e00:	stp	x29, x30, [sp, #-48]!
  400e04:	mov	x29, sp
  400e08:	adrp	x0, 420000 <completed.8445>
  400e0c:	add	x0, x0, #0x0
  400e10:	str	x0, [sp, #40]
  400e14:	ldr	x0, [sp, #40]
  400e18:	str	x0, [sp, #40]
  400e1c:	ldr	x1, [sp, #40]
  400e20:	adrp	x0, 420000 <completed.8445>
  400e24:	add	x0, x0, #0x0
  400e28:	sub	x0, x1, x0
  400e2c:	asr	x0, x0, #3
  400e30:	lsr	x1, x0, #63
  400e34:	add	x0, x1, x0
  400e38:	asr	x0, x0, #1
  400e3c:	str	x0, [sp, #32]
  400e40:	ldr	x0, [sp, #32]
  400e44:	cmp	x0, #0x0
  400e48:	b.eq	400e88 <register_tm_clones+0x88>  // b.none
  400e4c:	adrp	x0, 401000 <main+0x110>
  400e50:	add	x0, x0, #0x7e8
  400e54:	ldr	x0, [x0]
  400e58:	str	x0, [sp, #24]
  400e5c:	ldr	x0, [sp, #24]
  400e60:	str	x0, [sp, #24]
  400e64:	ldr	x0, [sp, #24]
  400e68:	cmp	x0, #0x0
  400e6c:	b.eq	400e8c <register_tm_clones+0x8c>  // b.none
  400e70:	ldr	x2, [sp, #24]
  400e74:	ldr	x1, [sp, #32]
  400e78:	adrp	x0, 420000 <completed.8445>
  400e7c:	add	x0, x0, #0x0
  400e80:	blr	x2
  400e84:	b	400e8c <register_tm_clones+0x8c>
  400e88:	nop
  400e8c:	ldp	x29, x30, [sp], #48
  400e90:	ret

0000000000400e94 <__do_global_dtors_aux>:
  400e94:	stp	x29, x30, [sp, #-16]!
  400e98:	mov	x29, sp
  400e9c:	adrp	x0, 420000 <completed.8445>
  400ea0:	add	x0, x0, #0x0
  400ea4:	ldrb	w0, [x0]
  400ea8:	and	x0, x0, #0xff
  400eac:	cmp	x0, #0x0
  400eb0:	b.ne	400ecc <__do_global_dtors_aux+0x38>  // b.any
  400eb4:	bl	400d8c <deregister_tm_clones>
  400eb8:	adrp	x0, 420000 <completed.8445>
  400ebc:	add	x0, x0, #0x0
  400ec0:	mov	w1, #0x1                   	// #1
  400ec4:	strb	w1, [x0]
  400ec8:	b	400ed0 <__do_global_dtors_aux+0x3c>
  400ecc:	nop
  400ed0:	ldp	x29, x30, [sp], #16
  400ed4:	ret

0000000000400ed8 <frame_dummy>:
  400ed8:	stp	x29, x30, [sp, #-16]!
  400edc:	mov	x29, sp
  400ee0:	bl	400e00 <register_tm_clones>
  400ee4:	nop
  400ee8:	ldp	x29, x30, [sp], #16
  400eec:	ret

0000000000400ef0 <main>:
  400ef0:	sub	sp, sp, #0x80
  400ef4:	stp	x29, x30, [sp, #112]
  400ef8:	add	x29, sp, #0x70
  400efc:	adrp	x8, 401000 <main+0x110>
  400f00:	add	x8, x8, #0x7f8
  400f04:	mov	x9, xzr
  400f08:	adrp	x10, 401000 <main+0x110>
  400f0c:	add	x10, x10, #0x83d
  400f10:	add	x2, x10, #0x3
  400f14:	stur	wzr, [x29, #-4]
  400f18:	stur	w0, [x29, #-8]
  400f1c:	stur	x1, [x29, #-16]
  400f20:	ldr	q0, [x8]
  400f24:	stur	q0, [x29, #-48]
  400f28:	ldr	x8, [x8, #16]
  400f2c:	stur	x8, [x29, #-32]
  400f30:	str	x9, [sp, #56]
  400f34:	str	x2, [sp, #24]
  400f38:	bl	400be8 <log_setup_service@plt>
  400f3c:	ldur	w11, [x29, #-8]
  400f40:	cmp	w11, #0x1
  400f44:	b.le	400f58 <main+0x68>
  400f48:	ldur	x8, [x29, #-16]
  400f4c:	ldr	x8, [x8, #8]
  400f50:	str	x8, [sp, #16]
  400f54:	b	400f64 <main+0x74>
  400f58:	adrp	x8, 401000 <main+0x110>
  400f5c:	add	x8, x8, #0x81e
  400f60:	str	x8, [sp, #16]
  400f64:	ldr	x8, [sp, #16]
  400f68:	mov	x0, x8
  400f6c:	bl	4010c0 <print_mode>
  400f70:	adrp	x0, 401000 <main+0x110>
  400f74:	add	x0, x0, #0x81f
  400f78:	bl	400bf8 <getenv_bool@plt>
  400f7c:	cmp	w0, #0x0
  400f80:	cset	w9, le
  400f84:	tbnz	w9, #0, 400f98 <main+0xa8>
  400f88:	sub	x8, x29, #0x30
  400f8c:	adrp	x9, 401000 <main+0x110>
  400f90:	add	x9, x9, #0x835
  400f94:	str	x9, [x8, #8]
  400f98:	sub	x0, x29, #0x30
  400f9c:	bl	40110c <fork_wait>
  400fa0:	add	x8, sp, #0x38
  400fa4:	mov	x0, x8
  400fa8:	bl	400c08 <bus_connect_system_systemd@plt>
  400fac:	str	w0, [sp, #52]
  400fb0:	ldr	w9, [sp, #52]
  400fb4:	cmp	w9, #0x0
  400fb8:	cset	w9, ge  // ge = tcont
  400fbc:	tbnz	w9, #0, 401044 <main+0x154>
  400fc0:	mov	w8, #0x4                   	// #4
  400fc4:	str	w8, [sp, #48]
  400fc8:	ldr	w8, [sp, #52]
  400fcc:	str	w8, [sp, #44]
  400fd0:	str	wzr, [sp, #40]
  400fd4:	ldr	w0, [sp, #40]
  400fd8:	bl	400c18 <log_get_max_level_realm@plt>
  400fdc:	ldr	w8, [sp, #48]
  400fe0:	and	w8, w8, #0x7
  400fe4:	cmp	w0, w8
  400fe8:	b.lt	401020 <main+0x130>  // b.tstop
  400fec:	ldr	w8, [sp, #40]
  400ff0:	ldr	w9, [sp, #48]
  400ff4:	orr	w0, w9, w8, lsl #10
  400ff8:	ldr	w1, [sp, #44]
  400ffc:	ldr	x2, [sp, #24]
  401000:	mov	w3, #0x71                  	// #113
  401004:	adrp	x4, 401000 <main+0x110>
  401008:	add	x4, x4, #0x862
  40100c:	adrp	x5, 401000 <main+0x110>
  401010:	add	x5, x5, #0x867
  401014:	bl	400c28 <log_internal_realm@plt>
  401018:	str	w0, [sp, #12]
  40101c:	b	401034 <main+0x144>
  401020:	ldr	w0, [sp, #44]
  401024:	bl	400c38 <abs@plt>
  401028:	mov	w8, wzr
  40102c:	subs	w8, w8, w0, uxtb
  401030:	str	w8, [sp, #12]
  401034:	ldr	w8, [sp, #12]
  401038:	str	w8, [sp, #36]
  40103c:	str	wzr, [sp, #52]
  401040:	b	40105c <main+0x16c>
  401044:	ldr	x0, [sp, #56]
  401048:	bl	401238 <reload_manager>
  40104c:	ldr	x8, [sp, #56]
  401050:	mov	x0, x8
  401054:	bl	4014d4 <start_default_target>
  401058:	str	w0, [sp, #52]
  40105c:	ldr	w8, [sp, #52]
  401060:	mov	w9, wzr
  401064:	mov	w10, #0x1                   	// #1
  401068:	cmp	w8, #0x0
  40106c:	csel	w8, w9, w10, ge  // ge = tcont
  401070:	stur	w8, [x29, #-4]
  401074:	add	x0, sp, #0x38
  401078:	bl	40108c <sd_bus_flush_close_unrefp>
  40107c:	ldur	w0, [x29, #-4]
  401080:	ldp	x29, x30, [sp, #112]
  401084:	add	sp, sp, #0x80
  401088:	ret

000000000040108c <sd_bus_flush_close_unrefp>:
  40108c:	sub	sp, sp, #0x20
  401090:	stp	x29, x30, [sp, #16]
  401094:	add	x29, sp, #0x10
  401098:	str	x0, [sp, #8]
  40109c:	ldr	x8, [sp, #8]
  4010a0:	ldr	x8, [x8]
  4010a4:	cbz	x8, 4010b4 <sd_bus_flush_close_unrefp+0x28>
  4010a8:	ldr	x8, [sp, #8]
  4010ac:	ldr	x0, [x8]
  4010b0:	bl	400c48 <sd_bus_flush_close_unref@plt>
  4010b4:	ldp	x29, x30, [sp, #16]
  4010b8:	add	sp, sp, #0x20
  4010bc:	ret

00000000004010c0 <print_mode>:
  4010c0:	sub	sp, sp, #0x20
  4010c4:	stp	x29, x30, [sp, #16]
  4010c8:	add	x29, sp, #0x10
  4010cc:	adrp	x8, 401000 <main+0x110>
  4010d0:	add	x8, x8, #0x88a
  4010d4:	adrp	x9, 420000 <completed.8445>
  4010d8:	add	x9, x9, #0x8
  4010dc:	str	x0, [sp, #8]
  4010e0:	ldr	x1, [sp, #8]
  4010e4:	mov	x0, x8
  4010e8:	str	x9, [sp]
  4010ec:	bl	400c58 <printf@plt>
  4010f0:	ldr	x8, [sp]
  4010f4:	ldr	x9, [x8]
  4010f8:	mov	x0, x9
  4010fc:	bl	400c68 <fflush@plt>
  401100:	ldp	x29, x30, [sp, #16]
  401104:	add	sp, sp, #0x20
  401108:	ret

000000000040110c <fork_wait>:
  40110c:	sub	sp, sp, #0x50
  401110:	stp	x29, x30, [sp, #64]
  401114:	add	x29, sp, #0x40
  401118:	adrp	x8, 401000 <main+0x110>
  40111c:	add	x8, x8, #0x933
  401120:	mov	w1, #0x225                 	// #549
  401124:	adrp	x9, 401000 <main+0x110>
  401128:	add	x9, x9, #0x83d
  40112c:	add	x2, x9, #0x3
  401130:	sub	x9, x29, #0x14
  401134:	stur	x0, [x29, #-16]
  401138:	mov	x0, x8
  40113c:	str	x2, [sp, #16]
  401140:	mov	x2, x9
  401144:	bl	4016cc <safe_fork>
  401148:	stur	w0, [x29, #-24]
  40114c:	ldur	w10, [x29, #-24]
  401150:	cmp	w10, #0x0
  401154:	cset	w10, ge  // ge = tcont
  401158:	tbnz	w10, #0, 401168 <fork_wait+0x5c>
  40115c:	ldur	w8, [x29, #-24]
  401160:	stur	w8, [x29, #-4]
  401164:	b	401228 <fork_wait+0x11c>
  401168:	ldur	w8, [x29, #-24]
  40116c:	cbnz	w8, 401210 <fork_wait+0x104>
  401170:	ldur	x8, [x29, #-16]
  401174:	ldr	x0, [x8]
  401178:	ldur	x1, [x29, #-16]
  40117c:	bl	400c78 <execv@plt>
  401180:	mov	w9, #0x3                   	// #3
  401184:	stur	w9, [x29, #-28]
  401188:	bl	400c88 <__errno_location@plt>
  40118c:	ldr	w9, [x0]
  401190:	str	w9, [sp, #32]
  401194:	str	wzr, [sp, #28]
  401198:	ldr	w0, [sp, #28]
  40119c:	bl	400c18 <log_get_max_level_realm@plt>
  4011a0:	ldur	w9, [x29, #-28]
  4011a4:	and	w9, w9, #0x7
  4011a8:	cmp	w0, w9
  4011ac:	b.lt	4011ec <fork_wait+0xe0>  // b.tstop
  4011b0:	ldr	w8, [sp, #28]
  4011b4:	ldur	w9, [x29, #-28]
  4011b8:	orr	w0, w9, w8, lsl #10
  4011bc:	ldr	w1, [sp, #32]
  4011c0:	ldur	x10, [x29, #-16]
  4011c4:	ldr	x6, [x10]
  4011c8:	ldr	x2, [sp, #16]
  4011cc:	mov	w3, #0x4e                  	// #78
  4011d0:	adrp	x4, 401000 <main+0x110>
  4011d4:	add	x4, x4, #0x93d
  4011d8:	adrp	x5, 401000 <main+0x110>
  4011dc:	add	x5, x5, #0x947
  4011e0:	bl	400c28 <log_internal_realm@plt>
  4011e4:	str	w0, [sp, #12]
  4011e8:	b	401200 <fork_wait+0xf4>
  4011ec:	ldr	w0, [sp, #32]
  4011f0:	bl	400c38 <abs@plt>
  4011f4:	mov	w8, wzr
  4011f8:	subs	w8, w8, w0, uxtb
  4011fc:	str	w8, [sp, #12]
  401200:	ldr	w8, [sp, #12]
  401204:	str	w8, [sp, #24]
  401208:	mov	w0, #0x1                   	// #1
  40120c:	bl	400c98 <_exit@plt>
  401210:	ldur	x8, [x29, #-16]
  401214:	ldr	x0, [x8]
  401218:	ldur	w1, [x29, #-20]
  40121c:	mov	w2, #0x1                   	// #1
  401220:	bl	400ca8 <wait_for_terminate_and_check@plt>
  401224:	stur	w0, [x29, #-4]
  401228:	ldur	w0, [x29, #-4]
  40122c:	ldp	x29, x30, [sp, #64]
  401230:	add	sp, sp, #0x50
  401234:	ret

0000000000401238 <reload_manager>:
  401238:	sub	sp, sp, #0xb0
  40123c:	stp	x29, x30, [sp, #160]
  401240:	add	x29, sp, #0xa0
  401244:	mov	x8, xzr
  401248:	mov	w9, #0x6                   	// #6
  40124c:	adrp	x10, 401000 <main+0x110>
  401250:	add	x10, x10, #0x83d
  401254:	add	x10, x10, #0x3
  401258:	adrp	x11, 401000 <main+0x110>
  40125c:	add	x11, x11, #0x960
  401260:	stur	x0, [x29, #-16]
  401264:	stur	xzr, [x29, #-40]
  401268:	stur	xzr, [x29, #-32]
  40126c:	stur	xzr, [x29, #-24]
  401270:	stur	x8, [x29, #-48]
  401274:	stur	w9, [x29, #-56]
  401278:	stur	wzr, [x29, #-60]
  40127c:	stur	wzr, [x29, #-64]
  401280:	ldur	w0, [x29, #-64]
  401284:	str	x10, [sp, #48]
  401288:	str	x11, [sp, #40]
  40128c:	bl	400c18 <log_get_max_level_realm@plt>
  401290:	ldur	w9, [x29, #-56]
  401294:	and	w9, w9, #0x7
  401298:	cmp	w0, w9
  40129c:	b.lt	4012d0 <reload_manager+0x98>  // b.tstop
  4012a0:	ldur	w8, [x29, #-64]
  4012a4:	ldur	w9, [x29, #-56]
  4012a8:	orr	w0, w9, w8, lsl #10
  4012ac:	ldur	w1, [x29, #-60]
  4012b0:	ldr	x2, [sp, #48]
  4012b4:	mov	w3, #0x17                  	// #23
  4012b8:	ldr	x4, [sp, #40]
  4012bc:	adrp	x5, 401000 <main+0x110>
  4012c0:	add	x5, x5, #0x96f
  4012c4:	bl	400c28 <log_internal_realm@plt>
  4012c8:	str	w0, [sp, #36]
  4012cc:	b	4012e4 <reload_manager+0xac>
  4012d0:	ldur	w0, [x29, #-60]
  4012d4:	bl	400c38 <abs@plt>
  4012d8:	mov	w8, wzr
  4012dc:	subs	w8, w8, w0, uxtb
  4012e0:	str	w8, [sp, #36]
  4012e4:	ldr	w8, [sp, #36]
  4012e8:	stur	w8, [x29, #-68]
  4012ec:	ldur	x0, [x29, #-16]
  4012f0:	sub	x1, x29, #0x30
  4012f4:	adrp	x2, 401000 <main+0x110>
  4012f8:	add	x2, x2, #0x996
  4012fc:	adrp	x3, 401000 <main+0x110>
  401300:	add	x3, x3, #0x9af
  401304:	adrp	x4, 401000 <main+0x110>
  401308:	add	x4, x4, #0x9c9
  40130c:	adrp	x5, 401000 <main+0x110>
  401310:	add	x5, x5, #0x9ea
  401314:	bl	400cb8 <sd_bus_message_new_method_call@plt>
  401318:	stur	w0, [x29, #-52]
  40131c:	ldur	w8, [x29, #-52]
  401320:	cmp	w8, #0x0
  401324:	cset	w8, ge  // ge = tcont
  401328:	tbnz	w8, #0, 4013b8 <reload_manager+0x180>
  40132c:	mov	w8, #0x3                   	// #3
  401330:	stur	w8, [x29, #-72]
  401334:	ldur	w8, [x29, #-52]
  401338:	stur	w8, [x29, #-76]
  40133c:	str	wzr, [sp, #80]
  401340:	ldr	w0, [sp, #80]
  401344:	bl	400c18 <log_get_max_level_realm@plt>
  401348:	ldur	w8, [x29, #-72]
  40134c:	and	w8, w8, #0x7
  401350:	cmp	w0, w8
  401354:	b.lt	401388 <reload_manager+0x150>  // b.tstop
  401358:	ldr	w8, [sp, #80]
  40135c:	ldur	w9, [x29, #-72]
  401360:	orr	w0, w9, w8, lsl #10
  401364:	ldur	w1, [x29, #-76]
  401368:	ldr	x2, [sp, #48]
  40136c:	mov	w3, #0x21                  	// #33
  401370:	ldr	x4, [sp, #40]
  401374:	adrp	x5, 401000 <main+0x110>
  401378:	add	x5, x5, #0x9f1
  40137c:	bl	400c28 <log_internal_realm@plt>
  401380:	str	w0, [sp, #32]
  401384:	b	40139c <reload_manager+0x164>
  401388:	ldur	w0, [x29, #-76]
  40138c:	bl	400c38 <abs@plt>
  401390:	mov	w8, wzr
  401394:	subs	w8, w8, w0, uxtb
  401398:	str	w8, [sp, #32]
  40139c:	ldr	w8, [sp, #32]
  4013a0:	str	w8, [sp, #76]
  4013a4:	ldr	w8, [sp, #76]
  4013a8:	stur	w8, [x29, #-4]
  4013ac:	mov	w8, #0x1                   	// #1
  4013b0:	str	w8, [sp, #72]
  4013b4:	b	4014b4 <reload_manager+0x27c>
  4013b8:	ldur	x0, [x29, #-16]
  4013bc:	ldur	x1, [x29, #-48]
  4013c0:	mov	x2, #0x9500                	// #38144
  4013c4:	movk	x2, #0xaba, lsl #16
  4013c8:	sub	x3, x29, #0x28
  4013cc:	mov	x8, xzr
  4013d0:	mov	x4, x8
  4013d4:	bl	400cc8 <sd_bus_call@plt>
  4013d8:	stur	w0, [x29, #-52]
  4013dc:	ldur	w9, [x29, #-52]
  4013e0:	cmp	w9, #0x0
  4013e4:	cset	w9, ge  // ge = tcont
  4013e8:	tbnz	w9, #0, 4014a8 <reload_manager+0x270>
  4013ec:	mov	w8, #0x3                   	// #3
  4013f0:	str	w8, [sp, #68]
  4013f4:	ldur	w8, [x29, #-52]
  4013f8:	str	w8, [sp, #64]
  4013fc:	str	wzr, [sp, #60]
  401400:	ldr	w0, [sp, #60]
  401404:	bl	400c18 <log_get_max_level_realm@plt>
  401408:	ldr	w8, [sp, #68]
  40140c:	and	w8, w8, #0x7
  401410:	cmp	w0, w8
  401414:	b.lt	401478 <reload_manager+0x240>  // b.tstop
  401418:	ldr	w8, [sp, #60]
  40141c:	ldr	w9, [sp, #68]
  401420:	orr	w0, w9, w8, lsl #10
  401424:	ldr	w1, [sp, #64]
  401428:	ldur	w8, [x29, #-52]
  40142c:	sub	x10, x29, #0x28
  401430:	str	w0, [sp, #28]
  401434:	mov	x0, x10
  401438:	str	w1, [sp, #24]
  40143c:	mov	w1, w8
  401440:	bl	400cd8 <bus_error_message@plt>
  401444:	ldr	w8, [sp, #28]
  401448:	str	x0, [sp, #16]
  40144c:	mov	w0, w8
  401450:	ldr	w1, [sp, #24]
  401454:	ldr	x2, [sp, #48]
  401458:	mov	w3, #0x29                  	// #41
  40145c:	ldr	x4, [sp, #40]
  401460:	adrp	x5, 401000 <main+0x110>
  401464:	add	x5, x5, #0xa12
  401468:	ldr	x6, [sp, #16]
  40146c:	bl	400c28 <log_internal_realm@plt>
  401470:	str	w0, [sp, #12]
  401474:	b	40148c <reload_manager+0x254>
  401478:	ldr	w0, [sp, #64]
  40147c:	bl	400c38 <abs@plt>
  401480:	mov	w8, wzr
  401484:	subs	w8, w8, w0, uxtb
  401488:	str	w8, [sp, #12]
  40148c:	ldr	w8, [sp, #12]
  401490:	str	w8, [sp, #56]
  401494:	ldr	w8, [sp, #56]
  401498:	stur	w8, [x29, #-4]
  40149c:	mov	w8, #0x1                   	// #1
  4014a0:	str	w8, [sp, #72]
  4014a4:	b	4014b4 <reload_manager+0x27c>
  4014a8:	stur	wzr, [x29, #-4]
  4014ac:	mov	w8, #0x1                   	// #1
  4014b0:	str	w8, [sp, #72]
  4014b4:	sub	x0, x29, #0x30
  4014b8:	bl	401714 <sd_bus_message_unrefp>
  4014bc:	sub	x0, x29, #0x28
  4014c0:	bl	400ce8 <sd_bus_error_free@plt>
  4014c4:	ldur	w0, [x29, #-4]
  4014c8:	ldp	x29, x30, [sp, #160]
  4014cc:	add	sp, sp, #0xb0
  4014d0:	ret

00000000004014d4 <start_default_target>:
  4014d4:	sub	sp, sp, #0xa0
  4014d8:	stp	x29, x30, [sp, #144]
  4014dc:	add	x29, sp, #0x90
  4014e0:	mov	w8, #0x6                   	// #6
  4014e4:	adrp	x9, 401000 <main+0x110>
  4014e8:	add	x9, x9, #0x83d
  4014ec:	add	x9, x9, #0x3
  4014f0:	stur	x0, [x29, #-16]
  4014f4:	stur	xzr, [x29, #-40]
  4014f8:	stur	xzr, [x29, #-32]
  4014fc:	stur	xzr, [x29, #-24]
  401500:	stur	w8, [x29, #-48]
  401504:	stur	wzr, [x29, #-52]
  401508:	stur	wzr, [x29, #-56]
  40150c:	ldur	w0, [x29, #-56]
  401510:	str	x9, [sp, #56]
  401514:	bl	400c18 <log_get_max_level_realm@plt>
  401518:	ldur	w8, [x29, #-48]
  40151c:	and	w8, w8, #0x7
  401520:	cmp	w0, w8
  401524:	b.lt	40155c <start_default_target+0x88>  // b.tstop
  401528:	ldur	w8, [x29, #-56]
  40152c:	ldur	w9, [x29, #-48]
  401530:	orr	w0, w9, w8, lsl #10
  401534:	ldur	w1, [x29, #-52]
  401538:	ldr	x2, [sp, #56]
  40153c:	mov	w3, #0x32                  	// #50
  401540:	adrp	x4, 401000 <main+0x110>
  401544:	add	x4, x4, #0xa2e
  401548:	adrp	x5, 401000 <main+0x110>
  40154c:	add	x5, x5, #0xa43
  401550:	bl	400c28 <log_internal_realm@plt>
  401554:	str	w0, [sp, #52]
  401558:	b	401570 <start_default_target+0x9c>
  40155c:	ldur	w0, [x29, #-52]
  401560:	bl	400c38 <abs@plt>
  401564:	mov	w8, wzr
  401568:	subs	w8, w8, w0, uxtb
  40156c:	str	w8, [sp, #52]
  401570:	ldr	w8, [sp, #52]
  401574:	stur	w8, [x29, #-60]
  401578:	ldur	x0, [x29, #-16]
  40157c:	adrp	x1, 401000 <main+0x110>
  401580:	add	x1, x1, #0x996
  401584:	adrp	x2, 401000 <main+0x110>
  401588:	add	x2, x2, #0x9af
  40158c:	adrp	x3, 401000 <main+0x110>
  401590:	add	x3, x3, #0x9c9
  401594:	adrp	x4, 401000 <main+0x110>
  401598:	add	x4, x4, #0xa5b
  40159c:	sub	x5, x29, #0x28
  4015a0:	mov	x9, xzr
  4015a4:	mov	x6, x9
  4015a8:	adrp	x7, 401000 <main+0x110>
  4015ac:	add	x7, x7, #0xa65
  4015b0:	mov	x9, sp
  4015b4:	adrp	x10, 401000 <main+0x110>
  4015b8:	add	x10, x10, #0xa68
  4015bc:	str	x10, [x9]
  4015c0:	mov	x9, sp
  4015c4:	adrp	x10, 401000 <main+0x110>
  4015c8:	add	x10, x10, #0xa77
  4015cc:	str	x10, [x9, #8]
  4015d0:	bl	400cf8 <sd_bus_call_method@plt>
  4015d4:	stur	w0, [x29, #-44]
  4015d8:	ldur	w8, [x29, #-44]
  4015dc:	cmp	w8, #0x0
  4015e0:	cset	w8, ge  // ge = tcont
  4015e4:	tbnz	w8, #0, 4016a8 <start_default_target+0x1d4>
  4015e8:	mov	w8, #0x3                   	// #3
  4015ec:	stur	w8, [x29, #-64]
  4015f0:	ldur	w8, [x29, #-44]
  4015f4:	stur	w8, [x29, #-68]
  4015f8:	str	wzr, [sp, #72]
  4015fc:	ldr	w0, [sp, #72]
  401600:	bl	400c18 <log_get_max_level_realm@plt>
  401604:	ldur	w8, [x29, #-64]
  401608:	and	w8, w8, #0x7
  40160c:	cmp	w0, w8
  401610:	b.lt	401678 <start_default_target+0x1a4>  // b.tstop
  401614:	ldr	w8, [sp, #72]
  401618:	ldur	w9, [x29, #-64]
  40161c:	orr	w0, w9, w8, lsl #10
  401620:	ldur	w1, [x29, #-68]
  401624:	ldur	w8, [x29, #-44]
  401628:	sub	x10, x29, #0x28
  40162c:	str	w0, [sp, #48]
  401630:	mov	x0, x10
  401634:	str	w1, [sp, #44]
  401638:	mov	w1, w8
  40163c:	bl	400cd8 <bus_error_message@plt>
  401640:	ldr	w8, [sp, #48]
  401644:	str	x0, [sp, #32]
  401648:	mov	w0, w8
  40164c:	ldr	w1, [sp, #44]
  401650:	ldr	x2, [sp, #56]
  401654:	mov	w3, #0x3f                  	// #63
  401658:	adrp	x4, 401000 <main+0x110>
  40165c:	add	x4, x4, #0xa2e
  401660:	adrp	x5, 401000 <main+0x110>
  401664:	add	x5, x5, #0xa7f
  401668:	ldr	x6, [sp, #32]
  40166c:	bl	400c28 <log_internal_realm@plt>
  401670:	str	w0, [sp, #28]
  401674:	b	40168c <start_default_target+0x1b8>
  401678:	ldur	w0, [x29, #-68]
  40167c:	bl	400c38 <abs@plt>
  401680:	mov	w8, wzr
  401684:	subs	w8, w8, w0, uxtb
  401688:	str	w8, [sp, #28]
  40168c:	ldr	w8, [sp, #28]
  401690:	str	w8, [sp, #68]
  401694:	ldr	w8, [sp, #68]
  401698:	stur	w8, [x29, #-4]
  40169c:	mov	w8, #0x1                   	// #1
  4016a0:	str	w8, [sp, #64]
  4016a4:	b	4016b4 <start_default_target+0x1e0>
  4016a8:	stur	wzr, [x29, #-4]
  4016ac:	mov	w8, #0x1                   	// #1
  4016b0:	str	w8, [sp, #64]
  4016b4:	sub	x0, x29, #0x28
  4016b8:	bl	400ce8 <sd_bus_error_free@plt>
  4016bc:	ldur	w0, [x29, #-4]
  4016c0:	ldp	x29, x30, [sp, #144]
  4016c4:	add	sp, sp, #0xa0
  4016c8:	ret

00000000004016cc <safe_fork>:
  4016cc:	sub	sp, sp, #0x30
  4016d0:	stp	x29, x30, [sp, #32]
  4016d4:	add	x29, sp, #0x20
  4016d8:	mov	x8, xzr
  4016dc:	mov	x3, x8
  4016e0:	stur	x0, [x29, #-8]
  4016e4:	stur	w1, [x29, #-12]
  4016e8:	str	x2, [sp, #8]
  4016ec:	ldur	x0, [x29, #-8]
  4016f0:	ldur	w9, [x29, #-12]
  4016f4:	ldr	x4, [sp, #8]
  4016f8:	mov	x1, x3
  4016fc:	mov	x2, x8
  401700:	mov	w3, w9
  401704:	bl	400d08 <safe_fork_full@plt>
  401708:	ldp	x29, x30, [sp, #32]
  40170c:	add	sp, sp, #0x30
  401710:	ret

0000000000401714 <sd_bus_message_unrefp>:
  401714:	sub	sp, sp, #0x20
  401718:	stp	x29, x30, [sp, #16]
  40171c:	add	x29, sp, #0x10
  401720:	str	x0, [sp, #8]
  401724:	ldr	x8, [sp, #8]
  401728:	ldr	x8, [x8]
  40172c:	cbz	x8, 40173c <sd_bus_message_unrefp+0x28>
  401730:	ldr	x8, [sp, #8]
  401734:	ldr	x0, [x8]
  401738:	bl	400d18 <sd_bus_message_unref@plt>
  40173c:	ldp	x29, x30, [sp, #16]
  401740:	add	sp, sp, #0x20
  401744:	ret

0000000000401748 <__libc_csu_init>:
  401748:	stp	x29, x30, [sp, #-64]!
  40174c:	mov	x29, sp
  401750:	stp	x19, x20, [sp, #16]
  401754:	adrp	x20, 41f000 <__FRAME_END__+0x1d468>
  401758:	add	x20, x20, #0xd00
  40175c:	stp	x21, x22, [sp, #32]
  401760:	adrp	x21, 41f000 <__FRAME_END__+0x1d468>
  401764:	add	x21, x21, #0xcf8
  401768:	sub	x20, x20, x21
  40176c:	mov	w22, w0
  401770:	stp	x23, x24, [sp, #48]
  401774:	mov	x23, x1
  401778:	mov	x24, x2
  40177c:	bl	400b80 <_init>
  401780:	cmp	xzr, x20, asr #3
  401784:	b.eq	4017b0 <__libc_csu_init+0x68>  // b.none
  401788:	asr	x20, x20, #3
  40178c:	mov	x19, #0x0                   	// #0
  401790:	ldr	x3, [x21, x19, lsl #3]
  401794:	mov	x2, x24
  401798:	add	x19, x19, #0x1
  40179c:	mov	x1, x23
  4017a0:	mov	w0, w22
  4017a4:	blr	x3
  4017a8:	cmp	x20, x19
  4017ac:	b.ne	401790 <__libc_csu_init+0x48>  // b.any
  4017b0:	ldp	x19, x20, [sp, #16]
  4017b4:	ldp	x21, x22, [sp, #32]
  4017b8:	ldp	x23, x24, [sp, #48]
  4017bc:	ldp	x29, x30, [sp], #64
  4017c0:	ret
  4017c4:	nop

00000000004017c8 <__libc_csu_fini>:
  4017c8:	ret

Disassembly of section .fini:

00000000004017cc <_fini>:
  4017cc:	stp	x29, x30, [sp, #-16]!
  4017d0:	mov	x29, sp
  4017d4:	ldp	x29, x30, [sp], #16
  4017d8:	ret
