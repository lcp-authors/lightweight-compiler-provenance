
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_opcode.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000009b0 <.init>:
 9b0:	stp	x29, x30, [sp, #-16]!
 9b4:	mov	x29, sp
 9b8:	bl	aa0 <_PyLong_AsInt@plt+0x10>
 9bc:	ldp	x29, x30, [sp], #16
 9c0:	ret

Disassembly of section .plt:

00000000000009d0 <__cxa_finalize@plt-0x20>:
 9d0:	stp	x16, x30, [sp, #-16]!
 9d4:	adrp	x16, 11000 <PyInit__opcode@@Base+0x101e0>
 9d8:	ldr	x17, [x16, #4088]
 9dc:	add	x16, x16, #0xff8
 9e0:	br	x17
 9e4:	nop
 9e8:	nop
 9ec:	nop

00000000000009f0 <__cxa_finalize@plt>:
 9f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 9f4:	ldr	x17, [x16]
 9f8:	add	x16, x16, #0x0
 9fc:	br	x17

0000000000000a00 <_PyArg_UnpackKeywords@plt>:
 a00:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a04:	ldr	x17, [x16, #8]
 a08:	add	x16, x16, #0x8
 a0c:	br	x17

0000000000000a10 <PyErr_SetString@plt>:
 a10:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a14:	ldr	x17, [x16, #16]
 a18:	add	x16, x16, #0x10
 a1c:	br	x17

0000000000000a20 <PyLong_FromLong@plt>:
 a20:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a24:	ldr	x17, [x16, #24]
 a28:	add	x16, x16, #0x18
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a34:	ldr	x17, [x16, #32]
 a38:	add	x16, x16, #0x20
 a3c:	br	x17

0000000000000a40 <PyErr_Occurred@plt>:
 a40:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a44:	ldr	x17, [x16, #40]
 a48:	add	x16, x16, #0x28
 a4c:	br	x17

0000000000000a50 <PyModule_Create2@plt>:
 a50:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a54:	ldr	x17, [x16, #48]
 a58:	add	x16, x16, #0x30
 a5c:	br	x17

0000000000000a60 <PyLong_AsLong@plt>:
 a60:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a64:	ldr	x17, [x16, #56]
 a68:	add	x16, x16, #0x38
 a6c:	br	x17

0000000000000a70 <PyCompile_OpcodeStackEffectWithJump@plt>:
 a70:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a74:	ldr	x17, [x16, #64]
 a78:	add	x16, x16, #0x40
 a7c:	br	x17

0000000000000a80 <PyType_IsSubtype@plt>:
 a80:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a84:	ldr	x17, [x16, #72]
 a88:	add	x16, x16, #0x48
 a8c:	br	x17

0000000000000a90 <_PyLong_AsInt@plt>:
 a90:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a94:	ldr	x17, [x16, #80]
 a98:	add	x16, x16, #0x50
 a9c:	br	x17

Disassembly of section .text:

0000000000000aa0 <PyInit__opcode@@Base-0x380>:
 aa0:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 aa4:	ldr	x0, [x0, #4040]
 aa8:	cbz	x0, ab0 <_PyLong_AsInt@plt+0x20>
 aac:	b	a30 <__gmon_start__@plt>
 ab0:	ret
 ab4:	adrp	x0, 12000 <PyInit__opcode@@Base+0x111e0>
 ab8:	add	x0, x0, #0x148
 abc:	adrp	x1, 12000 <PyInit__opcode@@Base+0x111e0>
 ac0:	add	x1, x1, #0x148
 ac4:	cmp	x0, x1
 ac8:	b.eq	af4 <_PyLong_AsInt@plt+0x64>  // b.none
 acc:	adrp	x1, 11000 <PyInit__opcode@@Base+0x101e0>
 ad0:	ldr	x1, [x1, #3992]
 ad4:	cbz	x1, af4 <_PyLong_AsInt@plt+0x64>
 ad8:	stp	x29, x30, [sp, #-16]!
 adc:	mov	x29, sp
 ae0:	adrp	x0, 12000 <PyInit__opcode@@Base+0x111e0>
 ae4:	add	x0, x0, #0x148
 ae8:	blr	x1
 aec:	ldp	x29, x30, [sp], #16
 af0:	ret
 af4:	ret
 af8:	adrp	x0, 12000 <PyInit__opcode@@Base+0x111e0>
 afc:	add	x0, x0, #0x148
 b00:	adrp	x1, 12000 <PyInit__opcode@@Base+0x111e0>
 b04:	add	x1, x1, #0x148
 b08:	sub	x0, x0, x1
 b0c:	lsr	x1, x0, #63
 b10:	add	x0, x1, x0, asr #3
 b14:	cmp	xzr, x0, asr #1
 b18:	b.eq	b48 <_PyLong_AsInt@plt+0xb8>  // b.none
 b1c:	asr	x1, x0, #1
 b20:	adrp	x2, 11000 <PyInit__opcode@@Base+0x101e0>
 b24:	ldr	x2, [x2, #4064]
 b28:	cbz	x2, b48 <_PyLong_AsInt@plt+0xb8>
 b2c:	stp	x29, x30, [sp, #-16]!
 b30:	mov	x29, sp
 b34:	adrp	x0, 12000 <PyInit__opcode@@Base+0x111e0>
 b38:	add	x0, x0, #0x148
 b3c:	blr	x2
 b40:	ldp	x29, x30, [sp], #16
 b44:	ret
 b48:	ret
 b4c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x111e0>
 b50:	ldrb	w0, [x0, #328]
 b54:	cbnz	w0, b90 <_PyLong_AsInt@plt+0x100>
 b58:	stp	x29, x30, [sp, #-16]!
 b5c:	mov	x29, sp
 b60:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 b64:	ldr	x0, [x0, #4008]
 b68:	cbz	x0, b78 <_PyLong_AsInt@plt+0xe8>
 b6c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x111e0>
 b70:	ldr	x0, [x0, #88]
 b74:	bl	9f0 <__cxa_finalize@plt>
 b78:	bl	ab4 <_PyLong_AsInt@plt+0x24>
 b7c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x111e0>
 b80:	mov	w1, #0x1                   	// #1
 b84:	strb	w1, [x0, #328]
 b88:	ldp	x29, x30, [sp], #16
 b8c:	ret
 b90:	ret
 b94:	stp	x29, x30, [sp, #-16]!
 b98:	mov	x29, sp
 b9c:	bl	af8 <_PyLong_AsInt@plt+0x68>
 ba0:	ldp	x29, x30, [sp], #16
 ba4:	ret
 ba8:	sub	sp, sp, #0x70
 bac:	stp	x29, x30, [sp, #16]
 bb0:	add	x29, sp, #0x10
 bb4:	stp	x19, x20, [sp, #32]
 bb8:	stp	x21, x22, [sp, #48]
 bbc:	stp	x23, x24, [sp, #64]
 bc0:	mov	x19, x1
 bc4:	mov	x20, x2
 bc8:	cbz	x3, c98 <_PyLong_AsInt@plt+0x208>
 bcc:	ldr	x22, [x3, #16]
 bd0:	add	x22, x2, x22
 bd4:	sub	x24, x22, #0x1
 bd8:	add	x0, sp, #0x58
 bdc:	str	x0, [sp]
 be0:	mov	w7, #0x0                   	// #0
 be4:	mov	w6, #0x2                   	// #2
 be8:	mov	w5, #0x1                   	// #1
 bec:	adrp	x4, 12000 <PyInit__opcode@@Base+0x111e0>
 bf0:	add	x4, x4, #0x60
 bf4:	mov	x2, #0x0                   	// #0
 bf8:	mov	x1, x20
 bfc:	mov	x0, x19
 c00:	bl	a00 <_PyArg_UnpackKeywords@plt>
 c04:	mov	x19, x0
 c08:	cbz	x0, d90 <_PyLong_AsInt@plt+0x300>
 c0c:	ldr	x0, [x19]
 c10:	ldr	x0, [x0, #8]
 c14:	adrp	x1, 11000 <PyInit__opcode@@Base+0x101e0>
 c18:	ldr	x1, [x1, #4000]
 c1c:	cmp	x0, x1
 c20:	b.eq	cb8 <_PyLong_AsInt@plt+0x228>  // b.none
 c24:	adrp	x1, 11000 <PyInit__opcode@@Base+0x101e0>
 c28:	ldr	x1, [x1, #4000]
 c2c:	bl	a80 <PyType_IsSubtype@plt>
 c30:	mov	w21, w0
 c34:	cbnz	w0, cb8 <_PyLong_AsInt@plt+0x228>
 c38:	ldr	x0, [x19]
 c3c:	bl	a90 <_PyLong_AsInt@plt>
 c40:	mov	w23, w0
 c44:	cmn	w0, #0x1
 c48:	b.eq	cd8 <_PyLong_AsInt@plt+0x248>  // b.none
 c4c:	cmp	x20, #0x1
 c50:	b.le	cec <_PyLong_AsInt@plt+0x25c>
 c54:	sub	x24, x22, #0x2
 c58:	ldr	x0, [x19, #8]
 c5c:	cbz	x24, cf8 <_PyLong_AsInt@plt+0x268>
 c60:	ldr	x19, [x19, #16]
 c64:	cmp	w23, #0x59
 c68:	b.le	d20 <_PyLong_AsInt@plt+0x290>
 c6c:	adrp	x1, 11000 <PyInit__opcode@@Base+0x101e0>
 c70:	ldr	x1, [x1, #4048]
 c74:	cmp	x0, x1
 c78:	b.eq	d04 <_PyLong_AsInt@plt+0x274>  // b.none
 c7c:	bl	a60 <PyLong_AsLong@plt>
 c80:	mov	w20, w0
 c84:	cmn	w0, #0x1
 c88:	b.ne	d34 <_PyLong_AsInt@plt+0x2a4>  // b.any
 c8c:	bl	a40 <PyErr_Occurred@plt>
 c90:	cbz	x0, d34 <_PyLong_AsInt@plt+0x2a4>
 c94:	b	ddc <_PyLong_AsInt@plt+0x34c>
 c98:	sub	x24, x2, #0x1
 c9c:	cmp	x24, #0x1
 ca0:	b.hi	cb0 <_PyLong_AsInt@plt+0x220>  // b.pmore
 ca4:	mov	x22, x2
 ca8:	cbz	x1, bd8 <_PyLong_AsInt@plt+0x148>
 cac:	b	c0c <_PyLong_AsInt@plt+0x17c>
 cb0:	mov	x22, x2
 cb4:	b	bd8 <_PyLong_AsInt@plt+0x148>
 cb8:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 cbc:	add	x1, x1, #0xe58
 cc0:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 cc4:	ldr	x0, [x0, #4024]
 cc8:	ldr	x0, [x0]
 ccc:	bl	a10 <PyErr_SetString@plt>
 cd0:	mov	x0, #0x0                   	// #0
 cd4:	b	d90 <_PyLong_AsInt@plt+0x300>
 cd8:	bl	a40 <PyErr_Occurred@plt>
 cdc:	mov	x1, x0
 ce0:	mov	x0, #0x0                   	// #0
 ce4:	cbz	x1, c4c <_PyLong_AsInt@plt+0x1bc>
 ce8:	b	d90 <_PyLong_AsInt@plt+0x300>
 cec:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 cf0:	ldr	x0, [x0, #4048]
 cf4:	b	c5c <_PyLong_AsInt@plt+0x1cc>
 cf8:	adrp	x19, 11000 <PyInit__opcode@@Base+0x101e0>
 cfc:	ldr	x19, [x19, #4048]
 d00:	b	c64 <_PyLong_AsInt@plt+0x1d4>
 d04:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 d08:	add	x1, x1, #0xe80
 d0c:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 d10:	ldr	x0, [x0, #4016]
 d14:	ldr	x0, [x0]
 d18:	bl	a10 <PyErr_SetString@plt>
 d1c:	b	ddc <_PyLong_AsInt@plt+0x34c>
 d20:	mov	w20, w21
 d24:	adrp	x1, 11000 <PyInit__opcode@@Base+0x101e0>
 d28:	ldr	x1, [x1, #4048]
 d2c:	cmp	x0, x1
 d30:	b.ne	da8 <_PyLong_AsInt@plt+0x318>  // b.any
 d34:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 d38:	ldr	x0, [x0, #4048]
 d3c:	cmp	x19, x0
 d40:	b.eq	df4 <_PyLong_AsInt@plt+0x364>  // b.none
 d44:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 d48:	ldr	x0, [x0, #4056]
 d4c:	cmp	x19, x0
 d50:	b.eq	dfc <_PyLong_AsInt@plt+0x36c>  // b.none
 d54:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 d58:	ldr	x0, [x0, #4032]
 d5c:	cmp	x19, x0
 d60:	b.ne	dc4 <_PyLong_AsInt@plt+0x334>  // b.any
 d64:	mov	w2, w21
 d68:	mov	w1, w20
 d6c:	mov	w0, w23
 d70:	bl	a70 <PyCompile_OpcodeStackEffectWithJump@plt>
 d74:	mov	w1, #0x7fffffff            	// #2147483647
 d78:	cmp	w0, w1
 d7c:	b.eq	e04 <_PyLong_AsInt@plt+0x374>  // b.none
 d80:	cmn	w0, #0x1
 d84:	b.eq	ddc <_PyLong_AsInt@plt+0x34c>  // b.none
 d88:	sxtw	x0, w0
 d8c:	bl	a20 <PyLong_FromLong@plt>
 d90:	ldp	x19, x20, [sp, #32]
 d94:	ldp	x21, x22, [sp, #48]
 d98:	ldp	x23, x24, [sp, #64]
 d9c:	ldp	x29, x30, [sp, #16]
 da0:	add	sp, sp, #0x70
 da4:	ret
 da8:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 dac:	add	x1, x1, #0xec0
 db0:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 db4:	ldr	x0, [x0, #4016]
 db8:	ldr	x0, [x0]
 dbc:	bl	a10 <PyErr_SetString@plt>
 dc0:	b	ddc <_PyLong_AsInt@plt+0x34c>
 dc4:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 dc8:	add	x1, x1, #0xf08
 dcc:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 dd0:	ldr	x0, [x0, #4016]
 dd4:	ldr	x0, [x0]
 dd8:	bl	a10 <PyErr_SetString@plt>
 ddc:	bl	a40 <PyErr_Occurred@plt>
 de0:	mov	x1, x0
 de4:	mov	x0, #0x0                   	// #0
 de8:	cbnz	x1, d90 <_PyLong_AsInt@plt+0x300>
 dec:	mov	w0, #0xffffffff            	// #-1
 df0:	b	d88 <_PyLong_AsInt@plt+0x2f8>
 df4:	mov	w21, #0xffffffff            	// #-1
 df8:	b	d64 <_PyLong_AsInt@plt+0x2d4>
 dfc:	mov	w21, #0x1                   	// #1
 e00:	b	d64 <_PyLong_AsInt@plt+0x2d4>
 e04:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 e08:	add	x1, x1, #0xf38
 e0c:	adrp	x0, 11000 <PyInit__opcode@@Base+0x101e0>
 e10:	ldr	x0, [x0, #4016]
 e14:	ldr	x0, [x0]
 e18:	bl	a10 <PyErr_SetString@plt>
 e1c:	b	ddc <_PyLong_AsInt@plt+0x34c>

0000000000000e20 <PyInit__opcode@@Base>:
 e20:	stp	x29, x30, [sp, #-16]!
 e24:	mov	x29, sp
 e28:	mov	w1, #0x3f5                 	// #1013
 e2c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x111e0>
 e30:	add	x0, x0, #0x60
 e34:	add	x0, x0, #0x40
 e38:	bl	a50 <PyModule_Create2@plt>
 e3c:	ldp	x29, x30, [sp], #16
 e40:	ret

Disassembly of section .fini:

0000000000000e44 <.fini>:
 e44:	stp	x29, x30, [sp, #-16]!
 e48:	mov	x29, sp
 e4c:	ldp	x29, x30, [sp], #16
 e50:	ret
