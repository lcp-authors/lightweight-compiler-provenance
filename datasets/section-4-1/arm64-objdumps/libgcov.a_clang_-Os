In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgcov.a_clang_-Os:

_gcov_merge_add.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_add>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, #0x0                   	// #0
  14:	str	x21, [sp, #32]
  18:	mov	w21, w1
  1c:	cmp	x19, x21
  20:	b.ne	34 <__gcov_merge_add+0x34>  // b.any
  24:	ldp	x19, x20, [sp, #16]
  28:	ldr	x21, [sp, #32]
  2c:	ldp	x29, x30, [sp], #48
  30:	ret
  34:	bl	0 <__gcov_read_counter>
  38:	ldr	x1, [x20, x19, lsl #3]
  3c:	add	x1, x1, x0
  40:	str	x1, [x20, x19, lsl #3]
  44:	add	x19, x19, #0x1
  48:	b	1c <__gcov_merge_add+0x1c>

_gcov_merge_single.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_single>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	w22, #0x3                   	// #3
  10:	udiv	w22, w1, w22
  14:	stp	x19, x20, [sp, #16]
  18:	str	x23, [sp, #48]
  1c:	add	w20, w22, w22, lsl #1
  20:	subs	w20, w1, w20
  24:	b.eq	a4 <__gcov_merge_single+0xa4>  // b.none
  28:	bl	0 <abort>
  2c:	bl	0 <__gcov_read_counter>
  30:	mov	x23, x0
  34:	bl	0 <__gcov_read_counter>
  38:	mov	x21, x0
  3c:	bl	0 <__gcov_read_counter>
  40:	ldr	x1, [x19]
  44:	cmp	x1, x23
  48:	ldr	x1, [x19, #8]
  4c:	b.ne	88 <__gcov_merge_single+0x88>  // b.any
  50:	add	x1, x1, x21
  54:	str	x1, [x19, #8]
  58:	add	w20, w20, #0x1
  5c:	ldr	x1, [x19, #16]
  60:	add	x19, x19, #0x18
  64:	add	x0, x1, x0
  68:	stur	x0, [x19, #-8]
  6c:	cmp	w20, w22
  70:	b.ne	2c <__gcov_merge_single+0x2c>  // b.any
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldr	x23, [sp, #48]
  80:	ldp	x29, x30, [sp], #64
  84:	ret
  88:	cmp	x1, x21
  8c:	b.ge	9c <__gcov_merge_single+0x9c>  // b.tcont
  90:	sub	x1, x21, x1
  94:	str	x23, [x19]
  98:	b	54 <__gcov_merge_single+0x54>
  9c:	sub	x1, x1, x21
  a0:	b	54 <__gcov_merge_single+0x54>
  a4:	mov	x19, x0
  a8:	b	6c <__gcov_merge_single+0x6c>

_gcov_merge_ior.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_ior>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, #0x0                   	// #0
  14:	str	x21, [sp, #32]
  18:	mov	w21, w1
  1c:	cmp	x19, x21
  20:	b.ne	34 <__gcov_merge_ior+0x34>  // b.any
  24:	ldp	x19, x20, [sp, #16]
  28:	ldr	x21, [sp, #32]
  2c:	ldp	x29, x30, [sp], #48
  30:	ret
  34:	bl	0 <__gcov_read_counter>
  38:	ldr	x1, [x20, x19, lsl #3]
  3c:	orr	x1, x1, x0
  40:	str	x1, [x20, x19, lsl #3]
  44:	add	x19, x19, #0x1
  48:	b	1c <__gcov_merge_ior+0x1c>

_gcov_merge_time_profile.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_time_profile>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, #0x0                   	// #0
  14:	str	x21, [sp, #32]
  18:	mov	w21, w1
  1c:	cmp	x21, x19
  20:	b.ne	34 <__gcov_merge_time_profile+0x34>  // b.any
  24:	ldp	x19, x20, [sp, #16]
  28:	ldr	x21, [sp, #32]
  2c:	ldp	x29, x30, [sp], #48
  30:	ret
  34:	bl	0 <__gcov_read_counter>
  38:	cbz	x0, 50 <__gcov_merge_time_profile+0x50>
  3c:	ldr	x1, [x20, x19, lsl #3]
  40:	cbz	x1, 4c <__gcov_merge_time_profile+0x4c>
  44:	cmp	x1, x0
  48:	b.le	50 <__gcov_merge_time_profile+0x50>
  4c:	str	x0, [x20, x19, lsl #3]
  50:	add	x19, x19, #0x1
  54:	b	1c <__gcov_merge_time_profile+0x1c>

_gcov_merge_icall_topn.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_icall_topn>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x23, x0
  10:	mov	w0, #0x9                   	// #9
  14:	stp	x19, x20, [sp, #16]
  18:	udiv	w0, w1, w0
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	add	w0, w0, w0, lsl #3
  2c:	cmp	w1, w0
  30:	b.eq	144 <__gcov_merge_icall_topn+0x144>  // b.none
  34:	bl	0 <abort>
  38:	add	w21, w22, #0x1
  3c:	sub	sp, sp, #0x80
  40:	mov	x19, sp
  44:	mov	x0, #0x0                   	// #0
  48:	add	x21, x23, x21, lsl #3
  4c:	str	xzr, [x19, x0, lsl #3]
  50:	add	x0, x0, #0x1
  54:	cmp	x0, #0x10
  58:	b.ne	4c <__gcov_merge_icall_topn+0x4c>  // b.any
  5c:	add	x24, x21, #0x8
  60:	add	x25, x19, #0x8
  64:	mov	x0, #0x0                   	// #0
  68:	ldr	x1, [x21, x0]
  6c:	str	x1, [x19, x0]
  70:	ldr	x1, [x24, x0]
  74:	str	x1, [x25, x0]
  78:	add	x0, x0, #0x10
  7c:	cmp	x0, #0x40
  80:	b.ne	68 <__gcov_merge_icall_topn+0x68>  // b.any
  84:	mov	w28, #0x4                   	// #4
  88:	mov	w26, #0x8                   	// #8
  8c:	bl	0 <__gcov_read_counter>
  90:	bl	0 <__gcov_read_counter>
  94:	mov	x27, x0
  98:	bl	0 <__gcov_read_counter>
  9c:	mov	w2, #0x0                   	// #0
  a0:	cmp	w2, w26
  a4:	b.cc	bc <__gcov_merge_icall_topn+0xbc>  // b.lo, b.ul, b.last
  a8:	add	w1, w26, #0x1
  ac:	str	x27, [x19, w26, uxtw #3]
  b0:	add	w26, w26, #0x2
  b4:	str	x0, [x19, x1, lsl #3]
  b8:	b	dc <__gcov_merge_icall_topn+0xdc>
  bc:	ldr	x1, [x19, w2, uxtw #3]
  c0:	cmp	x1, x27
  c4:	b.ne	13c <__gcov_merge_icall_topn+0x13c>  // b.any
  c8:	add	w2, w2, #0x1
  cc:	lsl	x2, x2, #3
  d0:	ldr	x1, [x19, x2]
  d4:	add	x0, x1, x0
  d8:	str	x0, [x19, x2]
  dc:	subs	w28, w28, #0x1
  e0:	b.ne	90 <__gcov_merge_icall_topn+0x90>  // b.any
  e4:	mov	x0, x19
  e8:	mov	w1, w26
  ec:	bl	0 <__gcov_sort_n_vals>
  f0:	mov	x0, #0x0                   	// #0
  f4:	ldr	x1, [x19, x0]
  f8:	str	x1, [x21, x0]
  fc:	ldr	x1, [x25, x0]
 100:	str	x1, [x24, x0]
 104:	add	x0, x0, #0x10
 108:	cmp	x0, #0x40
 10c:	b.ne	f4 <__gcov_merge_icall_topn+0xf4>  // b.any
 110:	add	w22, w22, #0x9
 114:	cmp	w22, w20
 118:	b.cc	38 <__gcov_merge_icall_topn+0x38>  // b.lo, b.ul, b.last
 11c:	mov	sp, x29
 120:	ldp	x19, x20, [sp, #16]
 124:	ldp	x21, x22, [sp, #32]
 128:	ldp	x23, x24, [sp, #48]
 12c:	ldp	x25, x26, [sp, #64]
 130:	ldp	x27, x28, [sp, #80]
 134:	ldp	x29, x30, [sp], #96
 138:	ret
 13c:	add	w2, w2, #0x2
 140:	b	a0 <__gcov_merge_icall_topn+0xa0>
 144:	mov	w20, w1
 148:	mov	w22, #0x0                   	// #0
 14c:	b	114 <__gcov_merge_icall_topn+0x114>

_gcov_interval_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_interval_profiler>:
   0:	subs	x1, x1, w2, sxtw
   4:	b.pl	20 <__gcov_interval_profiler+0x20>  // b.nfrst
   8:	add	w3, w3, #0x1
   c:	lsl	x3, x3, #3
  10:	ldr	x1, [x0, x3]
  14:	add	x1, x1, #0x1
  18:	str	x1, [x0, x3]
  1c:	ret
  20:	mov	w2, w3
  24:	cmp	x1, w3, uxtw
  28:	b.lt	40 <__gcov_interval_profiler+0x40>  // b.tstop
  2c:	lsl	x1, x2, #3
  30:	ldr	x2, [x0, x1]
  34:	add	x2, x2, #0x1
  38:	str	x2, [x0, x1]
  3c:	b	1c <__gcov_interval_profiler+0x1c>
  40:	lsl	x1, x1, #3
  44:	b	30 <__gcov_interval_profiler+0x30>

_gcov_interval_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_interval_profiler_atomic>:
   0:	subs	x1, x1, w2, sxtw
   4:	b.pl	24 <__gcov_interval_profiler_atomic+0x24>  // b.nfrst
   8:	add	w3, w3, #0x1
   c:	add	x3, x0, x3, lsl #3
  10:	ldxr	x0, [x3]
  14:	add	x0, x0, #0x1
  18:	stxr	w1, x0, [x3]
  1c:	cbnz	w1, 10 <__gcov_interval_profiler_atomic+0x10>
  20:	ret
  24:	mov	w2, w3
  28:	cmp	x1, w3, uxtw
  2c:	b.lt	48 <__gcov_interval_profiler_atomic+0x48>  // b.tstop
  30:	add	x1, x0, x2, lsl #3
  34:	ldxr	x0, [x1]
  38:	add	x0, x0, #0x1
  3c:	stxr	w2, x0, [x1]
  40:	cbz	w2, 20 <__gcov_interval_profiler_atomic+0x20>
  44:	b	34 <__gcov_interval_profiler_atomic+0x34>
  48:	add	x1, x0, x1, lsl #3
  4c:	ldxr	x0, [x1]
  50:	add	x0, x0, #0x1
  54:	stxr	w2, x0, [x1]
  58:	cbz	w2, 20 <__gcov_interval_profiler_atomic+0x20>
  5c:	b	4c <__gcov_interval_profiler_atomic+0x4c>

_gcov_pow2_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_pow2_profiler>:
   0:	cbz	x1, 10 <__gcov_pow2_profiler+0x10>
   4:	sub	x2, x1, #0x1
   8:	tst	x2, x1
   c:	b.eq	20 <__gcov_pow2_profiler+0x20>  // b.none
  10:	ldr	x1, [x0]
  14:	add	x1, x1, #0x1
  18:	str	x1, [x0]
  1c:	ret
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x1
  28:	str	x1, [x0, #8]
  2c:	b	1c <__gcov_pow2_profiler+0x1c>

_gcov_pow2_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_pow2_profiler_atomic>:
   0:	cbz	x1, 10 <__gcov_pow2_profiler_atomic+0x10>
   4:	sub	x2, x1, #0x1
   8:	tst	x2, x1
   c:	b.eq	24 <__gcov_pow2_profiler_atomic+0x24>  // b.none
  10:	ldxr	x1, [x0]
  14:	add	x1, x1, #0x1
  18:	stxr	w2, x1, [x0]
  1c:	cbnz	w2, 10 <__gcov_pow2_profiler_atomic+0x10>
  20:	ret
  24:	add	x0, x0, #0x8
  28:	ldxr	x1, [x0]
  2c:	add	x1, x1, #0x1
  30:	stxr	w2, x1, [x0]
  34:	cbz	w2, 20 <__gcov_pow2_profiler_atomic+0x20>
  38:	b	28 <__gcov_pow2_profiler_atomic+0x28>

_gcov_one_value_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler>:
   0:	ldp	x3, x2, [x0]
   4:	cmp	x1, x3
   8:	b.ne	18 <__gcov_one_value_profiler+0x18>  // b.any
   c:	add	x2, x2, #0x1
  10:	str	x2, [x0, #8]
  14:	b	24 <__gcov_one_value_profiler+0x24>
  18:	cbnz	x2, 34 <__gcov_one_value_profiler+0x34>
  1c:	mov	x2, #0x1                   	// #1
  20:	stp	x1, x2, [x0]
  24:	ldr	x1, [x0, #16]
  28:	add	x1, x1, #0x1
  2c:	str	x1, [x0, #16]
  30:	ret
  34:	sub	x2, x2, #0x1
  38:	b	10 <__gcov_one_value_profiler+0x10>

_gcov_one_value_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler_atomic>:
   0:	ldp	x3, x2, [x0]
   4:	cmp	x1, x3
   8:	b.ne	18 <__gcov_one_value_profiler_atomic+0x18>  // b.any
   c:	add	x2, x2, #0x1
  10:	str	x2, [x0, #8]
  14:	b	24 <__gcov_one_value_profiler_atomic+0x24>
  18:	cbnz	x2, 3c <__gcov_one_value_profiler_atomic+0x3c>
  1c:	mov	x2, #0x1                   	// #1
  20:	stp	x1, x2, [x0]
  24:	add	x0, x0, #0x10
  28:	ldxr	x1, [x0]
  2c:	add	x1, x1, #0x1
  30:	stxr	w2, x1, [x0]
  34:	cbnz	w2, 28 <__gcov_one_value_profiler_atomic+0x28>
  38:	ret
  3c:	sub	x2, x2, #0x1
  40:	b	10 <__gcov_one_value_profiler_atomic+0x10>

_gcov_average_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_average_profiler>:
   0:	ldr	x2, [x0]
   4:	add	x2, x2, x1
   8:	ldr	x1, [x0, #8]
   c:	add	x1, x1, #0x1
  10:	stp	x2, x1, [x0]
  14:	ret

_gcov_average_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_average_profiler_atomic>:
   0:	ldxr	x2, [x0]
   4:	add	x2, x2, x1
   8:	stxr	w3, x2, [x0]
   c:	cbnz	w3, 0 <__gcov_average_profiler_atomic>
  10:	add	x0, x0, #0x8
  14:	ldxr	x1, [x0]
  18:	add	x1, x1, #0x1
  1c:	stxr	w2, x1, [x0]
  20:	cbnz	w2, 14 <__gcov_average_profiler_atomic+0x14>
  24:	ret

_gcov_ior_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_ior_profiler>:
   0:	ldr	x2, [x0]
   4:	orr	x2, x2, x1
   8:	str	x2, [x0]
   c:	ret

_gcov_ior_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_ior_profiler_atomic>:
   0:	ldxr	x2, [x0]
   4:	orr	x2, x2, x1
   8:	stxr	w3, x2, [x0]
   c:	cbnz	w3, 0 <__gcov_ior_profiler_atomic>
  10:	ret

_gcov_indirect_call_profiler_v3.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_indirect_call_profiler_v3>:
   0:	mrs	x4, tpidr_el0
   4:	stp	x29, x30, [sp, #-16]!
   8:	mov	x3, x0
   c:	mov	x29, sp
  10:	adrp	x0, 0 <__gcov_indirect_call_profiler_v3>
  14:	ldr	x2, [x0]
  18:	add	x0, x0, #0x0
  1c:	blr	x2
  20:	add	x2, x4, x0
  24:	ldr	x0, [x4, x0]
  28:	cmp	x0, x1
  2c:	b.ne	64 <__gcov_indirect_call_profiler_v3+0x64>  // b.any
  30:	ldr	x1, [x2, #8]
  34:	ldp	x0, x2, [x1]
  38:	cmp	x3, x0
  3c:	b.ne	4c <__gcov_indirect_call_profiler_v3+0x4c>  // b.any
  40:	add	x2, x2, #0x1
  44:	str	x2, [x1, #8]
  48:	b	58 <__gcov_indirect_call_profiler_v3+0x58>
  4c:	cbnz	x2, 80 <__gcov_indirect_call_profiler_v3+0x80>
  50:	mov	x0, #0x1                   	// #1
  54:	stp	x3, x0, [x1]
  58:	ldr	x0, [x1, #16]
  5c:	add	x0, x0, #0x1
  60:	str	x0, [x1, #16]
  64:	adrp	x0, 0 <__gcov_indirect_call_profiler_v3>
  68:	ldr	x1, [x0]
  6c:	add	x0, x0, #0x0
  70:	blr	x1
  74:	str	xzr, [x4, x0]
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	sub	x2, x2, #0x1
  84:	b	44 <__gcov_indirect_call_profiler_v3+0x44>

_gcov_time_profiler.o:     file format elf64-littleaarch64


_gcov_indirect_call_topn_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_topn_value_profiler_body>:
   0:	add	x3, x0, #0x8
   4:	add	x6, x0, #0x48
   8:	mov	x2, x3
   c:	mov	w5, #0x0                   	// #0
  10:	ldp	x7, x4, [x2]
  14:	cmp	x7, x1
  18:	b.ne	28 <__gcov_topn_value_profiler_body+0x28>  // b.any
  1c:	add	x4, x4, #0x1
  20:	str	x4, [x2, #8]
  24:	ret
  28:	cbz	x4, d8 <__gcov_topn_value_profiler_body+0xd8>
  2c:	ldr	x7, [x3, #8]
  30:	cmp	x7, x4
  34:	csel	x3, x3, x2, le
  38:	add	x2, x2, #0x10
  3c:	cmp	x2, x6
  40:	b.ne	10 <__gcov_topn_value_profiler_body+0x10>  // b.any
  44:	str	x1, [x3]
  48:	mov	x1, #0x1                   	// #1
  4c:	str	x1, [x3, #8]
  50:	cbnz	w5, f0 <__gcov_topn_value_profiler_body+0xf0>
  54:	ldr	x1, [x0]
  58:	add	x1, x1, #0x1
  5c:	str	x1, [x0]
  60:	cmp	x1, #0xbb7
  64:	b.le	f0 <__gcov_topn_value_profiler_body+0xf0>
  68:	stp	x29, x30, [sp, #-16]!
  6c:	mov	x29, sp
  70:	sub	sp, sp, #0x10
  74:	str	xzr, [x0]
  78:	mov	x1, sp
  7c:	ldr	x3, [x0, #16]
  80:	str	xzr, [x1, #8]
  84:	cmp	x3, #0x0
  88:	b.gt	e4 <__gcov_topn_value_profiler_body+0xe4>
  8c:	mov	x2, x1
  90:	str	xzr, [x1]
  94:	ldr	x5, [x2]
  98:	ldr	x4, [x0, #32]
  9c:	cmp	x4, x5
  a0:	b.le	a8 <__gcov_topn_value_profiler_body+0xa8>
  a4:	str	x4, [x2]
  a8:	ldp	x2, x1, [x1]
  ac:	cmp	x1, x2
  b0:	csel	x1, x1, x2, le
  b4:	cmp	x1, x3
  b8:	b.le	c0 <__gcov_topn_value_profiler_body+0xc0>
  bc:	stp	xzr, xzr, [x0, #8]
  c0:	cmp	x1, x4
  c4:	b.le	cc <__gcov_topn_value_profiler_body+0xcc>
  c8:	stp	xzr, xzr, [x0, #24]
  cc:	mov	sp, x29
  d0:	ldp	x29, x30, [sp], #16
  d4:	ret
  d8:	mov	x3, x2
  dc:	mov	w5, #0x1                   	// #1
  e0:	b	38 <__gcov_topn_value_profiler_body+0x38>
  e4:	mov	x2, x1
  e8:	str	x3, [x2], #8
  ec:	b	94 <__gcov_topn_value_profiler_body+0x94>
  f0:	ret

00000000000000f4 <__gcov_indirect_call_topn_profiler>:
  f4:	stp	x29, x30, [sp, #-16]!
  f8:	mov	x2, x0
  fc:	adrp	x0, 0 <__gcov_topn_value_profiler_body>
 100:	ldr	x3, [x0]
 104:	add	x0, x0, #0x0
 108:	blr	x3
 10c:	mrs	x3, tpidr_el0
 110:	mov	x29, sp
 114:	add	x4, x3, x0
 118:	ldr	x0, [x3, x0]
 11c:	cmp	x0, x1
 120:	b.ne	134 <__gcov_indirect_call_topn_profiler+0x40>  // b.any
 124:	ldp	x29, x30, [sp], #16
 128:	mov	x1, x2
 12c:	ldr	x0, [x4, #8]
 130:	b	0 <__gcov_topn_value_profiler_body>
 134:	ldp	x29, x30, [sp], #16
 138:	ret

_gcov_dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_dump_int>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x0, 0 <__gcov_master>
   8:	mov	w1, #0x322a                	// #12842
   c:	mov	x29, sp
  10:	ldr	x0, [x0]
  14:	movk	w1, #0x4139, lsl #16
  18:	ldr	w2, [x0]
  1c:	str	x19, [sp, #16]
  20:	cmp	w2, w1
  24:	b.ne	3c <__gcov_dump_int+0x3c>  // b.any
  28:	ldr	x19, [x0, #8]
  2c:	cbnz	x19, 48 <__gcov_dump_int+0x48>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	adrp	x19, 0 <__gcov_root>
  40:	add	x19, x19, #0x0
  44:	b	2c <__gcov_dump_int+0x2c>
  48:	mov	x0, x19
  4c:	bl	0 <__gcov_dump_one>
  50:	ldr	x19, [x19, #16]
  54:	b	2c <__gcov_dump_int+0x2c>

0000000000000058 <__gcov_dump>:
  58:	b	0 <__gcov_dump_int>

_gcov_flush.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_flush>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x0, 0 <__pthread_key_create>
   8:	mov	x29, sp
   c:	ldr	x1, [x0]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	cbz	x1, 28 <__gcov_flush+0x28>
  1c:	adrp	x0, 0 <__gcov_flush>
  20:	add	x0, x0, #0x0
  24:	bl	0 <pthread_mutex_lock>
  28:	bl	0 <__gcov_dump_int>
  2c:	bl	0 <__gcov_reset_int>
  30:	ldr	x0, [x19]
  34:	cbz	x0, 4c <__gcov_flush+0x4c>
  38:	ldr	x19, [sp, #16]
  3c:	adrp	x0, 0 <__gcov_flush>
  40:	ldp	x29, x30, [sp], #32
  44:	add	x0, x0, #0x0
  48:	b	0 <pthread_mutex_unlock>
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

_gcov_fork.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_fork>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	bl	0 <__gcov_flush>
  10:	bl	0 <fork>
  14:	mov	w19, w0
  18:	cbnz	w0, 38 <__gcov_fork+0x38>
  1c:	adrp	x0, 0 <__pthread_key_create>
  20:	ldr	x0, [x0]
  24:	cbz	x0, 38 <__gcov_fork+0x38>
  28:	adrp	x0, 0 <__gcov_flush_mx>
  2c:	mov	x1, #0x0                   	// #0
  30:	add	x0, x0, #0x0
  34:	bl	0 <pthread_mutex_init>
  38:	mov	w0, w19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

_gcov_execl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execl>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x0, x29, #0x110
  48:	stp	x0, x0, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w2, #0xffffffd0            	// #-48
  54:	str	x0, [x29, #48]
  58:	mov	w0, #0xffffff80            	// #-128
  5c:	str	w2, [x29, #56]
  60:	add	x6, x29, #0x110
  64:	str	w0, [x29, #60]
  68:	mov	x4, x6
  6c:	ldp	x0, x1, [x29, #32]
  70:	stp	x0, x1, [x29, #64]
  74:	mov	w5, #0x2                   	// #2
  78:	ldp	x0, x1, [x29, #48]
  7c:	stp	x0, x1, [x29, #80]
  80:	tbnz	w2, #31, f4 <__gcov_execl+0xf4>
  84:	add	x3, x4, #0xf
  88:	mov	w0, w2
  8c:	and	x3, x3, #0xfffffffffffffff8
  90:	ldr	x1, [x4]
  94:	cbnz	x1, e4 <__gcov_execl+0xe4>
  98:	ubfiz	x2, x5, #3, #32
  9c:	mov	x3, #0x0                   	// #0
  a0:	add	x2, x2, #0xf
  a4:	and	x2, x2, #0xffffffff0
  a8:	sub	sp, sp, x2
  ac:	ldr	w2, [x29, #88]
  b0:	mov	x1, sp
  b4:	mov	x0, x1
  b8:	ldr	x7, [x29, #72]
  bc:	str	x20, [x0], #8
  c0:	add	w4, w3, #0x1
  c4:	cmp	w5, w4
  c8:	b.hi	118 <__gcov_execl+0x118>  // b.pmore
  cc:	mov	x0, x19
  d0:	bl	0 <execv>
  d4:	mov	sp, x29
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x29, x30, [sp], #272
  e0:	ret
  e4:	add	w5, w5, #0x1
  e8:	mov	x4, x3
  ec:	mov	w2, w0
  f0:	b	80 <__gcov_execl+0x80>
  f4:	add	w0, w2, #0x8
  f8:	cmp	w0, #0x0
  fc:	b.le	10c <__gcov_execl+0x10c>
 100:	add	x3, x4, #0xf
 104:	and	x3, x3, #0xfffffffffffffff8
 108:	b	90 <__gcov_execl+0x90>
 10c:	mov	x3, x4
 110:	add	x4, x6, w2, sxtw
 114:	b	90 <__gcov_execl+0x90>
 118:	ldr	x4, [x29, #64]
 11c:	tbnz	w2, #31, 144 <__gcov_execl+0x144>
 120:	add	x6, x4, #0xf
 124:	and	x6, x6, #0xfffffffffffffff8
 128:	str	x6, [x29, #64]
 12c:	mov	w6, w2
 130:	ldr	x2, [x4]
 134:	str	x2, [x0, x3, lsl #3]
 138:	add	x3, x3, #0x1
 13c:	mov	w2, w6
 140:	b	c0 <__gcov_execl+0xc0>
 144:	add	w6, w2, #0x8
 148:	cmp	w6, #0x0
 14c:	b.le	160 <__gcov_execl+0x160>
 150:	add	x2, x4, #0xf
 154:	and	x2, x2, #0xfffffffffffffff8
 158:	str	x2, [x29, #64]
 15c:	b	130 <__gcov_execl+0x130>
 160:	add	x4, x7, w2, sxtw
 164:	b	130 <__gcov_execl+0x130>

_gcov_execlp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execlp>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x0, x29, #0x110
  48:	stp	x0, x0, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w2, #0xffffffd0            	// #-48
  54:	str	x0, [x29, #48]
  58:	mov	w0, #0xffffff80            	// #-128
  5c:	str	w2, [x29, #56]
  60:	add	x6, x29, #0x110
  64:	str	w0, [x29, #60]
  68:	mov	x4, x6
  6c:	ldp	x0, x1, [x29, #32]
  70:	stp	x0, x1, [x29, #64]
  74:	mov	w5, #0x2                   	// #2
  78:	ldp	x0, x1, [x29, #48]
  7c:	stp	x0, x1, [x29, #80]
  80:	tbnz	w2, #31, f4 <__gcov_execlp+0xf4>
  84:	add	x3, x4, #0xf
  88:	mov	w0, w2
  8c:	and	x3, x3, #0xfffffffffffffff8
  90:	ldr	x1, [x4]
  94:	cbnz	x1, e4 <__gcov_execlp+0xe4>
  98:	ubfiz	x2, x5, #3, #32
  9c:	mov	x3, #0x0                   	// #0
  a0:	add	x2, x2, #0xf
  a4:	and	x2, x2, #0xffffffff0
  a8:	sub	sp, sp, x2
  ac:	ldr	w2, [x29, #88]
  b0:	mov	x1, sp
  b4:	mov	x0, x1
  b8:	ldr	x7, [x29, #72]
  bc:	str	x20, [x0], #8
  c0:	add	w4, w3, #0x1
  c4:	cmp	w5, w4
  c8:	b.hi	118 <__gcov_execlp+0x118>  // b.pmore
  cc:	mov	x0, x19
  d0:	bl	0 <execvp>
  d4:	mov	sp, x29
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x29, x30, [sp], #272
  e0:	ret
  e4:	add	w5, w5, #0x1
  e8:	mov	x4, x3
  ec:	mov	w2, w0
  f0:	b	80 <__gcov_execlp+0x80>
  f4:	add	w0, w2, #0x8
  f8:	cmp	w0, #0x0
  fc:	b.le	10c <__gcov_execlp+0x10c>
 100:	add	x3, x4, #0xf
 104:	and	x3, x3, #0xfffffffffffffff8
 108:	b	90 <__gcov_execlp+0x90>
 10c:	mov	x3, x4
 110:	add	x4, x6, w2, sxtw
 114:	b	90 <__gcov_execlp+0x90>
 118:	ldr	x4, [x29, #64]
 11c:	tbnz	w2, #31, 144 <__gcov_execlp+0x144>
 120:	add	x6, x4, #0xf
 124:	and	x6, x6, #0xfffffffffffffff8
 128:	str	x6, [x29, #64]
 12c:	mov	w6, w2
 130:	ldr	x2, [x4]
 134:	str	x2, [x0, x3, lsl #3]
 138:	add	x3, x3, #0x1
 13c:	mov	w2, w6
 140:	b	c0 <__gcov_execlp+0xc0>
 144:	add	w6, w2, #0x8
 148:	cmp	w6, #0x0
 14c:	b.le	160 <__gcov_execlp+0x160>
 150:	add	x2, x4, #0xf
 154:	and	x2, x2, #0xfffffffffffffff8
 158:	str	x2, [x29, #64]
 15c:	b	130 <__gcov_execlp+0x130>
 160:	add	x4, x7, w2, sxtw
 164:	b	130 <__gcov_execlp+0x130>

_gcov_execle.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execle>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x0, x29, #0x110
  48:	stp	x0, x0, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w2, #0xffffffd0            	// #-48
  54:	str	x0, [x29, #48]
  58:	mov	w0, #0xffffff80            	// #-128
  5c:	str	w2, [x29, #56]
  60:	add	x6, x29, #0x110
  64:	str	w0, [x29, #60]
  68:	mov	x4, x6
  6c:	ldp	x0, x1, [x29, #32]
  70:	stp	x0, x1, [x29, #64]
  74:	mov	w5, #0x2                   	// #2
  78:	ldp	x0, x1, [x29, #48]
  7c:	stp	x0, x1, [x29, #80]
  80:	tbnz	w2, #31, 11c <__gcov_execle+0x11c>
  84:	add	x3, x4, #0xf
  88:	mov	w0, w2
  8c:	and	x3, x3, #0xfffffffffffffff8
  90:	ldr	x1, [x4]
  94:	cbnz	x1, 10c <__gcov_execle+0x10c>
  98:	ubfiz	x2, x5, #3, #32
  9c:	ldr	w3, [x29, #88]
  a0:	add	x2, x2, #0xf
  a4:	mov	x4, #0x0                   	// #0
  a8:	and	x2, x2, #0xffffffff0
  ac:	mov	w0, #0x0                   	// #0
  b0:	sub	sp, sp, x2
  b4:	mov	x1, sp
  b8:	mov	x6, x1
  bc:	ldr	x8, [x29, #72]
  c0:	str	x20, [x6], #8
  c4:	add	w7, w4, #0x1
  c8:	cmp	w5, w7
  cc:	ldr	x2, [x29, #64]
  d0:	b.hi	140 <__gcov_execle+0x140>  // b.pmore
  d4:	cbz	w0, dc <__gcov_execle+0xdc>
  d8:	str	w3, [x29, #88]
  dc:	ldr	w0, [x29, #88]
  e0:	tbnz	w0, #31, 190 <__gcov_execle+0x190>
  e4:	add	x0, x2, #0xf
  e8:	and	x0, x0, #0xfffffffffffffff8
  ec:	str	x0, [x29, #64]
  f0:	ldr	x2, [x2]
  f4:	mov	x0, x19
  f8:	bl	0 <execve>
  fc:	mov	sp, x29
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x29, x30, [sp], #272
 108:	ret
 10c:	add	w5, w5, #0x1
 110:	mov	x4, x3
 114:	mov	w2, w0
 118:	b	80 <__gcov_execle+0x80>
 11c:	add	w0, w2, #0x8
 120:	cmp	w0, #0x0
 124:	b.le	134 <__gcov_execle+0x134>
 128:	add	x3, x4, #0xf
 12c:	and	x3, x3, #0xfffffffffffffff8
 130:	b	90 <__gcov_execle+0x90>
 134:	mov	x3, x4
 138:	add	x4, x6, w2, sxtw
 13c:	b	90 <__gcov_execle+0x90>
 140:	tbnz	w3, #31, 168 <__gcov_execle+0x168>
 144:	add	x7, x2, #0xf
 148:	and	x7, x7, #0xfffffffffffffff8
 14c:	str	x7, [x29, #64]
 150:	mov	w7, w3
 154:	ldr	x2, [x2]
 158:	mov	w3, w7
 15c:	str	x2, [x6, x4, lsl #3]
 160:	add	x4, x4, #0x1
 164:	b	c4 <__gcov_execle+0xc4>
 168:	add	w7, w3, #0x8
 16c:	cmp	w7, #0x0
 170:	b.le	188 <__gcov_execle+0x188>
 174:	add	x0, x2, #0xf
 178:	and	x0, x0, #0xfffffffffffffff8
 17c:	str	x0, [x29, #64]
 180:	mov	w0, #0x1                   	// #1
 184:	b	154 <__gcov_execle+0x154>
 188:	add	x2, x8, w3, sxtw
 18c:	b	180 <__gcov_execle+0x180>
 190:	cmn	w0, #0x7
 194:	b.ge	e4 <__gcov_execle+0xe4>  // b.tcont
 198:	add	x2, x8, w0, sxtw
 19c:	b	f0 <__gcov_execle+0xf0>

_gcov_execv.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	bl	0 <__gcov_flush>
  18:	mov	x1, x20
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <execv>

_gcov_execvp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execvp>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	bl	0 <__gcov_flush>
  18:	mov	x1, x20
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <execvp>

_gcov_execve.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execve>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x2
  1c:	bl	0 <__gcov_flush>
  20:	mov	x2, x21
  24:	mov	x1, x20
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldr	x21, [sp, #32]
  34:	ldp	x29, x30, [sp], #48
  38:	b	0 <execve>

_gcov_reset.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_reset_int>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x0, 0 <__gcov_master>
   8:	mov	w1, #0x322a                	// #12842
   c:	mov	x29, sp
  10:	ldr	x0, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	movk	w1, #0x4139, lsl #16
  1c:	stp	x21, x22, [sp, #32]
  20:	ldr	w2, [x0]
  24:	stp	x23, x24, [sp, #48]
  28:	cmp	w2, w1
  2c:	b.ne	4c <__gcov_reset_int+0x4c>  // b.any
  30:	ldr	x19, [x0, #8]
  34:	cbnz	x19, 58 <__gcov_reset_int+0x58>
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x21, x22, [sp, #32]
  40:	ldp	x23, x24, [sp, #48]
  44:	ldp	x29, x30, [sp], #64
  48:	ret
  4c:	adrp	x19, 0 <__gcov_root>
  50:	add	x19, x19, #0x0
  54:	b	34 <__gcov_reset_int+0x34>
  58:	ldr	x20, [x19]
  5c:	cbnz	x20, d8 <__gcov_reset_int+0xd8>
  60:	ldrb	w0, [x19, #8]
  64:	and	w0, w0, #0xfffffffe
  68:	strb	w0, [x19, #8]
  6c:	ldr	x19, [x19, #16]
  70:	b	34 <__gcov_reset_int+0x34>
  74:	ldr	x0, [x20, #112]
  78:	ldr	x21, [x0, w22, uxtw #3]
  7c:	cbz	x21, c0 <__gcov_reset_int+0xc0>
  80:	ldr	x0, [x21]
  84:	cmp	x20, x0
  88:	b.ne	c0 <__gcov_reset_int+0xc0>  // b.any
  8c:	add	x21, x21, #0x18
  90:	add	x23, x20, #0x20
  94:	ldr	x0, [x23]
  98:	cbz	x0, b4 <__gcov_reset_int+0xb4>
  9c:	ldr	x0, [x21, #8]
  a0:	add	x21, x21, #0x10
  a4:	ldur	w2, [x21, #-16]
  a8:	mov	w1, #0x0                   	// #0
  ac:	lsl	x2, x2, #3
  b0:	bl	0 <memset>
  b4:	add	x23, x23, #0x8
  b8:	cmp	x23, x24
  bc:	b.ne	94 <__gcov_reset_int+0x94>  // b.any
  c0:	add	w22, w22, #0x1
  c4:	ldr	w0, [x20, #104]
  c8:	cmp	w22, w0
  cc:	b.cc	74 <__gcov_reset_int+0x74>  // b.lo, b.ul, b.last
  d0:	ldr	x20, [x20, #8]
  d4:	b	5c <__gcov_reset_int+0x5c>
  d8:	add	x24, x20, #0x68
  dc:	mov	w22, #0x0                   	// #0
  e0:	b	c4 <__gcov_reset_int+0xc4>

00000000000000e4 <__gcov_reset>:
  e4:	b	0 <__gcov_reset_int>

_gcov.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_write_block>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	lsl	w1, w0, #2
       8:	mov	x2, #0x1                   	// #1
       c:	mov	x29, sp
      10:	stp	x19, x20, [sp, #16]
      14:	adrp	x19, 1028 <__gcov_dump_one+0x7ac>
      18:	mov	w20, w0
      1c:	str	x21, [sp, #32]
      20:	ldr	x21, [x19]
      24:	mov	x0, x21
      28:	ldr	x3, [x0], #32
      2c:	bl	0 <fwrite>
      30:	cmp	x0, #0x1
      34:	b.eq	40 <gcov_write_block+0x40>  // b.none
      38:	mov	w0, #0x1                   	// #1
      3c:	str	w0, [x21, #24]
      40:	ldr	x1, [x19]
      44:	ldr	x21, [sp, #32]
      48:	ldr	w0, [x1, #8]
      4c:	add	w0, w0, w20
      50:	str	w0, [x1, #8]
      54:	ldr	w0, [x1, #12]
      58:	sub	w20, w0, w20
      5c:	str	w20, [x1, #12]
      60:	ldp	x19, x20, [sp, #16]
      64:	ldp	x29, x30, [sp], #48
      68:	ret

000000000000006c <gcov_write_words>:
      6c:	stp	x29, x30, [sp, #-48]!
      70:	adrp	x1, 1028 <__gcov_dump_one+0x7ac>
      74:	mov	x29, sp
      78:	str	x21, [sp, #32]
      7c:	ldr	x21, [x1]
      80:	stp	x19, x20, [sp, #16]
      84:	mov	w20, w0
      88:	mov	x19, x1
      8c:	ldr	w0, [x21, #12]
      90:	cmp	w0, #0x3ff
      94:	b.ls	b0 <gcov_write_words+0x44>  // b.plast
      98:	mov	w0, #0x400                 	// #1024
      9c:	bl	0 <gcov_write_block>
      a0:	ldr	w0, [x21, #12]
      a4:	cbz	w0, b0 <gcov_write_words+0x44>
      a8:	ldr	w0, [x21, #4128]
      ac:	str	w0, [x21, #32]
      b0:	ldr	x19, [x19]
      b4:	ldr	x21, [sp, #32]
      b8:	ldr	w2, [x19, #12]
      bc:	add	w20, w2, w20
      c0:	str	w20, [x19, #12]
      c4:	ubfiz	x0, x2, #2, #32
      c8:	add	x0, x0, #0x20
      cc:	add	x0, x19, x0
      d0:	ldp	x19, x20, [sp, #16]
      d4:	ldp	x29, x30, [sp], #48
      d8:	ret

00000000000000dc <gcov_read_words>:
      dc:	stp	x29, x30, [sp, #-48]!
      e0:	adrp	x1, 1028 <__gcov_dump_one+0x7ac>
      e4:	mov	x29, sp
      e8:	ldr	x2, [x1]
      ec:	stp	x19, x20, [sp, #16]
      f0:	ldr	w3, [x2, #12]
      f4:	ldr	w4, [x2, #28]
      f8:	str	x21, [sp, #32]
      fc:	mov	w21, w0
     100:	ldr	w0, [x2, #16]
     104:	cmp	w4, #0x0
     108:	sub	w0, w0, w3
     10c:	b.le	180 <gcov_read_words+0xa4>
     110:	mov	x19, x1
     114:	cmp	w0, w21
     118:	b.cs	188 <gcov_read_words+0xac>  // b.hs, b.nlast
     11c:	ldr	w1, [x2, #8]
     120:	add	w1, w1, w3
     124:	str	w1, [x2, #8]
     128:	cbz	w0, 138 <gcov_read_words+0x5c>
     12c:	add	x1, x2, #0x20
     130:	ldr	w1, [x1, w3, uxtw #2]
     134:	str	w1, [x2, #32]
     138:	ldr	x20, [x19]
     13c:	mov	x1, #0x1                   	// #1
     140:	mov	x2, #0x1000                	// #4096
     144:	add	x4, x20, #0x20
     148:	ldr	x3, [x20]
     14c:	stp	wzr, w0, [x20, #12]
     150:	add	x0, x4, w0, uxtw #2
     154:	bl	0 <fread>
     158:	lsr	x0, x0, #2
     15c:	ldr	w1, [x20, #16]
     160:	add	w1, w1, w0
     164:	str	w1, [x20, #16]
     168:	cmp	w1, w21
     16c:	b.cs	188 <gcov_read_words+0xac>  // b.hs, b.nlast
     170:	ldr	w0, [x20, #20]
     174:	add	w21, w21, w0
     178:	sub	w21, w21, w1
     17c:	stp	wzr, w21, [x20, #16]
     180:	mov	x0, #0x0                   	// #0
     184:	b	1a4 <gcov_read_words+0xc8>
     188:	ldr	x1, [x19]
     18c:	ldr	w3, [x1, #12]
     190:	add	w21, w3, w21
     194:	str	w21, [x1, #12]
     198:	ubfiz	x2, x3, #2, #32
     19c:	add	x2, x2, #0x20
     1a0:	add	x0, x2, x1
     1a4:	ldp	x19, x20, [sp, #16]
     1a8:	ldr	x21, [sp, #32]
     1ac:	ldp	x29, x30, [sp], #48
     1b0:	ret

00000000000001b4 <free_fn_data>:
     1b4:	stp	x29, x30, [sp, #-64]!
     1b8:	mov	x29, sp
     1bc:	stp	x19, x20, [sp, #16]
     1c0:	mov	x20, x1
     1c4:	stp	x21, x22, [sp, #32]
     1c8:	str	x23, [sp, #48]
     1cc:	cbz	x1, 1f4 <free_fn_data+0x40>
     1d0:	ldr	x22, [x1]
     1d4:	mov	x19, x0
     1d8:	add	x21, x0, w2, uxtw #3
     1dc:	mov	w0, #0x0                   	// #0
     1e0:	cmp	x19, x21
     1e4:	b.ne	20c <free_fn_data+0x58>  // b.any
     1e8:	mov	x0, x20
     1ec:	mov	x20, x22
     1f0:	bl	0 <free>
     1f4:	mov	x0, x20
     1f8:	ldp	x19, x20, [sp, #16]
     1fc:	ldp	x21, x22, [sp, #32]
     200:	ldr	x23, [sp, #48]
     204:	ldp	x29, x30, [sp], #64
     208:	ret
     20c:	ldr	x1, [x19, #32]
     210:	cbz	x1, 22c <free_fn_data+0x78>
     214:	add	w23, w0, #0x1
     218:	ubfiz	x0, x0, #4, #32
     21c:	add	x0, x20, x0
     220:	ldr	x0, [x0, #48]
     224:	bl	0 <free>
     228:	mov	w0, w23
     22c:	add	x19, x19, #0x8
     230:	b	1e0 <free_fn_data+0x2c>

0000000000000234 <gcov_version_string>:
     234:	stp	x29, x30, [sp, #-32]!
     238:	mov	x29, sp
     23c:	str	x19, [sp, #16]
     240:	mov	x19, x0
     244:	ldrb	w2, [x1]
     248:	sub	w2, w2, #0x41
     24c:	and	w3, w2, #0xff
     250:	cmp	w3, #0x19
     254:	b.hi	280 <gcov_version_string+0x4c>  // b.pmore
     258:	ldrb	w5, [x1, #1]
     25c:	sub	w5, w5, #0x30
     260:	and	w3, w5, #0xff
     264:	cmp	w3, #0x9
     268:	b.hi	280 <gcov_version_string+0x4c>  // b.pmore
     26c:	ldrb	w3, [x1, #2]
     270:	sub	w3, w3, #0x30
     274:	and	w4, w3, #0xff
     278:	cmp	w4, #0x9
     27c:	b.ls	2a0 <gcov_version_string+0x6c>  // b.plast
     280:	adrp	x1, 0 <gcov_write_block>
     284:	mov	x0, x19
     288:	add	x1, x1, #0x0
     28c:	bl	0 <strcpy>
     290:	mov	x0, x19
     294:	ldr	x19, [sp, #16]
     298:	ldp	x29, x30, [sp], #32
     29c:	ret
     2a0:	ldrb	w6, [x1, #3]
     2a4:	adrp	x4, 0 <gcov_write_block>
     2a8:	adrp	x1, 0 <gcov_write_block>
     2ac:	add	x4, x4, #0x0
     2b0:	cmp	w6, #0x2a
     2b4:	add	x1, x1, #0x0
     2b8:	csel	x4, x4, x1, eq  // eq = none
     2bc:	mov	w1, #0xa                   	// #10
     2c0:	madd	w2, w2, w1, w5
     2c4:	adrp	x1, 0 <gcov_write_block>
     2c8:	add	x1, x1, #0x0
     2cc:	bl	0 <sprintf>
     2d0:	b	290 <gcov_version_string+0x5c>

00000000000002d4 <gcov_error>:
     2d4:	stp	x29, x30, [sp, #-304]!
     2d8:	mov	x29, sp
     2dc:	stp	x19, x20, [sp, #16]
     2e0:	adrp	x19, 8 <gcov_write_block+0x8>
     2e4:	ldr	x20, [x19]
     2e8:	str	x21, [sp, #32]
     2ec:	mov	x21, x0
     2f0:	add	x0, sp, #0x130
     2f4:	stp	x0, x0, [sp, #80]
     2f8:	add	x0, sp, #0xf0
     2fc:	str	x0, [sp, #96]
     300:	mov	w0, #0xffffffc8            	// #-56
     304:	str	q0, [sp, #112]
     308:	str	q1, [sp, #128]
     30c:	str	q2, [sp, #144]
     310:	str	q3, [sp, #160]
     314:	str	q4, [sp, #176]
     318:	str	q5, [sp, #192]
     31c:	str	q6, [sp, #208]
     320:	str	q7, [sp, #224]
     324:	stp	x1, x2, [sp, #248]
     328:	stp	x3, x4, [sp, #264]
     32c:	stp	x5, x6, [sp, #280]
     330:	str	x7, [sp, #296]
     334:	str	w0, [sp, #104]
     338:	mov	w0, #0xffffff80            	// #-128
     33c:	str	w0, [sp, #108]
     340:	ldr	x0, [x20]
     344:	cbnz	x0, 384 <gcov_error+0xb0>
     348:	adrp	x0, 0 <gcov_write_block>
     34c:	add	x0, x0, #0x0
     350:	bl	0 <getenv>
     354:	cbz	x0, 368 <gcov_error+0x94>
     358:	adrp	x1, 0 <gcov_write_block>
     35c:	add	x1, x1, #0x0
     360:	bl	0 <fopen>
     364:	str	x0, [x20]
     368:	ldr	x2, [x19]
     36c:	ldr	x0, [x2]
     370:	cbnz	x0, 384 <gcov_error+0xb0>
     374:	adrp	x1, 0 <stderr>
     378:	ldr	x1, [x1]
     37c:	ldr	x0, [x1]
     380:	str	x0, [x2]
     384:	ldr	x19, [x19]
     388:	add	x2, sp, #0x30
     38c:	ldp	x0, x1, [sp, #80]
     390:	ldr	x20, [x19]
     394:	stp	x0, x1, [sp, #48]
     398:	ldp	x0, x1, [sp, #96]
     39c:	stp	x0, x1, [sp, #64]
     3a0:	mov	x1, x21
     3a4:	mov	x0, x20
     3a8:	bl	0 <vfprintf>
     3ac:	mov	w19, w0
     3b0:	adrp	x0, 0 <gcov_write_block>
     3b4:	add	x0, x0, #0x0
     3b8:	bl	0 <getenv>
     3bc:	cbz	x0, 3d8 <gcov_error+0x104>
     3c0:	mov	x1, x20
     3c4:	adrp	x0, 0 <gcov_write_block>
     3c8:	add	x0, x0, #0x0
     3cc:	bl	0 <fputs>
     3d0:	mov	w0, #0x1                   	// #1
     3d4:	bl	0 <exit>
     3d8:	mov	w0, w19
     3dc:	ldp	x19, x20, [sp, #16]
     3e0:	ldr	x21, [sp, #32]
     3e4:	ldp	x29, x30, [sp], #304
     3e8:	ret

00000000000003ec <gcov_version.isra.0.part.0>:
     3ec:	stp	x29, x30, [sp, #-320]!
     3f0:	rev	w1, w1
     3f4:	mov	x29, sp
     3f8:	str	w1, [sp, #48]
     3fc:	mov	w1, #0x3941                	// #14657
     400:	movk	w1, #0x2a32, lsl #16
     404:	stp	x19, x20, [sp, #16]
     408:	stp	x21, x22, [sp, #32]
     40c:	str	w1, [sp, #56]
     410:	cbnz	x2, 470 <gcov_version.isra.0.part.0+0x84>
     414:	ldr	x19, [x0]
     418:	add	x21, sp, #0x38
     41c:	add	x22, sp, #0x30
     420:	mov	x1, x21
     424:	add	x0, sp, #0xc0
     428:	bl	234 <gcov_version_string>
     42c:	mov	x1, x22
     430:	mov	x20, x0
     434:	add	x0, sp, #0x40
     438:	bl	234 <gcov_version_string>
     43c:	mov	x5, x22
     440:	mov	x4, x0
     444:	mov	x3, x21
     448:	mov	x2, x20
     44c:	mov	x1, x19
     450:	adrp	x0, 0 <gcov_write_block>
     454:	add	x0, x0, #0x0
     458:	bl	2d4 <gcov_error>
     45c:	mov	w0, #0x0                   	// #0
     460:	ldp	x19, x20, [sp, #16]
     464:	ldp	x21, x22, [sp, #32]
     468:	ldp	x29, x30, [sp], #320
     46c:	ret
     470:	mov	x19, x2
     474:	b	418 <gcov_version.isra.0.part.0+0x2c>

0000000000000478 <__gcov_rewrite>:
     478:	adrp	x0, 1028 <__gcov_dump_one+0x7ac>
     47c:	mov	w1, #0xffffffff            	// #-1
     480:	mov	w2, #0x0                   	// #0
     484:	ldr	x0, [x0]
     488:	str	xzr, [x0, #8]
     48c:	str	w1, [x0, #28]
     490:	mov	x1, #0x0                   	// #0
     494:	ldr	x0, [x0]
     498:	b	0 <fseek>

000000000000049c <__gcov_open>:
     49c:	stp	x29, x30, [sp, #-80]!
     4a0:	mov	x29, sp
     4a4:	stp	x19, x20, [sp, #16]
     4a8:	adrp	x19, 1028 <__gcov_dump_one+0x7ac>
     4ac:	mov	x20, x0
     4b0:	str	x21, [sp, #32]
     4b4:	strh	wzr, [sp, #50]
     4b8:	stp	xzr, xzr, [sp, #56]
     4bc:	bl	0 <getpid>
     4c0:	mov	x1, #0xffffffff00000000    	// #-4294967296
     4c4:	str	w0, [sp, #72]
     4c8:	mov	w2, #0x1b6                 	// #438
     4cc:	ldr	x0, [x19]
     4d0:	stp	xzr, x1, [x0, #8]
     4d4:	mov	w1, #0x42                  	// #66
     4d8:	str	wzr, [x0, #24]
     4dc:	mov	w0, #0x1                   	// #1
     4e0:	strh	w0, [sp, #48]
     4e4:	mov	x0, x20
     4e8:	bl	0 <open>
     4ec:	tbnz	w0, #31, 540 <__gcov_open+0xa4>
     4f0:	mov	w20, w0
     4f4:	add	x21, sp, #0x30
     4f8:	mov	x2, x21
     4fc:	mov	w0, w20
     500:	mov	w1, #0x7                   	// #7
     504:	bl	0 <fcntl>
     508:	cbz	w0, 51c <__gcov_open+0x80>
     50c:	bl	0 <__errno_location>
     510:	ldr	w0, [x0]
     514:	cmp	w0, #0x4
     518:	b.eq	4f8 <__gcov_open+0x5c>  // b.none
     51c:	mov	w0, w20
     520:	adrp	x1, 0 <gcov_write_block>
     524:	add	x1, x1, #0x0
     528:	bl	0 <fdopen>
     52c:	ldr	x19, [x19]
     530:	str	x0, [x19]
     534:	cbnz	x0, 548 <__gcov_open+0xac>
     538:	mov	w0, w20
     53c:	bl	0 <close>
     540:	mov	w0, #0x0                   	// #0
     544:	b	55c <__gcov_open+0xc0>
     548:	mov	w20, #0x1                   	// #1
     54c:	mov	x1, #0x0                   	// #0
     550:	str	w20, [x19, #28]
     554:	bl	0 <setbuf>
     558:	mov	w0, w20
     55c:	ldp	x19, x20, [sp, #16]
     560:	ldr	x21, [sp, #32]
     564:	ldp	x29, x30, [sp], #80
     568:	ret

000000000000056c <__gcov_close>:
     56c:	stp	x29, x30, [sp, #-32]!
     570:	mov	x29, sp
     574:	stp	x19, x20, [sp, #16]
     578:	adrp	x19, 1028 <__gcov_dump_one+0x7ac>
     57c:	ldr	x1, [x19]
     580:	ldr	x0, [x1]
     584:	cbz	x0, 5b0 <__gcov_close+0x44>
     588:	ldr	w0, [x1, #12]
     58c:	cbz	w0, 59c <__gcov_close+0x30>
     590:	ldr	w1, [x1, #28]
     594:	tbz	w1, #31, 59c <__gcov_close+0x30>
     598:	bl	0 <gcov_write_block>
     59c:	ldr	x20, [x19]
     5a0:	ldr	x0, [x20]
     5a4:	bl	0 <fclose>
     5a8:	str	xzr, [x20]
     5ac:	str	wzr, [x20, #16]
     5b0:	ldr	x19, [x19]
     5b4:	str	wzr, [x19, #28]
     5b8:	ldr	w0, [x19, #24]
     5bc:	ldp	x19, x20, [sp, #16]
     5c0:	ldp	x29, x30, [sp], #32
     5c4:	ret

00000000000005c8 <__gcov_write_unsigned>:
     5c8:	stp	x29, x30, [sp, #-32]!
     5cc:	mov	x29, sp
     5d0:	str	x19, [sp, #16]
     5d4:	mov	w19, w0
     5d8:	mov	w0, #0x1                   	// #1
     5dc:	bl	6c <gcov_write_words>
     5e0:	str	w19, [x0]
     5e4:	ldr	x19, [sp, #16]
     5e8:	ldp	x29, x30, [sp], #32
     5ec:	ret

00000000000005f0 <__gcov_write_counter>:
     5f0:	stp	x29, x30, [sp, #-32]!
     5f4:	mov	x29, sp
     5f8:	str	x19, [sp, #16]
     5fc:	mov	x19, x0
     600:	mov	w0, #0x2                   	// #2
     604:	bl	6c <gcov_write_words>
     608:	str	x19, [x0]
     60c:	ldr	x19, [sp, #16]
     610:	ldp	x29, x30, [sp], #32
     614:	ret

0000000000000618 <__gcov_write_tag_length>:
     618:	stp	x29, x30, [sp, #-32]!
     61c:	mov	x29, sp
     620:	stp	x19, x20, [sp, #16]
     624:	mov	w19, w1
     628:	mov	w20, w0
     62c:	mov	w0, #0x2                   	// #2
     630:	bl	6c <gcov_write_words>
     634:	stp	w20, w19, [x0]
     638:	ldp	x19, x20, [sp, #16]
     63c:	ldp	x29, x30, [sp], #32
     640:	ret

0000000000000644 <__gcov_write_summary>:
     644:	stp	x29, x30, [sp, #-32]!
     648:	mov	x29, sp
     64c:	str	x19, [sp, #16]
     650:	mov	x19, x1
     654:	mov	w1, #0x2                   	// #2
     658:	bl	618 <__gcov_write_tag_length>
     65c:	ldr	w0, [x19]
     660:	bl	5c8 <__gcov_write_unsigned>
     664:	ldr	w0, [x19, #8]
     668:	ldr	x19, [sp, #16]
     66c:	ldp	x29, x30, [sp], #32
     670:	b	5c8 <__gcov_write_unsigned>

0000000000000674 <__gcov_read_unsigned>:
     674:	stp	x29, x30, [sp, #-16]!
     678:	mov	w0, #0x1                   	// #1
     67c:	mov	x29, sp
     680:	bl	dc <gcov_read_words>
     684:	cbz	x0, 694 <__gcov_read_unsigned+0x20>
     688:	ldr	w0, [x0]
     68c:	ldp	x29, x30, [sp], #16
     690:	ret
     694:	mov	w0, #0x0                   	// #0
     698:	b	68c <__gcov_read_unsigned+0x18>

000000000000069c <__gcov_read_counter>:
     69c:	stp	x29, x30, [sp, #-16]!
     6a0:	mov	w0, #0x2                   	// #2
     6a4:	mov	x29, sp
     6a8:	bl	dc <gcov_read_words>
     6ac:	cbz	x0, 6bc <__gcov_read_counter+0x20>
     6b0:	ldr	x0, [x0]
     6b4:	ldp	x29, x30, [sp], #16
     6b8:	ret
     6bc:	mov	x0, #0x0                   	// #0
     6c0:	b	6b4 <__gcov_read_counter+0x18>

00000000000006c4 <mangle_path>:
     6c4:	stp	x29, x30, [sp, #-80]!
     6c8:	mov	x29, sp
     6cc:	stp	x19, x20, [sp, #16]
     6d0:	mov	x19, x0
     6d4:	stp	x21, x22, [sp, #32]
     6d8:	stp	x23, x24, [sp, #48]
     6dc:	mov	w24, #0x5e                  	// #94
     6e0:	str	x25, [sp, #64]
     6e4:	bl	0 <strlen>
     6e8:	add	x0, x0, #0x1
     6ec:	bl	0 <malloc>
     6f0:	mov	x21, x0
     6f4:	mov	x3, x0
     6f8:	mov	w25, #0x23                  	// #35
     6fc:	ldrb	w0, [x19]
     700:	cbnz	w0, 76c <mangle_path+0xa8>
     704:	strb	wzr, [x3]
     708:	mov	x0, x21
     70c:	ldp	x19, x20, [sp, #16]
     710:	ldp	x21, x22, [sp, #32]
     714:	ldp	x23, x24, [sp, #48]
     718:	ldr	x25, [sp, #64]
     71c:	ldp	x29, x30, [sp], #80
     720:	ret
     724:	cmp	w22, #0x2f
     728:	b.eq	738 <mangle_path+0x74>  // b.none
     72c:	add	x20, x20, #0x1
     730:	ldrb	w22, [x20]
     734:	cbnz	w22, 724 <mangle_path+0x60>
     738:	sub	x23, x20, x19
     73c:	cmp	x23, #0x2
     740:	b.ne	774 <mangle_path+0xb0>  // b.any
     744:	cmp	w0, #0x2e
     748:	b.ne	774 <mangle_path+0xb0>  // b.any
     74c:	ldrb	w0, [x19, #1]
     750:	cmp	w0, #0x2e
     754:	b.ne	774 <mangle_path+0xb0>  // b.any
     758:	strb	w24, [x3], #1
     75c:	cbz	w22, 78c <mangle_path+0xc8>
     760:	add	x19, x20, #0x1
     764:	strb	w25, [x3], #1
     768:	b	6fc <mangle_path+0x38>
     76c:	mov	x20, x19
     770:	b	730 <mangle_path+0x6c>
     774:	mov	x0, x3
     778:	mov	x2, x23
     77c:	mov	x1, x19
     780:	bl	0 <memcpy>
     784:	add	x3, x0, x23
     788:	b	75c <mangle_path+0x98>
     78c:	mov	x19, x20
     790:	b	6fc <mangle_path+0x38>

0000000000000794 <__gcov_read_summary>:
     794:	stp	x29, x30, [sp, #-32]!
     798:	mov	x29, sp
     79c:	str	x19, [sp, #16]
     7a0:	mov	x19, x0
     7a4:	bl	674 <__gcov_read_unsigned>
     7a8:	str	w0, [x19]
     7ac:	bl	674 <__gcov_read_unsigned>
     7b0:	mov	w0, w0
     7b4:	str	x0, [x19, #8]
     7b8:	ldr	x19, [sp, #16]
     7bc:	ldp	x29, x30, [sp], #32
     7c0:	ret

00000000000007c4 <__gcov_seek>:
     7c4:	stp	x29, x30, [sp, #-32]!
     7c8:	mov	x29, sp
     7cc:	stp	x19, x20, [sp, #16]
     7d0:	adrp	x19, 1028 <__gcov_dump_one+0x7ac>
     7d4:	mov	w20, w0
     7d8:	ldr	x0, [x19]
     7dc:	ldr	w0, [x0, #12]
     7e0:	cbz	w0, 7e8 <__gcov_seek+0x24>
     7e4:	bl	0 <gcov_write_block>
     7e8:	ldr	x19, [x19]
     7ec:	lsl	w1, w20, #2
     7f0:	mov	w2, #0x0                   	// #0
     7f4:	ldr	x0, [x19]
     7f8:	bl	0 <fseek>
     7fc:	ldr	x0, [x19]
     800:	bl	0 <ftell>
     804:	asr	x0, x0, #2
     808:	str	w0, [x19, #8]
     80c:	ldp	x19, x20, [sp, #16]
     810:	ldp	x29, x30, [sp], #32
     814:	ret

0000000000000818 <__gcov_sort_n_vals>:
     818:	mov	x4, x0
     81c:	mov	w5, #0x2                   	// #2
     820:	cmp	w5, w1
     824:	b.lt	82c <__gcov_sort_n_vals+0x14>  // b.tstop
     828:	ret
     82c:	ldp	x8, x6, [x4, #16]
     830:	sub	w2, w5, #0x2
     834:	mov	x3, x4
     838:	ldr	x7, [x3, #8]
     83c:	cmp	x6, x7
     840:	b.le	858 <__gcov_sort_n_vals+0x40>
     844:	ldr	x9, [x3]
     848:	stp	x9, x7, [x3, #16]
     84c:	subs	w2, w2, #0x2
     850:	sub	x3, x3, #0x10
     854:	b.pl	838 <__gcov_sort_n_vals+0x20>  // b.nfrst
     858:	sxtw	x2, w2
     85c:	add	w5, w5, #0x2
     860:	add	x2, x2, #0x2
     864:	add	x4, x4, #0x10
     868:	lsl	x2, x2, #3
     86c:	str	x8, [x0, x2]
     870:	add	x2, x0, x2
     874:	str	x6, [x2, #8]
     878:	b	820 <__gcov_sort_n_vals+0x8>

000000000000087c <__gcov_dump_one>:
     87c:	stp	x29, x30, [sp, #-256]!
     880:	mov	x29, sp
     884:	str	x0, [sp, #112]
     888:	ldrb	w0, [x0, #8]
     88c:	stp	x19, x20, [sp, #16]
     890:	stp	x21, x22, [sp, #32]
     894:	stp	x23, x24, [sp, #48]
     898:	stp	x25, x26, [sp, #64]
     89c:	stp	x27, x28, [sp, #80]
     8a0:	tbnz	w0, #0, d1c <__gcov_dump_one+0x4a0>
     8a4:	ldr	x1, [sp, #112]
     8a8:	ubfx	x0, x0, #1, #1
     8ac:	str	x0, [sp, #160]
     8b0:	mov	x28, #0x0                   	// #0
     8b4:	ldr	x19, [x1]
     8b8:	mov	x0, x19
     8bc:	cbz	x0, 910 <__gcov_dump_one+0x94>
     8c0:	ldr	w5, [x0, #104]
     8c4:	mov	x1, #0x0                   	// #0
     8c8:	b	8e8 <__gcov_dump_one+0x6c>
     8cc:	ldr	x2, [x0, #112]
     8d0:	ldr	x3, [x2, x1, lsl #3]
     8d4:	mov	x2, #0x0                   	// #0
     8d8:	ldr	w6, [x3, #24]
     8dc:	cmp	w6, w2
     8e0:	b.hi	8f8 <__gcov_dump_one+0x7c>  // b.pmore
     8e4:	add	x1, x1, #0x1
     8e8:	cmp	w5, w1
     8ec:	b.ne	8cc <__gcov_dump_one+0x50>  // b.any
     8f0:	ldr	x0, [x0, #8]
     8f4:	b	8bc <__gcov_dump_one+0x40>
     8f8:	ldr	x4, [x3, #32]
     8fc:	ldr	x4, [x4, x2, lsl #3]
     900:	add	x2, x2, #0x1
     904:	cmp	x28, x4
     908:	csel	x28, x28, x4, ge  // ge = tcont
     90c:	b	8dc <__gcov_dump_one+0x60>
     910:	adrp	x0, 0 <gcov_write_block>
     914:	add	x0, x0, #0x0
     918:	bl	0 <getenv>
     91c:	cbz	x0, 9b0 <__gcov_dump_one+0x134>
     920:	bl	0 <atoi>
     924:	cmp	w0, #0x0
     928:	csel	w0, w0, wzr, ge  // ge = tcont
     92c:	str	w0, [sp, #108]
     930:	adrp	x0, 0 <gcov_write_block>
     934:	add	x0, x0, #0x0
     938:	bl	0 <getenv>
     93c:	mov	x21, x0
     940:	cbz	x0, 968 <__gcov_dump_one+0xec>
     944:	bl	0 <strlen>
     948:	mov	x20, x0
     94c:	cbz	x0, 968 <__gcov_dump_one+0xec>
     950:	sub	x0, x0, #0x1
     954:	ldrb	w1, [x21, x0]
     958:	cmp	w1, #0x2f
     95c:	b.ne	97c <__gcov_dump_one+0x100>  // b.any
     960:	mov	x20, x0
     964:	cbnz	x0, 97c <__gcov_dump_one+0x100>
     968:	ldr	w0, [sp, #108]
     96c:	cbz	w0, 12bc <__gcov_dump_one+0xa40>
     970:	adrp	x21, 0 <gcov_write_block>
     974:	add	x21, x21, #0x0
     978:	mov	x20, #0x1                   	// #1
     97c:	add	x0, x20, #0x1
     980:	bl	0 <malloc>
     984:	mov	x2, x20
     988:	mov	x24, x0
     98c:	mov	x1, x21
     990:	bl	0 <memcpy>
     994:	strb	wzr, [x0, x20]
     998:	adrp	x0, 0 <gcov_write_block>
     99c:	add	x0, x0, #0x0
     9a0:	str	x0, [sp, #184]
     9a4:	add	x0, sp, #0xf0
     9a8:	str	x0, [sp, #152]
     9ac:	b	cfc <__gcov_dump_one+0x480>
     9b0:	str	wzr, [sp, #108]
     9b4:	b	930 <__gcov_dump_one+0xb4>
     9b8:	adrp	x23, 0 <gcov_write_block>
     9bc:	stp	xzr, xzr, [sp, #224]
     9c0:	ldr	x0, [x19, #96]
     9c4:	str	xzr, [x23]
     9c8:	cbnz	x0, b38 <__gcov_dump_one+0x2bc>
     9cc:	ldr	w0, [sp, #108]
     9d0:	ldr	x26, [x19, #24]
     9d4:	cbnz	w0, b48 <__gcov_dump_one+0x2cc>
     9d8:	cbz	x24, b7c <__gcov_dump_one+0x300>
     9dc:	ldrb	w0, [x26]
     9e0:	cmp	w0, #0x2f
     9e4:	mov	x0, x24
     9e8:	cset	w20, ne  // ne = any
     9ec:	bl	0 <strlen>
     9f0:	mov	x27, x0
     9f4:	mov	x0, x26
     9f8:	bl	0 <strlen>
     9fc:	add	x0, x0, x27
     a00:	add	x0, x0, #0x2
     a04:	bl	0 <malloc>
     a08:	strb	wzr, [x0]
     a0c:	mov	x21, x0
     a10:	cbz	x27, a1c <__gcov_dump_one+0x1a0>
     a14:	mov	x1, x24
     a18:	bl	0 <strcat>
     a1c:	cbz	w20, a28 <__gcov_dump_one+0x1ac>
     a20:	mov	w0, #0x2f                  	// #47
     a24:	strb	w0, [x21], #1
     a28:	mov	x20, x21
     a2c:	add	x27, sp, #0xd8
     a30:	mov	x1, x26
     a34:	mov	x0, x21
     a38:	bl	0 <strcat>
     a3c:	strb	wzr, [sp, #216]
     a40:	ldrb	w0, [x21]
     a44:	cbz	w0, a74 <__gcov_dump_one+0x1f8>
     a48:	cmp	w0, #0x25
     a4c:	b.ne	c28 <__gcov_dump_one+0x3ac>  // b.any
     a50:	ldrb	w22, [x21, #1]
     a54:	cbz	w22, c28 <__gcov_dump_one+0x3ac>
     a58:	mov	x0, x20
     a5c:	bl	0 <strlen>
     a60:	cmp	w22, #0x70
     a64:	mov	x26, x0
     a68:	b.eq	b88 <__gcov_dump_one+0x30c>  // b.none
     a6c:	cmp	w22, #0x71
     a70:	b.eq	c30 <__gcov_dump_one+0x3b4>  // b.none
     a74:	mov	x0, x20
     a78:	bl	49c <__gcov_open>
     a7c:	cbnz	w0, d44 <__gcov_dump_one+0x4c8>
     a80:	ldrb	w0, [x20]
     a84:	mov	w27, #0x2f                  	// #47
     a88:	cmp	w0, #0x2f
     a8c:	cinc	x21, x20, eq  // eq = none
     a90:	ldrb	w26, [x21]
     a94:	cbnz	w26, c7c <__gcov_dump_one+0x400>
     a98:	mov	x0, x20
     a9c:	bl	49c <__gcov_open>
     aa0:	cbnz	w0, d44 <__gcov_dump_one+0x4c8>
     aa4:	adrp	x1, 0 <gcov_write_block>
     aa8:	mov	x2, x20
     aac:	add	x1, x1, #0x0
     ab0:	b	ce0 <__gcov_dump_one+0x464>
     ab4:	ldr	x21, [x0, #8]
     ab8:	add	x21, x21, #0x8
     abc:	cmp	w27, w20
     ac0:	b.gt	b0c <__gcov_dump_one+0x290>
     ac4:	add	x26, x26, #0x1
     ac8:	ldr	w0, [x19, #104]
     acc:	cmp	w0, w26
     ad0:	b.eq	9cc <__gcov_dump_one+0x150>  // b.none
     ad4:	ldr	x0, [x19, #112]
     ad8:	mov	x1, #0x0                   	// #0
     adc:	ldr	x0, [x0, x26, lsl #3]
     ae0:	add	x0, x0, #0x18
     ae4:	ldr	x4, [x22, x1, lsl #3]
     ae8:	cbz	x4, b28 <__gcov_dump_one+0x2ac>
     aec:	cmp	x1, #0x8
     af0:	b.ne	b24 <__gcov_dump_one+0x2a8>  // b.any
     af4:	ldr	w27, [x0]
     af8:	sdiv	w20, w27, w25
     afc:	add	w20, w20, w20, lsl #3
     b00:	subs	w20, w27, w20
     b04:	b.eq	ab4 <__gcov_dump_one+0x238>  // b.none
     b08:	bl	0 <abort>
     b0c:	mov	x0, x21
     b10:	mov	w1, #0x8                   	// #8
     b14:	add	w20, w20, #0x9
     b18:	add	x21, x21, #0x48
     b1c:	bl	818 <__gcov_sort_n_vals>
     b20:	b	abc <__gcov_dump_one+0x240>
     b24:	add	x0, x0, #0x10
     b28:	add	x1, x1, #0x1
     b2c:	cmp	x1, #0x9
     b30:	b.ne	ae4 <__gcov_dump_one+0x268>  // b.any
     b34:	b	ac4 <__gcov_dump_one+0x248>
     b38:	add	x22, x19, #0x20
     b3c:	mov	x26, #0x0                   	// #0
     b40:	mov	w25, #0x9                   	// #9
     b44:	b	ac8 <__gcov_dump_one+0x24c>
     b48:	ldrb	w0, [x26]
     b4c:	ldr	w1, [sp, #108]
     b50:	cmp	w0, #0x2f
     b54:	cinc	x0, x26, eq  // eq = none
     b58:	ldrb	w2, [x0]
     b5c:	cbz	w2, 9d8 <__gcov_dump_one+0x15c>
     b60:	cbz	w1, 9d8 <__gcov_dump_one+0x15c>
     b64:	cmp	w2, #0x2f
     b68:	b.ne	b74 <__gcov_dump_one+0x2f8>  // b.any
     b6c:	sub	w1, w1, #0x1
     b70:	mov	x26, x0
     b74:	add	x0, x0, #0x1
     b78:	b	b58 <__gcov_dump_one+0x2dc>
     b7c:	mov	w20, #0x0                   	// #0
     b80:	mov	x27, #0x0                   	// #0
     b84:	b	9f4 <__gcov_dump_one+0x178>
     b88:	bl	0 <getpid>
     b8c:	mov	w2, w0
     b90:	ldr	x0, [sp, #152]
     b94:	ldr	x1, [sp, #184]
     b98:	bl	0 <sprintf>
     b9c:	ldr	x3, [sp, #152]
     ba0:	add	x6, x21, #0x2
     ba4:	sub	x2, x6, x20
     ba8:	mov	x0, x3
     bac:	sub	w26, w26, w2
     bb0:	sub	x21, x21, x20
     bb4:	stp	x3, x6, [sp, #120]
     bb8:	bl	0 <strlen>
     bbc:	add	w1, w21, #0x1
     bc0:	mov	x25, x0
     bc4:	add	w0, w26, w0
     bc8:	and	x21, x21, #0xffffffff
     bcc:	add	w0, w1, w0
     bd0:	and	x25, x25, #0xffffffff
     bd4:	bl	0 <malloc>
     bd8:	mov	x22, x0
     bdc:	mov	x2, x21
     be0:	mov	x1, x20
     be4:	bl	0 <memcpy>
     be8:	add	x0, x0, x21
     bec:	ldr	x3, [sp, #120]
     bf0:	mov	x2, x25
     bf4:	add	x21, x21, x25
     bf8:	mov	x1, x3
     bfc:	add	x21, x22, x21
     c00:	bl	0 <memcpy>
     c04:	add	x0, x0, x25
     c08:	ldr	x6, [sp, #128]
     c0c:	mov	x2, x26
     c10:	mov	x1, x6
     c14:	bl	0 <memcpy>
     c18:	strb	wzr, [x0, x26]
     c1c:	mov	x0, x20
     c20:	mov	x20, x22
     c24:	bl	0 <free>
     c28:	add	x21, x21, #0x1
     c2c:	b	a40 <__gcov_dump_one+0x1c4>
     c30:	ldrb	w0, [x21, #2]
     c34:	cmp	w0, #0x7b
     c38:	b.eq	c48 <__gcov_dump_one+0x3cc>  // b.none
     c3c:	add	x6, x21, #0x1
     c40:	mov	x3, #0x0                   	// #0
     c44:	b	ba4 <__gcov_dump_one+0x328>
     c48:	add	x25, x21, #0x3
     c4c:	mov	w1, #0x7d                  	// #125
     c50:	mov	x0, x25
     c54:	bl	0 <strchr>
     c58:	mov	x22, x0
     c5c:	cbz	x0, a74 <__gcov_dump_one+0x1f8>
     c60:	strb	wzr, [x0]
     c64:	mov	x0, x25
     c68:	bl	0 <getenv>
     c6c:	cmp	x0, #0x0
     c70:	csel	x3, x0, x27, ne  // ne = any
     c74:	add	x6, x22, #0x1
     c78:	b	ba4 <__gcov_dump_one+0x328>
     c7c:	cmp	w26, #0x2f
     c80:	b.ne	d3c <__gcov_dump_one+0x4c0>  // b.any
     c84:	strb	wzr, [x21]
     c88:	mov	x0, x20
     c8c:	mov	w1, #0x0                   	// #0
     c90:	bl	0 <access>
     c94:	cmn	w0, #0x1
     c98:	b.ne	d38 <__gcov_dump_one+0x4bc>  // b.any
     c9c:	mov	x0, x20
     ca0:	mov	w1, #0x1ed                 	// #493
     ca4:	bl	0 <mkdir>
     ca8:	cmn	w0, #0x1
     cac:	b.ne	d38 <__gcov_dump_one+0x4bc>  // b.any
     cb0:	bl	0 <__errno_location>
     cb4:	ldr	w0, [x0]
     cb8:	cmp	w0, #0x11
     cbc:	b.eq	d38 <__gcov_dump_one+0x4bc>  // b.none
     cc0:	mov	x1, x20
     cc4:	adrp	x0, 0 <gcov_write_block>
     cc8:	add	x0, x0, #0x0
     ccc:	bl	2d4 <gcov_error>
     cd0:	adrp	x1, 0 <gcov_write_block>
     cd4:	mov	x2, x20
     cd8:	add	x1, x1, #0x0
     cdc:	strb	w26, [x21]
     ce0:	adrp	x0, 0 <stderr>
     ce4:	ldr	x0, [x0]
     ce8:	ldr	x0, [x0]
     cec:	bl	0 <fprintf>
     cf0:	mov	x0, x20
     cf4:	bl	0 <free>
     cf8:	ldr	x19, [x19, #8]
     cfc:	cbnz	x19, 9b8 <__gcov_dump_one+0x13c>
     d00:	mov	x0, x24
     d04:	bl	0 <free>
     d08:	ldr	x0, [sp, #112]
     d0c:	ldr	x1, [sp, #112]
     d10:	ldrb	w0, [x0, #8]
     d14:	orr	w0, w0, #0x3
     d18:	strb	w0, [x1, #8]
     d1c:	ldp	x19, x20, [sp, #16]
     d20:	ldp	x21, x22, [sp, #32]
     d24:	ldp	x23, x24, [sp, #48]
     d28:	ldp	x25, x26, [sp, #64]
     d2c:	ldp	x27, x28, [sp, #80]
     d30:	ldp	x29, x30, [sp], #256
     d34:	ret
     d38:	strb	w27, [x21]
     d3c:	add	x21, x21, #0x1
     d40:	b	a90 <__gcov_dump_one+0x214>
     d44:	bl	674 <__gcov_read_unsigned>
     d48:	cbz	w0, e4c <__gcov_dump_one+0x5d0>
     d4c:	mov	w1, #0x6461                	// #25697
     d50:	movk	w1, #0x6763, lsl #16
     d54:	cmp	w0, w1
     d58:	b.eq	da0 <__gcov_dump_one+0x524>  // b.none
     d5c:	adrp	x0, 0 <gcov_write_block>
     d60:	mov	x1, x20
     d64:	add	x0, x0, #0x0
     d68:	bl	2d4 <gcov_error>
     d6c:	ldr	x1, [x23]
     d70:	cbnz	x1, 12a8 <__gcov_dump_one+0xa2c>
     d74:	bl	56c <__gcov_close>
     d78:	cmp	w0, #0x0
     d7c:	cbz	w0, cf0 <__gcov_dump_one+0x474>
     d80:	adrp	x2, 0 <gcov_write_block>
     d84:	add	x2, x2, #0x0
     d88:	adrp	x0, 0 <gcov_write_block>
     d8c:	add	x0, x0, #0x0
     d90:	mov	x1, x20
     d94:	csel	x0, x0, x2, lt  // lt = tstop
     d98:	bl	2d4 <gcov_error>
     d9c:	b	cf0 <__gcov_dump_one+0x474>
     da0:	bl	674 <__gcov_read_unsigned>
     da4:	mov	w1, w0
     da8:	mov	w0, #0x322a                	// #12842
     dac:	movk	w0, #0x4139, lsl #16
     db0:	cmp	w1, w0
     db4:	b.ne	e28 <__gcov_dump_one+0x5ac>  // b.any
     db8:	bl	674 <__gcov_read_unsigned>
     dbc:	ldr	w1, [x19, #16]
     dc0:	cmp	w0, w1
     dc4:	b.ne	e3c <__gcov_dump_one+0x5c0>  // b.any
     dc8:	bl	674 <__gcov_read_unsigned>
     dcc:	mov	w1, #0xa1000000            	// #-1593835520
     dd0:	cmp	w0, w1
     dd4:	b.ne	115c <__gcov_dump_one+0x8e0>  // b.any
     dd8:	bl	674 <__gcov_read_unsigned>
     ddc:	cbz	w0, b08 <__gcov_dump_one+0x28c>
     de0:	add	x0, sp, #0xe0
     de4:	bl	794 <__gcov_read_summary>
     de8:	add	x27, x23, #0x0
     dec:	mov	x26, #0x0                   	// #0
     df0:	bl	674 <__gcov_read_unsigned>
     df4:	adrp	x1, 0 <gcov_write_block>
     df8:	add	x1, x1, #0x0
     dfc:	str	x1, [sp, #176]
     e00:	adrp	x1, 0 <gcov_write_block>
     e04:	add	x1, x1, #0x0
     e08:	str	x1, [sp, #144]
     e0c:	ldr	w1, [x19, #104]
     e10:	str	w26, [sp, #128]
     e14:	str	w26, [sp, #136]
     e18:	cmp	w1, w26
     e1c:	b.ne	eb8 <__gcov_dump_one+0x63c>  // b.any
     e20:	cbz	w0, e4c <__gcov_dump_one+0x5d0>
     e24:	b	113c <__gcov_dump_one+0x8c0>
     e28:	mov	x2, x20
     e2c:	add	x0, x19, #0x18
     e30:	bl	3ec <gcov_version.isra.0.part.0>
     e34:	cbnz	w0, db8 <__gcov_dump_one+0x53c>
     e38:	b	d6c <__gcov_dump_one+0x4f0>
     e3c:	adrp	x0, 0 <gcov_write_block>
     e40:	mov	x1, x20
     e44:	add	x0, x0, #0x0
     e48:	bl	2d4 <gcov_error>
     e4c:	bl	478 <__gcov_rewrite>
     e50:	ldr	w0, [sp, #160]
     e54:	cbnz	w0, e70 <__gcov_dump_one+0x5f4>
     e58:	ldr	w0, [sp, #224]
     e5c:	add	w0, w0, #0x1
     e60:	str	w0, [sp, #224]
     e64:	ldr	x0, [sp, #232]
     e68:	add	x0, x0, x28
     e6c:	str	x0, [sp, #232]
     e70:	mov	w1, #0x322a                	// #12842
     e74:	mov	w0, #0x6461                	// #25697
     e78:	movk	w1, #0x4139, lsl #16
     e7c:	movk	w0, #0x6763, lsl #16
     e80:	bl	618 <__gcov_write_tag_length>
     e84:	mov	w21, #0x0                   	// #0
     e88:	ldr	w0, [x19, #16]
     e8c:	mov	w22, #0x1b30000             	// #28508160
     e90:	bl	5c8 <__gcov_write_unsigned>
     e94:	add	x1, sp, #0xe0
     e98:	mov	w0, #0xa1000000            	// #-1593835520
     e9c:	bl	644 <__gcov_write_summary>
     ea0:	ldr	w0, [x19, #104]
     ea4:	cmp	w21, w0
     ea8:	b.ne	118c <__gcov_dump_one+0x910>  // b.any
     eac:	mov	w0, #0x0                   	// #0
     eb0:	bl	5c8 <__gcov_write_unsigned>
     eb4:	b	d6c <__gcov_dump_one+0x4f0>
     eb8:	ldr	x1, [x19, #112]
     ebc:	ldr	x21, [x1, x26, lsl #3]
     ec0:	mov	w1, #0x1000000             	// #16777216
     ec4:	cmp	w0, w1
     ec8:	b.ne	113c <__gcov_dump_one+0x8c0>  // b.any
     ecc:	bl	674 <__gcov_read_unsigned>
     ed0:	cbz	w0, 10d8 <__gcov_dump_one+0x85c>
     ed4:	cmp	w0, #0x3
     ed8:	b.ne	113c <__gcov_dump_one+0x8c0>  // b.any
     edc:	cbz	x21, 10e4 <__gcov_dump_one+0x868>
     ee0:	ldr	x0, [x21]
     ee4:	cmp	x19, x0
     ee8:	b.ne	10e4 <__gcov_dump_one+0x868>  // b.any
     eec:	bl	674 <__gcov_read_unsigned>
     ef0:	ldr	w1, [x21, #8]
     ef4:	cmp	w0, w1
     ef8:	b.ne	113c <__gcov_dump_one+0x8c0>  // b.any
     efc:	bl	674 <__gcov_read_unsigned>
     f00:	ldr	w1, [x21, #12]
     f04:	cmp	w0, w1
     f08:	b.ne	113c <__gcov_dump_one+0x8c0>  // b.any
     f0c:	bl	674 <__gcov_read_unsigned>
     f10:	ldr	w1, [x21, #16]
     f14:	cmp	w0, w1
     f18:	b.ne	113c <__gcov_dump_one+0x8c0>  // b.any
     f1c:	add	x4, x19, #0x20
     f20:	add	x2, x21, #0x18
     f24:	mov	w22, #0x1b30000             	// #28508160
     f28:	mov	w21, #0x1a10000             	// #27328512
     f2c:	ldr	x5, [x4]
     f30:	str	x5, [sp, #192]
     f34:	cbz	x5, f84 <__gcov_dump_one+0x708>
     f38:	str	x4, [sp, #136]
     f3c:	str	x2, [sp, #168]
     f40:	bl	674 <__gcov_read_unsigned>
     f44:	str	w0, [sp, #120]
     f48:	bl	674 <__gcov_read_unsigned>
     f4c:	ldr	w1, [sp, #120]
     f50:	cmp	w1, w21
     f54:	b.ne	113c <__gcov_dump_one+0x8c0>  // b.any
     f58:	ldr	x2, [sp, #168]
     f5c:	ldr	w1, [x2]
     f60:	cmp	w0, w1, lsl #1
     f64:	b.ne	113c <__gcov_dump_one+0x8c0>  // b.any
     f68:	ldr	x0, [x2, #8]
     f6c:	str	x2, [sp, #120]
     f70:	ldr	x5, [sp, #192]
     f74:	blr	x5
     f78:	ldr	x2, [sp, #120]
     f7c:	ldr	x4, [sp, #136]
     f80:	add	x2, x2, #0x10
     f84:	add	w21, w21, #0x20, lsl #12
     f88:	add	x4, x4, #0x8
     f8c:	cmp	w21, w22
     f90:	b.ne	f2c <__gcov_dump_one+0x6b0>  // b.any
     f94:	adrp	x0, 1028 <__gcov_dump_one+0x7ac>
     f98:	ldr	x0, [x0]
     f9c:	ldr	x1, [x0]
     fa0:	cbz	x1, 1180 <__gcov_dump_one+0x904>
     fa4:	ldr	w0, [x0, #24]
     fa8:	cmp	w0, #0x0
     fac:	cbz	w0, 10d8 <__gcov_dump_one+0x85c>
     fb0:	adrp	x0, 0 <gcov_write_block>
     fb4:	adrp	x2, 0 <gcov_write_block>
     fb8:	add	x0, x0, #0x0
     fbc:	add	x2, x2, #0x0
     fc0:	csel	x2, x2, x0, ge  // ge = tcont
     fc4:	mov	x1, x20
     fc8:	adrp	x0, 0 <gcov_write_block>
     fcc:	add	x0, x0, #0x0
     fd0:	bl	2d4 <gcov_error>
     fd4:	b	d6c <__gcov_dump_one+0x4f0>
     fd8:	add	x0, x19, w22, uxtw #3
     fdc:	ldr	x0, [x0, #32]
     fe0:	cmp	x0, #0x0
     fe4:	cinc	w4, w4, ne  // ne = any
     fe8:	sub	w22, w22, #0x1
     fec:	cmn	w22, #0x1
     ff0:	b.ne	fd8 <__gcov_dump_one+0x75c>  // b.any
     ff4:	lsl	w4, w4, #4
     ff8:	add	w0, w4, #0x38
     ffc:	str	w0, [sp, #120]
    1000:	bl	0 <malloc>
    1004:	mov	x21, x0
    1008:	ldr	w4, [sp, #120]
    100c:	cbz	x0, 1108 <__gcov_dump_one+0x88c>
    1010:	ldr	w0, [sp, #136]
    1014:	mov	x25, #0x0                   	// #0
    1018:	str	xzr, [x21]
    101c:	str	w0, [x21, #8]
    1020:	bl	674 <__gcov_read_unsigned>
    1024:	str	w0, [x21, #24]
    1028:	bl	674 <__gcov_read_unsigned>
    102c:	str	w0, [x21, #28]
    1030:	bl	674 <__gcov_read_unsigned>
    1034:	str	w0, [x21, #32]
    1038:	add	x0, x19, #0x20
    103c:	str	wzr, [sp, #120]
    1040:	str	x0, [sp, #168]
    1044:	ldr	x0, [sp, #168]
    1048:	mov	w22, w25
    104c:	ldr	x0, [x0, x25, lsl #3]
    1050:	cbz	x0, 10c4 <__gcov_dump_one+0x848>
    1054:	bl	674 <__gcov_read_unsigned>
    1058:	mov	w1, #0x1a10000             	// #27328512
    105c:	add	w1, w1, w25, lsl #17
    1060:	cmp	w1, w0
    1064:	b.ne	1148 <__gcov_dump_one+0x8cc>  // b.any
    1068:	bl	674 <__gcov_read_unsigned>
    106c:	lsr	w1, w0, #1
    1070:	str	w1, [sp, #192]
    1074:	lsl	w4, w1, #3
    1078:	lsl	w0, w1, #3
    107c:	str	w4, [sp, #200]
    1080:	bl	0 <malloc>
    1084:	mov	x3, x0
    1088:	ldr	w4, [sp, #200]
    108c:	cbz	x0, 1108 <__gcov_dump_one+0x88c>
    1090:	ldr	x0, [sp, #120]
    1094:	mov	x22, #0x0                   	// #0
    1098:	ldr	w1, [sp, #192]
    109c:	ubfiz	x0, x0, #4, #32
    10a0:	add	x0, x21, x0
    10a4:	str	w1, [x0, #40]
    10a8:	mov	w1, w1
    10ac:	str	x3, [x0, #48]
    10b0:	cmp	x1, x22
    10b4:	b.ne	10f0 <__gcov_dump_one+0x874>  // b.any
    10b8:	ldr	w0, [sp, #120]
    10bc:	add	w0, w0, #0x1
    10c0:	str	w0, [sp, #120]
    10c4:	add	x25, x25, #0x1
    10c8:	cmp	x25, #0x9
    10cc:	b.ne	1044 <__gcov_dump_one+0x7c8>  // b.any
    10d0:	str	x21, [x27]
    10d4:	mov	x27, x21
    10d8:	add	x26, x26, #0x1
    10dc:	bl	674 <__gcov_read_unsigned>
    10e0:	b	e0c <__gcov_dump_one+0x590>
    10e4:	mov	w22, #0x9                   	// #9
    10e8:	mov	w4, #0x0                   	// #0
    10ec:	b	fe8 <__gcov_dump_one+0x76c>
    10f0:	stp	x1, x3, [sp, #192]
    10f4:	bl	69c <__gcov_read_counter>
    10f8:	ldp	x1, x3, [sp, #192]
    10fc:	str	x0, [x3, x22, lsl #3]
    1100:	add	x22, x22, #0x1
    1104:	b	10b0 <__gcov_dump_one+0x834>
    1108:	cbz	w4, 1154 <__gcov_dump_one+0x8d8>
    110c:	adrp	x3, 0 <gcov_write_block>
    1110:	add	x3, x3, #0x0
    1114:	ldr	w2, [sp, #136]
    1118:	mov	x1, x20
    111c:	ldr	x0, [sp, #176]
    1120:	bl	2d4 <gcov_error>
    1124:	mov	w2, w22
    1128:	mov	x1, x21
    112c:	mov	x0, x19
    1130:	bl	1b4 <free_fn_data>
    1134:	mov	x27, x0
    1138:	cbnz	x0, 10d8 <__gcov_dump_one+0x85c>
    113c:	adrp	x2, 0 <gcov_write_block>
    1140:	add	x2, x2, #0x0
    1144:	b	1168 <__gcov_dump_one+0x8ec>
    1148:	mov	w4, w25
    114c:	ldr	x3, [sp, #144]
    1150:	b	1114 <__gcov_dump_one+0x898>
    1154:	mov	w4, w22
    1158:	b	114c <__gcov_dump_one+0x8d0>
    115c:	adrp	x2, 0 <gcov_write_block>
    1160:	add	x2, x2, #0x0
    1164:	str	wzr, [sp, #128]
    1168:	ldr	w3, [sp, #128]
    116c:	mov	x1, x20
    1170:	adrp	x0, 0 <gcov_write_block>
    1174:	add	x0, x0, #0x0
    1178:	bl	2d4 <gcov_error>
    117c:	b	d6c <__gcov_dump_one+0x4f0>
    1180:	adrp	x2, 0 <gcov_write_block>
    1184:	add	x2, x2, #0x0
    1188:	b	fc4 <__gcov_dump_one+0x748>
    118c:	ldr	x2, [x23]
    1190:	cbz	x2, 1254 <__gcov_dump_one+0x9d8>
    1194:	ldr	w0, [x2, #8]
    1198:	cmp	w0, w21
    119c:	b.ne	1254 <__gcov_dump_one+0x9d8>  // b.any
    11a0:	add	x27, x2, #0x10
    11a4:	mov	w1, #0x3                   	// #3
    11a8:	mov	w26, #0x1                   	// #1
    11ac:	mov	w0, #0x1000000             	// #16777216
    11b0:	str	w1, [sp, #120]
    11b4:	bl	618 <__gcov_write_tag_length>
    11b8:	ldr	w1, [sp, #120]
    11bc:	cbz	w1, 124c <__gcov_dump_one+0x9d0>
    11c0:	ldr	w0, [x27, #8]
    11c4:	bl	5c8 <__gcov_write_unsigned>
    11c8:	ldr	w0, [x27, #12]
    11cc:	bl	5c8 <__gcov_write_unsigned>
    11d0:	ldr	w0, [x27, #16]
    11d4:	bl	5c8 <__gcov_write_unsigned>
    11d8:	add	x5, x19, #0x20
    11dc:	add	x2, x27, #0x18
    11e0:	mov	w27, #0x1a10000             	// #27328512
    11e4:	ldr	x0, [x5]
    11e8:	cbz	x0, 1224 <__gcov_dump_one+0x9a8>
    11ec:	ldr	w4, [x2]
    11f0:	mov	w0, w27
    11f4:	str	w4, [sp, #120]
    11f8:	stp	x2, x5, [sp, #128]
    11fc:	lsl	w1, w4, #1
    1200:	bl	618 <__gcov_write_tag_length>
    1204:	ldp	x2, x5, [sp, #128]
    1208:	mov	x1, #0x0                   	// #0
    120c:	ldr	w4, [sp, #120]
    1210:	mov	w4, w4
    1214:	ldr	x6, [x2, #8]
    1218:	cmp	x1, x4
    121c:	b.ne	1280 <__gcov_dump_one+0xa04>  // b.any
    1220:	add	x2, x2, #0x10
    1224:	add	w27, w27, #0x20, lsl #12
    1228:	add	x5, x5, #0x8
    122c:	cmp	w27, w22
    1230:	b.ne	11e4 <__gcov_dump_one+0x968>  // b.any
    1234:	cbz	w26, 124c <__gcov_dump_one+0x9d0>
    1238:	ldr	x1, [x23]
    123c:	mov	x0, x19
    1240:	mov	w2, #0x9                   	// #9
    1244:	bl	1b4 <free_fn_data>
    1248:	str	x0, [x23]
    124c:	add	w21, w21, #0x1
    1250:	b	ea0 <__gcov_dump_one+0x624>
    1254:	ldr	x0, [x19, #112]
    1258:	ldr	x27, [x0, w21, uxtw #3]
    125c:	cbz	x27, 1278 <__gcov_dump_one+0x9fc>
    1260:	ldr	x0, [x27]
    1264:	cmp	x19, x0
    1268:	mov	w0, #0x3                   	// #3
    126c:	csel	w1, wzr, w0, ne  // ne = any
    1270:	mov	w26, #0x0                   	// #0
    1274:	b	11ac <__gcov_dump_one+0x930>
    1278:	mov	w1, #0x0                   	// #0
    127c:	b	1270 <__gcov_dump_one+0x9f4>
    1280:	ldr	x0, [x6, x1, lsl #3]
    1284:	stp	x1, x6, [sp, #120]
    1288:	stp	x5, x4, [sp, #136]
    128c:	str	x2, [sp, #168]
    1290:	bl	5f0 <__gcov_write_counter>
    1294:	ldp	x1, x6, [sp, #120]
    1298:	ldp	x5, x4, [sp, #136]
    129c:	ldr	x2, [sp, #168]
    12a0:	add	x1, x1, #0x1
    12a4:	b	1218 <__gcov_dump_one+0x99c>
    12a8:	mov	x0, x19
    12ac:	mov	w2, #0x9                   	// #9
    12b0:	bl	1b4 <free_fn_data>
    12b4:	str	x0, [x23]
    12b8:	b	d6c <__gcov_dump_one+0x4f0>
    12bc:	mov	x24, #0x0                   	// #0
    12c0:	b	998 <__gcov_dump_one+0x11c>

00000000000012c4 <__gcov_exit>:
    12c4:	stp	x29, x30, [sp, #-32]!
    12c8:	mov	x29, sp
    12cc:	stp	x19, x20, [sp, #16]
    12d0:	adrp	x19, 20 <gcov_write_block+0x20>
    12d4:	add	x20, x19, #0x0
    12d8:	mov	x0, x20
    12dc:	bl	87c <__gcov_dump_one>
    12e0:	ldr	x1, [x20, #16]
    12e4:	cbz	x1, 12f0 <__gcov_exit+0x2c>
    12e8:	ldr	x0, [x20, #24]
    12ec:	str	x0, [x1, #24]
    12f0:	add	x19, x19, #0x0
    12f4:	ldr	x0, [x19, #24]
    12f8:	cbz	x0, 1338 <__gcov_exit+0x74>
    12fc:	str	x1, [x0, #16]
    1300:	adrp	x19, 8 <gcov_write_block+0x8>
    1304:	ldr	x19, [x19]
    1308:	ldr	x0, [x19]
    130c:	cbz	x0, 132c <__gcov_exit+0x68>
    1310:	adrp	x1, 0 <stderr>
    1314:	ldr	x1, [x1]
    1318:	ldr	x1, [x1]
    131c:	cmp	x0, x1
    1320:	b.eq	132c <__gcov_exit+0x68>  // b.none
    1324:	bl	0 <fclose>
    1328:	str	xzr, [x19]
    132c:	ldp	x19, x20, [sp, #16]
    1330:	ldp	x29, x30, [sp], #32
    1334:	ret
    1338:	adrp	x0, 0 <gcov_write_block>
    133c:	ldr	x0, [x0]
    1340:	str	x1, [x0, #8]
    1344:	b	1300 <__gcov_exit+0x3c>

0000000000001348 <__gcov_init>:
    1348:	ldr	w1, [x0]
    134c:	cbz	w1, 1414 <__gcov_init+0xcc>
    1350:	stp	x29, x30, [sp, #-48]!
    1354:	mov	x29, sp
    1358:	stp	x19, x20, [sp, #16]
    135c:	mov	x20, x0
    1360:	ldr	w0, [x0, #104]
    1364:	str	x21, [sp, #32]
    1368:	cbz	w0, 13d8 <__gcov_init+0x90>
    136c:	mov	w0, #0x322a                	// #12842
    1370:	movk	w0, #0x4139, lsl #16
    1374:	cmp	w1, w0
    1378:	b.ne	13c8 <__gcov_init+0x80>  // b.any
    137c:	adrp	x19, 20 <gcov_write_block+0x20>
    1380:	ldr	x0, [x19]
    1384:	cbnz	x0, 13fc <__gcov_init+0xb4>
    1388:	adrp	x21, 0 <gcov_write_block>
    138c:	ldr	x0, [x21]
    1390:	ldr	w1, [x0]
    1394:	mov	w0, #0x322a                	// #12842
    1398:	movk	w0, #0x4139, lsl #16
    139c:	cmp	w1, w0
    13a0:	b.ne	13e8 <__gcov_init+0xa0>  // b.any
    13a4:	ldr	x0, [x21]
    13a8:	add	x1, x19, #0x0
    13ac:	ldr	x0, [x0, #8]
    13b0:	str	x0, [x1, #16]
    13b4:	cbnz	x0, 140c <__gcov_init+0xc4>
    13b8:	ldr	x21, [x21]
    13bc:	add	x0, x19, #0x0
    13c0:	str	x0, [x21, #8]
    13c4:	b	13fc <__gcov_init+0xb4>
    13c8:	add	x0, x20, #0x18
    13cc:	mov	x2, #0x0                   	// #0
    13d0:	bl	3ec <gcov_version.isra.0.part.0>
    13d4:	cbnz	w0, 137c <__gcov_init+0x34>
    13d8:	ldp	x19, x20, [sp, #16]
    13dc:	ldr	x21, [sp, #32]
    13e0:	ldp	x29, x30, [sp], #48
    13e4:	ret
    13e8:	adrp	x2, 0 <gcov_write_block>
    13ec:	mov	x0, #0x18                  	// #24
    13f0:	add	x2, x2, #0x0
    13f4:	bl	3ec <gcov_version.isra.0.part.0>
    13f8:	cbnz	w0, 13a4 <__gcov_init+0x5c>
    13fc:	ldr	x0, [x19]
    1400:	str	x20, [x19]
    1404:	str	x0, [x20, #8]
    1408:	b	13d8 <__gcov_init+0x90>
    140c:	str	x1, [x0, #24]
    1410:	b	13b8 <__gcov_init+0x70>
    1414:	ret
