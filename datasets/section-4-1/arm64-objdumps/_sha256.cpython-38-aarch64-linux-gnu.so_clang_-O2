
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha256.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e10 <.init>:
 e10:	stp	x29, x30, [sp, #-16]!
 e14:	mov	x29, sp
 e18:	bl	f80 <_Py_strhex@plt+0x10>
 e1c:	ldp	x29, x30, [sp], #16
 e20:	ret

Disassembly of section .plt:

0000000000000e30 <memcpy@plt-0x20>:
 e30:	stp	x16, x30, [sp, #-16]!
 e34:	adrp	x16, 13000 <PyInit__sha256@@Base+0x11fac>
 e38:	ldr	x17, [x16, #4088]
 e3c:	add	x16, x16, #0xff8
 e40:	br	x17
 e44:	nop
 e48:	nop
 e4c:	nop

0000000000000e50 <memcpy@plt>:
 e50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16]
 e58:	add	x16, x16, #0x0
 e5c:	br	x17

0000000000000e60 <PyBuffer_Release@plt>:
 e60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #8]
 e68:	add	x16, x16, #0x8
 e6c:	br	x17

0000000000000e70 <__cxa_finalize@plt>:
 e70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e74:	ldr	x17, [x16, #16]
 e78:	add	x16, x16, #0x10
 e7c:	br	x17

0000000000000e80 <PyBytes_FromStringAndSize@plt>:
 e80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e84:	ldr	x17, [x16, #24]
 e88:	add	x16, x16, #0x18
 e8c:	br	x17

0000000000000e90 <_Py_Dealloc@plt>:
 e90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e94:	ldr	x17, [x16, #32]
 e98:	add	x16, x16, #0x20
 e9c:	br	x17

0000000000000ea0 <_PyArg_UnpackKeywords@plt>:
 ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ea4:	ldr	x17, [x16, #40]
 ea8:	add	x16, x16, #0x28
 eac:	br	x17

0000000000000eb0 <PyErr_SetString@plt>:
 eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 eb4:	ldr	x17, [x16, #48]
 eb8:	add	x16, x16, #0x30
 ebc:	br	x17

0000000000000ec0 <memset@plt>:
 ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ec4:	ldr	x17, [x16, #56]
 ec8:	add	x16, x16, #0x38
 ecc:	br	x17

0000000000000ed0 <PyObject_Free@plt>:
 ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ed4:	ldr	x17, [x16, #64]
 ed8:	add	x16, x16, #0x40
 edc:	br	x17

0000000000000ee0 <PyType_Ready@plt>:
 ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ee4:	ldr	x17, [x16, #72]
 ee8:	add	x16, x16, #0x48
 eec:	br	x17

0000000000000ef0 <PyLong_FromLong@plt>:
 ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ef4:	ldr	x17, [x16, #80]
 ef8:	add	x16, x16, #0x50
 efc:	br	x17

0000000000000f00 <__gmon_start__@plt>:
 f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f04:	ldr	x17, [x16, #88]
 f08:	add	x16, x16, #0x58
 f0c:	br	x17

0000000000000f10 <PyErr_Occurred@plt>:
 f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f14:	ldr	x17, [x16, #96]
 f18:	add	x16, x16, #0x60
 f1c:	br	x17

0000000000000f20 <PyModule_Create2@plt>:
 f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f24:	ldr	x17, [x16, #104]
 f28:	add	x16, x16, #0x68
 f2c:	br	x17

0000000000000f30 <PyObject_GetBuffer@plt>:
 f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f34:	ldr	x17, [x16, #112]
 f38:	add	x16, x16, #0x70
 f3c:	br	x17

0000000000000f40 <_PyObject_New@plt>:
 f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f44:	ldr	x17, [x16, #120]
 f48:	add	x16, x16, #0x78
 f4c:	br	x17

0000000000000f50 <PyModule_AddObject@plt>:
 f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f54:	ldr	x17, [x16, #128]
 f58:	add	x16, x16, #0x80
 f5c:	br	x17

0000000000000f60 <PyUnicode_FromStringAndSize@plt>:
 f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f64:	ldr	x17, [x16, #136]
 f68:	add	x16, x16, #0x88
 f6c:	br	x17

0000000000000f70 <_Py_strhex@plt>:
 f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f74:	ldr	x17, [x16, #144]
 f78:	add	x16, x16, #0x90
 f7c:	br	x17

Disassembly of section .text:

0000000000000f80 <PyInit__sha256@@Base-0xd4>:
     f80:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
     f84:	ldr	x0, [x0, #4040]
     f88:	cbz	x0, f90 <_Py_strhex@plt+0x20>
     f8c:	b	f00 <__gmon_start__@plt>
     f90:	ret
     f94:	nop
     f98:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
     f9c:	add	x0, x0, #0x690
     fa0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x12fac>
     fa4:	add	x1, x1, #0x690
     fa8:	cmp	x1, x0
     fac:	b.eq	fc4 <_Py_strhex@plt+0x54>  // b.none
     fb0:	adrp	x1, 13000 <PyInit__sha256@@Base+0x11fac>
     fb4:	ldr	x1, [x1, #4008]
     fb8:	cbz	x1, fc4 <_Py_strhex@plt+0x54>
     fbc:	mov	x16, x1
     fc0:	br	x16
     fc4:	ret
     fc8:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
     fcc:	add	x0, x0, #0x690
     fd0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x12fac>
     fd4:	add	x1, x1, #0x690
     fd8:	sub	x1, x1, x0
     fdc:	lsr	x2, x1, #63
     fe0:	add	x1, x2, x1, asr #3
     fe4:	cmp	xzr, x1, asr #1
     fe8:	asr	x1, x1, #1
     fec:	b.eq	1004 <_Py_strhex@plt+0x94>  // b.none
     ff0:	adrp	x2, 13000 <PyInit__sha256@@Base+0x11fac>
     ff4:	ldr	x2, [x2, #4064]
     ff8:	cbz	x2, 1004 <_Py_strhex@plt+0x94>
     ffc:	mov	x16, x2
    1000:	br	x16
    1004:	ret
    1008:	stp	x29, x30, [sp, #-32]!
    100c:	mov	x29, sp
    1010:	str	x19, [sp, #16]
    1014:	adrp	x19, 14000 <PyInit__sha256@@Base+0x12fac>
    1018:	ldrb	w0, [x19, #1680]
    101c:	cbnz	w0, 1044 <_Py_strhex@plt+0xd4>
    1020:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
    1024:	ldr	x0, [x0, #4016]
    1028:	cbz	x0, 1038 <_Py_strhex@plt+0xc8>
    102c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    1030:	ldr	x0, [x0, #152]
    1034:	bl	e70 <__cxa_finalize@plt>
    1038:	bl	f98 <_Py_strhex@plt+0x28>
    103c:	mov	w0, #0x1                   	// #1
    1040:	strb	w0, [x19, #1680]
    1044:	ldr	x19, [sp, #16]
    1048:	ldp	x29, x30, [sp], #32
    104c:	ret
    1050:	b	fc8 <_Py_strhex@plt+0x58>

0000000000001054 <PyInit__sha256@@Base>:
    1054:	stp	x29, x30, [sp, #-48]!
    1058:	str	x21, [sp, #16]
    105c:	stp	x20, x19, [sp, #32]
    1060:	mov	x29, sp
    1064:	adrp	x21, 13000 <PyInit__sha256@@Base+0x11fac>
    1068:	ldr	x21, [x21, #4048]
    106c:	adrp	x19, 14000 <PyInit__sha256@@Base+0x12fac>
    1070:	add	x19, x19, #0xa0
    1074:	mov	x0, x19
    1078:	str	x21, [x19, #8]
    107c:	bl	ee0 <PyType_Ready@plt>
    1080:	tbnz	w0, #31, 10f8 <PyInit__sha256@@Base+0xa4>
    1084:	adrp	x20, 14000 <PyInit__sha256@@Base+0x12fac>
    1088:	add	x20, x20, #0x240
    108c:	mov	x0, x20
    1090:	str	x21, [x20, #8]
    1094:	bl	ee0 <PyType_Ready@plt>
    1098:	tbnz	w0, #31, 10f8 <PyInit__sha256@@Base+0xa4>
    109c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    10a0:	add	x0, x0, #0x3e0
    10a4:	mov	w1, #0x3f5                 	// #1013
    10a8:	bl	f20 <PyModule_Create2@plt>
    10ac:	mov	x21, x0
    10b0:	cbz	x0, 10fc <PyInit__sha256@@Base+0xa8>
    10b4:	ldr	x8, [x19]
    10b8:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    10bc:	add	x1, x1, #0x5a0
    10c0:	mov	x0, x21
    10c4:	add	x8, x8, #0x1
    10c8:	mov	x2, x19
    10cc:	str	x8, [x19]
    10d0:	bl	f50 <PyModule_AddObject@plt>
    10d4:	ldr	x8, [x20]
    10d8:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    10dc:	add	x1, x1, #0x5ab
    10e0:	mov	x0, x21
    10e4:	add	x8, x8, #0x1
    10e8:	mov	x2, x20
    10ec:	str	x8, [x20]
    10f0:	bl	f50 <PyModule_AddObject@plt>
    10f4:	b	10fc <PyInit__sha256@@Base+0xa8>
    10f8:	mov	x21, xzr
    10fc:	mov	x0, x21
    1100:	ldp	x20, x19, [sp, #32]
    1104:	ldr	x21, [sp, #16]
    1108:	ldp	x29, x30, [sp], #48
    110c:	ret
    1110:	b	ed0 <PyObject_Free@plt>
    1114:	stp	x29, x30, [sp, #-32]!
    1118:	str	x19, [sp, #16]
    111c:	mov	x29, sp
    1120:	ldr	x8, [x0, #8]
    1124:	adrp	x9, 14000 <PyInit__sha256@@Base+0x12fac>
    1128:	add	x9, x9, #0x240
    112c:	mov	x19, x0
    1130:	cmp	x8, x9
    1134:	b.eq	118c <PyInit__sha256@@Base+0x138>  // b.none
    1138:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    113c:	add	x0, x0, #0xa0
    1140:	bl	f40 <_PyObject_New@plt>
    1144:	cbz	x0, 1180 <PyInit__sha256@@Base+0x12c>
    1148:	ldr	x8, [x19, #120]
    114c:	str	x8, [x0, #120]
    1150:	ldr	x8, [x19, #48]
    1154:	str	x8, [x0, #48]
    1158:	ldp	q1, q0, [x19, #16]
    115c:	stp	q1, q0, [x0, #16]
    1160:	ldur	q0, [x19, #104]
    1164:	ldur	q1, [x19, #88]
    1168:	ldur	q2, [x19, #72]
    116c:	ldur	q3, [x19, #56]
    1170:	stur	q0, [x0, #104]
    1174:	stur	q1, [x0, #88]
    1178:	stur	q2, [x0, #72]
    117c:	stur	q3, [x0, #56]
    1180:	ldr	x19, [sp, #16]
    1184:	ldp	x29, x30, [sp], #32
    1188:	ret
    118c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    1190:	add	x0, x0, #0x240
    1194:	bl	f40 <_PyObject_New@plt>
    1198:	cbnz	x0, 1148 <PyInit__sha256@@Base+0xf4>
    119c:	b	1180 <PyInit__sha256@@Base+0x12c>
    11a0:	sub	sp, sp, #0xc0
    11a4:	stp	x29, x30, [sp, #160]
    11a8:	str	x19, [sp, #176]
    11ac:	add	x29, sp, #0xa0
    11b0:	ldr	x8, [x0, #120]
    11b4:	mov	x19, x0
    11b8:	mov	x1, sp
    11bc:	str	x8, [sp, #120]
    11c0:	ldr	x8, [x0, #48]
    11c4:	str	x8, [sp, #48]
    11c8:	ldp	q1, q0, [x0, #16]
    11cc:	stp	q1, q0, [sp, #16]
    11d0:	ldur	q0, [x0, #104]
    11d4:	ldur	q1, [x0, #88]
    11d8:	ldur	q2, [x0, #72]
    11dc:	ldur	q3, [x0, #56]
    11e0:	sub	x0, x29, #0x20
    11e4:	stur	q0, [sp, #104]
    11e8:	stur	q1, [sp, #88]
    11ec:	stur	q2, [sp, #72]
    11f0:	stur	q3, [sp, #56]
    11f4:	bl	143c <PyInit__sha256@@Base+0x3e8>
    11f8:	ldrsw	x1, [x19, #124]
    11fc:	sub	x0, x29, #0x20
    1200:	bl	e80 <PyBytes_FromStringAndSize@plt>
    1204:	ldr	x19, [sp, #176]
    1208:	ldp	x29, x30, [sp, #160]
    120c:	add	sp, sp, #0xc0
    1210:	ret
    1214:	sub	sp, sp, #0xc0
    1218:	stp	x29, x30, [sp, #160]
    121c:	str	x19, [sp, #176]
    1220:	add	x29, sp, #0xa0
    1224:	ldr	x8, [x0, #120]
    1228:	mov	x19, x0
    122c:	mov	x1, sp
    1230:	str	x8, [sp, #120]
    1234:	ldr	x8, [x0, #48]
    1238:	str	x8, [sp, #48]
    123c:	ldp	q1, q0, [x0, #16]
    1240:	stp	q1, q0, [sp, #16]
    1244:	ldur	q0, [x0, #104]
    1248:	ldur	q1, [x0, #88]
    124c:	ldur	q2, [x0, #72]
    1250:	ldur	q3, [x0, #56]
    1254:	sub	x0, x29, #0x20
    1258:	stur	q0, [sp, #104]
    125c:	stur	q1, [sp, #88]
    1260:	stur	q2, [sp, #72]
    1264:	stur	q3, [sp, #56]
    1268:	bl	143c <PyInit__sha256@@Base+0x3e8>
    126c:	ldrsw	x1, [x19, #124]
    1270:	sub	x0, x29, #0x20
    1274:	bl	f70 <_Py_strhex@plt>
    1278:	ldr	x19, [sp, #176]
    127c:	ldp	x29, x30, [sp, #160]
    1280:	add	sp, sp, #0xc0
    1284:	ret
    1288:	sub	sp, sp, #0x90
    128c:	stp	x29, x30, [sp, #80]
    1290:	str	x23, [sp, #96]
    1294:	stp	x22, x21, [sp, #112]
    1298:	stp	x20, x19, [sp, #128]
    129c:	add	x29, sp, #0x50
    12a0:	ldr	x9, [x1, #8]
    12a4:	ldrb	w10, [x9, #171]
    12a8:	tbnz	w10, #4, 130c <PyInit__sha256@@Base+0x2b8>
    12ac:	ldr	x9, [x9, #160]
    12b0:	cbz	x9, 1320 <PyInit__sha256@@Base+0x2cc>
    12b4:	ldr	x9, [x9]
    12b8:	cbz	x9, 1320 <PyInit__sha256@@Base+0x2cc>
    12bc:	mov	x8, x1
    12c0:	mov	x19, x0
    12c4:	mov	x1, sp
    12c8:	mov	x0, x8
    12cc:	mov	w2, wzr
    12d0:	bl	f30 <PyObject_GetBuffer@plt>
    12d4:	cmn	w0, #0x1
    12d8:	b.eq	1338 <PyInit__sha256@@Base+0x2e4>  // b.none
    12dc:	ldr	w8, [sp, #36]
    12e0:	cmp	w8, #0x2
    12e4:	b.lt	1354 <PyInit__sha256@@Base+0x300>  // b.tstop
    12e8:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    12ec:	ldr	x8, [x8, #4024]
    12f0:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    12f4:	add	x1, x1, #0x634
    12f8:	ldr	x0, [x8]
    12fc:	bl	eb0 <PyErr_SetString@plt>
    1300:	mov	x0, sp
    1304:	bl	e60 <PyBuffer_Release@plt>
    1308:	b	1338 <PyInit__sha256@@Base+0x2e4>
    130c:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    1310:	ldr	x8, [x8, #4032]
    1314:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    1318:	add	x1, x1, #0x5db
    131c:	b	1330 <PyInit__sha256@@Base+0x2dc>
    1320:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    1324:	ldr	x8, [x8, #4032]
    1328:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    132c:	add	x1, x1, #0x60a
    1330:	ldr	x0, [x8]
    1334:	bl	eb0 <PyErr_SetString@plt>
    1338:	mov	x0, xzr
    133c:	ldp	x20, x19, [sp, #128]
    1340:	ldp	x22, x21, [sp, #112]
    1344:	ldr	x23, [sp, #96]
    1348:	ldp	x29, x30, [sp, #80]
    134c:	add	sp, sp, #0x90
    1350:	ret
    1354:	ldr	x23, [sp, #16]
    1358:	ldp	w8, w9, [x19, #48]
    135c:	ldr	x20, [sp]
    1360:	adds	w8, w8, w23, lsl #3
    1364:	b.cc	1370 <PyInit__sha256@@Base+0x31c>  // b.lo, b.ul, b.last
    1368:	add	w9, w9, #0x1
    136c:	str	w9, [x19, #52]
    1370:	ldrsw	x10, [x19, #120]
    1374:	add	w9, w9, w23, lsr #29
    1378:	stp	w8, w9, [x19, #48]
    137c:	cbz	w10, 13cc <PyInit__sha256@@Base+0x378>
    1380:	mov	w8, #0x40                  	// #64
    1384:	sub	w8, w8, w10
    1388:	sxtw	x8, w8
    138c:	cmp	x23, x8
    1390:	add	x9, x19, x10
    1394:	csel	x21, x23, x8, lt  // lt = tstop
    1398:	add	x0, x9, #0x38
    139c:	mov	x1, x20
    13a0:	mov	x2, x21
    13a4:	bl	e50 <memcpy@plt>
    13a8:	ldr	w8, [x19, #120]
    13ac:	add	w8, w8, w21
    13b0:	cmp	w8, #0x40
    13b4:	str	w8, [x19, #120]
    13b8:	b.ne	141c <PyInit__sha256@@Base+0x3c8>  // b.any
    13bc:	mov	x0, x19
    13c0:	add	x20, x20, x21
    13c4:	sub	x23, x23, x21
    13c8:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    13cc:	cmp	x23, #0x40
    13d0:	add	x21, x19, #0x38
    13d4:	b.lt	1404 <PyInit__sha256@@Base+0x3b0>  // b.tstop
    13d8:	ldp	q0, q1, [x20, #32]
    13dc:	ldp	q2, q3, [x20], #64
    13e0:	mov	x0, x19
    13e4:	sub	x22, x23, #0x40
    13e8:	stp	q0, q1, [x21, #32]
    13ec:	stp	q2, q3, [x21]
    13f0:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    13f4:	cmp	x23, #0x7f
    13f8:	mov	x23, x22
    13fc:	b.gt	13d8 <PyInit__sha256@@Base+0x384>
    1400:	b	1408 <PyInit__sha256@@Base+0x3b4>
    1404:	mov	x22, x23
    1408:	mov	x0, x21
    140c:	mov	x1, x20
    1410:	mov	x2, x22
    1414:	bl	e50 <memcpy@plt>
    1418:	str	w22, [x19, #120]
    141c:	mov	x0, sp
    1420:	bl	e60 <PyBuffer_Release@plt>
    1424:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
    1428:	ldr	x0, [x0, #4056]
    142c:	ldr	x8, [x0]
    1430:	add	x8, x8, #0x1
    1434:	str	x8, [x0]
    1438:	b	133c <PyInit__sha256@@Base+0x2e8>
    143c:	stp	x29, x30, [sp, #-48]!
    1440:	stp	x22, x21, [sp, #16]
    1444:	stp	x20, x19, [sp, #32]
    1448:	mov	x29, sp
    144c:	ldp	w21, w22, [x1, #48]
    1450:	add	x9, x1, #0x38
    1454:	mov	x20, x1
    1458:	mov	x19, x0
    145c:	ubfx	x8, x21, #3, #6
    1460:	add	w11, w8, #0x1
    1464:	mov	w10, #0x80                  	// #128
    1468:	cmp	w8, #0x38
    146c:	add	x0, x9, x11
    1470:	strb	w10, [x9, x8]
    1474:	b.cc	14a4 <PyInit__sha256@@Base+0x450>  // b.lo, b.ul, b.last
    1478:	eor	w2, w8, #0x3f
    147c:	mov	w1, wzr
    1480:	bl	ec0 <memset@plt>
    1484:	mov	x0, x20
    1488:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    148c:	movi	v0.2d, #0x0
    1490:	str	xzr, [x20, #104]
    1494:	stur	q0, [x20, #88]
    1498:	stur	q0, [x20, #72]
    149c:	stur	q0, [x20, #56]
    14a0:	b	14b8 <PyInit__sha256@@Base+0x464>
    14a4:	mov	w9, #0x37                  	// #55
    14a8:	sub	w8, w9, w8
    14ac:	sxtw	x2, w8
    14b0:	mov	w1, wzr
    14b4:	bl	ec0 <memset@plt>
    14b8:	lsr	w8, w22, #24
    14bc:	lsr	w9, w22, #16
    14c0:	lsr	w10, w22, #8
    14c4:	lsr	w11, w21, #24
    14c8:	lsr	w12, w21, #16
    14cc:	lsr	w13, w21, #8
    14d0:	mov	x0, x20
    14d4:	strb	w22, [x20, #115]
    14d8:	strb	w8, [x20, #112]
    14dc:	strb	w9, [x20, #113]
    14e0:	strb	w10, [x20, #114]
    14e4:	strb	w11, [x20, #116]
    14e8:	strb	w12, [x20, #117]
    14ec:	strb	w13, [x20, #118]
    14f0:	strb	w21, [x20, #119]
    14f4:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    14f8:	ldrb	w8, [x20, #19]
    14fc:	strb	w8, [x19]
    1500:	ldrh	w8, [x20, #18]
    1504:	strb	w8, [x19, #1]
    1508:	ldr	w8, [x20, #16]
    150c:	lsr	w8, w8, #8
    1510:	strb	w8, [x19, #2]
    1514:	ldr	w8, [x20, #16]
    1518:	strb	w8, [x19, #3]
    151c:	ldrb	w8, [x20, #23]
    1520:	strb	w8, [x19, #4]
    1524:	ldrh	w8, [x20, #22]
    1528:	strb	w8, [x19, #5]
    152c:	ldr	w8, [x20, #20]
    1530:	lsr	w8, w8, #8
    1534:	strb	w8, [x19, #6]
    1538:	ldr	w8, [x20, #20]
    153c:	strb	w8, [x19, #7]
    1540:	ldrb	w8, [x20, #27]
    1544:	strb	w8, [x19, #8]
    1548:	ldrh	w8, [x20, #26]
    154c:	strb	w8, [x19, #9]
    1550:	ldr	w8, [x20, #24]
    1554:	lsr	w8, w8, #8
    1558:	strb	w8, [x19, #10]
    155c:	ldr	w8, [x20, #24]
    1560:	strb	w8, [x19, #11]
    1564:	ldrb	w8, [x20, #31]
    1568:	strb	w8, [x19, #12]
    156c:	ldrh	w8, [x20, #30]
    1570:	strb	w8, [x19, #13]
    1574:	ldr	w8, [x20, #28]
    1578:	lsr	w8, w8, #8
    157c:	strb	w8, [x19, #14]
    1580:	ldr	w8, [x20, #28]
    1584:	strb	w8, [x19, #15]
    1588:	ldrb	w8, [x20, #35]
    158c:	strb	w8, [x19, #16]
    1590:	ldrh	w8, [x20, #34]
    1594:	strb	w8, [x19, #17]
    1598:	ldr	w8, [x20, #32]
    159c:	lsr	w8, w8, #8
    15a0:	strb	w8, [x19, #18]
    15a4:	ldr	w8, [x20, #32]
    15a8:	strb	w8, [x19, #19]
    15ac:	ldrb	w8, [x20, #39]
    15b0:	strb	w8, [x19, #20]
    15b4:	ldrh	w8, [x20, #38]
    15b8:	strb	w8, [x19, #21]
    15bc:	ldr	w8, [x20, #36]
    15c0:	lsr	w8, w8, #8
    15c4:	strb	w8, [x19, #22]
    15c8:	ldr	w8, [x20, #36]
    15cc:	strb	w8, [x19, #23]
    15d0:	ldrb	w8, [x20, #43]
    15d4:	strb	w8, [x19, #24]
    15d8:	ldrh	w8, [x20, #42]
    15dc:	strb	w8, [x19, #25]
    15e0:	ldr	w8, [x20, #40]
    15e4:	lsr	w8, w8, #8
    15e8:	strb	w8, [x19, #26]
    15ec:	ldr	w8, [x20, #40]
    15f0:	strb	w8, [x19, #27]
    15f4:	ldrb	w8, [x20, #47]
    15f8:	strb	w8, [x19, #28]
    15fc:	ldrh	w8, [x20, #46]
    1600:	strb	w8, [x19, #29]
    1604:	ldr	w8, [x20, #44]
    1608:	lsr	w8, w8, #8
    160c:	strb	w8, [x19, #30]
    1610:	ldr	w8, [x20, #44]
    1614:	strb	w8, [x19, #31]
    1618:	ldp	x20, x19, [sp, #32]
    161c:	ldp	x22, x21, [sp, #16]
    1620:	ldp	x29, x30, [sp], #48
    1624:	ret
    1628:	sub	sp, sp, #0x130
    162c:	str	x29, [sp, #288]
    1630:	ldur	q0, [x0, #56]
    1634:	ldur	q1, [x0, #72]
    1638:	ldur	q2, [x0, #88]
    163c:	ldur	q3, [x0, #104]
    1640:	stp	q0, q1, [sp]
    1644:	ldp	w9, w8, [sp]
    1648:	stp	q2, q3, [sp, #32]
    164c:	rev	w8, w8
    1650:	str	w8, [sp, #4]
    1654:	ldp	w10, w8, [sp, #8]
    1658:	rev	w10, w10
    165c:	rev	w8, w8
    1660:	str	w10, [sp, #8]
    1664:	str	w8, [sp, #12]
    1668:	ldp	w10, w8, [sp, #16]
    166c:	rev	w10, w10
    1670:	rev	w8, w8
    1674:	str	w10, [sp, #16]
    1678:	str	w8, [sp, #20]
    167c:	ldp	w10, w8, [sp, #24]
    1680:	rev	w10, w10
    1684:	rev	w8, w8
    1688:	str	w10, [sp, #24]
    168c:	str	w8, [sp, #28]
    1690:	ldp	w10, w8, [sp, #32]
    1694:	rev	w10, w10
    1698:	rev	w8, w8
    169c:	str	w10, [sp, #32]
    16a0:	str	w8, [sp, #36]
    16a4:	ldp	w10, w8, [sp, #40]
    16a8:	rev	w10, w10
    16ac:	rev	w8, w8
    16b0:	str	w10, [sp, #40]
    16b4:	str	w8, [sp, #44]
    16b8:	ldp	w10, w8, [sp, #48]
    16bc:	rev	w10, w10
    16c0:	str	w10, [sp, #48]
    16c4:	ldp	w10, w11, [sp, #56]
    16c8:	rev	w8, w8
    16cc:	str	w8, [sp, #52]
    16d0:	rev	w8, w10
    16d4:	rev	w10, w9
    16d8:	rev	w9, w11
    16dc:	str	w8, [sp, #56]
    16e0:	mov	w8, #0x40                  	// #64
    16e4:	str	w9, [sp, #60]
    16e8:	mov	x9, sp
    16ec:	str	w10, [sp]
    16f0:	add	x11, x9, x8
    16f4:	ldur	w13, [x11, #-28]
    16f8:	ldur	w12, [x11, #-8]
    16fc:	add	x8, x8, #0x4
    1700:	cmp	x8, #0x100
    1704:	add	w10, w10, w13
    1708:	ldur	w13, [x11, #-60]
    170c:	ror	w14, w12, #19
    1710:	eor	w14, w14, w12, lsr #10
    1714:	eor	w12, w14, w12, ror #17
    1718:	add	w10, w10, w12
    171c:	ror	w12, w13, #18
    1720:	eor	w12, w12, w13, lsr #3
    1724:	eor	w12, w12, w13, ror #7
    1728:	add	w10, w10, w12
    172c:	str	w10, [x11]
    1730:	mov	w10, w13
    1734:	b.ne	16f0 <PyInit__sha256@@Base+0x69c>  // b.any
    1738:	ldp	q1, q0, [x0, #16]
    173c:	ldp	w9, w10, [sp]
    1740:	stp	q1, q0, [sp, #256]
    1744:	ldr	w12, [sp, #284]
    1748:	ldr	w13, [sp, #280]
    174c:	ldr	w14, [sp, #272]
    1750:	ldr	w15, [sp, #276]
    1754:	ldr	w8, [sp, #256]
    1758:	ldr	w11, [sp, #260]
    175c:	ldr	w16, [sp, #264]
    1760:	bic	w18, w13, w14
    1764:	add	w9, w12, w9
    1768:	and	w12, w15, w14
    176c:	add	w13, w13, w10
    1770:	orr	w10, w11, w8
    1774:	orr	w12, w12, w18
    1778:	and	w18, w11, w8
    177c:	and	w10, w10, w16
    1780:	orr	w10, w10, w18
    1784:	ror	w18, w14, #6
    1788:	eor	w18, w18, w14, ror #11
    178c:	eor	w18, w18, w14, ror #25
    1790:	add	w9, w9, w18
    1794:	ror	w18, w8, #2
    1798:	eor	w18, w18, w8, ror #13
    179c:	eor	w18, w18, w8, ror #22
    17a0:	add	w10, w18, w10
    17a4:	mov	w18, #0x2f98                	// #12184
    17a8:	ldr	w17, [sp, #268]
    17ac:	add	w9, w9, w12
    17b0:	movk	w18, #0x428a, lsl #16
    17b4:	add	w9, w9, w18
    17b8:	ldp	w12, w18, [sp, #8]
    17bc:	add	w17, w9, w17
    17c0:	add	w10, w10, w9
    17c4:	bic	w9, w15, w17
    17c8:	add	w12, w15, w12
    17cc:	and	w15, w14, w17
    17d0:	orr	w9, w15, w9
    17d4:	orr	w15, w10, w8
    17d8:	add	w9, w13, w9
    17dc:	and	w13, w10, w8
    17e0:	and	w15, w15, w11
    17e4:	orr	w13, w15, w13
    17e8:	ror	w15, w17, #6
    17ec:	eor	w15, w15, w17, ror #11
    17f0:	eor	w15, w15, w17, ror #25
    17f4:	add	w9, w9, w15
    17f8:	ror	w15, w10, #2
    17fc:	eor	w15, w15, w10, ror #13
    1800:	eor	w15, w15, w10, ror #22
    1804:	add	w13, w15, w13
    1808:	mov	w15, #0x4491                	// #17553
    180c:	movk	w15, #0x7137, lsl #16
    1810:	add	w9, w9, w15
    1814:	add	w16, w9, w16
    1818:	add	w18, w14, w18
    181c:	add	w9, w13, w9
    1820:	bic	w13, w14, w16
    1824:	and	w14, w17, w16
    1828:	orr	w13, w14, w13
    182c:	orr	w14, w9, w10
    1830:	add	w12, w12, w13
    1834:	and	w13, w9, w10
    1838:	and	w14, w14, w8
    183c:	orr	w13, w14, w13
    1840:	ror	w14, w16, #6
    1844:	eor	w14, w14, w16, ror #11
    1848:	eor	w14, w14, w16, ror #25
    184c:	add	w12, w12, w14
    1850:	ror	w14, w9, #2
    1854:	mov	w15, #0xfbcf                	// #64463
    1858:	eor	w14, w14, w9, ror #13
    185c:	movk	w15, #0xb5c0, lsl #16
    1860:	eor	w14, w14, w9, ror #22
    1864:	add	w13, w14, w13
    1868:	add	w12, w12, w15
    186c:	ldp	w14, w15, [sp, #16]
    1870:	add	w1, w12, w11
    1874:	add	w11, w13, w12
    1878:	bic	w12, w17, w1
    187c:	and	w13, w16, w1
    1880:	orr	w12, w13, w12
    1884:	orr	w13, w11, w9
    1888:	str	w17, [sp, #268]
    188c:	add	w14, w17, w14
    1890:	and	w17, w11, w9
    1894:	and	w13, w13, w10
    1898:	orr	w13, w13, w17
    189c:	ror	w17, w1, #6
    18a0:	eor	w17, w17, w1, ror #11
    18a4:	add	w12, w18, w12
    18a8:	eor	w17, w17, w1, ror #25
    18ac:	add	w12, w12, w17
    18b0:	ror	w17, w11, #2
    18b4:	eor	w17, w17, w11, ror #13
    18b8:	eor	w17, w17, w11, ror #22
    18bc:	add	w13, w17, w13
    18c0:	mov	w17, #0xdba5                	// #56229
    18c4:	movk	w17, #0xe9b5, lsl #16
    18c8:	add	w12, w12, w17
    18cc:	add	w18, w12, w8
    18d0:	add	w8, w13, w12
    18d4:	bic	w12, w16, w18
    18d8:	and	w13, w1, w18
    18dc:	orr	w12, w13, w12
    18e0:	orr	w13, w8, w11
    18e4:	add	w12, w14, w12
    18e8:	and	w14, w8, w11
    18ec:	and	w13, w13, w9
    18f0:	orr	w13, w13, w14
    18f4:	ror	w14, w18, #6
    18f8:	eor	w14, w14, w18, ror #11
    18fc:	eor	w14, w14, w18, ror #25
    1900:	mov	w17, #0xc25b                	// #49755
    1904:	add	w12, w12, w14
    1908:	ror	w14, w8, #2
    190c:	movk	w17, #0x3956, lsl #16
    1910:	eor	w14, w14, w8, ror #13
    1914:	eor	w14, w14, w8, ror #22
    1918:	add	w12, w12, w17
    191c:	add	w13, w14, w13
    1920:	add	w17, w12, w10
    1924:	str	w10, [sp, #284]
    1928:	add	w10, w13, w12
    192c:	bic	w12, w1, w17
    1930:	and	w13, w18, w17
    1934:	add	w15, w16, w15
    1938:	orr	w12, w13, w12
    193c:	orr	w13, w10, w8
    1940:	add	w12, w15, w12
    1944:	and	w15, w10, w8
    1948:	and	w13, w13, w11
    194c:	orr	w13, w13, w15
    1950:	ror	w15, w17, #6
    1954:	eor	w15, w15, w17, ror #11
    1958:	eor	w15, w15, w17, ror #25
    195c:	add	w12, w12, w15
    1960:	ror	w15, w10, #2
    1964:	eor	w15, w15, w10, ror #13
    1968:	str	w16, [sp, #264]
    196c:	ldp	w14, w16, [sp, #24]
    1970:	eor	w15, w15, w10, ror #22
    1974:	add	w13, w15, w13
    1978:	mov	w15, #0x11f1                	// #4593
    197c:	movk	w15, #0x59f1, lsl #16
    1980:	add	w12, w12, w15
    1984:	str	w1, [sp, #260]
    1988:	add	w14, w14, w1
    198c:	add	w1, w12, w9
    1990:	str	w9, [sp, #280]
    1994:	add	w9, w13, w12
    1998:	bic	w12, w18, w1
    199c:	and	w13, w17, w1
    19a0:	orr	w12, w13, w12
    19a4:	orr	w13, w9, w10
    19a8:	add	w12, w14, w12
    19ac:	and	w14, w9, w10
    19b0:	and	w13, w13, w8
    19b4:	orr	w13, w13, w14
    19b8:	ror	w14, w1, #6
    19bc:	eor	w14, w14, w1, ror #11
    19c0:	eor	w14, w14, w1, ror #25
    19c4:	mov	w15, #0x82a4                	// #33444
    19c8:	add	w12, w12, w14
    19cc:	ror	w14, w9, #2
    19d0:	movk	w15, #0x923f, lsl #16
    19d4:	eor	w14, w14, w9, ror #13
    19d8:	eor	w14, w14, w9, ror #22
    19dc:	add	w12, w12, w15
    19e0:	str	w18, [sp, #256]
    19e4:	add	w16, w16, w18
    19e8:	add	w13, w14, w13
    19ec:	add	w18, w12, w11
    19f0:	str	w11, [sp, #276]
    19f4:	add	w11, w13, w12
    19f8:	bic	w12, w17, w18
    19fc:	and	w13, w1, w18
    1a00:	orr	w12, w13, w12
    1a04:	orr	w13, w11, w9
    1a08:	add	w12, w16, w12
    1a0c:	and	w16, w11, w9
    1a10:	and	w13, w13, w10
    1a14:	orr	w13, w13, w16
    1a18:	ror	w16, w18, #6
    1a1c:	eor	w16, w16, w18, ror #11
    1a20:	eor	w16, w16, w18, ror #25
    1a24:	add	w12, w12, w16
    1a28:	ror	w16, w11, #2
    1a2c:	eor	w16, w16, w11, ror #13
    1a30:	ldp	w14, w15, [sp, #32]
    1a34:	eor	w16, w16, w11, ror #22
    1a38:	add	w13, w16, w13
    1a3c:	mov	w16, #0x5ed5                	// #24277
    1a40:	movk	w16, #0xab1c, lsl #16
    1a44:	add	w12, w12, w16
    1a48:	str	w17, [sp, #284]
    1a4c:	add	w14, w14, w17
    1a50:	add	w17, w12, w8
    1a54:	str	w8, [sp, #272]
    1a58:	add	w8, w13, w12
    1a5c:	bic	w12, w1, w17
    1a60:	and	w13, w18, w17
    1a64:	orr	w12, w13, w12
    1a68:	orr	w13, w8, w11
    1a6c:	add	w12, w14, w12
    1a70:	and	w14, w8, w11
    1a74:	and	w13, w13, w9
    1a78:	orr	w13, w13, w14
    1a7c:	ror	w14, w17, #6
    1a80:	eor	w14, w14, w17, ror #11
    1a84:	eor	w14, w14, w17, ror #25
    1a88:	mov	w16, #0xaa98                	// #43672
    1a8c:	add	w12, w12, w14
    1a90:	ror	w14, w8, #2
    1a94:	movk	w16, #0xd807, lsl #16
    1a98:	eor	w14, w14, w8, ror #13
    1a9c:	eor	w14, w14, w8, ror #22
    1aa0:	add	w12, w12, w16
    1aa4:	str	w1, [sp, #280]
    1aa8:	add	w15, w15, w1
    1aac:	add	w13, w14, w13
    1ab0:	add	w1, w12, w10
    1ab4:	str	w10, [sp, #268]
    1ab8:	add	w10, w13, w12
    1abc:	bic	w12, w18, w1
    1ac0:	and	w13, w17, w1
    1ac4:	orr	w12, w13, w12
    1ac8:	orr	w13, w10, w8
    1acc:	add	w12, w15, w12
    1ad0:	and	w15, w10, w8
    1ad4:	and	w13, w13, w11
    1ad8:	orr	w13, w13, w15
    1adc:	ror	w15, w1, #6
    1ae0:	eor	w15, w15, w1, ror #11
    1ae4:	eor	w15, w15, w1, ror #25
    1ae8:	add	w12, w12, w15
    1aec:	ror	w15, w10, #2
    1af0:	eor	w15, w15, w10, ror #13
    1af4:	ldp	w14, w16, [sp, #40]
    1af8:	eor	w15, w15, w10, ror #22
    1afc:	add	w13, w15, w13
    1b00:	mov	w15, #0x5b01                	// #23297
    1b04:	movk	w15, #0x1283, lsl #16
    1b08:	add	w12, w12, w15
    1b0c:	str	w18, [sp, #276]
    1b10:	add	w14, w14, w18
    1b14:	add	w18, w12, w9
    1b18:	str	w9, [sp, #264]
    1b1c:	add	w9, w13, w12
    1b20:	bic	w12, w17, w18
    1b24:	and	w13, w1, w18
    1b28:	orr	w12, w13, w12
    1b2c:	orr	w13, w9, w10
    1b30:	add	w12, w14, w12
    1b34:	and	w14, w9, w10
    1b38:	and	w13, w13, w8
    1b3c:	orr	w13, w13, w14
    1b40:	ror	w14, w18, #6
    1b44:	eor	w14, w14, w18, ror #11
    1b48:	eor	w14, w14, w18, ror #25
    1b4c:	mov	w15, #0x85be                	// #34238
    1b50:	add	w12, w12, w14
    1b54:	ror	w14, w9, #2
    1b58:	movk	w15, #0x2431, lsl #16
    1b5c:	eor	w14, w14, w9, ror #13
    1b60:	eor	w14, w14, w9, ror #22
    1b64:	add	w12, w12, w15
    1b68:	str	w17, [sp, #272]
    1b6c:	add	w16, w16, w17
    1b70:	add	w13, w14, w13
    1b74:	add	w17, w12, w11
    1b78:	str	w11, [sp, #260]
    1b7c:	add	w11, w13, w12
    1b80:	bic	w12, w1, w17
    1b84:	and	w13, w18, w17
    1b88:	orr	w12, w13, w12
    1b8c:	orr	w13, w11, w9
    1b90:	add	w12, w16, w12
    1b94:	and	w16, w11, w9
    1b98:	and	w13, w13, w10
    1b9c:	orr	w13, w13, w16
    1ba0:	ror	w16, w17, #6
    1ba4:	eor	w16, w16, w17, ror #11
    1ba8:	eor	w16, w16, w17, ror #25
    1bac:	add	w12, w12, w16
    1bb0:	ror	w16, w11, #2
    1bb4:	eor	w16, w16, w11, ror #13
    1bb8:	ldp	w14, w15, [sp, #48]
    1bbc:	eor	w16, w16, w11, ror #22
    1bc0:	add	w13, w16, w13
    1bc4:	mov	w16, #0x7dc3                	// #32195
    1bc8:	movk	w16, #0x550c, lsl #16
    1bcc:	add	w12, w12, w16
    1bd0:	str	w1, [sp, #268]
    1bd4:	add	w14, w14, w1
    1bd8:	add	w1, w12, w8
    1bdc:	str	w8, [sp, #256]
    1be0:	add	w8, w13, w12
    1be4:	bic	w12, w18, w1
    1be8:	and	w13, w17, w1
    1bec:	orr	w12, w13, w12
    1bf0:	orr	w13, w8, w11
    1bf4:	add	w12, w14, w12
    1bf8:	and	w14, w8, w11
    1bfc:	and	w13, w13, w9
    1c00:	orr	w13, w13, w14
    1c04:	ror	w14, w1, #6
    1c08:	eor	w14, w14, w1, ror #11
    1c0c:	eor	w14, w14, w1, ror #25
    1c10:	mov	w16, #0x5d74                	// #23924
    1c14:	add	w12, w12, w14
    1c18:	ror	w14, w8, #2
    1c1c:	movk	w16, #0x72be, lsl #16
    1c20:	eor	w14, w14, w8, ror #13
    1c24:	eor	w14, w14, w8, ror #22
    1c28:	add	w12, w12, w16
    1c2c:	str	w18, [sp, #264]
    1c30:	add	w15, w15, w18
    1c34:	add	w13, w14, w13
    1c38:	add	w18, w12, w10
    1c3c:	str	w10, [sp, #284]
    1c40:	add	w10, w13, w12
    1c44:	bic	w12, w17, w18
    1c48:	and	w13, w1, w18
    1c4c:	orr	w12, w13, w12
    1c50:	orr	w13, w10, w8
    1c54:	add	w12, w15, w12
    1c58:	and	w15, w10, w8
    1c5c:	and	w13, w13, w11
    1c60:	orr	w13, w13, w15
    1c64:	ror	w15, w18, #6
    1c68:	eor	w15, w15, w18, ror #11
    1c6c:	eor	w15, w15, w18, ror #25
    1c70:	add	w12, w12, w15
    1c74:	ror	w15, w10, #2
    1c78:	eor	w15, w15, w10, ror #13
    1c7c:	ldp	w14, w16, [sp, #56]
    1c80:	eor	w15, w15, w10, ror #22
    1c84:	add	w13, w15, w13
    1c88:	mov	w15, #0xb1fe                	// #45566
    1c8c:	movk	w15, #0x80de, lsl #16
    1c90:	add	w12, w12, w15
    1c94:	str	w17, [sp, #260]
    1c98:	add	w14, w14, w17
    1c9c:	add	w17, w12, w9
    1ca0:	str	w9, [sp, #280]
    1ca4:	add	w9, w13, w12
    1ca8:	bic	w12, w1, w17
    1cac:	and	w13, w18, w17
    1cb0:	orr	w12, w13, w12
    1cb4:	orr	w13, w9, w10
    1cb8:	add	w12, w14, w12
    1cbc:	and	w14, w9, w10
    1cc0:	and	w13, w13, w8
    1cc4:	orr	w13, w13, w14
    1cc8:	ror	w14, w17, #6
    1ccc:	eor	w14, w14, w17, ror #11
    1cd0:	eor	w14, w14, w17, ror #25
    1cd4:	mov	w15, #0x6a7                 	// #1703
    1cd8:	add	w12, w12, w14
    1cdc:	ror	w14, w9, #2
    1ce0:	movk	w15, #0x9bdc, lsl #16
    1ce4:	eor	w14, w14, w9, ror #13
    1ce8:	eor	w14, w14, w9, ror #22
    1cec:	add	w12, w12, w15
    1cf0:	str	w1, [sp, #256]
    1cf4:	add	w16, w16, w1
    1cf8:	add	w13, w14, w13
    1cfc:	add	w1, w12, w11
    1d00:	str	w11, [sp, #276]
    1d04:	add	w11, w13, w12
    1d08:	bic	w12, w18, w1
    1d0c:	and	w13, w17, w1
    1d10:	orr	w12, w13, w12
    1d14:	orr	w13, w11, w9
    1d18:	add	w12, w16, w12
    1d1c:	and	w16, w11, w9
    1d20:	and	w13, w13, w10
    1d24:	orr	w13, w13, w16
    1d28:	ror	w16, w1, #6
    1d2c:	eor	w16, w16, w1, ror #11
    1d30:	eor	w16, w16, w1, ror #25
    1d34:	add	w12, w12, w16
    1d38:	ror	w16, w11, #2
    1d3c:	eor	w16, w16, w11, ror #13
    1d40:	ldp	w14, w15, [sp, #64]
    1d44:	eor	w16, w16, w11, ror #22
    1d48:	add	w13, w16, w13
    1d4c:	mov	w16, #0xf174                	// #61812
    1d50:	movk	w16, #0xc19b, lsl #16
    1d54:	add	w12, w12, w16
    1d58:	str	w18, [sp, #284]
    1d5c:	add	w14, w14, w18
    1d60:	add	w18, w12, w8
    1d64:	str	w8, [sp, #272]
    1d68:	add	w8, w13, w12
    1d6c:	bic	w12, w17, w18
    1d70:	and	w13, w1, w18
    1d74:	orr	w12, w13, w12
    1d78:	orr	w13, w8, w11
    1d7c:	add	w12, w14, w12
    1d80:	and	w14, w8, w11
    1d84:	and	w13, w13, w9
    1d88:	orr	w13, w13, w14
    1d8c:	ror	w14, w18, #6
    1d90:	eor	w14, w14, w18, ror #11
    1d94:	eor	w14, w14, w18, ror #25
    1d98:	mov	w16, #0x69c1                	// #27073
    1d9c:	add	w12, w12, w14
    1da0:	ror	w14, w8, #2
    1da4:	movk	w16, #0xe49b, lsl #16
    1da8:	eor	w14, w14, w8, ror #13
    1dac:	eor	w14, w14, w8, ror #22
    1db0:	add	w12, w12, w16
    1db4:	str	w17, [sp, #280]
    1db8:	add	w15, w15, w17
    1dbc:	add	w13, w14, w13
    1dc0:	add	w17, w12, w10
    1dc4:	str	w10, [sp, #268]
    1dc8:	add	w10, w13, w12
    1dcc:	bic	w12, w1, w17
    1dd0:	and	w13, w18, w17
    1dd4:	orr	w12, w13, w12
    1dd8:	orr	w13, w10, w8
    1ddc:	add	w12, w15, w12
    1de0:	and	w15, w10, w8
    1de4:	and	w13, w13, w11
    1de8:	orr	w13, w13, w15
    1dec:	ror	w15, w17, #6
    1df0:	eor	w15, w15, w17, ror #11
    1df4:	eor	w15, w15, w17, ror #25
    1df8:	add	w12, w12, w15
    1dfc:	ror	w15, w10, #2
    1e00:	eor	w15, w15, w10, ror #13
    1e04:	ldp	w14, w16, [sp, #72]
    1e08:	eor	w15, w15, w10, ror #22
    1e0c:	add	w13, w15, w13
    1e10:	mov	w15, #0x4786                	// #18310
    1e14:	movk	w15, #0xefbe, lsl #16
    1e18:	add	w12, w12, w15
    1e1c:	str	w1, [sp, #276]
    1e20:	add	w14, w14, w1
    1e24:	add	w1, w12, w9
    1e28:	str	w9, [sp, #264]
    1e2c:	add	w9, w13, w12
    1e30:	bic	w12, w18, w1
    1e34:	and	w13, w17, w1
    1e38:	orr	w12, w13, w12
    1e3c:	orr	w13, w9, w10
    1e40:	add	w12, w14, w12
    1e44:	and	w14, w9, w10
    1e48:	and	w13, w13, w8
    1e4c:	orr	w13, w13, w14
    1e50:	ror	w14, w1, #6
    1e54:	eor	w14, w14, w1, ror #11
    1e58:	eor	w14, w14, w1, ror #25
    1e5c:	mov	w15, #0x9dc6                	// #40390
    1e60:	add	w12, w12, w14
    1e64:	ror	w14, w9, #2
    1e68:	movk	w15, #0xfc1, lsl #16
    1e6c:	eor	w14, w14, w9, ror #13
    1e70:	eor	w14, w14, w9, ror #22
    1e74:	add	w12, w12, w15
    1e78:	str	w18, [sp, #272]
    1e7c:	add	w16, w16, w18
    1e80:	add	w13, w14, w13
    1e84:	add	w18, w12, w11
    1e88:	str	w11, [sp, #260]
    1e8c:	add	w11, w13, w12
    1e90:	bic	w12, w17, w18
    1e94:	and	w13, w1, w18
    1e98:	orr	w12, w13, w12
    1e9c:	orr	w13, w11, w9
    1ea0:	add	w12, w16, w12
    1ea4:	and	w16, w11, w9
    1ea8:	and	w13, w13, w10
    1eac:	orr	w13, w13, w16
    1eb0:	ror	w16, w18, #6
    1eb4:	eor	w16, w16, w18, ror #11
    1eb8:	eor	w16, w16, w18, ror #25
    1ebc:	add	w12, w12, w16
    1ec0:	ror	w16, w11, #2
    1ec4:	eor	w16, w16, w11, ror #13
    1ec8:	ldp	w14, w15, [sp, #80]
    1ecc:	eor	w16, w16, w11, ror #22
    1ed0:	add	w13, w16, w13
    1ed4:	mov	w16, #0xa1cc                	// #41420
    1ed8:	movk	w16, #0x240c, lsl #16
    1edc:	add	w12, w12, w16
    1ee0:	str	w17, [sp, #268]
    1ee4:	add	w14, w14, w17
    1ee8:	add	w17, w12, w8
    1eec:	str	w8, [sp, #256]
    1ef0:	add	w8, w13, w12
    1ef4:	bic	w12, w1, w17
    1ef8:	and	w13, w18, w17
    1efc:	orr	w12, w13, w12
    1f00:	orr	w13, w8, w11
    1f04:	add	w12, w14, w12
    1f08:	and	w14, w8, w11
    1f0c:	and	w13, w13, w9
    1f10:	orr	w13, w13, w14
    1f14:	ror	w14, w17, #6
    1f18:	eor	w14, w14, w17, ror #11
    1f1c:	eor	w14, w14, w17, ror #25
    1f20:	mov	w16, #0x2c6f                	// #11375
    1f24:	add	w12, w12, w14
    1f28:	ror	w14, w8, #2
    1f2c:	movk	w16, #0x2de9, lsl #16
    1f30:	eor	w14, w14, w8, ror #13
    1f34:	eor	w14, w14, w8, ror #22
    1f38:	add	w12, w12, w16
    1f3c:	str	w1, [sp, #264]
    1f40:	add	w15, w15, w1
    1f44:	add	w13, w14, w13
    1f48:	add	w1, w12, w10
    1f4c:	str	w10, [sp, #284]
    1f50:	add	w10, w13, w12
    1f54:	bic	w12, w18, w1
    1f58:	and	w13, w17, w1
    1f5c:	orr	w12, w13, w12
    1f60:	orr	w13, w10, w8
    1f64:	add	w12, w15, w12
    1f68:	and	w15, w10, w8
    1f6c:	and	w13, w13, w11
    1f70:	orr	w13, w13, w15
    1f74:	ror	w15, w1, #6
    1f78:	eor	w15, w15, w1, ror #11
    1f7c:	eor	w15, w15, w1, ror #25
    1f80:	add	w12, w12, w15
    1f84:	ror	w15, w10, #2
    1f88:	eor	w15, w15, w10, ror #13
    1f8c:	ldp	w14, w16, [sp, #88]
    1f90:	eor	w15, w15, w10, ror #22
    1f94:	add	w13, w15, w13
    1f98:	mov	w15, #0x84aa                	// #33962
    1f9c:	movk	w15, #0x4a74, lsl #16
    1fa0:	add	w12, w12, w15
    1fa4:	str	w18, [sp, #260]
    1fa8:	add	w14, w14, w18
    1fac:	add	w18, w12, w9
    1fb0:	str	w9, [sp, #280]
    1fb4:	add	w9, w13, w12
    1fb8:	bic	w12, w17, w18
    1fbc:	and	w13, w1, w18
    1fc0:	orr	w12, w13, w12
    1fc4:	orr	w13, w9, w10
    1fc8:	add	w12, w14, w12
    1fcc:	and	w14, w9, w10
    1fd0:	and	w13, w13, w8
    1fd4:	orr	w13, w13, w14
    1fd8:	ror	w14, w18, #6
    1fdc:	eor	w14, w14, w18, ror #11
    1fe0:	eor	w14, w14, w18, ror #25
    1fe4:	mov	w15, #0xa9dc                	// #43484
    1fe8:	add	w12, w12, w14
    1fec:	ror	w14, w9, #2
    1ff0:	movk	w15, #0x5cb0, lsl #16
    1ff4:	eor	w14, w14, w9, ror #13
    1ff8:	eor	w14, w14, w9, ror #22
    1ffc:	add	w12, w12, w15
    2000:	str	w17, [sp, #256]
    2004:	add	w16, w16, w17
    2008:	add	w13, w14, w13
    200c:	add	w17, w12, w11
    2010:	str	w11, [sp, #276]
    2014:	add	w11, w13, w12
    2018:	bic	w12, w1, w17
    201c:	and	w13, w18, w17
    2020:	orr	w12, w13, w12
    2024:	orr	w13, w11, w9
    2028:	add	w12, w16, w12
    202c:	and	w16, w11, w9
    2030:	and	w13, w13, w10
    2034:	orr	w13, w13, w16
    2038:	ror	w16, w17, #6
    203c:	eor	w16, w16, w17, ror #11
    2040:	eor	w16, w16, w17, ror #25
    2044:	add	w12, w12, w16
    2048:	ror	w16, w11, #2
    204c:	eor	w16, w16, w11, ror #13
    2050:	ldp	w14, w15, [sp, #96]
    2054:	eor	w16, w16, w11, ror #22
    2058:	add	w13, w16, w13
    205c:	mov	w16, #0x88da                	// #35034
    2060:	movk	w16, #0x76f9, lsl #16
    2064:	add	w12, w12, w16
    2068:	str	w1, [sp, #284]
    206c:	add	w14, w14, w1
    2070:	add	w1, w12, w8
    2074:	str	w8, [sp, #272]
    2078:	add	w8, w13, w12
    207c:	bic	w12, w18, w1
    2080:	and	w13, w17, w1
    2084:	orr	w12, w13, w12
    2088:	orr	w13, w8, w11
    208c:	add	w12, w14, w12
    2090:	and	w14, w8, w11
    2094:	and	w13, w13, w9
    2098:	orr	w13, w13, w14
    209c:	ror	w14, w1, #6
    20a0:	eor	w14, w14, w1, ror #11
    20a4:	eor	w14, w14, w1, ror #25
    20a8:	mov	w16, #0x5152                	// #20818
    20ac:	add	w12, w12, w14
    20b0:	ror	w14, w8, #2
    20b4:	movk	w16, #0x983e, lsl #16
    20b8:	eor	w14, w14, w8, ror #13
    20bc:	eor	w14, w14, w8, ror #22
    20c0:	add	w12, w12, w16
    20c4:	str	w18, [sp, #280]
    20c8:	add	w15, w15, w18
    20cc:	add	w13, w14, w13
    20d0:	add	w18, w12, w10
    20d4:	str	w10, [sp, #268]
    20d8:	add	w10, w13, w12
    20dc:	bic	w12, w17, w18
    20e0:	and	w13, w1, w18
    20e4:	orr	w12, w13, w12
    20e8:	orr	w13, w10, w8
    20ec:	add	w12, w15, w12
    20f0:	and	w15, w10, w8
    20f4:	and	w13, w13, w11
    20f8:	orr	w13, w13, w15
    20fc:	ror	w15, w18, #6
    2100:	eor	w15, w15, w18, ror #11
    2104:	eor	w15, w15, w18, ror #25
    2108:	add	w12, w12, w15
    210c:	ror	w15, w10, #2
    2110:	eor	w15, w15, w10, ror #13
    2114:	ldp	w14, w16, [sp, #104]
    2118:	eor	w15, w15, w10, ror #22
    211c:	add	w13, w15, w13
    2120:	mov	w15, #0xc66d                	// #50797
    2124:	movk	w15, #0xa831, lsl #16
    2128:	add	w12, w12, w15
    212c:	str	w17, [sp, #276]
    2130:	add	w14, w14, w17
    2134:	add	w17, w12, w9
    2138:	str	w9, [sp, #264]
    213c:	add	w9, w13, w12
    2140:	bic	w12, w1, w17
    2144:	and	w13, w18, w17
    2148:	orr	w12, w13, w12
    214c:	orr	w13, w9, w10
    2150:	add	w12, w14, w12
    2154:	and	w14, w9, w10
    2158:	and	w13, w13, w8
    215c:	orr	w13, w13, w14
    2160:	ror	w14, w17, #6
    2164:	eor	w14, w14, w17, ror #11
    2168:	eor	w14, w14, w17, ror #25
    216c:	mov	w15, #0x27c8                	// #10184
    2170:	add	w12, w12, w14
    2174:	ror	w14, w9, #2
    2178:	movk	w15, #0xb003, lsl #16
    217c:	eor	w14, w14, w9, ror #13
    2180:	eor	w14, w14, w9, ror #22
    2184:	add	w12, w12, w15
    2188:	str	w1, [sp, #272]
    218c:	add	w16, w16, w1
    2190:	add	w13, w14, w13
    2194:	add	w1, w12, w11
    2198:	str	w11, [sp, #260]
    219c:	add	w11, w13, w12
    21a0:	bic	w12, w18, w1
    21a4:	and	w13, w17, w1
    21a8:	orr	w12, w13, w12
    21ac:	orr	w13, w11, w9
    21b0:	add	w12, w16, w12
    21b4:	and	w16, w11, w9
    21b8:	and	w13, w13, w10
    21bc:	orr	w13, w13, w16
    21c0:	ror	w16, w1, #6
    21c4:	eor	w16, w16, w1, ror #11
    21c8:	eor	w16, w16, w1, ror #25
    21cc:	add	w12, w12, w16
    21d0:	ror	w16, w11, #2
    21d4:	eor	w16, w16, w11, ror #13
    21d8:	ldp	w14, w15, [sp, #112]
    21dc:	eor	w16, w16, w11, ror #22
    21e0:	add	w13, w16, w13
    21e4:	mov	w16, #0x7fc7                	// #32711
    21e8:	movk	w16, #0xbf59, lsl #16
    21ec:	add	w12, w12, w16
    21f0:	str	w18, [sp, #268]
    21f4:	add	w14, w14, w18
    21f8:	add	w18, w12, w8
    21fc:	str	w8, [sp, #256]
    2200:	add	w8, w13, w12
    2204:	bic	w12, w17, w18
    2208:	and	w13, w1, w18
    220c:	orr	w12, w13, w12
    2210:	orr	w13, w8, w11
    2214:	add	w12, w14, w12
    2218:	and	w14, w8, w11
    221c:	and	w13, w13, w9
    2220:	orr	w13, w13, w14
    2224:	ror	w14, w18, #6
    2228:	eor	w14, w14, w18, ror #11
    222c:	eor	w14, w14, w18, ror #25
    2230:	mov	w16, #0xbf3                 	// #3059
    2234:	add	w12, w12, w14
    2238:	ror	w14, w8, #2
    223c:	movk	w16, #0xc6e0, lsl #16
    2240:	eor	w14, w14, w8, ror #13
    2244:	eor	w14, w14, w8, ror #22
    2248:	add	w12, w12, w16
    224c:	str	w17, [sp, #264]
    2250:	add	w15, w15, w17
    2254:	add	w13, w14, w13
    2258:	add	w17, w12, w10
    225c:	str	w10, [sp, #284]
    2260:	add	w10, w13, w12
    2264:	bic	w12, w1, w17
    2268:	and	w13, w18, w17
    226c:	orr	w12, w13, w12
    2270:	orr	w13, w10, w8
    2274:	add	w12, w15, w12
    2278:	and	w15, w10, w8
    227c:	and	w13, w13, w11
    2280:	orr	w13, w13, w15
    2284:	ror	w15, w17, #6
    2288:	eor	w15, w15, w17, ror #11
    228c:	eor	w15, w15, w17, ror #25
    2290:	add	w12, w12, w15
    2294:	ror	w15, w10, #2
    2298:	eor	w15, w15, w10, ror #13
    229c:	ldp	w14, w16, [sp, #120]
    22a0:	eor	w15, w15, w10, ror #22
    22a4:	add	w13, w15, w13
    22a8:	mov	w15, #0x9147                	// #37191
    22ac:	movk	w15, #0xd5a7, lsl #16
    22b0:	add	w12, w12, w15
    22b4:	str	w1, [sp, #260]
    22b8:	add	w14, w14, w1
    22bc:	add	w1, w12, w9
    22c0:	str	w9, [sp, #280]
    22c4:	add	w9, w13, w12
    22c8:	bic	w12, w18, w1
    22cc:	and	w13, w17, w1
    22d0:	orr	w12, w13, w12
    22d4:	orr	w13, w9, w10
    22d8:	add	w12, w14, w12
    22dc:	and	w14, w9, w10
    22e0:	and	w13, w13, w8
    22e4:	orr	w13, w13, w14
    22e8:	ror	w14, w1, #6
    22ec:	eor	w14, w14, w1, ror #11
    22f0:	eor	w14, w14, w1, ror #25
    22f4:	mov	w15, #0x6351                	// #25425
    22f8:	add	w12, w12, w14
    22fc:	ror	w14, w9, #2
    2300:	movk	w15, #0x6ca, lsl #16
    2304:	eor	w14, w14, w9, ror #13
    2308:	eor	w14, w14, w9, ror #22
    230c:	add	w12, w12, w15
    2310:	str	w18, [sp, #256]
    2314:	add	w16, w16, w18
    2318:	add	w13, w14, w13
    231c:	add	w18, w12, w11
    2320:	str	w11, [sp, #276]
    2324:	add	w11, w13, w12
    2328:	bic	w12, w17, w18
    232c:	and	w13, w1, w18
    2330:	orr	w12, w13, w12
    2334:	orr	w13, w11, w9
    2338:	add	w12, w16, w12
    233c:	and	w16, w11, w9
    2340:	and	w13, w13, w10
    2344:	orr	w13, w13, w16
    2348:	ror	w16, w18, #6
    234c:	eor	w16, w16, w18, ror #11
    2350:	eor	w16, w16, w18, ror #25
    2354:	add	w12, w12, w16
    2358:	ror	w16, w11, #2
    235c:	eor	w16, w16, w11, ror #13
    2360:	ldp	w14, w15, [sp, #128]
    2364:	eor	w16, w16, w11, ror #22
    2368:	add	w13, w16, w13
    236c:	mov	w16, #0x2967                	// #10599
    2370:	movk	w16, #0x1429, lsl #16
    2374:	add	w12, w12, w16
    2378:	str	w17, [sp, #284]
    237c:	add	w14, w14, w17
    2380:	add	w17, w12, w8
    2384:	str	w8, [sp, #272]
    2388:	add	w8, w13, w12
    238c:	bic	w12, w1, w17
    2390:	and	w13, w18, w17
    2394:	orr	w12, w13, w12
    2398:	orr	w13, w8, w11
    239c:	add	w12, w14, w12
    23a0:	and	w14, w8, w11
    23a4:	and	w13, w13, w9
    23a8:	orr	w13, w13, w14
    23ac:	ror	w14, w17, #6
    23b0:	eor	w14, w14, w17, ror #11
    23b4:	eor	w14, w14, w17, ror #25
    23b8:	mov	w16, #0xa85                 	// #2693
    23bc:	add	w12, w12, w14
    23c0:	ror	w14, w8, #2
    23c4:	movk	w16, #0x27b7, lsl #16
    23c8:	eor	w14, w14, w8, ror #13
    23cc:	eor	w14, w14, w8, ror #22
    23d0:	add	w12, w12, w16
    23d4:	str	w1, [sp, #280]
    23d8:	add	w15, w15, w1
    23dc:	add	w13, w14, w13
    23e0:	add	w1, w12, w10
    23e4:	str	w10, [sp, #268]
    23e8:	add	w10, w13, w12
    23ec:	bic	w12, w18, w1
    23f0:	and	w13, w17, w1
    23f4:	orr	w12, w13, w12
    23f8:	orr	w13, w10, w8
    23fc:	add	w12, w15, w12
    2400:	and	w15, w10, w8
    2404:	and	w13, w13, w11
    2408:	orr	w13, w13, w15
    240c:	ror	w15, w1, #6
    2410:	eor	w15, w15, w1, ror #11
    2414:	eor	w15, w15, w1, ror #25
    2418:	add	w12, w12, w15
    241c:	ror	w15, w10, #2
    2420:	eor	w15, w15, w10, ror #13
    2424:	ldp	w14, w16, [sp, #136]
    2428:	eor	w15, w15, w10, ror #22
    242c:	add	w13, w15, w13
    2430:	mov	w15, #0x2138                	// #8504
    2434:	movk	w15, #0x2e1b, lsl #16
    2438:	add	w12, w12, w15
    243c:	str	w18, [sp, #276]
    2440:	add	w14, w14, w18
    2444:	add	w18, w12, w9
    2448:	str	w9, [sp, #264]
    244c:	add	w9, w13, w12
    2450:	bic	w12, w17, w18
    2454:	and	w13, w1, w18
    2458:	orr	w12, w13, w12
    245c:	orr	w13, w9, w10
    2460:	add	w12, w14, w12
    2464:	and	w14, w9, w10
    2468:	and	w13, w13, w8
    246c:	orr	w13, w13, w14
    2470:	ror	w14, w18, #6
    2474:	eor	w14, w14, w18, ror #11
    2478:	eor	w14, w14, w18, ror #25
    247c:	mov	w15, #0x6dfc                	// #28156
    2480:	add	w12, w12, w14
    2484:	ror	w14, w9, #2
    2488:	movk	w15, #0x4d2c, lsl #16
    248c:	eor	w14, w14, w9, ror #13
    2490:	eor	w14, w14, w9, ror #22
    2494:	add	w12, w12, w15
    2498:	str	w17, [sp, #272]
    249c:	add	w16, w16, w17
    24a0:	add	w13, w14, w13
    24a4:	add	w17, w12, w11
    24a8:	str	w11, [sp, #260]
    24ac:	add	w11, w13, w12
    24b0:	bic	w12, w1, w17
    24b4:	and	w13, w18, w17
    24b8:	orr	w12, w13, w12
    24bc:	orr	w13, w11, w9
    24c0:	add	w12, w16, w12
    24c4:	and	w16, w11, w9
    24c8:	and	w13, w13, w10
    24cc:	orr	w13, w13, w16
    24d0:	ror	w16, w17, #6
    24d4:	eor	w16, w16, w17, ror #11
    24d8:	eor	w16, w16, w17, ror #25
    24dc:	add	w12, w12, w16
    24e0:	ror	w16, w11, #2
    24e4:	eor	w16, w16, w11, ror #13
    24e8:	ldp	w14, w15, [sp, #144]
    24ec:	eor	w16, w16, w11, ror #22
    24f0:	add	w13, w16, w13
    24f4:	mov	w16, #0xd13                 	// #3347
    24f8:	movk	w16, #0x5338, lsl #16
    24fc:	add	w12, w12, w16
    2500:	str	w1, [sp, #268]
    2504:	add	w14, w14, w1
    2508:	add	w1, w12, w8
    250c:	str	w8, [sp, #256]
    2510:	add	w8, w13, w12
    2514:	bic	w12, w18, w1
    2518:	and	w13, w17, w1
    251c:	orr	w12, w13, w12
    2520:	orr	w13, w8, w11
    2524:	add	w12, w14, w12
    2528:	and	w14, w8, w11
    252c:	and	w13, w13, w9
    2530:	orr	w13, w13, w14
    2534:	ror	w14, w1, #6
    2538:	eor	w14, w14, w1, ror #11
    253c:	eor	w14, w14, w1, ror #25
    2540:	mov	w16, #0x7354                	// #29524
    2544:	add	w12, w12, w14
    2548:	ror	w14, w8, #2
    254c:	movk	w16, #0x650a, lsl #16
    2550:	eor	w14, w14, w8, ror #13
    2554:	eor	w14, w14, w8, ror #22
    2558:	add	w12, w12, w16
    255c:	str	w18, [sp, #264]
    2560:	add	w15, w15, w18
    2564:	add	w13, w14, w13
    2568:	add	w18, w12, w10
    256c:	str	w10, [sp, #284]
    2570:	add	w10, w13, w12
    2574:	bic	w12, w17, w18
    2578:	and	w13, w1, w18
    257c:	orr	w12, w13, w12
    2580:	orr	w13, w10, w8
    2584:	add	w12, w15, w12
    2588:	and	w15, w10, w8
    258c:	and	w13, w13, w11
    2590:	orr	w13, w13, w15
    2594:	ror	w15, w18, #6
    2598:	eor	w15, w15, w18, ror #11
    259c:	eor	w15, w15, w18, ror #25
    25a0:	add	w12, w12, w15
    25a4:	ror	w15, w10, #2
    25a8:	eor	w15, w15, w10, ror #13
    25ac:	ldp	w14, w16, [sp, #152]
    25b0:	eor	w15, w15, w10, ror #22
    25b4:	add	w13, w15, w13
    25b8:	mov	w15, #0xabb                 	// #2747
    25bc:	movk	w15, #0x766a, lsl #16
    25c0:	add	w12, w12, w15
    25c4:	str	w17, [sp, #260]
    25c8:	add	w14, w14, w17
    25cc:	add	w17, w12, w9
    25d0:	str	w9, [sp, #280]
    25d4:	add	w9, w13, w12
    25d8:	bic	w12, w1, w17
    25dc:	and	w13, w18, w17
    25e0:	orr	w12, w13, w12
    25e4:	orr	w13, w9, w10
    25e8:	add	w12, w14, w12
    25ec:	and	w14, w9, w10
    25f0:	and	w13, w13, w8
    25f4:	orr	w13, w13, w14
    25f8:	ror	w14, w17, #6
    25fc:	eor	w14, w14, w17, ror #11
    2600:	eor	w14, w14, w17, ror #25
    2604:	mov	w15, #0xc92e                	// #51502
    2608:	add	w12, w12, w14
    260c:	ror	w14, w9, #2
    2610:	movk	w15, #0x81c2, lsl #16
    2614:	eor	w14, w14, w9, ror #13
    2618:	eor	w14, w14, w9, ror #22
    261c:	add	w12, w12, w15
    2620:	str	w1, [sp, #256]
    2624:	add	w16, w16, w1
    2628:	add	w13, w14, w13
    262c:	add	w1, w12, w11
    2630:	str	w11, [sp, #276]
    2634:	add	w11, w13, w12
    2638:	bic	w12, w18, w1
    263c:	and	w13, w17, w1
    2640:	orr	w12, w13, w12
    2644:	orr	w13, w11, w9
    2648:	add	w12, w16, w12
    264c:	and	w16, w11, w9
    2650:	and	w13, w13, w10
    2654:	orr	w13, w13, w16
    2658:	ror	w16, w1, #6
    265c:	eor	w16, w16, w1, ror #11
    2660:	eor	w16, w16, w1, ror #25
    2664:	add	w12, w12, w16
    2668:	ror	w16, w11, #2
    266c:	eor	w16, w16, w11, ror #13
    2670:	ldp	w14, w15, [sp, #160]
    2674:	eor	w16, w16, w11, ror #22
    2678:	add	w13, w16, w13
    267c:	mov	w16, #0x2c85                	// #11397
    2680:	movk	w16, #0x9272, lsl #16
    2684:	add	w12, w12, w16
    2688:	str	w18, [sp, #284]
    268c:	add	w14, w14, w18
    2690:	add	w18, w12, w8
    2694:	str	w8, [sp, #272]
    2698:	add	w8, w13, w12
    269c:	bic	w12, w17, w18
    26a0:	and	w13, w1, w18
    26a4:	orr	w12, w13, w12
    26a8:	orr	w13, w8, w11
    26ac:	add	w12, w14, w12
    26b0:	and	w14, w8, w11
    26b4:	and	w13, w13, w9
    26b8:	orr	w13, w13, w14
    26bc:	ror	w14, w18, #6
    26c0:	eor	w14, w14, w18, ror #11
    26c4:	eor	w14, w14, w18, ror #25
    26c8:	mov	w16, #0xe8a1                	// #59553
    26cc:	add	w12, w12, w14
    26d0:	ror	w14, w8, #2
    26d4:	movk	w16, #0xa2bf, lsl #16
    26d8:	eor	w14, w14, w8, ror #13
    26dc:	eor	w14, w14, w8, ror #22
    26e0:	add	w12, w12, w16
    26e4:	str	w17, [sp, #280]
    26e8:	add	w15, w15, w17
    26ec:	add	w13, w14, w13
    26f0:	add	w17, w12, w10
    26f4:	str	w10, [sp, #268]
    26f8:	add	w10, w13, w12
    26fc:	bic	w12, w1, w17
    2700:	and	w13, w18, w17
    2704:	orr	w12, w13, w12
    2708:	orr	w13, w10, w8
    270c:	add	w12, w15, w12
    2710:	and	w15, w10, w8
    2714:	and	w13, w13, w11
    2718:	orr	w13, w13, w15
    271c:	ror	w15, w17, #6
    2720:	eor	w15, w15, w17, ror #11
    2724:	eor	w15, w15, w17, ror #25
    2728:	add	w12, w12, w15
    272c:	ror	w15, w10, #2
    2730:	eor	w15, w15, w10, ror #13
    2734:	ldp	w14, w16, [sp, #168]
    2738:	eor	w15, w15, w10, ror #22
    273c:	add	w13, w15, w13
    2740:	mov	w15, #0x664b                	// #26187
    2744:	movk	w15, #0xa81a, lsl #16
    2748:	add	w12, w12, w15
    274c:	str	w1, [sp, #276]
    2750:	add	w14, w14, w1
    2754:	add	w1, w12, w9
    2758:	str	w9, [sp, #264]
    275c:	add	w9, w13, w12
    2760:	bic	w12, w18, w1
    2764:	and	w13, w17, w1
    2768:	orr	w12, w13, w12
    276c:	orr	w13, w9, w10
    2770:	add	w12, w14, w12
    2774:	and	w14, w9, w10
    2778:	and	w13, w13, w8
    277c:	orr	w13, w13, w14
    2780:	ror	w14, w1, #6
    2784:	eor	w14, w14, w1, ror #11
    2788:	eor	w14, w14, w1, ror #25
    278c:	mov	w15, #0x8b70                	// #35696
    2790:	add	w12, w12, w14
    2794:	ror	w14, w9, #2
    2798:	movk	w15, #0xc24b, lsl #16
    279c:	eor	w14, w14, w9, ror #13
    27a0:	eor	w14, w14, w9, ror #22
    27a4:	add	w12, w12, w15
    27a8:	str	w18, [sp, #272]
    27ac:	add	w16, w16, w18
    27b0:	add	w13, w14, w13
    27b4:	add	w18, w12, w11
    27b8:	str	w11, [sp, #260]
    27bc:	add	w11, w13, w12
    27c0:	bic	w12, w17, w18
    27c4:	and	w13, w1, w18
    27c8:	orr	w12, w13, w12
    27cc:	orr	w13, w11, w9
    27d0:	add	w12, w16, w12
    27d4:	and	w16, w11, w9
    27d8:	and	w13, w13, w10
    27dc:	orr	w13, w13, w16
    27e0:	ror	w16, w18, #6
    27e4:	eor	w16, w16, w18, ror #11
    27e8:	eor	w16, w16, w18, ror #25
    27ec:	add	w12, w12, w16
    27f0:	ror	w16, w11, #2
    27f4:	eor	w16, w16, w11, ror #13
    27f8:	ldp	w14, w15, [sp, #176]
    27fc:	eor	w16, w16, w11, ror #22
    2800:	add	w13, w16, w13
    2804:	mov	w16, #0x51a3                	// #20899
    2808:	movk	w16, #0xc76c, lsl #16
    280c:	add	w12, w12, w16
    2810:	str	w17, [sp, #268]
    2814:	add	w14, w14, w17
    2818:	add	w17, w12, w8
    281c:	str	w8, [sp, #256]
    2820:	add	w8, w13, w12
    2824:	bic	w12, w1, w17
    2828:	and	w13, w18, w17
    282c:	orr	w12, w13, w12
    2830:	orr	w13, w8, w11
    2834:	add	w12, w14, w12
    2838:	and	w14, w8, w11
    283c:	and	w13, w13, w9
    2840:	orr	w13, w13, w14
    2844:	ror	w14, w17, #6
    2848:	eor	w14, w14, w17, ror #11
    284c:	eor	w14, w14, w17, ror #25
    2850:	mov	w16, #0xe819                	// #59417
    2854:	add	w12, w12, w14
    2858:	ror	w14, w8, #2
    285c:	movk	w16, #0xd192, lsl #16
    2860:	eor	w14, w14, w8, ror #13
    2864:	eor	w14, w14, w8, ror #22
    2868:	add	w12, w12, w16
    286c:	str	w1, [sp, #264]
    2870:	add	w15, w15, w1
    2874:	add	w13, w14, w13
    2878:	add	w1, w12, w10
    287c:	str	w10, [sp, #284]
    2880:	add	w10, w13, w12
    2884:	bic	w12, w18, w1
    2888:	and	w13, w17, w1
    288c:	orr	w12, w13, w12
    2890:	orr	w13, w10, w8
    2894:	add	w12, w15, w12
    2898:	and	w15, w10, w8
    289c:	and	w13, w13, w11
    28a0:	orr	w13, w13, w15
    28a4:	ror	w15, w1, #6
    28a8:	eor	w15, w15, w1, ror #11
    28ac:	eor	w15, w15, w1, ror #25
    28b0:	add	w12, w12, w15
    28b4:	ror	w15, w10, #2
    28b8:	eor	w15, w15, w10, ror #13
    28bc:	ldp	w14, w16, [sp, #184]
    28c0:	eor	w15, w15, w10, ror #22
    28c4:	add	w13, w15, w13
    28c8:	mov	w15, #0x624                 	// #1572
    28cc:	movk	w15, #0xd699, lsl #16
    28d0:	add	w12, w12, w15
    28d4:	str	w18, [sp, #260]
    28d8:	add	w14, w14, w18
    28dc:	add	w18, w12, w9
    28e0:	str	w9, [sp, #280]
    28e4:	add	w9, w13, w12
    28e8:	bic	w12, w17, w18
    28ec:	and	w13, w1, w18
    28f0:	orr	w12, w13, w12
    28f4:	orr	w13, w9, w10
    28f8:	add	w12, w14, w12
    28fc:	and	w14, w9, w10
    2900:	and	w13, w13, w8
    2904:	orr	w13, w13, w14
    2908:	ror	w14, w18, #6
    290c:	eor	w14, w14, w18, ror #11
    2910:	eor	w14, w14, w18, ror #25
    2914:	mov	w15, #0x3585                	// #13701
    2918:	add	w12, w12, w14
    291c:	ror	w14, w9, #2
    2920:	movk	w15, #0xf40e, lsl #16
    2924:	eor	w14, w14, w9, ror #13
    2928:	eor	w14, w14, w9, ror #22
    292c:	add	w12, w12, w15
    2930:	str	w17, [sp, #256]
    2934:	add	w16, w16, w17
    2938:	add	w13, w14, w13
    293c:	add	w17, w12, w11
    2940:	str	w11, [sp, #276]
    2944:	add	w11, w13, w12
    2948:	bic	w12, w1, w17
    294c:	and	w13, w18, w17
    2950:	orr	w12, w13, w12
    2954:	orr	w13, w11, w9
    2958:	add	w12, w16, w12
    295c:	and	w16, w11, w9
    2960:	and	w13, w13, w10
    2964:	orr	w13, w13, w16
    2968:	ror	w16, w17, #6
    296c:	eor	w16, w16, w17, ror #11
    2970:	eor	w16, w16, w17, ror #25
    2974:	add	w12, w12, w16
    2978:	ror	w16, w11, #2
    297c:	eor	w16, w16, w11, ror #13
    2980:	ldp	w14, w15, [sp, #192]
    2984:	eor	w16, w16, w11, ror #22
    2988:	add	w13, w16, w13
    298c:	mov	w16, #0xa070                	// #41072
    2990:	movk	w16, #0x106a, lsl #16
    2994:	add	w12, w12, w16
    2998:	str	w1, [sp, #284]
    299c:	add	w14, w14, w1
    29a0:	add	w1, w12, w8
    29a4:	str	w8, [sp, #272]
    29a8:	add	w8, w13, w12
    29ac:	bic	w12, w18, w1
    29b0:	and	w13, w17, w1
    29b4:	orr	w12, w13, w12
    29b8:	orr	w13, w8, w11
    29bc:	add	w12, w14, w12
    29c0:	and	w14, w8, w11
    29c4:	and	w13, w13, w9
    29c8:	orr	w13, w13, w14
    29cc:	ror	w14, w1, #6
    29d0:	eor	w14, w14, w1, ror #11
    29d4:	eor	w14, w14, w1, ror #25
    29d8:	mov	w16, #0xc116                	// #49430
    29dc:	add	w12, w12, w14
    29e0:	ror	w14, w8, #2
    29e4:	movk	w16, #0x19a4, lsl #16
    29e8:	eor	w14, w14, w8, ror #13
    29ec:	eor	w14, w14, w8, ror #22
    29f0:	add	w12, w12, w16
    29f4:	str	w18, [sp, #280]
    29f8:	add	w15, w15, w18
    29fc:	add	w13, w14, w13
    2a00:	add	w18, w12, w10
    2a04:	str	w10, [sp, #268]
    2a08:	add	w10, w13, w12
    2a0c:	bic	w12, w17, w18
    2a10:	and	w13, w1, w18
    2a14:	orr	w12, w13, w12
    2a18:	orr	w13, w10, w8
    2a1c:	add	w12, w15, w12
    2a20:	and	w15, w10, w8
    2a24:	and	w13, w13, w11
    2a28:	orr	w13, w13, w15
    2a2c:	ror	w15, w18, #6
    2a30:	eor	w15, w15, w18, ror #11
    2a34:	eor	w15, w15, w18, ror #25
    2a38:	add	w12, w12, w15
    2a3c:	ror	w15, w10, #2
    2a40:	eor	w15, w15, w10, ror #13
    2a44:	ldp	w14, w16, [sp, #200]
    2a48:	eor	w15, w15, w10, ror #22
    2a4c:	add	w13, w15, w13
    2a50:	mov	w15, #0x6c08                	// #27656
    2a54:	movk	w15, #0x1e37, lsl #16
    2a58:	add	w12, w12, w15
    2a5c:	str	w17, [sp, #276]
    2a60:	add	w14, w14, w17
    2a64:	add	w17, w12, w9
    2a68:	str	w9, [sp, #264]
    2a6c:	add	w9, w13, w12
    2a70:	bic	w12, w1, w17
    2a74:	and	w13, w18, w17
    2a78:	orr	w12, w13, w12
    2a7c:	orr	w13, w9, w10
    2a80:	add	w12, w14, w12
    2a84:	and	w14, w9, w10
    2a88:	and	w13, w13, w8
    2a8c:	orr	w13, w13, w14
    2a90:	ror	w14, w17, #6
    2a94:	eor	w14, w14, w17, ror #11
    2a98:	eor	w14, w14, w17, ror #25
    2a9c:	mov	w15, #0x774c                	// #30540
    2aa0:	add	w12, w12, w14
    2aa4:	ror	w14, w9, #2
    2aa8:	movk	w15, #0x2748, lsl #16
    2aac:	eor	w14, w14, w9, ror #13
    2ab0:	eor	w14, w14, w9, ror #22
    2ab4:	add	w12, w12, w15
    2ab8:	str	w1, [sp, #272]
    2abc:	add	w16, w16, w1
    2ac0:	add	w13, w14, w13
    2ac4:	add	w1, w12, w11
    2ac8:	str	w11, [sp, #260]
    2acc:	add	w11, w13, w12
    2ad0:	bic	w12, w18, w1
    2ad4:	and	w13, w17, w1
    2ad8:	orr	w12, w13, w12
    2adc:	orr	w13, w11, w9
    2ae0:	add	w12, w16, w12
    2ae4:	and	w16, w11, w9
    2ae8:	and	w13, w13, w10
    2aec:	orr	w13, w13, w16
    2af0:	ror	w16, w1, #6
    2af4:	eor	w16, w16, w1, ror #11
    2af8:	eor	w16, w16, w1, ror #25
    2afc:	add	w12, w12, w16
    2b00:	ror	w16, w11, #2
    2b04:	eor	w16, w16, w11, ror #13
    2b08:	ldp	w14, w15, [sp, #208]
    2b0c:	eor	w16, w16, w11, ror #22
    2b10:	add	w13, w16, w13
    2b14:	mov	w16, #0xbcb5                	// #48309
    2b18:	movk	w16, #0x34b0, lsl #16
    2b1c:	add	w12, w12, w16
    2b20:	str	w18, [sp, #268]
    2b24:	add	w14, w14, w18
    2b28:	add	w18, w12, w8
    2b2c:	str	w8, [sp, #256]
    2b30:	add	w8, w13, w12
    2b34:	bic	w12, w17, w18
    2b38:	and	w13, w1, w18
    2b3c:	orr	w12, w13, w12
    2b40:	orr	w13, w8, w11
    2b44:	add	w12, w14, w12
    2b48:	and	w14, w8, w11
    2b4c:	and	w13, w13, w9
    2b50:	orr	w13, w13, w14
    2b54:	ror	w14, w18, #6
    2b58:	eor	w14, w14, w18, ror #11
    2b5c:	eor	w14, w14, w18, ror #25
    2b60:	mov	w16, #0xcb3                 	// #3251
    2b64:	add	w12, w12, w14
    2b68:	ror	w14, w8, #2
    2b6c:	movk	w16, #0x391c, lsl #16
    2b70:	eor	w14, w14, w8, ror #13
    2b74:	eor	w14, w14, w8, ror #22
    2b78:	add	w12, w12, w16
    2b7c:	str	w17, [sp, #264]
    2b80:	add	w15, w15, w17
    2b84:	add	w13, w14, w13
    2b88:	add	w17, w12, w10
    2b8c:	str	w10, [sp, #284]
    2b90:	add	w10, w13, w12
    2b94:	bic	w12, w1, w17
    2b98:	and	w13, w18, w17
    2b9c:	orr	w12, w13, w12
    2ba0:	orr	w13, w10, w8
    2ba4:	add	w12, w15, w12
    2ba8:	and	w15, w10, w8
    2bac:	and	w13, w13, w11
    2bb0:	orr	w13, w13, w15
    2bb4:	ror	w15, w17, #6
    2bb8:	eor	w15, w15, w17, ror #11
    2bbc:	eor	w15, w15, w17, ror #25
    2bc0:	add	w12, w12, w15
    2bc4:	ror	w15, w10, #2
    2bc8:	eor	w15, w15, w10, ror #13
    2bcc:	ldp	w14, w16, [sp, #216]
    2bd0:	eor	w15, w15, w10, ror #22
    2bd4:	add	w13, w15, w13
    2bd8:	mov	w15, #0xaa4a                	// #43594
    2bdc:	movk	w15, #0x4ed8, lsl #16
    2be0:	add	w12, w12, w15
    2be4:	str	w1, [sp, #260]
    2be8:	add	w14, w14, w1
    2bec:	add	w1, w12, w9
    2bf0:	str	w9, [sp, #280]
    2bf4:	add	w9, w13, w12
    2bf8:	bic	w12, w18, w1
    2bfc:	and	w13, w17, w1
    2c00:	orr	w12, w13, w12
    2c04:	orr	w13, w9, w10
    2c08:	add	w12, w14, w12
    2c0c:	and	w14, w9, w10
    2c10:	and	w13, w13, w8
    2c14:	orr	w13, w13, w14
    2c18:	ror	w14, w1, #6
    2c1c:	eor	w14, w14, w1, ror #11
    2c20:	eor	w14, w14, w1, ror #25
    2c24:	mov	w15, #0xca4f                	// #51791
    2c28:	add	w12, w12, w14
    2c2c:	ror	w14, w9, #2
    2c30:	movk	w15, #0x5b9c, lsl #16
    2c34:	eor	w14, w14, w9, ror #13
    2c38:	eor	w14, w14, w9, ror #22
    2c3c:	add	w12, w12, w15
    2c40:	str	w18, [sp, #256]
    2c44:	add	w16, w16, w18
    2c48:	add	w13, w14, w13
    2c4c:	add	w18, w12, w11
    2c50:	str	w11, [sp, #276]
    2c54:	add	w11, w13, w12
    2c58:	bic	w12, w17, w18
    2c5c:	and	w13, w1, w18
    2c60:	orr	w12, w13, w12
    2c64:	orr	w13, w11, w9
    2c68:	add	w12, w16, w12
    2c6c:	and	w16, w11, w9
    2c70:	and	w13, w13, w10
    2c74:	orr	w13, w13, w16
    2c78:	ror	w16, w18, #6
    2c7c:	eor	w16, w16, w18, ror #11
    2c80:	eor	w16, w16, w18, ror #25
    2c84:	add	w12, w12, w16
    2c88:	ror	w16, w11, #2
    2c8c:	eor	w16, w16, w11, ror #13
    2c90:	ldp	w14, w15, [sp, #224]
    2c94:	eor	w16, w16, w11, ror #22
    2c98:	add	w13, w16, w13
    2c9c:	mov	w16, #0x6ff3                	// #28659
    2ca0:	movk	w16, #0x682e, lsl #16
    2ca4:	add	w12, w12, w16
    2ca8:	str	w17, [sp, #284]
    2cac:	add	w14, w14, w17
    2cb0:	add	w17, w12, w8
    2cb4:	str	w8, [sp, #272]
    2cb8:	add	w8, w13, w12
    2cbc:	bic	w12, w1, w17
    2cc0:	and	w13, w18, w17
    2cc4:	orr	w12, w13, w12
    2cc8:	orr	w13, w8, w11
    2ccc:	add	w12, w14, w12
    2cd0:	and	w14, w8, w11
    2cd4:	and	w13, w13, w9
    2cd8:	orr	w13, w13, w14
    2cdc:	ror	w14, w17, #6
    2ce0:	eor	w14, w14, w17, ror #11
    2ce4:	eor	w14, w14, w17, ror #25
    2ce8:	mov	w16, #0x82ee                	// #33518
    2cec:	add	w12, w12, w14
    2cf0:	ror	w14, w8, #2
    2cf4:	movk	w16, #0x748f, lsl #16
    2cf8:	eor	w14, w14, w8, ror #13
    2cfc:	eor	w14, w14, w8, ror #22
    2d00:	add	w12, w12, w16
    2d04:	str	w1, [sp, #280]
    2d08:	add	w15, w15, w1
    2d0c:	add	w13, w14, w13
    2d10:	add	w1, w12, w10
    2d14:	str	w10, [sp, #268]
    2d18:	add	w10, w13, w12
    2d1c:	bic	w12, w18, w1
    2d20:	and	w13, w17, w1
    2d24:	orr	w12, w13, w12
    2d28:	orr	w13, w10, w8
    2d2c:	add	w12, w15, w12
    2d30:	and	w15, w10, w8
    2d34:	and	w13, w13, w11
    2d38:	orr	w13, w13, w15
    2d3c:	ror	w15, w1, #6
    2d40:	eor	w15, w15, w1, ror #11
    2d44:	eor	w15, w15, w1, ror #25
    2d48:	add	w12, w12, w15
    2d4c:	ror	w15, w10, #2
    2d50:	eor	w15, w15, w10, ror #13
    2d54:	ldp	w14, w16, [sp, #232]
    2d58:	eor	w15, w15, w10, ror #22
    2d5c:	add	w13, w15, w13
    2d60:	mov	w15, #0x636f                	// #25455
    2d64:	movk	w15, #0x78a5, lsl #16
    2d68:	add	w12, w12, w15
    2d6c:	str	w18, [sp, #276]
    2d70:	add	w14, w14, w18
    2d74:	add	w18, w12, w9
    2d78:	str	w9, [sp, #264]
    2d7c:	add	w9, w13, w12
    2d80:	bic	w12, w17, w18
    2d84:	and	w13, w1, w18
    2d88:	orr	w12, w13, w12
    2d8c:	orr	w13, w9, w10
    2d90:	add	w12, w14, w12
    2d94:	and	w14, w9, w10
    2d98:	and	w13, w13, w8
    2d9c:	orr	w13, w13, w14
    2da0:	ror	w14, w18, #6
    2da4:	eor	w14, w14, w18, ror #11
    2da8:	eor	w14, w14, w18, ror #25
    2dac:	mov	w15, #0x7814                	// #30740
    2db0:	add	w12, w12, w14
    2db4:	ror	w14, w9, #2
    2db8:	movk	w15, #0x84c8, lsl #16
    2dbc:	eor	w14, w14, w9, ror #13
    2dc0:	eor	w14, w14, w9, ror #22
    2dc4:	add	w12, w12, w15
    2dc8:	str	w17, [sp, #272]
    2dcc:	add	w16, w16, w17
    2dd0:	add	w13, w14, w13
    2dd4:	add	w17, w12, w11
    2dd8:	str	w11, [sp, #260]
    2ddc:	add	w11, w13, w12
    2de0:	bic	w12, w1, w17
    2de4:	and	w13, w18, w17
    2de8:	orr	w12, w13, w12
    2dec:	orr	w13, w11, w9
    2df0:	add	w12, w16, w12
    2df4:	and	w16, w11, w9
    2df8:	and	w13, w13, w10
    2dfc:	orr	w13, w13, w16
    2e00:	ror	w16, w17, #6
    2e04:	eor	w16, w16, w17, ror #11
    2e08:	eor	w16, w16, w17, ror #25
    2e0c:	add	w12, w12, w16
    2e10:	ror	w16, w11, #2
    2e14:	eor	w16, w16, w11, ror #13
    2e18:	ldp	w14, w15, [sp, #240]
    2e1c:	eor	w16, w16, w11, ror #22
    2e20:	add	w13, w16, w13
    2e24:	mov	w16, #0x208                 	// #520
    2e28:	movk	w16, #0x8cc7, lsl #16
    2e2c:	add	w12, w12, w16
    2e30:	str	w1, [sp, #268]
    2e34:	add	w14, w14, w1
    2e38:	add	w1, w12, w8
    2e3c:	str	w8, [sp, #256]
    2e40:	add	w8, w13, w12
    2e44:	bic	w12, w18, w1
    2e48:	and	w13, w17, w1
    2e4c:	orr	w12, w13, w12
    2e50:	orr	w13, w8, w11
    2e54:	add	w12, w14, w12
    2e58:	and	w14, w8, w11
    2e5c:	and	w13, w13, w9
    2e60:	orr	w13, w13, w14
    2e64:	ror	w14, w1, #6
    2e68:	eor	w14, w14, w1, ror #11
    2e6c:	eor	w14, w14, w1, ror #25
    2e70:	add	w12, w12, w14
    2e74:	ror	w14, w8, #2
    2e78:	mov	w16, #0xfffa                	// #65530
    2e7c:	eor	w14, w14, w8, ror #13
    2e80:	movk	w16, #0x90be, lsl #16
    2e84:	eor	w14, w14, w8, ror #22
    2e88:	add	w13, w14, w13
    2e8c:	add	w12, w12, w16
    2e90:	ldp	w14, w16, [sp, #248]
    2e94:	str	w10, [sp, #284]
    2e98:	add	w10, w12, w10
    2e9c:	str	w17, [sp, #260]
    2ea0:	add	w14, w14, w17
    2ea4:	add	w12, w13, w12
    2ea8:	bic	w13, w17, w10
    2eac:	and	w17, w1, w10
    2eb0:	add	w15, w15, w18
    2eb4:	orr	w13, w17, w13
    2eb8:	orr	w17, w12, w8
    2ebc:	add	w13, w15, w13
    2ec0:	and	w15, w12, w8
    2ec4:	and	w17, w17, w11
    2ec8:	orr	w15, w17, w15
    2ecc:	ror	w17, w10, #6
    2ed0:	eor	w17, w17, w10, ror #11
    2ed4:	eor	w17, w17, w10, ror #25
    2ed8:	add	w13, w13, w17
    2edc:	ror	w17, w12, #2
    2ee0:	eor	w17, w17, w12, ror #13
    2ee4:	eor	w17, w17, w12, ror #22
    2ee8:	add	w15, w17, w15
    2eec:	mov	w17, #0x6ceb                	// #27883
    2ef0:	movk	w17, #0xa450, lsl #16
    2ef4:	add	w13, w13, w17
    2ef8:	str	w9, [sp, #280]
    2efc:	add	w9, w13, w9
    2f00:	str	w18, [sp, #264]
    2f04:	add	w13, w15, w13
    2f08:	bic	w15, w1, w9
    2f0c:	and	w18, w10, w9
    2f10:	orr	w15, w18, w15
    2f14:	orr	w18, w13, w12
    2f18:	add	w14, w14, w15
    2f1c:	and	w15, w13, w12
    2f20:	and	w18, w18, w8
    2f24:	orr	w15, w18, w15
    2f28:	ror	w18, w9, #6
    2f2c:	eor	w18, w18, w9, ror #11
    2f30:	eor	w18, w18, w9, ror #25
    2f34:	mov	w17, #0xa3f7                	// #41975
    2f38:	add	w14, w14, w18
    2f3c:	ror	w18, w13, #2
    2f40:	movk	w17, #0xbef9, lsl #16
    2f44:	eor	w18, w18, w13, ror #13
    2f48:	eor	w18, w18, w13, ror #22
    2f4c:	add	w14, w14, w17
    2f50:	add	w15, w18, w15
    2f54:	str	w11, [sp, #276]
    2f58:	add	w11, w14, w11
    2f5c:	str	w10, [sp, #284]
    2f60:	str	w9, [sp, #280]
    2f64:	add	w14, w15, w14
    2f68:	ror	w15, w11, #6
    2f6c:	bic	w10, w10, w11
    2f70:	and	w9, w9, w11
    2f74:	add	w16, w16, w1
    2f78:	ror	w17, w14, #2
    2f7c:	orr	w9, w9, w10
    2f80:	orr	w10, w14, w13
    2f84:	eor	w15, w15, w11, ror #11
    2f88:	mov	w18, #0x78f2                	// #30962
    2f8c:	str	w12, [sp, #268]
    2f90:	and	w10, w10, w12
    2f94:	and	w12, w14, w13
    2f98:	eor	w17, w17, w14, ror #13
    2f9c:	eor	w15, w15, w11, ror #25
    2fa0:	add	w9, w16, w9
    2fa4:	movk	w18, #0xc671, lsl #16
    2fa8:	eor	w16, w17, w14, ror #22
    2fac:	orr	w10, w10, w12
    2fb0:	add	w9, w9, w15
    2fb4:	add	w10, w16, w10
    2fb8:	add	w9, w9, w18
    2fbc:	str	w8, [sp, #272]
    2fc0:	add	w8, w9, w8
    2fc4:	add	w9, w10, w9
    2fc8:	str	w1, [sp, #256]
    2fcc:	str	w13, [sp, #264]
    2fd0:	str	w11, [sp, #276]
    2fd4:	str	w14, [sp, #260]
    2fd8:	str	w8, [sp, #272]
    2fdc:	str	w9, [sp, #256]
    2fe0:	ldp	w10, w12, [x0, #16]
    2fe4:	ldp	w17, w18, [x0, #32]
    2fe8:	ldp	w15, w16, [x0, #24]
    2fec:	ldr	d0, [x0, #40]
    2ff0:	add	w9, w9, w10
    2ff4:	add	w10, w14, w12
    2ff8:	stp	w9, w10, [x0, #16]
    2ffc:	ldr	w9, [sp, #268]
    3000:	add	w8, w8, w17
    3004:	add	w10, w11, w18
    3008:	add	w12, w13, w15
    300c:	stp	w8, w10, [x0, #32]
    3010:	add	w8, w9, w16
    3014:	stp	w12, w8, [x0, #24]
    3018:	ldr	d1, [sp, #280]
    301c:	ldr	x29, [sp, #288]
    3020:	add	v0.2s, v1.2s, v0.2s
    3024:	str	d0, [x0, #40]
    3028:	add	sp, sp, #0x130
    302c:	ret
    3030:	mov	w0, #0x40                  	// #64
    3034:	b	ef0 <PyLong_FromLong@plt>
    3038:	ldr	w8, [x0, #124]
    303c:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    3040:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    3044:	add	x9, x9, #0x5be
    3048:	add	x10, x10, #0x678
    304c:	cmp	w8, #0x20
    3050:	csel	x0, x10, x9, eq  // eq = none
    3054:	mov	w1, #0x6                   	// #6
    3058:	b	f60 <PyUnicode_FromStringAndSize@plt>
    305c:	sub	sp, sp, #0xa0
    3060:	stp	x29, x30, [sp, #96]
    3064:	str	x23, [sp, #112]
    3068:	stp	x22, x21, [sp, #128]
    306c:	stp	x20, x19, [sp, #144]
    3070:	add	x29, sp, #0x60
    3074:	mov	x19, x2
    3078:	mov	x0, x1
    307c:	cbz	x3, 30b4 <PyInit__sha256@@Base+0x2060>
    3080:	ldr	x20, [x3, #16]
    3084:	adrp	x4, 14000 <PyInit__sha256@@Base+0x12fac>
    3088:	add	x8, x29, #0x18
    308c:	add	x4, x4, #0x610
    3090:	mov	w6, #0x1                   	// #1
    3094:	mov	x1, x19
    3098:	mov	x2, xzr
    309c:	mov	w5, wzr
    30a0:	mov	w7, wzr
    30a4:	str	x8, [sp]
    30a8:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    30ac:	cbnz	x0, 30c4 <PyInit__sha256@@Base+0x2070>
    30b0:	b	3280 <PyInit__sha256@@Base+0x222c>
    30b4:	mov	x20, xzr
    30b8:	cbz	x0, 3084 <PyInit__sha256@@Base+0x2030>
    30bc:	cmp	x19, #0x2
    30c0:	b.cs	3084 <PyInit__sha256@@Base+0x2030>  // b.hs, b.nlast
    30c4:	cmn	x20, x19
    30c8:	b.eq	312c <PyInit__sha256@@Base+0x20d8>  // b.none
    30cc:	ldr	x0, [x0]
    30d0:	cbz	x0, 312c <PyInit__sha256@@Base+0x20d8>
    30d4:	ldr	x8, [x0, #8]
    30d8:	ldrb	w9, [x8, #171]
    30dc:	tbnz	w9, #4, 3244 <PyInit__sha256@@Base+0x21f0>
    30e0:	ldr	x8, [x8, #160]
    30e4:	cbz	x8, 3268 <PyInit__sha256@@Base+0x2214>
    30e8:	ldr	x8, [x8]
    30ec:	cbz	x8, 3268 <PyInit__sha256@@Base+0x2214>
    30f0:	add	x1, sp, #0x10
    30f4:	mov	w2, wzr
    30f8:	bl	f30 <PyObject_GetBuffer@plt>
    30fc:	cmn	w0, #0x1
    3100:	b.eq	3280 <PyInit__sha256@@Base+0x222c>  // b.none
    3104:	ldr	w8, [sp, #52]
    3108:	cmp	w8, #0x2
    310c:	b.lt	32c4 <PyInit__sha256@@Base+0x2270>  // b.tstop
    3110:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    3114:	ldr	x8, [x8, #4024]
    3118:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    311c:	add	x1, x1, #0x634
    3120:	ldr	x0, [x8]
    3124:	bl	eb0 <PyErr_SetString@plt>
    3128:	b	3184 <PyInit__sha256@@Base+0x2130>
    312c:	mov	w20, wzr
    3130:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    3134:	add	x0, x0, #0x240
    3138:	bl	f40 <_PyObject_New@plt>
    313c:	cbz	x0, 3180 <PyInit__sha256@@Base+0x212c>
    3140:	adrp	x8, 3000 <PyInit__sha256@@Base+0x1fac>
    3144:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    3148:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    314c:	ldr	q0, [x8, #1360]
    3150:	ldr	q1, [x9, #1376]
    3154:	ldr	d2, [x10, #1424]
    3158:	mov	x19, x0
    315c:	str	xzr, [x0, #48]
    3160:	stp	q0, q1, [x0, #16]
    3164:	str	d2, [x0, #120]
    3168:	bl	f10 <PyErr_Occurred@plt>
    316c:	cbz	x0, 3190 <PyInit__sha256@@Base+0x213c>
    3170:	ldr	x8, [x19]
    3174:	subs	x8, x8, #0x1
    3178:	str	x8, [x19]
    317c:	b.eq	3258 <PyInit__sha256@@Base+0x2204>  // b.none
    3180:	cbz	w20, 3280 <PyInit__sha256@@Base+0x222c>
    3184:	add	x0, sp, #0x10
    3188:	bl	e60 <PyBuffer_Release@plt>
    318c:	b	3280 <PyInit__sha256@@Base+0x222c>
    3190:	cbz	w20, 3284 <PyInit__sha256@@Base+0x2230>
    3194:	ldr	x23, [sp, #32]
    3198:	ldp	w8, w9, [x19, #48]
    319c:	ldr	x20, [sp, #16]
    31a0:	adds	w8, w8, w23, lsl #3
    31a4:	b.cc	31b0 <PyInit__sha256@@Base+0x215c>  // b.lo, b.ul, b.last
    31a8:	add	w9, w9, #0x1
    31ac:	str	w9, [x19, #52]
    31b0:	ldrsw	x10, [x19, #120]
    31b4:	add	w9, w9, w23, lsr #29
    31b8:	stp	w8, w9, [x19, #48]
    31bc:	cbz	w10, 320c <PyInit__sha256@@Base+0x21b8>
    31c0:	mov	w8, #0x40                  	// #64
    31c4:	sub	w8, w8, w10
    31c8:	sxtw	x8, w8
    31cc:	cmp	x23, x8
    31d0:	add	x9, x19, x10
    31d4:	csel	x21, x23, x8, lt  // lt = tstop
    31d8:	add	x0, x9, #0x38
    31dc:	mov	x1, x20
    31e0:	mov	x2, x21
    31e4:	bl	e50 <memcpy@plt>
    31e8:	ldr	w8, [x19, #120]
    31ec:	add	w8, w8, w21
    31f0:	cmp	w8, #0x40
    31f4:	str	w8, [x19, #120]
    31f8:	b.ne	32b8 <PyInit__sha256@@Base+0x2264>  // b.any
    31fc:	mov	x0, x19
    3200:	add	x20, x20, x21
    3204:	sub	x23, x23, x21
    3208:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    320c:	cmp	x23, #0x40
    3210:	add	x21, x19, #0x38
    3214:	b.lt	32a0 <PyInit__sha256@@Base+0x224c>  // b.tstop
    3218:	ldp	q0, q1, [x20, #32]
    321c:	ldp	q2, q3, [x20], #64
    3220:	mov	x0, x19
    3224:	sub	x22, x23, #0x40
    3228:	stp	q0, q1, [x21, #32]
    322c:	stp	q2, q3, [x21]
    3230:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    3234:	cmp	x23, #0x7f
    3238:	mov	x23, x22
    323c:	b.gt	3218 <PyInit__sha256@@Base+0x21c4>
    3240:	b	32a4 <PyInit__sha256@@Base+0x2250>
    3244:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    3248:	ldr	x8, [x8, #4032]
    324c:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    3250:	add	x1, x1, #0x5db
    3254:	b	3278 <PyInit__sha256@@Base+0x2224>
    3258:	mov	x0, x19
    325c:	bl	e90 <_Py_Dealloc@plt>
    3260:	cbz	w20, 3280 <PyInit__sha256@@Base+0x222c>
    3264:	b	3184 <PyInit__sha256@@Base+0x2130>
    3268:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    326c:	ldr	x8, [x8, #4032]
    3270:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    3274:	add	x1, x1, #0x60a
    3278:	ldr	x0, [x8]
    327c:	bl	eb0 <PyErr_SetString@plt>
    3280:	mov	x19, xzr
    3284:	mov	x0, x19
    3288:	ldp	x20, x19, [sp, #144]
    328c:	ldp	x22, x21, [sp, #128]
    3290:	ldr	x23, [sp, #112]
    3294:	ldp	x29, x30, [sp, #96]
    3298:	add	sp, sp, #0xa0
    329c:	ret
    32a0:	mov	x22, x23
    32a4:	mov	x0, x21
    32a8:	mov	x1, x20
    32ac:	mov	x2, x22
    32b0:	bl	e50 <memcpy@plt>
    32b4:	str	w22, [x19, #120]
    32b8:	add	x0, sp, #0x10
    32bc:	bl	e60 <PyBuffer_Release@plt>
    32c0:	b	3284 <PyInit__sha256@@Base+0x2230>
    32c4:	mov	w20, #0x1                   	// #1
    32c8:	b	3130 <PyInit__sha256@@Base+0x20dc>
    32cc:	sub	sp, sp, #0xa0
    32d0:	stp	x29, x30, [sp, #96]
    32d4:	str	x23, [sp, #112]
    32d8:	stp	x22, x21, [sp, #128]
    32dc:	stp	x20, x19, [sp, #144]
    32e0:	add	x29, sp, #0x60
    32e4:	mov	x19, x2
    32e8:	mov	x0, x1
    32ec:	cbz	x3, 3324 <PyInit__sha256@@Base+0x22d0>
    32f0:	ldr	x20, [x3, #16]
    32f4:	adrp	x4, 14000 <PyInit__sha256@@Base+0x12fac>
    32f8:	add	x8, x29, #0x18
    32fc:	add	x4, x4, #0x650
    3300:	mov	w6, #0x1                   	// #1
    3304:	mov	x1, x19
    3308:	mov	x2, xzr
    330c:	mov	w5, wzr
    3310:	mov	w7, wzr
    3314:	str	x8, [sp]
    3318:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    331c:	cbnz	x0, 3334 <PyInit__sha256@@Base+0x22e0>
    3320:	b	34f0 <PyInit__sha256@@Base+0x249c>
    3324:	mov	x20, xzr
    3328:	cbz	x0, 32f4 <PyInit__sha256@@Base+0x22a0>
    332c:	cmp	x19, #0x2
    3330:	b.cs	32f4 <PyInit__sha256@@Base+0x22a0>  // b.hs, b.nlast
    3334:	cmn	x20, x19
    3338:	b.eq	339c <PyInit__sha256@@Base+0x2348>  // b.none
    333c:	ldr	x0, [x0]
    3340:	cbz	x0, 339c <PyInit__sha256@@Base+0x2348>
    3344:	ldr	x8, [x0, #8]
    3348:	ldrb	w9, [x8, #171]
    334c:	tbnz	w9, #4, 34b4 <PyInit__sha256@@Base+0x2460>
    3350:	ldr	x8, [x8, #160]
    3354:	cbz	x8, 34d8 <PyInit__sha256@@Base+0x2484>
    3358:	ldr	x8, [x8]
    335c:	cbz	x8, 34d8 <PyInit__sha256@@Base+0x2484>
    3360:	add	x1, sp, #0x10
    3364:	mov	w2, wzr
    3368:	bl	f30 <PyObject_GetBuffer@plt>
    336c:	cmn	w0, #0x1
    3370:	b.eq	34f0 <PyInit__sha256@@Base+0x249c>  // b.none
    3374:	ldr	w8, [sp, #52]
    3378:	cmp	w8, #0x2
    337c:	b.lt	3534 <PyInit__sha256@@Base+0x24e0>  // b.tstop
    3380:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    3384:	ldr	x8, [x8, #4024]
    3388:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    338c:	add	x1, x1, #0x634
    3390:	ldr	x0, [x8]
    3394:	bl	eb0 <PyErr_SetString@plt>
    3398:	b	33f4 <PyInit__sha256@@Base+0x23a0>
    339c:	mov	w20, wzr
    33a0:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    33a4:	add	x0, x0, #0xa0
    33a8:	bl	f40 <_PyObject_New@plt>
    33ac:	cbz	x0, 33f0 <PyInit__sha256@@Base+0x239c>
    33b0:	adrp	x8, 3000 <PyInit__sha256@@Base+0x1fac>
    33b4:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    33b8:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    33bc:	ldr	q0, [x8, #1392]
    33c0:	ldr	q1, [x9, #1408]
    33c4:	ldr	d2, [x10, #1432]
    33c8:	mov	x19, x0
    33cc:	str	xzr, [x0, #48]
    33d0:	stp	q0, q1, [x0, #16]
    33d4:	str	d2, [x0, #120]
    33d8:	bl	f10 <PyErr_Occurred@plt>
    33dc:	cbz	x0, 3400 <PyInit__sha256@@Base+0x23ac>
    33e0:	ldr	x8, [x19]
    33e4:	subs	x8, x8, #0x1
    33e8:	str	x8, [x19]
    33ec:	b.eq	34c8 <PyInit__sha256@@Base+0x2474>  // b.none
    33f0:	cbz	w20, 34f0 <PyInit__sha256@@Base+0x249c>
    33f4:	add	x0, sp, #0x10
    33f8:	bl	e60 <PyBuffer_Release@plt>
    33fc:	b	34f0 <PyInit__sha256@@Base+0x249c>
    3400:	cbz	w20, 34f4 <PyInit__sha256@@Base+0x24a0>
    3404:	ldr	x23, [sp, #32]
    3408:	ldp	w8, w9, [x19, #48]
    340c:	ldr	x20, [sp, #16]
    3410:	adds	w8, w8, w23, lsl #3
    3414:	b.cc	3420 <PyInit__sha256@@Base+0x23cc>  // b.lo, b.ul, b.last
    3418:	add	w9, w9, #0x1
    341c:	str	w9, [x19, #52]
    3420:	ldrsw	x10, [x19, #120]
    3424:	add	w9, w9, w23, lsr #29
    3428:	stp	w8, w9, [x19, #48]
    342c:	cbz	w10, 347c <PyInit__sha256@@Base+0x2428>
    3430:	mov	w8, #0x40                  	// #64
    3434:	sub	w8, w8, w10
    3438:	sxtw	x8, w8
    343c:	cmp	x23, x8
    3440:	add	x9, x19, x10
    3444:	csel	x21, x23, x8, lt  // lt = tstop
    3448:	add	x0, x9, #0x38
    344c:	mov	x1, x20
    3450:	mov	x2, x21
    3454:	bl	e50 <memcpy@plt>
    3458:	ldr	w8, [x19, #120]
    345c:	add	w8, w8, w21
    3460:	cmp	w8, #0x40
    3464:	str	w8, [x19, #120]
    3468:	b.ne	3528 <PyInit__sha256@@Base+0x24d4>  // b.any
    346c:	mov	x0, x19
    3470:	add	x20, x20, x21
    3474:	sub	x23, x23, x21
    3478:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    347c:	cmp	x23, #0x40
    3480:	add	x21, x19, #0x38
    3484:	b.lt	3510 <PyInit__sha256@@Base+0x24bc>  // b.tstop
    3488:	ldp	q0, q1, [x20, #32]
    348c:	ldp	q2, q3, [x20], #64
    3490:	mov	x0, x19
    3494:	sub	x22, x23, #0x40
    3498:	stp	q0, q1, [x21, #32]
    349c:	stp	q2, q3, [x21]
    34a0:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    34a4:	cmp	x23, #0x7f
    34a8:	mov	x23, x22
    34ac:	b.gt	3488 <PyInit__sha256@@Base+0x2434>
    34b0:	b	3514 <PyInit__sha256@@Base+0x24c0>
    34b4:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    34b8:	ldr	x8, [x8, #4032]
    34bc:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    34c0:	add	x1, x1, #0x5db
    34c4:	b	34e8 <PyInit__sha256@@Base+0x2494>
    34c8:	mov	x0, x19
    34cc:	bl	e90 <_Py_Dealloc@plt>
    34d0:	cbz	w20, 34f0 <PyInit__sha256@@Base+0x249c>
    34d4:	b	33f4 <PyInit__sha256@@Base+0x23a0>
    34d8:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    34dc:	ldr	x8, [x8, #4032]
    34e0:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    34e4:	add	x1, x1, #0x60a
    34e8:	ldr	x0, [x8]
    34ec:	bl	eb0 <PyErr_SetString@plt>
    34f0:	mov	x19, xzr
    34f4:	mov	x0, x19
    34f8:	ldp	x20, x19, [sp, #144]
    34fc:	ldp	x22, x21, [sp, #128]
    3500:	ldr	x23, [sp, #112]
    3504:	ldp	x29, x30, [sp, #96]
    3508:	add	sp, sp, #0xa0
    350c:	ret
    3510:	mov	x22, x23
    3514:	mov	x0, x21
    3518:	mov	x1, x20
    351c:	mov	x2, x22
    3520:	bl	e50 <memcpy@plt>
    3524:	str	w22, [x19, #120]
    3528:	add	x0, sp, #0x10
    352c:	bl	e60 <PyBuffer_Release@plt>
    3530:	b	34f4 <PyInit__sha256@@Base+0x24a0>
    3534:	mov	w20, #0x1                   	// #1
    3538:	b	33a0 <PyInit__sha256@@Base+0x234c>

Disassembly of section .fini:

000000000000353c <.fini>:
    353c:	stp	x29, x30, [sp, #-16]!
    3540:	mov	x29, sp
    3544:	ldp	x29, x30, [sp], #16
    3548:	ret
