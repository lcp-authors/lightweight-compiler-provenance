
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000022d8 <.init>:
    22d8:	stp	x29, x30, [sp, #-16]!
    22dc:	mov	x29, sp
    22e0:	bl	2580 <adler32_z@plt+0x10>
    22e4:	ldp	x29, x30, [sp], #16
    22e8:	ret

Disassembly of section .plt:

00000000000022f0 <memcpy@plt-0x20>:
    22f0:	stp	x16, x30, [sp, #-16]!
    22f4:	adrp	x16, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    22f8:	ldr	x17, [x16, #4088]
    22fc:	add	x16, x16, #0xff8
    2300:	br	x17
    2304:	nop
    2308:	nop
    230c:	nop

0000000000002310 <memcpy@plt>:
    2310:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16]
    2318:	add	x16, x16, #0x0
    231c:	br	x17

0000000000002320 <crc32_z@plt>:
    2320:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #8]
    2328:	add	x16, x16, #0x8
    232c:	br	x17

0000000000002330 <gzvprintf@plt>:
    2330:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #16]
    2338:	add	x16, x16, #0x10
    233c:	br	x17

0000000000002340 <gzseek64@plt>:
    2340:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #24]
    2348:	add	x16, x16, #0x18
    234c:	br	x17

0000000000002350 <strlen@plt>:
    2350:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #32]
    2358:	add	x16, x16, #0x20
    235c:	br	x17

0000000000002360 <inflate@plt>:
    2360:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #40]
    2368:	add	x16, x16, #0x28
    236c:	br	x17

0000000000002370 <gzclose_r@plt>:
    2370:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #48]
    2378:	add	x16, x16, #0x30
    237c:	br	x17

0000000000002380 <__cxa_finalize@plt>:
    2380:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #56]
    2388:	add	x16, x16, #0x38
    238c:	br	x17

0000000000002390 <crc32@plt>:
    2390:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #64]
    2398:	add	x16, x16, #0x40
    239c:	br	x17

00000000000023a0 <snprintf@plt>:
    23a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #72]
    23a8:	add	x16, x16, #0x48
    23ac:	br	x17

00000000000023b0 <malloc@plt>:
    23b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #80]
    23b8:	add	x16, x16, #0x50
    23bc:	br	x17

00000000000023c0 <open@plt>:
    23c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #88]
    23c8:	add	x16, x16, #0x58
    23cc:	br	x17

00000000000023d0 <deflateReset@plt>:
    23d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #96]
    23d8:	add	x16, x16, #0x60
    23dc:	br	x17

00000000000023e0 <deflate@plt>:
    23e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #104]
    23e8:	add	x16, x16, #0x68
    23ec:	br	x17

00000000000023f0 <memset@plt>:
    23f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #112]
    23f8:	add	x16, x16, #0x70
    23fc:	br	x17

0000000000002400 <lseek64@plt>:
    2400:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #120]
    2408:	add	x16, x16, #0x78
    240c:	br	x17

0000000000002410 <deflateInit2_@plt>:
    2410:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #128]
    2418:	add	x16, x16, #0x80
    241c:	br	x17

0000000000002420 <deflateParams@plt>:
    2420:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #136]
    2428:	add	x16, x16, #0x88
    242c:	br	x17

0000000000002430 <deflateInit_@plt>:
    2430:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #144]
    2438:	add	x16, x16, #0x90
    243c:	br	x17

0000000000002440 <strerror@plt>:
    2440:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #152]
    2448:	add	x16, x16, #0x98
    244c:	br	x17

0000000000002450 <close@plt>:
    2450:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #160]
    2458:	add	x16, x16, #0xa0
    245c:	br	x17

0000000000002460 <__gmon_start__@plt>:
    2460:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #168]
    2468:	add	x16, x16, #0xa8
    246c:	br	x17

0000000000002470 <write@plt>:
    2470:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #176]
    2478:	add	x16, x16, #0xb0
    247c:	br	x17

0000000000002480 <uncompress2@plt>:
    2480:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #184]
    2488:	add	x16, x16, #0xb8
    248c:	br	x17

0000000000002490 <inflateEnd@plt>:
    2490:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #192]
    2498:	add	x16, x16, #0xc0
    249c:	br	x17

00000000000024a0 <adler32@plt>:
    24a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #200]
    24a8:	add	x16, x16, #0xc8
    24ac:	br	x17

00000000000024b0 <free@plt>:
    24b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #208]
    24b8:	add	x16, x16, #0xd0
    24bc:	br	x17

00000000000024c0 <gzclose_w@plt>:
    24c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #216]
    24c8:	add	x16, x16, #0xd8
    24cc:	br	x17

00000000000024d0 <deflateEnd@plt>:
    24d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #224]
    24d8:	add	x16, x16, #0xe0
    24dc:	br	x17

00000000000024e0 <inflateInit_@plt>:
    24e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #232]
    24e8:	add	x16, x16, #0xe8
    24ec:	br	x17

00000000000024f0 <read@plt>:
    24f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #240]
    24f8:	add	x16, x16, #0xf0
    24fc:	br	x17

0000000000002500 <memchr@plt>:
    2500:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #248]
    2508:	add	x16, x16, #0xf8
    250c:	br	x17

0000000000002510 <inflateInit2_@plt>:
    2510:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #256]
    2518:	add	x16, x16, #0x100
    251c:	br	x17

0000000000002520 <inflateReset@plt>:
    2520:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #264]
    2528:	add	x16, x16, #0x108
    252c:	br	x17

0000000000002530 <vsnprintf@plt>:
    2530:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #272]
    2538:	add	x16, x16, #0x110
    253c:	br	x17

0000000000002540 <deflateResetKeep@plt>:
    2540:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #280]
    2548:	add	x16, x16, #0x118
    254c:	br	x17

0000000000002550 <inflateReset2@plt>:
    2550:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #288]
    2558:	add	x16, x16, #0x120
    255c:	br	x17

0000000000002560 <__errno_location@plt>:
    2560:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #296]
    2568:	add	x16, x16, #0x128
    256c:	br	x17

0000000000002570 <adler32_z@plt>:
    2570:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #304]
    2578:	add	x16, x16, #0x130
    257c:	br	x17

Disassembly of section .text:

0000000000002580 <adler32_z@@ZLIB_1.2.9-0xd4>:
    2580:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    2584:	ldr	x0, [x0, #4048]
    2588:	cbz	x0, 2590 <adler32_z@plt+0x20>
    258c:	b	2460 <__gmon_start__@plt>
    2590:	ret
    2594:	nop
    2598:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x14c2c>
    259c:	add	x0, x0, #0x140
    25a0:	adrp	x1, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x14c2c>
    25a4:	add	x1, x1, #0x140
    25a8:	cmp	x1, x0
    25ac:	b.eq	25c4 <adler32_z@plt+0x54>  // b.none
    25b0:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    25b4:	ldr	x1, [x1, #4032]
    25b8:	cbz	x1, 25c4 <adler32_z@plt+0x54>
    25bc:	mov	x16, x1
    25c0:	br	x16
    25c4:	ret
    25c8:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x14c2c>
    25cc:	add	x0, x0, #0x140
    25d0:	adrp	x1, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x14c2c>
    25d4:	add	x1, x1, #0x140
    25d8:	sub	x1, x1, x0
    25dc:	lsr	x2, x1, #63
    25e0:	add	x1, x2, x1, asr #3
    25e4:	cmp	xzr, x1, asr #1
    25e8:	asr	x1, x1, #1
    25ec:	b.eq	2604 <adler32_z@plt+0x94>  // b.none
    25f0:	adrp	x2, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    25f4:	ldr	x2, [x2, #4064]
    25f8:	cbz	x2, 2604 <adler32_z@plt+0x94>
    25fc:	mov	x16, x2
    2600:	br	x16
    2604:	ret
    2608:	stp	x29, x30, [sp, #-32]!
    260c:	mov	x29, sp
    2610:	str	x19, [sp, #16]
    2614:	adrp	x19, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x14c2c>
    2618:	ldrb	w0, [x19, #320]
    261c:	cbnz	w0, 2644 <adler32_z@plt+0xd4>
    2620:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    2624:	ldr	x0, [x0, #4040]
    2628:	cbz	x0, 2638 <adler32_z@plt+0xc8>
    262c:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x14c2c>
    2630:	ldr	x0, [x0, #312]
    2634:	bl	2380 <__cxa_finalize@plt>
    2638:	bl	2598 <adler32_z@plt+0x28>
    263c:	mov	w0, #0x1                   	// #1
    2640:	strb	w0, [x19, #320]
    2644:	ldr	x19, [sp, #16]
    2648:	ldp	x29, x30, [sp], #32
    264c:	ret
    2650:	b	25c8 <adler32_z@plt+0x58>

0000000000002654 <adler32_z@@ZLIB_1.2.9>:
    2654:	ubfx	x8, x0, #16, #16
    2658:	cmp	x2, #0x1
    265c:	and	x9, x0, #0xffff
    2660:	b.ne	26a4 <adler32_z@@ZLIB_1.2.9+0x50>  // b.any
    2664:	ldrb	w10, [x1]
    2668:	mov	x11, #0xffffffffffff000f    	// #-65521
    266c:	mov	w12, #0xfff0                	// #65520
    2670:	mov	x13, #0xffffffffffff0000    	// #-65536
    2674:	add	x9, x9, x10
    2678:	add	x10, x9, x11
    267c:	cmp	x9, x12
    2680:	csel	x9, x10, x9, hi  // hi = pmore
    2684:	add	x8, x9, x8
    2688:	movk	x13, #0xf, lsl #16
    268c:	lsl	x10, x8, #16
    2690:	add	x11, x10, x13
    2694:	cmp	x8, x12
    2698:	csel	x8, x11, x10, hi  // hi = pmore
    269c:	orr	x0, x8, x9
    26a0:	ret
    26a4:	cbz	x1, 2704 <adler32_z@@ZLIB_1.2.9+0xb0>
    26a8:	cmp	x2, #0x10
    26ac:	b.cs	270c <adler32_z@@ZLIB_1.2.9+0xb8>  // b.hs, b.nlast
    26b0:	cbz	x2, 26c8 <adler32_z@@ZLIB_1.2.9+0x74>
    26b4:	ldrb	w10, [x1], #1
    26b8:	subs	x2, x2, #0x1
    26bc:	add	x9, x9, x10
    26c0:	add	x8, x9, x8
    26c4:	b.ne	26b4 <adler32_z@@ZLIB_1.2.9+0x60>  // b.any
    26c8:	mov	x12, #0xc5cd                	// #50637
    26cc:	movk	x12, #0xd2f, lsl #16
    26d0:	movk	x12, #0xe1, lsl #32
    26d4:	mov	x10, #0xffffffffffff000f    	// #-65521
    26d8:	mov	w11, #0xfff0                	// #65520
    26dc:	movk	x12, #0xf, lsl #48
    26e0:	add	x10, x9, x10
    26e4:	cmp	x9, x11
    26e8:	umulh	x11, x8, x12
    26ec:	csel	x9, x10, x9, hi  // hi = pmore
    26f0:	sub	x10, x8, x11
    26f4:	add	x10, x11, x10, lsr #1
    26f8:	lsr	x10, x10, #15
    26fc:	mov	w11, #0xfff1                	// #65521
    2700:	b	2988 <adler32_z@@ZLIB_1.2.9+0x334>
    2704:	mov	w0, #0x1                   	// #1
    2708:	ret
    270c:	lsr	x10, x2, #4
    2710:	cmp	x10, #0x15b
    2714:	b.cc	2850 <adler32_z@@ZLIB_1.2.9+0x1fc>  // b.lo, b.ul, b.last
    2718:	mov	x12, #0xc5cd                	// #50637
    271c:	movk	x12, #0xd2f, lsl #16
    2720:	movk	x12, #0xe1, lsl #32
    2724:	mov	x10, #0xffffffffffffea50    	// #-5552
    2728:	mov	w11, #0x15b0                	// #5552
    272c:	movk	x12, #0xf, lsl #48
    2730:	mov	w13, #0xfff1                	// #65521
    2734:	add	x2, x2, x10
    2738:	mov	w14, #0xfffffea5            	// #-347
    273c:	mov	x15, x1
    2740:	ldrb	w16, [x15]
    2744:	ldrb	w17, [x15, #1]
    2748:	adds	w14, w14, #0x1
    274c:	add	x9, x9, x16
    2750:	ldrb	w16, [x15, #2]
    2754:	add	x8, x9, x8
    2758:	add	x9, x9, x17
    275c:	ldrb	w17, [x15, #3]
    2760:	add	x8, x8, x9
    2764:	add	x9, x9, x16
    2768:	ldrb	w16, [x15, #4]
    276c:	add	x8, x8, x9
    2770:	add	x9, x9, x17
    2774:	ldrb	w17, [x15, #5]
    2778:	add	x8, x8, x9
    277c:	add	x9, x9, x16
    2780:	ldrb	w16, [x15, #6]
    2784:	add	x8, x8, x9
    2788:	add	x9, x9, x17
    278c:	ldrb	w17, [x15, #7]
    2790:	add	x8, x8, x9
    2794:	add	x9, x9, x16
    2798:	ldrb	w16, [x15, #8]
    279c:	add	x8, x8, x9
    27a0:	add	x9, x9, x17
    27a4:	ldrb	w17, [x15, #9]
    27a8:	add	x8, x8, x9
    27ac:	add	x9, x9, x16
    27b0:	ldrb	w16, [x15, #10]
    27b4:	add	x8, x8, x9
    27b8:	add	x9, x9, x17
    27bc:	ldrb	w17, [x15, #11]
    27c0:	add	x8, x8, x9
    27c4:	add	x9, x9, x16
    27c8:	ldrb	w16, [x15, #12]
    27cc:	add	x8, x8, x9
    27d0:	add	x9, x9, x17
    27d4:	ldrb	w17, [x15, #13]
    27d8:	add	x8, x8, x9
    27dc:	add	x9, x9, x16
    27e0:	ldrb	w16, [x15, #14]
    27e4:	add	x8, x8, x9
    27e8:	add	x9, x9, x17
    27ec:	ldrb	w17, [x15, #15]
    27f0:	add	x8, x8, x9
    27f4:	add	x9, x9, x16
    27f8:	add	x8, x8, x9
    27fc:	add	x9, x9, x17
    2800:	add	x8, x8, x9
    2804:	add	x15, x15, #0x10
    2808:	b.cc	2740 <adler32_z@@ZLIB_1.2.9+0xec>  // b.lo, b.ul, b.last
    280c:	umulh	x14, x9, x12
    2810:	umulh	x15, x8, x12
    2814:	sub	x17, x9, x14
    2818:	sub	x18, x8, x15
    281c:	add	x14, x14, x17, lsr #1
    2820:	add	x15, x15, x18, lsr #1
    2824:	lsr	x16, x2, #4
    2828:	lsr	x14, x14, #15
    282c:	lsr	x15, x15, #15
    2830:	add	x1, x1, x11
    2834:	cmp	x16, #0x15a
    2838:	msub	x9, x14, x13, x9
    283c:	msub	x8, x15, x13, x8
    2840:	b.hi	2734 <adler32_z@@ZLIB_1.2.9+0xe0>  // b.pmore
    2844:	cbz	x2, 298c <adler32_z@@ZLIB_1.2.9+0x338>
    2848:	cmp	x2, #0x10
    284c:	b.cc	293c <adler32_z@@ZLIB_1.2.9+0x2e8>  // b.lo, b.ul, b.last
    2850:	sub	x11, x2, #0x10
    2854:	and	x12, x11, #0xfffffffffffffff0
    2858:	add	x10, x12, #0x10
    285c:	mov	x13, x1
    2860:	ldrb	w14, [x13]
    2864:	ldrb	w15, [x13, #1]
    2868:	sub	x2, x2, #0x10
    286c:	cmp	x2, #0xf
    2870:	add	x9, x9, x14
    2874:	ldrb	w14, [x13, #2]
    2878:	add	x8, x9, x8
    287c:	add	x9, x9, x15
    2880:	ldrb	w15, [x13, #3]
    2884:	add	x8, x8, x9
    2888:	add	x9, x9, x14
    288c:	ldrb	w14, [x13, #4]
    2890:	add	x8, x8, x9
    2894:	add	x9, x9, x15
    2898:	ldrb	w15, [x13, #5]
    289c:	add	x8, x8, x9
    28a0:	add	x9, x9, x14
    28a4:	ldrb	w14, [x13, #6]
    28a8:	add	x8, x8, x9
    28ac:	add	x9, x9, x15
    28b0:	ldrb	w15, [x13, #7]
    28b4:	add	x8, x8, x9
    28b8:	add	x9, x9, x14
    28bc:	ldrb	w14, [x13, #8]
    28c0:	add	x8, x8, x9
    28c4:	add	x9, x9, x15
    28c8:	ldrb	w15, [x13, #9]
    28cc:	add	x8, x8, x9
    28d0:	add	x9, x9, x14
    28d4:	ldrb	w14, [x13, #10]
    28d8:	add	x8, x8, x9
    28dc:	add	x9, x9, x15
    28e0:	ldrb	w15, [x13, #11]
    28e4:	add	x8, x8, x9
    28e8:	add	x9, x9, x14
    28ec:	ldrb	w14, [x13, #12]
    28f0:	add	x8, x8, x9
    28f4:	add	x9, x9, x15
    28f8:	ldrb	w15, [x13, #13]
    28fc:	add	x8, x8, x9
    2900:	add	x9, x9, x14
    2904:	ldrb	w14, [x13, #14]
    2908:	add	x8, x8, x9
    290c:	add	x9, x9, x15
    2910:	add	x8, x8, x9
    2914:	add	x9, x9, x14
    2918:	ldrb	w14, [x13, #15]
    291c:	add	x8, x8, x9
    2920:	add	x13, x13, #0x10
    2924:	add	x9, x9, x14
    2928:	add	x8, x8, x9
    292c:	b.hi	2860 <adler32_z@@ZLIB_1.2.9+0x20c>  // b.pmore
    2930:	subs	x2, x11, x12
    2934:	b.eq	2950 <adler32_z@@ZLIB_1.2.9+0x2fc>  // b.none
    2938:	add	x1, x1, x10
    293c:	ldrb	w10, [x1], #1
    2940:	subs	x2, x2, #0x1
    2944:	add	x9, x9, x10
    2948:	add	x8, x9, x8
    294c:	b.ne	293c <adler32_z@@ZLIB_1.2.9+0x2e8>  // b.any
    2950:	mov	x10, #0xc5cd                	// #50637
    2954:	movk	x10, #0xd2f, lsl #16
    2958:	movk	x10, #0xe1, lsl #32
    295c:	movk	x10, #0xf, lsl #48
    2960:	umulh	x12, x9, x10
    2964:	umulh	x10, x8, x10
    2968:	sub	x13, x9, x12
    296c:	sub	x14, x8, x10
    2970:	add	x12, x12, x13, lsr #1
    2974:	mov	w11, #0xfff1                	// #65521
    2978:	add	x10, x10, x14, lsr #1
    297c:	lsr	x12, x12, #15
    2980:	lsr	x10, x10, #15
    2984:	msub	x9, x12, x11, x9
    2988:	msub	x8, x10, x11, x8
    298c:	orr	x0, x9, x8, lsl #16
    2990:	ret

0000000000002994 <adler32@@Base>:
    2994:	mov	w2, w2
    2998:	b	2570 <adler32_z@plt>

000000000000299c <adler32_combine@@ZLIB_1.2.2>:
    299c:	tbnz	x2, #63, 2a58 <adler32_combine@@ZLIB_1.2.2+0xbc>
    29a0:	mov	x8, #0xc5cd                	// #50637
    29a4:	movk	x8, #0xd2f, lsl #16
    29a8:	movk	x8, #0xe1, lsl #32
    29ac:	movk	x8, #0xf, lsl #48
    29b0:	and	x10, x0, #0xffff
    29b4:	ubfx	x12, x0, #16, #16
    29b8:	lsr	x13, x1, #16
    29bc:	umulh	x8, x2, x8
    29c0:	mov	w11, #0xfff0                	// #65520
    29c4:	add	x14, x10, w1, uxth
    29c8:	add	x12, x12, w13, uxth
    29cc:	sub	x13, x2, x8
    29d0:	add	x8, x8, x13, lsr #1
    29d4:	add	x13, x14, x11
    29d8:	mov	w9, #0xfff1                	// #65521
    29dc:	sub	x14, x14, #0x1
    29e0:	cmp	x13, x11
    29e4:	lsr	x8, x8, #15
    29e8:	csel	x13, x14, x13, hi  // hi = pmore
    29ec:	mov	w14, #0x8071                	// #32881
    29f0:	msub	x8, x8, x9, x2
    29f4:	movk	w14, #0x8007, lsl #16
    29f8:	mul	x10, x8, x10
    29fc:	mul	x14, x10, x14
    2a00:	mov	x15, #0xffffffffffff000f    	// #-65521
    2a04:	lsr	x14, x14, #47
    2a08:	sub	x8, x12, x8
    2a0c:	add	x12, x13, x15
    2a10:	cmp	x13, x11
    2a14:	msub	w10, w14, w9, w10
    2a18:	csel	x12, x12, x13, hi  // hi = pmore
    2a1c:	mov	w13, #0xffe1                	// #65505
    2a20:	add	x8, x8, x10
    2a24:	movk	w13, #0x1, lsl #16
    2a28:	add	x9, x8, x9
    2a2c:	add	x8, x8, x15
    2a30:	cmp	x9, x13
    2a34:	mov	x14, #0xffffffffffff0000    	// #-65536
    2a38:	csel	x8, x8, x9, hi  // hi = pmore
    2a3c:	movk	x14, #0xf, lsl #16
    2a40:	lsl	x9, x8, #16
    2a44:	add	x10, x9, x14
    2a48:	cmp	x8, x11
    2a4c:	csel	x8, x10, x9, hi  // hi = pmore
    2a50:	orr	x0, x8, x12
    2a54:	ret
    2a58:	mov	w0, #0xffffffff            	// #-1
    2a5c:	ret

0000000000002a60 <adler32_combine64@@ZLIB_1.2.3.3>:
    2a60:	tbnz	x2, #63, 2b1c <adler32_combine64@@ZLIB_1.2.3.3+0xbc>
    2a64:	mov	x8, #0xc5cd                	// #50637
    2a68:	movk	x8, #0xd2f, lsl #16
    2a6c:	movk	x8, #0xe1, lsl #32
    2a70:	movk	x8, #0xf, lsl #48
    2a74:	and	x10, x0, #0xffff
    2a78:	ubfx	x12, x0, #16, #16
    2a7c:	lsr	x13, x1, #16
    2a80:	umulh	x8, x2, x8
    2a84:	mov	w11, #0xfff0                	// #65520
    2a88:	add	x14, x10, w1, uxth
    2a8c:	add	x12, x12, w13, uxth
    2a90:	sub	x13, x2, x8
    2a94:	add	x8, x8, x13, lsr #1
    2a98:	add	x13, x14, x11
    2a9c:	mov	w9, #0xfff1                	// #65521
    2aa0:	sub	x14, x14, #0x1
    2aa4:	cmp	x13, x11
    2aa8:	lsr	x8, x8, #15
    2aac:	csel	x13, x14, x13, hi  // hi = pmore
    2ab0:	mov	w14, #0x8071                	// #32881
    2ab4:	msub	x8, x8, x9, x2
    2ab8:	movk	w14, #0x8007, lsl #16
    2abc:	mul	x10, x8, x10
    2ac0:	mul	x14, x10, x14
    2ac4:	mov	x15, #0xffffffffffff000f    	// #-65521
    2ac8:	lsr	x14, x14, #47
    2acc:	sub	x8, x12, x8
    2ad0:	add	x12, x13, x15
    2ad4:	cmp	x13, x11
    2ad8:	msub	w10, w14, w9, w10
    2adc:	csel	x12, x12, x13, hi  // hi = pmore
    2ae0:	mov	w13, #0xffe1                	// #65505
    2ae4:	add	x8, x8, x10
    2ae8:	movk	w13, #0x1, lsl #16
    2aec:	add	x9, x8, x9
    2af0:	add	x8, x8, x15
    2af4:	cmp	x9, x13
    2af8:	mov	x14, #0xffffffffffff0000    	// #-65536
    2afc:	csel	x8, x8, x9, hi  // hi = pmore
    2b00:	movk	x14, #0xf, lsl #16
    2b04:	lsl	x9, x8, #16
    2b08:	add	x10, x9, x14
    2b0c:	cmp	x8, x11
    2b10:	csel	x8, x10, x9, hi  // hi = pmore
    2b14:	orr	x0, x8, x12
    2b18:	ret
    2b1c:	mov	w0, #0xffffffff            	// #-1
    2b20:	ret

0000000000002b24 <get_crc_table@@Base>:
    2b24:	adrp	x0, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2b28:	add	x0, x0, #0x640
    2b2c:	ret

0000000000002b30 <crc32_z@@ZLIB_1.2.9>:
    2b30:	cbz	x1, 2ba0 <crc32_z@@ZLIB_1.2.9+0x70>
    2b34:	adrp	x8, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2b38:	mvn	w9, w0
    2b3c:	add	x8, x8, #0x640
    2b40:	cbz	x2, 2b68 <crc32_z@@ZLIB_1.2.9+0x38>
    2b44:	and	x10, x1, #0x3
    2b48:	cbz	x10, 2b68 <crc32_z@@ZLIB_1.2.9+0x38>
    2b4c:	ldrb	w10, [x1], #1
    2b50:	and	w11, w9, #0xff
    2b54:	subs	x2, x2, #0x1
    2b58:	eor	w10, w11, w10
    2b5c:	ldr	w10, [x8, w10, uxtw #2]
    2b60:	eor	w9, w10, w9, lsr #8
    2b64:	b.ne	2b44 <crc32_z@@ZLIB_1.2.9+0x14>  // b.any
    2b68:	subs	x10, x2, #0x20
    2b6c:	b.cs	2ba8 <crc32_z@@ZLIB_1.2.9+0x78>  // b.hs, b.nlast
    2b70:	subs	x10, x2, #0x4
    2b74:	b.cs	2d70 <crc32_z@@ZLIB_1.2.9+0x240>  // b.hs, b.nlast
    2b78:	cbz	x2, 2b98 <crc32_z@@ZLIB_1.2.9+0x68>
    2b7c:	ldrb	w10, [x1], #1
    2b80:	and	w11, w9, #0xff
    2b84:	subs	x2, x2, #0x1
    2b88:	eor	w10, w11, w10
    2b8c:	ldr	w10, [x8, w10, uxtw #2]
    2b90:	eor	w9, w10, w9, lsr #8
    2b94:	b.ne	2b7c <crc32_z@@ZLIB_1.2.9+0x4c>  // b.any
    2b98:	mvn	w0, w9
    2b9c:	ret
    2ba0:	mov	x0, xzr
    2ba4:	ret
    2ba8:	and	x12, x10, #0xffffffffffffffe0
    2bac:	add	x11, x12, x1
    2bb0:	add	x11, x11, #0x20
    2bb4:	ldp	w16, w17, [x1]
    2bb8:	add	x13, x8, #0xc00
    2bbc:	add	x14, x8, #0x800
    2bc0:	add	x15, x8, #0x400
    2bc4:	eor	w9, w16, w9
    2bc8:	and	w16, w9, #0xff
    2bcc:	ubfx	w18, w9, #8, #8
    2bd0:	ubfx	w0, w9, #16, #8
    2bd4:	ldr	w16, [x13, w16, uxtw #2]
    2bd8:	ldr	w18, [x14, w18, uxtw #2]
    2bdc:	lsr	w9, w9, #24
    2be0:	ldr	w0, [x15, w0, uxtw #2]
    2be4:	ldr	w9, [x8, w9, uxtw #2]
    2be8:	eor	w16, w18, w16
    2bec:	sub	x2, x2, #0x20
    2bf0:	eor	w16, w16, w0
    2bf4:	eor	w9, w16, w9
    2bf8:	eor	w9, w9, w17
    2bfc:	and	w16, w9, #0xff
    2c00:	ubfx	w17, w9, #8, #8
    2c04:	ldr	w16, [x13, w16, uxtw #2]
    2c08:	ldr	w17, [x14, w17, uxtw #2]
    2c0c:	ubfx	w18, w9, #16, #8
    2c10:	lsr	w9, w9, #24
    2c14:	ldr	w18, [x15, w18, uxtw #2]
    2c18:	ldr	w9, [x8, w9, uxtw #2]
    2c1c:	eor	w16, w17, w16
    2c20:	ldp	w17, w0, [x1, #8]
    2c24:	eor	w16, w16, w18
    2c28:	eor	w9, w16, w9
    2c2c:	cmp	x2, #0x1f
    2c30:	eor	w9, w9, w17
    2c34:	and	w16, w9, #0xff
    2c38:	ubfx	w17, w9, #8, #8
    2c3c:	ubfx	w18, w9, #16, #8
    2c40:	ldr	w16, [x13, w16, uxtw #2]
    2c44:	ldr	w17, [x14, w17, uxtw #2]
    2c48:	lsr	w9, w9, #24
    2c4c:	ldr	w18, [x15, w18, uxtw #2]
    2c50:	ldr	w9, [x8, w9, uxtw #2]
    2c54:	eor	w16, w17, w16
    2c58:	eor	w16, w16, w18
    2c5c:	eor	w9, w16, w9
    2c60:	eor	w9, w9, w0
    2c64:	and	w16, w9, #0xff
    2c68:	ubfx	w17, w9, #8, #8
    2c6c:	ldr	w16, [x13, w16, uxtw #2]
    2c70:	ldr	w17, [x14, w17, uxtw #2]
    2c74:	ubfx	w18, w9, #16, #8
    2c78:	lsr	w9, w9, #24
    2c7c:	ldr	w18, [x15, w18, uxtw #2]
    2c80:	ldr	w9, [x8, w9, uxtw #2]
    2c84:	eor	w16, w17, w16
    2c88:	ldp	w17, w0, [x1, #16]
    2c8c:	eor	w16, w16, w18
    2c90:	eor	w9, w16, w9
    2c94:	eor	w9, w9, w17
    2c98:	and	w16, w9, #0xff
    2c9c:	ubfx	w17, w9, #8, #8
    2ca0:	ubfx	w18, w9, #16, #8
    2ca4:	ldr	w16, [x13, w16, uxtw #2]
    2ca8:	ldr	w17, [x14, w17, uxtw #2]
    2cac:	lsr	w9, w9, #24
    2cb0:	ldr	w18, [x15, w18, uxtw #2]
    2cb4:	ldr	w9, [x8, w9, uxtw #2]
    2cb8:	eor	w16, w17, w16
    2cbc:	eor	w16, w16, w18
    2cc0:	eor	w9, w16, w9
    2cc4:	eor	w9, w9, w0
    2cc8:	and	w16, w9, #0xff
    2ccc:	ubfx	w17, w9, #8, #8
    2cd0:	ldr	w16, [x13, w16, uxtw #2]
    2cd4:	ldr	w17, [x14, w17, uxtw #2]
    2cd8:	ubfx	w18, w9, #16, #8
    2cdc:	lsr	w9, w9, #24
    2ce0:	ldr	w18, [x15, w18, uxtw #2]
    2ce4:	ldr	w9, [x8, w9, uxtw #2]
    2ce8:	eor	w16, w17, w16
    2cec:	ldp	w17, w0, [x1, #24]
    2cf0:	eor	w16, w16, w18
    2cf4:	eor	w9, w16, w9
    2cf8:	add	x1, x1, #0x20
    2cfc:	eor	w9, w9, w17
    2d00:	and	w16, w9, #0xff
    2d04:	ubfx	w17, w9, #8, #8
    2d08:	ubfx	w18, w9, #16, #8
    2d0c:	ldr	w16, [x13, w16, uxtw #2]
    2d10:	ldr	w17, [x14, w17, uxtw #2]
    2d14:	ldr	w18, [x15, w18, uxtw #2]
    2d18:	lsr	w9, w9, #24
    2d1c:	ldr	w9, [x8, w9, uxtw #2]
    2d20:	eor	w16, w17, w16
    2d24:	eor	w16, w16, w18
    2d28:	eor	w9, w16, w9
    2d2c:	eor	w9, w9, w0
    2d30:	and	w16, w9, #0xff
    2d34:	ubfx	w17, w9, #8, #8
    2d38:	ldr	w13, [x13, w16, uxtw #2]
    2d3c:	ubfx	w16, w9, #16, #8
    2d40:	ldr	w14, [x14, w17, uxtw #2]
    2d44:	lsr	w9, w9, #24
    2d48:	ldr	w15, [x15, w16, uxtw #2]
    2d4c:	ldr	w9, [x8, w9, uxtw #2]
    2d50:	eor	w13, w14, w13
    2d54:	eor	w13, w13, w15
    2d58:	eor	w9, w13, w9
    2d5c:	b.hi	2bb4 <crc32_z@@ZLIB_1.2.9+0x84>  // b.pmore
    2d60:	sub	x2, x10, x12
    2d64:	mov	x1, x11
    2d68:	subs	x10, x2, #0x4
    2d6c:	b.cc	2b78 <crc32_z@@ZLIB_1.2.9+0x48>  // b.lo, b.ul, b.last
    2d70:	lsr	x11, x10, #2
    2d74:	mov	x12, x1
    2d78:	ldr	w13, [x12], #4
    2d7c:	sub	x2, x2, #0x4
    2d80:	cmp	x2, #0x3
    2d84:	eor	w9, w13, w9
    2d88:	and	w13, w9, #0xff
    2d8c:	ubfx	w14, w9, #8, #8
    2d90:	add	x13, x8, w13, uxtw #2
    2d94:	add	x14, x8, w14, uxtw #2
    2d98:	ldr	w13, [x13, #3072]
    2d9c:	ldr	w14, [x14, #2048]
    2da0:	eor	w13, w14, w13
    2da4:	ubfx	w14, w9, #16, #8
    2da8:	add	x14, x8, w14, uxtw #2
    2dac:	ldr	w14, [x14, #1024]
    2db0:	lsr	w9, w9, #24
    2db4:	ldr	w9, [x8, w9, uxtw #2]
    2db8:	eor	w13, w13, w14
    2dbc:	eor	w9, w13, w9
    2dc0:	b.hi	2d78 <crc32_z@@ZLIB_1.2.9+0x248>  // b.pmore
    2dc4:	add	x11, x1, x11, lsl #2
    2dc8:	add	x1, x11, #0x4
    2dcc:	and	x2, x10, #0x3
    2dd0:	cbnz	x2, 2b7c <crc32_z@@ZLIB_1.2.9+0x4c>
    2dd4:	b	2b98 <crc32_z@@ZLIB_1.2.9+0x68>

0000000000002dd8 <crc32@@Base>:
    2dd8:	mov	w2, w2
    2ddc:	b	2320 <crc32_z@plt>

0000000000002de0 <crc32_combine@@ZLIB_1.2.2>:
    2de0:	b	2de4 <crc32_combine@@ZLIB_1.2.2+0x4>
    2de4:	str	x29, [sp, #-16]!
    2de8:	sub	sp, sp, #0x200
    2dec:	cmp	x2, #0x1
    2df0:	b.lt	3070 <crc32_combine@@ZLIB_1.2.2+0x290>  // b.tstop
    2df4:	adrp	x9, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2df8:	adrp	x10, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2dfc:	ldr	q0, [x9, #1344]
    2e00:	ldr	q1, [x10, #1360]
    2e04:	adrp	x11, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e08:	adrp	x9, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e0c:	ldr	q2, [x11, #1376]
    2e10:	adrp	x11, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e14:	ldr	q3, [x9, #1392]
    2e18:	adrp	x9, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e1c:	ldr	q5, [x11, #1424]
    2e20:	adrp	x11, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e24:	ldr	q6, [x9, #1440]
    2e28:	adrp	x9, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e2c:	adrp	x10, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e30:	ldr	q16, [x11, #1472]
    2e34:	stp	q0, q1, [sp]
    2e38:	ldr	q0, [x9, #1488]
    2e3c:	ldr	q4, [x10, #1408]
    2e40:	adrp	x10, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e44:	ldr	q7, [x10, #1456]
    2e48:	adrp	x10, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e4c:	adrp	x11, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e50:	adrp	x9, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e54:	ldr	q1, [x10, #1504]
    2e58:	adrp	x10, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e5c:	stp	q2, q3, [sp, #32]
    2e60:	ldr	q2, [x11, #1520]
    2e64:	ldr	q3, [x9, #1536]
    2e68:	stp	q16, q0, [sp, #128]
    2e6c:	ldr	q0, [x10, #1552]
    2e70:	adrp	x11, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e74:	adrp	x9, 10000 <gzvprintf@@ZLIB_1.2.7.1+0x498>
    2e78:	stp	q1, q2, [sp, #160]
    2e7c:	ldr	q1, [x11, #1568]
    2e80:	stp	q3, q0, [sp, #192]
    2e84:	ldr	q0, [x9, #1584]
    2e88:	mov	w11, #0x8320                	// #33568
    2e8c:	mov	x8, xzr
    2e90:	movk	w11, #0xedb8, lsl #16
    2e94:	add	x9, sp, #0x100
    2e98:	mov	x10, sp
    2e9c:	stp	q4, q5, [sp, #64]
    2ea0:	stp	q6, q7, [sp, #96]
    2ea4:	stp	q1, q0, [sp, #224]
    2ea8:	mov	x12, xzr
    2eac:	cbz	x11, 2ed4 <crc32_combine@@ZLIB_1.2.2+0xf4>
    2eb0:	mov	x13, sp
    2eb4:	b	2ec4 <crc32_combine@@ZLIB_1.2.2+0xe4>
    2eb8:	lsr	x11, x11, #1
    2ebc:	add	x13, x13, #0x8
    2ec0:	cbz	x11, 2ed4 <crc32_combine@@ZLIB_1.2.2+0xf4>
    2ec4:	tbz	w11, #0, 2eb8 <crc32_combine@@ZLIB_1.2.2+0xd8>
    2ec8:	ldr	x14, [x13]
    2ecc:	eor	x12, x14, x12
    2ed0:	b	2eb8 <crc32_combine@@ZLIB_1.2.2+0xd8>
    2ed4:	str	x12, [x9, x8, lsl #3]
    2ed8:	add	x8, x8, #0x1
    2edc:	cmp	x8, #0x20
    2ee0:	b.eq	2ef4 <crc32_combine@@ZLIB_1.2.2+0x114>  // b.none
    2ee4:	ldr	x11, [x10, x8, lsl #3]
    2ee8:	mov	x12, xzr
    2eec:	cbnz	x11, 2eb0 <crc32_combine@@ZLIB_1.2.2+0xd0>
    2ef0:	b	2ed4 <crc32_combine@@ZLIB_1.2.2+0xf4>
    2ef4:	mov	x8, xzr
    2ef8:	add	x9, sp, #0x100
    2efc:	mov	x10, sp
    2f00:	b	2f18 <crc32_combine@@ZLIB_1.2.2+0x138>
    2f04:	mov	x11, xzr
    2f08:	str	x11, [x10, x8, lsl #3]
    2f0c:	add	x8, x8, #0x1
    2f10:	cmp	x8, #0x20
    2f14:	b.eq	2f48 <crc32_combine@@ZLIB_1.2.2+0x168>  // b.none
    2f18:	ldr	x12, [x9, x8, lsl #3]
    2f1c:	cbz	x12, 2f04 <crc32_combine@@ZLIB_1.2.2+0x124>
    2f20:	mov	x11, xzr
    2f24:	add	x13, sp, #0x100
    2f28:	b	2f38 <crc32_combine@@ZLIB_1.2.2+0x158>
    2f2c:	lsr	x12, x12, #1
    2f30:	add	x13, x13, #0x8
    2f34:	cbz	x12, 2f08 <crc32_combine@@ZLIB_1.2.2+0x128>
    2f38:	tbz	w12, #0, 2f2c <crc32_combine@@ZLIB_1.2.2+0x14c>
    2f3c:	ldr	x14, [x13]
    2f40:	eor	x11, x14, x11
    2f44:	b	2f2c <crc32_combine@@ZLIB_1.2.2+0x14c>
    2f48:	mov	x8, sp
    2f4c:	add	x9, sp, #0x100
    2f50:	b	2f60 <crc32_combine@@ZLIB_1.2.2+0x180>
    2f54:	mov	x0, x10
    2f58:	asr	x2, x2, #2
    2f5c:	cbz	x2, 306c <crc32_combine@@ZLIB_1.2.2+0x28c>
    2f60:	mov	x10, xzr
    2f64:	b	2f7c <crc32_combine@@ZLIB_1.2.2+0x19c>
    2f68:	mov	x11, xzr
    2f6c:	str	x11, [x9, x10, lsl #3]
    2f70:	add	x10, x10, #0x1
    2f74:	cmp	x10, #0x20
    2f78:	b.eq	2fac <crc32_combine@@ZLIB_1.2.2+0x1cc>  // b.none
    2f7c:	ldr	x12, [x8, x10, lsl #3]
    2f80:	cbz	x12, 2f68 <crc32_combine@@ZLIB_1.2.2+0x188>
    2f84:	mov	x11, xzr
    2f88:	mov	x13, sp
    2f8c:	b	2f9c <crc32_combine@@ZLIB_1.2.2+0x1bc>
    2f90:	lsr	x12, x12, #1
    2f94:	add	x13, x13, #0x8
    2f98:	cbz	x12, 2f6c <crc32_combine@@ZLIB_1.2.2+0x18c>
    2f9c:	tbz	w12, #0, 2f90 <crc32_combine@@ZLIB_1.2.2+0x1b0>
    2fa0:	ldr	x14, [x13]
    2fa4:	eor	x11, x14, x11
    2fa8:	b	2f90 <crc32_combine@@ZLIB_1.2.2+0x1b0>
    2fac:	tbnz	w2, #0, 2fb8 <crc32_combine@@ZLIB_1.2.2+0x1d8>
    2fb0:	mov	x10, x0
    2fb4:	b	2fc0 <crc32_combine@@ZLIB_1.2.2+0x1e0>
    2fb8:	mov	x10, xzr
    2fbc:	cbnz	x0, 3044 <crc32_combine@@ZLIB_1.2.2+0x264>
    2fc0:	cmp	x2, #0x2
    2fc4:	b.cc	3068 <crc32_combine@@ZLIB_1.2.2+0x288>  // b.lo, b.ul, b.last
    2fc8:	mov	x11, xzr
    2fcc:	b	2fe4 <crc32_combine@@ZLIB_1.2.2+0x204>
    2fd0:	mov	x12, xzr
    2fd4:	str	x12, [x8, x11, lsl #3]
    2fd8:	add	x11, x11, #0x1
    2fdc:	cmp	x11, #0x20
    2fe0:	b.eq	3014 <crc32_combine@@ZLIB_1.2.2+0x234>  // b.none
    2fe4:	ldr	x13, [x9, x11, lsl #3]
    2fe8:	cbz	x13, 2fd0 <crc32_combine@@ZLIB_1.2.2+0x1f0>
    2fec:	mov	x12, xzr
    2ff0:	add	x14, sp, #0x100
    2ff4:	b	3004 <crc32_combine@@ZLIB_1.2.2+0x224>
    2ff8:	lsr	x13, x13, #1
    2ffc:	add	x14, x14, #0x8
    3000:	cbz	x13, 2fd4 <crc32_combine@@ZLIB_1.2.2+0x1f4>
    3004:	tbz	w13, #0, 2ff8 <crc32_combine@@ZLIB_1.2.2+0x218>
    3008:	ldr	x15, [x14]
    300c:	eor	x12, x15, x12
    3010:	b	2ff8 <crc32_combine@@ZLIB_1.2.2+0x218>
    3014:	tbz	w2, #1, 2f54 <crc32_combine@@ZLIB_1.2.2+0x174>
    3018:	mov	x0, xzr
    301c:	cbz	x10, 2f58 <crc32_combine@@ZLIB_1.2.2+0x178>
    3020:	mov	x11, sp
    3024:	b	3034 <crc32_combine@@ZLIB_1.2.2+0x254>
    3028:	lsr	x10, x10, #1
    302c:	add	x11, x11, #0x8
    3030:	cbz	x10, 2f58 <crc32_combine@@ZLIB_1.2.2+0x178>
    3034:	tbz	w10, #0, 3028 <crc32_combine@@ZLIB_1.2.2+0x248>
    3038:	ldr	x12, [x11]
    303c:	eor	x0, x12, x0
    3040:	b	3028 <crc32_combine@@ZLIB_1.2.2+0x248>
    3044:	add	x11, sp, #0x100
    3048:	b	3058 <crc32_combine@@ZLIB_1.2.2+0x278>
    304c:	lsr	x0, x0, #1
    3050:	add	x11, x11, #0x8
    3054:	cbz	x0, 2fc0 <crc32_combine@@ZLIB_1.2.2+0x1e0>
    3058:	tbz	w0, #0, 304c <crc32_combine@@ZLIB_1.2.2+0x26c>
    305c:	ldr	x12, [x11]
    3060:	eor	x10, x12, x10
    3064:	b	304c <crc32_combine@@ZLIB_1.2.2+0x26c>
    3068:	mov	x0, x10
    306c:	eor	x0, x0, x1
    3070:	add	sp, sp, #0x200
    3074:	ldr	x29, [sp], #16
    3078:	ret

000000000000307c <crc32_combine64@@ZLIB_1.2.3.3>:
    307c:	b	2de4 <crc32_combine@@ZLIB_1.2.2+0x4>

0000000000003080 <deflateInit_@@Base>:
    3080:	mov	w7, w3
    3084:	mov	x6, x2
    3088:	mov	w2, #0x8                   	// #8
    308c:	mov	w3, #0xf                   	// #15
    3090:	mov	w4, #0x8                   	// #8
    3094:	mov	w5, wzr
    3098:	b	2410 <deflateInit2_@plt>

000000000000309c <deflateInit2_@@Base>:
    309c:	stp	x29, x30, [sp, #-80]!
    30a0:	stp	x26, x25, [sp, #16]
    30a4:	stp	x24, x23, [sp, #32]
    30a8:	stp	x22, x21, [sp, #48]
    30ac:	stp	x20, x19, [sp, #64]
    30b0:	mov	x29, sp
    30b4:	cbz	x6, 3128 <deflateInit2_@@Base+0x8c>
    30b8:	mov	x19, x0
    30bc:	cmp	w7, #0x70
    30c0:	mov	w0, #0xfffffffa            	// #-6
    30c4:	b.ne	3394 <deflateInit2_@@Base+0x2f8>  // b.any
    30c8:	ldrb	w8, [x6]
    30cc:	cmp	w8, #0x31
    30d0:	b.ne	3394 <deflateInit2_@@Base+0x2f8>  // b.any
    30d4:	cbz	x19, 31b0 <deflateInit2_@@Base+0x114>
    30d8:	ldr	x8, [x19, #64]
    30dc:	mov	w20, w5
    30e0:	mov	w21, w4
    30e4:	str	xzr, [x19, #48]
    30e8:	cbz	x8, 3130 <deflateInit2_@@Base+0x94>
    30ec:	ldr	x9, [x19, #72]
    30f0:	cbz	x9, 3148 <deflateInit2_@@Base+0xac>
    30f4:	cmn	w1, #0x1
    30f8:	mov	w9, #0x6                   	// #6
    30fc:	csel	w23, w9, w1, eq  // eq = none
    3100:	tbnz	w3, #31, 3164 <deflateInit2_@@Base+0xc8>
    3104:	sub	w9, w3, #0x10
    3108:	cmp	w3, #0xf
    310c:	mov	w10, #0x1                   	// #1
    3110:	csel	w9, w9, w3, gt
    3114:	cinc	w25, w10, gt
    3118:	cmp	w20, #0x4
    311c:	mov	w0, #0xfffffffe            	// #-2
    3120:	b.ls	3178 <deflateInit2_@@Base+0xdc>  // b.plast
    3124:	b	3394 <deflateInit2_@@Base+0x2f8>
    3128:	mov	w0, #0xfffffffa            	// #-6
    312c:	b	3394 <deflateInit2_@@Base+0x2f8>
    3130:	adrp	x8, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    3134:	add	x8, x8, #0xb3c
    3138:	str	x8, [x19, #64]
    313c:	str	xzr, [x19, #80]
    3140:	ldr	x9, [x19, #72]
    3144:	cbnz	x9, 30f4 <deflateInit2_@@Base+0x58>
    3148:	adrp	x9, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    314c:	add	x9, x9, #0xb44
    3150:	str	x9, [x19, #72]
    3154:	cmn	w1, #0x1
    3158:	mov	w9, #0x6                   	// #6
    315c:	csel	w23, w9, w1, eq  // eq = none
    3160:	tbz	w3, #31, 3104 <deflateInit2_@@Base+0x68>
    3164:	mov	w25, wzr
    3168:	neg	w9, w3
    316c:	cmp	w20, #0x4
    3170:	mov	w0, #0xfffffffe            	// #-2
    3174:	b.hi	3394 <deflateInit2_@@Base+0x2f8>  // b.pmore
    3178:	cmp	w23, #0x9
    317c:	b.hi	3394 <deflateInit2_@@Base+0x2f8>  // b.pmore
    3180:	cmp	w2, #0x8
    3184:	b.ne	3394 <deflateInit2_@@Base+0x2f8>  // b.any
    3188:	sub	w10, w21, #0x1
    318c:	cmp	w10, #0x8
    3190:	b.hi	3394 <deflateInit2_@@Base+0x2f8>  // b.pmore
    3194:	and	w10, w9, #0xfffffff8
    3198:	cmp	w10, #0x8
    319c:	b.ne	3394 <deflateInit2_@@Base+0x2f8>  // b.any
    31a0:	cmp	w9, #0x8
    31a4:	b.ne	31b8 <deflateInit2_@@Base+0x11c>  // b.any
    31a8:	cmp	w25, #0x1
    31ac:	b.eq	31b8 <deflateInit2_@@Base+0x11c>  // b.none
    31b0:	mov	w0, #0xfffffffe            	// #-2
    31b4:	b	3394 <deflateInit2_@@Base+0x2f8>
    31b8:	ldr	x0, [x19, #80]
    31bc:	cmp	w9, #0x8
    31c0:	mov	w10, #0x9                   	// #9
    31c4:	mov	w1, #0x1                   	// #1
    31c8:	mov	w2, #0x1740                	// #5952
    31cc:	csel	w26, w10, w9, eq  // eq = none
    31d0:	mov	w24, #0x1                   	// #1
    31d4:	blr	x8
    31d8:	cbz	x0, 3390 <deflateInit2_@@Base+0x2f4>
    31dc:	mov	w8, #0x2a                  	// #42
    31e0:	lsl	w1, w24, w26
    31e4:	str	x0, [x19, #56]
    31e8:	str	w8, [x0, #8]
    31ec:	sub	w8, w1, #0x1
    31f0:	add	w10, w21, #0x9
    31f4:	stp	w26, w8, [x0, #84]
    31f8:	mov	w8, #0xaaab                	// #43691
    31fc:	add	w9, w21, #0x7
    3200:	movk	w8, #0xaaaa, lsl #16
    3204:	and	w10, w10, #0xff
    3208:	umull	x8, w10, w8
    320c:	lsl	w10, w24, w9
    3210:	stp	w10, w9, [x0, #132]
    3214:	sub	w9, w10, #0x1
    3218:	lsr	x8, x8, #33
    321c:	str	x19, [x0]
    3220:	str	w25, [x0, #48]
    3224:	str	xzr, [x0, #56]
    3228:	str	w1, [x0, #80]
    322c:	stp	w9, w8, [x0, #140]
    3230:	mov	x22, x0
    3234:	ldr	x8, [x19, #64]
    3238:	ldr	x0, [x19, #80]
    323c:	mov	w2, #0x2                   	// #2
    3240:	blr	x8
    3244:	str	x0, [x22, #96]
    3248:	ldr	x8, [x19, #64]
    324c:	ldr	x0, [x19, #80]
    3250:	ldr	w1, [x22, #80]
    3254:	mov	w2, #0x2                   	// #2
    3258:	blr	x8
    325c:	str	x0, [x22, #112]
    3260:	ldr	x8, [x19, #64]
    3264:	ldr	x0, [x19, #80]
    3268:	ldr	w1, [x22, #132]
    326c:	mov	w2, #0x2                   	// #2
    3270:	blr	x8
    3274:	add	w8, w21, #0x6
    3278:	lsl	w1, w24, w8
    327c:	str	x0, [x22, #120]
    3280:	str	xzr, [x22, #5944]
    3284:	str	w1, [x22, #5896]
    3288:	ldr	x8, [x19, #64]
    328c:	ldr	x0, [x19, #80]
    3290:	mov	w2, #0x4                   	// #4
    3294:	blr	x8
    3298:	ldr	w8, [x22, #5896]
    329c:	ldr	x9, [x22, #96]
    32a0:	lsl	x10, x8, #2
    32a4:	stp	x0, x10, [x22, #16]
    32a8:	cbz	x9, 3370 <deflateInit2_@@Base+0x2d4>
    32ac:	ldr	x9, [x22, #112]
    32b0:	cbz	x9, 3370 <deflateInit2_@@Base+0x2d4>
    32b4:	cbz	x0, 3370 <deflateInit2_@@Base+0x2d4>
    32b8:	ldr	x9, [x22, #120]
    32bc:	cbz	x9, 3370 <deflateInit2_@@Base+0x2d4>
    32c0:	and	w9, w8, #0xfffffffe
    32c4:	add	x8, x8, x8, lsl #1
    32c8:	mov	w10, #0x8                   	// #8
    32cc:	add	x9, x0, x9
    32d0:	add	x8, x0, x8
    32d4:	mov	x0, x19
    32d8:	stp	w23, w20, [x22, #196]
    32dc:	str	x9, [x22, #5904]
    32e0:	str	x8, [x22, #5888]
    32e4:	strb	w10, [x22, #72]
    32e8:	bl	2540 <deflateResetKeep@plt>
    32ec:	cbnz	w0, 3394 <deflateInit2_@@Base+0x2f8>
    32f0:	ldr	x19, [x19, #56]
    32f4:	mov	w1, wzr
    32f8:	ldr	w9, [x19, #132]
    32fc:	ldr	w8, [x19, #80]
    3300:	ldr	x0, [x19, #120]
    3304:	sub	w9, w9, #0x1
    3308:	lsl	x8, x8, #1
    330c:	lsl	x2, x9, #1
    3310:	str	x8, [x19, #104]
    3314:	strh	wzr, [x0, x2]
    3318:	bl	23f0 <memset@plt>
    331c:	ldrsw	x8, [x19, #196]
    3320:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    3324:	add	x9, x9, #0xc68
    3328:	adrp	x10, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    332c:	ldr	d0, [x10, #1600]
    3330:	mov	w10, #0x2                   	// #2
    3334:	add	x8, x9, x8, lsl #4
    3338:	str	w10, [x19, #160]
    333c:	ldrh	w9, [x8]
    3340:	ldrh	w10, [x8, #4]
    3344:	mov	w0, wzr
    3348:	str	xzr, [x19, #152]
    334c:	str	wzr, [x19, #5932]
    3350:	stp	w9, w10, [x19, #204]
    3354:	ldrh	w9, [x8, #2]
    3358:	ldrh	w8, [x8, #6]
    335c:	str	xzr, [x19, #168]
    3360:	stur	d0, [x19, #180]
    3364:	str	wzr, [x19, #128]
    3368:	stp	w8, w9, [x19, #188]
    336c:	b	3394 <deflateInit2_@@Base+0x2f8>
    3370:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    3374:	ldr	x8, [x8, #4056]
    3378:	mov	w9, #0x29a                 	// #666
    337c:	mov	x0, x19
    3380:	str	w9, [x22, #8]
    3384:	ldr	x8, [x8, #48]
    3388:	str	x8, [x19, #48]
    338c:	bl	24d0 <deflateEnd@plt>
    3390:	mov	w0, #0xfffffffc            	// #-4
    3394:	ldp	x20, x19, [sp, #64]
    3398:	ldp	x22, x21, [sp, #48]
    339c:	ldp	x24, x23, [sp, #32]
    33a0:	ldp	x26, x25, [sp, #16]
    33a4:	ldp	x29, x30, [sp], #80
    33a8:	ret

00000000000033ac <deflateEnd@@Base>:
    33ac:	stp	x29, x30, [sp, #-32]!
    33b0:	stp	x20, x19, [sp, #16]
    33b4:	mov	x29, sp
    33b8:	cbz	x0, 33e4 <deflateEnd@@Base+0x38>
    33bc:	ldr	x8, [x0, #64]
    33c0:	mov	x19, x0
    33c4:	cbz	x8, 33e4 <deflateEnd@@Base+0x38>
    33c8:	ldr	x9, [x19, #72]
    33cc:	cbz	x9, 33e4 <deflateEnd@@Base+0x38>
    33d0:	ldr	x1, [x19, #56]
    33d4:	cbz	x1, 33e4 <deflateEnd@@Base+0x38>
    33d8:	ldr	x8, [x1]
    33dc:	cmp	x8, x19
    33e0:	b.eq	33f4 <deflateEnd@@Base+0x48>  // b.none
    33e4:	mov	w0, #0xfffffffe            	// #-2
    33e8:	ldp	x20, x19, [sp, #16]
    33ec:	ldp	x29, x30, [sp], #32
    33f0:	ret
    33f4:	ldr	w20, [x1, #8]
    33f8:	sub	w8, w20, #0x39
    33fc:	cmp	w8, #0x38
    3400:	b.hi	34a8 <deflateEnd@@Base+0xfc>  // b.pmore
    3404:	mov	w10, #0x1                   	// #1
    3408:	lsl	x8, x10, x8
    340c:	mov	x10, #0x1001                	// #4097
    3410:	movk	x10, #0x1, lsl #16
    3414:	movk	x10, #0x4004, lsl #32
    3418:	movk	x10, #0x100, lsl #48
    341c:	tst	x8, x10
    3420:	b.eq	34a8 <deflateEnd@@Base+0xfc>  // b.none
    3424:	ldr	x8, [x1, #16]
    3428:	cbz	x8, 343c <deflateEnd@@Base+0x90>
    342c:	ldr	x0, [x19, #80]
    3430:	mov	x1, x8
    3434:	blr	x9
    3438:	ldr	x1, [x19, #56]
    343c:	ldr	x8, [x1, #120]
    3440:	cbz	x8, 3454 <deflateEnd@@Base+0xa8>
    3444:	ldp	x9, x0, [x19, #72]
    3448:	mov	x1, x8
    344c:	blr	x9
    3450:	ldr	x1, [x19, #56]
    3454:	ldr	x8, [x1, #112]
    3458:	cbz	x8, 346c <deflateEnd@@Base+0xc0>
    345c:	ldp	x9, x0, [x19, #72]
    3460:	mov	x1, x8
    3464:	blr	x9
    3468:	ldr	x1, [x19, #56]
    346c:	ldr	x8, [x1, #96]
    3470:	cbz	x8, 3484 <deflateEnd@@Base+0xd8>
    3474:	ldp	x9, x0, [x19, #72]
    3478:	mov	x1, x8
    347c:	blr	x9
    3480:	ldr	x1, [x19, #56]
    3484:	ldp	x8, x0, [x19, #72]
    3488:	blr	x8
    348c:	cmp	w20, #0x71
    3490:	mov	w8, #0xfffffffd            	// #-3
    3494:	csel	w0, w8, wzr, eq  // eq = none
    3498:	str	xzr, [x19, #56]
    349c:	ldp	x20, x19, [sp, #16]
    34a0:	ldp	x29, x30, [sp], #32
    34a4:	ret
    34a8:	cmp	w20, #0x29a
    34ac:	b.eq	3424 <deflateEnd@@Base+0x78>  // b.none
    34b0:	cmp	w20, #0x2a
    34b4:	b.ne	33e4 <deflateEnd@@Base+0x38>  // b.any
    34b8:	b	3424 <deflateEnd@@Base+0x78>

00000000000034bc <deflateReset@@Base>:
    34bc:	stp	x29, x30, [sp, #-32]!
    34c0:	stp	x20, x19, [sp, #16]
    34c4:	mov	x29, sp
    34c8:	mov	x20, x0
    34cc:	bl	2540 <deflateResetKeep@plt>
    34d0:	mov	w19, w0
    34d4:	cbz	w0, 34e8 <deflateReset@@Base+0x2c>
    34d8:	mov	w0, w19
    34dc:	ldp	x20, x19, [sp, #16]
    34e0:	ldp	x29, x30, [sp], #32
    34e4:	ret
    34e8:	ldr	x20, [x20, #56]
    34ec:	mov	w1, wzr
    34f0:	ldr	w9, [x20, #132]
    34f4:	ldr	w8, [x20, #80]
    34f8:	ldr	x0, [x20, #120]
    34fc:	sub	w9, w9, #0x1
    3500:	lsl	x8, x8, #1
    3504:	lsl	x2, x9, #1
    3508:	str	x8, [x20, #104]
    350c:	strh	wzr, [x0, x2]
    3510:	bl	23f0 <memset@plt>
    3514:	ldrsw	x8, [x20, #196]
    3518:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    351c:	add	x9, x9, #0xc68
    3520:	adrp	x10, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    3524:	ldr	d0, [x10, #1600]
    3528:	mov	w10, #0x2                   	// #2
    352c:	add	x8, x9, x8, lsl #4
    3530:	str	w10, [x20, #160]
    3534:	ldrh	w9, [x8]
    3538:	ldrh	w10, [x8, #4]
    353c:	str	xzr, [x20, #152]
    3540:	str	wzr, [x20, #5932]
    3544:	str	xzr, [x20, #168]
    3548:	stp	w9, w10, [x20, #204]
    354c:	ldrh	w9, [x8, #2]
    3550:	ldrh	w8, [x8, #6]
    3554:	stur	d0, [x20, #180]
    3558:	str	wzr, [x20, #128]
    355c:	stp	w8, w9, [x20, #188]
    3560:	mov	w0, w19
    3564:	ldp	x20, x19, [sp, #16]
    3568:	ldp	x29, x30, [sp], #32
    356c:	ret

0000000000003570 <deflateSetDictionary@@Base>:
    3570:	stp	x29, x30, [sp, #-80]!
    3574:	str	x25, [sp, #16]
    3578:	stp	x24, x23, [sp, #32]
    357c:	stp	x22, x21, [sp, #48]
    3580:	stp	x20, x19, [sp, #64]
    3584:	mov	x29, sp
    3588:	cbz	x0, 35b4 <deflateSetDictionary@@Base+0x44>
    358c:	ldr	x8, [x0, #64]
    3590:	mov	x19, x0
    3594:	cbz	x8, 35b4 <deflateSetDictionary@@Base+0x44>
    3598:	ldr	x8, [x19, #72]
    359c:	cbz	x8, 35b4 <deflateSetDictionary@@Base+0x44>
    35a0:	ldr	x20, [x19, #56]
    35a4:	cbz	x20, 35b4 <deflateSetDictionary@@Base+0x44>
    35a8:	ldr	x8, [x20]
    35ac:	cmp	x8, x19
    35b0:	b.eq	35d0 <deflateSetDictionary@@Base+0x60>  // b.none
    35b4:	mov	w0, #0xfffffffe            	// #-2
    35b8:	ldp	x20, x19, [sp, #64]
    35bc:	ldp	x22, x21, [sp, #48]
    35c0:	ldp	x24, x23, [sp, #32]
    35c4:	ldr	x25, [sp, #16]
    35c8:	ldp	x29, x30, [sp], #80
    35cc:	ret
    35d0:	ldr	w8, [x20, #8]
    35d4:	mov	w22, w2
    35d8:	mov	x21, x1
    35dc:	sub	w9, w8, #0x39
    35e0:	cmp	w9, #0x38
    35e4:	b.hi	3770 <deflateSetDictionary@@Base+0x200>  // b.pmore
    35e8:	mov	w10, #0x1                   	// #1
    35ec:	lsl	x9, x10, x9
    35f0:	mov	x10, #0x1001                	// #4097
    35f4:	movk	x10, #0x1, lsl #16
    35f8:	movk	x10, #0x4004, lsl #32
    35fc:	movk	x10, #0x100, lsl #48
    3600:	tst	x9, x10
    3604:	b.eq	3770 <deflateSetDictionary@@Base+0x200>  // b.none
    3608:	cbz	x21, 35b4 <deflateSetDictionary@@Base+0x44>
    360c:	ldr	w23, [x20, #48]
    3610:	cmp	w23, #0x2
    3614:	b.eq	35b4 <deflateSetDictionary@@Base+0x44>  // b.none
    3618:	cmp	w8, #0x2a
    361c:	b.eq	3628 <deflateSetDictionary@@Base+0xb8>  // b.none
    3620:	cmp	w23, #0x1
    3624:	b.eq	35b4 <deflateSetDictionary@@Base+0x44>  // b.none
    3628:	ldr	w8, [x20, #180]
    362c:	cbnz	w8, 35b4 <deflateSetDictionary@@Base+0x44>
    3630:	cmp	w23, #0x1
    3634:	b.ne	364c <deflateSetDictionary@@Base+0xdc>  // b.any
    3638:	ldr	x0, [x19, #96]
    363c:	mov	x1, x21
    3640:	mov	w2, w22
    3644:	bl	24a0 <adler32@plt>
    3648:	str	x0, [x19, #96]
    364c:	ldr	w8, [x20, #80]
    3650:	str	wzr, [x20, #48]
    3654:	cmp	w8, w22
    3658:	b.hi	3698 <deflateSetDictionary@@Base+0x128>  // b.pmore
    365c:	cbnz	w23, 368c <deflateSetDictionary@@Base+0x11c>
    3660:	ldr	w8, [x20, #132]
    3664:	ldr	x0, [x20, #120]
    3668:	mov	w1, wzr
    366c:	sub	w8, w8, #0x1
    3670:	lsl	x2, x8, #1
    3674:	strh	wzr, [x0, x2]
    3678:	bl	23f0 <memset@plt>
    367c:	ldr	w8, [x20, #80]
    3680:	str	wzr, [x20, #172]
    3684:	str	xzr, [x20, #152]
    3688:	str	wzr, [x20, #5932]
    368c:	sub	w9, w22, w8
    3690:	add	x21, x21, x9
    3694:	mov	w22, w8
    3698:	ldr	w24, [x19, #8]
    369c:	ldr	x25, [x19]
    36a0:	mov	x0, x20
    36a4:	str	w22, [x19, #8]
    36a8:	str	x21, [x19]
    36ac:	bl	3784 <deflateSetDictionary@@Base+0x214>
    36b0:	ldr	w9, [x20, #180]
    36b4:	ldr	w8, [x20, #172]
    36b8:	cmp	w9, #0x3
    36bc:	b.cc	3738 <deflateSetDictionary@@Base+0x1c8>  // b.lo, b.ul, b.last
    36c0:	mov	w21, #0x2                   	// #2
    36c4:	ldr	x10, [x20, #96]
    36c8:	ldp	w12, w11, [x20, #140]
    36cc:	ldp	x14, x13, [x20, #112]
    36d0:	ldr	w15, [x20, #88]
    36d4:	ldr	w16, [x20, #128]
    36d8:	sub	w9, w9, #0x2
    36dc:	add	w17, w8, #0x2
    36e0:	ldrb	w17, [x10, w17, uxtw]
    36e4:	lsl	w16, w16, w11
    36e8:	mov	w0, w8
    36ec:	and	x0, x15, x0
    36f0:	eor	w16, w16, w17
    36f4:	and	x16, x16, x12
    36f8:	str	w16, [x20, #128]
    36fc:	lsl	x17, x16, #1
    3700:	ldrh	w18, [x13, x17]
    3704:	subs	w9, w9, #0x1
    3708:	strh	w18, [x14, x0, lsl #1]
    370c:	strh	w8, [x13, x17]
    3710:	add	w8, w8, #0x1
    3714:	b.ne	36dc <deflateSetDictionary@@Base+0x16c>  // b.any
    3718:	mov	x0, x20
    371c:	str	w8, [x20, #172]
    3720:	str	w21, [x20, #180]
    3724:	bl	3784 <deflateSetDictionary@@Base+0x214>
    3728:	ldr	w9, [x20, #180]
    372c:	ldr	w8, [x20, #172]
    3730:	cmp	w9, #0x2
    3734:	b.hi	36c4 <deflateSetDictionary@@Base+0x154>  // b.pmore
    3738:	add	w8, w8, w9
    373c:	str	w9, [x20, #5932]
    3740:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    3744:	ldr	d0, [x9, #1600]
    3748:	mov	w0, wzr
    374c:	mov	w10, #0x2                   	// #2
    3750:	str	x8, [x20, #152]
    3754:	str	w10, [x20, #160]
    3758:	stp	wzr, w8, [x20, #168]
    375c:	stur	d0, [x20, #180]
    3760:	str	x25, [x19]
    3764:	str	w24, [x19, #8]
    3768:	str	w23, [x20, #48]
    376c:	b	35b8 <deflateSetDictionary@@Base+0x48>
    3770:	cmp	w8, #0x29a
    3774:	b.eq	3608 <deflateSetDictionary@@Base+0x98>  // b.none
    3778:	cmp	w8, #0x2a
    377c:	b.ne	35b4 <deflateSetDictionary@@Base+0x44>  // b.any
    3780:	b	3608 <deflateSetDictionary@@Base+0x98>
    3784:	str	d8, [sp, #-80]!
    3788:	stp	x29, x30, [sp, #8]
    378c:	stp	x24, x23, [sp, #32]
    3790:	stp	x22, x21, [sp, #48]
    3794:	stp	x20, x19, [sp, #64]
    3798:	ldr	w23, [x0, #80]
    379c:	ldr	w8, [x0, #180]
    37a0:	mov	x19, x0
    37a4:	str	x25, [sp, #24]
    37a8:	sub	w24, w23, #0x106
    37ac:	dup	v8.2s, w23
    37b0:	mov	w10, w23
    37b4:	mov	x29, sp
    37b8:	ldr	w11, [x19, #104]
    37bc:	ldr	w9, [x19, #172]
    37c0:	add	w10, w24, w10
    37c4:	sub	w8, w11, w8
    37c8:	cmp	w9, w10
    37cc:	sub	w20, w8, w9
    37d0:	b.cc	3910 <deflateSetDictionary@@Base+0x3a0>  // b.lo, b.ul, b.last
    37d4:	ldr	x0, [x19, #96]
    37d8:	sub	w2, w23, w20
    37dc:	add	x1, x0, x23
    37e0:	bl	2310 <memcpy@plt>
    37e4:	ldur	d0, [x19, #172]
    37e8:	ldr	x10, [x19, #152]
    37ec:	ldr	w9, [x19, #132]
    37f0:	ldr	x11, [x19, #120]
    37f4:	ldr	w8, [x19, #80]
    37f8:	sub	v0.2s, v0.2s, v8.2s
    37fc:	sub	x12, x10, x23
    3800:	subs	w10, w9, #0x1
    3804:	add	x13, x11, x9, lsl #1
    3808:	stur	d0, [x19, #172]
    380c:	str	x12, [x19, #152]
    3810:	b.eq	3864 <deflateSetDictionary@@Base+0x2f4>  // b.none
    3814:	add	x11, x10, #0x1
    3818:	and	x12, x11, #0x1fffffffe
    381c:	sub	x10, x13, x12, lsl #1
    3820:	sub	w9, w9, w12
    3824:	sub	x13, x13, #0x2
    3828:	mov	x14, x12
    382c:	ldrh	w15, [x13]
    3830:	ldurh	w16, [x13, #-2]
    3834:	subs	w15, w15, w8
    3838:	csel	w15, wzr, w15, cc  // cc = lo, ul, last
    383c:	subs	w16, w16, w8
    3840:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    3844:	strh	w15, [x13]
    3848:	subs	x14, x14, #0x2
    384c:	sturh	w16, [x13, #-2]
    3850:	sub	x13, x13, #0x4
    3854:	b.ne	382c <deflateSetDictionary@@Base+0x2bc>  // b.any
    3858:	cmp	x11, x12
    385c:	b.ne	3868 <deflateSetDictionary@@Base+0x2f8>  // b.any
    3860:	b	3884 <deflateSetDictionary@@Base+0x314>
    3864:	mov	x10, x13
    3868:	sub	x10, x10, #0x2
    386c:	ldrh	w11, [x10]
    3870:	subs	w11, w11, w8
    3874:	csel	w11, wzr, w11, cc  // cc = lo, ul, last
    3878:	subs	w9, w9, #0x1
    387c:	strh	w11, [x10], #-2
    3880:	b.ne	386c <deflateSetDictionary@@Base+0x2fc>  // b.any
    3884:	ldr	x10, [x19, #112]
    3888:	subs	w9, w8, #0x1
    388c:	add	x13, x10, x8, lsl #1
    3890:	b.eq	38e4 <deflateSetDictionary@@Base+0x374>  // b.none
    3894:	add	x11, x9, #0x1
    3898:	and	x12, x11, #0x1fffffffe
    389c:	sub	x10, x13, x12, lsl #1
    38a0:	sub	w9, w8, w12
    38a4:	sub	x13, x13, #0x2
    38a8:	mov	x14, x12
    38ac:	ldrh	w15, [x13]
    38b0:	ldurh	w16, [x13, #-2]
    38b4:	subs	w15, w15, w8
    38b8:	csel	w15, wzr, w15, cc  // cc = lo, ul, last
    38bc:	subs	w16, w16, w8
    38c0:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    38c4:	strh	w15, [x13]
    38c8:	subs	x14, x14, #0x2
    38cc:	sturh	w16, [x13, #-2]
    38d0:	sub	x13, x13, #0x4
    38d4:	b.ne	38ac <deflateSetDictionary@@Base+0x33c>  // b.any
    38d8:	cmp	x11, x12
    38dc:	b.ne	38ec <deflateSetDictionary@@Base+0x37c>  // b.any
    38e0:	b	3908 <deflateSetDictionary@@Base+0x398>
    38e4:	mov	x10, x13
    38e8:	mov	w9, w8
    38ec:	sub	x10, x10, #0x2
    38f0:	ldrh	w11, [x10]
    38f4:	subs	w11, w11, w8
    38f8:	csel	w11, wzr, w11, cc  // cc = lo, ul, last
    38fc:	subs	w9, w9, #0x1
    3900:	strh	w11, [x10], #-2
    3904:	b.ne	38f0 <deflateSetDictionary@@Base+0x380>  // b.any
    3908:	add	w20, w20, w23
    390c:	fmov	w9, s0
    3910:	ldr	x25, [x19]
    3914:	ldr	w10, [x25, #8]
    3918:	cbz	w10, 3a68 <deflateSetDictionary@@Base+0x4f8>
    391c:	ldr	w8, [x19, #180]
    3920:	cmp	w10, w20
    3924:	csel	w20, w20, w10, hi  // hi = pmore
    3928:	cbz	w20, 39b0 <deflateSetDictionary@@Base+0x440>
    392c:	ldr	x11, [x19, #96]
    3930:	ldr	x1, [x25]
    3934:	mov	w21, w20
    3938:	sub	w10, w10, w20
    393c:	add	x9, x11, w9, uxtw
    3940:	add	x22, x9, x8
    3944:	mov	x0, x22
    3948:	mov	x2, x21
    394c:	str	w10, [x25, #8]
    3950:	bl	2310 <memcpy@plt>
    3954:	ldr	x8, [x25, #56]
    3958:	ldr	w8, [x8, #48]
    395c:	cmp	w8, #0x2
    3960:	b.eq	3980 <deflateSetDictionary@@Base+0x410>  // b.none
    3964:	cmp	w8, #0x1
    3968:	b.ne	3994 <deflateSetDictionary@@Base+0x424>  // b.any
    396c:	ldr	x0, [x25, #96]
    3970:	mov	x1, x22
    3974:	mov	w2, w20
    3978:	bl	24a0 <adler32@plt>
    397c:	b	3990 <deflateSetDictionary@@Base+0x420>
    3980:	ldr	x0, [x25, #96]
    3984:	mov	x1, x22
    3988:	mov	w2, w20
    398c:	bl	2390 <crc32@plt>
    3990:	str	x0, [x25, #96]
    3994:	ldr	x8, [x25]
    3998:	ldr	x9, [x25, #16]
    399c:	add	x8, x8, x21
    39a0:	add	x9, x9, x21
    39a4:	str	x8, [x25]
    39a8:	str	x9, [x25, #16]
    39ac:	ldr	w8, [x19, #180]
    39b0:	ldr	w9, [x19, #5932]
    39b4:	add	w8, w8, w20
    39b8:	str	w8, [x19, #180]
    39bc:	add	w10, w9, w8
    39c0:	cmp	w10, #0x3
    39c4:	b.cc	3a4c <deflateSetDictionary@@Base+0x4dc>  // b.lo, b.ul, b.last
    39c8:	ldr	w11, [x19, #172]
    39cc:	ldr	x10, [x19, #96]
    39d0:	sub	w11, w11, w9
    39d4:	ldrb	w14, [x10, w11, uxtw]
    39d8:	add	w13, w11, #0x1
    39dc:	str	w14, [x19, #128]
    39e0:	ldrb	w15, [x10, w13, uxtw]
    39e4:	ldp	w13, w12, [x19, #140]
    39e8:	lsl	w14, w14, w12
    39ec:	eor	w14, w14, w15
    39f0:	and	w14, w14, w13
    39f4:	str	w14, [x19, #128]
    39f8:	cbz	w9, 3a4c <deflateSetDictionary@@Base+0x4dc>
    39fc:	add	w15, w11, #0x2
    3a00:	ldrb	w15, [x10, w15, uxtw]
    3a04:	lsl	w14, w14, w12
    3a08:	ldp	x17, x16, [x19, #112]
    3a0c:	ldr	w18, [x19, #88]
    3a10:	eor	w14, w14, w15
    3a14:	and	x14, x14, x13
    3a18:	str	w14, [x19, #128]
    3a1c:	lsl	x15, x14, #1
    3a20:	sub	w9, w9, #0x1
    3a24:	ldrh	w1, [x16, x15]
    3a28:	add	w0, w8, w9
    3a2c:	cmp	w0, #0x2
    3a30:	mov	w0, w11
    3a34:	and	x18, x18, x0
    3a38:	strh	w1, [x17, x18, lsl #1]
    3a3c:	strh	w11, [x16, x15]
    3a40:	add	w11, w11, #0x1
    3a44:	str	w9, [x19, #5932]
    3a48:	b.hi	39f8 <deflateSetDictionary@@Base+0x488>  // b.pmore
    3a4c:	cmp	w8, #0x105
    3a50:	b.hi	3a68 <deflateSetDictionary@@Base+0x4f8>  // b.pmore
    3a54:	ldr	x9, [x19]
    3a58:	ldr	w9, [x9, #8]
    3a5c:	cbz	w9, 3a68 <deflateSetDictionary@@Base+0x4f8>
    3a60:	ldr	w10, [x19, #80]
    3a64:	b	37b8 <deflateSetDictionary@@Base+0x248>
    3a68:	ldr	x8, [x19, #5944]
    3a6c:	ldr	x10, [x19, #104]
    3a70:	subs	x9, x10, x8
    3a74:	b.ls	3aec <deflateSetDictionary@@Base+0x57c>  // b.plast
    3a78:	ldr	w11, [x19, #172]
    3a7c:	ldr	w12, [x19, #180]
    3a80:	add	x21, x12, x11
    3a84:	cmp	x8, x21
    3a88:	b.cs	3ab8 <deflateSetDictionary@@Base+0x548>  // b.hs, b.nlast
    3a8c:	ldr	x9, [x19, #96]
    3a90:	sub	x8, x10, x21
    3a94:	cmp	x8, #0x102
    3a98:	mov	w10, #0x102                 	// #258
    3a9c:	csel	x20, x8, x10, cc  // cc = lo, ul, last
    3aa0:	add	x0, x9, x21
    3aa4:	mov	w1, wzr
    3aa8:	mov	x2, x20
    3aac:	bl	23f0 <memset@plt>
    3ab0:	add	x8, x20, x21
    3ab4:	b	3ae8 <deflateSetDictionary@@Base+0x578>
    3ab8:	add	x10, x21, #0x102
    3abc:	subs	x10, x10, x8
    3ac0:	b.ls	3aec <deflateSetDictionary@@Base+0x57c>  // b.plast
    3ac4:	ldr	x11, [x19, #96]
    3ac8:	cmp	x10, x9
    3acc:	csel	x20, x9, x10, hi  // hi = pmore
    3ad0:	and	x2, x20, #0xffffffff
    3ad4:	add	x0, x11, x8
    3ad8:	mov	w1, wzr
    3adc:	bl	23f0 <memset@plt>
    3ae0:	ldr	x8, [x19, #5944]
    3ae4:	add	x8, x8, x20
    3ae8:	str	x8, [x19, #5944]
    3aec:	ldp	x20, x19, [sp, #64]
    3af0:	ldp	x22, x21, [sp, #48]
    3af4:	ldp	x24, x23, [sp, #32]
    3af8:	ldr	x25, [sp, #24]
    3afc:	ldp	x29, x30, [sp, #8]
    3b00:	ldr	d8, [sp], #80
    3b04:	ret

0000000000003b08 <deflateGetDictionary@@ZLIB_1.2.9>:
    3b08:	stp	x29, x30, [sp, #-32]!
    3b0c:	stp	x20, x19, [sp, #16]
    3b10:	mov	x29, sp
    3b14:	cbz	x0, 3be8 <deflateGetDictionary@@ZLIB_1.2.9+0xe0>
    3b18:	ldr	x8, [x0, #64]
    3b1c:	cbz	x8, 3be8 <deflateGetDictionary@@ZLIB_1.2.9+0xe0>
    3b20:	ldr	x8, [x0, #72]
    3b24:	cbz	x8, 3be8 <deflateGetDictionary@@ZLIB_1.2.9+0xe0>
    3b28:	ldr	x8, [x0, #56]
    3b2c:	cbz	x8, 3be8 <deflateGetDictionary@@ZLIB_1.2.9+0xe0>
    3b30:	ldr	x9, [x8]
    3b34:	cmp	x9, x0
    3b38:	b.eq	3b4c <deflateGetDictionary@@ZLIB_1.2.9+0x44>  // b.none
    3b3c:	mov	w0, #0xfffffffe            	// #-2
    3b40:	ldp	x20, x19, [sp, #16]
    3b44:	ldp	x29, x30, [sp], #32
    3b48:	ret
    3b4c:	ldr	w9, [x8, #8]
    3b50:	mov	x19, x2
    3b54:	sub	w10, w9, #0x39
    3b58:	cmp	w10, #0x38
    3b5c:	b.hi	3bd8 <deflateGetDictionary@@ZLIB_1.2.9+0xd0>  // b.pmore
    3b60:	mov	w11, #0x1                   	// #1
    3b64:	lsl	x10, x11, x10
    3b68:	mov	x11, #0x1001                	// #4097
    3b6c:	movk	x11, #0x1, lsl #16
    3b70:	movk	x11, #0x4004, lsl #32
    3b74:	movk	x11, #0x100, lsl #48
    3b78:	tst	x10, x11
    3b7c:	b.eq	3bd8 <deflateGetDictionary@@ZLIB_1.2.9+0xd0>  // b.none
    3b80:	ldr	w9, [x8, #172]
    3b84:	ldr	w10, [x8, #180]
    3b88:	ldr	w11, [x8, #80]
    3b8c:	add	w12, w10, w9
    3b90:	cmp	w12, w11
    3b94:	csel	w20, w11, w12, hi  // hi = pmore
    3b98:	cbz	x1, 3bc0 <deflateGetDictionary@@ZLIB_1.2.9+0xb8>
    3b9c:	cbz	w20, 3bc0 <deflateGetDictionary@@ZLIB_1.2.9+0xb8>
    3ba0:	ldr	x8, [x8, #96]
    3ba4:	mov	w2, w20
    3ba8:	mov	x0, x1
    3bac:	add	x8, x8, x9
    3bb0:	add	x8, x8, x10
    3bb4:	sub	x8, x8, x2
    3bb8:	mov	x1, x8
    3bbc:	bl	2310 <memcpy@plt>
    3bc0:	mov	w0, wzr
    3bc4:	cbz	x19, 3b40 <deflateGetDictionary@@ZLIB_1.2.9+0x38>
    3bc8:	str	w20, [x19]
    3bcc:	ldp	x20, x19, [sp, #16]
    3bd0:	ldp	x29, x30, [sp], #32
    3bd4:	ret
    3bd8:	cmp	w9, #0x29a
    3bdc:	b.eq	3b80 <deflateGetDictionary@@ZLIB_1.2.9+0x78>  // b.none
    3be0:	cmp	w9, #0x2a
    3be4:	b.eq	3b80 <deflateGetDictionary@@ZLIB_1.2.9+0x78>  // b.none
    3be8:	mov	w0, #0xfffffffe            	// #-2
    3bec:	ldp	x20, x19, [sp, #16]
    3bf0:	ldp	x29, x30, [sp], #32
    3bf4:	ret

0000000000003bf8 <deflateResetKeep@@ZLIB_1.2.5.2>:
    3bf8:	stp	x29, x30, [sp, #-32]!
    3bfc:	stp	x20, x19, [sp, #16]
    3c00:	mov	x29, sp
    3c04:	cbz	x0, 3c30 <deflateResetKeep@@ZLIB_1.2.5.2+0x38>
    3c08:	ldr	x8, [x0, #64]
    3c0c:	mov	x19, x0
    3c10:	cbz	x8, 3c30 <deflateResetKeep@@ZLIB_1.2.5.2+0x38>
    3c14:	ldr	x8, [x19, #72]
    3c18:	cbz	x8, 3c30 <deflateResetKeep@@ZLIB_1.2.5.2+0x38>
    3c1c:	ldr	x20, [x19, #56]
    3c20:	cbz	x20, 3c30 <deflateResetKeep@@ZLIB_1.2.5.2+0x38>
    3c24:	ldr	x8, [x20]
    3c28:	cmp	x8, x19
    3c2c:	b.eq	3c40 <deflateResetKeep@@ZLIB_1.2.5.2+0x48>  // b.none
    3c30:	mov	w0, #0xfffffffe            	// #-2
    3c34:	ldp	x20, x19, [sp, #16]
    3c38:	ldp	x29, x30, [sp], #32
    3c3c:	ret
    3c40:	ldr	w8, [x20, #8]
    3c44:	sub	w9, w8, #0x39
    3c48:	cmp	w9, #0x38
    3c4c:	b.hi	3cf4 <deflateResetKeep@@ZLIB_1.2.5.2+0xfc>  // b.pmore
    3c50:	mov	w10, #0x1                   	// #1
    3c54:	lsl	x9, x10, x9
    3c58:	mov	x10, #0x1001                	// #4097
    3c5c:	movk	x10, #0x1, lsl #16
    3c60:	movk	x10, #0x4004, lsl #32
    3c64:	movk	x10, #0x100, lsl #48
    3c68:	tst	x9, x10
    3c6c:	b.eq	3cf4 <deflateResetKeep@@ZLIB_1.2.5.2+0xfc>  // b.none
    3c70:	mov	w8, #0x2                   	// #2
    3c74:	str	xzr, [x19, #16]
    3c78:	stp	xzr, xzr, [x19, #40]
    3c7c:	str	w8, [x19, #88]
    3c80:	ldr	x9, [x20, #16]
    3c84:	ldr	w8, [x20, #48]
    3c88:	stp	x9, xzr, [x20, #32]
    3c8c:	tbz	w8, #31, 3c98 <deflateResetKeep@@ZLIB_1.2.5.2+0xa0>
    3c90:	neg	w8, w8
    3c94:	str	w8, [x20, #48]
    3c98:	cmp	w8, #0x0
    3c9c:	mov	w9, #0x2a                  	// #42
    3ca0:	mov	w10, #0x71                  	// #113
    3ca4:	csel	w9, w10, w9, eq  // eq = none
    3ca8:	cmp	w8, #0x2
    3cac:	mov	w8, #0x39                  	// #57
    3cb0:	csel	w8, w8, w9, eq  // eq = none
    3cb4:	mov	x0, xzr
    3cb8:	mov	x1, xzr
    3cbc:	mov	w2, wzr
    3cc0:	str	w8, [x20, #8]
    3cc4:	b.ne	3cd0 <deflateResetKeep@@ZLIB_1.2.5.2+0xd8>  // b.any
    3cc8:	bl	2390 <crc32@plt>
    3ccc:	b	3cd4 <deflateResetKeep@@ZLIB_1.2.5.2+0xdc>
    3cd0:	bl	24a0 <adler32@plt>
    3cd4:	str	x0, [x19, #96]
    3cd8:	mov	x0, x20
    3cdc:	str	wzr, [x20, #76]
    3ce0:	bl	baa4 <inflateCodesUsed@@ZLIB_1.2.9+0x668>
    3ce4:	mov	w0, wzr
    3ce8:	ldp	x20, x19, [sp, #16]
    3cec:	ldp	x29, x30, [sp], #32
    3cf0:	ret
    3cf4:	cmp	w8, #0x29a
    3cf8:	b.eq	3c70 <deflateResetKeep@@ZLIB_1.2.5.2+0x78>  // b.none
    3cfc:	cmp	w8, #0x2a
    3d00:	b.ne	3c30 <deflateResetKeep@@ZLIB_1.2.5.2+0x38>  // b.any
    3d04:	b	3c70 <deflateResetKeep@@ZLIB_1.2.5.2+0x78>

0000000000003d08 <deflateSetHeader@@ZLIB_1.2.2>:
    3d08:	cbz	x0, 3d88 <deflateSetHeader@@ZLIB_1.2.2+0x80>
    3d0c:	ldr	x8, [x0, #64]
    3d10:	cbz	x8, 3d88 <deflateSetHeader@@ZLIB_1.2.2+0x80>
    3d14:	ldr	x8, [x0, #72]
    3d18:	cbz	x8, 3d88 <deflateSetHeader@@ZLIB_1.2.2+0x80>
    3d1c:	ldr	x8, [x0, #56]
    3d20:	cbz	x8, 3d88 <deflateSetHeader@@ZLIB_1.2.2+0x80>
    3d24:	ldr	x9, [x8]
    3d28:	cmp	x9, x0
    3d2c:	b.ne	3d88 <deflateSetHeader@@ZLIB_1.2.2+0x80>  // b.any
    3d30:	ldr	w9, [x8, #8]
    3d34:	sub	w10, w9, #0x39
    3d38:	cmp	w10, #0x38
    3d3c:	b.hi	3d78 <deflateSetHeader@@ZLIB_1.2.2+0x70>  // b.pmore
    3d40:	mov	w11, #0x1                   	// #1
    3d44:	lsl	x10, x11, x10
    3d48:	mov	x11, #0x1001                	// #4097
    3d4c:	movk	x11, #0x1, lsl #16
    3d50:	movk	x11, #0x4004, lsl #32
    3d54:	movk	x11, #0x100, lsl #48
    3d58:	tst	x10, x11
    3d5c:	b.eq	3d78 <deflateSetHeader@@ZLIB_1.2.2+0x70>  // b.none
    3d60:	ldr	w9, [x8, #48]
    3d64:	cmp	w9, #0x2
    3d68:	b.ne	3d88 <deflateSetHeader@@ZLIB_1.2.2+0x80>  // b.any
    3d6c:	mov	w0, wzr
    3d70:	str	x1, [x8, #56]
    3d74:	ret
    3d78:	cmp	w9, #0x29a
    3d7c:	b.eq	3d60 <deflateSetHeader@@ZLIB_1.2.2+0x58>  // b.none
    3d80:	cmp	w9, #0x2a
    3d84:	b.eq	3d60 <deflateSetHeader@@ZLIB_1.2.2+0x58>  // b.none
    3d88:	mov	w0, #0xfffffffe            	// #-2
    3d8c:	ret

0000000000003d90 <deflatePending@@ZLIB_1.2.5.1>:
    3d90:	cbz	x0, 3db8 <deflatePending@@ZLIB_1.2.5.1+0x28>
    3d94:	ldr	x8, [x0, #64]
    3d98:	cbz	x8, 3db8 <deflatePending@@ZLIB_1.2.5.1+0x28>
    3d9c:	ldr	x8, [x0, #72]
    3da0:	cbz	x8, 3db8 <deflatePending@@ZLIB_1.2.5.1+0x28>
    3da4:	ldr	x8, [x0, #56]
    3da8:	cbz	x8, 3db8 <deflatePending@@ZLIB_1.2.5.1+0x28>
    3dac:	ldr	x9, [x8]
    3db0:	cmp	x9, x0
    3db4:	b.eq	3dc0 <deflatePending@@ZLIB_1.2.5.1+0x30>  // b.none
    3db8:	mov	w0, #0xfffffffe            	// #-2
    3dbc:	ret
    3dc0:	ldr	w9, [x8, #8]
    3dc4:	sub	w10, w9, #0x39
    3dc8:	cmp	w10, #0x38
    3dcc:	b.hi	3e10 <deflatePending@@ZLIB_1.2.5.1+0x80>  // b.pmore
    3dd0:	mov	w11, #0x1                   	// #1
    3dd4:	lsl	x10, x11, x10
    3dd8:	mov	x11, #0x1001                	// #4097
    3ddc:	movk	x11, #0x1, lsl #16
    3de0:	movk	x11, #0x4004, lsl #32
    3de4:	movk	x11, #0x100, lsl #48
    3de8:	tst	x10, x11
    3dec:	b.eq	3e10 <deflatePending@@ZLIB_1.2.5.1+0x80>  // b.none
    3df0:	cbz	x1, 3dfc <deflatePending@@ZLIB_1.2.5.1+0x6c>
    3df4:	ldr	x9, [x8, #40]
    3df8:	str	w9, [x1]
    3dfc:	mov	w0, wzr
    3e00:	cbz	x2, 3e0c <deflatePending@@ZLIB_1.2.5.1+0x7c>
    3e04:	ldr	w8, [x8, #5940]
    3e08:	str	w8, [x2]
    3e0c:	ret
    3e10:	cmp	w9, #0x29a
    3e14:	b.eq	3df0 <deflatePending@@ZLIB_1.2.5.1+0x60>  // b.none
    3e18:	cmp	w9, #0x2a
    3e1c:	b.ne	3db8 <deflatePending@@ZLIB_1.2.5.1+0x28>  // b.any
    3e20:	b	3df0 <deflatePending@@ZLIB_1.2.5.1+0x60>

0000000000003e24 <deflatePrime@@ZLIB_1.2.0.8>:
    3e24:	stp	x29, x30, [sp, #-64]!
    3e28:	stp	x24, x23, [sp, #16]
    3e2c:	stp	x22, x21, [sp, #32]
    3e30:	stp	x20, x19, [sp, #48]
    3e34:	mov	x29, sp
    3e38:	cbz	x0, 3e60 <deflatePrime@@ZLIB_1.2.0.8+0x3c>
    3e3c:	ldr	x8, [x0, #64]
    3e40:	cbz	x8, 3e60 <deflatePrime@@ZLIB_1.2.0.8+0x3c>
    3e44:	ldr	x8, [x0, #72]
    3e48:	cbz	x8, 3e60 <deflatePrime@@ZLIB_1.2.0.8+0x3c>
    3e4c:	ldr	x21, [x0, #56]
    3e50:	cbz	x21, 3e60 <deflatePrime@@ZLIB_1.2.0.8+0x3c>
    3e54:	ldr	x8, [x21]
    3e58:	cmp	x8, x0
    3e5c:	b.eq	3e78 <deflatePrime@@ZLIB_1.2.0.8+0x54>  // b.none
    3e60:	mov	w0, #0xfffffffe            	// #-2
    3e64:	ldp	x20, x19, [sp, #48]
    3e68:	ldp	x22, x21, [sp, #32]
    3e6c:	ldp	x24, x23, [sp, #16]
    3e70:	ldp	x29, x30, [sp], #64
    3e74:	ret
    3e78:	ldr	w8, [x21, #8]
    3e7c:	mov	w19, w2
    3e80:	mov	w20, w1
    3e84:	sub	w9, w8, #0x39
    3e88:	cmp	w9, #0x38
    3e8c:	b.hi	3f20 <deflatePrime@@ZLIB_1.2.0.8+0xfc>  // b.pmore
    3e90:	mov	w10, #0x1                   	// #1
    3e94:	lsl	x9, x10, x9
    3e98:	mov	x10, #0x1001                	// #4097
    3e9c:	movk	x10, #0x1, lsl #16
    3ea0:	movk	x10, #0x4004, lsl #32
    3ea4:	movk	x10, #0x100, lsl #48
    3ea8:	tst	x9, x10
    3eac:	b.eq	3f20 <deflatePrime@@ZLIB_1.2.0.8+0xfc>  // b.none
    3eb0:	ldr	x8, [x21, #32]
    3eb4:	ldr	x9, [x21, #5904]
    3eb8:	add	x8, x8, #0x2
    3ebc:	cmp	x9, x8
    3ec0:	b.cs	3ecc <deflatePrime@@ZLIB_1.2.0.8+0xa8>  // b.hs, b.nlast
    3ec4:	mov	w0, #0xfffffffb            	// #-5
    3ec8:	b	3e64 <deflatePrime@@ZLIB_1.2.0.8+0x40>
    3ecc:	mov	w22, #0x10                  	// #16
    3ed0:	mov	w23, #0xffffffff            	// #-1
    3ed4:	ldr	w8, [x21, #5940]
    3ed8:	ldrh	w9, [x21, #5936]
    3edc:	mov	x0, x21
    3ee0:	sub	w10, w22, w8
    3ee4:	cmp	w10, w20
    3ee8:	csel	w24, w20, w10, gt
    3eec:	lsl	w10, w23, w24
    3ef0:	bic	w10, w19, w10
    3ef4:	add	w11, w24, w8
    3ef8:	lsl	w8, w10, w8
    3efc:	orr	w8, w9, w8
    3f00:	strh	w8, [x21, #5936]
    3f04:	str	w11, [x21, #5940]
    3f08:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    3f0c:	mov	w0, wzr
    3f10:	subs	w20, w20, w24
    3f14:	asr	w19, w19, w24
    3f18:	b.ne	3ed4 <deflatePrime@@ZLIB_1.2.0.8+0xb0>  // b.any
    3f1c:	b	3e64 <deflatePrime@@ZLIB_1.2.0.8+0x40>
    3f20:	cmp	w8, #0x29a
    3f24:	b.eq	3eb0 <deflatePrime@@ZLIB_1.2.0.8+0x8c>  // b.none
    3f28:	cmp	w8, #0x2a
    3f2c:	b.ne	3e60 <deflatePrime@@ZLIB_1.2.0.8+0x3c>  // b.any
    3f30:	b	3eb0 <deflatePrime@@ZLIB_1.2.0.8+0x8c>

0000000000003f34 <deflateParams@@Base>:
    3f34:	stp	x29, x30, [sp, #-48]!
    3f38:	stp	x22, x21, [sp, #16]
    3f3c:	stp	x20, x19, [sp, #32]
    3f40:	mov	x29, sp
    3f44:	cbz	x0, 40c4 <deflateParams@@Base+0x190>
    3f48:	ldr	x8, [x0, #64]
    3f4c:	mov	x20, x0
    3f50:	cbz	x8, 40c4 <deflateParams@@Base+0x190>
    3f54:	ldr	x8, [x20, #72]
    3f58:	cbz	x8, 40c4 <deflateParams@@Base+0x190>
    3f5c:	ldr	x21, [x20, #56]
    3f60:	cbz	x21, 40c4 <deflateParams@@Base+0x190>
    3f64:	ldr	x8, [x21]
    3f68:	cmp	x8, x20
    3f6c:	b.eq	3f84 <deflateParams@@Base+0x50>  // b.none
    3f70:	mov	w0, #0xfffffffe            	// #-2
    3f74:	ldp	x20, x19, [sp, #32]
    3f78:	ldp	x22, x21, [sp, #16]
    3f7c:	ldp	x29, x30, [sp], #48
    3f80:	ret
    3f84:	ldr	w8, [x21, #8]
    3f88:	mov	w19, w2
    3f8c:	sub	w9, w8, #0x39
    3f90:	cmp	w9, #0x38
    3f94:	b.hi	40b4 <deflateParams@@Base+0x180>  // b.pmore
    3f98:	mov	w10, #0x1                   	// #1
    3f9c:	lsl	x9, x10, x9
    3fa0:	mov	x10, #0x1001                	// #4097
    3fa4:	movk	x10, #0x1, lsl #16
    3fa8:	movk	x10, #0x4004, lsl #32
    3fac:	movk	x10, #0x100, lsl #48
    3fb0:	tst	x9, x10
    3fb4:	b.eq	40b4 <deflateParams@@Base+0x180>  // b.none
    3fb8:	cmn	w1, #0x1
    3fbc:	mov	w8, #0x6                   	// #6
    3fc0:	csel	w22, w8, w1, eq  // eq = none
    3fc4:	cmp	w19, #0x4
    3fc8:	mov	w0, #0xfffffffe            	// #-2
    3fcc:	b.hi	3f74 <deflateParams@@Base+0x40>  // b.pmore
    3fd0:	cmp	w22, #0x9
    3fd4:	b.hi	3f74 <deflateParams@@Base+0x40>  // b.pmore
    3fd8:	ldr	w8, [x21, #200]
    3fdc:	cmp	w8, w19
    3fe0:	b.ne	4008 <deflateParams@@Base+0xd4>  // b.any
    3fe4:	ldrsw	x8, [x21, #196]
    3fe8:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    3fec:	add	x9, x9, #0xc68
    3ff0:	add	x10, x9, w22, uxtw #4
    3ff4:	add	x8, x9, x8, lsl #4
    3ff8:	ldr	x8, [x8, #8]
    3ffc:	ldr	x9, [x10, #8]
    4000:	cmp	x8, x9
    4004:	b.eq	402c <deflateParams@@Base+0xf8>  // b.none
    4008:	ldr	x8, [x21, #5944]
    400c:	cbz	x8, 402c <deflateParams@@Base+0xf8>
    4010:	mov	w1, #0x5                   	// #5
    4014:	mov	x0, x20
    4018:	bl	23e0 <deflate@plt>
    401c:	cmn	w0, #0x2
    4020:	b.eq	3f74 <deflateParams@@Base+0x40>  // b.none
    4024:	ldr	w8, [x20, #32]
    4028:	cbz	w8, 40d8 <deflateParams@@Base+0x1a4>
    402c:	ldr	w8, [x21, #196]
    4030:	cmp	w8, w22
    4034:	b.eq	41dc <deflateParams@@Base+0x2a8>  // b.none
    4038:	cbnz	w8, 41b4 <deflateParams@@Base+0x280>
    403c:	ldr	w8, [x21, #5928]
    4040:	cbz	w8, 41b4 <deflateParams@@Base+0x280>
    4044:	cmp	w8, #0x1
    4048:	b.ne	40ec <deflateParams@@Base+0x1b8>  // b.any
    404c:	ldr	w10, [x21, #132]
    4050:	ldr	x0, [x21, #120]
    4054:	ldr	w9, [x21, #80]
    4058:	subs	w8, w10, #0x1
    405c:	add	x14, x0, x10, lsl #1
    4060:	b.eq	4100 <deflateParams@@Base+0x1cc>  // b.none
    4064:	add	x12, x8, #0x1
    4068:	and	x13, x12, #0x1fffffffe
    406c:	sub	x11, x14, x13, lsl #1
    4070:	sub	w10, w10, w13
    4074:	sub	x14, x14, #0x2
    4078:	mov	x15, x13
    407c:	ldrh	w16, [x14]
    4080:	ldurh	w17, [x14, #-2]
    4084:	subs	w16, w16, w9
    4088:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    408c:	subs	w17, w17, w9
    4090:	csel	w17, wzr, w17, cc  // cc = lo, ul, last
    4094:	strh	w16, [x14]
    4098:	subs	x15, x15, #0x2
    409c:	sturh	w17, [x14, #-2]
    40a0:	sub	x14, x14, #0x4
    40a4:	b.ne	407c <deflateParams@@Base+0x148>  // b.any
    40a8:	cmp	x12, x13
    40ac:	b.ne	4104 <deflateParams@@Base+0x1d0>  // b.any
    40b0:	b	4120 <deflateParams@@Base+0x1ec>
    40b4:	cmp	w8, #0x29a
    40b8:	b.eq	3fb8 <deflateParams@@Base+0x84>  // b.none
    40bc:	cmp	w8, #0x2a
    40c0:	b.eq	3fb8 <deflateParams@@Base+0x84>  // b.none
    40c4:	mov	w0, #0xfffffffe            	// #-2
    40c8:	ldp	x20, x19, [sp, #32]
    40cc:	ldp	x22, x21, [sp, #16]
    40d0:	ldp	x29, x30, [sp], #48
    40d4:	ret
    40d8:	mov	w0, #0xfffffffb            	// #-5
    40dc:	ldp	x20, x19, [sp, #32]
    40e0:	ldp	x22, x21, [sp, #16]
    40e4:	ldp	x29, x30, [sp], #48
    40e8:	ret
    40ec:	ldr	w8, [x21, #132]
    40f0:	ldr	x0, [x21, #120]
    40f4:	sub	w8, w8, #0x1
    40f8:	strh	wzr, [x0, w8, uxtw #1]
    40fc:	b	41a4 <deflateParams@@Base+0x270>
    4100:	mov	x11, x14
    4104:	sub	x11, x11, #0x2
    4108:	ldrh	w12, [x11]
    410c:	subs	w12, w12, w9
    4110:	csel	w12, wzr, w12, cc  // cc = lo, ul, last
    4114:	subs	w10, w10, #0x1
    4118:	strh	w12, [x11], #-2
    411c:	b.ne	4108 <deflateParams@@Base+0x1d4>  // b.any
    4120:	ldr	x11, [x21, #112]
    4124:	subs	w10, w9, #0x1
    4128:	add	x14, x11, x9, lsl #1
    412c:	b.eq	4180 <deflateParams@@Base+0x24c>  // b.none
    4130:	add	x12, x10, #0x1
    4134:	and	x13, x12, #0x1fffffffe
    4138:	sub	x11, x14, x13, lsl #1
    413c:	sub	w10, w9, w13
    4140:	sub	x14, x14, #0x2
    4144:	mov	x15, x13
    4148:	ldrh	w16, [x14]
    414c:	ldurh	w17, [x14, #-2]
    4150:	subs	w16, w16, w9
    4154:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    4158:	subs	w17, w17, w9
    415c:	csel	w17, wzr, w17, cc  // cc = lo, ul, last
    4160:	strh	w16, [x14]
    4164:	subs	x15, x15, #0x2
    4168:	sturh	w17, [x14, #-2]
    416c:	sub	x14, x14, #0x4
    4170:	b.ne	4148 <deflateParams@@Base+0x214>  // b.any
    4174:	cmp	x12, x13
    4178:	b.ne	4188 <deflateParams@@Base+0x254>  // b.any
    417c:	b	41a4 <deflateParams@@Base+0x270>
    4180:	mov	x11, x14
    4184:	mov	w10, w9
    4188:	sub	x11, x11, #0x2
    418c:	ldrh	w12, [x11]
    4190:	subs	w12, w12, w9
    4194:	csel	w12, wzr, w12, cc  // cc = lo, ul, last
    4198:	subs	w10, w10, #0x1
    419c:	strh	w12, [x11], #-2
    41a0:	b.ne	418c <deflateParams@@Base+0x258>  // b.any
    41a4:	lsl	x2, x8, #1
    41a8:	mov	w1, wzr
    41ac:	bl	23f0 <memset@plt>
    41b0:	str	wzr, [x21, #5928]
    41b4:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    41b8:	add	x8, x8, #0xc68
    41bc:	add	x8, x8, w22, sxtw #4
    41c0:	ldrh	w9, [x8]
    41c4:	ldrh	w10, [x8, #4]
    41c8:	ldrh	w11, [x8, #2]
    41cc:	ldrh	w8, [x8, #6]
    41d0:	str	w22, [x21, #196]
    41d4:	stp	w9, w10, [x21, #204]
    41d8:	stp	w8, w11, [x21, #188]
    41dc:	mov	w0, wzr
    41e0:	str	w19, [x21, #200]
    41e4:	ldp	x20, x19, [sp, #32]
    41e8:	ldp	x22, x21, [sp, #16]
    41ec:	ldp	x29, x30, [sp], #48
    41f0:	ret

00000000000041f4 <deflate@@Base>:
    41f4:	stp	x29, x30, [sp, #-96]!
    41f8:	stp	x28, x27, [sp, #16]
    41fc:	stp	x26, x25, [sp, #32]
    4200:	stp	x24, x23, [sp, #48]
    4204:	stp	x22, x21, [sp, #64]
    4208:	stp	x20, x19, [sp, #80]
    420c:	mov	x29, sp
    4210:	cbz	x0, 4278 <deflate@@Base+0x84>
    4214:	ldr	x8, [x0, #64]
    4218:	mov	x20, x0
    421c:	cbz	x8, 4278 <deflate@@Base+0x84>
    4220:	ldr	x8, [x20, #72]
    4224:	cbz	x8, 4278 <deflate@@Base+0x84>
    4228:	ldr	x19, [x20, #56]
    422c:	cbz	x19, 4278 <deflate@@Base+0x84>
    4230:	ldr	x8, [x19]
    4234:	cmp	x8, x20
    4238:	b.ne	4278 <deflate@@Base+0x84>  // b.any
    423c:	ldr	w9, [x19, #8]
    4240:	mov	w21, w1
    4244:	sub	w8, w9, #0x39
    4248:	cmp	w8, #0x38
    424c:	b.hi	42d8 <deflate@@Base+0xe4>  // b.pmore
    4250:	mov	w10, #0x1                   	// #1
    4254:	lsl	x8, x10, x8
    4258:	mov	x10, #0x1001                	// #4097
    425c:	movk	x10, #0x1, lsl #16
    4260:	movk	x10, #0x4004, lsl #32
    4264:	movk	x10, #0x100, lsl #48
    4268:	tst	x8, x10
    426c:	b.eq	42d8 <deflate@@Base+0xe4>  // b.none
    4270:	cmp	w21, #0x5
    4274:	b.ls	4298 <deflate@@Base+0xa4>  // b.plast
    4278:	mov	w0, #0xfffffffe            	// #-2
    427c:	ldp	x20, x19, [sp, #80]
    4280:	ldp	x22, x21, [sp, #64]
    4284:	ldp	x24, x23, [sp, #48]
    4288:	ldp	x26, x25, [sp, #32]
    428c:	ldp	x28, x27, [sp, #16]
    4290:	ldp	x29, x30, [sp], #96
    4294:	ret
    4298:	ldr	x8, [x20, #24]
    429c:	cbz	x8, 42c0 <deflate@@Base+0xcc>
    42a0:	ldr	w8, [x20, #8]
    42a4:	cbz	w8, 42b0 <deflate@@Base+0xbc>
    42a8:	ldr	x10, [x20]
    42ac:	cbz	x10, 42c0 <deflate@@Base+0xcc>
    42b0:	cmp	w21, #0x4
    42b4:	b.eq	42ec <deflate@@Base+0xf8>  // b.none
    42b8:	cmp	w9, #0x29a
    42bc:	b.ne	42ec <deflate@@Base+0xf8>  // b.any
    42c0:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    42c4:	ldr	x8, [x8, #4056]
    42c8:	mov	w0, #0xfffffffe            	// #-2
    42cc:	ldr	x8, [x8, #32]
    42d0:	str	x8, [x20, #48]
    42d4:	b	427c <deflate@@Base+0x88>
    42d8:	cmp	w9, #0x29a
    42dc:	b.eq	4270 <deflate@@Base+0x7c>  // b.none
    42e0:	cmp	w9, #0x2a
    42e4:	b.ne	4278 <deflate@@Base+0x84>  // b.any
    42e8:	b	4270 <deflate@@Base+0x7c>
    42ec:	ldr	w10, [x20, #32]
    42f0:	cbz	w10, 46e0 <deflate@@Base+0x4ec>
    42f4:	ldr	x11, [x19, #40]
    42f8:	ldr	w10, [x19, #76]
    42fc:	str	w21, [x19, #76]
    4300:	cbz	x11, 4388 <deflate@@Base+0x194>
    4304:	mov	x0, x19
    4308:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    430c:	ldr	x8, [x19, #40]
    4310:	ldr	w9, [x20, #32]
    4314:	cmp	w9, w8
    4318:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    431c:	cbz	w23, 437c <deflate@@Base+0x188>
    4320:	ldr	x0, [x20, #24]
    4324:	ldr	x1, [x19, #32]
    4328:	mov	w22, w23
    432c:	mov	x2, x22
    4330:	bl	2310 <memcpy@plt>
    4334:	ldr	x8, [x20, #24]
    4338:	add	x8, x8, x22
    433c:	str	x8, [x20, #24]
    4340:	ldr	x8, [x19, #32]
    4344:	add	x8, x8, x22
    4348:	str	x8, [x19, #32]
    434c:	ldr	x8, [x20, #40]
    4350:	ldr	w9, [x20, #32]
    4354:	add	x8, x8, x22
    4358:	sub	w9, w9, w23
    435c:	str	x8, [x20, #40]
    4360:	str	w9, [x20, #32]
    4364:	ldr	x8, [x19, #40]
    4368:	subs	x8, x8, x22
    436c:	str	x8, [x19, #40]
    4370:	b.ne	437c <deflate@@Base+0x188>  // b.any
    4374:	ldr	x10, [x19, #16]
    4378:	str	x10, [x19, #32]
    437c:	cbz	w9, 58a0 <deflate@@Base+0x16ac>
    4380:	ldr	w9, [x19, #8]
    4384:	b	4390 <deflate@@Base+0x19c>
    4388:	cbz	w8, 46a8 <deflate@@Base+0x4b4>
    438c:	mov	x8, xzr
    4390:	cmp	w9, #0x2a
    4394:	b.eq	43ac <deflate@@Base+0x1b8>  // b.none
    4398:	cmp	w9, #0x29a
    439c:	b.ne	454c <deflate@@Base+0x358>  // b.any
    43a0:	ldr	w8, [x20, #8]
    43a4:	cbnz	w8, 46e0 <deflate@@Base+0x4ec>
    43a8:	b	4ee0 <deflate@@Base+0xcec>
    43ac:	ldr	w9, [x19, #200]
    43b0:	ldr	w10, [x19, #84]
    43b4:	mov	w11, #0xffff8800            	// #-30720
    43b8:	cmp	w9, #0x1
    43bc:	add	w9, w11, w10, lsl #12
    43c0:	b.gt	43d0 <deflate@@Base+0x1dc>
    43c4:	ldr	w10, [x19, #196]
    43c8:	cmp	w10, #0x2
    43cc:	b.ge	4770 <deflate@@Base+0x57c>  // b.tcont
    43d0:	mov	w10, wzr
    43d4:	orr	w9, w10, w9
    43d8:	ldr	w10, [x19, #172]
    43dc:	add	x12, x8, #0x1
    43e0:	mov	w11, #0x1085                	// #4229
    43e4:	str	x12, [x19, #40]
    43e8:	ldr	x12, [x19, #16]
    43ec:	cmp	w10, #0x0
    43f0:	orr	w10, w9, #0x20
    43f4:	movk	w11, #0x842, lsl #16
    43f8:	csel	w9, w9, w10, eq  // eq = none
    43fc:	umull	x10, w9, w11
    4400:	lsr	w11, w9, #8
    4404:	lsr	x10, x10, #32
    4408:	strb	w11, [x12, x8]
    440c:	sub	w8, w9, w10
    4410:	add	w8, w10, w8, lsr #1
    4414:	ldr	x12, [x19, #40]
    4418:	lsr	w8, w8, #4
    441c:	ldr	x11, [x19, #16]
    4420:	sub	w8, w8, w8, lsl #5
    4424:	add	w8, w9, w8
    4428:	orr	w8, w8, w9
    442c:	add	x10, x12, #0x1
    4430:	eor	w8, w8, #0x1f
    4434:	str	x10, [x19, #40]
    4438:	strb	w8, [x11, x12]
    443c:	ldr	w8, [x19, #172]
    4440:	cbz	w8, 44a8 <deflate@@Base+0x2b4>
    4444:	ldr	x8, [x20, #96]
    4448:	ldr	x9, [x19, #40]
    444c:	ldr	x10, [x19, #16]
    4450:	lsr	x11, x8, #24
    4454:	add	x12, x9, #0x1
    4458:	str	x12, [x19, #40]
    445c:	strb	w11, [x10, x9]
    4460:	ldr	x9, [x19, #40]
    4464:	ldr	x10, [x19, #16]
    4468:	lsr	x8, x8, #16
    446c:	add	x11, x9, #0x1
    4470:	str	x11, [x19, #40]
    4474:	strb	w8, [x10, x9]
    4478:	ldr	x8, [x20, #96]
    447c:	ldr	x9, [x19, #40]
    4480:	ldr	x10, [x19, #16]
    4484:	ubfx	x11, x8, #8, #24
    4488:	add	x12, x9, #0x1
    448c:	str	x12, [x19, #40]
    4490:	strb	w11, [x10, x9]
    4494:	ldr	x9, [x19, #40]
    4498:	ldr	x10, [x19, #16]
    449c:	add	x11, x9, #0x1
    44a0:	str	x11, [x19, #40]
    44a4:	strb	w8, [x10, x9]
    44a8:	mov	x0, xzr
    44ac:	mov	x1, xzr
    44b0:	mov	w2, wzr
    44b4:	bl	24a0 <adler32@plt>
    44b8:	mov	w8, #0x71                  	// #113
    44bc:	str	x0, [x20, #96]
    44c0:	str	w8, [x19, #8]
    44c4:	ldr	x22, [x20, #56]
    44c8:	mov	x0, x22
    44cc:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    44d0:	ldr	w8, [x22, #40]
    44d4:	ldr	w9, [x20, #32]
    44d8:	cmp	w9, w8
    44dc:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    44e0:	cbz	w24, 4540 <deflate@@Base+0x34c>
    44e4:	ldr	x0, [x20, #24]
    44e8:	ldr	x1, [x22, #32]
    44ec:	mov	w23, w24
    44f0:	mov	x2, x23
    44f4:	bl	2310 <memcpy@plt>
    44f8:	ldr	x8, [x20, #24]
    44fc:	add	x8, x8, x23
    4500:	str	x8, [x20, #24]
    4504:	ldr	x8, [x22, #32]
    4508:	add	x8, x8, x23
    450c:	str	x8, [x22, #32]
    4510:	ldr	x8, [x20, #40]
    4514:	ldr	w9, [x20, #32]
    4518:	add	x8, x8, x23
    451c:	sub	w9, w9, w24
    4520:	str	x8, [x20, #40]
    4524:	str	w9, [x20, #32]
    4528:	ldr	x8, [x22, #40]
    452c:	subs	x8, x8, x23
    4530:	str	x8, [x22, #40]
    4534:	b.ne	4540 <deflate@@Base+0x34c>  // b.any
    4538:	ldr	x8, [x22, #16]
    453c:	str	x8, [x22, #32]
    4540:	ldr	x8, [x19, #40]
    4544:	cbnz	x8, 58a0 <deflate@@Base+0x16ac>
    4548:	ldr	w9, [x19, #8]
    454c:	cmp	w9, #0x39
    4550:	b.ne	4908 <deflate@@Base+0x714>  // b.any
    4554:	mov	x0, xzr
    4558:	mov	x1, xzr
    455c:	mov	w2, wzr
    4560:	bl	2390 <crc32@plt>
    4564:	str	x0, [x20, #96]
    4568:	ldr	x8, [x19, #40]
    456c:	ldr	x9, [x19, #16]
    4570:	add	x10, x8, #0x1
    4574:	str	x10, [x19, #40]
    4578:	mov	w10, #0x1f                  	// #31
    457c:	strb	w10, [x9, x8]
    4580:	ldr	x8, [x19, #40]
    4584:	ldr	x9, [x19, #16]
    4588:	add	x10, x8, #0x1
    458c:	str	x10, [x19, #40]
    4590:	mov	w10, #0x8b                  	// #139
    4594:	strb	w10, [x9, x8]
    4598:	ldr	x8, [x19, #40]
    459c:	ldr	x9, [x19, #16]
    45a0:	add	x10, x8, #0x1
    45a4:	str	x10, [x19, #40]
    45a8:	mov	w10, #0x8                   	// #8
    45ac:	strb	w10, [x9, x8]
    45b0:	ldr	x8, [x19, #56]
    45b4:	cbz	x8, 46f8 <deflate@@Base+0x504>
    45b8:	ldr	w9, [x8]
    45bc:	ldr	w10, [x8, #68]
    45c0:	ldr	x13, [x19, #40]
    45c4:	ldr	x11, [x8, #24]
    45c8:	ldr	x12, [x8, #40]
    45cc:	ldr	x8, [x8, #56]
    45d0:	cmp	w9, #0x0
    45d4:	cset	w9, ne  // ne = any
    45d8:	cmp	w10, #0x0
    45dc:	add	x10, x13, #0x1
    45e0:	str	x10, [x19, #40]
    45e4:	cset	w10, ne  // ne = any
    45e8:	cmp	x11, #0x0
    45ec:	bfi	w9, w10, #1, #1
    45f0:	cset	w10, ne  // ne = any
    45f4:	cmp	x12, #0x0
    45f8:	bfi	w9, w10, #2, #1
    45fc:	cset	w10, ne  // ne = any
    4600:	cmp	x8, #0x0
    4604:	ldr	x8, [x19, #16]
    4608:	bfi	w9, w10, #3, #1
    460c:	cset	w10, ne  // ne = any
    4610:	bfi	w9, w10, #4, #1
    4614:	strb	w9, [x8, x13]
    4618:	ldr	x8, [x19, #56]
    461c:	ldr	x9, [x19, #40]
    4620:	ldr	x10, [x19, #16]
    4624:	ldr	x8, [x8, #8]
    4628:	add	x11, x9, #0x1
    462c:	str	x11, [x19, #40]
    4630:	strb	w8, [x10, x9]
    4634:	ldr	x8, [x19, #56]
    4638:	ldr	x9, [x19, #40]
    463c:	ldr	x10, [x19, #16]
    4640:	ldr	x8, [x8, #8]
    4644:	add	x11, x9, #0x1
    4648:	str	x11, [x19, #40]
    464c:	lsr	x8, x8, #8
    4650:	strb	w8, [x10, x9]
    4654:	ldr	x8, [x19, #56]
    4658:	ldr	x9, [x19, #40]
    465c:	ldr	x10, [x19, #16]
    4660:	ldr	x8, [x8, #8]
    4664:	add	x11, x9, #0x1
    4668:	str	x11, [x19, #40]
    466c:	lsr	x8, x8, #16
    4670:	strb	w8, [x10, x9]
    4674:	ldr	x8, [x19, #56]
    4678:	ldr	x9, [x19, #40]
    467c:	ldr	x10, [x19, #16]
    4680:	ldr	x8, [x8, #8]
    4684:	add	x11, x9, #0x1
    4688:	str	x11, [x19, #40]
    468c:	lsr	x8, x8, #24
    4690:	strb	w8, [x10, x9]
    4694:	ldr	w8, [x19, #196]
    4698:	cmp	w8, #0x9
    469c:	b.ne	4780 <deflate@@Base+0x58c>  // b.any
    46a0:	mov	w8, #0x2                   	// #2
    46a4:	b	4794 <deflate@@Base+0x5a0>
    46a8:	cmp	w21, #0x4
    46ac:	mov	w8, #0x9                   	// #9
    46b0:	csel	w11, w8, wzr, gt
    46b4:	cmp	w10, #0x4
    46b8:	csel	w12, w8, wzr, gt
    46bc:	cmp	w21, #0x4
    46c0:	mov	x8, xzr
    46c4:	b.eq	4390 <deflate@@Base+0x19c>  // b.none
    46c8:	lsl	w13, w21, #1
    46cc:	lsl	w10, w10, #1
    46d0:	sub	w11, w13, w11
    46d4:	sub	w10, w10, w12
    46d8:	cmp	w11, w10
    46dc:	b.gt	4390 <deflate@@Base+0x19c>
    46e0:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    46e4:	ldr	x8, [x8, #4056]
    46e8:	mov	w0, #0xfffffffb            	// #-5
    46ec:	ldr	x8, [x8, #56]
    46f0:	str	x8, [x20, #48]
    46f4:	b	427c <deflate@@Base+0x88>
    46f8:	ldr	x8, [x19, #40]
    46fc:	ldr	x9, [x19, #16]
    4700:	add	x10, x8, #0x1
    4704:	str	x10, [x19, #40]
    4708:	strb	wzr, [x9, x8]
    470c:	ldr	x8, [x19, #40]
    4710:	ldr	x9, [x19, #16]
    4714:	add	x10, x8, #0x1
    4718:	str	x10, [x19, #40]
    471c:	strb	wzr, [x9, x8]
    4720:	ldr	x8, [x19, #40]
    4724:	ldr	x9, [x19, #16]
    4728:	add	x10, x8, #0x1
    472c:	str	x10, [x19, #40]
    4730:	strb	wzr, [x9, x8]
    4734:	ldr	x8, [x19, #40]
    4738:	ldr	x9, [x19, #16]
    473c:	add	x10, x8, #0x1
    4740:	str	x10, [x19, #40]
    4744:	strb	wzr, [x9, x8]
    4748:	ldr	x8, [x19, #40]
    474c:	ldr	x9, [x19, #16]
    4750:	add	x10, x8, #0x1
    4754:	str	x10, [x19, #40]
    4758:	strb	wzr, [x9, x8]
    475c:	ldr	w8, [x19, #196]
    4760:	cmp	w8, #0x9
    4764:	b.ne	4838 <deflate@@Base+0x644>  // b.any
    4768:	mov	w8, #0x2                   	// #2
    476c:	b	484c <deflate@@Base+0x658>
    4770:	cmp	w10, #0x6
    4774:	b.ge	4a58 <deflate@@Base+0x864>  // b.tcont
    4778:	mov	w10, #0x40                  	// #64
    477c:	b	43d4 <deflate@@Base+0x1e0>
    4780:	ldr	w9, [x19, #200]
    4784:	cmp	w9, #0x1
    4788:	ccmp	w8, #0x2, #0x8, le
    478c:	mov	w8, #0x4                   	// #4
    4790:	csel	w8, w8, wzr, lt  // lt = tstop
    4794:	ldr	x9, [x19, #40]
    4798:	ldr	x10, [x19, #16]
    479c:	add	x11, x9, #0x1
    47a0:	str	x11, [x19, #40]
    47a4:	strb	w8, [x10, x9]
    47a8:	ldr	x8, [x19, #56]
    47ac:	ldr	x9, [x19, #40]
    47b0:	ldr	x10, [x19, #16]
    47b4:	ldr	w8, [x8, #20]
    47b8:	add	x11, x9, #0x1
    47bc:	str	x11, [x19, #40]
    47c0:	strb	w8, [x10, x9]
    47c4:	ldr	x8, [x19, #56]
    47c8:	ldr	x9, [x8, #24]
    47cc:	cbz	x9, 480c <deflate@@Base+0x618>
    47d0:	ldr	x9, [x19, #40]
    47d4:	ldr	w8, [x8, #32]
    47d8:	ldr	x10, [x19, #16]
    47dc:	add	x11, x9, #0x1
    47e0:	str	x11, [x19, #40]
    47e4:	strb	w8, [x10, x9]
    47e8:	ldr	x8, [x19, #56]
    47ec:	ldr	x9, [x19, #40]
    47f0:	ldr	x10, [x19, #16]
    47f4:	ldr	w8, [x8, #32]
    47f8:	add	x11, x9, #0x1
    47fc:	str	x11, [x19, #40]
    4800:	lsr	w8, w8, #8
    4804:	strb	w8, [x10, x9]
    4808:	ldr	x8, [x19, #56]
    480c:	ldr	w8, [x8, #68]
    4810:	cbz	w8, 4828 <deflate@@Base+0x634>
    4814:	ldr	x0, [x20, #96]
    4818:	ldr	x1, [x19, #16]
    481c:	ldr	w2, [x19, #40]
    4820:	bl	2390 <crc32@plt>
    4824:	str	x0, [x20, #96]
    4828:	mov	w8, #0x45                  	// #69
    482c:	str	xzr, [x19, #64]
    4830:	str	w8, [x19, #8]
    4834:	b	492c <deflate@@Base+0x738>
    4838:	ldr	w9, [x19, #200]
    483c:	cmp	w9, #0x1
    4840:	ccmp	w8, #0x2, #0x8, le
    4844:	mov	w8, #0x4                   	// #4
    4848:	csel	w8, w8, wzr, lt  // lt = tstop
    484c:	ldr	x9, [x19, #40]
    4850:	ldr	x10, [x19, #16]
    4854:	add	x11, x9, #0x1
    4858:	str	x11, [x19, #40]
    485c:	strb	w8, [x10, x9]
    4860:	ldr	x8, [x19, #40]
    4864:	ldr	x10, [x19, #16]
    4868:	mov	w9, #0x3                   	// #3
    486c:	mov	w11, #0x71                  	// #113
    4870:	add	x12, x8, #0x1
    4874:	str	x12, [x19, #40]
    4878:	strb	w9, [x10, x8]
    487c:	str	w11, [x19, #8]
    4880:	ldr	x22, [x20, #56]
    4884:	mov	x0, x22
    4888:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    488c:	ldr	w8, [x22, #40]
    4890:	ldr	w9, [x20, #32]
    4894:	cmp	w9, w8
    4898:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    489c:	cbz	w24, 48fc <deflate@@Base+0x708>
    48a0:	ldr	x0, [x20, #24]
    48a4:	ldr	x1, [x22, #32]
    48a8:	mov	w23, w24
    48ac:	mov	x2, x23
    48b0:	bl	2310 <memcpy@plt>
    48b4:	ldr	x8, [x20, #24]
    48b8:	add	x8, x8, x23
    48bc:	str	x8, [x20, #24]
    48c0:	ldr	x8, [x22, #32]
    48c4:	add	x8, x8, x23
    48c8:	str	x8, [x22, #32]
    48cc:	ldr	x8, [x20, #40]
    48d0:	ldr	w9, [x20, #32]
    48d4:	add	x8, x8, x23
    48d8:	sub	w9, w9, w24
    48dc:	str	x8, [x20, #40]
    48e0:	str	w9, [x20, #32]
    48e4:	ldr	x8, [x22, #40]
    48e8:	subs	x8, x8, x23
    48ec:	str	x8, [x22, #40]
    48f0:	b.ne	48fc <deflate@@Base+0x708>  // b.any
    48f4:	ldr	x8, [x22, #16]
    48f8:	str	x8, [x22, #32]
    48fc:	ldr	x8, [x19, #40]
    4900:	cbnz	x8, 58a0 <deflate@@Base+0x16ac>
    4904:	ldr	w9, [x19, #8]
    4908:	sub	w8, w9, #0x45
    490c:	cmp	w8, #0x22
    4910:	b.hi	4ed8 <deflate@@Base+0xce4>  // b.pmore
    4914:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    4918:	add	x9, x9, #0x648
    491c:	adr	x10, 492c <deflate@@Base+0x738>
    4920:	ldrh	w11, [x9, x8, lsl #1]
    4924:	add	x10, x10, x11, lsl #2
    4928:	br	x10
    492c:	ldr	x9, [x19, #56]
    4930:	ldr	x8, [x9, #24]
    4934:	cbz	x8, 4ac8 <deflate@@Base+0x8d4>
    4938:	ldrh	w11, [x9, #32]
    493c:	ldr	x9, [x19, #64]
    4940:	ldr	x24, [x19, #40]
    4944:	ldr	x10, [x19, #24]
    4948:	sub	w22, w11, w9
    494c:	add	x11, x24, x22
    4950:	cmp	x11, x10
    4954:	b.ls	4a78 <deflate@@Base+0x884>  // b.plast
    4958:	ldr	x11, [x19, #16]
    495c:	sub	x25, x10, x24
    4960:	and	x23, x25, #0xffffffff
    4964:	add	x1, x8, x9
    4968:	add	x0, x11, x24
    496c:	mov	x2, x23
    4970:	bl	2310 <memcpy@plt>
    4974:	ldr	x8, [x19, #24]
    4978:	cmp	x8, x24
    497c:	str	x8, [x19, #40]
    4980:	b.ls	49a8 <deflate@@Base+0x7b4>  // b.plast
    4984:	ldr	x9, [x19, #56]
    4988:	ldr	w9, [x9, #68]
    498c:	cbz	w9, 49a8 <deflate@@Base+0x7b4>
    4990:	ldr	x9, [x19, #16]
    4994:	ldr	x0, [x20, #96]
    4998:	sub	w2, w8, w24
    499c:	add	x1, x9, x24
    49a0:	bl	2390 <crc32@plt>
    49a4:	str	x0, [x20, #96]
    49a8:	ldr	x8, [x19, #64]
    49ac:	add	x8, x8, x23
    49b0:	str	x8, [x19, #64]
    49b4:	ldr	x23, [x20, #56]
    49b8:	mov	x0, x23
    49bc:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    49c0:	ldr	w8, [x23, #40]
    49c4:	ldr	w9, [x20, #32]
    49c8:	cmp	w9, w8
    49cc:	csel	w26, w9, w8, cc  // cc = lo, ul, last
    49d0:	cbz	w26, 4a30 <deflate@@Base+0x83c>
    49d4:	ldr	x0, [x20, #24]
    49d8:	ldr	x1, [x23, #32]
    49dc:	mov	w24, w26
    49e0:	mov	x2, x24
    49e4:	bl	2310 <memcpy@plt>
    49e8:	ldr	x8, [x20, #24]
    49ec:	add	x8, x8, x24
    49f0:	str	x8, [x20, #24]
    49f4:	ldr	x8, [x23, #32]
    49f8:	add	x8, x8, x24
    49fc:	str	x8, [x23, #32]
    4a00:	ldr	x8, [x20, #40]
    4a04:	ldr	w9, [x20, #32]
    4a08:	add	x8, x8, x24
    4a0c:	sub	w9, w9, w26
    4a10:	str	x8, [x20, #40]
    4a14:	str	w9, [x20, #32]
    4a18:	ldr	x8, [x23, #40]
    4a1c:	subs	x8, x8, x24
    4a20:	str	x8, [x23, #40]
    4a24:	b.ne	4a30 <deflate@@Base+0x83c>  // b.any
    4a28:	ldr	x8, [x23, #16]
    4a2c:	str	x8, [x23, #32]
    4a30:	ldr	x8, [x19, #40]
    4a34:	cbnz	x8, 58a0 <deflate@@Base+0x16ac>
    4a38:	ldr	x10, [x19, #24]
    4a3c:	sub	w22, w22, w25
    4a40:	cmp	x10, w22, uxtw
    4a44:	b.cs	4a68 <deflate@@Base+0x874>  // b.hs, b.nlast
    4a48:	ldp	x8, x9, [x19, #56]
    4a4c:	mov	x24, xzr
    4a50:	ldr	x8, [x8, #24]
    4a54:	b	4958 <deflate@@Base+0x764>
    4a58:	mov	w10, #0xc0                  	// #192
    4a5c:	mov	w11, #0x80                  	// #128
    4a60:	csel	w10, w11, w10, eq  // eq = none
    4a64:	b	43d4 <deflate@@Base+0x1e0>
    4a68:	ldp	x8, x9, [x19, #56]
    4a6c:	mov	x24, xzr
    4a70:	mov	w22, w22
    4a74:	ldr	x8, [x8, #24]
    4a78:	ldr	x10, [x19, #16]
    4a7c:	add	x1, x8, x9
    4a80:	mov	x2, x22
    4a84:	add	x0, x10, x24
    4a88:	bl	2310 <memcpy@plt>
    4a8c:	ldr	x8, [x19, #40]
    4a90:	add	x8, x8, x22
    4a94:	cmp	x8, x24
    4a98:	str	x8, [x19, #40]
    4a9c:	b.ls	4ac4 <deflate@@Base+0x8d0>  // b.plast
    4aa0:	ldr	x9, [x19, #56]
    4aa4:	ldr	w9, [x9, #68]
    4aa8:	cbz	w9, 4ac4 <deflate@@Base+0x8d0>
    4aac:	ldr	x9, [x19, #16]
    4ab0:	ldr	x0, [x20, #96]
    4ab4:	sub	w2, w8, w24
    4ab8:	add	x1, x9, x24
    4abc:	bl	2390 <crc32@plt>
    4ac0:	str	x0, [x20, #96]
    4ac4:	str	xzr, [x19, #64]
    4ac8:	mov	w8, #0x49                  	// #73
    4acc:	str	w8, [x19, #8]
    4ad0:	ldr	x8, [x19, #56]
    4ad4:	ldr	x8, [x8, #40]
    4ad8:	cbz	x8, 4c14 <deflate@@Base+0xa20>
    4adc:	ldr	x9, [x19, #40]
    4ae0:	mov	x8, x9
    4ae4:	ldr	x10, [x19, #24]
    4ae8:	cmp	x9, x10
    4aec:	b.ne	4bb8 <deflate@@Base+0x9c4>  // b.any
    4af0:	b	4b04 <deflate@@Base+0x910>
    4af4:	ldr	x9, [x19, #40]
    4af8:	ldr	x10, [x19, #24]
    4afc:	cmp	x9, x10
    4b00:	b.ne	4bb8 <deflate@@Base+0x9c4>  // b.any
    4b04:	cmp	x9, x8
    4b08:	b.ls	4b30 <deflate@@Base+0x93c>  // b.plast
    4b0c:	ldr	x10, [x19, #56]
    4b10:	ldr	w10, [x10, #68]
    4b14:	cbz	w10, 4b30 <deflate@@Base+0x93c>
    4b18:	ldr	x10, [x19, #16]
    4b1c:	ldr	x0, [x20, #96]
    4b20:	sub	w2, w9, w8
    4b24:	add	x1, x10, x8
    4b28:	bl	2390 <crc32@plt>
    4b2c:	str	x0, [x20, #96]
    4b30:	ldr	x22, [x20, #56]
    4b34:	mov	x0, x22
    4b38:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    4b3c:	ldr	w8, [x22, #40]
    4b40:	ldr	w9, [x20, #32]
    4b44:	cmp	w9, w8
    4b48:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4b4c:	cbz	w24, 4bac <deflate@@Base+0x9b8>
    4b50:	ldr	x0, [x20, #24]
    4b54:	ldr	x1, [x22, #32]
    4b58:	mov	w23, w24
    4b5c:	mov	x2, x23
    4b60:	bl	2310 <memcpy@plt>
    4b64:	ldr	x8, [x20, #24]
    4b68:	add	x8, x8, x23
    4b6c:	str	x8, [x20, #24]
    4b70:	ldr	x8, [x22, #32]
    4b74:	add	x8, x8, x23
    4b78:	str	x8, [x22, #32]
    4b7c:	ldr	x8, [x20, #40]
    4b80:	ldr	w9, [x20, #32]
    4b84:	add	x8, x8, x23
    4b88:	sub	w9, w9, w24
    4b8c:	str	x8, [x20, #40]
    4b90:	str	w9, [x20, #32]
    4b94:	ldr	x8, [x22, #40]
    4b98:	subs	x8, x8, x23
    4b9c:	str	x8, [x22, #40]
    4ba0:	b.ne	4bac <deflate@@Base+0x9b8>  // b.any
    4ba4:	ldr	x8, [x22, #16]
    4ba8:	str	x8, [x22, #32]
    4bac:	ldr	x8, [x19, #40]
    4bb0:	cbnz	x8, 58a0 <deflate@@Base+0x16ac>
    4bb4:	mov	x9, xzr
    4bb8:	ldp	x10, x11, [x19, #56]
    4bbc:	ldr	x10, [x10, #40]
    4bc0:	add	x12, x11, #0x1
    4bc4:	str	x12, [x19, #64]
    4bc8:	add	x12, x9, #0x1
    4bcc:	ldrb	w10, [x10, x11]
    4bd0:	ldr	x11, [x19, #16]
    4bd4:	str	x12, [x19, #40]
    4bd8:	strb	w10, [x11, x9]
    4bdc:	cbnz	w10, 4af4 <deflate@@Base+0x900>
    4be0:	ldr	x9, [x19, #56]
    4be4:	ldr	w9, [x9, #68]
    4be8:	cbz	w9, 4c10 <deflate@@Base+0xa1c>
    4bec:	ldr	x9, [x19, #40]
    4bf0:	cmp	x9, x8
    4bf4:	b.ls	4c10 <deflate@@Base+0xa1c>  // b.plast
    4bf8:	ldr	x10, [x19, #16]
    4bfc:	ldr	x0, [x20, #96]
    4c00:	sub	w2, w9, w8
    4c04:	add	x1, x10, x8
    4c08:	bl	2390 <crc32@plt>
    4c0c:	str	x0, [x20, #96]
    4c10:	str	xzr, [x19, #64]
    4c14:	mov	w8, #0x5b                  	// #91
    4c18:	str	w8, [x19, #8]
    4c1c:	ldr	x8, [x19, #56]
    4c20:	ldr	x8, [x8, #56]
    4c24:	cbz	x8, 4d5c <deflate@@Base+0xb68>
    4c28:	ldr	x9, [x19, #40]
    4c2c:	mov	x8, x9
    4c30:	ldr	x10, [x19, #24]
    4c34:	cmp	x9, x10
    4c38:	b.ne	4d04 <deflate@@Base+0xb10>  // b.any
    4c3c:	b	4c50 <deflate@@Base+0xa5c>
    4c40:	ldr	x9, [x19, #40]
    4c44:	ldr	x10, [x19, #24]
    4c48:	cmp	x9, x10
    4c4c:	b.ne	4d04 <deflate@@Base+0xb10>  // b.any
    4c50:	cmp	x9, x8
    4c54:	b.ls	4c7c <deflate@@Base+0xa88>  // b.plast
    4c58:	ldr	x10, [x19, #56]
    4c5c:	ldr	w10, [x10, #68]
    4c60:	cbz	w10, 4c7c <deflate@@Base+0xa88>
    4c64:	ldr	x10, [x19, #16]
    4c68:	ldr	x0, [x20, #96]
    4c6c:	sub	w2, w9, w8
    4c70:	add	x1, x10, x8
    4c74:	bl	2390 <crc32@plt>
    4c78:	str	x0, [x20, #96]
    4c7c:	ldr	x22, [x20, #56]
    4c80:	mov	x0, x22
    4c84:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    4c88:	ldr	w8, [x22, #40]
    4c8c:	ldr	w9, [x20, #32]
    4c90:	cmp	w9, w8
    4c94:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4c98:	cbz	w24, 4cf8 <deflate@@Base+0xb04>
    4c9c:	ldr	x0, [x20, #24]
    4ca0:	ldr	x1, [x22, #32]
    4ca4:	mov	w23, w24
    4ca8:	mov	x2, x23
    4cac:	bl	2310 <memcpy@plt>
    4cb0:	ldr	x8, [x20, #24]
    4cb4:	add	x8, x8, x23
    4cb8:	str	x8, [x20, #24]
    4cbc:	ldr	x8, [x22, #32]
    4cc0:	add	x8, x8, x23
    4cc4:	str	x8, [x22, #32]
    4cc8:	ldr	x8, [x20, #40]
    4ccc:	ldr	w9, [x20, #32]
    4cd0:	add	x8, x8, x23
    4cd4:	sub	w9, w9, w24
    4cd8:	str	x8, [x20, #40]
    4cdc:	str	w9, [x20, #32]
    4ce0:	ldr	x8, [x22, #40]
    4ce4:	subs	x8, x8, x23
    4ce8:	str	x8, [x22, #40]
    4cec:	b.ne	4cf8 <deflate@@Base+0xb04>  // b.any
    4cf0:	ldr	x8, [x22, #16]
    4cf4:	str	x8, [x22, #32]
    4cf8:	ldr	x8, [x19, #40]
    4cfc:	cbnz	x8, 58a0 <deflate@@Base+0x16ac>
    4d00:	mov	x9, xzr
    4d04:	ldp	x10, x11, [x19, #56]
    4d08:	ldr	x10, [x10, #56]
    4d0c:	add	x12, x11, #0x1
    4d10:	str	x12, [x19, #64]
    4d14:	add	x12, x9, #0x1
    4d18:	ldrb	w10, [x10, x11]
    4d1c:	ldr	x11, [x19, #16]
    4d20:	str	x12, [x19, #40]
    4d24:	strb	w10, [x11, x9]
    4d28:	cbnz	w10, 4c40 <deflate@@Base+0xa4c>
    4d2c:	ldr	x9, [x19, #56]
    4d30:	ldr	w9, [x9, #68]
    4d34:	cbz	w9, 4d5c <deflate@@Base+0xb68>
    4d38:	ldr	x9, [x19, #40]
    4d3c:	cmp	x9, x8
    4d40:	b.ls	4d5c <deflate@@Base+0xb68>  // b.plast
    4d44:	ldr	x10, [x19, #16]
    4d48:	ldr	x0, [x20, #96]
    4d4c:	sub	w2, w9, w8
    4d50:	add	x1, x10, x8
    4d54:	bl	2390 <crc32@plt>
    4d58:	str	x0, [x20, #96]
    4d5c:	mov	w8, #0x67                  	// #103
    4d60:	str	w8, [x19, #8]
    4d64:	ldr	x8, [x19, #56]
    4d68:	ldr	w8, [x8, #68]
    4d6c:	cbz	w8, 4e4c <deflate@@Base+0xc58>
    4d70:	ldr	x8, [x19, #40]
    4d74:	ldr	x9, [x19, #24]
    4d78:	add	x10, x8, #0x2
    4d7c:	cmp	x10, x9
    4d80:	b.ls	4e08 <deflate@@Base+0xc14>  // b.plast
    4d84:	ldr	x22, [x20, #56]
    4d88:	mov	x0, x22
    4d8c:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    4d90:	ldr	w8, [x22, #40]
    4d94:	ldr	w9, [x20, #32]
    4d98:	cmp	w9, w8
    4d9c:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4da0:	cbz	w24, 4e00 <deflate@@Base+0xc0c>
    4da4:	ldr	x0, [x20, #24]
    4da8:	ldr	x1, [x22, #32]
    4dac:	mov	w23, w24
    4db0:	mov	x2, x23
    4db4:	bl	2310 <memcpy@plt>
    4db8:	ldr	x8, [x20, #24]
    4dbc:	add	x8, x8, x23
    4dc0:	str	x8, [x20, #24]
    4dc4:	ldr	x8, [x22, #32]
    4dc8:	add	x8, x8, x23
    4dcc:	str	x8, [x22, #32]
    4dd0:	ldr	x8, [x20, #40]
    4dd4:	ldr	w9, [x20, #32]
    4dd8:	add	x8, x8, x23
    4ddc:	sub	w9, w9, w24
    4de0:	str	x8, [x20, #40]
    4de4:	str	w9, [x20, #32]
    4de8:	ldr	x8, [x22, #40]
    4dec:	subs	x8, x8, x23
    4df0:	str	x8, [x22, #40]
    4df4:	b.ne	4e00 <deflate@@Base+0xc0c>  // b.any
    4df8:	ldr	x8, [x22, #16]
    4dfc:	str	x8, [x22, #32]
    4e00:	ldr	x8, [x19, #40]
    4e04:	cbnz	x8, 58a0 <deflate@@Base+0x16ac>
    4e08:	ldr	x9, [x20, #96]
    4e0c:	ldr	x10, [x19, #16]
    4e10:	add	x11, x8, #0x1
    4e14:	str	x11, [x19, #40]
    4e18:	mov	x0, xzr
    4e1c:	strb	w9, [x10, x8]
    4e20:	ldr	x8, [x20, #96]
    4e24:	ldr	x9, [x19, #40]
    4e28:	ldr	x10, [x19, #16]
    4e2c:	mov	x1, xzr
    4e30:	lsr	x8, x8, #8
    4e34:	add	x11, x9, #0x1
    4e38:	mov	w2, wzr
    4e3c:	str	x11, [x19, #40]
    4e40:	strb	w8, [x10, x9]
    4e44:	bl	2390 <crc32@plt>
    4e48:	str	x0, [x20, #96]
    4e4c:	mov	w8, #0x71                  	// #113
    4e50:	str	w8, [x19, #8]
    4e54:	ldr	x22, [x20, #56]
    4e58:	mov	x0, x22
    4e5c:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    4e60:	ldr	w8, [x22, #40]
    4e64:	ldr	w9, [x20, #32]
    4e68:	cmp	w9, w8
    4e6c:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4e70:	cbz	w24, 4ed0 <deflate@@Base+0xcdc>
    4e74:	ldr	x0, [x20, #24]
    4e78:	ldr	x1, [x22, #32]
    4e7c:	mov	w23, w24
    4e80:	mov	x2, x23
    4e84:	bl	2310 <memcpy@plt>
    4e88:	ldr	x8, [x20, #24]
    4e8c:	add	x8, x8, x23
    4e90:	str	x8, [x20, #24]
    4e94:	ldr	x8, [x22, #32]
    4e98:	add	x8, x8, x23
    4e9c:	str	x8, [x22, #32]
    4ea0:	ldr	x8, [x20, #40]
    4ea4:	ldr	w9, [x20, #32]
    4ea8:	add	x8, x8, x23
    4eac:	sub	w9, w9, w24
    4eb0:	str	x8, [x20, #40]
    4eb4:	str	w9, [x20, #32]
    4eb8:	ldr	x8, [x22, #40]
    4ebc:	subs	x8, x8, x23
    4ec0:	str	x8, [x22, #40]
    4ec4:	b.ne	4ed0 <deflate@@Base+0xcdc>  // b.any
    4ec8:	ldr	x8, [x22, #16]
    4ecc:	str	x8, [x22, #32]
    4ed0:	ldr	x8, [x19, #40]
    4ed4:	cbnz	x8, 58a0 <deflate@@Base+0x16ac>
    4ed8:	ldr	w8, [x20, #8]
    4edc:	cbnz	w8, 4ee8 <deflate@@Base+0xcf4>
    4ee0:	ldr	w8, [x19, #180]
    4ee4:	cbz	w8, 50c0 <deflate@@Base+0xecc>
    4ee8:	ldrsw	x8, [x19, #196]
    4eec:	cbz	w8, 5074 <deflate@@Base+0xe80>
    4ef0:	ldr	w9, [x19, #200]
    4ef4:	cmp	w9, #0x3
    4ef8:	b.eq	50d4 <deflate@@Base+0xee0>  // b.none
    4efc:	cmp	w9, #0x2
    4f00:	b.eq	4f3c <deflate@@Base+0xd48>  // b.none
    4f04:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    4f08:	add	x9, x9, #0xc68
    4f0c:	add	x8, x9, x8, lsl #4
    4f10:	ldr	x8, [x8, #8]
    4f14:	mov	x0, x19
    4f18:	mov	w1, w21
    4f1c:	blr	x8
    4f20:	orr	w8, w0, #0x1
    4f24:	cmp	w8, #0x3
    4f28:	b.eq	508c <deflate@@Base+0xe98>  // b.none
    4f2c:	b	5094 <deflate@@Base+0xea0>
    4f30:	ldr	x8, [x19]
    4f34:	ldr	w8, [x8, #32]
    4f38:	cbz	w8, 5890 <deflate@@Base+0x169c>
    4f3c:	ldr	w8, [x19, #180]
    4f40:	cbnz	w8, 4f54 <deflate@@Base+0xd60>
    4f44:	mov	x0, x19
    4f48:	bl	3784 <deflateSetDictionary@@Base+0x214>
    4f4c:	ldr	w8, [x19, #180]
    4f50:	cbz	w8, 53fc <deflate@@Base+0x1208>
    4f54:	ldr	x8, [x19, #96]
    4f58:	ldr	w9, [x19, #172]
    4f5c:	ldr	x10, [x19, #5904]
    4f60:	ldr	w11, [x19, #5900]
    4f64:	str	wzr, [x19, #160]
    4f68:	ldrb	w8, [x8, x9]
    4f6c:	strh	wzr, [x10, x11, lsl #1]
    4f70:	ldr	x9, [x19, #5888]
    4f74:	add	w10, w11, #0x1
    4f78:	str	w10, [x19, #5900]
    4f7c:	add	x10, x19, x8, lsl #2
    4f80:	strb	w8, [x9, x11]
    4f84:	ldrh	w8, [x10, #212]
    4f88:	add	w8, w8, #0x1
    4f8c:	strh	w8, [x10, #212]
    4f90:	ldr	w8, [x19, #5896]
    4f94:	ldr	w9, [x19, #180]
    4f98:	ldr	w10, [x19, #172]
    4f9c:	ldr	w11, [x19, #5900]
    4fa0:	sub	w12, w8, #0x1
    4fa4:	sub	w9, w9, #0x1
    4fa8:	add	w8, w10, #0x1
    4fac:	cmp	w11, w12
    4fb0:	str	w9, [x19, #180]
    4fb4:	str	w8, [x19, #172]
    4fb8:	b.ne	4f3c <deflate@@Base+0xd48>  // b.any
    4fbc:	ldr	x9, [x19, #152]
    4fc0:	tbnz	x9, #63, 4fd0 <deflate@@Base+0xddc>
    4fc4:	ldr	x10, [x19, #96]
    4fc8:	add	x1, x10, w9, uxtw
    4fcc:	b	4fd4 <deflate@@Base+0xde0>
    4fd0:	mov	x1, xzr
    4fd4:	mov	w8, w8
    4fd8:	sub	x2, x8, x9
    4fdc:	mov	x0, x19
    4fe0:	mov	w3, wzr
    4fe4:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    4fe8:	ldr	w8, [x19, #172]
    4fec:	ldr	x24, [x19]
    4ff0:	str	x8, [x19, #152]
    4ff4:	ldr	x22, [x24, #56]
    4ff8:	mov	x0, x22
    4ffc:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    5000:	ldr	w8, [x22, #40]
    5004:	ldr	w9, [x24, #32]
    5008:	cmp	w9, w8
    500c:	csel	w25, w9, w8, cc  // cc = lo, ul, last
    5010:	cbz	w25, 4f30 <deflate@@Base+0xd3c>
    5014:	ldr	x0, [x24, #24]
    5018:	ldr	x1, [x22, #32]
    501c:	mov	w23, w25
    5020:	mov	x2, x23
    5024:	bl	2310 <memcpy@plt>
    5028:	ldr	x8, [x24, #24]
    502c:	add	x8, x8, x23
    5030:	str	x8, [x24, #24]
    5034:	ldr	x8, [x22, #32]
    5038:	add	x8, x8, x23
    503c:	str	x8, [x22, #32]
    5040:	ldr	x8, [x24, #40]
    5044:	ldr	w9, [x24, #32]
    5048:	add	x8, x8, x23
    504c:	sub	w9, w9, w25
    5050:	str	x8, [x24, #40]
    5054:	str	w9, [x24, #32]
    5058:	ldr	x8, [x22, #40]
    505c:	subs	x8, x8, x23
    5060:	str	x8, [x22, #40]
    5064:	b.ne	4f30 <deflate@@Base+0xd3c>  // b.any
    5068:	ldr	x8, [x22, #16]
    506c:	str	x8, [x22, #32]
    5070:	b	4f30 <deflate@@Base+0xd3c>
    5074:	mov	x0, x19
    5078:	mov	w1, w21
    507c:	bl	5a94 <deflateBound@@ZLIB_1.2.0+0x160>
    5080:	orr	w8, w0, #0x1
    5084:	cmp	w8, #0x3
    5088:	b.ne	5094 <deflate@@Base+0xea0>  // b.any
    508c:	mov	w8, #0x29a                 	// #666
    5090:	str	w8, [x19, #8]
    5094:	tst	w0, #0xfffffffd
    5098:	b.eq	5890 <deflate@@Base+0x169c>  // b.none
    509c:	cmp	w0, #0x1
    50a0:	b.ne	54e4 <deflate@@Base+0x12f0>  // b.any
    50a4:	cmp	w21, #0x5
    50a8:	b.eq	5464 <deflate@@Base+0x1270>  // b.none
    50ac:	mov	x0, x19
    50b0:	cmp	w21, #0x1
    50b4:	b.ne	541c <deflate@@Base+0x1228>  // b.any
    50b8:	bl	bdf0 <inflateCodesUsed@@ZLIB_1.2.9+0x9b4>
    50bc:	b	5464 <deflate@@Base+0x1270>
    50c0:	cbz	w21, 54e4 <deflate@@Base+0x12f0>
    50c4:	ldr	w8, [x19, #8]
    50c8:	cmp	w8, #0x29a
    50cc:	b.ne	4ee8 <deflate@@Base+0xcf4>  // b.any
    50d0:	b	54e4 <deflate@@Base+0x12f0>
    50d4:	adrp	x25, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    50d8:	mov	w24, #0x1                   	// #1
    50dc:	add	x25, x25, #0xdb8
    50e0:	adrp	x26, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    50e4:	b	50f4 <deflate@@Base+0xf00>
    50e8:	ldr	x8, [x19]
    50ec:	ldr	w8, [x8, #32]
    50f0:	cbz	w8, 5890 <deflate@@Base+0x169c>
    50f4:	ldr	w8, [x19, #180]
    50f8:	cmp	w8, #0x103
    50fc:	b.cs	5130 <deflate@@Base+0xf3c>  // b.hs, b.nlast
    5100:	mov	x0, x19
    5104:	bl	3784 <deflateSetDictionary@@Base+0x214>
    5108:	ldr	w8, [x19, #180]
    510c:	cbnz	w21, 5118 <deflate@@Base+0xf24>
    5110:	cmp	w8, #0x103
    5114:	b.cc	5890 <deflate@@Base+0x169c>  // b.lo, b.ul, b.last
    5118:	cbz	w8, 56dc <deflate@@Base+0x14e8>
    511c:	cmp	w8, #0x2
    5120:	str	wzr, [x19, #160]
    5124:	b.hi	5134 <deflate@@Base+0xf40>  // b.pmore
    5128:	ldr	w9, [x19, #172]
    512c:	b	52e4 <deflate@@Base+0x10f0>
    5130:	str	wzr, [x19, #160]
    5134:	ldr	w9, [x19, #172]
    5138:	cbz	w9, 52e4 <deflate@@Base+0x10f0>
    513c:	ldr	x10, [x19, #96]
    5140:	add	x11, x10, x9
    5144:	ldurb	w12, [x11, #-1]
    5148:	ldrb	w10, [x11]
    514c:	cmp	w12, w10
    5150:	b.ne	52e4 <deflate@@Base+0x10f0>  // b.any
    5154:	ldrb	w10, [x11, #1]
    5158:	cmp	w12, w10
    515c:	b.ne	52e4 <deflate@@Base+0x10f0>  // b.any
    5160:	ldrb	w10, [x11, #2]
    5164:	cmp	w12, w10
    5168:	b.ne	52e4 <deflate@@Base+0x10f0>  // b.any
    516c:	mov	x13, xzr
    5170:	add	x10, x11, #0x102
    5174:	add	x14, x11, x13
    5178:	ldrb	w15, [x14, #3]
    517c:	cmp	w12, w15
    5180:	b.ne	5200 <deflate@@Base+0x100c>  // b.any
    5184:	ldrb	w14, [x14, #4]
    5188:	cmp	w12, w14
    518c:	b.ne	5208 <deflate@@Base+0x1014>  // b.any
    5190:	add	x14, x11, x13
    5194:	ldrb	w15, [x14, #5]
    5198:	cmp	w12, w15
    519c:	b.ne	5214 <deflate@@Base+0x1020>  // b.any
    51a0:	ldrb	w14, [x14, #6]
    51a4:	cmp	w12, w14
    51a8:	b.ne	521c <deflate@@Base+0x1028>  // b.any
    51ac:	add	x14, x11, x13
    51b0:	ldrb	w15, [x14, #7]
    51b4:	cmp	w12, w15
    51b8:	b.ne	5228 <deflate@@Base+0x1034>  // b.any
    51bc:	ldrb	w14, [x14, #8]
    51c0:	cmp	w12, w14
    51c4:	b.ne	5230 <deflate@@Base+0x103c>  // b.any
    51c8:	add	x14, x11, x13
    51cc:	ldrb	w15, [x14, #9]
    51d0:	cmp	w12, w15
    51d4:	b.ne	523c <deflate@@Base+0x1048>  // b.any
    51d8:	add	x15, x13, #0x2
    51dc:	cmp	x15, #0xf9
    51e0:	add	x13, x13, #0x8
    51e4:	b.hi	51f4 <deflate@@Base+0x1000>  // b.pmore
    51e8:	ldrb	w14, [x14, #10]
    51ec:	cmp	w12, w14
    51f0:	b.eq	5174 <deflate@@Base+0xf80>  // b.none
    51f4:	add	x11, x11, x13
    51f8:	add	x11, x11, #0x2
    51fc:	b	5240 <deflate@@Base+0x104c>
    5200:	add	x11, x14, #0x3
    5204:	b	5240 <deflate@@Base+0x104c>
    5208:	add	x11, x11, x13
    520c:	add	x11, x11, #0x4
    5210:	b	5240 <deflate@@Base+0x104c>
    5214:	add	x11, x14, #0x5
    5218:	b	5240 <deflate@@Base+0x104c>
    521c:	add	x11, x11, x13
    5220:	add	x11, x11, #0x6
    5224:	b	5240 <deflate@@Base+0x104c>
    5228:	add	x11, x14, #0x7
    522c:	b	5240 <deflate@@Base+0x104c>
    5230:	add	x11, x11, x13
    5234:	add	x11, x11, #0x8
    5238:	b	5240 <deflate@@Base+0x104c>
    523c:	add	x11, x14, #0x9
    5240:	sub	w10, w11, w10
    5244:	add	w10, w10, #0x102
    5248:	cmp	w10, w8
    524c:	csel	w10, w8, w10, hi  // hi = pmore
    5250:	subs	w8, w10, #0x3
    5254:	str	w10, [x19, #160]
    5258:	b.cc	52e4 <deflate@@Base+0x10f0>  // b.lo, b.ul, b.last
    525c:	ldr	x9, [x19, #5904]
    5260:	ldr	w10, [x19, #5900]
    5264:	strh	w24, [x9, x10, lsl #1]
    5268:	add	w9, w10, #0x1
    526c:	ldr	x11, [x19, #5888]
    5270:	str	w9, [x19, #5900]
    5274:	and	x9, x8, #0xff
    5278:	ldrb	w9, [x25, x9]
    527c:	strb	w8, [x11, x10]
    5280:	mov	w8, #0x400                 	// #1024
    5284:	ldrb	w10, [x26, #3000]
    5288:	bfi	x8, x9, #2, #8
    528c:	add	x8, x8, x19
    5290:	ldrh	w9, [x8, #216]
    5294:	add	x10, x19, x10, lsl #2
    5298:	add	w9, w9, #0x1
    529c:	strh	w9, [x8, #216]
    52a0:	ldrh	w8, [x10, #2504]
    52a4:	add	w8, w8, #0x1
    52a8:	strh	w8, [x10, #2504]
    52ac:	ldr	w8, [x19, #160]
    52b0:	ldr	w9, [x19, #180]
    52b4:	ldr	w10, [x19, #172]
    52b8:	ldr	w11, [x19, #5896]
    52bc:	str	wzr, [x19, #160]
    52c0:	sub	w9, w9, w8
    52c4:	add	w8, w10, w8
    52c8:	ldr	w10, [x19, #5900]
    52cc:	sub	w11, w11, #0x1
    52d0:	str	w9, [x19, #180]
    52d4:	str	w8, [x19, #172]
    52d8:	cmp	w10, w11
    52dc:	b.ne	50f4 <deflate@@Base+0xf00>  // b.any
    52e0:	b	5344 <deflate@@Base+0x1150>
    52e4:	ldr	x8, [x19, #96]
    52e8:	ldr	x10, [x19, #5904]
    52ec:	ldr	w11, [x19, #5900]
    52f0:	ldrb	w8, [x8, w9, uxtw]
    52f4:	strh	wzr, [x10, x11, lsl #1]
    52f8:	ldr	x9, [x19, #5888]
    52fc:	add	w10, w11, #0x1
    5300:	str	w10, [x19, #5900]
    5304:	add	x10, x19, x8, lsl #2
    5308:	strb	w8, [x9, x11]
    530c:	ldrh	w8, [x10, #212]
    5310:	add	w8, w8, #0x1
    5314:	strh	w8, [x10, #212]
    5318:	ldr	w8, [x19, #5896]
    531c:	ldr	w9, [x19, #180]
    5320:	ldr	w10, [x19, #172]
    5324:	ldr	w11, [x19, #5900]
    5328:	sub	w12, w8, #0x1
    532c:	sub	w9, w9, #0x1
    5330:	add	w8, w10, #0x1
    5334:	cmp	w11, w12
    5338:	str	w9, [x19, #180]
    533c:	str	w8, [x19, #172]
    5340:	b.ne	50f4 <deflate@@Base+0xf00>  // b.any
    5344:	ldr	x9, [x19, #152]
    5348:	tbnz	x9, #63, 5358 <deflate@@Base+0x1164>
    534c:	ldr	x10, [x19, #96]
    5350:	add	x1, x10, w9, uxtw
    5354:	b	535c <deflate@@Base+0x1168>
    5358:	mov	x1, xzr
    535c:	mov	w8, w8
    5360:	sub	x2, x8, x9
    5364:	mov	x0, x19
    5368:	mov	w3, wzr
    536c:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    5370:	ldr	w8, [x19, #172]
    5374:	ldr	x27, [x19]
    5378:	str	x8, [x19, #152]
    537c:	ldr	x22, [x27, #56]
    5380:	mov	x0, x22
    5384:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    5388:	ldr	w8, [x22, #40]
    538c:	ldr	w9, [x27, #32]
    5390:	cmp	w9, w8
    5394:	csel	w28, w9, w8, cc  // cc = lo, ul, last
    5398:	cbz	w28, 50e8 <deflate@@Base+0xef4>
    539c:	ldr	x0, [x27, #24]
    53a0:	ldr	x1, [x22, #32]
    53a4:	mov	w23, w28
    53a8:	mov	x2, x23
    53ac:	bl	2310 <memcpy@plt>
    53b0:	ldr	x8, [x27, #24]
    53b4:	add	x8, x8, x23
    53b8:	str	x8, [x27, #24]
    53bc:	ldr	x8, [x22, #32]
    53c0:	add	x8, x8, x23
    53c4:	str	x8, [x22, #32]
    53c8:	ldr	x8, [x27, #40]
    53cc:	ldr	w9, [x27, #32]
    53d0:	add	x8, x8, x23
    53d4:	sub	w9, w9, w28
    53d8:	str	x8, [x27, #40]
    53dc:	str	w9, [x27, #32]
    53e0:	ldr	x8, [x22, #40]
    53e4:	subs	x8, x8, x23
    53e8:	str	x8, [x22, #40]
    53ec:	b.ne	50e8 <deflate@@Base+0xef4>  // b.any
    53f0:	ldr	x8, [x22, #16]
    53f4:	str	x8, [x22, #32]
    53f8:	b	50e8 <deflate@@Base+0xef4>
    53fc:	cbz	w21, 5890 <deflate@@Base+0x169c>
    5400:	cmp	w21, #0x4
    5404:	str	wzr, [x19, #5932]
    5408:	b.ne	57d4 <deflate@@Base+0x15e0>  // b.any
    540c:	ldr	x8, [x19, #152]
    5410:	tbz	x8, #63, 56f0 <deflate@@Base+0x14fc>
    5414:	mov	x1, xzr
    5418:	b	56f8 <deflate@@Base+0x1504>
    541c:	mov	x1, xzr
    5420:	mov	x2, xzr
    5424:	mov	w3, wzr
    5428:	bl	bbec <inflateCodesUsed@@ZLIB_1.2.9+0x7b0>
    542c:	cmp	w21, #0x3
    5430:	b.ne	5464 <deflate@@Base+0x1270>  // b.any
    5434:	ldr	w8, [x19, #132]
    5438:	ldr	x0, [x19, #120]
    543c:	mov	w1, wzr
    5440:	sub	w8, w8, #0x1
    5444:	lsl	x2, x8, #1
    5448:	strh	wzr, [x0, x2]
    544c:	bl	23f0 <memset@plt>
    5450:	ldr	w8, [x19, #180]
    5454:	cbnz	w8, 5464 <deflate@@Base+0x1270>
    5458:	str	wzr, [x19, #172]
    545c:	str	xzr, [x19, #152]
    5460:	str	wzr, [x19, #5932]
    5464:	ldr	x22, [x20, #56]
    5468:	mov	x0, x22
    546c:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    5470:	ldr	w9, [x22, #40]
    5474:	ldr	w8, [x20, #32]
    5478:	cmp	w8, w9
    547c:	csel	w24, w8, w9, cc  // cc = lo, ul, last
    5480:	cbz	w24, 54e0 <deflate@@Base+0x12ec>
    5484:	ldr	x0, [x20, #24]
    5488:	ldr	x1, [x22, #32]
    548c:	mov	w23, w24
    5490:	mov	x2, x23
    5494:	bl	2310 <memcpy@plt>
    5498:	ldr	x8, [x20, #24]
    549c:	add	x8, x8, x23
    54a0:	str	x8, [x20, #24]
    54a4:	ldr	x8, [x22, #32]
    54a8:	add	x8, x8, x23
    54ac:	str	x8, [x22, #32]
    54b0:	ldr	x8, [x20, #40]
    54b4:	ldr	w9, [x20, #32]
    54b8:	add	x10, x8, x23
    54bc:	sub	w8, w9, w24
    54c0:	str	x10, [x20, #40]
    54c4:	str	w8, [x20, #32]
    54c8:	ldr	x9, [x22, #40]
    54cc:	subs	x9, x9, x23
    54d0:	str	x9, [x22, #40]
    54d4:	b.ne	54e0 <deflate@@Base+0x12ec>  // b.any
    54d8:	ldr	x9, [x22, #16]
    54dc:	str	x9, [x22, #32]
    54e0:	cbz	w8, 58a0 <deflate@@Base+0x16ac>
    54e4:	cmp	w21, #0x4
    54e8:	b.ne	5898 <deflate@@Base+0x16a4>  // b.any
    54ec:	ldr	w9, [x19, #48]
    54f0:	cmp	w9, #0x1
    54f4:	b.lt	55d0 <deflate@@Base+0x13dc>  // b.tstop
    54f8:	ldr	x8, [x20, #96]
    54fc:	cmp	w9, #0x2
    5500:	b.ne	55d8 <deflate@@Base+0x13e4>  // b.any
    5504:	ldr	x9, [x19, #40]
    5508:	ldr	x10, [x19, #16]
    550c:	add	x11, x9, #0x1
    5510:	str	x11, [x19, #40]
    5514:	strb	w8, [x10, x9]
    5518:	ldr	x8, [x20, #96]
    551c:	ldr	x9, [x19, #40]
    5520:	ldr	x10, [x19, #16]
    5524:	lsr	x8, x8, #8
    5528:	add	x11, x9, #0x1
    552c:	str	x11, [x19, #40]
    5530:	strb	w8, [x10, x9]
    5534:	ldr	x8, [x20, #96]
    5538:	ldr	x9, [x19, #40]
    553c:	ldr	x10, [x19, #16]
    5540:	lsr	x8, x8, #16
    5544:	add	x11, x9, #0x1
    5548:	str	x11, [x19, #40]
    554c:	strb	w8, [x10, x9]
    5550:	ldr	x8, [x20, #96]
    5554:	ldr	x9, [x19, #40]
    5558:	ldr	x10, [x19, #16]
    555c:	lsr	x8, x8, #24
    5560:	add	x11, x9, #0x1
    5564:	str	x11, [x19, #40]
    5568:	strb	w8, [x10, x9]
    556c:	ldr	x8, [x19, #40]
    5570:	ldr	x9, [x20, #16]
    5574:	ldr	x10, [x19, #16]
    5578:	add	x11, x8, #0x1
    557c:	str	x11, [x19, #40]
    5580:	strb	w9, [x10, x8]
    5584:	ldr	x8, [x20, #16]
    5588:	ldr	x9, [x19, #40]
    558c:	ldr	x10, [x19, #16]
    5590:	lsr	x8, x8, #8
    5594:	add	x11, x9, #0x1
    5598:	str	x11, [x19, #40]
    559c:	strb	w8, [x10, x9]
    55a0:	ldr	x8, [x20, #16]
    55a4:	ldr	x9, [x19, #40]
    55a8:	ldr	x10, [x19, #16]
    55ac:	lsr	x8, x8, #16
    55b0:	add	x11, x9, #0x1
    55b4:	str	x11, [x19, #40]
    55b8:	strb	w8, [x10, x9]
    55bc:	ldr	x8, [x20, #16]
    55c0:	ldr	x9, [x19, #40]
    55c4:	ldr	x10, [x19, #16]
    55c8:	lsr	x8, x8, #24
    55cc:	b	562c <deflate@@Base+0x1438>
    55d0:	mov	w0, #0x1                   	// #1
    55d4:	b	427c <deflate@@Base+0x88>
    55d8:	ldr	x9, [x19, #40]
    55dc:	ldr	x10, [x19, #16]
    55e0:	lsr	x11, x8, #24
    55e4:	lsr	x8, x8, #16
    55e8:	add	x12, x9, #0x1
    55ec:	str	x12, [x19, #40]
    55f0:	strb	w11, [x10, x9]
    55f4:	ldr	x9, [x19, #40]
    55f8:	ldr	x10, [x19, #16]
    55fc:	add	x11, x9, #0x1
    5600:	str	x11, [x19, #40]
    5604:	strb	w8, [x10, x9]
    5608:	ldr	x8, [x20, #96]
    560c:	ldr	x9, [x19, #40]
    5610:	ldr	x10, [x19, #16]
    5614:	ubfx	x11, x8, #8, #24
    5618:	add	x12, x9, #0x1
    561c:	str	x12, [x19, #40]
    5620:	strb	w11, [x10, x9]
    5624:	ldr	x9, [x19, #40]
    5628:	ldr	x10, [x19, #16]
    562c:	add	x11, x9, #0x1
    5630:	add	x9, x10, x9
    5634:	str	x11, [x19, #40]
    5638:	strb	w8, [x9]
    563c:	ldr	x21, [x20, #56]
    5640:	mov	x0, x21
    5644:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    5648:	ldr	w8, [x21, #40]
    564c:	ldr	w9, [x20, #32]
    5650:	cmp	w9, w8
    5654:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    5658:	cbz	w23, 56b8 <deflate@@Base+0x14c4>
    565c:	ldr	x0, [x20, #24]
    5660:	ldr	x1, [x21, #32]
    5664:	mov	w22, w23
    5668:	mov	x2, x22
    566c:	bl	2310 <memcpy@plt>
    5670:	ldr	x8, [x20, #24]
    5674:	add	x8, x8, x22
    5678:	str	x8, [x20, #24]
    567c:	ldr	x8, [x21, #32]
    5680:	add	x8, x8, x22
    5684:	str	x8, [x21, #32]
    5688:	ldr	x8, [x20, #40]
    568c:	ldr	w9, [x20, #32]
    5690:	add	x8, x8, x22
    5694:	sub	w9, w9, w23
    5698:	str	x8, [x20, #40]
    569c:	str	w9, [x20, #32]
    56a0:	ldr	x8, [x21, #40]
    56a4:	subs	x8, x8, x22
    56a8:	str	x8, [x21, #40]
    56ac:	b.ne	56b8 <deflate@@Base+0x14c4>  // b.any
    56b0:	ldr	x8, [x21, #16]
    56b4:	str	x8, [x21, #32]
    56b8:	ldr	w8, [x19, #48]
    56bc:	cmp	w8, #0x1
    56c0:	b.lt	56cc <deflate@@Base+0x14d8>  // b.tstop
    56c4:	neg	w8, w8
    56c8:	str	w8, [x19, #48]
    56cc:	ldr	x8, [x19, #40]
    56d0:	cmp	x8, #0x0
    56d4:	cset	w0, eq  // eq = none
    56d8:	b	427c <deflate@@Base+0x88>
    56dc:	cmp	w21, #0x4
    56e0:	str	wzr, [x19, #5932]
    56e4:	b.ne	57b8 <deflate@@Base+0x15c4>  // b.any
    56e8:	ldr	x8, [x19, #152]
    56ec:	tbnz	x8, #63, 5414 <deflate@@Base+0x1220>
    56f0:	ldr	x9, [x19, #96]
    56f4:	add	x1, x9, w8, uxtw
    56f8:	ldr	w9, [x19, #172]
    56fc:	mov	w3, #0x1                   	// #1
    5700:	mov	x0, x19
    5704:	sub	x2, x9, x8
    5708:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    570c:	ldr	w8, [x19, #172]
    5710:	ldr	x24, [x19]
    5714:	str	x8, [x19, #152]
    5718:	ldr	x22, [x24, #56]
    571c:	mov	x0, x22
    5720:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    5724:	ldr	w8, [x22, #40]
    5728:	ldr	w9, [x24, #32]
    572c:	cmp	w9, w8
    5730:	csel	w25, w9, w8, cc  // cc = lo, ul, last
    5734:	cbz	w25, 5794 <deflate@@Base+0x15a0>
    5738:	ldr	x0, [x24, #24]
    573c:	ldr	x1, [x22, #32]
    5740:	mov	w23, w25
    5744:	mov	x2, x23
    5748:	bl	2310 <memcpy@plt>
    574c:	ldr	x8, [x24, #24]
    5750:	add	x8, x8, x23
    5754:	str	x8, [x24, #24]
    5758:	ldr	x8, [x22, #32]
    575c:	add	x8, x8, x23
    5760:	str	x8, [x22, #32]
    5764:	ldr	x8, [x24, #40]
    5768:	ldr	w9, [x24, #32]
    576c:	add	x8, x8, x23
    5770:	sub	w9, w9, w25
    5774:	str	x8, [x24, #40]
    5778:	str	w9, [x24, #32]
    577c:	ldr	x8, [x22, #40]
    5780:	subs	x8, x8, x23
    5784:	str	x8, [x22, #40]
    5788:	b.ne	5794 <deflate@@Base+0x15a0>  // b.any
    578c:	ldr	x8, [x22, #16]
    5790:	str	x8, [x22, #32]
    5794:	ldr	x8, [x19]
    5798:	ldr	w8, [x8, #32]
    579c:	cmp	w8, #0x0
    57a0:	mov	w8, #0x2                   	// #2
    57a4:	cinc	w0, w8, ne  // ne = any
    57a8:	orr	w8, w0, #0x1
    57ac:	cmp	w8, #0x3
    57b0:	b.eq	508c <deflate@@Base+0xe98>  // b.none
    57b4:	b	5094 <deflate@@Base+0xea0>
    57b8:	ldr	w8, [x19, #5900]
    57bc:	cbz	w8, 50a4 <deflate@@Base+0xeb0>
    57c0:	ldr	x8, [x19, #152]
    57c4:	tbnz	x8, #63, 57e4 <deflate@@Base+0x15f0>
    57c8:	ldr	x9, [x19, #96]
    57cc:	add	x1, x9, w8, uxtw
    57d0:	b	57e8 <deflate@@Base+0x15f4>
    57d4:	ldr	w8, [x19, #5900]
    57d8:	cbz	w8, 50a4 <deflate@@Base+0xeb0>
    57dc:	ldr	x8, [x19, #152]
    57e0:	tbz	x8, #63, 57c8 <deflate@@Base+0x15d4>
    57e4:	mov	x1, xzr
    57e8:	ldr	w9, [x19, #172]
    57ec:	mov	x0, x19
    57f0:	mov	w3, wzr
    57f4:	sub	x2, x9, x8
    57f8:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    57fc:	ldr	w8, [x19, #172]
    5800:	ldr	x24, [x19]
    5804:	str	x8, [x19, #152]
    5808:	ldr	x22, [x24, #56]
    580c:	mov	x0, x22
    5810:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    5814:	ldr	w8, [x22, #40]
    5818:	ldr	w9, [x24, #32]
    581c:	cmp	w9, w8
    5820:	csel	w25, w9, w8, cc  // cc = lo, ul, last
    5824:	cbz	w25, 5884 <deflate@@Base+0x1690>
    5828:	ldr	x0, [x24, #24]
    582c:	ldr	x1, [x22, #32]
    5830:	mov	w23, w25
    5834:	mov	x2, x23
    5838:	bl	2310 <memcpy@plt>
    583c:	ldr	x8, [x24, #24]
    5840:	add	x8, x8, x23
    5844:	str	x8, [x24, #24]
    5848:	ldr	x8, [x22, #32]
    584c:	add	x8, x8, x23
    5850:	str	x8, [x22, #32]
    5854:	ldr	x8, [x24, #40]
    5858:	ldr	w9, [x24, #32]
    585c:	add	x8, x8, x23
    5860:	sub	w9, w9, w25
    5864:	str	x8, [x24, #40]
    5868:	str	w9, [x24, #32]
    586c:	ldr	x8, [x22, #40]
    5870:	subs	x8, x8, x23
    5874:	str	x8, [x22, #40]
    5878:	b.ne	5884 <deflate@@Base+0x1690>  // b.any
    587c:	ldr	x8, [x22, #16]
    5880:	str	x8, [x22, #32]
    5884:	ldr	x8, [x19]
    5888:	ldr	w8, [x8, #32]
    588c:	cbnz	w8, 50a4 <deflate@@Base+0xeb0>
    5890:	ldr	w8, [x20, #32]
    5894:	cbz	w8, 58a0 <deflate@@Base+0x16ac>
    5898:	mov	w0, wzr
    589c:	b	427c <deflate@@Base+0x88>
    58a0:	mov	w8, #0xffffffff            	// #-1
    58a4:	mov	w0, wzr
    58a8:	str	w8, [x19, #76]
    58ac:	b	427c <deflate@@Base+0x88>

00000000000058b0 <deflateTune@@ZLIB_1.2.2.3>:
    58b0:	cbz	x0, 58d8 <deflateTune@@ZLIB_1.2.2.3+0x28>
    58b4:	ldr	x8, [x0, #64]
    58b8:	cbz	x8, 58d8 <deflateTune@@ZLIB_1.2.2.3+0x28>
    58bc:	ldr	x8, [x0, #72]
    58c0:	cbz	x8, 58d8 <deflateTune@@ZLIB_1.2.2.3+0x28>
    58c4:	ldr	x8, [x0, #56]
    58c8:	cbz	x8, 58d8 <deflateTune@@ZLIB_1.2.2.3+0x28>
    58cc:	ldr	x9, [x8]
    58d0:	cmp	x9, x0
    58d4:	b.eq	58e0 <deflateTune@@ZLIB_1.2.2.3+0x30>  // b.none
    58d8:	mov	w0, #0xfffffffe            	// #-2
    58dc:	ret
    58e0:	ldr	w9, [x8, #8]
    58e4:	sub	w10, w9, #0x39
    58e8:	cmp	w10, #0x38
    58ec:	b.hi	5920 <deflateTune@@ZLIB_1.2.2.3+0x70>  // b.pmore
    58f0:	mov	w11, #0x1                   	// #1
    58f4:	lsl	x10, x11, x10
    58f8:	mov	x11, #0x1001                	// #4097
    58fc:	movk	x11, #0x1, lsl #16
    5900:	movk	x11, #0x4004, lsl #32
    5904:	movk	x11, #0x100, lsl #48
    5908:	tst	x10, x11
    590c:	b.eq	5920 <deflateTune@@ZLIB_1.2.2.3+0x70>  // b.none
    5910:	mov	w0, wzr
    5914:	stp	w1, w3, [x8, #204]
    5918:	stp	w4, w2, [x8, #188]
    591c:	ret
    5920:	cmp	w9, #0x29a
    5924:	b.eq	5910 <deflateTune@@ZLIB_1.2.2.3+0x60>  // b.none
    5928:	cmp	w9, #0x2a
    592c:	b.ne	58d8 <deflateTune@@ZLIB_1.2.2.3+0x28>  // b.any
    5930:	b	5910 <deflateTune@@ZLIB_1.2.2.3+0x60>

0000000000005934 <deflateBound@@ZLIB_1.2.0>:
    5934:	add	x8, x1, #0x7
    5938:	add	x9, x1, x8, lsr #3
    593c:	add	x10, x1, #0x3f
    5940:	add	x9, x9, x10, lsr #6
    5944:	cbz	x0, 596c <deflateBound@@ZLIB_1.2.0+0x38>
    5948:	ldr	x10, [x0, #64]
    594c:	cbz	x10, 596c <deflateBound@@ZLIB_1.2.0+0x38>
    5950:	ldr	x10, [x0, #72]
    5954:	cbz	x10, 596c <deflateBound@@ZLIB_1.2.0+0x38>
    5958:	ldr	x10, [x0, #56]
    595c:	cbz	x10, 596c <deflateBound@@ZLIB_1.2.0+0x38>
    5960:	ldr	x11, [x10]
    5964:	cmp	x11, x0
    5968:	b.eq	5974 <deflateBound@@ZLIB_1.2.0+0x40>  // b.none
    596c:	add	x0, x9, #0xb
    5970:	ret
    5974:	ldr	w11, [x10, #8]
    5978:	sub	w12, w11, #0x39
    597c:	cmp	w12, #0x38
    5980:	b.hi	59d4 <deflateBound@@ZLIB_1.2.0+0xa0>  // b.pmore
    5984:	mov	w13, #0x1                   	// #1
    5988:	lsl	x12, x13, x12
    598c:	mov	x13, #0x1001                	// #4097
    5990:	movk	x13, #0x1, lsl #16
    5994:	movk	x13, #0x4004, lsl #32
    5998:	movk	x13, #0x100, lsl #48
    599c:	tst	x12, x13
    59a0:	b.eq	59d4 <deflateBound@@ZLIB_1.2.0+0xa0>  // b.none
    59a4:	ldr	w11, [x10, #48]
    59a8:	cbz	w11, 59e8 <deflateBound@@ZLIB_1.2.0+0xb4>
    59ac:	cmp	w11, #0x2
    59b0:	b.eq	59f0 <deflateBound@@ZLIB_1.2.0+0xbc>  // b.none
    59b4:	cmp	w11, #0x1
    59b8:	b.ne	5a10 <deflateBound@@ZLIB_1.2.0+0xdc>  // b.any
    59bc:	ldr	w11, [x10, #172]
    59c0:	mov	w12, #0xa                   	// #10
    59c4:	cmp	w11, #0x0
    59c8:	mov	w11, #0x6                   	// #6
    59cc:	csel	x11, x11, x12, eq  // eq = none
    59d0:	b	5a5c <deflateBound@@ZLIB_1.2.0+0x128>
    59d4:	cmp	w11, #0x2a
    59d8:	b.eq	59a4 <deflateBound@@ZLIB_1.2.0+0x70>  // b.none
    59dc:	cmp	w11, #0x29a
    59e0:	b.ne	596c <deflateBound@@ZLIB_1.2.0+0x38>  // b.any
    59e4:	b	59a4 <deflateBound@@ZLIB_1.2.0+0x70>
    59e8:	mov	x11, xzr
    59ec:	b	5a5c <deflateBound@@ZLIB_1.2.0+0x128>
    59f0:	ldr	x11, [x10, #56]
    59f4:	cbz	x11, 5a18 <deflateBound@@ZLIB_1.2.0+0xe4>
    59f8:	ldr	x12, [x11, #24]
    59fc:	cbz	x12, 5a20 <deflateBound@@ZLIB_1.2.0+0xec>
    5a00:	ldr	w12, [x11, #32]
    5a04:	add	w12, w12, #0x2
    5a08:	add	x12, x12, #0x12
    5a0c:	b	5a24 <deflateBound@@ZLIB_1.2.0+0xf0>
    5a10:	mov	w11, #0x6                   	// #6
    5a14:	b	5a5c <deflateBound@@ZLIB_1.2.0+0x128>
    5a18:	mov	w11, #0x12                  	// #18
    5a1c:	b	5a5c <deflateBound@@ZLIB_1.2.0+0x128>
    5a20:	mov	w12, #0x12                  	// #18
    5a24:	ldr	x13, [x11, #40]
    5a28:	cbz	x13, 5a38 <deflateBound@@ZLIB_1.2.0+0x104>
    5a2c:	ldrb	w14, [x13], #1
    5a30:	add	x12, x12, #0x1
    5a34:	cbnz	w14, 5a2c <deflateBound@@ZLIB_1.2.0+0xf8>
    5a38:	ldr	x13, [x11, #56]
    5a3c:	cbz	x13, 5a4c <deflateBound@@ZLIB_1.2.0+0x118>
    5a40:	ldrb	w14, [x13], #1
    5a44:	add	x12, x12, #0x1
    5a48:	cbnz	w14, 5a40 <deflateBound@@ZLIB_1.2.0+0x10c>
    5a4c:	ldr	w11, [x11, #68]
    5a50:	add	x13, x12, #0x2
    5a54:	cmp	w11, #0x0
    5a58:	csel	x11, x12, x13, eq  // eq = none
    5a5c:	ldr	w12, [x10, #84]
    5a60:	cmp	w12, #0xf
    5a64:	b.ne	5a88 <deflateBound@@ZLIB_1.2.0+0x154>  // b.any
    5a68:	ldr	w10, [x10, #136]
    5a6c:	cmp	w10, #0xf
    5a70:	b.ne	5a88 <deflateBound@@ZLIB_1.2.0+0x154>  // b.any
    5a74:	add	x8, x8, x1, lsr #12
    5a78:	add	x8, x8, x1, lsr #14
    5a7c:	add	x8, x8, x1, lsr #25
    5a80:	add	x0, x8, x11
    5a84:	ret
    5a88:	add	x8, x9, #0x5
    5a8c:	add	x0, x8, x11
    5a90:	ret
    5a94:	sub	sp, sp, #0x70
    5a98:	stp	x29, x30, [sp, #16]
    5a9c:	stp	x28, x27, [sp, #32]
    5aa0:	stp	x26, x25, [sp, #48]
    5aa4:	stp	x24, x23, [sp, #64]
    5aa8:	stp	x22, x21, [sp, #80]
    5aac:	stp	x20, x19, [sp, #96]
    5ab0:	ldr	x8, [x0]
    5ab4:	ldr	x9, [x0, #24]
    5ab8:	ldr	w10, [x0, #80]
    5abc:	add	x29, sp, #0x10
    5ac0:	ldr	w11, [x8, #8]
    5ac4:	sub	x9, x9, #0x5
    5ac8:	cmp	x9, x10
    5acc:	mov	w20, w1
    5ad0:	mov	x19, x0
    5ad4:	csel	w26, w10, w9, hi  // hi = pmore
    5ad8:	stur	w11, [x29, #-4]
    5adc:	b	5b40 <deflateBound@@ZLIB_1.2.0+0x20c>
    5ae0:	ldr	x0, [x25, #96]
    5ae4:	mov	x1, x22
    5ae8:	mov	w2, w24
    5aec:	bl	2390 <crc32@plt>
    5af0:	str	x0, [x25, #96]
    5af4:	ldr	x8, [x25]
    5af8:	ldr	x9, [x25, #16]
    5afc:	add	x8, x8, x23
    5b00:	add	x9, x9, x23
    5b04:	str	x8, [x25]
    5b08:	str	x9, [x25, #16]
    5b0c:	ldr	x25, [x19]
    5b10:	ldr	x22, [x25, #24]
    5b14:	ldr	w9, [x25, #32]
    5b18:	ldr	x10, [x25, #40]
    5b1c:	mov	w8, w28
    5b20:	add	x11, x22, x8
    5b24:	sub	w9, w9, w28
    5b28:	add	x8, x10, x8
    5b2c:	str	x11, [x25, #24]
    5b30:	str	w9, [x25, #32]
    5b34:	str	x8, [x25, #40]
    5b38:	ldr	x8, [x19]
    5b3c:	cbnz	w21, 5e14 <deflateBound@@ZLIB_1.2.0+0x4e0>
    5b40:	ldr	w9, [x19, #5940]
    5b44:	ldr	w10, [x8, #32]
    5b48:	add	w9, w9, #0x2a
    5b4c:	asr	w9, w9, #3
    5b50:	subs	w10, w10, w9
    5b54:	b.cc	5d7c <deflateBound@@ZLIB_1.2.0+0x448>  // b.lo, b.ul, b.last
    5b58:	ldr	w9, [x19, #172]
    5b5c:	ldr	w11, [x19, #152]
    5b60:	ldr	w12, [x8, #8]
    5b64:	sub	w24, w9, w11
    5b68:	add	x11, x24, x12
    5b6c:	add	w9, w24, w12
    5b70:	mov	w12, #0xffff                	// #65535
    5b74:	cmp	x11, x12
    5b78:	csel	w11, w9, w12, cc  // cc = lo, ul, last
    5b7c:	cmp	w11, w10
    5b80:	csel	w28, w10, w11, hi  // hi = pmore
    5b84:	cmp	w28, w26
    5b88:	b.cs	5bb4 <deflateBound@@ZLIB_1.2.0+0x280>  // b.hs, b.nlast
    5b8c:	cmp	w20, #0x4
    5b90:	cset	w10, ne  // ne = any
    5b94:	cmp	w28, #0x0
    5b98:	cset	w11, eq  // eq = none
    5b9c:	cmp	w28, w9
    5ba0:	mov	w22, wzr
    5ba4:	b.ne	5d80 <deflateBound@@ZLIB_1.2.0+0x44c>  // b.any
    5ba8:	cbz	w20, 5d80 <deflateBound@@ZLIB_1.2.0+0x44c>
    5bac:	and	w10, w10, w11
    5bb0:	cbnz	w10, 5d80 <deflateBound@@ZLIB_1.2.0+0x44c>
    5bb4:	cmp	w20, #0x4
    5bb8:	cset	w8, eq  // eq = none
    5bbc:	cmp	w28, w9
    5bc0:	cset	w9, eq  // eq = none
    5bc4:	and	w21, w8, w9
    5bc8:	mov	x0, x19
    5bcc:	mov	x1, xzr
    5bd0:	mov	x2, xzr
    5bd4:	mov	w3, w21
    5bd8:	mov	w27, w20
    5bdc:	bl	bbec <inflateCodesUsed@@ZLIB_1.2.9+0x7b0>
    5be0:	ldr	x8, [x19, #16]
    5be4:	ldr	x9, [x19, #40]
    5be8:	lsr	w10, w28, #8
    5bec:	add	x8, x9, x8
    5bf0:	sturb	w28, [x8, #-4]
    5bf4:	ldr	x8, [x19, #16]
    5bf8:	ldr	x9, [x19, #40]
    5bfc:	add	x8, x9, x8
    5c00:	sturb	w10, [x8, #-3]
    5c04:	ldr	x8, [x19, #16]
    5c08:	ldr	x9, [x19, #40]
    5c0c:	mvn	w10, w28
    5c10:	add	x8, x9, x8
    5c14:	sturb	w10, [x8, #-2]
    5c18:	ldr	x8, [x19, #16]
    5c1c:	ldr	x9, [x19, #40]
    5c20:	lsr	w10, w10, #8
    5c24:	add	x8, x9, x8
    5c28:	sturb	w10, [x8, #-1]
    5c2c:	ldr	x25, [x19]
    5c30:	ldr	x22, [x25, #56]
    5c34:	mov	x0, x22
    5c38:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    5c3c:	ldr	w8, [x22, #40]
    5c40:	ldr	w9, [x25, #32]
    5c44:	cmp	w9, w8
    5c48:	csel	w20, w9, w8, cc  // cc = lo, ul, last
    5c4c:	cbz	w20, 5ca4 <deflateBound@@ZLIB_1.2.0+0x370>
    5c50:	ldr	x0, [x25, #24]
    5c54:	ldr	x1, [x22, #32]
    5c58:	mov	w23, w20
    5c5c:	mov	x2, x23
    5c60:	bl	2310 <memcpy@plt>
    5c64:	ldr	x8, [x25, #24]
    5c68:	add	x8, x8, x23
    5c6c:	str	x8, [x25, #24]
    5c70:	ldr	x8, [x22, #32]
    5c74:	add	x8, x8, x23
    5c78:	str	x8, [x22, #32]
    5c7c:	ldr	x8, [x25, #40]
    5c80:	ldr	w9, [x25, #32]
    5c84:	add	x8, x8, x23
    5c88:	sub	w9, w9, w20
    5c8c:	str	x8, [x25, #40]
    5c90:	str	w9, [x25, #32]
    5c94:	ldr	x8, [x22, #40]
    5c98:	subs	x8, x8, x23
    5c9c:	str	x8, [x22, #40]
    5ca0:	b.eq	5d6c <deflateBound@@ZLIB_1.2.0+0x438>  // b.none
    5ca4:	cbz	w24, 5d04 <deflateBound@@ZLIB_1.2.0+0x3d0>
    5ca8:	ldr	x8, [x19]
    5cac:	ldr	x9, [x19, #96]
    5cb0:	ldr	x10, [x19, #152]
    5cb4:	cmp	w24, w28
    5cb8:	ldr	x0, [x8, #24]
    5cbc:	csel	w22, w28, w24, hi  // hi = pmore
    5cc0:	add	x1, x9, x10
    5cc4:	mov	x2, x22
    5cc8:	bl	2310 <memcpy@plt>
    5ccc:	ldr	x8, [x19]
    5cd0:	sub	w28, w28, w22
    5cd4:	ldr	x9, [x8, #24]
    5cd8:	ldr	w10, [x8, #32]
    5cdc:	ldr	x11, [x8, #40]
    5ce0:	add	x9, x9, x22
    5ce4:	sub	w10, w10, w22
    5ce8:	add	x11, x11, x22
    5cec:	str	x9, [x8, #24]
    5cf0:	str	w10, [x8, #32]
    5cf4:	str	x11, [x8, #40]
    5cf8:	ldr	x8, [x19, #152]
    5cfc:	add	x8, x8, x22
    5d00:	str	x8, [x19, #152]
    5d04:	mov	w20, w27
    5d08:	cbz	w28, 5b38 <deflateBound@@ZLIB_1.2.0+0x204>
    5d0c:	ldr	x25, [x19]
    5d10:	ldr	w8, [x25, #8]
    5d14:	ldr	x22, [x25, #24]
    5d18:	cmp	w8, w28
    5d1c:	csel	w24, w28, w8, hi  // hi = pmore
    5d20:	cbz	w24, 5b14 <deflateBound@@ZLIB_1.2.0+0x1e0>
    5d24:	ldr	x1, [x25]
    5d28:	mov	w23, w24
    5d2c:	sub	w8, w8, w24
    5d30:	mov	x0, x22
    5d34:	mov	x2, x23
    5d38:	str	w8, [x25, #8]
    5d3c:	bl	2310 <memcpy@plt>
    5d40:	ldr	x8, [x25, #56]
    5d44:	ldr	w8, [x8, #48]
    5d48:	cmp	w8, #0x2
    5d4c:	b.eq	5ae0 <deflateBound@@ZLIB_1.2.0+0x1ac>  // b.none
    5d50:	cmp	w8, #0x1
    5d54:	b.ne	5af4 <deflateBound@@ZLIB_1.2.0+0x1c0>  // b.any
    5d58:	ldr	x0, [x25, #96]
    5d5c:	mov	x1, x22
    5d60:	mov	w2, w24
    5d64:	bl	24a0 <adler32@plt>
    5d68:	b	5af0 <deflateBound@@ZLIB_1.2.0+0x1bc>
    5d6c:	ldr	x8, [x22, #16]
    5d70:	str	x8, [x22, #32]
    5d74:	cbnz	w24, 5ca8 <deflateBound@@ZLIB_1.2.0+0x374>
    5d78:	b	5d04 <deflateBound@@ZLIB_1.2.0+0x3d0>
    5d7c:	mov	w22, wzr
    5d80:	ldr	w9, [x8, #8]
    5d84:	ldur	w10, [x29, #-4]
    5d88:	subs	w23, w10, w9
    5d8c:	b.eq	5e28 <deflateBound@@ZLIB_1.2.0+0x4f4>  // b.none
    5d90:	ldr	w2, [x19, #80]
    5d94:	cmp	w23, w2
    5d98:	b.cs	5e40 <deflateBound@@ZLIB_1.2.0+0x50c>  // b.hs, b.nlast
    5d9c:	ldr	x9, [x19, #104]
    5da0:	ldr	w8, [x19, #172]
    5da4:	mov	w21, w23
    5da8:	sub	x9, x9, x8
    5dac:	cmp	x9, x21
    5db0:	b.hi	5de0 <deflateBound@@ZLIB_1.2.0+0x4ac>  // b.pmore
    5db4:	ldr	x0, [x19, #96]
    5db8:	sub	w8, w8, w2
    5dbc:	str	w8, [x19, #172]
    5dc0:	add	x1, x0, x2
    5dc4:	mov	x2, x8
    5dc8:	bl	2310 <memcpy@plt>
    5dcc:	ldr	w8, [x19, #5928]
    5dd0:	cmp	w8, #0x1
    5dd4:	b.hi	5de0 <deflateBound@@ZLIB_1.2.0+0x4ac>  // b.pmore
    5dd8:	add	w8, w8, #0x1
    5ddc:	str	w8, [x19, #5928]
    5de0:	ldr	x8, [x19]
    5de4:	ldr	x9, [x19, #96]
    5de8:	ldr	w10, [x19, #172]
    5dec:	mov	x2, x21
    5df0:	ldr	x8, [x8]
    5df4:	add	x0, x9, x10
    5df8:	sub	x1, x8, x21
    5dfc:	bl	2310 <memcpy@plt>
    5e00:	ldr	w8, [x19, #172]
    5e04:	ldr	w9, [x19, #80]
    5e08:	add	w8, w8, w23
    5e0c:	str	w8, [x19, #172]
    5e10:	b	5e64 <deflateBound@@ZLIB_1.2.0+0x530>
    5e14:	mov	w22, #0x1                   	// #1
    5e18:	ldr	w9, [x8, #8]
    5e1c:	ldur	w10, [x29, #-4]
    5e20:	subs	w23, w10, w9
    5e24:	b.ne	5d90 <deflateBound@@ZLIB_1.2.0+0x45c>  // b.any
    5e28:	ldr	w10, [x19, #172]
    5e2c:	mov	w8, w10
    5e30:	ldr	x9, [x19, #5944]
    5e34:	cmp	x9, x10
    5e38:	b.cc	5e90 <deflateBound@@ZLIB_1.2.0+0x55c>  // b.lo, b.ul, b.last
    5e3c:	b	5e94 <deflateBound@@ZLIB_1.2.0+0x560>
    5e40:	mov	w9, #0x2                   	// #2
    5e44:	str	w9, [x19, #5928]
    5e48:	ldr	x8, [x8]
    5e4c:	ldr	x0, [x19, #96]
    5e50:	sub	x1, x8, x2
    5e54:	bl	2310 <memcpy@plt>
    5e58:	ldr	w9, [x19, #80]
    5e5c:	str	w9, [x19, #172]
    5e60:	mov	w8, w9
    5e64:	ldr	w11, [x19, #5932]
    5e68:	mov	w10, w8
    5e6c:	str	x10, [x19, #152]
    5e70:	sub	w9, w9, w11
    5e74:	cmp	w23, w9
    5e78:	csel	w9, w9, w23, hi  // hi = pmore
    5e7c:	add	w9, w9, w11
    5e80:	str	w9, [x19, #5932]
    5e84:	ldr	x9, [x19, #5944]
    5e88:	cmp	x9, x10
    5e8c:	b.cs	5e94 <deflateBound@@ZLIB_1.2.0+0x560>  // b.hs, b.nlast
    5e90:	str	x10, [x19, #5944]
    5e94:	cbz	w22, 5ebc <deflateBound@@ZLIB_1.2.0+0x588>
    5e98:	mov	w0, #0x3                   	// #3
    5e9c:	ldp	x20, x19, [sp, #96]
    5ea0:	ldp	x22, x21, [sp, #80]
    5ea4:	ldp	x24, x23, [sp, #64]
    5ea8:	ldp	x26, x25, [sp, #48]
    5eac:	ldp	x28, x27, [sp, #32]
    5eb0:	ldp	x29, x30, [sp, #16]
    5eb4:	add	sp, sp, #0x70
    5eb8:	ret
    5ebc:	ldr	x24, [x19]
    5ec0:	tst	w20, #0xfffffffb
    5ec4:	ldr	w9, [x24, #8]
    5ec8:	b.eq	5ee4 <deflateBound@@ZLIB_1.2.0+0x5b0>  // b.none
    5ecc:	cbnz	w9, 5ee4 <deflateBound@@ZLIB_1.2.0+0x5b0>
    5ed0:	ldr	x9, [x19, #152]
    5ed4:	cmp	x9, x10
    5ed8:	b.ne	5fa4 <deflateBound@@ZLIB_1.2.0+0x670>  // b.any
    5edc:	mov	w0, #0x1                   	// #1
    5ee0:	b	5e9c <deflateBound@@ZLIB_1.2.0+0x568>
    5ee4:	ldr	w10, [x19, #104]
    5ee8:	mvn	w11, w8
    5eec:	add	w21, w10, w11
    5ef0:	cmp	w9, w21
    5ef4:	b.ls	5f44 <deflateBound@@ZLIB_1.2.0+0x610>  // b.plast
    5ef8:	ldr	x11, [x19, #152]
    5efc:	ldr	w10, [x19, #80]
    5f00:	subs	x11, x11, x10
    5f04:	b.lt	5f44 <deflateBound@@ZLIB_1.2.0+0x610>  // b.tstop
    5f08:	ldr	x0, [x19, #96]
    5f0c:	sub	w2, w8, w10
    5f10:	str	x11, [x19, #152]
    5f14:	str	w2, [x19, #172]
    5f18:	add	x1, x0, x10
    5f1c:	bl	2310 <memcpy@plt>
    5f20:	ldr	w8, [x19, #5928]
    5f24:	cmp	w8, #0x1
    5f28:	b.hi	5f34 <deflateBound@@ZLIB_1.2.0+0x600>  // b.pmore
    5f2c:	add	w8, w8, #0x1
    5f30:	str	w8, [x19, #5928]
    5f34:	ldr	x24, [x19]
    5f38:	ldr	w8, [x19, #80]
    5f3c:	ldr	w9, [x24, #8]
    5f40:	add	w21, w8, w21
    5f44:	cmp	w21, w9
    5f48:	csel	w21, w9, w21, hi  // hi = pmore
    5f4c:	cbz	w21, 5fc0 <deflateBound@@ZLIB_1.2.0+0x68c>
    5f50:	ldr	x8, [x19, #96]
    5f54:	ldr	w10, [x19, #172]
    5f58:	ldr	x1, [x24]
    5f5c:	mov	w22, w21
    5f60:	sub	w9, w9, w21
    5f64:	add	x23, x8, x10
    5f68:	mov	x0, x23
    5f6c:	mov	x2, x22
    5f70:	str	w9, [x24, #8]
    5f74:	bl	2310 <memcpy@plt>
    5f78:	ldr	x8, [x24, #56]
    5f7c:	ldr	w8, [x8, #48]
    5f80:	cmp	w8, #0x2
    5f84:	b.eq	5fd8 <deflateBound@@ZLIB_1.2.0+0x6a4>  // b.none
    5f88:	cmp	w8, #0x1
    5f8c:	b.ne	5fec <deflateBound@@ZLIB_1.2.0+0x6b8>  // b.any
    5f90:	ldr	x0, [x24, #96]
    5f94:	mov	x1, x23
    5f98:	mov	w2, w21
    5f9c:	bl	24a0 <adler32@plt>
    5fa0:	b	5fe8 <deflateBound@@ZLIB_1.2.0+0x6b4>
    5fa4:	ldr	w10, [x19, #104]
    5fa8:	mvn	w8, w8
    5fac:	mov	w9, wzr
    5fb0:	add	w21, w10, w8
    5fb4:	cmp	w21, w9
    5fb8:	csel	w21, w9, w21, hi  // hi = pmore
    5fbc:	cbnz	w21, 5f50 <deflateBound@@ZLIB_1.2.0+0x61c>
    5fc0:	ldr	w8, [x19, #172]
    5fc4:	ldr	x9, [x19, #5944]
    5fc8:	mov	w10, w8
    5fcc:	cmp	x9, x10
    5fd0:	b.cc	6020 <deflateBound@@ZLIB_1.2.0+0x6ec>  // b.lo, b.ul, b.last
    5fd4:	b	6024 <deflateBound@@ZLIB_1.2.0+0x6f0>
    5fd8:	ldr	x0, [x24, #96]
    5fdc:	mov	x1, x23
    5fe0:	mov	w2, w21
    5fe4:	bl	2390 <crc32@plt>
    5fe8:	str	x0, [x24, #96]
    5fec:	ldr	x8, [x24]
    5ff0:	ldr	x9, [x24, #16]
    5ff4:	add	x8, x8, x22
    5ff8:	add	x9, x9, x22
    5ffc:	str	x8, [x24]
    6000:	str	x9, [x24, #16]
    6004:	ldr	w8, [x19, #172]
    6008:	add	w8, w8, w21
    600c:	str	w8, [x19, #172]
    6010:	ldr	x9, [x19, #5944]
    6014:	mov	w10, w8
    6018:	cmp	x9, x10
    601c:	b.cs	6024 <deflateBound@@ZLIB_1.2.0+0x6f0>  // b.hs, b.nlast
    6020:	str	x10, [x19, #5944]
    6024:	ldr	w9, [x19, #5940]
    6028:	ldr	x11, [x19, #24]
    602c:	ldr	w13, [x19, #80]
    6030:	mov	w12, #0xffff                	// #65535
    6034:	add	w9, w9, #0x2a
    6038:	asr	w9, w9, #3
    603c:	ldr	x8, [x19, #152]
    6040:	sub	x9, x11, x9
    6044:	cmp	x9, x12
    6048:	csel	w9, w9, w12, cc  // cc = lo, ul, last
    604c:	cmp	w13, w9
    6050:	csel	w11, w13, w9, cc  // cc = lo, ul, last
    6054:	sub	w10, w10, w8
    6058:	cmp	w10, w11
    605c:	b.cs	6098 <deflateBound@@ZLIB_1.2.0+0x764>  // b.hs, b.nlast
    6060:	cmp	w20, #0x4
    6064:	cset	w11, eq  // eq = none
    6068:	cmp	w10, #0x0
    606c:	mov	w0, wzr
    6070:	cset	w12, ne  // ne = any
    6074:	cbz	w20, 5e9c <deflateBound@@ZLIB_1.2.0+0x568>
    6078:	orr	w11, w11, w12
    607c:	cbz	w11, 5e9c <deflateBound@@ZLIB_1.2.0+0x568>
    6080:	cmp	w10, w9
    6084:	mov	w0, wzr
    6088:	b.hi	5e9c <deflateBound@@ZLIB_1.2.0+0x568>  // b.pmore
    608c:	ldr	x11, [x19]
    6090:	ldr	w11, [x11, #8]
    6094:	cbnz	w11, 5e9c <deflateBound@@ZLIB_1.2.0+0x568>
    6098:	cmp	w10, w9
    609c:	csel	w11, w9, w10, hi  // hi = pmore
    60a0:	cmp	w20, #0x4
    60a4:	b.ne	60c8 <deflateBound@@ZLIB_1.2.0+0x794>  // b.any
    60a8:	ldr	x12, [x19]
    60ac:	ldr	w12, [x12, #8]
    60b0:	cmp	w12, #0x0
    60b4:	cset	w12, eq  // eq = none
    60b8:	cmp	w10, w9
    60bc:	cset	w9, ls  // ls = plast
    60c0:	and	w20, w9, w12
    60c4:	b	60cc <deflateBound@@ZLIB_1.2.0+0x798>
    60c8:	mov	w20, wzr
    60cc:	ldr	x9, [x19, #96]
    60d0:	mov	w21, w11
    60d4:	mov	x0, x19
    60d8:	mov	x2, x21
    60dc:	add	x1, x9, x8
    60e0:	mov	w3, w20
    60e4:	bl	bbec <inflateCodesUsed@@ZLIB_1.2.9+0x7b0>
    60e8:	ldr	x8, [x19, #152]
    60ec:	ldr	x22, [x19]
    60f0:	add	x8, x8, x21
    60f4:	str	x8, [x19, #152]
    60f8:	ldr	x19, [x22, #56]
    60fc:	mov	x0, x19
    6100:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    6104:	ldr	w8, [x19, #40]
    6108:	ldr	w9, [x22, #32]
    610c:	cmp	w9, w8
    6110:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    6114:	cbz	w23, 616c <deflateBound@@ZLIB_1.2.0+0x838>
    6118:	ldr	x0, [x22, #24]
    611c:	ldr	x1, [x19, #32]
    6120:	mov	w21, w23
    6124:	mov	x2, x21
    6128:	bl	2310 <memcpy@plt>
    612c:	ldr	x8, [x22, #24]
    6130:	add	x8, x8, x21
    6134:	str	x8, [x22, #24]
    6138:	ldr	x8, [x19, #32]
    613c:	add	x8, x8, x21
    6140:	str	x8, [x19, #32]
    6144:	ldr	x8, [x22, #40]
    6148:	ldr	w9, [x22, #32]
    614c:	add	x8, x8, x21
    6150:	sub	w9, w9, w23
    6154:	str	x8, [x22, #40]
    6158:	str	w9, [x22, #32]
    615c:	ldr	x8, [x19, #40]
    6160:	subs	x8, x8, x21
    6164:	str	x8, [x19, #40]
    6168:	b.eq	6178 <deflateBound@@ZLIB_1.2.0+0x844>  // b.none
    616c:	cbz	w20, 6184 <deflateBound@@ZLIB_1.2.0+0x850>
    6170:	mov	w0, #0x2                   	// #2
    6174:	b	5e9c <deflateBound@@ZLIB_1.2.0+0x568>
    6178:	ldr	x8, [x19, #16]
    617c:	str	x8, [x19, #32]
    6180:	tbnz	w20, #0, 6170 <deflateBound@@ZLIB_1.2.0+0x83c>
    6184:	mov	w0, wzr
    6188:	b	5e9c <deflateBound@@ZLIB_1.2.0+0x568>

000000000000618c <deflateCopy@@Base>:
    618c:	stp	x29, x30, [sp, #-48]!
    6190:	stp	x22, x21, [sp, #16]
    6194:	stp	x20, x19, [sp, #32]
    6198:	mov	x29, sp
    619c:	cbz	x1, 61c4 <deflateCopy@@Base+0x38>
    61a0:	ldr	x8, [x1, #64]
    61a4:	cbz	x8, 61c4 <deflateCopy@@Base+0x38>
    61a8:	ldr	x8, [x1, #72]
    61ac:	cbz	x8, 61c4 <deflateCopy@@Base+0x38>
    61b0:	ldr	x19, [x1, #56]
    61b4:	cbz	x19, 61c4 <deflateCopy@@Base+0x38>
    61b8:	ldr	x8, [x19]
    61bc:	cmp	x8, x1
    61c0:	b.eq	61d8 <deflateCopy@@Base+0x4c>  // b.none
    61c4:	mov	w0, #0xfffffffe            	// #-2
    61c8:	ldp	x20, x19, [sp, #32]
    61cc:	ldp	x22, x21, [sp, #16]
    61d0:	ldp	x29, x30, [sp], #48
    61d4:	ret
    61d8:	ldr	w8, [x19, #8]
    61dc:	mov	x20, x0
    61e0:	sub	w9, w8, #0x39
    61e4:	cmp	w9, #0x38
    61e8:	b.hi	6390 <deflateCopy@@Base+0x204>  // b.pmore
    61ec:	mov	w10, #0x1                   	// #1
    61f0:	lsl	x9, x10, x9
    61f4:	mov	x10, #0x1001                	// #4097
    61f8:	movk	x10, #0x1, lsl #16
    61fc:	movk	x10, #0x4004, lsl #32
    6200:	movk	x10, #0x100, lsl #48
    6204:	tst	x9, x10
    6208:	b.eq	6390 <deflateCopy@@Base+0x204>  // b.none
    620c:	cbz	x20, 61c4 <deflateCopy@@Base+0x38>
    6210:	ldp	q0, q1, [x1, #64]
    6214:	ldr	q2, [x1, #48]
    6218:	ldr	q3, [x1, #96]
    621c:	mov	w2, #0x1740                	// #5952
    6220:	stp	q0, q1, [x20, #64]
    6224:	ldp	q0, q1, [x1]
    6228:	ldr	q4, [x1, #32]
    622c:	ldr	x8, [x20, #64]
    6230:	ldr	x0, [x20, #80]
    6234:	mov	w1, #0x1                   	// #1
    6238:	str	q3, [x20, #96]
    623c:	stp	q0, q1, [x20]
    6240:	stp	q4, q2, [x20, #32]
    6244:	blr	x8
    6248:	cbz	x0, 63ac <deflateCopy@@Base+0x220>
    624c:	mov	w2, #0x1740                	// #5952
    6250:	mov	x1, x19
    6254:	mov	x21, x0
    6258:	str	x0, [x20, #56]
    625c:	bl	2310 <memcpy@plt>
    6260:	str	x20, [x21]
    6264:	ldr	x8, [x20, #64]
    6268:	ldr	x0, [x20, #80]
    626c:	ldr	w1, [x21, #80]
    6270:	mov	w2, #0x2                   	// #2
    6274:	blr	x8
    6278:	str	x0, [x21, #96]
    627c:	ldr	x8, [x20, #64]
    6280:	ldr	x0, [x20, #80]
    6284:	ldr	w1, [x21, #80]
    6288:	mov	w2, #0x2                   	// #2
    628c:	blr	x8
    6290:	str	x0, [x21, #112]
    6294:	ldr	x8, [x20, #64]
    6298:	ldr	x0, [x20, #80]
    629c:	ldr	w1, [x21, #132]
    62a0:	mov	w2, #0x2                   	// #2
    62a4:	blr	x8
    62a8:	str	x0, [x21, #120]
    62ac:	ldr	x8, [x20, #64]
    62b0:	ldr	x0, [x20, #80]
    62b4:	ldr	w1, [x21, #5896]
    62b8:	mov	w2, #0x4                   	// #4
    62bc:	blr	x8
    62c0:	ldr	x8, [x21, #96]
    62c4:	str	x0, [x21, #16]
    62c8:	cbz	x8, 63a4 <deflateCopy@@Base+0x218>
    62cc:	ldr	x9, [x21, #112]
    62d0:	cbz	x9, 63a4 <deflateCopy@@Base+0x218>
    62d4:	mov	x22, x0
    62d8:	cbz	x0, 63a4 <deflateCopy@@Base+0x218>
    62dc:	ldr	x9, [x21, #120]
    62e0:	cbz	x9, 63a4 <deflateCopy@@Base+0x218>
    62e4:	ldr	w9, [x21, #80]
    62e8:	ldr	x1, [x19, #96]
    62ec:	mov	x0, x8
    62f0:	lsl	w2, w9, #1
    62f4:	bl	2310 <memcpy@plt>
    62f8:	ldr	w8, [x21, #80]
    62fc:	ldr	x0, [x21, #112]
    6300:	ldr	x1, [x19, #112]
    6304:	lsl	x2, x8, #1
    6308:	bl	2310 <memcpy@plt>
    630c:	ldr	w8, [x21, #132]
    6310:	ldr	x0, [x21, #120]
    6314:	ldr	x1, [x19, #120]
    6318:	lsl	x2, x8, #1
    631c:	bl	2310 <memcpy@plt>
    6320:	ldr	x0, [x21, #16]
    6324:	ldr	x1, [x19, #16]
    6328:	ldr	w2, [x21, #24]
    632c:	bl	2310 <memcpy@plt>
    6330:	add	x11, x21, #0xd4
    6334:	ldr	x8, [x19, #32]
    6338:	ldr	x9, [x19, #16]
    633c:	str	x11, [x21, #2904]
    6340:	add	x11, x21, #0x9c8
    6344:	ldr	w10, [x21, #5896]
    6348:	str	x11, [x21, #2928]
    634c:	ldr	x11, [x21, #16]
    6350:	sub	x8, x8, x9
    6354:	and	x9, x10, #0xfffffffe
    6358:	add	x10, x10, x10, lsl #1
    635c:	add	x8, x11, x8
    6360:	mov	w0, wzr
    6364:	add	x9, x22, x9
    6368:	add	x10, x11, x10
    636c:	str	x8, [x21, #32]
    6370:	add	x8, x21, #0xabc
    6374:	str	x9, [x21, #5904]
    6378:	str	x10, [x21, #5888]
    637c:	str	x8, [x21, #2952]
    6380:	ldp	x20, x19, [sp, #32]
    6384:	ldp	x22, x21, [sp, #16]
    6388:	ldp	x29, x30, [sp], #48
    638c:	ret
    6390:	cmp	w8, #0x29a
    6394:	b.eq	620c <deflateCopy@@Base+0x80>  // b.none
    6398:	cmp	w8, #0x2a
    639c:	b.ne	61c4 <deflateCopy@@Base+0x38>  // b.any
    63a0:	b	620c <deflateCopy@@Base+0x80>
    63a4:	mov	x0, x20
    63a8:	bl	24d0 <deflateEnd@plt>
    63ac:	mov	w0, #0xfffffffc            	// #-4
    63b0:	ldp	x20, x19, [sp, #32]
    63b4:	ldp	x22, x21, [sp, #16]
    63b8:	ldp	x29, x30, [sp], #48
    63bc:	ret
    63c0:	stp	x29, x30, [sp, #-80]!
    63c4:	stp	x24, x23, [sp, #32]
    63c8:	adrp	x23, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    63cc:	adrp	x24, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    63d0:	stp	x20, x19, [sp, #64]
    63d4:	mov	w20, w1
    63d8:	mov	x19, x0
    63dc:	add	x23, x23, #0xdb8
    63e0:	add	x24, x24, #0xbb8
    63e4:	stp	x26, x25, [sp, #16]
    63e8:	stp	x22, x21, [sp, #48]
    63ec:	mov	x29, sp
    63f0:	b	6400 <deflateCopy@@Base+0x274>
    63f4:	ldr	x8, [x19]
    63f8:	ldr	w8, [x8, #32]
    63fc:	cbz	w8, 68e4 <deflateCopy@@Base+0x758>
    6400:	ldr	w8, [x19, #180]
    6404:	cmp	w8, #0x105
    6408:	b.hi	6430 <deflateCopy@@Base+0x2a4>  // b.pmore
    640c:	mov	x0, x19
    6410:	bl	3784 <deflateSetDictionary@@Base+0x214>
    6414:	ldr	w8, [x19, #180]
    6418:	cbnz	w20, 6424 <deflateCopy@@Base+0x298>
    641c:	cmp	w8, #0x106
    6420:	b.cc	68e4 <deflateCopy@@Base+0x758>  // b.lo, b.ul, b.last
    6424:	cbz	w8, 6734 <deflateCopy@@Base+0x5a8>
    6428:	cmp	w8, #0x3
    642c:	b.cc	648c <deflateCopy@@Base+0x300>  // b.lo, b.ul, b.last
    6430:	ldr	w8, [x19, #172]
    6434:	ldr	x10, [x19, #96]
    6438:	ldr	w9, [x19, #128]
    643c:	ldp	w12, w11, [x19, #140]
    6440:	add	w13, w8, #0x2
    6444:	ldrb	w10, [x10, w13, uxtw]
    6448:	lsl	w9, w9, w11
    644c:	ldp	x13, x11, [x19, #112]
    6450:	eor	w9, w9, w10
    6454:	and	x9, x9, x12
    6458:	ldr	w10, [x19, #88]
    645c:	str	w9, [x19, #128]
    6460:	lsl	x9, x9, #1
    6464:	ldrh	w1, [x11, x9]
    6468:	and	x10, x10, x8
    646c:	strh	w1, [x13, x10, lsl #1]
    6470:	strh	w8, [x11, x9]
    6474:	cbz	w1, 648c <deflateCopy@@Base+0x300>
    6478:	ldr	w9, [x19, #80]
    647c:	sub	w8, w8, w1
    6480:	sub	w9, w9, #0x106
    6484:	cmp	w8, w9
    6488:	b.ls	6600 <deflateCopy@@Base+0x474>  // b.plast
    648c:	ldr	w0, [x19, #160]
    6490:	subs	w8, w0, #0x3
    6494:	b.cc	6614 <deflateCopy@@Base+0x488>  // b.lo, b.ul, b.last
    6498:	ldp	w9, w10, [x19, #172]
    649c:	ldr	x11, [x19, #5904]
    64a0:	ldr	w12, [x19, #5900]
    64a4:	and	x13, x8, #0xff
    64a8:	ldrb	w13, [x23, x13]
    64ac:	sub	w9, w9, w10
    64b0:	mov	w10, #0x400                 	// #1024
    64b4:	strh	w9, [x11, x12, lsl #1]
    64b8:	add	w11, w12, #0x1
    64bc:	sub	w9, w9, #0x1
    64c0:	str	w11, [x19, #5900]
    64c4:	bfi	x10, x13, #2, #8
    64c8:	ldr	x11, [x19, #5888]
    64cc:	and	w13, w9, #0xffff
    64d0:	cmp	w13, #0x100
    64d4:	ubfx	w13, w9, #7, #9
    64d8:	add	w13, w13, #0x100
    64dc:	csel	w9, w9, w13, cc  // cc = lo, ul, last
    64e0:	add	x10, x10, x19
    64e4:	and	x9, x9, #0xffff
    64e8:	strb	w8, [x11, x12]
    64ec:	ldrb	w8, [x24, x9]
    64f0:	ldrh	w9, [x10, #216]
    64f4:	add	x8, x19, x8, lsl #2
    64f8:	add	w9, w9, #0x1
    64fc:	strh	w9, [x10, #216]
    6500:	ldrh	w9, [x8, #2504]
    6504:	add	w9, w9, #0x1
    6508:	strh	w9, [x8, #2504]
    650c:	ldr	w8, [x19, #5896]
    6510:	ldr	w9, [x19, #160]
    6514:	ldr	w10, [x19, #180]
    6518:	ldr	w11, [x19, #5900]
    651c:	sub	w8, w8, #0x1
    6520:	sub	w10, w10, w9
    6524:	cmp	w11, w8
    6528:	cset	w8, eq  // eq = none
    652c:	cmp	w10, #0x3
    6530:	str	w10, [x19, #180]
    6534:	b.cc	65c0 <deflateCopy@@Base+0x434>  // b.lo, b.ul, b.last
    6538:	ldr	w10, [x19, #192]
    653c:	cmp	w9, w10
    6540:	b.hi	65c0 <deflateCopy@@Base+0x434>  // b.pmore
    6544:	ldr	w18, [x19, #172]
    6548:	ldr	x10, [x19, #96]
    654c:	ldp	w12, w11, [x19, #140]
    6550:	ldp	x14, x13, [x19, #112]
    6554:	ldr	w15, [x19, #88]
    6558:	ldr	w17, [x19, #128]
    655c:	sub	w16, w9, #0x1
    6560:	str	w16, [x19, #160]
    6564:	sub	w16, w9, #0x2
    6568:	add	w9, w18, #0x1
    656c:	str	w9, [x19, #172]
    6570:	add	w18, w9, #0x2
    6574:	ldrb	w18, [x10, w18, uxtw]
    6578:	lsl	w17, w17, w11
    657c:	mov	w1, w9
    6580:	and	x1, x15, x1
    6584:	eor	w17, w17, w18
    6588:	and	x17, x17, x12
    658c:	str	w17, [x19, #128]
    6590:	lsl	x18, x17, #1
    6594:	ldrh	w0, [x13, x18]
    6598:	strh	w0, [x14, x1, lsl #1]
    659c:	strh	w9, [x13, x18]
    65a0:	str	w16, [x19, #160]
    65a4:	sub	w16, w16, #0x1
    65a8:	cmn	w16, #0x1
    65ac:	add	w9, w9, #0x1
    65b0:	b.ne	656c <deflateCopy@@Base+0x3e0>  // b.any
    65b4:	str	w9, [x19, #172]
    65b8:	cbz	w8, 6400 <deflateCopy@@Base+0x274>
    65bc:	b	667c <deflateCopy@@Base+0x4f0>
    65c0:	ldr	w10, [x19, #172]
    65c4:	ldr	x11, [x19, #96]
    65c8:	str	wzr, [x19, #160]
    65cc:	add	w9, w10, w9
    65d0:	str	w9, [x19, #172]
    65d4:	ldrb	w10, [x11, w9, uxtw]
    65d8:	add	w12, w9, #0x1
    65dc:	str	w10, [x19, #128]
    65e0:	ldrb	w11, [x11, w12, uxtw]
    65e4:	ldp	w12, w13, [x19, #140]
    65e8:	lsl	w10, w10, w13
    65ec:	eor	w10, w10, w11
    65f0:	and	w10, w10, w12
    65f4:	str	w10, [x19, #128]
    65f8:	cbz	w8, 6400 <deflateCopy@@Base+0x274>
    65fc:	b	667c <deflateCopy@@Base+0x4f0>
    6600:	mov	x0, x19
    6604:	bl	6fe4 <deflateCopy@@Base+0xe58>
    6608:	str	w0, [x19, #160]
    660c:	subs	w8, w0, #0x3
    6610:	b.cs	6498 <deflateCopy@@Base+0x30c>  // b.hs, b.nlast
    6614:	ldr	x8, [x19, #96]
    6618:	ldr	w9, [x19, #172]
    661c:	ldr	x10, [x19, #5904]
    6620:	ldr	w11, [x19, #5900]
    6624:	ldrb	w8, [x8, x9]
    6628:	strh	wzr, [x10, x11, lsl #1]
    662c:	ldr	x9, [x19, #5888]
    6630:	add	w10, w11, #0x1
    6634:	str	w10, [x19, #5900]
    6638:	add	x10, x19, x8, lsl #2
    663c:	strb	w8, [x9, x11]
    6640:	ldrh	w8, [x10, #212]
    6644:	add	w8, w8, #0x1
    6648:	strh	w8, [x10, #212]
    664c:	ldr	w8, [x19, #5896]
    6650:	ldr	w11, [x19, #5900]
    6654:	ldr	w9, [x19, #180]
    6658:	ldr	w10, [x19, #172]
    665c:	sub	w8, w8, #0x1
    6660:	cmp	w11, w8
    6664:	sub	w12, w9, #0x1
    6668:	add	w9, w10, #0x1
    666c:	cset	w8, eq  // eq = none
    6670:	str	w12, [x19, #180]
    6674:	str	w9, [x19, #172]
    6678:	cbz	w8, 6400 <deflateCopy@@Base+0x274>
    667c:	ldr	x8, [x19, #152]
    6680:	tbnz	x8, #63, 6690 <deflateCopy@@Base+0x504>
    6684:	ldr	x10, [x19, #96]
    6688:	add	x1, x10, w8, uxtw
    668c:	b	6694 <deflateCopy@@Base+0x508>
    6690:	mov	x1, xzr
    6694:	mov	w9, w9
    6698:	sub	x2, x9, x8
    669c:	mov	x0, x19
    66a0:	mov	w3, wzr
    66a4:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    66a8:	ldr	w8, [x19, #172]
    66ac:	ldr	x25, [x19]
    66b0:	str	x8, [x19, #152]
    66b4:	ldr	x21, [x25, #56]
    66b8:	mov	x0, x21
    66bc:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    66c0:	ldr	w8, [x21, #40]
    66c4:	ldr	w9, [x25, #32]
    66c8:	cmp	w9, w8
    66cc:	csel	w26, w9, w8, cc  // cc = lo, ul, last
    66d0:	cbz	w26, 63f4 <deflateCopy@@Base+0x268>
    66d4:	ldr	x0, [x25, #24]
    66d8:	ldr	x1, [x21, #32]
    66dc:	mov	w22, w26
    66e0:	mov	x2, x22
    66e4:	bl	2310 <memcpy@plt>
    66e8:	ldr	x8, [x25, #24]
    66ec:	add	x8, x8, x22
    66f0:	str	x8, [x25, #24]
    66f4:	ldr	x8, [x21, #32]
    66f8:	add	x8, x8, x22
    66fc:	str	x8, [x21, #32]
    6700:	ldr	x8, [x25, #40]
    6704:	ldr	w9, [x25, #32]
    6708:	add	x8, x8, x22
    670c:	sub	w9, w9, w26
    6710:	str	x8, [x25, #40]
    6714:	str	w9, [x25, #32]
    6718:	ldr	x8, [x21, #40]
    671c:	subs	x8, x8, x22
    6720:	str	x8, [x21, #40]
    6724:	b.ne	63f4 <deflateCopy@@Base+0x268>  // b.any
    6728:	ldr	x8, [x21, #16]
    672c:	str	x8, [x21, #32]
    6730:	b	63f4 <deflateCopy@@Base+0x268>
    6734:	ldr	w8, [x19, #172]
    6738:	mov	w9, #0x2                   	// #2
    673c:	cmp	w8, #0x2
    6740:	csel	w9, w8, w9, cc  // cc = lo, ul, last
    6744:	cmp	w20, #0x4
    6748:	str	w9, [x19, #5932]
    674c:	b.ne	6764 <deflateCopy@@Base+0x5d8>  // b.any
    6750:	ldr	x9, [x19, #152]
    6754:	tbnz	x9, #63, 6780 <deflateCopy@@Base+0x5f4>
    6758:	ldr	x10, [x19, #96]
    675c:	add	x1, x10, w9, uxtw
    6760:	b	6784 <deflateCopy@@Base+0x5f8>
    6764:	ldr	w9, [x19, #5900]
    6768:	cbz	w9, 68dc <deflateCopy@@Base+0x750>
    676c:	ldr	x9, [x19, #152]
    6770:	tbnz	x9, #63, 6834 <deflateCopy@@Base+0x6a8>
    6774:	ldr	x10, [x19, #96]
    6778:	add	x1, x10, w9, uxtw
    677c:	b	6838 <deflateCopy@@Base+0x6ac>
    6780:	mov	x1, xzr
    6784:	sub	x2, x8, x9
    6788:	mov	w3, #0x1                   	// #1
    678c:	mov	x0, x19
    6790:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    6794:	ldr	w8, [x19, #172]
    6798:	ldr	x22, [x19]
    679c:	str	x8, [x19, #152]
    67a0:	ldr	x20, [x22, #56]
    67a4:	mov	x0, x20
    67a8:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    67ac:	ldr	w8, [x20, #40]
    67b0:	ldr	w9, [x22, #32]
    67b4:	cmp	w9, w8
    67b8:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    67bc:	cbz	w23, 681c <deflateCopy@@Base+0x690>
    67c0:	ldr	x0, [x22, #24]
    67c4:	ldr	x1, [x20, #32]
    67c8:	mov	w21, w23
    67cc:	mov	x2, x21
    67d0:	bl	2310 <memcpy@plt>
    67d4:	ldr	x8, [x22, #24]
    67d8:	add	x8, x8, x21
    67dc:	str	x8, [x22, #24]
    67e0:	ldr	x8, [x20, #32]
    67e4:	add	x8, x8, x21
    67e8:	str	x8, [x20, #32]
    67ec:	ldr	x8, [x22, #40]
    67f0:	ldr	w9, [x22, #32]
    67f4:	add	x8, x8, x21
    67f8:	sub	w9, w9, w23
    67fc:	str	x8, [x22, #40]
    6800:	str	w9, [x22, #32]
    6804:	ldr	x8, [x20, #40]
    6808:	subs	x8, x8, x21
    680c:	str	x8, [x20, #40]
    6810:	b.ne	681c <deflateCopy@@Base+0x690>  // b.any
    6814:	ldr	x8, [x20, #16]
    6818:	str	x8, [x20, #32]
    681c:	ldr	x8, [x19]
    6820:	ldr	w8, [x8, #32]
    6824:	cmp	w8, #0x0
    6828:	mov	w8, #0x2                   	// #2
    682c:	cinc	w0, w8, ne  // ne = any
    6830:	b	68e8 <deflateCopy@@Base+0x75c>
    6834:	mov	x1, xzr
    6838:	sub	x2, x8, x9
    683c:	mov	x0, x19
    6840:	mov	w3, wzr
    6844:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    6848:	ldr	w8, [x19, #172]
    684c:	ldr	x22, [x19]
    6850:	str	x8, [x19, #152]
    6854:	ldr	x20, [x22, #56]
    6858:	mov	x0, x20
    685c:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    6860:	ldr	w8, [x20, #40]
    6864:	ldr	w9, [x22, #32]
    6868:	cmp	w9, w8
    686c:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    6870:	cbz	w23, 68d0 <deflateCopy@@Base+0x744>
    6874:	ldr	x0, [x22, #24]
    6878:	ldr	x1, [x20, #32]
    687c:	mov	w21, w23
    6880:	mov	x2, x21
    6884:	bl	2310 <memcpy@plt>
    6888:	ldr	x8, [x22, #24]
    688c:	add	x8, x8, x21
    6890:	str	x8, [x22, #24]
    6894:	ldr	x8, [x20, #32]
    6898:	add	x8, x8, x21
    689c:	str	x8, [x20, #32]
    68a0:	ldr	x8, [x22, #40]
    68a4:	ldr	w9, [x22, #32]
    68a8:	add	x8, x8, x21
    68ac:	sub	w9, w9, w23
    68b0:	str	x8, [x22, #40]
    68b4:	str	w9, [x22, #32]
    68b8:	ldr	x8, [x20, #40]
    68bc:	subs	x8, x8, x21
    68c0:	str	x8, [x20, #40]
    68c4:	b.ne	68d0 <deflateCopy@@Base+0x744>  // b.any
    68c8:	ldr	x8, [x20, #16]
    68cc:	str	x8, [x20, #32]
    68d0:	ldr	x8, [x19]
    68d4:	ldr	w8, [x8, #32]
    68d8:	cbz	w8, 68e4 <deflateCopy@@Base+0x758>
    68dc:	mov	w0, #0x1                   	// #1
    68e0:	b	68e8 <deflateCopy@@Base+0x75c>
    68e4:	mov	w0, wzr
    68e8:	ldp	x20, x19, [sp, #64]
    68ec:	ldp	x22, x21, [sp, #48]
    68f0:	ldp	x24, x23, [sp, #32]
    68f4:	ldp	x26, x25, [sp, #16]
    68f8:	ldp	x29, x30, [sp], #80
    68fc:	ret
    6900:	stp	x29, x30, [sp, #-96]!
    6904:	stp	x26, x25, [sp, #32]
    6908:	stp	x24, x23, [sp, #48]
    690c:	adrp	x24, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    6910:	adrp	x25, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    6914:	stp	x20, x19, [sp, #80]
    6918:	mov	w20, w1
    691c:	mov	x19, x0
    6920:	mov	w23, #0x1                   	// #1
    6924:	add	x24, x24, #0xdb8
    6928:	add	x25, x25, #0xbb8
    692c:	mov	w26, #0x2                   	// #2
    6930:	stp	x28, x27, [sp, #16]
    6934:	stp	x22, x21, [sp, #64]
    6938:	mov	x29, sp
    693c:	b	6964 <deflateCopy@@Base+0x7d8>
    6940:	ldr	w8, [x19, #172]
    6944:	ldr	w9, [x19, #180]
    6948:	ldr	x10, [x19]
    694c:	add	w8, w8, #0x1
    6950:	sub	w9, w9, #0x1
    6954:	str	w8, [x19, #172]
    6958:	str	w9, [x19, #180]
    695c:	ldr	w8, [x10, #32]
    6960:	cbz	w8, 6fc4 <deflateCopy@@Base+0xe38>
    6964:	ldr	w8, [x19, #180]
    6968:	cmp	w8, #0x105
    696c:	b.hi	6994 <deflateCopy@@Base+0x808>  // b.pmore
    6970:	mov	x0, x19
    6974:	bl	3784 <deflateSetDictionary@@Base+0x214>
    6978:	ldr	w8, [x19, #180]
    697c:	cbnz	w20, 6988 <deflateCopy@@Base+0x7fc>
    6980:	cmp	w8, #0x106
    6984:	b.cc	6fc4 <deflateCopy@@Base+0xe38>  // b.lo, b.ul, b.last
    6988:	cbz	w8, 6dcc <deflateCopy@@Base+0xc40>
    698c:	cmp	w8, #0x2
    6990:	b.ls	6a28 <deflateCopy@@Base+0x89c>  // b.plast
    6994:	ldr	w9, [x19, #172]
    6998:	ldr	x10, [x19, #96]
    699c:	ldr	w8, [x19, #128]
    69a0:	ldp	w12, w11, [x19, #140]
    69a4:	add	w13, w9, #0x2
    69a8:	ldrb	w10, [x10, w13, uxtw]
    69ac:	mov	w0, #0x2                   	// #2
    69b0:	lsl	w8, w8, w11
    69b4:	ldp	x13, x11, [x19, #112]
    69b8:	eor	w8, w8, w10
    69bc:	and	x8, x8, x12
    69c0:	ldr	w10, [x19, #88]
    69c4:	str	w8, [x19, #128]
    69c8:	lsl	x8, x8, #1
    69cc:	ldrh	w1, [x11, x8]
    69d0:	and	x10, x10, x9
    69d4:	strh	w1, [x13, x10, lsl #1]
    69d8:	strh	w9, [x11, x8]
    69dc:	ldr	w8, [x19, #160]
    69e0:	ldr	w9, [x19, #176]
    69e4:	str	w8, [x19, #184]
    69e8:	stp	w0, w9, [x19, #160]
    69ec:	cbz	w1, 6a3c <deflateCopy@@Base+0x8b0>
    69f0:	ldr	w9, [x19, #192]
    69f4:	cmp	w8, w9
    69f8:	b.cs	6a14 <deflateCopy@@Base+0x888>  // b.hs, b.nlast
    69fc:	ldr	w8, [x19, #172]
    6a00:	ldr	w9, [x19, #80]
    6a04:	sub	w8, w8, w1
    6a08:	sub	w9, w9, #0x106
    6a0c:	cmp	w8, w9
    6a10:	b.ls	6c1c <deflateCopy@@Base+0xa90>  // b.plast
    6a14:	mov	w0, #0x2                   	// #2
    6a18:	ldr	w8, [x19, #184]
    6a1c:	subs	w9, w8, #0x3
    6a20:	b.cs	6a44 <deflateCopy@@Base+0x8b8>  // b.hs, b.nlast
    6a24:	b	6b70 <deflateCopy@@Base+0x9e4>
    6a28:	ldr	w8, [x19, #160]
    6a2c:	ldr	w9, [x19, #176]
    6a30:	mov	w0, #0x2                   	// #2
    6a34:	str	w8, [x19, #184]
    6a38:	stp	w0, w9, [x19, #160]
    6a3c:	subs	w9, w8, #0x3
    6a40:	b.cc	6b70 <deflateCopy@@Base+0x9e4>  // b.lo, b.ul, b.last
    6a44:	cmp	w0, w8
    6a48:	b.hi	6b70 <deflateCopy@@Base+0x9e4>  // b.pmore
    6a4c:	ldr	w11, [x19, #164]
    6a50:	ldr	w8, [x19, #172]
    6a54:	ldr	x12, [x19, #5904]
    6a58:	ldr	w13, [x19, #5900]
    6a5c:	mvn	w11, w11
    6a60:	add	w11, w11, w8
    6a64:	ldr	w10, [x19, #180]
    6a68:	strh	w11, [x12, x13, lsl #1]
    6a6c:	and	x14, x9, #0xff
    6a70:	ldr	x12, [x19, #5888]
    6a74:	ldrb	w14, [x24, x14]
    6a78:	add	w15, w13, #0x1
    6a7c:	sub	w11, w11, #0x1
    6a80:	str	w15, [x19, #5900]
    6a84:	strb	w9, [x12, x13]
    6a88:	mov	w9, #0x400                 	// #1024
    6a8c:	and	w12, w11, #0xffff
    6a90:	ubfx	w13, w11, #7, #9
    6a94:	bfi	x9, x14, #2, #8
    6a98:	add	w13, w13, #0x100
    6a9c:	cmp	w12, #0x100
    6aa0:	add	x9, x9, x19
    6aa4:	csel	w11, w11, w13, cc  // cc = lo, ul, last
    6aa8:	and	x11, x11, #0xffff
    6aac:	ldrh	w12, [x9, #216]
    6ab0:	ldrb	w11, [x25, x11]
    6ab4:	add	w8, w8, w10
    6ab8:	add	w12, w12, #0x1
    6abc:	add	x11, x19, x11, lsl #2
    6ac0:	strh	w12, [x9, #216]
    6ac4:	ldrh	w12, [x11, #2504]
    6ac8:	sub	w9, w8, #0x3
    6acc:	add	w8, w12, #0x1
    6ad0:	strh	w8, [x11, #2504]
    6ad4:	ldp	w12, w8, [x19, #180]
    6ad8:	ldr	w11, [x19, #5896]
    6adc:	ldr	w10, [x19, #5900]
    6ae0:	sub	w13, w8, #0x2
    6ae4:	str	w13, [x19, #184]
    6ae8:	ldr	w13, [x19, #172]
    6aec:	sub	w14, w12, w8
    6af0:	sub	w12, w8, #0x3
    6af4:	add	w8, w14, #0x1
    6af8:	sub	w11, w11, #0x1
    6afc:	str	w8, [x19, #180]
    6b00:	add	w8, w13, #0x1
    6b04:	b	6b1c <deflateCopy@@Base+0x990>
    6b08:	str	w12, [x19, #184]
    6b0c:	sub	w12, w12, #0x1
    6b10:	cmn	w12, #0x1
    6b14:	add	w8, w8, #0x1
    6b18:	b.eq	6bdc <deflateCopy@@Base+0xa50>  // b.none
    6b1c:	cmp	w8, w9
    6b20:	str	w8, [x19, #172]
    6b24:	b.hi	6b08 <deflateCopy@@Base+0x97c>  // b.pmore
    6b28:	ldr	x14, [x19, #96]
    6b2c:	ldr	w13, [x19, #128]
    6b30:	add	w15, w8, #0x2
    6b34:	ldp	w17, w16, [x19, #140]
    6b38:	ldrb	w14, [x14, w15, uxtw]
    6b3c:	ldp	x18, x15, [x19, #112]
    6b40:	lsl	w13, w13, w16
    6b44:	eor	w13, w13, w14
    6b48:	and	x13, x13, x17
    6b4c:	ldr	w16, [x19, #88]
    6b50:	str	w13, [x19, #128]
    6b54:	lsl	x13, x13, #1
    6b58:	ldrh	w14, [x15, x13]
    6b5c:	mov	w17, w8
    6b60:	and	x16, x16, x17
    6b64:	strh	w14, [x18, x16, lsl #1]
    6b68:	strh	w8, [x15, x13]
    6b6c:	b	6b08 <deflateCopy@@Base+0x97c>
    6b70:	ldr	w8, [x19, #168]
    6b74:	cbz	w8, 6c00 <deflateCopy@@Base+0xa74>
    6b78:	ldr	w9, [x19, #172]
    6b7c:	ldr	x8, [x19, #96]
    6b80:	ldr	x10, [x19, #5904]
    6b84:	ldr	w11, [x19, #5900]
    6b88:	sub	w9, w9, #0x1
    6b8c:	ldrb	w8, [x8, w9, uxtw]
    6b90:	strh	wzr, [x10, x11, lsl #1]
    6b94:	ldr	x9, [x19, #5888]
    6b98:	add	w10, w11, #0x1
    6b9c:	str	w10, [x19, #5900]
    6ba0:	strb	w8, [x9, x11]
    6ba4:	add	x8, x19, x8, lsl #2
    6ba8:	ldrh	w9, [x8, #212]
    6bac:	add	w9, w9, #0x1
    6bb0:	strh	w9, [x8, #212]
    6bb4:	ldr	w8, [x19, #5896]
    6bb8:	ldr	w9, [x19, #5900]
    6bbc:	sub	w8, w8, #0x1
    6bc0:	cmp	w9, w8
    6bc4:	b.ne	6940 <deflateCopy@@Base+0x7b4>  // b.any
    6bc8:	ldr	x8, [x19, #152]
    6bcc:	tbnz	x8, #63, 6cf0 <deflateCopy@@Base+0xb64>
    6bd0:	ldr	x9, [x19, #96]
    6bd4:	add	x1, x9, w8, uxtw
    6bd8:	b	6cf4 <deflateCopy@@Base+0xb68>
    6bdc:	cmp	w10, w11
    6be0:	str	w26, [x19, #160]
    6be4:	stp	wzr, w8, [x19, #168]
    6be8:	b.ne	6964 <deflateCopy@@Base+0x7d8>  // b.any
    6bec:	ldr	x9, [x19, #152]
    6bf0:	tbnz	x9, #63, 6c48 <deflateCopy@@Base+0xabc>
    6bf4:	ldr	x10, [x19, #96]
    6bf8:	add	x1, x10, w9, uxtw
    6bfc:	b	6c4c <deflateCopy@@Base+0xac0>
    6c00:	ldr	w8, [x19, #172]
    6c04:	ldr	w9, [x19, #180]
    6c08:	add	w8, w8, #0x1
    6c0c:	sub	w9, w9, #0x1
    6c10:	stp	w23, w8, [x19, #168]
    6c14:	str	w9, [x19, #180]
    6c18:	b	6964 <deflateCopy@@Base+0x7d8>
    6c1c:	mov	x0, x19
    6c20:	bl	6fe4 <deflateCopy@@Base+0xe58>
    6c24:	cmp	w0, #0x5
    6c28:	str	w0, [x19, #160]
    6c2c:	b.hi	6a18 <deflateCopy@@Base+0x88c>  // b.pmore
    6c30:	ldr	w8, [x19, #200]
    6c34:	cmp	w8, #0x1
    6c38:	b.ne	6dac <deflateCopy@@Base+0xc20>  // b.any
    6c3c:	mov	w0, #0x2                   	// #2
    6c40:	str	w0, [x19, #160]
    6c44:	b	6a18 <deflateCopy@@Base+0x88c>
    6c48:	mov	x1, xzr
    6c4c:	mov	w8, w8
    6c50:	sub	x2, x8, x9
    6c54:	mov	x0, x19
    6c58:	mov	w3, wzr
    6c5c:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    6c60:	ldr	w8, [x19, #172]
    6c64:	ldr	x27, [x19]
    6c68:	str	x8, [x19, #152]
    6c6c:	ldr	x21, [x27, #56]
    6c70:	mov	x0, x21
    6c74:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    6c78:	ldr	w8, [x21, #40]
    6c7c:	ldr	w9, [x27, #32]
    6c80:	cmp	w9, w8
    6c84:	csel	w28, w9, w8, cc  // cc = lo, ul, last
    6c88:	cbz	w28, 6ce0 <deflateCopy@@Base+0xb54>
    6c8c:	ldr	x0, [x27, #24]
    6c90:	ldr	x1, [x21, #32]
    6c94:	mov	w22, w28
    6c98:	mov	x2, x22
    6c9c:	bl	2310 <memcpy@plt>
    6ca0:	ldr	x8, [x27, #24]
    6ca4:	add	x8, x8, x22
    6ca8:	str	x8, [x27, #24]
    6cac:	ldr	x8, [x21, #32]
    6cb0:	add	x8, x8, x22
    6cb4:	str	x8, [x21, #32]
    6cb8:	ldr	x8, [x27, #40]
    6cbc:	ldr	w9, [x27, #32]
    6cc0:	add	x8, x8, x22
    6cc4:	sub	w9, w9, w28
    6cc8:	str	x8, [x27, #40]
    6ccc:	str	w9, [x27, #32]
    6cd0:	ldr	x8, [x21, #40]
    6cd4:	subs	x8, x8, x22
    6cd8:	str	x8, [x21, #40]
    6cdc:	b.eq	6d94 <deflateCopy@@Base+0xc08>  // b.none
    6ce0:	ldr	x8, [x19]
    6ce4:	ldr	w8, [x8, #32]
    6ce8:	cbnz	w8, 6964 <deflateCopy@@Base+0x7d8>
    6cec:	b	6fc4 <deflateCopy@@Base+0xe38>
    6cf0:	mov	x1, xzr
    6cf4:	ldr	w9, [x19, #172]
    6cf8:	mov	x0, x19
    6cfc:	mov	w3, wzr
    6d00:	sub	x2, x9, x8
    6d04:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    6d08:	ldr	w8, [x19, #172]
    6d0c:	ldr	x27, [x19]
    6d10:	str	x8, [x19, #152]
    6d14:	ldr	x21, [x27, #56]
    6d18:	mov	x0, x21
    6d1c:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    6d20:	ldr	w8, [x21, #40]
    6d24:	ldr	w9, [x27, #32]
    6d28:	cmp	w9, w8
    6d2c:	csel	w28, w9, w8, cc  // cc = lo, ul, last
    6d30:	cbz	w28, 6940 <deflateCopy@@Base+0x7b4>
    6d34:	ldr	x0, [x27, #24]
    6d38:	ldr	x1, [x21, #32]
    6d3c:	mov	w22, w28
    6d40:	mov	x2, x22
    6d44:	bl	2310 <memcpy@plt>
    6d48:	ldr	x8, [x27, #24]
    6d4c:	add	x8, x8, x22
    6d50:	str	x8, [x27, #24]
    6d54:	ldr	x8, [x21, #32]
    6d58:	add	x8, x8, x22
    6d5c:	str	x8, [x21, #32]
    6d60:	ldr	x8, [x27, #40]
    6d64:	ldr	w9, [x27, #32]
    6d68:	add	x8, x8, x22
    6d6c:	sub	w9, w9, w28
    6d70:	str	x8, [x27, #40]
    6d74:	str	w9, [x27, #32]
    6d78:	ldr	x8, [x21, #40]
    6d7c:	subs	x8, x8, x22
    6d80:	str	x8, [x21, #40]
    6d84:	b.ne	6940 <deflateCopy@@Base+0x7b4>  // b.any
    6d88:	ldr	x8, [x21, #16]
    6d8c:	str	x8, [x21, #32]
    6d90:	b	6940 <deflateCopy@@Base+0x7b4>
    6d94:	ldr	x8, [x21, #16]
    6d98:	str	x8, [x21, #32]
    6d9c:	ldr	x8, [x19]
    6da0:	ldr	w8, [x8, #32]
    6da4:	cbnz	w8, 6964 <deflateCopy@@Base+0x7d8>
    6da8:	b	6fc4 <deflateCopy@@Base+0xe38>
    6dac:	cmp	w0, #0x3
    6db0:	b.ne	6a18 <deflateCopy@@Base+0x88c>  // b.any
    6db4:	ldp	w8, w9, [x19, #172]
    6db8:	sub	w8, w8, w9
    6dbc:	cmp	w8, #0x1, lsl #12
    6dc0:	b.hi	6c3c <deflateCopy@@Base+0xab0>  // b.pmore
    6dc4:	mov	w0, #0x3                   	// #3
    6dc8:	b	6a18 <deflateCopy@@Base+0x88c>
    6dcc:	ldr	w8, [x19, #168]
    6dd0:	cbz	w8, 6e14 <deflateCopy@@Base+0xc88>
    6dd4:	ldr	w9, [x19, #172]
    6dd8:	ldr	x8, [x19, #96]
    6ddc:	ldr	x10, [x19, #5904]
    6de0:	ldr	w11, [x19, #5900]
    6de4:	sub	w9, w9, #0x1
    6de8:	ldrb	w8, [x8, w9, uxtw]
    6dec:	strh	wzr, [x10, x11, lsl #1]
    6df0:	ldr	x9, [x19, #5888]
    6df4:	add	w10, w11, #0x1
    6df8:	str	w10, [x19, #5900]
    6dfc:	add	x10, x19, x8, lsl #2
    6e00:	strb	w8, [x9, x11]
    6e04:	ldrh	w8, [x10, #212]
    6e08:	add	w8, w8, #0x1
    6e0c:	strh	w8, [x10, #212]
    6e10:	str	wzr, [x19, #168]
    6e14:	ldr	w8, [x19, #172]
    6e18:	mov	w9, #0x2                   	// #2
    6e1c:	cmp	w8, #0x2
    6e20:	csel	w9, w8, w9, cc  // cc = lo, ul, last
    6e24:	cmp	w20, #0x4
    6e28:	str	w9, [x19, #5932]
    6e2c:	b.ne	6e44 <deflateCopy@@Base+0xcb8>  // b.any
    6e30:	ldr	x9, [x19, #152]
    6e34:	tbnz	x9, #63, 6e60 <deflateCopy@@Base+0xcd4>
    6e38:	ldr	x10, [x19, #96]
    6e3c:	add	x1, x10, w9, uxtw
    6e40:	b	6e64 <deflateCopy@@Base+0xcd8>
    6e44:	ldr	w9, [x19, #5900]
    6e48:	cbz	w9, 6fbc <deflateCopy@@Base+0xe30>
    6e4c:	ldr	x9, [x19, #152]
    6e50:	tbnz	x9, #63, 6f14 <deflateCopy@@Base+0xd88>
    6e54:	ldr	x10, [x19, #96]
    6e58:	add	x1, x10, w9, uxtw
    6e5c:	b	6f18 <deflateCopy@@Base+0xd8c>
    6e60:	mov	x1, xzr
    6e64:	sub	x2, x8, x9
    6e68:	mov	w3, #0x1                   	// #1
    6e6c:	mov	x0, x19
    6e70:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    6e74:	ldr	w8, [x19, #172]
    6e78:	ldr	x22, [x19]
    6e7c:	str	x8, [x19, #152]
    6e80:	ldr	x20, [x22, #56]
    6e84:	mov	x0, x20
    6e88:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    6e8c:	ldr	w8, [x20, #40]
    6e90:	ldr	w9, [x22, #32]
    6e94:	cmp	w9, w8
    6e98:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    6e9c:	cbz	w23, 6efc <deflateCopy@@Base+0xd70>
    6ea0:	ldr	x0, [x22, #24]
    6ea4:	ldr	x1, [x20, #32]
    6ea8:	mov	w21, w23
    6eac:	mov	x2, x21
    6eb0:	bl	2310 <memcpy@plt>
    6eb4:	ldr	x8, [x22, #24]
    6eb8:	add	x8, x8, x21
    6ebc:	str	x8, [x22, #24]
    6ec0:	ldr	x8, [x20, #32]
    6ec4:	add	x8, x8, x21
    6ec8:	str	x8, [x20, #32]
    6ecc:	ldr	x8, [x22, #40]
    6ed0:	ldr	w9, [x22, #32]
    6ed4:	add	x8, x8, x21
    6ed8:	sub	w9, w9, w23
    6edc:	str	x8, [x22, #40]
    6ee0:	str	w9, [x22, #32]
    6ee4:	ldr	x8, [x20, #40]
    6ee8:	subs	x8, x8, x21
    6eec:	str	x8, [x20, #40]
    6ef0:	b.ne	6efc <deflateCopy@@Base+0xd70>  // b.any
    6ef4:	ldr	x8, [x20, #16]
    6ef8:	str	x8, [x20, #32]
    6efc:	ldr	x8, [x19]
    6f00:	ldr	w8, [x8, #32]
    6f04:	cmp	w8, #0x0
    6f08:	mov	w8, #0x2                   	// #2
    6f0c:	cinc	w0, w8, ne  // ne = any
    6f10:	b	6fc8 <deflateCopy@@Base+0xe3c>
    6f14:	mov	x1, xzr
    6f18:	sub	x2, x8, x9
    6f1c:	mov	x0, x19
    6f20:	mov	w3, wzr
    6f24:	bl	bf54 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
    6f28:	ldr	w8, [x19, #172]
    6f2c:	ldr	x22, [x19]
    6f30:	str	x8, [x19, #152]
    6f34:	ldr	x20, [x22, #56]
    6f38:	mov	x0, x20
    6f3c:	bl	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    6f40:	ldr	w8, [x20, #40]
    6f44:	ldr	w9, [x22, #32]
    6f48:	cmp	w9, w8
    6f4c:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    6f50:	cbz	w23, 6fb0 <deflateCopy@@Base+0xe24>
    6f54:	ldr	x0, [x22, #24]
    6f58:	ldr	x1, [x20, #32]
    6f5c:	mov	w21, w23
    6f60:	mov	x2, x21
    6f64:	bl	2310 <memcpy@plt>
    6f68:	ldr	x8, [x22, #24]
    6f6c:	add	x8, x8, x21
    6f70:	str	x8, [x22, #24]
    6f74:	ldr	x8, [x20, #32]
    6f78:	add	x8, x8, x21
    6f7c:	str	x8, [x20, #32]
    6f80:	ldr	x8, [x22, #40]
    6f84:	ldr	w9, [x22, #32]
    6f88:	add	x8, x8, x21
    6f8c:	sub	w9, w9, w23
    6f90:	str	x8, [x22, #40]
    6f94:	str	w9, [x22, #32]
    6f98:	ldr	x8, [x20, #40]
    6f9c:	subs	x8, x8, x21
    6fa0:	str	x8, [x20, #40]
    6fa4:	b.ne	6fb0 <deflateCopy@@Base+0xe24>  // b.any
    6fa8:	ldr	x8, [x20, #16]
    6fac:	str	x8, [x20, #32]
    6fb0:	ldr	x8, [x19]
    6fb4:	ldr	w8, [x8, #32]
    6fb8:	cbz	w8, 6fc4 <deflateCopy@@Base+0xe38>
    6fbc:	mov	w0, #0x1                   	// #1
    6fc0:	b	6fc8 <deflateCopy@@Base+0xe3c>
    6fc4:	mov	w0, wzr
    6fc8:	ldp	x20, x19, [sp, #80]
    6fcc:	ldp	x22, x21, [sp, #64]
    6fd0:	ldp	x24, x23, [sp, #48]
    6fd4:	ldp	x26, x25, [sp, #32]
    6fd8:	ldp	x28, x27, [sp, #16]
    6fdc:	ldp	x29, x30, [sp], #96
    6fe0:	ret
    6fe4:	stp	x22, x21, [sp, #-32]!
    6fe8:	stp	x20, x19, [sp, #16]
    6fec:	ldr	x8, [x0, #96]
    6ff0:	ldr	w15, [x0, #172]
    6ff4:	ldr	w14, [x0, #80]
    6ff8:	ldp	w12, w17, [x0, #184]
    6ffc:	ldp	w2, w18, [x0, #204]
    7000:	sxtw	x12, w12
    7004:	ldr	w11, [x0, #180]
    7008:	add	x13, x8, x15
    700c:	sub	w16, w14, #0x106
    7010:	add	x5, x13, x12
    7014:	ldr	x9, [x0, #112]
    7018:	ldr	w10, [x0, #88]
    701c:	subs	w16, w15, w16
    7020:	ldurb	w4, [x5, #-1]
    7024:	ldrb	w5, [x5]
    7028:	lsr	w3, w17, #2
    702c:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    7030:	cmp	w12, w2
    7034:	csel	w17, w17, w3, cc  // cc = lo, ul, last
    7038:	cmp	w18, w11
    703c:	add	x14, x8, #0x5
    7040:	add	x15, x13, #0x102
    7044:	csel	w18, w11, w18, hi  // hi = pmore
    7048:	mov	w2, #0x102                 	// #258
    704c:	mov	x3, #0x10100000000         	// #1103806595072
    7050:	mov	w6, w1
    7054:	add	x7, x8, x6
    7058:	sxtw	x19, w12
    705c:	ldrb	w20, [x7, x19]
    7060:	cmp	w20, w5, uxtb
    7064:	b.ne	7240 <deflateCopy@@Base+0x10b4>  // b.any
    7068:	add	x19, x19, x7
    706c:	ldurb	w19, [x19, #-1]
    7070:	cmp	w19, w4, uxtb
    7074:	b.ne	7240 <deflateCopy@@Base+0x10b4>  // b.any
    7078:	ldrb	w19, [x7]
    707c:	ldrb	w20, [x13]
    7080:	cmp	w19, w20
    7084:	b.ne	7240 <deflateCopy@@Base+0x10b4>  // b.any
    7088:	ldrb	w7, [x7, #1]
    708c:	ldrb	w19, [x13, #1]
    7090:	cmp	w7, w19
    7094:	b.ne	7240 <deflateCopy@@Base+0x10b4>  // b.any
    7098:	mov	x7, xzr
    709c:	add	x6, x14, x6
    70a0:	add	x19, x13, x7
    70a4:	add	x20, x6, x7
    70a8:	ldrb	w21, [x19, #3]
    70ac:	ldurb	w22, [x20, #-2]
    70b0:	cmp	w21, w22
    70b4:	b.ne	7170 <deflateCopy@@Base+0xfe4>  // b.any
    70b8:	ldrb	w19, [x19, #4]
    70bc:	ldurb	w20, [x20, #-1]
    70c0:	cmp	w19, w20
    70c4:	b.ne	7188 <deflateCopy@@Base+0xffc>  // b.any
    70c8:	add	x19, x13, x7
    70cc:	ldrb	w20, [x19, #5]
    70d0:	ldrb	w21, [x6, x7]
    70d4:	cmp	w20, w21
    70d8:	b.ne	71a4 <deflateCopy@@Base+0x1018>  // b.any
    70dc:	add	x20, x6, x7
    70e0:	ldrb	w19, [x19, #6]
    70e4:	ldrb	w21, [x20, #1]
    70e8:	cmp	w19, w21
    70ec:	b.ne	71bc <deflateCopy@@Base+0x1030>  // b.any
    70f0:	add	x19, x13, x7
    70f4:	ldrb	w21, [x19, #7]
    70f8:	ldrb	w20, [x20, #2]
    70fc:	cmp	w21, w20
    7100:	b.ne	71d8 <deflateCopy@@Base+0x104c>  // b.any
    7104:	add	x20, x6, x7
    7108:	ldrb	w19, [x19, #8]
    710c:	ldrb	w21, [x20, #3]
    7110:	cmp	w19, w21
    7114:	b.ne	71f0 <deflateCopy@@Base+0x1064>  // b.any
    7118:	add	x19, x13, x7
    711c:	ldrb	w21, [x19, #9]
    7120:	ldrb	w20, [x20, #4]
    7124:	cmp	w21, w20
    7128:	b.ne	720c <deflateCopy@@Base+0x1080>  // b.any
    712c:	add	x20, x7, #0x2
    7130:	cmp	x20, #0xf9
    7134:	add	x20, x7, #0x8
    7138:	b.hi	7154 <deflateCopy@@Base+0xfc8>  // b.pmore
    713c:	add	x7, x6, x7
    7140:	ldrb	w19, [x19, #10]
    7144:	ldrb	w7, [x7, #5]
    7148:	cmp	w19, w7
    714c:	mov	x7, x20
    7150:	b.eq	70a0 <deflateCopy@@Base+0xf14>  // b.none
    7154:	add	x6, x13, x20
    7158:	add	x6, x6, #0x2
    715c:	sub	x7, x15, x6
    7160:	sub	x6, x2, w7, sxtw
    7164:	cmp	w6, w12
    7168:	b.gt	7220 <deflateCopy@@Base+0x1094>
    716c:	b	7240 <deflateCopy@@Base+0x10b4>
    7170:	add	x6, x19, #0x3
    7174:	sub	x7, x15, x6
    7178:	sub	x6, x2, w7, sxtw
    717c:	cmp	w6, w12
    7180:	b.gt	7220 <deflateCopy@@Base+0x1094>
    7184:	b	7240 <deflateCopy@@Base+0x10b4>
    7188:	add	x6, x13, x7
    718c:	add	x6, x6, #0x4
    7190:	sub	x7, x15, x6
    7194:	sub	x6, x2, w7, sxtw
    7198:	cmp	w6, w12
    719c:	b.gt	7220 <deflateCopy@@Base+0x1094>
    71a0:	b	7240 <deflateCopy@@Base+0x10b4>
    71a4:	add	x6, x19, #0x5
    71a8:	sub	x7, x15, x6
    71ac:	sub	x6, x2, w7, sxtw
    71b0:	cmp	w6, w12
    71b4:	b.gt	7220 <deflateCopy@@Base+0x1094>
    71b8:	b	7240 <deflateCopy@@Base+0x10b4>
    71bc:	add	x6, x13, x7
    71c0:	add	x6, x6, #0x6
    71c4:	sub	x7, x15, x6
    71c8:	sub	x6, x2, w7, sxtw
    71cc:	cmp	w6, w12
    71d0:	b.gt	7220 <deflateCopy@@Base+0x1094>
    71d4:	b	7240 <deflateCopy@@Base+0x10b4>
    71d8:	add	x6, x19, #0x7
    71dc:	sub	x7, x15, x6
    71e0:	sub	x6, x2, w7, sxtw
    71e4:	cmp	w6, w12
    71e8:	b.gt	7220 <deflateCopy@@Base+0x1094>
    71ec:	b	7240 <deflateCopy@@Base+0x10b4>
    71f0:	add	x6, x13, x7
    71f4:	add	x6, x6, #0x8
    71f8:	sub	x7, x15, x6
    71fc:	sub	x6, x2, w7, sxtw
    7200:	cmp	w6, w12
    7204:	b.gt	7220 <deflateCopy@@Base+0x1094>
    7208:	b	7240 <deflateCopy@@Base+0x10b4>
    720c:	add	x6, x19, #0x9
    7210:	sub	x7, x15, x6
    7214:	sub	x6, x2, w7, sxtw
    7218:	cmp	w6, w12
    721c:	b.le	7240 <deflateCopy@@Base+0x10b4>
    7220:	cmp	w6, w18
    7224:	str	w1, [x0, #176]
    7228:	b.ge	726c <deflateCopy@@Base+0x10e0>  // b.tcont
    722c:	sub	x12, x3, x7, lsl #32
    7230:	asr	x12, x12, #32
    7234:	ldrb	w4, [x13, x12]
    7238:	ldrb	w5, [x13, x6]
    723c:	mov	w12, w6
    7240:	and	x1, x1, x10
    7244:	ldrh	w1, [x9, x1, lsl #1]
    7248:	cmp	w16, w1
    724c:	b.cs	7258 <deflateCopy@@Base+0x10cc>  // b.hs, b.nlast
    7250:	subs	w17, w17, #0x1
    7254:	b.ne	7050 <deflateCopy@@Base+0xec4>  // b.any
    7258:	ldp	x20, x19, [sp, #16]
    725c:	cmp	w12, w11
    7260:	csel	w0, w11, w12, hi  // hi = pmore
    7264:	ldp	x22, x21, [sp], #32
    7268:	ret
    726c:	mov	w12, w6
    7270:	b	7258 <deflateCopy@@Base+0x10cc>

0000000000007274 <inflateBackInit_@@ZLIB_1.2.0>:
    7274:	stp	x29, x30, [sp, #-48]!
    7278:	stp	x22, x21, [sp, #16]
    727c:	stp	x20, x19, [sp, #32]
    7280:	mov	x29, sp
    7284:	cbz	x3, 7320 <inflateBackInit_@@ZLIB_1.2.0+0xac>
    7288:	mov	x21, x0
    728c:	cmp	w4, #0x70
    7290:	mov	w0, #0xfffffffa            	// #-6
    7294:	b.ne	7310 <inflateBackInit_@@ZLIB_1.2.0+0x9c>  // b.any
    7298:	ldrb	w8, [x3]
    729c:	cmp	w8, #0x31
    72a0:	b.ne	7310 <inflateBackInit_@@ZLIB_1.2.0+0x9c>  // b.any
    72a4:	and	w8, w1, #0xfffffff8
    72a8:	mov	w19, w1
    72ac:	cmp	w8, #0x8
    72b0:	mov	w0, #0xfffffffe            	// #-2
    72b4:	b.ne	7310 <inflateBackInit_@@ZLIB_1.2.0+0x9c>  // b.any
    72b8:	cbz	x21, 7310 <inflateBackInit_@@ZLIB_1.2.0+0x9c>
    72bc:	mov	x20, x2
    72c0:	cbz	x2, 7310 <inflateBackInit_@@ZLIB_1.2.0+0x9c>
    72c4:	ldr	x8, [x21, #64]
    72c8:	str	xzr, [x21, #48]
    72cc:	cbz	x8, 7334 <inflateBackInit_@@ZLIB_1.2.0+0xc0>
    72d0:	ldr	x9, [x21, #72]
    72d4:	cbz	x9, 734c <inflateBackInit_@@ZLIB_1.2.0+0xd8>
    72d8:	ldr	x0, [x21, #80]
    72dc:	mov	w1, #0x1                   	// #1
    72e0:	mov	w2, #0x1bf8                	// #7160
    72e4:	mov	w22, #0x1                   	// #1
    72e8:	blr	x8
    72ec:	cbz	x0, 735c <inflateBackInit_@@ZLIB_1.2.0+0xe8>
    72f0:	mov	x8, x0
    72f4:	mov	w0, wzr
    72f8:	mov	w9, #0x8000                	// #32768
    72fc:	lsl	w10, w22, w19
    7300:	str	x8, [x21, #56]
    7304:	stp	xzr, x20, [x8, #64]
    7308:	str	w9, [x8, #28]
    730c:	stp	w19, w10, [x8, #56]
    7310:	ldp	x20, x19, [sp, #32]
    7314:	ldp	x22, x21, [sp, #16]
    7318:	ldp	x29, x30, [sp], #48
    731c:	ret
    7320:	mov	w0, #0xfffffffa            	// #-6
    7324:	ldp	x20, x19, [sp, #32]
    7328:	ldp	x22, x21, [sp, #16]
    732c:	ldp	x29, x30, [sp], #48
    7330:	ret
    7334:	adrp	x8, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    7338:	add	x8, x8, #0xb3c
    733c:	str	x8, [x21, #64]
    7340:	str	xzr, [x21, #80]
    7344:	ldr	x9, [x21, #72]
    7348:	cbnz	x9, 72d8 <inflateBackInit_@@ZLIB_1.2.0+0x64>
    734c:	adrp	x9, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    7350:	add	x9, x9, #0xb44
    7354:	str	x9, [x21, #72]
    7358:	b	72d8 <inflateBackInit_@@ZLIB_1.2.0+0x64>
    735c:	mov	w0, #0xfffffffc            	// #-4
    7360:	ldp	x20, x19, [sp, #32]
    7364:	ldp	x22, x21, [sp, #16]
    7368:	ldp	x29, x30, [sp], #48
    736c:	ret

0000000000007370 <inflateBack@@ZLIB_1.2.0>:
    7370:	sub	sp, sp, #0xc0
    7374:	stp	x29, x30, [sp, #96]
    7378:	add	x29, sp, #0x50
    737c:	str	d8, [sp, #80]
    7380:	stp	x28, x27, [sp, #112]
    7384:	stp	x26, x25, [sp, #128]
    7388:	stp	x24, x23, [sp, #144]
    738c:	stp	x22, x21, [sp, #160]
    7390:	stp	x20, x19, [sp, #176]
    7394:	stur	x2, [x29, #-8]
    7398:	cbz	x0, 73dc <inflateBack@@ZLIB_1.2.0+0x6c>
    739c:	ldr	x28, [x0, #56]
    73a0:	mov	x23, x0
    73a4:	cbz	x28, 73dc <inflateBack@@ZLIB_1.2.0+0x6c>
    73a8:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    73ac:	ldr	d0, [x8, #1752]
    73b0:	str	xzr, [x23, #48]
    73b4:	str	wzr, [x28, #64]
    73b8:	mov	x24, x1
    73bc:	str	d0, [x28, #8]
    73c0:	ldr	x8, [x23]
    73c4:	stur	x3, [x29, #-32]
    73c8:	str	x4, [sp, #40]
    73cc:	str	x8, [x29, #8]
    73d0:	cbz	x8, 73e4 <inflateBack@@ZLIB_1.2.0+0x74>
    73d4:	ldr	w20, [x23, #8]
    73d8:	b	73e8 <inflateBack@@ZLIB_1.2.0+0x78>
    73dc:	mov	w0, #0xfffffffe            	// #-2
    73e0:	b	8270 <inflateBack@@ZLIB_1.2.0+0xf00>
    73e4:	mov	w20, wzr
    73e8:	add	x8, x28, #0x558
    73ec:	str	x8, [sp, #32]
    73f0:	add	x8, x28, #0x78
    73f4:	str	x8, [sp, #24]
    73f8:	add	x8, x28, #0x98
    73fc:	str	x8, [sp, #16]
    7400:	add	x8, x28, #0x318
    7404:	stur	x8, [x29, #-24]
    7408:	add	x8, x28, #0x7c
    740c:	str	x8, [sp, #8]
    7410:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7414:	ldr	x25, [x28, #72]
    7418:	ldr	w26, [x28, #60]
    741c:	ldr	d8, [x8, #1760]
    7420:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7424:	mov	x22, xzr
    7428:	mov	w21, wzr
    742c:	add	x19, x28, #0x90
    7430:	add	x27, x27, #0x712
    7434:	mov	w8, #0x3f3f                	// #16191
    7438:	stur	x19, [x29, #-16]
    743c:	mov	w9, #0xffffc0c1            	// #-16191
    7440:	add	w8, w8, w9
    7444:	cmp	w8, #0x12
    7448:	b.hi	8294 <inflateBack@@ZLIB_1.2.0+0xf24>  // b.pmore
    744c:	adrp	x11, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7450:	add	x11, x11, #0x6e8
    7454:	adr	x9, 7468 <inflateBack@@ZLIB_1.2.0+0xf8>
    7458:	ldrh	w10, [x11, x8, lsl #1]
    745c:	add	x9, x9, x10, lsl #2
    7460:	mov	w0, #0xfffffffd            	// #-3
    7464:	br	x9
    7468:	ldr	w8, [x28, #12]
    746c:	cbz	w8, 7540 <inflateBack@@ZLIB_1.2.0+0x1d0>
    7470:	and	w8, w21, #0x7
    7474:	and	w21, w21, #0xfffffff8
    7478:	lsr	x22, x22, x8
    747c:	mov	w8, #0x3f50                	// #16208
    7480:	b	77d0 <inflateBack@@ZLIB_1.2.0+0x460>
    7484:	and	w8, w21, #0x7
    7488:	and	w21, w21, #0xfffffff8
    748c:	cmp	w21, #0x1f
    7490:	lsr	x22, x22, x8
    7494:	b.hi	75d4 <inflateBack@@ZLIB_1.2.0+0x264>  // b.pmore
    7498:	mov	w19, w21
    749c:	b	74cc <inflateBack@@ZLIB_1.2.0+0x15c>
    74a0:	ldr	x8, [x29, #8]
    74a4:	add	x21, x19, #0x8
    74a8:	sub	w20, w20, #0x1
    74ac:	cmp	x19, #0x18
    74b0:	add	x9, x8, #0x1
    74b4:	str	x9, [x29, #8]
    74b8:	ldrb	w8, [x8]
    74bc:	lsl	x8, x8, x19
    74c0:	add	x22, x8, x22
    74c4:	mov	x19, x21
    74c8:	b.cs	75d0 <inflateBack@@ZLIB_1.2.0+0x260>  // b.hs, b.nlast
    74cc:	cbnz	w20, 74a0 <inflateBack@@ZLIB_1.2.0+0x130>
    74d0:	ldur	x0, [x29, #-8]
    74d4:	add	x1, x29, #0x8
    74d8:	blr	x24
    74dc:	mov	w20, w0
    74e0:	cbnz	w0, 74a0 <inflateBack@@ZLIB_1.2.0+0x130>
    74e4:	b	825c <inflateBack@@ZLIB_1.2.0+0xeec>
    74e8:	cmp	w21, #0xd
    74ec:	b.hi	769c <inflateBack@@ZLIB_1.2.0+0x32c>  // b.pmore
    74f0:	mov	w19, w21
    74f4:	b	7524 <inflateBack@@ZLIB_1.2.0+0x1b4>
    74f8:	ldr	x8, [x29, #8]
    74fc:	add	x21, x19, #0x8
    7500:	sub	w20, w20, #0x1
    7504:	cmp	x19, #0x6
    7508:	add	x9, x8, #0x1
    750c:	str	x9, [x29, #8]
    7510:	ldrb	w8, [x8]
    7514:	lsl	x8, x8, x19
    7518:	add	x22, x8, x22
    751c:	mov	x19, x21
    7520:	b.cs	7698 <inflateBack@@ZLIB_1.2.0+0x328>  // b.hs, b.nlast
    7524:	cbnz	w20, 74f8 <inflateBack@@ZLIB_1.2.0+0x188>
    7528:	ldur	x0, [x29, #-8]
    752c:	add	x1, x29, #0x8
    7530:	blr	x24
    7534:	mov	w20, w0
    7538:	cbnz	w0, 74f8 <inflateBack@@ZLIB_1.2.0+0x188>
    753c:	b	825c <inflateBack@@ZLIB_1.2.0+0xeec>
    7540:	cmp	w21, #0x2
    7544:	b.hi	7584 <inflateBack@@ZLIB_1.2.0+0x214>  // b.pmore
    7548:	cbnz	w20, 7560 <inflateBack@@ZLIB_1.2.0+0x1f0>
    754c:	ldur	x0, [x29, #-8]
    7550:	add	x1, x29, #0x8
    7554:	blr	x24
    7558:	mov	w20, w0
    755c:	cbz	w0, 825c <inflateBack@@ZLIB_1.2.0+0xeec>
    7560:	ldr	x8, [x29, #8]
    7564:	sub	w20, w20, #0x1
    7568:	add	x9, x8, #0x1
    756c:	str	x9, [x29, #8]
    7570:	ldrb	w8, [x8]
    7574:	mov	w9, w21
    7578:	add	w21, w21, #0x8
    757c:	lsl	x8, x8, x9
    7580:	add	x22, x8, x22
    7584:	adrp	x11, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7588:	and	w8, w22, #0x1
    758c:	ubfx	w9, w22, #1, #2
    7590:	add	x11, x11, #0x70e
    7594:	str	w8, [x28, #12]
    7598:	adr	x10, 75ac <inflateBack@@ZLIB_1.2.0+0x23c>
    759c:	ldrb	w8, [x11, x9]
    75a0:	add	x10, x10, x8, lsl #2
    75a4:	mov	w8, #0x3f41                	// #16193
    75a8:	br	x10
    75ac:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    75b0:	add	x8, x8, #0x738
    75b4:	str	x8, [x28, #104]
    75b8:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    75bc:	add	x8, x8, #0xf38
    75c0:	str	x8, [x28, #112]
    75c4:	str	d8, [x28, #120]
    75c8:	mov	w8, #0x3f48                	// #16200
    75cc:	b	7864 <inflateBack@@ZLIB_1.2.0+0x4f4>
    75d0:	ldur	x19, [x29, #-16]
    75d4:	lsr	x8, x22, #16
    75d8:	eor	x8, x8, #0xffff
    75dc:	cmp	x8, w22, uxth
    75e0:	b.ne	768c <inflateBack@@ZLIB_1.2.0+0x31c>  // b.any
    75e4:	ands	w19, w22, #0xffff
    75e8:	str	w19, [x28, #92]
    75ec:	b.eq	77dc <inflateBack@@ZLIB_1.2.0+0x46c>  // b.none
    75f0:	ldur	x21, [x29, #-32]
    75f4:	ldr	x22, [sp, #40]
    75f8:	b	764c <inflateBack@@ZLIB_1.2.0+0x2dc>
    75fc:	cmp	w19, w20
    7600:	ldr	x1, [x29, #8]
    7604:	csel	w8, w20, w19, hi  // hi = pmore
    7608:	cmp	w8, w26
    760c:	csel	w27, w26, w8, hi  // hi = pmore
    7610:	mov	x0, x25
    7614:	mov	x2, x27
    7618:	bl	2310 <memcpy@plt>
    761c:	ldr	x8, [x29, #8]
    7620:	sub	w20, w20, w27
    7624:	sub	w26, w26, w27
    7628:	add	x25, x25, x27
    762c:	add	x8, x8, x27
    7630:	str	x8, [x29, #8]
    7634:	ldr	w8, [x28, #92]
    7638:	subs	w19, w8, w27
    763c:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7640:	add	x27, x27, #0x712
    7644:	str	w19, [x28, #92]
    7648:	b.eq	77dc <inflateBack@@ZLIB_1.2.0+0x46c>  // b.none
    764c:	cbnz	w20, 7664 <inflateBack@@ZLIB_1.2.0+0x2f4>
    7650:	ldur	x0, [x29, #-8]
    7654:	add	x1, x29, #0x8
    7658:	blr	x24
    765c:	mov	w20, w0
    7660:	cbz	w0, 825c <inflateBack@@ZLIB_1.2.0+0xeec>
    7664:	cbnz	w26, 75fc <inflateBack@@ZLIB_1.2.0+0x28c>
    7668:	ldr	w26, [x28, #60]
    766c:	ldr	x25, [x28, #72]
    7670:	mov	x0, x22
    7674:	mov	w2, w26
    7678:	mov	x1, x25
    767c:	str	w26, [x28, #64]
    7680:	blr	x21
    7684:	cbz	w0, 75fc <inflateBack@@ZLIB_1.2.0+0x28c>
    7688:	b	8260 <inflateBack@@ZLIB_1.2.0+0xef0>
    768c:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7690:	add	x8, x8, #0xfcb
    7694:	b	77c8 <inflateBack@@ZLIB_1.2.0+0x458>
    7698:	ldur	x19, [x29, #-16]
    769c:	and	w10, w22, #0x1f
    76a0:	ubfx	w9, w22, #5, #5
    76a4:	ubfx	w8, w22, #10, #4
    76a8:	lsr	x22, x22, #14
    76ac:	add	w11, w10, #0x101
    76b0:	add	w12, w9, #0x1
    76b4:	add	w8, w8, #0x4
    76b8:	cmp	w10, #0x1d
    76bc:	sub	w21, w21, #0xe
    76c0:	stp	w11, w12, [x28, #132]
    76c4:	str	w8, [x28, #128]
    76c8:	b.hi	775c <inflateBack@@ZLIB_1.2.0+0x3ec>  // b.pmore
    76cc:	cmp	w9, #0x1e
    76d0:	b.cs	775c <inflateBack@@ZLIB_1.2.0+0x3ec>  // b.hs, b.nlast
    76d4:	mov	w9, wzr
    76d8:	str	wzr, [x28, #140]
    76dc:	b	7730 <inflateBack@@ZLIB_1.2.0+0x3c0>
    76e0:	ldr	x10, [x29, #8]
    76e4:	sub	w20, w20, #0x1
    76e8:	add	x11, x10, #0x1
    76ec:	str	x11, [x29, #8]
    76f0:	ldrb	w10, [x10]
    76f4:	mov	w11, w21
    76f8:	add	w21, w21, #0x8
    76fc:	lsl	x10, x10, x11
    7700:	add	x22, x10, x22
    7704:	add	w10, w9, #0x1
    7708:	ldrh	w9, [x27, w9, uxtw #1]
    770c:	and	w11, w22, #0x7
    7710:	lsr	x22, x22, #3
    7714:	str	w10, [x28, #140]
    7718:	add	x9, x28, x9, lsl #1
    771c:	cmp	w10, w8
    7720:	strh	w11, [x9, #152]
    7724:	sub	w21, w21, #0x3
    7728:	mov	w9, w10
    772c:	b.cs	7768 <inflateBack@@ZLIB_1.2.0+0x3f8>  // b.hs, b.nlast
    7730:	cmp	w21, #0x2
    7734:	b.hi	7704 <inflateBack@@ZLIB_1.2.0+0x394>  // b.pmore
    7738:	cbnz	w20, 76e0 <inflateBack@@ZLIB_1.2.0+0x370>
    773c:	ldur	x0, [x29, #-8]
    7740:	add	x1, x29, #0x8
    7744:	blr	x24
    7748:	mov	w20, w0
    774c:	cbz	w0, 825c <inflateBack@@ZLIB_1.2.0+0xeec>
    7750:	ldr	w9, [x28, #140]
    7754:	ldr	w8, [x28, #128]
    7758:	b	76e0 <inflateBack@@ZLIB_1.2.0+0x370>
    775c:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7760:	add	x8, x8, #0xfe8
    7764:	b	77c8 <inflateBack@@ZLIB_1.2.0+0x458>
    7768:	cmp	w10, #0x12
    776c:	b.hi	7790 <inflateBack@@ZLIB_1.2.0+0x420>  // b.pmore
    7770:	mov	w8, w10
    7774:	ldrh	w9, [x27, x8, lsl #1]
    7778:	cmp	x8, #0x12
    777c:	add	x8, x8, #0x1
    7780:	add	x9, x28, x9, lsl #1
    7784:	strh	wzr, [x9, #152]
    7788:	b.cc	7774 <inflateBack@@ZLIB_1.2.0+0x404>  // b.lo, b.ul, b.last
    778c:	str	w8, [x28, #140]
    7790:	ldp	x4, x8, [sp, #24]
    7794:	ldr	x1, [sp, #16]
    7798:	ldur	x5, [x29, #-24]
    779c:	mov	w2, #0x13                  	// #19
    77a0:	str	x8, [x28, #144]
    77a4:	str	x8, [x28, #104]
    77a8:	mov	w8, #0x7                   	// #7
    77ac:	mov	w0, wzr
    77b0:	mov	x3, x19
    77b4:	str	w8, [x28, #120]
    77b8:	bl	b494 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    77bc:	cbz	w0, 77e8 <inflateBack@@ZLIB_1.2.0+0x478>
    77c0:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    77c4:	add	x8, x8, #0xc
    77c8:	str	x8, [x23, #48]
    77cc:	mov	w8, #0x3f51                	// #16209
    77d0:	str	w8, [x28, #8]
    77d4:	ldr	w8, [x28, #8]
    77d8:	b	743c <inflateBack@@ZLIB_1.2.0+0xcc>
    77dc:	mov	x22, xzr
    77e0:	mov	w21, wzr
    77e4:	b	7e38 <inflateBack@@ZLIB_1.2.0+0xac8>
    77e8:	ldp	w2, w8, [x28, #132]
    77ec:	str	wzr, [x28, #140]
    77f0:	cmn	w8, w2
    77f4:	b.ne	7878 <inflateBack@@ZLIB_1.2.0+0x508>  // b.any
    77f8:	ldur	x5, [x29, #-24]
    77fc:	ldr	w8, [x28, #8]
    7800:	mov	w9, #0x3f51                	// #16209
    7804:	cmp	w8, w9
    7808:	b.eq	77d4 <inflateBack@@ZLIB_1.2.0+0x464>  // b.none
    780c:	ldrh	w8, [x28, #664]
    7810:	cbz	w8, 7bd4 <inflateBack@@ZLIB_1.2.0+0x864>
    7814:	ldp	x4, x8, [sp, #24]
    7818:	ldr	x1, [sp, #16]
    781c:	mov	w0, #0x1                   	// #1
    7820:	mov	x3, x19
    7824:	str	x8, [x28, #144]
    7828:	str	x8, [x28, #104]
    782c:	mov	w8, #0x9                   	// #9
    7830:	str	w8, [x28, #120]
    7834:	mov	x27, x5
    7838:	bl	b494 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    783c:	cbz	w0, 7be0 <inflateBack@@ZLIB_1.2.0+0x870>
    7840:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    7844:	add	x8, x8, #0x64
    7848:	b	8138 <inflateBack@@ZLIB_1.2.0+0xdc8>
    784c:	mov	w8, #0x3f44                	// #16196
    7850:	b	7864 <inflateBack@@ZLIB_1.2.0+0x4f4>
    7854:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7858:	add	x8, x8, #0xfb8
    785c:	str	x8, [x23, #48]
    7860:	mov	w8, #0x3f51                	// #16209
    7864:	str	w8, [x28, #8]
    7868:	lsr	x22, x22, #3
    786c:	sub	w21, w21, #0x3
    7870:	mov	w8, w8
    7874:	b	743c <inflateBack@@ZLIB_1.2.0+0xcc>
    7878:	str	x23, [sp]
    787c:	b	78b4 <inflateBack@@ZLIB_1.2.0+0x544>
    7880:	ldr	w9, [x28, #140]
    7884:	lsr	x22, x22, x27
    7888:	sub	w21, w21, w27
    788c:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7890:	add	w11, w9, #0x1
    7894:	add	x9, x28, x9, lsl #1
    7898:	str	w11, [x28, #140]
    789c:	strh	w8, [x9, #152]
    78a0:	ldp	w2, w8, [x28, #132]
    78a4:	add	x27, x27, #0x712
    78a8:	add	w9, w8, w2
    78ac:	cmp	w11, w9
    78b0:	b.cs	77fc <inflateBack@@ZLIB_1.2.0+0x48c>  // b.hs, b.nlast
    78b4:	ldr	w9, [x28, #120]
    78b8:	ldr	x8, [x28, #104]
    78bc:	mov	w10, #0xffffffff            	// #-1
    78c0:	lsl	w10, w10, w9
    78c4:	bic	w10, w22, w10
    78c8:	add	x10, x8, w10, uxtw #2
    78cc:	ldrb	w27, [x10, #1]
    78d0:	cmp	w21, w27
    78d4:	b.cs	7940 <inflateBack@@ZLIB_1.2.0+0x5d0>  // b.hs, b.nlast
    78d8:	mov	w21, w21
    78dc:	b	791c <inflateBack@@ZLIB_1.2.0+0x5ac>
    78e0:	ldr	x10, [x29, #8]
    78e4:	sub	w20, w20, #0x1
    78e8:	add	x11, x10, #0x1
    78ec:	str	x11, [x29, #8]
    78f0:	ldrb	w10, [x10]
    78f4:	lsl	x10, x10, x21
    78f8:	add	x22, x10, x22
    78fc:	mov	w10, #0xffffffff            	// #-1
    7900:	lsl	w10, w10, w9
    7904:	bic	w10, w22, w10
    7908:	add	x10, x8, w10, uxtw #2
    790c:	ldrb	w27, [x10, #1]
    7910:	add	x21, x21, #0x8
    7914:	cmp	x21, x27
    7918:	b.cs	7940 <inflateBack@@ZLIB_1.2.0+0x5d0>  // b.hs, b.nlast
    791c:	cbnz	w20, 78e0 <inflateBack@@ZLIB_1.2.0+0x570>
    7920:	ldur	x0, [x29, #-8]
    7924:	add	x1, x29, #0x8
    7928:	blr	x24
    792c:	mov	w20, w0
    7930:	cbz	w0, 825c <inflateBack@@ZLIB_1.2.0+0xeec>
    7934:	ldr	x8, [x28, #104]
    7938:	ldr	w9, [x28, #120]
    793c:	b	78e0 <inflateBack@@ZLIB_1.2.0+0x570>
    7940:	add	x8, x10, #0x2
    7944:	ldrh	w8, [x8]
    7948:	ldur	x5, [x29, #-24]
    794c:	cmp	w8, #0xf
    7950:	b.ls	7880 <inflateBack@@ZLIB_1.2.0+0x510>  // b.plast
    7954:	cmp	w8, #0x10
    7958:	b.eq	79d0 <inflateBack@@ZLIB_1.2.0+0x660>  // b.none
    795c:	cmp	w8, #0x11
    7960:	b.ne	7a3c <inflateBack@@ZLIB_1.2.0+0x6cc>  // b.any
    7964:	add	w19, w27, #0x3
    7968:	cmp	w21, w19
    796c:	b.cs	7aac <inflateBack@@ZLIB_1.2.0+0x73c>  // b.hs, b.nlast
    7970:	mvn	w8, w21
    7974:	add	w8, w19, w8
    7978:	add	w8, w8, #0x8
    797c:	and	w8, w8, #0xfffffff8
    7980:	mov	w23, w21
    7984:	add	w21, w8, w21
    7988:	b	79b4 <inflateBack@@ZLIB_1.2.0+0x644>
    798c:	ldr	x8, [x29, #8]
    7990:	sub	w20, w20, #0x1
    7994:	add	x9, x8, #0x1
    7998:	str	x9, [x29, #8]
    799c:	ldrb	w8, [x8]
    79a0:	lsl	x8, x8, x23
    79a4:	add	x23, x23, #0x8
    79a8:	cmp	x23, x19
    79ac:	add	x22, x8, x22
    79b0:	b.cs	7aa8 <inflateBack@@ZLIB_1.2.0+0x738>  // b.hs, b.nlast
    79b4:	cbnz	w20, 798c <inflateBack@@ZLIB_1.2.0+0x61c>
    79b8:	ldur	x0, [x29, #-8]
    79bc:	add	x1, x29, #0x8
    79c0:	blr	x24
    79c4:	mov	w20, w0
    79c8:	cbnz	w0, 798c <inflateBack@@ZLIB_1.2.0+0x61c>
    79cc:	b	8258 <inflateBack@@ZLIB_1.2.0+0xee8>
    79d0:	add	w19, w27, #0x2
    79d4:	cmp	w21, w19
    79d8:	b.cs	7ad4 <inflateBack@@ZLIB_1.2.0+0x764>  // b.hs, b.nlast
    79dc:	mvn	w8, w21
    79e0:	add	w8, w19, w8
    79e4:	add	w8, w8, #0x8
    79e8:	and	w8, w8, #0xfffffff8
    79ec:	mov	w23, w21
    79f0:	add	w21, w8, w21
    79f4:	b	7a20 <inflateBack@@ZLIB_1.2.0+0x6b0>
    79f8:	ldr	x8, [x29, #8]
    79fc:	sub	w20, w20, #0x1
    7a00:	add	x9, x8, #0x1
    7a04:	str	x9, [x29, #8]
    7a08:	ldrb	w8, [x8]
    7a0c:	lsl	x8, x8, x23
    7a10:	add	x23, x23, #0x8
    7a14:	cmp	x23, x19
    7a18:	add	x22, x8, x22
    7a1c:	b.cs	7ad0 <inflateBack@@ZLIB_1.2.0+0x760>  // b.hs, b.nlast
    7a20:	cbnz	w20, 79f8 <inflateBack@@ZLIB_1.2.0+0x688>
    7a24:	ldur	x0, [x29, #-8]
    7a28:	add	x1, x29, #0x8
    7a2c:	blr	x24
    7a30:	mov	w20, w0
    7a34:	cbnz	w0, 79f8 <inflateBack@@ZLIB_1.2.0+0x688>
    7a38:	b	8258 <inflateBack@@ZLIB_1.2.0+0xee8>
    7a3c:	add	w19, w27, #0x7
    7a40:	cmp	w21, w19
    7a44:	b.cs	7b0c <inflateBack@@ZLIB_1.2.0+0x79c>  // b.hs, b.nlast
    7a48:	mvn	w8, w21
    7a4c:	add	w8, w19, w8
    7a50:	add	w8, w8, #0x8
    7a54:	and	w8, w8, #0xfffffff8
    7a58:	mov	w23, w21
    7a5c:	add	w21, w8, w21
    7a60:	b	7a8c <inflateBack@@ZLIB_1.2.0+0x71c>
    7a64:	ldr	x8, [x29, #8]
    7a68:	sub	w20, w20, #0x1
    7a6c:	add	x9, x8, #0x1
    7a70:	str	x9, [x29, #8]
    7a74:	ldrb	w8, [x8]
    7a78:	lsl	x8, x8, x23
    7a7c:	add	x23, x23, #0x8
    7a80:	cmp	x23, x19
    7a84:	add	x22, x8, x22
    7a88:	b.cs	7b08 <inflateBack@@ZLIB_1.2.0+0x798>  // b.hs, b.nlast
    7a8c:	cbnz	w20, 7a64 <inflateBack@@ZLIB_1.2.0+0x6f4>
    7a90:	ldur	x0, [x29, #-8]
    7a94:	add	x1, x29, #0x8
    7a98:	blr	x24
    7a9c:	mov	w20, w0
    7aa0:	cbnz	w0, 7a64 <inflateBack@@ZLIB_1.2.0+0x6f4>
    7aa4:	b	8258 <inflateBack@@ZLIB_1.2.0+0xee8>
    7aa8:	ldr	x23, [sp]
    7aac:	ldur	x19, [x29, #-16]
    7ab0:	lsr	x9, x22, x27
    7ab4:	sub	w11, w21, w27
    7ab8:	and	w10, w9, #0x7
    7abc:	mov	w8, wzr
    7ac0:	lsr	x22, x9, #3
    7ac4:	add	w10, w10, #0x3
    7ac8:	sub	w21, w11, #0x3
    7acc:	b	7b2c <inflateBack@@ZLIB_1.2.0+0x7bc>
    7ad0:	ldr	x23, [sp]
    7ad4:	ldr	w8, [x28, #140]
    7ad8:	ldur	x19, [x29, #-16]
    7adc:	lsr	x22, x22, x27
    7ae0:	sub	w21, w21, w27
    7ae4:	cbz	w8, 824c <inflateBack@@ZLIB_1.2.0+0xedc>
    7ae8:	sub	w8, w8, #0x1
    7aec:	add	x8, x28, w8, uxtw #1
    7af0:	ldrh	w8, [x8, #152]
    7af4:	and	w9, w22, #0x3
    7af8:	add	w10, w9, #0x3
    7afc:	lsr	x22, x22, #2
    7b00:	sub	w21, w21, #0x2
    7b04:	b	7b2c <inflateBack@@ZLIB_1.2.0+0x7bc>
    7b08:	ldr	x23, [sp]
    7b0c:	ldur	x19, [x29, #-16]
    7b10:	lsr	x9, x22, x27
    7b14:	sub	w11, w21, w27
    7b18:	and	w10, w9, #0x7f
    7b1c:	mov	w8, wzr
    7b20:	lsr	x22, x9, #7
    7b24:	add	w10, w10, #0xb
    7b28:	sub	w21, w11, #0x7
    7b2c:	ldp	w9, w13, [x28, #136]
    7b30:	ldr	w2, [x28, #132]
    7b34:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7b38:	add	x27, x27, #0x712
    7b3c:	add	w11, w13, w10
    7b40:	add	w9, w9, w2
    7b44:	cmp	w11, w9
    7b48:	b.hi	7c20 <inflateBack@@ZLIB_1.2.0+0x8b0>  // b.pmore
    7b4c:	cmp	w10, #0xf
    7b50:	b.ls	7b64 <inflateBack@@ZLIB_1.2.0+0x7f4>  // b.plast
    7b54:	sub	w11, w10, #0x1
    7b58:	mvn	w12, w13
    7b5c:	cmp	w11, w12
    7b60:	b.ls	7b9c <inflateBack@@ZLIB_1.2.0+0x82c>  // b.plast
    7b64:	mov	w11, w13
    7b68:	mov	w12, w10
    7b6c:	mov	w10, w11
    7b70:	add	w11, w10, #0x1
    7b74:	add	x10, x28, w10, uxtw #1
    7b78:	subs	w12, w12, #0x1
    7b7c:	strh	w8, [x10, #152]
    7b80:	mov	w10, w11
    7b84:	b.ne	7b70 <inflateBack@@ZLIB_1.2.0+0x800>  // b.any
    7b88:	ldur	x5, [x29, #-24]
    7b8c:	str	w11, [x28, #140]
    7b90:	cmp	w11, w9
    7b94:	b.cc	78b4 <inflateBack@@ZLIB_1.2.0+0x544>  // b.lo, b.ul, b.last
    7b98:	b	77fc <inflateBack@@ZLIB_1.2.0+0x48c>
    7b9c:	and	w14, w10, #0xf0
    7ba0:	and	w12, w10, #0xf
    7ba4:	add	w11, w13, w14
    7ba8:	dup	v0.8h, w8
    7bac:	mov	w15, w14
    7bb0:	add	x16, x28, w13, uxtw #1
    7bb4:	subs	w15, w15, #0x10
    7bb8:	add	w13, w13, #0x10
    7bbc:	stur	q0, [x16, #152]
    7bc0:	stur	q0, [x16, #168]
    7bc4:	b.ne	7bb0 <inflateBack@@ZLIB_1.2.0+0x840>  // b.any
    7bc8:	cmp	w10, w14
    7bcc:	b.ne	7b6c <inflateBack@@ZLIB_1.2.0+0x7fc>  // b.any
    7bd0:	b	7b88 <inflateBack@@ZLIB_1.2.0+0x818>
    7bd4:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    7bd8:	add	x8, x8, #0x3f
    7bdc:	b	77c8 <inflateBack@@ZLIB_1.2.0+0x458>
    7be0:	ldr	x8, [x28, #144]
    7be4:	ldp	w9, w2, [x28, #132]
    7be8:	ldr	x4, [sp, #8]
    7bec:	mov	w10, #0x6                   	// #6
    7bf0:	str	x8, [x28, #112]
    7bf4:	add	x8, x28, x9, lsl #1
    7bf8:	add	x1, x8, #0x98
    7bfc:	mov	w0, #0x2                   	// #2
    7c00:	mov	x3, x19
    7c04:	mov	x5, x27
    7c08:	str	w10, [x28, #124]
    7c0c:	bl	b494 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    7c10:	cbz	w0, 7c2c <inflateBack@@ZLIB_1.2.0+0x8bc>
    7c14:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    7c18:	add	x8, x8, #0x80
    7c1c:	b	8138 <inflateBack@@ZLIB_1.2.0+0xdc8>
    7c20:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    7c24:	add	x8, x8, #0x25
    7c28:	b	77c8 <inflateBack@@ZLIB_1.2.0+0x458>
    7c2c:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7c30:	mov	w8, #0x3f48                	// #16200
    7c34:	add	x27, x27, #0x712
    7c38:	str	w8, [x28, #8]
    7c3c:	cmp	w26, #0x102
    7c40:	b.cc	7ca8 <inflateBack@@ZLIB_1.2.0+0x938>  // b.lo, b.ul, b.last
    7c44:	cmp	w20, #0x5
    7c48:	b.ls	7ca8 <inflateBack@@ZLIB_1.2.0+0x938>  // b.plast
    7c4c:	str	x25, [x23, #24]
    7c50:	str	w26, [x23, #32]
    7c54:	ldr	x8, [x29, #8]
    7c58:	str	w20, [x23, #8]
    7c5c:	str	x8, [x23]
    7c60:	ldp	w1, w8, [x28, #60]
    7c64:	str	x22, [x28, #80]
    7c68:	str	w21, [x28, #88]
    7c6c:	cmp	w8, w1
    7c70:	b.cs	7c7c <inflateBack@@ZLIB_1.2.0+0x90c>  // b.hs, b.nlast
    7c74:	sub	w8, w1, w26
    7c78:	str	w8, [x28, #64]
    7c7c:	mov	x0, x23
    7c80:	bl	8320 <inflateBackEnd@@ZLIB_1.2.0+0x50>
    7c84:	ldr	x8, [x23]
    7c88:	ldr	x25, [x23, #24]
    7c8c:	ldr	w26, [x23, #32]
    7c90:	str	x8, [x29, #8]
    7c94:	ldr	w20, [x23, #8]
    7c98:	ldr	x22, [x28, #80]
    7c9c:	ldr	w21, [x28, #88]
    7ca0:	ldr	w8, [x28, #8]
    7ca4:	b	743c <inflateBack@@ZLIB_1.2.0+0xcc>
    7ca8:	ldr	w9, [x28, #120]
    7cac:	ldr	x8, [x28, #104]
    7cb0:	mov	w19, #0xffffffff            	// #-1
    7cb4:	lsl	w10, w19, w9
    7cb8:	bic	w10, w22, w10
    7cbc:	add	x10, x8, w10, uxtw #2
    7cc0:	ldrb	w27, [x10, #1]
    7cc4:	cmp	w21, w27
    7cc8:	b.cs	7d30 <inflateBack@@ZLIB_1.2.0+0x9c0>  // b.hs, b.nlast
    7ccc:	mov	w21, w21
    7cd0:	b	7d0c <inflateBack@@ZLIB_1.2.0+0x99c>
    7cd4:	ldr	x10, [x29, #8]
    7cd8:	sub	w20, w20, #0x1
    7cdc:	add	x11, x10, #0x1
    7ce0:	str	x11, [x29, #8]
    7ce4:	ldrb	w10, [x10]
    7ce8:	lsl	x10, x10, x21
    7cec:	add	x22, x10, x22
    7cf0:	lsl	w10, w19, w9
    7cf4:	bic	w10, w22, w10
    7cf8:	add	x10, x8, w10, uxtw #2
    7cfc:	ldrb	w27, [x10, #1]
    7d00:	add	x21, x21, #0x8
    7d04:	cmp	x21, x27
    7d08:	b.cs	7d30 <inflateBack@@ZLIB_1.2.0+0x9c0>  // b.hs, b.nlast
    7d0c:	cbnz	w20, 7cd4 <inflateBack@@ZLIB_1.2.0+0x964>
    7d10:	ldur	x0, [x29, #-8]
    7d14:	add	x1, x29, #0x8
    7d18:	blr	x24
    7d1c:	mov	w20, w0
    7d20:	cbz	w0, 825c <inflateBack@@ZLIB_1.2.0+0xeec>
    7d24:	ldr	x8, [x28, #104]
    7d28:	ldr	w9, [x28, #120]
    7d2c:	b	7cd4 <inflateBack@@ZLIB_1.2.0+0x964>
    7d30:	add	x11, x10, #0x2
    7d34:	ldrb	w9, [x10]
    7d38:	ldrh	w19, [x11]
    7d3c:	cbz	w9, 7e00 <inflateBack@@ZLIB_1.2.0+0xa90>
    7d40:	and	w10, w9, #0xf0
    7d44:	cbnz	w10, 7e00 <inflateBack@@ZLIB_1.2.0+0xa90>
    7d48:	add	w9, w27, w9
    7d4c:	mov	w10, #0xffffffff            	// #-1
    7d50:	lsl	w11, w10, w9
    7d54:	bic	w9, w22, w11
    7d58:	lsr	w9, w9, w27
    7d5c:	add	w9, w9, w19
    7d60:	add	x10, x8, w9, uxtw #2
    7d64:	ldrb	w10, [x10, #1]
    7d68:	add	w12, w27, w10
    7d6c:	cmp	w12, w21
    7d70:	b.ls	7de8 <inflateBack@@ZLIB_1.2.0+0xa78>  // b.plast
    7d74:	str	x23, [sp]
    7d78:	mvn	w23, w11
    7d7c:	b	7dc0 <inflateBack@@ZLIB_1.2.0+0xa50>
    7d80:	ldr	x9, [x29, #8]
    7d84:	sub	w20, w20, #0x1
    7d88:	add	x10, x9, #0x1
    7d8c:	str	x10, [x29, #8]
    7d90:	ldrb	w9, [x9]
    7d94:	lsl	x9, x9, x21
    7d98:	add	x22, x9, x22
    7d9c:	and	w9, w22, w23
    7da0:	lsr	w9, w9, w27
    7da4:	add	w9, w9, w19
    7da8:	add	x10, x8, w9, uxtw #2
    7dac:	ldrb	w10, [x10, #1]
    7db0:	add	w21, w21, #0x8
    7db4:	add	w11, w27, w10
    7db8:	cmp	w11, w21
    7dbc:	b.ls	7de0 <inflateBack@@ZLIB_1.2.0+0xa70>  // b.plast
    7dc0:	cbnz	w20, 7d80 <inflateBack@@ZLIB_1.2.0+0xa10>
    7dc4:	ldur	x0, [x29, #-8]
    7dc8:	add	x1, x29, #0x8
    7dcc:	blr	x24
    7dd0:	mov	w20, w0
    7dd4:	cbz	w0, 8258 <inflateBack@@ZLIB_1.2.0+0xee8>
    7dd8:	ldr	x8, [x28, #104]
    7ddc:	b	7d80 <inflateBack@@ZLIB_1.2.0+0xa10>
    7de0:	ldr	x23, [sp]
    7de4:	mov	w9, w9
    7de8:	add	x8, x8, x9, lsl #2
    7dec:	ldrh	w19, [x8, #2]
    7df0:	ldrb	w9, [x8]
    7df4:	lsr	x22, x22, x27
    7df8:	sub	w21, w21, w27
    7dfc:	mov	w27, w10
    7e00:	lsr	x22, x22, x27
    7e04:	sub	w21, w21, w27
    7e08:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    7e0c:	add	x27, x27, #0x712
    7e10:	str	w19, [x28, #92]
    7e14:	cbz	w9, 7e88 <inflateBack@@ZLIB_1.2.0+0xb18>
    7e18:	tbnz	w9, #5, 7e38 <inflateBack@@ZLIB_1.2.0+0xac8>
    7e1c:	tbnz	w9, #6, 7ec4 <inflateBack@@ZLIB_1.2.0+0xb54>
    7e20:	ands	w8, w9, #0xf
    7e24:	str	w8, [x28, #100]
    7e28:	b.eq	7ee4 <inflateBack@@ZLIB_1.2.0+0xb74>  // b.none
    7e2c:	cmp	w21, w8
    7e30:	b.cc	7e6c <inflateBack@@ZLIB_1.2.0+0xafc>  // b.lo, b.ul, b.last
    7e34:	b	7ef0 <inflateBack@@ZLIB_1.2.0+0xb80>
    7e38:	mov	w8, #0x3f3f                	// #16191
    7e3c:	b	7ed4 <inflateBack@@ZLIB_1.2.0+0xb64>
    7e40:	ldr	w8, [x28, #100]
    7e44:	ldr	x9, [x29, #8]
    7e48:	sub	w20, w20, #0x1
    7e4c:	add	x10, x9, #0x1
    7e50:	str	x10, [x29, #8]
    7e54:	ldrb	w9, [x9]
    7e58:	lsl	x9, x9, x21
    7e5c:	add	w21, w21, #0x8
    7e60:	cmp	w21, w8
    7e64:	add	x22, x9, x22
    7e68:	b.cs	7eec <inflateBack@@ZLIB_1.2.0+0xb7c>  // b.hs, b.nlast
    7e6c:	cbnz	w20, 7e44 <inflateBack@@ZLIB_1.2.0+0xad4>
    7e70:	ldur	x0, [x29, #-8]
    7e74:	add	x1, x29, #0x8
    7e78:	blr	x24
    7e7c:	mov	w20, w0
    7e80:	cbnz	w0, 7e40 <inflateBack@@ZLIB_1.2.0+0xad0>
    7e84:	b	825c <inflateBack@@ZLIB_1.2.0+0xeec>
    7e88:	cbnz	w26, 7eb4 <inflateBack@@ZLIB_1.2.0+0xb44>
    7e8c:	ldr	w26, [x28, #60]
    7e90:	ldr	x25, [x28, #72]
    7e94:	ldr	x0, [sp, #40]
    7e98:	ldur	x8, [x29, #-32]
    7e9c:	mov	w2, w26
    7ea0:	mov	x1, x25
    7ea4:	str	w26, [x28, #64]
    7ea8:	blr	x8
    7eac:	cbnz	w0, 8260 <inflateBack@@ZLIB_1.2.0+0xef0>
    7eb0:	ldr	w19, [x28, #92]
    7eb4:	strb	w19, [x25], #1
    7eb8:	sub	w26, w26, #0x1
    7ebc:	mov	w8, #0x3f48                	// #16200
    7ec0:	b	7ed4 <inflateBack@@ZLIB_1.2.0+0xb64>
    7ec4:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    7ec8:	add	x8, x8, #0x96
    7ecc:	str	x8, [x23, #48]
    7ed0:	mov	w8, #0x3f51                	// #16209
    7ed4:	str	w8, [x28, #8]
    7ed8:	ldur	x19, [x29, #-16]
    7edc:	mov	w8, w8
    7ee0:	b	743c <inflateBack@@ZLIB_1.2.0+0xcc>
    7ee4:	mov	w10, #0xffffffff            	// #-1
    7ee8:	b	7f0c <inflateBack@@ZLIB_1.2.0+0xb9c>
    7eec:	ldr	w19, [x28, #92]
    7ef0:	mov	w10, #0xffffffff            	// #-1
    7ef4:	lsl	w9, w10, w8
    7ef8:	bic	w9, w22, w9
    7efc:	lsr	x22, x22, x8
    7f00:	add	w9, w19, w9
    7f04:	sub	w21, w21, w8
    7f08:	str	w9, [x28, #92]
    7f0c:	ldr	w9, [x28, #124]
    7f10:	ldr	x8, [x28, #112]
    7f14:	lsl	w10, w10, w9
    7f18:	bic	w10, w22, w10
    7f1c:	add	x10, x8, w10, uxtw #2
    7f20:	ldrb	w19, [x10, #1]
    7f24:	cmp	w21, w19
    7f28:	b.cs	7f94 <inflateBack@@ZLIB_1.2.0+0xc24>  // b.hs, b.nlast
    7f2c:	mov	w21, w21
    7f30:	b	7f6c <inflateBack@@ZLIB_1.2.0+0xbfc>
    7f34:	ldr	x10, [x29, #8]
    7f38:	sub	w20, w20, #0x1
    7f3c:	add	x11, x10, #0x1
    7f40:	str	x11, [x29, #8]
    7f44:	ldrb	w10, [x10]
    7f48:	lsl	x10, x10, x21
    7f4c:	add	x22, x10, x22
    7f50:	lsl	w10, w19, w9
    7f54:	bic	w10, w22, w10
    7f58:	add	x10, x8, w10, uxtw #2
    7f5c:	ldrb	w19, [x10, #1]
    7f60:	add	x21, x21, #0x8
    7f64:	cmp	x21, x19
    7f68:	b.cs	7f94 <inflateBack@@ZLIB_1.2.0+0xc24>  // b.hs, b.nlast
    7f6c:	mov	w19, #0xffffffff            	// #-1
    7f70:	cbnz	w20, 7f34 <inflateBack@@ZLIB_1.2.0+0xbc4>
    7f74:	ldur	x0, [x29, #-8]
    7f78:	add	x1, x29, #0x8
    7f7c:	blr	x24
    7f80:	mov	w20, w0
    7f84:	cbz	w0, 825c <inflateBack@@ZLIB_1.2.0+0xeec>
    7f88:	ldr	x8, [x28, #112]
    7f8c:	ldr	w9, [x28, #124]
    7f90:	b	7f34 <inflateBack@@ZLIB_1.2.0+0xbc4>
    7f94:	add	x9, x10, #0x2
    7f98:	ldrb	w10, [x10]
    7f9c:	ldrh	w27, [x9]
    7fa0:	tst	w10, #0xf0
    7fa4:	b.ne	8060 <inflateBack@@ZLIB_1.2.0+0xcf0>  // b.any
    7fa8:	add	w9, w19, w10
    7fac:	mov	w10, #0xffffffff            	// #-1
    7fb0:	lsl	w11, w10, w9
    7fb4:	bic	w9, w22, w11
    7fb8:	lsr	w9, w9, w19
    7fbc:	add	w10, w9, w27
    7fc0:	add	x9, x8, w10, uxtw #2
    7fc4:	ldrb	w9, [x9, #1]
    7fc8:	add	w12, w19, w9
    7fcc:	cmp	w12, w21
    7fd0:	b.ls	8048 <inflateBack@@ZLIB_1.2.0+0xcd8>  // b.plast
    7fd4:	str	x23, [sp]
    7fd8:	mvn	w23, w11
    7fdc:	b	8024 <inflateBack@@ZLIB_1.2.0+0xcb4>
    7fe0:	ldr	x8, [x28, #112]
    7fe4:	ldr	x9, [x29, #8]
    7fe8:	sub	w20, w20, #0x1
    7fec:	add	x10, x9, #0x1
    7ff0:	str	x10, [x29, #8]
    7ff4:	ldrb	w9, [x9]
    7ff8:	lsl	x9, x9, x21
    7ffc:	add	x22, x9, x22
    8000:	and	w9, w22, w23
    8004:	lsr	w9, w9, w19
    8008:	add	w10, w9, w27
    800c:	add	x9, x8, w10, uxtw #2
    8010:	ldrb	w9, [x9, #1]
    8014:	add	w21, w21, #0x8
    8018:	add	w11, w19, w9
    801c:	cmp	w11, w21
    8020:	b.ls	8040 <inflateBack@@ZLIB_1.2.0+0xcd0>  // b.plast
    8024:	cbnz	w20, 7fe4 <inflateBack@@ZLIB_1.2.0+0xc74>
    8028:	ldur	x0, [x29, #-8]
    802c:	add	x1, x29, #0x8
    8030:	blr	x24
    8034:	mov	w20, w0
    8038:	cbnz	w0, 7fe0 <inflateBack@@ZLIB_1.2.0+0xc70>
    803c:	b	8258 <inflateBack@@ZLIB_1.2.0+0xee8>
    8040:	ldr	x23, [sp]
    8044:	mov	w10, w10
    8048:	add	x8, x8, x10, lsl #2
    804c:	ldrh	w27, [x8, #2]
    8050:	ldrb	w10, [x8]
    8054:	lsr	x22, x22, x19
    8058:	sub	w21, w21, w19
    805c:	mov	w19, w9
    8060:	lsr	x22, x22, x19
    8064:	sub	w21, w21, w19
    8068:	tbnz	w10, #6, 80d0 <inflateBack@@ZLIB_1.2.0+0xd60>
    806c:	ands	w8, w10, #0xf
    8070:	stp	w27, w8, [x28, #96]
    8074:	ldur	x19, [x29, #-16]
    8078:	b.eq	8118 <inflateBack@@ZLIB_1.2.0+0xda8>  // b.none
    807c:	cmp	w21, w8
    8080:	b.cc	80b0 <inflateBack@@ZLIB_1.2.0+0xd40>  // b.lo, b.ul, b.last
    8084:	b	80fc <inflateBack@@ZLIB_1.2.0+0xd8c>
    8088:	ldr	x9, [x29, #8]
    808c:	sub	w20, w20, #0x1
    8090:	add	x10, x9, #0x1
    8094:	str	x10, [x29, #8]
    8098:	ldrb	w9, [x9]
    809c:	lsl	x9, x9, x21
    80a0:	add	w21, w21, #0x8
    80a4:	cmp	w21, w8
    80a8:	add	x22, x9, x22
    80ac:	b.cs	80f8 <inflateBack@@ZLIB_1.2.0+0xd88>  // b.hs, b.nlast
    80b0:	cbnz	w20, 8088 <inflateBack@@ZLIB_1.2.0+0xd18>
    80b4:	ldur	x0, [x29, #-8]
    80b8:	add	x1, x29, #0x8
    80bc:	blr	x24
    80c0:	mov	w20, w0
    80c4:	cbz	w0, 825c <inflateBack@@ZLIB_1.2.0+0xeec>
    80c8:	ldr	w8, [x28, #100]
    80cc:	b	8088 <inflateBack@@ZLIB_1.2.0+0xd18>
    80d0:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    80d4:	ldur	x19, [x29, #-16]
    80d8:	add	x8, x8, #0xb2
    80dc:	str	x8, [x23, #48]
    80e0:	mov	w8, #0x3f51                	// #16209
    80e4:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    80e8:	str	w8, [x28, #8]
    80ec:	add	x27, x27, #0x712
    80f0:	mov	w8, w8
    80f4:	b	743c <inflateBack@@ZLIB_1.2.0+0xcc>
    80f8:	ldr	w27, [x28, #96]
    80fc:	mov	w9, #0xffffffff            	// #-1
    8100:	lsl	w9, w9, w8
    8104:	bic	w9, w22, w9
    8108:	lsr	x22, x22, x8
    810c:	add	w27, w27, w9
    8110:	sub	w21, w21, w8
    8114:	str	w27, [x28, #96]
    8118:	ldp	w8, w9, [x28, #60]
    811c:	cmp	w9, w8
    8120:	csel	w9, w26, wzr, cc  // cc = lo, ul, last
    8124:	sub	w8, w8, w9
    8128:	cmp	w27, w8
    812c:	b.ls	8160 <inflateBack@@ZLIB_1.2.0+0xdf0>  // b.plast
    8130:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    8134:	add	x8, x8, #0xc8
    8138:	str	x8, [x23, #48]
    813c:	mov	w8, #0x3f51                	// #16209
    8140:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    8144:	str	w8, [x28, #8]
    8148:	add	x27, x27, #0x712
    814c:	mov	w8, w8
    8150:	b	743c <inflateBack@@ZLIB_1.2.0+0xcc>
    8154:	ldr	w9, [x28, #92]
    8158:	sub	w26, w26, w8
    815c:	cbz	w9, 823c <inflateBack@@ZLIB_1.2.0+0xecc>
    8160:	mov	x27, x25
    8164:	cbnz	w26, 818c <inflateBack@@ZLIB_1.2.0+0xe1c>
    8168:	ldr	w26, [x28, #60]
    816c:	ldr	x27, [x28, #72]
    8170:	ldr	x0, [sp, #40]
    8174:	ldur	x8, [x29, #-32]
    8178:	mov	w2, w26
    817c:	mov	x1, x27
    8180:	str	w26, [x28, #64]
    8184:	blr	x8
    8188:	cbnz	w0, 8260 <inflateBack@@ZLIB_1.2.0+0xef0>
    818c:	ldr	w8, [x28, #60]
    8190:	ldp	w10, w9, [x28, #92]
    8194:	sub	w8, w8, w9
    8198:	cmp	w26, w8
    819c:	csel	w12, w8, wzr, hi  // hi = pmore
    81a0:	csneg	x11, x8, x9, hi  // hi = pmore
    81a4:	sub	w8, w26, w12
    81a8:	cmp	w8, w10
    81ac:	csel	w8, w10, w8, hi  // hi = pmore
    81b0:	sub	w12, w10, w8
    81b4:	sub	w10, w8, #0x1
    81b8:	add	x9, x27, x11
    81bc:	cmp	w10, #0x1f
    81c0:	str	w12, [x28, #92]
    81c4:	b.cc	81e8 <inflateBack@@ZLIB_1.2.0+0xe78>  // b.lo, b.ul, b.last
    81c8:	add	x12, x27, #0x1
    81cc:	add	x13, x11, x10
    81d0:	add	x13, x12, x13
    81d4:	cmp	x27, x13
    81d8:	b.cs	8204 <inflateBack@@ZLIB_1.2.0+0xe94>  // b.hs, b.nlast
    81dc:	add	x12, x12, x10
    81e0:	cmp	x9, x12
    81e4:	b.cs	8204 <inflateBack@@ZLIB_1.2.0+0xe94>  // b.hs, b.nlast
    81e8:	mov	x25, x27
    81ec:	mov	w10, w8
    81f0:	ldrb	w11, [x9], #1
    81f4:	subs	w10, w10, #0x1
    81f8:	strb	w11, [x25], #1
    81fc:	b.ne	81f0 <inflateBack@@ZLIB_1.2.0+0xe80>  // b.any
    8200:	b	8154 <inflateBack@@ZLIB_1.2.0+0xde4>
    8204:	add	x12, x10, #0x1
    8208:	and	x13, x12, #0x1ffffffe0
    820c:	add	x25, x27, x13
    8210:	sub	w10, w8, w13
    8214:	add	x9, x9, x13
    8218:	mov	x14, x13
    821c:	add	x15, x27, x11
    8220:	ldp	q0, q1, [x15]
    8224:	subs	x14, x14, #0x20
    8228:	stp	q0, q1, [x27], #32
    822c:	b.ne	821c <inflateBack@@ZLIB_1.2.0+0xeac>  // b.any
    8230:	cmp	x12, x13
    8234:	b.ne	81f0 <inflateBack@@ZLIB_1.2.0+0xe80>  // b.any
    8238:	b	8154 <inflateBack@@ZLIB_1.2.0+0xde4>
    823c:	ldr	w8, [x28, #8]
    8240:	adrp	x27, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    8244:	add	x27, x27, #0x712
    8248:	b	743c <inflateBack@@ZLIB_1.2.0+0xcc>
    824c:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    8250:	add	x8, x8, #0x25
    8254:	b	8138 <inflateBack@@ZLIB_1.2.0+0xdc8>
    8258:	ldr	x23, [sp]
    825c:	str	xzr, [x29, #8]
    8260:	mov	w0, #0xfffffffb            	// #-5
    8264:	ldr	x8, [x29, #8]
    8268:	str	w20, [x23, #8]
    826c:	str	x8, [x23]
    8270:	ldp	x20, x19, [sp, #176]
    8274:	ldp	x22, x21, [sp, #160]
    8278:	ldp	x24, x23, [sp, #144]
    827c:	ldp	x26, x25, [sp, #128]
    8280:	ldp	x28, x27, [sp, #112]
    8284:	ldp	x29, x30, [sp, #96]
    8288:	ldr	d8, [sp, #80]
    828c:	add	sp, sp, #0xc0
    8290:	ret
    8294:	mov	w0, #0xfffffffe            	// #-2
    8298:	b	8264 <inflateBack@@ZLIB_1.2.0+0xef4>
    829c:	ldr	w8, [x28, #60]
    82a0:	subs	w2, w8, w26
    82a4:	b.ls	82c8 <inflateBack@@ZLIB_1.2.0+0xf58>  // b.plast
    82a8:	ldr	x1, [x28, #72]
    82ac:	ldr	x0, [sp, #40]
    82b0:	ldur	x8, [x29, #-32]
    82b4:	blr	x8
    82b8:	cmp	w0, #0x0
    82bc:	mov	w8, #0xfffffffb            	// #-5
    82c0:	csinc	w0, w8, wzr, ne  // ne = any
    82c4:	b	8264 <inflateBack@@ZLIB_1.2.0+0xef4>
    82c8:	mov	w0, #0x1                   	// #1
    82cc:	b	8264 <inflateBack@@ZLIB_1.2.0+0xef4>

00000000000082d0 <inflateBackEnd@@ZLIB_1.2.0>:
    82d0:	stp	x29, x30, [sp, #-32]!
    82d4:	str	x19, [sp, #16]
    82d8:	mov	x29, sp
    82dc:	cbz	x0, 8310 <inflateBackEnd@@ZLIB_1.2.0+0x40>
    82e0:	ldr	x1, [x0, #56]
    82e4:	mov	x19, x0
    82e8:	cbz	x1, 8310 <inflateBackEnd@@ZLIB_1.2.0+0x40>
    82ec:	ldr	x8, [x19, #72]
    82f0:	cbz	x8, 8310 <inflateBackEnd@@ZLIB_1.2.0+0x40>
    82f4:	ldr	x0, [x19, #80]
    82f8:	blr	x8
    82fc:	mov	w0, wzr
    8300:	str	xzr, [x19, #56]
    8304:	ldr	x19, [sp, #16]
    8308:	ldp	x29, x30, [sp], #32
    830c:	ret
    8310:	mov	w0, #0xfffffffe            	// #-2
    8314:	ldr	x19, [sp, #16]
    8318:	ldp	x29, x30, [sp], #32
    831c:	ret
    8320:	sub	sp, sp, #0xa0
    8324:	stp	x29, x30, [sp, #64]
    8328:	stp	x28, x27, [sp, #80]
    832c:	stp	x26, x25, [sp, #96]
    8330:	stp	x24, x23, [sp, #112]
    8334:	stp	x22, x21, [sp, #128]
    8338:	stp	x20, x19, [sp, #144]
    833c:	ldr	x8, [x0, #56]
    8340:	ldr	w11, [x0, #32]
    8344:	ldr	w10, [x0, #8]
    8348:	ldr	x30, [x0, #24]
    834c:	ldp	w17, w18, [x8, #60]
    8350:	sub	w15, w1, w11
    8354:	ldr	w1, [x8, #68]
    8358:	ldp	w2, w7, [x8, #120]
    835c:	sub	w12, w10, #0x5
    8360:	ldp	x28, x10, [x8, #72]
    8364:	sub	x5, x30, x15
    8368:	mov	w14, #0xffffffff            	// #-1
    836c:	sub	w15, w5, #0x1
    8370:	ldr	x9, [x0]
    8374:	ldp	x3, x4, [x8, #104]
    8378:	str	w15, [sp, #60]
    837c:	lsl	w15, w14, w2
    8380:	add	w2, w1, w17
    8384:	str	w2, [sp, #56]
    8388:	add	x2, x28, #0x1
    838c:	str	x2, [sp, #48]
    8390:	sub	w20, w1, #0x1
    8394:	mvn	w2, w1
    8398:	sub	w16, w11, #0x101
    839c:	mvn	w22, w15
    83a0:	add	x24, x20, #0x1
    83a4:	add	w15, w2, w5
    83a8:	add	x11, x9, x12
    83ac:	add	x12, x30, x16
    83b0:	lsl	w16, w14, w7
    83b4:	add	x7, x28, #0x10
    83b8:	str	w15, [sp, #44]
    83bc:	add	x15, x28, x24
    83c0:	and	x27, x24, #0x1ffffffe0
    83c4:	ldr	w13, [x8, #88]
    83c8:	stp	x15, x7, [sp, #24]
    83cc:	sub	w15, w1, w27
    83d0:	str	w15, [sp, #20]
    83d4:	add	x15, x28, x27
    83d8:	adrp	x6, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    83dc:	str	x15, [sp, #8]
    83e0:	adrp	x15, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    83e4:	add	x6, x6, #0xb2
    83e8:	mvn	w23, w16
    83ec:	add	x15, x15, #0xc8
    83f0:	cmp	w13, #0xe
    83f4:	b.hi	841c <inflateBackEnd@@ZLIB_1.2.0+0x14c>  // b.pmore
    83f8:	ldrb	w16, [x9]
    83fc:	ldrb	w2, [x9, #1]
    8400:	add	w7, w13, #0x8
    8404:	add	x9, x9, #0x2
    8408:	lsl	x16, x16, x13
    840c:	lsl	x2, x2, x7
    8410:	add	x10, x16, x10
    8414:	add	x10, x10, x2
    8418:	add	w13, w13, #0x10
    841c:	and	x16, x10, x22
    8420:	add	x16, x3, x16, lsl #2
    8424:	ldrb	w7, [x16, #1]
    8428:	ldrb	w2, [x16]
    842c:	ldrh	w16, [x16, #2]
    8430:	lsr	x10, x10, x7
    8434:	sub	w13, w13, w7
    8438:	cbz	w2, 845c <inflateBackEnd@@ZLIB_1.2.0+0x18c>
    843c:	and	w7, w2, #0xff
    8440:	tbnz	w2, #4, 8474 <inflateBackEnd@@ZLIB_1.2.0+0x1a4>
    8444:	tbnz	w7, #6, 899c <inflateBackEnd@@ZLIB_1.2.0+0x6cc>
    8448:	lsl	w2, w14, w7
    844c:	mvn	w2, w2
    8450:	and	x2, x10, x2
    8454:	add	x16, x2, w16, uxth
    8458:	b	8420 <inflateBackEnd@@ZLIB_1.2.0+0x150>
    845c:	strb	w16, [x30], #1
    8460:	cmp	x30, x12
    8464:	b.cs	89c4 <inflateBackEnd@@ZLIB_1.2.0+0x6f4>  // b.hs, b.nlast
    8468:	cmp	x9, x11
    846c:	b.cc	83f0 <inflateBackEnd@@ZLIB_1.2.0+0x120>  // b.lo, b.ul, b.last
    8470:	b	89c4 <inflateBackEnd@@ZLIB_1.2.0+0x6f4>
    8474:	ands	w2, w7, #0xf
    8478:	and	w16, w16, #0xffff
    847c:	b.eq	84ac <inflateBackEnd@@ZLIB_1.2.0+0x1dc>  // b.none
    8480:	cmp	w13, w2
    8484:	b.cs	8498 <inflateBackEnd@@ZLIB_1.2.0+0x1c8>  // b.hs, b.nlast
    8488:	ldrb	w7, [x9], #1
    848c:	lsl	x7, x7, x13
    8490:	add	x10, x7, x10
    8494:	add	w13, w13, #0x8
    8498:	lsl	w7, w14, w2
    849c:	bic	w7, w10, w7
    84a0:	lsr	x10, x10, x2
    84a4:	add	w16, w7, w16
    84a8:	sub	w13, w13, w2
    84ac:	cmp	w13, #0xe
    84b0:	b.hi	84d8 <inflateBackEnd@@ZLIB_1.2.0+0x208>  // b.pmore
    84b4:	ldrb	w2, [x9]
    84b8:	ldrb	w7, [x9, #1]
    84bc:	add	w19, w13, #0x8
    84c0:	add	x9, x9, #0x2
    84c4:	lsl	x2, x2, x13
    84c8:	lsl	x7, x7, x19
    84cc:	add	x10, x2, x10
    84d0:	add	x10, x10, x7
    84d4:	add	w13, w13, #0x10
    84d8:	and	x2, x10, x23
    84dc:	add	x7, x4, x2, lsl #2
    84e0:	ldrb	w19, [x7, #1]
    84e4:	ldrb	w2, [x7]
    84e8:	ldrh	w25, [x7, #2]
    84ec:	lsr	x10, x10, x19
    84f0:	sub	w13, w13, w19
    84f4:	tbnz	w2, #4, 8510 <inflateBackEnd@@ZLIB_1.2.0+0x240>
    84f8:	tbnz	w2, #6, 89b4 <inflateBackEnd@@ZLIB_1.2.0+0x6e4>
    84fc:	lsl	w2, w14, w2
    8500:	mvn	w2, w2
    8504:	and	x2, x10, x2
    8508:	add	x2, x2, w25, uxth
    850c:	b	84dc <inflateBackEnd@@ZLIB_1.2.0+0x20c>
    8510:	and	w2, w2, #0xf
    8514:	cmp	w13, w2
    8518:	b.cs	8550 <inflateBackEnd@@ZLIB_1.2.0+0x280>  // b.hs, b.nlast
    851c:	mov	x7, x9
    8520:	ldrb	w19, [x7], #1
    8524:	add	w21, w13, #0x8
    8528:	cmp	w21, w2
    852c:	lsl	x19, x19, x13
    8530:	add	x10, x19, x10
    8534:	b.cs	8558 <inflateBackEnd@@ZLIB_1.2.0+0x288>  // b.hs, b.nlast
    8538:	ldrb	w7, [x9, #1]
    853c:	add	x9, x9, #0x2
    8540:	lsl	x7, x7, x21
    8544:	add	x10, x7, x10
    8548:	add	w21, w13, #0x10
    854c:	b	855c <inflateBackEnd@@ZLIB_1.2.0+0x28c>
    8550:	mov	w21, w13
    8554:	b	855c <inflateBackEnd@@ZLIB_1.2.0+0x28c>
    8558:	mov	x9, x7
    855c:	lsl	w13, w14, w2
    8560:	bic	w19, w10, w13
    8564:	add	w26, w19, w25
    8568:	sub	w13, w30, w5
    856c:	lsr	x10, x10, x2
    8570:	subs	w29, w26, w13
    8574:	sub	w13, w21, w2
    8578:	b.ls	85d0 <inflateBackEnd@@ZLIB_1.2.0+0x300>  // b.plast
    857c:	cmp	w29, w18
    8580:	b.ls	858c <inflateBackEnd@@ZLIB_1.2.0+0x2bc>  // b.plast
    8584:	ldr	w2, [x8, #7144]
    8588:	cbnz	w2, 89b8 <inflateBackEnd@@ZLIB_1.2.0+0x6e8>
    858c:	cbz	w1, 8650 <inflateBackEnd@@ZLIB_1.2.0+0x380>
    8590:	subs	w21, w1, w29
    8594:	b.cs	8680 <inflateBackEnd@@ZLIB_1.2.0+0x3b0>  // b.hs, b.nlast
    8598:	ldr	w2, [sp, #56]
    859c:	sub	w21, w29, w1
    85a0:	sub	w7, w2, w29
    85a4:	subs	w29, w16, w21
    85a8:	add	x2, x28, x7
    85ac:	b.ls	88e8 <inflateBackEnd@@ZLIB_1.2.0+0x618>  // b.plast
    85b0:	ldr	w16, [sp, #44]
    85b4:	add	w16, w16, w19
    85b8:	add	w19, w16, w25
    85bc:	sub	w16, w19, w30
    85c0:	cmp	w16, #0x1f
    85c4:	b.cs	8704 <inflateBackEnd@@ZLIB_1.2.0+0x434>  // b.hs, b.nlast
    85c8:	mov	x25, x30
    85cc:	b	881c <inflateBackEnd@@ZLIB_1.2.0+0x54c>
    85d0:	mov	w7, w26
    85d4:	neg	x19, x7
    85d8:	sub	x7, x30, x7
    85dc:	mov	x2, xzr
    85e0:	add	x7, x7, #0x1
    85e4:	mov	w21, w16
    85e8:	add	x25, x7, x2
    85ec:	ldurb	w26, [x25, #-1]
    85f0:	add	x29, x30, x2
    85f4:	sub	w21, w21, #0x3
    85f8:	cmp	w21, #0x2
    85fc:	strb	w26, [x29]
    8600:	ldrb	w26, [x25]
    8604:	add	x2, x2, #0x3
    8608:	strb	w26, [x29, #1]
    860c:	ldrb	w25, [x25, #1]
    8610:	strb	w25, [x29, #2]
    8614:	b.hi	85e8 <inflateBackEnd@@ZLIB_1.2.0+0x318>  // b.pmore
    8618:	cmp	w16, w2
    861c:	add	x7, x30, x2
    8620:	b.eq	8944 <inflateBackEnd@@ZLIB_1.2.0+0x674>  // b.none
    8624:	add	x21, x30, x19
    8628:	add	x21, x21, x2
    862c:	add	x21, x21, #0x1
    8630:	ldurb	w21, [x21, #-1]
    8634:	mov	w16, w16
    8638:	sub	x16, x16, #0x1
    863c:	cmp	w16, w2
    8640:	strb	w21, [x7]
    8644:	b.ne	86b0 <inflateBackEnd@@ZLIB_1.2.0+0x3e0>  // b.any
    8648:	add	x30, x7, #0x1
    864c:	b	8460 <inflateBackEnd@@ZLIB_1.2.0+0x190>
    8650:	sub	w7, w17, w29
    8654:	subs	w21, w16, w29
    8658:	add	x2, x28, x7
    865c:	b.ls	88e8 <inflateBackEnd@@ZLIB_1.2.0+0x618>  // b.plast
    8660:	ldr	w16, [sp, #60]
    8664:	add	w16, w16, w19
    8668:	add	w19, w16, w25
    866c:	sub	w16, w19, w30
    8670:	cmp	w16, #0x1f
    8674:	b.cs	86cc <inflateBackEnd@@ZLIB_1.2.0+0x3fc>  // b.hs, b.nlast
    8678:	mov	x16, x30
    867c:	b	87b4 <inflateBackEnd@@ZLIB_1.2.0+0x4e4>
    8680:	subs	w7, w16, w29
    8684:	add	x2, x28, x21
    8688:	b.ls	88e8 <inflateBackEnd@@ZLIB_1.2.0+0x618>  // b.plast
    868c:	ldr	w16, [sp, #60]
    8690:	str	w7, [sp, #4]
    8694:	add	w16, w16, w19
    8698:	add	w7, w16, w25
    869c:	sub	w16, w7, w30
    86a0:	cmp	w16, #0x1f
    86a4:	b.cs	873c <inflateBackEnd@@ZLIB_1.2.0+0x46c>  // b.hs, b.nlast
    86a8:	mov	x16, x30
    86ac:	b	88cc <inflateBackEnd@@ZLIB_1.2.0+0x5fc>
    86b0:	add	x16, x30, x19
    86b4:	add	x16, x16, x2
    86b8:	ldrb	w16, [x16, #1]
    86bc:	add	x2, x30, x2
    86c0:	add	x30, x2, #0x2
    86c4:	strb	w16, [x7, #1]
    86c8:	b	8460 <inflateBackEnd@@ZLIB_1.2.0+0x190>
    86cc:	str	w21, [sp, #4]
    86d0:	ldr	x21, [sp, #48]
    86d4:	sub	w19, w19, w30
    86d8:	add	x25, x7, x19
    86dc:	add	x25, x21, x25
    86e0:	cmp	x30, x25
    86e4:	b.cs	876c <inflateBackEnd@@ZLIB_1.2.0+0x49c>  // b.hs, b.nlast
    86e8:	add	x19, x30, x19
    86ec:	add	x19, x19, #0x1
    86f0:	cmp	x2, x19
    86f4:	b.cs	876c <inflateBackEnd@@ZLIB_1.2.0+0x49c>  // b.hs, b.nlast
    86f8:	ldr	w21, [sp, #4]
    86fc:	mov	x16, x30
    8700:	b	87b4 <inflateBackEnd@@ZLIB_1.2.0+0x4e4>
    8704:	str	w29, [sp, #4]
    8708:	ldr	x29, [sp, #48]
    870c:	sub	w19, w19, w30
    8710:	add	x25, x7, x19
    8714:	add	x25, x29, x25
    8718:	cmp	x30, x25
    871c:	b.cs	87d4 <inflateBackEnd@@ZLIB_1.2.0+0x504>  // b.hs, b.nlast
    8720:	add	x19, x30, x19
    8724:	add	x19, x19, #0x1
    8728:	cmp	x2, x19
    872c:	b.cs	87d4 <inflateBackEnd@@ZLIB_1.2.0+0x504>  // b.hs, b.nlast
    8730:	ldr	w29, [sp, #4]
    8734:	mov	x25, x30
    8738:	b	881c <inflateBackEnd@@ZLIB_1.2.0+0x54c>
    873c:	ldr	x25, [sp, #48]
    8740:	sub	w7, w7, w30
    8744:	add	x19, x21, x7
    8748:	add	x19, x25, x19
    874c:	cmp	x30, x19
    8750:	b.cs	8888 <inflateBackEnd@@ZLIB_1.2.0+0x5b8>  // b.hs, b.nlast
    8754:	add	x7, x30, x7
    8758:	add	x7, x7, #0x1
    875c:	cmp	x2, x7
    8760:	b.cs	8888 <inflateBackEnd@@ZLIB_1.2.0+0x5b8>  // b.hs, b.nlast
    8764:	mov	x16, x30
    8768:	b	88cc <inflateBackEnd@@ZLIB_1.2.0+0x5fc>
    876c:	add	x21, x16, #0x1
    8770:	ldr	x16, [sp, #32]
    8774:	and	x19, x21, #0x1ffffffe0
    8778:	sub	w29, w29, w19
    877c:	add	x2, x2, x19
    8780:	add	x25, x16, x7
    8784:	add	x16, x30, x19
    8788:	add	x30, x30, #0x10
    878c:	mov	x7, x19
    8790:	ldp	q0, q1, [x25, #-16]
    8794:	add	x25, x25, #0x20
    8798:	subs	x7, x7, #0x20
    879c:	stp	q0, q1, [x30, #-16]
    87a0:	add	x30, x30, #0x20
    87a4:	b.ne	8790 <inflateBackEnd@@ZLIB_1.2.0+0x4c0>  // b.any
    87a8:	cmp	x21, x19
    87ac:	ldr	w21, [sp, #4]
    87b0:	b.eq	87c4 <inflateBackEnd@@ZLIB_1.2.0+0x4f4>  // b.none
    87b4:	ldrb	w7, [x2], #1
    87b8:	subs	w29, w29, #0x1
    87bc:	strb	w7, [x16], #1
    87c0:	b.ne	87b4 <inflateBackEnd@@ZLIB_1.2.0+0x4e4>  // b.any
    87c4:	sub	x2, x16, w26, uxtw
    87c8:	mov	x30, x16
    87cc:	mov	w16, w21
    87d0:	b	88e8 <inflateBackEnd@@ZLIB_1.2.0+0x618>
    87d4:	add	x29, x16, #0x1
    87d8:	ldr	x16, [sp, #32]
    87dc:	add	x19, x16, x7
    87e0:	and	x16, x29, #0x1ffffffe0
    87e4:	add	x25, x30, x16
    87e8:	sub	w21, w21, w16
    87ec:	add	x2, x2, x16
    87f0:	add	x30, x30, #0x10
    87f4:	mov	x7, x16
    87f8:	ldp	q0, q1, [x19, #-16]
    87fc:	add	x19, x19, #0x20
    8800:	subs	x7, x7, #0x20
    8804:	stp	q0, q1, [x30, #-16]
    8808:	add	x30, x30, #0x20
    880c:	b.ne	87f8 <inflateBackEnd@@ZLIB_1.2.0+0x528>  // b.any
    8810:	cmp	x29, x16
    8814:	ldr	w29, [sp, #4]
    8818:	b.eq	882c <inflateBackEnd@@ZLIB_1.2.0+0x55c>  // b.none
    881c:	ldrb	w16, [x2], #1
    8820:	subs	w21, w21, #0x1
    8824:	strb	w16, [x25], #1
    8828:	b.ne	881c <inflateBackEnd@@ZLIB_1.2.0+0x54c>  // b.any
    882c:	subs	w16, w29, w1
    8830:	b.ls	8878 <inflateBackEnd@@ZLIB_1.2.0+0x5a8>  // b.plast
    8834:	cmp	w20, #0x1f
    8838:	b.cc	8854 <inflateBackEnd@@ZLIB_1.2.0+0x584>  // b.lo, b.ul, b.last
    883c:	ldr	x2, [sp, #24]
    8840:	cmp	x25, x2
    8844:	b.cs	8960 <inflateBackEnd@@ZLIB_1.2.0+0x690>  // b.hs, b.nlast
    8848:	add	x2, x25, x24
    884c:	cmp	x28, x2
    8850:	b.cs	8960 <inflateBackEnd@@ZLIB_1.2.0+0x690>  // b.hs, b.nlast
    8854:	mov	x30, x25
    8858:	mov	w2, w1
    885c:	mov	x7, x28
    8860:	ldrb	w19, [x7], #1
    8864:	subs	w2, w2, #0x1
    8868:	strb	w19, [x30], #1
    886c:	b.ne	8860 <inflateBackEnd@@ZLIB_1.2.0+0x590>  // b.any
    8870:	sub	x2, x30, w26, uxtw
    8874:	b	88e8 <inflateBackEnd@@ZLIB_1.2.0+0x618>
    8878:	mov	x30, x25
    887c:	mov	w16, w29
    8880:	mov	x2, x28
    8884:	b	88e8 <inflateBackEnd@@ZLIB_1.2.0+0x618>
    8888:	add	x7, x16, #0x1
    888c:	ldr	x16, [sp, #32]
    8890:	and	x19, x7, #0x1ffffffe0
    8894:	sub	w29, w29, w19
    8898:	add	x2, x2, x19
    889c:	add	x21, x16, x21
    88a0:	add	x16, x30, x19
    88a4:	add	x25, x30, #0x10
    88a8:	mov	x30, x19
    88ac:	ldp	q0, q1, [x21, #-16]
    88b0:	add	x21, x21, #0x20
    88b4:	subs	x30, x30, #0x20
    88b8:	stp	q0, q1, [x25, #-16]
    88bc:	add	x25, x25, #0x20
    88c0:	b.ne	88ac <inflateBackEnd@@ZLIB_1.2.0+0x5dc>  // b.any
    88c4:	cmp	x7, x19
    88c8:	b.eq	88dc <inflateBackEnd@@ZLIB_1.2.0+0x60c>  // b.none
    88cc:	ldrb	w7, [x2], #1
    88d0:	subs	w29, w29, #0x1
    88d4:	strb	w7, [x16], #1
    88d8:	b.ne	88cc <inflateBackEnd@@ZLIB_1.2.0+0x5fc>  // b.any
    88dc:	sub	x2, x16, w26, uxtw
    88e0:	mov	x30, x16
    88e4:	ldr	w16, [sp, #4]
    88e8:	cmp	w16, #0x3
    88ec:	b.cc	892c <inflateBackEnd@@ZLIB_1.2.0+0x65c>  // b.lo, b.ul, b.last
    88f0:	ldrb	w7, [x2]
    88f4:	add	x19, x30, #0x3
    88f8:	sub	w16, w16, #0x3
    88fc:	cmp	w16, #0x2
    8900:	strb	w7, [x30]
    8904:	ldrb	w7, [x2, #1]
    8908:	strb	w7, [x30, #1]
    890c:	add	x7, x2, #0x3
    8910:	ldrb	w2, [x2, #2]
    8914:	strb	w2, [x30, #2]
    8918:	mov	x2, x7
    891c:	mov	x30, x19
    8920:	b.hi	88f0 <inflateBackEnd@@ZLIB_1.2.0+0x620>  // b.pmore
    8924:	mov	x30, x19
    8928:	mov	x2, x7
    892c:	cbz	w16, 8460 <inflateBackEnd@@ZLIB_1.2.0+0x190>
    8930:	ldrb	w19, [x2]
    8934:	mov	x7, x30
    8938:	cmp	w16, #0x1
    893c:	strb	w19, [x7], #1
    8940:	b.ne	894c <inflateBackEnd@@ZLIB_1.2.0+0x67c>  // b.any
    8944:	mov	x30, x7
    8948:	b	8460 <inflateBackEnd@@ZLIB_1.2.0+0x190>
    894c:	ldrb	w16, [x2, #1]
    8950:	add	x2, x30, #0x2
    8954:	strb	w16, [x30, #1]
    8958:	mov	x30, x2
    895c:	b	8460 <inflateBackEnd@@ZLIB_1.2.0+0x190>
    8960:	ldr	x19, [sp, #32]
    8964:	add	x30, x25, x27
    8968:	add	x2, x25, #0x10
    896c:	mov	x7, x27
    8970:	ldp	q0, q1, [x19, #-16]
    8974:	add	x19, x19, #0x20
    8978:	subs	x7, x7, #0x20
    897c:	stp	q0, q1, [x2, #-16]
    8980:	add	x2, x2, #0x20
    8984:	b.ne	8970 <inflateBackEnd@@ZLIB_1.2.0+0x6a0>  // b.any
    8988:	ldr	w2, [sp, #20]
    898c:	ldr	x7, [sp, #8]
    8990:	cmp	x24, x27
    8994:	b.ne	8860 <inflateBackEnd@@ZLIB_1.2.0+0x590>  // b.any
    8998:	b	8870 <inflateBackEnd@@ZLIB_1.2.0+0x5a0>
    899c:	tbnz	w7, #5, 89ac <inflateBackEnd@@ZLIB_1.2.0+0x6dc>
    89a0:	adrp	x15, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    89a4:	add	x15, x15, #0x96
    89a8:	b	89b8 <inflateBackEnd@@ZLIB_1.2.0+0x6e8>
    89ac:	mov	w14, #0x3f3f                	// #16191
    89b0:	b	89c0 <inflateBackEnd@@ZLIB_1.2.0+0x6f0>
    89b4:	mov	x15, x6
    89b8:	mov	w14, #0x3f51                	// #16209
    89bc:	str	x15, [x0, #48]
    89c0:	str	w14, [x8, #8]
    89c4:	lsr	w14, w13, #3
    89c8:	and	w13, w13, #0x7
    89cc:	mov	w15, #0xffffffff            	// #-1
    89d0:	sub	x9, x9, x14
    89d4:	lsl	w14, w15, w13
    89d8:	sub	w12, w12, w30
    89dc:	mvn	w14, w14
    89e0:	str	x9, [x0]
    89e4:	sub	w9, w11, w9
    89e8:	add	w12, w12, #0x101
    89ec:	and	x10, x10, x14
    89f0:	add	w9, w9, #0x5
    89f4:	str	x30, [x0, #24]
    89f8:	str	w12, [x0, #32]
    89fc:	str	w9, [x0, #8]
    8a00:	str	x10, [x8, #80]
    8a04:	str	w13, [x8, #88]
    8a08:	ldp	x20, x19, [sp, #144]
    8a0c:	ldp	x22, x21, [sp, #128]
    8a10:	ldp	x24, x23, [sp, #112]
    8a14:	ldp	x26, x25, [sp, #96]
    8a18:	ldp	x28, x27, [sp, #80]
    8a1c:	ldp	x29, x30, [sp, #64]
    8a20:	add	sp, sp, #0xa0
    8a24:	ret

0000000000008a28 <inflateResetKeep@@ZLIB_1.2.5.2>:
    8a28:	cbz	x0, 8ac4 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    8a2c:	ldr	x8, [x0, #64]
    8a30:	cbz	x8, 8ac4 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    8a34:	ldr	x8, [x0, #72]
    8a38:	cbz	x8, 8ac4 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    8a3c:	ldr	x8, [x0, #56]
    8a40:	cbz	x8, 8ac4 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    8a44:	ldr	x9, [x8]
    8a48:	cmp	x9, x0
    8a4c:	b.ne	8ac4 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>  // b.any
    8a50:	ldr	w9, [x8, #8]
    8a54:	mov	w10, #0xffffc0cc            	// #-16180
    8a58:	add	w9, w9, w10
    8a5c:	cmp	w9, #0x1f
    8a60:	b.hi	8ac4 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>  // b.pmore
    8a64:	str	xzr, [x8, #40]
    8a68:	str	xzr, [x0, #16]
    8a6c:	stp	xzr, xzr, [x0, #40]
    8a70:	ldr	w9, [x8, #16]
    8a74:	cbz	w9, 8a80 <inflateResetKeep@@ZLIB_1.2.5.2+0x58>
    8a78:	and	x9, x9, #0x1
    8a7c:	str	x9, [x0, #96]
    8a80:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    8a84:	ldr	d0, [x9, #232]
    8a88:	mov	w9, #0x8000                	// #32768
    8a8c:	str	w9, [x8, #28]
    8a90:	add	x9, x8, #0x558
    8a94:	str	x9, [x8, #144]
    8a98:	stp	x9, x9, [x8, #104]
    8a9c:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    8aa0:	str	d0, [x8, #8]
    8aa4:	ldr	d0, [x9, #240]
    8aa8:	mov	w0, wzr
    8aac:	str	wzr, [x8, #20]
    8ab0:	str	xzr, [x8, #48]
    8ab4:	str	xzr, [x8, #80]
    8ab8:	str	wzr, [x8, #88]
    8abc:	str	d0, [x8, #7144]
    8ac0:	ret
    8ac4:	mov	w0, #0xfffffffe            	// #-2
    8ac8:	ret

0000000000008acc <inflateReset@@Base>:
    8acc:	cbz	x0, 8b70 <inflateReset@@Base+0xa4>
    8ad0:	ldr	x8, [x0, #64]
    8ad4:	cbz	x8, 8b70 <inflateReset@@Base+0xa4>
    8ad8:	ldr	x8, [x0, #72]
    8adc:	cbz	x8, 8b70 <inflateReset@@Base+0xa4>
    8ae0:	ldr	x8, [x0, #56]
    8ae4:	cbz	x8, 8b70 <inflateReset@@Base+0xa4>
    8ae8:	ldr	x9, [x8]
    8aec:	cmp	x9, x0
    8af0:	b.ne	8b70 <inflateReset@@Base+0xa4>  // b.any
    8af4:	ldr	w9, [x8, #8]
    8af8:	mov	w10, #0xffffc0cc            	// #-16180
    8afc:	add	w9, w9, w10
    8b00:	cmp	w9, #0x1f
    8b04:	b.hi	8b70 <inflateReset@@Base+0xa4>  // b.pmore
    8b08:	str	xzr, [x8, #64]
    8b0c:	str	wzr, [x8, #60]
    8b10:	str	xzr, [x8, #40]
    8b14:	str	xzr, [x0, #16]
    8b18:	stp	xzr, xzr, [x0, #40]
    8b1c:	ldr	w9, [x8, #16]
    8b20:	cbz	w9, 8b2c <inflateReset@@Base+0x60>
    8b24:	and	x9, x9, #0x1
    8b28:	str	x9, [x0, #96]
    8b2c:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    8b30:	ldr	d0, [x9, #232]
    8b34:	mov	w9, #0x8000                	// #32768
    8b38:	str	w9, [x8, #28]
    8b3c:	add	x9, x8, #0x558
    8b40:	str	x9, [x8, #144]
    8b44:	stp	x9, x9, [x8, #104]
    8b48:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    8b4c:	str	d0, [x8, #8]
    8b50:	ldr	d0, [x9, #240]
    8b54:	mov	w0, wzr
    8b58:	str	wzr, [x8, #20]
    8b5c:	str	xzr, [x8, #48]
    8b60:	str	xzr, [x8, #80]
    8b64:	str	wzr, [x8, #88]
    8b68:	str	d0, [x8, #7144]
    8b6c:	ret
    8b70:	mov	w0, #0xfffffffe            	// #-2
    8b74:	ret

0000000000008b78 <inflateReset2@@ZLIB_1.2.3.4>:
    8b78:	stp	x29, x30, [sp, #-48]!
    8b7c:	stp	x22, x21, [sp, #16]
    8b80:	stp	x20, x19, [sp, #32]
    8b84:	mov	x29, sp
    8b88:	cbz	x0, 8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>
    8b8c:	ldr	x8, [x0, #64]
    8b90:	mov	x19, x0
    8b94:	cbz	x8, 8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>
    8b98:	ldr	x8, [x19, #72]
    8b9c:	cbz	x8, 8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>
    8ba0:	ldr	x20, [x19, #56]
    8ba4:	cbz	x20, 8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>
    8ba8:	ldr	x9, [x20]
    8bac:	cmp	x9, x19
    8bb0:	b.ne	8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>  // b.any
    8bb4:	ldr	w9, [x20, #8]
    8bb8:	mov	w10, #0xffffc0cc            	// #-16180
    8bbc:	add	w9, w9, w10
    8bc0:	cmp	w9, #0x1f
    8bc4:	b.hi	8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>  // b.pmore
    8bc8:	tbnz	w1, #31, 8be4 <inflateReset2@@ZLIB_1.2.3.4+0x6c>
    8bcc:	lsr	w9, w1, #4
    8bd0:	and	w10, w1, #0xf
    8bd4:	cmp	w1, #0x30
    8bd8:	add	w22, w9, #0x5
    8bdc:	csel	w21, w10, w1, lt  // lt = tstop
    8be0:	b	8bec <inflateReset2@@ZLIB_1.2.3.4+0x74>
    8be4:	mov	w22, wzr
    8be8:	neg	w21, w1
    8bec:	cbz	w21, 8bfc <inflateReset2@@ZLIB_1.2.3.4+0x84>
    8bf0:	and	w9, w21, #0xfffffff8
    8bf4:	cmp	w9, #0x8
    8bf8:	b.ne	8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>  // b.any
    8bfc:	ldr	x1, [x20, #72]
    8c00:	cbz	x1, 8c10 <inflateReset2@@ZLIB_1.2.3.4+0x98>
    8c04:	ldr	w9, [x20, #56]
    8c08:	cmp	w9, w21
    8c0c:	b.ne	8c1c <inflateReset2@@ZLIB_1.2.3.4+0xa4>  // b.any
    8c10:	str	w22, [x20, #16]
    8c14:	str	w21, [x20, #56]
    8c18:	b	8c38 <inflateReset2@@ZLIB_1.2.3.4+0xc0>
    8c1c:	ldr	x0, [x19, #80]
    8c20:	blr	x8
    8c24:	str	xzr, [x20, #72]
    8c28:	ldr	x8, [x19, #64]
    8c2c:	str	w22, [x20, #16]
    8c30:	str	w21, [x20, #56]
    8c34:	cbz	x8, 8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>
    8c38:	ldr	x8, [x19, #72]
    8c3c:	cbz	x8, 8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>
    8c40:	ldr	x8, [x19, #56]
    8c44:	cbz	x8, 8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>
    8c48:	ldr	x9, [x8]
    8c4c:	cmp	x9, x19
    8c50:	b.ne	8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>  // b.any
    8c54:	ldr	w9, [x8, #8]
    8c58:	mov	w10, #0xffffc0cc            	// #-16180
    8c5c:	add	w9, w9, w10
    8c60:	cmp	w9, #0x1f
    8c64:	b.hi	8cdc <inflateReset2@@ZLIB_1.2.3.4+0x164>  // b.pmore
    8c68:	str	xzr, [x8, #64]
    8c6c:	str	wzr, [x8, #60]
    8c70:	str	xzr, [x8, #40]
    8c74:	str	xzr, [x19, #16]
    8c78:	stp	xzr, xzr, [x19, #40]
    8c7c:	ldr	w9, [x8, #16]
    8c80:	cbz	w9, 8c8c <inflateReset2@@ZLIB_1.2.3.4+0x114>
    8c84:	and	x9, x9, #0x1
    8c88:	str	x9, [x19, #96]
    8c8c:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    8c90:	ldr	d0, [x9, #232]
    8c94:	mov	w9, #0x8000                	// #32768
    8c98:	str	w9, [x8, #28]
    8c9c:	add	x9, x8, #0x558
    8ca0:	str	x9, [x8, #144]
    8ca4:	stp	x9, x9, [x8, #104]
    8ca8:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    8cac:	str	d0, [x8, #8]
    8cb0:	ldr	d0, [x9, #240]
    8cb4:	mov	w0, wzr
    8cb8:	str	wzr, [x8, #20]
    8cbc:	str	xzr, [x8, #48]
    8cc0:	str	xzr, [x8, #80]
    8cc4:	str	wzr, [x8, #88]
    8cc8:	str	d0, [x8, #7144]
    8ccc:	ldp	x20, x19, [sp, #32]
    8cd0:	ldp	x22, x21, [sp, #16]
    8cd4:	ldp	x29, x30, [sp], #48
    8cd8:	ret
    8cdc:	mov	w0, #0xfffffffe            	// #-2
    8ce0:	ldp	x20, x19, [sp, #32]
    8ce4:	ldp	x22, x21, [sp, #16]
    8ce8:	ldp	x29, x30, [sp], #48
    8cec:	ret

0000000000008cf0 <inflateInit2_@@Base>:
    8cf0:	stp	x29, x30, [sp, #-48]!
    8cf4:	stp	x22, x21, [sp, #16]
    8cf8:	stp	x20, x19, [sp, #32]
    8cfc:	mov	x29, sp
    8d00:	cbz	x2, 8d90 <inflateInit2_@@Base+0xa0>
    8d04:	cmp	w3, #0x70
    8d08:	mov	w21, #0xfffffffa            	// #-6
    8d0c:	b.ne	8dcc <inflateInit2_@@Base+0xdc>  // b.any
    8d10:	ldrb	w8, [x2]
    8d14:	cmp	w8, #0x31
    8d18:	b.ne	8dcc <inflateInit2_@@Base+0xdc>  // b.any
    8d1c:	mov	x19, x0
    8d20:	cbz	x0, 8d98 <inflateInit2_@@Base+0xa8>
    8d24:	ldr	x8, [x19, #64]
    8d28:	mov	w20, w1
    8d2c:	str	xzr, [x19, #48]
    8d30:	cbz	x8, 8da0 <inflateInit2_@@Base+0xb0>
    8d34:	ldr	x9, [x19, #72]
    8d38:	cbz	x9, 8db8 <inflateInit2_@@Base+0xc8>
    8d3c:	ldr	x0, [x19, #80]
    8d40:	mov	w1, #0x1                   	// #1
    8d44:	mov	w2, #0x1bf8                	// #7160
    8d48:	blr	x8
    8d4c:	cbz	x0, 8dc8 <inflateInit2_@@Base+0xd8>
    8d50:	mov	w8, #0x3f34                	// #16180
    8d54:	mov	x22, x0
    8d58:	str	x0, [x19, #56]
    8d5c:	str	x19, [x0]
    8d60:	str	xzr, [x0, #72]
    8d64:	str	w8, [x0, #8]
    8d68:	mov	x0, x19
    8d6c:	mov	w1, w20
    8d70:	bl	2550 <inflateReset2@plt>
    8d74:	mov	w21, w0
    8d78:	cbz	w0, 8dcc <inflateInit2_@@Base+0xdc>
    8d7c:	ldp	x8, x0, [x19, #72]
    8d80:	mov	x1, x22
    8d84:	blr	x8
    8d88:	str	xzr, [x19, #56]
    8d8c:	b	8dcc <inflateInit2_@@Base+0xdc>
    8d90:	mov	w21, #0xfffffffa            	// #-6
    8d94:	b	8dcc <inflateInit2_@@Base+0xdc>
    8d98:	mov	w21, #0xfffffffe            	// #-2
    8d9c:	b	8dcc <inflateInit2_@@Base+0xdc>
    8da0:	adrp	x8, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    8da4:	add	x8, x8, #0xb3c
    8da8:	str	x8, [x19, #64]
    8dac:	str	xzr, [x19, #80]
    8db0:	ldr	x9, [x19, #72]
    8db4:	cbnz	x9, 8d3c <inflateInit2_@@Base+0x4c>
    8db8:	adrp	x9, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    8dbc:	add	x9, x9, #0xb44
    8dc0:	str	x9, [x19, #72]
    8dc4:	b	8d3c <inflateInit2_@@Base+0x4c>
    8dc8:	mov	w21, #0xfffffffc            	// #-4
    8dcc:	mov	w0, w21
    8dd0:	ldp	x20, x19, [sp, #32]
    8dd4:	ldp	x22, x21, [sp, #16]
    8dd8:	ldp	x29, x30, [sp], #48
    8ddc:	ret

0000000000008de0 <inflateInit_@@Base>:
    8de0:	stp	x29, x30, [sp, #-48]!
    8de4:	str	x21, [sp, #16]
    8de8:	stp	x20, x19, [sp, #32]
    8dec:	mov	x29, sp
    8df0:	cbz	x1, 8e7c <inflateInit_@@Base+0x9c>
    8df4:	cmp	w2, #0x70
    8df8:	mov	w20, #0xfffffffa            	// #-6
    8dfc:	b.ne	8eb8 <inflateInit_@@Base+0xd8>  // b.any
    8e00:	ldrb	w8, [x1]
    8e04:	cmp	w8, #0x31
    8e08:	b.ne	8eb8 <inflateInit_@@Base+0xd8>  // b.any
    8e0c:	mov	x19, x0
    8e10:	cbz	x0, 8e84 <inflateInit_@@Base+0xa4>
    8e14:	ldr	x8, [x19, #64]
    8e18:	str	xzr, [x19, #48]
    8e1c:	cbz	x8, 8e8c <inflateInit_@@Base+0xac>
    8e20:	ldr	x9, [x19, #72]
    8e24:	cbz	x9, 8ea4 <inflateInit_@@Base+0xc4>
    8e28:	ldr	x0, [x19, #80]
    8e2c:	mov	w1, #0x1                   	// #1
    8e30:	mov	w2, #0x1bf8                	// #7160
    8e34:	blr	x8
    8e38:	cbz	x0, 8eb4 <inflateInit_@@Base+0xd4>
    8e3c:	mov	w8, #0x3f34                	// #16180
    8e40:	mov	x21, x0
    8e44:	str	x0, [x19, #56]
    8e48:	str	x19, [x0]
    8e4c:	str	xzr, [x0, #72]
    8e50:	str	w8, [x0, #8]
    8e54:	mov	w1, #0xf                   	// #15
    8e58:	mov	x0, x19
    8e5c:	bl	2550 <inflateReset2@plt>
    8e60:	mov	w20, w0
    8e64:	cbz	w0, 8eb8 <inflateInit_@@Base+0xd8>
    8e68:	ldp	x8, x0, [x19, #72]
    8e6c:	mov	x1, x21
    8e70:	blr	x8
    8e74:	str	xzr, [x19, #56]
    8e78:	b	8eb8 <inflateInit_@@Base+0xd8>
    8e7c:	mov	w20, #0xfffffffa            	// #-6
    8e80:	b	8eb8 <inflateInit_@@Base+0xd8>
    8e84:	mov	w20, #0xfffffffe            	// #-2
    8e88:	b	8eb8 <inflateInit_@@Base+0xd8>
    8e8c:	adrp	x8, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    8e90:	add	x8, x8, #0xb3c
    8e94:	str	x8, [x19, #64]
    8e98:	str	xzr, [x19, #80]
    8e9c:	ldr	x9, [x19, #72]
    8ea0:	cbnz	x9, 8e28 <inflateInit_@@Base+0x48>
    8ea4:	adrp	x9, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    8ea8:	add	x9, x9, #0xb44
    8eac:	str	x9, [x19, #72]
    8eb0:	b	8e28 <inflateInit_@@Base+0x48>
    8eb4:	mov	w20, #0xfffffffc            	// #-4
    8eb8:	mov	w0, w20
    8ebc:	ldp	x20, x19, [sp, #32]
    8ec0:	ldr	x21, [sp, #16]
    8ec4:	ldp	x29, x30, [sp], #48
    8ec8:	ret

0000000000008ecc <inflatePrime@@ZLIB_1.2.2.4>:
    8ecc:	cbz	x0, 8f24 <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8ed0:	ldr	x8, [x0, #64]
    8ed4:	cbz	x8, 8f24 <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8ed8:	ldr	x8, [x0, #72]
    8edc:	cbz	x8, 8f24 <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8ee0:	ldr	x8, [x0, #56]
    8ee4:	cbz	x8, 8f24 <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8ee8:	ldr	x9, [x8]
    8eec:	cmp	x9, x0
    8ef0:	b.ne	8f24 <inflatePrime@@ZLIB_1.2.2.4+0x58>  // b.any
    8ef4:	ldr	w9, [x8, #8]
    8ef8:	mov	w10, #0xffffc0cc            	// #-16180
    8efc:	add	w9, w9, w10
    8f00:	cmp	w9, #0x1f
    8f04:	b.hi	8f24 <inflatePrime@@ZLIB_1.2.2.4+0x58>  // b.pmore
    8f08:	tbnz	w1, #31, 8f2c <inflatePrime@@ZLIB_1.2.2.4+0x60>
    8f0c:	cmp	w1, #0x10
    8f10:	b.gt	8f24 <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8f14:	ldr	w10, [x8, #88]
    8f18:	add	w9, w10, w1
    8f1c:	cmp	w9, #0x20
    8f20:	b.ls	8f3c <inflatePrime@@ZLIB_1.2.2.4+0x70>  // b.plast
    8f24:	mov	w0, #0xfffffffe            	// #-2
    8f28:	ret
    8f2c:	mov	w0, wzr
    8f30:	str	xzr, [x8, #80]
    8f34:	str	wzr, [x8, #88]
    8f38:	ret
    8f3c:	mov	x11, #0xffffffffffffffff    	// #-1
    8f40:	ldr	x12, [x8, #80]
    8f44:	lsl	x11, x11, x1
    8f48:	bic	w11, w2, w11
    8f4c:	lsl	w10, w11, w10
    8f50:	mov	w0, wzr
    8f54:	add	x10, x12, x10
    8f58:	str	x10, [x8, #80]
    8f5c:	str	w9, [x8, #88]
    8f60:	ret

0000000000008f64 <inflate@@Base>:
    8f64:	sub	sp, sp, #0xd0
    8f68:	stp	x29, x30, [sp, #112]
    8f6c:	stp	x28, x27, [sp, #128]
    8f70:	stp	x26, x25, [sp, #144]
    8f74:	stp	x24, x23, [sp, #160]
    8f78:	stp	x22, x21, [sp, #176]
    8f7c:	stp	x20, x19, [sp, #192]
    8f80:	add	x29, sp, #0x70
    8f84:	cbz	x0, a810 <inflate@@Base+0x18ac>
    8f88:	ldr	x8, [x0, #64]
    8f8c:	mov	x19, x0
    8f90:	cbz	x8, a810 <inflate@@Base+0x18ac>
    8f94:	ldr	x8, [x19, #72]
    8f98:	cbz	x8, a810 <inflate@@Base+0x18ac>
    8f9c:	ldr	x27, [x19, #56]
    8fa0:	cbz	x27, a810 <inflate@@Base+0x18ac>
    8fa4:	ldr	x8, [x27]
    8fa8:	cmp	x8, x19
    8fac:	b.ne	a810 <inflate@@Base+0x18ac>  // b.any
    8fb0:	mov	x9, x27
    8fb4:	ldr	w8, [x9, #8]!
    8fb8:	stur	x9, [x29, #-16]
    8fbc:	mov	w9, #0xffffc0cc            	// #-16180
    8fc0:	add	w9, w8, w9
    8fc4:	cmp	w9, #0x1f
    8fc8:	b.hi	a810 <inflate@@Base+0x18ac>  // b.pmore
    8fcc:	mov	w20, w1
    8fd0:	ldr	x1, [x19, #24]
    8fd4:	cbz	x1, a810 <inflate@@Base+0x18ac>
    8fd8:	ldr	x23, [x19]
    8fdc:	cbz	x23, a808 <inflate@@Base+0x18a4>
    8fe0:	mov	w9, #0x3f3f                	// #16191
    8fe4:	cmp	w8, w9
    8fe8:	b.ne	8ff8 <inflate@@Base+0x94>  // b.any
    8fec:	ldur	x9, [x29, #-16]
    8ff0:	mov	w8, #0x3f40                	// #16192
    8ff4:	str	w8, [x9]
    8ff8:	add	x10, x27, #0x20
    8ffc:	stur	x10, [x29, #-24]
    9000:	add	x10, x27, #0x558
    9004:	str	x10, [sp, #40]
    9008:	add	x10, x27, #0x90
    900c:	ldr	w3, [x19, #32]
    9010:	ldr	w9, [x19, #8]
    9014:	str	x10, [sp, #56]
    9018:	add	x10, x27, #0x78
    901c:	ldr	x25, [x27, #80]
    9020:	ldr	w22, [x27, #88]
    9024:	str	x10, [sp, #32]
    9028:	add	x10, x27, #0x98
    902c:	str	x10, [sp, #24]
    9030:	add	x10, x27, #0x318
    9034:	str	x10, [sp, #48]
    9038:	add	x10, x27, #0x7c
    903c:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9040:	mov	w6, wzr
    9044:	str	x10, [sp, #8]
    9048:	sub	w10, w20, #0x5
    904c:	mov	w0, #0xffffc0cc            	// #-16180
    9050:	add	x5, x5, #0xf8
    9054:	mov	w28, w9
    9058:	mov	w4, w3
    905c:	stur	w10, [x29, #-44]
    9060:	stur	w9, [x29, #-32]
    9064:	b	90b4 <inflate@@Base+0x150>
    9068:	mov	x0, xzr
    906c:	mov	x1, xzr
    9070:	mov	w2, wzr
    9074:	bl	2390 <crc32@plt>
    9078:	ldp	x8, x9, [x29, #-24]
    907c:	mov	w6, w20
    9080:	ldur	w20, [x29, #-28]
    9084:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9088:	str	x0, [x8]
    908c:	mov	w8, #0x3f3f                	// #16191
    9090:	str	x0, [x19, #96]
    9094:	str	w8, [x9]
    9098:	mov	x1, x26
    909c:	mov	w3, w24
    90a0:	mov	w4, w21
    90a4:	mov	w0, #0xffffc0cc            	// #-16180
    90a8:	add	x5, x5, #0xf8
    90ac:	ldur	x8, [x29, #-16]
    90b0:	ldr	w8, [x8]
    90b4:	add	w8, w8, w0
    90b8:	cmp	w8, #0x1e
    90bc:	b.hi	a810 <inflate@@Base+0x18ac>  // b.pmore
    90c0:	adr	x9, 90dc <inflate@@Base+0x178>
    90c4:	ldrh	w10, [x5, x8, lsl #1]
    90c8:	add	x9, x9, x10, lsl #2
    90cc:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    90d0:	mov	w26, #0x1                   	// #1
    90d4:	add	x8, x8, #0x13e
    90d8:	br	x9
    90dc:	ldr	w8, [x27, #16]
    90e0:	cbz	w8, 997c <inflate@@Base+0xa18>
    90e4:	cmp	w22, #0xf
    90e8:	b.hi	9114 <inflate@@Base+0x1b0>  // b.pmore
    90ec:	mov	w9, w22
    90f0:	cbz	w28, a848 <inflate@@Base+0x18e4>
    90f4:	ldrb	w10, [x23], #1
    90f8:	add	x22, x9, #0x8
    90fc:	sub	w28, w28, #0x1
    9100:	cmp	x9, #0x8
    9104:	lsl	x10, x10, x9
    9108:	add	x25, x10, x25
    910c:	mov	x9, x22
    9110:	b.cc	90f0 <inflate@@Base+0x18c>  // b.lo, b.ul, b.last
    9114:	tbz	w8, #1, 9a24 <inflate@@Base+0xac0>
    9118:	mov	w9, #0x8b1f                	// #35615
    911c:	cmp	x25, x9
    9120:	b.ne	9a24 <inflate@@Base+0xac0>  // b.any
    9124:	ldr	w8, [x27, #56]
    9128:	mov	w21, w6
    912c:	mov	w24, w3
    9130:	stur	w4, [x29, #-28]
    9134:	str	x1, [sp, #16]
    9138:	cbnz	w8, 9144 <inflate@@Base+0x1e0>
    913c:	mov	w8, #0xf                   	// #15
    9140:	str	w8, [x27, #56]
    9144:	mov	x0, xzr
    9148:	mov	x1, xzr
    914c:	mov	w2, wzr
    9150:	bl	2390 <crc32@plt>
    9154:	ldur	x26, [x29, #-24]
    9158:	mov	w8, #0x8b1f                	// #35615
    915c:	sub	x1, x29, #0x4
    9160:	mov	w2, #0x2                   	// #2
    9164:	str	x0, [x26]
    9168:	sturh	w8, [x29, #-4]
    916c:	bl	2390 <crc32@plt>
    9170:	ldur	x9, [x29, #-16]
    9174:	ldr	x1, [sp, #16]
    9178:	ldur	w4, [x29, #-28]
    917c:	mov	w8, #0x3f35                	// #16181
    9180:	mov	x25, xzr
    9184:	mov	w22, wzr
    9188:	str	x0, [x26]
    918c:	str	w8, [x9]
    9190:	mov	w3, w24
    9194:	b	a240 <inflate@@Base+0x12dc>
    9198:	cmp	w22, #0xf
    919c:	b.hi	91c8 <inflate@@Base+0x264>  // b.pmore
    91a0:	mov	w8, w22
    91a4:	cbz	w28, a850 <inflate@@Base+0x18ec>
    91a8:	ldrb	w9, [x23], #1
    91ac:	add	x22, x8, #0x8
    91b0:	sub	w28, w28, #0x1
    91b4:	cmp	x8, #0x8
    91b8:	lsl	x9, x9, x8
    91bc:	add	x25, x9, x25
    91c0:	mov	x8, x22
    91c4:	b.cc	91a4 <inflate@@Base+0x240>  // b.lo, b.ul, b.last
    91c8:	and	w8, w25, #0xff
    91cc:	cmp	w8, #0x8
    91d0:	str	w25, [x27, #24]
    91d4:	b.ne	9984 <inflate@@Base+0xa20>  // b.any
    91d8:	tst	w25, #0xe000
    91dc:	b.eq	9ae8 <inflate@@Base+0xb84>  // b.none
    91e0:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    91e4:	add	x8, x8, #0xa2a
    91e8:	b	a71c <inflate@@Base+0x17b8>
    91ec:	cmp	w22, #0x1f
    91f0:	b.ls	9b68 <inflate@@Base+0xc04>  // b.plast
    91f4:	b	9b8c <inflate@@Base+0xc28>
    91f8:	cmp	w22, #0xf
    91fc:	b.ls	9c0c <inflate@@Base+0xca8>  // b.plast
    9200:	b	9c30 <inflate@@Base+0xccc>
    9204:	cmp	w22, #0x1f
    9208:	b.hi	9230 <inflate@@Base+0x2cc>  // b.pmore
    920c:	mov	w22, w22
    9210:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9214:	ldrb	w8, [x23], #1
    9218:	sub	w28, w28, #0x1
    921c:	cmp	x22, #0x18
    9220:	lsl	x8, x8, x22
    9224:	add	x22, x22, #0x8
    9228:	add	x25, x8, x25
    922c:	b.cc	9210 <inflate@@Base+0x2ac>  // b.lo, b.ul, b.last
    9230:	lsr	x8, x25, #8
    9234:	lsl	w9, w25, #8
    9238:	and	x8, x8, #0xff00
    923c:	and	x9, x9, #0xff0000
    9240:	bfxil	x8, x25, #24, #8
    9244:	orr	x8, x8, x9
    9248:	ldur	x9, [x29, #-24]
    924c:	lsl	w10, w25, #24
    9250:	orr	x8, x8, x10
    9254:	mov	w22, wzr
    9258:	str	x8, [x9]
    925c:	str	x8, [x19, #96]
    9260:	ldur	x8, [x29, #-16]
    9264:	mov	w11, #0x3f3e                	// #16190
    9268:	mov	x25, xzr
    926c:	str	w11, [x8]
    9270:	ldur	x21, [x29, #-16]
    9274:	ldr	w8, [x27, #20]
    9278:	cbz	w8, aac8 <inflate@@Base+0x1b64>
    927c:	mov	x0, xzr
    9280:	str	x1, [sp, #16]
    9284:	mov	x1, xzr
    9288:	mov	w2, wzr
    928c:	mov	w24, w6
    9290:	mov	w26, w4
    9294:	stur	w3, [x29, #-36]
    9298:	bl	24a0 <adler32@plt>
    929c:	ldur	x8, [x29, #-24]
    92a0:	ldur	w3, [x29, #-36]
    92a4:	ldr	x1, [sp, #16]
    92a8:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    92ac:	str	x0, [x8]
    92b0:	str	x0, [x19, #96]
    92b4:	mov	w8, #0x3f3f                	// #16191
    92b8:	mov	w4, w26
    92bc:	mov	w6, w24
    92c0:	mov	w0, #0xffffc0cc            	// #-16180
    92c4:	add	x5, x5, #0xf8
    92c8:	str	w8, [x21]
    92cc:	ldur	w8, [x29, #-44]
    92d0:	cmp	w8, #0x2
    92d4:	b.cc	a854 <inflate@@Base+0x18f0>  // b.lo, b.ul, b.last
    92d8:	ldr	w8, [x27, #12]
    92dc:	cbz	w8, 92f4 <inflate@@Base+0x390>
    92e0:	and	w8, w22, #0x7
    92e4:	and	w22, w22, #0xfffffff8
    92e8:	mov	w9, #0x3f4e                	// #16206
    92ec:	lsr	x25, x25, x8
    92f0:	b	a724 <inflate@@Base+0x17c0>
    92f4:	cmp	w22, #0x2
    92f8:	b.hi	9318 <inflate@@Base+0x3b4>  // b.pmore
    92fc:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9300:	ldrb	w8, [x23], #1
    9304:	add	w9, w22, #0x8
    9308:	sub	w28, w28, #0x1
    930c:	lsl	x8, x8, x22
    9310:	add	x25, x8, x25
    9314:	mov	w22, w9
    9318:	adrp	x10, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    931c:	and	w8, w25, #0x1
    9320:	ubfx	w9, w25, #1, #2
    9324:	add	x10, x10, #0x136
    9328:	str	w8, [x27, #12]
    932c:	adr	x11, 9340 <inflate@@Base+0x3dc>
    9330:	ldrh	w8, [x10, x9, lsl #1]
    9334:	add	x11, x11, x8, lsl #2
    9338:	mov	w8, #0x3f41                	// #16193
    933c:	br	x11
    9340:	adrp	x10, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    9344:	ldr	d0, [x10, #1760]
    9348:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    934c:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9350:	add	x8, x8, #0x164
    9354:	add	x9, x9, #0x964
    9358:	mov	w11, #0x3f47                	// #16199
    935c:	cmp	w20, #0x6
    9360:	stp	x8, x9, [x27, #104]
    9364:	str	d0, [x27, #120]
    9368:	str	w11, [x27, #8]
    936c:	b.ne	9a0c <inflate@@Base+0xaa8>  // b.any
    9370:	b	ab14 <inflate@@Base+0x1bb0>
    9374:	and	w8, w22, #0x7
    9378:	and	w22, w22, #0xfffffff8
    937c:	cmp	w22, #0x1f
    9380:	lsr	x25, x25, x8
    9384:	b.hi	93b0 <inflate@@Base+0x44c>  // b.pmore
    9388:	mov	w8, w22
    938c:	cbz	w28, a850 <inflate@@Base+0x18ec>
    9390:	ldrb	w9, [x23], #1
    9394:	add	x22, x8, #0x8
    9398:	sub	w28, w28, #0x1
    939c:	cmp	x8, #0x18
    93a0:	lsl	x9, x9, x8
    93a4:	add	x25, x9, x25
    93a8:	mov	x8, x22
    93ac:	b.cc	938c <inflate@@Base+0x428>  // b.lo, b.ul, b.last
    93b0:	lsr	x8, x25, #16
    93b4:	eor	x8, x8, #0xffff
    93b8:	cmp	x8, w25, uxth
    93bc:	b.ne	9990 <inflate@@Base+0xa2c>  // b.any
    93c0:	mov	w22, wzr
    93c4:	and	w8, w25, #0xffff
    93c8:	mov	w9, #0x3f42                	// #16194
    93cc:	cmp	w20, #0x6
    93d0:	mov	x25, xzr
    93d4:	str	w8, [x27, #92]
    93d8:	str	w9, [x27, #8]
    93dc:	b.eq	a854 <inflate@@Base+0x18f0>  // b.none
    93e0:	ldur	x9, [x29, #-16]
    93e4:	mov	w8, #0x3f43                	// #16195
    93e8:	str	w8, [x9]
    93ec:	ldr	w8, [x27, #92]
    93f0:	cbz	w8, 96b8 <inflate@@Base+0x754>
    93f4:	cmp	w8, w28
    93f8:	csel	w8, w28, w8, hi  // hi = pmore
    93fc:	cmp	w8, w3
    9400:	mov	w24, w3
    9404:	csel	w21, w3, w8, hi  // hi = pmore
    9408:	stur	w6, [x29, #-40]
    940c:	stur	w4, [x29, #-28]
    9410:	cbz	w21, aae8 <inflate@@Base+0x1b84>
    9414:	mov	w26, w21
    9418:	mov	x0, x1
    941c:	str	x1, [sp, #16]
    9420:	mov	x1, x23
    9424:	mov	x2, x26
    9428:	bl	2310 <memcpy@plt>
    942c:	ldr	w8, [x27, #92]
    9430:	ldr	x1, [sp, #16]
    9434:	ldur	w4, [x29, #-28]
    9438:	ldur	w6, [x29, #-40]
    943c:	sub	w8, w8, w21
    9440:	sub	w28, w28, w21
    9444:	add	x23, x23, x26
    9448:	sub	w3, w24, w21
    944c:	add	x1, x1, x26
    9450:	str	w8, [x27, #92]
    9454:	b	9ad8 <inflate@@Base+0xb74>
    9458:	cmp	w22, #0xd
    945c:	b.hi	9488 <inflate@@Base+0x524>  // b.pmore
    9460:	mov	w9, w22
    9464:	cbz	w28, a848 <inflate@@Base+0x18e4>
    9468:	ldrb	w10, [x23], #1
    946c:	add	x22, x9, #0x8
    9470:	sub	w28, w28, #0x1
    9474:	cmp	x9, #0x6
    9478:	lsl	x10, x10, x9
    947c:	add	x25, x10, x25
    9480:	mov	x9, x22
    9484:	b.cc	9464 <inflate@@Base+0x500>  // b.lo, b.ul, b.last
    9488:	and	w11, w25, #0x1f
    948c:	ubfx	w10, w25, #5, #5
    9490:	ubfx	w9, w25, #10, #4
    9494:	lsr	x25, x25, #14
    9498:	add	w12, w11, #0x101
    949c:	add	w13, w10, #0x1
    94a0:	add	w9, w9, #0x4
    94a4:	cmp	w11, #0x1d
    94a8:	sub	w22, w22, #0xe
    94ac:	stp	w12, w13, [x27, #132]
    94b0:	str	w9, [x27, #128]
    94b4:	b.hi	999c <inflate@@Base+0xa38>  // b.pmore
    94b8:	cmp	w10, #0x1e
    94bc:	b.cs	999c <inflate@@Base+0xa38>  // b.hs, b.nlast
    94c0:	mov	w11, #0x3f45                	// #16197
    94c4:	mov	w10, wzr
    94c8:	str	wzr, [x27, #140]
    94cc:	str	w11, [x27, #8]
    94d0:	b	94e4 <inflate@@Base+0x580>
    94d4:	ldr	w10, [x27, #140]
    94d8:	ldr	w9, [x27, #128]
    94dc:	cmp	w10, w9
    94e0:	b.cs	953c <inflate@@Base+0x5d8>  // b.hs, b.nlast
    94e4:	mov	w10, w10
    94e8:	b	952c <inflate@@Base+0x5c8>
    94ec:	ldrb	w11, [x23], #1
    94f0:	add	w12, w22, #0x8
    94f4:	sub	w28, w28, #0x1
    94f8:	lsl	x11, x11, x22
    94fc:	add	x25, x11, x25
    9500:	mov	w22, w12
    9504:	ldrh	w12, [x8, x10, lsl #1]
    9508:	add	x10, x10, #0x1
    950c:	and	w11, w25, #0x7
    9510:	lsr	x25, x25, #3
    9514:	cmp	w10, w9
    9518:	add	x12, x27, x12, lsl #1
    951c:	sub	w22, w22, #0x3
    9520:	str	w10, [x27, #140]
    9524:	strh	w11, [x12, #152]
    9528:	b.cs	953c <inflate@@Base+0x5d8>  // b.hs, b.nlast
    952c:	cmp	w22, #0x2
    9530:	b.hi	9504 <inflate@@Base+0x5a0>  // b.pmore
    9534:	cbnz	w28, 94ec <inflate@@Base+0x588>
    9538:	b	a854 <inflate@@Base+0x18f0>
    953c:	mov	w24, w3
    9540:	mov	x26, x1
    9544:	cmp	w10, #0x12
    9548:	stur	w4, [x29, #-28]
    954c:	b.hi	9570 <inflate@@Base+0x60c>  // b.pmore
    9550:	mov	w9, w10
    9554:	ldrh	w10, [x8, x9, lsl #1]
    9558:	cmp	x9, #0x12
    955c:	add	x9, x9, #0x1
    9560:	add	x10, x27, x10, lsl #1
    9564:	strh	wzr, [x10, #152]
    9568:	b.cc	9554 <inflate@@Base+0x5f0>  // b.lo, b.ul, b.last
    956c:	str	w9, [x27, #140]
    9570:	ldp	x4, x8, [sp, #32]
    9574:	ldr	x1, [sp, #24]
    9578:	mov	w2, #0x13                  	// #19
    957c:	mov	w0, wzr
    9580:	str	x8, [x27, #144]
    9584:	str	x8, [x27, #104]
    9588:	mov	w8, #0x7                   	// #7
    958c:	str	w8, [x27, #120]
    9590:	ldp	x5, x3, [sp, #48]
    9594:	bl	b494 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    9598:	mov	w6, w0
    959c:	cbz	w0, 96c0 <inflate@@Base+0x75c>
    95a0:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    95a4:	add	x8, x8, #0xc
    95a8:	str	x8, [x19, #48]
    95ac:	ldur	x8, [x29, #-16]
    95b0:	ldur	w4, [x29, #-28]
    95b4:	mov	w9, #0x3f51                	// #16209
    95b8:	mov	x1, x26
    95bc:	str	w9, [x8]
    95c0:	mov	w3, w24
    95c4:	b	9ad8 <inflate@@Base+0xb74>
    95c8:	ldr	w10, [x27, #140]
    95cc:	b	96e8 <inflate@@Base+0x784>
    95d0:	ldr	w8, [x27, #100]
    95d4:	cbz	w8, a3c0 <inflate@@Base+0x145c>
    95d8:	cmp	w22, w8
    95dc:	b.cs	99a8 <inflate@@Base+0xa44>  // b.hs, b.nlast
    95e0:	mov	w11, w22
    95e4:	mov	w9, w28
    95e8:	mov	x10, x23
    95ec:	cbz	w9, a834 <inflate@@Base+0x18d0>
    95f0:	ldrb	w12, [x10], #1
    95f4:	sub	w9, w9, #0x1
    95f8:	lsl	x12, x12, x11
    95fc:	add	w11, w11, #0x8
    9600:	cmp	w11, w8
    9604:	add	x25, x12, x25
    9608:	b.cc	95ec <inflate@@Base+0x688>  // b.lo, b.ul, b.last
    960c:	b	99b4 <inflate@@Base+0xa50>
    9610:	ldr	w8, [x27, #100]
    9614:	b	a528 <inflate@@Base+0x15c4>
    9618:	cbz	w3, a854 <inflate@@Base+0x18f0>
    961c:	ldr	w8, [x27, #92]
    9620:	mov	w9, #0x3f48                	// #16200
    9624:	sub	w3, w3, #0x1
    9628:	strb	w8, [x1], #1
    962c:	str	w9, [x27, #8]
    9630:	b	90ac <inflate@@Base+0x148>
    9634:	ldr	w8, [x27, #16]
    9638:	cbz	w8, a118 <inflate@@Base+0x11b4>
    963c:	cmp	w22, #0x1f
    9640:	b.hi	966c <inflate@@Base+0x708>  // b.pmore
    9644:	mov	w9, w22
    9648:	cbz	w28, a848 <inflate@@Base+0x18e4>
    964c:	ldrb	w10, [x23], #1
    9650:	add	x22, x9, #0x8
    9654:	sub	w28, w28, #0x1
    9658:	cmp	x9, #0x18
    965c:	lsl	x10, x10, x9
    9660:	add	x25, x10, x25
    9664:	mov	x9, x22
    9668:	b.cc	9648 <inflate@@Base+0x6e4>  // b.lo, b.ul, b.last
    966c:	ldr	x9, [x19, #40]
    9670:	subs	w2, w4, w3
    9674:	and	w8, w8, #0x4
    9678:	add	x9, x9, x2
    967c:	str	x9, [x19, #40]
    9680:	ldr	x9, [x27, #40]
    9684:	add	x9, x9, x2
    9688:	str	x9, [x27, #40]
    968c:	b.eq	a0cc <inflate@@Base+0x1168>  // b.none
    9690:	cbz	w8, a0cc <inflate@@Base+0x1168>
    9694:	ldr	w8, [x27, #24]
    9698:	ldr	x0, [x27, #32]
    969c:	mov	w21, w6
    96a0:	mov	w24, w3
    96a4:	mov	x26, x1
    96a8:	sub	x1, x1, x2
    96ac:	cbz	w8, a0a0 <inflate@@Base+0x113c>
    96b0:	bl	2390 <crc32@plt>
    96b4:	b	a0a4 <inflate@@Base+0x1140>
    96b8:	mov	w8, #0x3f3f                	// #16191
    96bc:	b	a6f4 <inflate@@Base+0x1790>
    96c0:	ldur	w4, [x29, #-28]
    96c4:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    96c8:	mov	w10, wzr
    96cc:	mov	w8, #0x3f46                	// #16198
    96d0:	mov	x1, x26
    96d4:	mov	w3, w24
    96d8:	mov	w0, #0xffffc0cc            	// #-16180
    96dc:	add	x5, x5, #0xf8
    96e0:	str	wzr, [x27, #140]
    96e4:	str	w8, [x27, #8]
    96e8:	ldp	w2, w8, [x27, #132]
    96ec:	add	w8, w8, w2
    96f0:	cmp	w10, w8
    96f4:	b.cs	9930 <inflate@@Base+0x9cc>  // b.hs, b.nlast
    96f8:	ldr	w11, [x27, #120]
    96fc:	ldr	x9, [x27, #104]
    9700:	mov	w12, #0xffffffff            	// #-1
    9704:	lsl	w11, w12, w11
    9708:	mvn	w11, w11
    970c:	and	w16, w11, w25
    9710:	add	x12, x9, w16, uxtw #2
    9714:	ldrb	w12, [x12, #1]
    9718:	cmp	w22, w12
    971c:	b.cs	9768 <inflate@@Base+0x804>  // b.hs, b.nlast
    9720:	mov	w13, w22
    9724:	mov	w14, w28
    9728:	mov	x15, x23
    972c:	cbz	w14, a834 <inflate@@Base+0x18d0>
    9730:	ldrb	w12, [x15], #1
    9734:	sub	w14, w14, #0x1
    9738:	lsl	x12, x12, x13
    973c:	add	x25, x12, x25
    9740:	and	w16, w11, w25
    9744:	add	x12, x9, w16, uxtw #2
    9748:	ldrb	w12, [x12, #1]
    974c:	add	x13, x13, #0x8
    9750:	cmp	x13, x12
    9754:	b.cc	972c <inflate@@Base+0x7c8>  // b.lo, b.ul, b.last
    9758:	mov	w16, w16
    975c:	mov	x23, x15
    9760:	mov	w28, w14
    9764:	mov	w22, w13
    9768:	add	x13, x9, x16, lsl #2
    976c:	ldrh	w13, [x13, #2]
    9770:	cmp	w13, #0xf
    9774:	b.hi	9794 <inflate@@Base+0x830>  // b.pmore
    9778:	lsr	x25, x25, x12
    977c:	sub	w22, w22, w12
    9780:	add	x12, x27, w10, uxtw #1
    9784:	add	w10, w10, #0x1
    9788:	str	w10, [x27, #140]
    978c:	strh	w13, [x12, #152]
    9790:	b	98ec <inflate@@Base+0x988>
    9794:	cmp	w13, #0x10
    9798:	b.eq	97f4 <inflate@@Base+0x890>  // b.none
    979c:	cmp	w13, #0x11
    97a0:	b.ne	9850 <inflate@@Base+0x8ec>  // b.any
    97a4:	add	w13, w12, #0x3
    97a8:	cmp	w22, w13
    97ac:	b.cs	97d4 <inflate@@Base+0x870>  // b.hs, b.nlast
    97b0:	mov	w22, w22
    97b4:	cbz	w28, a854 <inflate@@Base+0x18f0>
    97b8:	ldrb	w14, [x23], #1
    97bc:	sub	w28, w28, #0x1
    97c0:	lsl	x14, x14, x22
    97c4:	add	x22, x22, #0x8
    97c8:	cmp	x22, x13
    97cc:	add	x25, x14, x25
    97d0:	b.cc	97b4 <inflate@@Base+0x850>  // b.lo, b.ul, b.last
    97d4:	lsr	x14, x25, x12
    97d8:	sub	w15, w22, w12
    97dc:	and	w12, w14, #0x7
    97e0:	mov	w13, wzr
    97e4:	lsr	x25, x14, #3
    97e8:	add	w12, w12, #0x3
    97ec:	sub	w22, w15, #0x3
    97f0:	b	989c <inflate@@Base+0x938>
    97f4:	add	w13, w12, #0x2
    97f8:	cmp	w22, w13
    97fc:	b.cs	9824 <inflate@@Base+0x8c0>  // b.hs, b.nlast
    9800:	mov	w22, w22
    9804:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9808:	ldrb	w14, [x23], #1
    980c:	sub	w28, w28, #0x1
    9810:	lsl	x14, x14, x22
    9814:	add	x22, x22, #0x8
    9818:	cmp	x22, x13
    981c:	add	x25, x14, x25
    9820:	b.cc	9804 <inflate@@Base+0x8a0>  // b.lo, b.ul, b.last
    9824:	lsr	x25, x25, x12
    9828:	sub	w22, w22, w12
    982c:	cbz	w10, a7c8 <inflate@@Base+0x1864>
    9830:	sub	w12, w10, #0x1
    9834:	add	x12, x27, w12, uxtw #1
    9838:	ldrh	w13, [x12, #152]
    983c:	and	w12, w25, #0x3
    9840:	add	w12, w12, #0x3
    9844:	lsr	x25, x25, #2
    9848:	sub	w22, w22, #0x2
    984c:	b	989c <inflate@@Base+0x938>
    9850:	add	w13, w12, #0x7
    9854:	cmp	w22, w13
    9858:	b.cs	9880 <inflate@@Base+0x91c>  // b.hs, b.nlast
    985c:	mov	w22, w22
    9860:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9864:	ldrb	w14, [x23], #1
    9868:	sub	w28, w28, #0x1
    986c:	lsl	x14, x14, x22
    9870:	add	x22, x22, #0x8
    9874:	cmp	x22, x13
    9878:	add	x25, x14, x25
    987c:	b.cc	9860 <inflate@@Base+0x8fc>  // b.lo, b.ul, b.last
    9880:	lsr	x14, x25, x12
    9884:	sub	w15, w22, w12
    9888:	and	w12, w14, #0x7f
    988c:	mov	w13, wzr
    9890:	lsr	x25, x14, #7
    9894:	add	w12, w12, #0xb
    9898:	sub	w22, w15, #0x7
    989c:	add	w14, w12, w10
    98a0:	cmp	w14, w8
    98a4:	b.hi	a7c8 <inflate@@Base+0x1864>  // b.pmore
    98a8:	cmp	w12, #0xf
    98ac:	b.ls	98c0 <inflate@@Base+0x95c>  // b.plast
    98b0:	sub	w14, w12, #0x1
    98b4:	mvn	w15, w10
    98b8:	cmp	w14, w15
    98bc:	b.ls	98f8 <inflate@@Base+0x994>  // b.plast
    98c0:	mov	w15, w10
    98c4:	mov	w14, w12
    98c8:	mov	w10, w15
    98cc:	add	w15, w10, #0x1
    98d0:	add	x10, x27, w10, uxtw #1
    98d4:	subs	w14, w14, #0x1
    98d8:	strh	w13, [x10, #152]
    98dc:	mov	w10, w15
    98e0:	b.ne	98cc <inflate@@Base+0x968>  // b.any
    98e4:	mov	w10, w15
    98e8:	str	w15, [x27, #140]
    98ec:	cmp	w10, w8
    98f0:	b.cc	970c <inflate@@Base+0x7a8>  // b.lo, b.ul, b.last
    98f4:	b	9930 <inflate@@Base+0x9cc>
    98f8:	and	w16, w12, #0xf0
    98fc:	and	w14, w12, #0xf
    9900:	add	w15, w10, w16
    9904:	dup	v0.8h, w13
    9908:	mov	w17, w16
    990c:	add	x18, x27, w10, uxtw #1
    9910:	subs	w17, w17, #0x10
    9914:	add	w10, w10, #0x10
    9918:	stur	q0, [x18, #152]
    991c:	stur	q0, [x18, #168]
    9920:	b.ne	990c <inflate@@Base+0x9a8>  // b.any
    9924:	cmp	w12, w16
    9928:	b.ne	98c8 <inflate@@Base+0x964>  // b.any
    992c:	b	98e4 <inflate@@Base+0x980>
    9930:	ldrh	w8, [x27, #664]
    9934:	cbz	w8, 9a18 <inflate@@Base+0xab4>
    9938:	mov	w24, w4
    993c:	ldp	x4, x8, [sp, #32]
    9940:	stur	w3, [x29, #-36]
    9944:	mov	x26, x1
    9948:	ldr	x1, [sp, #24]
    994c:	str	x8, [x27, #144]
    9950:	str	x8, [x27, #104]
    9954:	mov	w8, #0x9                   	// #9
    9958:	str	w8, [x27, #120]
    995c:	ldp	x5, x3, [sp, #48]
    9960:	mov	w0, #0x1                   	// #1
    9964:	bl	b494 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    9968:	cbz	w0, 9a80 <inflate@@Base+0xb1c>
    996c:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9970:	mov	w6, w0
    9974:	add	x8, x8, #0x64
    9978:	b	9abc <inflate@@Base+0xb58>
    997c:	mov	w8, #0x3f40                	// #16192
    9980:	b	a6f4 <inflate@@Base+0x1790>
    9984:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9988:	add	x8, x8, #0x9fb
    998c:	b	a71c <inflate@@Base+0x17b8>
    9990:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    9994:	add	x8, x8, #0xfcb
    9998:	b	a71c <inflate@@Base+0x17b8>
    999c:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    99a0:	add	x8, x8, #0xfe8
    99a4:	b	a71c <inflate@@Base+0x17b8>
    99a8:	mov	x10, x23
    99ac:	mov	w9, w28
    99b0:	mov	w11, w22
    99b4:	ldr	w13, [x27, #92]
    99b8:	ldr	w14, [x27, #7148]
    99bc:	mov	w12, #0xffffffff            	// #-1
    99c0:	sub	w22, w11, w8
    99c4:	lsl	w11, w12, w8
    99c8:	bic	w11, w25, w11
    99cc:	lsr	x25, x25, x8
    99d0:	add	w11, w13, w11
    99d4:	add	w8, w14, w8
    99d8:	mov	x23, x10
    99dc:	mov	w28, w9
    99e0:	str	w11, [x27, #92]
    99e4:	str	w8, [x27, #7148]
    99e8:	b	a3c4 <inflate@@Base+0x1460>
    99ec:	mov	w8, #0x3f44                	// #16196
    99f0:	b	9a04 <inflate@@Base+0xaa0>
    99f4:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    99f8:	add	x8, x8, #0xfb8
    99fc:	str	x8, [x19, #48]
    9a00:	mov	w8, #0x3f51                	// #16209
    9a04:	ldur	x9, [x29, #-16]
    9a08:	str	w8, [x9]
    9a0c:	lsr	x25, x25, #3
    9a10:	sub	w22, w22, #0x3
    9a14:	b	90ac <inflate@@Base+0x148>
    9a18:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9a1c:	add	x8, x8, #0x3f
    9a20:	b	a71c <inflate@@Base+0x17b8>
    9a24:	ldr	x9, [x27, #48]
    9a28:	str	wzr, [x27, #24]
    9a2c:	cbz	x9, 9a38 <inflate@@Base+0xad4>
    9a30:	mov	w10, #0xffffffff            	// #-1
    9a34:	str	w10, [x9, #72]
    9a38:	tbz	w8, #0, 9a74 <inflate@@Base+0xb10>
    9a3c:	mov	x9, #0x7bdf                	// #31711
    9a40:	lsl	w8, w25, #8
    9a44:	movk	x9, #0xbdef, lsl #16
    9a48:	movk	x9, #0xdef7, lsl #32
    9a4c:	and	x8, x8, #0xff00
    9a50:	movk	x9, #0xef7b, lsl #48
    9a54:	add	x8, x8, x25, lsr #8
    9a58:	mul	x8, x8, x9
    9a5c:	mov	x9, #0x4211                	// #16913
    9a60:	movk	x9, #0x2108, lsl #16
    9a64:	movk	x9, #0x1084, lsl #32
    9a68:	movk	x9, #0x842, lsl #48
    9a6c:	cmp	x8, x9
    9a70:	b.cc	a730 <inflate@@Base+0x17cc>  // b.lo, b.ul, b.last
    9a74:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9a78:	add	x8, x8, #0x9e4
    9a7c:	b	a71c <inflate@@Base+0x17b8>
    9a80:	ldr	x8, [x27, #144]
    9a84:	mov	w9, #0x6                   	// #6
    9a88:	ldp	w10, w2, [x27, #132]
    9a8c:	str	w9, [x27, #124]
    9a90:	str	x8, [x27, #112]
    9a94:	ldp	x5, x3, [sp, #48]
    9a98:	ldr	x4, [sp, #8]
    9a9c:	add	x8, x27, x10, lsl #1
    9aa0:	add	x1, x8, #0x98
    9aa4:	mov	w0, #0x2                   	// #2
    9aa8:	bl	b494 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    9aac:	mov	w6, w0
    9ab0:	cbz	w0, a198 <inflate@@Base+0x1234>
    9ab4:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9ab8:	add	x8, x8, #0x80
    9abc:	str	x8, [x19, #48]
    9ac0:	ldur	x8, [x29, #-16]
    9ac4:	ldur	w3, [x29, #-36]
    9ac8:	mov	w9, #0x3f51                	// #16209
    9acc:	mov	x1, x26
    9ad0:	str	w9, [x8]
    9ad4:	mov	w4, w24
    9ad8:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9adc:	mov	w0, #0xffffc0cc            	// #-16180
    9ae0:	add	x5, x5, #0xf8
    9ae4:	b	90ac <inflate@@Base+0x148>
    9ae8:	ldr	x8, [x27, #48]
    9aec:	cbz	x8, 9af8 <inflate@@Base+0xb94>
    9af0:	ubfx	w9, w25, #8, #1
    9af4:	str	w9, [x8]
    9af8:	tbz	w25, #9, 9b54 <inflate@@Base+0xbf0>
    9afc:	ldrb	w8, [x27, #16]
    9b00:	tbz	w8, #2, 9b54 <inflate@@Base+0xbf0>
    9b04:	sturh	w25, [x29, #-4]
    9b08:	ldur	x25, [x29, #-24]
    9b0c:	mov	x22, x1
    9b10:	sub	x1, x29, #0x4
    9b14:	mov	w2, #0x2                   	// #2
    9b18:	ldr	x0, [x25]
    9b1c:	mov	w24, w20
    9b20:	mov	w20, w3
    9b24:	mov	w21, w4
    9b28:	mov	w26, w6
    9b2c:	bl	2390 <crc32@plt>
    9b30:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9b34:	mov	w6, w26
    9b38:	add	x5, x5, #0xf8
    9b3c:	mov	w4, w21
    9b40:	mov	w3, w20
    9b44:	mov	w20, w24
    9b48:	mov	x1, x22
    9b4c:	str	x0, [x25]
    9b50:	mov	w0, #0xffffc0cc            	// #-16180
    9b54:	ldur	x9, [x29, #-16]
    9b58:	mov	w8, #0x3f36                	// #16182
    9b5c:	mov	w22, wzr
    9b60:	mov	x25, xzr
    9b64:	str	w8, [x9]
    9b68:	mov	w22, w22
    9b6c:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9b70:	ldrb	w8, [x23], #1
    9b74:	sub	w28, w28, #0x1
    9b78:	cmp	x22, #0x18
    9b7c:	lsl	x8, x8, x22
    9b80:	add	x22, x22, #0x8
    9b84:	add	x25, x8, x25
    9b88:	b.cc	9b6c <inflate@@Base+0xc08>  // b.lo, b.ul, b.last
    9b8c:	ldr	x8, [x27, #48]
    9b90:	cbz	x8, 9b98 <inflate@@Base+0xc34>
    9b94:	str	x25, [x8, #8]
    9b98:	ldrb	w8, [x27, #25]
    9b9c:	tbz	w8, #1, 9bf8 <inflate@@Base+0xc94>
    9ba0:	ldrb	w8, [x27, #16]
    9ba4:	tbz	w8, #2, 9bf8 <inflate@@Base+0xc94>
    9ba8:	stur	w25, [x29, #-4]
    9bac:	ldur	x25, [x29, #-24]
    9bb0:	mov	x22, x1
    9bb4:	sub	x1, x29, #0x4
    9bb8:	mov	w2, #0x4                   	// #4
    9bbc:	ldr	x0, [x25]
    9bc0:	mov	w24, w20
    9bc4:	mov	w20, w3
    9bc8:	mov	w21, w4
    9bcc:	mov	w26, w6
    9bd0:	bl	2390 <crc32@plt>
    9bd4:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9bd8:	mov	w6, w26
    9bdc:	add	x5, x5, #0xf8
    9be0:	mov	w4, w21
    9be4:	mov	w3, w20
    9be8:	mov	w20, w24
    9bec:	mov	x1, x22
    9bf0:	str	x0, [x25]
    9bf4:	mov	w0, #0xffffc0cc            	// #-16180
    9bf8:	ldur	x9, [x29, #-16]
    9bfc:	mov	w8, #0x3f37                	// #16183
    9c00:	mov	w22, wzr
    9c04:	mov	x25, xzr
    9c08:	str	w8, [x9]
    9c0c:	mov	w22, w22
    9c10:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9c14:	ldrb	w8, [x23], #1
    9c18:	sub	w28, w28, #0x1
    9c1c:	cmp	x22, #0x8
    9c20:	lsl	x8, x8, x22
    9c24:	add	x22, x22, #0x8
    9c28:	add	x25, x8, x25
    9c2c:	b.cc	9c10 <inflate@@Base+0xcac>  // b.lo, b.ul, b.last
    9c30:	ldr	x8, [x27, #48]
    9c34:	cbz	x8, 9c44 <inflate@@Base+0xce0>
    9c38:	and	w9, w25, #0xff
    9c3c:	lsr	x10, x25, #8
    9c40:	stp	w9, w10, [x8, #16]
    9c44:	ldrb	w8, [x27, #25]
    9c48:	tbz	w8, #1, 9ca4 <inflate@@Base+0xd40>
    9c4c:	ldrb	w8, [x27, #16]
    9c50:	tbz	w8, #2, 9ca4 <inflate@@Base+0xd40>
    9c54:	sturh	w25, [x29, #-4]
    9c58:	ldur	x25, [x29, #-24]
    9c5c:	mov	x22, x1
    9c60:	sub	x1, x29, #0x4
    9c64:	mov	w2, #0x2                   	// #2
    9c68:	ldr	x0, [x25]
    9c6c:	mov	w24, w20
    9c70:	mov	w20, w3
    9c74:	mov	w21, w4
    9c78:	mov	w26, w6
    9c7c:	bl	2390 <crc32@plt>
    9c80:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9c84:	mov	w6, w26
    9c88:	add	x5, x5, #0xf8
    9c8c:	mov	w4, w21
    9c90:	mov	w3, w20
    9c94:	mov	w20, w24
    9c98:	mov	x1, x22
    9c9c:	str	x0, [x25]
    9ca0:	mov	w0, #0xffffc0cc            	// #-16180
    9ca4:	ldur	x9, [x29, #-16]
    9ca8:	mov	x25, xzr
    9cac:	mov	w22, wzr
    9cb0:	mov	w8, #0x3f38                	// #16184
    9cb4:	str	w8, [x9]
    9cb8:	ldr	w8, [x27, #24]
    9cbc:	tbnz	w8, #10, 9cd0 <inflate@@Base+0xd6c>
    9cc0:	ldr	x8, [x27, #48]
    9cc4:	cbz	x8, 9d7c <inflate@@Base+0xe18>
    9cc8:	str	xzr, [x8, #24]
    9ccc:	b	9d7c <inflate@@Base+0xe18>
    9cd0:	cmp	w22, #0xf
    9cd4:	b.hi	9cfc <inflate@@Base+0xd98>  // b.pmore
    9cd8:	mov	w22, w22
    9cdc:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9ce0:	ldrb	w9, [x23], #1
    9ce4:	sub	w28, w28, #0x1
    9ce8:	cmp	x22, #0x8
    9cec:	lsl	x9, x9, x22
    9cf0:	add	x22, x22, #0x8
    9cf4:	add	x25, x9, x25
    9cf8:	b.cc	9cdc <inflate@@Base+0xd78>  // b.lo, b.ul, b.last
    9cfc:	ldr	x9, [x27, #48]
    9d00:	str	w25, [x27, #92]
    9d04:	cbz	x9, 9d0c <inflate@@Base+0xda8>
    9d08:	str	w25, [x9, #32]
    9d0c:	tbz	w8, #9, 9d18 <inflate@@Base+0xdb4>
    9d10:	ldrb	w8, [x27, #16]
    9d14:	tbnz	w8, #2, 9d24 <inflate@@Base+0xdc0>
    9d18:	mov	x25, xzr
    9d1c:	mov	w22, wzr
    9d20:	b	9d7c <inflate@@Base+0xe18>
    9d24:	ldur	x26, [x29, #-24]
    9d28:	sturh	w25, [x29, #-4]
    9d2c:	mov	x22, x1
    9d30:	sub	x1, x29, #0x4
    9d34:	ldr	x0, [x26]
    9d38:	mov	w2, #0x2                   	// #2
    9d3c:	mov	w24, w20
    9d40:	mov	w20, w3
    9d44:	mov	w21, w4
    9d48:	mov	w25, w6
    9d4c:	bl	2390 <crc32@plt>
    9d50:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9d54:	mov	w6, w25
    9d58:	add	x5, x5, #0xf8
    9d5c:	mov	w4, w21
    9d60:	mov	w3, w20
    9d64:	mov	w20, w24
    9d68:	mov	x1, x22
    9d6c:	mov	x25, xzr
    9d70:	mov	w22, wzr
    9d74:	str	x0, [x26]
    9d78:	mov	w0, #0xffffc0cc            	// #-16180
    9d7c:	ldur	x9, [x29, #-16]
    9d80:	mov	w8, #0x3f39                	// #16185
    9d84:	str	w8, [x9]
    9d88:	ldr	w9, [x27, #24]
    9d8c:	tbz	w9, #10, 9e6c <inflate@@Base+0xf08>
    9d90:	ldr	w8, [x27, #92]
    9d94:	cmp	w8, w28
    9d98:	csel	w26, w28, w8, hi  // hi = pmore
    9d9c:	cbz	w26, 9e68 <inflate@@Base+0xf04>
    9da0:	ldr	x10, [x27, #48]
    9da4:	cbz	x10, 9e04 <inflate@@Base+0xea0>
    9da8:	ldr	x11, [x10, #24]
    9dac:	cbz	x11, 9e04 <inflate@@Base+0xea0>
    9db0:	ldp	w9, w10, [x10, #32]
    9db4:	mov	x24, x1
    9db8:	mov	x1, x23
    9dbc:	stur	w4, [x29, #-28]
    9dc0:	sub	w8, w9, w8
    9dc4:	add	w9, w8, w26
    9dc8:	add	x0, x11, x8
    9dcc:	sub	w8, w10, w8
    9dd0:	cmp	w9, w10
    9dd4:	csel	w2, w8, w26, hi  // hi = pmore
    9dd8:	stur	w6, [x29, #-40]
    9ddc:	mov	w21, w3
    9de0:	bl	2310 <memcpy@plt>
    9de4:	ldur	w6, [x29, #-40]
    9de8:	ldur	w4, [x29, #-28]
    9dec:	ldr	w9, [x27, #24]
    9df0:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9df4:	add	x5, x5, #0xf8
    9df8:	mov	w0, #0xffffc0cc            	// #-16180
    9dfc:	mov	w3, w21
    9e00:	mov	x1, x24
    9e04:	tbz	w9, #9, 9e54 <inflate@@Base+0xef0>
    9e08:	ldrb	w8, [x27, #16]
    9e0c:	tbz	w8, #2, 9e54 <inflate@@Base+0xef0>
    9e10:	ldur	x24, [x29, #-24]
    9e14:	str	x1, [sp, #16]
    9e18:	mov	x1, x23
    9e1c:	mov	w2, w26
    9e20:	ldr	x0, [x24]
    9e24:	stur	w6, [x29, #-40]
    9e28:	stur	w4, [x29, #-28]
    9e2c:	mov	w21, w3
    9e30:	bl	2390 <crc32@plt>
    9e34:	ldr	x1, [sp, #16]
    9e38:	ldur	w4, [x29, #-28]
    9e3c:	ldur	w6, [x29, #-40]
    9e40:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9e44:	add	x5, x5, #0xf8
    9e48:	mov	w3, w21
    9e4c:	str	x0, [x24]
    9e50:	mov	w0, #0xffffc0cc            	// #-16180
    9e54:	ldr	w8, [x27, #92]
    9e58:	sub	w28, w28, w26
    9e5c:	add	x23, x23, w26, uxtw
    9e60:	sub	w8, w8, w26
    9e64:	str	w8, [x27, #92]
    9e68:	cbnz	w8, a854 <inflate@@Base+0x18f0>
    9e6c:	mov	w8, #0x3f3a                	// #16186
    9e70:	str	wzr, [x27, #92]
    9e74:	str	w8, [x27, #8]
    9e78:	ldrb	w8, [x27, #25]
    9e7c:	tbnz	w8, #3, 9e90 <inflate@@Base+0xf2c>
    9e80:	ldr	x8, [x27, #48]
    9e84:	cbz	x8, 9f38 <inflate@@Base+0xfd4>
    9e88:	str	xzr, [x8, #40]
    9e8c:	b	9f38 <inflate@@Base+0xfd4>
    9e90:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9e94:	mov	x26, xzr
    9e98:	mov	w21, w28
    9e9c:	stp	w6, w3, [x29, #-40]
    9ea0:	stur	w4, [x29, #-28]
    9ea4:	ldr	x9, [x27, #48]
    9ea8:	ldrb	w24, [x23, x26]
    9eac:	add	x26, x26, #0x1
    9eb0:	cbz	x9, 9ed8 <inflate@@Base+0xf74>
    9eb4:	ldr	x8, [x9, #40]
    9eb8:	cbz	x8, 9ed8 <inflate@@Base+0xf74>
    9ebc:	ldr	w10, [x27, #92]
    9ec0:	ldr	w9, [x9, #48]
    9ec4:	cmp	w10, w9
    9ec8:	b.cs	9ed8 <inflate@@Base+0xf74>  // b.hs, b.nlast
    9ecc:	add	w9, w10, #0x1
    9ed0:	str	w9, [x27, #92]
    9ed4:	strb	w24, [x8, x10]
    9ed8:	cbz	w24, 9ee4 <inflate@@Base+0xf80>
    9edc:	cmp	x26, x21
    9ee0:	b.cc	9ea4 <inflate@@Base+0xf40>  // b.lo, b.ul, b.last
    9ee4:	ldrb	w8, [x27, #25]
    9ee8:	tbz	w8, #1, 9f24 <inflate@@Base+0xfc0>
    9eec:	ldrb	w8, [x27, #16]
    9ef0:	tbz	w8, #2, 9f24 <inflate@@Base+0xfc0>
    9ef4:	ldur	x8, [x29, #-24]
    9ef8:	str	x1, [sp, #16]
    9efc:	mov	x1, x23
    9f00:	mov	w2, w26
    9f04:	ldr	x0, [x8]
    9f08:	bl	2390 <crc32@plt>
    9f0c:	ldur	x8, [x29, #-24]
    9f10:	ldr	x1, [sp, #16]
    9f14:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9f18:	add	x5, x5, #0xf8
    9f1c:	str	x0, [x8]
    9f20:	mov	w0, #0xffffc0cc            	// #-16180
    9f24:	add	x23, x23, x26
    9f28:	cbnz	w24, aab8 <inflate@@Base+0x1b54>
    9f2c:	ldp	w6, w3, [x29, #-40]
    9f30:	ldur	w4, [x29, #-28]
    9f34:	sub	x28, x21, x26
    9f38:	mov	w8, #0x3f3b                	// #16187
    9f3c:	str	wzr, [x27, #92]
    9f40:	str	w8, [x27, #8]
    9f44:	ldrb	w8, [x27, #25]
    9f48:	tbnz	w8, #4, 9f5c <inflate@@Base+0xff8>
    9f4c:	ldr	x8, [x27, #48]
    9f50:	cbz	x8, a004 <inflate@@Base+0x10a0>
    9f54:	str	xzr, [x8, #56]
    9f58:	b	a004 <inflate@@Base+0x10a0>
    9f5c:	cbz	w28, a854 <inflate@@Base+0x18f0>
    9f60:	mov	x26, xzr
    9f64:	mov	w21, w28
    9f68:	stp	w6, w3, [x29, #-40]
    9f6c:	stur	w4, [x29, #-28]
    9f70:	ldr	x9, [x27, #48]
    9f74:	ldrb	w24, [x23, x26]
    9f78:	add	x26, x26, #0x1
    9f7c:	cbz	x9, 9fa4 <inflate@@Base+0x1040>
    9f80:	ldr	x8, [x9, #56]
    9f84:	cbz	x8, 9fa4 <inflate@@Base+0x1040>
    9f88:	ldr	w10, [x27, #92]
    9f8c:	ldr	w9, [x9, #64]
    9f90:	cmp	w10, w9
    9f94:	b.cs	9fa4 <inflate@@Base+0x1040>  // b.hs, b.nlast
    9f98:	add	w9, w10, #0x1
    9f9c:	str	w9, [x27, #92]
    9fa0:	strb	w24, [x8, x10]
    9fa4:	cbz	w24, 9fb0 <inflate@@Base+0x104c>
    9fa8:	cmp	x26, x21
    9fac:	b.cc	9f70 <inflate@@Base+0x100c>  // b.lo, b.ul, b.last
    9fb0:	ldrb	w8, [x27, #25]
    9fb4:	tbz	w8, #1, 9ff0 <inflate@@Base+0x108c>
    9fb8:	ldrb	w8, [x27, #16]
    9fbc:	tbz	w8, #2, 9ff0 <inflate@@Base+0x108c>
    9fc0:	ldur	x8, [x29, #-24]
    9fc4:	str	x1, [sp, #16]
    9fc8:	mov	x1, x23
    9fcc:	mov	w2, w26
    9fd0:	ldr	x0, [x8]
    9fd4:	bl	2390 <crc32@plt>
    9fd8:	ldur	x8, [x29, #-24]
    9fdc:	ldr	x1, [sp, #16]
    9fe0:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    9fe4:	add	x5, x5, #0xf8
    9fe8:	str	x0, [x8]
    9fec:	mov	w0, #0xffffc0cc            	// #-16180
    9ff0:	add	x23, x23, x26
    9ff4:	cbnz	w24, aab8 <inflate@@Base+0x1b54>
    9ff8:	ldp	w6, w3, [x29, #-40]
    9ffc:	ldur	w4, [x29, #-28]
    a000:	sub	x28, x21, x26
    a004:	ldur	x9, [x29, #-16]
    a008:	mov	w8, #0x3f3c                	// #16188
    a00c:	str	w8, [x9]
    a010:	ldr	w8, [x27, #24]
    a014:	tbz	w8, #9, a068 <inflate@@Base+0x1104>
    a018:	cmp	w22, #0xf
    a01c:	b.hi	a048 <inflate@@Base+0x10e4>  // b.pmore
    a020:	mov	w9, w22
    a024:	cbz	w28, a848 <inflate@@Base+0x18e4>
    a028:	ldrb	w10, [x23], #1
    a02c:	add	x22, x9, #0x8
    a030:	sub	w28, w28, #0x1
    a034:	cmp	x9, #0x8
    a038:	lsl	x10, x10, x9
    a03c:	add	x25, x10, x25
    a040:	mov	x9, x22
    a044:	b.cc	a024 <inflate@@Base+0x10c0>  // b.lo, b.ul, b.last
    a048:	ldrb	w9, [x27, #16]
    a04c:	tbz	w9, #2, a060 <inflate@@Base+0x10fc>
    a050:	ldur	x9, [x29, #-24]
    a054:	ldrh	w9, [x9]
    a058:	cmp	x25, x9
    a05c:	b.ne	a094 <inflate@@Base+0x1130>  // b.any
    a060:	mov	x25, xzr
    a064:	mov	w22, wzr
    a068:	stur	w20, [x29, #-28]
    a06c:	ldr	x9, [x27, #48]
    a070:	mov	w20, w6
    a074:	mov	w21, w4
    a078:	mov	w24, w3
    a07c:	mov	x26, x1
    a080:	cbz	x9, 9068 <inflate@@Base+0x104>
    a084:	ubfx	w8, w8, #9, #1
    a088:	mov	w10, #0x1                   	// #1
    a08c:	stp	w8, w10, [x9, #68]
    a090:	b	9068 <inflate@@Base+0x104>
    a094:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a098:	add	x8, x8, #0xa43
    a09c:	b	a71c <inflate@@Base+0x17b8>
    a0a0:	bl	24a0 <adler32@plt>
    a0a4:	str	x0, [x27, #32]
    a0a8:	str	x0, [x19, #96]
    a0ac:	ldr	w8, [x27, #16]
    a0b0:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a0b4:	mov	x1, x26
    a0b8:	mov	w3, w24
    a0bc:	and	w8, w8, #0x4
    a0c0:	mov	w0, #0xffffc0cc            	// #-16180
    a0c4:	add	x5, x5, #0xf8
    a0c8:	mov	w6, w21
    a0cc:	cbz	w8, a10c <inflate@@Base+0x11a8>
    a0d0:	ldr	w9, [x27, #24]
    a0d4:	mov	x8, x25
    a0d8:	cbnz	w9, a0fc <inflate@@Base+0x1198>
    a0dc:	lsr	x8, x25, #8
    a0e0:	lsl	w9, w25, #8
    a0e4:	and	x8, x8, #0xff00
    a0e8:	and	x9, x9, #0xff0000
    a0ec:	bfxil	x8, x25, #24, #8
    a0f0:	orr	x8, x8, x9
    a0f4:	lsl	w9, w25, #24
    a0f8:	orr	x8, x8, x9
    a0fc:	ldur	x9, [x29, #-24]
    a100:	ldr	x9, [x9]
    a104:	cmp	x8, x9
    a108:	b.ne	a17c <inflate@@Base+0x1218>  // b.any
    a10c:	mov	x25, xzr
    a110:	mov	w22, wzr
    a114:	mov	w4, w3
    a118:	ldur	x9, [x29, #-16]
    a11c:	mov	w8, #0x3f4f                	// #16207
    a120:	str	w8, [x9]
    a124:	ldr	w8, [x27, #16]
    a128:	cbz	w8, ab00 <inflate@@Base+0x1b9c>
    a12c:	ldr	w8, [x27, #24]
    a130:	cbz	w8, ab00 <inflate@@Base+0x1b9c>
    a134:	cmp	w22, #0x1f
    a138:	b.hi	a164 <inflate@@Base+0x1200>  // b.pmore
    a13c:	mov	w8, w22
    a140:	cbz	w28, a850 <inflate@@Base+0x18ec>
    a144:	ldrb	w9, [x23], #1
    a148:	add	x22, x8, #0x8
    a14c:	sub	w28, w28, #0x1
    a150:	cmp	x8, #0x18
    a154:	lsl	x9, x9, x8
    a158:	add	x25, x9, x25
    a15c:	mov	x8, x22
    a160:	b.cc	a140 <inflate@@Base+0x11dc>  // b.lo, b.ul, b.last
    a164:	ldr	w8, [x27, #40]
    a168:	cmp	x25, x8
    a16c:	b.eq	aaf8 <inflate@@Base+0x1b94>  // b.none
    a170:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a174:	add	x8, x8, #0xa6c
    a178:	b	a71c <inflate@@Base+0x17b8>
    a17c:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a180:	add	x8, x8, #0xa57
    a184:	str	x8, [x19, #48]
    a188:	ldur	x8, [x29, #-16]
    a18c:	mov	w9, #0x3f51                	// #16209
    a190:	mov	w4, w3
    a194:	b	a728 <inflate@@Base+0x17c4>
    a198:	ldur	x9, [x29, #-16]
    a19c:	ldur	w3, [x29, #-36]
    a1a0:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a1a4:	mov	w8, #0x3f47                	// #16199
    a1a8:	cmp	w20, #0x6
    a1ac:	mov	x1, x26
    a1b0:	mov	w4, w24
    a1b4:	mov	w0, #0xffffc0cc            	// #-16180
    a1b8:	add	x5, x5, #0xf8
    a1bc:	str	w8, [x9]
    a1c0:	b.eq	a854 <inflate@@Base+0x18f0>  // b.none
    a1c4:	ldur	x9, [x29, #-16]
    a1c8:	mov	w8, #0x3f48                	// #16200
    a1cc:	str	w8, [x9]
    a1d0:	cmp	w3, #0x102
    a1d4:	b.cc	a254 <inflate@@Base+0x12f0>  // b.lo, b.ul, b.last
    a1d8:	cmp	w28, #0x6
    a1dc:	b.cc	a254 <inflate@@Base+0x12f0>  // b.lo, b.ul, b.last
    a1e0:	str	x1, [x19, #24]
    a1e4:	mov	x0, x19
    a1e8:	mov	w1, w4
    a1ec:	mov	w21, w6
    a1f0:	str	w3, [x19, #32]
    a1f4:	str	x23, [x19]
    a1f8:	str	w28, [x19, #8]
    a1fc:	str	x25, [x27, #80]
    a200:	str	w22, [x27, #88]
    a204:	mov	w24, w4
    a208:	bl	8320 <inflateBackEnd@@ZLIB_1.2.0+0x50>
    a20c:	ldr	w8, [x27, #8]
    a210:	ldr	x1, [x19, #24]
    a214:	ldr	w3, [x19, #32]
    a218:	ldr	x23, [x19]
    a21c:	ldr	w28, [x19, #8]
    a220:	ldr	x25, [x27, #80]
    a224:	ldr	w22, [x27, #88]
    a228:	mov	w9, #0x3f3f                	// #16191
    a22c:	cmp	w8, w9
    a230:	b.ne	a23c <inflate@@Base+0x12d8>  // b.any
    a234:	mov	w8, #0xffffffff            	// #-1
    a238:	str	w8, [x27, #7148]
    a23c:	mov	w4, w24
    a240:	adrp	x5, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a244:	mov	w0, #0xffffc0cc            	// #-16180
    a248:	add	x5, x5, #0xf8
    a24c:	mov	w6, w21
    a250:	b	90ac <inflate@@Base+0x148>
    a254:	ldr	w8, [x27, #120]
    a258:	ldr	x9, [x27, #104]
    a25c:	mov	w10, #0xffffffff            	// #-1
    a260:	str	wzr, [x27, #7148]
    a264:	lsl	w10, w10, w8
    a268:	bic	w13, w25, w10
    a26c:	add	x8, x9, w13, uxtw #2
    a270:	ldrb	w8, [x8, #1]
    a274:	cmp	w22, w8
    a278:	b.cs	a2c8 <inflate@@Base+0x1364>  // b.hs, b.nlast
    a27c:	mvn	w13, w10
    a280:	mov	w10, w22
    a284:	mov	w11, w28
    a288:	mov	x12, x23
    a28c:	cbz	w11, a834 <inflate@@Base+0x18d0>
    a290:	ldrb	w8, [x12], #1
    a294:	sub	w11, w11, #0x1
    a298:	lsl	x8, x8, x10
    a29c:	add	x25, x8, x25
    a2a0:	and	w14, w13, w25
    a2a4:	add	x8, x9, w14, uxtw #2
    a2a8:	ldrb	w8, [x8, #1]
    a2ac:	add	x10, x10, #0x8
    a2b0:	cmp	x10, x8
    a2b4:	b.cc	a28c <inflate@@Base+0x1328>  // b.lo, b.ul, b.last
    a2b8:	mov	w13, w14
    a2bc:	mov	x23, x12
    a2c0:	mov	w28, w11
    a2c4:	mov	w22, w10
    a2c8:	add	x11, x9, x13, lsl #2
    a2cc:	ldrb	w12, [x11]
    a2d0:	ldrh	w11, [x11, #2]
    a2d4:	mov	w10, w8
    a2d8:	cbz	w12, a388 <inflate@@Base+0x1424>
    a2dc:	and	w13, w12, #0xf0
    a2e0:	cbnz	w13, a388 <inflate@@Base+0x1424>
    a2e4:	add	w12, w10, w12
    a2e8:	mov	w13, #0xffffffff            	// #-1
    a2ec:	lsl	w12, w13, w12
    a2f0:	bic	w13, w25, w12
    a2f4:	lsr	w13, w13, w10
    a2f8:	add	w15, w13, w11
    a2fc:	add	x13, x9, w15, uxtw #2
    a300:	ldrb	w13, [x13, #1]
    a304:	add	w14, w10, w13
    a308:	cmp	w14, w22
    a30c:	b.ls	a368 <inflate@@Base+0x1404>  // b.plast
    a310:	mvn	w15, w12
    a314:	mov	w12, w22
    a318:	mov	w14, w28
    a31c:	mov	x16, x23
    a320:	cbz	w14, a834 <inflate@@Base+0x18d0>
    a324:	ldrb	w13, [x16], #1
    a328:	sub	w14, w14, #0x1
    a32c:	lsl	x13, x13, x12
    a330:	add	x25, x13, x25
    a334:	and	w13, w25, w15
    a338:	lsr	w13, w13, w10
    a33c:	add	w17, w13, w11
    a340:	add	x13, x9, w17, uxtw #2
    a344:	ldrb	w13, [x13, #1]
    a348:	add	x12, x12, #0x8
    a34c:	add	x18, x10, x13
    a350:	cmp	x12, x18
    a354:	b.cc	a320 <inflate@@Base+0x13bc>  // b.lo, b.ul, b.last
    a358:	mov	w15, w17
    a35c:	mov	x23, x16
    a360:	mov	w28, w14
    a364:	mov	w22, w12
    a368:	add	x9, x9, x15, lsl #2
    a36c:	ldrh	w11, [x9, #2]
    a370:	ldrb	w12, [x9]
    a374:	lsr	x25, x25, x8
    a378:	sub	w22, w22, w10
    a37c:	mov	w8, w13
    a380:	str	w10, [x27, #7148]
    a384:	b	a38c <inflate@@Base+0x1428>
    a388:	mov	w10, wzr
    a38c:	lsr	x25, x25, x8
    a390:	sub	w22, w22, w8
    a394:	add	w8, w10, w8
    a398:	str	w8, [x27, #7148]
    a39c:	str	w11, [x27, #92]
    a3a0:	cbz	w12, a6f0 <inflate@@Base+0x178c>
    a3a4:	tbnz	w12, #5, a700 <inflate@@Base+0x179c>
    a3a8:	tbnz	w12, #6, a714 <inflate@@Base+0x17b0>
    a3ac:	and	w8, w12, #0xf
    a3b0:	mov	w9, #0x3f49                	// #16201
    a3b4:	str	w8, [x27, #100]
    a3b8:	str	w9, [x27, #8]
    a3bc:	cbnz	w8, 95d8 <inflate@@Base+0x674>
    a3c0:	ldr	w11, [x27, #92]
    a3c4:	mov	w8, #0x3f4a                	// #16202
    a3c8:	str	w11, [x27, #7152]
    a3cc:	str	w8, [x27, #8]
    a3d0:	ldr	w8, [x27, #124]
    a3d4:	ldr	x9, [x27, #112]
    a3d8:	mov	w10, #0xffffffff            	// #-1
    a3dc:	lsl	w10, w10, w8
    a3e0:	bic	w13, w25, w10
    a3e4:	add	x8, x9, w13, uxtw #2
    a3e8:	ldrb	w8, [x8, #1]
    a3ec:	cmp	w22, w8
    a3f0:	b.cs	a440 <inflate@@Base+0x14dc>  // b.hs, b.nlast
    a3f4:	mvn	w13, w10
    a3f8:	mov	w10, w22
    a3fc:	mov	w11, w28
    a400:	mov	x12, x23
    a404:	cbz	w11, a834 <inflate@@Base+0x18d0>
    a408:	ldrb	w8, [x12], #1
    a40c:	sub	w11, w11, #0x1
    a410:	lsl	x8, x8, x10
    a414:	add	x25, x8, x25
    a418:	and	w14, w13, w25
    a41c:	add	x8, x9, w14, uxtw #2
    a420:	ldrb	w8, [x8, #1]
    a424:	add	x10, x10, #0x8
    a428:	cmp	x10, x8
    a42c:	b.cc	a404 <inflate@@Base+0x14a0>  // b.lo, b.ul, b.last
    a430:	mov	w13, w14
    a434:	mov	x23, x12
    a438:	mov	w28, w11
    a43c:	mov	w22, w10
    a440:	add	x10, x9, x13, lsl #2
    a444:	ldrb	w12, [x10]
    a448:	ldrh	w10, [x10, #2]
    a44c:	tst	w12, #0xf0
    a450:	b.eq	a45c <inflate@@Base+0x14f8>  // b.none
    a454:	ldr	w9, [x27, #7148]
    a458:	b	a504 <inflate@@Base+0x15a0>
    a45c:	add	w11, w8, w12
    a460:	mov	w12, #0xffffffff            	// #-1
    a464:	lsl	w12, w12, w11
    a468:	bic	w11, w25, w12
    a46c:	lsr	w11, w11, w8
    a470:	add	w14, w11, w10
    a474:	add	x11, x9, w14, uxtw #2
    a478:	ldrb	w11, [x11, #1]
    a47c:	add	w13, w8, w11
    a480:	cmp	w13, w22
    a484:	b.ls	a4e0 <inflate@@Base+0x157c>  // b.plast
    a488:	mvn	w14, w12
    a48c:	mov	w12, w22
    a490:	mov	w13, w28
    a494:	mov	x15, x23
    a498:	cbz	w13, a834 <inflate@@Base+0x18d0>
    a49c:	ldrb	w11, [x15], #1
    a4a0:	sub	w13, w13, #0x1
    a4a4:	lsl	x11, x11, x12
    a4a8:	add	x25, x11, x25
    a4ac:	and	w11, w25, w14
    a4b0:	lsr	w11, w11, w8
    a4b4:	add	w16, w11, w10
    a4b8:	add	x11, x9, w16, uxtw #2
    a4bc:	ldrb	w11, [x11, #1]
    a4c0:	add	x12, x12, #0x8
    a4c4:	add	x17, x8, x11
    a4c8:	cmp	x12, x17
    a4cc:	b.cc	a498 <inflate@@Base+0x1534>  // b.lo, b.ul, b.last
    a4d0:	mov	w14, w16
    a4d4:	mov	x23, x15
    a4d8:	mov	w28, w13
    a4dc:	mov	w22, w12
    a4e0:	add	x9, x9, x14, lsl #2
    a4e4:	ldr	w13, [x27, #7148]
    a4e8:	ldrh	w10, [x9, #2]
    a4ec:	ldrb	w12, [x9]
    a4f0:	lsr	x25, x25, x8
    a4f4:	sub	w22, w22, w8
    a4f8:	add	w9, w13, w8
    a4fc:	mov	w8, w11
    a500:	str	w9, [x27, #7148]
    a504:	lsr	x25, x25, x8
    a508:	sub	w22, w22, w8
    a50c:	add	w8, w9, w8
    a510:	str	w8, [x27, #7148]
    a514:	tbnz	w12, #6, a564 <inflate@@Base+0x1600>
    a518:	and	w8, w12, #0xf
    a51c:	mov	w9, #0x3f4b                	// #16203
    a520:	stp	w10, w8, [x27, #96]
    a524:	str	w9, [x27, #8]
    a528:	cbz	w8, a5b0 <inflate@@Base+0x164c>
    a52c:	cmp	w22, w8
    a530:	b.cs	a570 <inflate@@Base+0x160c>  // b.hs, b.nlast
    a534:	mov	w11, w22
    a538:	mov	w9, w28
    a53c:	mov	x10, x23
    a540:	cbz	w9, a834 <inflate@@Base+0x18d0>
    a544:	ldrb	w12, [x10], #1
    a548:	sub	w9, w9, #0x1
    a54c:	lsl	x12, x12, x11
    a550:	add	w11, w11, #0x8
    a554:	cmp	w11, w8
    a558:	add	x25, x12, x25
    a55c:	b.cc	a540 <inflate@@Base+0x15dc>  // b.lo, b.ul, b.last
    a560:	b	a57c <inflate@@Base+0x1618>
    a564:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a568:	add	x8, x8, #0xb2
    a56c:	b	a71c <inflate@@Base+0x17b8>
    a570:	mov	x10, x23
    a574:	mov	w9, w28
    a578:	mov	w11, w22
    a57c:	ldr	w13, [x27, #96]
    a580:	sub	w22, w11, w8
    a584:	ldr	w11, [x27, #7148]
    a588:	mov	w12, #0xffffffff            	// #-1
    a58c:	lsl	w12, w12, w8
    a590:	bic	w12, w25, w12
    a594:	lsr	x25, x25, x8
    a598:	add	w12, w13, w12
    a59c:	add	w8, w11, w8
    a5a0:	mov	x23, x10
    a5a4:	mov	w28, w9
    a5a8:	str	w12, [x27, #96]
    a5ac:	str	w8, [x27, #7148]
    a5b0:	ldur	x9, [x29, #-16]
    a5b4:	mov	w8, #0x3f4c                	// #16204
    a5b8:	str	w8, [x9]
    a5bc:	cbz	w3, a854 <inflate@@Base+0x18f0>
    a5c0:	ldr	w8, [x27, #96]
    a5c4:	sub	w9, w4, w3
    a5c8:	cmp	w8, w9
    a5cc:	b.ls	a5f4 <inflate@@Base+0x1690>  // b.plast
    a5d0:	ldr	w10, [x27, #64]
    a5d4:	sub	w9, w8, w9
    a5d8:	cmp	w9, w10
    a5dc:	b.ls	a604 <inflate@@Base+0x16a0>  // b.plast
    a5e0:	ldr	w8, [x27, #7144]
    a5e4:	cbz	w8, a604 <inflate@@Base+0x16a0>
    a5e8:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a5ec:	add	x8, x8, #0xc8
    a5f0:	b	a71c <inflate@@Base+0x17b8>
    a5f4:	ldr	w9, [x27, #92]
    a5f8:	sub	x11, x1, x8
    a5fc:	mov	w8, w9
    a600:	b	a638 <inflate@@Base+0x16d4>
    a604:	ldr	w10, [x27, #68]
    a608:	subs	w8, w9, w10
    a60c:	b.ls	a61c <inflate@@Base+0x16b8>  // b.plast
    a610:	ldr	w9, [x27, #60]
    a614:	sub	w10, w9, w8
    a618:	b	a624 <inflate@@Base+0x16c0>
    a61c:	sub	w10, w10, w9
    a620:	mov	w8, w9
    a624:	ldr	w9, [x27, #92]
    a628:	ldr	x11, [x27, #72]
    a62c:	cmp	w8, w9
    a630:	add	x11, x11, w10, uxtw
    a634:	csel	w8, w9, w8, hi  // hi = pmore
    a638:	cmp	w8, w3
    a63c:	csel	w8, w3, w8, hi  // hi = pmore
    a640:	sub	w10, w9, w8
    a644:	sub	w9, w8, #0x1
    a648:	cmp	w9, #0x1f
    a64c:	str	w10, [x27, #92]
    a650:	b.cc	a674 <inflate@@Base+0x1710>  // b.lo, b.ul, b.last
    a654:	add	x10, x11, x9
    a658:	add	x10, x10, #0x1
    a65c:	cmp	x1, x10
    a660:	b.cs	a6ac <inflate@@Base+0x1748>  // b.hs, b.nlast
    a664:	add	x10, x1, x9
    a668:	add	x10, x10, #0x1
    a66c:	cmp	x11, x10
    a670:	b.cs	a6ac <inflate@@Base+0x1748>  // b.hs, b.nlast
    a674:	mov	x9, x1
    a678:	mov	w10, w8
    a67c:	ldrb	w12, [x11], #1
    a680:	subs	w10, w10, #0x1
    a684:	strb	w12, [x9], #1
    a688:	b.ne	a67c <inflate@@Base+0x1718>  // b.any
    a68c:	ldr	w10, [x27, #92]
    a690:	sub	w3, w3, w8
    a694:	cbnz	w10, a6a4 <inflate@@Base+0x1740>
    a698:	ldur	x10, [x29, #-16]
    a69c:	mov	w8, #0x3f48                	// #16200
    a6a0:	str	w8, [x10]
    a6a4:	mov	x1, x9
    a6a8:	b	90ac <inflate@@Base+0x148>
    a6ac:	add	x12, x9, #0x1
    a6b0:	and	x13, x12, #0x1ffffffe0
    a6b4:	add	x14, x11, #0x10
    a6b8:	add	x9, x1, x13
    a6bc:	sub	w10, w8, w13
    a6c0:	add	x11, x11, x13
    a6c4:	add	x15, x1, #0x10
    a6c8:	mov	x16, x13
    a6cc:	ldp	q0, q1, [x14, #-16]
    a6d0:	add	x14, x14, #0x20
    a6d4:	subs	x16, x16, #0x20
    a6d8:	stp	q0, q1, [x15, #-16]
    a6dc:	add	x15, x15, #0x20
    a6e0:	b.ne	a6cc <inflate@@Base+0x1768>  // b.any
    a6e4:	cmp	x12, x13
    a6e8:	b.ne	a67c <inflate@@Base+0x1718>  // b.any
    a6ec:	b	a68c <inflate@@Base+0x1728>
    a6f0:	mov	w8, #0x3f4d                	// #16205
    a6f4:	ldur	x9, [x29, #-16]
    a6f8:	str	w8, [x9]
    a6fc:	b	90ac <inflate@@Base+0x148>
    a700:	mov	w8, #0xffffffff            	// #-1
    a704:	mov	w9, #0x3f3f                	// #16191
    a708:	str	w8, [x27, #7148]
    a70c:	str	w9, [x27, #8]
    a710:	b	90ac <inflate@@Base+0x148>
    a714:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a718:	add	x8, x8, #0x96
    a71c:	mov	w9, #0x3f51                	// #16209
    a720:	str	x8, [x19, #48]
    a724:	ldur	x8, [x29, #-16]
    a728:	str	w9, [x8]
    a72c:	b	90ac <inflate@@Base+0x148>
    a730:	ldur	x11, [x29, #-16]
    a734:	and	x8, x25, #0xf
    a738:	mov	w24, w6
    a73c:	mov	w26, w3
    a740:	cmp	x8, #0x8
    a744:	stur	w4, [x29, #-28]
    a748:	str	x1, [sp, #16]
    a74c:	b.ne	a7bc <inflate@@Base+0x1858>  // b.any
    a750:	ldr	w10, [x27, #56]
    a754:	ubfx	x8, x25, #4, #4
    a758:	add	w9, w8, #0x8
    a75c:	cbnz	w10, a768 <inflate@@Base+0x1804>
    a760:	mov	w10, w9
    a764:	str	w9, [x27, #56]
    a768:	cmp	w8, #0x7
    a76c:	b.hi	a7d4 <inflate@@Base+0x1870>  // b.pmore
    a770:	cmp	w9, w10
    a774:	b.hi	a7d4 <inflate@@Base+0x1870>  // b.pmore
    a778:	mov	w9, #0x100                 	// #256
    a77c:	lsl	w8, w9, w8
    a780:	mov	x0, xzr
    a784:	mov	x1, xzr
    a788:	mov	w2, wzr
    a78c:	str	w8, [x27, #28]
    a790:	bl	24a0 <adler32@plt>
    a794:	tst	x25, #0x2000
    a798:	mov	w8, #0x3f3d                	// #16189
    a79c:	mov	w9, #0x3f3f                	// #16191
    a7a0:	csel	w8, w9, w8, eq  // eq = none
    a7a4:	mov	w22, wzr
    a7a8:	str	x0, [x27, #32]
    a7ac:	str	x0, [x19, #96]
    a7b0:	str	w8, [x27, #8]
    a7b4:	mov	x25, xzr
    a7b8:	b	a7f4 <inflate@@Base+0x1890>
    a7bc:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a7c0:	add	x8, x8, #0x9fb
    a7c4:	b	a7e4 <inflate@@Base+0x1880>
    a7c8:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a7cc:	add	x8, x8, #0x25
    a7d0:	b	a71c <inflate@@Base+0x17b8>
    a7d4:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    a7d8:	lsr	x25, x25, #4
    a7dc:	sub	w22, w22, #0x4
    a7e0:	add	x8, x8, #0xa16
    a7e4:	mov	w9, #0x3f51                	// #16209
    a7e8:	str	x8, [x19, #48]
    a7ec:	mov	x21, x11
    a7f0:	str	w9, [x11]
    a7f4:	ldr	x1, [sp, #16]
    a7f8:	ldur	w4, [x29, #-28]
    a7fc:	mov	w3, w26
    a800:	mov	w6, w24
    a804:	b	9ad8 <inflate@@Base+0xb74>
    a808:	ldr	w9, [x19, #8]
    a80c:	cbz	w9, 8fe0 <inflate@@Base+0x7c>
    a810:	mov	w0, #0xfffffffe            	// #-2
    a814:	ldp	x20, x19, [sp, #192]
    a818:	ldp	x22, x21, [sp, #176]
    a81c:	ldp	x24, x23, [sp, #160]
    a820:	ldp	x26, x25, [sp, #144]
    a824:	ldp	x28, x27, [sp, #128]
    a828:	ldp	x29, x30, [sp, #112]
    a82c:	add	sp, sp, #0xd0
    a830:	ret
    a834:	add	w22, w22, w28, lsl #3
    a838:	add	x23, x23, w28, uxtw
    a83c:	mov	w26, w6
    a840:	mov	w28, wzr
    a844:	b	a858 <inflate@@Base+0x18f4>
    a848:	mov	w22, w9
    a84c:	b	a854 <inflate@@Base+0x18f0>
    a850:	mov	w22, w8
    a854:	mov	w26, w6
    a858:	str	x1, [x19, #24]
    a85c:	str	w3, [x19, #32]
    a860:	str	x23, [x19]
    a864:	str	w28, [x19, #8]
    a868:	ldr	w8, [x27, #60]
    a86c:	str	x25, [x27, #80]
    a870:	str	w22, [x27, #88]
    a874:	cbz	w8, a940 <inflate@@Base+0x19dc>
    a878:	ldr	x22, [x19, #56]
    a87c:	ldr	x0, [x22, #72]
    a880:	cbnz	x0, a8c8 <inflate@@Base+0x1964>
    a884:	ldr	w9, [x22, #56]
    a888:	ldr	x8, [x19, #64]
    a88c:	ldr	x0, [x19, #80]
    a890:	mov	w10, #0x1                   	// #1
    a894:	mov	x23, x1
    a898:	lsl	w1, w10, w9
    a89c:	mov	w2, #0x1                   	// #1
    a8a0:	mov	w24, w20
    a8a4:	mov	w20, w3
    a8a8:	mov	w21, w4
    a8ac:	blr	x8
    a8b0:	mov	w4, w21
    a8b4:	mov	w3, w20
    a8b8:	mov	w20, w24
    a8bc:	mov	x1, x23
    a8c0:	str	x0, [x22, #72]
    a8c4:	cbz	x0, aa94 <inflate@@Base+0x1b30>
    a8c8:	ldr	w8, [x22, #60]
    a8cc:	sub	w21, w4, w3
    a8d0:	cbnz	w8, a8e8 <inflate@@Base+0x1984>
    a8d4:	ldr	w8, [x22, #56]
    a8d8:	mov	w9, #0x1                   	// #1
    a8dc:	str	xzr, [x22, #64]
    a8e0:	lsl	w8, w9, w8
    a8e4:	str	w8, [x22, #60]
    a8e8:	cmp	w8, w21
    a8ec:	b.ls	a974 <inflate@@Base+0x1a10>  // b.plast
    a8f0:	ldr	w9, [x22, #68]
    a8f4:	mov	x24, x1
    a8f8:	sub	x1, x1, w21, uxtw
    a8fc:	mov	w25, w4
    a900:	sub	w8, w8, w9
    a904:	cmp	w8, w21
    a908:	csel	w23, w21, w8, hi  // hi = pmore
    a90c:	add	x0, x0, x9
    a910:	mov	x2, x23
    a914:	bl	2310 <memcpy@plt>
    a918:	subs	w21, w21, w23
    a91c:	b.eq	aa68 <inflate@@Base+0x1b04>  // b.none
    a920:	ldr	x0, [x22, #72]
    a924:	mov	w2, w21
    a928:	sub	x1, x24, x2
    a92c:	bl	2310 <memcpy@plt>
    a930:	ldr	w8, [x22, #60]
    a934:	mov	w4, w25
    a938:	stp	w8, w21, [x22, #64]
    a93c:	b	a994 <inflate@@Base+0x1a30>
    a940:	cmp	w4, w3
    a944:	b.eq	a994 <inflate@@Base+0x1a30>  // b.none
    a948:	ldur	x8, [x29, #-16]
    a94c:	mov	w9, #0x3f50                	// #16208
    a950:	ldr	w8, [x8]
    a954:	cmp	w8, w9
    a958:	b.hi	a994 <inflate@@Base+0x1a30>  // b.pmore
    a95c:	cmp	w20, #0x4
    a960:	b.ne	a878 <inflate@@Base+0x1914>  // b.any
    a964:	mov	w9, #0x3f4d                	// #16205
    a968:	cmp	w8, w9
    a96c:	b.hi	a994 <inflate@@Base+0x1a30>  // b.pmore
    a970:	b	a878 <inflate@@Base+0x1914>
    a974:	mov	w2, w8
    a978:	sub	x1, x1, x2
    a97c:	mov	w21, w4
    a980:	bl	2310 <memcpy@plt>
    a984:	ldr	w8, [x22, #60]
    a988:	mov	w4, w21
    a98c:	str	wzr, [x22, #68]
    a990:	str	w8, [x22, #64]
    a994:	ldr	w8, [x19, #8]
    a998:	ldr	w9, [x19, #32]
    a99c:	ldur	w12, [x29, #-32]
    a9a0:	ldr	x10, [x19, #16]
    a9a4:	ldr	x11, [x19, #40]
    a9a8:	subs	w21, w4, w9
    a9ac:	sub	w22, w12, w8
    a9b0:	add	x8, x10, x22
    a9b4:	add	x9, x11, x21
    a9b8:	str	x8, [x19, #16]
    a9bc:	str	x9, [x19, #40]
    a9c0:	ldr	x8, [x27, #40]
    a9c4:	add	x8, x8, x21
    a9c8:	str	x8, [x27, #40]
    a9cc:	b.eq	aa08 <inflate@@Base+0x1aa4>  // b.none
    a9d0:	ldr	w8, [x27, #16]
    a9d4:	tbz	w8, #2, aa08 <inflate@@Base+0x1aa4>
    a9d8:	ldr	x9, [x19, #24]
    a9dc:	ldr	w8, [x27, #24]
    a9e0:	ldr	x0, [x27, #32]
    a9e4:	mov	w2, w21
    a9e8:	sub	x1, x9, x21
    a9ec:	cbz	w8, a9f8 <inflate@@Base+0x1a94>
    a9f0:	bl	2390 <crc32@plt>
    a9f4:	b	a9fc <inflate@@Base+0x1a98>
    a9f8:	bl	24a0 <adler32@plt>
    a9fc:	ldur	x8, [x29, #-24]
    aa00:	str	x0, [x8]
    aa04:	str	x0, [x19, #96]
    aa08:	ldp	w10, w9, [x27, #8]
    aa0c:	ldr	w8, [x27, #88]
    aa10:	mov	w12, #0x3f3f                	// #16191
    aa14:	orr	w11, w21, w22
    aa18:	cmp	w9, #0x0
    aa1c:	cset	w9, ne  // ne = any
    aa20:	cmp	w10, w12
    aa24:	mov	w12, #0x3f42                	// #16194
    aa28:	add	w8, w8, w9, lsl #6
    aa2c:	cset	w9, eq  // eq = none
    aa30:	cmp	w10, w12
    aa34:	mov	w12, #0x3f47                	// #16199
    aa38:	add	w8, w8, w9, lsl #7
    aa3c:	mov	w9, #0x100                 	// #256
    aa40:	ccmp	w10, w12, #0x4, ne  // ne = any
    aa44:	csel	w9, w9, wzr, eq  // eq = none
    aa48:	cmp	w11, #0x0
    aa4c:	add	w8, w8, w9
    aa50:	ccmp	w20, #0x4, #0x4, ne  // ne = any
    aa54:	str	w8, [x19, #88]
    aa58:	ccmp	w26, #0x0, #0x0, eq  // eq = none
    aa5c:	mov	w8, #0xfffffffb            	// #-5
    aa60:	csel	w0, w8, w26, eq  // eq = none
    aa64:	b	a814 <inflate@@Base+0x18b0>
    aa68:	ldp	w8, w9, [x22, #64]
    aa6c:	ldr	w10, [x22, #60]
    aa70:	mov	w4, w25
    aa74:	add	w9, w9, w23
    aa78:	cmp	w9, w10
    aa7c:	csel	w9, wzr, w9, eq  // eq = none
    aa80:	cmp	w8, w10
    aa84:	str	w9, [x22, #68]
    aa88:	b.cs	a994 <inflate@@Base+0x1a30>  // b.hs, b.nlast
    aa8c:	add	w8, w8, w23
    aa90:	b	a990 <inflate@@Base+0x1a2c>
    aa94:	ldur	x9, [x29, #-16]
    aa98:	mov	w8, #0x3f52                	// #16210
    aa9c:	mov	w0, #0xfffffffc            	// #-4
    aaa0:	str	w8, [x9]
    aaa4:	b	a814 <inflate@@Base+0x18b0>
    aaa8:	mov	w26, #0xfffffffd            	// #-3
    aaac:	b	a858 <inflate@@Base+0x18f4>
    aab0:	mov	w0, #0xfffffffc            	// #-4
    aab4:	b	a814 <inflate@@Base+0x18b0>
    aab8:	sub	w28, w28, w26
    aabc:	ldp	w26, w3, [x29, #-40]
    aac0:	ldur	w4, [x29, #-28]
    aac4:	b	a858 <inflate@@Base+0x18f4>
    aac8:	str	x1, [x19, #24]
    aacc:	str	w3, [x19, #32]
    aad0:	str	x23, [x19]
    aad4:	str	w28, [x19, #8]
    aad8:	str	x25, [x27, #80]
    aadc:	str	w22, [x27, #88]
    aae0:	mov	w0, #0x2                   	// #2
    aae4:	b	a814 <inflate@@Base+0x18b0>
    aae8:	ldur	w26, [x29, #-40]
    aaec:	ldur	w4, [x29, #-28]
    aaf0:	mov	w3, w24
    aaf4:	b	a858 <inflate@@Base+0x18f4>
    aaf8:	mov	x25, xzr
    aafc:	mov	w22, wzr
    ab00:	ldur	x9, [x29, #-16]
    ab04:	mov	w8, #0x3f50                	// #16208
    ab08:	mov	w26, #0x1                   	// #1
    ab0c:	str	w8, [x9]
    ab10:	b	a858 <inflate@@Base+0x18f4>
    ab14:	lsr	x25, x25, #3
    ab18:	sub	w22, w22, #0x3
    ab1c:	mov	w26, w6
    ab20:	b	a858 <inflate@@Base+0x18f4>

000000000000ab24 <inflateEnd@@Base>:
    ab24:	stp	x29, x30, [sp, #-32]!
    ab28:	str	x19, [sp, #16]
    ab2c:	mov	x29, sp
    ab30:	cbz	x0, aba8 <inflateEnd@@Base+0x84>
    ab34:	ldr	x8, [x0, #64]
    ab38:	mov	x19, x0
    ab3c:	cbz	x8, aba8 <inflateEnd@@Base+0x84>
    ab40:	ldr	x9, [x19, #72]
    ab44:	cbz	x9, aba8 <inflateEnd@@Base+0x84>
    ab48:	ldr	x1, [x19, #56]
    ab4c:	cbz	x1, aba8 <inflateEnd@@Base+0x84>
    ab50:	ldr	x8, [x1]
    ab54:	cmp	x8, x19
    ab58:	b.ne	aba8 <inflateEnd@@Base+0x84>  // b.any
    ab5c:	ldr	w8, [x1, #8]
    ab60:	mov	w10, #0xffffc0cc            	// #-16180
    ab64:	add	w8, w8, w10
    ab68:	cmp	w8, #0x1f
    ab6c:	b.hi	aba8 <inflateEnd@@Base+0x84>  // b.pmore
    ab70:	ldr	x8, [x1, #72]
    ab74:	cbz	x8, ab8c <inflateEnd@@Base+0x68>
    ab78:	ldr	x0, [x19, #80]
    ab7c:	mov	x1, x8
    ab80:	blr	x9
    ab84:	ldr	x9, [x19, #72]
    ab88:	ldr	x1, [x19, #56]
    ab8c:	ldr	x0, [x19, #80]
    ab90:	blr	x9
    ab94:	mov	w0, wzr
    ab98:	str	xzr, [x19, #56]
    ab9c:	ldr	x19, [sp, #16]
    aba0:	ldp	x29, x30, [sp], #32
    aba4:	ret
    aba8:	mov	w0, #0xfffffffe            	// #-2
    abac:	ldr	x19, [sp, #16]
    abb0:	ldp	x29, x30, [sp], #32
    abb4:	ret

000000000000abb8 <inflateGetDictionary@@ZLIB_1.2.7.1>:
    abb8:	stp	x29, x30, [sp, #-48]!
    abbc:	str	x21, [sp, #16]
    abc0:	stp	x20, x19, [sp, #32]
    abc4:	mov	x29, sp
    abc8:	cbz	x0, ac78 <inflateGetDictionary@@ZLIB_1.2.7.1+0xc0>
    abcc:	ldr	x8, [x0, #64]
    abd0:	cbz	x8, ac78 <inflateGetDictionary@@ZLIB_1.2.7.1+0xc0>
    abd4:	ldr	x8, [x0, #72]
    abd8:	cbz	x8, ac78 <inflateGetDictionary@@ZLIB_1.2.7.1+0xc0>
    abdc:	ldr	x21, [x0, #56]
    abe0:	cbz	x21, ac78 <inflateGetDictionary@@ZLIB_1.2.7.1+0xc0>
    abe4:	ldr	x8, [x21]
    abe8:	cmp	x8, x0
    abec:	b.eq	ac04 <inflateGetDictionary@@ZLIB_1.2.7.1+0x4c>  // b.none
    abf0:	mov	w0, #0xfffffffe            	// #-2
    abf4:	ldp	x20, x19, [sp, #32]
    abf8:	ldr	x21, [sp, #16]
    abfc:	ldp	x29, x30, [sp], #48
    ac00:	ret
    ac04:	ldr	w8, [x21, #8]
    ac08:	mov	w9, #0xffffc0cc            	// #-16180
    ac0c:	add	w8, w8, w9
    ac10:	cmp	w8, #0x1f
    ac14:	b.hi	ac78 <inflateGetDictionary@@ZLIB_1.2.7.1+0xc0>  // b.pmore
    ac18:	mov	x19, x2
    ac1c:	mov	x20, x1
    ac20:	cbz	x1, ac58 <inflateGetDictionary@@ZLIB_1.2.7.1+0xa0>
    ac24:	ldr	w8, [x21, #64]
    ac28:	cbz	w8, ac58 <inflateGetDictionary@@ZLIB_1.2.7.1+0xa0>
    ac2c:	ldr	x9, [x21, #72]
    ac30:	ldr	w10, [x21, #68]
    ac34:	mov	x0, x20
    ac38:	add	x1, x9, x10
    ac3c:	sub	w2, w8, w10
    ac40:	bl	2310 <memcpy@plt>
    ac44:	ldp	w8, w2, [x21, #64]
    ac48:	ldr	x1, [x21, #72]
    ac4c:	add	x8, x20, x8
    ac50:	sub	x0, x8, x2
    ac54:	bl	2310 <memcpy@plt>
    ac58:	mov	w0, wzr
    ac5c:	cbz	x19, abf4 <inflateGetDictionary@@ZLIB_1.2.7.1+0x3c>
    ac60:	ldr	w8, [x21, #64]
    ac64:	str	w8, [x19]
    ac68:	ldp	x20, x19, [sp, #32]
    ac6c:	ldr	x21, [sp, #16]
    ac70:	ldp	x29, x30, [sp], #48
    ac74:	ret
    ac78:	mov	w0, #0xfffffffe            	// #-2
    ac7c:	ldp	x20, x19, [sp, #32]
    ac80:	ldr	x21, [sp, #16]
    ac84:	ldp	x29, x30, [sp], #48
    ac88:	ret

000000000000ac8c <inflateSetDictionary@@Base>:
    ac8c:	stp	x29, x30, [sp, #-64]!
    ac90:	stp	x24, x23, [sp, #16]
    ac94:	stp	x22, x21, [sp, #32]
    ac98:	stp	x20, x19, [sp, #48]
    ac9c:	mov	x29, sp
    aca0:	cbz	x0, acfc <inflateSetDictionary@@Base+0x70>
    aca4:	ldr	x8, [x0, #64]
    aca8:	mov	x21, x0
    acac:	cbz	x8, acfc <inflateSetDictionary@@Base+0x70>
    acb0:	ldr	x8, [x21, #72]
    acb4:	cbz	x8, acfc <inflateSetDictionary@@Base+0x70>
    acb8:	ldr	x22, [x21, #56]
    acbc:	cbz	x22, acfc <inflateSetDictionary@@Base+0x70>
    acc0:	ldr	x8, [x22]
    acc4:	cmp	x8, x21
    acc8:	b.ne	acfc <inflateSetDictionary@@Base+0x70>  // b.any
    accc:	ldr	w8, [x22, #8]
    acd0:	mov	w9, #0xffffc0cc            	// #-16180
    acd4:	add	w9, w8, w9
    acd8:	cmp	w9, #0x1f
    acdc:	b.hi	acfc <inflateSetDictionary@@Base+0x70>  // b.pmore
    ace0:	ldr	w9, [x22, #16]
    ace4:	mov	w19, w2
    ace8:	mov	x20, x1
    acec:	cbz	w9, ad14 <inflateSetDictionary@@Base+0x88>
    acf0:	mov	w9, #0x3f3e                	// #16190
    acf4:	cmp	w8, w9
    acf8:	b.eq	ad24 <inflateSetDictionary@@Base+0x98>  // b.none
    acfc:	mov	w0, #0xfffffffe            	// #-2
    ad00:	ldp	x20, x19, [sp, #48]
    ad04:	ldp	x22, x21, [sp, #32]
    ad08:	ldp	x24, x23, [sp, #16]
    ad0c:	ldp	x29, x30, [sp], #64
    ad10:	ret
    ad14:	mov	w9, #0x3f3e                	// #16190
    ad18:	cmp	w8, w9
    ad1c:	mov	x23, x22
    ad20:	b.ne	ad50 <inflateSetDictionary@@Base+0xc4>  // b.any
    ad24:	mov	x0, xzr
    ad28:	mov	x1, xzr
    ad2c:	mov	w2, wzr
    ad30:	bl	24a0 <adler32@plt>
    ad34:	mov	x1, x20
    ad38:	mov	w2, w19
    ad3c:	bl	24a0 <adler32@plt>
    ad40:	ldr	x8, [x22, #32]
    ad44:	cmp	x0, x8
    ad48:	b.ne	ade8 <inflateSetDictionary@@Base+0x15c>  // b.any
    ad4c:	ldr	x23, [x21, #56]
    ad50:	ldr	x0, [x23, #72]
    ad54:	cbnz	x0, ad7c <inflateSetDictionary@@Base+0xf0>
    ad58:	ldr	w9, [x23, #56]
    ad5c:	ldr	x8, [x21, #64]
    ad60:	ldr	x0, [x21, #80]
    ad64:	mov	w10, #0x1                   	// #1
    ad68:	lsl	w1, w10, w9
    ad6c:	mov	w2, #0x1                   	// #1
    ad70:	blr	x8
    ad74:	str	x0, [x23, #72]
    ad78:	cbz	x0, ae40 <inflateSetDictionary@@Base+0x1b4>
    ad7c:	ldr	w8, [x23, #60]
    ad80:	cbnz	w8, ad98 <inflateSetDictionary@@Base+0x10c>
    ad84:	ldr	w8, [x23, #56]
    ad88:	mov	w9, #0x1                   	// #1
    ad8c:	str	xzr, [x23, #64]
    ad90:	lsl	w8, w9, w8
    ad94:	str	w8, [x23, #60]
    ad98:	cmp	w8, w19
    ad9c:	add	x24, x20, w19, uxtw
    ada0:	b.ls	adf0 <inflateSetDictionary@@Base+0x164>  // b.plast
    ada4:	ldr	w9, [x23, #68]
    ada8:	mov	x1, x20
    adac:	sub	w8, w8, w9
    adb0:	cmp	w8, w19
    adb4:	csel	w21, w19, w8, hi  // hi = pmore
    adb8:	add	x0, x0, x9
    adbc:	mov	x2, x21
    adc0:	bl	2310 <memcpy@plt>
    adc4:	subs	w19, w19, w21
    adc8:	b.eq	ae18 <inflateSetDictionary@@Base+0x18c>  // b.none
    adcc:	ldr	x0, [x23, #72]
    add0:	mov	w2, w19
    add4:	sub	x1, x24, x2
    add8:	bl	2310 <memcpy@plt>
    addc:	ldr	w8, [x23, #60]
    ade0:	str	w19, [x23, #68]
    ade4:	b	ae04 <inflateSetDictionary@@Base+0x178>
    ade8:	mov	w0, #0xfffffffd            	// #-3
    adec:	b	ad00 <inflateSetDictionary@@Base+0x74>
    adf0:	mov	w2, w8
    adf4:	sub	x1, x24, x2
    adf8:	bl	2310 <memcpy@plt>
    adfc:	ldr	w8, [x23, #60]
    ae00:	str	wzr, [x23, #68]
    ae04:	str	w8, [x23, #64]
    ae08:	mov	w0, wzr
    ae0c:	mov	w8, #0x1                   	// #1
    ae10:	str	w8, [x22, #20]
    ae14:	b	ad00 <inflateSetDictionary@@Base+0x74>
    ae18:	ldp	w8, w9, [x23, #64]
    ae1c:	ldr	w10, [x23, #60]
    ae20:	add	w9, w9, w21
    ae24:	cmp	w9, w10
    ae28:	csel	w9, wzr, w9, eq  // eq = none
    ae2c:	cmp	w8, w10
    ae30:	str	w9, [x23, #68]
    ae34:	b.cs	ae08 <inflateSetDictionary@@Base+0x17c>  // b.hs, b.nlast
    ae38:	add	w8, w8, w21
    ae3c:	b	ae04 <inflateSetDictionary@@Base+0x178>
    ae40:	mov	w8, #0x3f52                	// #16210
    ae44:	str	w8, [x22, #8]
    ae48:	mov	w0, #0xfffffffc            	// #-4
    ae4c:	b	ad00 <inflateSetDictionary@@Base+0x74>

000000000000ae50 <inflateGetHeader@@ZLIB_1.2.2>:
    ae50:	cbz	x0, ae94 <inflateGetHeader@@ZLIB_1.2.2+0x44>
    ae54:	ldr	x8, [x0, #64]
    ae58:	cbz	x8, ae94 <inflateGetHeader@@ZLIB_1.2.2+0x44>
    ae5c:	ldr	x8, [x0, #72]
    ae60:	cbz	x8, ae94 <inflateGetHeader@@ZLIB_1.2.2+0x44>
    ae64:	ldr	x8, [x0, #56]
    ae68:	cbz	x8, ae94 <inflateGetHeader@@ZLIB_1.2.2+0x44>
    ae6c:	ldr	x9, [x8]
    ae70:	cmp	x9, x0
    ae74:	b.ne	ae94 <inflateGetHeader@@ZLIB_1.2.2+0x44>  // b.any
    ae78:	ldr	w9, [x8, #8]
    ae7c:	mov	w10, #0xffffc0cc            	// #-16180
    ae80:	add	w9, w9, w10
    ae84:	cmp	w9, #0x1f
    ae88:	b.hi	ae94 <inflateGetHeader@@ZLIB_1.2.2+0x44>  // b.pmore
    ae8c:	ldrb	w9, [x8, #16]
    ae90:	tbnz	w9, #1, ae9c <inflateGetHeader@@ZLIB_1.2.2+0x4c>
    ae94:	mov	w0, #0xfffffffe            	// #-2
    ae98:	ret
    ae9c:	mov	w0, wzr
    aea0:	str	x1, [x8, #48]
    aea4:	str	wzr, [x1, #72]
    aea8:	ret

000000000000aeac <inflateSync@@Base>:
    aeac:	sub	sp, sp, #0x10
    aeb0:	cbz	x0, af10 <inflateSync@@Base+0x64>
    aeb4:	ldr	x8, [x0, #64]
    aeb8:	cbz	x8, af10 <inflateSync@@Base+0x64>
    aebc:	ldr	x8, [x0, #72]
    aec0:	cbz	x8, af10 <inflateSync@@Base+0x64>
    aec4:	ldr	x9, [x0, #56]
    aec8:	cbz	x9, af10 <inflateSync@@Base+0x64>
    aecc:	ldr	x8, [x9]
    aed0:	cmp	x8, x0
    aed4:	b.ne	af10 <inflateSync@@Base+0x64>  // b.any
    aed8:	ldr	w8, [x9, #8]
    aedc:	mov	w10, #0xffffc0cc            	// #-16180
    aee0:	add	w10, w8, w10
    aee4:	cmp	w10, #0x1f
    aee8:	b.hi	af10 <inflateSync@@Base+0x64>  // b.pmore
    aeec:	ldr	w12, [x0, #8]
    aef0:	cbnz	w12, af20 <inflateSync@@Base+0x74>
    aef4:	ldr	w10, [x9, #88]
    aef8:	cmp	w10, #0x8
    aefc:	b.cs	af20 <inflateSync@@Base+0x74>  // b.hs, b.nlast
    af00:	mov	w8, #0xfffffffb            	// #-5
    af04:	mov	w0, w8
    af08:	add	sp, sp, #0x10
    af0c:	ret
    af10:	mov	w8, #0xfffffffe            	// #-2
    af14:	mov	w0, w8
    af18:	add	sp, sp, #0x10
    af1c:	ret
    af20:	mov	w10, #0x3f53                	// #16211
    af24:	cmp	w8, w10
    af28:	b.ne	af34 <inflateSync@@Base+0x88>  // b.any
    af2c:	ldr	w8, [x9, #140]
    af30:	b	aff8 <inflateSync@@Base+0x14c>
    af34:	ldr	w11, [x9, #88]
    af38:	ldr	x8, [x9, #80]
    af3c:	str	w10, [x9, #8]
    af40:	and	x10, x11, #0x7
    af44:	ands	w12, w11, #0xfffffff8
    af48:	lsl	x8, x8, x10
    af4c:	str	x8, [x9, #80]
    af50:	str	w12, [x9, #88]
    af54:	b.eq	afdc <inflateSync@@Base+0x130>  // b.none
    af58:	and	w11, w11, #0xfffffff8
    af5c:	mov	x10, xzr
    af60:	neg	w11, w11
    af64:	add	x12, sp, #0xc
    af68:	strb	w8, [x12, x10]
    af6c:	add	x10, x10, #0x1
    af70:	adds	w11, w11, #0x8
    af74:	lsr	x8, x8, #8
    af78:	b.ne	af68 <inflateSync@@Base+0xbc>  // b.any
    af7c:	mov	x11, x9
    af80:	str	wzr, [x11, #140]!
    af84:	stur	x8, [x11, #-60]
    af88:	stur	wzr, [x11, #-52]
    af8c:	cbz	w10, afec <inflateSync@@Base+0x140>
    af90:	mov	x12, xzr
    af94:	mov	w8, wzr
    af98:	add	x13, sp, #0xc
    af9c:	mov	w14, #0xff                  	// #255
    afa0:	mov	w15, #0x4                   	// #4
    afa4:	ldrb	w16, [x13, x12]
    afa8:	cmp	w8, #0x2
    afac:	sub	w17, w15, w8
    afb0:	csel	w18, wzr, w14, cc  // cc = lo, ul, last
    afb4:	cmp	w16, #0x0
    afb8:	add	x12, x12, #0x1
    afbc:	csel	w17, w17, wzr, eq  // eq = none
    afc0:	cmp	w18, w16
    afc4:	csinc	w8, w17, w8, ne  // ne = any
    afc8:	cmp	x12, x10
    afcc:	b.cs	aff0 <inflateSync@@Base+0x144>  // b.hs, b.nlast
    afd0:	cmp	w8, #0x4
    afd4:	b.cc	afa4 <inflateSync@@Base+0xf8>  // b.lo, b.ul, b.last
    afd8:	b	aff0 <inflateSync@@Base+0x144>
    afdc:	mov	x11, x9
    afe0:	mov	w8, wzr
    afe4:	str	wzr, [x11, #140]!
    afe8:	b	aff0 <inflateSync@@Base+0x144>
    afec:	mov	w8, wzr
    aff0:	str	w8, [x11]
    aff4:	ldr	w12, [x0, #8]
    aff8:	ldr	x10, [x0]
    affc:	mov	w11, wzr
    b000:	cbz	w12, b050 <inflateSync@@Base+0x1a4>
    b004:	cmp	w8, #0x3
    b008:	b.hi	b050 <inflateSync@@Base+0x1a4>  // b.pmore
    b00c:	mov	x11, xzr
    b010:	mov	w12, w12
    b014:	mov	w13, #0xff                  	// #255
    b018:	mov	w14, #0x4                   	// #4
    b01c:	ldrb	w15, [x10, x11]
    b020:	cmp	w8, #0x2
    b024:	sub	w16, w14, w8
    b028:	csel	w17, wzr, w13, cc  // cc = lo, ul, last
    b02c:	cmp	w15, #0x0
    b030:	add	x11, x11, #0x1
    b034:	csel	w16, w16, wzr, eq  // eq = none
    b038:	cmp	w17, w15
    b03c:	csinc	w8, w16, w8, ne  // ne = any
    b040:	cmp	x11, x12
    b044:	b.cs	b050 <inflateSync@@Base+0x1a4>  // b.hs, b.nlast
    b048:	cmp	w8, #0x4
    b04c:	b.cc	b01c <inflateSync@@Base+0x170>  // b.lo, b.ul, b.last
    b050:	str	w8, [x9, #140]
    b054:	cmp	w8, #0x4
    b058:	ldr	w8, [x0, #8]
    b05c:	ldr	x13, [x0, #16]
    b060:	mov	w12, w11
    b064:	add	x10, x10, x12
    b068:	str	x10, [x0]
    b06c:	sub	w8, w8, w11
    b070:	add	x10, x13, x12
    b074:	str	w8, [x0, #8]
    b078:	str	x10, [x0, #16]
    b07c:	b.ne	b0fc <inflateSync@@Base+0x250>  // b.any
    b080:	ldr	x11, [x0, #40]
    b084:	str	xzr, [x9, #64]
    b088:	str	wzr, [x9, #60]
    b08c:	str	xzr, [x9, #40]
    b090:	str	xzr, [x0, #16]
    b094:	stp	xzr, xzr, [x0, #40]
    b098:	ldr	w8, [x9, #16]
    b09c:	cbz	w8, b0a8 <inflateSync@@Base+0x1fc>
    b0a0:	and	x8, x8, #0x1
    b0a4:	str	x8, [x0, #96]
    b0a8:	mov	w12, #0x8000                	// #32768
    b0ac:	str	w12, [x9, #28]
    b0b0:	adrp	x12, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    b0b4:	ldr	d0, [x12, #240]
    b0b8:	add	x12, x9, #0x558
    b0bc:	str	x12, [x9, #144]
    b0c0:	stp	x12, x12, [x9, #104]
    b0c4:	adrp	x12, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    b0c8:	str	d0, [x9, #7144]
    b0cc:	ldr	d0, [x12, #1752]
    b0d0:	mov	w8, wzr
    b0d4:	str	wzr, [x9, #20]
    b0d8:	str	xzr, [x9, #48]
    b0dc:	str	xzr, [x9, #80]
    b0e0:	str	wzr, [x9, #88]
    b0e4:	str	x10, [x0, #16]
    b0e8:	str	x11, [x0, #40]
    b0ec:	str	d0, [x9, #8]
    b0f0:	mov	w0, w8
    b0f4:	add	sp, sp, #0x10
    b0f8:	ret
    b0fc:	mov	w8, #0xfffffffd            	// #-3
    b100:	mov	w0, w8
    b104:	add	sp, sp, #0x10
    b108:	ret

000000000000b10c <inflateSyncPoint@@Base>:
    b10c:	cbz	x0, b164 <inflateSyncPoint@@Base+0x58>
    b110:	ldr	x8, [x0, #64]
    b114:	cbz	x8, b164 <inflateSyncPoint@@Base+0x58>
    b118:	ldr	x8, [x0, #72]
    b11c:	cbz	x8, b164 <inflateSyncPoint@@Base+0x58>
    b120:	ldr	x8, [x0, #56]
    b124:	cbz	x8, b164 <inflateSyncPoint@@Base+0x58>
    b128:	ldr	x9, [x8]
    b12c:	cmp	x9, x0
    b130:	b.ne	b164 <inflateSyncPoint@@Base+0x58>  // b.any
    b134:	ldr	w9, [x8, #8]
    b138:	mov	w10, #0xffffc0cc            	// #-16180
    b13c:	add	w10, w9, w10
    b140:	cmp	w10, #0x1f
    b144:	b.hi	b164 <inflateSyncPoint@@Base+0x58>  // b.pmore
    b148:	mov	w10, #0x3f41                	// #16193
    b14c:	cmp	w9, w10
    b150:	b.ne	b16c <inflateSyncPoint@@Base+0x60>  // b.any
    b154:	ldr	w8, [x8, #88]
    b158:	cmp	w8, #0x0
    b15c:	cset	w0, eq  // eq = none
    b160:	ret
    b164:	mov	w0, #0xfffffffe            	// #-2
    b168:	ret
    b16c:	mov	w0, wzr
    b170:	ret

000000000000b174 <inflateCopy@@ZLIB_1.2.0>:
    b174:	stp	x29, x30, [sp, #-64]!
    b178:	str	x23, [sp, #16]
    b17c:	stp	x22, x21, [sp, #32]
    b180:	stp	x20, x19, [sp, #48]
    b184:	mov	x29, sp
    b188:	cbz	x1, b1b4 <inflateCopy@@ZLIB_1.2.0+0x40>
    b18c:	ldr	x8, [x1, #64]
    b190:	mov	x22, x1
    b194:	cbz	x8, b1b4 <inflateCopy@@ZLIB_1.2.0+0x40>
    b198:	ldr	x9, [x22, #72]
    b19c:	cbz	x9, b1b4 <inflateCopy@@ZLIB_1.2.0+0x40>
    b1a0:	ldr	x20, [x22, #56]
    b1a4:	cbz	x20, b1b4 <inflateCopy@@ZLIB_1.2.0+0x40>
    b1a8:	ldr	x9, [x20]
    b1ac:	cmp	x9, x22
    b1b0:	b.eq	b1cc <inflateCopy@@ZLIB_1.2.0+0x58>  // b.none
    b1b4:	mov	w0, #0xfffffffe            	// #-2
    b1b8:	ldp	x20, x19, [sp, #48]
    b1bc:	ldp	x22, x21, [sp, #32]
    b1c0:	ldr	x23, [sp, #16]
    b1c4:	ldp	x29, x30, [sp], #64
    b1c8:	ret
    b1cc:	mov	x19, x0
    b1d0:	mov	w0, #0xfffffffe            	// #-2
    b1d4:	cbz	x19, b1b8 <inflateCopy@@ZLIB_1.2.0+0x44>
    b1d8:	ldr	w9, [x20, #8]
    b1dc:	mov	w10, #0xffffc0cc            	// #-16180
    b1e0:	add	w9, w9, w10
    b1e4:	cmp	w9, #0x1f
    b1e8:	b.hi	b1b8 <inflateCopy@@ZLIB_1.2.0+0x44>  // b.pmore
    b1ec:	ldr	x0, [x22, #80]
    b1f0:	mov	w1, #0x1                   	// #1
    b1f4:	mov	w2, #0x1bf8                	// #7160
    b1f8:	blr	x8
    b1fc:	cbz	x0, b23c <inflateCopy@@ZLIB_1.2.0+0xc8>
    b200:	ldr	x8, [x20, #72]
    b204:	mov	x21, x0
    b208:	cbz	x8, b244 <inflateCopy@@ZLIB_1.2.0+0xd0>
    b20c:	ldr	w9, [x20, #56]
    b210:	ldr	x8, [x22, #64]
    b214:	ldr	x0, [x22, #80]
    b218:	mov	w10, #0x1                   	// #1
    b21c:	lsl	w1, w10, w9
    b220:	mov	w2, #0x1                   	// #1
    b224:	blr	x8
    b228:	mov	x23, x0
    b22c:	cbnz	x0, b248 <inflateCopy@@ZLIB_1.2.0+0xd4>
    b230:	ldp	x8, x0, [x22, #72]
    b234:	mov	x1, x21
    b238:	blr	x8
    b23c:	mov	w0, #0xfffffffc            	// #-4
    b240:	b	b1b8 <inflateCopy@@ZLIB_1.2.0+0x44>
    b244:	mov	x23, xzr
    b248:	ldp	q1, q0, [x22, #16]
    b24c:	ldr	q2, [x22]
    b250:	mov	w2, #0x1bf8                	// #7160
    b254:	mov	x0, x21
    b258:	stp	q1, q0, [x19, #16]
    b25c:	str	q2, [x19]
    b260:	ldp	q1, q0, [x22, #80]
    b264:	ldp	q3, q2, [x22, #48]
    b268:	mov	x1, x20
    b26c:	stp	q1, q0, [x19, #80]
    b270:	stp	q3, q2, [x19, #48]
    b274:	bl	2310 <memcpy@plt>
    b278:	str	x19, [x21]
    b27c:	ldr	x10, [x20, #104]
    b280:	add	x8, x20, #0x558
    b284:	subs	x9, x10, x8
    b288:	b.cc	b2b8 <inflateCopy@@ZLIB_1.2.0+0x144>  // b.lo, b.ul, b.last
    b28c:	mov	w11, #0x1be4                	// #7140
    b290:	add	x11, x20, x11
    b294:	cmp	x10, x11
    b298:	b.hi	b2b8 <inflateCopy@@ZLIB_1.2.0+0x144>  // b.pmore
    b29c:	add	x10, x21, #0x558
    b2a0:	add	x9, x10, x9
    b2a4:	str	x9, [x21, #104]
    b2a8:	ldr	x9, [x20, #112]
    b2ac:	sub	x9, x9, x8
    b2b0:	add	x9, x10, x9
    b2b4:	str	x9, [x21, #112]
    b2b8:	ldr	x9, [x20, #144]
    b2bc:	sub	x8, x9, x8
    b2c0:	add	x8, x21, x8
    b2c4:	add	x8, x8, #0x558
    b2c8:	str	x8, [x21, #144]
    b2cc:	cbz	x23, b2e8 <inflateCopy@@ZLIB_1.2.0+0x174>
    b2d0:	ldr	w8, [x20, #56]
    b2d4:	ldr	x1, [x20, #72]
    b2d8:	mov	w9, #0x1                   	// #1
    b2dc:	mov	x0, x23
    b2e0:	lsl	x2, x9, x8
    b2e4:	bl	2310 <memcpy@plt>
    b2e8:	mov	w0, wzr
    b2ec:	str	x23, [x21, #72]
    b2f0:	str	x21, [x19, #56]
    b2f4:	b	b1b8 <inflateCopy@@ZLIB_1.2.0+0x44>

000000000000b2f8 <inflateUndermine@@ZLIB_1.2.3.3>:
    b2f8:	cbz	x0, b344 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
    b2fc:	ldr	x8, [x0, #64]
    b300:	cbz	x8, b344 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
    b304:	ldr	x8, [x0, #72]
    b308:	cbz	x8, b344 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
    b30c:	ldr	x8, [x0, #56]
    b310:	cbz	x8, b344 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
    b314:	ldr	x9, [x8]
    b318:	cmp	x9, x0
    b31c:	b.ne	b344 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>  // b.any
    b320:	ldr	w9, [x8, #8]
    b324:	mov	w10, #0xffffc0cc            	// #-16180
    b328:	add	w9, w9, w10
    b32c:	cmp	w9, #0x1f
    b330:	b.hi	b344 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>  // b.pmore
    b334:	mov	w9, #0x1                   	// #1
    b338:	mov	w0, #0xfffffffd            	// #-3
    b33c:	str	w9, [x8, #7144]
    b340:	ret
    b344:	mov	w0, #0xfffffffe            	// #-2
    b348:	ret

000000000000b34c <inflateValidate@@ZLIB_1.2.9>:
    b34c:	cbz	x0, b3a8 <inflateValidate@@ZLIB_1.2.9+0x5c>
    b350:	ldr	x8, [x0, #64]
    b354:	cbz	x8, b3a8 <inflateValidate@@ZLIB_1.2.9+0x5c>
    b358:	ldr	x8, [x0, #72]
    b35c:	cbz	x8, b3a8 <inflateValidate@@ZLIB_1.2.9+0x5c>
    b360:	ldr	x8, [x0, #56]
    b364:	cbz	x8, b3a8 <inflateValidate@@ZLIB_1.2.9+0x5c>
    b368:	ldr	x9, [x8]
    b36c:	cmp	x9, x0
    b370:	b.ne	b3a8 <inflateValidate@@ZLIB_1.2.9+0x5c>  // b.any
    b374:	ldr	w9, [x8, #8]
    b378:	mov	w10, #0xffffc0cc            	// #-16180
    b37c:	add	w9, w9, w10
    b380:	cmp	w9, #0x1f
    b384:	b.hi	b3a8 <inflateValidate@@ZLIB_1.2.9+0x5c>  // b.pmore
    b388:	ldr	w9, [x8, #16]
    b38c:	cmp	w1, #0x0
    b390:	mov	w0, wzr
    b394:	and	w10, w9, #0xfffffffb
    b398:	orr	w9, w9, #0x4
    b39c:	csel	w9, w10, w9, eq  // eq = none
    b3a0:	str	w9, [x8, #16]
    b3a4:	ret
    b3a8:	mov	w0, #0xfffffffe            	// #-2
    b3ac:	ret

000000000000b3b0 <inflateMark@@ZLIB_1.2.3.4>:
    b3b0:	cbz	x0, b418 <inflateMark@@ZLIB_1.2.3.4+0x68>
    b3b4:	ldr	x8, [x0, #64]
    b3b8:	cbz	x8, b418 <inflateMark@@ZLIB_1.2.3.4+0x68>
    b3bc:	ldr	x8, [x0, #72]
    b3c0:	cbz	x8, b418 <inflateMark@@ZLIB_1.2.3.4+0x68>
    b3c4:	ldr	x8, [x0, #56]
    b3c8:	cbz	x8, b418 <inflateMark@@ZLIB_1.2.3.4+0x68>
    b3cc:	ldr	x9, [x8]
    b3d0:	cmp	x9, x0
    b3d4:	b.ne	b418 <inflateMark@@ZLIB_1.2.3.4+0x68>  // b.any
    b3d8:	ldr	w10, [x8, #8]
    b3dc:	mov	w9, #0xffffc0cc            	// #-16180
    b3e0:	add	w9, w10, w9
    b3e4:	cmp	w9, #0x1f
    b3e8:	b.hi	b418 <inflateMark@@ZLIB_1.2.3.4+0x68>  // b.pmore
    b3ec:	ldrsw	x9, [x8, #7148]
    b3f0:	mov	w11, #0x3f4c                	// #16204
    b3f4:	cmp	w10, w11
    b3f8:	lsl	x9, x9, #16
    b3fc:	b.eq	b420 <inflateMark@@ZLIB_1.2.3.4+0x70>  // b.none
    b400:	mov	w11, #0x3f43                	// #16195
    b404:	cmp	w10, w11
    b408:	b.ne	b434 <inflateMark@@ZLIB_1.2.3.4+0x84>  // b.any
    b40c:	ldr	w8, [x8, #92]
    b410:	add	x0, x9, w8, uxtw
    b414:	ret
    b418:	mov	x0, #0xffffffffffff0000    	// #-65536
    b41c:	ret
    b420:	ldr	w10, [x8, #7152]
    b424:	ldr	w8, [x8, #92]
    b428:	sub	w8, w10, w8
    b42c:	add	x0, x9, w8, uxtw
    b430:	ret
    b434:	add	x0, x9, wzr, uxtw
    b438:	ret

000000000000b43c <inflateCodesUsed@@ZLIB_1.2.9>:
    b43c:	cbz	x0, b48c <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b440:	ldr	x8, [x0, #64]
    b444:	cbz	x8, b48c <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b448:	ldr	x8, [x0, #72]
    b44c:	cbz	x8, b48c <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b450:	ldr	x8, [x0, #56]
    b454:	cbz	x8, b48c <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b458:	ldr	x9, [x8]
    b45c:	cmp	x9, x0
    b460:	b.ne	b48c <inflateCodesUsed@@ZLIB_1.2.9+0x50>  // b.any
    b464:	ldr	w9, [x8, #8]
    b468:	mov	w10, #0xffffc0cc            	// #-16180
    b46c:	add	w9, w9, w10
    b470:	cmp	w9, #0x1f
    b474:	b.hi	b48c <inflateCodesUsed@@ZLIB_1.2.9+0x50>  // b.pmore
    b478:	ldr	x9, [x8, #144]
    b47c:	sub	x8, x9, x8
    b480:	sub	x8, x8, #0x558
    b484:	asr	x0, x8, #2
    b488:	ret
    b48c:	mov	x0, #0xffffffffffffffff    	// #-1
    b490:	ret
    b494:	sub	sp, sp, #0x90
    b498:	movi	v0.2d, #0x0
    b49c:	stp	x28, x27, [sp, #64]
    b4a0:	stp	x26, x25, [sp, #80]
    b4a4:	stp	x24, x23, [sp, #96]
    b4a8:	stp	x22, x21, [sp, #112]
    b4ac:	stp	x20, x19, [sp, #128]
    b4b0:	stp	q0, q0, [sp, #32]
    b4b4:	cbz	w2, b4f4 <inflateCodesUsed@@ZLIB_1.2.9+0xb8>
    b4b8:	mov	w8, w2
    b4bc:	add	x9, sp, #0x20
    b4c0:	mov	x10, x1
    b4c4:	ldrh	w11, [x10], #2
    b4c8:	subs	x8, x8, #0x1
    b4cc:	lsl	x11, x11, #1
    b4d0:	ldrh	w12, [x9, x11]
    b4d4:	add	w12, w12, #0x1
    b4d8:	strh	w12, [x9, x11]
    b4dc:	b.ne	b4c4 <inflateCodesUsed@@ZLIB_1.2.9+0x88>  // b.any
    b4e0:	ldrh	w8, [sp, #62]
    b4e4:	ldr	w11, [x4]
    b4e8:	cbz	w8, b4f8 <inflateCodesUsed@@ZLIB_1.2.9+0xbc>
    b4ec:	mov	w9, #0xf                   	// #15
    b4f0:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b4f4:	ldr	w11, [x4]
    b4f8:	ldrh	w8, [sp, #60]
    b4fc:	cbz	w8, b50c <inflateCodesUsed@@ZLIB_1.2.9+0xd0>
    b500:	mov	w8, wzr
    b504:	mov	w9, #0xe                   	// #14
    b508:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b50c:	ldrh	w8, [sp, #58]
    b510:	cbz	w8, b520 <inflateCodesUsed@@ZLIB_1.2.9+0xe4>
    b514:	mov	w8, wzr
    b518:	mov	w9, #0xd                   	// #13
    b51c:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b520:	ldrh	w8, [sp, #56]
    b524:	cbz	w8, b534 <inflateCodesUsed@@ZLIB_1.2.9+0xf8>
    b528:	mov	w8, wzr
    b52c:	mov	w9, #0xc                   	// #12
    b530:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b534:	ldrh	w8, [sp, #54]
    b538:	cbz	w8, b548 <inflateCodesUsed@@ZLIB_1.2.9+0x10c>
    b53c:	mov	w8, wzr
    b540:	mov	w9, #0xb                   	// #11
    b544:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b548:	ldrh	w8, [sp, #52]
    b54c:	cbz	w8, b55c <inflateCodesUsed@@ZLIB_1.2.9+0x120>
    b550:	mov	w8, wzr
    b554:	mov	w9, #0xa                   	// #10
    b558:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b55c:	ldrh	w8, [sp, #50]
    b560:	cbz	w8, b570 <inflateCodesUsed@@ZLIB_1.2.9+0x134>
    b564:	mov	w8, wzr
    b568:	mov	w9, #0x9                   	// #9
    b56c:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b570:	ldrh	w8, [sp, #48]
    b574:	cbz	w8, b584 <inflateCodesUsed@@ZLIB_1.2.9+0x148>
    b578:	mov	w8, wzr
    b57c:	mov	w9, #0x8                   	// #8
    b580:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b584:	ldrh	w8, [sp, #46]
    b588:	cbz	w8, b598 <inflateCodesUsed@@ZLIB_1.2.9+0x15c>
    b58c:	mov	w8, wzr
    b590:	mov	w9, #0x7                   	// #7
    b594:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b598:	ldrh	w8, [sp, #44]
    b59c:	cbz	w8, b5ac <inflateCodesUsed@@ZLIB_1.2.9+0x170>
    b5a0:	mov	w8, wzr
    b5a4:	mov	w9, #0x6                   	// #6
    b5a8:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b5ac:	ldrh	w8, [sp, #42]
    b5b0:	cbz	w8, b5c0 <inflateCodesUsed@@ZLIB_1.2.9+0x184>
    b5b4:	mov	w8, wzr
    b5b8:	mov	w9, #0x5                   	// #5
    b5bc:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b5c0:	ldrh	w8, [sp, #40]
    b5c4:	cbz	w8, b5d4 <inflateCodesUsed@@ZLIB_1.2.9+0x198>
    b5c8:	mov	w8, wzr
    b5cc:	mov	w9, #0x4                   	// #4
    b5d0:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b5d4:	ldrh	w8, [sp, #38]
    b5d8:	cbz	w8, b5e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1ac>
    b5dc:	mov	w8, wzr
    b5e0:	mov	w9, #0x3                   	// #3
    b5e4:	b	b5f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b5e8:	ldrh	w8, [sp, #36]
    b5ec:	cbz	w8, ba58 <inflateCodesUsed@@ZLIB_1.2.9+0x61c>
    b5f0:	mov	w8, wzr
    b5f4:	mov	w9, #0x2                   	// #2
    b5f8:	cmp	w11, w9
    b5fc:	mov	w10, #0x1                   	// #1
    b600:	csel	w11, w9, w11, hi  // hi = pmore
    b604:	add	x12, sp, #0x20
    b608:	ldrh	w13, [x12, x10, lsl #1]
    b60c:	cbnz	w13, b620 <inflateCodesUsed@@ZLIB_1.2.9+0x1e4>
    b610:	add	x10, x10, #0x1
    b614:	cmp	x9, x10
    b618:	b.ne	b608 <inflateCodesUsed@@ZLIB_1.2.9+0x1cc>  // b.any
    b61c:	mov	w10, w9
    b620:	ldrh	w12, [sp, #34]
    b624:	cmp	w11, w10
    b628:	csel	w11, w10, w11, cc  // cc = lo, ul, last
    b62c:	cmp	w12, #0x2
    b630:	b.hi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.pmore
    b634:	ldrh	w13, [sp, #36]
    b638:	mov	w15, #0x4                   	// #4
    b63c:	add	w14, w13, w12, lsl #1
    b640:	subs	w15, w15, w14
    b644:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b648:	ldrh	w14, [sp, #38]
    b64c:	lsl	w15, w15, #1
    b650:	subs	w16, w15, w14
    b654:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b658:	ldrh	w15, [sp, #40]
    b65c:	lsl	w16, w16, #1
    b660:	subs	w17, w16, w15
    b664:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b668:	ldrh	w16, [sp, #42]
    b66c:	lsl	w17, w17, #1
    b670:	subs	w18, w17, w16
    b674:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b678:	ldrh	w17, [sp, #44]
    b67c:	lsl	w18, w18, #1
    b680:	subs	w6, w18, w17
    b684:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b688:	ldrh	w18, [sp, #46]
    b68c:	lsl	w6, w6, #1
    b690:	subs	w7, w6, w18
    b694:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b698:	ldrh	w6, [sp, #48]
    b69c:	lsl	w7, w7, #1
    b6a0:	subs	w19, w7, w6
    b6a4:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b6a8:	ldrh	w7, [sp, #50]
    b6ac:	lsl	w19, w19, #1
    b6b0:	subs	w20, w19, w7
    b6b4:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b6b8:	ldrh	w19, [sp, #52]
    b6bc:	lsl	w20, w20, #1
    b6c0:	subs	w21, w20, w19
    b6c4:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b6c8:	ldrh	w20, [sp, #54]
    b6cc:	lsl	w21, w21, #1
    b6d0:	subs	w22, w21, w20
    b6d4:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b6d8:	ldrh	w21, [sp, #56]
    b6dc:	lsl	w22, w22, #1
    b6e0:	subs	w23, w22, w21
    b6e4:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b6e8:	ldrh	w22, [sp, #58]
    b6ec:	lsl	w23, w23, #1
    b6f0:	subs	w24, w23, w22
    b6f4:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b6f8:	ldrh	w23, [sp, #60]
    b6fc:	lsl	w24, w24, #1
    b700:	subs	w24, w24, w23
    b704:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b708:	lsl	w24, w24, #1
    b70c:	subs	w8, w24, w8
    b710:	b.mi	b7ac <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b714:	cbz	w8, b728 <inflateCodesUsed@@ZLIB_1.2.9+0x2ec>
    b718:	mov	w8, #0xffffffff            	// #-1
    b71c:	cbz	w0, b7b0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    b720:	cmp	w9, #0x1
    b724:	b.ne	b7b0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>  // b.any
    b728:	add	w8, w13, w12
    b72c:	strh	w8, [sp, #6]
    b730:	add	w8, w14, w8
    b734:	strh	w8, [sp, #8]
    b738:	add	w8, w15, w8
    b73c:	strh	w8, [sp, #10]
    b740:	add	w8, w16, w8
    b744:	strh	w8, [sp, #12]
    b748:	add	w8, w17, w8
    b74c:	strh	w8, [sp, #14]
    b750:	add	w8, w18, w8
    b754:	strh	w8, [sp, #16]
    b758:	add	w8, w6, w8
    b75c:	strh	w8, [sp, #18]
    b760:	add	w8, w7, w8
    b764:	strh	w8, [sp, #20]
    b768:	add	w8, w19, w8
    b76c:	strh	w8, [sp, #22]
    b770:	add	w8, w20, w8
    b774:	strh	w8, [sp, #24]
    b778:	add	w8, w21, w8
    b77c:	strh	w8, [sp, #26]
    b780:	add	w8, w22, w8
    b784:	strh	w8, [sp, #28]
    b788:	add	w8, w23, w8
    b78c:	strh	wzr, [sp, #2]
    b790:	strh	w12, [sp, #4]
    b794:	strh	w8, [sp, #30]
    b798:	cbz	w2, b7fc <inflateCodesUsed@@ZLIB_1.2.9+0x3c0>
    b79c:	mov	x8, xzr
    b7a0:	mov	w12, w2
    b7a4:	mov	x13, sp
    b7a8:	b	b7dc <inflateCodesUsed@@ZLIB_1.2.9+0x3a0>
    b7ac:	mov	w8, #0xffffffff            	// #-1
    b7b0:	ldp	x20, x19, [sp, #128]
    b7b4:	ldp	x22, x21, [sp, #112]
    b7b8:	ldp	x24, x23, [sp, #96]
    b7bc:	ldp	x26, x25, [sp, #80]
    b7c0:	ldp	x28, x27, [sp, #64]
    b7c4:	mov	w0, w8
    b7c8:	add	sp, sp, #0x90
    b7cc:	ret
    b7d0:	add	x8, x8, #0x1
    b7d4:	cmp	x12, x8
    b7d8:	b.eq	b7fc <inflateCodesUsed@@ZLIB_1.2.9+0x3c0>  // b.none
    b7dc:	ldrh	w14, [x1, x8, lsl #1]
    b7e0:	cbz	x14, b7d0 <inflateCodesUsed@@ZLIB_1.2.9+0x394>
    b7e4:	lsl	x14, x14, #1
    b7e8:	ldrh	w15, [x13, x14]
    b7ec:	add	w16, w15, #0x1
    b7f0:	strh	w16, [x13, x14]
    b7f4:	strh	w8, [x5, x15, lsl #1]
    b7f8:	b	b7d0 <inflateCodesUsed@@ZLIB_1.2.9+0x394>
    b7fc:	cbz	w0, b834 <inflateCodesUsed@@ZLIB_1.2.9+0x3f8>
    b800:	cmp	w0, #0x1
    b804:	b.ne	b84c <inflateCodesUsed@@ZLIB_1.2.9+0x410>  // b.any
    b808:	cmp	w11, #0x9
    b80c:	mov	w8, #0x1                   	// #1
    b810:	b.hi	b7b0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>  // b.pmore
    b814:	adrp	x14, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    b818:	adrp	x15, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    b81c:	mov	w13, wzr
    b820:	mov	w12, #0x101                 	// #257
    b824:	add	x14, x14, #0xaf2
    b828:	add	x15, x15, #0xab4
    b82c:	mov	w16, #0x1                   	// #1
    b830:	b	b884 <inflateCodesUsed@@ZLIB_1.2.9+0x448>
    b834:	mov	w13, wzr
    b838:	mov	w16, wzr
    b83c:	mov	w12, #0x14                  	// #20
    b840:	mov	x15, x5
    b844:	mov	x14, x5
    b848:	b	b884 <inflateCodesUsed@@ZLIB_1.2.9+0x448>
    b84c:	cmp	w0, #0x2
    b850:	adrp	x14, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    b854:	adrp	x15, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    b858:	mov	w12, wzr
    b85c:	add	x14, x14, #0xb70
    b860:	cset	w13, eq  // eq = none
    b864:	add	x15, x15, #0xb30
    b868:	b.ne	b880 <inflateCodesUsed@@ZLIB_1.2.9+0x444>  // b.any
    b86c:	cmp	w11, #0x9
    b870:	mov	w16, w12
    b874:	b.ls	b884 <inflateCodesUsed@@ZLIB_1.2.9+0x448>  // b.plast
    b878:	mov	w8, #0x1                   	// #1
    b87c:	b	b7b0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    b880:	mov	w16, w12
    b884:	ldr	x6, [x3]
    b888:	mov	w7, #0x1                   	// #1
    b88c:	lsl	w17, w7, w11
    b890:	mov	w18, wzr
    b894:	mov	w2, wzr
    b898:	mov	w0, wzr
    b89c:	sub	w19, w17, #0x1
    b8a0:	mov	w8, #0xffffffff            	// #-1
    b8a4:	add	x20, sp, #0x20
    b8a8:	mov	w22, w11
    b8ac:	lsl	w21, w7, w22
    b8b0:	ldrh	w23, [x5, w18, uxtw #1]
    b8b4:	add	w22, w23, #0x1
    b8b8:	cmp	w22, w12
    b8bc:	sub	w22, w10, w2
    b8c0:	b.cs	b8cc <inflateCodesUsed@@ZLIB_1.2.9+0x490>  // b.hs, b.nlast
    b8c4:	mov	w24, wzr
    b8c8:	b	b8f0 <inflateCodesUsed@@ZLIB_1.2.9+0x4b4>
    b8cc:	cmp	w12, w23
    b8d0:	b.ls	b8e0 <inflateCodesUsed@@ZLIB_1.2.9+0x4a4>  // b.plast
    b8d4:	mov	w23, wzr
    b8d8:	mov	w24, #0x60                  	// #96
    b8dc:	b	b8f0 <inflateCodesUsed@@ZLIB_1.2.9+0x4b4>
    b8e0:	sub	w23, w23, w12
    b8e4:	lsl	x23, x23, #1
    b8e8:	ldrb	w24, [x14, x23]
    b8ec:	ldrh	w23, [x15, x23]
    b8f0:	lsl	w25, w7, w22
    b8f4:	lsr	w26, w0, w2
    b8f8:	sub	w26, w26, w25
    b8fc:	mov	w27, w21
    b900:	add	w28, w26, w27
    b904:	subs	w27, w27, w25
    b908:	add	x28, x6, w28, uxtw #2
    b90c:	strb	w24, [x28]
    b910:	strb	w22, [x28, #1]
    b914:	strh	w23, [x28, #2]
    b918:	b.ne	b900 <inflateCodesUsed@@ZLIB_1.2.9+0x4c4>  // b.any
    b91c:	sub	w23, w10, #0x1
    b920:	lsl	w24, w7, w23
    b924:	mov	w23, w24
    b928:	tst	w24, w0
    b92c:	lsr	w24, w24, #1
    b930:	b.ne	b924 <inflateCodesUsed@@ZLIB_1.2.9+0x4e8>  // b.any
    b934:	sub	w24, w23, #0x1
    b938:	mov	w25, w10
    b93c:	and	w0, w24, w0
    b940:	lsl	x24, x25, #1
    b944:	ldrh	w25, [x20, x24]
    b948:	add	w0, w0, w23
    b94c:	cmp	w23, #0x0
    b950:	csel	w0, wzr, w0, eq  // eq = none
    b954:	sub	w23, w25, #0x1
    b958:	add	w18, w18, #0x1
    b95c:	tst	w23, #0xffff
    b960:	strh	w23, [x20, x24]
    b964:	b.ne	b978 <inflateCodesUsed@@ZLIB_1.2.9+0x53c>  // b.any
    b968:	cmp	w10, w9
    b96c:	b.eq	ba28 <inflateCodesUsed@@ZLIB_1.2.9+0x5ec>  // b.none
    b970:	ldrh	w10, [x5, w18, uxtw #1]
    b974:	ldrh	w10, [x1, x10, lsl #1]
    b978:	cmp	w10, w11
    b97c:	b.ls	b8b0 <inflateCodesUsed@@ZLIB_1.2.9+0x474>  // b.plast
    b980:	and	w23, w0, w19
    b984:	cmp	w23, w8
    b988:	b.eq	b8b0 <inflateCodesUsed@@ZLIB_1.2.9+0x474>  // b.none
    b98c:	cmp	w2, #0x0
    b990:	csel	w2, w11, w2, eq  // eq = none
    b994:	sub	w22, w10, w2
    b998:	cmp	w10, w9
    b99c:	lsl	w8, w7, w22
    b9a0:	b.cs	b9d8 <inflateCodesUsed@@ZLIB_1.2.9+0x59c>  // b.hs, b.nlast
    b9a4:	sub	w22, w9, w2
    b9a8:	mov	w24, w10
    b9ac:	ldrh	w25, [x20, x24, lsl #1]
    b9b0:	sub	w8, w8, w25
    b9b4:	cmp	w8, #0x1
    b9b8:	b.lt	b9d0 <inflateCodesUsed@@ZLIB_1.2.9+0x594>  // b.tstop
    b9bc:	add	x24, x24, #0x1
    b9c0:	cmp	w24, w9
    b9c4:	lsl	w8, w8, #1
    b9c8:	b.cc	b9ac <inflateCodesUsed@@ZLIB_1.2.9+0x570>  // b.lo, b.ul, b.last
    b9cc:	b	b9d4 <inflateCodesUsed@@ZLIB_1.2.9+0x598>
    b9d0:	sub	w22, w24, w2
    b9d4:	lsl	w8, w7, w22
    b9d8:	add	w17, w8, w17
    b9dc:	cmp	w17, #0x354
    b9e0:	cset	w8, hi  // hi = pmore
    b9e4:	cmp	w17, #0x250
    b9e8:	and	w25, w16, w8
    b9ec:	cset	w24, hi  // hi = pmore
    b9f0:	mov	w8, #0x1                   	// #1
    b9f4:	tbnz	w25, #0, b7b0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    b9f8:	and	w24, w13, w24
    b9fc:	tbnz	w24, #0, b7b0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    ba00:	ldr	x8, [x3]
    ba04:	add	x6, x6, w21, uxtw #2
    ba08:	add	x21, x8, w23, uxtw #2
    ba0c:	sub	w8, w6, w8
    ba10:	lsr	w8, w8, #2
    ba14:	strb	w22, [x21]
    ba18:	strb	w11, [x21, #1]
    ba1c:	strh	w8, [x21, #2]
    ba20:	mov	w8, w23
    ba24:	b	b8ac <inflateCodesUsed@@ZLIB_1.2.9+0x470>
    ba28:	cbz	w0, ba40 <inflateCodesUsed@@ZLIB_1.2.9+0x604>
    ba2c:	add	x8, x6, w0, uxtw #2
    ba30:	mov	w9, #0x40                  	// #64
    ba34:	strb	w9, [x8]
    ba38:	strb	w22, [x8, #1]
    ba3c:	strh	wzr, [x8, #2]
    ba40:	ldr	x9, [x3]
    ba44:	mov	w8, wzr
    ba48:	add	x9, x9, w17, uxtw #2
    ba4c:	str	x9, [x3]
    ba50:	str	w11, [x4]
    ba54:	b	b7b0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    ba58:	ldrh	w8, [sp, #34]
    ba5c:	cbz	w8, ba78 <inflateCodesUsed@@ZLIB_1.2.9+0x63c>
    ba60:	cmp	w11, #0x0
    ba64:	mov	w8, wzr
    ba68:	mov	w9, #0x1                   	// #1
    ba6c:	cset	w11, ne  // ne = any
    ba70:	mov	w10, #0x1                   	// #1
    ba74:	b	b620 <inflateCodesUsed@@ZLIB_1.2.9+0x1e4>
    ba78:	ldr	x9, [x3]
    ba7c:	mov	w10, #0x140                 	// #320
    ba80:	add	x11, x9, #0x4
    ba84:	str	x11, [x3]
    ba88:	str	w10, [x9]
    ba8c:	ldr	x9, [x3]
    ba90:	mov	w11, #0x1                   	// #1
    ba94:	add	x12, x9, #0x4
    ba98:	str	x12, [x3]
    ba9c:	str	w10, [x9]
    baa0:	b	ba50 <inflateCodesUsed@@ZLIB_1.2.9+0x614>
    baa4:	add	x8, x0, #0xd4
    baa8:	str	x8, [x0, #2904]
    baac:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    bab0:	add	x8, x8, #0xd08
    bab4:	str	x8, [x0, #2920]
    bab8:	add	x8, x0, #0x9c8
    babc:	str	x8, [x0, #2928]
    bac0:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    bac4:	add	x8, x8, #0xd28
    bac8:	str	x8, [x0, #2944]
    bacc:	add	x8, x0, #0xabc
    bad0:	str	x8, [x0, #2952]
    bad4:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    bad8:	add	x8, x8, #0xd48
    badc:	strh	wzr, [x0, #5936]
    bae0:	str	x8, [x0, #2968]
    bae4:	str	wzr, [x0, #5940]
    bae8:	b	baec <inflateCodesUsed@@ZLIB_1.2.9+0x6b0>
    baec:	mov	x8, xzr
    baf0:	add	x9, x0, x8
    baf4:	add	x8, x8, #0x8
    baf8:	cmp	x8, #0x478
    bafc:	strh	wzr, [x9, #212]
    bb00:	strh	wzr, [x9, #216]
    bb04:	b.ne	baf0 <inflateCodesUsed@@ZLIB_1.2.9+0x6b4>  // b.any
    bb08:	mov	w8, #0x1                   	// #1
    bb0c:	movi	v0.2d, #0x0
    bb10:	strh	w8, [x0, #1236]
    bb14:	mov	w8, #0x1718                	// #5912
    bb18:	strh	wzr, [x0, #2504]
    bb1c:	strh	wzr, [x0, #2508]
    bb20:	strh	wzr, [x0, #2512]
    bb24:	strh	wzr, [x0, #2516]
    bb28:	strh	wzr, [x0, #2520]
    bb2c:	strh	wzr, [x0, #2524]
    bb30:	strh	wzr, [x0, #2528]
    bb34:	strh	wzr, [x0, #2532]
    bb38:	strh	wzr, [x0, #2536]
    bb3c:	strh	wzr, [x0, #2540]
    bb40:	strh	wzr, [x0, #2544]
    bb44:	strh	wzr, [x0, #2548]
    bb48:	strh	wzr, [x0, #2552]
    bb4c:	strh	wzr, [x0, #2556]
    bb50:	strh	wzr, [x0, #2560]
    bb54:	strh	wzr, [x0, #2564]
    bb58:	strh	wzr, [x0, #2568]
    bb5c:	strh	wzr, [x0, #2572]
    bb60:	strh	wzr, [x0, #2576]
    bb64:	strh	wzr, [x0, #2580]
    bb68:	strh	wzr, [x0, #2584]
    bb6c:	strh	wzr, [x0, #2588]
    bb70:	strh	wzr, [x0, #2592]
    bb74:	strh	wzr, [x0, #2596]
    bb78:	strh	wzr, [x0, #2600]
    bb7c:	strh	wzr, [x0, #2604]
    bb80:	strh	wzr, [x0, #2608]
    bb84:	strh	wzr, [x0, #2612]
    bb88:	strh	wzr, [x0, #2616]
    bb8c:	strh	wzr, [x0, #2620]
    bb90:	strh	wzr, [x0, #2748]
    bb94:	strh	wzr, [x0, #2752]
    bb98:	strh	wzr, [x0, #2756]
    bb9c:	strh	wzr, [x0, #2760]
    bba0:	strh	wzr, [x0, #2764]
    bba4:	strh	wzr, [x0, #2768]
    bba8:	strh	wzr, [x0, #2772]
    bbac:	strh	wzr, [x0, #2776]
    bbb0:	strh	wzr, [x0, #2780]
    bbb4:	strh	wzr, [x0, #2784]
    bbb8:	strh	wzr, [x0, #2788]
    bbbc:	strh	wzr, [x0, #2792]
    bbc0:	strh	wzr, [x0, #2796]
    bbc4:	strh	wzr, [x0, #2800]
    bbc8:	strh	wzr, [x0, #2804]
    bbcc:	strh	wzr, [x0, #2808]
    bbd0:	strh	wzr, [x0, #2812]
    bbd4:	strh	wzr, [x0, #2816]
    bbd8:	strh	wzr, [x0, #2820]
    bbdc:	str	wzr, [x0, #5900]
    bbe0:	str	q0, [x0, x8]
    bbe4:	str	wzr, [x0, #5928]
    bbe8:	ret
    bbec:	stp	x29, x30, [sp, #-32]!
    bbf0:	stp	x20, x19, [sp, #16]
    bbf4:	ldr	w10, [x0, #5940]
    bbf8:	ldrh	w8, [x0, #5936]
    bbfc:	and	w9, w3, #0xffff
    bc00:	mov	x19, x2
    bc04:	lsl	w11, w9, w10
    bc08:	mov	x20, x0
    bc0c:	orr	w8, w8, w11
    bc10:	cmp	w10, #0xe
    bc14:	mov	x29, sp
    bc18:	strh	w8, [x0, #5936]
    bc1c:	b.lt	bc8c <inflateCodesUsed@@ZLIB_1.2.9+0x850>  // b.tstop
    bc20:	ldr	x10, [x20, #40]
    bc24:	ldr	x11, [x20, #16]
    bc28:	add	x12, x10, #0x1
    bc2c:	str	x12, [x20, #40]
    bc30:	mov	w12, #0x1730                	// #5936
    bc34:	strb	w8, [x11, x10]
    bc38:	add	x12, x20, x12
    bc3c:	ldr	x8, [x20, #40]
    bc40:	ldrb	w10, [x12, #1]
    bc44:	ldr	x11, [x20, #16]
    bc48:	add	x12, x8, #0x1
    bc4c:	str	x12, [x20, #40]
    bc50:	strb	w10, [x11, x8]
    bc54:	ldr	w10, [x20, #5940]
    bc58:	mov	w8, #0x10                  	// #16
    bc5c:	sub	w8, w8, w10
    bc60:	lsr	w8, w9, w8
    bc64:	strh	w8, [x20, #5936]
    bc68:	sub	w9, w10, #0xd
    bc6c:	cmp	w9, #0x9
    bc70:	str	w9, [x20, #5940]
    bc74:	b.ge	bc9c <inflateCodesUsed@@ZLIB_1.2.9+0x860>  // b.tcont
    bc78:	cmp	w9, #0x1
    bc7c:	b.lt	bcd0 <inflateCodesUsed@@ZLIB_1.2.9+0x894>  // b.tstop
    bc80:	ldr	x9, [x20, #40]
    bc84:	ldr	x10, [x20, #16]
    bc88:	b	bcc0 <inflateCodesUsed@@ZLIB_1.2.9+0x884>
    bc8c:	add	w9, w10, #0x3
    bc90:	cmp	w9, #0x9
    bc94:	str	w9, [x20, #5940]
    bc98:	b.lt	bc78 <inflateCodesUsed@@ZLIB_1.2.9+0x83c>  // b.tstop
    bc9c:	ldr	x9, [x20, #40]
    bca0:	ldr	x10, [x20, #16]
    bca4:	add	x11, x9, #0x1
    bca8:	str	x11, [x20, #40]
    bcac:	strb	w8, [x10, x9]
    bcb0:	mov	w8, #0x1731                	// #5937
    bcb4:	ldr	x9, [x20, #40]
    bcb8:	ldr	x10, [x20, #16]
    bcbc:	ldrb	w8, [x20, x8]
    bcc0:	add	x11, x9, #0x1
    bcc4:	add	x9, x10, x9
    bcc8:	str	x11, [x20, #40]
    bccc:	strb	w8, [x9]
    bcd0:	ldr	x8, [x20, #40]
    bcd4:	ldr	x9, [x20, #16]
    bcd8:	strh	wzr, [x20, #5936]
    bcdc:	str	wzr, [x20, #5940]
    bce0:	add	x10, x8, #0x1
    bce4:	str	x10, [x20, #40]
    bce8:	strb	w19, [x9, x8]
    bcec:	ldr	x8, [x20, #40]
    bcf0:	ldr	x9, [x20, #16]
    bcf4:	ubfx	x10, x19, #8, #24
    bcf8:	mov	x2, x19
    bcfc:	add	x11, x8, #0x1
    bd00:	str	x11, [x20, #40]
    bd04:	strb	w10, [x9, x8]
    bd08:	ldr	x8, [x20, #40]
    bd0c:	ldr	x9, [x20, #16]
    bd10:	mvn	w10, w19
    bd14:	add	x11, x8, #0x1
    bd18:	str	x11, [x20, #40]
    bd1c:	strb	w10, [x9, x8]
    bd20:	ldr	x8, [x20, #40]
    bd24:	ldr	x9, [x20, #16]
    bd28:	lsr	w10, w10, #8
    bd2c:	add	x11, x8, #0x1
    bd30:	str	x11, [x20, #40]
    bd34:	strb	w10, [x9, x8]
    bd38:	ldr	x8, [x20, #16]
    bd3c:	ldr	x9, [x20, #40]
    bd40:	add	x0, x8, x9
    bd44:	bl	2310 <memcpy@plt>
    bd48:	ldr	x8, [x20, #40]
    bd4c:	add	x8, x8, x19
    bd50:	str	x8, [x20, #40]
    bd54:	ldp	x20, x19, [sp, #16]
    bd58:	ldp	x29, x30, [sp], #32
    bd5c:	ret
    bd60:	ldr	w8, [x0, #5940]
    bd64:	cmp	w8, #0x10
    bd68:	b.ne	bdb0 <inflateCodesUsed@@ZLIB_1.2.9+0x974>  // b.any
    bd6c:	mov	w9, #0x1730                	// #5936
    bd70:	ldr	x11, [x0, #40]
    bd74:	add	x9, x0, x9
    bd78:	ldr	x10, [x0, #16]
    bd7c:	ldrb	w12, [x9]
    bd80:	add	x13, x11, #0x1
    bd84:	str	x13, [x0, #40]
    bd88:	mov	w8, wzr
    bd8c:	strb	w12, [x10, x11]
    bd90:	ldr	x10, [x0, #40]
    bd94:	ldrb	w9, [x9, #1]
    bd98:	ldr	x11, [x0, #16]
    bd9c:	add	x12, x10, #0x1
    bda0:	str	x12, [x0, #40]
    bda4:	strb	w9, [x11, x10]
    bda8:	strh	wzr, [x0, #5936]
    bdac:	b	bde8 <inflateCodesUsed@@ZLIB_1.2.9+0x9ac>
    bdb0:	cmp	w8, #0x8
    bdb4:	b.lt	bdec <inflateCodesUsed@@ZLIB_1.2.9+0x9b0>  // b.tstop
    bdb8:	mov	w8, #0x1730                	// #5936
    bdbc:	ldr	x10, [x0, #40]
    bdc0:	add	x8, x0, x8
    bdc4:	ldr	x9, [x0, #16]
    bdc8:	ldrb	w11, [x8]
    bdcc:	add	x12, x10, #0x1
    bdd0:	str	x12, [x0, #40]
    bdd4:	strb	w11, [x9, x10]
    bdd8:	ldrb	w8, [x8, #1]
    bddc:	ldr	w9, [x0, #5940]
    bde0:	strh	w8, [x0, #5936]
    bde4:	sub	w8, w9, #0x8
    bde8:	str	w8, [x0, #5940]
    bdec:	ret
    bdf0:	ldr	w10, [x0, #5940]
    bdf4:	ldrh	w8, [x0, #5936]
    bdf8:	mov	w9, #0x2                   	// #2
    bdfc:	lsl	w11, w9, w10
    be00:	orr	w8, w8, w11
    be04:	cmp	w10, #0xe
    be08:	strh	w8, [x0, #5936]
    be0c:	b.lt	beb0 <inflateCodesUsed@@ZLIB_1.2.9+0xa74>  // b.tstop
    be10:	ldr	x10, [x0, #40]
    be14:	ldr	x11, [x0, #16]
    be18:	add	x12, x10, #0x1
    be1c:	str	x12, [x0, #40]
    be20:	mov	w12, #0x1730                	// #5936
    be24:	strb	w8, [x11, x10]
    be28:	add	x12, x0, x12
    be2c:	ldr	x8, [x0, #40]
    be30:	ldrb	w10, [x12, #1]
    be34:	ldr	x11, [x0, #16]
    be38:	add	x12, x8, #0x1
    be3c:	str	x12, [x0, #40]
    be40:	strb	w10, [x11, x8]
    be44:	ldr	w10, [x0, #5940]
    be48:	mov	w8, #0x10                  	// #16
    be4c:	sub	w8, w8, w10
    be50:	lsr	w8, w9, w8
    be54:	strh	w8, [x0, #5936]
    be58:	sub	w9, w10, #0xd
    be5c:	cmp	w9, #0xa
    be60:	str	w9, [x0, #5940]
    be64:	b.ge	bec0 <inflateCodesUsed@@ZLIB_1.2.9+0xa84>  // b.tcont
    be68:	add	w9, w9, #0x7
    be6c:	cmp	w9, #0x10
    be70:	str	w9, [x0, #5940]
    be74:	b.eq	bf10 <inflateCodesUsed@@ZLIB_1.2.9+0xad4>  // b.none
    be78:	cmp	w9, #0x8
    be7c:	b.lt	bf50 <inflateCodesUsed@@ZLIB_1.2.9+0xb14>  // b.tstop
    be80:	ldr	x9, [x0, #40]
    be84:	ldr	x10, [x0, #16]
    be88:	mov	w11, #0x1730                	// #5936
    be8c:	add	x11, x0, x11
    be90:	add	x12, x9, #0x1
    be94:	str	x12, [x0, #40]
    be98:	strb	w8, [x10, x9]
    be9c:	ldr	w9, [x0, #5940]
    bea0:	ldrb	w8, [x11, #1]
    bea4:	sub	w9, w9, #0x8
    bea8:	strh	w8, [x0, #5936]
    beac:	b	bf4c <inflateCodesUsed@@ZLIB_1.2.9+0xb10>
    beb0:	add	w9, w10, #0x3
    beb4:	cmp	w9, #0xa
    beb8:	str	w9, [x0, #5940]
    bebc:	b.lt	be68 <inflateCodesUsed@@ZLIB_1.2.9+0xa2c>  // b.tstop
    bec0:	ldr	x9, [x0, #40]
    bec4:	ldr	x10, [x0, #16]
    bec8:	add	x11, x9, #0x1
    becc:	str	x11, [x0, #40]
    bed0:	mov	w11, #0x1730                	// #5936
    bed4:	strb	w8, [x10, x9]
    bed8:	add	x11, x0, x11
    bedc:	ldr	x8, [x0, #40]
    bee0:	ldrb	w9, [x11, #1]
    bee4:	ldr	x10, [x0, #16]
    bee8:	add	x11, x8, #0x1
    beec:	str	x11, [x0, #40]
    bef0:	strb	w9, [x10, x8]
    bef4:	ldr	w8, [x0, #5940]
    bef8:	strh	wzr, [x0, #5936]
    befc:	sub	w9, w8, #0x9
    bf00:	mov	w8, wzr
    bf04:	cmp	w9, #0x10
    bf08:	str	w9, [x0, #5940]
    bf0c:	b.ne	be78 <inflateCodesUsed@@ZLIB_1.2.9+0xa3c>  // b.any
    bf10:	ldr	x10, [x0, #40]
    bf14:	ldr	x11, [x0, #16]
    bf18:	mov	w12, #0x1730                	// #5936
    bf1c:	add	x12, x0, x12
    bf20:	add	x13, x10, #0x1
    bf24:	str	x13, [x0, #40]
    bf28:	strb	w8, [x11, x10]
    bf2c:	ldr	x8, [x0, #40]
    bf30:	ldrb	w10, [x12, #1]
    bf34:	ldr	x11, [x0, #16]
    bf38:	mov	w9, wzr
    bf3c:	add	x12, x8, #0x1
    bf40:	str	x12, [x0, #40]
    bf44:	strb	w10, [x11, x8]
    bf48:	strh	wzr, [x0, #5936]
    bf4c:	str	w9, [x0, #5940]
    bf50:	ret
    bf54:	stp	x29, x30, [sp, #-64]!
    bf58:	stp	x22, x21, [sp, #32]
    bf5c:	stp	x20, x19, [sp, #48]
    bf60:	ldr	w8, [x0, #196]
    bf64:	mov	w20, w3
    bf68:	mov	x21, x2
    bf6c:	mov	x19, x0
    bf70:	cmp	w8, #0x1
    bf74:	mov	x22, x1
    bf78:	str	x23, [sp, #16]
    bf7c:	mov	x29, sp
    bf80:	b.lt	c304 <inflateCodesUsed@@ZLIB_1.2.9+0xec8>  // b.tstop
    bf84:	ldr	x8, [x19]
    bf88:	ldr	w9, [x8, #88]
    bf8c:	cmp	w9, #0x2
    bf90:	b.ne	c054 <inflateCodesUsed@@ZLIB_1.2.9+0xc18>  // b.any
    bf94:	ldrh	w9, [x19, #212]
    bf98:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bf9c:	ldrh	w9, [x19, #216]
    bfa0:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfa4:	ldrh	w9, [x19, #220]
    bfa8:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfac:	ldrh	w9, [x19, #224]
    bfb0:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfb4:	ldrh	w9, [x19, #228]
    bfb8:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfbc:	ldrh	w9, [x19, #232]
    bfc0:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfc4:	ldrh	w9, [x19, #236]
    bfc8:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfcc:	ldrh	w9, [x19, #268]
    bfd0:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfd4:	ldrh	w9, [x19, #272]
    bfd8:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfdc:	ldrh	w9, [x19, #276]
    bfe0:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfe4:	ldrh	w9, [x19, #280]
    bfe8:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bfec:	ldrh	w9, [x19, #284]
    bff0:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bff4:	ldrh	w9, [x19, #288]
    bff8:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    bffc:	ldrh	w9, [x19, #292]
    c000:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c004:	ldrh	w9, [x19, #296]
    c008:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c00c:	ldrh	w9, [x19, #300]
    c010:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c014:	ldrh	w9, [x19, #304]
    c018:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c01c:	ldrh	w9, [x19, #308]
    c020:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c024:	ldrh	w9, [x19, #312]
    c028:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c02c:	ldrh	w9, [x19, #324]
    c030:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c034:	ldrh	w9, [x19, #328]
    c038:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c03c:	ldrh	w9, [x19, #332]
    c040:	cbnz	w9, c04c <inflateCodesUsed@@ZLIB_1.2.9+0xc10>
    c044:	ldrh	w9, [x19, #336]
    c048:	cbz	w9, c868 <inflateCodesUsed@@ZLIB_1.2.9+0x142c>
    c04c:	mov	w9, wzr
    c050:	str	w9, [x8, #88]
    c054:	add	x1, x19, #0xb58
    c058:	mov	x0, x19
    c05c:	bl	c8a8 <inflateCodesUsed@@ZLIB_1.2.9+0x146c>
    c060:	add	x1, x19, #0xb70
    c064:	mov	x0, x19
    c068:	bl	c8a8 <inflateCodesUsed@@ZLIB_1.2.9+0x146c>
    c06c:	ldr	w10, [x19, #2912]
    c070:	ldrh	w9, [x19, #214]
    c074:	mov	w8, #0xffff                	// #65535
    c078:	add	w14, w10, #0x1
    c07c:	add	x11, x19, w14, sxtw #2
    c080:	strh	w8, [x11, #214]
    c084:	tbnz	w10, #31, c1ac <inflateCodesUsed@@ZLIB_1.2.9+0xd70>
    c088:	cmp	w9, #0x0
    c08c:	mov	w10, #0x3                   	// #3
    c090:	mov	w16, #0x7                   	// #7
    c094:	mov	w17, #0x8a                  	// #138
    c098:	mov	w1, wzr
    c09c:	add	x11, x19, #0xafc
    c0a0:	add	x12, x19, #0xb04
    c0a4:	add	x13, x19, #0xb00
    c0a8:	mov	w14, w14
    c0ac:	add	x15, x19, #0xda
    c0b0:	mov	w3, #0xffffffff            	// #-1
    c0b4:	cinc	w18, w10, ne  // ne = any
    c0b8:	csel	w0, w17, w16, eq  // eq = none
    c0bc:	mov	w16, #0x6                   	// #6
    c0c0:	b	c0dc <inflateCodesUsed@@ZLIB_1.2.9+0xca0>
    c0c4:	mov	w17, w3
    c0c8:	subs	x14, x14, #0x1
    c0cc:	add	x15, x15, #0x4
    c0d0:	mov	w1, w2
    c0d4:	mov	w3, w17
    c0d8:	b.eq	c1ac <inflateCodesUsed@@ZLIB_1.2.9+0xd70>  // b.none
    c0dc:	mov	w17, w9
    c0e0:	ldrh	w9, [x15]
    c0e4:	add	w2, w1, #0x1
    c0e8:	cmp	w2, w0
    c0ec:	b.ge	c0f8 <inflateCodesUsed@@ZLIB_1.2.9+0xcbc>  // b.tcont
    c0f0:	cmp	w17, w9
    c0f4:	b.eq	c0c4 <inflateCodesUsed@@ZLIB_1.2.9+0xc88>  // b.none
    c0f8:	cmp	w2, w18
    c0fc:	b.ge	c12c <inflateCodesUsed@@ZLIB_1.2.9+0xcf0>  // b.tcont
    c100:	add	x18, x19, w17, uxtw #2
    c104:	ldrh	w1, [x18, #2748]
    c108:	add	x0, x18, #0xabc
    c10c:	add	w18, w1, w2
    c110:	mov	w2, wzr
    c114:	strh	w18, [x0]
    c118:	cbz	w9, c160 <inflateCodesUsed@@ZLIB_1.2.9+0xd24>
    c11c:	cmp	w17, w9
    c120:	cinc	w0, w16, ne  // ne = any
    c124:	cinc	w18, w10, ne  // ne = any
    c128:	b	c0c8 <inflateCodesUsed@@ZLIB_1.2.9+0xc8c>
    c12c:	cbz	w17, c16c <inflateCodesUsed@@ZLIB_1.2.9+0xd30>
    c130:	cmp	w17, w3
    c134:	b.eq	c148 <inflateCodesUsed@@ZLIB_1.2.9+0xd0c>  // b.none
    c138:	add	x18, x19, w17, uxtw #2
    c13c:	ldrh	w0, [x18, #2748]
    c140:	add	w0, w0, #0x1
    c144:	strh	w0, [x18, #2748]
    c148:	ldrh	w18, [x11]
    c14c:	mov	x0, x11
    c150:	add	w18, w18, #0x1
    c154:	mov	w2, wzr
    c158:	strh	w18, [x0]
    c15c:	cbnz	w9, c11c <inflateCodesUsed@@ZLIB_1.2.9+0xce0>
    c160:	mov	w18, #0x3                   	// #3
    c164:	mov	w0, #0x8a                  	// #138
    c168:	b	c0c8 <inflateCodesUsed@@ZLIB_1.2.9+0xc8c>
    c16c:	cmp	w1, #0x9
    c170:	b.gt	c190 <inflateCodesUsed@@ZLIB_1.2.9+0xd54>
    c174:	ldrh	w18, [x13]
    c178:	mov	x0, x13
    c17c:	add	w18, w18, #0x1
    c180:	mov	w2, wzr
    c184:	strh	w18, [x0]
    c188:	cbnz	w9, c11c <inflateCodesUsed@@ZLIB_1.2.9+0xce0>
    c18c:	b	c160 <inflateCodesUsed@@ZLIB_1.2.9+0xd24>
    c190:	ldrh	w18, [x12]
    c194:	mov	x0, x12
    c198:	add	w18, w18, #0x1
    c19c:	mov	w2, wzr
    c1a0:	strh	w18, [x0]
    c1a4:	cbnz	w9, c11c <inflateCodesUsed@@ZLIB_1.2.9+0xce0>
    c1a8:	b	c160 <inflateCodesUsed@@ZLIB_1.2.9+0xd24>
    c1ac:	ldr	w10, [x19, #2936]
    c1b0:	ldrh	w9, [x19, #2506]
    c1b4:	add	w13, w10, #0x1
    c1b8:	add	x11, x19, w13, sxtw #2
    c1bc:	strh	w8, [x11, #2506]
    c1c0:	tbnz	w10, #31, c2e8 <inflateCodesUsed@@ZLIB_1.2.9+0xeac>
    c1c4:	cmp	w9, #0x0
    c1c8:	mov	w8, #0x3                   	// #3
    c1cc:	mov	w15, #0x7                   	// #7
    c1d0:	mov	w16, #0x8a                  	// #138
    c1d4:	mov	w0, wzr
    c1d8:	add	x10, x19, #0xafc
    c1dc:	add	x11, x19, #0xb04
    c1e0:	add	x12, x19, #0xb00
    c1e4:	mov	w13, w13
    c1e8:	add	x14, x19, #0x9ce
    c1ec:	mov	w2, #0xffffffff            	// #-1
    c1f0:	cinc	w17, w8, ne  // ne = any
    c1f4:	csel	w18, w16, w15, eq  // eq = none
    c1f8:	mov	w15, #0x6                   	// #6
    c1fc:	b	c218 <inflateCodesUsed@@ZLIB_1.2.9+0xddc>
    c200:	mov	w16, w2
    c204:	subs	x13, x13, #0x1
    c208:	add	x14, x14, #0x4
    c20c:	mov	w0, w1
    c210:	mov	w2, w16
    c214:	b.eq	c2e8 <inflateCodesUsed@@ZLIB_1.2.9+0xeac>  // b.none
    c218:	mov	w16, w9
    c21c:	ldrh	w9, [x14]
    c220:	add	w1, w0, #0x1
    c224:	cmp	w1, w18
    c228:	b.ge	c234 <inflateCodesUsed@@ZLIB_1.2.9+0xdf8>  // b.tcont
    c22c:	cmp	w16, w9
    c230:	b.eq	c200 <inflateCodesUsed@@ZLIB_1.2.9+0xdc4>  // b.none
    c234:	cmp	w1, w17
    c238:	b.ge	c268 <inflateCodesUsed@@ZLIB_1.2.9+0xe2c>  // b.tcont
    c23c:	add	x17, x19, w16, uxtw #2
    c240:	ldrh	w0, [x17, #2748]
    c244:	add	x18, x17, #0xabc
    c248:	add	w17, w0, w1
    c24c:	mov	w1, wzr
    c250:	strh	w17, [x18]
    c254:	cbz	w9, c29c <inflateCodesUsed@@ZLIB_1.2.9+0xe60>
    c258:	cmp	w16, w9
    c25c:	cinc	w18, w15, ne  // ne = any
    c260:	cinc	w17, w8, ne  // ne = any
    c264:	b	c204 <inflateCodesUsed@@ZLIB_1.2.9+0xdc8>
    c268:	cbz	w16, c2a8 <inflateCodesUsed@@ZLIB_1.2.9+0xe6c>
    c26c:	cmp	w16, w2
    c270:	b.eq	c284 <inflateCodesUsed@@ZLIB_1.2.9+0xe48>  // b.none
    c274:	add	x17, x19, w16, uxtw #2
    c278:	ldrh	w18, [x17, #2748]
    c27c:	add	w18, w18, #0x1
    c280:	strh	w18, [x17, #2748]
    c284:	ldrh	w17, [x10]
    c288:	mov	x18, x10
    c28c:	add	w17, w17, #0x1
    c290:	mov	w1, wzr
    c294:	strh	w17, [x18]
    c298:	cbnz	w9, c258 <inflateCodesUsed@@ZLIB_1.2.9+0xe1c>
    c29c:	mov	w17, #0x3                   	// #3
    c2a0:	mov	w18, #0x8a                  	// #138
    c2a4:	b	c204 <inflateCodesUsed@@ZLIB_1.2.9+0xdc8>
    c2a8:	cmp	w0, #0x9
    c2ac:	b.gt	c2cc <inflateCodesUsed@@ZLIB_1.2.9+0xe90>
    c2b0:	ldrh	w17, [x12]
    c2b4:	mov	x18, x12
    c2b8:	add	w17, w17, #0x1
    c2bc:	mov	w1, wzr
    c2c0:	strh	w17, [x18]
    c2c4:	cbnz	w9, c258 <inflateCodesUsed@@ZLIB_1.2.9+0xe1c>
    c2c8:	b	c29c <inflateCodesUsed@@ZLIB_1.2.9+0xe60>
    c2cc:	ldrh	w17, [x11]
    c2d0:	mov	x18, x11
    c2d4:	add	w17, w17, #0x1
    c2d8:	mov	w1, wzr
    c2dc:	strh	w17, [x18]
    c2e0:	cbnz	w9, c258 <inflateCodesUsed@@ZLIB_1.2.9+0xe1c>
    c2e4:	b	c29c <inflateCodesUsed@@ZLIB_1.2.9+0xe60>
    c2e8:	add	x1, x19, #0xb88
    c2ec:	mov	x0, x19
    c2f0:	bl	c8a8 <inflateCodesUsed@@ZLIB_1.2.9+0x146c>
    c2f4:	ldrh	w8, [x19, #2810]
    c2f8:	cbz	w8, c318 <inflateCodesUsed@@ZLIB_1.2.9+0xedc>
    c2fc:	mov	w8, #0x12                  	// #18
    c300:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c304:	add	x9, x21, #0x5
    c308:	mov	w8, wzr
    c30c:	mov	x11, x9
    c310:	cbnz	x22, c43c <inflateCodesUsed@@ZLIB_1.2.9+0x1000>
    c314:	b	c46c <inflateCodesUsed@@ZLIB_1.2.9+0x1030>
    c318:	ldrh	w8, [x19, #2754]
    c31c:	cbz	w8, c328 <inflateCodesUsed@@ZLIB_1.2.9+0xeec>
    c320:	mov	w8, #0x11                  	// #17
    c324:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c328:	ldrh	w8, [x19, #2806]
    c32c:	cbz	w8, c338 <inflateCodesUsed@@ZLIB_1.2.9+0xefc>
    c330:	mov	w8, #0x10                  	// #16
    c334:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c338:	ldrh	w8, [x19, #2758]
    c33c:	cbz	w8, c348 <inflateCodesUsed@@ZLIB_1.2.9+0xf0c>
    c340:	mov	w8, #0xf                   	// #15
    c344:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c348:	ldrh	w8, [x19, #2802]
    c34c:	cbz	w8, c358 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    c350:	mov	w8, #0xe                   	// #14
    c354:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c358:	ldrh	w8, [x19, #2762]
    c35c:	cbz	w8, c368 <inflateCodesUsed@@ZLIB_1.2.9+0xf2c>
    c360:	mov	w8, #0xd                   	// #13
    c364:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c368:	ldrh	w8, [x19, #2798]
    c36c:	cbz	w8, c378 <inflateCodesUsed@@ZLIB_1.2.9+0xf3c>
    c370:	mov	w8, #0xc                   	// #12
    c374:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c378:	ldrh	w8, [x19, #2766]
    c37c:	cbz	w8, c388 <inflateCodesUsed@@ZLIB_1.2.9+0xf4c>
    c380:	mov	w8, #0xb                   	// #11
    c384:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c388:	ldrh	w8, [x19, #2794]
    c38c:	cbz	w8, c398 <inflateCodesUsed@@ZLIB_1.2.9+0xf5c>
    c390:	mov	w8, #0xa                   	// #10
    c394:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c398:	ldrh	w8, [x19, #2770]
    c39c:	cbz	w8, c3a8 <inflateCodesUsed@@ZLIB_1.2.9+0xf6c>
    c3a0:	mov	w8, #0x9                   	// #9
    c3a4:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c3a8:	ldrh	w8, [x19, #2790]
    c3ac:	cbz	w8, c3b8 <inflateCodesUsed@@ZLIB_1.2.9+0xf7c>
    c3b0:	mov	w8, #0x8                   	// #8
    c3b4:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c3b8:	ldrh	w8, [x19, #2774]
    c3bc:	cbz	w8, c3c8 <inflateCodesUsed@@ZLIB_1.2.9+0xf8c>
    c3c0:	mov	w8, #0x7                   	// #7
    c3c4:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c3c8:	ldrh	w8, [x19, #2786]
    c3cc:	cbz	w8, c3d8 <inflateCodesUsed@@ZLIB_1.2.9+0xf9c>
    c3d0:	mov	w8, #0x6                   	// #6
    c3d4:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c3d8:	ldrh	w8, [x19, #2778]
    c3dc:	cbz	w8, c3e8 <inflateCodesUsed@@ZLIB_1.2.9+0xfac>
    c3e0:	mov	w8, #0x5                   	// #5
    c3e4:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c3e8:	ldrh	w8, [x19, #2782]
    c3ec:	cbz	w8, c3f8 <inflateCodesUsed@@ZLIB_1.2.9+0xfbc>
    c3f0:	mov	w8, #0x4                   	// #4
    c3f4:	b	c408 <inflateCodesUsed@@ZLIB_1.2.9+0xfcc>
    c3f8:	ldrh	w8, [x19, #2750]
    c3fc:	cmp	w8, #0x0
    c400:	mov	w8, #0x2                   	// #2
    c404:	cinc	w8, w8, ne  // ne = any
    c408:	ldr	x9, [x19, #5912]
    c40c:	ldr	x10, [x19, #5920]
    c410:	add	w11, w8, w8, lsl #1
    c414:	add	w11, w11, #0x11
    c418:	add	x9, x9, x11
    c41c:	add	x10, x10, #0xa
    c420:	str	x9, [x19, #5912]
    c424:	add	x9, x9, #0xa
    c428:	lsr	x11, x9, #3
    c42c:	lsr	x9, x10, #3
    c430:	cmp	x9, x11
    c434:	csel	x11, x11, x9, hi  // hi = pmore
    c438:	cbz	x22, c46c <inflateCodesUsed@@ZLIB_1.2.9+0x1030>
    c43c:	add	x10, x21, #0x4
    c440:	cmp	x10, x11
    c444:	b.hi	c46c <inflateCodesUsed@@ZLIB_1.2.9+0x1030>  // b.pmore
    c448:	mov	x0, x19
    c44c:	mov	x1, x22
    c450:	mov	x2, x21
    c454:	mov	w3, w20
    c458:	bl	bbec <inflateCodesUsed@@ZLIB_1.2.9+0x7b0>
    c45c:	mov	x0, x19
    c460:	bl	baec <inflateCodesUsed@@ZLIB_1.2.9+0x6b0>
    c464:	cbnz	w20, c7e8 <inflateCodesUsed@@ZLIB_1.2.9+0x13ac>
    c468:	b	c854 <inflateCodesUsed@@ZLIB_1.2.9+0x1418>
    c46c:	ldr	w10, [x19, #5940]
    c470:	cmp	x9, x11
    c474:	b.eq	c4f4 <inflateCodesUsed@@ZLIB_1.2.9+0x10b8>  // b.none
    c478:	ldr	w9, [x19, #200]
    c47c:	cmp	w9, #0x4
    c480:	b.eq	c4f4 <inflateCodesUsed@@ZLIB_1.2.9+0x10b8>  // b.none
    c484:	ldrh	w9, [x19, #5936]
    c488:	add	w11, w20, #0x4
    c48c:	and	w11, w11, #0xffff
    c490:	lsl	w12, w11, w10
    c494:	orr	w9, w9, w12
    c498:	cmp	w10, #0xe
    c49c:	strh	w9, [x19, #5936]
    c4a0:	b.lt	c594 <inflateCodesUsed@@ZLIB_1.2.9+0x1158>  // b.tstop
    c4a4:	ldr	x10, [x19, #40]
    c4a8:	ldr	x12, [x19, #16]
    c4ac:	add	x13, x10, #0x1
    c4b0:	str	x13, [x19, #40]
    c4b4:	mov	w13, #0x1730                	// #5936
    c4b8:	strb	w9, [x12, x10]
    c4bc:	add	x13, x19, x13
    c4c0:	ldr	x9, [x19, #40]
    c4c4:	ldrb	w10, [x13, #1]
    c4c8:	ldr	x12, [x19, #16]
    c4cc:	add	x13, x9, #0x1
    c4d0:	str	x13, [x19, #40]
    c4d4:	strb	w10, [x12, x9]
    c4d8:	ldr	w10, [x19, #5940]
    c4dc:	mov	w9, #0x10                  	// #16
    c4e0:	sub	w9, w9, w10
    c4e4:	lsr	w9, w11, w9
    c4e8:	strh	w9, [x19, #5936]
    c4ec:	sub	w11, w10, #0xd
    c4f0:	b	c598 <inflateCodesUsed@@ZLIB_1.2.9+0x115c>
    c4f4:	ldrh	w9, [x19, #5936]
    c4f8:	add	w8, w20, #0x2
    c4fc:	and	w8, w8, #0xffff
    c500:	lsl	w11, w8, w10
    c504:	orr	w9, w9, w11
    c508:	cmp	w10, #0xe
    c50c:	strh	w9, [x19, #5936]
    c510:	b.lt	c564 <inflateCodesUsed@@ZLIB_1.2.9+0x1128>  // b.tstop
    c514:	ldr	x10, [x19, #40]
    c518:	ldr	x11, [x19, #16]
    c51c:	add	x12, x10, #0x1
    c520:	str	x12, [x19, #40]
    c524:	mov	w12, #0x1730                	// #5936
    c528:	strb	w9, [x11, x10]
    c52c:	add	x12, x19, x12
    c530:	ldr	x9, [x19, #40]
    c534:	ldrb	w10, [x12, #1]
    c538:	ldr	x11, [x19, #16]
    c53c:	add	x12, x9, #0x1
    c540:	str	x12, [x19, #40]
    c544:	strb	w10, [x11, x9]
    c548:	ldr	w9, [x19, #5940]
    c54c:	mov	w10, #0x10                  	// #16
    c550:	sub	w10, w10, w9
    c554:	lsr	w8, w8, w10
    c558:	strh	w8, [x19, #5936]
    c55c:	sub	w8, w9, #0xd
    c560:	b	c568 <inflateCodesUsed@@ZLIB_1.2.9+0x112c>
    c564:	add	w8, w10, #0x3
    c568:	adrp	x1, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    c56c:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    c570:	str	w8, [x19, #5940]
    c574:	add	x1, x1, #0xeb8
    c578:	add	x2, x2, #0x338
    c57c:	mov	x0, x19
    c580:	bl	d194 <inflateCodesUsed@@ZLIB_1.2.9+0x1d58>
    c584:	mov	x0, x19
    c588:	bl	baec <inflateCodesUsed@@ZLIB_1.2.9+0x6b0>
    c58c:	cbnz	w20, c7e8 <inflateCodesUsed@@ZLIB_1.2.9+0x13ac>
    c590:	b	c854 <inflateCodesUsed@@ZLIB_1.2.9+0x1418>
    c594:	add	w11, w10, #0x3
    c598:	ldr	w2, [x19, #2912]
    c59c:	mov	w10, #0xff00                	// #65280
    c5a0:	ldr	w21, [x19, #2936]
    c5a4:	cmp	w11, #0xc
    c5a8:	add	w10, w2, w10
    c5ac:	and	w10, w10, #0xffff
    c5b0:	lsl	w12, w10, w11
    c5b4:	orr	w9, w9, w12
    c5b8:	str	w11, [x19, #5940]
    c5bc:	strh	w9, [x19, #5936]
    c5c0:	b.lt	c614 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>  // b.tstop
    c5c4:	ldr	x11, [x19, #40]
    c5c8:	ldr	x12, [x19, #16]
    c5cc:	add	x13, x11, #0x1
    c5d0:	str	x13, [x19, #40]
    c5d4:	mov	w13, #0x1730                	// #5936
    c5d8:	strb	w9, [x12, x11]
    c5dc:	add	x13, x19, x13
    c5e0:	ldr	x9, [x19, #40]
    c5e4:	ldrb	w11, [x13, #1]
    c5e8:	ldr	x12, [x19, #16]
    c5ec:	add	x13, x9, #0x1
    c5f0:	str	x13, [x19, #40]
    c5f4:	strb	w11, [x12, x9]
    c5f8:	ldr	w11, [x19, #5940]
    c5fc:	mov	w9, #0x10                  	// #16
    c600:	sub	w9, w9, w11
    c604:	lsr	w9, w10, w9
    c608:	strh	w9, [x19, #5936]
    c60c:	sub	w12, w11, #0xb
    c610:	b	c618 <inflateCodesUsed@@ZLIB_1.2.9+0x11dc>
    c614:	add	w12, w11, #0x5
    c618:	and	w11, w21, #0xffff
    c61c:	lsl	w10, w11, w12
    c620:	orr	w10, w9, w10
    c624:	cmp	w12, #0xc
    c628:	str	w12, [x19, #5940]
    c62c:	strh	w10, [x19, #5936]
    c630:	b.lt	c684 <inflateCodesUsed@@ZLIB_1.2.9+0x1248>  // b.tstop
    c634:	ldr	x9, [x19, #40]
    c638:	ldr	x12, [x19, #16]
    c63c:	add	x13, x9, #0x1
    c640:	str	x13, [x19, #40]
    c644:	mov	w13, #0x1730                	// #5936
    c648:	strb	w10, [x12, x9]
    c64c:	add	x13, x19, x13
    c650:	ldr	x9, [x19, #40]
    c654:	ldrb	w10, [x13, #1]
    c658:	ldr	x12, [x19, #16]
    c65c:	add	x13, x9, #0x1
    c660:	str	x13, [x19, #40]
    c664:	strb	w10, [x12, x9]
    c668:	ldr	w9, [x19, #5940]
    c66c:	mov	w10, #0x10                  	// #16
    c670:	sub	w10, w10, w9
    c674:	lsr	w10, w11, w10
    c678:	strh	w10, [x19, #5936]
    c67c:	sub	w12, w9, #0xb
    c680:	b	c688 <inflateCodesUsed@@ZLIB_1.2.9+0x124c>
    c684:	add	w12, w12, #0x5
    c688:	mov	w11, #0xfffd                	// #65533
    c68c:	add	w9, w8, #0x1
    c690:	add	w8, w8, w11
    c694:	and	w11, w8, #0xffff
    c698:	lsl	w8, w11, w12
    c69c:	orr	w8, w10, w8
    c6a0:	cmp	w12, #0xd
    c6a4:	str	w12, [x19, #5940]
    c6a8:	strh	w8, [x19, #5936]
    c6ac:	b.lt	c700 <inflateCodesUsed@@ZLIB_1.2.9+0x12c4>  // b.tstop
    c6b0:	ldr	x10, [x19, #40]
    c6b4:	ldr	x12, [x19, #16]
    c6b8:	add	x13, x10, #0x1
    c6bc:	str	x13, [x19, #40]
    c6c0:	mov	w13, #0x1730                	// #5936
    c6c4:	strb	w8, [x12, x10]
    c6c8:	add	x13, x19, x13
    c6cc:	ldr	x8, [x19, #40]
    c6d0:	ldrb	w10, [x13, #1]
    c6d4:	ldr	x12, [x19, #16]
    c6d8:	add	x13, x8, #0x1
    c6dc:	str	x13, [x19, #40]
    c6e0:	strb	w10, [x12, x8]
    c6e4:	ldr	w10, [x19, #5940]
    c6e8:	mov	w8, #0x10                  	// #16
    c6ec:	sub	w8, w8, w10
    c6f0:	lsr	w8, w11, w8
    c6f4:	strh	w8, [x19, #5936]
    c6f8:	sub	w11, w10, #0xc
    c6fc:	b	c704 <inflateCodesUsed@@ZLIB_1.2.9+0x12c8>
    c700:	add	w11, w12, #0x4
    c704:	adrp	x10, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    c708:	mov	w12, #0x1730                	// #5936
    c70c:	mov	w9, w9
    c710:	add	x10, x10, #0x4e8
    c714:	add	x12, x19, x12
    c718:	mov	w13, #0x10                  	// #16
    c71c:	str	w11, [x19, #5940]
    c720:	b	c738 <inflateCodesUsed@@ZLIB_1.2.9+0x12fc>
    c724:	add	w11, w11, #0x3
    c728:	subs	x9, x9, #0x1
    c72c:	add	x10, x10, #0x1
    c730:	str	w11, [x19, #5940]
    c734:	b.eq	c7a8 <inflateCodesUsed@@ZLIB_1.2.9+0x136c>  // b.none
    c738:	ldrb	w14, [x10]
    c73c:	cmp	w11, #0xe
    c740:	add	x14, x19, x14, lsl #2
    c744:	ldrh	w14, [x14, #2750]
    c748:	lsl	w15, w14, w11
    c74c:	orr	w8, w8, w15
    c750:	strh	w8, [x19, #5936]
    c754:	b.lt	c724 <inflateCodesUsed@@ZLIB_1.2.9+0x12e8>  // b.tstop
    c758:	ldr	x11, [x19, #40]
    c75c:	ldr	x15, [x19, #16]
    c760:	add	x16, x11, #0x1
    c764:	str	x16, [x19, #40]
    c768:	strb	w8, [x15, x11]
    c76c:	ldr	x8, [x19, #40]
    c770:	ldrb	w11, [x12, #1]
    c774:	ldr	x15, [x19, #16]
    c778:	add	x16, x8, #0x1
    c77c:	str	x16, [x19, #40]
    c780:	strb	w11, [x15, x8]
    c784:	ldr	w11, [x19, #5940]
    c788:	sub	w8, w13, w11
    c78c:	lsr	w8, w14, w8
    c790:	strh	w8, [x19, #5936]
    c794:	sub	w11, w11, #0xd
    c798:	subs	x9, x9, #0x1
    c79c:	add	x10, x10, #0x1
    c7a0:	str	w11, [x19, #5940]
    c7a4:	b.ne	c738 <inflateCodesUsed@@ZLIB_1.2.9+0x12fc>  // b.any
    c7a8:	add	x22, x19, #0xd4
    c7ac:	mov	x0, x19
    c7b0:	mov	x1, x22
    c7b4:	bl	d618 <inflateCodesUsed@@ZLIB_1.2.9+0x21dc>
    c7b8:	add	x23, x19, #0x9c8
    c7bc:	mov	x0, x19
    c7c0:	mov	x1, x23
    c7c4:	mov	w2, w21
    c7c8:	bl	d618 <inflateCodesUsed@@ZLIB_1.2.9+0x21dc>
    c7cc:	mov	x0, x19
    c7d0:	mov	x1, x22
    c7d4:	mov	x2, x23
    c7d8:	bl	d194 <inflateCodesUsed@@ZLIB_1.2.9+0x1d58>
    c7dc:	mov	x0, x19
    c7e0:	bl	baec <inflateCodesUsed@@ZLIB_1.2.9+0x6b0>
    c7e4:	cbz	w20, c854 <inflateCodesUsed@@ZLIB_1.2.9+0x1418>
    c7e8:	ldr	w8, [x19, #5940]
    c7ec:	cmp	w8, #0x9
    c7f0:	b.lt	c824 <inflateCodesUsed@@ZLIB_1.2.9+0x13e8>  // b.tstop
    c7f4:	mov	w8, #0x1730                	// #5936
    c7f8:	ldr	x10, [x19, #40]
    c7fc:	add	x8, x19, x8
    c800:	ldr	x9, [x19, #16]
    c804:	ldrb	w11, [x8]
    c808:	add	x12, x10, #0x1
    c80c:	str	x12, [x19, #40]
    c810:	strb	w11, [x9, x10]
    c814:	ldr	x9, [x19, #40]
    c818:	ldr	x10, [x19, #16]
    c81c:	ldrb	w8, [x8, #1]
    c820:	b	c83c <inflateCodesUsed@@ZLIB_1.2.9+0x1400>
    c824:	cmp	w8, #0x1
    c828:	b.lt	c84c <inflateCodesUsed@@ZLIB_1.2.9+0x1410>  // b.tstop
    c82c:	mov	w8, #0x1730                	// #5936
    c830:	ldr	x9, [x19, #40]
    c834:	ldr	x10, [x19, #16]
    c838:	ldrb	w8, [x19, x8]
    c83c:	add	x11, x9, #0x1
    c840:	add	x9, x10, x9
    c844:	str	x11, [x19, #40]
    c848:	strb	w8, [x9]
    c84c:	strh	wzr, [x19, #5936]
    c850:	str	wzr, [x19, #5940]
    c854:	ldp	x20, x19, [sp, #48]
    c858:	ldp	x22, x21, [sp, #32]
    c85c:	ldr	x23, [sp, #16]
    c860:	ldp	x29, x30, [sp], #64
    c864:	ret
    c868:	ldrh	w9, [x19, #248]
    c86c:	cbnz	w9, c880 <inflateCodesUsed@@ZLIB_1.2.9+0x1444>
    c870:	ldrh	w9, [x19, #252]
    c874:	cbnz	w9, c880 <inflateCodesUsed@@ZLIB_1.2.9+0x1444>
    c878:	ldrh	w9, [x19, #264]
    c87c:	cbz	w9, c888 <inflateCodesUsed@@ZLIB_1.2.9+0x144c>
    c880:	mov	w9, #0x1                   	// #1
    c884:	b	c050 <inflateCodesUsed@@ZLIB_1.2.9+0xc14>
    c888:	mov	x10, xzr
    c88c:	add	x11, x19, #0x154
    c890:	ldrh	w9, [x11, x10]
    c894:	cbnz	w9, c880 <inflateCodesUsed@@ZLIB_1.2.9+0x1444>
    c898:	add	x10, x10, #0x4
    c89c:	cmp	x10, #0x380
    c8a0:	b.ne	c890 <inflateCodesUsed@@ZLIB_1.2.9+0x1454>  // b.any
    c8a4:	b	c050 <inflateCodesUsed@@ZLIB_1.2.9+0xc14>
    c8a8:	sub	sp, sp, #0x20
    c8ac:	ldr	x9, [x1, #16]
    c8b0:	ldr	x8, [x1]
    c8b4:	ldr	x12, [x9]
    c8b8:	ldr	w10, [x9, #20]
    c8bc:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    c8c0:	ldr	d0, [x9, #2992]
    c8c4:	mov	w9, #0x14b4                	// #5300
    c8c8:	add	x11, x0, x9
    c8cc:	cmp	w10, #0x1
    c8d0:	str	d0, [x11]
    c8d4:	b.lt	c9b4 <inflateCodesUsed@@ZLIB_1.2.9+0x1578>  // b.tstop
    c8d8:	mov	w9, #0x14bc                	// #5308
    c8dc:	mov	x13, xzr
    c8e0:	add	x14, x8, #0x2
    c8e4:	add	x15, x0, x9
    c8e8:	mov	w9, #0xffffffff            	// #-1
    c8ec:	b	c900 <inflateCodesUsed@@ZLIB_1.2.9+0x14c4>
    c8f0:	strh	wzr, [x14], #4
    c8f4:	add	x13, x13, #0x1
    c8f8:	cmp	x10, x13
    c8fc:	b.eq	c934 <inflateCodesUsed@@ZLIB_1.2.9+0x14f8>  // b.none
    c900:	ldurh	w16, [x14, #-2]
    c904:	cbz	w16, c8f0 <inflateCodesUsed@@ZLIB_1.2.9+0x14b4>
    c908:	ldrsw	x9, [x0, #5300]
    c90c:	add	x9, x9, #0x1
    c910:	str	w9, [x0, #5300]
    c914:	add	x9, x0, x9, lsl #2
    c918:	str	w13, [x9, #3008]
    c91c:	strb	wzr, [x15, x13]
    c920:	mov	w9, w13
    c924:	add	x13, x13, #0x1
    c928:	cmp	x10, x13
    c92c:	add	x14, x14, #0x4
    c930:	b.ne	c900 <inflateCodesUsed@@ZLIB_1.2.9+0x14c4>  // b.any
    c934:	ldr	w15, [x11]
    c938:	cmp	w15, #0x1
    c93c:	b.gt	ca18 <inflateCodesUsed@@ZLIB_1.2.9+0x15dc>
    c940:	cbz	x12, c9c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1584>
    c944:	mov	w13, #0x1                   	// #1
    c948:	mov	w14, #0x14bc                	// #5308
    c94c:	mov	w16, w9
    c950:	sxtw	x9, w15
    c954:	cmp	w16, #0x2
    c958:	add	x9, x9, #0x1
    c95c:	csinc	w15, wzr, w16, ge  // ge = tcont
    c960:	str	w9, [x0, #5300]
    c964:	add	x9, x0, x9, lsl #2
    c968:	sbfiz	x17, x15, #2, #32
    c96c:	str	w15, [x9, #3008]
    c970:	add	x9, x0, w15, sxtw
    c974:	strh	w13, [x8, x17]
    c978:	strb	wzr, [x9, x14]
    c97c:	ldr	x9, [x0, #5912]
    c980:	add	x15, x12, x17
    c984:	ldr	x17, [x0, #5920]
    c988:	sub	x9, x9, #0x1
    c98c:	str	x9, [x0, #5912]
    c990:	ldrh	w9, [x15, #2]
    c994:	ldr	w15, [x0, #5300]
    c998:	sub	x17, x17, x9
    c99c:	cinc	w9, w16, lt  // lt = tstop
    c9a0:	cmp	w15, #0x2
    c9a4:	mov	w16, w9
    c9a8:	str	x17, [x0, #5920]
    c9ac:	b.lt	c950 <inflateCodesUsed@@ZLIB_1.2.9+0x1514>  // b.tstop
    c9b0:	b	ca18 <inflateCodesUsed@@ZLIB_1.2.9+0x15dc>
    c9b4:	mov	w15, wzr
    c9b8:	mov	w9, #0xffffffff            	// #-1
    c9bc:	cbnz	x12, c944 <inflateCodesUsed@@ZLIB_1.2.9+0x1508>
    c9c0:	mov	w12, #0x1                   	// #1
    c9c4:	mov	w13, #0x14bc                	// #5308
    c9c8:	mov	w14, w9
    c9cc:	sxtw	x9, w15
    c9d0:	cmp	w14, #0x2
    c9d4:	add	x9, x9, #0x1
    c9d8:	csinc	w15, wzr, w14, ge  // ge = tcont
    c9dc:	str	w9, [x0, #5300]
    c9e0:	add	x9, x0, x9, lsl #2
    c9e4:	str	w15, [x9, #3008]
    c9e8:	sbfiz	x9, x15, #2, #32
    c9ec:	add	x15, x0, w15, sxtw
    c9f0:	strh	w12, [x8, x9]
    c9f4:	strb	wzr, [x15, x13]
    c9f8:	ldr	x16, [x0, #5912]
    c9fc:	ldr	w15, [x0, #5300]
    ca00:	cinc	w9, w14, lt  // lt = tstop
    ca04:	sub	x14, x16, #0x1
    ca08:	cmp	w15, #0x2
    ca0c:	str	x14, [x0, #5912]
    ca10:	mov	w14, w9
    ca14:	b.lt	c9cc <inflateCodesUsed@@ZLIB_1.2.9+0x1590>  // b.tstop
    ca18:	lsr	w12, w15, #1
    ca1c:	mov	w13, #0x14bc                	// #5308
    ca20:	str	w9, [x1, #8]
    ca24:	add	x14, x0, x12, lsl #2
    ca28:	ldr	w14, [x14, #3008]
    ca2c:	lsl	w2, w12, #1
    ca30:	cmp	w2, w15
    ca34:	mov	x16, x12
    ca38:	b.gt	cb1c <inflateCodesUsed@@ZLIB_1.2.9+0x16e0>
    ca3c:	sxtw	x17, w14
    ca40:	add	x16, x0, x17
    ca44:	add	x16, x16, x13
    ca48:	add	x17, x8, x17, lsl #2
    ca4c:	mov	w18, w12
    ca50:	b	ca70 <inflateCodesUsed@@ZLIB_1.2.9+0x1634>
    ca54:	add	x18, x0, w18, sxtw #2
    ca58:	str	w15, [x18, #3008]
    ca5c:	ldr	w15, [x0, #5300]
    ca60:	lsl	w2, w3, #1
    ca64:	mov	w18, w3
    ca68:	cmp	w2, w15
    ca6c:	b.gt	cb18 <inflateCodesUsed@@ZLIB_1.2.9+0x16dc>
    ca70:	cmp	w2, w15
    ca74:	b.ge	cab0 <inflateCodesUsed@@ZLIB_1.2.9+0x1674>  // b.tcont
    ca78:	sxtw	x15, w2
    ca7c:	add	x5, x0, #0xbc0
    ca80:	orr	x4, x15, #0x1
    ca84:	ldrsw	x3, [x5, w2, sxtw #2]
    ca88:	ldrsw	x5, [x5, x4, lsl #2]
    ca8c:	lsl	x6, x3, #2
    ca90:	lsl	x7, x5, #2
    ca94:	ldrh	w7, [x8, x7]
    ca98:	ldrh	w6, [x8, x6]
    ca9c:	cmp	w7, w6
    caa0:	b.cs	caf4 <inflateCodesUsed@@ZLIB_1.2.9+0x16b8>  // b.hs, b.nlast
    caa4:	mov	x15, x4
    caa8:	mov	w3, w4
    caac:	b	cab8 <inflateCodesUsed@@ZLIB_1.2.9+0x167c>
    cab0:	sxtw	x15, w2
    cab4:	mov	w3, w2
    cab8:	add	x15, x0, x15, lsl #2
    cabc:	ldr	w15, [x15, #3008]
    cac0:	ldrh	w2, [x17]
    cac4:	sbfiz	x4, x15, #2, #32
    cac8:	ldrh	w4, [x8, x4]
    cacc:	cmp	w2, w4
    cad0:	b.cc	cb14 <inflateCodesUsed@@ZLIB_1.2.9+0x16d8>  // b.lo, b.ul, b.last
    cad4:	b.ne	ca54 <inflateCodesUsed@@ZLIB_1.2.9+0x1618>  // b.any
    cad8:	sxtw	x2, w15
    cadc:	add	x2, x0, x2
    cae0:	ldrb	w4, [x16]
    cae4:	ldrb	w2, [x2, x13]
    cae8:	cmp	w4, w2
    caec:	b.hi	ca54 <inflateCodesUsed@@ZLIB_1.2.9+0x1618>  // b.pmore
    caf0:	b	cb14 <inflateCodesUsed@@ZLIB_1.2.9+0x16d8>
    caf4:	b.ne	cab4 <inflateCodesUsed@@ZLIB_1.2.9+0x1678>  // b.any
    caf8:	add	x6, x0, x13
    cafc:	ldrb	w5, [x6, x5]
    cb00:	ldrb	w3, [x6, x3]
    cb04:	cmp	w5, w3
    cb08:	mov	w3, w2
    cb0c:	b.ls	caa4 <inflateCodesUsed@@ZLIB_1.2.9+0x1668>  // b.plast
    cb10:	b	cab8 <inflateCodesUsed@@ZLIB_1.2.9+0x167c>
    cb14:	mov	w3, w18
    cb18:	sxtw	x16, w3
    cb1c:	add	x15, x0, x16, lsl #2
    cb20:	cmp	x12, #0x2
    cb24:	str	w14, [x15, #3008]
    cb28:	b.lt	cb38 <inflateCodesUsed@@ZLIB_1.2.9+0x16fc>  // b.tstop
    cb2c:	ldr	w15, [x11]
    cb30:	sub	x12, x12, #0x1
    cb34:	b	ca24 <inflateCodesUsed@@ZLIB_1.2.9+0x15e8>
    cb38:	ldr	w15, [x0, #5300]
    cb3c:	sxtw	x11, w10
    cb40:	mov	w10, #0x14bc                	// #5308
    cb44:	b	cb64 <inflateCodesUsed@@ZLIB_1.2.9+0x1728>
    cb48:	mov	w13, #0x1                   	// #1
    cb4c:	add	x13, x0, x13, lsl #2
    cb50:	str	w11, [x13, #3008]
    cb54:	ldr	w15, [x0, #5300]
    cb58:	mov	x11, x12
    cb5c:	cmp	w15, #0x1
    cb60:	b.le	cdd0 <inflateCodesUsed@@ZLIB_1.2.9+0x1994>
    cb64:	sub	w3, w15, #0x1
    cb68:	ldr	w13, [x0, #3012]
    cb6c:	str	w3, [x0, #5300]
    cb70:	add	x12, x0, w15, sxtw #2
    cb74:	ldr	w14, [x12, #3008]
    cb78:	sxtw	x12, w13
    cb7c:	cmp	w15, #0x2
    cb80:	str	w14, [x0, #3012]
    cb84:	b.gt	cb90 <inflateCodesUsed@@ZLIB_1.2.9+0x1754>
    cb88:	mov	w15, #0x1                   	// #1
    cb8c:	b	cc74 <inflateCodesUsed@@ZLIB_1.2.9+0x1838>
    cb90:	sxtw	x15, w14
    cb94:	add	x16, x0, x15
    cb98:	mov	w17, #0x1                   	// #1
    cb9c:	add	x15, x8, x15, lsl #2
    cba0:	add	x16, x16, x10
    cba4:	mov	w18, #0x2                   	// #2
    cba8:	b	cbc8 <inflateCodesUsed@@ZLIB_1.2.9+0x178c>
    cbac:	add	x17, x0, w17, sxtw #2
    cbb0:	str	w18, [x17, #3008]
    cbb4:	ldr	w3, [x0, #5300]
    cbb8:	lsl	w18, w2, #1
    cbbc:	mov	w17, w2
    cbc0:	cmp	w18, w3
    cbc4:	b.gt	cc70 <inflateCodesUsed@@ZLIB_1.2.9+0x1834>
    cbc8:	cmp	w18, w3
    cbcc:	b.ge	cc08 <inflateCodesUsed@@ZLIB_1.2.9+0x17cc>  // b.tcont
    cbd0:	sxtw	x3, w18
    cbd4:	add	x5, x0, #0xbc0
    cbd8:	orr	x4, x3, #0x1
    cbdc:	ldrsw	x2, [x5, w18, sxtw #2]
    cbe0:	ldrsw	x5, [x5, x4, lsl #2]
    cbe4:	lsl	x6, x2, #2
    cbe8:	lsl	x7, x5, #2
    cbec:	ldrh	w7, [x8, x7]
    cbf0:	ldrh	w6, [x8, x6]
    cbf4:	cmp	w7, w6
    cbf8:	b.cs	cc4c <inflateCodesUsed@@ZLIB_1.2.9+0x1810>  // b.hs, b.nlast
    cbfc:	mov	x3, x4
    cc00:	mov	w2, w4
    cc04:	b	cc10 <inflateCodesUsed@@ZLIB_1.2.9+0x17d4>
    cc08:	sxtw	x3, w18
    cc0c:	mov	w2, w18
    cc10:	add	x18, x0, x3, lsl #2
    cc14:	ldr	w18, [x18, #3008]
    cc18:	ldrh	w3, [x15]
    cc1c:	sbfiz	x4, x18, #2, #32
    cc20:	ldrh	w4, [x8, x4]
    cc24:	cmp	w3, w4
    cc28:	b.cc	cc6c <inflateCodesUsed@@ZLIB_1.2.9+0x1830>  // b.lo, b.ul, b.last
    cc2c:	b.ne	cbac <inflateCodesUsed@@ZLIB_1.2.9+0x1770>  // b.any
    cc30:	sxtw	x3, w18
    cc34:	add	x3, x0, x3
    cc38:	ldrb	w4, [x16]
    cc3c:	ldrb	w3, [x3, x10]
    cc40:	cmp	w4, w3
    cc44:	b.hi	cbac <inflateCodesUsed@@ZLIB_1.2.9+0x1770>  // b.pmore
    cc48:	b	cc6c <inflateCodesUsed@@ZLIB_1.2.9+0x1830>
    cc4c:	b.ne	cc0c <inflateCodesUsed@@ZLIB_1.2.9+0x17d0>  // b.any
    cc50:	add	x6, x0, x10
    cc54:	ldrb	w5, [x6, x5]
    cc58:	ldrb	w2, [x6, x2]
    cc5c:	cmp	w5, w2
    cc60:	mov	w2, w18
    cc64:	b.ls	cbfc <inflateCodesUsed@@ZLIB_1.2.9+0x17c0>  // b.plast
    cc68:	b	cc10 <inflateCodesUsed@@ZLIB_1.2.9+0x17d4>
    cc6c:	mov	w2, w17
    cc70:	sxtw	x15, w2
    cc74:	add	x16, x0, #0xbc0
    cc78:	str	w14, [x16, x15, lsl #2]
    cc7c:	ldrsw	x14, [x0, #5304]
    cc80:	ldrsw	x15, [x0, #3012]
    cc84:	add	x17, x8, x12, lsl #2
    cc88:	sub	x14, x14, #0x1
    cc8c:	str	w14, [x0, #5304]
    cc90:	str	w13, [x16, x14, lsl #2]
    cc94:	ldrsw	x13, [x0, #5304]
    cc98:	add	x18, x8, x15, lsl #2
    cc9c:	sub	x13, x13, #0x1
    cca0:	str	w13, [x0, #5304]
    cca4:	str	w15, [x16, x13, lsl #2]
    cca8:	ldrh	w13, [x17]
    ccac:	ldrh	w14, [x18]
    ccb0:	add	w14, w14, w13
    ccb4:	add	x13, x8, x11, lsl #2
    ccb8:	strh	w14, [x13]
    ccbc:	add	x14, x0, x10
    ccc0:	ldrb	w12, [x14, x12]
    ccc4:	ldrb	w15, [x14, x15]
    ccc8:	add	x14, x14, x11
    cccc:	cmp	w12, w15
    ccd0:	csel	w12, w15, w12, cc  // cc = lo, ul, last
    ccd4:	add	w12, w12, #0x1
    ccd8:	strb	w12, [x14]
    ccdc:	strh	w11, [x18, #2]
    cce0:	strh	w11, [x17, #2]
    cce4:	ldr	w18, [x0, #5300]
    cce8:	add	x12, x11, #0x1
    ccec:	str	w11, [x0, #3012]
    ccf0:	cmp	w18, #0x2
    ccf4:	b.lt	cb48 <inflateCodesUsed@@ZLIB_1.2.9+0x170c>  // b.tstop
    ccf8:	mov	w15, #0x1                   	// #1
    ccfc:	mov	w16, #0x2                   	// #2
    cd00:	b	cd20 <inflateCodesUsed@@ZLIB_1.2.9+0x18e4>
    cd04:	add	x15, x0, w15, sxtw #2
    cd08:	str	w16, [x15, #3008]
    cd0c:	ldr	w18, [x0, #5300]
    cd10:	lsl	w16, w17, #1
    cd14:	mov	w15, w17
    cd18:	cmp	w16, w18
    cd1c:	b.gt	cdc8 <inflateCodesUsed@@ZLIB_1.2.9+0x198c>
    cd20:	cmp	w16, w18
    cd24:	b.ge	cd60 <inflateCodesUsed@@ZLIB_1.2.9+0x1924>  // b.tcont
    cd28:	sxtw	x18, w16
    cd2c:	add	x3, x0, #0xbc0
    cd30:	orr	x2, x18, #0x1
    cd34:	ldrsw	x17, [x3, w16, sxtw #2]
    cd38:	ldrsw	x3, [x3, x2, lsl #2]
    cd3c:	lsl	x4, x17, #2
    cd40:	lsl	x5, x3, #2
    cd44:	ldrh	w5, [x8, x5]
    cd48:	ldrh	w4, [x8, x4]
    cd4c:	cmp	w5, w4
    cd50:	b.cs	cda4 <inflateCodesUsed@@ZLIB_1.2.9+0x1968>  // b.hs, b.nlast
    cd54:	mov	x18, x2
    cd58:	mov	w17, w2
    cd5c:	b	cd68 <inflateCodesUsed@@ZLIB_1.2.9+0x192c>
    cd60:	sxtw	x18, w16
    cd64:	mov	w17, w16
    cd68:	add	x16, x0, x18, lsl #2
    cd6c:	ldr	w16, [x16, #3008]
    cd70:	ldrh	w18, [x13]
    cd74:	sbfiz	x2, x16, #2, #32
    cd78:	ldrh	w2, [x8, x2]
    cd7c:	cmp	w18, w2
    cd80:	b.cc	cdc4 <inflateCodesUsed@@ZLIB_1.2.9+0x1988>  // b.lo, b.ul, b.last
    cd84:	b.ne	cd04 <inflateCodesUsed@@ZLIB_1.2.9+0x18c8>  // b.any
    cd88:	sxtw	x18, w16
    cd8c:	add	x18, x0, x18
    cd90:	ldrb	w2, [x14]
    cd94:	ldrb	w18, [x18, x10]
    cd98:	cmp	w2, w18
    cd9c:	b.hi	cd04 <inflateCodesUsed@@ZLIB_1.2.9+0x18c8>  // b.pmore
    cda0:	b	cdc4 <inflateCodesUsed@@ZLIB_1.2.9+0x1988>
    cda4:	b.ne	cd64 <inflateCodesUsed@@ZLIB_1.2.9+0x1928>  // b.any
    cda8:	add	x4, x0, x10
    cdac:	ldrb	w3, [x4, x3]
    cdb0:	ldrb	w17, [x4, x17]
    cdb4:	cmp	w3, w17
    cdb8:	mov	w17, w16
    cdbc:	b.ls	cd54 <inflateCodesUsed@@ZLIB_1.2.9+0x1918>  // b.plast
    cdc0:	b	cd68 <inflateCodesUsed@@ZLIB_1.2.9+0x192c>
    cdc4:	mov	w17, w15
    cdc8:	sxtw	x13, w17
    cdcc:	b	cb4c <inflateCodesUsed@@ZLIB_1.2.9+0x1710>
    cdd0:	ldrsw	x10, [x0, #5304]
    cdd4:	ldr	w11, [x0, #3012]
    cdd8:	add	x13, x0, #0xbc0
    cddc:	movi	v0.2d, #0x0
    cde0:	sub	x10, x10, #0x1
    cde4:	str	w10, [x0, #5304]
    cde8:	str	w11, [x13, x10, lsl #2]
    cdec:	ldr	x12, [x1, #16]
    cdf0:	ldrsw	x17, [x0, #5304]
    cdf4:	ldr	x10, [x1]
    cdf8:	ldr	w11, [x1, #8]
    cdfc:	ldp	x16, x14, [x12]
    ce00:	ldr	w15, [x12, #16]
    ce04:	ldrsw	x12, [x12, #24]
    ce08:	str	q0, [x0, #2992]
    ce0c:	str	q0, [x0, #2976]
    ce10:	ldrsw	x13, [x13, x17, lsl #2]
    ce14:	add	x13, x10, x13, lsl #2
    ce18:	strh	wzr, [x13, #2]
    ce1c:	ldrsw	x18, [x0, #5304]
    ce20:	cmp	w18, #0x23b
    ce24:	b.gt	d034 <inflateCodesUsed@@ZLIB_1.2.9+0x1bf8>
    ce28:	mov	w13, wzr
    ce2c:	cbz	x16, ced0 <inflateCodesUsed@@ZLIB_1.2.9+0x1a94>
    ce30:	sub	w17, w18, #0x23c
    ce34:	add	x18, x0, x18, lsl #2
    ce38:	add	x18, x18, #0xbc4
    ce3c:	b	ce84 <inflateCodesUsed@@ZLIB_1.2.9+0x1a48>
    ce40:	sub	w3, w1, w15
    ce44:	ldr	w3, [x14, w3, sxtw #2]
    ce48:	lsl	x1, x1, #2
    ce4c:	ldr	x4, [x0, #5912]
    ce50:	ldrh	w5, [x10, x1]
    ce54:	add	w2, w3, w2
    ce58:	add	x1, x16, x1
    ce5c:	madd	x2, x5, x2, x4
    ce60:	str	x2, [x0, #5912]
    ce64:	ldrh	w1, [x1, #2]
    ce68:	ldr	x2, [x0, #5920]
    ce6c:	add	w1, w3, w1
    ce70:	madd	x1, x1, x5, x2
    ce74:	str	x1, [x0, #5920]
    ce78:	adds	w17, w17, #0x1
    ce7c:	add	x18, x18, #0x4
    ce80:	b.cs	cf58 <inflateCodesUsed@@ZLIB_1.2.9+0x1b1c>  // b.hs, b.nlast
    ce84:	ldrsw	x1, [x18]
    ce88:	add	x3, x10, x1, lsl #2
    ce8c:	ldrh	w2, [x3, #2]
    ce90:	add	x2, x10, x2, lsl #2
    ce94:	ldrh	w2, [x2, #2]
    ce98:	cmp	w12, w2
    ce9c:	csinc	w2, w12, w2, le
    cea0:	cinc	w13, w13, le
    cea4:	cmp	w1, w11
    cea8:	strh	w2, [x3, #2]
    ceac:	b.gt	ce78 <inflateCodesUsed@@ZLIB_1.2.9+0x1a3c>
    ceb0:	add	x3, x0, w2, sxtw #1
    ceb4:	ldrh	w4, [x3, #2976]
    ceb8:	cmp	w1, w15
    cebc:	add	w4, w4, #0x1
    cec0:	strh	w4, [x3, #2976]
    cec4:	b.ge	ce40 <inflateCodesUsed@@ZLIB_1.2.9+0x1a04>  // b.tcont
    cec8:	mov	w3, wzr
    cecc:	b	ce48 <inflateCodesUsed@@ZLIB_1.2.9+0x1a0c>
    ced0:	add	x17, x0, x18, lsl #2
    ced4:	sub	w16, w18, #0x23c
    ced8:	add	x17, x17, #0xbc4
    cedc:	b	cf0c <inflateCodesUsed@@ZLIB_1.2.9+0x1ad0>
    cee0:	sub	w2, w18, w15
    cee4:	ldr	w2, [x14, w2, sxtw #2]
    cee8:	lsl	x18, x18, #2
    ceec:	ldrh	w18, [x10, x18]
    cef0:	ldr	x3, [x0, #5912]
    cef4:	add	w1, w2, w1
    cef8:	madd	x18, x18, x1, x3
    cefc:	str	x18, [x0, #5912]
    cf00:	adds	w16, w16, #0x1
    cf04:	add	x17, x17, #0x4
    cf08:	b.cs	cf58 <inflateCodesUsed@@ZLIB_1.2.9+0x1b1c>  // b.hs, b.nlast
    cf0c:	ldrsw	x18, [x17]
    cf10:	add	x2, x10, x18, lsl #2
    cf14:	ldrh	w1, [x2, #2]
    cf18:	add	x1, x10, x1, lsl #2
    cf1c:	ldrh	w1, [x1, #2]
    cf20:	cmp	w12, w1
    cf24:	csinc	w1, w12, w1, le
    cf28:	cinc	w13, w13, le
    cf2c:	cmp	w18, w11
    cf30:	strh	w1, [x2, #2]
    cf34:	b.gt	cf00 <inflateCodesUsed@@ZLIB_1.2.9+0x1ac4>
    cf38:	add	x2, x0, w1, sxtw #1
    cf3c:	ldrh	w3, [x2, #2976]
    cf40:	cmp	w18, w15
    cf44:	add	w3, w3, #0x1
    cf48:	strh	w3, [x2, #2976]
    cf4c:	b.ge	cee0 <inflateCodesUsed@@ZLIB_1.2.9+0x1aa4>  // b.tcont
    cf50:	mov	w2, wzr
    cf54:	b	cee8 <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    cf58:	cbz	w13, d034 <inflateCodesUsed@@ZLIB_1.2.9+0x1bf8>
    cf5c:	add	x14, x0, x12, lsl #1
    cf60:	mov	x15, #0x100000000           	// #4294967296
    cf64:	add	x14, x14, #0xba0
    cf68:	add	x15, x15, x12, lsl #32
    cf6c:	mov	x16, #0xffffffff00000000    	// #-4294967296
    cf70:	mov	x17, x14
    cf74:	mov	x18, x15
    cf78:	ldrh	w1, [x17, #-2]!
    cf7c:	add	x18, x18, x16
    cf80:	cbz	w1, cf78 <inflateCodesUsed@@ZLIB_1.2.9+0x1b3c>
    cf84:	sub	w1, w1, #0x1
    cf88:	add	x18, x0, x18, asr #31
    cf8c:	strh	w1, [x17]
    cf90:	ldrh	w17, [x18, #2976]
    cf94:	subs	w13, w13, #0x2
    cf98:	add	w17, w17, #0x2
    cf9c:	strh	w17, [x18, #2976]
    cfa0:	ldrh	w17, [x14]
    cfa4:	sub	w17, w17, #0x1
    cfa8:	strh	w17, [x14]
    cfac:	b.gt	cf70 <inflateCodesUsed@@ZLIB_1.2.9+0x1b34>
    cfb0:	cbz	w12, d034 <inflateCodesUsed@@ZLIB_1.2.9+0x1bf8>
    cfb4:	add	x13, x0, #0xbbc
    cfb8:	mov	w14, #0x23d                 	// #573
    cfbc:	tst	w17, #0xffff
    cfc0:	b.ne	cfd8 <inflateCodesUsed@@ZLIB_1.2.9+0x1b9c>  // b.any
    cfc4:	b	d02c <inflateCodesUsed@@ZLIB_1.2.9+0x1bf0>
    cfc8:	add	x15, x0, x12, lsl #1
    cfcc:	ldrh	w17, [x15, #2976]
    cfd0:	tst	w17, #0xffff
    cfd4:	b.eq	d02c <inflateCodesUsed@@ZLIB_1.2.9+0x1bf0>  // b.none
    cfd8:	and	w15, w17, #0xffff
    cfdc:	b	cfe8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bac>
    cfe0:	subs	w15, w15, #0x1
    cfe4:	b.eq	d02c <inflateCodesUsed@@ZLIB_1.2.9+0x1bf0>  // b.none
    cfe8:	add	x17, x13, w14, sxtw #2
    cfec:	ldrsw	x16, [x17], #-4
    cff0:	sub	w14, w14, #0x1
    cff4:	cmp	w16, w11
    cff8:	b.gt	cfec <inflateCodesUsed@@ZLIB_1.2.9+0x1bb0>
    cffc:	add	x17, x10, x16, lsl #2
    d000:	ldrh	w18, [x17, #2]!
    d004:	cmp	w12, w18
    d008:	b.eq	cfe0 <inflateCodesUsed@@ZLIB_1.2.9+0x1ba4>  // b.none
    d00c:	lsl	x16, x16, #2
    d010:	ldr	x1, [x0, #5912]
    d014:	ldrh	w16, [x10, x16]
    d018:	sub	x18, x12, x18
    d01c:	madd	x16, x18, x16, x1
    d020:	str	x16, [x0, #5912]
    d024:	strh	w12, [x17]
    d028:	b	cfe0 <inflateCodesUsed@@ZLIB_1.2.9+0x1ba4>
    d02c:	sub	x12, x12, #0x1
    d030:	cbnz	w12, cfc8 <inflateCodesUsed@@ZLIB_1.2.9+0x1b8c>
    d034:	ldrh	w10, [x0, #2976]
    d038:	lsl	w10, w10, #1
    d03c:	strh	w10, [sp, #2]
    d040:	ldrh	w11, [x0, #2978]
    d044:	add	w10, w10, w11
    d048:	lsl	w10, w10, #1
    d04c:	strh	w10, [sp, #4]
    d050:	ldrh	w11, [x0, #2980]
    d054:	add	w10, w10, w11
    d058:	lsl	w10, w10, #1
    d05c:	strh	w10, [sp, #6]
    d060:	ldrh	w11, [x0, #2982]
    d064:	add	w10, w10, w11
    d068:	lsl	w10, w10, #1
    d06c:	strh	w10, [sp, #8]
    d070:	ldrh	w11, [x0, #2984]
    d074:	add	w10, w10, w11
    d078:	lsl	w10, w10, #1
    d07c:	strh	w10, [sp, #10]
    d080:	ldrh	w11, [x0, #2986]
    d084:	add	w10, w10, w11
    d088:	lsl	w10, w10, #1
    d08c:	strh	w10, [sp, #12]
    d090:	ldrh	w11, [x0, #2988]
    d094:	add	w10, w10, w11
    d098:	lsl	w10, w10, #1
    d09c:	strh	w10, [sp, #14]
    d0a0:	ldrh	w11, [x0, #2990]
    d0a4:	add	w10, w10, w11
    d0a8:	lsl	w10, w10, #1
    d0ac:	strh	w10, [sp, #16]
    d0b0:	ldrh	w11, [x0, #2992]
    d0b4:	add	w10, w10, w11
    d0b8:	lsl	w10, w10, #1
    d0bc:	strh	w10, [sp, #18]
    d0c0:	ldrh	w11, [x0, #2994]
    d0c4:	add	w10, w10, w11
    d0c8:	lsl	w10, w10, #1
    d0cc:	strh	w10, [sp, #20]
    d0d0:	ldrh	w11, [x0, #2996]
    d0d4:	add	w10, w10, w11
    d0d8:	lsl	w10, w10, #1
    d0dc:	strh	w10, [sp, #22]
    d0e0:	ldrh	w11, [x0, #2998]
    d0e4:	add	w10, w10, w11
    d0e8:	lsl	w10, w10, #1
    d0ec:	strh	w10, [sp, #24]
    d0f0:	ldrh	w11, [x0, #3000]
    d0f4:	add	w10, w11, w10
    d0f8:	lsl	w10, w10, #1
    d0fc:	strh	w10, [sp, #26]
    d100:	ldrh	w11, [x0, #3002]
    d104:	add	w10, w11, w10
    d108:	lsl	w10, w10, #1
    d10c:	strh	w10, [sp, #28]
    d110:	ldrh	w11, [x0, #3004]
    d114:	add	w10, w10, w11
    d118:	lsl	w10, w10, #1
    d11c:	strh	w10, [sp, #30]
    d120:	tbnz	w9, #31, d18c <inflateCodesUsed@@ZLIB_1.2.9+0x1d50>
    d124:	mov	x10, xzr
    d128:	add	w9, w9, #0x1
    d12c:	mov	x11, sp
    d130:	b	d140 <inflateCodesUsed@@ZLIB_1.2.9+0x1d04>
    d134:	add	x10, x10, #0x1
    d138:	cmp	x10, x9
    d13c:	b.eq	d18c <inflateCodesUsed@@ZLIB_1.2.9+0x1d50>  // b.none
    d140:	add	x12, x8, x10, lsl #2
    d144:	ldrh	w14, [x12, #2]
    d148:	cbz	w14, d134 <inflateCodesUsed@@ZLIB_1.2.9+0x1cf8>
    d14c:	lsl	x15, x14, #1
    d150:	ldrh	w13, [x11, x15]
    d154:	mov	w12, wzr
    d158:	add	w14, w14, #0x1
    d15c:	add	w16, w13, #0x1
    d160:	strh	w16, [x11, x15]
    d164:	and	w15, w13, #0x1
    d168:	sub	w14, w14, #0x1
    d16c:	orr	w15, w12, w15
    d170:	lsr	w13, w13, #1
    d174:	cmp	w14, #0x1
    d178:	lsl	w12, w15, #1
    d17c:	b.gt	d164 <inflateCodesUsed@@ZLIB_1.2.9+0x1d28>
    d180:	lsl	x12, x10, #2
    d184:	strh	w15, [x8, x12]
    d188:	b	d134 <inflateCodesUsed@@ZLIB_1.2.9+0x1cf8>
    d18c:	add	sp, sp, #0x20
    d190:	ret
    d194:	str	x21, [sp, #-32]!
    d198:	stp	x20, x19, [sp, #16]
    d19c:	ldr	w8, [x0, #5900]
    d1a0:	cbz	w8, d4d4 <inflateCodesUsed@@ZLIB_1.2.9+0x2098>
    d1a4:	mov	w9, #0x1730                	// #5936
    d1a8:	adrp	x10, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    d1ac:	adrp	x11, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    d1b0:	adrp	x12, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    d1b4:	adrp	x13, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    d1b8:	adrp	x14, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    d1bc:	adrp	x16, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    d1c0:	mov	x17, xzr
    d1c4:	mov	w8, #0x10                  	// #16
    d1c8:	add	x10, x10, #0xdb8
    d1cc:	add	x11, x11, #0x3b0
    d1d0:	add	x12, x12, #0x4fc
    d1d4:	add	x13, x13, #0xbb8
    d1d8:	add	x14, x14, #0x424
    d1dc:	add	x15, x0, x9
    d1e0:	add	x16, x16, #0x570
    d1e4:	b	d1fc <inflateCodesUsed@@ZLIB_1.2.9+0x1dc0>
    d1e8:	add	w3, w5, w3
    d1ec:	str	w3, [x0, #5940]
    d1f0:	ldr	w4, [x0, #5900]
    d1f4:	cmp	x17, x4
    d1f8:	b.cs	d4dc <inflateCodesUsed@@ZLIB_1.2.9+0x20a0>  // b.hs, b.nlast
    d1fc:	ldr	x18, [x0, #5904]
    d200:	ldr	x3, [x0, #5888]
    d204:	ldrh	w18, [x18, x17, lsl #1]
    d208:	ldrb	w5, [x3, x17]
    d20c:	add	x17, x17, #0x1
    d210:	cbz	w18, d2a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1e6c>
    d214:	ldrb	w6, [x10, x5]
    d218:	mov	w3, #0x400                 	// #1024
    d21c:	ldr	w19, [x0, #5940]
    d220:	bfi	x3, x6, #2, #8
    d224:	add	x3, x3, x1
    d228:	ldrh	w4, [x3, #6]
    d22c:	ldrh	w7, [x3, #4]
    d230:	ldrh	w3, [x0, #5936]
    d234:	sub	w20, w8, w4
    d238:	lsl	w21, w7, w19
    d23c:	orr	w3, w3, w21
    d240:	cmp	w19, w20
    d244:	strh	w3, [x0, #5936]
    d248:	b.le	d31c <inflateCodesUsed@@ZLIB_1.2.9+0x1ee0>
    d24c:	ldr	x19, [x0, #40]
    d250:	ldr	x20, [x0, #16]
    d254:	add	x21, x19, #0x1
    d258:	str	x21, [x0, #40]
    d25c:	strb	w3, [x20, x19]
    d260:	add	x21, x0, x9
    d264:	ldr	x3, [x0, #40]
    d268:	ldrb	w19, [x21, #1]
    d26c:	ldr	x20, [x0, #16]
    d270:	add	x21, x3, #0x1
    d274:	str	x21, [x0, #40]
    d278:	strb	w19, [x20, x3]
    d27c:	ldr	w3, [x0, #5940]
    d280:	sub	w19, w8, w3
    d284:	add	w4, w4, w3
    d288:	lsr	w3, w7, w19
    d28c:	strh	w3, [x0, #5936]
    d290:	sub	w4, w4, #0x10
    d294:	sub	x7, x6, #0x8
    d298:	cmp	x7, #0x13
    d29c:	str	w4, [x0, #5940]
    d2a0:	b.ls	d330 <inflateCodesUsed@@ZLIB_1.2.9+0x1ef4>  // b.plast
    d2a4:	b	d3ac <inflateCodesUsed@@ZLIB_1.2.9+0x1f70>
    d2a8:	add	x18, x1, x5, lsl #2
    d2ac:	ldr	w5, [x0, #5940]
    d2b0:	ldrh	w3, [x18, #2]
    d2b4:	ldrh	w4, [x18]
    d2b8:	ldrh	w18, [x0, #5936]
    d2bc:	sub	w6, w8, w3
    d2c0:	lsl	w7, w4, w5
    d2c4:	orr	w18, w18, w7
    d2c8:	cmp	w5, w6
    d2cc:	strh	w18, [x0, #5936]
    d2d0:	b.le	d1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1dac>
    d2d4:	ldr	x5, [x0, #40]
    d2d8:	ldr	x6, [x0, #16]
    d2dc:	add	x7, x5, #0x1
    d2e0:	str	x7, [x0, #40]
    d2e4:	strb	w18, [x6, x5]
    d2e8:	ldr	x18, [x0, #40]
    d2ec:	ldrb	w5, [x15, #1]
    d2f0:	ldr	x6, [x0, #16]
    d2f4:	add	x7, x18, #0x1
    d2f8:	str	x7, [x0, #40]
    d2fc:	strb	w5, [x6, x18]
    d300:	ldr	w18, [x0, #5940]
    d304:	sub	w5, w8, w18
    d308:	add	w3, w3, w18
    d30c:	lsr	w18, w4, w5
    d310:	strh	w18, [x0, #5936]
    d314:	sub	w3, w3, #0x10
    d318:	b	d1ec <inflateCodesUsed@@ZLIB_1.2.9+0x1db0>
    d31c:	add	w4, w19, w4
    d320:	sub	x7, x6, #0x8
    d324:	cmp	x7, #0x13
    d328:	str	w4, [x0, #5940]
    d32c:	b.hi	d3ac <inflateCodesUsed@@ZLIB_1.2.9+0x1f70>  // b.pmore
    d330:	ldr	w7, [x12, x6, lsl #2]
    d334:	ldr	w6, [x11, x6, lsl #2]
    d338:	sub	w5, w5, w7
    d33c:	and	w5, w5, #0xffff
    d340:	sub	w7, w8, w6
    d344:	lsl	w19, w5, w4
    d348:	orr	w3, w3, w19
    d34c:	cmp	w4, w7
    d350:	strh	w3, [x0, #5936]
    d354:	b.le	d3a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1f68>
    d358:	ldr	x4, [x0, #40]
    d35c:	ldr	x7, [x0, #16]
    d360:	add	x19, x4, #0x1
    d364:	str	x19, [x0, #40]
    d368:	strb	w3, [x7, x4]
    d36c:	add	x19, x0, x9
    d370:	ldr	x3, [x0, #40]
    d374:	ldrb	w4, [x19, #1]
    d378:	ldr	x7, [x0, #16]
    d37c:	add	x19, x3, #0x1
    d380:	str	x19, [x0, #40]
    d384:	strb	w4, [x7, x3]
    d388:	ldr	w3, [x0, #5940]
    d38c:	sub	w4, w8, w3
    d390:	add	w6, w6, w3
    d394:	lsr	w3, w5, w4
    d398:	strh	w3, [x0, #5936]
    d39c:	sub	w4, w6, #0x10
    d3a0:	b	d3a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1f6c>
    d3a4:	add	w4, w6, w4
    d3a8:	str	w4, [x0, #5940]
    d3ac:	sub	w5, w18, #0x1
    d3b0:	lsr	w18, w5, #7
    d3b4:	cmp	w5, #0x100
    d3b8:	add	w18, w18, #0x100
    d3bc:	csel	w18, w5, w18, cc  // cc = lo, ul, last
    d3c0:	ldrb	w6, [x13, w18, uxtw]
    d3c4:	add	x18, x2, x6, lsl #2
    d3c8:	ldrh	w7, [x18, #2]
    d3cc:	ldrh	w19, [x18]
    d3d0:	sub	w20, w8, w7
    d3d4:	lsl	w18, w19, w4
    d3d8:	orr	w18, w3, w18
    d3dc:	cmp	w4, w20
    d3e0:	strh	w18, [x0, #5936]
    d3e4:	b.le	d444 <inflateCodesUsed@@ZLIB_1.2.9+0x2008>
    d3e8:	ldr	x3, [x0, #40]
    d3ec:	ldr	x4, [x0, #16]
    d3f0:	add	x20, x3, #0x1
    d3f4:	str	x20, [x0, #40]
    d3f8:	strb	w18, [x4, x3]
    d3fc:	add	x20, x0, x9
    d400:	ldr	x18, [x0, #40]
    d404:	ldrb	w3, [x20, #1]
    d408:	ldr	x4, [x0, #16]
    d40c:	add	x20, x18, #0x1
    d410:	str	x20, [x0, #40]
    d414:	strb	w3, [x4, x18]
    d418:	ldr	w18, [x0, #5940]
    d41c:	sub	w3, w8, w18
    d420:	add	w4, w7, w18
    d424:	lsr	w18, w19, w3
    d428:	strh	w18, [x0, #5936]
    d42c:	sub	w3, w4, #0x10
    d430:	sub	x4, x6, #0x4
    d434:	cmp	x4, #0x19
    d438:	str	w3, [x0, #5940]
    d43c:	b.hi	d1f0 <inflateCodesUsed@@ZLIB_1.2.9+0x1db4>  // b.pmore
    d440:	b	d458 <inflateCodesUsed@@ZLIB_1.2.9+0x201c>
    d444:	add	w3, w4, w7
    d448:	sub	x4, x6, #0x4
    d44c:	cmp	x4, #0x19
    d450:	str	w3, [x0, #5940]
    d454:	b.hi	d1f0 <inflateCodesUsed@@ZLIB_1.2.9+0x1db4>  // b.pmore
    d458:	ldr	w7, [x16, x6, lsl #2]
    d45c:	ldr	w4, [x14, x6, lsl #2]
    d460:	sub	w5, w5, w7
    d464:	and	w5, w5, #0xffff
    d468:	sub	w6, w8, w4
    d46c:	lsl	w7, w5, w3
    d470:	orr	w18, w18, w7
    d474:	cmp	w3, w6
    d478:	strh	w18, [x0, #5936]
    d47c:	b.le	d4cc <inflateCodesUsed@@ZLIB_1.2.9+0x2090>
    d480:	ldr	x3, [x0, #40]
    d484:	ldr	x6, [x0, #16]
    d488:	add	x7, x3, #0x1
    d48c:	str	x7, [x0, #40]
    d490:	strb	w18, [x6, x3]
    d494:	add	x7, x0, x9
    d498:	ldr	x18, [x0, #40]
    d49c:	ldrb	w3, [x7, #1]
    d4a0:	ldr	x6, [x0, #16]
    d4a4:	add	x7, x18, #0x1
    d4a8:	str	x7, [x0, #40]
    d4ac:	strb	w3, [x6, x18]
    d4b0:	ldr	w18, [x0, #5940]
    d4b4:	sub	w3, w8, w18
    d4b8:	add	w4, w4, w18
    d4bc:	lsr	w18, w5, w3
    d4c0:	strh	w18, [x0, #5936]
    d4c4:	sub	w3, w4, #0x10
    d4c8:	b	d1ec <inflateCodesUsed@@ZLIB_1.2.9+0x1db0>
    d4cc:	add	w3, w4, w3
    d4d0:	b	d1ec <inflateCodesUsed@@ZLIB_1.2.9+0x1db0>
    d4d4:	ldr	w3, [x0, #5940]
    d4d8:	ldrh	w18, [x0, #5936]
    d4dc:	ldrh	w8, [x1, #1026]
    d4e0:	ldrh	w9, [x1, #1024]
    d4e4:	mov	w10, #0x10                  	// #16
    d4e8:	sub	w12, w10, w8
    d4ec:	lsl	w11, w9, w3
    d4f0:	orr	w11, w18, w11
    d4f4:	cmp	w3, w12
    d4f8:	strh	w11, [x0, #5936]
    d4fc:	b.le	d55c <inflateCodesUsed@@ZLIB_1.2.9+0x2120>
    d500:	ldr	x12, [x0, #40]
    d504:	ldr	x13, [x0, #16]
    d508:	add	x14, x12, #0x1
    d50c:	str	x14, [x0, #40]
    d510:	mov	w14, #0x1730                	// #5936
    d514:	strb	w11, [x13, x12]
    d518:	add	x14, x0, x14
    d51c:	ldr	x11, [x0, #40]
    d520:	ldrb	w12, [x14, #1]
    d524:	ldr	x13, [x0, #16]
    d528:	add	x14, x11, #0x1
    d52c:	str	x14, [x0, #40]
    d530:	strb	w12, [x13, x11]
    d534:	ldr	w11, [x0, #5940]
    d538:	sub	w10, w10, w11
    d53c:	add	w8, w8, w11
    d540:	lsr	w9, w9, w10
    d544:	strh	w9, [x0, #5936]
    d548:	sub	w8, w8, #0x10
    d54c:	str	w8, [x0, #5940]
    d550:	ldp	x20, x19, [sp, #16]
    d554:	ldr	x21, [sp], #32
    d558:	ret
    d55c:	add	w8, w3, w8
    d560:	str	w8, [x0, #5940]
    d564:	ldp	x20, x19, [sp, #16]
    d568:	ldr	x21, [sp], #32
    d56c:	ret
    d570:	ldr	x8, [x0, #5904]
    d574:	ldr	w9, [x0, #5900]
    d578:	strh	w1, [x8, x9, lsl #1]
    d57c:	ldr	x8, [x0, #5888]
    d580:	add	w10, w9, #0x1
    d584:	str	w10, [x0, #5900]
    d588:	strb	w2, [x8, x9]
    d58c:	cbz	w1, d5ec <inflateCodesUsed@@ZLIB_1.2.9+0x21b0>
    d590:	ldr	w8, [x0, #5928]
    d594:	adrp	x10, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    d598:	add	x10, x10, #0xdb8
    d59c:	ldrb	w10, [x10, w2, uxtw]
    d5a0:	sub	w9, w1, #0x1
    d5a4:	lsr	w11, w9, #7
    d5a8:	add	w8, w8, #0x1
    d5ac:	cmp	w9, #0x100
    d5b0:	add	w11, w11, #0x100
    d5b4:	str	w8, [x0, #5928]
    d5b8:	mov	w8, #0x400                 	// #1024
    d5bc:	csel	w9, w9, w11, cc  // cc = lo, ul, last
    d5c0:	adrp	x11, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x2c2c>
    d5c4:	bfi	x8, x10, #2, #8
    d5c8:	add	x11, x11, #0xbb8
    d5cc:	add	x8, x8, x0
    d5d0:	ldrb	w9, [x11, w9, uxtw]
    d5d4:	ldrh	w10, [x8, #216]
    d5d8:	add	x9, x0, x9, lsl #2
    d5dc:	add	w10, w10, #0x1
    d5e0:	strh	w10, [x8, #216]
    d5e4:	add	x8, x9, #0x9c8
    d5e8:	b	d5f4 <inflateCodesUsed@@ZLIB_1.2.9+0x21b8>
    d5ec:	add	x8, x0, w2, uxtw #2
    d5f0:	add	x8, x8, #0xd4
    d5f4:	ldrh	w9, [x8]
    d5f8:	add	w9, w9, #0x1
    d5fc:	strh	w9, [x8]
    d600:	ldr	w8, [x0, #5896]
    d604:	ldr	w9, [x0, #5900]
    d608:	sub	w8, w8, #0x1
    d60c:	cmp	w9, w8
    d610:	cset	w0, eq  // eq = none
    d614:	ret
    d618:	stp	x22, x21, [sp, #-32]!
    d61c:	stp	x20, x19, [sp, #16]
    d620:	tbnz	w2, #31, db04 <inflateCodesUsed@@ZLIB_1.2.9+0x26c8>
    d624:	ldrh	w9, [x1, #2]
    d628:	mov	w18, #0x7                   	// #7
    d62c:	mov	w4, #0x8a                  	// #138
    d630:	mov	w10, #0x3                   	// #3
    d634:	mov	w13, #0x1730                	// #5936
    d638:	cmp	w9, #0x0
    d63c:	mov	x8, xzr
    d640:	mov	w3, wzr
    d644:	add	w11, w2, #0x1
    d648:	mov	w7, #0xffffffff            	// #-1
    d64c:	mov	w12, #0x10                  	// #16
    d650:	mov	w14, #0x6                   	// #6
    d654:	mov	w15, #0xfffe                	// #65534
    d658:	mov	w16, #0xfff6                	// #65526
    d65c:	add	x17, x0, x13
    d660:	csel	w6, w4, w18, eq  // eq = none
    d664:	cinc	w5, w10, ne  // ne = any
    d668:	mov	w18, #0xfffd                	// #65533
    d66c:	b	d684 <inflateCodesUsed@@ZLIB_1.2.9+0x2248>
    d670:	mov	w2, w7
    d674:	cmp	x8, x11
    d678:	mov	w7, w2
    d67c:	mov	w3, w4
    d680:	b.eq	db04 <inflateCodesUsed@@ZLIB_1.2.9+0x26c8>  // b.none
    d684:	add	x8, x8, #0x1
    d688:	mov	w2, w9
    d68c:	add	x9, x1, x8, lsl #2
    d690:	ldrh	w9, [x9, #2]
    d694:	add	w4, w3, #0x1
    d698:	cmp	w4, w6
    d69c:	b.ge	d6a8 <inflateCodesUsed@@ZLIB_1.2.9+0x226c>  // b.tcont
    d6a0:	cmp	w2, w9
    d6a4:	b.eq	d670 <inflateCodesUsed@@ZLIB_1.2.9+0x2234>  // b.none
    d6a8:	cmp	w4, w5
    d6ac:	b.ge	d760 <inflateCodesUsed@@ZLIB_1.2.9+0x2324>  // b.tcont
    d6b0:	ldr	w6, [x0, #5940]
    d6b4:	add	x5, x0, w2, uxtw #2
    d6b8:	add	x3, x5, #0xabe
    d6bc:	add	x5, x5, #0xabc
    d6c0:	b	d6d4 <inflateCodesUsed@@ZLIB_1.2.9+0x2298>
    d6c4:	add	w6, w6, w7
    d6c8:	subs	w4, w4, #0x1
    d6cc:	str	w6, [x0, #5940]
    d6d0:	b.eq	d748 <inflateCodesUsed@@ZLIB_1.2.9+0x230c>  // b.none
    d6d4:	ldrh	w7, [x3]
    d6d8:	ldrh	w19, [x5]
    d6dc:	ldrh	w20, [x0, #5936]
    d6e0:	sub	w21, w12, w7
    d6e4:	lsl	w22, w19, w6
    d6e8:	orr	w20, w20, w22
    d6ec:	cmp	w6, w21
    d6f0:	strh	w20, [x0, #5936]
    d6f4:	b.le	d6c4 <inflateCodesUsed@@ZLIB_1.2.9+0x2288>
    d6f8:	ldr	x6, [x0, #40]
    d6fc:	ldr	x21, [x0, #16]
    d700:	add	x22, x6, #0x1
    d704:	str	x22, [x0, #40]
    d708:	strb	w20, [x21, x6]
    d70c:	ldr	x6, [x0, #40]
    d710:	ldrb	w20, [x17, #1]
    d714:	ldr	x21, [x0, #16]
    d718:	add	x22, x6, #0x1
    d71c:	str	x22, [x0, #40]
    d720:	strb	w20, [x21, x6]
    d724:	ldr	w6, [x0, #5940]
    d728:	sub	w20, w12, w6
    d72c:	add	w6, w7, w6
    d730:	lsr	w7, w19, w20
    d734:	strh	w7, [x0, #5936]
    d738:	sub	w6, w6, #0x10
    d73c:	subs	w4, w4, #0x1
    d740:	str	w6, [x0, #5940]
    d744:	b.ne	d6d4 <inflateCodesUsed@@ZLIB_1.2.9+0x2298>  // b.any
    d748:	mov	w4, wzr
    d74c:	cbz	w9, daf8 <inflateCodesUsed@@ZLIB_1.2.9+0x26bc>
    d750:	cmp	w2, w9
    d754:	cinc	w5, w10, ne  // ne = any
    d758:	cinc	w6, w14, ne  // ne = any
    d75c:	b	d674 <inflateCodesUsed@@ZLIB_1.2.9+0x2238>
    d760:	cbz	w2, d778 <inflateCodesUsed@@ZLIB_1.2.9+0x233c>
    d764:	cmp	w2, w7
    d768:	b.ne	d7f4 <inflateCodesUsed@@ZLIB_1.2.9+0x23b8>  // b.any
    d76c:	ldr	w5, [x0, #5940]
    d770:	mov	w3, w4
    d774:	b	d8e8 <inflateCodesUsed@@ZLIB_1.2.9+0x24ac>
    d778:	cmp	w3, #0x9
    d77c:	b.gt	d86c <inflateCodesUsed@@ZLIB_1.2.9+0x2430>
    d780:	ldrh	w4, [x0, #2818]
    d784:	ldr	w7, [x0, #5940]
    d788:	ldrh	w6, [x0, #2816]
    d78c:	ldrh	w5, [x0, #5936]
    d790:	sub	w19, w12, w4
    d794:	cmp	w7, w19
    d798:	lsl	w20, w6, w7
    d79c:	orr	w5, w5, w20
    d7a0:	strh	w5, [x0, #5936]
    d7a4:	b.le	d9e4 <inflateCodesUsed@@ZLIB_1.2.9+0x25a8>
    d7a8:	ldr	x7, [x0, #40]
    d7ac:	ldr	x19, [x0, #16]
    d7b0:	add	x20, x7, #0x1
    d7b4:	str	x20, [x0, #40]
    d7b8:	strb	w5, [x19, x7]
    d7bc:	add	x20, x0, x13
    d7c0:	ldr	x5, [x0, #40]
    d7c4:	ldrb	w7, [x20, #1]
    d7c8:	ldr	x19, [x0, #16]
    d7cc:	add	x20, x5, #0x1
    d7d0:	str	x20, [x0, #40]
    d7d4:	strb	w7, [x19, x5]
    d7d8:	ldr	w5, [x0, #5940]
    d7dc:	sub	w7, w12, w5
    d7e0:	add	w4, w4, w5
    d7e4:	lsr	w5, w6, w7
    d7e8:	strh	w5, [x0, #5936]
    d7ec:	sub	w4, w4, #0x10
    d7f0:	b	d9e8 <inflateCodesUsed@@ZLIB_1.2.9+0x25ac>
    d7f4:	add	x5, x0, w2, uxtw #2
    d7f8:	ldr	w7, [x0, #5940]
    d7fc:	ldrh	w4, [x5, #2750]
    d800:	ldrh	w5, [x5, #2748]
    d804:	ldrh	w6, [x0, #5936]
    d808:	sub	w19, w12, w4
    d80c:	lsl	w20, w5, w7
    d810:	orr	w6, w6, w20
    d814:	cmp	w7, w19
    d818:	strh	w6, [x0, #5936]
    d81c:	b.le	d8e0 <inflateCodesUsed@@ZLIB_1.2.9+0x24a4>
    d820:	ldr	x7, [x0, #40]
    d824:	ldr	x19, [x0, #16]
    d828:	add	x20, x7, #0x1
    d82c:	str	x20, [x0, #40]
    d830:	strb	w6, [x19, x7]
    d834:	add	x20, x0, x13
    d838:	ldr	x6, [x0, #40]
    d83c:	ldrb	w7, [x20, #1]
    d840:	ldr	x19, [x0, #16]
    d844:	add	x20, x6, #0x1
    d848:	str	x20, [x0, #40]
    d84c:	strb	w7, [x19, x6]
    d850:	ldr	w6, [x0, #5940]
    d854:	sub	w7, w12, w6
    d858:	add	w4, w4, w6
    d85c:	lsr	w5, w5, w7
    d860:	strh	w5, [x0, #5936]
    d864:	sub	w5, w4, #0x10
    d868:	b	d8e4 <inflateCodesUsed@@ZLIB_1.2.9+0x24a8>
    d86c:	ldrh	w4, [x0, #2822]
    d870:	ldr	w7, [x0, #5940]
    d874:	ldrh	w6, [x0, #2820]
    d878:	ldrh	w5, [x0, #5936]
    d87c:	sub	w19, w12, w4
    d880:	cmp	w7, w19
    d884:	lsl	w20, w6, w7
    d888:	orr	w5, w5, w20
    d88c:	strh	w5, [x0, #5936]
    d890:	b.le	da5c <inflateCodesUsed@@ZLIB_1.2.9+0x2620>
    d894:	ldr	x7, [x0, #40]
    d898:	ldr	x19, [x0, #16]
    d89c:	add	x20, x7, #0x1
    d8a0:	str	x20, [x0, #40]
    d8a4:	strb	w5, [x19, x7]
    d8a8:	add	x20, x0, x13
    d8ac:	ldr	x5, [x0, #40]
    d8b0:	ldrb	w7, [x20, #1]
    d8b4:	ldr	x19, [x0, #16]
    d8b8:	add	x20, x5, #0x1
    d8bc:	str	x20, [x0, #40]
    d8c0:	strb	w7, [x19, x5]
    d8c4:	ldr	w5, [x0, #5940]
    d8c8:	sub	w7, w12, w5
    d8cc:	add	w4, w4, w5
    d8d0:	lsr	w5, w6, w7
    d8d4:	strh	w5, [x0, #5936]
    d8d8:	sub	w4, w4, #0x10
    d8dc:	b	da60 <inflateCodesUsed@@ZLIB_1.2.9+0x2624>
    d8e0:	add	w5, w7, w4
    d8e4:	str	w5, [x0, #5940]
    d8e8:	ldrh	w6, [x0, #2814]
    d8ec:	ldrh	w7, [x0, #2812]
    d8f0:	ldrh	w4, [x0, #5936]
    d8f4:	sub	w19, w12, w6
    d8f8:	lsl	w20, w7, w5
    d8fc:	orr	w4, w4, w20
    d900:	cmp	w5, w19
    d904:	strh	w4, [x0, #5936]
    d908:	b.le	d958 <inflateCodesUsed@@ZLIB_1.2.9+0x251c>
    d90c:	ldr	x5, [x0, #40]
    d910:	ldr	x19, [x0, #16]
    d914:	add	x20, x5, #0x1
    d918:	str	x20, [x0, #40]
    d91c:	strb	w4, [x19, x5]
    d920:	add	x20, x0, x13
    d924:	ldr	x4, [x0, #40]
    d928:	ldrb	w5, [x20, #1]
    d92c:	ldr	x19, [x0, #16]
    d930:	add	x20, x4, #0x1
    d934:	str	x20, [x0, #40]
    d938:	strb	w5, [x19, x4]
    d93c:	ldr	w4, [x0, #5940]
    d940:	sub	w5, w12, w4
    d944:	add	w6, w6, w4
    d948:	lsr	w4, w7, w5
    d94c:	strh	w4, [x0, #5936]
    d950:	sub	w5, w6, #0x10
    d954:	b	d95c <inflateCodesUsed@@ZLIB_1.2.9+0x2520>
    d958:	add	w5, w5, w6
    d95c:	add	w3, w3, w18
    d960:	and	w3, w3, #0xffff
    d964:	lsl	w6, w3, w5
    d968:	orr	w4, w4, w6
    d96c:	cmp	w5, #0xf
    d970:	str	w5, [x0, #5940]
    d974:	strh	w4, [x0, #5936]
    d978:	b.lt	d9d0 <inflateCodesUsed@@ZLIB_1.2.9+0x2594>  // b.tstop
    d97c:	ldr	x5, [x0, #40]
    d980:	ldr	x6, [x0, #16]
    d984:	add	x7, x5, #0x1
    d988:	str	x7, [x0, #40]
    d98c:	strb	w4, [x6, x5]
    d990:	add	x7, x0, x13
    d994:	ldr	x4, [x0, #40]
    d998:	ldrb	w5, [x7, #1]
    d99c:	ldr	x6, [x0, #16]
    d9a0:	add	x7, x4, #0x1
    d9a4:	str	x7, [x0, #40]
    d9a8:	strb	w5, [x6, x4]
    d9ac:	ldr	w4, [x0, #5940]
    d9b0:	sub	w5, w12, w4
    d9b4:	lsr	w3, w3, w5
    d9b8:	strh	w3, [x0, #5936]
    d9bc:	sub	w3, w4, #0xe
    d9c0:	str	w3, [x0, #5940]
    d9c4:	mov	w4, wzr
    d9c8:	cbnz	w9, d750 <inflateCodesUsed@@ZLIB_1.2.9+0x2314>
    d9cc:	b	daf8 <inflateCodesUsed@@ZLIB_1.2.9+0x26bc>
    d9d0:	add	w3, w5, #0x2
    d9d4:	str	w3, [x0, #5940]
    d9d8:	mov	w4, wzr
    d9dc:	cbnz	w9, d750 <inflateCodesUsed@@ZLIB_1.2.9+0x2314>
    d9e0:	b	daf8 <inflateCodesUsed@@ZLIB_1.2.9+0x26bc>
    d9e4:	add	w4, w7, w4
    d9e8:	add	w3, w3, w15
    d9ec:	and	w3, w3, #0xffff
    d9f0:	lsl	w6, w3, w4
    d9f4:	orr	w5, w5, w6
    d9f8:	cmp	w4, #0xe
    d9fc:	str	w4, [x0, #5940]
    da00:	strh	w5, [x0, #5936]
    da04:	b.lt	dad4 <inflateCodesUsed@@ZLIB_1.2.9+0x2698>  // b.tstop
    da08:	ldr	x4, [x0, #40]
    da0c:	ldr	x6, [x0, #16]
    da10:	add	x7, x4, #0x1
    da14:	str	x7, [x0, #40]
    da18:	strb	w5, [x6, x4]
    da1c:	add	x7, x0, x13
    da20:	ldr	x4, [x0, #40]
    da24:	ldrb	w5, [x7, #1]
    da28:	ldr	x6, [x0, #16]
    da2c:	add	x7, x4, #0x1
    da30:	str	x7, [x0, #40]
    da34:	strb	w5, [x6, x4]
    da38:	ldr	w4, [x0, #5940]
    da3c:	sub	w5, w12, w4
    da40:	lsr	w3, w3, w5
    da44:	strh	w3, [x0, #5936]
    da48:	sub	w3, w4, #0xd
    da4c:	str	w3, [x0, #5940]
    da50:	mov	w4, wzr
    da54:	cbnz	w9, d750 <inflateCodesUsed@@ZLIB_1.2.9+0x2314>
    da58:	b	daf8 <inflateCodesUsed@@ZLIB_1.2.9+0x26bc>
    da5c:	add	w4, w7, w4
    da60:	add	w3, w3, w16
    da64:	and	w3, w3, #0xffff
    da68:	lsl	w6, w3, w4
    da6c:	orr	w5, w5, w6
    da70:	cmp	w4, #0xa
    da74:	str	w4, [x0, #5940]
    da78:	strh	w5, [x0, #5936]
    da7c:	b.lt	dae8 <inflateCodesUsed@@ZLIB_1.2.9+0x26ac>  // b.tstop
    da80:	ldr	x4, [x0, #40]
    da84:	ldr	x6, [x0, #16]
    da88:	add	x7, x4, #0x1
    da8c:	str	x7, [x0, #40]
    da90:	strb	w5, [x6, x4]
    da94:	add	x7, x0, x13
    da98:	ldr	x4, [x0, #40]
    da9c:	ldrb	w5, [x7, #1]
    daa0:	ldr	x6, [x0, #16]
    daa4:	add	x7, x4, #0x1
    daa8:	str	x7, [x0, #40]
    daac:	strb	w5, [x6, x4]
    dab0:	ldr	w4, [x0, #5940]
    dab4:	sub	w5, w12, w4
    dab8:	lsr	w3, w3, w5
    dabc:	strh	w3, [x0, #5936]
    dac0:	sub	w3, w4, #0x9
    dac4:	str	w3, [x0, #5940]
    dac8:	mov	w4, wzr
    dacc:	cbnz	w9, d750 <inflateCodesUsed@@ZLIB_1.2.9+0x2314>
    dad0:	b	daf8 <inflateCodesUsed@@ZLIB_1.2.9+0x26bc>
    dad4:	add	w3, w4, #0x3
    dad8:	str	w3, [x0, #5940]
    dadc:	mov	w4, wzr
    dae0:	cbnz	w9, d750 <inflateCodesUsed@@ZLIB_1.2.9+0x2314>
    dae4:	b	daf8 <inflateCodesUsed@@ZLIB_1.2.9+0x26bc>
    dae8:	add	w3, w4, #0x7
    daec:	str	w3, [x0, #5940]
    daf0:	mov	w4, wzr
    daf4:	cbnz	w9, d750 <inflateCodesUsed@@ZLIB_1.2.9+0x2314>
    daf8:	mov	w6, #0x8a                  	// #138
    dafc:	mov	w5, #0x3                   	// #3
    db00:	b	d674 <inflateCodesUsed@@ZLIB_1.2.9+0x2238>
    db04:	ldp	x20, x19, [sp, #16]
    db08:	ldp	x22, x21, [sp], #32
    db0c:	ret

000000000000db10 <zlibVersion@@Base>:
    db10:	adrp	x0, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    db14:	add	x0, x0, #0x651
    db18:	ret

000000000000db1c <zlibCompileFlags@@ZLIB_1.2.0.2>:
    db1c:	mov	w0, #0xa9                  	// #169
    db20:	ret

000000000000db24 <zError@@Base>:
    db24:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x13c2c>
    db28:	ldr	x9, [x9, #4056]
    db2c:	mov	w8, #0x2                   	// #2
    db30:	sub	x8, x8, w0, sxtw
    db34:	ldr	x0, [x9, x8, lsl #3]
    db38:	ret
    db3c:	mul	w0, w2, w1
    db40:	b	23b0 <malloc@plt>
    db44:	mov	x0, x1
    db48:	b	24b0 <free@plt>

000000000000db4c <compress2@@Base>:
    db4c:	sub	sp, sp, #0xb0
    db50:	stp	x29, x30, [sp, #112]
    db54:	stp	x22, x21, [sp, #144]
    db58:	stp	x20, x19, [sp, #160]
    db5c:	str	x23, [sp, #128]
    db60:	ldr	x23, [x1]
    db64:	mov	x21, x2
    db68:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    db6c:	mov	x20, x3
    db70:	mov	x19, x1
    db74:	mov	x22, x0
    db78:	str	xzr, [x1]
    db7c:	add	x2, x2, #0x651
    db80:	mov	x0, sp
    db84:	mov	w3, #0x70                  	// #112
    db88:	mov	w1, w4
    db8c:	add	x29, sp, #0x70
    db90:	stp	xzr, xzr, [sp, #64]
    db94:	str	xzr, [sp, #80]
    db98:	bl	2430 <deflateInit_@plt>
    db9c:	cbnz	w0, dc2c <compress2@@Base+0xe0>
    dba0:	mov	w8, wzr
    dba4:	str	x22, [sp, #24]
    dba8:	str	wzr, [sp, #32]
    dbac:	str	x21, [sp]
    dbb0:	str	wzr, [sp, #8]
    dbb4:	mov	w22, #0xffffffff            	// #-1
    dbb8:	cbz	w8, dbe4 <compress2@@Base+0x98>
    dbbc:	ldr	w8, [sp, #8]
    dbc0:	cbz	w8, dbfc <compress2@@Base+0xb0>
    dbc4:	cmp	x20, #0x0
    dbc8:	cset	w8, eq  // eq = none
    dbcc:	lsl	w1, w8, #2
    dbd0:	mov	x0, sp
    dbd4:	bl	23e0 <deflate@plt>
    dbd8:	cbnz	w0, dc10 <compress2@@Base+0xc4>
    dbdc:	ldr	w8, [sp, #32]
    dbe0:	cbnz	w8, dbbc <compress2@@Base+0x70>
    dbe4:	cmp	x23, x22
    dbe8:	csel	x8, x23, x22, cc  // cc = lo, ul, last
    dbec:	sub	x23, x23, x8
    dbf0:	str	w8, [sp, #32]
    dbf4:	ldr	w8, [sp, #8]
    dbf8:	cbnz	w8, dbc4 <compress2@@Base+0x78>
    dbfc:	cmp	x20, x22
    dc00:	csel	x8, x20, x22, cc  // cc = lo, ul, last
    dc04:	sub	x20, x20, x8
    dc08:	str	w8, [sp, #8]
    dc0c:	b	dbc4 <compress2@@Base+0x78>
    dc10:	ldr	x8, [sp, #40]
    dc14:	mov	w21, w0
    dc18:	mov	x0, sp
    dc1c:	str	x8, [x19]
    dc20:	bl	24d0 <deflateEnd@plt>
    dc24:	cmp	w21, #0x1
    dc28:	csel	w0, wzr, w21, eq  // eq = none
    dc2c:	ldp	x20, x19, [sp, #160]
    dc30:	ldp	x22, x21, [sp, #144]
    dc34:	ldr	x23, [sp, #128]
    dc38:	ldp	x29, x30, [sp, #112]
    dc3c:	add	sp, sp, #0xb0
    dc40:	ret

000000000000dc44 <compress@@Base>:
    dc44:	sub	sp, sp, #0xb0
    dc48:	stp	x29, x30, [sp, #112]
    dc4c:	stp	x22, x21, [sp, #144]
    dc50:	stp	x20, x19, [sp, #160]
    dc54:	str	x23, [sp, #128]
    dc58:	ldr	x23, [x1]
    dc5c:	mov	x21, x2
    dc60:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    dc64:	mov	x20, x3
    dc68:	mov	x19, x1
    dc6c:	mov	x22, x0
    dc70:	str	xzr, [x1]
    dc74:	add	x2, x2, #0x651
    dc78:	mov	x0, sp
    dc7c:	mov	w1, #0xffffffff            	// #-1
    dc80:	mov	w3, #0x70                  	// #112
    dc84:	add	x29, sp, #0x70
    dc88:	stp	xzr, xzr, [sp, #64]
    dc8c:	str	xzr, [sp, #80]
    dc90:	bl	2430 <deflateInit_@plt>
    dc94:	cbnz	w0, dd24 <compress@@Base+0xe0>
    dc98:	mov	w8, wzr
    dc9c:	str	x22, [sp, #24]
    dca0:	str	wzr, [sp, #32]
    dca4:	str	x21, [sp]
    dca8:	str	wzr, [sp, #8]
    dcac:	mov	w22, #0xffffffff            	// #-1
    dcb0:	cbz	w8, dcdc <compress@@Base+0x98>
    dcb4:	ldr	w8, [sp, #8]
    dcb8:	cbz	w8, dcf4 <compress@@Base+0xb0>
    dcbc:	cmp	x20, #0x0
    dcc0:	cset	w8, eq  // eq = none
    dcc4:	lsl	w1, w8, #2
    dcc8:	mov	x0, sp
    dccc:	bl	23e0 <deflate@plt>
    dcd0:	cbnz	w0, dd08 <compress@@Base+0xc4>
    dcd4:	ldr	w8, [sp, #32]
    dcd8:	cbnz	w8, dcb4 <compress@@Base+0x70>
    dcdc:	cmp	x23, x22
    dce0:	csel	x8, x23, x22, cc  // cc = lo, ul, last
    dce4:	sub	x23, x23, x8
    dce8:	str	w8, [sp, #32]
    dcec:	ldr	w8, [sp, #8]
    dcf0:	cbnz	w8, dcbc <compress@@Base+0x78>
    dcf4:	cmp	x20, x22
    dcf8:	csel	x8, x20, x22, cc  // cc = lo, ul, last
    dcfc:	sub	x20, x20, x8
    dd00:	str	w8, [sp, #8]
    dd04:	b	dcbc <compress@@Base+0x78>
    dd08:	ldr	x8, [sp, #40]
    dd0c:	mov	w21, w0
    dd10:	mov	x0, sp
    dd14:	str	x8, [x19]
    dd18:	bl	24d0 <deflateEnd@plt>
    dd1c:	cmp	w21, #0x1
    dd20:	csel	w0, wzr, w21, eq  // eq = none
    dd24:	ldp	x20, x19, [sp, #160]
    dd28:	ldp	x22, x21, [sp, #144]
    dd2c:	ldr	x23, [sp, #128]
    dd30:	ldp	x29, x30, [sp, #112]
    dd34:	add	sp, sp, #0xb0
    dd38:	ret

000000000000dd3c <compressBound@@ZLIB_1.2.0>:
    dd3c:	add	x8, x0, x0, lsr #12
    dd40:	add	x8, x8, x0, lsr #14
    dd44:	add	x8, x8, x0, lsr #25
    dd48:	add	x0, x8, #0xd
    dd4c:	ret

000000000000dd50 <uncompress2@@ZLIB_1.2.9>:
    dd50:	sub	sp, sp, #0xc0
    dd54:	stp	x29, x30, [sp, #112]
    dd58:	stp	x24, x23, [sp, #144]
    dd5c:	stp	x22, x21, [sp, #160]
    dd60:	stp	x20, x19, [sp, #176]
    dd64:	ldr	x23, [x1]
    dd68:	ldr	x24, [x3]
    dd6c:	mov	x20, x3
    dd70:	mov	x19, x1
    dd74:	str	x25, [sp, #128]
    dd78:	add	x29, sp, #0x70
    dd7c:	cbz	x23, dd8c <uncompress2@@ZLIB_1.2.9+0x3c>
    dd80:	mov	x21, x0
    dd84:	str	xzr, [x19]
    dd88:	b	dd94 <uncompress2@@ZLIB_1.2.9+0x44>
    dd8c:	add	x21, x29, #0x1c
    dd90:	mov	w23, #0x1                   	// #1
    dd94:	adrp	x1, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    dd98:	str	x2, [sp]
    dd9c:	add	x1, x1, #0x651
    dda0:	mov	x0, sp
    dda4:	mov	w2, #0x70                  	// #112
    dda8:	str	wzr, [sp, #8]
    ddac:	stp	xzr, xzr, [sp, #72]
    ddb0:	str	xzr, [sp, #64]
    ddb4:	bl	24e0 <inflateInit_@plt>
    ddb8:	mov	w22, w0
    ddbc:	cbz	w0, dde0 <uncompress2@@ZLIB_1.2.9+0x90>
    ddc0:	mov	w0, w22
    ddc4:	ldp	x20, x19, [sp, #176]
    ddc8:	ldp	x22, x21, [sp, #160]
    ddcc:	ldp	x24, x23, [sp, #144]
    ddd0:	ldr	x25, [sp, #128]
    ddd4:	ldp	x29, x30, [sp, #112]
    ddd8:	add	sp, sp, #0xc0
    dddc:	ret
    dde0:	mov	w8, wzr
    dde4:	str	x21, [sp, #24]
    dde8:	str	wzr, [sp, #32]
    ddec:	mov	w25, #0xffffffff            	// #-1
    ddf0:	cbz	w8, de10 <uncompress2@@ZLIB_1.2.9+0xc0>
    ddf4:	ldr	w8, [sp, #8]
    ddf8:	cbz	w8, de28 <uncompress2@@ZLIB_1.2.9+0xd8>
    ddfc:	mov	x0, sp
    de00:	mov	w1, wzr
    de04:	bl	2360 <inflate@plt>
    de08:	cbz	w0, de48 <uncompress2@@ZLIB_1.2.9+0xf8>
    de0c:	b	de54 <uncompress2@@ZLIB_1.2.9+0x104>
    de10:	cmp	x23, x25
    de14:	csel	x8, x23, x25, cc  // cc = lo, ul, last
    de18:	sub	x23, x23, x8
    de1c:	str	w8, [sp, #32]
    de20:	ldr	w8, [sp, #8]
    de24:	cbnz	w8, ddfc <uncompress2@@ZLIB_1.2.9+0xac>
    de28:	cmp	x24, x25
    de2c:	csel	x8, x24, x25, cc  // cc = lo, ul, last
    de30:	sub	x24, x24, x8
    de34:	str	w8, [sp, #8]
    de38:	mov	x0, sp
    de3c:	mov	w1, wzr
    de40:	bl	2360 <inflate@plt>
    de44:	cbnz	w0, de54 <uncompress2@@ZLIB_1.2.9+0x104>
    de48:	ldr	w8, [sp, #32]
    de4c:	cbnz	w8, ddf4 <uncompress2@@ZLIB_1.2.9+0xa4>
    de50:	b	de10 <uncompress2@@ZLIB_1.2.9+0xc0>
    de54:	ldr	w8, [sp, #8]
    de58:	ldr	x9, [x20]
    de5c:	mov	w22, w0
    de60:	add	x8, x24, x8
    de64:	sub	x8, x9, x8
    de68:	str	x8, [x20]
    de6c:	ldr	x8, [sp, #40]
    de70:	add	x9, x29, #0x1c
    de74:	cmp	x21, x9
    de78:	b.eq	de94 <uncompress2@@ZLIB_1.2.9+0x144>  // b.none
    de7c:	str	x8, [x19]
    de80:	mov	x0, sp
    de84:	bl	2490 <inflateEnd@plt>
    de88:	cmp	w22, #0x2
    de8c:	b.ne	deb4 <uncompress2@@ZLIB_1.2.9+0x164>  // b.any
    de90:	b	ded0 <uncompress2@@ZLIB_1.2.9+0x180>
    de94:	cmp	x8, #0x0
    de98:	mov	w8, #0xfffffffb            	// #-5
    de9c:	ccmp	w22, w8, #0x0, ne  // ne = any
    dea0:	csinc	x23, x23, xzr, ne  // ne = any
    dea4:	mov	x0, sp
    dea8:	bl	2490 <inflateEnd@plt>
    deac:	cmp	w22, #0x2
    deb0:	b.eq	ded0 <uncompress2@@ZLIB_1.2.9+0x180>  // b.none
    deb4:	cmp	w22, #0x1
    deb8:	b.eq	ded8 <uncompress2@@ZLIB_1.2.9+0x188>  // b.none
    debc:	cmn	w22, #0x5
    dec0:	b.ne	ddc0 <uncompress2@@ZLIB_1.2.9+0x70>  // b.any
    dec4:	ldr	w8, [sp, #32]
    dec8:	cmn	x23, x8
    decc:	b.eq	ddc0 <uncompress2@@ZLIB_1.2.9+0x70>  // b.none
    ded0:	mov	w22, #0xfffffffd            	// #-3
    ded4:	b	ddc0 <uncompress2@@ZLIB_1.2.9+0x70>
    ded8:	mov	w22, wzr
    dedc:	b	ddc0 <uncompress2@@ZLIB_1.2.9+0x70>

000000000000dee0 <uncompress@@Base>:
    dee0:	sub	sp, sp, #0x20
    dee4:	str	x3, [sp, #8]
    dee8:	add	x3, sp, #0x8
    deec:	stp	x29, x30, [sp, #16]
    def0:	add	x29, sp, #0x10
    def4:	bl	2480 <uncompress2@plt>
    def8:	ldp	x29, x30, [sp, #16]
    defc:	add	sp, sp, #0x20
    df00:	ret

000000000000df04 <gzclose@@Base>:
    df04:	cbz	x0, df1c <gzclose@@Base+0x18>
    df08:	ldr	w8, [x0, #24]
    df0c:	mov	w9, #0x1c4f                	// #7247
    df10:	cmp	w8, w9
    df14:	b.ne	df24 <gzclose@@Base+0x20>  // b.any
    df18:	b	2370 <gzclose_r@plt>
    df1c:	mov	w0, #0xfffffffe            	// #-2
    df20:	ret
    df24:	b	24c0 <gzclose_w@plt>

000000000000df28 <gzopen@@Base>:
    df28:	mov	x2, x1
    df2c:	mov	w1, #0xffffffff            	// #-1
    df30:	b	df34 <gzopen@@Base+0xc>
    df34:	stp	x29, x30, [sp, #-80]!
    df38:	stp	x26, x25, [sp, #16]
    df3c:	stp	x24, x23, [sp, #32]
    df40:	stp	x22, x21, [sp, #48]
    df44:	stp	x20, x19, [sp, #64]
    df48:	mov	x29, sp
    df4c:	cbz	x0, e1dc <gzopen@@Base+0x2b4>
    df50:	mov	x21, x0
    df54:	mov	w0, #0xe8                  	// #232
    df58:	mov	x22, x2
    df5c:	mov	w20, w1
    df60:	bl	23b0 <malloc@plt>
    df64:	mov	x19, x0
    df68:	cbz	x0, e1e0 <gzopen@@Base+0x2b8>
    df6c:	adrp	x8, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    df70:	ldr	d0, [x8, #1624]
    df74:	movi	d1, #0xffffffff
    df78:	str	xzr, [x19, #112]
    df7c:	str	wzr, [x19, #24]
    df80:	str	d1, [x19, #88]
    df84:	str	d0, [x19, #40]
    df88:	str	wzr, [x19, #64]
    df8c:	ldrb	w15, [x22]
    df90:	cbz	w15, e1d4 <gzopen@@Base+0x2ac>
    df94:	adrp	x10, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    df98:	mov	w8, wzr
    df9c:	mov	w24, wzr
    dfa0:	mov	w25, wzr
    dfa4:	mov	w26, wzr
    dfa8:	add	x9, x22, #0x1
    dfac:	add	x10, x10, #0x660
    dfb0:	mov	w11, #0x4                   	// #4
    dfb4:	mov	w12, #0x3                   	// #3
    dfb8:	mov	w13, #0x1                   	// #1
    dfbc:	mov	w14, #0x2                   	// #2
    dfc0:	b	dfd4 <gzopen@@Base+0xac>
    dfc4:	sub	w15, w15, #0x30
    dfc8:	str	w15, [x19, #88]
    dfcc:	ldrb	w15, [x9], #1
    dfd0:	cbz	w15, e064 <gzopen@@Base+0x13c>
    dfd4:	sub	w16, w15, #0x30
    dfd8:	and	w16, w16, #0xff
    dfdc:	and	w15, w15, #0xff
    dfe0:	cmp	w16, #0x9
    dfe4:	b.ls	dfc4 <gzopen@@Base+0x9c>  // b.plast
    dfe8:	sub	w15, w15, #0x2b
    dfec:	cmp	w15, #0x4d
    dff0:	b.hi	dfcc <gzopen@@Base+0xa4>  // b.pmore
    dff4:	adr	x16, dfcc <gzopen@@Base+0xa4>
    dff8:	ldrb	w17, [x10, x15]
    dffc:	add	x16, x16, x17, lsl #2
    e000:	br	x16
    e004:	str	w11, [x19, #92]
    e008:	b	dfcc <gzopen@@Base+0xa4>
    e00c:	str	w12, [x19, #92]
    e010:	b	dfcc <gzopen@@Base+0xa4>
    e014:	mov	w8, #0x1                   	// #1
    e018:	str	w8, [x19, #64]
    e01c:	b	dfcc <gzopen@@Base+0xa4>
    e020:	mov	w24, #0x1                   	// #1
    e024:	str	w24, [x19, #24]
    e028:	b	dfcc <gzopen@@Base+0xa4>
    e02c:	mov	w26, #0x1                   	// #1
    e030:	b	dfcc <gzopen@@Base+0xa4>
    e034:	str	w13, [x19, #92]
    e038:	b	dfcc <gzopen@@Base+0xa4>
    e03c:	str	w14, [x19, #92]
    e040:	b	dfcc <gzopen@@Base+0xa4>
    e044:	mov	w24, #0x1c4f                	// #7247
    e048:	str	w24, [x19, #24]
    e04c:	b	dfcc <gzopen@@Base+0xa4>
    e050:	mov	w24, #0x79b1                	// #31153
    e054:	str	w24, [x19, #24]
    e058:	b	dfcc <gzopen@@Base+0xa4>
    e05c:	mov	w25, #0x1                   	// #1
    e060:	b	dfcc <gzopen@@Base+0xa4>
    e064:	mov	w9, #0x1c4f                	// #7247
    e068:	cmp	w24, w9
    e06c:	b.eq	e078 <gzopen@@Base+0x150>  // b.none
    e070:	cbz	w24, e1d4 <gzopen@@Base+0x2ac>
    e074:	b	e084 <gzopen@@Base+0x15c>
    e078:	cbnz	w8, e1d4 <gzopen@@Base+0x2ac>
    e07c:	mov	w8, #0x1                   	// #1
    e080:	str	w8, [x19, #64]
    e084:	mov	x0, x21
    e088:	bl	2350 <strlen@plt>
    e08c:	add	x23, x0, #0x1
    e090:	mov	x0, x23
    e094:	bl	23b0 <malloc@plt>
    e098:	str	x0, [x19, #32]
    e09c:	cbz	x0, e1d4 <gzopen@@Base+0x2ac>
    e0a0:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    e0a4:	add	x2, x2, #0x6c8
    e0a8:	mov	x1, x23
    e0ac:	mov	x3, x21
    e0b0:	mov	x22, x0
    e0b4:	bl	23a0 <snprintf@plt>
    e0b8:	cmp	w26, #0x0
    e0bc:	mov	w9, #0x1c4f                	// #7247
    e0c0:	cset	w8, ne  // ne = any
    e0c4:	cmp	w24, w9
    e0c8:	b.ne	e0d4 <gzopen@@Base+0x1ac>  // b.any
    e0cc:	mov	w9, wzr
    e0d0:	b	e0fc <gzopen@@Base+0x1d4>
    e0d4:	cmp	w25, #0x0
    e0d8:	mov	w9, #0xc1                  	// #193
    e0dc:	mov	w10, #0x41                  	// #65
    e0e0:	mov	w11, #0x79b1                	// #31153
    e0e4:	mov	w12, #0x400                 	// #1024
    e0e8:	csel	w9, w10, w9, eq  // eq = none
    e0ec:	cmp	w24, w11
    e0f0:	mov	w10, #0x200                 	// #512
    e0f4:	csel	w10, w10, w12, eq  // eq = none
    e0f8:	orr	w9, w10, w9
    e0fc:	tbnz	w20, #31, e108 <gzopen@@Base+0x1e0>
    e100:	str	w20, [x19, #28]
    e104:	b	e12c <gzopen@@Base+0x204>
    e108:	lsl	w8, w8, #19
    e10c:	orr	w1, w9, w8
    e110:	mov	w2, #0x1b6                 	// #438
    e114:	mov	x0, x21
    e118:	bl	23c0 <open@plt>
    e11c:	mov	w20, w0
    e120:	cmn	w0, #0x1
    e124:	str	w0, [x19, #28]
    e128:	b.eq	e1cc <gzopen@@Base+0x2a4>  // b.none
    e12c:	cmp	w24, #0x1
    e130:	b.ne	e150 <gzopen@@Base+0x228>  // b.any
    e134:	mov	w2, #0x2                   	// #2
    e138:	mov	w0, w20
    e13c:	mov	x1, xzr
    e140:	bl	2400 <lseek64@plt>
    e144:	mov	w8, #0x79b1                	// #31153
    e148:	str	w8, [x19, #24]
    e14c:	b	e198 <gzopen@@Base+0x270>
    e150:	ldr	w8, [x19, #24]
    e154:	mov	w21, #0x1c4f                	// #7247
    e158:	cmp	w8, w21
    e15c:	b.ne	e198 <gzopen@@Base+0x270>  // b.any
    e160:	mov	w2, #0x1                   	// #1
    e164:	mov	w0, w20
    e168:	mov	x1, xzr
    e16c:	bl	2400 <lseek64@plt>
    e170:	ldr	w8, [x19, #24]
    e174:	cmn	x0, #0x1
    e178:	csel	x9, xzr, x0, eq  // eq = none
    e17c:	str	x9, [x19, #72]
    e180:	cmp	w8, w21
    e184:	str	wzr, [x19]
    e188:	b.ne	e19c <gzopen@@Base+0x274>  // b.any
    e18c:	str	xzr, [x19, #80]
    e190:	str	wzr, [x19, #68]
    e194:	b	e19c <gzopen@@Base+0x274>
    e198:	str	wzr, [x19]
    e19c:	ldr	x0, [x19, #112]
    e1a0:	str	wzr, [x19, #104]
    e1a4:	cbz	x0, e1bc <gzopen@@Base+0x294>
    e1a8:	ldr	w8, [x19, #108]
    e1ac:	cmn	w8, #0x4
    e1b0:	b.eq	e1b8 <gzopen@@Base+0x290>  // b.none
    e1b4:	bl	24b0 <free@plt>
    e1b8:	str	xzr, [x19, #112]
    e1bc:	str	wzr, [x19, #108]
    e1c0:	str	xzr, [x19, #16]
    e1c4:	str	wzr, [x19, #128]
    e1c8:	b	e1e0 <gzopen@@Base+0x2b8>
    e1cc:	mov	x0, x22
    e1d0:	bl	24b0 <free@plt>
    e1d4:	mov	x0, x19
    e1d8:	bl	24b0 <free@plt>
    e1dc:	mov	x19, xzr
    e1e0:	mov	x0, x19
    e1e4:	ldp	x20, x19, [sp, #64]
    e1e8:	ldp	x22, x21, [sp, #48]
    e1ec:	ldp	x24, x23, [sp, #32]
    e1f0:	ldp	x26, x25, [sp, #16]
    e1f4:	ldp	x29, x30, [sp], #80
    e1f8:	ret

000000000000e1fc <gzopen64@@ZLIB_1.2.3.3>:
    e1fc:	mov	x2, x1
    e200:	mov	w1, #0xffffffff            	// #-1
    e204:	b	df34 <gzopen@@Base+0xc>

000000000000e208 <gzdopen@@Base>:
    e208:	stp	x29, x30, [sp, #-48]!
    e20c:	cmn	w0, #0x1
    e210:	str	x21, [sp, #16]
    e214:	stp	x20, x19, [sp, #32]
    e218:	mov	x29, sp
    e21c:	b.eq	e27c <gzdopen@@Base+0x74>  // b.none
    e220:	mov	w19, w0
    e224:	mov	w0, #0x13                  	// #19
    e228:	mov	x20, x1
    e22c:	bl	23b0 <malloc@plt>
    e230:	cbz	x0, e27c <gzdopen@@Base+0x74>
    e234:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    e238:	add	x2, x2, #0x6ae
    e23c:	mov	w1, #0x13                  	// #19
    e240:	mov	w3, w19
    e244:	mov	x21, x0
    e248:	bl	23a0 <snprintf@plt>
    e24c:	mov	x0, x21
    e250:	mov	w1, w19
    e254:	mov	x2, x20
    e258:	bl	df34 <gzopen@@Base+0xc>
    e25c:	mov	x19, x0
    e260:	mov	x0, x21
    e264:	bl	24b0 <free@plt>
    e268:	mov	x0, x19
    e26c:	ldp	x20, x19, [sp, #32]
    e270:	ldr	x21, [sp, #16]
    e274:	ldp	x29, x30, [sp], #48
    e278:	ret
    e27c:	mov	x0, xzr
    e280:	ldp	x20, x19, [sp, #32]
    e284:	ldr	x21, [sp, #16]
    e288:	ldp	x29, x30, [sp], #48
    e28c:	ret

000000000000e290 <gzbuffer@@ZLIB_1.2.3.5>:
    e290:	cbz	x0, e2e0 <gzbuffer@@ZLIB_1.2.3.5+0x50>
    e294:	ldr	w9, [x0, #24]
    e298:	mov	w10, #0x79b1                	// #31153
    e29c:	mov	x8, x0
    e2a0:	cmp	w9, w10
    e2a4:	b.eq	e2b4 <gzbuffer@@ZLIB_1.2.3.5+0x24>  // b.none
    e2a8:	mov	w10, #0x1c4f                	// #7247
    e2ac:	cmp	w9, w10
    e2b0:	b.ne	e2e0 <gzbuffer@@ZLIB_1.2.3.5+0x50>  // b.any
    e2b4:	cmp	w1, w1, lsl #1
    e2b8:	mov	w0, #0xffffffff            	// #-1
    e2bc:	b.hi	e2dc <gzbuffer@@ZLIB_1.2.3.5+0x4c>  // b.pmore
    e2c0:	ldr	w9, [x8, #40]
    e2c4:	cbnz	w9, e2dc <gzbuffer@@ZLIB_1.2.3.5+0x4c>
    e2c8:	cmp	w1, #0x2
    e2cc:	mov	w9, #0x2                   	// #2
    e2d0:	mov	w0, wzr
    e2d4:	csel	w9, w1, w9, hi  // hi = pmore
    e2d8:	str	w9, [x8, #44]
    e2dc:	ret
    e2e0:	mov	w0, #0xffffffff            	// #-1
    e2e4:	ret

000000000000e2e8 <gzrewind@@Base>:
    e2e8:	stp	x29, x30, [sp, #-32]!
    e2ec:	str	x19, [sp, #16]
    e2f0:	mov	x29, sp
    e2f4:	cbz	x0, e38c <gzrewind@@Base+0xa4>
    e2f8:	ldr	w8, [x0, #24]
    e2fc:	mov	w9, #0x1c4f                	// #7247
    e300:	mov	x19, x0
    e304:	cmp	w8, w9
    e308:	b.ne	e38c <gzrewind@@Base+0xa4>  // b.any
    e30c:	ldr	w8, [x19, #108]
    e310:	cbz	w8, e31c <gzrewind@@Base+0x34>
    e314:	cmn	w8, #0x5
    e318:	b.ne	e38c <gzrewind@@Base+0xa4>  // b.any
    e31c:	ldr	w0, [x19, #28]
    e320:	ldr	x1, [x19, #72]
    e324:	mov	w2, wzr
    e328:	bl	2400 <lseek64@plt>
    e32c:	cmn	x0, #0x1
    e330:	b.eq	e380 <gzrewind@@Base+0x98>  // b.none
    e334:	ldr	w8, [x19, #24]
    e338:	mov	w9, #0x1c4f                	// #7247
    e33c:	str	wzr, [x19]
    e340:	cmp	w8, w9
    e344:	b.ne	e350 <gzrewind@@Base+0x68>  // b.any
    e348:	str	xzr, [x19, #80]
    e34c:	str	wzr, [x19, #68]
    e350:	ldr	x0, [x19, #112]
    e354:	str	wzr, [x19, #104]
    e358:	cbz	x0, e370 <gzrewind@@Base+0x88>
    e35c:	ldr	w8, [x19, #108]
    e360:	cmn	w8, #0x4
    e364:	b.eq	e36c <gzrewind@@Base+0x84>  // b.none
    e368:	bl	24b0 <free@plt>
    e36c:	str	xzr, [x19, #112]
    e370:	mov	w0, wzr
    e374:	str	wzr, [x19, #108]
    e378:	str	xzr, [x19, #16]
    e37c:	str	wzr, [x19, #128]
    e380:	ldr	x19, [sp, #16]
    e384:	ldp	x29, x30, [sp], #32
    e388:	ret
    e38c:	mov	w0, #0xffffffff            	// #-1
    e390:	ldr	x19, [sp, #16]
    e394:	ldp	x29, x30, [sp], #32
    e398:	ret

000000000000e39c <gzseek64@@ZLIB_1.2.3.3>:
    e39c:	stp	x29, x30, [sp, #-32]!
    e3a0:	stp	x20, x19, [sp, #16]
    e3a4:	mov	x29, sp
    e3a8:	cbz	x0, e5a8 <gzseek64@@ZLIB_1.2.3.3+0x20c>
    e3ac:	ldr	w8, [x0, #24]
    e3b0:	mov	w9, #0x79b1                	// #31153
    e3b4:	mov	x19, x1
    e3b8:	mov	x20, x0
    e3bc:	cmp	w8, w9
    e3c0:	b.eq	e3d0 <gzseek64@@ZLIB_1.2.3.3+0x34>  // b.none
    e3c4:	mov	w9, #0x1c4f                	// #7247
    e3c8:	cmp	w8, w9
    e3cc:	b.ne	e5a8 <gzseek64@@ZLIB_1.2.3.3+0x20c>  // b.any
    e3d0:	ldr	w9, [x20, #108]
    e3d4:	cbz	w9, e3e0 <gzseek64@@ZLIB_1.2.3.3+0x44>
    e3d8:	cmn	w9, #0x5
    e3dc:	b.ne	e5a8 <gzseek64@@ZLIB_1.2.3.3+0x20c>  // b.any
    e3e0:	cmp	w2, #0x1
    e3e4:	b.ls	e3f8 <gzseek64@@ZLIB_1.2.3.3+0x5c>  // b.plast
    e3e8:	mov	x0, #0xffffffffffffffff    	// #-1
    e3ec:	ldp	x20, x19, [sp, #16]
    e3f0:	ldp	x29, x30, [sp], #32
    e3f4:	ret
    e3f8:	cbz	w2, e420 <gzseek64@@ZLIB_1.2.3.3+0x84>
    e3fc:	ldr	w10, [x20, #104]
    e400:	cbz	w10, e40c <gzseek64@@ZLIB_1.2.3.3+0x70>
    e404:	ldr	x10, [x20, #96]
    e408:	add	x19, x10, x19
    e40c:	mov	w10, #0x1c4f                	// #7247
    e410:	cmp	w8, w10
    e414:	str	wzr, [x20, #104]
    e418:	b.eq	e438 <gzseek64@@ZLIB_1.2.3.3+0x9c>  // b.none
    e41c:	b	e4b4 <gzseek64@@ZLIB_1.2.3.3+0x118>
    e420:	ldr	x10, [x20, #16]
    e424:	sub	x19, x19, x10
    e428:	mov	w10, #0x1c4f                	// #7247
    e42c:	cmp	w8, w10
    e430:	str	wzr, [x20, #104]
    e434:	b.ne	e4b4 <gzseek64@@ZLIB_1.2.3.3+0x118>  // b.any
    e438:	ldr	w10, [x20, #68]
    e43c:	cmp	w10, #0x1
    e440:	b.ne	e4b4 <gzseek64@@ZLIB_1.2.3.3+0x118>  // b.any
    e444:	ldr	x10, [x20, #16]
    e448:	cmn	x10, x19
    e44c:	b.mi	e4b4 <gzseek64@@ZLIB_1.2.3.3+0x118>  // b.first
    e450:	ldr	w8, [x20]
    e454:	ldr	w0, [x20, #28]
    e458:	mov	w2, #0x1                   	// #1
    e45c:	sub	x1, x19, x8
    e460:	bl	2400 <lseek64@plt>
    e464:	cmn	x0, #0x1
    e468:	b.eq	e3ec <gzseek64@@ZLIB_1.2.3.3+0x50>  // b.none
    e46c:	ldr	x0, [x20, #112]
    e470:	str	wzr, [x20]
    e474:	str	xzr, [x20, #80]
    e478:	str	wzr, [x20, #104]
    e47c:	cbz	x0, e494 <gzseek64@@ZLIB_1.2.3.3+0xf8>
    e480:	ldr	w8, [x20, #108]
    e484:	cmn	w8, #0x4
    e488:	b.eq	e490 <gzseek64@@ZLIB_1.2.3.3+0xf4>  // b.none
    e48c:	bl	24b0 <free@plt>
    e490:	str	xzr, [x20, #112]
    e494:	ldr	x8, [x20, #16]
    e498:	str	wzr, [x20, #108]
    e49c:	str	wzr, [x20, #128]
    e4a0:	add	x0, x8, x19
    e4a4:	str	x0, [x20, #16]
    e4a8:	ldp	x20, x19, [sp, #16]
    e4ac:	ldp	x29, x30, [sp], #32
    e4b0:	ret
    e4b4:	tbnz	x19, #63, e510 <gzseek64@@ZLIB_1.2.3.3+0x174>
    e4b8:	mov	w9, #0x1c4f                	// #7247
    e4bc:	cmp	w8, w9
    e4c0:	b.ne	e4ec <gzseek64@@ZLIB_1.2.3.3+0x150>  // b.any
    e4c4:	ldr	w8, [x20]
    e4c8:	ldp	x9, x10, [x20, #8]
    e4cc:	cmp	x19, x8
    e4d0:	csel	w11, w19, w8, lt  // lt = tstop
    e4d4:	sub	w8, w8, w11
    e4d8:	add	x9, x9, x11
    e4dc:	add	x10, x10, x11
    e4e0:	sub	x19, x19, x11
    e4e4:	str	w8, [x20]
    e4e8:	stp	x9, x10, [x20, #8]
    e4ec:	cbz	x19, e4fc <gzseek64@@ZLIB_1.2.3.3+0x160>
    e4f0:	mov	w8, #0x1                   	// #1
    e4f4:	str	w8, [x20, #104]
    e4f8:	str	x19, [x20, #96]
    e4fc:	ldr	x8, [x20, #16]
    e500:	add	x0, x8, x19
    e504:	ldp	x20, x19, [sp, #16]
    e508:	ldp	x29, x30, [sp], #32
    e50c:	ret
    e510:	mov	w10, #0x1c4f                	// #7247
    e514:	cmp	w8, w10
    e518:	b.ne	e5a8 <gzseek64@@ZLIB_1.2.3.3+0x20c>  // b.any
    e51c:	ldr	x8, [x20, #16]
    e520:	adds	x19, x8, x19
    e524:	b.mi	e5a8 <gzseek64@@ZLIB_1.2.3.3+0x20c>  // b.first
    e528:	cbz	w9, e534 <gzseek64@@ZLIB_1.2.3.3+0x198>
    e52c:	cmn	w9, #0x5
    e530:	b.ne	e5a8 <gzseek64@@ZLIB_1.2.3.3+0x20c>  // b.any
    e534:	ldr	w0, [x20, #28]
    e538:	ldr	x1, [x20, #72]
    e53c:	mov	w2, wzr
    e540:	bl	2400 <lseek64@plt>
    e544:	cmn	x0, #0x1
    e548:	b.eq	e3ec <gzseek64@@ZLIB_1.2.3.3+0x50>  // b.none
    e54c:	ldr	w8, [x20, #24]
    e550:	mov	w9, #0x1c4f                	// #7247
    e554:	str	wzr, [x20]
    e558:	cmp	w8, w9
    e55c:	b.ne	e568 <gzseek64@@ZLIB_1.2.3.3+0x1cc>  // b.any
    e560:	str	xzr, [x20, #80]
    e564:	str	wzr, [x20, #68]
    e568:	ldr	x0, [x20, #112]
    e56c:	str	wzr, [x20, #104]
    e570:	cbz	x0, e58c <gzseek64@@ZLIB_1.2.3.3+0x1f0>
    e574:	ldr	w9, [x20, #108]
    e578:	cmn	w9, #0x4
    e57c:	b.eq	e588 <gzseek64@@ZLIB_1.2.3.3+0x1ec>  // b.none
    e580:	bl	24b0 <free@plt>
    e584:	ldr	w8, [x20, #24]
    e588:	str	xzr, [x20, #112]
    e58c:	str	wzr, [x20, #108]
    e590:	str	xzr, [x20, #16]
    e594:	str	wzr, [x20, #128]
    e598:	mov	w9, #0x1c4f                	// #7247
    e59c:	cmp	w8, w9
    e5a0:	b.eq	e4c4 <gzseek64@@ZLIB_1.2.3.3+0x128>  // b.none
    e5a4:	b	e4ec <gzseek64@@ZLIB_1.2.3.3+0x150>
    e5a8:	mov	x0, #0xffffffffffffffff    	// #-1
    e5ac:	ldp	x20, x19, [sp, #16]
    e5b0:	ldp	x29, x30, [sp], #32
    e5b4:	ret
    e5b8:	stp	x29, x30, [sp, #-48]!
    e5bc:	stp	x22, x21, [sp, #16]
    e5c0:	stp	x20, x19, [sp, #32]
    e5c4:	mov	x20, x0
    e5c8:	ldr	x0, [x0, #112]
    e5cc:	mov	x19, x2
    e5d0:	mov	w21, w1
    e5d4:	mov	x29, sp
    e5d8:	cbz	x0, e5f0 <gzseek64@@ZLIB_1.2.3.3+0x254>
    e5dc:	ldr	w8, [x20, #108]
    e5e0:	cmn	w8, #0x4
    e5e4:	b.eq	e5ec <gzseek64@@ZLIB_1.2.3.3+0x250>  // b.none
    e5e8:	bl	24b0 <free@plt>
    e5ec:	str	xzr, [x20, #112]
    e5f0:	cmn	w21, #0x5
    e5f4:	b.eq	e600 <gzseek64@@ZLIB_1.2.3.3+0x264>  // b.none
    e5f8:	cbz	w21, e600 <gzseek64@@ZLIB_1.2.3.3+0x264>
    e5fc:	str	wzr, [x20]
    e600:	cmn	w21, #0x4
    e604:	str	w21, [x20, #108]
    e608:	b.eq	e690 <gzseek64@@ZLIB_1.2.3.3+0x2f4>  // b.none
    e60c:	cbz	x19, e690 <gzseek64@@ZLIB_1.2.3.3+0x2f4>
    e610:	ldr	x21, [x20, #32]
    e614:	mov	x0, x21
    e618:	bl	2350 <strlen@plt>
    e61c:	mov	x22, x0
    e620:	mov	x0, x19
    e624:	bl	2350 <strlen@plt>
    e628:	add	x8, x22, x0
    e62c:	add	x0, x8, #0x3
    e630:	bl	23b0 <malloc@plt>
    e634:	str	x0, [x20, #112]
    e638:	cbz	x0, e688 <gzseek64@@ZLIB_1.2.3.3+0x2ec>
    e63c:	mov	x22, x0
    e640:	mov	x0, x21
    e644:	bl	2350 <strlen@plt>
    e648:	mov	x20, x0
    e64c:	mov	x0, x19
    e650:	bl	2350 <strlen@plt>
    e654:	add	x8, x20, x0
    e658:	mov	x0, x22
    e65c:	mov	x3, x21
    e660:	mov	x5, x19
    e664:	ldp	x20, x19, [sp, #32]
    e668:	ldp	x22, x21, [sp, #16]
    e66c:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    e670:	adrp	x4, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    e674:	add	x2, x2, #0x6c4
    e678:	add	x1, x8, #0x3
    e67c:	add	x4, x4, #0x6cb
    e680:	ldp	x29, x30, [sp], #48
    e684:	b	23a0 <snprintf@plt>
    e688:	mov	w8, #0xfffffffc            	// #-4
    e68c:	str	w8, [x20, #108]
    e690:	ldp	x20, x19, [sp, #32]
    e694:	ldp	x22, x21, [sp, #16]
    e698:	ldp	x29, x30, [sp], #48
    e69c:	ret

000000000000e6a0 <gzseek@@Base>:
    e6a0:	b	2340 <gzseek64@plt>

000000000000e6a4 <gztell64@@ZLIB_1.2.3.3>:
    e6a4:	cbz	x0, e6dc <gztell64@@ZLIB_1.2.3.3+0x38>
    e6a8:	ldr	w8, [x0, #24]
    e6ac:	mov	w9, #0x79b1                	// #31153
    e6b0:	cmp	w8, w9
    e6b4:	b.eq	e6c4 <gztell64@@ZLIB_1.2.3.3+0x20>  // b.none
    e6b8:	mov	w9, #0x1c4f                	// #7247
    e6bc:	cmp	w8, w9
    e6c0:	b.ne	e6dc <gztell64@@ZLIB_1.2.3.3+0x38>  // b.any
    e6c4:	ldr	w9, [x0, #104]
    e6c8:	ldr	x8, [x0, #16]
    e6cc:	cbz	w9, e6e4 <gztell64@@ZLIB_1.2.3.3+0x40>
    e6d0:	ldr	x9, [x0, #96]
    e6d4:	add	x0, x9, x8
    e6d8:	ret
    e6dc:	mov	x0, #0xffffffffffffffff    	// #-1
    e6e0:	ret
    e6e4:	add	x0, xzr, x8
    e6e8:	ret

000000000000e6ec <gztell@@Base>:
    e6ec:	cbz	x0, e724 <gztell@@Base+0x38>
    e6f0:	ldr	w8, [x0, #24]
    e6f4:	mov	w9, #0x79b1                	// #31153
    e6f8:	cmp	w8, w9
    e6fc:	b.eq	e70c <gztell@@Base+0x20>  // b.none
    e700:	mov	w9, #0x1c4f                	// #7247
    e704:	cmp	w8, w9
    e708:	b.ne	e724 <gztell@@Base+0x38>  // b.any
    e70c:	ldr	w9, [x0, #104]
    e710:	ldr	x8, [x0, #16]
    e714:	cbz	w9, e72c <gztell@@Base+0x40>
    e718:	ldr	x9, [x0, #96]
    e71c:	add	x0, x9, x8
    e720:	ret
    e724:	mov	x0, #0xffffffffffffffff    	// #-1
    e728:	ret
    e72c:	add	x0, xzr, x8
    e730:	ret

000000000000e734 <gzoffset64@@ZLIB_1.2.3.5>:
    e734:	stp	x29, x30, [sp, #-32]!
    e738:	str	x19, [sp, #16]
    e73c:	mov	x29, sp
    e740:	cbz	x0, e7a0 <gzoffset64@@ZLIB_1.2.3.5+0x6c>
    e744:	ldr	w8, [x0, #24]
    e748:	mov	w9, #0x79b1                	// #31153
    e74c:	mov	x19, x0
    e750:	cmp	w8, w9
    e754:	b.eq	e764 <gzoffset64@@ZLIB_1.2.3.5+0x30>  // b.none
    e758:	mov	w9, #0x1c4f                	// #7247
    e75c:	cmp	w8, w9
    e760:	b.ne	e7a0 <gzoffset64@@ZLIB_1.2.3.5+0x6c>  // b.any
    e764:	ldr	w0, [x19, #28]
    e768:	mov	w2, #0x1                   	// #1
    e76c:	mov	x1, xzr
    e770:	bl	2400 <lseek64@plt>
    e774:	cmn	x0, #0x1
    e778:	b.eq	e794 <gzoffset64@@ZLIB_1.2.3.5+0x60>  // b.none
    e77c:	ldr	w8, [x19, #24]
    e780:	mov	w9, #0x1c4f                	// #7247
    e784:	cmp	w8, w9
    e788:	b.ne	e794 <gzoffset64@@ZLIB_1.2.3.5+0x60>  // b.any
    e78c:	ldr	w8, [x19, #128]
    e790:	sub	x0, x0, x8
    e794:	ldr	x19, [sp, #16]
    e798:	ldp	x29, x30, [sp], #32
    e79c:	ret
    e7a0:	mov	x0, #0xffffffffffffffff    	// #-1
    e7a4:	ldr	x19, [sp, #16]
    e7a8:	ldp	x29, x30, [sp], #32
    e7ac:	ret

000000000000e7b0 <gzoffset@@ZLIB_1.2.3.5>:
    e7b0:	stp	x29, x30, [sp, #-32]!
    e7b4:	str	x19, [sp, #16]
    e7b8:	mov	x29, sp
    e7bc:	cbz	x0, e81c <gzoffset@@ZLIB_1.2.3.5+0x6c>
    e7c0:	ldr	w8, [x0, #24]
    e7c4:	mov	w9, #0x79b1                	// #31153
    e7c8:	mov	x19, x0
    e7cc:	cmp	w8, w9
    e7d0:	b.eq	e7e0 <gzoffset@@ZLIB_1.2.3.5+0x30>  // b.none
    e7d4:	mov	w9, #0x1c4f                	// #7247
    e7d8:	cmp	w8, w9
    e7dc:	b.ne	e81c <gzoffset@@ZLIB_1.2.3.5+0x6c>  // b.any
    e7e0:	ldr	w0, [x19, #28]
    e7e4:	mov	w2, #0x1                   	// #1
    e7e8:	mov	x1, xzr
    e7ec:	bl	2400 <lseek64@plt>
    e7f0:	cmn	x0, #0x1
    e7f4:	b.eq	e810 <gzoffset@@ZLIB_1.2.3.5+0x60>  // b.none
    e7f8:	ldr	w8, [x19, #24]
    e7fc:	mov	w9, #0x1c4f                	// #7247
    e800:	cmp	w8, w9
    e804:	b.ne	e810 <gzoffset@@ZLIB_1.2.3.5+0x60>  // b.any
    e808:	ldr	w8, [x19, #128]
    e80c:	sub	x0, x0, x8
    e810:	ldr	x19, [sp, #16]
    e814:	ldp	x29, x30, [sp], #32
    e818:	ret
    e81c:	mov	x0, #0xffffffffffffffff    	// #-1
    e820:	ldr	x19, [sp, #16]
    e824:	ldp	x29, x30, [sp], #32
    e828:	ret

000000000000e82c <gzeof@@Base>:
    e82c:	cbz	x0, e844 <gzeof@@Base+0x18>
    e830:	ldr	w8, [x0, #24]
    e834:	mov	w9, #0x1c4f                	// #7247
    e838:	cmp	w8, w9
    e83c:	b.ne	e848 <gzeof@@Base+0x1c>  // b.any
    e840:	ldr	w0, [x0, #84]
    e844:	ret
    e848:	mov	w0, wzr
    e84c:	ret

000000000000e850 <gzerror@@Base>:
    e850:	cbz	x0, e8b0 <gzerror@@Base+0x60>
    e854:	ldr	w8, [x0, #24]
    e858:	mov	w9, #0x79b1                	// #31153
    e85c:	cmp	w8, w9
    e860:	b.eq	e870 <gzerror@@Base+0x20>  // b.none
    e864:	mov	w9, #0x1c4f                	// #7247
    e868:	cmp	w8, w9
    e86c:	b.ne	e894 <gzerror@@Base+0x44>  // b.any
    e870:	cbz	x1, e87c <gzerror@@Base+0x2c>
    e874:	ldr	w8, [x0, #108]
    e878:	str	w8, [x1]
    e87c:	ldr	w8, [x0, #108]
    e880:	cmn	w8, #0x4
    e884:	b.ne	e89c <gzerror@@Base+0x4c>  // b.any
    e888:	adrp	x0, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    e88c:	add	x0, x0, #0x6b6
    e890:	ret
    e894:	mov	x0, xzr
    e898:	ret
    e89c:	ldr	x8, [x0, #112]
    e8a0:	adrp	x9, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    e8a4:	add	x9, x9, #0x6cd
    e8a8:	cmp	x8, #0x0
    e8ac:	csel	x0, x9, x8, eq  // eq = none
    e8b0:	ret

000000000000e8b4 <gzclearerr@@ZLIB_1.2.0.2>:
    e8b4:	stp	x29, x30, [sp, #-32]!
    e8b8:	str	x19, [sp, #16]
    e8bc:	mov	x29, sp
    e8c0:	cbz	x0, e908 <gzclearerr@@ZLIB_1.2.0.2+0x54>
    e8c4:	ldr	w8, [x0, #24]
    e8c8:	mov	w9, #0x79b1                	// #31153
    e8cc:	mov	x19, x0
    e8d0:	cmp	w8, w9
    e8d4:	b.eq	e8e8 <gzclearerr@@ZLIB_1.2.0.2+0x34>  // b.none
    e8d8:	mov	w9, #0x1c4f                	// #7247
    e8dc:	cmp	w8, w9
    e8e0:	b.ne	e908 <gzclearerr@@ZLIB_1.2.0.2+0x54>  // b.any
    e8e4:	str	xzr, [x19, #80]
    e8e8:	ldr	x0, [x19, #112]
    e8ec:	cbz	x0, e904 <gzclearerr@@ZLIB_1.2.0.2+0x50>
    e8f0:	ldr	w8, [x19, #108]
    e8f4:	cmn	w8, #0x4
    e8f8:	b.eq	e900 <gzclearerr@@ZLIB_1.2.0.2+0x4c>  // b.none
    e8fc:	bl	24b0 <free@plt>
    e900:	str	xzr, [x19, #112]
    e904:	str	wzr, [x19, #108]
    e908:	ldr	x19, [sp, #16]
    e90c:	ldp	x29, x30, [sp], #32
    e910:	ret

000000000000e914 <gzread@@Base>:
    e914:	stp	x29, x30, [sp, #-32]!
    e918:	str	x19, [sp, #16]
    e91c:	mov	x29, sp
    e920:	cbz	x0, e97c <gzread@@Base+0x68>
    e924:	ldr	w8, [x0, #24]
    e928:	mov	w9, #0x1c4f                	// #7247
    e92c:	mov	x19, x0
    e930:	cmp	w8, w9
    e934:	b.ne	e97c <gzread@@Base+0x68>  // b.any
    e938:	ldr	w8, [x19, #108]
    e93c:	cbz	w8, e948 <gzread@@Base+0x34>
    e940:	cmn	w8, #0x5
    e944:	b.ne	e97c <gzread@@Base+0x68>  // b.any
    e948:	tbnz	w2, #31, e968 <gzread@@Base+0x54>
    e94c:	mov	w2, w2
    e950:	mov	x0, x19
    e954:	bl	e9a0 <gzread@@Base+0x8c>
    e958:	cbz	w0, e98c <gzread@@Base+0x78>
    e95c:	ldr	x19, [sp, #16]
    e960:	ldp	x29, x30, [sp], #32
    e964:	ret
    e968:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    e96c:	add	x2, x2, #0x6d5
    e970:	mov	w1, #0xfffffffe            	// #-2
    e974:	mov	x0, x19
    e978:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    e97c:	mov	w0, #0xffffffff            	// #-1
    e980:	ldr	x19, [sp, #16]
    e984:	ldp	x29, x30, [sp], #32
    e988:	ret
    e98c:	ldr	w8, [x19, #108]
    e990:	cbz	w8, e95c <gzread@@Base+0x48>
    e994:	cmn	w8, #0x5
    e998:	b.eq	e95c <gzread@@Base+0x48>  // b.none
    e99c:	b	e97c <gzread@@Base+0x68>
    e9a0:	stp	x29, x30, [sp, #-96]!
    e9a4:	str	x27, [sp, #16]
    e9a8:	stp	x26, x25, [sp, #32]
    e9ac:	stp	x24, x23, [sp, #48]
    e9b0:	stp	x22, x21, [sp, #64]
    e9b4:	stp	x20, x19, [sp, #80]
    e9b8:	mov	x29, sp
    e9bc:	cbz	x2, ea44 <gzread@@Base+0x130>
    e9c0:	ldr	w8, [x0, #104]
    e9c4:	mov	x20, x2
    e9c8:	mov	x21, x1
    e9cc:	mov	x19, x0
    e9d0:	cbz	w8, e9e0 <gzread@@Base+0xcc>
    e9d4:	ldr	x22, [x19, #96]
    e9d8:	str	wzr, [x19, #104]
    e9dc:	cbnz	x22, ea1c <gzread@@Base+0x108>
    e9e0:	mov	x22, xzr
    e9e4:	mov	w24, #0xffffffff            	// #-1
    e9e8:	mov	w25, #0x40000000            	// #1073741824
    e9ec:	mov	w26, #0x1                   	// #1
    e9f0:	b	ea7c <gzread@@Base+0x168>
    e9f4:	ldp	x9, x10, [x19, #8]
    e9f8:	cmp	x22, x8
    e9fc:	csel	w11, w22, w8, lt  // lt = tstop
    ea00:	sub	w8, w8, w11
    ea04:	str	w8, [x19]
    ea08:	add	x8, x9, x11
    ea0c:	add	x9, x10, x11
    ea10:	sub	x22, x22, x11
    ea14:	stp	x8, x9, [x19, #8]
    ea18:	cbz	x22, e9e0 <gzread@@Base+0xcc>
    ea1c:	ldr	w8, [x19]
    ea20:	cbnz	w8, e9f4 <gzread@@Base+0xe0>
    ea24:	ldr	w8, [x19, #80]
    ea28:	cbz	w8, ea34 <gzread@@Base+0x120>
    ea2c:	ldr	w8, [x19, #128]
    ea30:	cbz	w8, e9e0 <gzread@@Base+0xcc>
    ea34:	mov	x0, x19
    ea38:	bl	f064 <gzgets@@Base+0x198>
    ea3c:	cmn	w0, #0x1
    ea40:	b.ne	ea18 <gzread@@Base+0x104>  // b.any
    ea44:	mov	x22, xzr
    ea48:	mov	x0, x22
    ea4c:	ldp	x20, x19, [sp, #80]
    ea50:	ldp	x22, x21, [sp, #64]
    ea54:	ldp	x24, x23, [sp, #48]
    ea58:	ldp	x26, x25, [sp, #32]
    ea5c:	ldr	x27, [sp, #16]
    ea60:	ldp	x29, x30, [sp], #96
    ea64:	ret
    ea68:	mov	x0, x19
    ea6c:	bl	f064 <gzgets@@Base+0x198>
    ea70:	cmn	w0, #0x1
    ea74:	b.eq	ea44 <gzread@@Base+0x130>  // b.none
    ea78:	cbz	x20, ea48 <gzread@@Base+0x134>
    ea7c:	ldr	w8, [x19]
    ea80:	cmp	x20, x24
    ea84:	csinv	w27, w20, wzr, cc  // cc = lo, ul, last
    ea88:	cbz	w8, eae0 <gzread@@Base+0x1cc>
    ea8c:	ldr	x1, [x19, #8]
    ea90:	cmp	w8, w27
    ea94:	csel	w23, w8, w27, cc  // cc = lo, ul, last
    ea98:	mov	x0, x21
    ea9c:	mov	x2, x23
    eaa0:	bl	2310 <memcpy@plt>
    eaa4:	ldr	x8, [x19, #8]
    eaa8:	ldr	w9, [x19]
    eaac:	add	x8, x8, x23
    eab0:	sub	w9, w9, w23
    eab4:	str	x8, [x19, #8]
    eab8:	str	w9, [x19]
    eabc:	ldr	x9, [x19, #16]
    eac0:	mov	w8, w23
    eac4:	sub	x20, x20, x8
    eac8:	add	x21, x21, x8
    eacc:	add	x22, x22, x8
    ead0:	add	x8, x9, x8
    ead4:	str	x8, [x19, #16]
    ead8:	cbnz	x20, ea7c <gzread@@Base+0x168>
    eadc:	b	ea48 <gzread@@Base+0x134>
    eae0:	ldr	w8, [x19, #80]
    eae4:	cbz	w8, eaf0 <gzread@@Base+0x1dc>
    eae8:	ldr	w8, [x19, #128]
    eaec:	cbz	w8, eb74 <gzread@@Base+0x260>
    eaf0:	ldr	w8, [x19, #68]
    eaf4:	cbz	w8, ea68 <gzread@@Base+0x154>
    eaf8:	ldr	w9, [x19, #40]
    eafc:	cmp	w27, w9, lsl #1
    eb00:	b.cc	ea68 <gzread@@Base+0x154>  // b.lo, b.ul, b.last
    eb04:	cmp	w8, #0x1
    eb08:	b.ne	eb44 <gzread@@Base+0x230>  // b.any
    eb0c:	mov	w23, wzr
    eb10:	sub	w8, w27, w23
    eb14:	ldr	w0, [x19, #28]
    eb18:	lsr	w9, w8, #30
    eb1c:	cmp	w9, #0x0
    eb20:	csel	w2, w8, w25, eq  // eq = none
    eb24:	add	x1, x21, w23, uxtw
    eb28:	bl	24f0 <read@plt>
    eb2c:	cmp	w0, #0x1
    eb30:	b.lt	eb68 <gzread@@Base+0x254>  // b.tstop
    eb34:	add	w23, w23, w0
    eb38:	cmp	w23, w27
    eb3c:	b.cc	eb10 <gzread@@Base+0x1fc>  // b.lo, b.ul, b.last
    eb40:	b	eabc <gzread@@Base+0x1a8>
    eb44:	mov	x0, x19
    eb48:	str	w27, [x19, #152]
    eb4c:	str	x21, [x19, #144]
    eb50:	bl	f4cc <gzclose_r@@ZLIB_1.2.3.5+0xac>
    eb54:	cmn	w0, #0x1
    eb58:	b.eq	ea44 <gzread@@Base+0x130>  // b.none
    eb5c:	ldr	w23, [x19]
    eb60:	str	wzr, [x19]
    eb64:	b	eabc <gzread@@Base+0x1a8>
    eb68:	tbnz	w0, #31, eb80 <gzread@@Base+0x26c>
    eb6c:	str	w26, [x19, #80]
    eb70:	b	eabc <gzread@@Base+0x1a8>
    eb74:	mov	w8, #0x1                   	// #1
    eb78:	str	w8, [x19, #84]
    eb7c:	b	ea48 <gzread@@Base+0x134>
    eb80:	bl	2560 <__errno_location@plt>
    eb84:	ldr	w0, [x0]
    eb88:	bl	2440 <strerror@plt>
    eb8c:	mov	x2, x0
    eb90:	mov	w1, #0xffffffff            	// #-1
    eb94:	mov	x0, x19
    eb98:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    eb9c:	b	ea44 <gzread@@Base+0x130>

000000000000eba0 <gzfread@@ZLIB_1.2.9>:
    eba0:	stp	x29, x30, [sp, #-32]!
    eba4:	str	x19, [sp, #16]
    eba8:	mov	x29, sp
    ebac:	cbz	x3, ec24 <gzfread@@ZLIB_1.2.9+0x84>
    ebb0:	ldr	w8, [x3, #24]
    ebb4:	mov	w9, #0x1c4f                	// #7247
    ebb8:	cmp	w8, w9
    ebbc:	b.ne	ec24 <gzfread@@ZLIB_1.2.9+0x84>  // b.any
    ebc0:	ldr	w8, [x3, #108]
    ebc4:	mov	x19, x1
    ebc8:	mov	x1, x0
    ebcc:	cbz	w8, ebd8 <gzfread@@ZLIB_1.2.9+0x38>
    ebd0:	cmn	w8, #0x5
    ebd4:	b.ne	ec24 <gzfread@@ZLIB_1.2.9+0x84>  // b.any
    ebd8:	umulh	x8, x19, x2
    ebdc:	cmp	xzr, x8
    ebe0:	cset	w8, ne  // ne = any
    ebe4:	cbz	x19, ec04 <gzfread@@ZLIB_1.2.9+0x64>
    ebe8:	cbz	w8, ec04 <gzfread@@ZLIB_1.2.9+0x64>
    ebec:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    ebf0:	add	x2, x2, #0x6f4
    ebf4:	mov	w1, #0xfffffffe            	// #-2
    ebf8:	mov	x0, x3
    ebfc:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    ec00:	b	ec24 <gzfread@@ZLIB_1.2.9+0x84>
    ec04:	mul	x2, x19, x2
    ec08:	cbz	x2, ec24 <gzfread@@ZLIB_1.2.9+0x84>
    ec0c:	mov	x0, x3
    ec10:	bl	e9a0 <gzread@@Base+0x8c>
    ec14:	udiv	x0, x0, x19
    ec18:	ldr	x19, [sp, #16]
    ec1c:	ldp	x29, x30, [sp], #32
    ec20:	ret
    ec24:	mov	x0, xzr
    ec28:	ldr	x19, [sp, #16]
    ec2c:	ldp	x29, x30, [sp], #32
    ec30:	ret

000000000000ec34 <gzgetc@@Base>:
    ec34:	sub	sp, sp, #0x20
    ec38:	stp	x29, x30, [sp, #16]
    ec3c:	add	x29, sp, #0x10
    ec40:	cbz	x0, ec94 <gzgetc@@Base+0x60>
    ec44:	ldr	w8, [x0, #24]
    ec48:	mov	w9, #0x1c4f                	// #7247
    ec4c:	cmp	w8, w9
    ec50:	b.ne	ec94 <gzgetc@@Base+0x60>  // b.any
    ec54:	ldr	w8, [x0, #108]
    ec58:	cbz	w8, ec64 <gzgetc@@Base+0x30>
    ec5c:	cmn	w8, #0x5
    ec60:	b.ne	ec94 <gzgetc@@Base+0x60>  // b.any
    ec64:	ldr	w8, [x0]
    ec68:	cbz	w8, eca4 <gzgetc@@Base+0x70>
    ec6c:	ldp	x10, x9, [x0, #8]
    ec70:	sub	w8, w8, #0x1
    ec74:	str	w8, [x0]
    ec78:	add	x8, x9, #0x1
    ec7c:	add	x9, x10, #0x1
    ec80:	stp	x9, x8, [x0, #8]
    ec84:	ldrb	w0, [x10]
    ec88:	ldp	x29, x30, [sp, #16]
    ec8c:	add	sp, sp, #0x20
    ec90:	ret
    ec94:	mov	w0, #0xffffffff            	// #-1
    ec98:	ldp	x29, x30, [sp, #16]
    ec9c:	add	sp, sp, #0x20
    eca0:	ret
    eca4:	sub	x1, x29, #0x4
    eca8:	mov	w2, #0x1                   	// #1
    ecac:	bl	e9a0 <gzread@@Base+0x8c>
    ecb0:	ldurb	w8, [x29, #-4]
    ecb4:	cmp	w0, #0x1
    ecb8:	csinv	w0, w8, wzr, ge  // ge = tcont
    ecbc:	ldp	x29, x30, [sp, #16]
    ecc0:	add	sp, sp, #0x20
    ecc4:	ret

000000000000ecc8 <gzgetc_@@ZLIB_1.2.5.2>:
    ecc8:	sub	sp, sp, #0x20
    eccc:	stp	x29, x30, [sp, #16]
    ecd0:	add	x29, sp, #0x10
    ecd4:	cbz	x0, ed28 <gzgetc_@@ZLIB_1.2.5.2+0x60>
    ecd8:	ldr	w8, [x0, #24]
    ecdc:	mov	w9, #0x1c4f                	// #7247
    ece0:	cmp	w8, w9
    ece4:	b.ne	ed28 <gzgetc_@@ZLIB_1.2.5.2+0x60>  // b.any
    ece8:	ldr	w8, [x0, #108]
    ecec:	cbz	w8, ecf8 <gzgetc_@@ZLIB_1.2.5.2+0x30>
    ecf0:	cmn	w8, #0x5
    ecf4:	b.ne	ed28 <gzgetc_@@ZLIB_1.2.5.2+0x60>  // b.any
    ecf8:	ldr	w8, [x0]
    ecfc:	cbz	w8, ed38 <gzgetc_@@ZLIB_1.2.5.2+0x70>
    ed00:	ldp	x10, x9, [x0, #8]
    ed04:	sub	w8, w8, #0x1
    ed08:	str	w8, [x0]
    ed0c:	add	x8, x9, #0x1
    ed10:	add	x9, x10, #0x1
    ed14:	stp	x9, x8, [x0, #8]
    ed18:	ldrb	w0, [x10]
    ed1c:	ldp	x29, x30, [sp, #16]
    ed20:	add	sp, sp, #0x20
    ed24:	ret
    ed28:	mov	w0, #0xffffffff            	// #-1
    ed2c:	ldp	x29, x30, [sp, #16]
    ed30:	add	sp, sp, #0x20
    ed34:	ret
    ed38:	sub	x1, x29, #0x4
    ed3c:	mov	w2, #0x1                   	// #1
    ed40:	bl	e9a0 <gzread@@Base+0x8c>
    ed44:	ldurb	w8, [x29, #-4]
    ed48:	cmp	w0, #0x1
    ed4c:	csinv	w0, w8, wzr, ge  // ge = tcont
    ed50:	ldp	x29, x30, [sp, #16]
    ed54:	add	sp, sp, #0x20
    ed58:	ret

000000000000ed5c <gzungetc@@ZLIB_1.2.0.2>:
    ed5c:	stp	x29, x30, [sp, #-48]!
    ed60:	str	x21, [sp, #16]
    ed64:	stp	x20, x19, [sp, #32]
    ed68:	mov	x29, sp
    ed6c:	cbz	x1, ee30 <gzungetc@@ZLIB_1.2.0.2+0xd4>
    ed70:	ldr	w8, [x1, #24]
    ed74:	mov	w9, #0x1c4f                	// #7247
    ed78:	mov	x20, x1
    ed7c:	cmp	w8, w9
    ed80:	b.ne	ee30 <gzungetc@@ZLIB_1.2.0.2+0xd4>  // b.any
    ed84:	ldr	w8, [x20, #108]
    ed88:	mov	w19, w0
    ed8c:	cbz	w8, ed98 <gzungetc@@ZLIB_1.2.0.2+0x3c>
    ed90:	cmn	w8, #0x5
    ed94:	b.ne	ee30 <gzungetc@@ZLIB_1.2.0.2+0xd4>  // b.any
    ed98:	ldr	w8, [x20, #104]
    ed9c:	cbz	w8, edac <gzungetc@@ZLIB_1.2.0.2+0x50>
    eda0:	ldr	x21, [x20, #96]
    eda4:	str	wzr, [x20, #104]
    eda8:	cbnz	x21, ee08 <gzungetc@@ZLIB_1.2.0.2+0xac>
    edac:	tbnz	w19, #31, ee30 <gzungetc@@ZLIB_1.2.0.2+0xd4>
    edb0:	ldr	w9, [x20]
    edb4:	cbz	w9, ee48 <gzungetc@@ZLIB_1.2.0.2+0xec>
    edb8:	ldr	w8, [x20, #40]
    edbc:	lsl	w10, w8, #1
    edc0:	cmp	w9, w10
    edc4:	b.ne	ee6c <gzungetc@@ZLIB_1.2.0.2+0x110>  // b.any
    edc8:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    edcc:	add	x2, x2, #0x715
    edd0:	mov	w1, #0xfffffffd            	// #-3
    edd4:	mov	x0, x20
    edd8:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    eddc:	b	ee30 <gzungetc@@ZLIB_1.2.0.2+0xd4>
    ede0:	ldp	x9, x10, [x20, #8]
    ede4:	cmp	x21, x8
    ede8:	csel	w11, w21, w8, lt  // lt = tstop
    edec:	sub	w8, w8, w11
    edf0:	str	w8, [x20]
    edf4:	add	x8, x9, x11
    edf8:	add	x9, x10, x11
    edfc:	sub	x21, x21, x11
    ee00:	stp	x8, x9, [x20, #8]
    ee04:	cbz	x21, edac <gzungetc@@ZLIB_1.2.0.2+0x50>
    ee08:	ldr	w8, [x20]
    ee0c:	cbnz	w8, ede0 <gzungetc@@ZLIB_1.2.0.2+0x84>
    ee10:	ldr	w8, [x20, #80]
    ee14:	cbz	w8, ee20 <gzungetc@@ZLIB_1.2.0.2+0xc4>
    ee18:	ldr	w8, [x20, #128]
    ee1c:	cbz	w8, edac <gzungetc@@ZLIB_1.2.0.2+0x50>
    ee20:	mov	x0, x20
    ee24:	bl	f064 <gzgets@@Base+0x198>
    ee28:	cmn	w0, #0x1
    ee2c:	b.ne	ee04 <gzungetc@@ZLIB_1.2.0.2+0xa8>  // b.any
    ee30:	mov	w19, #0xffffffff            	// #-1
    ee34:	mov	w0, w19
    ee38:	ldp	x20, x19, [sp, #32]
    ee3c:	ldr	x21, [sp, #16]
    ee40:	ldp	x29, x30, [sp], #48
    ee44:	ret
    ee48:	ldr	w8, [x20, #40]
    ee4c:	ldr	x9, [x20, #56]
    ee50:	mov	w10, #0x1                   	// #1
    ee54:	str	w10, [x20]
    ee58:	lsl	w8, w8, #1
    ee5c:	add	x8, x9, x8
    ee60:	sub	x9, x8, #0x1
    ee64:	str	x9, [x20, #8]
    ee68:	b	eeb4 <gzungetc@@ZLIB_1.2.0.2+0x158>
    ee6c:	ldr	x8, [x20, #8]
    ee70:	ldr	x11, [x20, #56]
    ee74:	cmp	x8, x11
    ee78:	b.ne	eea4 <gzungetc@@ZLIB_1.2.0.2+0x148>  // b.any
    ee7c:	add	x10, x8, w10, uxtw
    ee80:	add	x9, x8, x9
    ee84:	mov	x8, x10
    ee88:	ldrb	w10, [x9, #-1]!
    ee8c:	strb	w10, [x8, #-1]!
    ee90:	ldr	x10, [x20, #56]
    ee94:	cmp	x9, x10
    ee98:	b.hi	ee88 <gzungetc@@ZLIB_1.2.0.2+0x12c>  // b.pmore
    ee9c:	ldr	w9, [x20]
    eea0:	str	x8, [x20, #8]
    eea4:	add	w9, w9, #0x1
    eea8:	sub	x10, x8, #0x1
    eeac:	str	w9, [x20]
    eeb0:	str	x10, [x20, #8]
    eeb4:	sturb	w19, [x8, #-1]
    eeb8:	ldr	x8, [x20, #16]
    eebc:	str	wzr, [x20, #84]
    eec0:	sub	x8, x8, #0x1
    eec4:	str	x8, [x20, #16]
    eec8:	b	ee34 <gzungetc@@ZLIB_1.2.0.2+0xd8>

000000000000eecc <gzgets@@Base>:
    eecc:	stp	x29, x30, [sp, #-80]!
    eed0:	stp	x20, x19, [sp, #64]
    eed4:	mov	x20, x0
    eed8:	mov	x0, xzr
    eedc:	str	x25, [sp, #16]
    eee0:	stp	x24, x23, [sp, #32]
    eee4:	stp	x22, x21, [sp, #48]
    eee8:	mov	x29, sp
    eeec:	cbz	x20, f04c <gzgets@@Base+0x180>
    eef0:	mov	x19, x1
    eef4:	cbz	x1, f04c <gzgets@@Base+0x180>
    eef8:	mov	w21, w2
    eefc:	cmp	w2, #0x1
    ef00:	b.lt	f04c <gzgets@@Base+0x180>  // b.tstop
    ef04:	ldr	w8, [x20, #24]
    ef08:	mov	w9, #0x1c4f                	// #7247
    ef0c:	cmp	w8, w9
    ef10:	b.ne	f048 <gzgets@@Base+0x17c>  // b.any
    ef14:	ldr	w8, [x20, #108]
    ef18:	cbz	w8, ef24 <gzgets@@Base+0x58>
    ef1c:	cmn	w8, #0x5
    ef20:	b.ne	f048 <gzgets@@Base+0x17c>  // b.any
    ef24:	ldr	w8, [x20, #104]
    ef28:	cbz	w8, ef38 <gzgets@@Base+0x6c>
    ef2c:	ldr	x22, [x20, #96]
    ef30:	str	wzr, [x20, #104]
    ef34:	cbnz	x22, f000 <gzgets@@Base+0x134>
    ef38:	subs	w25, w21, #0x1
    ef3c:	b.eq	f048 <gzgets@@Base+0x17c>  // b.none
    ef40:	ldr	w8, [x20]
    ef44:	mov	x21, x19
    ef48:	cbnz	w8, ef64 <gzgets@@Base+0x98>
    ef4c:	mov	x0, x20
    ef50:	bl	f064 <gzgets@@Base+0x198>
    ef54:	cmn	w0, #0x1
    ef58:	b.eq	f048 <gzgets@@Base+0x17c>  // b.none
    ef5c:	ldr	w8, [x20]
    ef60:	cbz	w8, f02c <gzgets@@Base+0x160>
    ef64:	ldr	x23, [x20, #8]
    ef68:	cmp	w8, w25
    ef6c:	csel	w22, w25, w8, hi  // hi = pmore
    ef70:	mov	w1, #0xa                   	// #10
    ef74:	mov	x0, x23
    ef78:	mov	x2, x22
    ef7c:	bl	2500 <memchr@plt>
    ef80:	mov	x24, x0
    ef84:	sub	w8, w24, w23
    ef88:	cmp	x0, #0x0
    ef8c:	csinc	w22, w22, w8, eq  // eq = none
    ef90:	mov	x0, x21
    ef94:	mov	x1, x23
    ef98:	mov	x2, x22
    ef9c:	bl	2310 <memcpy@plt>
    efa0:	ldr	w8, [x20]
    efa4:	ldp	x9, x10, [x20, #8]
    efa8:	add	x21, x21, x22
    efac:	sub	w8, w8, w22
    efb0:	add	x9, x9, x22
    efb4:	add	x10, x10, x22
    efb8:	str	w8, [x20]
    efbc:	stp	x9, x10, [x20, #8]
    efc0:	cbnz	x24, efcc <gzgets@@Base+0x100>
    efc4:	sub	w25, w25, w22
    efc8:	cbnz	w25, ef48 <gzgets@@Base+0x7c>
    efcc:	cmp	x21, x19
    efd0:	b.ne	f03c <gzgets@@Base+0x170>  // b.any
    efd4:	b	f048 <gzgets@@Base+0x17c>
    efd8:	ldp	x9, x10, [x20, #8]
    efdc:	cmp	x22, x8
    efe0:	csel	w11, w22, w8, lt  // lt = tstop
    efe4:	sub	w8, w8, w11
    efe8:	str	w8, [x20]
    efec:	add	x8, x9, x11
    eff0:	add	x9, x10, x11
    eff4:	sub	x22, x22, x11
    eff8:	stp	x8, x9, [x20, #8]
    effc:	cbz	x22, ef38 <gzgets@@Base+0x6c>
    f000:	ldr	w8, [x20]
    f004:	cbnz	w8, efd8 <gzgets@@Base+0x10c>
    f008:	ldr	w8, [x20, #80]
    f00c:	cbz	w8, f018 <gzgets@@Base+0x14c>
    f010:	ldr	w8, [x20, #128]
    f014:	cbz	w8, ef38 <gzgets@@Base+0x6c>
    f018:	mov	x0, x20
    f01c:	bl	f064 <gzgets@@Base+0x198>
    f020:	cmn	w0, #0x1
    f024:	b.ne	effc <gzgets@@Base+0x130>  // b.any
    f028:	b	f048 <gzgets@@Base+0x17c>
    f02c:	mov	w8, #0x1                   	// #1
    f030:	str	w8, [x20, #84]
    f034:	cmp	x21, x19
    f038:	b.eq	f048 <gzgets@@Base+0x17c>  // b.none
    f03c:	mov	x0, x19
    f040:	strb	wzr, [x21]
    f044:	b	f04c <gzgets@@Base+0x180>
    f048:	mov	x0, xzr
    f04c:	ldp	x20, x19, [sp, #64]
    f050:	ldp	x22, x21, [sp, #48]
    f054:	ldp	x24, x23, [sp, #32]
    f058:	ldr	x25, [sp, #16]
    f05c:	ldp	x29, x30, [sp], #80
    f060:	ret
    f064:	stp	x29, x30, [sp, #-48]!
    f068:	stp	x20, x19, [sp, #32]
    f06c:	mov	x19, x0
    f070:	stp	x22, x21, [sp, #16]
    f074:	mov	x29, sp
    f078:	ldr	w8, [x19, #68]
    f07c:	cbz	w8, f094 <gzgets@@Base+0x1c8>
    f080:	cmp	w8, #0x2
    f084:	b.eq	f0b0 <gzgets@@Base+0x1e4>  // b.none
    f088:	cmp	w8, #0x1
    f08c:	b.ne	f0d4 <gzgets@@Base+0x208>  // b.any
    f090:	b	f0f4 <gzgets@@Base+0x228>
    f094:	mov	x0, x19
    f098:	bl	f1ec <gzdirect@@ZLIB_1.2.2.3+0x4c>
    f09c:	cmn	w0, #0x1
    f0a0:	b.eq	f148 <gzgets@@Base+0x27c>  // b.none
    f0a4:	ldr	w8, [x19, #68]
    f0a8:	cbnz	w8, f0d4 <gzgets@@Base+0x208>
    f0ac:	b	f0ec <gzgets@@Base+0x220>
    f0b0:	ldr	w8, [x19, #40]
    f0b4:	ldr	x9, [x19, #56]
    f0b8:	mov	x0, x19
    f0bc:	lsl	w8, w8, #1
    f0c0:	str	w8, [x19, #152]
    f0c4:	str	x9, [x19, #144]
    f0c8:	bl	f4cc <gzclose_r@@ZLIB_1.2.3.5+0xac>
    f0cc:	cmn	w0, #0x1
    f0d0:	b.eq	f148 <gzgets@@Base+0x27c>  // b.none
    f0d4:	ldr	w8, [x19]
    f0d8:	cbnz	w8, f0ec <gzgets@@Base+0x220>
    f0dc:	ldr	w8, [x19, #80]
    f0e0:	cbz	w8, f078 <gzgets@@Base+0x1ac>
    f0e4:	ldr	w8, [x19, #128]
    f0e8:	cbnz	w8, f078 <gzgets@@Base+0x1ac>
    f0ec:	mov	w20, wzr
    f0f0:	b	f18c <gzgets@@Base+0x2c0>
    f0f4:	ldr	w9, [x19, #40]
    f0f8:	ldr	x20, [x19, #56]
    f0fc:	mov	w8, wzr
    f100:	mov	w22, #0x40000000            	// #1073741824
    f104:	lsl	w21, w9, #1
    f108:	str	wzr, [x19]
    f10c:	sub	w9, w21, w8
    f110:	ldr	w0, [x19, #28]
    f114:	lsr	w10, w9, #30
    f118:	cmp	w10, #0x0
    f11c:	csel	w2, w9, w22, eq  // eq = none
    f120:	add	x1, x20, w8, uxtw
    f124:	bl	24f0 <read@plt>
    f128:	cmp	w0, #0x1
    f12c:	b.lt	f150 <gzgets@@Base+0x284>  // b.tstop
    f130:	ldr	w8, [x19]
    f134:	add	w8, w8, w0
    f138:	cmp	w8, w21
    f13c:	str	w8, [x19]
    f140:	b.cc	f10c <gzgets@@Base+0x240>  // b.lo, b.ul, b.last
    f144:	b	f15c <gzgets@@Base+0x290>
    f148:	mov	w20, #0xffffffff            	// #-1
    f14c:	b	f18c <gzgets@@Base+0x2c0>
    f150:	tbnz	w0, #31, f16c <gzgets@@Base+0x2a0>
    f154:	mov	w8, #0x1                   	// #1
    f158:	str	w8, [x19, #80]
    f15c:	ldr	x8, [x19, #56]
    f160:	mov	w20, wzr
    f164:	str	x8, [x19, #8]
    f168:	b	f18c <gzgets@@Base+0x2c0>
    f16c:	bl	2560 <__errno_location@plt>
    f170:	ldr	w0, [x0]
    f174:	bl	2440 <strerror@plt>
    f178:	mov	x2, x0
    f17c:	mov	w1, #0xffffffff            	// #-1
    f180:	mov	x0, x19
    f184:	mov	w20, #0xffffffff            	// #-1
    f188:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f18c:	mov	w0, w20
    f190:	ldp	x20, x19, [sp, #32]
    f194:	ldp	x22, x21, [sp, #16]
    f198:	ldp	x29, x30, [sp], #48
    f19c:	ret

000000000000f1a0 <gzdirect@@ZLIB_1.2.2.3>:
    f1a0:	cbz	x0, f1e8 <gzdirect@@ZLIB_1.2.2.3+0x48>
    f1a4:	stp	x29, x30, [sp, #-32]!
    f1a8:	ldr	w8, [x0, #24]
    f1ac:	mov	w9, #0x1c4f                	// #7247
    f1b0:	str	x19, [sp, #16]
    f1b4:	mov	x19, x0
    f1b8:	cmp	w8, w9
    f1bc:	mov	x29, sp
    f1c0:	b.ne	f1dc <gzdirect@@ZLIB_1.2.2.3+0x3c>  // b.any
    f1c4:	ldr	w8, [x19, #68]
    f1c8:	cbnz	w8, f1dc <gzdirect@@ZLIB_1.2.2.3+0x3c>
    f1cc:	ldr	w8, [x19]
    f1d0:	cbnz	w8, f1dc <gzdirect@@ZLIB_1.2.2.3+0x3c>
    f1d4:	mov	x0, x19
    f1d8:	bl	f1ec <gzdirect@@ZLIB_1.2.2.3+0x4c>
    f1dc:	ldr	w0, [x19, #64]
    f1e0:	ldr	x19, [sp, #16]
    f1e4:	ldp	x29, x30, [sp], #32
    f1e8:	ret
    f1ec:	stp	x29, x30, [sp, #-64]!
    f1f0:	stp	x24, x23, [sp, #16]
    f1f4:	stp	x22, x21, [sp, #32]
    f1f8:	stp	x20, x19, [sp, #48]
    f1fc:	ldr	w8, [x0, #40]
    f200:	mov	x19, x0
    f204:	add	x20, x0, #0x78
    f208:	mov	x29, sp
    f20c:	cbz	w8, f250 <gzdirect@@ZLIB_1.2.2.3+0xb0>
    f210:	ldr	w21, [x19, #128]
    f214:	cmp	w21, #0x1
    f218:	b.hi	f364 <gzdirect@@ZLIB_1.2.2.3+0x1c4>  // b.pmore
    f21c:	ldr	w8, [x19, #108]
    f220:	cbz	w8, f22c <gzdirect@@ZLIB_1.2.2.3+0x8c>
    f224:	cmn	w8, #0x5
    f228:	b.ne	f2e0 <gzdirect@@ZLIB_1.2.2.3+0x140>  // b.any
    f22c:	ldr	w8, [x19, #80]
    f230:	cbnz	w8, f358 <gzdirect@@ZLIB_1.2.2.3+0x1b8>
    f234:	cbz	w21, f2e8 <gzdirect@@ZLIB_1.2.2.3+0x148>
    f238:	ldr	x8, [x19, #120]
    f23c:	ldr	x9, [x19, #48]
    f240:	ldrb	w8, [x8]
    f244:	strb	w8, [x9]
    f248:	ldr	w8, [x19, #128]
    f24c:	b	f2ec <gzdirect@@ZLIB_1.2.2.3+0x14c>
    f250:	ldr	w21, [x19, #44]
    f254:	mov	x0, x21
    f258:	bl	23b0 <malloc@plt>
    f25c:	mov	x22, x0
    f260:	str	x0, [x19, #48]
    f264:	lsl	w0, w21, #1
    f268:	bl	23b0 <malloc@plt>
    f26c:	str	x0, [x19, #56]
    f270:	cbz	x22, f2c0 <gzdirect@@ZLIB_1.2.2.3+0x120>
    f274:	cbz	x0, f2c0 <gzdirect@@ZLIB_1.2.2.3+0x120>
    f278:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f27c:	add	x2, x2, #0x651
    f280:	mov	w1, #0x1f                  	// #31
    f284:	mov	w3, #0x70                  	// #112
    f288:	mov	x0, x20
    f28c:	str	w21, [x19, #40]
    f290:	str	wzr, [x19, #128]
    f294:	str	xzr, [x19, #120]
    f298:	stp	xzr, xzr, [x19, #192]
    f29c:	str	xzr, [x19, #184]
    f2a0:	bl	2510 <inflateInit2_@plt>
    f2a4:	cbz	w0, f210 <gzdirect@@ZLIB_1.2.2.3+0x70>
    f2a8:	ldr	x0, [x19, #56]
    f2ac:	bl	24b0 <free@plt>
    f2b0:	ldr	x0, [x19, #48]
    f2b4:	bl	24b0 <free@plt>
    f2b8:	str	wzr, [x19, #40]
    f2bc:	b	f2cc <gzdirect@@ZLIB_1.2.2.3+0x12c>
    f2c0:	bl	24b0 <free@plt>
    f2c4:	ldr	x0, [x19, #48]
    f2c8:	bl	24b0 <free@plt>
    f2cc:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f2d0:	add	x2, x2, #0x6b6
    f2d4:	mov	w1, #0xfffffffc            	// #-4
    f2d8:	mov	x0, x19
    f2dc:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f2e0:	mov	w21, #0xffffffff            	// #-1
    f2e4:	b	f3e4 <gzdirect@@ZLIB_1.2.2.3+0x244>
    f2e8:	mov	w8, wzr
    f2ec:	ldr	x9, [x19, #48]
    f2f0:	ldr	w10, [x19, #40]
    f2f4:	mov	w21, wzr
    f2f8:	mov	w24, #0x40000000            	// #1073741824
    f2fc:	add	x22, x9, w8, uxtw
    f300:	sub	w23, w10, w8
    f304:	sub	w8, w23, w21
    f308:	ldr	w0, [x19, #28]
    f30c:	lsr	w9, w8, #30
    f310:	cmp	w9, #0x0
    f314:	csel	w2, w8, w24, eq  // eq = none
    f318:	add	x1, x22, w21, uxtw
    f31c:	bl	24f0 <read@plt>
    f320:	cmp	w0, #0x1
    f324:	b.lt	f338 <gzdirect@@ZLIB_1.2.2.3+0x198>  // b.tstop
    f328:	add	w21, w21, w0
    f32c:	cmp	w21, w23
    f330:	b.cc	f304 <gzdirect@@ZLIB_1.2.2.3+0x164>  // b.lo, b.ul, b.last
    f334:	b	f344 <gzdirect@@ZLIB_1.2.2.3+0x1a4>
    f338:	tbnz	w0, #31, f3fc <gzdirect@@ZLIB_1.2.2.3+0x25c>
    f33c:	mov	w8, #0x1                   	// #1
    f340:	str	w8, [x19, #80]
    f344:	ldr	w8, [x19, #128]
    f348:	ldr	x9, [x19, #48]
    f34c:	add	w21, w8, w21
    f350:	str	w21, [x19, #128]
    f354:	str	x9, [x19, #120]
    f358:	cbz	w21, f3e4 <gzdirect@@ZLIB_1.2.2.3+0x244>
    f35c:	cmp	w21, #0x1
    f360:	b.eq	f398 <gzdirect@@ZLIB_1.2.2.3+0x1f8>  // b.none
    f364:	ldr	x8, [x20]
    f368:	ldrb	w9, [x8]
    f36c:	cmp	w9, #0x1f
    f370:	b.ne	f398 <gzdirect@@ZLIB_1.2.2.3+0x1f8>  // b.any
    f374:	ldrb	w8, [x8, #1]
    f378:	cmp	w8, #0x8b
    f37c:	b.ne	f398 <gzdirect@@ZLIB_1.2.2.3+0x1f8>  // b.any
    f380:	mov	x0, x20
    f384:	bl	2520 <inflateReset@plt>
    f388:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x1c2c>
    f38c:	ldr	d0, [x8, #1600]
    f390:	mov	w21, wzr
    f394:	b	f3c8 <gzdirect@@ZLIB_1.2.2.3+0x228>
    f398:	ldr	w8, [x19, #64]
    f39c:	cbz	w8, f3d0 <gzdirect@@ZLIB_1.2.2.3+0x230>
    f3a0:	ldr	x0, [x19, #56]
    f3a4:	ldr	x1, [x19, #120]
    f3a8:	mov	w2, w21
    f3ac:	str	x0, [x19, #8]
    f3b0:	bl	2310 <memcpy@plt>
    f3b4:	ldr	w8, [x19, #128]
    f3b8:	mov	w21, wzr
    f3bc:	movi	v0.2s, #0x1
    f3c0:	str	wzr, [x19, #128]
    f3c4:	str	w8, [x19]
    f3c8:	str	d0, [x19, #64]
    f3cc:	b	f3e4 <gzdirect@@ZLIB_1.2.2.3+0x244>
    f3d0:	mov	w8, #0x1                   	// #1
    f3d4:	mov	w21, wzr
    f3d8:	str	wzr, [x19, #128]
    f3dc:	str	w8, [x19, #80]
    f3e0:	str	wzr, [x19]
    f3e4:	mov	w0, w21
    f3e8:	ldp	x20, x19, [sp, #48]
    f3ec:	ldp	x22, x21, [sp, #32]
    f3f0:	ldp	x24, x23, [sp, #16]
    f3f4:	ldp	x29, x30, [sp], #64
    f3f8:	ret
    f3fc:	bl	2560 <__errno_location@plt>
    f400:	ldr	w0, [x0]
    f404:	bl	2440 <strerror@plt>
    f408:	mov	x2, x0
    f40c:	mov	w1, #0xffffffff            	// #-1
    f410:	mov	x0, x19
    f414:	mov	w21, #0xffffffff            	// #-1
    f418:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f41c:	b	f3e4 <gzdirect@@ZLIB_1.2.2.3+0x244>

000000000000f420 <gzclose_r@@ZLIB_1.2.3.5>:
    f420:	stp	x29, x30, [sp, #-48]!
    f424:	str	x21, [sp, #16]
    f428:	stp	x20, x19, [sp, #32]
    f42c:	mov	x29, sp
    f430:	cbz	x0, f4b8 <gzclose_r@@ZLIB_1.2.3.5+0x98>
    f434:	ldr	w8, [x0, #24]
    f438:	mov	w9, #0x1c4f                	// #7247
    f43c:	mov	x19, x0
    f440:	cmp	w8, w9
    f444:	b.ne	f4b8 <gzclose_r@@ZLIB_1.2.3.5+0x98>  // b.any
    f448:	ldr	w8, [x19, #40]
    f44c:	cbz	w8, f468 <gzclose_r@@ZLIB_1.2.3.5+0x48>
    f450:	add	x0, x19, #0x78
    f454:	bl	2490 <inflateEnd@plt>
    f458:	ldr	x0, [x19, #56]
    f45c:	bl	24b0 <free@plt>
    f460:	ldr	x0, [x19, #48]
    f464:	bl	24b0 <free@plt>
    f468:	ldr	w8, [x19, #108]
    f46c:	mov	x0, x19
    f470:	mov	w1, wzr
    f474:	mov	x2, xzr
    f478:	cmn	w8, #0x5
    f47c:	csel	w21, w8, wzr, eq  // eq = none
    f480:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f484:	ldr	x0, [x19, #32]
    f488:	bl	24b0 <free@plt>
    f48c:	ldr	w0, [x19, #28]
    f490:	bl	2450 <close@plt>
    f494:	mov	w20, w0
    f498:	mov	x0, x19
    f49c:	bl	24b0 <free@plt>
    f4a0:	cmp	w20, #0x0
    f4a4:	csinv	w0, w21, wzr, eq  // eq = none
    f4a8:	ldp	x20, x19, [sp, #32]
    f4ac:	ldr	x21, [sp, #16]
    f4b0:	ldp	x29, x30, [sp], #48
    f4b4:	ret
    f4b8:	mov	w0, #0xfffffffe            	// #-2
    f4bc:	ldp	x20, x19, [sp, #32]
    f4c0:	ldr	x21, [sp, #16]
    f4c4:	ldp	x29, x30, [sp], #48
    f4c8:	ret
    f4cc:	stp	x29, x30, [sp, #-96]!
    f4d0:	stp	x28, x27, [sp, #16]
    f4d4:	stp	x26, x25, [sp, #32]
    f4d8:	stp	x24, x23, [sp, #48]
    f4dc:	stp	x22, x21, [sp, #64]
    f4e0:	stp	x20, x19, [sp, #80]
    f4e4:	ldr	w22, [x0, #152]
    f4e8:	adrp	x25, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f4ec:	mov	x19, x0
    f4f0:	mov	w20, wzr
    f4f4:	add	x21, x0, #0x78
    f4f8:	mov	w23, #0x40000000            	// #1073741824
    f4fc:	mov	w24, #0x1                   	// #1
    f500:	add	x25, x25, #0x6ce
    f504:	mov	x29, sp
    f508:	ldr	w8, [x19, #128]
    f50c:	cbnz	w8, f588 <gzclose_r@@ZLIB_1.2.3.5+0x168>
    f510:	ldr	w8, [x19, #108]
    f514:	cbz	w8, f520 <gzclose_r@@ZLIB_1.2.3.5+0x100>
    f518:	cmn	w8, #0x5
    f51c:	b.ne	f648 <gzclose_r@@ZLIB_1.2.3.5+0x228>  // b.any
    f520:	ldr	w8, [x19, #80]
    f524:	cbnz	w8, f5c8 <gzclose_r@@ZLIB_1.2.3.5+0x1a8>
    f528:	ldr	x27, [x19, #48]
    f52c:	ldr	w28, [x19, #40]
    f530:	mov	w26, wzr
    f534:	sub	w8, w28, w26
    f538:	ldr	w0, [x19, #28]
    f53c:	lsr	w9, w8, #30
    f540:	cmp	w9, #0x0
    f544:	csel	w2, w8, w23, eq  // eq = none
    f548:	add	x1, x27, w26, uxtw
    f54c:	bl	24f0 <read@plt>
    f550:	cmp	w0, #0x1
    f554:	b.lt	f568 <gzclose_r@@ZLIB_1.2.3.5+0x148>  // b.tstop
    f558:	add	w26, w26, w0
    f55c:	cmp	w26, w28
    f560:	b.cc	f534 <gzclose_r@@ZLIB_1.2.3.5+0x114>  // b.lo, b.ul, b.last
    f564:	b	f570 <gzclose_r@@ZLIB_1.2.3.5+0x150>
    f568:	tbnz	w0, #31, f66c <gzclose_r@@ZLIB_1.2.3.5+0x24c>
    f56c:	str	w24, [x19, #80]
    f570:	ldr	w8, [x19, #128]
    f574:	ldr	x9, [x19, #48]
    f578:	adds	w8, w8, w26
    f57c:	str	w8, [x19, #128]
    f580:	str	x9, [x19, #120]
    f584:	b.eq	f5c8 <gzclose_r@@ZLIB_1.2.3.5+0x1a8>  // b.none
    f588:	mov	x0, x21
    f58c:	mov	w1, wzr
    f590:	bl	2360 <inflate@plt>
    f594:	add	w8, w0, #0x4
    f598:	mov	w20, w0
    f59c:	cmp	w8, #0x6
    f5a0:	b.hi	f5b4 <gzclose_r@@ZLIB_1.2.3.5+0x194>  // b.pmore
    f5a4:	adr	x9, f5b4 <gzclose_r@@ZLIB_1.2.3.5+0x194>
    f5a8:	ldrb	w10, [x25, x8]
    f5ac:	add	x9, x9, x10, lsl #2
    f5b0:	br	x9
    f5b4:	ldr	w8, [x19, #152]
    f5b8:	cmp	w20, #0x1
    f5bc:	b.eq	f5e0 <gzclose_r@@ZLIB_1.2.3.5+0x1c0>  // b.none
    f5c0:	cbnz	w8, f508 <gzclose_r@@ZLIB_1.2.3.5+0xe8>
    f5c4:	b	f5e0 <gzclose_r@@ZLIB_1.2.3.5+0x1c0>
    f5c8:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f5cc:	add	x2, x2, #0x734
    f5d0:	mov	w1, #0xfffffffb            	// #-5
    f5d4:	mov	x0, x19
    f5d8:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f5dc:	ldr	w8, [x19, #152]
    f5e0:	ldr	x9, [x19, #144]
    f5e4:	sub	w8, w22, w8
    f5e8:	str	w8, [x19]
    f5ec:	cmp	w20, #0x1
    f5f0:	sub	x8, x9, x8
    f5f4:	mov	w20, wzr
    f5f8:	str	x8, [x19, #8]
    f5fc:	b.ne	f64c <gzclose_r@@ZLIB_1.2.3.5+0x22c>  // b.any
    f600:	str	wzr, [x19, #68]
    f604:	b	f64c <gzclose_r@@ZLIB_1.2.3.5+0x22c>
    f608:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f60c:	add	x2, x2, #0x74b
    f610:	mov	w1, #0xfffffffe            	// #-2
    f614:	b	f640 <gzclose_r@@ZLIB_1.2.3.5+0x220>
    f618:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f61c:	add	x2, x2, #0x6b6
    f620:	mov	w1, #0xfffffffc            	// #-4
    f624:	b	f640 <gzclose_r@@ZLIB_1.2.3.5+0x220>
    f628:	ldr	x8, [x19, #168]
    f62c:	adrp	x9, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f630:	add	x9, x9, #0x772
    f634:	mov	w1, #0xfffffffd            	// #-3
    f638:	cmp	x8, #0x0
    f63c:	csel	x2, x9, x8, eq  // eq = none
    f640:	mov	x0, x19
    f644:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f648:	mov	w20, #0xffffffff            	// #-1
    f64c:	mov	w0, w20
    f650:	ldp	x20, x19, [sp, #80]
    f654:	ldp	x22, x21, [sp, #64]
    f658:	ldp	x24, x23, [sp, #48]
    f65c:	ldp	x26, x25, [sp, #32]
    f660:	ldp	x28, x27, [sp, #16]
    f664:	ldp	x29, x30, [sp], #96
    f668:	ret
    f66c:	bl	2560 <__errno_location@plt>
    f670:	ldr	w0, [x0]
    f674:	bl	2440 <strerror@plt>
    f678:	mov	x2, x0
    f67c:	mov	w1, #0xffffffff            	// #-1
    f680:	mov	x0, x19
    f684:	mov	w20, #0xffffffff            	// #-1
    f688:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f68c:	b	f64c <gzclose_r@@ZLIB_1.2.3.5+0x22c>

000000000000f690 <gzwrite@@Base>:
    f690:	stp	x29, x30, [sp, #-16]!
    f694:	mov	x29, sp
    f698:	cbz	x0, f6cc <gzwrite@@Base+0x3c>
    f69c:	ldr	w8, [x0, #24]
    f6a0:	mov	w9, #0x79b1                	// #31153
    f6a4:	cmp	w8, w9
    f6a8:	b.ne	f6b4 <gzwrite@@Base+0x24>  // b.any
    f6ac:	ldr	w8, [x0, #108]
    f6b0:	cbz	w8, f6c0 <gzwrite@@Base+0x30>
    f6b4:	mov	w0, wzr
    f6b8:	ldp	x29, x30, [sp], #16
    f6bc:	ret
    f6c0:	tbnz	w2, #31, f6d4 <gzwrite@@Base+0x44>
    f6c4:	mov	w2, w2
    f6c8:	bl	f6f0 <gzwrite@@Base+0x60>
    f6cc:	ldp	x29, x30, [sp], #16
    f6d0:	ret
    f6d4:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f6d8:	add	x2, x2, #0x788
    f6dc:	mov	w1, #0xfffffffd            	// #-3
    f6e0:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f6e4:	mov	w0, wzr
    f6e8:	ldp	x29, x30, [sp], #16
    f6ec:	ret
    f6f0:	stp	x29, x30, [sp, #-64]!
    f6f4:	stp	x20, x19, [sp, #48]
    f6f8:	mov	x19, x2
    f6fc:	stp	x24, x23, [sp, #16]
    f700:	stp	x22, x21, [sp, #32]
    f704:	mov	x29, sp
    f708:	cbz	x2, f8c4 <gzwrite@@Base+0x234>
    f70c:	ldr	w8, [x0, #40]
    f710:	mov	x21, x1
    f714:	mov	x20, x0
    f718:	cbnz	w8, f72c <gzwrite@@Base+0x9c>
    f71c:	mov	x0, x20
    f720:	bl	fd48 <gzvprintf@@ZLIB_1.2.7.1+0x1e0>
    f724:	cmn	w0, #0x1
    f728:	b.eq	f8c0 <gzwrite@@Base+0x230>  // b.none
    f72c:	ldr	w8, [x20, #104]
    f730:	cbz	w8, f7c4 <gzwrite@@Base+0x134>
    f734:	ldr	w8, [x20, #128]
    f738:	ldr	x23, [x20, #96]
    f73c:	str	wzr, [x20, #104]
    f740:	cbz	w8, f758 <gzwrite@@Base+0xc8>
    f744:	mov	x0, x20
    f748:	mov	w1, wzr
    f74c:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    f750:	cmn	w0, #0x1
    f754:	b.eq	f8c0 <gzwrite@@Base+0x230>  // b.none
    f758:	cbz	x23, f7c4 <gzwrite@@Base+0x134>
    f75c:	mov	w8, wzr
    f760:	ldr	w9, [x20, #40]
    f764:	cmp	x23, x9
    f768:	csel	w24, w23, w9, lt  // lt = tstop
    f76c:	tbz	w8, #0, f778 <gzwrite@@Base+0xe8>
    f770:	mov	w22, w24
    f774:	b	f78c <gzwrite@@Base+0xfc>
    f778:	ldr	x0, [x20, #48]
    f77c:	mov	w22, w24
    f780:	mov	w1, wzr
    f784:	mov	x2, x22
    f788:	bl	23f0 <memset@plt>
    f78c:	ldr	x8, [x20, #48]
    f790:	ldr	x9, [x20, #16]
    f794:	mov	x0, x20
    f798:	mov	w1, wzr
    f79c:	str	x8, [x20, #120]
    f7a0:	add	x8, x9, x22
    f7a4:	str	w24, [x20, #128]
    f7a8:	str	x8, [x20, #16]
    f7ac:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    f7b0:	cmn	w0, #0x1
    f7b4:	b.eq	f8c0 <gzwrite@@Base+0x230>  // b.none
    f7b8:	sub	x23, x23, x22
    f7bc:	mov	w8, #0x1                   	// #1
    f7c0:	cbnz	x23, f760 <gzwrite@@Base+0xd0>
    f7c4:	ldr	w8, [x20, #40]
    f7c8:	cmp	x8, x19
    f7cc:	b.ls	f858 <gzwrite@@Base+0x1c8>  // b.plast
    f7d0:	mov	x23, x19
    f7d4:	ldr	w8, [x20, #128]
    f7d8:	cbz	w8, f7e8 <gzwrite@@Base+0x158>
    f7dc:	ldr	x10, [x20, #120]
    f7e0:	ldr	x9, [x20, #48]
    f7e4:	b	f7f4 <gzwrite@@Base+0x164>
    f7e8:	ldr	x9, [x20, #48]
    f7ec:	mov	x10, x9
    f7f0:	str	x9, [x20, #120]
    f7f4:	ldr	w11, [x20, #40]
    f7f8:	add	x8, x10, x8
    f7fc:	sub	x8, x8, x9
    f800:	add	x0, x9, w8, uxtw
    f804:	sub	w10, w11, w8
    f808:	cmp	x23, x10
    f80c:	csel	w22, w23, w10, cc  // cc = lo, ul, last
    f810:	mov	x1, x21
    f814:	mov	x2, x22
    f818:	bl	2310 <memcpy@plt>
    f81c:	ldr	w8, [x20, #128]
    f820:	ldr	x9, [x20, #16]
    f824:	subs	x23, x23, x22
    f828:	add	w8, w22, w8
    f82c:	add	x9, x9, x22
    f830:	str	w8, [x20, #128]
    f834:	str	x9, [x20, #16]
    f838:	b.eq	f8c4 <gzwrite@@Base+0x234>  // b.none
    f83c:	mov	x0, x20
    f840:	mov	w1, wzr
    f844:	add	x21, x21, x22
    f848:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    f84c:	cmn	w0, #0x1
    f850:	b.ne	f7d4 <gzwrite@@Base+0x144>  // b.any
    f854:	b	f8c0 <gzwrite@@Base+0x230>
    f858:	ldr	w8, [x20, #128]
    f85c:	cbz	w8, f874 <gzwrite@@Base+0x1e4>
    f860:	mov	x0, x20
    f864:	mov	w1, wzr
    f868:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    f86c:	cmn	w0, #0x1
    f870:	b.eq	f8c0 <gzwrite@@Base+0x230>  // b.none
    f874:	str	x21, [x20, #120]
    f878:	mov	w21, #0xffffffff            	// #-1
    f87c:	mov	x22, x19
    f880:	ldr	x8, [x20, #16]
    f884:	cmp	x22, x21
    f888:	csel	x23, x22, x21, cc  // cc = lo, ul, last
    f88c:	mov	x0, x20
    f890:	add	x8, x8, x23
    f894:	mov	w1, wzr
    f898:	str	w23, [x20, #128]
    f89c:	str	x8, [x20, #16]
    f8a0:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    f8a4:	cmn	w0, #0x1
    f8a8:	csel	x8, xzr, x23, eq  // eq = none
    f8ac:	cmn	w0, #0x1
    f8b0:	b.eq	f8c0 <gzwrite@@Base+0x230>  // b.none
    f8b4:	sub	x22, x22, x8
    f8b8:	cbnz	x22, f880 <gzwrite@@Base+0x1f0>
    f8bc:	b	f8c4 <gzwrite@@Base+0x234>
    f8c0:	mov	x19, xzr
    f8c4:	mov	x0, x19
    f8c8:	ldp	x20, x19, [sp, #48]
    f8cc:	ldp	x22, x21, [sp, #32]
    f8d0:	ldp	x24, x23, [sp, #16]
    f8d4:	ldp	x29, x30, [sp], #64
    f8d8:	ret

000000000000f8dc <gzfwrite@@ZLIB_1.2.9>:
    f8dc:	stp	x29, x30, [sp, #-32]!
    f8e0:	str	x19, [sp, #16]
    f8e4:	mov	x29, sp
    f8e8:	cbz	x3, f904 <gzfwrite@@ZLIB_1.2.9+0x28>
    f8ec:	ldr	w8, [x3, #24]
    f8f0:	mov	w9, #0x79b1                	// #31153
    f8f4:	cmp	w8, w9
    f8f8:	b.ne	f904 <gzfwrite@@ZLIB_1.2.9+0x28>  // b.any
    f8fc:	ldr	w8, [x3, #108]
    f900:	cbz	w8, f914 <gzfwrite@@ZLIB_1.2.9+0x38>
    f904:	mov	x0, xzr
    f908:	ldr	x19, [sp, #16]
    f90c:	ldp	x29, x30, [sp], #32
    f910:	ret
    f914:	mov	x19, x1
    f918:	umulh	x8, x19, x2
    f91c:	cmp	xzr, x8
    f920:	mov	x1, x0
    f924:	cset	w8, ne  // ne = any
    f928:	cbz	x19, f954 <gzfwrite@@ZLIB_1.2.9+0x78>
    f92c:	cbz	w8, f954 <gzfwrite@@ZLIB_1.2.9+0x78>
    f930:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    f934:	add	x2, x2, #0x6f4
    f938:	mov	w1, #0xfffffffe            	// #-2
    f93c:	mov	x0, x3
    f940:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    f944:	mov	x0, xzr
    f948:	ldr	x19, [sp, #16]
    f94c:	ldp	x29, x30, [sp], #32
    f950:	ret
    f954:	mul	x2, x19, x2
    f958:	cbz	x2, f904 <gzfwrite@@ZLIB_1.2.9+0x28>
    f95c:	mov	x0, x3
    f960:	bl	f6f0 <gzwrite@@Base+0x60>
    f964:	udiv	x0, x0, x19
    f968:	ldr	x19, [sp, #16]
    f96c:	ldp	x29, x30, [sp], #32
    f970:	ret

000000000000f974 <gzputc@@Base>:
    f974:	stp	x29, x30, [sp, #-64]!
    f978:	str	x23, [sp, #16]
    f97c:	stp	x22, x21, [sp, #32]
    f980:	stp	x20, x19, [sp, #48]
    f984:	mov	x29, sp
    f988:	cbz	x0, f9a8 <gzputc@@Base+0x34>
    f98c:	ldr	w8, [x0, #24]
    f990:	mov	w9, #0x79b1                	// #31153
    f994:	mov	x20, x0
    f998:	cmp	w8, w9
    f99c:	b.ne	f9a8 <gzputc@@Base+0x34>  // b.any
    f9a0:	ldr	w8, [x20, #108]
    f9a4:	cbz	w8, f9c0 <gzputc@@Base+0x4c>
    f9a8:	mov	w0, #0xffffffff            	// #-1
    f9ac:	ldp	x20, x19, [sp, #48]
    f9b0:	ldp	x22, x21, [sp, #32]
    f9b4:	ldr	x23, [sp, #16]
    f9b8:	ldp	x29, x30, [sp], #64
    f9bc:	ret
    f9c0:	ldr	w8, [x20, #104]
    f9c4:	mov	w19, w1
    f9c8:	cbz	w8, fa5c <gzputc@@Base+0xe8>
    f9cc:	ldr	w8, [x20, #128]
    f9d0:	ldr	x22, [x20, #96]
    f9d4:	str	wzr, [x20, #104]
    f9d8:	cbz	w8, f9f0 <gzputc@@Base+0x7c>
    f9dc:	mov	x0, x20
    f9e0:	mov	w1, wzr
    f9e4:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    f9e8:	cmn	w0, #0x1
    f9ec:	b.eq	f9ac <gzputc@@Base+0x38>  // b.none
    f9f0:	cbz	x22, fa5c <gzputc@@Base+0xe8>
    f9f4:	mov	w8, wzr
    f9f8:	ldr	w9, [x20, #40]
    f9fc:	cmp	x22, x9
    fa00:	csel	w23, w22, w9, lt  // lt = tstop
    fa04:	tbz	w8, #0, fa10 <gzputc@@Base+0x9c>
    fa08:	mov	w21, w23
    fa0c:	b	fa24 <gzputc@@Base+0xb0>
    fa10:	ldr	x0, [x20, #48]
    fa14:	mov	w21, w23
    fa18:	mov	w1, wzr
    fa1c:	mov	x2, x21
    fa20:	bl	23f0 <memset@plt>
    fa24:	ldr	x8, [x20, #48]
    fa28:	ldr	x9, [x20, #16]
    fa2c:	mov	x0, x20
    fa30:	mov	w1, wzr
    fa34:	str	x8, [x20, #120]
    fa38:	add	x8, x9, x21
    fa3c:	str	w23, [x20, #128]
    fa40:	str	x8, [x20, #16]
    fa44:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    fa48:	cmn	w0, #0x1
    fa4c:	b.eq	f9ac <gzputc@@Base+0x38>  // b.none
    fa50:	sub	x22, x22, x21
    fa54:	mov	w8, #0x1                   	// #1
    fa58:	cbnz	x22, f9f8 <gzputc@@Base+0x84>
    fa5c:	ldr	w8, [x20, #40]
    fa60:	cbz	w8, fac4 <gzputc@@Base+0x150>
    fa64:	ldr	w9, [x20, #128]
    fa68:	cbz	w9, faa8 <gzputc@@Base+0x134>
    fa6c:	ldr	x11, [x20, #120]
    fa70:	ldr	x10, [x20, #48]
    fa74:	add	x9, x11, x9
    fa78:	sub	x9, x9, x10
    fa7c:	cmp	w8, w9
    fa80:	b.ls	fac4 <gzputc@@Base+0x150>  // b.plast
    fa84:	strb	w19, [x10, w9, uxtw]
    fa88:	ldr	w8, [x20, #128]
    fa8c:	ldr	x9, [x20, #16]
    fa90:	and	w0, w19, #0xff
    fa94:	add	w8, w8, #0x1
    fa98:	add	x9, x9, #0x1
    fa9c:	str	w8, [x20, #128]
    faa0:	str	x9, [x20, #16]
    faa4:	b	f9ac <gzputc@@Base+0x38>
    faa8:	ldr	x10, [x20, #48]
    faac:	mov	x11, x10
    fab0:	str	x10, [x20, #120]
    fab4:	add	x9, x11, x9
    fab8:	sub	x9, x9, x10
    fabc:	cmp	w8, w9
    fac0:	b.hi	fa84 <gzputc@@Base+0x110>  // b.pmore
    fac4:	add	x1, x29, #0x1c
    fac8:	mov	w2, #0x1                   	// #1
    facc:	mov	x0, x20
    fad0:	strb	w19, [x29, #28]
    fad4:	bl	f6f0 <gzwrite@@Base+0x60>
    fad8:	and	w8, w19, #0xff
    fadc:	cmp	x0, #0x1
    fae0:	csinv	w0, w8, wzr, eq  // eq = none
    fae4:	b	f9ac <gzputc@@Base+0x38>

000000000000fae8 <gzputs@@Base>:
    fae8:	stp	x29, x30, [sp, #-48]!
    faec:	str	x21, [sp, #16]
    faf0:	stp	x20, x19, [sp, #32]
    faf4:	mov	x29, sp
    faf8:	cbz	x0, fb18 <gzputs@@Base+0x30>
    fafc:	ldr	w8, [x0, #24]
    fb00:	mov	w9, #0x79b1                	// #31153
    fb04:	mov	x20, x0
    fb08:	cmp	w8, w9
    fb0c:	b.ne	fb18 <gzputs@@Base+0x30>  // b.any
    fb10:	ldr	w8, [x20, #108]
    fb14:	cbz	w8, fb2c <gzputs@@Base+0x44>
    fb18:	mov	w0, #0xffffffff            	// #-1
    fb1c:	ldp	x20, x19, [sp, #32]
    fb20:	ldr	x21, [sp, #16]
    fb24:	ldp	x29, x30, [sp], #48
    fb28:	ret
    fb2c:	mov	x0, x1
    fb30:	mov	x19, x1
    fb34:	bl	2350 <strlen@plt>
    fb38:	mov	x21, x0
    fb3c:	mov	x0, x20
    fb40:	mov	x1, x19
    fb44:	mov	x2, x21
    fb48:	bl	f6f0 <gzwrite@@Base+0x60>
    fb4c:	cmp	w0, #0x0
    fb50:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    fb54:	csinv	w0, w0, wzr, eq  // eq = none
    fb58:	ldp	x20, x19, [sp, #32]
    fb5c:	ldr	x21, [sp, #16]
    fb60:	ldp	x29, x30, [sp], #48
    fb64:	ret

000000000000fb68 <gzvprintf@@ZLIB_1.2.7.1>:
    fb68:	sub	sp, sp, #0x60
    fb6c:	stp	x29, x30, [sp, #32]
    fb70:	stp	x24, x23, [sp, #48]
    fb74:	stp	x22, x21, [sp, #64]
    fb78:	stp	x20, x19, [sp, #80]
    fb7c:	add	x29, sp, #0x20
    fb80:	cbz	x0, fba0 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    fb84:	ldr	w8, [x0, #24]
    fb88:	mov	w9, #0x79b1                	// #31153
    fb8c:	mov	x19, x0
    fb90:	cmp	w8, w9
    fb94:	b.ne	fba0 <gzvprintf@@ZLIB_1.2.7.1+0x38>  // b.any
    fb98:	ldr	w8, [x19, #108]
    fb9c:	cbz	w8, fbc0 <gzvprintf@@ZLIB_1.2.7.1+0x58>
    fba0:	mov	w20, #0xfffffffe            	// #-2
    fba4:	mov	w0, w20
    fba8:	ldp	x20, x19, [sp, #80]
    fbac:	ldp	x22, x21, [sp, #64]
    fbb0:	ldp	x24, x23, [sp, #48]
    fbb4:	ldp	x29, x30, [sp, #32]
    fbb8:	add	sp, sp, #0x60
    fbbc:	ret
    fbc0:	ldr	w8, [x19, #40]
    fbc4:	mov	x21, x2
    fbc8:	mov	x20, x1
    fbcc:	cbnz	w8, fbe0 <gzvprintf@@ZLIB_1.2.7.1+0x78>
    fbd0:	mov	x0, x19
    fbd4:	bl	fd48 <gzvprintf@@ZLIB_1.2.7.1+0x1e0>
    fbd8:	cmn	w0, #0x1
    fbdc:	b.eq	fd40 <gzvprintf@@ZLIB_1.2.7.1+0x1d8>  // b.none
    fbe0:	ldr	w8, [x19, #104]
    fbe4:	cbz	w8, fc78 <gzvprintf@@ZLIB_1.2.7.1+0x110>
    fbe8:	ldr	w8, [x19, #128]
    fbec:	ldr	x23, [x19, #96]
    fbf0:	str	wzr, [x19, #104]
    fbf4:	cbz	w8, fc0c <gzvprintf@@ZLIB_1.2.7.1+0xa4>
    fbf8:	mov	x0, x19
    fbfc:	mov	w1, wzr
    fc00:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    fc04:	cmn	w0, #0x1
    fc08:	b.eq	fd40 <gzvprintf@@ZLIB_1.2.7.1+0x1d8>  // b.none
    fc0c:	cbz	x23, fc78 <gzvprintf@@ZLIB_1.2.7.1+0x110>
    fc10:	mov	w8, wzr
    fc14:	ldr	w9, [x19, #40]
    fc18:	cmp	x23, x9
    fc1c:	csel	w24, w23, w9, lt  // lt = tstop
    fc20:	tbz	w8, #0, fc2c <gzvprintf@@ZLIB_1.2.7.1+0xc4>
    fc24:	mov	w22, w24
    fc28:	b	fc40 <gzvprintf@@ZLIB_1.2.7.1+0xd8>
    fc2c:	ldr	x0, [x19, #48]
    fc30:	mov	w22, w24
    fc34:	mov	w1, wzr
    fc38:	mov	x2, x22
    fc3c:	bl	23f0 <memset@plt>
    fc40:	ldr	x8, [x19, #48]
    fc44:	ldr	x9, [x19, #16]
    fc48:	mov	x0, x19
    fc4c:	mov	w1, wzr
    fc50:	str	x8, [x19, #120]
    fc54:	add	x8, x9, x22
    fc58:	str	w24, [x19, #128]
    fc5c:	str	x8, [x19, #16]
    fc60:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    fc64:	cmn	w0, #0x1
    fc68:	b.eq	fd40 <gzvprintf@@ZLIB_1.2.7.1+0x1d8>  // b.none
    fc6c:	sub	x23, x23, x22
    fc70:	mov	w8, #0x1                   	// #1
    fc74:	cbnz	x23, fc14 <gzvprintf@@ZLIB_1.2.7.1+0xac>
    fc78:	ldr	w8, [x19, #128]
    fc7c:	cbz	w8, fc88 <gzvprintf@@ZLIB_1.2.7.1+0x120>
    fc80:	ldr	x9, [x19, #120]
    fc84:	b	fc90 <gzvprintf@@ZLIB_1.2.7.1+0x128>
    fc88:	ldr	x9, [x19, #48]
    fc8c:	str	x9, [x19, #120]
    fc90:	ldr	w10, [x19, #40]
    fc94:	add	x22, x9, x8
    fc98:	mov	x3, sp
    fc9c:	mov	x0, x22
    fca0:	sub	w8, w10, #0x1
    fca4:	strb	wzr, [x22, w8, uxtw]
    fca8:	ldp	q1, q0, [x21]
    fcac:	ldr	w1, [x19, #40]
    fcb0:	mov	x2, x20
    fcb4:	stp	q1, q0, [sp]
    fcb8:	bl	2530 <vsnprintf@plt>
    fcbc:	mov	w20, w0
    fcc0:	cbz	w0, fba4 <gzvprintf@@ZLIB_1.2.7.1+0x3c>
    fcc4:	ldr	w8, [x19, #40]
    fcc8:	cmp	w20, w8
    fccc:	b.cs	fcdc <gzvprintf@@ZLIB_1.2.7.1+0x174>  // b.hs, b.nlast
    fcd0:	sub	w9, w8, #0x1
    fcd4:	ldrb	w9, [x22, w9, uxtw]
    fcd8:	cbz	w9, fce4 <gzvprintf@@ZLIB_1.2.7.1+0x17c>
    fcdc:	mov	w20, wzr
    fce0:	b	fba4 <gzvprintf@@ZLIB_1.2.7.1+0x3c>
    fce4:	ldr	w9, [x19, #128]
    fce8:	ldr	x10, [x19, #16]
    fcec:	add	w9, w9, w20
    fcf0:	add	x10, x10, w20, sxtw
    fcf4:	subs	w21, w9, w8
    fcf8:	str	w9, [x19, #128]
    fcfc:	str	x10, [x19, #16]
    fd00:	b.cc	fba4 <gzvprintf@@ZLIB_1.2.7.1+0x3c>  // b.lo, b.ul, b.last
    fd04:	mov	x0, x19
    fd08:	mov	w1, wzr
    fd0c:	str	w8, [x19, #128]
    fd10:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
    fd14:	cmn	w0, #0x1
    fd18:	b.eq	fd40 <gzvprintf@@ZLIB_1.2.7.1+0x1d8>  // b.none
    fd1c:	ldr	x0, [x19, #48]
    fd20:	ldr	w8, [x19, #40]
    fd24:	mov	w2, w21
    fd28:	add	x1, x0, x8
    fd2c:	bl	2310 <memcpy@plt>
    fd30:	ldr	x8, [x19, #48]
    fd34:	str	w21, [x19, #128]
    fd38:	str	x8, [x19, #120]
    fd3c:	b	fba4 <gzvprintf@@ZLIB_1.2.7.1+0x3c>
    fd40:	ldr	w20, [x19, #108]
    fd44:	b	fba4 <gzvprintf@@ZLIB_1.2.7.1+0x3c>
    fd48:	stp	x29, x30, [sp, #-48]!
    fd4c:	stp	x20, x19, [sp, #32]
    fd50:	str	x21, [sp, #16]
    fd54:	ldr	w21, [x0, #44]
    fd58:	mov	x19, x0
    fd5c:	mov	x29, sp
    fd60:	lsl	w0, w21, #1
    fd64:	bl	23b0 <malloc@plt>
    fd68:	str	x0, [x19, #48]
    fd6c:	cbz	x0, fdec <gzvprintf@@ZLIB_1.2.7.1+0x284>
    fd70:	ldr	w8, [x19, #64]
    fd74:	cbz	w8, fd90 <gzvprintf@@ZLIB_1.2.7.1+0x228>
    fd78:	mov	w0, wzr
    fd7c:	str	w21, [x19, #40]
    fd80:	ldp	x20, x19, [sp, #32]
    fd84:	ldr	x21, [sp, #16]
    fd88:	ldp	x29, x30, [sp], #48
    fd8c:	ret
    fd90:	mov	x20, x0
    fd94:	mov	x0, x21
    fd98:	bl	23b0 <malloc@plt>
    fd9c:	str	x0, [x19, #56]
    fda0:	cbz	x0, fde4 <gzvprintf@@ZLIB_1.2.7.1+0x27c>
    fda4:	ldp	w1, w5, [x19, #88]
    fda8:	adrp	x6, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    fdac:	add	x0, x19, #0x78
    fdb0:	add	x6, x6, #0x651
    fdb4:	mov	w2, #0x8                   	// #8
    fdb8:	mov	w3, #0x1f                  	// #31
    fdbc:	mov	w4, #0x8                   	// #8
    fdc0:	mov	w7, #0x70                  	// #112
    fdc4:	stp	xzr, xzr, [x19, #184]
    fdc8:	str	xzr, [x19, #200]
    fdcc:	bl	2410 <deflateInit2_@plt>
    fdd0:	cbz	w0, fe14 <gzvprintf@@ZLIB_1.2.7.1+0x2ac>
    fdd4:	ldr	x0, [x19, #56]
    fdd8:	bl	24b0 <free@plt>
    fddc:	ldr	x0, [x19, #48]
    fde0:	b	fde8 <gzvprintf@@ZLIB_1.2.7.1+0x280>
    fde4:	mov	x0, x20
    fde8:	bl	24b0 <free@plt>
    fdec:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
    fdf0:	add	x2, x2, #0x6b6
    fdf4:	mov	w1, #0xfffffffc            	// #-4
    fdf8:	mov	x0, x19
    fdfc:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
    fe00:	mov	w0, #0xffffffff            	// #-1
    fe04:	ldp	x20, x19, [sp, #32]
    fe08:	ldr	x21, [sp, #16]
    fe0c:	ldp	x29, x30, [sp], #48
    fe10:	ret
    fe14:	ldr	w9, [x19, #64]
    fe18:	ldr	w8, [x19, #44]
    fe1c:	mov	w0, wzr
    fe20:	str	xzr, [x19, #120]
    fe24:	str	w8, [x19, #40]
    fe28:	cbnz	w9, fd80 <gzvprintf@@ZLIB_1.2.7.1+0x218>
    fe2c:	ldr	x9, [x19, #56]
    fe30:	str	w8, [x19, #152]
    fe34:	str	x9, [x19, #144]
    fe38:	str	x9, [x19, #8]
    fe3c:	ldp	x20, x19, [sp, #32]
    fe40:	ldr	x21, [sp, #16]
    fe44:	ldp	x29, x30, [sp], #48
    fe48:	ret
    fe4c:	stp	x29, x30, [sp, #-64]!
    fe50:	stp	x22, x21, [sp, #32]
    fe54:	stp	x20, x19, [sp, #48]
    fe58:	ldr	w8, [x0, #40]
    fe5c:	mov	x19, x0
    fe60:	mov	w20, w1
    fe64:	str	x23, [sp, #16]
    fe68:	mov	x29, sp
    fe6c:	cbnz	w8, fe80 <gzvprintf@@ZLIB_1.2.7.1+0x318>
    fe70:	mov	x0, x19
    fe74:	bl	fd48 <gzvprintf@@ZLIB_1.2.7.1+0x1e0>
    fe78:	cmn	w0, #0x1
    fe7c:	b.eq	ff84 <gzvprintf@@ZLIB_1.2.7.1+0x41c>  // b.none
    fe80:	ldr	w8, [x19, #64]
    fe84:	cbz	w8, fed4 <gzvprintf@@ZLIB_1.2.7.1+0x36c>
    fe88:	ldr	w8, [x19, #128]
    fe8c:	cbz	w8, fecc <gzvprintf@@ZLIB_1.2.7.1+0x364>
    fe90:	ldr	x1, [x19, #120]
    fe94:	mov	w20, #0x40000000            	// #1073741824
    fe98:	ldr	w0, [x19, #28]
    fe9c:	lsr	w9, w8, #30
    fea0:	cmp	w9, #0x0
    fea4:	csel	w2, w8, w20, eq  // eq = none
    fea8:	bl	2470 <write@plt>
    feac:	tbnz	w0, #31, 100b8 <gzvprintf@@ZLIB_1.2.7.1+0x550>
    feb0:	ldr	w8, [x19, #128]
    feb4:	ldr	x9, [x19, #120]
    feb8:	subs	w8, w8, w0
    febc:	add	x1, x9, w0, sxtw
    fec0:	str	w8, [x19, #128]
    fec4:	str	x1, [x19, #120]
    fec8:	b.ne	fe98 <gzvprintf@@ZLIB_1.2.7.1+0x330>  // b.any
    fecc:	mov	w20, wzr
    fed0:	b	100d8 <gzvprintf@@ZLIB_1.2.7.1+0x570>
    fed4:	add	x21, x19, #0x78
    fed8:	cbz	w20, ff8c <gzvprintf@@ZLIB_1.2.7.1+0x424>
    fedc:	cmp	w20, #0x4
    fee0:	b.ne	10020 <gzvprintf@@ZLIB_1.2.7.1+0x4b8>  // b.any
    fee4:	ldr	w23, [x19, #152]
    fee8:	mov	w0, wzr
    feec:	mov	w22, #0x40000000            	// #1073741824
    fef0:	cbz	w23, fefc <gzvprintf@@ZLIB_1.2.7.1+0x394>
    fef4:	cmp	w0, #0x1
    fef8:	b.ne	ff5c <gzvprintf@@ZLIB_1.2.7.1+0x3f4>  // b.any
    fefc:	ldr	x8, [x19, #144]
    ff00:	ldr	x1, [x19, #8]
    ff04:	cmp	x8, x1
    ff08:	b.ls	ff44 <gzvprintf@@ZLIB_1.2.7.1+0x3dc>  // b.plast
    ff0c:	sub	x8, x8, x1
    ff10:	ldr	w0, [x19, #28]
    ff14:	cmp	x8, x22
    ff18:	csel	x8, x8, x22, lt  // lt = tstop
    ff1c:	and	x2, x8, #0xffffffff
    ff20:	bl	2470 <write@plt>
    ff24:	tbnz	w0, #31, 100b8 <gzvprintf@@ZLIB_1.2.7.1+0x550>
    ff28:	ldr	x9, [x19, #8]
    ff2c:	ldr	x8, [x19, #144]
    ff30:	add	x1, x9, w0, sxtw
    ff34:	cmp	x8, x1
    ff38:	str	x1, [x19, #8]
    ff3c:	b.hi	ff0c <gzvprintf@@ZLIB_1.2.7.1+0x3a4>  // b.pmore
    ff40:	ldr	w23, [x19, #152]
    ff44:	cbnz	w23, ff5c <gzvprintf@@ZLIB_1.2.7.1+0x3f4>
    ff48:	ldr	w23, [x19, #40]
    ff4c:	ldr	x8, [x19, #56]
    ff50:	str	w23, [x19, #152]
    ff54:	str	x8, [x19, #144]
    ff58:	str	x8, [x19, #8]
    ff5c:	mov	w1, #0x4                   	// #4
    ff60:	mov	x0, x21
    ff64:	bl	23e0 <deflate@plt>
    ff68:	cmn	w0, #0x2
    ff6c:	b.eq	100f0 <gzvprintf@@ZLIB_1.2.7.1+0x588>  // b.none
    ff70:	ldr	w8, [x19, #152]
    ff74:	cmp	w23, w8
    ff78:	mov	w23, w8
    ff7c:	b.ne	fef0 <gzvprintf@@ZLIB_1.2.7.1+0x388>  // b.any
    ff80:	b	100a4 <gzvprintf@@ZLIB_1.2.7.1+0x53c>
    ff84:	mov	w20, #0xffffffff            	// #-1
    ff88:	b	100d8 <gzvprintf@@ZLIB_1.2.7.1+0x570>
    ff8c:	ldr	w23, [x19, #152]
    ff90:	mov	w22, #0x40000000            	// #1073741824
    ff94:	cbnz	w23, fff8 <gzvprintf@@ZLIB_1.2.7.1+0x490>
    ff98:	ldr	x8, [x19, #144]
    ff9c:	ldr	x1, [x19, #8]
    ffa0:	cmp	x8, x1
    ffa4:	b.ls	ffe4 <gzvprintf@@ZLIB_1.2.7.1+0x47c>  // b.plast
    ffa8:	sub	x8, x8, x1
    ffac:	ldr	w0, [x19, #28]
    ffb0:	cmp	x8, x22
    ffb4:	csel	x8, x8, x22, lt  // lt = tstop
    ffb8:	and	x2, x8, #0xffffffff
    ffbc:	bl	2470 <write@plt>
    ffc0:	tbnz	w0, #31, 100b8 <gzvprintf@@ZLIB_1.2.7.1+0x550>
    ffc4:	ldr	x9, [x19, #8]
    ffc8:	ldr	x8, [x19, #144]
    ffcc:	add	x1, x9, w0, sxtw
    ffd0:	cmp	x8, x1
    ffd4:	str	x1, [x19, #8]
    ffd8:	b.hi	ffa8 <gzvprintf@@ZLIB_1.2.7.1+0x440>  // b.pmore
    ffdc:	ldr	w23, [x19, #152]
    ffe0:	cbnz	w23, fff8 <gzvprintf@@ZLIB_1.2.7.1+0x490>
    ffe4:	ldr	w23, [x19, #40]
    ffe8:	ldr	x8, [x19, #56]
    ffec:	str	w23, [x19, #152]
    fff0:	str	x8, [x19, #144]
    fff4:	str	x8, [x19, #8]
    fff8:	mov	x0, x21
    fffc:	mov	w1, wzr
   10000:	bl	23e0 <deflate@plt>
   10004:	cmn	w0, #0x2
   10008:	b.eq	100f0 <gzvprintf@@ZLIB_1.2.7.1+0x588>  // b.none
   1000c:	ldr	w8, [x19, #152]
   10010:	cmp	w23, w8
   10014:	mov	w23, w8
   10018:	b.ne	ff94 <gzvprintf@@ZLIB_1.2.7.1+0x42c>  // b.any
   1001c:	b	100a4 <gzvprintf@@ZLIB_1.2.7.1+0x53c>
   10020:	mov	w22, #0x40000000            	// #1073741824
   10024:	ldr	x8, [x19, #144]
   10028:	ldr	x1, [x19, #8]
   1002c:	cmp	x8, x1
   10030:	b.ls	10068 <gzvprintf@@ZLIB_1.2.7.1+0x500>  // b.plast
   10034:	sub	x8, x8, x1
   10038:	ldr	w0, [x19, #28]
   1003c:	cmp	x8, x22
   10040:	csel	x8, x8, x22, lt  // lt = tstop
   10044:	and	x2, x8, #0xffffffff
   10048:	bl	2470 <write@plt>
   1004c:	tbnz	w0, #31, 100b8 <gzvprintf@@ZLIB_1.2.7.1+0x550>
   10050:	ldr	x9, [x19, #8]
   10054:	ldr	x8, [x19, #144]
   10058:	add	x1, x9, w0, sxtw
   1005c:	cmp	x8, x1
   10060:	str	x1, [x19, #8]
   10064:	b.hi	10034 <gzvprintf@@ZLIB_1.2.7.1+0x4cc>  // b.pmore
   10068:	ldr	w23, [x19, #152]
   1006c:	cbnz	w23, 10084 <gzvprintf@@ZLIB_1.2.7.1+0x51c>
   10070:	ldr	w23, [x19, #40]
   10074:	ldr	x8, [x19, #56]
   10078:	str	w23, [x19, #152]
   1007c:	str	x8, [x19, #144]
   10080:	str	x8, [x19, #8]
   10084:	mov	x0, x21
   10088:	mov	w1, w20
   1008c:	bl	23e0 <deflate@plt>
   10090:	cmn	w0, #0x2
   10094:	b.eq	100f0 <gzvprintf@@ZLIB_1.2.7.1+0x588>  // b.none
   10098:	ldr	w8, [x19, #152]
   1009c:	cmp	w23, w8
   100a0:	b.ne	10024 <gzvprintf@@ZLIB_1.2.7.1+0x4bc>  // b.any
   100a4:	cmp	w20, #0x4
   100a8:	b.ne	fecc <gzvprintf@@ZLIB_1.2.7.1+0x364>  // b.any
   100ac:	mov	x0, x21
   100b0:	bl	23d0 <deflateReset@plt>
   100b4:	b	fecc <gzvprintf@@ZLIB_1.2.7.1+0x364>
   100b8:	bl	2560 <__errno_location@plt>
   100bc:	ldr	w0, [x0]
   100c0:	bl	2440 <strerror@plt>
   100c4:	mov	x2, x0
   100c8:	mov	w1, #0xffffffff            	// #-1
   100cc:	mov	x0, x19
   100d0:	mov	w20, #0xffffffff            	// #-1
   100d4:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
   100d8:	mov	w0, w20
   100dc:	ldp	x20, x19, [sp, #48]
   100e0:	ldp	x22, x21, [sp, #32]
   100e4:	ldr	x23, [sp, #16]
   100e8:	ldp	x29, x30, [sp], #64
   100ec:	ret
   100f0:	adrp	x2, 14000 <gzclose_w@@ZLIB_1.2.3.5+0x3c2c>
   100f4:	add	x2, x2, #0x7ad
   100f8:	mov	w1, #0xfffffffe            	// #-2
   100fc:	mov	x0, x19
   10100:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
   10104:	mov	w20, #0xffffffff            	// #-1
   10108:	b	100d8 <gzvprintf@@ZLIB_1.2.7.1+0x570>

000000000001010c <gzprintf@@Base>:
   1010c:	sub	sp, sp, #0x100
   10110:	stp	x29, x30, [sp, #240]
   10114:	add	x29, sp, #0xf0
   10118:	mov	x8, #0xffffffffffffffd0    	// #-48
   1011c:	mov	x9, sp
   10120:	sub	x10, x29, #0x70
   10124:	movk	x8, #0xff80, lsl #32
   10128:	add	x11, x29, #0x10
   1012c:	add	x9, x9, #0x80
   10130:	add	x10, x10, #0x30
   10134:	stp	x9, x8, [x29, #-16]
   10138:	stp	x11, x10, [x29, #-32]
   1013c:	stp	x2, x3, [x29, #-112]
   10140:	stp	x4, x5, [x29, #-96]
   10144:	stp	x6, x7, [x29, #-80]
   10148:	stp	q1, q2, [sp, #16]
   1014c:	str	q0, [sp]
   10150:	ldp	q0, q1, [x29, #-32]
   10154:	sub	x2, x29, #0x40
   10158:	stp	q3, q4, [sp, #48]
   1015c:	stp	q5, q6, [sp, #80]
   10160:	str	q7, [sp, #112]
   10164:	stp	q0, q1, [x29, #-64]
   10168:	bl	2330 <gzvprintf@plt>
   1016c:	ldp	x29, x30, [sp, #240]
   10170:	add	sp, sp, #0x100
   10174:	ret

0000000000010178 <gzflush@@Base>:
   10178:	stp	x29, x30, [sp, #-64]!
   1017c:	str	x23, [sp, #16]
   10180:	stp	x22, x21, [sp, #32]
   10184:	stp	x20, x19, [sp, #48]
   10188:	mov	x29, sp
   1018c:	cbz	x0, 10268 <gzflush@@Base+0xf0>
   10190:	ldr	w8, [x0, #24]
   10194:	mov	w9, #0x79b1                	// #31153
   10198:	mov	x19, x0
   1019c:	cmp	w8, w9
   101a0:	b.ne	10268 <gzflush@@Base+0xf0>  // b.any
   101a4:	mov	w20, w1
   101a8:	cmp	w1, #0x4
   101ac:	mov	w0, #0xfffffffe            	// #-2
   101b0:	b.hi	1026c <gzflush@@Base+0xf4>  // b.pmore
   101b4:	ldr	w8, [x19, #108]
   101b8:	cbnz	w8, 1026c <gzflush@@Base+0xf4>
   101bc:	ldr	w8, [x19, #104]
   101c0:	cbz	w8, 10254 <gzflush@@Base+0xdc>
   101c4:	ldr	w8, [x19, #128]
   101c8:	ldr	x22, [x19, #96]
   101cc:	str	wzr, [x19, #104]
   101d0:	cbz	w8, 101e8 <gzflush@@Base+0x70>
   101d4:	mov	x0, x19
   101d8:	mov	w1, wzr
   101dc:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   101e0:	cmn	w0, #0x1
   101e4:	b.eq	10260 <gzflush@@Base+0xe8>  // b.none
   101e8:	cbz	x22, 10254 <gzflush@@Base+0xdc>
   101ec:	mov	w8, wzr
   101f0:	ldr	w9, [x19, #40]
   101f4:	cmp	x22, x9
   101f8:	csel	w23, w22, w9, lt  // lt = tstop
   101fc:	tbz	w8, #0, 10208 <gzflush@@Base+0x90>
   10200:	mov	w21, w23
   10204:	b	1021c <gzflush@@Base+0xa4>
   10208:	ldr	x0, [x19, #48]
   1020c:	mov	w21, w23
   10210:	mov	w1, wzr
   10214:	mov	x2, x21
   10218:	bl	23f0 <memset@plt>
   1021c:	ldr	x8, [x19, #48]
   10220:	ldr	x9, [x19, #16]
   10224:	mov	x0, x19
   10228:	mov	w1, wzr
   1022c:	str	x8, [x19, #120]
   10230:	add	x8, x9, x21
   10234:	str	w23, [x19, #128]
   10238:	str	x8, [x19, #16]
   1023c:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   10240:	cmn	w0, #0x1
   10244:	b.eq	10260 <gzflush@@Base+0xe8>  // b.none
   10248:	sub	x22, x22, x21
   1024c:	mov	w8, #0x1                   	// #1
   10250:	cbnz	x22, 101f0 <gzflush@@Base+0x78>
   10254:	mov	x0, x19
   10258:	mov	w1, w20
   1025c:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   10260:	ldr	w0, [x19, #108]
   10264:	b	1026c <gzflush@@Base+0xf4>
   10268:	mov	w0, #0xfffffffe            	// #-2
   1026c:	ldp	x20, x19, [sp, #48]
   10270:	ldp	x22, x21, [sp, #32]
   10274:	ldr	x23, [sp, #16]
   10278:	ldp	x29, x30, [sp], #64
   1027c:	ret

0000000000010280 <gzsetparams@@Base>:
   10280:	stp	x29, x30, [sp, #-64]!
   10284:	stp	x24, x23, [sp, #16]
   10288:	stp	x22, x21, [sp, #32]
   1028c:	stp	x20, x19, [sp, #48]
   10290:	mov	x29, sp
   10294:	cbz	x0, 102b4 <gzsetparams@@Base+0x34>
   10298:	ldr	w8, [x0, #24]
   1029c:	mov	w9, #0x79b1                	// #31153
   102a0:	mov	x19, x0
   102a4:	cmp	w8, w9
   102a8:	b.ne	102b4 <gzsetparams@@Base+0x34>  // b.any
   102ac:	ldr	w8, [x19, #108]
   102b0:	cbz	w8, 102cc <gzsetparams@@Base+0x4c>
   102b4:	mov	w0, #0xfffffffe            	// #-2
   102b8:	ldp	x20, x19, [sp, #48]
   102bc:	ldp	x22, x21, [sp, #32]
   102c0:	ldp	x24, x23, [sp, #16]
   102c4:	ldp	x29, x30, [sp], #64
   102c8:	ret
   102cc:	ldr	w8, [x19, #88]
   102d0:	mov	w20, w2
   102d4:	mov	w21, w1
   102d8:	cmp	w8, w1
   102dc:	b.ne	102f4 <gzsetparams@@Base+0x74>  // b.any
   102e0:	ldr	w8, [x19, #92]
   102e4:	cmp	w8, w20
   102e8:	b.ne	102f4 <gzsetparams@@Base+0x74>  // b.any
   102ec:	mov	w0, wzr
   102f0:	b	102b8 <gzsetparams@@Base+0x38>
   102f4:	ldr	w8, [x19, #104]
   102f8:	cbz	w8, 1038c <gzsetparams@@Base+0x10c>
   102fc:	ldr	w8, [x19, #128]
   10300:	ldr	x23, [x19, #96]
   10304:	str	wzr, [x19, #104]
   10308:	cbz	w8, 10320 <gzsetparams@@Base+0xa0>
   1030c:	mov	x0, x19
   10310:	mov	w1, wzr
   10314:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   10318:	cmn	w0, #0x1
   1031c:	b.eq	103cc <gzsetparams@@Base+0x14c>  // b.none
   10320:	cbz	x23, 1038c <gzsetparams@@Base+0x10c>
   10324:	mov	w8, wzr
   10328:	ldr	w9, [x19, #40]
   1032c:	cmp	x23, x9
   10330:	csel	w24, w23, w9, lt  // lt = tstop
   10334:	tbz	w8, #0, 10340 <gzsetparams@@Base+0xc0>
   10338:	mov	w22, w24
   1033c:	b	10354 <gzsetparams@@Base+0xd4>
   10340:	ldr	x0, [x19, #48]
   10344:	mov	w22, w24
   10348:	mov	w1, wzr
   1034c:	mov	x2, x22
   10350:	bl	23f0 <memset@plt>
   10354:	ldr	x8, [x19, #48]
   10358:	ldr	x9, [x19, #16]
   1035c:	mov	x0, x19
   10360:	mov	w1, wzr
   10364:	str	x8, [x19, #120]
   10368:	add	x8, x9, x22
   1036c:	str	w24, [x19, #128]
   10370:	str	x8, [x19, #16]
   10374:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   10378:	cmn	w0, #0x1
   1037c:	b.eq	103cc <gzsetparams@@Base+0x14c>  // b.none
   10380:	sub	x23, x23, x22
   10384:	mov	w8, #0x1                   	// #1
   10388:	cbnz	x23, 10328 <gzsetparams@@Base+0xa8>
   1038c:	ldr	w8, [x19, #40]
   10390:	cbz	w8, 103c0 <gzsetparams@@Base+0x140>
   10394:	ldr	w8, [x19, #128]
   10398:	cbz	w8, 103b0 <gzsetparams@@Base+0x130>
   1039c:	mov	w1, #0x5                   	// #5
   103a0:	mov	x0, x19
   103a4:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   103a8:	cmn	w0, #0x1
   103ac:	b.eq	103cc <gzsetparams@@Base+0x14c>  // b.none
   103b0:	add	x0, x19, #0x78
   103b4:	mov	w1, w21
   103b8:	mov	w2, w20
   103bc:	bl	2420 <deflateParams@plt>
   103c0:	mov	w0, wzr
   103c4:	stp	w21, w20, [x19, #88]
   103c8:	b	102b8 <gzsetparams@@Base+0x38>
   103cc:	ldr	w0, [x19, #108]
   103d0:	b	102b8 <gzsetparams@@Base+0x38>

00000000000103d4 <gzclose_w@@ZLIB_1.2.3.5>:
   103d4:	stp	x29, x30, [sp, #-48]!
   103d8:	stp	x22, x21, [sp, #16]
   103dc:	stp	x20, x19, [sp, #32]
   103e0:	mov	x29, sp
   103e4:	cbz	x0, 1049c <gzclose_w@@ZLIB_1.2.3.5+0xc8>
   103e8:	ldr	w8, [x0, #24]
   103ec:	mov	w9, #0x79b1                	// #31153
   103f0:	mov	x19, x0
   103f4:	cmp	w8, w9
   103f8:	b.ne	1049c <gzclose_w@@ZLIB_1.2.3.5+0xc8>  // b.any
   103fc:	ldr	w8, [x19, #104]
   10400:	cbz	w8, 10494 <gzclose_w@@ZLIB_1.2.3.5+0xc0>
   10404:	ldr	w8, [x19, #128]
   10408:	ldr	x21, [x19, #96]
   1040c:	str	wzr, [x19, #104]
   10410:	cbz	w8, 10428 <gzclose_w@@ZLIB_1.2.3.5+0x54>
   10414:	mov	x0, x19
   10418:	mov	w1, wzr
   1041c:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   10420:	cmn	w0, #0x1
   10424:	b.eq	104a4 <gzclose_w@@ZLIB_1.2.3.5+0xd0>  // b.none
   10428:	cbz	x21, 10494 <gzclose_w@@ZLIB_1.2.3.5+0xc0>
   1042c:	mov	w8, wzr
   10430:	ldr	w9, [x19, #40]
   10434:	cmp	x21, x9
   10438:	csel	w22, w21, w9, lt  // lt = tstop
   1043c:	tbz	w8, #0, 10448 <gzclose_w@@ZLIB_1.2.3.5+0x74>
   10440:	mov	w20, w22
   10444:	b	1045c <gzclose_w@@ZLIB_1.2.3.5+0x88>
   10448:	ldr	x0, [x19, #48]
   1044c:	mov	w20, w22
   10450:	mov	w1, wzr
   10454:	mov	x2, x20
   10458:	bl	23f0 <memset@plt>
   1045c:	ldr	x8, [x19, #48]
   10460:	ldr	x9, [x19, #16]
   10464:	mov	x0, x19
   10468:	mov	w1, wzr
   1046c:	str	x8, [x19, #120]
   10470:	add	x8, x9, x20
   10474:	str	w22, [x19, #128]
   10478:	str	x8, [x19, #16]
   1047c:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   10480:	cmn	w0, #0x1
   10484:	b.eq	104a4 <gzclose_w@@ZLIB_1.2.3.5+0xd0>  // b.none
   10488:	sub	x21, x21, x20
   1048c:	mov	w8, #0x1                   	// #1
   10490:	cbnz	x21, 10430 <gzclose_w@@ZLIB_1.2.3.5+0x5c>
   10494:	mov	w20, wzr
   10498:	b	104a8 <gzclose_w@@ZLIB_1.2.3.5+0xd4>
   1049c:	mov	w20, #0xfffffffe            	// #-2
   104a0:	b	10518 <gzclose_w@@ZLIB_1.2.3.5+0x144>
   104a4:	ldr	w20, [x19, #108]
   104a8:	mov	w1, #0x4                   	// #4
   104ac:	mov	x0, x19
   104b0:	bl	fe4c <gzvprintf@@ZLIB_1.2.7.1+0x2e4>
   104b4:	cmn	w0, #0x1
   104b8:	b.ne	104c0 <gzclose_w@@ZLIB_1.2.3.5+0xec>  // b.any
   104bc:	ldr	w20, [x19, #108]
   104c0:	ldr	w8, [x19, #40]
   104c4:	cbz	w8, 104e8 <gzclose_w@@ZLIB_1.2.3.5+0x114>
   104c8:	ldr	w8, [x19, #64]
   104cc:	cbnz	w8, 104e0 <gzclose_w@@ZLIB_1.2.3.5+0x10c>
   104d0:	add	x0, x19, #0x78
   104d4:	bl	24d0 <deflateEnd@plt>
   104d8:	ldr	x0, [x19, #56]
   104dc:	bl	24b0 <free@plt>
   104e0:	ldr	x0, [x19, #48]
   104e4:	bl	24b0 <free@plt>
   104e8:	mov	x0, x19
   104ec:	mov	w1, wzr
   104f0:	mov	x2, xzr
   104f4:	bl	e5b8 <gzseek64@@ZLIB_1.2.3.3+0x21c>
   104f8:	ldr	x0, [x19, #32]
   104fc:	bl	24b0 <free@plt>
   10500:	ldr	w0, [x19, #28]
   10504:	bl	2450 <close@plt>
   10508:	cmn	w0, #0x1
   1050c:	mov	x0, x19
   10510:	csinv	w20, w20, wzr, ne  // ne = any
   10514:	bl	24b0 <free@plt>
   10518:	mov	w0, w20
   1051c:	ldp	x20, x19, [sp, #32]
   10520:	ldp	x22, x21, [sp, #16]
   10524:	ldp	x29, x30, [sp], #48
   10528:	ret

Disassembly of section .fini:

000000000001052c <.fini>:
   1052c:	stp	x29, x30, [sp, #-16]!
   10530:	mov	x29, sp
   10534:	ldp	x29, x30, [sp], #16
   10538:	ret
