
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//exfat.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1378>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	ldr	x19, [x0, #80]
      10:	ldr	x0, [x19, #8]
      14:	bl	0 <grub_free>
      18:	mov	x0, x19
      1c:	bl	0 <grub_free>
      20:	adrp	x0, 0 <grub_mod_init-0x1378>
      24:	ldr	x0, [x0]
      28:	ldr	x0, [x0]
      2c:	bl	0 <grub_dl_unref>
      30:	adrp	x0, 0 <grub_mod_init-0x1378>
      34:	ldr	x19, [sp, #16]
      38:	ldr	x0, [x0]
      3c:	ldp	x29, x30, [sp], #32
      40:	ldr	w0, [x0]
      44:	ret
	...
      58:	stp	x29, x30, [sp, #-160]!
      5c:	mov	x29, sp
      60:	stp	x19, x20, [sp, #16]
      64:	cbz	x0, 17c <grub_mod_init-0x11fc>
      68:	mov	x20, x0
      6c:	mov	x0, #0x2c                  	// #44
      70:	bl	0 <grub_malloc>
      74:	mov	x19, x0
      78:	cbz	x0, 17c <grub_mod_init-0x11fc>
      7c:	add	x4, sp, #0x28
      80:	mov	x0, x20
      84:	mov	x3, #0x78                  	// #120
      88:	mov	x2, #0x0                   	// #0
      8c:	mov	x1, #0x0                   	// #0
      90:	bl	0 <grub_disk_read>
      94:	cbnz	w0, 180 <grub_mod_init-0x11f8>
      98:	adrp	x1, 0 <grub_mod_init-0x1378>
      9c:	add	x0, sp, #0x2b
      a0:	mov	x2, #0x8                   	// #8
      a4:	ldr	x1, [x1]
      a8:	bl	0 <grub_memcmp>
      ac:	cbnz	w0, 180 <grub_mod_init-0x11f8>
      b0:	ldrb	w0, [sp, #148]
      b4:	sub	w2, w0, #0x9
      b8:	cmp	w2, #0x6
      bc:	b.hi	1ac <grub_mod_init-0x11cc>  // b.pmore
      c0:	str	w2, [x19]
      c4:	ldrb	w0, [sp, #149]
      c8:	cmp	w0, #0x19
      cc:	b.hi	1b4 <grub_mod_init-0x11c4>  // b.pmore
      d0:	ldr	w1, [sp, #120]
      d4:	add	w0, w2, w0
      d8:	str	w0, [x19, #24]
      dc:	lsl	w1, w1, w2
      e0:	str	w1, [x19, #8]
      e4:	cbz	w1, 180 <grub_mod_init-0x11f8>
      e8:	ldr	w0, [sp, #124]
      ec:	lsl	w0, w0, w2
      f0:	str	w0, [x19, #12]
      f4:	cbz	w0, 180 <grub_mod_init-0x11f8>
      f8:	ldr	x3, [sp, #112]
      fc:	lsl	x3, x3, x2
     100:	str	w3, [x19, #4]
     104:	cbz	w3, 180 <grub_mod_init-0x11f8>
     108:	ldrb	w6, [sp, #150]
     10c:	cbz	w6, 180 <grub_mod_init-0x11f8>
     110:	ldp	w5, w4, [sp, #128]
     114:	lsl	w5, w5, w2
     118:	lsl	w2, w4, w2
     11c:	stp	w5, w2, [x19, #32]
     120:	cmp	w2, #0x2
     124:	b.ls	180 <grub_mod_init-0x11f8>  // b.plast
     128:	ldr	w5, [sp, #136]
     12c:	mov	w2, #0xffffffff            	// #-1
     130:	cmp	w6, #0x1
     134:	mov	w4, #0x20                  	// #32
     138:	stp	w4, w5, [x19, #16]
     13c:	cset	w4, hi  // hi = pmore
     140:	str	w2, [x19, #28]
     144:	ldrb	w2, [sp, #146]
     148:	tst	w4, w2
     14c:	b.ne	1bc <grub_mod_init-0x11bc>  // b.any
     150:	cmp	w3, w1
     154:	b.ls	180 <grub_mod_init-0x11f8>  // b.plast
     158:	mov	x0, x20
     15c:	add	x4, sp, #0x24
     160:	mov	x3, #0x4                   	// #4
     164:	mov	x2, #0x0                   	// #0
     168:	bl	0 <grub_disk_read>
     16c:	cbnz	w0, 180 <grub_mod_init-0x11f8>
     170:	ldr	w0, [sp, #140]
     174:	str	w0, [x19, #40]
     178:	b	19c <grub_mod_init-0x11dc>
     17c:	mov	x19, #0x0                   	// #0
     180:	mov	x0, x19
     184:	bl	0 <grub_free>
     188:	adrp	x1, 0 <grub_mod_init-0x1378>
     18c:	mov	x19, #0x0                   	// #0
     190:	mov	w0, #0x9                   	// #9
     194:	ldr	x1, [x1]
     198:	bl	0 <grub_error>
     19c:	mov	x0, x19
     1a0:	ldp	x19, x20, [sp, #16]
     1a4:	ldp	x29, x30, [sp], #160
     1a8:	ret
     1ac:	str	w0, [x19]
     1b0:	b	180 <grub_mod_init-0x11f8>
     1b4:	str	w0, [x19, #24]
     1b8:	b	180 <grub_mod_init-0x11f8>
     1bc:	add	w1, w1, w0
     1c0:	str	w1, [x19, #8]
     1c4:	b	150 <grub_mod_init-0x1228>
	...
     1d8:	stp	x29, x30, [sp, #-48]!
     1dc:	adrp	x2, 0 <grub_mod_init-0x1378>
     1e0:	mov	x29, sp
     1e4:	stp	x19, x20, [sp, #16]
     1e8:	mov	x20, x1
     1ec:	ldr	x19, [x0]
     1f0:	str	x21, [sp, #32]
     1f4:	ldr	x21, [x2]
     1f8:	ldr	x0, [x21]
     1fc:	bl	0 <grub_dl_ref>
     200:	mov	x0, x19
     204:	bl	58 <grub_mod_init-0x1320>
     208:	mov	x19, x0
     20c:	cbz	x0, 290 <grub_mod_init-0x10e8>
     210:	adrp	x0, 0 <grub_mod_init-0x1378>
     214:	ldr	w1, [x19, #40]
     218:	ldr	x0, [x0]
     21c:	and	w2, w1, #0xffff
     220:	lsr	w1, w1, #16
     224:	bl	0 <grub_xasprintf>
     228:	str	x0, [x20]
     22c:	cbz	x0, 250 <grub_mod_init-0x1128>
     230:	ldrb	w1, [x0]
     234:	cbz	w1, 250 <grub_mod_init-0x1128>
     238:	sub	w2, w1, #0x61
     23c:	cmp	w2, #0x19
     240:	b.ls	27c <grub_mod_init-0x10fc>  // b.plast
     244:	strb	w1, [x0]
     248:	ldrb	w1, [x0, #1]!
     24c:	cbnz	w1, 238 <grub_mod_init-0x1140>
     250:	ldr	x0, [x21]
     254:	bl	0 <grub_dl_unref>
     258:	mov	x0, x19
     25c:	bl	0 <grub_free>
     260:	adrp	x0, 0 <grub_mod_init-0x1378>
     264:	ldp	x19, x20, [sp, #16]
     268:	ldr	x0, [x0]
     26c:	ldr	x21, [sp, #32]
     270:	ldr	w0, [x0]
     274:	ldp	x29, x30, [sp], #48
     278:	ret
     27c:	sub	w1, w1, #0x20
     280:	strb	w1, [x0]
     284:	ldrb	w1, [x0, #1]!
     288:	cbnz	w1, 238 <grub_mod_init-0x1140>
     28c:	b	250 <grub_mod_init-0x1128>
     290:	str	xzr, [x20]
     294:	b	250 <grub_mod_init-0x1128>
	...
     2b0:	stp	x29, x30, [sp, #-128]!
     2b4:	adrp	x2, 0 <grub_mod_init-0x1378>
     2b8:	mov	x29, sp
     2bc:	stp	x23, x24, [sp, #48]
     2c0:	add	x24, sp, #0x50
     2c4:	ldr	x23, [x2]
     2c8:	stp	x21, x22, [sp, #32]
     2cc:	mov	x21, x1
     2d0:	ldr	x1, [x0, #8]
     2d4:	stp	x19, x20, [sp, #16]
     2d8:	mov	x20, x0
     2dc:	ldr	x0, [x23]
     2e0:	ldr	x22, [x1]
     2e4:	str	xzr, [sp, #72]
     2e8:	bl	0 <grub_dl_ref>
     2ec:	mov	x0, x22
     2f0:	bl	58 <grub_mod_init-0x1320>
     2f4:	mov	x19, x0
     2f8:	cbz	x0, 368 <grub_mod_init-0x1010>
     2fc:	adrp	x1, 0 <grub_mod_init-0x1378>
     300:	ldr	w7, [x19, #20]
     304:	mov	w8, #0x10                  	// #16
     308:	mov	w6, #0xffffffff            	// #-1
     30c:	ldr	x3, [x1]
     310:	add	x24, sp, #0x50
     314:	mov	x0, x21
     318:	mov	x1, x24
     31c:	add	x2, sp, #0x48
     320:	mov	w5, #0x1                   	// #1
     324:	mov	x4, #0x0                   	// #0
     328:	stp	x22, x19, [sp, #80]
     32c:	strb	w8, [sp, #96]
     330:	str	xzr, [sp, #104]
     334:	stp	w7, w6, [sp, #112]
     338:	str	xzr, [sp, #120]
     33c:	bl	0 <grub_fshelp_find_file_lookup>
     340:	cbnz	w0, 368 <grub_mod_init-0x1010>
     344:	ldr	x1, [sp, #72]
     348:	str	x1, [x20, #80]
     34c:	ldp	x21, x22, [sp, #32]
     350:	ldr	x1, [x1, #24]
     354:	str	x1, [x20, #64]
     358:	ldp	x19, x20, [sp, #16]
     35c:	ldp	x23, x24, [sp, #48]
     360:	ldp	x29, x30, [sp], #128
     364:	ret
     368:	ldr	x0, [sp, #72]
     36c:	cmp	x0, x24
     370:	b.eq	378 <grub_mod_init-0x1000>  // b.none
     374:	bl	0 <grub_free>
     378:	mov	x0, x19
     37c:	bl	0 <grub_free>
     380:	ldr	x0, [x23]
     384:	bl	0 <grub_dl_unref>
     388:	adrp	x0, 0 <grub_mod_init-0x1378>
     38c:	ldp	x19, x20, [sp, #16]
     390:	ldr	x0, [x0]
     394:	ldp	x21, x22, [sp, #32]
     398:	ldr	w0, [x0]
     39c:	ldp	x23, x24, [sp, #48]
     3a0:	ldp	x29, x30, [sp], #128
     3a4:	ret
	...
     3c0:	stp	x29, x30, [sp, #-144]!
     3c4:	mov	x29, sp
     3c8:	ldr	w8, [x1, #36]
     3cc:	stp	x27, x28, [sp, #80]
     3d0:	mov	x27, x1
     3d4:	ldr	x1, [x1, #8]
     3d8:	stp	x19, x20, [sp, #16]
     3dc:	mov	x19, x0
     3e0:	stp	x23, x24, [sp, #48]
     3e4:	mov	x24, #0xffffffffffffffff    	// #-1
     3e8:	ldr	w0, [x1, #24]
     3ec:	stp	x25, x26, [sp, #64]
     3f0:	mov	x25, x5
     3f4:	add	w0, w0, #0x9
     3f8:	stp	x2, x3, [sp, #104]
     3fc:	mov	x26, x6
     400:	lsr	x2, x4, x0
     404:	lsl	x24, x24, x0
     408:	mov	w20, w2
     40c:	bic	x24, x4, x24
     410:	cmp	w2, w8
     414:	b.cs	424 <grub_mod_init-0xf54>  // b.hs, b.nlast
     418:	ldr	w2, [x27, #32]
     41c:	mov	w8, #0x0                   	// #0
     420:	stp	wzr, w2, [x27, #36]
     424:	cbz	x25, 624 <grub_mod_init-0xd54>
     428:	mov	w2, #0x1                   	// #1
     42c:	mov	x28, #0x0                   	// #0
     430:	lsl	w0, w2, w0
     434:	adrp	x23, 0 <grub_mod_init-0x1378>
     438:	sxtw	x0, w0
     43c:	stp	x21, x22, [sp, #32]
     440:	adrp	x22, 0 <grub_mod_init-0x1378>
     444:	str	x0, [sp, #120]
     448:	ldr	w0, [x27, #40]
     44c:	cmp	w8, w20
     450:	adrp	x21, 0 <grub_mod_init-0x1378>
     454:	b.cc	4bc <grub_mod_init-0xebc>  // b.lo, b.ul, b.last
     458:	b	588 <grub_mod_init-0xdf0>
     45c:	cmp	w4, #0x10
     460:	b.ne	46c <grub_mod_init-0xf0c>  // b.any
     464:	and	w5, w5, #0xffff
     468:	str	w5, [sp, #140]
     46c:	ldr	x2, [x22]
     470:	mov	w1, #0x228                 	// #552
     474:	ldr	x0, [x21]
     478:	ldr	x3, [x23]
     47c:	bl	0 <grub_real_dprintf>
     480:	ldr	x1, [x27, #8]
     484:	ldr	w0, [sp, #140]
     488:	ldr	w2, [x1, #28]
     48c:	cmp	w2, w0
     490:	b.ls	604 <grub_mod_init-0xd74>  // b.plast
     494:	cmp	w0, #0x1
     498:	b.ls	52c <grub_mod_init-0xe4c>  // b.plast
     49c:	ldr	w2, [x1, #36]
     4a0:	cmp	w0, w2
     4a4:	b.cs	52c <grub_mod_init-0xe4c>  // b.hs, b.nlast
     4a8:	ldr	w2, [x27, #36]
     4ac:	add	w2, w2, #0x1
     4b0:	stp	w2, w0, [x27, #36]
     4b4:	cmp	w2, w20
     4b8:	b.cs	588 <grub_mod_init-0xdf0>  // b.hs, b.nlast
     4bc:	ldr	w3, [x1, #16]
     4c0:	lsl	w2, w0, #1
     4c4:	cmp	w3, #0x10
     4c8:	b.eq	4dc <grub_mod_init-0xe9c>  // b.none
     4cc:	lsl	w2, w0, #2
     4d0:	cmp	w3, #0x20
     4d4:	add	w0, w0, w0, lsr #1
     4d8:	csel	x2, x0, x2, ne  // ne = any
     4dc:	add	w3, w3, #0x7
     4e0:	ldr	w1, [x1, #8]
     4e4:	add	x4, sp, #0x8c
     4e8:	mov	x0, x19
     4ec:	asr	w3, w3, #3
     4f0:	sxtw	x3, w3
     4f4:	bl	0 <grub_disk_read>
     4f8:	cbnz	w0, 564 <grub_mod_init-0xe14>
     4fc:	ldr	x0, [x27, #8]
     500:	ldr	w5, [sp, #140]
     504:	ldr	w4, [x0, #16]
     508:	cmp	w4, #0xc
     50c:	b.ne	45c <grub_mod_init-0xf1c>  // b.any
     510:	ldr	w1, [x27, #40]
     514:	lsr	w0, w5, #4
     518:	tst	x1, #0x1
     51c:	csel	w5, w0, w5, ne  // ne = any
     520:	and	w5, w5, #0xfff
     524:	str	w5, [sp, #140]
     528:	b	46c <grub_mod_init-0xf0c>
     52c:	adrp	x1, 0 <grub_mod_init-0x1378>
     530:	mov	w2, w0
     534:	mov	w0, #0x9                   	// #9
     538:	mov	x28, #0xffffffffffffffff    	// #-1
     53c:	ldr	x1, [x1]
     540:	bl	0 <grub_error>
     544:	ldp	x21, x22, [sp, #32]
     548:	mov	x0, x28
     54c:	ldp	x19, x20, [sp, #16]
     550:	ldp	x23, x24, [sp, #48]
     554:	ldp	x25, x26, [sp, #64]
     558:	ldp	x27, x28, [sp, #80]
     55c:	ldp	x29, x30, [sp], #144
     560:	ret
     564:	mov	x28, #0xffffffffffffffff    	// #-1
     568:	mov	x0, x28
     56c:	ldp	x19, x20, [sp, #16]
     570:	ldp	x21, x22, [sp, #32]
     574:	ldp	x23, x24, [sp, #48]
     578:	ldp	x25, x26, [sp, #64]
     57c:	ldp	x27, x28, [sp, #80]
     580:	ldp	x29, x30, [sp], #144
     584:	ret
     588:	ldr	x2, [sp, #120]
     58c:	sub	w0, w0, #0x2
     590:	ldr	x3, [sp, #104]
     594:	sub	x21, x2, x24
     598:	ldr	w2, [x1, #24]
     59c:	cmp	x21, x25
     5a0:	ldr	w1, [x1, #32]
     5a4:	csel	x21, x21, x25, ls  // ls = plast
     5a8:	mov	x4, x26
     5ac:	lsl	w0, w0, w2
     5b0:	add	w1, w0, w1
     5b4:	ldr	x2, [sp, #112]
     5b8:	stp	x3, x2, [x19, #48]
     5bc:	mov	x0, x19
     5c0:	mov	x2, x24
     5c4:	mov	x3, x21
     5c8:	bl	0 <grub_disk_read>
     5cc:	str	xzr, [x19, #48]
     5d0:	adrp	x0, 0 <grub_mod_init-0x1378>
     5d4:	ldr	x0, [x0]
     5d8:	ldr	w0, [x0]
     5dc:	cbnz	w0, 564 <grub_mod_init-0xe14>
     5e0:	add	x26, x26, x21
     5e4:	add	x28, x28, x21
     5e8:	add	w20, w20, #0x1
     5ec:	subs	x25, x25, x21
     5f0:	b.eq	604 <grub_mod_init-0xd74>  // b.none
     5f4:	ldr	w8, [x27, #36]
     5f8:	mov	x24, #0x0                   	// #0
     5fc:	ldr	x1, [x27, #8]
     600:	b	448 <grub_mod_init-0xf30>
     604:	mov	x0, x28
     608:	ldp	x19, x20, [sp, #16]
     60c:	ldp	x21, x22, [sp, #32]
     610:	ldp	x23, x24, [sp, #48]
     614:	ldp	x25, x26, [sp, #64]
     618:	ldp	x27, x28, [sp, #80]
     61c:	ldp	x29, x30, [sp], #144
     620:	ret
     624:	mov	x28, #0x0                   	// #0
     628:	b	548 <grub_mod_init-0xe30>
     62c:	nop
	...
     658:	stp	x29, x30, [sp, #-32]!
     65c:	mov	x6, x1
     660:	mov	x29, sp
     664:	ldp	x1, x8, [x0, #80]
     668:	stp	x19, x20, [sp, #16]
     66c:	mov	x19, x2
     670:	ldr	x3, [x0, #8]
     674:	ldr	x7, [x0, #24]
     678:	ldr	w2, [x1, #44]
     67c:	ldr	x20, [x3]
     680:	ldr	x9, [x0, #96]
     684:	cbnz	w2, 6a8 <grub_mod_init-0xcd0>
     688:	mov	x5, x19
     68c:	mov	x0, x20
     690:	ldp	x19, x20, [sp, #16]
     694:	mov	x4, x7
     698:	ldp	x29, x30, [sp], #32
     69c:	mov	x3, x9
     6a0:	mov	x2, x8
     6a4:	b	3c0 <grub_mod_init-0xfb8>
     6a8:	ldr	x10, [x1, #8]
     6ac:	mov	x4, x6
     6b0:	ldr	w5, [x1, #32]
     6b4:	mov	x3, x19
     6b8:	and	x2, x7, #0x1ff
     6bc:	mov	x0, x20
     6c0:	ldr	w6, [x10, #24]
     6c4:	sub	w5, w5, #0x2
     6c8:	ldr	w1, [x10, #32]
     6cc:	stp	x8, x9, [x20, #48]
     6d0:	lsl	w5, w5, w6
     6d4:	add	w1, w5, w1
     6d8:	add	x1, x1, x7, lsr #9
     6dc:	bl	0 <grub_disk_read>
     6e0:	adrp	x0, 0 <grub_mod_init-0x1378>
     6e4:	str	xzr, [x20, #48]
     6e8:	ldr	x0, [x0]
     6ec:	ldr	w0, [x0]
     6f0:	cmp	w0, #0x0
     6f4:	csinv	x0, x19, xzr, eq  // eq = none
     6f8:	ldp	x19, x20, [sp, #16]
     6fc:	ldp	x29, x30, [sp], #32
     700:	ret
     704:	nop
	...
     710:	stp	x29, x30, [sp, #-160]!
     714:	mov	x2, #0x20                  	// #32
     718:	mov	x29, sp
     71c:	stp	x19, x20, [sp, #16]
     720:	mov	x20, x1
     724:	mov	x19, x0
     728:	mov	x0, x1
     72c:	mov	w1, #0x0                   	// #0
     730:	stp	x21, x22, [sp, #32]
     734:	mov	w22, #0x1                   	// #1
     738:	adrp	x21, 0 <grub_mod_init-0x1378>
     73c:	stp	x23, x24, [sp, #48]
     740:	bl	0 <grub_memset>
     744:	ldr	x5, [x20, #48]
     748:	add	x5, x5, #0x20
     74c:	ldr	w0, [x19, #44]
     750:	ldr	x23, [x19]
     754:	str	x5, [x20, #48]
     758:	cbnz	w0, 7c4 <grub_mod_init-0xbb4>
     75c:	nop
     760:	mov	x4, x5
     764:	mov	x0, x23
     768:	add	x6, sp, #0x60
     76c:	mov	x1, x19
     770:	mov	x5, #0x20                  	// #32
     774:	mov	x3, #0x0                   	// #0
     778:	mov	x2, #0x0                   	// #0
     77c:	bl	3c0 <grub_mod_init-0xfb8>
     780:	cmp	x0, #0x20
     784:	b.ne	b34 <grub_mod_init-0x844>  // b.any
     788:	ldrb	w4, [sp, #96]
     78c:	cbz	w4, b34 <grub_mod_init-0x844>
     790:	tbz	w4, #7, 7ac <grub_mod_init-0xbcc>
     794:	cmp	w4, #0x85
     798:	b.eq	84c <grub_mod_init-0xb2c>  // b.none
     79c:	add	w0, w4, #0x7f
     7a0:	and	w0, w0, #0xff
     7a4:	cmp	w0, #0x2
     7a8:	b.hi	824 <grub_mod_init-0xb54>  // b.pmore
     7ac:	ldr	x5, [x20, #48]
     7b0:	add	x5, x5, #0x20
     7b4:	ldr	w0, [x19, #44]
     7b8:	ldr	x23, [x19]
     7bc:	str	x5, [x20, #48]
     7c0:	cbz	w0, 760 <grub_mod_init-0xc18>
     7c4:	ldr	x6, [x19, #8]
     7c8:	and	x2, x5, #0x1ff
     7cc:	ldr	w1, [x19, #32]
     7d0:	add	x4, sp, #0x60
     7d4:	mov	x0, x23
     7d8:	mov	x3, #0x20                  	// #32
     7dc:	ldr	w7, [x6, #24]
     7e0:	sub	w1, w1, #0x2
     7e4:	ldr	w6, [x6, #32]
     7e8:	stp	xzr, xzr, [x23, #48]
     7ec:	lsl	w1, w1, w7
     7f0:	add	w1, w1, w6
     7f4:	add	x1, x1, x5, lsr #9
     7f8:	bl	0 <grub_disk_read>
     7fc:	adrp	x0, 0 <grub_mod_init-0x1378>
     800:	str	xzr, [x23, #48]
     804:	ldr	x0, [x0]
     808:	ldr	w0, [x0]
     80c:	cbz	w0, 788 <grub_mod_init-0xbf0>
     810:	ldp	x19, x20, [sp, #16]
     814:	ldp	x21, x22, [sp, #32]
     818:	ldp	x23, x24, [sp, #48]
     81c:	ldp	x29, x30, [sp], #160
     820:	ret
     824:	adrp	x1, 0 <grub_mod_init-0x1378>
     828:	adrp	x2, 0 <grub_mod_init-0x1378>
     82c:	adrp	x0, 0 <grub_mod_init-0x1378>
     830:	ldr	x3, [x1]
     834:	mov	w1, #0x2d6                 	// #726
     838:	ldr	x2, [x2]
     83c:	ldr	x0, [x0]
     840:	bl	0 <grub_real_dprintf>
     844:	ldr	x5, [x20, #48]
     848:	b	7b0 <grub_mod_init-0xbc8>
     84c:	ldrb	w23, [sp, #97]
     850:	ldrh	w0, [sp, #100]
     854:	str	w0, [x20]
     858:	str	wzr, [x20, #24]
     85c:	cbz	w23, bfc <grub_mod_init-0x77c>
     860:	mov	w24, #0x0                   	// #0
     864:	stp	x25, x26, [sp, #64]
     868:	adrp	x25, 0 <grub_mod_init-0x1378>
     86c:	adrp	x26, 0 <grub_mod_init-0x1378>
     870:	stp	x27, x28, [sp, #80]
     874:	mov	w27, #0x0                   	// #0
     878:	b	990 <grub_mod_init-0x9e8>
     87c:	mov	x4, x1
     880:	mov	x0, x28
     884:	add	x6, sp, #0x80
     888:	mov	x1, x19
     88c:	mov	x5, #0x20                  	// #32
     890:	mov	x3, #0x0                   	// #0
     894:	mov	x2, #0x0                   	// #0
     898:	bl	3c0 <grub_mod_init-0xfb8>
     89c:	cmp	x0, #0x20
     8a0:	b.ne	9f0 <grub_mod_init-0x988>  // b.any
     8a4:	ldrb	w4, [sp, #128]
     8a8:	tbz	w4, #7, 984 <grub_mod_init-0x9f4>
     8ac:	tbz	w4, #6, 9f0 <grub_mod_init-0x988>
     8b0:	cmp	w4, #0xc0
     8b4:	b.eq	b0c <grub_mod_init-0x86c>  // b.none
     8b8:	cmp	w4, #0xc1
     8bc:	b.ne	a0c <grub_mod_init-0x96c>  // b.any
     8c0:	lsl	w0, w24, #4
     8c4:	ldrh	w5, [sp, #130]
     8c8:	ldr	x1, [x20, #40]
     8cc:	sub	w4, w0, w24
     8d0:	sub	w0, w0, w24
     8d4:	add	w24, w24, #0x1
     8d8:	add	w3, w0, #0x1
     8dc:	add	w2, w0, #0x2
     8e0:	strh	w5, [x1, x4, lsl #1]
     8e4:	add	w12, w0, #0x3
     8e8:	add	w11, w0, #0x4
     8ec:	add	w10, w0, #0x5
     8f0:	ldrh	w4, [sp, #132]
     8f4:	add	w9, w0, #0x6
     8f8:	strh	w4, [x1, x3, lsl #1]
     8fc:	add	w8, w0, #0x7
     900:	add	w7, w0, #0x8
     904:	add	w6, w0, #0x9
     908:	ldrh	w3, [sp, #134]
     90c:	add	w5, w0, #0xa
     910:	strh	w3, [x1, x2, lsl #1]
     914:	add	w4, w0, #0xb
     918:	add	w3, w0, #0xc
     91c:	add	w2, w0, #0xd
     920:	ldrh	w13, [sp, #136]
     924:	add	w0, w0, #0xe
     928:	strh	w13, [x1, x12, lsl #1]
     92c:	ldrh	w12, [sp, #138]
     930:	strh	w12, [x1, x11, lsl #1]
     934:	ldrh	w11, [sp, #140]
     938:	strh	w11, [x1, x10, lsl #1]
     93c:	ldrh	w10, [sp, #142]
     940:	strh	w10, [x1, x9, lsl #1]
     944:	ldrh	w9, [sp, #144]
     948:	strh	w9, [x1, x8, lsl #1]
     94c:	ldrh	w8, [sp, #146]
     950:	strh	w8, [x1, x7, lsl #1]
     954:	ldrh	w7, [sp, #148]
     958:	strh	w7, [x1, x6, lsl #1]
     95c:	ldrh	w6, [sp, #150]
     960:	strh	w6, [x1, x5, lsl #1]
     964:	ldrh	w5, [sp, #152]
     968:	strh	w5, [x1, x4, lsl #1]
     96c:	ldrh	w4, [sp, #154]
     970:	strh	w4, [x1, x3, lsl #1]
     974:	ldrh	w3, [sp, #156]
     978:	strh	w3, [x1, x2, lsl #1]
     97c:	ldrh	w2, [sp, #158]
     980:	strh	w2, [x1, x0, lsl #1]
     984:	add	w27, w27, #0x1
     988:	cmp	w23, w27
     98c:	b.eq	a30 <grub_mod_init-0x948>  // b.none
     990:	ldr	x1, [x20, #48]
     994:	ldr	w0, [x19, #44]
     998:	add	x1, x1, #0x20
     99c:	ldr	x28, [x19]
     9a0:	str	x1, [x20, #48]
     9a4:	cbz	w0, 87c <grub_mod_init-0xafc>
     9a8:	ldr	x6, [x19, #8]
     9ac:	and	x2, x1, #0x1ff
     9b0:	ldr	w5, [x19, #32]
     9b4:	add	x4, sp, #0x80
     9b8:	mov	x0, x28
     9bc:	mov	x3, #0x20                  	// #32
     9c0:	ldr	w7, [x6, #24]
     9c4:	sub	w5, w5, #0x2
     9c8:	ldr	w6, [x6, #32]
     9cc:	stp	xzr, xzr, [x28, #48]
     9d0:	lsl	w5, w5, w7
     9d4:	add	w5, w5, w6
     9d8:	add	x1, x5, x1, lsr #9
     9dc:	bl	0 <grub_disk_read>
     9e0:	str	xzr, [x28, #48]
     9e4:	ldr	x0, [x25]
     9e8:	ldr	w0, [x0]
     9ec:	cbz	w0, 8a4 <grub_mod_init-0xad4>
     9f0:	cmp	w23, w27
     9f4:	b.eq	a30 <grub_mod_init-0x948>  // b.none
     9f8:	ldr	x5, [x20, #48]
     9fc:	ldp	x25, x26, [sp, #64]
     a00:	sub	x5, x5, #0x20
     a04:	ldp	x27, x28, [sp, #80]
     a08:	b	748 <grub_mod_init-0xc30>
     a0c:	adrp	x0, 0 <grub_mod_init-0x1378>
     a10:	add	w27, w27, #0x1
     a14:	ldr	x3, [x21]
     a18:	mov	w1, #0x2bd                 	// #701
     a1c:	ldr	x0, [x0]
     a20:	ldr	x2, [x26]
     a24:	bl	0 <grub_real_dprintf>
     a28:	cmp	w23, w27
     a2c:	b.ne	990 <grub_mod_init-0x9e8>  // b.any
     a30:	lsl	w0, w24, #4
     a34:	mov	w6, #0x0                   	// #0
     a38:	sub	w5, w0, w24
     a3c:	cmp	w0, w24
     a40:	sub	x5, x5, #0x1
     a44:	ldp	x1, x4, [x20, #32]
     a48:	b.eq	ae8 <grub_mod_init-0x890>  // b.none
     a4c:	mov	w9, #0xffff2800            	// #-55296
     a50:	mov	w8, #0xffff2400            	// #-56320
     a54:	mov	w10, #0x3f                  	// #63
     a58:	mov	w11, #0x2400                	// #9216
     a5c:	b	ac0 <grub_mod_init-0x8b8>
     a60:	add	w3, w0, w8
     a64:	cmp	w3, #0x3ff
     a68:	b.hi	b60 <grub_mod_init-0x818>  // b.pmore
     a6c:	add	w3, w6, w9
     a70:	mov	x4, x2
     a74:	add	x1, x1, #0x4
     a78:	mov	w6, #0x0                   	// #0
     a7c:	add	w0, w0, w3, lsl #10
     a80:	add	w0, w0, w11
     a84:	and	w2, w0, #0x3f
     a88:	lsr	w7, w0, #18
     a8c:	ubfx	x3, x0, #12, #6
     a90:	ubfx	x0, x0, #6, #6
     a94:	orr	w7, w7, #0xfffffff0
     a98:	orr	w3, w3, #0xffffff80
     a9c:	orr	w0, w0, #0xffffff80
     aa0:	orr	w2, w2, #0xffffff80
     aa4:	sturb	w7, [x1, #-4]
     aa8:	sturb	w3, [x1, #-3]
     aac:	sturb	w0, [x1, #-2]
     ab0:	sturb	w2, [x1, #-1]
     ab4:	sub	x5, x5, #0x1
     ab8:	cmn	x5, #0x1
     abc:	b.eq	ae8 <grub_mod_init-0x890>  // b.none
     ac0:	mov	x2, x4
     ac4:	ldrh	w0, [x2], #2
     ac8:	cbnz	w6, a60 <grub_mod_init-0x918>
     acc:	cmp	w0, #0x7f
     ad0:	b.hi	b6c <grub_mod_init-0x80c>  // b.pmore
     ad4:	strb	w0, [x1], #1
     ad8:	sub	x5, x5, #0x1
     adc:	mov	x4, x2
     ae0:	cmn	x5, #0x1
     ae4:	b.ne	ac0 <grub_mod_init-0x8b8>  // b.any
     ae8:	ldp	x25, x26, [sp, #64]
     aec:	ldp	x27, x28, [sp, #80]
     af0:	strb	wzr, [x1]
     af4:	mov	w0, #0x0                   	// #0
     af8:	ldp	x19, x20, [sp, #16]
     afc:	ldp	x21, x22, [sp, #32]
     b00:	ldp	x23, x24, [sp, #48]
     b04:	ldp	x29, x30, [sp], #160
     b08:	ret
     b0c:	ldrb	w0, [sp, #129]
     b10:	ldr	x1, [sp, #136]
     b14:	str	x1, [x20, #16]
     b18:	ldr	w2, [sp, #148]
     b1c:	ubfx	x0, x0, #1, #1
     b20:	ldr	x1, [sp, #152]
     b24:	str	w2, [x20, #4]
     b28:	str	x1, [x20, #8]
     b2c:	stp	w22, w0, [x20, #24]
     b30:	b	984 <grub_mod_init-0x9f4>
     b34:	adrp	x0, 0 <grub_mod_init-0x1378>
     b38:	mov	w1, #0x2c                  	// #44
     b3c:	ldp	x19, x20, [sp, #16]
     b40:	ldr	x0, [x0]
     b44:	ldp	x21, x22, [sp, #32]
     b48:	ldr	w0, [x0]
     b4c:	ldp	x23, x24, [sp, #48]
     b50:	cmp	w0, #0x0
     b54:	csel	w0, w0, w1, ne  // ne = any
     b58:	ldp	x29, x30, [sp], #160
     b5c:	ret
     b60:	mov	w6, #0x0                   	// #0
     b64:	strb	w10, [x1], #1
     b68:	b	ab4 <grub_mod_init-0x8c4>
     b6c:	cmp	w0, #0x7ff
     b70:	b.hi	b9c <grub_mod_init-0x7dc>  // b.pmore
     b74:	mov	x3, x1
     b78:	lsr	w7, w0, #6
     b7c:	orr	w7, w7, #0xffffffc0
     b80:	and	w0, w0, #0x3f
     b84:	orr	w0, w0, #0xffffff80
     b88:	mov	x4, x2
     b8c:	strb	w7, [x3], #2
     b90:	strb	w0, [x1, #1]
     b94:	mov	x1, x3
     b98:	b	ab4 <grub_mod_init-0x8c4>
     b9c:	add	w3, w0, w9
     ba0:	cmp	w3, #0x3ff
     ba4:	b.ls	bf0 <grub_mod_init-0x788>  // b.plast
     ba8:	add	w3, w0, w8
     bac:	cmp	w3, #0x3ff
     bb0:	b.hi	bc0 <grub_mod_init-0x7b8>  // b.pmore
     bb4:	mov	x4, x2
     bb8:	strb	w10, [x1], #1
     bbc:	b	ab4 <grub_mod_init-0x8c4>
     bc0:	lsr	w7, w0, #12
     bc4:	ubfx	x3, x0, #6, #6
     bc8:	and	w0, w0, #0x3f
     bcc:	mov	x4, x2
     bd0:	orr	w7, w7, #0xffffffe0
     bd4:	orr	w2, w3, #0xffffff80
     bd8:	orr	w0, w0, #0xffffff80
     bdc:	add	x1, x1, #0x3
     be0:	sturb	w7, [x1, #-3]
     be4:	sturb	w2, [x1, #-2]
     be8:	sturb	w0, [x1, #-1]
     bec:	b	ab4 <grub_mod_init-0x8c4>
     bf0:	mov	w6, w0
     bf4:	mov	x4, x2
     bf8:	b	ab4 <grub_mod_init-0x8c4>
     bfc:	ldr	x1, [x20, #32]
     c00:	b	af0 <grub_mod_init-0x888>
     c04:	nop
	...
     c30:	stp	x29, x30, [sp, #-128]!
     c34:	mov	x29, sp
     c38:	stp	x21, x22, [sp, #32]
     c3c:	mov	x21, x1
     c40:	mov	x1, #0xffffffffffffffe0    	// #-32
     c44:	mov	x22, x2
     c48:	stp	x19, x20, [sp, #16]
     c4c:	mov	x20, x0
     c50:	mov	x0, #0x1e00                	// #7680
     c54:	str	x23, [sp, #48]
     c58:	mov	x23, x3
     c5c:	str	x1, [sp, #120]
     c60:	bl	0 <grub_malloc>
     c64:	mov	x1, x0
     c68:	mov	x0, #0x3c01                	// #15361
     c6c:	str	x1, [sp, #112]
     c70:	bl	0 <grub_malloc>
     c74:	str	x0, [sp, #104]
     c78:	cbz	x0, dc0 <grub_mod_init-0x5b8>
     c7c:	ldr	x1, [sp, #112]
     c80:	cbz	x1, dc0 <grub_mod_init-0x5b8>
     c84:	nop
     c88:	add	x1, sp, #0x48
     c8c:	mov	x0, x20
     c90:	bl	710 <grub_mod_init-0xc68>
     c94:	mov	w19, w0
     c98:	cbnz	w0, d90 <grub_mod_init-0x5e8>
     c9c:	ldr	w0, [sp, #96]
     ca0:	cbz	w0, c88 <grub_mod_init-0x6f0>
     ca4:	ldrb	w5, [x21]
     ca8:	mov	x3, x21
     cac:	ldr	x0, [sp, #104]
     cb0:	cbnz	w5, cc0 <grub_mod_init-0x6b8>
     cb4:	b	d80 <grub_mod_init-0x5f8>
     cb8:	ldrb	w5, [x3, #1]!
     cbc:	cbz	w5, d80 <grub_mod_init-0x5f8>
     cc0:	ldrb	w4, [x0]
     cc4:	sub	w7, w5, #0x41
     cc8:	cmp	w7, #0x1a
     ccc:	add	w1, w5, #0x20
     cd0:	sub	w2, w4, #0x41
     cd4:	csel	w8, w1, w5, cc  // cc = lo, ul, last
     cd8:	add	x0, x0, #0x1
     cdc:	add	w6, w4, #0x20
     ce0:	cmp	w2, #0x1a
     ce4:	cbz	w4, c88 <grub_mod_init-0x6f0>
     ce8:	csel	w6, w6, w4, cc  // cc = lo, ul, last
     cec:	cmp	w6, w8
     cf0:	b.eq	cb8 <grub_mod_init-0x6c0>  // b.none
     cf4:	cmp	w7, #0x1a
     cf8:	csel	w5, w1, w5, cc  // cc = lo, ul, last
     cfc:	cmp	w2, #0x1a
     d00:	add	w0, w4, #0x20
     d04:	csel	w4, w0, w4, cc  // cc = lo, ul, last
     d08:	cmp	w5, w4
     d0c:	b.ne	c88 <grub_mod_init-0x6f0>  // b.any
     d10:	mov	x0, #0x30                  	// #48
     d14:	bl	0 <grub_malloc>
     d18:	str	x0, [x22]
     d1c:	cbz	x0, df4 <grub_mod_init-0x584>
     d20:	ldrb	w1, [sp, #72]
     d24:	mov	w3, #0xffffffff            	// #-1
     d28:	strb	w1, [x0, #16]
     d2c:	ldr	x2, [sp, #80]
     d30:	str	x2, [x0, #24]
     d34:	ldr	w4, [sp, #76]
     d38:	ubfx	x1, x1, #4, #1
     d3c:	ldr	w2, [sp, #100]
     d40:	add	w1, w1, #0x1
     d44:	stp	w4, w3, [x0, #32]
     d48:	str	w2, [x0, #44]
     d4c:	ldp	x3, x2, [x20]
     d50:	stp	x3, x2, [x0]
     d54:	ldr	x0, [sp, #104]
     d58:	str	w1, [x23]
     d5c:	bl	0 <grub_free>
     d60:	ldr	x0, [sp, #112]
     d64:	bl	0 <grub_free>
     d68:	mov	w0, w19
     d6c:	ldp	x19, x20, [sp, #16]
     d70:	ldp	x21, x22, [sp, #32]
     d74:	ldr	x23, [sp, #48]
     d78:	ldp	x29, x30, [sp], #128
     d7c:	ret
     d80:	ldrb	w4, [x0]
     d84:	mov	w5, #0x0                   	// #0
     d88:	sub	w2, w4, #0x41
     d8c:	b	cfc <grub_mod_init-0x67c>
     d90:	ldr	x0, [sp, #104]
     d94:	bl	0 <grub_free>
     d98:	ldr	x0, [sp, #112]
     d9c:	bl	0 <grub_free>
     da0:	cmp	w19, #0x2c
     da4:	csel	w19, w19, wzr, ne  // ne = any
     da8:	mov	w0, w19
     dac:	ldp	x19, x20, [sp, #16]
     db0:	ldp	x21, x22, [sp, #32]
     db4:	ldr	x23, [sp, #48]
     db8:	ldp	x29, x30, [sp], #128
     dbc:	ret
     dc0:	bl	0 <grub_free>
     dc4:	ldr	x0, [sp, #112]
     dc8:	bl	0 <grub_free>
     dcc:	adrp	x0, 0 <grub_mod_init-0x1378>
     dd0:	ldr	x0, [x0]
     dd4:	ldr	w19, [x0]
     dd8:	cbz	w19, c88 <grub_mod_init-0x6f0>
     ddc:	mov	w0, w19
     de0:	ldp	x19, x20, [sp, #16]
     de4:	ldp	x21, x22, [sp, #32]
     de8:	ldr	x23, [sp, #48]
     dec:	ldp	x29, x30, [sp], #128
     df0:	ret
     df4:	adrp	x0, 0 <grub_mod_init-0x1378>
     df8:	ldr	x0, [x0]
     dfc:	ldr	w19, [x0]
     e00:	b	da8 <grub_mod_init-0x5d0>
     e04:	nop
	...
     e10:	stp	x29, x30, [sp, #-208]!
     e14:	adrp	x4, 0 <grub_mod_init-0x1378>
     e18:	mov	x29, sp
     e1c:	stp	x21, x22, [sp, #32]
     e20:	mov	x21, x2
     e24:	ldr	x22, [x4]
     e28:	str	x25, [sp, #64]
     e2c:	ldr	x25, [x0]
     e30:	stp	x19, x20, [sp, #16]
     e34:	mov	x20, x3
     e38:	ldr	x0, [x22]
     e3c:	stp	x23, x24, [sp, #48]
     e40:	mov	x24, x1
     e44:	str	xzr, [sp, #80]
     e48:	bl	0 <grub_dl_ref>
     e4c:	mov	x0, x25
     e50:	bl	58 <grub_mod_init-0x1320>
     e54:	mov	x19, x0
     e58:	cbz	x0, f98 <grub_mod_init-0x3e0>
     e5c:	adrp	x1, 0 <grub_mod_init-0x1378>
     e60:	ldr	w7, [x19, #20]
     e64:	mov	w8, #0x10                  	// #16
     e68:	mov	w6, #0xffffffff            	// #-1
     e6c:	ldr	x3, [x1]
     e70:	add	x23, sp, #0x68
     e74:	mov	x0, x24
     e78:	mov	x1, x23
     e7c:	add	x2, sp, #0x50
     e80:	mov	w5, #0x2                   	// #2
     e84:	mov	x4, #0x0                   	// #0
     e88:	stp	x25, x19, [sp, #104]
     e8c:	strb	w8, [sp, #120]
     e90:	str	xzr, [sp, #128]
     e94:	stp	w7, w6, [sp, #136]
     e98:	str	xzr, [sp, #144]
     e9c:	bl	0 <grub_fshelp_find_file_lookup>
     ea0:	cbz	w0, ee8 <grub_mod_init-0x490>
     ea4:	adrp	x0, 0 <grub_mod_init-0x1378>
     ea8:	ldr	x25, [x0]
     eac:	ldr	x0, [sp, #80]
     eb0:	cmp	x0, x23
     eb4:	b.eq	ebc <grub_mod_init-0x4bc>  // b.none
     eb8:	bl	0 <grub_free>
     ebc:	mov	x0, x19
     ec0:	bl	0 <grub_free>
     ec4:	ldr	x0, [x22]
     ec8:	bl	0 <grub_dl_unref>
     ecc:	ldr	w0, [x25]
     ed0:	ldp	x19, x20, [sp, #16]
     ed4:	ldp	x21, x22, [sp, #32]
     ed8:	ldp	x23, x24, [sp, #48]
     edc:	ldr	x25, [sp, #64]
     ee0:	ldp	x29, x30, [sp], #208
     ee4:	ret
     ee8:	mov	x1, #0xffffffffffffffe0    	// #-32
     eec:	mov	x0, #0x1e00                	// #7680
     ef0:	str	x1, [sp, #200]
     ef4:	bl	0 <grub_malloc>
     ef8:	mov	x1, x0
     efc:	mov	x0, #0x3c01                	// #15361
     f00:	str	x1, [sp, #192]
     f04:	bl	0 <grub_malloc>
     f08:	str	x0, [sp, #184]
     f0c:	cbz	x0, fa8 <grub_mod_init-0x3d0>
     f10:	ldr	x1, [sp, #192]
     f14:	cbz	x1, fa8 <grub_mod_init-0x3d0>
     f18:	adrp	x0, 0 <grub_mod_init-0x1378>
     f1c:	ldr	x25, [x0]
     f20:	mov	w24, #0xfffffffa            	// #-6
     f24:	nop
     f28:	ldr	x0, [sp, #80]
     f2c:	add	x1, sp, #0x98
     f30:	bl	710 <grub_mod_init-0xc68>
     f34:	mov	w3, w0
     f38:	mov	x2, #0x10                  	// #16
     f3c:	add	x0, sp, #0x58
     f40:	mov	w1, #0x0                   	// #0
     f44:	cbnz	w3, f84 <grub_mod_init-0x3f4>
     f48:	bl	0 <grub_memset>
     f4c:	ldr	w4, [sp, #152]
     f50:	mov	x2, x20
     f54:	ldrb	w0, [sp, #88]
     f58:	add	x1, sp, #0x58
     f5c:	ldr	w3, [sp, #176]
     f60:	ubfx	x4, x4, #4, #1
     f64:	and	w0, w0, w24
     f68:	orr	w4, w4, #0x4
     f6c:	orr	w4, w4, w0
     f70:	strb	w4, [sp, #88]
     f74:	cbz	w3, f28 <grub_mod_init-0x450>
     f78:	ldr	x0, [sp, #184]
     f7c:	blr	x21
     f80:	cbz	w0, f28 <grub_mod_init-0x450>
     f84:	ldr	x0, [sp, #184]
     f88:	bl	0 <grub_free>
     f8c:	ldr	x0, [sp, #192]
     f90:	bl	0 <grub_free>
     f94:	b	eac <grub_mod_init-0x4cc>
     f98:	adrp	x0, 0 <grub_mod_init-0x1378>
     f9c:	add	x23, sp, #0x68
     fa0:	ldr	x25, [x0]
     fa4:	b	eac <grub_mod_init-0x4cc>
     fa8:	bl	0 <grub_free>
     fac:	ldr	x0, [sp, #192]
     fb0:	bl	0 <grub_free>
     fb4:	adrp	x0, 0 <grub_mod_init-0x1378>
     fb8:	ldr	x25, [x0]
     fbc:	ldr	w0, [x25]
     fc0:	cbnz	w0, eac <grub_mod_init-0x4cc>
     fc4:	b	f20 <grub_mod_init-0x458>
	...
     fe0:	stp	x29, x30, [sp, #-176]!
     fe4:	mov	w2, #0x10                  	// #16
     fe8:	mov	x29, sp
     fec:	stp	x19, x20, [sp, #16]
     ff0:	ldr	x20, [x0]
     ff4:	stp	x21, x22, [sp, #32]
     ff8:	mov	x22, x1
     ffc:	mov	w1, #0xffffffff            	// #-1
    1000:	stp	xzr, xzr, [sp, #136]
    1004:	mov	x0, x20
    1008:	stp	xzr, xzr, [sp, #152]
    100c:	str	x20, [sp, #128]
    1010:	strb	w2, [sp, #144]
    1014:	str	w1, [sp, #164]
    1018:	str	xzr, [sp, #168]
    101c:	bl	58 <grub_mod_init-0x1320>
    1020:	str	x0, [sp, #136]
    1024:	cbz	x0, 1348 <grub_mod_init-0x30>
    1028:	ldr	w0, [x0, #20]
    102c:	adrp	x1, 0 <grub_mod_init-0x1378>
    1030:	str	w0, [sp, #160]
    1034:	mov	x19, #0x0                   	// #0
    1038:	ldr	w0, [sp, #172]
    103c:	str	x23, [sp, #48]
    1040:	mov	w23, #0xffff2800            	// #-55296
    1044:	str	xzr, [x22]
    1048:	ldr	x21, [x1]
    104c:	cbnz	w0, 1094 <grub_mod_init-0x2e4>
    1050:	add	x6, sp, #0x60
    1054:	mov	x4, x19
    1058:	add	x1, sp, #0x80
    105c:	mov	x0, x20
    1060:	mov	x5, #0x20                  	// #32
    1064:	mov	x3, #0x0                   	// #0
    1068:	mov	x2, #0x0                   	// #0
    106c:	bl	3c0 <grub_mod_init-0xfb8>
    1070:	cmp	x0, #0x20
    1074:	b.ne	10d8 <grub_mod_init-0x2a0>  // b.any
    1078:	ldrb	w0, [sp, #96]
    107c:	cbz	w0, 10d8 <grub_mod_init-0x2a0>
    1080:	cmp	w0, #0x83
    1084:	b.eq	10f8 <grub_mod_init-0x280>  // b.none
    1088:	add	x19, x19, #0x20
    108c:	ldr	w0, [sp, #172]
    1090:	cbz	w0, 1050 <grub_mod_init-0x328>
    1094:	ldr	x5, [sp, #136]
    1098:	add	x4, sp, #0x60
    109c:	ldr	w1, [sp, #160]
    10a0:	and	x2, x19, #0x1ff
    10a4:	mov	x0, x20
    10a8:	mov	x3, #0x20                  	// #32
    10ac:	ldr	w6, [x5, #24]
    10b0:	sub	w1, w1, #0x2
    10b4:	ldr	w5, [x5, #32]
    10b8:	stp	xzr, xzr, [x20, #48]
    10bc:	lsl	w1, w1, w6
    10c0:	add	w1, w1, w5
    10c4:	add	x1, x1, x19, lsr #9
    10c8:	bl	0 <grub_disk_read>
    10cc:	ldr	w0, [x21]
    10d0:	str	xzr, [x20, #48]
    10d4:	cbz	w0, 1078 <grub_mod_init-0x300>
    10d8:	ldr	x0, [sp, #136]
    10dc:	bl	0 <grub_free>
    10e0:	ldr	w0, [x21]
    10e4:	ldp	x19, x20, [sp, #16]
    10e8:	ldp	x21, x22, [sp, #32]
    10ec:	ldr	x23, [sp, #48]
    10f0:	ldp	x29, x30, [sp], #176
    10f4:	ret
    10f8:	mov	x0, #0x3d                  	// #61
    10fc:	bl	0 <grub_malloc>
    1100:	str	x0, [x22]
    1104:	cbz	x0, 10d8 <grub_mod_init-0x2a0>
    1108:	ldrb	w1, [sp, #97]
    110c:	mov	x2, #0xf                   	// #15
    1110:	and	x4, x1, #0xff
    1114:	cmp	x4, x2
    1118:	csel	x4, x4, x2, ls  // ls = plast
    111c:	cbz	w1, 12ac <grub_mod_init-0xcc>
    1120:	ldrh	w2, [sp, #98]
    1124:	cmp	w1, #0x1
    1128:	strh	w2, [sp, #64]
    112c:	b.ls	1208 <grub_mod_init-0x170>  // b.plast
    1130:	ldrh	w2, [sp, #100]
    1134:	cmp	w1, #0x2
    1138:	strh	w2, [sp, #66]
    113c:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    1140:	ldrh	w2, [sp, #102]
    1144:	cmp	w1, #0x3
    1148:	strh	w2, [sp, #68]
    114c:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    1150:	ldrh	w2, [sp, #104]
    1154:	cmp	w1, #0x4
    1158:	strh	w2, [sp, #70]
    115c:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    1160:	ldrh	w2, [sp, #106]
    1164:	cmp	w1, #0x5
    1168:	strh	w2, [sp, #72]
    116c:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    1170:	ldrh	w2, [sp, #108]
    1174:	cmp	w1, #0x6
    1178:	strh	w2, [sp, #74]
    117c:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    1180:	ldrh	w2, [sp, #110]
    1184:	cmp	w1, #0x7
    1188:	strh	w2, [sp, #76]
    118c:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    1190:	ldrh	w2, [sp, #112]
    1194:	cmp	w1, #0x8
    1198:	strh	w2, [sp, #78]
    119c:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    11a0:	ldrh	w2, [sp, #114]
    11a4:	cmp	w1, #0x9
    11a8:	strh	w2, [sp, #80]
    11ac:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    11b0:	ldrh	w2, [sp, #116]
    11b4:	cmp	w1, #0xa
    11b8:	strh	w2, [sp, #82]
    11bc:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    11c0:	ldrh	w2, [sp, #118]
    11c4:	cmp	w1, #0xb
    11c8:	strh	w2, [sp, #84]
    11cc:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    11d0:	ldrh	w2, [sp, #120]
    11d4:	cmp	w1, #0xc
    11d8:	strh	w2, [sp, #86]
    11dc:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    11e0:	ldrh	w2, [sp, #122]
    11e4:	cmp	w1, #0xd
    11e8:	strh	w2, [sp, #88]
    11ec:	b.eq	1208 <grub_mod_init-0x170>  // b.none
    11f0:	ldrh	w2, [sp, #124]
    11f4:	cmp	w1, #0xe
    11f8:	strh	w2, [sp, #90]
    11fc:	b.ls	1208 <grub_mod_init-0x170>  // b.plast
    1200:	ldrh	w1, [sp, #126]
    1204:	strh	w1, [sp, #92]
    1208:	sub	x4, x4, #0x1
    120c:	add	x6, sp, #0x40
    1210:	mov	w5, #0x0                   	// #0
    1214:	mov	w7, #0xffff2400            	// #-56320
    1218:	mov	w8, #0x3f                  	// #63
    121c:	mov	w9, #0x2400                	// #9216
    1220:	b	1284 <grub_mod_init-0xf4>
    1224:	add	w3, w1, w7
    1228:	cmp	w3, #0x3ff
    122c:	b.hi	12b8 <grub_mod_init-0xc0>  // b.pmore
    1230:	add	w3, w5, w23
    1234:	mov	x6, x2
    1238:	add	x0, x0, #0x4
    123c:	mov	w5, #0x0                   	// #0
    1240:	add	w1, w1, w3, lsl #10
    1244:	add	w1, w1, w9
    1248:	and	w2, w1, #0x3f
    124c:	lsr	w10, w1, #18
    1250:	ubfx	x3, x1, #12, #6
    1254:	ubfx	x1, x1, #6, #6
    1258:	orr	w10, w10, #0xfffffff0
    125c:	orr	w3, w3, #0xffffff80
    1260:	orr	w1, w1, #0xffffff80
    1264:	orr	w2, w2, #0xffffff80
    1268:	sturb	w10, [x0, #-4]
    126c:	sturb	w3, [x0, #-3]
    1270:	sturb	w1, [x0, #-2]
    1274:	sturb	w2, [x0, #-1]
    1278:	sub	x4, x4, #0x1
    127c:	cmn	x4, #0x1
    1280:	b.eq	12ac <grub_mod_init-0xcc>  // b.none
    1284:	mov	x2, x6
    1288:	ldrh	w1, [x2], #2
    128c:	cbnz	w5, 1224 <grub_mod_init-0x154>
    1290:	cmp	w1, #0x7f
    1294:	b.hi	12c4 <grub_mod_init-0xb4>  // b.pmore
    1298:	strb	w1, [x0], #1
    129c:	sub	x4, x4, #0x1
    12a0:	mov	x6, x2
    12a4:	cmn	x4, #0x1
    12a8:	b.ne	1284 <grub_mod_init-0xf4>  // b.any
    12ac:	add	x19, x19, #0x20
    12b0:	strb	wzr, [x0]
    12b4:	b	108c <grub_mod_init-0x2ec>
    12b8:	mov	w5, #0x0                   	// #0
    12bc:	strb	w8, [x0], #1
    12c0:	b	1278 <grub_mod_init-0x100>
    12c4:	cmp	w1, #0x7ff
    12c8:	b.hi	12f4 <grub_mod_init-0x84>  // b.pmore
    12cc:	mov	x3, x0
    12d0:	lsr	w10, w1, #6
    12d4:	orr	w10, w10, #0xffffffc0
    12d8:	and	w1, w1, #0x3f
    12dc:	orr	w1, w1, #0xffffff80
    12e0:	mov	x6, x2
    12e4:	strb	w10, [x3], #2
    12e8:	strb	w1, [x0, #1]
    12ec:	mov	x0, x3
    12f0:	b	1278 <grub_mod_init-0x100>
    12f4:	add	w3, w1, w23
    12f8:	cmp	w3, #0x3ff
    12fc:	b.ls	1364 <grub_mod_init-0x14>  // b.plast
    1300:	add	w3, w1, w7
    1304:	cmp	w3, #0x3ff
    1308:	b.hi	1318 <grub_mod_init-0x60>  // b.pmore
    130c:	mov	x6, x2
    1310:	strb	w8, [x0], #1
    1314:	b	1278 <grub_mod_init-0x100>
    1318:	lsr	w10, w1, #12
    131c:	ubfx	x3, x1, #6, #6
    1320:	and	w1, w1, #0x3f
    1324:	mov	x6, x2
    1328:	orr	w10, w10, #0xffffffe0
    132c:	orr	w2, w3, #0xffffff80
    1330:	orr	w1, w1, #0xffffff80
    1334:	add	x0, x0, #0x3
    1338:	sturb	w10, [x0, #-3]
    133c:	sturb	w2, [x0, #-2]
    1340:	sturb	w1, [x0, #-1]
    1344:	b	1278 <grub_mod_init-0x100>
    1348:	adrp	x0, 0 <grub_mod_init-0x1378>
    134c:	ldp	x19, x20, [sp, #16]
    1350:	ldr	x0, [x0]
    1354:	ldp	x21, x22, [sp, #32]
    1358:	ldr	w0, [x0]
    135c:	ldp	x29, x30, [sp], #176
    1360:	ret
    1364:	mov	w5, w1
    1368:	mov	x6, x2
    136c:	b	1278 <grub_mod_init-0x100>
	...

0000000000001378 <grub_mod_init>:
    1378:	stp	x29, x30, [sp, #-32]!
    137c:	adrp	x2, 0 <grub_mod_init-0x1378>
    1380:	adrp	x1, 0 <grub_mod_init-0x1378>
    1384:	mov	x29, sp
    1388:	ldr	x1, [x1]
    138c:	str	x19, [sp, #16]
    1390:	mov	x19, x0
    1394:	ldr	x0, [x2]
    1398:	bl	0 <grub_list_push>
    139c:	adrp	x0, 0 <grub_mod_init-0x1378>
    13a0:	ldr	x0, [x0]
    13a4:	str	x19, [x0]
    13a8:	ldr	x19, [sp, #16]
    13ac:	ldp	x29, x30, [sp], #32
    13b0:	ret
    13b4:	nop
	...

00000000000013d0 <grub_mod_fini>:
    13d0:	adrp	x0, 0 <grub_mod_init-0x1378>
    13d4:	ldr	x0, [x0]
    13d8:	b	0 <grub_list_remove>
    13dc:	nop
	...
