
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//affs.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_affs_close>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x0, [x0, #80]
      14:	ldr	x0, [x0, #240]
      18:	bl	0 <grub_free>
      1c:	ldr	x0, [x19, #80]
      20:	bl	0 <grub_free>
      24:	adrp	x0, 0 <grub_affs_close>
      28:	ldr	x0, [x0]
      2c:	ldr	x0, [x0]
      30:	bl	0 <grub_dl_unref>
      34:	mov	w0, #0x0                   	// #0
      38:	ldr	x19, [sp, #16]
      3c:	ldp	x29, x30, [sp], #32
      40:	ret
      44:	nop
	...

0000000000000050 <grub_affs_mount>:
      50:	stp	x29, x30, [sp, #-96]!
      54:	mov	x29, sp
      58:	stp	x21, x22, [sp, #32]
      5c:	mov	x22, x0
      60:	mov	x0, #0x110                 	// #272
      64:	stp	x27, x28, [sp, #80]
      68:	bl	0 <grub_zalloc>
      6c:	mov	x28, x0
      70:	cbz	x0, 120 <grub_affs_mount+0xd0>
      74:	adrp	x0, 0 <grub_affs_close>
      78:	stp	x23, x24, [sp, #48]
      7c:	mov	x21, #0x0                   	// #0
      80:	ldr	x23, [x0]
      84:	mov	x24, #0x0                   	// #0
      88:	mov	w27, #0x1000000             	// #16777216
      8c:	stp	x19, x20, [sp, #16]
      90:	stp	x25, x26, [sp, #64]
      94:	mov	w25, #0x2000000             	// #33554432
      98:	mov	x1, x24
      9c:	mov	x4, x28
      a0:	mov	x0, x22
      a4:	mov	x3, #0xc                   	// #12
      a8:	mov	x2, #0x0                   	// #0
      ac:	bl	0 <grub_disk_read>
      b0:	ldr	w1, [x23]
      b4:	cbnz	w1, e4 <grub_affs_mount+0x94>
      b8:	adrp	x1, 0 <grub_affs_close>
      bc:	mov	x0, x28
      c0:	mov	x2, #0x3                   	// #3
      c4:	ldr	x1, [x1]
      c8:	bl	0 <grub_strncmp>
      cc:	mov	w19, w0
      d0:	cbnz	w0, dc <grub_affs_mount+0x8c>
      d4:	ldrb	w0, [x28, #3]
      d8:	tbnz	w0, #0, 13c <grub_affs_mount+0xec>
      dc:	cbz	x24, 134 <grub_affs_mount+0xe4>
      e0:	ldr	w1, [x23]
      e4:	cmp	w1, #0x0
      e8:	ccmp	w1, #0xb, #0x4, ne  // ne = any
      ec:	b.ne	100 <grub_affs_mount+0xb0>  // b.any
      f0:	adrp	x1, 0 <grub_affs_close>
      f4:	mov	w0, #0x9                   	// #9
      f8:	ldr	x1, [x1]
      fc:	bl	0 <grub_error>
     100:	mov	x0, x28
     104:	mov	x28, #0x0                   	// #0
     108:	bl	0 <grub_free>
     10c:	mov	x0, x21
     110:	bl	0 <grub_free>
     114:	ldp	x19, x20, [sp, #16]
     118:	ldp	x23, x24, [sp, #48]
     11c:	ldp	x25, x26, [sp, #64]
     120:	mov	x0, x28
     124:	ldp	x21, x22, [sp, #32]
     128:	ldp	x27, x28, [sp, #80]
     12c:	ldp	x29, x30, [sp], #96
     130:	ret
     134:	mov	x24, #0x1                   	// #1
     138:	b	98 <grub_affs_mount+0x48>
     13c:	cbz	x21, 1b8 <grub_affs_mount+0x168>
     140:	mov	w26, #0x200                 	// #512
     144:	ldr	w1, [x28, #8]
     148:	lsl	w20, w26, w19
     14c:	sxtw	x20, w20
     150:	mov	x4, x21
     154:	rev	w1, w1
     158:	mov	x3, x20
     15c:	mov	x0, x22
     160:	mov	x2, #0x0                   	// #0
     164:	lsl	x1, x1, x19
     168:	bl	0 <grub_disk_read>
     16c:	ldr	w1, [x23]
     170:	cmp	w1, #0xb
     174:	b.eq	238 <grub_affs_mount+0x1e8>  // b.none
     178:	cbnz	w1, 100 <grub_affs_mount+0xb0>
     17c:	ldr	w1, [x21]
     180:	cmp	w1, w25
     184:	b.ne	1a4 <grub_affs_mount+0x154>  // b.any
     188:	ldr	w4, [x21, #12]
     18c:	cbz	w4, 1a4 <grub_affs_mount+0x154>
     190:	and	x0, x20, #0xfffffffffffffffc
     194:	add	x0, x21, x0
     198:	ldur	w0, [x0, #-4]
     19c:	cmp	w0, w27
     1a0:	b.eq	1cc <grub_affs_mount+0x17c>  // b.none
     1a4:	add	w19, w19, #0x1
     1a8:	cmp	w19, #0x5
     1ac:	b.ne	144 <grub_affs_mount+0xf4>  // b.any
     1b0:	cbnz	x24, e0 <grub_affs_mount+0x90>
     1b4:	b	134 <grub_affs_mount+0xe4>
     1b8:	mov	x0, #0x2000                	// #8192
     1bc:	bl	0 <grub_malloc>
     1c0:	mov	x21, x0
     1c4:	cbnz	x0, 140 <grub_affs_mount+0xf0>
     1c8:	b	e0 <grub_affs_mount+0x90>
     1cc:	lsr	x20, x20, #2
     1d0:	mov	w1, #0x1                   	// #1
     1d4:	mov	w0, #0x2                   	// #2
     1d8:	mov	x3, #0x1                   	// #1
     1dc:	nop
     1e0:	ldr	w2, [x21, x3, lsl #2]
     1e4:	add	w3, w1, #0x1
     1e8:	mov	x1, x3
     1ec:	rev	w2, w2
     1f0:	cmp	x20, w3, uxtw
     1f4:	add	w0, w0, w2
     1f8:	b.hi	1e0 <grub_affs_mount+0x190>  // b.pmore
     1fc:	cbnz	w0, 1a4 <grub_affs_mount+0x154>
     200:	ldr	w0, [x28, #8]
     204:	rev	w4, w4
     208:	str	x28, [x28, #16]
     20c:	mov	x1, x21
     210:	rev	w0, w0
     214:	str	w0, [x28, #24]
     218:	str	xzr, [x28, #32]
     21c:	add	x0, x28, #0x28
     220:	str	x22, [x28, #256]
     224:	mov	x2, #0xc8                  	// #200
     228:	str	w19, [x28, #264]
     22c:	str	w4, [x28, #268]
     230:	bl	0 <grub_memmove>
     234:	b	10c <grub_affs_mount+0xbc>
     238:	str	wzr, [x23]
     23c:	cbnz	x24, e0 <grub_affs_mount+0x90>
     240:	b	134 <grub_affs_mount+0xe4>
     244:	nop
	...

0000000000000260 <grub_affs_mtime>:
     260:	stp	x29, x30, [sp, #-80]!
     264:	adrp	x2, 0 <grub_affs_close>
     268:	mov	x29, sp
     26c:	stp	x21, x22, [sp, #32]
     270:	ldr	x21, [x2]
     274:	stp	x19, x20, [sp, #16]
     278:	mov	x20, x1
     27c:	ldr	x19, [x0]
     280:	str	wzr, [x1]
     284:	ldr	x0, [x21]
     288:	bl	0 <grub_dl_ref>
     28c:	mov	x0, x19
     290:	bl	50 <grub_affs_mount>
     294:	cbz	x0, 380 <grub_affs_mtime+0x120>
     298:	ldr	w5, [x0, #8]
     29c:	mov	x19, x0
     2a0:	ldr	w1, [x0, #264]
     2a4:	add	x4, sp, #0x40
     2a8:	rev	w5, w5
     2ac:	mov	x3, #0xc                   	// #12
     2b0:	ldr	x0, [x0, #256]
     2b4:	add	x5, x5, #0x1
     2b8:	mov	x2, #0x1d8                 	// #472
     2bc:	str	x23, [sp, #48]
     2c0:	lsl	x1, x5, x1
     2c4:	sub	x1, x1, #0x1
     2c8:	bl	0 <grub_disk_read>
     2cc:	adrp	x0, 0 <grub_affs_close>
     2d0:	ldr	x23, [x0]
     2d4:	ldr	w22, [x23]
     2d8:	cbnz	w22, 354 <grub_affs_mtime+0xf4>
     2dc:	ldp	w1, w3, [sp, #64]
     2e0:	mov	w6, #0x851f                	// #34079
     2e4:	ldr	w2, [sp, #72]
     2e8:	movk	w6, #0x51eb, lsl #16
     2ec:	rev	w0, w3
     2f0:	rev	w1, w1
     2f4:	rev	w2, w2
     2f8:	mov	w5, #0x5180                	// #20864
     2fc:	lsl	w3, w0, #4
     300:	movk	w5, #0x1, lsl #16
     304:	sub	w3, w3, w0
     308:	mov	w4, #0x3f00                	// #16128
     30c:	umull	x2, w2, w6
     310:	movk	w4, #0xf0c, lsl #16
     314:	lsl	w3, w3, #2
     318:	ldr	x0, [x21]
     31c:	lsr	x2, x2, #36
     320:	madd	w1, w1, w5, w3
     324:	add	w2, w2, w4
     328:	add	w2, w1, w2
     32c:	str	w2, [x20]
     330:	bl	0 <grub_dl_unref>
     334:	mov	x0, x19
     338:	bl	0 <grub_free>
     33c:	mov	w0, w22
     340:	ldp	x19, x20, [sp, #16]
     344:	ldp	x21, x22, [sp, #32]
     348:	ldr	x23, [sp, #48]
     34c:	ldp	x29, x30, [sp], #80
     350:	ret
     354:	ldr	x0, [x21]
     358:	bl	0 <grub_dl_unref>
     35c:	mov	x0, x19
     360:	bl	0 <grub_free>
     364:	ldr	w22, [x23]
     368:	ldp	x19, x20, [sp, #16]
     36c:	mov	w0, w22
     370:	ldp	x21, x22, [sp, #32]
     374:	ldr	x23, [sp, #48]
     378:	ldp	x29, x30, [sp], #80
     37c:	ret
     380:	ldr	x0, [x21]
     384:	bl	0 <grub_dl_unref>
     388:	adrp	x0, 0 <grub_affs_close>
     38c:	ldp	x19, x20, [sp, #16]
     390:	ldr	x0, [x0]
     394:	ldr	w22, [x0]
     398:	mov	w0, w22
     39c:	ldp	x21, x22, [sp, #32]
     3a0:	ldp	x29, x30, [sp], #80
     3a4:	ret
	...

00000000000003b8 <grub_affs_label>:
     3b8:	stp	x29, x30, [sp, #-272]!
     3bc:	adrp	x2, 0 <grub_affs_close>
     3c0:	mov	x29, sp
     3c4:	stp	x19, x20, [sp, #16]
     3c8:	ldr	x20, [x2]
     3cc:	stp	x21, x22, [sp, #32]
     3d0:	mov	x21, x1
     3d4:	ldr	x19, [x0]
     3d8:	ldr	x0, [x20]
     3dc:	bl	0 <grub_dl_ref>
     3e0:	mov	x0, x19
     3e4:	bl	50 <grub_affs_mount>
     3e8:	mov	x19, x0
     3ec:	cbz	x0, 4dc <grub_affs_label+0x124>
     3f0:	ldr	w5, [x0, #8]
     3f4:	add	x4, sp, #0x48
     3f8:	ldr	w1, [x0, #264]
     3fc:	mov	x3, #0xc8                  	// #200
     400:	rev	w5, w5
     404:	mov	x2, #0x138                 	// #312
     408:	ldr	x0, [x0, #256]
     40c:	add	x5, x5, #0x1
     410:	lsl	x1, x5, x1
     414:	sub	x1, x1, #0x1
     418:	bl	0 <grub_disk_read>
     41c:	adrp	x0, 0 <grub_affs_close>
     420:	ldr	x22, [x0]
     424:	ldr	w0, [x22]
     428:	cbz	w0, 43c <grub_affs_label+0x84>
     42c:	ldp	x19, x20, [sp, #16]
     430:	ldp	x21, x22, [sp, #32]
     434:	ldp	x29, x30, [sp], #272
     438:	ret
     43c:	stp	x23, x24, [sp, #48]
     440:	mov	x23, #0x1e                  	// #30
     444:	ldrb	w24, [sp, #192]
     448:	and	x6, x24, #0xff
     44c:	cmp	x6, x23
     450:	csel	x23, x6, x23, ls  // ls = plast
     454:	lsl	x0, x23, #1
     458:	add	x0, x0, #0x1
     45c:	bl	0 <grub_malloc>
     460:	str	x0, [x21]
     464:	cbz	x0, 50c <grub_affs_label+0x154>
     468:	cbz	w24, 4d0 <grub_affs_label+0x118>
     46c:	add	x6, x23, #0x79
     470:	add	x2, sp, #0x48
     474:	add	x1, sp, #0xc1
     478:	add	x6, x2, x6
     47c:	b	494 <grub_affs_label+0xdc>
     480:	strb	w2, [x5], #1
     484:	add	x1, x1, #0x1
     488:	cmp	x6, x1
     48c:	mov	x0, x5
     490:	b.eq	4d0 <grub_affs_label+0x118>  // b.none
     494:	ldrb	w2, [x1]
     498:	mov	x4, x0
     49c:	mov	x5, x0
     4a0:	lsr	w3, w2, #6
     4a4:	orr	w3, w3, #0xffffffc0
     4a8:	tbz	w2, #7, 480 <grub_affs_label+0xc8>
     4ac:	strb	w3, [x4], #2
     4b0:	add	x1, x1, #0x1
     4b4:	ldurb	w2, [x1, #-1]
     4b8:	cmp	x6, x1
     4bc:	and	w2, w2, #0x3f
     4c0:	orr	w2, w2, #0xffffff80
     4c4:	strb	w2, [x0, #1]
     4c8:	mov	x0, x4
     4cc:	b.ne	494 <grub_affs_label+0xdc>  // b.any
     4d0:	strb	wzr, [x0]
     4d4:	ldp	x23, x24, [sp, #48]
     4d8:	b	4e8 <grub_affs_label+0x130>
     4dc:	adrp	x0, 0 <grub_affs_close>
     4e0:	str	xzr, [x21]
     4e4:	ldr	x22, [x0]
     4e8:	ldr	x0, [x20]
     4ec:	bl	0 <grub_dl_unref>
     4f0:	mov	x0, x19
     4f4:	bl	0 <grub_free>
     4f8:	ldr	w0, [x22]
     4fc:	ldp	x19, x20, [sp, #16]
     500:	ldp	x21, x22, [sp, #32]
     504:	ldp	x29, x30, [sp], #272
     508:	ret
     50c:	ldp	x23, x24, [sp, #48]
     510:	b	4e8 <grub_affs_label+0x130>
     514:	nop
	...

0000000000000528 <grub_affs_read_block>:
     528:	stp	x29, x30, [sp, #-304]!
     52c:	mov	x29, sp
     530:	stp	x25, x26, [sp, #64]
     534:	mov	x25, x0
     538:	ldr	x26, [x0]
     53c:	stp	x19, x20, [sp, #16]
     540:	mov	x20, x1
     544:	ldr	x6, [x0, #224]
     548:	stp	x21, x22, [sp, #32]
     54c:	ldr	w1, [x26, #264]
     550:	ldr	w21, [x26, #268]
     554:	cbz	x6, 65c <grub_affs_read_block+0x134>
     558:	stp	x23, x24, [sp, #48]
     55c:	str	x27, [sp, #80]
     560:	udiv	w22, w20, w21
     564:	ldr	w19, [x25, #232]
     568:	adrp	x0, 0 <grub_affs_close>
     56c:	add	w19, w19, #0x1
     570:	add	w23, w22, #0x1
     574:	cmp	w19, w23
     578:	b.cs	6a8 <grub_affs_read_block+0x180>  // b.hs, b.nlast
     57c:	ldr	x27, [x0]
     580:	ubfiz	x24, x19, #2, #32
     584:	b	5b0 <grub_affs_read_block+0x88>
     588:	ldr	x6, [x25, #224]
     58c:	ldr	w1, [sp, #296]
     590:	rev	w1, w1
     594:	str	w1, [x6, x24]
     598:	add	x24, x24, #0x4
     59c:	ldr	w1, [x26, #264]
     5a0:	str	w19, [x25, #232]
     5a4:	add	w19, w19, #0x1
     5a8:	cmp	w19, w23
     5ac:	b.cs	600 <grub_affs_read_block+0xd8>  // b.hs, b.nlast
     5b0:	sub	w2, w19, #0x1
     5b4:	add	x4, sp, #0x68
     5b8:	ldr	x0, [x26, #256]
     5bc:	mov	x3, #0xc8                  	// #200
     5c0:	ldr	w5, [x6, x2, lsl #2]
     5c4:	mov	x2, #0x138                 	// #312
     5c8:	add	x5, x5, #0x1
     5cc:	lsl	x1, x5, x1
     5d0:	sub	x1, x1, #0x1
     5d4:	bl	0 <grub_disk_read>
     5d8:	ldr	w0, [x27]
     5dc:	cbz	w0, 588 <grub_affs_read_block+0x60>
     5e0:	ldp	x23, x24, [sp, #48]
     5e4:	mov	x0, #0x0                   	// #0
     5e8:	ldr	x27, [sp, #80]
     5ec:	ldp	x19, x20, [sp, #16]
     5f0:	ldp	x21, x22, [sp, #32]
     5f4:	ldp	x25, x26, [sp, #64]
     5f8:	ldp	x29, x30, [sp], #304
     5fc:	ret
     600:	ldr	w2, [x26, #268]
     604:	msub	w20, w22, w21, w20
     608:	ldr	w5, [x6, w22, uxtw #2]
     60c:	ldr	x0, [x26, #256]
     610:	mov	x21, #0x5                   	// #5
     614:	sub	x20, x21, x20
     618:	add	x4, sp, #0x64
     61c:	add	x2, x20, w2, uxtw
     620:	mov	x3, #0x4                   	// #4
     624:	lsl	x1, x5, x1
     628:	lsl	x2, x2, #2
     62c:	bl	0 <grub_disk_read>
     630:	ldr	w0, [x27]
     634:	cbnz	w0, 5e0 <grub_affs_read_block+0xb8>
     638:	ldr	w0, [sp, #100]
     63c:	ldp	x19, x20, [sp, #16]
     640:	rev	w0, w0
     644:	ldp	x21, x22, [sp, #32]
     648:	ldp	x23, x24, [sp, #48]
     64c:	ldp	x25, x26, [sp, #64]
     650:	ldr	x27, [sp, #80]
     654:	ldp	x29, x30, [sp], #304
     658:	ret
     65c:	ldr	w0, [x0, #36]
     660:	add	w1, w1, #0x9
     664:	rev	w0, w0
     668:	lsr	w0, w0, w1
     66c:	udiv	w0, w0, w21
     670:	add	w0, w0, #0x2
     674:	lsl	x0, x0, #2
     678:	bl	0 <grub_malloc>
     67c:	str	x0, [x25, #224]
     680:	mov	x6, x0
     684:	cbz	x0, 6b4 <grub_affs_read_block+0x18c>
     688:	ldr	w0, [x25, #8]
     68c:	stp	x23, x24, [sp, #48]
     690:	str	x27, [sp, #80]
     694:	str	wzr, [x25, #232]
     698:	str	w0, [x6]
     69c:	ldr	w1, [x26, #264]
     6a0:	ldr	w21, [x26, #268]
     6a4:	b	560 <grub_affs_read_block+0x38>
     6a8:	ldr	x27, [x0]
     6ac:	mov	w2, w21
     6b0:	b	604 <grub_affs_read_block+0xdc>
     6b4:	mov	x0, #0xffffffffffffffff    	// #-1
     6b8:	b	5ec <grub_affs_read_block+0xc4>
     6bc:	nop
	...

00000000000006c8 <grub_affs_iterate_dir>:
     6c8:	stp	x29, x30, [sp, #-400]!
     6cc:	mov	x29, sp
     6d0:	stp	x19, x20, [sp, #16]
     6d4:	mov	x19, x0
     6d8:	mov	x0, #0xf0                  	// #240
     6dc:	stp	x21, x22, [sp, #32]
     6e0:	stp	x23, x24, [sp, #48]
     6e4:	mov	x23, x1
     6e8:	mov	x24, x2
     6ec:	ldr	x20, [x19]
     6f0:	bl	0 <grub_zalloc>
     6f4:	cbz	x0, 7f8 <grub_affs_iterate_dir+0x130>
     6f8:	mov	x1, x19
     6fc:	mov	x2, #0xf0                  	// #240
     700:	stp	x27, x28, [sp, #80]
     704:	mov	x28, x0
     708:	bl	0 <memcpy>
     70c:	adrp	x0, 0 <grub_affs_close>
     710:	mov	x3, x24
     714:	mov	x2, x28
     718:	mov	w1, #0x2                   	// #2
     71c:	ldr	x0, [x0]
     720:	blr	x23
     724:	mov	w22, w0
     728:	cbnz	w0, 7f4 <grub_affs_iterate_dir+0x12c>
     72c:	ldr	x0, [x19, #16]
     730:	cbz	x0, 76c <grub_affs_iterate_dir+0xa4>
     734:	mov	x0, #0xf0                  	// #240
     738:	bl	0 <grub_zalloc>
     73c:	mov	x28, x0
     740:	cbz	x0, 7f4 <grub_affs_iterate_dir+0x12c>
     744:	ldr	x1, [x19, #16]
     748:	mov	x2, #0xf0                  	// #240
     74c:	bl	0 <memcpy>
     750:	adrp	x0, 0 <grub_affs_close>
     754:	mov	x3, x24
     758:	mov	x2, x28
     75c:	mov	w1, #0x2                   	// #2
     760:	ldr	x0, [x0]
     764:	blr	x23
     768:	cbnz	w0, 7f4 <grub_affs_iterate_dir+0x12c>
     76c:	ldr	w0, [x20, #268]
     770:	lsl	x0, x0, #2
     774:	bl	0 <grub_zalloc>
     778:	str	x0, [sp, #120]
     77c:	mov	x4, x0
     780:	cbz	x0, 7f4 <grub_affs_iterate_dir+0x12c>
     784:	ldr	w6, [x19, #8]
     788:	mov	x2, #0x18                  	// #24
     78c:	ldr	x0, [x20, #256]
     790:	ldr	w1, [x20, #264]
     794:	ldr	w3, [x20, #268]
     798:	lsl	x1, x6, x1
     79c:	lsl	x3, x3, #2
     7a0:	bl	0 <grub_disk_read>
     7a4:	adrp	x0, 0 <grub_affs_close>
     7a8:	ldr	x0, [x0]
     7ac:	str	x0, [sp, #104]
     7b0:	ldr	w0, [x0]
     7b4:	str	w0, [sp, #116]
     7b8:	cbnz	w0, 818 <grub_affs_iterate_dir+0x150>
     7bc:	ldr	w1, [x20, #268]
     7c0:	cbz	w1, 820 <grub_affs_iterate_dir+0x158>
     7c4:	stp	x25, x26, [sp, #64]
     7c8:	ldr	w2, [sp, #116]
     7cc:	ldr	x0, [sp, #120]
     7d0:	ldr	w0, [x0, w2, uxtw #2]
     7d4:	cbnz	w0, 844 <grub_affs_iterate_dir+0x17c>
     7d8:	ldr	w0, [sp, #116]
     7dc:	add	w0, w0, #0x1
     7e0:	str	w0, [sp, #116]
     7e4:	cmp	w0, w1
     7e8:	b.cc	7c8 <grub_affs_iterate_dir+0x100>  // b.lo, b.ul, b.last
     7ec:	ldp	x25, x26, [sp, #64]
     7f0:	b	820 <grub_affs_iterate_dir+0x158>
     7f4:	ldp	x27, x28, [sp, #80]
     7f8:	mov	w22, #0x1                   	// #1
     7fc:	mov	w0, w22
     800:	ldp	x19, x20, [sp, #16]
     804:	ldp	x21, x22, [sp, #32]
     808:	ldp	x23, x24, [sp, #48]
     80c:	ldp	x29, x30, [sp], #400
     810:	ret
     814:	ldp	x25, x26, [sp, #64]
     818:	mov	x0, x28
     81c:	bl	0 <grub_free>
     820:	ldr	x0, [sp, #120]
     824:	bl	0 <grub_free>
     828:	mov	w0, w22
     82c:	ldp	x19, x20, [sp, #16]
     830:	ldp	x21, x22, [sp, #32]
     834:	ldp	x23, x24, [sp, #48]
     838:	ldp	x27, x28, [sp, #80]
     83c:	ldp	x29, x30, [sp], #400
     840:	ret
     844:	rev	w21, w0
     848:	cbz	w0, 7d8 <grub_affs_iterate_dir+0x110>
     84c:	nop
     850:	ldr	w6, [x20, #264]
     854:	mov	w1, w21
     858:	ldr	x0, [x20, #256]
     85c:	add	x1, x1, #0x1
     860:	add	x4, sp, #0xc8
     864:	mov	x3, #0xc8                  	// #200
     868:	lsl	x1, x1, x6
     86c:	mov	x2, #0x138                 	// #312
     870:	sub	x1, x1, #0x1
     874:	bl	0 <grub_disk_read>
     878:	ldr	x0, [sp, #104]
     87c:	ldr	w25, [x0]
     880:	cbnz	w25, 814 <grub_affs_iterate_dir+0x14c>
     884:	mov	x0, #0xf0                  	// #240
     888:	ldr	x26, [x19]
     88c:	bl	0 <grub_zalloc>
     890:	mov	x28, x0
     894:	cbz	x0, 9d4 <grub_affs_iterate_dir+0x30c>
     898:	str	x26, [x0]
     89c:	mov	x2, #0x1e                  	// #30
     8a0:	str	w21, [x0, #8]
     8a4:	str	x19, [x0, #16]
     8a8:	ldrb	w1, [sp, #320]
     8ac:	and	x0, x1, #0xff
     8b0:	cmp	x0, x2
     8b4:	csel	x0, x0, x2, ls  // ls = plast
     8b8:	cbz	w1, a60 <grub_affs_iterate_dir+0x398>
     8bc:	add	x1, sp, #0xc8
     8c0:	add	x0, x0, #0x79
     8c4:	add	x0, x1, x0
     8c8:	add	x4, sp, #0x88
     8cc:	add	x1, x1, #0x79
     8d0:	mov	x3, x4
     8d4:	ldrb	w6, [x1]
     8d8:	sxtb	w2, w6
     8dc:	lsr	w7, w6, #6
     8e0:	and	w2, w2, #0x3f
     8e4:	orr	w7, w7, #0xffffffc0
     8e8:	orr	w2, w2, #0xffffff80
     8ec:	tbnz	w6, #7, 924 <grub_affs_iterate_dir+0x25c>
     8f0:	strb	w6, [x3], #1
     8f4:	add	x1, x1, #0x1
     8f8:	cmp	x1, x0
     8fc:	b.eq	93c <grub_affs_iterate_dir+0x274>  // b.none
     900:	ldrb	w6, [x1]
     904:	mov	x4, x3
     908:	mov	x3, x4
     90c:	sxtb	w2, w6
     910:	lsr	w7, w6, #6
     914:	and	w2, w2, #0x3f
     918:	orr	w7, w7, #0xffffffc0
     91c:	orr	w2, w2, #0xffffff80
     920:	tbz	w6, #7, 8f0 <grub_affs_iterate_dir+0x228>
     924:	strb	w7, [x4]
     928:	add	x1, x1, #0x1
     92c:	strb	w2, [x4, #1]
     930:	cmp	x1, x0
     934:	add	x3, x4, #0x2
     938:	b.ne	900 <grub_affs_iterate_dir+0x238>  // b.any
     93c:	strb	wzr, [x3]
     940:	add	x27, x28, #0x18
     944:	mov	x2, #0xc8                  	// #200
     948:	mov	x0, x27
     94c:	add	x1, sp, x2
     950:	mov	w21, #0xfcffffff            	// #-50331649
     954:	bl	0 <memcpy>
     958:	ldr	w0, [x28, #220]
     95c:	cmp	w0, w21
     960:	b.eq	a08 <grub_affs_iterate_dir+0x340>  // b.none
     964:	b.hi	9b0 <grub_affs_iterate_dir+0x2e8>  // b.pmore
     968:	mov	w1, #0x2000000             	// #33554432
     96c:	cmp	w0, w1
     970:	b.eq	a00 <grub_affs_iterate_dir+0x338>  // b.none
     974:	mov	w2, #0x3000000             	// #50331648
     978:	mov	w1, #0x103                 	// #259
     97c:	cmp	w0, w2
     980:	b.ne	99c <grub_affs_iterate_dir+0x2d4>  // b.any
     984:	mov	x2, x28
     988:	mov	x3, x24
     98c:	add	x0, sp, #0x88
     990:	blr	x23
     994:	cbnz	w0, 9d4 <grub_affs_iterate_dir+0x30c>
     998:	mov	x28, #0x0                   	// #0
     99c:	ldr	w0, [sp, #384]
     9a0:	rev	w21, w0
     9a4:	cbnz	w0, 850 <grub_affs_iterate_dir+0x188>
     9a8:	ldr	w1, [x20, #268]
     9ac:	b	7d8 <grub_affs_iterate_dir+0x110>
     9b0:	mov	w2, #0xfdffffff            	// #-33554433
     9b4:	mov	w1, #0x101                 	// #257
     9b8:	cmp	w0, w2
     9bc:	b.ne	99c <grub_affs_iterate_dir+0x2d4>  // b.any
     9c0:	mov	x2, x28
     9c4:	mov	x3, x24
     9c8:	add	x0, sp, #0x88
     9cc:	blr	x23
     9d0:	cbz	w0, 998 <grub_affs_iterate_dir+0x2d0>
     9d4:	ldr	x0, [sp, #120]
     9d8:	mov	w22, #0x1                   	// #1
     9dc:	bl	0 <grub_free>
     9e0:	mov	w0, w22
     9e4:	ldp	x19, x20, [sp, #16]
     9e8:	ldp	x21, x22, [sp, #32]
     9ec:	ldp	x23, x24, [sp, #48]
     9f0:	ldp	x25, x26, [sp, #64]
     9f4:	ldp	x27, x28, [sp, #80]
     9f8:	ldp	x29, x30, [sp], #400
     9fc:	ret
     a00:	mov	w1, #0x102                 	// #258
     a04:	b	984 <grub_affs_iterate_dir+0x2bc>
     a08:	ldr	w2, [x28, #180]
     a0c:	add	w25, w25, #0x1
     a10:	ldr	w6, [x26, #264]
     a14:	mov	x4, x27
     a18:	ldr	x0, [x26, #256]
     a1c:	rev	w1, w2
     a20:	mov	x2, x1
     a24:	add	x1, x1, #0x1
     a28:	str	w2, [x28, #8]
     a2c:	mov	x3, #0xc8                  	// #200
     a30:	lsl	x1, x1, x6
     a34:	mov	x2, #0x138                 	// #312
     a38:	sub	x1, x1, #0x1
     a3c:	bl	0 <grub_disk_read>
     a40:	cbz	w0, a54 <grub_affs_iterate_dir+0x38c>
     a44:	mov	w22, #0x1                   	// #1
     a48:	ldp	x25, x26, [sp, #64]
     a4c:	ldp	x27, x28, [sp, #80]
     a50:	b	7fc <grub_affs_iterate_dir+0x134>
     a54:	cmp	w25, #0x8
     a58:	b.eq	99c <grub_affs_iterate_dir+0x2d4>  // b.none
     a5c:	b	958 <grub_affs_iterate_dir+0x290>
     a60:	add	x3, sp, #0x88
     a64:	b	93c <grub_affs_iterate_dir+0x274>
	...

0000000000000a80 <grub_affs_read>:
     a80:	sub	sp, sp, #0x30
     a84:	mov	x5, x2
     a88:	adrp	x4, 0 <grub_affs_close>
     a8c:	mov	x3, x0
     a90:	mov	x6, x1
     a94:	stp	x29, x30, [sp, #32]
     a98:	add	x29, sp, #0x20
     a9c:	ldp	x8, x2, [x0, #80]
     aa0:	ldr	x7, [x4]
     aa4:	ldr	x4, [x0, #24]
     aa8:	ldr	x0, [x8, #16]
     aac:	add	x1, x8, #0x10
     ab0:	ldr	w9, [x8, #52]
     ab4:	ldr	x0, [x0, #256]
     ab8:	str	xzr, [sp, #16]
     abc:	rev	w9, w9
     ac0:	ldr	w8, [x8, #264]
     ac4:	ldr	x3, [x3, #96]
     ac8:	str	x9, [sp]
     acc:	str	w8, [sp, #8]
     ad0:	bl	0 <grub_fshelp_read_file>
     ad4:	ldp	x29, x30, [sp, #32]
     ad8:	add	sp, sp, #0x30
     adc:	ret
	...

0000000000000ae8 <grub_affs_open>:
     ae8:	stp	x29, x30, [sp, #-80]!
     aec:	adrp	x2, 0 <grub_affs_close>
     af0:	mov	x29, sp
     af4:	stp	x21, x22, [sp, #32]
     af8:	mov	x21, x1
     afc:	ldr	x22, [x2]
     b00:	stp	x19, x20, [sp, #16]
     b04:	mov	x20, x0
     b08:	stp	x23, x24, [sp, #48]
     b0c:	ldr	x0, [x22]
     b10:	str	xzr, [sp, #72]
     b14:	bl	0 <grub_dl_ref>
     b18:	ldr	x0, [x20, #8]
     b1c:	ldr	x0, [x0]
     b20:	bl	50 <grub_affs_mount>
     b24:	mov	x19, x0
     b28:	cbz	x0, be8 <grub_affs_open+0x100>
     b2c:	adrp	x1, 0 <grub_affs_close>
     b30:	adrp	x2, 0 <grub_affs_close>
     b34:	add	x24, x0, #0x10
     b38:	mov	w5, #0x1                   	// #1
     b3c:	ldr	x4, [x1]
     b40:	mov	x0, x21
     b44:	ldr	x3, [x2]
     b48:	mov	x1, x24
     b4c:	add	x2, sp, #0x48
     b50:	bl	0 <grub_fshelp_find_file>
     b54:	adrp	x0, 0 <grub_affs_close>
     b58:	ldr	x23, [x0]
     b5c:	ldr	w21, [x23]
     b60:	cbz	w21, ba0 <grub_affs_open+0xb8>
     b64:	ldr	x0, [sp, #72]
     b68:	cmp	x24, x0
     b6c:	b.eq	b74 <grub_affs_open+0x8c>  // b.none
     b70:	bl	0 <grub_free>
     b74:	mov	x0, x19
     b78:	bl	0 <grub_free>
     b7c:	ldr	x0, [x22]
     b80:	bl	0 <grub_dl_unref>
     b84:	ldr	w21, [x23]
     b88:	ldp	x19, x20, [sp, #16]
     b8c:	mov	w0, w21
     b90:	ldp	x21, x22, [sp, #32]
     b94:	ldp	x23, x24, [sp, #48]
     b98:	ldp	x29, x30, [sp], #80
     b9c:	ret
     ba0:	ldr	x22, [sp, #72]
     ba4:	mov	x2, #0xf0                  	// #240
     ba8:	mov	x0, x24
     bac:	mov	x1, x22
     bb0:	ldr	w3, [x22, #36]
     bb4:	rev	w3, w3
     bb8:	str	x3, [x20, #64]
     bbc:	bl	0 <memcpy>
     bc0:	mov	x0, x22
     bc4:	bl	0 <grub_free>
     bc8:	str	xzr, [x20, #24]
     bcc:	mov	w0, w21
     bd0:	str	x19, [x20, #80]
     bd4:	ldp	x19, x20, [sp, #16]
     bd8:	ldp	x21, x22, [sp, #32]
     bdc:	ldp	x23, x24, [sp, #48]
     be0:	ldp	x29, x30, [sp], #80
     be4:	ret
     be8:	adrp	x0, 0 <grub_affs_close>
     bec:	ldr	x23, [x0]
     bf0:	b	b74 <grub_affs_open+0x8c>
     bf4:	nop
	...

0000000000000c18 <grub_affs_dir>:
     c18:	stp	x29, x30, [sp, #-80]!
     c1c:	adrp	x4, 0 <grub_affs_close>
     c20:	mov	x29, sp
     c24:	stp	x21, x22, [sp, #32]
     c28:	ldr	x21, [x4]
     c2c:	stp	x19, x20, [sp, #16]
     c30:	mov	x19, x0
     c34:	mov	x20, x1
     c38:	stp	xzr, x2, [sp, #56]
     c3c:	ldr	x0, [x21]
     c40:	str	x3, [sp, #72]
     c44:	bl	0 <grub_dl_ref>
     c48:	ldr	x0, [x19]
     c4c:	bl	50 <grub_affs_mount>
     c50:	mov	x19, x0
     c54:	cbz	x0, ce8 <grub_affs_dir+0xd0>
     c58:	adrp	x1, 0 <grub_affs_close>
     c5c:	adrp	x2, 0 <grub_affs_close>
     c60:	add	x22, x0, #0x10
     c64:	mov	w5, #0x2                   	// #2
     c68:	ldr	x4, [x1]
     c6c:	mov	x0, x20
     c70:	ldr	x3, [x2]
     c74:	mov	x1, x22
     c78:	add	x2, sp, #0x38
     c7c:	bl	0 <grub_fshelp_find_file>
     c80:	adrp	x0, 0 <grub_affs_close>
     c84:	ldr	x20, [x0]
     c88:	ldr	w0, [x20]
     c8c:	cbz	w0, cc4 <grub_affs_dir+0xac>
     c90:	ldr	x0, [sp, #56]
     c94:	cmp	x22, x0
     c98:	b.eq	ca0 <grub_affs_dir+0x88>  // b.none
     c9c:	bl	0 <grub_free>
     ca0:	mov	x0, x19
     ca4:	bl	0 <grub_free>
     ca8:	ldr	x0, [x21]
     cac:	bl	0 <grub_dl_unref>
     cb0:	ldr	w0, [x20]
     cb4:	ldp	x19, x20, [sp, #16]
     cb8:	ldp	x21, x22, [sp, #32]
     cbc:	ldp	x29, x30, [sp], #80
     cc0:	ret
     cc4:	adrp	x1, 0 <grub_affs_close>
     cc8:	add	x2, sp, #0x40
     ccc:	ldr	x0, [sp, #56]
     cd0:	ldr	x1, [x1]
     cd4:	bl	6c8 <grub_affs_iterate_dir>
     cd8:	ldr	x0, [sp, #56]
     cdc:	cmp	x22, x0
     ce0:	b.ne	c9c <grub_affs_dir+0x84>  // b.any
     ce4:	b	ca0 <grub_affs_dir+0x88>
     ce8:	adrp	x0, 0 <grub_affs_close>
     cec:	ldr	x20, [x0]
     cf0:	b	ca0 <grub_affs_dir+0x88>
     cf4:	nop
	...

0000000000000d20 <grub_affs_read_symlink>:
     d20:	stp	x29, x30, [sp, #-64]!
     d24:	mov	x29, sp
     d28:	stp	x21, x22, [sp, #32]
     d2c:	mov	x21, x0
     d30:	ldr	x22, [x0]
     d34:	stp	x19, x20, [sp, #16]
     d38:	mov	w19, #0x200                 	// #512
     d3c:	stp	x23, x24, [sp, #48]
     d40:	ldr	w0, [x22, #264]
     d44:	lsl	w19, w19, w0
     d48:	sub	w23, w19, #0x18
     d4c:	sxtw	x24, w23
     d50:	add	x0, x24, #0x1
     d54:	bl	0 <grub_malloc>
     d58:	cbz	x0, e88 <grub_affs_read_symlink+0x168>
     d5c:	ldr	w5, [x21, #8]
     d60:	mov	x4, x0
     d64:	mov	x20, x0
     d68:	ldr	w1, [x22, #264]
     d6c:	ldr	x0, [x22, #256]
     d70:	mov	x3, x24
     d74:	mov	x2, #0x18                  	// #24
     d78:	lsl	x1, x5, x1
     d7c:	bl	0 <grub_disk_read>
     d80:	adrp	x0, 0 <grub_affs_close>
     d84:	ldr	x0, [x0]
     d88:	ldr	w0, [x0]
     d8c:	cbnz	w0, ea4 <grub_affs_read_symlink+0x184>
     d90:	strb	wzr, [x20, w23, sxtw]
     d94:	mov	x0, #0x1                   	// #1
     d98:	add	x0, x0, w23, sxtw #1
     d9c:	bl	0 <grub_malloc>
     da0:	mov	x21, x0
     da4:	cbz	x0, ec8 <grub_affs_read_symlink+0x1a8>
     da8:	mov	x7, x0
     dac:	cbz	x24, e14 <grub_affs_read_symlink+0xf4>
     db0:	sxtw	x8, w19
     db4:	mov	x1, x20
     db8:	sub	x8, x8, #0x18
     dbc:	add	x8, x20, x8
     dc0:	b	dd8 <grub_affs_read_symlink+0xb8>
     dc4:	strb	w2, [x6], #1
     dc8:	add	x1, x1, #0x1
     dcc:	cmp	x1, x8
     dd0:	mov	x7, x6
     dd4:	b.eq	e14 <grub_affs_read_symlink+0xf4>  // b.none
     dd8:	ldrb	w2, [x1]
     ddc:	mov	x5, x7
     de0:	mov	x6, x7
     de4:	lsr	w3, w2, #6
     de8:	orr	w3, w3, #0xffffffc0
     dec:	tbz	w2, #7, dc4 <grub_affs_read_symlink+0xa4>
     df0:	strb	w3, [x5], #2
     df4:	add	x1, x1, #0x1
     df8:	ldurb	w2, [x1, #-1]
     dfc:	cmp	x1, x8
     e00:	and	w2, w2, #0x3f
     e04:	orr	w2, w2, #0xffffff80
     e08:	strb	w2, [x7, #1]
     e0c:	mov	x7, x5
     e10:	b.ne	dd8 <grub_affs_read_symlink+0xb8>  // b.any
     e14:	adrp	x1, 0 <grub_affs_close>
     e18:	adrp	x2, 0 <grub_affs_close>
     e1c:	adrp	x0, 0 <grub_affs_close>
     e20:	mov	x4, x21
     e24:	ldr	x3, [x1]
     e28:	strb	wzr, [x7]
     e2c:	ldr	x2, [x2]
     e30:	mov	w1, #0x137                 	// #311
     e34:	ldr	x0, [x0]
     e38:	bl	0 <grub_real_dprintf>
     e3c:	mov	x0, x20
     e40:	bl	0 <grub_free>
     e44:	ldrb	w0, [x21]
     e48:	cmp	w0, #0x3a
     e4c:	b.eq	e68 <grub_affs_read_symlink+0x148>  // b.none
     e50:	mov	x0, x21
     e54:	ldp	x19, x20, [sp, #16]
     e58:	ldp	x21, x22, [sp, #32]
     e5c:	ldp	x23, x24, [sp, #48]
     e60:	ldp	x29, x30, [sp], #64
     e64:	ret
     e68:	mov	w0, #0x2f                  	// #47
     e6c:	strb	w0, [x21]
     e70:	mov	x0, x21
     e74:	ldp	x19, x20, [sp, #16]
     e78:	ldp	x21, x22, [sp, #32]
     e7c:	ldp	x23, x24, [sp, #48]
     e80:	ldp	x29, x30, [sp], #64
     e84:	ret
     e88:	mov	x21, #0x0                   	// #0
     e8c:	mov	x0, x21
     e90:	ldp	x19, x20, [sp, #16]
     e94:	ldp	x21, x22, [sp, #32]
     e98:	ldp	x23, x24, [sp, #48]
     e9c:	ldp	x29, x30, [sp], #64
     ea0:	ret
     ea4:	mov	x0, x20
     ea8:	mov	x21, #0x0                   	// #0
     eac:	bl	0 <grub_free>
     eb0:	mov	x0, x21
     eb4:	ldp	x19, x20, [sp, #16]
     eb8:	ldp	x21, x22, [sp, #32]
     ebc:	ldp	x23, x24, [sp, #48]
     ec0:	ldp	x29, x30, [sp], #64
     ec4:	ret
     ec8:	mov	x0, x20
     ecc:	bl	0 <grub_free>
     ed0:	b	e50 <grub_affs_read_symlink+0x130>
     ed4:	nop
	...

0000000000000ef8 <grub_affs_dir_iter>:
     ef8:	stp	x29, x30, [sp, #-64]!
     efc:	mov	x29, sp
     f00:	stp	x19, x20, [sp, #16]
     f04:	mov	x19, x2
     f08:	mov	w20, w1
     f0c:	mov	x2, #0x10                  	// #16
     f10:	mov	w1, #0x0                   	// #0
     f14:	stp	x21, x22, [sp, #32]
     f18:	mov	x21, x3
     f1c:	mov	x22, x0
     f20:	add	x0, sp, #0x30
     f24:	bl	0 <grub_memset>
     f28:	ldp	w4, w5, [x19, #132]
     f2c:	mov	w9, #0x851f                	// #34079
     f30:	ldr	w1, [x19, #140]
     f34:	movk	w9, #0x51eb, lsl #16
     f38:	rev	w2, w5
     f3c:	rev	w4, w4
     f40:	rev	w1, w1
     f44:	mov	w8, #0x5180                	// #20864
     f48:	lsl	w5, w2, #4
     f4c:	movk	w8, #0x1, lsl #16
     f50:	sub	w5, w5, w2
     f54:	and	w20, w20, #0xff
     f58:	umull	x1, w1, w9
     f5c:	cmp	w20, #0x2
     f60:	lsl	w5, w5, #2
     f64:	ldrb	w3, [sp, #48]
     f68:	cset	w6, eq  // eq = none
     f6c:	mov	w7, #0x3f00                	// #16128
     f70:	lsr	x1, x1, #36
     f74:	movk	w7, #0xf0c, lsl #16
     f78:	madd	w2, w4, w8, w5
     f7c:	add	w1, w1, w7
     f80:	and	w3, w3, #0xfffffffc
     f84:	orr	w6, w6, #0x2
     f88:	orr	w6, w6, w3
     f8c:	add	w1, w2, w1
     f90:	mov	x0, x19
     f94:	strb	w6, [sp, #48]
     f98:	str	w1, [sp, #52]
     f9c:	bl	0 <grub_free>
     fa0:	ldp	x3, x2, [x21]
     fa4:	add	x1, sp, #0x30
     fa8:	mov	x0, x22
     fac:	blr	x3
     fb0:	ldp	x19, x20, [sp, #16]
     fb4:	ldp	x21, x22, [sp, #32]
     fb8:	ldp	x29, x30, [sp], #64
     fbc:	ret

0000000000000fc0 <grub_mod_init>:
     fc0:	stp	x29, x30, [sp, #-32]!
     fc4:	adrp	x2, 0 <grub_affs_close>
     fc8:	adrp	x1, 0 <grub_affs_close>
     fcc:	mov	x29, sp
     fd0:	ldr	x1, [x1]
     fd4:	str	x19, [sp, #16]
     fd8:	mov	x19, x0
     fdc:	ldr	x0, [x2]
     fe0:	bl	0 <grub_list_push>
     fe4:	adrp	x0, 0 <grub_affs_close>
     fe8:	ldr	x0, [x0]
     fec:	str	x19, [x0]
     ff0:	ldr	x19, [sp, #16]
     ff4:	ldp	x29, x30, [sp], #32
     ff8:	ret
     ffc:	nop
	...

0000000000001018 <grub_mod_fini>:
    1018:	adrp	x0, 0 <grub_affs_close>
    101c:	ldr	x0, [x0]
    1020:	b	0 <grub_list_remove>
    1024:	nop
	...
