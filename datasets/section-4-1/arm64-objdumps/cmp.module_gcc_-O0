
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cmp.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_file_size>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #64]
  10:	add	sp, sp, #0x10
  14:	ret

0000000000000018 <grub_register_command>:
  18:	stp	x29, x30, [sp, #-48]!
  1c:	mov	x29, sp
  20:	str	x0, [sp, #40]
  24:	str	x1, [sp, #32]
  28:	str	x2, [sp, #24]
  2c:	str	x3, [sp, #16]
  30:	mov	w4, #0x0                   	// #0
  34:	ldr	x3, [sp, #16]
  38:	ldr	x2, [sp, #24]
  3c:	ldr	x1, [sp, #32]
  40:	ldr	x0, [sp, #40]
  44:	bl	0 <grub_register_command_prio>
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

0000000000000050 <grub_cmd_cmp>:
  50:	stp	x29, x30, [sp, #-128]!
  54:	mov	x29, sp
  58:	stp	x19, x20, [sp, #16]
  5c:	str	x0, [sp, #56]
  60:	str	w1, [sp, #52]
  64:	str	x2, [sp, #40]
  68:	str	xzr, [sp, #88]
  6c:	str	xzr, [sp, #80]
  70:	str	xzr, [sp, #112]
  74:	str	xzr, [sp, #104]
  78:	ldr	w0, [sp, #52]
  7c:	cmp	w0, #0x2
  80:	b.eq	9c <grub_cmd_cmp+0x4c>  // b.none
  84:	adrp	x0, 0 <grub_file_size>
  88:	add	x0, x0, #0x0
  8c:	ldr	x1, [x0]
  90:	mov	w0, #0x12                  	// #18
  94:	bl	0 <grub_error>
  98:	b	324 <grub_cmd_cmp+0x2d4>
  9c:	ldr	x0, [sp, #40]
  a0:	ldr	x1, [x0]
  a4:	ldr	x0, [sp, #40]
  a8:	add	x0, x0, #0x8
  ac:	ldr	x0, [x0]
  b0:	mov	x2, x0
  b4:	adrp	x0, 0 <grub_file_size>
  b8:	add	x0, x0, #0x0
  bc:	ldr	x0, [x0]
  c0:	bl	0 <grub_printf_>
  c4:	ldr	x0, [sp, #40]
  c8:	ldr	x0, [x0]
  cc:	mov	w1, #0x2d                  	// #45
  d0:	bl	0 <grub_file_open>
  d4:	str	x0, [sp, #88]
  d8:	ldr	x0, [sp, #40]
  dc:	add	x0, x0, #0x8
  e0:	ldr	x0, [x0]
  e4:	mov	w1, #0x2d                  	// #45
  e8:	bl	0 <grub_file_open>
  ec:	str	x0, [sp, #80]
  f0:	ldr	x0, [sp, #88]
  f4:	cmp	x0, #0x0
  f8:	b.eq	2c8 <grub_cmd_cmp+0x278>  // b.none
  fc:	ldr	x0, [sp, #80]
 100:	cmp	x0, #0x0
 104:	b.eq	2c8 <grub_cmd_cmp+0x278>  // b.none
 108:	ldr	x0, [sp, #88]
 10c:	bl	0 <grub_file_size>
 110:	mov	x19, x0
 114:	ldr	x0, [sp, #80]
 118:	bl	0 <grub_file_size>
 11c:	cmp	x19, x0
 120:	b.eq	174 <grub_cmd_cmp+0x124>  // b.none
 124:	ldr	x0, [sp, #88]
 128:	bl	0 <grub_file_size>
 12c:	mov	x20, x0
 130:	ldr	x0, [sp, #40]
 134:	ldr	x19, [x0]
 138:	ldr	x0, [sp, #80]
 13c:	bl	0 <grub_file_size>
 140:	mov	x1, x0
 144:	ldr	x0, [sp, #40]
 148:	add	x0, x0, #0x8
 14c:	ldr	x0, [x0]
 150:	mov	x4, x0
 154:	mov	x3, x1
 158:	mov	x2, x19
 15c:	mov	x1, x20
 160:	adrp	x0, 0 <grub_file_size>
 164:	add	x0, x0, #0x0
 168:	ldr	x0, [x0]
 16c:	bl	0 <grub_printf_>
 170:	b	2dc <grub_cmd_cmp+0x28c>
 174:	str	xzr, [sp, #120]
 178:	mov	x0, #0x200                 	// #512
 17c:	bl	0 <grub_malloc>
 180:	str	x0, [sp, #112]
 184:	mov	x0, #0x200                 	// #512
 188:	bl	0 <grub_malloc>
 18c:	str	x0, [sp, #104]
 190:	ldr	x0, [sp, #112]
 194:	cmp	x0, #0x0
 198:	b.eq	2d0 <grub_cmd_cmp+0x280>  // b.none
 19c:	ldr	x0, [sp, #104]
 1a0:	cmp	x0, #0x0
 1a4:	b.eq	2d0 <grub_cmd_cmp+0x280>  // b.none
 1a8:	mov	x2, #0x200                 	// #512
 1ac:	ldr	x1, [sp, #112]
 1b0:	ldr	x0, [sp, #88]
 1b4:	bl	0 <grub_file_read>
 1b8:	str	x0, [sp, #72]
 1bc:	mov	x2, #0x200                 	// #512
 1c0:	ldr	x1, [sp, #104]
 1c4:	ldr	x0, [sp, #80]
 1c8:	bl	0 <grub_file_read>
 1cc:	str	x0, [sp, #64]
 1d0:	ldr	x1, [sp, #72]
 1d4:	ldr	x0, [sp, #64]
 1d8:	cmp	x1, x0
 1dc:	b.ne	2d8 <grub_cmd_cmp+0x288>  // b.any
 1e0:	str	wzr, [sp, #100]
 1e4:	b	28c <grub_cmd_cmp+0x23c>
 1e8:	ldrsw	x0, [sp, #100]
 1ec:	ldr	x1, [sp, #112]
 1f0:	add	x0, x1, x0
 1f4:	ldrb	w1, [x0]
 1f8:	ldrsw	x0, [sp, #100]
 1fc:	ldr	x2, [sp, #104]
 200:	add	x0, x2, x0
 204:	ldrb	w0, [x0]
 208:	cmp	w1, w0
 20c:	b.eq	280 <grub_cmd_cmp+0x230>  // b.none
 210:	ldrsw	x1, [sp, #100]
 214:	ldr	x0, [sp, #120]
 218:	add	x6, x1, x0
 21c:	ldrsw	x0, [sp, #100]
 220:	ldr	x1, [sp, #112]
 224:	add	x0, x1, x0
 228:	ldrb	w0, [x0]
 22c:	mov	w7, w0
 230:	ldr	x0, [sp, #40]
 234:	ldr	x2, [x0]
 238:	ldrsw	x0, [sp, #100]
 23c:	ldr	x1, [sp, #104]
 240:	add	x0, x1, x0
 244:	ldrb	w0, [x0]
 248:	mov	w1, w0
 24c:	ldr	x0, [sp, #40]
 250:	add	x0, x0, #0x8
 254:	ldr	x0, [x0]
 258:	mov	x5, x0
 25c:	mov	w4, w1
 260:	mov	x3, x2
 264:	mov	w2, w7
 268:	mov	x1, x6
 26c:	adrp	x0, 0 <grub_file_size>
 270:	add	x0, x0, #0x0
 274:	ldr	x0, [x0]
 278:	bl	0 <grub_printf_>
 27c:	b	2dc <grub_cmd_cmp+0x28c>
 280:	ldr	w0, [sp, #100]
 284:	add	w0, w0, #0x1
 288:	str	w0, [sp, #100]
 28c:	ldrsw	x0, [sp, #100]
 290:	ldr	x1, [sp, #64]
 294:	cmp	x1, x0
 298:	b.gt	1e8 <grub_cmd_cmp+0x198>
 29c:	ldr	x0, [sp, #120]
 2a0:	add	x0, x0, #0x200
 2a4:	str	x0, [sp, #120]
 2a8:	ldr	x0, [sp, #64]
 2ac:	cmp	x0, #0x0
 2b0:	b.ne	1a8 <grub_cmd_cmp+0x158>  // b.any
 2b4:	adrp	x0, 0 <grub_file_size>
 2b8:	add	x0, x0, #0x0
 2bc:	ldr	x0, [x0]
 2c0:	bl	0 <grub_printf_>
 2c4:	b	2dc <grub_cmd_cmp+0x28c>
 2c8:	nop
 2cc:	b	2dc <grub_cmd_cmp+0x28c>
 2d0:	nop
 2d4:	b	2dc <grub_cmd_cmp+0x28c>
 2d8:	nop
 2dc:	ldr	x0, [sp, #112]
 2e0:	bl	0 <grub_free>
 2e4:	ldr	x0, [sp, #104]
 2e8:	bl	0 <grub_free>
 2ec:	ldr	x0, [sp, #88]
 2f0:	cmp	x0, #0x0
 2f4:	b.eq	300 <grub_cmd_cmp+0x2b0>  // b.none
 2f8:	ldr	x0, [sp, #88]
 2fc:	bl	0 <grub_file_close>
 300:	ldr	x0, [sp, #80]
 304:	cmp	x0, #0x0
 308:	b.eq	314 <grub_cmd_cmp+0x2c4>  // b.none
 30c:	ldr	x0, [sp, #80]
 310:	bl	0 <grub_file_close>
 314:	adrp	x0, 0 <grub_file_size>
 318:	add	x0, x0, #0x0
 31c:	ldr	x0, [x0]
 320:	ldr	w0, [x0]
 324:	ldp	x19, x20, [sp, #16]
 328:	ldp	x29, x30, [sp], #128
 32c:	ret
	...

0000000000000360 <grub_mod_init>:
 360:	stp	x29, x30, [sp, #-32]!
 364:	mov	x29, sp
 368:	str	x0, [sp, #24]
 36c:	adrp	x0, 0 <grub_file_size>
 370:	add	x0, x0, #0x0
 374:	ldr	x3, [x0]
 378:	adrp	x0, 0 <grub_file_size>
 37c:	add	x0, x0, #0x0
 380:	ldr	x2, [x0]
 384:	adrp	x0, 0 <grub_file_size>
 388:	add	x0, x0, #0x0
 38c:	ldr	x1, [x0]
 390:	adrp	x0, 0 <grub_file_size>
 394:	add	x0, x0, #0x0
 398:	ldr	x0, [x0]
 39c:	bl	18 <grub_register_command>
 3a0:	mov	x1, x0
 3a4:	adrp	x0, 0 <grub_file_size>
 3a8:	add	x0, x0, #0x0
 3ac:	ldr	x0, [x0]
 3b0:	str	x1, [x0]
 3b4:	nop
 3b8:	ldp	x29, x30, [sp], #32
 3bc:	ret
	...

00000000000003e8 <grub_mod_fini>:
 3e8:	stp	x29, x30, [sp, #-16]!
 3ec:	mov	x29, sp
 3f0:	adrp	x0, 0 <grub_file_size>
 3f4:	add	x0, x0, #0x0
 3f8:	ldr	x0, [x0]
 3fc:	ldr	x0, [x0]
 400:	bl	0 <grub_unregister_command>
 404:	nop
 408:	ldp	x29, x30, [sp], #16
 40c:	ret
	...
