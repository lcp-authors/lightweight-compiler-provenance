
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//archelp.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_stpcpy>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	str	x0, [sp, #24]
  14:	ldr	x0, [sp]
  18:	str	x0, [sp, #16]
  1c:	ldr	x0, [sp, #24]
  20:	add	x1, x0, #0x1
  24:	str	x1, [sp, #24]
  28:	ldr	x1, [sp, #16]
  2c:	ldrb	w1, [x1]
  30:	strb	w1, [x0]
  34:	ldr	x0, [sp, #16]
  38:	add	x1, x0, #0x1
  3c:	str	x1, [sp, #16]
  40:	ldrb	w0, [x0]
  44:	cmp	w0, #0x0
  48:	b.ne	1c <grub_stpcpy+0x1c>  // b.any
  4c:	ldr	x0, [sp, #24]
  50:	sub	x0, x0, #0x1
  54:	add	sp, sp, #0x20
  58:	ret

000000000000005c <grub_memcpy>:
  5c:	stp	x29, x30, [sp, #-48]!
  60:	mov	x29, sp
  64:	str	x0, [sp, #40]
  68:	str	x1, [sp, #32]
  6c:	str	x2, [sp, #24]
  70:	ldr	x2, [sp, #24]
  74:	ldr	x1, [sp, #32]
  78:	ldr	x0, [sp, #40]
  7c:	bl	0 <grub_memmove>
  80:	ldp	x29, x30, [sp], #48
  84:	ret

0000000000000088 <canonicalize>:
  88:	sub	sp, sp, #0x20
  8c:	str	x0, [sp, #8]
  90:	ldr	x0, [sp, #8]
  94:	str	x0, [sp, #24]
  98:	ldr	x0, [sp, #8]
  9c:	str	x0, [sp, #16]
  a0:	b	230 <canonicalize+0x1a8>
  a4:	ldr	x0, [sp, #24]
  a8:	add	x0, x0, #0x1
  ac:	str	x0, [sp, #24]
  b0:	ldr	x0, [sp, #24]
  b4:	ldrb	w0, [x0]
  b8:	cmp	w0, #0x2f
  bc:	b.eq	a4 <canonicalize+0x1c>  // b.none
  c0:	ldr	x0, [sp, #24]
  c4:	ldrb	w0, [x0]
  c8:	cmp	w0, #0x2e
  cc:	b.ne	108 <canonicalize+0x80>  // b.any
  d0:	ldr	x0, [sp, #24]
  d4:	add	x0, x0, #0x1
  d8:	ldrb	w0, [x0]
  dc:	cmp	w0, #0x2f
  e0:	b.eq	f8 <canonicalize+0x70>  // b.none
  e4:	ldr	x0, [sp, #24]
  e8:	add	x0, x0, #0x1
  ec:	ldrb	w0, [x0]
  f0:	cmp	w0, #0x0
  f4:	b.ne	108 <canonicalize+0x80>  // b.any
  f8:	ldr	x0, [sp, #24]
  fc:	add	x0, x0, #0x1
 100:	str	x0, [sp, #24]
 104:	b	230 <canonicalize+0x1a8>
 108:	ldr	x0, [sp, #24]
 10c:	ldrb	w0, [x0]
 110:	cmp	w0, #0x2e
 114:	b.ne	1e0 <canonicalize+0x158>  // b.any
 118:	ldr	x0, [sp, #24]
 11c:	add	x0, x0, #0x1
 120:	ldrb	w0, [x0]
 124:	cmp	w0, #0x2e
 128:	b.ne	1e0 <canonicalize+0x158>  // b.any
 12c:	ldr	x0, [sp, #24]
 130:	add	x0, x0, #0x2
 134:	ldrb	w0, [x0]
 138:	cmp	w0, #0x2f
 13c:	b.eq	154 <canonicalize+0xcc>  // b.none
 140:	ldr	x0, [sp, #24]
 144:	add	x0, x0, #0x2
 148:	ldrb	w0, [x0]
 14c:	cmp	w0, #0x0
 150:	b.ne	1e0 <canonicalize+0x158>  // b.any
 154:	ldr	x0, [sp, #24]
 158:	add	x0, x0, #0x2
 15c:	str	x0, [sp, #24]
 160:	ldr	x1, [sp, #16]
 164:	ldr	x0, [sp, #8]
 168:	cmp	x1, x0
 16c:	b.ne	174 <canonicalize+0xec>  // b.any
 170:	b	230 <canonicalize+0x1a8>
 174:	ldr	x0, [sp, #16]
 178:	sub	x0, x0, #0x2
 17c:	str	x0, [sp, #16]
 180:	b	190 <canonicalize+0x108>
 184:	ldr	x0, [sp, #16]
 188:	sub	x0, x0, #0x1
 18c:	str	x0, [sp, #16]
 190:	ldr	x1, [sp, #16]
 194:	ldr	x0, [sp, #8]
 198:	cmp	x1, x0
 19c:	b.cc	1b0 <canonicalize+0x128>  // b.lo, b.ul, b.last
 1a0:	ldr	x0, [sp, #16]
 1a4:	ldrb	w0, [x0]
 1a8:	cmp	w0, #0x2f
 1ac:	b.ne	184 <canonicalize+0xfc>  // b.any
 1b0:	ldr	x0, [sp, #16]
 1b4:	add	x0, x0, #0x1
 1b8:	str	x0, [sp, #16]
 1bc:	b	230 <canonicalize+0x1a8>
 1c0:	ldr	x1, [sp, #24]
 1c4:	add	x0, x1, #0x1
 1c8:	str	x0, [sp, #24]
 1cc:	ldr	x0, [sp, #16]
 1d0:	add	x2, x0, #0x1
 1d4:	str	x2, [sp, #16]
 1d8:	ldrb	w1, [x1]
 1dc:	strb	w1, [x0]
 1e0:	ldr	x0, [sp, #24]
 1e4:	ldrb	w0, [x0]
 1e8:	cmp	w0, #0x0
 1ec:	b.eq	200 <canonicalize+0x178>  // b.none
 1f0:	ldr	x0, [sp, #24]
 1f4:	ldrb	w0, [x0]
 1f8:	cmp	w0, #0x2f
 1fc:	b.ne	1c0 <canonicalize+0x138>  // b.any
 200:	ldr	x0, [sp, #24]
 204:	ldrb	w0, [x0]
 208:	cmp	w0, #0x0
 20c:	b.eq	230 <canonicalize+0x1a8>  // b.none
 210:	ldr	x1, [sp, #24]
 214:	add	x0, x1, #0x1
 218:	str	x0, [sp, #24]
 21c:	ldr	x0, [sp, #16]
 220:	add	x2, x0, #0x1
 224:	str	x2, [sp, #16]
 228:	ldrb	w1, [x1]
 22c:	strb	w1, [x0]
 230:	ldr	x0, [sp, #24]
 234:	ldrb	w0, [x0]
 238:	cmp	w0, #0x0
 23c:	b.ne	b0 <canonicalize+0x28>  // b.any
 240:	ldr	x0, [sp, #16]
 244:	strb	wzr, [x0]
 248:	nop
 24c:	add	sp, sp, #0x20
 250:	ret

0000000000000254 <handle_symlink>:
 254:	stp	x29, x30, [sp, #-128]!
 258:	mov	x29, sp
 25c:	str	x0, [sp, #56]
 260:	str	x1, [sp, #48]
 264:	str	x2, [sp, #40]
 268:	str	x3, [sp, #32]
 26c:	str	w4, [sp, #28]
 270:	str	x5, [sp, #16]
 274:	ldr	x0, [sp, #16]
 278:	str	wzr, [x0]
 27c:	ldr	w0, [sp, #28]
 280:	and	w0, w0, #0xe000
 284:	cmp	w0, #0xa, lsl #12
 288:	b.ne	29c <handle_symlink+0x48>  // b.any
 28c:	ldr	x0, [sp, #48]
 290:	ldr	x0, [x0, #8]
 294:	cmp	x0, #0x0
 298:	b.ne	2a4 <handle_symlink+0x50>  // b.any
 29c:	mov	w0, #0x0                   	// #0
 2a0:	b	5f8 <handle_symlink+0x3a4>
 2a4:	ldr	x0, [sp, #40]
 2a8:	bl	0 <grub_strlen>
 2ac:	str	x0, [sp, #96]
 2b0:	ldr	x0, [sp, #32]
 2b4:	ldr	x0, [x0]
 2b8:	ldr	x2, [sp, #96]
 2bc:	ldr	x1, [sp, #40]
 2c0:	bl	0 <grub_memcmp>
 2c4:	cmp	w0, #0x0
 2c8:	b.ne	304 <handle_symlink+0xb0>  // b.any
 2cc:	ldr	x0, [sp, #32]
 2d0:	ldr	x1, [x0]
 2d4:	ldr	x0, [sp, #96]
 2d8:	add	x0, x1, x0
 2dc:	ldrb	w0, [x0]
 2e0:	cmp	w0, #0x0
 2e4:	b.eq	30c <handle_symlink+0xb8>  // b.none
 2e8:	ldr	x0, [sp, #32]
 2ec:	ldr	x1, [x0]
 2f0:	ldr	x0, [sp, #96]
 2f4:	add	x0, x1, x0
 2f8:	ldrb	w0, [x0]
 2fc:	cmp	w0, #0x2f
 300:	b.eq	30c <handle_symlink+0xb8>  // b.none
 304:	mov	w0, #0x0                   	// #0
 308:	b	5f8 <handle_symlink+0x3a4>
 30c:	ldr	x0, [sp, #32]
 310:	ldr	x1, [x0]
 314:	ldr	x0, [sp, #96]
 318:	add	x0, x1, x0
 31c:	str	x0, [sp, #104]
 320:	ldr	x0, [sp, #104]
 324:	str	x0, [sp, #120]
 328:	ldr	x0, [sp, #104]
 32c:	ldrb	w0, [x0]
 330:	cmp	w0, #0x0
 334:	b.eq	354 <handle_symlink+0x100>  // b.none
 338:	ldr	x0, [sp, #104]
 33c:	add	x0, x0, #0x1
 340:	str	x0, [sp, #104]
 344:	b	354 <handle_symlink+0x100>
 348:	ldr	x0, [sp, #120]
 34c:	sub	x0, x0, #0x1
 350:	str	x0, [sp, #120]
 354:	ldr	x0, [sp, #32]
 358:	ldr	x0, [x0]
 35c:	ldr	x1, [sp, #120]
 360:	cmp	x1, x0
 364:	b.cc	378 <handle_symlink+0x124>  // b.lo, b.ul, b.last
 368:	ldr	x0, [sp, #120]
 36c:	ldrb	w0, [x0]
 370:	cmp	w0, #0x2f
 374:	b.ne	348 <handle_symlink+0xf4>  // b.any
 378:	ldr	x0, [sp, #32]
 37c:	ldr	x0, [x0]
 380:	ldr	x1, [sp, #120]
 384:	cmp	x1, x0
 388:	b.cc	3a4 <handle_symlink+0x150>  // b.lo, b.ul, b.last
 38c:	ldr	x0, [sp, #32]
 390:	ldr	x0, [x0]
 394:	ldr	x1, [sp, #120]
 398:	sub	x0, x1, x0
 39c:	str	x0, [sp, #112]
 3a0:	b	3a8 <handle_symlink+0x154>
 3a4:	str	xzr, [sp, #112]
 3a8:	ldr	x0, [sp, #112]
 3ac:	cmp	x0, #0x0
 3b0:	b.eq	3c0 <handle_symlink+0x16c>  // b.none
 3b4:	ldr	x0, [sp, #112]
 3b8:	add	x0, x0, #0x1
 3bc:	str	x0, [sp, #112]
 3c0:	ldr	x0, [sp, #48]
 3c4:	ldr	x1, [x0, #8]
 3c8:	ldr	x0, [sp, #56]
 3cc:	blr	x1
 3d0:	str	x0, [sp, #88]
 3d4:	ldr	x0, [sp, #88]
 3d8:	cmp	x0, #0x0
 3dc:	b.ne	3f4 <handle_symlink+0x1a0>  // b.any
 3e0:	adrp	x0, 0 <grub_stpcpy>
 3e4:	add	x0, x0, #0x0
 3e8:	ldr	x0, [x0]
 3ec:	ldr	w0, [x0]
 3f0:	b	5f8 <handle_symlink+0x3a4>
 3f4:	ldr	x0, [sp, #88]
 3f8:	ldrb	w0, [x0]
 3fc:	cmp	w0, #0x0
 400:	b.ne	40c <handle_symlink+0x1b8>  // b.any
 404:	mov	w0, #0x0                   	// #0
 408:	b	5f8 <handle_symlink+0x3a4>
 40c:	ldr	x0, [sp, #88]
 410:	bl	0 <grub_strlen>
 414:	str	x0, [sp, #80]
 418:	ldr	x0, [sp, #32]
 41c:	ldr	x0, [x0]
 420:	bl	0 <grub_strlen>
 424:	mov	x1, x0
 428:	ldr	x0, [sp, #80]
 42c:	add	x0, x1, x0
 430:	add	x0, x0, #0x2
 434:	bl	0 <grub_malloc>
 438:	str	x0, [sp, #72]
 43c:	ldr	x0, [sp, #72]
 440:	cmp	x0, #0x0
 444:	b.ne	45c <handle_symlink+0x208>  // b.any
 448:	adrp	x0, 0 <grub_stpcpy>
 44c:	add	x0, x0, #0x0
 450:	ldr	x0, [x0]
 454:	ldr	w0, [x0]
 458:	b	5f8 <handle_symlink+0x3a4>
 45c:	ldr	x1, [sp, #72]
 460:	ldr	x0, [sp, #112]
 464:	add	x0, x1, x0
 468:	ldr	x1, [sp, #88]
 46c:	bl	0 <grub_strcpy>
 470:	ldr	x0, [sp, #88]
 474:	bl	0 <grub_free>
 478:	ldr	x1, [sp, #72]
 47c:	ldr	x0, [sp, #112]
 480:	add	x0, x1, x0
 484:	ldrb	w0, [x0]
 488:	cmp	w0, #0x2f
 48c:	b.ne	534 <handle_symlink+0x2e0>  // b.any
 490:	ldr	x1, [sp, #72]
 494:	ldr	x0, [sp, #112]
 498:	add	x0, x1, x0
 49c:	mov	x1, x0
 4a0:	ldr	x0, [sp, #72]
 4a4:	bl	0 <grub_stpcpy>
 4a8:	str	x0, [sp, #64]
 4ac:	ldr	x1, [sp, #104]
 4b0:	ldr	x0, [sp, #64]
 4b4:	bl	0 <grub_stpcpy>
 4b8:	str	x0, [sp, #64]
 4bc:	ldr	x0, [sp, #64]
 4c0:	strb	wzr, [x0]
 4c4:	ldr	x0, [sp, #32]
 4c8:	ldr	x0, [x0]
 4cc:	ldr	x5, [sp, #72]
 4d0:	mov	x4, x0
 4d4:	adrp	x0, 0 <grub_stpcpy>
 4d8:	add	x0, x0, #0x0
 4dc:	ldr	x3, [x0]
 4e0:	adrp	x0, 0 <grub_stpcpy>
 4e4:	add	x0, x0, #0x0
 4e8:	ldr	x2, [x0]
 4ec:	mov	w1, #0x70                  	// #112
 4f0:	adrp	x0, 0 <grub_stpcpy>
 4f4:	add	x0, x0, #0x0
 4f8:	ldr	x0, [x0]
 4fc:	bl	0 <grub_real_dprintf>
 500:	ldr	x0, [sp, #32]
 504:	ldr	x0, [x0]
 508:	bl	0 <grub_free>
 50c:	ldr	x0, [sp, #72]
 510:	bl	88 <canonicalize>
 514:	ldr	x0, [sp, #32]
 518:	ldr	x1, [sp, #72]
 51c:	str	x1, [x0]
 520:	ldr	x0, [sp, #16]
 524:	mov	w1, #0x1                   	// #1
 528:	str	w1, [x0]
 52c:	mov	w0, #0x0                   	// #0
 530:	b	5f8 <handle_symlink+0x3a4>
 534:	ldr	x0, [sp, #112]
 538:	cmp	x0, #0x0
 53c:	b.eq	570 <handle_symlink+0x31c>  // b.none
 540:	ldr	x0, [sp, #32]
 544:	ldr	x0, [x0]
 548:	ldr	x2, [sp, #112]
 54c:	mov	x1, x0
 550:	ldr	x0, [sp, #72]
 554:	bl	5c <grub_memcpy>
 558:	ldr	x0, [sp, #112]
 55c:	sub	x0, x0, #0x1
 560:	ldr	x1, [sp, #72]
 564:	add	x0, x1, x0
 568:	mov	w1, #0x2f                  	// #47
 56c:	strb	w1, [x0]
 570:	ldr	x1, [sp, #112]
 574:	ldr	x0, [sp, #80]
 578:	add	x0, x1, x0
 57c:	ldr	x1, [sp, #72]
 580:	add	x0, x1, x0
 584:	ldr	x1, [sp, #104]
 588:	bl	0 <grub_strcpy>
 58c:	ldr	x0, [sp, #32]
 590:	ldr	x0, [x0]
 594:	ldr	x5, [sp, #72]
 598:	mov	x4, x0
 59c:	adrp	x0, 0 <grub_stpcpy>
 5a0:	add	x0, x0, #0x0
 5a4:	ldr	x3, [x0]
 5a8:	adrp	x0, 0 <grub_stpcpy>
 5ac:	add	x0, x0, #0x0
 5b0:	ldr	x2, [x0]
 5b4:	mov	w1, #0x7f                  	// #127
 5b8:	adrp	x0, 0 <grub_stpcpy>
 5bc:	add	x0, x0, #0x0
 5c0:	ldr	x0, [x0]
 5c4:	bl	0 <grub_real_dprintf>
 5c8:	ldr	x0, [sp, #32]
 5cc:	ldr	x0, [x0]
 5d0:	bl	0 <grub_free>
 5d4:	ldr	x0, [sp, #72]
 5d8:	bl	88 <canonicalize>
 5dc:	ldr	x0, [sp, #32]
 5e0:	ldr	x1, [sp, #72]
 5e4:	str	x1, [x0]
 5e8:	ldr	x0, [sp, #16]
 5ec:	mov	w1, #0x1                   	// #1
 5f0:	str	w1, [x0]
 5f4:	mov	w0, #0x0                   	// #0
 5f8:	ldp	x29, x30, [sp], #128
 5fc:	ret
	...

0000000000000620 <grub_archelp_dir>:
 620:	stp	x29, x30, [sp, #-192]!
 624:	mov	x29, sp
 628:	str	x19, [sp, #16]
 62c:	str	x0, [sp, #72]
 630:	str	x1, [sp, #64]
 634:	str	x2, [sp, #56]
 638:	str	x3, [sp, #48]
 63c:	str	x4, [sp, #40]
 640:	str	wzr, [sp, #164]
 644:	ldr	x0, [sp, #56]
 648:	add	x0, x0, #0x1
 64c:	bl	0 <grub_strdup>
 650:	str	x0, [sp, #120]
 654:	ldr	x0, [sp, #120]
 658:	cmp	x0, #0x0
 65c:	b.ne	674 <grub_archelp_dir+0x54>  // b.any
 660:	adrp	x0, 0 <grub_stpcpy>
 664:	add	x0, x0, #0x0
 668:	ldr	x0, [x0]
 66c:	ldr	w0, [x0]
 670:	b	998 <grub_archelp_dir+0x378>
 674:	ldr	x0, [sp, #120]
 678:	bl	88 <canonicalize>
 67c:	ldr	x19, [sp, #120]
 680:	ldr	x0, [sp, #120]
 684:	bl	0 <grub_strlen>
 688:	sub	x0, x0, #0x1
 68c:	add	x0, x19, x0
 690:	str	x0, [sp, #176]
 694:	b	6ac <grub_archelp_dir+0x8c>
 698:	ldr	x0, [sp, #176]
 69c:	strb	wzr, [x0]
 6a0:	ldr	x0, [sp, #176]
 6a4:	sub	x0, x0, #0x1
 6a8:	str	x0, [sp, #176]
 6ac:	ldr	x0, [sp, #120]
 6b0:	ldr	x1, [sp, #176]
 6b4:	cmp	x1, x0
 6b8:	b.cc	6cc <grub_archelp_dir+0xac>  // b.lo, b.ul, b.last
 6bc:	ldr	x0, [sp, #176]
 6c0:	ldrb	w0, [x0]
 6c4:	cmp	w0, #0x2f
 6c8:	b.eq	698 <grub_archelp_dir+0x78>  // b.none
 6cc:	str	xzr, [sp, #184]
 6d0:	ldr	x0, [sp, #120]
 6d4:	bl	0 <grub_strlen>
 6d8:	str	x0, [sp, #168]
 6dc:	ldr	x0, [sp, #64]
 6e0:	ldr	x4, [x0]
 6e4:	add	x2, sp, #0x70
 6e8:	add	x1, sp, #0x74
 6ec:	add	x0, sp, #0x80
 6f0:	mov	x3, x2
 6f4:	mov	x2, x1
 6f8:	mov	x1, x0
 6fc:	ldr	x0, [sp, #72]
 700:	blr	x4
 704:	cmp	w0, #0x0
 708:	b.ne	964 <grub_archelp_dir+0x344>  // b.any
 70c:	ldr	w0, [sp, #112]
 710:	cmn	w0, #0x1
 714:	b.eq	96c <grub_archelp_dir+0x34c>  // b.none
 718:	ldr	x0, [sp, #128]
 71c:	bl	88 <canonicalize>
 720:	ldr	x0, [sp, #120]
 724:	ldr	x1, [sp, #128]
 728:	ldr	x2, [sp, #168]
 72c:	bl	0 <grub_memcmp>
 730:	cmp	w0, #0x0
 734:	b.ne	950 <grub_archelp_dir+0x330>  // b.any
 738:	ldr	x1, [sp, #128]
 73c:	ldr	x0, [sp, #168]
 740:	add	x0, x1, x0
 744:	ldrb	w0, [x0]
 748:	cmp	w0, #0x0
 74c:	b.eq	774 <grub_archelp_dir+0x154>  // b.none
 750:	ldr	x1, [sp, #128]
 754:	ldr	x0, [sp, #168]
 758:	add	x0, x1, x0
 75c:	ldrb	w0, [x0]
 760:	cmp	w0, #0x2f
 764:	b.eq	774 <grub_archelp_dir+0x154>  // b.none
 768:	ldr	x0, [sp, #168]
 76c:	cmp	x0, #0x0
 770:	b.ne	950 <grub_archelp_dir+0x330>  // b.any
 774:	ldr	x1, [sp, #128]
 778:	ldr	x0, [sp, #168]
 77c:	add	x0, x1, x0
 780:	str	x0, [sp, #152]
 784:	b	794 <grub_archelp_dir+0x174>
 788:	ldr	x0, [sp, #152]
 78c:	add	x0, x0, #0x1
 790:	str	x0, [sp, #152]
 794:	ldr	x0, [sp, #152]
 798:	ldrb	w0, [x0]
 79c:	cmp	w0, #0x2f
 7a0:	b.eq	788 <grub_archelp_dir+0x168>  // b.none
 7a4:	mov	w1, #0x2f                  	// #47
 7a8:	ldr	x0, [sp, #152]
 7ac:	bl	0 <grub_strchr>
 7b0:	str	x0, [sp, #144]
 7b4:	ldr	x0, [sp, #144]
 7b8:	cmp	x0, #0x0
 7bc:	b.eq	7c8 <grub_archelp_dir+0x1a8>  // b.none
 7c0:	ldr	x0, [sp, #144]
 7c4:	strb	wzr, [x0]
 7c8:	ldr	x0, [sp, #184]
 7cc:	cmp	x0, #0x0
 7d0:	b.eq	7ec <grub_archelp_dir+0x1cc>  // b.none
 7d4:	ldr	x0, [sp, #128]
 7d8:	mov	x1, x0
 7dc:	ldr	x0, [sp, #184]
 7e0:	bl	0 <grub_strcmp>
 7e4:	cmp	w0, #0x0
 7e8:	b.eq	8ac <grub_archelp_dir+0x28c>  // b.none
 7ec:	ldr	x0, [sp, #152]
 7f0:	ldrb	w0, [x0]
 7f4:	cmp	w0, #0x0
 7f8:	b.eq	8ac <grub_archelp_dir+0x28c>  // b.none
 7fc:	add	x0, sp, #0x60
 800:	mov	x2, #0x10                  	// #16
 804:	mov	w1, #0x0                   	// #0
 808:	bl	0 <grub_memset>
 80c:	ldr	x0, [sp, #144]
 810:	cmp	x0, #0x0
 814:	b.ne	828 <grub_archelp_dir+0x208>  // b.any
 818:	ldr	w0, [sp, #112]
 81c:	and	w0, w0, #0xe000
 820:	cmp	w0, #0x4, lsl #12
 824:	b.ne	830 <grub_archelp_dir+0x210>  // b.any
 828:	mov	w0, #0x1                   	// #1
 82c:	b	834 <grub_archelp_dir+0x214>
 830:	mov	w0, #0x0                   	// #0
 834:	and	w0, w0, #0x1
 838:	and	w1, w0, #0xff
 83c:	ldrb	w0, [sp, #96]
 840:	bfxil	w0, w1, #0, #1
 844:	strb	w0, [sp, #96]
 848:	ldr	w0, [sp, #112]
 84c:	cmp	w0, #0x0
 850:	b.lt	868 <grub_archelp_dir+0x248>  // b.tstop
 854:	ldr	w0, [sp, #116]
 858:	str	w0, [sp, #100]
 85c:	ldrb	w0, [sp, #96]
 860:	orr	w0, w0, #0x2
 864:	strb	w0, [sp, #96]
 868:	add	x0, sp, #0x60
 86c:	ldr	x3, [sp, #48]
 870:	ldr	x2, [sp, #40]
 874:	mov	x1, x0
 878:	ldr	x0, [sp, #152]
 87c:	blr	x3
 880:	cmp	w0, #0x0
 884:	b.eq	894 <grub_archelp_dir+0x274>  // b.none
 888:	ldr	x0, [sp, #128]
 88c:	bl	0 <grub_free>
 890:	b	978 <grub_archelp_dir+0x358>
 894:	ldr	x0, [sp, #184]
 898:	bl	0 <grub_free>
 89c:	ldr	x0, [sp, #128]
 8a0:	str	x0, [sp, #184]
 8a4:	nop
 8a8:	b	95c <grub_archelp_dir+0x33c>
 8ac:	str	wzr, [sp, #92]
 8b0:	ldr	x0, [sp, #128]
 8b4:	ldr	w2, [sp, #112]
 8b8:	add	x3, sp, #0x5c
 8bc:	add	x1, sp, #0x78
 8c0:	mov	x5, x3
 8c4:	mov	w4, w2
 8c8:	mov	x3, x1
 8cc:	mov	x2, x0
 8d0:	ldr	x1, [sp, #64]
 8d4:	ldr	x0, [sp, #72]
 8d8:	bl	254 <handle_symlink>
 8dc:	str	w0, [sp, #140]
 8e0:	ldr	x0, [sp, #128]
 8e4:	bl	0 <grub_free>
 8e8:	ldr	w0, [sp, #140]
 8ec:	cmp	w0, #0x0
 8f0:	b.ne	974 <grub_archelp_dir+0x354>  // b.any
 8f4:	ldr	w0, [sp, #92]
 8f8:	cmp	w0, #0x0
 8fc:	b.eq	95c <grub_archelp_dir+0x33c>  // b.none
 900:	ldr	x0, [sp, #120]
 904:	bl	0 <grub_strlen>
 908:	str	x0, [sp, #168]
 90c:	ldr	w0, [sp, #164]
 910:	add	w0, w0, #0x1
 914:	str	w0, [sp, #164]
 918:	ldr	w0, [sp, #164]
 91c:	cmp	w0, #0x8
 920:	b.ne	93c <grub_archelp_dir+0x31c>  // b.any
 924:	adrp	x0, 0 <grub_stpcpy>
 928:	add	x0, x0, #0x0
 92c:	ldr	x1, [x0]
 930:	mov	w0, #0x19                  	// #25
 934:	bl	0 <grub_error>
 938:	b	978 <grub_archelp_dir+0x358>
 93c:	ldr	x0, [sp, #64]
 940:	ldr	x1, [x0, #16]
 944:	ldr	x0, [sp, #72]
 948:	blr	x1
 94c:	b	95c <grub_archelp_dir+0x33c>
 950:	ldr	x0, [sp, #128]
 954:	bl	0 <grub_free>
 958:	b	6dc <grub_archelp_dir+0xbc>
 95c:	nop
 960:	b	6dc <grub_archelp_dir+0xbc>
 964:	nop
 968:	b	978 <grub_archelp_dir+0x358>
 96c:	nop
 970:	b	978 <grub_archelp_dir+0x358>
 974:	nop
 978:	ldr	x0, [sp, #120]
 97c:	bl	0 <grub_free>
 980:	ldr	x0, [sp, #184]
 984:	bl	0 <grub_free>
 988:	adrp	x0, 0 <grub_stpcpy>
 98c:	add	x0, x0, #0x0
 990:	ldr	x0, [x0]
 994:	ldr	w0, [x0]
 998:	ldr	x19, [sp, #16]
 99c:	ldp	x29, x30, [sp], #192
 9a0:	ret
 9a4:	nop
	...

00000000000009b8 <grub_archelp_open>:
 9b8:	stp	x29, x30, [sp, #-96]!
 9bc:	mov	x29, sp
 9c0:	str	x0, [sp, #40]
 9c4:	str	x1, [sp, #32]
 9c8:	str	x2, [sp, #24]
 9cc:	ldr	x0, [sp, #24]
 9d0:	add	x0, x0, #0x1
 9d4:	bl	0 <grub_strdup>
 9d8:	str	x0, [sp, #72]
 9dc:	str	wzr, [sp, #92]
 9e0:	ldr	x0, [sp, #72]
 9e4:	cmp	x0, #0x0
 9e8:	b.ne	a00 <grub_archelp_open+0x48>  // b.any
 9ec:	adrp	x0, 0 <grub_stpcpy>
 9f0:	add	x0, x0, #0x0
 9f4:	ldr	x0, [x0]
 9f8:	ldr	w0, [x0]
 9fc:	b	b54 <grub_archelp_open+0x19c>
 a00:	ldr	x0, [sp, #72]
 a04:	bl	88 <canonicalize>
 a08:	ldr	x0, [sp, #32]
 a0c:	ldr	x4, [x0]
 a10:	add	x2, sp, #0x44
 a14:	add	x1, sp, #0x40
 a18:	add	x0, sp, #0x50
 a1c:	mov	x3, x2
 a20:	mov	x2, x1
 a24:	mov	x1, x0
 a28:	ldr	x0, [sp, #40]
 a2c:	blr	x4
 a30:	cmp	w0, #0x0
 a34:	b.ne	b38 <grub_archelp_open+0x180>  // b.any
 a38:	ldr	w0, [sp, #68]
 a3c:	cmn	w0, #0x1
 a40:	b.ne	a60 <grub_archelp_open+0xa8>  // b.any
 a44:	ldr	x2, [sp, #24]
 a48:	adrp	x0, 0 <grub_stpcpy>
 a4c:	add	x0, x0, #0x0
 a50:	ldr	x1, [x0]
 a54:	mov	w0, #0x5                   	// #5
 a58:	bl	0 <grub_error>
 a5c:	b	b3c <grub_archelp_open+0x184>
 a60:	ldr	x0, [sp, #80]
 a64:	bl	88 <canonicalize>
 a68:	ldr	x0, [sp, #80]
 a6c:	ldr	w2, [sp, #68]
 a70:	add	x3, sp, #0x3c
 a74:	add	x1, sp, #0x48
 a78:	mov	x5, x3
 a7c:	mov	w4, w2
 a80:	mov	x3, x1
 a84:	mov	x2, x0
 a88:	ldr	x1, [sp, #32]
 a8c:	ldr	x0, [sp, #40]
 a90:	bl	254 <handle_symlink>
 a94:	cmp	w0, #0x0
 a98:	b.eq	aa8 <grub_archelp_open+0xf0>  // b.none
 a9c:	ldr	x0, [sp, #80]
 aa0:	bl	0 <grub_free>
 aa4:	b	b3c <grub_archelp_open+0x184>
 aa8:	ldr	w0, [sp, #60]
 aac:	cmp	w0, #0x0
 ab0:	b.eq	af4 <grub_archelp_open+0x13c>  // b.none
 ab4:	ldr	x0, [sp, #32]
 ab8:	ldr	x1, [x0, #16]
 abc:	ldr	x0, [sp, #40]
 ac0:	blr	x1
 ac4:	ldr	w0, [sp, #92]
 ac8:	add	w0, w0, #0x1
 acc:	str	w0, [sp, #92]
 ad0:	ldr	w0, [sp, #92]
 ad4:	cmp	w0, #0x8
 ad8:	b.ne	b20 <grub_archelp_open+0x168>  // b.any
 adc:	adrp	x0, 0 <grub_stpcpy>
 ae0:	add	x0, x0, #0x0
 ae4:	ldr	x1, [x0]
 ae8:	mov	w0, #0x19                  	// #25
 aec:	bl	0 <grub_error>
 af0:	b	b3c <grub_archelp_open+0x184>
 af4:	ldr	x0, [sp, #72]
 af8:	ldr	x1, [sp, #80]
 afc:	bl	0 <grub_strcmp>
 b00:	cmp	w0, #0x0
 b04:	b.ne	b28 <grub_archelp_open+0x170>  // b.any
 b08:	ldr	x0, [sp, #80]
 b0c:	bl	0 <grub_free>
 b10:	ldr	x0, [sp, #72]
 b14:	bl	0 <grub_free>
 b18:	mov	w0, #0x0                   	// #0
 b1c:	b	b54 <grub_archelp_open+0x19c>
 b20:	nop
 b24:	b	b2c <grub_archelp_open+0x174>
 b28:	nop
 b2c:	ldr	x0, [sp, #80]
 b30:	bl	0 <grub_free>
 b34:	b	a08 <grub_archelp_open+0x50>
 b38:	nop
 b3c:	ldr	x0, [sp, #72]
 b40:	bl	0 <grub_free>
 b44:	adrp	x0, 0 <grub_stpcpy>
 b48:	add	x0, x0, #0x0
 b4c:	ldr	x0, [x0]
 b50:	ldr	w0, [x0]
 b54:	ldp	x29, x30, [sp], #96
 b58:	ret
 b5c:	nop
	...
