
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-dump_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004021e8 <.init>:
  4021e8:	stp	x29, x30, [sp, #-16]!
  4021ec:	mov	x29, sp
  4021f0:	bl	403254 <ferror@plt+0x9d4>
  4021f4:	ldp	x29, x30, [sp], #16
  4021f8:	ret

Disassembly of section .plt:

0000000000402200 <memcpy@plt-0x20>:
  402200:	stp	x16, x30, [sp, #-16]!
  402204:	adrp	x16, 49d000 <_obstack_memory_used@@Base+0x406d8>
  402208:	ldr	x17, [x16, #4088]
  40220c:	add	x16, x16, #0xff8
  402210:	br	x17
  402214:	nop
  402218:	nop
  40221c:	nop

0000000000402220 <memcpy@plt>:
  402220:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402224:	ldr	x17, [x16]
  402228:	add	x16, x16, #0x0
  40222c:	br	x17

0000000000402230 <memmove@plt>:
  402230:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402234:	ldr	x17, [x16, #8]
  402238:	add	x16, x16, #0x8
  40223c:	br	x17

0000000000402240 <ngettext@plt>:
  402240:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402244:	ldr	x17, [x16, #16]
  402248:	add	x16, x16, #0x10
  40224c:	br	x17

0000000000402250 <fwrite_unlocked@plt>:
  402250:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402254:	ldr	x17, [x16, #24]
  402258:	add	x16, x16, #0x18
  40225c:	br	x17

0000000000402260 <strtoul@plt>:
  402260:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402264:	ldr	x17, [x16, #32]
  402268:	add	x16, x16, #0x20
  40226c:	br	x17

0000000000402270 <strlen@plt>:
  402270:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402274:	ldr	x17, [x16, #40]
  402278:	add	x16, x16, #0x28
  40227c:	br	x17

0000000000402280 <fputs@plt>:
  402280:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402284:	ldr	x17, [x16, #48]
  402288:	add	x16, x16, #0x30
  40228c:	br	x17

0000000000402290 <mbstowcs@plt>:
  402290:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402294:	ldr	x17, [x16, #56]
  402298:	add	x16, x16, #0x38
  40229c:	br	x17

00000000004022a0 <exit@plt>:
  4022a0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4022a4:	ldr	x17, [x16, #64]
  4022a8:	add	x16, x16, #0x40
  4022ac:	br	x17

00000000004022b0 <sbrk@plt>:
  4022b0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4022b4:	ldr	x17, [x16, #72]
  4022b8:	add	x16, x16, #0x48
  4022bc:	br	x17

00000000004022c0 <strnlen@plt>:
  4022c0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4022c4:	ldr	x17, [x16, #80]
  4022c8:	add	x16, x16, #0x50
  4022cc:	br	x17

00000000004022d0 <iconv_close@plt>:
  4022d0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4022d4:	ldr	x17, [x16, #88]
  4022d8:	add	x16, x16, #0x58
  4022dc:	br	x17

00000000004022e0 <setbuf@plt>:
  4022e0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4022e4:	ldr	x17, [x16, #96]
  4022e8:	add	x16, x16, #0x60
  4022ec:	br	x17

00000000004022f0 <readlink@plt>:
  4022f0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #104]
  4022f8:	add	x16, x16, #0x68
  4022fc:	br	x17

0000000000402300 <ftell@plt>:
  402300:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402304:	ldr	x17, [x16, #112]
  402308:	add	x16, x16, #0x70
  40230c:	br	x17

0000000000402310 <sprintf@plt>:
  402310:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402314:	ldr	x17, [x16, #120]
  402318:	add	x16, x16, #0x78
  40231c:	br	x17

0000000000402320 <opendir@plt>:
  402320:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402324:	ldr	x17, [x16, #128]
  402328:	add	x16, x16, #0x80
  40232c:	br	x17

0000000000402330 <__cxa_atexit@plt>:
  402330:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402334:	ldr	x17, [x16, #136]
  402338:	add	x16, x16, #0x88
  40233c:	br	x17

0000000000402340 <fputc@plt>:
  402340:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402344:	ldr	x17, [x16, #144]
  402348:	add	x16, x16, #0x90
  40234c:	br	x17

0000000000402350 <qsort@plt>:
  402350:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402354:	ldr	x17, [x16, #152]
  402358:	add	x16, x16, #0x98
  40235c:	br	x17

0000000000402360 <snprintf@plt>:
  402360:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402364:	ldr	x17, [x16, #160]
  402368:	add	x16, x16, #0xa0
  40236c:	br	x17

0000000000402370 <localtime@plt>:
  402370:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402374:	ldr	x17, [x16, #168]
  402378:	add	x16, x16, #0xa8
  40237c:	br	x17

0000000000402380 <fclose@plt>:
  402380:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402384:	ldr	x17, [x16, #176]
  402388:	add	x16, x16, #0xb0
  40238c:	br	x17

0000000000402390 <getpid@plt>:
  402390:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402394:	ldr	x17, [x16, #184]
  402398:	add	x16, x16, #0xb8
  40239c:	br	x17

00000000004023a0 <nl_langinfo@plt>:
  4023a0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #192]
  4023a8:	add	x16, x16, #0xc0
  4023ac:	br	x17

00000000004023b0 <fopen@plt>:
  4023b0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #200]
  4023b8:	add	x16, x16, #0xc8
  4023bc:	br	x17

00000000004023c0 <time@plt>:
  4023c0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #208]
  4023c8:	add	x16, x16, #0xd0
  4023cc:	br	x17

00000000004023d0 <malloc@plt>:
  4023d0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #216]
  4023d8:	add	x16, x16, #0xd8
  4023dc:	br	x17

00000000004023e0 <open@plt>:
  4023e0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #224]
  4023e8:	add	x16, x16, #0xe0
  4023ec:	br	x17

00000000004023f0 <wcswidth@plt>:
  4023f0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #232]
  4023f8:	add	x16, x16, #0xe8
  4023fc:	br	x17

0000000000402400 <strncmp@plt>:
  402400:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402404:	ldr	x17, [x16, #240]
  402408:	add	x16, x16, #0xf0
  40240c:	br	x17

0000000000402410 <bindtextdomain@plt>:
  402410:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402414:	ldr	x17, [x16, #248]
  402418:	add	x16, x16, #0xf8
  40241c:	br	x17

0000000000402420 <fileno_unlocked@plt>:
  402420:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402424:	ldr	x17, [x16, #256]
  402428:	add	x16, x16, #0x100
  40242c:	br	x17

0000000000402430 <__libc_start_main@plt>:
  402430:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402434:	ldr	x17, [x16, #264]
  402438:	add	x16, x16, #0x108
  40243c:	br	x17

0000000000402440 <memset@plt>:
  402440:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402444:	ldr	x17, [x16, #272]
  402448:	add	x16, x16, #0x110
  40244c:	br	x17

0000000000402450 <fdopen@plt>:
  402450:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402454:	ldr	x17, [x16, #280]
  402458:	add	x16, x16, #0x118
  40245c:	br	x17

0000000000402460 <calloc@plt>:
  402460:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402464:	ldr	x17, [x16, #288]
  402468:	add	x16, x16, #0x120
  40246c:	br	x17

0000000000402470 <strcasecmp@plt>:
  402470:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402474:	ldr	x17, [x16, #296]
  402478:	add	x16, x16, #0x128
  40247c:	br	x17

0000000000402480 <gmtime@plt>:
  402480:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402484:	ldr	x17, [x16, #304]
  402488:	add	x16, x16, #0x130
  40248c:	br	x17

0000000000402490 <readdir@plt>:
  402490:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402494:	ldr	x17, [x16, #312]
  402498:	add	x16, x16, #0x138
  40249c:	br	x17

00000000004024a0 <realloc@plt>:
  4024a0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #320]
  4024a8:	add	x16, x16, #0x140
  4024ac:	br	x17

00000000004024b0 <getpagesize@plt>:
  4024b0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #328]
  4024b8:	add	x16, x16, #0x148
  4024bc:	br	x17

00000000004024c0 <strdup@plt>:
  4024c0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #336]
  4024c8:	add	x16, x16, #0x150
  4024cc:	br	x17

00000000004024d0 <closedir@plt>:
  4024d0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #344]
  4024d8:	add	x16, x16, #0x158
  4024dc:	br	x17

00000000004024e0 <strerror@plt>:
  4024e0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #352]
  4024e8:	add	x16, x16, #0x160
  4024ec:	br	x17

00000000004024f0 <close@plt>:
  4024f0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #360]
  4024f8:	add	x16, x16, #0x168
  4024fc:	br	x17

0000000000402500 <strrchr@plt>:
  402500:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402504:	ldr	x17, [x16, #368]
  402508:	add	x16, x16, #0x170
  40250c:	br	x17

0000000000402510 <__gmon_start__@plt>:
  402510:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402514:	ldr	x17, [x16, #376]
  402518:	add	x16, x16, #0x178
  40251c:	br	x17

0000000000402520 <write@plt>:
  402520:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402524:	ldr	x17, [x16, #384]
  402528:	add	x16, x16, #0x180
  40252c:	br	x17

0000000000402530 <fseek@plt>:
  402530:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402534:	ldr	x17, [x16, #392]
  402538:	add	x16, x16, #0x188
  40253c:	br	x17

0000000000402540 <abort@plt>:
  402540:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402544:	ldr	x17, [x16, #400]
  402548:	add	x16, x16, #0x190
  40254c:	br	x17

0000000000402550 <__overflow@plt>:
  402550:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402554:	ldr	x17, [x16, #408]
  402558:	add	x16, x16, #0x198
  40255c:	br	x17

0000000000402560 <feof@plt>:
  402560:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402564:	ldr	x17, [x16, #416]
  402568:	add	x16, x16, #0x1a0
  40256c:	br	x17

0000000000402570 <puts@plt>:
  402570:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402574:	ldr	x17, [x16, #424]
  402578:	add	x16, x16, #0x1a8
  40257c:	br	x17

0000000000402580 <fread_unlocked@plt>:
  402580:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402584:	ldr	x17, [x16, #432]
  402588:	add	x16, x16, #0x1b0
  40258c:	br	x17

0000000000402590 <memcmp@plt>:
  402590:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402594:	ldr	x17, [x16, #440]
  402598:	add	x16, x16, #0x1b8
  40259c:	br	x17

00000000004025a0 <pthread_once@plt>:
  4025a0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #448]
  4025a8:	add	x16, x16, #0x1c0
  4025ac:	br	x17

00000000004025b0 <textdomain@plt>:
  4025b0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #456]
  4025b8:	add	x16, x16, #0x1c8
  4025bc:	br	x17

00000000004025c0 <getopt_long@plt>:
  4025c0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #464]
  4025c8:	add	x16, x16, #0x1d0
  4025cc:	br	x17

00000000004025d0 <strcmp@plt>:
  4025d0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #472]
  4025d8:	add	x16, x16, #0x1d8
  4025dc:	br	x17

00000000004025e0 <iconv@plt>:
  4025e0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #480]
  4025e8:	add	x16, x16, #0x1e0
  4025ec:	br	x17

00000000004025f0 <mmap@plt>:
  4025f0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #488]
  4025f8:	add	x16, x16, #0x1e8
  4025fc:	br	x17

0000000000402600 <strtol@plt>:
  402600:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402604:	ldr	x17, [x16, #496]
  402608:	add	x16, x16, #0x1f0
  40260c:	br	x17

0000000000402610 <fread@plt>:
  402610:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402614:	ldr	x17, [x16, #504]
  402618:	add	x16, x16, #0x1f8
  40261c:	br	x17

0000000000402620 <dl_iterate_phdr@plt>:
  402620:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402624:	ldr	x17, [x16, #512]
  402628:	add	x16, x16, #0x200
  40262c:	br	x17

0000000000402630 <dgettext@plt>:
  402630:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402634:	ldr	x17, [x16, #520]
  402638:	add	x16, x16, #0x208
  40263c:	br	x17

0000000000402640 <free@plt>:
  402640:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402644:	ldr	x17, [x16, #528]
  402648:	add	x16, x16, #0x210
  40264c:	br	x17

0000000000402650 <ungetc@plt>:
  402650:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402654:	ldr	x17, [x16, #536]
  402658:	add	x16, x16, #0x218
  40265c:	br	x17

0000000000402660 <freopen@plt>:
  402660:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402664:	ldr	x17, [x16, #544]
  402668:	add	x16, x16, #0x220
  40266c:	br	x17

0000000000402670 <strchr@plt>:
  402670:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402674:	ldr	x17, [x16, #552]
  402678:	add	x16, x16, #0x228
  40267c:	br	x17

0000000000402680 <fwrite@plt>:
  402680:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402684:	ldr	x17, [x16, #560]
  402688:	add	x16, x16, #0x230
  40268c:	br	x17

0000000000402690 <fcntl@plt>:
  402690:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402694:	ldr	x17, [x16, #568]
  402698:	add	x16, x16, #0x238
  40269c:	br	x17

00000000004026a0 <munmap@plt>:
  4026a0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #576]
  4026a8:	add	x16, x16, #0x240
  4026ac:	br	x17

00000000004026b0 <fflush@plt>:
  4026b0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #584]
  4026b8:	add	x16, x16, #0x248
  4026bc:	br	x17

00000000004026c0 <strcpy@plt>:
  4026c0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #592]
  4026c8:	add	x16, x16, #0x250
  4026cc:	br	x17

00000000004026d0 <iconv_open@plt>:
  4026d0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #600]
  4026d8:	add	x16, x16, #0x258
  4026dc:	br	x17

00000000004026e0 <vsprintf@plt>:
  4026e0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #608]
  4026e8:	add	x16, x16, #0x260
  4026ec:	br	x17

00000000004026f0 <__lxstat@plt>:
  4026f0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #616]
  4026f8:	add	x16, x16, #0x268
  4026fc:	br	x17

0000000000402700 <read@plt>:
  402700:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402704:	ldr	x17, [x16, #624]
  402708:	add	x16, x16, #0x270
  40270c:	br	x17

0000000000402710 <memchr@plt>:
  402710:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402714:	ldr	x17, [x16, #632]
  402718:	add	x16, x16, #0x278
  40271c:	br	x17

0000000000402720 <isatty@plt>:
  402720:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402724:	ldr	x17, [x16, #640]
  402728:	add	x16, x16, #0x280
  40272c:	br	x17

0000000000402730 <asctime@plt>:
  402730:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402734:	ldr	x17, [x16, #648]
  402738:	add	x16, x16, #0x288
  40273c:	br	x17

0000000000402740 <__fxstat@plt>:
  402740:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402744:	ldr	x17, [x16, #656]
  402748:	add	x16, x16, #0x290
  40274c:	br	x17

0000000000402750 <strstr@plt>:
  402750:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402754:	ldr	x17, [x16, #664]
  402758:	add	x16, x16, #0x298
  40275c:	br	x17

0000000000402760 <realpath@plt>:
  402760:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402764:	ldr	x17, [x16, #672]
  402768:	add	x16, x16, #0x2a0
  40276c:	br	x17

0000000000402770 <fputs_unlocked@plt>:
  402770:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402774:	ldr	x17, [x16, #680]
  402778:	add	x16, x16, #0x2a8
  40277c:	br	x17

0000000000402780 <__fsetlocking@plt>:
  402780:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402784:	ldr	x17, [x16, #688]
  402788:	add	x16, x16, #0x2b0
  40278c:	br	x17

0000000000402790 <strcspn@plt>:
  402790:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402794:	ldr	x17, [x16, #696]
  402798:	add	x16, x16, #0x2b8
  40279c:	br	x17

00000000004027a0 <vfprintf@plt>:
  4027a0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #704]
  4027a8:	add	x16, x16, #0x2c0
  4027ac:	br	x17

00000000004027b0 <printf@plt>:
  4027b0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #712]
  4027b8:	add	x16, x16, #0x2c8
  4027bc:	br	x17

00000000004027c0 <__errno_location@plt>:
  4027c0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #720]
  4027c8:	add	x16, x16, #0x2d0
  4027cc:	br	x17

00000000004027d0 <getenv@plt>:
  4027d0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #728]
  4027d8:	add	x16, x16, #0x2d8
  4027dc:	br	x17

00000000004027e0 <putchar@plt>:
  4027e0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #736]
  4027e8:	add	x16, x16, #0x2e0
  4027ec:	br	x17

00000000004027f0 <__xstat@plt>:
  4027f0:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #744]
  4027f8:	add	x16, x16, #0x2e8
  4027fc:	br	x17

0000000000402800 <pthread_mutex_lock@plt>:
  402800:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402804:	ldr	x17, [x16, #752]
  402808:	add	x16, x16, #0x2f0
  40280c:	br	x17

0000000000402810 <syscall@plt>:
  402810:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402814:	ldr	x17, [x16, #760]
  402818:	add	x16, x16, #0x2f8
  40281c:	br	x17

0000000000402820 <pthread_mutex_unlock@plt>:
  402820:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402824:	ldr	x17, [x16, #768]
  402828:	add	x16, x16, #0x300
  40282c:	br	x17

0000000000402830 <gettext@plt>:
  402830:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402834:	ldr	x17, [x16, #776]
  402838:	add	x16, x16, #0x308
  40283c:	br	x17

0000000000402840 <fprintf@plt>:
  402840:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402844:	ldr	x17, [x16, #784]
  402848:	add	x16, x16, #0x310
  40284c:	br	x17

0000000000402850 <__uflow@plt>:
  402850:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402854:	ldr	x17, [x16, #792]
  402858:	add	x16, x16, #0x318
  40285c:	br	x17

0000000000402860 <ioctl@plt>:
  402860:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402864:	ldr	x17, [x16, #800]
  402868:	add	x16, x16, #0x320
  40286c:	br	x17

0000000000402870 <setlocale@plt>:
  402870:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402874:	ldr	x17, [x16, #808]
  402878:	add	x16, x16, #0x328
  40287c:	br	x17

0000000000402880 <ferror@plt>:
  402880:	adrp	x16, 49e000 <memcpy@GLIBC_2.17>
  402884:	ldr	x17, [x16, #816]
  402888:	add	x16, x16, #0x330
  40288c:	br	x17

Disassembly of section .text:

0000000000402890 <_obstack_begin@@Base-0x59ca8>:
  402890:	stp	x29, x30, [sp, #-16]!
  402894:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402898:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40289c:	mov	x29, sp
  4028a0:	add	x2, x2, #0x3b8
  4028a4:	add	x0, x0, #0x3c8
  4028a8:	mov	w1, #0x4a                  	// #74
  4028ac:	bl	4028b0 <ferror@plt+0x30>
  4028b0:	mov	w7, w1
  4028b4:	mov	x6, x2
  4028b8:	stp	x29, x30, [sp, #-16]!
  4028bc:	mov	x29, sp
  4028c0:	bl	4050c0 <ferror@plt+0x2840>
  4028c4:	mov	x2, x0
  4028c8:	mov	w3, w7
  4028cc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4028d0:	mov	x1, x6
  4028d4:	add	x0, x0, #0x240
  4028d8:	bl	405bd8 <ferror@plt+0x3358>
  4028dc:	stp	x29, x30, [sp, #-16]!
  4028e0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4028e4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4028e8:	mov	x29, sp
  4028ec:	add	x2, x2, #0x708
  4028f0:	add	x0, x0, #0x6e0
  4028f4:	mov	w1, #0x6bc                 	// #1724
  4028f8:	bl	4028b0 <ferror@plt+0x30>
  4028fc:	stp	x29, x30, [sp, #-16]!
  402900:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  402904:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  402908:	mov	x29, sp
  40290c:	add	x2, x2, #0x878
  402910:	add	x0, x0, #0x890
  402914:	mov	w1, #0x36b                 	// #875
  402918:	bl	4028b0 <ferror@plt+0x30>
  40291c:	stp	x29, x30, [sp, #-16]!
  402920:	mov	x0, #0x8                   	// #8
  402924:	mov	x29, sp
  402928:	bl	45dc10 <_obstack_memory_used@@Base+0x12e8>
  40292c:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x406d8>
  402930:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x406d8>
  402934:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  402938:	ldr	x3, [x3, #4000]
  40293c:	ldr	x2, [x2, #4032]
  402940:	add	x3, x3, #0x10
  402944:	ldr	x1, [x1, #3928]
  402948:	str	x3, [x0]
  40294c:	bl	45ea28 <_obstack_memory_used@@Base+0x2100>
  402950:	stp	x29, x30, [sp, #-192]!
  402954:	mov	x29, sp
  402958:	stp	x19, x20, [sp, #16]
  40295c:	mov	w20, w0
  402960:	ldr	x19, [x1]
  402964:	stp	x21, x22, [sp, #32]
  402968:	mov	x0, x19
  40296c:	stp	x23, x24, [sp, #48]
  402970:	stp	x25, x26, [sp, #64]
  402974:	stp	x27, x28, [sp, #80]
  402978:	mov	x27, x1
  40297c:	bl	402270 <strlen@plt>
  402980:	add	x0, x19, x0
  402984:	cmp	x19, x0
  402988:	b.ne	40299c <ferror@plt+0x11c>  // b.any
  40298c:	b	4029a8 <ferror@plt+0x128>
  402990:	sub	x0, x0, #0x1
  402994:	cmp	x19, x0
  402998:	b.eq	4029a8 <ferror@plt+0x128>  // b.none
  40299c:	ldurb	w1, [x0, #-1]
  4029a0:	cmp	w1, #0x2f
  4029a4:	b.ne	402990 <ferror@plt+0x110>  // b.any
  4029a8:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4029ac:	adrp	x25, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4029b0:	adrp	x19, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4029b4:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4029b8:	str	x0, [x1, #1488]
  4029bc:	bl	45c950 <_obstack_memory_used@@Base+0x28>
  4029c0:	bl	45b130 <ferror@plt+0x588b0>
  4029c4:	adrp	x23, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4029c8:	bl	412320 <ferror@plt+0xfaa0>
  4029cc:	add	x19, x19, #0x5a8
  4029d0:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4029d4:	mov	w1, #0x0                   	// #0
  4029d8:	add	x22, x22, #0x550
  4029dc:	add	x23, x23, #0x7c8
  4029e0:	ldr	x0, [x0, #840]
  4029e4:	bl	404ad8 <ferror@plt+0x2258>
  4029e8:	add	x0, x25, #0xa80
  4029ec:	str	x0, [sp, #96]
  4029f0:	add	x21, x0, #0x128
  4029f4:	nop
  4029f8:	mov	x3, x21
  4029fc:	mov	x2, x19
  402a00:	mov	x1, x27
  402a04:	mov	w0, w20
  402a08:	mov	x4, #0x0                   	// #0
  402a0c:	bl	4025c0 <getopt_long@plt>
  402a10:	cmn	w0, #0x1
  402a14:	b.eq	402a60 <ferror@plt+0x1e0>  // b.none
  402a18:	cmp	w0, #0x70
  402a1c:	b.eq	402c40 <ferror@plt+0x3c0>  // b.none
  402a20:	b.gt	402c00 <ferror@plt+0x380>
  402a24:	cmp	w0, #0x68
  402a28:	b.eq	402c64 <ferror@plt+0x3e4>  // b.none
  402a2c:	cmp	w0, #0x6c
  402a30:	b.ne	402c4c <ferror@plt+0x3cc>  // b.any
  402a34:	mov	w0, #0x1                   	// #1
  402a38:	mov	x3, x21
  402a3c:	mov	x2, x19
  402a40:	mov	x1, x27
  402a44:	mov	x4, #0x0                   	// #0
  402a48:	str	w0, [x22, #56]
  402a4c:	mov	w0, w20
  402a50:	bl	4025c0 <getopt_long@plt>
  402a54:	cmn	w0, #0x1
  402a58:	b.ne	402a18 <ferror@plt+0x198>  // b.any
  402a5c:	nop
  402a60:	adrp	x28, 49e000 <_obstack_memory_used@@Base+0x416d8>
  402a64:	ldr	w0, [x28, #1320]
  402a68:	ldr	x21, [x27, w0, sxtw #3]
  402a6c:	cbz	x21, 402be0 <ferror@plt+0x360>
  402a70:	add	x1, x28, #0x528
  402a74:	adrp	x6, 49e000 <_obstack_memory_used@@Base+0x416d8>
  402a78:	add	x26, sp, #0xa0
  402a7c:	add	x28, x6, #0x550
  402a80:	str	x1, [sp, #104]
  402a84:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402a88:	add	x1, x1, #0x8e0
  402a8c:	str	x1, [sp, #136]
  402a90:	b	402b64 <ferror@plt+0x2e4>
  402a94:	mov	x2, x26
  402a98:	mov	w0, w19
  402a9c:	mov	w1, #0x7                   	// #7
  402aa0:	bl	402690 <fcntl@plt>
  402aa4:	cbz	w0, 402ab8 <ferror@plt+0x238>
  402aa8:	bl	4027c0 <__errno_location@plt>
  402aac:	ldr	w0, [x0]
  402ab0:	cmp	w0, #0x4
  402ab4:	b.eq	402a94 <ferror@plt+0x214>  // b.none
  402ab8:	mov	w0, w19
  402abc:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402ac0:	add	x1, x1, #0x7f0
  402ac4:	bl	45b1b0 <ferror@plt+0x58930>
  402ac8:	str	x0, [x28]
  402acc:	cbz	x0, 4030fc <ferror@plt+0x87c>
  402ad0:	mov	x1, #0x0                   	// #0
  402ad4:	mov	w22, #0x1                   	// #1
  402ad8:	str	w22, [x28, #28]
  402adc:	bl	4022e0 <setbuf@plt>
  402ae0:	bl	4039f0 <ferror@plt+0x1170>
  402ae4:	mov	w1, #0x6461                	// #25697
  402ae8:	movk	w1, #0x6763, lsl #16
  402aec:	cmp	w0, w1
  402af0:	b.eq	402cc4 <ferror@plt+0x444>  // b.none
  402af4:	rev	w23, w0
  402af8:	mov	w1, #0x6461                	// #25697
  402afc:	movk	w1, #0x6763, lsl #16
  402b00:	cmp	w23, w1
  402b04:	b.eq	4030e0 <ferror@plt+0x860>  // b.none
  402b08:	mov	w1, #0x6e6f                	// #28271
  402b0c:	movk	w1, #0x6763, lsl #16
  402b10:	cmp	w0, w1
  402b14:	b.eq	4030f0 <ferror@plt+0x870>  // b.none
  402b18:	cmp	w23, w1
  402b1c:	b.eq	403108 <ferror@plt+0x888>  // b.none
  402b20:	mov	x1, x21
  402b24:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402b28:	add	x0, x0, #0x808
  402b2c:	bl	4027b0 <printf@plt>
  402b30:	ldr	x0, [x28]
  402b34:	cbz	x0, 402b44 <ferror@plt+0x2c4>
  402b38:	bl	402380 <fclose@plt>
  402b3c:	str	xzr, [x28]
  402b40:	str	wzr, [x28, #16]
  402b44:	ldr	x0, [x28, #48]
  402b48:	bl	402640 <free@plt>
  402b4c:	str	wzr, [x28, #28]
  402b50:	ldr	x0, [sp, #104]
  402b54:	stp	xzr, xzr, [x28, #40]
  402b58:	ldr	w0, [x0]
  402b5c:	ldr	x21, [x27, w0, sxtw #3]
  402b60:	cbz	x21, 402be0 <ferror@plt+0x360>
  402b64:	ldr	x1, [sp, #104]
  402b68:	add	w0, w0, #0x1
  402b6c:	strh	wzr, [sp, #162]
  402b70:	stp	xzr, xzr, [sp, #168]
  402b74:	str	w0, [x1]
  402b78:	bl	402390 <getpid@plt>
  402b7c:	ldr	x20, [x28]
  402b80:	str	w0, [sp, #184]
  402b84:	cbnz	x20, 403140 <ferror@plt+0x8c0>
  402b88:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402b8c:	mov	w2, #0x180                 	// #384
  402b90:	mov	w1, #0x0                   	// #0
  402b94:	str	wzr, [x28, #24]
  402b98:	ldr	q0, [x0, #2672]
  402b9c:	mov	x0, x21
  402ba0:	str	wzr, [x28, #32]
  402ba4:	strh	wzr, [sp, #160]
  402ba8:	stur	q0, [x28, #8]
  402bac:	bl	4023e0 <open@plt>
  402bb0:	mov	w19, w0
  402bb4:	tbz	w0, #31, 402a94 <ferror@plt+0x214>
  402bb8:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  402bbc:	mov	x2, x21
  402bc0:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402bc4:	add	x1, x1, #0x7f8
  402bc8:	ldr	x0, [x0, #1312]
  402bcc:	bl	402840 <fprintf@plt>
  402bd0:	ldr	x0, [sp, #104]
  402bd4:	ldr	w0, [x0]
  402bd8:	ldr	x21, [x27, w0, sxtw #3]
  402bdc:	cbnz	x21, 402b64 <ferror@plt+0x2e4>
  402be0:	mov	w0, #0x0                   	// #0
  402be4:	ldp	x19, x20, [sp, #16]
  402be8:	ldp	x21, x22, [sp, #32]
  402bec:	ldp	x23, x24, [sp, #48]
  402bf0:	ldp	x25, x26, [sp, #64]
  402bf4:	ldp	x27, x28, [sp, #80]
  402bf8:	ldp	x29, x30, [sp], #192
  402bfc:	ret
  402c00:	cmp	w0, #0x76
  402c04:	b.ne	402c4c <ferror@plt+0x3cc>  // b.any
  402c08:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  402c0c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  402c10:	add	x2, x2, #0x6a8
  402c14:	add	x1, x1, #0x6a0
  402c18:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402c1c:	add	x0, x0, #0x6e8
  402c20:	bl	4027b0 <printf@plt>
  402c24:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402c28:	add	x0, x0, #0x6f8
  402c2c:	bl	402570 <puts@plt>
  402c30:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402c34:	add	x0, x0, #0x730
  402c38:	bl	402570 <puts@plt>
  402c3c:	b	4029f8 <ferror@plt+0x178>
  402c40:	mov	w0, #0x1                   	// #1
  402c44:	str	w0, [x22, #60]
  402c48:	b	4029f8 <ferror@plt+0x178>
  402c4c:	adrp	x3, 49e000 <_obstack_memory_used@@Base+0x416d8>
  402c50:	mov	w2, w0
  402c54:	mov	x1, x23
  402c58:	ldr	x0, [x3, #1312]
  402c5c:	bl	402840 <fprintf@plt>
  402c60:	b	4029f8 <ferror@plt+0x178>
  402c64:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402c68:	add	x0, x0, #0x5b0
  402c6c:	bl	402570 <puts@plt>
  402c70:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402c74:	add	x0, x0, #0x5d8
  402c78:	bl	402570 <puts@plt>
  402c7c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402c80:	add	x0, x0, #0x5f8
  402c84:	bl	402570 <puts@plt>
  402c88:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402c8c:	add	x0, x0, #0x620
  402c90:	bl	402570 <puts@plt>
  402c94:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402c98:	add	x0, x0, #0x650
  402c9c:	bl	402570 <puts@plt>
  402ca0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402ca4:	add	x0, x0, #0x680
  402ca8:	bl	402570 <puts@plt>
  402cac:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  402cb0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402cb4:	add	x1, x1, #0x6b0
  402cb8:	add	x0, x0, #0x6b0
  402cbc:	bl	4027b0 <printf@plt>
  402cc0:	b	4029f8 <ferror@plt+0x178>
  402cc4:	mov	w0, #0x6461                	// #25697
  402cc8:	mov	w24, w22
  402ccc:	movk	w0, #0x6763, lsl #16
  402cd0:	mov	w19, w22
  402cd4:	rev	w23, w0
  402cd8:	bl	4039f0 <ferror@plt+0x1170>
  402cdc:	mov	w22, w0
  402ce0:	cmp	w19, #0x0
  402ce4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402ce8:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402cec:	add	x1, x1, #0x550
  402cf0:	add	x2, x2, #0x548
  402cf4:	rev	w7, w22
  402cf8:	csel	x2, x2, x1, ne  // ne = any
  402cfc:	cmn	w24, #0x1
  402d00:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  402d04:	adrp	x5, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402d08:	add	x0, x0, #0x148
  402d0c:	add	x5, x5, #0x558
  402d10:	csel	x5, x5, x0, eq  // eq = none
  402d14:	add	x4, sp, #0x98
  402d18:	add	x3, sp, #0x90
  402d1c:	mov	x1, x21
  402d20:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402d24:	add	x0, x0, #0x820
  402d28:	str	w23, [sp, #144]
  402d2c:	str	w7, [sp, #152]
  402d30:	bl	4027b0 <printf@plt>
  402d34:	mov	w0, #0x322a                	// #12842
  402d38:	movk	w0, #0x4139, lsl #16
  402d3c:	cmp	w22, w0
  402d40:	b.eq	402d64 <ferror@plt+0x4e4>  // b.none
  402d44:	mov	w3, #0x3941                	// #14657
  402d48:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402d4c:	movk	w3, #0x2a32, lsl #16
  402d50:	mov	x2, x26
  402d54:	add	x0, x0, #0x848
  402d58:	mov	x1, x21
  402d5c:	str	w3, [sp, #160]
  402d60:	bl	4027b0 <printf@plt>
  402d64:	bl	4039f0 <ferror@plt+0x1170>
  402d68:	mov	w2, w0
  402d6c:	mov	x1, x21
  402d70:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402d74:	add	x0, x0, #0x870
  402d78:	bl	4027b0 <printf@plt>
  402d7c:	cbz	w19, 4030a0 <ferror@plt+0x820>
  402d80:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402d84:	mov	w24, #0x0                   	// #0
  402d88:	add	x0, x0, #0x8c0
  402d8c:	str	x0, [sp, #128]
  402d90:	ldr	w0, [x28, #28]
  402d94:	cmp	w0, #0x0
  402d98:	b.le	40313c <ferror@plt+0x8bc>
  402d9c:	ldr	w0, [x28, #8]
  402da0:	str	w0, [sp, #112]
  402da4:	ldr	w0, [x28, #12]
  402da8:	str	w0, [sp, #116]
  402dac:	bl	4039f0 <ferror@plt+0x1170>
  402db0:	mov	w25, w0
  402db4:	cbz	w0, 402ff8 <ferror@plt+0x778>
  402db8:	bl	4039f0 <ferror@plt+0x1170>
  402dbc:	mov	w20, w0
  402dc0:	ldr	w2, [x28, #28]
  402dc4:	cmp	w2, #0x0
  402dc8:	b.le	40313c <ferror@plt+0x8bc>
  402dcc:	ldp	w23, w1, [x28, #8]
  402dd0:	sub	w3, w25, #0x1
  402dd4:	eor	w3, w3, w25
  402dd8:	add	w23, w23, w1
  402ddc:	cmp	wzr, w3, lsr #1
  402de0:	lsr	w2, w3, #1
  402de4:	b.eq	403118 <ferror@plt+0x898>  // b.none
  402de8:	and	w0, w2, #0xff
  402dec:	cmp	w0, #0xff
  402df0:	b.ne	403038 <ferror@plt+0x7b8>  // b.any
  402df4:	mov	w22, #0x4                   	// #4
  402df8:	b	402e08 <ferror@plt+0x588>
  402dfc:	and	w0, w2, #0xff
  402e00:	cmp	w0, #0xff
  402e04:	b.ne	403040 <ferror@plt+0x7c0>  // b.any
  402e08:	sub	w5, w22, #0x2
  402e0c:	lsr	w2, w2, #8
  402e10:	sub	w22, w22, #0x1
  402e14:	cbnz	w2, 402dfc <ferror@plt+0x57c>
  402e18:	ldr	x0, [sp, #96]
  402e1c:	add	x19, x0, #0x50
  402e20:	ldr	x0, [x19, #32]
  402e24:	add	x19, x19, #0x18
  402e28:	cbz	x0, 403004 <ferror@plt+0x784>
  402e2c:	ldr	w0, [x19]
  402e30:	cmp	w25, w0
  402e34:	b.ne	402e20 <ferror@plt+0x5a0>  // b.any
  402e38:	cmp	w24, #0x0
  402e3c:	ccmp	w24, w22, #0x2, ne  // ne = any
  402e40:	b.cs	402e88 <ferror@plt+0x608>  // b.hs, b.nlast
  402e44:	sub	w24, w24, #0x1
  402e48:	ldr	w0, [x26, x24, lsl #2]
  402e4c:	sub	w1, w0, #0x1
  402e50:	eor	w1, w1, w0
  402e54:	cmp	w3, w1, lsr #8
  402e58:	b.ne	402e70 <ferror@plt+0x5f0>  // b.any
  402e5c:	neg	w1, w0
  402e60:	eor	w2, w25, w0
  402e64:	eor	w0, w1, w0
  402e68:	tst	w0, w2
  402e6c:	b.eq	402e88 <ferror@plt+0x608>  // b.none
  402e70:	ldr	x0, [sp, #136]
  402e74:	mov	w2, w25
  402e78:	mov	x1, x21
  402e7c:	str	w5, [sp, #120]
  402e80:	bl	4027b0 <printf@plt>
  402e84:	ldr	w5, [sp, #120]
  402e88:	mov	x1, x21
  402e8c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402e90:	add	x0, x0, #0x3f0
  402e94:	str	w25, [x26, w5, uxtw #2]
  402e98:	bl	4027b0 <printf@plt>
  402e9c:	ldr	w0, [x28, #60]
  402ea0:	cbnz	w0, 40305c <ferror@plt+0x7dc>
  402ea4:	ldr	x1, [sp, #96]
  402ea8:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402eac:	add	x0, x0, #0x400
  402eb0:	add	x2, x1, #0x48
  402eb4:	lsl	w1, w22, #1
  402eb8:	bl	4027b0 <printf@plt>
  402ebc:	ldr	x3, [x19, #8]
  402ec0:	mov	w2, w20
  402ec4:	mov	w1, w25
  402ec8:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402ecc:	add	x0, x0, #0x908
  402ed0:	bl	4027b0 <printf@plt>
  402ed4:	ldr	x5, [x19, #16]
  402ed8:	cbz	x5, 402ef0 <ferror@plt+0x670>
  402edc:	mov	w1, w25
  402ee0:	mov	w3, w22
  402ee4:	mov	w2, w20
  402ee8:	mov	x0, x21
  402eec:	blr	x5
  402ef0:	mov	w0, #0xa                   	// #10
  402ef4:	bl	4027e0 <putchar@plt>
  402ef8:	ldr	w0, [x28, #56]
  402efc:	cbz	w0, 402f7c <ferror@plt+0x6fc>
  402f00:	ldr	x1, [x19, #16]
  402f04:	ldr	w0, [x28, #28]
  402f08:	cbz	x1, 402f80 <ferror@plt+0x700>
  402f0c:	cmp	w0, #0x0
  402f10:	b.le	40313c <ferror@plt+0x8bc>
  402f14:	ldp	w3, w0, [x28, #8]
  402f18:	mov	w2, w20
  402f1c:	add	w0, w3, w0
  402f20:	sub	w1, w0, w23
  402f24:	sub	w0, w0, w23
  402f28:	cmp	w20, w1
  402f2c:	b.cc	403074 <ferror@plt+0x7f4>  // b.lo, b.ul, b.last
  402f30:	b.hi	402f68 <ferror@plt+0x6e8>  // b.pmore
  402f34:	ldr	w0, [x28, #16]
  402f38:	add	w20, w20, w23
  402f3c:	sub	w1, w20, w3
  402f40:	cmp	w1, w0
  402f44:	ldr	x2, [x28]
  402f48:	b.hi	402fa4 <ferror@plt+0x724>  // b.pmore
  402f4c:	str	w1, [x28, #12]
  402f50:	cbz	x2, 402fd4 <ferror@plt+0x754>
  402f54:	ldr	w0, [x28, #24]
  402f58:	cmp	w0, #0x0
  402f5c:	cbnz	w0, 403090 <ferror@plt+0x810>
  402f60:	mov	w24, w22
  402f64:	b	402d90 <ferror@plt+0x510>
  402f68:	sub	x2, x2, x0
  402f6c:	mov	x1, x21
  402f70:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402f74:	add	x0, x0, #0x948
  402f78:	bl	4027b0 <printf@plt>
  402f7c:	ldr	w0, [x28, #28]
  402f80:	cmp	w0, #0x0
  402f84:	b.le	403124 <ferror@plt+0x8a4>
  402f88:	ldr	w3, [x28, #8]
  402f8c:	add	w20, w20, w23
  402f90:	ldr	w0, [x28, #16]
  402f94:	sub	w1, w20, w3
  402f98:	cmp	w1, w0
  402f9c:	ldr	x2, [x28]
  402fa0:	b.ls	402f4c <ferror@plt+0x6cc>  // b.plast
  402fa4:	stur	xzr, [x28, #12]
  402fa8:	lsl	w1, w20, #2
  402fac:	mov	x0, x2
  402fb0:	mov	w2, #0x0                   	// #0
  402fb4:	bl	402530 <fseek@plt>
  402fb8:	ldr	x0, [x28]
  402fbc:	bl	402300 <ftell@plt>
  402fc0:	asr	x0, x0, #2
  402fc4:	ldr	x2, [x28]
  402fc8:	str	w0, [x28, #8]
  402fcc:	mov	w3, w0
  402fd0:	cbnz	x2, 402f54 <ferror@plt+0x6d4>
  402fd4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  402fd8:	add	x0, x0, #0x570
  402fdc:	ldr	w1, [x28, #28]
  402fe0:	cmp	w1, #0x0
  402fe4:	b.le	40313c <ferror@plt+0x8bc>
  402fe8:	ldr	w2, [x28, #12]
  402fec:	mov	x1, x21
  402ff0:	add	w2, w3, w2
  402ff4:	bl	4027b0 <printf@plt>
  402ff8:	ldr	x0, [x28]
  402ffc:	cbnz	x0, 402b38 <ferror@plt+0x2b8>
  403000:	b	402b44 <ferror@plt+0x2c4>
  403004:	tst	w25, #0xffff
  403008:	mov	x0, #0x18                  	// #24
  40300c:	b.ne	403028 <ferror@plt+0x7a8>  // b.any
  403010:	mov	w1, #0xfe5f0000            	// #-27328512
  403014:	add	w1, w25, w1
  403018:	mov	x2, #0x30                  	// #48
  40301c:	lsr	w1, w1, #17
  403020:	cmp	w1, #0x8
  403024:	csel	x0, x0, x2, hi  // hi = pmore
  403028:	ldr	x1, [sp, #96]
  40302c:	add	x19, x1, #0x50
  403030:	add	x19, x19, x0
  403034:	b	402e38 <ferror@plt+0x5b8>
  403038:	mov	w5, #0x3                   	// #3
  40303c:	mov	w22, #0x4                   	// #4
  403040:	ldr	x0, [sp, #128]
  403044:	mov	w2, w25
  403048:	mov	x1, x21
  40304c:	stp	w3, w5, [sp, #120]
  403050:	bl	4027b0 <printf@plt>
  403054:	ldp	w3, w5, [sp, #120]
  403058:	b	402e18 <ferror@plt+0x598>
  40305c:	ldp	w0, w1, [sp, #112]
  403060:	add	w1, w0, w1
  403064:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403068:	add	x0, x0, #0x3f8
  40306c:	bl	4027b0 <printf@plt>
  403070:	b	402ea4 <ferror@plt+0x624>
  403074:	sub	x2, x0, x2
  403078:	mov	x1, x21
  40307c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403080:	add	x0, x0, #0x918
  403084:	bl	4027b0 <printf@plt>
  403088:	ldr	w0, [x28, #28]
  40308c:	b	402f80 <ferror@plt+0x700>
  403090:	b.ge	402fd4 <ferror@plt+0x754>  // b.tcont
  403094:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403098:	add	x0, x0, #0x588
  40309c:	b	402fdc <ferror@plt+0x75c>
  4030a0:	bl	4039f0 <ferror@plt+0x1170>
  4030a4:	cbz	w0, 4030b0 <ferror@plt+0x830>
  4030a8:	bl	403310 <ferror@plt+0xa90>
  4030ac:	mov	x20, x0
  4030b0:	mov	x2, x20
  4030b4:	mov	x1, x21
  4030b8:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4030bc:	add	x0, x0, #0x880
  4030c0:	bl	4027b0 <printf@plt>
  4030c4:	bl	4039f0 <ferror@plt+0x1170>
  4030c8:	cbnz	w0, 402d80 <ferror@plt+0x500>
  4030cc:	mov	x1, x21
  4030d0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4030d4:	add	x0, x0, #0x890
  4030d8:	bl	4027b0 <printf@plt>
  4030dc:	b	402d80 <ferror@plt+0x500>
  4030e0:	mov	w19, w22
  4030e4:	mov	w24, #0xffffffff            	// #-1
  4030e8:	str	w22, [x28, #32]
  4030ec:	b	402cd8 <ferror@plt+0x458>
  4030f0:	mov	w24, w22
  4030f4:	mov	w19, #0x0                   	// #0
  4030f8:	b	402cd8 <ferror@plt+0x458>
  4030fc:	mov	w0, w19
  403100:	bl	4024f0 <close@plt>
  403104:	b	402bb8 <ferror@plt+0x338>
  403108:	mov	w24, #0xffffffff            	// #-1
  40310c:	mov	w19, #0x0                   	// #0
  403110:	str	w22, [x28, #32]
  403114:	b	402cd8 <ferror@plt+0x458>
  403118:	mov	w5, #0x3                   	// #3
  40311c:	mov	w22, #0x4                   	// #4
  403120:	b	402e18 <ferror@plt+0x598>
  403124:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403128:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40312c:	add	x2, x2, #0x978
  403130:	add	x0, x0, #0x3c8
  403134:	mov	w1, #0x271                 	// #625
  403138:	bl	4028b0 <ferror@plt+0x30>
  40313c:	bl	402890 <ferror@plt+0x10>
  403140:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403144:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403148:	add	x2, x2, #0x7e0
  40314c:	add	x0, x0, #0x3c8
  403150:	mov	w1, #0x8e                  	// #142
  403154:	bl	4028b0 <ferror@plt+0x30>
  403158:	stp	x29, x30, [sp, #-32]!
  40315c:	mov	x29, sp
  403160:	str	x19, [sp, #16]
  403164:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  403168:	add	x19, x19, #0x720
  40316c:	mov	x0, x19
  403170:	bl	4134d8 <ferror@plt+0x10c58>
  403174:	mov	x1, x19
  403178:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40317c:	ldr	x19, [sp, #16]
  403180:	add	x2, x2, #0x340
  403184:	ldp	x29, x30, [sp], #32
  403188:	adrp	x0, 413000 <ferror@plt+0x10780>
  40318c:	add	x0, x0, #0x100
  403190:	b	402330 <__cxa_atexit@plt>
  403194:	nop
  403198:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40319c:	str	xzr, [x0, #1920]
  4031a0:	ret
  4031a4:	nop
  4031a8:	stp	x29, x30, [sp, #-32]!
  4031ac:	mov	x29, sp
  4031b0:	stp	x19, x20, [sp, #16]
  4031b4:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4031b8:	add	x19, x19, #0x8f0
  4031bc:	mov	x20, #0x1c00                	// #7168
  4031c0:	movk	x20, #0x1, lsl #16
  4031c4:	mov	x0, x20
  4031c8:	stp	xzr, xzr, [x19]
  4031cc:	stp	xzr, xzr, [x19, #16]
  4031d0:	stp	xzr, xzr, [x19, #32]
  4031d4:	str	x20, [x19, #64]
  4031d8:	bl	4023d0 <malloc@plt>
  4031dc:	str	x0, [x19, #56]
  4031e0:	cbz	x0, 4031f8 <ferror@plt+0x978>
  4031e4:	stp	x20, xzr, [x0]
  4031e8:	str	x0, [x19, #48]
  4031ec:	ldp	x19, x20, [sp, #16]
  4031f0:	ldp	x29, x30, [sp], #32
  4031f4:	ret
  4031f8:	str	xzr, [x19, #48]
  4031fc:	str	xzr, [x19, #64]
  403200:	b	4031ec <ferror@plt+0x96c>
  403204:	mov	x29, #0x0                   	// #0
  403208:	mov	x30, #0x0                   	// #0
  40320c:	mov	x5, x0
  403210:	ldr	x1, [sp]
  403214:	add	x2, sp, #0x8
  403218:	mov	x6, sp
  40321c:	movz	x0, #0x0, lsl #48
  403220:	movk	x0, #0x0, lsl #32
  403224:	movk	x0, #0x40, lsl #16
  403228:	movk	x0, #0x2950
  40322c:	movz	x3, #0x0, lsl #48
  403230:	movk	x3, #0x0, lsl #32
  403234:	movk	x3, #0x46, lsl #16
  403238:	movk	x3, #0xd300
  40323c:	movz	x4, #0x0, lsl #48
  403240:	movk	x4, #0x0, lsl #32
  403244:	movk	x4, #0x46, lsl #16
  403248:	movk	x4, #0xd380
  40324c:	bl	402430 <__libc_start_main@plt>
  403250:	bl	402540 <abort@plt>
  403254:	adrp	x0, 49d000 <_obstack_memory_used@@Base+0x406d8>
  403258:	ldr	x0, [x0, #3960]
  40325c:	cbz	x0, 403264 <ferror@plt+0x9e4>
  403260:	b	402510 <__gmon_start__@plt>
  403264:	ret
  403268:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40326c:	add	x0, x0, #0x520
  403270:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  403274:	add	x1, x1, #0x520
  403278:	cmp	x1, x0
  40327c:	b.eq	403294 <ferror@plt+0xa14>  // b.none
  403280:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403284:	ldr	x1, [x1, #936]
  403288:	cbz	x1, 403294 <ferror@plt+0xa14>
  40328c:	mov	x16, x1
  403290:	br	x16
  403294:	ret
  403298:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40329c:	add	x0, x0, #0x520
  4032a0:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4032a4:	add	x1, x1, #0x520
  4032a8:	sub	x1, x1, x0
  4032ac:	lsr	x2, x1, #63
  4032b0:	add	x1, x2, x1, asr #3
  4032b4:	cmp	xzr, x1, asr #1
  4032b8:	asr	x1, x1, #1
  4032bc:	b.eq	4032d4 <ferror@plt+0xa54>  // b.none
  4032c0:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4032c4:	ldr	x2, [x2, #944]
  4032c8:	cbz	x2, 4032d4 <ferror@plt+0xa54>
  4032cc:	mov	x16, x2
  4032d0:	br	x16
  4032d4:	ret
  4032d8:	stp	x29, x30, [sp, #-32]!
  4032dc:	mov	x29, sp
  4032e0:	str	x19, [sp, #16]
  4032e4:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4032e8:	ldrb	w0, [x19, #1352]
  4032ec:	cbnz	w0, 4032fc <ferror@plt+0xa7c>
  4032f0:	bl	403268 <ferror@plt+0x9e8>
  4032f4:	mov	w0, #0x1                   	// #1
  4032f8:	strb	w0, [x19, #1352]
  4032fc:	ldr	x19, [sp, #16]
  403300:	ldp	x29, x30, [sp], #32
  403304:	ret
  403308:	b	403298 <ferror@plt+0xa18>
  40330c:	nop
  403310:	stp	x29, x30, [sp, #-48]!
  403314:	mov	x29, sp
  403318:	stp	x19, x20, [sp, #16]
  40331c:	mov	w20, w0
  403320:	stp	x21, x22, [sp, #32]
  403324:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  403328:	add	x19, x22, #0x550
  40332c:	ldp	w1, w21, [x19, #12]
  403330:	ldr	w0, [x19, #28]
  403334:	sub	w21, w21, w1
  403338:	cmp	w0, #0x0
  40333c:	b.le	403418 <ferror@plt+0xb98>
  403340:	cmp	w21, w20
  403344:	ldr	x0, [x19, #48]
  403348:	b.cs	4033a8 <ferror@plt+0xb28>  // b.hs, b.nlast
  40334c:	ldr	w2, [x19, #8]
  403350:	add	w2, w2, w1
  403354:	str	w2, [x19, #8]
  403358:	cbnz	w21, 4033c4 <ferror@plt+0xb44>
  40335c:	ldr	x2, [x19, #40]
  403360:	stp	wzr, w21, [x19, #12]
  403364:	add	w1, w21, w20
  403368:	cmp	x1, x2
  40336c:	b.hi	4033e8 <ferror@plt+0xb68>  // b.pmore
  403370:	ldr	x3, [x22, #1360]
  403374:	sub	w2, w2, w21
  403378:	mov	x1, #0x1                   	// #1
  40337c:	add	x0, x0, w21, uxtw #2
  403380:	lsl	w2, w2, #2
  403384:	bl	402610 <fread@plt>
  403388:	lsr	x0, x0, #2
  40338c:	ldr	w1, [x19, #16]
  403390:	add	w1, w1, w0
  403394:	str	w1, [x19, #16]
  403398:	cmp	w1, w20
  40339c:	b.cc	40342c <ferror@plt+0xbac>  // b.lo, b.ul, b.last
  4033a0:	ldr	w1, [x19, #12]
  4033a4:	ldr	x0, [x19, #48]
  4033a8:	add	x0, x0, w1, uxtw #2
  4033ac:	add	w20, w20, w1
  4033b0:	str	w20, [x19, #12]
  4033b4:	ldp	x19, x20, [sp, #16]
  4033b8:	ldp	x21, x22, [sp, #32]
  4033bc:	ldp	x29, x30, [sp], #48
  4033c0:	ret
  4033c4:	add	x1, x0, w1, uxtw #2
  4033c8:	lsl	w2, w21, #2
  4033cc:	bl	402230 <memmove@plt>
  4033d0:	stp	wzr, w21, [x19, #12]
  4033d4:	ldr	x2, [x19, #40]
  4033d8:	add	w1, w21, w20
  4033dc:	ldr	x0, [x19, #48]
  4033e0:	cmp	x1, x2
  4033e4:	b.ls	403370 <ferror@plt+0xaf0>  // b.plast
  4033e8:	cmp	x2, #0x0
  4033ec:	mov	x3, #0x400                 	// #1024
  4033f0:	csel	x2, x2, x3, ne  // ne = any
  4033f4:	add	x1, x1, x2
  4033f8:	lsl	x2, x1, #1
  4033fc:	lsl	x1, x1, #3
  403400:	str	x2, [x19, #40]
  403404:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  403408:	ldr	w21, [x19, #16]
  40340c:	str	x0, [x19, #48]
  403410:	ldr	x2, [x19, #40]
  403414:	b	403370 <ferror@plt+0xaf0>
  403418:	mov	x0, #0x0                   	// #0
  40341c:	ldp	x19, x20, [sp, #16]
  403420:	ldp	x21, x22, [sp, #32]
  403424:	ldp	x29, x30, [sp], #48
  403428:	ret
  40342c:	ldr	w2, [x19, #20]
  403430:	mov	x0, #0x0                   	// #0
  403434:	add	w20, w20, w2
  403438:	sub	w20, w20, w1
  40343c:	stp	wzr, w20, [x19, #16]
  403440:	b	4033b4 <ferror@plt+0xb34>
  403444:	nop
  403448:	stp	x29, x30, [sp, #-96]!
  40344c:	mov	w4, #0xfe5f0000            	// #-27328512
  403450:	add	w1, w1, w4
  403454:	mov	x29, sp
  403458:	lsr	w1, w1, #17
  40345c:	stp	x21, x22, [sp, #32]
  403460:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403464:	add	x22, x22, #0xa80
  403468:	stp	x19, x20, [sp, #16]
  40346c:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  403470:	add	x20, x20, #0x550
  403474:	lsr	w21, w2, #1
  403478:	ldr	x1, [x22, x1, lsl #3]
  40347c:	mov	w2, w21
  403480:	stp	x23, x24, [sp, #48]
  403484:	mov	x24, x0
  403488:	mov	w23, w3
  40348c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403490:	add	x0, x0, #0x3e0
  403494:	bl	4027b0 <printf@plt>
  403498:	ldr	w0, [x20, #56]
  40349c:	cbz	w0, 403564 <ferror@plt+0xce4>
  4034a0:	cbz	w21, 403564 <ferror@plt+0xce4>
  4034a4:	lsl	w23, w23, #1
  4034a8:	stp	x25, x26, [sp, #64]
  4034ac:	adrp	x26, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4034b0:	adrp	x25, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4034b4:	add	x26, x26, #0x3f0
  4034b8:	add	x25, x25, #0x400
  4034bc:	mov	w19, #0x0                   	// #0
  4034c0:	stp	x27, x28, [sp, #80]
  4034c4:	nop
  4034c8:	tst	x19, #0x7
  4034cc:	b.ne	40351c <ferror@plt+0xc9c>  // b.any
  4034d0:	mov	w0, #0xa                   	// #10
  4034d4:	bl	4027e0 <putchar@plt>
  4034d8:	ldr	w0, [x20, #28]
  4034dc:	cmp	w0, #0x0
  4034e0:	b.le	403594 <ferror@plt+0xd14>
  4034e4:	ldp	w28, w27, [x20, #8]
  4034e8:	mov	x1, x24
  4034ec:	mov	x0, x26
  4034f0:	bl	4027b0 <printf@plt>
  4034f4:	ldr	w0, [x20, #60]
  4034f8:	cbnz	w0, 403580 <ferror@plt+0xd00>
  4034fc:	add	x2, x22, #0x48
  403500:	mov	w1, w23
  403504:	mov	x0, x25
  403508:	bl	4027b0 <printf@plt>
  40350c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403510:	mov	w1, w19
  403514:	add	x0, x0, #0x408
  403518:	bl	4027b0 <printf@plt>
  40351c:	mov	w0, #0x2                   	// #2
  403520:	bl	403310 <ferror@plt+0xa90>
  403524:	cbz	x0, 403578 <ferror@plt+0xcf8>
  403528:	ldr	w3, [x20, #32]
  40352c:	ldp	w2, w1, [x0]
  403530:	mov	w0, w2
  403534:	cbz	w3, 403540 <ferror@plt+0xcc0>
  403538:	rev	w0, w2
  40353c:	rev	w1, w1
  403540:	orr	x1, x0, x1, lsl #32
  403544:	add	w19, w19, #0x1
  403548:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40354c:	add	x0, x0, #0x420
  403550:	bl	4027b0 <printf@plt>
  403554:	cmp	w21, w19
  403558:	b.ne	4034c8 <ferror@plt+0xc48>  // b.any
  40355c:	ldp	x25, x26, [sp, #64]
  403560:	ldp	x27, x28, [sp, #80]
  403564:	ldp	x19, x20, [sp, #16]
  403568:	ldp	x21, x22, [sp, #32]
  40356c:	ldp	x23, x24, [sp, #48]
  403570:	ldp	x29, x30, [sp], #96
  403574:	ret
  403578:	mov	x1, #0x0                   	// #0
  40357c:	b	403544 <ferror@plt+0xcc4>
  403580:	add	w1, w28, w27
  403584:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403588:	add	x0, x0, #0x3f8
  40358c:	bl	4027b0 <printf@plt>
  403590:	b	4034fc <ferror@plt+0xc7c>
  403594:	bl	402890 <ferror@plt+0x10>
  403598:	stp	x29, x30, [sp, #-96]!
  40359c:	mov	x29, sp
  4035a0:	stp	x19, x20, [sp, #16]
  4035a4:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4035a8:	add	x19, x19, #0x550
  4035ac:	stp	x21, x22, [sp, #32]
  4035b0:	mov	x22, x0
  4035b4:	ldr	w0, [x19, #56]
  4035b8:	cbnz	w0, 4035cc <ferror@plt+0xd4c>
  4035bc:	ldp	x19, x20, [sp, #16]
  4035c0:	ldp	x21, x22, [sp, #32]
  4035c4:	ldp	x29, x30, [sp], #96
  4035c8:	ret
  4035cc:	mov	w0, #0x1                   	// #1
  4035d0:	stp	x23, x24, [sp, #48]
  4035d4:	mov	w23, w3
  4035d8:	stp	x25, x26, [sp, #64]
  4035dc:	stp	x27, x28, [sp, #80]
  4035e0:	bl	403310 <ferror@plt+0xa90>
  4035e4:	cbz	x0, 403788 <ferror@plt+0xf08>
  4035e8:	ldr	w26, [x0]
  4035ec:	ldr	w1, [x19, #32]
  4035f0:	rev	w0, w26
  4035f4:	cmp	w1, #0x0
  4035f8:	csel	w26, w0, w26, ne  // ne = any
  4035fc:	ldr	w0, [x19, #28]
  403600:	cmp	w0, #0x0
  403604:	b.le	4037a4 <ferror@plt+0xf24>
  403608:	adrp	x25, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40360c:	add	x25, x25, #0xa80
  403610:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403614:	lsl	w23, w23, #1
  403618:	add	x25, x25, #0x48
  40361c:	add	x24, x24, #0x3f0
  403620:	mov	x28, #0x0                   	// #0
  403624:	b	403650 <ferror@plt+0xdd0>
  403628:	mov	x1, x28
  40362c:	adrp	x28, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403630:	add	x28, x28, #0x430
  403634:	mov	w2, w27
  403638:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40363c:	add	x0, x0, #0x438
  403640:	bl	4027b0 <printf@plt>
  403644:	ldr	w0, [x19, #28]
  403648:	cmp	w0, #0x0
  40364c:	b.le	4037a4 <ferror@plt+0xf24>
  403650:	ldp	w21, w20, [x19, #8]
  403654:	mov	w0, #0x1                   	// #1
  403658:	bl	403310 <ferror@plt+0xa90>
  40365c:	cbz	x0, 4036d8 <ferror@plt+0xe58>
  403660:	ldr	w27, [x0]
  403664:	ldr	w1, [x19, #32]
  403668:	rev	w0, w27
  40366c:	cmp	w1, #0x0
  403670:	csel	w27, w0, w27, ne  // ne = any
  403674:	cbz	w27, 4036d8 <ferror@plt+0xe58>
  403678:	cbnz	x28, 403628 <ferror@plt+0xda8>
  40367c:	mov	w0, #0xa                   	// #10
  403680:	bl	4027e0 <putchar@plt>
  403684:	mov	x1, x22
  403688:	mov	x0, x24
  40368c:	bl	4027b0 <printf@plt>
  403690:	ldr	w0, [x19, #60]
  403694:	cbz	w0, 4036a8 <ferror@plt+0xe28>
  403698:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40369c:	add	w1, w21, w20
  4036a0:	add	x0, x0, #0x3f8
  4036a4:	bl	4027b0 <printf@plt>
  4036a8:	mov	x2, x25
  4036ac:	mov	w1, w23
  4036b0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4036b4:	add	x0, x0, #0x400
  4036b8:	bl	4027b0 <printf@plt>
  4036bc:	adrp	x28, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4036c0:	mov	w1, w26
  4036c4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4036c8:	add	x28, x28, #0x148
  4036cc:	add	x0, x0, #0x448
  4036d0:	bl	4027b0 <printf@plt>
  4036d4:	b	403628 <ferror@plt+0xda8>
  4036d8:	mov	w0, #0x1                   	// #1
  4036dc:	bl	403310 <ferror@plt+0xa90>
  4036e0:	cbz	x0, 40376c <ferror@plt+0xeec>
  4036e4:	ldr	w0, [x0]
  4036e8:	ldr	w2, [x19, #32]
  4036ec:	rev	w1, w0
  4036f0:	cmp	w2, #0x0
  4036f4:	csel	w0, w1, w0, ne  // ne = any
  4036f8:	cbz	w0, 40376c <ferror@plt+0xeec>
  4036fc:	bl	403310 <ferror@plt+0xa90>
  403700:	mov	x27, x0
  403704:	cbz	x0, 40376c <ferror@plt+0xeec>
  403708:	mov	w0, #0xa                   	// #10
  40370c:	bl	4027e0 <putchar@plt>
  403710:	mov	x1, x22
  403714:	mov	x0, x24
  403718:	bl	4027b0 <printf@plt>
  40371c:	ldr	w0, [x19, #60]
  403720:	cbnz	w0, 403790 <ferror@plt+0xf10>
  403724:	mov	x2, x25
  403728:	mov	w1, w23
  40372c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403730:	add	x0, x0, #0x400
  403734:	bl	4027b0 <printf@plt>
  403738:	adrp	x28, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40373c:	mov	w1, w26
  403740:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403744:	add	x0, x0, #0x448
  403748:	bl	4027b0 <printf@plt>
  40374c:	mov	x2, x27
  403750:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  403754:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403758:	add	x1, x1, #0x148
  40375c:	add	x0, x0, #0x440
  403760:	add	x28, x28, #0x428
  403764:	bl	4027b0 <printf@plt>
  403768:	b	403644 <ferror@plt+0xdc4>
  40376c:	ldp	x19, x20, [sp, #16]
  403770:	ldp	x21, x22, [sp, #32]
  403774:	ldp	x23, x24, [sp, #48]
  403778:	ldp	x25, x26, [sp, #64]
  40377c:	ldp	x27, x28, [sp, #80]
  403780:	ldp	x29, x30, [sp], #96
  403784:	ret
  403788:	mov	w26, #0x0                   	// #0
  40378c:	b	4035fc <ferror@plt+0xd7c>
  403790:	add	w1, w21, w20
  403794:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403798:	add	x0, x0, #0x3f8
  40379c:	bl	4027b0 <printf@plt>
  4037a0:	b	403724 <ferror@plt+0xea4>
  4037a4:	bl	402890 <ferror@plt+0x10>
  4037a8:	stp	x29, x30, [sp, #-32]!
  4037ac:	mov	x29, sp
  4037b0:	stp	x19, x20, [sp, #16]
  4037b4:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4037b8:	add	x19, x20, #0x550
  4037bc:	ldr	w0, [x19, #28]
  4037c0:	ldp	w1, w3, [x19, #12]
  4037c4:	cmp	w0, #0x0
  4037c8:	b.le	403884 <ferror@plt+0x1004>
  4037cc:	cmp	w3, w1
  4037d0:	ldr	x0, [x19, #48]
  4037d4:	b.ne	403824 <ferror@plt+0xfa4>  // b.any
  4037d8:	ldr	w1, [x19, #8]
  4037dc:	mov	w4, #0x0                   	// #0
  4037e0:	ldr	x2, [x19, #40]
  4037e4:	add	w3, w1, w3
  4037e8:	str	w3, [x19, #8]
  4037ec:	stur	xzr, [x19, #12]
  4037f0:	cbz	x2, 403860 <ferror@plt+0xfe0>
  4037f4:	ldr	x3, [x20, #1360]
  4037f8:	sub	w2, w2, w4
  4037fc:	mov	x1, #0x1                   	// #1
  403800:	lsl	w2, w2, #2
  403804:	bl	402610 <fread@plt>
  403808:	lsr	x0, x0, #2
  40380c:	ldr	w1, [x19, #16]
  403810:	add	w1, w1, w0
  403814:	str	w1, [x19, #16]
  403818:	cbz	w1, 40389c <ferror@plt+0x101c>
  40381c:	ldr	w1, [x19, #12]
  403820:	ldr	x0, [x19, #48]
  403824:	add	w2, w1, #0x1
  403828:	str	w2, [x19, #12]
  40382c:	mov	w2, w1
  403830:	add	x1, x0, w1, uxtw #2
  403834:	cbz	x1, 403884 <ferror@plt+0x1004>
  403838:	ldr	w1, [x0, x2, lsl #2]
  40383c:	ldr	w2, [x19, #32]
  403840:	rev	w0, w1
  403844:	cmp	w2, #0x0
  403848:	csel	w1, w0, w1, ne  // ne = any
  40384c:	ldp	x19, x20, [sp, #16]
  403850:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403854:	ldp	x29, x30, [sp], #32
  403858:	add	x0, x0, #0x460
  40385c:	b	4027b0 <printf@plt>
  403860:	mov	x2, #0x802                 	// #2050
  403864:	mov	x1, #0x2008                	// #8200
  403868:	str	x2, [x19, #40]
  40386c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  403870:	str	x0, [x19, #48]
  403874:	ldr	w4, [x19, #16]
  403878:	ldr	x2, [x19, #40]
  40387c:	add	x0, x0, w4, uxtw #2
  403880:	b	4037f4 <ferror@plt+0xf74>
  403884:	ldp	x19, x20, [sp, #16]
  403888:	mov	w1, #0x0                   	// #0
  40388c:	ldp	x29, x30, [sp], #32
  403890:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403894:	add	x0, x0, #0x460
  403898:	b	4027b0 <printf@plt>
  40389c:	ldr	w0, [x19, #20]
  4038a0:	add	w0, w0, #0x1
  4038a4:	str	w0, [x19, #20]
  4038a8:	b	40384c <ferror@plt+0xfcc>
  4038ac:	nop
  4038b0:	stp	x29, x30, [sp, #-32]!
  4038b4:	mov	x29, sp
  4038b8:	stp	x19, x20, [sp, #16]
  4038bc:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4038c0:	add	x19, x20, #0x550
  4038c4:	ldr	w0, [x19, #28]
  4038c8:	ldp	w1, w3, [x19, #12]
  4038cc:	cmp	w0, #0x0
  4038d0:	b.le	4039d4 <ferror@plt+0x1154>
  4038d4:	cmp	w3, w1
  4038d8:	ldr	x0, [x19, #48]
  4038dc:	b.eq	403944 <ferror@plt+0x10c4>  // b.none
  4038e0:	add	w2, w1, #0x1
  4038e4:	str	w2, [x19, #12]
  4038e8:	mov	w2, w1
  4038ec:	add	x1, x0, w1, uxtw #2
  4038f0:	cbz	x1, 4039d4 <ferror@plt+0x1154>
  4038f4:	ldr	w20, [x0, x2, lsl #2]
  4038f8:	ldr	w1, [x19, #32]
  4038fc:	rev	w0, w20
  403900:	cmp	w1, #0x0
  403904:	csel	w20, w0, w20, ne  // ne = any
  403908:	mov	w0, #0x1                   	// #1
  40390c:	bl	403310 <ferror@plt+0xa90>
  403910:	cbz	x0, 403994 <ferror@plt+0x1114>
  403914:	ldr	w1, [x19, #32]
  403918:	ldr	w0, [x0]
  40391c:	cmp	w1, #0x0
  403920:	mov	w1, w20
  403924:	ldp	x19, x20, [sp, #16]
  403928:	mov	w2, w0
  40392c:	ldp	x29, x30, [sp], #32
  403930:	rev	w0, w0
  403934:	csel	x2, x0, x2, ne  // ne = any
  403938:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40393c:	add	x0, x0, #0x470
  403940:	b	4027b0 <printf@plt>
  403944:	ldr	w1, [x19, #8]
  403948:	mov	w4, #0x0                   	// #0
  40394c:	ldr	x2, [x19, #40]
  403950:	add	w3, w1, w3
  403954:	str	w3, [x19, #8]
  403958:	stur	xzr, [x19, #12]
  40395c:	cbz	x2, 4039b0 <ferror@plt+0x1130>
  403960:	ldr	x3, [x20, #1360]
  403964:	sub	w2, w2, w4
  403968:	mov	x1, #0x1                   	// #1
  40396c:	lsl	w2, w2, #2
  403970:	bl	402610 <fread@plt>
  403974:	ldr	w20, [x19, #16]
  403978:	lsr	x0, x0, #2
  40397c:	add	w20, w20, w0
  403980:	str	w20, [x19, #16]
  403984:	cbz	w20, 4039dc <ferror@plt+0x115c>
  403988:	ldr	w1, [x19, #12]
  40398c:	ldr	x0, [x19, #48]
  403990:	b	4038e0 <ferror@plt+0x1060>
  403994:	mov	w1, w20
  403998:	mov	x2, #0x0                   	// #0
  40399c:	ldp	x19, x20, [sp, #16]
  4039a0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4039a4:	ldp	x29, x30, [sp], #32
  4039a8:	add	x0, x0, #0x470
  4039ac:	b	4027b0 <printf@plt>
  4039b0:	mov	x2, #0x802                 	// #2050
  4039b4:	mov	x1, #0x2008                	// #8200
  4039b8:	str	x2, [x19, #40]
  4039bc:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4039c0:	str	x0, [x19, #48]
  4039c4:	ldr	w4, [x19, #16]
  4039c8:	ldr	x2, [x19, #40]
  4039cc:	add	x0, x0, w4, uxtw #2
  4039d0:	b	403960 <ferror@plt+0x10e0>
  4039d4:	mov	w20, #0x0                   	// #0
  4039d8:	b	403908 <ferror@plt+0x1088>
  4039dc:	ldr	w0, [x19, #20]
  4039e0:	add	w0, w0, #0x1
  4039e4:	str	w0, [x19, #20]
  4039e8:	b	403908 <ferror@plt+0x1088>
  4039ec:	nop
  4039f0:	stp	x29, x30, [sp, #-32]!
  4039f4:	mov	x29, sp
  4039f8:	stp	x19, x20, [sp, #16]
  4039fc:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  403a00:	add	x19, x20, #0x550
  403a04:	ldr	w0, [x19, #28]
  403a08:	ldp	w1, w3, [x19, #12]
  403a0c:	cmp	w0, #0x0
  403a10:	b.le	403ac4 <ferror@plt+0x1244>
  403a14:	cmp	w3, w1
  403a18:	ldr	x0, [x19, #48]
  403a1c:	b.ne	403a6c <ferror@plt+0x11ec>  // b.any
  403a20:	ldr	w1, [x19, #8]
  403a24:	mov	w4, #0x0                   	// #0
  403a28:	ldr	x2, [x19, #40]
  403a2c:	add	w3, w1, w3
  403a30:	str	w3, [x19, #8]
  403a34:	stur	xzr, [x19, #12]
  403a38:	cbz	x2, 403aa0 <ferror@plt+0x1220>
  403a3c:	ldr	x3, [x20, #1360]
  403a40:	sub	w2, w2, w4
  403a44:	mov	x1, #0x1                   	// #1
  403a48:	lsl	w2, w2, #2
  403a4c:	bl	402610 <fread@plt>
  403a50:	lsr	x0, x0, #2
  403a54:	ldr	w1, [x19, #16]
  403a58:	add	w0, w1, w0
  403a5c:	str	w0, [x19, #16]
  403a60:	cbz	w0, 403ad4 <ferror@plt+0x1254>
  403a64:	ldr	w1, [x19, #12]
  403a68:	ldr	x0, [x19, #48]
  403a6c:	add	w2, w1, #0x1
  403a70:	str	w2, [x19, #12]
  403a74:	mov	w2, w1
  403a78:	add	x1, x0, w1, uxtw #2
  403a7c:	cbz	x1, 403ac4 <ferror@plt+0x1244>
  403a80:	ldr	w0, [x0, x2, lsl #2]
  403a84:	ldr	w2, [x19, #32]
  403a88:	rev	w1, w0
  403a8c:	cmp	w2, #0x0
  403a90:	csel	w0, w1, w0, ne  // ne = any
  403a94:	ldp	x19, x20, [sp, #16]
  403a98:	ldp	x29, x30, [sp], #32
  403a9c:	ret
  403aa0:	mov	x2, #0x802                 	// #2050
  403aa4:	mov	x1, #0x2008                	// #8200
  403aa8:	str	x2, [x19, #40]
  403aac:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  403ab0:	str	x0, [x19, #48]
  403ab4:	ldr	w4, [x19, #16]
  403ab8:	ldr	x2, [x19, #40]
  403abc:	add	x0, x0, w4, uxtw #2
  403ac0:	b	403a3c <ferror@plt+0x11bc>
  403ac4:	mov	w0, #0x0                   	// #0
  403ac8:	ldp	x19, x20, [sp, #16]
  403acc:	ldp	x29, x30, [sp], #32
  403ad0:	ret
  403ad4:	ldr	w1, [x19, #20]
  403ad8:	add	w1, w1, #0x1
  403adc:	str	w1, [x19, #20]
  403ae0:	b	403a94 <ferror@plt+0x1214>
  403ae4:	nop
  403ae8:	stp	x29, x30, [sp, #-96]!
  403aec:	sub	w2, w2, #0x1
  403af0:	mov	x29, sp
  403af4:	stp	x19, x20, [sp, #16]
  403af8:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  403afc:	add	x20, x20, #0x550
  403b00:	stp	x21, x22, [sp, #32]
  403b04:	lsr	w22, w2, #1
  403b08:	mov	w1, w22
  403b0c:	stp	x23, x24, [sp, #48]
  403b10:	mov	x24, x0
  403b14:	mov	w23, w3
  403b18:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403b1c:	add	x0, x0, #0x488
  403b20:	bl	4027b0 <printf@plt>
  403b24:	ldr	w0, [x20, #56]
  403b28:	cbnz	w0, 403b40 <ferror@plt+0x12c0>
  403b2c:	ldp	x19, x20, [sp, #16]
  403b30:	ldp	x21, x22, [sp, #32]
  403b34:	ldp	x23, x24, [sp, #48]
  403b38:	ldp	x29, x30, [sp], #96
  403b3c:	ret
  403b40:	stp	x25, x26, [sp, #64]
  403b44:	bl	4039f0 <ferror@plt+0x1170>
  403b48:	mov	w26, w0
  403b4c:	cbz	w22, 403cdc <ferror@plt+0x145c>
  403b50:	adrp	x25, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403b54:	add	x25, x25, #0xa80
  403b58:	lsl	w23, w23, #1
  403b5c:	add	x25, x25, #0x48
  403b60:	stp	x27, x28, [sp, #80]
  403b64:	adrp	x27, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403b68:	add	x27, x27, #0x3f0
  403b6c:	mov	w21, #0x0                   	// #0
  403b70:	tst	x21, #0x3
  403b74:	b.ne	403bc8 <ferror@plt+0x1348>  // b.any
  403b78:	mov	w0, #0xa                   	// #10
  403b7c:	bl	4027e0 <putchar@plt>
  403b80:	ldr	w0, [x20, #28]
  403b84:	cmp	w0, #0x0
  403b88:	b.le	403ce4 <ferror@plt+0x1464>
  403b8c:	ldp	w28, w19, [x20, #8]
  403b90:	mov	x1, x24
  403b94:	mov	x0, x27
  403b98:	bl	4027b0 <printf@plt>
  403b9c:	ldr	w0, [x20, #60]
  403ba0:	cbnz	w0, 403cc8 <ferror@plt+0x1448>
  403ba4:	mov	x2, x25
  403ba8:	mov	w1, w23
  403bac:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403bb0:	add	x0, x0, #0x400
  403bb4:	bl	4027b0 <printf@plt>
  403bb8:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403bbc:	mov	w1, w26
  403bc0:	add	x0, x0, #0x448
  403bc4:	bl	4027b0 <printf@plt>
  403bc8:	mov	w0, #0x1                   	// #1
  403bcc:	bl	403310 <ferror@plt+0xa90>
  403bd0:	cbz	x0, 403c9c <ferror@plt+0x141c>
  403bd4:	ldr	w1, [x20, #32]
  403bd8:	ldr	w19, [x0]
  403bdc:	cmp	w1, #0x0
  403be0:	rev	w0, w19
  403be4:	csel	w19, w0, w19, ne  // ne = any
  403be8:	mov	w0, #0x1                   	// #1
  403bec:	bl	403310 <ferror@plt+0xa90>
  403bf0:	cbz	x0, 403cb0 <ferror@plt+0x1430>
  403bf4:	ldr	w2, [x20, #32]
  403bf8:	mov	w1, w19
  403bfc:	ldr	w19, [x0]
  403c00:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403c04:	cmp	w2, #0x0
  403c08:	add	x0, x0, #0x498
  403c0c:	rev	w2, w19
  403c10:	csel	w19, w2, w19, ne  // ne = any
  403c14:	mov	w2, w19
  403c18:	bl	4027b0 <printf@plt>
  403c1c:	cbz	w19, 403c38 <ferror@plt+0x13b8>
  403c20:	mov	w1, #0x28                  	// #40
  403c24:	tbnz	w19, #0, 403c84 <ferror@plt+0x1404>
  403c28:	tbnz	w19, #1, 403c60 <ferror@plt+0x13e0>
  403c2c:	tbnz	w19, #2, 403c74 <ferror@plt+0x13f4>
  403c30:	mov	w0, #0x29                  	// #41
  403c34:	bl	4027e0 <putchar@plt>
  403c38:	add	w21, w21, #0x1
  403c3c:	cmp	w22, w21
  403c40:	b.ne	403b70 <ferror@plt+0x12f0>  // b.any
  403c44:	ldp	x19, x20, [sp, #16]
  403c48:	ldp	x21, x22, [sp, #32]
  403c4c:	ldp	x23, x24, [sp, #48]
  403c50:	ldp	x25, x26, [sp, #64]
  403c54:	ldp	x27, x28, [sp, #80]
  403c58:	ldp	x29, x30, [sp], #96
  403c5c:	ret
  403c60:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403c64:	add	x0, x0, #0x4b0
  403c68:	bl	4027b0 <printf@plt>
  403c6c:	mov	w1, #0x2c                  	// #44
  403c70:	tbz	w19, #2, 403c30 <ferror@plt+0x13b0>
  403c74:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403c78:	add	x0, x0, #0x4b8
  403c7c:	bl	4027b0 <printf@plt>
  403c80:	b	403c30 <ferror@plt+0x13b0>
  403c84:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403c88:	add	x0, x0, #0x4a8
  403c8c:	bl	4027b0 <printf@plt>
  403c90:	mov	w1, #0x2c                  	// #44
  403c94:	tbz	w19, #1, 403c2c <ferror@plt+0x13ac>
  403c98:	b	403c60 <ferror@plt+0x13e0>
  403c9c:	mov	w19, #0x0                   	// #0
  403ca0:	mov	w0, #0x1                   	// #1
  403ca4:	bl	403310 <ferror@plt+0xa90>
  403ca8:	cbnz	x0, 403bf4 <ferror@plt+0x1374>
  403cac:	nop
  403cb0:	mov	w1, w19
  403cb4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403cb8:	mov	w2, #0x0                   	// #0
  403cbc:	add	x0, x0, #0x498
  403cc0:	bl	4027b0 <printf@plt>
  403cc4:	b	403c38 <ferror@plt+0x13b8>
  403cc8:	add	w1, w28, w19
  403ccc:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403cd0:	add	x0, x0, #0x3f8
  403cd4:	bl	4027b0 <printf@plt>
  403cd8:	b	403ba4 <ferror@plt+0x1324>
  403cdc:	ldp	x25, x26, [sp, #64]
  403ce0:	b	403b2c <ferror@plt+0x12ac>
  403ce4:	bl	402890 <ferror@plt+0x10>
  403ce8:	stp	x29, x30, [sp, #-48]!
  403cec:	mov	x29, sp
  403cf0:	stp	x19, x20, [sp, #16]
  403cf4:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  403cf8:	add	x19, x19, #0x550
  403cfc:	ldr	w0, [x19, #28]
  403d00:	cmp	w0, #0x0
  403d04:	b.le	403e50 <ferror@plt+0x15d0>
  403d08:	mov	w20, w2
  403d0c:	cbnz	w2, 403d24 <ferror@plt+0x14a4>
  403d10:	ldp	x19, x20, [sp, #16]
  403d14:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403d18:	ldp	x29, x30, [sp], #48
  403d1c:	add	x0, x0, #0x4c8
  403d20:	b	4027b0 <printf@plt>
  403d24:	stp	x21, x22, [sp, #32]
  403d28:	ldp	w21, w22, [x19, #8]
  403d2c:	bl	4039f0 <ferror@plt+0x1170>
  403d30:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403d34:	mov	w1, w0
  403d38:	add	x0, x2, #0x4d8
  403d3c:	bl	4027b0 <printf@plt>
  403d40:	bl	4039f0 <ferror@plt+0x1170>
  403d44:	mov	w1, w0
  403d48:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403d4c:	add	x0, x0, #0x4e8
  403d50:	bl	4027b0 <printf@plt>
  403d54:	bl	4039f0 <ferror@plt+0x1170>
  403d58:	mov	w1, w0
  403d5c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403d60:	add	x0, x0, #0x508
  403d64:	bl	4027b0 <printf@plt>
  403d68:	ldr	w0, [x19, #28]
  403d6c:	cmp	w0, #0x0
  403d70:	b.le	403e54 <ferror@plt+0x15d4>
  403d74:	ldp	w0, w1, [x19, #8]
  403d78:	add	w21, w21, w22
  403d7c:	add	w0, w0, w1
  403d80:	sub	x0, x0, x21
  403d84:	cmp	x0, w20, uxtw
  403d88:	b.cc	403d9c <ferror@plt+0x151c>  // b.lo, b.ul, b.last
  403d8c:	ldp	x19, x20, [sp, #16]
  403d90:	ldp	x21, x22, [sp, #32]
  403d94:	ldp	x29, x30, [sp], #48
  403d98:	ret
  403d9c:	bl	4039f0 <ferror@plt+0x1170>
  403da0:	cbz	w0, 403e38 <ferror@plt+0x15b8>
  403da4:	bl	403310 <ferror@plt+0xa90>
  403da8:	mov	x1, x0
  403dac:	cbz	x0, 403e38 <ferror@plt+0x15b8>
  403db0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403db4:	add	x0, x0, #0x520
  403db8:	bl	4027b0 <printf@plt>
  403dbc:	bl	4039f0 <ferror@plt+0x1170>
  403dc0:	mov	w19, w0
  403dc4:	bl	4039f0 <ferror@plt+0x1170>
  403dc8:	cbz	w0, 403e44 <ferror@plt+0x15c4>
  403dcc:	bl	403310 <ferror@plt+0xa90>
  403dd0:	mov	x1, x0
  403dd4:	cbz	x0, 403e44 <ferror@plt+0x15c4>
  403dd8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  403ddc:	add	x0, x0, #0xdb0
  403de0:	bl	4027b0 <printf@plt>
  403de4:	bl	4039f0 <ferror@plt+0x1170>
  403de8:	mov	w20, w0
  403dec:	bl	4039f0 <ferror@plt+0x1170>
  403df0:	mov	w21, w0
  403df4:	bl	4039f0 <ferror@plt+0x1170>
  403df8:	mov	w22, w0
  403dfc:	bl	4039f0 <ferror@plt+0x1170>
  403e00:	mov	w4, w0
  403e04:	mov	w3, w22
  403e08:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403e0c:	mov	w2, w21
  403e10:	mov	w1, w20
  403e14:	add	x0, x0, #0x528
  403e18:	bl	4027b0 <printf@plt>
  403e1c:	cbz	w19, 403d8c <ferror@plt+0x150c>
  403e20:	ldp	x19, x20, [sp, #16]
  403e24:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403e28:	ldp	x21, x22, [sp, #32]
  403e2c:	add	x0, x0, #0x538
  403e30:	ldp	x29, x30, [sp], #48
  403e34:	b	4027b0 <printf@plt>
  403e38:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403e3c:	add	x1, x1, #0x4c0
  403e40:	b	403db0 <ferror@plt+0x1530>
  403e44:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403e48:	add	x1, x1, #0x4c0
  403e4c:	b	403dd8 <ferror@plt+0x1558>
  403e50:	stp	x21, x22, [sp, #32]
  403e54:	bl	402890 <ferror@plt+0x10>
  403e58:	stp	x29, x30, [sp, #-80]!
  403e5c:	mov	x29, sp
  403e60:	stp	x19, x20, [sp, #16]
  403e64:	stp	x21, x22, [sp, #32]
  403e68:	stp	x23, x24, [sp, #48]
  403e6c:	mov	w23, #0x5e                  	// #94
  403e70:	mov	w24, #0x23                  	// #35
  403e74:	str	x0, [sp, #72]
  403e78:	bl	402270 <strlen@plt>
  403e7c:	add	x0, x0, #0x1
  403e80:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  403e84:	ldr	x1, [sp, #72]
  403e88:	mov	x22, x0
  403e8c:	mov	x21, x0
  403e90:	ldrb	w2, [x1]
  403e94:	cbz	w2, 403ee8 <ferror@plt+0x1668>
  403e98:	mov	x20, x1
  403e9c:	mov	w19, w2
  403ea0:	b	403eac <ferror@plt+0x162c>
  403ea4:	ldrb	w19, [x20, #1]!
  403ea8:	cbz	w19, 403eb4 <ferror@plt+0x1634>
  403eac:	cmp	w19, #0x2f
  403eb0:	b.ne	403ea4 <ferror@plt+0x1624>  // b.any
  403eb4:	cmp	w2, #0x2e
  403eb8:	sub	x2, x20, x1
  403ebc:	ccmp	x2, #0x2, #0x0, eq  // eq = none
  403ec0:	b.eq	403f04 <ferror@plt+0x1684>  // b.none
  403ec4:	mov	x0, x21
  403ec8:	add	x21, x21, x2
  403ecc:	bl	402220 <memcpy@plt>
  403ed0:	mov	x1, x20
  403ed4:	cbz	w19, 403e90 <ferror@plt+0x1610>
  403ed8:	ldrb	w2, [x20, #1]
  403edc:	add	x1, x20, #0x1
  403ee0:	strb	w24, [x21], #1
  403ee4:	cbnz	w2, 403e98 <ferror@plt+0x1618>
  403ee8:	strb	wzr, [x21]
  403eec:	mov	x0, x22
  403ef0:	ldp	x19, x20, [sp, #16]
  403ef4:	ldp	x21, x22, [sp, #32]
  403ef8:	ldp	x23, x24, [sp, #48]
  403efc:	ldp	x29, x30, [sp], #80
  403f00:	ret
  403f04:	ldrb	w0, [x1, #1]
  403f08:	cmp	w0, #0x2e
  403f0c:	b.ne	403ec4 <ferror@plt+0x1644>  // b.any
  403f10:	strb	w23, [x21], #1
  403f14:	b	403ed0 <ferror@plt+0x1650>
  403f18:	mov	x4, x0
  403f1c:	adrp	x5, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403f20:	mov	w0, #0x1e                  	// #30
  403f24:	add	x5, x5, #0xc80
  403f28:	mov	w2, #0x0                   	// #0
  403f2c:	b	403f4c <ferror@plt+0x16cc>
  403f30:	sub	w1, w0, w2
  403f34:	add	w1, w2, w1, lsr #1
  403f38:	ubfiz	x3, x1, #4, #32
  403f3c:	ldr	w3, [x5, x3]
  403f40:	cmp	x3, x4
  403f44:	b.cc	403f68 <ferror@plt+0x16e8>  // b.lo, b.ul, b.last
  403f48:	mov	w0, w1
  403f4c:	cmp	w0, w2
  403f50:	b.ne	403f30 <ferror@plt+0x16b0>  // b.any
  403f54:	ubfiz	x1, x0, #4, #32
  403f58:	ldr	w1, [x5, x1]
  403f5c:	cmp	x1, x4
  403f60:	b.cc	403f70 <ferror@plt+0x16f0>  // b.lo, b.ul, b.last
  403f64:	ret
  403f68:	add	w2, w1, #0x1
  403f6c:	b	403f4c <ferror@plt+0x16cc>
  403f70:	stp	x29, x30, [sp, #-16]!
  403f74:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403f78:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403f7c:	mov	x29, sp
  403f80:	add	x2, x2, #0xc48
  403f84:	add	x0, x0, #0xc68
  403f88:	mov	w1, #0x60                  	// #96
  403f8c:	bl	4028b0 <ferror@plt+0x30>
  403f90:	stp	x29, x30, [sp, #-64]!
  403f94:	mov	x29, sp
  403f98:	stp	x19, x20, [sp, #16]
  403f9c:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  403fa0:	add	x19, x19, #0x590
  403fa4:	ldarb	w0, [x19]
  403fa8:	tbz	w0, #0, 403fbc <ferror@plt+0x173c>
  403fac:	add	x0, x19, #0x8
  403fb0:	ldp	x19, x20, [sp, #16]
  403fb4:	ldp	x29, x30, [sp], #64
  403fb8:	ret
  403fbc:	mov	x0, x19
  403fc0:	bl	45cff0 <_obstack_memory_used@@Base+0x6c8>
  403fc4:	cbz	w0, 403fac <ferror@plt+0x172c>
  403fc8:	mov	x0, #0x30                  	// #48
  403fcc:	stp	x21, x22, [sp, #32]
  403fd0:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x106d8>
  403fd4:	stp	x23, x24, [sp, #48]
  403fd8:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  403fdc:	add	x20, x20, #0xc80
  403fe0:	mov	x23, x0
  403fe4:	mov	w2, #0x1e                  	// #30
  403fe8:	mov	w21, #0x0                   	// #0
  403fec:	stp	xzr, xzr, [x0, #16]
  403ff0:	str	xzr, [x0, #32]
  403ff4:	strb	wzr, [x0, #44]
  403ff8:	b	404018 <ferror@plt+0x1798>
  403ffc:	sub	w1, w2, w21
  404000:	add	w1, w21, w1, lsr #1
  404004:	ubfiz	x3, x1, #4, #32
  404008:	ldr	w3, [x20, x3]
  40400c:	cmp	w3, #0xc
  404010:	b.ls	4041dc <ferror@plt+0x195c>  // b.plast
  404014:	mov	w2, w1
  404018:	cmp	w2, w21
  40401c:	b.ne	403ffc <ferror@plt+0x177c>  // b.any
  404020:	ubfiz	x0, x21, #4, #32
  404024:	ldr	w22, [x20, x0]
  404028:	cmp	w22, #0xc
  40402c:	mov	w24, w22
  404030:	b.ls	4041ec <ferror@plt+0x196c>  // b.plast
  404034:	mov	x0, x24
  404038:	mov	x1, #0x10                  	// #16
  40403c:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  404040:	mov	x3, x0
  404044:	cbz	x24, 40405c <ferror@plt+0x17dc>
  404048:	add	x2, x0, w22, uxtw #4
  40404c:	mov	x1, x0
  404050:	str	xzr, [x1], #16
  404054:	cmp	x1, x2
  404058:	b.ne	404050 <ferror@plt+0x17d0>  // b.any
  40405c:	stp	x3, x24, [x23]
  404060:	mov	x0, #0x30                  	// #48
  404064:	mov	w22, #0x0                   	// #0
  404068:	str	w21, [x23, #40]
  40406c:	str	x23, [x19, #48]
  404070:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  404074:	mov	x23, x0
  404078:	mov	w2, #0x1e                  	// #30
  40407c:	stp	xzr, xzr, [x0, #16]
  404080:	str	xzr, [x0, #32]
  404084:	strb	wzr, [x0, #44]
  404088:	b	4040a8 <ferror@plt+0x1828>
  40408c:	sub	w1, w2, w22
  404090:	add	w1, w22, w1, lsr #1
  404094:	ubfiz	x3, x1, #4, #32
  404098:	ldr	w3, [x20, x3]
  40409c:	cmp	w3, #0xc
  4040a0:	b.ls	4041e4 <ferror@plt+0x1964>  // b.plast
  4040a4:	mov	w2, w1
  4040a8:	cmp	w2, w22
  4040ac:	b.ne	40408c <ferror@plt+0x180c>  // b.any
  4040b0:	ubfiz	x0, x22, #4, #32
  4040b4:	ldr	w21, [x20, x0]
  4040b8:	cmp	w21, #0xc
  4040bc:	mov	w24, w21
  4040c0:	b.ls	4041ec <ferror@plt+0x196c>  // b.plast
  4040c4:	mov	x0, x24
  4040c8:	mov	x1, #0x18                  	// #24
  4040cc:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  4040d0:	mov	x3, x0
  4040d4:	cbz	x24, 4040f4 <ferror@plt+0x1874>
  4040d8:	mov	w2, #0x18                  	// #24
  4040dc:	mov	x1, x0
  4040e0:	umaddl	x2, w21, w2, x0
  4040e4:	nop
  4040e8:	str	xzr, [x1], #24
  4040ec:	cmp	x2, x1
  4040f0:	b.ne	4040e8 <ferror@plt+0x1868>  // b.any
  4040f4:	stp	x3, x24, [x23]
  4040f8:	mov	x0, #0x30                  	// #48
  4040fc:	mov	w21, #0x0                   	// #0
  404100:	str	w22, [x23, #40]
  404104:	str	x23, [x19, #56]
  404108:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40410c:	mov	x22, x0
  404110:	mov	w2, #0x1e                  	// #30
  404114:	stp	xzr, xzr, [x0, #16]
  404118:	str	xzr, [x0, #32]
  40411c:	strb	wzr, [x0, #44]
  404120:	b	404140 <ferror@plt+0x18c0>
  404124:	sub	w1, w2, w21
  404128:	add	w1, w21, w1, lsr #1
  40412c:	ubfiz	x3, x1, #4, #32
  404130:	ldr	w3, [x20, x3]
  404134:	cmp	w3, #0xc
  404138:	b.ls	4041d4 <ferror@plt+0x1954>  // b.plast
  40413c:	mov	w2, w1
  404140:	cmp	w2, w21
  404144:	b.ne	404124 <ferror@plt+0x18a4>  // b.any
  404148:	ubfiz	x0, x21, #4, #32
  40414c:	ldr	w20, [x20, x0]
  404150:	cmp	w20, #0xc
  404154:	mov	w23, w20
  404158:	b.ls	4041ec <ferror@plt+0x196c>  // b.plast
  40415c:	mov	x0, x23
  404160:	mov	x1, #0x18                  	// #24
  404164:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  404168:	mov	x3, x0
  40416c:	cbz	x23, 40418c <ferror@plt+0x190c>
  404170:	mov	w2, #0x18                  	// #24
  404174:	mov	x1, x0
  404178:	umaddl	x2, w20, w2, x0
  40417c:	nop
  404180:	str	xzr, [x1], #24
  404184:	cmp	x1, x2
  404188:	b.ne	404180 <ferror@plt+0x1900>  // b.any
  40418c:	stp	x3, x23, [x22]
  404190:	mov	x0, x19
  404194:	add	x20, x19, #0x8
  404198:	str	w21, [x22, #40]
  40419c:	str	x22, [x19, #8]
  4041a0:	bl	45d180 <_obstack_memory_used@@Base+0x858>
  4041a4:	mov	x1, x20
  4041a8:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4041ac:	adrp	x0, 404000 <ferror@plt+0x1780>
  4041b0:	add	x2, x2, #0x340
  4041b4:	add	x0, x0, #0x210
  4041b8:	bl	402330 <__cxa_atexit@plt>
  4041bc:	add	x0, x19, #0x8
  4041c0:	ldp	x19, x20, [sp, #16]
  4041c4:	ldp	x21, x22, [sp, #32]
  4041c8:	ldp	x23, x24, [sp, #48]
  4041cc:	ldp	x29, x30, [sp], #64
  4041d0:	ret
  4041d4:	add	w21, w1, #0x1
  4041d8:	b	404140 <ferror@plt+0x18c0>
  4041dc:	add	w21, w1, #0x1
  4041e0:	b	404018 <ferror@plt+0x1798>
  4041e4:	add	w22, w1, #0x1
  4041e8:	b	4040a8 <ferror@plt+0x1828>
  4041ec:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4041f0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4041f4:	add	x2, x2, #0xc48
  4041f8:	add	x0, x0, #0xc68
  4041fc:	mov	w1, #0x60                  	// #96
  404200:	bl	4028b0 <ferror@plt+0x30>
  404204:	nop
  404208:	ret
  40420c:	nop
  404210:	stp	x29, x30, [sp, #-48]!
  404214:	mov	x29, sp
  404218:	stp	x21, x22, [sp, #32]
  40421c:	mov	x21, x0
  404220:	ldr	x22, [x0, #40]
  404224:	stp	x19, x20, [sp, #16]
  404228:	ldp	x3, x2, [x22]
  40422c:	add	x20, x3, x2, lsl #4
  404230:	cmp	x3, x20
  404234:	b.cs	40425c <ferror@plt+0x19dc>  // b.hs, b.nlast
  404238:	mov	x1, x3
  40423c:	nop
  404240:	ldr	x0, [x1]
  404244:	mov	x19, x1
  404248:	add	x1, x1, #0x10
  40424c:	cmp	x0, #0x1
  404250:	b.hi	40431c <ferror@plt+0x1a9c>  // b.pmore
  404254:	cmp	x20, x1
  404258:	b.hi	404240 <ferror@plt+0x19c0>  // b.pmore
  40425c:	sub	x1, x2, #0x1
  404260:	cbz	x2, 404274 <ferror@plt+0x19f4>
  404264:	nop
  404268:	sub	x1, x1, #0x1
  40426c:	cmp	x1, x2
  404270:	b.cc	404268 <ferror@plt+0x19e8>  // b.lo, b.ul, b.last
  404274:	ldrb	w0, [x22, #44]
  404278:	cbz	w0, 404398 <ferror@plt+0x1b18>
  40427c:	mov	x0, x3
  404280:	bl	404420 <ferror@plt+0x1ba0>
  404284:	mov	x0, x22
  404288:	mov	x1, #0x30                  	// #48
  40428c:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  404290:	ldr	x19, [x21, #48]
  404294:	cbz	x19, 4042d0 <ferror@plt+0x1a50>
  404298:	ldr	x0, [x19, #8]
  40429c:	sub	x1, x0, #0x1
  4042a0:	cbz	x0, 4042b4 <ferror@plt+0x1a34>
  4042a4:	nop
  4042a8:	sub	x1, x1, #0x1
  4042ac:	cmp	x0, x1
  4042b0:	b.hi	4042a8 <ferror@plt+0x1a28>  // b.pmore
  4042b4:	ldrb	w1, [x19, #44]
  4042b8:	ldr	x0, [x19]
  4042bc:	cbz	w1, 404390 <ferror@plt+0x1b10>
  4042c0:	bl	404420 <ferror@plt+0x1ba0>
  4042c4:	mov	x0, x19
  4042c8:	mov	x1, #0x30                  	// #48
  4042cc:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  4042d0:	ldr	x19, [x21]
  4042d4:	cbz	x19, 4043a4 <ferror@plt+0x1b24>
  4042d8:	ldr	x1, [x19, #8]
  4042dc:	sub	x0, x1, #0x1
  4042e0:	cbz	x1, 4042f4 <ferror@plt+0x1a74>
  4042e4:	nop
  4042e8:	sub	x0, x0, #0x1
  4042ec:	cmp	x1, x0
  4042f0:	b.hi	4042e8 <ferror@plt+0x1a68>  // b.pmore
  4042f4:	ldrb	w1, [x19, #44]
  4042f8:	ldr	x0, [x19]
  4042fc:	cbz	w1, 404374 <ferror@plt+0x1af4>
  404300:	bl	404420 <ferror@plt+0x1ba0>
  404304:	mov	x0, x19
  404308:	mov	x1, #0x30                  	// #48
  40430c:	ldp	x19, x20, [sp, #16]
  404310:	ldp	x21, x22, [sp, #32]
  404314:	ldp	x29, x30, [sp], #48
  404318:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40431c:	cbz	x0, 404328 <ferror@plt+0x1aa8>
  404320:	mov	x1, #0x20                  	// #32
  404324:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  404328:	ldr	x0, [x19, #8]
  40432c:	cbz	x0, 404338 <ferror@plt+0x1ab8>
  404330:	mov	x1, #0x20                  	// #32
  404334:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  404338:	add	x1, x19, #0x10
  40433c:	b	404354 <ferror@plt+0x1ad4>
  404340:	ldr	x0, [x1]
  404344:	mov	x19, x1
  404348:	add	x1, x1, #0x10
  40434c:	cmp	x0, #0x1
  404350:	b.hi	40431c <ferror@plt+0x1a9c>  // b.pmore
  404354:	cmp	x20, x1
  404358:	b.hi	404340 <ferror@plt+0x1ac0>  // b.pmore
  40435c:	ldr	x22, [x21, #40]
  404360:	cbz	x22, 404290 <ferror@plt+0x1a10>
  404364:	ldp	x3, x2, [x22]
  404368:	sub	x1, x2, #0x1
  40436c:	cbnz	x2, 404268 <ferror@plt+0x19e8>
  404370:	b	404274 <ferror@plt+0x19f4>
  404374:	bl	402640 <free@plt>
  404378:	mov	x0, x19
  40437c:	mov	x1, #0x30                  	// #48
  404380:	ldp	x19, x20, [sp, #16]
  404384:	ldp	x21, x22, [sp, #32]
  404388:	ldp	x29, x30, [sp], #48
  40438c:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  404390:	bl	402640 <free@plt>
  404394:	b	4042c4 <ferror@plt+0x1a44>
  404398:	mov	x0, x3
  40439c:	bl	402640 <free@plt>
  4043a0:	b	404284 <ferror@plt+0x1a04>
  4043a4:	ldp	x19, x20, [sp, #16]
  4043a8:	ldp	x21, x22, [sp, #32]
  4043ac:	ldp	x29, x30, [sp], #48
  4043b0:	ret
  4043b4:	nop
  4043b8:	ret
  4043bc:	nop
  4043c0:	cbnz	x1, 4043c8 <ferror@plt+0x1b48>
  4043c4:	b	45ca18 <_obstack_memory_used@@Base+0xf0>
  4043c8:	stp	x29, x30, [sp, #-16]!
  4043cc:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4043d0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4043d4:	mov	x29, sp
  4043d8:	add	x2, x2, #0xe60
  4043dc:	add	x0, x0, #0xe78
  4043e0:	mov	w1, #0x2f                  	// #47
  4043e4:	bl	4028b0 <ferror@plt+0x30>
  4043e8:	cbnz	x1, 4043f4 <ferror@plt+0x1b74>
  4043ec:	mov	x1, #0x1                   	// #1
  4043f0:	b	45ca50 <_obstack_memory_used@@Base+0x128>
  4043f4:	stp	x29, x30, [sp, #-16]!
  4043f8:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4043fc:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404400:	mov	x29, sp
  404404:	add	x2, x2, #0xe90
  404408:	add	x0, x0, #0xe78
  40440c:	mov	w1, #0x37                  	// #55
  404410:	bl	4028b0 <ferror@plt+0x30>
  404414:	nop
  404418:	b	45caa0 <_obstack_memory_used@@Base+0x178>
  40441c:	nop
  404420:	b	402640 <free@plt>
  404424:	nop
  404428:	ret
  40442c:	nop
  404430:	cmp	w2, #0x0
  404434:	b.lt	4044ac <ferror@plt+0x1c2c>  // b.tstop
  404438:	stp	x29, x30, [sp, #-32]!
  40443c:	mov	x29, sp
  404440:	stp	x19, x20, [sp, #16]
  404444:	mov	x19, x1
  404448:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40444c:	ldr	x20, [x1, #1312]
  404450:	b.ne	40447c <ferror@plt+0x1bfc>  // b.any
  404454:	mov	x2, x19
  404458:	mov	x0, x20
  40445c:	ldp	x19, x20, [sp, #16]
  404460:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  404464:	ldp	x29, x30, [sp], #32
  404468:	add	x3, x3, #0x148
  40446c:	mov	x4, x3
  404470:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404474:	add	x1, x1, #0xeb8
  404478:	b	402840 <fprintf@plt>
  40447c:	mov	w0, w2
  404480:	bl	45cb98 <_obstack_memory_used@@Base+0x270>
  404484:	mov	x2, x19
  404488:	mov	x4, x0
  40448c:	mov	x0, x20
  404490:	adrp	x3, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404494:	ldp	x19, x20, [sp, #16]
  404498:	add	x3, x3, #0xeb0
  40449c:	ldp	x29, x30, [sp], #32
  4044a0:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4044a4:	add	x1, x1, #0xeb8
  4044a8:	b	402840 <fprintf@plt>
  4044ac:	ret
  4044b0:	mov	x2, x1
  4044b4:	stp	x29, x30, [sp, #-32]!
  4044b8:	mov	x29, sp
  4044bc:	ldr	w2, [x2, #56]
  4044c0:	ldr	x1, [x1, #40]
  4044c4:	str	x19, [sp, #16]
  4044c8:	mov	x19, x0
  4044cc:	bl	409b28 <ferror@plt+0x72a8>
  4044d0:	ldr	x0, [x19]
  4044d4:	bl	40e7c8 <ferror@plt+0xbf48>
  4044d8:	ldr	x0, [x19]
  4044dc:	ldr	x19, [sp, #16]
  4044e0:	ldp	x29, x30, [sp], #32
  4044e4:	b	40e4c8 <ferror@plt+0xbc48>
  4044e8:	stp	x29, x30, [sp, #-32]!
  4044ec:	mov	x29, sp
  4044f0:	stp	x19, x20, [sp, #16]
  4044f4:	mov	x19, x0
  4044f8:	ldr	w0, [x0, #56]
  4044fc:	cbz	w0, 404548 <ferror@plt+0x1cc8>
  404500:	ldrb	w0, [x19, #64]
  404504:	ldr	x20, [x19]
  404508:	cbnz	w0, 40453c <ferror@plt+0x1cbc>
  40450c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404510:	add	x0, x0, #0xef0
  404514:	bl	402830 <gettext@plt>
  404518:	mov	x1, x0
  40451c:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  404520:	mov	x0, x20
  404524:	ldr	x2, [x2, #1488]
  404528:	bl	410cf0 <ferror@plt+0xe470>
  40452c:	ldr	x0, [x19]
  404530:	ldp	x19, x20, [sp, #16]
  404534:	ldp	x29, x30, [sp], #32
  404538:	b	410ee0 <ferror@plt+0xe660>
  40453c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404540:	add	x0, x0, #0xec0
  404544:	b	404514 <ferror@plt+0x1c94>
  404548:	ldp	x19, x20, [sp, #16]
  40454c:	ldp	x29, x30, [sp], #32
  404550:	ret
  404554:	nop
  404558:	stp	x29, x30, [sp, #-64]!
  40455c:	mov	x29, sp
  404560:	stp	x19, x20, [sp, #16]
  404564:	mov	x20, x0
  404568:	orr	x0, x2, x4
  40456c:	cbz	x0, 404708 <ferror@plt+0x1e88>
  404570:	ldr	w0, [x20]
  404574:	cmp	x2, #0x0
  404578:	stp	x21, x22, [sp, #32]
  40457c:	mov	x19, x4
  404580:	mov	x21, x2
  404584:	str	x23, [sp, #48]
  404588:	mov	x22, x1
  40458c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  404590:	mov	w23, w3
  404594:	b.eq	404718 <ferror@plt+0x1e98>  // b.none
  404598:	cmp	w0, #0x13
  40459c:	b.gt	4046c8 <ferror@plt+0x1e48>
  4045a0:	add	w0, w0, #0x1
  4045a4:	str	w0, [x20]
  4045a8:	cbz	x19, 404750 <ferror@plt+0x1ed0>
  4045ac:	mov	x0, x19
  4045b0:	mov	w1, #0x400b                	// #16395
  4045b4:	bl	4594c8 <ferror@plt+0x56c48>
  4045b8:	cmp	x0, #0x0
  4045bc:	csel	x19, x19, x0, eq  // eq = none
  4045c0:	mov	x20, x0
  4045c4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4045c8:	mov	x0, x19
  4045cc:	add	x1, x1, #0xf40
  4045d0:	mov	x2, #0x4                   	// #4
  4045d4:	bl	402400 <strncmp@plt>
  4045d8:	cbnz	w0, 4045ec <ferror@plt+0x1d6c>
  4045dc:	ldrb	w0, [x19, #4]
  4045e0:	cmp	w0, #0x28
  4045e4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4045e8:	b.eq	4046b8 <ferror@plt+0x1e38>  // b.none
  4045ec:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4045f0:	mov	x0, x19
  4045f4:	add	x1, x1, #0xf38
  4045f8:	mov	x2, #0xc                   	// #12
  4045fc:	bl	402400 <strncmp@plt>
  404600:	cbz	w0, 4046a8 <ferror@plt+0x1e28>
  404604:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404608:	mov	x0, x19
  40460c:	add	x1, x1, #0xf48
  404610:	mov	x2, #0x10                  	// #16
  404614:	bl	402400 <strncmp@plt>
  404618:	cbnz	w0, 40462c <ferror@plt+0x1dac>
  40461c:	ldrb	w0, [x19, #16]
  404620:	cmp	w0, #0x28
  404624:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404628:	b.eq	4046b8 <ferror@plt+0x1e38>  // b.none
  40462c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404630:	mov	x0, x19
  404634:	add	x1, x1, #0xf60
  404638:	mov	x2, #0xc                   	// #12
  40463c:	bl	402400 <strncmp@plt>
  404640:	cbnz	w0, 404654 <ferror@plt+0x1dd4>
  404644:	ldrb	w0, [x19, #12]
  404648:	cmp	w0, #0x28
  40464c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404650:	b.eq	4046b8 <ferror@plt+0x1e38>  // b.none
  404654:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  404658:	cmp	x21, #0x0
  40465c:	adrp	x4, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404660:	add	x4, x4, #0xf20
  404664:	ldr	x0, [x0, #1312]
  404668:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40466c:	mov	w5, w23
  404670:	mov	x3, x19
  404674:	mov	x2, x22
  404678:	csel	x4, x4, x21, eq  // eq = none
  40467c:	add	x1, x1, #0xf70
  404680:	bl	402840 <fprintf@plt>
  404684:	cbz	x20, 404740 <ferror@plt+0x1ec0>
  404688:	mov	x0, x20
  40468c:	bl	402640 <free@plt>
  404690:	mov	w0, #0x0                   	// #0
  404694:	ldp	x19, x20, [sp, #16]
  404698:	ldp	x21, x22, [sp, #32]
  40469c:	ldr	x23, [sp, #48]
  4046a0:	ldp	x29, x30, [sp], #64
  4046a4:	ret
  4046a8:	ldrb	w0, [x19, #12]
  4046ac:	cmp	w0, #0x28
  4046b0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4046b4:	b.ne	404604 <ferror@plt+0x1d84>  // b.any
  4046b8:	cbz	x20, 4046c8 <ferror@plt+0x1e48>
  4046bc:	mov	x0, x20
  4046c0:	bl	402640 <free@plt>
  4046c4:	nop
  4046c8:	ldp	x21, x22, [sp, #32]
  4046cc:	mov	w0, #0x1                   	// #1
  4046d0:	ldr	x23, [sp, #48]
  4046d4:	ldp	x19, x20, [sp, #16]
  4046d8:	ldp	x29, x30, [sp], #64
  4046dc:	ret
  4046e0:	adrp	x4, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4046e4:	add	x4, x4, #0xf20
  4046e8:	mov	w5, w23
  4046ec:	mov	x2, x22
  4046f0:	mov	x3, x4
  4046f4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4046f8:	add	x1, x1, #0xf70
  4046fc:	bl	402840 <fprintf@plt>
  404700:	ldp	x21, x22, [sp, #32]
  404704:	ldr	x23, [sp, #48]
  404708:	mov	w0, #0x0                   	// #0
  40470c:	ldp	x19, x20, [sp, #16]
  404710:	ldp	x29, x30, [sp], #64
  404714:	ret
  404718:	mov	x0, x2
  40471c:	bl	45c4a0 <ferror@plt+0x59c20>
  404720:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404724:	add	x1, x1, #0xf28
  404728:	bl	4025d0 <strcmp@plt>
  40472c:	cbz	w0, 404740 <ferror@plt+0x1ec0>
  404730:	ldr	w0, [x20]
  404734:	cmp	w0, #0x13
  404738:	b.le	4045a0 <ferror@plt+0x1d20>
  40473c:	b	4046c8 <ferror@plt+0x1e48>
  404740:	mov	w0, #0x0                   	// #0
  404744:	ldp	x21, x22, [sp, #32]
  404748:	ldr	x23, [sp, #48]
  40474c:	b	40470c <ferror@plt+0x1e8c>
  404750:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  404754:	ldr	x0, [x0, #1312]
  404758:	cbz	x21, 4046e0 <ferror@plt+0x1e60>
  40475c:	mov	w5, w23
  404760:	mov	x4, x21
  404764:	mov	x2, x22
  404768:	adrp	x3, 46d000 <_obstack_memory_used@@Base+0x106d8>
  40476c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404770:	add	x3, x3, #0xf20
  404774:	add	x1, x1, #0xf70
  404778:	bl	402840 <fprintf@plt>
  40477c:	mov	w0, #0x0                   	// #0
  404780:	ldp	x21, x22, [sp, #32]
  404784:	ldr	x23, [sp, #48]
  404788:	b	4046d4 <ferror@plt+0x1e54>
  40478c:	nop
  404790:	stp	x29, x30, [sp, #-272]!
  404794:	mov	w9, #0xffffffc8            	// #-56
  404798:	mov	w8, #0xffffff80            	// #-128
  40479c:	mov	x29, sp
  4047a0:	add	x10, sp, #0xd0
  4047a4:	add	x11, sp, #0x110
  4047a8:	stp	x11, x11, [sp, #48]
  4047ac:	str	x10, [sp, #64]
  4047b0:	stp	w9, w8, [sp, #72]
  4047b4:	ldp	x10, x11, [sp, #48]
  4047b8:	stp	x10, x11, [sp, #16]
  4047bc:	ldp	x8, x9, [sp, #64]
  4047c0:	stp	x8, x9, [sp, #32]
  4047c4:	str	q0, [sp, #80]
  4047c8:	str	q1, [sp, #96]
  4047cc:	str	q2, [sp, #112]
  4047d0:	str	q3, [sp, #128]
  4047d4:	str	q4, [sp, #144]
  4047d8:	str	q5, [sp, #160]
  4047dc:	str	q6, [sp, #176]
  4047e0:	str	q7, [sp, #192]
  4047e4:	stp	x1, x2, [sp, #216]
  4047e8:	add	x1, sp, #0x10
  4047ec:	stp	x3, x4, [sp, #232]
  4047f0:	stp	x5, x6, [sp, #248]
  4047f4:	str	x7, [sp, #264]
  4047f8:	bl	45cc20 <_obstack_memory_used@@Base+0x2f8>
  4047fc:	ldp	x29, x30, [sp], #272
  404800:	ret
  404804:	nop
  404808:	stp	x29, x30, [sp, #-80]!
  40480c:	mov	x29, sp
  404810:	stp	x21, x22, [sp, #32]
  404814:	mov	x21, x0
  404818:	ldrb	w0, [x0, #67]
  40481c:	stp	x19, x20, [sp, #16]
  404820:	mov	x19, x2
  404824:	mov	x2, #0x5                   	// #5
  404828:	stp	x23, x24, [sp, #48]
  40482c:	mov	w23, w3
  404830:	mov	w24, w4
  404834:	str	x25, [sp, #64]
  404838:	mov	x25, x1
  40483c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404840:	add	x1, x1, #0xf98
  404844:	bl	407fc8 <ferror@plt+0x5748>
  404848:	mov	x1, x0
  40484c:	ldrb	w0, [x21, #67]
  404850:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  404854:	mov	x21, x1
  404858:	bl	408058 <ferror@plt+0x57d8>
  40485c:	mov	x22, x0
  404860:	ldr	x1, [x20, #1488]
  404864:	cmp	x19, #0x0
  404868:	csel	x19, x1, x19, eq  // eq = none
  40486c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404870:	mov	x0, x19
  404874:	add	x1, x1, #0xfa0
  404878:	bl	4025d0 <strcmp@plt>
  40487c:	cbz	w0, 4048c8 <ferror@plt+0x2048>
  404880:	ldrb	w0, [x25]
  404884:	cbz	w0, 4048c0 <ferror@plt+0x2040>
  404888:	cbz	w23, 4048c8 <ferror@plt+0x2048>
  40488c:	cmp	w24, #0x0
  404890:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404894:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404898:	add	x0, x0, #0xf90
  40489c:	add	x2, x2, #0xf88
  4048a0:	csel	x2, x2, x0, eq  // eq = none
  4048a4:	add	x20, x20, #0x5d0
  4048a8:	mov	w4, w24
  4048ac:	mov	w3, w23
  4048b0:	add	x0, x20, #0x10
  4048b4:	mov	x1, #0x20                  	// #32
  4048b8:	bl	402360 <snprintf@plt>
  4048bc:	b	4048d0 <ferror@plt+0x2050>
  4048c0:	cbnz	w23, 404900 <ferror@plt+0x2080>
  4048c4:	nop
  4048c8:	add	x20, x20, #0x5d0
  4048cc:	strb	wzr, [x20, #16]
  4048d0:	mov	x4, x22
  4048d4:	add	x3, x20, #0x10
  4048d8:	mov	x2, x19
  4048dc:	mov	x1, x21
  4048e0:	ldp	x19, x20, [sp, #16]
  4048e4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4048e8:	ldp	x21, x22, [sp, #32]
  4048ec:	add	x0, x0, #0xfb0
  4048f0:	ldp	x23, x24, [sp, #48]
  4048f4:	ldr	x25, [sp, #64]
  4048f8:	ldp	x29, x30, [sp], #80
  4048fc:	b	404790 <ferror@plt+0x1f10>
  404900:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404904:	mov	w24, #0x0                   	// #0
  404908:	add	x2, x2, #0xf88
  40490c:	b	4048a4 <ferror@plt+0x2024>
  404910:	stp	x29, x30, [sp, #-32]!
  404914:	mov	x29, sp
  404918:	stp	x19, x20, [sp, #16]
  40491c:	mov	x19, x0
  404920:	mov	x0, x1
  404924:	mov	x1, x19
  404928:	ldp	w3, w4, [x0, #8]
  40492c:	ldr	x2, [x0]
  404930:	ldr	x0, [x1], #121
  404934:	bl	404808 <ferror@plt+0x1f88>
  404938:	mov	x1, x0
  40493c:	mov	x20, x0
  404940:	ldr	x0, [x19]
  404944:	bl	410da0 <ferror@plt+0xe520>
  404948:	mov	x0, x20
  40494c:	bl	402640 <free@plt>
  404950:	ldr	x0, [x19]
  404954:	ldp	x19, x20, [sp, #16]
  404958:	ldp	x29, x30, [sp], #32
  40495c:	b	40f0f0 <ferror@plt+0xc870>
  404960:	stp	x29, x30, [sp, #-32]!
  404964:	mov	x2, #0x5                   	// #5
  404968:	mov	x29, sp
  40496c:	stp	x19, x20, [sp, #16]
  404970:	mov	x19, x0
  404974:	mov	x20, x1
  404978:	ldr	x0, [x0]
  40497c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404980:	add	x1, x1, #0xf98
  404984:	ldrb	w0, [x0, #67]
  404988:	bl	407fc8 <ferror@plt+0x5748>
  40498c:	ldr	x1, [x19]
  404990:	mov	x19, x0
  404994:	ldrb	w0, [x1, #67]
  404998:	bl	408058 <ferror@plt+0x57d8>
  40499c:	mov	x3, x0
  4049a0:	mov	x2, x20
  4049a4:	mov	x1, x19
  4049a8:	ldp	x19, x20, [sp, #16]
  4049ac:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4049b0:	ldp	x29, x30, [sp], #32
  4049b4:	add	x0, x0, #0xfc0
  4049b8:	b	404790 <ferror@plt+0x1f10>
  4049bc:	nop
  4049c0:	stp	x29, x30, [sp, #-32]!
  4049c4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4049c8:	add	x0, x0, #0xfd0
  4049cc:	mov	x29, sp
  4049d0:	bl	4027d0 <getenv@plt>
  4049d4:	cbz	x0, 4049ec <ferror@plt+0x216c>
  4049d8:	mov	w2, #0xa                   	// #10
  4049dc:	mov	x1, #0x0                   	// #0
  4049e0:	bl	402600 <strtol@plt>
  4049e4:	cmp	w0, #0x0
  4049e8:	b.gt	404a14 <ferror@plt+0x2194>
  4049ec:	add	x2, sp, #0x18
  4049f0:	mov	x1, #0x5413                	// #21523
  4049f4:	mov	w0, #0x0                   	// #0
  4049f8:	strh	wzr, [sp, #26]
  4049fc:	bl	402860 <ioctl@plt>
  404a00:	cbnz	w0, 404a1c <ferror@plt+0x219c>
  404a04:	ldrh	w0, [sp, #26]
  404a08:	mov	w1, #0x7fffffff            	// #2147483647
  404a0c:	cmp	w0, #0x0
  404a10:	csel	w0, w0, w1, ne  // ne = any
  404a14:	ldp	x29, x30, [sp], #32
  404a18:	ret
  404a1c:	mov	w0, #0x7fffffff            	// #2147483647
  404a20:	ldp	x29, x30, [sp], #32
  404a24:	ret
  404a28:	stp	x29, x30, [sp, #-48]!
  404a2c:	mov	x29, sp
  404a30:	str	x19, [sp, #16]
  404a34:	mov	x19, x0
  404a38:	cbz	w1, 404a58 <ferror@plt+0x21d8>
  404a3c:	sub	w1, w1, #0x1
  404a40:	cmp	w1, #0x0
  404a44:	b.le	404a70 <ferror@plt+0x21f0>
  404a48:	str	w1, [x19, #112]
  404a4c:	ldr	x19, [sp, #16]
  404a50:	ldp	x29, x30, [sp], #48
  404a54:	ret
  404a58:	ldr	x0, [x0]
  404a5c:	ldr	x0, [x0, #8]
  404a60:	ldr	x0, [x0, #192]
  404a64:	bl	402420 <fileno_unlocked@plt>
  404a68:	bl	402720 <isatty@plt>
  404a6c:	cbnz	w0, 404a84 <ferror@plt+0x2204>
  404a70:	mov	w1, #0x7fffffff            	// #2147483647
  404a74:	str	w1, [x19, #112]
  404a78:	ldr	x19, [sp, #16]
  404a7c:	ldp	x29, x30, [sp], #48
  404a80:	ret
  404a84:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404a88:	add	x0, x0, #0xfd0
  404a8c:	bl	4027d0 <getenv@plt>
  404a90:	cbz	x0, 404aac <ferror@plt+0x222c>
  404a94:	mov	x1, #0x0                   	// #0
  404a98:	mov	w2, #0xa                   	// #10
  404a9c:	bl	402600 <strtol@plt>
  404aa0:	mov	x1, x0
  404aa4:	cmp	w0, #0x0
  404aa8:	b.gt	404a3c <ferror@plt+0x21bc>
  404aac:	add	x2, sp, #0x28
  404ab0:	mov	x1, #0x5413                	// #21523
  404ab4:	mov	w0, #0x0                   	// #0
  404ab8:	strh	wzr, [sp, #42]
  404abc:	bl	402860 <ioctl@plt>
  404ac0:	cbnz	w0, 404acc <ferror@plt+0x224c>
  404ac4:	ldrh	w1, [sp, #42]
  404ac8:	cbnz	w1, 404a3c <ferror@plt+0x21bc>
  404acc:	mov	w1, #0x7ffffffe            	// #2147483646
  404ad0:	b	404a48 <ferror@plt+0x21c8>
  404ad4:	nop
  404ad8:	stp	x29, x30, [sp, #-64]!
  404adc:	mov	x29, sp
  404ae0:	str	x21, [sp, #32]
  404ae4:	mov	x21, x0
  404ae8:	stp	x19, x20, [sp, #16]
  404aec:	mov	x19, x0
  404af0:	mov	w20, w1
  404af4:	mov	x0, #0x48                  	// #72
  404af8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  404afc:	str	x0, [x21], #8
  404b00:	mov	w1, #0x0                   	// #0
  404b04:	bl	40ea18 <ferror@plt+0xc198>
  404b08:	stp	xzr, xzr, [x19, #8]
  404b0c:	sbfiz	x0, x20, #2, #32
  404b10:	stp	xzr, xzr, [x21, #16]
  404b14:	stp	xzr, xzr, [x21, #32]
  404b18:	str	xzr, [x21, #48]
  404b1c:	strb	wzr, [x19, #64]
  404b20:	str	w20, [x19, #68]
  404b24:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  404b28:	str	x0, [x19, #72]
  404b2c:	cmp	w20, #0x0
  404b30:	b.le	404b48 <ferror@plt+0x22c8>
  404b34:	sub	w2, w20, #0x1
  404b38:	mov	w1, #0x0                   	// #0
  404b3c:	add	x2, x2, #0x1
  404b40:	lsl	x2, x2, #2
  404b44:	bl	402440 <memset@plt>
  404b48:	ldr	x1, [x19]
  404b4c:	strb	wzr, [x19, #108]
  404b50:	ldr	w0, [x1, #40]
  404b54:	sub	w4, w0, #0x1
  404b58:	cbz	w0, 404bdc <ferror@plt+0x235c>
  404b5c:	cmp	w4, #0x0
  404b60:	b.le	404bf0 <ferror@plt+0x2370>
  404b64:	mov	w5, #0x5e5e                	// #24158
  404b68:	adrp	x3, 405000 <ferror@plt+0x2780>
  404b6c:	movk	w5, #0x5e, lsl #16
  404b70:	add	x3, x3, #0xe48
  404b74:	adrp	x2, 404000 <ferror@plt+0x1780>
  404b78:	adrp	x1, 404000 <ferror@plt+0x1780>
  404b7c:	add	x2, x2, #0x910
  404b80:	add	x1, x1, #0x4b0
  404b84:	adrp	x0, 404000 <ferror@plt+0x1780>
  404b88:	add	x0, x0, #0x4e8
  404b8c:	stp	w4, w5, [x19, #112]
  404b90:	str	xzr, [x19, #120]
  404b94:	strh	wzr, [x19, #128]
  404b98:	strb	wzr, [x19, #130]
  404b9c:	str	wzr, [x19, #132]
  404ba0:	stp	x3, x2, [x19, #136]
  404ba4:	stp	x1, xzr, [x19, #152]
  404ba8:	stp	xzr, xzr, [x19, #168]
  404bac:	stp	xzr, xzr, [x19, #184]
  404bb0:	str	wzr, [x19, #200]
  404bb4:	stp	xzr, xzr, [x19, #208]
  404bb8:	str	wzr, [x19, #224]
  404bbc:	strh	wzr, [x19, #228]
  404bc0:	stp	xzr, xzr, [x19, #232]
  404bc4:	stp	xzr, xzr, [x19, #248]
  404bc8:	str	x0, [x19, #264]
  404bcc:	ldp	x19, x20, [sp, #16]
  404bd0:	ldr	x21, [sp, #32]
  404bd4:	ldp	x29, x30, [sp], #64
  404bd8:	ret
  404bdc:	ldr	x0, [x1, #8]
  404be0:	ldr	x0, [x0, #192]
  404be4:	bl	402420 <fileno_unlocked@plt>
  404be8:	bl	402720 <isatty@plt>
  404bec:	cbnz	w0, 404bf8 <ferror@plt+0x2378>
  404bf0:	mov	w4, #0x7fffffff            	// #2147483647
  404bf4:	b	404b64 <ferror@plt+0x22e4>
  404bf8:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404bfc:	add	x0, x0, #0xfd0
  404c00:	bl	4027d0 <getenv@plt>
  404c04:	cbz	x0, 404c20 <ferror@plt+0x23a0>
  404c08:	mov	w2, #0xa                   	// #10
  404c0c:	mov	x1, #0x0                   	// #0
  404c10:	bl	402600 <strtol@plt>
  404c14:	sub	w4, w0, #0x1
  404c18:	cmp	w0, #0x0
  404c1c:	b.gt	404b5c <ferror@plt+0x22dc>
  404c20:	add	x2, sp, #0x38
  404c24:	mov	x1, #0x5413                	// #21523
  404c28:	mov	w0, #0x0                   	// #0
  404c2c:	strh	wzr, [sp, #58]
  404c30:	bl	402860 <ioctl@plt>
  404c34:	cbnz	w0, 404c48 <ferror@plt+0x23c8>
  404c38:	ldrh	w4, [sp, #58]
  404c3c:	cbz	w4, 404c48 <ferror@plt+0x23c8>
  404c40:	sub	w4, w4, #0x1
  404c44:	b	404b5c <ferror@plt+0x22dc>
  404c48:	mov	w4, #0x7ffffffe            	// #2147483646
  404c4c:	b	404b64 <ferror@plt+0x22e4>
  404c50:	stp	x29, x30, [sp, #-32]!
  404c54:	cmp	w1, #0x0
  404c58:	mov	w2, #0x2                   	// #2
  404c5c:	mov	x29, sp
  404c60:	str	x19, [sp, #16]
  404c64:	ldr	x19, [x0]
  404c68:	csel	w0, w1, w2, ge  // ge = tcont
  404c6c:	bl	408078 <ferror@plt+0x57f8>
  404c70:	strb	w0, [x19, #67]
  404c74:	ldr	x19, [sp, #16]
  404c78:	ldp	x29, x30, [sp], #32
  404c7c:	ret
  404c80:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  404c84:	add	x1, x1, #0x440
  404c88:	ldr	x0, [x1, w0, sxtw #3]
  404c8c:	ret
  404c90:	stp	x29, x30, [sp, #-112]!
  404c94:	mov	x29, sp
  404c98:	stp	x19, x20, [sp, #16]
  404c9c:	mov	x19, x0
  404ca0:	mov	w20, w1
  404ca4:	ldr	x0, [x0]
  404ca8:	str	xzr, [sp, #104]
  404cac:	ldrb	w1, [x0, #65]
  404cb0:	cbnz	w1, 404e2c <ferror@plt+0x25ac>
  404cb4:	cmp	w20, #0x1
  404cb8:	b.ls	404e10 <ferror@plt+0x2590>  // b.plast
  404cbc:	stp	x21, x22, [sp, #32]
  404cc0:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  404cc4:	mov	w1, w20
  404cc8:	ldr	x0, [x22, #1888]
  404ccc:	add	x3, sp, #0x68
  404cd0:	mov	w2, #0x2                   	// #2
  404cd4:	bl	432b40 <ferror@plt+0x302c0>
  404cd8:	ldr	x1, [sp, #104]
  404cdc:	cbz	x1, 404e1c <ferror@plt+0x259c>
  404ce0:	ldr	x0, [x19, #208]
  404ce4:	cmp	x1, x0
  404ce8:	b.eq	404e1c <ferror@plt+0x259c>  // b.none
  404cec:	stp	x27, x28, [sp, #80]
  404cf0:	ldr	w27, [x1, #20]
  404cf4:	str	x1, [x19, #208]
  404cf8:	cbz	w27, 404e3c <ferror@plt+0x25bc>
  404cfc:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404d00:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  404d04:	add	x22, x22, #0x760
  404d08:	add	x20, x20, #0xff0
  404d0c:	add	x21, x21, #0x5d0
  404d10:	mov	w28, #0x1                   	// #1
  404d14:	stp	x23, x24, [sp, #48]
  404d18:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404d1c:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x116d8>
  404d20:	add	x24, x24, #0xf98
  404d24:	add	x23, x23, #0x8
  404d28:	stp	x25, x26, [sp, #64]
  404d2c:	adrp	x26, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404d30:	adrp	x25, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404d34:	add	x26, x26, #0xf90
  404d38:	add	x25, x25, #0xf88
  404d3c:	b	404da8 <ferror@plt+0x2528>
  404d40:	cbz	w3, 404e6c <ferror@plt+0x25ec>
  404d44:	mov	x2, x25
  404d48:	mov	w4, #0x0                   	// #0
  404d4c:	add	x0, x21, #0x10
  404d50:	mov	x1, #0x20                  	// #32
  404d54:	bl	402360 <snprintf@plt>
  404d58:	mov	x0, x20
  404d5c:	ldr	x27, [x19]
  404d60:	cbz	w28, 404e50 <ferror@plt+0x25d0>
  404d64:	bl	402830 <gettext@plt>
  404d68:	mov	x3, x0
  404d6c:	ldr	x1, [sp, #104]
  404d70:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  404d74:	mov	x0, x27
  404d78:	add	x2, x2, #0x148
  404d7c:	ldr	x5, [x1, #8]
  404d80:	add	x6, x21, #0x10
  404d84:	mov	x1, x23
  404d88:	mov	x4, x24
  404d8c:	bl	410cf0 <ferror@plt+0xe470>
  404d90:	ldr	x1, [sp, #104]
  404d94:	ldr	w27, [x1, #20]
  404d98:	cbz	w27, 404de8 <ferror@plt+0x2568>
  404d9c:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404da0:	add	x20, x20, #0xfd8
  404da4:	mov	w28, #0x0                   	// #0
  404da8:	ldr	x0, [x22]
  404dac:	bl	4311f0 <ferror@plt+0x2e970>
  404db0:	ldr	w2, [x0]
  404db4:	ldrb	w1, [x0, #6]
  404db8:	sub	w27, w27, w2
  404dbc:	ldr	w2, [x0, #16]
  404dc0:	str	x0, [sp, #104]
  404dc4:	lsr	w3, w27, w1
  404dc8:	add	w3, w3, w2
  404dcc:	cbz	w28, 404d40 <ferror@plt+0x24c0>
  404dd0:	ldrb	w2, [x19, #121]
  404dd4:	cbnz	w2, 404e74 <ferror@plt+0x25f4>
  404dd8:	cbz	w3, 404e6c <ferror@plt+0x25ec>
  404ddc:	mov	x2, x25
  404de0:	mov	w4, #0x0                   	// #0
  404de4:	b	404d4c <ferror@plt+0x24cc>
  404de8:	ldr	x0, [x19]
  404dec:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  404df0:	add	x1, x1, #0x428
  404df4:	bl	410cf0 <ferror@plt+0xe470>
  404df8:	ldr	x0, [x19]
  404dfc:	bl	40f0f0 <ferror@plt+0xc870>
  404e00:	ldp	x21, x22, [sp, #32]
  404e04:	ldp	x23, x24, [sp, #48]
  404e08:	ldp	x25, x26, [sp, #64]
  404e0c:	ldp	x27, x28, [sp, #80]
  404e10:	ldp	x19, x20, [sp, #16]
  404e14:	ldp	x29, x30, [sp], #112
  404e18:	ret
  404e1c:	ldp	x19, x20, [sp, #16]
  404e20:	ldp	x21, x22, [sp, #32]
  404e24:	ldp	x29, x30, [sp], #112
  404e28:	ret
  404e2c:	bl	40f0f0 <ferror@plt+0xc870>
  404e30:	ldr	x0, [x19]
  404e34:	strb	wzr, [x0, #65]
  404e38:	b	404cb4 <ferror@plt+0x2434>
  404e3c:	ldp	x19, x20, [sp, #16]
  404e40:	ldp	x21, x22, [sp, #32]
  404e44:	ldp	x27, x28, [sp, #80]
  404e48:	ldp	x29, x30, [sp], #112
  404e4c:	ret
  404e50:	bl	402830 <gettext@plt>
  404e54:	mov	x3, x0
  404e58:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  404e5c:	mov	x0, x27
  404e60:	add	x2, x2, #0x18
  404e64:	ldr	x1, [sp, #104]
  404e68:	b	404d7c <ferror@plt+0x24fc>
  404e6c:	strb	wzr, [x21, #16]
  404e70:	b	404d58 <ferror@plt+0x24d8>
  404e74:	ldrb	w0, [x0, #7]
  404e78:	cbz	w3, 404e6c <ferror@plt+0x25ec>
  404e7c:	mov	w4, #0x1                   	// #1
  404e80:	lsl	w4, w4, w1
  404e84:	sub	w4, w4, #0x1
  404e88:	and	w27, w4, w27
  404e8c:	lsr	w4, w27, w0
  404e90:	cmp	w4, #0x0
  404e94:	csel	x2, x25, x26, eq  // eq = none
  404e98:	b	404d4c <ferror@plt+0x24cc>
  404e9c:	nop
  404ea0:	stp	x29, x30, [sp, #-64]!
  404ea4:	mov	x29, sp
  404ea8:	stp	x21, x22, [sp, #32]
  404eac:	mov	w22, #0x0                   	// #0
  404eb0:	tbnz	w1, #31, 404f9c <ferror@plt+0x271c>
  404eb4:	stp	x19, x20, [sp, #16]
  404eb8:	mov	w22, #0x0                   	// #0
  404ebc:	mov	w19, w1
  404ec0:	stp	x23, x24, [sp, #48]
  404ec4:	mov	x23, x0
  404ec8:	ldr	w0, [x0, #68]
  404ecc:	cmp	w0, w1
  404ed0:	b.le	404fac <ferror@plt+0x272c>
  404ed4:	mov	w21, w2
  404ed8:	cmp	w2, #0xd
  404edc:	b.gt	404fac <ferror@plt+0x272c>
  404ee0:	ldr	x0, [x23, #72]
  404ee4:	sxtw	x24, w1
  404ee8:	mov	w20, w3
  404eec:	ldr	w22, [x0, x24, lsl #2]
  404ef0:	cbz	w3, 404fc4 <ferror@plt+0x2744>
  404ef4:	cbnz	w22, 404f14 <ferror@plt+0x2694>
  404ef8:	mov	w0, w1
  404efc:	mov	w22, #0x1                   	// #1
  404f00:	ldp	x2, x1, [x23, #168]
  404f04:	blr	x2
  404f08:	cbnz	w0, 404fe0 <ferror@plt+0x2760>
  404f0c:	ldr	x0, [x23, #72]
  404f10:	str	w22, [x0, x24, lsl #2]
  404f14:	ldr	w2, [x23, #88]
  404f18:	ldr	x0, [x23, #80]
  404f1c:	subs	w4, w2, #0x1
  404f20:	b.mi	404f60 <ferror@plt+0x26e0>  // b.first
  404f24:	mov	w3, #0xc                   	// #12
  404f28:	sub	x5, x0, #0x18
  404f2c:	smull	x1, w4, w3
  404f30:	add	x6, x1, #0xc
  404f34:	add	x1, x0, x1
  404f38:	umsubl	x4, w4, w3, x6
  404f3c:	add	x5, x4, x5
  404f40:	b	404f50 <ferror@plt+0x26d0>
  404f44:	sub	x1, x1, #0xc
  404f48:	cmp	x5, x1
  404f4c:	b.eq	404f60 <ferror@plt+0x26e0>  // b.none
  404f50:	ldr	w4, [x1, #4]
  404f54:	cmp	w4, w19
  404f58:	b.ne	404f44 <ferror@plt+0x26c4>  // b.any
  404f5c:	ldr	w22, [x1, #8]
  404f60:	add	w2, w2, #0x1
  404f64:	mov	w24, #0xc                   	// #12
  404f68:	smull	x24, w2, w24
  404f6c:	mov	x1, x24
  404f70:	sub	x24, x24, #0xc
  404f74:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  404f78:	add	x1, x0, x24
  404f7c:	str	x0, [x23, #80]
  404f80:	str	w20, [x0, x24]
  404f84:	stp	w19, w21, [x1, #4]
  404f88:	ldp	x19, x20, [sp, #16]
  404f8c:	ldr	w0, [x23, #88]
  404f90:	add	w0, w0, #0x1
  404f94:	str	w0, [x23, #88]
  404f98:	ldp	x23, x24, [sp, #48]
  404f9c:	mov	w0, w22
  404fa0:	ldp	x21, x22, [sp, #32]
  404fa4:	ldp	x29, x30, [sp], #64
  404fa8:	ret
  404fac:	mov	w0, w22
  404fb0:	ldp	x19, x20, [sp, #16]
  404fb4:	ldp	x21, x22, [sp, #32]
  404fb8:	ldp	x23, x24, [sp, #48]
  404fbc:	ldp	x29, x30, [sp], #64
  404fc0:	ret
  404fc4:	str	w2, [x0, x24, lsl #2]
  404fc8:	mov	w0, w22
  404fcc:	ldp	x19, x20, [sp, #16]
  404fd0:	ldp	x21, x22, [sp, #32]
  404fd4:	ldp	x23, x24, [sp, #48]
  404fd8:	ldp	x29, x30, [sp], #64
  404fdc:	ret
  404fe0:	ldrb	w1, [x23, #64]
  404fe4:	mov	w22, #0x4                   	// #4
  404fe8:	mov	w0, #0x6                   	// #6
  404fec:	cmp	w1, #0x0
  404ff0:	csel	w22, w22, w0, ne  // ne = any
  404ff4:	b	404f0c <ferror@plt+0x268c>
  404ff8:	stp	x29, x30, [sp, #-32]!
  404ffc:	mov	x29, sp
  405000:	ldr	w1, [x0, #104]
  405004:	str	x19, [sp, #16]
  405008:	mov	x19, x0
  40500c:	ldr	x0, [x0, #96]
  405010:	add	w1, w1, #0x1
  405014:	sbfiz	x1, x1, #2, #32
  405018:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40501c:	str	x0, [x19, #96]
  405020:	ldr	w1, [x19, #104]
  405024:	add	w2, w1, #0x1
  405028:	str	w2, [x19, #104]
  40502c:	ldr	w2, [x19, #88]
  405030:	str	w2, [x0, w1, sxtw #2]
  405034:	ldr	x19, [sp, #16]
  405038:	ldp	x29, x30, [sp], #32
  40503c:	ret
  405040:	stp	x29, x30, [sp, #-48]!
  405044:	mov	x29, sp
  405048:	stp	x21, x22, [sp, #32]
  40504c:	mov	w22, w1
  405050:	ldr	w21, [x0, #104]
  405054:	stp	x19, x20, [sp, #16]
  405058:	mov	x19, x0
  40505c:	cbz	w21, 405070 <ferror@plt+0x27f0>
  405060:	ldr	x0, [x0, #96]
  405064:	sub	w21, w21, #0x1
  405068:	str	w21, [x19, #104]
  40506c:	ldr	w21, [x0, w21, sxtw #2]
  405070:	ldr	w20, [x19, #88]
  405074:	mov	w1, #0xc                   	// #12
  405078:	ldr	x0, [x19, #80]
  40507c:	add	w20, w20, #0x1
  405080:	smull	x20, w20, w1
  405084:	mov	x1, x20
  405088:	sub	x20, x20, #0xc
  40508c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  405090:	add	x1, x0, x20
  405094:	str	x0, [x19, #80]
  405098:	mov	w2, #0xf                   	// #15
  40509c:	str	w22, [x0, x20]
  4050a0:	stp	w21, w2, [x1, #4]
  4050a4:	ldp	x21, x22, [sp, #32]
  4050a8:	ldr	w0, [x19, #88]
  4050ac:	add	w0, w0, #0x1
  4050b0:	str	w0, [x19, #88]
  4050b4:	ldp	x19, x20, [sp, #16]
  4050b8:	ldp	x29, x30, [sp], #48
  4050bc:	ret
  4050c0:	ldrb	w5, [x0]
  4050c4:	mov	x4, x0
  4050c8:	cmp	w5, #0x2e
  4050cc:	b.eq	4050ec <ferror@plt+0x286c>  // b.none
  4050d0:	b	4050f8 <ferror@plt+0x2878>
  4050d4:	ldrb	w2, [x0, #2]
  4050d8:	cmp	w2, #0x2f
  4050dc:	b.ne	405180 <ferror@plt+0x2900>  // b.any
  4050e0:	ldrb	w1, [x0, #3]!
  4050e4:	cmp	w1, #0x2e
  4050e8:	b.ne	405180 <ferror@plt+0x2900>  // b.any
  4050ec:	ldrb	w1, [x0, #1]
  4050f0:	cmp	w1, #0x2e
  4050f4:	b.eq	4050d4 <ferror@plt+0x2854>  // b.none
  4050f8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4050fc:	add	x1, x1, #0x440
  405100:	add	x1, x1, #0x80
  405104:	nop
  405108:	ldrb	w2, [x1, #2]
  40510c:	cmp	w2, #0x2f
  405110:	b.ne	405188 <ferror@plt+0x2908>  // b.any
  405114:	ldrb	w2, [x1, #3]!
  405118:	cmp	w2, #0x2e
  40511c:	b.ne	40512c <ferror@plt+0x28ac>  // b.any
  405120:	ldrb	w3, [x1, #1]
  405124:	cmp	w3, #0x2e
  405128:	b.eq	405108 <ferror@plt+0x2888>  // b.none
  40512c:	cmp	w2, #0x0
  405130:	ccmp	w5, w2, #0x0, ne  // ne = any
  405134:	ccmp	w5, #0x0, #0x4, eq  // eq = none
  405138:	b.eq	405158 <ferror@plt+0x28d8>  // b.none
  40513c:	nop
  405140:	ldrb	w3, [x0, #1]!
  405144:	ldrb	w2, [x1, #1]!
  405148:	cmp	w3, #0x0
  40514c:	ccmp	w3, w2, #0x0, ne  // ne = any
  405150:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  405154:	b.ne	405140 <ferror@plt+0x28c0>  // b.any
  405158:	cmp	x4, x0
  40515c:	b.cc	405170 <ferror@plt+0x28f0>  // b.lo, b.ul, b.last
  405160:	b	40517c <ferror@plt+0x28fc>
  405164:	sub	x0, x0, #0x1
  405168:	cmp	x4, x0
  40516c:	b.eq	40517c <ferror@plt+0x28fc>  // b.none
  405170:	ldurb	w1, [x0, #-1]
  405174:	cmp	w1, #0x2f
  405178:	b.ne	405164 <ferror@plt+0x28e4>  // b.any
  40517c:	ret
  405180:	mov	w5, w1
  405184:	b	4050f8 <ferror@plt+0x2878>
  405188:	mov	w2, #0x2e                  	// #46
  40518c:	b	40512c <ferror@plt+0x28ac>
  405190:	stp	x29, x30, [sp, #-304]!
  405194:	mov	w8, #0xffffffc8            	// #-56
  405198:	mov	x29, sp
  40519c:	add	x9, sp, #0xf0
  4051a0:	add	x10, sp, #0x130
  4051a4:	stp	x19, x20, [sp, #16]
  4051a8:	mov	x19, x0
  4051ac:	mov	w0, #0xffffff80            	// #-128
  4051b0:	stp	x10, x10, [sp, #40]
  4051b4:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4051b8:	str	x9, [sp, #56]
  4051bc:	stp	w8, w0, [sp, #64]
  4051c0:	str	q0, [sp, #112]
  4051c4:	str	q1, [sp, #128]
  4051c8:	str	q2, [sp, #144]
  4051cc:	str	q3, [sp, #160]
  4051d0:	str	q4, [sp, #176]
  4051d4:	str	q5, [sp, #192]
  4051d8:	str	q6, [sp, #208]
  4051dc:	str	q7, [sp, #224]
  4051e0:	stp	x1, x2, [sp, #248]
  4051e4:	stp	x3, x4, [sp, #264]
  4051e8:	stp	x5, x6, [sp, #280]
  4051ec:	str	x7, [sp, #296]
  4051f0:	bl	4027c0 <__errno_location@plt>
  4051f4:	mov	x1, x0
  4051f8:	add	x2, sp, #0x28
  4051fc:	mov	x0, x19
  405200:	str	x2, [sp, #80]
  405204:	ldr	w1, [x1]
  405208:	str	w1, [sp, #88]
  40520c:	bl	402830 <gettext@plt>
  405210:	str	xzr, [sp, #96]
  405214:	ldr	x2, [x20, #840]
  405218:	str	x0, [sp, #72]
  40521c:	add	x1, sp, #0x48
  405220:	ldr	x0, [x2]
  405224:	bl	410c20 <ferror@plt+0xe3a0>
  405228:	ldr	x0, [x20, #840]
  40522c:	ldr	x0, [x0]
  405230:	bl	410ee0 <ferror@plt+0xe660>
  405234:	ldp	x19, x20, [sp, #16]
  405238:	ldp	x29, x30, [sp], #304
  40523c:	ret
  405240:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405244:	ldr	x0, [x0, #840]
  405248:	ldr	x0, [x0, #24]
  40524c:	cmp	x0, #0x0
  405250:	cset	w0, ne  // ne = any
  405254:	ret
  405258:	stp	x29, x30, [sp, #-272]!
  40525c:	mov	w8, #0xffffffd0            	// #-48
  405260:	mov	x29, sp
  405264:	add	x9, sp, #0xe0
  405268:	stp	x2, x3, [sp, #224]
  40526c:	add	x2, sp, #0x110
  405270:	str	x19, [sp, #16]
  405274:	mov	x19, x0
  405278:	mov	x0, x1
  40527c:	mov	w1, #0xffffff80            	// #-128
  405280:	stp	x2, x2, [sp, #64]
  405284:	str	x9, [sp, #80]
  405288:	str	w8, [sp, #88]
  40528c:	str	w1, [sp, #92]
  405290:	str	q0, [sp, #96]
  405294:	str	q1, [sp, #112]
  405298:	str	q2, [sp, #128]
  40529c:	str	q3, [sp, #144]
  4052a0:	str	q4, [sp, #160]
  4052a4:	str	q5, [sp, #176]
  4052a8:	str	q6, [sp, #192]
  4052ac:	str	q7, [sp, #208]
  4052b0:	stp	x4, x5, [sp, #240]
  4052b4:	stp	x6, x7, [sp, #256]
  4052b8:	bl	402830 <gettext@plt>
  4052bc:	add	x2, sp, #0x20
  4052c0:	ldp	x6, x7, [sp, #64]
  4052c4:	mov	x1, x0
  4052c8:	ldp	x4, x5, [sp, #80]
  4052cc:	mov	x0, x19
  4052d0:	stp	x6, x7, [sp, #32]
  4052d4:	stp	x4, x5, [sp, #48]
  4052d8:	bl	4027a0 <vfprintf@plt>
  4052dc:	ldr	x19, [sp, #16]
  4052e0:	ldp	x29, x30, [sp], #272
  4052e4:	ret
  4052e8:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4052ec:	ldr	x1, [x0, #840]
  4052f0:	ldr	w0, [x1, #240]
  4052f4:	add	w0, w0, #0x1
  4052f8:	str	w0, [x1, #240]
  4052fc:	ret
  405300:	stp	x29, x30, [sp, #-32]!
  405304:	mov	x29, sp
  405308:	str	x19, [sp, #16]
  40530c:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405310:	ldr	x0, [x19, #840]
  405314:	ldr	w1, [x0, #240]
  405318:	sub	w1, w1, #0x1
  40531c:	str	w1, [x0, #240]
  405320:	cbnz	w1, 405344 <ferror@plt+0x2ac4>
  405324:	ldr	w1, [x0, #244]
  405328:	cmp	w1, #0x0
  40532c:	b.le	405340 <ferror@plt+0x2ac0>
  405330:	ldr	x1, [x0, #256]
  405334:	cbz	x1, 405340 <ferror@plt+0x2ac0>
  405338:	blr	x1
  40533c:	ldr	x0, [x19, #840]
  405340:	str	wzr, [x0, #244]
  405344:	ldr	x19, [sp, #16]
  405348:	ldp	x29, x30, [sp], #32
  40534c:	ret
  405350:	stp	x29, x30, [sp, #-32]!
  405354:	mov	x29, sp
  405358:	ldr	x1, [x0, #264]
  40535c:	stp	x19, x20, [sp, #16]
  405360:	mov	x19, x0
  405364:	cbz	x1, 40536c <ferror@plt+0x2aec>
  405368:	blr	x1
  40536c:	bl	415100 <ferror@plt+0x12880>
  405370:	ldr	x0, [x19, #72]
  405374:	bl	402640 <free@plt>
  405378:	ldr	x0, [x19]
  40537c:	ldr	x1, [x0]
  405380:	ldr	x1, [x1]
  405384:	str	xzr, [x19, #72]
  405388:	blr	x1
  40538c:	ldr	x0, [x19]
  405390:	bl	402640 <free@plt>
  405394:	str	xzr, [x19]
  405398:	ldr	x20, [x19, #232]
  40539c:	cbz	x20, 4053bc <ferror@plt+0x2b3c>
  4053a0:	ldr	x1, [x20, #8]
  4053a4:	add	x0, x20, #0x8
  4053a8:	bl	407cf8 <ferror@plt+0x5478>
  4053ac:	mov	x0, x20
  4053b0:	mov	x1, #0x28                  	// #40
  4053b4:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  4053b8:	str	xzr, [x19, #232]
  4053bc:	ldp	x19, x20, [sp, #16]
  4053c0:	ldp	x29, x30, [sp], #32
  4053c4:	ret
  4053c8:	ldr	w2, [x0, #132]
  4053cc:	cbz	w2, 405408 <ferror@plt+0x2b88>
  4053d0:	stp	x29, x30, [sp, #-32]!
  4053d4:	mov	x29, sp
  4053d8:	stp	x19, x20, [sp, #16]
  4053dc:	mov	x19, x0
  4053e0:	and	w20, w1, #0xff
  4053e4:	ldp	w0, w3, [x0, #24]
  4053e8:	ldr	w1, [x19, #56]
  4053ec:	add	w0, w0, w3
  4053f0:	add	w0, w0, w1
  4053f4:	cmp	w2, w0
  4053f8:	b.le	40540c <ferror@plt+0x2b8c>
  4053fc:	ldp	x19, x20, [sp, #16]
  405400:	ldp	x29, x30, [sp], #32
  405404:	ret
  405408:	ret
  40540c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405410:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405414:	add	x1, x1, #0x20
  405418:	ldr	x0, [x0, #1312]
  40541c:	bl	405258 <ferror@plt+0x29d8>
  405420:	cbnz	w20, 40542c <ferror@plt+0x2bac>
  405424:	mov	w0, #0x1                   	// #1
  405428:	bl	4022a0 <exit@plt>
  40542c:	mov	x0, x19
  405430:	bl	405350 <ferror@plt+0x2ad0>
  405434:	b	405424 <ferror@plt+0x2ba4>
  405438:	stp	x29, x30, [sp, #-48]!
  40543c:	cmp	w1, #0x5
  405440:	mov	x29, sp
  405444:	stp	x19, x20, [sp, #16]
  405448:	mov	x19, x0
  40544c:	b.hi	405488 <ferror@plt+0x2c08>  // b.pmore
  405450:	cmp	w1, #0x3
  405454:	b.hi	405548 <ferror@plt+0x2cc8>  // b.pmore
  405458:	cmp	w1, #0x2
  40545c:	b.ne	40549c <ferror@plt+0x2c1c>  // b.any
  405460:	ldrb	w1, [x0, #120]
  405464:	cbnz	w1, 40557c <ferror@plt+0x2cfc>
  405468:	bl	405350 <ferror@plt+0x2ad0>
  40546c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405470:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405474:	add	x1, x1, #0x130
  405478:	ldr	x0, [x0, #1312]
  40547c:	bl	405258 <ferror@plt+0x29d8>
  405480:	mov	w0, #0x1                   	// #1
  405484:	bl	4022a0 <exit@plt>
  405488:	cmp	w1, #0x9
  40548c:	b.hi	405538 <ferror@plt+0x2cb8>  // b.pmore
  405490:	ldp	x19, x20, [sp, #16]
  405494:	ldp	x29, x30, [sp], #48
  405498:	ret
  40549c:	cmp	w1, #0x3
  4054a0:	b.ne	405580 <ferror@plt+0x2d00>  // b.any
  4054a4:	adrp	x2, 404000 <ferror@plt+0x1780>
  4054a8:	add	x20, x2, #0x430
  4054ac:	mov	x2, x20
  4054b0:	mov	x3, #0x0                   	// #0
  4054b4:	mov	w1, #0x0                   	// #0
  4054b8:	mov	x0, #0x0                   	// #0
  4054bc:	bl	43e5c8 <ferror@plt+0x3bd48>
  4054c0:	str	wzr, [sp, #44]
  4054c4:	cbz	x0, 4054e0 <ferror@plt+0x2c60>
  4054c8:	adrp	x2, 404000 <ferror@plt+0x1780>
  4054cc:	mov	x3, x20
  4054d0:	add	x4, sp, #0x2c
  4054d4:	add	x2, x2, #0x558
  4054d8:	mov	w1, #0x2                   	// #2
  4054dc:	bl	43e6e8 <ferror@plt+0x3be68>
  4054e0:	ldrb	w0, [x19, #120]
  4054e4:	cbnz	w0, 40557c <ferror@plt+0x2cfc>
  4054e8:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4054ec:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4054f0:	add	x1, x1, #0x80
  4054f4:	ldr	x0, [x19, #1312]
  4054f8:	bl	405258 <ferror@plt+0x29d8>
  4054fc:	ldr	w0, [sp, #44]
  405500:	cmp	w0, #0x0
  405504:	b.le	405518 <ferror@plt+0x2c98>
  405508:	ldr	x0, [x19, #1312]
  40550c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405510:	add	x1, x1, #0xd0
  405514:	bl	405258 <ferror@plt+0x29d8>
  405518:	ldr	x0, [x19, #1312]
  40551c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  405520:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405524:	add	x2, x2, #0x6b0
  405528:	add	x1, x1, #0x110
  40552c:	bl	405258 <ferror@plt+0x29d8>
  405530:	mov	w0, #0x4                   	// #4
  405534:	bl	4022a0 <exit@plt>
  405538:	cmp	w1, #0xd
  40553c:	b.ne	405580 <ferror@plt+0x2d00>  // b.any
  405540:	str	wzr, [sp, #44]
  405544:	b	4054e0 <ferror@plt+0x2c60>
  405548:	ldrb	w0, [x0, #120]
  40554c:	cbnz	w0, 40557c <ferror@plt+0x2cfc>
  405550:	ldrb	w0, [x19, #128]
  405554:	cbz	w0, 405490 <ferror@plt+0x2c10>
  405558:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40555c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405560:	add	x1, x1, #0x50
  405564:	ldr	x0, [x0, #1312]
  405568:	bl	405258 <ferror@plt+0x29d8>
  40556c:	mov	x0, x19
  405570:	bl	405350 <ferror@plt+0x2ad0>
  405574:	mov	w0, #0x1                   	// #1
  405578:	bl	4022a0 <exit@plt>
  40557c:	bl	402540 <abort@plt>
  405580:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405584:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405588:	add	x2, x2, #0x150
  40558c:	add	x0, x0, #0x170
  405590:	mov	w1, #0x231                 	// #561
  405594:	bl	4028b0 <ferror@plt+0x30>
  405598:	stp	x29, x30, [sp, #-160]!
  40559c:	mov	x29, sp
  4055a0:	stp	x19, x20, [sp, #16]
  4055a4:	mov	x20, x1
  4055a8:	mov	x19, x0
  4055ac:	mov	x0, x1
  4055b0:	mov	w1, #0x0                   	// #0
  4055b4:	stp	x21, x22, [sp, #32]
  4055b8:	bl	40dff0 <ferror@plt+0xb770>
  4055bc:	ldr	w21, [x20, #56]
  4055c0:	sub	w1, w21, #0x6
  4055c4:	tst	w1, #0xfffffffb
  4055c8:	b.ne	405778 <ferror@plt+0x2ef8>  // b.any
  4055cc:	ldrb	w1, [x19, #129]
  4055d0:	cbz	w1, 4055e8 <ferror@plt+0x2d68>
  4055d4:	mov	w0, #0x0                   	// #0
  4055d8:	ldp	x19, x20, [sp, #16]
  4055dc:	ldp	x21, x22, [sp, #32]
  4055e0:	ldp	x29, x30, [sp], #160
  4055e4:	ret
  4055e8:	stp	x23, x24, [sp, #48]
  4055ec:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4055f0:	mov	w1, w0
  4055f4:	ldr	x0, [x23, #1888]
  4055f8:	bl	432628 <ferror@plt+0x2fda8>
  4055fc:	cbnz	w0, 405804 <ferror@plt+0x2f84>
  405600:	ldr	w0, [x20, #56]
  405604:	cmp	w0, #0xa
  405608:	b.ne	405b18 <ferror@plt+0x3298>  // b.any
  40560c:	ldrb	w2, [x19, #122]
  405610:	mov	w21, #0x4                   	// #4
  405614:	ldr	w1, [x19, #216]
  405618:	mov	w0, #0x6                   	// #6
  40561c:	cmp	w2, #0x0
  405620:	csel	w21, w21, w0, ne  // ne = any
  405624:	str	w21, [x20, #56]
  405628:	cmp	w1, #0x0
  40562c:	b.gt	40579c <ferror@plt+0x2f1c>
  405630:	ldp	x23, x24, [sp, #48]
  405634:	ldrb	w1, [x19, #64]
  405638:	ldr	w0, [x20, #60]
  40563c:	cbz	w1, 40564c <ferror@plt+0x2dcc>
  405640:	ldr	w1, [x20, #56]
  405644:	cmp	w1, #0x6
  405648:	b.eq	405814 <ferror@plt+0x2f94>  // b.none
  40564c:	cbz	w0, 405694 <ferror@plt+0x2e14>
  405650:	ldr	w1, [x19, #124]
  405654:	cmp	w1, w0
  405658:	b.eq	405694 <ferror@plt+0x2e14>  // b.none
  40565c:	ldp	x2, x1, [x19, #168]
  405660:	blr	x2
  405664:	cbz	w0, 4055d4 <ferror@plt+0x2d54>
  405668:	ldr	w0, [x19, #88]
  40566c:	cmp	w0, #0x0
  405670:	b.gt	405a74 <ferror@plt+0x31f4>
  405674:	ldrsw	x1, [x20, #60]
  405678:	ldr	x0, [x19, #72]
  40567c:	ldr	w1, [x0, x1, lsl #2]
  405680:	cbnz	w1, 405a6c <ferror@plt+0x31ec>
  405684:	ldr	w1, [x20, #56]
  405688:	cmp	w1, #0x1
  40568c:	b.ne	405698 <ferror@plt+0x2e18>  // b.any
  405690:	b	4055d4 <ferror@plt+0x2d54>
  405694:	ldr	w1, [x20, #56]
  405698:	cmp	w1, #0x8
  40569c:	b.ne	405838 <ferror@plt+0x2fb8>  // b.any
  4056a0:	ldr	w0, [x19, #216]
  4056a4:	add	w0, w0, #0x1
  4056a8:	str	w0, [x19, #216]
  4056ac:	add	x1, x19, w1, sxtw #2
  4056b0:	ldr	w0, [x1, #8]
  4056b4:	add	w0, w0, #0x1
  4056b8:	str	w0, [x1, #8]
  4056bc:	ldr	w0, [x19, #244]
  4056c0:	cbnz	w0, 4056d8 <ferror@plt+0x2e58>
  4056c4:	ldr	x1, [x19, #248]
  4056c8:	cbz	x1, 4056d8 <ferror@plt+0x2e58>
  4056cc:	mov	x0, x19
  4056d0:	blr	x1
  4056d4:	ldr	w0, [x19, #244]
  4056d8:	add	w0, w0, #0x1
  4056dc:	str	w0, [x19, #244]
  4056e0:	add	x0, x20, #0x30
  4056e4:	str	x0, [x20, #24]
  4056e8:	str	xzr, [x20, #48]
  4056ec:	mov	x1, x20
  4056f0:	ldr	x0, [x19]
  4056f4:	bl	40f238 <ferror@plt+0xc9b8>
  4056f8:	ldr	x2, [x19, #136]
  4056fc:	mov	x1, x20
  405700:	mov	x0, x19
  405704:	blr	x2
  405708:	ldr	x0, [x19]
  40570c:	bl	40ef40 <ferror@plt+0xc6c0>
  405710:	ldrb	w0, [x19, #119]
  405714:	cbnz	w0, 4059a4 <ferror@plt+0x3124>
  405718:	ldr	x3, [x19, #152]
  40571c:	mov	x0, x19
  405720:	mov	w2, w21
  405724:	mov	x1, x20
  405728:	blr	x3
  40572c:	ldrb	w0, [x19, #229]
  405730:	cbnz	w0, 4058b4 <ferror@plt+0x3034>
  405734:	ldr	w1, [x20, #56]
  405738:	mov	x0, x19
  40573c:	bl	405438 <ferror@plt+0x2bb8>
  405740:	str	xzr, [x20, #48]
  405744:	ldr	x0, [x19, #232]
  405748:	cbz	x0, 405758 <ferror@plt+0x2ed8>
  40574c:	ldr	x1, [x20, #40]
  405750:	ldrb	w2, [x1, #161]
  405754:	cbz	w2, 405a58 <ferror@plt+0x31d8>
  405758:	ldr	w1, [x19, #216]
  40575c:	mov	w0, #0x1                   	// #1
  405760:	ldp	x21, x22, [sp, #32]
  405764:	sub	w1, w1, #0x1
  405768:	str	w1, [x19, #216]
  40576c:	ldp	x19, x20, [sp, #16]
  405770:	ldp	x29, x30, [sp], #160
  405774:	ret
  405778:	mov	w0, w21
  40577c:	cmp	w0, #0x8
  405780:	b.ne	4057d8 <ferror@plt+0x2f58>  // b.any
  405784:	ldrb	w0, [x19, #220]
  405788:	cbnz	w0, 4055d4 <ferror@plt+0x2d54>
  40578c:	ldr	w1, [x19, #216]
  405790:	cmp	w1, #0x0
  405794:	b.le	405634 <ferror@plt+0x2db4>
  405798:	stp	x23, x24, [sp, #48]
  40579c:	cmp	w1, #0x2
  4057a0:	stp	x25, x26, [sp, #64]
  4057a4:	stp	x27, x28, [sp, #80]
  4057a8:	b.gt	4057b4 <ferror@plt+0x2f34>
  4057ac:	ldr	x0, [x19]
  4057b0:	bl	410ee0 <ferror@plt+0xe660>
  4057b4:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4057b8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4057bc:	add	x1, x1, #0x188
  4057c0:	ldr	x0, [x0, #1312]
  4057c4:	bl	405258 <ferror@plt+0x29d8>
  4057c8:	mov	x0, x19
  4057cc:	mov	w1, #0x3                   	// #3
  4057d0:	bl	405438 <ferror@plt+0x2bb8>
  4057d4:	bl	402540 <abort@plt>
  4057d8:	ldr	w1, [x19, #216]
  4057dc:	cmp	w1, #0x0
  4057e0:	b.le	405634 <ferror@plt+0x2db4>
  4057e4:	cmp	w0, #0xd
  4057e8:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  4057ec:	b.ne	405798 <ferror@plt+0x2f18>  // b.any
  4057f0:	cmp	w1, #0x1
  4057f4:	b.ne	405798 <ferror@plt+0x2f18>  // b.any
  4057f8:	ldr	x0, [x19]
  4057fc:	bl	410ee0 <ferror@plt+0xe660>
  405800:	b	405634 <ferror@plt+0x2db4>
  405804:	ldrb	w0, [x19, #130]
  405808:	cbnz	w0, 405600 <ferror@plt+0x2d80>
  40580c:	ldp	x23, x24, [sp, #48]
  405810:	b	4055d4 <ferror@plt+0x2d54>
  405814:	mov	w1, #0x4                   	// #4
  405818:	str	w1, [x20, #56]
  40581c:	cbnz	w0, 405650 <ferror@plt+0x2dd0>
  405820:	ldr	w2, [x19, #132]
  405824:	cbnz	w2, 405840 <ferror@plt+0x2fc0>
  405828:	ldr	w0, [x19, #216]
  40582c:	add	w0, w0, #0x1
  405830:	str	w0, [x19, #216]
  405834:	b	405894 <ferror@plt+0x3014>
  405838:	ldr	w2, [x19, #132]
  40583c:	cbz	w2, 405858 <ferror@plt+0x2fd8>
  405840:	ldp	w0, w4, [x19, #24]
  405844:	ldr	w3, [x19, #56]
  405848:	add	w0, w0, w4
  40584c:	add	w0, w0, w3
  405850:	cmp	w0, w2
  405854:	b.ge	405b28 <ferror@plt+0x32a8>  // b.tcont
  405858:	ldr	w0, [x19, #216]
  40585c:	cmp	w1, #0x3
  405860:	add	w0, w0, #0x1
  405864:	str	w0, [x19, #216]
  405868:	b.ne	405a60 <ferror@plt+0x31e0>  // b.any
  40586c:	ldr	w0, [x19, #24]
  405870:	cmp	w0, #0x0
  405874:	b.le	405a48 <ferror@plt+0x31c8>
  405878:	ldrb	w0, [x19, #120]
  40587c:	cbz	w0, 405b50 <ferror@plt+0x32d0>
  405880:	ldr	x3, [x19, #160]
  405884:	cbz	x3, 405894 <ferror@plt+0x3014>
  405888:	ldp	x1, x2, [x20]
  40588c:	mov	x0, x19
  405890:	blr	x3
  405894:	ldr	w1, [x20, #56]
  405898:	cmp	w1, #0x4
  40589c:	ccmp	w21, #0x6, #0x0, eq  // eq = none
  4058a0:	b.ne	4056ac <ferror@plt+0x2e2c>  // b.any
  4058a4:	ldr	w0, [x19, #56]
  4058a8:	add	w0, w0, #0x1
  4058ac:	str	w0, [x19, #56]
  4058b0:	b	4056bc <ferror@plt+0x2e3c>
  4058b4:	ldr	x21, [x19]
  4058b8:	stp	x27, x28, [sp, #80]
  4058bc:	ldr	x27, [x20, #40]
  4058c0:	cbz	x21, 405b94 <ferror@plt+0x3314>
  4058c4:	cbz	x27, 405bb4 <ferror@plt+0x3334>
  4058c8:	ldr	w0, [x27, #120]
  4058cc:	cbz	w0, 405994 <ferror@plt+0x3114>
  4058d0:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4058d4:	add	x28, x27, #0x78
  4058d8:	add	x22, x22, #0x220
  4058dc:	stp	x23, x24, [sp, #48]
  4058e0:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4058e4:	mov	x24, #0xfffffffffffffff0    	// #-16
  4058e8:	add	x23, x23, #0x218
  4058ec:	stp	x25, x26, [sp, #64]
  4058f0:	mov	w25, #0x0                   	// #0
  4058f4:	b	405970 <ferror@plt+0x30f0>
  4058f8:	ldr	x0, [x28, #32]
  4058fc:	add	x1, x24, w25, sxtw #3
  405900:	add	x0, x0, x1
  405904:	ldr	x26, [x0]
  405908:	add	x8, sp, #0x60
  40590c:	add	w25, w25, #0x1
  405910:	ldr	w0, [x26]
  405914:	bl	415ca0 <ferror@plt+0x13420>
  405918:	mov	x1, x23
  40591c:	mov	x0, x21
  405920:	bl	410da0 <ferror@plt+0xe520>
  405924:	ldr	x1, [sp, #96]
  405928:	mov	x0, x21
  40592c:	bl	405ea0 <ferror@plt+0x3620>
  405930:	ldr	w0, [x26, #4]
  405934:	add	x8, sp, #0x80
  405938:	bl	415ca0 <ferror@plt+0x13420>
  40593c:	ldp	w2, w3, [sp, #104]
  405940:	mov	x1, x22
  405944:	ldp	w4, w5, [sp, #136]
  405948:	mov	x0, x21
  40594c:	bl	410c58 <ferror@plt+0xe3d8>
  405950:	ldr	x1, [x26, #8]
  405954:	mov	x0, x21
  405958:	bl	405ea0 <ferror@plt+0x3620>
  40595c:	mov	x0, x21
  405960:	bl	40f0f0 <ferror@plt+0xc870>
  405964:	ldr	w0, [x27, #120]
  405968:	cmp	w0, w25
  40596c:	b.ls	405988 <ferror@plt+0x3108>  // b.plast
  405970:	cmp	w25, #0x1
  405974:	sxtw	x0, w25
  405978:	b.gt	4058f8 <ferror@plt+0x3078>
  40597c:	add	x0, x0, #0x1
  405980:	add	x0, x28, x0, lsl #3
  405984:	b	405904 <ferror@plt+0x3084>
  405988:	ldp	x23, x24, [sp, #48]
  40598c:	ldp	x25, x26, [sp, #64]
  405990:	ldr	x21, [x19]
  405994:	mov	x0, x21
  405998:	bl	40e4c8 <ferror@plt+0xbc48>
  40599c:	ldp	x27, x28, [sp, #80]
  4059a0:	b	405734 <ferror@plt+0x2eb4>
  4059a4:	ldp	w3, w1, [x20, #56]
  4059a8:	mov	w2, w21
  4059ac:	ldr	x4, [x19, #184]
  4059b0:	mov	x0, x19
  4059b4:	blr	x4
  4059b8:	mov	x22, x0
  4059bc:	cbz	x0, 405718 <ferror@plt+0x2e98>
  4059c0:	stp	x23, x24, [sp, #48]
  4059c4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4059c8:	add	x1, x1, #0x1f8
  4059cc:	ldr	x23, [x19]
  4059d0:	mov	x0, x23
  4059d4:	bl	410da0 <ferror@plt+0xe520>
  4059d8:	ldrsw	x1, [x20, #56]
  4059dc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4059e0:	add	x0, x0, #0x440
  4059e4:	ldr	x24, [x0, x1, lsl #3]
  4059e8:	mov	x0, x24
  4059ec:	bl	402270 <strlen@plt>
  4059f0:	mov	x2, x0
  4059f4:	ldrb	w0, [x23, #67]
  4059f8:	mov	x1, x24
  4059fc:	bl	407fc8 <ferror@plt+0x5748>
  405a00:	mov	x1, x0
  405a04:	mov	x0, x23
  405a08:	bl	410da0 <ferror@plt+0xe520>
  405a0c:	mov	x1, x22
  405a10:	mov	x0, x23
  405a14:	bl	410da0 <ferror@plt+0xe520>
  405a18:	ldrb	w0, [x23, #67]
  405a1c:	bl	408058 <ferror@plt+0x57d8>
  405a20:	mov	x1, x0
  405a24:	mov	x0, x23
  405a28:	bl	410da0 <ferror@plt+0xe520>
  405a2c:	mov	w1, #0x5d                  	// #93
  405a30:	mov	x0, x23
  405a34:	bl	40f150 <ferror@plt+0xc8d0>
  405a38:	mov	x0, x22
  405a3c:	bl	402640 <free@plt>
  405a40:	ldp	x23, x24, [sp, #48]
  405a44:	b	405718 <ferror@plt+0x2e98>
  405a48:	ldr	w0, [x19, #28]
  405a4c:	cmp	w0, #0x0
  405a50:	b.gt	405878 <ferror@plt+0x2ff8>
  405a54:	b	405880 <ferror@plt+0x3000>
  405a58:	bl	40ca50 <ferror@plt+0xa1d0>
  405a5c:	b	405758 <ferror@plt+0x2ed8>
  405a60:	cmp	w1, #0xd
  405a64:	b.eq	40586c <ferror@plt+0x2fec>  // b.none
  405a68:	b	405894 <ferror@plt+0x3014>
  405a6c:	str	w1, [x20, #56]
  405a70:	b	405688 <ferror@plt+0x2e08>
  405a74:	mov	x0, x20
  405a78:	mov	w1, #0x0                   	// #0
  405a7c:	stp	x23, x24, [sp, #48]
  405a80:	bl	40dff0 <ferror@plt+0xb770>
  405a84:	ldr	w22, [x19, #88]
  405a88:	mov	w24, w0
  405a8c:	subs	w22, w22, #0x1
  405a90:	b.mi	405b20 <ferror@plt+0x32a0>  // b.first
  405a94:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405a98:	add	x23, x23, #0x760
  405a9c:	stp	x25, x26, [sp, #64]
  405aa0:	mov	w25, #0xc                   	// #12
  405aa4:	b	405ac0 <ferror@plt+0x3240>
  405aa8:	cbz	w0, 405b04 <ferror@plt+0x3284>
  405aac:	ldr	w2, [x20, #60]
  405ab0:	cmp	w2, w0
  405ab4:	b.eq	405b04 <ferror@plt+0x3284>  // b.none
  405ab8:	subs	w22, w22, #0x1
  405abc:	b.mi	405af8 <ferror@plt+0x3278>  // b.first
  405ac0:	smull	x26, w22, w25
  405ac4:	mov	w2, w24
  405ac8:	ldr	x1, [x19, #80]
  405acc:	ldr	x0, [x23]
  405ad0:	ldr	w1, [x1, x26]
  405ad4:	bl	4328f0 <ferror@plt+0x30070>
  405ad8:	tbnz	w0, #31, 405ab8 <ferror@plt+0x3238>
  405adc:	ldr	x3, [x19, #80]
  405ae0:	add	x3, x3, x26
  405ae4:	ldp	w0, w1, [x3, #4]
  405ae8:	cmp	w1, #0xf
  405aec:	b.ne	405aa8 <ferror@plt+0x3228>  // b.any
  405af0:	mov	w22, w0
  405af4:	b	405ab8 <ferror@plt+0x3238>
  405af8:	ldp	x23, x24, [sp, #48]
  405afc:	ldp	x25, x26, [sp, #64]
  405b00:	b	405674 <ferror@plt+0x2df4>
  405b04:	cbz	w1, 405af8 <ferror@plt+0x3278>
  405b08:	ldp	x23, x24, [sp, #48]
  405b0c:	ldp	x25, x26, [sp, #64]
  405b10:	str	w1, [x20, #56]
  405b14:	b	405688 <ferror@plt+0x2e08>
  405b18:	ldp	x23, x24, [sp, #48]
  405b1c:	b	40577c <ferror@plt+0x2efc>
  405b20:	ldp	x23, x24, [sp, #48]
  405b24:	b	405674 <ferror@plt+0x2df4>
  405b28:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405b2c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405b30:	add	x1, x1, #0x20
  405b34:	stp	x23, x24, [sp, #48]
  405b38:	ldr	x0, [x0, #1312]
  405b3c:	stp	x25, x26, [sp, #64]
  405b40:	stp	x27, x28, [sp, #80]
  405b44:	bl	405258 <ferror@plt+0x29d8>
  405b48:	mov	w0, #0x1                   	// #1
  405b4c:	bl	4022a0 <exit@plt>
  405b50:	mov	w1, #0x0                   	// #0
  405b54:	mov	x0, x20
  405b58:	stp	x23, x24, [sp, #48]
  405b5c:	stp	x25, x26, [sp, #64]
  405b60:	stp	x27, x28, [sp, #80]
  405b64:	bl	40dff0 <ferror@plt+0xb770>
  405b68:	add	x8, sp, #0x80
  405b6c:	bl	415ca0 <ferror@plt+0x13420>
  405b70:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405b74:	ldr	w3, [sp, #136]
  405b78:	ldr	x2, [sp, #128]
  405b7c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405b80:	ldr	x0, [x0, #1312]
  405b84:	add	x1, x1, #0x1c8
  405b88:	bl	405258 <ferror@plt+0x29d8>
  405b8c:	mov	w0, #0x4                   	// #4
  405b90:	bl	4022a0 <exit@plt>
  405b94:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405b98:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405b9c:	add	x2, x2, #0x200
  405ba0:	add	x0, x0, #0x170
  405ba4:	mov	w1, #0x322                 	// #802
  405ba8:	stp	x23, x24, [sp, #48]
  405bac:	stp	x25, x26, [sp, #64]
  405bb0:	bl	4028b0 <ferror@plt+0x30>
  405bb4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405bb8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405bbc:	add	x2, x2, #0x200
  405bc0:	add	x0, x0, #0x170
  405bc4:	mov	w1, #0x323                 	// #803
  405bc8:	stp	x23, x24, [sp, #48]
  405bcc:	stp	x25, x26, [sp, #64]
  405bd0:	bl	4028b0 <ferror@plt+0x30>
  405bd4:	nop
  405bd8:	sub	sp, sp, #0x200
  405bdc:	adrp	x13, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405be0:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405be4:	add	x11, sp, #0x1c0
  405be8:	mov	w10, #0xffffffc8            	// #-56
  405bec:	mov	w9, #0xffffff80            	// #-128
  405bf0:	stp	x29, x30, [sp]
  405bf4:	mov	x29, sp
  405bf8:	str	x21, [sp, #32]
  405bfc:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  405c00:	str	q0, [sp, #320]
  405c04:	ldr	x8, [x21, #840]
  405c08:	str	q1, [sp, #336]
  405c0c:	str	q2, [sp, #352]
  405c10:	str	q3, [sp, #368]
  405c14:	str	q4, [sp, #384]
  405c18:	str	q5, [sp, #400]
  405c1c:	str	q6, [sp, #416]
  405c20:	str	q7, [sp, #432]
  405c24:	stp	x1, x2, [sp, #456]
  405c28:	ldr	w2, [x13, #1912]
  405c2c:	stp	x3, x4, [sp, #472]
  405c30:	add	x4, sp, #0x200
  405c34:	mov	x3, #0x0                   	// #0
  405c38:	stp	x5, x6, [sp, #488]
  405c3c:	add	x5, sp, #0x200
  405c40:	str	x7, [sp, #504]
  405c44:	stp	x4, x5, [sp, #56]
  405c48:	ldr	w4, [x8, #240]
  405c4c:	ldr	x1, [x12, #1888]
  405c50:	add	w4, w4, #0x1
  405c54:	stp	x19, x20, [sp, #16]
  405c58:	add	x19, sp, #0x98
  405c5c:	mov	x20, x0
  405c60:	str	w4, [x8, #240]
  405c64:	mov	x0, x19
  405c68:	str	x11, [sp, #72]
  405c6c:	stp	w10, w9, [sp, #80]
  405c70:	bl	4337e0 <ferror@plt+0x30f60>
  405c74:	mov	x0, x20
  405c78:	bl	402830 <gettext@plt>
  405c7c:	mov	x20, x0
  405c80:	bl	4027c0 <__errno_location@plt>
  405c84:	mov	x1, x0
  405c88:	add	x4, sp, #0x38
  405c8c:	ldr	x0, [x21, #840]
  405c90:	mov	x2, #0x3                   	// #3
  405c94:	ldr	w3, [x1]
  405c98:	add	x1, sp, #0x58
  405c9c:	stp	x20, x4, [sp, #88]
  405ca0:	str	w3, [sp, #104]
  405ca4:	stp	x19, x19, [sp, #120]
  405ca8:	str	x2, [sp, #144]
  405cac:	bl	405598 <ferror@plt+0x2d18>
  405cb0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405cb4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405cb8:	add	x2, x2, #0x230
  405cbc:	add	x0, x0, #0x170
  405cc0:	mov	w1, #0x607                 	// #1543
  405cc4:	bl	4028b0 <ferror@plt+0x30>
  405cc8:	stp	x29, x30, [sp, #-64]!
  405ccc:	mov	x29, sp
  405cd0:	stp	x19, x20, [sp, #16]
  405cd4:	stp	x21, x22, [sp, #32]
  405cd8:	str	x23, [sp, #48]
  405cdc:	cbz	x3, 405d20 <ferror@plt+0x34a0>
  405ce0:	mov	x19, x0
  405ce4:	mov	x23, x1
  405ce8:	mov	x22, x2
  405cec:	mov	x20, x3
  405cf0:	mov	w21, w4
  405cf4:	bl	4027c0 <__errno_location@plt>
  405cf8:	ldr	w0, [x0]
  405cfc:	stp	x23, x22, [x19]
  405d00:	str	w0, [x19, #16]
  405d04:	stp	x20, x20, [x19, #32]
  405d08:	stp	w21, wzr, [x19, #56]
  405d0c:	ldp	x19, x20, [sp, #16]
  405d10:	ldp	x21, x22, [sp, #32]
  405d14:	ldr	x23, [sp, #48]
  405d18:	ldp	x29, x30, [sp], #64
  405d1c:	ret
  405d20:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405d24:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405d28:	add	x2, x2, #0x250
  405d2c:	add	x0, x0, #0x170
  405d30:	mov	w1, #0x112                 	// #274
  405d34:	bl	4028b0 <ferror@plt+0x30>
  405d38:	stp	x29, x30, [sp, #-96]!
  405d3c:	mov	x29, sp
  405d40:	stp	x19, x20, [sp, #16]
  405d44:	mov	x19, x0
  405d48:	ldr	w0, [x1, #56]
  405d4c:	stp	x21, x22, [sp, #32]
  405d50:	cmp	w0, #0xd
  405d54:	stp	x23, x24, [sp, #48]
  405d58:	b.gt	405e2c <ferror@plt+0x35ac>
  405d5c:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405d60:	add	x21, x21, #0x440
  405d64:	mov	x20, x1
  405d68:	add	x1, x21, #0xa0
  405d6c:	ldr	x0, [x1, w0, sxtw #3]
  405d70:	bl	402830 <gettext@plt>
  405d74:	mov	x22, x0
  405d78:	ldrsw	x1, [x20, #56]
  405d7c:	ldr	x21, [x21, x1, lsl #3]
  405d80:	cbz	x21, 405e1c <ferror@plt+0x359c>
  405d84:	mov	x0, x21
  405d88:	bl	402270 <strlen@plt>
  405d8c:	ldr	x24, [x19]
  405d90:	mov	x2, x0
  405d94:	mov	x1, x21
  405d98:	ldrb	w0, [x24, #67]
  405d9c:	bl	407fc8 <ferror@plt+0x5748>
  405da0:	mov	x23, x0
  405da4:	ldrb	w0, [x24, #67]
  405da8:	bl	408058 <ferror@plt+0x57d8>
  405dac:	mov	x21, x0
  405db0:	ldr	x0, [x20, #40]
  405db4:	add	x8, sp, #0x40
  405db8:	mov	w1, #0x0                   	// #0
  405dbc:	bl	433960 <ferror@plt+0x310e0>
  405dc0:	mov	x1, x19
  405dc4:	ldp	w3, w4, [sp, #72]
  405dc8:	ldr	x2, [sp, #64]
  405dcc:	ldr	x0, [x1], #121
  405dd0:	bl	404808 <ferror@plt+0x1f88>
  405dd4:	mov	x1, x0
  405dd8:	mov	x4, x21
  405ddc:	mov	x3, x22
  405de0:	mov	x2, x23
  405de4:	mov	x19, x0
  405de8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405dec:	add	x0, x0, #0x288
  405df0:	bl	404790 <ferror@plt+0x1f10>
  405df4:	mov	x1, x0
  405df8:	mov	x0, x19
  405dfc:	mov	x19, x1
  405e00:	bl	402640 <free@plt>
  405e04:	mov	x0, x19
  405e08:	ldp	x19, x20, [sp, #16]
  405e0c:	ldp	x21, x22, [sp, #32]
  405e10:	ldp	x23, x24, [sp, #48]
  405e14:	ldp	x29, x30, [sp], #96
  405e18:	ret
  405e1c:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405e20:	add	x21, x21, #0x148
  405e24:	mov	x23, x21
  405e28:	b	405db0 <ferror@plt+0x3530>
  405e2c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405e30:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405e34:	add	x2, x2, #0x270
  405e38:	add	x0, x0, #0x170
  405e3c:	mov	w1, #0x16a                 	// #362
  405e40:	bl	4028b0 <ferror@plt+0x30>
  405e44:	nop
  405e48:	stp	x29, x30, [sp, #-48]!
  405e4c:	mov	x29, sp
  405e50:	stp	x19, x20, [sp, #16]
  405e54:	mov	x19, x0
  405e58:	mov	x20, x1
  405e5c:	mov	x0, x1
  405e60:	mov	w1, #0x0                   	// #0
  405e64:	str	x21, [sp, #32]
  405e68:	bl	40dff0 <ferror@plt+0xb770>
  405e6c:	mov	w1, w0
  405e70:	mov	x0, x19
  405e74:	bl	404c90 <ferror@plt+0x2410>
  405e78:	ldr	x21, [x19]
  405e7c:	mov	x1, x20
  405e80:	mov	x0, x19
  405e84:	bl	405d38 <ferror@plt+0x34b8>
  405e88:	mov	x1, x0
  405e8c:	mov	x0, x21
  405e90:	ldp	x19, x20, [sp, #16]
  405e94:	ldr	x21, [sp, #32]
  405e98:	ldp	x29, x30, [sp], #48
  405e9c:	b	40e728 <ferror@plt+0xbea8>
  405ea0:	stp	x29, x30, [sp, #-64]!
  405ea4:	mov	x29, sp
  405ea8:	stp	x19, x20, [sp, #16]
  405eac:	cbz	x0, 405fb0 <ferror@plt+0x3730>
  405eb0:	mov	x19, x1
  405eb4:	cbz	x1, 405fd0 <ferror@plt+0x3750>
  405eb8:	mov	w1, #0x22                  	// #34
  405ebc:	mov	x20, x0
  405ec0:	bl	40f150 <ferror@plt+0xc8d0>
  405ec4:	ldrb	w1, [x19]
  405ec8:	cbz	w1, 405f40 <ferror@plt+0x36c0>
  405ecc:	stp	x21, x22, [sp, #32]
  405ed0:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405ed4:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  405ed8:	add	x22, x22, #0x2c8
  405edc:	add	x21, x21, #0x2c0
  405ee0:	str	x23, [sp, #48]
  405ee4:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405ee8:	b	405f0c <ferror@plt+0x368c>
  405eec:	cmp	w1, #0xa
  405ef0:	b.ne	405f80 <ferror@plt+0x3700>  // b.any
  405ef4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405ef8:	mov	x0, x20
  405efc:	add	x1, x1, #0x2c0
  405f00:	bl	410da0 <ferror@plt+0xe520>
  405f04:	ldrb	w1, [x19, #1]!
  405f08:	cbz	w1, 405f38 <ferror@plt+0x36b8>
  405f0c:	cmp	w1, #0x22
  405f10:	b.eq	405f70 <ferror@plt+0x36f0>  // b.none
  405f14:	b.hi	405f54 <ferror@plt+0x36d4>  // b.pmore
  405f18:	cmp	w1, #0x9
  405f1c:	b.ne	405eec <ferror@plt+0x366c>  // b.any
  405f20:	mov	x0, x20
  405f24:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405f28:	add	x1, x1, #0x2b8
  405f2c:	bl	410da0 <ferror@plt+0xe520>
  405f30:	ldrb	w1, [x19, #1]!
  405f34:	cbnz	w1, 405f0c <ferror@plt+0x368c>
  405f38:	ldp	x21, x22, [sp, #32]
  405f3c:	ldr	x23, [sp, #48]
  405f40:	mov	x0, x20
  405f44:	ldp	x19, x20, [sp, #16]
  405f48:	mov	w1, #0x22                  	// #34
  405f4c:	ldp	x29, x30, [sp], #64
  405f50:	b	40f150 <ferror@plt+0xc8d0>
  405f54:	cmp	w1, #0x5c
  405f58:	b.ne	405f80 <ferror@plt+0x3700>  // b.any
  405f5c:	mov	x0, x20
  405f60:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405f64:	add	x1, x1, #0x2b0
  405f68:	bl	410da0 <ferror@plt+0xe520>
  405f6c:	b	405f04 <ferror@plt+0x3684>
  405f70:	mov	x1, x22
  405f74:	mov	x0, x20
  405f78:	bl	410da0 <ferror@plt+0xe520>
  405f7c:	b	405f04 <ferror@plt+0x3684>
  405f80:	ldrh	w0, [x21, w1, sxtw #1]
  405f84:	tbz	w0, #4, 405f94 <ferror@plt+0x3714>
  405f88:	mov	x0, x20
  405f8c:	bl	40f150 <ferror@plt+0xc8d0>
  405f90:	b	405f04 <ferror@plt+0x3684>
  405f94:	and	w4, w1, #0x7
  405f98:	ubfx	x3, x1, #3, #3
  405f9c:	lsr	w2, w1, #6
  405fa0:	mov	x0, x20
  405fa4:	add	x1, x23, #0x2d0
  405fa8:	bl	410c58 <ferror@plt+0xe3d8>
  405fac:	b	405f04 <ferror@plt+0x3684>
  405fb0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405fb4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405fb8:	add	x2, x2, #0x298
  405fbc:	add	x0, x0, #0x170
  405fc0:	mov	w1, #0x2f5                 	// #757
  405fc4:	stp	x21, x22, [sp, #32]
  405fc8:	str	x23, [sp, #48]
  405fcc:	bl	4028b0 <ferror@plt+0x30>
  405fd0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405fd4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  405fd8:	add	x2, x2, #0x298
  405fdc:	add	x0, x0, #0x170
  405fe0:	mov	w1, #0x2f6                 	// #758
  405fe4:	stp	x21, x22, [sp, #32]
  405fe8:	str	x23, [sp, #48]
  405fec:	bl	4028b0 <ferror@plt+0x30>
  405ff0:	cmp	w0, #0x0
  405ff4:	b.lt	406024 <ferror@plt+0x37a4>  // b.tstop
  405ff8:	mov	w1, w0
  405ffc:	mov	w0, #0x1                   	// #1
  406000:	b.eq	406020 <ferror@plt+0x37a0>  // b.none
  406004:	mov	w2, #0xcccd                	// #52429
  406008:	mov	w0, #0x0                   	// #0
  40600c:	movk	w2, #0xcccc, lsl #16
  406010:	umull	x1, w1, w2
  406014:	add	w0, w0, #0x1
  406018:	lsr	x1, x1, #35
  40601c:	cbnz	w1, 406010 <ferror@plt+0x3790>
  406020:	ret
  406024:	stp	x29, x30, [sp, #-16]!
  406028:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40602c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  406030:	mov	x29, sp
  406034:	add	x2, x2, #0x2d8
  406038:	add	x0, x0, #0x170
  40603c:	mov	w1, #0x415                 	// #1045
  406040:	bl	4028b0 <ferror@plt+0x30>
  406044:	nop
  406048:	sub	sp, sp, #0x200
  40604c:	adrp	x8, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406050:	stp	x29, x30, [sp]
  406054:	mov	x29, sp
  406058:	stp	x21, x22, [sp, #32]
  40605c:	mov	x21, x2
  406060:	mov	w2, w1
  406064:	ldr	x1, [x8, #1888]
  406068:	stp	x19, x20, [sp, #16]
  40606c:	add	x20, sp, #0xa8
  406070:	mov	x19, x0
  406074:	mov	x0, x20
  406078:	str	q0, [sp, #336]
  40607c:	mov	x22, #0x8                   	// #8
  406080:	str	q1, [sp, #352]
  406084:	str	q2, [sp, #368]
  406088:	str	q3, [sp, #384]
  40608c:	str	q4, [sp, #400]
  406090:	str	q5, [sp, #416]
  406094:	str	q6, [sp, #432]
  406098:	str	q7, [sp, #448]
  40609c:	stp	x3, x4, [sp, #472]
  4060a0:	mov	x3, #0x0                   	// #0
  4060a4:	stp	x5, x6, [sp, #488]
  4060a8:	str	x7, [sp, #504]
  4060ac:	bl	4337e0 <ferror@plt+0x30f60>
  4060b0:	add	x3, sp, #0x1d0
  4060b4:	add	x4, sp, #0x200
  4060b8:	mov	w2, #0xffffffd8            	// #-40
  4060bc:	mov	w1, #0xffffff80            	// #-128
  4060c0:	mov	x0, x21
  4060c4:	stp	x4, x4, [sp, #72]
  4060c8:	str	x3, [sp, #88]
  4060cc:	stp	w2, w1, [sp, #96]
  4060d0:	bl	402830 <gettext@plt>
  4060d4:	mov	x21, x0
  4060d8:	bl	4027c0 <__errno_location@plt>
  4060dc:	ldrb	w1, [x19, #220]
  4060e0:	add	x2, sp, #0x48
  4060e4:	ldr	w0, [x0]
  4060e8:	stp	x21, x2, [sp, #104]
  4060ec:	str	w0, [sp, #120]
  4060f0:	stp	x20, x20, [sp, #136]
  4060f4:	str	x22, [sp, #160]
  4060f8:	cbnz	w1, 406180 <ferror@plt+0x3900>
  4060fc:	ldr	x0, [x19]
  406100:	str	x23, [sp, #48]
  406104:	bl	40e7b8 <ferror@plt+0xbf38>
  406108:	mov	x21, x0
  40610c:	ldr	x23, [x19]
  406110:	add	x1, sp, #0x68
  406114:	mov	x0, x19
  406118:	bl	405d38 <ferror@plt+0x34b8>
  40611c:	mov	x1, x0
  406120:	mov	x0, x23
  406124:	bl	40e728 <ferror@plt+0xbea8>
  406128:	ldr	x0, [x19]
  40612c:	add	x1, sp, #0x68
  406130:	bl	40f238 <ferror@plt+0xc9b8>
  406134:	ldr	x0, [x19]
  406138:	bl	40ef40 <ferror@plt+0xc6c0>
  40613c:	ldr	x0, [x19]
  406140:	bl	40e7c8 <ferror@plt+0xbf48>
  406144:	ldr	x0, [x19]
  406148:	mov	x1, x21
  40614c:	bl	40e728 <ferror@plt+0xbea8>
  406150:	mov	w2, w22
  406154:	mov	x1, x20
  406158:	mov	x0, x19
  40615c:	bl	409b28 <ferror@plt+0x72a8>
  406160:	mov	x0, x20
  406164:	bl	433820 <ferror@plt+0x30fa0>
  406168:	ldp	x29, x30, [sp]
  40616c:	ldp	x19, x20, [sp, #16]
  406170:	ldp	x21, x22, [sp, #32]
  406174:	ldr	x23, [sp, #48]
  406178:	add	sp, sp, #0x200
  40617c:	ret
  406180:	mov	x0, x20
  406184:	bl	433820 <ferror@plt+0x30fa0>
  406188:	ldp	x29, x30, [sp]
  40618c:	ldp	x19, x20, [sp, #16]
  406190:	ldp	x21, x22, [sp, #32]
  406194:	add	sp, sp, #0x200
  406198:	ret
  40619c:	nop
  4061a0:	stp	x29, x30, [sp, #-64]!
  4061a4:	mov	x29, sp
  4061a8:	stp	x19, x20, [sp, #16]
  4061ac:	stp	x21, x22, [sp, #32]
  4061b0:	str	x23, [sp, #48]
  4061b4:	cbz	x3, 406200 <ferror@plt+0x3980>
  4061b8:	mov	x19, x0
  4061bc:	mov	x22, x2
  4061c0:	mov	x20, x3
  4061c4:	mov	w21, w4
  4061c8:	mov	x0, x1
  4061cc:	bl	402830 <gettext@plt>
  4061d0:	mov	x23, x0
  4061d4:	bl	4027c0 <__errno_location@plt>
  4061d8:	ldr	w0, [x0]
  4061dc:	stp	x23, x22, [x19]
  4061e0:	str	w0, [x19, #16]
  4061e4:	stp	x20, x20, [x19, #32]
  4061e8:	stp	w21, wzr, [x19, #56]
  4061ec:	ldp	x19, x20, [sp, #16]
  4061f0:	ldp	x21, x22, [sp, #32]
  4061f4:	ldr	x23, [sp, #48]
  4061f8:	ldp	x29, x30, [sp], #64
  4061fc:	ret
  406200:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  406204:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  406208:	add	x2, x2, #0x2e8
  40620c:	add	x0, x0, #0x170
  406210:	mov	w1, #0x123                 	// #291
  406214:	bl	4028b0 <ferror@plt+0x30>
  406218:	stp	x29, x30, [sp, #-496]!
  40621c:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406220:	mov	w10, #0xffffffe0            	// #-32
  406224:	mov	x29, sp
  406228:	stp	x19, x20, [sp, #16]
  40622c:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406230:	add	x11, sp, #0x1d0
  406234:	ldr	x8, [x20, #840]
  406238:	str	q0, [sp, #336]
  40623c:	mov	w9, #0xffffff80            	// #-128
  406240:	str	q1, [sp, #352]
  406244:	add	x19, sp, #0xa8
  406248:	str	q2, [sp, #368]
  40624c:	str	q3, [sp, #384]
  406250:	str	q4, [sp, #400]
  406254:	str	q5, [sp, #416]
  406258:	str	q6, [sp, #432]
  40625c:	str	q7, [sp, #448]
  406260:	stp	x4, x5, [sp, #464]
  406264:	add	x4, sp, #0x1f0
  406268:	add	x5, sp, #0x1f0
  40626c:	stp	x6, x7, [sp, #480]
  406270:	stp	x4, x5, [sp, #72]
  406274:	ldr	w4, [x8, #240]
  406278:	str	x23, [sp, #48]
  40627c:	mov	x23, x1
  406280:	ldr	x1, [x12, #1888]
  406284:	add	w4, w4, #0x1
  406288:	stp	x21, x22, [sp, #32]
  40628c:	mov	x21, x2
  406290:	mov	x22, x3
  406294:	str	w4, [x8, #240]
  406298:	mov	x3, #0x0                   	// #0
  40629c:	mov	w2, w0
  4062a0:	mov	x0, x19
  4062a4:	str	x11, [sp, #88]
  4062a8:	stp	w10, w9, [sp, #96]
  4062ac:	bl	4337e0 <ferror@plt+0x30f60>
  4062b0:	mov	x2, x23
  4062b4:	mov	x1, x22
  4062b8:	mov	x0, x21
  4062bc:	bl	402240 <ngettext@plt>
  4062c0:	mov	x21, x0
  4062c4:	bl	4027c0 <__errno_location@plt>
  4062c8:	mov	x2, x0
  4062cc:	ldr	x0, [x20, #840]
  4062d0:	add	x4, sp, #0x48
  4062d4:	ldr	w3, [x2]
  4062d8:	add	x1, sp, #0x68
  4062dc:	mov	x2, #0x4                   	// #4
  4062e0:	stp	x21, x4, [sp, #104]
  4062e4:	str	w3, [sp, #120]
  4062e8:	stp	x19, x19, [sp, #136]
  4062ec:	str	x2, [sp, #160]
  4062f0:	bl	405598 <ferror@plt+0x2d18>
  4062f4:	mov	x0, x19
  4062f8:	bl	433820 <ferror@plt+0x30fa0>
  4062fc:	ldr	x0, [x20, #840]
  406300:	ldr	w1, [x0, #240]
  406304:	sub	w1, w1, #0x1
  406308:	str	w1, [x0, #240]
  40630c:	cbnz	w1, 406330 <ferror@plt+0x3ab0>
  406310:	ldr	w1, [x0, #244]
  406314:	cmp	w1, #0x0
  406318:	b.le	40632c <ferror@plt+0x3aac>
  40631c:	ldr	x1, [x0, #256]
  406320:	cbz	x1, 40632c <ferror@plt+0x3aac>
  406324:	blr	x1
  406328:	ldr	x0, [x20, #840]
  40632c:	str	wzr, [x0, #244]
  406330:	ldp	x19, x20, [sp, #16]
  406334:	ldp	x21, x22, [sp, #32]
  406338:	ldr	x23, [sp, #48]
  40633c:	ldp	x29, x30, [sp], #496
  406340:	ret
  406344:	nop
  406348:	stp	x29, x30, [sp, #-320]!
  40634c:	mov	x8, x0
  406350:	mov	x29, sp
  406354:	stp	x19, x20, [sp, #16]
  406358:	str	x21, [sp, #32]
  40635c:	str	q0, [sp, #160]
  406360:	str	q1, [sp, #176]
  406364:	str	q2, [sp, #192]
  406368:	str	q3, [sp, #208]
  40636c:	str	q4, [sp, #224]
  406370:	str	q5, [sp, #240]
  406374:	str	q6, [sp, #256]
  406378:	str	q7, [sp, #272]
  40637c:	stp	x5, x6, [sp, #296]
  406380:	str	x7, [sp, #312]
  406384:	cbz	x0, 406458 <ferror@plt+0x3bd8>
  406388:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40638c:	mov	w20, w1
  406390:	mov	x1, x4
  406394:	mov	x0, x3
  406398:	ldr	x4, [x19, #840]
  40639c:	add	x3, sp, #0x140
  4063a0:	stp	x3, x3, [sp, #64]
  4063a4:	dup	v0.2d, x8
  4063a8:	add	x7, sp, #0x120
  4063ac:	ldr	w3, [x4, #240]
  4063b0:	mov	w6, #0xffffffe8            	// #-24
  4063b4:	mov	w5, #0xffffff80            	// #-128
  4063b8:	str	x7, [sp, #80]
  4063bc:	add	w3, w3, #0x1
  4063c0:	str	w3, [x4, #240]
  4063c4:	str	q0, [sp, #48]
  4063c8:	stp	w6, w5, [sp, #88]
  4063cc:	bl	402240 <ngettext@plt>
  4063d0:	mov	x21, x0
  4063d4:	bl	4027c0 <__errno_location@plt>
  4063d8:	mov	x1, x0
  4063dc:	add	x4, sp, #0x40
  4063e0:	ldr	x0, [x19, #840]
  4063e4:	mov	w2, #0x6                   	// #6
  4063e8:	ldr	w3, [x1]
  4063ec:	add	x1, sp, #0x60
  4063f0:	ldr	q0, [sp, #48]
  4063f4:	stp	x21, x4, [sp, #96]
  4063f8:	str	w3, [sp, #112]
  4063fc:	str	q0, [sp, #128]
  406400:	stp	w2, w20, [sp, #152]
  406404:	bl	405598 <ferror@plt+0x2d18>
  406408:	ldr	x2, [x19, #840]
  40640c:	mov	w20, w0
  406410:	ldr	w1, [x2, #240]
  406414:	sub	w1, w1, #0x1
  406418:	str	w1, [x2, #240]
  40641c:	cbnz	w1, 406444 <ferror@plt+0x3bc4>
  406420:	ldr	w0, [x2, #244]
  406424:	cmp	w0, #0x0
  406428:	b.le	406440 <ferror@plt+0x3bc0>
  40642c:	ldr	x1, [x2, #256]
  406430:	cbz	x1, 406440 <ferror@plt+0x3bc0>
  406434:	mov	x0, x2
  406438:	blr	x1
  40643c:	ldr	x2, [x19, #840]
  406440:	str	wzr, [x2, #244]
  406444:	mov	w0, w20
  406448:	ldp	x19, x20, [sp, #16]
  40644c:	ldr	x21, [sp, #32]
  406450:	ldp	x29, x30, [sp], #320
  406454:	ret
  406458:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40645c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  406460:	add	x2, x2, #0x300
  406464:	add	x0, x0, #0x170
  406468:	mov	w1, #0x528                 	// #1320
  40646c:	bl	4028b0 <ferror@plt+0x30>
  406470:	stp	x29, x30, [sp, #-496]!
  406474:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406478:	mov	w10, #0xffffffe8            	// #-24
  40647c:	mov	x29, sp
  406480:	stp	x19, x20, [sp, #16]
  406484:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406488:	add	x11, sp, #0x1d0
  40648c:	ldr	x8, [x20, #840]
  406490:	str	q0, [sp, #336]
  406494:	mov	w9, #0xffffff80            	// #-128
  406498:	str	q1, [sp, #352]
  40649c:	add	x19, sp, #0xa8
  4064a0:	str	q2, [sp, #368]
  4064a4:	str	q3, [sp, #384]
  4064a8:	str	q4, [sp, #400]
  4064ac:	str	q5, [sp, #416]
  4064b0:	str	q6, [sp, #432]
  4064b4:	str	q7, [sp, #448]
  4064b8:	stp	x5, x6, [sp, #472]
  4064bc:	add	x5, sp, #0x1f0
  4064c0:	str	x7, [sp, #488]
  4064c4:	stp	x23, x24, [sp, #48]
  4064c8:	mov	x23, x4
  4064cc:	add	x4, sp, #0x1f0
  4064d0:	str	x4, [sp, #72]
  4064d4:	mov	x24, x2
  4064d8:	ldr	w4, [x8, #240]
  4064dc:	mov	w2, w0
  4064e0:	stp	x21, x22, [sp, #32]
  4064e4:	mov	w21, w1
  4064e8:	add	w4, w4, #0x1
  4064ec:	ldr	x1, [x12, #1888]
  4064f0:	str	w4, [x8, #240]
  4064f4:	mov	x22, x3
  4064f8:	mov	x0, x19
  4064fc:	mov	x3, #0x0                   	// #0
  406500:	str	x5, [sp, #80]
  406504:	str	x11, [sp, #88]
  406508:	stp	w10, w9, [sp, #96]
  40650c:	bl	4337e0 <ferror@plt+0x30f60>
  406510:	mov	x2, x24
  406514:	mov	x1, x23
  406518:	mov	x0, x22
  40651c:	bl	402240 <ngettext@plt>
  406520:	mov	x22, x0
  406524:	bl	4027c0 <__errno_location@plt>
  406528:	mov	x2, x0
  40652c:	ldr	x0, [x20, #840]
  406530:	add	x4, sp, #0x48
  406534:	ldr	w3, [x2]
  406538:	mov	w2, #0x6                   	// #6
  40653c:	add	x1, sp, #0x68
  406540:	stp	x22, x4, [sp, #104]
  406544:	str	w3, [sp, #120]
  406548:	stp	x19, x19, [sp, #136]
  40654c:	stp	w2, w21, [sp, #160]
  406550:	bl	405598 <ferror@plt+0x2d18>
  406554:	mov	w1, w0
  406558:	mov	x0, x19
  40655c:	mov	w19, w1
  406560:	bl	433820 <ferror@plt+0x30fa0>
  406564:	ldr	x0, [x20, #840]
  406568:	ldr	w1, [x0, #240]
  40656c:	sub	w1, w1, #0x1
  406570:	str	w1, [x0, #240]
  406574:	cbnz	w1, 406598 <ferror@plt+0x3d18>
  406578:	ldr	w1, [x0, #244]
  40657c:	cmp	w1, #0x0
  406580:	b.le	406594 <ferror@plt+0x3d14>
  406584:	ldr	x1, [x0, #256]
  406588:	cbz	x1, 406594 <ferror@plt+0x3d14>
  40658c:	blr	x1
  406590:	ldr	x0, [x20, #840]
  406594:	str	wzr, [x0, #244]
  406598:	mov	w0, w19
  40659c:	ldp	x19, x20, [sp, #16]
  4065a0:	ldp	x21, x22, [sp, #32]
  4065a4:	ldp	x23, x24, [sp, #48]
  4065a8:	ldp	x29, x30, [sp], #496
  4065ac:	ret
  4065b0:	stp	x29, x30, [sp, #-496]!
  4065b4:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4065b8:	mov	w10, #0xffffffe0            	// #-32
  4065bc:	mov	x29, sp
  4065c0:	stp	x19, x20, [sp, #16]
  4065c4:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4065c8:	add	x11, sp, #0x1d0
  4065cc:	ldr	x8, [x20, #840]
  4065d0:	str	q0, [sp, #336]
  4065d4:	mov	w9, #0xffffff80            	// #-128
  4065d8:	str	q1, [sp, #352]
  4065dc:	add	x19, sp, #0xa8
  4065e0:	str	q2, [sp, #368]
  4065e4:	str	q3, [sp, #384]
  4065e8:	str	q4, [sp, #400]
  4065ec:	str	q5, [sp, #416]
  4065f0:	str	q6, [sp, #432]
  4065f4:	str	q7, [sp, #448]
  4065f8:	stp	x4, x5, [sp, #464]
  4065fc:	add	x4, sp, #0x1f0
  406600:	add	x5, sp, #0x1f0
  406604:	stp	x6, x7, [sp, #480]
  406608:	stp	x4, x5, [sp, #72]
  40660c:	ldr	w4, [x8, #240]
  406610:	str	x23, [sp, #48]
  406614:	mov	x23, x1
  406618:	ldr	x1, [x12, #1888]
  40661c:	add	w4, w4, #0x1
  406620:	stp	x21, x22, [sp, #32]
  406624:	mov	x21, x2
  406628:	mov	x22, x3
  40662c:	str	w4, [x8, #240]
  406630:	mov	x3, #0x0                   	// #0
  406634:	mov	w2, w0
  406638:	mov	x0, x19
  40663c:	str	x11, [sp, #88]
  406640:	stp	w10, w9, [sp, #96]
  406644:	bl	4337e0 <ferror@plt+0x30f60>
  406648:	mov	x2, x23
  40664c:	mov	x1, x22
  406650:	mov	x0, x21
  406654:	bl	402240 <ngettext@plt>
  406658:	mov	x21, x0
  40665c:	bl	4027c0 <__errno_location@plt>
  406660:	mov	x2, x0
  406664:	ldr	x0, [x20, #840]
  406668:	add	x4, sp, #0x48
  40666c:	ldr	w3, [x2]
  406670:	add	x1, sp, #0x68
  406674:	mov	x2, #0x8                   	// #8
  406678:	stp	x21, x4, [sp, #104]
  40667c:	str	w3, [sp, #120]
  406680:	stp	x19, x19, [sp, #136]
  406684:	str	x2, [sp, #160]
  406688:	bl	405598 <ferror@plt+0x2d18>
  40668c:	mov	x0, x19
  406690:	bl	433820 <ferror@plt+0x30fa0>
  406694:	ldr	x0, [x20, #840]
  406698:	ldr	w1, [x0, #240]
  40669c:	sub	w1, w1, #0x1
  4066a0:	str	w1, [x0, #240]
  4066a4:	cbnz	w1, 4066c8 <ferror@plt+0x3e48>
  4066a8:	ldr	w1, [x0, #244]
  4066ac:	cmp	w1, #0x0
  4066b0:	b.le	4066c4 <ferror@plt+0x3e44>
  4066b4:	ldr	x1, [x0, #256]
  4066b8:	cbz	x1, 4066c4 <ferror@plt+0x3e44>
  4066bc:	blr	x1
  4066c0:	ldr	x0, [x20, #840]
  4066c4:	str	wzr, [x0, #244]
  4066c8:	ldp	x19, x20, [sp, #16]
  4066cc:	ldp	x21, x22, [sp, #32]
  4066d0:	ldr	x23, [sp, #48]
  4066d4:	ldp	x29, x30, [sp], #496
  4066d8:	ret
  4066dc:	nop
  4066e0:	stp	x29, x30, [sp, #-496]!
  4066e4:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4066e8:	mov	w10, #0xffffffd8            	// #-40
  4066ec:	mov	x29, sp
  4066f0:	stp	x19, x20, [sp, #16]
  4066f4:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4066f8:	add	x11, sp, #0x1c0
  4066fc:	ldr	x8, [x20, #840]
  406700:	str	q0, [sp, #320]
  406704:	mov	w9, #0xffffff80            	// #-128
  406708:	str	q1, [sp, #336]
  40670c:	add	x19, sp, #0x98
  406710:	str	q2, [sp, #352]
  406714:	str	q3, [sp, #368]
  406718:	str	q4, [sp, #384]
  40671c:	str	q5, [sp, #400]
  406720:	str	q6, [sp, #416]
  406724:	str	q7, [sp, #432]
  406728:	stp	x3, x4, [sp, #456]
  40672c:	add	x4, sp, #0x1f0
  406730:	mov	x3, #0x0                   	// #0
  406734:	stp	x5, x6, [sp, #472]
  406738:	add	x5, sp, #0x1f0
  40673c:	str	x7, [sp, #488]
  406740:	stp	x4, x5, [sp, #56]
  406744:	ldr	w4, [x8, #240]
  406748:	stp	x21, x22, [sp, #32]
  40674c:	mov	w21, w1
  406750:	add	w4, w4, #0x1
  406754:	ldr	x1, [x12, #1888]
  406758:	mov	x22, x2
  40675c:	mov	w2, w0
  406760:	str	w4, [x8, #240]
  406764:	mov	x0, x19
  406768:	str	x11, [sp, #72]
  40676c:	stp	w10, w9, [sp, #80]
  406770:	bl	4337e0 <ferror@plt+0x30f60>
  406774:	mov	x0, x22
  406778:	bl	402830 <gettext@plt>
  40677c:	mov	x22, x0
  406780:	bl	4027c0 <__errno_location@plt>
  406784:	mov	x2, x0
  406788:	add	x4, sp, #0x38
  40678c:	ldr	x0, [x20, #840]
  406790:	add	x1, sp, #0x58
  406794:	ldr	w3, [x2]
  406798:	mov	w2, #0xa                   	// #10
  40679c:	stp	x22, x4, [sp, #88]
  4067a0:	str	w3, [sp, #104]
  4067a4:	stp	x19, x19, [sp, #120]
  4067a8:	stp	w2, w21, [sp, #144]
  4067ac:	bl	405598 <ferror@plt+0x2d18>
  4067b0:	mov	w1, w0
  4067b4:	mov	x0, x19
  4067b8:	mov	w19, w1
  4067bc:	bl	433820 <ferror@plt+0x30fa0>
  4067c0:	ldr	x0, [x20, #840]
  4067c4:	ldr	w1, [x0, #240]
  4067c8:	sub	w1, w1, #0x1
  4067cc:	str	w1, [x0, #240]
  4067d0:	cbnz	w1, 4067f4 <ferror@plt+0x3f74>
  4067d4:	ldr	w1, [x0, #244]
  4067d8:	cmp	w1, #0x0
  4067dc:	b.le	4067f0 <ferror@plt+0x3f70>
  4067e0:	ldr	x1, [x0, #256]
  4067e4:	cbz	x1, 4067f0 <ferror@plt+0x3f70>
  4067e8:	blr	x1
  4067ec:	ldr	x0, [x20, #840]
  4067f0:	str	wzr, [x0, #244]
  4067f4:	mov	w0, w19
  4067f8:	ldp	x19, x20, [sp, #16]
  4067fc:	ldp	x21, x22, [sp, #32]
  406800:	ldp	x29, x30, [sp], #496
  406804:	ret
  406808:	stp	x29, x30, [sp, #-496]!
  40680c:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406810:	mov	w10, #0xffffffd8            	// #-40
  406814:	mov	x29, sp
  406818:	stp	x19, x20, [sp, #16]
  40681c:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406820:	add	x11, sp, #0x1c0
  406824:	ldr	x8, [x20, #840]
  406828:	str	q0, [sp, #320]
  40682c:	mov	w9, #0xffffff80            	// #-128
  406830:	str	q1, [sp, #336]
  406834:	add	x19, sp, #0x98
  406838:	str	q2, [sp, #352]
  40683c:	str	q3, [sp, #368]
  406840:	str	q4, [sp, #384]
  406844:	str	q5, [sp, #400]
  406848:	str	q6, [sp, #416]
  40684c:	str	q7, [sp, #432]
  406850:	stp	x3, x4, [sp, #456]
  406854:	add	x4, sp, #0x1f0
  406858:	mov	x3, #0x0                   	// #0
  40685c:	stp	x5, x6, [sp, #472]
  406860:	add	x5, sp, #0x1f0
  406864:	str	x7, [sp, #488]
  406868:	stp	x4, x5, [sp, #56]
  40686c:	ldr	w4, [x8, #240]
  406870:	stp	x21, x22, [sp, #32]
  406874:	mov	w21, w1
  406878:	add	w4, w4, #0x1
  40687c:	ldr	x1, [x12, #1888]
  406880:	mov	x22, x2
  406884:	mov	w2, w0
  406888:	str	w4, [x8, #240]
  40688c:	mov	x0, x19
  406890:	str	x11, [sp, #72]
  406894:	stp	w10, w9, [sp, #80]
  406898:	bl	4337e0 <ferror@plt+0x30f60>
  40689c:	mov	x0, x22
  4068a0:	bl	402830 <gettext@plt>
  4068a4:	mov	x22, x0
  4068a8:	bl	4027c0 <__errno_location@plt>
  4068ac:	mov	x2, x0
  4068b0:	add	x4, sp, #0x38
  4068b4:	ldr	x0, [x20, #840]
  4068b8:	add	x1, sp, #0x58
  4068bc:	ldr	w3, [x2]
  4068c0:	mov	w2, #0x6                   	// #6
  4068c4:	stp	x22, x4, [sp, #88]
  4068c8:	str	w3, [sp, #104]
  4068cc:	stp	x19, x19, [sp, #120]
  4068d0:	stp	w2, w21, [sp, #144]
  4068d4:	bl	405598 <ferror@plt+0x2d18>
  4068d8:	mov	w1, w0
  4068dc:	mov	x0, x19
  4068e0:	mov	w19, w1
  4068e4:	bl	433820 <ferror@plt+0x30fa0>
  4068e8:	ldr	x0, [x20, #840]
  4068ec:	ldr	w1, [x0, #240]
  4068f0:	sub	w1, w1, #0x1
  4068f4:	str	w1, [x0, #240]
  4068f8:	cbnz	w1, 40691c <ferror@plt+0x409c>
  4068fc:	ldr	w1, [x0, #244]
  406900:	cmp	w1, #0x0
  406904:	b.le	406918 <ferror@plt+0x4098>
  406908:	ldr	x1, [x0, #256]
  40690c:	cbz	x1, 406918 <ferror@plt+0x4098>
  406910:	blr	x1
  406914:	ldr	x0, [x20, #840]
  406918:	str	wzr, [x0, #244]
  40691c:	mov	w0, w19
  406920:	ldp	x19, x20, [sp, #16]
  406924:	ldp	x21, x22, [sp, #32]
  406928:	ldp	x29, x30, [sp], #496
  40692c:	ret
  406930:	stp	x29, x30, [sp, #-496]!
  406934:	adrp	x13, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406938:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40693c:	mov	x29, sp
  406940:	stp	x19, x20, [sp, #16]
  406944:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406948:	add	x11, sp, #0x1c0
  40694c:	ldr	x8, [x20, #840]
  406950:	str	q0, [sp, #320]
  406954:	mov	w10, #0xffffffd0            	// #-48
  406958:	str	q1, [sp, #336]
  40695c:	mov	w9, #0xffffff80            	// #-128
  406960:	add	x19, sp, #0x98
  406964:	str	q2, [sp, #352]
  406968:	str	q3, [sp, #368]
  40696c:	str	q4, [sp, #384]
  406970:	str	q5, [sp, #400]
  406974:	str	q6, [sp, #416]
  406978:	str	q7, [sp, #432]
  40697c:	stp	x2, x3, [sp, #448]
  406980:	mov	x3, #0x0                   	// #0
  406984:	ldr	w2, [x13, #1912]
  406988:	stp	x4, x5, [sp, #464]
  40698c:	add	x4, sp, #0x1f0
  406990:	add	x5, sp, #0x1f0
  406994:	stp	x6, x7, [sp, #480]
  406998:	stp	x4, x5, [sp, #56]
  40699c:	ldr	w4, [x8, #240]
  4069a0:	stp	x21, x22, [sp, #32]
  4069a4:	mov	x22, x1
  4069a8:	add	w4, w4, #0x1
  4069ac:	ldr	x1, [x12, #1888]
  4069b0:	str	w4, [x8, #240]
  4069b4:	mov	w21, w0
  4069b8:	mov	x0, x19
  4069bc:	str	x11, [sp, #72]
  4069c0:	stp	w10, w9, [sp, #80]
  4069c4:	bl	4337e0 <ferror@plt+0x30f60>
  4069c8:	mov	x0, x22
  4069cc:	bl	402830 <gettext@plt>
  4069d0:	mov	x22, x0
  4069d4:	bl	4027c0 <__errno_location@plt>
  4069d8:	mov	x2, x0
  4069dc:	add	x4, sp, #0x38
  4069e0:	ldr	x0, [x20, #840]
  4069e4:	add	x1, sp, #0x58
  4069e8:	ldr	w3, [x2]
  4069ec:	mov	w2, #0x6                   	// #6
  4069f0:	stp	x22, x4, [sp, #88]
  4069f4:	str	w3, [sp, #104]
  4069f8:	stp	x19, x19, [sp, #120]
  4069fc:	stp	w2, w21, [sp, #144]
  406a00:	bl	405598 <ferror@plt+0x2d18>
  406a04:	mov	w1, w0
  406a08:	mov	x0, x19
  406a0c:	mov	w19, w1
  406a10:	bl	433820 <ferror@plt+0x30fa0>
  406a14:	ldr	x0, [x20, #840]
  406a18:	ldr	w1, [x0, #240]
  406a1c:	sub	w1, w1, #0x1
  406a20:	str	w1, [x0, #240]
  406a24:	cbnz	w1, 406a48 <ferror@plt+0x41c8>
  406a28:	ldr	w1, [x0, #244]
  406a2c:	cmp	w1, #0x0
  406a30:	b.le	406a44 <ferror@plt+0x41c4>
  406a34:	ldr	x1, [x0, #256]
  406a38:	cbz	x1, 406a44 <ferror@plt+0x41c4>
  406a3c:	blr	x1
  406a40:	ldr	x0, [x20, #840]
  406a44:	str	wzr, [x0, #244]
  406a48:	mov	w0, w19
  406a4c:	ldp	x19, x20, [sp, #16]
  406a50:	ldp	x21, x22, [sp, #32]
  406a54:	ldp	x29, x30, [sp], #496
  406a58:	ret
  406a5c:	nop
  406a60:	stp	x29, x30, [sp, #-496]!
  406a64:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406a68:	mov	w13, w0
  406a6c:	mov	x29, sp
  406a70:	stp	x19, x20, [sp, #16]
  406a74:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406a78:	add	x11, sp, #0x1c0
  406a7c:	ldr	x8, [x20, #840]
  406a80:	str	q0, [sp, #320]
  406a84:	mov	w10, #0xffffffd0            	// #-48
  406a88:	str	q1, [sp, #336]
  406a8c:	mov	w9, #0xffffff80            	// #-128
  406a90:	add	x19, sp, #0x98
  406a94:	str	q2, [sp, #352]
  406a98:	mov	x0, x19
  406a9c:	str	q3, [sp, #368]
  406aa0:	str	q4, [sp, #384]
  406aa4:	str	q5, [sp, #400]
  406aa8:	str	q6, [sp, #416]
  406aac:	str	q7, [sp, #432]
  406ab0:	stp	x2, x3, [sp, #448]
  406ab4:	mov	w2, w13
  406ab8:	mov	x3, #0x0                   	// #0
  406abc:	stp	x4, x5, [sp, #464]
  406ac0:	add	x4, sp, #0x1f0
  406ac4:	add	x5, sp, #0x1f0
  406ac8:	stp	x6, x7, [sp, #480]
  406acc:	stp	x4, x5, [sp, #56]
  406ad0:	ldr	w4, [x8, #240]
  406ad4:	str	x21, [sp, #32]
  406ad8:	mov	x21, x1
  406adc:	ldr	x1, [x12, #1888]
  406ae0:	add	w4, w4, #0x1
  406ae4:	str	w4, [x8, #240]
  406ae8:	str	x11, [sp, #72]
  406aec:	stp	w10, w9, [sp, #80]
  406af0:	bl	4337e0 <ferror@plt+0x30f60>
  406af4:	mov	x0, x21
  406af8:	bl	402830 <gettext@plt>
  406afc:	mov	x21, x0
  406b00:	bl	4027c0 <__errno_location@plt>
  406b04:	mov	x2, x0
  406b08:	add	x4, sp, #0x38
  406b0c:	ldr	x0, [x20, #840]
  406b10:	add	x1, sp, #0x58
  406b14:	ldr	w3, [x2]
  406b18:	mov	x2, #0x4                   	// #4
  406b1c:	stp	x21, x4, [sp, #88]
  406b20:	str	w3, [sp, #104]
  406b24:	stp	x19, x19, [sp, #120]
  406b28:	str	x2, [sp, #144]
  406b2c:	bl	405598 <ferror@plt+0x2d18>
  406b30:	mov	x0, x19
  406b34:	bl	433820 <ferror@plt+0x30fa0>
  406b38:	ldr	x0, [x20, #840]
  406b3c:	ldr	w1, [x0, #240]
  406b40:	sub	w1, w1, #0x1
  406b44:	str	w1, [x0, #240]
  406b48:	cbnz	w1, 406b6c <ferror@plt+0x42ec>
  406b4c:	ldr	w1, [x0, #244]
  406b50:	cmp	w1, #0x0
  406b54:	b.le	406b68 <ferror@plt+0x42e8>
  406b58:	ldr	x1, [x0, #256]
  406b5c:	cbz	x1, 406b68 <ferror@plt+0x42e8>
  406b60:	blr	x1
  406b64:	ldr	x0, [x20, #840]
  406b68:	str	wzr, [x0, #244]
  406b6c:	ldp	x19, x20, [sp, #16]
  406b70:	ldr	x21, [sp, #32]
  406b74:	ldp	x29, x30, [sp], #496
  406b78:	ret
  406b7c:	nop
  406b80:	stp	x29, x30, [sp, #-496]!
  406b84:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406b88:	mov	w13, w0
  406b8c:	mov	x29, sp
  406b90:	stp	x19, x20, [sp, #16]
  406b94:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406b98:	add	x11, sp, #0x1c0
  406b9c:	ldr	x8, [x20, #840]
  406ba0:	str	q0, [sp, #320]
  406ba4:	mov	w10, #0xffffffd0            	// #-48
  406ba8:	str	q1, [sp, #336]
  406bac:	mov	w9, #0xffffff80            	// #-128
  406bb0:	add	x19, sp, #0x98
  406bb4:	str	q2, [sp, #352]
  406bb8:	mov	x0, x19
  406bbc:	str	q3, [sp, #368]
  406bc0:	str	q4, [sp, #384]
  406bc4:	str	q5, [sp, #400]
  406bc8:	str	q6, [sp, #416]
  406bcc:	str	q7, [sp, #432]
  406bd0:	stp	x2, x3, [sp, #448]
  406bd4:	mov	w2, w13
  406bd8:	mov	x3, #0x0                   	// #0
  406bdc:	stp	x4, x5, [sp, #464]
  406be0:	add	x4, sp, #0x1f0
  406be4:	add	x5, sp, #0x1f0
  406be8:	stp	x6, x7, [sp, #480]
  406bec:	stp	x4, x5, [sp, #56]
  406bf0:	ldr	w4, [x8, #240]
  406bf4:	str	x21, [sp, #32]
  406bf8:	mov	x21, x1
  406bfc:	ldr	x1, [x12, #1888]
  406c00:	add	w4, w4, #0x1
  406c04:	str	w4, [x8, #240]
  406c08:	str	x11, [sp, #72]
  406c0c:	stp	w10, w9, [sp, #80]
  406c10:	bl	4337e0 <ferror@plt+0x30f60>
  406c14:	mov	x0, x21
  406c18:	bl	402830 <gettext@plt>
  406c1c:	mov	x21, x0
  406c20:	bl	4027c0 <__errno_location@plt>
  406c24:	mov	x2, x0
  406c28:	add	x4, sp, #0x38
  406c2c:	ldr	x0, [x20, #840]
  406c30:	add	x1, sp, #0x58
  406c34:	ldr	w3, [x2]
  406c38:	mov	x2, #0x8                   	// #8
  406c3c:	stp	x21, x4, [sp, #88]
  406c40:	str	w3, [sp, #104]
  406c44:	stp	x19, x19, [sp, #120]
  406c48:	str	x2, [sp, #144]
  406c4c:	bl	405598 <ferror@plt+0x2d18>
  406c50:	mov	x0, x19
  406c54:	bl	433820 <ferror@plt+0x30fa0>
  406c58:	ldr	x0, [x20, #840]
  406c5c:	ldr	w1, [x0, #240]
  406c60:	sub	w1, w1, #0x1
  406c64:	str	w1, [x0, #240]
  406c68:	cbnz	w1, 406c8c <ferror@plt+0x440c>
  406c6c:	ldr	w1, [x0, #244]
  406c70:	cmp	w1, #0x0
  406c74:	b.le	406c88 <ferror@plt+0x4408>
  406c78:	ldr	x1, [x0, #256]
  406c7c:	cbz	x1, 406c88 <ferror@plt+0x4408>
  406c80:	blr	x1
  406c84:	ldr	x0, [x20, #840]
  406c88:	str	wzr, [x0, #244]
  406c8c:	ldp	x19, x20, [sp, #16]
  406c90:	ldr	x21, [sp, #32]
  406c94:	ldp	x29, x30, [sp], #496
  406c98:	ret
  406c9c:	nop
  406ca0:	stp	x29, x30, [sp, #-496]!
  406ca4:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406ca8:	mov	w13, w0
  406cac:	mov	x29, sp
  406cb0:	stp	x19, x20, [sp, #16]
  406cb4:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406cb8:	add	x11, sp, #0x1c0
  406cbc:	ldr	x8, [x20, #840]
  406cc0:	str	q0, [sp, #320]
  406cc4:	mov	w10, #0xffffffd0            	// #-48
  406cc8:	str	q1, [sp, #336]
  406ccc:	mov	w9, #0xffffff80            	// #-128
  406cd0:	add	x19, sp, #0x98
  406cd4:	str	q2, [sp, #352]
  406cd8:	mov	x0, x19
  406cdc:	str	q3, [sp, #368]
  406ce0:	str	q4, [sp, #384]
  406ce4:	str	q5, [sp, #400]
  406ce8:	str	q6, [sp, #416]
  406cec:	str	q7, [sp, #432]
  406cf0:	stp	x2, x3, [sp, #448]
  406cf4:	mov	w2, w13
  406cf8:	mov	x3, #0x0                   	// #0
  406cfc:	stp	x4, x5, [sp, #464]
  406d00:	add	x4, sp, #0x1f0
  406d04:	add	x5, sp, #0x1f0
  406d08:	stp	x6, x7, [sp, #480]
  406d0c:	stp	x4, x5, [sp, #56]
  406d10:	ldr	w4, [x8, #240]
  406d14:	str	x21, [sp, #32]
  406d18:	mov	x21, x1
  406d1c:	ldr	x1, [x12, #1888]
  406d20:	add	w4, w4, #0x1
  406d24:	str	w4, [x8, #240]
  406d28:	str	x11, [sp, #72]
  406d2c:	stp	w10, w9, [sp, #80]
  406d30:	bl	4337e0 <ferror@plt+0x30f60>
  406d34:	mov	x0, x21
  406d38:	bl	402830 <gettext@plt>
  406d3c:	mov	x21, x0
  406d40:	bl	4027c0 <__errno_location@plt>
  406d44:	mov	x2, x0
  406d48:	add	x4, sp, #0x38
  406d4c:	ldr	x0, [x20, #840]
  406d50:	add	x1, sp, #0x58
  406d54:	ldr	w3, [x2]
  406d58:	mov	x2, #0x5                   	// #5
  406d5c:	stp	x21, x4, [sp, #88]
  406d60:	str	w3, [sp, #104]
  406d64:	stp	x19, x19, [sp, #120]
  406d68:	str	x2, [sp, #144]
  406d6c:	bl	405598 <ferror@plt+0x2d18>
  406d70:	mov	x0, x19
  406d74:	bl	433820 <ferror@plt+0x30fa0>
  406d78:	ldr	x0, [x20, #840]
  406d7c:	ldr	w1, [x0, #240]
  406d80:	sub	w1, w1, #0x1
  406d84:	str	w1, [x0, #240]
  406d88:	cbnz	w1, 406dac <ferror@plt+0x452c>
  406d8c:	ldr	w1, [x0, #244]
  406d90:	cmp	w1, #0x0
  406d94:	b.le	406da8 <ferror@plt+0x4528>
  406d98:	ldr	x1, [x0, #256]
  406d9c:	cbz	x1, 406da8 <ferror@plt+0x4528>
  406da0:	blr	x1
  406da4:	ldr	x0, [x20, #840]
  406da8:	str	wzr, [x0, #244]
  406dac:	ldp	x19, x20, [sp, #16]
  406db0:	ldr	x21, [sp, #32]
  406db4:	ldp	x29, x30, [sp], #496
  406db8:	ret
  406dbc:	nop
  406dc0:	sub	sp, sp, #0x200
  406dc4:	adrp	x13, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406dc8:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406dcc:	add	x11, sp, #0x1c0
  406dd0:	mov	w10, #0xffffffc8            	// #-56
  406dd4:	mov	w9, #0xffffff80            	// #-128
  406dd8:	stp	x29, x30, [sp]
  406ddc:	mov	x29, sp
  406de0:	stp	x19, x20, [sp, #16]
  406de4:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406de8:	add	x19, sp, #0x98
  406dec:	ldr	x8, [x20, #840]
  406df0:	str	q0, [sp, #320]
  406df4:	str	q1, [sp, #336]
  406df8:	str	q2, [sp, #352]
  406dfc:	str	q3, [sp, #368]
  406e00:	str	q4, [sp, #384]
  406e04:	str	q5, [sp, #400]
  406e08:	str	q6, [sp, #416]
  406e0c:	str	q7, [sp, #432]
  406e10:	stp	x1, x2, [sp, #456]
  406e14:	ldr	w2, [x13, #1912]
  406e18:	stp	x3, x4, [sp, #472]
  406e1c:	add	x4, sp, #0x200
  406e20:	mov	x3, #0x0                   	// #0
  406e24:	stp	x5, x6, [sp, #488]
  406e28:	add	x5, sp, #0x200
  406e2c:	str	x7, [sp, #504]
  406e30:	stp	x4, x5, [sp, #56]
  406e34:	ldr	w4, [x8, #240]
  406e38:	ldr	x1, [x12, #1888]
  406e3c:	add	w4, w4, #0x1
  406e40:	str	x21, [sp, #32]
  406e44:	mov	x21, x0
  406e48:	str	w4, [x8, #240]
  406e4c:	mov	x0, x19
  406e50:	str	x11, [sp, #72]
  406e54:	stp	w10, w9, [sp, #80]
  406e58:	bl	4337e0 <ferror@plt+0x30f60>
  406e5c:	mov	x0, x21
  406e60:	bl	402830 <gettext@plt>
  406e64:	mov	x21, x0
  406e68:	bl	4027c0 <__errno_location@plt>
  406e6c:	mov	x2, x0
  406e70:	add	x4, sp, #0x38
  406e74:	ldr	x0, [x20, #840]
  406e78:	add	x1, sp, #0x58
  406e7c:	ldr	w3, [x2]
  406e80:	mov	x2, #0x4                   	// #4
  406e84:	stp	x21, x4, [sp, #88]
  406e88:	str	w3, [sp, #104]
  406e8c:	stp	x19, x19, [sp, #120]
  406e90:	str	x2, [sp, #144]
  406e94:	bl	405598 <ferror@plt+0x2d18>
  406e98:	mov	x0, x19
  406e9c:	bl	433820 <ferror@plt+0x30fa0>
  406ea0:	ldr	x0, [x20, #840]
  406ea4:	ldr	w1, [x0, #240]
  406ea8:	sub	w1, w1, #0x1
  406eac:	str	w1, [x0, #240]
  406eb0:	cbnz	w1, 406ed4 <ferror@plt+0x4654>
  406eb4:	ldr	w1, [x0, #244]
  406eb8:	cmp	w1, #0x0
  406ebc:	b.le	406ed0 <ferror@plt+0x4650>
  406ec0:	ldr	x1, [x0, #256]
  406ec4:	cbz	x1, 406ed0 <ferror@plt+0x4650>
  406ec8:	blr	x1
  406ecc:	ldr	x0, [x20, #840]
  406ed0:	str	wzr, [x0, #244]
  406ed4:	ldp	x29, x30, [sp]
  406ed8:	ldp	x19, x20, [sp, #16]
  406edc:	ldr	x21, [sp, #32]
  406ee0:	add	sp, sp, #0x200
  406ee4:	ret
  406ee8:	sub	sp, sp, #0x200
  406eec:	adrp	x13, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406ef0:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406ef4:	add	x11, sp, #0x1c0
  406ef8:	mov	w10, #0xffffffc8            	// #-56
  406efc:	mov	w9, #0xffffff80            	// #-128
  406f00:	stp	x29, x30, [sp]
  406f04:	mov	x29, sp
  406f08:	stp	x19, x20, [sp, #16]
  406f0c:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  406f10:	add	x19, sp, #0x98
  406f14:	ldr	x8, [x20, #840]
  406f18:	str	q0, [sp, #320]
  406f1c:	str	q1, [sp, #336]
  406f20:	str	q2, [sp, #352]
  406f24:	str	q3, [sp, #368]
  406f28:	str	q4, [sp, #384]
  406f2c:	str	q5, [sp, #400]
  406f30:	str	q6, [sp, #416]
  406f34:	str	q7, [sp, #432]
  406f38:	stp	x1, x2, [sp, #456]
  406f3c:	ldr	w2, [x13, #1912]
  406f40:	stp	x3, x4, [sp, #472]
  406f44:	add	x4, sp, #0x200
  406f48:	mov	x3, #0x0                   	// #0
  406f4c:	stp	x5, x6, [sp, #488]
  406f50:	add	x5, sp, #0x200
  406f54:	str	x7, [sp, #504]
  406f58:	stp	x4, x5, [sp, #56]
  406f5c:	ldr	w4, [x8, #240]
  406f60:	ldr	x1, [x12, #1888]
  406f64:	add	w4, w4, #0x1
  406f68:	str	x21, [sp, #32]
  406f6c:	mov	x21, x0
  406f70:	str	w4, [x8, #240]
  406f74:	mov	x0, x19
  406f78:	str	x11, [sp, #72]
  406f7c:	stp	w10, w9, [sp, #80]
  406f80:	bl	4337e0 <ferror@plt+0x30f60>
  406f84:	mov	x0, x21
  406f88:	bl	402830 <gettext@plt>
  406f8c:	mov	x21, x0
  406f90:	bl	4027c0 <__errno_location@plt>
  406f94:	mov	x2, x0
  406f98:	add	x4, sp, #0x38
  406f9c:	ldr	x0, [x20, #840]
  406fa0:	add	x1, sp, #0x58
  406fa4:	ldr	w3, [x2]
  406fa8:	mov	x2, #0x5                   	// #5
  406fac:	stp	x21, x4, [sp, #88]
  406fb0:	str	w3, [sp, #104]
  406fb4:	stp	x19, x19, [sp, #120]
  406fb8:	str	x2, [sp, #144]
  406fbc:	bl	405598 <ferror@plt+0x2d18>
  406fc0:	mov	x0, x19
  406fc4:	bl	433820 <ferror@plt+0x30fa0>
  406fc8:	ldr	x0, [x20, #840]
  406fcc:	ldr	w1, [x0, #240]
  406fd0:	sub	w1, w1, #0x1
  406fd4:	str	w1, [x0, #240]
  406fd8:	cbnz	w1, 406ffc <ferror@plt+0x477c>
  406fdc:	ldr	w1, [x0, #244]
  406fe0:	cmp	w1, #0x0
  406fe4:	b.le	406ff8 <ferror@plt+0x4778>
  406fe8:	ldr	x1, [x0, #256]
  406fec:	cbz	x1, 406ff8 <ferror@plt+0x4778>
  406ff0:	blr	x1
  406ff4:	ldr	x0, [x20, #840]
  406ff8:	str	wzr, [x0, #244]
  406ffc:	ldp	x29, x30, [sp]
  407000:	ldp	x19, x20, [sp, #16]
  407004:	ldr	x21, [sp, #32]
  407008:	add	sp, sp, #0x200
  40700c:	ret
  407010:	stp	x29, x30, [sp, #-336]!
  407014:	mov	x8, x0
  407018:	mov	x29, sp
  40701c:	stp	x19, x20, [sp, #16]
  407020:	str	x21, [sp, #32]
  407024:	str	q0, [sp, #160]
  407028:	str	q1, [sp, #176]
  40702c:	str	q2, [sp, #192]
  407030:	str	q3, [sp, #208]
  407034:	str	q4, [sp, #224]
  407038:	str	q5, [sp, #240]
  40703c:	str	q6, [sp, #256]
  407040:	str	q7, [sp, #272]
  407044:	stp	x3, x4, [sp, #296]
  407048:	stp	x5, x6, [sp, #312]
  40704c:	str	x7, [sp, #328]
  407050:	cbz	x0, 407120 <ferror@plt+0x48a0>
  407054:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407058:	mov	x0, x2
  40705c:	mov	w20, w1
  407060:	add	x1, sp, #0x150
  407064:	ldr	x2, [x19, #840]
  407068:	stp	x1, x1, [sp, #64]
  40706c:	dup	v0.2d, x8
  407070:	add	x5, sp, #0x120
  407074:	mov	w4, #0xffffffd8            	// #-40
  407078:	ldr	w1, [x2, #240]
  40707c:	mov	w3, #0xffffff80            	// #-128
  407080:	str	x5, [sp, #80]
  407084:	add	w1, w1, #0x1
  407088:	str	w1, [x2, #240]
  40708c:	str	q0, [sp, #48]
  407090:	stp	w4, w3, [sp, #88]
  407094:	bl	402830 <gettext@plt>
  407098:	mov	x21, x0
  40709c:	bl	4027c0 <__errno_location@plt>
  4070a0:	mov	x1, x0
  4070a4:	add	x4, sp, #0x40
  4070a8:	ldr	x0, [x19, #840]
  4070ac:	mov	w2, #0xa                   	// #10
  4070b0:	ldr	w3, [x1]
  4070b4:	add	x1, sp, #0x60
  4070b8:	ldr	q0, [sp, #48]
  4070bc:	stp	x21, x4, [sp, #96]
  4070c0:	str	w3, [sp, #112]
  4070c4:	str	q0, [sp, #128]
  4070c8:	stp	w2, w20, [sp, #152]
  4070cc:	bl	405598 <ferror@plt+0x2d18>
  4070d0:	ldr	x2, [x19, #840]
  4070d4:	mov	w20, w0
  4070d8:	ldr	w1, [x2, #240]
  4070dc:	sub	w1, w1, #0x1
  4070e0:	str	w1, [x2, #240]
  4070e4:	cbnz	w1, 40710c <ferror@plt+0x488c>
  4070e8:	ldr	w0, [x2, #244]
  4070ec:	cmp	w0, #0x0
  4070f0:	b.le	407108 <ferror@plt+0x4888>
  4070f4:	ldr	x1, [x2, #256]
  4070f8:	cbz	x1, 407108 <ferror@plt+0x4888>
  4070fc:	mov	x0, x2
  407100:	blr	x1
  407104:	ldr	x2, [x19, #840]
  407108:	str	wzr, [x2, #244]
  40710c:	mov	w0, w20
  407110:	ldp	x19, x20, [sp, #16]
  407114:	ldr	x21, [sp, #32]
  407118:	ldp	x29, x30, [sp], #336
  40711c:	ret
  407120:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407124:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407128:	add	x2, x2, #0x310
  40712c:	add	x0, x0, #0x170
  407130:	mov	w1, #0x565                 	// #1381
  407134:	bl	4028b0 <ferror@plt+0x30>
  407138:	stp	x29, x30, [sp, #-336]!
  40713c:	mov	x8, x0
  407140:	mov	x29, sp
  407144:	stp	x19, x20, [sp, #16]
  407148:	str	x21, [sp, #32]
  40714c:	str	q0, [sp, #160]
  407150:	str	q1, [sp, #176]
  407154:	str	q2, [sp, #192]
  407158:	str	q3, [sp, #208]
  40715c:	str	q4, [sp, #224]
  407160:	str	q5, [sp, #240]
  407164:	str	q6, [sp, #256]
  407168:	str	q7, [sp, #272]
  40716c:	stp	x3, x4, [sp, #296]
  407170:	stp	x5, x6, [sp, #312]
  407174:	str	x7, [sp, #328]
  407178:	cbz	x0, 407248 <ferror@plt+0x49c8>
  40717c:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407180:	mov	x0, x2
  407184:	mov	w20, w1
  407188:	add	x1, sp, #0x150
  40718c:	ldr	x2, [x19, #840]
  407190:	stp	x1, x1, [sp, #64]
  407194:	dup	v0.2d, x8
  407198:	add	x5, sp, #0x120
  40719c:	mov	w4, #0xffffffd8            	// #-40
  4071a0:	ldr	w1, [x2, #240]
  4071a4:	mov	w3, #0xffffff80            	// #-128
  4071a8:	str	x5, [sp, #80]
  4071ac:	add	w1, w1, #0x1
  4071b0:	str	w1, [x2, #240]
  4071b4:	str	q0, [sp, #48]
  4071b8:	stp	w4, w3, [sp, #88]
  4071bc:	bl	402830 <gettext@plt>
  4071c0:	mov	x21, x0
  4071c4:	bl	4027c0 <__errno_location@plt>
  4071c8:	mov	x1, x0
  4071cc:	add	x4, sp, #0x40
  4071d0:	ldr	x0, [x19, #840]
  4071d4:	mov	w2, #0x6                   	// #6
  4071d8:	ldr	w3, [x1]
  4071dc:	add	x1, sp, #0x60
  4071e0:	ldr	q0, [sp, #48]
  4071e4:	stp	x21, x4, [sp, #96]
  4071e8:	str	w3, [sp, #112]
  4071ec:	str	q0, [sp, #128]
  4071f0:	stp	w2, w20, [sp, #152]
  4071f4:	bl	405598 <ferror@plt+0x2d18>
  4071f8:	ldr	x2, [x19, #840]
  4071fc:	mov	w20, w0
  407200:	ldr	w1, [x2, #240]
  407204:	sub	w1, w1, #0x1
  407208:	str	w1, [x2, #240]
  40720c:	cbnz	w1, 407234 <ferror@plt+0x49b4>
  407210:	ldr	w0, [x2, #244]
  407214:	cmp	w0, #0x0
  407218:	b.le	407230 <ferror@plt+0x49b0>
  40721c:	ldr	x1, [x2, #256]
  407220:	cbz	x1, 407230 <ferror@plt+0x49b0>
  407224:	mov	x0, x2
  407228:	blr	x1
  40722c:	ldr	x2, [x19, #840]
  407230:	str	wzr, [x2, #244]
  407234:	mov	w0, w20
  407238:	ldp	x19, x20, [sp, #16]
  40723c:	ldr	x21, [sp, #32]
  407240:	ldp	x29, x30, [sp], #336
  407244:	ret
  407248:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40724c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407250:	add	x2, x2, #0x318
  407254:	add	x0, x0, #0x170
  407258:	mov	w1, #0x518                 	// #1304
  40725c:	bl	4028b0 <ferror@plt+0x30>
  407260:	stp	x29, x30, [sp, #-320]!
  407264:	mov	x8, x0
  407268:	mov	x29, sp
  40726c:	stp	x19, x20, [sp, #16]
  407270:	str	q0, [sp, #144]
  407274:	str	q1, [sp, #160]
  407278:	str	q2, [sp, #176]
  40727c:	str	q3, [sp, #192]
  407280:	str	q4, [sp, #208]
  407284:	str	q5, [sp, #224]
  407288:	str	q6, [sp, #240]
  40728c:	str	q7, [sp, #256]
  407290:	stp	x2, x3, [sp, #272]
  407294:	stp	x4, x5, [sp, #288]
  407298:	stp	x6, x7, [sp, #304]
  40729c:	cbz	x0, 407358 <ferror@plt+0x4ad8>
  4072a0:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4072a4:	mov	x0, x1
  4072a8:	add	x1, sp, #0x140
  4072ac:	stp	x1, x1, [sp, #48]
  4072b0:	dup	v0.2d, x8
  4072b4:	ldr	x2, [x19, #840]
  4072b8:	add	x5, sp, #0x110
  4072bc:	mov	w4, #0xffffffd0            	// #-48
  4072c0:	mov	w3, #0xffffff80            	// #-128
  4072c4:	str	q0, [sp, #32]
  4072c8:	ldr	w1, [x2, #240]
  4072cc:	str	x5, [sp, #64]
  4072d0:	add	w1, w1, #0x1
  4072d4:	str	w1, [x2, #240]
  4072d8:	stp	w4, w3, [sp, #72]
  4072dc:	bl	402830 <gettext@plt>
  4072e0:	mov	x20, x0
  4072e4:	bl	4027c0 <__errno_location@plt>
  4072e8:	mov	x1, x0
  4072ec:	ldr	x0, [x19, #840]
  4072f0:	add	x4, sp, #0x30
  4072f4:	ldr	w3, [x1]
  4072f8:	mov	x2, #0x4                   	// #4
  4072fc:	ldr	q0, [sp, #32]
  407300:	add	x1, sp, #0x50
  407304:	stp	x20, x4, [sp, #80]
  407308:	str	w3, [sp, #96]
  40730c:	str	q0, [sp, #112]
  407310:	str	x2, [sp, #136]
  407314:	bl	405598 <ferror@plt+0x2d18>
  407318:	ldr	x0, [x19, #840]
  40731c:	ldr	w1, [x0, #240]
  407320:	sub	w1, w1, #0x1
  407324:	str	w1, [x0, #240]
  407328:	cbnz	w1, 40734c <ferror@plt+0x4acc>
  40732c:	ldr	w1, [x0, #244]
  407330:	cmp	w1, #0x0
  407334:	b.le	407348 <ferror@plt+0x4ac8>
  407338:	ldr	x1, [x0, #256]
  40733c:	cbz	x1, 407348 <ferror@plt+0x4ac8>
  407340:	blr	x1
  407344:	ldr	x0, [x19, #840]
  407348:	str	wzr, [x0, #244]
  40734c:	ldp	x19, x20, [sp, #16]
  407350:	ldp	x29, x30, [sp], #320
  407354:	ret
  407358:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40735c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407360:	add	x2, x2, #0x328
  407364:	add	x0, x0, #0x170
  407368:	mov	w1, #0x5be                 	// #1470
  40736c:	bl	4028b0 <ferror@plt+0x30>
  407370:	stp	x29, x30, [sp, #-320]!
  407374:	mov	x8, x0
  407378:	mov	x29, sp
  40737c:	stp	x19, x20, [sp, #16]
  407380:	str	q0, [sp, #144]
  407384:	str	q1, [sp, #160]
  407388:	str	q2, [sp, #176]
  40738c:	str	q3, [sp, #192]
  407390:	str	q4, [sp, #208]
  407394:	str	q5, [sp, #224]
  407398:	str	q6, [sp, #240]
  40739c:	str	q7, [sp, #256]
  4073a0:	stp	x2, x3, [sp, #272]
  4073a4:	stp	x4, x5, [sp, #288]
  4073a8:	stp	x6, x7, [sp, #304]
  4073ac:	cbz	x0, 407468 <ferror@plt+0x4be8>
  4073b0:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4073b4:	mov	x0, x1
  4073b8:	add	x1, sp, #0x140
  4073bc:	stp	x1, x1, [sp, #48]
  4073c0:	dup	v0.2d, x8
  4073c4:	ldr	x2, [x19, #840]
  4073c8:	add	x5, sp, #0x110
  4073cc:	mov	w4, #0xffffffd0            	// #-48
  4073d0:	mov	w3, #0xffffff80            	// #-128
  4073d4:	str	q0, [sp, #32]
  4073d8:	ldr	w1, [x2, #240]
  4073dc:	str	x5, [sp, #64]
  4073e0:	add	w1, w1, #0x1
  4073e4:	str	w1, [x2, #240]
  4073e8:	stp	w4, w3, [sp, #72]
  4073ec:	bl	402830 <gettext@plt>
  4073f0:	mov	x20, x0
  4073f4:	bl	4027c0 <__errno_location@plt>
  4073f8:	mov	x1, x0
  4073fc:	ldr	x0, [x19, #840]
  407400:	add	x4, sp, #0x30
  407404:	ldr	w3, [x1]
  407408:	mov	x2, #0x8                   	// #8
  40740c:	ldr	q0, [sp, #32]
  407410:	add	x1, sp, #0x50
  407414:	stp	x20, x4, [sp, #80]
  407418:	str	w3, [sp, #96]
  40741c:	str	q0, [sp, #112]
  407420:	str	x2, [sp, #136]
  407424:	bl	405598 <ferror@plt+0x2d18>
  407428:	ldr	x0, [x19, #840]
  40742c:	ldr	w1, [x0, #240]
  407430:	sub	w1, w1, #0x1
  407434:	str	w1, [x0, #240]
  407438:	cbnz	w1, 40745c <ferror@plt+0x4bdc>
  40743c:	ldr	w1, [x0, #244]
  407440:	cmp	w1, #0x0
  407444:	b.le	407458 <ferror@plt+0x4bd8>
  407448:	ldr	x1, [x0, #256]
  40744c:	cbz	x1, 407458 <ferror@plt+0x4bd8>
  407450:	blr	x1
  407454:	ldr	x0, [x19, #840]
  407458:	str	wzr, [x0, #244]
  40745c:	ldp	x19, x20, [sp, #16]
  407460:	ldp	x29, x30, [sp], #320
  407464:	ret
  407468:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40746c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407470:	add	x2, x2, #0x338
  407474:	add	x0, x0, #0x170
  407478:	mov	w1, #0x4dc                 	// #1244
  40747c:	bl	4028b0 <ferror@plt+0x30>
  407480:	stp	x29, x30, [sp, #-496]!
  407484:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407488:	mov	w13, w0
  40748c:	mov	x29, sp
  407490:	stp	x19, x20, [sp, #16]
  407494:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407498:	add	x11, sp, #0x1c0
  40749c:	ldr	x8, [x19, #840]
  4074a0:	str	q0, [sp, #320]
  4074a4:	mov	w10, #0xffffffd0            	// #-48
  4074a8:	str	q1, [sp, #336]
  4074ac:	mov	w9, #0xffffff80            	// #-128
  4074b0:	add	x20, sp, #0x98
  4074b4:	str	q2, [sp, #352]
  4074b8:	mov	x0, x20
  4074bc:	str	q3, [sp, #368]
  4074c0:	str	q4, [sp, #384]
  4074c4:	str	q5, [sp, #400]
  4074c8:	str	q6, [sp, #416]
  4074cc:	str	q7, [sp, #432]
  4074d0:	stp	x2, x3, [sp, #448]
  4074d4:	mov	w2, w13
  4074d8:	mov	x3, #0x0                   	// #0
  4074dc:	stp	x4, x5, [sp, #464]
  4074e0:	add	x4, sp, #0x1f0
  4074e4:	add	x5, sp, #0x1f0
  4074e8:	stp	x6, x7, [sp, #480]
  4074ec:	stp	x4, x5, [sp, #56]
  4074f0:	ldr	w4, [x8, #240]
  4074f4:	stp	x21, x22, [sp, #32]
  4074f8:	mov	x21, x1
  4074fc:	add	w4, w4, #0x1
  407500:	ldr	x1, [x12, #1888]
  407504:	str	w4, [x8, #240]
  407508:	str	x11, [sp, #72]
  40750c:	stp	w10, w9, [sp, #80]
  407510:	bl	4337e0 <ferror@plt+0x30f60>
  407514:	ldr	x2, [x19, #840]
  407518:	mov	w1, #0x4                   	// #4
  40751c:	mov	x0, x21
  407520:	mov	w21, #0x6                   	// #6
  407524:	ldrb	w2, [x2, #123]
  407528:	cmp	w2, #0x0
  40752c:	csel	w21, w21, w1, ne  // ne = any
  407530:	bl	402830 <gettext@plt>
  407534:	mov	x22, x0
  407538:	bl	4027c0 <__errno_location@plt>
  40753c:	ldr	w3, [x0]
  407540:	ldr	x2, [x19, #840]
  407544:	add	x4, sp, #0x38
  407548:	add	x1, sp, #0x58
  40754c:	stp	x22, x4, [sp, #88]
  407550:	mov	x0, x2
  407554:	ldr	w2, [x2, #124]
  407558:	str	w3, [sp, #104]
  40755c:	stp	x20, x20, [sp, #120]
  407560:	stp	w21, w2, [sp, #144]
  407564:	bl	405598 <ferror@plt+0x2d18>
  407568:	mov	w1, w0
  40756c:	mov	x0, x20
  407570:	mov	w20, w1
  407574:	bl	433820 <ferror@plt+0x30fa0>
  407578:	ldr	x0, [x19, #840]
  40757c:	ldr	w1, [x0, #240]
  407580:	sub	w1, w1, #0x1
  407584:	str	w1, [x0, #240]
  407588:	cbnz	w1, 4075ac <ferror@plt+0x4d2c>
  40758c:	ldr	w1, [x0, #244]
  407590:	cmp	w1, #0x0
  407594:	b.le	4075a8 <ferror@plt+0x4d28>
  407598:	ldr	x1, [x0, #256]
  40759c:	cbz	x1, 4075a8 <ferror@plt+0x4d28>
  4075a0:	blr	x1
  4075a4:	ldr	x0, [x19, #840]
  4075a8:	str	wzr, [x0, #244]
  4075ac:	mov	w0, w20
  4075b0:	ldp	x19, x20, [sp, #16]
  4075b4:	ldp	x21, x22, [sp, #32]
  4075b8:	ldp	x29, x30, [sp], #496
  4075bc:	ret
  4075c0:	stp	x29, x30, [sp, #-336]!
  4075c4:	mov	x8, x0
  4075c8:	mov	x29, sp
  4075cc:	stp	x19, x20, [sp, #16]
  4075d0:	str	x21, [sp, #32]
  4075d4:	str	q0, [sp, #160]
  4075d8:	str	q1, [sp, #176]
  4075dc:	str	q2, [sp, #192]
  4075e0:	str	q3, [sp, #208]
  4075e4:	str	q4, [sp, #224]
  4075e8:	str	q5, [sp, #240]
  4075ec:	str	q6, [sp, #256]
  4075f0:	str	q7, [sp, #272]
  4075f4:	stp	x2, x3, [sp, #288]
  4075f8:	stp	x4, x5, [sp, #304]
  4075fc:	stp	x6, x7, [sp, #320]
  407600:	cbz	x0, 4076e4 <ferror@plt+0x4e64>
  407604:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407608:	mov	x0, x1
  40760c:	add	x2, sp, #0x150
  407610:	dup	v0.2d, x8
  407614:	ldr	x1, [x19, #840]
  407618:	add	x5, sp, #0x120
  40761c:	mov	w6, #0x4                   	// #4
  407620:	mov	w4, #0xffffffd0            	// #-48
  407624:	mov	w3, #0xffffff80            	// #-128
  407628:	mov	w20, #0x6                   	// #6
  40762c:	ldrb	w7, [x1, #123]
  407630:	str	q0, [sp, #48]
  407634:	cmp	w7, #0x0
  407638:	add	x7, sp, #0x150
  40763c:	stp	x2, x7, [sp, #64]
  407640:	ldr	w2, [x1, #240]
  407644:	csel	w20, w20, w6, ne  // ne = any
  407648:	str	x5, [sp, #80]
  40764c:	add	w2, w2, #0x1
  407650:	str	w2, [x1, #240]
  407654:	stp	w4, w3, [sp, #88]
  407658:	bl	402830 <gettext@plt>
  40765c:	mov	x21, x0
  407660:	bl	4027c0 <__errno_location@plt>
  407664:	ldr	w3, [x0]
  407668:	ldr	x2, [x19, #840]
  40766c:	add	x4, sp, #0x40
  407670:	ldr	q0, [sp, #48]
  407674:	mov	x0, x2
  407678:	ldr	w2, [x2, #124]
  40767c:	add	x1, sp, #0x60
  407680:	stp	x21, x4, [sp, #96]
  407684:	str	w3, [sp, #112]
  407688:	str	q0, [sp, #128]
  40768c:	stp	w20, w2, [sp, #152]
  407690:	bl	405598 <ferror@plt+0x2d18>
  407694:	ldr	x2, [x19, #840]
  407698:	mov	w20, w0
  40769c:	ldr	w1, [x2, #240]
  4076a0:	sub	w1, w1, #0x1
  4076a4:	str	w1, [x2, #240]
  4076a8:	cbnz	w1, 4076d0 <ferror@plt+0x4e50>
  4076ac:	ldr	w0, [x2, #244]
  4076b0:	cmp	w0, #0x0
  4076b4:	b.le	4076cc <ferror@plt+0x4e4c>
  4076b8:	ldr	x1, [x2, #256]
  4076bc:	cbz	x1, 4076cc <ferror@plt+0x4e4c>
  4076c0:	mov	x0, x2
  4076c4:	blr	x1
  4076c8:	ldr	x2, [x19, #840]
  4076cc:	str	wzr, [x2, #244]
  4076d0:	mov	w0, w20
  4076d4:	ldp	x19, x20, [sp, #16]
  4076d8:	ldr	x21, [sp, #32]
  4076dc:	ldp	x29, x30, [sp], #336
  4076e0:	ret
  4076e4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4076e8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4076ec:	add	x2, x2, #0x340
  4076f0:	add	x0, x0, #0x170
  4076f4:	mov	w1, #0x587                 	// #1415
  4076f8:	bl	4028b0 <ferror@plt+0x30>
  4076fc:	nop
  407700:	stp	x29, x30, [sp, #-304]!
  407704:	adrp	x6, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407708:	mov	w5, w1
  40770c:	mov	x29, sp
  407710:	ldr	x1, [x6, #1888]
  407714:	stp	x19, x20, [sp, #16]
  407718:	add	x19, sp, #0x88
  40771c:	mov	w20, w0
  407720:	mov	x0, x19
  407724:	stp	x23, x24, [sp, #48]
  407728:	mov	w24, w2
  40772c:	mov	w2, w5
  407730:	stp	x21, x22, [sp, #32]
  407734:	mov	x22, x3
  407738:	mov	x3, #0x0                   	// #0
  40773c:	mov	x23, x4
  407740:	bl	4337e0 <ferror@plt+0x30f60>
  407744:	bl	4027c0 <__errno_location@plt>
  407748:	mov	x21, x0
  40774c:	cmp	w20, #0xb
  407750:	b.ne	4077cc <ferror@plt+0x4f4c>  // b.any
  407754:	adrp	x24, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407758:	mov	w1, #0x4                   	// #4
  40775c:	mov	x0, x22
  407760:	mov	w20, #0x6                   	// #6
  407764:	ldr	x2, [x24, #840]
  407768:	ldrb	w2, [x2, #123]
  40776c:	cmp	w2, #0x0
  407770:	csel	w20, w20, w1, ne  // ne = any
  407774:	bl	402830 <gettext@plt>
  407778:	mov	x1, x0
  40777c:	ldr	x0, [x24, #840]
  407780:	stp	x1, x23, [sp, #72]
  407784:	ldr	w2, [x21]
  407788:	str	w2, [sp, #88]
  40778c:	ldr	w1, [x0, #124]
  407790:	stp	x19, x19, [sp, #104]
  407794:	str	w20, [sp, #128]
  407798:	str	w1, [sp, #132]
  40779c:	add	x1, sp, #0x48
  4077a0:	bl	405598 <ferror@plt+0x2d18>
  4077a4:	mov	w1, w0
  4077a8:	mov	x0, x19
  4077ac:	mov	w19, w1
  4077b0:	bl	433820 <ferror@plt+0x30fa0>
  4077b4:	mov	w0, w19
  4077b8:	ldp	x19, x20, [sp, #16]
  4077bc:	ldp	x21, x22, [sp, #32]
  4077c0:	ldp	x23, x24, [sp, #48]
  4077c4:	ldp	x29, x30, [sp], #304
  4077c8:	ret
  4077cc:	mov	x0, x22
  4077d0:	bl	402830 <gettext@plt>
  4077d4:	ldr	w1, [x21]
  4077d8:	stp	x0, x23, [sp, #72]
  4077dc:	sub	w0, w20, #0x6
  4077e0:	tst	w0, #0xfffffffb
  4077e4:	str	w1, [sp, #88]
  4077e8:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4077ec:	stp	x19, x19, [sp, #104]
  4077f0:	stp	w20, wzr, [sp, #128]
  4077f4:	b.ne	4077fc <ferror@plt+0x4f7c>  // b.any
  4077f8:	str	w24, [sp, #132]
  4077fc:	ldr	x0, [x0, #840]
  407800:	b	40779c <ferror@plt+0x4f1c>
  407804:	nop
  407808:	stp	x29, x30, [sp, #-496]!
  40780c:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407810:	mov	w10, #0xffffffe0            	// #-32
  407814:	mov	x29, sp
  407818:	stp	x21, x22, [sp, #32]
  40781c:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407820:	add	x11, sp, #0x1d0
  407824:	ldr	x8, [x21, #840]
  407828:	str	q0, [sp, #336]
  40782c:	mov	w9, #0xffffff80            	// #-128
  407830:	str	q1, [sp, #352]
  407834:	str	q2, [sp, #368]
  407838:	str	q3, [sp, #384]
  40783c:	str	q4, [sp, #400]
  407840:	str	q5, [sp, #416]
  407844:	str	q6, [sp, #432]
  407848:	str	q7, [sp, #448]
  40784c:	stp	x4, x5, [sp, #464]
  407850:	add	x4, sp, #0x1f0
  407854:	add	x5, sp, #0x1f0
  407858:	stp	x6, x7, [sp, #480]
  40785c:	stp	x4, x5, [sp, #72]
  407860:	ldr	w4, [x8, #240]
  407864:	stp	x23, x24, [sp, #48]
  407868:	mov	w24, w2
  40786c:	mov	w2, w1
  407870:	ldr	x1, [x12, #1888]
  407874:	add	w4, w4, #0x1
  407878:	stp	x19, x20, [sp, #16]
  40787c:	add	x19, sp, #0xa8
  407880:	mov	w20, w0
  407884:	mov	x0, x19
  407888:	str	w4, [x8, #240]
  40788c:	mov	x23, x3
  407890:	mov	x3, #0x0                   	// #0
  407894:	str	x11, [sp, #88]
  407898:	stp	w10, w9, [sp, #96]
  40789c:	bl	4337e0 <ferror@plt+0x30f60>
  4078a0:	bl	4027c0 <__errno_location@plt>
  4078a4:	mov	x22, x0
  4078a8:	cmp	w20, #0xb
  4078ac:	b.ne	407958 <ferror@plt+0x50d8>  // b.any
  4078b0:	ldr	x2, [x21, #840]
  4078b4:	mov	w1, #0x4                   	// #4
  4078b8:	mov	x0, x23
  4078bc:	mov	w20, #0x6                   	// #6
  4078c0:	ldrb	w2, [x2, #123]
  4078c4:	cmp	w2, #0x0
  4078c8:	csel	w20, w20, w1, ne  // ne = any
  4078cc:	bl	402830 <gettext@plt>
  4078d0:	mov	x1, x0
  4078d4:	ldr	x0, [x21, #840]
  4078d8:	add	x3, sp, #0x48
  4078dc:	ldr	w2, [x22]
  4078e0:	stp	x1, x3, [sp, #104]
  4078e4:	ldr	w1, [x0, #124]
  4078e8:	str	w2, [sp, #120]
  4078ec:	stp	x19, x19, [sp, #136]
  4078f0:	str	w20, [sp, #160]
  4078f4:	str	w1, [sp, #164]
  4078f8:	add	x1, sp, #0x68
  4078fc:	bl	405598 <ferror@plt+0x2d18>
  407900:	mov	w20, w0
  407904:	mov	x0, x19
  407908:	bl	433820 <ferror@plt+0x30fa0>
  40790c:	ldr	x0, [x21, #840]
  407910:	ldr	w1, [x0, #240]
  407914:	sub	w1, w1, #0x1
  407918:	str	w1, [x0, #240]
  40791c:	cbnz	w1, 407940 <ferror@plt+0x50c0>
  407920:	ldr	w1, [x0, #244]
  407924:	cmp	w1, #0x0
  407928:	b.le	40793c <ferror@plt+0x50bc>
  40792c:	ldr	x1, [x0, #256]
  407930:	cbz	x1, 40793c <ferror@plt+0x50bc>
  407934:	blr	x1
  407938:	ldr	x0, [x21, #840]
  40793c:	str	wzr, [x0, #244]
  407940:	mov	w0, w20
  407944:	ldp	x19, x20, [sp, #16]
  407948:	ldp	x21, x22, [sp, #32]
  40794c:	ldp	x23, x24, [sp, #48]
  407950:	ldp	x29, x30, [sp], #496
  407954:	ret
  407958:	mov	x0, x23
  40795c:	bl	402830 <gettext@plt>
  407960:	ldr	w1, [x22]
  407964:	add	x2, sp, #0x48
  407968:	stp	x0, x2, [sp, #104]
  40796c:	sub	w0, w20, #0x6
  407970:	tst	w0, #0xfffffffb
  407974:	str	w1, [sp, #120]
  407978:	stp	x19, x19, [sp, #136]
  40797c:	stp	w20, wzr, [sp, #160]
  407980:	ldr	x0, [x21, #840]
  407984:	b.ne	4078f8 <ferror@plt+0x5078>  // b.any
  407988:	str	w24, [sp, #164]
  40798c:	b	4078f8 <ferror@plt+0x5078>
  407990:	stp	x29, x30, [sp, #-320]!
  407994:	mov	w10, #0xffffffe0            	// #-32
  407998:	mov	w9, #0xffffff80            	// #-128
  40799c:	mov	x29, sp
  4079a0:	stp	x19, x20, [sp, #16]
  4079a4:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4079a8:	add	x11, sp, #0x120
  4079ac:	ldr	x8, [x20, #840]
  4079b0:	str	q0, [sp, #160]
  4079b4:	mov	w19, w0
  4079b8:	str	q1, [sp, #176]
  4079bc:	cmp	w0, #0xb
  4079c0:	mov	x0, x3
  4079c4:	str	q2, [sp, #192]
  4079c8:	str	q3, [sp, #208]
  4079cc:	str	q4, [sp, #224]
  4079d0:	str	q5, [sp, #240]
  4079d4:	str	q6, [sp, #256]
  4079d8:	str	q7, [sp, #272]
  4079dc:	stp	x4, x5, [sp, #288]
  4079e0:	stp	x6, x7, [sp, #304]
  4079e4:	ldr	w4, [x8, #240]
  4079e8:	stp	x21, x22, [sp, #32]
  4079ec:	mov	w21, w2
  4079f0:	add	w4, w4, #0x1
  4079f4:	add	x2, sp, #0x140
  4079f8:	stp	x2, x2, [sp, #64]
  4079fc:	str	x11, [sp, #80]
  407a00:	stp	w10, w9, [sp, #88]
  407a04:	str	w4, [x8, #240]
  407a08:	b.ne	407abc <ferror@plt+0x523c>  // b.any
  407a0c:	ldrb	w3, [x8, #123]
  407a10:	mov	w19, #0x6                   	// #6
  407a14:	mov	w2, #0x4                   	// #4
  407a18:	cmp	w3, #0x0
  407a1c:	csel	w19, w19, w2, ne  // ne = any
  407a20:	cbz	x1, 407b08 <ferror@plt+0x5288>
  407a24:	dup	v0.2d, x1
  407a28:	str	q0, [sp, #48]
  407a2c:	bl	402830 <gettext@plt>
  407a30:	mov	x21, x0
  407a34:	bl	4027c0 <__errno_location@plt>
  407a38:	mov	x2, x0
  407a3c:	ldr	x0, [x20, #840]
  407a40:	add	x1, sp, #0x40
  407a44:	ldr	q0, [sp, #48]
  407a48:	stp	x21, x1, [sp, #96]
  407a4c:	ldr	w2, [x2]
  407a50:	ldr	w1, [x0, #124]
  407a54:	str	w2, [sp, #112]
  407a58:	str	w19, [sp, #152]
  407a5c:	str	w1, [sp, #156]
  407a60:	str	q0, [sp, #128]
  407a64:	add	x1, sp, #0x60
  407a68:	bl	405598 <ferror@plt+0x2d18>
  407a6c:	mov	w19, w0
  407a70:	ldr	x2, [x20, #840]
  407a74:	ldr	w1, [x2, #240]
  407a78:	sub	w1, w1, #0x1
  407a7c:	str	w1, [x2, #240]
  407a80:	cbnz	w1, 407aa8 <ferror@plt+0x5228>
  407a84:	ldr	w0, [x2, #244]
  407a88:	cmp	w0, #0x0
  407a8c:	b.le	407aa4 <ferror@plt+0x5224>
  407a90:	ldr	x1, [x2, #256]
  407a94:	cbz	x1, 407aa4 <ferror@plt+0x5224>
  407a98:	mov	x0, x2
  407a9c:	blr	x1
  407aa0:	ldr	x2, [x20, #840]
  407aa4:	str	wzr, [x2, #244]
  407aa8:	mov	w0, w19
  407aac:	ldp	x19, x20, [sp, #16]
  407ab0:	ldp	x21, x22, [sp, #32]
  407ab4:	ldp	x29, x30, [sp], #320
  407ab8:	ret
  407abc:	cbz	x1, 407b08 <ferror@plt+0x5288>
  407ac0:	dup	v0.2d, x1
  407ac4:	str	q0, [sp, #48]
  407ac8:	bl	402830 <gettext@plt>
  407acc:	mov	x22, x0
  407ad0:	bl	4027c0 <__errno_location@plt>
  407ad4:	ldr	w0, [x0]
  407ad8:	ldr	q0, [sp, #48]
  407adc:	add	x2, sp, #0x40
  407ae0:	stp	x22, x2, [sp, #96]
  407ae4:	sub	w1, w19, #0x6
  407ae8:	tst	w1, #0xfffffffb
  407aec:	str	w0, [sp, #112]
  407af0:	stp	w19, wzr, [sp, #152]
  407af4:	str	q0, [sp, #128]
  407af8:	ldr	x0, [x20, #840]
  407afc:	b.ne	407a64 <ferror@plt+0x51e4>  // b.any
  407b00:	str	w21, [sp, #156]
  407b04:	b	407a64 <ferror@plt+0x51e4>
  407b08:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407b0c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407b10:	add	x2, x2, #0x2e8
  407b14:	add	x0, x0, #0x170
  407b18:	mov	w1, #0x123                 	// #291
  407b1c:	bl	4028b0 <ferror@plt+0x30>
  407b20:	sub	sp, sp, #0x200
  407b24:	adrp	x13, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407b28:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407b2c:	add	x11, sp, #0x1c0
  407b30:	mov	w10, #0xffffffc8            	// #-56
  407b34:	mov	w9, #0xffffff80            	// #-128
  407b38:	stp	x29, x30, [sp]
  407b3c:	mov	x29, sp
  407b40:	str	x21, [sp, #32]
  407b44:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407b48:	str	q0, [sp, #320]
  407b4c:	ldr	x8, [x21, #840]
  407b50:	str	q1, [sp, #336]
  407b54:	str	q2, [sp, #352]
  407b58:	str	q3, [sp, #368]
  407b5c:	str	q4, [sp, #384]
  407b60:	str	q5, [sp, #400]
  407b64:	str	q6, [sp, #416]
  407b68:	str	q7, [sp, #432]
  407b6c:	stp	x1, x2, [sp, #456]
  407b70:	ldr	w2, [x13, #1912]
  407b74:	stp	x3, x4, [sp, #472]
  407b78:	add	x4, sp, #0x200
  407b7c:	mov	x3, #0x0                   	// #0
  407b80:	stp	x5, x6, [sp, #488]
  407b84:	add	x5, sp, #0x200
  407b88:	str	x7, [sp, #504]
  407b8c:	stp	x4, x5, [sp, #56]
  407b90:	ldr	w4, [x8, #240]
  407b94:	ldr	x1, [x12, #1888]
  407b98:	add	w4, w4, #0x1
  407b9c:	stp	x19, x20, [sp, #16]
  407ba0:	add	x19, sp, #0x98
  407ba4:	mov	x20, x0
  407ba8:	str	w4, [x8, #240]
  407bac:	mov	x0, x19
  407bb0:	str	x11, [sp, #72]
  407bb4:	stp	w10, w9, [sp, #80]
  407bb8:	bl	4337e0 <ferror@plt+0x30f60>
  407bbc:	mov	x0, x20
  407bc0:	bl	402830 <gettext@plt>
  407bc4:	mov	x20, x0
  407bc8:	bl	4027c0 <__errno_location@plt>
  407bcc:	mov	x1, x0
  407bd0:	add	x4, sp, #0x38
  407bd4:	ldr	x0, [x21, #840]
  407bd8:	mov	x2, #0xd                   	// #13
  407bdc:	ldr	w3, [x1]
  407be0:	add	x1, sp, #0x58
  407be4:	stp	x20, x4, [sp, #88]
  407be8:	str	w3, [sp, #104]
  407bec:	stp	x19, x19, [sp, #120]
  407bf0:	str	x2, [sp, #144]
  407bf4:	bl	405598 <ferror@plt+0x2d18>
  407bf8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407bfc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407c00:	add	x2, x2, #0x350
  407c04:	add	x0, x0, #0x170
  407c08:	mov	w1, #0x617                 	// #1559
  407c0c:	bl	4028b0 <ferror@plt+0x30>
  407c10:	stp	x29, x30, [sp, #-496]!
  407c14:	adrp	x12, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407c18:	mov	w13, w0
  407c1c:	mov	x29, sp
  407c20:	str	x21, [sp, #32]
  407c24:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407c28:	str	q0, [sp, #320]
  407c2c:	add	x11, sp, #0x1c0
  407c30:	mov	w10, #0xffffffd0            	// #-48
  407c34:	ldr	x8, [x21, #840]
  407c38:	str	q1, [sp, #336]
  407c3c:	mov	w9, #0xffffff80            	// #-128
  407c40:	str	q2, [sp, #352]
  407c44:	str	q3, [sp, #368]
  407c48:	str	q4, [sp, #384]
  407c4c:	str	q5, [sp, #400]
  407c50:	str	q6, [sp, #416]
  407c54:	str	q7, [sp, #432]
  407c58:	stp	x2, x3, [sp, #448]
  407c5c:	mov	w2, w13
  407c60:	mov	x3, #0x0                   	// #0
  407c64:	stp	x4, x5, [sp, #464]
  407c68:	add	x4, sp, #0x1f0
  407c6c:	add	x5, sp, #0x1f0
  407c70:	stp	x6, x7, [sp, #480]
  407c74:	stp	x4, x5, [sp, #56]
  407c78:	ldr	w4, [x8, #240]
  407c7c:	stp	x19, x20, [sp, #16]
  407c80:	mov	x20, x1
  407c84:	add	w4, w4, #0x1
  407c88:	ldr	x1, [x12, #1888]
  407c8c:	str	w4, [x8, #240]
  407c90:	add	x19, sp, #0x98
  407c94:	str	x11, [sp, #72]
  407c98:	mov	x0, x19
  407c9c:	stp	w10, w9, [sp, #80]
  407ca0:	bl	4337e0 <ferror@plt+0x30f60>
  407ca4:	mov	x0, x20
  407ca8:	bl	402830 <gettext@plt>
  407cac:	mov	x20, x0
  407cb0:	bl	4027c0 <__errno_location@plt>
  407cb4:	mov	x1, x0
  407cb8:	add	x4, sp, #0x38
  407cbc:	ldr	x0, [x21, #840]
  407cc0:	mov	x2, #0x2                   	// #2
  407cc4:	ldr	w3, [x1]
  407cc8:	add	x1, sp, #0x58
  407ccc:	stp	x20, x4, [sp, #88]
  407cd0:	str	w3, [sp, #104]
  407cd4:	stp	x19, x19, [sp, #120]
  407cd8:	str	x2, [sp, #144]
  407cdc:	bl	405598 <ferror@plt+0x2d18>
  407ce0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407ce4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407ce8:	add	x2, x2, #0x370
  407cec:	add	x0, x0, #0x170
  407cf0:	mov	w1, #0x5f6                 	// #1526
  407cf4:	bl	4028b0 <ferror@plt+0x30>
  407cf8:	cbz	x1, 407e00 <ferror@plt+0x5580>
  407cfc:	stp	x29, x30, [sp, #-48]!
  407d00:	mov	x29, sp
  407d04:	stp	x19, x20, [sp, #16]
  407d08:	mov	x20, x1
  407d0c:	ldr	x1, [x0, #16]
  407d10:	stp	x21, x22, [sp, #32]
  407d14:	mov	x22, x0
  407d18:	cbz	x1, 407d24 <ferror@plt+0x54a4>
  407d1c:	ldr	x0, [x20]
  407d20:	blr	x1
  407d24:	ldr	x1, [x22, #24]
  407d28:	cbz	x1, 407d34 <ferror@plt+0x54b4>
  407d2c:	ldr	x0, [x20, #8]
  407d30:	blr	x1
  407d34:	str	xzr, [x20, #32]
  407d38:	mov	x19, x20
  407d3c:	mov	x20, #0x0                   	// #0
  407d40:	ldr	x21, [x19, #16]
  407d44:	cbz	x21, 407dc8 <ferror@plt+0x5548>
  407d48:	ldr	x1, [x22, #16]
  407d4c:	cbz	x1, 407d5c <ferror@plt+0x54dc>
  407d50:	ldr	x0, [x21]
  407d54:	blr	x1
  407d58:	ldr	x21, [x19, #16]
  407d5c:	ldr	x1, [x22, #24]
  407d60:	cbz	x1, 407d70 <ferror@plt+0x54f0>
  407d64:	ldr	x0, [x21, #8]
  407d68:	blr	x1
  407d6c:	ldr	x21, [x19, #16]
  407d70:	str	x20, [x21, #32]
  407d74:	ldr	x20, [x19, #24]
  407d78:	cbz	x20, 407dd4 <ferror@plt+0x5554>
  407d7c:	ldr	x1, [x22, #16]
  407d80:	cbz	x1, 407d90 <ferror@plt+0x5510>
  407d84:	ldr	x0, [x20]
  407d88:	blr	x1
  407d8c:	ldr	x20, [x19, #24]
  407d90:	ldr	x1, [x22, #24]
  407d94:	cbz	x1, 407da4 <ferror@plt+0x5524>
  407d98:	ldr	x0, [x20, #8]
  407d9c:	blr	x1
  407da0:	ldr	x20, [x19, #24]
  407da4:	str	x21, [x20, #32]
  407da8:	mov	x0, x19
  407dac:	mov	x1, #0x28                  	// #40
  407db0:	ldr	x21, [x19, #32]
  407db4:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  407db8:	cbz	x21, 407dec <ferror@plt+0x556c>
  407dbc:	mov	x19, x21
  407dc0:	ldr	x21, [x19, #16]
  407dc4:	cbnz	x21, 407d48 <ferror@plt+0x54c8>
  407dc8:	mov	x21, x20
  407dcc:	ldr	x20, [x19, #24]
  407dd0:	cbnz	x20, 407d7c <ferror@plt+0x54fc>
  407dd4:	mov	x20, x21
  407dd8:	mov	x0, x19
  407ddc:	ldr	x21, [x19, #32]
  407de0:	mov	x1, #0x28                  	// #40
  407de4:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  407de8:	cbnz	x21, 407dbc <ferror@plt+0x553c>
  407dec:	cbnz	x20, 407d38 <ferror@plt+0x54b8>
  407df0:	ldp	x19, x20, [sp, #16]
  407df4:	ldp	x21, x22, [sp, #32]
  407df8:	ldp	x29, x30, [sp], #48
  407dfc:	ret
  407e00:	ret
  407e04:	nop
  407e08:	stp	x29, x30, [sp, #-96]!
  407e0c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407e10:	add	x0, x0, #0x558
  407e14:	mov	x29, sp
  407e18:	bl	4027d0 <getenv@plt>
  407e1c:	cbz	x0, 407f74 <ferror@plt+0x56f4>
  407e20:	str	x27, [sp, #80]
  407e24:	mov	x27, x0
  407e28:	ldrb	w1, [x0]
  407e2c:	mov	w0, #0x0                   	// #0
  407e30:	cbz	w1, 407fb8 <ferror@plt+0x5738>
  407e34:	stp	x21, x22, [sp, #32]
  407e38:	mov	x21, x27
  407e3c:	stp	x25, x26, [sp, #64]
  407e40:	adrp	x25, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407e44:	adrp	x26, 46e000 <_obstack_memory_used@@Base+0x116d8>
  407e48:	add	x25, x25, #0x350
  407e4c:	add	x26, x26, #0x568
  407e50:	stp	x19, x20, [sp, #16]
  407e54:	mov	x20, #0x0                   	// #0
  407e58:	stp	x23, x24, [sp, #48]
  407e5c:	mov	x24, #0x0                   	// #0
  407e60:	mov	x23, #0x0                   	// #0
  407e64:	nop
  407e68:	ldrb	w22, [x21]
  407e6c:	cmp	w22, #0x3a
  407e70:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  407e74:	b.eq	407eb0 <ferror@plt+0x5630>  // b.none
  407e78:	cmp	w22, #0x3d
  407e7c:	b.eq	407f80 <ferror@plt+0x5700>  // b.none
  407e80:	cbz	x23, 407e9c <ferror@plt+0x561c>
  407e84:	cmp	w22, #0x3b
  407e88:	b.eq	407e9c <ferror@plt+0x561c>  // b.none
  407e8c:	sub	w22, w22, #0x30
  407e90:	and	w22, w22, #0xff
  407e94:	cmp	w22, #0x9
  407e98:	b.hi	407f60 <ferror@plt+0x56e0>  // b.pmore
  407e9c:	ldrb	w22, [x21, #1]
  407ea0:	add	x21, x21, #0x1
  407ea4:	cmp	w22, #0x3a
  407ea8:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  407eac:	b.ne	407e78 <ferror@plt+0x55f8>  // b.any
  407eb0:	ldr	x0, [x25]
  407eb4:	cbz	x23, 407f9c <ferror@plt+0x571c>
  407eb8:	sub	x24, x21, x23
  407ebc:	cbz	x0, 407fb0 <ferror@plt+0x5730>
  407ec0:	mov	x19, x25
  407ec4:	b	407ed0 <ferror@plt+0x5650>
  407ec8:	ldr	x0, [x19, #24]!
  407ecc:	cbz	x0, 407eec <ferror@plt+0x566c>
  407ed0:	ldrb	w2, [x19, #16]
  407ed4:	cmp	x2, x20
  407ed8:	b.ne	407ec8 <ferror@plt+0x5648>  // b.any
  407edc:	mov	x2, x20
  407ee0:	mov	x1, x27
  407ee4:	bl	402590 <memcmp@plt>
  407ee8:	cbnz	w0, 407ec8 <ferror@plt+0x5648>
  407eec:	ldr	x0, [x19, #8]
  407ef0:	cmp	x0, #0x0
  407ef4:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  407ef8:	b.eq	407f4c <ferror@plt+0x56cc>  // b.none
  407efc:	ldrb	w1, [x19, #17]
  407f00:	cbnz	w1, 407fa8 <ferror@plt+0x5728>
  407f04:	add	x0, x24, #0x7
  407f08:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  407f0c:	mov	w3, #0x5b1b                	// #23323
  407f10:	mov	x22, x0
  407f14:	strh	w3, [x0], #2
  407f18:	mov	x1, x23
  407f1c:	mov	x2, x24
  407f20:	bl	402220 <memcpy@plt>
  407f24:	str	x22, [x19, #8]
  407f28:	add	x0, x24, #0x2
  407f2c:	ldr	w4, [x26]
  407f30:	add	x2, x22, x0
  407f34:	ldrb	w3, [x26, #4]
  407f38:	mov	w1, #0x1                   	// #1
  407f3c:	strb	w1, [x19, #17]
  407f40:	str	w4, [x22, x0]
  407f44:	strb	w3, [x2, #4]
  407f48:	ldrb	w22, [x21]
  407f4c:	cbz	w22, 407f60 <ferror@plt+0x56e0>
  407f50:	add	x21, x21, #0x1
  407f54:	mov	x23, #0x0                   	// #0
  407f58:	mov	x27, x21
  407f5c:	b	407e68 <ferror@plt+0x55e8>
  407f60:	ldp	x19, x20, [sp, #16]
  407f64:	ldp	x21, x22, [sp, #32]
  407f68:	ldp	x23, x24, [sp, #48]
  407f6c:	ldp	x25, x26, [sp, #64]
  407f70:	ldr	x27, [sp, #80]
  407f74:	mov	w0, #0x1                   	// #1
  407f78:	ldp	x29, x30, [sp], #96
  407f7c:	ret
  407f80:	cmp	x23, #0x0
  407f84:	ccmp	x21, x27, #0x4, eq  // eq = none
  407f88:	b.eq	407f60 <ferror@plt+0x56e0>  // b.none
  407f8c:	add	x23, x21, #0x1
  407f90:	sub	x20, x21, x27
  407f94:	mov	x21, x23
  407f98:	b	407e68 <ferror@plt+0x55e8>
  407f9c:	sub	x20, x21, x27
  407fa0:	cbnz	x0, 407ec0 <ferror@plt+0x5640>
  407fa4:	b	407f4c <ferror@plt+0x56cc>
  407fa8:	bl	402640 <free@plt>
  407fac:	b	407f04 <ferror@plt+0x5684>
  407fb0:	mov	x19, x25
  407fb4:	b	407eec <ferror@plt+0x566c>
  407fb8:	ldr	x27, [sp, #80]
  407fbc:	ldp	x29, x30, [sp], #96
  407fc0:	ret
  407fc4:	nop
  407fc8:	tst	w0, #0xff
  407fcc:	b.eq	40804c <ferror@plt+0x57cc>  // b.none
  407fd0:	stp	x29, x30, [sp, #-48]!
  407fd4:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  407fd8:	mov	x29, sp
  407fdc:	stp	x19, x20, [sp, #16]
  407fe0:	add	x19, x0, #0x350
  407fe4:	mov	x20, x2
  407fe8:	ldr	x0, [x0, #848]
  407fec:	str	x21, [sp, #32]
  407ff0:	mov	x21, x1
  407ff4:	cbnz	x0, 408004 <ferror@plt+0x5784>
  407ff8:	b	408034 <ferror@plt+0x57b4>
  407ffc:	ldr	x0, [x19, #24]!
  408000:	cbz	x0, 408034 <ferror@plt+0x57b4>
  408004:	ldrb	w3, [x19, #16]
  408008:	cmp	x3, x20
  40800c:	b.ne	407ffc <ferror@plt+0x577c>  // b.any
  408010:	mov	x2, x20
  408014:	mov	x1, x21
  408018:	bl	402590 <memcmp@plt>
  40801c:	cbnz	w0, 407ffc <ferror@plt+0x577c>
  408020:	ldr	x0, [x19, #8]
  408024:	ldp	x19, x20, [sp, #16]
  408028:	ldr	x21, [sp, #32]
  40802c:	ldp	x29, x30, [sp], #48
  408030:	ret
  408034:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408038:	add	x0, x0, #0x148
  40803c:	ldp	x19, x20, [sp, #16]
  408040:	ldr	x21, [sp, #32]
  408044:	ldp	x29, x30, [sp], #48
  408048:	ret
  40804c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408050:	add	x0, x0, #0x148
  408054:	ret
  408058:	tst	w0, #0xff
  40805c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408060:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408064:	add	x1, x1, #0x148
  408068:	add	x0, x0, #0x570
  40806c:	csel	x0, x0, x1, ne  // ne = any
  408070:	ret
  408074:	nop
  408078:	cmp	w0, #0x1
  40807c:	b.eq	4080f0 <ferror@plt+0x5870>  // b.none
  408080:	stp	x29, x30, [sp, #-32]!
  408084:	cmp	w0, #0x2
  408088:	mov	x29, sp
  40808c:	str	x19, [sp, #16]
  408090:	mov	w19, w0
  408094:	b.ne	4080c8 <ferror@plt+0x5848>  // b.any
  408098:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40809c:	add	x0, x0, #0x578
  4080a0:	bl	4027d0 <getenv@plt>
  4080a4:	cbz	x0, 4080b8 <ferror@plt+0x5838>
  4080a8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4080ac:	add	x1, x1, #0x580
  4080b0:	bl	4025d0 <strcmp@plt>
  4080b4:	cbnz	w0, 4080dc <ferror@plt+0x585c>
  4080b8:	mov	w0, #0x0                   	// #0
  4080bc:	ldr	x19, [sp, #16]
  4080c0:	ldp	x29, x30, [sp], #32
  4080c4:	ret
  4080c8:	mov	w0, #0x0                   	// #0
  4080cc:	cbnz	w19, 4080f4 <ferror@plt+0x5874>
  4080d0:	ldr	x19, [sp, #16]
  4080d4:	ldp	x29, x30, [sp], #32
  4080d8:	ret
  4080dc:	mov	w0, w19
  4080e0:	bl	402720 <isatty@plt>
  4080e4:	cbz	w0, 4080b8 <ferror@plt+0x5838>
  4080e8:	ldr	x19, [sp, #16]
  4080ec:	ldp	x29, x30, [sp], #32
  4080f0:	b	407e08 <ferror@plt+0x5588>
  4080f4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4080f8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4080fc:	add	x2, x2, #0x588
  408100:	add	x0, x0, #0x598
  408104:	mov	w1, #0xec                  	// #236
  408108:	bl	4028b0 <ferror@plt+0x30>
  40810c:	nop
  408110:	ldr	x2, [x0]
  408114:	ldr	x0, [x1]
  408118:	ldr	w1, [x2]
  40811c:	ldr	w0, [x0]
  408120:	sub	w0, w1, w0
  408124:	ret
  408128:	stp	x29, x30, [sp, #-64]!
  40812c:	mov	x29, sp
  408130:	stp	x19, x20, [sp, #16]
  408134:	mov	w19, w0
  408138:	mov	w20, w1
  40813c:	stp	x21, x22, [sp, #32]
  408140:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  408144:	stp	x23, x24, [sp, #48]
  408148:	tbnz	w19, #31, 4081cc <ferror@plt+0x594c>
  40814c:	nop
  408150:	tbnz	w20, #31, 4081e0 <ferror@plt+0x5960>
  408154:	cmp	w19, #0x1
  408158:	mov	w1, w19
  40815c:	cset	w23, ls  // ls = plast
  408160:	cmp	w20, #0x1
  408164:	cset	w0, ls  // ls = plast
  408168:	orr	w23, w23, w0
  40816c:	cbnz	w23, 40820c <ferror@plt+0x598c>
  408170:	ldr	x0, [x22, #1888]
  408174:	bl	431a80 <ferror@plt+0x2f200>
  408178:	mov	x21, x0
  40817c:	ldr	x0, [x22, #1888]
  408180:	mov	w1, w20
  408184:	bl	431a80 <ferror@plt+0x2f200>
  408188:	mov	x24, x0
  40818c:	cmp	x21, x0
  408190:	b.ne	40822c <ferror@plt+0x59ac>  // b.any
  408194:	bl	4320d0 <ferror@plt+0x2f850>
  408198:	tst	w0, #0xff
  40819c:	mov	w2, w19
  4081a0:	mov	x1, x21
  4081a4:	b.eq	408260 <ferror@plt+0x59e0>  // b.none
  4081a8:	ldr	x0, [x22, #1888]
  4081ac:	bl	4320f0 <ferror@plt+0x2f870>
  4081b0:	mov	w19, w0
  4081b4:	ldr	x0, [x22, #1888]
  4081b8:	mov	w2, w20
  4081bc:	mov	x1, x21
  4081c0:	bl	4320f0 <ferror@plt+0x2f870>
  4081c4:	mov	w20, w0
  4081c8:	tbz	w19, #31, 408150 <ferror@plt+0x58d0>
  4081cc:	ldr	x0, [x22, #1888]
  4081d0:	mov	w1, w19
  4081d4:	bl	431068 <ferror@plt+0x2e7e8>
  4081d8:	mov	w19, w0
  4081dc:	tbz	w20, #31, 408154 <ferror@plt+0x58d4>
  4081e0:	ldr	x0, [x22, #1888]
  4081e4:	mov	w1, w20
  4081e8:	bl	431068 <ferror@plt+0x2e7e8>
  4081ec:	mov	w20, w0
  4081f0:	cmp	w19, #0x1
  4081f4:	mov	w1, w19
  4081f8:	cset	w23, ls  // ls = plast
  4081fc:	cmp	w20, #0x1
  408200:	cset	w0, ls  // ls = plast
  408204:	orr	w23, w23, w0
  408208:	cbz	w23, 408170 <ferror@plt+0x58f0>
  40820c:	cmp	w19, w20
  408210:	cset	w23, eq  // eq = none
  408214:	mov	w0, w23
  408218:	ldp	x19, x20, [sp, #16]
  40821c:	ldp	x21, x22, [sp, #32]
  408220:	ldp	x23, x24, [sp, #48]
  408224:	ldp	x29, x30, [sp], #64
  408228:	ret
  40822c:	mov	x0, x21
  408230:	bl	4320d0 <ferror@plt+0x2f850>
  408234:	tst	w0, #0xff
  408238:	b.ne	408214 <ferror@plt+0x5994>  // b.any
  40823c:	mov	x0, x24
  408240:	bl	4320d0 <ferror@plt+0x2f850>
  408244:	tst	w0, #0xff
  408248:	b.ne	408214 <ferror@plt+0x5994>  // b.any
  40824c:	ldr	x1, [x21, #8]
  408250:	ldr	x0, [x24, #8]
  408254:	cmp	x1, x0
  408258:	cset	w23, eq  // eq = none
  40825c:	b	408214 <ferror@plt+0x5994>
  408260:	mov	w23, #0x1                   	// #1
  408264:	mov	w0, w23
  408268:	ldp	x19, x20, [sp, #16]
  40826c:	ldp	x21, x22, [sp, #32]
  408270:	ldp	x23, x24, [sp, #48]
  408274:	ldp	x29, x30, [sp], #64
  408278:	ret
  40827c:	nop
  408280:	ldr	x7, [x0, #120]
  408284:	cbz	x7, 408324 <ferror@plt+0x5aa4>
  408288:	ldr	w9, [x7, #4]
  40828c:	add	x0, x7, #0x8
  408290:	mov	w8, #0x0                   	// #0
  408294:	cmp	w8, w9
  408298:	b.eq	408324 <ferror@plt+0x5aa4>  // b.none
  40829c:	ldr	w11, [x0, #16]
  4082a0:	cmp	w11, #0x2
  4082a4:	b.eq	40832c <ferror@plt+0x5aac>  // b.none
  4082a8:	stp	x29, x30, [sp, #-16]!
  4082ac:	mov	x29, sp
  4082b0:	ldr	w10, [x0]
  4082b4:	ldr	w12, [x0, #8]
  4082b8:	cmp	w10, w12
  4082bc:	b.hi	4083f0 <ferror@plt+0x5b70>  // b.pmore
  4082c0:	cmp	w1, w10
  4082c4:	b.cc	4082ec <ferror@plt+0x5a6c>  // b.lo, b.ul, b.last
  4082c8:	b.eq	408338 <ferror@plt+0x5ab8>  // b.none
  4082cc:	cmp	w1, w12
  4082d0:	b.hi	4082ec <ferror@plt+0x5a6c>  // b.pmore
  4082d4:	b.cc	40839c <ferror@plt+0x5b1c>  // b.lo, b.ul, b.last
  4082d8:	b.ne	4083d8 <ferror@plt+0x5b58>  // b.any
  4082dc:	ldr	w10, [x0, #12]
  4082e0:	cmp	w2, w10
  4082e4:	cset	w10, le
  4082e8:	cbnz	w10, 40834c <ferror@plt+0x5acc>
  4082ec:	add	w8, w8, #0x1
  4082f0:	add	x0, x0, #0x28
  4082f4:	cmp	w8, w9
  4082f8:	b.eq	408318 <ferror@plt+0x5a98>  // b.none
  4082fc:	ldr	w11, [x0, #16]
  408300:	cmp	w11, #0x2
  408304:	b.ne	4082b0 <ferror@plt+0x5a30>  // b.any
  408308:	add	w8, w8, #0x1
  40830c:	add	x0, x0, #0x28
  408310:	cmp	w8, w9
  408314:	b.ne	4082fc <ferror@plt+0x5a7c>  // b.any
  408318:	mov	w0, #0x0                   	// #0
  40831c:	ldp	x29, x30, [sp], #16
  408320:	ret
  408324:	mov	w0, #0x0                   	// #0
  408328:	ret
  40832c:	add	w8, w8, #0x1
  408330:	add	x0, x0, #0x28
  408334:	b	408294 <ferror@plt+0x5a14>
  408338:	ldr	w10, [x0, #4]
  40833c:	cmp	w2, w10
  408340:	b.lt	4082ec <ferror@plt+0x5a6c>  // b.tstop
  408344:	cmp	w1, w12
  408348:	b.cs	408380 <ferror@plt+0x5b00>  // b.hs, b.nlast
  40834c:	str	w8, [x5]
  408350:	strb	wzr, [x6]
  408354:	cbnz	w11, 408370 <ferror@plt+0x5af0>
  408358:	ubfiz	x0, x8, #2, #32
  40835c:	add	x8, x0, w8, uxtw
  408360:	add	x7, x7, x8, lsl #3
  408364:	ldr	w0, [x7, #28]
  408368:	cmp	w1, w0
  40836c:	b.eq	4083bc <ferror@plt+0x5b3c>  // b.none
  408370:	cmp	w2, w3
  408374:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  408378:	cset	w0, le
  40837c:	b	40831c <ferror@plt+0x5a9c>
  408380:	b.eq	4082dc <ferror@plt+0x5a5c>  // b.none
  408384:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408388:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40838c:	add	x2, x2, #0x6d0
  408390:	add	x0, x0, #0x6e0
  408394:	mov	w1, #0x1f3                 	// #499
  408398:	bl	4028b0 <ferror@plt+0x30>
  40839c:	cmp	w10, w12
  4083a0:	b.ne	40834c <ferror@plt+0x5acc>  // b.any
  4083a4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4083a8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4083ac:	add	x2, x2, #0x6d0
  4083b0:	add	x0, x0, #0x6e0
  4083b4:	mov	w1, #0x207                 	// #519
  4083b8:	bl	4028b0 <ferror@plt+0x30>
  4083bc:	ldr	w0, [x7, #32]
  4083c0:	cmp	w2, w0
  4083c4:	b.ne	408370 <ferror@plt+0x5af0>  // b.any
  4083c8:	mov	w1, #0x1                   	// #1
  4083cc:	mov	w0, #0x1                   	// #1
  4083d0:	strb	w1, [x6]
  4083d4:	b	40831c <ferror@plt+0x5a9c>
  4083d8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4083dc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4083e0:	add	x2, x2, #0x6d0
  4083e4:	add	x0, x0, #0x6e0
  4083e8:	mov	w1, #0x20b                 	// #523
  4083ec:	bl	4028b0 <ferror@plt+0x30>
  4083f0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4083f4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4083f8:	add	x2, x2, #0x6d0
  4083fc:	add	x0, x0, #0x6e0
  408400:	mov	w1, #0x1d8                 	// #472
  408404:	bl	4028b0 <ferror@plt+0x30>
  408408:	ldr	w2, [x0]
  40840c:	ldr	w3, [x1]
  408410:	subs	x2, x2, x3
  408414:	b.ne	408430 <ferror@plt+0x5bb0>  // b.any
  408418:	ldr	w2, [x0, #4]
  40841c:	mov	w0, #0x0                   	// #0
  408420:	ldr	w1, [x1, #4]
  408424:	subs	x2, x2, x1
  408428:	b.ne	408430 <ferror@plt+0x5bb0>  // b.any
  40842c:	ret
  408430:	cmp	x2, #0x1
  408434:	mov	w0, #0x1                   	// #1
  408438:	cneg	w0, w0, lt  // lt = tstop
  40843c:	ret
  408440:	ldr	w2, [x0, #4]
  408444:	ldr	w3, [x1, #4]
  408448:	subs	x2, x2, x3
  40844c:	b.ne	408468 <ferror@plt+0x5be8>  // b.any
  408450:	ldr	w2, [x0]
  408454:	mov	w0, #0x0                   	// #0
  408458:	ldr	w1, [x1]
  40845c:	subs	x2, x2, x1
  408460:	b.ne	408468 <ferror@plt+0x5be8>  // b.any
  408464:	ret
  408468:	cmp	x2, #0x1
  40846c:	mov	w0, #0x1                   	// #1
  408470:	cneg	w0, w0, lt  // lt = tstop
  408474:	ret
  408478:	stp	x29, x30, [sp, #-48]!
  40847c:	mov	x29, sp
  408480:	stp	x19, x20, [sp, #16]
  408484:	mov	x20, x0
  408488:	ldr	w0, [x0, #12]
  40848c:	cmp	w0, w1
  408490:	b.eq	4084c0 <ferror@plt+0x5c40>  // b.none
  408494:	mov	w19, w1
  408498:	cmn	w0, #0x1
  40849c:	b.ne	408514 <ferror@plt+0x5c94>  // b.any
  4084a0:	str	w19, [x20, #12]
  4084a4:	cmp	w19, #0x0
  4084a8:	cbz	w19, 408580 <ferror@plt+0x5d00>
  4084ac:	b.gt	4084cc <ferror@plt+0x5c4c>
  4084b0:	cmn	w19, #0x2
  4084b4:	b.eq	408568 <ferror@plt+0x5ce8>  // b.none
  4084b8:	cmn	w19, #0x1
  4084bc:	b.ne	4084f4 <ferror@plt+0x5c74>  // b.any
  4084c0:	ldp	x19, x20, [sp, #16]
  4084c4:	ldp	x29, x30, [sp], #48
  4084c8:	ret
  4084cc:	cmp	w19, #0x1
  4084d0:	b.eq	408528 <ferror@plt+0x5ca8>  // b.none
  4084d4:	cmp	w19, #0x2
  4084d8:	b.ne	408540 <ferror@plt+0x5cc0>  // b.any
  4084dc:	ldr	x0, [x20]
  4084e0:	ldr	x1, [x20, #24]
  4084e4:	ldp	x19, x20, [sp, #16]
  4084e8:	ldp	x29, x30, [sp], #48
  4084ec:	ldr	x0, [x0]
  4084f0:	b	410da0 <ferror@plt+0xe520>
  4084f4:	cmn	w19, #0x3
  4084f8:	b.ne	408540 <ferror@plt+0x5cc0>  // b.any
  4084fc:	ldr	x0, [x20]
  408500:	ldr	x1, [x20, #40]
  408504:	ldp	x19, x20, [sp, #16]
  408508:	ldp	x29, x30, [sp], #48
  40850c:	ldr	x0, [x0]
  408510:	b	410da0 <ferror@plt+0xe520>
  408514:	ldr	x0, [x20]
  408518:	ldr	x1, [x20, #48]
  40851c:	ldr	x0, [x0]
  408520:	bl	410da0 <ferror@plt+0xe520>
  408524:	b	4084a0 <ferror@plt+0x5c20>
  408528:	ldr	x0, [x20]
  40852c:	ldr	x1, [x20, #16]
  408530:	ldp	x19, x20, [sp, #16]
  408534:	ldp	x29, x30, [sp], #48
  408538:	ldr	x0, [x0]
  40853c:	b	410da0 <ferror@plt+0xe520>
  408540:	cmp	w19, #0x2
  408544:	b.le	4085c8 <ferror@plt+0x5d48>
  408548:	ldr	x0, [x20]
  40854c:	tst	x19, #0x1
  408550:	ldp	x2, x1, [x20, #16]
  408554:	ldp	x19, x20, [sp, #16]
  408558:	ldp	x29, x30, [sp], #48
  40855c:	ldr	x0, [x0]
  408560:	csel	x1, x2, x1, ne  // ne = any
  408564:	b	410da0 <ferror@plt+0xe520>
  408568:	ldr	x0, [x20]
  40856c:	ldr	x1, [x20, #32]
  408570:	ldp	x19, x20, [sp, #16]
  408574:	ldp	x29, x30, [sp], #48
  408578:	ldr	x0, [x0]
  40857c:	b	410da0 <ferror@plt+0xe520>
  408580:	ldr	x1, [x20]
  408584:	ldr	w0, [x20, #8]
  408588:	ldr	x20, [x1]
  40858c:	str	x21, [sp, #32]
  408590:	ldrb	w21, [x20, #67]
  408594:	bl	404c80 <ferror@plt+0x2400>
  408598:	mov	x19, x0
  40859c:	bl	402270 <strlen@plt>
  4085a0:	mov	x1, x19
  4085a4:	mov	x2, x0
  4085a8:	mov	w0, w21
  4085ac:	bl	407fc8 <ferror@plt+0x5748>
  4085b0:	mov	x1, x0
  4085b4:	mov	x0, x20
  4085b8:	ldp	x19, x20, [sp, #16]
  4085bc:	ldr	x21, [sp, #32]
  4085c0:	ldp	x29, x30, [sp], #48
  4085c4:	b	410da0 <ferror@plt+0xe520>
  4085c8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4085cc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4085d0:	add	x2, x2, #0x718
  4085d4:	add	x0, x0, #0x6e0
  4085d8:	mov	w1, #0x17f                 	// #383
  4085dc:	str	x21, [sp, #32]
  4085e0:	bl	4028b0 <ferror@plt+0x30>
  4085e4:	nop
  4085e8:	stp	x29, x30, [sp, #-224]!
  4085ec:	mov	x29, sp
  4085f0:	stp	x19, x20, [sp, #16]
  4085f4:	stp	x21, x22, [sp, #32]
  4085f8:	stp	x23, x24, [sp, #48]
  4085fc:	stp	x25, x26, [sp, #64]
  408600:	cbz	x1, 408a10 <ferror@plt+0x6190>
  408604:	and	w24, w3, #0xff
  408608:	adrp	x3, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40860c:	mov	x21, x0
  408610:	mov	x19, x1
  408614:	ldr	x0, [x3, #1888]
  408618:	mov	w22, w2
  40861c:	ldr	w1, [x1]
  408620:	bl	431d88 <ferror@plt+0x2f508>
  408624:	mov	x20, x0
  408628:	add	x8, sp, #0x80
  40862c:	lsr	x23, x0, #32
  408630:	mov	w1, #0x1                   	// #1
  408634:	bl	415f10 <ferror@plt+0x13690>
  408638:	mov	w0, w23
  40863c:	add	x8, sp, #0xa0
  408640:	mov	w1, #0x2                   	// #2
  408644:	ldr	w25, [sp, #136]
  408648:	bl	415f10 <ferror@plt+0x13690>
  40864c:	ldr	w26, [sp, #168]
  408650:	ldr	w0, [x19]
  408654:	mov	w1, #0x0                   	// #0
  408658:	add	x8, sp, #0xc0
  40865c:	bl	415f10 <ferror@plt+0x13690>
  408660:	ldr	x3, [x21, #24]
  408664:	ldr	x1, [sp, #128]
  408668:	cmp	x1, x3
  40866c:	b.eq	40868c <ferror@plt+0x5e0c>  // b.none
  408670:	mov	w0, #0x0                   	// #0
  408674:	ldp	x19, x20, [sp, #16]
  408678:	ldp	x21, x22, [sp, #32]
  40867c:	ldp	x23, x24, [sp, #48]
  408680:	ldp	x25, x26, [sp, #64]
  408684:	ldp	x29, x30, [sp], #224
  408688:	ret
  40868c:	ldr	x0, [sp, #160]
  408690:	cmp	x1, x0
  408694:	b.ne	408670 <ferror@plt+0x5df0>  // b.any
  408698:	stp	x27, x28, [sp, #80]
  40869c:	ldr	w27, [x19, #4]
  4086a0:	ldr	w28, [sp, #200]
  4086a4:	cbz	w27, 408778 <ferror@plt+0x5ef8>
  4086a8:	ldr	x0, [x19, #8]
  4086ac:	str	x0, [sp, #104]
  4086b0:	ldr	w7, [sp, #204]
  4086b4:	cmp	w25, w26
  4086b8:	mov	w2, w28
  4086bc:	b.le	408858 <ferror@plt+0x5fd8>
  4086c0:	ldr	x0, [x21, #120]
  4086c4:	cbz	x0, 4088e4 <ferror@plt+0x6064>
  4086c8:	ldr	w1, [x0, #4]
  4086cc:	cbnz	w1, 408770 <ferror@plt+0x5ef0>
  4086d0:	cbz	w24, 4087b0 <ferror@plt+0x5f30>
  4086d4:	mov	w9, w28
  4086d8:	mov	w20, w7
  4086dc:	mov	w24, w28
  4086e0:	mov	w23, w7
  4086e4:	ldr	x0, [x21, #136]
  4086e8:	cbz	x0, 408770 <ferror@plt+0x5ef0>
  4086ec:	add	x5, x0, #0x8
  4086f0:	ldr	w4, [x0, #4]
  4086f4:	mov	x0, x5
  4086f8:	mov	w1, #0x0                   	// #0
  4086fc:	cmp	w4, w1
  408700:	b.le	408770 <ferror@plt+0x5ef0>
  408704:	ldr	w2, [x0]
  408708:	cmp	w2, w25
  40870c:	b.hi	408818 <ferror@plt+0x5f98>  // b.pmore
  408710:	ldr	w2, [x0, #4]
  408714:	cmp	w2, w25
  408718:	b.cc	408818 <ferror@plt+0x5f98>  // b.lo, b.ul, b.last
  40871c:	mov	x0, x5
  408720:	mov	w1, #0x0                   	// #0
  408724:	ldr	w2, [x0]
  408728:	cmp	w2, w26
  40872c:	b.hi	408824 <ferror@plt+0x5fa4>  // b.pmore
  408730:	ldr	w2, [x0, #4]
  408734:	cmp	w2, w26
  408738:	b.cc	408824 <ferror@plt+0x5fa4>  // b.lo, b.ul, b.last
  40873c:	ldr	w0, [x19, #4]
  408740:	cbnz	w0, 4088ac <ferror@plt+0x602c>
  408744:	mov	w0, #0x0                   	// #0
  408748:	ldr	w1, [x5]
  40874c:	cmp	w28, w1
  408750:	b.cc	408760 <ferror@plt+0x5ee0>  // b.lo, b.ul, b.last
  408754:	ldr	w1, [x5, #4]
  408758:	cmp	w28, w1
  40875c:	b.ls	4088ac <ferror@plt+0x602c>  // b.plast
  408760:	add	w0, w0, #0x1
  408764:	add	x5, x5, #0x8
  408768:	cmp	w4, w0
  40876c:	b.gt	408748 <ferror@plt+0x5ec8>
  408770:	ldp	x27, x28, [sp, #80]
  408774:	b	408670 <ferror@plt+0x5df0>
  408778:	ldr	x0, [sp, #192]
  40877c:	cmp	x1, x0
  408780:	b.ne	408770 <ferror@plt+0x5ef0>  // b.any
  408784:	ldr	x0, [x21, #120]
  408788:	cbz	x0, 4086a8 <ferror@plt+0x5e28>
  40878c:	ldr	w27, [x0, #4]
  408790:	cbz	w27, 40883c <ferror@plt+0x5fbc>
  408794:	ldr	w0, [x19]
  408798:	ldr	w1, [x21, #16]
  40879c:	bl	408128 <ferror@plt+0x58a8>
  4087a0:	tst	w0, #0xff
  4087a4:	b.eq	408770 <ferror@plt+0x5ef0>  // b.none
  4087a8:	ldr	w27, [x19, #4]
  4087ac:	b	4086a8 <ferror@plt+0x5e28>
  4087b0:	mov	x19, x0
  4087b4:	mov	w9, w28
  4087b8:	mov	w20, w7
  4087bc:	mov	w24, w28
  4087c0:	mov	w23, w7
  4087c4:	ldp	w0, w25, [x19]
  4087c8:	add	w26, w25, #0x1
  4087cc:	ubfx	x0, x0, #0, #31
  4087d0:	mov	w2, w26
  4087d4:	cmp	w0, w25
  4087d8:	b.eq	408904 <ferror@plt+0x6084>  // b.none
  4087dc:	mov	w1, #0x28                  	// #40
  4087e0:	mov	x4, #0x8                   	// #8
  4087e4:	str	w2, [x19, #4]
  4087e8:	mov	w0, #0x1                   	// #1
  4087ec:	umaddl	x25, w25, w1, x4
  4087f0:	ldr	x2, [sp, #104]
  4087f4:	add	x1, x19, x25
  4087f8:	str	w24, [x19, x25]
  4087fc:	stp	w23, w9, [x1, #4]
  408800:	stp	w20, w27, [x1, #12]
  408804:	stp	w28, w7, [x1, #20]
  408808:	str	w22, [x1, #28]
  40880c:	str	x2, [x1, #32]
  408810:	ldp	x27, x28, [sp, #80]
  408814:	b	408674 <ferror@plt+0x5df4>
  408818:	add	w1, w1, #0x1
  40881c:	add	x0, x0, #0x8
  408820:	b	4086fc <ferror@plt+0x5e7c>
  408824:	add	w1, w1, #0x1
  408828:	add	x0, x0, #0x8
  40882c:	cmp	w4, w1
  408830:	b.gt	408724 <ferror@plt+0x5ea4>
  408834:	ldp	x27, x28, [sp, #80]
  408838:	b	408670 <ferror@plt+0x5df0>
  40883c:	ldr	x1, [x19, #8]
  408840:	str	x1, [sp, #104]
  408844:	ldr	w7, [sp, #204]
  408848:	cmp	w25, w26
  40884c:	mov	w2, w28
  408850:	b.gt	4086c8 <ferror@plt+0x5e48>
  408854:	nop
  408858:	ldr	w1, [x21, #16]
  40885c:	mov	w0, w20
  408860:	stp	w7, w2, [sp, #116]
  408864:	ldr	w2, [sp, #140]
  408868:	ldr	w20, [sp, #172]
  40886c:	str	w2, [sp, #124]
  408870:	bl	408128 <ferror@plt+0x58a8>
  408874:	tst	w0, #0xff
  408878:	ldp	w7, w2, [sp, #116]
  40887c:	b.eq	4086c0 <ferror@plt+0x5e40>  // b.none
  408880:	ldr	w1, [x21, #16]
  408884:	mov	w0, w23
  408888:	stp	w7, w2, [sp, #116]
  40888c:	bl	408128 <ferror@plt+0x58a8>
  408890:	tst	w0, #0xff
  408894:	ldr	w7, [sp, #116]
  408898:	b.ne	4089fc <ferror@plt+0x617c>  // b.any
  40889c:	ldr	w2, [sp, #120]
  4088a0:	b	4086c0 <ferror@plt+0x5e40>
  4088a4:	mov	w24, w2
  4088a8:	mov	w7, w0
  4088ac:	ldr	x19, [x21, #120]
  4088b0:	cbnz	x19, 4087c4 <ferror@plt+0x5f44>
  4088b4:	mov	x1, #0xa8                  	// #168
  4088b8:	mov	x0, #0x0                   	// #0
  4088bc:	stp	w7, w9, [sp, #116]
  4088c0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4088c4:	mov	x19, x0
  4088c8:	str	x19, [x21, #120]
  4088cc:	mov	w25, #0x0                   	// #0
  4088d0:	mov	x0, #0x4                   	// #4
  4088d4:	ldp	w7, w9, [sp, #116]
  4088d8:	add	w2, w25, #0x1
  4088dc:	str	x0, [x19]
  4088e0:	b	4087dc <ferror@plt+0x5f5c>
  4088e4:	mov	w0, w7
  4088e8:	mov	w20, w7
  4088ec:	mov	w9, w28
  4088f0:	mov	w23, w7
  4088f4:	cbz	w24, 4088a4 <ferror@plt+0x6024>
  4088f8:	mov	w24, w2
  4088fc:	mov	w7, w0
  408900:	b	4086e4 <ferror@plt+0x5e64>
  408904:	ldrsb	w0, [x19, #3]
  408908:	tbnz	w0, #31, 408960 <ferror@plt+0x60e0>
  40890c:	mov	w1, w26
  408910:	mov	w0, w25
  408914:	stp	w7, w9, [sp, #116]
  408918:	bl	412508 <ferror@plt+0xfc88>
  40891c:	mov	w1, #0x28                  	// #40
  408920:	mov	x4, #0x8                   	// #8
  408924:	and	w26, w0, #0x7fffffff
  408928:	mov	w25, #0x0                   	// #0
  40892c:	umaddl	x1, w0, w1, x4
  408930:	ldr	x0, [x21, #120]
  408934:	ldp	w7, w9, [sp, #116]
  408938:	cbz	x0, 408940 <ferror@plt+0x60c0>
  40893c:	ldr	w25, [x0, #4]
  408940:	stp	w7, w9, [sp, #116]
  408944:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  408948:	str	x0, [x21, #120]
  40894c:	mov	x19, x0
  408950:	ldp	w7, w9, [sp, #116]
  408954:	add	w2, w25, #0x1
  408958:	stp	w26, w25, [x0]
  40895c:	b	4087dc <ferror@plt+0x5f5c>
  408960:	cmp	w26, #0x4
  408964:	mov	w2, #0x4                   	// #4
  408968:	csel	w2, w26, w2, cs  // cs = hs, nlast
  40896c:	mov	w4, #0x28                  	// #40
  408970:	mov	x3, #0x8                   	// #8
  408974:	str	xzr, [x21, #120]
  408978:	mov	x0, #0x0                   	// #0
  40897c:	stp	w2, w7, [sp, #116]
  408980:	umaddl	x1, w2, w4, x3
  408984:	str	w9, [sp, #124]
  408988:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40898c:	str	x0, [x21, #120]
  408990:	ldp	w2, w7, [sp, #116]
  408994:	mov	w4, #0x28                  	// #40
  408998:	ldr	w9, [sp, #124]
  40899c:	mov	x3, #0x8                   	// #8
  4089a0:	and	x2, x2, #0x7fffffff
  4089a4:	str	x2, [x0]
  4089a8:	cbz	w25, 4089ec <ferror@plt+0x616c>
  4089ac:	sub	w10, w25, #0x1
  4089b0:	mov	x2, #0x30                  	// #48
  4089b4:	mov	x1, x3
  4089b8:	umaddl	x10, w10, w4, x2
  4089bc:	nop
  4089c0:	add	x8, x19, x1
  4089c4:	add	x2, x0, x1
  4089c8:	add	x1, x1, #0x28
  4089cc:	cmp	x10, x1
  4089d0:	ldp	x4, x5, [x8]
  4089d4:	stp	x4, x5, [x2]
  4089d8:	ldp	x4, x5, [x8, #16]
  4089dc:	stp	x4, x5, [x2, #16]
  4089e0:	ldr	x4, [x8, #32]
  4089e4:	str	x4, [x2, #32]
  4089e8:	b.ne	4089c0 <ferror@plt+0x6140>  // b.any
  4089ec:	mov	w2, w26
  4089f0:	mov	x19, x0
  4089f4:	str	w25, [x0, #4]
  4089f8:	b	4087dc <ferror@plt+0x5f5c>
  4089fc:	mov	w0, w7
  408a00:	mov	w9, w26
  408a04:	ldr	w7, [sp, #124]
  408a08:	mov	w2, w25
  408a0c:	b	4088f0 <ferror@plt+0x6070>
  408a10:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408a14:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408a18:	add	x2, x2, #0x728
  408a1c:	add	x0, x0, #0x6e0
  408a20:	mov	w1, #0x39f                 	// #927
  408a24:	stp	x27, x28, [sp, #80]
  408a28:	bl	4028b0 <ferror@plt+0x30>
  408a2c:	nop
  408a30:	stp	x29, x30, [sp, #-160]!
  408a34:	mov	x29, sp
  408a38:	stp	x19, x20, [sp, #16]
  408a3c:	mov	x20, x0
  408a40:	stp	x21, x22, [sp, #32]
  408a44:	mov	x22, x1
  408a48:	mov	w21, w3
  408a4c:	stp	x23, x24, [sp, #48]
  408a50:	stp	x25, x26, [sp, #64]
  408a54:	mov	x26, x2
  408a58:	stp	x27, x28, [sp, #80]
  408a5c:	ldr	x0, [x1]
  408a60:	str	d8, [sp, #96]
  408a64:	stp	x1, x0, [x20]
  408a68:	mov	x0, x2
  408a6c:	mov	w1, #0x0                   	// #0
  408a70:	bl	433938 <ferror@plt+0x310b8>
  408a74:	mov	x2, x0
  408a78:	add	x8, x20, #0x18
  408a7c:	mov	x0, x26
  408a80:	mov	w1, #0x0                   	// #0
  408a84:	ldr	w2, [x2]
  408a88:	str	w2, [x20, #16]
  408a8c:	bl	433960 <ferror@plt+0x310e0>
  408a90:	ldr	x0, [x22]
  408a94:	mov	w2, #0xffffffff            	// #-1
  408a98:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408a9c:	add	x1, x1, #0x5e8
  408aa0:	ldrb	w0, [x0, #67]
  408aa4:	str	x22, [x20, #56]
  408aa8:	stp	w21, w2, [x20, #64]
  408aac:	mov	x2, #0x6                   	// #6
  408ab0:	bl	407fc8 <ferror@plt+0x5748>
  408ab4:	str	x0, [x20, #72]
  408ab8:	ldr	x3, [x20, #56]
  408abc:	mov	x2, #0x6                   	// #6
  408ac0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408ac4:	add	x1, x1, #0x600
  408ac8:	ldr	x0, [x3]
  408acc:	ldrb	w0, [x0, #67]
  408ad0:	bl	407fc8 <ferror@plt+0x5748>
  408ad4:	str	x0, [x20, #80]
  408ad8:	ldr	x3, [x20, #56]
  408adc:	mov	x2, #0xc                   	// #12
  408ae0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408ae4:	add	x1, x1, #0x630
  408ae8:	ldr	x0, [x3]
  408aec:	ldrb	w0, [x0, #67]
  408af0:	bl	407fc8 <ferror@plt+0x5748>
  408af4:	str	x0, [x20, #88]
  408af8:	ldr	x3, [x20, #56]
  408afc:	mov	x2, #0xc                   	// #12
  408b00:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  408b04:	add	x1, x1, #0x640
  408b08:	ldr	x0, [x3]
  408b0c:	ldrb	w0, [x0, #67]
  408b10:	bl	407fc8 <ferror@plt+0x5748>
  408b14:	str	x0, [x20, #96]
  408b18:	ldr	x1, [x22]
  408b1c:	ldrb	w0, [x1, #67]
  408b20:	bl	408058 <ferror@plt+0x57d8>
  408b24:	ldr	w21, [x26, #8]
  408b28:	ldrb	w1, [x22, #223]
  408b2c:	str	x0, [x20, #104]
  408b30:	ldurh	w0, [x22, #221]
  408b34:	strh	w0, [x20, #112]
  408b38:	strb	w1, [x20, #114]
  408b3c:	str	xzr, [x20, #120]
  408b40:	cbnz	w21, 409464 <ferror@plt+0x6be4>
  408b44:	ldr	w19, [x26, #120]
  408b48:	str	xzr, [x20, #128]
  408b4c:	cbnz	w19, 409444 <ferror@plt+0x6bc4>
  408b50:	ldr	w0, [x26, #8]
  408b54:	str	xzr, [x20, #136]
  408b58:	adds	w19, w0, #0x1
  408b5c:	b.ne	409420 <ferror@plt+0x6ba0>  // b.any
  408b60:	str	xzr, [x20, #144]
  408b64:	mov	w19, #0x0                   	// #0
  408b68:	cbz	w0, 408ba0 <ferror@plt+0x6320>
  408b6c:	nop
  408b70:	mov	w1, w19
  408b74:	mov	x0, x26
  408b78:	bl	433938 <ferror@plt+0x310b8>
  408b7c:	mov	x1, x0
  408b80:	mov	w2, w19
  408b84:	mov	x0, x20
  408b88:	mov	w3, #0x0                   	// #0
  408b8c:	bl	4085e8 <ferror@plt+0x5d68>
  408b90:	ldr	w0, [x26, #8]
  408b94:	add	w19, w19, #0x1
  408b98:	cmp	w0, w19
  408b9c:	b.hi	408b70 <ferror@plt+0x62f0>  // b.pmore
  408ba0:	ldr	w0, [x26, #120]
  408ba4:	cbz	w0, 408c84 <ferror@plt+0x6404>
  408ba8:	add	x21, x26, #0x78
  408bac:	mov	w24, #0x4                   	// #4
  408bb0:	mov	w19, #0x0                   	// #0
  408bb4:	mov	x23, #0xfffffffffffffff0    	// #-16
  408bb8:	b	408bf8 <ferror@plt+0x6378>
  408bbc:	ldr	x0, [x21, #32]
  408bc0:	add	x1, x23, w19, sxtw #3
  408bc4:	add	x8, sp, #0x80
  408bc8:	add	x0, x0, x1
  408bcc:	ldr	x28, [x0]
  408bd0:	ldr	w0, [x28]
  408bd4:	bl	415ca0 <ferror@plt+0x13420>
  408bd8:	ldr	x0, [x20, #24]
  408bdc:	ldr	x1, [sp, #128]
  408be0:	cmp	x1, x0
  408be4:	b.eq	408c2c <ferror@plt+0x63ac>  // b.none
  408be8:	ldr	w0, [x26, #120]
  408bec:	add	w19, w19, #0x1
  408bf0:	cmp	w19, w0
  408bf4:	b.cs	408c84 <ferror@plt+0x6404>  // b.hs, b.nlast
  408bf8:	cmp	w19, #0x1
  408bfc:	sxtw	x0, w19
  408c00:	b.gt	408bbc <ferror@plt+0x633c>
  408c04:	add	x0, x0, #0x1
  408c08:	add	x8, sp, #0x80
  408c0c:	add	x0, x21, x0, lsl #3
  408c10:	ldr	x28, [x0]
  408c14:	ldr	w0, [x28]
  408c18:	bl	415ca0 <ferror@plt+0x13420>
  408c1c:	ldr	x0, [x20, #24]
  408c20:	ldr	x1, [sp, #128]
  408c24:	cmp	x1, x0
  408c28:	b.ne	408be8 <ferror@plt+0x6368>  // b.any
  408c2c:	ldr	w0, [x28, #4]
  408c30:	add	x8, sp, #0x80
  408c34:	bl	415ca0 <ferror@plt+0x13420>
  408c38:	ldr	x0, [x20, #24]
  408c3c:	ldr	x1, [sp, #128]
  408c40:	cmp	x1, x0
  408c44:	b.ne	408be8 <ferror@plt+0x6368>  // b.any
  408c48:	ldr	x27, [x20, #128]
  408c4c:	cbz	x27, 4098b0 <ferror@plt+0x7030>
  408c50:	ldp	w0, w25, [x27]
  408c54:	add	w3, w25, #0x1
  408c58:	ubfx	x0, x0, #0, #31
  408c5c:	mov	w1, w3
  408c60:	cmp	w0, w25
  408c64:	b.eq	409048 <ferror@plt+0x67c8>  // b.none
  408c68:	add	x2, x27, w25, uxtw #3
  408c6c:	str	w1, [x27, #4]
  408c70:	add	w19, w19, #0x1
  408c74:	ldr	w0, [x26, #120]
  408c78:	str	x28, [x2, #8]
  408c7c:	cmp	w19, w0
  408c80:	b.cc	408bf8 <ferror@plt+0x6378>  // b.lo, b.ul, b.last
  408c84:	ldr	x0, [x20, #128]
  408c88:	cbz	x0, 408c98 <ferror@plt+0x6418>
  408c8c:	ldr	w1, [x0, #4]
  408c90:	cmp	w1, #0x1
  408c94:	b.hi	40913c <ferror@plt+0x68bc>  // b.pmore
  408c98:	ldr	x0, [x20, #136]
  408c9c:	cbz	x0, 408ca8 <ferror@plt+0x6428>
  408ca0:	ldr	w0, [x0, #4]
  408ca4:	cbnz	w0, 409900 <ferror@plt+0x7080>
  408ca8:	ldr	x0, [x20, #120]
  408cac:	cbz	x0, 4097d0 <ferror@plt+0x6f50>
  408cb0:	ldr	w21, [x0, #4]
  408cb4:	adds	w21, w21, #0x1
  408cb8:	b.ne	4093b4 <ferror@plt+0x6b34>  // b.any
  408cbc:	ldr	s8, [x20, #32]
  408cc0:	mov	x1, #0x28                  	// #40
  408cc4:	mov	x0, #0x0                   	// #0
  408cc8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  408ccc:	mov	x19, x0
  408cd0:	mov	w1, #0x4                   	// #4
  408cd4:	str	w1, [x0]
  408cd8:	ubfiz	x1, x21, #3, #32
  408cdc:	add	w2, w21, #0x1
  408ce0:	add	x1, x1, #0x8
  408ce4:	str	w21, [x19, #4]
  408ce8:	dup	v8.2s, v8.s[0]
  408cec:	mov	w23, #0x0                   	// #0
  408cf0:	ldr	x0, [x20, #120]
  408cf4:	str	w2, [x19, #4]
  408cf8:	mov	w24, #0x28                  	// #40
  408cfc:	mov	w25, #0x4                   	// #4
  408d00:	str	d8, [x19, x1]
  408d04:	cbz	x0, 408d60 <ferror@plt+0x64e0>
  408d08:	ldr	w1, [x0, #4]
  408d0c:	cmp	w1, w23
  408d10:	b.ls	408d60 <ferror@plt+0x64e0>  // b.plast
  408d14:	umaddl	x1, w23, w24, x0
  408d18:	ldr	w27, [x1, #8]
  408d1c:	ldr	w28, [x1, #16]
  408d20:	cmp	w27, w28
  408d24:	b.hi	409948 <ferror@plt+0x70c8>  // b.pmore
  408d28:	ldp	w1, w21, [x19]
  408d2c:	add	w26, w21, #0x1
  408d30:	ubfx	x1, x1, #0, #31
  408d34:	cmp	w1, w21
  408d38:	mov	w1, w26
  408d3c:	b.eq	409158 <ferror@plt+0x68d8>  // b.none
  408d40:	ubfiz	x21, x21, #3, #32
  408d44:	str	w1, [x19, #4]
  408d48:	add	x21, x21, #0x8
  408d4c:	add	w23, w23, #0x1
  408d50:	add	x1, x19, x21
  408d54:	str	w27, [x19, x21]
  408d58:	str	w28, [x1, #4]
  408d5c:	cbnz	x0, 408d08 <ferror@plt+0x6488>
  408d60:	ldr	x2, [x20, #128]
  408d64:	cbz	x2, 408e04 <ferror@plt+0x6584>
  408d68:	mov	w25, #0x0                   	// #0
  408d6c:	mov	w23, #0x4                   	// #4
  408d70:	ldr	w0, [x2, #4]
  408d74:	cmp	w0, w25
  408d78:	b.ls	408e04 <ferror@plt+0x6584>  // b.plast
  408d7c:	add	x2, x2, w25, uxtw #3
  408d80:	ldr	x21, [x2, #8]
  408d84:	cbz	x21, 409960 <ferror@plt+0x70e0>
  408d88:	ldr	w0, [x21]
  408d8c:	add	x8, sp, #0x80
  408d90:	bl	415ca0 <ferror@plt+0x13420>
  408d94:	ldr	w24, [sp, #136]
  408d98:	mov	x0, x21
  408d9c:	bl	4357a0 <ferror@plt+0x32f20>
  408da0:	tst	w0, #0xff
  408da4:	ldr	w0, [x21, #4]
  408da8:	ccmp	w24, #0x1, #0x4, ne  // ne = any
  408dac:	add	x8, sp, #0x80
  408db0:	cset	w1, gt
  408db4:	sub	w24, w24, w1
  408db8:	bl	415ca0 <ferror@plt+0x13420>
  408dbc:	ldr	w27, [sp, #136]
  408dc0:	cmp	w24, w27
  408dc4:	b.hi	409978 <ferror@plt+0x70f8>  // b.pmore
  408dc8:	ldp	w0, w21, [x19]
  408dcc:	add	w26, w21, #0x1
  408dd0:	ubfx	x0, x0, #0, #31
  408dd4:	mov	w1, w26
  408dd8:	cmp	w0, w21
  408ddc:	b.eq	409220 <ferror@plt+0x69a0>  // b.none
  408de0:	ubfiz	x0, x21, #3, #32
  408de4:	add	w25, w25, #0x1
  408de8:	add	x0, x0, #0x8
  408dec:	ldr	x2, [x20, #128]
  408df0:	str	w1, [x19, #4]
  408df4:	add	x1, x19, x0
  408df8:	str	w24, [x19, x0]
  408dfc:	str	w27, [x1, #4]
  408e00:	cbnz	x2, 408d70 <ferror@plt+0x64f0>
  408e04:	ldr	w1, [x19, #4]
  408e08:	cmp	w1, #0x1
  408e0c:	b.hi	409200 <ferror@plt+0x6980>  // b.pmore
  408e10:	cbz	w1, 409990 <ferror@plt+0x7110>
  408e14:	ldr	x21, [x20, #136]
  408e18:	cbz	x21, 4098d8 <ferror@plt+0x7058>
  408e1c:	ldp	w0, w23, [x21]
  408e20:	add	w24, w23, #0x1
  408e24:	ubfx	x0, x0, #0, #31
  408e28:	mov	w1, w24
  408e2c:	cmp	w0, w23
  408e30:	b.eq	40936c <ferror@plt+0x6aec>  // b.none
  408e34:	add	x23, x21, w23, uxtw #3
  408e38:	ldr	d0, [x19, #8]
  408e3c:	str	w1, [x21, #4]
  408e40:	str	d0, [x23, #8]
  408e44:	ldr	w6, [x19, #4]
  408e48:	cmp	w6, #0x1
  408e4c:	b.ls	408efc <ferror@plt+0x667c>  // b.plast
  408e50:	mov	w23, #0x1                   	// #1
  408e54:	mov	w24, #0x4                   	// #4
  408e58:	b	408e7c <ferror@plt+0x65fc>
  408e5c:	ldr	w0, [x5, #12]
  408e60:	cmp	w0, w4
  408e64:	b.ls	408e70 <ferror@plt+0x65f0>  // b.plast
  408e68:	str	w0, [x2, #12]
  408e6c:	ldr	w6, [x19, #4]
  408e70:	add	w23, w23, #0x1
  408e74:	cmp	w6, w23
  408e78:	b.ls	408efc <ferror@plt+0x667c>  // b.plast
  408e7c:	ldr	w26, [x21, #4]
  408e80:	add	x5, x19, w23, uxtw #3
  408e84:	mov	w27, w23
  408e88:	sub	w25, w26, #0x1
  408e8c:	ldr	w3, [x5, #8]
  408e90:	add	x2, x21, x25, lsl #3
  408e94:	ldr	w0, [x2, #8]
  408e98:	cmp	w3, w0
  408e9c:	b.cc	409918 <ferror@plt+0x7098>  // b.lo, b.ul, b.last
  408ea0:	ldr	w4, [x2, #12]
  408ea4:	ldrb	w0, [x20, #114]
  408ea8:	mov	w1, w4
  408eac:	add	x1, x1, #0x1
  408eb0:	add	x0, x0, x1
  408eb4:	cmp	x0, w3, uxtw
  408eb8:	b.ge	408e5c <ferror@plt+0x65dc>  // b.tcont
  408ebc:	ldr	w0, [x21]
  408ec0:	add	w3, w26, #0x1
  408ec4:	mov	w1, w3
  408ec8:	mov	w28, w26
  408ecc:	ubfx	x0, x0, #0, #31
  408ed0:	cmp	w0, w26
  408ed4:	b.eq	4092bc <ferror@plt+0x6a3c>  // b.none
  408ed8:	add	x27, x27, #0x1
  408edc:	add	x28, x21, w28, uxtw #3
  408ee0:	add	w23, w23, #0x1
  408ee4:	ldr	d0, [x19, x27, lsl #3]
  408ee8:	str	w1, [x21, #4]
  408eec:	str	d0, [x28, #8]
  408ef0:	ldr	w6, [x19, #4]
  408ef4:	cmp	w6, w23
  408ef8:	b.hi	408e7c <ferror@plt+0x65fc>  // b.pmore
  408efc:	ldr	w5, [x21, #4]
  408f00:	cbz	w5, 409930 <ferror@plt+0x70b0>
  408f04:	cmp	w5, #0x1
  408f08:	b.ls	408f58 <ferror@plt+0x66d8>  // b.plast
  408f0c:	sub	w0, w5, #0x2
  408f10:	add	x5, x21, #0x10
  408f14:	add	x2, x21, #0x8
  408f18:	add	x5, x5, w0, uxtw #3
  408f1c:	nop
  408f20:	ldp	w3, w1, [x2]
  408f24:	cmp	w3, w1
  408f28:	b.hi	409a08 <ferror@plt+0x7188>  // b.pmore
  408f2c:	ldp	w0, w4, [x2, #8]
  408f30:	cmp	w0, w4
  408f34:	b.hi	409a20 <ferror@plt+0x71a0>  // b.pmore
  408f38:	cmp	w3, w0
  408f3c:	b.cs	4099a8 <ferror@plt+0x7128>  // b.hs, b.nlast
  408f40:	add	w1, w1, #0x1
  408f44:	cmp	w0, w1
  408f48:	b.ls	4099c0 <ferror@plt+0x7140>  // b.plast
  408f4c:	add	x2, x2, #0x8
  408f50:	cmp	x2, x5
  408f54:	b.ne	408f20 <ferror@plt+0x66a0>  // b.any
  408f58:	ldrsb	w0, [x19, #3]
  408f5c:	tbnz	w0, #31, 409418 <ferror@plt+0x6b98>
  408f60:	mov	x0, x19
  408f64:	bl	402640 <free@plt>
  408f68:	ldr	x21, [x20, #136]
  408f6c:	cbz	x21, 4099d8 <ferror@plt+0x7158>
  408f70:	ldr	w0, [x21, #4]
  408f74:	cbz	w0, 4099d8 <ferror@plt+0x7158>
  408f78:	sub	w0, w0, #0x1
  408f7c:	add	x21, x21, x0, lsl #3
  408f80:	ldr	w0, [x21, #12]
  408f84:	cmp	w0, #0x0
  408f88:	csel	w0, w0, wzr, ge  // ge = tcont
  408f8c:	bl	405ff0 <ferror@plt+0x3770>
  408f90:	str	w0, [x20, #144]
  408f94:	ldr	x1, [x20, #136]
  408f98:	mov	w2, w0
  408f9c:	cbz	x1, 408fb8 <ferror@plt+0x6738>
  408fa0:	ldr	w0, [x1, #4]
  408fa4:	cmp	w0, #0x1
  408fa8:	b.ls	408fb8 <ferror@plt+0x6738>  // b.plast
  408fac:	cmp	w2, #0x3
  408fb0:	mov	w0, #0x3                   	// #3
  408fb4:	csel	w2, w2, w0, ge  // ge = tcont
  408fb8:	ldr	w1, [x22, #224]
  408fbc:	ldr	x4, [x20]
  408fc0:	cmp	w1, w2
  408fc4:	sub	w3, w1, #0x1
  408fc8:	ldr	w1, [x20, #32]
  408fcc:	ldr	x0, [x20, #24]
  408fd0:	csel	w2, w3, w2, gt
  408fd4:	str	w2, [x20, #144]
  408fd8:	ldrsw	x19, [x4, #112]
  408fdc:	bl	415540 <ferror@plt+0x12cc0>
  408fe0:	cbz	x0, 409020 <ferror@plt+0x67a0>
  408fe4:	ldrsw	x0, [x20, #36]
  408fe8:	cmp	x1, x0
  408fec:	b.cc	409020 <ferror@plt+0x67a0>  // b.lo, b.ul, b.last
  408ff0:	ldrb	w2, [x20, #114]
  408ff4:	cbnz	w2, 4097f8 <ferror@plt+0x6f78>
  408ff8:	sub	x2, x1, x0
  408ffc:	mov	x3, #0xa                   	// #10
  409000:	cmp	x2, x3
  409004:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  409008:	cmp	x1, x19
  40900c:	sub	x2, x19, x2
  409010:	ccmp	x0, x2, #0x0, cs  // cs = hs, nlast
  409014:	b.hi	4098a4 <ferror@plt+0x7024>  // b.pmore
  409018:	ldr	w0, [x20, #148]
  40901c:	tbnz	w0, #31, 4099f0 <ferror@plt+0x7170>
  409020:	ldrb	w0, [x22, #228]
  409024:	cbnz	w0, 409488 <ferror@plt+0x6c08>
  409028:	ldp	x19, x20, [sp, #16]
  40902c:	ldp	x21, x22, [sp, #32]
  409030:	ldp	x23, x24, [sp, #48]
  409034:	ldp	x25, x26, [sp, #64]
  409038:	ldp	x27, x28, [sp, #80]
  40903c:	ldr	d8, [sp, #96]
  409040:	ldp	x29, x30, [sp], #160
  409044:	ret
  409048:	ldrsb	w0, [x27, #3]
  40904c:	tbnz	w0, #31, 409098 <ferror@plt+0x6818>
  409050:	mov	w0, w25
  409054:	bl	412508 <ferror@plt+0xfc88>
  409058:	mov	w2, w0
  40905c:	mov	w25, #0x0                   	// #0
  409060:	ubfiz	x1, x2, #3, #32
  409064:	and	w2, w0, #0x7fffffff
  409068:	ldr	x0, [x20, #128]
  40906c:	add	x1, x1, #0x8
  409070:	cbz	x0, 409078 <ferror@plt+0x67f8>
  409074:	ldr	w25, [x0, #4]
  409078:	str	w2, [sp, #120]
  40907c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  409080:	ldr	w2, [sp, #120]
  409084:	mov	x27, x0
  409088:	str	x0, [x20, #128]
  40908c:	add	w1, w25, #0x1
  409090:	stp	w2, w25, [x0]
  409094:	b	408c68 <ferror@plt+0x63e8>
  409098:	cmp	w3, #0x4
  40909c:	str	xzr, [x20, #128]
  4090a0:	csel	w1, w3, w24, cs  // cs = hs, nlast
  4090a4:	csel	w4, w3, w24, cs  // cs = hs, nlast
  4090a8:	add	x1, x1, #0x1
  4090ac:	mov	x0, #0x0                   	// #0
  4090b0:	stp	w4, w3, [sp, #120]
  4090b4:	lsl	x1, x1, #3
  4090b8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4090bc:	ldp	w4, w3, [sp, #120]
  4090c0:	mov	x5, x0
  4090c4:	str	x0, [x20, #128]
  4090c8:	add	x6, x27, #0x8
  4090cc:	and	x4, x4, #0x7fffffff
  4090d0:	str	x4, [x5], #8
  4090d4:	cbz	w25, 40912c <ferror@plt+0x68ac>
  4090d8:	add	x1, x27, #0x18
  4090dc:	add	x4, x0, #0x18
  4090e0:	cmp	x5, x1
  4090e4:	sub	w1, w25, #0x1
  4090e8:	ccmp	x4, x6, #0x0, cc  // cc = lo, ul, last
  4090ec:	ccmp	w1, #0x9, #0x0, ls  // ls = plast
  4090f0:	b.ls	409870 <ferror@plt+0x6ff0>  // b.plast
  4090f4:	lsr	w4, w25, #1
  4090f8:	mov	x7, #0x8                   	// #8
  4090fc:	mov	x1, x7
  409100:	add	x4, x7, w4, uxtw #4
  409104:	nop
  409108:	ldr	q0, [x27, x1]
  40910c:	str	q0, [x0, x1]
  409110:	add	x1, x1, #0x10
  409114:	cmp	x4, x1
  409118:	b.ne	409108 <ferror@plt+0x6888>  // b.any
  40911c:	and	x1, x25, #0xfffffffe
  409120:	tbz	w25, #0, 40912c <ferror@plt+0x68ac>
  409124:	ldr	x4, [x6, x1, lsl #3]
  409128:	str	x4, [x5, x1, lsl #3]
  40912c:	mov	w1, w3
  409130:	mov	x27, x0
  409134:	str	w25, [x0, #4]
  409138:	b	408c68 <ferror@plt+0x63e8>
  40913c:	mov	w1, w1
  409140:	add	x0, x0, #0x8
  409144:	adrp	x3, 408000 <ferror@plt+0x5780>
  409148:	mov	x2, #0x8                   	// #8
  40914c:	add	x3, x3, #0x110
  409150:	bl	418650 <ferror@plt+0x15dd0>
  409154:	b	408c98 <ferror@plt+0x6418>
  409158:	ldrsb	w0, [x19, #3]
  40915c:	tbnz	w0, #31, 409198 <ferror@plt+0x6918>
  409160:	mov	w0, w21
  409164:	bl	412508 <ferror@plt+0xfc88>
  409168:	mov	w26, w0
  40916c:	ldr	w21, [x19, #4]
  409170:	mov	x0, x19
  409174:	ubfiz	x1, x26, #3, #32
  409178:	and	w26, w26, #0x7fffffff
  40917c:	add	x1, x1, #0x8
  409180:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  409184:	mov	x19, x0
  409188:	add	w1, w21, #0x1
  40918c:	ldr	x0, [x20, #120]
  409190:	stp	w26, w21, [x19]
  409194:	b	408d40 <ferror@plt+0x64c0>
  409198:	cmp	w26, #0x4
  40919c:	mov	x0, #0x0                   	// #0
  4091a0:	csel	w2, w26, w25, cs  // cs = hs, nlast
  4091a4:	csel	w1, w26, w25, cs  // cs = hs, nlast
  4091a8:	add	x1, x1, #0x1
  4091ac:	str	w2, [sp, #120]
  4091b0:	lsl	x1, x1, #3
  4091b4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4091b8:	ldr	w2, [sp, #120]
  4091bc:	and	x2, x2, #0x7fffffff
  4091c0:	str	x2, [x0]
  4091c4:	cbz	w21, 4091ec <ferror@plt+0x696c>
  4091c8:	sub	w1, w21, #0x1
  4091cc:	mov	x2, #0x8                   	// #8
  4091d0:	add	x1, x1, #0x2
  4091d4:	lsl	x1, x1, #3
  4091d8:	ldr	x3, [x19, x2]
  4091dc:	str	x3, [x0, x2]
  4091e0:	add	x2, x2, #0x8
  4091e4:	cmp	x1, x2
  4091e8:	b.ne	4091d8 <ferror@plt+0x6958>  // b.any
  4091ec:	mov	x19, x0
  4091f0:	mov	w1, w26
  4091f4:	str	w21, [x0, #4]
  4091f8:	ldr	x0, [x20, #120]
  4091fc:	b	408d40 <ferror@plt+0x64c0>
  409200:	mov	w1, w1
  409204:	mov	x2, #0x8                   	// #8
  409208:	adrp	x3, 408000 <ferror@plt+0x5780>
  40920c:	add	x0, x19, x2
  409210:	add	x3, x3, #0x408
  409214:	bl	418650 <ferror@plt+0x15dd0>
  409218:	ldr	w1, [x19, #4]
  40921c:	b	408e10 <ferror@plt+0x6590>
  409220:	ldrsb	w0, [x19, #3]
  409224:	tbnz	w0, #31, 40925c <ferror@plt+0x69dc>
  409228:	mov	w0, w21
  40922c:	bl	412508 <ferror@plt+0xfc88>
  409230:	mov	w26, w0
  409234:	ldr	w21, [x19, #4]
  409238:	mov	x0, x19
  40923c:	ubfiz	x1, x26, #3, #32
  409240:	and	w26, w26, #0x7fffffff
  409244:	add	x1, x1, #0x8
  409248:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40924c:	add	w1, w21, #0x1
  409250:	mov	x19, x0
  409254:	stp	w26, w21, [x0]
  409258:	b	408de0 <ferror@plt+0x6560>
  40925c:	cmp	w26, #0x4
  409260:	mov	x0, #0x0                   	// #0
  409264:	csel	w1, w26, w23, cs  // cs = hs, nlast
  409268:	csel	w28, w26, w23, cs  // cs = hs, nlast
  40926c:	add	x1, x1, #0x1
  409270:	and	x28, x28, #0x7fffffff
  409274:	lsl	x1, x1, #3
  409278:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40927c:	str	x28, [x0]
  409280:	cbz	w21, 4092ac <ferror@plt+0x6a2c>
  409284:	sub	w1, w21, #0x1
  409288:	mov	x2, #0x8                   	// #8
  40928c:	add	x1, x1, #0x2
  409290:	lsl	x1, x1, #3
  409294:	nop
  409298:	ldr	x3, [x19, x2]
  40929c:	str	x3, [x0, x2]
  4092a0:	add	x2, x2, #0x8
  4092a4:	cmp	x1, x2
  4092a8:	b.ne	409298 <ferror@plt+0x6a18>  // b.any
  4092ac:	mov	w1, w26
  4092b0:	mov	x19, x0
  4092b4:	str	w21, [x0, #4]
  4092b8:	b	408de0 <ferror@plt+0x6560>
  4092bc:	ldrsb	w0, [x21, #3]
  4092c0:	tbnz	w0, #31, 409304 <ferror@plt+0x6a84>
  4092c4:	mov	w0, w26
  4092c8:	bl	412508 <ferror@plt+0xfc88>
  4092cc:	mov	w25, w0
  4092d0:	mov	w28, #0x0                   	// #0
  4092d4:	ldr	x0, [x20, #136]
  4092d8:	ubfiz	x1, x25, #3, #32
  4092dc:	add	x1, x1, #0x8
  4092e0:	cbz	x0, 4092e8 <ferror@plt+0x6a68>
  4092e4:	ldr	w28, [x0, #4]
  4092e8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4092ec:	str	x0, [x20, #136]
  4092f0:	and	w25, w25, #0x7fffffff
  4092f4:	mov	x21, x0
  4092f8:	add	w1, w28, #0x1
  4092fc:	stp	w25, w28, [x0]
  409300:	b	408ed8 <ferror@plt+0x6658>
  409304:	cmp	w3, #0x4
  409308:	str	xzr, [x20, #136]
  40930c:	csel	w1, w3, w24, cs  // cs = hs, nlast
  409310:	csel	w2, w3, w24, cs  // cs = hs, nlast
  409314:	add	x1, x1, #0x1
  409318:	mov	x0, #0x0                   	// #0
  40931c:	stp	w2, w3, [sp, #120]
  409320:	add	x25, x25, #0x2
  409324:	lsl	x1, x1, #3
  409328:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40932c:	ldp	w2, w3, [sp, #120]
  409330:	str	x0, [x20, #136]
  409334:	lsl	x25, x25, #3
  409338:	mov	x1, #0x8                   	// #8
  40933c:	and	x2, x2, #0x7fffffff
  409340:	str	x2, [x0]
  409344:	cbz	w26, 40935c <ferror@plt+0x6adc>
  409348:	ldr	x2, [x21, x1]
  40934c:	str	x2, [x0, x1]
  409350:	add	x1, x1, #0x8
  409354:	cmp	x25, x1
  409358:	b.ne	409348 <ferror@plt+0x6ac8>  // b.any
  40935c:	mov	w1, w3
  409360:	mov	x21, x0
  409364:	str	w26, [x0, #4]
  409368:	b	408ed8 <ferror@plt+0x6658>
  40936c:	ldrsb	w0, [x21, #3]
  409370:	tbnz	w0, #31, 409740 <ferror@plt+0x6ec0>
  409374:	mov	w0, w23
  409378:	bl	412508 <ferror@plt+0xfc88>
  40937c:	mov	w2, w0
  409380:	and	w24, w0, #0x7fffffff
  409384:	ldr	x0, [x20, #136]
  409388:	ubfiz	x1, x2, #3, #32
  40938c:	add	x1, x1, #0x8
  409390:	mov	w23, #0x0                   	// #0
  409394:	cbz	x0, 40939c <ferror@plt+0x6b1c>
  409398:	ldr	w23, [x0, #4]
  40939c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4093a0:	str	x0, [x20, #136]
  4093a4:	mov	x21, x0
  4093a8:	add	w1, w23, #0x1
  4093ac:	stp	w24, w23, [x0]
  4093b0:	b	408e34 <ferror@plt+0x65b4>
  4093b4:	ubfiz	x1, x21, #3, #32
  4093b8:	mov	x0, #0x0                   	// #0
  4093bc:	add	x1, x1, #0x8
  4093c0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4093c4:	and	x1, x21, #0x7fffffff
  4093c8:	str	x1, [x0]
  4093cc:	mov	x19, x0
  4093d0:	tst	x21, #0x7fffffff
  4093d4:	ldr	s8, [x20, #32]
  4093d8:	b.ne	409898 <ferror@plt+0x7018>  // b.any
  4093dc:	ldrsb	w0, [x0, #3]
  4093e0:	tbnz	w0, #31, 4097ac <ferror@plt+0x6f2c>
  4093e4:	mov	w1, #0x1                   	// #1
  4093e8:	mov	w0, #0x0                   	// #0
  4093ec:	bl	412508 <ferror@plt+0xfc88>
  4093f0:	mov	w23, w0
  4093f4:	ldr	w21, [x19, #4]
  4093f8:	mov	x0, x19
  4093fc:	ubfiz	x1, x23, #3, #32
  409400:	and	w23, w23, #0x7fffffff
  409404:	add	x1, x1, #0x8
  409408:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40940c:	mov	x19, x0
  409410:	str	w23, [x0]
  409414:	b	408cd8 <ferror@plt+0x6458>
  409418:	str	wzr, [x19, #4]
  40941c:	b	408f70 <ferror@plt+0x66f0>
  409420:	ubfiz	x1, x19, #3, #32
  409424:	mov	x0, #0x0                   	// #0
  409428:	add	x1, x1, #0x8
  40942c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  409430:	str	x0, [x20, #136]
  409434:	and	x19, x19, #0x7fffffff
  409438:	str	x19, [x0]
  40943c:	ldr	w0, [x26, #8]
  409440:	b	408b60 <ferror@plt+0x62e0>
  409444:	ubfiz	x1, x19, #3, #32
  409448:	mov	x0, #0x0                   	// #0
  40944c:	add	x1, x1, #0x8
  409450:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  409454:	str	x0, [x20, #128]
  409458:	and	x19, x19, #0x7fffffff
  40945c:	str	x19, [x0]
  409460:	b	408b50 <ferror@plt+0x62d0>
  409464:	mov	w2, #0x28                  	// #40
  409468:	mov	x1, #0x8                   	// #8
  40946c:	mov	x0, #0x0                   	// #0
  409470:	umaddl	x1, w21, w2, x1
  409474:	and	x21, x21, #0x7fffffff
  409478:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40947c:	str	x0, [x20, #120]
  409480:	str	x21, [x0]
  409484:	b	408b44 <ferror@plt+0x62c4>
  409488:	ldr	w23, [x20, #148]
  40948c:	ldrb	w0, [x20, #114]
  409490:	add	w23, w23, w19
  409494:	cmp	w23, #0x63
  409498:	b.le	4095b0 <ferror@plt+0x6d30>
  40949c:	cbz	w0, 409504 <ferror@plt+0x6c84>
  4094a0:	ldr	w0, [x20, #144]
  4094a4:	mov	w19, #0x0                   	// #0
  4094a8:	cmp	w0, #0x3
  4094ac:	b.le	4094d0 <ferror@plt+0x6c50>
  4094b0:	ldr	x0, [x20, #8]
  4094b4:	mov	w1, #0x20                  	// #32
  4094b8:	add	w19, w19, #0x1
  4094bc:	bl	40f150 <ferror@plt+0xc8d0>
  4094c0:	ldr	w0, [x20, #144]
  4094c4:	sub	w1, w0, #0x3
  4094c8:	cmp	w1, w19
  4094cc:	b.gt	4094b0 <ferror@plt+0x6c30>
  4094d0:	cmp	w19, w0
  4094d4:	b.ge	4094f4 <ferror@plt+0x6c74>  // b.tcont
  4094d8:	ldr	x0, [x20, #8]
  4094dc:	mov	w1, #0x20                  	// #32
  4094e0:	add	w19, w19, #0x1
  4094e4:	bl	40f150 <ferror@plt+0xc8d0>
  4094e8:	ldr	w0, [x20, #144]
  4094ec:	cmp	w0, w19
  4094f0:	b.gt	4094d8 <ferror@plt+0x6c58>
  4094f4:	ldr	x0, [x20, #8]
  4094f8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4094fc:	add	x1, x1, #0x778
  409500:	bl	410da0 <ferror@plt+0xe520>
  409504:	ldr	x0, [x20, #8]
  409508:	mov	w1, #0x20                  	// #32
  40950c:	add	w19, w23, #0x1
  409510:	bl	40f150 <ferror@plt+0xc8d0>
  409514:	ldr	w25, [x20, #148]
  409518:	add	w25, w25, #0x1
  40951c:	cmp	w23, w25
  409520:	b.lt	4095a4 <ferror@plt+0x6d24>  // b.tstop
  409524:	mov	w21, #0xcccd                	// #52429
  409528:	mov	w26, #0x9998                	// #39320
  40952c:	mov	w24, #0x851f                	// #34079
  409530:	mov	w22, #0x6667                	// #26215
  409534:	movk	w21, #0xcccc, lsl #16
  409538:	movk	w26, #0x1999, lsl #16
  40953c:	movk	w24, #0x51eb, lsl #16
  409540:	movk	w22, #0x6666, lsl #16
  409544:	b	40957c <ferror@plt+0x6cfc>
  409548:	smull	x1, w25, w24
  40954c:	asr	x1, x1, #37
  409550:	sub	w2, w1, w25, asr #31
  409554:	add	w25, w25, #0x1
  409558:	smull	x1, w2, w22
  40955c:	asr	x1, x1, #34
  409560:	sub	w1, w1, w2, asr #31
  409564:	add	w1, w1, w1, lsl #2
  409568:	sub	w1, w2, w1, lsl #1
  40956c:	add	w1, w1, #0x30
  409570:	bl	40f150 <ferror@plt+0xc8d0>
  409574:	cmp	w25, w19
  409578:	b.eq	4095a4 <ferror@plt+0x6d24>  // b.none
  40957c:	madd	w1, w25, w21, w26
  409580:	ldr	x0, [x20, #8]
  409584:	ror	w1, w1, #1
  409588:	cmp	w1, w26
  40958c:	b.ls	409548 <ferror@plt+0x6cc8>  // b.plast
  409590:	add	w25, w25, #0x1
  409594:	mov	w1, #0x20                  	// #32
  409598:	bl	40f150 <ferror@plt+0xc8d0>
  40959c:	cmp	w25, w19
  4095a0:	b.ne	40957c <ferror@plt+0x6cfc>  // b.any
  4095a4:	ldr	x0, [x20, #8]
  4095a8:	bl	40f0f0 <ferror@plt+0xc870>
  4095ac:	ldrb	w0, [x20, #114]
  4095b0:	cbnz	w0, 409808 <ferror@plt+0x6f88>
  4095b4:	ldr	x0, [x20, #8]
  4095b8:	mov	w1, #0x20                  	// #32
  4095bc:	add	w21, w23, #0x1
  4095c0:	bl	40f150 <ferror@plt+0xc8d0>
  4095c4:	ldr	w19, [x20, #148]
  4095c8:	add	w19, w19, #0x1
  4095cc:	cmp	w23, w19
  4095d0:	b.lt	40964c <ferror@plt+0x6dcc>  // b.tstop
  4095d4:	mov	w22, #0xcccd                	// #52429
  4095d8:	mov	w25, #0x9998                	// #39320
  4095dc:	mov	w24, #0x6667                	// #26215
  4095e0:	movk	w22, #0xcccc, lsl #16
  4095e4:	movk	w25, #0x1999, lsl #16
  4095e8:	movk	w24, #0x6666, lsl #16
  4095ec:	b	409624 <ferror@plt+0x6da4>
  4095f0:	smull	x1, w19, w24
  4095f4:	asr	x1, x1, #34
  4095f8:	sub	w2, w1, w19, asr #31
  4095fc:	add	w19, w19, #0x1
  409600:	smull	x1, w2, w24
  409604:	asr	x1, x1, #34
  409608:	sub	w1, w1, w2, asr #31
  40960c:	add	w1, w1, w1, lsl #2
  409610:	sub	w1, w2, w1, lsl #1
  409614:	add	w1, w1, #0x30
  409618:	bl	40f150 <ferror@plt+0xc8d0>
  40961c:	cmp	w21, w19
  409620:	b.eq	40964c <ferror@plt+0x6dcc>  // b.none
  409624:	madd	w1, w19, w22, w25
  409628:	ldr	x0, [x20, #8]
  40962c:	ror	w1, w1, #1
  409630:	cmp	w1, w25
  409634:	b.ls	4095f0 <ferror@plt+0x6d70>  // b.plast
  409638:	add	w19, w19, #0x1
  40963c:	mov	w1, #0x20                  	// #32
  409640:	bl	40f150 <ferror@plt+0xc8d0>
  409644:	cmp	w21, w19
  409648:	b.ne	409624 <ferror@plt+0x6da4>  // b.any
  40964c:	ldr	x0, [x20, #8]
  409650:	bl	40f0f0 <ferror@plt+0xc870>
  409654:	ldrb	w0, [x20, #114]
  409658:	cbz	w0, 4096c4 <ferror@plt+0x6e44>
  40965c:	ldr	w0, [x20, #144]
  409660:	mov	w19, #0x0                   	// #0
  409664:	cmp	w0, #0x3
  409668:	b.le	409690 <ferror@plt+0x6e10>
  40966c:	nop
  409670:	ldr	x0, [x20, #8]
  409674:	mov	w1, #0x20                  	// #32
  409678:	add	w19, w19, #0x1
  40967c:	bl	40f150 <ferror@plt+0xc8d0>
  409680:	ldr	w0, [x20, #144]
  409684:	sub	w1, w0, #0x3
  409688:	cmp	w1, w19
  40968c:	b.gt	409670 <ferror@plt+0x6df0>
  409690:	cmp	w19, w0
  409694:	b.ge	4096b4 <ferror@plt+0x6e34>  // b.tcont
  409698:	ldr	x0, [x20, #8]
  40969c:	mov	w1, #0x20                  	// #32
  4096a0:	add	w19, w19, #0x1
  4096a4:	bl	40f150 <ferror@plt+0xc8d0>
  4096a8:	ldr	w0, [x20, #144]
  4096ac:	cmp	w0, w19
  4096b0:	b.gt	409698 <ferror@plt+0x6e18>
  4096b4:	ldr	x0, [x20, #8]
  4096b8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4096bc:	add	x1, x1, #0x778
  4096c0:	bl	410da0 <ferror@plt+0xe520>
  4096c4:	ldr	x0, [x20, #8]
  4096c8:	mov	w1, #0x20                  	// #32
  4096cc:	mov	w21, #0x6667                	// #26215
  4096d0:	add	w22, w23, #0x1
  4096d4:	movk	w21, #0x6666, lsl #16
  4096d8:	bl	40f150 <ferror@plt+0xc8d0>
  4096dc:	ldr	w19, [x20, #148]
  4096e0:	add	w19, w19, #0x1
  4096e4:	cmp	w23, w19
  4096e8:	b.lt	40971c <ferror@plt+0x6e9c>  // b.tstop
  4096ec:	nop
  4096f0:	smull	x1, w19, w21
  4096f4:	ldr	x0, [x20, #8]
  4096f8:	asr	x1, x1, #34
  4096fc:	sub	w1, w1, w19, asr #31
  409700:	add	w1, w1, w1, lsl #2
  409704:	sub	w1, w19, w1, lsl #1
  409708:	add	w19, w19, #0x1
  40970c:	add	w1, w1, #0x30
  409710:	bl	40f150 <ferror@plt+0xc8d0>
  409714:	cmp	w19, w22
  409718:	b.ne	4096f0 <ferror@plt+0x6e70>  // b.any
  40971c:	ldr	x0, [x20, #8]
  409720:	ldp	x19, x20, [sp, #16]
  409724:	ldp	x21, x22, [sp, #32]
  409728:	ldp	x23, x24, [sp, #48]
  40972c:	ldp	x25, x26, [sp, #64]
  409730:	ldp	x27, x28, [sp, #80]
  409734:	ldr	d8, [sp, #96]
  409738:	ldp	x29, x30, [sp], #160
  40973c:	b	40f0f0 <ferror@plt+0xc870>
  409740:	cmp	w24, #0x4
  409744:	mov	w0, #0x4                   	// #4
  409748:	csel	w1, w24, w0, cs  // cs = hs, nlast
  40974c:	str	xzr, [x20, #136]
  409750:	add	x1, x1, #0x1
  409754:	csel	w25, w24, w0, cs  // cs = hs, nlast
  409758:	mov	x0, #0x0                   	// #0
  40975c:	and	x25, x25, #0x7fffffff
  409760:	lsl	x1, x1, #3
  409764:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  409768:	str	x0, [x20, #136]
  40976c:	str	x25, [x0]
  409770:	cbz	w23, 40979c <ferror@plt+0x6f1c>
  409774:	sub	w3, w23, #0x1
  409778:	mov	x1, #0x8                   	// #8
  40977c:	add	x3, x3, #0x2
  409780:	lsl	x3, x3, #3
  409784:	nop
  409788:	ldr	x2, [x21, x1]
  40978c:	str	x2, [x0, x1]
  409790:	add	x1, x1, #0x8
  409794:	cmp	x3, x1
  409798:	b.ne	409788 <ferror@plt+0x6f08>  // b.any
  40979c:	mov	w1, w24
  4097a0:	mov	x21, x0
  4097a4:	str	w23, [x0, #4]
  4097a8:	b	408e34 <ferror@plt+0x65b4>
  4097ac:	mov	x1, #0x28                  	// #40
  4097b0:	mov	x0, #0x0                   	// #0
  4097b4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4097b8:	mov	x19, x0
  4097bc:	mov	x1, #0x8                   	// #8
  4097c0:	mov	x0, #0x4                   	// #4
  4097c4:	mov	w2, #0x1                   	// #1
  4097c8:	str	x0, [x19]
  4097cc:	b	408ce8 <ferror@plt+0x6468>
  4097d0:	mov	x1, #0x10                  	// #16
  4097d4:	mov	x0, #0x0                   	// #0
  4097d8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4097dc:	mov	x19, x0
  4097e0:	mov	x0, #0x1                   	// #1
  4097e4:	mov	x1, #0x8                   	// #8
  4097e8:	mov	w2, w0
  4097ec:	str	x0, [x19]
  4097f0:	ldr	s8, [x20, #32]
  4097f4:	b	408ce8 <ferror@plt+0x6468>
  4097f8:	ldr	w2, [x20, #144]
  4097fc:	add	w2, w2, #0x2
  409800:	add	x0, x0, w2, sxtw
  409804:	b	408ff8 <ferror@plt+0x6778>
  409808:	ldr	w0, [x20, #144]
  40980c:	mov	w19, #0x0                   	// #0
  409810:	cmp	w0, #0x3
  409814:	b.le	409838 <ferror@plt+0x6fb8>
  409818:	ldr	x0, [x20, #8]
  40981c:	mov	w1, #0x20                  	// #32
  409820:	add	w19, w19, #0x1
  409824:	bl	40f150 <ferror@plt+0xc8d0>
  409828:	ldr	w0, [x20, #144]
  40982c:	sub	w1, w0, #0x3
  409830:	cmp	w1, w19
  409834:	b.gt	409818 <ferror@plt+0x6f98>
  409838:	cmp	w19, w0
  40983c:	b.ge	40985c <ferror@plt+0x6fdc>  // b.tcont
  409840:	ldr	x0, [x20, #8]
  409844:	mov	w1, #0x20                  	// #32
  409848:	add	w19, w19, #0x1
  40984c:	bl	40f150 <ferror@plt+0xc8d0>
  409850:	ldr	w0, [x20, #144]
  409854:	cmp	w0, w19
  409858:	b.gt	409840 <ferror@plt+0x6fc0>
  40985c:	ldr	x0, [x20, #8]
  409860:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409864:	add	x1, x1, #0x778
  409868:	bl	410da0 <ferror@plt+0xe520>
  40986c:	b	4095b4 <ferror@plt+0x6d34>
  409870:	ubfiz	x4, x1, #3, #32
  409874:	mov	x1, #0x8                   	// #8
  409878:	add	x4, x4, #0x10
  40987c:	nop
  409880:	ldr	x5, [x27, x1]
  409884:	str	x5, [x0, x1]
  409888:	add	x1, x1, #0x8
  40988c:	cmp	x4, x1
  409890:	b.ne	409880 <ferror@plt+0x7000>  // b.any
  409894:	b	40912c <ferror@plt+0x68ac>
  409898:	mov	x1, #0x8                   	// #8
  40989c:	mov	w2, #0x1                   	// #1
  4098a0:	b	408ce8 <ferror@plt+0x6468>
  4098a4:	sub	w0, w0, w2
  4098a8:	str	w0, [x20, #148]
  4098ac:	b	40901c <ferror@plt+0x679c>
  4098b0:	mov	x1, #0x28                  	// #40
  4098b4:	mov	x0, #0x0                   	// #0
  4098b8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4098bc:	mov	x27, x0
  4098c0:	str	x27, [x20, #128]
  4098c4:	mov	w25, #0x0                   	// #0
  4098c8:	mov	x0, #0x4                   	// #4
  4098cc:	add	w1, w25, #0x1
  4098d0:	str	x0, [x27]
  4098d4:	b	408c68 <ferror@plt+0x63e8>
  4098d8:	mov	x1, #0x28                  	// #40
  4098dc:	mov	x0, #0x0                   	// #0
  4098e0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4098e4:	mov	x21, x0
  4098e8:	str	x21, [x20, #136]
  4098ec:	mov	x0, #0x4                   	// #4
  4098f0:	mov	w23, #0x0                   	// #0
  4098f4:	add	w1, w23, #0x1
  4098f8:	str	x0, [x21]
  4098fc:	b	408e34 <ferror@plt+0x65b4>
  409900:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409904:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409908:	add	x2, x2, #0x748
  40990c:	add	x0, x0, #0x6e0
  409910:	mov	w1, #0x49b                 	// #1179
  409914:	bl	4028b0 <ferror@plt+0x30>
  409918:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40991c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409920:	add	x2, x2, #0x748
  409924:	add	x0, x0, #0x6e0
  409928:	mov	w1, #0x4bc                 	// #1212
  40992c:	bl	4028b0 <ferror@plt+0x30>
  409930:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409934:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409938:	add	x2, x2, #0x748
  40993c:	add	x0, x0, #0x6e0
  409940:	mov	w1, #0x4cd                 	// #1229
  409944:	bl	4028b0 <ferror@plt+0x30>
  409948:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40994c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409950:	add	x2, x2, #0x748
  409954:	add	x0, x0, #0x6e0
  409958:	mov	w1, #0x4a4                 	// #1188
  40995c:	bl	4028b0 <ferror@plt+0x30>
  409960:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409964:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409968:	add	x2, x2, #0x748
  40996c:	add	x0, x0, #0x6e0
  409970:	mov	w1, #0x4ad                 	// #1197
  409974:	bl	4028b0 <ferror@plt+0x30>
  409978:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40997c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409980:	add	x2, x2, #0x760
  409984:	add	x0, x0, #0x6e0
  409988:	mov	w1, #0xa5                  	// #165
  40998c:	bl	4028b0 <ferror@plt+0x30>
  409990:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409994:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409998:	add	x2, x2, #0x748
  40999c:	add	x0, x0, #0x6e0
  4099a0:	mov	w1, #0x4b6                 	// #1206
  4099a4:	bl	4028b0 <ferror@plt+0x30>
  4099a8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4099ac:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4099b0:	add	x2, x2, #0x748
  4099b4:	add	x0, x0, #0x6e0
  4099b8:	mov	w1, #0x4d6                 	// #1238
  4099bc:	bl	4028b0 <ferror@plt+0x30>
  4099c0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4099c4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4099c8:	add	x2, x2, #0x748
  4099cc:	add	x0, x0, #0x6e0
  4099d0:	mov	w1, #0x4d8                 	// #1240
  4099d4:	bl	4028b0 <ferror@plt+0x30>
  4099d8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4099dc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4099e0:	add	x2, x2, #0x770
  4099e4:	add	x0, x0, #0x6e0
  4099e8:	mov	w1, #0x36a                 	// #874
  4099ec:	bl	4028b0 <ferror@plt+0x30>
  4099f0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4099f4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4099f8:	add	x2, x2, #0x770
  4099fc:	add	x0, x0, #0x6e0
  409a00:	mov	w1, #0x386                 	// #902
  409a04:	bl	4028b0 <ferror@plt+0x30>
  409a08:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409a0c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409a10:	add	x2, x2, #0x748
  409a14:	add	x0, x0, #0x6e0
  409a18:	mov	w1, #0x4d3                 	// #1235
  409a1c:	bl	4028b0 <ferror@plt+0x30>
  409a20:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409a24:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409a28:	add	x2, x2, #0x748
  409a2c:	add	x0, x0, #0x6e0
  409a30:	mov	w1, #0x4d4                 	// #1236
  409a34:	bl	4028b0 <ferror@plt+0x30>
  409a38:	stp	x29, x30, [sp, #-224]!
  409a3c:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  409a40:	mov	w3, #0x4                   	// #4
  409a44:	mov	x29, sp
  409a48:	stp	x21, x22, [sp, #32]
  409a4c:	mov	w21, w1
  409a50:	mov	w22, #0x1                   	// #1
  409a54:	ldr	x1, [x2, #840]
  409a58:	mov	x2, x0
  409a5c:	stp	x19, x20, [sp, #16]
  409a60:	mov	x20, x0
  409a64:	add	x0, sp, #0x48
  409a68:	bl	408a30 <ferror@plt+0x61b0>
  409a6c:	stp	w21, w22, [sp, #56]
  409a70:	add	x0, sp, #0x48
  409a74:	mov	w3, w22
  409a78:	add	x1, sp, #0x38
  409a7c:	mov	w2, #0x0                   	// #0
  409a80:	bl	4085e8 <ferror@plt+0x5d68>
  409a84:	mov	w19, w0
  409a88:	tst	w0, #0xff
  409a8c:	b.eq	409aa4 <ferror@plt+0x7224>  // b.none
  409a90:	mov	w2, w22
  409a94:	mov	w1, w21
  409a98:	mov	x0, x20
  409a9c:	mov	x3, #0x0                   	// #0
  409aa0:	bl	433a30 <ferror@plt+0x311b0>
  409aa4:	ldr	x0, [sp, #208]
  409aa8:	cbz	x0, 409ab8 <ferror@plt+0x7238>
  409aac:	ldrsb	w1, [x0, #3]
  409ab0:	tbnz	w1, #31, 409b10 <ferror@plt+0x7290>
  409ab4:	bl	402640 <free@plt>
  409ab8:	ldr	x0, [sp, #200]
  409abc:	cbz	x0, 409acc <ferror@plt+0x724c>
  409ac0:	ldrsb	w1, [x0, #3]
  409ac4:	tbnz	w1, #31, 409b20 <ferror@plt+0x72a0>
  409ac8:	bl	402640 <free@plt>
  409acc:	ldr	x0, [sp, #192]
  409ad0:	cbz	x0, 409ae0 <ferror@plt+0x7260>
  409ad4:	ldrsb	w1, [x0, #3]
  409ad8:	tbnz	w1, #31, 409b18 <ferror@plt+0x7298>
  409adc:	bl	402640 <free@plt>
  409ae0:	ldr	w0, [sp, #140]
  409ae4:	cmn	w0, #0x1
  409ae8:	b.eq	409afc <ferror@plt+0x727c>  // b.none
  409aec:	ldr	x0, [sp, #128]
  409af0:	ldr	x1, [sp, #176]
  409af4:	ldr	x0, [x0]
  409af8:	bl	410da0 <ferror@plt+0xe520>
  409afc:	mov	w0, w19
  409b00:	ldp	x19, x20, [sp, #16]
  409b04:	ldp	x21, x22, [sp, #32]
  409b08:	ldp	x29, x30, [sp], #224
  409b0c:	ret
  409b10:	str	wzr, [x0, #4]
  409b14:	b	409ab8 <ferror@plt+0x7238>
  409b18:	str	wzr, [x0, #4]
  409b1c:	b	409ae0 <ferror@plt+0x7260>
  409b20:	str	wzr, [x0, #4]
  409b24:	b	409acc <ferror@plt+0x724c>
  409b28:	stp	x29, x30, [sp, #-480]!
  409b2c:	mov	x29, sp
  409b30:	stp	x21, x22, [sp, #32]
  409b34:	mov	x21, x0
  409b38:	str	x0, [sp, #184]
  409b3c:	ldr	x0, [x0]
  409b40:	stp	x19, x20, [sp, #16]
  409b44:	mov	x19, x1
  409b48:	mov	w20, w2
  409b4c:	bl	40f0f0 <ferror@plt+0xc870>
  409b50:	mov	w1, #0x0                   	// #0
  409b54:	mov	x0, x19
  409b58:	bl	4338e0 <ferror@plt+0x31060>
  409b5c:	cmp	w0, #0x1
  409b60:	ldrb	w1, [x21, #108]
  409b64:	mov	w3, w0
  409b68:	cset	w0, ls  // ls = plast
  409b6c:	eor	w1, w1, #0x1
  409b70:	orr	w0, w0, w1
  409b74:	tst	w0, #0xff
  409b78:	b.eq	409b8c <ferror@plt+0x730c>  // b.none
  409b7c:	ldp	x19, x20, [sp, #16]
  409b80:	ldp	x21, x22, [sp, #32]
  409b84:	ldp	x29, x30, [sp], #480
  409b88:	ret
  409b8c:	ldr	w0, [x21, #200]
  409b90:	cmp	w0, w3
  409b94:	b.ne	409ba0 <ferror@plt+0x7320>  // b.any
  409b98:	ldr	w0, [x19, #120]
  409b9c:	cbz	w0, 409b7c <ferror@plt+0x72fc>
  409ba0:	ldr	x21, [sp, #184]
  409ba4:	mov	x1, #0x8                   	// #8
  409ba8:	str	wzr, [sp, #156]
  409bac:	str	x1, [sp, #160]
  409bb0:	ldr	x0, [x21]
  409bb4:	str	w3, [x21, #200]
  409bb8:	bl	40e7b8 <ferror@plt+0xbf38>
  409bbc:	mov	x1, x0
  409bc0:	ldr	x0, [x21]
  409bc4:	str	x1, [sp, #192]
  409bc8:	mov	x1, #0x0                   	// #0
  409bcc:	bl	40e728 <ferror@plt+0xbea8>
  409bd0:	add	x0, sp, #0x148
  409bd4:	mov	w3, w20
  409bd8:	mov	x2, x19
  409bdc:	mov	x1, x21
  409be0:	bl	408a30 <ferror@plt+0x61b0>
  409be4:	ldr	x0, [sp, #464]
  409be8:	cbz	x0, 40a340 <ferror@plt+0x7ac0>
  409bec:	stp	x23, x24, [sp, #48]
  409bf0:	stp	x25, x26, [sp, #64]
  409bf4:	stp	x27, x28, [sp, #80]
  409bf8:	adrp	x28, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409bfc:	add	x1, x28, #0x778
  409c00:	str	x1, [sp, #136]
  409c04:	nop
  409c08:	ldr	w1, [x0, #4]
  409c0c:	ldr	w2, [sp, #156]
  409c10:	cmp	w1, w2
  409c14:	b.le	40a334 <ferror@plt+0x7ab4>
  409c18:	ldr	x1, [sp, #184]
  409c1c:	ldr	x3, [sp, #160]
  409c20:	ldrb	w1, [x1, #223]
  409c24:	add	x20, x0, x3
  409c28:	cbz	w1, 40ae74 <ferror@plt+0x85f4>
  409c2c:	cbnz	w2, 40b22c <ferror@plt+0x89ac>
  409c30:	ldp	w1, w0, [x20]
  409c34:	str	x1, [sp, #96]
  409c38:	str	x0, [sp, #128]
  409c3c:	cmp	x0, x1
  409c40:	b.lt	40a314 <ferror@plt+0x7a94>  // b.tstop
  409c44:	nop
  409c48:	ldr	x2, [sp, #96]
  409c4c:	ldr	x0, [sp, #352]
  409c50:	mov	w1, w2
  409c54:	mov	w22, w2
  409c58:	mov	w24, w2
  409c5c:	bl	415540 <ferror@plt+0x12cc0>
  409c60:	mov	x19, x0
  409c64:	mov	x23, x1
  409c68:	cbz	x0, 40a2fc <ferror@plt+0x7a7c>
  409c6c:	ldr	x0, [sp, #456]
  409c70:	mov	w20, #0x0                   	// #0
  409c74:	mov	w25, #0xffffffff            	// #-1
  409c78:	mov	w26, #0xfffffffe            	// #-2
  409c7c:	cbz	x0, 409cd4 <ferror@plt+0x7454>
  409c80:	ldr	w1, [x0, #4]
  409c84:	cmp	w1, w20
  409c88:	b.ls	409cd4 <ferror@plt+0x7454>  // b.plast
  409c8c:	add	x0, x0, w20, uxtw #3
  409c90:	ldr	x27, [x0, #8]
  409c94:	mov	x0, x27
  409c98:	bl	4357a0 <ferror@plt+0x32f20>
  409c9c:	tst	w0, #0xff
  409ca0:	b.eq	409cc8 <ferror@plt+0x7448>  // b.none
  409ca4:	ldp	w1, w0, [x27]
  409ca8:	cmp	w1, w0
  409cac:	b.ne	40b594 <ferror@plt+0x8d14>  // b.any
  409cb0:	ldr	x1, [sp, #352]
  409cb4:	mov	w2, w24
  409cb8:	mov	x0, x27
  409cbc:	bl	435680 <ferror@plt+0x32e00>
  409cc0:	tst	w0, #0xff
  409cc4:	b.ne	40a6f4 <ferror@plt+0x7e74>  // b.any
  409cc8:	ldr	x0, [sp, #456]
  409ccc:	add	w20, w20, #0x1
  409cd0:	cbnz	x0, 409c80 <ferror@plt+0x7400>
  409cd4:	ldr	w0, [sp, #396]
  409cd8:	cmn	w0, #0x1
  409cdc:	b.eq	409cf8 <ferror@plt+0x7478>  // b.none
  409ce0:	ldr	x0, [sp, #384]
  409ce4:	ldr	x1, [sp, #432]
  409ce8:	ldr	x0, [x0]
  409cec:	bl	410da0 <ferror@plt+0xe520>
  409cf0:	mov	w0, #0xffffffff            	// #-1
  409cf4:	str	w0, [sp, #396]
  409cf8:	cmp	w23, #0x0
  409cfc:	mov	w20, w23
  409d00:	b.le	40b02c <ferror@plt+0x87ac>
  409d04:	add	x23, x19, w23, sxtw
  409d08:	ldurb	w0, [x23, #-1]
  409d0c:	cmp	w0, #0x20
  409d10:	and	w0, w0, #0xfffffffb
  409d14:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  409d18:	b.ne	409d28 <ferror@plt+0x74a8>  // b.any
  409d1c:	sub	x23, x23, #0x1
  409d20:	subs	w20, w20, #0x1
  409d24:	b.ne	409d08 <ferror@plt+0x7488>  // b.any
  409d28:	ldrb	w1, [sp, #442]
  409d2c:	ldrsw	x0, [sp, #476]
  409d30:	add	x19, x19, x0
  409d34:	cbz	w1, 40a89c <ferror@plt+0x801c>
  409d38:	mov	w0, w24
  409d3c:	bl	405ff0 <ferror@plt+0x3770>
  409d40:	ldr	w1, [sp, #472]
  409d44:	mov	w23, w0
  409d48:	mov	w25, #0x0                   	// #0
  409d4c:	sub	w1, w1, w0
  409d50:	cmp	w1, #0x0
  409d54:	b.le	409d78 <ferror@plt+0x74f8>
  409d58:	ldr	x0, [sp, #336]
  409d5c:	mov	w1, #0x20                  	// #32
  409d60:	add	w25, w25, #0x1
  409d64:	bl	40f150 <ferror@plt+0xc8d0>
  409d68:	ldr	w0, [sp, #472]
  409d6c:	sub	w0, w0, w23
  409d70:	cmp	w0, w25
  409d74:	b.gt	409d58 <ferror@plt+0x74d8>
  409d78:	ldr	x0, [sp, #336]
  409d7c:	mov	w2, w22
  409d80:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  409d84:	add	x1, x1, #0x800
  409d88:	bl	410c58 <ferror@plt+0xe3d8>
  409d8c:	ldr	w2, [sp, #476]
  409d90:	add	w28, w2, #0x1
  409d94:	cmp	w28, w20
  409d98:	b.gt	40a8b8 <ferror@plt+0x8038>
  409d9c:	add	w20, w20, #0x1
  409da0:	add	x26, sp, #0x12c
  409da4:	add	x27, sp, #0x180
  409da8:	mov	w23, #0x7fffffff            	// #2147483647
  409dac:	mov	w25, #0x0                   	// #0
  409db0:	b	409df0 <ferror@plt+0x7570>
  409db4:	ldrb	w0, [x19]
  409db8:	mov	w1, #0x20                  	// #32
  409dbc:	and	w3, w0, #0xfffffffb
  409dc0:	cmp	w0, #0x0
  409dc4:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  409dc8:	cset	w3, ne  // ne = any
  409dcc:	cmp	w0, w1
  409dd0:	csel	w3, w3, wzr, ne  // ne = any
  409dd4:	cbnz	w3, 409e30 <ferror@plt+0x75b0>
  409dd8:	ldr	x0, [sp, #336]
  409ddc:	add	w28, w28, #0x1
  409de0:	add	x19, x19, #0x1
  409de4:	bl	40f150 <ferror@plt+0xc8d0>
  409de8:	cmp	w28, w20
  409dec:	b.eq	409e60 <ferror@plt+0x75e0>  // b.none
  409df0:	ldrb	w0, [sp, #440]
  409df4:	cbz	w0, 409db4 <ferror@plt+0x7534>
  409df8:	mov	x6, x26
  409dfc:	add	x5, sp, #0x128
  409e00:	mov	w2, w28
  409e04:	mov	w1, w22
  409e08:	add	x0, sp, #0x148
  409e0c:	mov	w4, #0x7fffffff            	// #2147483647
  409e10:	mov	w3, #0x0                   	// #0
  409e14:	bl	408280 <ferror@plt+0x5a00>
  409e18:	tst	w0, #0xff
  409e1c:	b.eq	40a3b4 <ferror@plt+0x7b34>  // b.none
  409e20:	ldr	w1, [sp, #296]
  409e24:	mov	x0, x27
  409e28:	bl	408478 <ferror@plt+0x5bf8>
  409e2c:	b	409db4 <ferror@plt+0x7534>
  409e30:	mov	w1, w0
  409e34:	mov	w25, w28
  409e38:	mov	w0, #0x7fffffff            	// #2147483647
  409e3c:	cmp	w23, w0
  409e40:	b.ne	409dd8 <ferror@plt+0x7558>  // b.any
  409e44:	ldr	x0, [sp, #336]
  409e48:	mov	w23, w28
  409e4c:	add	w28, w28, #0x1
  409e50:	add	x19, x19, #0x1
  409e54:	bl	40f150 <ferror@plt+0xc8d0>
  409e58:	cmp	w28, w20
  409e5c:	b.ne	409df0 <ferror@plt+0x7570>  // b.any
  409e60:	ldr	w0, [sp, #396]
  409e64:	cmn	w0, #0x1
  409e68:	b.eq	409e84 <ferror@plt+0x7604>  // b.none
  409e6c:	ldr	x0, [sp, #384]
  409e70:	ldr	x1, [sp, #432]
  409e74:	ldr	x0, [x0]
  409e78:	bl	410da0 <ferror@plt+0xe520>
  409e7c:	mov	w0, #0xffffffff            	// #-1
  409e80:	str	w0, [sp, #396]
  409e84:	ldr	x0, [sp, #336]
  409e88:	bl	40f0f0 <ferror@plt+0xc870>
  409e8c:	ldr	x0, [sp, #448]
  409e90:	cbz	x0, 40a3f0 <ferror@plt+0x7b70>
  409e94:	ldr	w4, [x0, #4]
  409e98:	add	x2, x0, #0x8
  409e9c:	mov	w3, #0x28                  	// #40
  409ea0:	mov	x1, x2
  409ea4:	umaddl	x3, w4, w3, x2
  409ea8:	cmp	x3, x1
  409eac:	b.eq	40a08c <ferror@plt+0x780c>  // b.none
  409eb0:	ldr	w5, [x1, #16]
  409eb4:	cmp	w5, #0x2
  409eb8:	b.eq	40a08c <ferror@plt+0x780c>  // b.none
  409ebc:	ldr	w6, [x1]
  409ec0:	ldr	w5, [x1, #8]
  409ec4:	cmp	w6, w5
  409ec8:	b.hi	40b51c <ferror@plt+0x8c9c>  // b.pmore
  409ecc:	cmp	w6, w22
  409ed0:	add	x1, x1, #0x28
  409ed4:	ccmp	w5, w22, #0x0, ls  // ls = plast
  409ed8:	b.cc	409ea8 <ferror@plt+0x7628>  // b.lo, b.ul, b.last
  409edc:	sub	w4, w4, #0x1
  409ee0:	add	x0, x0, #0x30
  409ee4:	mov	w1, #0x28                  	// #40
  409ee8:	ldr	w20, [sp, #364]
  409eec:	add	w3, w25, #0x1
  409ef0:	umaddl	x0, w4, w1, x0
  409ef4:	add	w20, w20, #0x1
  409ef8:	ldr	w1, [x2]
  409efc:	cmp	w1, w22
  409f00:	b.hi	409f1c <ferror@plt+0x769c>  // b.pmore
  409f04:	ldr	w1, [x2, #8]
  409f08:	cmp	w1, w22
  409f0c:	b.eq	40b1f8 <ferror@plt+0x8978>  // b.none
  409f10:	cmp	w25, w20
  409f14:	ccmp	w1, w22, #0x0, ge  // ge = tcont
  409f18:	csel	w20, w3, w20, hi  // hi = pmore
  409f1c:	add	x2, x2, #0x28
  409f20:	cmp	x0, x2
  409f24:	b.ne	409ef8 <ferror@plt+0x7678>  // b.any
  409f28:	ldrb	w0, [sp, #442]
  409f2c:	cbz	w0, 409f90 <ferror@plt+0x7710>
  409f30:	ldr	w0, [sp, #472]
  409f34:	mov	w19, #0x0                   	// #0
  409f38:	cmp	w0, #0x3
  409f3c:	b.le	409f60 <ferror@plt+0x76e0>
  409f40:	ldr	x0, [sp, #336]
  409f44:	mov	w1, #0x20                  	// #32
  409f48:	add	w19, w19, #0x1
  409f4c:	bl	40f150 <ferror@plt+0xc8d0>
  409f50:	ldr	w0, [sp, #472]
  409f54:	sub	w1, w0, #0x3
  409f58:	cmp	w1, w19
  409f5c:	b.gt	409f40 <ferror@plt+0x76c0>
  409f60:	cmp	w0, w19
  409f64:	b.le	409f84 <ferror@plt+0x7704>
  409f68:	ldr	x0, [sp, #336]
  409f6c:	mov	w1, #0x20                  	// #32
  409f70:	add	w19, w19, #0x1
  409f74:	bl	40f150 <ferror@plt+0xc8d0>
  409f78:	ldr	w0, [sp, #472]
  409f7c:	cmp	w0, w19
  409f80:	b.gt	409f68 <ferror@plt+0x76e8>
  409f84:	ldr	x1, [sp, #136]
  409f88:	ldr	x0, [sp, #336]
  409f8c:	bl	410da0 <ferror@plt+0xe520>
  409f90:	ldr	x0, [sp, #336]
  409f94:	mov	w1, #0x20                  	// #32
  409f98:	add	x26, sp, #0x12c
  409f9c:	add	x27, sp, #0x180
  409fa0:	bl	40f150 <ferror@plt+0xc8d0>
  409fa4:	ldr	w19, [sp, #476]
  409fa8:	add	w19, w19, #0x1
  409fac:	cmp	w19, w20
  409fb0:	b.lt	409ffc <ferror@plt+0x777c>  // b.tstop
  409fb4:	b	40a060 <ferror@plt+0x77e0>
  409fb8:	ldr	w1, [sp, #296]
  409fbc:	mov	x0, x27
  409fc0:	bl	408478 <ferror@plt+0x5bf8>
  409fc4:	ldrb	w0, [sp, #300]
  409fc8:	cbz	w0, 40a8c4 <ferror@plt+0x8044>
  409fcc:	ldr	w0, [sp, #296]
  409fd0:	mov	w1, #0x5e                  	// #94
  409fd4:	cmp	w0, #0x2
  409fd8:	b.gt	409fe8 <ferror@plt+0x7768>
  409fdc:	ldr	x1, [sp, #328]
  409fe0:	add	x0, x1, w0, sxtw
  409fe4:	ldrb	w1, [x0, #116]
  409fe8:	ldr	x0, [sp, #336]
  409fec:	bl	40f150 <ferror@plt+0xc8d0>
  409ff0:	add	w19, w19, #0x1
  409ff4:	cmp	w19, w20
  409ff8:	b.eq	40a060 <ferror@plt+0x77e0>  // b.none
  409ffc:	mov	x6, x26
  40a000:	add	x5, sp, #0x128
  40a004:	mov	w4, w25
  40a008:	mov	w3, w23
  40a00c:	mov	w2, w19
  40a010:	mov	w1, w22
  40a014:	add	x0, sp, #0x148
  40a018:	bl	408280 <ferror@plt+0x5a00>
  40a01c:	tst	w0, #0xff
  40a020:	b.ne	409fb8 <ferror@plt+0x7738>  // b.any
  40a024:	ldr	w0, [sp, #396]
  40a028:	cmn	w0, #0x1
  40a02c:	b.eq	40a048 <ferror@plt+0x77c8>  // b.none
  40a030:	ldr	x0, [sp, #384]
  40a034:	ldr	x1, [sp, #432]
  40a038:	ldr	x0, [x0]
  40a03c:	bl	410da0 <ferror@plt+0xe520>
  40a040:	mov	w0, #0xffffffff            	// #-1
  40a044:	str	w0, [sp, #396]
  40a048:	ldr	x0, [sp, #336]
  40a04c:	add	w19, w19, #0x1
  40a050:	mov	w1, #0x20                  	// #32
  40a054:	bl	40f150 <ferror@plt+0xc8d0>
  40a058:	cmp	w19, w20
  40a05c:	b.ne	409ffc <ferror@plt+0x777c>  // b.any
  40a060:	ldr	w0, [sp, #396]
  40a064:	cmn	w0, #0x1
  40a068:	b.eq	40a084 <ferror@plt+0x7804>  // b.none
  40a06c:	ldr	x0, [sp, #384]
  40a070:	ldr	x1, [sp, #432]
  40a074:	ldr	x0, [x0]
  40a078:	bl	410da0 <ferror@plt+0xe520>
  40a07c:	mov	w0, #0xffffffff            	// #-1
  40a080:	str	w0, [sp, #396]
  40a084:	ldr	x0, [sp, #336]
  40a088:	bl	40f0f0 <ferror@plt+0xc870>
  40a08c:	ldrb	w0, [sp, #441]
  40a090:	cbz	w0, 40a3f0 <ferror@plt+0x7b70>
  40a094:	ldr	x26, [sp, #448]
  40a098:	cbz	x26, 40a3f0 <ferror@plt+0x7b70>
  40a09c:	adrp	x0, 40b000 <ferror@plt+0x8780>
  40a0a0:	add	x27, x0, #0x5b0
  40a0a4:	mov	x25, #0x0                   	// #0
  40a0a8:	mov	w23, #0x0                   	// #0
  40a0ac:	mov	x19, #0x4                   	// #4
  40a0b0:	ldr	w0, [x26, #4]
  40a0b4:	cmp	w0, w23
  40a0b8:	b.ls	40a180 <ferror@plt+0x7900>  // b.plast
  40a0bc:	mov	w20, w23
  40a0c0:	add	x1, x20, w23, uxtw #2
  40a0c4:	add	x1, x26, x1, lsl #3
  40a0c8:	ldr	x0, [x1, #40]
  40a0cc:	cbz	x0, 40a178 <ferror@plt+0x78f8>
  40a0d0:	ldr	w3, [x1, #28]
  40a0d4:	cmp	w3, w22
  40a0d8:	b.ne	40a178 <ferror@plt+0x78f8>  // b.any
  40a0dc:	ldr	w4, [x1, #32]
  40a0e0:	ldr	w3, [sp, #476]
  40a0e4:	cmp	w4, w3
  40a0e8:	b.le	40a178 <ferror@plt+0x78f8>
  40a0ec:	ldr	x3, [x0]
  40a0f0:	ldr	x3, [x3, #16]
  40a0f4:	cmp	x3, x27
  40a0f8:	b.ne	40b354 <ferror@plt+0x8ad4>  // b.any
  40a0fc:	ldr	x6, [x0, #8]
  40a100:	mov	w21, #0x0                   	// #0
  40a104:	cbz	x6, 40b2b0 <ferror@plt+0x8a30>
  40a108:	add	x20, x20, x20, lsl #2
  40a10c:	mov	x0, x6
  40a110:	str	x6, [sp, #104]
  40a114:	bl	402270 <strlen@plt>
  40a118:	add	x26, x26, x20, lsl #3
  40a11c:	mov	x8, x0
  40a120:	ldr	x6, [sp, #104]
  40a124:	ldr	w20, [x26, #32]
  40a128:	cbz	x25, 40b41c <ferror@plt+0x8b9c>
  40a12c:	ldp	w0, w28, [x25]
  40a130:	add	w10, w28, #0x1
  40a134:	ubfx	x0, x0, #0, #31
  40a138:	mov	w1, w10
  40a13c:	cmp	w0, w28
  40a140:	b.eq	40b268 <ferror@plt+0x89e8>  // b.none
  40a144:	mov	w0, #0x28                  	// #40
  40a148:	mov	x3, #0x8                   	// #8
  40a14c:	ldr	x26, [sp, #448]
  40a150:	umaddl	x9, w28, w0, x3
  40a154:	str	w1, [x25, #4]
  40a158:	add	x1, x25, x9
  40a15c:	str	w23, [x25, x9]
  40a160:	str	w20, [x1, #4]
  40a164:	str	x6, [x1, #8]
  40a168:	strb	w21, [x1, #16]
  40a16c:	str	x8, [x1, #24]
  40a170:	str	wzr, [x1, #32]
  40a174:	nop
  40a178:	add	w23, w23, #0x1
  40a17c:	cbnz	x26, 40a0b0 <ferror@plt+0x7830>
  40a180:	cbz	x25, 40a3f0 <ferror@plt+0x7b70>
  40a184:	ldr	w1, [x25, #4]
  40a188:	cbz	w1, 40a3dc <ferror@plt+0x7b5c>
  40a18c:	cmp	w1, #0x1
  40a190:	mov	w2, #0x1                   	// #1
  40a194:	mov	w0, #0x0                   	// #0
  40a198:	b.hi	40ab2c <ferror@plt+0x82ac>  // b.pmore
  40a19c:	mov	w1, #0x1                   	// #1
  40a1a0:	mov	w21, w1
  40a1a4:	mov	w5, #0x7fffffff            	// #2147483647
  40a1a8:	mov	w7, #0x28                  	// #40
  40a1ac:	ubfiz	x1, x0, #2, #32
  40a1b0:	umaddl	x4, w0, w7, x25
  40a1b4:	add	x1, x1, w0, uxtw
  40a1b8:	sub	w0, w0, #0x1
  40a1bc:	add	x1, x25, x1, lsl #3
  40a1c0:	ldrsw	x3, [x4, #12]
  40a1c4:	ldr	x6, [x1, #32]
  40a1c8:	add	x3, x3, x6
  40a1cc:	cmp	x3, w5, sxtw
  40a1d0:	cinc	w3, w21, cs  // cs = hs, nlast
  40a1d4:	str	w3, [x1, #40]
  40a1d8:	mov	w21, w3
  40a1dc:	cmp	w2, w0
  40a1e0:	b.ls	40ab58 <ferror@plt+0x82d8>  // b.plast
  40a1e4:	ldr	w5, [x4, #12]
  40a1e8:	b	40a1ac <ferror@plt+0x792c>
  40a1ec:	cmp	w27, w24
  40a1f0:	b.gt	40a230 <ferror@plt+0x79b0>
  40a1f4:	mov	w28, w27
  40a1f8:	ldr	x0, [sp, #336]
  40a1fc:	add	w28, w28, #0x1
  40a200:	mov	w1, #0x2d                  	// #45
  40a204:	bl	40f150 <ferror@plt+0xc8d0>
  40a208:	cmp	w24, w28
  40a20c:	b.ge	40a1f8 <ferror@plt+0x7978>  // b.tcont
  40a210:	cmp	w27, w24
  40a214:	sub	w24, w24, w27
  40a218:	csel	w24, w24, wzr, le
  40a21c:	add	w2, w27, #0x1
  40a220:	add	w27, w24, w2
  40a224:	ldr	w0, [sp, #396]
  40a228:	cmn	w0, #0x1
  40a22c:	b.eq	40a244 <ferror@plt+0x79c4>  // b.none
  40a230:	ldr	x0, [sp, #384]
  40a234:	ldr	x1, [sp, #432]
  40a238:	ldr	x0, [x0]
  40a23c:	bl	410da0 <ferror@plt+0xe520>
  40a240:	str	w26, [sp, #396]
  40a244:	ldr	x0, [x23, #24]
  40a248:	cbnz	x0, 40aa50 <ferror@plt+0x81d0>
  40a24c:	ldr	w0, [x19, #4]
  40a250:	add	w25, w25, #0x1
  40a254:	cmp	w25, w0
  40a258:	b.cc	40a4d8 <ferror@plt+0x7c58>  // b.lo, b.ul, b.last
  40a25c:	cmp	w27, #0x0
  40a260:	b.le	40a294 <ferror@plt+0x7a14>
  40a264:	ldr	w0, [sp, #396]
  40a268:	cmn	w0, #0x1
  40a26c:	b.eq	40a288 <ferror@plt+0x7a08>  // b.none
  40a270:	ldr	x0, [sp, #384]
  40a274:	ldr	x1, [sp, #432]
  40a278:	ldr	x0, [x0]
  40a27c:	bl	410da0 <ferror@plt+0xe520>
  40a280:	mov	w0, #0xffffffff            	// #-1
  40a284:	str	w0, [sp, #396]
  40a288:	ldr	x0, [sp, #336]
  40a28c:	bl	40f0f0 <ferror@plt+0xc870>
  40a290:	ldr	w27, [sp, #476]
  40a294:	tbz	w27, #31, 40a2ac <ferror@plt+0x7a2c>
  40a298:	ldr	x0, [sp, #336]
  40a29c:	mov	w1, #0x20                  	// #32
  40a2a0:	bl	40f150 <ferror@plt+0xc8d0>
  40a2a4:	adds	w27, w27, #0x1
  40a2a8:	b.ne	40a298 <ferror@plt+0x7a18>  // b.any
  40a2ac:	cbz	x19, 40a2fc <ferror@plt+0x7a7c>
  40a2b0:	ldr	w0, [x19, #4]
  40a2b4:	cbz	w0, 40a2ec <ferror@plt+0x7a6c>
  40a2b8:	mov	w20, #0x0                   	// #0
  40a2bc:	add	x1, x19, w20, uxtw #3
  40a2c0:	ldr	x22, [x1, #8]
  40a2c4:	cbz	x22, 40a9f8 <ferror@plt+0x8178>
  40a2c8:	ldr	x0, [x22, #16]
  40a2cc:	add	w20, w20, #0x1
  40a2d0:	bl	402640 <free@plt>
  40a2d4:	mov	x0, x22
  40a2d8:	mov	x1, #0x28                  	// #40
  40a2dc:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40a2e0:	ldr	w0, [x19, #4]
  40a2e4:	cmp	w20, w0
  40a2e8:	b.cc	40a2bc <ferror@plt+0x7a3c>  // b.lo, b.ul, b.last
  40a2ec:	ldrsb	w0, [x19, #3]
  40a2f0:	tbnz	w0, #31, 40a9d8 <ferror@plt+0x8158>
  40a2f4:	mov	x0, x19
  40a2f8:	bl	402640 <free@plt>
  40a2fc:	ldr	x0, [sp, #96]
  40a300:	add	x1, x0, #0x1
  40a304:	str	x1, [sp, #96]
  40a308:	ldr	x0, [sp, #128]
  40a30c:	cmp	x0, x1
  40a310:	b.ge	409c48 <ferror@plt+0x73c8>  // b.tcont
  40a314:	ldr	w1, [sp, #156]
  40a318:	ldr	x0, [sp, #464]
  40a31c:	add	w1, w1, #0x1
  40a320:	str	w1, [sp, #156]
  40a324:	ldr	x1, [sp, #160]
  40a328:	add	x1, x1, #0x8
  40a32c:	str	x1, [sp, #160]
  40a330:	cbnz	x0, 409c08 <ferror@plt+0x7388>
  40a334:	ldp	x23, x24, [sp, #48]
  40a338:	ldp	x25, x26, [sp, #64]
  40a33c:	ldp	x27, x28, [sp, #80]
  40a340:	ldp	x0, x1, [sp, #184]
  40a344:	ldr	x0, [x0]
  40a348:	bl	40e728 <ferror@plt+0xbea8>
  40a34c:	ldr	x0, [sp, #464]
  40a350:	cbz	x0, 40a360 <ferror@plt+0x7ae0>
  40a354:	ldrsb	w1, [x0, #3]
  40a358:	tbnz	w1, #31, 40b388 <ferror@plt+0x8b08>
  40a35c:	bl	402640 <free@plt>
  40a360:	ldr	x0, [sp, #456]
  40a364:	cbz	x0, 40a374 <ferror@plt+0x7af4>
  40a368:	ldrsb	w1, [x0, #3]
  40a36c:	tbnz	w1, #31, 40b36c <ferror@plt+0x8aec>
  40a370:	bl	402640 <free@plt>
  40a374:	ldr	x0, [sp, #448]
  40a378:	cbz	x0, 40a388 <ferror@plt+0x7b08>
  40a37c:	ldrsb	w1, [x0, #3]
  40a380:	tbnz	w1, #31, 40b374 <ferror@plt+0x8af4>
  40a384:	bl	402640 <free@plt>
  40a388:	ldr	w0, [sp, #396]
  40a38c:	cmn	w0, #0x1
  40a390:	b.eq	409b7c <ferror@plt+0x72fc>  // b.none
  40a394:	ldr	x0, [sp, #384]
  40a398:	ldr	x1, [sp, #432]
  40a39c:	ldr	x0, [x0]
  40a3a0:	bl	410da0 <ferror@plt+0xe520>
  40a3a4:	ldp	x19, x20, [sp, #16]
  40a3a8:	ldp	x21, x22, [sp, #32]
  40a3ac:	ldp	x29, x30, [sp], #480
  40a3b0:	ret
  40a3b4:	ldr	w0, [sp, #396]
  40a3b8:	cmn	w0, #0x1
  40a3bc:	b.eq	409db4 <ferror@plt+0x7534>  // b.none
  40a3c0:	ldr	x0, [sp, #384]
  40a3c4:	ldr	x1, [sp, #432]
  40a3c8:	ldr	x0, [x0]
  40a3cc:	bl	410da0 <ferror@plt+0xe520>
  40a3d0:	mov	w0, #0xffffffff            	// #-1
  40a3d4:	str	w0, [sp, #396]
  40a3d8:	b	409db4 <ferror@plt+0x7534>
  40a3dc:	ldrsb	w0, [x25, #3]
  40a3e0:	tbnz	w0, #31, 40a3f0 <ferror@plt+0x7b70>
  40a3e4:	mov	x0, x25
  40a3e8:	bl	402640 <free@plt>
  40a3ec:	nop
  40a3f0:	ldr	x0, [sp, #456]
  40a3f4:	mov	x19, #0x0                   	// #0
  40a3f8:	ldr	x1, [sp, #352]
  40a3fc:	str	x1, [sp, #144]
  40a400:	mov	w25, #0x0                   	// #0
  40a404:	cbz	x0, 40aa08 <ferror@plt+0x8188>
  40a408:	ldr	w1, [x0, #4]
  40a40c:	cmp	w1, w25
  40a410:	b.ls	40a450 <ferror@plt+0x7bd0>  // b.plast
  40a414:	add	x0, x0, w25, uxtw #3
  40a418:	ldr	x26, [x0, #8]
  40a41c:	mov	x0, x26
  40a420:	bl	4357a0 <ferror@plt+0x32f20>
  40a424:	tst	w0, #0xff
  40a428:	b.ne	40a444 <ferror@plt+0x7bc4>  // b.any
  40a42c:	ldr	x1, [sp, #352]
  40a430:	mov	w2, w24
  40a434:	mov	x0, x26
  40a438:	bl	435680 <ferror@plt+0x32e00>
  40a43c:	tst	w0, #0xff
  40a440:	b.ne	40a584 <ferror@plt+0x7d04>  // b.any
  40a444:	ldr	x0, [sp, #456]
  40a448:	add	w25, w25, #0x1
  40a44c:	cbnz	x0, 40a408 <ferror@plt+0x7b88>
  40a450:	ldr	w27, [sp, #476]
  40a454:	cbz	x19, 40a25c <ferror@plt+0x79dc>
  40a458:	ldr	w0, [x19, #4]
  40a45c:	cbz	w0, 40a25c <ferror@plt+0x79dc>
  40a460:	ldrb	w0, [sp, #442]
  40a464:	cbz	w0, 40a4d0 <ferror@plt+0x7c50>
  40a468:	ldr	w0, [sp, #472]
  40a46c:	mov	w20, #0x0                   	// #0
  40a470:	cmp	w0, #0x3
  40a474:	b.le	40a498 <ferror@plt+0x7c18>
  40a478:	ldr	x0, [sp, #336]
  40a47c:	mov	w1, #0x20                  	// #32
  40a480:	add	w20, w20, #0x1
  40a484:	bl	40f150 <ferror@plt+0xc8d0>
  40a488:	ldr	w0, [sp, #472]
  40a48c:	sub	w1, w0, #0x3
  40a490:	cmp	w1, w20
  40a494:	b.gt	40a478 <ferror@plt+0x7bf8>
  40a498:	cmp	w0, w20
  40a49c:	b.le	40a4bc <ferror@plt+0x7c3c>
  40a4a0:	ldr	x0, [sp, #336]
  40a4a4:	mov	w1, #0x20                  	// #32
  40a4a8:	add	w20, w20, #0x1
  40a4ac:	bl	40f150 <ferror@plt+0xc8d0>
  40a4b0:	ldr	w0, [sp, #472]
  40a4b4:	cmp	w0, w20
  40a4b8:	b.gt	40a4a0 <ferror@plt+0x7c20>
  40a4bc:	ldr	x1, [sp, #136]
  40a4c0:	ldr	x0, [sp, #336]
  40a4c4:	bl	410da0 <ferror@plt+0xe520>
  40a4c8:	ldr	w0, [x19, #4]
  40a4cc:	cbz	w0, 40a25c <ferror@plt+0x79dc>
  40a4d0:	mov	w25, #0x0                   	// #0
  40a4d4:	mov	w26, #0xffffffff            	// #-1
  40a4d8:	add	x0, x19, w25, uxtw #3
  40a4dc:	ldr	x23, [x0, #8]
  40a4e0:	ldp	w20, w24, [x23]
  40a4e4:	add	w0, w24, #0x1
  40a4e8:	cmp	w20, w0
  40a4ec:	b.eq	40aafc <ferror@plt+0x827c>  // b.none
  40a4f0:	ldr	x0, [sp, #448]
  40a4f4:	cbz	x0, 40a510 <ferror@plt+0x7c90>
  40a4f8:	ldr	w1, [x0, #4]
  40a4fc:	add	x0, x0, #0x8
  40a500:	mov	w3, #0x28                  	// #40
  40a504:	umaddl	x1, w1, w3, x0
  40a508:	cmp	x1, x0
  40a50c:	b.ne	40aa10 <ferror@plt+0x8190>  // b.any
  40a510:	cmp	w20, w27
  40a514:	b.lt	40b048 <ferror@plt+0x87c8>  // b.tstop
  40a518:	cmp	w20, w27
  40a51c:	b.le	40a53c <ferror@plt+0x7cbc>
  40a520:	ldr	x0, [sp, #336]
  40a524:	add	w27, w27, #0x1
  40a528:	mov	w1, #0x20                  	// #32
  40a52c:	bl	40f150 <ferror@plt+0xc8d0>
  40a530:	cmp	w20, w27
  40a534:	b.ne	40a520 <ferror@plt+0x7ca0>  // b.any
  40a538:	mov	w27, w20
  40a53c:	ldr	w0, [sp, #396]
  40a540:	cmn	w0, #0x3
  40a544:	b.eq	40a1ec <ferror@plt+0x796c>  // b.none
  40a548:	ldr	x1, [sp, #384]
  40a54c:	cmn	w0, #0x1
  40a550:	ldr	x0, [x1]
  40a554:	b.eq	40a568 <ferror@plt+0x7ce8>  // b.none
  40a558:	ldr	x1, [sp, #432]
  40a55c:	bl	410da0 <ferror@plt+0xe520>
  40a560:	ldr	x0, [sp, #384]
  40a564:	ldr	x0, [x0]
  40a568:	mov	w3, #0xfffffffd            	// #-3
  40a56c:	ldr	x1, [sp, #424]
  40a570:	str	w3, [sp, #396]
  40a574:	bl	410da0 <ferror@plt+0xe520>
  40a578:	cmp	w27, w24
  40a57c:	b.le	40a1f4 <ferror@plt+0x7974>
  40a580:	b	40a224 <ferror@plt+0x79a4>
  40a584:	ldr	w0, [x26]
  40a588:	add	x8, sp, #0x128
  40a58c:	bl	415ca0 <ferror@plt+0x13420>
  40a590:	ldr	w20, [sp, #308]
  40a594:	ldr	w0, [x26, #4]
  40a598:	add	x8, sp, #0x128
  40a59c:	bl	415ca0 <ferror@plt+0x13420>
  40a5a0:	ldr	w23, [sp, #308]
  40a5a4:	cmp	w20, w23
  40a5a8:	sub	w23, w23, #0x1
  40a5ac:	ccmp	w20, w23, #0x4, ne  // ne = any
  40a5b0:	b.gt	40a858 <ferror@plt+0x7fd8>
  40a5b4:	ldr	w0, [x26]
  40a5b8:	add	x8, sp, #0x128
  40a5bc:	bl	415ca0 <ferror@plt+0x13420>
  40a5c0:	ldr	w28, [sp, #308]
  40a5c4:	ldp	w2, w0, [x26]
  40a5c8:	sub	w5, w28, #0x1
  40a5cc:	ldr	x1, [x26, #16]
  40a5d0:	cmp	w2, w0
  40a5d4:	add	w27, w5, w1
  40a5d8:	b.ne	40a828 <ferror@plt+0x7fa8>  // b.any
  40a5dc:	cmp	w28, w27
  40a5e0:	b.le	40a5f0 <ferror@plt+0x7d70>
  40a5e4:	cmp	w27, w5
  40a5e8:	mov	w27, w5
  40a5ec:	b.ne	40a858 <ferror@plt+0x7fd8>  // b.any
  40a5f0:	cbz	x19, 40a968 <ferror@plt+0x80e8>
  40a5f4:	ldr	w0, [x19, #4]
  40a5f8:	cbz	w0, 40a680 <ferror@plt+0x7e00>
  40a5fc:	sub	w0, w0, #0x1
  40a600:	add	x0, x19, x0, lsl #3
  40a604:	ldr	x6, [x0, #8]
  40a608:	ldr	w0, [x6]
  40a60c:	cmp	w0, w20
  40a610:	b.gt	40b504 <ferror@plt+0x8c84>
  40a614:	ldr	w0, [x6, #8]
  40a618:	cmp	w0, w28
  40a61c:	b.gt	40b444 <ferror@plt+0x8bc4>
  40a620:	ldr	w0, [x6, #12]
  40a624:	cmp	w0, w28
  40a628:	b.lt	40a680 <ferror@plt+0x7e00>  // b.tstop
  40a62c:	ldr	w9, [x6, #4]
  40a630:	str	w5, [sp, #112]
  40a634:	add	w8, w9, #0x1
  40a638:	str	w8, [sp, #104]
  40a63c:	str	w9, [sp, #168]
  40a640:	cmp	w9, w5
  40a644:	str	x6, [sp, #176]
  40a648:	ccmp	w8, w5, #0x4, ne  // ne = any
  40a64c:	b.gt	40a858 <ferror@plt+0x7fd8>
  40a650:	ldr	x0, [sp, #144]
  40a654:	mov	w1, w24
  40a658:	bl	415540 <ferror@plt+0x12cc0>
  40a65c:	cmp	x0, #0x0
  40a660:	ldr	w5, [sp, #112]
  40a664:	mov	x10, x0
  40a668:	ldr	w8, [sp, #104]
  40a66c:	mov	x7, x1
  40a670:	ldr	w9, [sp, #168]
  40a674:	ccmp	w5, w1, #0x0, ne  // ne = any
  40a678:	ldr	x6, [sp, #176]
  40a67c:	b.lt	40af08 <ferror@plt+0x8688>  // b.tstop
  40a680:	fmov	d0, x20
  40a684:	mov	x0, #0x28                  	// #40
  40a688:	ldp	x1, x20, [x26, #8]
  40a68c:	mov	v0.d[1], x21
  40a690:	str	x1, [sp, #104]
  40a694:	mov	v0.s[1], w23
  40a698:	str	q0, [sp, #112]
  40a69c:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40a6a0:	mov	x23, x0
  40a6a4:	ldr	q0, [sp, #112]
  40a6a8:	ldr	x1, [sp, #104]
  40a6ac:	mov	v0.s[2], w28
  40a6b0:	mov	x0, x1
  40a6b4:	mov	v0.s[3], w27
  40a6b8:	str	q0, [x23]
  40a6bc:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  40a6c0:	ldr	w1, [x19]
  40a6c4:	add	x2, x20, #0x1
  40a6c8:	stp	x0, x20, [x23, #16]
  40a6cc:	ldr	w20, [x19, #4]
  40a6d0:	str	x2, [x23, #32]
  40a6d4:	ubfx	x1, x1, #0, #31
  40a6d8:	cmp	w1, w20
  40a6dc:	add	w28, w20, #0x1
  40a6e0:	b.eq	40a85c <ferror@plt+0x7fdc>  // b.none
  40a6e4:	add	x20, x19, w20, uxtw #3
  40a6e8:	str	w28, [x19, #4]
  40a6ec:	str	x23, [x20, #8]
  40a6f0:	b	40a444 <ferror@plt+0x7bc4>
  40a6f4:	ldr	w0, [sp, #396]
  40a6f8:	cmn	w0, #0x1
  40a6fc:	b.eq	40a714 <ferror@plt+0x7e94>  // b.none
  40a700:	ldr	x0, [sp, #384]
  40a704:	ldr	x1, [sp, #432]
  40a708:	ldr	x0, [x0]
  40a70c:	bl	410da0 <ferror@plt+0xe520>
  40a710:	str	w25, [sp, #396]
  40a714:	ldrb	w0, [sp, #442]
  40a718:	cbz	w0, 40a780 <ferror@plt+0x7f00>
  40a71c:	ldr	w0, [sp, #472]
  40a720:	mov	w28, #0x0                   	// #0
  40a724:	cmp	w0, #0x3
  40a728:	b.le	40a750 <ferror@plt+0x7ed0>
  40a72c:	nop
  40a730:	ldr	x0, [sp, #336]
  40a734:	mov	w1, #0x20                  	// #32
  40a738:	add	w28, w28, #0x1
  40a73c:	bl	40f150 <ferror@plt+0xc8d0>
  40a740:	ldr	w0, [sp, #472]
  40a744:	sub	w1, w0, #0x3
  40a748:	cmp	w1, w28
  40a74c:	b.gt	40a730 <ferror@plt+0x7eb0>
  40a750:	cmp	w0, w28
  40a754:	b.le	40a774 <ferror@plt+0x7ef4>
  40a758:	ldr	x0, [sp, #336]
  40a75c:	mov	w1, #0x2b                  	// #43
  40a760:	add	w28, w28, #0x1
  40a764:	bl	40f150 <ferror@plt+0xc8d0>
  40a768:	ldr	w0, [sp, #472]
  40a76c:	cmp	w0, w28
  40a770:	b.gt	40a758 <ferror@plt+0x7ed8>
  40a774:	ldr	x1, [sp, #136]
  40a778:	ldr	x0, [sp, #336]
  40a77c:	bl	410da0 <ferror@plt+0xe520>
  40a780:	ldr	x0, [sp, #336]
  40a784:	mov	w1, #0x2b                  	// #43
  40a788:	bl	40f150 <ferror@plt+0xc8d0>
  40a78c:	ldr	w0, [sp, #396]
  40a790:	cmn	w0, #0x2
  40a794:	b.eq	40aaec <ferror@plt+0x826c>  // b.none
  40a798:	ldr	x1, [sp, #384]
  40a79c:	cmn	w0, #0x1
  40a7a0:	ldr	x0, [x1]
  40a7a4:	b.eq	40a7b8 <ferror@plt+0x7f38>  // b.none
  40a7a8:	ldr	x1, [sp, #432]
  40a7ac:	bl	410da0 <ferror@plt+0xe520>
  40a7b0:	ldr	x0, [sp, #384]
  40a7b4:	ldr	x0, [x0]
  40a7b8:	str	w26, [sp, #396]
  40a7bc:	ldr	x1, [sp, #416]
  40a7c0:	bl	410da0 <ferror@plt+0xe520>
  40a7c4:	ldr	x0, [x27, #16]
  40a7c8:	cmp	x0, #0x1
  40a7cc:	b.eq	40a7fc <ferror@plt+0x7f7c>  // b.none
  40a7d0:	mov	x28, #0x0                   	// #0
  40a7d4:	nop
  40a7d8:	ldr	x1, [x27, #8]
  40a7dc:	ldr	x0, [sp, #336]
  40a7e0:	ldrb	w1, [x1, x28]
  40a7e4:	add	x28, x28, #0x1
  40a7e8:	bl	40f150 <ferror@plt+0xc8d0>
  40a7ec:	ldr	x0, [x27, #16]
  40a7f0:	sub	x0, x0, #0x1
  40a7f4:	cmp	x0, x28
  40a7f8:	b.hi	40a7d8 <ferror@plt+0x7f58>  // b.pmore
  40a7fc:	ldr	w0, [sp, #396]
  40a800:	cmn	w0, #0x1
  40a804:	b.eq	40a81c <ferror@plt+0x7f9c>  // b.none
  40a808:	ldr	x0, [sp, #384]
  40a80c:	ldr	x1, [sp, #432]
  40a810:	ldr	x0, [x0]
  40a814:	bl	410da0 <ferror@plt+0xe520>
  40a818:	str	w25, [sp, #396]
  40a81c:	ldr	x0, [sp, #336]
  40a820:	bl	40f0f0 <ferror@plt+0xc870>
  40a824:	b	409cc8 <ferror@plt+0x7448>
  40a828:	add	x8, sp, #0x128
  40a82c:	str	w5, [sp, #104]
  40a830:	bl	415ca0 <ferror@plt+0x13420>
  40a834:	ldr	w2, [sp, #308]
  40a838:	ldr	w5, [sp, #104]
  40a83c:	sub	w2, w2, #0x1
  40a840:	cmp	w27, w2
  40a844:	csel	w27, w27, w2, ge  // ge = tcont
  40a848:	cmp	w28, w27
  40a84c:	b.le	40a5f0 <ferror@plt+0x7d70>
  40a850:	cmp	w27, w5
  40a854:	b.eq	40a5f0 <ferror@plt+0x7d70>  // b.none
  40a858:	bl	4028dc <ferror@plt+0x5c>
  40a85c:	ldrsb	w0, [x19, #3]
  40a860:	tbnz	w0, #31, 40a8d4 <ferror@plt+0x8054>
  40a864:	mov	w1, w28
  40a868:	mov	w0, w20
  40a86c:	bl	412508 <ferror@plt+0xfc88>
  40a870:	mov	w28, w0
  40a874:	ldr	w20, [x19, #4]
  40a878:	mov	x0, x19
  40a87c:	ubfiz	x1, x28, #3, #32
  40a880:	add	x1, x1, #0x8
  40a884:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40a888:	and	w2, w28, #0x7fffffff
  40a88c:	mov	x19, x0
  40a890:	add	w28, w20, #0x1
  40a894:	stp	w2, w20, [x0]
  40a898:	b	40a6e4 <ferror@plt+0x7e64>
  40a89c:	ldr	x0, [sp, #336]
  40a8a0:	mov	w1, #0x20                  	// #32
  40a8a4:	bl	40f150 <ferror@plt+0xc8d0>
  40a8a8:	ldr	w2, [sp, #476]
  40a8ac:	add	w28, w2, #0x1
  40a8b0:	cmp	w28, w20
  40a8b4:	b.le	409d9c <ferror@plt+0x751c>
  40a8b8:	mov	w25, #0x0                   	// #0
  40a8bc:	mov	w23, #0x7fffffff            	// #2147483647
  40a8c0:	b	409e60 <ferror@plt+0x75e0>
  40a8c4:	ldr	x0, [sp, #336]
  40a8c8:	mov	w1, #0x7e                  	// #126
  40a8cc:	bl	40f150 <ferror@plt+0xc8d0>
  40a8d0:	b	409ff0 <ferror@plt+0x7770>
  40a8d4:	cmp	w28, #0x4
  40a8d8:	mov	w0, #0x4                   	// #4
  40a8dc:	csel	w1, w28, w0, cs  // cs = hs, nlast
  40a8e0:	csel	w26, w28, w0, cs  // cs = hs, nlast
  40a8e4:	add	x1, x1, #0x1
  40a8e8:	mov	x0, #0x0                   	// #0
  40a8ec:	lsl	x1, x1, #3
  40a8f0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40a8f4:	mov	x2, x0
  40a8f8:	and	x1, x26, #0x7fffffff
  40a8fc:	add	x5, x19, #0x8
  40a900:	str	x1, [x2], #8
  40a904:	cbz	w20, 40a95c <ferror@plt+0x80dc>
  40a908:	add	x1, x19, #0x18
  40a90c:	add	x4, x0, #0x18
  40a910:	cmp	x1, x2
  40a914:	sub	w1, w20, #0x1
  40a918:	ccmp	x5, x4, #0x2, hi  // hi = pmore
  40a91c:	ccmp	w1, #0x9, #0x0, cs  // cs = hs, nlast
  40a920:	b.ls	40aee0 <ferror@plt+0x8660>  // b.plast
  40a924:	lsr	w4, w20, #1
  40a928:	mov	x6, #0x8                   	// #8
  40a92c:	mov	x1, x6
  40a930:	add	x4, x6, w4, uxtw #4
  40a934:	nop
  40a938:	ldr	q0, [x19, x1]
  40a93c:	str	q0, [x0, x1]
  40a940:	add	x1, x1, #0x10
  40a944:	cmp	x4, x1
  40a948:	b.ne	40a938 <ferror@plt+0x80b8>  // b.any
  40a94c:	and	x1, x20, #0xfffffffe
  40a950:	tbz	w20, #0, 40a95c <ferror@plt+0x80dc>
  40a954:	ldr	x4, [x5, x1, lsl #3]
  40a958:	str	x4, [x2, x1, lsl #3]
  40a95c:	mov	x19, x0
  40a960:	str	w20, [x0, #4]
  40a964:	b	40a6e4 <ferror@plt+0x7e64>
  40a968:	fmov	d0, x20
  40a96c:	mov	x0, #0x28                  	// #40
  40a970:	ldp	x1, x19, [x26, #8]
  40a974:	mov	v0.d[1], x21
  40a978:	str	x1, [sp, #104]
  40a97c:	mov	w20, #0x0                   	// #0
  40a980:	mov	v0.s[1], w23
  40a984:	str	q0, [sp, #112]
  40a988:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40a98c:	mov	x23, x0
  40a990:	ldr	q0, [sp, #112]
  40a994:	ldr	x1, [sp, #104]
  40a998:	mov	v0.s[2], w28
  40a99c:	mov	w28, #0x1                   	// #1
  40a9a0:	mov	x0, x1
  40a9a4:	mov	v0.s[3], w27
  40a9a8:	str	q0, [x23]
  40a9ac:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  40a9b0:	add	x2, x19, #0x1
  40a9b4:	stp	x0, x19, [x23, #16]
  40a9b8:	mov	x1, #0x28                  	// #40
  40a9bc:	mov	x0, #0x0                   	// #0
  40a9c0:	str	x2, [x23, #32]
  40a9c4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40a9c8:	mov	x19, x0
  40a9cc:	mov	x0, #0x4                   	// #4
  40a9d0:	str	x0, [x19]
  40a9d4:	b	40a6e4 <ferror@plt+0x7e64>
  40a9d8:	ldr	x0, [sp, #96]
  40a9dc:	str	wzr, [x19, #4]
  40a9e0:	add	x1, x0, #0x1
  40a9e4:	str	x1, [sp, #96]
  40a9e8:	ldr	x0, [sp, #128]
  40a9ec:	cmp	x0, x1
  40a9f0:	b.ge	409c48 <ferror@plt+0x73c8>  // b.tcont
  40a9f4:	b	40a314 <ferror@plt+0x7a94>
  40a9f8:	add	w20, w20, #0x1
  40a9fc:	cmp	w20, w0
  40aa00:	b.cs	40a2ec <ferror@plt+0x7a6c>  // b.hs, b.nlast
  40aa04:	b	40a2bc <ferror@plt+0x7a3c>
  40aa08:	ldr	w27, [sp, #476]
  40aa0c:	b	40a25c <ferror@plt+0x79dc>
  40aa10:	ldr	w3, [x0]
  40aa14:	cmp	w3, w22
  40aa18:	b.eq	40aa24 <ferror@plt+0x81a4>  // b.none
  40aa1c:	add	x0, x0, #0x28
  40aa20:	b	40a508 <ferror@plt+0x7c88>
  40aa24:	ldr	w3, [x0, #4]
  40aa28:	cmp	w20, w3
  40aa2c:	b.ne	40aa1c <ferror@plt+0x819c>  // b.any
  40aa30:	ldr	w3, [x0, #8]
  40aa34:	cmp	w3, w22
  40aa38:	b.ne	40aa1c <ferror@plt+0x819c>  // b.any
  40aa3c:	ldr	w3, [x0, #12]
  40aa40:	cmp	w24, w3
  40aa44:	b.ne	40aa1c <ferror@plt+0x819c>  // b.any
  40aa48:	ldr	x0, [x23, #24]
  40aa4c:	cbz	x0, 40a510 <ferror@plt+0x7c90>
  40aa50:	cmp	w27, w20
  40aa54:	b.gt	40b0e0 <ferror@plt+0x8860>
  40aa58:	cmp	w20, w27
  40aa5c:	b.le	40ae6c <ferror@plt+0x85ec>
  40aa60:	ldr	x0, [sp, #336]
  40aa64:	add	w27, w27, #0x1
  40aa68:	mov	w1, #0x20                  	// #32
  40aa6c:	bl	40f150 <ferror@plt+0xc8d0>
  40aa70:	cmp	w20, w27
  40aa74:	b.ne	40aa60 <ferror@plt+0x81e0>  // b.any
  40aa78:	ldr	w0, [sp, #396]
  40aa7c:	cmn	w0, #0x2
  40aa80:	b.eq	40aab4 <ferror@plt+0x8234>  // b.none
  40aa84:	ldr	x1, [sp, #384]
  40aa88:	cmn	w0, #0x1
  40aa8c:	ldr	x0, [x1]
  40aa90:	b.eq	40aaa4 <ferror@plt+0x8224>  // b.none
  40aa94:	ldr	x1, [sp, #432]
  40aa98:	bl	410da0 <ferror@plt+0xe520>
  40aa9c:	ldr	x0, [sp, #384]
  40aaa0:	ldr	x0, [x0]
  40aaa4:	mov	w2, #0xfffffffe            	// #-2
  40aaa8:	ldr	x1, [sp, #416]
  40aaac:	str	w2, [sp, #396]
  40aab0:	bl	410da0 <ferror@plt+0xe520>
  40aab4:	ldr	x1, [x23, #16]
  40aab8:	ldr	x0, [sp, #336]
  40aabc:	bl	410da0 <ferror@plt+0xe520>
  40aac0:	ldr	w0, [sp, #396]
  40aac4:	cmn	w0, #0x1
  40aac8:	b.eq	40aae0 <ferror@plt+0x8260>  // b.none
  40aacc:	ldr	x0, [sp, #384]
  40aad0:	ldr	x1, [sp, #432]
  40aad4:	ldr	x0, [x0]
  40aad8:	bl	410da0 <ferror@plt+0xe520>
  40aadc:	str	w26, [sp, #396]
  40aae0:	ldr	x2, [x23, #24]
  40aae4:	add	w27, w20, w2
  40aae8:	b	40a24c <ferror@plt+0x79cc>
  40aaec:	ldr	x0, [x27, #16]
  40aaf0:	cmp	x0, #0x1
  40aaf4:	b.ne	40a7d0 <ferror@plt+0x7f50>  // b.any
  40aaf8:	b	40a808 <ferror@plt+0x7f88>
  40aafc:	ldr	w20, [x23, #8]
  40ab00:	cmp	w20, w27
  40ab04:	b.lt	40adcc <ferror@plt+0x854c>  // b.tstop
  40ab08:	cmp	w20, w27
  40ab0c:	b.le	40ae6c <ferror@plt+0x85ec>
  40ab10:	ldr	x0, [sp, #336]
  40ab14:	add	w27, w27, #0x1
  40ab18:	mov	w1, #0x20                  	// #32
  40ab1c:	bl	40f150 <ferror@plt+0xc8d0>
  40ab20:	cmp	w20, w27
  40ab24:	b.ne	40ab10 <ferror@plt+0x8290>  // b.any
  40ab28:	b	40aa78 <ferror@plt+0x81f8>
  40ab2c:	add	x0, x25, #0x8
  40ab30:	mov	x2, #0x28                  	// #40
  40ab34:	mov	w1, w1
  40ab38:	adrp	x3, 408000 <ferror@plt+0x5780>
  40ab3c:	add	x3, x3, #0x440
  40ab40:	bl	418650 <ferror@plt+0x15dd0>
  40ab44:	ldr	w2, [x25, #4]
  40ab48:	mov	w0, #0x1                   	// #1
  40ab4c:	mov	w21, w0
  40ab50:	sub	w0, w2, #0x1
  40ab54:	cbnz	w2, 40a19c <ferror@plt+0x791c>
  40ab58:	add	x0, sp, #0x180
  40ab5c:	mov	w26, #0x0                   	// #0
  40ab60:	str	wzr, [sp, #104]
  40ab64:	str	x0, [sp, #112]
  40ab68:	ldrb	w0, [sp, #442]
  40ab6c:	cbz	w0, 40abd0 <ferror@plt+0x8350>
  40ab70:	ldr	w0, [sp, #472]
  40ab74:	mov	w19, #0x0                   	// #0
  40ab78:	cmp	w0, #0x3
  40ab7c:	b.le	40aba0 <ferror@plt+0x8320>
  40ab80:	ldr	x0, [sp, #336]
  40ab84:	mov	w1, #0x20                  	// #32
  40ab88:	add	w19, w19, #0x1
  40ab8c:	bl	40f150 <ferror@plt+0xc8d0>
  40ab90:	ldr	w0, [sp, #472]
  40ab94:	sub	w1, w0, #0x3
  40ab98:	cmp	w1, w19
  40ab9c:	b.gt	40ab80 <ferror@plt+0x8300>
  40aba0:	cmp	w0, w19
  40aba4:	b.le	40abc4 <ferror@plt+0x8344>
  40aba8:	ldr	x0, [sp, #336]
  40abac:	mov	w1, #0x20                  	// #32
  40abb0:	add	w19, w19, #0x1
  40abb4:	bl	40f150 <ferror@plt+0xc8d0>
  40abb8:	ldr	w0, [sp, #472]
  40abbc:	cmp	w0, w19
  40abc0:	b.gt	40aba8 <ferror@plt+0x8328>
  40abc4:	ldr	x1, [sp, #136]
  40abc8:	ldr	x0, [sp, #336]
  40abcc:	bl	410da0 <ferror@plt+0xe520>
  40abd0:	ldr	x0, [sp, #336]
  40abd4:	mov	w1, #0x20                  	// #32
  40abd8:	bl	40f150 <ferror@plt+0xc8d0>
  40abdc:	ldr	w0, [x25, #4]
  40abe0:	cbz	w0, 40acb4 <ferror@plt+0x8434>
  40abe4:	ldr	w19, [sp, #476]
  40abe8:	add	x23, x25, #0x8
  40abec:	mov	w27, #0x0                   	// #0
  40abf0:	add	w19, w19, #0x1
  40abf4:	ldr	w1, [x23, #32]
  40abf8:	cmp	w1, w26
  40abfc:	b.lt	40acb4 <ferror@plt+0x8434>  // b.tstop
  40ac00:	ldr	w20, [x23, #4]
  40ac04:	b.eq	40ad3c <ferror@plt+0x84bc>  // b.none
  40ac08:	ldr	w1, [sp, #104]
  40ac0c:	cmp	w1, w20
  40ac10:	b.eq	40aca4 <ferror@plt+0x8424>  // b.none
  40ac14:	cmp	w19, w20
  40ac18:	b.gt	40b45c <ferror@plt+0x8bdc>
  40ac1c:	b.eq	40b208 <ferror@plt+0x8988>  // b.none
  40ac20:	mov	w28, w19
  40ac24:	nop
  40ac28:	ldr	x0, [sp, #336]
  40ac2c:	add	w28, w28, #0x1
  40ac30:	mov	w1, #0x20                  	// #32
  40ac34:	bl	40f150 <ferror@plt+0xc8d0>
  40ac38:	cmp	w28, w20
  40ac3c:	b.lt	40ac28 <ferror@plt+0x83a8>  // b.tstop
  40ac40:	mvn	w0, w19
  40ac44:	cmp	w19, w20
  40ac48:	add	w20, w0, w20
  40ac4c:	add	w19, w19, #0x1
  40ac50:	csel	w20, w20, wzr, lt  // lt = tstop
  40ac54:	add	w0, w20, w19
  40ac58:	str	w0, [sp, #104]
  40ac5c:	ldr	w1, [x23]
  40ac60:	ldr	x0, [sp, #112]
  40ac64:	bl	408478 <ferror@plt+0x5bf8>
  40ac68:	ldr	x0, [sp, #336]
  40ac6c:	mov	w1, #0x7c                  	// #124
  40ac70:	bl	40f150 <ferror@plt+0xc8d0>
  40ac74:	ldr	w0, [sp, #396]
  40ac78:	cmn	w0, #0x1
  40ac7c:	b.eq	40ac98 <ferror@plt+0x8418>  // b.none
  40ac80:	ldr	x0, [sp, #384]
  40ac84:	ldr	x1, [sp, #432]
  40ac88:	ldr	x0, [x0]
  40ac8c:	bl	410da0 <ferror@plt+0xe520>
  40ac90:	mov	w0, #0xffffffff            	// #-1
  40ac94:	str	w0, [sp, #396]
  40ac98:	ldr	w1, [sp, #104]
  40ac9c:	ldr	w0, [x25, #4]
  40aca0:	add	w19, w1, #0x1
  40aca4:	add	w27, w27, #0x1
  40aca8:	add	x23, x23, #0x28
  40acac:	cmp	w0, w27
  40acb0:	b.hi	40abf4 <ferror@plt+0x8374>  // b.pmore
  40acb4:	ldr	w0, [sp, #396]
  40acb8:	cmn	w0, #0x1
  40acbc:	b.eq	40ad24 <ferror@plt+0x84a4>  // b.none
  40acc0:	ldr	x0, [sp, #384]
  40acc4:	add	w26, w26, #0x1
  40acc8:	ldr	x1, [sp, #432]
  40accc:	ldr	x0, [x0]
  40acd0:	bl	410da0 <ferror@plt+0xe520>
  40acd4:	ldr	x0, [sp, #336]
  40acd8:	mov	w1, #0xffffffff            	// #-1
  40acdc:	str	w1, [sp, #396]
  40ace0:	bl	40f0f0 <ferror@plt+0xc870>
  40ace4:	cmp	w26, w21
  40ace8:	b.le	40ab68 <ferror@plt+0x82e8>
  40acec:	ldr	w0, [x25, #4]
  40acf0:	cbz	w0, 40ad14 <ferror@plt+0x8494>
  40acf4:	add	x19, x25, #0x10
  40acf8:	mov	w20, #0x0                   	// #0
  40acfc:	ldrb	w1, [x19, #8]
  40ad00:	cbnz	w1, 40b210 <ferror@plt+0x8990>
  40ad04:	add	w20, w20, #0x1
  40ad08:	add	x19, x19, #0x28
  40ad0c:	cmp	w0, w20
  40ad10:	b.hi	40acfc <ferror@plt+0x847c>  // b.pmore
  40ad14:	ldrsb	w0, [x25, #3]
  40ad18:	tbz	w0, #31, 40a3e4 <ferror@plt+0x7b64>
  40ad1c:	str	wzr, [x25, #4]
  40ad20:	b	40a3f0 <ferror@plt+0x7b70>
  40ad24:	ldr	x0, [sp, #336]
  40ad28:	add	w26, w26, #0x1
  40ad2c:	bl	40f0f0 <ferror@plt+0xc870>
  40ad30:	cmp	w26, w21
  40ad34:	b.le	40ab68 <ferror@plt+0x82e8>
  40ad38:	b	40acec <ferror@plt+0x846c>
  40ad3c:	cmp	w19, w20
  40ad40:	b.gt	40b474 <ferror@plt+0x8bf4>
  40ad44:	b.eq	40ad80 <ferror@plt+0x8500>  // b.none
  40ad48:	mov	w28, w19
  40ad4c:	nop
  40ad50:	ldr	x0, [sp, #336]
  40ad54:	add	w28, w28, #0x1
  40ad58:	mov	w1, #0x20                  	// #32
  40ad5c:	bl	40f150 <ferror@plt+0xc8d0>
  40ad60:	cmp	w28, w20
  40ad64:	b.lt	40ad50 <ferror@plt+0x84d0>  // b.tstop
  40ad68:	mvn	w0, w19
  40ad6c:	cmp	w19, w20
  40ad70:	add	w20, w0, w20
  40ad74:	add	w19, w19, #0x1
  40ad78:	csel	w20, w20, wzr, lt  // lt = tstop
  40ad7c:	add	w20, w19, w20
  40ad80:	ldr	w1, [x23]
  40ad84:	ldr	x0, [sp, #112]
  40ad88:	bl	408478 <ferror@plt+0x5bf8>
  40ad8c:	ldr	x1, [x23, #8]
  40ad90:	ldr	x0, [sp, #336]
  40ad94:	bl	410da0 <ferror@plt+0xe520>
  40ad98:	ldr	w0, [sp, #396]
  40ad9c:	cmn	w0, #0x1
  40ada0:	b.eq	40adbc <ferror@plt+0x853c>  // b.none
  40ada4:	ldr	x0, [sp, #384]
  40ada8:	ldr	x1, [sp, #432]
  40adac:	ldr	x0, [x0]
  40adb0:	bl	410da0 <ferror@plt+0xe520>
  40adb4:	mov	w0, #0xffffffff            	// #-1
  40adb8:	str	w0, [sp, #396]
  40adbc:	ldr	x19, [x23, #24]
  40adc0:	ldr	w0, [x25, #4]
  40adc4:	add	w19, w20, w19
  40adc8:	b	40aca4 <ferror@plt+0x8424>
  40adcc:	ldr	w0, [sp, #396]
  40add0:	cmn	w0, #0x1
  40add4:	b.eq	40adec <ferror@plt+0x856c>  // b.none
  40add8:	ldr	x0, [sp, #384]
  40addc:	ldr	x1, [sp, #432]
  40ade0:	ldr	x0, [x0]
  40ade4:	bl	410da0 <ferror@plt+0xe520>
  40ade8:	str	w26, [sp, #396]
  40adec:	ldr	x0, [sp, #336]
  40adf0:	bl	40f0f0 <ferror@plt+0xc870>
  40adf4:	ldrb	w0, [sp, #442]
  40adf8:	cbz	w0, 40ae60 <ferror@plt+0x85e0>
  40adfc:	ldr	w0, [sp, #472]
  40ae00:	mov	w24, #0x0                   	// #0
  40ae04:	cmp	w0, #0x3
  40ae08:	b.le	40ae30 <ferror@plt+0x85b0>
  40ae0c:	nop
  40ae10:	ldr	x0, [sp, #336]
  40ae14:	mov	w1, #0x20                  	// #32
  40ae18:	add	w24, w24, #0x1
  40ae1c:	bl	40f150 <ferror@plt+0xc8d0>
  40ae20:	ldr	w0, [sp, #472]
  40ae24:	sub	w1, w0, #0x3
  40ae28:	cmp	w1, w24
  40ae2c:	b.gt	40ae10 <ferror@plt+0x8590>
  40ae30:	cmp	w24, w0
  40ae34:	b.ge	40ae54 <ferror@plt+0x85d4>  // b.tcont
  40ae38:	ldr	x0, [sp, #336]
  40ae3c:	mov	w1, #0x20                  	// #32
  40ae40:	add	w24, w24, #0x1
  40ae44:	bl	40f150 <ferror@plt+0xc8d0>
  40ae48:	ldr	w0, [sp, #472]
  40ae4c:	cmp	w0, w24
  40ae50:	b.gt	40ae38 <ferror@plt+0x85b8>
  40ae54:	ldr	x1, [sp, #136]
  40ae58:	ldr	x0, [sp, #336]
  40ae5c:	bl	410da0 <ferror@plt+0xe520>
  40ae60:	ldr	w27, [sp, #476]
  40ae64:	cmp	w20, w27
  40ae68:	b.gt	40ab10 <ferror@plt+0x8290>
  40ae6c:	mov	w20, w27
  40ae70:	b	40aa78 <ferror@plt+0x81f8>
  40ae74:	ldr	w2, [sp, #156]
  40ae78:	ldr	w1, [sp, #360]
  40ae7c:	cbnz	w2, 40ae8c <ferror@plt+0x860c>
  40ae80:	ldr	w0, [x0, #12]
  40ae84:	cmp	w0, w1
  40ae88:	b.ge	409c30 <ferror@plt+0x73b0>  // b.tcont
  40ae8c:	ldr	w3, [x20]
  40ae90:	cmp	w1, w3
  40ae94:	b.cc	40b178 <ferror@plt+0x88f8>  // b.lo, b.ul, b.last
  40ae98:	ldr	w0, [x20, #4]
  40ae9c:	cmp	w1, w0
  40aea0:	b.hi	40b178 <ferror@plt+0x88f8>  // b.pmore
  40aea4:	add	x4, sp, #0x200
  40aea8:	add	x5, sp, #0x108
  40aeac:	ldp	x2, x3, [sp, #352]
  40aeb0:	ldp	x0, x1, [sp, #368]
  40aeb4:	stp	x2, x3, [x4, #-248]
  40aeb8:	stp	x0, x1, [x4, #-232]
  40aebc:	ldp	x0, x1, [x5]
  40aec0:	stp	x0, x1, [sp, #224]
  40aec4:	ldr	x0, [sp, #184]
  40aec8:	add	x1, sp, #0xe0
  40aecc:	ldp	x4, x5, [x5, #16]
  40aed0:	ldr	x2, [x0, #144]
  40aed4:	stp	x4, x5, [sp, #240]
  40aed8:	blr	x2
  40aedc:	b	409c30 <ferror@plt+0x73b0>
  40aee0:	ubfiz	x2, x1, #3, #32
  40aee4:	mov	x1, #0x8                   	// #8
  40aee8:	add	x2, x2, #0x10
  40aeec:	nop
  40aef0:	ldr	x4, [x19, x1]
  40aef4:	str	x4, [x0, x1]
  40aef8:	add	x1, x1, #0x8
  40aefc:	cmp	x2, x1
  40af00:	b.ne	40aef0 <ferror@plt+0x8670>  // b.any
  40af04:	b	40a95c <ferror@plt+0x80dc>
  40af08:	ldr	x2, [x6, #24]
  40af0c:	tbnz	w2, #31, 40b48c <ferror@plt+0x8c0c>
  40af10:	subs	w27, w28, w8
  40af14:	b.mi	40b4a4 <ferror@plt+0x8c24>  // b.first
  40af18:	ldr	x0, [x26, #16]
  40af1c:	add	w5, w27, w2
  40af20:	adds	w28, w5, w0
  40af24:	b.mi	40b4bc <ferror@plt+0x8c3c>  // b.first
  40af28:	ldr	x8, [x6, #32]
  40af2c:	sxtw	x20, w28
  40af30:	add	x1, x20, #0x1
  40af34:	cmp	x8, x1
  40af38:	b.cc	40afe8 <ferror@plt+0x8768>  // b.lo, b.ul, b.last
  40af3c:	tbnz	w9, #31, 40b4d4 <ferror@plt+0x8c54>
  40af40:	cmp	w9, w7
  40af44:	b.ge	40b4ec <ferror@plt+0x8c6c>  // b.tcont
  40af48:	add	w0, w9, w27
  40af4c:	cmp	w7, w0
  40af50:	b.lt	40b54c <ferror@plt+0x8ccc>  // b.tstop
  40af54:	sxtw	x27, w27
  40af58:	add	x1, x10, w9, sxtw
  40af5c:	add	x7, x27, w2, sxtw
  40af60:	sxtw	x0, w2
  40af64:	cmp	x7, x8
  40af68:	b.cs	40b564 <ferror@plt+0x8ce4>  // b.hs, b.nlast
  40af6c:	ldr	x7, [x6, #16]
  40af70:	mov	x2, x27
  40af74:	str	x6, [sp, #104]
  40af78:	add	x0, x7, x0
  40af7c:	str	w5, [sp, #112]
  40af80:	bl	402220 <memcpy@plt>
  40af84:	ldp	x1, x2, [x26, #8]
  40af88:	ldr	x6, [sp, #104]
  40af8c:	ldr	w5, [sp, #112]
  40af90:	sxtw	x0, w5
  40af94:	ldr	x5, [x6, #32]
  40af98:	add	x7, x2, x0
  40af9c:	cmp	x7, x5
  40afa0:	b.cs	40b564 <ferror@plt+0x8ce4>  // b.hs, b.nlast
  40afa4:	ldr	x5, [x6, #16]
  40afa8:	add	x0, x5, x0
  40afac:	bl	402220 <memcpy@plt>
  40afb0:	ldr	x6, [sp, #104]
  40afb4:	ldr	x0, [x6, #32]
  40afb8:	str	x20, [x6, #24]
  40afbc:	cmp	x20, x0
  40afc0:	b.cs	40b57c <ferror@plt+0x8cfc>  // b.hs, b.nlast
  40afc4:	ldr	x0, [x6, #16]
  40afc8:	strb	wzr, [x0, w28, sxtw]
  40afcc:	ldr	x1, [x26, #16]
  40afd0:	str	w23, [x6, #4]
  40afd4:	ldr	w0, [x6, #12]
  40afd8:	add	x4, x27, x1
  40afdc:	add	w4, w0, w4
  40afe0:	str	w4, [x6, #12]
  40afe4:	b	40a444 <ferror@plt+0x7bc4>
  40afe8:	ldr	x0, [x6, #16]
  40afec:	lsl	x8, x1, #1
  40aff0:	mov	x1, x8
  40aff4:	stp	x8, x6, [sp, #104]
  40aff8:	str	w9, [sp, #168]
  40affc:	str	w5, [sp, #176]
  40b000:	stp	x2, x10, [sp, #200]
  40b004:	str	x7, [sp, #216]
  40b008:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40b00c:	ldp	x8, x6, [sp, #104]
  40b010:	ldr	w9, [sp, #168]
  40b014:	ldr	w5, [sp, #176]
  40b018:	ldp	x2, x10, [sp, #200]
  40b01c:	str	x0, [x6, #16]
  40b020:	str	x8, [x6, #32]
  40b024:	ldr	x7, [sp, #216]
  40b028:	b	40af3c <ferror@plt+0x86bc>
  40b02c:	b.eq	409d28 <ferror@plt+0x74a8>  // b.none
  40b030:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b034:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b038:	add	x2, x2, #0x7d0
  40b03c:	add	x0, x0, #0x6e0
  40b040:	mov	w1, #0x2b9                 	// #697
  40b044:	bl	4028b0 <ferror@plt+0x30>
  40b048:	ldr	w0, [sp, #396]
  40b04c:	cmn	w0, #0x1
  40b050:	b.eq	40b068 <ferror@plt+0x87e8>  // b.none
  40b054:	ldr	x0, [sp, #384]
  40b058:	ldr	x1, [sp, #432]
  40b05c:	ldr	x0, [x0]
  40b060:	bl	410da0 <ferror@plt+0xe520>
  40b064:	str	w26, [sp, #396]
  40b068:	ldr	x0, [sp, #336]
  40b06c:	bl	40f0f0 <ferror@plt+0xc870>
  40b070:	ldrb	w0, [sp, #442]
  40b074:	cbz	w0, 40b0d8 <ferror@plt+0x8858>
  40b078:	ldr	w0, [sp, #472]
  40b07c:	mov	w27, #0x0                   	// #0
  40b080:	cmp	w0, #0x3
  40b084:	b.le	40b0a8 <ferror@plt+0x8828>
  40b088:	ldr	x0, [sp, #336]
  40b08c:	mov	w1, #0x20                  	// #32
  40b090:	add	w27, w27, #0x1
  40b094:	bl	40f150 <ferror@plt+0xc8d0>
  40b098:	ldr	w0, [sp, #472]
  40b09c:	sub	w1, w0, #0x3
  40b0a0:	cmp	w1, w27
  40b0a4:	b.gt	40b088 <ferror@plt+0x8808>
  40b0a8:	cmp	w0, w27
  40b0ac:	b.le	40b0cc <ferror@plt+0x884c>
  40b0b0:	ldr	x0, [sp, #336]
  40b0b4:	mov	w1, #0x20                  	// #32
  40b0b8:	add	w27, w27, #0x1
  40b0bc:	bl	40f150 <ferror@plt+0xc8d0>
  40b0c0:	ldr	w0, [sp, #472]
  40b0c4:	cmp	w0, w27
  40b0c8:	b.gt	40b0b0 <ferror@plt+0x8830>
  40b0cc:	ldr	x1, [sp, #136]
  40b0d0:	ldr	x0, [sp, #336]
  40b0d4:	bl	410da0 <ferror@plt+0xe520>
  40b0d8:	ldr	w27, [sp, #476]
  40b0dc:	b	40a518 <ferror@plt+0x7c98>
  40b0e0:	ldr	w0, [sp, #396]
  40b0e4:	cmn	w0, #0x1
  40b0e8:	b.eq	40b100 <ferror@plt+0x8880>  // b.none
  40b0ec:	ldr	x0, [sp, #384]
  40b0f0:	ldr	x1, [sp, #432]
  40b0f4:	ldr	x0, [x0]
  40b0f8:	bl	410da0 <ferror@plt+0xe520>
  40b0fc:	str	w26, [sp, #396]
  40b100:	ldr	x0, [sp, #336]
  40b104:	bl	40f0f0 <ferror@plt+0xc870>
  40b108:	ldrb	w0, [sp, #442]
  40b10c:	cbz	w0, 40b170 <ferror@plt+0x88f0>
  40b110:	ldr	w0, [sp, #472]
  40b114:	mov	w24, #0x0                   	// #0
  40b118:	cmp	w0, #0x3
  40b11c:	b.le	40b140 <ferror@plt+0x88c0>
  40b120:	ldr	x0, [sp, #336]
  40b124:	mov	w1, #0x20                  	// #32
  40b128:	add	w24, w24, #0x1
  40b12c:	bl	40f150 <ferror@plt+0xc8d0>
  40b130:	ldr	w0, [sp, #472]
  40b134:	sub	w1, w0, #0x3
  40b138:	cmp	w1, w24
  40b13c:	b.gt	40b120 <ferror@plt+0x88a0>
  40b140:	cmp	w24, w0
  40b144:	b.ge	40b164 <ferror@plt+0x88e4>  // b.tcont
  40b148:	ldr	x0, [sp, #336]
  40b14c:	mov	w1, #0x20                  	// #32
  40b150:	add	w24, w24, #0x1
  40b154:	bl	40f150 <ferror@plt+0xc8d0>
  40b158:	ldr	w0, [sp, #472]
  40b15c:	cmp	w0, w24
  40b160:	b.gt	40b148 <ferror@plt+0x88c8>
  40b164:	ldr	x1, [sp, #136]
  40b168:	ldr	x0, [sp, #336]
  40b16c:	bl	410da0 <ferror@plt+0xe520>
  40b170:	ldr	w27, [sp, #476]
  40b174:	b	40aa58 <ferror@plt+0x81d8>
  40b178:	ldr	x4, [sp, #448]
  40b17c:	cbz	x4, 40b390 <ferror@plt+0x8b10>
  40b180:	ldr	w5, [x4, #4]
  40b184:	add	x2, x4, #0x8
  40b188:	mov	w0, #0x0                   	// #0
  40b18c:	cmp	w0, w5
  40b190:	b.eq	40b390 <ferror@plt+0x8b10>  // b.none
  40b194:	ldr	w1, [x2]
  40b198:	cmp	w3, w1
  40b19c:	b.hi	40b1ec <ferror@plt+0x896c>  // b.pmore
  40b1a0:	ldr	w6, [x20, #4]
  40b1a4:	cmp	w1, w6
  40b1a8:	b.hi	40b1ec <ferror@plt+0x896c>  // b.pmore
  40b1ac:	ubfiz	x2, x0, #2, #32
  40b1b0:	add	x5, sp, #0x108
  40b1b4:	add	x0, x2, w0, uxtw
  40b1b8:	ldp	x2, x3, [sp, #352]
  40b1bc:	add	x0, x4, x0, lsl #3
  40b1c0:	add	x4, sp, #0x200
  40b1c4:	ldr	w0, [x0, #12]
  40b1c8:	stp	x2, x3, [x4, #-216]
  40b1cc:	str	w1, [sp, #304]
  40b1d0:	str	w0, [sp, #308]
  40b1d4:	ldp	x0, x1, [sp, #368]
  40b1d8:	stp	x0, x1, [x4, #-232]
  40b1dc:	ldp	x2, x3, [x4, #-216]
  40b1e0:	stp	x2, x3, [x4, #-248]
  40b1e4:	stp	x0, x1, [x4, #-200]
  40b1e8:	b	40aebc <ferror@plt+0x863c>
  40b1ec:	add	w0, w0, #0x1
  40b1f0:	add	x2, x2, #0x28
  40b1f4:	b	40b18c <ferror@plt+0x890c>
  40b1f8:	ldr	w1, [x2, #12]
  40b1fc:	cmp	w1, w20
  40b200:	csinc	w20, w20, w1, lt  // lt = tstop
  40b204:	b	409f1c <ferror@plt+0x769c>
  40b208:	str	w19, [sp, #104]
  40b20c:	b	40ac5c <ferror@plt+0x83dc>
  40b210:	ldr	x0, [x19], #40
  40b214:	add	w20, w20, #0x1
  40b218:	bl	402640 <free@plt>
  40b21c:	ldr	w0, [x25, #4]
  40b220:	cmp	w0, w20
  40b224:	b.hi	40acfc <ferror@plt+0x847c>  // b.pmore
  40b228:	b	40ad14 <ferror@plt+0x8494>
  40b22c:	ldrb	w0, [sp, #442]
  40b230:	cbz	w0, 40b534 <ferror@plt+0x8cb4>
  40b234:	ldr	w0, [sp, #472]
  40b238:	mov	w19, #0x0                   	// #0
  40b23c:	tbnz	w0, #31, 40b25c <ferror@plt+0x89dc>
  40b240:	ldr	x0, [sp, #336]
  40b244:	mov	w1, #0x2e                  	// #46
  40b248:	add	w19, w19, #0x1
  40b24c:	bl	40f150 <ferror@plt+0xc8d0>
  40b250:	ldr	w0, [sp, #472]
  40b254:	cmp	w0, w19
  40b258:	b.ge	40b240 <ferror@plt+0x89c0>  // b.tcont
  40b25c:	ldr	x0, [sp, #336]
  40b260:	bl	40f0f0 <ferror@plt+0xc870>
  40b264:	b	409c30 <ferror@plt+0x73b0>
  40b268:	ldrsb	w0, [x25, #3]
  40b26c:	tbnz	w0, #31, 40b2b8 <ferror@plt+0x8a38>
  40b270:	mov	w0, w28
  40b274:	stp	x8, x6, [sp, #104]
  40b278:	bl	412508 <ferror@plt+0xfc88>
  40b27c:	mov	w26, w0
  40b280:	mov	w3, #0x28                  	// #40
  40b284:	mov	x1, #0x8                   	// #8
  40b288:	ldr	w28, [x25, #4]
  40b28c:	mov	x0, x25
  40b290:	umaddl	x1, w26, w3, x1
  40b294:	and	w26, w26, #0x7fffffff
  40b298:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40b29c:	mov	x25, x0
  40b2a0:	add	w1, w28, #0x1
  40b2a4:	stp	w26, w28, [x0]
  40b2a8:	ldp	x8, x6, [sp, #104]
  40b2ac:	b	40a144 <ferror@plt+0x78c4>
  40b2b0:	ldr	x26, [sp, #448]
  40b2b4:	b	40a178 <ferror@plt+0x78f8>
  40b2b8:	cmp	w10, #0x4
  40b2bc:	mov	w3, #0x4                   	// #4
  40b2c0:	csel	w3, w10, w3, cs  // cs = hs, nlast
  40b2c4:	mov	w4, #0x28                  	// #40
  40b2c8:	mov	x26, #0x8                   	// #8
  40b2cc:	mov	x0, #0x0                   	// #0
  40b2d0:	str	w3, [sp, #104]
  40b2d4:	umaddl	x1, w3, w4, x26
  40b2d8:	str	w10, [sp, #112]
  40b2dc:	str	x8, [sp, #144]
  40b2e0:	str	x6, [sp, #168]
  40b2e4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40b2e8:	ldr	w3, [sp, #104]
  40b2ec:	mov	w4, #0x28                  	// #40
  40b2f0:	ldr	w10, [sp, #112]
  40b2f4:	and	x3, x3, #0x7fffffff
  40b2f8:	str	x3, [x0]
  40b2fc:	ldr	x8, [sp, #144]
  40b300:	ldr	x6, [sp, #168]
  40b304:	cbz	w28, 40b344 <ferror@plt+0x8ac4>
  40b308:	sub	w11, w28, #0x1
  40b30c:	mov	x3, #0x30                  	// #48
  40b310:	mov	x1, x26
  40b314:	umaddl	x11, w11, w4, x3
  40b318:	add	x7, x25, x1
  40b31c:	add	x3, x0, x1
  40b320:	add	x1, x1, #0x28
  40b324:	cmp	x11, x1
  40b328:	ldp	x4, x5, [x7]
  40b32c:	stp	x4, x5, [x3]
  40b330:	ldp	x4, x5, [x7, #16]
  40b334:	stp	x4, x5, [x3, #16]
  40b338:	ldr	x4, [x7, #32]
  40b33c:	str	x4, [x3, #32]
  40b340:	b.ne	40b318 <ferror@plt+0x8a98>  // b.any
  40b344:	mov	w1, w10
  40b348:	mov	x25, x0
  40b34c:	str	w28, [x0, #4]
  40b350:	b	40a144 <ferror@plt+0x78c4>
  40b354:	ldr	w1, [x1, #36]
  40b358:	blr	x3
  40b35c:	mov	x6, x0
  40b360:	and	w0, w1, #0xff
  40b364:	mov	w21, w0
  40b368:	b	40a104 <ferror@plt+0x7884>
  40b36c:	str	wzr, [x0, #4]
  40b370:	b	40a374 <ferror@plt+0x7af4>
  40b374:	str	wzr, [x0, #4]
  40b378:	ldr	w0, [sp, #396]
  40b37c:	cmn	w0, #0x1
  40b380:	b.eq	409b7c <ferror@plt+0x72fc>  // b.none
  40b384:	b	40a394 <ferror@plt+0x7b14>
  40b388:	str	wzr, [x0, #4]
  40b38c:	b	40a360 <ferror@plt+0x7ae0>
  40b390:	ldr	x0, [sp, #456]
  40b394:	cbz	x0, 40b404 <ferror@plt+0x8b84>
  40b398:	mov	w19, #0x0                   	// #0
  40b39c:	ldr	w1, [x0, #4]
  40b3a0:	cmp	w1, w19
  40b3a4:	b.ls	40b404 <ferror@plt+0x8b84>  // b.plast
  40b3a8:	add	x0, x0, w19, uxtw #3
  40b3ac:	add	x8, sp, #0x128
  40b3b0:	ldr	x0, [x0, #8]
  40b3b4:	ldr	w0, [x0]
  40b3b8:	bl	415ca0 <ferror@plt+0x13420>
  40b3bc:	ldr	w1, [x20]
  40b3c0:	ldr	w0, [sp, #304]
  40b3c4:	cmp	w0, w1
  40b3c8:	b.cc	40b3f8 <ferror@plt+0x8b78>  // b.lo, b.ul, b.last
  40b3cc:	ldr	w1, [x20, #4]
  40b3d0:	cmp	w0, w1
  40b3d4:	b.hi	40b3f8 <ferror@plt+0x8b78>  // b.pmore
  40b3d8:	add	x0, sp, #0x200
  40b3dc:	add	x4, sp, #0x200
  40b3e0:	add	x5, sp, #0x108
  40b3e4:	ldp	x2, x3, [x0, #-216]
  40b3e8:	stp	x2, x3, [x4, #-248]
  40b3ec:	ldp	x0, x1, [x0, #-200]
  40b3f0:	stp	x0, x1, [x4, #-232]
  40b3f4:	b	40aebc <ferror@plt+0x863c>
  40b3f8:	ldr	x0, [sp, #456]
  40b3fc:	add	w19, w19, #0x1
  40b400:	cbnz	x0, 40b39c <ferror@plt+0x8b1c>
  40b404:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b408:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b40c:	add	x2, x2, #0x7a0
  40b410:	add	x0, x0, #0x6e0
  40b414:	mov	w1, #0x449                 	// #1097
  40b418:	bl	4028b0 <ferror@plt+0x30>
  40b41c:	mov	x1, #0xa8                  	// #168
  40b420:	mov	x0, #0x0                   	// #0
  40b424:	stp	x8, x6, [sp, #104]
  40b428:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40b42c:	mov	w28, #0x0                   	// #0
  40b430:	mov	x25, x0
  40b434:	add	w1, w28, #0x1
  40b438:	str	x19, [x0]
  40b43c:	ldp	x8, x6, [sp, #104]
  40b440:	b	40a144 <ferror@plt+0x78c4>
  40b444:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b448:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b44c:	add	x2, x2, #0x838
  40b450:	add	x0, x0, #0x6e0
  40b454:	mov	w1, #0x77c                 	// #1916
  40b458:	bl	4028b0 <ferror@plt+0x30>
  40b45c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b460:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b464:	add	x2, x2, #0x820
  40b468:	add	x0, x0, #0x6e0
  40b46c:	mov	w1, #0x612                 	// #1554
  40b470:	bl	4028b0 <ferror@plt+0x30>
  40b474:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b478:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b47c:	add	x2, x2, #0x820
  40b480:	add	x0, x0, #0x6e0
  40b484:	mov	w1, #0x609                 	// #1545
  40b488:	bl	4028b0 <ferror@plt+0x30>
  40b48c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b490:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b494:	add	x2, x2, #0x838
  40b498:	add	x0, x0, #0x6e0
  40b49c:	mov	w1, #0x792                 	// #1938
  40b4a0:	bl	4028b0 <ferror@plt+0x30>
  40b4a4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b4a8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b4ac:	add	x2, x2, #0x838
  40b4b0:	add	x0, x0, #0x6e0
  40b4b4:	mov	w1, #0x794                 	// #1940
  40b4b8:	bl	4028b0 <ferror@plt+0x30>
  40b4bc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b4c0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b4c4:	add	x2, x2, #0x838
  40b4c8:	add	x0, x0, #0x6e0
  40b4cc:	mov	w1, #0x796                 	// #1942
  40b4d0:	bl	4028b0 <ferror@plt+0x30>
  40b4d4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b4d8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b4dc:	add	x2, x2, #0x848
  40b4e0:	add	x0, x0, #0x850
  40b4e4:	mov	w1, #0x44                  	// #68
  40b4e8:	bl	4028b0 <ferror@plt+0x30>
  40b4ec:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b4f0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b4f4:	add	x2, x2, #0x848
  40b4f8:	add	x0, x0, #0x850
  40b4fc:	mov	w1, #0x45                  	// #69
  40b500:	bl	4028b0 <ferror@plt+0x30>
  40b504:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b508:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b50c:	add	x2, x2, #0x838
  40b510:	add	x0, x0, #0x6e0
  40b514:	mov	w1, #0x77a                 	// #1914
  40b518:	bl	4028b0 <ferror@plt+0x30>
  40b51c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b520:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b524:	add	x2, x2, #0x808
  40b528:	add	x0, x0, #0x6e0
  40b52c:	mov	w1, #0x215                 	// #533
  40b530:	bl	4028b0 <ferror@plt+0x30>
  40b534:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b538:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b53c:	add	x2, x2, #0x780
  40b540:	add	x0, x0, #0x6e0
  40b544:	mov	w1, #0x408                 	// #1032
  40b548:	bl	4028b0 <ferror@plt+0x30>
  40b54c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b550:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b554:	add	x2, x2, #0x848
  40b558:	add	x0, x0, #0x850
  40b55c:	mov	w1, #0x47                  	// #71
  40b560:	bl	4028b0 <ferror@plt+0x30>
  40b564:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b568:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b56c:	add	x2, x2, #0x868
  40b570:	add	x0, x0, #0x6e0
  40b574:	mov	w1, #0x706                 	// #1798
  40b578:	bl	4028b0 <ferror@plt+0x30>
  40b57c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b580:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b584:	add	x2, x2, #0x878
  40b588:	add	x0, x0, #0x6e0
  40b58c:	mov	w1, #0x732                 	// #1842
  40b590:	bl	4028b0 <ferror@plt+0x30>
  40b594:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b598:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b59c:	add	x2, x2, #0x7b8
  40b5a0:	add	x0, x0, #0x6e0
  40b5a4:	mov	w1, #0x638                 	// #1592
  40b5a8:	bl	4028b0 <ferror@plt+0x30>
  40b5ac:	nop
  40b5b0:	mov	x1, #0x0                   	// #0
  40b5b4:	ldr	x0, [x0, #8]
  40b5b8:	ret
  40b5bc:	nop
  40b5c0:	sub	w0, w0, w1
  40b5c4:	ret
  40b5c8:	cbz	x0, 40b678 <ferror@plt+0x8df8>
  40b5cc:	stp	x29, x30, [sp, #-48]!
  40b5d0:	mov	x29, sp
  40b5d4:	stp	x19, x20, [sp, #16]
  40b5d8:	mov	x19, x0
  40b5dc:	mov	w20, #0x0                   	// #0
  40b5e0:	ldr	x0, [x0, #8]
  40b5e4:	bl	402640 <free@plt>
  40b5e8:	ldr	x0, [x19, #32]
  40b5ec:	cbz	x0, 40b60c <ferror@plt+0x8d8c>
  40b5f0:	ldr	w1, [x0, #4]
  40b5f4:	add	x2, x0, w20, uxtw #3
  40b5f8:	cmp	w1, w20
  40b5fc:	b.hi	40b634 <ferror@plt+0x8db4>  // b.pmore
  40b600:	ldrsb	w1, [x0, #3]
  40b604:	tbnz	w1, #31, 40b68c <ferror@plt+0x8e0c>
  40b608:	bl	402640 <free@plt>
  40b60c:	ldr	x0, [x19, #24]
  40b610:	cbz	x0, 40b620 <ferror@plt+0x8da0>
  40b614:	ldrsb	w1, [x0, #3]
  40b618:	tbnz	w1, #31, 40b69c <ferror@plt+0x8e1c>
  40b61c:	bl	402640 <free@plt>
  40b620:	mov	x0, x19
  40b624:	mov	x1, #0x28                  	// #40
  40b628:	ldp	x19, x20, [sp, #16]
  40b62c:	ldp	x29, x30, [sp], #48
  40b630:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40b634:	str	x21, [sp, #32]
  40b638:	ldr	x21, [x2, #8]
  40b63c:	cbz	x21, 40b67c <ferror@plt+0x8dfc>
  40b640:	ldr	x0, [x21]
  40b644:	add	w20, w20, #0x1
  40b648:	bl	402640 <free@plt>
  40b64c:	mov	x0, x21
  40b650:	mov	x1, #0x10                  	// #16
  40b654:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40b658:	ldr	x0, [x19, #32]
  40b65c:	cbz	x0, 40b684 <ferror@plt+0x8e04>
  40b660:	ldr	w1, [x0, #4]
  40b664:	add	x2, x0, w20, uxtw #3
  40b668:	ldr	x21, [sp, #32]
  40b66c:	cmp	w1, w20
  40b670:	b.ls	40b600 <ferror@plt+0x8d80>  // b.plast
  40b674:	b	40b634 <ferror@plt+0x8db4>
  40b678:	ret
  40b67c:	add	w20, w20, #0x1
  40b680:	cbnz	x0, 40b660 <ferror@plt+0x8de0>
  40b684:	ldr	x21, [sp, #32]
  40b688:	b	40b60c <ferror@plt+0x8d8c>
  40b68c:	str	wzr, [x0, #4]
  40b690:	ldr	x0, [x19, #24]
  40b694:	cbnz	x0, 40b614 <ferror@plt+0x8d94>
  40b698:	b	40b620 <ferror@plt+0x8da0>
  40b69c:	str	wzr, [x0, #4]
  40b6a0:	mov	x0, x19
  40b6a4:	ldp	x19, x20, [sp, #16]
  40b6a8:	mov	x1, #0x28                  	// #40
  40b6ac:	ldp	x29, x30, [sp], #48
  40b6b0:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40b6b4:	nop
  40b6b8:	mov	x1, x0
  40b6bc:	mov	w4, #0x1                   	// #1
  40b6c0:	adrp	x3, 402000 <memcpy@plt-0x220>
  40b6c4:	adrp	x2, 40c000 <ferror@plt+0x9780>
  40b6c8:	add	x3, x3, #0x5d0
  40b6cc:	add	x2, x2, #0x88
  40b6d0:	strb	w4, [x1], #8
  40b6d4:	str	xzr, [x0, #8]
  40b6d8:	stp	x3, xzr, [x1, #8]
  40b6dc:	str	x2, [x1, #24]
  40b6e0:	ret
  40b6e4:	nop
  40b6e8:	mov	x2, x0
  40b6ec:	adrp	x4, 40b000 <ferror@plt+0x8780>
  40b6f0:	adrp	x3, 40b000 <ferror@plt+0x8780>
  40b6f4:	add	x4, x4, #0x5c0
  40b6f8:	add	x3, x3, #0x5c8
  40b6fc:	mov	w5, #0xffffffff            	// #-1
  40b700:	str	x1, [x2], #8
  40b704:	str	xzr, [x0, #8]
  40b708:	stp	x4, xzr, [x2, #8]
  40b70c:	str	x3, [x2, #24]
  40b710:	str	w5, [x0, #40]
  40b714:	ret
  40b718:	stp	x29, x30, [sp, #-32]!
  40b71c:	mov	x29, sp
  40b720:	stp	x19, x20, [sp, #16]
  40b724:	cbz	x1, 40b79c <ferror@plt+0x8f1c>
  40b728:	mov	x19, x0
  40b72c:	ldr	w0, [x0, #40]
  40b730:	mov	x20, x1
  40b734:	cmn	w0, #0x1
  40b738:	b.eq	40b758 <ferror@plt+0x8ed8>  // b.none
  40b73c:	ldr	x0, [x19]
  40b740:	bl	4159a0 <ferror@plt+0x13120>
  40b744:	strb	w0, [x20]
  40b748:	ldr	w0, [x19, #40]
  40b74c:	ldp	x19, x20, [sp, #16]
  40b750:	ldp	x29, x30, [sp], #32
  40b754:	ret
  40b758:	mov	w1, #0x0                   	// #0
  40b75c:	str	wzr, [x19, #40]
  40b760:	b	40b770 <ferror@plt+0x8ef0>
  40b764:	ldr	w1, [x19, #40]
  40b768:	add	w1, w1, #0x1
  40b76c:	str	w1, [x19, #40]
  40b770:	ldr	x0, [x19]
  40b774:	add	w1, w1, #0x1
  40b778:	bl	415540 <ferror@plt+0x12cc0>
  40b77c:	cbnz	x0, 40b764 <ferror@plt+0x8ee4>
  40b780:	ldr	x0, [x19]
  40b784:	bl	4159a0 <ferror@plt+0x13120>
  40b788:	strb	w0, [x20]
  40b78c:	ldr	w0, [x19, #40]
  40b790:	ldp	x19, x20, [sp, #16]
  40b794:	ldp	x29, x30, [sp], #32
  40b798:	ret
  40b79c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b7a0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40b7a4:	add	x2, x2, #0x8b0
  40b7a8:	add	x0, x0, #0x890
  40b7ac:	mov	w1, #0x296                 	// #662
  40b7b0:	bl	4028b0 <ferror@plt+0x30>
  40b7b4:	nop
  40b7b8:	stp	x29, x30, [sp, #-48]!
  40b7bc:	mov	x29, sp
  40b7c0:	stp	x19, x20, [sp, #16]
  40b7c4:	mov	x19, x0
  40b7c8:	mov	x0, x1
  40b7cc:	mov	w1, w2
  40b7d0:	str	w2, [x19]
  40b7d4:	stp	xzr, xzr, [x19, #8]
  40b7d8:	stp	xzr, xzr, [x19, #24]
  40b7dc:	bl	415540 <ferror@plt+0x12cc0>
  40b7e0:	cbz	x0, 40b828 <ferror@plt+0x8fa8>
  40b7e4:	ldr	w3, [x19, #20]
  40b7e8:	mov	w2, w1
  40b7ec:	str	x21, [sp, #32]
  40b7f0:	mov	x21, x0
  40b7f4:	str	w1, [x19, #16]
  40b7f8:	cmp	w1, w3
  40b7fc:	ldr	x0, [x19, #8]
  40b800:	b.ge	40b834 <ferror@plt+0x8fb4>  // b.tcont
  40b804:	mov	x1, x21
  40b808:	sxtw	x2, w2
  40b80c:	bl	402220 <memcpy@plt>
  40b810:	ldp	w0, w1, [x19, #16]
  40b814:	cmp	w0, w1
  40b818:	b.ge	40b854 <ferror@plt+0x8fd4>  // b.tcont
  40b81c:	ldr	x1, [x19, #8]
  40b820:	strb	wzr, [x1, w0, sxtw]
  40b824:	ldr	x21, [sp, #32]
  40b828:	ldp	x19, x20, [sp, #16]
  40b82c:	ldp	x29, x30, [sp], #48
  40b830:	ret
  40b834:	add	w1, w1, #0x1
  40b838:	lsl	w20, w1, #1
  40b83c:	sxtw	x1, w20
  40b840:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40b844:	ldr	w2, [x19, #16]
  40b848:	str	x0, [x19, #8]
  40b84c:	str	w20, [x19, #20]
  40b850:	b	40b804 <ferror@plt+0x8f84>
  40b854:	bl	4028fc <ferror@plt+0x7c>
  40b858:	stp	x29, x30, [sp, #-48]!
  40b85c:	mov	x29, sp
  40b860:	stp	x19, x20, [sp, #16]
  40b864:	mov	x19, x0
  40b868:	mov	w20, #0x0                   	// #0
  40b86c:	ldr	x0, [x0, #8]
  40b870:	bl	402640 <free@plt>
  40b874:	ldr	x0, [x19, #32]
  40b878:	cbz	x0, 40b8d8 <ferror@plt+0x9058>
  40b87c:	ldr	w1, [x0, #4]
  40b880:	add	x2, x0, w20, uxtw #3
  40b884:	cmp	w1, w20
  40b888:	b.ls	40b8cc <ferror@plt+0x904c>  // b.plast
  40b88c:	str	x21, [sp, #32]
  40b890:	ldr	x21, [x2, #8]
  40b894:	cbz	x21, 40b90c <ferror@plt+0x908c>
  40b898:	ldr	x0, [x21]
  40b89c:	add	w20, w20, #0x1
  40b8a0:	bl	402640 <free@plt>
  40b8a4:	mov	x0, x21
  40b8a8:	mov	x1, #0x10                  	// #16
  40b8ac:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40b8b0:	ldr	x0, [x19, #32]
  40b8b4:	cbz	x0, 40b914 <ferror@plt+0x9094>
  40b8b8:	ldr	w1, [x0, #4]
  40b8bc:	add	x2, x0, w20, uxtw #3
  40b8c0:	ldr	x21, [sp, #32]
  40b8c4:	cmp	w1, w20
  40b8c8:	b.hi	40b88c <ferror@plt+0x900c>  // b.pmore
  40b8cc:	ldrsb	w1, [x0, #3]
  40b8d0:	tbnz	w1, #31, 40b904 <ferror@plt+0x9084>
  40b8d4:	bl	402640 <free@plt>
  40b8d8:	ldr	x0, [x19, #24]
  40b8dc:	cbz	x0, 40b8f8 <ferror@plt+0x9078>
  40b8e0:	ldrsb	w1, [x0, #3]
  40b8e4:	tbnz	w1, #31, 40b8f4 <ferror@plt+0x9074>
  40b8e8:	ldp	x19, x20, [sp, #16]
  40b8ec:	ldp	x29, x30, [sp], #48
  40b8f0:	b	402640 <free@plt>
  40b8f4:	str	wzr, [x0, #4]
  40b8f8:	ldp	x19, x20, [sp, #16]
  40b8fc:	ldp	x29, x30, [sp], #48
  40b900:	ret
  40b904:	str	wzr, [x0, #4]
  40b908:	b	40b8d8 <ferror@plt+0x9058>
  40b90c:	add	w20, w20, #0x1
  40b910:	cbnz	x0, 40b8b8 <ferror@plt+0x9038>
  40b914:	ldr	x21, [sp, #32]
  40b918:	b	40b8d8 <ferror@plt+0x9058>
  40b91c:	nop
  40b920:	ldr	x2, [x0, #24]
  40b924:	cbz	x2, 40b960 <ferror@plt+0x90e0>
  40b928:	ldr	w0, [x2, #4]
  40b92c:	cbz	w0, 40b960 <ferror@plt+0x90e0>
  40b930:	sub	w0, w0, #0x1
  40b934:	add	x3, x2, #0x10
  40b938:	add	x2, x2, #0x8
  40b93c:	add	x0, x3, w0, uxtw #3
  40b940:	ldr	w3, [x2]
  40b944:	cmp	w3, w1
  40b948:	b.gt	40b954 <ferror@plt+0x90d4>
  40b94c:	ldr	w3, [x2, #4]
  40b950:	add	w1, w1, w3
  40b954:	add	x2, x2, #0x8
  40b958:	cmp	x2, x0
  40b95c:	b.ne	40b940 <ferror@plt+0x90c0>  // b.any
  40b960:	mov	w0, w1
  40b964:	ret
  40b968:	stp	x29, x30, [sp, #-96]!
  40b96c:	cmp	w4, #0x1
  40b970:	mov	x29, sp
  40b974:	stp	x19, x20, [sp, #16]
  40b978:	mov	w20, w1
  40b97c:	stp	x21, x22, [sp, #32]
  40b980:	mov	w22, w4
  40b984:	mov	x21, x0
  40b988:	stp	x23, x24, [sp, #48]
  40b98c:	stp	x25, x26, [sp, #64]
  40b990:	mov	x25, x3
  40b994:	b.le	40b9a8 <ferror@plt+0x9128>
  40b998:	add	x0, x3, w4, sxtw
  40b99c:	ldurb	w0, [x0, #-1]
  40b9a0:	cmp	w0, #0xa
  40b9a4:	b.eq	40bc44 <ferror@plt+0x93c4>  // b.none
  40b9a8:	ldr	x5, [x21, #24]
  40b9ac:	cbz	x5, 40ba10 <ferror@plt+0x9190>
  40b9b0:	ldr	w0, [x5, #4]
  40b9b4:	cbz	w0, 40ba10 <ferror@plt+0x9190>
  40b9b8:	sub	w0, w0, #0x1
  40b9bc:	add	x4, x5, #0x10
  40b9c0:	add	x5, x5, #0x8
  40b9c4:	add	x6, x4, w0, uxtw #3
  40b9c8:	mov	x1, x5
  40b9cc:	ldr	w3, [x1]
  40b9d0:	cmp	w3, w20
  40b9d4:	b.gt	40b9e0 <ferror@plt+0x9160>
  40b9d8:	ldr	w3, [x1, #4]
  40b9dc:	add	w20, w20, w3
  40b9e0:	add	x1, x1, #0x8
  40b9e4:	cmp	x6, x1
  40b9e8:	b.ne	40b9cc <ferror@plt+0x914c>  // b.any
  40b9ec:	add	x0, x4, w0, uxtw #3
  40b9f0:	ldr	w1, [x5]
  40b9f4:	cmp	w1, w2
  40b9f8:	b.gt	40ba04 <ferror@plt+0x9184>
  40b9fc:	ldr	w1, [x5, #4]
  40ba00:	add	w2, w2, w1
  40ba04:	add	x5, x5, #0x8
  40ba08:	cmp	x0, x5
  40ba0c:	b.ne	40b9f0 <ferror@plt+0x9170>  // b.any
  40ba10:	sub	w23, w2, #0x1
  40ba14:	subs	w24, w20, #0x1
  40ba18:	b.mi	40be04 <ferror@plt+0x9584>  // b.first
  40ba1c:	tbnz	w23, #31, 40bdd0 <ferror@plt+0x9550>
  40ba20:	cmp	w20, w2
  40ba24:	b.gt	40bb30 <ferror@plt+0x92b0>
  40ba28:	cmp	w24, w23
  40ba2c:	ldr	w1, [x21, #16]
  40ba30:	csel	w3, w24, w23, ge  // ge = tcont
  40ba34:	mov	w0, #0x0                   	// #0
  40ba38:	cmp	w1, w3
  40ba3c:	b.ge	40ba58 <ferror@plt+0x91d8>  // b.tcont
  40ba40:	ldp	x19, x20, [sp, #16]
  40ba44:	ldp	x21, x22, [sp, #32]
  40ba48:	ldp	x23, x24, [sp, #48]
  40ba4c:	ldp	x25, x26, [sp, #64]
  40ba50:	ldp	x29, x30, [sp], #96
  40ba54:	ret
  40ba58:	sub	w19, w2, w20
  40ba5c:	add	w26, w1, w22
  40ba60:	ldr	w2, [x21, #20]
  40ba64:	sub	w26, w26, w19
  40ba68:	ldr	x0, [x21, #8]
  40ba6c:	str	x27, [sp, #80]
  40ba70:	cmp	w26, w2
  40ba74:	b.ge	40bb4c <ferror@plt+0x92cc>  // b.tcont
  40ba78:	sxtw	x2, w1
  40ba7c:	sxtw	x23, w23
  40ba80:	add	x1, x0, x23
  40ba84:	add	x3, x0, x2
  40ba88:	cmp	x1, x3
  40ba8c:	b.hi	40bdec <ferror@plt+0x956c>  // b.pmore
  40ba90:	sxtw	x24, w24
  40ba94:	sxtw	x27, w22
  40ba98:	add	x3, x24, x27
  40ba9c:	sub	x2, x2, x23
  40baa0:	add	x0, x0, x3
  40baa4:	bl	402230 <memmove@plt>
  40baa8:	ldr	x0, [x21, #8]
  40baac:	mov	x2, x27
  40bab0:	mov	x1, x25
  40bab4:	add	x0, x0, x24
  40bab8:	bl	402220 <memcpy@plt>
  40babc:	ldr	w0, [x21, #20]
  40bac0:	str	w26, [x21, #16]
  40bac4:	cmp	w26, w0
  40bac8:	b.ge	40be20 <ferror@plt+0x95a0>  // b.tcont
  40bacc:	ldr	x0, [x21, #8]
  40bad0:	sub	w19, w22, w19
  40bad4:	strb	wzr, [x0, w26, sxtw]
  40bad8:	ldr	x22, [x21, #24]
  40badc:	cbz	x22, 40bb6c <ferror@plt+0x92ec>
  40bae0:	ldp	w0, w23, [x22]
  40bae4:	add	w24, w23, #0x1
  40bae8:	ubfx	x0, x0, #0, #31
  40baec:	mov	w1, w24
  40baf0:	cmp	w0, w23
  40baf4:	b.eq	40bb94 <ferror@plt+0x9314>  // b.none
  40baf8:	ubfiz	x23, x23, #3, #32
  40bafc:	mov	w0, #0x1                   	// #1
  40bb00:	add	x23, x23, #0x8
  40bb04:	ldr	x27, [sp, #80]
  40bb08:	str	w1, [x22, #4]
  40bb0c:	add	x1, x22, x23
  40bb10:	str	w20, [x22, x23]
  40bb14:	ldp	x21, x22, [sp, #32]
  40bb18:	str	w19, [x1, #4]
  40bb1c:	ldp	x19, x20, [sp, #16]
  40bb20:	ldp	x23, x24, [sp, #48]
  40bb24:	ldp	x25, x26, [sp, #64]
  40bb28:	ldp	x29, x30, [sp], #96
  40bb2c:	ret
  40bb30:	mov	w0, #0x0                   	// #0
  40bb34:	ldp	x19, x20, [sp, #16]
  40bb38:	ldp	x21, x22, [sp, #32]
  40bb3c:	ldp	x23, x24, [sp, #48]
  40bb40:	ldp	x25, x26, [sp, #64]
  40bb44:	ldp	x29, x30, [sp], #96
  40bb48:	ret
  40bb4c:	add	w27, w26, #0x1
  40bb50:	lsl	w27, w27, #1
  40bb54:	sxtw	x1, w27
  40bb58:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40bb5c:	ldr	w1, [x21, #16]
  40bb60:	str	x0, [x21, #8]
  40bb64:	str	w27, [x21, #20]
  40bb68:	b	40ba78 <ferror@plt+0x91f8>
  40bb6c:	mov	x1, #0x28                  	// #40
  40bb70:	mov	x0, #0x0                   	// #0
  40bb74:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40bb78:	mov	x22, x0
  40bb7c:	str	x22, [x21, #24]
  40bb80:	mov	x0, #0x4                   	// #4
  40bb84:	mov	w23, #0x0                   	// #0
  40bb88:	add	w1, w23, #0x1
  40bb8c:	str	x0, [x22]
  40bb90:	b	40baf8 <ferror@plt+0x9278>
  40bb94:	ldrsb	w0, [x22, #3]
  40bb98:	tbnz	w0, #31, 40bbdc <ferror@plt+0x935c>
  40bb9c:	mov	w0, w23
  40bba0:	bl	412508 <ferror@plt+0xfc88>
  40bba4:	mov	w2, w0
  40bba8:	and	w24, w0, #0x7fffffff
  40bbac:	ldr	x0, [x21, #24]
  40bbb0:	ubfiz	x1, x2, #3, #32
  40bbb4:	add	x1, x1, #0x8
  40bbb8:	mov	w23, #0x0                   	// #0
  40bbbc:	cbz	x0, 40bbc4 <ferror@plt+0x9344>
  40bbc0:	ldr	w23, [x0, #4]
  40bbc4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40bbc8:	str	x0, [x21, #24]
  40bbcc:	mov	x22, x0
  40bbd0:	add	w1, w23, #0x1
  40bbd4:	stp	w24, w23, [x0]
  40bbd8:	b	40baf8 <ferror@plt+0x9278>
  40bbdc:	cmp	w24, #0x4
  40bbe0:	mov	w0, #0x4                   	// #4
  40bbe4:	csel	w1, w24, w0, cs  // cs = hs, nlast
  40bbe8:	str	xzr, [x21, #24]
  40bbec:	add	x1, x1, #0x1
  40bbf0:	csel	w25, w24, w0, cs  // cs = hs, nlast
  40bbf4:	mov	x0, #0x0                   	// #0
  40bbf8:	and	x25, x25, #0x7fffffff
  40bbfc:	lsl	x1, x1, #3
  40bc00:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40bc04:	str	x0, [x21, #24]
  40bc08:	str	x25, [x0]
  40bc0c:	cbz	w23, 40bc34 <ferror@plt+0x93b4>
  40bc10:	sub	w3, w23, #0x1
  40bc14:	mov	x1, #0x8                   	// #8
  40bc18:	add	x3, x3, #0x2
  40bc1c:	lsl	x3, x3, #3
  40bc20:	ldr	x2, [x22, x1]
  40bc24:	str	x2, [x0, x1]
  40bc28:	add	x1, x1, #0x8
  40bc2c:	cmp	x3, x1
  40bc30:	b.ne	40bc20 <ferror@plt+0x93a0>  // b.any
  40bc34:	mov	w1, w24
  40bc38:	mov	x22, x0
  40bc3c:	str	w23, [x0, #4]
  40bc40:	b	40baf8 <ferror@plt+0x9278>
  40bc44:	sub	w22, w4, #0x1
  40bc48:	mov	x0, #0x10                  	// #16
  40bc4c:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40bc50:	mov	x23, x0
  40bc54:	sxtw	x1, w22
  40bc58:	mov	x0, x25
  40bc5c:	bl	45cbe8 <_obstack_memory_used@@Base+0x2c0>
  40bc60:	ldr	x20, [x21, #32]
  40bc64:	str	x0, [x23]
  40bc68:	str	w22, [x23, #8]
  40bc6c:	cbz	x20, 40bc9c <ferror@plt+0x941c>
  40bc70:	ldp	w0, w19, [x20]
  40bc74:	add	w22, w19, #0x1
  40bc78:	ubfx	x0, x0, #0, #31
  40bc7c:	mov	w1, w22
  40bc80:	cmp	w0, w19
  40bc84:	b.eq	40bcc4 <ferror@plt+0x9444>  // b.none
  40bc88:	add	x19, x20, w19, uxtw #3
  40bc8c:	str	w1, [x20, #4]
  40bc90:	mov	w0, #0x1                   	// #1
  40bc94:	str	x23, [x19, #8]
  40bc98:	b	40ba40 <ferror@plt+0x91c0>
  40bc9c:	mov	x1, #0x28                  	// #40
  40bca0:	mov	x0, #0x0                   	// #0
  40bca4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40bca8:	mov	x20, x0
  40bcac:	str	x20, [x21, #32]
  40bcb0:	mov	x0, #0x4                   	// #4
  40bcb4:	mov	w19, #0x0                   	// #0
  40bcb8:	add	w1, w19, #0x1
  40bcbc:	str	x0, [x20]
  40bcc0:	b	40bc88 <ferror@plt+0x9408>
  40bcc4:	ldrsb	w0, [x20, #3]
  40bcc8:	tbnz	w0, #31, 40bd0c <ferror@plt+0x948c>
  40bccc:	mov	w0, w19
  40bcd0:	bl	412508 <ferror@plt+0xfc88>
  40bcd4:	mov	w2, w0
  40bcd8:	and	w22, w0, #0x7fffffff
  40bcdc:	ldr	x0, [x21, #32]
  40bce0:	ubfiz	x1, x2, #3, #32
  40bce4:	add	x1, x1, #0x8
  40bce8:	mov	w19, #0x0                   	// #0
  40bcec:	cbz	x0, 40bcf4 <ferror@plt+0x9474>
  40bcf0:	ldr	w19, [x0, #4]
  40bcf4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40bcf8:	str	x0, [x21, #32]
  40bcfc:	mov	x20, x0
  40bd00:	add	w1, w19, #0x1
  40bd04:	stp	w22, w19, [x0]
  40bd08:	b	40bc88 <ferror@plt+0x9408>
  40bd0c:	cmp	w22, #0x4
  40bd10:	mov	w0, #0x4                   	// #4
  40bd14:	csel	w1, w22, w0, cs  // cs = hs, nlast
  40bd18:	str	xzr, [x21, #32]
  40bd1c:	add	x1, x1, #0x1
  40bd20:	csel	w24, w22, w0, cs  // cs = hs, nlast
  40bd24:	mov	x0, #0x0                   	// #0
  40bd28:	and	x24, x24, #0x7fffffff
  40bd2c:	lsl	x1, x1, #3
  40bd30:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40bd34:	mov	x3, x0
  40bd38:	str	x0, [x21, #32]
  40bd3c:	add	x4, x20, #0x8
  40bd40:	str	x24, [x3], #8
  40bd44:	cbz	w19, 40bd9c <ferror@plt+0x951c>
  40bd48:	add	x1, x20, #0x18
  40bd4c:	add	x2, x0, #0x18
  40bd50:	cmp	x1, x3
  40bd54:	sub	w1, w19, #0x1
  40bd58:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  40bd5c:	ccmp	w1, #0x9, #0x0, cs  // cs = hs, nlast
  40bd60:	b.ls	40bdac <ferror@plt+0x952c>  // b.plast
  40bd64:	lsr	w2, w19, #1
  40bd68:	mov	x5, #0x8                   	// #8
  40bd6c:	mov	x1, x5
  40bd70:	add	x2, x5, w2, uxtw #4
  40bd74:	nop
  40bd78:	ldr	q0, [x20, x1]
  40bd7c:	str	q0, [x0, x1]
  40bd80:	add	x1, x1, #0x10
  40bd84:	cmp	x2, x1
  40bd88:	b.ne	40bd78 <ferror@plt+0x94f8>  // b.any
  40bd8c:	and	x1, x19, #0xfffffffe
  40bd90:	tbz	w19, #0, 40bd9c <ferror@plt+0x951c>
  40bd94:	ldr	x2, [x4, x1, lsl #3]
  40bd98:	str	x2, [x3, x1, lsl #3]
  40bd9c:	mov	w1, w22
  40bda0:	mov	x20, x0
  40bda4:	str	w19, [x0, #4]
  40bda8:	b	40bc88 <ferror@plt+0x9408>
  40bdac:	ubfiz	x2, x1, #3, #32
  40bdb0:	mov	x1, #0x8                   	// #8
  40bdb4:	add	x2, x2, #0x10
  40bdb8:	ldr	x3, [x20, x1]
  40bdbc:	str	x3, [x0, x1]
  40bdc0:	add	x1, x1, #0x8
  40bdc4:	cmp	x1, x2
  40bdc8:	b.ne	40bdb8 <ferror@plt+0x9538>  // b.any
  40bdcc:	b	40bd9c <ferror@plt+0x951c>
  40bdd0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40bdd4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40bdd8:	add	x2, x2, #0x8c0
  40bddc:	add	x0, x0, #0x890
  40bde0:	mov	w1, #0x2fb                 	// #763
  40bde4:	str	x27, [sp, #80]
  40bde8:	bl	4028b0 <ferror@plt+0x30>
  40bdec:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40bdf0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40bdf4:	add	x2, x2, #0x8c0
  40bdf8:	add	x0, x0, #0x890
  40bdfc:	mov	w1, #0x30b                 	// #779
  40be00:	bl	4028b0 <ferror@plt+0x30>
  40be04:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40be08:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40be0c:	add	x2, x2, #0x8c0
  40be10:	add	x0, x0, #0x890
  40be14:	mov	w1, #0x2fa                 	// #762
  40be18:	str	x27, [sp, #80]
  40be1c:	bl	4028b0 <ferror@plt+0x30>
  40be20:	bl	4028fc <ferror@plt+0x7c>
  40be24:	nop
  40be28:	ldr	x0, [x0, #32]
  40be2c:	cbz	x0, 40be3c <ferror@plt+0x95bc>
  40be30:	ldr	w0, [x0, #4]
  40be34:	add	w0, w0, #0x1
  40be38:	ret
  40be3c:	mov	w0, #0x1                   	// #1
  40be40:	ret
  40be44:	nop
  40be48:	stp	x29, x30, [sp, #-48]!
  40be4c:	mov	x29, sp
  40be50:	ldr	x2, [x0, #32]
  40be54:	stp	x19, x20, [sp, #16]
  40be58:	mov	x20, x0
  40be5c:	mov	x19, x1
  40be60:	cbz	x2, 40bea4 <ferror@plt+0x9624>
  40be64:	str	x21, [sp, #32]
  40be68:	mov	w21, #0x0                   	// #0
  40be6c:	ldr	w1, [x2, #4]
  40be70:	add	x3, x2, w21, uxtw #3
  40be74:	mov	x0, x19
  40be78:	cmp	w1, w21
  40be7c:	b.ls	40bea0 <ferror@plt+0x9620>  // b.plast
  40be80:	ldr	x1, [x3, #8]
  40be84:	add	w21, w21, #0x1
  40be88:	ldr	x1, [x1]
  40be8c:	bl	410da0 <ferror@plt+0xe520>
  40be90:	mov	x0, x19
  40be94:	bl	40f0f0 <ferror@plt+0xc870>
  40be98:	ldr	x2, [x20, #32]
  40be9c:	cbnz	x2, 40be6c <ferror@plt+0x95ec>
  40bea0:	ldr	x21, [sp, #32]
  40bea4:	mov	x0, x19
  40bea8:	ldr	x1, [x20, #8]
  40beac:	ldp	x19, x20, [sp, #16]
  40beb0:	ldp	x29, x30, [sp], #48
  40beb4:	b	410da0 <ferror@plt+0xe520>
  40beb8:	stp	x29, x30, [sp, #-64]!
  40bebc:	mov	x29, sp
  40bec0:	stp	x21, x22, [sp, #32]
  40bec4:	mov	x21, x0
  40bec8:	ldr	x0, [x0, #32]
  40becc:	stp	x19, x20, [sp, #16]
  40bed0:	mov	x20, x1
  40bed4:	cbz	x0, 40bf54 <ferror@plt+0x96d4>
  40bed8:	str	x23, [sp, #48]
  40bedc:	mov	w23, #0x0                   	// #0
  40bee0:	ldr	w1, [x0, #4]
  40bee4:	cmp	w1, w23
  40bee8:	b.ls	40bf50 <ferror@plt+0x96d0>  // b.plast
  40beec:	add	x2, x0, w23, uxtw #3
  40bef0:	mov	w1, #0x2b                  	// #43
  40bef4:	mov	x0, x20
  40bef8:	ldr	x2, [x2, #8]
  40befc:	ldr	w22, [x2, #8]
  40bf00:	ldr	x19, [x2]
  40bf04:	bl	40f150 <ferror@plt+0xc8d0>
  40bf08:	cmp	w22, #0x0
  40bf0c:	b.le	40bf34 <ferror@plt+0x96b4>
  40bf10:	sub	w22, w22, #0x1
  40bf14:	add	x0, x19, #0x1
  40bf18:	add	x22, x22, x0
  40bf1c:	nop
  40bf20:	ldrb	w1, [x19], #1
  40bf24:	mov	x0, x20
  40bf28:	bl	40f150 <ferror@plt+0xc8d0>
  40bf2c:	cmp	x22, x19
  40bf30:	b.ne	40bf20 <ferror@plt+0x96a0>  // b.any
  40bf34:	mov	x0, x20
  40bf38:	mov	w1, #0xa                   	// #10
  40bf3c:	bl	40f150 <ferror@plt+0xc8d0>
  40bf40:	add	w23, w23, #0x1
  40bf44:	ldr	x0, [x21, #32]
  40bf48:	cbnz	x0, 40bee0 <ferror@plt+0x9660>
  40bf4c:	nop
  40bf50:	ldr	x23, [sp, #48]
  40bf54:	ldr	x0, [x21, #24]
  40bf58:	ldr	x19, [x21, #8]
  40bf5c:	ldr	w21, [x21, #16]
  40bf60:	cbz	x0, 40bf6c <ferror@plt+0x96ec>
  40bf64:	ldr	w0, [x0, #4]
  40bf68:	cbnz	w0, 40bfbc <ferror@plt+0x973c>
  40bf6c:	mov	x0, x20
  40bf70:	mov	w1, #0x20                  	// #32
  40bf74:	bl	40f150 <ferror@plt+0xc8d0>
  40bf78:	cmp	w21, #0x0
  40bf7c:	b.le	40bfa4 <ferror@plt+0x9724>
  40bf80:	sub	w21, w21, #0x1
  40bf84:	add	x0, x19, #0x1
  40bf88:	add	x21, x21, x0
  40bf8c:	nop
  40bf90:	ldrb	w1, [x19], #1
  40bf94:	mov	x0, x20
  40bf98:	bl	40f150 <ferror@plt+0xc8d0>
  40bf9c:	cmp	x19, x21
  40bfa0:	b.ne	40bf90 <ferror@plt+0x9710>  // b.any
  40bfa4:	mov	x0, x20
  40bfa8:	mov	w1, #0xa                   	// #10
  40bfac:	ldp	x19, x20, [sp, #16]
  40bfb0:	ldp	x21, x22, [sp, #32]
  40bfb4:	ldp	x29, x30, [sp], #64
  40bfb8:	b	40f150 <ferror@plt+0xc8d0>
  40bfbc:	mov	x0, x20
  40bfc0:	mov	w1, #0x2b                  	// #43
  40bfc4:	bl	40f150 <ferror@plt+0xc8d0>
  40bfc8:	cmp	w21, #0x0
  40bfcc:	b.le	40bfa4 <ferror@plt+0x9724>
  40bfd0:	sub	w21, w21, #0x1
  40bfd4:	add	x0, x19, #0x1
  40bfd8:	add	x21, x21, x0
  40bfdc:	nop
  40bfe0:	ldrb	w1, [x19], #1
  40bfe4:	mov	x0, x20
  40bfe8:	bl	40f150 <ferror@plt+0xc8d0>
  40bfec:	cmp	x21, x19
  40bff0:	b.ne	40bfe0 <ferror@plt+0x9760>  // b.any
  40bff4:	mov	x0, x20
  40bff8:	mov	w1, #0xa                   	// #10
  40bffc:	ldp	x19, x20, [sp, #16]
  40c000:	ldp	x21, x22, [sp, #32]
  40c004:	ldp	x29, x30, [sp], #64
  40c008:	b	40f150 <ferror@plt+0xc8d0>
  40c00c:	nop
  40c010:	stp	x29, x30, [sp, #-32]!
  40c014:	mov	x29, sp
  40c018:	stp	x19, x20, [sp, #16]
  40c01c:	mov	x20, x0
  40c020:	ldr	w0, [x0, #20]
  40c024:	cmp	w0, w1
  40c028:	b.le	40c038 <ferror@plt+0x97b8>
  40c02c:	ldp	x19, x20, [sp, #16]
  40c030:	ldp	x29, x30, [sp], #32
  40c034:	ret
  40c038:	add	w1, w1, #0x1
  40c03c:	ldr	x0, [x20, #8]
  40c040:	lsl	w19, w1, #1
  40c044:	sxtw	x1, w19
  40c048:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c04c:	str	x0, [x20, #8]
  40c050:	str	w19, [x20, #20]
  40c054:	ldp	x19, x20, [sp, #16]
  40c058:	ldp	x29, x30, [sp], #32
  40c05c:	ret
  40c060:	ldp	w1, w2, [x0, #16]
  40c064:	cmp	w1, w2
  40c068:	b.ge	40c078 <ferror@plt+0x97f8>  // b.tcont
  40c06c:	ldr	x0, [x0, #8]
  40c070:	strb	wzr, [x0, w1, sxtw]
  40c074:	ret
  40c078:	stp	x29, x30, [sp, #-16]!
  40c07c:	mov	x29, sp
  40c080:	bl	4028fc <ferror@plt+0x7c>
  40c084:	nop
  40c088:	cbz	x0, 40c0bc <ferror@plt+0x983c>
  40c08c:	stp	x29, x30, [sp, #-32]!
  40c090:	mov	x29, sp
  40c094:	str	x19, [sp, #16]
  40c098:	mov	x19, x0
  40c09c:	add	x0, x0, #0x8
  40c0a0:	ldr	x1, [x19, #8]
  40c0a4:	bl	40db20 <ferror@plt+0xb2a0>
  40c0a8:	mov	x0, x19
  40c0ac:	mov	x1, #0x30                  	// #48
  40c0b0:	ldr	x19, [sp, #16]
  40c0b4:	ldp	x29, x30, [sp], #32
  40c0b8:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40c0bc:	ret
  40c0c0:	stp	x29, x30, [sp, #-48]!
  40c0c4:	mov	x29, sp
  40c0c8:	stp	x19, x20, [sp, #16]
  40c0cc:	str	x21, [sp, #32]
  40c0d0:	cbz	x1, 40c134 <ferror@plt+0x98b4>
  40c0d4:	mov	x19, x0
  40c0d8:	add	x21, x0, #0x8
  40c0dc:	mov	x0, x21
  40c0e0:	mov	x20, x1
  40c0e4:	bl	40dc30 <ferror@plt+0xb3b0>
  40c0e8:	ldr	x0, [x19, #8]
  40c0ec:	cbz	x0, 40c120 <ferror@plt+0x98a0>
  40c0f0:	ldr	x0, [x0]
  40c0f4:	mov	x1, x20
  40c0f8:	ldr	x2, [x21, #8]
  40c0fc:	blr	x2
  40c100:	cbnz	w0, 40c120 <ferror@plt+0x98a0>
  40c104:	ldr	x0, [x19, #8]
  40c108:	cbz	x0, 40c120 <ferror@plt+0x98a0>
  40c10c:	ldr	x0, [x0, #8]
  40c110:	ldp	x19, x20, [sp, #16]
  40c114:	ldr	x21, [sp, #32]
  40c118:	ldp	x29, x30, [sp], #48
  40c11c:	ret
  40c120:	mov	x0, #0x0                   	// #0
  40c124:	ldp	x19, x20, [sp, #16]
  40c128:	ldr	x21, [sp, #32]
  40c12c:	ldp	x29, x30, [sp], #48
  40c130:	ret
  40c134:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c138:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c13c:	add	x2, x2, #0x8d0
  40c140:	add	x0, x0, #0x890
  40c144:	mov	w1, #0x140                 	// #320
  40c148:	bl	4028b0 <ferror@plt+0x30>
  40c14c:	nop
  40c150:	stp	x29, x30, [sp, #-48]!
  40c154:	mov	x29, sp
  40c158:	stp	x19, x20, [sp, #16]
  40c15c:	stp	x21, x22, [sp, #32]
  40c160:	cbz	x1, 40c2c4 <ferror@plt+0x9a44>
  40c164:	mov	x19, x0
  40c168:	add	x22, x0, #0x8
  40c16c:	mov	x0, x22
  40c170:	mov	x20, x1
  40c174:	bl	40dc30 <ferror@plt+0xb3b0>
  40c178:	ldr	x0, [x19, #8]
  40c17c:	cbz	x0, 40c1b8 <ferror@plt+0x9938>
  40c180:	ldr	x0, [x0]
  40c184:	mov	x1, x20
  40c188:	ldr	x2, [x22, #8]
  40c18c:	blr	x2
  40c190:	cbnz	w0, 40c1b8 <ferror@plt+0x9938>
  40c194:	ldr	x0, [x19, #8]
  40c198:	cbz	x0, 40c1b8 <ferror@plt+0x9938>
  40c19c:	ldr	x21, [x0, #8]
  40c1a0:	cbz	x21, 40c1b8 <ferror@plt+0x9938>
  40c1a4:	mov	x0, x21
  40c1a8:	ldp	x19, x20, [sp, #16]
  40c1ac:	ldp	x21, x22, [sp, #32]
  40c1b0:	ldp	x29, x30, [sp], #48
  40c1b4:	ret
  40c1b8:	mov	x0, #0x30                  	// #48
  40c1bc:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40c1c0:	mov	x2, x0
  40c1c4:	mov	x21, x0
  40c1c8:	adrp	x4, 40b000 <ferror@plt+0x8780>
  40c1cc:	adrp	x3, 40b000 <ferror@plt+0x8780>
  40c1d0:	add	x4, x4, #0x5c0
  40c1d4:	add	x3, x3, #0x5c8
  40c1d8:	str	x20, [x2], #8
  40c1dc:	mov	w5, #0xffffffff            	// #-1
  40c1e0:	str	xzr, [x21, #8]
  40c1e4:	mov	x0, x22
  40c1e8:	stp	x4, xzr, [x2, #8]
  40c1ec:	mov	x1, x20
  40c1f0:	str	x3, [x2, #24]
  40c1f4:	str	w5, [x21, #40]
  40c1f8:	bl	40dc30 <ferror@plt+0xb3b0>
  40c1fc:	ldr	x0, [x19, #8]
  40c200:	cbz	x0, 40c290 <ferror@plt+0x9a10>
  40c204:	ldr	x0, [x0]
  40c208:	mov	x1, x20
  40c20c:	ldr	x2, [x22, #8]
  40c210:	blr	x2
  40c214:	cmp	w0, #0x0
  40c218:	ldr	x1, [x19, #8]
  40c21c:	mov	w22, w0
  40c220:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  40c224:	b.ne	40c264 <ferror@plt+0x99e4>  // b.any
  40c228:	mov	x0, #0x28                  	// #40
  40c22c:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40c230:	ldr	x1, [x19, #8]
  40c234:	stp	x20, x21, [x0]
  40c238:	cbz	x1, 40c2a4 <ferror@plt+0x9a24>
  40c23c:	tbnz	w22, #31, 40c2b0 <ferror@plt+0x9a30>
  40c240:	ldr	x2, [x1, #16]
  40c244:	stp	x2, x1, [x0, #16]
  40c248:	str	xzr, [x1, #16]
  40c24c:	str	x0, [x19, #8]
  40c250:	mov	x0, x21
  40c254:	ldp	x19, x20, [sp, #16]
  40c258:	ldp	x21, x22, [sp, #32]
  40c25c:	ldp	x29, x30, [sp], #48
  40c260:	ret
  40c264:	ldr	x2, [x19, #32]
  40c268:	cbz	x2, 40c278 <ferror@plt+0x99f8>
  40c26c:	ldr	x0, [x1, #8]
  40c270:	blr	x2
  40c274:	ldr	x1, [x19, #8]
  40c278:	str	x21, [x1, #8]
  40c27c:	mov	x0, x21
  40c280:	ldp	x19, x20, [sp, #16]
  40c284:	ldp	x21, x22, [sp, #32]
  40c288:	ldp	x29, x30, [sp], #48
  40c28c:	ret
  40c290:	mov	x0, #0x28                  	// #40
  40c294:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40c298:	ldr	x1, [x19, #8]
  40c29c:	stp	x20, x21, [x0]
  40c2a0:	cbnz	x1, 40c240 <ferror@plt+0x99c0>
  40c2a4:	str	x0, [x19, #8]
  40c2a8:	stp	xzr, xzr, [x0, #16]
  40c2ac:	b	40c250 <ferror@plt+0x99d0>
  40c2b0:	ldr	x2, [x1, #24]
  40c2b4:	stp	x1, x2, [x0, #16]
  40c2b8:	str	xzr, [x1, #24]
  40c2bc:	str	x0, [x19, #8]
  40c2c0:	b	40c250 <ferror@plt+0x99d0>
  40c2c4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c2c8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c2cc:	add	x2, x2, #0x8e0
  40c2d0:	add	x0, x0, #0x890
  40c2d4:	mov	w1, #0x149                 	// #329
  40c2d8:	bl	4028b0 <ferror@plt+0x30>
  40c2dc:	nop
  40c2e0:	stp	x29, x30, [sp, #-64]!
  40c2e4:	mov	x29, sp
  40c2e8:	stp	x19, x20, [sp, #16]
  40c2ec:	mov	x20, x0
  40c2f0:	stp	x23, x24, [sp, #48]
  40c2f4:	add	x23, x0, #0x8
  40c2f8:	mov	x0, x23
  40c2fc:	stp	x21, x22, [sp, #32]
  40c300:	mov	w21, w1
  40c304:	bl	40dda0 <ferror@plt+0xb520>
  40c308:	ldr	x0, [x20, #8]
  40c30c:	cbz	x0, 40c34c <ferror@plt+0x9acc>
  40c310:	ldr	w0, [x0]
  40c314:	mov	w1, w21
  40c318:	ldr	x2, [x23, #8]
  40c31c:	blr	x2
  40c320:	cbnz	w0, 40c34c <ferror@plt+0x9acc>
  40c324:	ldr	x0, [x20, #8]
  40c328:	cbz	x0, 40c34c <ferror@plt+0x9acc>
  40c32c:	ldr	x19, [x0, #8]
  40c330:	cbz	x19, 40c34c <ferror@plt+0x9acc>
  40c334:	mov	x0, x19
  40c338:	ldp	x19, x20, [sp, #16]
  40c33c:	ldp	x21, x22, [sp, #32]
  40c340:	ldp	x23, x24, [sp, #48]
  40c344:	ldp	x29, x30, [sp], #64
  40c348:	ret
  40c34c:	mov	x0, #0x28                  	// #40
  40c350:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40c354:	mov	x19, x0
  40c358:	stp	xzr, xzr, [x0, #24]
  40c35c:	mov	w1, w21
  40c360:	ldr	x0, [x20]
  40c364:	str	w21, [x19]
  40c368:	stp	xzr, xzr, [x19, #8]
  40c36c:	bl	415540 <ferror@plt+0x12cc0>
  40c370:	mov	x24, x0
  40c374:	cbz	x0, 40c3b0 <ferror@plt+0x9b30>
  40c378:	ldr	w3, [x19, #20]
  40c37c:	mov	w2, w1
  40c380:	str	w1, [x19, #16]
  40c384:	cmp	w1, w3
  40c388:	ldr	x0, [x19, #8]
  40c38c:	b.ge	40c464 <ferror@plt+0x9be4>  // b.tcont
  40c390:	mov	x1, x24
  40c394:	sxtw	x2, w2
  40c398:	bl	402220 <memcpy@plt>
  40c39c:	ldp	w0, w1, [x19, #16]
  40c3a0:	cmp	w0, w1
  40c3a4:	b.ge	40c4d8 <ferror@plt+0x9c58>  // b.tcont
  40c3a8:	ldr	x1, [x19, #8]
  40c3ac:	strb	wzr, [x1, w0, sxtw]
  40c3b0:	ldr	x0, [x19, #8]
  40c3b4:	cbz	x0, 40c4bc <ferror@plt+0x9c3c>
  40c3b8:	mov	x0, x23
  40c3bc:	mov	w1, w21
  40c3c0:	bl	40dda0 <ferror@plt+0xb520>
  40c3c4:	ldr	x0, [x20, #8]
  40c3c8:	cbz	x0, 40c484 <ferror@plt+0x9c04>
  40c3cc:	ldr	w0, [x0]
  40c3d0:	mov	w1, w21
  40c3d4:	ldr	x2, [x23, #8]
  40c3d8:	blr	x2
  40c3dc:	mov	w22, w0
  40c3e0:	ldr	x1, [x20, #8]
  40c3e4:	cmp	x1, #0x0
  40c3e8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40c3ec:	b.eq	40c434 <ferror@plt+0x9bb4>  // b.none
  40c3f0:	mov	x0, #0x28                  	// #40
  40c3f4:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40c3f8:	ldr	x1, [x20, #8]
  40c3fc:	str	w21, [x0]
  40c400:	str	x19, [x0, #8]
  40c404:	cbz	x1, 40c49c <ferror@plt+0x9c1c>
  40c408:	tbnz	w22, #31, 40c4a8 <ferror@plt+0x9c28>
  40c40c:	ldr	x2, [x1, #16]
  40c410:	stp	x2, x1, [x0, #16]
  40c414:	str	xzr, [x1, #16]
  40c418:	str	x0, [x20, #8]
  40c41c:	mov	x0, x19
  40c420:	ldp	x19, x20, [sp, #16]
  40c424:	ldp	x21, x22, [sp, #32]
  40c428:	ldp	x23, x24, [sp, #48]
  40c42c:	ldp	x29, x30, [sp], #64
  40c430:	ret
  40c434:	ldr	x2, [x20, #32]
  40c438:	cbz	x2, 40c448 <ferror@plt+0x9bc8>
  40c43c:	ldr	x0, [x1, #8]
  40c440:	blr	x2
  40c444:	ldr	x1, [x20, #8]
  40c448:	str	x19, [x1, #8]
  40c44c:	mov	x0, x19
  40c450:	ldp	x19, x20, [sp, #16]
  40c454:	ldp	x21, x22, [sp, #32]
  40c458:	ldp	x23, x24, [sp, #48]
  40c45c:	ldp	x29, x30, [sp], #64
  40c460:	ret
  40c464:	add	w1, w1, #0x1
  40c468:	lsl	w22, w1, #1
  40c46c:	sxtw	x1, w22
  40c470:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c474:	ldr	w2, [x19, #16]
  40c478:	str	x0, [x19, #8]
  40c47c:	str	w22, [x19, #20]
  40c480:	b	40c390 <ferror@plt+0x9b10>
  40c484:	mov	x0, #0x28                  	// #40
  40c488:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40c48c:	ldr	x1, [x20, #8]
  40c490:	str	w21, [x0]
  40c494:	str	x19, [x0, #8]
  40c498:	cbnz	x1, 40c40c <ferror@plt+0x9b8c>
  40c49c:	str	x0, [x20, #8]
  40c4a0:	stp	xzr, xzr, [x0, #16]
  40c4a4:	b	40c41c <ferror@plt+0x9b9c>
  40c4a8:	ldr	x2, [x1, #24]
  40c4ac:	stp	x1, x2, [x0, #16]
  40c4b0:	str	xzr, [x1, #24]
  40c4b4:	str	x0, [x20, #8]
  40c4b8:	b	40c41c <ferror@plt+0x9b9c>
  40c4bc:	mov	x0, x19
  40c4c0:	bl	40b858 <ferror@plt+0x8fd8>
  40c4c4:	mov	x0, x19
  40c4c8:	mov	x1, #0x28                  	// #40
  40c4cc:	mov	x19, #0x0                   	// #0
  40c4d0:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40c4d4:	b	40c334 <ferror@plt+0x9ab4>
  40c4d8:	bl	4028fc <ferror@plt+0x7c>
  40c4dc:	nop
  40c4e0:	stp	x29, x30, [sp, #-96]!
  40c4e4:	mov	x29, sp
  40c4e8:	stp	x19, x20, [sp, #16]
  40c4ec:	mov	w20, w3
  40c4f0:	stp	x21, x22, [sp, #32]
  40c4f4:	mov	x21, x4
  40c4f8:	stp	x23, x24, [sp, #48]
  40c4fc:	mov	w24, w2
  40c500:	stp	x25, x26, [sp, #64]
  40c504:	mov	w25, w5
  40c508:	bl	40c2e0 <ferror@plt+0x9a60>
  40c50c:	cbz	x0, 40c69c <ferror@plt+0x9e1c>
  40c510:	mov	x19, x0
  40c514:	cmp	w25, #0x1
  40c518:	b.le	40c52c <ferror@plt+0x9cac>
  40c51c:	add	x0, x21, w25, sxtw
  40c520:	ldurb	w0, [x0, #-1]
  40c524:	cmp	w0, #0xa
  40c528:	b.eq	40c78c <ferror@plt+0x9f0c>  // b.none
  40c52c:	ldr	x0, [x19, #24]
  40c530:	cbz	x0, 40c594 <ferror@plt+0x9d14>
  40c534:	ldr	w1, [x0, #4]
  40c538:	cbz	w1, 40c594 <ferror@plt+0x9d14>
  40c53c:	sub	w1, w1, #0x1
  40c540:	add	x4, x0, #0x10
  40c544:	add	x0, x0, #0x8
  40c548:	add	x5, x4, w1, uxtw #3
  40c54c:	mov	x3, x0
  40c550:	ldr	w2, [x3]
  40c554:	cmp	w2, w24
  40c558:	b.gt	40c564 <ferror@plt+0x9ce4>
  40c55c:	ldr	w2, [x3, #4]
  40c560:	add	w24, w24, w2
  40c564:	add	x3, x3, #0x8
  40c568:	cmp	x5, x3
  40c56c:	b.ne	40c550 <ferror@plt+0x9cd0>  // b.any
  40c570:	add	x1, x4, w1, uxtw #3
  40c574:	ldr	w2, [x0]
  40c578:	cmp	w2, w20
  40c57c:	b.gt	40c588 <ferror@plt+0x9d08>
  40c580:	ldr	w2, [x0, #4]
  40c584:	add	w20, w20, w2
  40c588:	add	x0, x0, #0x8
  40c58c:	cmp	x1, x0
  40c590:	b.ne	40c574 <ferror@plt+0x9cf4>  // b.any
  40c594:	sub	w22, w20, #0x1
  40c598:	subs	w23, w24, #0x1
  40c59c:	b.mi	40c940 <ferror@plt+0xa0c0>  // b.first
  40c5a0:	tbnz	w22, #31, 40c978 <ferror@plt+0xa0f8>
  40c5a4:	cmp	w20, w24
  40c5a8:	b.lt	40c69c <ferror@plt+0x9e1c>  // b.tstop
  40c5ac:	cmp	w23, w22
  40c5b0:	ldr	w2, [x19, #16]
  40c5b4:	csel	w1, w23, w22, ge  // ge = tcont
  40c5b8:	mov	w0, #0x0                   	// #0
  40c5bc:	cmp	w1, w2
  40c5c0:	b.gt	40c6a0 <ferror@plt+0x9e20>
  40c5c4:	ldr	w1, [x19, #20]
  40c5c8:	sub	w20, w20, w24
  40c5cc:	add	w26, w25, w2
  40c5d0:	ldr	x0, [x19, #8]
  40c5d4:	str	x27, [sp, #80]
  40c5d8:	sub	w26, w26, w20
  40c5dc:	cmp	w26, w1
  40c5e0:	b.ge	40c76c <ferror@plt+0x9eec>  // b.tcont
  40c5e4:	sxtw	x22, w22
  40c5e8:	sxtw	x2, w2
  40c5ec:	add	x1, x0, x22
  40c5f0:	add	x3, x0, x2
  40c5f4:	cmp	x1, x3
  40c5f8:	b.hi	40c960 <ferror@plt+0xa0e0>  // b.pmore
  40c5fc:	sxtw	x23, w23
  40c600:	sxtw	x27, w25
  40c604:	add	x3, x23, x27
  40c608:	sub	x2, x2, x22
  40c60c:	add	x0, x0, x3
  40c610:	bl	402230 <memmove@plt>
  40c614:	ldr	x0, [x19, #8]
  40c618:	mov	x2, x27
  40c61c:	mov	x1, x21
  40c620:	add	x0, x0, x23
  40c624:	bl	402220 <memcpy@plt>
  40c628:	ldr	w0, [x19, #20]
  40c62c:	str	w26, [x19, #16]
  40c630:	cmp	w26, w0
  40c634:	b.ge	40c95c <ferror@plt+0xa0dc>  // b.tcont
  40c638:	ldr	x0, [x19, #8]
  40c63c:	sub	w25, w25, w20
  40c640:	strb	wzr, [x0, w26, sxtw]
  40c644:	ldr	x21, [x19, #24]
  40c648:	cbz	x21, 40c8f0 <ferror@plt+0xa070>
  40c64c:	ldp	w0, w20, [x21]
  40c650:	add	w22, w20, #0x1
  40c654:	ubfx	x0, x0, #0, #31
  40c658:	mov	w1, w22
  40c65c:	cmp	w0, w20
  40c660:	b.eq	40c6b8 <ferror@plt+0x9e38>  // b.none
  40c664:	ubfiz	x20, x20, #3, #32
  40c668:	mov	w0, #0x1                   	// #1
  40c66c:	add	x20, x20, #0x8
  40c670:	ldr	x27, [sp, #80]
  40c674:	str	w1, [x21, #4]
  40c678:	add	x1, x21, x20
  40c67c:	str	w24, [x21, x20]
  40c680:	ldp	x19, x20, [sp, #16]
  40c684:	str	w25, [x1, #4]
  40c688:	ldp	x21, x22, [sp, #32]
  40c68c:	ldp	x23, x24, [sp, #48]
  40c690:	ldp	x25, x26, [sp, #64]
  40c694:	ldp	x29, x30, [sp], #96
  40c698:	ret
  40c69c:	mov	w0, #0x0                   	// #0
  40c6a0:	ldp	x19, x20, [sp, #16]
  40c6a4:	ldp	x21, x22, [sp, #32]
  40c6a8:	ldp	x23, x24, [sp, #48]
  40c6ac:	ldp	x25, x26, [sp, #64]
  40c6b0:	ldp	x29, x30, [sp], #96
  40c6b4:	ret
  40c6b8:	ldrsb	w0, [x21, #3]
  40c6bc:	tbnz	w0, #31, 40c700 <ferror@plt+0x9e80>
  40c6c0:	mov	w0, w20
  40c6c4:	bl	412508 <ferror@plt+0xfc88>
  40c6c8:	mov	w2, w0
  40c6cc:	and	w22, w0, #0x7fffffff
  40c6d0:	ldr	x0, [x19, #24]
  40c6d4:	ubfiz	x1, x2, #3, #32
  40c6d8:	add	x1, x1, #0x8
  40c6dc:	mov	w20, #0x0                   	// #0
  40c6e0:	cbz	x0, 40c6e8 <ferror@plt+0x9e68>
  40c6e4:	ldr	w20, [x0, #4]
  40c6e8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c6ec:	str	x0, [x19, #24]
  40c6f0:	mov	x21, x0
  40c6f4:	add	w1, w20, #0x1
  40c6f8:	stp	w22, w20, [x0]
  40c6fc:	b	40c664 <ferror@plt+0x9de4>
  40c700:	cmp	w22, #0x4
  40c704:	mov	w0, #0x4                   	// #4
  40c708:	csel	w1, w22, w0, cs  // cs = hs, nlast
  40c70c:	str	xzr, [x19, #24]
  40c710:	add	x1, x1, #0x1
  40c714:	csel	w23, w22, w0, cs  // cs = hs, nlast
  40c718:	mov	x0, #0x0                   	// #0
  40c71c:	and	x23, x23, #0x7fffffff
  40c720:	lsl	x1, x1, #3
  40c724:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c728:	str	x0, [x19, #24]
  40c72c:	str	x23, [x0]
  40c730:	cbz	w20, 40c75c <ferror@plt+0x9edc>
  40c734:	sub	w3, w20, #0x1
  40c738:	mov	x1, #0x8                   	// #8
  40c73c:	add	x3, x3, #0x2
  40c740:	lsl	x3, x3, #3
  40c744:	nop
  40c748:	ldr	x2, [x21, x1]
  40c74c:	str	x2, [x0, x1]
  40c750:	add	x1, x1, #0x8
  40c754:	cmp	x3, x1
  40c758:	b.ne	40c748 <ferror@plt+0x9ec8>  // b.any
  40c75c:	mov	w1, w22
  40c760:	mov	x21, x0
  40c764:	str	w20, [x0, #4]
  40c768:	b	40c664 <ferror@plt+0x9de4>
  40c76c:	add	w27, w26, #0x1
  40c770:	lsl	w27, w27, #1
  40c774:	sxtw	x1, w27
  40c778:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c77c:	ldr	w2, [x19, #16]
  40c780:	str	x0, [x19, #8]
  40c784:	str	w27, [x19, #20]
  40c788:	b	40c5e4 <ferror@plt+0x9d64>
  40c78c:	sub	w25, w25, #0x1
  40c790:	mov	x0, #0x10                  	// #16
  40c794:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  40c798:	mov	x22, x0
  40c79c:	sxtw	x1, w25
  40c7a0:	mov	x0, x21
  40c7a4:	bl	45cbe8 <_obstack_memory_used@@Base+0x2c0>
  40c7a8:	ldr	x20, [x19, #32]
  40c7ac:	str	x0, [x22]
  40c7b0:	str	w25, [x22, #8]
  40c7b4:	cbz	x20, 40c918 <ferror@plt+0xa098>
  40c7b8:	ldp	w0, w21, [x20]
  40c7bc:	add	w23, w21, #0x1
  40c7c0:	ubfx	x0, x0, #0, #31
  40c7c4:	mov	w1, w23
  40c7c8:	cmp	w0, w21
  40c7cc:	b.eq	40c7e4 <ferror@plt+0x9f64>  // b.none
  40c7d0:	add	x21, x20, w21, uxtw #3
  40c7d4:	str	w1, [x20, #4]
  40c7d8:	mov	w0, #0x1                   	// #1
  40c7dc:	str	x22, [x21, #8]
  40c7e0:	b	40c6a0 <ferror@plt+0x9e20>
  40c7e4:	ldrsb	w0, [x20, #3]
  40c7e8:	tbnz	w0, #31, 40c82c <ferror@plt+0x9fac>
  40c7ec:	mov	w0, w21
  40c7f0:	bl	412508 <ferror@plt+0xfc88>
  40c7f4:	mov	w2, w0
  40c7f8:	and	w23, w0, #0x7fffffff
  40c7fc:	ldr	x0, [x19, #32]
  40c800:	ubfiz	x1, x2, #3, #32
  40c804:	add	x1, x1, #0x8
  40c808:	mov	w21, #0x0                   	// #0
  40c80c:	cbz	x0, 40c814 <ferror@plt+0x9f94>
  40c810:	ldr	w21, [x0, #4]
  40c814:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c818:	str	x0, [x19, #32]
  40c81c:	mov	x20, x0
  40c820:	add	w1, w21, #0x1
  40c824:	stp	w23, w21, [x0]
  40c828:	b	40c7d0 <ferror@plt+0x9f50>
  40c82c:	cmp	w23, #0x4
  40c830:	mov	w0, #0x4                   	// #4
  40c834:	csel	w1, w23, w0, cs  // cs = hs, nlast
  40c838:	str	xzr, [x19, #32]
  40c83c:	add	x1, x1, #0x1
  40c840:	csel	w24, w23, w0, cs  // cs = hs, nlast
  40c844:	mov	x0, #0x0                   	// #0
  40c848:	and	x24, x24, #0x7fffffff
  40c84c:	lsl	x1, x1, #3
  40c850:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c854:	mov	x3, x0
  40c858:	str	x0, [x19, #32]
  40c85c:	add	x4, x20, #0x8
  40c860:	str	x24, [x3], #8
  40c864:	cbz	w21, 40c8bc <ferror@plt+0xa03c>
  40c868:	add	x1, x20, #0x18
  40c86c:	add	x2, x0, #0x18
  40c870:	cmp	x1, x3
  40c874:	sub	w1, w21, #0x1
  40c878:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  40c87c:	ccmp	w1, #0x9, #0x0, cs  // cs = hs, nlast
  40c880:	b.ls	40c8cc <ferror@plt+0xa04c>  // b.plast
  40c884:	lsr	w2, w21, #1
  40c888:	mov	x5, #0x8                   	// #8
  40c88c:	mov	x1, x5
  40c890:	add	x2, x5, w2, uxtw #4
  40c894:	nop
  40c898:	ldr	q0, [x20, x1]
  40c89c:	str	q0, [x0, x1]
  40c8a0:	add	x1, x1, #0x10
  40c8a4:	cmp	x2, x1
  40c8a8:	b.ne	40c898 <ferror@plt+0xa018>  // b.any
  40c8ac:	and	x1, x21, #0xfffffffe
  40c8b0:	tbz	w21, #0, 40c8bc <ferror@plt+0xa03c>
  40c8b4:	ldr	x2, [x4, x1, lsl #3]
  40c8b8:	str	x2, [x3, x1, lsl #3]
  40c8bc:	mov	w1, w23
  40c8c0:	mov	x20, x0
  40c8c4:	str	w21, [x0, #4]
  40c8c8:	b	40c7d0 <ferror@plt+0x9f50>
  40c8cc:	ubfiz	x2, x1, #3, #32
  40c8d0:	mov	x1, #0x8                   	// #8
  40c8d4:	add	x2, x2, #0x10
  40c8d8:	ldr	x3, [x20, x1]
  40c8dc:	str	x3, [x0, x1]
  40c8e0:	add	x1, x1, #0x8
  40c8e4:	cmp	x1, x2
  40c8e8:	b.ne	40c8d8 <ferror@plt+0xa058>  // b.any
  40c8ec:	b	40c8bc <ferror@plt+0xa03c>
  40c8f0:	mov	x1, #0x28                  	// #40
  40c8f4:	mov	x0, #0x0                   	// #0
  40c8f8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c8fc:	mov	x21, x0
  40c900:	str	x21, [x19, #24]
  40c904:	mov	x0, #0x4                   	// #4
  40c908:	mov	w20, #0x0                   	// #0
  40c90c:	add	w1, w20, #0x1
  40c910:	str	x0, [x21]
  40c914:	b	40c664 <ferror@plt+0x9de4>
  40c918:	mov	x1, #0x28                  	// #40
  40c91c:	mov	x0, #0x0                   	// #0
  40c920:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  40c924:	mov	x20, x0
  40c928:	str	x20, [x19, #32]
  40c92c:	mov	x0, #0x4                   	// #4
  40c930:	mov	w21, #0x0                   	// #0
  40c934:	add	w1, w21, #0x1
  40c938:	str	x0, [x20]
  40c93c:	b	40c7d0 <ferror@plt+0x9f50>
  40c940:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c944:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c948:	add	x2, x2, #0x8c0
  40c94c:	add	x0, x0, #0x890
  40c950:	mov	w1, #0x2fa                 	// #762
  40c954:	str	x27, [sp, #80]
  40c958:	bl	4028b0 <ferror@plt+0x30>
  40c95c:	bl	4028fc <ferror@plt+0x7c>
  40c960:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c964:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c968:	add	x2, x2, #0x8c0
  40c96c:	add	x0, x0, #0x890
  40c970:	mov	w1, #0x30b                 	// #779
  40c974:	bl	4028b0 <ferror@plt+0x30>
  40c978:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c97c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40c980:	add	x2, x2, #0x8c0
  40c984:	add	x0, x0, #0x890
  40c988:	mov	w1, #0x2fb                 	// #763
  40c98c:	str	x27, [sp, #80]
  40c990:	bl	4028b0 <ferror@plt+0x30>
  40c994:	nop
  40c998:	stp	x29, x30, [sp, #-128]!
  40c99c:	mov	x29, sp
  40c9a0:	stp	x19, x20, [sp, #16]
  40c9a4:	mov	x20, x0
  40c9a8:	ldr	w0, [x1]
  40c9ac:	mov	x19, x1
  40c9b0:	add	x8, sp, #0x40
  40c9b4:	stp	x21, x22, [sp, #32]
  40c9b8:	str	x23, [sp, #48]
  40c9bc:	bl	415ca0 <ferror@plt+0x13420>
  40c9c0:	ldr	w0, [x19, #4]
  40c9c4:	add	x8, sp, #0x60
  40c9c8:	ldp	w22, w23, [sp, #72]
  40c9cc:	ldr	x21, [sp, #64]
  40c9d0:	bl	415ca0 <ferror@plt+0x13420>
  40c9d4:	ldr	x1, [sp, #96]
  40c9d8:	cmp	x1, x21
  40c9dc:	b.eq	40c9f8 <ferror@plt+0xa178>  // b.none
  40c9e0:	mov	w0, #0x0                   	// #0
  40c9e4:	ldp	x19, x20, [sp, #16]
  40c9e8:	ldp	x21, x22, [sp, #32]
  40c9ec:	ldr	x23, [sp, #48]
  40c9f0:	ldp	x29, x30, [sp], #128
  40c9f4:	ret
  40c9f8:	ldp	w0, w21, [sp, #104]
  40c9fc:	cmp	w23, #0x0
  40ca00:	ccmp	w0, w22, #0x0, ne  // ne = any
  40ca04:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  40ca08:	b.eq	40c9e0 <ferror@plt+0xa160>  // b.none
  40ca0c:	mov	x0, x20
  40ca10:	bl	40c150 <ferror@plt+0x98d0>
  40ca14:	ldrb	w1, [x20]
  40ca18:	cbz	w1, 40c9e0 <ferror@plt+0xa160>
  40ca1c:	mov	w1, w22
  40ca20:	ldp	x20, x19, [x19, #8]
  40ca24:	bl	40c2e0 <ferror@plt+0x9a60>
  40ca28:	cbz	x0, 40c9e0 <ferror@plt+0xa160>
  40ca2c:	mov	w4, w19
  40ca30:	mov	x3, x20
  40ca34:	mov	w2, w21
  40ca38:	mov	w1, w23
  40ca3c:	ldp	x19, x20, [sp, #16]
  40ca40:	ldp	x21, x22, [sp, #32]
  40ca44:	ldr	x23, [sp, #48]
  40ca48:	ldp	x29, x30, [sp], #128
  40ca4c:	b	40b968 <ferror@plt+0x90e8>
  40ca50:	stp	x29, x30, [sp, #-160]!
  40ca54:	mov	x29, sp
  40ca58:	stp	x21, x22, [sp, #32]
  40ca5c:	mov	x22, x0
  40ca60:	ldrb	w0, [x0]
  40ca64:	cbz	w0, 40cb04 <ferror@plt+0xa284>
  40ca68:	ldrb	w0, [x1, #160]
  40ca6c:	mov	x21, x1
  40ca70:	cbnz	w0, 40cb6c <ferror@plt+0xa2ec>
  40ca74:	ldr	w0, [x1, #120]
  40ca78:	cbz	w0, 40cb04 <ferror@plt+0xa284>
  40ca7c:	stp	x23, x24, [sp, #48]
  40ca80:	add	x23, x1, #0x78
  40ca84:	mov	x24, #0xfffffffffffffff0    	// #-16
  40ca88:	stp	x19, x20, [sp, #16]
  40ca8c:	mov	w19, #0x0                   	// #0
  40ca90:	stp	x25, x26, [sp, #64]
  40ca94:	stp	x27, x28, [sp, #80]
  40ca98:	cmp	w19, #0x1
  40ca9c:	sxtw	x2, w19
  40caa0:	b.le	40cb7c <ferror@plt+0xa2fc>
  40caa4:	ldr	x2, [x23, #32]
  40caa8:	add	x0, x24, w19, sxtw #3
  40caac:	add	x2, x2, x0
  40cab0:	ldr	x20, [x2]
  40cab4:	add	x8, sp, #0x60
  40cab8:	ldr	w0, [x20]
  40cabc:	bl	415ca0 <ferror@plt+0x13420>
  40cac0:	ldr	w0, [x20, #4]
  40cac4:	add	x8, sp, #0x80
  40cac8:	ldp	w26, w27, [sp, #104]
  40cacc:	ldr	x25, [sp, #96]
  40cad0:	bl	415ca0 <ferror@plt+0x13420>
  40cad4:	ldr	x0, [sp, #128]
  40cad8:	cmp	x25, x0
  40cadc:	b.eq	40cb10 <ferror@plt+0xa290>  // b.none
  40cae0:	strb	wzr, [x22]
  40cae4:	ldr	w0, [x21, #120]
  40cae8:	add	w19, w19, #0x1
  40caec:	cmp	w0, w19
  40caf0:	b.hi	40ca98 <ferror@plt+0xa218>  // b.pmore
  40caf4:	ldp	x19, x20, [sp, #16]
  40caf8:	ldp	x23, x24, [sp, #48]
  40cafc:	ldp	x25, x26, [sp, #64]
  40cb00:	ldp	x27, x28, [sp, #80]
  40cb04:	ldp	x21, x22, [sp, #32]
  40cb08:	ldp	x29, x30, [sp], #160
  40cb0c:	ret
  40cb10:	ldr	w0, [sp, #136]
  40cb14:	cmp	w26, w0
  40cb18:	b.ne	40cae0 <ferror@plt+0xa260>  // b.any
  40cb1c:	cbz	w27, 40cae0 <ferror@plt+0xa260>
  40cb20:	ldr	w28, [sp, #140]
  40cb24:	cbz	w28, 40cae0 <ferror@plt+0xa260>
  40cb28:	mov	x1, x25
  40cb2c:	mov	x0, x22
  40cb30:	bl	40c150 <ferror@plt+0x98d0>
  40cb34:	ldrb	w1, [x22]
  40cb38:	cbz	w1, 40cae0 <ferror@plt+0xa260>
  40cb3c:	mov	w1, w26
  40cb40:	ldp	x25, x20, [x20, #8]
  40cb44:	bl	40c2e0 <ferror@plt+0x9a60>
  40cb48:	cbz	x0, 40cae0 <ferror@plt+0xa260>
  40cb4c:	mov	w4, w20
  40cb50:	mov	x3, x25
  40cb54:	mov	w2, w28
  40cb58:	mov	w1, w27
  40cb5c:	bl	40b968 <ferror@plt+0x90e8>
  40cb60:	tst	w0, #0xff
  40cb64:	b.ne	40cae4 <ferror@plt+0xa264>  // b.any
  40cb68:	b	40cae0 <ferror@plt+0xa260>
  40cb6c:	strb	wzr, [x22]
  40cb70:	ldp	x21, x22, [sp, #32]
  40cb74:	ldp	x29, x30, [sp], #160
  40cb78:	ret
  40cb7c:	add	x2, x2, #0x1
  40cb80:	add	x2, x23, x2, lsl #3
  40cb84:	b	40cab0 <ferror@plt+0xa230>
  40cb88:	stp	x29, x30, [sp, #-48]!
  40cb8c:	cmp	w1, w2
  40cb90:	mov	x29, sp
  40cb94:	stp	x21, x22, [sp, #32]
  40cb98:	b.gt	40cc28 <ferror@plt+0xa3a8>
  40cb9c:	add	w22, w2, #0x1
  40cba0:	stp	x19, x20, [sp, #16]
  40cba4:	mov	w19, w1
  40cba8:	add	x20, x0, #0x8
  40cbac:	mov	w21, #0x0                   	// #0
  40cbb0:	mov	w1, w19
  40cbb4:	mov	x0, x20
  40cbb8:	bl	40dda0 <ferror@plt+0xb520>
  40cbbc:	ldr	x0, [x20]
  40cbc0:	mov	w1, w19
  40cbc4:	cbz	x0, 40cc20 <ferror@plt+0xa3a0>
  40cbc8:	ldr	w0, [x0]
  40cbcc:	ldr	x2, [x20, #8]
  40cbd0:	blr	x2
  40cbd4:	cbnz	w0, 40cc20 <ferror@plt+0xa3a0>
  40cbd8:	ldr	x1, [x20]
  40cbdc:	mov	w0, #0x1                   	// #1
  40cbe0:	cbz	x1, 40cc20 <ferror@plt+0xa3a0>
  40cbe4:	ldr	x1, [x1, #8]
  40cbe8:	cbz	x1, 40cc20 <ferror@plt+0xa3a0>
  40cbec:	ldr	x1, [x1, #32]
  40cbf0:	cbz	x1, 40cbfc <ferror@plt+0xa37c>
  40cbf4:	ldr	w0, [x1, #4]
  40cbf8:	add	w0, w0, #0x1
  40cbfc:	add	w21, w21, w0
  40cc00:	add	w19, w19, #0x1
  40cc04:	cmp	w22, w19
  40cc08:	b.ne	40cbb0 <ferror@plt+0xa330>  // b.any
  40cc0c:	mov	w0, w21
  40cc10:	ldp	x19, x20, [sp, #16]
  40cc14:	ldp	x21, x22, [sp, #32]
  40cc18:	ldp	x29, x30, [sp], #48
  40cc1c:	ret
  40cc20:	add	w21, w21, #0x1
  40cc24:	b	40cc00 <ferror@plt+0xa380>
  40cc28:	mov	w21, #0x0                   	// #0
  40cc2c:	mov	w0, w21
  40cc30:	ldp	x21, x22, [sp, #32]
  40cc34:	ldp	x29, x30, [sp], #48
  40cc38:	ret
  40cc3c:	nop
  40cc40:	stp	x29, x30, [sp, #-96]!
  40cc44:	mov	x29, sp
  40cc48:	stp	x19, x20, [sp, #16]
  40cc4c:	stp	x21, x22, [sp, #32]
  40cc50:	mov	x22, x1
  40cc54:	stp	x23, x24, [sp, #48]
  40cc58:	stp	x25, x26, [sp, #64]
  40cc5c:	mov	x26, x0
  40cc60:	ldr	w0, [x0, #40]
  40cc64:	stp	x27, x28, [sp, #80]
  40cc68:	cmn	w0, #0x1
  40cc6c:	b.eq	40cdd0 <ferror@plt+0xa550>  // b.none
  40cc70:	ldr	x0, [x26]
  40cc74:	add	x23, x26, #0x8
  40cc78:	mov	w20, #0x1                   	// #1
  40cc7c:	mov	x24, #0x80000000            	// #2147483648
  40cc80:	bl	4159a0 <ferror@plt+0x13120>
  40cc84:	ldr	w25, [x26, #40]
  40cc88:	and	w27, w0, #0xff
  40cc8c:	cmp	w25, #0x0
  40cc90:	b.le	40cd30 <ferror@plt+0xa4b0>
  40cc94:	nop
  40cc98:	mov	x0, x23
  40cc9c:	mov	w1, w20
  40cca0:	bl	40dda0 <ferror@plt+0xb520>
  40cca4:	ldr	x0, [x23]
  40cca8:	cbz	x0, 40cd54 <ferror@plt+0xa4d4>
  40ccac:	ldr	w0, [x0]
  40ccb0:	mov	w1, w20
  40ccb4:	ldr	x2, [x23, #8]
  40ccb8:	blr	x2
  40ccbc:	cbnz	w0, 40cd54 <ferror@plt+0xa4d4>
  40ccc0:	ldr	x0, [x23]
  40ccc4:	cbz	x0, 40cd54 <ferror@plt+0xa4d4>
  40ccc8:	ldr	x19, [x0, #8]
  40cccc:	cbz	x19, 40cd54 <ferror@plt+0xa4d4>
  40ccd0:	ldr	x0, [x19, #32]
  40ccd4:	mov	w21, #0x0                   	// #0
  40ccd8:	cbz	x0, 40cd10 <ferror@plt+0xa490>
  40ccdc:	ldr	w1, [x0, #4]
  40cce0:	cmp	w1, w21
  40cce4:	b.ls	40cd10 <ferror@plt+0xa490>  // b.plast
  40cce8:	add	x1, x0, w21, uxtw #3
  40ccec:	mov	x0, x22
  40ccf0:	add	w21, w21, #0x1
  40ccf4:	ldr	x1, [x1, #8]
  40ccf8:	ldr	x1, [x1]
  40ccfc:	bl	410da0 <ferror@plt+0xe520>
  40cd00:	mov	x0, x22
  40cd04:	bl	40f0f0 <ferror@plt+0xc870>
  40cd08:	ldr	x0, [x19, #32]
  40cd0c:	cbnz	x0, 40ccdc <ferror@plt+0xa45c>
  40cd10:	ldr	x1, [x19, #8]
  40cd14:	mov	x0, x22
  40cd18:	bl	410da0 <ferror@plt+0xe520>
  40cd1c:	cmp	w25, w20
  40cd20:	b.gt	40cdc0 <ferror@plt+0xa540>
  40cd24:	add	w20, w20, #0x1
  40cd28:	cmp	w20, w25
  40cd2c:	b.le	40cc98 <ferror@plt+0xa418>
  40cd30:	cbz	w27, 40ce20 <ferror@plt+0xa5a0>
  40cd34:	mov	w0, w27
  40cd38:	ldp	x19, x20, [sp, #16]
  40cd3c:	ldp	x21, x22, [sp, #32]
  40cd40:	ldp	x23, x24, [sp, #48]
  40cd44:	ldp	x25, x26, [sp, #64]
  40cd48:	ldp	x27, x28, [sp, #80]
  40cd4c:	ldp	x29, x30, [sp], #96
  40cd50:	ret
  40cd54:	ldr	x0, [x26]
  40cd58:	mov	w1, w20
  40cd5c:	bl	415540 <ferror@plt+0x12cc0>
  40cd60:	mov	x21, x0
  40cd64:	mov	x28, x1
  40cd68:	cbz	x0, 40cdfc <ferror@plt+0xa57c>
  40cd6c:	mov	x19, #0x0                   	// #0
  40cd70:	mov	w2, #0x0                   	// #0
  40cd74:	cbnz	x1, 40cda0 <ferror@plt+0xa520>
  40cd78:	b	40cd1c <ferror@plt+0xa49c>
  40cd7c:	ldrb	w1, [x21, w2, sxtw]
  40cd80:	add	x19, x19, #0x1
  40cd84:	mov	x0, x22
  40cd88:	bl	40f150 <ferror@plt+0xc8d0>
  40cd8c:	cmp	x28, x19
  40cd90:	b.eq	40cd1c <ferror@plt+0xa49c>  // b.none
  40cd94:	cmp	x19, x24
  40cd98:	mov	w2, w19
  40cd9c:	b.eq	40ce50 <ferror@plt+0xa5d0>  // b.none
  40cda0:	cmp	x28, w2, sxtw
  40cda4:	b.hi	40cd7c <ferror@plt+0xa4fc>  // b.pmore
  40cda8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40cdac:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40cdb0:	add	x2, x2, #0x8f8
  40cdb4:	add	x0, x0, #0x850
  40cdb8:	mov	w1, #0x3e                  	// #62
  40cdbc:	bl	4028b0 <ferror@plt+0x30>
  40cdc0:	mov	x0, x22
  40cdc4:	mov	w1, #0xa                   	// #10
  40cdc8:	bl	40f150 <ferror@plt+0xc8d0>
  40cdcc:	b	40cd24 <ferror@plt+0xa4a4>
  40cdd0:	mov	w1, #0x0                   	// #0
  40cdd4:	str	wzr, [x26, #40]
  40cdd8:	b	40cde8 <ferror@plt+0xa568>
  40cddc:	ldr	w1, [x26, #40]
  40cde0:	add	w1, w1, #0x1
  40cde4:	str	w1, [x26, #40]
  40cde8:	ldr	x0, [x26]
  40cdec:	add	w1, w1, #0x1
  40cdf0:	bl	415540 <ferror@plt+0x12cc0>
  40cdf4:	cbnz	x0, 40cddc <ferror@plt+0xa55c>
  40cdf8:	b	40cc70 <ferror@plt+0xa3f0>
  40cdfc:	mov	w27, #0x0                   	// #0
  40ce00:	mov	w0, w27
  40ce04:	ldp	x19, x20, [sp, #16]
  40ce08:	ldp	x21, x22, [sp, #32]
  40ce0c:	ldp	x23, x24, [sp, #48]
  40ce10:	ldp	x25, x26, [sp, #64]
  40ce14:	ldp	x27, x28, [sp, #80]
  40ce18:	ldp	x29, x30, [sp], #96
  40ce1c:	ret
  40ce20:	mov	x0, x22
  40ce24:	mov	w27, #0x1                   	// #1
  40ce28:	mov	w1, #0xa                   	// #10
  40ce2c:	bl	40f150 <ferror@plt+0xc8d0>
  40ce30:	mov	w0, w27
  40ce34:	ldp	x19, x20, [sp, #16]
  40ce38:	ldp	x21, x22, [sp, #32]
  40ce3c:	ldp	x23, x24, [sp, #48]
  40ce40:	ldp	x25, x26, [sp, #64]
  40ce44:	ldp	x27, x28, [sp, #80]
  40ce48:	ldp	x29, x30, [sp], #96
  40ce4c:	ret
  40ce50:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40ce54:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40ce58:	add	x2, x2, #0x8f8
  40ce5c:	add	x0, x0, #0x850
  40ce60:	mov	w1, #0x3d                  	// #61
  40ce64:	bl	4028b0 <ferror@plt+0x30>
  40ce68:	stp	x29, x30, [sp, #-80]!
  40ce6c:	mov	x29, sp
  40ce70:	stp	x25, x26, [sp, #64]
  40ce74:	mov	x25, x0
  40ce78:	ldrb	w0, [x1, #67]
  40ce7c:	stp	x23, x24, [sp, #48]
  40ce80:	mov	w23, w2
  40ce84:	mov	x2, #0xb                   	// #11
  40ce88:	mov	w24, w3
  40ce8c:	stp	x19, x20, [sp, #16]
  40ce90:	mov	x20, x1
  40ce94:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40ce98:	add	x1, x1, #0x690
  40ce9c:	bl	407fc8 <ferror@plt+0x5748>
  40cea0:	mov	x1, x0
  40cea4:	mov	x0, x20
  40cea8:	bl	410da0 <ferror@plt+0xe520>
  40ceac:	cmp	w23, w24
  40ceb0:	b.gt	40d158 <ferror@plt+0xa8d8>
  40ceb4:	mov	w19, w23
  40ceb8:	stp	x21, x22, [sp, #32]
  40cebc:	add	x22, x25, #0x8
  40cec0:	b	40cef0 <ferror@plt+0xa670>
  40cec4:	ldr	x0, [x22]
  40cec8:	cbz	x0, 40cf18 <ferror@plt+0xa698>
  40cecc:	ldr	x1, [x0, #8]
  40ced0:	cbz	x1, 40cf18 <ferror@plt+0xa698>
  40ced4:	ldr	x0, [x1, #24]
  40ced8:	cbz	x0, 40cee4 <ferror@plt+0xa664>
  40cedc:	ldr	w0, [x0, #4]
  40cee0:	cbnz	w0, 40cf30 <ferror@plt+0xa6b0>
  40cee4:	add	w19, w19, #0x1
  40cee8:	cmp	w24, w19
  40ceec:	b.lt	40cf94 <ferror@plt+0xa714>  // b.tstop
  40cef0:	mov	x0, x22
  40cef4:	mov	w1, w19
  40cef8:	bl	40dda0 <ferror@plt+0xb520>
  40cefc:	ldr	x0, [x22]
  40cf00:	cbz	x0, 40cf18 <ferror@plt+0xa698>
  40cf04:	ldr	w0, [x0]
  40cf08:	mov	w1, w19
  40cf0c:	ldr	x2, [x22, #8]
  40cf10:	blr	x2
  40cf14:	cbz	w0, 40cec4 <ferror@plt+0xa644>
  40cf18:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40cf1c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40cf20:	add	x2, x2, #0x908
  40cf24:	add	x0, x0, #0x890
  40cf28:	mov	w1, #0x239                 	// #569
  40cf2c:	bl	4028b0 <ferror@plt+0x30>
  40cf30:	ldr	x0, [x25]
  40cf34:	mov	w1, w19
  40cf38:	bl	415540 <ferror@plt+0x12cc0>
  40cf3c:	mov	x26, x1
  40cf40:	mov	x21, x0
  40cf44:	mov	w1, #0x2d                  	// #45
  40cf48:	mov	x0, x20
  40cf4c:	bl	40f150 <ferror@plt+0xc8d0>
  40cf50:	cmp	w26, #0x0
  40cf54:	b.le	40cf7c <ferror@plt+0xa6fc>
  40cf58:	sub	w1, w26, #0x1
  40cf5c:	add	x26, x21, #0x1
  40cf60:	add	x26, x26, x1
  40cf64:	nop
  40cf68:	ldrb	w1, [x21], #1
  40cf6c:	mov	x0, x20
  40cf70:	bl	40f150 <ferror@plt+0xc8d0>
  40cf74:	cmp	x26, x21
  40cf78:	b.ne	40cf68 <ferror@plt+0xa6e8>  // b.any
  40cf7c:	mov	x0, x20
  40cf80:	add	w19, w19, #0x1
  40cf84:	mov	w1, #0xa                   	// #10
  40cf88:	bl	40f150 <ferror@plt+0xc8d0>
  40cf8c:	cmp	w24, w19
  40cf90:	b.ge	40cef0 <ferror@plt+0xa670>  // b.tcont
  40cf94:	ldrb	w0, [x20, #67]
  40cf98:	bl	408058 <ferror@plt+0x57d8>
  40cf9c:	mov	x1, x0
  40cfa0:	mov	x0, x20
  40cfa4:	bl	410da0 <ferror@plt+0xe520>
  40cfa8:	ldrb	w0, [x20, #67]
  40cfac:	mov	x2, #0xb                   	// #11
  40cfb0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40cfb4:	add	x1, x1, #0x6a0
  40cfb8:	bl	407fc8 <ferror@plt+0x5748>
  40cfbc:	mov	x1, x0
  40cfc0:	mov	x0, x20
  40cfc4:	bl	410da0 <ferror@plt+0xe520>
  40cfc8:	mov	x0, x22
  40cfcc:	mov	w1, w23
  40cfd0:	bl	40dda0 <ferror@plt+0xb520>
  40cfd4:	ldr	x0, [x22]
  40cfd8:	cbz	x0, 40d190 <ferror@plt+0xa910>
  40cfdc:	ldr	w0, [x0]
  40cfe0:	mov	w1, w23
  40cfe4:	ldr	x2, [x22, #8]
  40cfe8:	blr	x2
  40cfec:	cbnz	w0, 40d190 <ferror@plt+0xa910>
  40cff0:	ldr	x0, [x22]
  40cff4:	cbz	x0, 40d190 <ferror@plt+0xa910>
  40cff8:	ldr	x21, [x0, #8]
  40cffc:	cbz	x21, 40d190 <ferror@plt+0xa910>
  40d000:	ldr	x0, [x21, #32]
  40d004:	mov	w25, #0x0                   	// #0
  40d008:	cbz	x0, 40d078 <ferror@plt+0xa7f8>
  40d00c:	ldr	w1, [x0, #4]
  40d010:	cmp	w25, w1
  40d014:	b.cs	40d078 <ferror@plt+0xa7f8>  // b.hs, b.nlast
  40d018:	add	x2, x0, w25, uxtw #3
  40d01c:	mov	w1, #0x2b                  	// #43
  40d020:	mov	x0, x20
  40d024:	ldr	x2, [x2, #8]
  40d028:	ldr	w26, [x2, #8]
  40d02c:	ldr	x19, [x2]
  40d030:	bl	40f150 <ferror@plt+0xc8d0>
  40d034:	cmp	w26, #0x0
  40d038:	b.le	40d05c <ferror@plt+0xa7dc>
  40d03c:	sub	w26, w26, #0x1
  40d040:	add	x0, x19, #0x1
  40d044:	add	x26, x26, x0
  40d048:	ldrb	w1, [x19], #1
  40d04c:	mov	x0, x20
  40d050:	bl	40f150 <ferror@plt+0xc8d0>
  40d054:	cmp	x19, x26
  40d058:	b.ne	40d048 <ferror@plt+0xa7c8>  // b.any
  40d05c:	mov	x0, x20
  40d060:	mov	w1, #0xa                   	// #10
  40d064:	bl	40f150 <ferror@plt+0xc8d0>
  40d068:	add	w25, w25, #0x1
  40d06c:	ldr	x0, [x21, #32]
  40d070:	cbnz	x0, 40d00c <ferror@plt+0xa78c>
  40d074:	nop
  40d078:	ldr	x0, [x21, #24]
  40d07c:	ldr	x19, [x21, #8]
  40d080:	ldr	w21, [x21, #16]
  40d084:	cbz	x0, 40d090 <ferror@plt+0xa810>
  40d088:	ldr	w0, [x0, #4]
  40d08c:	cbnz	w0, 40d104 <ferror@plt+0xa884>
  40d090:	mov	x0, x20
  40d094:	mov	w1, #0x20                  	// #32
  40d098:	bl	40f150 <ferror@plt+0xc8d0>
  40d09c:	cmp	w21, #0x0
  40d0a0:	b.le	40d0c4 <ferror@plt+0xa844>
  40d0a4:	sub	w21, w21, #0x1
  40d0a8:	add	x0, x19, #0x1
  40d0ac:	add	x21, x21, x0
  40d0b0:	ldrb	w1, [x19], #1
  40d0b4:	mov	x0, x20
  40d0b8:	bl	40f150 <ferror@plt+0xc8d0>
  40d0bc:	cmp	x21, x19
  40d0c0:	b.ne	40d0b0 <ferror@plt+0xa830>  // b.any
  40d0c4:	add	w23, w23, #0x1
  40d0c8:	mov	x0, x20
  40d0cc:	mov	w1, #0xa                   	// #10
  40d0d0:	bl	40f150 <ferror@plt+0xc8d0>
  40d0d4:	cmp	w24, w23
  40d0d8:	b.ge	40cfc8 <ferror@plt+0xa748>  // b.tcont
  40d0dc:	ldp	x21, x22, [sp, #32]
  40d0e0:	ldrb	w0, [x20, #67]
  40d0e4:	bl	408058 <ferror@plt+0x57d8>
  40d0e8:	mov	x1, x0
  40d0ec:	mov	x0, x20
  40d0f0:	ldp	x19, x20, [sp, #16]
  40d0f4:	ldp	x23, x24, [sp, #48]
  40d0f8:	ldp	x25, x26, [sp, #64]
  40d0fc:	ldp	x29, x30, [sp], #80
  40d100:	b	410da0 <ferror@plt+0xe520>
  40d104:	mov	x0, x20
  40d108:	mov	w1, #0x2b                  	// #43
  40d10c:	bl	40f150 <ferror@plt+0xc8d0>
  40d110:	cmp	w21, #0x0
  40d114:	b.le	40d0c4 <ferror@plt+0xa844>
  40d118:	sub	w21, w21, #0x1
  40d11c:	add	x0, x19, #0x1
  40d120:	add	x21, x21, x0
  40d124:	nop
  40d128:	ldrb	w1, [x19], #1
  40d12c:	mov	x0, x20
  40d130:	bl	40f150 <ferror@plt+0xc8d0>
  40d134:	cmp	x21, x19
  40d138:	b.ne	40d128 <ferror@plt+0xa8a8>  // b.any
  40d13c:	add	w23, w23, #0x1
  40d140:	mov	x0, x20
  40d144:	mov	w1, #0xa                   	// #10
  40d148:	bl	40f150 <ferror@plt+0xc8d0>
  40d14c:	cmp	w24, w23
  40d150:	b.ge	40cfc8 <ferror@plt+0xa748>  // b.tcont
  40d154:	b	40d0dc <ferror@plt+0xa85c>
  40d158:	ldrb	w0, [x20, #67]
  40d15c:	bl	408058 <ferror@plt+0x57d8>
  40d160:	mov	x1, x0
  40d164:	mov	x0, x20
  40d168:	bl	410da0 <ferror@plt+0xe520>
  40d16c:	ldrb	w0, [x20, #67]
  40d170:	mov	x2, #0xb                   	// #11
  40d174:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d178:	add	x1, x1, #0x6a0
  40d17c:	bl	407fc8 <ferror@plt+0x5748>
  40d180:	mov	x1, x0
  40d184:	mov	x0, x20
  40d188:	bl	410da0 <ferror@plt+0xe520>
  40d18c:	b	40d0e0 <ferror@plt+0xa860>
  40d190:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d194:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d198:	add	x2, x2, #0x908
  40d19c:	add	x0, x0, #0x890
  40d1a0:	mov	w1, #0x24b                 	// #587
  40d1a4:	bl	4028b0 <ferror@plt+0x30>
  40d1a8:	stp	x29, x30, [sp, #-96]!
  40d1ac:	mov	x29, sp
  40d1b0:	stp	x21, x22, [sp, #32]
  40d1b4:	mov	w21, w2
  40d1b8:	mov	x22, x1
  40d1bc:	stp	x23, x24, [sp, #48]
  40d1c0:	stp	x25, x26, [sp, #64]
  40d1c4:	subs	w26, w3, w2
  40d1c8:	add	w26, w26, #0x1
  40d1cc:	stp	x27, x28, [sp, #80]
  40d1d0:	mov	w28, w4
  40d1d4:	b.lt	40d3cc <ferror@plt+0xab4c>  // b.tstop
  40d1d8:	mov	w25, w3
  40d1dc:	mov	x24, x0
  40d1e0:	add	w27, w3, #0x1
  40d1e4:	stp	x19, x20, [sp, #16]
  40d1e8:	add	x19, x0, #0x8
  40d1ec:	mov	w20, w2
  40d1f0:	mov	w23, #0x0                   	// #0
  40d1f4:	nop
  40d1f8:	mov	w1, w20
  40d1fc:	mov	x0, x19
  40d200:	bl	40dda0 <ferror@plt+0xb520>
  40d204:	ldr	x0, [x19]
  40d208:	mov	w1, w20
  40d20c:	cbz	x0, 40d364 <ferror@plt+0xaae4>
  40d210:	ldr	w0, [x0]
  40d214:	ldr	x2, [x19, #8]
  40d218:	blr	x2
  40d21c:	cbnz	w0, 40d364 <ferror@plt+0xaae4>
  40d220:	ldr	x1, [x19]
  40d224:	mov	w0, #0x1                   	// #1
  40d228:	cbz	x1, 40d364 <ferror@plt+0xaae4>
  40d22c:	ldr	x1, [x1, #8]
  40d230:	cbz	x1, 40d364 <ferror@plt+0xaae4>
  40d234:	ldr	x1, [x1, #32]
  40d238:	cbz	x1, 40d244 <ferror@plt+0xa9c4>
  40d23c:	ldr	w0, [x1, #4]
  40d240:	add	w0, w0, #0x1
  40d244:	add	w23, w23, w0
  40d248:	add	w20, w20, #0x1
  40d24c:	cmp	w27, w20
  40d250:	b.ne	40d1f8 <ferror@plt+0xa978>  // b.any
  40d254:	ldrb	w0, [x22, #67]
  40d258:	mov	x2, #0x9                   	// #9
  40d25c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d260:	add	x1, x1, #0x670
  40d264:	bl	407fc8 <ferror@plt+0x5748>
  40d268:	mov	x1, x0
  40d26c:	mov	x0, x22
  40d270:	bl	410da0 <ferror@plt+0xe520>
  40d274:	mov	w4, w28
  40d278:	mov	w5, w23
  40d27c:	mov	w3, w26
  40d280:	mov	w2, w21
  40d284:	mov	x0, x22
  40d288:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d28c:	add	x1, x1, #0x928
  40d290:	bl	410c58 <ferror@plt+0xe3d8>
  40d294:	ldrb	w0, [x22, #67]
  40d298:	bl	408058 <ferror@plt+0x57d8>
  40d29c:	mov	x1, x0
  40d2a0:	mov	x0, x22
  40d2a4:	bl	410da0 <ferror@plt+0xe520>
  40d2a8:	mov	x0, x19
  40d2ac:	mov	w1, w21
  40d2b0:	bl	40dda0 <ferror@plt+0xb520>
  40d2b4:	ldr	x0, [x19]
  40d2b8:	cbz	x0, 40d2e0 <ferror@plt+0xaa60>
  40d2bc:	ldr	w0, [x0]
  40d2c0:	mov	w1, w21
  40d2c4:	ldr	x2, [x19, #8]
  40d2c8:	blr	x2
  40d2cc:	cbnz	w0, 40d2e0 <ferror@plt+0xaa60>
  40d2d0:	ldr	x0, [x19]
  40d2d4:	cbz	x0, 40d2e0 <ferror@plt+0xaa60>
  40d2d8:	ldr	x0, [x0, #8]
  40d2dc:	cbnz	x0, 40d36c <ferror@plt+0xaaec>
  40d2e0:	ldr	x0, [x24]
  40d2e4:	mov	w1, w21
  40d2e8:	bl	415540 <ferror@plt+0x12cc0>
  40d2ec:	mov	x27, x1
  40d2f0:	mov	x20, x0
  40d2f4:	mov	w1, #0x20                  	// #32
  40d2f8:	mov	x0, x22
  40d2fc:	bl	40f150 <ferror@plt+0xc8d0>
  40d300:	cmp	w27, #0x0
  40d304:	b.le	40d32c <ferror@plt+0xaaac>
  40d308:	sub	w27, w27, #0x1
  40d30c:	add	x0, x20, #0x1
  40d310:	add	x27, x27, x0
  40d314:	nop
  40d318:	ldrb	w1, [x20], #1
  40d31c:	mov	x0, x22
  40d320:	bl	40f150 <ferror@plt+0xc8d0>
  40d324:	cmp	x20, x27
  40d328:	b.ne	40d318 <ferror@plt+0xaa98>  // b.any
  40d32c:	add	w21, w21, #0x1
  40d330:	mov	x0, x22
  40d334:	mov	w1, #0xa                   	// #10
  40d338:	bl	40f150 <ferror@plt+0xc8d0>
  40d33c:	cmp	w25, w21
  40d340:	b.ge	40d2a8 <ferror@plt+0xaa28>  // b.tcont
  40d344:	sub	w0, w23, w26
  40d348:	ldp	x19, x20, [sp, #16]
  40d34c:	ldp	x21, x22, [sp, #32]
  40d350:	ldp	x23, x24, [sp, #48]
  40d354:	ldp	x25, x26, [sp, #64]
  40d358:	ldp	x27, x28, [sp, #80]
  40d35c:	ldp	x29, x30, [sp], #96
  40d360:	ret
  40d364:	add	w23, w23, #0x1
  40d368:	b	40d248 <ferror@plt+0xa9c8>
  40d36c:	mov	w20, w21
  40d370:	b	40d388 <ferror@plt+0xab08>
  40d374:	ldr	x0, [x19]
  40d378:	cbz	x0, 40d3b0 <ferror@plt+0xab30>
  40d37c:	ldr	x0, [x0, #8]
  40d380:	cbz	x0, 40d3b0 <ferror@plt+0xab30>
  40d384:	add	w20, w20, #0x1
  40d388:	mov	w1, w20
  40d38c:	mov	x0, x19
  40d390:	bl	40dda0 <ferror@plt+0xb520>
  40d394:	ldr	x0, [x19]
  40d398:	mov	w1, w20
  40d39c:	cbz	x0, 40d3b0 <ferror@plt+0xab30>
  40d3a0:	ldr	w0, [x0]
  40d3a4:	ldr	x2, [x19, #8]
  40d3a8:	blr	x2
  40d3ac:	cbz	w0, 40d374 <ferror@plt+0xaaf4>
  40d3b0:	mov	w2, w21
  40d3b4:	sub	w3, w20, #0x1
  40d3b8:	mov	w21, w20
  40d3bc:	mov	x1, x22
  40d3c0:	mov	x0, x24
  40d3c4:	bl	40ce68 <ferror@plt+0xa5e8>
  40d3c8:	b	40d33c <ferror@plt+0xaabc>
  40d3cc:	ldrb	w0, [x1, #67]
  40d3d0:	mov	x2, #0x9                   	// #9
  40d3d4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d3d8:	add	x1, x1, #0x670
  40d3dc:	mov	w23, #0x0                   	// #0
  40d3e0:	bl	407fc8 <ferror@plt+0x5748>
  40d3e4:	mov	x1, x0
  40d3e8:	mov	x0, x22
  40d3ec:	bl	410da0 <ferror@plt+0xe520>
  40d3f0:	mov	w4, w28
  40d3f4:	mov	w2, w21
  40d3f8:	mov	w3, w26
  40d3fc:	mov	w5, #0x0                   	// #0
  40d400:	mov	x0, x22
  40d404:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d408:	add	x1, x1, #0x928
  40d40c:	bl	410c58 <ferror@plt+0xe3d8>
  40d410:	ldrb	w0, [x22, #67]
  40d414:	bl	408058 <ferror@plt+0x57d8>
  40d418:	mov	x1, x0
  40d41c:	mov	x0, x22
  40d420:	bl	410da0 <ferror@plt+0xe520>
  40d424:	sub	w0, w23, w26
  40d428:	ldp	x21, x22, [sp, #32]
  40d42c:	ldp	x23, x24, [sp, #48]
  40d430:	ldp	x25, x26, [sp, #64]
  40d434:	ldp	x27, x28, [sp, #80]
  40d438:	ldp	x29, x30, [sp], #96
  40d43c:	ret
  40d440:	stp	x29, x30, [sp, #-96]!
  40d444:	tst	w2, #0xff
  40d448:	mov	x29, sp
  40d44c:	stp	x19, x20, [sp, #16]
  40d450:	stp	x23, x24, [sp, #48]
  40d454:	mov	x23, x0
  40d458:	stp	x25, x26, [sp, #64]
  40d45c:	mov	x26, x1
  40d460:	b.ne	40d670 <ferror@plt+0xadf0>  // b.any
  40d464:	ldp	x0, x20, [x23]
  40d468:	ldr	w2, [x23, #40]
  40d46c:	cbz	x20, 40d6d0 <ferror@plt+0xae50>
  40d470:	mov	x1, x20
  40d474:	ldr	x20, [x20, #16]
  40d478:	cbnz	x20, 40d470 <ferror@plt+0xabf0>
  40d47c:	cmn	w2, #0x1
  40d480:	ldr	x20, [x1, #8]
  40d484:	b.eq	40d640 <ferror@plt+0xadc0>  // b.none
  40d488:	bl	4159a0 <ferror@plt+0x13120>
  40d48c:	ldr	w25, [x23, #40]
  40d490:	cbz	x20, 40d5d8 <ferror@plt+0xad58>
  40d494:	add	x19, x23, #0x8
  40d498:	mov	w24, #0x0                   	// #0
  40d49c:	stp	x21, x22, [sp, #32]
  40d4a0:	ldr	x1, [x23, #8]
  40d4a4:	str	x27, [sp, #80]
  40d4a8:	mov	w27, #0x1                   	// #1
  40d4ac:	nop
  40d4b0:	ldr	w21, [x20]
  40d4b4:	sub	w22, w21, #0x3
  40d4b8:	cmp	w22, #0x0
  40d4bc:	csel	w22, w22, w27, gt
  40d4c0:	cbz	x1, 40d544 <ferror@plt+0xacc4>
  40d4c4:	mov	w1, w21
  40d4c8:	mov	x0, x19
  40d4cc:	bl	40dda0 <ferror@plt+0xb520>
  40d4d0:	ldp	x0, x2, [x19]
  40d4d4:	mov	w1, w21
  40d4d8:	ldr	w0, [x0]
  40d4dc:	blr	x2
  40d4e0:	cmp	w0, #0x0
  40d4e4:	ldr	x0, [x19]
  40d4e8:	b.gt	40d610 <ferror@plt+0xad90>
  40d4ec:	ldr	x2, [x0, #24]
  40d4f0:	cbz	x2, 40d618 <ferror@plt+0xad98>
  40d4f4:	nop
  40d4f8:	mov	x0, x2
  40d4fc:	ldr	x2, [x2, #16]
  40d500:	cbnz	x2, 40d4f8 <ferror@plt+0xac78>
  40d504:	ldr	x0, [x0, #8]
  40d508:	ldr	w2, [x20]
  40d50c:	ldr	x1, [x20, #24]
  40d510:	add	w3, w2, #0x3
  40d514:	cbz	x0, 40d600 <ferror@plt+0xad80>
  40d518:	cbz	x1, 40d5ec <ferror@plt+0xad6c>
  40d51c:	ldr	w5, [x1, #4]
  40d520:	mov	w4, w3
  40d524:	cbz	w5, 40d5ec <ferror@plt+0xad6c>
  40d528:	ldr	w21, [x0]
  40d52c:	sub	w5, w21, #0x3
  40d530:	cmp	w5, w4
  40d534:	b.gt	40d600 <ferror@plt+0xad80>
  40d538:	ldr	x1, [x19]
  40d53c:	mov	x20, x0
  40d540:	cbnz	x1, 40d4c4 <ferror@plt+0xac44>
  40d544:	ldr	x1, [x20, #24]
  40d548:	add	w3, w21, #0x3
  40d54c:	cbz	x1, 40d608 <ferror@plt+0xad88>
  40d550:	ldr	w0, [x1, #4]
  40d554:	cbz	w0, 40d608 <ferror@plt+0xad88>
  40d558:	cmp	w3, w25
  40d55c:	add	w4, w22, w24
  40d560:	mov	x1, x26
  40d564:	csel	w3, w3, w25, le
  40d568:	mov	w2, w22
  40d56c:	mov	x0, x23
  40d570:	bl	40d1a8 <ferror@plt+0xa928>
  40d574:	ldr	w20, [x20]
  40d578:	ldr	x1, [x19]
  40d57c:	add	w24, w24, w0
  40d580:	cbz	x1, 40d5d0 <ferror@plt+0xad50>
  40d584:	mov	w1, w20
  40d588:	mov	x0, x19
  40d58c:	bl	40dda0 <ferror@plt+0xb520>
  40d590:	ldp	x0, x2, [x19]
  40d594:	mov	w1, w20
  40d598:	ldr	w0, [x0]
  40d59c:	blr	x2
  40d5a0:	cmp	w0, #0x0
  40d5a4:	b.gt	40d628 <ferror@plt+0xada8>
  40d5a8:	ldr	x1, [x19]
  40d5ac:	ldr	x0, [x1, #24]
  40d5b0:	cbz	x0, 40d5d0 <ferror@plt+0xad50>
  40d5b4:	nop
  40d5b8:	mov	x2, x0
  40d5bc:	ldr	x0, [x0, #16]
  40d5c0:	cbnz	x0, 40d5b8 <ferror@plt+0xad38>
  40d5c4:	ldr	x20, [x2, #8]
  40d5c8:	cbnz	x20, 40d4b0 <ferror@plt+0xac30>
  40d5cc:	nop
  40d5d0:	ldp	x21, x22, [sp, #32]
  40d5d4:	ldr	x27, [sp, #80]
  40d5d8:	ldp	x19, x20, [sp, #16]
  40d5dc:	ldp	x23, x24, [sp, #48]
  40d5e0:	ldp	x25, x26, [sp, #64]
  40d5e4:	ldp	x29, x30, [sp], #96
  40d5e8:	ret
  40d5ec:	ldr	w21, [x0]
  40d5f0:	add	w4, w2, #0x2
  40d5f4:	sub	w5, w21, #0x3
  40d5f8:	cmp	w5, w4
  40d5fc:	b.le	40d538 <ferror@plt+0xacb8>
  40d600:	mov	w21, w2
  40d604:	cbnz	x1, 40d550 <ferror@plt+0xacd0>
  40d608:	add	w3, w21, #0x2
  40d60c:	b	40d558 <ferror@plt+0xacd8>
  40d610:	cbnz	x0, 40d504 <ferror@plt+0xac84>
  40d614:	nop
  40d618:	ldr	w21, [x20]
  40d61c:	ldr	x1, [x20, #24]
  40d620:	add	w3, w21, #0x3
  40d624:	b	40d54c <ferror@plt+0xaccc>
  40d628:	ldr	x2, [x19]
  40d62c:	cbz	x2, 40d5d0 <ferror@plt+0xad50>
  40d630:	ldr	x20, [x2, #8]
  40d634:	mov	x1, x2
  40d638:	cbnz	x20, 40d4b0 <ferror@plt+0xac30>
  40d63c:	b	40d5d0 <ferror@plt+0xad50>
  40d640:	mov	w1, #0x0                   	// #0
  40d644:	str	wzr, [x23, #40]
  40d648:	b	40d65c <ferror@plt+0xaddc>
  40d64c:	ldr	w1, [x23, #40]
  40d650:	ldr	x0, [x23]
  40d654:	add	w1, w1, #0x1
  40d658:	str	w1, [x23, #40]
  40d65c:	add	w1, w1, #0x1
  40d660:	bl	415540 <ferror@plt+0x12cc0>
  40d664:	cbnz	x0, 40d64c <ferror@plt+0xadcc>
  40d668:	ldr	x0, [x23]
  40d66c:	b	40d488 <ferror@plt+0xac08>
  40d670:	ldrb	w0, [x1, #67]
  40d674:	mov	x2, #0xd                   	// #13
  40d678:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d67c:	add	x1, x1, #0x660
  40d680:	bl	407fc8 <ferror@plt+0x5748>
  40d684:	mov	x1, x0
  40d688:	mov	x0, x26
  40d68c:	bl	410da0 <ferror@plt+0xe520>
  40d690:	ldr	x2, [x23]
  40d694:	mov	x0, x26
  40d698:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d69c:	add	x1, x1, #0x940
  40d6a0:	bl	410c58 <ferror@plt+0xe3d8>
  40d6a4:	ldr	x2, [x23]
  40d6a8:	mov	x0, x26
  40d6ac:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d6b0:	add	x1, x1, #0x948
  40d6b4:	bl	410c58 <ferror@plt+0xe3d8>
  40d6b8:	ldrb	w0, [x26, #67]
  40d6bc:	bl	408058 <ferror@plt+0x57d8>
  40d6c0:	mov	x1, x0
  40d6c4:	mov	x0, x26
  40d6c8:	bl	410da0 <ferror@plt+0xe520>
  40d6cc:	b	40d464 <ferror@plt+0xabe4>
  40d6d0:	cmn	w2, #0x1
  40d6d4:	b.eq	40d640 <ferror@plt+0xadc0>  // b.none
  40d6d8:	ldp	x19, x20, [sp, #16]
  40d6dc:	ldp	x23, x24, [sp, #48]
  40d6e0:	ldp	x25, x26, [sp, #64]
  40d6e4:	ldp	x29, x30, [sp], #96
  40d6e8:	b	4159a0 <ferror@plt+0x13120>
  40d6ec:	nop
  40d6f0:	stp	x29, x30, [sp, #-48]!
  40d6f4:	mov	x29, sp
  40d6f8:	stp	x21, x22, [sp, #32]
  40d6fc:	mov	x21, x1
  40d700:	ldrb	w1, [x0]
  40d704:	cbnz	w1, 40d714 <ferror@plt+0xae94>
  40d708:	ldp	x21, x22, [sp, #32]
  40d70c:	ldp	x29, x30, [sp], #48
  40d710:	ret
  40d714:	stp	x19, x20, [sp, #16]
  40d718:	and	w22, w2, #0xff
  40d71c:	mov	x20, #0x0                   	// #0
  40d720:	ldr	x19, [x0, #8]
  40d724:	cbz	x19, 40d73c <ferror@plt+0xaebc>
  40d728:	ldr	x0, [x19, #16]
  40d72c:	str	x20, [x19, #32]
  40d730:	mov	x20, x19
  40d734:	mov	x19, x0
  40d738:	cbnz	x19, 40d728 <ferror@plt+0xaea8>
  40d73c:	cbz	x20, 40d75c <ferror@plt+0xaedc>
  40d740:	ldr	x0, [x20, #8]
  40d744:	mov	w2, w22
  40d748:	mov	x1, x21
  40d74c:	ldr	x19, [x20, #32]
  40d750:	bl	40d440 <ferror@plt+0xabc0>
  40d754:	ldr	x0, [x20, #24]
  40d758:	b	40d730 <ferror@plt+0xaeb0>
  40d75c:	ldp	x19, x20, [sp, #16]
  40d760:	ldp	x21, x22, [sp, #32]
  40d764:	ldp	x29, x30, [sp], #48
  40d768:	ret
  40d76c:	nop
  40d770:	stp	x29, x30, [sp, #-48]!
  40d774:	mov	x29, sp
  40d778:	stp	x19, x20, [sp, #16]
  40d77c:	mov	x19, x0
  40d780:	mov	w20, w1
  40d784:	str	x21, [sp, #32]
  40d788:	add	x21, x0, #0x8
  40d78c:	mov	x0, x21
  40d790:	bl	40dda0 <ferror@plt+0xb520>
  40d794:	ldr	x0, [x19, #8]
  40d798:	cbz	x0, 40d7cc <ferror@plt+0xaf4c>
  40d79c:	ldr	w0, [x0]
  40d7a0:	mov	w1, w20
  40d7a4:	ldr	x2, [x21, #8]
  40d7a8:	blr	x2
  40d7ac:	cbnz	w0, 40d7cc <ferror@plt+0xaf4c>
  40d7b0:	ldr	x0, [x19, #8]
  40d7b4:	cbz	x0, 40d7cc <ferror@plt+0xaf4c>
  40d7b8:	ldr	x0, [x0, #8]
  40d7bc:	ldp	x19, x20, [sp, #16]
  40d7c0:	ldr	x21, [sp, #32]
  40d7c4:	ldp	x29, x30, [sp], #48
  40d7c8:	ret
  40d7cc:	mov	x0, #0x0                   	// #0
  40d7d0:	ldp	x19, x20, [sp, #16]
  40d7d4:	ldr	x21, [sp, #32]
  40d7d8:	ldp	x29, x30, [sp], #48
  40d7dc:	ret
  40d7e0:	stp	x29, x30, [sp, #-48]!
  40d7e4:	mov	x29, sp
  40d7e8:	stp	x19, x20, [sp, #16]
  40d7ec:	mov	x19, x0
  40d7f0:	mov	w20, w2
  40d7f4:	stp	x21, x22, [sp, #32]
  40d7f8:	add	x22, x0, #0x8
  40d7fc:	mov	x0, x22
  40d800:	mov	w21, w1
  40d804:	bl	40dda0 <ferror@plt+0xb520>
  40d808:	ldr	x0, [x19, #8]
  40d80c:	cbz	x0, 40d874 <ferror@plt+0xaff4>
  40d810:	ldr	w0, [x0]
  40d814:	mov	w1, w21
  40d818:	ldr	x2, [x19, #16]
  40d81c:	blr	x2
  40d820:	cbnz	w0, 40d874 <ferror@plt+0xaff4>
  40d824:	ldr	x0, [x19, #8]
  40d828:	cbz	x0, 40d874 <ferror@plt+0xaff4>
  40d82c:	ldr	x0, [x0, #8]
  40d830:	cbz	x0, 40d874 <ferror@plt+0xaff4>
  40d834:	ldr	x0, [x0, #24]
  40d838:	cbz	x0, 40d874 <ferror@plt+0xaff4>
  40d83c:	ldr	w1, [x0, #4]
  40d840:	cbz	w1, 40d874 <ferror@plt+0xaff4>
  40d844:	sub	w1, w1, #0x1
  40d848:	add	x2, x0, #0x10
  40d84c:	add	x0, x0, #0x8
  40d850:	add	x1, x2, w1, uxtw #3
  40d854:	ldr	w2, [x0]
  40d858:	cmp	w2, w20
  40d85c:	b.gt	40d868 <ferror@plt+0xafe8>
  40d860:	ldr	w2, [x0, #4]
  40d864:	add	w20, w20, w2
  40d868:	add	x0, x0, #0x8
  40d86c:	cmp	x0, x1
  40d870:	b.ne	40d854 <ferror@plt+0xafd4>  // b.any
  40d874:	mov	w0, w20
  40d878:	ldp	x19, x20, [sp, #16]
  40d87c:	ldp	x21, x22, [sp, #32]
  40d880:	ldp	x29, x30, [sp], #48
  40d884:	ret
  40d888:	stp	x29, x30, [sp, #-64]!
  40d88c:	mov	x29, sp
  40d890:	stp	x19, x20, [sp, #16]
  40d894:	stp	x21, x22, [sp, #32]
  40d898:	str	x23, [sp, #48]
  40d89c:	cbz	x1, 40d97c <ferror@plt+0xb0fc>
  40d8a0:	mov	x19, x0
  40d8a4:	add	x23, x0, #0x8
  40d8a8:	mov	x0, x23
  40d8ac:	mov	w22, w2
  40d8b0:	mov	w21, w3
  40d8b4:	mov	x20, x1
  40d8b8:	bl	40dc30 <ferror@plt+0xb3b0>
  40d8bc:	ldr	x0, [x19, #8]
  40d8c0:	cbz	x0, 40d964 <ferror@plt+0xb0e4>
  40d8c4:	ldr	x0, [x0]
  40d8c8:	mov	x1, x20
  40d8cc:	ldr	x2, [x19, #16]
  40d8d0:	blr	x2
  40d8d4:	cbnz	w0, 40d964 <ferror@plt+0xb0e4>
  40d8d8:	ldr	x0, [x19, #8]
  40d8dc:	cbz	x0, 40d964 <ferror@plt+0xb0e4>
  40d8e0:	ldr	x19, [x0, #8]
  40d8e4:	cbz	x19, 40d964 <ferror@plt+0xb0e4>
  40d8e8:	add	x20, x19, #0x8
  40d8ec:	mov	w1, w22
  40d8f0:	mov	x0, x20
  40d8f4:	bl	40dda0 <ferror@plt+0xb520>
  40d8f8:	ldr	x0, [x19, #8]
  40d8fc:	cbz	x0, 40d964 <ferror@plt+0xb0e4>
  40d900:	ldr	w0, [x0]
  40d904:	mov	w1, w22
  40d908:	ldr	x2, [x19, #16]
  40d90c:	blr	x2
  40d910:	cbnz	w0, 40d964 <ferror@plt+0xb0e4>
  40d914:	ldr	x0, [x19, #8]
  40d918:	cbz	x0, 40d964 <ferror@plt+0xb0e4>
  40d91c:	ldr	x0, [x0, #8]
  40d920:	cbz	x0, 40d964 <ferror@plt+0xb0e4>
  40d924:	ldr	x0, [x0, #24]
  40d928:	cbz	x0, 40d964 <ferror@plt+0xb0e4>
  40d92c:	ldr	w1, [x0, #4]
  40d930:	cbz	w1, 40d964 <ferror@plt+0xb0e4>
  40d934:	sub	w1, w1, #0x1
  40d938:	add	x2, x0, #0x10
  40d93c:	add	x0, x0, #0x8
  40d940:	add	x1, x2, w1, uxtw #3
  40d944:	ldr	w2, [x0]
  40d948:	cmp	w2, w21
  40d94c:	b.gt	40d958 <ferror@plt+0xb0d8>
  40d950:	ldr	w2, [x0, #4]
  40d954:	add	w21, w21, w2
  40d958:	add	x0, x0, #0x8
  40d95c:	cmp	x0, x1
  40d960:	b.ne	40d944 <ferror@plt+0xb0c4>  // b.any
  40d964:	mov	w0, w21
  40d968:	ldp	x19, x20, [sp, #16]
  40d96c:	ldp	x21, x22, [sp, #32]
  40d970:	ldr	x23, [sp, #48]
  40d974:	ldp	x29, x30, [sp], #64
  40d978:	ret
  40d97c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d980:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40d984:	add	x2, x2, #0x8d0
  40d988:	add	x0, x0, #0x890
  40d98c:	mov	w1, #0x140                 	// #320
  40d990:	bl	4028b0 <ferror@plt+0x30>
  40d994:	nop
  40d998:	stp	x29, x30, [sp, #-128]!
  40d99c:	mov	x29, sp
  40d9a0:	stp	x19, x20, [sp, #16]
  40d9a4:	mov	x19, x0
  40d9a8:	ldrb	w0, [x0]
  40d9ac:	cbz	w0, 40da3c <ferror@plt+0xb1bc>
  40d9b0:	add	x0, sp, #0x38
  40d9b4:	str	x21, [sp, #32]
  40d9b8:	and	w21, w1, #0xff
  40d9bc:	mov	w1, #0x0                   	// #0
  40d9c0:	bl	40ea18 <ferror@plt+0xc198>
  40d9c4:	ldrb	w0, [x19]
  40d9c8:	cbnz	w0, 40d9f8 <ferror@plt+0xb178>
  40d9cc:	add	x0, sp, #0x38
  40d9d0:	bl	40f048 <ferror@plt+0xc7c8>
  40d9d4:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  40d9d8:	mov	x19, x0
  40d9dc:	add	x0, sp, #0x38
  40d9e0:	bl	40df10 <ferror@plt+0xb690>
  40d9e4:	mov	x0, x19
  40d9e8:	ldp	x19, x20, [sp, #16]
  40d9ec:	ldr	x21, [sp, #32]
  40d9f0:	ldp	x29, x30, [sp], #128
  40d9f4:	ret
  40d9f8:	ldr	x19, [x19, #8]
  40d9fc:	mov	x20, #0x0                   	// #0
  40da00:	cbz	x19, 40da1c <ferror@plt+0xb19c>
  40da04:	nop
  40da08:	ldr	x0, [x19, #16]
  40da0c:	str	x20, [x19, #32]
  40da10:	mov	x20, x19
  40da14:	mov	x19, x0
  40da18:	cbnz	x19, 40da08 <ferror@plt+0xb188>
  40da1c:	cbz	x20, 40d9cc <ferror@plt+0xb14c>
  40da20:	ldr	x0, [x20, #8]
  40da24:	mov	w2, w21
  40da28:	add	x1, sp, #0x38
  40da2c:	ldr	x19, [x20, #32]
  40da30:	bl	40d440 <ferror@plt+0xabc0>
  40da34:	ldr	x0, [x20, #24]
  40da38:	b	40da10 <ferror@plt+0xb190>
  40da3c:	mov	x19, #0x0                   	// #0
  40da40:	mov	x0, x19
  40da44:	ldp	x19, x20, [sp, #16]
  40da48:	ldp	x29, x30, [sp], #128
  40da4c:	ret
  40da50:	stp	x29, x30, [sp, #-112]!
  40da54:	mov	w1, #0x0                   	// #0
  40da58:	mov	x29, sp
  40da5c:	str	x19, [sp, #16]
  40da60:	mov	x19, x0
  40da64:	add	x0, sp, #0x28
  40da68:	bl	40ea18 <ferror@plt+0xc198>
  40da6c:	mov	x0, x19
  40da70:	add	x1, sp, #0x28
  40da74:	mov	x19, #0x0                   	// #0
  40da78:	bl	40cc40 <ferror@plt+0xa3c0>
  40da7c:	tst	w0, #0xff
  40da80:	b.eq	40da94 <ferror@plt+0xb214>  // b.none
  40da84:	add	x0, sp, #0x28
  40da88:	bl	40f048 <ferror@plt+0xc7c8>
  40da8c:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  40da90:	mov	x19, x0
  40da94:	add	x0, sp, #0x28
  40da98:	bl	40df10 <ferror@plt+0xb690>
  40da9c:	mov	x0, x19
  40daa0:	ldr	x19, [sp, #16]
  40daa4:	ldp	x29, x30, [sp], #112
  40daa8:	ret
  40daac:	nop
  40dab0:	stp	x29, x30, [sp, #-112]!
  40dab4:	mov	x29, sp
  40dab8:	ldrb	w2, [x0]
  40dabc:	str	x19, [sp, #16]
  40dac0:	mov	x19, #0x0                   	// #0
  40dac4:	cbz	w2, 40db0c <ferror@plt+0xb28c>
  40dac8:	bl	40c150 <ferror@plt+0x98d0>
  40dacc:	mov	x19, x0
  40dad0:	mov	w1, #0x0                   	// #0
  40dad4:	add	x0, sp, #0x28
  40dad8:	bl	40ea18 <ferror@plt+0xc198>
  40dadc:	mov	x0, x19
  40dae0:	add	x1, sp, #0x28
  40dae4:	mov	x19, #0x0                   	// #0
  40dae8:	bl	40cc40 <ferror@plt+0xa3c0>
  40daec:	tst	w0, #0xff
  40daf0:	b.eq	40db04 <ferror@plt+0xb284>  // b.none
  40daf4:	add	x0, sp, #0x28
  40daf8:	bl	40f048 <ferror@plt+0xc7c8>
  40dafc:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  40db00:	mov	x19, x0
  40db04:	add	x0, sp, #0x28
  40db08:	bl	40df10 <ferror@plt+0xb690>
  40db0c:	mov	x0, x19
  40db10:	ldr	x19, [sp, #16]
  40db14:	ldp	x29, x30, [sp], #112
  40db18:	ret
  40db1c:	nop
  40db20:	cbz	x1, 40dc28 <ferror@plt+0xb3a8>
  40db24:	stp	x29, x30, [sp, #-48]!
  40db28:	mov	x29, sp
  40db2c:	stp	x19, x20, [sp, #16]
  40db30:	mov	x20, x1
  40db34:	ldr	x1, [x0, #16]
  40db38:	stp	x21, x22, [sp, #32]
  40db3c:	mov	x22, x0
  40db40:	cbz	x1, 40db4c <ferror@plt+0xb2cc>
  40db44:	ldr	w0, [x20]
  40db48:	blr	x1
  40db4c:	ldr	x1, [x22, #24]
  40db50:	cbz	x1, 40db5c <ferror@plt+0xb2dc>
  40db54:	ldr	x0, [x20, #8]
  40db58:	blr	x1
  40db5c:	str	xzr, [x20, #32]
  40db60:	mov	x19, x20
  40db64:	mov	x20, #0x0                   	// #0
  40db68:	ldr	x21, [x19, #16]
  40db6c:	cbz	x21, 40dbf0 <ferror@plt+0xb370>
  40db70:	ldr	x1, [x22, #16]
  40db74:	cbz	x1, 40db84 <ferror@plt+0xb304>
  40db78:	ldr	w0, [x21]
  40db7c:	blr	x1
  40db80:	ldr	x21, [x19, #16]
  40db84:	ldr	x1, [x22, #24]
  40db88:	cbz	x1, 40db98 <ferror@plt+0xb318>
  40db8c:	ldr	x0, [x21, #8]
  40db90:	blr	x1
  40db94:	ldr	x21, [x19, #16]
  40db98:	str	x20, [x21, #32]
  40db9c:	ldr	x20, [x19, #24]
  40dba0:	cbz	x20, 40dbfc <ferror@plt+0xb37c>
  40dba4:	ldr	x1, [x22, #16]
  40dba8:	cbz	x1, 40dbb8 <ferror@plt+0xb338>
  40dbac:	ldr	w0, [x20]
  40dbb0:	blr	x1
  40dbb4:	ldr	x20, [x19, #24]
  40dbb8:	ldr	x1, [x22, #24]
  40dbbc:	cbz	x1, 40dbcc <ferror@plt+0xb34c>
  40dbc0:	ldr	x0, [x20, #8]
  40dbc4:	blr	x1
  40dbc8:	ldr	x20, [x19, #24]
  40dbcc:	str	x21, [x20, #32]
  40dbd0:	mov	x0, x19
  40dbd4:	mov	x1, #0x28                  	// #40
  40dbd8:	ldr	x21, [x19, #32]
  40dbdc:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40dbe0:	cbz	x21, 40dc14 <ferror@plt+0xb394>
  40dbe4:	mov	x19, x21
  40dbe8:	ldr	x21, [x19, #16]
  40dbec:	cbnz	x21, 40db70 <ferror@plt+0xb2f0>
  40dbf0:	mov	x21, x20
  40dbf4:	ldr	x20, [x19, #24]
  40dbf8:	cbnz	x20, 40dba4 <ferror@plt+0xb324>
  40dbfc:	mov	x20, x21
  40dc00:	mov	x0, x19
  40dc04:	ldr	x21, [x19, #32]
  40dc08:	mov	x1, #0x28                  	// #40
  40dc0c:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40dc10:	cbnz	x21, 40dbe4 <ferror@plt+0xb364>
  40dc14:	cbnz	x20, 40db60 <ferror@plt+0xb2e0>
  40dc18:	ldp	x19, x20, [sp, #16]
  40dc1c:	ldp	x21, x22, [sp, #32]
  40dc20:	ldp	x29, x30, [sp], #48
  40dc24:	ret
  40dc28:	ret
  40dc2c:	nop
  40dc30:	stp	x29, x30, [sp, #-64]!
  40dc34:	mov	x29, sp
  40dc38:	stp	x19, x20, [sp, #16]
  40dc3c:	ldr	x20, [x0]
  40dc40:	stp	x21, x22, [sp, #32]
  40dc44:	mov	x22, x0
  40dc48:	str	x23, [sp, #48]
  40dc4c:	mov	x23, x1
  40dc50:	cbz	x20, 40dcec <ferror@plt+0xb46c>
  40dc54:	nop
  40dc58:	ldr	x1, [x20]
  40dc5c:	mov	x0, x23
  40dc60:	ldr	x2, [x22, #8]
  40dc64:	blr	x2
  40dc68:	mov	w21, w0
  40dc6c:	cmp	w0, #0x0
  40dc70:	cbz	w0, 40dcec <ferror@plt+0xb46c>
  40dc74:	ldp	x0, x19, [x20, #16]
  40dc78:	csel	x19, x19, x0, ge  // ge = tcont
  40dc7c:	cbz	x19, 40dcec <ferror@plt+0xb46c>
  40dc80:	ldr	x1, [x19]
  40dc84:	mov	x0, x23
  40dc88:	ldr	x2, [x22, #8]
  40dc8c:	blr	x2
  40dc90:	cmp	w0, #0x0
  40dc94:	cbz	w0, 40dd50 <ferror@plt+0xb4d0>
  40dc98:	b.lt	40dd00 <ferror@plt+0xb480>  // b.tstop
  40dc9c:	ldr	x2, [x19, #24]
  40dca0:	cbz	x2, 40dd50 <ferror@plt+0xb4d0>
  40dca4:	cmp	w21, #0x0
  40dca8:	b.le	40dd34 <ferror@plt+0xb4b4>
  40dcac:	ldr	x0, [x2, #16]
  40dcb0:	str	x19, [x2, #16]
  40dcb4:	str	x0, [x19, #24]
  40dcb8:	str	x2, [x20, #24]
  40dcbc:	ldr	x0, [x2, #16]
  40dcc0:	str	x20, [x2, #16]
  40dcc4:	str	x0, [x20, #24]
  40dcc8:	mov	x20, x2
  40dccc:	str	x2, [x22]
  40dcd0:	mov	x0, x23
  40dcd4:	ldr	x2, [x22, #8]
  40dcd8:	ldr	x1, [x20]
  40dcdc:	blr	x2
  40dce0:	mov	w21, w0
  40dce4:	cmp	w0, #0x0
  40dce8:	cbnz	w0, 40dc74 <ferror@plt+0xb3f4>
  40dcec:	ldp	x19, x20, [sp, #16]
  40dcf0:	ldp	x21, x22, [sp, #32]
  40dcf4:	ldr	x23, [sp, #48]
  40dcf8:	ldp	x29, x30, [sp], #64
  40dcfc:	ret
  40dd00:	ldr	x2, [x19, #16]
  40dd04:	cbz	x2, 40dd50 <ferror@plt+0xb4d0>
  40dd08:	ldr	x0, [x2, #24]
  40dd0c:	str	x19, [x2, #24]
  40dd10:	str	x0, [x19, #16]
  40dd14:	tbz	w21, #31, 40dcb8 <ferror@plt+0xb438>
  40dd18:	str	x2, [x20, #16]
  40dd1c:	ldr	x0, [x2, #24]
  40dd20:	str	x20, [x2, #24]
  40dd24:	str	x0, [x20, #16]
  40dd28:	mov	x20, x2
  40dd2c:	str	x2, [x22]
  40dd30:	b	40dc58 <ferror@plt+0xb3d8>
  40dd34:	b.ge	40dd48 <ferror@plt+0xb4c8>  // b.tcont
  40dd38:	ldr	x0, [x2, #16]
  40dd3c:	str	x19, [x2, #16]
  40dd40:	str	x0, [x19, #24]
  40dd44:	b	40dd18 <ferror@plt+0xb498>
  40dd48:	ldr	x20, [x22]
  40dd4c:	b	40dc58 <ferror@plt+0xb3d8>
  40dd50:	tbnz	w21, #31, 40dd78 <ferror@plt+0xb4f8>
  40dd54:	ldr	x0, [x19, #16]
  40dd58:	str	x20, [x19, #16]
  40dd5c:	str	x0, [x20, #24]
  40dd60:	str	x19, [x22]
  40dd64:	ldp	x19, x20, [sp, #16]
  40dd68:	ldp	x21, x22, [sp, #32]
  40dd6c:	ldr	x23, [sp, #48]
  40dd70:	ldp	x29, x30, [sp], #64
  40dd74:	ret
  40dd78:	ldr	x0, [x19, #24]
  40dd7c:	str	x20, [x19, #24]
  40dd80:	str	x0, [x20, #16]
  40dd84:	str	x19, [x22]
  40dd88:	ldp	x19, x20, [sp, #16]
  40dd8c:	ldp	x21, x22, [sp, #32]
  40dd90:	ldr	x23, [sp, #48]
  40dd94:	ldp	x29, x30, [sp], #64
  40dd98:	ret
  40dd9c:	nop
  40dda0:	stp	x29, x30, [sp, #-64]!
  40dda4:	mov	x29, sp
  40dda8:	stp	x19, x20, [sp, #16]
  40ddac:	ldr	x20, [x0]
  40ddb0:	stp	x21, x22, [sp, #32]
  40ddb4:	mov	x22, x0
  40ddb8:	str	x23, [sp, #48]
  40ddbc:	mov	w23, w1
  40ddc0:	cbz	x20, 40de5c <ferror@plt+0xb5dc>
  40ddc4:	nop
  40ddc8:	ldr	w1, [x20]
  40ddcc:	mov	w0, w23
  40ddd0:	ldr	x2, [x22, #8]
  40ddd4:	blr	x2
  40ddd8:	mov	w21, w0
  40dddc:	cmp	w0, #0x0
  40dde0:	cbz	w0, 40de5c <ferror@plt+0xb5dc>
  40dde4:	ldp	x0, x19, [x20, #16]
  40dde8:	csel	x19, x19, x0, ge  // ge = tcont
  40ddec:	cbz	x19, 40de5c <ferror@plt+0xb5dc>
  40ddf0:	ldr	w1, [x19]
  40ddf4:	mov	w0, w23
  40ddf8:	ldr	x2, [x22, #8]
  40ddfc:	blr	x2
  40de00:	cmp	w0, #0x0
  40de04:	cbz	w0, 40dec0 <ferror@plt+0xb640>
  40de08:	b.lt	40de70 <ferror@plt+0xb5f0>  // b.tstop
  40de0c:	ldr	x2, [x19, #24]
  40de10:	cbz	x2, 40dec0 <ferror@plt+0xb640>
  40de14:	cmp	w21, #0x0
  40de18:	b.le	40dea4 <ferror@plt+0xb624>
  40de1c:	ldr	x0, [x2, #16]
  40de20:	str	x19, [x2, #16]
  40de24:	str	x0, [x19, #24]
  40de28:	str	x2, [x20, #24]
  40de2c:	ldr	x0, [x2, #16]
  40de30:	str	x20, [x2, #16]
  40de34:	str	x0, [x20, #24]
  40de38:	mov	x20, x2
  40de3c:	str	x2, [x22]
  40de40:	mov	w0, w23
  40de44:	ldr	x2, [x22, #8]
  40de48:	ldr	w1, [x20]
  40de4c:	blr	x2
  40de50:	mov	w21, w0
  40de54:	cmp	w0, #0x0
  40de58:	cbnz	w0, 40dde4 <ferror@plt+0xb564>
  40de5c:	ldp	x19, x20, [sp, #16]
  40de60:	ldp	x21, x22, [sp, #32]
  40de64:	ldr	x23, [sp, #48]
  40de68:	ldp	x29, x30, [sp], #64
  40de6c:	ret
  40de70:	ldr	x2, [x19, #16]
  40de74:	cbz	x2, 40dec0 <ferror@plt+0xb640>
  40de78:	ldr	x0, [x2, #24]
  40de7c:	str	x19, [x2, #24]
  40de80:	str	x0, [x19, #16]
  40de84:	tbz	w21, #31, 40de28 <ferror@plt+0xb5a8>
  40de88:	str	x2, [x20, #16]
  40de8c:	ldr	x0, [x2, #24]
  40de90:	str	x20, [x2, #24]
  40de94:	str	x0, [x20, #16]
  40de98:	mov	x20, x2
  40de9c:	str	x2, [x22]
  40dea0:	b	40ddc8 <ferror@plt+0xb548>
  40dea4:	b.ge	40deb8 <ferror@plt+0xb638>  // b.tcont
  40dea8:	ldr	x0, [x2, #16]
  40deac:	str	x19, [x2, #16]
  40deb0:	str	x0, [x19, #24]
  40deb4:	b	40de88 <ferror@plt+0xb608>
  40deb8:	ldr	x20, [x22]
  40debc:	b	40ddc8 <ferror@plt+0xb548>
  40dec0:	tbnz	w21, #31, 40dee8 <ferror@plt+0xb668>
  40dec4:	ldr	x0, [x19, #16]
  40dec8:	str	x20, [x19, #16]
  40decc:	str	x0, [x20, #24]
  40ded0:	str	x19, [x22]
  40ded4:	ldp	x19, x20, [sp, #16]
  40ded8:	ldp	x21, x22, [sp, #32]
  40dedc:	ldr	x23, [sp, #48]
  40dee0:	ldp	x29, x30, [sp], #64
  40dee4:	ret
  40dee8:	ldr	x0, [x19, #24]
  40deec:	str	x20, [x19, #24]
  40def0:	str	x0, [x20, #16]
  40def4:	str	x19, [x22]
  40def8:	ldp	x19, x20, [sp, #16]
  40defc:	ldp	x21, x22, [sp, #32]
  40df00:	ldr	x23, [sp, #48]
  40df04:	ldp	x29, x30, [sp], #64
  40df08:	ret
  40df0c:	nop
  40df10:	stp	x29, x30, [sp, #-32]!
  40df14:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40df18:	add	x1, x1, #0xaa0
  40df1c:	mov	x29, sp
  40df20:	stp	x19, x20, [sp, #16]
  40df24:	mov	x19, x0
  40df28:	ldr	x0, [x0, #56]
  40df2c:	str	x1, [x19]
  40df30:	cbz	x0, 40df40 <ferror@plt+0xb6c0>
  40df34:	ldr	x1, [x0]
  40df38:	ldr	x1, [x1, #8]
  40df3c:	blr	x1
  40df40:	ldr	x20, [x19, #8]
  40df44:	mov	x1, #0x0                   	// #0
  40df48:	add	x0, x20, #0x58
  40df4c:	bl	45c878 <_obstack_free@@Base>
  40df50:	mov	x0, x20
  40df54:	mov	x1, #0x0                   	// #0
  40df58:	bl	45c878 <_obstack_free@@Base>
  40df5c:	ldr	x0, [x19, #8]
  40df60:	bl	402640 <free@plt>
  40df64:	ldr	x0, [x19, #16]
  40df68:	ldp	x19, x20, [sp, #16]
  40df6c:	ldp	x29, x30, [sp], #32
  40df70:	b	402640 <free@plt>
  40df74:	nop
  40df78:	stp	x29, x30, [sp, #-32]!
  40df7c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40df80:	add	x1, x1, #0xaa0
  40df84:	mov	x29, sp
  40df88:	stp	x19, x20, [sp, #16]
  40df8c:	mov	x19, x0
  40df90:	ldr	x0, [x0, #56]
  40df94:	str	x1, [x19]
  40df98:	cbz	x0, 40dfa8 <ferror@plt+0xb728>
  40df9c:	ldr	x1, [x0]
  40dfa0:	ldr	x1, [x1, #8]
  40dfa4:	blr	x1
  40dfa8:	ldr	x20, [x19, #8]
  40dfac:	mov	x1, #0x0                   	// #0
  40dfb0:	add	x0, x20, #0x58
  40dfb4:	bl	45c878 <_obstack_free@@Base>
  40dfb8:	mov	x1, #0x0                   	// #0
  40dfbc:	mov	x0, x20
  40dfc0:	bl	45c878 <_obstack_free@@Base>
  40dfc4:	ldr	x0, [x19, #8]
  40dfc8:	bl	402640 <free@plt>
  40dfcc:	ldr	x0, [x19, #16]
  40dfd0:	bl	402640 <free@plt>
  40dfd4:	mov	x0, x19
  40dfd8:	mov	x1, #0x48                  	// #72
  40dfdc:	ldp	x19, x20, [sp, #16]
  40dfe0:	ldp	x29, x30, [sp], #32
  40dfe4:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  40dfe8:	ldr	x0, [x0, #32]
  40dfec:	b	433b08 <ferror@plt+0x31288>
  40dff0:	cbz	w1, 40dffc <ferror@plt+0xb77c>
  40dff4:	mov	w0, #0x0                   	// #0
  40dff8:	ret
  40dffc:	ldr	x0, [x0, #32]
  40e000:	b	4338e0 <ferror@plt+0x31060>
  40e004:	nop
  40e008:	stp	x29, x30, [sp, #-48]!
  40e00c:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40e010:	add	x5, x0, #0xcc
  40e014:	movi	v0.4s, #0x0
  40e018:	mov	x29, sp
  40e01c:	ldrb	w7, [x0, #80]
  40e020:	ldrb	w6, [x0, #168]
  40e024:	mov	w8, #0x1                   	// #1
  40e028:	stp	x19, x20, [sp, #16]
  40e02c:	and	w7, w7, #0xfffffff8
  40e030:	and	w6, w6, #0xfffffff8
  40e034:	str	x21, [sp, #32]
  40e038:	adrp	x20, 417000 <ferror@plt+0x14780>
  40e03c:	ldr	x9, [x1, #1312]
  40e040:	str	xzr, [x0]
  40e044:	stur	q0, [x0, #8]
  40e048:	add	x20, x20, #0xf10
  40e04c:	adrp	x21, 417000 <ferror@plt+0x14780>
  40e050:	stur	q0, [x0, #24]
  40e054:	add	x21, x21, #0xf38
  40e058:	mov	x19, x0
  40e05c:	stur	q0, [x0, #40]
  40e060:	mov	x3, x20
  40e064:	mov	x4, x21
  40e068:	stur	q0, [x0, #56]
  40e06c:	mov	x2, #0x0                   	// #0
  40e070:	mov	x1, #0x0                   	// #0
  40e074:	str	xzr, [x0, #72]
  40e078:	strb	w7, [x0, #80]
  40e07c:	str	xzr, [x0, #88]
  40e080:	stp	q0, q0, [x0, #96]
  40e084:	stp	q0, q0, [x0, #128]
  40e088:	str	xzr, [x0, #160]
  40e08c:	strb	w6, [x0, #168]
  40e090:	stp	x0, xzr, [x0, #176]
  40e094:	str	x9, [x0, #192]
  40e098:	str	wzr, [x0, #200]
  40e09c:	stp	xzr, xzr, [x5]
  40e0a0:	stp	xzr, xzr, [x5, #16]
  40e0a4:	stp	xzr, xzr, [x5, #32]
  40e0a8:	stp	xzr, xzr, [x5, #48]
  40e0ac:	stp	xzr, xzr, [x5, #64]
  40e0b0:	stp	xzr, xzr, [x5, #80]
  40e0b4:	stp	xzr, xzr, [x5, #96]
  40e0b8:	stp	xzr, xzr, [x5, #112]
  40e0bc:	strb	w8, [x0, #332]
  40e0c0:	bl	45c538 <_obstack_begin@@Base>
  40e0c4:	mov	x4, x21
  40e0c8:	mov	x3, x20
  40e0cc:	add	x0, x19, #0x58
  40e0d0:	mov	x2, #0x0                   	// #0
  40e0d4:	ldp	x19, x20, [sp, #16]
  40e0d8:	mov	x1, #0x0                   	// #0
  40e0dc:	ldr	x21, [sp, #32]
  40e0e0:	ldp	x29, x30, [sp], #48
  40e0e4:	b	45c538 <_obstack_begin@@Base>
  40e0e8:	stp	x29, x30, [sp, #-32]!
  40e0ec:	mov	x1, #0x0                   	// #0
  40e0f0:	mov	x29, sp
  40e0f4:	str	x19, [sp, #16]
  40e0f8:	mov	x19, x0
  40e0fc:	add	x0, x0, #0x58
  40e100:	bl	45c878 <_obstack_free@@Base>
  40e104:	mov	x0, x19
  40e108:	mov	x1, #0x0                   	// #0
  40e10c:	ldr	x19, [sp, #16]
  40e110:	ldp	x29, x30, [sp], #32
  40e114:	b	45c878 <_obstack_free@@Base>
  40e118:	stp	x29, x30, [sp, #-48]!
  40e11c:	mov	x29, sp
  40e120:	str	x21, [sp, #32]
  40e124:	ldr	x21, [x0, #8]
  40e128:	stp	x19, x20, [sp, #16]
  40e12c:	mov	x19, x0
  40e130:	ldr	x20, [x21, #176]
  40e134:	ldp	x0, x1, [x20, #24]
  40e138:	cmp	x1, x0
  40e13c:	b.eq	40e1b4 <ferror@plt+0xb934>  // b.none
  40e140:	add	x1, x0, #0x1
  40e144:	str	x1, [x20, #24]
  40e148:	strb	wzr, [x0]
  40e14c:	ldr	x1, [x19, #8]
  40e150:	ldr	x0, [x21, #176]
  40e154:	ldr	x1, [x1, #192]
  40e158:	ldr	x0, [x0, #16]
  40e15c:	bl	402280 <fputs@plt>
  40e160:	ldr	x2, [x19, #8]
  40e164:	ldr	x0, [x2, #176]
  40e168:	ldp	x3, x1, [x0, #8]
  40e16c:	cmp	x1, x3
  40e170:	b.ls	40e180 <ferror@plt+0xb900>  // b.plast
  40e174:	ldr	x3, [x0, #32]
  40e178:	cmp	x1, x3
  40e17c:	b.cc	40e19c <ferror@plt+0xb91c>  // b.lo, b.ul, b.last
  40e180:	bl	45c878 <_obstack_free@@Base>
  40e184:	ldr	x2, [x19, #8]
  40e188:	ldp	x19, x20, [sp, #16]
  40e18c:	ldr	x21, [sp, #32]
  40e190:	str	wzr, [x2, #200]
  40e194:	ldp	x29, x30, [sp], #48
  40e198:	ret
  40e19c:	str	x1, [x0, #24]
  40e1a0:	ldp	x19, x20, [sp, #16]
  40e1a4:	ldr	x21, [sp, #32]
  40e1a8:	str	wzr, [x2, #200]
  40e1ac:	ldp	x29, x30, [sp], #48
  40e1b0:	ret
  40e1b4:	mov	x0, x20
  40e1b8:	mov	x1, #0x1                   	// #1
  40e1bc:	bl	45c6e0 <_obstack_newchunk@@Base>
  40e1c0:	ldr	x0, [x20, #24]
  40e1c4:	b	40e140 <ferror@plt+0xb8c0>
  40e1c8:	stp	x29, x30, [sp, #-64]!
  40e1cc:	mov	x29, sp
  40e1d0:	stp	x19, x20, [sp, #16]
  40e1d4:	ldr	x20, [x0, #8]
  40e1d8:	stp	x21, x22, [sp, #32]
  40e1dc:	and	w21, w1, #0xff
  40e1e0:	stp	x23, x24, [sp, #48]
  40e1e4:	mov	x23, x0
  40e1e8:	ldr	x19, [x20, #176]
  40e1ec:	ldp	x0, x1, [x19, #24]
  40e1f0:	cmp	x1, x0
  40e1f4:	b.eq	40e388 <ferror@plt+0xbb08>  // b.none
  40e1f8:	add	x1, x0, #0x1
  40e1fc:	str	x1, [x19, #24]
  40e200:	strb	wzr, [x0]
  40e204:	ldr	x0, [x20, #176]
  40e208:	ldr	x2, [x23, #8]
  40e20c:	ldr	x19, [x0, #16]
  40e210:	ldr	x20, [x2, #192]
  40e214:	ldrb	w0, [x19]
  40e218:	cbz	w0, 40e29c <ferror@plt+0xba1c>
  40e21c:	cbz	w21, 40e2d8 <ferror@plt+0xba58>
  40e220:	mov	x21, #0x500000000           	// #21474836480
  40e224:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40e228:	mov	x22, #0x1                   	// #1
  40e22c:	add	x24, x24, #0x950
  40e230:	movk	x21, #0x5000, lsl #48
  40e234:	b	40e260 <ferror@plt+0xb9e0>
  40e238:	cmp	w0, #0x9
  40e23c:	b.ls	40e250 <ferror@plt+0xb9d0>  // b.plast
  40e240:	lsl	x1, x22, x0
  40e244:	tst	x1, x21
  40e248:	b.ne	40e278 <ferror@plt+0xb9f8>  // b.any
  40e24c:	tbnz	w1, #10, 40e370 <ferror@plt+0xbaf0>
  40e250:	mov	x1, x20
  40e254:	bl	402340 <fputc@plt>
  40e258:	ldrb	w0, [x19, #1]!
  40e25c:	cbz	w0, 40e298 <ferror@plt+0xba18>
  40e260:	cmp	w0, #0x3e
  40e264:	b.ls	40e238 <ferror@plt+0xb9b8>  // b.plast
  40e268:	cmp	w0, #0x5c
  40e26c:	b.ne	40e344 <ferror@plt+0xbac4>  // b.any
  40e270:	ldrb	w0, [x19, #1]
  40e274:	cbz	w0, 40e39c <ferror@plt+0xbb1c>
  40e278:	mov	x1, x20
  40e27c:	mov	w0, #0x5c                  	// #92
  40e280:	bl	402340 <fputc@plt>
  40e284:	ldrb	w0, [x19]
  40e288:	mov	x1, x20
  40e28c:	bl	402340 <fputc@plt>
  40e290:	ldrb	w0, [x19, #1]!
  40e294:	cbnz	w0, 40e260 <ferror@plt+0xb9e0>
  40e298:	ldr	x2, [x23, #8]
  40e29c:	ldr	x0, [x2, #176]
  40e2a0:	ldp	x3, x1, [x0, #8]
  40e2a4:	cmp	x1, x3
  40e2a8:	b.ls	40e2b8 <ferror@plt+0xba38>  // b.plast
  40e2ac:	ldr	x3, [x0, #32]
  40e2b0:	cmp	x1, x3
  40e2b4:	b.cc	40e328 <ferror@plt+0xbaa8>  // b.lo, b.ul, b.last
  40e2b8:	bl	45c878 <_obstack_free@@Base>
  40e2bc:	ldr	x2, [x23, #8]
  40e2c0:	ldp	x19, x20, [sp, #16]
  40e2c4:	ldp	x21, x22, [sp, #32]
  40e2c8:	ldp	x23, x24, [sp, #48]
  40e2cc:	str	wzr, [x2, #200]
  40e2d0:	ldp	x29, x30, [sp], #64
  40e2d4:	ret
  40e2d8:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40e2dc:	add	x21, x21, #0x950
  40e2e0:	b	40e2fc <ferror@plt+0xba7c>
  40e2e4:	cmp	w0, #0xa
  40e2e8:	b.eq	40e358 <ferror@plt+0xbad8>  // b.none
  40e2ec:	mov	x1, x20
  40e2f0:	bl	402340 <fputc@plt>
  40e2f4:	ldrb	w0, [x19, #1]!
  40e2f8:	cbz	w0, 40e298 <ferror@plt+0xba18>
  40e2fc:	cmp	w0, #0x22
  40e300:	b.eq	40e314 <ferror@plt+0xba94>  // b.none
  40e304:	cmp	w0, #0x5c
  40e308:	b.ne	40e2e4 <ferror@plt+0xba64>  // b.any
  40e30c:	ldrb	w0, [x19, #1]
  40e310:	cbz	w0, 40e39c <ferror@plt+0xbb1c>
  40e314:	mov	x1, x20
  40e318:	mov	w0, #0x5c                  	// #92
  40e31c:	bl	402340 <fputc@plt>
  40e320:	ldrb	w0, [x19]
  40e324:	b	40e2ec <ferror@plt+0xba6c>
  40e328:	str	x1, [x0, #24]
  40e32c:	ldp	x19, x20, [sp, #16]
  40e330:	ldp	x21, x22, [sp, #32]
  40e334:	ldp	x23, x24, [sp, #48]
  40e338:	str	wzr, [x2, #200]
  40e33c:	ldp	x29, x30, [sp], #64
  40e340:	ret
  40e344:	sub	w1, w0, #0x7b
  40e348:	and	w1, w1, #0xff
  40e34c:	cmp	w1, #0x2
  40e350:	b.hi	40e250 <ferror@plt+0xb9d0>  // b.pmore
  40e354:	b	40e278 <ferror@plt+0xb9f8>
  40e358:	mov	x3, x20
  40e35c:	mov	x0, x21
  40e360:	mov	x2, #0x2                   	// #2
  40e364:	mov	x1, #0x1                   	// #1
  40e368:	bl	402680 <fwrite@plt>
  40e36c:	b	40e314 <ferror@plt+0xba94>
  40e370:	mov	x3, x20
  40e374:	mov	x0, x24
  40e378:	mov	x2, #0x2                   	// #2
  40e37c:	mov	x1, #0x1                   	// #1
  40e380:	bl	402680 <fwrite@plt>
  40e384:	b	40e278 <ferror@plt+0xb9f8>
  40e388:	mov	x0, x19
  40e38c:	mov	x1, #0x1                   	// #1
  40e390:	bl	45c6e0 <_obstack_newchunk@@Base>
  40e394:	ldr	x0, [x19, #24]
  40e398:	b	40e1f8 <ferror@plt+0xb978>
  40e39c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40e3a0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40e3a4:	add	x2, x2, #0x958
  40e3a8:	add	x0, x0, #0x980
  40e3ac:	mov	w1, #0x378                 	// #888
  40e3b0:	bl	4028b0 <ferror@plt+0x30>
  40e3b4:	nop
  40e3b8:	stp	x29, x30, [sp, #-80]!
  40e3bc:	mov	x29, sp
  40e3c0:	stp	x23, x24, [sp, #48]
  40e3c4:	ldr	w24, [x0, #32]
  40e3c8:	cmp	w24, #0x0
  40e3cc:	b.le	40e4a8 <ferror@plt+0xbc28>
  40e3d0:	mov	w23, #0xa                   	// #10
  40e3d4:	stp	x19, x20, [sp, #16]
  40e3d8:	mov	x20, x0
  40e3dc:	stp	x21, x22, [sp, #32]
  40e3e0:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  40e3e4:	mov	w21, #0x0                   	// #0
  40e3e8:	add	x22, x22, #0x2c0
  40e3ec:	ldr	x1, [x0, #8]
  40e3f0:	str	x25, [sp, #64]
  40e3f4:	mov	w25, #0x20                  	// #32
  40e3f8:	b	40e420 <ferror@plt+0xbba0>
  40e3fc:	add	x0, x2, #0x1
  40e400:	str	x0, [x19, #24]
  40e404:	strb	w25, [x2]
  40e408:	ldr	x1, [x20, #8]
  40e40c:	ldr	w2, [x1, #200]
  40e410:	add	w2, w2, #0x1
  40e414:	str	w2, [x1, #200]
  40e418:	cmp	w24, w21
  40e41c:	b.eq	40e49c <ferror@plt+0xbc1c>  // b.none
  40e420:	ldr	x19, [x1, #176]
  40e424:	add	w21, w21, #0x1
  40e428:	ldr	w0, [x20, #40]
  40e42c:	cmp	w0, #0x0
  40e430:	ldp	x2, x3, [x19, #24]
  40e434:	b.le	40e44c <ferror@plt+0xbbcc>
  40e438:	ldr	w1, [x1, #200]
  40e43c:	ldr	w0, [x20, #28]
  40e440:	sub	w0, w0, w1
  40e444:	cmp	w0, #0x0
  40e448:	b.le	40e468 <ferror@plt+0xbbe8>
  40e44c:	cmp	x3, x2
  40e450:	b.ne	40e3fc <ferror@plt+0xbb7c>  // b.any
  40e454:	mov	x0, x19
  40e458:	mov	x1, #0x1                   	// #1
  40e45c:	bl	45c6e0 <_obstack_newchunk@@Base>
  40e460:	ldr	x2, [x19, #24]
  40e464:	b	40e3fc <ferror@plt+0xbb7c>
  40e468:	cmp	x3, x2
  40e46c:	b.eq	40e4b4 <ferror@plt+0xbc34>  // b.none
  40e470:	add	x1, x2, #0x1
  40e474:	str	x1, [x19, #24]
  40e478:	strb	w23, [x2]
  40e47c:	ldrh	w0, [x22, #64]
  40e480:	ldr	x1, [x20, #8]
  40e484:	strb	wzr, [x20, #65]
  40e488:	str	wzr, [x1, #200]
  40e48c:	tbnz	w0, #6, 40e418 <ferror@plt+0xbb98>
  40e490:	ldr	x19, [x1, #176]
  40e494:	ldp	x2, x3, [x19, #24]
  40e498:	b	40e44c <ferror@plt+0xbbcc>
  40e49c:	ldp	x19, x20, [sp, #16]
  40e4a0:	ldp	x21, x22, [sp, #32]
  40e4a4:	ldr	x25, [sp, #64]
  40e4a8:	ldp	x23, x24, [sp, #48]
  40e4ac:	ldp	x29, x30, [sp], #80
  40e4b0:	ret
  40e4b4:	mov	x0, x19
  40e4b8:	mov	x1, #0x1                   	// #1
  40e4bc:	bl	45c6e0 <_obstack_newchunk@@Base>
  40e4c0:	ldr	x2, [x19, #24]
  40e4c4:	b	40e470 <ferror@plt+0xbbf0>
  40e4c8:	stp	x29, x30, [sp, #-48]!
  40e4cc:	mov	x29, sp
  40e4d0:	stp	x19, x20, [sp, #16]
  40e4d4:	mov	x19, x0
  40e4d8:	ldr	x20, [x0, #8]
  40e4dc:	strb	wzr, [x0, #64]
  40e4e0:	str	wzr, [x0, #32]
  40e4e4:	ldrb	w0, [x20, #332]
  40e4e8:	cbnz	w0, 40e4f8 <ferror@plt+0xbc78>
  40e4ec:	ldp	x19, x20, [sp, #16]
  40e4f0:	ldp	x29, x30, [sp], #48
  40e4f4:	ret
  40e4f8:	str	x21, [sp, #32]
  40e4fc:	ldr	x21, [x20, #176]
  40e500:	ldp	x0, x1, [x21, #24]
  40e504:	cmp	x1, x0
  40e508:	b.eq	40e588 <ferror@plt+0xbd08>  // b.none
  40e50c:	add	x1, x0, #0x1
  40e510:	str	x1, [x21, #24]
  40e514:	strb	wzr, [x0]
  40e518:	ldr	x1, [x19, #8]
  40e51c:	ldr	x0, [x20, #176]
  40e520:	ldr	x1, [x1, #192]
  40e524:	ldr	x0, [x0, #16]
  40e528:	bl	402280 <fputs@plt>
  40e52c:	ldr	x2, [x19, #8]
  40e530:	ldr	x0, [x2, #176]
  40e534:	ldp	x3, x1, [x0, #8]
  40e538:	cmp	x1, x3
  40e53c:	b.ls	40e54c <ferror@plt+0xbccc>  // b.plast
  40e540:	ldr	x3, [x0, #32]
  40e544:	cmp	x1, x3
  40e548:	b.cc	40e56c <ferror@plt+0xbcec>  // b.lo, b.ul, b.last
  40e54c:	bl	45c878 <_obstack_free@@Base>
  40e550:	ldr	x2, [x19, #8]
  40e554:	ldp	x19, x20, [sp, #16]
  40e558:	ldr	x21, [sp, #32]
  40e55c:	str	wzr, [x2, #200]
  40e560:	ldr	x0, [x2, #192]
  40e564:	ldp	x29, x30, [sp], #48
  40e568:	b	4026b0 <fflush@plt>
  40e56c:	str	x1, [x0, #24]
  40e570:	ldp	x19, x20, [sp, #16]
  40e574:	ldr	x21, [sp, #32]
  40e578:	str	wzr, [x2, #200]
  40e57c:	ldr	x0, [x2, #192]
  40e580:	ldp	x29, x30, [sp], #48
  40e584:	b	4026b0 <fflush@plt>
  40e588:	mov	x0, x21
  40e58c:	mov	x1, #0x1                   	// #1
  40e590:	bl	45c6e0 <_obstack_newchunk@@Base>
  40e594:	ldr	x0, [x21, #24]
  40e598:	b	40e50c <ferror@plt+0xbc8c>
  40e59c:	nop
  40e5a0:	stp	x29, x30, [sp, #-48]!
  40e5a4:	mov	x29, sp
  40e5a8:	str	x21, [sp, #32]
  40e5ac:	ldr	x21, [x0, #8]
  40e5b0:	stp	x19, x20, [sp, #16]
  40e5b4:	mov	x19, x0
  40e5b8:	strb	wzr, [x0, #64]
  40e5bc:	ldr	x20, [x21, #176]
  40e5c0:	ldr	x1, [x20, #32]
  40e5c4:	str	wzr, [x0, #32]
  40e5c8:	ldr	x0, [x20, #24]
  40e5cc:	cmp	x1, x0
  40e5d0:	b.eq	40e650 <ferror@plt+0xbdd0>  // b.none
  40e5d4:	add	x1, x0, #0x1
  40e5d8:	str	x1, [x20, #24]
  40e5dc:	strb	wzr, [x0]
  40e5e0:	ldr	x1, [x19, #8]
  40e5e4:	ldr	x0, [x21, #176]
  40e5e8:	ldr	x1, [x1, #192]
  40e5ec:	ldr	x0, [x0, #16]
  40e5f0:	bl	402280 <fputs@plt>
  40e5f4:	ldr	x2, [x19, #8]
  40e5f8:	ldr	x0, [x2, #176]
  40e5fc:	ldp	x3, x1, [x0, #8]
  40e600:	cmp	x1, x3
  40e604:	b.ls	40e614 <ferror@plt+0xbd94>  // b.plast
  40e608:	ldr	x3, [x0, #32]
  40e60c:	cmp	x1, x3
  40e610:	b.cc	40e634 <ferror@plt+0xbdb4>  // b.lo, b.ul, b.last
  40e614:	bl	45c878 <_obstack_free@@Base>
  40e618:	ldr	x2, [x19, #8]
  40e61c:	ldp	x19, x20, [sp, #16]
  40e620:	ldr	x21, [sp, #32]
  40e624:	str	wzr, [x2, #200]
  40e628:	ldr	x0, [x2, #192]
  40e62c:	ldp	x29, x30, [sp], #48
  40e630:	b	4026b0 <fflush@plt>
  40e634:	str	x1, [x0, #24]
  40e638:	ldp	x19, x20, [sp, #16]
  40e63c:	ldr	x21, [sp, #32]
  40e640:	str	wzr, [x2, #200]
  40e644:	ldr	x0, [x2, #192]
  40e648:	ldp	x29, x30, [sp], #48
  40e64c:	b	4026b0 <fflush@plt>
  40e650:	mov	x0, x20
  40e654:	mov	x1, #0x1                   	// #1
  40e658:	bl	45c6e0 <_obstack_newchunk@@Base>
  40e65c:	ldr	x0, [x20, #24]
  40e660:	b	40e5d4 <ferror@plt+0xbd54>
  40e664:	nop
  40e668:	stp	x29, x30, [sp, #-32]!
  40e66c:	cmp	w1, #0x0
  40e670:	mov	x29, sp
  40e674:	stp	x19, x20, [sp, #16]
  40e678:	mov	x20, x0
  40e67c:	mov	w19, w1
  40e680:	str	w1, [x0, #40]
  40e684:	b.le	40e694 <ferror@plt+0xbe14>
  40e688:	ldr	w0, [x0, #36]
  40e68c:	cmp	w0, #0x1
  40e690:	b.hi	40e6a4 <ferror@plt+0xbe24>  // b.pmore
  40e694:	str	w19, [x20, #28]
  40e698:	ldp	x19, x20, [sp, #16]
  40e69c:	ldp	x29, x30, [sp], #32
  40e6a0:	ret
  40e6a4:	ldr	x0, [x20, #16]
  40e6a8:	cbz	x0, 40e6b4 <ferror@plt+0xbe34>
  40e6ac:	bl	402270 <strlen@plt>
  40e6b0:	sub	w1, w19, w0
  40e6b4:	cmp	w1, #0x1f
  40e6b8:	b.gt	40e694 <ferror@plt+0xbe14>
  40e6bc:	add	w19, w19, #0x20
  40e6c0:	b	40e694 <ferror@plt+0xbe14>
  40e6c4:	nop
  40e6c8:	stp	x29, x30, [sp, #-32]!
  40e6cc:	mov	x29, sp
  40e6d0:	ldr	x2, [x0, #8]
  40e6d4:	str	x19, [sp, #16]
  40e6d8:	mov	x19, x0
  40e6dc:	ldr	x0, [x2, #176]
  40e6e0:	ldp	x3, x1, [x0, #8]
  40e6e4:	cmp	x3, x1
  40e6e8:	b.cs	40e6f8 <ferror@plt+0xbe78>  // b.hs, b.nlast
  40e6ec:	ldr	x3, [x0, #32]
  40e6f0:	cmp	x3, x1
  40e6f4:	b.hi	40e710 <ferror@plt+0xbe90>  // b.pmore
  40e6f8:	bl	45c878 <_obstack_free@@Base>
  40e6fc:	ldr	x2, [x19, #8]
  40e700:	ldr	x19, [sp, #16]
  40e704:	str	wzr, [x2, #200]
  40e708:	ldp	x29, x30, [sp], #32
  40e70c:	ret
  40e710:	str	x1, [x0, #24]
  40e714:	ldr	x19, [sp, #16]
  40e718:	str	wzr, [x2, #200]
  40e71c:	ldp	x29, x30, [sp], #32
  40e720:	ret
  40e724:	nop
  40e728:	stp	x29, x30, [sp, #-48]!
  40e72c:	mov	x29, sp
  40e730:	stp	x19, x20, [sp, #16]
  40e734:	mov	x19, x0
  40e738:	mov	x20, x1
  40e73c:	ldr	x0, [x0, #16]
  40e740:	str	x21, [sp, #32]
  40e744:	bl	402640 <free@plt>
  40e748:	ldr	w21, [x19, #40]
  40e74c:	str	x20, [x19, #16]
  40e750:	cmp	w21, #0x0
  40e754:	b.le	40e764 <ferror@plt+0xbee4>
  40e758:	ldr	w0, [x19, #36]
  40e75c:	cmp	w0, #0x1
  40e760:	b.hi	40e77c <ferror@plt+0xbefc>  // b.pmore
  40e764:	stp	w21, wzr, [x19, #28]
  40e768:	strb	wzr, [x19, #64]
  40e76c:	ldp	x19, x20, [sp, #16]
  40e770:	ldr	x21, [sp, #32]
  40e774:	ldp	x29, x30, [sp], #48
  40e778:	ret
  40e77c:	mov	w0, w21
  40e780:	cbz	x20, 40e790 <ferror@plt+0xbf10>
  40e784:	mov	x0, x20
  40e788:	bl	402270 <strlen@plt>
  40e78c:	sub	w0, w21, w0
  40e790:	cmp	w0, #0x20
  40e794:	add	w0, w21, #0x20
  40e798:	csel	w21, w0, w21, lt  // lt = tstop
  40e79c:	stp	w21, wzr, [x19, #28]
  40e7a0:	strb	wzr, [x19, #64]
  40e7a4:	ldp	x19, x20, [sp, #16]
  40e7a8:	ldr	x21, [sp, #32]
  40e7ac:	ldp	x29, x30, [sp], #48
  40e7b0:	ret
  40e7b4:	nop
  40e7b8:	mov	x1, x0
  40e7bc:	ldr	x0, [x0, #16]
  40e7c0:	str	xzr, [x1, #16]
  40e7c4:	ret
  40e7c8:	stp	x29, x30, [sp, #-32]!
  40e7cc:	mov	x29, sp
  40e7d0:	str	x19, [sp, #16]
  40e7d4:	mov	x19, x0
  40e7d8:	ldr	x0, [x0, #16]
  40e7dc:	cbz	x0, 40e7e8 <ferror@plt+0xbf68>
  40e7e0:	bl	402640 <free@plt>
  40e7e4:	str	xzr, [x19, #16]
  40e7e8:	ldr	x19, [sp, #16]
  40e7ec:	ldp	x29, x30, [sp], #32
  40e7f0:	ret
  40e7f4:	nop
  40e7f8:	stp	x29, x30, [sp, #-80]!
  40e7fc:	mov	x29, sp
  40e800:	stp	x19, x20, [sp, #16]
  40e804:	ldr	x19, [x0, #16]
  40e808:	cbz	x19, 40e8b4 <ferror@plt+0xc034>
  40e80c:	mov	x20, x0
  40e810:	ldr	w0, [x0, #36]
  40e814:	cbz	w0, 40e8c0 <ferror@plt+0xc040>
  40e818:	cmp	w0, #0x2
  40e81c:	b.ne	40e8b4 <ferror@plt+0xc034>  // b.any
  40e820:	stp	x21, x22, [sp, #32]
  40e824:	stp	x23, x24, [sp, #48]
  40e828:	mov	x0, x19
  40e82c:	bl	402270 <strlen@plt>
  40e830:	mov	x21, x0
  40e834:	ldr	x22, [x20, #8]
  40e838:	sxtw	x24, w0
  40e83c:	ldr	x23, [x22, #176]
  40e840:	ldp	x0, x1, [x23, #24]
  40e844:	sub	x1, x1, x0
  40e848:	cmp	x1, w21, sxtw
  40e84c:	b.cc	40e9d0 <ferror@plt+0xc150>  // b.lo, b.ul, b.last
  40e850:	mov	x2, x24
  40e854:	mov	x1, x19
  40e858:	bl	402220 <memcpy@plt>
  40e85c:	ldr	x0, [x23, #24]
  40e860:	cmp	w21, #0x0
  40e864:	add	x0, x0, x24
  40e868:	str	x0, [x23, #24]
  40e86c:	b.le	40e8a4 <ferror@plt+0xc024>
  40e870:	sub	w0, w21, #0x1
  40e874:	add	x2, x19, #0x1
  40e878:	mov	x1, x19
  40e87c:	add	x0, x0, x2
  40e880:	ldrb	w2, [x1]
  40e884:	cmp	w2, #0xa
  40e888:	b.eq	40e968 <ferror@plt+0xc0e8>  // b.none
  40e88c:	ldr	w2, [x22, #200]
  40e890:	add	x1, x1, #0x1
  40e894:	cmp	x0, x1
  40e898:	add	w2, w2, #0x1
  40e89c:	str	w2, [x22, #200]
  40e8a0:	b.ne	40e880 <ferror@plt+0xc000>  // b.any
  40e8a4:	ldp	x21, x22, [sp, #32]
  40e8a8:	mov	w0, #0x1                   	// #1
  40e8ac:	ldp	x23, x24, [sp, #48]
  40e8b0:	strb	w0, [x20, #64]
  40e8b4:	ldp	x19, x20, [sp, #16]
  40e8b8:	ldp	x29, x30, [sp], #80
  40e8bc:	ret
  40e8c0:	ldrb	w0, [x20, #64]
  40e8c4:	stp	x23, x24, [sp, #48]
  40e8c8:	ldr	w24, [x20, #32]
  40e8cc:	cbz	w0, 40e98c <ferror@plt+0xc10c>
  40e8d0:	cmp	w24, #0x0
  40e8d4:	b.le	40ea10 <ferror@plt+0xc190>
  40e8d8:	mov	w23, #0xa                   	// #10
  40e8dc:	stp	x21, x22, [sp, #32]
  40e8e0:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  40e8e4:	mov	w21, #0x0                   	// #0
  40e8e8:	add	x22, x22, #0x2c0
  40e8ec:	ldr	x1, [x20, #8]
  40e8f0:	str	x25, [sp, #64]
  40e8f4:	mov	w25, #0x20                  	// #32
  40e8f8:	b	40e920 <ferror@plt+0xc0a0>
  40e8fc:	add	x1, x0, #0x1
  40e900:	str	x1, [x19, #24]
  40e904:	strb	w25, [x0]
  40e908:	ldr	x1, [x20, #8]
  40e90c:	ldr	w0, [x1, #200]
  40e910:	add	w0, w0, #0x1
  40e914:	str	w0, [x1, #200]
  40e918:	cmp	w21, w24
  40e91c:	b.eq	40e9e4 <ferror@plt+0xc164>  // b.none
  40e920:	ldr	x19, [x1, #176]
  40e924:	add	w21, w21, #0x1
  40e928:	ldr	w0, [x20, #40]
  40e92c:	cmp	w0, #0x0
  40e930:	ldp	x0, x3, [x19, #24]
  40e934:	b.le	40e94c <ferror@plt+0xc0cc>
  40e938:	ldr	w1, [x1, #200]
  40e93c:	ldr	w2, [x20, #28]
  40e940:	sub	w1, w2, w1
  40e944:	cmp	w1, #0x0
  40e948:	b.le	40e99c <ferror@plt+0xc11c>
  40e94c:	cmp	x3, x0
  40e950:	b.ne	40e8fc <ferror@plt+0xc07c>  // b.any
  40e954:	mov	x0, x19
  40e958:	mov	x1, #0x1                   	// #1
  40e95c:	bl	45c6e0 <_obstack_newchunk@@Base>
  40e960:	ldr	x0, [x19, #24]
  40e964:	b	40e8fc <ferror@plt+0xc07c>
  40e968:	str	wzr, [x22, #200]
  40e96c:	add	x1, x1, #0x1
  40e970:	cmp	x0, x1
  40e974:	b.ne	40e880 <ferror@plt+0xc000>  // b.any
  40e978:	mov	w0, #0x1                   	// #1
  40e97c:	strb	w0, [x20, #64]
  40e980:	ldp	x21, x22, [sp, #32]
  40e984:	ldp	x23, x24, [sp, #48]
  40e988:	b	40e8b4 <ferror@plt+0xc034>
  40e98c:	stp	x21, x22, [sp, #32]
  40e990:	add	w24, w24, #0x3
  40e994:	str	w24, [x20, #32]
  40e998:	b	40e828 <ferror@plt+0xbfa8>
  40e99c:	cmp	x3, x0
  40e9a0:	b.eq	40e9fc <ferror@plt+0xc17c>  // b.none
  40e9a4:	add	x1, x0, #0x1
  40e9a8:	str	x1, [x19, #24]
  40e9ac:	strb	w23, [x0]
  40e9b0:	ldrh	w2, [x22, #64]
  40e9b4:	ldr	x1, [x20, #8]
  40e9b8:	strb	wzr, [x20, #65]
  40e9bc:	str	wzr, [x1, #200]
  40e9c0:	tbnz	w2, #6, 40e918 <ferror@plt+0xc098>
  40e9c4:	ldr	x19, [x1, #176]
  40e9c8:	ldp	x0, x3, [x19, #24]
  40e9cc:	b	40e94c <ferror@plt+0xc0cc>
  40e9d0:	mov	x0, x23
  40e9d4:	mov	x1, x24
  40e9d8:	bl	45c6e0 <_obstack_newchunk@@Base>
  40e9dc:	ldr	x0, [x23, #24]
  40e9e0:	b	40e850 <ferror@plt+0xbfd0>
  40e9e4:	ldp	x19, x20, [sp, #16]
  40e9e8:	ldp	x21, x22, [sp, #32]
  40e9ec:	ldp	x23, x24, [sp, #48]
  40e9f0:	ldr	x25, [sp, #64]
  40e9f4:	ldp	x29, x30, [sp], #80
  40e9f8:	ret
  40e9fc:	mov	x0, x19
  40ea00:	mov	x1, #0x1                   	// #1
  40ea04:	bl	45c6e0 <_obstack_newchunk@@Base>
  40ea08:	ldr	x0, [x19, #24]
  40ea0c:	b	40e9a4 <ferror@plt+0xc124>
  40ea10:	ldp	x23, x24, [sp, #48]
  40ea14:	b	40e8b4 <ferror@plt+0xc034>
  40ea18:	stp	x29, x30, [sp, #-48]!
  40ea1c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40ea20:	add	x2, x2, #0xaa0
  40ea24:	mov	x29, sp
  40ea28:	stp	x19, x20, [sp, #16]
  40ea2c:	mov	x19, x0
  40ea30:	mov	w20, w1
  40ea34:	str	x21, [sp, #32]
  40ea38:	mov	x1, #0x150                 	// #336
  40ea3c:	str	x2, [x19]
  40ea40:	mov	x0, #0x1                   	// #1
  40ea44:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  40ea48:	mov	x21, x0
  40ea4c:	bl	40e008 <ferror@plt+0xb788>
  40ea50:	stp	x21, xzr, [x19, #8]
  40ea54:	mov	w0, #0x10000               	// #65536
  40ea58:	stp	wzr, w20, [x19, #24]
  40ea5c:	str	xzr, [x19, #32]
  40ea60:	str	w20, [x19, #40]
  40ea64:	stp	xzr, xzr, [x19, #48]
  40ea68:	str	w0, [x19, #64]
  40ea6c:	ldp	x19, x20, [sp, #16]
  40ea70:	ldr	x21, [sp, #32]
  40ea74:	ldp	x29, x30, [sp], #48
  40ea78:	ret
  40ea7c:	nop
  40ea80:	stp	x29, x30, [sp, #-64]!
  40ea84:	mov	x29, sp
  40ea88:	stp	x21, x22, [sp, #32]
  40ea8c:	ldr	x21, [x0, #8]
  40ea90:	stp	x19, x20, [sp, #16]
  40ea94:	mov	x19, x1
  40ea98:	mov	x20, x2
  40ea9c:	ldr	w1, [x21, #200]
  40eaa0:	cbz	w1, 40eb54 <ferror@plt+0xc2d4>
  40eaa4:	str	x23, [sp, #48]
  40eaa8:	ldr	x22, [x21, #176]
  40eaac:	sub	x20, x20, x19
  40eab0:	sxtw	x23, w20
  40eab4:	ldp	x0, x1, [x22, #24]
  40eab8:	sub	x1, x1, x0
  40eabc:	cmp	x1, w20, sxtw
  40eac0:	b.cs	40ead4 <ferror@plt+0xc254>  // b.hs, b.nlast
  40eac4:	mov	x0, x22
  40eac8:	mov	x1, x23
  40eacc:	bl	45c6e0 <_obstack_newchunk@@Base>
  40ead0:	ldr	x0, [x22, #24]
  40ead4:	mov	x2, x23
  40ead8:	mov	x1, x19
  40eadc:	bl	402220 <memcpy@plt>
  40eae0:	ldr	x0, [x22, #24]
  40eae4:	cmp	w20, #0x0
  40eae8:	add	x0, x0, x23
  40eaec:	str	x0, [x22, #24]
  40eaf0:	b.le	40eb2c <ferror@plt+0xc2ac>
  40eaf4:	sub	w0, w20, #0x1
  40eaf8:	add	x2, x19, #0x1
  40eafc:	mov	x1, x19
  40eb00:	add	x0, x0, x2
  40eb04:	nop
  40eb08:	ldrb	w2, [x1]
  40eb0c:	cmp	w2, #0xa
  40eb10:	b.eq	40eb40 <ferror@plt+0xc2c0>  // b.none
  40eb14:	ldr	w2, [x21, #200]
  40eb18:	add	x1, x1, #0x1
  40eb1c:	cmp	x0, x1
  40eb20:	add	w2, w2, #0x1
  40eb24:	str	w2, [x21, #200]
  40eb28:	b.ne	40eb08 <ferror@plt+0xc288>  // b.any
  40eb2c:	ldr	x23, [sp, #48]
  40eb30:	ldp	x19, x20, [sp, #16]
  40eb34:	ldp	x21, x22, [sp, #32]
  40eb38:	ldp	x29, x30, [sp], #64
  40eb3c:	ret
  40eb40:	str	wzr, [x21, #200]
  40eb44:	add	x1, x1, #0x1
  40eb48:	cmp	x0, x1
  40eb4c:	b.ne	40eb08 <ferror@plt+0xc288>  // b.any
  40eb50:	b	40eb2c <ferror@plt+0xc2ac>
  40eb54:	mov	x22, x0
  40eb58:	bl	40e7f8 <ferror@plt+0xbf78>
  40eb5c:	ldr	w0, [x22, #40]
  40eb60:	cmp	w0, #0x0
  40eb64:	b.le	40eb8c <ferror@plt+0xc30c>
  40eb68:	cmp	x19, x20
  40eb6c:	b.ne	40eb80 <ferror@plt+0xc300>  // b.any
  40eb70:	b	40eb30 <ferror@plt+0xc2b0>
  40eb74:	add	x19, x19, #0x1
  40eb78:	cmp	x20, x19
  40eb7c:	b.eq	40eb30 <ferror@plt+0xc2b0>  // b.none
  40eb80:	ldrb	w0, [x19]
  40eb84:	cmp	w0, #0x20
  40eb88:	b.eq	40eb74 <ferror@plt+0xc2f4>  // b.none
  40eb8c:	ldr	x21, [x22, #8]
  40eb90:	str	x23, [sp, #48]
  40eb94:	b	40eaa8 <ferror@plt+0xc228>
  40eb98:	stp	x29, x30, [sp, #-80]!
  40eb9c:	mov	x29, sp
  40eba0:	stp	x23, x24, [sp, #48]
  40eba4:	mov	w24, #0xa                   	// #10
  40eba8:	ldr	w23, [x0, #40]
  40ebac:	stp	x19, x20, [sp, #16]
  40ebb0:	mov	x20, x2
  40ebb4:	stp	x21, x22, [sp, #32]
  40ebb8:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  40ebbc:	mov	x22, x1
  40ebc0:	add	x21, x21, #0x2c0
  40ebc4:	stp	x25, x26, [sp, #64]
  40ebc8:	mov	x25, x0
  40ebcc:	cmp	x22, x20
  40ebd0:	b.eq	40ec60 <ferror@plt+0xc3e0>  // b.none
  40ebd4:	mov	x19, x22
  40ebd8:	b	40ebe8 <ferror@plt+0xc368>
  40ebdc:	add	x19, x19, #0x1
  40ebe0:	cmp	x20, x19
  40ebe4:	b.eq	40ecb0 <ferror@plt+0xc430>  // b.none
  40ebe8:	ldrb	w3, [x19]
  40ebec:	cmp	w3, #0xa
  40ebf0:	ldrh	w3, [x21, w3, sxtw #1]
  40ebf4:	and	w3, w3, #0x1
  40ebf8:	csinc	w3, w3, wzr, ne  // ne = any
  40ebfc:	cbz	w3, 40ebdc <ferror@plt+0xc35c>
  40ec00:	cmp	w23, #0x0
  40ec04:	b.le	40ec24 <ferror@plt+0xc3a4>
  40ec08:	ldr	x2, [x25, #8]
  40ec0c:	sub	x0, x19, x22
  40ec10:	ldr	w1, [x25, #28]
  40ec14:	ldr	w3, [x2, #200]
  40ec18:	sub	w1, w1, w3
  40ec1c:	cmp	x0, w1, sxtw
  40ec20:	b.ge	40ed58 <ferror@plt+0xc4d8>  // b.tcont
  40ec24:	mov	x1, x22
  40ec28:	mov	x2, x19
  40ec2c:	mov	x0, x25
  40ec30:	bl	40ea80 <ferror@plt+0xc200>
  40ec34:	mov	x22, x20
  40ec38:	cmp	x20, x19
  40ec3c:	b.eq	40ebcc <ferror@plt+0xc34c>  // b.none
  40ec40:	ldrb	w0, [x19]
  40ec44:	ldrh	w1, [x21, w0, sxtw #1]
  40ec48:	tbnz	w1, #0, 40ecec <ferror@plt+0xc46c>
  40ec4c:	cmp	w0, #0xa
  40ec50:	b.eq	40ec78 <ferror@plt+0xc3f8>  // b.none
  40ec54:	mov	x22, x19
  40ec58:	cmp	x22, x20
  40ec5c:	b.ne	40ebd4 <ferror@plt+0xc354>  // b.any
  40ec60:	ldp	x19, x20, [sp, #16]
  40ec64:	ldp	x21, x22, [sp, #32]
  40ec68:	ldp	x23, x24, [sp, #48]
  40ec6c:	ldp	x25, x26, [sp, #64]
  40ec70:	ldp	x29, x30, [sp], #80
  40ec74:	ret
  40ec78:	ldr	x0, [x25, #8]
  40ec7c:	ldr	x22, [x0, #176]
  40ec80:	ldp	x0, x1, [x22, #24]
  40ec84:	cmp	x1, x0
  40ec88:	b.eq	40ede0 <ferror@plt+0xc560>  // b.none
  40ec8c:	add	x1, x0, #0x1
  40ec90:	str	x1, [x22, #24]
  40ec94:	strb	w24, [x0]
  40ec98:	add	x19, x19, #0x1
  40ec9c:	strb	wzr, [x25, #65]
  40eca0:	mov	x22, x19
  40eca4:	ldr	x0, [x25, #8]
  40eca8:	str	wzr, [x0, #200]
  40ecac:	b	40ec58 <ferror@plt+0xc3d8>
  40ecb0:	cmp	w23, #0x0
  40ecb4:	b.le	40ecd4 <ferror@plt+0xc454>
  40ecb8:	ldr	x2, [x25, #8]
  40ecbc:	sub	x0, x20, x22
  40ecc0:	ldr	w1, [x25, #28]
  40ecc4:	ldr	w3, [x2, #200]
  40ecc8:	sub	w1, w1, w3
  40eccc:	cmp	x0, w1, sxtw
  40ecd0:	b.ge	40ed58 <ferror@plt+0xc4d8>  // b.tcont
  40ecd4:	mov	x1, x22
  40ecd8:	mov	x2, x20
  40ecdc:	mov	x0, x25
  40ece0:	mov	x22, x20
  40ece4:	bl	40ea80 <ferror@plt+0xc200>
  40ece8:	b	40ebcc <ferror@plt+0xc34c>
  40ecec:	ldr	x1, [x25, #8]
  40ecf0:	ldr	w0, [x25, #40]
  40ecf4:	ldr	x22, [x1, #176]
  40ecf8:	cmp	w0, #0x0
  40ecfc:	ldp	x0, x3, [x22, #24]
  40ed00:	b.le	40ed18 <ferror@plt+0xc498>
  40ed04:	ldr	w1, [x1, #200]
  40ed08:	ldr	w2, [x25, #28]
  40ed0c:	sub	w1, w2, w1
  40ed10:	cmp	w1, #0x0
  40ed14:	b.le	40ed98 <ferror@plt+0xc518>
  40ed18:	cmp	x3, x0
  40ed1c:	b.eq	40ed84 <ferror@plt+0xc504>  // b.none
  40ed20:	add	x1, x0, #0x1
  40ed24:	str	x1, [x22, #24]
  40ed28:	mov	w1, #0x20                  	// #32
  40ed2c:	strb	w1, [x0]
  40ed30:	ldr	x1, [x25, #8]
  40ed34:	ldr	w0, [x1, #200]
  40ed38:	add	w0, w0, #0x1
  40ed3c:	str	w0, [x1, #200]
  40ed40:	add	x1, x19, #0x1
  40ed44:	cmp	x20, x1
  40ed48:	b.eq	40ee08 <ferror@plt+0xc588>  // b.none
  40ed4c:	ldrb	w0, [x19, #1]
  40ed50:	mov	x19, x1
  40ed54:	b	40ec4c <ferror@plt+0xc3cc>
  40ed58:	ldr	x26, [x2, #176]
  40ed5c:	ldp	x0, x1, [x26, #24]
  40ed60:	cmp	x1, x0
  40ed64:	b.eq	40edcc <ferror@plt+0xc54c>  // b.none
  40ed68:	add	x1, x0, #0x1
  40ed6c:	str	x1, [x26, #24]
  40ed70:	strb	w24, [x0]
  40ed74:	strb	wzr, [x25, #65]
  40ed78:	ldr	x0, [x25, #8]
  40ed7c:	str	wzr, [x0, #200]
  40ed80:	b	40ec24 <ferror@plt+0xc3a4>
  40ed84:	mov	x0, x22
  40ed88:	mov	x1, #0x1                   	// #1
  40ed8c:	bl	45c6e0 <_obstack_newchunk@@Base>
  40ed90:	ldr	x0, [x22, #24]
  40ed94:	b	40ed20 <ferror@plt+0xc4a0>
  40ed98:	cmp	x3, x0
  40ed9c:	b.eq	40edf4 <ferror@plt+0xc574>  // b.none
  40eda0:	add	x1, x0, #0x1
  40eda4:	str	x1, [x22, #24]
  40eda8:	strb	w24, [x0]
  40edac:	ldrh	w0, [x21, #64]
  40edb0:	ldr	x1, [x25, #8]
  40edb4:	strb	wzr, [x25, #65]
  40edb8:	str	wzr, [x1, #200]
  40edbc:	tbnz	w0, #6, 40ed40 <ferror@plt+0xc4c0>
  40edc0:	ldr	x22, [x1, #176]
  40edc4:	ldp	x0, x3, [x22, #24]
  40edc8:	b	40ed18 <ferror@plt+0xc498>
  40edcc:	mov	x0, x26
  40edd0:	mov	x1, #0x1                   	// #1
  40edd4:	bl	45c6e0 <_obstack_newchunk@@Base>
  40edd8:	ldr	x0, [x26, #24]
  40eddc:	b	40ed68 <ferror@plt+0xc4e8>
  40ede0:	mov	x0, x22
  40ede4:	mov	x1, #0x1                   	// #1
  40ede8:	bl	45c6e0 <_obstack_newchunk@@Base>
  40edec:	ldr	x0, [x22, #24]
  40edf0:	b	40ec8c <ferror@plt+0xc40c>
  40edf4:	mov	x0, x22
  40edf8:	mov	x1, #0x1                   	// #1
  40edfc:	bl	45c6e0 <_obstack_newchunk@@Base>
  40ee00:	ldr	x0, [x22, #24]
  40ee04:	b	40eda0 <ferror@plt+0xc520>
  40ee08:	mov	x19, x20
  40ee0c:	mov	x22, x19
  40ee10:	b	40ec58 <ferror@plt+0xc3d8>
  40ee14:	nop
  40ee18:	stp	x29, x30, [sp, #-80]!
  40ee1c:	cmn	x2, #0x1
  40ee20:	mov	x29, sp
  40ee24:	stp	x19, x20, [sp, #16]
  40ee28:	mov	x20, x0
  40ee2c:	mov	x19, x1
  40ee30:	stp	x21, x22, [sp, #32]
  40ee34:	b.eq	40ef20 <ferror@plt+0xc6a0>  // b.none
  40ee38:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  40ee3c:	add	x21, x19, x2
  40ee40:	add	x22, x22, #0x2c0
  40ee44:	mov	x1, x19
  40ee48:	stp	x23, x24, [sp, #48]
  40ee4c:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40ee50:	add	x23, sp, #0x44
  40ee54:	add	x24, x24, #0x9a0
  40ee58:	ldrb	w2, [x19], #1
  40ee5c:	sub	x3, x19, #0x1
  40ee60:	ldrh	w0, [x22, w2, sxtw #1]
  40ee64:	tbnz	w0, #4, 40ee9c <ferror@plt+0xc61c>
  40ee68:	cmp	x1, x3
  40ee6c:	b.cc	40eee0 <ferror@plt+0xc660>  // b.lo, b.ul, b.last
  40ee70:	mov	x1, x24
  40ee74:	add	x0, sp, #0x40
  40ee78:	bl	402310 <sprintf@plt>
  40ee7c:	ldr	w0, [x20, #40]
  40ee80:	mov	x2, x23
  40ee84:	add	x1, sp, #0x40
  40ee88:	cmp	w0, #0x0
  40ee8c:	b.le	40eed0 <ferror@plt+0xc650>
  40ee90:	mov	x0, x20
  40ee94:	bl	40eb98 <ferror@plt+0xc318>
  40ee98:	mov	x1, x19
  40ee9c:	cmp	x21, x19
  40eea0:	b.ne	40ee58 <ferror@plt+0xc5d8>  // b.any
  40eea4:	ldp	x23, x24, [sp, #48]
  40eea8:	mov	x2, x21
  40eeac:	ldr	w0, [x20, #40]
  40eeb0:	cmp	w0, #0x0
  40eeb4:	mov	x0, x20
  40eeb8:	b.le	40ef0c <ferror@plt+0xc68c>
  40eebc:	bl	40eb98 <ferror@plt+0xc318>
  40eec0:	ldp	x19, x20, [sp, #16]
  40eec4:	ldp	x21, x22, [sp, #32]
  40eec8:	ldp	x29, x30, [sp], #80
  40eecc:	ret
  40eed0:	add	x1, sp, #0x40
  40eed4:	mov	x0, x20
  40eed8:	bl	40ea80 <ferror@plt+0xc200>
  40eedc:	b	40ee98 <ferror@plt+0xc618>
  40eee0:	ldr	w3, [x20, #40]
  40eee4:	mov	x0, x20
  40eee8:	sub	x2, x19, #0x2
  40eeec:	cmp	w3, #0x0
  40eef0:	b.le	40ef00 <ferror@plt+0xc680>
  40eef4:	bl	40eb98 <ferror@plt+0xc318>
  40eef8:	ldurb	w2, [x19, #-1]
  40eefc:	b	40ee70 <ferror@plt+0xc5f0>
  40ef00:	bl	40ea80 <ferror@plt+0xc200>
  40ef04:	ldurb	w2, [x19, #-1]
  40ef08:	b	40ee70 <ferror@plt+0xc5f0>
  40ef0c:	bl	40ea80 <ferror@plt+0xc200>
  40ef10:	ldp	x19, x20, [sp, #16]
  40ef14:	ldp	x21, x22, [sp, #32]
  40ef18:	ldp	x29, x30, [sp], #80
  40ef1c:	ret
  40ef20:	mov	x0, x1
  40ef24:	bl	402270 <strlen@plt>
  40ef28:	mov	x2, x0
  40ef2c:	cbnz	x0, 40ee38 <ferror@plt+0xc5b8>
  40ef30:	mov	x21, x19
  40ef34:	mov	x1, x19
  40ef38:	b	40eea8 <ferror@plt+0xc628>
  40ef3c:	nop
  40ef40:	stp	x29, x30, [sp, #-64]!
  40ef44:	mov	x29, sp
  40ef48:	stp	x23, x24, [sp, #48]
  40ef4c:	ldr	x24, [x0, #8]
  40ef50:	stp	x21, x22, [sp, #32]
  40ef54:	mov	x21, x0
  40ef58:	stp	x19, x20, [sp, #16]
  40ef5c:	ldp	x0, x23, [x24, #176]
  40ef60:	cmp	x0, x24
  40ef64:	b.ne	40f030 <ferror@plt+0xc7b0>  // b.any
  40ef68:	ldr	w0, [x0, #200]
  40ef6c:	cbnz	w0, 40f018 <ferror@plt+0xc798>
  40ef70:	ldr	x19, [x23, #8]
  40ef74:	cbz	x19, 40efb0 <ferror@plt+0xc730>
  40ef78:	add	x22, x23, #0x8
  40ef7c:	mov	w20, #0x0                   	// #0
  40ef80:	mov	x0, x19
  40ef84:	bl	402270 <strlen@plt>
  40ef88:	ldr	w1, [x21, #40]
  40ef8c:	add	x2, x19, x0
  40ef90:	add	w20, w20, #0x1
  40ef94:	mov	x0, x21
  40ef98:	cmp	w1, #0x0
  40ef9c:	mov	x1, x19
  40efa0:	b.le	40f008 <ferror@plt+0xc788>
  40efa4:	bl	40eb98 <ferror@plt+0xc318>
  40efa8:	ldr	x19, [x22, w20, uxtw #3]
  40efac:	cbnz	x19, 40ef80 <ferror@plt+0xc700>
  40efb0:	add	x0, x24, #0x58
  40efb4:	ldr	x1, [x23]
  40efb8:	str	x1, [x24, #184]
  40efbc:	ldr	x1, [x0, #8]
  40efc0:	cmp	x1, x23
  40efc4:	b.cs	40eff0 <ferror@plt+0xc770>  // b.hs, b.nlast
  40efc8:	ldr	x1, [x0, #32]
  40efcc:	cmp	x1, x23
  40efd0:	b.ls	40eff0 <ferror@plt+0xc770>  // b.plast
  40efd4:	dup	v0.2d, x23
  40efd8:	ldp	x19, x20, [sp, #16]
  40efdc:	ldp	x21, x22, [sp, #32]
  40efe0:	stur	q0, [x24, #104]
  40efe4:	ldp	x23, x24, [sp, #48]
  40efe8:	ldp	x29, x30, [sp], #64
  40efec:	ret
  40eff0:	mov	x1, x23
  40eff4:	ldp	x19, x20, [sp, #16]
  40eff8:	ldp	x21, x22, [sp, #32]
  40effc:	ldp	x23, x24, [sp, #48]
  40f000:	ldp	x29, x30, [sp], #64
  40f004:	b	45c878 <_obstack_free@@Base>
  40f008:	bl	40ea80 <ferror@plt+0xc200>
  40f00c:	ldr	x19, [x22, w20, uxtw #3]
  40f010:	cbnz	x19, 40ef80 <ferror@plt+0xc700>
  40f014:	b	40efb0 <ferror@plt+0xc730>
  40f018:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f01c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f020:	add	x2, x2, #0x9a8
  40f024:	add	x0, x0, #0x980
  40f028:	mov	w1, #0x596                 	// #1430
  40f02c:	bl	4028b0 <ferror@plt+0x30>
  40f030:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f034:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f038:	add	x2, x2, #0x9a8
  40f03c:	add	x0, x0, #0x980
  40f040:	mov	w1, #0x595                 	// #1429
  40f044:	bl	4028b0 <ferror@plt+0x30>
  40f048:	stp	x29, x30, [sp, #-32]!
  40f04c:	mov	x29, sp
  40f050:	stp	x19, x20, [sp, #16]
  40f054:	ldr	x20, [x0, #8]
  40f058:	ldr	x19, [x20, #176]
  40f05c:	ldp	x0, x1, [x19, #24]
  40f060:	cmp	x1, x0
  40f064:	b.eq	40f088 <ferror@plt+0xc808>  // b.none
  40f068:	add	x1, x0, #0x1
  40f06c:	str	x1, [x19, #24]
  40f070:	strb	wzr, [x0]
  40f074:	ldr	x0, [x20, #176]
  40f078:	ldp	x19, x20, [sp, #16]
  40f07c:	ldp	x29, x30, [sp], #32
  40f080:	ldr	x0, [x0, #16]
  40f084:	ret
  40f088:	mov	x0, x19
  40f08c:	mov	x1, #0x1                   	// #1
  40f090:	bl	45c6e0 <_obstack_newchunk@@Base>
  40f094:	ldr	x0, [x19, #24]
  40f098:	add	x1, x0, #0x1
  40f09c:	str	x1, [x19, #24]
  40f0a0:	strb	wzr, [x0]
  40f0a4:	ldr	x0, [x20, #176]
  40f0a8:	ldp	x19, x20, [sp, #16]
  40f0ac:	ldp	x29, x30, [sp], #32
  40f0b0:	ldr	x0, [x0, #16]
  40f0b4:	ret
  40f0b8:	ldr	x0, [x0, #8]
  40f0bc:	ldr	x0, [x0, #176]
  40f0c0:	ldp	x1, x0, [x0, #16]
  40f0c4:	cmp	x1, x0
  40f0c8:	sub	x0, x0, #0x1
  40f0cc:	csel	x0, x0, xzr, ne  // ne = any
  40f0d0:	ret
  40f0d4:	nop
  40f0d8:	ldr	x2, [x0, #8]
  40f0dc:	ldr	w1, [x0, #28]
  40f0e0:	ldr	w0, [x2, #200]
  40f0e4:	sub	w0, w1, w0
  40f0e8:	ret
  40f0ec:	nop
  40f0f0:	stp	x29, x30, [sp, #-32]!
  40f0f4:	mov	x29, sp
  40f0f8:	stp	x19, x20, [sp, #16]
  40f0fc:	mov	x19, x0
  40f100:	ldr	x0, [x0, #8]
  40f104:	ldr	x20, [x0, #176]
  40f108:	ldp	x0, x1, [x20, #24]
  40f10c:	cmp	x1, x0
  40f110:	b.eq	40f13c <ferror@plt+0xc8bc>  // b.none
  40f114:	add	x1, x0, #0x1
  40f118:	str	x1, [x20, #24]
  40f11c:	mov	w1, #0xa                   	// #10
  40f120:	strb	w1, [x0]
  40f124:	strb	wzr, [x19, #65]
  40f128:	ldr	x0, [x19, #8]
  40f12c:	ldp	x19, x20, [sp, #16]
  40f130:	str	wzr, [x0, #200]
  40f134:	ldp	x29, x30, [sp], #32
  40f138:	ret
  40f13c:	mov	x0, x20
  40f140:	mov	x1, #0x1                   	// #1
  40f144:	bl	45c6e0 <_obstack_newchunk@@Base>
  40f148:	ldr	x0, [x20, #24]
  40f14c:	b	40f114 <ferror@plt+0xc894>
  40f150:	stp	x29, x30, [sp, #-48]!
  40f154:	mov	x29, sp
  40f158:	str	x21, [sp, #32]
  40f15c:	mov	w21, w1
  40f160:	ldr	x1, [x0, #8]
  40f164:	stp	x19, x20, [sp, #16]
  40f168:	mov	x19, x0
  40f16c:	ldr	w0, [x0, #40]
  40f170:	ldr	x20, [x1, #176]
  40f174:	cmp	w0, #0x0
  40f178:	ldp	x0, x3, [x20, #24]
  40f17c:	b.le	40f194 <ferror@plt+0xc914>
  40f180:	ldr	w1, [x1, #200]
  40f184:	ldr	w2, [x19, #28]
  40f188:	sub	w1, w2, w1
  40f18c:	cmp	w1, #0x0
  40f190:	b.le	40f1c8 <ferror@plt+0xc948>
  40f194:	cmp	x3, x0
  40f198:	b.eq	40f20c <ferror@plt+0xc98c>  // b.none
  40f19c:	add	x1, x0, #0x1
  40f1a0:	str	x1, [x20, #24]
  40f1a4:	strb	w21, [x0]
  40f1a8:	ldr	x1, [x19, #8]
  40f1ac:	ldr	w0, [x1, #200]
  40f1b0:	add	w0, w0, #0x1
  40f1b4:	str	w0, [x1, #200]
  40f1b8:	ldp	x19, x20, [sp, #16]
  40f1bc:	ldr	x21, [sp, #32]
  40f1c0:	ldp	x29, x30, [sp], #48
  40f1c4:	ret
  40f1c8:	cmp	x3, x0
  40f1cc:	b.eq	40f220 <ferror@plt+0xc9a0>  // b.none
  40f1d0:	add	x1, x0, #0x1
  40f1d4:	str	x1, [x20, #24]
  40f1d8:	mov	w1, #0xa                   	// #10
  40f1dc:	strb	w1, [x0]
  40f1e0:	and	x1, x21, #0xff
  40f1e4:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  40f1e8:	add	x0, x0, #0x2c0
  40f1ec:	strb	wzr, [x19, #65]
  40f1f0:	ldr	x2, [x19, #8]
  40f1f4:	ldrh	w0, [x0, x1, lsl #1]
  40f1f8:	str	wzr, [x2, #200]
  40f1fc:	tbnz	w0, #6, 40f1b8 <ferror@plt+0xc938>
  40f200:	ldr	x20, [x2, #176]
  40f204:	ldp	x0, x3, [x20, #24]
  40f208:	b	40f194 <ferror@plt+0xc914>
  40f20c:	mov	x0, x20
  40f210:	mov	x1, #0x1                   	// #1
  40f214:	bl	45c6e0 <_obstack_newchunk@@Base>
  40f218:	ldr	x0, [x20, #24]
  40f21c:	b	40f19c <ferror@plt+0xc91c>
  40f220:	mov	x0, x20
  40f224:	mov	x1, #0x1                   	// #1
  40f228:	bl	45c6e0 <_obstack_newchunk@@Base>
  40f22c:	ldr	x0, [x20, #24]
  40f230:	b	40f1d0 <ferror@plt+0xc950>
  40f234:	nop
  40f238:	sub	sp, sp, #0x1c0
  40f23c:	stp	x29, x30, [sp, #16]
  40f240:	add	x29, sp, #0x10
  40f244:	stp	x19, x20, [sp, #32]
  40f248:	mov	x19, x0
  40f24c:	ldr	x0, [x0, #8]
  40f250:	stp	x25, x26, [sp, #80]
  40f254:	add	x25, x0, #0x58
  40f258:	str	x0, [sp, #144]
  40f25c:	ldr	x20, [x25, #32]
  40f260:	stp	x21, x22, [sp, #48]
  40f264:	ldr	x0, [x25, #24]
  40f268:	stp	x23, x24, [sp, #64]
  40f26c:	stp	x27, x28, [sp, #96]
  40f270:	str	x1, [sp, #120]
  40f274:	sub	x1, x20, x0
  40f278:	cmp	x1, #0x1e7
  40f27c:	b.ls	410448 <ferror@plt+0xdbc8>  // b.plast
  40f280:	ldr	x1, [x25, #16]
  40f284:	add	x0, x0, #0x1e8
  40f288:	cmp	x0, x1
  40f28c:	b.eq	410468 <ferror@plt+0xdbe8>  // b.none
  40f290:	ldr	x24, [x25, #48]
  40f294:	ldr	x2, [x25, #8]
  40f298:	add	x0, x0, x24
  40f29c:	bic	x24, x0, x24
  40f2a0:	str	x24, [x25, #24]
  40f2a4:	sub	x0, x24, x2
  40f2a8:	sub	x2, x20, x2
  40f2ac:	cmp	x0, x2
  40f2b0:	b.ls	4101c0 <ferror@plt+0xd940>  // b.plast
  40f2b4:	ldr	x2, [sp, #144]
  40f2b8:	add	x22, sp, #0xd0
  40f2bc:	add	x27, x1, #0x8
  40f2c0:	ldr	x0, [x2, #184]
  40f2c4:	stp	x20, x20, [x25, #16]
  40f2c8:	str	x0, [x1]
  40f2cc:	mov	x0, x22
  40f2d0:	str	x1, [x2, #184]
  40f2d4:	mov	x2, #0xf0                  	// #240
  40f2d8:	mov	w1, #0x0                   	// #0
  40f2dc:	bl	402440 <memset@plt>
  40f2e0:	ldr	x0, [sp, #120]
  40f2e4:	ldr	x28, [x0]
  40f2e8:	ldrb	w0, [x28]
  40f2ec:	cbz	w0, 4105c0 <ferror@plt+0xdd40>
  40f2f0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f2f4:	add	x1, x1, #0x628
  40f2f8:	adrp	x26, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  40f2fc:	str	wzr, [sp, #172]
  40f300:	str	x1, [sp, #176]
  40f304:	add	x1, x26, #0x2c0
  40f308:	str	x1, [sp, #128]
  40f30c:	cmp	w0, #0x25
  40f310:	str	wzr, [sp, #184]
  40f314:	add	x23, x28, #0x1
  40f318:	mov	w24, #0x0                   	// #0
  40f31c:	mov	w21, #0x0                   	// #0
  40f320:	b.eq	40f35c <ferror@plt+0xcadc>  // b.none
  40f324:	nop
  40f328:	ldp	x0, x1, [x25, #24]
  40f32c:	cmp	x1, x0
  40f330:	b.eq	40f540 <ferror@plt+0xccc0>  // b.none
  40f334:	add	x1, x0, #0x1
  40f338:	str	x1, [x25, #24]
  40f33c:	ldrb	w1, [x28]
  40f340:	strb	w1, [x0]
  40f344:	ldrb	w0, [x28, #1]
  40f348:	cbz	w0, 40f410 <ferror@plt+0xcb90>
  40f34c:	mov	x28, x23
  40f350:	cmp	w0, #0x25
  40f354:	add	x23, x28, #0x1
  40f358:	b.ne	40f328 <ferror@plt+0xcaa8>  // b.any
  40f35c:	ldrb	w0, [x28, #1]
  40f360:	cmp	w0, #0x3e
  40f364:	b.eq	40facc <ferror@plt+0xd24c>  // b.none
  40f368:	b.hi	40f554 <ferror@plt+0xccd4>  // b.pmore
  40f36c:	cmp	w0, #0x27
  40f370:	b.eq	40fb08 <ferror@plt+0xd288>  // b.none
  40f374:	b.ls	40f5a0 <ferror@plt+0xcd20>  // b.plast
  40f378:	cmp	w0, #0x3c
  40f37c:	b.ne	40fc28 <ferror@plt+0xd3a8>  // b.any
  40f380:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40f384:	ldr	x26, [x20, #1224]
  40f388:	mov	x0, x26
  40f38c:	bl	402270 <strlen@plt>
  40f390:	mov	x23, x0
  40f394:	ldp	x0, x2, [x25, #24]
  40f398:	sub	x2, x2, x0
  40f39c:	cmp	x23, x2
  40f3a0:	b.hi	41012c <ferror@plt+0xd8ac>  // b.pmore
  40f3a4:	mov	x1, x26
  40f3a8:	mov	x2, x23
  40f3ac:	bl	402220 <memcpy@plt>
  40f3b0:	ldr	x4, [x25, #24]
  40f3b4:	mov	x2, #0x5                   	// #5
  40f3b8:	ldrb	w0, [x19, #67]
  40f3bc:	ldr	x1, [sp, #176]
  40f3c0:	add	x3, x4, x23
  40f3c4:	str	x3, [x25, #24]
  40f3c8:	bl	407fc8 <ferror@plt+0x5748>
  40f3cc:	mov	x23, x0
  40f3d0:	bl	402270 <strlen@plt>
  40f3d4:	mov	x20, x0
  40f3d8:	ldp	x0, x1, [x25, #24]
  40f3dc:	sub	x1, x1, x0
  40f3e0:	cmp	x20, x1
  40f3e4:	b.hi	40f58c <ferror@plt+0xcd0c>  // b.pmore
  40f3e8:	mov	x1, x23
  40f3ec:	mov	x2, x20
  40f3f0:	bl	402220 <memcpy@plt>
  40f3f4:	add	x23, x28, #0x2
  40f3f8:	ldr	x0, [x25, #24]
  40f3fc:	add	x0, x0, x20
  40f400:	str	x0, [x25, #24]
  40f404:	ldrb	w0, [x23]
  40f408:	cbnz	w0, 40f34c <ferror@plt+0xcacc>
  40f40c:	nop
  40f410:	ldp	x0, x1, [x25, #24]
  40f414:	cmp	x1, x0
  40f418:	b.eq	4105c4 <ferror@plt+0xdd44>  // b.none
  40f41c:	add	x1, x0, #0x1
  40f420:	str	x1, [x25, #24]
  40f424:	strb	wzr, [x0]
  40f428:	cmp	w21, #0x3b
  40f42c:	b.hi	4109dc <ferror@plt+0xe15c>  // b.pmore
  40f430:	add	w3, w21, #0x1
  40f434:	add	x21, x27, w21, uxtw #3
  40f438:	ldr	x20, [sp, #208]
  40f43c:	lsl	x3, x3, #3
  40f440:	ldp	x4, x2, [x25, #16]
  40f444:	cmp	x2, x4
  40f448:	b.eq	41048c <ferror@plt+0xdc0c>  // b.none
  40f44c:	ldr	x0, [x25, #48]
  40f450:	ldr	x1, [x25, #8]
  40f454:	add	x2, x2, x0
  40f458:	ldr	x5, [x25, #32]
  40f45c:	bic	x0, x2, x0
  40f460:	str	x0, [x25, #24]
  40f464:	sub	x2, x0, x1
  40f468:	sub	x1, x5, x1
  40f46c:	cmp	x2, x1
  40f470:	b.ls	40f47c <ferror@plt+0xcbfc>  // b.plast
  40f474:	mov	x0, x5
  40f478:	str	x5, [x25, #24]
  40f47c:	str	x0, [x25, #16]
  40f480:	mov	x0, #0x1                   	// #1
  40f484:	ldr	x1, [sp, #144]
  40f488:	str	x4, [x21]
  40f48c:	str	xzr, [x27, x3]
  40f490:	mov	w21, #0x0                   	// #0
  40f494:	str	x25, [x1, #176]
  40f498:	ldur	x1, [x19, #36]
  40f49c:	stur	x0, [x19, #36]
  40f4a0:	str	x1, [sp, #160]
  40f4a4:	cbz	x20, 40fa64 <ferror@plt+0xd1e4>
  40f4a8:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  40f4ac:	add	x0, x0, #0x2c0
  40f4b0:	str	x0, [sp, #152]
  40f4b4:	nop
  40f4b8:	ldr	x26, [x20]
  40f4bc:	strb	wzr, [sp, #199]
  40f4c0:	mov	w24, #0x0                   	// #0
  40f4c4:	mov	w23, #0x0                   	// #0
  40f4c8:	mov	w28, #0x0                   	// #0
  40f4cc:	mov	w27, #0x0                   	// #0
  40f4d0:	ldrb	w0, [x26]
  40f4d4:	mov	w1, #0x1                   	// #1
  40f4d8:	cmp	w0, #0x6c
  40f4dc:	b.eq	40f50c <ferror@plt+0xcc8c>  // b.none
  40f4e0:	b.hi	40f520 <ferror@plt+0xcca0>  // b.pmore
  40f4e4:	cmp	w0, #0x23
  40f4e8:	b.eq	40f904 <ferror@plt+0xd084>  // b.none
  40f4ec:	cmp	w0, #0x2b
  40f4f0:	b.ne	40f5d0 <ferror@plt+0xcd50>  // b.any
  40f4f4:	cbnz	w23, 410bbc <ferror@plt+0xe33c>
  40f4f8:	add	x26, x26, #0x1
  40f4fc:	mov	w23, #0x1                   	// #1
  40f500:	ldrb	w0, [x26]
  40f504:	cmp	w0, #0x6c
  40f508:	b.ne	40f4e0 <ferror@plt+0xcc60>  // b.any
  40f50c:	cmp	w27, #0x1
  40f510:	b.gt	410b2c <ferror@plt+0xe2ac>
  40f514:	add	w27, w27, #0x1
  40f518:	add	x26, x26, #0x1
  40f51c:	b	40f500 <ferror@plt+0xcc80>
  40f520:	cmp	w0, #0x71
  40f524:	b.eq	40f8f0 <ferror@plt+0xd070>  // b.none
  40f528:	cmp	w0, #0x77
  40f52c:	b.ne	40f5d0 <ferror@plt+0xcd50>  // b.any
  40f530:	cbnz	w28, 410ba4 <ferror@plt+0xe324>
  40f534:	add	x26, x26, #0x1
  40f538:	mov	w28, #0x1                   	// #1
  40f53c:	b	40f500 <ferror@plt+0xcc80>
  40f540:	mov	x0, x25
  40f544:	mov	x1, #0x1                   	// #1
  40f548:	bl	45c6e0 <_obstack_newchunk@@Base>
  40f54c:	ldr	x0, [x25, #24]
  40f550:	b	40f334 <ferror@plt+0xcab4>
  40f554:	cmp	w0, #0x52
  40f558:	b.eq	40fc1c <ferror@plt+0xd39c>  // b.none
  40f55c:	cmp	w0, #0x6d
  40f560:	b.ne	40fc28 <ferror@plt+0xd3a8>  // b.any
  40f564:	ldr	x0, [sp, #120]
  40f568:	ldr	w0, [x0, #16]
  40f56c:	bl	45cb98 <_obstack_memory_used@@Base+0x270>
  40f570:	mov	x23, x0
  40f574:	bl	402270 <strlen@plt>
  40f578:	mov	x20, x0
  40f57c:	ldp	x0, x1, [x25, #24]
  40f580:	sub	x1, x1, x0
  40f584:	cmp	x20, x1
  40f588:	b.ls	40f3e8 <ferror@plt+0xcb68>  // b.plast
  40f58c:	mov	x0, x25
  40f590:	mov	x1, x20
  40f594:	bl	45c6e0 <_obstack_newchunk@@Base>
  40f598:	ldr	x0, [x25, #24]
  40f59c:	b	40f3e8 <ferror@plt+0xcb68>
  40f5a0:	cbz	w0, 410b74 <ferror@plt+0xe2f4>
  40f5a4:	cmp	w0, #0x25
  40f5a8:	b.ne	40fc28 <ferror@plt+0xd3a8>  // b.any
  40f5ac:	ldp	x0, x1, [x25, #24]
  40f5b0:	cmp	x1, x0
  40f5b4:	b.eq	410478 <ferror@plt+0xdbf8>  // b.none
  40f5b8:	add	x1, x0, #0x1
  40f5bc:	str	x1, [x25, #24]
  40f5c0:	add	x23, x28, #0x2
  40f5c4:	mov	w1, #0x25                  	// #37
  40f5c8:	strb	w1, [x0]
  40f5cc:	b	40f404 <ferror@plt+0xcb84>
  40f5d0:	cmp	w27, #0x0
  40f5d4:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  40f5d8:	b.ne	410a3c <ferror@plt+0xe1bc>  // b.any
  40f5dc:	ldrb	w1, [sp, #199]
  40f5e0:	cbnz	w1, 40fb4c <ferror@plt+0xd2cc>
  40f5e4:	cmp	w0, #0x6f
  40f5e8:	b.eq	40fbc8 <ferror@plt+0xd348>  // b.none
  40f5ec:	b.hi	40f914 <ferror@plt+0xd094>  // b.pmore
  40f5f0:	cmp	w0, #0x63
  40f5f4:	b.eq	40ffcc <ferror@plt+0xd74c>  // b.none
  40f5f8:	b.ls	40f788 <ferror@plt+0xcf08>  // b.plast
  40f5fc:	cmp	w0, #0x66
  40f600:	b.eq	40feb4 <ferror@plt+0xd634>  // b.none
  40f604:	cmp	w0, #0x69
  40f608:	b.ne	40f730 <ferror@plt+0xceb0>  // b.any
  40f60c:	cbnz	w28, 410368 <ferror@plt+0xdae8>
  40f610:	cmp	w27, #0x1
  40f614:	b.eq	410788 <ferror@plt+0xdf08>  // b.none
  40f618:	cmp	w27, #0x2
  40f61c:	b.eq	41074c <ferror@plt+0xdecc>  // b.none
  40f620:	cbnz	w27, 40f9fc <ferror@plt+0xd17c>
  40f624:	ldr	x0, [sp, #120]
  40f628:	ldr	x2, [x0, #8]
  40f62c:	ldr	x0, [x19, #8]
  40f630:	ldr	w3, [x2, #24]
  40f634:	add	x0, x0, #0xcc
  40f638:	ldr	x1, [x2]
  40f63c:	tbnz	w3, #31, 410888 <ferror@plt+0xe008>
  40f640:	add	x3, x1, #0xb
  40f644:	and	x3, x3, #0xfffffffffffffff8
  40f648:	str	x3, [x2]
  40f64c:	ldr	w2, [x1]
  40f650:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f654:	add	x1, x1, #0x9e0
  40f658:	bl	402310 <sprintf@plt>
  40f65c:	ldr	x24, [x19, #8]
  40f660:	add	x24, x24, #0xcc
  40f664:	mov	x0, x24
  40f668:	bl	402270 <strlen@plt>
  40f66c:	add	x2, x24, x0
  40f670:	ldr	w1, [x19, #40]
  40f674:	mov	x0, x19
  40f678:	cmp	w1, #0x0
  40f67c:	mov	x1, x24
  40f680:	b.gt	40f9f8 <ferror@plt+0xd178>
  40f684:	bl	40ea80 <ferror@plt+0xc200>
  40f688:	ldrb	w0, [sp, #199]
  40f68c:	cbz	w0, 40fa04 <ferror@plt+0xd184>
  40f690:	ldrb	w0, [x19, #67]
  40f694:	bl	408058 <ferror@plt+0x57d8>
  40f698:	mov	x24, x0
  40f69c:	bl	402270 <strlen@plt>
  40f6a0:	add	x2, x24, x0
  40f6a4:	ldr	w1, [x19, #40]
  40f6a8:	mov	x0, x19
  40f6ac:	cmp	w1, #0x0
  40f6b0:	mov	x1, x24
  40f6b4:	b.le	40fe08 <ferror@plt+0xd588>
  40f6b8:	bl	40eb98 <ferror@plt+0xc318>
  40f6bc:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40f6c0:	ldr	x24, [x0, #1232]
  40f6c4:	mov	x0, x24
  40f6c8:	bl	402270 <strlen@plt>
  40f6cc:	ldr	w1, [x19, #40]
  40f6d0:	add	x2, x24, x0
  40f6d4:	mov	x0, x19
  40f6d8:	cmp	w1, #0x0
  40f6dc:	mov	x1, x24
  40f6e0:	b.le	40fe00 <ferror@plt+0xd580>
  40f6e4:	bl	40eb98 <ferror@plt+0xc318>
  40f6e8:	ldp	x0, x1, [x25, #24]
  40f6ec:	cmp	x1, x0
  40f6f0:	b.ne	40fa10 <ferror@plt+0xd190>  // b.any
  40f6f4:	nop
  40f6f8:	mov	x0, x25
  40f6fc:	mov	x1, #0x1                   	// #1
  40f700:	bl	45c6e0 <_obstack_newchunk@@Base>
  40f704:	ldr	x0, [x25, #24]
  40f708:	add	x1, x0, #0x1
  40f70c:	str	x1, [x25, #24]
  40f710:	strb	wzr, [x0]
  40f714:	ldp	x3, x2, [x25, #16]
  40f718:	cmp	x2, x3
  40f71c:	b.ne	40fa28 <ferror@plt+0xd1a8>  // b.any
  40f720:	ldrb	w0, [x25, #80]
  40f724:	orr	w0, w0, #0x2
  40f728:	strb	w0, [x25, #80]
  40f72c:	b	40fa28 <ferror@plt+0xd1a8>
  40f730:	cmp	w0, #0x64
  40f734:	b.eq	40f60c <ferror@plt+0xcd8c>  // b.none
  40f738:	ldr	x9, [x19, #48]
  40f73c:	cbz	x9, 4109c4 <ferror@plt+0xe144>
  40f740:	ldr	x1, [sp, #120]
  40f744:	str	x20, [sp]
  40f748:	mov	w6, w24
  40f74c:	mov	w5, w23
  40f750:	mov	w4, w28
  40f754:	mov	w3, w27
  40f758:	mov	x2, x26
  40f75c:	add	x7, sp, #0xc7
  40f760:	mov	x0, x19
  40f764:	blr	x9
  40f768:	tst	w0, #0xff
  40f76c:	b.ne	40f9fc <ferror@plt+0xd17c>  // b.any
  40f770:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f774:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f778:	add	x2, x2, #0x9c8
  40f77c:	add	x0, x0, #0x980
  40f780:	mov	w1, #0x571                 	// #1393
  40f784:	bl	4028b0 <ferror@plt+0x30>
  40f788:	cmp	w0, #0x2e
  40f78c:	b.eq	40fe24 <ferror@plt+0xd5a4>  // b.none
  40f790:	cmp	w0, #0x5a
  40f794:	b.ne	40f738 <ferror@plt+0xceb8>  // b.any
  40f798:	ldr	x0, [sp, #120]
  40f79c:	ldr	x1, [x0, #8]
  40f7a0:	ldr	w2, [x1, #24]
  40f7a4:	ldr	x3, [x1]
  40f7a8:	tbnz	w2, #31, 410290 <ferror@plt+0xda10>
  40f7ac:	add	x0, x3, #0xf
  40f7b0:	and	x0, x0, #0xfffffffffffffff8
  40f7b4:	str	x0, [x1]
  40f7b8:	ldr	x2, [x3]
  40f7bc:	str	x2, [sp, #128]
  40f7c0:	add	x2, x0, #0xb
  40f7c4:	and	x2, x2, #0xfffffffffffffff8
  40f7c8:	str	x2, [x1]
  40f7cc:	ldr	w26, [x0]
  40f7d0:	cbz	w26, 40f9fc <ferror@plt+0xd17c>
  40f7d4:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f7d8:	sub	w28, w26, #0x1
  40f7dc:	add	x24, x24, #0xa30
  40f7e0:	mov	x23, #0x0                   	// #0
  40f7e4:	b	40f800 <ferror@plt+0xcf80>
  40f7e8:	bl	40eb98 <ferror@plt+0xc318>
  40f7ec:	cmp	w28, w23
  40f7f0:	b.hi	40f84c <ferror@plt+0xcfcc>  // b.pmore
  40f7f4:	add	x23, x23, #0x1
  40f7f8:	cmp	w26, w23
  40f7fc:	b.ls	40f9fc <ferror@plt+0xd17c>  // b.plast
  40f800:	ldr	x0, [sp, #128]
  40f804:	mov	x1, x24
  40f808:	ldr	w2, [x0, x23, lsl #2]
  40f80c:	ldr	x0, [x19, #8]
  40f810:	add	x0, x0, #0xcc
  40f814:	bl	402310 <sprintf@plt>
  40f818:	ldr	x1, [x19, #8]
  40f81c:	add	x27, x1, #0xcc
  40f820:	mov	x0, x27
  40f824:	bl	402270 <strlen@plt>
  40f828:	ldr	w4, [x19, #40]
  40f82c:	add	x2, x27, x0
  40f830:	mov	x1, x27
  40f834:	mov	x0, x19
  40f838:	cmp	w4, #0x0
  40f83c:	b.gt	40f7e8 <ferror@plt+0xcf68>
  40f840:	bl	40ea80 <ferror@plt+0xc200>
  40f844:	cmp	w28, w23
  40f848:	b.ls	40f7f4 <ferror@plt+0xcf74>  // b.plast
  40f84c:	ldr	x2, [x19, #8]
  40f850:	ldr	w1, [x19, #40]
  40f854:	ldr	x0, [x2, #176]
  40f858:	cmp	w1, #0x0
  40f85c:	ldp	x1, x5, [x0, #24]
  40f860:	b.le	40f878 <ferror@plt+0xcff8>
  40f864:	ldr	w2, [x2, #200]
  40f868:	ldr	w4, [x19, #28]
  40f86c:	sub	w2, w4, w2
  40f870:	cmp	w2, #0x0
  40f874:	b.le	4105d8 <ferror@plt+0xdd58>
  40f878:	cmp	x5, x1
  40f87c:	b.eq	410544 <ferror@plt+0xdcc4>  // b.none
  40f880:	add	x2, x1, #0x1
  40f884:	str	x2, [x0, #24]
  40f888:	mov	w0, #0x2c                  	// #44
  40f88c:	strb	w0, [x1]
  40f890:	ldr	x0, [x19, #8]
  40f894:	ldr	w2, [x0, #200]
  40f898:	add	w2, w2, #0x1
  40f89c:	str	w2, [x0, #200]
  40f8a0:	ldr	x0, [x0, #176]
  40f8a4:	ldr	w1, [x19, #40]
  40f8a8:	cmp	w1, #0x0
  40f8ac:	ldp	x1, x5, [x0, #24]
  40f8b0:	b.le	40f8c4 <ferror@plt+0xd044>
  40f8b4:	ldr	w4, [x19, #28]
  40f8b8:	sub	w2, w4, w2
  40f8bc:	cmp	w2, #0x0
  40f8c0:	b.le	410584 <ferror@plt+0xdd04>
  40f8c4:	cmp	x5, x1
  40f8c8:	b.eq	41052c <ferror@plt+0xdcac>  // b.none
  40f8cc:	add	x2, x1, #0x1
  40f8d0:	str	x2, [x0, #24]
  40f8d4:	mov	w0, #0x20                  	// #32
  40f8d8:	strb	w0, [x1]
  40f8dc:	ldr	x1, [x19, #8]
  40f8e0:	ldr	w0, [x1, #200]
  40f8e4:	add	w0, w0, #0x1
  40f8e8:	str	w0, [x1, #200]
  40f8ec:	b	40f7f4 <ferror@plt+0xcf74>
  40f8f0:	ldrb	w0, [sp, #199]
  40f8f4:	cbnz	w0, 410b14 <ferror@plt+0xe294>
  40f8f8:	add	x26, x26, #0x1
  40f8fc:	strb	w1, [sp, #199]
  40f900:	b	40f500 <ferror@plt+0xcc80>
  40f904:	cbnz	w24, 410a9c <ferror@plt+0xe21c>
  40f908:	add	x26, x26, #0x1
  40f90c:	mov	w24, #0x1                   	// #1
  40f910:	b	40f500 <ferror@plt+0xcc80>
  40f914:	cmp	w0, #0x73
  40f918:	b.eq	40ff00 <ferror@plt+0xd680>  // b.none
  40f91c:	b.ls	40f984 <ferror@plt+0xd104>  // b.plast
  40f920:	cmp	w0, #0x75
  40f924:	b.eq	40ff3c <ferror@plt+0xd6bc>  // b.none
  40f928:	cmp	w0, #0x78
  40f92c:	b.ne	40f738 <ferror@plt+0xceb8>  // b.any
  40f930:	cbnz	w28, 41040c <ferror@plt+0xdb8c>
  40f934:	cmp	w27, #0x1
  40f938:	b.eq	4107c4 <ferror@plt+0xdf44>  // b.none
  40f93c:	cmp	w27, #0x2
  40f940:	b.eq	410710 <ferror@plt+0xde90>  // b.none
  40f944:	cbnz	w27, 40f9fc <ferror@plt+0xd17c>
  40f948:	ldr	x0, [sp, #120]
  40f94c:	ldr	x2, [x0, #8]
  40f950:	ldr	x0, [x19, #8]
  40f954:	ldr	w3, [x2, #24]
  40f958:	add	x0, x0, #0xcc
  40f95c:	ldr	x1, [x2]
  40f960:	tbnz	w3, #31, 4108c0 <ferror@plt+0xe040>
  40f964:	add	x3, x1, #0xb
  40f968:	and	x3, x3, #0xfffffffffffffff8
  40f96c:	str	x3, [x2]
  40f970:	ldr	w2, [x1]
  40f974:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40f978:	add	x1, x1, #0xa40
  40f97c:	bl	402310 <sprintf@plt>
  40f980:	b	40fef0 <ferror@plt+0xd670>
  40f984:	cmp	w0, #0x70
  40f988:	b.eq	40ff90 <ferror@plt+0xd710>  // b.none
  40f98c:	cmp	w0, #0x72
  40f990:	b.ne	40f738 <ferror@plt+0xceb8>  // b.any
  40f994:	ldr	x0, [sp, #120]
  40f998:	ldrb	w26, [x19, #67]
  40f99c:	ldr	x0, [x0, #8]
  40f9a0:	ldr	w2, [x0, #24]
  40f9a4:	ldr	x1, [x0]
  40f9a8:	tbnz	w2, #31, 410274 <ferror@plt+0xd9f4>
  40f9ac:	add	x2, x1, #0xf
  40f9b0:	and	x2, x2, #0xfffffffffffffff8
  40f9b4:	str	x2, [x0]
  40f9b8:	ldr	x24, [x1]
  40f9bc:	mov	x0, x24
  40f9c0:	bl	402270 <strlen@plt>
  40f9c4:	mov	x1, x24
  40f9c8:	mov	x2, x0
  40f9cc:	mov	w0, w26
  40f9d0:	bl	407fc8 <ferror@plt+0x5748>
  40f9d4:	mov	x24, x0
  40f9d8:	bl	402270 <strlen@plt>
  40f9dc:	add	x2, x24, x0
  40f9e0:	ldr	w1, [x19, #40]
  40f9e4:	mov	x0, x19
  40f9e8:	cmp	w1, #0x0
  40f9ec:	mov	x1, x24
  40f9f0:	b.le	40f684 <ferror@plt+0xce04>
  40f9f4:	nop
  40f9f8:	bl	40eb98 <ferror@plt+0xc318>
  40f9fc:	ldrb	w0, [sp, #199]
  40fa00:	cbnz	w0, 40f690 <ferror@plt+0xce10>
  40fa04:	ldp	x0, x1, [x25, #24]
  40fa08:	cmp	x1, x0
  40fa0c:	b.eq	40f6f8 <ferror@plt+0xce78>  // b.none
  40fa10:	add	x1, x0, #0x1
  40fa14:	str	x1, [x25, #24]
  40fa18:	strb	wzr, [x0]
  40fa1c:	ldp	x3, x2, [x25, #16]
  40fa20:	cmp	x2, x3
  40fa24:	b.eq	40f720 <ferror@plt+0xcea0>  // b.none
  40fa28:	ldr	x0, [x25, #48]
  40fa2c:	add	w21, w21, #0x1
  40fa30:	ldr	x1, [x25, #8]
  40fa34:	add	x2, x2, x0
  40fa38:	ldr	x4, [x25, #32]
  40fa3c:	bic	x0, x2, x0
  40fa40:	str	x0, [x25, #24]
  40fa44:	sub	x2, x0, x1
  40fa48:	sub	x1, x4, x1
  40fa4c:	cmp	x2, x1
  40fa50:	b.ls	40fab8 <ferror@plt+0xd238>  // b.plast
  40fa54:	stp	x4, x4, [x25, #16]
  40fa58:	str	x3, [x20]
  40fa5c:	ldr	x20, [x22, w21, uxtw #3]
  40fa60:	cbnz	x20, 40f4b8 <ferror@plt+0xcc38>
  40fa64:	ldr	x0, [x19, #56]
  40fa68:	cbz	x0, 40fa7c <ferror@plt+0xd1fc>
  40fa6c:	ldr	x2, [x0]
  40fa70:	mov	x1, x19
  40fa74:	ldr	x2, [x2, #16]
  40fa78:	blr	x2
  40fa7c:	ldr	x0, [sp, #144]
  40fa80:	ldp	x29, x30, [sp, #16]
  40fa84:	ldp	x21, x22, [sp, #48]
  40fa88:	ldp	x23, x24, [sp, #64]
  40fa8c:	ldp	x25, x26, [sp, #80]
  40fa90:	ldp	x27, x28, [sp, #96]
  40fa94:	str	x0, [x0, #176]
  40fa98:	str	wzr, [x0, #200]
  40fa9c:	ldr	x0, [sp, #160]
  40faa0:	str	wzr, [x19, #32]
  40faa4:	stur	x0, [x19, #36]
  40faa8:	strb	wzr, [x19, #64]
  40faac:	ldp	x19, x20, [sp, #32]
  40fab0:	add	sp, sp, #0x1c0
  40fab4:	ret
  40fab8:	str	x0, [x25, #16]
  40fabc:	str	x3, [x20]
  40fac0:	ldr	x20, [x22, w21, uxtw #3]
  40fac4:	cbnz	x20, 40f4b8 <ferror@plt+0xcc38>
  40fac8:	b	40fa64 <ferror@plt+0xd1e4>
  40facc:	ldrb	w0, [x19, #67]
  40fad0:	bl	408058 <ferror@plt+0x57d8>
  40fad4:	mov	x23, x0
  40fad8:	bl	402270 <strlen@plt>
  40fadc:	mov	x20, x0
  40fae0:	ldp	x0, x1, [x25, #24]
  40fae4:	sub	x1, x1, x0
  40fae8:	cmp	x20, x1
  40faec:	b.hi	41018c <ferror@plt+0xd90c>  // b.pmore
  40faf0:	mov	x1, x23
  40faf4:	mov	x2, x20
  40faf8:	bl	402220 <memcpy@plt>
  40fafc:	ldr	x0, [x25, #24]
  40fb00:	add	x0, x0, x20
  40fb04:	str	x0, [x25, #24]
  40fb08:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40fb0c:	ldr	x23, [x20, #1232]
  40fb10:	mov	x0, x23
  40fb14:	bl	402270 <strlen@plt>
  40fb18:	mov	x26, x0
  40fb1c:	ldp	x0, x3, [x25, #24]
  40fb20:	sub	x3, x3, x0
  40fb24:	cmp	x26, x3
  40fb28:	b.hi	40fde8 <ferror@plt+0xd568>  // b.pmore
  40fb2c:	mov	x1, x23
  40fb30:	mov	x2, x26
  40fb34:	bl	402220 <memcpy@plt>
  40fb38:	add	x23, x28, #0x2
  40fb3c:	ldr	x0, [x25, #24]
  40fb40:	add	x0, x0, x26
  40fb44:	str	x0, [x25, #24]
  40fb48:	b	40f404 <ferror@plt+0xcb84>
  40fb4c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  40fb50:	ldrb	w1, [x19, #67]
  40fb54:	str	w1, [sp, #128]
  40fb58:	ldr	x1, [x0, #1224]
  40fb5c:	str	x1, [sp, #136]
  40fb60:	mov	x0, x1
  40fb64:	bl	402270 <strlen@plt>
  40fb68:	ldr	x1, [sp, #136]
  40fb6c:	ldr	w3, [x19, #40]
  40fb70:	add	x2, x1, x0
  40fb74:	mov	x0, x19
  40fb78:	cmp	w3, #0x0
  40fb7c:	b.le	40fe1c <ferror@plt+0xd59c>
  40fb80:	bl	40eb98 <ferror@plt+0xc318>
  40fb84:	ldrb	w0, [sp, #128]
  40fb88:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40fb8c:	add	x1, x1, #0x628
  40fb90:	mov	x2, #0x5                   	// #5
  40fb94:	bl	407fc8 <ferror@plt+0x5748>
  40fb98:	str	x0, [sp, #128]
  40fb9c:	bl	402270 <strlen@plt>
  40fba0:	ldr	x1, [sp, #128]
  40fba4:	ldr	w3, [x19, #40]
  40fba8:	add	x2, x1, x0
  40fbac:	mov	x0, x19
  40fbb0:	cmp	w3, #0x0
  40fbb4:	b.le	40fe10 <ferror@plt+0xd590>
  40fbb8:	bl	40eb98 <ferror@plt+0xc318>
  40fbbc:	ldrb	w0, [x26]
  40fbc0:	cmp	w0, #0x6f
  40fbc4:	b.ne	40f5ec <ferror@plt+0xcd6c>  // b.any
  40fbc8:	cbnz	w28, 4102f0 <ferror@plt+0xda70>
  40fbcc:	cmp	w27, #0x1
  40fbd0:	b.eq	4102f0 <ferror@plt+0xda70>  // b.none
  40fbd4:	cmp	w27, #0x2
  40fbd8:	b.eq	4106d4 <ferror@plt+0xde54>  // b.none
  40fbdc:	cbnz	w27, 40f9fc <ferror@plt+0xd17c>
  40fbe0:	ldr	x0, [sp, #120]
  40fbe4:	ldr	x2, [x0, #8]
  40fbe8:	ldr	x0, [x19, #8]
  40fbec:	ldr	w3, [x2, #24]
  40fbf0:	add	x0, x0, #0xcc
  40fbf4:	ldr	x1, [x2]
  40fbf8:	tbnz	w3, #31, 4108a4 <ferror@plt+0xe024>
  40fbfc:	add	x3, x1, #0xb
  40fc00:	and	x3, x3, #0xfffffffffffffff8
  40fc04:	str	x3, [x2]
  40fc08:	ldr	w2, [x1]
  40fc0c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40fc10:	add	x1, x1, #0x9f8
  40fc14:	bl	402310 <sprintf@plt>
  40fc18:	b	40fef0 <ferror@plt+0xd670>
  40fc1c:	ldrb	w0, [x19, #67]
  40fc20:	bl	408058 <ferror@plt+0x57d8>
  40fc24:	b	40f3cc <ferror@plt+0xcb4c>
  40fc28:	ldp	x0, x1, [x25, #24]
  40fc2c:	cmp	x1, x0
  40fc30:	b.eq	41049c <ferror@plt+0xdc1c>  // b.none
  40fc34:	add	x1, x0, #0x1
  40fc38:	str	x1, [x25, #24]
  40fc3c:	strb	wzr, [x0]
  40fc40:	cmp	w21, #0x3b
  40fc44:	b.hi	4109f4 <ferror@plt+0xe174>  // b.pmore
  40fc48:	ldp	x4, x2, [x25, #16]
  40fc4c:	add	w0, w21, #0x1
  40fc50:	str	w0, [sp, #160]
  40fc54:	add	x6, x27, w21, uxtw #3
  40fc58:	cmp	x2, x4
  40fc5c:	b.eq	4101a0 <ferror@plt+0xd920>  // b.none
  40fc60:	ldr	x0, [x25, #48]
  40fc64:	ldr	x1, [x25, #8]
  40fc68:	add	x2, x2, x0
  40fc6c:	ldr	x5, [x25, #32]
  40fc70:	bic	x0, x2, x0
  40fc74:	str	x0, [x25, #24]
  40fc78:	sub	x2, x0, x1
  40fc7c:	sub	x1, x5, x1
  40fc80:	cmp	x2, x1
  40fc84:	b.ls	40fc90 <ferror@plt+0xd410>  // b.plast
  40fc88:	mov	x0, x5
  40fc8c:	str	x5, [x25, #24]
  40fc90:	str	x0, [x25, #16]
  40fc94:	str	x4, [x6]
  40fc98:	ldr	x1, [sp, #128]
  40fc9c:	ldrb	w0, [x28, #1]
  40fca0:	ldrh	w0, [x1, x0, lsl #1]
  40fca4:	tbnz	w0, #2, 410144 <ferror@plt+0xd8c4>
  40fca8:	add	w0, w24, #0x1
  40fcac:	str	w0, [sp, #152]
  40fcb0:	ldr	w0, [sp, #172]
  40fcb4:	cbnz	w0, 410a24 <ferror@plt+0xe1a4>
  40fcb8:	add	w0, w24, #0x1
  40fcbc:	str	w0, [sp, #188]
  40fcc0:	mov	w0, #0x1                   	// #1
  40fcc4:	str	w0, [sp, #184]
  40fcc8:	cmp	w24, #0x1d
  40fccc:	b.hi	410a0c <ferror@plt+0xe18c>  // b.pmore
  40fcd0:	mov	w0, w24
  40fcd4:	ldr	x1, [x22, x0, lsl #3]
  40fcd8:	cbnz	x1, 410bec <ferror@plt+0xe36c>
  40fcdc:	ldr	x1, [sp, #160]
  40fce0:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40fce4:	add	x20, x20, #0x9d8
  40fce8:	add	x1, x27, w1, uxtw #3
  40fcec:	str	x1, [x22, x0, lsl #3]
  40fcf0:	str	x1, [sp, #136]
  40fcf4:	b	40fd24 <ferror@plt+0xd4a4>
  40fcf8:	add	x0, x1, #0x1
  40fcfc:	str	x0, [x25, #24]
  40fd00:	mov	x26, x23
  40fd04:	mov	x0, x20
  40fd08:	ldrb	w4, [x23]
  40fd0c:	strb	w4, [x1]
  40fd10:	ldrb	w28, [x26], #1
  40fd14:	mov	w1, w28
  40fd18:	bl	402670 <strchr@plt>
  40fd1c:	cbz	x0, 40fd68 <ferror@plt+0xd4e8>
  40fd20:	mov	x23, x26
  40fd24:	ldp	x1, x0, [x25, #24]
  40fd28:	cmp	x0, x1
  40fd2c:	b.ne	40fcf8 <ferror@plt+0xd478>  // b.any
  40fd30:	mov	x0, x25
  40fd34:	mov	x1, #0x1                   	// #1
  40fd38:	bl	45c6e0 <_obstack_newchunk@@Base>
  40fd3c:	mov	x26, x23
  40fd40:	ldr	x1, [x25, #24]
  40fd44:	mov	x0, x20
  40fd48:	add	x4, x1, #0x1
  40fd4c:	str	x4, [x25, #24]
  40fd50:	ldrb	w4, [x23]
  40fd54:	strb	w4, [x1]
  40fd58:	ldrb	w28, [x26], #1
  40fd5c:	mov	w1, w28
  40fd60:	bl	402670 <strchr@plt>
  40fd64:	cbnz	x0, 40fd20 <ferror@plt+0xd4a0>
  40fd68:	cmp	w28, #0x2e
  40fd6c:	b.eq	410018 <ferror@plt+0xd798>  // b.none
  40fd70:	ldrb	w3, [x26]
  40fd74:	ldp	x0, x1, [x25, #24]
  40fd78:	cbz	w3, 410864 <ferror@plt+0xdfe4>
  40fd7c:	cmp	x1, x0
  40fd80:	b.eq	4104b0 <ferror@plt+0xdc30>  // b.none
  40fd84:	add	x1, x0, #0x1
  40fd88:	str	x1, [x25, #24]
  40fd8c:	strb	wzr, [x0]
  40fd90:	add	w21, w21, #0x2
  40fd94:	ldp	x4, x3, [x25, #16]
  40fd98:	cmp	x3, x4
  40fd9c:	b.eq	4101b0 <ferror@plt+0xd930>  // b.none
  40fda0:	ldr	x0, [x25, #48]
  40fda4:	ldr	x1, [x25, #8]
  40fda8:	add	x3, x3, x0
  40fdac:	ldr	x5, [x25, #32]
  40fdb0:	bic	x0, x3, x0
  40fdb4:	str	x0, [x25, #24]
  40fdb8:	sub	x3, x0, x1
  40fdbc:	sub	x1, x5, x1
  40fdc0:	cmp	x3, x1
  40fdc4:	b.ls	40fdd0 <ferror@plt+0xd550>  // b.plast
  40fdc8:	mov	x0, x5
  40fdcc:	str	x5, [x25, #24]
  40fdd0:	str	x0, [x25, #16]
  40fdd4:	mov	x23, x26
  40fdd8:	ldr	x0, [sp, #136]
  40fddc:	ldr	w24, [sp, #152]
  40fde0:	str	x4, [x0]
  40fde4:	b	40f404 <ferror@plt+0xcb84>
  40fde8:	mov	x0, x25
  40fdec:	mov	x1, x26
  40fdf0:	bl	45c6e0 <_obstack_newchunk@@Base>
  40fdf4:	ldr	x23, [x20, #1232]
  40fdf8:	ldr	x0, [x25, #24]
  40fdfc:	b	40fb2c <ferror@plt+0xd2ac>
  40fe00:	bl	40ea80 <ferror@plt+0xc200>
  40fe04:	b	40fa04 <ferror@plt+0xd184>
  40fe08:	bl	40ea80 <ferror@plt+0xc200>
  40fe0c:	b	40f6bc <ferror@plt+0xce3c>
  40fe10:	bl	40ea80 <ferror@plt+0xc200>
  40fe14:	ldrb	w0, [x26]
  40fe18:	b	40f5e4 <ferror@plt+0xcd64>
  40fe1c:	bl	40ea80 <ferror@plt+0xc200>
  40fe20:	b	40fb84 <ferror@plt+0xd304>
  40fe24:	ldrb	w0, [x26, #1]
  40fe28:	ldr	x1, [sp, #152]
  40fe2c:	ldrh	w1, [x1, w0, sxtw #1]
  40fe30:	tbnz	w1, #2, 4103a4 <ferror@plt+0xdb24>
  40fe34:	cmp	w0, #0x2a
  40fe38:	b.ne	410b44 <ferror@plt+0xe2c4>  // b.any
  40fe3c:	ldrb	w0, [x26, #2]
  40fe40:	cmp	w0, #0x73
  40fe44:	b.ne	410b5c <ferror@plt+0xe2dc>  // b.any
  40fe48:	ldr	x0, [sp, #120]
  40fe4c:	add	w21, w21, #0x1
  40fe50:	ldr	x2, [x0, #8]
  40fe54:	ldr	x4, [x22, w21, uxtw #3]
  40fe58:	ldr	w0, [x2, #24]
  40fe5c:	ldr	x3, [x2]
  40fe60:	tbnz	w0, #31, 41055c <ferror@plt+0xdcdc>
  40fe64:	add	x0, x3, #0xb
  40fe68:	ldr	w1, [x3]
  40fe6c:	and	x0, x0, #0xfffffffffffffff8
  40fe70:	str	x0, [x2]
  40fe74:	cmp	x20, x4
  40fe78:	b.ne	410acc <ferror@plt+0xe24c>  // b.any
  40fe7c:	add	x3, x0, #0xf
  40fe80:	mov	x20, x4
  40fe84:	and	x3, x3, #0xfffffffffffffff8
  40fe88:	str	x3, [x2]
  40fe8c:	ldr	x24, [x0]
  40fe90:	tbnz	w1, #31, 410400 <ferror@plt+0xdb80>
  40fe94:	sxtw	x1, w1
  40fe98:	mov	x0, x24
  40fe9c:	bl	4022c0 <strnlen@plt>
  40fea0:	add	x2, x24, x0
  40fea4:	mov	x1, x24
  40fea8:	mov	x0, x19
  40feac:	bl	40ea80 <ferror@plt+0xc200>
  40feb0:	b	40f688 <ferror@plt+0xce08>
  40feb4:	ldr	x0, [sp, #120]
  40feb8:	ldr	x1, [x0, #8]
  40febc:	ldr	x0, [x19, #8]
  40fec0:	ldr	w3, [x1, #28]
  40fec4:	add	x0, x0, #0xcc
  40fec8:	ldr	x2, [x1]
  40fecc:	tbnz	w3, #31, 4102d4 <ferror@plt+0xda54>
  40fed0:	add	x3, x2, #0xf
  40fed4:	and	x3, x3, #0xfffffffffffffff8
  40fed8:	str	x3, [x1]
  40fedc:	ldr	d0, [x2]
  40fee0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40fee4:	add	x1, x1, #0xa28
  40fee8:	bl	402310 <sprintf@plt>
  40feec:	nop
  40fef0:	ldr	x24, [x19, #8]
  40fef4:	add	x24, x24, #0xcc
  40fef8:	mov	x0, x24
  40fefc:	b	40f668 <ferror@plt+0xcde8>
  40ff00:	ldr	x0, [sp, #120]
  40ff04:	ldrb	w3, [sp, #199]
  40ff08:	ldr	x0, [x0, #8]
  40ff0c:	ldr	w2, [x0, #24]
  40ff10:	ldr	x1, [x0]
  40ff14:	cbz	w3, 410220 <ferror@plt+0xd9a0>
  40ff18:	tbnz	w2, #31, 4106b8 <ferror@plt+0xde38>
  40ff1c:	add	x2, x1, #0xf
  40ff20:	and	x2, x2, #0xfffffffffffffff8
  40ff24:	str	x2, [x0]
  40ff28:	ldr	x1, [x1]
  40ff2c:	mov	x0, x19
  40ff30:	mov	x2, #0xffffffffffffffff    	// #-1
  40ff34:	bl	40ee18 <ferror@plt+0xc598>
  40ff38:	b	40f9fc <ferror@plt+0xd17c>
  40ff3c:	cbnz	w28, 41032c <ferror@plt+0xdaac>
  40ff40:	cmp	w27, #0x1
  40ff44:	b.eq	41032c <ferror@plt+0xdaac>  // b.none
  40ff48:	cmp	w27, #0x2
  40ff4c:	b.eq	410800 <ferror@plt+0xdf80>  // b.none
  40ff50:	cbnz	w27, 40f9fc <ferror@plt+0xd17c>
  40ff54:	ldr	x0, [sp, #120]
  40ff58:	ldr	x2, [x0, #8]
  40ff5c:	ldr	x0, [x19, #8]
  40ff60:	ldr	w3, [x2, #24]
  40ff64:	add	x0, x0, #0xcc
  40ff68:	ldr	x1, [x2]
  40ff6c:	tbnz	w3, #31, 41086c <ferror@plt+0xdfec>
  40ff70:	add	x3, x1, #0xb
  40ff74:	and	x3, x3, #0xfffffffffffffff8
  40ff78:	str	x3, [x2]
  40ff7c:	ldr	w2, [x1]
  40ff80:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40ff84:	add	x1, x1, #0xa18
  40ff88:	bl	402310 <sprintf@plt>
  40ff8c:	b	40fef0 <ferror@plt+0xd670>
  40ff90:	ldr	x0, [sp, #120]
  40ff94:	ldr	x1, [x0, #8]
  40ff98:	ldr	x0, [x19, #8]
  40ff9c:	ldr	w3, [x1, #24]
  40ffa0:	add	x0, x0, #0xcc
  40ffa4:	ldr	x2, [x1]
  40ffa8:	tbnz	w3, #31, 410258 <ferror@plt+0xd9d8>
  40ffac:	add	x3, x2, #0xf
  40ffb0:	and	x3, x3, #0xfffffffffffffff8
  40ffb4:	str	x3, [x1]
  40ffb8:	ldr	x2, [x2]
  40ffbc:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  40ffc0:	add	x1, x1, #0xa08
  40ffc4:	bl	402310 <sprintf@plt>
  40ffc8:	b	40fef0 <ferror@plt+0xd670>
  40ffcc:	ldr	x0, [sp, #120]
  40ffd0:	ldr	x0, [x0, #8]
  40ffd4:	ldr	w2, [x0, #24]
  40ffd8:	ldr	x1, [x0]
  40ffdc:	tbnz	w2, #31, 41023c <ferror@plt+0xd9bc>
  40ffe0:	add	x2, x1, #0xb
  40ffe4:	and	x2, x2, #0xfffffffffffffff8
  40ffe8:	str	x2, [x0]
  40ffec:	ldr	w3, [x1]
  40fff0:	ldr	x1, [sp, #152]
  40fff4:	and	x0, x3, #0xff
  40fff8:	ldrh	w0, [x1, x0, lsl #1]
  40fffc:	tbnz	w0, #4, 410008 <ferror@plt+0xd788>
  410000:	ldrb	w0, [sp, #199]
  410004:	cbnz	w0, 4104c4 <ferror@plt+0xdc44>
  410008:	mov	w1, w3
  41000c:	mov	x0, x19
  410010:	bl	40f150 <ferror@plt+0xc8d0>
  410014:	b	40f9fc <ferror@plt+0xd17c>
  410018:	ldrb	w0, [x26]
  41001c:	ldr	x1, [sp, #128]
  410020:	ldrh	w1, [x1, w0, sxtw #1]
  410024:	tbnz	w1, #2, 4100e0 <ferror@plt+0xd860>
  410028:	cmp	w0, #0x2a
  41002c:	b.ne	410ab4 <ferror@plt+0xe234>  // b.any
  410030:	ldp	x0, x1, [x25, #24]
  410034:	cmp	x1, x0
  410038:	b.eq	41083c <ferror@plt+0xdfbc>  // b.none
  41003c:	add	x1, x0, #0x1
  410040:	str	x1, [x25, #24]
  410044:	mov	w1, #0x2a                  	// #42
  410048:	strb	w1, [x0]
  41004c:	ldr	x1, [sp, #128]
  410050:	add	x23, x23, #0x2
  410054:	ldrb	w0, [x26, #1]
  410058:	ldrh	w1, [x1, w0, sxtw #1]
  41005c:	tbnz	w1, #2, 410634 <ferror@plt+0xddb4>
  410060:	ldr	w1, [sp, #172]
  410064:	cbnz	w1, 410ae4 <ferror@plt+0xe264>
  410068:	ldr	w1, [sp, #152]
  41006c:	ldr	x2, [sp, #136]
  410070:	add	w1, w1, #0x1
  410074:	str	w1, [sp, #152]
  410078:	ldr	w1, [sp, #188]
  41007c:	str	x2, [x22, w1, uxtw #3]
  410080:	cmp	w0, #0x73
  410084:	b.ne	410afc <ferror@plt+0xe27c>  // b.any
  410088:	ldp	x0, x1, [x25, #24]
  41008c:	cmp	x1, x0
  410090:	b.eq	410850 <ferror@plt+0xdfd0>  // b.none
  410094:	add	x1, x0, #0x1
  410098:	str	x1, [x25, #24]
  41009c:	add	x26, x23, #0x1
  4100a0:	mov	w1, #0x73                  	// #115
  4100a4:	strb	w1, [x0]
  4100a8:	b	40fd70 <ferror@plt+0xd4f0>
  4100ac:	mov	x0, x25
  4100b0:	mov	x1, #0x1                   	// #1
  4100b4:	bl	45c6e0 <_obstack_newchunk@@Base>
  4100b8:	ldr	x0, [x25, #24]
  4100bc:	add	x1, x0, #0x1
  4100c0:	str	x1, [x25, #24]
  4100c4:	ldrb	w1, [x26]
  4100c8:	strb	w1, [x0]
  4100cc:	ldrb	w0, [x26], #1
  4100d0:	ldr	x1, [sp, #128]
  4100d4:	ldrh	w1, [x1, w0, sxtw #1]
  4100d8:	tbz	w1, #2, 41010c <ferror@plt+0xd88c>
  4100dc:	nop
  4100e0:	ldp	x0, x1, [x25, #24]
  4100e4:	cmp	x1, x0
  4100e8:	b.eq	4100ac <ferror@plt+0xd82c>  // b.none
  4100ec:	add	x1, x0, #0x1
  4100f0:	str	x1, [x25, #24]
  4100f4:	ldrb	w1, [x26]
  4100f8:	strb	w1, [x0]
  4100fc:	ldrb	w0, [x26], #1
  410100:	ldr	x1, [sp, #128]
  410104:	ldrh	w1, [x1, w0, sxtw #1]
  410108:	tbnz	w1, #2, 4100e0 <ferror@plt+0xd860>
  41010c:	cmp	w0, #0x73
  410110:	b.eq	40fd70 <ferror@plt+0xd4f0>  // b.none
  410114:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410118:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41011c:	add	x2, x2, #0x9c8
  410120:	add	x0, x0, #0x980
  410124:	mov	w1, #0x47c                 	// #1148
  410128:	bl	4028b0 <ferror@plt+0x30>
  41012c:	mov	x0, x25
  410130:	mov	x1, x23
  410134:	bl	45c6e0 <_obstack_newchunk@@Base>
  410138:	ldr	x26, [x20, #1224]
  41013c:	ldr	x0, [x25, #24]
  410140:	b	40f3a4 <ferror@plt+0xcb24>
  410144:	add	x1, sp, #0xc8
  410148:	mov	x0, x23
  41014c:	mov	w2, #0xa                   	// #10
  410150:	bl	402260 <strtoul@plt>
  410154:	ldr	x3, [sp, #200]
  410158:	str	w0, [sp, #188]
  41015c:	sub	w0, w0, #0x1
  410160:	ldrb	w1, [x3]
  410164:	cmp	w1, #0x24
  410168:	b.ne	410bd4 <ferror@plt+0xe354>  // b.any
  41016c:	ldr	w1, [sp, #184]
  410170:	add	x23, x3, #0x1
  410174:	cbnz	w1, 410b8c <ferror@plt+0xe30c>
  410178:	mov	w1, #0x1                   	// #1
  41017c:	str	w24, [sp, #152]
  410180:	mov	w24, w0
  410184:	str	w1, [sp, #172]
  410188:	b	40fcc8 <ferror@plt+0xd448>
  41018c:	mov	x0, x25
  410190:	mov	x1, x20
  410194:	bl	45c6e0 <_obstack_newchunk@@Base>
  410198:	ldr	x0, [x25, #24]
  41019c:	b	40faf0 <ferror@plt+0xd270>
  4101a0:	ldrb	w0, [x25, #80]
  4101a4:	orr	w0, w0, #0x2
  4101a8:	strb	w0, [x25, #80]
  4101ac:	b	40fc60 <ferror@plt+0xd3e0>
  4101b0:	ldrb	w0, [x25, #80]
  4101b4:	orr	w0, w0, #0x2
  4101b8:	strb	w0, [x25, #80]
  4101bc:	b	40fda0 <ferror@plt+0xd520>
  4101c0:	ldr	x2, [sp, #144]
  4101c4:	add	x22, sp, #0xd0
  4101c8:	add	x27, x1, #0x8
  4101cc:	ldr	x0, [x2, #184]
  4101d0:	str	x24, [x25, #16]
  4101d4:	str	x0, [x1]
  4101d8:	mov	x0, x22
  4101dc:	str	x1, [x2, #184]
  4101e0:	mov	x2, #0xf0                  	// #240
  4101e4:	mov	w1, #0x0                   	// #0
  4101e8:	bl	402440 <memset@plt>
  4101ec:	ldr	x0, [sp, #120]
  4101f0:	ldr	x28, [x0]
  4101f4:	ldrb	w0, [x28]
  4101f8:	cbnz	w0, 40f2f0 <ferror@plt+0xca70>
  4101fc:	cmp	x24, x20
  410200:	b.eq	4105c0 <ferror@plt+0xdd40>  // b.none
  410204:	add	x0, x24, #0x1
  410208:	str	x0, [x25, #24]
  41020c:	mov	x21, x27
  410210:	mov	x20, #0x0                   	// #0
  410214:	mov	x3, #0x8                   	// #8
  410218:	strb	wzr, [x24]
  41021c:	b	40f440 <ferror@plt+0xcbc0>
  410220:	tbnz	w2, #31, 41067c <ferror@plt+0xddfc>
  410224:	add	x2, x1, #0xf
  410228:	and	x2, x2, #0xfffffffffffffff8
  41022c:	str	x2, [x0]
  410230:	ldr	x24, [x1]
  410234:	mov	x0, x24
  410238:	b	40f668 <ferror@plt+0xcde8>
  41023c:	add	w3, w2, #0x8
  410240:	str	w3, [x0, #24]
  410244:	cmp	w3, #0x0
  410248:	b.gt	40ffe0 <ferror@plt+0xd760>
  41024c:	ldr	x1, [x0, #8]
  410250:	add	x1, x1, w2, sxtw
  410254:	b	40ffec <ferror@plt+0xd76c>
  410258:	add	w4, w3, #0x8
  41025c:	str	w4, [x1, #24]
  410260:	cmp	w4, #0x0
  410264:	b.gt	40ffac <ferror@plt+0xd72c>
  410268:	ldr	x2, [x1, #8]
  41026c:	add	x2, x2, w3, sxtw
  410270:	b	40ffb8 <ferror@plt+0xd738>
  410274:	add	w3, w2, #0x8
  410278:	str	w3, [x0, #24]
  41027c:	cmp	w3, #0x0
  410280:	b.gt	40f9ac <ferror@plt+0xd12c>
  410284:	ldr	x1, [x0, #8]
  410288:	add	x1, x1, w2, sxtw
  41028c:	b	40f9b8 <ferror@plt+0xd138>
  410290:	add	w0, w2, #0x8
  410294:	str	w0, [x1, #24]
  410298:	cmp	w0, #0x0
  41029c:	b.gt	40f7ac <ferror@plt+0xcf2c>
  4102a0:	ldr	x4, [x1, #8]
  4102a4:	ldr	x5, [x4, w2, sxtw]
  4102a8:	str	x5, [sp, #128]
  4102ac:	b.eq	4109bc <ferror@plt+0xe13c>  // b.none
  4102b0:	add	w2, w2, #0x10
  4102b4:	str	w2, [x1, #24]
  4102b8:	cmp	w2, #0x0
  4102bc:	b.le	4104ec <ferror@plt+0xdc6c>
  4102c0:	add	x2, x3, #0xb
  4102c4:	mov	x0, x3
  4102c8:	and	x2, x2, #0xfffffffffffffff8
  4102cc:	str	x2, [x1]
  4102d0:	b	40f7cc <ferror@plt+0xcf4c>
  4102d4:	add	w4, w3, #0x10
  4102d8:	str	w4, [x1, #28]
  4102dc:	cmp	w4, #0x0
  4102e0:	b.gt	40fed0 <ferror@plt+0xd650>
  4102e4:	ldr	x2, [x1, #16]
  4102e8:	add	x2, x2, w3, sxtw
  4102ec:	b	40fedc <ferror@plt+0xd65c>
  4102f0:	ldr	x0, [sp, #120]
  4102f4:	ldr	x2, [x0, #8]
  4102f8:	ldr	x0, [x19, #8]
  4102fc:	ldr	w3, [x2, #24]
  410300:	add	x0, x0, #0xcc
  410304:	ldr	x1, [x2]
  410308:	tbnz	w3, #31, 41069c <ferror@plt+0xde1c>
  41030c:	add	x3, x1, #0xf
  410310:	and	x3, x3, #0xfffffffffffffff8
  410314:	str	x3, [x2]
  410318:	ldr	x2, [x1]
  41031c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410320:	add	x1, x1, #0x9f0
  410324:	bl	402310 <sprintf@plt>
  410328:	b	40fef0 <ferror@plt+0xd670>
  41032c:	ldr	x0, [sp, #120]
  410330:	ldr	x2, [x0, #8]
  410334:	ldr	x0, [x19, #8]
  410338:	ldr	w3, [x2, #24]
  41033c:	add	x0, x0, #0xcc
  410340:	ldr	x1, [x2]
  410344:	tbnz	w3, #31, 410618 <ferror@plt+0xdd98>
  410348:	add	x3, x1, #0xf
  41034c:	and	x3, x3, #0xfffffffffffffff8
  410350:	str	x3, [x2]
  410354:	ldr	x2, [x1]
  410358:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41035c:	add	x1, x1, #0xa10
  410360:	bl	402310 <sprintf@plt>
  410364:	b	40fef0 <ferror@plt+0xd670>
  410368:	ldr	x0, [sp, #120]
  41036c:	ldr	x1, [x0, #8]
  410370:	ldr	w2, [x1, #24]
  410374:	ldr	x0, [x1]
  410378:	tbnz	w2, #31, 410510 <ferror@plt+0xdc90>
  41037c:	add	x2, x0, #0xf
  410380:	and	x2, x2, #0xfffffffffffffff8
  410384:	str	x2, [x1]
  410388:	ldr	x2, [x0]
  41038c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410390:	ldr	x0, [x19, #8]
  410394:	add	x1, x1, #0xa88
  410398:	add	x0, x0, #0xcc
  41039c:	bl	402310 <sprintf@plt>
  4103a0:	b	40fef0 <ferror@plt+0xd670>
  4103a4:	add	x1, sp, #0xc8
  4103a8:	mov	w2, #0xa                   	// #10
  4103ac:	add	x0, x26, #0x1
  4103b0:	bl	402260 <strtoul@plt>
  4103b4:	ldr	x2, [sp, #200]
  4103b8:	mov	w1, w0
  4103bc:	ldrb	w0, [x2]
  4103c0:	cmp	w0, #0x73
  4103c4:	b.ne	410c04 <ferror@plt+0xe384>  // b.any
  4103c8:	ldr	x0, [sp, #120]
  4103cc:	ldr	x2, [x0, #8]
  4103d0:	ldr	w5, [x2, #24]
  4103d4:	ldr	x0, [x2]
  4103d8:	tbz	w5, #31, 4109b4 <ferror@plt+0xe134>
  4103dc:	add	w3, w5, #0x8
  4103e0:	str	w3, [x2, #24]
  4103e4:	cmp	w3, #0x0
  4103e8:	b.le	4104e0 <ferror@plt+0xdc60>
  4103ec:	add	x3, x0, #0xf
  4103f0:	and	x3, x3, #0xfffffffffffffff8
  4103f4:	str	x3, [x2]
  4103f8:	ldr	x24, [x0]
  4103fc:	tbz	w1, #31, 40fe94 <ferror@plt+0xd614>
  410400:	mov	x0, x24
  410404:	bl	402270 <strlen@plt>
  410408:	b	40fea0 <ferror@plt+0xd620>
  41040c:	ldr	x0, [sp, #120]
  410410:	ldr	x2, [x0, #8]
  410414:	ldr	x0, [x19, #8]
  410418:	ldr	w3, [x2, #24]
  41041c:	add	x0, x0, #0xcc
  410420:	ldr	x1, [x2]
  410424:	tbnz	w3, #31, 4104f4 <ferror@plt+0xdc74>
  410428:	add	x3, x1, #0xf
  41042c:	and	x3, x3, #0xfffffffffffffff8
  410430:	str	x3, [x2]
  410434:	ldr	x2, [x1]
  410438:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41043c:	add	x1, x1, #0xa38
  410440:	bl	402310 <sprintf@plt>
  410444:	b	40fef0 <ferror@plt+0xd670>
  410448:	mov	x0, x25
  41044c:	mov	x1, #0x1e8                 	// #488
  410450:	bl	45c6e0 <_obstack_newchunk@@Base>
  410454:	ldp	x0, x20, [x25, #24]
  410458:	ldr	x1, [x25, #16]
  41045c:	add	x0, x0, #0x1e8
  410460:	cmp	x0, x1
  410464:	b.ne	40f290 <ferror@plt+0xca10>  // b.any
  410468:	ldrb	w2, [x25, #80]
  41046c:	orr	w2, w2, #0x2
  410470:	strb	w2, [x25, #80]
  410474:	b	40f290 <ferror@plt+0xca10>
  410478:	mov	x0, x25
  41047c:	mov	x1, #0x1                   	// #1
  410480:	bl	45c6e0 <_obstack_newchunk@@Base>
  410484:	ldr	x0, [x25, #24]
  410488:	b	40f5b8 <ferror@plt+0xcd38>
  41048c:	ldrb	w0, [x25, #80]
  410490:	orr	w0, w0, #0x2
  410494:	strb	w0, [x25, #80]
  410498:	b	40f44c <ferror@plt+0xcbcc>
  41049c:	mov	x0, x25
  4104a0:	mov	x1, #0x1                   	// #1
  4104a4:	bl	45c6e0 <_obstack_newchunk@@Base>
  4104a8:	ldr	x0, [x25, #24]
  4104ac:	b	40fc34 <ferror@plt+0xd3b4>
  4104b0:	mov	x0, x25
  4104b4:	mov	x1, #0x1                   	// #1
  4104b8:	bl	45c6e0 <_obstack_newchunk@@Base>
  4104bc:	ldr	x0, [x25, #24]
  4104c0:	b	40fd84 <ferror@plt+0xd504>
  4104c4:	add	x1, sp, #0xc8
  4104c8:	mov	x0, x19
  4104cc:	mov	x2, #0x1                   	// #1
  4104d0:	strb	w3, [sp, #200]
  4104d4:	strb	wzr, [sp, #201]
  4104d8:	bl	40ee18 <ferror@plt+0xc598>
  4104dc:	b	40f9fc <ferror@plt+0xd17c>
  4104e0:	ldr	x0, [x2, #8]
  4104e4:	add	x0, x0, w5, sxtw
  4104e8:	b	40fe8c <ferror@plt+0xd60c>
  4104ec:	add	x0, x4, w0, sxtw
  4104f0:	b	40f7cc <ferror@plt+0xcf4c>
  4104f4:	add	w4, w3, #0x8
  4104f8:	str	w4, [x2, #24]
  4104fc:	cmp	w4, #0x0
  410500:	b.gt	410428 <ferror@plt+0xdba8>
  410504:	ldr	x1, [x2, #8]
  410508:	add	x1, x1, w3, sxtw
  41050c:	b	410434 <ferror@plt+0xdbb4>
  410510:	add	w3, w2, #0x8
  410514:	str	w3, [x1, #24]
  410518:	cmp	w3, #0x0
  41051c:	b.gt	41037c <ferror@plt+0xdafc>
  410520:	ldr	x0, [x1, #8]
  410524:	add	x0, x0, w2, sxtw
  410528:	b	410388 <ferror@plt+0xdb08>
  41052c:	mov	x1, #0x1                   	// #1
  410530:	str	x0, [sp, #136]
  410534:	bl	45c6e0 <_obstack_newchunk@@Base>
  410538:	ldr	x0, [sp, #136]
  41053c:	ldr	x1, [x0, #24]
  410540:	b	40f8cc <ferror@plt+0xd04c>
  410544:	mov	x1, #0x1                   	// #1
  410548:	str	x0, [sp, #136]
  41054c:	bl	45c6e0 <_obstack_newchunk@@Base>
  410550:	ldr	x0, [sp, #136]
  410554:	ldr	x1, [x0, #24]
  410558:	b	40f880 <ferror@plt+0xd000>
  41055c:	add	w5, w0, #0x8
  410560:	str	w5, [x2, #24]
  410564:	cmp	w5, #0x0
  410568:	b.gt	40fe64 <ferror@plt+0xd5e4>
  41056c:	ldr	x1, [x2, #8]
  410570:	cmp	x20, x4
  410574:	ldr	w1, [x1, w0, sxtw]
  410578:	b.ne	410acc <ferror@plt+0xe24c>  // b.any
  41057c:	mov	x0, x3
  410580:	b	4103d8 <ferror@plt+0xdb58>
  410584:	cmp	x5, x1
  410588:	b.eq	41099c <ferror@plt+0xe11c>  // b.none
  41058c:	add	x2, x1, #0x1
  410590:	str	x2, [x0, #24]
  410594:	mov	w0, #0xa                   	// #10
  410598:	strb	w0, [x1]
  41059c:	ldr	x0, [sp, #152]
  4105a0:	strb	wzr, [x19, #65]
  4105a4:	ldr	x1, [x19, #8]
  4105a8:	ldrh	w0, [x0, #64]
  4105ac:	str	wzr, [x1, #200]
  4105b0:	tbnz	w0, #6, 40f7f4 <ferror@plt+0xcf74>
  4105b4:	ldr	x0, [x1, #176]
  4105b8:	ldp	x1, x5, [x0, #24]
  4105bc:	b	40f8c4 <ferror@plt+0xd044>
  4105c0:	mov	w21, #0x0                   	// #0
  4105c4:	mov	x0, x25
  4105c8:	mov	x1, #0x1                   	// #1
  4105cc:	bl	45c6e0 <_obstack_newchunk@@Base>
  4105d0:	ldr	x0, [x25, #24]
  4105d4:	b	40f41c <ferror@plt+0xcb9c>
  4105d8:	cmp	x5, x1
  4105dc:	b.eq	410984 <ferror@plt+0xe104>  // b.none
  4105e0:	add	x2, x1, #0x1
  4105e4:	str	x2, [x0, #24]
  4105e8:	mov	w0, #0xa                   	// #10
  4105ec:	strb	w0, [x1]
  4105f0:	ldr	x0, [sp, #152]
  4105f4:	strb	wzr, [x19, #65]
  4105f8:	mov	w2, #0x0                   	// #0
  4105fc:	ldrh	w1, [x0, #88]
  410600:	ldr	x0, [x19, #8]
  410604:	str	wzr, [x0, #200]
  410608:	tbnz	w1, #6, 40f8a0 <ferror@plt+0xd020>
  41060c:	ldr	x0, [x0, #176]
  410610:	ldp	x1, x5, [x0, #24]
  410614:	b	40f878 <ferror@plt+0xcff8>
  410618:	add	w4, w3, #0x8
  41061c:	str	w4, [x2, #24]
  410620:	cmp	w4, #0x0
  410624:	b.gt	410348 <ferror@plt+0xdac8>
  410628:	ldr	x1, [x2, #8]
  41062c:	add	x1, x1, w3, sxtw
  410630:	b	410354 <ferror@plt+0xdad4>
  410634:	add	x1, sp, #0xc8
  410638:	mov	x0, x23
  41063c:	mov	w2, #0xa                   	// #10
  410640:	bl	402260 <strtoul@plt>
  410644:	cmp	w0, w24
  410648:	sub	w1, w0, #0x1
  41064c:	ldr	x0, [sp, #200]
  410650:	b.ne	410a84 <ferror@plt+0xe204>  // b.any
  410654:	ldr	w2, [sp, #184]
  410658:	cbnz	w2, 410a6c <ferror@plt+0xe1ec>
  41065c:	ldrb	w2, [x0]
  410660:	cmp	w2, #0x24
  410664:	b.ne	410a54 <ferror@plt+0xe1d4>  // b.any
  410668:	ldr	x2, [sp, #136]
  41066c:	add	x23, x0, #0x1
  410670:	ldrb	w0, [x0, #1]
  410674:	str	x2, [x22, w1, uxtw #3]
  410678:	b	410080 <ferror@plt+0xd800>
  41067c:	add	w3, w2, #0x8
  410680:	str	w3, [x0, #24]
  410684:	cmp	w3, #0x0
  410688:	b.gt	410224 <ferror@plt+0xd9a4>
  41068c:	ldr	x1, [x0, #8]
  410690:	add	x1, x1, w2, sxtw
  410694:	ldr	x24, [x1]
  410698:	b	410234 <ferror@plt+0xd9b4>
  41069c:	add	w4, w3, #0x8
  4106a0:	str	w4, [x2, #24]
  4106a4:	cmp	w4, #0x0
  4106a8:	b.gt	41030c <ferror@plt+0xda8c>
  4106ac:	ldr	x1, [x2, #8]
  4106b0:	add	x1, x1, w3, sxtw
  4106b4:	b	410318 <ferror@plt+0xda98>
  4106b8:	add	w3, w2, #0x8
  4106bc:	str	w3, [x0, #24]
  4106c0:	cmp	w3, #0x0
  4106c4:	b.gt	40ff1c <ferror@plt+0xd69c>
  4106c8:	ldr	x1, [x0, #8]
  4106cc:	add	x1, x1, w2, sxtw
  4106d0:	b	40ff28 <ferror@plt+0xd6a8>
  4106d4:	ldr	x0, [sp, #120]
  4106d8:	ldr	x2, [x0, #8]
  4106dc:	ldr	x0, [x19, #8]
  4106e0:	ldr	w3, [x2, #24]
  4106e4:	add	x0, x0, #0xcc
  4106e8:	ldr	x1, [x2]
  4106ec:	tbnz	w3, #31, 410968 <ferror@plt+0xe0e8>
  4106f0:	add	x3, x1, #0xf
  4106f4:	and	x3, x3, #0xfffffffffffffff8
  4106f8:	str	x3, [x2]
  4106fc:	ldr	x2, [x1]
  410700:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410704:	add	x1, x1, #0xa00
  410708:	bl	402310 <sprintf@plt>
  41070c:	b	40fef0 <ferror@plt+0xd670>
  410710:	ldr	x0, [sp, #120]
  410714:	ldr	x2, [x0, #8]
  410718:	ldr	x0, [x19, #8]
  41071c:	ldr	w3, [x2, #24]
  410720:	add	x0, x0, #0xcc
  410724:	ldr	x1, [x2]
  410728:	tbnz	w3, #31, 41094c <ferror@plt+0xe0cc>
  41072c:	add	x3, x1, #0xf
  410730:	and	x3, x3, #0xfffffffffffffff8
  410734:	str	x3, [x2]
  410738:	ldr	x2, [x1]
  41073c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410740:	add	x1, x1, #0xa50
  410744:	bl	402310 <sprintf@plt>
  410748:	b	40fef0 <ferror@plt+0xd670>
  41074c:	ldr	x0, [sp, #120]
  410750:	ldr	x2, [x0, #8]
  410754:	ldr	x0, [x19, #8]
  410758:	ldr	w3, [x2, #24]
  41075c:	add	x0, x0, #0xcc
  410760:	ldr	x1, [x2]
  410764:	tbnz	w3, #31, 410930 <ferror@plt+0xe0b0>
  410768:	add	x3, x1, #0xf
  41076c:	and	x3, x3, #0xfffffffffffffff8
  410770:	str	x3, [x2]
  410774:	ldr	x2, [x1]
  410778:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41077c:	add	x1, x1, #0x9e8
  410780:	bl	402310 <sprintf@plt>
  410784:	b	40fef0 <ferror@plt+0xd670>
  410788:	ldr	x0, [sp, #120]
  41078c:	ldr	x2, [x0, #8]
  410790:	ldr	x0, [x19, #8]
  410794:	ldr	w3, [x2, #24]
  410798:	add	x0, x0, #0xcc
  41079c:	ldr	x1, [x2]
  4107a0:	tbnz	w3, #31, 410914 <ferror@plt+0xe094>
  4107a4:	add	x3, x1, #0xf
  4107a8:	and	x3, x3, #0xfffffffffffffff8
  4107ac:	str	x3, [x2]
  4107b0:	ldr	x2, [x1]
  4107b4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4107b8:	add	x1, x1, #0xa88
  4107bc:	bl	402310 <sprintf@plt>
  4107c0:	b	40fef0 <ferror@plt+0xd670>
  4107c4:	ldr	x0, [sp, #120]
  4107c8:	ldr	x2, [x0, #8]
  4107cc:	ldr	x0, [x19, #8]
  4107d0:	ldr	w3, [x2, #24]
  4107d4:	add	x0, x0, #0xcc
  4107d8:	ldr	x1, [x2]
  4107dc:	tbnz	w3, #31, 4108f8 <ferror@plt+0xe078>
  4107e0:	add	x3, x1, #0xf
  4107e4:	and	x3, x3, #0xfffffffffffffff8
  4107e8:	str	x3, [x2]
  4107ec:	ldr	x2, [x1]
  4107f0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4107f4:	add	x1, x1, #0xa48
  4107f8:	bl	402310 <sprintf@plt>
  4107fc:	b	40fef0 <ferror@plt+0xd670>
  410800:	ldr	x0, [sp, #120]
  410804:	ldr	x2, [x0, #8]
  410808:	ldr	x0, [x19, #8]
  41080c:	ldr	w3, [x2, #24]
  410810:	add	x0, x0, #0xcc
  410814:	ldr	x1, [x2]
  410818:	tbnz	w3, #31, 4108dc <ferror@plt+0xe05c>
  41081c:	add	x3, x1, #0xf
  410820:	and	x3, x3, #0xfffffffffffffff8
  410824:	str	x3, [x2]
  410828:	ldr	x2, [x1]
  41082c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410830:	add	x1, x1, #0xa20
  410834:	bl	402310 <sprintf@plt>
  410838:	b	40fef0 <ferror@plt+0xd670>
  41083c:	mov	x0, x25
  410840:	mov	x1, #0x1                   	// #1
  410844:	bl	45c6e0 <_obstack_newchunk@@Base>
  410848:	ldr	x0, [x25, #24]
  41084c:	b	41003c <ferror@plt+0xd7bc>
  410850:	mov	x0, x25
  410854:	mov	x1, #0x1                   	// #1
  410858:	bl	45c6e0 <_obstack_newchunk@@Base>
  41085c:	ldr	x0, [x25, #24]
  410860:	b	410094 <ferror@plt+0xd814>
  410864:	ldr	w21, [sp, #160]
  410868:	b	40f414 <ferror@plt+0xcb94>
  41086c:	add	w4, w3, #0x8
  410870:	str	w4, [x2, #24]
  410874:	cmp	w4, #0x0
  410878:	b.gt	40ff70 <ferror@plt+0xd6f0>
  41087c:	ldr	x1, [x2, #8]
  410880:	add	x1, x1, w3, sxtw
  410884:	b	40ff7c <ferror@plt+0xd6fc>
  410888:	add	w4, w3, #0x8
  41088c:	str	w4, [x2, #24]
  410890:	cmp	w4, #0x0
  410894:	b.gt	40f640 <ferror@plt+0xcdc0>
  410898:	ldr	x1, [x2, #8]
  41089c:	add	x1, x1, w3, sxtw
  4108a0:	b	40f64c <ferror@plt+0xcdcc>
  4108a4:	add	w4, w3, #0x8
  4108a8:	str	w4, [x2, #24]
  4108ac:	cmp	w4, #0x0
  4108b0:	b.gt	40fbfc <ferror@plt+0xd37c>
  4108b4:	ldr	x1, [x2, #8]
  4108b8:	add	x1, x1, w3, sxtw
  4108bc:	b	40fc08 <ferror@plt+0xd388>
  4108c0:	add	w4, w3, #0x8
  4108c4:	str	w4, [x2, #24]
  4108c8:	cmp	w4, #0x0
  4108cc:	b.gt	40f964 <ferror@plt+0xd0e4>
  4108d0:	ldr	x1, [x2, #8]
  4108d4:	add	x1, x1, w3, sxtw
  4108d8:	b	40f970 <ferror@plt+0xd0f0>
  4108dc:	add	w4, w3, #0x8
  4108e0:	str	w4, [x2, #24]
  4108e4:	cmp	w4, #0x0
  4108e8:	b.gt	41081c <ferror@plt+0xdf9c>
  4108ec:	ldr	x1, [x2, #8]
  4108f0:	add	x1, x1, w3, sxtw
  4108f4:	b	410828 <ferror@plt+0xdfa8>
  4108f8:	add	w4, w3, #0x8
  4108fc:	str	w4, [x2, #24]
  410900:	cmp	w4, #0x0
  410904:	b.gt	4107e0 <ferror@plt+0xdf60>
  410908:	ldr	x1, [x2, #8]
  41090c:	add	x1, x1, w3, sxtw
  410910:	b	4107ec <ferror@plt+0xdf6c>
  410914:	add	w4, w3, #0x8
  410918:	str	w4, [x2, #24]
  41091c:	cmp	w4, #0x0
  410920:	b.gt	4107a4 <ferror@plt+0xdf24>
  410924:	ldr	x1, [x2, #8]
  410928:	add	x1, x1, w3, sxtw
  41092c:	b	4107b0 <ferror@plt+0xdf30>
  410930:	add	w4, w3, #0x8
  410934:	str	w4, [x2, #24]
  410938:	cmp	w4, #0x0
  41093c:	b.gt	410768 <ferror@plt+0xdee8>
  410940:	ldr	x1, [x2, #8]
  410944:	add	x1, x1, w3, sxtw
  410948:	b	410774 <ferror@plt+0xdef4>
  41094c:	add	w4, w3, #0x8
  410950:	str	w4, [x2, #24]
  410954:	cmp	w4, #0x0
  410958:	b.gt	41072c <ferror@plt+0xdeac>
  41095c:	ldr	x1, [x2, #8]
  410960:	add	x1, x1, w3, sxtw
  410964:	b	410738 <ferror@plt+0xdeb8>
  410968:	add	w4, w3, #0x8
  41096c:	str	w4, [x2, #24]
  410970:	cmp	w4, #0x0
  410974:	b.gt	4106f0 <ferror@plt+0xde70>
  410978:	ldr	x1, [x2, #8]
  41097c:	add	x1, x1, w3, sxtw
  410980:	b	4106fc <ferror@plt+0xde7c>
  410984:	mov	x1, #0x1                   	// #1
  410988:	str	x0, [sp, #136]
  41098c:	bl	45c6e0 <_obstack_newchunk@@Base>
  410990:	ldr	x0, [sp, #136]
  410994:	ldr	x1, [x0, #24]
  410998:	b	4105e0 <ferror@plt+0xdd60>
  41099c:	mov	x1, #0x1                   	// #1
  4109a0:	str	x0, [sp, #136]
  4109a4:	bl	45c6e0 <_obstack_newchunk@@Base>
  4109a8:	ldr	x0, [sp, #136]
  4109ac:	ldr	x1, [x0, #24]
  4109b0:	b	41058c <ferror@plt+0xdd0c>
  4109b4:	mov	x4, x20
  4109b8:	b	40fe7c <ferror@plt+0xd5fc>
  4109bc:	mov	x0, x3
  4109c0:	b	40f7c0 <ferror@plt+0xcf40>
  4109c4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4109c8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4109cc:	add	x2, x2, #0x9c8
  4109d0:	add	x0, x0, #0x980
  4109d4:	mov	w1, #0x56d                 	// #1389
  4109d8:	bl	4028b0 <ferror@plt+0x30>
  4109dc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4109e0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4109e4:	add	x2, x2, #0x9c8
  4109e8:	add	x0, x0, #0x980
  4109ec:	mov	w1, #0x4a4                 	// #1188
  4109f0:	bl	4028b0 <ferror@plt+0x30>
  4109f4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4109f8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4109fc:	add	x2, x2, #0x9c8
  410a00:	add	x0, x0, #0x980
  410a04:	mov	w1, #0x450                 	// #1104
  410a08:	bl	4028b0 <ferror@plt+0x30>
  410a0c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a10:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a14:	add	x2, x2, #0x9c8
  410a18:	add	x0, x0, #0x980
  410a1c:	mov	w1, #0x466                 	// #1126
  410a20:	bl	4028b0 <ferror@plt+0x30>
  410a24:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a28:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a2c:	add	x2, x2, #0x9c8
  410a30:	add	x0, x0, #0x980
  410a34:	mov	w1, #0x464                 	// #1124
  410a38:	bl	4028b0 <ferror@plt+0x30>
  410a3c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a40:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a44:	add	x2, x2, #0x9c8
  410a48:	add	x0, x0, #0x980
  410a4c:	mov	w1, #0x4dc                 	// #1244
  410a50:	bl	4028b0 <ferror@plt+0x30>
  410a54:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a58:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a5c:	add	x2, x2, #0x9c8
  410a60:	add	x0, x0, #0x980
  410a64:	mov	w1, #0x48b                 	// #1163
  410a68:	bl	4028b0 <ferror@plt+0x30>
  410a6c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a70:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a74:	add	x2, x2, #0x9c8
  410a78:	add	x0, x0, #0x980
  410a7c:	mov	w1, #0x48a                 	// #1162
  410a80:	bl	4028b0 <ferror@plt+0x30>
  410a84:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a88:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410a8c:	add	x2, x2, #0x9c8
  410a90:	add	x0, x0, #0x980
  410a94:	mov	w1, #0x489                 	// #1161
  410a98:	bl	4028b0 <ferror@plt+0x30>
  410a9c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410aa0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410aa4:	add	x2, x2, #0x9c8
  410aa8:	add	x0, x0, #0x980
  410aac:	mov	w1, #0x4ca                 	// #1226
  410ab0:	bl	4028b0 <ferror@plt+0x30>
  410ab4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410ab8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410abc:	add	x2, x2, #0x9c8
  410ac0:	add	x0, x0, #0x980
  410ac4:	mov	w1, #0x480                 	// #1152
  410ac8:	bl	4028b0 <ferror@plt+0x30>
  410acc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410ad0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410ad4:	add	x2, x2, #0x9c8
  410ad8:	add	x0, x0, #0x980
  410adc:	mov	w1, #0x555                 	// #1365
  410ae0:	bl	4028b0 <ferror@plt+0x30>
  410ae4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410ae8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410aec:	add	x2, x2, #0x9c8
  410af0:	add	x0, x0, #0x980
  410af4:	mov	w1, #0x492                 	// #1170
  410af8:	bl	4028b0 <ferror@plt+0x30>
  410afc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b00:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b04:	add	x2, x2, #0x9c8
  410b08:	add	x0, x0, #0x980
  410b0c:	mov	w1, #0x496                 	// #1174
  410b10:	bl	4028b0 <ferror@plt+0x30>
  410b14:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b18:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b1c:	add	x2, x2, #0x9c8
  410b20:	add	x0, x0, #0x980
  410b24:	mov	w1, #0x4c0                 	// #1216
  410b28:	bl	4028b0 <ferror@plt+0x30>
  410b2c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b30:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b34:	add	x2, x2, #0x9c8
  410b38:	add	x0, x0, #0x980
  410b3c:	mov	w1, #0x4d5                 	// #1237
  410b40:	bl	4028b0 <ferror@plt+0x30>
  410b44:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b48:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b4c:	add	x2, x2, #0x9c8
  410b50:	add	x0, x0, #0x980
  410b54:	mov	w1, #0x54f                 	// #1359
  410b58:	bl	4028b0 <ferror@plt+0x30>
  410b5c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b60:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b64:	add	x2, x2, #0x9c8
  410b68:	add	x0, x0, #0x980
  410b6c:	mov	w1, #0x551                 	// #1361
  410b70:	bl	4028b0 <ferror@plt+0x30>
  410b74:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b78:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b7c:	add	x2, x2, #0x9c8
  410b80:	add	x0, x0, #0x980
  410b84:	mov	w1, #0x41e                 	// #1054
  410b88:	bl	4028b0 <ferror@plt+0x30>
  410b8c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b90:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410b94:	add	x2, x2, #0x9c8
  410b98:	add	x0, x0, #0x980
  410b9c:	mov	w1, #0x45e                 	// #1118
  410ba0:	bl	4028b0 <ferror@plt+0x30>
  410ba4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410ba8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410bac:	add	x2, x2, #0x9c8
  410bb0:	add	x0, x0, #0x980
  410bb4:	mov	w1, #0x4cf                 	// #1231
  410bb8:	bl	4028b0 <ferror@plt+0x30>
  410bbc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410bc0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410bc4:	add	x2, x2, #0x9c8
  410bc8:	add	x0, x0, #0x980
  410bcc:	mov	w1, #0x4c5                 	// #1221
  410bd0:	bl	4028b0 <ferror@plt+0x30>
  410bd4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410bd8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410bdc:	add	x2, x2, #0x9c8
  410be0:	add	x0, x0, #0x980
  410be4:	mov	w1, #0x45a                 	// #1114
  410be8:	bl	4028b0 <ferror@plt+0x30>
  410bec:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410bf0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410bf4:	add	x2, x2, #0x9c8
  410bf8:	add	x0, x0, #0x980
  410bfc:	mov	w1, #0x467                 	// #1127
  410c00:	bl	4028b0 <ferror@plt+0x30>
  410c04:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410c08:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  410c0c:	add	x2, x2, #0x9c8
  410c10:	add	x0, x0, #0x980
  410c14:	mov	w1, #0x54b                 	// #1355
  410c18:	bl	4028b0 <ferror@plt+0x30>
  410c1c:	nop
  410c20:	stp	x29, x30, [sp, #-32]!
  410c24:	mov	x2, #0x1                   	// #1
  410c28:	mov	x29, sp
  410c2c:	stp	x19, x20, [sp, #16]
  410c30:	mov	x19, x0
  410c34:	ldur	x20, [x0, #36]
  410c38:	stur	x2, [x0, #36]
  410c3c:	bl	40f238 <ferror@plt+0xc9b8>
  410c40:	mov	x0, x19
  410c44:	bl	40ef40 <ferror@plt+0xc6c0>
  410c48:	stur	x20, [x19, #36]
  410c4c:	ldp	x19, x20, [sp, #16]
  410c50:	ldp	x29, x30, [sp], #32
  410c54:	ret
  410c58:	stp	x29, x30, [sp, #-288]!
  410c5c:	mov	x29, sp
  410c60:	add	x8, sp, #0xf0
  410c64:	add	x9, sp, #0x120
  410c68:	stp	x19, x20, [sp, #16]
  410c6c:	mov	x19, x0
  410c70:	mov	x20, x1
  410c74:	mov	w0, #0xffffff80            	// #-128
  410c78:	mov	w1, #0xffffffd0            	// #-48
  410c7c:	stp	x9, x9, [sp, #40]
  410c80:	str	x8, [sp, #56]
  410c84:	stp	w1, w0, [sp, #64]
  410c88:	str	q0, [sp, #112]
  410c8c:	str	q1, [sp, #128]
  410c90:	str	q2, [sp, #144]
  410c94:	str	q3, [sp, #160]
  410c98:	str	q4, [sp, #176]
  410c9c:	str	q5, [sp, #192]
  410ca0:	str	q6, [sp, #208]
  410ca4:	str	q7, [sp, #224]
  410ca8:	stp	x2, x3, [sp, #240]
  410cac:	stp	x4, x5, [sp, #256]
  410cb0:	stp	x6, x7, [sp, #272]
  410cb4:	bl	4027c0 <__errno_location@plt>
  410cb8:	mov	x2, x0
  410cbc:	add	x3, sp, #0x28
  410cc0:	add	x1, sp, #0x48
  410cc4:	mov	x0, x19
  410cc8:	stp	x20, x3, [sp, #72]
  410ccc:	ldr	w2, [x2]
  410cd0:	str	w2, [sp, #88]
  410cd4:	bl	40f238 <ferror@plt+0xc9b8>
  410cd8:	mov	x0, x19
  410cdc:	bl	40ef40 <ferror@plt+0xc6c0>
  410ce0:	ldp	x19, x20, [sp, #16]
  410ce4:	ldp	x29, x30, [sp], #288
  410ce8:	ret
  410cec:	nop
  410cf0:	stp	x29, x30, [sp, #-304]!
  410cf4:	mov	x29, sp
  410cf8:	add	x8, sp, #0x100
  410cfc:	add	x9, sp, #0x130
  410d00:	stp	x19, x20, [sp, #16]
  410d04:	mov	x19, x0
  410d08:	mov	x20, x1
  410d0c:	mov	w0, #0xffffff80            	// #-128
  410d10:	mov	w1, #0xffffffd0            	// #-48
  410d14:	str	x21, [sp, #32]
  410d18:	stp	x9, x9, [sp, #56]
  410d1c:	str	x8, [sp, #72]
  410d20:	stp	w1, w0, [sp, #80]
  410d24:	str	q0, [sp, #128]
  410d28:	str	q1, [sp, #144]
  410d2c:	str	q2, [sp, #160]
  410d30:	str	q3, [sp, #176]
  410d34:	str	q4, [sp, #192]
  410d38:	str	q5, [sp, #208]
  410d3c:	str	q6, [sp, #224]
  410d40:	str	q7, [sp, #240]
  410d44:	stp	x2, x3, [sp, #256]
  410d48:	stp	x4, x5, [sp, #272]
  410d4c:	stp	x6, x7, [sp, #288]
  410d50:	bl	4027c0 <__errno_location@plt>
  410d54:	mov	x2, x0
  410d58:	add	x3, sp, #0x38
  410d5c:	add	x1, sp, #0x58
  410d60:	mov	x4, #0x1                   	// #1
  410d64:	mov	x0, x19
  410d68:	ldr	w2, [x2]
  410d6c:	ldur	x21, [x19, #36]
  410d70:	stur	x4, [x19, #36]
  410d74:	stp	x20, x3, [sp, #88]
  410d78:	str	w2, [sp, #104]
  410d7c:	bl	40f238 <ferror@plt+0xc9b8>
  410d80:	mov	x0, x19
  410d84:	bl	40ef40 <ferror@plt+0xc6c0>
  410d88:	stur	x21, [x19, #36]
  410d8c:	ldp	x19, x20, [sp, #16]
  410d90:	ldr	x21, [sp, #32]
  410d94:	ldp	x29, x30, [sp], #304
  410d98:	ret
  410d9c:	nop
  410da0:	stp	x29, x30, [sp, #-32]!
  410da4:	mov	x29, sp
  410da8:	stp	x19, x20, [sp, #16]
  410dac:	mov	x20, x0
  410db0:	mov	x19, x1
  410db4:	mov	x0, x1
  410db8:	bl	402270 <strlen@plt>
  410dbc:	ldr	w1, [x20, #40]
  410dc0:	add	x2, x19, x0
  410dc4:	mov	x0, x20
  410dc8:	cmp	w1, #0x0
  410dcc:	mov	x1, x19
  410dd0:	b.le	410de0 <ferror@plt+0xe560>
  410dd4:	ldp	x19, x20, [sp, #16]
  410dd8:	ldp	x29, x30, [sp], #32
  410ddc:	b	40eb98 <ferror@plt+0xc318>
  410de0:	ldp	x19, x20, [sp, #16]
  410de4:	ldp	x29, x30, [sp], #32
  410de8:	b	40ea80 <ferror@plt+0xc200>
  410dec:	nop
  410df0:	stp	x29, x30, [sp, #-32]!
  410df4:	mov	x29, sp
  410df8:	stp	x19, x20, [sp, #16]
  410dfc:	mov	x19, x0
  410e00:	ldr	w0, [x0, #24]
  410e04:	cbnz	w0, 410e14 <ferror@plt+0xe594>
  410e08:	ldp	x19, x20, [sp, #16]
  410e0c:	ldp	x29, x30, [sp], #32
  410e10:	ret
  410e14:	ldr	x1, [x19, #8]
  410e18:	ldr	w0, [x19, #40]
  410e1c:	ldr	x20, [x1, #176]
  410e20:	cmp	w0, #0x0
  410e24:	ldp	x0, x3, [x20, #24]
  410e28:	b.le	410e40 <ferror@plt+0xe5c0>
  410e2c:	ldr	w1, [x1, #200]
  410e30:	ldr	w2, [x19, #28]
  410e34:	sub	w1, w2, w1
  410e38:	cmp	w1, #0x0
  410e3c:	b.le	410e8c <ferror@plt+0xe60c>
  410e40:	cmp	x3, x0
  410e44:	b.eq	410e78 <ferror@plt+0xe5f8>  // b.none
  410e48:	add	x1, x0, #0x1
  410e4c:	str	x1, [x20, #24]
  410e50:	mov	w1, #0x20                  	// #32
  410e54:	strb	w1, [x0]
  410e58:	ldr	x1, [x19, #8]
  410e5c:	ldr	w0, [x1, #200]
  410e60:	add	w0, w0, #0x1
  410e64:	str	w0, [x1, #200]
  410e68:	str	wzr, [x19, #24]
  410e6c:	ldp	x19, x20, [sp, #16]
  410e70:	ldp	x29, x30, [sp], #32
  410e74:	ret
  410e78:	mov	x0, x20
  410e7c:	mov	x1, #0x1                   	// #1
  410e80:	bl	45c6e0 <_obstack_newchunk@@Base>
  410e84:	ldr	x0, [x20, #24]
  410e88:	b	410e48 <ferror@plt+0xe5c8>
  410e8c:	cmp	x3, x0
  410e90:	b.eq	410ec8 <ferror@plt+0xe648>  // b.none
  410e94:	add	x1, x0, #0x1
  410e98:	str	x1, [x20, #24]
  410e9c:	mov	w1, #0xa                   	// #10
  410ea0:	strb	w1, [x0]
  410ea4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  410ea8:	strb	wzr, [x19, #65]
  410eac:	ldr	x0, [x19, #8]
  410eb0:	ldrh	w1, [x1, #768]
  410eb4:	str	wzr, [x0, #200]
  410eb8:	tbnz	w1, #6, 410e68 <ferror@plt+0xe5e8>
  410ebc:	ldr	x20, [x0, #176]
  410ec0:	ldp	x0, x3, [x20, #24]
  410ec4:	b	410e40 <ferror@plt+0xe5c0>
  410ec8:	mov	x0, x20
  410ecc:	mov	x1, #0x1                   	// #1
  410ed0:	bl	45c6e0 <_obstack_newchunk@@Base>
  410ed4:	ldr	x0, [x20, #24]
  410ed8:	b	410e94 <ferror@plt+0xe614>
  410edc:	nop
  410ee0:	stp	x29, x30, [sp, #-32]!
  410ee4:	mov	x29, sp
  410ee8:	stp	x19, x20, [sp, #16]
  410eec:	mov	x19, x0
  410ef0:	ldr	x0, [x0, #8]
  410ef4:	ldr	x20, [x0, #176]
  410ef8:	ldp	x0, x1, [x20, #24]
  410efc:	cmp	x1, x0
  410f00:	b.eq	410f54 <ferror@plt+0xe6d4>  // b.none
  410f04:	add	x1, x0, #0x1
  410f08:	str	x1, [x20, #24]
  410f0c:	mov	w1, #0xa                   	// #10
  410f10:	strb	w1, [x0]
  410f14:	strb	wzr, [x19, #65]
  410f18:	ldr	x0, [x19, #8]
  410f1c:	str	wzr, [x0, #200]
  410f20:	strb	wzr, [x19, #64]
  410f24:	ldrb	w0, [x0, #332]
  410f28:	str	wzr, [x19, #32]
  410f2c:	cbz	w0, 410f44 <ferror@plt+0xe6c4>
  410f30:	mov	x0, x19
  410f34:	bl	40e118 <ferror@plt+0xb898>
  410f38:	ldr	x0, [x19, #8]
  410f3c:	ldr	x0, [x0, #192]
  410f40:	bl	4026b0 <fflush@plt>
  410f44:	strb	wzr, [x19, #65]
  410f48:	ldp	x19, x20, [sp, #16]
  410f4c:	ldp	x29, x30, [sp], #32
  410f50:	ret
  410f54:	mov	x0, x20
  410f58:	mov	x1, #0x1                   	// #1
  410f5c:	bl	45c6e0 <_obstack_newchunk@@Base>
  410f60:	ldr	x0, [x20, #24]
  410f64:	b	410f04 <ferror@plt+0xe684>
  410f68:	stp	x29, x30, [sp, #-80]!
  410f6c:	mov	x29, sp
  410f70:	ldr	x2, [x0, #8]
  410f74:	stp	x19, x20, [sp, #16]
  410f78:	mov	x20, x0
  410f7c:	ldr	w0, [x0, #32]
  410f80:	ldr	x19, [x2, #176]
  410f84:	add	w0, w0, w1
  410f88:	stp	x21, x22, [sp, #32]
  410f8c:	stp	x23, x24, [sp, #48]
  410f90:	ldr	x1, [x19, #32]
  410f94:	str	w0, [x20, #32]
  410f98:	ldr	x0, [x19, #24]
  410f9c:	cmp	x1, x0
  410fa0:	b.eq	4110b4 <ferror@plt+0xe834>  // b.none
  410fa4:	add	x1, x0, #0x1
  410fa8:	str	x1, [x19, #24]
  410fac:	mov	w22, #0xa                   	// #10
  410fb0:	strb	w22, [x0]
  410fb4:	strb	wzr, [x20, #65]
  410fb8:	mov	w21, #0x0                   	// #0
  410fbc:	ldr	x1, [x20, #8]
  410fc0:	str	wzr, [x1, #200]
  410fc4:	ldr	w24, [x20, #32]
  410fc8:	cmp	w24, #0x0
  410fcc:	b.le	411088 <ferror@plt+0xe808>
  410fd0:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  410fd4:	add	x23, x23, #0x2c0
  410fd8:	str	x25, [sp, #64]
  410fdc:	mov	w25, #0x20                  	// #32
  410fe0:	b	411008 <ferror@plt+0xe788>
  410fe4:	add	x0, x2, #0x1
  410fe8:	str	x0, [x19, #24]
  410fec:	strb	w25, [x2]
  410ff0:	ldr	x1, [x20, #8]
  410ff4:	ldr	w0, [x1, #200]
  410ff8:	add	w0, w0, #0x1
  410ffc:	str	w0, [x1, #200]
  411000:	cmp	w24, w21
  411004:	b.eq	411084 <ferror@plt+0xe804>  // b.none
  411008:	ldr	x19, [x1, #176]
  41100c:	add	w21, w21, #0x1
  411010:	ldr	w0, [x20, #40]
  411014:	cmp	w0, #0x0
  411018:	ldp	x2, x3, [x19, #24]
  41101c:	b.le	411034 <ferror@plt+0xe7b4>
  411020:	ldr	w1, [x1, #200]
  411024:	ldr	w0, [x20, #28]
  411028:	sub	w0, w0, w1
  41102c:	cmp	w0, #0x0
  411030:	b.le	411050 <ferror@plt+0xe7d0>
  411034:	cmp	x3, x2
  411038:	b.ne	410fe4 <ferror@plt+0xe764>  // b.any
  41103c:	mov	x0, x19
  411040:	mov	x1, #0x1                   	// #1
  411044:	bl	45c6e0 <_obstack_newchunk@@Base>
  411048:	ldr	x2, [x19, #24]
  41104c:	b	410fe4 <ferror@plt+0xe764>
  411050:	cmp	x3, x2
  411054:	b.eq	4110a0 <ferror@plt+0xe820>  // b.none
  411058:	add	x1, x2, #0x1
  41105c:	str	x1, [x19, #24]
  411060:	strb	w22, [x2]
  411064:	ldrh	w0, [x23, #64]
  411068:	ldr	x1, [x20, #8]
  41106c:	strb	wzr, [x20, #65]
  411070:	str	wzr, [x1, #200]
  411074:	tbnz	w0, #6, 411000 <ferror@plt+0xe780>
  411078:	ldr	x19, [x1, #176]
  41107c:	ldp	x2, x3, [x19, #24]
  411080:	b	411034 <ferror@plt+0xe7b4>
  411084:	ldr	x25, [sp, #64]
  411088:	strb	wzr, [x20, #65]
  41108c:	ldp	x19, x20, [sp, #16]
  411090:	ldp	x21, x22, [sp, #32]
  411094:	ldp	x23, x24, [sp, #48]
  411098:	ldp	x29, x30, [sp], #80
  41109c:	ret
  4110a0:	mov	x0, x19
  4110a4:	mov	x1, #0x1                   	// #1
  4110a8:	bl	45c6e0 <_obstack_newchunk@@Base>
  4110ac:	ldr	x2, [x19, #24]
  4110b0:	b	411058 <ferror@plt+0xe7d8>
  4110b4:	mov	x0, x19
  4110b8:	mov	x1, #0x1                   	// #1
  4110bc:	bl	45c6e0 <_obstack_newchunk@@Base>
  4110c0:	ldr	x0, [x19, #24]
  4110c4:	b	410fa4 <ferror@plt+0xe724>
  4110c8:	stp	x29, x30, [sp, #-48]!
  4110cc:	mov	x29, sp
  4110d0:	str	x21, [sp, #32]
  4110d4:	and	w21, w1, #0xff
  4110d8:	ldr	x1, [x0, #8]
  4110dc:	stp	x19, x20, [sp, #16]
  4110e0:	mov	x19, x0
  4110e4:	ldr	w0, [x0, #40]
  4110e8:	ldr	x20, [x1, #176]
  4110ec:	cmp	w0, #0x0
  4110f0:	ldp	x0, x3, [x20, #24]
  4110f4:	b.le	41110c <ferror@plt+0xe88c>
  4110f8:	ldr	w1, [x1, #200]
  4110fc:	ldr	w2, [x19, #28]
  411100:	sub	w1, w2, w1
  411104:	cmp	w1, #0x0
  411108:	b.le	4111c8 <ferror@plt+0xe948>
  41110c:	cmp	x3, x0
  411110:	b.eq	411220 <ferror@plt+0xe9a0>  // b.none
  411114:	add	x1, x0, #0x1
  411118:	str	x1, [x20, #24]
  41111c:	strb	w21, [x0]
  411120:	ldr	x0, [x19, #8]
  411124:	ldr	w1, [x0, #200]
  411128:	add	w1, w1, #0x1
  41112c:	str	w1, [x0, #200]
  411130:	ldr	x20, [x0, #176]
  411134:	ldr	w0, [x19, #40]
  411138:	cmp	w0, #0x0
  41113c:	ldp	x0, x3, [x20, #24]
  411140:	b.le	411154 <ferror@plt+0xe8d4>
  411144:	ldr	w2, [x19, #28]
  411148:	sub	w1, w2, w1
  41114c:	cmp	w1, #0x0
  411150:	b.le	41118c <ferror@plt+0xe90c>
  411154:	cmp	x3, x0
  411158:	b.eq	41120c <ferror@plt+0xe98c>  // b.none
  41115c:	add	x1, x0, #0x1
  411160:	str	x1, [x20, #24]
  411164:	mov	w1, #0x20                  	// #32
  411168:	strb	w1, [x0]
  41116c:	ldr	x1, [x19, #8]
  411170:	ldr	w0, [x1, #200]
  411174:	add	w0, w0, #0x1
  411178:	str	w0, [x1, #200]
  41117c:	ldp	x19, x20, [sp, #16]
  411180:	ldr	x21, [sp, #32]
  411184:	ldp	x29, x30, [sp], #48
  411188:	ret
  41118c:	cmp	x3, x0
  411190:	b.eq	411234 <ferror@plt+0xe9b4>  // b.none
  411194:	add	x1, x0, #0x1
  411198:	str	x1, [x20, #24]
  41119c:	mov	w1, #0xa                   	// #10
  4111a0:	strb	w1, [x0]
  4111a4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4111a8:	strb	wzr, [x19, #65]
  4111ac:	ldr	x0, [x19, #8]
  4111b0:	ldrh	w1, [x1, #768]
  4111b4:	str	wzr, [x0, #200]
  4111b8:	tbnz	w1, #6, 41117c <ferror@plt+0xe8fc>
  4111bc:	ldr	x20, [x0, #176]
  4111c0:	ldp	x0, x3, [x20, #24]
  4111c4:	b	411154 <ferror@plt+0xe8d4>
  4111c8:	cmp	x3, x0
  4111cc:	b.eq	411248 <ferror@plt+0xe9c8>  // b.none
  4111d0:	add	x1, x0, #0x1
  4111d4:	str	x1, [x20, #24]
  4111d8:	mov	w1, #0xa                   	// #10
  4111dc:	strb	w1, [x0]
  4111e0:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4111e4:	add	x2, x2, #0x2c0
  4111e8:	ldr	x0, [x19, #8]
  4111ec:	strb	wzr, [x19, #65]
  4111f0:	ldrh	w2, [x2, w21, sxtw #1]
  4111f4:	mov	w1, #0x0                   	// #0
  4111f8:	str	wzr, [x0, #200]
  4111fc:	tbnz	w2, #6, 411130 <ferror@plt+0xe8b0>
  411200:	ldr	x20, [x0, #176]
  411204:	ldp	x0, x3, [x20, #24]
  411208:	b	41110c <ferror@plt+0xe88c>
  41120c:	mov	x0, x20
  411210:	mov	x1, #0x1                   	// #1
  411214:	bl	45c6e0 <_obstack_newchunk@@Base>
  411218:	ldr	x0, [x20, #24]
  41121c:	b	41115c <ferror@plt+0xe8dc>
  411220:	mov	x0, x20
  411224:	mov	x1, #0x1                   	// #1
  411228:	bl	45c6e0 <_obstack_newchunk@@Base>
  41122c:	ldr	x0, [x20, #24]
  411230:	b	411114 <ferror@plt+0xe894>
  411234:	mov	x0, x20
  411238:	mov	x1, #0x1                   	// #1
  41123c:	bl	45c6e0 <_obstack_newchunk@@Base>
  411240:	ldr	x0, [x20, #24]
  411244:	b	411194 <ferror@plt+0xe914>
  411248:	mov	x0, x20
  41124c:	mov	x1, #0x1                   	// #1
  411250:	bl	45c6e0 <_obstack_newchunk@@Base>
  411254:	ldr	x0, [x20, #24]
  411258:	b	4111d0 <ferror@plt+0xe950>
  41125c:	nop
  411260:	stp	x29, x30, [sp, #-48]!
  411264:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  411268:	mov	x29, sp
  41126c:	stp	x19, x20, [sp, #16]
  411270:	mov	x19, x0
  411274:	ldr	x20, [x2, #1224]
  411278:	str	x21, [sp, #32]
  41127c:	and	w21, w1, #0xff
  411280:	mov	x0, x20
  411284:	bl	402270 <strlen@plt>
  411288:	ldr	w1, [x19, #40]
  41128c:	add	x2, x20, x0
  411290:	mov	x0, x19
  411294:	cmp	w1, #0x0
  411298:	mov	x1, x20
  41129c:	b.le	4112e8 <ferror@plt+0xea68>
  4112a0:	bl	40eb98 <ferror@plt+0xc318>
  4112a4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4112a8:	add	x1, x1, #0x628
  4112ac:	mov	x2, #0x5                   	// #5
  4112b0:	mov	w0, w21
  4112b4:	bl	407fc8 <ferror@plt+0x5748>
  4112b8:	mov	x20, x0
  4112bc:	bl	402270 <strlen@plt>
  4112c0:	add	x2, x20, x0
  4112c4:	ldr	w1, [x19, #40]
  4112c8:	mov	x0, x19
  4112cc:	cmp	w1, #0x0
  4112d0:	mov	x1, x20
  4112d4:	b.le	4112f0 <ferror@plt+0xea70>
  4112d8:	ldp	x19, x20, [sp, #16]
  4112dc:	ldr	x21, [sp, #32]
  4112e0:	ldp	x29, x30, [sp], #48
  4112e4:	b	40eb98 <ferror@plt+0xc318>
  4112e8:	bl	40ea80 <ferror@plt+0xc200>
  4112ec:	b	4112a4 <ferror@plt+0xea24>
  4112f0:	ldp	x19, x20, [sp, #16]
  4112f4:	ldr	x21, [sp, #32]
  4112f8:	ldp	x29, x30, [sp], #48
  4112fc:	b	40ea80 <ferror@plt+0xc200>
  411300:	stp	x29, x30, [sp, #-32]!
  411304:	mov	x29, sp
  411308:	stp	x19, x20, [sp, #16]
  41130c:	mov	x19, x0
  411310:	mov	w0, w1
  411314:	bl	408058 <ferror@plt+0x57d8>
  411318:	mov	x20, x0
  41131c:	bl	402270 <strlen@plt>
  411320:	add	x2, x20, x0
  411324:	ldr	w1, [x19, #40]
  411328:	mov	x0, x19
  41132c:	cmp	w1, #0x0
  411330:	mov	x1, x20
  411334:	b.le	411370 <ferror@plt+0xeaf0>
  411338:	bl	40eb98 <ferror@plt+0xc318>
  41133c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  411340:	ldr	x20, [x0, #1232]
  411344:	mov	x0, x20
  411348:	bl	402270 <strlen@plt>
  41134c:	ldr	w1, [x19, #40]
  411350:	add	x2, x20, x0
  411354:	mov	x0, x19
  411358:	cmp	w1, #0x0
  41135c:	mov	x1, x20
  411360:	b.le	411378 <ferror@plt+0xeaf8>
  411364:	ldp	x19, x20, [sp, #16]
  411368:	ldp	x29, x30, [sp], #32
  41136c:	b	40eb98 <ferror@plt+0xc318>
  411370:	bl	40ea80 <ferror@plt+0xc200>
  411374:	b	41133c <ferror@plt+0xeabc>
  411378:	ldp	x19, x20, [sp, #16]
  41137c:	ldp	x29, x30, [sp], #32
  411380:	b	40ea80 <ferror@plt+0xc200>
  411384:	nop
  411388:	stp	x29, x30, [sp, #-112]!
  41138c:	mov	x29, sp
  411390:	stp	x19, x20, [sp, #16]
  411394:	mov	x20, x0
  411398:	stp	x21, x22, [sp, #32]
  41139c:	bl	402270 <strlen@plt>
  4113a0:	cbz	x0, 4116fc <ferror@plt+0xee7c>
  4113a4:	ldrb	w2, [x20]
  4113a8:	mov	x19, x0
  4113ac:	mov	x6, x19
  4113b0:	mov	w0, #0x1                   	// #1
  4113b4:	mov	w3, w2
  4113b8:	mov	w9, w0
  4113bc:	mov	x5, x20
  4113c0:	mov	x7, #0x0                   	// #0
  4113c4:	mov	w8, #0x7                   	// #7
  4113c8:	mov	w11, #0x1fffff              	// #2097151
  4113cc:	mov	w12, #0x3ffffff             	// #67108863
  4113d0:	mov	w13, #0xffff2800            	// #-55296
  4113d4:	mov	w10, #0xffff                	// #65535
  4113d8:	tbz	w2, #7, 4115b0 <ferror@plt+0xed30>
  4113dc:	mov	x1, #0x0                   	// #0
  4113e0:	mov	x4, x1
  4113e4:	lsl	w3, w3, #1
  4113e8:	add	x1, x1, #0x1
  4113ec:	tbnz	w3, #7, 4113e0 <ferror@plt+0xeb60>
  4113f0:	sub	x4, x4, #0x1
  4113f4:	cmp	x4, #0x4
  4113f8:	ccmp	x1, x6, #0x2, ls  // ls = plast
  4113fc:	b.hi	411520 <ferror@plt+0xeca0>  // b.pmore
  411400:	ldrb	w3, [x5, #1]
  411404:	sub	w4, w8, w1
  411408:	and	w0, w3, #0xc0
  41140c:	lsl	w4, w9, w4
  411410:	sub	w4, w4, #0x1
  411414:	cmp	w0, #0x80
  411418:	and	w2, w4, w2
  41141c:	b.ne	411520 <ferror@plt+0xeca0>  // b.any
  411420:	bfi	w3, w2, #6, #26
  411424:	cmp	x1, #0x2
  411428:	mov	w2, w3
  41142c:	b.ls	411914 <ferror@plt+0xf094>  // b.plast
  411430:	ldrb	w0, [x5, #2]
  411434:	and	w3, w0, #0xc0
  411438:	cmp	w3, #0x80
  41143c:	b.ne	411520 <ferror@plt+0xeca0>  // b.any
  411440:	bfi	w0, w2, #6, #26
  411444:	cmp	x1, #0x3
  411448:	mov	w2, w0
  41144c:	b.eq	4114c8 <ferror@plt+0xec48>  // b.none
  411450:	ldrb	w0, [x5, #3]
  411454:	and	w3, w0, #0xc0
  411458:	cmp	w3, #0x80
  41145c:	b.ne	411520 <ferror@plt+0xeca0>  // b.any
  411460:	bfi	w0, w2, #6, #26
  411464:	cmp	x1, #0x4
  411468:	mov	w2, w0
  41146c:	b.eq	4114c8 <ferror@plt+0xec48>  // b.none
  411470:	ldrb	w0, [x5, #4]
  411474:	and	w3, w0, #0xc0
  411478:	cmp	w3, #0x80
  41147c:	b.ne	411520 <ferror@plt+0xeca0>  // b.any
  411480:	bfi	w0, w2, #6, #26
  411484:	cmp	x1, #0x5
  411488:	mov	w2, w0
  41148c:	b.eq	4114c8 <ferror@plt+0xec48>  // b.none
  411490:	ldrb	w0, [x5, #5]
  411494:	and	w3, w0, #0xc0
  411498:	cmp	w3, #0x80
  41149c:	b.ne	411520 <ferror@plt+0xeca0>  // b.any
  4114a0:	bfi	w0, w2, #6, #26
  4114a4:	cmp	x1, #0x6
  4114a8:	mov	w2, w0
  4114ac:	b.eq	4114c8 <ferror@plt+0xec48>  // b.none
  4114b0:	ldrb	w0, [x5, #6]
  4114b4:	and	w3, w0, #0xc0
  4114b8:	cmp	w3, #0x80
  4114bc:	b.ne	411520 <ferror@plt+0xeca0>  // b.any
  4114c0:	bfi	w0, w2, #6, #26
  4114c4:	mov	w2, w0
  4114c8:	cmp	w2, #0x7f
  4114cc:	b.ls	411520 <ferror@plt+0xeca0>  // b.plast
  4114d0:	cmp	w2, #0x7ff
  4114d4:	b.ls	411520 <ferror@plt+0xeca0>  // b.plast
  4114d8:	cmp	w2, w10
  4114dc:	ccmp	x1, #0x3, #0x0, ls  // ls = plast
  4114e0:	b.hi	411520 <ferror@plt+0xeca0>  // b.pmore
  4114e4:	cmp	w2, w11
  4114e8:	ccmp	x1, #0x4, #0x0, ls  // ls = plast
  4114ec:	b.hi	411520 <ferror@plt+0xeca0>  // b.pmore
  4114f0:	cmp	w2, w12
  4114f4:	cset	w0, ls  // ls = plast
  4114f8:	cmp	x1, #0x6
  4114fc:	csel	w0, w0, wzr, eq  // eq = none
  411500:	cbnz	w0, 411520 <ferror@plt+0xeca0>
  411504:	add	w3, w2, w13
  411508:	cmp	w3, #0x7ff
  41150c:	b.ls	411520 <ferror@plt+0xeca0>  // b.plast
  411510:	sub	w2, w2, #0x7f
  411514:	sxtw	x1, w1
  411518:	cmp	w2, #0x20
  41151c:	b.hi	4115c8 <ferror@plt+0xed48>  // b.pmore
  411520:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  411524:	stp	x23, x24, [sp, #48]
  411528:	lsl	x0, x19, #2
  41152c:	ldr	x1, [x1, #1208]
  411530:	add	x0, x0, #0x1
  411534:	add	x22, x20, x19
  411538:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41153c:	add	x23, x23, #0xa70
  411540:	blr	x1
  411544:	mov	x21, x0
  411548:	mov	x19, x0
  41154c:	b	411564 <ferror@plt+0xece4>
  411550:	strb	w2, [x0], #1
  411554:	add	x20, x20, #0x1
  411558:	cmp	x22, x20
  41155c:	mov	x19, x0
  411560:	b.eq	411594 <ferror@plt+0xed14>  // b.none
  411564:	ldrb	w2, [x20]
  411568:	mov	x0, x19
  41156c:	sub	w3, w2, #0x20
  411570:	and	w3, w3, #0xff
  411574:	cmp	w3, #0x5e
  411578:	b.ls	411550 <ferror@plt+0xecd0>  // b.plast
  41157c:	mov	x1, x23
  411580:	add	x20, x20, #0x1
  411584:	bl	402310 <sprintf@plt>
  411588:	add	x19, x19, #0x4
  41158c:	cmp	x22, x20
  411590:	b.ne	411564 <ferror@plt+0xece4>  // b.any
  411594:	strb	wzr, [x19]
  411598:	ldp	x23, x24, [sp, #48]
  41159c:	mov	x0, x21
  4115a0:	ldp	x19, x20, [sp, #16]
  4115a4:	ldp	x21, x22, [sp, #32]
  4115a8:	ldp	x29, x30, [sp], #112
  4115ac:	ret
  4115b0:	cmp	w2, #0x1f
  4115b4:	b.ls	411520 <ferror@plt+0xeca0>  // b.plast
  4115b8:	sub	w2, w2, #0x7f
  4115bc:	cmp	w2, #0x20
  4115c0:	b.ls	411520 <ferror@plt+0xeca0>  // b.plast
  4115c4:	mov	x1, #0x1                   	// #1
  4115c8:	add	x7, x7, x1
  4115cc:	cmp	x19, x7
  4115d0:	b.ls	411608 <ferror@plt+0xed88>  // b.plast
  4115d4:	ldrb	w2, [x20, x7]
  4115d8:	add	x5, x20, x7
  4115dc:	subs	x6, x19, x7
  4115e0:	mov	w3, w2
  4115e4:	b.ne	4113d8 <ferror@plt+0xeb58>  // b.any
  4115e8:	stp	x23, x24, [sp, #48]
  4115ec:	stp	x25, x26, [sp, #64]
  4115f0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4115f4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4115f8:	add	x2, x2, #0xa58
  4115fc:	add	x0, x0, #0x980
  411600:	mov	w1, #0x71b                 	// #1819
  411604:	bl	4028b0 <ferror@plt+0x30>
  411608:	cbnz	w0, 4116fc <ferror@plt+0xee7c>
  41160c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  411610:	ldrb	w0, [x0, #1816]
  411614:	cbnz	w0, 4116fc <ferror@plt+0xee7c>
  411618:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  41161c:	stp	x23, x24, [sp, #48]
  411620:	ldr	x0, [x0, #1808]
  411624:	stp	x25, x26, [sp, #64]
  411628:	cbz	x0, 411714 <ferror@plt+0xee94>
  41162c:	lsl	x22, x19, #2
  411630:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  411634:	adrp	x24, 49e000 <_obstack_memory_used@@Base+0x416d8>
  411638:	add	x1, x1, #0xa78
  41163c:	add	x25, x22, #0x1
  411640:	bl	4026d0 <iconv_open@plt>
  411644:	add	x26, x24, #0x4b8
  411648:	mov	x23, x0
  41164c:	cmn	x0, #0x1
  411650:	b.eq	41171c <ferror@plt+0xee9c>  // b.none
  411654:	ldr	x1, [x26]
  411658:	sub	x2, x25, #0x1
  41165c:	str	x20, [sp, #80]
  411660:	mov	x0, x25
  411664:	stp	x19, x2, [sp, #96]
  411668:	blr	x1
  41166c:	mov	x21, x0
  411670:	mov	x4, #0x0                   	// #0
  411674:	mov	x0, x23
  411678:	mov	x3, #0x0                   	// #0
  41167c:	mov	x2, #0x0                   	// #0
  411680:	mov	x1, #0x0                   	// #0
  411684:	str	x21, [sp, #88]
  411688:	bl	4025e0 <iconv@plt>
  41168c:	cmn	x0, #0x1
  411690:	b.eq	411908 <ferror@plt+0xf088>  // b.none
  411694:	add	x4, sp, #0x68
  411698:	add	x3, sp, #0x58
  41169c:	add	x2, sp, #0x60
  4116a0:	add	x1, sp, #0x50
  4116a4:	mov	x0, x23
  4116a8:	bl	4025e0 <iconv@plt>
  4116ac:	cmn	x0, #0x1
  4116b0:	b.eq	4118f8 <ferror@plt+0xf078>  // b.none
  4116b4:	ldr	x1, [sp, #96]
  4116b8:	cbnz	x1, 4118f8 <ferror@plt+0xf078>
  4116bc:	cbnz	x0, 411908 <ferror@plt+0xf088>
  4116c0:	add	x4, sp, #0x68
  4116c4:	add	x3, sp, #0x58
  4116c8:	mov	x0, x23
  4116cc:	mov	x2, #0x0                   	// #0
  4116d0:	mov	x1, #0x0                   	// #0
  4116d4:	bl	4025e0 <iconv@plt>
  4116d8:	cmn	x0, #0x1
  4116dc:	b.eq	4118f8 <ferror@plt+0xf078>  // b.none
  4116e0:	ldr	x1, [sp, #88]
  4116e4:	mov	x0, x23
  4116e8:	strb	wzr, [x1]
  4116ec:	bl	4022d0 <iconv_close@plt>
  4116f0:	ldp	x23, x24, [sp, #48]
  4116f4:	ldp	x25, x26, [sp, #64]
  4116f8:	b	41159c <ferror@plt+0xed1c>
  4116fc:	mov	x21, x20
  411700:	mov	x0, x21
  411704:	ldp	x19, x20, [sp, #16]
  411708:	ldp	x21, x22, [sp, #32]
  41170c:	ldp	x29, x30, [sp], #112
  411710:	ret
  411714:	lsl	x22, x19, #2
  411718:	adrp	x24, 49e000 <_obstack_memory_used@@Base+0x416d8>
  41171c:	ldr	x1, [x24, #1208]
  411720:	add	x0, x22, x19
  411724:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0x116d8>
  411728:	mov	x22, #0x0                   	// #0
  41172c:	lsl	x0, x0, #1
  411730:	add	x25, x25, #0xa80
  411734:	add	x0, x0, #0x1
  411738:	blr	x1
  41173c:	ldrb	w1, [x20]
  411740:	mov	x21, x0
  411744:	mov	x26, x0
  411748:	mov	x5, x19
  41174c:	mov	w0, w1
  411750:	mov	x4, x20
  411754:	mov	w24, #0x7                   	// #7
  411758:	mov	w23, #0x1                   	// #1
  41175c:	tbz	w1, #7, 4118ec <ferror@plt+0xf06c>
  411760:	mov	x3, #0x0                   	// #0
  411764:	nop
  411768:	mov	x2, x3
  41176c:	lsl	w0, w0, #1
  411770:	add	x3, x3, #0x1
  411774:	tbnz	w0, #7, 411768 <ferror@plt+0xeee8>
  411778:	sub	x0, x2, #0x1
  41177c:	mov	w2, #0xffffffff            	// #-1
  411780:	cmp	x0, #0x4
  411784:	ccmp	x3, x5, #0x2, ls  // ls = plast
  411788:	b.hi	4118bc <ferror@plt+0xf03c>  // b.pmore
  41178c:	ldrb	w5, [x4, #1]
  411790:	sub	w0, w24, w3
  411794:	and	w6, w5, #0xc0
  411798:	lsl	w0, w23, w0
  41179c:	add	w0, w0, w2
  4117a0:	cmp	w6, #0x80
  4117a4:	and	w0, w0, w1
  4117a8:	b.ne	4118bc <ferror@plt+0xf03c>  // b.any
  4117ac:	mov	w2, w5
  4117b0:	cmp	x3, #0x2
  4117b4:	bfi	w2, w0, #6, #26
  4117b8:	b.ls	4118ac <ferror@plt+0xf02c>  // b.plast
  4117bc:	ldrb	w0, [x4, #2]
  4117c0:	and	w1, w0, #0xc0
  4117c4:	cmp	w1, #0x80
  4117c8:	b.ne	4118b8 <ferror@plt+0xf038>  // b.any
  4117cc:	bfi	w0, w2, #6, #26
  4117d0:	cmp	x3, #0x3
  4117d4:	mov	w2, w0
  4117d8:	b.eq	411854 <ferror@plt+0xefd4>  // b.none
  4117dc:	ldrb	w0, [x4, #3]
  4117e0:	and	w1, w0, #0xc0
  4117e4:	cmp	w1, #0x80
  4117e8:	b.ne	4118b8 <ferror@plt+0xf038>  // b.any
  4117ec:	bfi	w0, w2, #6, #26
  4117f0:	cmp	x3, #0x4
  4117f4:	mov	w2, w0
  4117f8:	b.eq	411854 <ferror@plt+0xefd4>  // b.none
  4117fc:	ldrb	w0, [x4, #4]
  411800:	and	w1, w0, #0xc0
  411804:	cmp	w1, #0x80
  411808:	b.ne	4118b8 <ferror@plt+0xf038>  // b.any
  41180c:	bfi	w0, w2, #6, #26
  411810:	cmp	x3, #0x5
  411814:	mov	w2, w0
  411818:	b.eq	411854 <ferror@plt+0xefd4>  // b.none
  41181c:	ldrb	w0, [x4, #5]
  411820:	and	w1, w0, #0xc0
  411824:	cmp	w1, #0x80
  411828:	b.ne	4118b8 <ferror@plt+0xf038>  // b.any
  41182c:	bfi	w0, w2, #6, #26
  411830:	cmp	x3, #0x6
  411834:	mov	w2, w0
  411838:	b.eq	411854 <ferror@plt+0xefd4>  // b.none
  41183c:	ldrb	w0, [x4, #6]
  411840:	and	w1, w0, #0xc0
  411844:	cmp	w1, #0x80
  411848:	b.ne	4118b8 <ferror@plt+0xf038>  // b.any
  41184c:	bfi	w0, w2, #6, #26
  411850:	mov	w2, w0
  411854:	cmp	w2, #0x7f
  411858:	b.ls	4118b8 <ferror@plt+0xf038>  // b.plast
  41185c:	cmp	w2, #0x7ff
  411860:	b.ls	4118b8 <ferror@plt+0xf038>  // b.plast
  411864:	mov	w0, #0xffff                	// #65535
  411868:	cmp	w2, w0
  41186c:	ccmp	x3, #0x3, #0x0, ls  // ls = plast
  411870:	b.hi	4118b8 <ferror@plt+0xf038>  // b.pmore
  411874:	mov	w0, #0x1fffff              	// #2097151
  411878:	cmp	w2, w0
  41187c:	ccmp	x3, #0x4, #0x0, ls  // ls = plast
  411880:	b.hi	4118b8 <ferror@plt+0xf038>  // b.pmore
  411884:	mov	w0, #0x3ffffff             	// #67108863
  411888:	cmp	w2, w0
  41188c:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
  411890:	b.eq	4118b8 <ferror@plt+0xf038>  // b.none
  411894:	mov	w0, #0xffff2800            	// #-55296
  411898:	add	w0, w2, w0
  41189c:	cmp	w0, #0x7ff
  4118a0:	b.ls	4118b8 <ferror@plt+0xf038>  // b.plast
  4118a4:	add	x22, x22, w3, sxtw
  4118a8:	b	4118bc <ferror@plt+0xf03c>
  4118ac:	cmp	w2, #0x7f
  4118b0:	b.hi	411874 <ferror@plt+0xeff4>  // b.pmore
  4118b4:	nop
  4118b8:	mov	w2, #0xffffffff            	// #-1
  4118bc:	mov	x0, x26
  4118c0:	mov	x1, x25
  4118c4:	add	x26, x26, #0xa
  4118c8:	bl	402310 <sprintf@plt>
  4118cc:	cmp	x19, x22
  4118d0:	b.ls	411920 <ferror@plt+0xf0a0>  // b.plast
  4118d4:	ldrb	w1, [x20, x22]
  4118d8:	add	x4, x20, x22
  4118dc:	subs	x5, x19, x22
  4118e0:	mov	w0, w1
  4118e4:	b.eq	4115f0 <ferror@plt+0xed70>  // b.none
  4118e8:	tbnz	w1, #7, 411760 <ferror@plt+0xeee0>
  4118ec:	add	x22, x22, #0x1
  4118f0:	strb	w1, [x26], #1
  4118f4:	b	4118cc <ferror@plt+0xf04c>
  4118f8:	bl	4027c0 <__errno_location@plt>
  4118fc:	ldr	w0, [x0]
  411900:	cmp	w0, #0x7
  411904:	b.eq	411930 <ferror@plt+0xf0b0>  // b.none
  411908:	mov	x0, x23
  41190c:	bl	4022d0 <iconv_close@plt>
  411910:	b	41171c <ferror@plt+0xee9c>
  411914:	cmp	w3, #0x7f
  411918:	b.hi	4114e4 <ferror@plt+0xec64>  // b.pmore
  41191c:	b	411520 <ferror@plt+0xeca0>
  411920:	strb	wzr, [x26]
  411924:	ldp	x23, x24, [sp, #48]
  411928:	ldp	x25, x26, [sp, #64]
  41192c:	b	41159c <ferror@plt+0xed1c>
  411930:	ldr	x1, [x26, #8]
  411934:	lsl	x25, x25, #1
  411938:	mov	x0, x21
  41193c:	blr	x1
  411940:	b	411654 <ferror@plt+0xedd4>
  411944:	nop
  411948:	stp	x29, x30, [sp, #-48]!
  41194c:	mov	x29, sp
  411950:	stp	x19, x20, [sp, #16]
  411954:	mov	x20, x1
  411958:	ldrh	w1, [x1, #2]
  41195c:	mov	x19, x0
  411960:	ldr	x0, [x0, #8]
  411964:	cbnz	w1, 4119b0 <ferror@plt+0xf130>
  411968:	ldrh	w2, [x20]
  41196c:	add	x0, x0, #0xcc
  411970:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  411974:	add	x1, x1, #0xa88
  411978:	bl	402310 <sprintf@plt>
  41197c:	ldr	x20, [x19, #8]
  411980:	add	x20, x20, #0xcc
  411984:	mov	x0, x20
  411988:	bl	402270 <strlen@plt>
  41198c:	ldr	w1, [x19, #40]
  411990:	add	x2, x20, x0
  411994:	cmp	w1, #0x0
  411998:	b.le	411b4c <ferror@plt+0xf2cc>
  41199c:	mov	x1, x20
  4119a0:	mov	x0, x19
  4119a4:	ldp	x19, x20, [sp, #16]
  4119a8:	ldp	x29, x30, [sp], #48
  4119ac:	b	40eb98 <ferror@plt+0xc318>
  4119b0:	stp	x21, x22, [sp, #32]
  4119b4:	ldr	w1, [x19, #40]
  4119b8:	ldr	x21, [x0, #176]
  4119bc:	cmp	w1, #0x0
  4119c0:	ldp	x1, x3, [x21, #24]
  4119c4:	b.le	4119dc <ferror@plt+0xf15c>
  4119c8:	ldr	w0, [x0, #200]
  4119cc:	ldr	w2, [x19, #28]
  4119d0:	sub	w2, w2, w0
  4119d4:	cmp	w2, #0x0
  4119d8:	b.le	411b9c <ferror@plt+0xf31c>
  4119dc:	cmp	x3, x1
  4119e0:	b.eq	411b60 <ferror@plt+0xf2e0>  // b.none
  4119e4:	add	x0, x1, #0x1
  4119e8:	str	x0, [x21, #24]
  4119ec:	mov	w0, #0x5b                  	// #91
  4119f0:	strb	w0, [x1]
  4119f4:	ldr	x0, [x19, #8]
  4119f8:	ldr	w1, [x0, #200]
  4119fc:	add	w1, w1, #0x1
  411a00:	str	w1, [x0, #200]
  411a04:	ldrh	w2, [x20]
  411a08:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x116d8>
  411a0c:	add	x22, x22, #0xa88
  411a10:	add	x0, x0, #0xcc
  411a14:	mov	x1, x22
  411a18:	bl	402310 <sprintf@plt>
  411a1c:	ldr	x21, [x19, #8]
  411a20:	add	x21, x21, #0xcc
  411a24:	mov	x0, x21
  411a28:	bl	402270 <strlen@plt>
  411a2c:	ldr	w1, [x19, #40]
  411a30:	add	x2, x21, x0
  411a34:	mov	x0, x19
  411a38:	cmp	w1, #0x0
  411a3c:	mov	x1, x21
  411a40:	b.le	411b44 <ferror@plt+0xf2c4>
  411a44:	bl	40eb98 <ferror@plt+0xc318>
  411a48:	ldr	x1, [x19, #8]
  411a4c:	ldr	w0, [x19, #40]
  411a50:	ldr	x21, [x1, #176]
  411a54:	cmp	w0, #0x0
  411a58:	ldp	x0, x3, [x21, #24]
  411a5c:	b.le	411a74 <ferror@plt+0xf1f4>
  411a60:	ldr	w1, [x1, #200]
  411a64:	ldr	w2, [x19, #28]
  411a68:	sub	w1, w2, w1
  411a6c:	cmp	w1, #0x0
  411a70:	b.le	411c14 <ferror@plt+0xf394>
  411a74:	cmp	x3, x0
  411a78:	b.eq	411b88 <ferror@plt+0xf308>  // b.none
  411a7c:	add	x1, x0, #0x1
  411a80:	str	x1, [x21, #24]
  411a84:	mov	w1, #0x2c                  	// #44
  411a88:	strb	w1, [x0]
  411a8c:	ldr	x0, [x19, #8]
  411a90:	ldr	w1, [x0, #200]
  411a94:	add	w1, w1, #0x1
  411a98:	str	w1, [x0, #200]
  411a9c:	ldrh	w2, [x20, #2]
  411aa0:	mov	x1, x22
  411aa4:	add	x0, x0, #0xcc
  411aa8:	bl	402310 <sprintf@plt>
  411aac:	ldr	x20, [x19, #8]
  411ab0:	add	x20, x20, #0xcc
  411ab4:	mov	x0, x20
  411ab8:	bl	402270 <strlen@plt>
  411abc:	ldr	w1, [x19, #40]
  411ac0:	add	x2, x20, x0
  411ac4:	mov	x0, x19
  411ac8:	cmp	w1, #0x0
  411acc:	mov	x1, x20
  411ad0:	b.le	411b3c <ferror@plt+0xf2bc>
  411ad4:	bl	40eb98 <ferror@plt+0xc318>
  411ad8:	ldr	x1, [x19, #8]
  411adc:	ldr	w0, [x19, #40]
  411ae0:	ldr	x20, [x1, #176]
  411ae4:	cmp	w0, #0x0
  411ae8:	ldp	x0, x3, [x20, #24]
  411aec:	b.le	411b04 <ferror@plt+0xf284>
  411af0:	ldr	w1, [x1, #200]
  411af4:	ldr	w2, [x19, #28]
  411af8:	sub	w1, w2, w1
  411afc:	cmp	w1, #0x0
  411b00:	b.le	411bd8 <ferror@plt+0xf358>
  411b04:	cmp	x3, x0
  411b08:	b.eq	411b74 <ferror@plt+0xf2f4>  // b.none
  411b0c:	add	x1, x0, #0x1
  411b10:	str	x1, [x20, #24]
  411b14:	mov	w1, #0x5d                  	// #93
  411b18:	strb	w1, [x0]
  411b1c:	ldr	x1, [x19, #8]
  411b20:	ldr	w0, [x1, #200]
  411b24:	add	w0, w0, #0x1
  411b28:	str	w0, [x1, #200]
  411b2c:	ldp	x19, x20, [sp, #16]
  411b30:	ldp	x21, x22, [sp, #32]
  411b34:	ldp	x29, x30, [sp], #48
  411b38:	ret
  411b3c:	bl	40ea80 <ferror@plt+0xc200>
  411b40:	b	411ad8 <ferror@plt+0xf258>
  411b44:	bl	40ea80 <ferror@plt+0xc200>
  411b48:	b	411a48 <ferror@plt+0xf1c8>
  411b4c:	mov	x1, x20
  411b50:	mov	x0, x19
  411b54:	ldp	x19, x20, [sp, #16]
  411b58:	ldp	x29, x30, [sp], #48
  411b5c:	b	40ea80 <ferror@plt+0xc200>
  411b60:	mov	x1, #0x1                   	// #1
  411b64:	mov	x0, x21
  411b68:	bl	45c6e0 <_obstack_newchunk@@Base>
  411b6c:	ldr	x1, [x21, #24]
  411b70:	b	4119e4 <ferror@plt+0xf164>
  411b74:	mov	x0, x20
  411b78:	mov	x1, #0x1                   	// #1
  411b7c:	bl	45c6e0 <_obstack_newchunk@@Base>
  411b80:	ldr	x0, [x20, #24]
  411b84:	b	411b0c <ferror@plt+0xf28c>
  411b88:	mov	x0, x21
  411b8c:	mov	x1, #0x1                   	// #1
  411b90:	bl	45c6e0 <_obstack_newchunk@@Base>
  411b94:	ldr	x0, [x21, #24]
  411b98:	b	411a7c <ferror@plt+0xf1fc>
  411b9c:	cmp	x3, x1
  411ba0:	b.eq	411c64 <ferror@plt+0xf3e4>  // b.none
  411ba4:	add	x0, x1, #0x1
  411ba8:	str	x0, [x21, #24]
  411bac:	mov	w0, #0xa                   	// #10
  411bb0:	strb	w0, [x1]
  411bb4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  411bb8:	strb	wzr, [x19, #65]
  411bbc:	ldr	x0, [x19, #8]
  411bc0:	ldrh	w1, [x1, #886]
  411bc4:	str	wzr, [x0, #200]
  411bc8:	tbnz	w1, #6, 411a04 <ferror@plt+0xf184>
  411bcc:	ldr	x21, [x0, #176]
  411bd0:	ldp	x1, x3, [x21, #24]
  411bd4:	b	4119dc <ferror@plt+0xf15c>
  411bd8:	cmp	x3, x0
  411bdc:	b.eq	411c50 <ferror@plt+0xf3d0>  // b.none
  411be0:	add	x1, x0, #0x1
  411be4:	str	x1, [x20, #24]
  411be8:	mov	w1, #0xa                   	// #10
  411bec:	strb	w1, [x0]
  411bf0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  411bf4:	strb	wzr, [x19, #65]
  411bf8:	ldr	x0, [x19, #8]
  411bfc:	ldrh	w1, [x1, #890]
  411c00:	str	wzr, [x0, #200]
  411c04:	tbnz	w1, #6, 411b2c <ferror@plt+0xf2ac>
  411c08:	ldr	x20, [x0, #176]
  411c0c:	ldp	x0, x3, [x20, #24]
  411c10:	b	411b04 <ferror@plt+0xf284>
  411c14:	cmp	x0, x3
  411c18:	b.eq	411c78 <ferror@plt+0xf3f8>  // b.none
  411c1c:	add	x1, x0, #0x1
  411c20:	str	x1, [x21, #24]
  411c24:	mov	w1, #0xa                   	// #10
  411c28:	strb	w1, [x0]
  411c2c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  411c30:	strb	wzr, [x19, #65]
  411c34:	ldr	x0, [x19, #8]
  411c38:	ldrh	w1, [x1, #792]
  411c3c:	str	wzr, [x0, #200]
  411c40:	tbnz	w1, #6, 411a9c <ferror@plt+0xf21c>
  411c44:	ldr	x21, [x0, #176]
  411c48:	ldp	x0, x3, [x21, #24]
  411c4c:	b	411a74 <ferror@plt+0xf1f4>
  411c50:	mov	x0, x20
  411c54:	mov	x1, #0x1                   	// #1
  411c58:	bl	45c6e0 <_obstack_newchunk@@Base>
  411c5c:	ldr	x0, [x20, #24]
  411c60:	b	411be0 <ferror@plt+0xf360>
  411c64:	mov	x1, #0x1                   	// #1
  411c68:	mov	x0, x21
  411c6c:	bl	45c6e0 <_obstack_newchunk@@Base>
  411c70:	ldr	x1, [x21, #24]
  411c74:	b	411ba4 <ferror@plt+0xf324>
  411c78:	mov	x0, x21
  411c7c:	mov	x1, #0x1                   	// #1
  411c80:	bl	45c6e0 <_obstack_newchunk@@Base>
  411c84:	ldr	x0, [x21, #24]
  411c88:	b	411c1c <ferror@plt+0xf39c>
  411c8c:	nop
  411c90:	stp	x29, x30, [sp, #-48]!
  411c94:	mov	x29, sp
  411c98:	stp	x19, x20, [sp, #16]
  411c9c:	mov	x20, x1
  411ca0:	mov	x19, x0
  411ca4:	ldr	x1, [x1, #8]
  411ca8:	ldr	x0, [x0, #8]
  411cac:	cbnz	x1, 411cf8 <ferror@plt+0xf478>
  411cb0:	ldr	x2, [x20]
  411cb4:	add	x0, x0, #0xcc
  411cb8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  411cbc:	add	x1, x1, #0xa88
  411cc0:	bl	402310 <sprintf@plt>
  411cc4:	ldr	x20, [x19, #8]
  411cc8:	add	x20, x20, #0xcc
  411ccc:	mov	x0, x20
  411cd0:	bl	402270 <strlen@plt>
  411cd4:	ldr	w1, [x19, #40]
  411cd8:	add	x2, x20, x0
  411cdc:	cmp	w1, #0x0
  411ce0:	b.le	411e94 <ferror@plt+0xf614>
  411ce4:	mov	x1, x20
  411ce8:	mov	x0, x19
  411cec:	ldp	x19, x20, [sp, #16]
  411cf0:	ldp	x29, x30, [sp], #48
  411cf4:	b	40eb98 <ferror@plt+0xc318>
  411cf8:	stp	x21, x22, [sp, #32]
  411cfc:	ldr	w1, [x19, #40]
  411d00:	ldr	x21, [x0, #176]
  411d04:	cmp	w1, #0x0
  411d08:	ldp	x1, x3, [x21, #24]
  411d0c:	b.le	411d24 <ferror@plt+0xf4a4>
  411d10:	ldr	w0, [x0, #200]
  411d14:	ldr	w2, [x19, #28]
  411d18:	sub	w2, w2, w0
  411d1c:	cmp	w2, #0x0
  411d20:	b.le	411ee4 <ferror@plt+0xf664>
  411d24:	cmp	x3, x1
  411d28:	b.eq	411ea8 <ferror@plt+0xf628>  // b.none
  411d2c:	add	x0, x1, #0x1
  411d30:	str	x0, [x21, #24]
  411d34:	mov	w0, #0x5b                  	// #91
  411d38:	strb	w0, [x1]
  411d3c:	ldr	x0, [x19, #8]
  411d40:	ldr	w1, [x0, #200]
  411d44:	add	w1, w1, #0x1
  411d48:	str	w1, [x0, #200]
  411d4c:	ldr	x2, [x20]
  411d50:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x116d8>
  411d54:	add	x22, x22, #0xa88
  411d58:	add	x0, x0, #0xcc
  411d5c:	mov	x1, x22
  411d60:	bl	402310 <sprintf@plt>
  411d64:	ldr	x21, [x19, #8]
  411d68:	add	x21, x21, #0xcc
  411d6c:	mov	x0, x21
  411d70:	bl	402270 <strlen@plt>
  411d74:	ldr	w1, [x19, #40]
  411d78:	add	x2, x21, x0
  411d7c:	mov	x0, x19
  411d80:	cmp	w1, #0x0
  411d84:	mov	x1, x21
  411d88:	b.le	411e8c <ferror@plt+0xf60c>
  411d8c:	bl	40eb98 <ferror@plt+0xc318>
  411d90:	ldr	x1, [x19, #8]
  411d94:	ldr	w0, [x19, #40]
  411d98:	ldr	x21, [x1, #176]
  411d9c:	cmp	w0, #0x0
  411da0:	ldp	x0, x3, [x21, #24]
  411da4:	b.le	411dbc <ferror@plt+0xf53c>
  411da8:	ldr	w1, [x1, #200]
  411dac:	ldr	w2, [x19, #28]
  411db0:	sub	w1, w2, w1
  411db4:	cmp	w1, #0x0
  411db8:	b.le	411f5c <ferror@plt+0xf6dc>
  411dbc:	cmp	x3, x0
  411dc0:	b.eq	411ed0 <ferror@plt+0xf650>  // b.none
  411dc4:	add	x1, x0, #0x1
  411dc8:	str	x1, [x21, #24]
  411dcc:	mov	w1, #0x2c                  	// #44
  411dd0:	strb	w1, [x0]
  411dd4:	ldr	x0, [x19, #8]
  411dd8:	ldr	w1, [x0, #200]
  411ddc:	add	w1, w1, #0x1
  411de0:	str	w1, [x0, #200]
  411de4:	ldr	x2, [x20, #8]
  411de8:	mov	x1, x22
  411dec:	add	x0, x0, #0xcc
  411df0:	bl	402310 <sprintf@plt>
  411df4:	ldr	x20, [x19, #8]
  411df8:	add	x20, x20, #0xcc
  411dfc:	mov	x0, x20
  411e00:	bl	402270 <strlen@plt>
  411e04:	ldr	w1, [x19, #40]
  411e08:	add	x2, x20, x0
  411e0c:	mov	x0, x19
  411e10:	cmp	w1, #0x0
  411e14:	mov	x1, x20
  411e18:	b.le	411e84 <ferror@plt+0xf604>
  411e1c:	bl	40eb98 <ferror@plt+0xc318>
  411e20:	ldr	x1, [x19, #8]
  411e24:	ldr	w0, [x19, #40]
  411e28:	ldr	x20, [x1, #176]
  411e2c:	cmp	w0, #0x0
  411e30:	ldp	x0, x3, [x20, #24]
  411e34:	b.le	411e4c <ferror@plt+0xf5cc>
  411e38:	ldr	w1, [x1, #200]
  411e3c:	ldr	w2, [x19, #28]
  411e40:	sub	w1, w2, w1
  411e44:	cmp	w1, #0x0
  411e48:	b.le	411f20 <ferror@plt+0xf6a0>
  411e4c:	cmp	x3, x0
  411e50:	b.eq	411ebc <ferror@plt+0xf63c>  // b.none
  411e54:	add	x1, x0, #0x1
  411e58:	str	x1, [x20, #24]
  411e5c:	mov	w1, #0x5d                  	// #93
  411e60:	strb	w1, [x0]
  411e64:	ldr	x1, [x19, #8]
  411e68:	ldr	w0, [x1, #200]
  411e6c:	add	w0, w0, #0x1
  411e70:	str	w0, [x1, #200]
  411e74:	ldp	x19, x20, [sp, #16]
  411e78:	ldp	x21, x22, [sp, #32]
  411e7c:	ldp	x29, x30, [sp], #48
  411e80:	ret
  411e84:	bl	40ea80 <ferror@plt+0xc200>
  411e88:	b	411e20 <ferror@plt+0xf5a0>
  411e8c:	bl	40ea80 <ferror@plt+0xc200>
  411e90:	b	411d90 <ferror@plt+0xf510>
  411e94:	mov	x1, x20
  411e98:	mov	x0, x19
  411e9c:	ldp	x19, x20, [sp, #16]
  411ea0:	ldp	x29, x30, [sp], #48
  411ea4:	b	40ea80 <ferror@plt+0xc200>
  411ea8:	mov	x1, #0x1                   	// #1
  411eac:	mov	x0, x21
  411eb0:	bl	45c6e0 <_obstack_newchunk@@Base>
  411eb4:	ldr	x1, [x21, #24]
  411eb8:	b	411d2c <ferror@plt+0xf4ac>
  411ebc:	mov	x0, x20
  411ec0:	mov	x1, #0x1                   	// #1
  411ec4:	bl	45c6e0 <_obstack_newchunk@@Base>
  411ec8:	ldr	x0, [x20, #24]
  411ecc:	b	411e54 <ferror@plt+0xf5d4>
  411ed0:	mov	x0, x21
  411ed4:	mov	x1, #0x1                   	// #1
  411ed8:	bl	45c6e0 <_obstack_newchunk@@Base>
  411edc:	ldr	x0, [x21, #24]
  411ee0:	b	411dc4 <ferror@plt+0xf544>
  411ee4:	cmp	x3, x1
  411ee8:	b.eq	411fac <ferror@plt+0xf72c>  // b.none
  411eec:	add	x0, x1, #0x1
  411ef0:	str	x0, [x21, #24]
  411ef4:	mov	w0, #0xa                   	// #10
  411ef8:	strb	w0, [x1]
  411efc:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  411f00:	strb	wzr, [x19, #65]
  411f04:	ldr	x0, [x19, #8]
  411f08:	ldrh	w1, [x1, #886]
  411f0c:	str	wzr, [x0, #200]
  411f10:	tbnz	w1, #6, 411d4c <ferror@plt+0xf4cc>
  411f14:	ldr	x21, [x0, #176]
  411f18:	ldp	x1, x3, [x21, #24]
  411f1c:	b	411d24 <ferror@plt+0xf4a4>
  411f20:	cmp	x3, x0
  411f24:	b.eq	411f98 <ferror@plt+0xf718>  // b.none
  411f28:	add	x1, x0, #0x1
  411f2c:	str	x1, [x20, #24]
  411f30:	mov	w1, #0xa                   	// #10
  411f34:	strb	w1, [x0]
  411f38:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  411f3c:	strb	wzr, [x19, #65]
  411f40:	ldr	x0, [x19, #8]
  411f44:	ldrh	w1, [x1, #890]
  411f48:	str	wzr, [x0, #200]
  411f4c:	tbnz	w1, #6, 411e74 <ferror@plt+0xf5f4>
  411f50:	ldr	x20, [x0, #176]
  411f54:	ldp	x0, x3, [x20, #24]
  411f58:	b	411e4c <ferror@plt+0xf5cc>
  411f5c:	cmp	x0, x3
  411f60:	b.eq	411fc0 <ferror@plt+0xf740>  // b.none
  411f64:	add	x1, x0, #0x1
  411f68:	str	x1, [x21, #24]
  411f6c:	mov	w1, #0xa                   	// #10
  411f70:	strb	w1, [x0]
  411f74:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  411f78:	strb	wzr, [x19, #65]
  411f7c:	ldr	x0, [x19, #8]
  411f80:	ldrh	w1, [x1, #792]
  411f84:	str	wzr, [x0, #200]
  411f88:	tbnz	w1, #6, 411de4 <ferror@plt+0xf564>
  411f8c:	ldr	x21, [x0, #176]
  411f90:	ldp	x0, x3, [x21, #24]
  411f94:	b	411dbc <ferror@plt+0xf53c>
  411f98:	mov	x0, x20
  411f9c:	mov	x1, #0x1                   	// #1
  411fa0:	bl	45c6e0 <_obstack_newchunk@@Base>
  411fa4:	ldr	x0, [x20, #24]
  411fa8:	b	411f28 <ferror@plt+0xf6a8>
  411fac:	mov	x1, #0x1                   	// #1
  411fb0:	mov	x0, x21
  411fb4:	bl	45c6e0 <_obstack_newchunk@@Base>
  411fb8:	ldr	x1, [x21, #24]
  411fbc:	b	411eec <ferror@plt+0xf66c>
  411fc0:	mov	x0, x21
  411fc4:	mov	x1, #0x1                   	// #1
  411fc8:	bl	45c6e0 <_obstack_newchunk@@Base>
  411fcc:	ldr	x0, [x21, #24]
  411fd0:	b	411f64 <ferror@plt+0xf6e4>
  411fd4:	nop
  411fd8:	stp	x29, x30, [sp, #-48]!
  411fdc:	mov	x29, sp
  411fe0:	stp	x19, x20, [sp, #16]
  411fe4:	mov	x20, x1
  411fe8:	mov	x19, x0
  411fec:	ldr	x1, [x1, #8]
  411ff0:	ldr	x0, [x0, #8]
  411ff4:	cbnz	x1, 412040 <ferror@plt+0xf7c0>
  411ff8:	ldr	x2, [x20]
  411ffc:	add	x0, x0, #0xcc
  412000:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412004:	add	x1, x1, #0xa88
  412008:	bl	402310 <sprintf@plt>
  41200c:	ldr	x20, [x19, #8]
  412010:	add	x20, x20, #0xcc
  412014:	mov	x0, x20
  412018:	bl	402270 <strlen@plt>
  41201c:	ldr	w1, [x19, #40]
  412020:	add	x2, x20, x0
  412024:	cmp	w1, #0x0
  412028:	b.le	4121dc <ferror@plt+0xf95c>
  41202c:	mov	x1, x20
  412030:	mov	x0, x19
  412034:	ldp	x19, x20, [sp, #16]
  412038:	ldp	x29, x30, [sp], #48
  41203c:	b	40eb98 <ferror@plt+0xc318>
  412040:	stp	x21, x22, [sp, #32]
  412044:	ldr	w1, [x19, #40]
  412048:	ldr	x21, [x0, #176]
  41204c:	cmp	w1, #0x0
  412050:	ldp	x1, x3, [x21, #24]
  412054:	b.le	41206c <ferror@plt+0xf7ec>
  412058:	ldr	w0, [x0, #200]
  41205c:	ldr	w2, [x19, #28]
  412060:	sub	w2, w2, w0
  412064:	cmp	w2, #0x0
  412068:	b.le	41222c <ferror@plt+0xf9ac>
  41206c:	cmp	x3, x1
  412070:	b.eq	4121f0 <ferror@plt+0xf970>  // b.none
  412074:	add	x0, x1, #0x1
  412078:	str	x0, [x21, #24]
  41207c:	mov	w0, #0x5b                  	// #91
  412080:	strb	w0, [x1]
  412084:	ldr	x0, [x19, #8]
  412088:	ldr	w1, [x0, #200]
  41208c:	add	w1, w1, #0x1
  412090:	str	w1, [x0, #200]
  412094:	ldr	x2, [x20]
  412098:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41209c:	add	x22, x22, #0xa88
  4120a0:	add	x0, x0, #0xcc
  4120a4:	mov	x1, x22
  4120a8:	bl	402310 <sprintf@plt>
  4120ac:	ldr	x21, [x19, #8]
  4120b0:	add	x21, x21, #0xcc
  4120b4:	mov	x0, x21
  4120b8:	bl	402270 <strlen@plt>
  4120bc:	ldr	w1, [x19, #40]
  4120c0:	add	x2, x21, x0
  4120c4:	mov	x0, x19
  4120c8:	cmp	w1, #0x0
  4120cc:	mov	x1, x21
  4120d0:	b.le	4121d4 <ferror@plt+0xf954>
  4120d4:	bl	40eb98 <ferror@plt+0xc318>
  4120d8:	ldr	x1, [x19, #8]
  4120dc:	ldr	w0, [x19, #40]
  4120e0:	ldr	x21, [x1, #176]
  4120e4:	cmp	w0, #0x0
  4120e8:	ldp	x0, x3, [x21, #24]
  4120ec:	b.le	412104 <ferror@plt+0xf884>
  4120f0:	ldr	w1, [x1, #200]
  4120f4:	ldr	w2, [x19, #28]
  4120f8:	sub	w1, w2, w1
  4120fc:	cmp	w1, #0x0
  412100:	b.le	4122a4 <ferror@plt+0xfa24>
  412104:	cmp	x0, x3
  412108:	b.eq	412218 <ferror@plt+0xf998>  // b.none
  41210c:	add	x1, x0, #0x1
  412110:	str	x1, [x21, #24]
  412114:	mov	w1, #0x2c                  	// #44
  412118:	strb	w1, [x0]
  41211c:	ldr	x0, [x19, #8]
  412120:	ldr	w1, [x0, #200]
  412124:	add	w1, w1, #0x1
  412128:	str	w1, [x0, #200]
  41212c:	ldr	x2, [x20, #8]
  412130:	mov	x1, x22
  412134:	add	x0, x0, #0xcc
  412138:	bl	402310 <sprintf@plt>
  41213c:	ldr	x20, [x19, #8]
  412140:	add	x20, x20, #0xcc
  412144:	mov	x0, x20
  412148:	bl	402270 <strlen@plt>
  41214c:	ldr	w1, [x19, #40]
  412150:	add	x2, x20, x0
  412154:	mov	x0, x19
  412158:	cmp	w1, #0x0
  41215c:	mov	x1, x20
  412160:	b.le	4121cc <ferror@plt+0xf94c>
  412164:	bl	40eb98 <ferror@plt+0xc318>
  412168:	ldr	x1, [x19, #8]
  41216c:	ldr	w0, [x19, #40]
  412170:	ldr	x20, [x1, #176]
  412174:	cmp	w0, #0x0
  412178:	ldp	x0, x3, [x20, #24]
  41217c:	b.le	412194 <ferror@plt+0xf914>
  412180:	ldr	w1, [x1, #200]
  412184:	ldr	w2, [x19, #28]
  412188:	sub	w1, w2, w1
  41218c:	cmp	w1, #0x0
  412190:	b.le	412268 <ferror@plt+0xf9e8>
  412194:	cmp	x3, x0
  412198:	b.eq	412204 <ferror@plt+0xf984>  // b.none
  41219c:	add	x1, x0, #0x1
  4121a0:	str	x1, [x20, #24]
  4121a4:	mov	w1, #0x5d                  	// #93
  4121a8:	strb	w1, [x0]
  4121ac:	ldr	x1, [x19, #8]
  4121b0:	ldr	w0, [x1, #200]
  4121b4:	add	w0, w0, #0x1
  4121b8:	str	w0, [x1, #200]
  4121bc:	ldp	x19, x20, [sp, #16]
  4121c0:	ldp	x21, x22, [sp, #32]
  4121c4:	ldp	x29, x30, [sp], #48
  4121c8:	ret
  4121cc:	bl	40ea80 <ferror@plt+0xc200>
  4121d0:	b	412168 <ferror@plt+0xf8e8>
  4121d4:	bl	40ea80 <ferror@plt+0xc200>
  4121d8:	b	4120d8 <ferror@plt+0xf858>
  4121dc:	mov	x1, x20
  4121e0:	mov	x0, x19
  4121e4:	ldp	x19, x20, [sp, #16]
  4121e8:	ldp	x29, x30, [sp], #48
  4121ec:	b	40ea80 <ferror@plt+0xc200>
  4121f0:	mov	x1, #0x1                   	// #1
  4121f4:	mov	x0, x21
  4121f8:	bl	45c6e0 <_obstack_newchunk@@Base>
  4121fc:	ldr	x1, [x21, #24]
  412200:	b	412074 <ferror@plt+0xf7f4>
  412204:	mov	x0, x20
  412208:	mov	x1, #0x1                   	// #1
  41220c:	bl	45c6e0 <_obstack_newchunk@@Base>
  412210:	ldr	x0, [x20, #24]
  412214:	b	41219c <ferror@plt+0xf91c>
  412218:	mov	x0, x21
  41221c:	mov	x1, #0x1                   	// #1
  412220:	bl	45c6e0 <_obstack_newchunk@@Base>
  412224:	ldr	x0, [x21, #24]
  412228:	b	41210c <ferror@plt+0xf88c>
  41222c:	cmp	x3, x1
  412230:	b.eq	4122f4 <ferror@plt+0xfa74>  // b.none
  412234:	add	x0, x1, #0x1
  412238:	str	x0, [x21, #24]
  41223c:	mov	w0, #0xa                   	// #10
  412240:	strb	w0, [x1]
  412244:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  412248:	strb	wzr, [x19, #65]
  41224c:	ldr	x0, [x19, #8]
  412250:	ldrh	w1, [x1, #886]
  412254:	str	wzr, [x0, #200]
  412258:	tbnz	w1, #6, 412094 <ferror@plt+0xf814>
  41225c:	ldr	x21, [x0, #176]
  412260:	ldp	x1, x3, [x21, #24]
  412264:	b	41206c <ferror@plt+0xf7ec>
  412268:	cmp	x3, x0
  41226c:	b.eq	4122e0 <ferror@plt+0xfa60>  // b.none
  412270:	add	x1, x0, #0x1
  412274:	str	x1, [x20, #24]
  412278:	mov	w1, #0xa                   	// #10
  41227c:	strb	w1, [x0]
  412280:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  412284:	strb	wzr, [x19, #65]
  412288:	ldr	x0, [x19, #8]
  41228c:	ldrh	w1, [x1, #890]
  412290:	str	wzr, [x0, #200]
  412294:	tbnz	w1, #6, 4121bc <ferror@plt+0xf93c>
  412298:	ldr	x20, [x0, #176]
  41229c:	ldp	x0, x3, [x20, #24]
  4122a0:	b	412194 <ferror@plt+0xf914>
  4122a4:	cmp	x3, x0
  4122a8:	b.eq	412308 <ferror@plt+0xfa88>  // b.none
  4122ac:	add	x1, x0, #0x1
  4122b0:	str	x1, [x21, #24]
  4122b4:	mov	w1, #0xa                   	// #10
  4122b8:	strb	w1, [x0]
  4122bc:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4122c0:	strb	wzr, [x19, #65]
  4122c4:	ldr	x0, [x19, #8]
  4122c8:	ldrh	w1, [x1, #792]
  4122cc:	str	wzr, [x0, #200]
  4122d0:	tbnz	w1, #6, 41212c <ferror@plt+0xf8ac>
  4122d4:	ldr	x21, [x0, #176]
  4122d8:	ldp	x0, x3, [x21, #24]
  4122dc:	b	412104 <ferror@plt+0xf884>
  4122e0:	mov	x0, x20
  4122e4:	mov	x1, #0x1                   	// #1
  4122e8:	bl	45c6e0 <_obstack_newchunk@@Base>
  4122ec:	ldr	x0, [x20, #24]
  4122f0:	b	412270 <ferror@plt+0xf9f0>
  4122f4:	mov	x1, #0x1                   	// #1
  4122f8:	mov	x0, x21
  4122fc:	bl	45c6e0 <_obstack_newchunk@@Base>
  412300:	ldr	x1, [x21, #24]
  412304:	b	412234 <ferror@plt+0xf9b4>
  412308:	mov	x0, x21
  41230c:	mov	x1, #0x1                   	// #1
  412310:	bl	45c6e0 <_obstack_newchunk@@Base>
  412314:	ldr	x0, [x21, #24]
  412318:	b	4122ac <ferror@plt+0xfa2c>
  41231c:	nop
  412320:	stp	x29, x30, [sp, #-64]!
  412324:	mov	w0, #0x0                   	// #0
  412328:	mov	x29, sp
  41232c:	stp	x19, x20, [sp, #16]
  412330:	adrp	x19, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412334:	add	x19, x19, #0x148
  412338:	mov	x1, x19
  41233c:	stp	x21, x22, [sp, #32]
  412340:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  412344:	str	x23, [sp, #48]
  412348:	bl	402870 <setlocale@plt>
  41234c:	mov	x1, x19
  412350:	mov	w0, #0x5                   	// #5
  412354:	bl	402870 <setlocale@plt>
  412358:	adrp	x19, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41235c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412360:	add	x1, x1, #0xab0
  412364:	add	x19, x19, #0xac8
  412368:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x196d8>
  41236c:	mov	x0, x19
  412370:	bl	402410 <bindtextdomain@plt>
  412374:	mov	x0, x19
  412378:	bl	4025b0 <textdomain@plt>
  41237c:	add	x21, x21, #0xf10
  412380:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412384:	add	x0, x0, #0xad0
  412388:	bl	402830 <gettext@plt>
  41238c:	add	x23, x20, #0x4c8
  412390:	str	x0, [x20, #1224]
  412394:	mov	x0, x21
  412398:	bl	402830 <gettext@plt>
  41239c:	mov	x1, x0
  4123a0:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4123a4:	mov	w0, #0xe                   	// #14
  4123a8:	str	x1, [x23, #8]
  4123ac:	bl	4023a0 <nl_langinfo@plt>
  4123b0:	str	x0, [x22, #1808]
  4123b4:	cbz	x0, 4123d8 <ferror@plt+0xfb58>
  4123b8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4123bc:	mov	x19, x0
  4123c0:	add	x1, x1, #0xad8
  4123c4:	bl	402470 <strcasecmp@plt>
  4123c8:	cbnz	w0, 412444 <ferror@plt+0xfbc4>
  4123cc:	add	x0, x22, #0x710
  4123d0:	mov	w1, #0x1                   	// #1
  4123d4:	strb	w1, [x0, #8]
  4123d8:	ldr	x0, [x20, #1224]
  4123dc:	ldrb	w1, [x0]
  4123e0:	cmp	w1, #0x60
  4123e4:	b.ne	412430 <ferror@plt+0xfbb0>  // b.any
  4123e8:	ldrb	w0, [x0, #1]
  4123ec:	cbnz	w0, 412430 <ferror@plt+0xfbb0>
  4123f0:	ldr	x0, [x23, #8]
  4123f4:	ldrb	w1, [x0]
  4123f8:	cmp	w1, #0x27
  4123fc:	b.ne	412430 <ferror@plt+0xfbb0>  // b.any
  412400:	ldrb	w0, [x0, #1]
  412404:	cbnz	w0, 412430 <ferror@plt+0xfbb0>
  412408:	add	x22, x22, #0x710
  41240c:	str	x21, [x20, #1224]
  412410:	ldrb	w0, [x22, #8]
  412414:	cbz	w0, 412430 <ferror@plt+0xfbb0>
  412418:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41241c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412420:	add	x1, x1, #0xae8
  412424:	add	x0, x0, #0xaf0
  412428:	str	x1, [x20, #1224]
  41242c:	str	x0, [x23, #8]
  412430:	ldp	x19, x20, [sp, #16]
  412434:	ldp	x21, x22, [sp, #32]
  412438:	ldr	x23, [sp, #48]
  41243c:	ldp	x29, x30, [sp], #64
  412440:	ret
  412444:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412448:	mov	x0, x19
  41244c:	add	x1, x1, #0xae0
  412450:	bl	402470 <strcasecmp@plt>
  412454:	cbnz	w0, 4123d8 <ferror@plt+0xfb58>
  412458:	b	4123cc <ferror@plt+0xfb4c>
  41245c:	nop
  412460:	stp	x29, x30, [sp, #-32]!
  412464:	mov	x2, #0x0                   	// #0
  412468:	mov	x29, sp
  41246c:	stp	x19, x20, [sp, #16]
  412470:	mov	x19, x0
  412474:	mov	x1, x19
  412478:	mov	x0, #0x0                   	// #0
  41247c:	bl	402290 <mbstowcs@plt>
  412480:	add	x2, x0, #0x1
  412484:	mov	x1, x19
  412488:	mov	x19, x0
  41248c:	lsl	x3, x2, #2
  412490:	add	x3, x3, #0xf
  412494:	and	x3, x3, #0xfffffffffffffff0
  412498:	sub	sp, sp, x3
  41249c:	mov	x20, sp
  4124a0:	mov	x0, x20
  4124a4:	bl	402290 <mbstowcs@plt>
  4124a8:	mov	x1, x19
  4124ac:	mov	x0, x20
  4124b0:	bl	4023f0 <wcswidth@plt>
  4124b4:	mov	sp, x29
  4124b8:	sxtw	x0, w0
  4124bc:	ldp	x19, x20, [sp, #16]
  4124c0:	ldp	x29, x30, [sp], #32
  4124c4:	ret
  4124c8:	stp	x29, x30, [sp, #-32]!
  4124cc:	mov	x29, sp
  4124d0:	stp	x19, x20, [sp, #16]
  4124d4:	bl	412460 <ferror@plt+0xfbe0>
  4124d8:	mov	x19, x0
  4124dc:	add	x0, x0, #0x1
  4124e0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4124e4:	mov	x20, x0
  4124e8:	mov	x2, x19
  4124ec:	mov	w1, #0x20                  	// #32
  4124f0:	bl	402440 <memset@plt>
  4124f4:	mov	x0, x20
  4124f8:	strb	wzr, [x20, x19]
  4124fc:	ldp	x19, x20, [sp, #16]
  412500:	ldp	x29, x30, [sp], #32
  412504:	ret
  412508:	cmp	w0, w1
  41250c:	b.cs	412538 <ferror@plt+0xfcb8>  // b.hs, b.nlast
  412510:	mov	w2, #0x4                   	// #4
  412514:	cbz	w0, 41252c <ferror@plt+0xfcac>
  412518:	lsl	w3, w0, #1
  41251c:	cmp	w0, #0xf
  412520:	add	w2, w3, w0
  412524:	lsr	w2, w2, #1
  412528:	csel	w2, w2, w3, hi  // hi = pmore
  41252c:	cmp	w2, w1
  412530:	csel	w0, w2, w1, cs  // cs = hs, nlast
  412534:	ret
  412538:	stp	x29, x30, [sp, #-16]!
  41253c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412540:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412544:	mov	x29, sp
  412548:	add	x2, x2, #0xb50
  41254c:	add	x0, x0, #0xb68
  412550:	mov	w1, #0xa2                  	// #162
  412554:	bl	4028b0 <ferror@plt+0x30>
  412558:	sub	sp, sp, #0xd0
  41255c:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  412560:	mov	w0, #0xa                   	// #10
  412564:	stp	x29, x30, [sp, #16]
  412568:	add	x29, sp, #0x10
  41256c:	ldr	x1, [x1, #1312]
  412570:	stp	x19, x20, [sp, #32]
  412574:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  412578:	add	x19, x19, #0x720
  41257c:	stp	x21, x22, [sp, #48]
  412580:	stp	x23, x24, [sp, #64]
  412584:	stp	x25, x26, [sp, #80]
  412588:	stp	x27, x28, [sp, #96]
  41258c:	bl	402340 <fputc@plt>
  412590:	mov	x1, #0x10                  	// #16
  412594:	ldr	x2, [x19, #40]
  412598:	ldp	x3, x0, [x2, #16]
  41259c:	sub	x0, x3, x0
  4125a0:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  4125a4:	ldr	x1, [x19, #40]
  4125a8:	mov	x21, x0
  4125ac:	ldp	x0, x2, [x1]
  4125b0:	add	x2, x0, x2, lsl #4
  4125b4:	cmp	x0, x2
  4125b8:	b.cs	4125dc <ferror@plt+0xfd5c>  // b.hs, b.nlast
  4125bc:	nop
  4125c0:	ldr	x3, [x0]
  4125c4:	mov	x4, x0
  4125c8:	add	x0, x0, #0x10
  4125cc:	cmp	x3, #0x1
  4125d0:	b.hi	4128ec <ferror@plt+0x1006c>  // b.pmore
  4125d4:	cmp	x2, x0
  4125d8:	b.hi	4125c0 <ferror@plt+0xfd40>  // b.pmore
  4125dc:	mov	x1, #0x0                   	// #0
  4125e0:	mov	w20, #0xffffffff            	// #-1
  4125e4:	nop
  4125e8:	adrp	x23, 413000 <ferror@plt+0x10780>
  4125ec:	add	x23, x23, #0x2a8
  4125f0:	mov	x3, x23
  4125f4:	mov	x0, x21
  4125f8:	mov	x2, #0x10                  	// #16
  4125fc:	bl	418650 <ferror@plt+0x15dd0>
  412600:	ldr	x2, [x19, #40]
  412604:	mov	x1, #0x10                  	// #16
  412608:	ldp	x3, x0, [x2, #16]
  41260c:	sub	x0, x3, x0
  412610:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  412614:	ldr	x2, [x19, #40]
  412618:	mov	x22, x0
  41261c:	ldp	x1, x0, [x2]
  412620:	add	x0, x1, x0, lsl #4
  412624:	cmp	x1, x0
  412628:	b.cs	41264c <ferror@plt+0xfdcc>  // b.hs, b.nlast
  41262c:	nop
  412630:	ldr	x4, [x1]
  412634:	mov	x3, x1
  412638:	add	x1, x1, #0x10
  41263c:	cmp	x4, #0x1
  412640:	b.hi	41294c <ferror@plt+0x100cc>  // b.pmore
  412644:	cmp	x0, x1
  412648:	b.hi	412630 <ferror@plt+0xfdb0>  // b.pmore
  41264c:	mov	x0, x22
  412650:	mov	x3, x23
  412654:	mov	x2, #0x10                  	// #16
  412658:	mov	x1, #0x0                   	// #0
  41265c:	bl	418650 <ferror@plt+0x15dd0>
  412660:	str	xzr, [sp, #192]
  412664:	movi	v0.4s, #0x0
  412668:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41266c:	ldr	q1, [x0, #3184]
  412670:	str	q0, [sp, #176]
  412674:	stp	q0, q1, [sp, #144]
  412678:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  41267c:	add	x19, x19, #0x520
  412680:	mov	x0, x22
  412684:	mov	x22, #0x8c                  	// #140
  412688:	bl	402640 <free@plt>
  41268c:	nop
  412690:	ldr	x1, [x19]
  412694:	mov	w0, #0x2d                  	// #45
  412698:	bl	402340 <fputc@plt>
  41269c:	subs	x22, x22, #0x1
  4126a0:	b.ne	412690 <ferror@plt+0xfe10>  // b.any
  4126a4:	ldr	x1, [x19]
  4126a8:	mov	x2, #0x8c                  	// #140
  4126ac:	mov	w0, #0xa                   	// #10
  4126b0:	str	x2, [sp, #120]
  4126b4:	adrp	x28, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4126b8:	adrp	x27, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4126bc:	bl	402340 <fputc@plt>
  4126c0:	add	x28, x28, #0xb78
  4126c4:	ldr	x0, [x19]
  4126c8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4126cc:	add	x1, x1, #0xbe0
  4126d0:	str	x1, [sp]
  4126d4:	add	x27, x27, #0xb88
  4126d8:	adrp	x26, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4126dc:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4126e0:	add	x26, x26, #0xb90
  4126e4:	add	x25, x25, #0xb98
  4126e8:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4126ec:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4126f0:	add	x24, x24, #0xba0
  4126f4:	add	x23, x23, #0xbb0
  4126f8:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4126fc:	add	x22, x22, #0xbc0
  412700:	mov	x7, x28
  412704:	mov	x6, x27
  412708:	mov	x5, x26
  41270c:	mov	x4, x25
  412710:	mov	x3, x24
  412714:	mov	x2, x23
  412718:	str	x1, [sp, #128]
  41271c:	mov	x1, x22
  412720:	bl	402840 <fprintf@plt>
  412724:	nop
  412728:	ldr	x1, [x19]
  41272c:	mov	w0, #0x2d                  	// #45
  412730:	bl	402340 <fputc@plt>
  412734:	ldr	x0, [sp, #120]
  412738:	subs	x0, x0, #0x1
  41273c:	str	x0, [sp, #120]
  412740:	b.ne	412728 <ferror@plt+0xfea8>  // b.any
  412744:	ldr	x1, [x19]
  412748:	mov	w0, #0xa                   	// #10
  41274c:	bl	402340 <fputc@plt>
  412750:	tbnz	w20, #31, 41278c <ferror@plt+0xff0c>
  412754:	sbfiz	x3, x20, #4, #32
  412758:	sub	x0, x21, #0x10
  41275c:	sub	x20, x3, w20, sxtw #4
  412760:	add	x3, x21, x3
  412764:	add	x20, x20, x0
  412768:	ldp	x1, x0, [x3]
  41276c:	sub	x3, x3, #0x10
  412770:	add	x2, sp, #0x90
  412774:	str	x3, [sp, #120]
  412778:	str	x3, [sp, #136]
  41277c:	bl	413308 <ferror@plt+0x10a88>
  412780:	ldr	x3, [sp, #120]
  412784:	cmp	x20, x3
  412788:	b.ne	412768 <ferror@plt+0xfee8>  // b.any
  41278c:	mov	x20, #0x8c                  	// #140
  412790:	ldr	x1, [x19]
  412794:	mov	w0, #0x2d                  	// #45
  412798:	bl	402340 <fputc@plt>
  41279c:	subs	x20, x20, #0x1
  4127a0:	b.ne	412790 <ferror@plt+0xff10>  // b.any
  4127a4:	ldr	x1, [x19]
  4127a8:	mov	w0, #0xa                   	// #10
  4127ac:	mov	x20, #0x8c                  	// #140
  4127b0:	bl	402340 <fputc@plt>
  4127b4:	ldr	x0, [sp, #128]
  4127b8:	str	x0, [sp]
  4127bc:	mov	x7, x28
  4127c0:	mov	x6, x27
  4127c4:	ldr	x0, [x19]
  4127c8:	mov	x5, x26
  4127cc:	mov	x4, x25
  4127d0:	mov	x3, x24
  4127d4:	mov	x2, x23
  4127d8:	mov	x1, x22
  4127dc:	bl	402840 <fprintf@plt>
  4127e0:	ldr	x1, [x19]
  4127e4:	mov	w0, #0x2d                  	// #45
  4127e8:	bl	402340 <fputc@plt>
  4127ec:	subs	x20, x20, #0x1
  4127f0:	b.ne	4127e0 <ferror@plt+0xff60>  // b.any
  4127f4:	ldr	x1, [x19]
  4127f8:	mov	w0, #0xa                   	// #10
  4127fc:	bl	402340 <fputc@plt>
  412800:	ldr	x3, [sp, #144]
  412804:	mov	x1, #0x27ff                	// #10239
  412808:	mov	w4, #0x20                  	// #32
  41280c:	cmp	x3, x1
  412810:	ldr	x0, [x19]
  412814:	b.ls	41282c <ferror@plt+0xffac>  // b.plast
  412818:	mov	w1, #0x9fffff              	// #10485759
  41281c:	cmp	x3, x1
  412820:	b.hi	412a44 <ferror@plt+0x101c4>  // b.pmore
  412824:	lsr	x3, x3, #10
  412828:	mov	w4, #0x6b                  	// #107
  41282c:	ldr	x5, [sp, #152]
  412830:	mov	x1, #0x27ff                	// #10239
  412834:	mov	w6, #0x20                  	// #32
  412838:	cmp	x5, x1
  41283c:	b.ls	412854 <ferror@plt+0xffd4>  // b.plast
  412840:	mov	w1, #0x9fffff              	// #10485759
  412844:	cmp	x5, x1
  412848:	b.hi	412a50 <ferror@plt+0x101d0>  // b.pmore
  41284c:	lsr	x5, x5, #10
  412850:	mov	w6, #0x6b                  	// #107
  412854:	ldr	x7, [sp, #176]
  412858:	mov	x2, #0x27ff                	// #10239
  41285c:	mov	w1, #0x20                  	// #32
  412860:	cmp	x7, x2
  412864:	b.ls	41287c <ferror@plt+0xfffc>  // b.plast
  412868:	mov	w1, #0x9fffff              	// #10485759
  41286c:	cmp	x7, x1
  412870:	b.hi	412a38 <ferror@plt+0x101b8>  // b.pmore
  412874:	lsr	x7, x7, #10
  412878:	mov	w1, #0x6b                  	// #107
  41287c:	str	w1, [sp]
  412880:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412884:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412888:	add	x2, x2, #0xbf0
  41288c:	add	x1, x1, #0xbf8
  412890:	mov	x20, #0x8c                  	// #140
  412894:	bl	402840 <fprintf@plt>
  412898:	ldr	x1, [x19]
  41289c:	mov	w0, #0x2d                  	// #45
  4128a0:	bl	402340 <fputc@plt>
  4128a4:	subs	x20, x20, #0x1
  4128a8:	b.ne	412898 <ferror@plt+0x10018>  // b.any
  4128ac:	ldr	x1, [x19]
  4128b0:	mov	w0, #0xa                   	// #10
  4128b4:	bl	402340 <fputc@plt>
  4128b8:	mov	x0, x21
  4128bc:	bl	402640 <free@plt>
  4128c0:	ldr	x1, [x19]
  4128c4:	mov	w0, #0xa                   	// #10
  4128c8:	bl	402340 <fputc@plt>
  4128cc:	ldp	x29, x30, [sp, #16]
  4128d0:	ldp	x19, x20, [sp, #32]
  4128d4:	ldp	x21, x22, [sp, #48]
  4128d8:	ldp	x23, x24, [sp, #64]
  4128dc:	ldp	x25, x26, [sp, #80]
  4128e0:	ldp	x27, x28, [sp, #96]
  4128e4:	add	sp, sp, #0xd0
  4128e8:	ret
  4128ec:	mov	w20, #0x0                   	// #0
  4128f0:	ldr	w0, [x3, #20]
  4128f4:	mov	w1, w20
  4128f8:	cmp	w0, #0x3
  4128fc:	b.ne	41291c <ferror@plt+0x1009c>  // b.any
  412900:	lsl	x0, x1, #4
  412904:	add	w1, w20, #0x1
  412908:	add	x5, x21, x0
  41290c:	add	w20, w20, #0x1
  412910:	ldr	x6, [x4, #8]
  412914:	str	x3, [x21, x0]
  412918:	str	x6, [x5, #8]
  41291c:	add	x0, x4, #0x10
  412920:	cmp	x2, x0
  412924:	b.ls	412944 <ferror@plt+0x100c4>  // b.plast
  412928:	ldr	x3, [x0]
  41292c:	mov	x4, x0
  412930:	add	x0, x0, #0x10
  412934:	cmp	x3, #0x1
  412938:	b.hi	4128f0 <ferror@plt+0x10070>  // b.pmore
  41293c:	cmp	x2, x0
  412940:	b.hi	412928 <ferror@plt+0x100a8>  // b.pmore
  412944:	sub	w20, w20, #0x1
  412948:	b	4125e8 <ferror@plt+0xfd68>
  41294c:	mov	w19, #0x0                   	// #0
  412950:	ldr	w2, [x4, #20]
  412954:	mov	w1, w19
  412958:	cmp	w2, #0x3
  41295c:	b.eq	412a18 <ferror@plt+0x10198>  // b.none
  412960:	add	x2, x3, #0x10
  412964:	b	41297c <ferror@plt+0x100fc>
  412968:	ldr	x4, [x2]
  41296c:	mov	x3, x2
  412970:	add	x2, x2, #0x10
  412974:	cmp	x4, #0x1
  412978:	b.hi	412950 <ferror@plt+0x100d0>  // b.pmore
  41297c:	cmp	x0, x2
  412980:	b.hi	412968 <ferror@plt+0x100e8>  // b.pmore
  412984:	mov	x0, x22
  412988:	mov	x3, x23
  41298c:	mov	x2, #0x10                  	// #16
  412990:	bl	418650 <ferror@plt+0x15dd0>
  412994:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412998:	str	xzr, [sp, #192]
  41299c:	movi	v0.4s, #0x0
  4129a0:	ldr	q1, [x0, #3184]
  4129a4:	str	q0, [sp, #176]
  4129a8:	stp	q0, q1, [sp, #144]
  4129ac:	cbz	w19, 412678 <ferror@plt+0xfdf8>
  4129b0:	sub	w1, w19, #0x1
  4129b4:	add	x6, x22, #0x8
  4129b8:	add	x19, x22, #0x18
  4129bc:	mov	x5, #0x0                   	// #0
  4129c0:	add	x19, x19, w1, uxtw #4
  4129c4:	mov	x4, #0x0                   	// #0
  4129c8:	mov	x3, #0x0                   	// #0
  4129cc:	mov	x2, #0x0                   	// #0
  4129d0:	mov	x1, #0x0                   	// #0
  4129d4:	nop
  4129d8:	ldr	x0, [x6], #16
  4129dc:	cmp	x6, x19
  4129e0:	ldp	x8, x7, [x0]
  4129e4:	add	x1, x1, x8
  4129e8:	add	x2, x2, x7
  4129ec:	ldr	x8, [x0, #16]
  4129f0:	stp	x1, x2, [sp, #144]
  4129f4:	ldp	x7, x0, [x0, #32]
  4129f8:	add	x3, x3, x8
  4129fc:	stp	x3, xzr, [sp, #160]
  412a00:	str	xzr, [sp, #192]
  412a04:	add	x4, x4, x7
  412a08:	add	x5, x5, x0
  412a0c:	stp	x4, x5, [sp, #176]
  412a10:	b.ne	4129d8 <ferror@plt+0x10158>  // b.any
  412a14:	b	412678 <ferror@plt+0xfdf8>
  412a18:	lsl	x2, x1, #4
  412a1c:	add	w1, w19, #0x1
  412a20:	add	x5, x22, x2
  412a24:	add	w19, w19, #0x1
  412a28:	ldr	x6, [x3, #8]
  412a2c:	str	x4, [x22, x2]
  412a30:	str	x6, [x5, #8]
  412a34:	b	412960 <ferror@plt+0x100e0>
  412a38:	lsr	x7, x7, #20
  412a3c:	mov	w1, #0x4d                  	// #77
  412a40:	b	41287c <ferror@plt+0xfffc>
  412a44:	lsr	x3, x3, #20
  412a48:	mov	w4, #0x4d                  	// #77
  412a4c:	b	41282c <ferror@plt+0xffac>
  412a50:	lsr	x5, x5, #20
  412a54:	mov	w6, #0x4d                  	// #77
  412a58:	b	412854 <ferror@plt+0xffd4>
  412a5c:	nop
  412a60:	stp	x29, x30, [sp, #-128]!
  412a64:	mov	x29, sp
  412a68:	stp	x19, x20, [sp, #16]
  412a6c:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  412a70:	add	x20, x20, #0x720
  412a74:	stp	x23, x24, [sp, #48]
  412a78:	asr	x23, x1, #3
  412a7c:	mov	x19, x1
  412a80:	ldr	x0, [x20, #48]
  412a84:	and	w24, w4, #0xff
  412a88:	add	x1, sp, #0x78
  412a8c:	stp	x21, x22, [sp, #32]
  412a90:	mov	x21, x2
  412a94:	mov	x22, x3
  412a98:	mov	w2, w23
  412a9c:	str	x19, [sp, #120]
  412aa0:	bl	413640 <ferror@plt+0x10dc0>
  412aa4:	ldr	x0, [x0]
  412aa8:	cbz	x0, 412b44 <ferror@plt+0x102c4>
  412aac:	ldr	x0, [x20, #48]
  412ab0:	add	x1, sp, #0x78
  412ab4:	mov	w2, w23
  412ab8:	str	x19, [sp, #120]
  412abc:	bl	413640 <ferror@plt+0x10dc0>
  412ac0:	ldr	x1, [x0]
  412ac4:	stp	x25, x26, [sp, #64]
  412ac8:	cbz	x1, 412dd4 <ferror@plt+0x10554>
  412acc:	ldr	x25, [x0, #8]
  412ad0:	ldr	x2, [x25]
  412ad4:	cmp	x21, x2
  412ad8:	b.hi	412db8 <ferror@plt+0x10538>  // b.pmore
  412adc:	sub	x2, x2, x21
  412ae0:	str	x2, [x25]
  412ae4:	cbnz	w24, 412b0c <ferror@plt+0x1028c>
  412ae8:	ldr	x3, [x25, #32]
  412aec:	ldp	x19, x20, [sp, #16]
  412af0:	sub	x22, x3, x22
  412af4:	ldp	x23, x24, [sp, #48]
  412af8:	str	x22, [x25, #32]
  412afc:	ldp	x21, x22, [sp, #32]
  412b00:	ldp	x25, x26, [sp, #64]
  412b04:	ldp	x29, x30, [sp], #128
  412b08:	ret
  412b0c:	ldr	x20, [x20, #48]
  412b10:	mov	w2, w23
  412b14:	add	x1, sp, #0x78
  412b18:	mov	w3, #0x0                   	// #0
  412b1c:	mov	x0, x20
  412b20:	str	x19, [sp, #120]
  412b24:	bl	413f60 <ferror@plt+0x116e0>
  412b28:	cbz	x0, 412ae8 <ferror@plt+0x10268>
  412b2c:	ldr	x1, [x20, #24]
  412b30:	mov	x2, #0x1                   	// #1
  412b34:	str	x2, [x0]
  412b38:	add	x0, x1, x2
  412b3c:	str	x0, [x20, #24]
  412b40:	b	412ae8 <ferror@plt+0x10268>
  412b44:	mov	x0, #0x20                  	// #32
  412b48:	stp	x25, x26, [sp, #64]
  412b4c:	mov	w25, #0x79b9                	// #31161
  412b50:	stp	x27, x28, [sp, #80]
  412b54:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  412b58:	mov	x26, x0
  412b5c:	movi	v0.4s, #0x0
  412b60:	mov	x3, #0x300000000           	// #12884901888
  412b64:	mov	w2, #0x0                   	// #0
  412b68:	mov	x1, #0x8                   	// #8
  412b6c:	str	x3, [x26, #16]
  412b70:	add	x0, sp, #0x78
  412b74:	strb	wzr, [x26, #24]
  412b78:	movk	w25, #0x9e37, lsl #16
  412b7c:	str	q0, [x26]
  412b80:	stp	x19, x26, [sp, #104]
  412b84:	str	xzr, [sp, #120]
  412b88:	ldr	x27, [x20, #40]
  412b8c:	bl	45c130 <ferror@plt+0x598b0>
  412b90:	ldr	x3, [x26, #8]
  412b94:	mov	w2, w0
  412b98:	mov	x1, #0x8                   	// #8
  412b9c:	add	x0, sp, #0x78
  412ba0:	str	x3, [sp, #120]
  412ba4:	bl	45c130 <ferror@plt+0x598b0>
  412ba8:	mov	w4, w0
  412bac:	ldr	w3, [x26, #16]
  412bb0:	sub	w2, w25, w0
  412bb4:	add	x1, sp, #0x70
  412bb8:	mov	x0, x27
  412bbc:	sub	w2, w2, w3
  412bc0:	sub	w3, w3, w4
  412bc4:	eor	w2, w2, w4, lsr #13
  412bc8:	sub	w3, w3, w2
  412bcc:	sub	w4, w4, w2
  412bd0:	eor	w3, w3, w2, lsl #8
  412bd4:	sub	w4, w4, w3
  412bd8:	sub	w2, w2, w3
  412bdc:	eor	w4, w4, w3, lsr #13
  412be0:	sub	w2, w2, w4
  412be4:	sub	w3, w3, w4
  412be8:	eor	w2, w2, w4, lsr #12
  412bec:	sub	w3, w3, w2
  412bf0:	sub	w4, w4, w2
  412bf4:	eor	w3, w3, w2, lsl #16
  412bf8:	sub	w4, w4, w3
  412bfc:	sub	w2, w2, w3
  412c00:	eor	w4, w4, w3, lsr #5
  412c04:	sub	w2, w2, w4
  412c08:	sub	w3, w3, w4
  412c0c:	eor	w2, w2, w4, lsr #3
  412c10:	sub	w3, w3, w2
  412c14:	sub	w4, w4, w2
  412c18:	eor	w2, w3, w2, lsl #10
  412c1c:	sub	w4, w4, w2
  412c20:	eor	w2, w4, w2, lsr #15
  412c24:	bl	413730 <ferror@plt+0x10eb0>
  412c28:	mov	x26, x0
  412c2c:	ldr	x0, [x0]
  412c30:	cbz	x0, 412c7c <ferror@plt+0x103fc>
  412c34:	ldr	x0, [sp, #112]
  412c38:	cbz	x0, 412c44 <ferror@plt+0x103c4>
  412c3c:	mov	x1, #0x20                  	// #32
  412c40:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  412c44:	ldr	x26, [x26, #8]
  412c48:	ldr	x0, [x26, #24]
  412c4c:	add	x0, x0, #0x1
  412c50:	str	x0, [x26, #24]
  412c54:	ldr	x0, [x20, #48]
  412c58:	add	x1, sp, #0x68
  412c5c:	ldr	x2, [sp, #104]
  412c60:	ubfx	x2, x2, #3, #32
  412c64:	bl	413640 <ferror@plt+0x10dc0>
  412c68:	ldr	x0, [x0]
  412c6c:	cbz	x0, 412d7c <ferror@plt+0x104fc>
  412c70:	ldp	x25, x26, [sp, #64]
  412c74:	ldp	x27, x28, [sp, #80]
  412c78:	b	412aac <ferror@plt+0x1022c>
  412c7c:	mov	x0, #0x38                  	// #56
  412c80:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  412c84:	ldr	x27, [sp, #112]
  412c88:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412c8c:	mov	x26, x0
  412c90:	mov	w2, #0x0                   	// #0
  412c94:	ldr	q1, [x3, #3184]
  412c98:	mov	x1, #0x8                   	// #8
  412c9c:	movi	v0.4s, #0x0
  412ca0:	add	x0, sp, #0x78
  412ca4:	ldr	x3, [x27]
  412ca8:	str	xzr, [x26, #48]
  412cac:	str	x3, [sp, #120]
  412cb0:	stp	q0, q1, [x26]
  412cb4:	str	q0, [x26, #32]
  412cb8:	ldr	x28, [x20, #40]
  412cbc:	bl	45c130 <ferror@plt+0x598b0>
  412cc0:	ldr	x3, [x27, #8]
  412cc4:	mov	w2, w0
  412cc8:	mov	x1, #0x8                   	// #8
  412ccc:	add	x0, sp, #0x78
  412cd0:	str	x3, [sp, #120]
  412cd4:	bl	45c130 <ferror@plt+0x598b0>
  412cd8:	mov	w4, w0
  412cdc:	ldr	w3, [x27, #16]
  412ce0:	add	x1, sp, #0x70
  412ce4:	mov	x0, x28
  412ce8:	sub	w2, w25, w3
  412cec:	sub	w5, w3, w4
  412cf0:	sub	w2, w2, w4
  412cf4:	mov	w3, #0x1                   	// #1
  412cf8:	eor	w2, w2, w4, lsr #13
  412cfc:	sub	w5, w5, w2
  412d00:	sub	w4, w4, w2
  412d04:	eor	w5, w5, w2, lsl #8
  412d08:	sub	w4, w4, w5
  412d0c:	sub	w2, w2, w5
  412d10:	eor	w4, w4, w5, lsr #13
  412d14:	sub	w2, w2, w4
  412d18:	sub	w5, w5, w4
  412d1c:	eor	w2, w2, w4, lsr #12
  412d20:	sub	w5, w5, w2
  412d24:	sub	w4, w4, w2
  412d28:	eor	w5, w5, w2, lsl #16
  412d2c:	sub	w4, w4, w5
  412d30:	sub	w2, w2, w5
  412d34:	eor	w4, w4, w5, lsr #5
  412d38:	sub	w2, w2, w4
  412d3c:	sub	w5, w5, w4
  412d40:	eor	w2, w2, w4, lsr #3
  412d44:	sub	w5, w5, w2
  412d48:	sub	w4, w4, w2
  412d4c:	eor	w2, w5, w2, lsl #10
  412d50:	sub	w4, w4, w2
  412d54:	eor	w2, w4, w2, lsr #15
  412d58:	bl	413b38 <ferror@plt+0x112b8>
  412d5c:	ldr	x1, [x0]
  412d60:	cbz	x1, 412d6c <ferror@plt+0x104ec>
  412d64:	str	x26, [x0, #8]
  412d68:	b	412c54 <ferror@plt+0x103d4>
  412d6c:	ldr	x1, [sp, #112]
  412d70:	str	x1, [x0]
  412d74:	str	x26, [x0, #8]
  412d78:	b	412c54 <ferror@plt+0x103d4>
  412d7c:	ldr	x0, [x20, #48]
  412d80:	add	x1, sp, #0x68
  412d84:	ldr	x2, [sp, #104]
  412d88:	mov	w3, #0x1                   	// #1
  412d8c:	ubfx	x2, x2, #3, #32
  412d90:	bl	413f60 <ferror@plt+0x116e0>
  412d94:	ldr	x1, [x0]
  412d98:	cbz	x1, 412dac <ferror@plt+0x1052c>
  412d9c:	ldp	x27, x28, [sp, #80]
  412da0:	stp	x26, xzr, [x0, #8]
  412da4:	ldp	x25, x26, [sp, #64]
  412da8:	b	412aac <ferror@plt+0x1022c>
  412dac:	ldr	x1, [sp, #104]
  412db0:	str	x1, [x0]
  412db4:	b	412d9c <ferror@plt+0x1051c>
  412db8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412dbc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412dc0:	add	x2, x2, #0xc18
  412dc4:	add	x0, x0, #0xc30
  412dc8:	mov	w1, #0x97                  	// #151
  412dcc:	stp	x27, x28, [sp, #80]
  412dd0:	bl	4028b0 <ferror@plt+0x30>
  412dd4:	stp	x27, x28, [sp, #80]
  412dd8:	ldr	x0, [x1, #32]
  412ddc:	brk	#0x3e8
  412de0:	stp	x29, x30, [sp, #-112]!
  412de4:	mov	x0, #0x20                  	// #32
  412de8:	mov	x29, sp
  412dec:	stp	x19, x20, [sp, #16]
  412df0:	mov	x19, x2
  412df4:	mov	w20, #0x79b9                	// #31161
  412df8:	stp	x21, x22, [sp, #32]
  412dfc:	mov	x22, x1
  412e00:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  412e04:	stp	x23, x24, [sp, #48]
  412e08:	mov	x23, x3
  412e0c:	add	x21, x21, #0x720
  412e10:	stp	x25, x26, [sp, #64]
  412e14:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  412e18:	mov	x24, x0
  412e1c:	movi	v0.4s, #0x0
  412e20:	mov	x3, #0x300000000           	// #12884901888
  412e24:	mov	w2, #0x0                   	// #0
  412e28:	mov	x1, #0x8                   	// #8
  412e2c:	str	x3, [x24, #16]
  412e30:	add	x0, sp, #0x68
  412e34:	strb	wzr, [x24, #24]
  412e38:	movk	w20, #0x9e37, lsl #16
  412e3c:	str	q0, [x24]
  412e40:	stp	x22, x24, [sp, #88]
  412e44:	str	xzr, [sp, #104]
  412e48:	ldr	x25, [x21, #40]
  412e4c:	bl	45c130 <ferror@plt+0x598b0>
  412e50:	ldr	x3, [x24, #8]
  412e54:	mov	w2, w0
  412e58:	mov	x1, #0x8                   	// #8
  412e5c:	add	x0, sp, #0x68
  412e60:	str	x3, [sp, #104]
  412e64:	bl	45c130 <ferror@plt+0x598b0>
  412e68:	mov	w4, w0
  412e6c:	ldr	w3, [x24, #16]
  412e70:	sub	w2, w20, w0
  412e74:	add	x1, sp, #0x60
  412e78:	mov	x0, x25
  412e7c:	sub	w2, w2, w3
  412e80:	sub	w3, w3, w4
  412e84:	eor	w2, w2, w4, lsr #13
  412e88:	sub	w3, w3, w2
  412e8c:	sub	w4, w4, w2
  412e90:	eor	w3, w3, w2, lsl #8
  412e94:	sub	w4, w4, w3
  412e98:	sub	w2, w2, w3
  412e9c:	eor	w4, w4, w3, lsr #13
  412ea0:	sub	w2, w2, w4
  412ea4:	sub	w3, w3, w4
  412ea8:	eor	w2, w2, w4, lsr #12
  412eac:	sub	w3, w3, w2
  412eb0:	sub	w4, w4, w2
  412eb4:	eor	w3, w3, w2, lsl #16
  412eb8:	sub	w4, w4, w3
  412ebc:	sub	w2, w2, w3
  412ec0:	eor	w4, w4, w3, lsr #5
  412ec4:	sub	w2, w2, w4
  412ec8:	sub	w3, w3, w4
  412ecc:	eor	w2, w2, w4, lsr #3
  412ed0:	sub	w3, w3, w2
  412ed4:	sub	w4, w4, w2
  412ed8:	eor	w2, w3, w2, lsl #10
  412edc:	sub	w4, w4, w2
  412ee0:	eor	w2, w4, w2, lsr #15
  412ee4:	bl	413730 <ferror@plt+0x10eb0>
  412ee8:	mov	x24, x0
  412eec:	ldr	x0, [x0]
  412ef0:	cbz	x0, 412fa8 <ferror@plt+0x10728>
  412ef4:	ldr	x0, [sp, #96]
  412ef8:	cbz	x0, 412f04 <ferror@plt+0x10684>
  412efc:	mov	x1, #0x20                  	// #32
  412f00:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  412f04:	ldr	x24, [x24, #8]
  412f08:	add	x1, sp, #0x58
  412f0c:	ldr	x2, [sp, #88]
  412f10:	ldr	x0, [x24, #24]
  412f14:	ubfx	x2, x2, #3, #32
  412f18:	add	x0, x0, #0x1
  412f1c:	str	x0, [x24, #24]
  412f20:	ldr	x0, [x21, #48]
  412f24:	bl	413640 <ferror@plt+0x10dc0>
  412f28:	ldr	x0, [x0]
  412f2c:	cbz	x0, 4130b0 <ferror@plt+0x10830>
  412f30:	ldr	x0, [x21, #48]
  412f34:	add	x1, sp, #0x68
  412f38:	ubfx	x2, x22, #3, #32
  412f3c:	str	x22, [sp, #104]
  412f40:	mul	x20, x19, x23
  412f44:	bl	413640 <ferror@plt+0x10dc0>
  412f48:	ldr	x1, [x0]
  412f4c:	cbz	x1, 4130f8 <ferror@plt+0x10878>
  412f50:	ldr	x0, [x0, #8]
  412f54:	ldp	x1, x2, [x0]
  412f58:	ldr	x3, [x0, #16]
  412f5c:	add	x1, x20, x1
  412f60:	add	x2, x2, #0x1
  412f64:	stp	x1, x2, [x0]
  412f68:	cmp	x1, x3
  412f6c:	b.ls	412f74 <ferror@plt+0x106f4>  // b.plast
  412f70:	str	x1, [x0, #16]
  412f74:	ldp	x2, x1, [x0, #32]
  412f78:	str	x23, [x0, #48]
  412f7c:	add	x19, x19, x2
  412f80:	str	x19, [x0, #32]
  412f84:	cmp	x19, x1
  412f88:	b.ls	412f90 <ferror@plt+0x10710>  // b.plast
  412f8c:	str	x19, [x0, #40]
  412f90:	ldp	x19, x20, [sp, #16]
  412f94:	ldp	x21, x22, [sp, #32]
  412f98:	ldp	x23, x24, [sp, #48]
  412f9c:	ldp	x25, x26, [sp, #64]
  412fa0:	ldp	x29, x30, [sp], #112
  412fa4:	ret
  412fa8:	mov	x0, #0x38                  	// #56
  412fac:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  412fb0:	ldr	x25, [sp, #96]
  412fb4:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  412fb8:	mov	x24, x0
  412fbc:	mov	w2, #0x0                   	// #0
  412fc0:	ldr	q1, [x3, #3184]
  412fc4:	mov	x1, #0x8                   	// #8
  412fc8:	movi	v0.4s, #0x0
  412fcc:	add	x0, sp, #0x68
  412fd0:	ldr	x3, [x25]
  412fd4:	str	xzr, [x24, #48]
  412fd8:	str	x3, [sp, #104]
  412fdc:	stp	q0, q1, [x24]
  412fe0:	str	q0, [x24, #32]
  412fe4:	ldr	x26, [x21, #40]
  412fe8:	bl	45c130 <ferror@plt+0x598b0>
  412fec:	ldr	x3, [x25, #8]
  412ff0:	mov	w2, w0
  412ff4:	mov	x1, #0x8                   	// #8
  412ff8:	add	x0, sp, #0x68
  412ffc:	str	x3, [sp, #104]
  413000:	bl	45c130 <ferror@plt+0x598b0>
  413004:	mov	w4, w0
  413008:	ldr	w5, [x25, #16]
  41300c:	add	x1, sp, #0x60
  413010:	mov	x0, x26
  413014:	mov	w3, #0x1                   	// #1
  413018:	sub	w2, w20, w5
  41301c:	sub	w5, w5, w4
  413020:	sub	w2, w2, w4
  413024:	eor	w2, w2, w4, lsr #13
  413028:	sub	w5, w5, w2
  41302c:	sub	w4, w4, w2
  413030:	eor	w5, w5, w2, lsl #8
  413034:	sub	w4, w4, w5
  413038:	sub	w2, w2, w5
  41303c:	eor	w4, w4, w5, lsr #13
  413040:	sub	w2, w2, w4
  413044:	sub	w5, w5, w4
  413048:	eor	w2, w2, w4, lsr #12
  41304c:	sub	w5, w5, w2
  413050:	sub	w4, w4, w2
  413054:	eor	w5, w5, w2, lsl #16
  413058:	sub	w4, w4, w5
  41305c:	sub	w2, w2, w5
  413060:	eor	w4, w4, w5, lsr #5
  413064:	sub	w2, w2, w4
  413068:	sub	w5, w5, w4
  41306c:	eor	w2, w2, w4, lsr #3
  413070:	sub	w5, w5, w2
  413074:	sub	w4, w4, w2
  413078:	eor	w2, w5, w2, lsl #10
  41307c:	sub	w4, w4, w2
  413080:	eor	w2, w4, w2, lsr #15
  413084:	bl	413b38 <ferror@plt+0x112b8>
  413088:	ldr	x1, [x0]
  41308c:	cbz	x1, 4130d8 <ferror@plt+0x10858>
  413090:	str	x24, [x0, #8]
  413094:	ldr	x0, [x21, #48]
  413098:	add	x1, sp, #0x58
  41309c:	ldr	x2, [sp, #88]
  4130a0:	ubfx	x2, x2, #3, #32
  4130a4:	bl	413640 <ferror@plt+0x10dc0>
  4130a8:	ldr	x0, [x0]
  4130ac:	cbnz	x0, 412f30 <ferror@plt+0x106b0>
  4130b0:	ldr	x0, [x21, #48]
  4130b4:	add	x1, sp, #0x58
  4130b8:	ldr	x2, [sp, #88]
  4130bc:	mov	w3, #0x1                   	// #1
  4130c0:	ubfx	x2, x2, #3, #32
  4130c4:	bl	413f60 <ferror@plt+0x116e0>
  4130c8:	ldr	x1, [x0]
  4130cc:	cbz	x1, 4130e8 <ferror@plt+0x10868>
  4130d0:	stp	x24, xzr, [x0, #8]
  4130d4:	b	412f30 <ferror@plt+0x106b0>
  4130d8:	ldr	x1, [sp, #96]
  4130dc:	str	x1, [x0]
  4130e0:	str	x24, [x0, #8]
  4130e4:	b	413094 <ferror@plt+0x10814>
  4130e8:	ldr	x1, [sp, #88]
  4130ec:	str	x1, [x0]
  4130f0:	stp	x24, xzr, [x0, #8]
  4130f4:	b	412f30 <ferror@plt+0x106b0>
  4130f8:	str	xzr, [x1, #48]
  4130fc:	brk	#0x3e8
  413100:	stp	x29, x30, [sp, #-48]!
  413104:	mov	x29, sp
  413108:	stp	x21, x22, [sp, #32]
  41310c:	mov	x21, x0
  413110:	ldr	x22, [x0, #40]
  413114:	stp	x19, x20, [sp, #16]
  413118:	ldp	x3, x2, [x22]
  41311c:	add	x20, x3, x2, lsl #4
  413120:	cmp	x3, x20
  413124:	b.cs	41314c <ferror@plt+0x108cc>  // b.hs, b.nlast
  413128:	mov	x1, x3
  41312c:	nop
  413130:	ldr	x0, [x1]
  413134:	mov	x19, x1
  413138:	add	x1, x1, #0x10
  41313c:	cmp	x0, #0x1
  413140:	b.hi	41320c <ferror@plt+0x1098c>  // b.pmore
  413144:	cmp	x20, x1
  413148:	b.hi	413130 <ferror@plt+0x108b0>  // b.pmore
  41314c:	sub	x1, x2, #0x1
  413150:	cbz	x2, 413164 <ferror@plt+0x108e4>
  413154:	nop
  413158:	sub	x1, x1, #0x1
  41315c:	cmp	x1, x2
  413160:	b.cc	413158 <ferror@plt+0x108d8>  // b.lo, b.ul, b.last
  413164:	ldrb	w0, [x22, #44]
  413168:	cbz	w0, 413288 <ferror@plt+0x10a08>
  41316c:	mov	x0, x3
  413170:	bl	404420 <ferror@plt+0x1ba0>
  413174:	mov	x0, x22
  413178:	mov	x1, #0x30                  	// #48
  41317c:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  413180:	ldr	x19, [x21, #48]
  413184:	cbz	x19, 4131c0 <ferror@plt+0x10940>
  413188:	ldr	x0, [x19, #8]
  41318c:	sub	x1, x0, #0x1
  413190:	cbz	x0, 4131a4 <ferror@plt+0x10924>
  413194:	nop
  413198:	sub	x1, x1, #0x1
  41319c:	cmp	x0, x1
  4131a0:	b.hi	413198 <ferror@plt+0x10918>  // b.pmore
  4131a4:	ldrb	w1, [x19, #44]
  4131a8:	ldr	x0, [x19]
  4131ac:	cbz	w1, 413280 <ferror@plt+0x10a00>
  4131b0:	bl	404420 <ferror@plt+0x1ba0>
  4131b4:	mov	x0, x19
  4131b8:	mov	x1, #0x30                  	// #48
  4131bc:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  4131c0:	ldr	x19, [x21]
  4131c4:	cbz	x19, 413294 <ferror@plt+0x10a14>
  4131c8:	ldr	x1, [x19, #8]
  4131cc:	sub	x0, x1, #0x1
  4131d0:	cbz	x1, 4131e4 <ferror@plt+0x10964>
  4131d4:	nop
  4131d8:	sub	x0, x0, #0x1
  4131dc:	cmp	x1, x0
  4131e0:	b.hi	4131d8 <ferror@plt+0x10958>  // b.pmore
  4131e4:	ldrb	w1, [x19, #44]
  4131e8:	ldr	x0, [x19]
  4131ec:	cbz	w1, 413264 <ferror@plt+0x109e4>
  4131f0:	bl	404420 <ferror@plt+0x1ba0>
  4131f4:	mov	x0, x19
  4131f8:	mov	x1, #0x30                  	// #48
  4131fc:	ldp	x19, x20, [sp, #16]
  413200:	ldp	x21, x22, [sp, #32]
  413204:	ldp	x29, x30, [sp], #48
  413208:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  41320c:	cbz	x0, 413218 <ferror@plt+0x10998>
  413210:	mov	x1, #0x20                  	// #32
  413214:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  413218:	ldr	x0, [x19, #8]
  41321c:	cbz	x0, 413228 <ferror@plt+0x109a8>
  413220:	mov	x1, #0x38                  	// #56
  413224:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  413228:	add	x1, x19, #0x10
  41322c:	b	413244 <ferror@plt+0x109c4>
  413230:	ldr	x0, [x1]
  413234:	mov	x19, x1
  413238:	add	x1, x1, #0x10
  41323c:	cmp	x0, #0x1
  413240:	b.hi	41320c <ferror@plt+0x1098c>  // b.pmore
  413244:	cmp	x20, x1
  413248:	b.hi	413230 <ferror@plt+0x109b0>  // b.pmore
  41324c:	ldr	x22, [x21, #40]
  413250:	cbz	x22, 413180 <ferror@plt+0x10900>
  413254:	ldp	x3, x2, [x22]
  413258:	sub	x1, x2, #0x1
  41325c:	cbnz	x2, 413158 <ferror@plt+0x108d8>
  413260:	b	413164 <ferror@plt+0x108e4>
  413264:	bl	402640 <free@plt>
  413268:	mov	x0, x19
  41326c:	mov	x1, #0x30                  	// #48
  413270:	ldp	x19, x20, [sp, #16]
  413274:	ldp	x21, x22, [sp, #32]
  413278:	ldp	x29, x30, [sp], #48
  41327c:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  413280:	bl	402640 <free@plt>
  413284:	b	4131b4 <ferror@plt+0x10934>
  413288:	mov	x0, x3
  41328c:	bl	402640 <free@plt>
  413290:	b	413174 <ferror@plt+0x108f4>
  413294:	ldp	x19, x20, [sp, #16]
  413298:	ldp	x21, x22, [sp, #32]
  41329c:	ldp	x29, x30, [sp], #48
  4132a0:	ret
  4132a4:	nop
  4132a8:	ldr	x0, [x0, #8]
  4132ac:	ldr	x1, [x1, #8]
  4132b0:	ldr	x2, [x0]
  4132b4:	ldr	x3, [x1]
  4132b8:	cmp	x3, x2
  4132bc:	b.eq	4132d4 <ferror@plt+0x10a54>  // b.none
  4132c0:	cset	w0, hi  // hi = pmore
  4132c4:	cmp	w0, #0x0
  4132c8:	mov	w0, #0x1                   	// #1
  4132cc:	cneg	w0, w0, eq  // eq = none
  4132d0:	ret
  4132d4:	ldr	x3, [x0, #16]
  4132d8:	ldr	x2, [x1, #16]
  4132dc:	cmp	x3, x2
  4132e0:	b.eq	4132ec <ferror@plt+0x10a6c>  // b.none
  4132e4:	cset	w0, cc  // cc = lo, ul, last
  4132e8:	b	4132c4 <ferror@plt+0x10a44>
  4132ec:	ldr	x2, [x0, #8]
  4132f0:	mov	w0, #0x0                   	// #0
  4132f4:	ldr	x1, [x1, #8]
  4132f8:	cmp	x2, x1
  4132fc:	b.eq	4132d0 <ferror@plt+0x10a50>  // b.none
  413300:	cset	w0, cc  // cc = lo, ul, last
  413304:	b	4132c4 <ferror@plt+0x10a44>
  413308:	mov	x12, #0x1070                	// #4208
  41330c:	sub	sp, sp, x12
  413310:	stp	x29, x30, [sp, #48]
  413314:	add	x29, sp, #0x30
  413318:	stp	x19, x20, [sp, #64]
  41331c:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x116d8>
  413320:	add	x20, x20, #0xaf8
  413324:	stp	x21, x22, [sp, #80]
  413328:	mov	x22, x1
  41332c:	mov	x21, x0
  413330:	ldr	x19, [x1]
  413334:	str	x23, [sp, #96]
  413338:	mov	x23, x2
  41333c:	b	413344 <ferror@plt+0x10ac4>
  413340:	add	x19, x0, #0x4
  413344:	mov	x1, x20
  413348:	mov	x0, x19
  41334c:	bl	402750 <strstr@plt>
  413350:	cbnz	x0, 413340 <ferror@plt+0x10ac0>
  413354:	ldr	w3, [x22, #16]
  413358:	mov	x2, x19
  41335c:	ldr	x4, [x22, #8]
  413360:	add	x0, sp, #0x70
  413364:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  413368:	add	x1, x1, #0xb00
  41336c:	bl	402310 <sprintf@plt>
  413370:	strb	wzr, [sp, #160]
  413374:	ldr	x1, [x21]
  413378:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  41337c:	mov	x2, #0x27ff                	// #10239
  413380:	ldr	x0, [x0, #1312]
  413384:	cmp	x1, x2
  413388:	ldr	x3, [x21, #48]
  41338c:	b.ls	4133a8 <ferror@plt+0x10b28>  // b.plast
  413390:	mov	w2, #0x9fffff              	// #10485759
  413394:	cmp	x1, x2
  413398:	b.hi	4134c8 <ferror@plt+0x10c48>  // b.pmore
  41339c:	lsr	x4, x1, #10
  4133a0:	mov	w5, #0x6b                  	// #107
  4133a4:	b	4133b0 <ferror@plt+0x10b30>
  4133a8:	mov	x4, x1
  4133ac:	mov	w5, #0x20                  	// #32
  4133b0:	ucvtf	d0, x1
  4133b4:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  4133b8:	ldr	d1, [x23]
  4133bc:	fmov	d2, x1
  4133c0:	ldr	x6, [x21, #16]
  4133c4:	fmul	d0, d0, d2
  4133c8:	ucvtf	d1, d1
  4133cc:	mov	x1, #0x27ff                	// #10239
  4133d0:	mov	w7, #0x20                  	// #32
  4133d4:	cmp	x6, x1
  4133d8:	fdiv	d0, d0, d1
  4133dc:	b.ls	4133f4 <ferror@plt+0x10b74>  // b.plast
  4133e0:	mov	w1, #0x9fffff              	// #10485759
  4133e4:	cmp	x6, x1
  4133e8:	b.hi	4134bc <ferror@plt+0x10c3c>  // b.pmore
  4133ec:	lsr	x6, x6, #10
  4133f0:	mov	w7, #0x6b                  	// #107
  4133f4:	ldr	d4, [x21, #8]
  4133f8:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  4133fc:	ldr	d2, [x23, #8]
  413400:	fmov	d3, x1
  413404:	ucvtf	d1, d4
  413408:	mov	x1, #0x27ff                	// #10239
  41340c:	ldr	x2, [x21, #32]
  413410:	ucvtf	d2, d2
  413414:	mov	w9, #0x20                  	// #32
  413418:	fmul	d1, d1, d3
  41341c:	cmp	x2, x1
  413420:	fdiv	d1, d1, d2
  413424:	b.ls	41343c <ferror@plt+0x10bbc>  // b.plast
  413428:	mov	w1, #0x9fffff              	// #10485759
  41342c:	cmp	x2, x1
  413430:	b.hi	4134b0 <ferror@plt+0x10c30>  // b.pmore
  413434:	lsr	x2, x2, #10
  413438:	mov	w9, #0x6b                  	// #107
  41343c:	ldr	x1, [x21, #40]
  413440:	mov	x10, #0x27ff                	// #10239
  413444:	mov	w8, #0x20                  	// #32
  413448:	cmp	x1, x10
  41344c:	b.ls	413464 <ferror@plt+0x10be4>  // b.plast
  413450:	mov	w8, #0x9fffff              	// #10485759
  413454:	cmp	x1, x8
  413458:	b.hi	4134a4 <ferror@plt+0x10c24>  // b.pmore
  41345c:	lsr	x1, x1, #10
  413460:	mov	w8, #0x6b                  	// #107
  413464:	str	d4, [sp]
  413468:	str	x2, [sp, #8]
  41346c:	add	x2, sp, #0x70
  413470:	str	w9, [sp, #16]
  413474:	str	x1, [sp, #24]
  413478:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41347c:	str	w8, [sp, #32]
  413480:	add	x1, x1, #0xb10
  413484:	bl	402840 <fprintf@plt>
  413488:	mov	x12, #0x1070                	// #4208
  41348c:	ldp	x29, x30, [sp, #48]
  413490:	ldp	x19, x20, [sp, #64]
  413494:	ldp	x21, x22, [sp, #80]
  413498:	ldr	x23, [sp, #96]
  41349c:	add	sp, sp, x12
  4134a0:	ret
  4134a4:	lsr	x1, x1, #20
  4134a8:	mov	w8, #0x4d                  	// #77
  4134ac:	b	413464 <ferror@plt+0x10be4>
  4134b0:	lsr	x2, x2, #20
  4134b4:	mov	w9, #0x4d                  	// #77
  4134b8:	b	41343c <ferror@plt+0x10bbc>
  4134bc:	lsr	x6, x6, #20
  4134c0:	mov	w7, #0x4d                  	// #77
  4134c4:	b	4133f4 <ferror@plt+0x10b74>
  4134c8:	lsr	x4, x1, #20
  4134cc:	mov	w5, #0x4d                  	// #77
  4134d0:	b	4133b0 <ferror@plt+0x10b30>
  4134d4:	nop
  4134d8:	stp	x29, x30, [sp, #-64]!
  4134dc:	mov	x29, sp
  4134e0:	stp	x19, x20, [sp, #16]
  4134e4:	mov	x20, x0
  4134e8:	mov	x0, #0x30                  	// #48
  4134ec:	stp	x21, x22, [sp, #32]
  4134f0:	adrp	x21, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4134f4:	add	x21, x21, #0xc80
  4134f8:	stp	x23, x24, [sp, #48]
  4134fc:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  413500:	mov	x19, x0
  413504:	mov	x0, #0xd                   	// #13
  413508:	stp	xzr, xzr, [x19, #16]
  41350c:	str	xzr, [x19, #32]
  413510:	strb	wzr, [x19, #44]
  413514:	bl	403f18 <ferror@plt+0x1698>
  413518:	mov	w22, w0
  41351c:	mov	x1, #0x10                  	// #16
  413520:	ubfiz	x0, x22, #4, #32
  413524:	ldr	w23, [x21, x0]
  413528:	mov	w24, w23
  41352c:	mov	x0, x24
  413530:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  413534:	mov	x1, x0
  413538:	cbz	x24, 41354c <ferror@plt+0x10ccc>
  41353c:	add	x23, x0, w23, uxtw #4
  413540:	str	xzr, [x0], #16
  413544:	cmp	x23, x0
  413548:	b.ne	413540 <ferror@plt+0x10cc0>  // b.any
  41354c:	stp	x1, x24, [x19]
  413550:	mov	x0, #0x30                  	// #48
  413554:	str	w22, [x19, #40]
  413558:	str	x19, [x20, #40]
  41355c:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  413560:	mov	x19, x0
  413564:	mov	x0, #0xd                   	// #13
  413568:	stp	xzr, xzr, [x19, #16]
  41356c:	str	xzr, [x19, #32]
  413570:	strb	wzr, [x19, #44]
  413574:	bl	403f18 <ferror@plt+0x1698>
  413578:	mov	w22, w0
  41357c:	mov	x1, #0x18                  	// #24
  413580:	ubfiz	x0, x22, #4, #32
  413584:	ldr	w23, [x21, x0]
  413588:	mov	w24, w23
  41358c:	mov	x0, x24
  413590:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  413594:	mov	x1, x0
  413598:	cbz	x24, 4135b4 <ferror@plt+0x10d34>
  41359c:	mov	w2, #0x18                  	// #24
  4135a0:	umaddl	x23, w23, w2, x0
  4135a4:	nop
  4135a8:	str	xzr, [x0], #24
  4135ac:	cmp	x23, x0
  4135b0:	b.ne	4135a8 <ferror@plt+0x10d28>  // b.any
  4135b4:	stp	x1, x24, [x19]
  4135b8:	mov	x0, #0x30                  	// #48
  4135bc:	str	w22, [x19, #40]
  4135c0:	str	x19, [x20, #48]
  4135c4:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  4135c8:	mov	x19, x0
  4135cc:	mov	x0, #0xd                   	// #13
  4135d0:	stp	xzr, xzr, [x19, #16]
  4135d4:	str	xzr, [x19, #32]
  4135d8:	strb	wzr, [x19, #44]
  4135dc:	bl	403f18 <ferror@plt+0x1698>
  4135e0:	mov	w22, w0
  4135e4:	mov	x1, #0x18                  	// #24
  4135e8:	ubfiz	x0, x22, #4, #32
  4135ec:	ldr	w21, [x21, x0]
  4135f0:	mov	w23, w21
  4135f4:	mov	x0, x23
  4135f8:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  4135fc:	cbz	x23, 41361c <ferror@plt+0x10d9c>
  413600:	mov	w2, #0x18                  	// #24
  413604:	mov	x1, x0
  413608:	umaddl	x21, w21, w2, x0
  41360c:	nop
  413610:	str	xzr, [x1], #24
  413614:	cmp	x21, x1
  413618:	b.ne	413610 <ferror@plt+0x10d90>  // b.any
  41361c:	stp	x0, x23, [x19]
  413620:	str	w22, [x19, #40]
  413624:	ldp	x21, x22, [sp, #32]
  413628:	ldp	x23, x24, [sp, #48]
  41362c:	str	x19, [x20]
  413630:	ldp	x19, x20, [sp, #16]
  413634:	ldp	x29, x30, [sp], #64
  413638:	ret
  41363c:	nop
  413640:	mov	x9, x0
  413644:	adrp	x6, 46d000 <_obstack_memory_used@@Base+0x106d8>
  413648:	ldr	w0, [x0, #32]
  41364c:	add	x6, x6, #0xc80
  413650:	mov	w7, #0x18                  	// #24
  413654:	ldr	w10, [x9, #40]
  413658:	add	w0, w0, #0x1
  41365c:	str	w0, [x9, #32]
  413660:	ldr	x5, [x9]
  413664:	lsl	x8, x10, #4
  413668:	add	x4, x6, x8
  41366c:	ldr	w8, [x6, x8]
  413670:	ldr	w3, [x4, #4]
  413674:	ldr	w11, [x4, #12]
  413678:	umull	x3, w2, w3
  41367c:	lsr	x0, x3, #32
  413680:	sub	w3, w2, w0
  413684:	add	w3, w0, w3, lsr #1
  413688:	lsr	w3, w3, w11
  41368c:	msub	w3, w3, w8, w2
  413690:	umull	x7, w3, w7
  413694:	add	x0, x5, x7
  413698:	ldr	x7, [x5, x7]
  41369c:	cbz	x7, 41372c <ferror@plt+0x10eac>
  4136a0:	cmp	x7, #0x1
  4136a4:	b.eq	4136b4 <ferror@plt+0x10e34>  // b.none
  4136a8:	ldr	x4, [x1]
  4136ac:	cmp	x7, x4
  4136b0:	b.eq	41372c <ferror@plt+0x10eac>  // b.none
  4136b4:	add	x10, x6, x10, lsl #4
  4136b8:	sub	w8, w8, #0x2
  4136bc:	add	w12, w2, #0x1
  4136c0:	ldr	w6, [x9, #36]
  4136c4:	ldr	x7, [x9, #8]
  4136c8:	ldr	w0, [x10, #8]
  4136cc:	umull	x0, w2, w0
  4136d0:	lsr	x0, x0, #32
  4136d4:	sub	w4, w2, w0
  4136d8:	add	w4, w0, w4, lsr #1
  4136dc:	lsr	w4, w4, w11
  4136e0:	msub	w4, w4, w8, w12
  4136e4:	nop
  4136e8:	add	w2, w3, w4
  4136ec:	add	w6, w6, #0x1
  4136f0:	mov	x3, x2
  4136f4:	cmp	x7, w2, uxtw
  4136f8:	b.hi	413704 <ferror@plt+0x10e84>  // b.pmore
  4136fc:	sub	w2, w2, w7
  413700:	mov	x3, x2
  413704:	add	x2, x2, x2, lsl #1
  413708:	add	x0, x5, x2, lsl #3
  41370c:	ldr	x2, [x5, x2, lsl #3]
  413710:	cmp	x2, #0x1
  413714:	cbz	x2, 413728 <ferror@plt+0x10ea8>
  413718:	b.eq	4136e8 <ferror@plt+0x10e68>  // b.none
  41371c:	ldr	x8, [x1]
  413720:	cmp	x8, x2
  413724:	b.ne	4136e8 <ferror@plt+0x10e68>  // b.any
  413728:	str	w6, [x9, #36]
  41372c:	ret
  413730:	mov	x11, x0
  413734:	adrp	x6, 46d000 <_obstack_memory_used@@Base+0x106d8>
  413738:	ldr	w0, [x0, #32]
  41373c:	add	x6, x6, #0xc80
  413740:	ldr	w8, [x11, #40]
  413744:	add	w0, w0, #0x1
  413748:	str	w0, [x11, #32]
  41374c:	ldr	x10, [x11]
  413750:	lsl	x4, x8, #4
  413754:	add	x5, x6, x4
  413758:	ldr	w7, [x6, x4]
  41375c:	ldr	w3, [x5, #4]
  413760:	ldr	w9, [x5, #12]
  413764:	umull	x3, w2, w3
  413768:	lsr	x3, x3, #32
  41376c:	sub	w4, w2, w3
  413770:	add	w3, w3, w4, lsr #1
  413774:	lsr	w3, w3, w9
  413778:	msub	w3, w3, w7, w2
  41377c:	ubfiz	x4, x3, #4, #32
  413780:	add	x0, x10, x4
  413784:	ldr	x4, [x10, x4]
  413788:	cbz	x4, 413844 <ferror@plt+0x10fc4>
  41378c:	cmp	x4, #0x1
  413790:	b.eq	4137a8 <ferror@plt+0x10f28>  // b.none
  413794:	ldr	x5, [x1]
  413798:	ldr	x13, [x4]
  41379c:	ldr	x12, [x5]
  4137a0:	cmp	x13, x12
  4137a4:	b.eq	413848 <ferror@plt+0x10fc8>  // b.none
  4137a8:	add	x6, x6, x8, lsl #4
  4137ac:	add	w8, w2, #0x1
  4137b0:	sub	w0, w7, #0x2
  4137b4:	ldr	w4, [x11, #36]
  4137b8:	ldr	x7, [x11, #8]
  4137bc:	ldr	w5, [x6, #8]
  4137c0:	umull	x5, w2, w5
  4137c4:	lsr	x5, x5, #32
  4137c8:	sub	w2, w2, w5
  4137cc:	add	w5, w5, w2, lsr #1
  4137d0:	lsr	w5, w5, w9
  4137d4:	msub	w5, w5, w0, w8
  4137d8:	add	w2, w3, w5
  4137dc:	add	w4, w4, #0x1
  4137e0:	mov	x3, x2
  4137e4:	cmp	x7, w2, uxtw
  4137e8:	b.hi	4137f4 <ferror@plt+0x10f74>  // b.pmore
  4137ec:	sub	w2, w2, w7
  4137f0:	mov	x3, x2
  4137f4:	lsl	x2, x2, #4
  4137f8:	add	x0, x10, x2
  4137fc:	ldr	x2, [x10, x2]
  413800:	cmp	x2, #0x1
  413804:	cbz	x2, 413840 <ferror@plt+0x10fc0>
  413808:	b.eq	4137d8 <ferror@plt+0x10f58>  // b.none
  41380c:	ldr	x6, [x1]
  413810:	ldr	x9, [x2]
  413814:	ldr	x8, [x6]
  413818:	cmp	x9, x8
  41381c:	b.ne	4137d8 <ferror@plt+0x10f58>  // b.any
  413820:	ldr	x9, [x2, #8]
  413824:	ldr	x8, [x6, #8]
  413828:	cmp	x9, x8
  41382c:	b.ne	4137d8 <ferror@plt+0x10f58>  // b.any
  413830:	ldr	w8, [x2, #16]
  413834:	ldr	w2, [x6, #16]
  413838:	cmp	w8, w2
  41383c:	b.ne	4137d8 <ferror@plt+0x10f58>  // b.any
  413840:	str	w4, [x11, #36]
  413844:	ret
  413848:	ldr	x13, [x4, #8]
  41384c:	ldr	x12, [x5, #8]
  413850:	cmp	x13, x12
  413854:	b.ne	4137a8 <ferror@plt+0x10f28>  // b.any
  413858:	ldr	w12, [x4, #16]
  41385c:	ldr	w4, [x5, #16]
  413860:	cmp	w12, w4
  413864:	b.ne	4137a8 <ferror@plt+0x10f28>  // b.any
  413868:	ret
  41386c:	nop
  413870:	stp	x29, x30, [sp, #-96]!
  413874:	mov	x29, sp
  413878:	stp	x21, x22, [sp, #32]
  41387c:	mov	x22, x0
  413880:	stp	x25, x26, [sp, #64]
  413884:	ldr	w26, [x0, #40]
  413888:	ldp	x1, x0, [x0, #16]
  41388c:	stp	x19, x20, [sp, #16]
  413890:	ldp	x20, x25, [x22]
  413894:	stp	x23, x24, [sp, #48]
  413898:	sub	x1, x1, x0
  41389c:	lsl	x0, x1, #1
  4138a0:	cmp	x25, x1, lsl #1
  4138a4:	add	x23, x20, x25, lsl #4
  4138a8:	b.cc	413aa8 <ferror@plt+0x11228>  // b.lo, b.ul, b.last
  4138ac:	lsl	w1, w1, #3
  4138b0:	mov	x2, #0x20                  	// #32
  4138b4:	cmp	x1, x2
  4138b8:	csel	x1, x1, x2, cs  // cs = hs, nlast
  4138bc:	cmp	x25, x1
  4138c0:	b.hi	413aa8 <ferror@plt+0x11228>  // b.pmore
  4138c4:	ldrb	w0, [x22, #44]
  4138c8:	cbnz	w0, 413ac8 <ferror@plt+0x11248>
  4138cc:	mov	x0, x25
  4138d0:	mov	x1, #0x10                  	// #16
  4138d4:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  4138d8:	mov	x1, x0
  4138dc:	add	x2, x0, x25, lsl #4
  4138e0:	cbz	x25, 4138f4 <ferror@plt+0x11074>
  4138e4:	nop
  4138e8:	str	xzr, [x1], #16
  4138ec:	cmp	x1, x2
  4138f0:	b.ne	4138e8 <ferror@plt+0x11068>  // b.any
  4138f4:	ldp	x1, x2, [x22, #16]
  4138f8:	mov	w19, #0x79b9                	// #31161
  4138fc:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x106d8>
  413900:	mov	x21, x20
  413904:	add	x24, x24, #0xc80
  413908:	movk	w19, #0x9e37, lsl #16
  41390c:	stp	x0, x25, [x22]
  413910:	sub	x1, x1, x2
  413914:	stp	x1, xzr, [x22, #16]
  413918:	str	w26, [x22, #40]
  41391c:	b	41392c <ferror@plt+0x110ac>
  413920:	add	x21, x21, #0x10
  413924:	cmp	x23, x21
  413928:	b.ls	413a80 <ferror@plt+0x11200>  // b.plast
  41392c:	ldr	x25, [x21]
  413930:	cmp	x25, #0x1
  413934:	b.ls	413920 <ferror@plt+0x110a0>  // b.plast
  413938:	ldr	x3, [x25]
  41393c:	mov	w2, #0x0                   	// #0
  413940:	mov	x1, #0x8                   	// #8
  413944:	add	x0, sp, #0x58
  413948:	str	x3, [sp, #88]
  41394c:	bl	45c130 <ferror@plt+0x598b0>
  413950:	mov	w2, w0
  413954:	ldr	x3, [x25, #8]
  413958:	mov	x1, #0x8                   	// #8
  41395c:	add	x0, sp, #0x58
  413960:	str	x3, [sp, #88]
  413964:	bl	45c130 <ferror@plt+0x598b0>
  413968:	ldr	w4, [x25, #16]
  41396c:	ldr	w2, [x22, #40]
  413970:	sub	w1, w19, w4
  413974:	sub	w4, w4, w0
  413978:	sub	w1, w1, w0
  41397c:	eor	w1, w1, w0, lsr #13
  413980:	lsl	x2, x2, #4
  413984:	sub	w4, w4, w1
  413988:	sub	w3, w0, w1
  41398c:	eor	w4, w4, w1, lsl #8
  413990:	add	x5, x24, x2
  413994:	sub	w3, w3, w4
  413998:	sub	w1, w1, w4
  41399c:	eor	w3, w3, w4, lsr #13
  4139a0:	ldr	w6, [x24, x2]
  4139a4:	sub	w1, w1, w3
  4139a8:	sub	w4, w4, w3
  4139ac:	eor	w1, w1, w3, lsr #12
  4139b0:	ldr	w0, [x5, #4]
  4139b4:	sub	w4, w4, w1
  4139b8:	sub	w3, w3, w1
  4139bc:	eor	w4, w4, w1, lsl #16
  4139c0:	ldr	w7, [x5, #12]
  4139c4:	sub	w3, w3, w4
  4139c8:	sub	w2, w1, w4
  4139cc:	eor	w3, w3, w4, lsr #5
  4139d0:	sub	w2, w2, w3
  4139d4:	sub	w4, w4, w3
  4139d8:	eor	w2, w2, w3, lsr #3
  4139dc:	sub	w4, w4, w2
  4139e0:	sub	w1, w3, w2
  4139e4:	eor	w2, w4, w2, lsl #10
  4139e8:	sub	w1, w1, w2
  4139ec:	eor	w1, w1, w2, lsr #15
  4139f0:	ldr	x2, [x22]
  4139f4:	umull	x0, w1, w0
  4139f8:	lsr	x3, x0, #32
  4139fc:	sub	w0, w1, w3
  413a00:	add	w0, w3, w0, lsr #1
  413a04:	lsr	w0, w0, w7
  413a08:	msub	w0, w0, w6, w1
  413a0c:	ubfiz	x3, x0, #4, #32
  413a10:	add	x4, x2, x3
  413a14:	ldr	x3, [x2, x3]
  413a18:	cbz	x3, 413a6c <ferror@plt+0x111ec>
  413a1c:	ldr	w3, [x5, #8]
  413a20:	add	w4, w1, #0x1
  413a24:	sub	w6, w6, #0x2
  413a28:	ldr	x5, [x22, #8]
  413a2c:	umull	x3, w1, w3
  413a30:	lsr	x3, x3, #32
  413a34:	sub	w1, w1, w3
  413a38:	add	w1, w3, w1, lsr #1
  413a3c:	lsr	w1, w1, w7
  413a40:	msub	w1, w1, w6, w4
  413a44:	nop
  413a48:	add	w3, w0, w1
  413a4c:	mov	x0, x3
  413a50:	cmp	x5, w3, uxtw
  413a54:	b.hi	413af8 <ferror@plt+0x11278>  // b.pmore
  413a58:	sub	w0, w3, w5
  413a5c:	ubfiz	x3, x0, #4, #32
  413a60:	add	x4, x2, x3
  413a64:	ldr	x3, [x2, x3]
  413a68:	cbnz	x3, 413a48 <ferror@plt+0x111c8>
  413a6c:	ldp	x0, x1, [x21]
  413a70:	stp	x0, x1, [x4]
  413a74:	add	x21, x21, #0x10
  413a78:	cmp	x23, x21
  413a7c:	b.hi	41392c <ferror@plt+0x110ac>  // b.pmore
  413a80:	ldrb	w0, [x22, #44]
  413a84:	cbnz	w0, 413b14 <ferror@plt+0x11294>
  413a88:	mov	x0, x20
  413a8c:	bl	402640 <free@plt>
  413a90:	ldp	x19, x20, [sp, #16]
  413a94:	ldp	x21, x22, [sp, #32]
  413a98:	ldp	x23, x24, [sp, #48]
  413a9c:	ldp	x25, x26, [sp, #64]
  413aa0:	ldp	x29, x30, [sp], #96
  413aa4:	ret
  413aa8:	bl	403f18 <ferror@plt+0x1698>
  413aac:	mov	w26, w0
  413ab0:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  413ab4:	add	x1, x1, #0xc80
  413ab8:	ubfiz	x0, x26, #4, #32
  413abc:	ldr	w25, [x1, x0]
  413ac0:	ldrb	w0, [x22, #44]
  413ac4:	cbz	w0, 4138cc <ferror@plt+0x1104c>
  413ac8:	lsl	x0, x25, #4
  413acc:	mov	x3, #0x0                   	// #0
  413ad0:	mov	x2, #0x0                   	// #0
  413ad4:	mov	x1, #0x0                   	// #0
  413ad8:	bl	4043e8 <ferror@plt+0x1b68>
  413adc:	cbnz	x0, 4138d8 <ferror@plt+0x11058>
  413ae0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  413ae4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  413ae8:	add	x2, x2, #0xc48
  413aec:	add	x0, x0, #0xc58
  413af0:	mov	w1, #0x2b5                 	// #693
  413af4:	bl	4028b0 <ferror@plt+0x30>
  413af8:	lsl	x3, x3, #4
  413afc:	add	x4, x2, x3
  413b00:	ldr	x3, [x2, x3]
  413b04:	cbnz	x3, 413a48 <ferror@plt+0x111c8>
  413b08:	ldp	x0, x1, [x21]
  413b0c:	stp	x0, x1, [x4]
  413b10:	b	413a74 <ferror@plt+0x111f4>
  413b14:	mov	x0, x20
  413b18:	bl	404420 <ferror@plt+0x1ba0>
  413b1c:	ldp	x19, x20, [sp, #16]
  413b20:	ldp	x21, x22, [sp, #32]
  413b24:	ldp	x23, x24, [sp, #48]
  413b28:	ldp	x25, x26, [sp, #64]
  413b2c:	ldp	x29, x30, [sp], #96
  413b30:	ret
  413b34:	nop
  413b38:	stp	x29, x30, [sp, #-48]!
  413b3c:	cmp	w3, #0x1
  413b40:	mov	x29, sp
  413b44:	stp	x19, x20, [sp, #16]
  413b48:	mov	w20, w3
  413b4c:	mov	x19, x0
  413b50:	stp	x21, x22, [sp, #32]
  413b54:	mov	x21, x1
  413b58:	mov	w22, w2
  413b5c:	ldr	x3, [x0, #8]
  413b60:	b.eq	413cc0 <ferror@plt+0x11440>  // b.none
  413b64:	ldr	w0, [x19, #40]
  413b68:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x106d8>
  413b6c:	ldr	w5, [x19, #32]
  413b70:	add	x2, x2, #0xc80
  413b74:	ldr	x1, [x19]
  413b78:	lsl	x0, x0, #4
  413b7c:	add	x4, x2, x0
  413b80:	add	w5, w5, #0x1
  413b84:	str	w5, [x19, #32]
  413b88:	add	w9, w22, #0x1
  413b8c:	ldr	w5, [x4, #4]
  413b90:	ldr	w7, [x4, #12]
  413b94:	ldr	w4, [x4, #8]
  413b98:	ldr	w2, [x2, x0]
  413b9c:	umull	x5, w22, w5
  413ba0:	sub	w8, w2, #0x2
  413ba4:	umull	x4, w22, w4
  413ba8:	lsr	x5, x5, #32
  413bac:	sub	w0, w22, w5
  413bb0:	lsr	x4, x4, #32
  413bb4:	add	w5, w5, w0, lsr #1
  413bb8:	sub	w6, w22, w4
  413bbc:	lsr	w5, w5, w7
  413bc0:	add	w6, w4, w6, lsr #1
  413bc4:	msub	w2, w5, w2, w22
  413bc8:	lsr	w6, w6, w7
  413bcc:	msub	w6, w6, w8, w9
  413bd0:	ubfiz	x4, x2, #4, #32
  413bd4:	add	x0, x1, x4
  413bd8:	ldr	x4, [x1, x4]
  413bdc:	cbz	x4, 413d18 <ferror@plt+0x11498>
  413be0:	cmp	x4, #0x1
  413be4:	b.eq	413c00 <ferror@plt+0x11380>  // b.none
  413be8:	ldr	x5, [x21]
  413bec:	ldr	x8, [x4]
  413bf0:	ldr	x7, [x5]
  413bf4:	cmp	x8, x7
  413bf8:	b.eq	413cdc <ferror@plt+0x1145c>  // b.none
  413bfc:	mov	x0, #0x0                   	// #0
  413c00:	ldr	w5, [x19, #36]
  413c04:	nop
  413c08:	add	w4, w2, w6
  413c0c:	add	w5, w5, #0x1
  413c10:	mov	x2, x4
  413c14:	cmp	x3, w4, uxtw
  413c18:	b.hi	413c24 <ferror@plt+0x113a4>  // b.pmore
  413c1c:	sub	w4, w4, w3
  413c20:	mov	x2, x4
  413c24:	lsl	x4, x4, #4
  413c28:	add	x10, x1, x4
  413c2c:	ldr	x4, [x1, x4]
  413c30:	cmp	x4, #0x1
  413c34:	cbz	x4, 413c94 <ferror@plt+0x11414>
  413c38:	b.eq	413c88 <ferror@plt+0x11408>  // b.none
  413c3c:	ldr	x7, [x21]
  413c40:	ldr	x9, [x4]
  413c44:	ldr	x8, [x7]
  413c48:	cmp	x9, x8
  413c4c:	b.ne	413c08 <ferror@plt+0x11388>  // b.any
  413c50:	ldr	x9, [x4, #8]
  413c54:	ldr	x8, [x7, #8]
  413c58:	cmp	x9, x8
  413c5c:	b.ne	413c08 <ferror@plt+0x11388>  // b.any
  413c60:	ldr	w8, [x4, #16]
  413c64:	ldr	w4, [x7, #16]
  413c68:	cmp	w8, w4
  413c6c:	b.ne	413c08 <ferror@plt+0x11388>  // b.any
  413c70:	str	w5, [x19, #36]
  413c74:	mov	x0, x10
  413c78:	ldp	x19, x20, [sp, #16]
  413c7c:	ldp	x21, x22, [sp, #32]
  413c80:	ldp	x29, x30, [sp], #48
  413c84:	ret
  413c88:	cmp	x0, #0x0
  413c8c:	csel	x0, x0, x10, ne  // ne = any
  413c90:	b	413c08 <ferror@plt+0x11388>
  413c94:	str	w5, [x19, #36]
  413c98:	cbz	w20, 413d04 <ferror@plt+0x11484>
  413c9c:	cbz	x0, 413d38 <ferror@plt+0x114b8>
  413ca0:	ldr	x1, [x19, #24]
  413ca4:	sub	x1, x1, #0x1
  413ca8:	str	x1, [x19, #24]
  413cac:	str	xzr, [x0]
  413cb0:	ldp	x19, x20, [sp, #16]
  413cb4:	ldp	x21, x22, [sp, #32]
  413cb8:	ldp	x29, x30, [sp], #48
  413cbc:	ret
  413cc0:	ldr	x2, [x0, #16]
  413cc4:	add	x1, x3, x3, lsl #1
  413cc8:	cmp	x1, x2, lsl #2
  413ccc:	b.hi	413b64 <ferror@plt+0x112e4>  // b.pmore
  413cd0:	bl	413870 <ferror@plt+0x10ff0>
  413cd4:	ldr	x3, [x19, #8]
  413cd8:	b	413b64 <ferror@plt+0x112e4>
  413cdc:	ldr	x8, [x4, #8]
  413ce0:	ldr	x7, [x5, #8]
  413ce4:	cmp	x8, x7
  413ce8:	b.ne	413bfc <ferror@plt+0x1137c>  // b.any
  413cec:	ldr	w7, [x4, #16]
  413cf0:	ldr	w4, [x5, #16]
  413cf4:	cmp	w7, w4
  413cf8:	b.eq	413cb0 <ferror@plt+0x11430>  // b.none
  413cfc:	mov	x0, #0x0                   	// #0
  413d00:	b	413c00 <ferror@plt+0x11380>
  413d04:	mov	x0, #0x0                   	// #0
  413d08:	ldp	x19, x20, [sp, #16]
  413d0c:	ldp	x21, x22, [sp, #32]
  413d10:	ldp	x29, x30, [sp], #48
  413d14:	ret
  413d18:	cbz	w20, 413d04 <ferror@plt+0x11484>
  413d1c:	ldr	x1, [x19, #16]
  413d20:	ldp	x21, x22, [sp, #32]
  413d24:	add	x1, x1, #0x1
  413d28:	str	x1, [x19, #16]
  413d2c:	ldp	x19, x20, [sp, #16]
  413d30:	ldp	x29, x30, [sp], #48
  413d34:	ret
  413d38:	mov	x0, x10
  413d3c:	b	413d1c <ferror@plt+0x1149c>
  413d40:	stp	x29, x30, [sp, #-64]!
  413d44:	mov	x29, sp
  413d48:	stp	x19, x20, [sp, #16]
  413d4c:	mov	x20, x0
  413d50:	ldp	x19, x1, [x0, #8]
  413d54:	stp	x21, x22, [sp, #32]
  413d58:	ldr	x0, [x0, #24]
  413d5c:	ldr	x22, [x20]
  413d60:	sub	x1, x1, x0
  413d64:	add	x21, x19, x19, lsl #1
  413d68:	str	x23, [sp, #48]
  413d6c:	cmp	x19, x1, lsl #1
  413d70:	ldr	w23, [x20, #40]
  413d74:	lsl	x0, x1, #1
  413d78:	add	x21, x22, x21, lsl #3
  413d7c:	b.cc	413ecc <ferror@plt+0x1164c>  // b.lo, b.ul, b.last
  413d80:	lsl	w1, w1, #3
  413d84:	mov	x2, #0x20                  	// #32
  413d88:	cmp	x1, x2
  413d8c:	csel	x1, x1, x2, cs  // cs = hs, nlast
  413d90:	cmp	x19, x1
  413d94:	b.hi	413ecc <ferror@plt+0x1164c>  // b.pmore
  413d98:	ldrb	w0, [x20, #44]
  413d9c:	cbnz	w0, 413eec <ferror@plt+0x1166c>
  413da0:	mov	x0, x19
  413da4:	mov	x1, #0x18                  	// #24
  413da8:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  413dac:	cbz	x19, 413dcc <ferror@plt+0x1154c>
  413db0:	add	x2, x19, x19, lsl #1
  413db4:	mov	x1, x0
  413db8:	add	x2, x0, x2, lsl #3
  413dbc:	nop
  413dc0:	str	xzr, [x1], #24
  413dc4:	cmp	x1, x2
  413dc8:	b.ne	413dc0 <ferror@plt+0x11540>  // b.any
  413dcc:	ldp	x1, x2, [x20, #16]
  413dd0:	ubfiz	x4, x23, #4, #32
  413dd4:	adrp	x9, 46d000 <_obstack_memory_used@@Base+0x106d8>
  413dd8:	add	x9, x9, #0xc80
  413ddc:	mov	x3, x22
  413de0:	add	x9, x9, x4
  413de4:	mov	w8, #0x18                  	// #24
  413de8:	stp	x0, x19, [x20]
  413dec:	sub	x1, x1, x2
  413df0:	stp	x1, xzr, [x20, #16]
  413df4:	str	w23, [x20, #40]
  413df8:	b	413e08 <ferror@plt+0x11588>
  413dfc:	add	x3, x3, #0x18
  413e00:	cmp	x21, x3
  413e04:	b.ls	413eac <ferror@plt+0x1162c>  // b.plast
  413e08:	ldr	x2, [x3]
  413e0c:	cmp	x2, #0x1
  413e10:	b.ls	413dfc <ferror@plt+0x1157c>  // b.plast
  413e14:	ldp	w5, w1, [x9]
  413e18:	ubfx	x10, x2, #3, #32
  413e1c:	asr	x2, x2, #3
  413e20:	ldr	w7, [x9, #12]
  413e24:	mul	x1, x1, x10
  413e28:	lsr	x4, x1, #32
  413e2c:	sub	w1, w2, w4
  413e30:	add	w1, w4, w1, lsr #1
  413e34:	lsr	w1, w1, w7
  413e38:	msub	w1, w1, w5, w2
  413e3c:	umull	x6, w1, w8
  413e40:	add	x4, x0, x6
  413e44:	ldr	x6, [x0, x6]
  413e48:	cbz	x6, 413e90 <ferror@plt+0x11610>
  413e4c:	ldr	w4, [x9, #8]
  413e50:	add	w6, w2, #0x1
  413e54:	sub	w5, w5, #0x2
  413e58:	mul	x4, x4, x10
  413e5c:	lsr	x4, x4, #32
  413e60:	sub	w2, w2, w4
  413e64:	add	w2, w4, w2, lsr #1
  413e68:	lsr	w2, w2, w7
  413e6c:	msub	w2, w2, w5, w6
  413e70:	add	w1, w1, w2
  413e74:	cmp	x19, w1, uxtw
  413e78:	b.hi	413f20 <ferror@plt+0x116a0>  // b.pmore
  413e7c:	sub	w1, w1, w19
  413e80:	umull	x5, w1, w8
  413e84:	add	x4, x0, x5
  413e88:	ldr	x5, [x0, x5]
  413e8c:	cbnz	x5, 413e70 <ferror@plt+0x115f0>
  413e90:	ldp	x6, x7, [x3]
  413e94:	stp	x6, x7, [x4]
  413e98:	ldr	x1, [x3, #16]
  413e9c:	str	x1, [x4, #16]
  413ea0:	add	x3, x3, #0x18
  413ea4:	cmp	x21, x3
  413ea8:	b.hi	413e08 <ferror@plt+0x11588>  // b.pmore
  413eac:	ldrb	w0, [x20, #44]
  413eb0:	cbnz	w0, 413f44 <ferror@plt+0x116c4>
  413eb4:	mov	x0, x22
  413eb8:	ldp	x19, x20, [sp, #16]
  413ebc:	ldp	x21, x22, [sp, #32]
  413ec0:	ldr	x23, [sp, #48]
  413ec4:	ldp	x29, x30, [sp], #64
  413ec8:	b	402640 <free@plt>
  413ecc:	bl	403f18 <ferror@plt+0x1698>
  413ed0:	mov	w23, w0
  413ed4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  413ed8:	add	x1, x1, #0xc80
  413edc:	ubfiz	x0, x23, #4, #32
  413ee0:	ldr	w19, [x1, x0]
  413ee4:	ldrb	w0, [x20, #44]
  413ee8:	cbz	w0, 413da0 <ferror@plt+0x11520>
  413eec:	add	x0, x19, x19, lsl #1
  413ef0:	mov	x3, #0x0                   	// #0
  413ef4:	mov	x2, #0x0                   	// #0
  413ef8:	mov	x1, #0x0                   	// #0
  413efc:	lsl	x0, x0, #3
  413f00:	bl	4043e8 <ferror@plt+0x1b68>
  413f04:	cbnz	x0, 413dac <ferror@plt+0x1152c>
  413f08:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  413f0c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  413f10:	add	x2, x2, #0xc48
  413f14:	add	x0, x0, #0xc58
  413f18:	mov	w1, #0x2b5                 	// #693
  413f1c:	bl	4028b0 <ferror@plt+0x30>
  413f20:	umull	x5, w1, w8
  413f24:	add	x4, x0, x5
  413f28:	ldr	x5, [x0, x5]
  413f2c:	cbnz	x5, 413e70 <ferror@plt+0x115f0>
  413f30:	ldp	x6, x7, [x3]
  413f34:	stp	x6, x7, [x4]
  413f38:	ldr	x1, [x3, #16]
  413f3c:	str	x1, [x4, #16]
  413f40:	b	413ea0 <ferror@plt+0x11620>
  413f44:	mov	x0, x22
  413f48:	ldp	x19, x20, [sp, #16]
  413f4c:	ldp	x21, x22, [sp, #32]
  413f50:	ldr	x23, [sp, #48]
  413f54:	ldp	x29, x30, [sp], #64
  413f58:	b	404420 <ferror@plt+0x1ba0>
  413f5c:	nop
  413f60:	stp	x29, x30, [sp, #-48]!
  413f64:	cmp	w3, #0x1
  413f68:	mov	x29, sp
  413f6c:	stp	x19, x20, [sp, #16]
  413f70:	mov	x20, x0
  413f74:	mov	w19, w2
  413f78:	stp	x21, x22, [sp, #32]
  413f7c:	mov	w22, w3
  413f80:	mov	x21, x1
  413f84:	ldr	x10, [x0, #8]
  413f88:	b.eq	4140c0 <ferror@plt+0x11840>  // b.none
  413f8c:	ldr	w3, [x20, #40]
  413f90:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  413f94:	ldr	w2, [x20, #32]
  413f98:	add	x0, x0, #0xc80
  413f9c:	mov	w1, #0x18                  	// #24
  413fa0:	lsl	x5, x3, #4
  413fa4:	add	w2, w2, #0x1
  413fa8:	add	x6, x0, x5
  413fac:	str	w2, [x20, #32]
  413fb0:	ldr	x9, [x20]
  413fb4:	ldr	w4, [x6, #4]
  413fb8:	ldr	w2, [x0, x5]
  413fbc:	ldr	w7, [x6, #12]
  413fc0:	umull	x4, w19, w4
  413fc4:	lsr	x4, x4, #32
  413fc8:	sub	w5, w19, w4
  413fcc:	add	w4, w4, w5, lsr #1
  413fd0:	lsr	w4, w4, w7
  413fd4:	msub	w4, w4, w2, w19
  413fd8:	umull	x1, w4, w1
  413fdc:	add	x8, x9, x1
  413fe0:	ldr	x1, [x9, x1]
  413fe4:	cbz	x1, 4140f0 <ferror@plt+0x11870>
  413fe8:	cmp	x1, #0x1
  413fec:	b.eq	414000 <ferror@plt+0x11780>  // b.none
  413ff0:	ldr	x5, [x21]
  413ff4:	cmp	x1, x5
  413ff8:	b.eq	4140dc <ferror@plt+0x1185c>  // b.none
  413ffc:	mov	x8, #0x0                   	// #0
  414000:	add	x0, x0, x3, lsl #4
  414004:	sub	w2, w2, #0x2
  414008:	add	w1, w19, #0x1
  41400c:	ldr	w5, [x20, #36]
  414010:	ldr	w0, [x0, #8]
  414014:	umull	x0, w19, w0
  414018:	lsr	x0, x0, #32
  41401c:	sub	w6, w19, w0
  414020:	add	w6, w0, w6, lsr #1
  414024:	lsr	w6, w6, w7
  414028:	msub	w6, w6, w2, w1
  41402c:	nop
  414030:	add	w2, w4, w6
  414034:	add	w5, w5, #0x1
  414038:	mov	x4, x2
  41403c:	cmp	x10, w2, uxtw
  414040:	b.hi	41404c <ferror@plt+0x117cc>  // b.pmore
  414044:	sub	w2, w2, w10
  414048:	mov	x4, x2
  41404c:	add	x2, x2, x2, lsl #1
  414050:	add	x0, x9, x2, lsl #3
  414054:	ldr	x2, [x9, x2, lsl #3]
  414058:	cmp	x2, #0x1
  41405c:	cbz	x2, 414090 <ferror@plt+0x11810>
  414060:	b.eq	414084 <ferror@plt+0x11804>  // b.none
  414064:	ldr	x7, [x21]
  414068:	cmp	x7, x2
  41406c:	b.ne	414030 <ferror@plt+0x117b0>  // b.any
  414070:	str	w5, [x20, #36]
  414074:	ldp	x19, x20, [sp, #16]
  414078:	ldp	x21, x22, [sp, #32]
  41407c:	ldp	x29, x30, [sp], #48
  414080:	ret
  414084:	cmp	x8, #0x0
  414088:	csel	x8, x8, x0, ne  // ne = any
  41408c:	b	414030 <ferror@plt+0x117b0>
  414090:	str	w5, [x20, #36]
  414094:	cbz	w22, 414114 <ferror@plt+0x11894>
  414098:	cbz	x8, 414128 <ferror@plt+0x118a8>
  41409c:	ldr	x1, [x20, #24]
  4140a0:	mov	x0, x8
  4140a4:	ldp	x21, x22, [sp, #32]
  4140a8:	sub	x1, x1, #0x1
  4140ac:	str	x1, [x20, #24]
  4140b0:	str	xzr, [x8]
  4140b4:	ldp	x19, x20, [sp, #16]
  4140b8:	ldp	x29, x30, [sp], #48
  4140bc:	ret
  4140c0:	ldr	x2, [x0, #16]
  4140c4:	add	x1, x10, x10, lsl #1
  4140c8:	cmp	x1, x2, lsl #2
  4140cc:	b.hi	413f8c <ferror@plt+0x1170c>  // b.pmore
  4140d0:	bl	413d40 <ferror@plt+0x114c0>
  4140d4:	ldr	x10, [x20, #8]
  4140d8:	b	413f8c <ferror@plt+0x1170c>
  4140dc:	mov	x0, x8
  4140e0:	ldp	x19, x20, [sp, #16]
  4140e4:	ldp	x21, x22, [sp, #32]
  4140e8:	ldp	x29, x30, [sp], #48
  4140ec:	ret
  4140f0:	cbz	w22, 414114 <ferror@plt+0x11894>
  4140f4:	ldr	x1, [x20, #16]
  4140f8:	mov	x0, x8
  4140fc:	ldp	x21, x22, [sp, #32]
  414100:	add	x1, x1, #0x1
  414104:	str	x1, [x20, #16]
  414108:	ldp	x19, x20, [sp, #16]
  41410c:	ldp	x29, x30, [sp], #48
  414110:	ret
  414114:	mov	x0, #0x0                   	// #0
  414118:	ldp	x19, x20, [sp, #16]
  41411c:	ldp	x21, x22, [sp, #32]
  414120:	ldp	x29, x30, [sp], #48
  414124:	ret
  414128:	mov	x8, x0
  41412c:	b	4140f4 <ferror@plt+0x11874>
  414130:	stp	x29, x30, [sp, #-112]!
  414134:	mov	x29, sp
  414138:	stp	x19, x20, [sp, #16]
  41413c:	mov	w19, w0
  414140:	mov	w20, w2
  414144:	stp	x21, x22, [sp, #32]
  414148:	mov	x21, x8
  41414c:	mov	x22, #0x0                   	// #0
  414150:	stp	x23, x24, [sp, #48]
  414154:	and	w24, w1, #0xff
  414158:	tbnz	w0, #31, 414234 <ferror@plt+0x119b4>
  41415c:	stp	xzr, xzr, [sp, #80]
  414160:	cmp	w19, #0x1
  414164:	stp	xzr, xzr, [sp, #96]
  414168:	b.ls	414220 <ferror@plt+0x119a0>  // b.plast
  41416c:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  414170:	mov	w2, #0x0                   	// #0
  414174:	ldr	x0, [x23, #1888]
  414178:	cbz	w24, 414274 <ferror@plt+0x119f4>
  41417c:	mov	w1, w19
  414180:	add	x3, sp, #0x48
  414184:	bl	432b40 <ferror@plt+0x302c0>
  414188:	mov	w19, w0
  41418c:	cmp	w20, #0x1
  414190:	b.eq	41425c <ferror@plt+0x119dc>  // b.none
  414194:	cmp	w20, #0x2
  414198:	b.ne	4141d8 <ferror@plt+0x11958>  // b.any
  41419c:	ldr	x0, [x23, #1888]
  4141a0:	mov	w1, w19
  4141a4:	bl	431d88 <ferror@plt+0x2f508>
  4141a8:	lsr	x0, x0, #32
  4141ac:	cmp	w19, w0
  4141b0:	b.eq	4141dc <ferror@plt+0x1195c>  // b.none
  4141b4:	mov	x8, x21
  4141b8:	mov	w2, w20
  4141bc:	mov	w1, w24
  4141c0:	bl	414130 <ferror@plt+0x118b0>
  4141c4:	ldp	x19, x20, [sp, #16]
  4141c8:	ldp	x21, x22, [sp, #32]
  4141cc:	ldp	x23, x24, [sp, #48]
  4141d0:	ldp	x29, x30, [sp], #112
  4141d4:	ret
  4141d8:	cbnz	w20, 4142bc <ferror@plt+0x11a3c>
  4141dc:	ldr	x0, [x23, #1888]
  4141e0:	add	x8, sp, #0x50
  4141e4:	ldr	x1, [sp, #72]
  4141e8:	mov	w2, w19
  4141ec:	bl	433058 <ferror@plt+0x307d8>
  4141f0:	str	x22, [sp, #96]
  4141f4:	cmp	w19, #0x1
  4141f8:	b.ls	414224 <ferror@plt+0x119a4>  // b.plast
  4141fc:	ldp	x0, x1, [sp, #80]
  414200:	stp	x0, x1, [x21]
  414204:	ldp	x0, x1, [sp, #96]
  414208:	stp	x0, x1, [x21, #16]
  41420c:	ldp	x19, x20, [sp, #16]
  414210:	ldp	x21, x22, [sp, #32]
  414214:	ldp	x23, x24, [sp, #48]
  414218:	ldp	x29, x30, [sp], #112
  41421c:	ret
  414220:	str	x22, [sp, #96]
  414224:	mov	x0, #0x0                   	// #0
  414228:	cbnz	w19, 4142a8 <ferror@plt+0x11a28>
  41422c:	str	x0, [sp, #80]
  414230:	b	4141fc <ferror@plt+0x1197c>
  414234:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  414238:	mov	w1, w0
  41423c:	ldr	x0, [x23, #1888]
  414240:	bl	431050 <ferror@plt+0x2e7d0>
  414244:	mov	x22, x0
  414248:	ldr	x0, [x23, #1888]
  41424c:	mov	w1, w19
  414250:	bl	431068 <ferror@plt+0x2e7e8>
  414254:	mov	w19, w0
  414258:	b	41415c <ferror@plt+0x118dc>
  41425c:	ldr	x0, [x23, #1888]
  414260:	mov	w1, w19
  414264:	bl	431d88 <ferror@plt+0x2f508>
  414268:	cmp	w19, w0
  41426c:	b.eq	4141dc <ferror@plt+0x1195c>  // b.none
  414270:	b	4141b4 <ferror@plt+0x11934>
  414274:	mov	w1, w19
  414278:	mov	x2, #0x0                   	// #0
  41427c:	bl	432e80 <ferror@plt+0x30600>
  414280:	mov	w19, w0
  414284:	ldr	x0, [x23, #1888]
  414288:	mov	w1, w19
  41428c:	add	x3, sp, #0x48
  414290:	mov	w2, #0x1                   	// #1
  414294:	bl	432b40 <ferror@plt+0x302c0>
  414298:	mov	w19, w0
  41429c:	cmp	w20, #0x1
  4142a0:	b.ne	414194 <ferror@plt+0x11914>  // b.any
  4142a4:	b	41425c <ferror@plt+0x119dc>
  4142a8:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4142ac:	add	x0, x0, #0xfa0
  4142b0:	bl	402830 <gettext@plt>
  4142b4:	str	x0, [sp, #80]
  4142b8:	b	4141fc <ferror@plt+0x1197c>
  4142bc:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4142c0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4142c4:	add	x2, x2, #0xc80
  4142c8:	add	x0, x0, #0xc98
  4142cc:	mov	w1, #0xc7                  	// #199
  4142d0:	bl	4028b0 <ferror@plt+0x30>
  4142d4:	nop
  4142d8:	stp	x29, x30, [sp, #-112]!
  4142dc:	mov	x29, sp
  4142e0:	stp	x19, x20, [sp, #16]
  4142e4:	mov	x19, x0
  4142e8:	ldr	x20, [x0, #40]
  4142ec:	stp	x21, x22, [sp, #32]
  4142f0:	mov	x22, x2
  4142f4:	stp	x23, x24, [sp, #48]
  4142f8:	mov	x23, x1
  4142fc:	cbz	x20, 414320 <ferror@plt+0x11aa0>
  414300:	ldr	x0, [x0, #32]
  414304:	cmp	x20, x0
  414308:	b.eq	414320 <ferror@plt+0x11aa0>  // b.none
  41430c:	ldr	x21, [x19, #48]
  414310:	sub	x0, x20, #0x1
  414314:	cmp	x21, x0
  414318:	b.cc	414330 <ferror@plt+0x11ab0>  // b.lo, b.ul, b.last
  41431c:	nop
  414320:	ldr	x0, [x19, #16]
  414324:	bl	402560 <feof@plt>
  414328:	cbz	w0, 41447c <ferror@plt+0x11bfc>
  41432c:	ldp	x20, x21, [x19, #40]
  414330:	subs	x2, x20, x21
  414334:	b.eq	414464 <ferror@plt+0x11be4>  // b.none
  414338:	stp	x25, x26, [sp, #64]
  41433c:	mov	w1, #0xa                   	// #10
  414340:	ldr	x25, [x19, #24]
  414344:	add	x24, x25, x21
  414348:	mov	x0, x24
  41434c:	bl	402710 <memchr@plt>
  414350:	mov	x26, x0
  414354:	cbz	x0, 41442c <ferror@plt+0x11bac>
  414358:	add	x21, x0, #0x1
  41435c:	strb	wzr, [x19, #72]
  414360:	ldr	x0, [x19, #16]
  414364:	bl	402880 <ferror@plt>
  414368:	cbnz	w0, 414460 <ferror@plt+0x11be0>
  41436c:	stp	x27, x28, [sp, #80]
  414370:	sub	x27, x26, x24
  414374:	ldp	x0, x25, [x19, #40]
  414378:	cmp	x25, x0
  41437c:	b.cs	414384 <ferror@plt+0x11b04>  // b.hs, b.nlast
  414380:	str	x24, [x23]
  414384:	ldp	x23, x1, [x19, #56]
  414388:	add	x23, x23, #0x1
  41438c:	str	x23, [x19, #56]
  414390:	cmp	x23, x1
  414394:	b.hi	4143f8 <ferror@plt+0x11b78>  // b.pmore
  414398:	ldr	x24, [x19, #80]
  41439c:	cbz	x24, 4144ec <ferror@plt+0x11c6c>
  4143a0:	ldr	w0, [x24, #4]
  4143a4:	cmp	w0, #0x63
  4143a8:	b.hi	4143f8 <ferror@plt+0x11b78>  // b.pmore
  4143ac:	cmp	x1, #0x64
  4143b0:	b.hi	414618 <ferror@plt+0x11d98>  // b.pmore
  4143b4:	cmp	x23, w0, uxtw
  4143b8:	mov	w2, w0
  4143bc:	b.ls	4143f8 <ferror@plt+0x11b78>  // b.plast
  4143c0:	ldr	w6, [x24]
  4143c4:	add	w1, w0, #0x1
  4143c8:	ldr	x20, [x19, #24]
  4143cc:	ubfx	x6, x6, #0, #31
  4143d0:	cmp	w0, w6
  4143d4:	sub	x20, x26, x20
  4143d8:	b.eq	414778 <ferror@plt+0x11ef8>  // b.none
  4143dc:	add	x2, x2, x2, lsl #1
  4143e0:	str	w1, [x24, #4]
  4143e4:	lsl	x2, x2, #3
  4143e8:	add	x0, x2, #0x8
  4143ec:	add	x1, x24, x0
  4143f0:	str	x23, [x24, x0]
  4143f4:	stp	x25, x20, [x1, #8]
  4143f8:	cbz	x21, 414600 <ferror@plt+0x11d80>
  4143fc:	ldr	x0, [x19, #24]
  414400:	sub	x0, x21, x0
  414404:	ldp	x25, x26, [sp, #64]
  414408:	str	x0, [x19, #48]
  41440c:	str	x27, [x22]
  414410:	mov	w0, #0x1                   	// #1
  414414:	ldp	x19, x20, [sp, #16]
  414418:	ldp	x21, x22, [sp, #32]
  41441c:	ldp	x23, x24, [sp, #48]
  414420:	ldp	x27, x28, [sp, #80]
  414424:	ldp	x29, x30, [sp], #112
  414428:	ret
  41442c:	mov	x26, #0x1000                	// #4096
  414430:	cbz	x20, 414524 <ferror@plt+0x11ca4>
  414434:	ldr	x0, [x19, #32]
  414438:	cmp	x0, x20
  41443c:	b.eq	414524 <ferror@plt+0x11ca4>  // b.none
  414440:	sub	x0, x20, #0x1
  414444:	cmp	x0, x21
  414448:	b.ls	414524 <ferror@plt+0x11ca4>  // b.plast
  41444c:	ldr	x0, [x19, #16]
  414450:	mov	w1, #0x1                   	// #1
  414454:	strb	w1, [x19, #72]
  414458:	bl	402880 <ferror@plt>
  41445c:	cbz	w0, 414608 <ferror@plt+0x11d88>
  414460:	ldp	x25, x26, [sp, #64]
  414464:	mov	w0, #0x0                   	// #0
  414468:	ldp	x19, x20, [sp, #16]
  41446c:	ldp	x21, x22, [sp, #32]
  414470:	ldp	x23, x24, [sp, #48]
  414474:	ldp	x29, x30, [sp], #112
  414478:	ret
  41447c:	ldr	x0, [x19, #16]
  414480:	bl	402880 <ferror@plt>
  414484:	cbnz	w0, 41432c <ferror@plt+0x11aac>
  414488:	ldp	x0, x20, [x19, #24]
  41448c:	ldr	x1, [x19, #40]
  414490:	cmp	x20, x1
  414494:	b.ne	4144b8 <ferror@plt+0x11c38>  // b.any
  414498:	cmp	x20, #0x0
  41449c:	lsl	x20, x20, #1
  4144a0:	mov	x1, #0x1000                	// #4096
  4144a4:	csel	x20, x20, x1, ne  // ne = any
  4144a8:	mov	x1, x20
  4144ac:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4144b0:	stp	x0, x20, [x19, #24]
  4144b4:	ldr	x1, [x19, #40]
  4144b8:	sub	x2, x20, x1
  4144bc:	ldr	x3, [x19, #16]
  4144c0:	add	x0, x0, x1
  4144c4:	mov	x1, #0x1                   	// #1
  4144c8:	bl	402610 <fread@plt>
  4144cc:	mov	x20, x0
  4144d0:	ldr	x0, [x19, #16]
  4144d4:	bl	402880 <ferror@plt>
  4144d8:	cbnz	w0, 41432c <ferror@plt+0x11aac>
  4144dc:	ldp	x0, x21, [x19, #40]
  4144e0:	add	x20, x20, x0
  4144e4:	str	x20, [x19, #40]
  4144e8:	b	414330 <ferror@plt+0x11ab0>
  4144ec:	cmp	x1, #0x64
  4144f0:	b.ls	414674 <ferror@plt+0x11df4>  // b.plast
  4144f4:	ldr	x20, [x19, #24]
  4144f8:	mov	x1, #0x68                  	// #104
  4144fc:	mov	x0, #0x0                   	// #0
  414500:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  414504:	mov	x1, #0x4                   	// #4
  414508:	str	x0, [x19, #80]
  41450c:	mov	w28, #0x0                   	// #0
  414510:	sub	x20, x26, x20
  414514:	mov	x24, x0
  414518:	str	x1, [x0]
  41451c:	add	w1, w28, #0x1
  414520:	b	414654 <ferror@plt+0x11dd4>
  414524:	ldr	x0, [x19, #16]
  414528:	bl	402560 <feof@plt>
  41452c:	cbnz	w0, 4145cc <ferror@plt+0x11d4c>
  414530:	ldr	x0, [x19, #16]
  414534:	bl	402880 <ferror@plt>
  414538:	cbnz	w0, 4145cc <ferror@plt+0x11d4c>
  41453c:	ldp	x0, x20, [x19, #24]
  414540:	ldr	x1, [x19, #40]
  414544:	cmp	x20, x1
  414548:	b.ne	414568 <ferror@plt+0x11ce8>  // b.any
  41454c:	cmp	x20, #0x0
  414550:	lsl	x20, x20, #1
  414554:	csel	x20, x20, x26, ne  // ne = any
  414558:	mov	x1, x20
  41455c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  414560:	stp	x0, x20, [x19, #24]
  414564:	ldr	x1, [x19, #40]
  414568:	sub	x2, x20, x1
  41456c:	ldr	x3, [x19, #16]
  414570:	add	x0, x0, x1
  414574:	mov	x1, #0x1                   	// #1
  414578:	bl	402610 <fread@plt>
  41457c:	mov	x21, x0
  414580:	ldr	x0, [x19, #16]
  414584:	bl	402880 <ferror@plt>
  414588:	cbnz	w0, 4145cc <ferror@plt+0x11d4c>
  41458c:	ldr	x20, [x19, #40]
  414590:	ldr	x25, [x19, #24]
  414594:	add	x20, x21, x20
  414598:	str	x20, [x19, #40]
  41459c:	cbz	x21, 4145d4 <ferror@plt+0x11d54>
  4145a0:	ldr	x21, [x19, #48]
  4145a4:	mov	w1, #0xa                   	// #10
  4145a8:	add	x24, x25, x21
  4145ac:	sub	x2, x20, x21
  4145b0:	mov	x0, x24
  4145b4:	bl	402710 <memchr@plt>
  4145b8:	cbz	x0, 414430 <ferror@plt+0x11bb0>
  4145bc:	add	x21, x0, #0x1
  4145c0:	mov	x26, x0
  4145c4:	strb	wzr, [x19, #72]
  4145c8:	b	414360 <ferror@plt+0x11ae0>
  4145cc:	ldr	x25, [x19, #24]
  4145d0:	ldr	x20, [x19, #40]
  4145d4:	mov	w1, #0x1                   	// #1
  4145d8:	ldr	x0, [x19, #16]
  4145dc:	strb	w1, [x19, #72]
  4145e0:	bl	402880 <ferror@plt>
  4145e4:	cbnz	w0, 414460 <ferror@plt+0x11be0>
  4145e8:	stp	x27, x28, [sp, #80]
  4145ec:	adds	x20, x25, x20
  4145f0:	b.eq	414840 <ferror@plt+0x11fc0>  // b.none
  4145f4:	mov	x26, x20
  4145f8:	mov	x21, #0x0                   	// #0
  4145fc:	b	414370 <ferror@plt+0x11af0>
  414600:	ldr	x0, [x19, #40]
  414604:	b	414404 <ferror@plt+0x11b84>
  414608:	add	x26, x25, x20
  41460c:	mov	x21, #0x0                   	// #0
  414610:	stp	x27, x28, [sp, #80]
  414614:	b	414370 <ferror@plt+0x11af0>
  414618:	mov	w28, w0
  41461c:	cbz	w0, 414638 <ferror@plt+0x11db8>
  414620:	add	x2, x23, x23, lsl #1
  414624:	add	x2, x23, x2, lsl #3
  414628:	lsl	x2, x2, #2
  41462c:	udiv	x1, x2, x1
  414630:	cmp	x1, w0, uxtw
  414634:	b.cc	4143f8 <ferror@plt+0x11b78>  // b.lo, b.ul, b.last
  414638:	ldr	w6, [x24]
  41463c:	add	w1, w0, #0x1
  414640:	ldr	x20, [x19, #24]
  414644:	ubfx	x6, x6, #0, #31
  414648:	cmp	w0, w6
  41464c:	sub	x20, x26, x20
  414650:	b.eq	4146ac <ferror@plt+0x11e2c>  // b.none
  414654:	mov	w0, #0x18                  	// #24
  414658:	mov	x2, #0x8                   	// #8
  41465c:	str	w1, [x24, #4]
  414660:	umaddl	x0, w28, w0, x2
  414664:	add	x1, x24, x0
  414668:	str	x23, [x24, x0]
  41466c:	stp	x25, x20, [x1, #8]
  414670:	b	4143f8 <ferror@plt+0x11b78>
  414674:	cbz	x23, 4143f8 <ferror@plt+0x11b78>
  414678:	ldr	x20, [x19, #24]
  41467c:	mov	x1, #0x68                  	// #104
  414680:	mov	x0, #0x0                   	// #0
  414684:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  414688:	sub	x20, x26, x20
  41468c:	mov	x24, x0
  414690:	str	x0, [x19, #80]
  414694:	mov	x1, #0x4                   	// #4
  414698:	mov	w28, #0x0                   	// #0
  41469c:	str	x1, [x0]
  4146a0:	mov	w2, w28
  4146a4:	add	w1, w28, #0x1
  4146a8:	b	4143dc <ferror@plt+0x11b5c>
  4146ac:	ldrsb	w2, [x24, #3]
  4146b0:	str	w6, [sp, #108]
  4146b4:	tbnz	w2, #31, 4146f4 <ferror@plt+0x11e74>
  4146b8:	bl	412508 <ferror@plt+0xfc88>
  4146bc:	and	w26, w0, #0x7fffffff
  4146c0:	mov	w1, #0x18                  	// #24
  4146c4:	mov	x3, #0x8                   	// #8
  4146c8:	mov	w28, #0x0                   	// #0
  4146cc:	umaddl	x1, w0, w1, x3
  4146d0:	ldr	x0, [x19, #80]
  4146d4:	cbz	x0, 4146dc <ferror@plt+0x11e5c>
  4146d8:	ldr	w28, [x0, #4]
  4146dc:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4146e0:	str	x0, [x19, #80]
  4146e4:	mov	x24, x0
  4146e8:	add	w1, w28, #0x1
  4146ec:	stp	w26, w28, [x0]
  4146f0:	b	414654 <ferror@plt+0x11dd4>
  4146f4:	cmp	w1, #0x4
  4146f8:	mov	w28, #0x4                   	// #4
  4146fc:	csel	w28, w1, w28, cs  // cs = hs, nlast
  414700:	mov	w2, #0x18                  	// #24
  414704:	mov	x26, #0x8                   	// #8
  414708:	str	xzr, [x19, #80]
  41470c:	mov	x0, #0x0                   	// #0
  414710:	umaddl	x1, w28, w2, x26
  414714:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  414718:	str	x0, [x19, #80]
  41471c:	ldr	w6, [sp, #108]
  414720:	and	x1, x28, #0x7fffffff
  414724:	str	x1, [x0]
  414728:	mov	w2, #0x18                  	// #24
  41472c:	cbz	w6, 414764 <ferror@plt+0x11ee4>
  414730:	sub	w7, w6, #0x1
  414734:	mov	x3, #0x20                  	// #32
  414738:	mov	x1, x26
  41473c:	umaddl	x7, w7, w2, x3
  414740:	add	x5, x24, x1
  414744:	add	x4, x0, x1
  414748:	add	x1, x1, #0x18
  41474c:	cmp	x7, x1
  414750:	ldp	x2, x3, [x5]
  414754:	stp	x2, x3, [x4]
  414758:	ldr	x2, [x5, #16]
  41475c:	str	x2, [x4, #16]
  414760:	b.ne	414740 <ferror@plt+0x11ec0>  // b.any
  414764:	mov	x24, x0
  414768:	add	w1, w6, #0x1
  41476c:	mov	w28, w6
  414770:	str	w6, [x0, #4]
  414774:	b	414654 <ferror@plt+0x11dd4>
  414778:	ldrsb	w2, [x24, #3]
  41477c:	str	w6, [sp, #108]
  414780:	tbnz	w2, #31, 4147bc <ferror@plt+0x11f3c>
  414784:	bl	412508 <ferror@plt+0xfc88>
  414788:	and	w26, w0, #0x7fffffff
  41478c:	mov	w1, #0x18                  	// #24
  414790:	mov	x3, #0x8                   	// #8
  414794:	mov	w28, #0x0                   	// #0
  414798:	umaddl	x1, w0, w1, x3
  41479c:	ldr	x0, [x19, #80]
  4147a0:	cbz	x0, 4147a8 <ferror@plt+0x11f28>
  4147a4:	ldr	w28, [x0, #4]
  4147a8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4147ac:	str	x0, [x19, #80]
  4147b0:	mov	x24, x0
  4147b4:	stp	w26, w28, [x0]
  4147b8:	b	4146a0 <ferror@plt+0x11e20>
  4147bc:	cmp	w1, #0x4
  4147c0:	mov	w28, #0x4                   	// #4
  4147c4:	csel	w28, w1, w28, cs  // cs = hs, nlast
  4147c8:	mov	w2, #0x18                  	// #24
  4147cc:	mov	x26, #0x8                   	// #8
  4147d0:	str	xzr, [x19, #80]
  4147d4:	mov	x0, #0x0                   	// #0
  4147d8:	umaddl	x1, w28, w2, x26
  4147dc:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4147e0:	str	x0, [x19, #80]
  4147e4:	ldr	w6, [sp, #108]
  4147e8:	mov	w1, w28
  4147ec:	str	x1, [x0]
  4147f0:	mov	w2, #0x18                  	// #24
  4147f4:	cbz	w6, 41482c <ferror@plt+0x11fac>
  4147f8:	sub	w7, w6, #0x1
  4147fc:	mov	x3, #0x20                  	// #32
  414800:	mov	x1, x26
  414804:	umaddl	x7, w7, w2, x3
  414808:	add	x5, x24, x1
  41480c:	add	x4, x0, x1
  414810:	add	x1, x1, #0x18
  414814:	cmp	x1, x7
  414818:	ldp	x2, x3, [x5]
  41481c:	stp	x2, x3, [x4]
  414820:	ldr	x2, [x5, #16]
  414824:	str	x2, [x4, #16]
  414828:	b.ne	414808 <ferror@plt+0x11f88>  // b.any
  41482c:	mov	x24, x0
  414830:	mov	w2, w6
  414834:	add	w1, w6, #0x1
  414838:	str	w6, [x0, #4]
  41483c:	b	4143dc <ferror@plt+0x11b5c>
  414840:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  414844:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  414848:	add	x2, x2, #0xcb0
  41484c:	add	x0, x0, #0xc98
  414850:	mov	w1, #0x241                 	// #577
  414854:	bl	4028b0 <ferror@plt+0x30>
  414858:	stp	x29, x30, [sp, #-112]!
  41485c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  414860:	add	x1, x1, #0x780
  414864:	mov	x29, sp
  414868:	stp	x19, x20, [sp, #16]
  41486c:	stp	x21, x22, [sp, #32]
  414870:	mov	x22, x0
  414874:	bl	4023b0 <fopen@plt>
  414878:	cbz	x0, 414e94 <ferror@plt+0x12614>
  41487c:	str	x23, [sp, #48]
  414880:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  414884:	add	x19, x23, #0x760
  414888:	mov	x21, x0
  41488c:	ldr	x1, [x19, #8]
  414890:	cbz	x1, 414eac <ferror@plt+0x1262c>
  414894:	mov	x20, x1
  414898:	ldr	w3, [x1, #88]
  41489c:	ldr	w2, [x20], #88
  4148a0:	cmp	w3, w2
  4148a4:	csel	w19, w3, w2, cs  // cs = hs, nlast
  4148a8:	ldr	x0, [x20, #8]
  4148ac:	b.cc	414b04 <ferror@plt+0x12284>  // b.lo, b.ul, b.last
  4148b0:	ldr	x3, [x1, #8]
  4148b4:	cbz	x3, 414b00 <ferror@plt+0x12280>
  4148b8:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  4148bc:	ldr	w0, [x1, #176]
  4148c0:	add	x3, x1, #0xb0
  4148c4:	mov	x20, x1
  4148c8:	cmp	w19, w0
  4148cc:	csel	w19, w19, w0, cs  // cs = hs, nlast
  4148d0:	cmp	w2, w0
  4148d4:	ldr	x0, [x3, #8]
  4148d8:	b.ls	414b30 <ferror@plt+0x122b0>  // b.plast
  4148dc:	nop
  4148e0:	cbz	x0, 414e20 <ferror@plt+0x125a0>
  4148e4:	ldr	w4, [x1, #264]
  4148e8:	add	x2, x1, #0x108
  4148ec:	ldr	w0, [x3]
  4148f0:	cmp	w19, w4
  4148f4:	csel	w19, w19, w4, cs  // cs = hs, nlast
  4148f8:	cmp	w0, w4
  4148fc:	ldr	x0, [x2, #8]
  414900:	b.ls	414e00 <ferror@plt+0x12580>  // b.plast
  414904:	cbz	x0, 4150d8 <ferror@plt+0x12858>
  414908:	ldr	w3, [x1, #352]
  41490c:	add	x20, x1, #0x160
  414910:	ldr	w0, [x2]
  414914:	cmp	w19, w3
  414918:	csel	w19, w19, w3, cs  // cs = hs, nlast
  41491c:	cmp	w0, w3
  414920:	ldr	x0, [x20, #8]
  414924:	b.ls	414e10 <ferror@plt+0x12590>  // b.plast
  414928:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  41492c:	ldr	w0, [x1, #440]
  414930:	add	x3, x1, #0x1b8
  414934:	ldr	w2, [x20]
  414938:	cmp	w19, w0
  41493c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414940:	cmp	w2, w0
  414944:	ldr	x0, [x3, #8]
  414948:	b.hi	414bb0 <ferror@plt+0x12330>  // b.pmore
  41494c:	ldr	x2, [x20, #8]
  414950:	cbz	x2, 414e7c <ferror@plt+0x125fc>
  414954:	cbz	x0, 414e20 <ferror@plt+0x125a0>
  414958:	ldr	w0, [x1, #528]
  41495c:	add	x2, x1, #0x210
  414960:	ldr	w3, [x20]
  414964:	cmp	w19, w0
  414968:	csel	w19, w19, w0, cs  // cs = hs, nlast
  41496c:	cmp	w0, w3
  414970:	mov	x3, x20
  414974:	ldr	x0, [x2, #8]
  414978:	b.cs	414bdc <ferror@plt+0x1235c>  // b.hs, b.nlast
  41497c:	nop
  414980:	cbz	x0, 4150d8 <ferror@plt+0x12858>
  414984:	ldr	w0, [x1, #616]
  414988:	add	x20, x1, #0x268
  41498c:	ldr	w3, [x2]
  414990:	cmp	w19, w0
  414994:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414998:	cmp	w3, w0
  41499c:	ldr	x0, [x20, #8]
  4149a0:	b.hi	414c08 <ferror@plt+0x12388>  // b.pmore
  4149a4:	ldr	x3, [x2, #8]
  4149a8:	cbz	x3, 414e8c <ferror@plt+0x1260c>
  4149ac:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  4149b0:	ldr	w0, [x1, #704]
  4149b4:	add	x3, x1, #0x2c0
  4149b8:	ldr	w4, [x2]
  4149bc:	mov	x20, x2
  4149c0:	cmp	w19, w0
  4149c4:	csel	w19, w19, w0, cs  // cs = hs, nlast
  4149c8:	cmp	w0, w4
  4149cc:	ldr	x0, [x3, #8]
  4149d0:	b.cc	414c38 <ferror@plt+0x123b8>  // b.lo, b.ul, b.last
  4149d4:	cbz	x0, 414e20 <ferror@plt+0x125a0>
  4149d8:	ldr	w0, [x1, #792]
  4149dc:	add	x2, x1, #0x318
  4149e0:	ldr	w3, [x20]
  4149e4:	cmp	w19, w0
  4149e8:	csel	w19, w19, w0, cs  // cs = hs, nlast
  4149ec:	cmp	w0, w3
  4149f0:	mov	x3, x20
  4149f4:	ldr	x0, [x2, #8]
  4149f8:	b.cs	414c64 <ferror@plt+0x123e4>  // b.hs, b.nlast
  4149fc:	nop
  414a00:	cbz	x0, 4150d8 <ferror@plt+0x12858>
  414a04:	ldr	w0, [x1, #880]
  414a08:	add	x20, x1, #0x370
  414a0c:	ldr	w3, [x2]
  414a10:	cmp	w19, w0
  414a14:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414a18:	cmp	w3, w0
  414a1c:	ldr	x0, [x20, #8]
  414a20:	b.ls	414e34 <ferror@plt+0x125b4>  // b.plast
  414a24:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  414a28:	ldr	w0, [x1, #968]
  414a2c:	add	x3, x1, #0x3c8
  414a30:	ldr	w2, [x20]
  414a34:	cmp	w19, w0
  414a38:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414a3c:	cmp	w2, w0
  414a40:	ldr	x0, [x3, #8]
  414a44:	b.ls	414e44 <ferror@plt+0x125c4>  // b.plast
  414a48:	cbz	x0, 414e20 <ferror@plt+0x125a0>
  414a4c:	ldr	w2, [x1, #1056]
  414a50:	add	x0, x1, #0x420
  414a54:	ldr	w4, [x3]
  414a58:	cmp	w19, w2
  414a5c:	csel	w19, w19, w2, cs  // cs = hs, nlast
  414a60:	cmp	w4, w2
  414a64:	ldr	x2, [x0, #8]
  414a68:	b.hi	414ce0 <ferror@plt+0x12460>  // b.pmore
  414a6c:	ldr	x4, [x3, #8]
  414a70:	cbz	x4, 4150d0 <ferror@plt+0x12850>
  414a74:	mov	x20, x0
  414a78:	cbz	x2, 414d68 <ferror@plt+0x124e8>
  414a7c:	ldr	w0, [x1, #1144]
  414a80:	add	x2, x1, #0x478
  414a84:	ldr	w4, [x3]
  414a88:	cmp	w19, w0
  414a8c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414a90:	cmp	w0, w4
  414a94:	mov	x0, x3
  414a98:	ldr	x4, [x2, #8]
  414a9c:	b.cc	414d04 <ferror@plt+0x12484>  // b.lo, b.ul, b.last
  414aa0:	mov	x20, x2
  414aa4:	cbz	x4, 414d68 <ferror@plt+0x124e8>
  414aa8:	ldr	w2, [x1, #1232]
  414aac:	add	x3, x1, #0x4d0
  414ab0:	ldr	w4, [x0]
  414ab4:	cmp	w19, w2
  414ab8:	csel	w19, w19, w2, cs  // cs = hs, nlast
  414abc:	cmp	w4, w2
  414ac0:	mov	x2, x0
  414ac4:	ldr	x4, [x3, #8]
  414ac8:	b.hi	414d28 <ferror@plt+0x124a8>  // b.pmore
  414acc:	mov	x20, x3
  414ad0:	cbz	x4, 414d68 <ferror@plt+0x124e8>
  414ad4:	ldr	w0, [x1, #1320]
  414ad8:	add	x20, x1, #0x528
  414adc:	ldr	w1, [x2]
  414ae0:	cmp	w19, w0
  414ae4:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414ae8:	cmp	w1, w0
  414aec:	ldr	x0, [x20, #8]
  414af0:	b.hi	414d68 <ferror@plt+0x124e8>  // b.pmore
  414af4:	mov	x1, x20
  414af8:	mov	x20, x2
  414afc:	b	414d5c <ferror@plt+0x124dc>
  414b00:	mov	x20, x1
  414b04:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  414b08:	ldr	w2, [x1, #176]
  414b0c:	add	x3, x1, #0xb0
  414b10:	ldr	w0, [x20]
  414b14:	cmp	w19, w2
  414b18:	csel	w19, w19, w2, cs  // cs = hs, nlast
  414b1c:	cmp	w0, w2
  414b20:	ldr	x0, [x3, #8]
  414b24:	b.hi	4148e0 <ferror@plt+0x12060>  // b.pmore
  414b28:	ldr	x2, [x20, #8]
  414b2c:	cbz	x2, 414e74 <ferror@plt+0x125f4>
  414b30:	cbz	x0, 414e20 <ferror@plt+0x125a0>
  414b34:	ldr	w0, [x1, #264]
  414b38:	add	x2, x1, #0x108
  414b3c:	ldr	w3, [x20]
  414b40:	cmp	w19, w0
  414b44:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414b48:	cmp	w3, w0
  414b4c:	mov	x3, x20
  414b50:	ldr	x0, [x2, #8]
  414b54:	b.hi	414904 <ferror@plt+0x12084>  // b.pmore
  414b58:	mov	x20, x2
  414b5c:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  414b60:	ldr	w0, [x1, #352]
  414b64:	add	x20, x1, #0x160
  414b68:	ldr	w2, [x3]
  414b6c:	cmp	w19, w0
  414b70:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414b74:	cmp	w0, w2
  414b78:	mov	x2, x3
  414b7c:	ldr	x0, [x20, #8]
  414b80:	b.cc	414928 <ferror@plt+0x120a8>  // b.lo, b.ul, b.last
  414b84:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  414b88:	ldr	w0, [x1, #440]
  414b8c:	add	x3, x1, #0x1b8
  414b90:	ldr	w4, [x2]
  414b94:	mov	x20, x2
  414b98:	cmp	w19, w0
  414b9c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414ba0:	cmp	w0, w4
  414ba4:	ldr	x0, [x3, #8]
  414ba8:	b.cs	414954 <ferror@plt+0x120d4>  // b.hs, b.nlast
  414bac:	nop
  414bb0:	cbz	x0, 414e20 <ferror@plt+0x125a0>
  414bb4:	ldr	w0, [x1, #528]
  414bb8:	add	x2, x1, #0x210
  414bbc:	ldr	w4, [x3]
  414bc0:	cmp	w19, w0
  414bc4:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414bc8:	cmp	w4, w0
  414bcc:	ldr	x0, [x2, #8]
  414bd0:	b.hi	414980 <ferror@plt+0x12100>  // b.pmore
  414bd4:	ldr	x4, [x3, #8]
  414bd8:	cbz	x4, 414e84 <ferror@plt+0x12604>
  414bdc:	mov	x20, x2
  414be0:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  414be4:	ldr	w0, [x1, #616]
  414be8:	add	x20, x1, #0x268
  414bec:	ldr	w2, [x3]
  414bf0:	cmp	w19, w0
  414bf4:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414bf8:	cmp	w0, w2
  414bfc:	mov	x2, x3
  414c00:	ldr	x0, [x20, #8]
  414c04:	b.cs	4149ac <ferror@plt+0x1212c>  // b.hs, b.nlast
  414c08:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  414c0c:	ldr	w0, [x1, #704]
  414c10:	add	x3, x1, #0x2c0
  414c14:	ldr	w2, [x20]
  414c18:	cmp	w19, w0
  414c1c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414c20:	cmp	w2, w0
  414c24:	ldr	x0, [x3, #8]
  414c28:	b.hi	414c38 <ferror@plt+0x123b8>  // b.pmore
  414c2c:	ldr	x2, [x20, #8]
  414c30:	cbnz	x2, 4149d4 <ferror@plt+0x12154>
  414c34:	mov	x3, x20
  414c38:	cbz	x0, 414e20 <ferror@plt+0x125a0>
  414c3c:	ldr	w0, [x1, #792]
  414c40:	add	x2, x1, #0x318
  414c44:	ldr	w4, [x3]
  414c48:	cmp	w19, w0
  414c4c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414c50:	cmp	w4, w0
  414c54:	ldr	x0, [x2, #8]
  414c58:	b.hi	414a00 <ferror@plt+0x12180>  // b.pmore
  414c5c:	ldr	x4, [x3, #8]
  414c60:	cbz	x4, 4150c8 <ferror@plt+0x12848>
  414c64:	mov	x20, x2
  414c68:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  414c6c:	ldr	w0, [x1, #880]
  414c70:	add	x20, x1, #0x370
  414c74:	ldr	w2, [x3]
  414c78:	cmp	w19, w0
  414c7c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414c80:	cmp	w0, w2
  414c84:	mov	x2, x3
  414c88:	ldr	x0, [x20, #8]
  414c8c:	b.cc	414a24 <ferror@plt+0x121a4>  // b.lo, b.ul, b.last
  414c90:	cbz	x0, 414d68 <ferror@plt+0x124e8>
  414c94:	ldr	w0, [x1, #968]
  414c98:	add	x3, x1, #0x3c8
  414c9c:	ldr	w4, [x2]
  414ca0:	mov	x20, x2
  414ca4:	cmp	w19, w0
  414ca8:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414cac:	cmp	w0, w4
  414cb0:	ldr	x0, [x3, #8]
  414cb4:	b.cc	414a48 <ferror@plt+0x121c8>  // b.lo, b.ul, b.last
  414cb8:	cbz	x0, 414e20 <ferror@plt+0x125a0>
  414cbc:	ldr	w2, [x1, #1056]
  414cc0:	add	x0, x1, #0x420
  414cc4:	ldr	w3, [x20]
  414cc8:	cmp	w19, w2
  414ccc:	csel	w19, w19, w2, cs  // cs = hs, nlast
  414cd0:	cmp	w3, w2
  414cd4:	mov	x3, x20
  414cd8:	ldr	x2, [x0, #8]
  414cdc:	b.ls	414a74 <ferror@plt+0x121f4>  // b.plast
  414ce0:	cbz	x2, 4150e0 <ferror@plt+0x12860>
  414ce4:	ldr	w3, [x1, #1144]
  414ce8:	add	x2, x1, #0x478
  414cec:	ldr	w4, [x0]
  414cf0:	cmp	w19, w3
  414cf4:	csel	w19, w19, w3, cs  // cs = hs, nlast
  414cf8:	cmp	w4, w3
  414cfc:	ldr	x4, [x2, #8]
  414d00:	b.ls	414e54 <ferror@plt+0x125d4>  // b.plast
  414d04:	cbz	x4, 4150d8 <ferror@plt+0x12858>
  414d08:	ldr	w0, [x1, #1232]
  414d0c:	add	x3, x1, #0x4d0
  414d10:	ldr	w4, [x2]
  414d14:	cmp	w19, w0
  414d18:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414d1c:	cmp	w4, w0
  414d20:	ldr	x4, [x3, #8]
  414d24:	b.ls	414e64 <ferror@plt+0x125e4>  // b.plast
  414d28:	cbz	x4, 414e20 <ferror@plt+0x125a0>
  414d2c:	ldr	w0, [x1, #1320]
  414d30:	add	x20, x1, #0x528
  414d34:	ldr	w1, [x3]
  414d38:	cmp	w19, w0
  414d3c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  414d40:	cmp	w0, w1
  414d44:	ldr	x0, [x20, #8]
  414d48:	b.cc	414d68 <ferror@plt+0x124e8>  // b.lo, b.ul, b.last
  414d4c:	ldr	x1, [x3, #8]
  414d50:	cbz	x1, 414e20 <ferror@plt+0x125a0>
  414d54:	mov	x1, x20
  414d58:	mov	x20, x3
  414d5c:	cmp	x0, #0x0
  414d60:	csel	x20, x20, x1, ne  // ne = any
  414d64:	nop
  414d68:	ldr	x0, [x20, #16]
  414d6c:	str	x22, [x20, #8]
  414d70:	cbz	x0, 414d78 <ferror@plt+0x124f8>
  414d74:	bl	402380 <fclose@plt>
  414d78:	ldr	x1, [x20, #80]
  414d7c:	str	x21, [x20, #16]
  414d80:	stp	xzr, xzr, [x20, #40]
  414d84:	str	xzr, [x20, #56]
  414d88:	cbz	x1, 414d90 <ferror@plt+0x12510>
  414d8c:	str	wzr, [x1, #4]
  414d90:	ldr	x0, [x23, #1888]
  414d94:	add	w19, w19, #0x1
  414d98:	str	w19, [x20]
  414d9c:	mov	x1, x22
  414da0:	add	x2, sp, #0x4c
  414da4:	str	wzr, [sp, #76]
  414da8:	bl	433460 <ferror@plt+0x30be0>
  414dac:	tst	w0, #0xff
  414db0:	b.ne	414ddc <ferror@plt+0x1255c>  // b.any
  414db4:	mov	x1, #0x0                   	// #0
  414db8:	mov	w0, #0x1                   	// #1
  414dbc:	strb	w0, [x20, #72]
  414dc0:	ldr	x23, [sp, #48]
  414dc4:	str	x1, [x20, #64]
  414dc8:	mov	x0, x20
  414dcc:	ldp	x19, x20, [sp, #16]
  414dd0:	ldp	x21, x22, [sp, #32]
  414dd4:	ldp	x29, x30, [sp], #112
  414dd8:	ret
  414ddc:	ldr	w0, [sp, #76]
  414de0:	cmp	w0, #0x1
  414de4:	b.ls	4150e8 <ferror@plt+0x12868>  // b.plast
  414de8:	mov	w1, #0x1                   	// #1
  414dec:	add	x8, sp, #0x50
  414df0:	mov	w2, #0x0                   	// #0
  414df4:	bl	414130 <ferror@plt+0x118b0>
  414df8:	ldrsw	x1, [sp, #88]
  414dfc:	b	414db8 <ferror@plt+0x12538>
  414e00:	ldr	x4, [x3, #8]
  414e04:	cbnz	x4, 414b58 <ferror@plt+0x122d8>
  414e08:	mov	x2, x3
  414e0c:	b	414904 <ferror@plt+0x12084>
  414e10:	ldr	x3, [x2, #8]
  414e14:	cbnz	x3, 414b84 <ferror@plt+0x12304>
  414e18:	mov	x20, x2
  414e1c:	b	414928 <ferror@plt+0x120a8>
  414e20:	mov	x20, x3
  414e24:	ldr	x0, [x20, #16]
  414e28:	str	x22, [x20, #8]
  414e2c:	cbnz	x0, 414d74 <ferror@plt+0x124f4>
  414e30:	b	414d78 <ferror@plt+0x124f8>
  414e34:	ldr	x3, [x2, #8]
  414e38:	cbnz	x3, 414c90 <ferror@plt+0x12410>
  414e3c:	mov	x20, x2
  414e40:	b	414a24 <ferror@plt+0x121a4>
  414e44:	ldr	x2, [x20, #8]
  414e48:	cbnz	x2, 414cb8 <ferror@plt+0x12438>
  414e4c:	mov	x3, x20
  414e50:	b	414a48 <ferror@plt+0x121c8>
  414e54:	ldr	x3, [x0, #8]
  414e58:	cbnz	x3, 414aa0 <ferror@plt+0x12220>
  414e5c:	mov	x2, x0
  414e60:	b	414d04 <ferror@plt+0x12484>
  414e64:	ldr	x0, [x2, #8]
  414e68:	cbnz	x0, 414acc <ferror@plt+0x1224c>
  414e6c:	mov	x3, x2
  414e70:	b	414d28 <ferror@plt+0x124a8>
  414e74:	mov	x3, x20
  414e78:	b	4148e0 <ferror@plt+0x12060>
  414e7c:	mov	x3, x20
  414e80:	b	414bb0 <ferror@plt+0x12330>
  414e84:	mov	x2, x3
  414e88:	b	414980 <ferror@plt+0x12100>
  414e8c:	mov	x20, x2
  414e90:	b	414c08 <ferror@plt+0x12388>
  414e94:	mov	x20, #0x0                   	// #0
  414e98:	mov	x0, x20
  414e9c:	ldp	x19, x20, [sp, #16]
  414ea0:	ldp	x21, x22, [sp, #32]
  414ea4:	ldp	x29, x30, [sp], #112
  414ea8:	ret
  414eac:	mov	x0, #0x588                 	// #1416
  414eb0:	bl	45d288 <_obstack_memory_used@@Base+0x960>
  414eb4:	mov	x1, x0
  414eb8:	mov	x2, x0
  414ebc:	movi	v0.4s, #0x0
  414ec0:	mov	x4, #0x10                  	// #16
  414ec4:	mov	w3, #0x1                   	// #1
  414ec8:	add	x0, x0, #0x200
  414ecc:	str	x4, [x1], #8
  414ed0:	add	x4, x2, #0x400
  414ed4:	str	wzr, [x2, #8]
  414ed8:	add	x17, x2, #0x600
  414edc:	str	q0, [x2, #16]
  414ee0:	str	xzr, [x1, #24]
  414ee4:	stur	q0, [x2, #40]
  414ee8:	stur	q0, [x2, #56]
  414eec:	str	xzr, [x1, #64]
  414ef0:	strb	w3, [x1, #72]
  414ef4:	str	xzr, [x2, #88]
  414ef8:	str	wzr, [x2, #96]
  414efc:	str	xzr, [x2, #120]
  414f00:	str	xzr, [x2, #160]
  414f04:	strb	w3, [x2, #168]
  414f08:	str	xzr, [x2, #176]
  414f0c:	str	wzr, [x2, #184]
  414f10:	str	xzr, [x2, #208]
  414f14:	str	xzr, [x2, #248]
  414f18:	strb	w3, [x2, #256]
  414f1c:	str	xzr, [x2, #264]
  414f20:	str	wzr, [x2, #272]
  414f24:	stur	q0, [x2, #104]
  414f28:	stp	q0, q0, [x2, #128]
  414f2c:	str	q0, [x2, #192]
  414f30:	stur	q0, [x2, #216]
  414f34:	stur	q0, [x2, #232]
  414f38:	stur	q0, [x0, #-232]
  414f3c:	str	xzr, [x2, #296]
  414f40:	stp	q0, q0, [x2, #304]
  414f44:	str	xzr, [x2, #336]
  414f48:	strb	w3, [x2, #344]
  414f4c:	str	xzr, [x2, #352]
  414f50:	str	wzr, [x2, #360]
  414f54:	str	xzr, [x2, #384]
  414f58:	str	q0, [x2, #368]
  414f5c:	stur	q0, [x0, #-120]
  414f60:	stur	q0, [x0, #-104]
  414f64:	str	xzr, [x2, #424]
  414f68:	strb	w3, [x2, #432]
  414f6c:	str	xzr, [x2, #440]
  414f70:	str	wzr, [x2, #448]
  414f74:	stur	q0, [x0, #-56]
  414f78:	str	xzr, [x2, #472]
  414f7c:	str	xzr, [x2, #512]
  414f80:	strb	w3, [x2, #520]
  414f84:	str	xzr, [x2, #528]
  414f88:	str	wzr, [x2, #536]
  414f8c:	str	xzr, [x2, #560]
  414f90:	stp	q0, q0, [x2, #480]
  414f94:	str	q0, [x2, #544]
  414f98:	stur	q0, [x0, #56]
  414f9c:	stur	q0, [x0, #72]
  414fa0:	str	xzr, [x2, #600]
  414fa4:	strb	w3, [x2, #608]
  414fa8:	str	xzr, [x2, #616]
  414fac:	str	wzr, [x2, #624]
  414fb0:	stur	q0, [x0, #120]
  414fb4:	str	xzr, [x2, #648]
  414fb8:	stp	q0, q0, [x2, #656]
  414fbc:	str	xzr, [x2, #688]
  414fc0:	strb	w3, [x2, #696]
  414fc4:	str	xzr, [x2, #704]
  414fc8:	str	wzr, [x2, #712]
  414fcc:	str	xzr, [x2, #736]
  414fd0:	str	q0, [x2, #720]
  414fd4:	stur	q0, [x0, #232]
  414fd8:	stur	q0, [x0, #248]
  414fdc:	str	xzr, [x2, #776]
  414fe0:	strb	w3, [x2, #784]
  414fe4:	str	xzr, [x2, #792]
  414fe8:	str	wzr, [x2, #800]
  414fec:	stur	q0, [x4, #-216]
  414ff0:	str	xzr, [x2, #824]
  414ff4:	str	xzr, [x2, #864]
  414ff8:	strb	w3, [x2, #872]
  414ffc:	str	xzr, [x2, #880]
  415000:	str	wzr, [x2, #888]
  415004:	str	xzr, [x2, #912]
  415008:	stp	q0, q0, [x2, #832]
  41500c:	str	q0, [x2, #896]
  415010:	stur	q0, [x4, #-104]
  415014:	stur	q0, [x4, #-88]
  415018:	str	xzr, [x2, #952]
  41501c:	strb	w3, [x2, #960]
  415020:	str	xzr, [x2, #968]
  415024:	str	wzr, [x2, #976]
  415028:	stur	q0, [x4, #-40]
  41502c:	str	xzr, [x2, #1000]
  415030:	str	xzr, [x2, #1040]
  415034:	strb	w3, [x2, #1048]
  415038:	str	xzr, [x2, #1056]
  41503c:	str	wzr, [x2, #1064]
  415040:	stp	q0, q0, [x2, #1008]
  415044:	str	q0, [x2, #1072]
  415048:	str	xzr, [x2, #1088]
  41504c:	str	x1, [x19, #8]
  415050:	stur	q0, [x4, #72]
  415054:	stur	q0, [x4, #88]
  415058:	str	xzr, [x2, #1128]
  41505c:	strb	w3, [x2, #1136]
  415060:	str	xzr, [x2, #1144]
  415064:	str	wzr, [x2, #1152]
  415068:	stur	q0, [x4, #136]
  41506c:	str	xzr, [x2, #1176]
  415070:	str	xzr, [x2, #1216]
  415074:	strb	w3, [x2, #1224]
  415078:	str	xzr, [x2, #1232]
  41507c:	str	wzr, [x2, #1240]
  415080:	str	xzr, [x2, #1264]
  415084:	str	q0, [x2, #1184]
  415088:	str	q0, [x2, #1200]
  41508c:	str	q0, [x2, #1248]
  415090:	stur	q0, [x4, #248]
  415094:	stur	q0, [x17, #-248]
  415098:	str	xzr, [x2, #1304]
  41509c:	strb	w3, [x2, #1312]
  4150a0:	str	xzr, [x2, #1320]
  4150a4:	str	wzr, [x2, #1328]
  4150a8:	stur	q0, [x17, #-200]
  4150ac:	str	xzr, [x2, #1352]
  4150b0:	str	q0, [x2, #1360]
  4150b4:	str	q0, [x2, #1376]
  4150b8:	str	xzr, [x2, #1392]
  4150bc:	strb	w3, [x2, #1400]
  4150c0:	str	xzr, [x2, #1408]
  4150c4:	b	414894 <ferror@plt+0x12014>
  4150c8:	mov	x2, x3
  4150cc:	b	414a00 <ferror@plt+0x12180>
  4150d0:	mov	x0, x3
  4150d4:	b	414ce0 <ferror@plt+0x12460>
  4150d8:	mov	x20, x2
  4150dc:	b	414d68 <ferror@plt+0x124e8>
  4150e0:	mov	x20, x0
  4150e4:	b	414d68 <ferror@plt+0x124e8>
  4150e8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4150ec:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4150f0:	add	x2, x2, #0xcc0
  4150f4:	add	x0, x0, #0xc98
  4150f8:	mov	w1, #0x107                 	// #263
  4150fc:	bl	4028b0 <ferror@plt+0x30>
  415100:	stp	x29, x30, [sp, #-48]!
  415104:	mov	x29, sp
  415108:	stp	x21, x22, [sp, #32]
  41510c:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  415110:	add	x21, x21, #0x760
  415114:	stp	x19, x20, [sp, #16]
  415118:	ldr	x20, [x21, #8]
  41511c:	cbz	x20, 4151bc <ferror@plt+0x1293c>
  415120:	ldur	x0, [x20, #-8]
  415124:	add	x1, x0, x0, lsl #1
  415128:	lsl	x1, x1, #2
  41512c:	sub	x1, x1, x0
  415130:	lsl	x1, x1, #3
  415134:	add	x19, x20, x1
  415138:	cmp	x20, x19
  41513c:	b.ne	415150 <ferror@plt+0x128d0>  // b.any
  415140:	b	4151ac <ferror@plt+0x1292c>
  415144:	bl	402640 <free@plt>
  415148:	cmp	x19, x20
  41514c:	b.eq	415198 <ferror@plt+0x12918>  // b.none
  415150:	mov	x22, x19
  415154:	sub	x19, x19, #0x58
  415158:	ldr	x0, [x19, #16]
  41515c:	cbz	x0, 41516c <ferror@plt+0x128ec>
  415160:	bl	402380 <fclose@plt>
  415164:	str	xzr, [x19, #16]
  415168:	ldr	x20, [x21, #8]
  41516c:	ldr	x0, [x19, #24]
  415170:	cbz	x0, 415178 <ferror@plt+0x128f8>
  415174:	bl	402640 <free@plt>
  415178:	ldr	x1, [x19, #80]
  41517c:	mov	x0, x1
  415180:	cbz	x1, 415148 <ferror@plt+0x128c8>
  415184:	ldrsb	w2, [x1, #3]
  415188:	tbz	w2, #31, 415144 <ferror@plt+0x128c4>
  41518c:	str	wzr, [x1, #4]
  415190:	cmp	x19, x20
  415194:	b.ne	415150 <ferror@plt+0x128d0>  // b.any
  415198:	ldur	x0, [x22, #-96]
  41519c:	add	x1, x0, x0, lsl #1
  4151a0:	lsl	x1, x1, #2
  4151a4:	sub	x1, x1, x0
  4151a8:	lsl	x1, x1, #3
  4151ac:	add	x1, x1, #0x8
  4151b0:	sub	x0, x20, #0x8
  4151b4:	bl	45cfe8 <_obstack_memory_used@@Base+0x6c0>
  4151b8:	str	xzr, [x21, #8]
  4151bc:	ldp	x19, x20, [sp, #16]
  4151c0:	ldp	x21, x22, [sp, #32]
  4151c4:	ldp	x29, x30, [sp], #48
  4151c8:	ret
  4151cc:	nop
  4151d0:	stp	x29, x30, [sp, #-48]!
  4151d4:	mov	x29, sp
  4151d8:	stp	x19, x20, [sp, #16]
  4151dc:	stp	x21, x22, [sp, #32]
  4151e0:	cbz	x0, 4154a4 <ferror@plt+0x12c24>
  4151e4:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4151e8:	add	x20, x20, #0x760
  4151ec:	mov	x21, x0
  4151f0:	ldr	x19, [x20, #8]
  4151f4:	cbz	x19, 415288 <ferror@plt+0x12a08>
  4151f8:	add	x22, x19, #0x580
  4151fc:	mov	x20, #0x0                   	// #0
  415200:	ldr	x0, [x19, #8]
  415204:	cbz	x0, 415224 <ferror@plt+0x129a4>
  415208:	mov	x1, x21
  41520c:	bl	4025d0 <strcmp@plt>
  415210:	cbnz	w0, 415224 <ferror@plt+0x129a4>
  415214:	ldr	w0, [x19]
  415218:	mov	x20, x19
  41521c:	add	w0, w0, #0x1
  415220:	str	w0, [x19]
  415224:	add	x19, x19, #0x58
  415228:	cmp	x19, x22
  41522c:	b.ne	415200 <ferror@plt+0x12980>  // b.any
  415230:	cbz	x20, 415278 <ferror@plt+0x129f8>
  415234:	ldr	w1, [x20]
  415238:	ldr	x0, [x20, #16]
  41523c:	add	w1, w1, #0x1
  415240:	str	w1, [x20]
  415244:	str	xzr, [x20, #8]
  415248:	cbz	x0, 415250 <ferror@plt+0x129d0>
  41524c:	bl	402380 <fclose@plt>
  415250:	ldr	x0, [x20, #80]
  415254:	str	xzr, [x20, #16]
  415258:	stp	xzr, xzr, [x20, #40]
  41525c:	str	xzr, [x20, #56]
  415260:	cbz	x0, 415268 <ferror@plt+0x129e8>
  415264:	str	wzr, [x0, #4]
  415268:	mov	w0, #0x1                   	// #1
  41526c:	str	wzr, [x20]
  415270:	str	xzr, [x20, #64]
  415274:	strb	w0, [x20, #72]
  415278:	ldp	x19, x20, [sp, #16]
  41527c:	ldp	x21, x22, [sp, #32]
  415280:	ldp	x29, x30, [sp], #48
  415284:	ret
  415288:	mov	x0, #0x588                 	// #1416
  41528c:	bl	45d288 <_obstack_memory_used@@Base+0x960>
  415290:	mov	x2, x0
  415294:	mov	x3, #0x10                  	// #16
  415298:	mov	x19, x2
  41529c:	mov	w0, #0x1                   	// #1
  4152a0:	movi	v0.4s, #0x0
  4152a4:	add	x1, x2, #0x200
  4152a8:	add	x18, x2, #0x600
  4152ac:	str	x3, [x19], #8
  4152b0:	add	x3, x2, #0x400
  4152b4:	str	wzr, [x2, #8]
  4152b8:	str	q0, [x2, #16]
  4152bc:	str	xzr, [x19, #24]
  4152c0:	stur	q0, [x2, #40]
  4152c4:	stur	q0, [x2, #56]
  4152c8:	str	xzr, [x19, #64]
  4152cc:	strb	w0, [x19, #72]
  4152d0:	str	xzr, [x2, #88]
  4152d4:	str	wzr, [x2, #96]
  4152d8:	str	xzr, [x2, #120]
  4152dc:	str	xzr, [x2, #160]
  4152e0:	strb	w0, [x2, #168]
  4152e4:	str	xzr, [x2, #176]
  4152e8:	str	wzr, [x2, #184]
  4152ec:	str	xzr, [x2, #208]
  4152f0:	str	xzr, [x2, #248]
  4152f4:	strb	w0, [x2, #256]
  4152f8:	str	xzr, [x2, #264]
  4152fc:	str	wzr, [x2, #272]
  415300:	stur	q0, [x2, #104]
  415304:	stp	q0, q0, [x2, #128]
  415308:	str	q0, [x2, #192]
  41530c:	stur	q0, [x2, #216]
  415310:	stur	q0, [x2, #232]
  415314:	stur	q0, [x1, #-232]
  415318:	str	xzr, [x2, #296]
  41531c:	stp	q0, q0, [x2, #304]
  415320:	str	xzr, [x2, #336]
  415324:	strb	w0, [x2, #344]
  415328:	str	xzr, [x2, #352]
  41532c:	str	wzr, [x2, #360]
  415330:	str	xzr, [x2, #384]
  415334:	str	q0, [x2, #368]
  415338:	stur	q0, [x1, #-120]
  41533c:	stur	q0, [x1, #-104]
  415340:	str	xzr, [x2, #424]
  415344:	strb	w0, [x2, #432]
  415348:	str	xzr, [x2, #440]
  41534c:	str	wzr, [x2, #448]
  415350:	stur	q0, [x1, #-56]
  415354:	str	xzr, [x2, #472]
  415358:	str	xzr, [x2, #512]
  41535c:	strb	w0, [x2, #520]
  415360:	str	xzr, [x2, #528]
  415364:	str	wzr, [x2, #536]
  415368:	str	xzr, [x2, #560]
  41536c:	stp	q0, q0, [x2, #480]
  415370:	str	q0, [x2, #544]
  415374:	stur	q0, [x1, #56]
  415378:	stur	q0, [x1, #72]
  41537c:	str	xzr, [x2, #600]
  415380:	strb	w0, [x2, #608]
  415384:	str	xzr, [x2, #616]
  415388:	str	wzr, [x2, #624]
  41538c:	stur	q0, [x1, #120]
  415390:	str	xzr, [x2, #648]
  415394:	stp	q0, q0, [x2, #656]
  415398:	str	xzr, [x2, #688]
  41539c:	strb	w0, [x2, #696]
  4153a0:	str	xzr, [x2, #704]
  4153a4:	str	wzr, [x2, #712]
  4153a8:	str	xzr, [x2, #736]
  4153ac:	str	q0, [x2, #720]
  4153b0:	stur	q0, [x1, #232]
  4153b4:	stur	q0, [x1, #248]
  4153b8:	str	xzr, [x2, #776]
  4153bc:	strb	w0, [x2, #784]
  4153c0:	str	xzr, [x2, #792]
  4153c4:	str	wzr, [x2, #800]
  4153c8:	stur	q0, [x3, #-216]
  4153cc:	str	xzr, [x2, #824]
  4153d0:	str	xzr, [x2, #864]
  4153d4:	strb	w0, [x2, #872]
  4153d8:	str	xzr, [x2, #880]
  4153dc:	str	wzr, [x2, #888]
  4153e0:	str	xzr, [x2, #912]
  4153e4:	stp	q0, q0, [x2, #832]
  4153e8:	str	q0, [x2, #896]
  4153ec:	stur	q0, [x3, #-104]
  4153f0:	stur	q0, [x3, #-88]
  4153f4:	str	xzr, [x2, #952]
  4153f8:	strb	w0, [x2, #960]
  4153fc:	str	xzr, [x2, #968]
  415400:	str	wzr, [x2, #976]
  415404:	stur	q0, [x3, #-40]
  415408:	str	xzr, [x2, #1000]
  41540c:	str	xzr, [x2, #1040]
  415410:	strb	w0, [x2, #1048]
  415414:	str	xzr, [x2, #1056]
  415418:	str	wzr, [x2, #1064]
  41541c:	stp	q0, q0, [x2, #1008]
  415420:	str	q0, [x2, #1072]
  415424:	str	xzr, [x2, #1088]
  415428:	str	x19, [x20, #8]
  41542c:	stur	q0, [x3, #72]
  415430:	stur	q0, [x3, #88]
  415434:	str	xzr, [x2, #1128]
  415438:	strb	w0, [x2, #1136]
  41543c:	str	xzr, [x2, #1144]
  415440:	str	wzr, [x2, #1152]
  415444:	stur	q0, [x3, #136]
  415448:	str	xzr, [x2, #1176]
  41544c:	str	xzr, [x2, #1216]
  415450:	strb	w0, [x2, #1224]
  415454:	str	xzr, [x2, #1232]
  415458:	str	wzr, [x2, #1240]
  41545c:	str	xzr, [x2, #1264]
  415460:	str	q0, [x2, #1184]
  415464:	str	q0, [x2, #1200]
  415468:	str	q0, [x2, #1248]
  41546c:	stur	q0, [x3, #248]
  415470:	stur	q0, [x18, #-248]
  415474:	str	xzr, [x2, #1304]
  415478:	strb	w0, [x2, #1312]
  41547c:	str	xzr, [x2, #1320]
  415480:	str	wzr, [x2, #1328]
  415484:	stur	q0, [x18, #-200]
  415488:	str	xzr, [x2, #1352]
  41548c:	str	q0, [x2, #1360]
  415490:	str	q0, [x2, #1376]
  415494:	str	xzr, [x2, #1392]
  415498:	strb	w0, [x2, #1400]
  41549c:	str	xzr, [x2, #1408]
  4154a0:	b	4151f8 <ferror@plt+0x12978>
  4154a4:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4154a8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4154ac:	add	x2, x2, #0xcd0
  4154b0:	add	x0, x0, #0xc98
  4154b4:	mov	w1, #0x133                 	// #307
  4154b8:	bl	4028b0 <ferror@plt+0x30>
  4154bc:	nop
  4154c0:	movi	v0.4s, #0x0
  4154c4:	mov	w1, #0x1                   	// #1
  4154c8:	str	wzr, [x0]
  4154cc:	str	xzr, [x0, #24]
  4154d0:	str	xzr, [x0, #64]
  4154d4:	stur	q0, [x0, #8]
  4154d8:	stp	q0, q0, [x0, #32]
  4154dc:	strb	w1, [x0, #72]
  4154e0:	str	xzr, [x0, #80]
  4154e4:	ret
  4154e8:	stp	x29, x30, [sp, #-32]!
  4154ec:	mov	x29, sp
  4154f0:	str	x19, [sp, #16]
  4154f4:	mov	x19, x0
  4154f8:	ldr	x0, [x0, #16]
  4154fc:	cbz	x0, 415504 <ferror@plt+0x12c84>
  415500:	bl	402380 <fclose@plt>
  415504:	ldr	x0, [x19, #24]
  415508:	cbz	x0, 415510 <ferror@plt+0x12c90>
  41550c:	bl	402640 <free@plt>
  415510:	ldr	x0, [x19, #80]
  415514:	cbz	x0, 415530 <ferror@plt+0x12cb0>
  415518:	ldrsb	w1, [x0, #3]
  41551c:	tbnz	w1, #31, 41552c <ferror@plt+0x12cac>
  415520:	ldr	x19, [sp, #16]
  415524:	ldp	x29, x30, [sp], #32
  415528:	b	402640 <free@plt>
  41552c:	str	wzr, [x0, #4]
  415530:	ldr	x19, [sp, #16]
  415534:	ldp	x29, x30, [sp], #32
  415538:	ret
  41553c:	nop
  415540:	stp	x29, x30, [sp, #-96]!
  415544:	mov	x29, sp
  415548:	str	xzr, [sp, #72]
  41554c:	cbnz	w1, 415560 <ferror@plt+0x12ce0>
  415550:	mov	x0, #0x0                   	// #0
  415554:	mov	x1, #0x0                   	// #0
  415558:	ldp	x29, x30, [sp], #96
  41555c:	ret
  415560:	stp	x19, x20, [sp, #16]
  415564:	stp	x21, x22, [sp, #32]
  415568:	mov	x21, x0
  41556c:	mov	w22, w1
  415570:	cbz	x0, 4156a0 <ferror@plt+0x12e20>
  415574:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  415578:	add	x20, x20, #0x760
  41557c:	ldr	x19, [x20, #8]
  415580:	str	x23, [sp, #48]
  415584:	cbz	x19, 4156bc <ferror@plt+0x12e3c>
  415588:	add	x23, x19, #0x580
  41558c:	mov	x20, #0x0                   	// #0
  415590:	ldr	x0, [x19, #8]
  415594:	cbz	x0, 4155b4 <ferror@plt+0x12d34>
  415598:	mov	x1, x21
  41559c:	bl	4025d0 <strcmp@plt>
  4155a0:	cbnz	w0, 4155b4 <ferror@plt+0x12d34>
  4155a4:	ldr	w0, [x19]
  4155a8:	mov	x20, x19
  4155ac:	add	w0, w0, #0x1
  4155b0:	str	w0, [x19]
  4155b4:	add	x19, x19, #0x58
  4155b8:	cmp	x19, x23
  4155bc:	b.ne	415590 <ferror@plt+0x12d10>  // b.any
  4155c0:	cbz	x20, 41569c <ferror@plt+0x12e1c>
  4155c4:	ldr	w0, [x20]
  4155c8:	ldr	x23, [sp, #48]
  4155cc:	add	w0, w0, #0x1
  4155d0:	str	w0, [x20]
  4155d4:	ldr	x0, [x20, #56]
  4155d8:	sxtw	x19, w22
  4155dc:	cmp	x0, w22, sxtw
  4155e0:	b.cs	415638 <ferror@plt+0x12db8>  // b.hs, b.nlast
  4155e4:	sub	x19, x19, #0x1
  4155e8:	b	415604 <ferror@plt+0x12d84>
  4155ec:	add	x1, sp, #0x50
  4155f0:	mov	x0, x20
  4155f4:	bl	4142d8 <ferror@plt+0x11a58>
  4155f8:	tst	w0, #0xff
  4155fc:	b.eq	4156b0 <ferror@plt+0x12e30>  // b.none
  415600:	ldr	x0, [x20, #56]
  415604:	add	x2, sp, #0x58
  415608:	cmp	x19, x0
  41560c:	b.hi	4155ec <ferror@plt+0x12d6c>  // b.pmore
  415610:	mov	x0, x20
  415614:	add	x1, sp, #0x48
  415618:	bl	4142d8 <ferror@plt+0x11a58>
  41561c:	tst	w0, #0xff
  415620:	b.eq	4156b0 <ferror@plt+0x12e30>  // b.none
  415624:	ldp	x19, x20, [sp, #16]
  415628:	ldp	x21, x22, [sp, #32]
  41562c:	ldr	x0, [sp, #72]
  415630:	ldr	x1, [sp, #88]
  415634:	b	415558 <ferror@plt+0x12cd8>
  415638:	ldr	x1, [x20, #80]
  41563c:	cbz	x1, 415690 <ferror@plt+0x12e10>
  415640:	ldr	w3, [x1, #4]
  415644:	cbz	w3, 415690 <ferror@plt+0x12e10>
  415648:	ldr	x2, [x20, #64]
  41564c:	cmp	x2, #0x64
  415650:	b.hi	4158d4 <ferror@plt+0x13054>  // b.pmore
  415654:	cmp	x19, x2
  415658:	b.hi	415934 <ferror@plt+0x130b4>  // b.pmore
  41565c:	sub	w2, w22, #0x1
  415660:	mov	w0, #0x18                  	// #24
  415664:	umaddl	x1, w2, w0, x1
  415668:	add	x2, x1, #0x8
  41566c:	ldr	x0, [x2]
  415670:	cmp	x19, x0
  415674:	b.cc	415964 <ferror@plt+0x130e4>  // b.lo, b.ul, b.last
  415678:	cmp	x19, x0
  41567c:	ldr	x3, [x2, #8]
  415680:	b.eq	415948 <ferror@plt+0x130c8>  // b.none
  415684:	sub	x0, x0, #0x1
  415688:	stp	x3, x0, [x20, #48]
  41568c:	b	4155e4 <ferror@plt+0x12d64>
  415690:	mov	x0, #0x0                   	// #0
  415694:	stp	xzr, xzr, [x20, #48]
  415698:	b	4155e4 <ferror@plt+0x12d64>
  41569c:	ldr	x23, [sp, #48]
  4156a0:	mov	x0, x21
  4156a4:	bl	414858 <ferror@plt+0x11fd8>
  4156a8:	mov	x20, x0
  4156ac:	cbnz	x0, 4155d4 <ferror@plt+0x12d54>
  4156b0:	ldp	x19, x20, [sp, #16]
  4156b4:	ldp	x21, x22, [sp, #32]
  4156b8:	b	415550 <ferror@plt+0x12cd0>
  4156bc:	mov	x0, #0x588                 	// #1416
  4156c0:	bl	45d288 <_obstack_memory_used@@Base+0x960>
  4156c4:	mov	x19, x0
  4156c8:	mov	x3, #0x10                  	// #16
  4156cc:	movi	v0.4s, #0x0
  4156d0:	mov	w1, #0x1                   	// #1
  4156d4:	add	x2, x0, #0x200
  4156d8:	add	x17, x0, #0x600
  4156dc:	str	x3, [x19], #8
  4156e0:	add	x3, x0, #0x400
  4156e4:	str	wzr, [x0, #8]
  4156e8:	str	q0, [x0, #16]
  4156ec:	str	xzr, [x19, #24]
  4156f0:	stur	q0, [x0, #40]
  4156f4:	stur	q0, [x0, #56]
  4156f8:	str	xzr, [x19, #64]
  4156fc:	strb	w1, [x19, #72]
  415700:	str	xzr, [x0, #88]
  415704:	str	wzr, [x0, #96]
  415708:	str	xzr, [x0, #120]
  41570c:	str	xzr, [x0, #160]
  415710:	strb	w1, [x0, #168]
  415714:	str	xzr, [x0, #176]
  415718:	str	wzr, [x0, #184]
  41571c:	str	xzr, [x0, #208]
  415720:	str	xzr, [x0, #248]
  415724:	strb	w1, [x0, #256]
  415728:	str	xzr, [x0, #264]
  41572c:	str	wzr, [x0, #272]
  415730:	stur	q0, [x0, #104]
  415734:	stp	q0, q0, [x0, #128]
  415738:	str	q0, [x0, #192]
  41573c:	stur	q0, [x0, #216]
  415740:	stur	q0, [x0, #232]
  415744:	stur	q0, [x2, #-232]
  415748:	str	xzr, [x0, #296]
  41574c:	stp	q0, q0, [x0, #304]
  415750:	str	xzr, [x0, #336]
  415754:	strb	w1, [x0, #344]
  415758:	str	xzr, [x0, #352]
  41575c:	str	wzr, [x0, #360]
  415760:	str	xzr, [x0, #384]
  415764:	str	q0, [x0, #368]
  415768:	stur	q0, [x2, #-120]
  41576c:	stur	q0, [x2, #-104]
  415770:	str	xzr, [x0, #424]
  415774:	strb	w1, [x0, #432]
  415778:	str	xzr, [x0, #440]
  41577c:	str	wzr, [x0, #448]
  415780:	stur	q0, [x2, #-56]
  415784:	str	xzr, [x0, #472]
  415788:	str	xzr, [x0, #512]
  41578c:	strb	w1, [x0, #520]
  415790:	str	xzr, [x0, #528]
  415794:	str	wzr, [x0, #536]
  415798:	str	xzr, [x0, #560]
  41579c:	stp	q0, q0, [x0, #480]
  4157a0:	str	q0, [x0, #544]
  4157a4:	stur	q0, [x2, #56]
  4157a8:	stur	q0, [x2, #72]
  4157ac:	str	xzr, [x0, #600]
  4157b0:	strb	w1, [x0, #608]
  4157b4:	str	xzr, [x0, #616]
  4157b8:	str	wzr, [x0, #624]
  4157bc:	stur	q0, [x2, #120]
  4157c0:	str	xzr, [x0, #648]
  4157c4:	stp	q0, q0, [x0, #656]
  4157c8:	str	xzr, [x0, #688]
  4157cc:	strb	w1, [x0, #696]
  4157d0:	str	xzr, [x0, #704]
  4157d4:	str	wzr, [x0, #712]
  4157d8:	str	xzr, [x0, #736]
  4157dc:	str	q0, [x0, #720]
  4157e0:	stur	q0, [x2, #232]
  4157e4:	stur	q0, [x2, #248]
  4157e8:	str	xzr, [x0, #776]
  4157ec:	strb	w1, [x0, #784]
  4157f0:	str	xzr, [x0, #792]
  4157f4:	str	wzr, [x0, #800]
  4157f8:	stur	q0, [x3, #-216]
  4157fc:	str	xzr, [x0, #824]
  415800:	str	xzr, [x0, #864]
  415804:	strb	w1, [x0, #872]
  415808:	str	xzr, [x0, #880]
  41580c:	str	wzr, [x0, #888]
  415810:	str	xzr, [x0, #912]
  415814:	stp	q0, q0, [x0, #832]
  415818:	str	q0, [x0, #896]
  41581c:	stur	q0, [x3, #-104]
  415820:	stur	q0, [x3, #-88]
  415824:	str	xzr, [x0, #952]
  415828:	strb	w1, [x0, #960]
  41582c:	str	xzr, [x0, #968]
  415830:	str	wzr, [x0, #976]
  415834:	stur	q0, [x3, #-40]
  415838:	str	xzr, [x0, #1000]
  41583c:	str	xzr, [x0, #1040]
  415840:	strb	w1, [x0, #1048]
  415844:	str	xzr, [x0, #1056]
  415848:	str	wzr, [x0, #1064]
  41584c:	stp	q0, q0, [x0, #1008]
  415850:	str	q0, [x0, #1072]
  415854:	str	xzr, [x0, #1088]
  415858:	str	x19, [x20, #8]
  41585c:	stur	q0, [x3, #72]
  415860:	stur	q0, [x3, #88]
  415864:	str	xzr, [x0, #1128]
  415868:	strb	w1, [x0, #1136]
  41586c:	str	xzr, [x0, #1144]
  415870:	str	wzr, [x0, #1152]
  415874:	stur	q0, [x3, #136]
  415878:	str	xzr, [x0, #1176]
  41587c:	str	xzr, [x0, #1216]
  415880:	strb	w1, [x0, #1224]
  415884:	str	xzr, [x0, #1232]
  415888:	str	wzr, [x0, #1240]
  41588c:	str	xzr, [x0, #1264]
  415890:	str	q0, [x0, #1184]
  415894:	str	q0, [x0, #1200]
  415898:	str	q0, [x0, #1248]
  41589c:	stur	q0, [x3, #248]
  4158a0:	stur	q0, [x17, #-248]
  4158a4:	str	xzr, [x0, #1304]
  4158a8:	strb	w1, [x0, #1312]
  4158ac:	str	xzr, [x0, #1320]
  4158b0:	str	wzr, [x0, #1328]
  4158b4:	stur	q0, [x17, #-200]
  4158b8:	str	xzr, [x0, #1352]
  4158bc:	str	q0, [x0, #1360]
  4158c0:	str	q0, [x0, #1376]
  4158c4:	str	xzr, [x0, #1392]
  4158c8:	strb	w1, [x0, #1400]
  4158cc:	str	xzr, [x0, #1408]
  4158d0:	b	415588 <ferror@plt+0x12d08>
  4158d4:	cmp	x19, x2
  4158d8:	b.hi	41592c <ferror@plt+0x130ac>  // b.pmore
  4158dc:	mov	w0, #0x64                  	// #100
  4158e0:	smull	x0, w22, w0
  4158e4:	udiv	x0, x0, x2
  4158e8:	cmp	x0, w3, uxtw
  4158ec:	b.cs	415920 <ferror@plt+0x130a0>  // b.hs, b.nlast
  4158f0:	ubfiz	x2, x0, #1, #32
  4158f4:	add	x3, x0, x0, lsl #1
  4158f8:	add	x0, x2, w0, uxtw
  4158fc:	lsl	x3, x3, #3
  415900:	add	x0, x1, x0, lsl #3
  415904:	add	x3, x3, #0x8
  415908:	add	x2, x1, x3
  41590c:	ldr	x0, [x0, #8]
  415910:	cmp	x19, x0
  415914:	b.cc	415980 <ferror@plt+0x13100>  // b.lo, b.ul, b.last
  415918:	ldr	x0, [x1, x3]
  41591c:	b	415678 <ferror@plt+0x12df8>
  415920:	mov	x0, #0x0                   	// #0
  415924:	stp	xzr, xzr, [x20, #48]
  415928:	b	4155e4 <ferror@plt+0x12d64>
  41592c:	sub	w0, w3, #0x1
  415930:	b	4158e8 <ferror@plt+0x13068>
  415934:	sub	w2, w2, #0x1
  415938:	mov	w0, #0x18                  	// #24
  41593c:	umaddl	x1, w2, w0, x1
  415940:	add	x2, x1, #0x8
  415944:	b	41566c <ferror@plt+0x12dec>
  415948:	ldr	x1, [x2, #16]
  41594c:	ldr	x0, [x20, #24]
  415950:	sub	x1, x1, x3
  415954:	ldp	x19, x20, [sp, #16]
  415958:	add	x0, x0, x3
  41595c:	ldp	x21, x22, [sp, #32]
  415960:	b	415558 <ferror@plt+0x12cd8>
  415964:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  415968:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41596c:	add	x2, x2, #0xd00
  415970:	add	x0, x0, #0xc98
  415974:	mov	w1, #0x2b2                 	// #690
  415978:	str	x23, [sp, #48]
  41597c:	bl	4028b0 <ferror@plt+0x30>
  415980:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  415984:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  415988:	add	x2, x2, #0xd00
  41598c:	add	x0, x0, #0xc98
  415990:	mov	w1, #0x2c1                 	// #705
  415994:	str	x23, [sp, #48]
  415998:	bl	4028b0 <ferror@plt+0x30>
  41599c:	nop
  4159a0:	stp	x29, x30, [sp, #-48]!
  4159a4:	mov	x29, sp
  4159a8:	stp	x19, x20, [sp, #16]
  4159ac:	stp	x21, x22, [sp, #32]
  4159b0:	mov	x21, x0
  4159b4:	cbz	x0, 415a24 <ferror@plt+0x131a4>
  4159b8:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4159bc:	add	x20, x20, #0x760
  4159c0:	ldr	x19, [x20, #8]
  4159c4:	cbz	x19, 415a48 <ferror@plt+0x131c8>
  4159c8:	add	x22, x19, #0x580
  4159cc:	mov	x20, #0x0                   	// #0
  4159d0:	ldr	x0, [x19, #8]
  4159d4:	mov	x1, x21
  4159d8:	cbz	x0, 4159f4 <ferror@plt+0x13174>
  4159dc:	bl	4025d0 <strcmp@plt>
  4159e0:	cbnz	w0, 4159f4 <ferror@plt+0x13174>
  4159e4:	ldr	w0, [x19]
  4159e8:	mov	x20, x19
  4159ec:	add	w0, w0, #0x1
  4159f0:	str	w0, [x19]
  4159f4:	add	x19, x19, #0x58
  4159f8:	cmp	x22, x19
  4159fc:	b.ne	4159d0 <ferror@plt+0x13150>  // b.any
  415a00:	cbz	x20, 415a24 <ferror@plt+0x131a4>
  415a04:	ldr	w0, [x20]
  415a08:	add	w0, w0, #0x1
  415a0c:	str	w0, [x20]
  415a10:	ldrb	w0, [x20, #72]
  415a14:	ldp	x19, x20, [sp, #16]
  415a18:	ldp	x21, x22, [sp, #32]
  415a1c:	ldp	x29, x30, [sp], #48
  415a20:	ret
  415a24:	mov	x0, x21
  415a28:	bl	414858 <ferror@plt+0x11fd8>
  415a2c:	mov	x20, x0
  415a30:	mov	w0, #0x0                   	// #0
  415a34:	cbnz	x20, 415a10 <ferror@plt+0x13190>
  415a38:	ldp	x19, x20, [sp, #16]
  415a3c:	ldp	x21, x22, [sp, #32]
  415a40:	ldp	x29, x30, [sp], #48
  415a44:	ret
  415a48:	mov	x0, #0x588                 	// #1416
  415a4c:	bl	45d288 <_obstack_memory_used@@Base+0x960>
  415a50:	mov	x1, x0
  415a54:	mov	x3, #0x10                  	// #16
  415a58:	mov	x19, x1
  415a5c:	mov	w0, #0x1                   	// #1
  415a60:	movi	v0.4s, #0x0
  415a64:	add	x2, x1, #0x200
  415a68:	add	x18, x1, #0x600
  415a6c:	str	x3, [x19], #8
  415a70:	add	x3, x1, #0x400
  415a74:	str	wzr, [x1, #8]
  415a78:	str	q0, [x1, #16]
  415a7c:	str	xzr, [x19, #24]
  415a80:	stur	q0, [x1, #40]
  415a84:	stur	q0, [x1, #56]
  415a88:	str	xzr, [x19, #64]
  415a8c:	strb	w0, [x19, #72]
  415a90:	str	xzr, [x1, #88]
  415a94:	str	wzr, [x1, #96]
  415a98:	str	xzr, [x1, #120]
  415a9c:	str	xzr, [x1, #160]
  415aa0:	strb	w0, [x1, #168]
  415aa4:	str	xzr, [x1, #176]
  415aa8:	str	wzr, [x1, #184]
  415aac:	str	xzr, [x1, #208]
  415ab0:	str	xzr, [x1, #248]
  415ab4:	strb	w0, [x1, #256]
  415ab8:	str	xzr, [x1, #264]
  415abc:	str	wzr, [x1, #272]
  415ac0:	stur	q0, [x1, #104]
  415ac4:	stp	q0, q0, [x1, #128]
  415ac8:	str	q0, [x1, #192]
  415acc:	stur	q0, [x1, #216]
  415ad0:	stur	q0, [x1, #232]
  415ad4:	stur	q0, [x2, #-232]
  415ad8:	str	xzr, [x1, #296]
  415adc:	stp	q0, q0, [x1, #304]
  415ae0:	str	xzr, [x1, #336]
  415ae4:	strb	w0, [x1, #344]
  415ae8:	str	xzr, [x1, #352]
  415aec:	str	wzr, [x1, #360]
  415af0:	str	xzr, [x1, #384]
  415af4:	str	q0, [x1, #368]
  415af8:	stur	q0, [x2, #-120]
  415afc:	stur	q0, [x2, #-104]
  415b00:	str	xzr, [x1, #424]
  415b04:	strb	w0, [x1, #432]
  415b08:	str	xzr, [x1, #440]
  415b0c:	str	wzr, [x1, #448]
  415b10:	stur	q0, [x2, #-56]
  415b14:	str	xzr, [x1, #472]
  415b18:	str	xzr, [x1, #512]
  415b1c:	strb	w0, [x1, #520]
  415b20:	str	xzr, [x1, #528]
  415b24:	str	wzr, [x1, #536]
  415b28:	str	xzr, [x1, #560]
  415b2c:	stp	q0, q0, [x1, #480]
  415b30:	str	q0, [x1, #544]
  415b34:	stur	q0, [x2, #56]
  415b38:	stur	q0, [x2, #72]
  415b3c:	str	xzr, [x1, #600]
  415b40:	strb	w0, [x1, #608]
  415b44:	str	xzr, [x1, #616]
  415b48:	str	wzr, [x1, #624]
  415b4c:	stur	q0, [x2, #120]
  415b50:	str	xzr, [x1, #648]
  415b54:	stp	q0, q0, [x1, #656]
  415b58:	str	xzr, [x1, #688]
  415b5c:	strb	w0, [x1, #696]
  415b60:	str	xzr, [x1, #704]
  415b64:	str	wzr, [x1, #712]
  415b68:	str	xzr, [x1, #736]
  415b6c:	str	q0, [x1, #720]
  415b70:	stur	q0, [x2, #232]
  415b74:	stur	q0, [x2, #248]
  415b78:	str	xzr, [x1, #776]
  415b7c:	strb	w0, [x1, #784]
  415b80:	str	xzr, [x1, #792]
  415b84:	str	wzr, [x1, #800]
  415b88:	stur	q0, [x3, #-216]
  415b8c:	str	xzr, [x1, #824]
  415b90:	str	xzr, [x1, #864]
  415b94:	strb	w0, [x1, #872]
  415b98:	str	xzr, [x1, #880]
  415b9c:	str	wzr, [x1, #888]
  415ba0:	str	xzr, [x1, #912]
  415ba4:	stp	q0, q0, [x1, #832]
  415ba8:	str	q0, [x1, #896]
  415bac:	stur	q0, [x3, #-104]
  415bb0:	stur	q0, [x3, #-88]
  415bb4:	str	xzr, [x1, #952]
  415bb8:	strb	w0, [x1, #960]
  415bbc:	str	xzr, [x1, #968]
  415bc0:	str	wzr, [x1, #976]
  415bc4:	stur	q0, [x3, #-40]
  415bc8:	str	xzr, [x1, #1000]
  415bcc:	str	xzr, [x1, #1040]
  415bd0:	strb	w0, [x1, #1048]
  415bd4:	str	xzr, [x1, #1056]
  415bd8:	str	wzr, [x1, #1064]
  415bdc:	stp	q0, q0, [x1, #1008]
  415be0:	str	q0, [x1, #1072]
  415be4:	str	xzr, [x1, #1088]
  415be8:	str	x19, [x20, #8]
  415bec:	stur	q0, [x3, #72]
  415bf0:	stur	q0, [x3, #88]
  415bf4:	str	xzr, [x1, #1128]
  415bf8:	strb	w0, [x1, #1136]
  415bfc:	str	xzr, [x1, #1144]
  415c00:	str	wzr, [x1, #1152]
  415c04:	stur	q0, [x3, #136]
  415c08:	str	xzr, [x1, #1176]
  415c0c:	str	xzr, [x1, #1216]
  415c10:	strb	w0, [x1, #1224]
  415c14:	str	xzr, [x1, #1232]
  415c18:	str	wzr, [x1, #1240]
  415c1c:	str	xzr, [x1, #1264]
  415c20:	str	q0, [x1, #1184]
  415c24:	str	q0, [x1, #1200]
  415c28:	str	q0, [x1, #1248]
  415c2c:	stur	q0, [x3, #248]
  415c30:	stur	q0, [x18, #-248]
  415c34:	str	xzr, [x1, #1304]
  415c38:	strb	w0, [x1, #1312]
  415c3c:	str	xzr, [x1, #1320]
  415c40:	str	wzr, [x1, #1328]
  415c44:	stur	q0, [x18, #-200]
  415c48:	str	xzr, [x1, #1352]
  415c4c:	str	q0, [x1, #1360]
  415c50:	str	q0, [x1, #1376]
  415c54:	str	xzr, [x1, #1392]
  415c58:	strb	w0, [x1, #1400]
  415c5c:	str	xzr, [x1, #1408]
  415c60:	b	4159c8 <ferror@plt+0x13148>
  415c64:	nop
  415c68:	stp	x29, x30, [sp, #-32]!
  415c6c:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  415c70:	mov	w1, w0
  415c74:	mov	x29, sp
  415c78:	ldr	x0, [x2, #1888]
  415c7c:	add	x3, sp, #0x18
  415c80:	mov	w2, #0x1                   	// #1
  415c84:	str	xzr, [sp, #24]
  415c88:	bl	432b40 <ferror@plt+0x302c0>
  415c8c:	cmp	w0, #0x1
  415c90:	cset	w0, eq  // eq = none
  415c94:	ldp	x29, x30, [sp], #32
  415c98:	ret
  415c9c:	nop
  415ca0:	stp	x29, x30, [sp, #-96]!
  415ca4:	mov	x29, sp
  415ca8:	stp	x19, x20, [sp, #16]
  415cac:	mov	x20, x8
  415cb0:	mov	w19, w0
  415cb4:	stp	x21, x22, [sp, #32]
  415cb8:	mov	x21, #0x0                   	// #0
  415cbc:	tbnz	w0, #31, 415d5c <ferror@plt+0x134dc>
  415cc0:	stp	xzr, xzr, [sp, #64]
  415cc4:	cmp	w19, #0x1
  415cc8:	stp	xzr, xzr, [sp, #80]
  415ccc:	b.ls	415d2c <ferror@plt+0x134ac>  // b.plast
  415cd0:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  415cd4:	mov	w1, w19
  415cd8:	add	x3, sp, #0x38
  415cdc:	mov	w2, #0x0                   	// #0
  415ce0:	ldr	x0, [x22, #1888]
  415ce4:	bl	432b40 <ferror@plt+0x302c0>
  415ce8:	mov	w19, w0
  415cec:	ldr	x0, [x22, #1888]
  415cf0:	add	x8, sp, #0x40
  415cf4:	ldr	x1, [sp, #56]
  415cf8:	mov	w2, w19
  415cfc:	bl	433058 <ferror@plt+0x307d8>
  415d00:	str	x21, [sp, #80]
  415d04:	cmp	w19, #0x1
  415d08:	b.ls	415d30 <ferror@plt+0x134b0>  // b.plast
  415d0c:	ldp	x0, x1, [sp, #64]
  415d10:	stp	x0, x1, [x20]
  415d14:	ldp	x0, x1, [sp, #80]
  415d18:	stp	x0, x1, [x20, #16]
  415d1c:	ldp	x19, x20, [sp, #16]
  415d20:	ldp	x21, x22, [sp, #32]
  415d24:	ldp	x29, x30, [sp], #96
  415d28:	ret
  415d2c:	str	x21, [sp, #80]
  415d30:	mov	x0, #0x0                   	// #0
  415d34:	cbnz	w19, 415d84 <ferror@plt+0x13504>
  415d38:	str	x0, [sp, #64]
  415d3c:	ldp	x0, x1, [sp, #64]
  415d40:	stp	x0, x1, [x20]
  415d44:	ldp	x0, x1, [sp, #80]
  415d48:	stp	x0, x1, [x20, #16]
  415d4c:	ldp	x19, x20, [sp, #16]
  415d50:	ldp	x21, x22, [sp, #32]
  415d54:	ldp	x29, x30, [sp], #96
  415d58:	ret
  415d5c:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  415d60:	mov	w1, w0
  415d64:	ldr	x0, [x22, #1888]
  415d68:	bl	431050 <ferror@plt+0x2e7d0>
  415d6c:	mov	x21, x0
  415d70:	ldr	x0, [x22, #1888]
  415d74:	mov	w1, w19
  415d78:	bl	431068 <ferror@plt+0x2e7e8>
  415d7c:	mov	w19, w0
  415d80:	b	415cc0 <ferror@plt+0x13440>
  415d84:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  415d88:	add	x0, x0, #0xfa0
  415d8c:	bl	402830 <gettext@plt>
  415d90:	str	x0, [sp, #64]
  415d94:	b	415d3c <ferror@plt+0x134bc>
  415d98:	stp	x29, x30, [sp, #-112]!
  415d9c:	mov	x29, sp
  415da0:	stp	x19, x20, [sp, #16]
  415da4:	mov	w19, w0
  415da8:	mov	w20, w1
  415dac:	stp	x21, x22, [sp, #32]
  415db0:	mov	x21, x8
  415db4:	str	x23, [sp, #48]
  415db8:	mov	x23, #0x0                   	// #0
  415dbc:	tbnz	w0, #31, 415ea4 <ferror@plt+0x13624>
  415dc0:	stp	xzr, xzr, [sp, #80]
  415dc4:	cmp	w19, #0x1
  415dc8:	stp	xzr, xzr, [sp, #96]
  415dcc:	b.ls	415e90 <ferror@plt+0x13610>  // b.plast
  415dd0:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  415dd4:	mov	w1, w19
  415dd8:	mov	x2, #0x0                   	// #0
  415ddc:	ldr	x0, [x22, #1888]
  415de0:	bl	432e80 <ferror@plt+0x30600>
  415de4:	mov	w1, w0
  415de8:	ldr	x0, [x22, #1888]
  415dec:	add	x3, sp, #0x48
  415df0:	mov	w2, #0x1                   	// #1
  415df4:	bl	432b40 <ferror@plt+0x302c0>
  415df8:	mov	w19, w0
  415dfc:	cmp	w20, #0x1
  415e00:	b.eq	415ecc <ferror@plt+0x1364c>  // b.none
  415e04:	cmp	w20, #0x2
  415e08:	b.ne	415e48 <ferror@plt+0x135c8>  // b.any
  415e0c:	ldr	x0, [x22, #1888]
  415e10:	mov	w1, w19
  415e14:	bl	431d88 <ferror@plt+0x2f508>
  415e18:	lsr	x0, x0, #32
  415e1c:	cmp	w19, w0
  415e20:	b.eq	415e4c <ferror@plt+0x135cc>  // b.none
  415e24:	mov	x8, x21
  415e28:	mov	w2, w20
  415e2c:	mov	w1, #0x0                   	// #0
  415e30:	bl	414130 <ferror@plt+0x118b0>
  415e34:	ldp	x19, x20, [sp, #16]
  415e38:	ldp	x21, x22, [sp, #32]
  415e3c:	ldr	x23, [sp, #48]
  415e40:	ldp	x29, x30, [sp], #112
  415e44:	ret
  415e48:	cbnz	w20, 415ef8 <ferror@plt+0x13678>
  415e4c:	ldr	x0, [x22, #1888]
  415e50:	add	x8, sp, #0x50
  415e54:	ldr	x1, [sp, #72]
  415e58:	mov	w2, w19
  415e5c:	bl	433058 <ferror@plt+0x307d8>
  415e60:	str	x23, [sp, #96]
  415e64:	cmp	w19, #0x1
  415e68:	b.ls	415e94 <ferror@plt+0x13614>  // b.plast
  415e6c:	ldp	x0, x1, [sp, #80]
  415e70:	stp	x0, x1, [x21]
  415e74:	ldp	x0, x1, [sp, #96]
  415e78:	stp	x0, x1, [x21, #16]
  415e7c:	ldp	x19, x20, [sp, #16]
  415e80:	ldp	x21, x22, [sp, #32]
  415e84:	ldr	x23, [sp, #48]
  415e88:	ldp	x29, x30, [sp], #112
  415e8c:	ret
  415e90:	str	x23, [sp, #96]
  415e94:	mov	x0, #0x0                   	// #0
  415e98:	cbnz	w19, 415ee4 <ferror@plt+0x13664>
  415e9c:	str	x0, [sp, #80]
  415ea0:	b	415e6c <ferror@plt+0x135ec>
  415ea4:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  415ea8:	mov	w1, w0
  415eac:	ldr	x0, [x22, #1888]
  415eb0:	bl	431050 <ferror@plt+0x2e7d0>
  415eb4:	mov	x23, x0
  415eb8:	ldr	x0, [x22, #1888]
  415ebc:	mov	w1, w19
  415ec0:	bl	431068 <ferror@plt+0x2e7e8>
  415ec4:	mov	w19, w0
  415ec8:	b	415dc0 <ferror@plt+0x13540>
  415ecc:	ldr	x0, [x22, #1888]
  415ed0:	mov	w1, w19
  415ed4:	bl	431d88 <ferror@plt+0x2f508>
  415ed8:	cmp	w19, w0
  415edc:	b.eq	415e4c <ferror@plt+0x135cc>  // b.none
  415ee0:	b	415e24 <ferror@plt+0x135a4>
  415ee4:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  415ee8:	add	x0, x0, #0xfa0
  415eec:	bl	402830 <gettext@plt>
  415ef0:	str	x0, [sp, #80]
  415ef4:	b	415e6c <ferror@plt+0x135ec>
  415ef8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  415efc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  415f00:	add	x2, x2, #0xc80
  415f04:	add	x0, x0, #0xc98
  415f08:	mov	w1, #0xc7                  	// #199
  415f0c:	bl	4028b0 <ferror@plt+0x30>
  415f10:	stp	x29, x30, [sp, #-112]!
  415f14:	mov	x29, sp
  415f18:	stp	x19, x20, [sp, #16]
  415f1c:	mov	w19, w0
  415f20:	mov	w20, w1
  415f24:	stp	x21, x22, [sp, #32]
  415f28:	mov	x21, x8
  415f2c:	str	x23, [sp, #48]
  415f30:	mov	x23, #0x0                   	// #0
  415f34:	tbnz	w0, #31, 41601c <ferror@plt+0x1379c>
  415f38:	stp	xzr, xzr, [sp, #80]
  415f3c:	cmp	w19, #0x1
  415f40:	stp	xzr, xzr, [sp, #96]
  415f44:	b.ls	416008 <ferror@plt+0x13788>  // b.plast
  415f48:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  415f4c:	mov	w1, w19
  415f50:	mov	x2, #0x0                   	// #0
  415f54:	ldr	x0, [x22, #1888]
  415f58:	bl	432e80 <ferror@plt+0x30600>
  415f5c:	mov	w1, w0
  415f60:	ldr	x0, [x22, #1888]
  415f64:	add	x3, sp, #0x48
  415f68:	mov	w2, #0x1                   	// #1
  415f6c:	bl	432b40 <ferror@plt+0x302c0>
  415f70:	mov	w19, w0
  415f74:	cmp	w20, #0x1
  415f78:	b.eq	416044 <ferror@plt+0x137c4>  // b.none
  415f7c:	cmp	w20, #0x2
  415f80:	b.ne	415fc0 <ferror@plt+0x13740>  // b.any
  415f84:	ldr	x0, [x22, #1888]
  415f88:	mov	w1, w19
  415f8c:	bl	431d88 <ferror@plt+0x2f508>
  415f90:	lsr	x0, x0, #32
  415f94:	cmp	w19, w0
  415f98:	b.eq	415fc4 <ferror@plt+0x13744>  // b.none
  415f9c:	mov	x8, x21
  415fa0:	mov	w2, w20
  415fa4:	mov	w1, #0x0                   	// #0
  415fa8:	bl	414130 <ferror@plt+0x118b0>
  415fac:	ldp	x19, x20, [sp, #16]
  415fb0:	ldp	x21, x22, [sp, #32]
  415fb4:	ldr	x23, [sp, #48]
  415fb8:	ldp	x29, x30, [sp], #112
  415fbc:	ret
  415fc0:	cbnz	w20, 416070 <ferror@plt+0x137f0>
  415fc4:	ldr	x0, [x22, #1888]
  415fc8:	add	x8, sp, #0x50
  415fcc:	ldr	x1, [sp, #72]
  415fd0:	mov	w2, w19
  415fd4:	bl	433058 <ferror@plt+0x307d8>
  415fd8:	str	x23, [sp, #96]
  415fdc:	cmp	w19, #0x1
  415fe0:	b.ls	41600c <ferror@plt+0x1378c>  // b.plast
  415fe4:	ldp	x0, x1, [sp, #80]
  415fe8:	stp	x0, x1, [x21]
  415fec:	ldp	x0, x1, [sp, #96]
  415ff0:	stp	x0, x1, [x21, #16]
  415ff4:	ldp	x19, x20, [sp, #16]
  415ff8:	ldp	x21, x22, [sp, #32]
  415ffc:	ldr	x23, [sp, #48]
  416000:	ldp	x29, x30, [sp], #112
  416004:	ret
  416008:	str	x23, [sp, #96]
  41600c:	mov	x0, #0x0                   	// #0
  416010:	cbnz	w19, 41605c <ferror@plt+0x137dc>
  416014:	str	x0, [sp, #80]
  416018:	b	415fe4 <ferror@plt+0x13764>
  41601c:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  416020:	mov	w1, w0
  416024:	ldr	x0, [x22, #1888]
  416028:	bl	431050 <ferror@plt+0x2e7d0>
  41602c:	mov	x23, x0
  416030:	ldr	x0, [x22, #1888]
  416034:	mov	w1, w19
  416038:	bl	431068 <ferror@plt+0x2e7e8>
  41603c:	mov	w19, w0
  416040:	b	415f38 <ferror@plt+0x136b8>
  416044:	ldr	x0, [x22, #1888]
  416048:	mov	w1, w19
  41604c:	bl	431d88 <ferror@plt+0x2f508>
  416050:	cmp	w19, w0
  416054:	b.eq	415fc4 <ferror@plt+0x13744>  // b.none
  416058:	b	415f9c <ferror@plt+0x1371c>
  41605c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  416060:	add	x0, x0, #0xfa0
  416064:	bl	402830 <gettext@plt>
  416068:	str	x0, [sp, #80]
  41606c:	b	415fe4 <ferror@plt+0x13764>
  416070:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416074:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416078:	add	x2, x2, #0xc80
  41607c:	add	x0, x0, #0xc98
  416080:	mov	w1, #0xc7                  	// #199
  416084:	bl	4028b0 <ferror@plt+0x30>
  416088:	stp	x29, x30, [sp, #-32]!
  41608c:	mov	x29, sp
  416090:	stp	x19, x20, [sp, #16]
  416094:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  416098:	mov	w19, w0
  41609c:	ldr	x0, [x20, #1888]
  4160a0:	mov	w1, w19
  4160a4:	bl	432628 <ferror@plt+0x2fda8>
  4160a8:	cbnz	w0, 4160bc <ferror@plt+0x1383c>
  4160ac:	mov	w0, w19
  4160b0:	ldp	x19, x20, [sp, #16]
  4160b4:	ldp	x29, x30, [sp], #32
  4160b8:	ret
  4160bc:	ldr	x0, [x20, #1888]
  4160c0:	mov	w1, w19
  4160c4:	ldp	x19, x20, [sp, #16]
  4160c8:	mov	x3, #0x0                   	// #0
  4160cc:	ldp	x29, x30, [sp], #32
  4160d0:	mov	w2, #0x0                   	// #0
  4160d4:	b	432b40 <ferror@plt+0x302c0>
  4160d8:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4160dc:	mov	w1, w0
  4160e0:	mov	x3, #0x0                   	// #0
  4160e4:	ldr	x0, [x2, #1888]
  4160e8:	mov	w2, #0x0                   	// #0
  4160ec:	b	432b40 <ferror@plt+0x302c0>
  4160f0:	stp	x29, x30, [sp, #-48]!
  4160f4:	mov	w3, w0
  4160f8:	mov	x29, sp
  4160fc:	stp	x19, x20, [sp, #16]
  416100:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  416104:	mov	w20, w1
  416108:	ldr	x0, [x19, #1888]
  41610c:	mov	w1, w3
  416110:	stp	x21, x22, [sp, #32]
  416114:	mov	w22, w2
  416118:	bl	431e38 <ferror@plt+0x2f5b8>
  41611c:	mov	w21, w0
  416120:	ldr	x0, [x19, #1888]
  416124:	mov	w1, w20
  416128:	bl	431d88 <ferror@plt+0x2f508>
  41612c:	mov	x20, x0
  416130:	ldr	x0, [x19, #1888]
  416134:	mov	w1, w22
  416138:	bl	431d88 <ferror@plt+0x2f508>
  41613c:	mov	x2, x0
  416140:	mov	w1, w21
  416144:	mov	x3, #0x0                   	// #0
  416148:	ldr	x0, [x19, #1888]
  41614c:	bfxil	x2, x20, #0, #32
  416150:	ldp	x19, x20, [sp, #16]
  416154:	ldp	x21, x22, [sp, #32]
  416158:	ldp	x29, x30, [sp], #48
  41615c:	b	431b68 <ferror@plt+0x2f2e8>
  416160:	stp	x29, x30, [sp, #-32]!
  416164:	mov	x29, sp
  416168:	stp	x19, x20, [sp, #16]
  41616c:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  416170:	mov	x19, x1
  416174:	mov	w1, w0
  416178:	ldr	x0, [x20, #1888]
  41617c:	bl	431e38 <ferror@plt+0x2f5b8>
  416180:	mov	w1, w0
  416184:	mov	x2, x19
  416188:	mov	x3, #0x0                   	// #0
  41618c:	ldr	x0, [x20, #1888]
  416190:	ldp	x19, x20, [sp, #16]
  416194:	ldp	x29, x30, [sp], #32
  416198:	b	431b68 <ferror@plt+0x2f2e8>
  41619c:	nop
  4161a0:	stp	x29, x30, [sp, #-176]!
  4161a4:	mov	x29, sp
  4161a8:	str	x23, [sp, #48]
  4161ac:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4161b0:	add	x1, sp, #0x48
  4161b4:	stp	x19, x20, [sp, #16]
  4161b8:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4161bc:	ldr	x0, [x23, #1888]
  4161c0:	stp	x21, x22, [sp, #32]
  4161c4:	stp	xzr, xzr, [sp, #72]
  4161c8:	stp	xzr, xzr, [sp, #88]
  4161cc:	stp	xzr, xzr, [sp, #104]
  4161d0:	stp	xzr, xzr, [sp, #120]
  4161d4:	stp	xzr, xzr, [sp, #136]
  4161d8:	stp	xzr, xzr, [sp, #152]
  4161dc:	str	xzr, [sp, #168]
  4161e0:	bl	433540 <ferror@plt+0x30cc0>
  4161e4:	ldp	x21, x20, [sp, #88]
  4161e8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4161ec:	ldp	x3, x22, [sp, #128]
  4161f0:	add	x1, x1, #0xd10
  4161f4:	ldr	x0, [x19, #1312]
  4161f8:	ldr	x2, [sp, #104]
  4161fc:	add	x21, x21, x3
  416200:	add	x20, x22, x20
  416204:	ldr	x3, [sp, #144]
  416208:	add	x20, x20, x3
  41620c:	add	x22, x22, x3
  416210:	add	x21, x21, x3
  416214:	bl	402840 <fprintf@plt>
  416218:	ldr	x2, [sp, #104]
  41621c:	cbnz	x2, 416690 <ferror@plt+0x13e10>
  416220:	ldr	x3, [x19, #1312]
  416224:	mov	x2, #0x37                  	// #55
  416228:	mov	x1, #0x1                   	// #1
  41622c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416230:	add	x0, x0, #0xd80
  416234:	bl	402680 <fwrite@plt>
  416238:	ldr	x2, [sp, #80]
  41623c:	mov	x1, #0x27ff                	// #10239
  416240:	ldr	x0, [x19, #1312]
  416244:	cmp	x2, x1
  416248:	mov	w3, #0x20                  	// #32
  41624c:	b.le	416264 <ferror@plt+0x139e4>
  416250:	mov	w1, #0x9fffff              	// #10485759
  416254:	cmp	x2, x1
  416258:	b.gt	416684 <ferror@plt+0x13e04>
  41625c:	asr	x2, x2, #10
  416260:	mov	w3, #0x6b                  	// #107
  416264:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416268:	add	x1, x1, #0xdb8
  41626c:	bl	402840 <fprintf@plt>
  416270:	ldr	x2, [sp, #96]
  416274:	mov	x1, #0x27ff                	// #10239
  416278:	ldr	x0, [x19, #1312]
  41627c:	cmp	x2, x1
  416280:	mov	w3, #0x20                  	// #32
  416284:	b.le	41629c <ferror@plt+0x13a1c>
  416288:	mov	w1, #0x9fffff              	// #10485759
  41628c:	cmp	x2, x1
  416290:	b.gt	416678 <ferror@plt+0x13df8>
  416294:	asr	x2, x2, #10
  416298:	mov	w3, #0x6b                  	// #107
  41629c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4162a0:	add	x1, x1, #0xde8
  4162a4:	bl	402840 <fprintf@plt>
  4162a8:	ldr	x2, [sp, #72]
  4162ac:	mov	x1, #0x27ff                	// #10239
  4162b0:	ldr	x0, [x19, #1312]
  4162b4:	cmp	x2, x1
  4162b8:	mov	w3, #0x20                  	// #32
  4162bc:	b.le	4162d4 <ferror@plt+0x13a54>
  4162c0:	mov	w1, #0x9fffff              	// #10485759
  4162c4:	cmp	x2, x1
  4162c8:	b.gt	41666c <ferror@plt+0x13dec>
  4162cc:	asr	x2, x2, #10
  4162d0:	mov	w3, #0x6b                  	// #107
  4162d4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4162d8:	add	x1, x1, #0xe18
  4162dc:	bl	402840 <fprintf@plt>
  4162e0:	ldr	x2, [sp, #88]
  4162e4:	mov	x1, #0x27ff                	// #10239
  4162e8:	ldr	x0, [x19, #1312]
  4162ec:	cmp	x2, x1
  4162f0:	mov	w3, #0x20                  	// #32
  4162f4:	b.le	41630c <ferror@plt+0x13a8c>
  4162f8:	mov	w1, #0x9fffff              	// #10485759
  4162fc:	cmp	x2, x1
  416300:	b.gt	416660 <ferror@plt+0x13de0>
  416304:	asr	x2, x2, #10
  416308:	mov	w3, #0x6b                  	// #107
  41630c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416310:	add	x1, x1, #0xe48
  416314:	bl	402840 <fprintf@plt>
  416318:	ldr	x2, [sp, #120]
  41631c:	mov	x1, #0x27ff                	// #10239
  416320:	ldr	x0, [x19, #1312]
  416324:	cmp	x2, x1
  416328:	mov	w3, #0x20                  	// #32
  41632c:	b.le	416344 <ferror@plt+0x13ac4>
  416330:	mov	w1, #0x9fffff              	// #10485759
  416334:	cmp	x2, x1
  416338:	b.gt	416654 <ferror@plt+0x13dd4>
  41633c:	asr	x2, x2, #10
  416340:	mov	w3, #0x6b                  	// #107
  416344:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416348:	add	x1, x1, #0xe78
  41634c:	bl	402840 <fprintf@plt>
  416350:	ldr	x2, [sp, #136]
  416354:	mov	x1, #0x27ff                	// #10239
  416358:	ldr	x0, [x19, #1312]
  41635c:	cmp	x2, x1
  416360:	mov	w3, #0x20                  	// #32
  416364:	b.le	41637c <ferror@plt+0x13afc>
  416368:	mov	w1, #0x9fffff              	// #10485759
  41636c:	cmp	x2, x1
  416370:	b.gt	416648 <ferror@plt+0x13dc8>
  416374:	asr	x2, x2, #10
  416378:	mov	w3, #0x6b                  	// #107
  41637c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416380:	add	x1, x1, #0xea8
  416384:	bl	402840 <fprintf@plt>
  416388:	ldr	x2, [sp, #144]
  41638c:	mov	x1, #0x27ff                	// #10239
  416390:	ldr	x0, [x19, #1312]
  416394:	cmp	x2, x1
  416398:	mov	w3, #0x20                  	// #32
  41639c:	b.le	4163b4 <ferror@plt+0x13b34>
  4163a0:	mov	w1, #0x9fffff              	// #10485759
  4163a4:	cmp	x2, x1
  4163a8:	b.gt	41663c <ferror@plt+0x13dbc>
  4163ac:	asr	x2, x2, #10
  4163b0:	mov	w3, #0x6b                  	// #107
  4163b4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4163b8:	add	x1, x1, #0xed8
  4163bc:	bl	402840 <fprintf@plt>
  4163c0:	mov	x0, #0x27ff                	// #10239
  4163c4:	cmp	x22, x0
  4163c8:	ldr	x0, [x19, #1312]
  4163cc:	b.le	4163e8 <ferror@plt+0x13b68>
  4163d0:	mov	w1, #0x9fffff              	// #10485759
  4163d4:	cmp	x22, x1
  4163d8:	b.gt	416630 <ferror@plt+0x13db0>
  4163dc:	asr	x2, x22, #10
  4163e0:	mov	w3, #0x6b                  	// #107
  4163e4:	b	4163f0 <ferror@plt+0x13b70>
  4163e8:	mov	x2, x22
  4163ec:	mov	w3, #0x20                  	// #32
  4163f0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4163f4:	add	x1, x1, #0xf08
  4163f8:	bl	402840 <fprintf@plt>
  4163fc:	ldr	x2, [sp, #152]
  416400:	mov	x1, #0x27ff                	// #10239
  416404:	ldr	x0, [x19, #1312]
  416408:	cmp	x2, x1
  41640c:	mov	w3, #0x20                  	// #32
  416410:	b.le	416428 <ferror@plt+0x13ba8>
  416414:	mov	w1, #0x9fffff              	// #10485759
  416418:	cmp	x2, x1
  41641c:	b.gt	416624 <ferror@plt+0x13da4>
  416420:	asr	x2, x2, #10
  416424:	mov	w3, #0x6b                  	// #107
  416428:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41642c:	add	x1, x1, #0xf38
  416430:	bl	402840 <fprintf@plt>
  416434:	mov	x0, #0x27ff                	// #10239
  416438:	cmp	x21, x0
  41643c:	ldr	x0, [x19, #1312]
  416440:	b.le	416570 <ferror@plt+0x13cf0>
  416444:	mov	w1, #0x9fffff              	// #10485759
  416448:	cmp	x21, x1
  41644c:	b.gt	416618 <ferror@plt+0x13d98>
  416450:	asr	x2, x21, #10
  416454:	mov	w3, #0x6b                  	// #107
  416458:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41645c:	add	x1, x1, #0xf68
  416460:	bl	402840 <fprintf@plt>
  416464:	mov	x0, #0x27ff                	// #10239
  416468:	cmp	x20, x0
  41646c:	ldr	x0, [x19, #1312]
  416470:	b.gt	416594 <ferror@plt+0x13d14>
  416474:	mov	x2, x20
  416478:	mov	w3, #0x20                  	// #32
  41647c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416480:	add	x1, x1, #0xf98
  416484:	bl	402840 <fprintf@plt>
  416488:	ldr	x2, [sp, #160]
  41648c:	mov	x1, #0x27ff                	// #10239
  416490:	ldr	x0, [x19, #1312]
  416494:	cmp	x2, x1
  416498:	mov	w3, #0x20                  	// #32
  41649c:	b.le	4164b4 <ferror@plt+0x13c34>
  4164a0:	mov	w1, #0x9fffff              	// #10485759
  4164a4:	cmp	x2, x1
  4164a8:	b.gt	416600 <ferror@plt+0x13d80>
  4164ac:	asr	x2, x2, #10
  4164b0:	mov	w3, #0x6b                  	// #107
  4164b4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4164b8:	add	x1, x1, #0xfc8
  4164bc:	bl	402840 <fprintf@plt>
  4164c0:	ldr	x2, [sp, #168]
  4164c4:	mov	x1, #0x27ff                	// #10239
  4164c8:	ldr	x0, [x19, #1312]
  4164cc:	cmp	x2, x1
  4164d0:	mov	w3, #0x20                  	// #32
  4164d4:	b.le	4164ec <ferror@plt+0x13c6c>
  4164d8:	mov	w1, #0x9fffff              	// #10485759
  4164dc:	cmp	x2, x1
  4164e0:	b.gt	4165f4 <ferror@plt+0x13d74>
  4164e4:	asr	x2, x2, #10
  4164e8:	mov	w3, #0x6b                  	// #107
  4164ec:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4164f0:	add	x1, x1, #0xff8
  4164f4:	bl	402840 <fprintf@plt>
  4164f8:	ldr	x2, [x23, #1888]
  4164fc:	mov	w1, #0x27ff                	// #10239
  416500:	ldr	x0, [x19, #1312]
  416504:	ldr	w2, [x2, #124]
  416508:	cmp	w2, w1
  41650c:	b.hi	4165ac <ferror@plt+0x13d2c>  // b.pmore
  416510:	mov	w2, w2
  416514:	mov	w3, #0x20                  	// #32
  416518:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41651c:	add	x1, x1, #0x28
  416520:	bl	402840 <fprintf@plt>
  416524:	ldr	x2, [x23, #1888]
  416528:	mov	w1, #0x27ff                	// #10239
  41652c:	ldr	x0, [x19, #1312]
  416530:	ldr	w2, [x2, #128]
  416534:	cmp	w2, w1
  416538:	b.hi	4165c4 <ferror@plt+0x13d44>  // b.pmore
  41653c:	mov	w2, w2
  416540:	mov	w3, #0x20                  	// #32
  416544:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416548:	add	x1, x1, #0x58
  41654c:	bl	402840 <fprintf@plt>
  416550:	ldr	x1, [x19, #1312]
  416554:	mov	w0, #0xa                   	// #10
  416558:	bl	402340 <fputc@plt>
  41655c:	ldp	x19, x20, [sp, #16]
  416560:	ldp	x21, x22, [sp, #32]
  416564:	ldr	x23, [sp, #48]
  416568:	ldp	x29, x30, [sp], #176
  41656c:	ret
  416570:	mov	x2, x21
  416574:	mov	w3, #0x20                  	// #32
  416578:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41657c:	add	x1, x1, #0xf68
  416580:	bl	402840 <fprintf@plt>
  416584:	mov	x0, #0x27ff                	// #10239
  416588:	cmp	x20, x0
  41658c:	ldr	x0, [x19, #1312]
  416590:	b.le	416474 <ferror@plt+0x13bf4>
  416594:	mov	w1, #0x9fffff              	// #10485759
  416598:	cmp	x20, x1
  41659c:	b.gt	41660c <ferror@plt+0x13d8c>
  4165a0:	asr	x2, x20, #10
  4165a4:	mov	w3, #0x6b                  	// #107
  4165a8:	b	41647c <ferror@plt+0x13bfc>
  4165ac:	mov	w1, #0x9fffff              	// #10485759
  4165b0:	cmp	w2, w1
  4165b4:	b.hi	4165e8 <ferror@plt+0x13d68>  // b.pmore
  4165b8:	lsr	w2, w2, #10
  4165bc:	mov	w3, #0x6b                  	// #107
  4165c0:	b	416518 <ferror@plt+0x13c98>
  4165c4:	mov	w1, #0x9fffff              	// #10485759
  4165c8:	cmp	w2, w1
  4165cc:	b.hi	4165dc <ferror@plt+0x13d5c>  // b.pmore
  4165d0:	lsr	w2, w2, #10
  4165d4:	mov	w3, #0x6b                  	// #107
  4165d8:	b	416544 <ferror@plt+0x13cc4>
  4165dc:	lsr	w2, w2, #20
  4165e0:	mov	w3, #0x4d                  	// #77
  4165e4:	b	416544 <ferror@plt+0x13cc4>
  4165e8:	lsr	w2, w2, #20
  4165ec:	mov	w3, #0x4d                  	// #77
  4165f0:	b	416518 <ferror@plt+0x13c98>
  4165f4:	asr	x2, x2, #20
  4165f8:	mov	w3, #0x4d                  	// #77
  4165fc:	b	4164ec <ferror@plt+0x13c6c>
  416600:	asr	x2, x2, #20
  416604:	mov	w3, #0x4d                  	// #77
  416608:	b	4164b4 <ferror@plt+0x13c34>
  41660c:	asr	x2, x20, #20
  416610:	mov	w3, #0x4d                  	// #77
  416614:	b	41647c <ferror@plt+0x13bfc>
  416618:	asr	x2, x21, #20
  41661c:	mov	w3, #0x4d                  	// #77
  416620:	b	416578 <ferror@plt+0x13cf8>
  416624:	asr	x2, x2, #20
  416628:	mov	w3, #0x4d                  	// #77
  41662c:	b	416428 <ferror@plt+0x13ba8>
  416630:	asr	x2, x22, #20
  416634:	mov	w3, #0x4d                  	// #77
  416638:	b	4163f0 <ferror@plt+0x13b70>
  41663c:	asr	x2, x2, #20
  416640:	mov	w3, #0x4d                  	// #77
  416644:	b	4163b4 <ferror@plt+0x13b34>
  416648:	asr	x2, x2, #20
  41664c:	mov	w3, #0x4d                  	// #77
  416650:	b	41637c <ferror@plt+0x13afc>
  416654:	asr	x2, x2, #20
  416658:	mov	w3, #0x4d                  	// #77
  41665c:	b	416344 <ferror@plt+0x13ac4>
  416660:	asr	x2, x2, #20
  416664:	mov	w3, #0x4d                  	// #77
  416668:	b	41630c <ferror@plt+0x13a8c>
  41666c:	asr	x2, x2, #20
  416670:	mov	w3, #0x4d                  	// #77
  416674:	b	4162d4 <ferror@plt+0x13a54>
  416678:	asr	x2, x2, #20
  41667c:	mov	w3, #0x4d                  	// #77
  416680:	b	41629c <ferror@plt+0x13a1c>
  416684:	asr	x2, x2, #20
  416688:	mov	w3, #0x4d                  	// #77
  41668c:	b	416264 <ferror@plt+0x139e4>
  416690:	ldr	x3, [sp, #112]
  416694:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416698:	ldr	x0, [x19, #1312]
  41669c:	add	x1, x1, #0xd48
  4166a0:	sdiv	x2, x3, x2
  4166a4:	bl	402840 <fprintf@plt>
  4166a8:	b	416220 <ferror@plt+0x139a0>
  4166ac:	nop
  4166b0:	stp	x29, x30, [sp, #-224]!
  4166b4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4166b8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4166bc:	mov	x29, sp
  4166c0:	add	x1, x1, #0x888
  4166c4:	add	x2, x2, #0x90
  4166c8:	stp	x19, x20, [sp, #16]
  4166cc:	mov	x20, x0
  4166d0:	stp	x21, x22, [sp, #32]
  4166d4:	stp	x23, x24, [sp, #48]
  4166d8:	stp	x25, x26, [sp, #64]
  4166dc:	stp	x27, x28, [sp, #80]
  4166e0:	str	x1, [sp, #184]
  4166e4:	bl	402840 <fprintf@plt>
  4166e8:	mov	w3, #0x2                   	// #2
  4166ec:	mov	w2, #0x0                   	// #0
  4166f0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4166f4:	add	x0, x0, #0xa8
  4166f8:	mov	x1, x0
  4166fc:	str	x0, [sp, #112]
  416700:	mov	x0, x20
  416704:	bl	402840 <fprintf@plt>
  416708:	mov	x1, x20
  41670c:	mov	w0, #0xa                   	// #10
  416710:	bl	402340 <fputc@plt>
  416714:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  416718:	ldr	x1, [x0, #1888]
  41671c:	ldr	w0, [x1, #12]
  416720:	cbz	w0, 416b00 <ferror@plt+0x14280>
  416724:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416728:	add	x3, x3, #0xd0
  41672c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416730:	add	x2, x2, #0xe8
  416734:	stp	x3, x2, [sp, #120]
  416738:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41673c:	add	x3, x3, #0xf8
  416740:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416744:	add	x2, x2, #0x110
  416748:	stp	x3, x2, [sp, #136]
  41674c:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416750:	add	x3, x3, #0x130
  416754:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416758:	add	x2, x2, #0x148
  41675c:	stp	x3, x2, [sp, #152]
  416760:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416764:	add	x3, x3, #0x160
  416768:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41676c:	add	x2, x2, #0x178
  416770:	stp	x3, x2, [sp, #168]
  416774:	adrp	x3, 49e000 <_obstack_memory_used@@Base+0x416d8>
  416778:	add	x24, x3, #0x760
  41677c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416780:	add	x2, x2, #0x1c8
  416784:	str	wzr, [sp, #96]
  416788:	str	x2, [sp, #104]
  41678c:	nop
  416790:	ldr	w2, [sp, #96]
  416794:	sub	w0, w0, #0x1
  416798:	ldr	x23, [x1]
  41679c:	cmp	w0, w2
  4167a0:	b.eq	416f18 <ferror@plt+0x14698>  // b.none
  4167a4:	ldr	w0, [sp, #96]
  4167a8:	mov	w1, #0x18                  	// #24
  4167ac:	add	w0, w0, #0x1
  4167b0:	smull	x0, w0, w1
  4167b4:	ldr	w25, [x23, x0]
  4167b8:	ldr	w2, [sp, #96]
  4167bc:	mov	w22, #0x18                  	// #24
  4167c0:	ldr	x1, [sp, #120]
  4167c4:	mov	x0, x20
  4167c8:	smull	x22, w2, w22
  4167cc:	bl	402840 <fprintf@plt>
  4167d0:	ldr	x1, [sp, #112]
  4167d4:	add	x21, x23, x22
  4167d8:	ldr	w2, [x23, x22]
  4167dc:	mov	w3, w25
  4167e0:	mov	x0, x20
  4167e4:	bl	402840 <fprintf@plt>
  4167e8:	ldr	x2, [x21, #8]
  4167ec:	mov	x0, x20
  4167f0:	ldr	x1, [sp, #128]
  4167f4:	bl	402840 <fprintf@plt>
  4167f8:	ldr	w2, [x21, #16]
  4167fc:	mov	x0, x20
  416800:	ldr	x1, [sp, #136]
  416804:	bl	402840 <fprintf@plt>
  416808:	ldrb	w2, [x21, #6]
  41680c:	mov	x0, x20
  416810:	ldr	x1, [sp, #144]
  416814:	bl	402840 <fprintf@plt>
  416818:	ldrb	w3, [x21, #6]
  41681c:	mov	x0, x20
  416820:	ldr	x1, [sp, #152]
  416824:	ldrb	w2, [x21, #7]
  416828:	sub	w2, w3, w2
  41682c:	bl	402840 <fprintf@plt>
  416830:	ldrb	w2, [x21, #7]
  416834:	mov	x0, x20
  416838:	ldr	x1, [sp, #160]
  41683c:	bl	402840 <fprintf@plt>
  416840:	ldrb	w2, [x21, #4]
  416844:	cmp	w2, #0x4
  416848:	b.hi	416ed0 <ferror@plt+0x14650>  // b.pmore
  41684c:	and	x1, x2, #0xff
  416850:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416854:	add	x0, x0, #0x678
  416858:	ldr	x3, [x0, x1, lsl #3]
  41685c:	mov	x0, x20
  416860:	ldr	x1, [sp, #168]
  416864:	bl	402840 <fprintf@plt>
  416868:	ldr	x0, [x24]
  41686c:	mov	x1, x21
  416870:	bl	4311f0 <ferror@plt+0x2e970>
  416874:	mov	x19, x0
  416878:	ldr	w2, [x21, #20]
  41687c:	mov	x0, x20
  416880:	ldr	x1, [sp, #176]
  416884:	bl	402840 <fprintf@plt>
  416888:	cbz	x19, 4168b8 <ferror@plt+0x14038>
  41688c:	ldr	x3, [x24]
  416890:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  416894:	movk	x2, #0xaaab
  416898:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41689c:	mov	x0, x20
  4168a0:	add	x1, x1, #0x198
  4168a4:	ldr	x3, [x3]
  4168a8:	sub	x19, x19, x3
  4168ac:	asr	x19, x19, #3
  4168b0:	mul	w2, w19, w2
  4168b4:	bl	402840 <fprintf@plt>
  4168b8:	mov	x1, x20
  4168bc:	mov	w0, #0xa                   	// #10
  4168c0:	bl	402340 <fputc@plt>
  4168c4:	ldr	w19, [x23, x22]
  4168c8:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4168cc:	add	x26, x26, #0x1e0
  4168d0:	cmp	w25, w19
  4168d4:	b.hi	4168f4 <ferror@plt+0x14074>  // b.pmore
  4168d8:	b	416ad4 <ferror@plt+0x14254>
  4168dc:	ldrb	w1, [x21, #7]
  4168e0:	mov	w0, #0x1                   	// #1
  4168e4:	lsl	w0, w0, w1
  4168e8:	add	w19, w19, w0
  4168ec:	cmp	w25, w19
  4168f0:	b.ls	416ad4 <ferror@plt+0x14254>  // b.plast
  4168f4:	ldr	x0, [x24]
  4168f8:	mov	w1, w19
  4168fc:	bl	431080 <ferror@plt+0x2e800>
  416900:	tst	w0, #0xff
  416904:	b.eq	416f20 <ferror@plt+0x146a0>  // b.none
  416908:	ldr	x0, [x24]
  41690c:	add	x8, sp, #0xc0
  416910:	mov	w2, w19
  416914:	mov	x1, x21
  416918:	bl	433058 <ferror@plt+0x307d8>
  41691c:	ldr	w0, [sp, #204]
  416920:	cbnz	w0, 4168dc <ferror@plt+0x1405c>
  416924:	ldr	x27, [sp, #192]
  416928:	ldr	w28, [sp, #200]
  41692c:	mov	x0, x27
  416930:	mov	w1, w28
  416934:	bl	415540 <ferror@plt+0x12cc0>
  416938:	mov	x23, x1
  41693c:	mov	x6, x0
  416940:	cbz	x0, 416ad4 <ferror@plt+0x14254>
  416944:	mov	w5, w1
  416948:	mov	w3, w28
  41694c:	ldr	x1, [sp, #104]
  416950:	mov	w4, w19
  416954:	mov	x2, x27
  416958:	mov	x0, x20
  41695c:	bl	402840 <fprintf@plt>
  416960:	ldrb	w22, [x21, #6]
  416964:	mov	w1, #0x1                   	// #1
  416968:	mov	w0, w28
  41696c:	lsl	w22, w1, w22
  416970:	sub	w22, w22, #0x1
  416974:	cmp	x23, w22, sxtw
  416978:	csinc	w22, w22, w23, cs  // cs = hs, nlast
  41697c:	bl	405ff0 <ferror@plt+0x3770>
  416980:	mov	w28, w0
  416984:	mov	w0, w19
  416988:	bl	405ff0 <ferror@plt+0x3770>
  41698c:	mov	w23, w0
  416990:	mov	x0, x27
  416994:	bl	402270 <strlen@plt>
  416998:	add	w0, w0, #0x6
  41699c:	cmp	w28, #0x3
  4169a0:	mov	w1, #0x3                   	// #3
  4169a4:	csel	w28, w28, w1, ge  // ge = tcont
  4169a8:	cmp	w23, #0x5
  4169ac:	mov	w1, #0x5                   	// #5
  4169b0:	csel	w23, w23, w1, ge  // ge = tcont
  4169b4:	add	w28, w28, w23
  4169b8:	cmp	w25, #0x3e7
  4169bc:	add	w23, w28, w0
  4169c0:	b.hi	416e2c <ferror@plt+0x145ac>  // b.pmore
  4169c4:	cmp	w25, #0x63
  4169c8:	b.hi	416da4 <ferror@plt+0x14524>  // b.pmore
  4169cc:	mov	w2, w23
  4169d0:	mov	w3, #0x20                  	// #32
  4169d4:	mov	x1, x26
  4169d8:	mov	x0, x20
  4169dc:	bl	402840 <fprintf@plt>
  4169e0:	mov	x1, x20
  4169e4:	mov	w0, #0x7c                  	// #124
  4169e8:	bl	402340 <fputc@plt>
  4169ec:	cmp	w22, #0x1
  4169f0:	b.le	416edc <ferror@plt+0x1465c>
  4169f4:	mov	w28, #0xcccd                	// #52429
  4169f8:	mov	w27, #0x1                   	// #1
  4169fc:	movk	w28, #0xcccc, lsl #16
  416a00:	ldrb	w0, [x21, #7]
  416a04:	mov	x1, x20
  416a08:	lsl	w0, w27, w0
  416a0c:	add	w0, w0, w19
  416a10:	add	w27, w27, #0x1
  416a14:	umull	x0, w0, w28
  416a18:	lsr	x0, x0, #35
  416a1c:	umull	x2, w0, w28
  416a20:	lsr	x2, x2, #35
  416a24:	add	w2, w2, w2, lsl #2
  416a28:	sub	w0, w0, w2, lsl #1
  416a2c:	add	w0, w0, #0x30
  416a30:	bl	402340 <fputc@plt>
  416a34:	cmp	w27, w22
  416a38:	b.ne	416a00 <ferror@plt+0x14180>  // b.any
  416a3c:	mov	x1, x20
  416a40:	mov	w0, #0xa                   	// #10
  416a44:	bl	402340 <fputc@plt>
  416a48:	mov	w27, #0x1                   	// #1
  416a4c:	mov	w2, w23
  416a50:	mov	w3, #0x20                  	// #32
  416a54:	mov	x1, x26
  416a58:	mov	x0, x20
  416a5c:	mov	w23, #0x6667                	// #26215
  416a60:	bl	402840 <fprintf@plt>
  416a64:	mov	x1, x20
  416a68:	mov	w0, #0x7c                  	// #124
  416a6c:	movk	w23, #0x6666, lsl #16
  416a70:	bl	402340 <fputc@plt>
  416a74:	nop
  416a78:	ldrb	w0, [x21, #7]
  416a7c:	mov	x1, x20
  416a80:	lsl	w0, w27, w0
  416a84:	add	w2, w0, w19
  416a88:	add	w27, w27, #0x1
  416a8c:	smull	x0, w2, w23
  416a90:	asr	x0, x0, #34
  416a94:	sub	w0, w0, w2, asr #31
  416a98:	add	w0, w0, w0, lsl #2
  416a9c:	sub	w0, w2, w0, lsl #1
  416aa0:	add	w0, w0, #0x30
  416aa4:	bl	402340 <fputc@plt>
  416aa8:	cmp	w27, w22
  416aac:	b.ne	416a78 <ferror@plt+0x141f8>  // b.any
  416ab0:	mov	x1, x20
  416ab4:	mov	w0, #0xa                   	// #10
  416ab8:	bl	402340 <fputc@plt>
  416abc:	ldrb	w1, [x21, #7]
  416ac0:	mov	w0, #0x1                   	// #1
  416ac4:	lsl	w0, w0, w1
  416ac8:	add	w19, w19, w0
  416acc:	cmp	w25, w19
  416ad0:	b.hi	4168f4 <ferror@plt+0x14074>  // b.pmore
  416ad4:	mov	x1, x20
  416ad8:	mov	w0, #0xa                   	// #10
  416adc:	bl	402340 <fputc@plt>
  416ae0:	ldr	x1, [x24]
  416ae4:	ldr	w0, [sp, #96]
  416ae8:	add	w0, w0, #0x1
  416aec:	mov	w2, w0
  416af0:	ldr	w0, [x1, #12]
  416af4:	str	w2, [sp, #96]
  416af8:	cmp	w0, w2
  416afc:	b.hi	416790 <ferror@plt+0x13f10>  // b.pmore
  416b00:	ldr	w0, [x1, #36]
  416b04:	mov	w19, #0x80000000            	// #-2147483648
  416b08:	ldr	w21, [x1, #56]
  416b0c:	cbz	w0, 416b20 <ferror@plt+0x142a0>
  416b10:	sub	w0, w0, #0x1
  416b14:	ldr	x1, [x1, #24]
  416b18:	sbfiz	x0, x0, #5, #32
  416b1c:	ldr	w19, [x1, x0]
  416b20:	ldr	x1, [sp, #184]
  416b24:	mov	x0, x20
  416b28:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416b2c:	add	x2, x2, #0x1e8
  416b30:	bl	402840 <fprintf@plt>
  416b34:	ldr	x1, [sp, #112]
  416b38:	mov	w3, w19
  416b3c:	mov	w2, w21
  416b40:	mov	x0, x20
  416b44:	bl	402840 <fprintf@plt>
  416b48:	mov	x1, x20
  416b4c:	mov	w0, #0xa                   	// #10
  416b50:	bl	402340 <fputc@plt>
  416b54:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  416b58:	ldr	x1, [x0, #1888]
  416b5c:	ldr	w0, [x1, #36]
  416b60:	cbz	w0, 416d1c <ferror@plt+0x1449c>
  416b64:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416b68:	add	x2, x27, #0x228
  416b6c:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416b70:	str	x2, [sp, #96]
  416b74:	add	x2, x26, #0x248
  416b78:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416b7c:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416b80:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416b84:	add	x19, x19, #0x2a0
  416b88:	add	x22, x22, #0x318
  416b8c:	str	x2, [sp, #104]
  416b90:	add	x2, x28, #0x268
  416b94:	adrp	x24, 49e000 <_obstack_memory_used@@Base+0x416d8>
  416b98:	mov	w27, #0x0                   	// #0
  416b9c:	add	x24, x24, #0x760
  416ba0:	str	x2, [sp, #120]
  416ba4:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416ba8:	add	x2, x2, #0x288
  416bac:	str	x2, [sp, #128]
  416bb0:	str	x24, [sp, #136]
  416bb4:	nop
  416bb8:	sub	w21, w0, #0x1
  416bbc:	sub	w21, w21, w27
  416bc0:	ldr	x25, [x1, #24]
  416bc4:	sbfiz	x23, x21, #5, #32
  416bc8:	add	x24, x25, x23
  416bcc:	mov	x0, x24
  416bd0:	bl	432618 <ferror@plt+0x2fd98>
  416bd4:	ldr	x1, [sp, #96]
  416bd8:	mov	x3, x0
  416bdc:	ldr	w4, [x24, #4]
  416be0:	mov	w2, w21
  416be4:	mov	x0, x20
  416be8:	bl	402840 <fprintf@plt>
  416bec:	ldr	w2, [x25, x23]
  416bf0:	mov	x0, x20
  416bf4:	ldr	x1, [sp, #112]
  416bf8:	ldr	w3, [x24, #4]
  416bfc:	add	w3, w2, w3
  416c00:	bl	402840 <fprintf@plt>
  416c04:	ldr	w2, [x24, #24]
  416c08:	ldr	x1, [sp, #104]
  416c0c:	mov	w0, w2
  416c10:	bl	406b80 <ferror@plt+0x4300>
  416c14:	ldr	w2, [x25, x23]
  416c18:	mov	x0, x20
  416c1c:	ldr	x1, [sp, #120]
  416c20:	bl	402840 <fprintf@plt>
  416c24:	ldr	x0, [sp, #128]
  416c28:	mov	x3, x20
  416c2c:	mov	x2, #0x13                  	// #19
  416c30:	mov	x1, #0x1                   	// #1
  416c34:	bl	402680 <fwrite@plt>
  416c38:	ldr	w0, [x24, #4]
  416c3c:	cbz	w0, 416cf8 <ferror@plt+0x14478>
  416c40:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416c44:	mov	w25, #0x0                   	// #0
  416c48:	add	x26, x26, #0x338
  416c4c:	mov	w23, #0x0                   	// #0
  416c50:	b	416c8c <ferror@plt+0x1440c>
  416c54:	ldr	w3, [x24]
  416c58:	cmp	w21, w3
  416c5c:	b.cs	416eb4 <ferror@plt+0x14634>  // b.hs, b.nlast
  416c60:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416c64:	mov	w3, w21
  416c68:	add	x1, x1, #0x2b0
  416c6c:	mov	w0, w21
  416c70:	mov	w2, w23
  416c74:	bl	406b80 <ferror@plt+0x4300>
  416c78:	ldr	w0, [x24, #4]
  416c7c:	add	w23, w23, #0x1
  416c80:	add	w25, w25, #0x2
  416c84:	cmp	w23, w0
  416c88:	b.cs	416cf8 <ferror@plt+0x14478>  // b.hs, b.nlast
  416c8c:	ldr	x4, [x24, #16]
  416c90:	add	w3, w25, #0x1
  416c94:	mov	w2, w23
  416c98:	mov	x1, x19
  416c9c:	mov	x0, x20
  416ca0:	ldr	w21, [x4, w25, uxtw #2]
  416ca4:	ldr	w28, [x4, x3, lsl #2]
  416ca8:	mov	w3, w21
  416cac:	mov	w4, w28
  416cb0:	bl	402840 <fprintf@plt>
  416cb4:	cmp	w21, w28
  416cb8:	b.eq	416c54 <ferror@plt+0x143d4>  // b.none
  416cbc:	mov	w2, w23
  416cc0:	mov	w3, w21
  416cc4:	mov	x1, x22
  416cc8:	mov	w0, w21
  416ccc:	bl	406b80 <ferror@plt+0x4300>
  416cd0:	add	w25, w25, #0x2
  416cd4:	mov	w2, w23
  416cd8:	mov	w0, w21
  416cdc:	mov	w3, w28
  416ce0:	mov	x1, x26
  416ce4:	bl	406b80 <ferror@plt+0x4300>
  416ce8:	add	w23, w23, #0x1
  416cec:	ldr	w0, [x24, #4]
  416cf0:	cmp	w23, w0
  416cf4:	b.cc	416c8c <ferror@plt+0x1440c>  // b.lo, b.ul, b.last
  416cf8:	mov	x1, x20
  416cfc:	mov	w0, #0xa                   	// #10
  416d00:	bl	402340 <fputc@plt>
  416d04:	add	w27, w27, #0x1
  416d08:	ldr	x0, [sp, #136]
  416d0c:	ldr	x1, [x0]
  416d10:	ldr	w0, [x1, #36]
  416d14:	cmp	w27, w0
  416d18:	b.cc	416bb8 <ferror@plt+0x14338>  // b.lo, b.ul, b.last
  416d1c:	ldr	x21, [sp, #184]
  416d20:	mov	x0, x20
  416d24:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416d28:	add	x2, x2, #0x200
  416d2c:	mov	x1, x21
  416d30:	bl	402840 <fprintf@plt>
  416d34:	ldr	x19, [sp, #112]
  416d38:	mov	w3, #0x80000000            	// #-2147483648
  416d3c:	mov	w2, #0x7fffffff            	// #2147483647
  416d40:	mov	x0, x20
  416d44:	mov	x1, x19
  416d48:	bl	402840 <fprintf@plt>
  416d4c:	mov	x1, x20
  416d50:	mov	w0, #0xa                   	// #10
  416d54:	bl	402340 <fputc@plt>
  416d58:	mov	x1, x21
  416d5c:	mov	x0, x20
  416d60:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416d64:	add	x2, x2, #0x210
  416d68:	bl	402840 <fprintf@plt>
  416d6c:	mov	x1, x19
  416d70:	mov	x0, x20
  416d74:	mov	w3, #0xffffffff            	// #-1
  416d78:	mov	w2, #0x80000000            	// #-2147483648
  416d7c:	bl	402840 <fprintf@plt>
  416d80:	mov	x1, x20
  416d84:	mov	w0, #0xa                   	// #10
  416d88:	ldp	x19, x20, [sp, #16]
  416d8c:	ldp	x21, x22, [sp, #32]
  416d90:	ldp	x23, x24, [sp, #48]
  416d94:	ldp	x25, x26, [sp, #64]
  416d98:	ldp	x27, x28, [sp, #80]
  416d9c:	ldp	x29, x30, [sp], #224
  416da0:	b	402340 <fputc@plt>
  416da4:	mov	w2, w23
  416da8:	mov	w3, #0x20                  	// #32
  416dac:	mov	x1, x26
  416db0:	mov	x0, x20
  416db4:	bl	402840 <fprintf@plt>
  416db8:	mov	w27, #0x1                   	// #1
  416dbc:	mov	x1, x20
  416dc0:	mov	w0, #0x7c                  	// #124
  416dc4:	bl	402340 <fputc@plt>
  416dc8:	cmp	w22, #0x1
  416dcc:	b.le	416e1c <ferror@plt+0x1459c>
  416dd0:	mov	w28, #0x851f                	// #34079
  416dd4:	movk	w28, #0x51eb, lsl #16
  416dd8:	ldrb	w0, [x21, #7]
  416ddc:	mov	w2, #0xcccd                	// #52429
  416de0:	movk	w2, #0xcccc, lsl #16
  416de4:	mov	x1, x20
  416de8:	lsl	w0, w27, w0
  416dec:	add	w0, w0, w19
  416df0:	add	w27, w27, #0x1
  416df4:	umull	x0, w0, w28
  416df8:	lsr	x0, x0, #37
  416dfc:	umull	x2, w0, w2
  416e00:	lsr	x2, x2, #35
  416e04:	add	w2, w2, w2, lsl #2
  416e08:	sub	w0, w0, w2, lsl #1
  416e0c:	add	w0, w0, #0x30
  416e10:	bl	402340 <fputc@plt>
  416e14:	cmp	w27, w22
  416e18:	b.ne	416dd8 <ferror@plt+0x14558>  // b.any
  416e1c:	mov	x1, x20
  416e20:	mov	w0, #0xa                   	// #10
  416e24:	bl	402340 <fputc@plt>
  416e28:	b	4169cc <ferror@plt+0x1414c>
  416e2c:	mov	w2, w23
  416e30:	mov	w3, #0x20                  	// #32
  416e34:	mov	x1, x26
  416e38:	mov	x0, x20
  416e3c:	bl	402840 <fprintf@plt>
  416e40:	mov	w27, #0x1                   	// #1
  416e44:	mov	x1, x20
  416e48:	mov	w0, #0x7c                  	// #124
  416e4c:	bl	402340 <fputc@plt>
  416e50:	cmp	w22, w27
  416e54:	b.le	416ea4 <ferror@plt+0x14624>
  416e58:	mov	w28, #0x4dd3                	// #19923
  416e5c:	movk	w28, #0x1062, lsl #16
  416e60:	ldrb	w0, [x21, #7]
  416e64:	mov	w2, #0xcccd                	// #52429
  416e68:	movk	w2, #0xcccc, lsl #16
  416e6c:	mov	x1, x20
  416e70:	lsl	w0, w27, w0
  416e74:	add	w0, w0, w19
  416e78:	add	w27, w27, #0x1
  416e7c:	umull	x0, w0, w28
  416e80:	lsr	x0, x0, #38
  416e84:	umull	x2, w0, w2
  416e88:	lsr	x2, x2, #35
  416e8c:	add	w2, w2, w2, lsl #2
  416e90:	sub	w0, w0, w2, lsl #1
  416e94:	add	w0, w0, #0x30
  416e98:	bl	402340 <fputc@plt>
  416e9c:	cmp	w27, w22
  416ea0:	b.ne	416e60 <ferror@plt+0x145e0>  // b.any
  416ea4:	mov	x1, x20
  416ea8:	mov	w0, #0xa                   	// #10
  416eac:	bl	402340 <fputc@plt>
  416eb0:	b	4169c4 <ferror@plt+0x14144>
  416eb4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416eb8:	sub	w3, w21, w3
  416ebc:	add	x1, x0, #0x2e0
  416ec0:	mov	w2, w21
  416ec4:	mov	x0, x20
  416ec8:	bl	402840 <fprintf@plt>
  416ecc:	b	416c78 <ferror@plt+0x143f8>
  416ed0:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416ed4:	add	x3, x3, #0x88
  416ed8:	b	41685c <ferror@plt+0x13fdc>
  416edc:	mov	x1, x20
  416ee0:	mov	w0, #0xa                   	// #10
  416ee4:	bl	402340 <fputc@plt>
  416ee8:	mov	w2, w23
  416eec:	mov	w3, #0x20                  	// #32
  416ef0:	mov	x1, x26
  416ef4:	mov	x0, x20
  416ef8:	bl	402840 <fprintf@plt>
  416efc:	mov	x1, x20
  416f00:	mov	w0, #0x7c                  	// #124
  416f04:	bl	402340 <fputc@plt>
  416f08:	mov	x1, x20
  416f0c:	mov	w0, #0xa                   	// #10
  416f10:	bl	402340 <fputc@plt>
  416f14:	b	416abc <ferror@plt+0x1423c>
  416f18:	ldr	w25, [x1, #56]
  416f1c:	b	4167b8 <ferror@plt+0x13f38>
  416f20:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  416f24:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  416f28:	add	x2, x2, #0x1b0
  416f2c:	add	x0, x0, #0xc98
  416f30:	mov	w1, #0x454                 	// #1108
  416f34:	bl	4028b0 <ferror@plt+0x30>
  416f38:	stp	x29, x30, [sp, #-48]!
  416f3c:	mov	x3, #0x0                   	// #0
  416f40:	mov	x29, sp
  416f44:	stp	x19, x20, [sp, #16]
  416f48:	mov	x20, x0
  416f4c:	mov	w19, w1
  416f50:	str	x21, [sp, #32]
  416f54:	sbfiz	x0, x1, #2, #32
  416f58:	str	w1, [x20]
  416f5c:	mov	x21, x2
  416f60:	mov	x1, #0x0                   	// #0
  416f64:	mov	x2, #0x0                   	// #0
  416f68:	bl	4043c0 <ferror@plt+0x1b40>
  416f6c:	str	x0, [x20, #8]
  416f70:	cmp	w19, #0x0
  416f74:	b.le	416f98 <ferror@plt+0x14718>
  416f78:	sub	w19, w19, #0x1
  416f7c:	mov	x1, x21
  416f80:	add	x2, x19, #0x1
  416f84:	ldp	x19, x20, [sp, #16]
  416f88:	lsl	x2, x2, #2
  416f8c:	ldr	x21, [sp, #32]
  416f90:	ldp	x29, x30, [sp], #48
  416f94:	b	402220 <memcpy@plt>
  416f98:	ldp	x19, x20, [sp, #16]
  416f9c:	ldr	x21, [sp, #32]
  416fa0:	ldp	x29, x30, [sp], #48
  416fa4:	ret
  416fa8:	stp	x29, x30, [sp, #-64]!
  416fac:	mov	x3, #0x1                   	// #1
  416fb0:	mov	x2, #0x0                   	// #0
  416fb4:	mov	x29, sp
  416fb8:	adrp	x1, 417000 <ferror@plt+0x14780>
  416fbc:	add	x1, x1, #0xcb0
  416fc0:	stp	x19, x20, [sp, #16]
  416fc4:	stp	x21, x22, [sp, #32]
  416fc8:	str	x23, [sp, #48]
  416fcc:	mov	x23, x0
  416fd0:	mov	x0, #0x30                  	// #48
  416fd4:	bl	4043c0 <ferror@plt+0x1b40>
  416fd8:	mov	x19, x0
  416fdc:	mov	w1, #0x1                   	// #1
  416fe0:	mov	x0, #0x40                  	// #64
  416fe4:	stp	xzr, xzr, [x19, #16]
  416fe8:	str	xzr, [x19, #32]
  416fec:	strb	w1, [x19, #44]
  416ff0:	bl	403f18 <ferror@plt+0x1698>
  416ff4:	mov	w20, w0
  416ff8:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  416ffc:	add	x0, x1, #0xc80
  417000:	mov	x3, #0x0                   	// #0
  417004:	ubfiz	x4, x20, #4, #32
  417008:	mov	x2, #0x0                   	// #0
  41700c:	mov	x1, #0x0                   	// #0
  417010:	ldr	w22, [x0, x4]
  417014:	lsl	x21, x22, #4
  417018:	mov	x0, x21
  41701c:	bl	4043e8 <ferror@plt+0x1b68>
  417020:	cbz	x0, 41705c <ferror@plt+0x147dc>
  417024:	mov	x1, x0
  417028:	cbz	x22, 41703c <ferror@plt+0x147bc>
  41702c:	add	x21, x21, x0
  417030:	str	wzr, [x0], #16
  417034:	cmp	x21, x0
  417038:	b.ne	417030 <ferror@plt+0x147b0>  // b.any
  41703c:	stp	x1, x22, [x19]
  417040:	ldp	x21, x22, [sp, #32]
  417044:	str	x19, [x23]
  417048:	str	w20, [x19, #40]
  41704c:	ldp	x19, x20, [sp, #16]
  417050:	ldr	x23, [sp, #48]
  417054:	ldp	x29, x30, [sp], #64
  417058:	ret
  41705c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417060:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417064:	add	x2, x2, #0xc48
  417068:	add	x0, x0, #0xc58
  41706c:	mov	w1, #0x2b5                 	// #693
  417070:	bl	4028b0 <ferror@plt+0x30>
  417074:	nop
  417078:	stp	x29, x30, [sp, #-48]!
  41707c:	mov	x29, sp
  417080:	stp	x19, x20, [sp, #16]
  417084:	stp	x21, x22, [sp, #32]
  417088:	cbz	x2, 4171e0 <ferror@plt+0x14960>
  41708c:	mov	x19, x3
  417090:	cbz	x3, 4171c8 <ferror@plt+0x14948>
  417094:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  417098:	mov	x21, x0
  41709c:	mov	x3, #0x0                   	// #0
  4170a0:	mov	x20, x2
  4170a4:	ldr	x0, [x22, #1888]
  4170a8:	mov	w2, #0x1                   	// #1
  4170ac:	bl	432b40 <ferror@plt+0x302c0>
  4170b0:	mov	w1, w0
  4170b4:	ldr	x0, [x22, #1888]
  4170b8:	bl	431d88 <ferror@plt+0x2f508>
  4170bc:	mov	w8, w0
  4170c0:	ldr	x6, [x21]
  4170c4:	adrp	x7, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4170c8:	add	x7, x7, #0xc80
  4170cc:	ldr	w4, [x6, #40]
  4170d0:	ldr	w1, [x6, #32]
  4170d4:	ldr	x5, [x6]
  4170d8:	lsl	x4, x4, #4
  4170dc:	add	x2, x7, x4
  4170e0:	add	w1, w1, #0x1
  4170e4:	str	w1, [x6, #32]
  4170e8:	ldr	w1, [x2, #4]
  4170ec:	ldr	w7, [x7, x4]
  4170f0:	ldr	w9, [x2, #12]
  4170f4:	umull	x1, w0, w1
  4170f8:	lsr	x4, x1, #32
  4170fc:	sub	w1, w0, w4
  417100:	add	w1, w4, w1, lsr #1
  417104:	lsr	w1, w1, w9
  417108:	msub	w1, w1, w7, w0
  41710c:	ubfiz	x4, x1, #4, #32
  417110:	add	x3, x5, x4
  417114:	ldr	w4, [x5, x4]
  417118:	cmp	w4, #0x0
  41711c:	ccmp	w4, w0, #0x4, ne  // ne = any
  417120:	b.ne	417154 <ferror@plt+0x148d4>  // b.any
  417124:	mov	w0, #0x0                   	// #0
  417128:	cbz	w4, 417144 <ferror@plt+0x148c4>
  41712c:	ldr	x1, [x3, #8]
  417130:	mov	w0, #0x1                   	// #1
  417134:	ldr	w2, [x1]
  417138:	ldr	x1, [x1, #8]
  41713c:	str	w2, [x20]
  417140:	str	x1, [x19]
  417144:	ldp	x19, x20, [sp, #16]
  417148:	ldp	x21, x22, [sp, #32]
  41714c:	ldp	x29, x30, [sp], #48
  417150:	ret
  417154:	ldr	w3, [x2, #8]
  417158:	add	w4, w0, #0x1
  41715c:	sub	w2, w7, #0x2
  417160:	ldr	w7, [x6, #36]
  417164:	ldr	x10, [x6, #8]
  417168:	add	w7, w7, #0x1
  41716c:	umull	x3, w0, w3
  417170:	lsr	x3, x3, #32
  417174:	sub	w0, w0, w3
  417178:	add	w0, w3, w0, lsr #1
  41717c:	lsr	w0, w0, w9
  417180:	msub	w0, w0, w2, w4
  417184:	b	4171a8 <ferror@plt+0x14928>
  417188:	sub	w1, w2, w10
  41718c:	add	w7, w7, #0x1
  417190:	ubfiz	x2, x1, #4, #32
  417194:	ldr	w4, [x5, x2]
  417198:	add	x3, x5, x2
  41719c:	cmp	w4, #0x0
  4171a0:	ccmp	w4, w8, #0x4, ne  // ne = any
  4171a4:	b.eq	417124 <ferror@plt+0x148a4>  // b.none
  4171a8:	add	w2, w1, w0
  4171ac:	str	w7, [x6, #36]
  4171b0:	mov	x1, x2
  4171b4:	cmp	x10, w2, uxtw
  4171b8:	b.ls	417188 <ferror@plt+0x14908>  // b.plast
  4171bc:	lsl	x2, x2, #4
  4171c0:	add	w7, w7, #0x1
  4171c4:	b	417194 <ferror@plt+0x14914>
  4171c8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4171cc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4171d0:	add	x2, x2, #0x358
  4171d4:	add	x0, x0, #0xc98
  4171d8:	mov	w1, #0x50e                 	// #1294
  4171dc:	bl	4028b0 <ferror@plt+0x30>
  4171e0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4171e4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4171e8:	add	x2, x2, #0x358
  4171ec:	add	x0, x0, #0xc98
  4171f0:	mov	w1, #0x50d                 	// #1293
  4171f4:	bl	4028b0 <ferror@plt+0x30>
  4171f8:	stp	x29, x30, [sp, #-32]!
  4171fc:	mov	w1, w0
  417200:	mov	x3, #0x0                   	// #0
  417204:	mov	x29, sp
  417208:	str	x19, [sp, #16]
  41720c:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  417210:	mov	w2, #0x1                   	// #1
  417214:	ldr	x0, [x19, #1888]
  417218:	bl	432b40 <ferror@plt+0x302c0>
  41721c:	mov	w1, w0
  417220:	ldr	x0, [x19, #1888]
  417224:	bl	431d88 <ferror@plt+0x2f508>
  417228:	ldr	x19, [sp, #16]
  41722c:	ldp	x29, x30, [sp], #32
  417230:	ret
  417234:	nop
  417238:	stp	x29, x30, [sp, #-288]!
  41723c:	mov	x29, sp
  417240:	stp	x19, x20, [sp, #16]
  417244:	stp	x23, x24, [sp, #48]
  417248:	mov	x23, x0
  41724c:	str	w4, [sp, #108]
  417250:	str	w5, [sp, #116]
  417254:	str	x7, [sp, #120]
  417258:	stp	w6, w3, [sp, #128]
  41725c:	cbz	x7, 417a8c <ferror@plt+0x1520c>
  417260:	mov	w19, w2
  417264:	mov	x20, x1
  417268:	add	x0, sp, #0xc0
  41726c:	bl	419e98 <ferror@plt+0x17618>
  417270:	stp	x21, x22, [sp, #32]
  417274:	str	w19, [sp, #160]
  417278:	cbz	x23, 417a3c <ferror@plt+0x151bc>
  41727c:	cbnz	w19, 4172a8 <ferror@plt+0x14a28>
  417280:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417284:	add	x21, x21, #0x570
  417288:	add	x0, sp, #0xc0
  41728c:	bl	419ed0 <ferror@plt+0x17650>
  417290:	mov	x0, x21
  417294:	ldp	x19, x20, [sp, #16]
  417298:	ldp	x21, x22, [sp, #32]
  41729c:	ldp	x23, x24, [sp, #48]
  4172a0:	ldp	x29, x30, [sp], #288
  4172a4:	ret
  4172a8:	mov	x0, x23
  4172ac:	bl	4217c0 <ferror@plt+0x1ef40>
  4172b0:	ldrb	w0, [x0, #45]
  4172b4:	cmp	w0, #0x2
  4172b8:	b.ne	4173cc <ferror@plt+0x14b4c>  // b.any
  4172bc:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4172c0:	ldr	x0, [x0, #1888]
  4172c4:	ldrb	w0, [x0, #116]
  4172c8:	cbnz	w0, 4173f4 <ferror@plt+0x14b74>
  4172cc:	add	x1, sp, #0xa0
  4172d0:	mov	w0, #0x1                   	// #1
  4172d4:	str	w0, [sp, #164]
  4172d8:	str	x1, [sp, #168]
  4172dc:	cbz	x20, 417450 <ferror@plt+0x14bd0>
  4172e0:	ldr	w1, [sp, #160]
  4172e4:	mov	x0, x20
  4172e8:	add	x3, sp, #0xa8
  4172ec:	add	x2, sp, #0xa4
  4172f0:	bl	417078 <ferror@plt+0x147f8>
  4172f4:	ldr	w0, [sp, #164]
  4172f8:	sxtw	x21, w0
  4172fc:	cbnz	w0, 417a2c <ferror@plt+0x151ac>
  417300:	mov	x19, #0x0                   	// #0
  417304:	mov	x20, #0x0                   	// #0
  417308:	mov	x1, #0x0                   	// #0
  41730c:	mov	x2, #0x0                   	// #0
  417310:	ldr	w5, [sp, #132]
  417314:	mov	x3, x21
  417318:	mov	x0, x23
  41731c:	add	x4, sp, #0xc0
  417320:	bl	41d180 <ferror@plt+0x1a900>
  417324:	mov	x21, x0
  417328:	cbz	x19, 41733c <ferror@plt+0x14abc>
  41732c:	ldrsb	w0, [x19, #3]
  417330:	tbnz	w0, #31, 41788c <ferror@plt+0x1500c>
  417334:	mov	x0, x19
  417338:	bl	402640 <free@plt>
  41733c:	cbz	x20, 417378 <ferror@plt+0x14af8>
  417340:	ldr	w0, [x20, #4]
  417344:	cbz	w0, 417368 <ferror@plt+0x14ae8>
  417348:	add	x22, x20, #0x10
  41734c:	mov	w19, #0x0                   	// #0
  417350:	ldr	x0, [x22], #16
  417354:	add	w19, w19, #0x1
  417358:	bl	402640 <free@plt>
  41735c:	ldr	w0, [x20, #4]
  417360:	cmp	w19, w0
  417364:	b.cc	417350 <ferror@plt+0x14ad0>  // b.lo, b.ul, b.last
  417368:	ldrsb	w0, [x20, #3]
  41736c:	tbnz	w0, #31, 417894 <ferror@plt+0x15014>
  417370:	mov	x0, x20
  417374:	bl	402640 <free@plt>
  417378:	cbnz	x21, 417288 <ferror@plt+0x14a08>
  41737c:	ldr	w1, [sp, #108]
  417380:	ldr	w0, [sp, #200]
  417384:	cmp	w1, w0
  417388:	b.ge	417400 <ferror@plt+0x14b80>  // b.tcont
  41738c:	ldr	w1, [sp, #116]
  417390:	cmp	w1, w0
  417394:	b.ge	417428 <ferror@plt+0x14ba8>  // b.tcont
  417398:	ldr	w1, [sp, #128]
  41739c:	cmp	w1, w0
  4173a0:	b.lt	41789c <ferror@plt+0x1501c>  // b.tstop
  4173a4:	add	x0, sp, #0xc0
  4173a8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4173ac:	bl	419ed0 <ferror@plt+0x17650>
  4173b0:	add	x21, x21, #0x558
  4173b4:	mov	x0, x21
  4173b8:	ldp	x19, x20, [sp, #16]
  4173bc:	ldp	x21, x22, [sp, #32]
  4173c0:	ldp	x23, x24, [sp, #48]
  4173c4:	ldp	x29, x30, [sp], #288
  4173c8:	ret
  4173cc:	add	x0, sp, #0xc0
  4173d0:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4173d4:	bl	419ed0 <ferror@plt+0x17650>
  4173d8:	add	x21, x21, #0x588
  4173dc:	mov	x0, x21
  4173e0:	ldp	x19, x20, [sp, #16]
  4173e4:	ldp	x21, x22, [sp, #32]
  4173e8:	ldp	x23, x24, [sp, #48]
  4173ec:	ldp	x29, x30, [sp], #288
  4173f0:	ret
  4173f4:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4173f8:	add	x21, x21, #0x5a8
  4173fc:	b	417288 <ferror@plt+0x14a08>
  417400:	add	x0, sp, #0xc0
  417404:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417408:	bl	419ed0 <ferror@plt+0x17650>
  41740c:	add	x21, x21, #0x528
  417410:	mov	x0, x21
  417414:	ldp	x19, x20, [sp, #16]
  417418:	ldp	x21, x22, [sp, #32]
  41741c:	ldp	x23, x24, [sp, #48]
  417420:	ldp	x29, x30, [sp], #288
  417424:	ret
  417428:	add	x0, sp, #0xc0
  41742c:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417430:	bl	419ed0 <ferror@plt+0x17650>
  417434:	add	x21, x21, #0x540
  417438:	mov	x0, x21
  41743c:	ldp	x19, x20, [sp, #16]
  417440:	ldp	x21, x22, [sp, #32]
  417444:	ldp	x23, x24, [sp, #48]
  417448:	ldp	x29, x30, [sp], #288
  41744c:	ret
  417450:	mov	w19, w0
  417454:	mov	x1, #0x18                  	// #24
  417458:	mov	x0, #0x0                   	// #0
  41745c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  417460:	mov	x20, x0
  417464:	mov	w0, w19
  417468:	str	x0, [x20]
  41746c:	ldr	w0, [sp, #164]
  417470:	sxtw	x21, w0
  417474:	cbz	w0, 417a1c <ferror@plt+0x1519c>
  417478:	ubfiz	x1, x21, #4, #32
  41747c:	mov	x0, #0x0                   	// #0
  417480:	add	x1, x1, #0x8
  417484:	and	x21, x21, #0x7fffffff
  417488:	stp	x25, x26, [sp, #64]
  41748c:	stp	x27, x28, [sp, #80]
  417490:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  417494:	mov	x19, x0
  417498:	str	x21, [x0]
  41749c:	ldr	w0, [sp, #164]
  4174a0:	cmp	w0, #0x0
  4174a4:	b.le	4176ac <ferror@plt+0x14e2c>
  4174a8:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4174ac:	add	x22, x22, #0x760
  4174b0:	mov	x28, #0x0                   	// #0
  4174b4:	ldr	x1, [sp, #168]
  4174b8:	ldr	x0, [x22]
  4174bc:	ldr	w1, [x1, x28, lsl #2]
  4174c0:	bl	431d88 <ferror@plt+0x2f508>
  4174c4:	mov	x21, x0
  4174c8:	ldr	x2, [x22]
  4174cc:	lsr	x25, x0, #32
  4174d0:	mov	w1, #0x80000000            	// #-2147483648
  4174d4:	ldr	w0, [x2, #36]
  4174d8:	cbz	w0, 4174ec <ferror@plt+0x14c6c>
  4174dc:	sub	w0, w0, #0x1
  4174e0:	ldr	x1, [x2, #24]
  4174e4:	sbfiz	x0, x0, #5, #32
  4174e8:	ldr	w1, [x1, x0]
  4174ec:	cmp	w21, w1
  4174f0:	b.cc	4176c4 <ferror@plt+0x14e44>  // b.lo, b.ul, b.last
  4174f4:	cmp	w21, w25
  4174f8:	b.ne	4179f4 <ferror@plt+0x15174>  // b.any
  4174fc:	add	x8, sp, #0xe0
  417500:	mov	w0, w21
  417504:	mov	w2, #0x1                   	// #1
  417508:	mov	w1, #0x0                   	// #0
  41750c:	bl	414130 <ferror@plt+0x118b0>
  417510:	mov	w0, w25
  417514:	mov	w2, #0x2                   	// #2
  417518:	ldp	w27, w24, [sp, #232]
  41751c:	add	x8, sp, #0x100
  417520:	mov	w1, #0x0                   	// #0
  417524:	ldr	x26, [sp, #224]
  417528:	bl	414130 <ferror@plt+0x118b0>
  41752c:	ldr	x0, [sp, #256]
  417530:	ldr	w2, [sp, #268]
  417534:	cmp	x26, x0
  417538:	b.ne	417968 <ferror@plt+0x150e8>  // b.any
  41753c:	ldr	w0, [sp, #264]
  417540:	cmp	w27, w0
  417544:	b.ne	41797c <ferror@plt+0x150fc>  // b.any
  417548:	str	w2, [sp, #112]
  41754c:	cmp	w24, w2
  417550:	b.gt	417990 <ferror@plt+0x15110>
  417554:	mov	w1, w27
  417558:	mov	x0, x26
  41755c:	bl	415540 <ferror@plt+0x12cc0>
  417560:	mov	x4, x1
  417564:	cbz	x0, 4179a4 <ferror@plt+0x15124>
  417568:	ldr	w2, [sp, #112]
  41756c:	sub	w3, w24, #0x1
  417570:	sub	w2, w2, w24
  417574:	sxtw	x5, w3
  417578:	add	w2, w2, #0x1
  41757c:	sxtw	x1, w2
  417580:	add	x6, x1, x5
  417584:	cmp	x4, x6
  417588:	b.cc	4179b8 <ferror@plt+0x15138>  // b.lo, b.ul, b.last
  41758c:	tbnz	w3, #31, 417a74 <ferror@plt+0x151f4>
  417590:	cmp	w3, w4
  417594:	b.ge	417a5c <ferror@plt+0x151dc>  // b.tcont
  417598:	add	w3, w2, w3
  41759c:	cmp	w4, w3
  4175a0:	b.lt	417ab0 <ferror@plt+0x15230>  // b.tstop
  4175a4:	add	x0, x0, x5
  4175a8:	str	w2, [sp, #112]
  4175ac:	bl	45cbe8 <_obstack_memory_used@@Base+0x2c0>
  4175b0:	mov	x5, x0
  4175b4:	ldr	w2, [sp, #112]
  4175b8:	cbz	x20, 417920 <ferror@plt+0x150a0>
  4175bc:	ldp	w0, w3, [x20]
  4175c0:	add	w8, w3, #0x1
  4175c4:	ubfx	x0, x0, #0, #31
  4175c8:	mov	w1, w8
  4175cc:	cmp	w0, w3
  4175d0:	b.eq	4176ec <ferror@plt+0x14e6c>  // b.none
  4175d4:	mov	x4, #0x8                   	// #8
  4175d8:	add	x4, x4, w3, uxtw #4
  4175dc:	add	x3, sp, #0xb0
  4175e0:	add	x6, x20, x4
  4175e4:	ldr	x0, [x22]
  4175e8:	str	w1, [x20, #4]
  4175ec:	str	w2, [x20, x4]
  4175f0:	mov	w1, w21
  4175f4:	str	x5, [x6, #8]
  4175f8:	mov	w2, #0x1                   	// #1
  4175fc:	bl	432b40 <ferror@plt+0x302c0>
  417600:	ldr	x0, [x22]
  417604:	add	x3, sp, #0xb8
  417608:	mov	w1, w25
  41760c:	mov	w2, #0x1                   	// #1
  417610:	bl	432b40 <ferror@plt+0x302c0>
  417614:	ldr	x0, [sp, #176]
  417618:	cbz	x0, 417954 <ferror@plt+0x150d4>
  41761c:	ldr	x1, [sp, #184]
  417620:	cbz	x1, 417954 <ferror@plt+0x150d4>
  417624:	cmp	x0, x1
  417628:	ldr	x0, [x0, #8]
  41762c:	b.eq	41763c <ferror@plt+0x14dbc>  // b.none
  417630:	ldr	x2, [x1, #8]
  417634:	cmp	x2, x0
  417638:	b.ne	4179e0 <ferror@plt+0x15160>  // b.any
  41763c:	cmp	x26, x0
  417640:	b.ne	4179cc <ferror@plt+0x1514c>  // b.any
  417644:	ldr	x0, [x22]
  417648:	mov	w2, w27
  41764c:	mov	w3, w24
  417650:	bl	431a00 <ferror@plt+0x2f180>
  417654:	mov	w1, w0
  417658:	ldr	x2, [x22]
  41765c:	add	x0, sp, #0xd0
  417660:	bl	41dd90 <ferror@plt+0x1b510>
  417664:	cbz	x19, 417868 <ferror@plt+0x14fe8>
  417668:	ldp	w0, w21, [x19]
  41766c:	add	w24, w21, #0x1
  417670:	ubfx	x0, x0, #0, #31
  417674:	mov	w1, w24
  417678:	cmp	w0, w21
  41767c:	b.eq	417748 <ferror@plt+0x14ec8>  // b.none
  417680:	mov	x0, #0x8                   	// #8
  417684:	add	x28, x28, #0x1
  417688:	add	x21, x0, w21, uxtw #4
  41768c:	ldr	w0, [sp, #164]
  417690:	add	x2, x19, x21
  417694:	ldp	x4, x3, [sp, #208]
  417698:	str	w1, [x19, #4]
  41769c:	str	x4, [x19, x21]
  4176a0:	cmp	w0, w28
  4176a4:	str	x3, [x2, #8]
  4176a8:	b.gt	4174b4 <ferror@plt+0x14c34>
  4176ac:	sxtw	x21, w0
  4176b0:	add	x1, x20, #0x8
  4176b4:	add	x2, x19, #0x8
  4176b8:	ldp	x25, x26, [sp, #64]
  4176bc:	ldp	x27, x28, [sp, #80]
  4176c0:	b	417310 <ferror@plt+0x14a90>
  4176c4:	mov	w0, #0x5fffffff            	// #1610612735
  4176c8:	cmp	w21, w0
  4176cc:	b.hi	417a08 <ferror@plt+0x15188>  // b.pmore
  4176d0:	cmp	w25, w0
  4176d4:	b.ls	4174fc <ferror@plt+0x14c7c>  // b.plast
  4176d8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4176dc:	add	x21, x21, #0x430
  4176e0:	ldp	x25, x26, [sp, #64]
  4176e4:	ldp	x27, x28, [sp, #80]
  4176e8:	b	417328 <ferror@plt+0x14aa8>
  4176ec:	ldrsb	w0, [x20, #3]
  4176f0:	tbnz	w0, #31, 417784 <ferror@plt+0x14f04>
  4176f4:	mov	w0, w3
  4176f8:	str	x5, [sp, #144]
  4176fc:	str	w2, [sp, #152]
  417700:	bl	412508 <ferror@plt+0xfc88>
  417704:	ldr	w3, [x20, #4]
  417708:	mov	w4, w0
  41770c:	mov	x0, x20
  417710:	str	w4, [sp, #112]
  417714:	ubfiz	x1, x4, #4, #32
  417718:	str	w3, [sp, #136]
  41771c:	add	x1, x1, #0x8
  417720:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  417724:	mov	x20, x0
  417728:	ldr	w3, [sp, #136]
  41772c:	ldr	w4, [sp, #112]
  417730:	ldr	w2, [sp, #152]
  417734:	add	w1, w3, #0x1
  417738:	and	w4, w4, #0x7fffffff
  41773c:	stp	w4, w3, [x0]
  417740:	ldr	x5, [sp, #144]
  417744:	b	4175d4 <ferror@plt+0x14d54>
  417748:	ldrsb	w0, [x19, #3]
  41774c:	tbnz	w0, #31, 417808 <ferror@plt+0x14f88>
  417750:	mov	w0, w21
  417754:	bl	412508 <ferror@plt+0xfc88>
  417758:	mov	w24, w0
  41775c:	ldr	w21, [x19, #4]
  417760:	mov	x0, x19
  417764:	ubfiz	x1, x24, #4, #32
  417768:	and	w24, w24, #0x7fffffff
  41776c:	add	x1, x1, #0x8
  417770:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  417774:	add	w1, w21, #0x1
  417778:	mov	x19, x0
  41777c:	stp	w24, w21, [x0]
  417780:	b	417680 <ferror@plt+0x14e00>
  417784:	cmp	w8, #0x4
  417788:	mov	w4, #0x4                   	// #4
  41778c:	csel	w4, w8, w4, cs  // cs = hs, nlast
  417790:	mov	x0, #0x0                   	// #0
  417794:	str	w4, [sp, #112]
  417798:	ubfiz	x1, x4, #4, #32
  41779c:	str	w8, [sp, #136]
  4177a0:	add	x1, x1, #0x8
  4177a4:	str	x5, [sp, #144]
  4177a8:	stp	w2, w3, [sp, #152]
  4177ac:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4177b0:	ldr	w4, [sp, #112]
  4177b4:	add	x1, x20, #0x8
  4177b8:	ldp	w2, w3, [sp, #152]
  4177bc:	and	x6, x4, #0x7fffffff
  4177c0:	mov	x4, x0
  4177c4:	ldr	w8, [sp, #136]
  4177c8:	ldr	x5, [sp, #144]
  4177cc:	str	x6, [x4], #8
  4177d0:	cbz	w3, 4177f8 <ferror@plt+0x14f78>
  4177d4:	sub	w6, w3, #0x1
  4177d8:	mov	x7, #0x18                  	// #24
  4177dc:	add	x6, x7, w6, uxtw #4
  4177e0:	add	x20, x20, x6
  4177e4:	nop
  4177e8:	ldp	x6, x7, [x1], #16
  4177ec:	stp	x6, x7, [x4], #16
  4177f0:	cmp	x1, x20
  4177f4:	b.ne	4177e8 <ferror@plt+0x14f68>  // b.any
  4177f8:	mov	w1, w8
  4177fc:	mov	x20, x0
  417800:	str	w3, [x0, #4]
  417804:	b	4175d4 <ferror@plt+0x14d54>
  417808:	cmp	w24, #0x4
  41780c:	mov	w25, #0x4                   	// #4
  417810:	csel	w25, w24, w25, cs  // cs = hs, nlast
  417814:	mov	x0, #0x0                   	// #0
  417818:	add	x19, x19, #0x8
  41781c:	ubfiz	x1, x25, #4, #32
  417820:	and	x25, x25, #0x7fffffff
  417824:	add	x1, x1, #0x8
  417828:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41782c:	mov	x1, x0
  417830:	str	x25, [x1], #8
  417834:	cbz	w21, 417858 <ferror@plt+0x14fd8>
  417838:	sub	w4, w21, #0x1
  41783c:	mov	x2, #0x18                  	// #24
  417840:	add	x4, x2, w4, uxtw #4
  417844:	add	x4, x0, x4
  417848:	ldp	x2, x3, [x19], #16
  41784c:	stp	x2, x3, [x1], #16
  417850:	cmp	x1, x4
  417854:	b.ne	417848 <ferror@plt+0x14fc8>  // b.any
  417858:	mov	w1, w24
  41785c:	mov	x19, x0
  417860:	str	w21, [x0, #4]
  417864:	b	417680 <ferror@plt+0x14e00>
  417868:	mov	x1, #0x48                  	// #72
  41786c:	mov	x0, #0x0                   	// #0
  417870:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  417874:	mov	x19, x0
  417878:	mov	w21, #0x0                   	// #0
  41787c:	mov	x0, #0x4                   	// #4
  417880:	add	w1, w21, #0x1
  417884:	str	x0, [x19]
  417888:	b	417680 <ferror@plt+0x14e00>
  41788c:	str	wzr, [x19, #4]
  417890:	b	41733c <ferror@plt+0x14abc>
  417894:	str	wzr, [x20, #4]
  417898:	b	417378 <ferror@plt+0x14af8>
  41789c:	ldr	w0, [sp, #108]
  4178a0:	ldr	x2, [sp, #192]
  4178a4:	sbfiz	x4, x0, #3, #32
  4178a8:	ldr	w1, [sp, #116]
  4178ac:	ldr	w3, [sp, #128]
  4178b0:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4178b4:	sbfiz	x5, x1, #3, #32
  4178b8:	ldr	w1, [x2, x4]
  4178bc:	ldr	x0, [x0, #1888]
  4178c0:	add	x6, x2, w3, sxtw #3
  4178c4:	ldr	w19, [x2, x5]
  4178c8:	ldr	w22, [x6, #4]
  4178cc:	bl	431e38 <ferror@plt+0x2f5b8>
  4178d0:	mov	w20, w0
  4178d4:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4178d8:	mov	w1, w19
  4178dc:	ldr	x0, [x0, #1888]
  4178e0:	bl	431d88 <ferror@plt+0x2f508>
  4178e4:	mov	x19, x0
  4178e8:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4178ec:	mov	w1, w22
  4178f0:	ldr	x0, [x0, #1888]
  4178f4:	bl	431d88 <ferror@plt+0x2f508>
  4178f8:	mov	x2, x0
  4178fc:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  417900:	mov	w1, w20
  417904:	bfxil	x2, x19, #0, #32
  417908:	mov	x3, #0x0                   	// #0
  41790c:	ldr	x0, [x0, #1888]
  417910:	bl	431b68 <ferror@plt+0x2f2e8>
  417914:	ldr	x1, [sp, #120]
  417918:	str	w0, [x1]
  41791c:	b	417288 <ferror@plt+0x14a08>
  417920:	mov	x1, #0x48                  	// #72
  417924:	mov	x0, #0x0                   	// #0
  417928:	str	w2, [sp, #112]
  41792c:	str	x5, [sp, #136]
  417930:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  417934:	mov	x20, x0
  417938:	mov	w3, #0x0                   	// #0
  41793c:	mov	x0, #0x4                   	// #4
  417940:	ldr	w2, [sp, #112]
  417944:	add	w1, w3, #0x1
  417948:	str	x0, [x20]
  41794c:	ldr	x5, [sp, #136]
  417950:	b	4175d4 <ferror@plt+0x14d54>
  417954:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417958:	add	x21, x21, #0x390
  41795c:	ldp	x25, x26, [sp, #64]
  417960:	ldp	x27, x28, [sp, #80]
  417964:	b	417328 <ferror@plt+0x14aa8>
  417968:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41796c:	add	x21, x21, #0x468
  417970:	ldp	x25, x26, [sp, #64]
  417974:	ldp	x27, x28, [sp, #80]
  417978:	b	417328 <ferror@plt+0x14aa8>
  41797c:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417980:	add	x21, x21, #0x490
  417984:	ldp	x25, x26, [sp, #64]
  417988:	ldp	x27, x28, [sp, #80]
  41798c:	b	417328 <ferror@plt+0x14aa8>
  417990:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417994:	add	x21, x21, #0x4b8
  417998:	ldp	x25, x26, [sp, #64]
  41799c:	ldp	x27, x28, [sp, #80]
  4179a0:	b	417328 <ferror@plt+0x14aa8>
  4179a4:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4179a8:	add	x21, x21, #0x4d8
  4179ac:	ldp	x25, x26, [sp, #64]
  4179b0:	ldp	x27, x28, [sp, #80]
  4179b4:	b	417328 <ferror@plt+0x14aa8>
  4179b8:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4179bc:	add	x21, x21, #0x378
  4179c0:	ldp	x25, x26, [sp, #64]
  4179c4:	ldp	x27, x28, [sp, #80]
  4179c8:	b	417328 <ferror@plt+0x14aa8>
  4179cc:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4179d0:	add	x21, x21, #0x4f8
  4179d4:	ldp	x25, x26, [sp, #64]
  4179d8:	ldp	x27, x28, [sp, #80]
  4179dc:	b	417328 <ferror@plt+0x14aa8>
  4179e0:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4179e4:	add	x21, x21, #0x3b0
  4179e8:	ldp	x25, x26, [sp, #64]
  4179ec:	ldp	x27, x28, [sp, #80]
  4179f0:	b	417328 <ferror@plt+0x14aa8>
  4179f4:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4179f8:	add	x21, x21, #0x3e8
  4179fc:	ldp	x25, x26, [sp, #64]
  417a00:	ldp	x27, x28, [sp, #80]
  417a04:	b	417328 <ferror@plt+0x14aa8>
  417a08:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417a0c:	add	x21, x21, #0x3f8
  417a10:	ldp	x25, x26, [sp, #64]
  417a14:	ldp	x27, x28, [sp, #80]
  417a18:	b	417328 <ferror@plt+0x14aa8>
  417a1c:	add	x1, x20, #0x8
  417a20:	mov	x19, #0x0                   	// #0
  417a24:	mov	x2, #0x0                   	// #0
  417a28:	b	417310 <ferror@plt+0x14a90>
  417a2c:	ubfiz	x1, x21, #4, #32
  417a30:	and	w19, w0, #0x7fffffff
  417a34:	add	x1, x1, #0x8
  417a38:	b	417458 <ferror@plt+0x14bd8>
  417a3c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417a40:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417a44:	add	x2, x2, #0x5e0
  417a48:	add	x0, x0, #0xc98
  417a4c:	mov	w1, #0x551                 	// #1361
  417a50:	stp	x25, x26, [sp, #64]
  417a54:	stp	x27, x28, [sp, #80]
  417a58:	bl	4028b0 <ferror@plt+0x30>
  417a5c:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417a60:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417a64:	add	x2, x2, #0x848
  417a68:	add	x0, x0, #0x850
  417a6c:	mov	w1, #0x45                  	// #69
  417a70:	bl	4028b0 <ferror@plt+0x30>
  417a74:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417a78:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417a7c:	add	x2, x2, #0x848
  417a80:	add	x0, x0, #0x850
  417a84:	mov	w1, #0x44                  	// #68
  417a88:	bl	4028b0 <ferror@plt+0x30>
  417a8c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417a90:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417a94:	add	x2, x2, #0x5c0
  417a98:	add	x0, x0, #0xc98
  417a9c:	mov	w1, #0x5fa                 	// #1530
  417aa0:	stp	x21, x22, [sp, #32]
  417aa4:	stp	x25, x26, [sp, #64]
  417aa8:	stp	x27, x28, [sp, #80]
  417aac:	bl	4028b0 <ferror@plt+0x30>
  417ab0:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417ab4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417ab8:	add	x2, x2, #0x848
  417abc:	add	x0, x0, #0x850
  417ac0:	mov	w1, #0x47                  	// #71
  417ac4:	bl	4028b0 <ferror@plt+0x30>
  417ac8:	stp	x29, x30, [sp, #-64]!
  417acc:	cmp	w1, #0x1
  417ad0:	mov	x29, sp
  417ad4:	stp	x19, x20, [sp, #16]
  417ad8:	stp	x21, x22, [sp, #32]
  417adc:	stp	x23, x24, [sp, #48]
  417ae0:	b.le	417c94 <ferror@plt+0x15414>
  417ae4:	mov	x23, x2
  417ae8:	cbz	x2, 417c7c <ferror@plt+0x153fc>
  417aec:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  417af0:	mov	w19, w1
  417af4:	mov	x24, x0
  417af8:	ldr	w1, [x23]
  417afc:	ldr	x0, [x20, #1888]
  417b00:	mov	x3, #0x0                   	// #0
  417b04:	mov	w2, #0x1                   	// #1
  417b08:	bl	432b40 <ferror@plt+0x302c0>
  417b0c:	mov	w1, w0
  417b10:	ldr	x0, [x20, #1888]
  417b14:	bl	431d88 <ferror@plt+0x2f508>
  417b18:	mov	x22, x0
  417b1c:	mov	x3, #0x1                   	// #1
  417b20:	mov	x2, #0x0                   	// #0
  417b24:	mov	x1, #0x0                   	// #0
  417b28:	mov	x0, #0x10                  	// #16
  417b2c:	bl	4043c0 <ferror@plt+0x1b40>
  417b30:	mov	x20, x0
  417b34:	sbfiz	x0, x19, #2, #32
  417b38:	mov	x3, #0x0                   	// #0
  417b3c:	mov	x2, #0x0                   	// #0
  417b40:	mov	x1, #0x0                   	// #0
  417b44:	str	w19, [x20]
  417b48:	sub	w19, w19, #0x1
  417b4c:	add	x19, x19, #0x1
  417b50:	mov	w21, w22
  417b54:	bl	4043c0 <ferror@plt+0x1b40>
  417b58:	str	x0, [x20, #8]
  417b5c:	lsl	x2, x19, #2
  417b60:	mov	x1, x23
  417b64:	bl	402220 <memcpy@plt>
  417b68:	ldr	x19, [x24]
  417b6c:	ldp	x2, x1, [x19, #8]
  417b70:	add	x0, x2, x2, lsl #1
  417b74:	cmp	x0, x1, lsl #2
  417b78:	b.ls	417c6c <ferror@plt+0x153ec>  // b.plast
  417b7c:	ldr	w0, [x19, #40]
  417b80:	adrp	x4, 46d000 <_obstack_memory_used@@Base+0x106d8>
  417b84:	ldr	w1, [x19, #32]
  417b88:	add	x4, x4, #0xc80
  417b8c:	ldr	x3, [x19]
  417b90:	lsl	x0, x0, #4
  417b94:	add	x7, x4, x0
  417b98:	add	w1, w1, #0x1
  417b9c:	str	w1, [x19, #32]
  417ba0:	ldr	w1, [x7, #4]
  417ba4:	ldr	w5, [x4, x0]
  417ba8:	ldr	w9, [x7, #12]
  417bac:	umull	x1, w22, w1
  417bb0:	lsr	x0, x1, #32
  417bb4:	sub	w1, w22, w0
  417bb8:	add	w1, w0, w1, lsr #1
  417bbc:	lsr	w1, w1, w9
  417bc0:	msub	w1, w1, w5, w22
  417bc4:	ubfiz	x8, x1, #4, #32
  417bc8:	add	x6, x3, x8
  417bcc:	ldr	w8, [x3, x8]
  417bd0:	cbz	w8, 417c44 <ferror@plt+0x153c4>
  417bd4:	cmp	w22, w8
  417bd8:	b.eq	417c54 <ferror@plt+0x153d4>  // b.none
  417bdc:	ldr	w0, [x7, #8]
  417be0:	add	w4, w22, #0x1
  417be4:	sub	w7, w5, #0x2
  417be8:	ldr	w5, [x19, #36]
  417bec:	add	w5, w5, #0x1
  417bf0:	umull	x0, w22, w0
  417bf4:	lsr	x6, x0, #32
  417bf8:	sub	w0, w22, w6
  417bfc:	add	w0, w6, w0, lsr #1
  417c00:	lsr	w0, w0, w9
  417c04:	msub	w4, w0, w7, w4
  417c08:	b	417c18 <ferror@plt+0x15398>
  417c0c:	add	w5, w5, #0x1
  417c10:	cmp	w21, w0
  417c14:	b.eq	417c54 <ferror@plt+0x153d4>  // b.none
  417c18:	add	w0, w1, w4
  417c1c:	str	w5, [x19, #36]
  417c20:	mov	x1, x0
  417c24:	cmp	x2, w0, uxtw
  417c28:	b.hi	417c34 <ferror@plt+0x153b4>  // b.pmore
  417c2c:	sub	w0, w0, w2
  417c30:	mov	x1, x0
  417c34:	lsl	x0, x0, #4
  417c38:	add	x6, x3, x0
  417c3c:	ldr	w0, [x3, x0]
  417c40:	cbnz	w0, 417c0c <ferror@plt+0x1538c>
  417c44:	ldr	x0, [x19, #16]
  417c48:	add	x0, x0, #0x1
  417c4c:	str	x0, [x19, #16]
  417c50:	str	w22, [x6]
  417c54:	ldp	x21, x22, [sp, #32]
  417c58:	ldp	x23, x24, [sp, #48]
  417c5c:	str	x20, [x6, #8]
  417c60:	ldp	x19, x20, [sp, #16]
  417c64:	ldp	x29, x30, [sp], #64
  417c68:	ret
  417c6c:	mov	x0, x19
  417c70:	bl	417ce0 <ferror@plt+0x15460>
  417c74:	ldr	x2, [x19, #8]
  417c78:	b	417b7c <ferror@plt+0x152fc>
  417c7c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417c80:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417c84:	add	x2, x2, #0x600
  417c88:	add	x0, x0, #0xc98
  417c8c:	mov	w1, #0x4f7                 	// #1271
  417c90:	bl	4028b0 <ferror@plt+0x30>
  417c94:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  417c98:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417c9c:	add	x2, x2, #0x600
  417ca0:	add	x0, x0, #0xc98
  417ca4:	mov	w1, #0x4f6                 	// #1270
  417ca8:	bl	4028b0 <ferror@plt+0x30>
  417cac:	nop
  417cb0:	ldr	x1, [x0, #8]
  417cb4:	sub	x2, x1, #0x1
  417cb8:	cbz	x1, 417ccc <ferror@plt+0x1544c>
  417cbc:	nop
  417cc0:	sub	x2, x2, #0x1
  417cc4:	cmp	x1, x2
  417cc8:	b.hi	417cc0 <ferror@plt+0x15440>  // b.pmore
  417ccc:	ldrb	w1, [x0, #44]
  417cd0:	ldr	x0, [x0]
  417cd4:	cbnz	w1, 417cdc <ferror@plt+0x1545c>
  417cd8:	b	402640 <free@plt>
  417cdc:	b	404420 <ferror@plt+0x1ba0>
  417ce0:	stp	x29, x30, [sp, #-64]!
  417ce4:	mov	x29, sp
  417ce8:	stp	x19, x20, [sp, #16]
  417cec:	mov	x20, x0
  417cf0:	ldp	x1, x0, [x0, #16]
  417cf4:	stp	x21, x22, [sp, #32]
  417cf8:	ldp	x22, x19, [x20]
  417cfc:	str	x23, [sp, #48]
  417d00:	ldr	w23, [x20, #40]
  417d04:	sub	x1, x1, x0
  417d08:	lsl	x0, x1, #1
  417d0c:	cmp	x19, x1, lsl #1
  417d10:	add	x21, x22, x19, lsl #4
  417d14:	b.cc	417e48 <ferror@plt+0x155c8>  // b.lo, b.ul, b.last
  417d18:	lsl	w1, w1, #3
  417d1c:	mov	x2, #0x20                  	// #32
  417d20:	cmp	x1, x2
  417d24:	csel	x1, x1, x2, cs  // cs = hs, nlast
  417d28:	cmp	x19, x1
  417d2c:	b.hi	417e48 <ferror@plt+0x155c8>  // b.pmore
  417d30:	ldrb	w0, [x20, #44]
  417d34:	cbnz	w0, 417e68 <ferror@plt+0x155e8>
  417d38:	mov	x0, x19
  417d3c:	mov	x1, #0x10                  	// #16
  417d40:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  417d44:	mov	x1, x0
  417d48:	add	x2, x0, x19, lsl #4
  417d4c:	cbz	x19, 417d5c <ferror@plt+0x154dc>
  417d50:	str	wzr, [x1], #16
  417d54:	cmp	x1, x2
  417d58:	b.ne	417d50 <ferror@plt+0x154d0>  // b.any
  417d5c:	ldp	x1, x2, [x20, #16]
  417d60:	ubfiz	x4, x23, #4, #32
  417d64:	adrp	x7, 46d000 <_obstack_memory_used@@Base+0x106d8>
  417d68:	add	x7, x7, #0xc80
  417d6c:	mov	x3, x22
  417d70:	add	x7, x7, x4
  417d74:	stp	x0, x19, [x20]
  417d78:	sub	x1, x1, x2
  417d7c:	stp	x1, xzr, [x20, #16]
  417d80:	str	w23, [x20, #40]
  417d84:	b	417d94 <ferror@plt+0x15514>
  417d88:	add	x3, x3, #0x10
  417d8c:	cmp	x21, x3
  417d90:	b.ls	417e28 <ferror@plt+0x155a8>  // b.plast
  417d94:	ldr	w2, [x3]
  417d98:	cbz	w2, 417d88 <ferror@plt+0x15508>
  417d9c:	ldp	w5, w1, [x7]
  417da0:	ldr	w8, [x7, #12]
  417da4:	umull	x1, w2, w1
  417da8:	lsr	x4, x1, #32
  417dac:	sub	w1, w2, w4
  417db0:	add	w1, w4, w1, lsr #1
  417db4:	lsr	w1, w1, w8
  417db8:	msub	w1, w1, w5, w2
  417dbc:	ubfiz	x4, x1, #4, #32
  417dc0:	add	x6, x0, x4
  417dc4:	ldr	w4, [x0, x4]
  417dc8:	cbz	w4, 417e14 <ferror@plt+0x15594>
  417dcc:	ldr	w4, [x7, #8]
  417dd0:	add	w6, w2, #0x1
  417dd4:	sub	w5, w5, #0x2
  417dd8:	umull	x4, w2, w4
  417ddc:	lsr	x4, x4, #32
  417de0:	sub	w2, w2, w4
  417de4:	add	w2, w4, w2, lsr #1
  417de8:	lsr	w2, w2, w8
  417dec:	msub	w2, w2, w5, w6
  417df0:	add	w4, w1, w2
  417df4:	mov	x1, x4
  417df8:	cmp	x19, w4, uxtw
  417dfc:	b.hi	417e98 <ferror@plt+0x15618>  // b.pmore
  417e00:	sub	w1, w4, w19
  417e04:	ubfiz	x4, x1, #4, #32
  417e08:	add	x6, x0, x4
  417e0c:	ldr	w4, [x0, x4]
  417e10:	cbnz	w4, 417df0 <ferror@plt+0x15570>
  417e14:	ldp	x4, x5, [x3]
  417e18:	stp	x4, x5, [x6]
  417e1c:	add	x3, x3, #0x10
  417e20:	cmp	x21, x3
  417e24:	b.hi	417d94 <ferror@plt+0x15514>  // b.pmore
  417e28:	ldrb	w0, [x20, #44]
  417e2c:	cbnz	w0, 417eb4 <ferror@plt+0x15634>
  417e30:	mov	x0, x22
  417e34:	ldp	x19, x20, [sp, #16]
  417e38:	ldp	x21, x22, [sp, #32]
  417e3c:	ldr	x23, [sp, #48]
  417e40:	ldp	x29, x30, [sp], #64
  417e44:	b	402640 <free@plt>
  417e48:	bl	403f18 <ferror@plt+0x1698>
  417e4c:	mov	w23, w0
  417e50:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  417e54:	add	x1, x1, #0xc80
  417e58:	ubfiz	x0, x23, #4, #32
  417e5c:	ldr	w19, [x1, x0]
  417e60:	ldrb	w0, [x20, #44]
  417e64:	cbz	w0, 417d38 <ferror@plt+0x154b8>
  417e68:	lsl	x0, x19, #4
  417e6c:	mov	x3, #0x0                   	// #0
  417e70:	mov	x2, #0x0                   	// #0
  417e74:	mov	x1, #0x0                   	// #0
  417e78:	bl	4043e8 <ferror@plt+0x1b68>
  417e7c:	cbnz	x0, 417d44 <ferror@plt+0x154c4>
  417e80:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417e84:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  417e88:	add	x2, x2, #0xc48
  417e8c:	add	x0, x0, #0xc58
  417e90:	mov	w1, #0x2b5                 	// #693
  417e94:	bl	4028b0 <ferror@plt+0x30>
  417e98:	lsl	x4, x4, #4
  417e9c:	add	x6, x0, x4
  417ea0:	ldr	w4, [x0, x4]
  417ea4:	cbnz	w4, 417df0 <ferror@plt+0x15570>
  417ea8:	ldp	x4, x5, [x3]
  417eac:	stp	x4, x5, [x6]
  417eb0:	b	417e1c <ferror@plt+0x1559c>
  417eb4:	mov	x0, x22
  417eb8:	ldp	x19, x20, [sp, #16]
  417ebc:	ldp	x21, x22, [sp, #32]
  417ec0:	ldr	x23, [sp, #48]
  417ec4:	ldp	x29, x30, [sp], #64
  417ec8:	b	404420 <ferror@plt+0x1ba0>
  417ecc:	nop
  417ed0:	str	xzr, [x0]
  417ed4:	ret
  417ed8:	stp	x29, x30, [sp, #-32]!
  417edc:	mov	x29, sp
  417ee0:	stp	x19, x20, [sp, #16]
  417ee4:	ldr	x19, [x0]
  417ee8:	cbz	x19, 417f04 <ferror@plt+0x15684>
  417eec:	mov	x20, x0
  417ef0:	mov	x0, x19
  417ef4:	ldr	x19, [x19]
  417ef8:	bl	402640 <free@plt>
  417efc:	str	x19, [x20]
  417f00:	cbnz	x19, 417ef0 <ferror@plt+0x15670>
  417f04:	ldp	x19, x20, [sp, #16]
  417f08:	ldp	x29, x30, [sp], #32
  417f0c:	ret
  417f10:	cmp	x0, #0x10, lsl #12
  417f14:	b.ne	417f34 <ferror@plt+0x156b4>  // b.any
  417f18:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  417f1c:	ldr	x1, [x2, #1920]
  417f20:	cbz	x1, 417f34 <ferror@plt+0x156b4>
  417f24:	ldr	x0, [x1]
  417f28:	str	x0, [x2, #1920]
  417f2c:	mov	x0, x1
  417f30:	ret
  417f34:	b	45ca18 <_obstack_memory_used@@Base+0xf0>
  417f38:	ldr	x2, [x0]
  417f3c:	mov	x1, x0
  417f40:	sub	x2, x2, x0
  417f44:	cmp	x2, #0x10, lsl #12
  417f48:	b.ne	417f60 <ferror@plt+0x156e0>  // b.any
  417f4c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  417f50:	ldr	x2, [x0, #1920]
  417f54:	str	x2, [x1]
  417f58:	str	x1, [x0, #1920]
  417f5c:	ret
  417f60:	b	402640 <free@plt>
  417f64:	nop
  417f68:	stp	x29, x30, [sp, #-32]!
  417f6c:	mov	x29, sp
  417f70:	str	x19, [sp, #16]
  417f74:	eor	x19, x1, x0
  417f78:	blr	x2
  417f7c:	asr	w0, w0, #31
  417f80:	sxtw	x0, w0
  417f84:	and	x0, x0, x19
  417f88:	ldr	x19, [sp, #16]
  417f8c:	ldp	x29, x30, [sp], #32
  417f90:	ret
  417f94:	nop
  417f98:	stp	x29, x30, [sp, #-80]!
  417f9c:	mov	x29, sp
  417fa0:	stp	x19, x20, [sp, #16]
  417fa4:	mov	x19, x1
  417fa8:	mov	x1, x0
  417fac:	stp	x21, x22, [sp, #32]
  417fb0:	mov	x22, x0
  417fb4:	ldr	x2, [x19]
  417fb8:	stp	x23, x24, [sp, #48]
  417fbc:	ldr	x21, [x19, #24]
  417fc0:	add	x20, x0, x21
  417fc4:	mov	x0, x20
  417fc8:	bl	417f68 <ferror@plt+0x156e8>
  417fcc:	ldr	x1, [x19, #16]
  417fd0:	add	x21, x20, x21
  417fd4:	eor	x22, x22, x0
  417fd8:	eor	x20, x20, x0
  417fdc:	cmp	x1, #0x3
  417fe0:	b.ne	418018 <ferror@plt+0x15798>  // b.any
  417fe4:	ldr	x2, [x19]
  417fe8:	mov	x1, x20
  417fec:	mov	x0, x21
  417ff0:	bl	417f68 <ferror@plt+0x156e8>
  417ff4:	eor	x20, x20, x0
  417ff8:	ldr	x2, [x19]
  417ffc:	mov	x1, x22
  418000:	eor	x21, x21, x0
  418004:	mov	x0, x20
  418008:	bl	417f68 <ferror@plt+0x156e8>
  41800c:	eor	x20, x20, x0
  418010:	ldr	x1, [x19, #16]
  418014:	eor	x22, x22, x0
  418018:	cmp	x1, #0x3
  41801c:	ldr	x24, [x19, #24]
  418020:	b.ls	418158 <ferror@plt+0x158d8>  // b.plast
  418024:	ldr	x2, [x19]
  418028:	str	x25, [sp, #64]
  41802c:	add	x25, x21, x24
  418030:	cmp	x1, #0x5
  418034:	add	x24, x25, x24
  418038:	b.ne	41806c <ferror@plt+0x157ec>  // b.any
  41803c:	mov	x1, x25
  418040:	mov	x0, x24
  418044:	bl	417f68 <ferror@plt+0x156e8>
  418048:	eor	x24, x24, x0
  41804c:	ldr	x2, [x19]
  418050:	mov	x1, x21
  418054:	eor	x25, x25, x0
  418058:	mov	x0, x24
  41805c:	bl	417f68 <ferror@plt+0x156e8>
  418060:	eor	x24, x24, x0
  418064:	ldr	x2, [x19]
  418068:	eor	x21, x21, x0
  41806c:	mov	x1, x21
  418070:	mov	x0, x25
  418074:	bl	417f68 <ferror@plt+0x156e8>
  418078:	eor	x21, x21, x0
  41807c:	ldr	x1, [x19, #16]
  418080:	eor	x25, x25, x0
  418084:	cmp	x1, #0x5
  418088:	b.ne	4180bc <ferror@plt+0x1583c>  // b.any
  41808c:	ldr	x2, [x19]
  418090:	mov	x1, x22
  418094:	mov	x0, x25
  418098:	bl	417f68 <ferror@plt+0x156e8>
  41809c:	eor	x22, x22, x0
  4180a0:	ldr	x2, [x19]
  4180a4:	mov	x1, x20
  4180a8:	eor	x25, x25, x0
  4180ac:	mov	x0, x24
  4180b0:	bl	417f68 <ferror@plt+0x156e8>
  4180b4:	eor	x20, x20, x0
  4180b8:	eor	x24, x24, x0
  4180bc:	ldr	x2, [x19]
  4180c0:	mov	x1, x22
  4180c4:	mov	x0, x21
  4180c8:	bl	417f68 <ferror@plt+0x156e8>
  4180cc:	eor	x21, x21, x0
  4180d0:	ldr	x2, [x19]
  4180d4:	mov	x1, x20
  4180d8:	eor	x23, x0, x22
  4180dc:	mov	x0, x25
  4180e0:	bl	417f68 <ferror@plt+0x156e8>
  4180e4:	eor	x20, x0, x20
  4180e8:	ldr	x2, [x19]
  4180ec:	mov	x1, x20
  4180f0:	eor	x25, x0, x25
  4180f4:	mov	x0, x21
  4180f8:	bl	417f68 <ferror@plt+0x156e8>
  4180fc:	eor	x20, x20, x0
  418100:	ldr	x1, [x19, #24]
  418104:	eor	x21, x21, x0
  418108:	cmp	x1, #0x8
  41810c:	b.ne	418194 <ferror@plt+0x15914>  // b.any
  418110:	ldr	x0, [x19, #16]
  418114:	ldr	x3, [x20]
  418118:	cmp	x0, #0x5
  41811c:	ldr	x2, [x21]
  418120:	ldr	x4, [x23]
  418124:	ldr	x1, [x25]
  418128:	ldr	x0, [x19, #8]
  41812c:	b.ne	418138 <ferror@plt+0x158b8>  // b.any
  418130:	ldr	x5, [x24]
  418134:	str	x5, [x0, #32]
  418138:	stp	x4, x3, [x0]
  41813c:	stp	x2, x1, [x0, #16]
  418140:	ldr	x25, [sp, #64]
  418144:	ldp	x19, x20, [sp, #16]
  418148:	ldp	x21, x22, [sp, #32]
  41814c:	ldp	x23, x24, [sp, #48]
  418150:	ldp	x29, x30, [sp], #80
  418154:	ret
  418158:	cmp	x24, #0x8
  41815c:	b.ne	4181dc <ferror@plt+0x1595c>  // b.any
  418160:	cmp	x1, #0x3
  418164:	ldr	x2, [x22]
  418168:	ldr	x1, [x20]
  41816c:	ldr	x0, [x19, #8]
  418170:	b.ne	41817c <ferror@plt+0x158fc>  // b.any
  418174:	ldr	x3, [x21]
  418178:	str	x3, [x0, #16]
  41817c:	stp	x2, x1, [x0]
  418180:	ldp	x19, x20, [sp, #16]
  418184:	ldp	x21, x22, [sp, #32]
  418188:	ldp	x23, x24, [sp, #48]
  41818c:	ldp	x29, x30, [sp], #80
  418190:	ret
  418194:	cmp	x1, #0x4
  418198:	b.ne	418208 <ferror@plt+0x15988>  // b.any
  41819c:	ldr	x0, [x19, #16]
  4181a0:	ldr	s3, [x20]
  4181a4:	cmp	x0, #0x5
  4181a8:	ldr	s2, [x21]
  4181ac:	ldr	s0, [x23]
  4181b0:	ldr	s1, [x25]
  4181b4:	ldr	x0, [x19, #8]
  4181b8:	b.ne	4181c4 <ferror@plt+0x15944>  // b.any
  4181bc:	ldr	w1, [x24]
  4181c0:	str	w1, [x0, #16]
  4181c4:	mov	v0.s[1], v3.s[0]
  4181c8:	mov	v0.s[2], v2.s[0]
  4181cc:	mov	v0.s[3], v1.s[0]
  4181d0:	str	q0, [x0]
  4181d4:	ldr	x25, [sp, #64]
  4181d8:	b	418144 <ferror@plt+0x158c4>
  4181dc:	cmp	x24, #0x4
  4181e0:	b.ne	418344 <ferror@plt+0x15ac4>  // b.any
  4181e4:	cmp	x1, #0x3
  4181e8:	ldr	w2, [x22]
  4181ec:	ldr	w1, [x20]
  4181f0:	ldr	x0, [x19, #8]
  4181f4:	b.ne	418200 <ferror@plt+0x15980>  // b.any
  4181f8:	ldr	w3, [x21]
  4181fc:	str	w3, [x0, #8]
  418200:	stp	w2, w1, [x0]
  418204:	b	418144 <ferror@plt+0x158c4>
  418208:	cmp	x1, #0x7
  41820c:	sub	x12, x24, #0x8
  418210:	mov	x0, #0x8                   	// #8
  418214:	b.hi	418220 <ferror@plt+0x159a0>  // b.pmore
  418218:	b	418430 <ferror@plt+0x15bb0>
  41821c:	mov	x0, x9
  418220:	ldp	x8, x11, [x19, #8]
  418224:	add	x5, x0, x23
  418228:	add	x4, x0, x20
  41822c:	add	x3, x0, x21
  418230:	add	x2, x0, x25
  418234:	sub	x7, x0, #0x8
  418238:	lsl	x1, x1, #2
  41823c:	add	x9, x0, #0x8
  418240:	ldur	x10, [x5, #-8]
  418244:	add	x6, x8, x7
  418248:	cmp	x11, #0x5
  41824c:	ldur	x5, [x4, #-8]
  418250:	ldur	x4, [x3, #-8]
  418254:	ldur	x3, [x2, #-8]
  418258:	b.ne	418338 <ferror@plt+0x15ab8>  // b.any
  41825c:	ldr	x2, [x12, x0]
  418260:	str	x2, [x6, x1]
  418264:	str	x10, [x8, x7]
  418268:	ldr	x1, [x19, #24]
  41826c:	add	x2, x6, x1
  418270:	str	x5, [x6, x1]
  418274:	ldr	x1, [x19, #24]
  418278:	add	x5, x2, x1
  41827c:	str	x4, [x2, x1]
  418280:	ldr	x1, [x19, #24]
  418284:	str	x3, [x5, x1]
  418288:	ldr	x1, [x19, #24]
  41828c:	cmp	x1, x9
  418290:	b.cs	41821c <ferror@plt+0x1599c>  // b.hs, b.nlast
  418294:	cmp	x1, x0
  418298:	b.hi	4182dc <ferror@plt+0x15a5c>  // b.pmore
  41829c:	b	418330 <ferror@plt+0x15ab0>
  4182a0:	ldrb	w8, [x24, x0]
  4182a4:	strb	w8, [x2, x1]
  4182a8:	strb	w7, [x3, x0]
  4182ac:	add	x0, x0, #0x1
  4182b0:	ldr	x1, [x19, #24]
  4182b4:	add	x3, x2, x1
  4182b8:	strb	w6, [x2, x1]
  4182bc:	ldr	x1, [x19, #24]
  4182c0:	add	x2, x3, x1
  4182c4:	strb	w5, [x3, x1]
  4182c8:	ldr	x1, [x19, #24]
  4182cc:	strb	w4, [x2, x1]
  4182d0:	ldr	x1, [x19, #24]
  4182d4:	cmp	x0, x1
  4182d8:	b.cs	418330 <ferror@plt+0x15ab0>  // b.hs, b.nlast
  4182dc:	ldp	x3, x4, [x19, #8]
  4182e0:	lsl	x1, x1, #2
  4182e4:	ldrb	w7, [x23, x0]
  4182e8:	ldrb	w6, [x20, x0]
  4182ec:	ldrb	w5, [x21, x0]
  4182f0:	cmp	x4, #0x5
  4182f4:	add	x2, x3, x0
  4182f8:	ldrb	w4, [x25, x0]
  4182fc:	b.eq	4182a0 <ferror@plt+0x15a20>  // b.none
  418300:	strb	w7, [x3, x0]
  418304:	add	x0, x0, #0x1
  418308:	ldr	x1, [x19, #24]
  41830c:	add	x3, x2, x1
  418310:	strb	w6, [x2, x1]
  418314:	ldr	x1, [x19, #24]
  418318:	add	x2, x3, x1
  41831c:	strb	w5, [x3, x1]
  418320:	ldr	x1, [x19, #24]
  418324:	strb	w4, [x2, x1]
  418328:	ldr	x1, [x19, #24]
  41832c:	b	418294 <ferror@plt+0x15a14>
  418330:	ldr	x25, [sp, #64]
  418334:	b	418144 <ferror@plt+0x158c4>
  418338:	add	x9, x0, #0x8
  41833c:	str	x10, [x8, x7]
  418340:	b	418268 <ferror@plt+0x159e8>
  418344:	cmp	x24, #0x7
  418348:	mov	x0, #0x0                   	// #0
  41834c:	b.ls	4183ec <ferror@plt+0x15b6c>  // b.plast
  418350:	sub	x9, x22, #0x8
  418354:	sub	x8, x20, #0x8
  418358:	sub	x10, x21, #0x8
  41835c:	mov	x0, #0x8                   	// #8
  418360:	b	41838c <ferror@plt+0x15b0c>
  418364:	ldr	x7, [x10, x0]
  418368:	str	x7, [x1, x24]
  41836c:	str	x6, [x3, x2]
  418370:	ldr	x2, [x19, #24]
  418374:	str	x5, [x1, x2]
  418378:	ldr	x24, [x19, #24]
  41837c:	cmp	x24, x4
  418380:	b.cc	4183ec <ferror@plt+0x15b6c>  // b.lo, b.ul, b.last
  418384:	ldr	x1, [x19, #16]
  418388:	mov	x0, x4
  41838c:	ldr	x3, [x19, #8]
  418390:	sub	x2, x0, #0x8
  418394:	cmp	x1, #0x3
  418398:	lsl	x24, x24, #1
  41839c:	add	x4, x0, #0x8
  4183a0:	add	x1, x3, x2
  4183a4:	ldr	x6, [x9, x0]
  4183a8:	ldr	x5, [x8, x0]
  4183ac:	b.eq	418364 <ferror@plt+0x15ae4>  // b.none
  4183b0:	str	x6, [x3, x2]
  4183b4:	add	x4, x0, #0x8
  4183b8:	ldr	x2, [x19, #24]
  4183bc:	str	x5, [x1, x2]
  4183c0:	ldr	x24, [x19, #24]
  4183c4:	cmp	x4, x24
  4183c8:	b.ls	418384 <ferror@plt+0x15b04>  // b.plast
  4183cc:	b	4183ec <ferror@plt+0x15b6c>
  4183d0:	ldrb	w3, [x21, x0]
  4183d4:	strb	w3, [x2, x24]
  4183d8:	strb	w5, [x1, x0]
  4183dc:	add	x0, x0, #0x1
  4183e0:	ldr	x1, [x19, #24]
  4183e4:	strb	w4, [x2, x1]
  4183e8:	ldr	x24, [x19, #24]
  4183ec:	cmp	x0, x24
  4183f0:	b.cs	418144 <ferror@plt+0x158c4>  // b.hs, b.nlast
  4183f4:	ldp	x1, x3, [x19, #8]
  4183f8:	lsl	x24, x24, #1
  4183fc:	ldrb	w5, [x22, x0]
  418400:	ldrb	w4, [x20, x0]
  418404:	add	x2, x1, x0
  418408:	cmp	x3, #0x3
  41840c:	b.eq	4183d0 <ferror@plt+0x15b50>  // b.none
  418410:	strb	w5, [x1, x0]
  418414:	add	x0, x0, #0x1
  418418:	ldr	x1, [x19, #24]
  41841c:	strb	w4, [x2, x1]
  418420:	ldr	x24, [x19, #24]
  418424:	cmp	x24, x0
  418428:	b.hi	4183f4 <ferror@plt+0x15b74>  // b.pmore
  41842c:	b	418144 <ferror@plt+0x158c4>
  418430:	mov	x0, #0x0                   	// #0
  418434:	b	418294 <ferror@plt+0x15a14>
  418438:	stp	x29, x30, [sp, #-96]!
  41843c:	mov	x29, sp
  418440:	stp	x19, x20, [sp, #16]
  418444:	mov	x20, x2
  418448:	ldr	x2, [x1, #32]
  41844c:	stp	x21, x22, [sp, #32]
  418450:	mov	x22, x1
  418454:	stp	x23, x24, [sp, #48]
  418458:	cmp	x2, x20
  41845c:	mov	x23, x3
  418460:	b.cc	41847c <ferror@plt+0x15bfc>  // b.lo, b.ul, b.last
  418464:	stp	x3, x20, [x1, #8]
  418468:	ldp	x19, x20, [sp, #16]
  41846c:	ldp	x21, x22, [sp, #32]
  418470:	ldp	x23, x24, [sp, #48]
  418474:	ldp	x29, x30, [sp], #96
  418478:	b	417f98 <ferror@plt+0x15718>
  41847c:	stp	x25, x26, [sp, #64]
  418480:	lsr	x26, x20, #1
  418484:	cmp	x0, x3
  418488:	ldr	x25, [x1, #24]
  41848c:	str	x27, [sp, #80]
  418490:	csel	x19, x4, x0, eq  // eq = none
  418494:	mov	x21, x0
  418498:	sub	x2, x20, x26
  41849c:	mul	x25, x26, x25
  4184a0:	add	x24, x3, x25
  4184a4:	add	x27, x0, x25
  4184a8:	mov	x3, x24
  4184ac:	mov	x0, x27
  4184b0:	bl	418438 <ferror@plt+0x15bb8>
  4184b4:	mov	x2, x26
  4184b8:	mov	x1, x22
  4184bc:	mov	x0, x21
  4184c0:	mov	x4, x27
  4184c4:	mov	x3, x19
  4184c8:	bl	418438 <ferror@plt+0x15bb8>
  4184cc:	ldr	x2, [x22]
  4184d0:	mov	x0, x24
  4184d4:	ldr	x1, [x22, #24]
  4184d8:	sub	x1, x25, x1
  4184dc:	add	x1, x19, x1
  4184e0:	blr	x2
  4184e4:	tbz	w0, #31, 418568 <ferror@plt+0x15ce8>
  4184e8:	ldr	x0, [x22, #24]
  4184ec:	cmp	x0, #0x8
  4184f0:	madd	x20, x0, x20, x23
  4184f4:	b.eq	418504 <ferror@plt+0x15c84>  // b.none
  4184f8:	b	418590 <ferror@plt+0x15d10>
  4184fc:	cmp	x20, x24
  418500:	b.eq	418568 <ferror@plt+0x15ce8>  // b.none
  418504:	ldr	x2, [x22]
  418508:	mov	x1, x19
  41850c:	mov	x0, x24
  418510:	blr	x2
  418514:	asr	w0, w0, #31
  418518:	eor	x2, x24, x19
  41851c:	and	w1, w0, #0x8
  418520:	sxtw	x0, w0
  418524:	and	x2, x2, x0
  418528:	mvn	x0, x0
  41852c:	eor	x2, x19, x2
  418530:	and	x0, x0, #0x8
  418534:	add	x19, x19, x0
  418538:	add	x24, x24, w1, sxtw
  41853c:	ldr	x0, [x2]
  418540:	str	x0, [x23], #8
  418544:	cmp	x23, x24
  418548:	b.ne	4184fc <ferror@plt+0x15c7c>  // b.any
  41854c:	ldp	x19, x20, [sp, #16]
  418550:	ldp	x21, x22, [sp, #32]
  418554:	ldp	x23, x24, [sp, #48]
  418558:	ldp	x25, x26, [sp, #64]
  41855c:	ldr	x27, [sp, #80]
  418560:	ldp	x29, x30, [sp], #96
  418564:	ret
  418568:	sub	x2, x24, x23
  41856c:	mov	x1, x19
  418570:	mov	x0, x23
  418574:	ldp	x19, x20, [sp, #16]
  418578:	ldp	x21, x22, [sp, #32]
  41857c:	ldp	x23, x24, [sp, #48]
  418580:	ldp	x25, x26, [sp, #64]
  418584:	ldr	x27, [sp, #80]
  418588:	ldp	x29, x30, [sp], #96
  41858c:	b	402220 <memcpy@plt>
  418590:	cmp	x0, #0x4
  418594:	b.eq	4185a4 <ferror@plt+0x15d24>  // b.none
  418598:	b	4185fc <ferror@plt+0x15d7c>
  41859c:	cmp	x20, x24
  4185a0:	b.eq	418568 <ferror@plt+0x15ce8>  // b.none
  4185a4:	ldr	x2, [x22]
  4185a8:	mov	x1, x19
  4185ac:	mov	x0, x24
  4185b0:	blr	x2
  4185b4:	asr	w0, w0, #31
  4185b8:	eor	x1, x24, x19
  4185bc:	and	w2, w0, #0x4
  4185c0:	sxtw	x0, w0
  4185c4:	and	x1, x1, x0
  4185c8:	mvn	x0, x0
  4185cc:	eor	x1, x19, x1
  4185d0:	and	x0, x0, #0x4
  4185d4:	add	x19, x19, x0
  4185d8:	add	x24, x24, w2, sxtw
  4185dc:	ldr	w0, [x1]
  4185e0:	str	w0, [x23], #4
  4185e4:	cmp	x23, x24
  4185e8:	b.ne	41859c <ferror@plt+0x15d1c>  // b.any
  4185ec:	b	41854c <ferror@plt+0x15ccc>
  4185f0:	add	x19, x19, x1
  4185f4:	cmp	x20, x24
  4185f8:	b.eq	418568 <ferror@plt+0x15ce8>  // b.none
  4185fc:	ldr	x2, [x22]
  418600:	mov	x1, x19
  418604:	mov	x0, x24
  418608:	blr	x2
  41860c:	asr	w21, w0, #31
  418610:	ldr	x2, [x22, #24]
  418614:	sxtw	x21, w21
  418618:	eor	x1, x24, x19
  41861c:	mov	x0, x23
  418620:	and	x1, x1, x21
  418624:	eor	x1, x19, x1
  418628:	bl	402220 <memcpy@plt>
  41862c:	ldr	x2, [x22, #24]
  418630:	mvn	x1, x21
  418634:	and	x21, x21, x2
  418638:	add	x23, x0, x2
  41863c:	add	x24, x24, x21
  418640:	and	x1, x1, x2
  418644:	cmp	x23, x24
  418648:	b.ne	4185f0 <ferror@plt+0x15d70>  // b.any
  41864c:	b	41854c <ferror@plt+0x15ccc>
  418650:	cmp	x1, #0x1
  418654:	b.ls	418700 <ferror@plt+0x15e80>  // b.plast
  418658:	stp	x29, x30, [sp, #-400]!
  41865c:	mov	x29, sp
  418660:	stp	x19, x20, [sp, #16]
  418664:	mov	x20, x1
  418668:	mov	x19, x0
  41866c:	stp	x21, x22, [sp, #32]
  418670:	mov	x1, #0x5                   	// #5
  418674:	stp	x23, x24, [sp, #48]
  418678:	tbnz	x2, #63, 4186dc <ferror@plt+0x15e5c>
  41867c:	lsr	x24, x20, #1
  418680:	stp	x3, x19, [sp, #104]
  418684:	add	x22, sp, #0x90
  418688:	stp	x20, x2, [sp, #120]
  41868c:	mov	x21, x22
  418690:	mul	x0, x24, x2
  418694:	str	x1, [sp, #136]
  418698:	cmp	x0, #0x100
  41869c:	b.hi	4186e8 <ferror@plt+0x15e68>  // b.pmore
  4186a0:	cmp	x20, x1
  4186a4:	b.hi	418704 <ferror@plt+0x15e84>  // b.pmore
  4186a8:	mov	x0, x19
  4186ac:	add	x1, sp, #0x68
  4186b0:	stp	x19, x20, [sp, #112]
  4186b4:	bl	417f98 <ferror@plt+0x15718>
  4186b8:	cmp	x21, x22
  4186bc:	b.eq	4186c8 <ferror@plt+0x15e48>  // b.none
  4186c0:	mov	x0, x21
  4186c4:	bl	402640 <free@plt>
  4186c8:	ldp	x19, x20, [sp, #16]
  4186cc:	ldp	x21, x22, [sp, #32]
  4186d0:	ldp	x23, x24, [sp, #48]
  4186d4:	ldp	x29, x30, [sp], #400
  4186d8:	ret
  4186dc:	mvn	x2, x2
  4186e0:	mov	x1, #0x3                   	// #3
  4186e4:	b	41867c <ferror@plt+0x15dfc>
  4186e8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4186ec:	add	x22, sp, #0x90
  4186f0:	mov	x21, x0
  4186f4:	str	x0, [sp, #88]
  4186f8:	ldr	x1, [sp, #136]
  4186fc:	b	4186a0 <ferror@plt+0x15e20>
  418700:	ret
  418704:	stp	x25, x26, [sp, #64]
  418708:	add	x1, sp, #0x68
  41870c:	mov	x4, x21
  418710:	ldr	x25, [sp, #128]
  418714:	sub	x2, x20, x24
  418718:	mul	x25, x24, x25
  41871c:	add	x23, x19, x25
  418720:	mov	x3, x23
  418724:	mov	x0, x23
  418728:	bl	418438 <ferror@plt+0x15bb8>
  41872c:	mov	x2, x24
  418730:	add	x1, sp, #0x68
  418734:	mov	x0, x19
  418738:	mov	x4, x23
  41873c:	mov	x3, x21
  418740:	bl	418438 <ferror@plt+0x15bb8>
  418744:	ldr	x2, [sp, #104]
  418748:	mov	x0, x23
  41874c:	ldr	x1, [sp, #128]
  418750:	sub	x1, x25, x1
  418754:	add	x1, x21, x1
  418758:	blr	x2
  41875c:	tbz	w0, #31, 4187d0 <ferror@plt+0x15f50>
  418760:	ldr	x0, [sp, #128]
  418764:	mov	x24, x21
  418768:	cmp	x0, #0x8
  41876c:	madd	x20, x20, x0, x19
  418770:	b.eq	418780 <ferror@plt+0x15f00>  // b.none
  418774:	b	4187f0 <ferror@plt+0x15f70>
  418778:	cmp	x20, x23
  41877c:	b.eq	4187d8 <ferror@plt+0x15f58>  // b.none
  418780:	ldr	x2, [sp, #104]
  418784:	mov	x1, x24
  418788:	mov	x0, x23
  41878c:	blr	x2
  418790:	asr	w0, w0, #31
  418794:	eor	x1, x23, x24
  418798:	and	w2, w0, #0x8
  41879c:	sxtw	x0, w0
  4187a0:	and	x1, x1, x0
  4187a4:	mvn	x0, x0
  4187a8:	eor	x1, x24, x1
  4187ac:	and	x0, x0, #0x8
  4187b0:	add	x24, x24, x0
  4187b4:	add	x23, x23, w2, sxtw
  4187b8:	ldr	x0, [x1]
  4187bc:	str	x0, [x19], #8
  4187c0:	cmp	x19, x23
  4187c4:	b.ne	418778 <ferror@plt+0x15ef8>  // b.any
  4187c8:	ldp	x25, x26, [sp, #64]
  4187cc:	b	4186b8 <ferror@plt+0x15e38>
  4187d0:	mov	x24, x21
  4187d4:	nop
  4187d8:	sub	x2, x23, x19
  4187dc:	mov	x1, x24
  4187e0:	mov	x0, x19
  4187e4:	bl	402220 <memcpy@plt>
  4187e8:	ldp	x25, x26, [sp, #64]
  4187ec:	b	4186b8 <ferror@plt+0x15e38>
  4187f0:	cmp	x0, #0x4
  4187f4:	b.eq	418804 <ferror@plt+0x15f84>  // b.none
  4187f8:	b	418860 <ferror@plt+0x15fe0>
  4187fc:	cmp	x20, x23
  418800:	b.eq	4187d8 <ferror@plt+0x15f58>  // b.none
  418804:	ldr	x2, [sp, #104]
  418808:	mov	x1, x24
  41880c:	mov	x0, x23
  418810:	blr	x2
  418814:	asr	w0, w0, #31
  418818:	eor	x1, x23, x24
  41881c:	and	w2, w0, #0x4
  418820:	sxtw	x0, w0
  418824:	and	x1, x1, x0
  418828:	mvn	x0, x0
  41882c:	eor	x1, x24, x1
  418830:	and	x0, x0, #0x4
  418834:	add	x24, x24, x0
  418838:	add	x23, x23, w2, sxtw
  41883c:	ldr	w0, [x1]
  418840:	str	w0, [x19], #4
  418844:	cmp	x19, x23
  418848:	b.ne	4187fc <ferror@plt+0x15f7c>  // b.any
  41884c:	ldp	x25, x26, [sp, #64]
  418850:	b	4186b8 <ferror@plt+0x15e38>
  418854:	add	x24, x24, x25
  418858:	cmp	x20, x23
  41885c:	b.eq	4187d8 <ferror@plt+0x15f58>  // b.none
  418860:	ldr	x2, [sp, #104]
  418864:	mov	x1, x24
  418868:	mov	x0, x23
  41886c:	blr	x2
  418870:	asr	w25, w0, #31
  418874:	ldr	x26, [sp, #128]
  418878:	sxtw	x25, w25
  41887c:	eor	x1, x23, x24
  418880:	mov	x0, x19
  418884:	and	x1, x1, x25
  418888:	mov	x2, x26
  41888c:	eor	x1, x24, x1
  418890:	bl	402220 <memcpy@plt>
  418894:	and	x1, x25, x26
  418898:	add	x19, x0, x26
  41889c:	mvn	x25, x25
  4188a0:	add	x23, x23, x1
  4188a4:	and	x25, x25, x26
  4188a8:	cmp	x19, x23
  4188ac:	b.ne	418854 <ferror@plt+0x15fd4>  // b.any
  4188b0:	ldp	x25, x26, [sp, #64]
  4188b4:	b	4186b8 <ferror@plt+0x15e38>
  4188b8:	mvn	x2, x2
  4188bc:	b	418650 <ferror@plt+0x15dd0>
  4188c0:	mov	w0, #0x1                   	// #1
  4188c4:	ret
  4188c8:	stp	x29, x30, [sp, #-80]!
  4188cc:	mov	x29, sp
  4188d0:	stp	x21, x22, [sp, #32]
  4188d4:	mov	x21, x1
  4188d8:	mov	x1, x2
  4188dc:	stp	x19, x20, [sp, #16]
  4188e0:	mov	x20, x2
  4188e4:	mov	x19, x8
  4188e8:	stp	x23, x24, [sp, #48]
  4188ec:	mov	x24, x0
  4188f0:	mov	x0, x21
  4188f4:	str	x25, [sp, #64]
  4188f8:	bl	402470 <strcasecmp@plt>
  4188fc:	cbnz	w0, 418930 <ferror@plt+0x160b0>
  418900:	mov	x1, #0xffffffffffffffff    	// #-1
  418904:	adrp	x0, 418000 <ferror@plt+0x15780>
  418908:	add	x0, x0, #0xca0
  41890c:	stp	x0, x1, [x19]
  418910:	str	w1, [x19, #16]
  418914:	mov	sp, x29
  418918:	ldp	x19, x20, [sp, #16]
  41891c:	ldp	x21, x22, [sp, #32]
  418920:	ldp	x23, x24, [sp, #48]
  418924:	ldr	x25, [sp, #64]
  418928:	ldp	x29, x30, [sp], #80
  41892c:	ret
  418930:	mov	x0, x21
  418934:	bl	402270 <strlen@plt>
  418938:	mov	x25, x0
  41893c:	mov	x0, x20
  418940:	bl	402270 <strlen@plt>
  418944:	add	x3, x25, x0
  418948:	add	x3, x3, #0x11
  41894c:	mov	x23, x0
  418950:	and	x3, x3, #0xfffffffffffffff0
  418954:	mov	x2, x0
  418958:	sub	sp, sp, x3
  41895c:	mov	x1, x20
  418960:	mov	x22, sp
  418964:	mov	x0, x22
  418968:	bl	402220 <memcpy@plt>
  41896c:	mov	w3, #0x2f                  	// #47
  418970:	add	x2, x25, #0x1
  418974:	add	x0, x23, #0x1
  418978:	mov	x1, x21
  41897c:	add	x0, x22, x0
  418980:	strb	w3, [x22, x23]
  418984:	bl	402220 <memcpy@plt>
  418988:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41898c:	mov	x0, x22
  418990:	add	x1, x1, #0x6d0
  418994:	bl	402470 <strcasecmp@plt>
  418998:	cbz	w0, 418aa8 <ferror@plt+0x16228>
  41899c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4189a0:	mov	x0, x22
  4189a4:	add	x1, x1, #0x6e0
  4189a8:	bl	402470 <strcasecmp@plt>
  4189ac:	cbz	w0, 418ae8 <ferror@plt+0x16268>
  4189b0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4189b4:	mov	x0, x22
  4189b8:	add	x1, x1, #0x6f0
  4189bc:	bl	402470 <strcasecmp@plt>
  4189c0:	cbz	w0, 418af0 <ferror@plt+0x16270>
  4189c4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4189c8:	mov	x0, x22
  4189cc:	add	x1, x1, #0x700
  4189d0:	bl	402470 <strcasecmp@plt>
  4189d4:	cbz	w0, 418af8 <ferror@plt+0x16278>
  4189d8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4189dc:	mov	x0, x22
  4189e0:	add	x1, x1, #0x710
  4189e4:	bl	402470 <strcasecmp@plt>
  4189e8:	cbz	w0, 418b00 <ferror@plt+0x16280>
  4189ec:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  4189f0:	mov	x0, x22
  4189f4:	add	x1, x1, #0x720
  4189f8:	bl	402470 <strcasecmp@plt>
  4189fc:	cbz	w0, 418b08 <ferror@plt+0x16288>
  418a00:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  418a04:	mov	x0, x22
  418a08:	add	x1, x1, #0x730
  418a0c:	bl	402470 <strcasecmp@plt>
  418a10:	cbz	w0, 418b10 <ferror@plt+0x16290>
  418a14:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  418a18:	mov	x0, x22
  418a1c:	add	x1, x1, #0x740
  418a20:	bl	402470 <strcasecmp@plt>
  418a24:	cbz	w0, 418b18 <ferror@plt+0x16298>
  418a28:	adrp	x2, 418000 <ferror@plt+0x15780>
  418a2c:	add	x2, x2, #0xb20
  418a30:	mov	x1, x20
  418a34:	mov	x0, x21
  418a38:	str	x2, [x19]
  418a3c:	bl	4026d0 <iconv_open@plt>
  418a40:	str	x0, [x19, #8]
  418a44:	mov	w1, #0xffffffff            	// #-1
  418a48:	str	w1, [x19, #16]
  418a4c:	cmn	x0, #0x1
  418a50:	b.ne	418914 <ferror@plt+0x16094>  // b.any
  418a54:	bl	4027c0 <__errno_location@plt>
  418a58:	ldr	w0, [x0]
  418a5c:	cmp	w0, #0x16
  418a60:	b.eq	418a88 <ferror@plt+0x16208>  // b.none
  418a64:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  418a68:	mov	x0, x24
  418a6c:	add	x2, x2, #0x780
  418a70:	mov	w1, #0x3                   	// #3
  418a74:	bl	423628 <ferror@plt+0x20da8>
  418a78:	adrp	x0, 418000 <ferror@plt+0x15780>
  418a7c:	add	x0, x0, #0xca0
  418a80:	str	x0, [x19]
  418a84:	b	418914 <ferror@plt+0x16094>
  418a88:	mov	x4, x21
  418a8c:	mov	x3, x20
  418a90:	mov	x0, x24
  418a94:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  418a98:	mov	w1, #0x3                   	// #3
  418a9c:	add	x2, x2, #0x750
  418aa0:	bl	422e10 <ferror@plt+0x20590>
  418aa4:	b	418a78 <ferror@plt+0x161f8>
  418aa8:	mov	x0, #0x0                   	// #0
  418aac:	add	x0, x0, x0, lsl #1
  418ab0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x146d8>
  418ab4:	add	x1, x1, #0xe10
  418ab8:	mov	w2, #0xffffffff            	// #-1
  418abc:	add	x0, x1, x0, lsl #3
  418ac0:	str	w2, [x19, #16]
  418ac4:	ldp	x1, x0, [x0, #8]
  418ac8:	stp	x1, x0, [x19]
  418acc:	mov	sp, x29
  418ad0:	ldp	x19, x20, [sp, #16]
  418ad4:	ldp	x21, x22, [sp, #32]
  418ad8:	ldp	x23, x24, [sp, #48]
  418adc:	ldr	x25, [sp, #64]
  418ae0:	ldp	x29, x30, [sp], #80
  418ae4:	ret
  418ae8:	mov	x0, #0x1                   	// #1
  418aec:	b	418aac <ferror@plt+0x1622c>
  418af0:	mov	x0, #0x2                   	// #2
  418af4:	b	418aac <ferror@plt+0x1622c>
  418af8:	mov	x0, #0x3                   	// #3
  418afc:	b	418aac <ferror@plt+0x1622c>
  418b00:	mov	x0, #0x4                   	// #4
  418b04:	b	418aac <ferror@plt+0x1622c>
  418b08:	mov	x0, #0x5                   	// #5
  418b0c:	b	418aac <ferror@plt+0x1622c>
  418b10:	mov	x0, #0x6                   	// #6
  418b14:	b	418aac <ferror@plt+0x1622c>
  418b18:	mov	x0, #0x7                   	// #7
  418b1c:	b	418aac <ferror@plt+0x1622c>
  418b20:	stp	x29, x30, [sp, #-80]!
  418b24:	mov	x4, #0x0                   	// #0
  418b28:	mov	x29, sp
  418b2c:	stp	x19, x20, [sp, #16]
  418b30:	mov	x20, x2
  418b34:	mov	x19, x3
  418b38:	mov	x2, #0x0                   	// #0
  418b3c:	mov	x3, #0x0                   	// #0
  418b40:	stp	x21, x22, [sp, #32]
  418b44:	mov	x22, x1
  418b48:	mov	x21, x0
  418b4c:	mov	x1, #0x0                   	// #0
  418b50:	bl	4025e0 <iconv@plt>
  418b54:	cmn	x0, #0x1
  418b58:	b.eq	418bc4 <ferror@plt+0x16344>  // b.none
  418b5c:	ldp	x4, x3, [x19]
  418b60:	ldr	x5, [x19, #16]
  418b64:	add	x4, x4, x5
  418b68:	sub	x1, x3, x5
  418b6c:	stp	x22, x4, [sp, #48]
  418b70:	stp	x20, x1, [sp, #64]
  418b74:	add	x4, sp, #0x48
  418b78:	add	x3, sp, #0x38
  418b7c:	add	x2, sp, #0x40
  418b80:	add	x1, sp, #0x30
  418b84:	mov	x0, x21
  418b88:	bl	4025e0 <iconv@plt>
  418b8c:	ldr	x0, [sp, #64]
  418b90:	cbnz	x0, 418c54 <ferror@plt+0x163d4>
  418b94:	add	x4, sp, #0x48
  418b98:	add	x3, sp, #0x38
  418b9c:	mov	x0, x21
  418ba0:	mov	x2, #0x0                   	// #0
  418ba4:	mov	x1, #0x0                   	// #0
  418ba8:	bl	4025e0 <iconv@plt>
  418bac:	cmn	x0, #0x1
  418bb0:	b.ne	418c30 <ferror@plt+0x163b0>  // b.any
  418bb4:	bl	4027c0 <__errno_location@plt>
  418bb8:	ldr	w0, [x0]
  418bbc:	cmp	w0, #0x7
  418bc0:	b.eq	418bd8 <ferror@plt+0x16358>  // b.none
  418bc4:	mov	w0, #0x0                   	// #0
  418bc8:	ldp	x19, x20, [sp, #16]
  418bcc:	ldp	x21, x22, [sp, #32]
  418bd0:	ldp	x29, x30, [sp], #80
  418bd4:	ret
  418bd8:	ldp	x0, x1, [x19]
  418bdc:	ldr	x2, [sp, #72]
  418be0:	add	x2, x2, #0x100
  418be4:	str	x2, [sp, #72]
  418be8:	add	x1, x1, #0x100
  418bec:	str	x1, [x19, #8]
  418bf0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  418bf4:	mov	x1, x0
  418bf8:	ldr	x5, [x19, #8]
  418bfc:	str	x1, [x19]
  418c00:	ldr	x2, [sp, #72]
  418c04:	add	x4, sp, #0x48
  418c08:	add	x3, sp, #0x38
  418c0c:	mov	x0, x21
  418c10:	sub	x5, x5, x2
  418c14:	mov	x2, #0x0                   	// #0
  418c18:	add	x5, x1, x5
  418c1c:	mov	x1, #0x0                   	// #0
  418c20:	str	x5, [sp, #56]
  418c24:	bl	4025e0 <iconv@plt>
  418c28:	cmn	x0, #0x1
  418c2c:	b.eq	418bc4 <ferror@plt+0x16344>  // b.none
  418c30:	ldr	x1, [x19, #8]
  418c34:	mov	w0, #0x1                   	// #1
  418c38:	ldr	x2, [sp, #72]
  418c3c:	ldp	x21, x22, [sp, #32]
  418c40:	sub	x1, x1, x2
  418c44:	str	x1, [x19, #16]
  418c48:	ldp	x19, x20, [sp, #16]
  418c4c:	ldp	x29, x30, [sp], #80
  418c50:	ret
  418c54:	bl	4027c0 <__errno_location@plt>
  418c58:	ldr	w0, [x0]
  418c5c:	cmp	w0, #0x7
  418c60:	b.ne	418bc4 <ferror@plt+0x16344>  // b.any
  418c64:	ldp	x0, x1, [x19]
  418c68:	ldr	x2, [sp, #72]
  418c6c:	add	x2, x2, #0x100
  418c70:	str	x2, [sp, #72]
  418c74:	add	x1, x1, #0x100
  418c78:	str	x1, [x19, #8]
  418c7c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  418c80:	str	x0, [x19]
  418c84:	ldr	x1, [x19, #8]
  418c88:	ldr	x2, [sp, #72]
  418c8c:	sub	x1, x1, x2
  418c90:	add	x0, x0, x1
  418c94:	str	x0, [sp, #56]
  418c98:	b	418b74 <ferror@plt+0x162f4>
  418c9c:	nop
  418ca0:	stp	x29, x30, [sp, #-48]!
  418ca4:	mov	x29, sp
  418ca8:	stp	x19, x20, [sp, #16]
  418cac:	mov	x19, x3
  418cb0:	mov	x20, x2
  418cb4:	ldr	x2, [x3, #16]
  418cb8:	ldr	x3, [x3, #8]
  418cbc:	ldr	x0, [x19]
  418cc0:	str	x21, [sp, #32]
  418cc4:	mov	x21, x1
  418cc8:	add	x1, x2, x20
  418ccc:	cmp	x1, x3
  418cd0:	b.hi	418d04 <ferror@plt+0x16484>  // b.pmore
  418cd4:	mov	x1, x21
  418cd8:	add	x0, x0, x2
  418cdc:	mov	x2, x20
  418ce0:	bl	402220 <memcpy@plt>
  418ce4:	ldr	x2, [x19, #16]
  418ce8:	mov	w0, #0x1                   	// #1
  418cec:	ldr	x21, [sp, #32]
  418cf0:	add	x2, x2, x20
  418cf4:	str	x2, [x19, #16]
  418cf8:	ldp	x19, x20, [sp, #16]
  418cfc:	ldp	x29, x30, [sp], #48
  418d00:	ret
  418d04:	add	x1, x1, x1, lsr #2
  418d08:	str	x1, [x19, #8]
  418d0c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  418d10:	str	x0, [x19]
  418d14:	ldr	x2, [x19, #16]
  418d18:	b	418cd4 <ferror@plt+0x16454>
  418d1c:	nop
  418d20:	stp	x29, x30, [sp, #-96]!
  418d24:	cmp	x0, w4, sxtw
  418d28:	mov	x29, sp
  418d2c:	stp	x19, x20, [sp, #16]
  418d30:	mov	w19, w2
  418d34:	mov	x20, x3
  418d38:	stp	x23, x24, [sp, #48]
  418d3c:	ldp	x2, x24, [x3, #8]
  418d40:	b.eq	418e28 <ferror@plt+0x165a8>  // b.none
  418d44:	stp	x25, x26, [sp, #64]
  418d48:	sxtw	x25, w4
  418d4c:	cmp	x0, #0x20
  418d50:	mov	x3, #0x20                  	// #32
  418d54:	stp	x21, x22, [sp, #32]
  418d58:	mov	x21, x0
  418d5c:	udiv	x23, x25, x0
  418d60:	csel	x0, x0, x3, ls  // ls = plast
  418d64:	mov	x3, #0x1                   	// #1
  418d68:	str	x27, [sp, #80]
  418d6c:	lsl	x3, x3, x0
  418d70:	ldrb	w27, [x1]
  418d74:	sub	x22, x3, #0x1
  418d78:	add	x0, x23, x24
  418d7c:	sub	x26, x23, #0x1
  418d80:	cmp	x0, x2
  418d84:	b.hi	418e10 <ferror@plt+0x16590>  // b.pmore
  418d88:	cmp	x25, x21
  418d8c:	b.cc	418dc0 <ferror@plt+0x16540>  // b.lo, b.ul, b.last
  418d90:	mov	w3, w22
  418d94:	mov	w0, w21
  418d98:	mov	x1, #0x0                   	// #0
  418d9c:	cbnz	w27, 418de8 <ferror@plt+0x16568>
  418da0:	ldr	x2, [x20]
  418da4:	and	w4, w3, w19
  418da8:	lsr	w19, w19, w0
  418dac:	add	x2, x2, x1
  418db0:	add	x1, x1, #0x1
  418db4:	cmp	x1, x23
  418db8:	strb	w4, [x2, x24]
  418dbc:	b.cc	418da0 <ferror@plt+0x16520>  // b.lo, b.ul, b.last
  418dc0:	ldr	x0, [x20, #16]
  418dc4:	ldp	x21, x22, [sp, #32]
  418dc8:	add	x23, x0, x23
  418dcc:	ldp	x25, x26, [sp, #64]
  418dd0:	ldr	x27, [sp, #80]
  418dd4:	str	x23, [x20, #16]
  418dd8:	ldp	x19, x20, [sp, #16]
  418ddc:	ldp	x23, x24, [sp, #48]
  418de0:	ldp	x29, x30, [sp], #96
  418de4:	ret
  418de8:	ldr	x2, [x20]
  418dec:	sub	x4, x24, x1
  418df0:	and	w5, w19, w3
  418df4:	add	x1, x1, #0x1
  418df8:	add	x2, x2, x26
  418dfc:	cmp	x23, x1
  418e00:	lsr	w19, w19, w0
  418e04:	strb	w5, [x2, x4]
  418e08:	b.hi	418de8 <ferror@plt+0x16568>  // b.pmore
  418e0c:	b	418dc0 <ferror@plt+0x16540>
  418e10:	ldr	x0, [x20]
  418e14:	add	x1, x2, #0x100
  418e18:	str	x1, [x20, #8]
  418e1c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  418e20:	str	x0, [x20]
  418e24:	b	418d88 <ferror@plt+0x16508>
  418e28:	add	x1, x24, #0x1
  418e2c:	cmp	x1, x2
  418e30:	ldr	x0, [x3]
  418e34:	b.hi	418e50 <ferror@plt+0x165d0>  // b.pmore
  418e38:	str	x1, [x20, #16]
  418e3c:	strb	w19, [x0, x24]
  418e40:	ldp	x19, x20, [sp, #16]
  418e44:	ldp	x23, x24, [sp, #48]
  418e48:	ldp	x29, x30, [sp], #96
  418e4c:	ret
  418e50:	add	x1, x2, #0x100
  418e54:	str	x1, [x3, #8]
  418e58:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  418e5c:	str	x0, [x20]
  418e60:	ldr	x24, [x20, #16]
  418e64:	add	x1, x24, #0x1
  418e68:	b	418e38 <ferror@plt+0x165b8>
  418e6c:	nop
  418e70:	stp	x29, x30, [sp, #-128]!
  418e74:	cmp	x2, #0x3
  418e78:	mov	x29, sp
  418e7c:	stp	x19, x20, [sp, #16]
  418e80:	mov	x20, x1
  418e84:	mov	x19, x3
  418e88:	ldp	x4, x1, [x3]
  418e8c:	stp	x21, x22, [sp, #32]
  418e90:	mov	x22, x2
  418e94:	ldr	x21, [x3, #16]
  418e98:	add	x4, x4, x21
  418e9c:	sub	x21, x1, x21
  418ea0:	b.ls	419094 <ferror@plt+0x16814>  // b.plast
  418ea4:	cmp	x0, #0x0
  418ea8:	stp	x23, x24, [sp, #48]
  418eac:	add	x24, sp, #0x7d
  418eb0:	stp	x27, x28, [sp, #80]
  418eb4:	mov	x27, #0x3                   	// #3
  418eb8:	csel	x27, x27, xzr, ne  // ne = any
  418ebc:	adrp	x23, 475000 <_obstack_memory_used@@Base+0x186d8>
  418ec0:	mov	w28, #0xffff2800            	// #-55296
  418ec4:	stp	x25, x26, [sp, #64]
  418ec8:	mov	x25, x0
  418ecc:	add	x0, x23, #0x8b8
  418ed0:	str	x0, [sp, #104]
  418ed4:	ldrb	w0, [x20, #1]
  418ed8:	ldrb	w3, [x20, #2]
  418edc:	cbz	x25, 419044 <ferror@plt+0x167c4>
  418ee0:	ldrb	w2, [x20]
  418ee4:	lsl	w1, w0, #16
  418ee8:	mov	w0, #0x7ffffffe            	// #2147483646
  418eec:	add	w1, w1, w2, lsl #24
  418ef0:	add	w1, w1, w3, lsl #8
  418ef4:	ldrb	w3, [x20, x27]
  418ef8:	add	w3, w3, w1
  418efc:	add	w1, w3, w28
  418f00:	cmp	w1, #0x7ff
  418f04:	ccmp	w3, w0, #0x2, hi  // hi = pmore
  418f08:	b.hi	419070 <ferror@plt+0x167f0>  // b.pmore
  418f0c:	cmp	w3, #0x7f
  418f10:	b.hi	418f74 <ferror@plt+0x166f4>  // b.pmore
  418f14:	strb	w3, [sp, #125]
  418f18:	mov	x1, x24
  418f1c:	mov	x23, #0x1                   	// #1
  418f20:	cbz	x21, 419014 <ferror@plt+0x16794>
  418f24:	add	x26, sp, #0x7e
  418f28:	mov	x0, x4
  418f2c:	sub	x26, x26, x1
  418f30:	sub	x21, x21, x23
  418f34:	mov	x2, x26
  418f38:	bl	402220 <memcpy@plt>
  418f3c:	subs	x22, x22, #0x4
  418f40:	add	x4, x0, x26
  418f44:	b.ne	4190a0 <ferror@plt+0x16820>  // b.any
  418f48:	ldp	x23, x24, [sp, #48]
  418f4c:	ldp	x25, x26, [sp, #64]
  418f50:	ldp	x27, x28, [sp, #80]
  418f54:	ldr	x1, [x19, #8]
  418f58:	sub	x21, x1, x21
  418f5c:	mov	w0, #0x1                   	// #1
  418f60:	str	x21, [x19, #16]
  418f64:	ldp	x19, x20, [sp, #16]
  418f68:	ldp	x21, x22, [sp, #32]
  418f6c:	ldp	x29, x30, [sp], #128
  418f70:	ret
  418f74:	and	w0, w3, #0x3f
  418f78:	cmp	w3, #0xfbf
  418f7c:	orr	w0, w0, #0xffffff80
  418f80:	strb	w0, [sp, #125]
  418f84:	lsr	w0, w3, #6
  418f88:	b.ls	4190c0 <ferror@plt+0x16840>  // b.plast
  418f8c:	and	w1, w0, #0x3f
  418f90:	lsr	w0, w3, #12
  418f94:	orr	w1, w1, #0xffffff80
  418f98:	strb	w1, [sp, #124]
  418f9c:	cmp	w0, #0x3e
  418fa0:	b.ls	4190e8 <ferror@plt+0x16868>  // b.plast
  418fa4:	and	w1, w0, #0x3f
  418fa8:	lsr	w0, w3, #18
  418fac:	orr	w1, w1, #0xffffff80
  418fb0:	strb	w1, [sp, #123]
  418fb4:	cmp	w0, #0x3e
  418fb8:	b.ls	419114 <ferror@plt+0x16894>  // b.plast
  418fbc:	and	w1, w0, #0x3f
  418fc0:	lsr	w0, w3, #24
  418fc4:	orr	w1, w1, #0xffffff80
  418fc8:	strb	w1, [sp, #122]
  418fcc:	cmp	w0, #0x3e
  418fd0:	b.ls	419140 <ferror@plt+0x168c0>  // b.plast
  418fd4:	and	w0, w0, #0x3f
  418fd8:	add	x1, sp, #0x78
  418fdc:	orr	w6, w0, #0xffffff80
  418fe0:	add	x1, x1, #0x2
  418fe4:	lsr	w0, w3, #30
  418fe8:	add	x3, sp, #0x79
  418fec:	mov	x23, #0x6                   	// #6
  418ff0:	mov	x2, #0x5                   	// #5
  418ff4:	strb	w6, [sp, #121]
  418ff8:	ldr	x5, [sp, #104]
  418ffc:	sub	x1, x1, #0x2
  419000:	cmp	x21, x23
  419004:	ldrb	w2, [x5, x2]
  419008:	orr	w0, w0, w2
  41900c:	sturb	w0, [x3, #-1]
  419010:	b.cs	418f24 <ferror@plt+0x166a4>  // b.hs, b.nlast
  419014:	ldp	x0, x1, [x19]
  419018:	add	x21, x21, #0x100
  41901c:	add	x1, x1, #0x100
  419020:	str	x1, [x19, #8]
  419024:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  419028:	str	x0, [x19]
  41902c:	ldr	x4, [x19, #8]
  419030:	ldrb	w3, [x20, #2]
  419034:	sub	x4, x4, x21
  419038:	add	x4, x0, x4
  41903c:	ldrb	w0, [x20, #1]
  419040:	cbnz	x25, 418ee0 <ferror@plt+0x16660>
  419044:	ldrb	w1, [x20, #3]
  419048:	lsl	w3, w3, #16
  41904c:	add	w3, w3, w1, lsl #24
  419050:	add	w1, w3, w0, lsl #8
  419054:	ldrb	w3, [x20, x27]
  419058:	mov	w0, #0x7ffffffe            	// #2147483646
  41905c:	add	w3, w3, w1
  419060:	add	w1, w3, w28
  419064:	cmp	w1, #0x7ff
  419068:	ccmp	w3, w0, #0x2, hi  // hi = pmore
  41906c:	b.ls	418f0c <ferror@plt+0x1668c>  // b.plast
  419070:	ldp	x23, x24, [sp, #48]
  419074:	mov	w19, #0x54                  	// #84
  419078:	ldp	x25, x26, [sp, #64]
  41907c:	ldp	x27, x28, [sp, #80]
  419080:	bl	4027c0 <__errno_location@plt>
  419084:	mov	x1, x0
  419088:	mov	w0, #0x0                   	// #0
  41908c:	str	w19, [x1]
  419090:	b	418f64 <ferror@plt+0x166e4>
  419094:	cbz	x2, 418f58 <ferror@plt+0x166d8>
  419098:	mov	w19, #0x16                  	// #22
  41909c:	b	419080 <ferror@plt+0x16800>
  4190a0:	add	x20, x20, #0x4
  4190a4:	cmp	x22, #0x3
  4190a8:	b.hi	418ed4 <ferror@plt+0x16654>  // b.pmore
  4190ac:	mov	w19, #0x16                  	// #22
  4190b0:	ldp	x23, x24, [sp, #48]
  4190b4:	ldp	x25, x26, [sp, #64]
  4190b8:	ldp	x27, x28, [sp, #80]
  4190bc:	b	419080 <ferror@plt+0x16800>
  4190c0:	tst	w0, #0xe0
  4190c4:	b.eq	41914c <ferror@plt+0x168cc>  // b.none
  4190c8:	orr	w1, w0, #0xffffff80
  4190cc:	mov	w0, #0x0                   	// #0
  4190d0:	strb	w1, [sp, #124]
  4190d4:	add	x3, sp, #0x7c
  4190d8:	mov	x1, x24
  4190dc:	mov	x23, #0x3                   	// #3
  4190e0:	mov	x2, #0x2                   	// #2
  4190e4:	b	418ff8 <ferror@plt+0x16778>
  4190e8:	tst	w0, #0xf0
  4190ec:	b.eq	4190d4 <ferror@plt+0x16854>  // b.none
  4190f0:	orr	w1, w0, #0xffffff80
  4190f4:	mov	w0, #0x0                   	// #0
  4190f8:	strb	w1, [sp, #123]
  4190fc:	add	x1, sp, #0x78
  419100:	mov	x23, #0x4                   	// #4
  419104:	mov	x2, #0x3                   	// #3
  419108:	add	x3, x1, x2
  41910c:	add	x1, x1, x23
  419110:	b	418ff8 <ferror@plt+0x16778>
  419114:	tst	w0, #0xf8
  419118:	b.eq	4190fc <ferror@plt+0x1687c>  // b.none
  41911c:	orr	w1, w0, #0xffffff80
  419120:	mov	w0, #0x0                   	// #0
  419124:	strb	w1, [sp, #122]
  419128:	add	x1, sp, #0x78
  41912c:	add	x3, sp, #0x7a
  419130:	add	x1, x1, #0x3
  419134:	mov	x23, #0x5                   	// #5
  419138:	mov	x2, #0x4                   	// #4
  41913c:	b	418ff8 <ferror@plt+0x16778>
  419140:	tst	w0, #0xfc
  419144:	b.ne	418fd4 <ferror@plt+0x16754>  // b.any
  419148:	b	419128 <ferror@plt+0x168a8>
  41914c:	mov	x3, x24
  419150:	add	x1, sp, #0x7e
  419154:	mov	x23, #0x2                   	// #2
  419158:	mov	x2, #0x1                   	// #1
  41915c:	b	418ff8 <ferror@plt+0x16778>
  419160:	stp	x29, x30, [sp, #-144]!
  419164:	cmp	x2, #0x1
  419168:	mov	x29, sp
  41916c:	stp	x19, x20, [sp, #16]
  419170:	mov	x19, x3
  419174:	ldp	x4, x3, [x3]
  419178:	stp	x21, x22, [sp, #32]
  41917c:	ldr	x21, [x19, #16]
  419180:	stp	x25, x26, [sp, #64]
  419184:	mov	x26, x2
  419188:	add	x4, x4, x21
  41918c:	sub	x21, x3, x21
  419190:	b.ls	419364 <ferror@plt+0x16ae4>  // b.plast
  419194:	cmp	x0, #0x0
  419198:	mov	x22, #0x3                   	// #3
  41919c:	cset	x7, ne  // ne = any
  4191a0:	stp	x23, x24, [sp, #48]
  4191a4:	adrp	x23, 475000 <_obstack_memory_used@@Base+0x186d8>
  4191a8:	add	x23, x23, #0x8b8
  4191ac:	stp	x27, x28, [sp, #80]
  4191b0:	mov	x28, x0
  4191b4:	mov	x27, x1
  4191b8:	mov	x0, #0x2                   	// #2
  4191bc:	csel	x0, x22, x0, ne  // ne = any
  4191c0:	cset	x22, eq  // eq = none
  4191c4:	mov	w24, #0xffff2400            	// #-56320
  4191c8:	str	x0, [sp, #96]
  4191cc:	add	x0, sp, #0x8c
  4191d0:	str	x0, [sp, #104]
  4191d4:	ldrb	w0, [x27, x7]
  4191d8:	ldrb	w20, [x27, x22]
  4191dc:	add	w20, w0, w20, lsl #8
  4191e0:	add	w0, w20, w24
  4191e4:	cmp	w0, #0x3ff
  4191e8:	b.ls	4192f8 <ferror@plt+0x16a78>  // b.plast
  4191ec:	mov	w1, #0xffff2800            	// #-55296
  4191f0:	add	w3, w20, w1
  4191f4:	cmp	w3, #0x3ff
  4191f8:	b.hi	419318 <ferror@plt+0x16a98>  // b.pmore
  4191fc:	cmp	x26, #0x3
  419200:	b.ls	41938c <ferror@plt+0x16b0c>  // b.plast
  419204:	cbz	x28, 41939c <ferror@plt+0x16b1c>
  419208:	ldrb	w0, [x27, #2]
  41920c:	lsl	w1, w0, #8
  419210:	ldr	x0, [sp, #96]
  419214:	ldrb	w0, [x27, x0]
  419218:	add	w0, w0, w1
  41921c:	add	w1, w0, w24
  419220:	cmp	w1, #0x3ff
  419224:	b.hi	4192f8 <ferror@plt+0x16a78>  // b.pmore
  419228:	add	w3, w0, w3, lsl #10
  41922c:	mov	w0, #0x2400                	// #9216
  419230:	add	w20, w3, w0
  419234:	and	w3, w3, #0x3f
  419238:	orr	w3, w3, #0xffffff80
  41923c:	strb	w3, [sp, #141]
  419240:	ubfx	x0, x20, #6, #6
  419244:	lsr	w3, w20, #12
  419248:	orr	w0, w0, #0xffffff80
  41924c:	strb	w0, [sp, #140]
  419250:	cmp	w3, #0x3e
  419254:	b.ls	4193a8 <ferror@plt+0x16b28>  // b.plast
  419258:	add	x1, sp, #0x88
  41925c:	and	w3, w3, #0x3f
  419260:	mov	x0, #0x3                   	// #3
  419264:	add	x2, x1, x0
  419268:	ldr	x1, [sp, #104]
  41926c:	orr	w9, w3, #0xffffff80
  419270:	lsr	w3, w20, #18
  419274:	mov	x8, #0x4                   	// #4
  419278:	strb	w9, [sp, #139]
  41927c:	ldrb	w0, [x23, x0]
  419280:	sub	x1, x1, #0x2
  419284:	cmp	x8, x21
  419288:	orr	w3, w3, w0
  41928c:	sturb	w3, [x2, #-1]
  419290:	b.hi	419334 <ferror@plt+0x16ab4>  // b.pmore
  419294:	add	x25, sp, #0x8e
  419298:	mov	x0, x4
  41929c:	sub	x25, x25, x1
  4192a0:	stp	x7, x8, [sp, #112]
  4192a4:	mov	x2, x25
  4192a8:	bl	402220 <memcpy@plt>
  4192ac:	add	x4, x0, x25
  4192b0:	ldp	x7, x8, [sp, #112]
  4192b4:	mov	w0, #0xffff                	// #65535
  4192b8:	cmp	w20, w0
  4192bc:	sub	x21, x21, x8
  4192c0:	b.hi	419370 <ferror@plt+0x16af0>  // b.pmore
  4192c4:	subs	x26, x26, #0x2
  4192c8:	b.ne	419380 <ferror@plt+0x16b00>  // b.any
  4192cc:	ldp	x23, x24, [sp, #48]
  4192d0:	ldp	x27, x28, [sp, #80]
  4192d4:	ldr	x3, [x19, #8]
  4192d8:	sub	x21, x3, x21
  4192dc:	mov	w0, #0x1                   	// #1
  4192e0:	str	x21, [x19, #16]
  4192e4:	ldp	x19, x20, [sp, #16]
  4192e8:	ldp	x21, x22, [sp, #32]
  4192ec:	ldp	x25, x26, [sp, #64]
  4192f0:	ldp	x29, x30, [sp], #144
  4192f4:	ret
  4192f8:	ldp	x23, x24, [sp, #48]
  4192fc:	mov	w19, #0x54                  	// #84
  419300:	ldp	x27, x28, [sp, #80]
  419304:	bl	4027c0 <__errno_location@plt>
  419308:	mov	x1, x0
  41930c:	mov	w0, #0x0                   	// #0
  419310:	str	w19, [x1]
  419314:	b	4192e4 <ferror@plt+0x16a64>
  419318:	cmp	w20, #0x7f
  41931c:	and	w0, w20, #0xff
  419320:	b.hi	4193c4 <ferror@plt+0x16b44>  // b.pmore
  419324:	strb	w0, [sp, #141]
  419328:	add	x1, sp, #0x8d
  41932c:	mov	x8, #0x1                   	// #1
  419330:	cbnz	x21, 419294 <ferror@plt+0x16a14>
  419334:	ldp	x0, x1, [x19]
  419338:	str	x7, [sp, #112]
  41933c:	add	x21, x21, #0x100
  419340:	add	x1, x1, #0x100
  419344:	str	x1, [x19, #8]
  419348:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41934c:	str	x0, [x19]
  419350:	ldr	x4, [x19, #8]
  419354:	ldr	x7, [sp, #112]
  419358:	sub	x4, x4, x21
  41935c:	add	x4, x0, x4
  419360:	b	4191d4 <ferror@plt+0x16954>
  419364:	cbz	x2, 4192d8 <ferror@plt+0x16a58>
  419368:	mov	w19, #0x16                  	// #22
  41936c:	b	419304 <ferror@plt+0x16a84>
  419370:	subs	x26, x26, #0x4
  419374:	b.eq	4192cc <ferror@plt+0x16a4c>  // b.none
  419378:	add	x27, x27, #0x4
  41937c:	b	419384 <ferror@plt+0x16b04>
  419380:	add	x27, x27, #0x2
  419384:	cmp	x26, #0x1
  419388:	b.hi	4191d4 <ferror@plt+0x16954>  // b.pmore
  41938c:	mov	w19, #0x16                  	// #22
  419390:	ldp	x23, x24, [sp, #48]
  419394:	ldp	x27, x28, [sp, #80]
  419398:	b	419304 <ferror@plt+0x16a84>
  41939c:	ldrb	w0, [x27, #3]
  4193a0:	lsl	w1, w0, #8
  4193a4:	b	419210 <ferror@plt+0x16990>
  4193a8:	tst	w3, #0xf0
  4193ac:	b.ne	419258 <ferror@plt+0x169d8>  // b.any
  4193b0:	add	x1, sp, #0x8d
  4193b4:	mov	x8, #0x3                   	// #3
  4193b8:	mov	x0, #0x2                   	// #2
  4193bc:	ldr	x2, [sp, #104]
  4193c0:	b	41927c <ferror@plt+0x169fc>
  4193c4:	and	w0, w20, #0x3f
  4193c8:	cmp	w20, #0xfbf
  4193cc:	orr	w0, w0, #0xffffff80
  4193d0:	strb	w0, [sp, #141]
  4193d4:	lsr	w3, w20, #6
  4193d8:	b.hi	41941c <ferror@plt+0x16b9c>  // b.pmore
  4193dc:	tst	w3, #0xe0
  4193e0:	b.eq	419404 <ferror@plt+0x16b84>  // b.none
  4193e4:	orr	w0, w3, #0xffffff80
  4193e8:	add	x1, sp, #0x8d
  4193ec:	mov	w3, #0x0                   	// #0
  4193f0:	mov	x8, #0x3                   	// #3
  4193f4:	strb	w0, [sp, #140]
  4193f8:	mov	x0, #0x2                   	// #2
  4193fc:	ldr	x2, [sp, #104]
  419400:	b	41927c <ferror@plt+0x169fc>
  419404:	add	x0, sp, #0x88
  419408:	add	x2, sp, #0x8d
  41940c:	add	x1, x0, #0x6
  419410:	mov	x8, #0x2                   	// #2
  419414:	mov	x0, #0x1                   	// #1
  419418:	b	41927c <ferror@plt+0x169fc>
  41941c:	and	w0, w3, #0x3f
  419420:	lsr	w3, w20, #12
  419424:	orr	w0, w0, #0xffffff80
  419428:	strb	w0, [sp, #140]
  41942c:	b	4193b0 <ferror@plt+0x16b30>
  419430:	stp	x29, x30, [sp, #-96]!
  419434:	mov	x29, sp
  419438:	ldp	x4, x5, [x3]
  41943c:	stp	x19, x20, [sp, #16]
  419440:	mov	x19, x3
  419444:	ldr	x3, [x3, #16]
  419448:	add	x4, x4, x3
  41944c:	sub	x20, x5, x3
  419450:	cbz	x2, 419550 <ferror@plt+0x16cd0>
  419454:	cmp	x0, #0x0
  419458:	stp	x21, x22, [sp, #32]
  41945c:	mov	x21, x1
  419460:	mov	x22, x2
  419464:	mov	x1, #0x2                   	// #2
  419468:	stp	x23, x24, [sp, #48]
  41946c:	mov	x23, x0
  419470:	mov	x0, #0x3                   	// #3
  419474:	csel	x24, x1, x0, ne  // ne = any
  419478:	stp	x25, x26, [sp, #64]
  41947c:	mov	w25, #0x7fffff80            	// #2147483520
  419480:	mov	w26, #0xffff                	// #65535
  419484:	str	x27, [sp, #80]
  419488:	mov	w27, #0x1fffff              	// #2097151
  41948c:	ldrb	w3, [x21]
  419490:	cmp	w3, #0x7f
  419494:	mov	w5, w3
  419498:	b.ls	419508 <ferror@plt+0x16c88>  // b.plast
  41949c:	and	w0, w3, #0xffffffe0
  4194a0:	cmp	w0, #0xc0
  4194a4:	b.eq	419740 <ferror@plt+0x16ec0>  // b.none
  4194a8:	and	w0, w3, #0xfffffff0
  4194ac:	cmp	w0, #0xe0
  4194b0:	b.eq	41975c <ferror@plt+0x16edc>  // b.none
  4194b4:	and	w0, w3, #0xfffffff8
  4194b8:	cmp	w0, #0xf0
  4194bc:	b.eq	419778 <ferror@plt+0x16ef8>  // b.none
  4194c0:	and	w0, w3, #0xfffffffc
  4194c4:	cmp	w0, #0xf8
  4194c8:	b.eq	419794 <ferror@plt+0x16f14>  // b.none
  4194cc:	and	w0, w3, #0xfffffffe
  4194d0:	cmp	w0, #0xfc
  4194d4:	b.eq	4195a8 <ferror@plt+0x16d28>  // b.none
  4194d8:	mov	w19, #0x54                  	// #84
  4194dc:	bl	4027c0 <__errno_location@plt>
  4194e0:	mov	x1, x0
  4194e4:	ldp	x21, x22, [sp, #32]
  4194e8:	mov	w0, #0x0                   	// #0
  4194ec:	ldp	x23, x24, [sp, #48]
  4194f0:	ldp	x25, x26, [sp, #64]
  4194f4:	ldr	x27, [sp, #80]
  4194f8:	str	w19, [x1]
  4194fc:	ldp	x19, x20, [sp, #16]
  419500:	ldp	x29, x30, [sp], #96
  419504:	ret
  419508:	cmp	x20, #0x1
  41950c:	sub	x6, x22, #0x1
  419510:	add	x2, x21, #0x1
  419514:	b.ls	419570 <ferror@plt+0x16cf0>  // b.plast
  419518:	cmp	x23, #0x0
  41951c:	lsr	w1, w5, #8
  419520:	cset	w3, ne  // ne = any
  419524:	cset	w0, eq  // eq = none
  419528:	sub	x20, x20, #0x2
  41952c:	strb	w5, [x4, w3, uxtw]
  419530:	strb	w1, [x4, w0, uxtw]
  419534:	cbnz	x6, 419598 <ferror@plt+0x16d18>
  419538:	ldr	x3, [x19, #8]
  41953c:	ldp	x21, x22, [sp, #32]
  419540:	sub	x3, x3, x20
  419544:	ldp	x23, x24, [sp, #48]
  419548:	ldp	x25, x26, [sp, #64]
  41954c:	ldr	x27, [sp, #80]
  419550:	str	x3, [x19, #16]
  419554:	mov	w0, #0x1                   	// #1
  419558:	ldp	x19, x20, [sp, #16]
  41955c:	ldp	x29, x30, [sp], #96
  419560:	ret
  419564:	cmp	x20, #0x1
  419568:	b.hi	419518 <ferror@plt+0x16c98>  // b.pmore
  41956c:	nop
  419570:	ldp	x0, x1, [x19]
  419574:	add	x20, x20, #0x100
  419578:	add	x1, x1, #0x100
  41957c:	str	x1, [x19, #8]
  419580:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  419584:	str	x0, [x19]
  419588:	ldr	x4, [x19, #8]
  41958c:	sub	x4, x4, x20
  419590:	add	x4, x0, x4
  419594:	b	41948c <ferror@plt+0x16c0c>
  419598:	add	x4, x4, #0x2
  41959c:	mov	x22, x6
  4195a0:	mov	x21, x2
  4195a4:	b	41948c <ferror@plt+0x16c0c>
  4195a8:	mov	w1, #0x1                   	// #1
  4195ac:	mov	w7, w1
  4195b0:	mov	w8, w1
  4195b4:	mov	w9, w1
  4195b8:	mov	w0, w1
  4195bc:	mov	x6, #0x6                   	// #6
  4195c0:	cmp	x22, x6
  4195c4:	b.cc	4197b0 <ferror@plt+0x16f30>  // b.lo, b.ul, b.last
  4195c8:	ldrb	w5, [x21, #1]
  4195cc:	and	w3, w3, w0
  4195d0:	add	x2, x21, #0x2
  4195d4:	and	w0, w5, #0xc0
  4195d8:	cmp	w0, #0x80
  4195dc:	b.ne	4194d8 <ferror@plt+0x16c58>  // b.any
  4195e0:	and	w5, w5, #0x3f
  4195e4:	cmp	x6, #0x2
  4195e8:	add	w5, w5, w3, lsl #6
  4195ec:	b.eq	419678 <ferror@plt+0x16df8>  // b.none
  4195f0:	ldrb	w0, [x21, #2]
  4195f4:	add	x2, x21, #0x3
  4195f8:	and	w3, w0, #0xc0
  4195fc:	cmp	w3, #0x80
  419600:	b.ne	4194d8 <ferror@plt+0x16c58>  // b.any
  419604:	and	w0, w0, #0x3f
  419608:	cmp	x6, #0x3
  41960c:	add	w5, w0, w5, lsl #6
  419610:	b.eq	419678 <ferror@plt+0x16df8>  // b.none
  419614:	ldrb	w0, [x21, #3]
  419618:	add	x2, x21, #0x4
  41961c:	and	w3, w0, #0xc0
  419620:	cmp	w3, #0x80
  419624:	b.ne	4194d8 <ferror@plt+0x16c58>  // b.any
  419628:	and	w0, w0, #0x3f
  41962c:	cmp	x6, #0x4
  419630:	add	w5, w0, w5, lsl #6
  419634:	b.eq	419678 <ferror@plt+0x16df8>  // b.none
  419638:	ldrb	w0, [x21, #4]
  41963c:	add	x2, x21, #0x5
  419640:	and	w3, w0, #0xc0
  419644:	cmp	w3, #0x80
  419648:	b.ne	4194d8 <ferror@plt+0x16c58>  // b.any
  41964c:	and	w0, w0, #0x3f
  419650:	cmp	x6, #0x5
  419654:	add	w5, w0, w5, lsl #6
  419658:	b.eq	419678 <ferror@plt+0x16df8>  // b.none
  41965c:	ldrb	w0, [x21, #5]
  419660:	add	x2, x21, #0x6
  419664:	and	w3, w0, #0xc0
  419668:	cmp	w3, #0x80
  41966c:	b.ne	4194d8 <ferror@plt+0x16c58>  // b.any
  419670:	and	w0, w0, #0x3f
  419674:	add	w5, w0, w5, lsl #6
  419678:	sub	w0, w5, #0x80
  41967c:	cmp	w0, w25
  419680:	b.cs	4194d8 <ferror@plt+0x16c58>  // b.hs, b.nlast
  419684:	cmp	w5, #0x7ff
  419688:	ccmp	w9, #0x0, #0x4, ls  // ls = plast
  41968c:	b.ne	4194d8 <ferror@plt+0x16c58>  // b.any
  419690:	cmp	w8, #0x0
  419694:	ccmp	w5, w26, #0x2, ne  // ne = any
  419698:	b.ls	4194d8 <ferror@plt+0x16c58>  // b.plast
  41969c:	cmp	w7, #0x0
  4196a0:	ccmp	w5, w27, #0x2, ne  // ne = any
  4196a4:	b.ls	4194d8 <ferror@plt+0x16c58>  // b.plast
  4196a8:	cmp	w1, #0x0
  4196ac:	mov	w0, #0x3ffffff             	// #67108863
  4196b0:	ccmp	w5, w0, #0x2, ne  // ne = any
  4196b4:	b.ls	4194d8 <ferror@plt+0x16c58>  // b.plast
  4196b8:	mov	w3, #0xffff2800            	// #-55296
  4196bc:	add	w0, w5, w3
  4196c0:	cmp	w0, #0x7ff
  4196c4:	b.ls	4194d8 <ferror@plt+0x16c58>  // b.plast
  4196c8:	mov	w0, #0x10ffff              	// #1114111
  4196cc:	sub	x6, x22, x6
  4196d0:	cmp	w5, w0
  4196d4:	b.hi	4194d8 <ferror@plt+0x16c58>  // b.pmore
  4196d8:	cmp	w5, w26
  4196dc:	b.ls	419564 <ferror@plt+0x16ce4>  // b.plast
  4196e0:	cmp	x20, #0x3
  4196e4:	b.ls	419570 <ferror@plt+0x16cf0>  // b.plast
  4196e8:	and	w0, w5, #0x3ff
  4196ec:	sub	w3, w5, #0x10, lsl #12
  4196f0:	mov	w1, #0xdc00                	// #56320
  4196f4:	add	w1, w0, w1
  4196f8:	mov	w5, #0xd800                	// #55296
  4196fc:	and	w0, w0, #0xff
  419700:	add	w3, w5, w3, lsr #10
  419704:	lsr	w1, w1, #8
  419708:	cbz	x23, 419734 <ferror@plt+0x16eb4>
  41970c:	rev16	w3, w3
  419710:	strh	w3, [x4]
  419714:	strb	w0, [x4, #3]
  419718:	strb	w1, [x4, x24]
  41971c:	sub	x20, x20, #0x4
  419720:	cbz	x6, 419538 <ferror@plt+0x16cb8>
  419724:	add	x4, x4, #0x4
  419728:	mov	x22, x6
  41972c:	mov	x21, x2
  419730:	b	41948c <ferror@plt+0x16c0c>
  419734:	strh	w3, [x4]
  419738:	strb	w0, [x4, #2]
  41973c:	b	419718 <ferror@plt+0x16e98>
  419740:	mov	w1, #0x0                   	// #0
  419744:	mov	w7, #0x0                   	// #0
  419748:	mov	w8, #0x0                   	// #0
  41974c:	mov	w9, #0x0                   	// #0
  419750:	mov	x6, #0x2                   	// #2
  419754:	mov	w0, #0x1f                  	// #31
  419758:	b	4195c0 <ferror@plt+0x16d40>
  41975c:	mov	w1, #0x0                   	// #0
  419760:	mov	w7, #0x0                   	// #0
  419764:	mov	w8, #0x0                   	// #0
  419768:	mov	w9, #0x1                   	// #1
  41976c:	mov	x6, #0x3                   	// #3
  419770:	mov	w0, #0xf                   	// #15
  419774:	b	4195c0 <ferror@plt+0x16d40>
  419778:	mov	w8, #0x1                   	// #1
  41977c:	mov	w1, #0x0                   	// #0
  419780:	mov	w9, w8
  419784:	mov	w7, #0x0                   	// #0
  419788:	mov	x6, #0x4                   	// #4
  41978c:	mov	w0, #0x7                   	// #7
  419790:	b	4195c0 <ferror@plt+0x16d40>
  419794:	mov	w7, #0x1                   	// #1
  419798:	mov	w1, #0x0                   	// #0
  41979c:	mov	w8, w7
  4197a0:	mov	w9, w7
  4197a4:	mov	x6, #0x5                   	// #5
  4197a8:	mov	w0, #0x3                   	// #3
  4197ac:	b	4195c0 <ferror@plt+0x16d40>
  4197b0:	mov	w19, #0x16                  	// #22
  4197b4:	b	4194dc <ferror@plt+0x16c5c>
  4197b8:	stp	x29, x30, [sp, #-80]!
  4197bc:	mov	x29, sp
  4197c0:	stp	x19, x20, [sp, #16]
  4197c4:	mov	x19, x3
  4197c8:	mov	x20, x2
  4197cc:	ldr	x3, [x3]
  4197d0:	stp	x21, x22, [sp, #32]
  4197d4:	mov	x22, x0
  4197d8:	ldp	x5, x4, [x19, #8]
  4197dc:	mov	x21, x1
  4197e0:	stp	x25, x26, [sp, #64]
  4197e4:	mov	w25, #0x1fffff              	// #2097151
  4197e8:	stp	x23, x24, [sp, #48]
  4197ec:	mov	w23, #0x7fffff80            	// #2147483520
  4197f0:	mov	w24, #0xffff                	// #65535
  4197f4:	add	x3, x3, x4
  4197f8:	sub	x26, x5, x4
  4197fc:	cmp	x26, #0x3
  419800:	b.ls	41986c <ferror@plt+0x16fec>  // b.plast
  419804:	cbz	x20, 419898 <ferror@plt+0x17018>
  419808:	ldrb	w4, [x21]
  41980c:	cmp	w4, #0x7f
  419810:	mov	w5, w4
  419814:	b.ls	4198a0 <ferror@plt+0x17020>  // b.plast
  419818:	and	w0, w4, #0xffffffe0
  41981c:	cmp	w0, #0xc0
  419820:	b.eq	419a48 <ferror@plt+0x171c8>  // b.none
  419824:	and	w0, w4, #0xfffffff0
  419828:	cmp	w0, #0xe0
  41982c:	b.eq	419a64 <ferror@plt+0x171e4>  // b.none
  419830:	and	w0, w4, #0xfffffff8
  419834:	cmp	w0, #0xf0
  419838:	b.eq	419a80 <ferror@plt+0x17200>  // b.none
  41983c:	and	w0, w4, #0xfffffffc
  419840:	cmp	w0, #0xf8
  419844:	b.eq	419a9c <ferror@plt+0x1721c>  // b.none
  419848:	and	w0, w4, #0xfffffffe
  41984c:	cmp	w0, #0xfc
  419850:	b.eq	419918 <ferror@plt+0x17098>  // b.none
  419854:	mov	w19, #0x54                  	// #84
  419858:	bl	4027c0 <__errno_location@plt>
  41985c:	mov	x1, x0
  419860:	mov	w0, #0x0                   	// #0
  419864:	str	w19, [x1]
  419868:	b	419880 <ferror@plt+0x17000>
  41986c:	ldr	x3, [x19, #8]
  419870:	cbnz	x20, 4198f0 <ferror@plt+0x17070>
  419874:	sub	x3, x3, x26
  419878:	mov	w0, #0x1                   	// #1
  41987c:	str	x3, [x19, #16]
  419880:	ldp	x19, x20, [sp, #16]
  419884:	ldp	x21, x22, [sp, #32]
  419888:	ldp	x23, x24, [sp, #48]
  41988c:	ldp	x25, x26, [sp, #64]
  419890:	ldp	x29, x30, [sp], #80
  419894:	ret
  419898:	ldr	x3, [x19, #8]
  41989c:	b	419874 <ferror@plt+0x16ff4>
  4198a0:	sub	x20, x20, #0x1
  4198a4:	add	x21, x21, #0x1
  4198a8:	ubfx	x0, x5, #16, #8
  4198ac:	lsr	w2, w5, #24
  4198b0:	ubfx	x5, x5, #8, #8
  4198b4:	cbz	x22, 4198dc <ferror@plt+0x1705c>
  4198b8:	mov	x1, x3
  4198bc:	strb	w0, [x3, #1]
  4198c0:	strb	w5, [x3, #2]
  4198c4:	strb	w4, [x3, #3]
  4198c8:	strb	w2, [x1]
  4198cc:	sub	x26, x26, #0x4
  4198d0:	cbz	x20, 419898 <ferror@plt+0x17018>
  4198d4:	add	x3, x3, #0x4
  4198d8:	b	4197fc <ferror@plt+0x16f7c>
  4198dc:	add	x1, x3, #0x3
  4198e0:	strb	w4, [x3]
  4198e4:	strb	w5, [x3, #1]
  4198e8:	strb	w0, [x3, #2]
  4198ec:	b	4198c8 <ferror@plt+0x17048>
  4198f0:	ldr	x0, [x19]
  4198f4:	add	x1, x3, #0x100
  4198f8:	str	x1, [x19, #8]
  4198fc:	add	x26, x26, #0x100
  419900:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  419904:	str	x0, [x19]
  419908:	ldr	x3, [x19, #8]
  41990c:	sub	x3, x3, x26
  419910:	add	x3, x0, x3
  419914:	b	4197fc <ferror@plt+0x16f7c>
  419918:	mov	w6, #0x1                   	// #1
  41991c:	mov	w7, w6
  419920:	mov	w8, w6
  419924:	mov	w9, w6
  419928:	mov	w1, w6
  41992c:	mov	x0, #0x6                   	// #6
  419930:	cmp	x0, x20
  419934:	b.hi	419ab8 <ferror@plt+0x17238>  // b.pmore
  419938:	ldrb	w5, [x21, #1]
  41993c:	and	w4, w4, w1
  419940:	add	x2, x21, #0x2
  419944:	and	w1, w5, #0xc0
  419948:	cmp	w1, #0x80
  41994c:	b.ne	419854 <ferror@plt+0x16fd4>  // b.any
  419950:	and	w5, w5, #0x3f
  419954:	cmp	x0, #0x2
  419958:	add	w5, w5, w4, lsl #6
  41995c:	b.ls	4199e8 <ferror@plt+0x17168>  // b.plast
  419960:	ldrb	w1, [x21, #2]
  419964:	add	x2, x21, #0x3
  419968:	and	w4, w1, #0xc0
  41996c:	cmp	w4, #0x80
  419970:	b.ne	419854 <ferror@plt+0x16fd4>  // b.any
  419974:	and	w1, w1, #0x3f
  419978:	cmp	x0, #0x3
  41997c:	add	w5, w1, w5, lsl #6
  419980:	b.eq	4199e8 <ferror@plt+0x17168>  // b.none
  419984:	ldrb	w1, [x21, #3]
  419988:	add	x2, x21, #0x4
  41998c:	and	w4, w1, #0xc0
  419990:	cmp	w4, #0x80
  419994:	b.ne	419854 <ferror@plt+0x16fd4>  // b.any
  419998:	and	w1, w1, #0x3f
  41999c:	cmp	x0, #0x4
  4199a0:	add	w5, w1, w5, lsl #6
  4199a4:	b.eq	4199e8 <ferror@plt+0x17168>  // b.none
  4199a8:	ldrb	w1, [x21, #4]
  4199ac:	add	x2, x21, #0x5
  4199b0:	and	w4, w1, #0xc0
  4199b4:	cmp	w4, #0x80
  4199b8:	b.ne	419854 <ferror@plt+0x16fd4>  // b.any
  4199bc:	and	w1, w1, #0x3f
  4199c0:	cmp	x0, #0x5
  4199c4:	add	w5, w1, w5, lsl #6
  4199c8:	b.eq	4199e8 <ferror@plt+0x17168>  // b.none
  4199cc:	ldrb	w1, [x21, #5]
  4199d0:	add	x2, x21, #0x6
  4199d4:	and	w4, w1, #0xc0
  4199d8:	cmp	w4, #0x80
  4199dc:	b.ne	419854 <ferror@plt+0x16fd4>  // b.any
  4199e0:	and	w1, w1, #0x3f
  4199e4:	add	w5, w1, w5, lsl #6
  4199e8:	sub	w1, w5, #0x80
  4199ec:	cmp	w1, w23
  4199f0:	b.cs	419854 <ferror@plt+0x16fd4>  // b.hs, b.nlast
  4199f4:	cmp	w5, #0x7ff
  4199f8:	ccmp	w9, #0x0, #0x4, ls  // ls = plast
  4199fc:	b.ne	419854 <ferror@plt+0x16fd4>  // b.any
  419a00:	cmp	w8, #0x0
  419a04:	ccmp	w5, w24, #0x2, ne  // ne = any
  419a08:	b.ls	419854 <ferror@plt+0x16fd4>  // b.plast
  419a0c:	cmp	w7, #0x0
  419a10:	ccmp	w5, w25, #0x2, ne  // ne = any
  419a14:	b.ls	419854 <ferror@plt+0x16fd4>  // b.plast
  419a18:	cmp	w6, #0x0
  419a1c:	mov	w1, #0x3ffffff             	// #67108863
  419a20:	ccmp	w5, w1, #0x2, ne  // ne = any
  419a24:	b.ls	419854 <ferror@plt+0x16fd4>  // b.plast
  419a28:	mov	w1, #0xffff2800            	// #-55296
  419a2c:	add	w1, w5, w1
  419a30:	cmp	w1, #0x7ff
  419a34:	b.ls	419854 <ferror@plt+0x16fd4>  // b.plast
  419a38:	sub	x20, x20, x0
  419a3c:	mov	x21, x2
  419a40:	and	w4, w5, #0xff
  419a44:	b	4198a8 <ferror@plt+0x17028>
  419a48:	mov	w6, #0x0                   	// #0
  419a4c:	mov	w7, #0x0                   	// #0
  419a50:	mov	w8, #0x0                   	// #0
  419a54:	mov	w9, #0x0                   	// #0
  419a58:	mov	x0, #0x2                   	// #2
  419a5c:	mov	w1, #0x1f                  	// #31
  419a60:	b	419930 <ferror@plt+0x170b0>
  419a64:	mov	w6, #0x0                   	// #0
  419a68:	mov	w7, #0x0                   	// #0
  419a6c:	mov	w8, #0x0                   	// #0
  419a70:	mov	w9, #0x1                   	// #1
  419a74:	mov	x0, #0x3                   	// #3
  419a78:	mov	w1, #0xf                   	// #15
  419a7c:	b	419930 <ferror@plt+0x170b0>
  419a80:	mov	w8, #0x1                   	// #1
  419a84:	mov	w6, #0x0                   	// #0
  419a88:	mov	w9, w8
  419a8c:	mov	w7, #0x0                   	// #0
  419a90:	mov	x0, #0x4                   	// #4
  419a94:	mov	w1, #0x7                   	// #7
  419a98:	b	419930 <ferror@plt+0x170b0>
  419a9c:	mov	w7, #0x1                   	// #1
  419aa0:	mov	w6, #0x0                   	// #0
  419aa4:	mov	w8, w7
  419aa8:	mov	w9, w7
  419aac:	mov	x0, #0x5                   	// #5
  419ab0:	mov	w1, #0x3                   	// #3
  419ab4:	b	419930 <ferror@plt+0x170b0>
  419ab8:	mov	w19, #0x16                  	// #22
  419abc:	b	419858 <ferror@plt+0x16fd8>
  419ac0:	stp	x29, x30, [sp, #-96]!
  419ac4:	mov	x29, sp
  419ac8:	stp	x19, x20, [sp, #16]
  419acc:	mov	x19, x0
  419ad0:	stp	x23, x24, [sp, #48]
  419ad4:	ldrb	w24, [x0, #1242]
  419ad8:	ldr	x0, [x0, #1232]
  419adc:	stp	x21, x22, [sp, #32]
  419ae0:	cmp	x0, #0x1f
  419ae4:	ldr	x1, [x19, #1168]
  419ae8:	ldr	x21, [x19, #1176]
  419aec:	b.ls	419b08 <ferror@plt+0x17288>  // b.plast
  419af0:	cbz	w24, 419c50 <ferror@plt+0x173d0>
  419af4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419af8:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x116d8>
  419afc:	add	x0, x0, #0x790
  419b00:	add	x20, x20, #0xa78
  419b04:	b	419b1c <ferror@plt+0x1729c>
  419b08:	cmp	x0, #0xf
  419b0c:	b.hi	419c38 <ferror@plt+0x173b8>  // b.pmore
  419b10:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x116d8>
  419b14:	add	x20, x20, #0xa78
  419b18:	mov	x0, x20
  419b1c:	cmp	x1, #0x0
  419b20:	add	x23, x19, #0x208
  419b24:	csel	x1, x1, x20, ne  // ne = any
  419b28:	cmp	x21, #0x0
  419b2c:	csel	x21, x21, x0, ne  // ne = any
  419b30:	add	x8, sp, #0x40
  419b34:	mov	x2, x20
  419b38:	mov	x0, x19
  419b3c:	bl	4188c8 <ferror@plt+0x16048>
  419b40:	add	x22, x19, #0x220
  419b44:	ldp	x2, x3, [sp, #64]
  419b48:	stp	x2, x3, [x23]
  419b4c:	add	x8, sp, #0x40
  419b50:	ldr	x1, [sp, #80]
  419b54:	str	x1, [x23, #16]
  419b58:	ldr	x0, [x19, #1216]
  419b5c:	str	w0, [x19, #536]
  419b60:	mov	x2, x20
  419b64:	mov	x1, x20
  419b68:	mov	x0, x19
  419b6c:	bl	4188c8 <ferror@plt+0x16048>
  419b70:	ldp	x2, x3, [sp, #64]
  419b74:	stp	x2, x3, [x22]
  419b78:	ldr	x1, [sp, #80]
  419b7c:	str	x1, [x22, #16]
  419b80:	ldr	x0, [x19, #1216]
  419b84:	str	w0, [x19, #560]
  419b88:	cbz	w24, 419c64 <ferror@plt+0x173e4>
  419b8c:	add	x22, x19, #0x238
  419b90:	mov	x2, x20
  419b94:	add	x8, sp, #0x40
  419b98:	mov	x0, x19
  419b9c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419ba0:	add	x1, x1, #0x7b0
  419ba4:	bl	4188c8 <ferror@plt+0x16048>
  419ba8:	ldp	x4, x5, [sp, #64]
  419bac:	stp	x4, x5, [x22]
  419bb0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419bb4:	ldr	x3, [sp, #80]
  419bb8:	add	x1, x1, #0x790
  419bbc:	str	x3, [x22, #16]
  419bc0:	mov	w2, #0x10                  	// #16
  419bc4:	str	w2, [x19, #584]
  419bc8:	add	x22, x19, #0x250
  419bcc:	add	x8, sp, #0x40
  419bd0:	mov	x2, x20
  419bd4:	mov	x0, x19
  419bd8:	bl	4188c8 <ferror@plt+0x16048>
  419bdc:	ldp	x0, x1, [sp, #64]
  419be0:	stp	x0, x1, [x22]
  419be4:	add	x22, x19, #0x268
  419be8:	ldr	x1, [sp, #80]
  419bec:	str	x1, [x19, #608]
  419bf0:	mov	w0, #0x20                  	// #32
  419bf4:	str	w0, [x19, #608]
  419bf8:	add	x8, sp, #0x40
  419bfc:	mov	x2, x20
  419c00:	mov	x1, x21
  419c04:	mov	x0, x19
  419c08:	bl	4188c8 <ferror@plt+0x16048>
  419c0c:	ldp	x0, x1, [sp, #64]
  419c10:	stp	x0, x1, [x22]
  419c14:	ldr	x0, [sp, #80]
  419c18:	ldp	x21, x22, [sp, #32]
  419c1c:	ldp	x23, x24, [sp, #48]
  419c20:	str	x0, [x19, #632]
  419c24:	ldr	x0, [x19, #1232]
  419c28:	str	w0, [x19, #632]
  419c2c:	ldp	x19, x20, [sp, #16]
  419c30:	ldp	x29, x30, [sp], #96
  419c34:	ret
  419c38:	cbz	w24, 419ca4 <ferror@plt+0x17424>
  419c3c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419c40:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x116d8>
  419c44:	add	x0, x0, #0x7b0
  419c48:	add	x20, x20, #0xa78
  419c4c:	b	419b1c <ferror@plt+0x1729c>
  419c50:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419c54:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x116d8>
  419c58:	add	x0, x0, #0x7a0
  419c5c:	add	x20, x20, #0xa78
  419c60:	b	419b1c <ferror@plt+0x1729c>
  419c64:	add	x22, x19, #0x238
  419c68:	mov	x2, x20
  419c6c:	add	x8, sp, #0x40
  419c70:	mov	x0, x19
  419c74:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419c78:	add	x1, x1, #0x7c0
  419c7c:	bl	4188c8 <ferror@plt+0x16048>
  419c80:	ldp	x4, x5, [sp, #64]
  419c84:	stp	x4, x5, [x22]
  419c88:	mov	w2, #0x10                  	// #16
  419c8c:	ldr	x3, [sp, #80]
  419c90:	str	x3, [x22, #16]
  419c94:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419c98:	add	x1, x1, #0x7a0
  419c9c:	str	w2, [x19, #584]
  419ca0:	b	419bc8 <ferror@plt+0x17348>
  419ca4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419ca8:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x116d8>
  419cac:	add	x0, x0, #0x7c0
  419cb0:	add	x20, x20, #0xa78
  419cb4:	b	419b1c <ferror@plt+0x1729c>
  419cb8:	stp	x29, x30, [sp, #-32]!
  419cbc:	mov	x29, sp
  419cc0:	stp	x19, x20, [sp, #16]
  419cc4:	mov	x19, x0
  419cc8:	adrp	x20, 418000 <ferror@plt+0x15780>
  419ccc:	ldr	x0, [x0, #520]
  419cd0:	add	x20, x20, #0xb20
  419cd4:	cmp	x0, x20
  419cd8:	b.eq	419d18 <ferror@plt+0x17498>  // b.none
  419cdc:	ldr	x0, [x19, #544]
  419ce0:	cmp	x0, x20
  419ce4:	b.eq	419d30 <ferror@plt+0x174b0>  // b.none
  419ce8:	ldr	x0, [x19, #568]
  419cec:	cmp	x0, x20
  419cf0:	b.eq	419d48 <ferror@plt+0x174c8>  // b.none
  419cf4:	ldr	x0, [x19, #592]
  419cf8:	cmp	x0, x20
  419cfc:	b.eq	419d60 <ferror@plt+0x174e0>  // b.none
  419d00:	ldr	x0, [x19, #616]
  419d04:	cmp	x0, x20
  419d08:	b.eq	419d74 <ferror@plt+0x174f4>  // b.none
  419d0c:	ldp	x19, x20, [sp, #16]
  419d10:	ldp	x29, x30, [sp], #32
  419d14:	ret
  419d18:	ldr	x0, [x19, #528]
  419d1c:	bl	4022d0 <iconv_close@plt>
  419d20:	ldr	x0, [x19, #544]
  419d24:	cmp	x0, x20
  419d28:	b.ne	419ce8 <ferror@plt+0x17468>  // b.any
  419d2c:	nop
  419d30:	ldr	x0, [x19, #552]
  419d34:	bl	4022d0 <iconv_close@plt>
  419d38:	ldr	x0, [x19, #568]
  419d3c:	cmp	x0, x20
  419d40:	b.ne	419cf4 <ferror@plt+0x17474>  // b.any
  419d44:	nop
  419d48:	ldr	x0, [x19, #576]
  419d4c:	bl	4022d0 <iconv_close@plt>
  419d50:	ldr	x0, [x19, #592]
  419d54:	cmp	x0, x20
  419d58:	b.ne	419d00 <ferror@plt+0x17480>  // b.any
  419d5c:	nop
  419d60:	ldr	x0, [x19, #600]
  419d64:	bl	4022d0 <iconv_close@plt>
  419d68:	ldr	x0, [x19, #616]
  419d6c:	cmp	x0, x20
  419d70:	b.ne	419d0c <ferror@plt+0x1748c>  // b.any
  419d74:	ldr	x0, [x19, #624]
  419d78:	ldp	x19, x20, [sp, #16]
  419d7c:	ldp	x29, x30, [sp], #32
  419d80:	b	4022d0 <iconv_close@plt>
  419d84:	nop
  419d88:	stp	x29, x30, [sp, #-80]!
  419d8c:	cmp	w1, #0x7e
  419d90:	mov	x29, sp
  419d94:	stp	x19, x20, [sp, #16]
  419d98:	mov	w19, w1
  419d9c:	b.hi	419e40 <ferror@plt+0x175c0>  // b.pmore
  419da0:	mov	x20, x0
  419da4:	str	x21, [sp, #32]
  419da8:	mov	x21, #0x1                   	// #1
  419dac:	mov	x0, x21
  419db0:	strb	w1, [sp, #48]
  419db4:	str	x21, [sp, #64]
  419db8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  419dbc:	str	x0, [sp, #56]
  419dc0:	mov	x2, x21
  419dc4:	ldr	x4, [x20, #520]
  419dc8:	str	xzr, [sp, #72]
  419dcc:	ldr	x0, [x20, #528]
  419dd0:	add	x3, sp, #0x38
  419dd4:	add	x1, sp, #0x30
  419dd8:	blr	x4
  419ddc:	tst	w0, #0xff
  419de0:	b.eq	419e68 <ferror@plt+0x175e8>  // b.none
  419de4:	ldr	x0, [sp, #72]
  419de8:	cmp	x0, #0x1
  419dec:	b.ne	419e10 <ferror@plt+0x17590>  // b.any
  419df0:	ldr	x0, [sp, #56]
  419df4:	ldrb	w19, [x0]
  419df8:	bl	402640 <free@plt>
  419dfc:	ldr	x21, [sp, #32]
  419e00:	mov	w0, w19
  419e04:	ldp	x19, x20, [sp, #16]
  419e08:	ldp	x29, x30, [sp], #80
  419e0c:	ret
  419e10:	mov	w3, w19
  419e14:	mov	x0, x20
  419e18:	mov	w1, #0x4                   	// #4
  419e1c:	mov	w19, #0x0                   	// #0
  419e20:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419e24:	add	x2, x2, #0x838
  419e28:	bl	422e10 <ferror@plt+0x20590>
  419e2c:	mov	w0, w19
  419e30:	ldp	x19, x20, [sp, #16]
  419e34:	ldr	x21, [sp, #32]
  419e38:	ldp	x29, x30, [sp], #80
  419e3c:	ret
  419e40:	mov	w3, w1
  419e44:	mov	w19, #0x0                   	// #0
  419e48:	mov	w1, #0x4                   	// #4
  419e4c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419e50:	add	x2, x2, #0x7d0
  419e54:	bl	422e10 <ferror@plt+0x20590>
  419e58:	mov	w0, w19
  419e5c:	ldp	x19, x20, [sp, #16]
  419e60:	ldp	x29, x30, [sp], #80
  419e64:	ret
  419e68:	mov	x0, x20
  419e6c:	mov	w1, #0x4                   	// #4
  419e70:	mov	w19, #0x0                   	// #0
  419e74:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  419e78:	add	x2, x2, #0x810
  419e7c:	bl	423628 <ferror@plt+0x20da8>
  419e80:	mov	w0, w19
  419e84:	ldp	x19, x20, [sp, #16]
  419e88:	ldr	x21, [sp, #32]
  419e8c:	ldp	x29, x30, [sp], #80
  419e90:	ret
  419e94:	nop
  419e98:	stp	x29, x30, [sp, #-32]!
  419e9c:	adrp	x1, 475000 <_obstack_memory_used@@Base+0x186d8>
  419ea0:	mov	x29, sp
  419ea4:	str	x19, [sp, #16]
  419ea8:	mov	x19, x0
  419eac:	ldr	d0, [x1, #2240]
  419eb0:	mov	x0, #0x40                  	// #64
  419eb4:	str	xzr, [x19]
  419eb8:	str	d0, [x19, #8]
  419ebc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  419ec0:	str	x0, [x19]
  419ec4:	ldr	x19, [sp, #16]
  419ec8:	ldp	x29, x30, [sp], #32
  419ecc:	ret
  419ed0:	ldr	x0, [x0]
  419ed4:	b	402640 <free@plt>
  419ed8:	stp	x29, x30, [sp, #-32]!
  419edc:	mov	x29, sp
  419ee0:	stp	x19, x20, [sp, #16]
  419ee4:	mov	x20, x1
  419ee8:	mov	x19, x0
  419eec:	ldp	w2, w1, [x0, #8]
  419ef0:	ldr	x0, [x0]
  419ef4:	cmp	w2, w1
  419ef8:	b.ge	419f14 <ferror@plt+0x17694>  // b.tcont
  419efc:	add	w1, w2, #0x1
  419f00:	str	w1, [x19, #8]
  419f04:	str	x20, [x0, w2, sxtw #3]
  419f08:	ldp	x19, x20, [sp, #16]
  419f0c:	ldp	x29, x30, [sp], #32
  419f10:	ret
  419f14:	lsl	w1, w1, #1
  419f18:	str	w1, [x19, #12]
  419f1c:	sbfiz	x1, x1, #3, #32
  419f20:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  419f24:	ldr	w2, [x19, #8]
  419f28:	str	x0, [x19]
  419f2c:	add	w1, w2, #0x1
  419f30:	str	w1, [x19, #8]
  419f34:	str	x20, [x0, w2, sxtw #3]
  419f38:	ldp	x19, x20, [sp, #16]
  419f3c:	ldp	x29, x30, [sp], #32
  419f40:	ret
  419f44:	nop
  419f48:	cmp	w1, #0x0
  419f4c:	b.le	41a018 <ferror@plt+0x17798>
  419f50:	stp	x29, x30, [sp, #-64]!
  419f54:	mov	x29, sp
  419f58:	ldp	w3, w5, [x0, #8]
  419f5c:	stp	x21, x22, [sp, #32]
  419f60:	mov	x21, x0
  419f64:	ldr	x0, [x0]
  419f68:	mov	x22, x2
  419f6c:	stp	x23, x24, [sp, #48]
  419f70:	mov	w23, w1
  419f74:	mov	w24, #0x60000000            	// #1610612736
  419f78:	stp	x19, x20, [sp, #16]
  419f7c:	mov	w20, #0x0                   	// #0
  419f80:	ldr	w19, [x22]
  419f84:	add	w4, w3, #0x1
  419f88:	cmp	w19, w24
  419f8c:	b.hi	419f9c <ferror@plt+0x1771c>  // b.pmore
  419f90:	ldr	w2, [x22, #4]
  419f94:	add	w2, w2, w19
  419f98:	str	w2, [x22]
  419f9c:	dup	v0.2s, w19
  419fa0:	cmp	w3, w5
  419fa4:	b.ge	419fd8 <ferror@plt+0x17758>  // b.tcont
  419fa8:	str	w4, [x21, #8]
  419fac:	add	w20, w20, #0x1
  419fb0:	cmp	w23, w20
  419fb4:	str	d0, [x0, w3, sxtw #3]
  419fb8:	b.eq	419fc4 <ferror@plt+0x17744>  // b.none
  419fbc:	mov	w3, w4
  419fc0:	b	419f80 <ferror@plt+0x17700>
  419fc4:	ldp	x19, x20, [sp, #16]
  419fc8:	ldp	x21, x22, [sp, #32]
  419fcc:	ldp	x23, x24, [sp, #48]
  419fd0:	ldp	x29, x30, [sp], #64
  419fd4:	ret
  419fd8:	lsl	w5, w5, #1
  419fdc:	str	w5, [x21, #12]
  419fe0:	add	w20, w20, #0x1
  419fe4:	sbfiz	x1, x5, #3, #32
  419fe8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  419fec:	str	x0, [x21]
  419ff0:	ldr	w1, [x21, #8]
  419ff4:	dup	v0.2s, w19
  419ff8:	cmp	w23, w20
  419ffc:	add	w4, w1, #0x1
  41a000:	str	w4, [x21, #8]
  41a004:	str	d0, [x0, w1, sxtw #3]
  41a008:	b.eq	419fc4 <ferror@plt+0x17744>  // b.none
  41a00c:	ldr	w5, [x21, #12]
  41a010:	mov	w3, w4
  41a014:	b	419f80 <ferror@plt+0x17700>
  41a018:	ret
  41a01c:	nop
  41a020:	stp	x29, x30, [sp, #-112]!
  41a024:	mov	x29, sp
  41a028:	stp	x19, x20, [sp, #16]
  41a02c:	mov	x20, x1
  41a030:	mov	x19, x5
  41a034:	stp	x21, x22, [sp, #32]
  41a038:	stp	x23, x24, [sp, #48]
  41a03c:	mov	x23, x0
  41a040:	mov	w24, w3
  41a044:	stp	x25, x26, [sp, #64]
  41a048:	stp	x27, x28, [sp, #80]
  41a04c:	mov	x28, x2
  41a050:	mov	x27, x7
  41a054:	ldrb	w1, [x0, #1120]
  41a058:	ldr	x26, [x20]
  41a05c:	str	x4, [sp, #96]
  41a060:	sub	x25, x26, #0x2
  41a064:	cbnz	w1, 41a07c <ferror@plt+0x177fc>
  41a068:	ldrb	w1, [x0, #1152]
  41a06c:	cbz	w1, 41a5e8 <ferror@plt+0x17d68>
  41a070:	ldrsb	w1, [x0, #1198]
  41a074:	cmp	w1, #0x0
  41a078:	b.gt	41a604 <ferror@plt+0x17d84>
  41a07c:	ldrb	w0, [x23, #1138]
  41a080:	ldurb	w3, [x26, #-1]
  41a084:	cmp	w0, #0x0
  41a088:	ccmp	w24, #0x0, #0x0, ne  // ne = any
  41a08c:	b.eq	41a684 <ferror@plt+0x17e04>  // b.none
  41a090:	cmp	w3, #0x75
  41a094:	mov	w2, #0x4                   	// #4
  41a098:	b.eq	41a0a8 <ferror@plt+0x17828>  // b.none
  41a09c:	cmp	w3, #0x55
  41a0a0:	mov	w2, #0x8                   	// #8
  41a0a4:	b.ne	41a3e0 <ferror@plt+0x17b60>  // b.any
  41a0a8:	cbz	x27, 41a404 <ferror@plt+0x17b84>
  41a0ac:	ldrb	w1, [x26]
  41a0b0:	cbz	x6, 41a79c <ferror@plt+0x17f1c>
  41a0b4:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41a0b8:	add	x0, x0, #0x2c0
  41a0bc:	mov	x4, x1
  41a0c0:	ldrh	w1, [x0, x1, lsl #1]
  41a0c4:	tbz	w1, #8, 41a3a4 <ferror@plt+0x17b24>
  41a0c8:	ldr	w1, [x27]
  41a0cc:	mov	w3, #0x60000000            	// #1610612736
  41a0d0:	add	x22, x26, #0x1
  41a0d4:	cmp	w1, w3
  41a0d8:	b.ls	41a3d0 <ferror@plt+0x17b50>  // b.plast
  41a0dc:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  41a0e0:	add	x3, x3, #0xfa0
  41a0e4:	str	w1, [x6, #4]
  41a0e8:	cmp	x28, x22
  41a0ec:	ldrb	w1, [x3, w4, sxtw]
  41a0f0:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a0f4:	ldrb	w4, [x26, #1]
  41a0f8:	mov	x5, x4
  41a0fc:	ldrh	w4, [x0, x4, lsl #1]
  41a100:	tbz	w4, #8, 41a3a8 <ferror@plt+0x17b28>
  41a104:	ldr	w4, [x27]
  41a108:	mov	w7, #0x60000000            	// #1610612736
  41a10c:	add	x22, x26, #0x2
  41a110:	cmp	w4, w7
  41a114:	b.ls	41a560 <ferror@plt+0x17ce0>  // b.plast
  41a118:	ldrb	w21, [x3, w5, sxtw]
  41a11c:	cmp	x28, x22
  41a120:	str	w4, [x6, #4]
  41a124:	add	w1, w21, w1, lsl #4
  41a128:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a12c:	ldrb	w4, [x26, #2]
  41a130:	mov	x5, x4
  41a134:	ldrh	w4, [x0, x4, lsl #1]
  41a138:	tbz	w4, #8, 41a3a8 <ferror@plt+0x17b28>
  41a13c:	ldr	w4, [x27]
  41a140:	mov	w7, #0x60000000            	// #1610612736
  41a144:	add	x22, x26, #0x3
  41a148:	cmp	w4, w7
  41a14c:	b.ls	41a570 <ferror@plt+0x17cf0>  // b.plast
  41a150:	ldrb	w21, [x3, w5, sxtw]
  41a154:	cmp	x28, x22
  41a158:	str	w4, [x6, #4]
  41a15c:	add	w1, w21, w1, lsl #4
  41a160:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a164:	ldrb	w4, [x26, #3]
  41a168:	mov	x5, x4
  41a16c:	ldrh	w4, [x0, x4, lsl #1]
  41a170:	tbz	w4, #8, 41a3a8 <ferror@plt+0x17b28>
  41a174:	ldr	w4, [x27]
  41a178:	mov	w7, #0x60000000            	// #1610612736
  41a17c:	add	x22, x26, #0x4
  41a180:	cmp	w4, w7
  41a184:	b.ls	41a5c8 <ferror@plt+0x17d48>  // b.plast
  41a188:	ldrb	w21, [x3, w5, sxtw]
  41a18c:	cmp	w2, #0x4
  41a190:	str	w4, [x6, #4]
  41a194:	add	w21, w21, w1, lsl #4
  41a198:	b.eq	41a2a0 <ferror@plt+0x17a20>  // b.none
  41a19c:	cmp	x28, x22
  41a1a0:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a1a4:	ldrb	w2, [x26, #4]
  41a1a8:	mov	x1, x2
  41a1ac:	ldrh	w2, [x0, x2, lsl #1]
  41a1b0:	tbz	w2, #8, 41a3a8 <ferror@plt+0x17b28>
  41a1b4:	ldr	w2, [x27]
  41a1b8:	mov	w4, #0x60000000            	// #1610612736
  41a1bc:	add	x22, x26, #0x5
  41a1c0:	cmp	w2, w4
  41a1c4:	b.hi	41a1d4 <ferror@plt+0x17954>  // b.pmore
  41a1c8:	ldr	w4, [x27, #4]
  41a1cc:	add	w4, w4, w2
  41a1d0:	str	w4, [x27]
  41a1d4:	ldrb	w1, [x3, w1, sxtw]
  41a1d8:	cmp	x28, x22
  41a1dc:	str	w2, [x6, #4]
  41a1e0:	add	w21, w1, w21, lsl #4
  41a1e4:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a1e8:	ldrb	w1, [x26, #5]
  41a1ec:	mov	x2, x1
  41a1f0:	ldrh	w1, [x0, x1, lsl #1]
  41a1f4:	tbz	w1, #8, 41a3a8 <ferror@plt+0x17b28>
  41a1f8:	ldr	w1, [x27]
  41a1fc:	mov	w4, #0x60000000            	// #1610612736
  41a200:	add	x22, x26, #0x6
  41a204:	cmp	w1, w4
  41a208:	b.hi	41a218 <ferror@plt+0x17998>  // b.pmore
  41a20c:	ldr	w4, [x27, #4]
  41a210:	add	w4, w4, w1
  41a214:	str	w4, [x27]
  41a218:	ldrb	w2, [x3, w2, sxtw]
  41a21c:	cmp	x28, x22
  41a220:	str	w1, [x6, #4]
  41a224:	add	w21, w2, w21, lsl #4
  41a228:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a22c:	ldrb	w1, [x26, #6]
  41a230:	mov	x2, x1
  41a234:	ldrh	w1, [x0, x1, lsl #1]
  41a238:	tbz	w1, #8, 41a3a8 <ferror@plt+0x17b28>
  41a23c:	ldr	w1, [x27]
  41a240:	mov	w4, #0x60000000            	// #1610612736
  41a244:	add	x22, x26, #0x7
  41a248:	cmp	w1, w4
  41a24c:	b.hi	41a25c <ferror@plt+0x179dc>  // b.pmore
  41a250:	ldr	w4, [x27, #4]
  41a254:	add	w4, w4, w1
  41a258:	str	w4, [x27]
  41a25c:	ldrb	w2, [x3, w2, sxtw]
  41a260:	cmp	x28, x22
  41a264:	str	w1, [x6, #4]
  41a268:	add	w21, w2, w21, lsl #4
  41a26c:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a270:	ldrb	w2, [x26, #7]
  41a274:	mov	x1, x2
  41a278:	ldrh	w0, [x0, x2, lsl #1]
  41a27c:	tbz	w0, #8, 41a3a8 <ferror@plt+0x17b28>
  41a280:	ldr	w0, [x27]
  41a284:	mov	w2, #0x60000000            	// #1610612736
  41a288:	add	x22, x26, #0x8
  41a28c:	cmp	w0, w2
  41a290:	b.ls	41a5d8 <ferror@plt+0x17d58>  // b.plast
  41a294:	ldrb	w1, [x3, w1, sxtw]
  41a298:	str	w0, [x6, #4]
  41a29c:	add	w21, w1, w21, lsl #4
  41a2a0:	str	x22, [x20]
  41a2a4:	cmp	w21, #0x9f
  41a2a8:	b.hi	41a538 <ferror@plt+0x17cb8>  // b.pmore
  41a2ac:	ldrb	w0, [x23, #1120]
  41a2b0:	cbz	w0, 41a624 <ferror@plt+0x17da4>
  41a2b4:	cmp	w24, #0x0
  41a2b8:	cset	w0, ne  // ne = any
  41a2bc:	cmp	w21, #0x24
  41a2c0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41a2c4:	b.eq	41a654 <ferror@plt+0x17dd4>  // b.none
  41a2c8:	ldrb	w0, [x23, #1146]
  41a2cc:	cbnz	w0, 41a6a8 <ferror@plt+0x17e28>
  41a2d0:	adrp	x4, 471000 <_obstack_memory_used@@Base+0x146d8>
  41a2d4:	mov	x1, #0x73c                 	// #1852
  41a2d8:	add	x4, x4, #0xed0
  41a2dc:	mov	w2, #0x0                   	// #0
  41a2e0:	b	41a304 <ferror@plt+0x17a84>
  41a2e4:	add	w0, w1, w2
  41a2e8:	add	w0, w0, w0, lsr #31
  41a2ec:	asr	w0, w0, #1
  41a2f0:	add	x3, x4, w0, sxtw #3
  41a2f4:	ldr	w3, [x3, #4]
  41a2f8:	cmp	w3, w21
  41a2fc:	b.cc	41a6d0 <ferror@plt+0x17e50>  // b.lo, b.ul, b.last
  41a300:	sxtw	x1, w0
  41a304:	cmp	w1, w2
  41a308:	b.ne	41a2e4 <ferror@plt+0x17a64>  // b.any
  41a30c:	ldrb	w2, [x23, #1154]
  41a310:	sbfiz	x0, x1, #3, #32
  41a314:	ldrh	w0, [x4, x0]
  41a318:	cbz	w2, 41a6d8 <ferror@plt+0x17e58>
  41a31c:	ldrb	w2, [x23, #1164]
  41a320:	cbnz	w2, 41a754 <ferror@plt+0x17ed4>
  41a324:	ldrb	w2, [x23, #1152]
  41a328:	cbnz	w2, 41a7fc <ferror@plt+0x17f7c>
  41a32c:	ldrb	w5, [x23, #1120]
  41a330:	mov	w2, #0x4                   	// #4
  41a334:	mov	w3, #0xd                   	// #13
  41a338:	mov	w26, #0x0                   	// #0
  41a33c:	cmp	w5, #0x0
  41a340:	csel	w2, w2, w3, ne  // ne = any
  41a344:	tst	w0, w2
  41a348:	b.eq	41a664 <ferror@plt+0x17de4>  // b.none
  41a34c:	add	x1, x4, x1, lsl #3
  41a350:	ldrb	w27, [x1, #2]
  41a354:	cbz	w27, 41a700 <ferror@plt+0x17e80>
  41a358:	ldr	x2, [sp, #96]
  41a35c:	ldrb	w1, [x2, #4]
  41a360:	cmp	w1, w27
  41a364:	b.ls	41a700 <ferror@plt+0x17e80>  // b.plast
  41a368:	mov	w0, #0x3                   	// #3
  41a36c:	str	w0, [x2, #8]
  41a370:	ldr	x0, [sp, #96]
  41a374:	strb	w27, [x0, #4]
  41a378:	cbz	w26, 41a5a4 <ferror@plt+0x17d24>
  41a37c:	cmp	w24, #0x1
  41a380:	b.ne	41a5a4 <ferror@plt+0x17d24>  // b.any
  41a384:	sub	w3, w22, w25
  41a388:	mov	x4, x25
  41a38c:	mov	x0, x23
  41a390:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a394:	mov	w1, #0x3                   	// #3
  41a398:	add	x2, x2, #0xa10
  41a39c:	bl	422e10 <ferror@plt+0x20590>
  41a3a0:	b	41a5a4 <ferror@plt+0x17d24>
  41a3a4:	mov	x22, x26
  41a3a8:	cbz	w24, 41a580 <ferror@plt+0x17d00>
  41a3ac:	str	wzr, [x19]
  41a3b0:	mov	w0, #0x0                   	// #0
  41a3b4:	ldp	x19, x20, [sp, #16]
  41a3b8:	ldp	x21, x22, [sp, #32]
  41a3bc:	ldp	x23, x24, [sp, #48]
  41a3c0:	ldp	x25, x26, [sp, #64]
  41a3c4:	ldp	x27, x28, [sp, #80]
  41a3c8:	ldp	x29, x30, [sp], #112
  41a3cc:	ret
  41a3d0:	ldr	w3, [x27, #4]
  41a3d4:	add	w3, w3, w1
  41a3d8:	str	w3, [x27]
  41a3dc:	b	41a0dc <ferror@plt+0x1785c>
  41a3e0:	mov	x0, x23
  41a3e4:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a3e8:	mov	w1, #0x4                   	// #4
  41a3ec:	add	x2, x2, #0x928
  41a3f0:	str	x6, [sp, #104]
  41a3f4:	bl	422e10 <ferror@plt+0x20590>
  41a3f8:	mov	w2, #0x4                   	// #4
  41a3fc:	ldr	x6, [sp, #104]
  41a400:	cbnz	x27, 41a0ac <ferror@plt+0x1782c>
  41a404:	ldrb	w3, [x26]
  41a408:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41a40c:	add	x0, x0, #0x2c0
  41a410:	mov	x1, x3
  41a414:	ldrh	w3, [x0, x3, lsl #1]
  41a418:	tbz	w3, #8, 41a3a4 <ferror@plt+0x17b24>
  41a41c:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  41a420:	add	x3, x3, #0xfa0
  41a424:	add	x22, x26, #0x1
  41a428:	cmp	x22, x28
  41a42c:	ldrb	w1, [x3, w1, sxtw]
  41a430:	b.cs	41a3a8 <ferror@plt+0x17b28>  // b.hs, b.nlast
  41a434:	ldrb	w5, [x26, #1]
  41a438:	mov	x4, x5
  41a43c:	ldrh	w5, [x0, x5, lsl #1]
  41a440:	tbz	w5, #8, 41a3a8 <ferror@plt+0x17b28>
  41a444:	ldrb	w4, [x3, w4, sxtw]
  41a448:	add	x22, x26, #0x2
  41a44c:	cmp	x22, x28
  41a450:	add	w1, w4, w1, lsl #4
  41a454:	b.cs	41a3a8 <ferror@plt+0x17b28>  // b.hs, b.nlast
  41a458:	ldrb	w5, [x26, #2]
  41a45c:	mov	x4, x5
  41a460:	ldrh	w5, [x0, x5, lsl #1]
  41a464:	tbz	w5, #8, 41a3a8 <ferror@plt+0x17b28>
  41a468:	ldrb	w21, [x3, w4, sxtw]
  41a46c:	add	x22, x26, #0x3
  41a470:	cmp	x28, x22
  41a474:	add	w1, w21, w1, lsl #4
  41a478:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a47c:	ldrb	w5, [x26, #3]
  41a480:	mov	x4, x5
  41a484:	ldrh	w5, [x0, x5, lsl #1]
  41a488:	tbz	w5, #8, 41a3a8 <ferror@plt+0x17b28>
  41a48c:	ldrb	w21, [x3, w4, sxtw]
  41a490:	cmp	w2, #0x4
  41a494:	add	x22, x26, #0x4
  41a498:	add	w21, w21, w1, lsl #4
  41a49c:	b.eq	41a2a0 <ferror@plt+0x17a20>  // b.none
  41a4a0:	cmp	x28, x22
  41a4a4:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a4a8:	ldrb	w2, [x26, #4]
  41a4ac:	mov	x1, x2
  41a4b0:	ldrh	w2, [x0, x2, lsl #1]
  41a4b4:	tbz	w2, #8, 41a3a8 <ferror@plt+0x17b28>
  41a4b8:	ldrb	w1, [x3, w1, sxtw]
  41a4bc:	add	x22, x26, #0x5
  41a4c0:	cmp	x28, x22
  41a4c4:	add	w1, w1, w21, lsl #4
  41a4c8:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a4cc:	ldrb	w4, [x26, #5]
  41a4d0:	mov	x2, x4
  41a4d4:	ldrh	w4, [x0, x4, lsl #1]
  41a4d8:	tbz	w4, #8, 41a3a8 <ferror@plt+0x17b28>
  41a4dc:	ldrb	w2, [x3, w2, sxtw]
  41a4e0:	add	x22, x26, #0x6
  41a4e4:	cmp	x28, x22
  41a4e8:	add	w1, w2, w1, lsl #4
  41a4ec:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a4f0:	ldrb	w4, [x26, #6]
  41a4f4:	mov	x2, x4
  41a4f8:	ldrh	w4, [x0, x4, lsl #1]
  41a4fc:	tbz	w4, #8, 41a3a8 <ferror@plt+0x17b28>
  41a500:	ldrb	w21, [x3, w2, sxtw]
  41a504:	add	x22, x26, #0x7
  41a508:	cmp	x28, x22
  41a50c:	add	w1, w21, w1, lsl #4
  41a510:	b.ls	41a3a8 <ferror@plt+0x17b28>  // b.plast
  41a514:	ldrb	w4, [x26, #7]
  41a518:	ldrh	w0, [x0, x4, lsl #1]
  41a51c:	tbz	w0, #8, 41a3a8 <ferror@plt+0x17b28>
  41a520:	ldrb	w21, [x3, w4, sxtw]
  41a524:	add	x22, x26, #0x8
  41a528:	str	x22, [x20]
  41a52c:	add	w21, w21, w1, lsl #4
  41a530:	cmp	w21, #0x9f
  41a534:	b.ls	41a2ac <ferror@plt+0x17a2c>  // b.plast
  41a538:	tbz	w21, #31, 41a63c <ferror@plt+0x17dbc>
  41a53c:	sub	w3, w22, w25
  41a540:	mov	x4, x25
  41a544:	mov	x0, x23
  41a548:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a54c:	mov	w1, #0x3                   	// #3
  41a550:	add	x2, x2, #0x970
  41a554:	mov	w21, #0x1                   	// #1
  41a558:	bl	422e10 <ferror@plt+0x20590>
  41a55c:	b	41a5a4 <ferror@plt+0x17d24>
  41a560:	ldr	w7, [x27, #4]
  41a564:	add	w7, w7, w4
  41a568:	str	w7, [x27]
  41a56c:	b	41a118 <ferror@plt+0x17898>
  41a570:	ldr	w7, [x27, #4]
  41a574:	add	w7, w7, w4
  41a578:	str	w7, [x27]
  41a57c:	b	41a150 <ferror@plt+0x178d0>
  41a580:	str	x22, [x20]
  41a584:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a588:	sub	w3, w22, w25
  41a58c:	mov	x4, x25
  41a590:	mov	x0, x23
  41a594:	add	x2, x2, #0xa58
  41a598:	mov	w1, #0x3                   	// #3
  41a59c:	mov	w21, #0x1                   	// #1
  41a5a0:	bl	422e10 <ferror@plt+0x20590>
  41a5a4:	str	w21, [x19]
  41a5a8:	mov	w0, #0x1                   	// #1
  41a5ac:	ldp	x19, x20, [sp, #16]
  41a5b0:	ldp	x21, x22, [sp, #32]
  41a5b4:	ldp	x23, x24, [sp, #48]
  41a5b8:	ldp	x25, x26, [sp, #64]
  41a5bc:	ldp	x27, x28, [sp, #80]
  41a5c0:	ldp	x29, x30, [sp], #112
  41a5c4:	ret
  41a5c8:	ldr	w7, [x27, #4]
  41a5cc:	add	w7, w7, w4
  41a5d0:	str	w7, [x27]
  41a5d4:	b	41a188 <ferror@plt+0x17908>
  41a5d8:	ldr	w2, [x27, #4]
  41a5dc:	add	w2, w2, w0
  41a5e0:	str	w2, [x27]
  41a5e4:	b	41a294 <ferror@plt+0x17a14>
  41a5e8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a5ec:	add	x2, x2, #0x878
  41a5f0:	str	x6, [sp, #104]
  41a5f4:	bl	422e10 <ferror@plt+0x20590>
  41a5f8:	ldurb	w3, [x26, #-1]
  41a5fc:	ldr	x6, [sp, #104]
  41a600:	b	41a090 <ferror@plt+0x17810>
  41a604:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a608:	mov	w1, #0x0                   	// #0
  41a60c:	add	x2, x2, #0x8b0
  41a610:	str	x6, [sp, #104]
  41a614:	bl	422e10 <ferror@plt+0x20590>
  41a618:	ldurb	w3, [x26, #-1]
  41a61c:	ldr	x6, [sp, #104]
  41a620:	b	41a090 <ferror@plt+0x17810>
  41a624:	and	w0, w21, #0xffffffdf
  41a628:	mov	w1, #0x24                  	// #36
  41a62c:	cmp	w0, #0x40
  41a630:	ccmp	w21, w1, #0x4, ne  // ne = any
  41a634:	b.eq	41a2b4 <ferror@plt+0x17a34>  // b.none
  41a638:	b	41a53c <ferror@plt+0x17cbc>
  41a63c:	mov	w0, #0xffff2800            	// #-55296
  41a640:	add	w0, w21, w0
  41a644:	cmp	w0, #0x7ff
  41a648:	b.ls	41a53c <ferror@plt+0x17cbc>  // b.plast
  41a64c:	cmp	w24, #0x0
  41a650:	cset	w0, ne  // ne = any
  41a654:	cbz	w0, 41a5a4 <ferror@plt+0x17d24>
  41a658:	mov	w0, #0x10ffff              	// #1114111
  41a65c:	cmp	w21, w0
  41a660:	b.ls	41a2d0 <ferror@plt+0x17a50>  // b.plast
  41a664:	sub	w3, w22, w25
  41a668:	mov	x4, x25
  41a66c:	mov	x0, x23
  41a670:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a674:	mov	w1, #0x3                   	// #3
  41a678:	add	x2, x2, #0x9d8
  41a67c:	bl	422e10 <ferror@plt+0x20590>
  41a680:	b	41a5a4 <ferror@plt+0x17d24>
  41a684:	mov	x0, x23
  41a688:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a68c:	mov	w1, #0x6                   	// #6
  41a690:	add	x2, x2, #0x8f0
  41a694:	str	x6, [sp, #104]
  41a698:	bl	422f30 <ferror@plt+0x206b0>
  41a69c:	ldurb	w3, [x26, #-1]
  41a6a0:	ldr	x6, [sp, #104]
  41a6a4:	b	41a090 <ferror@plt+0x17810>
  41a6a8:	ldrb	w0, [x23, #1148]
  41a6ac:	cbz	w0, 41a6b8 <ferror@plt+0x17e38>
  41a6b0:	ldrb	w0, [x23, #18]
  41a6b4:	cbz	w0, 41a760 <ferror@plt+0x17ee0>
  41a6b8:	ldr	x1, [sp, #96]
  41a6bc:	mov	w0, #0x24                  	// #36
  41a6c0:	mov	w21, w0
  41a6c4:	str	w0, [x1]
  41a6c8:	strb	wzr, [x1, #4]
  41a6cc:	b	41a5a4 <ferror@plt+0x17d24>
  41a6d0:	add	w2, w0, #0x1
  41a6d4:	b	41a304 <ferror@plt+0x17a84>
  41a6d8:	mov	w2, #0xd                   	// #13
  41a6dc:	tst	w0, w2
  41a6e0:	b.eq	41a664 <ferror@plt+0x17de4>  // b.none
  41a6e4:	ldrb	w2, [x23, #1164]
  41a6e8:	cbnz	w2, 41a758 <ferror@plt+0x17ed8>
  41a6ec:	ldrb	w2, [x23, #1152]
  41a6f0:	mov	w26, #0x0                   	// #0
  41a6f4:	cbz	w2, 41a34c <ferror@plt+0x17acc>
  41a6f8:	and	w26, w0, #0x2
  41a6fc:	b	41a34c <ferror@plt+0x17acc>
  41a700:	tbz	w0, #8, 41a77c <ferror@plt+0x17efc>
  41a704:	ldr	x1, [sp, #96]
  41a708:	mov	w18, #0xffffee9f            	// #-4449
  41a70c:	add	w0, w21, w18
  41a710:	cmp	w0, #0x14
  41a714:	ldr	w1, [x1]
  41a718:	b.hi	41a7c4 <ferror@plt+0x17f44>  // b.pmore
  41a71c:	mov	w17, #0xffffef00            	// #-4352
  41a720:	add	w1, w1, w17
  41a724:	cmp	w1, #0x12
  41a728:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41a72c:	ldr	x2, [sp, #96]
  41a730:	mov	w1, #0x2                   	// #2
  41a734:	ldr	w0, [x2, #8]
  41a738:	cmp	w0, w1
  41a73c:	csel	w0, w0, w1, ge  // ge = tcont
  41a740:	str	w0, [x2, #8]
  41a744:	cbnz	w27, 41a370 <ferror@plt+0x17af0>
  41a748:	ldr	x0, [sp, #96]
  41a74c:	str	w21, [x0]
  41a750:	b	41a370 <ferror@plt+0x17af0>
  41a754:	tbz	w0, #3, 41a664 <ferror@plt+0x17de4>
  41a758:	and	w26, w0, #0x10
  41a75c:	b	41a34c <ferror@plt+0x17acc>
  41a760:	strb	wzr, [x23, #1148]
  41a764:	mov	x0, x23
  41a768:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a76c:	mov	w1, #0x2                   	// #2
  41a770:	add	x2, x2, #0x998
  41a774:	bl	422e10 <ferror@plt+0x20590>
  41a778:	b	41a6b8 <ferror@plt+0x17e38>
  41a77c:	tbnz	w0, #7, 41a744 <ferror@plt+0x17ec4>
  41a780:	tbz	w0, #6, 41a808 <ferror@plt+0x17f88>
  41a784:	ldr	x1, [sp, #96]
  41a788:	ldr	w0, [x1, #8]
  41a78c:	cmp	w0, #0x0
  41a790:	csinc	w0, w0, wzr, gt
  41a794:	str	w0, [x1, #8]
  41a798:	b	41a744 <ferror@plt+0x17ec4>
  41a79c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41a7a0:	add	x0, x0, #0x2c0
  41a7a4:	ldrh	w0, [x0, x1, lsl #1]
  41a7a8:	tbz	w0, #8, 41a3a4 <ferror@plt+0x17b24>
  41a7ac:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a7b0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a7b4:	add	x2, x2, #0x948
  41a7b8:	add	x0, x0, #0x958
  41a7bc:	mov	w1, #0x434                 	// #1076
  41a7c0:	bl	4028b0 <ferror@plt+0x30>
  41a7c4:	mov	w16, #0xffffee58            	// #-4520
  41a7c8:	add	w0, w21, w16
  41a7cc:	cmp	w0, #0x1a
  41a7d0:	b.hi	41a81c <ferror@plt+0x17f9c>  // b.pmore
  41a7d4:	mov	w15, #0xffff5400            	// #-44032
  41a7d8:	add	w1, w1, w15
  41a7dc:	mov	w0, #0x2ba3                	// #11171
  41a7e0:	cmp	w1, w0
  41a7e4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41a7e8:	mov	w2, #0x1c                  	// #28
  41a7ec:	udiv	w0, w1, w2
  41a7f0:	msub	w0, w0, w2, w1
  41a7f4:	cbnz	w0, 41a744 <ferror@plt+0x17ec4>
  41a7f8:	b	41a72c <ferror@plt+0x17eac>
  41a7fc:	tbz	w0, #0, 41a664 <ferror@plt+0x17de4>
  41a800:	and	w26, w0, #0x2
  41a804:	b	41a34c <ferror@plt+0x17acc>
  41a808:	tbnz	w0, #5, 41a72c <ferror@plt+0x17eac>
  41a80c:	ldr	x1, [sp, #96]
  41a810:	mov	w0, #0x3                   	// #3
  41a814:	str	w0, [x1, #8]
  41a818:	b	41a744 <ferror@plt+0x17ec4>
  41a81c:	cmp	w21, #0x345
  41a820:	b.hi	41b060 <ferror@plt+0x187e0>  // b.pmore
  41a824:	cmp	w21, #0x2ff
  41a828:	b.ls	41aa90 <ferror@plt+0x18210>  // b.plast
  41a82c:	sub	w2, w21, #0x300
  41a830:	cmp	w2, #0x45
  41a834:	b.hi	41aa90 <ferror@plt+0x18210>  // b.pmore
  41a838:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41a83c:	add	x0, x0, #0xdc0
  41a840:	ldrh	w0, [x0, w2, uxtw #1]
  41a844:	adr	x2, 41a850 <ferror@plt+0x17fd0>
  41a848:	add	x0, x2, w0, sxth #2
  41a84c:	br	x0
  41a850:	sub	w1, w1, #0x41
  41a854:	cmp	w1, #0x34
  41a858:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41a85c:	mov	x2, #0x4111                	// #16657
  41a860:	mov	x0, #0x1                   	// #1
  41a864:	movk	x2, #0x12, lsl #16
  41a868:	lsl	x1, x0, x1
  41a86c:	movk	x2, #0x4111, lsl #32
  41a870:	movk	x2, #0x12, lsl #48
  41a874:	tst	x1, x2
  41a878:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41a87c:	ldr	x1, [sp, #96]
  41a880:	mov	w0, #0x3                   	// #3
  41a884:	str	w0, [x1, #8]
  41a888:	b	41a744 <ferror@plt+0x17ec4>
  41a88c:	sub	w1, w1, #0x41
  41a890:	cmp	w1, #0x38
  41a894:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41a898:	mov	x2, #0x1                   	// #1
  41a89c:	mov	x0, #0x1                   	// #1
  41a8a0:	movk	x2, #0x10, lsl #16
  41a8a4:	lsl	x1, x0, x1
  41a8a8:	movk	x2, #0x1, lsl #32
  41a8ac:	movk	x2, #0x150, lsl #48
  41a8b0:	tst	x1, x2
  41a8b4:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41a8b8:	b	41a87c <ferror@plt+0x17ffc>
  41a8bc:	cmp	w1, #0x7a
  41a8c0:	b.hi	41bebc <ferror@plt+0x1963c>  // b.pmore
  41a8c4:	cmp	w1, #0x40
  41a8c8:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41a8cc:	mov	x2, #0x6ddd                	// #28125
  41a8d0:	sub	w1, w1, #0x41
  41a8d4:	movk	x2, #0x21e, lsl #16
  41a8d8:	mov	x0, #0x1                   	// #1
  41a8dc:	movk	x2, #0x6fdd, lsl #32
  41a8e0:	lsl	x1, x0, x1
  41a8e4:	movk	x2, #0x21e, lsl #48
  41a8e8:	tst	x1, x2
  41a8ec:	b.ne	41a87c <ferror@plt+0x17ffc>  // b.any
  41a8f0:	b	41a744 <ferror@plt+0x17ec4>
  41a8f4:	cmp	w1, #0x75
  41a8f8:	b.hi	41b95c <ferror@plt+0x190dc>  // b.pmore
  41a8fc:	cmp	w1, #0x4e
  41a900:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41a904:	sub	w1, w1, #0x4f
  41a908:	mov	x0, #0x1                   	// #1
  41a90c:	mov	x2, #0x41                  	// #65
  41a910:	movk	x2, #0x41, lsl #32
  41a914:	lsl	x1, x0, x1
  41a918:	tst	x1, x2
  41a91c:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41a920:	b	41a87c <ferror@plt+0x17ffc>
  41a924:	cmp	w1, #0x75
  41a928:	b.hi	41b9ec <ferror@plt+0x1916c>  // b.pmore
  41a92c:	cmp	w1, #0x40
  41a930:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41a934:	mov	x2, #0x4111                	// #16657
  41a938:	sub	w1, w1, #0x41
  41a93c:	movk	x2, #0x12, lsl #16
  41a940:	mov	x0, #0x1                   	// #1
  41a944:	movk	x2, #0x4111, lsl #32
  41a948:	lsl	x1, x0, x1
  41a94c:	movk	x2, #0x12, lsl #48
  41a950:	tst	x1, x2
  41a954:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41a958:	b	41a87c <ferror@plt+0x17ffc>
  41a95c:	cmp	w1, #0x456
  41a960:	b.hi	41b5bc <ferror@plt+0x18d3c>  // b.pmore
  41a964:	cmp	w1, #0x3b8
  41a968:	b.hi	41af60 <ferror@plt+0x186e0>  // b.pmore
  41a96c:	cmp	w1, #0x79
  41a970:	b.hi	41b96c <ferror@plt+0x190ec>  // b.pmore
  41a974:	cmp	w1, #0x40
  41a978:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41a97c:	mov	x2, #0x4191                	// #16785
  41a980:	sub	w1, w1, #0x41
  41a984:	movk	x2, #0x1d0, lsl #16
  41a988:	mov	x0, #0x1                   	// #1
  41a98c:	movk	x2, #0x4191, lsl #32
  41a990:	lsl	x1, x0, x1
  41a994:	movk	x2, #0x1d8, lsl #48
  41a998:	tst	x1, x2
  41a99c:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41a9a0:	b	41a87c <ferror@plt+0x17ffc>
  41a9a4:	cmp	w1, #0x79
  41a9a8:	b.hi	41b9fc <ferror@plt+0x1917c>  // b.pmore
  41a9ac:	cmp	w1, #0x40
  41a9b0:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41a9b4:	mov	x2, #0x4111                	// #16657
  41a9b8:	sub	w1, w1, #0x41
  41a9bc:	movk	x2, #0x110, lsl #16
  41a9c0:	mov	x0, #0x1                   	// #1
  41a9c4:	movk	x2, #0x4111, lsl #32
  41a9c8:	lsl	x1, x0, x1
  41a9cc:	movk	x2, #0x110, lsl #48
  41a9d0:	tst	x1, x2
  41a9d4:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41a9d8:	b	41a87c <ferror@plt+0x17ffc>
  41a9dc:	cmp	w1, #0x7a
  41a9e0:	b.hi	41b718 <ferror@plt+0x18e98>  // b.pmore
  41a9e4:	cmp	w1, #0x40
  41a9e8:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41a9ec:	mov	x2, #0xf1ff                	// #61951
  41a9f0:	sub	w1, w1, #0x41
  41a9f4:	movk	x2, #0x3ce, lsl #16
  41a9f8:	mov	x0, #0x1                   	// #1
  41a9fc:	movk	x2, #0xf0ff, lsl #32
  41aa00:	lsl	x1, x0, x1
  41aa04:	movk	x2, #0x3ce, lsl #48
  41aa08:	tst	x1, x2
  41aa0c:	b.ne	41a87c <ferror@plt+0x17ffc>  // b.any
  41aa10:	b	41a744 <ferror@plt+0x17ec4>
  41aa14:	cmp	w1, #0x3c5
  41aa18:	b.hi	41b770 <ferror@plt+0x18ef0>  // b.pmore
  41aa1c:	cmp	w1, #0x390
  41aa20:	b.hi	41afa8 <ferror@plt+0x18728>  // b.pmore
  41aa24:	cmp	w1, #0x75
  41aa28:	b.hi	41b538 <ferror@plt+0x18cb8>  // b.pmore
  41aa2c:	cmp	w1, #0x40
  41aa30:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41aa34:	mov	x2, #0x4151                	// #16721
  41aa38:	sub	w1, w1, #0x41
  41aa3c:	movk	x2, #0x10, lsl #16
  41aa40:	mov	x0, #0x1                   	// #1
  41aa44:	movk	x2, #0x4151, lsl #32
  41aa48:	lsl	x1, x0, x1
  41aa4c:	movk	x2, #0x10, lsl #48
  41aa50:	tst	x1, x2
  41aa54:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41aa58:	b	41a87c <ferror@plt+0x17ffc>
  41aa5c:	cmp	w1, #0x41a
  41aa60:	b.hi	41ba54 <ferror@plt+0x191d4>  // b.pmore
  41aa64:	cmp	w1, #0x390
  41aa68:	b.hi	41af84 <ferror@plt+0x18704>  // b.pmore
  41aa6c:	sub	w1, w1, #0x41
  41aa70:	cmp	w1, #0x16f
  41aa74:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41aa78:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41aa7c:	add	x0, x0, #0xe4c
  41aa80:	ldrh	w0, [x0, w1, uxtw #1]
  41aa84:	adr	x1, 41aa90 <ferror@plt+0x18210>
  41aa88:	add	x0, x1, w0, sxth #2
  41aa8c:	br	x0
  41aa90:	mov	w3, w21
  41aa94:	mov	x0, x23
  41aa98:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41aa9c:	mov	w1, #0x4                   	// #4
  41aaa0:	add	x2, x2, #0x9b8
  41aaa4:	bl	422e10 <ferror@plt+0x20590>
  41aaa8:	b	41a744 <ferror@plt+0x17ec4>
  41aaac:	cmp	w1, #0x3ce
  41aab0:	b.hi	41be0c <ferror@plt+0x1958c>  // b.pmore
  41aab4:	cmp	w1, #0x390
  41aab8:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41aabc:	mov	x2, #0x41                  	// #65
  41aac0:	sub	w1, w1, #0x391
  41aac4:	movk	x2, #0x2900, lsl #16
  41aac8:	mov	x0, #0x1                   	// #1
  41aacc:	movk	x2, #0x41, lsl #32
  41aad0:	lsl	x1, x0, x1
  41aad4:	movk	x2, #0x2100, lsl #48
  41aad8:	tst	x1, x2
  41aadc:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41aae0:	b	41a87c <ferror@plt+0x17ffc>
  41aae4:	mov	w0, #0x1ffe                	// #8190
  41aae8:	cmp	w1, w0
  41aaec:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41aaf0:	mov	w0, #0x1eff                	// #7935
  41aaf4:	cmp	w1, w0
  41aaf8:	b.hi	41aff4 <ferror@plt+0x18774>  // b.pmore
  41aafc:	cmp	w1, #0xa8
  41ab00:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41ab04:	sub	w2, w1, #0x3b1
  41ab08:	cmp	w2, #0x1a
  41ab0c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ab10:	mov	x1, #0x1                   	// #1
  41ab14:	mov	x0, #0x141                 	// #321
  41ab18:	movk	x0, #0x710, lsl #16
  41ab1c:	lsl	x1, x1, x2
  41ab20:	tst	x1, x0
  41ab24:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41ab28:	b	41a87c <ferror@plt+0x17ffc>
  41ab2c:	cmp	w1, #0x79
  41ab30:	b.hi	41bae0 <ferror@plt+0x19260>  // b.pmore
  41ab34:	cmp	w1, #0x40
  41ab38:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ab3c:	mov	x2, #0x6111                	// #24849
  41ab40:	sub	w1, w1, #0x41
  41ab44:	movk	x2, #0x130, lsl #16
  41ab48:	mov	x0, #0x1                   	// #1
  41ab4c:	movk	x2, #0x6111, lsl #32
  41ab50:	lsl	x1, x0, x1
  41ab54:	movk	x2, #0x130, lsl #48
  41ab58:	tst	x1, x2
  41ab5c:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41ab60:	b	41a87c <ferror@plt+0x17ffc>
  41ab64:	cmp	w1, #0x21f
  41ab68:	b.hi	41b548 <ferror@plt+0x18cc8>  // b.pmore
  41ab6c:	cmp	w1, #0x42
  41ab70:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ab74:	sub	w1, w1, #0x43
  41ab78:	cmp	w1, #0x1dc
  41ab7c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ab80:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x136d8>
  41ab84:	add	x0, x0, #0x12c
  41ab88:	ldrh	w0, [x0, w1, uxtw #1]
  41ab8c:	adr	x1, 41ab98 <ferror@plt+0x18318>
  41ab90:	add	x0, x1, w0, sxth #2
  41ab94:	br	x0
  41ab98:	cmp	w1, #0x3cb
  41ab9c:	b.hi	41b58c <ferror@plt+0x18d0c>  // b.pmore
  41aba0:	cmp	w1, #0x390
  41aba4:	b.hi	41aef0 <ferror@plt+0x18670>  // b.pmore
  41aba8:	cmp	w1, #0x113
  41abac:	b.hi	41be50 <ferror@plt+0x195d0>  // b.pmore
  41abb0:	cmp	w1, #0x40
  41abb4:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41abb8:	sub	w1, w1, #0x41
  41abbc:	cmp	w1, #0xd2
  41abc0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41abc4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x136d8>
  41abc8:	add	x0, x0, #0x4e8
  41abcc:	ldrh	w0, [x0, w1, uxtw #1]
  41abd0:	adr	x1, 41abdc <ferror@plt+0x1835c>
  41abd4:	add	x0, x1, w0, sxth #2
  41abd8:	br	x0
  41abdc:	cmp	w1, #0x130
  41abe0:	b.hi	41bbec <ferror@plt+0x1936c>  // b.pmore
  41abe4:	cmp	w1, #0xf8
  41abe8:	b.hi	41af38 <ferror@plt+0x186b8>  // b.pmore
  41abec:	cmp	w1, #0x75
  41abf0:	b.hi	41bbc4 <ferror@plt+0x19344>  // b.pmore
  41abf4:	cmp	w1, #0x44
  41abf8:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41abfc:	mov	x2, #0x11                  	// #17
  41ac00:	sub	w1, w1, #0x45
  41ac04:	movk	x2, #0x1, lsl #16
  41ac08:	mov	x0, #0x1                   	// #1
  41ac0c:	movk	x2, #0x11, lsl #32
  41ac10:	lsl	x1, x0, x1
  41ac14:	movk	x2, #0x1, lsl #48
  41ac18:	tst	x1, x2
  41ac1c:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41ac20:	b	41a87c <ferror@plt+0x17ffc>
  41ac24:	cmp	w1, #0x171
  41ac28:	b.hi	41bd00 <ferror@plt+0x19480>  // b.pmore
  41ac2c:	cmp	w1, #0x43
  41ac30:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ac34:	sub	w1, w1, #0x44
  41ac38:	cmp	w1, #0x12d
  41ac3c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ac40:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x136d8>
  41ac44:	add	x0, x0, #0x690
  41ac48:	ldrh	w0, [x0, w1, uxtw #1]
  41ac4c:	adr	x1, 41ac58 <ferror@plt+0x183d8>
  41ac50:	add	x0, x1, w0, sxth #2
  41ac54:	br	x0
  41ac58:	cmp	w1, #0x231
  41ac5c:	b.hi	41b7a8 <ferror@plt+0x18f28>  // b.pmore
  41ac60:	cmp	w1, #0xbf
  41ac64:	b.hi	41afd0 <ferror@plt+0x18750>  // b.pmore
  41ac68:	sub	w2, w1, #0x41
  41ac6c:	cmp	w2, #0x34
  41ac70:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ac74:	mov	x0, #0x4111                	// #16657
  41ac78:	mov	x1, #0x1                   	// #1
  41ac7c:	movk	x0, #0x10, lsl #16
  41ac80:	lsl	x1, x1, x2
  41ac84:	movk	x0, #0x4111, lsl #32
  41ac88:	movk	x0, #0x10, lsl #48
  41ac8c:	tst	x1, x0
  41ac90:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41ac94:	b	41a87c <ferror@plt+0x17ffc>
  41ac98:	cmp	w1, #0xfc
  41ac9c:	b.hi	41b650 <ferror@plt+0x18dd0>  // b.pmore
  41aca0:	cmp	w1, #0x40
  41aca4:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41aca8:	sub	w1, w1, #0x41
  41acac:	cmp	w1, #0xbb
  41acb0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41acb4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x136d8>
  41acb8:	add	x0, x0, #0x8ec
  41acbc:	ldrh	w0, [x0, w1, uxtw #1]
  41acc0:	adr	x1, 41accc <ferror@plt+0x1844c>
  41acc4:	add	x0, x1, w0, sxth #2
  41acc8:	br	x0
  41accc:	cmp	w1, #0x233
  41acd0:	b.hi	41b5d0 <ferror@plt+0x18d50>  // b.pmore
  41acd4:	cmp	w1, #0x40
  41acd8:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41acdc:	sub	w1, w1, #0x41
  41ace0:	cmp	w1, #0x1f2
  41ace4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ace8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x136d8>
  41acec:	add	x0, x0, #0xa64
  41acf0:	ldrh	w0, [x0, w1, uxtw #1]
  41acf4:	adr	x1, 41ad00 <ferror@plt+0x18480>
  41acf8:	add	x0, x1, w0, sxth #2
  41acfc:	br	x0
  41ad00:	cmp	w1, #0x7a
  41ad04:	b.hi	41bf0c <ferror@plt+0x1968c>  // b.pmore
  41ad08:	cmp	w1, #0x40
  41ad0c:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ad10:	sub	w1, w1, #0x41
  41ad14:	cmp	w1, #0x39
  41ad18:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ad1c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x136d8>
  41ad20:	add	x0, x0, #0xe4c
  41ad24:	ldrh	w0, [x0, w1, uxtw #1]
  41ad28:	adr	x1, 41ad34 <ferror@plt+0x184b4>
  41ad2c:	add	x0, x1, w0, sxth #2
  41ad30:	br	x0
  41ad34:	cmp	w1, #0x13e
  41ad38:	b.hi	41b4e8 <ferror@plt+0x18c68>  // b.pmore
  41ad3c:	cmp	w1, #0x10d
  41ad40:	b.hi	41b038 <ferror@plt+0x187b8>  // b.pmore
  41ad44:	cmp	w1, #0x7a
  41ad48:	b.hi	41b3d0 <ferror@plt+0x18b50>  // b.pmore
  41ad4c:	cmp	w1, #0x41
  41ad50:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ad54:	mov	x2, #0x1605                	// #5637
  41ad58:	sub	w1, w1, #0x42
  41ad5c:	movk	x2, #0x105, lsl #16
  41ad60:	mov	x0, #0x1                   	// #1
  41ad64:	movk	x2, #0x1645, lsl #32
  41ad68:	lsl	x1, x0, x1
  41ad6c:	movk	x2, #0x105, lsl #48
  41ad70:	tst	x1, x2
  41ad74:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41ad78:	b	41a87c <ferror@plt+0x17ffc>
  41ad7c:	cmp	w1, #0x1e1
  41ad80:	b.hi	41bb68 <ferror@plt+0x192e8>  // b.pmore
  41ad84:	cmp	w1, #0x1dd
  41ad88:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41ad8c:	cmp	w1, #0xe5
  41ad90:	b.hi	41bb54 <ferror@plt+0x192d4>  // b.pmore
  41ad94:	cmp	w1, #0xdf
  41ad98:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41ad9c:	cmp	w1, #0x61
  41ada0:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41ada4:	b.ls	41bb38 <ferror@plt+0x192b8>  // b.plast
  41ada8:	sub	w1, w1, #0xc0
  41adac:	cmp	w1, #0x5
  41adb0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41adb4:	b	41a87c <ferror@plt+0x17ffc>
  41adb8:	cmp	w1, #0x165
  41adbc:	b.hi	41be70 <ferror@plt+0x195f0>  // b.pmore
  41adc0:	cmp	w1, #0x159
  41adc4:	b.hi	41b01c <ferror@plt+0x1879c>  // b.pmore
  41adc8:	cmp	w1, #0x54
  41adcc:	b.hi	41bf50 <ferror@plt+0x196d0>  // b.pmore
  41add0:	cmp	w1, #0x52
  41add4:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41add8:	b	41a87c <ferror@plt+0x17ffc>
  41addc:	cmp	w1, #0x21f
  41ade0:	b.hi	41b31c <ferror@plt+0x18a9c>  // b.pmore
  41ade4:	cmp	w1, #0x21d
  41ade8:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41adec:	cmp	w1, #0x68
  41adf0:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41adf4:	b.ls	41b310 <ferror@plt+0x18a90>  // b.plast
  41adf8:	sub	w1, w1, #0x124
  41adfc:	cmp	w1, #0x1
  41ae00:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ae04:	b	41a87c <ferror@plt+0x17ffc>
  41ae08:	cmp	w1, #0x3c9
  41ae0c:	b.hi	41b5f8 <ferror@plt+0x18d78>  // b.pmore
  41ae10:	cmp	w1, #0x390
  41ae14:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ae18:	mov	x2, #0x4151                	// #16721
  41ae1c:	sub	w1, w1, #0x391
  41ae20:	movk	x2, #0x111, lsl #16
  41ae24:	mov	x0, #0x1                   	// #1
  41ae28:	movk	x2, #0x4151, lsl #32
  41ae2c:	lsl	x1, x0, x1
  41ae30:	movk	x2, #0x111, lsl #48
  41ae34:	tst	x1, x2
  41ae38:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41ae3c:	b	41a87c <ferror@plt+0x17ffc>
  41ae40:	cmp	w1, #0x3c9
  41ae44:	b.hi	41b3e0 <ferror@plt+0x18b60>  // b.pmore
  41ae48:	cmp	w1, #0x390
  41ae4c:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ae50:	mov	x2, #0x4151                	// #16721
  41ae54:	sub	w1, w1, #0x391
  41ae58:	movk	x2, #0x100, lsl #16
  41ae5c:	mov	x0, #0x1                   	// #1
  41ae60:	movk	x2, #0x4151, lsl #32
  41ae64:	lsl	x1, x0, x1
  41ae68:	movk	x2, #0x111, lsl #48
  41ae6c:	tst	x1, x2
  41ae70:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41ae74:	b	41a87c <ferror@plt+0x17ffc>
  41ae78:	cmp	w1, #0x171
  41ae7c:	b.hi	41b348 <ferror@plt+0x18ac8>  // b.pmore
  41ae80:	cmp	w1, #0x167
  41ae84:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41ae88:	cmp	w1, #0xdc
  41ae8c:	b.hi	41b338 <ferror@plt+0x18ab8>  // b.pmore
  41ae90:	cmp	w1, #0xd8
  41ae94:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41ae98:	and	w1, w1, #0xffffffdf
  41ae9c:	cmp	w1, #0x55
  41aea0:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41aea4:	b	41a87c <ferror@plt+0x17ffc>
  41aea8:	cmp	w1, #0x171
  41aeac:	b.hi	41b914 <ferror@plt+0x19094>  // b.pmore
  41aeb0:	cmp	w1, #0x167
  41aeb4:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41aeb8:	cmp	w1, #0xfc
  41aebc:	b.hi	41b904 <ferror@plt+0x19084>  // b.pmore
  41aec0:	cmp	w1, #0xd1
  41aec4:	b.hi	41af18 <ferror@plt+0x18698>  // b.pmore
  41aec8:	sub	w2, w1, #0x4f
  41aecc:	cmp	w2, #0x26
  41aed0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41aed4:	mov	x1, #0x1                   	// #1
  41aed8:	mov	x0, #0x41                  	// #65
  41aedc:	movk	x0, #0x41, lsl #32
  41aee0:	lsl	x1, x1, x2
  41aee4:	tst	x1, x0
  41aee8:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41aeec:	b	41a87c <ferror@plt+0x17ffc>
  41aef0:	mov	x2, #0x4151                	// #16721
  41aef4:	sub	w1, w1, #0x391
  41aef8:	movk	x2, #0x110, lsl #16
  41aefc:	mov	x0, #0x1                   	// #1
  41af00:	movk	x2, #0x4151, lsl #32
  41af04:	lsl	x1, x0, x1
  41af08:	movk	x2, #0x710, lsl #48
  41af0c:	tst	x1, x2
  41af10:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41af14:	b	41a87c <ferror@plt+0x17ffc>
  41af18:	sub	w1, w1, #0xd2
  41af1c:	mov	x0, #0x1                   	// #1
  41af20:	mov	x2, #0x79f                 	// #1951
  41af24:	movk	x2, #0x79f, lsl #32
  41af28:	lsl	x1, x0, x1
  41af2c:	tst	x1, x2
  41af30:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41af34:	b	41a87c <ferror@plt+0x17ffc>
  41af38:	mov	x2, #0xf                   	// #15
  41af3c:	sub	w1, w1, #0xf9
  41af40:	movk	x2, #0x7e00, lsl #16
  41af44:	mov	x0, #0x1                   	// #1
  41af48:	movk	x2, #0x8006, lsl #32
  41af4c:	lsl	x1, x0, x1
  41af50:	movk	x2, #0x9f, lsl #48
  41af54:	tst	x1, x2
  41af58:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41af5c:	b	41a87c <ferror@plt+0x17ffc>
  41af60:	sub	w1, w1, #0x3b9
  41af64:	cmp	w1, #0x9d
  41af68:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41af6c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x136d8>
  41af70:	add	x0, x0, #0xec0
  41af74:	ldrh	w0, [x0, w1, uxtw #1]
  41af78:	adr	x1, 41af84 <ferror@plt+0x18704>
  41af7c:	add	x0, x1, w0, sxth #2
  41af80:	br	x0
  41af84:	sub	w1, w1, #0x391
  41af88:	cmp	w1, #0x89
  41af8c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41af90:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x136d8>
  41af94:	add	x0, x0, #0xffc
  41af98:	ldrh	w0, [x0, w1, uxtw #1]
  41af9c:	adr	x1, 41afa8 <ferror@plt+0x18728>
  41afa0:	add	x0, x1, w0, sxth #2
  41afa4:	br	x0
  41afa8:	mov	x2, #0x101                 	// #257
  41afac:	sub	w1, w1, #0x391
  41afb0:	movk	x2, #0x10, lsl #16
  41afb4:	mov	x0, #0x1                   	// #1
  41afb8:	movk	x2, #0x101, lsl #32
  41afbc:	lsl	x1, x0, x1
  41afc0:	movk	x2, #0x10, lsl #48
  41afc4:	tst	x1, x2
  41afc8:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41afcc:	b	41a87c <ferror@plt+0x17ffc>
  41afd0:	sub	w1, w1, #0xc0
  41afd4:	cmp	w1, #0x171
  41afd8:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41afdc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x146d8>
  41afe0:	add	x0, x0, #0x110
  41afe4:	ldrh	w0, [x0, w1, uxtw #1]
  41afe8:	adr	x1, 41aff4 <ferror@plt+0x18774>
  41afec:	add	x0, x1, w0, sxth #2
  41aff0:	br	x0
  41aff4:	mov	w7, #0xffffe100            	// #-7936
  41aff8:	add	w1, w1, w7
  41affc:	cmp	w1, #0xfe
  41b000:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b004:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x146d8>
  41b008:	add	x0, x0, #0x3f4
  41b00c:	ldrh	w0, [x0, w1, uxtw #1]
  41b010:	adr	x1, 41b01c <ferror@plt+0x1879c>
  41b014:	add	x0, x1, w0, sxth #2
  41b018:	br	x0
  41b01c:	sub	w1, w1, #0x15a
  41b020:	mov	x0, #0x1                   	// #1
  41b024:	mov	x2, #0xccf                 	// #3279
  41b028:	lsl	x1, x0, x1
  41b02c:	tst	x1, x2
  41b030:	b.ne	41a87c <ferror@plt+0x17ffc>  // b.any
  41b034:	b	41a744 <ferror@plt+0x17ec4>
  41b038:	mov	x2, #0x3                   	// #3
  41b03c:	sub	w1, w1, #0x10e
  41b040:	movk	x2, #0x80, lsl #16
  41b044:	mov	x0, #0x1                   	// #1
  41b048:	movk	x2, #0x9800, lsl #32
  41b04c:	lsl	x1, x0, x1
  41b050:	movk	x2, #0x1, lsl #48
  41b054:	tst	x1, x2
  41b058:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b05c:	b	41a87c <ferror@plt+0x17ffc>
  41b060:	cmp	w21, #0xcd5
  41b064:	b.eq	41b098 <ferror@plt+0x18818>  // b.none
  41b068:	b.hi	41b170 <ferror@plt+0x188f0>  // b.pmore
  41b06c:	cmp	w21, #0xb3e
  41b070:	b.eq	41b2f8 <ferror@plt+0x18a78>  // b.none
  41b074:	b.ls	41b0f0 <ferror@plt+0x18870>  // b.plast
  41b078:	cmp	w21, #0xbd7
  41b07c:	b.eq	41b3bc <ferror@plt+0x18b3c>  // b.none
  41b080:	b.ls	41b0d0 <ferror@plt+0x18850>  // b.plast
  41b084:	cmp	w21, #0xc56
  41b088:	b.ne	41b0bc <ferror@plt+0x1883c>  // b.any
  41b08c:	cmp	w1, #0xc46
  41b090:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b094:	b	41a87c <ferror@plt+0x17ffc>
  41b098:	sub	w0, w1, #0xcbf
  41b09c:	cmp	w0, #0xb
  41b0a0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b0a4:	mov	x1, #0x1                   	// #1
  41b0a8:	mov	x2, #0x881                 	// #2177
  41b0ac:	lsl	x1, x1, x0
  41b0b0:	tst	x1, x2
  41b0b4:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b0b8:	b	41a87c <ferror@plt+0x17ffc>
  41b0bc:	cmp	w21, #0xcc2
  41b0c0:	b.ne	41aa90 <ferror@plt+0x18210>  // b.any
  41b0c4:	cmp	w1, #0xcc6
  41b0c8:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b0cc:	b	41a87c <ferror@plt+0x17ffc>
  41b0d0:	cmp	w21, #0xb57
  41b0d4:	b.eq	41b470 <ferror@plt+0x18bf0>  // b.none
  41b0d8:	cmp	w21, #0xbbe
  41b0dc:	b.ne	41b278 <ferror@plt+0x189f8>  // b.any
  41b0e0:	sub	w1, w1, #0xbc6
  41b0e4:	cmp	w1, #0x1
  41b0e8:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b0ec:	b	41a87c <ferror@plt+0x17ffc>
  41b0f0:	cmp	w21, #0x93c
  41b0f4:	b.eq	41b110 <ferror@plt+0x18890>  // b.none
  41b0f8:	b.ls	41b14c <ferror@plt+0x188cc>  // b.plast
  41b0fc:	cmp	w21, #0x9be
  41b100:	b.ne	41b138 <ferror@plt+0x188b8>  // b.any
  41b104:	cmp	w1, #0x9c7
  41b108:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b10c:	b	41a87c <ferror@plt+0x17ffc>
  41b110:	sub	w1, w1, #0x915
  41b114:	cmp	w1, #0x1e
  41b118:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b11c:	mov	x0, #0x1                   	// #1
  41b120:	mov	x2, #0x3087                	// #12423
  41b124:	movk	x2, #0x4c48, lsl #16
  41b128:	lsl	x1, x0, x1
  41b12c:	tst	x1, x2
  41b130:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b134:	b	41a87c <ferror@plt+0x17ffc>
  41b138:	cmp	w21, #0x9d7
  41b13c:	b.ne	41aa90 <ferror@plt+0x18210>  // b.any
  41b140:	cmp	w1, #0x9c7
  41b144:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b148:	b	41a87c <ferror@plt+0x17ffc>
  41b14c:	cmp	w21, #0x654
  41b150:	b.eq	41b4b8 <ferror@plt+0x18c38>  // b.none
  41b154:	cmp	w21, #0x655
  41b158:	b.ne	41b2c0 <ferror@plt+0x18a40>  // b.any
  41b15c:	cmp	w1, #0x623
  41b160:	b.hi	41b304 <ferror@plt+0x18a84>  // b.pmore
  41b164:	cmp	w1, #0x621
  41b168:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b16c:	b	41a87c <ferror@plt+0x17ffc>
  41b170:	mov	w0, #0x102e                	// #4142
  41b174:	cmp	w21, w0
  41b178:	b.eq	41b3ac <ferror@plt+0x18b2c>  // b.none
  41b17c:	b.ls	41b254 <ferror@plt+0x189d4>  // b.plast
  41b180:	mov	w0, #0x309a                	// #12442
  41b184:	cmp	w21, w0
  41b188:	b.eq	41b438 <ferror@plt+0x18bb8>  // b.none
  41b18c:	b.ls	41b1e8 <ferror@plt+0x18968>  // b.plast
  41b190:	mov	w0, #0x10ba                	// #4282
  41b194:	movk	w0, #0x1, lsl #16
  41b198:	cmp	w21, w0
  41b19c:	b.eq	41b1c0 <ferror@plt+0x18940>  // b.none
  41b1a0:	add	w0, w0, #0x6d
  41b1a4:	cmp	w21, w0
  41b1a8:	b.ne	41aa90 <ferror@plt+0x18210>  // b.any
  41b1ac:	sub	w1, w1, #0x11, lsl #12
  41b1b0:	sub	w1, w1, #0x131
  41b1b4:	cmp	w1, #0x1
  41b1b8:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b1bc:	b	41a87c <ferror@plt+0x17ffc>
  41b1c0:	sub	w0, w1, #0x11, lsl #12
  41b1c4:	sub	w0, w0, #0x99
  41b1c8:	cmp	w0, #0xc
  41b1cc:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b1d0:	mov	x1, #0x1                   	// #1
  41b1d4:	mov	x2, #0x1005                	// #4101
  41b1d8:	lsl	x1, x1, x0
  41b1dc:	tst	x1, x2
  41b1e0:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b1e4:	b	41a87c <ferror@plt+0x17ffc>
  41b1e8:	mov	w0, #0x1b35                	// #6965
  41b1ec:	cmp	w21, w0
  41b1f0:	b.eq	41b228 <ferror@plt+0x189a8>  // b.none
  41b1f4:	mov	w0, #0x3099                	// #12441
  41b1f8:	cmp	w21, w0
  41b1fc:	b.ne	41aa90 <ferror@plt+0x18210>  // b.any
  41b200:	mov	w4, #0xffffcfba            	// #-12358
  41b204:	add	w1, w1, w4
  41b208:	cmp	w1, #0xb7
  41b20c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b210:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x146d8>
  41b214:	add	x2, x2, #0x5f4
  41b218:	ldrh	w0, [x2, w1, uxtw #1]
  41b21c:	adr	x1, 41b228 <ferror@plt+0x189a8>
  41b220:	add	x0, x1, w0, sxth #2
  41b224:	br	x0
  41b228:	mov	w5, #0xffffe4fb            	// #-6917
  41b22c:	add	w0, w1, w5
  41b230:	cmp	w0, #0x3d
  41b234:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b238:	mov	x1, #0x1                   	// #1
  41b23c:	mov	x2, #0x1155                	// #4437
  41b240:	movk	x2, #0x26a0, lsl #48
  41b244:	lsl	x1, x1, x0
  41b248:	tst	x1, x2
  41b24c:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b250:	b	41a87c <ferror@plt+0x17ffc>
  41b254:	cmp	w21, #0xdca
  41b258:	b.eq	41b4a4 <ferror@plt+0x18c24>  // b.none
  41b25c:	b.ls	41b2a4 <ferror@plt+0x18a24>  // b.plast
  41b260:	cmp	w21, #0xdcf
  41b264:	b.ne	41b28c <ferror@plt+0x18a0c>  // b.any
  41b268:	sub	w1, w1, #0xdd9
  41b26c:	cmp	w1, #0x1
  41b270:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b274:	b	41a87c <ferror@plt+0x17ffc>
  41b278:	cmp	w21, #0xb56
  41b27c:	b.ne	41aa90 <ferror@plt+0x18210>  // b.any
  41b280:	cmp	w1, #0xb47
  41b284:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b288:	b	41a87c <ferror@plt+0x17ffc>
  41b28c:	cmp	w21, #0xddf
  41b290:	b.ne	41aa90 <ferror@plt+0x18210>  // b.any
  41b294:	sub	w1, w1, #0xdd9
  41b298:	cmp	w1, #0x1
  41b29c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b2a0:	b	41a87c <ferror@plt+0x17ffc>
  41b2a4:	cmp	w21, #0xd3e
  41b2a8:	b.eq	41b2e8 <ferror@plt+0x18a68>  // b.none
  41b2ac:	cmp	w21, #0xd57
  41b2b0:	b.ne	41b2d4 <ferror@plt+0x18a54>  // b.any
  41b2b4:	cmp	w1, #0xd46
  41b2b8:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b2bc:	b	41a87c <ferror@plt+0x17ffc>
  41b2c0:	cmp	w21, #0x653
  41b2c4:	b.ne	41aa90 <ferror@plt+0x18210>  // b.any
  41b2c8:	cmp	w1, #0x627
  41b2cc:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b2d0:	b	41a87c <ferror@plt+0x17ffc>
  41b2d4:	cmp	w21, #0xcd6
  41b2d8:	b.ne	41aa90 <ferror@plt+0x18210>  // b.any
  41b2dc:	cmp	w1, #0xcc6
  41b2e0:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b2e4:	b	41a87c <ferror@plt+0x17ffc>
  41b2e8:	sub	w1, w1, #0xd46
  41b2ec:	cmp	w1, #0x1
  41b2f0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b2f4:	b	41a87c <ferror@plt+0x17ffc>
  41b2f8:	cmp	w1, #0xb47
  41b2fc:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b300:	b	41a87c <ferror@plt+0x17ffc>
  41b304:	cmp	w1, #0x627
  41b308:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41b30c:	b	41a744 <ferror@plt+0x17ec4>
  41b310:	cmp	w1, #0x48
  41b314:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b318:	b	41a87c <ferror@plt+0x17ffc>
  41b31c:	mov	w0, #0x1e23                	// #7715
  41b320:	cmp	w1, w0
  41b324:	b.hi	41b374 <ferror@plt+0x18af4>  // b.pmore
  41b328:	mov	w0, #0x1e21                	// #7713
  41b32c:	cmp	w1, w0
  41b330:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b334:	b	41a87c <ferror@plt+0x17ffc>
  41b338:	sub	w1, w1, #0xf9
  41b33c:	cmp	w1, #0x3
  41b340:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b344:	b	41a87c <ferror@plt+0x17ffc>
  41b348:	mov	w0, #0x1e7b                	// #7803
  41b34c:	cmp	w1, w0
  41b350:	b.hi	41b398 <ferror@plt+0x18b18>  // b.pmore
  41b354:	mov	w0, #0x1e77                	// #7799
  41b358:	cmp	w1, w0
  41b35c:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41b360:	cmp	w1, #0x1dc
  41b364:	b.hi	41b388 <ferror@plt+0x18b08>  // b.pmore
  41b368:	cmp	w1, #0x1d2
  41b36c:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b370:	b	41a87c <ferror@plt+0x17ffc>
  41b374:	mov	w13, #0xffffe1da            	// #-7718
  41b378:	add	w1, w1, w13
  41b37c:	cmp	w1, #0x1
  41b380:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b384:	b	41a87c <ferror@plt+0x17ffc>
  41b388:	sub	w1, w1, #0x214
  41b38c:	cmp	w1, #0x3
  41b390:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b394:	b	41a87c <ferror@plt+0x17ffc>
  41b398:	mov	w3, #0xffffe11a            	// #-7910
  41b39c:	add	w1, w1, w3
  41b3a0:	cmp	w1, #0x1
  41b3a4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b3a8:	b	41a87c <ferror@plt+0x17ffc>
  41b3ac:	mov	w0, #0x1025                	// #4133
  41b3b0:	cmp	w1, w0
  41b3b4:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b3b8:	b	41a87c <ferror@plt+0x17ffc>
  41b3bc:	cmp	w1, #0xb92
  41b3c0:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41b3c4:	cmp	w1, #0xbc6
  41b3c8:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b3cc:	b	41a87c <ferror@plt+0x17ffc>
  41b3d0:	and	w1, w1, #0xffffffdf
  41b3d4:	cmp	w1, #0xd1
  41b3d8:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b3dc:	b	41a87c <ferror@plt+0x17ffc>
  41b3e0:	mov	w0, #0x1ffc                	// #8188
  41b3e4:	cmp	w1, w0
  41b3e8:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b3ec:	mov	w0, #0x1fc2                	// #8130
  41b3f0:	cmp	w1, w0
  41b3f4:	b.hi	41b414 <ferror@plt+0x18b94>  // b.pmore
  41b3f8:	mov	w0, #0x1fb3                	// #8115
  41b3fc:	cmp	w1, w0
  41b400:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41b404:	mov	w0, #0x1fbc                	// #8124
  41b408:	cmp	w1, w0
  41b40c:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b410:	b	41a87c <ferror@plt+0x17ffc>
  41b414:	mov	w8, #0xffffe03d            	// #-8131
  41b418:	add	w1, w1, w8
  41b41c:	mov	x0, #0x1                   	// #1
  41b420:	mov	x2, #0x201                 	// #513
  41b424:	movk	x2, #0x201, lsl #48
  41b428:	lsl	x1, x0, x1
  41b42c:	tst	x1, x2
  41b430:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b434:	b	41a87c <ferror@plt+0x17ffc>
  41b438:	mov	w0, #0x307b                	// #12411
  41b43c:	cmp	w1, w0
  41b440:	b.hi	41b47c <ferror@plt+0x18bfc>  // b.pmore
  41b444:	mov	w0, #0x306e                	// #12398
  41b448:	cmp	w1, w0
  41b44c:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b450:	mov	w3, #0xffffcf91            	// #-12399
  41b454:	add	w2, w1, w3
  41b458:	mov	x1, #0x1                   	// #1
  41b45c:	mov	x0, #0x1249                	// #4681
  41b460:	lsl	x1, x1, x2
  41b464:	tst	x1, x0
  41b468:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b46c:	b	41a87c <ferror@plt+0x17ffc>
  41b470:	cmp	w1, #0xb47
  41b474:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b478:	b	41a87c <ferror@plt+0x17ffc>
  41b47c:	mov	w2, #0xffffcf31            	// #-12495
  41b480:	add	w2, w1, w2
  41b484:	cmp	w2, #0xc
  41b488:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b48c:	mov	x1, #0x1                   	// #1
  41b490:	mov	x0, #0x1249                	// #4681
  41b494:	lsl	x1, x1, x2
  41b498:	tst	x1, x0
  41b49c:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b4a0:	b	41a87c <ferror@plt+0x17ffc>
  41b4a4:	cmp	w1, #0xdd9
  41b4a8:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41b4ac:	cmp	w1, #0xddc
  41b4b0:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b4b4:	b	41a87c <ferror@plt+0x17ffc>
  41b4b8:	cmp	w1, #0x64a
  41b4bc:	b.hi	41bed4 <ferror@plt+0x19654>  // b.pmore
  41b4c0:	cmp	w1, #0x626
  41b4c4:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b4c8:	sub	w1, w1, #0x627
  41b4cc:	mov	x0, #0x1                   	// #1
  41b4d0:	mov	x2, #0x1                   	// #1
  41b4d4:	movk	x2, #0xa, lsl #32
  41b4d8:	lsl	x1, x0, x1
  41b4dc:	tst	x1, x2
  41b4e0:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b4e4:	b	41a87c <ferror@plt+0x17ffc>
  41b4e8:	mov	w0, #0x1e03                	// #7683
  41b4ec:	cmp	w1, w0
  41b4f0:	b.hi	41b884 <ferror@plt+0x19004>  // b.pmore
  41b4f4:	mov	w0, #0x1e01                	// #7681
  41b4f8:	cmp	w1, w0
  41b4fc:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41b500:	cmp	w1, #0x17e
  41b504:	b.hi	41b854 <ferror@plt+0x18fd4>  // b.pmore
  41b508:	cmp	w1, #0x142
  41b50c:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b510:	mov	x2, #0x33                  	// #51
  41b514:	sub	w1, w1, #0x143
  41b518:	movk	x2, #0x66, lsl #16
  41b51c:	mov	x0, #0x1                   	// #1
  41b520:	movk	x2, #0x6, lsl #32
  41b524:	lsl	x1, x0, x1
  41b528:	movk	x2, #0xfc0, lsl #48
  41b52c:	tst	x1, x2
  41b530:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b534:	b	41a87c <ferror@plt+0x17ffc>
  41b538:	sub	w1, w1, #0x228
  41b53c:	cmp	w1, #0x1
  41b540:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b544:	b	41a87c <ferror@plt+0x17ffc>
  41b548:	mov	w0, #0x1e3d                	// #7741
  41b54c:	cmp	w1, w0
  41b550:	b.hi	41bc28 <ferror@plt+0x193a8>  // b.pmore
  41b554:	mov	w0, #0x1e09                	// #7689
  41b558:	cmp	w1, w0
  41b55c:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b560:	mov	x2, #0xff3f                	// #65343
  41b564:	mov	w30, #0xffffe1f6            	// #-7690
  41b568:	movk	x2, #0x3fc3, lsl #16
  41b56c:	add	w1, w1, w30
  41b570:	mov	x0, #0x1                   	// #1
  41b574:	movk	x2, #0xffc3, lsl #32
  41b578:	movk	x2, #0xf, lsl #48
  41b57c:	lsl	x1, x0, x1
  41b580:	tst	x1, x2
  41b584:	b.ne	41a87c <ferror@plt+0x17ffc>  // b.any
  41b588:	b	41a744 <ferror@plt+0x17ec4>
  41b58c:	cmp	w1, #0x438
  41b590:	b.ls	41ba94 <ferror@plt+0x19214>  // b.plast
  41b594:	mov	w14, #0xffffe100            	// #-7936
  41b598:	add	w1, w1, w14
  41b59c:	cmp	w1, #0xfe
  41b5a0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b5a4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x146d8>
  41b5a8:	add	x0, x0, #0x764
  41b5ac:	ldrh	w0, [x0, w1, uxtw #1]
  41b5b0:	adr	x1, 41b5bc <ferror@plt+0x18d3c>
  41b5b4:	add	x0, x1, w0, sxth #2
  41b5b8:	br	x0
  41b5bc:	cmp	w1, #0x4d9
  41b5c0:	b.hi	41be9c <ferror@plt+0x1961c>  // b.pmore
  41b5c4:	cmp	w1, #0x4d7
  41b5c8:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b5cc:	b	41a87c <ferror@plt+0x17ffc>
  41b5d0:	mov	w4, #0xffffe1fe            	// #-7682
  41b5d4:	add	w1, w1, w4
  41b5d8:	cmp	w1, #0xf7
  41b5dc:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b5e0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x146d8>
  41b5e4:	add	x0, x0, #0x964
  41b5e8:	ldrh	w0, [x0, w1, uxtw #1]
  41b5ec:	adr	x1, 41b5f8 <ferror@plt+0x18d78>
  41b5f0:	add	x0, x1, w0, sxth #2
  41b5f4:	br	x0
  41b5f8:	mov	w0, #0x1ffc                	// #8188
  41b5fc:	cmp	w1, w0
  41b600:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b604:	mov	w0, #0x1fc2                	// #8130
  41b608:	cmp	w1, w0
  41b60c:	b.hi	41b62c <ferror@plt+0x18dac>  // b.pmore
  41b610:	mov	w0, #0x1fb3                	// #8115
  41b614:	cmp	w1, w0
  41b618:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41b61c:	mov	w0, #0x1fbc                	// #8124
  41b620:	cmp	w1, w0
  41b624:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b628:	b	41a87c <ferror@plt+0x17ffc>
  41b62c:	mov	w7, #0xffffe03d            	// #-8131
  41b630:	add	w1, w1, w7
  41b634:	mov	x0, #0x1                   	// #1
  41b638:	mov	x2, #0x201                 	// #513
  41b63c:	movk	x2, #0x201, lsl #48
  41b640:	lsl	x1, x0, x1
  41b644:	tst	x1, x2
  41b648:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b64c:	b	41a87c <ferror@plt+0x17ffc>
  41b650:	cmp	w1, #0x3c5
  41b654:	b.hi	41b6a8 <ferror@plt+0x18e28>  // b.pmore
  41b658:	cmp	w1, #0x390
  41b65c:	b.hi	41b680 <ferror@plt+0x18e00>  // b.pmore
  41b660:	cmp	w1, #0x227
  41b664:	b.hi	41b6e8 <ferror@plt+0x18e68>  // b.pmore
  41b668:	cmp	w1, #0x225
  41b66c:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41b670:	sub	w1, w1, #0x1ea
  41b674:	cmp	w1, #0x1
  41b678:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b67c:	b	41a87c <ferror@plt+0x17ffc>
  41b680:	mov	x2, #0x101                 	// #257
  41b684:	sub	w1, w1, #0x391
  41b688:	movk	x2, #0x10, lsl #16
  41b68c:	mov	x0, #0x1                   	// #1
  41b690:	movk	x2, #0x101, lsl #32
  41b694:	lsl	x1, x0, x1
  41b698:	movk	x2, #0x10, lsl #48
  41b69c:	tst	x1, x2
  41b6a0:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b6a4:	b	41a87c <ferror@plt+0x17ffc>
  41b6a8:	mov	w0, #0x1e37                	// #7735
  41b6ac:	cmp	w1, w0
  41b6b0:	b.hi	41b6f8 <ferror@plt+0x18e78>  // b.pmore
  41b6b4:	mov	w0, #0x1e35                	// #7733
  41b6b8:	cmp	w1, w0
  41b6bc:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41b6c0:	sub	w2, w1, #0x418
  41b6c4:	cmp	w2, #0x2b
  41b6c8:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b6cc:	mov	x1, #0x1                   	// #1
  41b6d0:	mov	x0, #0x801                 	// #2049
  41b6d4:	movk	x0, #0x801, lsl #32
  41b6d8:	lsl	x1, x1, x2
  41b6dc:	tst	x1, x0
  41b6e0:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b6e4:	b	41a87c <ferror@plt+0x17ffc>
  41b6e8:	sub	w1, w1, #0x22e
  41b6ec:	cmp	w1, #0x1
  41b6f0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b6f4:	b	41a87c <ferror@plt+0x17ffc>
  41b6f8:	mov	w0, #0x1fb3                	// #8115
  41b6fc:	cmp	w1, w0
  41b700:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41b704:	b.ls	41b748 <ferror@plt+0x18ec8>  // b.plast
  41b708:	mov	w0, #0x1fbc                	// #8124
  41b70c:	cmp	w1, w0
  41b710:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b714:	b	41a87c <ferror@plt+0x17ffc>
  41b718:	cmp	w1, #0x17f
  41b71c:	b.hi	41b75c <ferror@plt+0x18edc>  // b.pmore
  41b720:	cmp	w1, #0x159
  41b724:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b728:	sub	w1, w1, #0x15a
  41b72c:	mov	x0, #0x1                   	// #1
  41b730:	mov	x2, #0xc3                  	// #195
  41b734:	movk	x2, #0x20, lsl #32
  41b738:	lsl	x1, x0, x1
  41b73c:	tst	x1, x2
  41b740:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b744:	b	41a87c <ferror@plt+0x17ffc>
  41b748:	mov	w11, #0xffffe1a6            	// #-7770
  41b74c:	add	w1, w1, w11
  41b750:	cmp	w1, #0x1
  41b754:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b758:	b	41a87c <ferror@plt+0x17ffc>
  41b75c:	mov	w9, #0xffffe19e            	// #-7778
  41b760:	add	w1, w1, w9
  41b764:	cmp	w1, #0x1
  41b768:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b76c:	b	41a87c <ferror@plt+0x17ffc>
  41b770:	cmp	w1, #0x443
  41b774:	b.hi	41b7f0 <ferror@plt+0x18f70>  // b.pmore
  41b778:	cmp	w1, #0x40f
  41b77c:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b780:	mov	x2, #0x161                 	// #353
  41b784:	sub	w1, w1, #0x410
  41b788:	movk	x2, #0x8, lsl #16
  41b78c:	mov	x0, #0x1                   	// #1
  41b790:	movk	x2, #0x161, lsl #32
  41b794:	lsl	x1, x0, x1
  41b798:	movk	x2, #0x8, lsl #48
  41b79c:	tst	x1, x2
  41b7a0:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b7a4:	b	41a87c <ferror@plt+0x17ffc>
  41b7a8:	mov	w0, #0x1e53                	// #7763
  41b7ac:	cmp	w1, w0
  41b7b0:	b.hi	41b810 <ferror@plt+0x18f90>  // b.pmore
  41b7b4:	mov	w0, #0x1e4b                	// #7755
  41b7b8:	cmp	w1, w0
  41b7bc:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41b7c0:	mov	w18, #0xffffe200            	// #-7680
  41b7c4:	add	w2, w1, w18
  41b7c8:	cmp	w2, #0x2f
  41b7cc:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b7d0:	mov	x0, #0x3                   	// #3
  41b7d4:	mov	x1, #0x1                   	// #1
  41b7d8:	movk	x0, #0xff0, lsl #16
  41b7dc:	lsl	x1, x1, x2
  41b7e0:	movk	x0, #0xf000, lsl #32
  41b7e4:	tst	x1, x0
  41b7e8:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b7ec:	b	41a87c <ferror@plt+0x17ffc>
  41b7f0:	mov	w0, #0x1fb3                	// #8115
  41b7f4:	cmp	w1, w0
  41b7f8:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41b7fc:	b.ls	41b82c <ferror@plt+0x18fac>  // b.plast
  41b800:	mov	w0, #0x1fbc                	// #8124
  41b804:	cmp	w1, w0
  41b808:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b80c:	b	41a87c <ferror@plt+0x17ffc>
  41b810:	mov	w0, #0x1e7b                	// #7803
  41b814:	cmp	w1, w0
  41b818:	b.hi	41b840 <ferror@plt+0x18fc0>  // b.pmore
  41b81c:	mov	w0, #0x1e71                	// #7793
  41b820:	cmp	w1, w0
  41b824:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b828:	b	41a87c <ferror@plt+0x17ffc>
  41b82c:	mov	w10, #0xffffe160            	// #-7840
  41b830:	add	w1, w1, w10
  41b834:	cmp	w1, #0x1
  41b838:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b83c:	b	41a87c <ferror@plt+0x17ffc>
  41b840:	mov	w17, #0xffffe160            	// #-7840
  41b844:	add	w1, w1, w17
  41b848:	cmp	w1, #0x51
  41b84c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b850:	b	41a87c <ferror@plt+0x17ffc>
  41b854:	sub	w2, w1, #0x1e8
  41b858:	cmp	w2, #0x37
  41b85c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b860:	mov	x0, #0x3                   	// #3
  41b864:	mov	x1, #0x1                   	// #1
  41b868:	movk	x0, #0x3, lsl #16
  41b86c:	lsl	x1, x1, x2
  41b870:	movk	x0, #0xf00, lsl #32
  41b874:	movk	x0, #0x80, lsl #48
  41b878:	tst	x1, x0
  41b87c:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b880:	b	41a87c <ferror@plt+0x17ffc>
  41b884:	mov	w0, #0x1e59                	// #7769
  41b888:	cmp	w1, w0
  41b88c:	b.hi	41b8d8 <ferror@plt+0x19058>  // b.pmore
  41b890:	mov	w0, #0x1e22                	// #7714
  41b894:	cmp	w1, w0
  41b898:	b.hi	41b8b0 <ferror@plt+0x19030>  // b.pmore
  41b89c:	mov	w9, #0xffffe1f6            	// #-7690
  41b8a0:	add	w1, w1, w9
  41b8a4:	cmp	w1, #0x1
  41b8a8:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b8ac:	b	41a87c <ferror@plt+0x17ffc>
  41b8b0:	mov	w10, #0xffffe1dd            	// #-7715
  41b8b4:	mov	x2, #0x6011                	// #24593
  41b8b8:	add	w1, w1, w10
  41b8bc:	mov	x0, #0x1                   	// #1
  41b8c0:	movk	x2, #0x6, lsl #32
  41b8c4:	movk	x2, #0x60, lsl #48
  41b8c8:	lsl	x1, x0, x1
  41b8cc:	tst	x1, x2
  41b8d0:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b8d4:	b	41a87c <ferror@plt+0x17ffc>
  41b8d8:	mov	w8, #0xffffe196            	// #-7786
  41b8dc:	add	w2, w1, w8
  41b8e0:	cmp	w2, #0x2d
  41b8e4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b8e8:	mov	x1, #0x1                   	// #1
  41b8ec:	mov	x0, #0x3                   	// #3
  41b8f0:	movk	x0, #0x20c0, lsl #32
  41b8f4:	lsl	x1, x1, x2
  41b8f8:	tst	x1, x0
  41b8fc:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b900:	b	41a87c <ferror@plt+0x17ffc>
  41b904:	sub	w1, w1, #0x14c
  41b908:	cmp	w1, #0x5
  41b90c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b910:	b	41a87c <ferror@plt+0x17ffc>
  41b914:	mov	w0, #0x1e53                	// #7763
  41b918:	cmp	w1, w0
  41b91c:	b.hi	41b998 <ferror@plt+0x19118>  // b.pmore
  41b920:	mov	w0, #0x1e4b                	// #7755
  41b924:	cmp	w1, w0
  41b928:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41b92c:	cmp	w1, #0x1dc
  41b930:	b.ls	41b98c <ferror@plt+0x1910c>  // b.plast
  41b934:	sub	w2, w1, #0x20c
  41b938:	cmp	w2, #0x25
  41b93c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b940:	mov	x1, #0x1                   	// #1
  41b944:	mov	x0, #0x3fc0000000          	// #273804165120
  41b948:	movk	x0, #0xf0f
  41b94c:	lsl	x1, x1, x2
  41b950:	tst	x1, x0
  41b954:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41b958:	b	41a87c <ferror@plt+0x17ffc>
  41b95c:	sub	w1, w1, #0x423
  41b960:	tst	w1, #0xffffffdf
  41b964:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b968:	b	41a87c <ferror@plt+0x17ffc>
  41b96c:	cmp	w1, #0x16b
  41b970:	b.hi	41b9c4 <ferror@plt+0x19144>  // b.pmore
  41b974:	cmp	w1, #0x169
  41b978:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41b97c:	and	w1, w1, #0xffffffdf
  41b980:	cmp	w1, #0xd5
  41b984:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b988:	b	41a87c <ferror@plt+0x17ffc>
  41b98c:	cmp	w1, #0x1d0
  41b990:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41b994:	b	41a87c <ferror@plt+0x17ffc>
  41b998:	mov	w0, #0x1ed9                	// #7897
  41b99c:	cmp	w1, w0
  41b9a0:	b.hi	41b9d8 <ferror@plt+0x19158>  // b.pmore
  41b9a4:	mov	w0, #0x1ecb                	// #7883
  41b9a8:	cmp	w1, w0
  41b9ac:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41b9b0:	mov	w6, #0xffffe18e            	// #-7794
  41b9b4:	add	w1, w1, w6
  41b9b8:	cmp	w1, #0x9
  41b9bc:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b9c0:	b	41a87c <ferror@plt+0x17ffc>
  41b9c4:	cmp	w1, #0x399
  41b9c8:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41b9cc:	cmp	w1, #0x3a5
  41b9d0:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41b9d4:	b	41a87c <ferror@plt+0x17ffc>
  41b9d8:	mov	w5, #0xffffe11c            	// #-7908
  41b9dc:	add	w1, w1, w5
  41b9e0:	cmp	w1, #0x3
  41b9e4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b9e8:	b	41a87c <ferror@plt+0x17ffc>
  41b9ec:	sub	w1, w1, #0x474
  41b9f0:	cmp	w1, #0x1
  41b9f4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41b9f8:	b	41a87c <ferror@plt+0x17ffc>
  41b9fc:	cmp	w1, #0x103
  41ba00:	b.hi	41ba40 <ferror@plt+0x191c0>  // b.pmore
  41ba04:	cmp	w1, #0xc9
  41ba08:	b.hi	41ba18 <ferror@plt+0x19198>  // b.pmore
  41ba0c:	cmp	w1, #0xc2
  41ba10:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41ba14:	b	41a87c <ferror@plt+0x17ffc>
  41ba18:	mov	x2, #0x401                 	// #1025
  41ba1c:	sub	w1, w1, #0xca
  41ba20:	movk	x2, #0x100, lsl #16
  41ba24:	mov	x0, #0x1                   	// #1
  41ba28:	movk	x2, #0x401, lsl #32
  41ba2c:	lsl	x1, x0, x1
  41ba30:	movk	x2, #0x300, lsl #48
  41ba34:	tst	x1, x2
  41ba38:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41ba3c:	b	41a87c <ferror@plt+0x17ffc>
  41ba40:	cmp	w1, #0x1a1
  41ba44:	b.hi	41babc <ferror@plt+0x1923c>  // b.pmore
  41ba48:	cmp	w1, #0x19f
  41ba4c:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ba50:	b	41a87c <ferror@plt+0x17ffc>
  41ba54:	mov	w0, #0x1ffe                	// #8190
  41ba58:	cmp	w1, w0
  41ba5c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ba60:	mov	w0, #0x1eff                	// #7935
  41ba64:	cmp	w1, w0
  41ba68:	b.ls	41bacc <ferror@plt+0x1924c>  // b.plast
  41ba6c:	mov	w13, #0xffffe100            	// #-7936
  41ba70:	add	w1, w1, w13
  41ba74:	cmp	w1, #0xfe
  41ba78:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41ba7c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x146d8>
  41ba80:	add	x0, x0, #0xb54
  41ba84:	ldrh	w0, [x0, w1, uxtw #1]
  41ba88:	adr	x1, 41ba94 <ferror@plt+0x19214>
  41ba8c:	add	x0, x1, w0, sxth #2
  41ba90:	br	x0
  41ba94:	cmp	w1, #0x414
  41ba98:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41ba9c:	sub	w1, w1, #0x415
  41baa0:	mov	x0, #0x1                   	// #1
  41baa4:	mov	x2, #0x9                   	// #9
  41baa8:	movk	x2, #0x9, lsl #32
  41baac:	lsl	x1, x0, x1
  41bab0:	tst	x1, x2
  41bab4:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bab8:	b	41a87c <ferror@plt+0x17ffc>
  41babc:	sub	w1, w1, #0x1af
  41bac0:	cmp	w1, #0x1
  41bac4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bac8:	b	41a87c <ferror@plt+0x17ffc>
  41bacc:	cmp	w1, #0x433
  41bad0:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41bad4:	cmp	w1, #0x43a
  41bad8:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41badc:	b	41a87c <ferror@plt+0x17ffc>
  41bae0:	cmp	w1, #0x103
  41bae4:	b.hi	41bb24 <ferror@plt+0x192a4>  // b.pmore
  41bae8:	cmp	w1, #0xc9
  41baec:	b.hi	41bafc <ferror@plt+0x1927c>  // b.pmore
  41baf0:	cmp	w1, #0xc2
  41baf4:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41baf8:	b	41a87c <ferror@plt+0x17ffc>
  41bafc:	mov	x2, #0x401                 	// #1025
  41bb00:	sub	w1, w1, #0xca
  41bb04:	movk	x2, #0x100, lsl #16
  41bb08:	mov	x0, #0x1                   	// #1
  41bb0c:	movk	x2, #0x401, lsl #32
  41bb10:	lsl	x1, x0, x1
  41bb14:	movk	x2, #0x300, lsl #48
  41bb18:	tst	x1, x2
  41bb1c:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bb20:	b	41a87c <ferror@plt+0x17ffc>
  41bb24:	cmp	w1, #0x1a1
  41bb28:	b.hi	41bb44 <ferror@plt+0x192c4>  // b.pmore
  41bb2c:	cmp	w1, #0x19f
  41bb30:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bb34:	b	41a87c <ferror@plt+0x17ffc>
  41bb38:	cmp	w1, #0x41
  41bb3c:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41bb40:	b	41a87c <ferror@plt+0x17ffc>
  41bb44:	sub	w1, w1, #0x1af
  41bb48:	cmp	w1, #0x1
  41bb4c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bb50:	b	41a87c <ferror@plt+0x17ffc>
  41bb54:	cmp	w1, #0x103
  41bb58:	b.hi	41bb98 <ferror@plt+0x19318>  // b.pmore
  41bb5c:	cmp	w1, #0xff
  41bb60:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bb64:	b	41a87c <ferror@plt+0x17ffc>
  41bb68:	cmp	w1, #0x227
  41bb6c:	b.hi	41bba8 <ferror@plt+0x19328>  // b.pmore
  41bb70:	cmp	w1, #0x1f9
  41bb74:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bb78:	sub	w1, w1, #0x1fa
  41bb7c:	mov	x0, #0x1                   	// #1
  41bb80:	mov	x2, #0x3c3                 	// #963
  41bb84:	movk	x2, #0x3000, lsl #32
  41bb88:	lsl	x1, x0, x1
  41bb8c:	tst	x1, x2
  41bb90:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bb94:	b	41a87c <ferror@plt+0x17ffc>
  41bb98:	sub	w1, w1, #0x1cd
  41bb9c:	cmp	w1, #0x1
  41bba0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bba4:	b	41a87c <ferror@plt+0x17ffc>
  41bba8:	mov	w0, #0x1eab                	// #7851
  41bbac:	cmp	w1, w0
  41bbb0:	b.hi	41bdbc <ferror@plt+0x1953c>  // b.pmore
  41bbb4:	mov	w0, #0x1ea1                	// #7841
  41bbb8:	cmp	w1, w0
  41bbbc:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bbc0:	b	41a87c <ferror@plt+0x17ffc>
  41bbc4:	sub	w2, w1, #0xc8
  41bbc8:	cmp	w2, #0x27
  41bbcc:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bbd0:	mov	x1, #0x1                   	// #1
  41bbd4:	mov	x0, #0xff000000ff          	// #1095216660735
  41bbd8:	movk	x0, #0x1e, lsl #16
  41bbdc:	lsl	x1, x1, x2
  41bbe0:	tst	x1, x0
  41bbe4:	b.ne	41a87c <ferror@plt+0x17ffc>  // b.any
  41bbe8:	b	41a744 <ferror@plt+0x17ec4>
  41bbec:	mov	w0, #0x1e17                	// #7703
  41bbf0:	cmp	w1, w0
  41bbf4:	b.hi	41bca8 <ferror@plt+0x19428>  // b.pmore
  41bbf8:	mov	w0, #0x1e13                	// #7699
  41bbfc:	cmp	w1, w0
  41bc00:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41bc04:	cmp	w1, #0x1dc
  41bc08:	b.hi	41bc94 <ferror@plt+0x19414>  // b.pmore
  41bc0c:	cmp	w1, #0x1d2
  41bc10:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41bc14:	cmp	w1, #0x171
  41bc18:	b.hi	41bc5c <ferror@plt+0x193dc>  // b.pmore
  41bc1c:	cmp	w1, #0x167
  41bc20:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bc24:	b	41a87c <ferror@plt+0x17ffc>
  41bc28:	mov	w0, #0x1e97                	// #7831
  41bc2c:	cmp	w1, w0
  41bc30:	b.hi	41bc80 <ferror@plt+0x19400>  // b.pmore
  41bc34:	mov	w0, #0x1e95                	// #7829
  41bc38:	cmp	w1, w0
  41bc3c:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41bc40:	mov	w0, #0x1e4b                	// #7755
  41bc44:	cmp	w1, w0
  41bc48:	b.hi	41bc6c <ferror@plt+0x193ec>  // b.pmore
  41bc4c:	mov	w0, #0x1e43                	// #7747
  41bc50:	cmp	w1, w0
  41bc54:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bc58:	b	41a87c <ferror@plt+0x17ffc>
  41bc5c:	sub	w1, w1, #0x1cf
  41bc60:	cmp	w1, #0x1
  41bc64:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bc68:	b	41a87c <ferror@plt+0x17ffc>
  41bc6c:	mov	w28, #0xffffe1a8            	// #-7768
  41bc70:	add	w1, w1, w28
  41bc74:	cmp	w1, #0x19
  41bc78:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bc7c:	b	41a87c <ferror@plt+0x17ffc>
  41bc80:	mov	w20, #0xffffe148            	// #-7864
  41bc84:	add	w1, w1, w20
  41bc88:	cmp	w1, #0xf
  41bc8c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bc90:	b	41a87c <ferror@plt+0x17ffc>
  41bc94:	cmp	w1, #0x20b
  41bc98:	b.hi	41bdac <ferror@plt+0x1952c>  // b.pmore
  41bc9c:	cmp	w1, #0x203
  41bca0:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bca4:	b	41a87c <ferror@plt+0x17ffc>
  41bca8:	mov	w0, #0x1ee7                	// #7911
  41bcac:	cmp	w1, w0
  41bcb0:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bcb4:	mov	w0, #0x1eb9                	// #7865
  41bcb8:	cmp	w1, w0
  41bcbc:	b.hi	41bcdc <ferror@plt+0x1945c>  // b.pmore
  41bcc0:	mov	w0, #0x1e2f                	// #7727
  41bcc4:	cmp	w1, w0
  41bcc8:	b.hi	41bddc <ferror@plt+0x1955c>  // b.pmore
  41bccc:	mov	w0, #0x1e2d                	// #7725
  41bcd0:	cmp	w1, w0
  41bcd4:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bcd8:	b	41a87c <ferror@plt+0x17ffc>
  41bcdc:	mov	w12, #0xffffe146            	// #-7866
  41bce0:	add	w1, w1, w12
  41bce4:	mov	x0, #0x1                   	// #1
  41bce8:	mov	x2, #0xcfff                	// #53247
  41bcec:	movk	x2, #0x3000, lsl #32
  41bcf0:	lsl	x1, x0, x1
  41bcf4:	tst	x1, x2
  41bcf8:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bcfc:	b	41a87c <ferror@plt+0x17ffc>
  41bd00:	mov	w0, #0x1e45                	// #7749
  41bd04:	cmp	w1, w0
  41bd08:	b.hi	41bd6c <ferror@plt+0x194ec>  // b.pmore
  41bd0c:	mov	w0, #0x1e09                	// #7689
  41bd10:	cmp	w1, w0
  41bd14:	b.hi	41bd48 <ferror@plt+0x194c8>  // b.pmore
  41bd18:	cmp	w1, #0x1dc
  41bd1c:	b.ls	41bdd0 <ferror@plt+0x19550>  // b.plast
  41bd20:	sub	w2, w1, #0x1f8
  41bd24:	cmp	w2, #0x1f
  41bd28:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bd2c:	mov	x1, #0x1                   	// #1
  41bd30:	mov	x0, #0xf003                	// #61443
  41bd34:	movk	x0, #0xf000, lsl #16
  41bd38:	lsl	x1, x1, x2
  41bd3c:	tst	x1, x0
  41bd40:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bd44:	b	41a87c <ferror@plt+0x17ffc>
  41bd48:	mov	w15, #0xffffe1f6            	// #-7690
  41bd4c:	add	w1, w1, w15
  41bd50:	mov	x0, #0x1                   	// #1
  41bd54:	mov	x2, #0x3c03                	// #15363
  41bd58:	movk	x2, #0xc00, lsl #48
  41bd5c:	lsl	x1, x0, x1
  41bd60:	tst	x1, x2
  41bd64:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bd68:	b	41a87c <ferror@plt+0x17ffc>
  41bd6c:	mov	w0, #0x1e97                	// #7831
  41bd70:	cmp	w1, w0
  41bd74:	b.hi	41bdf0 <ferror@plt+0x19570>  // b.pmore
  41bd78:	mov	w0, #0x1e69                	// #7785
  41bd7c:	cmp	w1, w0
  41bd80:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bd84:	mov	w16, #0xffffe196            	// #-7786
  41bd88:	mov	x2, #0xc003                	// #49155
  41bd8c:	add	w1, w1, w16
  41bd90:	mov	x0, #0x1                   	// #1
  41bd94:	movk	x2, #0x3, lsl #16
  41bd98:	movk	x2, #0x2000, lsl #32
  41bd9c:	lsl	x1, x0, x1
  41bda0:	tst	x1, x2
  41bda4:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bda8:	b	41a87c <ferror@plt+0x17ffc>
  41bdac:	sub	w1, w1, #0x214
  41bdb0:	cmp	w1, #0x3
  41bdb4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bdb8:	b	41a87c <ferror@plt+0x17ffc>
  41bdbc:	mov	w2, #0xffffe152            	// #-7854
  41bdc0:	add	w1, w1, w2
  41bdc4:	cmp	w1, #0x7
  41bdc8:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bdcc:	b	41a87c <ferror@plt+0x17ffc>
  41bdd0:	cmp	w1, #0x1d2
  41bdd4:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41bdd8:	b	41a87c <ferror@plt+0x17ffc>
  41bddc:	mov	w11, #0xffffe188            	// #-7800
  41bde0:	add	w1, w1, w11
  41bde4:	cmp	w1, #0x3
  41bde8:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bdec:	b	41a87c <ferror@plt+0x17ffc>
  41bdf0:	mov	w0, #0x1ec5                	// #7877
  41bdf4:	cmp	w1, w0
  41bdf8:	b.hi	41bf3c <ferror@plt+0x196bc>  // b.pmore
  41bdfc:	mov	w0, #0x1eb9                	// #7865
  41be00:	cmp	w1, w0
  41be04:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41be08:	b	41a87c <ferror@plt+0x17ffc>
  41be0c:	mov	w0, #0x1f7c                	// #8060
  41be10:	cmp	w1, w0
  41be14:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41be18:	b.hi	41bf84 <ferror@plt+0x19704>  // b.pmore
  41be1c:	mov	w0, #0x1f70                	// #8048
  41be20:	cmp	w1, w0
  41be24:	b.hi	41bf74 <ferror@plt+0x196f4>  // b.pmore
  41be28:	mov	w0, #0x1f5f                	// #8031
  41be2c:	cmp	w1, w0
  41be30:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41be34:	mov	w0, #0x1f0f                	// #7951
  41be38:	cmp	w1, w0
  41be3c:	b.hi	41bf60 <ferror@plt+0x196e0>  // b.pmore
  41be40:	mov	w0, #0x1eff                	// #7935
  41be44:	cmp	w1, w0
  41be48:	b.ls	41a744 <ferror@plt+0x17ec4>  // b.plast
  41be4c:	b	41a87c <ferror@plt+0x17ffc>
  41be50:	cmp	w1, #0x1a1
  41be54:	b.hi	41beac <ferror@plt+0x1962c>  // b.pmore
  41be58:	cmp	w1, #0x19f
  41be5c:	b.hi	41a87c <ferror@plt+0x17ffc>  // b.pmore
  41be60:	sub	w1, w1, #0x14c
  41be64:	cmp	w1, #0x1
  41be68:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41be6c:	b	41a87c <ferror@plt+0x17ffc>
  41be70:	mov	w0, #0xffffe1a0            	// #-7776
  41be74:	add	w2, w1, w0
  41be78:	cmp	w2, #0x37
  41be7c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41be80:	mov	x1, #0x1                   	// #1
  41be84:	mov	x0, #0xcf3                 	// #3315
  41be88:	movk	x0, #0x80, lsl #48
  41be8c:	lsl	x1, x1, x2
  41be90:	tst	x1, x0
  41be94:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41be98:	b	41a87c <ferror@plt+0x17ffc>
  41be9c:	sub	w1, w1, #0x4e8
  41bea0:	cmp	w1, #0x1
  41bea4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bea8:	b	41a87c <ferror@plt+0x17ffc>
  41beac:	sub	w1, w1, #0x1af
  41beb0:	cmp	w1, #0x1
  41beb4:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41beb8:	b	41a87c <ferror@plt+0x17ffc>
  41bebc:	cmp	w1, #0x1b7
  41bec0:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41bec4:	b.ls	41befc <ferror@plt+0x1967c>  // b.plast
  41bec8:	cmp	w1, #0x292
  41becc:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41bed0:	b	41a87c <ferror@plt+0x17ffc>
  41bed4:	sub	w2, w1, #0x6c1
  41bed8:	cmp	w2, #0x14
  41bedc:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bee0:	mov	x1, #0x1                   	// #1
  41bee4:	mov	x0, #0x1                   	// #1
  41bee8:	movk	x0, #0x12, lsl #16
  41beec:	lsl	x1, x1, x2
  41bef0:	tst	x1, x0
  41bef4:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bef8:	b	41a87c <ferror@plt+0x17ffc>
  41befc:	and	w1, w1, #0xffffffdf
  41bf00:	cmp	w1, #0xdc
  41bf04:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41bf08:	b	41a87c <ferror@plt+0x17ffc>
  41bf0c:	mov	w12, #0xffffe160            	// #-7840
  41bf10:	add	w2, w1, w12
  41bf14:	cmp	w2, #0x2d
  41bf18:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bf1c:	mov	x0, #0x3                   	// #3
  41bf20:	mov	x1, #0x1                   	// #1
  41bf24:	movk	x0, #0x300, lsl #16
  41bf28:	lsl	x1, x1, x2
  41bf2c:	movk	x0, #0x3000, lsl #32
  41bf30:	tst	x1, x0
  41bf34:	b.eq	41a744 <ferror@plt+0x17ec4>  // b.none
  41bf38:	b	41a87c <ferror@plt+0x17ffc>
  41bf3c:	mov	w14, #0xffffe11a            	// #-7910
  41bf40:	add	w1, w1, w14
  41bf44:	cmp	w1, #0x1
  41bf48:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bf4c:	b	41a87c <ferror@plt+0x17ffc>
  41bf50:	sub	w1, w1, #0x73
  41bf54:	cmp	w1, #0x1
  41bf58:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bf5c:	b	41a87c <ferror@plt+0x17ffc>
  41bf60:	mov	w6, #0xffffe0e0            	// #-7968
  41bf64:	add	w1, w1, w6
  41bf68:	cmp	w1, #0xf
  41bf6c:	b.hi	41a744 <ferror@plt+0x17ec4>  // b.pmore
  41bf70:	b	41a87c <ferror@plt+0x17ffc>
  41bf74:	mov	w0, #0x1f74                	// #8052
  41bf78:	cmp	w1, w0
  41bf7c:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41bf80:	b	41a87c <ferror@plt+0x17ffc>
  41bf84:	mov	w0, #0x1fc6                	// #8134
  41bf88:	cmp	w1, w0
  41bf8c:	b.eq	41a87c <ferror@plt+0x17ffc>  // b.none
  41bf90:	and	w1, w1, #0xffffffbf
  41bf94:	mov	w0, #0x1fb6                	// #8118
  41bf98:	cmp	w1, w0
  41bf9c:	b.ne	41a744 <ferror@plt+0x17ec4>  // b.any
  41bfa0:	b	41a87c <ferror@plt+0x17ffc>
  41bfa4:	nop
  41bfa8:	stp	x29, x30, [sp, #-320]!
  41bfac:	cmp	w4, #0x3f
  41bfb0:	mov	x29, sp
  41bfb4:	stp	x25, x26, [sp, #64]
  41bfb8:	mov	x25, x1
  41bfbc:	mov	x26, x6
  41bfc0:	stp	x0, x3, [sp, #120]
  41bfc4:	stp	x5, x2, [sp, #184]
  41bfc8:	b.eq	41cf8c <ferror@plt+0x1a70c>  // b.none
  41bfcc:	b.hi	41ccb0 <ferror@plt+0x1a430>  // b.pmore
  41bfd0:	cmp	w4, #0x3b
  41bfd4:	b.eq	41cf6c <ferror@plt+0x1a6ec>  // b.none
  41bfd8:	b.hi	41cc88 <ferror@plt+0x1a408>  // b.pmore
  41bfdc:	cmp	w4, #0x39
  41bfe0:	b.eq	41cf8c <ferror@plt+0x1a70c>  // b.none
  41bfe4:	cmp	w4, #0x3a
  41bfe8:	b.ne	41ccc8 <ferror@plt+0x1a448>  // b.any
  41bfec:	ldr	x0, [sp, #120]
  41bff0:	ldr	x1, [x0, #568]
  41bff4:	str	x1, [sp, #104]
  41bff8:	ldr	x1, [x0, #576]
  41bffc:	str	x1, [sp, #112]
  41c000:	ldr	w0, [x0, #584]
  41c004:	str	w0, [sp, #200]
  41c008:	ldr	x0, [sp, #184]
  41c00c:	cmp	x26, #0x0
  41c010:	cset	w1, ne  // ne = any
  41c014:	stp	x19, x20, [sp, #16]
  41c018:	cmp	x0, #0x0
  41c01c:	str	w1, [sp, #156]
  41c020:	cset	w0, ne  // ne = any
  41c024:	cmp	w0, w1
  41c028:	b.ne	41d0c8 <ferror@plt+0x1a848>  // b.any
  41c02c:	ldr	x0, [sp, #128]
  41c030:	stp	x27, x28, [sp, #80]
  41c034:	cbz	x0, 41cf24 <ferror@plt+0x1a6a4>
  41c038:	ldr	w0, [x25]
  41c03c:	mov	w1, #0x100                 	// #256
  41c040:	cmp	w0, w1
  41c044:	csel	w0, w0, w1, cs  // cs = hs, nlast
  41c048:	str	x0, [sp, #272]
  41c04c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  41c050:	str	x0, [sp, #264]
  41c054:	ldr	x0, [sp, #192]
  41c058:	str	xzr, [sp, #280]
  41c05c:	cbz	x0, 41d0ec <ferror@plt+0x1a86c>
  41c060:	ldr	x0, [sp, #128]
  41c064:	mov	x27, #0x0                   	// #0
  41c068:	mov	x28, x27
  41c06c:	stp	x21, x22, [sp, #32]
  41c070:	cmp	x0, #0x0
  41c074:	add	x0, sp, #0x108
  41c078:	stp	x23, x24, [sp, #48]
  41c07c:	mov	x1, x0
  41c080:	csel	x20, x0, xzr, ne  // ne = any
  41c084:	ldrsw	x0, [sp, #200]
  41c088:	str	x1, [sp, #136]
  41c08c:	mov	x1, #0x20                  	// #32
  41c090:	cmp	x0, #0x20
  41c094:	stp	x25, xzr, [sp, #160]
  41c098:	csel	x0, x0, x1, ls  // ls = plast
  41c09c:	mov	x1, #0x1                   	// #1
  41c0a0:	lsl	x0, x1, x0
  41c0a4:	sub	x0, x0, #0x1
  41c0a8:	str	x0, [sp, #176]
  41c0ac:	str	w0, [sp, #216]
  41c0b0:	add	x0, sp, #0xf5
  41c0b4:	str	x0, [sp, #208]
  41c0b8:	ldr	x0, [sp, #160]
  41c0bc:	ldr	x1, [sp, #184]
  41c0c0:	ldr	x8, [x0, #8]
  41c0c4:	ldrb	w0, [x8]
  41c0c8:	cmp	w0, #0x75
  41c0cc:	cbz	x1, 41cbb4 <ferror@plt+0x1a334>
  41c0d0:	ldr	x2, [sp, #168]
  41c0d4:	add	x28, x1, x2, lsl #4
  41c0d8:	b.eq	41cce8 <ferror@plt+0x1a468>  // b.none
  41c0dc:	cmp	w0, #0x55
  41c0e0:	mov	w1, #0x4c                  	// #76
  41c0e4:	mov	x2, x8
  41c0e8:	ccmp	w0, w1, #0x4, ne  // ne = any
  41c0ec:	b.ne	41c0f8 <ferror@plt+0x19878>  // b.any
  41c0f0:	ldrb	w0, [x8, #1]
  41c0f4:	add	x2, x8, #0x1
  41c0f8:	cmp	w0, #0x52
  41c0fc:	b.eq	41c3fc <ferror@plt+0x19b7c>  // b.none
  41c100:	cmp	w0, #0x22
  41c104:	cset	w25, ne  // ne = any
  41c108:	cmp	w0, #0x27
  41c10c:	csel	w0, w25, wzr, ne  // ne = any
  41c110:	str	w0, [sp, #152]
  41c114:	cbnz	w0, 41d03c <ferror@plt+0x1a7bc>
  41c118:	add	x25, x2, #0x1
  41c11c:	cbz	x28, 41c144 <ferror@plt+0x198c4>
  41c120:	ldr	w0, [x28]
  41c124:	mov	w2, #0x1                   	// #1
  41c128:	str	w2, [sp, #152]
  41c12c:	mov	w1, #0x60000000            	// #1610612736
  41c130:	cmp	w0, w1
  41c134:	b.hi	41c144 <ferror@plt+0x198c4>  // b.pmore
  41c138:	ldr	w1, [x28, #4]
  41c13c:	add	w0, w1, w0
  41c140:	str	w0, [x28]
  41c144:	ldr	x0, [sp, #160]
  41c148:	adrp	x1, 418000 <ferror@plt+0x15780>
  41c14c:	add	x1, x1, #0xca0
  41c150:	str	x1, [sp, #144]
  41c154:	ldr	w0, [x0]
  41c158:	sub	x0, x0, #0x1
  41c15c:	add	x24, x8, x0
  41c160:	cmp	x25, x24
  41c164:	b.cs	41c278 <ferror@plt+0x199f8>  // b.hs, b.nlast
  41c168:	mov	x21, x25
  41c16c:	b	41c17c <ferror@plt+0x198fc>
  41c170:	add	x21, x21, #0x1
  41c174:	cmp	x24, x21
  41c178:	b.eq	41c348 <ferror@plt+0x19ac8>  // b.none
  41c17c:	ldrb	w0, [x21]
  41c180:	cmp	w0, #0x5c
  41c184:	b.ne	41c170 <ferror@plt+0x198f0>  // b.any
  41c188:	cmp	x21, x25
  41c18c:	b.hi	41c34c <ferror@plt+0x19acc>  // b.pmore
  41c190:	cmp	x21, x24
  41c194:	b.cs	41c278 <ferror@plt+0x199f8>  // b.hs, b.nlast
  41c198:	add	x25, x21, #0x1
  41c19c:	cbz	x28, 41c1c0 <ferror@plt+0x19940>
  41c1a0:	ldr	w19, [x28]
  41c1a4:	mov	w0, #0x60000000            	// #1610612736
  41c1a8:	cmp	w19, w0
  41c1ac:	b.hi	41c1bc <ferror@plt+0x1993c>  // b.pmore
  41c1b0:	ldr	w0, [x28, #4]
  41c1b4:	add	w0, w0, w19
  41c1b8:	str	w0, [x28]
  41c1bc:	str	w19, [sp, #100]
  41c1c0:	ldrb	w3, [x21, #1]
  41c1c4:	strb	w3, [sp, #227]
  41c1c8:	sub	w0, w3, #0x22
  41c1cc:	cmp	w0, #0x59
  41c1d0:	b.ls	41c558 <ferror@plt+0x19cd8>  // b.plast
  41c1d4:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41c1d8:	add	x0, x0, #0x2c0
  41c1dc:	mov	w1, #0xac                  	// #172
  41c1e0:	ldrh	w0, [x0, w3, sxtw #1]
  41c1e4:	tst	w1, w0
  41c1e8:	b.eq	41c6e4 <ferror@plt+0x19e64>  // b.none
  41c1ec:	ldr	x0, [sp, #120]
  41c1f0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41c1f4:	mov	w1, #0x2                   	// #2
  41c1f8:	add	x2, x2, #0xc50
  41c1fc:	bl	422e10 <ferror@plt+0x20590>
  41c200:	cbz	x20, 41c220 <ferror@plt+0x199a0>
  41c204:	ldp	x4, x0, [sp, #104]
  41c208:	mov	x3, x20
  41c20c:	add	x1, sp, #0xe3
  41c210:	mov	x2, #0x1                   	// #1
  41c214:	blr	x4
  41c218:	tst	w0, #0xff
  41c21c:	b.eq	41c330 <ferror@plt+0x19ab0>  // b.none
  41c220:	cbz	x28, 41c26c <ferror@plt+0x199ec>
  41c224:	ldr	w25, [x28]
  41c228:	mov	w0, #0x60000000            	// #1610612736
  41c22c:	cmp	w25, w0
  41c230:	b.hi	41c240 <ferror@plt+0x199c0>  // b.pmore
  41c234:	ldr	w0, [x28, #4]
  41c238:	add	w0, w0, w25
  41c23c:	str	w0, [x28]
  41c240:	ldp	w2, w1, [x26, #8]
  41c244:	ldr	x0, [x26]
  41c248:	cmp	w2, w1
  41c24c:	b.ge	41ca9c <ferror@plt+0x1a21c>  // b.tcont
  41c250:	sbfiz	x1, x2, #3, #32
  41c254:	add	w2, w2, #0x1
  41c258:	add	x3, x0, x1
  41c25c:	str	w2, [x26, #8]
  41c260:	ldr	w2, [sp, #100]
  41c264:	str	w2, [x0, x1]
  41c268:	str	w25, [x3, #4]
  41c26c:	add	x25, x21, #0x2
  41c270:	cmp	x25, x24
  41c274:	b.cc	41c168 <ferror@plt+0x198e8>  // b.lo, b.ul, b.last
  41c278:	ldp	x1, x0, [sp, #160]
  41c27c:	add	x1, x1, #0x10
  41c280:	add	x0, x0, #0x1
  41c284:	stp	x1, x0, [sp, #160]
  41c288:	ldr	x1, [sp, #192]
  41c28c:	cmp	x1, x0
  41c290:	b.ne	41c0b8 <ferror@plt+0x19838>  // b.any
  41c294:	ldr	x0, [sp, #128]
  41c298:	mov	x27, x28
  41c29c:	ldp	x21, x22, [sp, #32]
  41c2a0:	ldp	x23, x24, [sp, #48]
  41c2a4:	cbz	x0, 41c2e8 <ferror@plt+0x19a68>
  41c2a8:	ldr	x1, [sp, #120]
  41c2ac:	mov	w2, #0x0                   	// #0
  41c2b0:	ldr	w4, [sp, #200]
  41c2b4:	mov	x0, x1
  41c2b8:	add	x1, x1, #0x4da
  41c2bc:	ldr	x3, [sp, #136]
  41c2c0:	ldr	x0, [x0, #1216]
  41c2c4:	bl	418d20 <ferror@plt+0x164a0>
  41c2c8:	ldr	x0, [sp, #264]
  41c2cc:	ldr	x1, [sp, #280]
  41c2d0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41c2d4:	str	x0, [sp, #264]
  41c2d8:	ldr	x2, [sp, #128]
  41c2dc:	ldr	x1, [sp, #280]
  41c2e0:	str	w1, [x2]
  41c2e4:	str	x0, [x2, #8]
  41c2e8:	cbz	x27, 41cf2c <ferror@plt+0x1a6ac>
  41c2ec:	ldr	w19, [x27]
  41c2f0:	mov	w0, #0x60000000            	// #1610612736
  41c2f4:	cmp	w19, w0
  41c2f8:	b.hi	41c308 <ferror@plt+0x19a88>  // b.pmore
  41c2fc:	ldr	w0, [x27, #4]
  41c300:	add	w0, w0, w19
  41c304:	str	w0, [x27]
  41c308:	ldp	w2, w1, [x26, #8]
  41c30c:	ldr	x0, [x26]
  41c310:	cmp	w2, w1
  41c314:	b.ge	41d07c <ferror@plt+0x1a7fc>  // b.tcont
  41c318:	dup	v0.2s, w19
  41c31c:	add	w1, w2, #0x1
  41c320:	str	w1, [x26, #8]
  41c324:	mov	w19, #0x1                   	// #1
  41c328:	str	d0, [x0, w2, sxtw #3]
  41c32c:	b	41c500 <ferror@plt+0x19c80>
  41c330:	ldr	x0, [sp, #120]
  41c334:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41c338:	mov	w1, #0x3                   	// #3
  41c33c:	add	x2, x2, #0xc98
  41c340:	bl	423628 <ferror@plt+0x20da8>
  41c344:	b	41c220 <ferror@plt+0x199a0>
  41c348:	mov	x21, x24
  41c34c:	ldr	x0, [sp, #128]
  41c350:	cbz	x0, 41c370 <ferror@plt+0x19af0>
  41c354:	ldp	x4, x0, [sp, #104]
  41c358:	sub	x2, x21, x25
  41c35c:	ldr	x3, [sp, #136]
  41c360:	mov	x1, x25
  41c364:	blr	x4
  41c368:	tst	w0, #0xff
  41c36c:	b.eq	41c4d8 <ferror@plt+0x19c58>  // b.none
  41c370:	cbz	x28, 41cab8 <ferror@plt+0x1a238>
  41c374:	ldr	x0, [sp, #104]
  41c378:	ldr	x1, [sp, #144]
  41c37c:	cmp	x0, x1
  41c380:	b.ne	41d12c <ferror@plt+0x1a8ac>  // b.any
  41c384:	sub	x5, x21, x25
  41c388:	cmp	w5, #0x0
  41c38c:	mov	w27, w5
  41c390:	b.le	41c3ec <ferror@plt+0x19b6c>
  41c394:	ldp	w2, w1, [x26, #8]
  41c398:	mov	w22, #0x0                   	// #0
  41c39c:	ldr	x0, [x26]
  41c3a0:	mov	w23, #0x60000000            	// #1610612736
  41c3a4:	nop
  41c3a8:	ldr	w25, [x28]
  41c3ac:	cmp	w25, w23
  41c3b0:	b.hi	41c3c0 <ferror@plt+0x19b40>  // b.pmore
  41c3b4:	ldr	w3, [x28, #4]
  41c3b8:	add	w3, w3, w25
  41c3bc:	str	w3, [x28]
  41c3c0:	cmp	w1, w2
  41c3c4:	b.le	41c518 <ferror@plt+0x19c98>
  41c3c8:	dup	v0.2s, w25
  41c3cc:	add	w3, w2, #0x1
  41c3d0:	str	w3, [x26, #8]
  41c3d4:	add	w22, w22, #0x1
  41c3d8:	cmp	w27, w22
  41c3dc:	str	d0, [x0, w2, sxtw #3]
  41c3e0:	b.eq	41c3ec <ferror@plt+0x19b6c>  // b.none
  41c3e4:	mov	w2, w3
  41c3e8:	b	41c3a8 <ferror@plt+0x19b28>
  41c3ec:	cmp	x24, x21
  41c3f0:	b.ls	41c278 <ferror@plt+0x199f8>  // b.plast
  41c3f4:	add	x25, x21, #0x1
  41c3f8:	b	41c1a0 <ferror@plt+0x19920>
  41c3fc:	add	x2, x2, #0x2
  41c400:	cbz	x28, 41cfb0 <ferror@plt+0x1a730>
  41c404:	ldr	w0, [x28]
  41c408:	mov	w3, #0x60000000            	// #1610612736
  41c40c:	cmp	w0, w3
  41c410:	b.hi	41c42c <ferror@plt+0x19bac>  // b.pmore
  41c414:	ldr	w1, [x28, #4]
  41c418:	add	w0, w0, w1
  41c41c:	cmp	w0, w3
  41c420:	b.hi	41c428 <ferror@plt+0x19ba8>  // b.pmore
  41c424:	add	w0, w0, w1
  41c428:	str	w0, [x28]
  41c42c:	ldrb	w1, [x2]
  41c430:	cmp	w1, #0x28
  41c434:	b.eq	41d06c <ferror@plt+0x1a7ec>  // b.none
  41c438:	ldr	w0, [x28]
  41c43c:	mov	x3, x2
  41c440:	mov	w5, #0x60000000            	// #1610612736
  41c444:	b	41c44c <ferror@plt+0x19bcc>
  41c448:	mov	x3, x1
  41c44c:	cmp	w0, w5
  41c450:	add	x1, x3, #0x1
  41c454:	b.hi	41c464 <ferror@plt+0x19be4>  // b.pmore
  41c458:	ldr	w4, [x28, #4]
  41c45c:	add	w0, w4, w0
  41c460:	str	w0, [x28]
  41c464:	ldrb	w4, [x3, #1]
  41c468:	cmp	w4, #0x28
  41c46c:	b.ne	41c448 <ferror@plt+0x19bc8>  // b.any
  41c470:	add	x27, x3, #0x2
  41c474:	sub	x2, x27, x2
  41c478:	add	x3, x2, #0x1
  41c47c:	mov	w1, #0x60000000            	// #1610612736
  41c480:	cmp	w0, w1
  41c484:	b.hi	41c494 <ferror@plt+0x19c14>  // b.pmore
  41c488:	ldr	w1, [x28, #4]
  41c48c:	add	w0, w1, w0
  41c490:	str	w0, [x28]
  41c494:	ldr	x0, [sp, #160]
  41c498:	add	x3, x27, x3
  41c49c:	mvn	x2, x2
  41c4a0:	ldr	w25, [x0]
  41c4a4:	add	x25, x8, x25
  41c4a8:	add	x0, x25, x2
  41c4ac:	cmp	x25, x3
  41c4b0:	csel	x25, x0, x25, cs  // cs = hs, nlast
  41c4b4:	ldr	x0, [sp, #128]
  41c4b8:	cbz	x0, 41ce68 <ferror@plt+0x1a5e8>
  41c4bc:	ldp	x4, x0, [sp, #104]
  41c4c0:	sub	x2, x25, x27
  41c4c4:	ldr	x3, [sp, #136]
  41c4c8:	mov	x1, x27
  41c4cc:	blr	x4
  41c4d0:	tst	w0, #0xff
  41c4d4:	b.ne	41ce68 <ferror@plt+0x1a5e8>  // b.any
  41c4d8:	ldr	x0, [sp, #120]
  41c4dc:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41c4e0:	mov	w1, #0x3                   	// #3
  41c4e4:	add	x2, x2, #0x810
  41c4e8:	mov	w19, #0x0                   	// #0
  41c4ec:	bl	423628 <ferror@plt+0x20da8>
  41c4f0:	ldr	x0, [sp, #264]
  41c4f4:	bl	402640 <free@plt>
  41c4f8:	ldp	x21, x22, [sp, #32]
  41c4fc:	ldp	x23, x24, [sp, #48]
  41c500:	mov	w0, w19
  41c504:	ldp	x19, x20, [sp, #16]
  41c508:	ldp	x25, x26, [sp, #64]
  41c50c:	ldp	x27, x28, [sp, #80]
  41c510:	ldp	x29, x30, [sp], #320
  41c514:	ret
  41c518:	lsl	w1, w1, #1
  41c51c:	str	w1, [x26, #12]
  41c520:	add	w22, w22, #0x1
  41c524:	sbfiz	x1, x1, #3, #32
  41c528:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41c52c:	ldr	w1, [x26, #8]
  41c530:	dup	v0.2s, w25
  41c534:	str	x0, [x26]
  41c538:	cmp	w27, w22
  41c53c:	add	w3, w1, #0x1
  41c540:	str	w3, [x26, #8]
  41c544:	str	d0, [x0, w1, sxtw #3]
  41c548:	b.eq	41c3ec <ferror@plt+0x19b6c>  // b.none
  41c54c:	ldr	w1, [x26, #12]
  41c550:	mov	w2, w3
  41c554:	b	41c3a8 <ferror@plt+0x19b28>
  41c558:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x146d8>
  41c55c:	add	x1, x1, #0xd54
  41c560:	ldrh	w0, [x1, w0, uxtw #1]
  41c564:	adr	x1, 41c570 <ferror@plt+0x19cf0>
  41c568:	add	x0, x1, w0, sxth #2
  41c56c:	br	x0
  41c570:	ldp	w1, w0, [sp, #152]
  41c574:	cmp	w0, w1
  41c578:	b.ne	41d0b0 <ferror@plt+0x1a830>  // b.any
  41c57c:	cmp	x24, x25
  41c580:	b.ls	41d000 <ferror@plt+0x1a780>  // b.plast
  41c584:	sub	w3, w3, #0x30
  41c588:	add	x25, x21, #0x2
  41c58c:	cbz	x28, 41c5ac <ferror@plt+0x19d2c>
  41c590:	ldr	w19, [x28]
  41c594:	mov	w0, #0x60000000            	// #1610612736
  41c598:	cmp	w19, w0
  41c59c:	b.hi	41c5ac <ferror@plt+0x19d2c>  // b.pmore
  41c5a0:	ldr	w0, [x28, #4]
  41c5a4:	add	w0, w0, w19
  41c5a8:	str	w0, [x28]
  41c5ac:	cmp	x24, x25
  41c5b0:	b.ls	41c62c <ferror@plt+0x19dac>  // b.plast
  41c5b4:	ldrb	w0, [x21, #2]
  41c5b8:	sub	w0, w0, #0x30
  41c5bc:	cmp	w0, #0x7
  41c5c0:	b.hi	41c62c <ferror@plt+0x19dac>  // b.pmore
  41c5c4:	add	x25, x21, #0x3
  41c5c8:	cbz	x28, 41c5e8 <ferror@plt+0x19d68>
  41c5cc:	ldr	w19, [x28]
  41c5d0:	mov	w1, #0x60000000            	// #1610612736
  41c5d4:	cmp	w19, w1
  41c5d8:	b.hi	41c5e8 <ferror@plt+0x19d68>  // b.pmore
  41c5dc:	ldr	w1, [x28, #4]
  41c5e0:	add	w1, w1, w19
  41c5e4:	str	w1, [x28]
  41c5e8:	add	w3, w0, w3, lsl #3
  41c5ec:	cmp	x24, x25
  41c5f0:	b.ls	41c62c <ferror@plt+0x19dac>  // b.plast
  41c5f4:	ldrb	w0, [x21, #3]
  41c5f8:	sub	w0, w0, #0x30
  41c5fc:	cmp	w0, #0x7
  41c600:	b.hi	41c62c <ferror@plt+0x19dac>  // b.pmore
  41c604:	add	x25, x21, #0x4
  41c608:	cbz	x28, 41c628 <ferror@plt+0x19da8>
  41c60c:	ldr	w19, [x28]
  41c610:	mov	w1, #0x60000000            	// #1610612736
  41c614:	cmp	w19, w1
  41c618:	b.hi	41c628 <ferror@plt+0x19da8>  // b.pmore
  41c61c:	ldr	w1, [x28, #4]
  41c620:	add	w1, w1, w19
  41c624:	str	w1, [x28]
  41c628:	add	w3, w0, w3, lsl #3
  41c62c:	ldr	w0, [sp, #176]
  41c630:	and	w0, w3, w0
  41c634:	cmp	x0, w3, uxtw
  41c638:	b.eq	41c664 <ferror@plt+0x19de4>  // b.none
  41c63c:	ldr	w0, [sp, #216]
  41c640:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41c644:	mov	w1, #0x2                   	// #2
  41c648:	add	x2, x2, #0xbc8
  41c64c:	and	w3, w3, w0
  41c650:	str	w3, [sp, #204]
  41c654:	ldr	x0, [sp, #120]
  41c658:	str	w3, [sp, #220]
  41c65c:	bl	422e10 <ferror@plt+0x20590>
  41c660:	ldr	w3, [sp, #204]
  41c664:	cbz	x20, 41c688 <ferror@plt+0x19e08>
  41c668:	ldr	x1, [sp, #120]
  41c66c:	mov	w2, w3
  41c670:	ldr	w4, [sp, #200]
  41c674:	mov	x3, x20
  41c678:	mov	x0, x1
  41c67c:	add	x1, x1, #0x4da
  41c680:	ldr	x0, [x0, #1216]
  41c684:	bl	418d20 <ferror@plt+0x164a0>
  41c688:	ldr	w0, [sp, #152]
  41c68c:	cbz	w0, 41c160 <ferror@plt+0x198e0>
  41c690:	ldp	w2, w1, [x26, #8]
  41c694:	ldr	x0, [x26]
  41c698:	cmp	w2, w1
  41c69c:	b.ge	41cb98 <ferror@plt+0x1a318>  // b.tcont
  41c6a0:	sbfiz	x1, x2, #3, #32
  41c6a4:	add	w2, w2, #0x1
  41c6a8:	add	x3, x0, x1
  41c6ac:	str	w2, [x26, #8]
  41c6b0:	ldr	w2, [sp, #100]
  41c6b4:	str	w2, [x0, x1]
  41c6b8:	str	w19, [x3, #4]
  41c6bc:	b	41c160 <ferror@plt+0x198e0>
  41c6c0:	ldr	x0, [sp, #120]
  41c6c4:	ldrb	w0, [x0, #1154]
  41c6c8:	cbz	w0, 41c200 <ferror@plt+0x19980>
  41c6cc:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41c6d0:	add	x0, x0, #0x2c0
  41c6d4:	mov	w1, #0xac                  	// #172
  41c6d8:	ldrh	w0, [x0, w3, sxtw #1]
  41c6dc:	tst	w1, w0
  41c6e0:	b.ne	41c1ec <ferror@plt+0x1996c>  // b.any
  41c6e4:	mov	w2, w3
  41c6e8:	add	x0, sp, #0x120
  41c6ec:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41c6f0:	add	x1, x1, #0xc70
  41c6f4:	bl	402310 <sprintf@plt>
  41c6f8:	ldr	x0, [sp, #120]
  41c6fc:	add	x3, sp, #0x120
  41c700:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41c704:	mov	w1, #0x2                   	// #2
  41c708:	add	x2, x2, #0xc78
  41c70c:	bl	422e10 <ferror@plt+0x20590>
  41c710:	b	41c200 <ferror@plt+0x19980>
  41c714:	ldp	w1, w0, [sp, #152]
  41c718:	str	x25, [sp, #248]
  41c71c:	str	w19, [sp, #260]
  41c720:	cmp	w0, w1
  41c724:	ldr	w0, [sp, #100]
  41c728:	str	w0, [sp, #256]
  41c72c:	str	wzr, [sp, #288]
  41c730:	strb	wzr, [sp, #292]
  41c734:	str	wzr, [sp, #296]
  41c738:	b.ne	41d098 <ferror@plt+0x1a818>  // b.any
  41c73c:	add	x21, x21, #0x2
  41c740:	str	x21, [sp, #248]
  41c744:	cbz	x28, 41c768 <ferror@plt+0x19ee8>
  41c748:	ldr	w0, [x28]
  41c74c:	mov	w1, #0x60000000            	// #1610612736
  41c750:	cmp	w0, w1
  41c754:	b.hi	41c764 <ferror@plt+0x19ee4>  // b.pmore
  41c758:	ldr	w1, [x28, #4]
  41c75c:	add	w1, w1, w0
  41c760:	str	w1, [x28]
  41c764:	str	w0, [sp, #260]
  41c768:	ldr	x0, [sp, #120]
  41c76c:	mov	x7, x28
  41c770:	add	x6, sp, #0x100
  41c774:	add	x5, sp, #0xe4
  41c778:	add	x4, sp, #0x120
  41c77c:	mov	x2, x24
  41c780:	add	x1, sp, #0xf8
  41c784:	mov	w3, #0x0                   	// #0
  41c788:	bl	41a020 <ferror@plt+0x177a0>
  41c78c:	ldr	w0, [sp, #228]
  41c790:	cmp	w0, #0x7f
  41c794:	b.ls	41cac8 <ferror@plt+0x1a248>  // b.plast
  41c798:	and	w1, w0, #0x3f
  41c79c:	cmp	w0, #0xfbf
  41c7a0:	orr	w1, w1, #0xffffff80
  41c7a4:	strb	w1, [sp, #245]
  41c7a8:	lsr	w1, w0, #6
  41c7ac:	b.hi	41cbf8 <ferror@plt+0x1a378>  // b.pmore
  41c7b0:	tst	w1, #0xe0
  41c7b4:	b.eq	41cfec <ferror@plt+0x1a76c>  // b.none
  41c7b8:	orr	w1, w1, #0xffffff80
  41c7bc:	strb	w1, [sp, #244]
  41c7c0:	mov	w1, #0x0                   	// #0
  41c7c4:	orr	w0, w1, #0xffffffe0
  41c7c8:	mov	x25, #0x3                   	// #3
  41c7cc:	ldr	x1, [sp, #208]
  41c7d0:	strb	w0, [sp, #243]
  41c7d4:	mov	x21, #0x6                   	// #6
  41c7d8:	sub	x1, x1, #0x2
  41c7dc:	sub	x21, x21, x25
  41c7e0:	add	x0, sp, #0xf6
  41c7e4:	add	x2, x1, #0x1
  41c7e8:	cmp	x0, x2
  41c7ec:	sub	x0, x0, x1
  41c7f0:	csinc	x2, x0, xzr, cs  // cs = hs, nlast
  41c7f4:	add	x0, sp, #0xe8
  41c7f8:	bl	402220 <memcpy@plt>
  41c7fc:	cbz	x20, 41c81c <ferror@plt+0x19f9c>
  41c800:	ldp	x4, x0, [sp, #104]
  41c804:	mov	x2, x25
  41c808:	add	x1, sp, #0xe8
  41c80c:	mov	x3, x20
  41c810:	blr	x4
  41c814:	tst	w0, #0xff
  41c818:	b.eq	41ca84 <ferror@plt+0x1a204>  // b.none
  41c81c:	cbz	x28, 41c8fc <ferror@plt+0x1a07c>
  41c820:	ldp	w3, w1, [x26, #8]
  41c824:	mov	w0, #0x6                   	// #6
  41c828:	sub	w21, w0, w21
  41c82c:	cmp	w1, w3
  41c830:	ldr	x0, [x26]
  41c834:	ldr	x25, [sp, #256]
  41c838:	b.le	41cda8 <ferror@plt+0x1a528>
  41c83c:	add	w2, w3, #0x1
  41c840:	str	w2, [x26, #8]
  41c844:	str	x25, [x0, w3, sxtw #3]
  41c848:	cmp	w21, #0x1
  41c84c:	b.eq	41c8fc <ferror@plt+0x1a07c>  // b.none
  41c850:	ldr	w1, [x26, #12]
  41c854:	ldr	x25, [sp, #256]
  41c858:	cmp	w1, w2
  41c85c:	b.le	41cdc4 <ferror@plt+0x1a544>
  41c860:	add	w3, w2, #0x1
  41c864:	str	w3, [x26, #8]
  41c868:	str	x25, [x0, w2, sxtw #3]
  41c86c:	cmp	w21, #0x2
  41c870:	b.eq	41c8fc <ferror@plt+0x1a07c>  // b.none
  41c874:	ldr	w1, [x26, #12]
  41c878:	ldr	x25, [sp, #256]
  41c87c:	cmp	w1, w3
  41c880:	b.le	41ce30 <ferror@plt+0x1a5b0>
  41c884:	add	w2, w3, #0x1
  41c888:	str	w2, [x26, #8]
  41c88c:	str	x25, [x0, w3, sxtw #3]
  41c890:	cmp	w21, #0x3
  41c894:	b.eq	41c8fc <ferror@plt+0x1a07c>  // b.none
  41c898:	ldr	w1, [x26, #12]
  41c89c:	ldr	x25, [sp, #256]
  41c8a0:	cmp	w1, w2
  41c8a4:	b.le	41ce4c <ferror@plt+0x1a5cc>
  41c8a8:	add	w3, w2, #0x1
  41c8ac:	str	w3, [x26, #8]
  41c8b0:	str	x25, [x0, w2, sxtw #3]
  41c8b4:	cmp	w21, #0x4
  41c8b8:	b.eq	41c8fc <ferror@plt+0x1a07c>  // b.none
  41c8bc:	ldr	w1, [x26, #12]
  41c8c0:	ldr	x25, [sp, #256]
  41c8c4:	cmp	w1, w3
  41c8c8:	b.le	41cf34 <ferror@plt+0x1a6b4>
  41c8cc:	add	w2, w3, #0x1
  41c8d0:	str	w2, [x26, #8]
  41c8d4:	str	x25, [x0, w3, sxtw #3]
  41c8d8:	cmp	w21, #0x5
  41c8dc:	b.eq	41c8fc <ferror@plt+0x1a07c>  // b.none
  41c8e0:	ldr	w1, [x26, #12]
  41c8e4:	ldr	x21, [sp, #256]
  41c8e8:	cmp	w1, w2
  41c8ec:	b.le	41cf50 <ferror@plt+0x1a6d0>
  41c8f0:	add	w1, w2, #0x1
  41c8f4:	str	w1, [x26, #8]
  41c8f8:	str	x21, [x0, w2, sxtw #3]
  41c8fc:	ldr	x25, [sp, #248]
  41c900:	b	41c160 <ferror@plt+0x198e0>
  41c904:	ldr	x0, [sp, #120]
  41c908:	ldrb	w0, [x0, #1154]
  41c90c:	cbnz	w0, 41cb68 <ferror@plt+0x1a2e8>
  41c910:	mov	w0, #0x1b                  	// #27
  41c914:	strb	w0, [sp, #227]
  41c918:	b	41c200 <ferror@plt+0x19980>
  41c91c:	mov	w0, #0x8                   	// #8
  41c920:	strb	w0, [sp, #227]
  41c924:	b	41c200 <ferror@plt+0x19980>
  41c928:	ldr	x0, [sp, #120]
  41c92c:	ldrb	w0, [x0, #1138]
  41c930:	cbnz	w0, 41cb80 <ferror@plt+0x1a300>
  41c934:	mov	w0, #0x7                   	// #7
  41c938:	strb	w0, [sp, #227]
  41c93c:	b	41c200 <ferror@plt+0x19980>
  41c940:	ldp	w1, w0, [sp, #152]
  41c944:	cmp	w0, w1
  41c948:	b.ne	41d114 <ferror@plt+0x1a894>  // b.any
  41c94c:	ldr	x0, [sp, #120]
  41c950:	ldrb	w0, [x0, #1138]
  41c954:	cbnz	w0, 41cae4 <ferror@plt+0x1a264>
  41c958:	add	x25, x21, #0x2
  41c95c:	cbz	x28, 41cb00 <ferror@plt+0x1a280>
  41c960:	ldr	w19, [x28]
  41c964:	mov	w0, #0x60000000            	// #1610612736
  41c968:	cmp	w19, w0
  41c96c:	b.hi	41c97c <ferror@plt+0x1a0fc>  // b.pmore
  41c970:	ldr	w0, [x28, #4]
  41c974:	add	w0, w0, w19
  41c978:	str	w0, [x28]
  41c97c:	cmp	x24, x25
  41c980:	b.ls	41cb50 <ferror@plt+0x1a2d0>  // b.plast
  41c984:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  41c988:	mov	w2, #0x0                   	// #0
  41c98c:	add	x3, x3, #0xfa0
  41c990:	mov	w0, #0x0                   	// #0
  41c994:	mov	w21, #0x0                   	// #0
  41c998:	mov	w4, #0x60000000            	// #1610612736
  41c99c:	b	41c9d4 <ferror@plt+0x1a154>
  41c9a0:	ldr	w19, [x28]
  41c9a4:	add	x25, x25, #0x1
  41c9a8:	cmp	w19, w4
  41c9ac:	b.hi	41c9bc <ferror@plt+0x1a13c>  // b.pmore
  41c9b0:	ldr	w2, [x28, #4]
  41c9b4:	add	w2, w2, w19
  41c9b8:	str	w2, [x28]
  41c9bc:	and	w2, w21, #0xf0000000
  41c9c0:	cmp	x24, x25
  41c9c4:	orr	w0, w0, w2
  41c9c8:	add	w21, w1, w21, lsl #4
  41c9cc:	mov	w2, #0x1                   	// #1
  41c9d0:	b.eq	41cadc <ferror@plt+0x1a25c>  // b.none
  41c9d4:	ldrb	w1, [x25]
  41c9d8:	ldrb	w1, [x3, w1, sxtw]
  41c9dc:	cmp	w1, #0x63
  41c9e0:	b.ne	41c9a0 <ferror@plt+0x1a120>  // b.any
  41c9e4:	cbz	w2, 41cb50 <ferror@plt+0x1a2d0>
  41c9e8:	ldr	w1, [sp, #176]
  41c9ec:	and	w1, w21, w1
  41c9f0:	cmp	x1, w21, uxtw
  41c9f4:	cset	w1, ne  // ne = any
  41c9f8:	orr	w0, w1, w0
  41c9fc:	cbnz	w0, 41ca28 <ferror@plt+0x1a1a8>
  41ca00:	cbz	x20, 41c688 <ferror@plt+0x19e08>
  41ca04:	ldr	x1, [sp, #120]
  41ca08:	mov	w2, w21
  41ca0c:	ldr	w4, [sp, #200]
  41ca10:	mov	x3, x20
  41ca14:	mov	x0, x1
  41ca18:	add	x1, x1, #0x4da
  41ca1c:	ldr	x0, [x0, #1216]
  41ca20:	bl	418d20 <ferror@plt+0x164a0>
  41ca24:	b	41c688 <ferror@plt+0x19e08>
  41ca28:	ldr	w0, [sp, #216]
  41ca2c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41ca30:	mov	w1, #0x2                   	// #2
  41ca34:	add	x2, x2, #0xb90
  41ca38:	and	w21, w21, w0
  41ca3c:	ldr	x0, [sp, #120]
  41ca40:	bl	422e10 <ferror@plt+0x20590>
  41ca44:	b	41ca00 <ferror@plt+0x1a180>
  41ca48:	mov	w0, #0xb                   	// #11
  41ca4c:	strb	w0, [sp, #227]
  41ca50:	b	41c200 <ferror@plt+0x19980>
  41ca54:	mov	w0, #0x9                   	// #9
  41ca58:	strb	w0, [sp, #227]
  41ca5c:	b	41c200 <ferror@plt+0x19980>
  41ca60:	mov	w0, #0xd                   	// #13
  41ca64:	strb	w0, [sp, #227]
  41ca68:	b	41c200 <ferror@plt+0x19980>
  41ca6c:	mov	w0, #0xa                   	// #10
  41ca70:	strb	w0, [sp, #227]
  41ca74:	b	41c200 <ferror@plt+0x19980>
  41ca78:	mov	w0, #0xc                   	// #12
  41ca7c:	strb	w0, [sp, #227]
  41ca80:	b	41c200 <ferror@plt+0x19980>
  41ca84:	ldr	x0, [sp, #120]
  41ca88:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41ca8c:	mov	w1, #0x3                   	// #3
  41ca90:	add	x2, x2, #0xaf0
  41ca94:	bl	423628 <ferror@plt+0x20da8>
  41ca98:	b	41c81c <ferror@plt+0x19f9c>
  41ca9c:	lsl	w1, w1, #1
  41caa0:	str	w1, [x26, #12]
  41caa4:	sbfiz	x1, x1, #3, #32
  41caa8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41caac:	ldr	w2, [x26, #8]
  41cab0:	str	x0, [x26]
  41cab4:	b	41c250 <ferror@plt+0x199d0>
  41cab8:	cmp	x24, x21
  41cabc:	b.ls	41c278 <ferror@plt+0x199f8>  // b.plast
  41cac0:	add	x25, x21, #0x1
  41cac4:	b	41c1c0 <ferror@plt+0x19940>
  41cac8:	mov	x21, #0x5                   	// #5
  41cacc:	mov	x25, #0x1                   	// #1
  41cad0:	strb	w0, [sp, #245]
  41cad4:	ldr	x1, [sp, #208]
  41cad8:	b	41c7e0 <ferror@plt+0x19f60>
  41cadc:	mov	x25, x24
  41cae0:	b	41c9e8 <ferror@plt+0x1a168>
  41cae4:	ldr	x0, [sp, #120]
  41cae8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41caec:	mov	w1, #0x6                   	// #6
  41caf0:	add	x2, x2, #0xb30
  41caf4:	add	x25, x21, #0x2
  41caf8:	bl	422f30 <ferror@plt+0x206b0>
  41cafc:	cbnz	x28, 41c960 <ferror@plt+0x1a0e0>
  41cb00:	cmp	x24, x25
  41cb04:	b.ls	41cb50 <ferror@plt+0x1a2d0>  // b.plast
  41cb08:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  41cb0c:	mov	w2, #0x0                   	// #0
  41cb10:	add	x3, x3, #0xfa0
  41cb14:	mov	w0, #0x0                   	// #0
  41cb18:	mov	w21, #0x0                   	// #0
  41cb1c:	b	41cb3c <ferror@plt+0x1a2bc>
  41cb20:	and	w2, w21, #0xf0000000
  41cb24:	add	x25, x25, #0x1
  41cb28:	orr	w0, w0, w2
  41cb2c:	cmp	x24, x25
  41cb30:	add	w21, w1, w21, lsl #4
  41cb34:	mov	w2, #0x1                   	// #1
  41cb38:	b.eq	41cadc <ferror@plt+0x1a25c>  // b.none
  41cb3c:	ldrb	w1, [x25]
  41cb40:	ldrb	w1, [x3, w1, sxtw]
  41cb44:	cmp	w1, #0x63
  41cb48:	b.ne	41cb20 <ferror@plt+0x1a2a0>  // b.any
  41cb4c:	cbnz	w2, 41c9e8 <ferror@plt+0x1a168>
  41cb50:	ldr	x0, [sp, #120]
  41cb54:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41cb58:	mov	w1, #0x3                   	// #3
  41cb5c:	add	x2, x2, #0xb68
  41cb60:	bl	422e10 <ferror@plt+0x20590>
  41cb64:	b	41c160 <ferror@plt+0x198e0>
  41cb68:	ldr	x0, [sp, #120]
  41cb6c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41cb70:	mov	w1, #0x2                   	// #2
  41cb74:	add	x2, x2, #0xc28
  41cb78:	bl	422e10 <ferror@plt+0x20590>
  41cb7c:	b	41c910 <ferror@plt+0x1a090>
  41cb80:	ldr	x0, [sp, #120]
  41cb84:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41cb88:	mov	w1, #0x6                   	// #6
  41cb8c:	add	x2, x2, #0xbf0
  41cb90:	bl	422f30 <ferror@plt+0x206b0>
  41cb94:	b	41c934 <ferror@plt+0x1a0b4>
  41cb98:	lsl	w1, w1, #1
  41cb9c:	str	w1, [x26, #12]
  41cba0:	sbfiz	x1, x1, #3, #32
  41cba4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41cba8:	ldr	w2, [x26, #8]
  41cbac:	str	x0, [x26]
  41cbb0:	b	41c6a0 <ferror@plt+0x19e20>
  41cbb4:	b.ne	41c0dc <ferror@plt+0x1985c>  // b.any
  41cbb8:	add	x2, x8, #0x1
  41cbbc:	cbnz	x28, 41ccec <ferror@plt+0x1a46c>
  41cbc0:	ldrb	w0, [x8, #1]
  41cbc4:	cmp	w0, #0x38
  41cbc8:	b.eq	41d010 <ferror@plt+0x1a790>  // b.none
  41cbcc:	add	x2, x8, #0x3
  41cbd0:	cmp	w0, #0x52
  41cbd4:	b.eq	41cfb0 <ferror@plt+0x1a730>  // b.none
  41cbd8:	cmp	w0, #0x22
  41cbdc:	cset	w25, ne  // ne = any
  41cbe0:	cmp	w0, #0x27
  41cbe4:	csel	w0, w25, wzr, ne  // ne = any
  41cbe8:	str	w0, [sp, #152]
  41cbec:	cbnz	w0, 41d03c <ferror@plt+0x1a7bc>
  41cbf0:	add	x25, x8, #0x2
  41cbf4:	b	41c144 <ferror@plt+0x198c4>
  41cbf8:	and	w2, w1, #0x3f
  41cbfc:	lsr	w1, w0, #12
  41cc00:	orr	w2, w2, #0xffffff80
  41cc04:	strb	w2, [sp, #244]
  41cc08:	cmp	w1, #0x3e
  41cc0c:	b.ls	41cd2c <ferror@plt+0x1a4ac>  // b.plast
  41cc10:	and	w2, w1, #0x3f
  41cc14:	lsr	w1, w0, #18
  41cc18:	orr	w2, w2, #0xffffff80
  41cc1c:	strb	w2, [sp, #243]
  41cc20:	cmp	w1, #0x3e
  41cc24:	b.ls	41cd54 <ferror@plt+0x1a4d4>  // b.plast
  41cc28:	and	w2, w1, #0x3f
  41cc2c:	lsr	w1, w0, #24
  41cc30:	orr	w2, w2, #0xffffff80
  41cc34:	strb	w2, [sp, #242]
  41cc38:	cmp	w1, #0x3e
  41cc3c:	b.ls	41cd7c <ferror@plt+0x1a4fc>  // b.plast
  41cc40:	and	w1, w1, #0x3f
  41cc44:	lsr	w2, w0, #30
  41cc48:	orr	w1, w1, #0xffffff80
  41cc4c:	strb	w1, [sp, #241]
  41cc50:	tbz	w0, #31, 41cd94 <ferror@plt+0x1a514>
  41cc54:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x186d8>
  41cc58:	ldrb	w0, [x0, #2238]
  41cc5c:	strb	w0, [sp, #239]
  41cc60:	bl	4027c0 <__errno_location@plt>
  41cc64:	mov	w3, #0x7                   	// #7
  41cc68:	str	w3, [x0]
  41cc6c:	ldr	x0, [sp, #120]
  41cc70:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41cc74:	mov	w1, #0x3                   	// #3
  41cc78:	add	x2, x2, #0xac8
  41cc7c:	bl	423628 <ferror@plt+0x20da8>
  41cc80:	ldr	x25, [sp, #248]
  41cc84:	b	41c160 <ferror@plt+0x198e0>
  41cc88:	cmp	w4, #0x3c
  41cc8c:	b.ne	41ccc8 <ferror@plt+0x1a448>  // b.any
  41cc90:	ldr	x0, [sp, #120]
  41cc94:	ldr	x1, [x0, #544]
  41cc98:	str	x1, [sp, #104]
  41cc9c:	ldr	x1, [x0, #552]
  41cca0:	str	x1, [sp, #112]
  41cca4:	ldr	w0, [x0, #560]
  41cca8:	str	w0, [sp, #200]
  41ccac:	b	41c008 <ferror@plt+0x19788>
  41ccb0:	cmp	w4, #0x41
  41ccb4:	b.eq	41cf6c <ferror@plt+0x1a6ec>  // b.none
  41ccb8:	cmp	w4, #0x42
  41ccbc:	b.eq	41cc90 <ferror@plt+0x1a410>  // b.none
  41ccc0:	cmp	w4, #0x40
  41ccc4:	b.eq	41bfec <ferror@plt+0x1976c>  // b.none
  41ccc8:	ldr	x0, [sp, #120]
  41cccc:	ldr	x1, [x0, #520]
  41ccd0:	str	x1, [sp, #104]
  41ccd4:	ldr	x1, [x0, #528]
  41ccd8:	str	x1, [sp, #112]
  41ccdc:	ldr	w0, [x0, #536]
  41cce0:	str	w0, [sp, #200]
  41cce4:	b	41c008 <ferror@plt+0x19788>
  41cce8:	add	x2, x8, #0x1
  41ccec:	ldr	w0, [x28]
  41ccf0:	mov	w1, #0x60000000            	// #1610612736
  41ccf4:	cmp	w0, w1
  41ccf8:	b.ls	41cde0 <ferror@plt+0x1a560>  // b.plast
  41ccfc:	ldrb	w1, [x8, #1]
  41cd00:	cmp	w1, #0x38
  41cd04:	b.eq	41cfe4 <ferror@plt+0x1a764>  // b.none
  41cd08:	ldrb	w1, [x2]
  41cd0c:	cmp	w1, #0x52
  41cd10:	b.eq	41d008 <ferror@plt+0x1a788>  // b.none
  41cd14:	cmp	w1, #0x27
  41cd18:	mov	w0, #0x22                  	// #34
  41cd1c:	ccmp	w1, w0, #0x4, ne  // ne = any
  41cd20:	b.ne	41d03c <ferror@plt+0x1a7bc>  // b.any
  41cd24:	add	x25, x2, #0x1
  41cd28:	b	41c120 <ferror@plt+0x198a0>
  41cd2c:	tst	w1, #0xf0
  41cd30:	b.eq	41c7c4 <ferror@plt+0x19f44>  // b.none
  41cd34:	orr	w1, w1, #0xffffff80
  41cd38:	strb	w1, [sp, #243]
  41cd3c:	mov	w1, #0x0                   	// #0
  41cd40:	orr	w0, w1, #0xfffffff0
  41cd44:	mov	x25, #0x4                   	// #4
  41cd48:	add	x1, sp, #0xf4
  41cd4c:	strb	w0, [sp, #242]
  41cd50:	b	41c7d4 <ferror@plt+0x19f54>
  41cd54:	tst	w1, #0xf8
  41cd58:	b.eq	41cd40 <ferror@plt+0x1a4c0>  // b.none
  41cd5c:	orr	w1, w1, #0xffffff80
  41cd60:	strb	w1, [sp, #242]
  41cd64:	mov	w1, #0x0                   	// #0
  41cd68:	orr	w0, w1, #0xfffffff8
  41cd6c:	mov	x25, #0x5                   	// #5
  41cd70:	add	x1, sp, #0xf3
  41cd74:	strb	w0, [sp, #241]
  41cd78:	b	41c7d4 <ferror@plt+0x19f54>
  41cd7c:	tst	w1, #0xfc
  41cd80:	b.eq	41cd68 <ferror@plt+0x1a4e8>  // b.none
  41cd84:	and	w1, w1, #0x3f
  41cd88:	lsr	w2, w0, #30
  41cd8c:	orr	w0, w1, #0xffffff80
  41cd90:	strb	w0, [sp, #241]
  41cd94:	orr	w2, w2, #0xfffffffc
  41cd98:	add	x1, sp, #0xf2
  41cd9c:	mov	x25, #0x6                   	// #6
  41cda0:	strb	w2, [sp, #240]
  41cda4:	b	41c7d4 <ferror@plt+0x19f54>
  41cda8:	lsl	w1, w1, #1
  41cdac:	str	w1, [x26, #12]
  41cdb0:	sbfiz	x1, x1, #3, #32
  41cdb4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41cdb8:	ldr	w3, [x26, #8]
  41cdbc:	str	x0, [x26]
  41cdc0:	b	41c83c <ferror@plt+0x19fbc>
  41cdc4:	lsl	w1, w1, #1
  41cdc8:	str	w1, [x26, #12]
  41cdcc:	sbfiz	x1, x1, #3, #32
  41cdd0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41cdd4:	ldr	w2, [x26, #8]
  41cdd8:	str	x0, [x26]
  41cddc:	b	41c860 <ferror@plt+0x19fe0>
  41cde0:	ldr	w3, [x28, #4]
  41cde4:	add	w0, w0, w3
  41cde8:	str	w0, [x28]
  41cdec:	ldrb	w4, [x8, #1]
  41cdf0:	cmp	w4, #0x38
  41cdf4:	b.ne	41cd08 <ferror@plt+0x1a488>  // b.any
  41cdf8:	cmp	w0, w1
  41cdfc:	add	x2, x8, #0x2
  41ce00:	b.hi	41ce0c <ferror@plt+0x1a58c>  // b.pmore
  41ce04:	add	w0, w0, w3
  41ce08:	str	w0, [x28]
  41ce0c:	ldrb	w1, [x2]
  41ce10:	cmp	w1, #0x52
  41ce14:	b.eq	41d008 <ferror@plt+0x1a788>  // b.none
  41ce18:	cmp	w1, #0x27
  41ce1c:	mov	w3, #0x22                  	// #34
  41ce20:	ccmp	w1, w3, #0x4, ne  // ne = any
  41ce24:	b.ne	41d03c <ferror@plt+0x1a7bc>  // b.any
  41ce28:	add	x25, x2, #0x1
  41ce2c:	b	41c124 <ferror@plt+0x198a4>
  41ce30:	lsl	w1, w1, #1
  41ce34:	str	w1, [x26, #12]
  41ce38:	sbfiz	x1, x1, #3, #32
  41ce3c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41ce40:	ldr	w3, [x26, #8]
  41ce44:	str	x0, [x26]
  41ce48:	b	41c884 <ferror@plt+0x1a004>
  41ce4c:	lsl	w1, w1, #1
  41ce50:	str	w1, [x26, #12]
  41ce54:	sbfiz	x1, x1, #3, #32
  41ce58:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41ce5c:	ldr	w2, [x26, #8]
  41ce60:	str	x0, [x26]
  41ce64:	b	41c8a8 <ferror@plt+0x1a028>
  41ce68:	cbz	x28, 41c278 <ferror@plt+0x199f8>
  41ce6c:	ldr	x1, [sp, #104]
  41ce70:	adrp	x0, 418000 <ferror@plt+0x15780>
  41ce74:	add	x0, x0, #0xca0
  41ce78:	cmp	x1, x0
  41ce7c:	b.ne	41d0fc <ferror@plt+0x1a87c>  // b.any
  41ce80:	sub	x2, x25, x27
  41ce84:	cmp	w2, #0x0
  41ce88:	b.le	41c278 <ferror@plt+0x199f8>
  41ce8c:	ldp	w1, w4, [x26, #8]
  41ce90:	mov	w22, w2
  41ce94:	ldr	x0, [x26]
  41ce98:	mov	w27, #0x0                   	// #0
  41ce9c:	mov	w24, #0x60000000            	// #1610612736
  41cea0:	ldr	w21, [x28]
  41cea4:	cmp	w21, w24
  41cea8:	b.hi	41ceb8 <ferror@plt+0x1a638>  // b.pmore
  41ceac:	ldr	w3, [x28, #4]
  41ceb0:	add	w3, w3, w21
  41ceb4:	str	w3, [x28]
  41ceb8:	cmp	w4, w1
  41cebc:	b.le	41cee4 <ferror@plt+0x1a664>
  41cec0:	dup	v0.2s, w21
  41cec4:	add	w3, w1, #0x1
  41cec8:	str	w3, [x26, #8]
  41cecc:	add	w27, w27, #0x1
  41ced0:	cmp	w22, w27
  41ced4:	str	d0, [x0, w1, sxtw #3]
  41ced8:	b.eq	41c278 <ferror@plt+0x199f8>  // b.none
  41cedc:	mov	w1, w3
  41cee0:	b	41cea0 <ferror@plt+0x1a620>
  41cee4:	lsl	w1, w4, #1
  41cee8:	str	w1, [x26, #12]
  41ceec:	add	w27, w27, #0x1
  41cef0:	sbfiz	x1, x1, #3, #32
  41cef4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41cef8:	ldr	w1, [x26, #8]
  41cefc:	dup	v0.2s, w21
  41cf00:	str	x0, [x26]
  41cf04:	cmp	w22, w27
  41cf08:	add	w3, w1, #0x1
  41cf0c:	str	w3, [x26, #8]
  41cf10:	str	d0, [x0, w1, sxtw #3]
  41cf14:	b.eq	41c278 <ferror@plt+0x199f8>  // b.none
  41cf18:	ldr	w4, [x26, #12]
  41cf1c:	mov	w1, w3
  41cf20:	b	41cea0 <ferror@plt+0x1a620>
  41cf24:	ldr	x0, [sp, #192]
  41cf28:	cbnz	x0, 41c060 <ferror@plt+0x197e0>
  41cf2c:	mov	w19, #0x1                   	// #1
  41cf30:	b	41c500 <ferror@plt+0x19c80>
  41cf34:	lsl	w1, w1, #1
  41cf38:	str	w1, [x26, #12]
  41cf3c:	sbfiz	x1, x1, #3, #32
  41cf40:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41cf44:	ldr	w3, [x26, #8]
  41cf48:	str	x0, [x26]
  41cf4c:	b	41c8cc <ferror@plt+0x1a04c>
  41cf50:	lsl	w1, w1, #1
  41cf54:	str	w1, [x26, #12]
  41cf58:	sbfiz	x1, x1, #3, #32
  41cf5c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41cf60:	ldr	w2, [x26, #8]
  41cf64:	str	x0, [x26]
  41cf68:	b	41c8f0 <ferror@plt+0x1a070>
  41cf6c:	ldr	x0, [sp, #120]
  41cf70:	ldr	x1, [x0, #592]
  41cf74:	str	x1, [sp, #104]
  41cf78:	ldr	x1, [x0, #600]
  41cf7c:	str	x1, [sp, #112]
  41cf80:	ldr	w0, [x0, #608]
  41cf84:	str	w0, [sp, #200]
  41cf88:	b	41c008 <ferror@plt+0x19788>
  41cf8c:	ldr	x0, [sp, #120]
  41cf90:	ldr	x1, [x0, #616]
  41cf94:	str	x1, [sp, #104]
  41cf98:	ldr	x1, [x0, #624]
  41cf9c:	str	x1, [sp, #112]
  41cfa0:	ldr	w0, [x0, #632]
  41cfa4:	str	w0, [sp, #200]
  41cfa8:	b	41c008 <ferror@plt+0x19788>
  41cfac:	add	x2, x8, #0x4
  41cfb0:	ldrb	w1, [x2]
  41cfb4:	mov	x0, x2
  41cfb8:	cmp	w1, #0x28
  41cfbc:	b.eq	41d144 <ferror@plt+0x1a8c4>  // b.none
  41cfc0:	mov	x3, x0
  41cfc4:	ldrb	w1, [x0, #1]!
  41cfc8:	cmp	w1, #0x28
  41cfcc:	b.ne	41cfc0 <ferror@plt+0x1a740>  // b.any
  41cfd0:	add	x27, x3, #0x2
  41cfd4:	mov	x28, #0x0                   	// #0
  41cfd8:	sub	x2, x27, x2
  41cfdc:	add	x3, x2, #0x1
  41cfe0:	b	41c494 <ferror@plt+0x19c14>
  41cfe4:	add	x2, x8, #0x2
  41cfe8:	b	41ce0c <ferror@plt+0x1a58c>
  41cfec:	orr	w0, w1, #0xffffffc0
  41cff0:	mov	x25, #0x2                   	// #2
  41cff4:	add	x1, sp, #0xf6
  41cff8:	strb	w0, [sp, #244]
  41cffc:	b	41c7d4 <ferror@plt+0x19f54>
  41d000:	mov	w3, #0x0                   	// #0
  41d004:	b	41c664 <ferror@plt+0x19de4>
  41d008:	add	x2, x2, #0x2
  41d00c:	b	41c408 <ferror@plt+0x19b88>
  41d010:	ldrb	w0, [x8, #2]
  41d014:	cmp	w0, #0x52
  41d018:	b.eq	41cfac <ferror@plt+0x1a72c>  // b.none
  41d01c:	cmp	w0, #0x27
  41d020:	cset	w25, ne  // ne = any
  41d024:	cmp	w0, #0x22
  41d028:	csel	w0, w25, wzr, ne  // ne = any
  41d02c:	str	w0, [sp, #152]
  41d030:	cbnz	w0, 41d03c <ferror@plt+0x1a7bc>
  41d034:	add	x25, x8, #0x3
  41d038:	b	41c144 <ferror@plt+0x198c4>
  41d03c:	cbz	x26, 41d158 <ferror@plt+0x1a8d8>
  41d040:	ldr	x0, [sp, #120]
  41d044:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d048:	mov	w1, #0x3                   	// #3
  41d04c:	add	x2, x2, #0xaa0
  41d050:	mov	w19, #0x0                   	// #0
  41d054:	bl	422e10 <ferror@plt+0x20590>
  41d058:	ldr	x0, [sp, #128]
  41d05c:	cbnz	x0, 41c4f0 <ferror@plt+0x19c70>
  41d060:	ldp	x21, x22, [sp, #32]
  41d064:	ldp	x23, x24, [sp, #48]
  41d068:	b	41c500 <ferror@plt+0x19c80>
  41d06c:	add	x27, x2, #0x1
  41d070:	mov	x3, #0x2                   	// #2
  41d074:	mov	x2, #0x1                   	// #1
  41d078:	b	41c47c <ferror@plt+0x19bfc>
  41d07c:	lsl	w1, w1, #1
  41d080:	str	w1, [x26, #12]
  41d084:	sbfiz	x1, x1, #3, #32
  41d088:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41d08c:	ldr	w2, [x26, #8]
  41d090:	str	x0, [x26]
  41d094:	b	41c318 <ferror@plt+0x19a98>
  41d098:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d09c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d0a0:	add	x2, x2, #0xab8
  41d0a4:	add	x0, x0, #0x958
  41d0a8:	mov	w1, #0x48d                 	// #1165
  41d0ac:	bl	4028b0 <ferror@plt+0x30>
  41d0b0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d0b4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d0b8:	add	x2, x2, #0xbb8
  41d0bc:	add	x0, x0, #0x958
  41d0c0:	mov	w1, #0x540                 	// #1344
  41d0c4:	bl	4028b0 <ferror@plt+0x30>
  41d0c8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d0cc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d0d0:	add	x2, x2, #0xa88
  41d0d4:	add	x0, x0, #0x958
  41d0d8:	mov	w1, #0x5fc                 	// #1532
  41d0dc:	stp	x21, x22, [sp, #32]
  41d0e0:	stp	x23, x24, [sp, #48]
  41d0e4:	stp	x27, x28, [sp, #80]
  41d0e8:	bl	4028b0 <ferror@plt+0x30>
  41d0ec:	add	x0, sp, #0x108
  41d0f0:	mov	x27, #0x0                   	// #0
  41d0f4:	str	x0, [sp, #136]
  41d0f8:	b	41c2a8 <ferror@plt+0x19a28>
  41d0fc:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d100:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d104:	add	x2, x2, #0xa88
  41d108:	add	x0, x0, #0x958
  41d10c:	mov	w1, #0x641                 	// #1601
  41d110:	bl	4028b0 <ferror@plt+0x30>
  41d114:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d118:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d11c:	add	x2, x2, #0xb20
  41d120:	add	x0, x0, #0x958
  41d124:	mov	w1, #0x4f9                 	// #1273
  41d128:	bl	4028b0 <ferror@plt+0x30>
  41d12c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d130:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d134:	add	x2, x2, #0xa88
  41d138:	add	x0, x0, #0x958
  41d13c:	mov	w1, #0x66c                 	// #1644
  41d140:	bl	4028b0 <ferror@plt+0x30>
  41d144:	add	x27, x2, #0x1
  41d148:	mov	x3, #0x2                   	// #2
  41d14c:	mov	x2, #0x1                   	// #1
  41d150:	mov	x28, #0x0                   	// #0
  41d154:	b	41c494 <ferror@plt+0x19c14>
  41d158:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d15c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d160:	add	x2, x2, #0xa88
  41d164:	add	x0, x0, #0x958
  41d168:	mov	w1, #0x64d                 	// #1613
  41d16c:	bl	4028b0 <ferror@plt+0x30>
  41d170:	mov	x6, #0x0                   	// #0
  41d174:	mov	x5, #0x0                   	// #0
  41d178:	b	41bfa8 <ferror@plt+0x19728>
  41d17c:	nop
  41d180:	stp	x29, x30, [sp, #-32]!
  41d184:	mov	w7, w5
  41d188:	cmp	w5, #0x3f
  41d18c:	mov	x29, sp
  41d190:	stp	x19, x20, [sp, #16]
  41d194:	mov	x19, x0
  41d198:	b.eq	41d274 <ferror@plt+0x1a9f4>  // b.none
  41d19c:	b.hi	41d254 <ferror@plt+0x1a9d4>  // b.pmore
  41d1a0:	cmp	w5, #0x3b
  41d1a4:	b.eq	41d27c <ferror@plt+0x1a9fc>  // b.none
  41d1a8:	b.ls	41d21c <ferror@plt+0x1a99c>  // b.plast
  41d1ac:	cmp	w5, #0x3c
  41d1b0:	b.ne	41d26c <ferror@plt+0x1a9ec>  // b.any
  41d1b4:	ldr	x5, [x19, #544]
  41d1b8:	adrp	x0, 418000 <ferror@plt+0x15780>
  41d1bc:	add	x0, x0, #0xca0
  41d1c0:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d1c4:	cmp	x5, x0
  41d1c8:	add	x0, x8, #0xcd0
  41d1cc:	b.ne	41d248 <ferror@plt+0x1a9c8>  // b.any
  41d1d0:	adrp	x0, 418000 <ferror@plt+0x15780>
  41d1d4:	add	x0, x0, #0x8c0
  41d1d8:	ldr	x20, [x19, #1000]
  41d1dc:	str	x0, [x19, #1000]
  41d1e0:	mov	x6, x4
  41d1e4:	mov	x5, x2
  41d1e8:	mov	w4, w7
  41d1ec:	mov	x2, x3
  41d1f0:	mov	x0, x19
  41d1f4:	mov	x3, #0x0                   	// #0
  41d1f8:	bl	41bfa8 <ferror@plt+0x19728>
  41d1fc:	str	x20, [x19, #1000]
  41d200:	tst	w0, #0xff
  41d204:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d208:	add	x1, x1, #0xd00
  41d20c:	csel	x0, x1, xzr, eq  // eq = none
  41d210:	ldp	x19, x20, [sp, #16]
  41d214:	ldp	x29, x30, [sp], #32
  41d218:	ret
  41d21c:	cmp	w5, #0x39
  41d220:	b.eq	41d274 <ferror@plt+0x1a9f4>  // b.none
  41d224:	cmp	w5, #0x3a
  41d228:	b.ne	41d26c <ferror@plt+0x1a9ec>  // b.any
  41d22c:	ldr	x5, [x19, #568]
  41d230:	adrp	x0, 418000 <ferror@plt+0x15780>
  41d234:	add	x0, x0, #0xca0
  41d238:	adrp	x8, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d23c:	cmp	x5, x0
  41d240:	add	x0, x8, #0xcd0
  41d244:	b.eq	41d1d0 <ferror@plt+0x1a950>  // b.none
  41d248:	ldp	x19, x20, [sp, #16]
  41d24c:	ldp	x29, x30, [sp], #32
  41d250:	ret
  41d254:	cmp	w5, #0x41
  41d258:	b.eq	41d27c <ferror@plt+0x1a9fc>  // b.none
  41d25c:	cmp	w5, #0x42
  41d260:	b.eq	41d1b4 <ferror@plt+0x1a934>  // b.none
  41d264:	cmp	w5, #0x40
  41d268:	b.eq	41d22c <ferror@plt+0x1a9ac>  // b.none
  41d26c:	ldr	x5, [x19, #520]
  41d270:	b	41d230 <ferror@plt+0x1a9b0>
  41d274:	ldr	x5, [x19, #616]
  41d278:	b	41d230 <ferror@plt+0x1a9b0>
  41d27c:	ldr	x5, [x19, #592]
  41d280:	b	41d230 <ferror@plt+0x1a9b0>
  41d284:	nop
  41d288:	stp	x29, x30, [sp, #-64]!
  41d28c:	adrp	x8, 418000 <ferror@plt+0x15780>
  41d290:	add	x8, x8, #0xca0
  41d294:	mov	x29, sp
  41d298:	ldr	x9, [x0, #536]
  41d29c:	mov	x11, #0xffffffffffffffff    	// #-1
  41d2a0:	ldr	x10, [x0, #1216]
  41d2a4:	str	x19, [sp, #16]
  41d2a8:	add	x19, x0, #0x208
  41d2ac:	mov	x6, #0x0                   	// #0
  41d2b0:	mov	x5, #0x0                   	// #0
  41d2b4:	mov	w4, #0x3e                  	// #62
  41d2b8:	str	x9, [sp, #56]
  41d2bc:	ldp	x12, x13, [x19]
  41d2c0:	str	x8, [x0, #520]
  41d2c4:	str	x11, [x0, #528]
  41d2c8:	str	w10, [x0, #536]
  41d2cc:	stp	x12, x13, [sp, #40]
  41d2d0:	bl	41bfa8 <ferror@plt+0x19728>
  41d2d4:	ldp	x2, x3, [sp, #40]
  41d2d8:	stp	x2, x3, [x19]
  41d2dc:	ldr	x1, [sp, #56]
  41d2e0:	str	x1, [x19, #16]
  41d2e4:	ldr	x19, [sp, #16]
  41d2e8:	ldp	x29, x30, [sp], #64
  41d2ec:	ret
  41d2f0:	stp	x29, x30, [sp, #-96]!
  41d2f4:	mov	x29, sp
  41d2f8:	ldrb	w4, [x1, #4]
  41d2fc:	stp	x21, x22, [sp, #32]
  41d300:	mov	x22, x1
  41d304:	and	w21, w4, #0xfffffffb
  41d308:	cmp	w21, #0x38
  41d30c:	stp	x23, x24, [sp, #48]
  41d310:	mov	x23, x2
  41d314:	cset	w2, ne  // ne = any
  41d318:	cmp	w4, #0x3c
  41d31c:	mov	x24, x3
  41d320:	ldr	w3, [x1, #8]
  41d324:	cset	w1, eq  // eq = none
  41d328:	add	w2, w2, #0x2
  41d32c:	stp	x19, x20, [sp, #16]
  41d330:	add	w1, w2, w1, lsl #1
  41d334:	str	wzr, [sp, #80]
  41d338:	str	xzr, [sp, #88]
  41d33c:	cmp	x3, w1, sxtw
  41d340:	b.eq	41d710 <ferror@plt+0x1ae90>  // b.none
  41d344:	add	x3, sp, #0x50
  41d348:	add	x1, x22, #0x8
  41d34c:	mov	x6, #0x0                   	// #0
  41d350:	mov	x5, #0x0                   	// #0
  41d354:	mov	x2, #0x1                   	// #1
  41d358:	stp	x25, x26, [sp, #64]
  41d35c:	mov	x25, x0
  41d360:	bl	41bfa8 <ferror@plt+0x19728>
  41d364:	tst	w0, #0xff
  41d368:	b.eq	41d6e8 <ferror@plt+0x1ae68>  // b.none
  41d36c:	ldr	x20, [x25, #1216]
  41d370:	mov	x1, #0x20                  	// #32
  41d374:	and	w21, w21, #0xff
  41d378:	mov	x5, #0x1                   	// #1
  41d37c:	cmp	x20, x1
  41d380:	ldr	w19, [sp, #80]
  41d384:	csel	x1, x20, x1, ls  // ls = plast
  41d388:	cmp	w21, #0x38
  41d38c:	ldr	x0, [sp, #88]
  41d390:	lsl	x5, x5, x1
  41d394:	sub	x5, x5, #0x1
  41d398:	b.eq	41d3cc <ferror@plt+0x1ab4c>  // b.none
  41d39c:	ldrb	w26, [x22, #4]
  41d3a0:	ldrb	w1, [x25, #1242]
  41d3a4:	cmp	w26, #0x3f
  41d3a8:	b.eq	41d770 <ferror@plt+0x1aef0>  // b.none
  41d3ac:	b.hi	41d6c8 <ferror@plt+0x1ae48>  // b.pmore
  41d3b0:	cmp	w26, #0x3b
  41d3b4:	b.eq	41d778 <ferror@plt+0x1aef8>  // b.none
  41d3b8:	b.ls	41d5e0 <ferror@plt+0x1ad60>  // b.plast
  41d3bc:	cmp	w26, #0x3c
  41d3c0:	b.ne	41d6e0 <ferror@plt+0x1ae60>  // b.any
  41d3c4:	ldr	w21, [x25, #560]
  41d3c8:	b	41d5f4 <ferror@plt+0x1ad74>
  41d3cc:	ldr	x6, [x25, #1224]
  41d3d0:	sub	w2, w19, #0x1
  41d3d4:	mov	x19, x2
  41d3d8:	udiv	x26, x6, x20
  41d3dc:	cbz	w2, 41d7b0 <ferror@plt+0x1af30>
  41d3e0:	cmp	x20, #0x1f
  41d3e4:	mov	w3, w5
  41d3e8:	b.ls	41d744 <ferror@plt+0x1aec4>  // b.plast
  41d3ec:	sub	x1, x2, #0x1
  41d3f0:	and	w3, w5, #0xff
  41d3f4:	cmp	x1, #0xe
  41d3f8:	fmov	s1, w3
  41d3fc:	b.ls	41d87c <ferror@plt+0x1affc>  // b.plast
  41d400:	and	x3, x2, #0xfffffff0
  41d404:	mov	x1, x0
  41d408:	dup	v1.16b, v1.b[0]
  41d40c:	add	x3, x3, x0
  41d410:	ldr	q0, [x1], #16
  41d414:	and	v0.16b, v0.16b, v1.16b
  41d418:	cmp	x1, x3
  41d41c:	uxtl2	v0.8h, v0.16b
  41d420:	uxtl2	v0.4s, v0.8h
  41d424:	b.ne	41d410 <ferror@plt+0x1ab90>  // b.any
  41d428:	mov	w19, v0.s[3]
  41d42c:	tst	x2, #0xffffffff0000000f
  41d430:	and	x1, x2, #0xfffffffffffffff0
  41d434:	b.eq	41d558 <ferror@plt+0x1acd8>  // b.none
  41d438:	ldrb	w19, [x0, x1]
  41d43c:	add	x3, x1, #0x1
  41d440:	cmp	x2, x3
  41d444:	and	w19, w19, w5
  41d448:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d44c:	ldrb	w19, [x0, x3]
  41d450:	add	x3, x1, #0x2
  41d454:	cmp	x2, x3
  41d458:	and	w19, w19, w5
  41d45c:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d460:	ldrb	w19, [x0, x3]
  41d464:	add	x3, x1, #0x3
  41d468:	cmp	x2, x3
  41d46c:	and	w19, w19, w5
  41d470:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d474:	ldrb	w19, [x0, x3]
  41d478:	add	x3, x1, #0x4
  41d47c:	cmp	x2, x3
  41d480:	and	w19, w19, w5
  41d484:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d488:	ldrb	w19, [x0, x3]
  41d48c:	add	x3, x1, #0x5
  41d490:	cmp	x3, x2
  41d494:	and	w19, w19, w5
  41d498:	b.cs	41d558 <ferror@plt+0x1acd8>  // b.hs, b.nlast
  41d49c:	ldrb	w19, [x0, x3]
  41d4a0:	add	x3, x1, #0x6
  41d4a4:	cmp	x2, x3
  41d4a8:	and	w19, w19, w5
  41d4ac:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d4b0:	ldrb	w19, [x0, x3]
  41d4b4:	add	x3, x1, #0x7
  41d4b8:	cmp	x3, x2
  41d4bc:	and	w19, w19, w5
  41d4c0:	b.cs	41d558 <ferror@plt+0x1acd8>  // b.hs, b.nlast
  41d4c4:	ldrb	w19, [x0, x3]
  41d4c8:	add	x3, x1, #0x8
  41d4cc:	cmp	x2, x3
  41d4d0:	and	w19, w19, w5
  41d4d4:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d4d8:	ldrb	w19, [x0, x3]
  41d4dc:	add	x3, x1, #0x9
  41d4e0:	cmp	x2, x3
  41d4e4:	and	w19, w19, w5
  41d4e8:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d4ec:	ldrb	w19, [x0, x3]
  41d4f0:	add	x3, x1, #0xa
  41d4f4:	cmp	x2, x3
  41d4f8:	and	w19, w19, w5
  41d4fc:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d500:	ldrb	w19, [x0, x3]
  41d504:	add	x3, x1, #0xb
  41d508:	cmp	x3, x2
  41d50c:	and	w19, w19, w5
  41d510:	b.cs	41d558 <ferror@plt+0x1acd8>  // b.hs, b.nlast
  41d514:	ldrb	w19, [x0, x3]
  41d518:	add	x3, x1, #0xc
  41d51c:	cmp	x3, x2
  41d520:	and	w19, w19, w5
  41d524:	b.cs	41d558 <ferror@plt+0x1acd8>  // b.hs, b.nlast
  41d528:	ldrb	w19, [x0, x3]
  41d52c:	add	x3, x1, #0xd
  41d530:	cmp	x2, x3
  41d534:	and	w19, w19, w5
  41d538:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d53c:	ldrb	w19, [x0, x3]
  41d540:	add	x1, x1, #0xe
  41d544:	cmp	x2, x1
  41d548:	and	w19, w19, w5
  41d54c:	b.ls	41d558 <ferror@plt+0x1acd8>  // b.plast
  41d550:	ldrb	w19, [x0, x1]
  41d554:	and	w19, w19, w5
  41d558:	mov	x4, x2
  41d55c:	cmp	x4, x26
  41d560:	b.hi	41d7e0 <ferror@plt+0x1af60>  // b.pmore
  41d564:	cmp	x4, #0x1
  41d568:	mov	w21, w4
  41d56c:	b.eq	41d7b4 <ferror@plt+0x1af34>  // b.none
  41d570:	ldrb	w1, [x25, #1137]
  41d574:	cbnz	w1, 41d854 <ferror@plt+0x1afd4>
  41d578:	cmp	x6, #0x1f
  41d57c:	mov	w1, #0x0                   	// #0
  41d580:	b.hi	41d5b0 <ferror@plt+0x1ad30>  // b.pmore
  41d584:	mov	w20, #0x1                   	// #1
  41d588:	mov	w2, w6
  41d58c:	lsl	w20, w20, w6
  41d590:	sub	w3, w20, #0x1
  41d594:	sub	w2, w2, #0x1
  41d598:	mov	w1, #0x1                   	// #1
  41d59c:	lsl	w2, w1, w2
  41d5a0:	tst	w2, w19
  41d5a4:	b.ne	41d844 <ferror@plt+0x1afc4>  // b.any
  41d5a8:	and	w19, w19, w3
  41d5ac:	mov	w1, #0x0                   	// #0
  41d5b0:	str	w21, [x23]
  41d5b4:	str	w1, [x24]
  41d5b8:	ldr	x1, [x22, #16]
  41d5bc:	cmp	x1, x0
  41d5c0:	b.ne	41d6a8 <ferror@plt+0x1ae28>  // b.any
  41d5c4:	mov	w0, w19
  41d5c8:	ldp	x19, x20, [sp, #16]
  41d5cc:	ldp	x21, x22, [sp, #32]
  41d5d0:	ldp	x23, x24, [sp, #48]
  41d5d4:	ldp	x25, x26, [sp, #64]
  41d5d8:	ldp	x29, x30, [sp], #96
  41d5dc:	ret
  41d5e0:	cmp	w26, #0x39
  41d5e4:	b.eq	41d770 <ferror@plt+0x1aef0>  // b.none
  41d5e8:	cmp	w26, #0x3a
  41d5ec:	b.ne	41d6e0 <ferror@plt+0x1ae60>  // b.any
  41d5f0:	ldr	w21, [x25, #584]
  41d5f4:	sxtw	x21, w21
  41d5f8:	mov	w7, w19
  41d5fc:	cmp	x21, x20
  41d600:	udiv	x6, x21, x20
  41d604:	lsl	x9, x6, #1
  41d608:	sub	x4, x7, x9
  41d60c:	b.cc	41d874 <ferror@plt+0x1aff4>  // b.lo, b.ul, b.last
  41d610:	cbnz	w1, 41d780 <ferror@plt+0x1af00>
  41d614:	add	x3, x6, x4
  41d618:	add	x8, x0, x6
  41d61c:	add	x3, x0, x3
  41d620:	mov	w19, #0x0                   	// #0
  41d624:	nop
  41d628:	ldrb	w2, [x3, #-1]!
  41d62c:	lsl	w19, w19, w20
  41d630:	sub	x1, x4, x3
  41d634:	and	w2, w2, w5
  41d638:	add	x1, x1, x8
  41d63c:	orr	w19, w2, w19
  41d640:	cmp	x6, x1
  41d644:	b.hi	41d628 <ferror@plt+0x1ada8>  // b.pmore
  41d648:	cmp	x7, x9
  41d64c:	b.hi	41d80c <ferror@plt+0x1af8c>  // b.pmore
  41d650:	sub	w1, w26, #0x3a
  41d654:	cmp	x21, #0x1f
  41d658:	b.hi	41d67c <ferror@plt+0x1adfc>  // b.pmore
  41d65c:	mov	x4, #0x1                   	// #1
  41d660:	cmp	w1, #0x1
  41d664:	lsl	x3, x4, x21
  41d668:	b.ls	41d674 <ferror@plt+0x1adf4>  // b.plast
  41d66c:	ldrb	w2, [x25, #1241]
  41d670:	cbz	w2, 41d828 <ferror@plt+0x1afa8>
  41d674:	sub	x3, x3, #0x1
  41d678:	and	w19, w19, w3
  41d67c:	cmp	w1, #0x1
  41d680:	mov	w1, #0x1                   	// #1
  41d684:	b.ls	41d690 <ferror@plt+0x1ae10>  // b.plast
  41d688:	ldrb	w2, [x25, #1241]
  41d68c:	mov	w1, w2
  41d690:	str	w1, [x24]
  41d694:	mov	w1, #0x1                   	// #1
  41d698:	str	w1, [x23]
  41d69c:	ldr	x1, [x22, #16]
  41d6a0:	cmp	x1, x0
  41d6a4:	b.eq	41d5c4 <ferror@plt+0x1ad44>  // b.none
  41d6a8:	bl	402640 <free@plt>
  41d6ac:	mov	w0, w19
  41d6b0:	ldp	x19, x20, [sp, #16]
  41d6b4:	ldp	x21, x22, [sp, #32]
  41d6b8:	ldp	x23, x24, [sp, #48]
  41d6bc:	ldp	x25, x26, [sp, #64]
  41d6c0:	ldp	x29, x30, [sp], #96
  41d6c4:	ret
  41d6c8:	cmp	w26, #0x41
  41d6cc:	b.eq	41d778 <ferror@plt+0x1aef8>  // b.none
  41d6d0:	cmp	w26, #0x42
  41d6d4:	b.eq	41d3c4 <ferror@plt+0x1ab44>  // b.none
  41d6d8:	cmp	w26, #0x40
  41d6dc:	b.eq	41d5f0 <ferror@plt+0x1ad70>  // b.none
  41d6e0:	ldr	w21, [x25, #536]
  41d6e4:	b	41d5f4 <ferror@plt+0x1ad74>
  41d6e8:	ldp	x25, x26, [sp, #64]
  41d6ec:	str	wzr, [x23]
  41d6f0:	str	wzr, [x24]
  41d6f4:	mov	w19, #0x0                   	// #0
  41d6f8:	mov	w0, w19
  41d6fc:	ldp	x19, x20, [sp, #16]
  41d700:	ldp	x21, x22, [sp, #32]
  41d704:	ldp	x23, x24, [sp, #48]
  41d708:	ldp	x29, x30, [sp], #96
  41d70c:	ret
  41d710:	mov	w1, #0x3                   	// #3
  41d714:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d718:	add	x2, x2, #0xd20
  41d71c:	bl	422e10 <ferror@plt+0x20590>
  41d720:	str	wzr, [x23]
  41d724:	mov	w19, #0x0                   	// #0
  41d728:	str	wzr, [x24]
  41d72c:	mov	w0, w19
  41d730:	ldp	x19, x20, [sp, #16]
  41d734:	ldp	x21, x22, [sp, #32]
  41d738:	ldp	x23, x24, [sp, #48]
  41d73c:	ldp	x29, x30, [sp], #96
  41d740:	ret
  41d744:	mov	w19, #0x0                   	// #0
  41d748:	mov	x4, #0x0                   	// #0
  41d74c:	nop
  41d750:	ldrb	w1, [x0, x4]
  41d754:	add	x4, x4, #0x1
  41d758:	lsl	w19, w19, w20
  41d75c:	cmp	x2, x4
  41d760:	and	w1, w1, w3
  41d764:	orr	w19, w1, w19
  41d768:	b.ne	41d750 <ferror@plt+0x1aed0>  // b.any
  41d76c:	b	41d55c <ferror@plt+0x1acdc>
  41d770:	ldr	w21, [x25, #632]
  41d774:	b	41d5f4 <ferror@plt+0x1ad74>
  41d778:	ldr	w21, [x25, #608]
  41d77c:	b	41d5f4 <ferror@plt+0x1ad74>
  41d780:	add	x4, x0, x4
  41d784:	mov	w19, #0x0                   	// #0
  41d788:	mov	x1, #0x0                   	// #0
  41d78c:	nop
  41d790:	ldrb	w2, [x4, x1]
  41d794:	add	x1, x1, #0x1
  41d798:	lsl	w19, w19, w20
  41d79c:	cmp	x6, x1
  41d7a0:	and	w2, w2, w5
  41d7a4:	orr	w19, w2, w19
  41d7a8:	b.hi	41d790 <ferror@plt+0x1af10>  // b.pmore
  41d7ac:	b	41d648 <ferror@plt+0x1adc8>
  41d7b0:	mov	w21, #0x0                   	// #0
  41d7b4:	ldrb	w4, [x25, #1240]
  41d7b8:	cmp	x20, #0x1f
  41d7bc:	mov	w1, w4
  41d7c0:	b.hi	41d5b0 <ferror@plt+0x1ad30>  // b.pmore
  41d7c4:	mov	w1, #0x1                   	// #1
  41d7c8:	mov	w2, w20
  41d7cc:	lsl	w20, w1, w20
  41d7d0:	sub	w3, w20, #0x1
  41d7d4:	cbz	w4, 41d594 <ferror@plt+0x1ad14>
  41d7d8:	and	w19, w19, w3
  41d7dc:	b	41d5b0 <ferror@plt+0x1ad30>
  41d7e0:	mov	x0, x25
  41d7e4:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d7e8:	mov	w1, #0x0                   	// #0
  41d7ec:	add	x2, x2, #0xd40
  41d7f0:	bl	422e10 <ferror@plt+0x20590>
  41d7f4:	mov	w21, w26
  41d7f8:	cmp	x26, #0x1
  41d7fc:	ldr	x0, [sp, #88]
  41d800:	b.ls	41d7b4 <ferror@plt+0x1af34>  // b.plast
  41d804:	ldr	x6, [x25, #1224]
  41d808:	b	41d578 <ferror@plt+0x1acf8>
  41d80c:	mov	x0, x25
  41d810:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d814:	mov	w1, #0x0                   	// #0
  41d818:	add	x2, x2, #0xd40
  41d81c:	bl	422e10 <ferror@plt+0x20590>
  41d820:	ldr	x0, [sp, #88]
  41d824:	b	41d650 <ferror@plt+0x1add0>
  41d828:	sub	w21, w21, #0x1
  41d82c:	lsl	w21, w4, w21
  41d830:	tst	w21, w19
  41d834:	b.eq	41d674 <ferror@plt+0x1adf4>  // b.none
  41d838:	neg	x3, x3
  41d83c:	orr	w19, w19, w3
  41d840:	b	41d68c <ferror@plt+0x1ae0c>
  41d844:	neg	w20, w20
  41d848:	mov	w1, #0x0                   	// #0
  41d84c:	orr	w19, w19, w20
  41d850:	b	41d5b0 <ferror@plt+0x1ad30>
  41d854:	mov	x0, x25
  41d858:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41d85c:	mov	w1, #0x5                   	// #5
  41d860:	add	x2, x2, #0xd70
  41d864:	bl	422f30 <ferror@plt+0x206b0>
  41d868:	ldr	x0, [sp, #88]
  41d86c:	ldr	x6, [x25, #1224]
  41d870:	b	41d578 <ferror@plt+0x1acf8>
  41d874:	mov	w19, #0x0                   	// #0
  41d878:	b	41d648 <ferror@plt+0x1adc8>
  41d87c:	mov	x1, #0x0                   	// #0
  41d880:	b	41d438 <ferror@plt+0x1abb8>
  41d884:	nop
  41d888:	stp	x29, x30, [sp, #-112]!
  41d88c:	mov	x29, sp
  41d890:	stp	x21, x22, [sp, #32]
  41d894:	mov	x21, x2
  41d898:	add	x2, x2, #0x10
  41d89c:	and	x2, x2, #0xfffffffffffffff0
  41d8a0:	stp	x19, x20, [sp, #16]
  41d8a4:	mov	x22, x0
  41d8a8:	stp	x23, x24, [sp, #48]
  41d8ac:	stp	x25, x26, [sp, #64]
  41d8b0:	str	x27, [sp, #80]
  41d8b4:	sub	sp, sp, x2
  41d8b8:	mov	x26, sp
  41d8bc:	cbz	x21, 41db90 <ferror@plt+0x1b310>
  41d8c0:	adrp	x25, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  41d8c4:	mov	x24, x1
  41d8c8:	add	x23, x29, #0x6d
  41d8cc:	add	x25, x25, #0xfa0
  41d8d0:	mov	x20, x26
  41d8d4:	mov	x19, #0x0                   	// #0
  41d8d8:	b	41d8f4 <ferror@plt+0x1b074>
  41d8dc:	mov	x0, x20
  41d8e0:	mov	x19, x1
  41d8e4:	strb	w2, [x0], #1
  41d8e8:	mov	x20, x0
  41d8ec:	cmp	x21, x19
  41d8f0:	b.ls	41da48 <ferror@plt+0x1b1c8>  // b.plast
  41d8f4:	ldrb	w2, [x24, x19]
  41d8f8:	add	x1, x19, #0x1
  41d8fc:	cmp	w2, #0x5c
  41d900:	b.ne	41d8dc <ferror@plt+0x1b05c>  // b.any
  41d904:	ldrb	w0, [x24, x1]
  41d908:	add	x19, x19, #0x2
  41d90c:	sub	x27, x20, x26
  41d910:	mov	w1, #0x4                   	// #4
  41d914:	cmp	w0, #0x75
  41d918:	sub	x5, x21, x27
  41d91c:	mov	w0, #0x8                   	// #8
  41d920:	csel	w1, w1, w0, eq  // eq = none
  41d924:	cmp	x21, x19
  41d928:	b.ls	41db74 <ferror@plt+0x1b2f4>  // b.plast
  41d92c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41d930:	add	w1, w1, w19
  41d934:	add	x2, x2, #0x2c0
  41d938:	mov	w4, #0x0                   	// #0
  41d93c:	b	41d958 <ferror@plt+0x1b0d8>
  41d940:	ldrb	w0, [x25, w3, sxtw]
  41d944:	add	x19, x19, #0x1
  41d948:	cmp	w1, w19
  41d94c:	ccmp	x21, x19, #0x0, ne  // ne = any
  41d950:	add	w4, w0, w4, lsl #4
  41d954:	b.ls	41d964 <ferror@plt+0x1b0e4>  // b.plast
  41d958:	ldrb	w3, [x24, x19]
  41d95c:	ldrh	w0, [x2, w3, sxtw #1]
  41d960:	tbnz	w0, #8, 41d940 <ferror@plt+0x1b0c0>
  41d964:	cmp	w4, #0x24
  41d968:	b.eq	41da80 <ferror@plt+0x1b200>  // b.none
  41d96c:	cmp	w4, #0x7f
  41d970:	b.ls	41da90 <ferror@plt+0x1b210>  // b.plast
  41d974:	and	w0, w4, #0x3f
  41d978:	cmp	w4, #0xfbf
  41d97c:	orr	w0, w0, #0xffffff80
  41d980:	strb	w0, [x29, #109]
  41d984:	lsr	w0, w4, #6
  41d988:	b.ls	41dac4 <ferror@plt+0x1b244>  // b.plast
  41d98c:	and	w1, w0, #0x3f
  41d990:	lsr	w0, w4, #12
  41d994:	orr	w1, w1, #0xffffff80
  41d998:	strb	w1, [x29, #108]
  41d99c:	cmp	w0, #0x3e
  41d9a0:	b.ls	41daec <ferror@plt+0x1b26c>  // b.plast
  41d9a4:	and	w1, w0, #0x3f
  41d9a8:	lsr	w0, w4, #18
  41d9ac:	orr	w1, w1, #0xffffff80
  41d9b0:	strb	w1, [x29, #107]
  41d9b4:	cmp	w0, #0x3e
  41d9b8:	b.ls	41db18 <ferror@plt+0x1b298>  // b.plast
  41d9bc:	and	w1, w0, #0x3f
  41d9c0:	lsr	w0, w4, #24
  41d9c4:	orr	w1, w1, #0xffffff80
  41d9c8:	strb	w1, [x29, #106]
  41d9cc:	cmp	w0, #0x3e
  41d9d0:	b.ls	41db44 <ferror@plt+0x1b2c4>  // b.plast
  41d9d4:	and	w1, w0, #0x3f
  41d9d8:	lsr	w0, w4, #30
  41d9dc:	orr	w1, w1, #0xffffff80
  41d9e0:	strb	w1, [x29, #105]
  41d9e4:	tbz	w4, #31, 41db5c <ferror@plt+0x1b2dc>
  41d9e8:	add	x3, x29, #0x68
  41d9ec:	orr	w2, w0, #0xffffff80
  41d9f0:	add	x1, x3, #0x1
  41d9f4:	mov	x6, #0x7                   	// #7
  41d9f8:	mov	x4, #0x6                   	// #6
  41d9fc:	mov	w0, #0x0                   	// #0
  41da00:	strb	w2, [x29, #104]
  41da04:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41da08:	add	x2, x2, #0x8b8
  41da0c:	sub	x1, x1, #0x2
  41da10:	cmp	x5, x6
  41da14:	ldrb	w2, [x2, x4]
  41da18:	orr	w0, w0, w2
  41da1c:	sturb	w0, [x3, #-1]
  41da20:	b.cs	41daa0 <ferror@plt+0x1b220>  // b.hs, b.nlast
  41da24:	bl	4027c0 <__errno_location@plt>
  41da28:	mov	w3, #0x7                   	// #7
  41da2c:	str	w3, [x0]
  41da30:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41da34:	mov	x0, x22
  41da38:	add	x2, x2, #0xac8
  41da3c:	mov	w1, #0x3                   	// #3
  41da40:	bl	423628 <ferror@plt+0x20da8>
  41da44:	b	41da4c <ferror@plt+0x1b1cc>
  41da48:	sub	x27, x20, x26
  41da4c:	ldr	x0, [x22, #1088]
  41da50:	mov	x2, x27
  41da54:	mov	x1, x26
  41da58:	mov	w3, #0x1                   	// #1
  41da5c:	bl	43b580 <ferror@plt+0x38d00>
  41da60:	mov	sp, x29
  41da64:	ldp	x19, x20, [sp, #16]
  41da68:	ldp	x21, x22, [sp, #32]
  41da6c:	ldp	x23, x24, [sp, #48]
  41da70:	ldp	x25, x26, [sp, #64]
  41da74:	ldr	x27, [sp, #80]
  41da78:	ldp	x29, x30, [sp], #112
  41da7c:	ret
  41da80:	mov	x0, x20
  41da84:	strb	w4, [x0], #1
  41da88:	mov	x20, x0
  41da8c:	b	41d8ec <ferror@plt+0x1b06c>
  41da90:	and	w4, w4, #0xff
  41da94:	strb	w4, [x29, #109]
  41da98:	cbz	x5, 41da24 <ferror@plt+0x1b1a4>
  41da9c:	mov	x1, x23
  41daa0:	add	x2, x29, #0x6e
  41daa4:	add	x0, x1, #0x1
  41daa8:	cmp	x2, x0
  41daac:	sub	x2, x2, x1
  41dab0:	csinc	x2, x2, xzr, cs  // cs = hs, nlast
  41dab4:	mov	x0, x20
  41dab8:	add	x20, x20, x2
  41dabc:	bl	402220 <memcpy@plt>
  41dac0:	b	41d8ec <ferror@plt+0x1b06c>
  41dac4:	tst	w0, #0xe0
  41dac8:	b.eq	41db7c <ferror@plt+0x1b2fc>  // b.none
  41dacc:	orr	w1, w0, #0xffffff80
  41dad0:	mov	w0, #0x0                   	// #0
  41dad4:	strb	w1, [x29, #108]
  41dad8:	add	x3, x29, #0x6c
  41dadc:	mov	x1, x23
  41dae0:	mov	x6, #0x3                   	// #3
  41dae4:	mov	x4, #0x2                   	// #2
  41dae8:	b	41da04 <ferror@plt+0x1b184>
  41daec:	tst	w0, #0xf0
  41daf0:	b.eq	41dad8 <ferror@plt+0x1b258>  // b.none
  41daf4:	orr	w1, w0, #0xffffff80
  41daf8:	mov	w0, #0x0                   	// #0
  41dafc:	strb	w1, [x29, #107]
  41db00:	add	x1, x29, #0x68
  41db04:	mov	x6, #0x4                   	// #4
  41db08:	mov	x4, #0x3                   	// #3
  41db0c:	add	x3, x1, x4
  41db10:	add	x1, x1, x6
  41db14:	b	41da04 <ferror@plt+0x1b184>
  41db18:	tst	w0, #0xf8
  41db1c:	b.eq	41db00 <ferror@plt+0x1b280>  // b.none
  41db20:	orr	w1, w0, #0xffffff80
  41db24:	mov	w0, #0x0                   	// #0
  41db28:	strb	w1, [x29, #106]
  41db2c:	add	x1, x29, #0x68
  41db30:	add	x3, x29, #0x6a
  41db34:	add	x1, x1, #0x3
  41db38:	mov	x6, #0x5                   	// #5
  41db3c:	mov	x4, #0x4                   	// #4
  41db40:	b	41da04 <ferror@plt+0x1b184>
  41db44:	tst	w0, #0xfc
  41db48:	b.eq	41db2c <ferror@plt+0x1b2ac>  // b.none
  41db4c:	and	w1, w0, #0x3f
  41db50:	lsr	w0, w4, #30
  41db54:	orr	w1, w1, #0xffffff80
  41db58:	strb	w1, [x29, #105]
  41db5c:	add	x1, x29, #0x68
  41db60:	add	x3, x29, #0x69
  41db64:	add	x1, x1, #0x2
  41db68:	mov	x6, #0x6                   	// #6
  41db6c:	mov	x4, #0x5                   	// #5
  41db70:	b	41da04 <ferror@plt+0x1b184>
  41db74:	mov	w4, #0x0                   	// #0
  41db78:	b	41da94 <ferror@plt+0x1b214>
  41db7c:	mov	x3, x23
  41db80:	add	x1, x29, #0x6e
  41db84:	mov	x6, #0x2                   	// #2
  41db88:	mov	x4, #0x1                   	// #1
  41db8c:	b	41da04 <ferror@plt+0x1b184>
  41db90:	mov	x27, #0x0                   	// #0
  41db94:	b	41da4c <ferror@plt+0x1b1cc>
  41db98:	stp	x29, x30, [sp, #-128]!
  41db9c:	mov	x29, sp
  41dba0:	stp	x21, x22, [sp, #32]
  41dba4:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41dba8:	add	x22, x22, #0xa78
  41dbac:	mov	x21, x3
  41dbb0:	add	x8, sp, #0x50
  41dbb4:	stp	x19, x20, [sp, #16]
  41dbb8:	mov	x19, x2
  41dbbc:	mov	x20, x4
  41dbc0:	mov	x2, x1
  41dbc4:	mov	x1, x22
  41dbc8:	stp	x23, x24, [sp, #48]
  41dbcc:	mov	x24, x5
  41dbd0:	mov	x23, x6
  41dbd4:	stp	x25, x26, [sp, #64]
  41dbd8:	mov	x25, x0
  41dbdc:	bl	4188c8 <ferror@plt+0x16048>
  41dbe0:	ldr	x26, [sp, #80]
  41dbe4:	adrp	x1, 418000 <ferror@plt+0x15780>
  41dbe8:	add	x1, x1, #0xca0
  41dbec:	cmp	x26, x1
  41dbf0:	b.eq	41dd00 <ferror@plt+0x1b480>  // b.none
  41dbf4:	cmp	x20, #0x10, lsl #12
  41dbf8:	mov	x0, #0x10000               	// #65536
  41dbfc:	ldr	x21, [sp, #88]
  41dc00:	csel	x0, x20, x0, cs  // cs = hs, nlast
  41dc04:	str	x0, [sp, #112]
  41dc08:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  41dc0c:	str	x0, [sp, #104]
  41dc10:	mov	x2, x20
  41dc14:	str	xzr, [sp, #120]
  41dc18:	add	x3, sp, #0x68
  41dc1c:	mov	x1, x19
  41dc20:	mov	x0, x21
  41dc24:	blr	x26
  41dc28:	tst	w0, #0xff
  41dc2c:	b.eq	41dd0c <ferror@plt+0x1b48c>  // b.none
  41dc30:	mov	x0, x19
  41dc34:	bl	402640 <free@plt>
  41dc38:	adrp	x0, 418000 <ferror@plt+0x15780>
  41dc3c:	add	x0, x0, #0xb20
  41dc40:	cmp	x26, x0
  41dc44:	b.eq	41dd40 <ferror@plt+0x1b4c0>  // b.none
  41dc48:	ldp	x19, x21, [sp, #104]
  41dc4c:	ldr	x20, [sp, #120]
  41dc50:	add	x0, x20, #0x1, lsl #12
  41dc54:	cmp	x0, x21
  41dc58:	add	x1, x20, #0x10
  41dc5c:	b.cc	41dcd4 <ferror@plt+0x1b454>  // b.lo, b.ul, b.last
  41dc60:	cmp	x21, x1
  41dc64:	b.cc	41dcd4 <ferror@plt+0x1b454>  // b.lo, b.ul, b.last
  41dc68:	add	x19, x19, x20
  41dc6c:	stp	xzr, xzr, [x19]
  41dc70:	ldr	x0, [sp, #120]
  41dc74:	cbz	x0, 41dcf8 <ferror@plt+0x1b478>
  41dc78:	ldr	x2, [sp, #104]
  41dc7c:	add	x1, x2, x0
  41dc80:	ldurb	w3, [x1, #-1]
  41dc84:	cmp	w3, #0xd
  41dc88:	b.eq	41dd74 <ferror@plt+0x1b4f4>  // b.none
  41dc8c:	mov	w0, #0xa                   	// #10
  41dc90:	strb	w0, [x1]
  41dc94:	ldr	x1, [sp, #104]
  41dc98:	ldr	x2, [sp, #120]
  41dc9c:	str	x2, [x23]
  41dca0:	mov	x0, x1
  41dca4:	cmp	x2, #0x2
  41dca8:	b.ls	41dcb8 <ferror@plt+0x1b438>  // b.plast
  41dcac:	ldrb	w3, [x1]
  41dcb0:	cmp	w3, #0xef
  41dcb4:	b.eq	41dd4c <ferror@plt+0x1b4cc>  // b.none
  41dcb8:	ldp	x19, x20, [sp, #16]
  41dcbc:	ldp	x21, x22, [sp, #32]
  41dcc0:	ldp	x25, x26, [sp, #64]
  41dcc4:	str	x1, [x24]
  41dcc8:	ldp	x23, x24, [sp, #48]
  41dccc:	ldp	x29, x30, [sp], #128
  41dcd0:	ret
  41dcd4:	mov	x0, x19
  41dcd8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41dcdc:	ldr	x20, [sp, #120]
  41dce0:	mov	x19, x0
  41dce4:	str	x0, [sp, #104]
  41dce8:	add	x19, x19, x20
  41dcec:	stp	xzr, xzr, [x19]
  41dcf0:	ldr	x0, [sp, #120]
  41dcf4:	cbnz	x0, 41dc78 <ferror@plt+0x1b3f8>
  41dcf8:	ldr	x1, [sp, #104]
  41dcfc:	b	41dc8c <ferror@plt+0x1b40c>
  41dd00:	stp	x19, x21, [sp, #104]
  41dd04:	str	x20, [sp, #120]
  41dd08:	b	41dc50 <ferror@plt+0x1b3d0>
  41dd0c:	ldr	x3, [x25, #1184]
  41dd10:	mov	x4, x22
  41dd14:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  41dd18:	add	x2, x2, #0xd98
  41dd1c:	mov	w1, #0x3                   	// #3
  41dd20:	mov	x0, x25
  41dd24:	bl	422e10 <ferror@plt+0x20590>
  41dd28:	mov	x0, x19
  41dd2c:	bl	402640 <free@plt>
  41dd30:	adrp	x0, 418000 <ferror@plt+0x15780>
  41dd34:	add	x0, x0, #0xb20
  41dd38:	cmp	x26, x0
  41dd3c:	b.ne	41dc48 <ferror@plt+0x1b3c8>  // b.any
  41dd40:	mov	x0, x21
  41dd44:	bl	4022d0 <iconv_close@plt>
  41dd48:	b	41dc48 <ferror@plt+0x1b3c8>
  41dd4c:	ldrb	w3, [x1, #1]
  41dd50:	cmp	w3, #0xbb
  41dd54:	b.ne	41dcb8 <ferror@plt+0x1b438>  // b.any
  41dd58:	ldrb	w3, [x1, #2]
  41dd5c:	cmp	w3, #0xbf
  41dd60:	b.ne	41dcb8 <ferror@plt+0x1b438>  // b.any
  41dd64:	sub	x2, x2, #0x3
  41dd68:	add	x0, x1, #0x3
  41dd6c:	str	x2, [x23]
  41dd70:	b	41dcb8 <ferror@plt+0x1b438>
  41dd74:	strb	w3, [x2, x0]
  41dd78:	b	41dc94 <ferror@plt+0x1b414>
  41dd7c:	nop
  41dd80:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41dd84:	add	x0, x0, #0xa78
  41dd88:	ret
  41dd8c:	nop
  41dd90:	stp	x29, x30, [sp, #-32]!
  41dd94:	mov	x29, sp
  41dd98:	stp	x19, x20, [sp, #16]
  41dd9c:	mov	x20, x0
  41dda0:	mov	x19, x2
  41dda4:	mov	x0, x2
  41dda8:	str	x2, [x20, #8]
  41ddac:	bl	431d88 <ferror@plt+0x2f508>
  41ddb0:	mov	w1, w0
  41ddb4:	mov	x3, #0x0                   	// #0
  41ddb8:	mov	w2, #0x1                   	// #1
  41ddbc:	mov	x0, x19
  41ddc0:	bl	432b40 <ferror@plt+0x302c0>
  41ddc4:	mov	w1, w0
  41ddc8:	str	w1, [x20]
  41ddcc:	mov	x0, x19
  41ddd0:	bl	431a80 <ferror@plt+0x2f200>
  41ddd4:	ldrb	w0, [x0, #7]
  41ddd8:	mov	w1, #0x1                   	// #1
  41dddc:	lsl	w1, w1, w0
  41dde0:	str	w1, [x20, #4]
  41dde4:	ldp	x19, x20, [sp, #16]
  41dde8:	ldp	x29, x30, [sp], #32
  41ddec:	ret
  41ddf0:	ldr	w1, [x0]
  41ddf4:	mov	w2, #0x60000000            	// #1610612736
  41ddf8:	cmp	w1, w2
  41ddfc:	b.hi	41de0c <ferror@plt+0x1b58c>  // b.pmore
  41de00:	ldr	w2, [x0, #4]
  41de04:	add	w2, w2, w1
  41de08:	str	w2, [x0]
  41de0c:	dup	v0.2s, w1
  41de10:	mov	x0, v0.d[0]
  41de14:	ret
  41de18:	ldrb	w3, [x1, #18]
  41de1c:	mov	w4, #0xffffffcd            	// #-51
  41de20:	mov	w0, #0x1                   	// #1
  41de24:	str	xzr, [x1, #24]
  41de28:	and	w3, w3, #0xfffffffc
  41de2c:	strb	w3, [x1, #18]
  41de30:	ldrh	w2, [x1, #18]
  41de34:	mov	w3, w2
  41de38:	ubfx	x2, x2, #2, #8
  41de3c:	and	w2, w2, w4
  41de40:	bfi	w3, w2, #2, #8
  41de44:	strh	w3, [x1, #18]
  41de48:	ret
  41de4c:	nop
  41de50:	stp	x29, x30, [sp, #-32]!
  41de54:	mov	x29, sp
  41de58:	stp	x19, x20, [sp, #16]
  41de5c:	mov	w20, #0x0                   	// #0
  41de60:	cbz	x0, 41de80 <ferror@plt+0x1b600>
  41de64:	mov	x19, x0
  41de68:	mov	w20, #0x0                   	// #0
  41de6c:	ldrb	w0, [x19, #16]
  41de70:	cbnz	w0, 41de90 <ferror@plt+0x1b610>
  41de74:	ldr	x19, [x19]
  41de78:	add	w20, w20, #0x1
  41de7c:	cbnz	x19, 41de6c <ferror@plt+0x1b5ec>
  41de80:	mov	w0, w20
  41de84:	ldp	x19, x20, [sp, #16]
  41de88:	ldp	x29, x30, [sp], #32
  41de8c:	ret
  41de90:	ldr	x0, [x19, #24]
  41de94:	bl	41de50 <ferror@plt+0x1b5d0>
  41de98:	add	w20, w0, w20
  41de9c:	ldr	x19, [x19]
  41dea0:	add	w20, w20, #0x1
  41dea4:	cbnz	x19, 41de6c <ferror@plt+0x1b5ec>
  41dea8:	mov	w0, w20
  41deac:	ldp	x19, x20, [sp, #16]
  41deb0:	ldp	x29, x30, [sp], #32
  41deb4:	ret
  41deb8:	stp	x29, x30, [sp, #-32]!
  41debc:	mov	x29, sp
  41dec0:	stp	x19, x20, [sp, #16]
  41dec4:	and	w20, w1, #0xff
  41dec8:	mov	x19, x0
  41decc:	bl	4307f0 <ferror@plt+0x2df70>
  41ded0:	ldrb	w1, [x0, #4]
  41ded4:	cmp	w1, #0x35
  41ded8:	b.eq	41df10 <ferror@plt+0x1b690>  // b.none
  41dedc:	ldrh	w2, [x0, #6]
  41dee0:	tbnz	w2, #4, 41df80 <ferror@plt+0x1b700>
  41dee4:	cmp	w1, #0x16
  41dee8:	b.eq	41df54 <ferror@plt+0x1b6d4>  // b.none
  41deec:	mov	x0, x19
  41def0:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41def4:	mov	w1, #0x3                   	// #3
  41def8:	add	x2, x2, #0x998
  41defc:	bl	422e10 <ferror@plt+0x20590>
  41df00:	mov	x0, #0x0                   	// #0
  41df04:	ldp	x19, x20, [sp, #16]
  41df08:	ldp	x29, x30, [sp], #32
  41df0c:	ret
  41df10:	ldr	x0, [x0, #8]
  41df14:	cbz	w20, 41df3c <ferror@plt+0x1b6bc>
  41df18:	ldr	x1, [x19, #1248]
  41df1c:	cmp	x1, x0
  41df20:	b.eq	41dfc8 <ferror@plt+0x1b748>  // b.none
  41df24:	ldr	x1, [x19, #1288]
  41df28:	cmp	x1, x0
  41df2c:	b.eq	41dfac <ferror@plt+0x1b72c>  // b.none
  41df30:	ldr	x1, [x19, #1296]
  41df34:	cmp	x1, x0
  41df38:	b.eq	41dfac <ferror@plt+0x1b72c>  // b.none
  41df3c:	ldrh	w1, [x0, #18]
  41df40:	ldp	x19, x20, [sp, #16]
  41df44:	tst	x1, #0x8
  41df48:	csel	x0, x0, xzr, eq  // eq = none
  41df4c:	ldp	x29, x30, [sp], #32
  41df50:	ret
  41df54:	ldr	x3, [x19, #144]
  41df58:	mov	x0, x19
  41df5c:	mov	w1, #0x3                   	// #3
  41df60:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41df64:	add	x2, x2, #0x970
  41df68:	ldr	x3, [x3, #8]
  41df6c:	bl	422e10 <ferror@plt+0x20590>
  41df70:	mov	x0, #0x0                   	// #0
  41df74:	ldp	x19, x20, [sp, #16]
  41df78:	ldp	x29, x30, [sp], #32
  41df7c:	ret
  41df80:	ldr	x3, [x0, #8]
  41df84:	mov	w1, #0x3                   	// #3
  41df88:	mov	x0, x19
  41df8c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41df90:	add	x2, x2, #0x930
  41df94:	ldr	x3, [x3]
  41df98:	bl	422e10 <ferror@plt+0x20590>
  41df9c:	mov	x0, #0x0                   	// #0
  41dfa0:	ldp	x19, x20, [sp, #16]
  41dfa4:	ldp	x29, x30, [sp], #32
  41dfa8:	ret
  41dfac:	mov	x0, x19
  41dfb0:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41dfb4:	mov	w1, #0x3                   	// #3
  41dfb8:	add	x2, x2, #0x8f8
  41dfbc:	bl	422e10 <ferror@plt+0x20590>
  41dfc0:	mov	x0, #0x0                   	// #0
  41dfc4:	b	41df04 <ferror@plt+0x1b684>
  41dfc8:	mov	x0, x19
  41dfcc:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41dfd0:	mov	w1, #0x3                   	// #3
  41dfd4:	add	x2, x2, #0x8c8
  41dfd8:	bl	422e10 <ferror@plt+0x20590>
  41dfdc:	mov	x0, #0x0                   	// #0
  41dfe0:	b	41df04 <ferror@plt+0x1b684>
  41dfe4:	nop
  41dfe8:	stp	x29, x30, [sp, #-32]!
  41dfec:	mov	x29, sp
  41dff0:	stp	x19, x20, [sp, #16]
  41dff4:	mov	w20, w1
  41dff8:	mov	x19, x0
  41dffc:	bl	4307f0 <ferror@plt+0x2df70>
  41e000:	mov	x1, x0
  41e004:	ldrb	w0, [x0, #4]
  41e008:	cmp	w0, #0x37
  41e00c:	b.eq	41e028 <ferror@plt+0x1b7a8>  // b.none
  41e010:	cmp	w0, #0x16
  41e014:	mov	w0, #0x0                   	// #0
  41e018:	b.ne	41e034 <ferror@plt+0x1b7b4>  // b.any
  41e01c:	ldp	x19, x20, [sp, #16]
  41e020:	ldp	x29, x30, [sp], #32
  41e024:	ret
  41e028:	ldr	w0, [x1, #8]
  41e02c:	cmp	w0, #0x1
  41e030:	b.eq	41e064 <ferror@plt+0x1b7e4>  // b.none
  41e034:	mov	x0, x19
  41e038:	bl	42c490 <ferror@plt+0x29c10>
  41e03c:	mov	w1, #0x3                   	// #3
  41e040:	mov	x3, x0
  41e044:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e048:	mov	x0, x19
  41e04c:	add	x2, x2, #0x9b8
  41e050:	bl	422e10 <ferror@plt+0x20590>
  41e054:	mov	w0, #0x0                   	// #0
  41e058:	ldp	x19, x20, [sp, #16]
  41e05c:	ldp	x29, x30, [sp], #32
  41e060:	ret
  41e064:	ldr	x0, [x1, #16]
  41e068:	ldrb	w0, [x0]
  41e06c:	sub	w0, w0, #0x30
  41e070:	cmp	w0, w20
  41e074:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  41e078:	b.hi	41e034 <ferror@plt+0x1b7b4>  // b.pmore
  41e07c:	cmp	w0, #0x4
  41e080:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  41e084:	b.ne	41e034 <ferror@plt+0x1b7b4>  // b.any
  41e088:	cmp	w20, #0x0
  41e08c:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  41e090:	b.eq	41e034 <ferror@plt+0x1b7b4>  // b.none
  41e094:	b	41e01c <ferror@plt+0x1b79c>
  41e098:	stp	x29, x30, [sp, #-48]!
  41e09c:	mov	x29, sp
  41e0a0:	stp	x19, x20, [sp, #16]
  41e0a4:	mov	x20, x0
  41e0a8:	mov	w0, #0x1                   	// #1
  41e0ac:	str	x21, [sp, #32]
  41e0b0:	adrp	x21, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e0b4:	add	x21, x21, #0xa08
  41e0b8:	strb	w0, [x20, #23]
  41e0bc:	mov	x0, x20
  41e0c0:	bl	4307f0 <ferror@plt+0x2df70>
  41e0c4:	ldrb	w1, [x0, #4]
  41e0c8:	cmp	w1, #0x16
  41e0cc:	b.eq	41e114 <ferror@plt+0x1b894>  // b.none
  41e0d0:	cmp	w1, #0x35
  41e0d4:	b.ne	41e140 <ferror@plt+0x1b8c0>  // b.any
  41e0d8:	ldr	x19, [x0, #8]
  41e0dc:	ldrh	w1, [x19, #18]
  41e0e0:	tbnz	w1, #3, 41e0bc <ferror@plt+0x1b83c>
  41e0e4:	ldrb	w0, [x19, #18]
  41e0e8:	tbnz	w0, #1, 41e128 <ferror@plt+0x1b8a8>
  41e0ec:	mov	x0, x19
  41e0f0:	bl	436930 <ferror@plt+0x340b0>
  41e0f4:	ldrh	w1, [x19, #18]
  41e0f8:	mov	x0, x20
  41e0fc:	orr	w1, w1, #0x18
  41e100:	strh	w1, [x19, #18]
  41e104:	bl	4307f0 <ferror@plt+0x2df70>
  41e108:	ldrb	w1, [x0, #4]
  41e10c:	cmp	w1, #0x16
  41e110:	b.ne	41e0d0 <ferror@plt+0x1b850>  // b.any
  41e114:	strb	wzr, [x20, #23]
  41e118:	ldp	x19, x20, [sp, #16]
  41e11c:	ldr	x21, [sp, #32]
  41e120:	ldp	x29, x30, [sp], #48
  41e124:	ret
  41e128:	ldr	x3, [x19]
  41e12c:	mov	x2, x21
  41e130:	mov	x0, x20
  41e134:	mov	w1, #0x0                   	// #0
  41e138:	bl	422e10 <ferror@plt+0x20590>
  41e13c:	b	41e0ec <ferror@plt+0x1b86c>
  41e140:	mov	x0, x20
  41e144:	mov	w1, #0x3                   	// #3
  41e148:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e14c:	add	x2, x2, #0x9e0
  41e150:	bl	422e10 <ferror@plt+0x20590>
  41e154:	strb	wzr, [x20, #23]
  41e158:	ldp	x19, x20, [sp, #16]
  41e15c:	ldr	x21, [sp, #32]
  41e160:	ldp	x29, x30, [sp], #48
  41e164:	ret
  41e168:	stp	x29, x30, [sp, #-96]!
  41e16c:	mov	x29, sp
  41e170:	stp	x19, x20, [sp, #16]
  41e174:	mov	x19, x0
  41e178:	mov	w20, w1
  41e17c:	stp	x21, x22, [sp, #32]
  41e180:	mov	x22, x2
  41e184:	stp	x23, x24, [sp, #48]
  41e188:	stp	x25, x26, [sp, #64]
  41e18c:	str	x27, [sp, #80]
  41e190:	ldrb	w2, [x0, #24]
  41e194:	add	w2, w2, #0x1
  41e198:	strb	w2, [x0, #24]
  41e19c:	str	xzr, [x22]
  41e1a0:	bl	43a008 <ferror@plt+0x37788>
  41e1a4:	mov	x21, x0
  41e1a8:	ldrb	w0, [x0, #4]
  41e1ac:	cmp	w0, #0x16
  41e1b0:	b.eq	41e370 <ferror@plt+0x1baf0>  // b.none
  41e1b4:	ldr	w23, [x21]
  41e1b8:	cmp	w0, #0x35
  41e1bc:	b.ne	41e234 <ferror@plt+0x1b9b4>  // b.any
  41e1c0:	mov	x0, x19
  41e1c4:	bl	43a008 <ferror@plt+0x37788>
  41e1c8:	ldrb	w0, [x0, #4]
  41e1cc:	cmp	w0, #0x14
  41e1d0:	b.eq	41e2c0 <ferror@plt+0x1ba40>  // b.none
  41e1d4:	cmp	w20, #0x4
  41e1d8:	b.eq	41e3c4 <ferror@plt+0x1bb44>  // b.none
  41e1dc:	cmp	w0, #0x16
  41e1e0:	ccmp	w20, #0x11, #0x0, eq  // eq = none
  41e1e4:	b.eq	41e270 <ferror@plt+0x1b9f0>  // b.none
  41e1e8:	mov	w2, w23
  41e1ec:	mov	x0, x19
  41e1f0:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e1f4:	mov	w3, #0x0                   	// #0
  41e1f8:	add	x4, x4, #0xa68
  41e1fc:	mov	w1, #0x3                   	// #3
  41e200:	bl	423290 <ferror@plt+0x20a10>
  41e204:	mov	x0, #0x0                   	// #0
  41e208:	ldrb	w1, [x19, #24]
  41e20c:	sub	w1, w1, #0x1
  41e210:	strb	w1, [x19, #24]
  41e214:	mov	sp, x29
  41e218:	ldp	x19, x20, [sp, #16]
  41e21c:	ldp	x21, x22, [sp, #32]
  41e220:	ldp	x23, x24, [sp, #48]
  41e224:	ldp	x25, x26, [sp, #64]
  41e228:	ldr	x27, [sp, #80]
  41e22c:	ldp	x29, x30, [sp], #96
  41e230:	ret
  41e234:	mov	w2, w23
  41e238:	mov	x0, x19
  41e23c:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e240:	mov	w3, #0x0                   	// #0
  41e244:	add	x4, x4, #0xa48
  41e248:	mov	w1, #0x3                   	// #3
  41e24c:	bl	423290 <ferror@plt+0x20a10>
  41e250:	mov	x0, #0x0                   	// #0
  41e254:	b	41e208 <ferror@plt+0x1b988>
  41e258:	cbz	w26, 41e3d4 <ferror@plt+0x1bb54>
  41e25c:	ldrh	w0, [x27, #30]
  41e260:	str	w26, [x27, #12]
  41e264:	and	w0, w0, #0xfffffffe
  41e268:	strh	w0, [x27, #30]
  41e26c:	str	x27, [x22]
  41e270:	ldr	x0, [x21, #8]
  41e274:	mov	w1, #0x23                  	// #35
  41e278:	ldr	w2, [x0, #8]
  41e27c:	add	w0, w2, #0x1
  41e280:	add	w22, w2, #0x1
  41e284:	add	x0, x0, #0xf
  41e288:	mov	w2, w2
  41e28c:	and	x0, x0, #0x1fffffff0
  41e290:	sub	sp, sp, x0
  41e294:	mov	x20, sp
  41e298:	mov	x0, x20
  41e29c:	strb	w1, [x0], #1
  41e2a0:	ldr	x1, [x21, #8]
  41e2a4:	ldr	x1, [x1]
  41e2a8:	bl	402220 <memcpy@plt>
  41e2ac:	mov	w2, w22
  41e2b0:	mov	x1, x20
  41e2b4:	mov	x0, x19
  41e2b8:	bl	42a800 <ferror@plt+0x27f80>
  41e2bc:	b	41e208 <ferror@plt+0x1b988>
  41e2c0:	ldr	x0, [x19, #56]
  41e2c4:	ldp	x2, x0, [x0, #16]
  41e2c8:	sub	x0, x0, x2
  41e2cc:	cmp	x0, #0x2f
  41e2d0:	b.ls	41e3a8 <ferror@plt+0x1bb28>  // b.plast
  41e2d4:	mov	x0, x19
  41e2d8:	mov	w1, #0x1                   	// #1
  41e2dc:	add	x25, x19, #0x38
  41e2e0:	bl	436ac0 <ferror@plt+0x34240>
  41e2e4:	mov	w26, #0x0                   	// #0
  41e2e8:	mov	x27, x0
  41e2ec:	mov	w24, #0x18                  	// #24
  41e2f0:	mov	x23, #0x48                  	// #72
  41e2f4:	str	xzr, [x0]
  41e2f8:	b	41e31c <ferror@plt+0x1ba9c>
  41e2fc:	ubfiz	x1, x26, #1, #32
  41e300:	add	x1, x1, w26, uxtw
  41e304:	add	w26, w26, #0x1
  41e308:	ldp	x2, x3, [x20]
  41e30c:	add	x1, x27, x1, lsl #3
  41e310:	stp	x2, x3, [x1, #24]
  41e314:	ldr	x0, [x20, #16]
  41e318:	str	x0, [x1, #40]
  41e31c:	mov	x0, x19
  41e320:	bl	43a008 <ferror@plt+0x37788>
  41e324:	mov	x20, x0
  41e328:	ldrb	w0, [x0, #4]
  41e32c:	umaddl	x1, w26, w24, x23
  41e330:	cmp	w0, #0x15
  41e334:	b.eq	41e258 <ferror@plt+0x1b9d8>  // b.none
  41e338:	cmp	w0, #0x16
  41e33c:	b.eq	41e38c <ferror@plt+0x1bb0c>  // b.none
  41e340:	ldr	x0, [x19, #56]
  41e344:	ldp	x27, x0, [x0, #16]
  41e348:	sub	x0, x0, x27
  41e34c:	cmp	x0, x1
  41e350:	b.cs	41e2fc <ferror@plt+0x1ba7c>  // b.hs, b.nlast
  41e354:	mov	x0, x19
  41e358:	mov	x1, x25
  41e35c:	mov	x2, #0x18                  	// #24
  41e360:	bl	42d2b0 <ferror@plt+0x2aa30>
  41e364:	ldr	x0, [x19, #56]
  41e368:	ldr	x27, [x0, #16]
  41e36c:	b	41e2fc <ferror@plt+0x1ba7c>
  41e370:	mov	x0, x19
  41e374:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e378:	mov	w1, #0x3                   	// #3
  41e37c:	add	x2, x2, #0xa28
  41e380:	bl	422e10 <ferror@plt+0x20590>
  41e384:	mov	x0, #0x0                   	// #0
  41e388:	b	41e208 <ferror@plt+0x1b988>
  41e38c:	mov	x0, x19
  41e390:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e394:	mov	w1, #0x3                   	// #3
  41e398:	add	x2, x2, #0xa88
  41e39c:	bl	422e10 <ferror@plt+0x20590>
  41e3a0:	mov	x0, #0x0                   	// #0
  41e3a4:	b	41e208 <ferror@plt+0x1b988>
  41e3a8:	mov	x0, x19
  41e3ac:	mov	x2, #0x30                  	// #48
  41e3b0:	add	x1, x19, #0x38
  41e3b4:	bl	42d2b0 <ferror@plt+0x2aa30>
  41e3b8:	ldr	x0, [x19, #56]
  41e3bc:	ldr	x2, [x0, #16]
  41e3c0:	b	41e2d4 <ferror@plt+0x1ba54>
  41e3c4:	mov	x0, x19
  41e3c8:	mov	w1, #0x1                   	// #1
  41e3cc:	bl	4367f8 <ferror@plt+0x33f78>
  41e3d0:	b	41e270 <ferror@plt+0x1b9f0>
  41e3d4:	mov	x0, x19
  41e3d8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e3dc:	mov	w1, #0x3                   	// #3
  41e3e0:	add	x2, x2, #0xaa8
  41e3e4:	bl	422e10 <ferror@plt+0x20590>
  41e3e8:	mov	x0, #0x0                   	// #0
  41e3ec:	b	41e208 <ferror@plt+0x1b988>
  41e3f0:	stp	x29, x30, [sp, #-48]!
  41e3f4:	mov	x29, sp
  41e3f8:	str	x19, [sp, #16]
  41e3fc:	mov	x19, x0
  41e400:	bl	4307f0 <ferror@plt+0x2df70>
  41e404:	ldrb	w4, [x0, #4]
  41e408:	cmp	w4, #0x3e
  41e40c:	b.eq	41e438 <ferror@plt+0x1bbb8>  // b.none
  41e410:	mov	x0, x19
  41e414:	mov	w1, #0x3                   	// #3
  41e418:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  41e41c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e420:	add	x3, x3, #0x430
  41e424:	add	x2, x2, #0xac8
  41e428:	bl	422e10 <ferror@plt+0x20590>
  41e42c:	ldr	x19, [sp, #16]
  41e430:	ldp	x29, x30, [sp], #48
  41e434:	ret
  41e438:	add	x1, x0, #0x8
  41e43c:	add	x3, sp, #0x20
  41e440:	mov	x0, x19
  41e444:	mov	x2, #0x1                   	// #1
  41e448:	bl	41d288 <ferror@plt+0x1aa08>
  41e44c:	tst	w0, #0xff
  41e450:	b.eq	41e410 <ferror@plt+0x1bb90>  // b.none
  41e454:	ldr	w0, [sp, #32]
  41e458:	cbz	w0, 41e410 <ferror@plt+0x1bb90>
  41e45c:	ldr	x3, [sp, #40]
  41e460:	mov	w1, #0x0                   	// #0
  41e464:	mov	x0, x19
  41e468:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e46c:	add	x2, x2, #0xbe0
  41e470:	bl	422e10 <ferror@plt+0x20590>
  41e474:	ldr	x0, [sp, #40]
  41e478:	bl	402640 <free@plt>
  41e47c:	ldr	x19, [sp, #16]
  41e480:	ldp	x29, x30, [sp], #48
  41e484:	ret
  41e488:	stp	x29, x30, [sp, #-64]!
  41e48c:	mov	x29, sp
  41e490:	stp	x19, x20, [sp, #16]
  41e494:	mov	x20, x0
  41e498:	mov	x0, #0x400                 	// #1024
  41e49c:	stp	x21, x22, [sp, #32]
  41e4a0:	mov	x21, #0x0                   	// #0
  41e4a4:	stp	x23, x24, [sp, #48]
  41e4a8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  41e4ac:	mov	x22, x0
  41e4b0:	mov	x24, #0x400                 	// #1024
  41e4b4:	mov	w23, #0x20                  	// #32
  41e4b8:	mov	x0, x20
  41e4bc:	bl	43a008 <ferror@plt+0x37788>
  41e4c0:	ldrb	w1, [x0, #4]
  41e4c4:	mov	x19, x0
  41e4c8:	cmp	w1, #0x53
  41e4cc:	b.eq	41e4b8 <ferror@plt+0x1bc38>  // b.none
  41e4d0:	cmp	w1, #0x2
  41e4d4:	b.eq	41e554 <ferror@plt+0x1bcd4>  // b.none
  41e4d8:	cmp	w1, #0x16
  41e4dc:	b.eq	41e540 <ferror@plt+0x1bcc0>  // b.none
  41e4e0:	bl	42c010 <ferror@plt+0x29790>
  41e4e4:	add	w1, w0, #0x2
  41e4e8:	add	x0, x21, x1
  41e4ec:	cmp	x0, x24
  41e4f0:	b.hi	41e524 <ferror@plt+0x1bca4>  // b.pmore
  41e4f4:	ldrh	w4, [x19, #6]
  41e4f8:	add	x5, x21, #0x1
  41e4fc:	mov	x1, x19
  41e500:	mov	x0, x20
  41e504:	add	x2, x22, x21
  41e508:	mov	w3, #0x1                   	// #1
  41e50c:	tbz	w4, #0, 41e518 <ferror@plt+0x1bc98>
  41e510:	add	x2, x22, x5
  41e514:	strb	w23, [x22, x21]
  41e518:	bl	42c378 <ferror@plt+0x29af8>
  41e51c:	sub	x21, x0, x22
  41e520:	b	41e4b8 <ferror@plt+0x1bc38>
  41e524:	add	x1, x24, x1
  41e528:	mov	x0, x22
  41e52c:	lsl	x24, x1, #1
  41e530:	mov	x1, x24
  41e534:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41e538:	mov	x22, x0
  41e53c:	b	41e4f4 <ferror@plt+0x1bc74>
  41e540:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41e544:	mov	x0, x20
  41e548:	add	x2, x2, #0xaf0
  41e54c:	mov	w1, #0x3                   	// #3
  41e550:	bl	422e10 <ferror@plt+0x20590>
  41e554:	strb	wzr, [x22, x21]
  41e558:	mov	x0, x22
  41e55c:	ldp	x19, x20, [sp, #16]
  41e560:	ldp	x21, x22, [sp, #32]
  41e564:	ldp	x23, x24, [sp, #48]
  41e568:	ldp	x29, x30, [sp], #64
  41e56c:	ret
  41e570:	stp	x29, x30, [sp, #-96]!
  41e574:	mov	x29, sp
  41e578:	stp	x19, x20, [sp, #16]
  41e57c:	add	x1, sp, #0x44
  41e580:	mov	x20, x0
  41e584:	stp	x21, x22, [sp, #32]
  41e588:	ldrb	w2, [x0, #24]
  41e58c:	str	wzr, [sp, #68]
  41e590:	add	w2, w2, #0x1
  41e594:	strb	w2, [x0, #24]
  41e598:	bl	43a0b8 <ferror@plt+0x37838>
  41e59c:	mov	x21, x0
  41e5a0:	ldp	x0, x1, [x0]
  41e5a4:	stp	x0, x1, [sp, #72]
  41e5a8:	ldrb	w0, [x21, #4]
  41e5ac:	ldr	x1, [x21, #16]
  41e5b0:	str	x1, [sp, #88]
  41e5b4:	cmp	w0, #0x35
  41e5b8:	b.eq	41e600 <ferror@plt+0x1bd80>  // b.none
  41e5bc:	ldr	x0, [x20, #960]
  41e5c0:	mov	w1, #0x1                   	// #1
  41e5c4:	cbz	x0, 41e5e0 <ferror@plt+0x1bd60>
  41e5c8:	mov	x0, x20
  41e5cc:	bl	4367f8 <ferror@plt+0x33f78>
  41e5d0:	ldr	w1, [x20, #48]
  41e5d4:	mov	x0, x20
  41e5d8:	ldr	x2, [x20, #960]
  41e5dc:	blr	x2
  41e5e0:	ldrb	w1, [x20, #24]
  41e5e4:	sub	w1, w1, #0x1
  41e5e8:	and	w1, w1, #0xff
  41e5ec:	strb	w1, [x20, #24]
  41e5f0:	ldp	x19, x20, [sp, #16]
  41e5f4:	ldp	x21, x22, [sp, #32]
  41e5f8:	ldp	x29, x30, [sp], #96
  41e5fc:	ret
  41e600:	ldr	x19, [x20, #896]
  41e604:	ldr	x1, [x21, #8]
  41e608:	cbnz	x19, 41e618 <ferror@plt+0x1bd98>
  41e60c:	b	41e5bc <ferror@plt+0x1bd3c>
  41e610:	ldr	x19, [x19]
  41e614:	cbz	x19, 41e5bc <ferror@plt+0x1bd3c>
  41e618:	ldr	x0, [x19, #8]
  41e61c:	cmp	x1, x0
  41e620:	b.ne	41e610 <ferror@plt+0x1bd90>  // b.any
  41e624:	ldrb	w0, [x19, #16]
  41e628:	cbz	w0, 41e6f8 <ferror@plt+0x1be78>
  41e62c:	str	x23, [sp, #48]
  41e630:	ldrb	w23, [x19, #19]
  41e634:	cbz	w23, 41e7bc <ferror@plt+0x1bf3c>
  41e638:	ldrb	w1, [x20, #24]
  41e63c:	mov	x0, x20
  41e640:	sub	w1, w1, #0x1
  41e644:	strb	w1, [x20, #24]
  41e648:	bl	43a008 <ferror@plt+0x37788>
  41e64c:	mov	x22, x0
  41e650:	ldrb	w0, [x0, #4]
  41e654:	cmp	w0, #0x35
  41e658:	b.eq	41e818 <ferror@plt+0x1bf98>  // b.none
  41e65c:	ldrb	w1, [x20, #24]
  41e660:	add	w0, w1, #0x1
  41e664:	strb	w0, [x20, #24]
  41e668:	ldr	x0, [x20, #960]
  41e66c:	cbz	x0, 41e7f4 <ferror@plt+0x1bf74>
  41e670:	ldr	x0, [x20, #136]
  41e674:	ldr	x0, [x0, #8]
  41e678:	cbz	x0, 41e7b0 <ferror@plt+0x1bf30>
  41e67c:	mov	x0, #0x30                  	// #48
  41e680:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  41e684:	ldp	x1, x6, [sp, #72]
  41e688:	mov	x2, x0
  41e68c:	ldr	x5, [sp, #88]
  41e690:	mov	w3, #0x2                   	// #2
  41e694:	stp	x1, x6, [x2]
  41e698:	lsr	x0, x1, #48
  41e69c:	str	x5, [x2, #16]
  41e6a0:	orr	w0, w0, #0x400
  41e6a4:	strh	w0, [x2, #6]
  41e6a8:	mov	x1, #0x0                   	// #0
  41e6ac:	mov	x0, x20
  41e6b0:	ldp	x6, x7, [x22]
  41e6b4:	stp	x6, x7, [x2, #24]
  41e6b8:	ldrh	w5, [x2, #30]
  41e6bc:	ldr	x6, [x22, #16]
  41e6c0:	orr	w5, w5, #0x400
  41e6c4:	strh	w5, [x2, #30]
  41e6c8:	str	x6, [x2, #40]
  41e6cc:	bl	436500 <ferror@plt+0x33c80>
  41e6d0:	ldr	x23, [sp, #48]
  41e6d4:	b	41e5d0 <ferror@plt+0x1bd50>
  41e6d8:	ldr	x19, [x19]
  41e6dc:	cbz	x19, 41e810 <ferror@plt+0x1bf90>
  41e6e0:	ldr	x1, [x19, #8]
  41e6e4:	cmp	x0, x1
  41e6e8:	b.ne	41e6d8 <ferror@plt+0x1be58>  // b.any
  41e6ec:	cbnz	w23, 41e7fc <ferror@plt+0x1bf7c>
  41e6f0:	ldr	x23, [sp, #48]
  41e6f4:	nop
  41e6f8:	ldrb	w0, [x19, #18]
  41e6fc:	cbz	w0, 41e758 <ferror@plt+0x1bed8>
  41e700:	ldrh	w4, [x21, #6]
  41e704:	mov	w0, #0x1                   	// #1
  41e708:	ldr	w3, [x19, #24]
  41e70c:	mov	w5, #0x51                  	// #81
  41e710:	strb	w0, [x20, #32]
  41e714:	ldrb	w1, [x20, #24]
  41e718:	ldrb	w2, [x19, #19]
  41e71c:	sub	w0, w1, #0x1
  41e720:	ldr	w6, [sp, #68]
  41e724:	cmp	w2, #0x0
  41e728:	and	w0, w0, #0xff
  41e72c:	csel	w1, w0, w1, ne  // ne = any
  41e730:	strb	w1, [x20, #24]
  41e734:	strb	w2, [x20, #33]
  41e738:	str	w6, [x20, #152]
  41e73c:	strb	w5, [x20, #156]
  41e740:	strh	w4, [x20, #158]
  41e744:	str	w3, [x20, #160]
  41e748:	ldp	x19, x20, [sp, #16]
  41e74c:	ldp	x21, x22, [sp, #32]
  41e750:	ldp	x29, x30, [sp], #96
  41e754:	ret
  41e758:	ldr	x3, [x20, #904]
  41e75c:	cbz	x3, 41e770 <ferror@plt+0x1bef0>
  41e760:	mov	x1, x21
  41e764:	mov	x0, x20
  41e768:	mov	w2, #0x0                   	// #0
  41e76c:	blr	x3
  41e770:	ldrb	w0, [x19, #19]
  41e774:	cbz	w0, 41e784 <ferror@plt+0x1bf04>
  41e778:	ldrb	w0, [x20, #24]
  41e77c:	sub	w0, w0, #0x1
  41e780:	strb	w0, [x20, #24]
  41e784:	ldr	x1, [x19, #24]
  41e788:	mov	x0, x20
  41e78c:	blr	x1
  41e790:	ldrb	w0, [x19, #19]
  41e794:	cbz	w0, 41e5e0 <ferror@plt+0x1bd60>
  41e798:	ldrb	w1, [x20, #24]
  41e79c:	strb	w1, [x20, #24]
  41e7a0:	ldp	x19, x20, [sp, #16]
  41e7a4:	ldp	x21, x22, [sp, #32]
  41e7a8:	ldp	x29, x30, [sp], #96
  41e7ac:	ret
  41e7b0:	mov	w1, #0x2                   	// #2
  41e7b4:	ldr	x23, [sp, #48]
  41e7b8:	b	41e5c8 <ferror@plt+0x1bd48>
  41e7bc:	mov	x0, x20
  41e7c0:	bl	43a008 <ferror@plt+0x37788>
  41e7c4:	mov	x22, x0
  41e7c8:	ldrb	w0, [x0, #4]
  41e7cc:	cmp	w0, #0x35
  41e7d0:	b.ne	41e7e0 <ferror@plt+0x1bf60>  // b.any
  41e7d4:	ldr	x19, [x19, #24]
  41e7d8:	ldr	x0, [x22, #8]
  41e7dc:	cbnz	x19, 41e6e0 <ferror@plt+0x1be60>
  41e7e0:	ldr	x0, [x20, #960]
  41e7e4:	cbnz	x0, 41e670 <ferror@plt+0x1bdf0>
  41e7e8:	ldrb	w1, [x20, #24]
  41e7ec:	sub	w1, w1, #0x1
  41e7f0:	and	w1, w1, #0xff
  41e7f4:	ldr	x23, [sp, #48]
  41e7f8:	b	41e5ec <ferror@plt+0x1bd6c>
  41e7fc:	ldrb	w0, [x20, #24]
  41e800:	add	w0, w0, #0x1
  41e804:	strb	w0, [x20, #24]
  41e808:	ldr	x23, [sp, #48]
  41e80c:	b	41e6f8 <ferror@plt+0x1be78>
  41e810:	cbz	w23, 41e7e0 <ferror@plt+0x1bf60>
  41e814:	b	41e65c <ferror@plt+0x1bddc>
  41e818:	ldr	x19, [x19, #24]
  41e81c:	ldr	x0, [x22, #8]
  41e820:	cbnz	x19, 41e6e0 <ferror@plt+0x1be60>
  41e824:	b	41e65c <ferror@plt+0x1bddc>
  41e828:	stp	x29, x30, [sp, #-32]!
  41e82c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  41e830:	mov	x29, sp
  41e834:	stp	x19, x20, [sp, #16]
  41e838:	mov	x19, x0
  41e83c:	add	x0, x1, #0x2f0
  41e840:	ldr	x1, [x19, #144]
  41e844:	cmp	x1, x0
  41e848:	b.eq	41e8d0 <ferror@plt+0x1c050>  // b.none
  41e84c:	cbz	x1, 41e8e8 <ferror@plt+0x1c068>
  41e850:	ldrb	w2, [x1, #19]
  41e854:	add	x3, x0, #0x60
  41e858:	ldrb	w4, [x19, #18]
  41e85c:	eor	x2, x2, #0x10
  41e860:	cmp	w4, #0x0
  41e864:	cset	w20, ne  // ne = any
  41e868:	ubfx	w2, w2, #4, #1
  41e86c:	cmp	x1, x3
  41e870:	b.eq	41e880 <ferror@plt+0x1c000>  // b.none
  41e874:	add	x0, x0, #0xd8
  41e878:	cmp	x1, x0
  41e87c:	b.ne	41e938 <ferror@plt+0x1c0b8>  // b.any
  41e880:	mov	w0, #0x1                   	// #1
  41e884:	strb	wzr, [x19, #18]
  41e888:	strb	w0, [x19, #20]
  41e88c:	cbz	w2, 41e8f8 <ferror@plt+0x1c078>
  41e890:	ldrb	w3, [x19, #24]
  41e894:	mov	w2, #0x0                   	// #0
  41e898:	mov	x1, #0x0                   	// #0
  41e89c:	mov	x0, x19
  41e8a0:	add	w3, w3, #0x1
  41e8a4:	strb	w3, [x19, #24]
  41e8a8:	bl	43bdb8 <ferror@plt+0x39538>
  41e8ac:	strb	w20, [x19, #18]
  41e8b0:	ldrb	w0, [x19, #24]
  41e8b4:	ldr	x1, [x19, #1312]
  41e8b8:	sub	w0, w0, #0x1
  41e8bc:	ldr	x2, [x19, #1328]
  41e8c0:	strb	w0, [x19, #24]
  41e8c4:	mov	x0, x19
  41e8c8:	sub	x2, x2, x1
  41e8cc:	bl	43bd48 <ferror@plt+0x394c8>
  41e8d0:	ldrb	w0, [x19, #24]
  41e8d4:	add	w0, w0, #0x1
  41e8d8:	strb	w0, [x19, #24]
  41e8dc:	ldp	x19, x20, [sp, #16]
  41e8e0:	ldp	x29, x30, [sp], #32
  41e8e4:	ret
  41e8e8:	ldrb	w0, [x19, #18]
  41e8ec:	strb	wzr, [x19, #20]
  41e8f0:	cmp	w0, #0x0
  41e8f4:	cset	w20, ne  // ne = any
  41e8f8:	mov	x0, x19
  41e8fc:	mov	w2, #0x0                   	// #0
  41e900:	mov	x1, #0x0                   	// #0
  41e904:	bl	43bdb8 <ferror@plt+0x39538>
  41e908:	ldr	x1, [x19, #1312]
  41e90c:	strb	w20, [x19, #18]
  41e910:	ldr	x2, [x19, #1328]
  41e914:	mov	x0, x19
  41e918:	sub	x2, x2, x1
  41e91c:	bl	43bd48 <ferror@plt+0x394c8>
  41e920:	ldrb	w0, [x19, #24]
  41e924:	add	w0, w0, #0x1
  41e928:	strb	w0, [x19, #24]
  41e92c:	ldp	x19, x20, [sp, #16]
  41e930:	ldp	x29, x30, [sp], #32
  41e934:	ret
  41e938:	strb	wzr, [x19, #20]
  41e93c:	b	41e88c <ferror@plt+0x1c00c>
  41e940:	stp	x29, x30, [sp, #-48]!
  41e944:	mov	x29, sp
  41e948:	stp	x19, x20, [sp, #16]
  41e94c:	mov	x19, x1
  41e950:	mov	x20, x2
  41e954:	stp	x21, x22, [sp, #32]
  41e958:	mov	x21, x0
  41e95c:	cbz	x1, 41e998 <ferror@plt+0x1c118>
  41e960:	ldrb	w0, [x19, #16]
  41e964:	cbnz	w0, 41e9ac <ferror@plt+0x1c12c>
  41e968:	ldr	x22, [x20]
  41e96c:	mov	x0, x22
  41e970:	bl	402270 <strlen@plt>
  41e974:	mov	w2, w0
  41e978:	mov	x1, x22
  41e97c:	mov	x0, x21
  41e980:	bl	42a800 <ferror@plt+0x27f80>
  41e984:	str	x0, [x19, #8]
  41e988:	ldr	x0, [x20], #8
  41e98c:	bl	402640 <free@plt>
  41e990:	ldr	x19, [x19]
  41e994:	cbnz	x19, 41e960 <ferror@plt+0x1c0e0>
  41e998:	mov	x0, x20
  41e99c:	ldp	x19, x20, [sp, #16]
  41e9a0:	ldp	x21, x22, [sp, #32]
  41e9a4:	ldp	x29, x30, [sp], #48
  41e9a8:	ret
  41e9ac:	ldr	x1, [x19, #24]
  41e9b0:	mov	x2, x20
  41e9b4:	mov	x0, x21
  41e9b8:	bl	41e940 <ferror@plt+0x1c0c0>
  41e9bc:	mov	x20, x0
  41e9c0:	ldr	x22, [x0]
  41e9c4:	b	41e96c <ferror@plt+0x1c0ec>
  41e9c8:	stp	x29, x30, [sp, #-32]!
  41e9cc:	mov	x29, sp
  41e9d0:	stp	x19, x20, [sp, #16]
  41e9d4:	mov	x20, x1
  41e9d8:	cbz	x0, 41ea50 <ferror@plt+0x1c1d0>
  41e9dc:	mov	x19, x0
  41e9e0:	mov	x20, x1
  41e9e4:	ldrb	w0, [x19, #16]
  41e9e8:	cbnz	w0, 41ea20 <ferror@plt+0x1c1a0>
  41e9ec:	ldr	x1, [x19, #8]
  41e9f0:	ldr	x0, [x1]
  41e9f4:	ldr	w1, [x1, #8]
  41e9f8:	add	w2, w1, #0x1
  41e9fc:	mov	w1, w1
  41ea00:	bl	45cae8 <_obstack_memory_used@@Base+0x1c0>
  41ea04:	ldr	x19, [x19]
  41ea08:	str	x0, [x20], #8
  41ea0c:	cbz	x19, 41ea50 <ferror@plt+0x1c1d0>
  41ea10:	ldrb	w0, [x19, #16]
  41ea14:	mov	x1, x20
  41ea18:	mov	x20, x1
  41ea1c:	cbz	w0, 41e9ec <ferror@plt+0x1c16c>
  41ea20:	ldr	x0, [x19, #24]
  41ea24:	bl	41e9c8 <ferror@plt+0x1c148>
  41ea28:	mov	x20, x0
  41ea2c:	ldr	x1, [x19, #8]
  41ea30:	ldr	x0, [x1]
  41ea34:	ldr	w1, [x1, #8]
  41ea38:	add	w2, w1, #0x1
  41ea3c:	mov	w1, w1
  41ea40:	bl	45cae8 <_obstack_memory_used@@Base+0x1c0>
  41ea44:	ldr	x19, [x19]
  41ea48:	str	x0, [x20], #8
  41ea4c:	cbnz	x19, 41ea10 <ferror@plt+0x1c190>
  41ea50:	mov	x0, x20
  41ea54:	ldp	x19, x20, [sp, #16]
  41ea58:	ldp	x29, x30, [sp], #32
  41ea5c:	ret
  41ea60:	stp	x29, x30, [sp, #-48]!
  41ea64:	mov	x29, sp
  41ea68:	stp	x19, x20, [sp, #16]
  41ea6c:	mov	x20, x0
  41ea70:	mov	x0, x20
  41ea74:	bl	43a008 <ferror@plt+0x37788>
  41ea78:	mov	x19, x0
  41ea7c:	ldrb	w0, [x0, #4]
  41ea80:	cmp	w0, #0x53
  41ea84:	b.eq	41ea70 <ferror@plt+0x1c1f0>  // b.none
  41ea88:	cmp	w0, #0x16
  41ea8c:	b.eq	41eb20 <ferror@plt+0x1c2a0>  // b.none
  41ea90:	cmp	w0, #0x14
  41ea94:	b.ne	41eb0c <ferror@plt+0x1c28c>  // b.any
  41ea98:	mov	x0, x20
  41ea9c:	bl	43a008 <ferror@plt+0x37788>
  41eaa0:	mov	x19, x0
  41eaa4:	ldrb	w0, [x0, #4]
  41eaa8:	cmp	w0, #0x53
  41eaac:	b.eq	41ea98 <ferror@plt+0x1c218>  // b.none
  41eab0:	cmp	w0, #0x16
  41eab4:	b.eq	41eb34 <ferror@plt+0x1c2b4>  // b.none
  41eab8:	sub	w0, w0, #0x3e
  41eabc:	and	w0, w0, #0xff
  41eac0:	cmp	w0, #0x4
  41eac4:	b.hi	41eb0c <ferror@plt+0x1c28c>  // b.pmore
  41eac8:	str	x21, [sp, #32]
  41eacc:	nop
  41ead0:	mov	x0, x20
  41ead4:	bl	43a008 <ferror@plt+0x37788>
  41ead8:	mov	x21, x0
  41eadc:	ldrb	w0, [x0, #4]
  41eae0:	cmp	w0, #0x53
  41eae4:	b.eq	41ead0 <ferror@plt+0x1c250>  // b.none
  41eae8:	cmp	w0, #0x16
  41eaec:	b.eq	41eb48 <ferror@plt+0x1c2c8>  // b.none
  41eaf0:	cmp	w0, #0x15
  41eaf4:	ldr	x21, [sp, #32]
  41eaf8:	b.ne	41eb0c <ferror@plt+0x1c28c>  // b.any
  41eafc:	mov	x0, x19
  41eb00:	ldp	x19, x20, [sp, #16]
  41eb04:	ldp	x29, x30, [sp], #48
  41eb08:	ret
  41eb0c:	mov	x19, #0x0                   	// #0
  41eb10:	mov	x0, x19
  41eb14:	ldp	x19, x20, [sp, #16]
  41eb18:	ldp	x29, x30, [sp], #48
  41eb1c:	ret
  41eb20:	mov	x0, x20
  41eb24:	mov	w1, #0x1                   	// #1
  41eb28:	bl	4367f8 <ferror@plt+0x33f78>
  41eb2c:	ldrb	w0, [x19, #4]
  41eb30:	b	41ea90 <ferror@plt+0x1c210>
  41eb34:	mov	x0, x20
  41eb38:	mov	w1, #0x1                   	// #1
  41eb3c:	bl	4367f8 <ferror@plt+0x33f78>
  41eb40:	ldrb	w0, [x19, #4]
  41eb44:	b	41eab8 <ferror@plt+0x1c238>
  41eb48:	mov	x0, x20
  41eb4c:	mov	w1, #0x1                   	// #1
  41eb50:	bl	4367f8 <ferror@plt+0x33f78>
  41eb54:	ldrb	w0, [x21, #4]
  41eb58:	b	41eaf0 <ferror@plt+0x1c270>
  41eb5c:	nop
  41eb60:	stp	x29, x30, [sp, #-32]!
  41eb64:	mov	x29, sp
  41eb68:	ldr	x1, [x0]
  41eb6c:	stp	x19, x20, [sp, #16]
  41eb70:	ldr	x19, [x1, #96]
  41eb74:	cbz	x19, 41ebd8 <ferror@plt+0x1c358>
  41eb78:	ldr	w1, [x19, #28]
  41eb7c:	mov	x20, x0
  41eb80:	cmp	w1, #0x5
  41eb84:	b.eq	41ebf0 <ferror@plt+0x1c370>  // b.none
  41eb88:	ldrb	w0, [x19, #24]
  41eb8c:	mov	w1, #0x9                   	// #9
  41eb90:	str	w1, [x19, #28]
  41eb94:	cbz	w0, 41ebb0 <ferror@plt+0x1c330>
  41eb98:	mov	w0, #0x1                   	// #1
  41eb9c:	strb	w0, [x20, #18]
  41eba0:	str	xzr, [x19, #16]
  41eba4:	ldp	x19, x20, [sp, #16]
  41eba8:	ldp	x29, x30, [sp], #32
  41ebac:	ret
  41ebb0:	mov	w1, #0x0                   	// #0
  41ebb4:	mov	x0, x20
  41ebb8:	bl	425ae0 <ferror@plt+0x23260>
  41ebbc:	eor	w1, w0, #0x1
  41ebc0:	strb	w1, [x20, #18]
  41ebc4:	str	xzr, [x19, #16]
  41ebc8:	strb	w0, [x19, #24]
  41ebcc:	ldp	x19, x20, [sp, #16]
  41ebd0:	ldp	x29, x30, [sp], #32
  41ebd4:	ret
  41ebd8:	ldp	x19, x20, [sp, #16]
  41ebdc:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41ebe0:	ldp	x29, x30, [sp], #32
  41ebe4:	add	x2, x2, #0xb10
  41ebe8:	mov	w1, #0x3                   	// #3
  41ebec:	b	422e10 <ferror@plt+0x20590>
  41ebf0:	mov	w1, #0x3                   	// #3
  41ebf4:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41ebf8:	add	x2, x2, #0xb28
  41ebfc:	bl	422e10 <ferror@plt+0x20590>
  41ec00:	ldr	w2, [x19, #8]
  41ec04:	mov	x0, x20
  41ec08:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  41ec0c:	mov	w3, #0x0                   	// #0
  41ec10:	add	x4, x4, #0xb40
  41ec14:	mov	w1, #0x3                   	// #3
  41ec18:	bl	423290 <ferror@plt+0x20a10>
  41ec1c:	b	41eb88 <ferror@plt+0x1c308>
  41ec20:	stp	x29, x30, [sp, #-96]!
  41ec24:	mov	x29, sp
  41ec28:	stp	x19, x20, [sp, #16]
  41ec2c:	mov	x20, x0
  41ec30:	stp	x21, x22, [sp, #32]
  41ec34:	mov	x22, x2
  41ec38:	mov	x21, x3
  41ec3c:	stp	x23, x24, [sp, #48]
  41ec40:	mov	x23, x1
  41ec44:	nop
  41ec48:	mov	x0, x20
  41ec4c:	bl	43a008 <ferror@plt+0x37788>
  41ec50:	ldrb	w4, [x0, #4]
  41ec54:	mov	x19, x0
  41ec58:	cmp	w4, #0x53
  41ec5c:	b.eq	41ec48 <ferror@plt+0x1c3c8>  // b.none
  41ec60:	ldr	w0, [x0]
  41ec64:	str	w0, [x21]
  41ec68:	ldrb	w0, [x19, #4]
  41ec6c:	cmp	w0, #0x3e
  41ec70:	b.eq	41ecf8 <ferror@plt+0x1c478>  // b.none
  41ec74:	cmp	w0, #0x44
  41ec78:	b.eq	41ed08 <ferror@plt+0x1c488>  // b.none
  41ec7c:	cmp	w0, #0x3
  41ec80:	b.ne	41ed4c <ferror@plt+0x1c4cc>  // b.any
  41ec84:	mov	x0, x20
  41ec88:	bl	41e488 <ferror@plt+0x1bc08>
  41ec8c:	mov	x21, x0
  41ec90:	mov	w1, #0x1                   	// #1
  41ec94:	str	w1, [x23]
  41ec98:	ldr	x0, [x20, #144]
  41ec9c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  41eca0:	add	x1, x1, #0x2f0
  41eca4:	add	x1, x1, #0x108
  41eca8:	cmp	x0, x1
  41ecac:	b.eq	41ece0 <ferror@plt+0x1c460>  // b.none
  41ecb0:	cbz	x22, 41ecbc <ferror@plt+0x1c43c>
  41ecb4:	ldrb	w0, [x20, #1123]
  41ecb8:	cbz	w0, 41edd8 <ferror@plt+0x1c558>
  41ecbc:	ldr	x0, [x20, #448]
  41ecc0:	ldurb	w0, [x0, #-20]
  41ecc4:	cmp	w0, #0x16
  41ecc8:	b.eq	41ece0 <ferror@plt+0x1c460>  // b.none
  41eccc:	mov	x0, x20
  41ecd0:	bl	43a008 <ferror@plt+0x37788>
  41ecd4:	ldrb	w0, [x0, #4]
  41ecd8:	cmp	w0, #0x16
  41ecdc:	b.ne	41ed98 <ferror@plt+0x1c518>  // b.any
  41ece0:	mov	x0, x21
  41ece4:	ldp	x19, x20, [sp, #16]
  41ece8:	ldp	x21, x22, [sp, #32]
  41ecec:	ldp	x23, x24, [sp, #48]
  41ecf0:	ldp	x29, x30, [sp], #96
  41ecf4:	ret
  41ecf8:	ldr	x0, [x19, #16]
  41ecfc:	ldrb	w0, [x0]
  41ed00:	cmp	w0, #0x52
  41ed04:	b.eq	41ed4c <ferror@plt+0x1c4cc>  // b.none
  41ed08:	ldr	w0, [x19, #8]
  41ed0c:	sub	w0, w0, #0x1
  41ed10:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  41ed14:	ldr	x1, [x19, #16]
  41ed18:	mov	x21, x0
  41ed1c:	ldr	w2, [x19, #8]
  41ed20:	add	x1, x1, #0x1
  41ed24:	sub	w2, w2, #0x2
  41ed28:	bl	402220 <memcpy@plt>
  41ed2c:	ldr	w0, [x19, #8]
  41ed30:	sub	w0, w0, #0x2
  41ed34:	strb	wzr, [x21, w0, uxtw]
  41ed38:	ldrb	w0, [x19, #4]
  41ed3c:	cmp	w0, #0x44
  41ed40:	cset	w0, eq  // eq = none
  41ed44:	str	w0, [x23]
  41ed48:	b	41ec98 <ferror@plt+0x1c418>
  41ed4c:	ldr	x1, [x20, #144]
  41ed50:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  41ed54:	add	x0, x0, #0x2f0
  41ed58:	add	x0, x0, #0x108
  41ed5c:	cmp	x1, x0
  41ed60:	b.eq	41edcc <ferror@plt+0x1c54c>  // b.none
  41ed64:	ldr	x3, [x1, #8]
  41ed68:	mov	x0, x20
  41ed6c:	mov	w1, #0x3                   	// #3
  41ed70:	mov	x21, #0x0                   	// #0
  41ed74:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41ed78:	add	x2, x2, #0xb78
  41ed7c:	bl	422e10 <ferror@plt+0x20590>
  41ed80:	mov	x0, x21
  41ed84:	ldp	x19, x20, [sp, #16]
  41ed88:	ldp	x21, x22, [sp, #32]
  41ed8c:	ldp	x23, x24, [sp, #48]
  41ed90:	ldp	x29, x30, [sp], #96
  41ed94:	ret
  41ed98:	ldr	x3, [x20, #144]
  41ed9c:	mov	x0, x20
  41eda0:	mov	w1, #0x0                   	// #0
  41eda4:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41eda8:	add	x2, x2, #0xba0
  41edac:	ldr	x3, [x3, #8]
  41edb0:	bl	423050 <ferror@plt+0x207d0>
  41edb4:	mov	x0, x21
  41edb8:	ldp	x19, x20, [sp, #16]
  41edbc:	ldp	x21, x22, [sp, #32]
  41edc0:	ldp	x23, x24, [sp, #48]
  41edc4:	ldp	x29, x30, [sp], #96
  41edc8:	ret
  41edcc:	adrp	x3, 475000 <_obstack_memory_used@@Base+0x186d8>
  41edd0:	add	x3, x3, #0xb60
  41edd4:	b	41ed68 <ferror@plt+0x1c4e8>
  41edd8:	mov	x0, #0x40                  	// #64
  41eddc:	stp	x25, x26, [sp, #64]
  41ede0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  41ede4:	ldr	x1, [x20, #448]
  41ede8:	mov	x24, x0
  41edec:	adrp	x25, 475000 <_obstack_memory_used@@Base+0x186d8>
  41edf0:	mov	x26, #0x8                   	// #8
  41edf4:	add	x25, x25, #0xba0
  41edf8:	mov	x23, #0x0                   	// #0
  41edfc:	ldurb	w0, [x1, #-20]
  41ee00:	cmp	w0, #0x16
  41ee04:	b.eq	41eea8 <ferror@plt+0x1c628>  // b.none
  41ee08:	str	x27, [sp, #80]
  41ee0c:	nop
  41ee10:	mov	x0, x20
  41ee14:	bl	4307f0 <ferror@plt+0x2df70>
  41ee18:	mov	x19, x0
  41ee1c:	add	x27, x23, #0x1
  41ee20:	mov	x2, x25
  41ee24:	mov	x0, x20
  41ee28:	mov	w1, #0x2                   	// #2
  41ee2c:	ldrb	w3, [x19, #4]
  41ee30:	cmp	w3, #0x16
  41ee34:	b.eq	41ee7c <ferror@plt+0x1c5fc>  // b.none
  41ee38:	cmp	w3, #0x4f
  41ee3c:	b.eq	41ee50 <ferror@plt+0x1c5d0>  // b.none
  41ee40:	ldr	x3, [x20, #144]
  41ee44:	ldr	x3, [x3, #8]
  41ee48:	bl	422e10 <ferror@plt+0x20590>
  41ee4c:	b	41ee10 <ferror@plt+0x1c590>
  41ee50:	cmp	x27, x26
  41ee54:	b.cs	41ee64 <ferror@plt+0x1c5e4>  // b.hs, b.nlast
  41ee58:	str	x19, [x24, x23, lsl #3]
  41ee5c:	mov	x23, x27
  41ee60:	b	41ee10 <ferror@plt+0x1c590>
  41ee64:	mov	x0, x24
  41ee68:	lsl	x1, x26, #4
  41ee6c:	lsl	x26, x26, #1
  41ee70:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  41ee74:	mov	x24, x0
  41ee78:	b	41ee58 <ferror@plt+0x1c5d8>
  41ee7c:	ldr	x27, [sp, #80]
  41ee80:	add	x23, x24, x23, lsl #3
  41ee84:	ldp	x25, x26, [sp, #64]
  41ee88:	str	xzr, [x23]
  41ee8c:	mov	x0, x21
  41ee90:	str	x24, [x22]
  41ee94:	ldp	x19, x20, [sp, #16]
  41ee98:	ldp	x21, x22, [sp, #32]
  41ee9c:	ldp	x23, x24, [sp, #48]
  41eea0:	ldp	x29, x30, [sp], #96
  41eea4:	ret
  41eea8:	mov	x23, x24
  41eeac:	b	41ee84 <ferror@plt+0x1c604>
  41eeb0:	stp	x29, x30, [sp, #-64]!
  41eeb4:	mov	x2, #0x0                   	// #0
  41eeb8:	mov	x29, sp
  41eebc:	add	x3, sp, #0x3c
  41eec0:	add	x1, sp, #0x38
  41eec4:	stp	x19, x20, [sp, #16]
  41eec8:	mov	x20, x0
  41eecc:	bl	41ec20 <ferror@plt+0x1c3a0>
  41eed0:	cbz	x0, 41eefc <ferror@plt+0x1c67c>
  41eed4:	ldr	w2, [sp, #56]
  41eed8:	mov	x1, x0
  41eedc:	mov	x19, x0
  41eee0:	mov	x0, x20
  41eee4:	bl	429e28 <ferror@plt+0x275a8>
  41eee8:	cmp	w0, #0x0
  41eeec:	b.lt	41efa4 <ferror@plt+0x1c724>  // b.tstop
  41eef0:	b.ne	41ef08 <ferror@plt+0x1c688>  // b.any
  41eef4:	mov	x0, x19
  41eef8:	bl	402640 <free@plt>
  41eefc:	ldp	x19, x20, [sp, #16]
  41ef00:	ldp	x29, x30, [sp], #64
  41ef04:	ret
  41ef08:	mov	x3, x19
  41ef0c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41ef10:	add	x2, x2, #0xbe8
  41ef14:	mov	w1, #0x0                   	// #0
  41ef18:	mov	x0, x20
  41ef1c:	bl	422e10 <ferror@plt+0x20590>
  41ef20:	mov	x0, x20
  41ef24:	bl	43a008 <ferror@plt+0x37788>
  41ef28:	ldrb	w0, [x0, #4]
  41ef2c:	cmp	w0, #0x16
  41ef30:	b.eq	41eef4 <ferror@plt+0x1c674>  // b.none
  41ef34:	mov	x0, x20
  41ef38:	mov	w1, #0x1                   	// #1
  41ef3c:	stp	x21, x22, [sp, #32]
  41ef40:	bl	4367f8 <ferror@plt+0x33f78>
  41ef44:	ldrb	w3, [x20, #24]
  41ef48:	ldr	x2, [x20, #448]
  41ef4c:	add	w3, w3, #0x1
  41ef50:	mov	x1, #0x0                   	// #0
  41ef54:	mov	x0, x20
  41ef58:	ldur	w22, [x2, #-24]
  41ef5c:	strb	w3, [x20, #24]
  41ef60:	bl	42cec0 <ferror@plt+0x2a640>
  41ef64:	mov	x21, x0
  41ef68:	ldrb	w0, [x20, #24]
  41ef6c:	mov	w2, w22
  41ef70:	mov	x5, x21
  41ef74:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  41ef78:	sub	w0, w0, #0x1
  41ef7c:	add	x4, x4, #0xbe0
  41ef80:	strb	w0, [x20, #24]
  41ef84:	mov	w3, #0x0                   	// #0
  41ef88:	mov	w1, #0x0                   	// #0
  41ef8c:	mov	x0, x20
  41ef90:	bl	423290 <ferror@plt+0x20a10>
  41ef94:	mov	x0, x21
  41ef98:	bl	402640 <free@plt>
  41ef9c:	ldp	x21, x22, [sp, #32]
  41efa0:	b	41eef4 <ferror@plt+0x1c674>
  41efa4:	mov	x0, x20
  41efa8:	mov	x3, x19
  41efac:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41efb0:	mov	w1, #0x0                   	// #0
  41efb4:	add	x2, x2, #0xbc8
  41efb8:	bl	422e10 <ferror@plt+0x20590>
  41efbc:	b	41eef4 <ferror@plt+0x1c674>
  41efc0:	stp	x29, x30, [sp, #-64]!
  41efc4:	mov	x29, sp
  41efc8:	stp	x19, x20, [sp, #16]
  41efcc:	stp	x21, x22, [sp, #32]
  41efd0:	mov	x22, x1
  41efd4:	mov	x21, x0
  41efd8:	stp	x23, x24, [sp, #48]
  41efdc:	mov	x23, x2
  41efe0:	and	w24, w3, #0xff
  41efe4:	cbz	x1, 41f0b8 <ferror@plt+0x1c838>
  41efe8:	mov	x0, x1
  41efec:	bl	402270 <strlen@plt>
  41eff0:	mov	x1, x22
  41eff4:	mov	w2, w0
  41eff8:	mov	x0, x21
  41effc:	bl	42a800 <ferror@plt+0x27f80>
  41f000:	ldr	x5, [x21, #896]
  41f004:	mov	x20, x0
  41f008:	cbnz	x5, 41f018 <ferror@plt+0x1c798>
  41f00c:	b	41f15c <ferror@plt+0x1c8dc>
  41f010:	ldr	x5, [x5]
  41f014:	cbz	x5, 41f15c <ferror@plt+0x1c8dc>
  41f018:	ldr	x6, [x5, #8]
  41f01c:	cmp	x20, x6
  41f020:	b.ne	41f010 <ferror@plt+0x1c790>  // b.any
  41f024:	ldrb	w0, [x5, #16]
  41f028:	cbz	w0, 41f0dc <ferror@plt+0x1c85c>
  41f02c:	ldrb	w0, [x5, #19]
  41f030:	cmp	w0, w24
  41f034:	b.ne	41f10c <ferror@plt+0x1c88c>  // b.any
  41f038:	add	x19, x5, #0x18
  41f03c:	mov	x0, x23
  41f040:	bl	402270 <strlen@plt>
  41f044:	mov	x1, x23
  41f048:	mov	w2, w0
  41f04c:	mov	x0, x21
  41f050:	bl	42a800 <ferror@plt+0x27f80>
  41f054:	ldr	x3, [x19]
  41f058:	mov	x20, x0
  41f05c:	cbnz	x3, 41f06c <ferror@plt+0x1c7ec>
  41f060:	b	41f194 <ferror@plt+0x1c914>
  41f064:	ldr	x3, [x3]
  41f068:	cbz	x3, 41f194 <ferror@plt+0x1c914>
  41f06c:	ldr	x5, [x3, #8]
  41f070:	cmp	x20, x5
  41f074:	b.ne	41f064 <ferror@plt+0x1c7e4>  // b.any
  41f078:	ldrb	w0, [x3, #16]
  41f07c:	cbnz	w0, 41f0dc <ferror@plt+0x1c85c>
  41f080:	cbz	x22, 41f12c <ferror@plt+0x1c8ac>
  41f084:	mov	x4, x23
  41f088:	mov	x3, x22
  41f08c:	mov	x0, x21
  41f090:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f094:	mov	w1, #0x4                   	// #4
  41f098:	add	x2, x2, #0xcd0
  41f09c:	bl	422e10 <ferror@plt+0x20590>
  41f0a0:	mov	x0, #0x0                   	// #0
  41f0a4:	ldp	x19, x20, [sp, #16]
  41f0a8:	ldp	x21, x22, [sp, #32]
  41f0ac:	ldp	x23, x24, [sp, #48]
  41f0b0:	ldp	x29, x30, [sp], #64
  41f0b4:	ret
  41f0b8:	add	x19, x0, #0x380
  41f0bc:	cbz	w24, 41f03c <ferror@plt+0x1c7bc>
  41f0c0:	mov	x3, x2
  41f0c4:	mov	w1, #0x4                   	// #4
  41f0c8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f0cc:	add	x2, x2, #0xc50
  41f0d0:	bl	422e10 <ferror@plt+0x20590>
  41f0d4:	mov	x0, #0x0                   	// #0
  41f0d8:	b	41f0a4 <ferror@plt+0x1c824>
  41f0dc:	ldr	x3, [x20]
  41f0e0:	mov	x0, x21
  41f0e4:	mov	w1, #0x4                   	// #4
  41f0e8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f0ec:	add	x2, x2, #0xc90
  41f0f0:	bl	422e10 <ferror@plt+0x20590>
  41f0f4:	mov	x0, #0x0                   	// #0
  41f0f8:	ldp	x19, x20, [sp, #16]
  41f0fc:	ldp	x21, x22, [sp, #32]
  41f100:	ldp	x23, x24, [sp, #48]
  41f104:	ldp	x29, x30, [sp], #64
  41f108:	ret
  41f10c:	mov	x3, x22
  41f110:	mov	x0, x21
  41f114:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f118:	mov	w1, #0x4                   	// #4
  41f11c:	add	x2, x2, #0xc08
  41f120:	bl	422e10 <ferror@plt+0x20590>
  41f124:	mov	x0, #0x0                   	// #0
  41f128:	b	41f0a4 <ferror@plt+0x1c824>
  41f12c:	mov	x3, x23
  41f130:	mov	x0, x21
  41f134:	mov	w1, #0x4                   	// #4
  41f138:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f13c:	add	x2, x2, #0xcf8
  41f140:	bl	422e10 <ferror@plt+0x20590>
  41f144:	mov	x0, #0x0                   	// #0
  41f148:	ldp	x19, x20, [sp, #16]
  41f14c:	ldp	x21, x22, [sp, #32]
  41f150:	ldp	x23, x24, [sp, #48]
  41f154:	ldp	x29, x30, [sp], #64
  41f158:	ret
  41f15c:	mov	x1, #0x20                  	// #32
  41f160:	mov	x0, x21
  41f164:	bl	430af8 <ferror@plt+0x2e278>
  41f168:	mov	x5, x0
  41f16c:	mov	w0, #0x1                   	// #1
  41f170:	stp	xzr, xzr, [x5]
  41f174:	stp	xzr, xzr, [x5, #16]
  41f178:	ldr	x1, [x21, #896]
  41f17c:	str	x1, [x5]
  41f180:	str	x5, [x21, #896]
  41f184:	str	x20, [x5, #8]
  41f188:	strb	w0, [x5, #16]
  41f18c:	strb	w24, [x5, #19]
  41f190:	b	41f038 <ferror@plt+0x1c7b8>
  41f194:	mov	x1, #0x20                  	// #32
  41f198:	mov	x0, x21
  41f19c:	bl	430af8 <ferror@plt+0x2e278>
  41f1a0:	stp	xzr, xzr, [x0]
  41f1a4:	stp	xzr, xzr, [x0, #16]
  41f1a8:	ldr	x1, [x19]
  41f1ac:	str	x1, [x0]
  41f1b0:	str	x0, [x19]
  41f1b4:	str	x20, [x0, #8]
  41f1b8:	b	41f0a4 <ferror@plt+0x1c824>
  41f1bc:	nop
  41f1c0:	stp	x29, x30, [sp, #-48]!
  41f1c4:	mov	x29, sp
  41f1c8:	str	x19, [sp, #16]
  41f1cc:	mov	x19, x0
  41f1d0:	bl	4307f0 <ferror@plt+0x2df70>
  41f1d4:	ldrb	w4, [x0, #4]
  41f1d8:	cmp	w4, #0x3e
  41f1dc:	b.eq	41f208 <ferror@plt+0x1c988>  // b.none
  41f1e0:	mov	x0, x19
  41f1e4:	mov	w1, #0x3                   	// #3
  41f1e8:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41f1ec:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f1f0:	add	x3, x3, #0x620
  41f1f4:	add	x2, x2, #0xac8
  41f1f8:	bl	422e10 <ferror@plt+0x20590>
  41f1fc:	ldr	x19, [sp, #16]
  41f200:	ldp	x29, x30, [sp], #48
  41f204:	ret
  41f208:	add	x1, x0, #0x8
  41f20c:	add	x3, sp, #0x20
  41f210:	mov	x0, x19
  41f214:	mov	x2, #0x1                   	// #1
  41f218:	bl	41d288 <ferror@plt+0x1aa08>
  41f21c:	tst	w0, #0xff
  41f220:	b.eq	41f1e0 <ferror@plt+0x1c960>  // b.none
  41f224:	ldr	w0, [sp, #32]
  41f228:	cbz	w0, 41f1e0 <ferror@plt+0x1c960>
  41f22c:	ldr	x3, [sp, #40]
  41f230:	mov	w1, #0x3                   	// #3
  41f234:	mov	x0, x19
  41f238:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f23c:	add	x2, x2, #0xbe0
  41f240:	bl	422e10 <ferror@plt+0x20590>
  41f244:	ldr	x0, [sp, #40]
  41f248:	bl	402640 <free@plt>
  41f24c:	ldr	x19, [sp, #16]
  41f250:	ldp	x29, x30, [sp], #48
  41f254:	ret
  41f258:	stp	x29, x30, [sp, #-48]!
  41f25c:	mov	x29, sp
  41f260:	ldr	x1, [x0, #144]
  41f264:	stp	x19, x20, [sp, #16]
  41f268:	mov	x19, x0
  41f26c:	ldr	x2, [x0, #448]
  41f270:	ldr	x1, [x1, #8]
  41f274:	str	x21, [sp, #32]
  41f278:	ldur	w21, [x2, #-24]
  41f27c:	ldrb	w3, [x0, #24]
  41f280:	add	w3, w3, #0x1
  41f284:	strb	w3, [x0, #24]
  41f288:	bl	42cec0 <ferror@plt+0x2a640>
  41f28c:	mov	x20, x0
  41f290:	ldrb	w1, [x19, #24]
  41f294:	mov	w2, w21
  41f298:	mov	x5, x20
  41f29c:	mov	x0, x19
  41f2a0:	sub	w1, w1, #0x1
  41f2a4:	strb	w1, [x19, #24]
  41f2a8:	mov	w3, #0x0                   	// #0
  41f2ac:	mov	w1, #0x3                   	// #3
  41f2b0:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f2b4:	add	x4, x4, #0xbe0
  41f2b8:	bl	423290 <ferror@plt+0x20a10>
  41f2bc:	mov	x0, x20
  41f2c0:	ldp	x19, x20, [sp, #16]
  41f2c4:	ldr	x21, [sp, #32]
  41f2c8:	ldp	x29, x30, [sp], #48
  41f2cc:	b	402640 <free@plt>
  41f2d0:	stp	x29, x30, [sp, #-48]!
  41f2d4:	mov	x29, sp
  41f2d8:	ldr	x1, [x0, #144]
  41f2dc:	stp	x19, x20, [sp, #16]
  41f2e0:	mov	x19, x0
  41f2e4:	ldr	x2, [x0, #448]
  41f2e8:	ldr	x1, [x1, #8]
  41f2ec:	str	x21, [sp, #32]
  41f2f0:	ldur	w21, [x2, #-24]
  41f2f4:	ldrb	w3, [x0, #24]
  41f2f8:	add	w3, w3, #0x1
  41f2fc:	strb	w3, [x0, #24]
  41f300:	bl	42cec0 <ferror@plt+0x2a640>
  41f304:	mov	x20, x0
  41f308:	ldrb	w1, [x19, #24]
  41f30c:	mov	w2, w21
  41f310:	mov	x5, x20
  41f314:	mov	x0, x19
  41f318:	sub	w1, w1, #0x1
  41f31c:	strb	w1, [x19, #24]
  41f320:	mov	w3, #0x0                   	// #0
  41f324:	mov	w1, #0x12                  	// #18
  41f328:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f32c:	add	x4, x4, #0xbe0
  41f330:	bl	423408 <ferror@plt+0x20b88>
  41f334:	mov	x0, x20
  41f338:	ldp	x19, x20, [sp, #16]
  41f33c:	ldr	x21, [sp, #32]
  41f340:	ldp	x29, x30, [sp], #48
  41f344:	b	402640 <free@plt>
  41f348:	stp	x29, x30, [sp, #-64]!
  41f34c:	mov	x29, sp
  41f350:	stp	x19, x20, [sp, #16]
  41f354:	mov	x19, x0
  41f358:	stp	x21, x22, [sp, #32]
  41f35c:	stp	x23, x24, [sp, #48]
  41f360:	mov	w24, #0x1                   	// #1
  41f364:	mov	w23, #0x0                   	// #0
  41f368:	ldrb	w1, [x0, #18]
  41f36c:	cbz	w1, 41f45c <ferror@plt+0x1cbdc>
  41f370:	add	x20, x19, #0x328
  41f374:	ldr	x22, [x19]
  41f378:	ldp	x1, x5, [x20, #24]
  41f37c:	ldr	x21, [x19, #432]
  41f380:	sub	x2, x5, x1
  41f384:	cmp	x2, #0x1f
  41f388:	b.ls	41f488 <ferror@plt+0x1cc08>  // b.plast
  41f38c:	add	x2, x1, #0x20
  41f390:	ldr	x1, [x20, #16]
  41f394:	cmp	x2, x1
  41f398:	b.eq	41f4a8 <ferror@plt+0x1cc28>  // b.none
  41f39c:	ldr	x3, [x20, #48]
  41f3a0:	ldr	x4, [x20, #8]
  41f3a4:	add	x2, x2, x3
  41f3a8:	bic	x2, x2, x3
  41f3ac:	str	x2, [x20, #24]
  41f3b0:	sub	x3, x2, x4
  41f3b4:	sub	x4, x5, x4
  41f3b8:	cmp	x3, x4
  41f3bc:	b.ls	41f3c8 <ferror@plt+0x1cb48>  // b.plast
  41f3c0:	mov	x2, x5
  41f3c4:	str	x5, [x20, #24]
  41f3c8:	ldr	x3, [x22, #96]
  41f3cc:	str	x2, [x20, #16]
  41f3d0:	ldr	w2, [x19, #48]
  41f3d4:	mov	w4, #0x4                   	// #4
  41f3d8:	str	x3, [x1]
  41f3dc:	str	w2, [x1, #8]
  41f3e0:	ldrb	w3, [x19, #440]
  41f3e4:	ldrb	w2, [x19, #18]
  41f3e8:	str	w4, [x1, #28]
  41f3ec:	cmp	w2, #0x0
  41f3f0:	cset	w2, ne  // ne = any
  41f3f4:	strb	w2, [x1, #25]
  41f3f8:	cmp	w2, #0x0
  41f3fc:	ccmp	w23, #0x0, #0x0, eq  // eq = none
  41f400:	cset	w0, ne  // ne = any
  41f404:	strb	w0, [x1, #24]
  41f408:	cbz	w3, 41f438 <ferror@plt+0x1cbb8>
  41f40c:	ldr	x0, [x19, #424]
  41f410:	cmp	x0, #0x0
  41f414:	csel	x21, x21, xzr, eq  // eq = none
  41f418:	str	x21, [x1, #16]
  41f41c:	strb	w24, [x19, #18]
  41f420:	ldp	x19, x20, [sp, #16]
  41f424:	ldp	x23, x24, [sp, #48]
  41f428:	str	x1, [x22, #96]
  41f42c:	ldp	x21, x22, [sp, #32]
  41f430:	ldp	x29, x30, [sp], #64
  41f434:	ret
  41f438:	mov	x21, #0x0                   	// #0
  41f43c:	str	x21, [x1, #16]
  41f440:	strb	w24, [x19, #18]
  41f444:	ldp	x19, x20, [sp, #16]
  41f448:	ldp	x23, x24, [sp, #48]
  41f44c:	str	x1, [x22, #96]
  41f450:	ldp	x21, x22, [sp, #32]
  41f454:	ldp	x29, x30, [sp], #64
  41f458:	ret
  41f45c:	add	x20, x19, #0x328
  41f460:	mov	w1, w24
  41f464:	bl	425ae0 <ferror@plt+0x23260>
  41f468:	and	w23, w0, #0xff
  41f46c:	eor	w24, w23, w24
  41f470:	ldp	x1, x5, [x20, #24]
  41f474:	ldr	x22, [x19]
  41f478:	ldr	x21, [x19, #432]
  41f47c:	sub	x2, x5, x1
  41f480:	cmp	x2, #0x1f
  41f484:	b.hi	41f38c <ferror@plt+0x1cb0c>  // b.pmore
  41f488:	mov	x1, #0x20                  	// #32
  41f48c:	mov	x0, x20
  41f490:	bl	45c6e0 <_obstack_newchunk@@Base>
  41f494:	ldp	x1, x5, [x20, #24]
  41f498:	add	x2, x1, #0x20
  41f49c:	ldr	x1, [x20, #16]
  41f4a0:	cmp	x2, x1
  41f4a4:	b.ne	41f39c <ferror@plt+0x1cb1c>  // b.any
  41f4a8:	ldrb	w0, [x20, #80]
  41f4ac:	orr	w0, w0, #0x2
  41f4b0:	strb	w0, [x20, #80]
  41f4b4:	b	41f39c <ferror@plt+0x1cb1c>
  41f4b8:	stp	x29, x30, [sp, #-32]!
  41f4bc:	mov	x29, sp
  41f4c0:	ldr	x1, [x0, #40]
  41f4c4:	ldr	w1, [x1, #48]
  41f4c8:	str	x19, [sp, #16]
  41f4cc:	mov	x19, x0
  41f4d0:	cmp	w1, #0x1
  41f4d4:	b.eq	41f548 <ferror@plt+0x1ccc8>  // b.none
  41f4d8:	ldr	x0, [x19, #448]
  41f4dc:	ldurb	w0, [x0, #-20]
  41f4e0:	cmp	w0, #0x16
  41f4e4:	b.eq	41f4fc <ferror@plt+0x1cc7c>  // b.none
  41f4e8:	mov	x0, x19
  41f4ec:	bl	4307f0 <ferror@plt+0x2df70>
  41f4f0:	ldrb	w0, [x0, #4]
  41f4f4:	cmp	w0, #0x16
  41f4f8:	b.ne	41f514 <ferror@plt+0x1cc94>  // b.any
  41f4fc:	ldr	x1, [x19]
  41f500:	mov	x0, x19
  41f504:	ldr	x19, [sp, #16]
  41f508:	ldp	x29, x30, [sp], #32
  41f50c:	ldr	x1, [x1, #80]
  41f510:	b	429510 <ferror@plt+0x26c90>
  41f514:	ldr	x3, [x19, #144]
  41f518:	mov	x0, x19
  41f51c:	mov	w1, #0x0                   	// #0
  41f520:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f524:	add	x2, x2, #0xba0
  41f528:	ldr	x3, [x3, #8]
  41f52c:	bl	423050 <ferror@plt+0x207d0>
  41f530:	ldr	x1, [x19]
  41f534:	mov	x0, x19
  41f538:	ldr	x19, [sp, #16]
  41f53c:	ldp	x29, x30, [sp], #32
  41f540:	ldr	x1, [x1, #80]
  41f544:	b	429510 <ferror@plt+0x26c90>
  41f548:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f54c:	mov	w1, #0x0                   	// #0
  41f550:	add	x2, x2, #0xd20
  41f554:	bl	422e10 <ferror@plt+0x20590>
  41f558:	b	41f4d8 <ferror@plt+0x1cc58>
  41f55c:	nop
  41f560:	stp	x29, x30, [sp, #-32]!
  41f564:	mov	x29, sp
  41f568:	str	x19, [sp, #16]
  41f56c:	mov	x19, x0
  41f570:	bl	43a008 <ferror@plt+0x37788>
  41f574:	ldrb	w1, [x0, #4]
  41f578:	cmp	w1, #0x3e
  41f57c:	b.ne	41f5ec <ferror@plt+0x1cd6c>  // b.any
  41f580:	ldr	x3, [x19, #952]
  41f584:	cbz	x3, 41f598 <ferror@plt+0x1cd18>
  41f588:	ldr	w1, [x19, #48]
  41f58c:	add	x2, x0, #0x8
  41f590:	mov	x0, x19
  41f594:	blr	x3
  41f598:	ldr	x0, [x19, #448]
  41f59c:	ldurb	w0, [x0, #-20]
  41f5a0:	cmp	w0, #0x16
  41f5a4:	b.eq	41f5bc <ferror@plt+0x1cd3c>  // b.none
  41f5a8:	mov	x0, x19
  41f5ac:	bl	4307f0 <ferror@plt+0x2df70>
  41f5b0:	ldrb	w0, [x0, #4]
  41f5b4:	cmp	w0, #0x16
  41f5b8:	b.ne	41f5c8 <ferror@plt+0x1cd48>  // b.any
  41f5bc:	ldr	x19, [sp, #16]
  41f5c0:	ldp	x29, x30, [sp], #32
  41f5c4:	ret
  41f5c8:	ldr	x3, [x19, #144]
  41f5cc:	mov	x0, x19
  41f5d0:	ldr	x19, [sp, #16]
  41f5d4:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f5d8:	ldp	x29, x30, [sp], #32
  41f5dc:	add	x2, x2, #0xba0
  41f5e0:	ldr	x3, [x3, #8]
  41f5e4:	mov	w1, #0x0                   	// #0
  41f5e8:	b	423050 <ferror@plt+0x207d0>
  41f5ec:	ldr	x3, [x19, #144]
  41f5f0:	mov	x0, x19
  41f5f4:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f5f8:	mov	w1, #0x3                   	// #3
  41f5fc:	add	x2, x2, #0xd40
  41f600:	ldr	x3, [x3, #8]
  41f604:	bl	422e10 <ferror@plt+0x20590>
  41f608:	b	41f598 <ferror@plt+0x1cd18>
  41f60c:	nop
  41f610:	ldr	x1, [x0, #40]
  41f614:	ldr	w1, [x1, #48]
  41f618:	cmp	w1, #0x1
  41f61c:	b.eq	41f6d4 <ferror@plt+0x1ce54>  // b.none
  41f620:	stp	x29, x30, [sp, #-32]!
  41f624:	mov	x29, sp
  41f628:	ldr	x1, [x0, #448]
  41f62c:	str	x19, [sp, #16]
  41f630:	mov	x19, x0
  41f634:	ldurb	w1, [x1, #-20]
  41f638:	cmp	w1, #0x16
  41f63c:	b.eq	41f6c4 <ferror@plt+0x1ce44>  // b.none
  41f640:	bl	4307f0 <ferror@plt+0x2df70>
  41f644:	ldrb	w0, [x0, #4]
  41f648:	cmp	w0, #0x16
  41f64c:	b.eq	41f678 <ferror@plt+0x1cdf8>  // b.none
  41f650:	ldr	x3, [x19, #144]
  41f654:	mov	x0, x19
  41f658:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f65c:	mov	w1, #0x0                   	// #0
  41f660:	add	x2, x2, #0xba0
  41f664:	ldr	x3, [x3, #8]
  41f668:	bl	423050 <ferror@plt+0x207d0>
  41f66c:	b	41f678 <ferror@plt+0x1cdf8>
  41f670:	mov	x0, x19
  41f674:	bl	436640 <ferror@plt+0x33dc0>
  41f678:	ldr	x0, [x19, #136]
  41f67c:	ldr	x0, [x0, #8]
  41f680:	cbnz	x0, 41f670 <ferror@plt+0x1cdf0>
  41f684:	ldr	x0, [x19, #448]
  41f688:	ldurb	w0, [x0, #-20]
  41f68c:	cmp	w0, #0x16
  41f690:	b.eq	41f6ac <ferror@plt+0x1ce2c>  // b.none
  41f694:	nop
  41f698:	mov	x0, x19
  41f69c:	bl	4307f0 <ferror@plt+0x2df70>
  41f6a0:	ldrb	w0, [x0, #4]
  41f6a4:	cmp	w0, #0x16
  41f6a8:	b.ne	41f698 <ferror@plt+0x1ce18>  // b.any
  41f6ac:	mov	x0, x19
  41f6b0:	mov	w2, #0x0                   	// #0
  41f6b4:	ldr	x19, [sp, #16]
  41f6b8:	mov	w1, #0x1                   	// #1
  41f6bc:	ldp	x29, x30, [sp], #32
  41f6c0:	b	429ca0 <ferror@plt+0x27420>
  41f6c4:	ldr	x0, [x0, #136]
  41f6c8:	ldr	x0, [x0, #8]
  41f6cc:	cbnz	x0, 41f670 <ferror@plt+0x1cdf0>
  41f6d0:	b	41f6ac <ferror@plt+0x1ce2c>
  41f6d4:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f6d8:	mov	w1, #0x0                   	// #0
  41f6dc:	add	x2, x2, #0xd58
  41f6e0:	b	422e10 <ferror@plt+0x20590>
  41f6e4:	nop
  41f6e8:	stp	x29, x30, [sp, #-64]!
  41f6ec:	mov	x29, sp
  41f6f0:	stp	x19, x20, [sp, #16]
  41f6f4:	add	x3, sp, #0x34
  41f6f8:	mov	x19, x0
  41f6fc:	str	x21, [sp, #32]
  41f700:	add	x2, sp, #0x38
  41f704:	mov	w21, w1
  41f708:	add	x1, sp, #0x30
  41f70c:	ldrb	w4, [x0, #1123]
  41f710:	str	xzr, [sp, #56]
  41f714:	cmp	w4, #0x0
  41f718:	cset	w4, eq  // eq = none
  41f71c:	strb	w4, [x0, #21]
  41f720:	bl	41ec20 <ferror@plt+0x1c3a0>
  41f724:	mov	x20, x0
  41f728:	cbz	x0, 41f7d0 <ferror@plt+0x1cf50>
  41f72c:	ldrb	w0, [x0]
  41f730:	cbz	w0, 41f80c <ferror@plt+0x1cf8c>
  41f734:	ldr	x0, [x19, #40]
  41f738:	ldr	w0, [x0, #48]
  41f73c:	cmp	w0, #0xc7
  41f740:	b.hi	41f7f4 <ferror@plt+0x1cf74>  // b.pmore
  41f744:	ldr	x0, [x19, #136]
  41f748:	ldr	x0, [x0, #8]
  41f74c:	cbz	x0, 41f764 <ferror@plt+0x1cee4>
  41f750:	mov	x0, x19
  41f754:	bl	436640 <ferror@plt+0x33dc0>
  41f758:	ldr	x0, [x19, #136]
  41f75c:	ldr	x0, [x0, #8]
  41f760:	cbnz	x0, 41f750 <ferror@plt+0x1ced0>
  41f764:	ldr	x0, [x19, #448]
  41f768:	ldurb	w0, [x0, #-20]
  41f76c:	cmp	w0, #0x16
  41f770:	b.eq	41f78c <ferror@plt+0x1cf0c>  // b.none
  41f774:	nop
  41f778:	mov	x0, x19
  41f77c:	bl	4307f0 <ferror@plt+0x2df70>
  41f780:	ldrb	w0, [x0, #4]
  41f784:	cmp	w0, #0x16
  41f788:	b.ne	41f778 <ferror@plt+0x1cef8>  // b.any
  41f78c:	ldr	x6, [x19, #928]
  41f790:	ldr	w2, [sp, #48]
  41f794:	cbz	x6, 41f7bc <ferror@plt+0x1cf3c>
  41f798:	ldr	x0, [x19, #144]
  41f79c:	mov	w4, w2
  41f7a0:	ldr	w1, [x19, #48]
  41f7a4:	mov	x3, x20
  41f7a8:	ldr	x5, [sp, #56]
  41f7ac:	ldr	x2, [x0, #8]
  41f7b0:	mov	x0, x19
  41f7b4:	blr	x6
  41f7b8:	ldr	w2, [sp, #48]
  41f7bc:	ldr	w4, [sp, #52]
  41f7c0:	mov	w3, w21
  41f7c4:	mov	x0, x19
  41f7c8:	mov	x1, x20
  41f7cc:	bl	429520 <ferror@plt+0x26ca0>
  41f7d0:	mov	x0, x20
  41f7d4:	bl	402640 <free@plt>
  41f7d8:	ldr	x0, [sp, #56]
  41f7dc:	cbz	x0, 41f7e4 <ferror@plt+0x1cf64>
  41f7e0:	bl	402640 <free@plt>
  41f7e4:	ldp	x19, x20, [sp, #16]
  41f7e8:	ldr	x21, [sp, #32]
  41f7ec:	ldp	x29, x30, [sp], #64
  41f7f0:	ret
  41f7f4:	mov	x0, x19
  41f7f8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f7fc:	mov	w1, #0x3                   	// #3
  41f800:	add	x2, x2, #0xda8
  41f804:	bl	422e10 <ferror@plt+0x20590>
  41f808:	b	41f7d0 <ferror@plt+0x1cf50>
  41f80c:	ldr	x1, [x19, #144]
  41f810:	mov	x0, x19
  41f814:	ldr	w2, [sp, #52]
  41f818:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f81c:	mov	w3, #0x0                   	// #0
  41f820:	add	x4, x4, #0xd90
  41f824:	ldr	x5, [x1, #8]
  41f828:	mov	w1, #0x3                   	// #3
  41f82c:	bl	423290 <ferror@plt+0x20a10>
  41f830:	b	41f7d0 <ferror@plt+0x1cf50>
  41f834:	nop
  41f838:	mov	w1, #0x2                   	// #2
  41f83c:	b	41f6e8 <ferror@plt+0x1ce68>
  41f840:	stp	x29, x30, [sp, #-32]!
  41f844:	mov	w1, #0x1                   	// #1
  41f848:	mov	x29, sp
  41f84c:	ldr	x2, [x0, #40]
  41f850:	ldr	w2, [x2, #48]
  41f854:	str	x19, [sp, #16]
  41f858:	mov	x19, x0
  41f85c:	cmp	w2, w1
  41f860:	b.eq	41f874 <ferror@plt+0x1cff4>  // b.none
  41f864:	mov	x0, x19
  41f868:	ldr	x19, [sp, #16]
  41f86c:	ldp	x29, x30, [sp], #32
  41f870:	b	41f6e8 <ferror@plt+0x1ce68>
  41f874:	mov	w1, #0x0                   	// #0
  41f878:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f87c:	add	x2, x2, #0xdc8
  41f880:	bl	422e10 <ferror@plt+0x20590>
  41f884:	mov	x0, x19
  41f888:	mov	w1, #0x0                   	// #0
  41f88c:	ldr	x19, [sp, #16]
  41f890:	ldp	x29, x30, [sp], #32
  41f894:	b	41f6e8 <ferror@plt+0x1ce68>
  41f898:	mov	w1, #0x0                   	// #0
  41f89c:	b	41f6e8 <ferror@plt+0x1ce68>
  41f8a0:	stp	x29, x30, [sp, #-80]!
  41f8a4:	mov	w3, #0x18                  	// #24
  41f8a8:	mov	w4, #0x7fff                	// #32767
  41f8ac:	mov	x29, sp
  41f8b0:	stp	x21, x22, [sp, #32]
  41f8b4:	mov	w22, #0x7fffffff            	// #2147483647
  41f8b8:	ldr	x21, [x0, #40]
  41f8bc:	stp	x19, x20, [sp, #16]
  41f8c0:	mov	x20, x0
  41f8c4:	stp	x23, x24, [sp, #48]
  41f8c8:	ldr	w1, [x21, #12]
  41f8cc:	ldrb	w2, [x0, #1152]
  41f8d0:	sub	w1, w1, #0x1
  41f8d4:	cmp	w2, #0x0
  41f8d8:	ldr	x2, [x21]
  41f8dc:	csel	w22, w22, w4, ne  // ne = any
  41f8e0:	smaddl	x1, w1, w3, x2
  41f8e4:	ldrb	w24, [x1, #5]
  41f8e8:	ldr	x23, [x1, #8]
  41f8ec:	bl	43a008 <ferror@plt+0x37788>
  41f8f0:	mov	x1, x0
  41f8f4:	ldrb	w0, [x0, #4]
  41f8f8:	cmp	w0, #0x37
  41f8fc:	b.eq	41f93c <ferror@plt+0x1d0bc>  // b.none
  41f900:	cmp	w0, #0x16
  41f904:	b.eq	41fb14 <ferror@plt+0x1d294>  // b.none
  41f908:	mov	x0, x20
  41f90c:	bl	42c490 <ferror@plt+0x29c10>
  41f910:	mov	w1, #0x3                   	// #3
  41f914:	mov	x3, x0
  41f918:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f91c:	mov	x0, x20
  41f920:	add	x2, x2, #0xe18
  41f924:	bl	422e10 <ferror@plt+0x20590>
  41f928:	ldp	x19, x20, [sp, #16]
  41f92c:	ldp	x21, x22, [sp, #32]
  41f930:	ldp	x23, x24, [sp, #48]
  41f934:	ldp	x29, x30, [sp], #80
  41f938:	ret
  41f93c:	ldr	w0, [x1, #8]
  41f940:	ldr	x3, [x1, #16]
  41f944:	cbz	x0, 41fb74 <ferror@plt+0x1d2f4>
  41f948:	adrp	x7, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41f94c:	add	x0, x3, x0
  41f950:	add	x7, x7, #0x2c0
  41f954:	mov	w5, #0x0                   	// #0
  41f958:	mov	w2, #0x0                   	// #0
  41f95c:	mov	w8, #0x1                   	// #1
  41f960:	b	41f978 <ferror@plt+0x1d0f8>
  41f964:	cmp	w2, w19
  41f968:	mov	w2, w19
  41f96c:	csel	w5, w5, w8, ls  // ls = plast
  41f970:	cmp	x3, x0
  41f974:	b.eq	41f994 <ferror@plt+0x1d114>  // b.none
  41f978:	ldrb	w4, [x3], #1
  41f97c:	add	w19, w2, w2, lsl #2
  41f980:	sub	w6, w4, #0x30
  41f984:	add	w19, w6, w19, lsl #1
  41f988:	ldrh	w4, [x7, w4, sxtw #1]
  41f98c:	tbnz	w4, #2, 41f964 <ferror@plt+0x1d0e4>
  41f990:	b	41f908 <ferror@plt+0x1d088>
  41f994:	ldrb	w0, [x20, #1154]
  41f998:	cbz	w0, 41fa7c <ferror@plt+0x1d1fc>
  41f99c:	cmp	w19, #0x0
  41f9a0:	ccmp	w22, w19, #0x0, ne  // ne = any
  41f9a4:	ccmp	w5, #0x0, #0x0, cs  // cs = hs, nlast
  41f9a8:	b.eq	41f9c0 <ferror@plt+0x1d140>  // b.none
  41f9ac:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41f9b0:	mov	x0, x20
  41f9b4:	add	x2, x2, #0xe48
  41f9b8:	mov	w1, #0x2                   	// #2
  41f9bc:	bl	422e10 <ferror@plt+0x20590>
  41f9c0:	mov	x0, x20
  41f9c4:	bl	43a008 <ferror@plt+0x37788>
  41f9c8:	ldrb	w4, [x0, #4]
  41f9cc:	cmp	w4, #0x3e
  41f9d0:	b.eq	41faa8 <ferror@plt+0x1d228>  // b.none
  41f9d4:	cmp	w4, #0x16
  41f9d8:	b.eq	41f9e8 <ferror@plt+0x1d168>  // b.none
  41f9dc:	b	41fb3c <ferror@plt+0x1d2bc>
  41f9e0:	mov	x0, x20
  41f9e4:	bl	436640 <ferror@plt+0x33dc0>
  41f9e8:	ldr	x0, [x20, #136]
  41f9ec:	ldr	x0, [x0, #8]
  41f9f0:	cbnz	x0, 41f9e0 <ferror@plt+0x1d160>
  41f9f4:	ldr	x0, [x20, #448]
  41f9f8:	ldurb	w0, [x0, #-20]
  41f9fc:	cmp	w0, #0x16
  41fa00:	b.eq	41fa1c <ferror@plt+0x1d19c>  // b.none
  41fa04:	nop
  41fa08:	mov	x0, x20
  41fa0c:	bl	4307f0 <ferror@plt+0x2df70>
  41fa10:	ldrb	w0, [x0, #4]
  41fa14:	cmp	w0, #0x16
  41fa18:	b.ne	41fa08 <ferror@plt+0x1d188>  // b.any
  41fa1c:	ldr	x0, [x20, #40]
  41fa20:	mov	w4, w19
  41fa24:	mov	x3, x23
  41fa28:	mov	w2, w24
  41fa2c:	mov	w1, #0x3                   	// #3
  41fa30:	bl	431270 <ferror@plt+0x2e9f0>
  41fa34:	mov	x19, x0
  41fa38:	cbz	x0, 41fa4c <ferror@plt+0x1d1cc>
  41fa3c:	ldr	w1, [x0, #16]
  41fa40:	mov	w2, #0x7f                  	// #127
  41fa44:	ldr	x0, [x20, #40]
  41fa48:	bl	431640 <ferror@plt+0x2edc0>
  41fa4c:	ldr	x2, [x20, #912]
  41fa50:	cbz	x2, 41fa60 <ferror@plt+0x1d1e0>
  41fa54:	mov	x1, x19
  41fa58:	mov	x0, x20
  41fa5c:	blr	x2
  41fa60:	mov	w0, #0x1                   	// #1
  41fa64:	strb	w0, [x21, #116]
  41fa68:	ldp	x19, x20, [sp, #16]
  41fa6c:	ldp	x21, x22, [sp, #32]
  41fa70:	ldp	x23, x24, [sp, #48]
  41fa74:	ldp	x29, x30, [sp], #80
  41fa78:	ret
  41fa7c:	cbz	w5, 41f9c0 <ferror@plt+0x1d140>
  41fa80:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41fa84:	add	x2, x2, #0xe48
  41fa88:	mov	w1, #0x0                   	// #0
  41fa8c:	mov	x0, x20
  41fa90:	bl	422e10 <ferror@plt+0x20590>
  41fa94:	mov	x0, x20
  41fa98:	bl	43a008 <ferror@plt+0x37788>
  41fa9c:	ldrb	w4, [x0, #4]
  41faa0:	cmp	w4, #0x3e
  41faa4:	b.ne	41f9d4 <ferror@plt+0x1d154>  // b.any
  41faa8:	add	x1, x0, #0x8
  41faac:	mov	x2, #0x1                   	// #1
  41fab0:	add	x3, sp, #0x40
  41fab4:	mov	x0, x20
  41fab8:	str	wzr, [sp, #64]
  41fabc:	str	xzr, [sp, #72]
  41fac0:	bl	41d288 <ferror@plt+0x1aa08>
  41fac4:	ldr	x2, [x20, #448]
  41fac8:	tst	w0, #0xff
  41facc:	ldr	x1, [sp, #72]
  41fad0:	ldurb	w0, [x2, #-20]
  41fad4:	csel	x23, x1, x23, ne  // ne = any
  41fad8:	cmp	w0, #0x16
  41fadc:	b.eq	41f9e8 <ferror@plt+0x1d168>  // b.none
  41fae0:	mov	x0, x20
  41fae4:	bl	43a008 <ferror@plt+0x37788>
  41fae8:	ldrb	w0, [x0, #4]
  41faec:	cmp	w0, #0x16
  41faf0:	b.eq	41f9e8 <ferror@plt+0x1d168>  // b.none
  41faf4:	ldr	x3, [x20, #144]
  41faf8:	mov	x0, x20
  41fafc:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41fb00:	mov	w1, #0x0                   	// #0
  41fb04:	add	x2, x2, #0xba0
  41fb08:	ldr	x3, [x3, #8]
  41fb0c:	bl	423050 <ferror@plt+0x207d0>
  41fb10:	b	41f9e8 <ferror@plt+0x1d168>
  41fb14:	mov	x0, x20
  41fb18:	mov	w1, #0x3                   	// #3
  41fb1c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41fb20:	add	x2, x2, #0xdf0
  41fb24:	bl	422e10 <ferror@plt+0x20590>
  41fb28:	ldp	x19, x20, [sp, #16]
  41fb2c:	ldp	x21, x22, [sp, #32]
  41fb30:	ldp	x23, x24, [sp, #48]
  41fb34:	ldp	x29, x30, [sp], #80
  41fb38:	ret
  41fb3c:	mov	x1, x0
  41fb40:	mov	x0, x20
  41fb44:	bl	42c490 <ferror@plt+0x29c10>
  41fb48:	mov	x3, x0
  41fb4c:	mov	w1, #0x3                   	// #3
  41fb50:	mov	x0, x20
  41fb54:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41fb58:	add	x2, x2, #0xe68
  41fb5c:	bl	422e10 <ferror@plt+0x20590>
  41fb60:	ldp	x19, x20, [sp, #16]
  41fb64:	ldp	x21, x22, [sp, #32]
  41fb68:	ldp	x23, x24, [sp, #48]
  41fb6c:	ldp	x29, x30, [sp], #80
  41fb70:	ret
  41fb74:	ldrb	w0, [x20, #1154]
  41fb78:	mov	w19, #0x0                   	// #0
  41fb7c:	cbnz	w0, 41f9ac <ferror@plt+0x1d12c>
  41fb80:	b	41f9c0 <ferror@plt+0x1d140>
  41fb84:	nop
  41fb88:	stp	x29, x30, [sp, #-80]!
  41fb8c:	mov	w1, #0x11                  	// #17
  41fb90:	mov	x29, sp
  41fb94:	add	x2, sp, #0x48
  41fb98:	stp	x21, x22, [sp, #32]
  41fb9c:	mov	x22, x0
  41fba0:	bl	41e168 <ferror@plt+0x1b8e8>
  41fba4:	cbz	x0, 41fc68 <ferror@plt+0x1d3e8>
  41fba8:	str	x23, [sp, #48]
  41fbac:	ldr	x23, [sp, #72]
  41fbb0:	cbz	x23, 41fc74 <ferror@plt+0x1d3f4>
  41fbb4:	stp	x19, x20, [sp, #16]
  41fbb8:	add	x20, x0, #0x18
  41fbbc:	ldr	x19, [x0, #24]
  41fbc0:	cbnz	x19, 41fbd4 <ferror@plt+0x1d354>
  41fbc4:	b	41fc3c <ferror@plt+0x1d3bc>
  41fbc8:	mov	x20, x19
  41fbcc:	ldr	x19, [x19]
  41fbd0:	cbz	x19, 41fc3c <ferror@plt+0x1d3bc>
  41fbd4:	ldr	w0, [x19, #12]
  41fbd8:	ldr	w1, [x23, #12]
  41fbdc:	cmp	w0, w1
  41fbe0:	b.ne	41fbc8 <ferror@plt+0x1d348>  // b.any
  41fbe4:	cbz	w0, 41fc34 <ferror@plt+0x1d3b4>
  41fbe8:	mov	w21, #0x0                   	// #0
  41fbec:	b	41fc00 <ferror@plt+0x1d380>
  41fbf0:	ldr	w0, [x19, #12]
  41fbf4:	add	w21, w21, #0x1
  41fbf8:	cmp	w0, w21
  41fbfc:	b.ls	41fc24 <ferror@plt+0x1d3a4>  // b.plast
  41fc00:	mov	w1, w21
  41fc04:	add	x1, x1, #0x1
  41fc08:	add	x1, x1, x1, lsl #1
  41fc0c:	lsl	x0, x1, #3
  41fc10:	add	x1, x23, x0
  41fc14:	add	x0, x19, x0
  41fc18:	bl	42c9d8 <ferror@plt+0x2a158>
  41fc1c:	cbnz	w0, 41fbf0 <ferror@plt+0x1d370>
  41fc20:	ldr	w0, [x19, #12]
  41fc24:	cmp	w21, w0
  41fc28:	ldr	x19, [x20]
  41fc2c:	b.ne	41fbc8 <ferror@plt+0x1d348>  // b.any
  41fc30:	cbz	x19, 41fc3c <ferror@plt+0x1d3bc>
  41fc34:	ldr	x0, [x19]
  41fc38:	str	x0, [x20]
  41fc3c:	ldr	x0, [x22, #448]
  41fc40:	ldurb	w0, [x0, #-20]
  41fc44:	cmp	w0, #0x16
  41fc48:	b.eq	41fc60 <ferror@plt+0x1d3e0>  // b.none
  41fc4c:	mov	x0, x22
  41fc50:	bl	4307f0 <ferror@plt+0x2df70>
  41fc54:	ldrb	w0, [x0, #4]
  41fc58:	cmp	w0, #0x16
  41fc5c:	b.ne	41fc88 <ferror@plt+0x1d408>  // b.any
  41fc60:	ldp	x19, x20, [sp, #16]
  41fc64:	ldr	x23, [sp, #48]
  41fc68:	ldp	x21, x22, [sp, #32]
  41fc6c:	ldp	x29, x30, [sp], #80
  41fc70:	ret
  41fc74:	bl	436930 <ferror@plt+0x340b0>
  41fc78:	ldp	x21, x22, [sp, #32]
  41fc7c:	ldr	x23, [sp, #48]
  41fc80:	ldp	x29, x30, [sp], #80
  41fc84:	ret
  41fc88:	ldr	x3, [x22, #144]
  41fc8c:	mov	x0, x22
  41fc90:	mov	w1, #0x0                   	// #0
  41fc94:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41fc98:	add	x2, x2, #0xba0
  41fc9c:	ldr	x3, [x3, #8]
  41fca0:	bl	423050 <ferror@plt+0x207d0>
  41fca4:	ldp	x19, x20, [sp, #16]
  41fca8:	ldp	x21, x22, [sp, #32]
  41fcac:	ldr	x23, [sp, #48]
  41fcb0:	ldp	x29, x30, [sp], #80
  41fcb4:	ret
  41fcb8:	stp	x29, x30, [sp, #-96]!
  41fcbc:	mov	w4, #0x18                  	// #24
  41fcc0:	mov	w1, #0x1                   	// #1
  41fcc4:	mov	x29, sp
  41fcc8:	stp	x21, x22, [sp, #32]
  41fccc:	ldr	x21, [x0, #40]
  41fcd0:	stp	x19, x20, [sp, #16]
  41fcd4:	mov	x20, x0
  41fcd8:	stp	x23, x24, [sp, #48]
  41fcdc:	ldr	w2, [x21, #12]
  41fce0:	ldr	x3, [x21]
  41fce4:	sub	w2, w2, #0x1
  41fce8:	smaddl	x2, w2, w4, x3
  41fcec:	ldrb	w22, [x2, #5]
  41fcf0:	ldr	x23, [x2, #8]
  41fcf4:	bl	4367f8 <ferror@plt+0x33f78>
  41fcf8:	mov	x0, x20
  41fcfc:	bl	43a008 <ferror@plt+0x37788>
  41fd00:	mov	x1, x0
  41fd04:	ldrb	w0, [x0, #4]
  41fd08:	cmp	w0, #0x37
  41fd0c:	b.ne	41fd50 <ferror@plt+0x1d4d0>  // b.any
  41fd10:	ldr	w5, [x1, #8]
  41fd14:	ldr	x3, [x1, #16]
  41fd18:	cbz	x5, 41fd84 <ferror@plt+0x1d504>
  41fd1c:	adrp	x6, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  41fd20:	add	x5, x3, x5
  41fd24:	add	x6, x6, #0x2c0
  41fd28:	mov	w19, #0x0                   	// #0
  41fd2c:	b	41fd38 <ferror@plt+0x1d4b8>
  41fd30:	cmp	x3, x5
  41fd34:	b.eq	41fd88 <ferror@plt+0x1d508>  // b.none
  41fd38:	ldrb	w4, [x3], #1
  41fd3c:	add	w19, w19, w19, lsl #2
  41fd40:	add	w19, w4, w19, lsl #1
  41fd44:	ldrh	w2, [x6, w4, sxtw #1]
  41fd48:	sub	w19, w19, #0x30
  41fd4c:	tbnz	w2, #2, 41fd30 <ferror@plt+0x1d4b0>
  41fd50:	mov	x0, x20
  41fd54:	bl	42c490 <ferror@plt+0x29c10>
  41fd58:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41fd5c:	mov	x3, x0
  41fd60:	add	x2, x2, #0xe88
  41fd64:	mov	x0, x20
  41fd68:	mov	w1, #0x3                   	// #3
  41fd6c:	bl	422e10 <ferror@plt+0x20590>
  41fd70:	ldp	x19, x20, [sp, #16]
  41fd74:	ldp	x21, x22, [sp, #32]
  41fd78:	ldp	x23, x24, [sp, #48]
  41fd7c:	ldp	x29, x30, [sp], #96
  41fd80:	ret
  41fd84:	mov	w19, #0x0                   	// #0
  41fd88:	mov	x0, x20
  41fd8c:	bl	43a008 <ferror@plt+0x37788>
  41fd90:	ldrb	w4, [x0, #4]
  41fd94:	cmp	w4, #0x3e
  41fd98:	b.eq	41fef8 <ferror@plt+0x1d678>  // b.none
  41fd9c:	cmp	w4, #0x16
  41fda0:	mov	w24, #0x3                   	// #3
  41fda4:	b.ne	41fe68 <ferror@plt+0x1d5e8>  // b.any
  41fda8:	ldr	x0, [x20, #136]
  41fdac:	ldr	x0, [x0, #8]
  41fdb0:	cbz	x0, 41fdcc <ferror@plt+0x1d54c>
  41fdb4:	nop
  41fdb8:	mov	x0, x20
  41fdbc:	bl	436640 <ferror@plt+0x33dc0>
  41fdc0:	ldr	x0, [x20, #136]
  41fdc4:	ldr	x0, [x0, #8]
  41fdc8:	cbnz	x0, 41fdb8 <ferror@plt+0x1d538>
  41fdcc:	ldr	x0, [x20, #448]
  41fdd0:	ldurb	w0, [x0, #-20]
  41fdd4:	cmp	w0, #0x16
  41fdd8:	b.eq	41fdf4 <ferror@plt+0x1d574>  // b.none
  41fddc:	nop
  41fde0:	mov	x0, x20
  41fde4:	bl	4307f0 <ferror@plt+0x2df70>
  41fde8:	ldrb	w0, [x0, #4]
  41fdec:	cmp	w0, #0x16
  41fdf0:	b.ne	41fde0 <ferror@plt+0x1d560>  // b.any
  41fdf4:	cmp	w24, #0x1
  41fdf8:	b.eq	41fe90 <ferror@plt+0x1d610>  // b.none
  41fdfc:	ldr	x0, [x20, #40]
  41fe00:	mov	w4, w19
  41fe04:	mov	x3, x23
  41fe08:	mov	w2, w22
  41fe0c:	mov	w1, w24
  41fe10:	ldr	w5, [x0, #56]
  41fe14:	sub	w5, w5, #0x1
  41fe18:	str	w5, [x0, #56]
  41fe1c:	bl	431270 <ferror@plt+0x2e9f0>
  41fe20:	mov	x19, x0
  41fe24:	cbz	x0, 41fe38 <ferror@plt+0x1d5b8>
  41fe28:	ldr	w1, [x0, #16]
  41fe2c:	mov	w2, #0x7f                  	// #127
  41fe30:	ldr	x0, [x20, #40]
  41fe34:	bl	431640 <ferror@plt+0x2edc0>
  41fe38:	ldr	x2, [x20, #912]
  41fe3c:	cbz	x2, 41fe4c <ferror@plt+0x1d5cc>
  41fe40:	mov	x1, x19
  41fe44:	mov	x0, x20
  41fe48:	blr	x2
  41fe4c:	mov	w0, #0x1                   	// #1
  41fe50:	strb	w0, [x21, #116]
  41fe54:	ldp	x19, x20, [sp, #16]
  41fe58:	ldp	x21, x22, [sp, #32]
  41fe5c:	ldp	x23, x24, [sp, #48]
  41fe60:	ldp	x29, x30, [sp], #96
  41fe64:	ret
  41fe68:	mov	x1, x0
  41fe6c:	mov	x0, x20
  41fe70:	bl	42c490 <ferror@plt+0x29c10>
  41fe74:	mov	x3, x0
  41fe78:	mov	w1, w24
  41fe7c:	mov	x0, x20
  41fe80:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41fe84:	add	x2, x2, #0xe68
  41fe88:	bl	422e10 <ferror@plt+0x20590>
  41fe8c:	b	41fd70 <ferror@plt+0x1d4f0>
  41fe90:	ldr	x1, [x21]
  41fe94:	str	x25, [sp, #64]
  41fe98:	ldr	w25, [x21, #12]
  41fe9c:	mov	w2, #0x18                  	// #24
  41fea0:	mov	x0, x21
  41fea4:	sub	w25, w25, #0x1
  41fea8:	smaddl	x25, w25, w2, x1
  41feac:	mov	x1, x25
  41feb0:	bl	4311f0 <ferror@plt+0x2e970>
  41feb4:	ldr	w1, [x25, #20]
  41feb8:	cbz	w1, 41fed0 <ferror@plt+0x1d650>
  41febc:	cbz	x0, 41fef0 <ferror@plt+0x1d670>
  41fec0:	ldr	x0, [x0, #8]
  41fec4:	mov	x1, x23
  41fec8:	bl	45b028 <ferror@plt+0x587a8>
  41fecc:	cbz	w0, 41fef0 <ferror@plt+0x1d670>
  41fed0:	mov	x3, x23
  41fed4:	mov	x0, x20
  41fed8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41fedc:	mov	w1, #0x0                   	// #0
  41fee0:	add	x2, x2, #0xeb0
  41fee4:	bl	422f30 <ferror@plt+0x206b0>
  41fee8:	ldr	x25, [sp, #64]
  41feec:	b	41fd70 <ferror@plt+0x1d4f0>
  41fef0:	ldr	x25, [sp, #64]
  41fef4:	b	41fdfc <ferror@plt+0x1d57c>
  41fef8:	add	x1, x0, #0x8
  41fefc:	add	x3, sp, #0x50
  41ff00:	mov	x2, #0x1                   	// #1
  41ff04:	mov	x0, x20
  41ff08:	str	x25, [sp, #64]
  41ff0c:	str	wzr, [sp, #80]
  41ff10:	str	xzr, [sp, #88]
  41ff14:	bl	41d288 <ferror@plt+0x1aa08>
  41ff18:	ldr	x2, [sp, #88]
  41ff1c:	tst	w0, #0xff
  41ff20:	mov	w1, #0x0                   	// #0
  41ff24:	mov	x0, x20
  41ff28:	csel	x23, x2, x23, ne  // ne = any
  41ff2c:	bl	41dfe8 <ferror@plt+0x1b768>
  41ff30:	mov	w25, w0
  41ff34:	cmp	w0, #0x1
  41ff38:	b.eq	41ffc8 <ferror@plt+0x1d748>  // b.none
  41ff3c:	cmp	w0, #0x2
  41ff40:	mov	w24, #0x3                   	// #3
  41ff44:	b.eq	41ffb0 <ferror@plt+0x1d730>  // b.none
  41ff48:	cmp	w25, #0x3
  41ff4c:	mov	w0, #0x0                   	// #0
  41ff50:	mov	w22, #0x0                   	// #0
  41ff54:	b.eq	41ffec <ferror@plt+0x1d76c>  // b.none
  41ff58:	ldr	x1, [x20]
  41ff5c:	strb	w0, [x1, #106]
  41ff60:	ldr	x0, [x20, #448]
  41ff64:	ldurb	w0, [x0, #-20]
  41ff68:	cmp	w0, #0x16
  41ff6c:	b.eq	41ffa8 <ferror@plt+0x1d728>  // b.none
  41ff70:	mov	x0, x20
  41ff74:	bl	4307f0 <ferror@plt+0x2df70>
  41ff78:	ldrb	w0, [x0, #4]
  41ff7c:	cmp	w0, #0x16
  41ff80:	b.eq	41ffa8 <ferror@plt+0x1d728>  // b.none
  41ff84:	ldr	x3, [x20, #144]
  41ff88:	mov	x0, x20
  41ff8c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  41ff90:	mov	w1, #0x0                   	// #0
  41ff94:	add	x2, x2, #0xba0
  41ff98:	ldr	x3, [x3, #8]
  41ff9c:	bl	423050 <ferror@plt+0x207d0>
  41ffa0:	ldr	x25, [sp, #64]
  41ffa4:	b	41fda8 <ferror@plt+0x1d528>
  41ffa8:	ldr	x25, [sp, #64]
  41ffac:	b	41fda8 <ferror@plt+0x1d528>
  41ffb0:	mov	w1, w0
  41ffb4:	mov	w24, #0x1                   	// #1
  41ffb8:	mov	x0, x20
  41ffbc:	bl	41dfe8 <ferror@plt+0x1b768>
  41ffc0:	mov	w25, w0
  41ffc4:	b	41ff48 <ferror@plt+0x1d6c8>
  41ffc8:	mov	x1, x23
  41ffcc:	mov	x0, x20
  41ffd0:	bl	429b28 <ferror@plt+0x272a8>
  41ffd4:	mov	w24, #0x0                   	// #0
  41ffd8:	mov	w1, w25
  41ffdc:	mov	x0, x20
  41ffe0:	bl	41dfe8 <ferror@plt+0x1b768>
  41ffe4:	mov	w25, w0
  41ffe8:	b	41ff48 <ferror@plt+0x1d6c8>
  41ffec:	mov	w1, w25
  41fff0:	mov	x0, x20
  41fff4:	bl	41dfe8 <ferror@plt+0x1b768>
  41fff8:	cmp	w0, #0x4
  41fffc:	mov	w0, #0x1                   	// #1
  420000:	mov	w22, w0
  420004:	b.ne	41ff58 <ferror@plt+0x1d6d8>  // b.any
  420008:	mov	w0, #0x2                   	// #2
  42000c:	mov	w22, w0
  420010:	b	41ff58 <ferror@plt+0x1d6d8>
  420014:	nop
  420018:	stp	x29, x30, [sp, #-32]!
  42001c:	mov	x29, sp
  420020:	stp	x19, x20, [sp, #16]
  420024:	mov	x19, x0
  420028:	bl	4307f0 <ferror@plt+0x2df70>
  42002c:	ldrb	w1, [x0, #4]
  420030:	cmp	w1, #0x35
  420034:	b.eq	420064 <ferror@plt+0x1d7e4>  // b.none
  420038:	ldrh	w2, [x0, #6]
  42003c:	tbnz	w2, #4, 420128 <ferror@plt+0x1d8a8>
  420040:	cmp	w1, #0x16
  420044:	b.eq	420104 <ferror@plt+0x1d884>  // b.none
  420048:	mov	x0, x19
  42004c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420050:	ldp	x19, x20, [sp, #16]
  420054:	add	x2, x2, #0x998
  420058:	ldp	x29, x30, [sp], #32
  42005c:	mov	w1, #0x3                   	// #3
  420060:	b	422e10 <ferror@plt+0x20590>
  420064:	ldr	x20, [x0, #8]
  420068:	ldr	x0, [x19, #1248]
  42006c:	cmp	x20, x0
  420070:	b.eq	420168 <ferror@plt+0x1d8e8>  // b.none
  420074:	ldr	x0, [x19, #1288]
  420078:	cmp	x20, x0
  42007c:	b.eq	42014c <ferror@plt+0x1d8cc>  // b.none
  420080:	ldr	x0, [x19, #1296]
  420084:	cmp	x20, x0
  420088:	b.eq	42014c <ferror@plt+0x1d8cc>  // b.none
  42008c:	ldrh	w0, [x20, #18]
  420090:	tbnz	w0, #3, 4200f8 <ferror@plt+0x1d878>
  420094:	ldrb	w0, [x19, #1124]
  420098:	ldr	x1, [x19, #1024]
  42009c:	cmp	w0, #0x0
  4200a0:	cset	w0, eq  // eq = none
  4200a4:	strb	w0, [x19, #21]
  4200a8:	cbz	x1, 4200b4 <ferror@plt+0x1d834>
  4200ac:	mov	x0, x19
  4200b0:	blr	x1
  4200b4:	mov	x1, x20
  4200b8:	mov	x0, x19
  4200bc:	bl	436b30 <ferror@plt+0x342b0>
  4200c0:	tst	w0, #0xff
  4200c4:	b.eq	4200e0 <ferror@plt+0x1d860>  // b.none
  4200c8:	ldr	x3, [x19, #936]
  4200cc:	cbz	x3, 4200e0 <ferror@plt+0x1d860>
  4200d0:	ldr	w1, [x19, #48]
  4200d4:	mov	x0, x19
  4200d8:	mov	x2, x20
  4200dc:	blr	x3
  4200e0:	ldrh	w0, [x20, #18]
  4200e4:	mov	w1, w0
  4200e8:	ubfx	x0, x0, #2, #8
  4200ec:	and	w0, w0, #0xffffffdf
  4200f0:	bfi	w1, w0, #2, #8
  4200f4:	strh	w1, [x20, #18]
  4200f8:	ldp	x19, x20, [sp, #16]
  4200fc:	ldp	x29, x30, [sp], #32
  420100:	ret
  420104:	ldr	x3, [x19, #144]
  420108:	mov	x0, x19
  42010c:	ldp	x19, x20, [sp, #16]
  420110:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420114:	ldp	x29, x30, [sp], #32
  420118:	add	x2, x2, #0x970
  42011c:	ldr	x3, [x3, #8]
  420120:	mov	w1, #0x3                   	// #3
  420124:	b	422e10 <ferror@plt+0x20590>
  420128:	ldr	x3, [x0, #8]
  42012c:	mov	x0, x19
  420130:	ldp	x19, x20, [sp, #16]
  420134:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420138:	ldp	x29, x30, [sp], #32
  42013c:	add	x2, x2, #0x930
  420140:	ldr	x3, [x3]
  420144:	mov	w1, #0x3                   	// #3
  420148:	b	422e10 <ferror@plt+0x20590>
  42014c:	mov	x0, x19
  420150:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420154:	ldp	x19, x20, [sp, #16]
  420158:	add	x2, x2, #0x8f8
  42015c:	ldp	x29, x30, [sp], #32
  420160:	mov	w1, #0x3                   	// #3
  420164:	b	422e10 <ferror@plt+0x20590>
  420168:	mov	x0, x19
  42016c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420170:	ldp	x19, x20, [sp, #16]
  420174:	add	x2, x2, #0x8c8
  420178:	ldp	x29, x30, [sp], #32
  42017c:	mov	w1, #0x3                   	// #3
  420180:	b	422e10 <ferror@plt+0x20590>
  420184:	nop
  420188:	stp	x29, x30, [sp, #-80]!
  42018c:	mov	w1, #0x10                  	// #16
  420190:	mov	x29, sp
  420194:	add	x2, sp, #0x48
  420198:	stp	x21, x22, [sp, #32]
  42019c:	mov	x22, x0
  4201a0:	bl	41e168 <ferror@plt+0x1b8e8>
  4201a4:	cbz	x0, 420258 <ferror@plt+0x1d9d8>
  4201a8:	stp	x19, x20, [sp, #16]
  4201ac:	mov	x21, x0
  4201b0:	ldr	x19, [x0, #24]
  4201b4:	stp	x23, x24, [sp, #48]
  4201b8:	add	x24, x0, #0x18
  4201bc:	ldr	x23, [sp, #72]
  4201c0:	cbnz	x19, 4201d4 <ferror@plt+0x1d954>
  4201c4:	b	420268 <ferror@plt+0x1d9e8>
  4201c8:	mov	x24, x19
  4201cc:	ldr	x19, [x19]
  4201d0:	cbz	x19, 420264 <ferror@plt+0x1d9e4>
  4201d4:	ldr	w0, [x19, #12]
  4201d8:	ldr	w1, [x23, #12]
  4201dc:	cmp	w0, w1
  4201e0:	b.ne	4201c8 <ferror@plt+0x1d948>  // b.any
  4201e4:	cbz	w0, 420234 <ferror@plt+0x1d9b4>
  4201e8:	mov	w20, #0x0                   	// #0
  4201ec:	b	420200 <ferror@plt+0x1d980>
  4201f0:	ldr	w0, [x19, #12]
  4201f4:	add	w20, w20, #0x1
  4201f8:	cmp	w0, w20
  4201fc:	b.ls	420224 <ferror@plt+0x1d9a4>  // b.plast
  420200:	mov	w2, w20
  420204:	add	x2, x2, #0x1
  420208:	add	x2, x2, x2, lsl #1
  42020c:	lsl	x2, x2, #3
  420210:	add	x1, x23, x2
  420214:	add	x0, x19, x2
  420218:	bl	42c9d8 <ferror@plt+0x2a158>
  42021c:	cbnz	w0, 4201f0 <ferror@plt+0x1d970>
  420220:	ldr	w0, [x19, #12]
  420224:	cmp	w20, w0
  420228:	ldr	x19, [x24]
  42022c:	b.ne	4201c8 <ferror@plt+0x1d948>  // b.any
  420230:	cbz	x19, 420264 <ferror@plt+0x1d9e4>
  420234:	ldr	x3, [x21]
  420238:	mov	x0, x22
  42023c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420240:	mov	w1, #0x0                   	// #0
  420244:	add	x2, x2, #0xee8
  420248:	add	x3, x3, #0x1
  42024c:	bl	422e10 <ferror@plt+0x20590>
  420250:	ldp	x19, x20, [sp, #16]
  420254:	ldp	x23, x24, [sp, #48]
  420258:	ldp	x21, x22, [sp, #32]
  42025c:	ldp	x29, x30, [sp], #80
  420260:	ret
  420264:	ldr	x23, [sp, #72]
  420268:	mov	x0, x22
  42026c:	ldr	w1, [x23, #12]
  420270:	add	x1, x1, #0x1
  420274:	add	x1, x1, x1, lsl #1
  420278:	lsl	x1, x1, #3
  42027c:	bl	430be0 <ferror@plt+0x2e360>
  420280:	ldr	x1, [x22, #448]
  420284:	ldr	x2, [x21, #24]
  420288:	ldurb	w1, [x1, #-20]
  42028c:	str	x0, [sp, #72]
  420290:	str	x2, [x0]
  420294:	cmp	w1, #0x16
  420298:	str	x0, [x21, #24]
  42029c:	b.eq	4202dc <ferror@plt+0x1da5c>  // b.none
  4202a0:	mov	x0, x22
  4202a4:	bl	4307f0 <ferror@plt+0x2df70>
  4202a8:	ldrb	w0, [x0, #4]
  4202ac:	cmp	w0, #0x16
  4202b0:	b.eq	4202dc <ferror@plt+0x1da5c>  // b.none
  4202b4:	ldr	x3, [x22, #144]
  4202b8:	mov	x0, x22
  4202bc:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  4202c0:	mov	w1, #0x0                   	// #0
  4202c4:	add	x2, x2, #0xba0
  4202c8:	ldr	x3, [x3, #8]
  4202cc:	bl	423050 <ferror@plt+0x207d0>
  4202d0:	ldp	x19, x20, [sp, #16]
  4202d4:	ldp	x23, x24, [sp, #48]
  4202d8:	b	420258 <ferror@plt+0x1d9d8>
  4202dc:	ldp	x19, x20, [sp, #16]
  4202e0:	ldp	x21, x22, [sp, #32]
  4202e4:	ldp	x23, x24, [sp, #48]
  4202e8:	ldp	x29, x30, [sp], #80
  4202ec:	ret
  4202f0:	stp	x29, x30, [sp, #-32]!
  4202f4:	mov	x29, sp
  4202f8:	stp	x19, x20, [sp, #16]
  4202fc:	mov	x19, x0
  420300:	bl	4307f0 <ferror@plt+0x2df70>
  420304:	ldrb	w1, [x0, #4]
  420308:	cmp	w1, #0x35
  42030c:	b.eq	420388 <ferror@plt+0x1db08>  // b.none
  420310:	ldrh	w2, [x0, #6]
  420314:	tbnz	w2, #4, 420490 <ferror@plt+0x1dc10>
  420318:	cmp	w1, #0x16
  42031c:	b.eq	420410 <ferror@plt+0x1db90>  // b.none
  420320:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420324:	mov	x0, x19
  420328:	add	x2, x2, #0x998
  42032c:	mov	w1, #0x3                   	// #3
  420330:	bl	422e10 <ferror@plt+0x20590>
  420334:	ldr	x0, [x19, #448]
  420338:	ldurb	w0, [x0, #-20]
  42033c:	cmp	w0, #0x16
  420340:	b.eq	42037c <ferror@plt+0x1dafc>  // b.none
  420344:	mov	x0, x19
  420348:	bl	4307f0 <ferror@plt+0x2df70>
  42034c:	ldrb	w0, [x0, #4]
  420350:	cmp	w0, #0x16
  420354:	b.eq	42037c <ferror@plt+0x1dafc>  // b.none
  420358:	ldr	x3, [x19, #144]
  42035c:	mov	x0, x19
  420360:	ldp	x19, x20, [sp, #16]
  420364:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420368:	ldp	x29, x30, [sp], #32
  42036c:	add	x2, x2, #0xba0
  420370:	ldr	x3, [x3, #8]
  420374:	mov	w1, #0x0                   	// #0
  420378:	b	423050 <ferror@plt+0x207d0>
  42037c:	ldp	x19, x20, [sp, #16]
  420380:	ldp	x29, x30, [sp], #32
  420384:	ret
  420388:	ldr	x20, [x0, #8]
  42038c:	ldr	x0, [x19, #1248]
  420390:	cmp	x20, x0
  420394:	b.eq	4204c8 <ferror@plt+0x1dc48>  // b.none
  420398:	ldr	x0, [x19, #1288]
  42039c:	cmp	x20, x0
  4203a0:	b.eq	4204b0 <ferror@plt+0x1dc30>  // b.none
  4203a4:	ldr	x0, [x19, #1296]
  4203a8:	cmp	x20, x0
  4203ac:	b.eq	4204b0 <ferror@plt+0x1dc30>  // b.none
  4203b0:	ldrh	w0, [x20, #18]
  4203b4:	tbnz	w0, #3, 420334 <ferror@plt+0x1dab4>
  4203b8:	ldr	x1, [x19, #1024]
  4203bc:	cbz	x1, 4203c8 <ferror@plt+0x1db48>
  4203c0:	mov	x0, x19
  4203c4:	blr	x1
  4203c8:	ldr	x3, [x19, #944]
  4203cc:	cbz	x3, 4203e0 <ferror@plt+0x1db60>
  4203d0:	ldr	w1, [x19, #48]
  4203d4:	mov	x2, x20
  4203d8:	mov	x0, x19
  4203dc:	blr	x3
  4203e0:	ldrb	w0, [x20, #18]
  4203e4:	tbz	w0, #1, 420334 <ferror@plt+0x1dab4>
  4203e8:	ldrh	w1, [x20, #18]
  4203ec:	tbnz	w1, #5, 42045c <ferror@plt+0x1dbdc>
  4203f0:	and	w0, w0, #0x3
  4203f4:	cmp	w0, #0x3
  4203f8:	b.eq	420430 <ferror@plt+0x1dbb0>  // b.none
  4203fc:	ldrb	w0, [x19, #1151]
  420400:	cbnz	w0, 42047c <ferror@plt+0x1dbfc>
  420404:	mov	x0, x20
  420408:	bl	436930 <ferror@plt+0x340b0>
  42040c:	b	420334 <ferror@plt+0x1dab4>
  420410:	ldr	x3, [x19, #144]
  420414:	mov	x0, x19
  420418:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  42041c:	mov	w1, #0x3                   	// #3
  420420:	add	x2, x2, #0x970
  420424:	ldr	x3, [x3, #8]
  420428:	bl	422e10 <ferror@plt+0x20590>
  42042c:	b	420334 <ferror@plt+0x1dab4>
  420430:	ldrb	w0, [x19, #1143]
  420434:	cbz	w0, 4203fc <ferror@plt+0x1db7c>
  420438:	ldr	w2, [x19, #48]
  42043c:	mov	x0, x19
  420440:	ldr	x5, [x20]
  420444:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  420448:	mov	w3, #0x0                   	// #0
  42044c:	add	x4, x4, #0xf00
  420450:	mov	w1, #0xb                   	// #11
  420454:	bl	423308 <ferror@plt+0x20a88>
  420458:	b	4203fc <ferror@plt+0x1db7c>
  42045c:	ldr	x3, [x20]
  420460:	mov	x0, x19
  420464:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420468:	mov	w1, #0x0                   	// #0
  42046c:	add	x2, x2, #0xf00
  420470:	bl	422e10 <ferror@plt+0x20590>
  420474:	ldrb	w0, [x19, #1151]
  420478:	cbz	w0, 420404 <ferror@plt+0x1db84>
  42047c:	mov	x1, x20
  420480:	mov	x0, x19
  420484:	mov	x2, #0x0                   	// #0
  420488:	bl	435b88 <ferror@plt+0x33308>
  42048c:	b	420404 <ferror@plt+0x1db84>
  420490:	ldr	x3, [x0, #8]
  420494:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420498:	mov	x0, x19
  42049c:	add	x2, x2, #0x930
  4204a0:	mov	w1, #0x3                   	// #3
  4204a4:	ldr	x3, [x3]
  4204a8:	bl	422e10 <ferror@plt+0x20590>
  4204ac:	b	420334 <ferror@plt+0x1dab4>
  4204b0:	mov	x0, x19
  4204b4:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  4204b8:	mov	w1, #0x3                   	// #3
  4204bc:	add	x2, x2, #0x8f8
  4204c0:	bl	422e10 <ferror@plt+0x20590>
  4204c4:	b	420334 <ferror@plt+0x1dab4>
  4204c8:	mov	x0, x19
  4204cc:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  4204d0:	mov	w1, #0x3                   	// #3
  4204d4:	add	x2, x2, #0x8c8
  4204d8:	bl	422e10 <ferror@plt+0x20590>
  4204dc:	b	420334 <ferror@plt+0x1dab4>
  4204e0:	stp	x29, x30, [sp, #-64]!
  4204e4:	mov	x29, sp
  4204e8:	stp	x19, x20, [sp, #16]
  4204ec:	mov	x19, x0
  4204f0:	stp	x21, x22, [sp, #32]
  4204f4:	str	x23, [sp, #48]
  4204f8:	ldrb	w1, [x0, #18]
  4204fc:	cbz	w1, 4205b8 <ferror@plt+0x1dd38>
  420500:	mov	w23, #0x0                   	// #0
  420504:	mov	w22, #0x1                   	// #1
  420508:	add	x20, x19, #0x328
  42050c:	ldr	x21, [x19]
  420510:	ldp	x0, x4, [x20, #24]
  420514:	sub	x1, x4, x0
  420518:	cmp	x1, #0x1f
  42051c:	b.ls	420650 <ferror@plt+0x1ddd0>  // b.plast
  420520:	add	x1, x0, #0x20
  420524:	ldr	x0, [x20, #16]
  420528:	cmp	x1, x0
  42052c:	b.eq	420670 <ferror@plt+0x1ddf0>  // b.none
  420530:	ldr	x2, [x20, #48]
  420534:	ldr	x3, [x20, #8]
  420538:	add	x1, x1, x2
  42053c:	bic	x1, x1, x2
  420540:	str	x1, [x20, #24]
  420544:	sub	x2, x1, x3
  420548:	sub	x3, x4, x3
  42054c:	cmp	x2, x3
  420550:	b.ls	42055c <ferror@plt+0x1dcdc>  // b.plast
  420554:	mov	x1, x4
  420558:	str	x4, [x20, #24]
  42055c:	ldr	w2, [x19, #48]
  420560:	ldr	x3, [x21, #96]
  420564:	str	x1, [x20, #16]
  420568:	str	x3, [x0]
  42056c:	mov	w1, #0x3                   	// #3
  420570:	str	w2, [x0, #8]
  420574:	ldrb	w2, [x19, #18]
  420578:	str	w1, [x0, #28]
  42057c:	cmp	w2, #0x0
  420580:	str	xzr, [x0, #16]
  420584:	cset	w1, ne  // ne = any
  420588:	strb	w1, [x0, #25]
  42058c:	cmp	w1, #0x0
  420590:	ccmp	w23, #0x0, #0x0, eq  // eq = none
  420594:	cset	w1, ne  // ne = any
  420598:	strb	w1, [x0, #24]
  42059c:	strb	w22, [x19, #18]
  4205a0:	ldp	x19, x20, [sp, #16]
  4205a4:	ldr	x23, [sp, #48]
  4205a8:	str	x0, [x21, #96]
  4205ac:	ldp	x21, x22, [sp, #32]
  4205b0:	ldp	x29, x30, [sp], #64
  4205b4:	ret
  4205b8:	mov	w1, #0x0                   	// #0
  4205bc:	bl	41deb8 <ferror@plt+0x1b638>
  4205c0:	mov	x20, x0
  4205c4:	cbz	x0, 420500 <ferror@plt+0x1dc80>
  4205c8:	ldrb	w0, [x0, #18]
  4205cc:	ldrh	w1, [x20, #18]
  4205d0:	ubfx	x1, x1, #2, #8
  4205d4:	tbz	w0, #1, 420680 <ferror@plt+0x1de00>
  4205d8:	ands	w2, w1, #0x40
  4205dc:	ubfx	x22, x1, #6, #1
  4205e0:	cset	w23, eq  // eq = none
  4205e4:	and	w0, w0, #0x3
  4205e8:	cmp	w0, #0x2
  4205ec:	b.eq	42068c <ferror@plt+0x1de0c>  // b.none
  4205f0:	tbz	w1, #5, 4206a0 <ferror@plt+0x1de20>
  4205f4:	ldr	x3, [x19, #1032]
  4205f8:	cbz	x3, 42060c <ferror@plt+0x1dd8c>
  4205fc:	ldr	w1, [x19, #48]
  420600:	mov	x2, x20
  420604:	mov	x0, x19
  420608:	blr	x3
  42060c:	ldr	x0, [x19, #448]
  420610:	ldurb	w0, [x0, #-20]
  420614:	cmp	w0, #0x16
  420618:	b.eq	420508 <ferror@plt+0x1dc88>  // b.none
  42061c:	mov	x0, x19
  420620:	bl	4307f0 <ferror@plt+0x2df70>
  420624:	ldrb	w0, [x0, #4]
  420628:	cmp	w0, #0x16
  42062c:	b.eq	420508 <ferror@plt+0x1dc88>  // b.none
  420630:	ldr	x3, [x19, #144]
  420634:	mov	x0, x19
  420638:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  42063c:	mov	w1, #0x0                   	// #0
  420640:	add	x2, x2, #0xba0
  420644:	ldr	x3, [x3, #8]
  420648:	bl	423050 <ferror@plt+0x207d0>
  42064c:	b	420508 <ferror@plt+0x1dc88>
  420650:	mov	x0, x20
  420654:	mov	x1, #0x20                  	// #32
  420658:	bl	45c6e0 <_obstack_newchunk@@Base>
  42065c:	ldp	x0, x4, [x20, #24]
  420660:	add	x1, x0, #0x20
  420664:	ldr	x0, [x20, #16]
  420668:	cmp	x1, x0
  42066c:	b.ne	420530 <ferror@plt+0x1dcb0>  // b.any
  420670:	ldrb	w2, [x20, #80]
  420674:	orr	w2, w2, #0x2
  420678:	strb	w2, [x20, #80]
  42067c:	b	420530 <ferror@plt+0x1dcb0>
  420680:	mov	w23, #0x0                   	// #0
  420684:	mov	w22, #0x1                   	// #1
  420688:	b	4205e4 <ferror@plt+0x1dd64>
  42068c:	ldr	x2, [x20, #24]
  420690:	ldrb	w0, [x2, #19]
  420694:	orr	w0, w0, #0x20
  420698:	strb	w0, [x2, #19]
  42069c:	b	4205f0 <ferror@plt+0x1dd70>
  4206a0:	mov	x1, x20
  4206a4:	mov	x0, x19
  4206a8:	bl	437af0 <ferror@plt+0x35270>
  4206ac:	b	4205f4 <ferror@plt+0x1dd74>
  4206b0:	stp	x29, x30, [sp, #-80]!
  4206b4:	mov	x29, sp
  4206b8:	stp	x19, x20, [sp, #16]
  4206bc:	mov	x19, x0
  4206c0:	stp	x21, x22, [sp, #32]
  4206c4:	stp	x23, x24, [sp, #48]
  4206c8:	ldrb	w22, [x0, #18]
  4206cc:	str	x0, [sp, #72]
  4206d0:	cbz	w22, 4207c8 <ferror@plt+0x1df48>
  4206d4:	mov	w24, #0x0                   	// #0
  4206d8:	mov	w22, #0x1                   	// #1
  4206dc:	mov	x21, #0x0                   	// #0
  4206e0:	add	x20, x19, #0x328
  4206e4:	ldr	x23, [x19]
  4206e8:	ldp	x1, x4, [x20, #24]
  4206ec:	sub	x0, x4, x1
  4206f0:	cmp	x0, #0x1f
  4206f4:	b.ls	420864 <ferror@plt+0x1dfe4>  // b.plast
  4206f8:	add	x2, x1, #0x20
  4206fc:	ldr	x1, [x20, #16]
  420700:	cmp	x2, x1
  420704:	b.eq	420884 <ferror@plt+0x1e004>  // b.none
  420708:	ldr	x3, [x20, #48]
  42070c:	ldr	x0, [x20, #8]
  420710:	add	x2, x2, x3
  420714:	bic	x2, x2, x3
  420718:	str	x2, [x20, #24]
  42071c:	sub	x3, x2, x0
  420720:	sub	x0, x4, x0
  420724:	cmp	x3, x0
  420728:	b.ls	420734 <ferror@plt+0x1deb4>  // b.plast
  42072c:	mov	x2, x4
  420730:	str	x4, [x20, #24]
  420734:	ldr	w0, [x19, #48]
  420738:	mov	w3, #0x6                   	// #6
  42073c:	str	x2, [x20, #16]
  420740:	ldr	x2, [x23, #96]
  420744:	str	x2, [x1]
  420748:	str	w0, [x1, #8]
  42074c:	ldrb	w2, [x19, #440]
  420750:	ldrb	w0, [x19, #18]
  420754:	str	w3, [x1, #28]
  420758:	cmp	w0, #0x0
  42075c:	cset	w0, ne  // ne = any
  420760:	strb	w0, [x1, #25]
  420764:	cmp	w0, #0x0
  420768:	ccmp	w24, #0x0, #0x0, eq  // eq = none
  42076c:	cset	w0, ne  // ne = any
  420770:	strb	w0, [x1, #24]
  420774:	cbz	w2, 4207a4 <ferror@plt+0x1df24>
  420778:	ldr	x0, [x19, #424]
  42077c:	cmp	x0, #0x0
  420780:	csel	x21, x21, xzr, eq  // eq = none
  420784:	str	x21, [x1, #16]
  420788:	strb	w22, [x19, #18]
  42078c:	ldp	x19, x20, [sp, #16]
  420790:	ldp	x21, x22, [sp, #32]
  420794:	str	x1, [x23, #96]
  420798:	ldp	x23, x24, [sp, #48]
  42079c:	ldp	x29, x30, [sp], #80
  4207a0:	ret
  4207a4:	mov	x21, #0x0                   	// #0
  4207a8:	str	x21, [x1, #16]
  4207ac:	strb	w22, [x19, #18]
  4207b0:	ldp	x19, x20, [sp, #16]
  4207b4:	ldp	x21, x22, [sp, #32]
  4207b8:	str	x1, [x23, #96]
  4207bc:	ldp	x23, x24, [sp, #48]
  4207c0:	ldp	x29, x30, [sp], #80
  4207c4:	ret
  4207c8:	mov	w1, #0x0                   	// #0
  4207cc:	bl	41deb8 <ferror@plt+0x1b638>
  4207d0:	mov	x21, x0
  4207d4:	cbz	x0, 4206d4 <ferror@plt+0x1de54>
  4207d8:	ldrb	w0, [x0, #18]
  4207dc:	mov	w24, #0x1                   	// #1
  4207e0:	ldrh	w1, [x21, #18]
  4207e4:	ubfx	x1, x1, #2, #8
  4207e8:	tbz	w0, #1, 4207f8 <ferror@plt+0x1df78>
  4207ec:	ands	w2, w1, #0x40
  4207f0:	ubfx	x24, x1, #6, #1
  4207f4:	cset	w22, eq  // eq = none
  4207f8:	and	w0, w0, #0x3
  4207fc:	cmp	w0, #0x2
  420800:	b.eq	420894 <ferror@plt+0x1e014>  // b.none
  420804:	tbz	w1, #5, 4208a8 <ferror@plt+0x1e028>
  420808:	ldr	x3, [x19, #1032]
  42080c:	cbz	x3, 420820 <ferror@plt+0x1dfa0>
  420810:	ldr	w1, [x19, #48]
  420814:	mov	x2, x21
  420818:	mov	x0, x19
  42081c:	blr	x3
  420820:	ldr	x0, [x19, #448]
  420824:	ldurb	w0, [x0, #-20]
  420828:	cmp	w0, #0x16
  42082c:	b.eq	4206e0 <ferror@plt+0x1de60>  // b.none
  420830:	mov	x0, x19
  420834:	bl	4307f0 <ferror@plt+0x2df70>
  420838:	ldrb	w0, [x0, #4]
  42083c:	cmp	w0, #0x16
  420840:	b.eq	4206e0 <ferror@plt+0x1de60>  // b.none
  420844:	ldr	x3, [x19, #144]
  420848:	mov	x0, x19
  42084c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420850:	mov	w1, #0x0                   	// #0
  420854:	add	x2, x2, #0xba0
  420858:	ldr	x3, [x3, #8]
  42085c:	bl	423050 <ferror@plt+0x207d0>
  420860:	b	4206e0 <ferror@plt+0x1de60>
  420864:	mov	x1, #0x20                  	// #32
  420868:	mov	x0, x20
  42086c:	bl	45c6e0 <_obstack_newchunk@@Base>
  420870:	ldp	x1, x4, [x20, #24]
  420874:	add	x2, x1, #0x20
  420878:	ldr	x1, [x20, #16]
  42087c:	cmp	x2, x1
  420880:	b.ne	420708 <ferror@plt+0x1de88>  // b.any
  420884:	ldrb	w0, [x20, #80]
  420888:	orr	w0, w0, #0x2
  42088c:	strb	w0, [x20, #80]
  420890:	b	420708 <ferror@plt+0x1de88>
  420894:	ldr	x2, [x21, #24]
  420898:	ldrb	w0, [x2, #19]
  42089c:	orr	w0, w0, #0x20
  4208a0:	strb	w0, [x2, #19]
  4208a4:	tbnz	w1, #5, 420808 <ferror@plt+0x1df88>
  4208a8:	mov	x1, x21
  4208ac:	mov	x0, x19
  4208b0:	bl	437af0 <ferror@plt+0x35270>
  4208b4:	b	420808 <ferror@plt+0x1df88>
  4208b8:	stp	x29, x30, [sp, #-32]!
  4208bc:	mov	x29, sp
  4208c0:	ldr	x1, [x0]
  4208c4:	stp	x19, x20, [sp, #16]
  4208c8:	ldr	x19, [x1, #96]
  4208cc:	cbz	x19, 420960 <ferror@plt+0x1e0e0>
  4208d0:	ldr	w1, [x19, #28]
  4208d4:	mov	x20, x0
  4208d8:	cmp	w1, #0x5
  4208dc:	b.eq	420978 <ferror@plt+0x1e0f8>  // b.none
  4208e0:	mov	w0, #0x5                   	// #5
  4208e4:	str	w0, [x19, #28]
  4208e8:	ldrb	w0, [x19, #24]
  4208ec:	mov	w1, #0x1                   	// #1
  4208f0:	strb	w0, [x20, #18]
  4208f4:	str	xzr, [x19, #16]
  4208f8:	ldrb	w0, [x19, #25]
  4208fc:	strb	w1, [x19, #24]
  420900:	cbnz	w0, 42090c <ferror@plt+0x1e08c>
  420904:	ldrb	w0, [x20, #1140]
  420908:	cbnz	w0, 420918 <ferror@plt+0x1e098>
  42090c:	ldp	x19, x20, [sp, #16]
  420910:	ldp	x29, x30, [sp], #32
  420914:	ret
  420918:	ldr	x0, [x20, #448]
  42091c:	ldurb	w0, [x0, #-20]
  420920:	cmp	w0, #0x16
  420924:	b.eq	42090c <ferror@plt+0x1e08c>  // b.none
  420928:	mov	x0, x20
  42092c:	bl	4307f0 <ferror@plt+0x2df70>
  420930:	ldrb	w0, [x0, #4]
  420934:	cmp	w0, #0x16
  420938:	b.eq	42090c <ferror@plt+0x1e08c>  // b.none
  42093c:	ldr	x3, [x20, #144]
  420940:	mov	x0, x20
  420944:	ldp	x19, x20, [sp, #16]
  420948:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  42094c:	ldp	x29, x30, [sp], #32
  420950:	add	x2, x2, #0xba0
  420954:	ldr	x3, [x3, #8]
  420958:	mov	w1, #0x8                   	// #8
  42095c:	b	423050 <ferror@plt+0x207d0>
  420960:	ldp	x19, x20, [sp, #16]
  420964:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420968:	ldp	x29, x30, [sp], #32
  42096c:	add	x2, x2, #0xf10
  420970:	mov	w1, #0x3                   	// #3
  420974:	b	422e10 <ferror@plt+0x20590>
  420978:	mov	w1, #0x3                   	// #3
  42097c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420980:	add	x2, x2, #0xf28
  420984:	bl	422e10 <ferror@plt+0x20590>
  420988:	ldr	w2, [x19, #8]
  42098c:	mov	x0, x20
  420990:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  420994:	mov	w3, #0x0                   	// #0
  420998:	add	x4, x4, #0xb40
  42099c:	mov	w1, #0x3                   	// #3
  4209a0:	bl	423290 <ferror@plt+0x20a10>
  4209a4:	b	4208e0 <ferror@plt+0x1e060>
  4209a8:	stp	x29, x30, [sp, #-48]!
  4209ac:	mov	x29, sp
  4209b0:	str	x21, [sp, #32]
  4209b4:	ldr	x21, [x0]
  4209b8:	stp	x19, x20, [sp, #16]
  4209bc:	ldr	x20, [x21, #96]
  4209c0:	cbz	x20, 420a74 <ferror@plt+0x1e1f4>
  4209c4:	ldrb	w1, [x20, #25]
  4209c8:	mov	x19, x0
  4209cc:	cbz	w1, 420a2c <ferror@plt+0x1e1ac>
  4209d0:	ldr	x2, [x20]
  4209d4:	cbz	x2, 420a5c <ferror@plt+0x1e1dc>
  4209d8:	add	x0, x19, #0x328
  4209dc:	str	x2, [x21, #96]
  4209e0:	strb	w1, [x19, #18]
  4209e4:	add	x19, x19, #0x400
  4209e8:	ldr	x1, [x0, #8]
  4209ec:	cmp	x1, x20
  4209f0:	b.cs	420a18 <ferror@plt+0x1e198>  // b.hs, b.nlast
  4209f4:	ldr	x1, [x0, #32]
  4209f8:	cmp	x1, x20
  4209fc:	b.ls	420a18 <ferror@plt+0x1e198>  // b.plast
  420a00:	dup	v0.2d, x20
  420a04:	ldr	x21, [sp, #32]
  420a08:	stur	q0, [x19, #-200]
  420a0c:	ldp	x19, x20, [sp, #16]
  420a10:	ldp	x29, x30, [sp], #48
  420a14:	ret
  420a18:	mov	x1, x20
  420a1c:	ldp	x19, x20, [sp, #16]
  420a20:	ldr	x21, [sp, #32]
  420a24:	ldp	x29, x30, [sp], #48
  420a28:	b	45c878 <_obstack_free@@Base>
  420a2c:	ldrb	w2, [x0, #1140]
  420a30:	cbz	w2, 4209d0 <ferror@plt+0x1e150>
  420a34:	ldr	x2, [x0, #448]
  420a38:	ldurb	w2, [x2, #-20]
  420a3c:	cmp	w2, #0x16
  420a40:	b.eq	4209d0 <ferror@plt+0x1e150>  // b.none
  420a44:	bl	4307f0 <ferror@plt+0x2df70>
  420a48:	ldrb	w0, [x0, #4]
  420a4c:	cmp	w0, #0x16
  420a50:	b.ne	420a90 <ferror@plt+0x1e210>  // b.any
  420a54:	ldrb	w1, [x20, #25]
  420a58:	b	4209d0 <ferror@plt+0x1e150>
  420a5c:	ldr	x0, [x20, #16]
  420a60:	cbz	x0, 4209d8 <ferror@plt+0x1e158>
  420a64:	mov	w3, #0x1                   	// #1
  420a68:	str	x0, [x19, #424]
  420a6c:	strb	w3, [x19, #440]
  420a70:	b	4209d8 <ferror@plt+0x1e158>
  420a74:	ldp	x19, x20, [sp, #16]
  420a78:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420a7c:	ldr	x21, [sp, #32]
  420a80:	add	x2, x2, #0xf40
  420a84:	ldp	x29, x30, [sp], #48
  420a88:	mov	w1, #0x3                   	// #3
  420a8c:	b	422e10 <ferror@plt+0x20590>
  420a90:	ldr	x3, [x19, #144]
  420a94:	mov	w1, #0x8                   	// #8
  420a98:	mov	x0, x19
  420a9c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420aa0:	add	x2, x2, #0xba0
  420aa4:	ldr	x3, [x3, #8]
  420aa8:	bl	423050 <ferror@plt+0x207d0>
  420aac:	ldrb	w1, [x20, #25]
  420ab0:	b	4209d0 <ferror@plt+0x1e150>
  420ab4:	nop
  420ab8:	stp	x29, x30, [sp, #-64]!
  420abc:	mov	x29, sp
  420ac0:	stp	x19, x20, [sp, #16]
  420ac4:	mov	x19, x0
  420ac8:	stp	x21, x22, [sp, #32]
  420acc:	str	x23, [sp, #48]
  420ad0:	bl	41ea60 <ferror@plt+0x1c1e0>
  420ad4:	cbz	x0, 420d00 <ferror@plt+0x1e480>
  420ad8:	ldr	x1, [x0, #16]
  420adc:	ldr	w0, [x0, #8]
  420ae0:	ldrb	w3, [x1]
  420ae4:	add	w2, w0, #0x2
  420ae8:	mov	w4, w0
  420aec:	add	x0, x2, #0xf
  420af0:	cmp	w3, #0x4c
  420af4:	and	x0, x0, #0x1fffffff0
  420af8:	cset	x2, eq  // eq = none
  420afc:	sub	x4, x4, #0x1
  420b00:	add	x2, x2, #0x1
  420b04:	sub	sp, sp, x0
  420b08:	add	x4, x1, x4
  420b0c:	mov	x20, sp
  420b10:	add	x1, x1, x2
  420b14:	mov	x3, x20
  420b18:	cmp	x1, x4
  420b1c:	b.cs	420b48 <ferror@plt+0x1e2c8>  // b.hs, b.nlast
  420b20:	mov	w6, #0x22                  	// #34
  420b24:	nop
  420b28:	mov	x0, x1
  420b2c:	ldrb	w2, [x0], #1
  420b30:	cmp	w2, #0x5c
  420b34:	b.eq	420c44 <ferror@plt+0x1e3c4>  // b.none
  420b38:	mov	x1, x0
  420b3c:	strb	w2, [x3], #1
  420b40:	cmp	x4, x1
  420b44:	b.hi	420b28 <ferror@plt+0x1e2a8>  // b.pmore
  420b48:	ldr	x0, [x19, #448]
  420b4c:	strb	wzr, [x3]
  420b50:	ldurb	w0, [x0, #-20]
  420b54:	cmp	w0, #0x16
  420b58:	b.eq	420c80 <ferror@plt+0x1e400>  // b.none
  420b5c:	mov	x0, x19
  420b60:	bl	4307f0 <ferror@plt+0x2df70>
  420b64:	ldrb	w0, [x0, #4]
  420b68:	cmp	w0, #0x16
  420b6c:	b.ne	420c60 <ferror@plt+0x1e3e0>  // b.any
  420b70:	ldr	x0, [x19, #136]
  420b74:	ldr	x0, [x0, #8]
  420b78:	cbz	x0, 420b94 <ferror@plt+0x1e314>
  420b7c:	nop
  420b80:	mov	x0, x19
  420b84:	bl	436640 <ferror@plt+0x33dc0>
  420b88:	ldr	x0, [x19, #136]
  420b8c:	ldr	x0, [x0, #8]
  420b90:	cbnz	x0, 420b80 <ferror@plt+0x1e300>
  420b94:	ldr	x0, [x19, #448]
  420b98:	ldurb	w0, [x0, #-20]
  420b9c:	cmp	w0, #0x16
  420ba0:	b.eq	420bbc <ferror@plt+0x1e33c>  // b.none
  420ba4:	nop
  420ba8:	mov	x0, x19
  420bac:	bl	4307f0 <ferror@plt+0x2df70>
  420bb0:	ldrb	w0, [x0, #4]
  420bb4:	cmp	w0, #0x16
  420bb8:	b.ne	420ba8 <ferror@plt+0x1e328>  // b.any
  420bbc:	mov	x0, #0x20                  	// #32
  420bc0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  420bc4:	mov	x21, x0
  420bc8:	mov	x0, x20
  420bcc:	stp	xzr, xzr, [x21]
  420bd0:	stp	xzr, xzr, [x21, #16]
  420bd4:	bl	402270 <strlen@plt>
  420bd8:	add	x22, x0, #0x1
  420bdc:	mov	x0, x22
  420be0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  420be4:	str	x0, [x21, #8]
  420be8:	mov	x1, x20
  420bec:	mov	x2, x22
  420bf0:	mov	x20, x0
  420bf4:	bl	402220 <memcpy@plt>
  420bf8:	ldr	x2, [x19, #1400]
  420bfc:	str	x2, [x21]
  420c00:	mov	x1, x20
  420c04:	mov	x0, x19
  420c08:	bl	42bb30 <ferror@plt+0x292b0>
  420c0c:	mov	x20, x0
  420c10:	ldrb	w0, [x0, #18]
  420c14:	tst	x0, #0x3
  420c18:	b.ne	420c90 <ferror@plt+0x1e410>  // b.any
  420c1c:	ldrb	w0, [x21, #28]
  420c20:	orr	w0, w0, #0x4
  420c24:	strb	w0, [x21, #28]
  420c28:	str	x21, [x19, #1400]
  420c2c:	mov	sp, x29
  420c30:	ldp	x19, x20, [sp, #16]
  420c34:	ldp	x21, x22, [sp, #32]
  420c38:	ldr	x23, [sp, #48]
  420c3c:	ldp	x29, x30, [sp], #64
  420c40:	ret
  420c44:	ldrb	w5, [x1, #1]
  420c48:	add	x1, x1, #0x2
  420c4c:	cmp	w5, #0x5c
  420c50:	ccmp	w5, w6, #0x4, ne  // ne = any
  420c54:	b.ne	420b38 <ferror@plt+0x1e2b8>  // b.any
  420c58:	mov	w2, w5
  420c5c:	b	420b3c <ferror@plt+0x1e2bc>
  420c60:	ldr	x3, [x19, #144]
  420c64:	mov	x0, x19
  420c68:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420c6c:	mov	w1, #0x0                   	// #0
  420c70:	add	x2, x2, #0xba0
  420c74:	ldr	x3, [x3, #8]
  420c78:	bl	423050 <ferror@plt+0x207d0>
  420c7c:	b	420b70 <ferror@plt+0x1e2f0>
  420c80:	ldr	x0, [x19, #136]
  420c84:	ldr	x0, [x0, #8]
  420c88:	cbnz	x0, 420b80 <ferror@plt+0x1e300>
  420c8c:	b	420bbc <ferror@plt+0x1e33c>
  420c90:	mov	x1, x20
  420c94:	mov	x0, x19
  420c98:	bl	43a0c0 <ferror@plt+0x37840>
  420c9c:	mov	x23, x0
  420ca0:	bl	402270 <strlen@plt>
  420ca4:	mov	x22, x0
  420ca8:	add	x0, x0, #0x2
  420cac:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  420cb0:	add	x4, x0, x22
  420cb4:	mov	w6, #0xa                   	// #10
  420cb8:	strb	w6, [x0, x22]
  420cbc:	mov	x1, x23
  420cc0:	ldrb	w5, [x21, #28]
  420cc4:	mov	x2, x22
  420cc8:	strb	wzr, [x4, #1]
  420ccc:	str	x0, [x21, #16]
  420cd0:	ldr	x3, [x20, #24]
  420cd4:	ldrb	w4, [x3, #19]
  420cd8:	ldr	w3, [x3, #8]
  420cdc:	str	w3, [x21, #24]
  420ce0:	ubfx	x3, x4, #5, #1
  420ce4:	ubfx	x4, x4, #4, #1
  420ce8:	ubfiz	w3, w3, #1, #7
  420cec:	orr	w3, w3, w4
  420cf0:	bfxil	w5, w3, #0, #2
  420cf4:	strb	w5, [x21, #28]
  420cf8:	bl	402220 <memcpy@plt>
  420cfc:	b	420c28 <ferror@plt+0x1e3a8>
  420d00:	ldr	x2, [x19, #448]
  420d04:	mov	x0, x19
  420d08:	adrp	x4, 475000 <_obstack_memory_used@@Base+0x186d8>
  420d0c:	mov	w3, #0x0                   	// #0
  420d10:	add	x4, x4, #0xf58
  420d14:	mov	w1, #0x3                   	// #3
  420d18:	ldur	w2, [x2, #-24]
  420d1c:	bl	423290 <ferror@plt+0x20a10>
  420d20:	ldr	x0, [x19, #448]
  420d24:	ldurb	w0, [x0, #-20]
  420d28:	cmp	w0, #0x16
  420d2c:	b.eq	420db0 <ferror@plt+0x1e530>  // b.none
  420d30:	mov	x0, x19
  420d34:	bl	4307f0 <ferror@plt+0x2df70>
  420d38:	ldrb	w0, [x0, #4]
  420d3c:	cmp	w0, #0x16
  420d40:	b.ne	420d90 <ferror@plt+0x1e510>  // b.any
  420d44:	ldr	x0, [x19, #136]
  420d48:	ldr	x0, [x0, #8]
  420d4c:	cbz	x0, 420d64 <ferror@plt+0x1e4e4>
  420d50:	mov	x0, x19
  420d54:	bl	436640 <ferror@plt+0x33dc0>
  420d58:	ldr	x0, [x19, #136]
  420d5c:	ldr	x0, [x0, #8]
  420d60:	cbnz	x0, 420d50 <ferror@plt+0x1e4d0>
  420d64:	ldr	x0, [x19, #448]
  420d68:	ldurb	w0, [x0, #-20]
  420d6c:	cmp	w0, #0x16
  420d70:	b.eq	420c2c <ferror@plt+0x1e3ac>  // b.none
  420d74:	nop
  420d78:	mov	x0, x19
  420d7c:	bl	4307f0 <ferror@plt+0x2df70>
  420d80:	ldrb	w0, [x0, #4]
  420d84:	cmp	w0, #0x16
  420d88:	b.ne	420d78 <ferror@plt+0x1e4f8>  // b.any
  420d8c:	b	420c2c <ferror@plt+0x1e3ac>
  420d90:	ldr	x3, [x19, #144]
  420d94:	mov	x0, x19
  420d98:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420d9c:	mov	w1, #0x0                   	// #0
  420da0:	add	x2, x2, #0xba0
  420da4:	ldr	x3, [x3, #8]
  420da8:	bl	423050 <ferror@plt+0x207d0>
  420dac:	b	420d44 <ferror@plt+0x1e4c4>
  420db0:	ldr	x0, [x19, #136]
  420db4:	ldr	x0, [x0, #8]
  420db8:	cbnz	x0, 420d50 <ferror@plt+0x1e4d0>
  420dbc:	b	420c2c <ferror@plt+0x1e3ac>
  420dc0:	stp	x29, x30, [sp, #-240]!
  420dc4:	mov	x29, sp
  420dc8:	stp	x19, x20, [sp, #16]
  420dcc:	mov	x19, x0
  420dd0:	stp	x21, x22, [sp, #32]
  420dd4:	mov	w21, w1
  420dd8:	stp	x23, x24, [sp, #48]
  420ddc:	ldrb	w23, [x0, #27]
  420de0:	ldrb	w22, [x0, #25]
  420de4:	cbz	w23, 420dec <ferror@plt+0x1e56c>
  420de8:	strb	wzr, [x0, #24]
  420dec:	cbz	w22, 420dfc <ferror@plt+0x1e57c>
  420df0:	ldrb	w0, [x19, #1154]
  420df4:	cbnz	w0, 421114 <ferror@plt+0x1e894>
  420df8:	strh	wzr, [x19, #24]
  420dfc:	ldr	x1, [x19, #40]
  420e00:	mov	w0, #0x1                   	// #1
  420e04:	strb	w0, [x19, #16]
  420e08:	mov	w2, #0x53                  	// #83
  420e0c:	strb	wzr, [x19, #21]
  420e10:	mov	x0, x19
  420e14:	strb	w2, [x19, #156]
  420e18:	ldr	w1, [x1, #60]
  420e1c:	str	w1, [x19, #48]
  420e20:	bl	4307f0 <ferror@plt+0x2df70>
  420e24:	mov	x20, x0
  420e28:	ldrb	w0, [x0, #4]
  420e2c:	cmp	w0, #0x35
  420e30:	b.eq	420fe0 <ferror@plt+0x1e760>  // b.none
  420e34:	cmp	w0, #0x37
  420e38:	b.eq	420ee8 <ferror@plt+0x1e668>  // b.none
  420e3c:	cmp	w0, #0x16
  420e40:	b.ne	420fec <ferror@plt+0x1e76c>  // b.any
  420e44:	ldrb	w0, [x19, #1160]
  420e48:	str	xzr, [x19, #144]
  420e4c:	cbz	w0, 420fd0 <ferror@plt+0x1e750>
  420e50:	mov	x0, x19
  420e54:	bl	41e828 <ferror@plt+0x1bfa8>
  420e58:	ldrb	w0, [x19, #1160]
  420e5c:	cbz	w0, 420fd0 <ferror@plt+0x1e750>
  420e60:	mov	w20, #0x1                   	// #1
  420e64:	ldrb	w0, [x19, #32]
  420e68:	cbnz	w0, 420e78 <ferror@plt+0x1e5f8>
  420e6c:	ldrb	w0, [x19, #24]
  420e70:	sub	w0, w0, #0x1
  420e74:	strb	w0, [x19, #24]
  420e78:	ldr	x1, [x19, #144]
  420e7c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  420e80:	add	x0, x0, #0x2f0
  420e84:	cmp	x1, x0
  420e88:	b.eq	420e94 <ferror@plt+0x1e614>  // b.none
  420e8c:	mov	x0, x19
  420e90:	bl	43bd88 <ferror@plt+0x39508>
  420e94:	ldrb	w0, [x19, #1123]
  420e98:	strb	wzr, [x19, #16]
  420e9c:	cmp	w0, #0x0
  420ea0:	sturh	wzr, [x19, #19]
  420ea4:	cset	w0, eq  // eq = none
  420ea8:	strb	w0, [x19, #21]
  420eac:	str	xzr, [x19, #144]
  420eb0:	cbz	w22, 420ec4 <ferror@plt+0x1e644>
  420eb4:	ldrb	w0, [x19, #32]
  420eb8:	cbnz	w0, 420ec4 <ferror@plt+0x1e644>
  420ebc:	mov	w0, #0x201                 	// #513
  420ec0:	strh	w0, [x19, #24]
  420ec4:	cbz	w23, 420ed0 <ferror@plt+0x1e650>
  420ec8:	mov	w0, #0x1                   	// #1
  420ecc:	strb	w0, [x19, #24]
  420ed0:	mov	w0, w20
  420ed4:	ldp	x19, x20, [sp, #16]
  420ed8:	ldp	x21, x22, [sp, #32]
  420edc:	ldp	x23, x24, [sp, #48]
  420ee0:	ldp	x29, x30, [sp], #240
  420ee4:	ret
  420ee8:	ldr	w0, [x19, #1116]
  420eec:	cmp	w0, #0x15
  420ef0:	b.eq	420fa0 <ferror@plt+0x1e720>  // b.none
  420ef4:	ldrb	w0, [x19, #1154]
  420ef8:	ldrb	w2, [x19, #1155]
  420efc:	cbz	w0, 420f78 <ferror@plt+0x1e6f8>
  420f00:	cbnz	w2, 420f78 <ferror@plt+0x1e6f8>
  420f04:	ldrb	w0, [x19, #18]
  420f08:	cbz	w0, 420f60 <ferror@plt+0x1e6e0>
  420f0c:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x196d8>
  420f10:	add	x24, x24, #0x2f0
  420f14:	add	x20, x24, #0x1c8
  420f18:	strb	wzr, [x19, #17]
  420f1c:	strb	wzr, [x19, #19]
  420f20:	strb	wzr, [x19, #440]
  420f24:	ldrb	w0, [x19, #1138]
  420f28:	cbz	w0, 4211d0 <ferror@plt+0x1e950>
  420f2c:	add	x24, x24, #0xd8
  420f30:	cmp	x20, x24
  420f34:	b.eq	42126c <ferror@plt+0x1e9ec>  // b.none
  420f38:	ldrb	w0, [x20, #18]
  420f3c:	cbnz	w21, 42124c <ferror@plt+0x1e9cc>
  420f40:	cbz	w0, 4211c8 <ferror@plt+0x1e948>
  420f44:	ldr	x3, [x20, #8]
  420f48:	mov	x0, x19
  420f4c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  420f50:	mov	w1, #0x6                   	// #6
  420f54:	add	x2, x2, #0x90
  420f58:	bl	422f30 <ferror@plt+0x206b0>
  420f5c:	b	4211c8 <ferror@plt+0x1e948>
  420f60:	mov	x0, x19
  420f64:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  420f68:	mov	w1, #0x2                   	// #2
  420f6c:	add	x2, x2, #0xfc0
  420f70:	bl	422e10 <ferror@plt+0x20590>
  420f74:	ldrb	w2, [x19, #1155]
  420f78:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x196d8>
  420f7c:	add	x24, x24, #0x2f0
  420f80:	add	x20, x24, #0x1c8
  420f84:	mov	w0, #0x8                   	// #8
  420f88:	strb	wzr, [x19, #440]
  420f8c:	cbz	w2, 4210c4 <ferror@plt+0x1e844>
  420f90:	ldrb	w1, [x19, #1244]
  420f94:	cbnz	w1, 4211bc <ferror@plt+0x1e93c>
  420f98:	cbz	w21, 4211b8 <ferror@plt+0x1e938>
  420f9c:	nop
  420fa0:	ldrb	w0, [x19, #1160]
  420fa4:	str	xzr, [x19, #144]
  420fa8:	cbz	w0, 420fb4 <ferror@plt+0x1e734>
  420fac:	mov	x0, x19
  420fb0:	bl	41e828 <ferror@plt+0x1bfa8>
  420fb4:	mov	x0, x19
  420fb8:	mov	w1, #0x1                   	// #1
  420fbc:	bl	4367f8 <ferror@plt+0x33f78>
  420fc0:	mov	w20, #0x0                   	// #0
  420fc4:	ldrb	w0, [x19, #1160]
  420fc8:	cbnz	w0, 420e64 <ferror@plt+0x1e5e4>
  420fcc:	b	420e94 <ferror@plt+0x1e614>
  420fd0:	ldrb	w0, [x19, #32]
  420fd4:	cbz	w0, 421130 <ferror@plt+0x1e8b0>
  420fd8:	mov	w20, #0x1                   	// #1
  420fdc:	b	420e94 <ferror@plt+0x1e614>
  420fe0:	ldr	x0, [x20, #8]
  420fe4:	ldrb	w0, [x0, #16]
  420fe8:	tbnz	w0, #0, 421094 <ferror@plt+0x1e814>
  420fec:	ldr	w0, [x19, #1116]
  420ff0:	cmp	w0, #0x15
  420ff4:	b.eq	420fa0 <ferror@plt+0x1e720>  // b.none
  420ff8:	ldrb	w0, [x19, #18]
  420ffc:	cbnz	w0, 420e44 <ferror@plt+0x1e5c4>
  421000:	mov	x1, x20
  421004:	mov	x0, x19
  421008:	bl	42c490 <ferror@plt+0x29c10>
  42100c:	mov	x21, x0
  421010:	ldr	x3, [x19, #1064]
  421014:	cbz	x3, 42119c <ferror@plt+0x1e91c>
  421018:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42101c:	add	x2, x2, #0x2f0
  421020:	mov	x1, x0
  421024:	add	x2, x2, #0x1e0
  421028:	mov	x0, x19
  42102c:	blr	x3
  421030:	mov	x24, x0
  421034:	cbz	x0, 42119c <ferror@plt+0x1e91c>
  421038:	ldr	w2, [x20]
  42103c:	mov	x3, #0x0                   	// #0
  421040:	ldr	x1, [x19, #40]
  421044:	add	x0, sp, #0x48
  421048:	bl	4337e0 <ferror@plt+0x30f60>
  42104c:	ldr	w1, [x20]
  421050:	ldr	x0, [x19, #40]
  421054:	bl	431d88 <ferror@plt+0x2f508>
  421058:	mov	x1, x0
  42105c:	mov	x2, x24
  421060:	add	x0, sp, #0x48
  421064:	bl	4346c0 <ferror@plt+0x31e40>
  421068:	mov	x5, x24
  42106c:	mov	x4, x21
  421070:	add	x2, sp, #0x48
  421074:	adrp	x3, 476000 <_obstack_memory_used@@Base+0x196d8>
  421078:	add	x3, x3, #0xd0
  42107c:	mov	w1, #0x3                   	// #3
  421080:	mov	x0, x19
  421084:	bl	423568 <ferror@plt+0x20ce8>
  421088:	add	x0, sp, #0x48
  42108c:	bl	433820 <ferror@plt+0x30fa0>
  421090:	b	420e44 <ferror@plt+0x1e5c4>
  421094:	ubfx	x0, x0, #1, #7
  421098:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x196d8>
  42109c:	add	x24, x24, #0x2f0
  4210a0:	mov	w20, #0x18                  	// #24
  4210a4:	sbfiz	x1, x0, #1, #32
  4210a8:	ldrb	w2, [x19, #1155]
  4210ac:	add	x1, x1, w0, sxtw
  4210b0:	umaddl	x20, w0, w20, x24
  4210b4:	add	x0, x24, x1, lsl #3
  4210b8:	ldrb	w0, [x0, #19]
  4210bc:	tbz	w0, #1, 420f88 <ferror@plt+0x1e708>
  4210c0:	cbnz	w2, 420f90 <ferror@plt+0x1e710>
  4210c4:	ldrb	w2, [x19, #18]
  4210c8:	and	w1, w0, #0x4
  4210cc:	strb	w1, [x19, #17]
  4210d0:	strb	w1, [x19, #19]
  4210d4:	cbnz	w2, 420f24 <ferror@plt+0x1e6a4>
  4210d8:	ldrb	w1, [x20, #18]
  4210dc:	cmp	w1, #0x2
  4210e0:	b.ne	4210f8 <ferror@plt+0x1e878>  // b.any
  4210e4:	add	x1, x24, #0x168
  4210e8:	cmp	x20, x1
  4210ec:	b.eq	421218 <ferror@plt+0x1e998>  // b.none
  4210f0:	ldrb	w1, [x19, #1154]
  4210f4:	cbnz	w1, 4211f4 <ferror@plt+0x1e974>
  4210f8:	tbnz	w0, #5, 421228 <ferror@plt+0x1e9a8>
  4210fc:	add	x0, x24, #0x168
  421100:	cmp	x20, x0
  421104:	b.eq	421284 <ferror@plt+0x1ea04>  // b.none
  421108:	ldrb	w0, [x19, #1138]
  42110c:	cbnz	w0, 420f2c <ferror@plt+0x1e6ac>
  421110:	b	4211d8 <ferror@plt+0x1e958>
  421114:	mov	x0, x19
  421118:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  42111c:	mov	w1, #0x2                   	// #2
  421120:	add	x2, x2, #0xf80
  421124:	bl	422e10 <ferror@plt+0x20590>
  421128:	strh	wzr, [x19, #24]
  42112c:	b	420dfc <ferror@plt+0x1e57c>
  421130:	ldr	x0, [x19, #136]
  421134:	ldr	x0, [x0, #8]
  421138:	cbz	x0, 421154 <ferror@plt+0x1e8d4>
  42113c:	nop
  421140:	mov	x0, x19
  421144:	bl	436640 <ferror@plt+0x33dc0>
  421148:	ldr	x0, [x19, #136]
  42114c:	ldr	x0, [x0, #8]
  421150:	cbnz	x0, 421140 <ferror@plt+0x1e8c0>
  421154:	ldr	x0, [x19, #448]
  421158:	ldurb	w0, [x0, #-20]
  42115c:	cmp	w0, #0x16
  421160:	b.eq	42117c <ferror@plt+0x1e8fc>  // b.none
  421164:	nop
  421168:	mov	x0, x19
  42116c:	bl	4307f0 <ferror@plt+0x2df70>
  421170:	ldrb	w0, [x0, #4]
  421174:	cmp	w0, #0x16
  421178:	b.ne	421168 <ferror@plt+0x1e8e8>  // b.any
  42117c:	ldr	w0, [x19, #500]
  421180:	cbnz	w0, 420fd8 <ferror@plt+0x1e758>
  421184:	ldr	x1, [x19, #472]
  421188:	add	x0, x19, #0x1c8
  42118c:	mov	w20, #0x1                   	// #1
  421190:	str	x1, [x19, #448]
  421194:	str	x0, [x19, #488]
  421198:	b	420e94 <ferror@plt+0x1e614>
  42119c:	mov	x3, x21
  4211a0:	mov	x0, x19
  4211a4:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  4211a8:	mov	w1, #0x3                   	// #3
  4211ac:	add	x2, x2, #0x108
  4211b0:	bl	422e10 <ferror@plt+0x20590>
  4211b4:	b	420e44 <ferror@plt+0x1e5c4>
  4211b8:	tbz	w0, #3, 420fa0 <ferror@plt+0x1e720>
  4211bc:	and	w0, w0, #0x4
  4211c0:	strb	w0, [x19, #17]
  4211c4:	strb	w0, [x19, #19]
  4211c8:	ldrb	w0, [x19, #18]
  4211cc:	cbz	w0, 4211d8 <ferror@plt+0x1e958>
  4211d0:	ldrb	w0, [x20, #19]
  4211d4:	tbz	w0, #0, 420e44 <ferror@plt+0x1e5c4>
  4211d8:	ldrb	w0, [x19, #1160]
  4211dc:	str	x20, [x19, #144]
  4211e0:	cbnz	w0, 421298 <ferror@plt+0x1ea18>
  4211e4:	ldr	x1, [x20]
  4211e8:	mov	x0, x19
  4211ec:	blr	x1
  4211f0:	b	420e58 <ferror@plt+0x1e5d8>
  4211f4:	ldr	x3, [x20, #8]
  4211f8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  4211fc:	mov	x0, x19
  421200:	add	x2, x2, #0xff0
  421204:	mov	w1, #0x2                   	// #2
  421208:	bl	422e10 <ferror@plt+0x20590>
  42120c:	ldrb	w0, [x19, #1138]
  421210:	cbz	w0, 4211c8 <ferror@plt+0x1e948>
  421214:	b	420f2c <ferror@plt+0x1e6ac>
  421218:	ldrb	w1, [x19, #1122]
  42121c:	cbz	w1, 4210f0 <ferror@plt+0x1e870>
  421220:	tbz	w0, #5, 42128c <ferror@plt+0x1ea0c>
  421224:	nop
  421228:	ldrb	w0, [x19, #1132]
  42122c:	cbz	w0, 421108 <ferror@plt+0x1e888>
  421230:	ldr	x3, [x20, #8]
  421234:	mov	x0, x19
  421238:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42123c:	mov	w1, #0x1                   	// #1
  421240:	add	x2, x2, #0x8
  421244:	bl	422f30 <ferror@plt+0x206b0>
  421248:	b	42120c <ferror@plt+0x1e98c>
  42124c:	cbnz	w0, 4211c8 <ferror@plt+0x1e948>
  421250:	ldr	x3, [x20, #8]
  421254:	mov	x0, x19
  421258:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42125c:	mov	w1, #0x6                   	// #6
  421260:	add	x2, x2, #0x60
  421264:	bl	422f30 <ferror@plt+0x206b0>
  421268:	b	4211c8 <ferror@plt+0x1e948>
  42126c:	mov	x0, x19
  421270:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  421274:	mov	w1, #0x6                   	// #6
  421278:	add	x2, x2, #0x30
  42127c:	bl	422f30 <ferror@plt+0x206b0>
  421280:	b	4211d8 <ferror@plt+0x1e958>
  421284:	ldrb	w0, [x19, #1122]
  421288:	cbz	w0, 421228 <ferror@plt+0x1e9a8>
  42128c:	ldrb	w0, [x19, #1138]
  421290:	cbnz	w0, 420f38 <ferror@plt+0x1e6b8>
  421294:	b	4211d8 <ferror@plt+0x1e958>
  421298:	mov	x0, x19
  42129c:	bl	41e828 <ferror@plt+0x1bfa8>
  4212a0:	ldr	x20, [x19, #144]
  4212a4:	b	4211e4 <ferror@plt+0x1e964>
  4212a8:	adrp	x1, 41d000 <ferror@plt+0x1a780>
  4212ac:	mov	x2, #0x0                   	// #0
  4212b0:	add	x1, x1, #0xe18
  4212b4:	b	42a848 <ferror@plt+0x27fc8>
  4212b8:	stp	x29, x30, [sp, #-32]!
  4212bc:	mov	w5, w3
  4212c0:	mov	x3, x2
  4212c4:	mov	x29, sp
  4212c8:	stp	x19, x20, [sp, #16]
  4212cc:	mov	x19, x0
  4212d0:	mov	w0, w4
  4212d4:	mov	w2, w0
  4212d8:	mov	w4, w5
  4212dc:	ldr	x0, [x19, #40]
  4212e0:	bl	431270 <ferror@plt+0x2e9f0>
  4212e4:	mov	x20, x0
  4212e8:	cbz	x0, 4212fc <ferror@plt+0x1ea7c>
  4212ec:	ldr	w1, [x0, #16]
  4212f0:	mov	w2, #0x7f                  	// #127
  4212f4:	ldr	x0, [x19, #40]
  4212f8:	bl	431640 <ferror@plt+0x2edc0>
  4212fc:	ldr	x2, [x19, #912]
  421300:	cbz	x2, 42131c <ferror@plt+0x1ea9c>
  421304:	mov	x1, x20
  421308:	mov	x0, x19
  42130c:	ldp	x19, x20, [sp, #16]
  421310:	mov	x16, x2
  421314:	ldp	x29, x30, [sp], #32
  421318:	br	x16
  42131c:	ldp	x19, x20, [sp, #16]
  421320:	ldp	x29, x30, [sp], #32
  421324:	ret
  421328:	cbz	x3, 421360 <ferror@plt+0x1eae0>
  42132c:	stp	x29, x30, [sp, #-32]!
  421330:	mov	x29, sp
  421334:	stp	x19, x20, [sp, #16]
  421338:	mov	x19, x3
  42133c:	and	w20, w4, #0xff
  421340:	mov	w3, #0x0                   	// #0
  421344:	bl	41efc0 <ferror@plt+0x1c740>
  421348:	cbz	x0, 421354 <ferror@plt+0x1ead4>
  42134c:	strb	w20, [x0, #19]
  421350:	str	x19, [x0, #24]
  421354:	ldp	x19, x20, [sp, #16]
  421358:	ldp	x29, x30, [sp], #32
  42135c:	ret
  421360:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  421364:	mov	w1, #0x4                   	// #4
  421368:	add	x2, x2, #0x130
  42136c:	b	422e10 <ferror@plt+0x20590>
  421370:	stp	x29, x30, [sp, #-32]!
  421374:	mov	x29, sp
  421378:	stp	x19, x20, [sp, #16]
  42137c:	mov	w19, w3
  421380:	and	w20, w4, #0xff
  421384:	mov	w3, w5
  421388:	bl	41efc0 <ferror@plt+0x1c740>
  42138c:	cbz	x0, 4213a0 <ferror@plt+0x1eb20>
  421390:	mov	w1, #0x1                   	// #1
  421394:	strb	w1, [x0, #18]
  421398:	strb	w20, [x0, #19]
  42139c:	str	w19, [x0, #24]
  4213a0:	ldp	x19, x20, [sp, #16]
  4213a4:	ldp	x29, x30, [sp], #32
  4213a8:	ret
  4213ac:	nop
  4213b0:	stp	x29, x30, [sp, #-48]!
  4213b4:	mov	x1, #0x0                   	// #0
  4213b8:	mov	w3, #0x0                   	// #0
  4213bc:	mov	x29, sp
  4213c0:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  4213c4:	add	x2, x2, #0x158
  4213c8:	stp	x19, x20, [sp, #16]
  4213cc:	mov	x19, x0
  4213d0:	mov	w20, #0x1                   	// #1
  4213d4:	str	x21, [sp, #32]
  4213d8:	bl	41efc0 <ferror@plt+0x1c740>
  4213dc:	mov	x1, x0
  4213e0:	adrp	x3, 41f000 <ferror@plt+0x1c780>
  4213e4:	add	x3, x3, #0x4b8
  4213e8:	mov	x0, x19
  4213ec:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  4213f0:	add	x2, x2, #0x160
  4213f4:	strb	w20, [x1, #17]
  4213f8:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x196d8>
  4213fc:	str	x3, [x1, #24]
  421400:	mov	x1, #0x0                   	// #0
  421404:	mov	w3, #0x0                   	// #0
  421408:	add	x21, x21, #0x188
  42140c:	bl	41efc0 <ferror@plt+0x1c740>
  421410:	mov	x1, x0
  421414:	adrp	x4, 420000 <ferror@plt+0x1d780>
  421418:	add	x4, x4, #0xab8
  42141c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  421420:	add	x2, x2, #0x170
  421424:	strb	w20, [x1, #17]
  421428:	mov	x0, x19
  42142c:	str	x4, [x1, #24]
  421430:	mov	w3, #0x0                   	// #0
  421434:	mov	x1, #0x0                   	// #0
  421438:	bl	41efc0 <ferror@plt+0x1c740>
  42143c:	mov	x2, x0
  421440:	adrp	x3, 421000 <ferror@plt+0x1e780>
  421444:	add	x3, x3, #0xaa0
  421448:	mov	x1, x21
  42144c:	mov	x0, x19
  421450:	strb	w20, [x2, #17]
  421454:	str	x3, [x2, #24]
  421458:	mov	w3, #0x0                   	// #0
  42145c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  421460:	add	x2, x2, #0x180
  421464:	bl	41efc0 <ferror@plt+0x1c740>
  421468:	mov	x3, x0
  42146c:	adrp	x4, 41e000 <ferror@plt+0x1b780>
  421470:	add	x4, x4, #0x98
  421474:	mov	x1, x21
  421478:	mov	x0, x19
  42147c:	strb	w20, [x3, #17]
  421480:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  421484:	str	x4, [x3, #24]
  421488:	mov	w3, #0x0                   	// #0
  42148c:	add	x2, x2, #0x190
  421490:	bl	41efc0 <ferror@plt+0x1c740>
  421494:	mov	x3, x0
  421498:	adrp	x4, 41f000 <ferror@plt+0x1c780>
  42149c:	add	x4, x4, #0x610
  4214a0:	mov	x1, x21
  4214a4:	mov	x0, x19
  4214a8:	strb	w20, [x3, #17]
  4214ac:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  4214b0:	str	x4, [x3, #24]
  4214b4:	mov	w3, #0x0                   	// #0
  4214b8:	add	x2, x2, #0x1a0
  4214bc:	bl	41efc0 <ferror@plt+0x1c740>
  4214c0:	mov	x3, x0
  4214c4:	adrp	x4, 41e000 <ferror@plt+0x1b780>
  4214c8:	add	x4, x4, #0xeb0
  4214cc:	mov	x1, x21
  4214d0:	mov	x0, x19
  4214d4:	strb	w20, [x3, #17]
  4214d8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4214dc:	str	x4, [x3, #24]
  4214e0:	mov	w3, #0x0                   	// #0
  4214e4:	add	x2, x2, #0x430
  4214e8:	bl	41efc0 <ferror@plt+0x1c740>
  4214ec:	mov	x3, x0
  4214f0:	adrp	x4, 41e000 <ferror@plt+0x1b780>
  4214f4:	add	x4, x4, #0x3f0
  4214f8:	mov	x1, x21
  4214fc:	mov	x0, x19
  421500:	strb	w20, [x3, #17]
  421504:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  421508:	str	x4, [x3, #24]
  42150c:	add	x2, x2, #0x620
  421510:	mov	w3, #0x0                   	// #0
  421514:	bl	41efc0 <ferror@plt+0x1c740>
  421518:	strb	w20, [x0, #17]
  42151c:	adrp	x1, 41f000 <ferror@plt+0x1c780>
  421520:	add	x1, x1, #0x1c0
  421524:	ldp	x19, x20, [sp, #16]
  421528:	ldr	x21, [sp, #32]
  42152c:	str	x1, [x0, #24]
  421530:	ldp	x29, x30, [sp], #48
  421534:	ret
  421538:	stp	x29, x30, [sp, #-48]!
  42153c:	mov	x1, #0x0                   	// #0
  421540:	mov	x29, sp
  421544:	ldr	x2, [x0, #896]
  421548:	stp	x19, x20, [sp, #16]
  42154c:	mov	x19, x0
  421550:	str	x21, [sp, #32]
  421554:	cbz	x2, 421570 <ferror@plt+0x1ecf0>
  421558:	ldrb	w0, [x2, #16]
  42155c:	cbnz	w0, 42160c <ferror@plt+0x1ed8c>
  421560:	ldr	x2, [x2]
  421564:	add	w1, w1, #0x1
  421568:	cbnz	x2, 421558 <ferror@plt+0x1ecd8>
  42156c:	sbfiz	x1, x1, #3, #32
  421570:	mov	x0, x1
  421574:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  421578:	ldr	x19, [x19, #896]
  42157c:	mov	x21, x0
  421580:	mov	x1, x0
  421584:	cbz	x19, 4215f8 <ferror@plt+0x1ed78>
  421588:	ldrb	w0, [x19, #16]
  42158c:	mov	x20, x1
  421590:	cbnz	w0, 4215c8 <ferror@plt+0x1ed48>
  421594:	ldr	x1, [x19, #8]
  421598:	ldr	x0, [x1]
  42159c:	ldr	w1, [x1, #8]
  4215a0:	add	w2, w1, #0x1
  4215a4:	mov	w1, w1
  4215a8:	bl	45cae8 <_obstack_memory_used@@Base+0x1c0>
  4215ac:	ldr	x19, [x19]
  4215b0:	str	x0, [x20], #8
  4215b4:	cbz	x19, 4215f8 <ferror@plt+0x1ed78>
  4215b8:	ldrb	w0, [x19, #16]
  4215bc:	mov	x1, x20
  4215c0:	mov	x20, x1
  4215c4:	cbz	w0, 421594 <ferror@plt+0x1ed14>
  4215c8:	ldr	x0, [x19, #24]
  4215cc:	bl	41e9c8 <ferror@plt+0x1c148>
  4215d0:	mov	x20, x0
  4215d4:	ldr	x1, [x19, #8]
  4215d8:	ldr	x0, [x1]
  4215dc:	ldr	w1, [x1, #8]
  4215e0:	add	w2, w1, #0x1
  4215e4:	mov	w1, w1
  4215e8:	bl	45cae8 <_obstack_memory_used@@Base+0x1c0>
  4215ec:	ldr	x19, [x19]
  4215f0:	str	x0, [x20], #8
  4215f4:	cbnz	x19, 4215b8 <ferror@plt+0x1ed38>
  4215f8:	mov	x0, x21
  4215fc:	ldp	x19, x20, [sp, #16]
  421600:	ldr	x21, [sp, #32]
  421604:	ldp	x29, x30, [sp], #48
  421608:	ret
  42160c:	ldr	x0, [x2, #24]
  421610:	bl	41de50 <ferror@plt+0x1b5d0>
  421614:	add	w1, w0, w1
  421618:	ldr	x2, [x2]
  42161c:	add	w1, w1, #0x1
  421620:	cbnz	x2, 421558 <ferror@plt+0x1ecd8>
  421624:	b	42156c <ferror@plt+0x1ecec>
  421628:	stp	x29, x30, [sp, #-64]!
  42162c:	mov	x29, sp
  421630:	stp	x19, x20, [sp, #16]
  421634:	ldr	x19, [x0, #896]
  421638:	stp	x21, x22, [sp, #32]
  42163c:	mov	x22, x1
  421640:	cbz	x19, 42168c <ferror@plt+0x1ee0c>
  421644:	mov	x21, x0
  421648:	mov	x20, x1
  42164c:	str	x23, [sp, #48]
  421650:	ldrb	w0, [x19, #16]
  421654:	cbnz	w0, 4216a0 <ferror@plt+0x1ee20>
  421658:	ldr	x23, [x20]
  42165c:	mov	x0, x23
  421660:	bl	402270 <strlen@plt>
  421664:	mov	w2, w0
  421668:	mov	x1, x23
  42166c:	mov	x0, x21
  421670:	bl	42a800 <ferror@plt+0x27f80>
  421674:	str	x0, [x19, #8]
  421678:	ldr	x0, [x20], #8
  42167c:	bl	402640 <free@plt>
  421680:	ldr	x19, [x19]
  421684:	cbnz	x19, 421650 <ferror@plt+0x1edd0>
  421688:	ldr	x23, [sp, #48]
  42168c:	mov	x0, x22
  421690:	ldp	x19, x20, [sp, #16]
  421694:	ldp	x21, x22, [sp, #32]
  421698:	ldp	x29, x30, [sp], #64
  42169c:	b	402640 <free@plt>
  4216a0:	ldr	x1, [x19, #24]
  4216a4:	mov	x2, x20
  4216a8:	mov	x0, x21
  4216ac:	bl	41e940 <ferror@plt+0x1c0c0>
  4216b0:	mov	x20, x0
  4216b4:	ldr	x23, [x0]
  4216b8:	b	42165c <ferror@plt+0x1eddc>
  4216bc:	nop
  4216c0:	stp	x29, x30, [sp, #-80]!
  4216c4:	mov	x29, sp
  4216c8:	stp	x21, x22, [sp, #32]
  4216cc:	mov	x22, x1
  4216d0:	add	x2, sp, #0x48
  4216d4:	mov	w1, #0x4                   	// #4
  4216d8:	stp	x19, x20, [sp, #16]
  4216dc:	mov	x19, x0
  4216e0:	bl	41e168 <ferror@plt+0x1b8e8>
  4216e4:	str	wzr, [x22]
  4216e8:	mov	x20, x0
  4216ec:	cbz	x0, 4217a0 <ferror@plt+0x1ef20>
  4216f0:	ldr	x19, [x0, #24]
  4216f4:	cbz	x19, 421788 <ferror@plt+0x1ef08>
  4216f8:	stp	x23, x24, [sp, #48]
  4216fc:	mov	w0, #0x1                   	// #1
  421700:	ldr	x23, [sp, #72]
  421704:	cbz	x23, 421780 <ferror@plt+0x1ef00>
  421708:	add	x24, x20, #0x18
  42170c:	b	42171c <ferror@plt+0x1ee9c>
  421710:	mov	x24, x19
  421714:	ldr	x19, [x19]
  421718:	cbz	x19, 421778 <ferror@plt+0x1eef8>
  42171c:	ldr	w0, [x19, #12]
  421720:	ldr	w1, [x23, #12]
  421724:	cmp	w0, w1
  421728:	b.ne	421710 <ferror@plt+0x1ee90>  // b.any
  42172c:	cbz	w0, 421778 <ferror@plt+0x1eef8>
  421730:	mov	w21, #0x0                   	// #0
  421734:	b	421748 <ferror@plt+0x1eec8>
  421738:	ldr	w0, [x19, #12]
  42173c:	add	w21, w21, #0x1
  421740:	cmp	w0, w21
  421744:	b.ls	42176c <ferror@plt+0x1eeec>  // b.plast
  421748:	mov	w2, w21
  42174c:	add	x2, x2, #0x1
  421750:	add	x2, x2, x2, lsl #1
  421754:	lsl	x2, x2, #3
  421758:	add	x1, x23, x2
  42175c:	add	x0, x19, x2
  421760:	bl	42c9d8 <ferror@plt+0x2a158>
  421764:	cbnz	w0, 421738 <ferror@plt+0x1eeb8>
  421768:	ldr	w0, [x19, #12]
  42176c:	cmp	w21, w0
  421770:	ldr	x19, [x24]
  421774:	b.ne	421710 <ferror@plt+0x1ee90>  // b.any
  421778:	cmp	x19, #0x0
  42177c:	cset	w0, ne  // ne = any
  421780:	ldp	x23, x24, [sp, #48]
  421784:	str	w0, [x22]
  421788:	cmp	x20, #0x0
  42178c:	cset	w0, eq  // eq = none
  421790:	ldp	x19, x20, [sp, #16]
  421794:	ldp	x21, x22, [sp, #32]
  421798:	ldp	x29, x30, [sp], #80
  42179c:	ret
  4217a0:	ldr	x0, [x19, #448]
  4217a4:	ldurb	w0, [x0, #-20]
  4217a8:	cmp	w0, #0x16
  4217ac:	b.ne	421788 <ferror@plt+0x1ef08>  // b.any
  4217b0:	mov	x0, x19
  4217b4:	mov	w1, #0x1                   	// #1
  4217b8:	bl	4367f8 <ferror@plt+0x33f78>
  4217bc:	b	421788 <ferror@plt+0x1ef08>
  4217c0:	add	x0, x0, #0x458
  4217c4:	ret
  4217c8:	add	x0, x0, #0x388
  4217cc:	ret
  4217d0:	stp	x29, x30, [sp, #-16]!
  4217d4:	mov	x2, #0xb8                  	// #184
  4217d8:	add	x0, x0, #0x388
  4217dc:	mov	x29, sp
  4217e0:	bl	402220 <memcpy@plt>
  4217e4:	ldp	x29, x30, [sp], #16
  4217e8:	ret
  4217ec:	nop
  4217f0:	stp	x29, x30, [sp, #-32]!
  4217f4:	mov	x29, sp
  4217f8:	str	x19, [sp, #16]
  4217fc:	mov	x19, x0
  421800:	ldr	x0, [x0, #712]
  421804:	cbz	x0, 421814 <ferror@plt+0x1ef94>
  421808:	ldr	x19, [sp, #16]
  42180c:	ldp	x29, x30, [sp], #32
  421810:	ret
  421814:	bl	43a6e0 <ferror@plt+0x37e60>
  421818:	str	x0, [x19, #712]
  42181c:	ldr	x19, [sp, #16]
  421820:	ldp	x29, x30, [sp], #32
  421824:	ret
  421828:	stp	x29, x30, [sp, #-64]!
  42182c:	mov	x29, sp
  421830:	stp	x19, x20, [sp, #16]
  421834:	add	x20, x0, #0x328
  421838:	mov	w19, w3
  42183c:	ldr	x5, [x20, #32]
  421840:	str	d8, [sp, #48]
  421844:	fmov	d8, x1
  421848:	stp	x21, x22, [sp, #32]
  42184c:	mov	x21, x0
  421850:	ldr	x1, [x20, #24]
  421854:	mov	x22, x2
  421858:	sub	x0, x5, x1
  42185c:	cmp	x0, #0xc7
  421860:	b.ls	421928 <ferror@plt+0x1f0a8>  // b.plast
  421864:	ldr	x0, [x20, #16]
  421868:	add	x1, x1, #0xc8
  42186c:	cmp	x1, x0
  421870:	b.eq	421948 <ferror@plt+0x1f0c8>  // b.none
  421874:	ldr	x3, [x20, #48]
  421878:	ldr	x4, [x20, #8]
  42187c:	add	x1, x1, x3
  421880:	bic	x1, x1, x3
  421884:	str	x1, [x20, #24]
  421888:	sub	x2, x1, x4
  42188c:	sub	x4, x5, x4
  421890:	cmp	x2, x4
  421894:	b.ls	4218a0 <ferror@plt+0x1f020>  // b.plast
  421898:	mov	x1, x5
  42189c:	str	x5, [x20, #24]
  4218a0:	str	x1, [x20, #16]
  4218a4:	and	w19, w19, #0x1
  4218a8:	stp	xzr, xzr, [x0, #96]
  4218ac:	mov	w2, #0xfffffd00            	// #-768
  4218b0:	ubfiz	w19, w19, #9, #7
  4218b4:	ldrh	w1, [x0, #104]
  4218b8:	orr	w19, w19, #0x1
  4218bc:	dup	v0.2d, v8.d[0]
  4218c0:	stp	xzr, xzr, [x0]
  4218c4:	and	w1, w1, w2
  4218c8:	fmov	x2, d8
  4218cc:	stp	xzr, xzr, [x0, #32]
  4218d0:	orr	w19, w19, w1
  4218d4:	stp	xzr, xzr, [x0, #48]
  4218d8:	stp	xzr, xzr, [x0, #64]
  4218dc:	add	x2, x2, x22
  4218e0:	stp	xzr, xzr, [x0, #80]
  4218e4:	stp	xzr, xzr, [x0, #112]
  4218e8:	stp	xzr, xzr, [x0, #128]
  4218ec:	stp	xzr, xzr, [x0, #144]
  4218f0:	stp	xzr, xzr, [x0, #160]
  4218f4:	stp	xzr, xzr, [x0, #176]
  4218f8:	str	xzr, [x0, #192]
  4218fc:	str	q0, [x0, #16]
  421900:	ldr	x1, [x21]
  421904:	strh	w19, [x0, #104]
  421908:	ldp	x19, x20, [sp, #16]
  42190c:	ldr	d8, [sp, #48]
  421910:	str	x2, [x0, #32]
  421914:	str	x1, [x0, #72]
  421918:	str	x0, [x21]
  42191c:	ldp	x21, x22, [sp, #32]
  421920:	ldp	x29, x30, [sp], #64
  421924:	ret
  421928:	mov	x0, x20
  42192c:	mov	x1, #0xc8                  	// #200
  421930:	bl	45c6e0 <_obstack_newchunk@@Base>
  421934:	ldp	x1, x5, [x20, #24]
  421938:	ldr	x0, [x20, #16]
  42193c:	add	x1, x1, #0xc8
  421940:	cmp	x1, x0
  421944:	b.ne	421874 <ferror@plt+0x1eff4>  // b.any
  421948:	ldrb	w2, [x20, #80]
  42194c:	orr	w2, w2, #0x2
  421950:	strb	w2, [x20, #80]
  421954:	b	421874 <ferror@plt+0x1eff4>
  421958:	stp	x29, x30, [sp, #-64]!
  42195c:	mov	x29, sp
  421960:	stp	x23, x24, [sp, #48]
  421964:	ldr	x23, [x0]
  421968:	stp	x19, x20, [sp, #16]
  42196c:	mov	x20, x0
  421970:	ldr	x19, [x23, #96]
  421974:	ldr	x24, [x23, #80]
  421978:	cbz	x19, 4219c4 <ferror@plt+0x1f144>
  42197c:	stp	x21, x22, [sp, #32]
  421980:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x196d8>
  421984:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x196d8>
  421988:	add	x22, x22, #0x2f0
  42198c:	add	x21, x21, #0x1b0
  421990:	ldrsw	x5, [x19, #28]
  421994:	mov	x4, x21
  421998:	ldr	w2, [x19, #8]
  42199c:	mov	x0, x20
  4219a0:	mov	w3, #0x0                   	// #0
  4219a4:	mov	w1, #0x3                   	// #3
  4219a8:	add	x5, x5, x5, lsl #1
  4219ac:	add	x5, x22, x5, lsl #3
  4219b0:	ldr	x5, [x5, #8]
  4219b4:	bl	423290 <ferror@plt+0x20a10>
  4219b8:	ldr	x19, [x19]
  4219bc:	cbnz	x19, 421990 <ferror@plt+0x1f110>
  4219c0:	ldp	x21, x22, [sp, #32]
  4219c4:	strb	wzr, [x20, #18]
  4219c8:	ldp	x19, x0, [x23, #40]
  4219cc:	ldr	x1, [x23, #72]
  4219d0:	str	x1, [x20]
  4219d4:	bl	402640 <free@plt>
  4219d8:	ldr	x1, [x20, #816]
  4219dc:	add	x0, x20, #0x328
  4219e0:	add	x2, x20, #0x400
  4219e4:	cmp	x1, x23
  4219e8:	b.cs	421a68 <ferror@plt+0x1f1e8>  // b.hs, b.nlast
  4219ec:	ldr	x1, [x0, #32]
  4219f0:	cmp	x1, x23
  4219f4:	b.ls	421a68 <ferror@plt+0x1f1e8>  // b.plast
  4219f8:	dup	v0.2d, x23
  4219fc:	stur	q0, [x2, #-200]
  421a00:	cbz	x24, 421a74 <ferror@plt+0x1f1f4>
  421a04:	mov	x2, x19
  421a08:	mov	x1, x24
  421a0c:	mov	x0, x20
  421a10:	bl	42a0c8 <ferror@plt+0x27848>
  421a14:	ldr	x0, [x20, #40]
  421a18:	mov	w4, #0x0                   	// #0
  421a1c:	mov	x3, #0x0                   	// #0
  421a20:	mov	w2, #0x0                   	// #0
  421a24:	mov	w1, #0x1                   	// #1
  421a28:	bl	431270 <ferror@plt+0x2e9f0>
  421a2c:	mov	x19, x0
  421a30:	cbz	x0, 421a44 <ferror@plt+0x1f1c4>
  421a34:	ldr	w1, [x0, #16]
  421a38:	mov	w2, #0x7f                  	// #127
  421a3c:	ldr	x0, [x20, #40]
  421a40:	bl	431640 <ferror@plt+0x2edc0>
  421a44:	ldr	x2, [x20, #912]
  421a48:	cbz	x2, 421a8c <ferror@plt+0x1f20c>
  421a4c:	mov	x1, x19
  421a50:	mov	x0, x20
  421a54:	ldp	x19, x20, [sp, #16]
  421a58:	mov	x16, x2
  421a5c:	ldp	x23, x24, [sp, #48]
  421a60:	ldp	x29, x30, [sp], #64
  421a64:	br	x16
  421a68:	mov	x1, x23
  421a6c:	bl	45c878 <_obstack_free@@Base>
  421a70:	cbnz	x24, 421a04 <ferror@plt+0x1f184>
  421a74:	cbz	x19, 421a8c <ferror@plt+0x1f20c>
  421a78:	mov	x0, x19
  421a7c:	ldp	x19, x20, [sp, #16]
  421a80:	ldp	x23, x24, [sp, #48]
  421a84:	ldp	x29, x30, [sp], #64
  421a88:	b	402640 <free@plt>
  421a8c:	ldp	x19, x20, [sp, #16]
  421a90:	ldp	x23, x24, [sp, #48]
  421a94:	ldp	x29, x30, [sp], #64
  421a98:	ret
  421a9c:	nop
  421aa0:	stp	x29, x30, [sp, #-80]!
  421aa4:	mov	x29, sp
  421aa8:	stp	x19, x20, [sp, #16]
  421aac:	mov	x20, x0
  421ab0:	stp	x21, x22, [sp, #32]
  421ab4:	stp	x23, x24, [sp, #48]
  421ab8:	ldr	x19, [x0, #1400]
  421abc:	str	x25, [sp, #64]
  421ac0:	bl	41ea60 <ferror@plt+0x1c1e0>
  421ac4:	cbz	x0, 421e40 <ferror@plt+0x1f5c0>
  421ac8:	ldr	x1, [x0, #16]
  421acc:	ldr	w0, [x0, #8]
  421ad0:	ldrb	w3, [x1]
  421ad4:	add	w2, w0, #0x2
  421ad8:	add	x2, x2, #0xf
  421adc:	mov	w4, w0
  421ae0:	cmp	w3, #0x4c
  421ae4:	and	x2, x2, #0x1fffffff0
  421ae8:	cset	x0, eq  // eq = none
  421aec:	sub	x4, x4, #0x1
  421af0:	add	x0, x0, #0x1
  421af4:	sub	sp, sp, x2
  421af8:	add	x4, x1, x4
  421afc:	add	x0, x1, x0
  421b00:	mov	x23, sp
  421b04:	cmp	x0, x4
  421b08:	mov	x3, x23
  421b0c:	b.cs	421b30 <ferror@plt+0x1f2b0>  // b.hs, b.nlast
  421b10:	mov	x1, x0
  421b14:	ldrb	w2, [x1], #1
  421b18:	cmp	w2, #0x5c
  421b1c:	b.eq	421c70 <ferror@plt+0x1f3f0>  // b.none
  421b20:	mov	x0, x1
  421b24:	strb	w2, [x3], #1
  421b28:	cmp	x4, x0
  421b2c:	b.hi	421b10 <ferror@plt+0x1f290>  // b.pmore
  421b30:	ldr	x0, [x20, #448]
  421b34:	strb	wzr, [x3]
  421b38:	ldurb	w0, [x0, #-20]
  421b3c:	cmp	w0, #0x16
  421b40:	b.eq	421cac <ferror@plt+0x1f42c>  // b.none
  421b44:	mov	x0, x20
  421b48:	bl	4307f0 <ferror@plt+0x2df70>
  421b4c:	ldrb	w0, [x0, #4]
  421b50:	cmp	w0, #0x16
  421b54:	b.ne	421c8c <ferror@plt+0x1f40c>  // b.any
  421b58:	ldr	x0, [x20, #136]
  421b5c:	ldr	x0, [x0, #8]
  421b60:	cbz	x0, 421b7c <ferror@plt+0x1f2fc>
  421b64:	nop
  421b68:	mov	x0, x20
  421b6c:	bl	436640 <ferror@plt+0x33dc0>
  421b70:	ldr	x0, [x20, #136]
  421b74:	ldr	x0, [x0, #8]
  421b78:	cbnz	x0, 421b68 <ferror@plt+0x1f2e8>
  421b7c:	ldr	x0, [x20, #448]
  421b80:	ldurb	w0, [x0, #-20]
  421b84:	cmp	w0, #0x16
  421b88:	b.eq	421ba4 <ferror@plt+0x1f324>  // b.none
  421b8c:	nop
  421b90:	mov	x0, x20
  421b94:	bl	4307f0 <ferror@plt+0x2df70>
  421b98:	ldrb	w0, [x0, #4]
  421b9c:	cmp	w0, #0x16
  421ba0:	b.ne	421b90 <ferror@plt+0x1f310>  // b.any
  421ba4:	cbz	x19, 421c54 <ferror@plt+0x1f3d4>
  421ba8:	mov	x24, #0x0                   	// #0
  421bac:	b	421bb8 <ferror@plt+0x1f338>
  421bb0:	mov	x24, x21
  421bb4:	cbz	x19, 421c54 <ferror@plt+0x1f3d4>
  421bb8:	ldr	x22, [x19, #8]
  421bbc:	mov	x1, x23
  421bc0:	mov	x21, x19
  421bc4:	mov	x0, x22
  421bc8:	bl	4025d0 <strcmp@plt>
  421bcc:	ldr	x19, [x19]
  421bd0:	cbnz	w0, 421bb0 <ferror@plt+0x1f330>
  421bd4:	cbz	x24, 421e38 <ferror@plt+0x1f5b8>
  421bd8:	str	x19, [x24]
  421bdc:	mov	x1, x22
  421be0:	mov	x0, x20
  421be4:	bl	42bb30 <ferror@plt+0x292b0>
  421be8:	mov	x19, x0
  421bec:	cbz	x0, 421ed0 <ferror@plt+0x1f650>
  421bf0:	ldr	x1, [x20, #1024]
  421bf4:	cbz	x1, 421c00 <ferror@plt+0x1f380>
  421bf8:	mov	x0, x20
  421bfc:	blr	x1
  421c00:	ldrb	w0, [x19, #18]
  421c04:	tbz	w0, #1, 421c30 <ferror@plt+0x1f3b0>
  421c08:	ldr	x3, [x20, #944]
  421c0c:	cbz	x3, 421c20 <ferror@plt+0x1f3a0>
  421c10:	ldr	w1, [x20, #48]
  421c14:	mov	x2, x19
  421c18:	mov	x0, x20
  421c1c:	blr	x3
  421c20:	ldrb	w0, [x20, #1151]
  421c24:	cbnz	w0, 421ed8 <ferror@plt+0x1f658>
  421c28:	mov	x0, x19
  421c2c:	bl	436930 <ferror@plt+0x340b0>
  421c30:	ldrb	w0, [x21, #28]
  421c34:	ldr	x19, [x21, #16]
  421c38:	tbz	w0, #2, 421cbc <ferror@plt+0x1f43c>
  421c3c:	mov	x0, x19
  421c40:	bl	402640 <free@plt>
  421c44:	ldr	x0, [x21, #8]
  421c48:	bl	402640 <free@plt>
  421c4c:	mov	x0, x21
  421c50:	bl	402640 <free@plt>
  421c54:	mov	sp, x29
  421c58:	ldp	x19, x20, [sp, #16]
  421c5c:	ldp	x21, x22, [sp, #32]
  421c60:	ldp	x23, x24, [sp, #48]
  421c64:	ldr	x25, [sp, #64]
  421c68:	ldp	x29, x30, [sp], #80
  421c6c:	ret
  421c70:	ldrb	w5, [x0, #1]
  421c74:	cmp	w5, #0x22
  421c78:	ccmp	w5, w2, #0x4, ne  // ne = any
  421c7c:	b.ne	421b20 <ferror@plt+0x1f2a0>  // b.any
  421c80:	add	x0, x0, #0x2
  421c84:	mov	w2, w5
  421c88:	b	421b24 <ferror@plt+0x1f2a4>
  421c8c:	ldr	x3, [x20, #144]
  421c90:	mov	x0, x20
  421c94:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  421c98:	mov	w1, #0x0                   	// #0
  421c9c:	add	x2, x2, #0xba0
  421ca0:	ldr	x3, [x3, #8]
  421ca4:	bl	423050 <ferror@plt+0x207d0>
  421ca8:	b	421b58 <ferror@plt+0x1f2d8>
  421cac:	ldr	x0, [x20, #136]
  421cb0:	ldr	x0, [x0, #8]
  421cb4:	cbnz	x0, 421b68 <ferror@plt+0x1f2e8>
  421cb8:	b	421ba4 <ferror@plt+0x1f324>
  421cbc:	mov	x0, x19
  421cc0:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  421cc4:	add	x1, x1, #0x1f0
  421cc8:	bl	402790 <strcspn@plt>
  421ccc:	mov	x23, x0
  421cd0:	mov	x1, x19
  421cd4:	mov	x0, x20
  421cd8:	add	x22, x20, #0x328
  421cdc:	sxtw	x23, w23
  421ce0:	mov	w2, w23
  421ce4:	bl	42a800 <ferror@plt+0x27f80>
  421ce8:	ldr	x2, [x21, #16]
  421cec:	mov	w1, #0xa                   	// #10
  421cf0:	mov	x24, x0
  421cf4:	add	x23, x2, x23
  421cf8:	mov	x0, x23
  421cfc:	bl	402670 <strchr@plt>
  421d00:	ldp	x1, x3, [x22, #24]
  421d04:	sub	x25, x0, x23
  421d08:	sub	x0, x3, x1
  421d0c:	cmp	x0, #0xc7
  421d10:	b.ls	421eec <ferror@plt+0x1f66c>  // b.plast
  421d14:	ldr	x19, [x22, #16]
  421d18:	add	x1, x1, #0xc8
  421d1c:	cmp	x1, x19
  421d20:	b.eq	421f00 <ferror@plt+0x1f680>  // b.none
  421d24:	ldr	x0, [x22, #48]
  421d28:	ldr	x2, [x22, #8]
  421d2c:	add	x1, x1, x0
  421d30:	bic	x1, x1, x0
  421d34:	str	x1, [x22, #24]
  421d38:	sub	x0, x1, x2
  421d3c:	sub	x2, x3, x2
  421d40:	cmp	x0, x2
  421d44:	b.ls	421d50 <ferror@plt+0x1f4d0>  // b.plast
  421d48:	mov	x1, x3
  421d4c:	str	x3, [x22, #24]
  421d50:	str	x1, [x22, #16]
  421d54:	dup	v0.2d, x23
  421d58:	stp	xzr, xzr, [x19, #96]
  421d5c:	mov	w3, #0xfffffd00            	// #-768
  421d60:	mov	w2, #0x201                 	// #513
  421d64:	ldrh	w1, [x19, #104]
  421d68:	add	x25, x23, x25
  421d6c:	stp	xzr, xzr, [x19]
  421d70:	mov	x0, x20
  421d74:	and	w1, w1, w3
  421d78:	stp	xzr, xzr, [x19, #32]
  421d7c:	orr	w1, w1, w2
  421d80:	stp	xzr, xzr, [x19, #48]
  421d84:	stp	xzr, xzr, [x19, #64]
  421d88:	stp	xzr, xzr, [x19, #80]
  421d8c:	stp	xzr, xzr, [x19, #112]
  421d90:	stp	xzr, xzr, [x19, #128]
  421d94:	stp	xzr, xzr, [x19, #144]
  421d98:	stp	xzr, xzr, [x19, #160]
  421d9c:	stp	xzr, xzr, [x19, #176]
  421da0:	str	xzr, [x19, #192]
  421da4:	str	q0, [x19, #16]
  421da8:	ldr	x2, [x20]
  421dac:	str	x25, [x19, #32]
  421db0:	str	x2, [x19, #72]
  421db4:	strh	w1, [x19, #104]
  421db8:	str	x19, [x20]
  421dbc:	bl	42b0f8 <ferror@plt+0x28878>
  421dc0:	mov	w0, #0x1                   	// #1
  421dc4:	strb	w0, [x19, #106]
  421dc8:	mov	x1, x24
  421dcc:	mov	x0, x20
  421dd0:	bl	436b30 <ferror@plt+0x342b0>
  421dd4:	tst	w0, #0xff
  421dd8:	b.eq	421f40 <ferror@plt+0x1f6c0>  // b.none
  421ddc:	mov	x0, x20
  421de0:	bl	421958 <ferror@plt+0x1f0d8>
  421de4:	ldrb	w1, [x21, #28]
  421de8:	ldr	x2, [x24, #24]
  421dec:	ubfx	x0, x1, #1, #1
  421df0:	ubfx	x1, x1, #0, #1
  421df4:	ldr	x19, [x21, #16]
  421df8:	ubfiz	w1, w1, #4, #4
  421dfc:	ldrb	w3, [x2, #19]
  421e00:	ubfiz	w0, w0, #5, #3
  421e04:	orr	w0, w0, w1
  421e08:	and	w1, w3, #0xffffffcf
  421e0c:	ldr	w3, [x21, #24]
  421e10:	orr	w0, w0, w1
  421e14:	str	w3, [x2, #8]
  421e18:	strb	w0, [x2, #19]
  421e1c:	mov	x0, x19
  421e20:	bl	402640 <free@plt>
  421e24:	ldr	x0, [x21, #8]
  421e28:	bl	402640 <free@plt>
  421e2c:	mov	x0, x21
  421e30:	bl	402640 <free@plt>
  421e34:	b	421c54 <ferror@plt+0x1f3d4>
  421e38:	str	x19, [x20, #1400]
  421e3c:	b	421bdc <ferror@plt+0x1f35c>
  421e40:	ldr	x2, [x20, #448]
  421e44:	mov	x0, x20
  421e48:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  421e4c:	mov	w3, #0x0                   	// #0
  421e50:	add	x4, x4, #0x1c8
  421e54:	mov	w1, #0x3                   	// #3
  421e58:	ldur	w2, [x2, #-24]
  421e5c:	bl	423290 <ferror@plt+0x20a10>
  421e60:	ldr	x0, [x20, #448]
  421e64:	ldurb	w0, [x0, #-20]
  421e68:	cmp	w0, #0x16
  421e6c:	b.eq	421f30 <ferror@plt+0x1f6b0>  // b.none
  421e70:	mov	x0, x20
  421e74:	bl	4307f0 <ferror@plt+0x2df70>
  421e78:	ldrb	w0, [x0, #4]
  421e7c:	cmp	w0, #0x16
  421e80:	b.ne	421f10 <ferror@plt+0x1f690>  // b.any
  421e84:	ldr	x0, [x20, #136]
  421e88:	ldr	x0, [x0, #8]
  421e8c:	cbz	x0, 421ea4 <ferror@plt+0x1f624>
  421e90:	mov	x0, x20
  421e94:	bl	436640 <ferror@plt+0x33dc0>
  421e98:	ldr	x0, [x20, #136]
  421e9c:	ldr	x0, [x0, #8]
  421ea0:	cbnz	x0, 421e90 <ferror@plt+0x1f610>
  421ea4:	ldr	x0, [x20, #448]
  421ea8:	ldurb	w0, [x0, #-20]
  421eac:	cmp	w0, #0x16
  421eb0:	b.eq	421c54 <ferror@plt+0x1f3d4>  // b.none
  421eb4:	nop
  421eb8:	mov	x0, x20
  421ebc:	bl	4307f0 <ferror@plt+0x2df70>
  421ec0:	ldrb	w0, [x0, #4]
  421ec4:	cmp	w0, #0x16
  421ec8:	b.ne	421eb8 <ferror@plt+0x1f638>  // b.any
  421ecc:	b	421c54 <ferror@plt+0x1f3d4>
  421ed0:	ldr	x19, [x21, #16]
  421ed4:	b	421c3c <ferror@plt+0x1f3bc>
  421ed8:	mov	x1, x19
  421edc:	mov	x0, x20
  421ee0:	mov	x2, #0x0                   	// #0
  421ee4:	bl	435b88 <ferror@plt+0x33308>
  421ee8:	b	421c28 <ferror@plt+0x1f3a8>
  421eec:	mov	x1, #0xc8                  	// #200
  421ef0:	mov	x0, x22
  421ef4:	bl	45c6e0 <_obstack_newchunk@@Base>
  421ef8:	ldp	x1, x3, [x22, #24]
  421efc:	b	421d14 <ferror@plt+0x1f494>
  421f00:	ldrb	w0, [x22, #80]
  421f04:	orr	w0, w0, #0x2
  421f08:	strb	w0, [x22, #80]
  421f0c:	b	421d24 <ferror@plt+0x1f4a4>
  421f10:	ldr	x3, [x20, #144]
  421f14:	mov	x0, x20
  421f18:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x186d8>
  421f1c:	mov	w1, #0x0                   	// #0
  421f20:	add	x2, x2, #0xba0
  421f24:	ldr	x3, [x3, #8]
  421f28:	bl	423050 <ferror@plt+0x207d0>
  421f2c:	b	421e84 <ferror@plt+0x1f604>
  421f30:	ldr	x0, [x20, #136]
  421f34:	ldr	x0, [x0, #8]
  421f38:	cbnz	x0, 421e90 <ferror@plt+0x1f610>
  421f3c:	b	421c54 <ferror@plt+0x1f3d4>
  421f40:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  421f44:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  421f48:	add	x2, x2, #0x1f8
  421f4c:	add	x0, x0, #0x210
  421f50:	mov	w1, #0x9a8                 	// #2472
  421f54:	bl	4028b0 <ferror@plt+0x30>
  421f58:	stp	x29, x30, [sp, #-96]!
  421f5c:	sub	w5, w1, #0x1
  421f60:	mov	w4, w1
  421f64:	mov	x29, sp
  421f68:	ldr	x1, [x2]
  421f6c:	stp	x19, x20, [sp, #16]
  421f70:	add	x2, x5, #0xf
  421f74:	stp	x21, x22, [sp, #32]
  421f78:	mov	x19, x0
  421f7c:	and	x2, x2, #0x1fffffff0
  421f80:	stp	x23, x24, [sp, #48]
  421f84:	sub	x4, x4, #0x1
  421f88:	add	x4, x1, x4
  421f8c:	stp	x25, x26, [sp, #64]
  421f90:	mov	w21, w3
  421f94:	stp	x27, x28, [sp, #80]
  421f98:	sub	sp, sp, x2
  421f9c:	mov	x26, sp
  421fa0:	ldrb	w5, [x1]
  421fa4:	mov	x20, x26
  421fa8:	cmp	w5, #0x4c
  421fac:	cset	x0, eq  // eq = none
  421fb0:	add	x0, x0, #0x1
  421fb4:	add	x0, x1, x0
  421fb8:	cmp	x0, x4
  421fbc:	b.cs	421fe0 <ferror@plt+0x1f760>  // b.hs, b.nlast
  421fc0:	mov	x1, x0
  421fc4:	ldrb	w2, [x1], #1
  421fc8:	cmp	w2, #0x5c
  421fcc:	b.eq	4221f4 <ferror@plt+0x1f974>  // b.none
  421fd0:	mov	x0, x1
  421fd4:	strb	w2, [x20], #1
  421fd8:	cmp	x4, x0
  421fdc:	b.hi	421fc0 <ferror@plt+0x1f740>  // b.pmore
  421fe0:	add	x25, x19, #0x328
  421fe4:	mov	w2, #0xa                   	// #10
  421fe8:	strb	w2, [x20]
  421fec:	mov	x1, #0x38                  	// #56
  421ff0:	mov	x0, #0x1                   	// #1
  421ff4:	ldr	x24, [x19, #136]
  421ff8:	ldr	x23, [x19, #448]
  421ffc:	ldr	x22, [x19, #488]
  422000:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  422004:	ldr	x4, [x25, #32]
  422008:	str	x0, [x19, #136]
  42200c:	ldr	x0, [x25, #24]
  422010:	sub	x1, x4, x0
  422014:	cmp	x1, #0xc7
  422018:	b.ls	422314 <ferror@plt+0x1fa94>  // b.plast
  42201c:	add	x1, x0, #0xc8
  422020:	ldr	x0, [x25, #16]
  422024:	cmp	x1, x0
  422028:	b.eq	422334 <ferror@plt+0x1fab4>  // b.none
  42202c:	ldr	x2, [x25, #48]
  422030:	ldr	x3, [x25, #8]
  422034:	add	x1, x1, x2
  422038:	bic	x1, x1, x2
  42203c:	str	x1, [x25, #24]
  422040:	sub	x2, x1, x3
  422044:	sub	x3, x4, x3
  422048:	cmp	x2, x3
  42204c:	b.ls	422058 <ferror@plt+0x1f7d8>  // b.plast
  422050:	mov	x1, x4
  422054:	str	x4, [x25, #24]
  422058:	str	x1, [x25, #16]
  42205c:	dup	v0.2d, x26
  422060:	stp	xzr, xzr, [x0, #96]
  422064:	mov	w2, #0x201                 	// #513
  422068:	mov	w3, #0xfffffd00            	// #-768
  42206c:	ldrh	w1, [x0, #104]
  422070:	stp	xzr, xzr, [x0]
  422074:	and	w1, w1, w3
  422078:	stp	xzr, xzr, [x0, #32]
  42207c:	orr	w1, w1, w2
  422080:	stp	xzr, xzr, [x0, #48]
  422084:	stp	xzr, xzr, [x0, #64]
  422088:	stp	xzr, xzr, [x0, #80]
  42208c:	stp	xzr, xzr, [x0, #112]
  422090:	stp	xzr, xzr, [x0, #128]
  422094:	stp	xzr, xzr, [x0, #144]
  422098:	stp	xzr, xzr, [x0, #160]
  42209c:	stp	xzr, xzr, [x0, #176]
  4220a0:	str	xzr, [x0, #192]
  4220a4:	str	q0, [x0, #16]
  4220a8:	ldr	x2, [x19]
  4220ac:	str	x20, [x0, #32]
  4220b0:	str	x2, [x0, #72]
  4220b4:	strh	w1, [x0, #104]
  4220b8:	str	x0, [x19]
  4220bc:	cbz	x2, 4220c8 <ferror@plt+0x1f848>
  4220c0:	ldr	x1, [x2, #80]
  4220c4:	str	x1, [x0, #80]
  4220c8:	ldr	x1, [x19, #40]
  4220cc:	mov	w0, #0x1                   	// #1
  4220d0:	strb	w0, [x19, #16]
  4220d4:	mov	w2, #0x53                  	// #83
  4220d8:	strb	wzr, [x19, #21]
  4220dc:	mov	x0, x19
  4220e0:	strb	w2, [x19, #156]
  4220e4:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x196d8>
  4220e8:	ldr	w1, [x1, #60]
  4220ec:	add	x20, x20, #0x2f0
  4220f0:	str	w1, [x19, #48]
  4220f4:	bl	42b0f8 <ferror@plt+0x28878>
  4220f8:	add	x1, x20, #0x108
  4220fc:	mov	x0, x19
  422100:	ldr	x25, [x19, #144]
  422104:	str	x1, [x19, #144]
  422108:	bl	41e570 <ferror@plt+0x1bcf0>
  42210c:	ldrb	w0, [x19, #1160]
  422110:	cbz	w0, 422210 <ferror@plt+0x1f990>
  422114:	ldrb	w0, [x19, #32]
  422118:	cbnz	w0, 422128 <ferror@plt+0x1f8a8>
  42211c:	ldrb	w0, [x19, #24]
  422120:	sub	w0, w0, #0x1
  422124:	strb	w0, [x19, #24]
  422128:	ldr	x0, [x19, #144]
  42212c:	cmp	x0, x20
  422130:	b.eq	42213c <ferror@plt+0x1f8bc>  // b.none
  422134:	mov	x0, x19
  422138:	bl	43bd88 <ferror@plt+0x39508>
  42213c:	ldrb	w1, [x19, #1123]
  422140:	ldrb	w0, [x19, #156]
  422144:	cmp	w1, #0x0
  422148:	strb	wzr, [x19, #16]
  42214c:	cset	w1, eq  // eq = none
  422150:	sturh	wzr, [x19, #19]
  422154:	strb	w1, [x19, #21]
  422158:	cmp	w0, #0x51
  42215c:	str	x25, [x19, #144]
  422160:	b.eq	422280 <ferror@plt+0x1fa00>  // b.none
  422164:	mov	x0, #0x18                  	// #24
  422168:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42216c:	mov	x26, x0
  422170:	mov	w28, #0x1                   	// #1
  422174:	ldp	x0, x1, [x19, #152]
  422178:	ldr	x3, [x19, #904]
  42217c:	stp	x0, x1, [x26]
  422180:	ldr	x0, [x19, #168]
  422184:	str	x0, [x26, #16]
  422188:	cbz	x3, 42219c <ferror@plt+0x1f91c>
  42218c:	ldr	x1, [x19, #448]
  422190:	mov	x0, x19
  422194:	mov	w2, #0x0                   	// #0
  422198:	blr	x3
  42219c:	ldr	x1, [x19]
  4221a0:	mov	x0, x19
  4221a4:	str	xzr, [x1, #80]
  4221a8:	bl	421958 <ferror@plt+0x1f0d8>
  4221ac:	ldr	x0, [x19, #136]
  4221b0:	bl	402640 <free@plt>
  4221b4:	str	x24, [x19, #136]
  4221b8:	str	x23, [x19, #448]
  4221bc:	mov	w3, w28
  4221c0:	str	x22, [x19, #488]
  4221c4:	mov	x2, x26
  4221c8:	mov	x0, x19
  4221cc:	mov	x1, #0x0                   	// #0
  4221d0:	bl	436500 <ferror@plt+0x33c80>
  4221d4:	mov	sp, x29
  4221d8:	ldp	x19, x20, [sp, #16]
  4221dc:	ldp	x21, x22, [sp, #32]
  4221e0:	ldp	x23, x24, [sp, #48]
  4221e4:	ldp	x25, x26, [sp, #64]
  4221e8:	ldp	x27, x28, [sp, #80]
  4221ec:	ldp	x29, x30, [sp], #96
  4221f0:	ret
  4221f4:	ldrb	w3, [x0, #1]
  4221f8:	add	x0, x0, #0x2
  4221fc:	cmp	w3, #0x22
  422200:	ccmp	w3, w2, #0x4, ne  // ne = any
  422204:	b.ne	421fd0 <ferror@plt+0x1f750>  // b.any
  422208:	mov	w2, w3
  42220c:	b	421fd4 <ferror@plt+0x1f754>
  422210:	ldrb	w0, [x19, #32]
  422214:	cbnz	w0, 42213c <ferror@plt+0x1f8bc>
  422218:	ldr	x0, [x19, #136]
  42221c:	ldr	x0, [x0, #8]
  422220:	cbz	x0, 42223c <ferror@plt+0x1f9bc>
  422224:	nop
  422228:	mov	x0, x19
  42222c:	bl	436640 <ferror@plt+0x33dc0>
  422230:	ldr	x0, [x19, #136]
  422234:	ldr	x0, [x0, #8]
  422238:	cbnz	x0, 422228 <ferror@plt+0x1f9a8>
  42223c:	ldr	x0, [x19, #448]
  422240:	ldurb	w0, [x0, #-20]
  422244:	cmp	w0, #0x16
  422248:	b.eq	422264 <ferror@plt+0x1f9e4>  // b.none
  42224c:	nop
  422250:	mov	x0, x19
  422254:	bl	4307f0 <ferror@plt+0x2df70>
  422258:	ldrb	w0, [x0, #4]
  42225c:	cmp	w0, #0x16
  422260:	b.ne	422250 <ferror@plt+0x1f9d0>  // b.any
  422264:	ldr	w0, [x19, #500]
  422268:	cbnz	w0, 42213c <ferror@plt+0x1f8bc>
  42226c:	ldr	x1, [x19, #472]
  422270:	add	x0, x19, #0x1c8
  422274:	str	x1, [x19, #448]
  422278:	str	x0, [x19, #488]
  42227c:	b	42213c <ferror@plt+0x1f8bc>
  422280:	mov	x0, #0x4b0                 	// #1200
  422284:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  422288:	mov	x26, x0
  42228c:	mov	x27, #0x18                  	// #24
  422290:	mov	w25, w27
  422294:	mov	w28, #0x1                   	// #1
  422298:	ldp	x0, x1, [x19, #152]
  42229c:	mov	w20, #0x32                  	// #50
  4222a0:	ldr	x2, [x19, #168]
  4222a4:	stp	x0, x1, [x26]
  4222a8:	str	x2, [x26, #16]
  4222ac:	nop
  4222b0:	mov	x0, x19
  4222b4:	bl	43a008 <ferror@plt+0x37788>
  4222b8:	add	x1, x26, x27
  4222bc:	add	w28, w28, #0x1
  4222c0:	ldp	x2, x3, [x0]
  4222c4:	stp	x2, x3, [x1]
  4222c8:	ldr	x0, [x0, #16]
  4222cc:	str	x0, [x1, #16]
  4222d0:	ldrh	w0, [x1, #6]
  4222d4:	ldrb	w2, [x1, #4]
  4222d8:	str	w21, [x26, x27]
  4222dc:	orr	w0, w0, #0x400
  4222e0:	strh	w0, [x1, #6]
  4222e4:	cmp	w2, #0x52
  4222e8:	add	x27, x27, #0x18
  4222ec:	b.eq	42219c <ferror@plt+0x1f91c>  // b.none
  4222f0:	cmp	w28, w20
  4222f4:	b.ne	4222b0 <ferror@plt+0x1fa30>  // b.any
  4222f8:	add	w20, w28, w28, lsl #1
  4222fc:	mov	x0, x26
  422300:	asr	w20, w20, #1
  422304:	smull	x1, w20, w25
  422308:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  42230c:	mov	x26, x0
  422310:	b	4222b0 <ferror@plt+0x1fa30>
  422314:	mov	x0, x25
  422318:	mov	x1, #0xc8                  	// #200
  42231c:	bl	45c6e0 <_obstack_newchunk@@Base>
  422320:	ldp	x0, x4, [x25, #24]
  422324:	add	x1, x0, #0xc8
  422328:	ldr	x0, [x25, #16]
  42232c:	cmp	x1, x0
  422330:	b.ne	42202c <ferror@plt+0x1f7ac>  // b.any
  422334:	ldrb	w2, [x25, #80]
  422338:	orr	w2, w2, #0x2
  42233c:	strb	w2, [x25, #80]
  422340:	b	42202c <ferror@plt+0x1f7ac>
  422344:	nop
  422348:	stp	x29, x30, [sp, #-32]!
  42234c:	mov	x29, sp
  422350:	stp	x19, x20, [sp, #16]
  422354:	mov	x19, x0
  422358:	mov	w20, w1
  42235c:	bl	41ea60 <ferror@plt+0x1c1e0>
  422360:	mov	w1, #0x53                  	// #83
  422364:	strb	w1, [x19, #156]
  422368:	cbz	x0, 422394 <ferror@plt+0x1fb14>
  42236c:	mov	x2, x0
  422370:	mov	w3, w20
  422374:	mov	x0, x19
  422378:	add	x2, x2, #0x10
  42237c:	ldur	w1, [x2, #-8]
  422380:	bl	421f58 <ferror@plt+0x1f6d8>
  422384:	mov	w0, #0x1                   	// #1
  422388:	ldp	x19, x20, [sp, #16]
  42238c:	ldp	x29, x30, [sp], #32
  422390:	ret
  422394:	mov	x0, x19
  422398:	mov	w1, #0x3                   	// #3
  42239c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  4223a0:	add	x2, x2, #0x230
  4223a4:	bl	422e10 <ferror@plt+0x20590>
  4223a8:	mov	w0, #0x0                   	// #0
  4223ac:	ldp	x19, x20, [sp, #16]
  4223b0:	ldp	x29, x30, [sp], #32
  4223b4:	ret
  4223b8:	stp	x29, x30, [sp, #-64]!
  4223bc:	mov	x29, sp
  4223c0:	stp	x19, x20, [sp, #16]
  4223c4:	add	x20, x0, #0x328
  4223c8:	mov	x19, x0
  4223cc:	stp	x21, x22, [sp, #32]
  4223d0:	mov	x22, x3
  4223d4:	mov	w21, w1
  4223d8:	ldp	x0, x3, [x20, #24]
  4223dc:	str	d8, [sp, #48]
  4223e0:	fmov	d8, x2
  4223e4:	sub	x1, x3, x0
  4223e8:	cmp	x1, #0xc7
  4223ec:	b.ls	4225b8 <ferror@plt+0x1fd38>  // b.plast
  4223f0:	ldr	x2, [x20, #16]
  4223f4:	add	x0, x0, #0xc8
  4223f8:	cmp	x0, x2
  4223fc:	b.eq	4225d8 <ferror@plt+0x1fd58>  // b.none
  422400:	ldr	x4, [x20, #48]
  422404:	ldr	x1, [x20, #8]
  422408:	add	x0, x0, x4
  42240c:	bic	x0, x0, x4
  422410:	str	x0, [x20, #24]
  422414:	sub	x4, x0, x1
  422418:	sub	x1, x3, x1
  42241c:	cmp	x4, x1
  422420:	b.ls	42242c <ferror@plt+0x1fbac>  // b.plast
  422424:	mov	x0, x3
  422428:	str	x3, [x20, #24]
  42242c:	fmov	x1, d8
  422430:	str	x0, [x20, #16]
  422434:	stp	xzr, xzr, [x2, #96]
  422438:	mov	w5, #0xfffffd00            	// #-768
  42243c:	mov	w0, #0x201                 	// #513
  422440:	stp	xzr, xzr, [x2]
  422444:	mov	w4, #0x1                   	// #1
  422448:	add	x22, x1, x22
  42244c:	ldrh	w1, [x2, #104]
  422450:	mov	w3, #0x53                  	// #83
  422454:	stp	xzr, xzr, [x2, #32]
  422458:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x196d8>
  42245c:	and	w1, w1, w5
  422460:	stp	xzr, xzr, [x2, #48]
  422464:	orr	w1, w1, w0
  422468:	add	x20, x20, #0x2f0
  42246c:	stp	xzr, xzr, [x2, #64]
  422470:	mov	x0, x19
  422474:	stp	xzr, xzr, [x2, #80]
  422478:	stp	xzr, xzr, [x2, #112]
  42247c:	stp	xzr, xzr, [x2, #128]
  422480:	stp	xzr, xzr, [x2, #144]
  422484:	stp	xzr, xzr, [x2, #160]
  422488:	stp	xzr, xzr, [x2, #176]
  42248c:	dup	v8.2d, v8.d[0]
  422490:	str	xzr, [x2, #192]
  422494:	str	x22, [x2, #32]
  422498:	ldr	x5, [x19]
  42249c:	strh	w1, [x2, #104]
  4224a0:	ldr	x1, [x19, #40]
  4224a4:	str	q8, [x2, #16]
  4224a8:	str	x5, [x2, #72]
  4224ac:	strb	w4, [x19, #16]
  4224b0:	strb	wzr, [x19, #21]
  4224b4:	ldr	w1, [x1, #60]
  4224b8:	str	x2, [x19]
  4224bc:	str	w1, [x19, #48]
  4224c0:	strb	w3, [x19, #156]
  4224c4:	bl	42b0f8 <ferror@plt+0x28878>
  4224c8:	mov	w1, #0x18                  	// #24
  4224cc:	ldrb	w0, [x19, #1160]
  4224d0:	smaddl	x21, w21, w1, x20
  4224d4:	str	x21, [x19, #144]
  4224d8:	cbnz	w0, 4225e8 <ferror@plt+0x1fd68>
  4224dc:	ldr	x1, [x21]
  4224e0:	mov	x0, x19
  4224e4:	blr	x1
  4224e8:	ldrb	w0, [x19, #1160]
  4224ec:	cbz	w0, 42254c <ferror@plt+0x1fccc>
  4224f0:	ldrb	w0, [x19, #32]
  4224f4:	cbnz	w0, 422504 <ferror@plt+0x1fc84>
  4224f8:	ldrb	w0, [x19, #24]
  4224fc:	sub	w0, w0, #0x1
  422500:	strb	w0, [x19, #24]
  422504:	ldr	x0, [x19, #144]
  422508:	cmp	x0, x20
  42250c:	b.eq	422518 <ferror@plt+0x1fc98>  // b.none
  422510:	mov	x0, x19
  422514:	bl	43bd88 <ferror@plt+0x39508>
  422518:	ldrb	w1, [x19, #1123]
  42251c:	mov	x0, x19
  422520:	strb	wzr, [x19, #16]
  422524:	cmp	w1, #0x0
  422528:	sturh	wzr, [x19, #19]
  42252c:	cset	w1, eq  // eq = none
  422530:	strb	w1, [x19, #21]
  422534:	ldp	x21, x22, [sp, #32]
  422538:	ldr	d8, [sp, #48]
  42253c:	str	xzr, [x19, #144]
  422540:	ldp	x19, x20, [sp, #16]
  422544:	ldp	x29, x30, [sp], #64
  422548:	b	421958 <ferror@plt+0x1f0d8>
  42254c:	ldrb	w0, [x19, #32]
  422550:	cbnz	w0, 422518 <ferror@plt+0x1fc98>
  422554:	ldr	x0, [x19, #136]
  422558:	ldr	x0, [x0, #8]
  42255c:	cbz	x0, 422574 <ferror@plt+0x1fcf4>
  422560:	mov	x0, x19
  422564:	bl	436640 <ferror@plt+0x33dc0>
  422568:	ldr	x0, [x19, #136]
  42256c:	ldr	x0, [x0, #8]
  422570:	cbnz	x0, 422560 <ferror@plt+0x1fce0>
  422574:	ldr	x0, [x19, #448]
  422578:	ldurb	w0, [x0, #-20]
  42257c:	cmp	w0, #0x16
  422580:	b.eq	42259c <ferror@plt+0x1fd1c>  // b.none
  422584:	nop
  422588:	mov	x0, x19
  42258c:	bl	4307f0 <ferror@plt+0x2df70>
  422590:	ldrb	w0, [x0, #4]
  422594:	cmp	w0, #0x16
  422598:	b.ne	422588 <ferror@plt+0x1fd08>  // b.any
  42259c:	ldr	w0, [x19, #500]
  4225a0:	cbnz	w0, 422518 <ferror@plt+0x1fc98>
  4225a4:	ldr	x1, [x19, #472]
  4225a8:	add	x0, x19, #0x1c8
  4225ac:	str	x1, [x19, #448]
  4225b0:	str	x0, [x19, #488]
  4225b4:	b	422518 <ferror@plt+0x1fc98>
  4225b8:	mov	x0, x20
  4225bc:	mov	x1, #0xc8                  	// #200
  4225c0:	bl	45c6e0 <_obstack_newchunk@@Base>
  4225c4:	ldp	x0, x3, [x20, #24]
  4225c8:	ldr	x2, [x20, #16]
  4225cc:	add	x0, x0, #0xc8
  4225d0:	cmp	x0, x2
  4225d4:	b.ne	422400 <ferror@plt+0x1fb80>  // b.any
  4225d8:	ldrb	w1, [x20, #80]
  4225dc:	orr	w1, w1, #0x2
  4225e0:	strb	w1, [x20, #80]
  4225e4:	b	422400 <ferror@plt+0x1fb80>
  4225e8:	mov	x0, x19
  4225ec:	bl	41e828 <ferror@plt+0x1bfa8>
  4225f0:	ldr	x21, [x19, #144]
  4225f4:	b	4224dc <ferror@plt+0x1fc5c>
  4225f8:	stp	x29, x30, [sp, #-48]!
  4225fc:	mov	x29, sp
  422600:	stp	x19, x20, [sp, #16]
  422604:	mov	x20, x1
  422608:	stp	x21, x22, [sp, #32]
  42260c:	mov	x22, x0
  422610:	mov	x0, x1
  422614:	bl	402270 <strlen@plt>
  422618:	mov	x19, x0
  42261c:	add	x0, x0, #0x12
  422620:	mov	x2, x19
  422624:	and	x0, x0, #0xfffffffffffffff0
  422628:	mov	x1, x20
  42262c:	sub	sp, sp, x0
  422630:	mov	x21, sp
  422634:	mov	x0, x21
  422638:	bl	402220 <memcpy@plt>
  42263c:	mov	x0, x20
  422640:	mov	w1, #0x3d                  	// #61
  422644:	bl	402670 <strchr@plt>
  422648:	cbz	x0, 422688 <ferror@plt+0x1fe08>
  42264c:	sub	x20, x0, x20
  422650:	mov	w0, #0x20                  	// #32
  422654:	strb	w0, [x21, x20]
  422658:	mov	w4, #0xa                   	// #10
  42265c:	mov	x0, x22
  422660:	mov	x3, x19
  422664:	mov	x2, x21
  422668:	mov	w1, #0x0                   	// #0
  42266c:	strb	w4, [x21, x19]
  422670:	bl	4223b8 <ferror@plt+0x1fb38>
  422674:	mov	sp, x29
  422678:	ldp	x19, x20, [sp, #16]
  42267c:	ldp	x21, x22, [sp, #32]
  422680:	ldp	x29, x30, [sp], #48
  422684:	ret
  422688:	add	x0, x19, #0x1
  42268c:	mov	w1, #0x20                  	// #32
  422690:	strb	w1, [x21, x19]
  422694:	mov	w1, #0x31                  	// #49
  422698:	add	x19, x19, #0x2
  42269c:	strb	w1, [x21, x0]
  4226a0:	b	422658 <ferror@plt+0x1fdd8>
  4226a4:	nop
  4226a8:	stp	x29, x30, [sp, #-272]!
  4226ac:	mov	w9, #0xffffffd0            	// #-48
  4226b0:	mov	w8, #0xffffff80            	// #-128
  4226b4:	mov	x29, sp
  4226b8:	add	x10, sp, #0xe0
  4226bc:	add	x11, sp, #0x110
  4226c0:	stp	x11, x11, [sp, #64]
  4226c4:	str	x10, [sp, #80]
  4226c8:	stp	w9, w8, [sp, #88]
  4226cc:	ldp	x10, x11, [sp, #64]
  4226d0:	stp	x19, x20, [sp, #16]
  4226d4:	mov	x20, x0
  4226d8:	ldp	x8, x9, [sp, #80]
  4226dc:	mov	x0, x1
  4226e0:	add	x1, sp, #0x20
  4226e4:	stp	x10, x11, [sp, #32]
  4226e8:	stp	x8, x9, [sp, #48]
  4226ec:	str	q0, [sp, #96]
  4226f0:	str	q1, [sp, #112]
  4226f4:	str	q2, [sp, #128]
  4226f8:	str	q3, [sp, #144]
  4226fc:	str	q4, [sp, #160]
  422700:	str	q5, [sp, #176]
  422704:	str	q6, [sp, #192]
  422708:	str	q7, [sp, #208]
  42270c:	stp	x2, x3, [sp, #224]
  422710:	stp	x4, x5, [sp, #240]
  422714:	stp	x6, x7, [sp, #256]
  422718:	bl	45cc20 <_obstack_memory_used@@Base+0x2f8>
  42271c:	mov	x19, x0
  422720:	mov	x1, x19
  422724:	mov	x0, x20
  422728:	bl	4225f8 <ferror@plt+0x1fd78>
  42272c:	mov	x0, x19
  422730:	bl	402640 <free@plt>
  422734:	ldp	x19, x20, [sp, #16]
  422738:	ldp	x29, x30, [sp], #272
  42273c:	ret
  422740:	stp	x29, x30, [sp, #-64]!
  422744:	mov	x29, sp
  422748:	stp	x19, x20, [sp, #16]
  42274c:	mov	x20, x1
  422750:	stp	x21, x22, [sp, #32]
  422754:	mov	x22, x0
  422758:	mov	x0, x1
  42275c:	str	x23, [sp, #48]
  422760:	mov	w23, w2
  422764:	bl	402270 <strlen@plt>
  422768:	mov	x19, x0
  42276c:	mov	w1, #0x3d                  	// #61
  422770:	mov	x0, x20
  422774:	bl	402670 <strchr@plt>
  422778:	mov	x21, x0
  42277c:	add	x1, x19, #0x11
  422780:	mov	x2, x19
  422784:	and	x0, x1, #0xfffffffffffffff0
  422788:	mov	x1, x20
  42278c:	sub	sp, sp, x0
  422790:	mov	x4, sp
  422794:	mov	x0, x4
  422798:	bl	402220 <memcpy@plt>
  42279c:	mov	x4, x0
  4227a0:	mov	x3, x19
  4227a4:	cbz	x21, 4227c0 <ferror@plt+0x1ff40>
  4227a8:	sub	x20, x21, x20
  4227ac:	mov	w1, #0x28                  	// #40
  4227b0:	add	x3, x19, #0x1
  4227b4:	mov	w0, #0x29                  	// #41
  4227b8:	strb	w1, [x4, x20]
  4227bc:	strb	w0, [x4, x19]
  4227c0:	mov	w5, #0xa                   	// #10
  4227c4:	strb	w5, [x4, x3]
  4227c8:	mov	w1, w23
  4227cc:	mov	x0, x22
  4227d0:	mov	x2, x4
  4227d4:	bl	4223b8 <ferror@plt+0x1fb38>
  4227d8:	mov	sp, x29
  4227dc:	ldp	x19, x20, [sp, #16]
  4227e0:	ldp	x21, x22, [sp, #32]
  4227e4:	ldr	x23, [sp, #48]
  4227e8:	ldp	x29, x30, [sp], #64
  4227ec:	ret
  4227f0:	mov	w2, #0x10                  	// #16
  4227f4:	b	422740 <ferror@plt+0x1fec0>
  4227f8:	mov	w2, #0x11                  	// #17
  4227fc:	b	422740 <ferror@plt+0x1fec0>
  422800:	stp	x29, x30, [sp, #-48]!
  422804:	mov	x29, sp
  422808:	stp	x19, x20, [sp, #16]
  42280c:	mov	x19, x0
  422810:	mov	x0, x1
  422814:	stp	x21, x22, [sp, #32]
  422818:	mov	x22, x1
  42281c:	bl	402270 <strlen@plt>
  422820:	mov	x21, x0
  422824:	add	x0, x0, #0x10
  422828:	and	x0, x0, #0xfffffffffffffff0
  42282c:	add	x20, x19, #0x328
  422830:	sub	sp, sp, x0
  422834:	mov	x1, x22
  422838:	mov	x22, sp
  42283c:	mov	x2, x21
  422840:	mov	x0, x22
  422844:	bl	402220 <memcpy@plt>
  422848:	ldp	x0, x4, [x20, #24]
  42284c:	mov	w1, #0xa                   	// #10
  422850:	strb	w1, [x22, x21]
  422854:	add	x21, x22, x21
  422858:	sub	x1, x4, x0
  42285c:	cmp	x1, #0xc7
  422860:	b.ls	422a28 <ferror@plt+0x201a8>  // b.plast
  422864:	ldr	x1, [x20, #16]
  422868:	add	x0, x0, #0xc8
  42286c:	cmp	x0, x1
  422870:	b.eq	422a48 <ferror@plt+0x201c8>  // b.none
  422874:	ldr	x2, [x20, #48]
  422878:	ldr	x3, [x20, #8]
  42287c:	add	x0, x0, x2
  422880:	bic	x0, x0, x2
  422884:	str	x0, [x20, #24]
  422888:	sub	x2, x0, x3
  42288c:	sub	x3, x4, x3
  422890:	cmp	x2, x3
  422894:	b.ls	4228a0 <ferror@plt+0x20020>  // b.plast
  422898:	mov	x0, x4
  42289c:	str	x4, [x20, #24]
  4228a0:	str	x0, [x20, #16]
  4228a4:	dup	v0.2d, x22
  4228a8:	stp	xzr, xzr, [x1, #96]
  4228ac:	mov	w6, #0xfffffd00            	// #-768
  4228b0:	mov	w5, #0x201                 	// #513
  4228b4:	ldrh	w2, [x1, #104]
  4228b8:	mov	w4, #0x1                   	// #1
  4228bc:	stp	xzr, xzr, [x1]
  4228c0:	mov	w3, #0x53                  	// #83
  4228c4:	and	w2, w2, w6
  4228c8:	stp	xzr, xzr, [x1, #32]
  4228cc:	orr	w2, w2, w5
  4228d0:	mov	x0, x19
  4228d4:	stp	xzr, xzr, [x1, #48]
  4228d8:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x196d8>
  4228dc:	add	x20, x20, #0x2f0
  4228e0:	stp	xzr, xzr, [x1, #64]
  4228e4:	stp	xzr, xzr, [x1, #80]
  4228e8:	stp	xzr, xzr, [x1, #112]
  4228ec:	stp	xzr, xzr, [x1, #128]
  4228f0:	stp	xzr, xzr, [x1, #144]
  4228f4:	stp	xzr, xzr, [x1, #160]
  4228f8:	stp	xzr, xzr, [x1, #176]
  4228fc:	str	xzr, [x1, #192]
  422900:	str	x21, [x1, #32]
  422904:	ldr	x5, [x19]
  422908:	strh	w2, [x1, #104]
  42290c:	ldr	x2, [x19, #40]
  422910:	str	q0, [x1, #16]
  422914:	str	x5, [x1, #72]
  422918:	strb	w4, [x19, #16]
  42291c:	strb	wzr, [x19, #21]
  422920:	str	x1, [x19]
  422924:	ldr	w1, [x2, #60]
  422928:	str	w1, [x19, #48]
  42292c:	strb	w3, [x19, #156]
  422930:	bl	42b0f8 <ferror@plt+0x28878>
  422934:	str	x20, [x19, #144]
  422938:	ldrb	w0, [x19, #1160]
  42293c:	adrp	x1, 420000 <ferror@plt+0x1d780>
  422940:	add	x1, x1, #0x18
  422944:	cbnz	w0, 422a58 <ferror@plt+0x201d8>
  422948:	mov	x0, x19
  42294c:	blr	x1
  422950:	ldrb	w0, [x19, #1160]
  422954:	cbz	w0, 4229b8 <ferror@plt+0x20138>
  422958:	ldrb	w0, [x19, #32]
  42295c:	cbnz	w0, 42296c <ferror@plt+0x200ec>
  422960:	ldrb	w0, [x19, #24]
  422964:	sub	w0, w0, #0x1
  422968:	strb	w0, [x19, #24]
  42296c:	ldr	x0, [x19, #144]
  422970:	cmp	x0, x20
  422974:	b.eq	422980 <ferror@plt+0x20100>  // b.none
  422978:	mov	x0, x19
  42297c:	bl	43bd88 <ferror@plt+0x39508>
  422980:	ldrb	w1, [x19, #1123]
  422984:	mov	x0, x19
  422988:	strb	wzr, [x19, #16]
  42298c:	cmp	w1, #0x0
  422990:	sturh	wzr, [x19, #19]
  422994:	cset	w1, eq  // eq = none
  422998:	strb	w1, [x19, #21]
  42299c:	str	xzr, [x19, #144]
  4229a0:	bl	421958 <ferror@plt+0x1f0d8>
  4229a4:	mov	sp, x29
  4229a8:	ldp	x19, x20, [sp, #16]
  4229ac:	ldp	x21, x22, [sp, #32]
  4229b0:	ldp	x29, x30, [sp], #48
  4229b4:	ret
  4229b8:	ldrb	w0, [x19, #32]
  4229bc:	cbnz	w0, 422980 <ferror@plt+0x20100>
  4229c0:	ldr	x0, [x19, #136]
  4229c4:	ldr	x0, [x0, #8]
  4229c8:	cbz	x0, 4229e4 <ferror@plt+0x20164>
  4229cc:	nop
  4229d0:	mov	x0, x19
  4229d4:	bl	436640 <ferror@plt+0x33dc0>
  4229d8:	ldr	x0, [x19, #136]
  4229dc:	ldr	x0, [x0, #8]
  4229e0:	cbnz	x0, 4229d0 <ferror@plt+0x20150>
  4229e4:	ldr	x0, [x19, #448]
  4229e8:	ldurb	w0, [x0, #-20]
  4229ec:	cmp	w0, #0x16
  4229f0:	b.eq	422a0c <ferror@plt+0x2018c>  // b.none
  4229f4:	nop
  4229f8:	mov	x0, x19
  4229fc:	bl	4307f0 <ferror@plt+0x2df70>
  422a00:	ldrb	w0, [x0, #4]
  422a04:	cmp	w0, #0x16
  422a08:	b.ne	4229f8 <ferror@plt+0x20178>  // b.any
  422a0c:	ldr	w0, [x19, #500]
  422a10:	cbnz	w0, 422980 <ferror@plt+0x20100>
  422a14:	ldr	x1, [x19, #472]
  422a18:	add	x0, x19, #0x1c8
  422a1c:	str	x1, [x19, #448]
  422a20:	str	x0, [x19, #488]
  422a24:	b	422980 <ferror@plt+0x20100>
  422a28:	mov	x0, x20
  422a2c:	mov	x1, #0xc8                  	// #200
  422a30:	bl	45c6e0 <_obstack_newchunk@@Base>
  422a34:	ldp	x0, x4, [x20, #24]
  422a38:	ldr	x1, [x20, #16]
  422a3c:	add	x0, x0, #0xc8
  422a40:	cmp	x0, x1
  422a44:	b.ne	422874 <ferror@plt+0x1fff4>  // b.any
  422a48:	ldrb	w2, [x20, #80]
  422a4c:	orr	w2, w2, #0x2
  422a50:	strb	w2, [x20, #80]
  422a54:	b	422874 <ferror@plt+0x1fff4>
  422a58:	mov	x0, x19
  422a5c:	bl	41e828 <ferror@plt+0x1bfa8>
  422a60:	ldr	x0, [x19, #144]
  422a64:	ldr	x1, [x0]
  422a68:	b	422948 <ferror@plt+0x200c8>
  422a6c:	nop
  422a70:	stp	x29, x30, [sp, #-48]!
  422a74:	mov	x29, sp
  422a78:	stp	x19, x20, [sp, #16]
  422a7c:	mov	x19, x0
  422a80:	mov	x0, x1
  422a84:	stp	x21, x22, [sp, #32]
  422a88:	mov	x22, x1
  422a8c:	bl	402270 <strlen@plt>
  422a90:	mov	x21, x0
  422a94:	add	x0, x0, #0x10
  422a98:	and	x0, x0, #0xfffffffffffffff0
  422a9c:	add	x20, x19, #0x328
  422aa0:	sub	sp, sp, x0
  422aa4:	mov	x1, x22
  422aa8:	mov	x22, sp
  422aac:	mov	x2, x21
  422ab0:	mov	x0, x22
  422ab4:	bl	402220 <memcpy@plt>
  422ab8:	ldp	x0, x4, [x20, #24]
  422abc:	mov	w1, #0xa                   	// #10
  422ac0:	strb	w1, [x22, x21]
  422ac4:	add	x21, x22, x21
  422ac8:	sub	x1, x4, x0
  422acc:	cmp	x1, #0xc7
  422ad0:	b.ls	422c98 <ferror@plt+0x20418>  // b.plast
  422ad4:	ldr	x1, [x20, #16]
  422ad8:	add	x0, x0, #0xc8
  422adc:	cmp	x0, x1
  422ae0:	b.eq	422cb8 <ferror@plt+0x20438>  // b.none
  422ae4:	ldr	x2, [x20, #48]
  422ae8:	ldr	x3, [x20, #8]
  422aec:	add	x0, x0, x2
  422af0:	bic	x0, x0, x2
  422af4:	str	x0, [x20, #24]
  422af8:	sub	x2, x0, x3
  422afc:	sub	x3, x4, x3
  422b00:	cmp	x2, x3
  422b04:	b.ls	422b10 <ferror@plt+0x20290>  // b.plast
  422b08:	mov	x0, x4
  422b0c:	str	x4, [x20, #24]
  422b10:	str	x0, [x20, #16]
  422b14:	dup	v0.2d, x22
  422b18:	stp	xzr, xzr, [x1, #96]
  422b1c:	mov	w6, #0xfffffd00            	// #-768
  422b20:	mov	w5, #0x201                 	// #513
  422b24:	ldrh	w2, [x1, #104]
  422b28:	mov	w4, #0x1                   	// #1
  422b2c:	stp	xzr, xzr, [x1]
  422b30:	mov	w3, #0x53                  	// #83
  422b34:	and	w2, w2, w6
  422b38:	stp	xzr, xzr, [x1, #32]
  422b3c:	orr	w2, w2, w5
  422b40:	mov	x0, x19
  422b44:	stp	xzr, xzr, [x1, #48]
  422b48:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x196d8>
  422b4c:	add	x20, x20, #0x2f0
  422b50:	stp	xzr, xzr, [x1, #64]
  422b54:	stp	xzr, xzr, [x1, #80]
  422b58:	stp	xzr, xzr, [x1, #112]
  422b5c:	stp	xzr, xzr, [x1, #128]
  422b60:	stp	xzr, xzr, [x1, #144]
  422b64:	stp	xzr, xzr, [x1, #160]
  422b68:	stp	xzr, xzr, [x1, #176]
  422b6c:	str	xzr, [x1, #192]
  422b70:	str	x21, [x1, #32]
  422b74:	ldr	x5, [x19]
  422b78:	strh	w2, [x1, #104]
  422b7c:	ldr	x2, [x19, #40]
  422b80:	str	q0, [x1, #16]
  422b84:	str	x5, [x1, #72]
  422b88:	strb	w4, [x19, #16]
  422b8c:	strb	wzr, [x19, #21]
  422b90:	str	x1, [x19]
  422b94:	ldr	w1, [x2, #60]
  422b98:	str	w1, [x19, #48]
  422b9c:	strb	w3, [x19, #156]
  422ba0:	bl	42b0f8 <ferror@plt+0x28878>
  422ba4:	ldrb	w0, [x19, #1160]
  422ba8:	add	x1, x20, #0xa8
  422bac:	str	x1, [x19, #144]
  422bb0:	adrp	x1, 420000 <ferror@plt+0x1d780>
  422bb4:	add	x1, x1, #0x2f0
  422bb8:	cbnz	w0, 422cc8 <ferror@plt+0x20448>
  422bbc:	mov	x0, x19
  422bc0:	blr	x1
  422bc4:	ldrb	w0, [x19, #1160]
  422bc8:	cbz	w0, 422c2c <ferror@plt+0x203ac>
  422bcc:	ldrb	w0, [x19, #32]
  422bd0:	cbnz	w0, 422be0 <ferror@plt+0x20360>
  422bd4:	ldrb	w0, [x19, #24]
  422bd8:	sub	w0, w0, #0x1
  422bdc:	strb	w0, [x19, #24]
  422be0:	ldr	x0, [x19, #144]
  422be4:	cmp	x0, x20
  422be8:	b.eq	422bf4 <ferror@plt+0x20374>  // b.none
  422bec:	mov	x0, x19
  422bf0:	bl	43bd88 <ferror@plt+0x39508>
  422bf4:	ldrb	w1, [x19, #1123]
  422bf8:	mov	x0, x19
  422bfc:	strb	wzr, [x19, #16]
  422c00:	cmp	w1, #0x0
  422c04:	sturh	wzr, [x19, #19]
  422c08:	cset	w1, eq  // eq = none
  422c0c:	strb	w1, [x19, #21]
  422c10:	str	xzr, [x19, #144]
  422c14:	bl	421958 <ferror@plt+0x1f0d8>
  422c18:	mov	sp, x29
  422c1c:	ldp	x19, x20, [sp, #16]
  422c20:	ldp	x21, x22, [sp, #32]
  422c24:	ldp	x29, x30, [sp], #48
  422c28:	ret
  422c2c:	ldrb	w0, [x19, #32]
  422c30:	cbnz	w0, 422bf4 <ferror@plt+0x20374>
  422c34:	ldr	x0, [x19, #136]
  422c38:	ldr	x0, [x0, #8]
  422c3c:	cbz	x0, 422c54 <ferror@plt+0x203d4>
  422c40:	mov	x0, x19
  422c44:	bl	436640 <ferror@plt+0x33dc0>
  422c48:	ldr	x0, [x19, #136]
  422c4c:	ldr	x0, [x0, #8]
  422c50:	cbnz	x0, 422c40 <ferror@plt+0x203c0>
  422c54:	ldr	x0, [x19, #448]
  422c58:	ldurb	w0, [x0, #-20]
  422c5c:	cmp	w0, #0x16
  422c60:	b.eq	422c7c <ferror@plt+0x203fc>  // b.none
  422c64:	nop
  422c68:	mov	x0, x19
  422c6c:	bl	4307f0 <ferror@plt+0x2df70>
  422c70:	ldrb	w0, [x0, #4]
  422c74:	cmp	w0, #0x16
  422c78:	b.ne	422c68 <ferror@plt+0x203e8>  // b.any
  422c7c:	ldr	w0, [x19, #500]
  422c80:	cbnz	w0, 422bf4 <ferror@plt+0x20374>
  422c84:	ldr	x1, [x19, #472]
  422c88:	add	x0, x19, #0x1c8
  422c8c:	str	x1, [x19, #448]
  422c90:	str	x0, [x19, #488]
  422c94:	b	422bf4 <ferror@plt+0x20374>
  422c98:	mov	x0, x20
  422c9c:	mov	x1, #0xc8                  	// #200
  422ca0:	bl	45c6e0 <_obstack_newchunk@@Base>
  422ca4:	ldp	x0, x4, [x20, #24]
  422ca8:	ldr	x1, [x20, #16]
  422cac:	add	x0, x0, #0xc8
  422cb0:	cmp	x0, x1
  422cb4:	b.ne	422ae4 <ferror@plt+0x20264>  // b.any
  422cb8:	ldrb	w2, [x20, #80]
  422cbc:	orr	w2, w2, #0x2
  422cc0:	strb	w2, [x20, #80]
  422cc4:	b	422ae4 <ferror@plt+0x20264>
  422cc8:	mov	x0, x19
  422ccc:	bl	41e828 <ferror@plt+0x1bfa8>
  422cd0:	ldr	x0, [x19, #144]
  422cd4:	ldr	x1, [x0]
  422cd8:	b	422bbc <ferror@plt+0x2033c>
  422cdc:	nop
  422ce0:	stp	x29, x30, [sp, #-48]!
  422ce4:	mov	x29, sp
  422ce8:	stp	x19, x20, [sp, #16]
  422cec:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x196d8>
  422cf0:	add	x20, x20, #0x2f0
  422cf4:	add	x20, x20, #0x8
  422cf8:	str	x21, [sp, #32]
  422cfc:	mov	x21, x0
  422d00:	mov	w19, #0x0                   	// #0
  422d04:	nop
  422d08:	ldrh	w2, [x20, #8]
  422d0c:	mov	x0, x21
  422d10:	ldr	x1, [x20], #24
  422d14:	bl	42a800 <ferror@plt+0x27f80>
  422d18:	ubfiz	w1, w19, #1, #7
  422d1c:	add	w19, w19, #0x1
  422d20:	orr	w1, w1, #0x1
  422d24:	strb	w1, [x0, #16]
  422d28:	cmp	w19, #0x13
  422d2c:	b.ne	422d08 <ferror@plt+0x20488>  // b.any
  422d30:	ldp	x19, x20, [sp, #16]
  422d34:	ldr	x21, [sp, #32]
  422d38:	ldp	x29, x30, [sp], #48
  422d3c:	ret
  422d40:	b	41e488 <ferror@plt+0x1bc08>
  422d44:	nop
  422d48:	stp	x29, x30, [sp, #-240]!
  422d4c:	mov	x29, sp
  422d50:	stp	x19, x20, [sp, #16]
  422d54:	mov	x19, x0
  422d58:	ldr	x0, [x0, #1000]
  422d5c:	stp	x21, x22, [sp, #32]
  422d60:	stp	x23, x24, [sp, #48]
  422d64:	cbz	x0, 422df8 <ferror@plt+0x20578>
  422d68:	mov	w21, w1
  422d6c:	mov	w22, w2
  422d70:	ldr	x1, [x19, #40]
  422d74:	mov	w2, w3
  422d78:	mov	w20, w4
  422d7c:	mov	x23, x5
  422d80:	mov	x24, x6
  422d84:	add	x0, sp, #0x48
  422d88:	mov	x3, #0x0                   	// #0
  422d8c:	bl	4337e0 <ferror@plt+0x30f60>
  422d90:	cbnz	w20, 422de8 <ferror@plt+0x20568>
  422d94:	ldr	x20, [x19, #1000]
  422d98:	mov	x1, x23
  422d9c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  422da0:	add	x0, x0, #0x5a8
  422da4:	bl	402630 <dgettext@plt>
  422da8:	mov	x4, x0
  422dac:	mov	x5, x24
  422db0:	add	x3, sp, #0x48
  422db4:	mov	w2, w22
  422db8:	mov	w1, w21
  422dbc:	mov	x0, x19
  422dc0:	blr	x20
  422dc4:	mov	w19, w0
  422dc8:	add	x0, sp, #0x48
  422dcc:	bl	433820 <ferror@plt+0x30fa0>
  422dd0:	mov	w0, w19
  422dd4:	ldp	x19, x20, [sp, #16]
  422dd8:	ldp	x21, x22, [sp, #32]
  422ddc:	ldp	x23, x24, [sp, #48]
  422de0:	ldp	x29, x30, [sp], #240
  422de4:	ret
  422de8:	mov	w1, w20
  422dec:	add	x0, sp, #0x48
  422df0:	bl	433a20 <ferror@plt+0x311a0>
  422df4:	b	422d94 <ferror@plt+0x20514>
  422df8:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  422dfc:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  422e00:	add	x2, x2, #0x570
  422e04:	add	x0, x0, #0x590
  422e08:	mov	w1, #0x9f                  	// #159
  422e0c:	bl	4028b0 <ferror@plt+0x30>
  422e10:	stp	x29, x30, [sp, #-432]!
  422e14:	mov	w9, #0xffffffd8            	// #-40
  422e18:	mov	w8, #0xffffff80            	// #-128
  422e1c:	mov	x29, sp
  422e20:	stp	x19, x20, [sp, #16]
  422e24:	mov	x19, x0
  422e28:	add	x0, sp, #0x1b0
  422e2c:	stp	x21, x22, [sp, #32]
  422e30:	add	x10, sp, #0x180
  422e34:	mov	w22, w1
  422e38:	stp	x0, x0, [sp, #56]
  422e3c:	mov	x20, x2
  422e40:	ldrb	w0, [x19, #1160]
  422e44:	str	x10, [sp, #72]
  422e48:	stp	w9, w8, [sp, #80]
  422e4c:	str	q0, [sp, #256]
  422e50:	str	q1, [sp, #272]
  422e54:	str	q2, [sp, #288]
  422e58:	str	q3, [sp, #304]
  422e5c:	str	q4, [sp, #320]
  422e60:	str	q5, [sp, #336]
  422e64:	str	q6, [sp, #352]
  422e68:	str	q7, [sp, #368]
  422e6c:	stp	x3, x4, [sp, #392]
  422e70:	stp	x5, x6, [sp, #408]
  422e74:	str	x7, [sp, #424]
  422e78:	cbz	w0, 422ef4 <ferror@plt+0x20674>
  422e7c:	ldrb	w0, [x19, #16]
  422e80:	ldr	x1, [x19, #40]
  422e84:	cbnz	w0, 422eec <ferror@plt+0x2066c>
  422e88:	ldr	w2, [x1, #60]
  422e8c:	add	x0, sp, #0x58
  422e90:	mov	x3, #0x0                   	// #0
  422e94:	bl	4337e0 <ferror@plt+0x30f60>
  422e98:	ldr	x21, [x19, #1000]
  422e9c:	cbz	x21, 422f18 <ferror@plt+0x20698>
  422ea0:	mov	x1, x20
  422ea4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  422ea8:	add	x0, x0, #0x5a8
  422eac:	bl	402630 <dgettext@plt>
  422eb0:	mov	w1, w22
  422eb4:	mov	x4, x0
  422eb8:	add	x5, sp, #0x38
  422ebc:	add	x3, sp, #0x58
  422ec0:	mov	w2, #0x0                   	// #0
  422ec4:	mov	x0, x19
  422ec8:	blr	x21
  422ecc:	mov	w19, w0
  422ed0:	add	x0, sp, #0x58
  422ed4:	bl	433820 <ferror@plt+0x30fa0>
  422ed8:	mov	w0, w19
  422edc:	ldp	x19, x20, [sp, #16]
  422ee0:	ldp	x21, x22, [sp, #32]
  422ee4:	ldp	x29, x30, [sp], #432
  422ee8:	ret
  422eec:	ldr	w2, [x19, #48]
  422ef0:	b	422e8c <ferror@plt+0x2060c>
  422ef4:	ldr	x1, [x19, #488]
  422ef8:	mov	w2, #0x0                   	// #0
  422efc:	ldr	x0, [x19, #448]
  422f00:	ldr	x3, [x1, #16]
  422f04:	ldr	x1, [x19, #40]
  422f08:	cmp	x0, x3
  422f0c:	b.eq	422e8c <ferror@plt+0x2060c>  // b.none
  422f10:	ldur	w2, [x0, #-24]
  422f14:	b	422e8c <ferror@plt+0x2060c>
  422f18:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  422f1c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  422f20:	add	x2, x2, #0x5b0
  422f24:	add	x0, x0, #0x590
  422f28:	mov	w1, #0x29                  	// #41
  422f2c:	bl	4028b0 <ferror@plt+0x30>
  422f30:	stp	x29, x30, [sp, #-432]!
  422f34:	mov	w9, #0xffffffd8            	// #-40
  422f38:	mov	w8, #0xffffff80            	// #-128
  422f3c:	mov	x29, sp
  422f40:	stp	x19, x20, [sp, #16]
  422f44:	mov	x19, x0
  422f48:	add	x0, sp, #0x1b0
  422f4c:	stp	x21, x22, [sp, #32]
  422f50:	add	x10, sp, #0x180
  422f54:	mov	w22, w1
  422f58:	stp	x0, x0, [sp, #56]
  422f5c:	mov	x20, x2
  422f60:	ldrb	w0, [x19, #1160]
  422f64:	str	x10, [sp, #72]
  422f68:	stp	w9, w8, [sp, #80]
  422f6c:	str	q0, [sp, #256]
  422f70:	str	q1, [sp, #272]
  422f74:	str	q2, [sp, #288]
  422f78:	str	q3, [sp, #304]
  422f7c:	str	q4, [sp, #320]
  422f80:	str	q5, [sp, #336]
  422f84:	str	q6, [sp, #352]
  422f88:	str	q7, [sp, #368]
  422f8c:	stp	x3, x4, [sp, #392]
  422f90:	stp	x5, x6, [sp, #408]
  422f94:	str	x7, [sp, #424]
  422f98:	cbz	w0, 423014 <ferror@plt+0x20794>
  422f9c:	ldrb	w0, [x19, #16]
  422fa0:	ldr	x1, [x19, #40]
  422fa4:	cbnz	w0, 42300c <ferror@plt+0x2078c>
  422fa8:	ldr	w2, [x1, #60]
  422fac:	add	x0, sp, #0x58
  422fb0:	mov	x3, #0x0                   	// #0
  422fb4:	bl	4337e0 <ferror@plt+0x30f60>
  422fb8:	ldr	x21, [x19, #1000]
  422fbc:	cbz	x21, 423038 <ferror@plt+0x207b8>
  422fc0:	mov	x1, x20
  422fc4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  422fc8:	add	x0, x0, #0x5a8
  422fcc:	bl	402630 <dgettext@plt>
  422fd0:	mov	w2, w22
  422fd4:	mov	x4, x0
  422fd8:	add	x5, sp, #0x38
  422fdc:	add	x3, sp, #0x58
  422fe0:	mov	w1, #0x0                   	// #0
  422fe4:	mov	x0, x19
  422fe8:	blr	x21
  422fec:	mov	w19, w0
  422ff0:	add	x0, sp, #0x58
  422ff4:	bl	433820 <ferror@plt+0x30fa0>
  422ff8:	mov	w0, w19
  422ffc:	ldp	x19, x20, [sp, #16]
  423000:	ldp	x21, x22, [sp, #32]
  423004:	ldp	x29, x30, [sp], #432
  423008:	ret
  42300c:	ldr	w2, [x19, #48]
  423010:	b	422fac <ferror@plt+0x2072c>
  423014:	ldr	x1, [x19, #488]
  423018:	mov	w2, #0x0                   	// #0
  42301c:	ldr	x0, [x19, #448]
  423020:	ldr	x3, [x1, #16]
  423024:	ldr	x1, [x19, #40]
  423028:	cmp	x0, x3
  42302c:	b.eq	422fac <ferror@plt+0x2072c>  // b.none
  423030:	ldur	w2, [x0, #-24]
  423034:	b	422fac <ferror@plt+0x2072c>
  423038:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42303c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  423040:	add	x2, x2, #0x5b0
  423044:	add	x0, x0, #0x590
  423048:	mov	w1, #0x29                  	// #41
  42304c:	bl	4028b0 <ferror@plt+0x30>
  423050:	stp	x29, x30, [sp, #-432]!
  423054:	mov	w9, #0xffffffd8            	// #-40
  423058:	mov	w8, #0xffffff80            	// #-128
  42305c:	mov	x29, sp
  423060:	stp	x19, x20, [sp, #16]
  423064:	mov	x19, x0
  423068:	add	x0, sp, #0x1b0
  42306c:	stp	x21, x22, [sp, #32]
  423070:	add	x10, sp, #0x180
  423074:	mov	w22, w1
  423078:	stp	x0, x0, [sp, #56]
  42307c:	mov	x20, x2
  423080:	ldrb	w0, [x19, #1160]
  423084:	str	x10, [sp, #72]
  423088:	stp	w9, w8, [sp, #80]
  42308c:	str	q0, [sp, #256]
  423090:	str	q1, [sp, #272]
  423094:	str	q2, [sp, #288]
  423098:	str	q3, [sp, #304]
  42309c:	str	q4, [sp, #320]
  4230a0:	str	q5, [sp, #336]
  4230a4:	str	q6, [sp, #352]
  4230a8:	str	q7, [sp, #368]
  4230ac:	stp	x3, x4, [sp, #392]
  4230b0:	stp	x5, x6, [sp, #408]
  4230b4:	str	x7, [sp, #424]
  4230b8:	cbz	w0, 423134 <ferror@plt+0x208b4>
  4230bc:	ldrb	w0, [x19, #16]
  4230c0:	ldr	x1, [x19, #40]
  4230c4:	cbnz	w0, 42312c <ferror@plt+0x208ac>
  4230c8:	ldr	w2, [x1, #60]
  4230cc:	add	x0, sp, #0x58
  4230d0:	mov	x3, #0x0                   	// #0
  4230d4:	bl	4337e0 <ferror@plt+0x30f60>
  4230d8:	ldr	x21, [x19, #1000]
  4230dc:	cbz	x21, 423158 <ferror@plt+0x208d8>
  4230e0:	mov	x1, x20
  4230e4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  4230e8:	add	x0, x0, #0x5a8
  4230ec:	bl	402630 <dgettext@plt>
  4230f0:	mov	w2, w22
  4230f4:	mov	x4, x0
  4230f8:	add	x5, sp, #0x38
  4230fc:	add	x3, sp, #0x58
  423100:	mov	w1, #0x2                   	// #2
  423104:	mov	x0, x19
  423108:	blr	x21
  42310c:	mov	w19, w0
  423110:	add	x0, sp, #0x58
  423114:	bl	433820 <ferror@plt+0x30fa0>
  423118:	mov	w0, w19
  42311c:	ldp	x19, x20, [sp, #16]
  423120:	ldp	x21, x22, [sp, #32]
  423124:	ldp	x29, x30, [sp], #432
  423128:	ret
  42312c:	ldr	w2, [x19, #48]
  423130:	b	4230cc <ferror@plt+0x2084c>
  423134:	ldr	x1, [x19, #488]
  423138:	mov	w2, #0x0                   	// #0
  42313c:	ldr	x0, [x19, #448]
  423140:	ldr	x3, [x1, #16]
  423144:	ldr	x1, [x19, #40]
  423148:	cmp	x0, x3
  42314c:	b.eq	4230cc <ferror@plt+0x2084c>  // b.none
  423150:	ldur	w2, [x0, #-24]
  423154:	b	4230cc <ferror@plt+0x2084c>
  423158:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42315c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  423160:	add	x2, x2, #0x5b0
  423164:	add	x0, x0, #0x590
  423168:	mov	w1, #0x29                  	// #41
  42316c:	bl	4028b0 <ferror@plt+0x30>
  423170:	stp	x29, x30, [sp, #-432]!
  423174:	mov	w9, #0xffffffd8            	// #-40
  423178:	mov	w8, #0xffffff80            	// #-128
  42317c:	mov	x29, sp
  423180:	stp	x19, x20, [sp, #16]
  423184:	mov	x19, x0
  423188:	add	x0, sp, #0x1b0
  42318c:	stp	x21, x22, [sp, #32]
  423190:	add	x10, sp, #0x180
  423194:	mov	w22, w1
  423198:	stp	x0, x0, [sp, #56]
  42319c:	mov	x20, x2
  4231a0:	ldrb	w0, [x19, #1160]
  4231a4:	str	x10, [sp, #72]
  4231a8:	stp	w9, w8, [sp, #80]
  4231ac:	str	q0, [sp, #256]
  4231b0:	str	q1, [sp, #272]
  4231b4:	str	q2, [sp, #288]
  4231b8:	str	q3, [sp, #304]
  4231bc:	str	q4, [sp, #320]
  4231c0:	str	q5, [sp, #336]
  4231c4:	str	q6, [sp, #352]
  4231c8:	str	q7, [sp, #368]
  4231cc:	stp	x3, x4, [sp, #392]
  4231d0:	stp	x5, x6, [sp, #408]
  4231d4:	str	x7, [sp, #424]
  4231d8:	cbz	w0, 423254 <ferror@plt+0x209d4>
  4231dc:	ldrb	w0, [x19, #16]
  4231e0:	ldr	x1, [x19, #40]
  4231e4:	cbnz	w0, 42324c <ferror@plt+0x209cc>
  4231e8:	ldr	w2, [x1, #60]
  4231ec:	add	x0, sp, #0x58
  4231f0:	mov	x3, #0x0                   	// #0
  4231f4:	bl	4337e0 <ferror@plt+0x30f60>
  4231f8:	ldr	x21, [x19, #1000]
  4231fc:	cbz	x21, 423278 <ferror@plt+0x209f8>
  423200:	mov	x1, x20
  423204:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  423208:	add	x0, x0, #0x5a8
  42320c:	bl	402630 <dgettext@plt>
  423210:	mov	w2, w22
  423214:	mov	x4, x0
  423218:	add	x5, sp, #0x38
  42321c:	add	x3, sp, #0x58
  423220:	mov	w1, #0x1                   	// #1
  423224:	mov	x0, x19
  423228:	blr	x21
  42322c:	mov	w19, w0
  423230:	add	x0, sp, #0x58
  423234:	bl	433820 <ferror@plt+0x30fa0>
  423238:	mov	w0, w19
  42323c:	ldp	x19, x20, [sp, #16]
  423240:	ldp	x21, x22, [sp, #32]
  423244:	ldp	x29, x30, [sp], #432
  423248:	ret
  42324c:	ldr	w2, [x19, #48]
  423250:	b	4231ec <ferror@plt+0x2096c>
  423254:	ldr	x1, [x19, #488]
  423258:	mov	w2, #0x0                   	// #0
  42325c:	ldr	x0, [x19, #448]
  423260:	ldr	x3, [x1, #16]
  423264:	ldr	x1, [x19, #40]
  423268:	cmp	x0, x3
  42326c:	b.eq	4231ec <ferror@plt+0x2096c>  // b.none
  423270:	ldur	w2, [x0, #-24]
  423274:	b	4231ec <ferror@plt+0x2096c>
  423278:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42327c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  423280:	add	x2, x2, #0x5b0
  423284:	add	x0, x0, #0x590
  423288:	mov	w1, #0x29                  	// #41
  42328c:	bl	4028b0 <ferror@plt+0x30>
  423290:	stp	x29, x30, [sp, #-208]!
  423294:	mov	x11, x4
  423298:	mov	w8, w3
  42329c:	add	x12, sp, #0xd0
  4232a0:	add	x10, sp, #0xb0
  4232a4:	mov	w4, w8
  4232a8:	mov	w9, #0xffffffe8            	// #-24
  4232ac:	mov	w8, #0xffffff80            	// #-128
  4232b0:	mov	x29, sp
  4232b4:	mov	w3, w2
  4232b8:	mov	w2, #0x0                   	// #0
  4232bc:	str	x12, [sp, #16]
  4232c0:	str	x12, [sp, #24]
  4232c4:	str	x10, [sp, #32]
  4232c8:	stp	w9, w8, [sp, #40]
  4232cc:	str	q0, [sp, #48]
  4232d0:	str	q1, [sp, #64]
  4232d4:	str	q2, [sp, #80]
  4232d8:	str	q3, [sp, #96]
  4232dc:	str	q4, [sp, #112]
  4232e0:	str	q5, [sp, #128]
  4232e4:	str	q6, [sp, #144]
  4232e8:	str	q7, [sp, #160]
  4232ec:	stp	x5, x6, [sp, #184]
  4232f0:	add	x6, sp, #0x10
  4232f4:	mov	x5, x11
  4232f8:	str	x7, [sp, #200]
  4232fc:	bl	422d48 <ferror@plt+0x204c8>
  423300:	ldp	x29, x30, [sp], #208
  423304:	ret
  423308:	stp	x29, x30, [sp, #-208]!
  42330c:	mov	x11, x4
  423310:	mov	w9, w2
  423314:	add	x12, sp, #0xd0
  423318:	add	x10, sp, #0xb0
  42331c:	mov	w8, w3
  423320:	mov	w3, w9
  423324:	mov	w4, w8
  423328:	mov	w9, #0xffffffe8            	// #-24
  42332c:	mov	w8, #0xffffff80            	// #-128
  423330:	mov	x29, sp
  423334:	mov	w2, w1
  423338:	mov	w1, #0x0                   	// #0
  42333c:	str	x12, [sp, #16]
  423340:	str	x12, [sp, #24]
  423344:	str	x10, [sp, #32]
  423348:	stp	w9, w8, [sp, #40]
  42334c:	str	q0, [sp, #48]
  423350:	str	q1, [sp, #64]
  423354:	str	q2, [sp, #80]
  423358:	str	q3, [sp, #96]
  42335c:	str	q4, [sp, #112]
  423360:	str	q5, [sp, #128]
  423364:	str	q6, [sp, #144]
  423368:	str	q7, [sp, #160]
  42336c:	stp	x5, x6, [sp, #184]
  423370:	add	x6, sp, #0x10
  423374:	mov	x5, x11
  423378:	str	x7, [sp, #200]
  42337c:	bl	422d48 <ferror@plt+0x204c8>
  423380:	ldp	x29, x30, [sp], #208
  423384:	ret
  423388:	stp	x29, x30, [sp, #-208]!
  42338c:	mov	x11, x4
  423390:	mov	w9, w2
  423394:	add	x12, sp, #0xd0
  423398:	add	x10, sp, #0xb0
  42339c:	mov	w8, w3
  4233a0:	mov	w3, w9
  4233a4:	mov	w4, w8
  4233a8:	mov	w9, #0xffffffe8            	// #-24
  4233ac:	mov	w8, #0xffffff80            	// #-128
  4233b0:	mov	x29, sp
  4233b4:	mov	w2, w1
  4233b8:	mov	w1, #0x2                   	// #2
  4233bc:	str	x12, [sp, #16]
  4233c0:	str	x12, [sp, #24]
  4233c4:	str	x10, [sp, #32]
  4233c8:	stp	w9, w8, [sp, #40]
  4233cc:	str	q0, [sp, #48]
  4233d0:	str	q1, [sp, #64]
  4233d4:	str	q2, [sp, #80]
  4233d8:	str	q3, [sp, #96]
  4233dc:	str	q4, [sp, #112]
  4233e0:	str	q5, [sp, #128]
  4233e4:	str	q6, [sp, #144]
  4233e8:	str	q7, [sp, #160]
  4233ec:	stp	x5, x6, [sp, #184]
  4233f0:	add	x6, sp, #0x10
  4233f4:	mov	x5, x11
  4233f8:	str	x7, [sp, #200]
  4233fc:	bl	422d48 <ferror@plt+0x204c8>
  423400:	ldp	x29, x30, [sp], #208
  423404:	ret
  423408:	stp	x29, x30, [sp, #-208]!
  42340c:	mov	x11, x4
  423410:	mov	w9, w2
  423414:	add	x12, sp, #0xd0
  423418:	add	x10, sp, #0xb0
  42341c:	mov	w8, w3
  423420:	mov	w3, w9
  423424:	mov	w4, w8
  423428:	mov	w9, #0xffffffe8            	// #-24
  42342c:	mov	w8, #0xffffff80            	// #-128
  423430:	mov	x29, sp
  423434:	mov	w2, w1
  423438:	mov	w1, #0x1                   	// #1
  42343c:	str	x12, [sp, #16]
  423440:	str	x12, [sp, #24]
  423444:	str	x10, [sp, #32]
  423448:	stp	w9, w8, [sp, #40]
  42344c:	str	q0, [sp, #48]
  423450:	str	q1, [sp, #64]
  423454:	str	q2, [sp, #80]
  423458:	str	q3, [sp, #96]
  42345c:	str	q4, [sp, #112]
  423460:	str	q5, [sp, #128]
  423464:	str	q6, [sp, #144]
  423468:	str	q7, [sp, #160]
  42346c:	stp	x5, x6, [sp, #184]
  423470:	add	x6, sp, #0x10
  423474:	mov	x5, x11
  423478:	str	x7, [sp, #200]
  42347c:	bl	422d48 <ferror@plt+0x204c8>
  423480:	ldp	x29, x30, [sp], #208
  423484:	ret
  423488:	stp	x29, x30, [sp, #-416]!
  42348c:	mov	w9, #0xffffffe0            	// #-32
  423490:	mov	w8, #0xffffff80            	// #-128
  423494:	mov	x29, sp
  423498:	stp	x19, x20, [sp, #16]
  42349c:	mov	x19, x0
  4234a0:	mov	w20, w1
  4234a4:	add	x10, sp, #0x180
  4234a8:	add	x11, sp, #0x1a0
  4234ac:	ldr	x1, [x19, #40]
  4234b0:	add	x0, sp, #0x58
  4234b4:	stp	x21, x22, [sp, #32]
  4234b8:	mov	x21, x3
  4234bc:	mov	x3, #0x0                   	// #0
  4234c0:	stp	x11, x11, [sp, #56]
  4234c4:	str	x10, [sp, #72]
  4234c8:	stp	w9, w8, [sp, #80]
  4234cc:	str	q0, [sp, #256]
  4234d0:	str	q1, [sp, #272]
  4234d4:	str	q2, [sp, #288]
  4234d8:	str	q3, [sp, #304]
  4234dc:	str	q4, [sp, #320]
  4234e0:	str	q5, [sp, #336]
  4234e4:	str	q6, [sp, #352]
  4234e8:	str	q7, [sp, #368]
  4234ec:	stp	x4, x5, [sp, #384]
  4234f0:	stp	x6, x7, [sp, #400]
  4234f4:	bl	4337e0 <ferror@plt+0x30f60>
  4234f8:	ldr	x22, [x19, #1000]
  4234fc:	cbz	x22, 42354c <ferror@plt+0x20ccc>
  423500:	mov	x1, x21
  423504:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  423508:	add	x0, x0, #0x5a8
  42350c:	bl	402630 <dgettext@plt>
  423510:	mov	w1, w20
  423514:	mov	x4, x0
  423518:	add	x5, sp, #0x38
  42351c:	add	x3, sp, #0x58
  423520:	mov	w2, #0x0                   	// #0
  423524:	mov	x0, x19
  423528:	blr	x22
  42352c:	mov	w19, w0
  423530:	add	x0, sp, #0x58
  423534:	bl	433820 <ferror@plt+0x30fa0>
  423538:	mov	w0, w19
  42353c:	ldp	x19, x20, [sp, #16]
  423540:	ldp	x21, x22, [sp, #32]
  423544:	ldp	x29, x30, [sp], #416
  423548:	ret
  42354c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  423550:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  423554:	add	x2, x2, #0x5b0
  423558:	add	x0, x0, #0x590
  42355c:	mov	w1, #0x29                  	// #41
  423560:	bl	4028b0 <ferror@plt+0x30>
  423564:	nop
  423568:	stp	x29, x30, [sp, #-240]!
  42356c:	mov	w8, #0xffffffe0            	// #-32
  423570:	mov	x29, sp
  423574:	stp	x19, x20, [sp, #16]
  423578:	mov	x19, x0
  42357c:	add	x9, sp, #0xd0
  423580:	str	q0, [sp, #80]
  423584:	mov	w0, #0xffffff80            	// #-128
  423588:	stp	x21, x22, [sp, #32]
  42358c:	mov	x21, x2
  423590:	add	x2, sp, #0xf0
  423594:	ldr	x22, [x19, #1000]
  423598:	stp	x2, x2, [sp, #48]
  42359c:	str	x9, [sp, #64]
  4235a0:	stp	w8, w0, [sp, #72]
  4235a4:	str	q1, [sp, #96]
  4235a8:	str	q2, [sp, #112]
  4235ac:	str	q3, [sp, #128]
  4235b0:	str	q4, [sp, #144]
  4235b4:	str	q5, [sp, #160]
  4235b8:	str	q6, [sp, #176]
  4235bc:	str	q7, [sp, #192]
  4235c0:	stp	x4, x5, [sp, #208]
  4235c4:	stp	x6, x7, [sp, #224]
  4235c8:	cbz	x22, 42360c <ferror@plt+0x20d8c>
  4235cc:	mov	w20, w1
  4235d0:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  4235d4:	mov	x1, x3
  4235d8:	add	x0, x0, #0x5a8
  4235dc:	bl	402630 <dgettext@plt>
  4235e0:	mov	x4, x0
  4235e4:	mov	x3, x21
  4235e8:	mov	w1, w20
  4235ec:	add	x5, sp, #0x30
  4235f0:	mov	x0, x19
  4235f4:	mov	w2, #0x0                   	// #0
  4235f8:	blr	x22
  4235fc:	ldp	x19, x20, [sp, #16]
  423600:	ldp	x21, x22, [sp, #32]
  423604:	ldp	x29, x30, [sp], #240
  423608:	ret
  42360c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  423610:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  423614:	add	x2, x2, #0x5b0
  423618:	add	x0, x0, #0x590
  42361c:	mov	w1, #0x29                  	// #41
  423620:	bl	4028b0 <ferror@plt+0x30>
  423624:	nop
  423628:	stp	x29, x30, [sp, #-48]!
  42362c:	mov	x29, sp
  423630:	stp	x19, x20, [sp, #16]
  423634:	mov	w20, w1
  423638:	mov	x1, x2
  42363c:	mov	x19, x0
  423640:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  423644:	add	x0, x0, #0x5a8
  423648:	str	x21, [sp, #32]
  42364c:	bl	402630 <dgettext@plt>
  423650:	mov	x21, x0
  423654:	bl	4027c0 <__errno_location@plt>
  423658:	ldr	w0, [x0]
  42365c:	bl	45cb98 <_obstack_memory_used@@Base+0x270>
  423660:	mov	x4, x0
  423664:	mov	x3, x21
  423668:	mov	w1, w20
  42366c:	mov	x0, x19
  423670:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  423674:	ldp	x19, x20, [sp, #16]
  423678:	add	x2, x2, #0x5c8
  42367c:	ldr	x21, [sp, #32]
  423680:	ldp	x29, x30, [sp], #48
  423684:	b	422e10 <ferror@plt+0x20590>
  423688:	stp	x29, x30, [sp, #-48]!
  42368c:	mov	x29, sp
  423690:	stp	x19, x20, [sp, #16]
  423694:	mov	x20, x0
  423698:	mov	x19, x2
  42369c:	stp	x21, x22, [sp, #32]
  4236a0:	mov	w21, w1
  4236a4:	mov	w22, w3
  4236a8:	ldrb	w0, [x2]
  4236ac:	cbz	w0, 4236e8 <ferror@plt+0x20e68>
  4236b0:	bl	4027c0 <__errno_location@plt>
  4236b4:	ldr	w0, [x0]
  4236b8:	bl	45cb98 <_obstack_memory_used@@Base+0x270>
  4236bc:	mov	x5, x0
  4236c0:	mov	x4, x19
  4236c4:	mov	w2, w22
  4236c8:	mov	w1, w21
  4236cc:	mov	x0, x20
  4236d0:	ldp	x19, x20, [sp, #16]
  4236d4:	adrp	x3, 476000 <_obstack_memory_used@@Base+0x196d8>
  4236d8:	ldp	x21, x22, [sp, #32]
  4236dc:	add	x3, x3, #0x5c8
  4236e0:	ldp	x29, x30, [sp], #48
  4236e4:	b	423488 <ferror@plt+0x20c08>
  4236e8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  4236ec:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  4236f0:	add	x1, x1, #0x5d0
  4236f4:	add	x0, x0, #0x5a8
  4236f8:	bl	402630 <dgettext@plt>
  4236fc:	mov	x19, x0
  423700:	b	4236b0 <ferror@plt+0x20e30>
  423704:	nop
  423708:	stp	x29, x30, [sp, #-32]!
  42370c:	cmp	x2, #0x2
  423710:	mov	x8, x0
  423714:	mov	x29, sp
  423718:	b.eq	4239a8 <ferror@plt+0x21128>  // b.none
  42371c:	ldrb	w7, [x0, #1163]
  423720:	cbz	w7, 4237e8 <ferror@plt+0x20f68>
  423724:	cbnz	x2, 423b4c <ferror@plt+0x212cc>
  423728:	mov	x9, #0x0                   	// #0
  42372c:	mov	x13, #0x0                   	// #0
  423730:	mov	x11, #0x0                   	// #0
  423734:	mov	x5, #0x0                   	// #0
  423738:	mov	x10, #0x0                   	// #0
  42373c:	mov	x15, #0x0                   	// #0
  423740:	mov	x12, #0x0                   	// #0
  423744:	mov	x14, #0x0                   	// #0
  423748:	mov	w3, #0x0                   	// #0
  42374c:	cmp	x14, #0x60
  423750:	mov	w0, #0x0                   	// #0
  423754:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  423758:	b.ne	4238d4 <ferror@plt+0x21054>  // b.any
  42375c:	cbz	x9, 423cc4 <ferror@plt+0x21444>
  423760:	mov	w0, #0x0                   	// #0
  423764:	cbz	w7, 4238d4 <ferror@plt+0x21054>
  423768:	ldrb	w4, [x8, #1120]
  42376c:	cbz	w4, 423788 <ferror@plt+0x20f08>
  423770:	ldr	w4, [x8, #1116]
  423774:	cmp	w4, #0xe
  423778:	b.le	423788 <ferror@plt+0x20f08>
  42377c:	ldrb	w4, [x1]
  423780:	cmp	w4, #0x69
  423784:	b.eq	423d1c <ferror@plt+0x2149c>  // b.none
  423788:	mov	w6, #0x2000                	// #8192
  42378c:	mov	w2, #0x2000                	// #8192
  423790:	mov	w0, #0x2010                	// #8208
  423794:	mov	w8, #0x2020                	// #8224
  423798:	mov	w7, #0x2040                	// #8256
  42379c:	movk	w6, #0x1, lsl #16
  4237a0:	movk	w2, #0x2, lsl #16
  4237a4:	mov	w4, #0xa000                	// #40960
  4237a8:	mov	w1, #0x2000                	// #8192
  4237ac:	cbnz	x5, 4238d4 <ferror@plt+0x21054>
  4237b0:	mov	w0, w8
  4237b4:	cbnz	x13, 4238d4 <ferror@plt+0x21054>
  4237b8:	mov	w0, w7
  4237bc:	cbnz	x12, 4238d4 <ferror@plt+0x21054>
  4237c0:	mov	w0, w6
  4237c4:	cbnz	x11, 4238d4 <ferror@plt+0x21054>
  4237c8:	cbnz	x10, 423d54 <ferror@plt+0x214d4>
  4237cc:	orr	w0, w1, w14, lsl #24
  4237d0:	cbz	w3, 423d44 <ferror@plt+0x214c4>
  4237d4:	orr	w0, w0, #0x400000
  4237d8:	b	4238d4 <ferror@plt+0x21054>
  4237dc:	ldrb	w7, [x8, #1163]
  4237e0:	cbnz	w7, 423b4c <ferror@plt+0x212cc>
  4237e4:	nop
  4237e8:	sub	x4, x2, #0x1
  4237ec:	mov	w7, #0x0                   	// #0
  4237f0:	cbz	x2, 423728 <ferror@plt+0x20ea8>
  4237f4:	ldrb	w3, [x1]
  4237f8:	mov	x6, x1
  4237fc:	mov	x14, #0x0                   	// #0
  423800:	mov	x15, #0x0                   	// #0
  423804:	mov	x16, #0x0                   	// #0
  423808:	mov	x9, #0x0                   	// #0
  42380c:	mov	x10, #0x0                   	// #0
  423810:	mov	x11, #0x0                   	// #0
  423814:	mov	x12, #0x0                   	// #0
  423818:	mov	x13, #0x0                   	// #0
  42381c:	mov	x0, #0x0                   	// #0
  423820:	cmp	w3, #0x64
  423824:	b.eq	42387c <ferror@plt+0x20ffc>  // b.none
  423828:	b.hi	423890 <ferror@plt+0x21010>  // b.pmore
  42382c:	cmp	w3, #0x4c
  423830:	b.eq	423980 <ferror@plt+0x21100>  // b.none
  423834:	b.hi	4238c0 <ferror@plt+0x21040>  // b.pmore
  423838:	cmp	w3, #0x46
  42383c:	b.eq	423914 <ferror@plt+0x21094>  // b.none
  423840:	b.ls	4238f8 <ferror@plt+0x21078>  // b.plast
  423844:	sub	w3, w3, #0x49
  423848:	and	w3, w3, #0xff
  42384c:	cmp	w3, #0x1
  423850:	b.hi	4238d0 <ferror@plt+0x21050>  // b.pmore
  423854:	mov	x5, x4
  423858:	add	x9, x9, #0x1
  42385c:	mov	x3, x6
  423860:	sub	x4, x4, #0x1
  423864:	nop
  423868:	add	x6, x3, #0x1
  42386c:	cbz	x5, 423d5c <ferror@plt+0x214dc>
  423870:	ldrb	w3, [x3, #1]
  423874:	cmp	w3, #0x64
  423878:	b.ne	423828 <ferror@plt+0x20fa8>  // b.any
  42387c:	mov	x5, x4
  423880:	add	x13, x13, #0x1
  423884:	mov	x3, x6
  423888:	sub	x4, x4, #0x1
  42388c:	b	423868 <ferror@plt+0x20fe8>
  423890:	cmp	w3, #0x6c
  423894:	b.eq	423980 <ferror@plt+0x21100>  // b.none
  423898:	b.ls	4238dc <ferror@plt+0x2105c>  // b.plast
  42389c:	cmp	w3, #0x71
  4238a0:	b.eq	423994 <ferror@plt+0x21114>  // b.none
  4238a4:	cmp	w3, #0x77
  4238a8:	b.ne	4238d0 <ferror@plt+0x21050>  // b.any
  4238ac:	mov	x5, x4
  4238b0:	add	x11, x11, #0x1
  4238b4:	mov	x3, x6
  4238b8:	sub	x4, x4, #0x1
  4238bc:	b	423868 <ferror@plt+0x20fe8>
  4238c0:	cmp	w3, #0x51
  4238c4:	b.eq	423994 <ferror@plt+0x21114>  // b.none
  4238c8:	cmp	w3, #0x57
  4238cc:	b.eq	4238ac <ferror@plt+0x2102c>  // b.none
  4238d0:	mov	w0, #0x0                   	// #0
  4238d4:	ldp	x29, x30, [sp], #32
  4238d8:	ret
  4238dc:	cmp	w3, #0x66
  4238e0:	b.eq	423914 <ferror@plt+0x21094>  // b.none
  4238e4:	sub	w3, w3, #0x69
  4238e8:	and	w3, w3, #0xff
  4238ec:	cmp	w3, #0x1
  4238f0:	b.hi	4238d0 <ferror@plt+0x21050>  // b.pmore
  4238f4:	b	423854 <ferror@plt+0x20fd4>
  4238f8:	cmp	w3, #0x44
  4238fc:	b.ne	4238d0 <ferror@plt+0x21050>  // b.any
  423900:	mov	x5, x4
  423904:	add	x13, x13, #0x1
  423908:	mov	x3, x6
  42390c:	sub	x4, x4, #0x1
  423910:	b	423868 <ferror@plt+0x20fe8>
  423914:	add	x5, x0, #0x1
  423918:	cbnz	x4, 4239ec <ferror@plt+0x2116c>
  42391c:	add	x0, x15, x10
  423920:	add	x3, x12, x16
  423924:	add	x3, x0, x3
  423928:	add	x0, x5, x11
  42392c:	cmp	x14, #0xf0
  423930:	add	x0, x3, x0
  423934:	add	x0, x0, x13
  423938:	ccmp	x9, #0x1, #0x2, ls  // ls = plast
  42393c:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
  423940:	mov	w0, #0x0                   	// #0
  423944:	cset	w4, hi  // hi = pmore
  423948:	b.hi	4238d4 <ferror@plt+0x21054>  // b.pmore
  42394c:	sub	x3, x14, #0x20
  423950:	tst	x3, #0xffffffffffffffdf
  423954:	cset	w3, ne  // ne = any
  423958:	cmp	x15, #0x0
  42395c:	csel	w3, w3, wzr, ne  // ne = any
  423960:	cbz	w3, 423ca4 <ferror@plt+0x21424>
  423964:	mov	w0, w4
  423968:	cmp	x14, #0x80
  42396c:	b.ne	4238d4 <ferror@plt+0x21054>  // b.any
  423970:	cmp	x16, #0x0
  423974:	cset	w0, ne  // ne = any
  423978:	csel	w3, w3, w0, ne  // ne = any
  42397c:	b	42375c <ferror@plt+0x20edc>
  423980:	mov	x5, x4
  423984:	add	x12, x12, #0x1
  423988:	mov	x3, x6
  42398c:	sub	x4, x4, #0x1
  423990:	b	423868 <ferror@plt+0x20fe8>
  423994:	mov	x5, x4
  423998:	add	x10, x10, #0x1
  42399c:	mov	x3, x6
  4239a0:	sub	x4, x4, #0x1
  4239a4:	b	423868 <ferror@plt+0x20fe8>
  4239a8:	ldrb	w3, [x1]
  4239ac:	and	w0, w3, #0xffffffdf
  4239b0:	cmp	w0, #0x44
  4239b4:	and	w0, w0, #0xff
  4239b8:	b.ne	423a20 <ferror@plt+0x211a0>  // b.any
  4239bc:	ldrb	w0, [x1, #1]
  4239c0:	cmp	w0, #0x64
  4239c4:	b.eq	423c4c <ferror@plt+0x213cc>  // b.none
  4239c8:	b.hi	423b2c <ferror@plt+0x212ac>  // b.pmore
  4239cc:	cmp	w0, #0x46
  4239d0:	b.eq	423c5c <ferror@plt+0x213dc>  // b.none
  4239d4:	cmp	w0, #0x4c
  4239d8:	b.ne	423b14 <ferror@plt+0x21294>  // b.any
  4239dc:	cmp	w3, #0x44
  4239e0:	mov	w0, #0x4040                	// #16448
  4239e4:	csel	w0, wzr, w0, ne  // ne = any
  4239e8:	b	4238d4 <ferror@plt+0x21054>
  4239ec:	ldrb	w18, [x8, #1120]
  4239f0:	sub	x17, x4, #0x1
  4239f4:	ldrb	w3, [x6, #1]
  4239f8:	cbnz	w18, 423a10 <ferror@plt+0x21190>
  4239fc:	sub	w18, w3, #0x31
  423a00:	cmp	x14, #0x0
  423a04:	and	w18, w18, #0xff
  423a08:	ccmp	w18, #0x8, #0x2, eq  // eq = none
  423a0c:	b.ls	423bc8 <ferror@plt+0x21348>  // b.plast
  423a10:	add	x6, x6, #0x1
  423a14:	mov	x4, x17
  423a18:	mov	x0, x5
  423a1c:	b	423820 <ferror@plt+0x20fa0>
  423a20:	ldrb	w7, [x8, #1163]
  423a24:	mov	x4, #0x1                   	// #1
  423a28:	cbz	w7, 4237f8 <ferror@plt+0x20f78>
  423a2c:	ldrb	w5, [x1, #1]
  423a30:	cmp	w5, #0x6b
  423a34:	b.eq	423c78 <ferror@plt+0x213f8>  // b.none
  423a38:	mov	x4, #0x1                   	// #1
  423a3c:	cmp	w5, #0x6b
  423a40:	b.hi	423b08 <ferror@plt+0x21288>  // b.pmore
  423a44:	cmp	w5, #0x4b
  423a48:	b.eq	423b5c <ferror@plt+0x212dc>  // b.none
  423a4c:	cmp	w5, #0x52
  423a50:	b.ne	4237f0 <ferror@plt+0x20f70>  // b.any
  423a54:	mov	w10, #0x1010                	// #4112
  423a58:	mov	w9, #0x1020                	// #4128
  423a5c:	mov	w8, #0x1040                	// #4160
  423a60:	mov	w5, #0x20                  	// #32
  423a64:	mov	w7, #0x40                  	// #64
  423a68:	mov	w11, #0x1000                	// #4096
  423a6c:	movk	w10, #0x10, lsl #16
  423a70:	movk	w9, #0x10, lsl #16
  423a74:	movk	w8, #0x10, lsl #16
  423a78:	mov	w6, #0x100010              	// #1048592
  423a7c:	movk	w5, #0x10, lsl #16
  423a80:	movk	w7, #0x10, lsl #16
  423a84:	mov	w0, #0x100000              	// #1048576
  423a88:	movk	w11, #0x10, lsl #16
  423a8c:	cmp	x2, #0x1
  423a90:	b.eq	4238d4 <ferror@plt+0x21054>  // b.none
  423a94:	ldrb	w3, [x1]
  423a98:	and	w0, w3, #0xffffffdf
  423a9c:	cmp	w0, #0x55
  423aa0:	b.ne	423ac4 <ferror@plt+0x21244>  // b.any
  423aa4:	cmp	x4, #0x1
  423aa8:	b.eq	423c34 <ferror@plt+0x213b4>  // b.none
  423aac:	ldrb	w3, [x1, #1]
  423ab0:	sub	x4, x2, #0x2
  423ab4:	mov	w6, w10
  423ab8:	mov	w5, w9
  423abc:	mov	w7, w8
  423ac0:	add	x1, x1, #0x1
  423ac4:	cmp	w3, #0x68
  423ac8:	b.eq	423c6c <ferror@plt+0x213ec>  // b.none
  423acc:	b.hi	423b98 <ferror@plt+0x21318>  // b.pmore
  423ad0:	cmp	w3, #0x48
  423ad4:	b.eq	423c6c <ferror@plt+0x213ec>  // b.none
  423ad8:	cmp	w3, #0x4c
  423adc:	b.ne	4238d0 <ferror@plt+0x21050>  // b.any
  423ae0:	mov	w0, w5
  423ae4:	cmp	x4, #0x1
  423ae8:	b.eq	4238d4 <ferror@plt+0x21054>  // b.none
  423aec:	cmp	x4, #0x2
  423af0:	mov	w0, #0x0                   	// #0
  423af4:	b.ne	4238d4 <ferror@plt+0x21054>  // b.any
  423af8:	ldrb	w0, [x1, #1]
  423afc:	cmp	w0, #0x4c
  423b00:	csel	w0, w7, wzr, eq  // eq = none
  423b04:	b	4238d4 <ferror@plt+0x21054>
  423b08:	cmp	w5, #0x72
  423b0c:	b.ne	4237f0 <ferror@plt+0x20f70>  // b.any
  423b10:	b	423a54 <ferror@plt+0x211d4>
  423b14:	cmp	w0, #0x44
  423b18:	b.ne	4237dc <ferror@plt+0x20f5c>  // b.any
  423b1c:	cmp	w3, #0x44
  423b20:	mov	w0, #0x4020                	// #16416
  423b24:	csel	w0, wzr, w0, ne  // ne = any
  423b28:	b	4238d4 <ferror@plt+0x21054>
  423b2c:	cmp	w0, #0x66
  423b30:	b.eq	423c3c <ferror@plt+0x213bc>  // b.none
  423b34:	cmp	w0, #0x6c
  423b38:	b.ne	4237dc <ferror@plt+0x20f5c>  // b.any
  423b3c:	cmp	w3, #0x44
  423b40:	mov	w0, #0x4040                	// #16448
  423b44:	csel	w0, w0, wzr, ne  // ne = any
  423b48:	b	4238d4 <ferror@plt+0x21054>
  423b4c:	sub	x4, x2, #0x1
  423b50:	ldrb	w5, [x1, x4]
  423b54:	cmp	w5, #0x6b
  423b58:	b.ne	423a3c <ferror@plt+0x211bc>  // b.any
  423b5c:	mov	w10, #0x1010                	// #4112
  423b60:	mov	w9, #0x1020                	// #4128
  423b64:	mov	w8, #0x1040                	// #4160
  423b68:	mov	w6, #0x10                  	// #16
  423b6c:	mov	w7, #0x40                  	// #64
  423b70:	mov	w11, #0x1000                	// #4096
  423b74:	movk	w10, #0x20, lsl #16
  423b78:	movk	w9, #0x20, lsl #16
  423b7c:	movk	w8, #0x20, lsl #16
  423b80:	movk	w6, #0x20, lsl #16
  423b84:	mov	w5, #0x200020              	// #2097184
  423b88:	movk	w7, #0x20, lsl #16
  423b8c:	mov	w0, #0x200000              	// #2097152
  423b90:	movk	w11, #0x20, lsl #16
  423b94:	b	423a8c <ferror@plt+0x2120c>
  423b98:	cmp	w3, #0x6c
  423b9c:	b.ne	4238d0 <ferror@plt+0x21050>  // b.any
  423ba0:	mov	w0, w5
  423ba4:	cmp	x4, #0x1
  423ba8:	b.eq	4238d4 <ferror@plt+0x21054>  // b.none
  423bac:	cmp	x4, #0x2
  423bb0:	mov	w0, #0x0                   	// #0
  423bb4:	b.ne	4238d4 <ferror@plt+0x21054>  // b.any
  423bb8:	ldrb	w0, [x1, #1]
  423bbc:	cmp	w0, #0x6c
  423bc0:	csel	w0, w7, wzr, eq  // eq = none
  423bc4:	b	4238d4 <ferror@plt+0x21054>
  423bc8:	sub	w18, w3, #0x30
  423bcc:	mov	x14, #0x0                   	// #0
  423bd0:	str	x19, [sp, #16]
  423bd4:	nop
  423bd8:	add	x14, x14, x14, lsl #2
  423bdc:	sxtw	x18, w18
  423be0:	mov	x19, x4
  423be4:	mov	x5, x6
  423be8:	add	x14, x18, x14, lsl #1
  423bec:	add	x6, x6, #0x1
  423bf0:	cmp	x14, #0xef
  423bf4:	mov	x4, x17
  423bf8:	cbz	x17, 423cf8 <ferror@plt+0x21478>
  423bfc:	ldrb	w3, [x6, #1]
  423c00:	sub	x17, x17, #0x1
  423c04:	sub	w18, w3, #0x30
  423c08:	and	w30, w18, #0xff
  423c0c:	ccmp	w30, #0x9, #0x2, ls  // ls = plast
  423c10:	b.ls	423bd8 <ferror@plt+0x21358>  // b.plast
  423c14:	cmp	w3, #0x78
  423c18:	b.eq	423d04 <ferror@plt+0x21484>  // b.none
  423c1c:	mov	x5, x4
  423c20:	sub	x4, x19, #0x2
  423c24:	add	x16, x16, #0x1
  423c28:	mov	x3, x6
  423c2c:	ldr	x19, [sp, #16]
  423c30:	b	423868 <ferror@plt+0x20fe8>
  423c34:	mov	w0, w11
  423c38:	b	4238d4 <ferror@plt+0x21054>
  423c3c:	cmp	w3, #0x44
  423c40:	mov	w0, #0x4010                	// #16400
  423c44:	csel	w0, w0, wzr, ne  // ne = any
  423c48:	b	4238d4 <ferror@plt+0x21054>
  423c4c:	cmp	w3, #0x44
  423c50:	mov	w0, #0x4020                	// #16416
  423c54:	csel	w0, w0, wzr, ne  // ne = any
  423c58:	b	4238d4 <ferror@plt+0x21054>
  423c5c:	cmp	w3, #0x44
  423c60:	mov	w0, #0x4010                	// #16400
  423c64:	csel	w0, wzr, w0, ne  // ne = any
  423c68:	b	4238d4 <ferror@plt+0x21054>
  423c6c:	cmp	x4, #0x1
  423c70:	csel	w0, w6, wzr, eq  // eq = none
  423c74:	b	4238d4 <ferror@plt+0x21054>
  423c78:	cmp	w0, #0x55
  423c7c:	mov	w0, #0x1000                	// #4096
  423c80:	movk	w0, #0x20, lsl #16
  423c84:	b.eq	4238d4 <ferror@plt+0x21054>  // b.none
  423c88:	mov	w6, #0x10                  	// #16
  423c8c:	mov	w7, #0x40                  	// #64
  423c90:	movk	w6, #0x20, lsl #16
  423c94:	mov	w5, #0x200020              	// #2097184
  423c98:	movk	w7, #0x20, lsl #16
  423c9c:	mov	x4, #0x1                   	// #1
  423ca0:	b	423ac4 <ferror@plt+0x21244>
  423ca4:	cmp	x16, #0x0
  423ca8:	cset	w4, ne  // ne = any
  423cac:	cmp	x14, #0x10
  423cb0:	csel	w3, w4, wzr, ne  // ne = any
  423cb4:	cbz	w3, 423d64 <ferror@plt+0x214e4>
  423cb8:	tst	x14, #0x1f
  423cbc:	b.ne	4238d4 <ferror@plt+0x21054>  // b.any
  423cc0:	b	42374c <ferror@plt+0x20ecc>
  423cc4:	orr	x1, x11, x10
  423cc8:	mov	w0, #0x0                   	// #0
  423ccc:	cmp	x1, #0x0
  423cd0:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  423cd4:	b.eq	4238d4 <ferror@plt+0x21054>  // b.none
  423cd8:	mov	w0, #0x10                  	// #16
  423cdc:	mov	w8, #0x20                  	// #32
  423ce0:	mov	w7, #0x40                  	// #64
  423ce4:	mov	w6, #0x10000               	// #65536
  423ce8:	mov	w2, #0x20000               	// #131072
  423cec:	mov	w4, #0x8000                	// #32768
  423cf0:	mov	w1, #0x0                   	// #0
  423cf4:	b	4237ac <ferror@plt+0x20f2c>
  423cf8:	mov	x5, #0x0                   	// #0
  423cfc:	mov	x4, #0xffffffffffffffff    	// #-1
  423d00:	b	423c24 <ferror@plt+0x213a4>
  423d04:	add	x3, x5, #0x2
  423d08:	sub	x4, x19, #0x3
  423d0c:	sub	x5, x19, #0x2
  423d10:	add	x15, x15, #0x1
  423d14:	ldr	x19, [sp, #16]
  423d18:	b	423868 <ferror@plt+0x20fe8>
  423d1c:	cmp	x2, #0x1
  423d20:	b.eq	4238d4 <ferror@plt+0x21054>  // b.none
  423d24:	cmp	x2, #0x2
  423d28:	b.ne	423788 <ferror@plt+0x20f08>  // b.any
  423d2c:	ldrb	w1, [x1, #1]
  423d30:	mov	w2, #0x6c                  	// #108
  423d34:	cmp	w1, #0x66
  423d38:	ccmp	w1, w2, #0x4, ne  // ne = any
  423d3c:	b.ne	423788 <ferror@plt+0x20f08>  // b.any
  423d40:	b	4238d4 <ferror@plt+0x21054>
  423d44:	cmp	x15, #0x0
  423d48:	orr	w0, w0, #0x800000
  423d4c:	csel	w0, w0, w4, ne  // ne = any
  423d50:	b	4238d4 <ferror@plt+0x21054>
  423d54:	mov	w0, w2
  423d58:	b	4238d4 <ferror@plt+0x21054>
  423d5c:	mov	x5, x0
  423d60:	b	42391c <ferror@plt+0x2109c>
  423d64:	mov	w3, w4
  423d68:	b	42374c <ferror@plt+0x20ecc>
  423d6c:	nop
  423d70:	ldp	x6, x5, [x0]
  423d74:	sub	sp, sp, #0x30
  423d78:	ldr	x4, [x0, #16]
  423d7c:	str	x4, [sp, #16]
  423d80:	ldrb	w4, [x0, #16]
  423d84:	negs	x3, x5
  423d88:	neg	x2, x6
  423d8c:	csinv	x2, x2, x6, eq  // eq = none
  423d90:	stp	x2, x3, [x0]
  423d94:	cmp	x1, #0x40
  423d98:	b.ls	423e00 <ferror@plt+0x21580>  // b.plast
  423d9c:	sub	x1, x1, #0x40
  423da0:	mov	x7, #0xffffffffffffffff    	// #-1
  423da4:	cmp	x1, #0x40
  423da8:	lsl	x1, x7, x1
  423dac:	bic	x1, x2, x1
  423db0:	csel	x2, x1, x2, cc  // cc = lo, ul, last
  423db4:	stp	x2, x3, [sp]
  423db8:	cmp	x2, x6
  423dbc:	ccmp	x3, x5, #0x0, eq  // eq = none
  423dc0:	ldp	x6, x7, [sp]
  423dc4:	stp	x6, x7, [x0]
  423dc8:	cset	w5, eq  // eq = none
  423dcc:	ldr	x1, [sp, #16]
  423dd0:	str	x1, [x0, #16]
  423dd4:	eor	w1, w4, #0x1
  423dd8:	mov	w4, #0x0                   	// #0
  423ddc:	tst	w5, w1
  423de0:	b.ne	423e1c <ferror@plt+0x2159c>  // b.any
  423de4:	strb	w4, [x0, #17]
  423de8:	ldp	x2, x3, [x0]
  423dec:	stp	x2, x3, [x8]
  423df0:	ldr	x0, [x0, #16]
  423df4:	str	x0, [x8, #16]
  423df8:	add	sp, sp, #0x30
  423dfc:	ret
  423e00:	mov	x2, x3
  423e04:	mov	x7, #0xffffffffffffffff    	// #-1
  423e08:	lsl	x3, x7, x1
  423e0c:	bic	x3, x2, x3
  423e10:	csel	x3, x3, x2, ne  // ne = any
  423e14:	mov	x2, #0x0                   	// #0
  423e18:	b	423db4 <ferror@plt+0x21534>
  423e1c:	orr	x2, x2, x3
  423e20:	cmp	x2, #0x0
  423e24:	cset	w4, ne  // ne = any
  423e28:	b	423de4 <ferror@plt+0x21564>
  423e2c:	nop
  423e30:	stp	x29, x30, [sp, #-80]!
  423e34:	mov	x29, sp
  423e38:	stp	x19, x20, [sp, #16]
  423e3c:	mov	x19, x0
  423e40:	stp	x21, x22, [sp, #32]
  423e44:	mov	x21, x8
  423e48:	stp	x23, x24, [sp, #48]
  423e4c:	mov	w23, w1
  423e50:	mov	w24, #0x0                   	// #0
  423e54:	str	x25, [sp, #64]
  423e58:	stp	xzr, xzr, [x8]
  423e5c:	ldrb	w1, [x0, #26]
  423e60:	strh	wzr, [x8, #16]
  423e64:	add	w1, w1, #0x1
  423e68:	strb	w1, [x0, #26]
  423e6c:	bl	43a008 <ferror@plt+0x37788>
  423e70:	mov	x20, x0
  423e74:	ldrb	w0, [x0, #4]
  423e78:	cmp	w0, #0x14
  423e7c:	b.eq	423fc0 <ferror@plt+0x21740>  // b.none
  423e80:	cmp	w0, #0x3e
  423e84:	b.eq	423ef0 <ferror@plt+0x21670>  // b.none
  423e88:	cmp	w0, #0x44
  423e8c:	mov	w25, #0x1                   	// #1
  423e90:	b.eq	423ef4 <ferror@plt+0x21674>  // b.none
  423e94:	cmp	w0, #0x3
  423e98:	b.eq	423fd8 <ferror@plt+0x21758>  // b.none
  423e9c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  423ea0:	mov	x0, x19
  423ea4:	add	x2, x2, #0x5d8
  423ea8:	mov	w1, #0x3                   	// #3
  423eac:	bl	422e10 <ferror@plt+0x20590>
  423eb0:	cbz	w24, 423f60 <ferror@plt+0x216e0>
  423eb4:	ldr	x0, [x19, #448]
  423eb8:	ldurb	w0, [x0, #-20]
  423ebc:	cmp	w0, #0x16
  423ec0:	b.eq	423f60 <ferror@plt+0x216e0>  // b.none
  423ec4:	mov	x0, x19
  423ec8:	bl	43a008 <ferror@plt+0x37788>
  423ecc:	ldrb	w0, [x0, #4]
  423ed0:	cmp	w0, #0x15
  423ed4:	b.eq	423f60 <ferror@plt+0x216e0>  // b.none
  423ed8:	mov	x0, x19
  423edc:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  423ee0:	mov	w1, #0x3                   	// #3
  423ee4:	add	x2, x2, #0x610
  423ee8:	bl	422e10 <ferror@plt+0x20590>
  423eec:	b	423f60 <ferror@plt+0x216e0>
  423ef0:	mov	w25, #0x0                   	// #0
  423ef4:	ldr	w0, [x20, #8]
  423ef8:	sub	w0, w0, #0x1
  423efc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  423f00:	ldr	x1, [x20, #16]
  423f04:	mov	x22, x0
  423f08:	ldr	w2, [x20, #8]
  423f0c:	add	x1, x1, #0x1
  423f10:	sub	w2, w2, #0x2
  423f14:	bl	402220 <memcpy@plt>
  423f18:	ldr	w0, [x20, #8]
  423f1c:	sub	w0, w0, #0x2
  423f20:	strb	wzr, [x22, w0, uxtw]
  423f24:	ldr	x20, [x20, #8]
  423f28:	mov	w3, w23
  423f2c:	mov	w2, w25
  423f30:	mov	x1, x22
  423f34:	mov	x0, x19
  423f38:	bl	42a430 <ferror@plt+0x27bb0>
  423f3c:	tst	w0, #0xff
  423f40:	b.eq	423f4c <ferror@plt+0x216cc>  // b.none
  423f44:	mov	x0, #0x1                   	// #1
  423f48:	str	x0, [x21, #8]
  423f4c:	mov	x0, x22
  423f50:	bl	402640 <free@plt>
  423f54:	cbnz	w24, 423f84 <ferror@plt+0x21704>
  423f58:	cbz	x20, 423f60 <ferror@plt+0x216e0>
  423f5c:	str	x20, [x19, #432]
  423f60:	ldrb	w0, [x19, #26]
  423f64:	sub	w0, w0, #0x1
  423f68:	strb	w0, [x19, #26]
  423f6c:	ldp	x19, x20, [sp, #16]
  423f70:	ldp	x21, x22, [sp, #32]
  423f74:	ldp	x23, x24, [sp, #48]
  423f78:	ldr	x25, [sp, #64]
  423f7c:	ldp	x29, x30, [sp], #80
  423f80:	ret
  423f84:	ldr	x0, [x19, #448]
  423f88:	ldurb	w0, [x0, #-20]
  423f8c:	cmp	w0, #0x16
  423f90:	b.eq	423f58 <ferror@plt+0x216d8>  // b.none
  423f94:	mov	x0, x19
  423f98:	bl	43a008 <ferror@plt+0x37788>
  423f9c:	ldrb	w0, [x0, #4]
  423fa0:	cmp	w0, #0x15
  423fa4:	b.eq	423f58 <ferror@plt+0x216d8>  // b.none
  423fa8:	mov	x0, x19
  423fac:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  423fb0:	mov	w1, #0x3                   	// #3
  423fb4:	add	x2, x2, #0x610
  423fb8:	bl	422e10 <ferror@plt+0x20590>
  423fbc:	b	423f58 <ferror@plt+0x216d8>
  423fc0:	mov	x0, x19
  423fc4:	mov	w24, #0x1                   	// #1
  423fc8:	bl	43a008 <ferror@plt+0x37788>
  423fcc:	mov	x20, x0
  423fd0:	ldrb	w0, [x0, #4]
  423fd4:	b	423e80 <ferror@plt+0x21600>
  423fd8:	mov	x0, x19
  423fdc:	mov	x20, #0x0                   	// #0
  423fe0:	bl	422d40 <ferror@plt+0x204c0>
  423fe4:	mov	w25, #0x1                   	// #1
  423fe8:	mov	x22, x0
  423fec:	cbnz	x0, 423f28 <ferror@plt+0x216a8>
  423ff0:	cbz	w24, 423f60 <ferror@plt+0x216e0>
  423ff4:	b	423eb4 <ferror@plt+0x21634>
  423ff8:	ldrb	w3, [x0, #16]
  423ffc:	sub	sp, sp, #0x30
  424000:	cmp	x1, #0x40
  424004:	ldp	x9, x6, [x0]
  424008:	b.hi	4240f0 <ferror@plt+0x21870>  // b.pmore
  42400c:	sub	w4, w1, #0x1
  424010:	cmp	x1, x2
  424014:	lsr	x4, x6, x4
  424018:	mvn	x4, x4
  42401c:	and	w4, w4, #0x1
  424020:	orr	w3, w3, w4
  424024:	eor	w3, w3, #0x1
  424028:	and	x3, x3, #0xff
  42402c:	neg	x3, x3
  424030:	b.hi	424084 <ferror@plt+0x21804>  // b.pmore
  424034:	ldr	x2, [x0, #16]
  424038:	stp	x3, x3, [x0]
  42403c:	str	x2, [sp, #16]
  424040:	mov	x2, #0xffffffffffffffff    	// #-1
  424044:	cmp	x1, #0x40
  424048:	lsl	x1, x2, x1
  42404c:	bic	x1, x3, x1
  424050:	csel	x3, x1, x3, ne  // ne = any
  424054:	mov	x4, #0x0                   	// #0
  424058:	ldr	x1, [sp, #16]
  42405c:	stp	x4, x3, [sp]
  424060:	str	x1, [x0, #16]
  424064:	strb	wzr, [x0, #17]
  424068:	ldp	x2, x3, [sp]
  42406c:	stp	x2, x3, [x0]
  424070:	ldr	x0, [x0, #16]
  424074:	stp	x2, x3, [x8]
  424078:	str	x0, [x8, #16]
  42407c:	add	sp, sp, #0x30
  424080:	ret
  424084:	cmp	x1, #0x3f
  424088:	b.hi	424158 <ferror@plt+0x218d8>  // b.pmore
  42408c:	mov	x5, x3
  424090:	mov	x4, x3
  424094:	lsl	x7, x3, x1
  424098:	orr	x3, x7, x6
  42409c:	cbz	x2, 4240c0 <ferror@plt+0x21840>
  4240a0:	mov	w6, #0x40                  	// #64
  4240a4:	sub	w6, w6, w2
  4240a8:	lsr	x3, x3, x2
  4240ac:	lsl	x5, x5, x6
  4240b0:	lsl	x6, x4, x6
  4240b4:	orr	x3, x3, x6
  4240b8:	lsr	x4, x4, x2
  4240bc:	orr	x4, x4, x5
  4240c0:	ldr	x2, [x0, #16]
  4240c4:	stp	x4, x3, [x0]
  4240c8:	cmp	x1, #0x40
  4240cc:	str	x2, [sp, #16]
  4240d0:	b.ls	424040 <ferror@plt+0x217c0>  // b.plast
  4240d4:	sub	x7, x1, #0x40
  4240d8:	mov	x1, #0xffffffffffffffff    	// #-1
  4240dc:	cmp	x7, #0x40
  4240e0:	lsl	x1, x1, x7
  4240e4:	bic	x1, x4, x1
  4240e8:	csel	x4, x1, x4, cc  // cc = lo, ul, last
  4240ec:	b	424058 <ferror@plt+0x217d8>
  4240f0:	sub	w4, w1, #0x41
  4240f4:	cmp	x1, x2
  4240f8:	sub	x7, x1, #0x40
  4240fc:	lsr	x4, x9, x4
  424100:	mvn	x4, x4
  424104:	and	w4, w4, #0x1
  424108:	orr	w3, w3, w4
  42410c:	eor	w3, w3, #0x1
  424110:	and	x3, x3, #0xff
  424114:	neg	x5, x3
  424118:	b.ls	42413c <ferror@plt+0x218bc>  // b.plast
  42411c:	cmp	x1, #0x7f
  424120:	mov	x3, x9
  424124:	b.ls	424154 <ferror@plt+0x218d4>  // b.plast
  424128:	cmp	x2, #0x3f
  42412c:	b.ls	42416c <ferror@plt+0x218ec>  // b.plast
  424130:	sub	x2, x2, #0x40
  424134:	mov	x4, x5
  424138:	b	42409c <ferror@plt+0x2181c>
  42413c:	ldr	x1, [x0, #16]
  424140:	mov	x3, x5
  424144:	mov	x4, x5
  424148:	stp	x5, x5, [x0]
  42414c:	str	x1, [sp, #16]
  424150:	b	4240d8 <ferror@plt+0x21858>
  424154:	mov	x3, x5
  424158:	sub	w4, w1, #0x40
  42415c:	mov	x5, x3
  424160:	lsl	x3, x3, x4
  424164:	orr	x3, x3, x9
  424168:	b	424128 <ferror@plt+0x218a8>
  42416c:	mov	x4, x3
  424170:	mov	x3, x6
  424174:	b	42409c <ferror@plt+0x2181c>
  424178:	ldrb	w14, [x0, #16]
  42417c:	mov	x10, x0
  424180:	cmp	x2, x1
  424184:	mov	x12, x8
  424188:	ldp	x15, x18, [x0]
  42418c:	b.cc	4241cc <ferror@plt+0x2194c>  // b.lo, b.ul, b.last
  424190:	mov	w0, #0x0                   	// #0
  424194:	cbnz	w14, 4241a4 <ferror@plt+0x21924>
  424198:	orr	x15, x18, x15
  42419c:	cmp	x15, #0x0
  4241a0:	cset	w0, ne  // ne = any
  4241a4:	mov	x13, #0x0                   	// #0
  4241a8:	mov	x11, #0x0                   	// #0
  4241ac:	stp	x11, x13, [x10]
  4241b0:	strb	w14, [x10, #16]
  4241b4:	strb	w0, [x10, #17]
  4241b8:	ldp	x0, x1, [x10]
  4241bc:	stp	x0, x1, [x12]
  4241c0:	ldr	x0, [x10, #16]
  4241c4:	str	x0, [x12, #16]
  4241c8:	ret
  4241cc:	stp	x29, x30, [sp, #-96]!
  4241d0:	cmp	x2, #0x3f
  4241d4:	mov	x29, sp
  4241d8:	b.ls	424270 <ferror@plt+0x219f0>  // b.plast
  4241dc:	sub	x0, x2, #0x40
  4241e0:	mov	x11, x18
  4241e4:	mov	x13, #0x0                   	// #0
  4241e8:	cbz	x0, 424200 <ferror@plt+0x21980>
  4241ec:	neg	w3, w0
  4241f0:	lsl	x11, x11, x0
  4241f4:	lsr	x3, x13, x3
  4241f8:	orr	x11, x3, x11
  4241fc:	lsl	x13, x13, x0
  424200:	ldr	x0, [x10, #16]
  424204:	stp	x11, x13, [x10]
  424208:	cmp	x1, #0x40
  42420c:	str	x0, [sp, #64]
  424210:	b.ls	424280 <ferror@plt+0x21a00>  // b.plast
  424214:	sub	x0, x1, #0x40
  424218:	mov	x3, #0xffffffffffffffff    	// #-1
  42421c:	cmp	x0, #0x40
  424220:	lsl	x0, x3, x0
  424224:	bic	x0, x11, x0
  424228:	csel	x11, x0, x11, cc  // cc = lo, ul, last
  42422c:	stp	x11, x13, [sp, #48]
  424230:	mov	w0, #0x0                   	// #0
  424234:	ldp	x4, x5, [sp, #48]
  424238:	stp	x4, x5, [x10]
  42423c:	ldr	x3, [sp, #64]
  424240:	str	x3, [x10, #16]
  424244:	stp	x4, x5, [sp, #72]
  424248:	cbz	w14, 4242b4 <ferror@plt+0x21a34>
  42424c:	stp	x11, x13, [x10]
  424250:	strb	w14, [x10, #16]
  424254:	strb	w0, [x10, #17]
  424258:	ldp	x0, x1, [x10]
  42425c:	stp	x0, x1, [x12]
  424260:	ldr	x0, [x10, #16]
  424264:	str	x0, [x12, #16]
  424268:	ldp	x29, x30, [sp], #96
  42426c:	ret
  424270:	mov	x13, x18
  424274:	mov	x11, x15
  424278:	mov	x0, x2
  42427c:	b	4241e8 <ferror@plt+0x21968>
  424280:	mov	x0, #0xffffffffffffffff    	// #-1
  424284:	mov	x11, #0x0                   	// #0
  424288:	lsl	x0, x0, x1
  42428c:	bic	x0, x13, x0
  424290:	csel	x13, x0, x13, ne  // ne = any
  424294:	stp	x11, x13, [sp, #48]
  424298:	mov	w0, #0x0                   	// #0
  42429c:	ldp	x4, x5, [sp, #48]
  4242a0:	stp	x4, x5, [x10]
  4242a4:	ldr	x3, [sp, #64]
  4242a8:	str	x3, [x10, #16]
  4242ac:	stp	x4, x5, [sp, #72]
  4242b0:	cbnz	w14, 42424c <ferror@plt+0x219cc>
  4242b4:	add	x0, sp, #0x10
  4242b8:	add	x8, sp, #0x48
  4242bc:	stp	x4, x5, [sp, #16]
  4242c0:	str	x3, [sp, #32]
  4242c4:	bl	423ff8 <ferror@plt+0x21778>
  4242c8:	ldr	x1, [sp, #80]
  4242cc:	mov	w0, #0x1                   	// #1
  4242d0:	cmp	x1, x18
  4242d4:	b.ne	42424c <ferror@plt+0x219cc>  // b.any
  4242d8:	ldr	x0, [sp, #72]
  4242dc:	cmp	x0, x15
  4242e0:	cset	w0, ne  // ne = any
  4242e4:	b	42424c <ferror@plt+0x219cc>
  4242e8:	stp	x29, x30, [sp, #-32]!
  4242ec:	cmp	x2, #0x2
  4242f0:	mov	x8, x0
  4242f4:	mov	x29, sp
  4242f8:	b.eq	424534 <ferror@plt+0x21cb4>  // b.none
  4242fc:	ldrb	w7, [x0, #1163]
  424300:	cbz	w7, 4243c8 <ferror@plt+0x21b48>
  424304:	cbnz	x2, 4245fc <ferror@plt+0x21d7c>
  424308:	mov	x14, #0x0                   	// #0
  42430c:	mov	x16, #0x0                   	// #0
  424310:	mov	x17, #0x0                   	// #0
  424314:	mov	x9, #0x0                   	// #0
  424318:	mov	x11, #0x0                   	// #0
  42431c:	mov	x10, #0x0                   	// #0
  424320:	mov	x13, #0x0                   	// #0
  424324:	mov	x12, #0x0                   	// #0
  424328:	mov	w3, #0x0                   	// #0
  42432c:	cmp	x14, #0x60
  424330:	mov	w0, #0x0                   	// #0
  424334:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  424338:	b.ne	424480 <ferror@plt+0x21c00>  // b.any
  42433c:	cbz	x9, 424894 <ferror@plt+0x22014>
  424340:	mov	w0, #0x0                   	// #0
  424344:	cbz	w7, 424480 <ferror@plt+0x21c00>
  424348:	ldrb	w4, [x8, #1120]
  42434c:	cbz	w4, 424368 <ferror@plt+0x21ae8>
  424350:	ldr	w4, [x8, #1116]
  424354:	cmp	w4, #0xe
  424358:	b.le	424368 <ferror@plt+0x21ae8>
  42435c:	ldrb	w4, [x1]
  424360:	cmp	w4, #0x69
  424364:	b.eq	4248e8 <ferror@plt+0x22068>  // b.none
  424368:	mov	w7, #0x2000                	// #8192
  42436c:	mov	w5, #0x2000                	// #8192
  424370:	mov	w0, #0x2010                	// #8208
  424374:	mov	w2, #0x2020                	// #8224
  424378:	mov	w4, #0x2040                	// #8256
  42437c:	movk	w7, #0x1, lsl #16
  424380:	movk	w5, #0x2, lsl #16
  424384:	mov	w6, #0xa000                	// #40960
  424388:	mov	w1, #0x2000                	// #8192
  42438c:	cbnz	x16, 424480 <ferror@plt+0x21c00>
  424390:	mov	w0, w2
  424394:	cbnz	x12, 424480 <ferror@plt+0x21c00>
  424398:	mov	w0, w4
  42439c:	cbnz	x13, 424480 <ferror@plt+0x21c00>
  4243a0:	mov	w0, w7
  4243a4:	cbnz	x10, 424480 <ferror@plt+0x21c00>
  4243a8:	cbnz	x11, 424910 <ferror@plt+0x22090>
  4243ac:	orr	w0, w1, w14, lsl #24
  4243b0:	cbz	w3, 424918 <ferror@plt+0x22098>
  4243b4:	orr	w0, w0, #0x400000
  4243b8:	b	424480 <ferror@plt+0x21c00>
  4243bc:	ldrb	w7, [x8, #1163]
  4243c0:	cbnz	w7, 4245fc <ferror@plt+0x21d7c>
  4243c4:	nop
  4243c8:	sub	x4, x2, #0x1
  4243cc:	mov	w7, #0x0                   	// #0
  4243d0:	cbz	x2, 424308 <ferror@plt+0x21a88>
  4243d4:	str	x19, [sp, #16]
  4243d8:	ldrb	w3, [x1]
  4243dc:	mov	x5, x1
  4243e0:	mov	x9, #0x0                   	// #0
  4243e4:	mov	x11, #0x0                   	// #0
  4243e8:	mov	x10, #0x0                   	// #0
  4243ec:	mov	x13, #0x0                   	// #0
  4243f0:	mov	x12, #0x0                   	// #0
  4243f4:	mov	x18, #0x0                   	// #0
  4243f8:	mov	x17, #0x0                   	// #0
  4243fc:	mov	x14, #0x0                   	// #0
  424400:	mov	x15, #0x0                   	// #0
  424404:	nop
  424408:	cmp	w3, #0x64
  42440c:	b.eq	4244b8 <ferror@plt+0x21c38>  // b.none
  424410:	b.hi	424488 <ferror@plt+0x21c08>  // b.pmore
  424414:	cmp	w3, #0x4c
  424418:	b.eq	4244d8 <ferror@plt+0x21c58>  // b.none
  42441c:	b.hi	4244c4 <ferror@plt+0x21c44>  // b.pmore
  424420:	cmp	w3, #0x46
  424424:	b.eq	4244f0 <ferror@plt+0x21c70>  // b.none
  424428:	b.ls	4244b0 <ferror@plt+0x21c30>  // b.plast
  42442c:	sub	w3, w3, #0x49
  424430:	and	w3, w3, #0xff
  424434:	cmp	w3, #0x1
  424438:	b.hi	424478 <ferror@plt+0x21bf8>  // b.pmore
  42443c:	add	x9, x9, #0x1
  424440:	sub	x6, x4, #0x1
  424444:	nop
  424448:	add	x0, x5, #0x1
  42444c:	cbz	x4, 424928 <ferror@plt+0x220a8>
  424450:	ldrb	w3, [x5, #1]
  424454:	mov	x4, x6
  424458:	mov	x5, x0
  42445c:	b	424408 <ferror@plt+0x21b88>
  424460:	cmp	w3, #0x66
  424464:	b.eq	4244f0 <ferror@plt+0x21c70>  // b.none
  424468:	sub	w3, w3, #0x69
  42446c:	and	w3, w3, #0xff
  424470:	cmp	w3, #0x1
  424474:	b.ls	42443c <ferror@plt+0x21bbc>  // b.plast
  424478:	ldr	x19, [sp, #16]
  42447c:	mov	w0, #0x0                   	// #0
  424480:	ldp	x29, x30, [sp], #32
  424484:	ret
  424488:	cmp	w3, #0x6c
  42448c:	b.eq	4244d8 <ferror@plt+0x21c58>  // b.none
  424490:	b.ls	424460 <ferror@plt+0x21be0>  // b.plast
  424494:	cmp	w3, #0x71
  424498:	b.eq	4244e4 <ferror@plt+0x21c64>  // b.none
  42449c:	cmp	w3, #0x77
  4244a0:	b.ne	424478 <ferror@plt+0x21bf8>  // b.any
  4244a4:	add	x10, x10, #0x1
  4244a8:	sub	x6, x4, #0x1
  4244ac:	b	424448 <ferror@plt+0x21bc8>
  4244b0:	cmp	w3, #0x44
  4244b4:	b.ne	424478 <ferror@plt+0x21bf8>  // b.any
  4244b8:	add	x12, x12, #0x1
  4244bc:	sub	x6, x4, #0x1
  4244c0:	b	424448 <ferror@plt+0x21bc8>
  4244c4:	cmp	w3, #0x51
  4244c8:	b.eq	4244e4 <ferror@plt+0x21c64>  // b.none
  4244cc:	cmp	w3, #0x57
  4244d0:	b.eq	4244a4 <ferror@plt+0x21c24>  // b.none
  4244d4:	b	424478 <ferror@plt+0x21bf8>
  4244d8:	add	x13, x13, #0x1
  4244dc:	sub	x6, x4, #0x1
  4244e0:	b	424448 <ferror@plt+0x21bc8>
  4244e4:	add	x11, x11, #0x1
  4244e8:	sub	x6, x4, #0x1
  4244ec:	b	424448 <ferror@plt+0x21bc8>
  4244f0:	add	x16, x15, #0x1
  4244f4:	cbnz	x4, 424578 <ferror@plt+0x21cf8>
  4244f8:	add	x0, x13, x10
  4244fc:	add	x3, x18, x12
  424500:	add	x3, x0, x3
  424504:	add	x0, x11, x17
  424508:	cmp	x14, #0xf0
  42450c:	add	x0, x3, x0
  424510:	add	x0, x0, x16
  424514:	ccmp	x9, #0x1, #0x2, ls  // ls = plast
  424518:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
  42451c:	mov	w0, #0x0                   	// #0
  424520:	cset	w4, hi  // hi = pmore
  424524:	b.ls	4247c8 <ferror@plt+0x21f48>  // b.plast
  424528:	ldr	x19, [sp, #16]
  42452c:	ldp	x29, x30, [sp], #32
  424530:	ret
  424534:	ldrb	w3, [x1]
  424538:	and	w0, w3, #0xffffffdf
  42453c:	cmp	w0, #0x44
  424540:	and	w0, w0, #0xff
  424544:	b.ne	4245b0 <ferror@plt+0x21d30>  // b.any
  424548:	ldrb	w0, [x1, #1]
  42454c:	cmp	w0, #0x64
  424550:	b.eq	424828 <ferror@plt+0x21fa8>  // b.none
  424554:	b.hi	4245c4 <ferror@plt+0x21d44>  // b.pmore
  424558:	cmp	w0, #0x46
  42455c:	b.eq	424808 <ferror@plt+0x21f88>  // b.none
  424560:	cmp	w0, #0x4c
  424564:	b.ne	4245e4 <ferror@plt+0x21d64>  // b.any
  424568:	cmp	w3, #0x44
  42456c:	mov	w0, #0x4040                	// #16448
  424570:	csel	w0, wzr, w0, ne  // ne = any
  424574:	b	424480 <ferror@plt+0x21c00>
  424578:	ldrb	w30, [x8, #1120]
  42457c:	sub	x0, x4, #0x1
  424580:	ldrb	w3, [x5, #1]
  424584:	mov	x6, x0
  424588:	cbnz	w30, 4245a0 <ferror@plt+0x21d20>
  42458c:	sub	w30, w3, #0x31
  424590:	cmp	x14, #0x0
  424594:	and	w30, w30, #0xff
  424598:	ccmp	w30, #0x8, #0x2, eq  // eq = none
  42459c:	b.ls	424764 <ferror@plt+0x21ee4>  // b.plast
  4245a0:	add	x5, x5, #0x1
  4245a4:	mov	x15, x16
  4245a8:	mov	x4, x6
  4245ac:	b	424408 <ferror@plt+0x21b88>
  4245b0:	ldrb	w7, [x8, #1163]
  4245b4:	cbnz	w7, 424750 <ferror@plt+0x21ed0>
  4245b8:	mov	x4, #0x1                   	// #1
  4245bc:	str	x19, [sp, #16]
  4245c0:	b	4243dc <ferror@plt+0x21b5c>
  4245c4:	cmp	w0, #0x66
  4245c8:	b.eq	424818 <ferror@plt+0x21f98>  // b.none
  4245cc:	cmp	w0, #0x6c
  4245d0:	b.ne	4243bc <ferror@plt+0x21b3c>  // b.any
  4245d4:	cmp	w3, #0x44
  4245d8:	mov	w0, #0x4040                	// #16448
  4245dc:	csel	w0, w0, wzr, ne  // ne = any
  4245e0:	b	424480 <ferror@plt+0x21c00>
  4245e4:	cmp	w0, #0x44
  4245e8:	b.ne	4243bc <ferror@plt+0x21b3c>  // b.any
  4245ec:	cmp	w3, #0x44
  4245f0:	mov	w0, #0x4020                	// #16416
  4245f4:	csel	w0, wzr, w0, ne  // ne = any
  4245f8:	b	424480 <ferror@plt+0x21c00>
  4245fc:	sub	x4, x2, #0x1
  424600:	ldrb	w5, [x1, x4]
  424604:	cmp	w5, #0x6b
  424608:	b.eq	424714 <ferror@plt+0x21e94>  // b.none
  42460c:	cmp	w5, #0x6b
  424610:	b.hi	4246d8 <ferror@plt+0x21e58>  // b.pmore
  424614:	cmp	w5, #0x4b
  424618:	b.eq	424714 <ferror@plt+0x21e94>  // b.none
  42461c:	cmp	w5, #0x52
  424620:	b.ne	4243d0 <ferror@plt+0x21b50>  // b.any
  424624:	mov	w10, #0x1040                	// #4160
  424628:	mov	w9, #0x1020                	// #4128
  42462c:	mov	w8, #0x1010                	// #4112
  424630:	mov	w7, #0x40                  	// #64
  424634:	mov	w5, #0x20                  	// #32
  424638:	mov	w11, #0x1000                	// #4096
  42463c:	movk	w10, #0x10, lsl #16
  424640:	movk	w9, #0x10, lsl #16
  424644:	movk	w8, #0x10, lsl #16
  424648:	movk	w7, #0x10, lsl #16
  42464c:	movk	w5, #0x10, lsl #16
  424650:	mov	w6, #0x100010              	// #1048592
  424654:	movk	w11, #0x10, lsl #16
  424658:	mov	w0, #0x100000              	// #1048576
  42465c:	cmp	x2, #0x1
  424660:	b.eq	424480 <ferror@plt+0x21c00>  // b.none
  424664:	ldrb	w3, [x1]
  424668:	and	w0, w3, #0xffffffdf
  42466c:	cmp	w0, #0x55
  424670:	b.ne	424694 <ferror@plt+0x21e14>  // b.any
  424674:	cmp	x4, #0x1
  424678:	b.eq	4247c0 <ferror@plt+0x21f40>  // b.none
  42467c:	ldrb	w3, [x1, #1]
  424680:	sub	x4, x2, #0x2
  424684:	mov	w7, w10
  424688:	mov	w5, w9
  42468c:	mov	w6, w8
  424690:	add	x1, x1, #0x1
  424694:	cmp	w3, #0x68
  424698:	b.eq	424838 <ferror@plt+0x21fb8>  // b.none
  42469c:	b.hi	4246e4 <ferror@plt+0x21e64>  // b.pmore
  4246a0:	cmp	w3, #0x48
  4246a4:	b.eq	424838 <ferror@plt+0x21fb8>  // b.none
  4246a8:	cmp	w3, #0x4c
  4246ac:	b.ne	424800 <ferror@plt+0x21f80>  // b.any
  4246b0:	mov	w0, w5
  4246b4:	cmp	x4, #0x1
  4246b8:	b.eq	424480 <ferror@plt+0x21c00>  // b.none
  4246bc:	cmp	x4, #0x2
  4246c0:	mov	w0, #0x0                   	// #0
  4246c4:	b.ne	424480 <ferror@plt+0x21c00>  // b.any
  4246c8:	ldrb	w0, [x1, #1]
  4246cc:	cmp	w0, #0x4c
  4246d0:	csel	w0, w7, wzr, eq  // eq = none
  4246d4:	b	424480 <ferror@plt+0x21c00>
  4246d8:	cmp	w5, #0x72
  4246dc:	b.ne	4243d0 <ferror@plt+0x21b50>  // b.any
  4246e0:	b	424624 <ferror@plt+0x21da4>
  4246e4:	cmp	w3, #0x6c
  4246e8:	b.ne	424800 <ferror@plt+0x21f80>  // b.any
  4246ec:	mov	w0, w5
  4246f0:	cmp	x4, #0x1
  4246f4:	b.eq	424480 <ferror@plt+0x21c00>  // b.none
  4246f8:	cmp	x4, #0x2
  4246fc:	mov	w0, #0x0                   	// #0
  424700:	b.ne	424480 <ferror@plt+0x21c00>  // b.any
  424704:	ldrb	w0, [x1, #1]
  424708:	cmp	w0, #0x6c
  42470c:	csel	w0, w7, wzr, eq  // eq = none
  424710:	b	424480 <ferror@plt+0x21c00>
  424714:	mov	w10, #0x1040                	// #4160
  424718:	mov	w9, #0x1020                	// #4128
  42471c:	mov	w8, #0x1010                	// #4112
  424720:	mov	w7, #0x40                  	// #64
  424724:	mov	w6, #0x10                  	// #16
  424728:	mov	w11, #0x1000                	// #4096
  42472c:	movk	w10, #0x20, lsl #16
  424730:	movk	w9, #0x20, lsl #16
  424734:	movk	w8, #0x20, lsl #16
  424738:	movk	w7, #0x20, lsl #16
  42473c:	mov	w5, #0x200020              	// #2097184
  424740:	movk	w6, #0x20, lsl #16
  424744:	movk	w11, #0x20, lsl #16
  424748:	mov	w0, #0x200000              	// #2097152
  42474c:	b	42465c <ferror@plt+0x21ddc>
  424750:	ldrb	w5, [x1, #1]
  424754:	cmp	w5, #0x6b
  424758:	b.eq	424844 <ferror@plt+0x21fc4>  // b.none
  42475c:	mov	x4, #0x1                   	// #1
  424760:	b	42460c <ferror@plt+0x21d8c>
  424764:	sub	w16, w3, #0x30
  424768:	mov	x14, #0x0                   	// #0
  42476c:	nop
  424770:	add	x14, x14, x14, lsl #2
  424774:	sxtw	x16, w16
  424778:	mov	x6, x4
  42477c:	mov	x19, x5
  424780:	add	x14, x16, x14, lsl #1
  424784:	add	x5, x5, #0x1
  424788:	cmp	x14, #0xef
  42478c:	mov	x4, x0
  424790:	cbz	x0, 4248c8 <ferror@plt+0x22048>
  424794:	ldrb	w3, [x5, #1]
  424798:	sub	x0, x0, #0x1
  42479c:	sub	w16, w3, #0x30
  4247a0:	and	w30, w16, #0xff
  4247a4:	ccmp	w30, #0x9, #0x2, ls  // ls = plast
  4247a8:	b.ls	424770 <ferror@plt+0x21ef0>  // b.plast
  4247ac:	cmp	w3, #0x78
  4247b0:	b.eq	4248d4 <ferror@plt+0x22054>  // b.none
  4247b4:	sub	x6, x6, #0x2
  4247b8:	add	x18, x18, #0x1
  4247bc:	b	424448 <ferror@plt+0x21bc8>
  4247c0:	mov	w0, w11
  4247c4:	b	424480 <ferror@plt+0x21c00>
  4247c8:	sub	x3, x14, #0x20
  4247cc:	tst	x3, #0xffffffffffffffdf
  4247d0:	cset	w3, ne  // ne = any
  4247d4:	cmp	x17, #0x0
  4247d8:	csel	w3, w3, wzr, ne  // ne = any
  4247dc:	cbz	w3, 424870 <ferror@plt+0x21ff0>
  4247e0:	mov	w0, w4
  4247e4:	cmp	x14, #0x80
  4247e8:	b.ne	424528 <ferror@plt+0x21ca8>  // b.any
  4247ec:	cmp	x18, #0x0
  4247f0:	cset	w0, ne  // ne = any
  4247f4:	csel	w3, w3, w0, ne  // ne = any
  4247f8:	ldr	x19, [sp, #16]
  4247fc:	b	42433c <ferror@plt+0x21abc>
  424800:	mov	w0, #0x0                   	// #0
  424804:	b	424480 <ferror@plt+0x21c00>
  424808:	cmp	w3, #0x44
  42480c:	mov	w0, #0x4010                	// #16400
  424810:	csel	w0, wzr, w0, ne  // ne = any
  424814:	b	424480 <ferror@plt+0x21c00>
  424818:	cmp	w3, #0x44
  42481c:	mov	w0, #0x4010                	// #16400
  424820:	csel	w0, w0, wzr, ne  // ne = any
  424824:	b	424480 <ferror@plt+0x21c00>
  424828:	cmp	w3, #0x44
  42482c:	mov	w0, #0x4020                	// #16416
  424830:	csel	w0, w0, wzr, ne  // ne = any
  424834:	b	424480 <ferror@plt+0x21c00>
  424838:	cmp	x4, #0x1
  42483c:	csel	w0, w6, wzr, eq  // eq = none
  424840:	b	424480 <ferror@plt+0x21c00>
  424844:	cmp	w0, #0x55
  424848:	mov	w0, #0x1000                	// #4096
  42484c:	movk	w0, #0x20, lsl #16
  424850:	b.eq	424480 <ferror@plt+0x21c00>  // b.none
  424854:	mov	w7, #0x40                  	// #64
  424858:	mov	w6, #0x10                  	// #16
  42485c:	movk	w7, #0x20, lsl #16
  424860:	mov	w5, #0x200020              	// #2097184
  424864:	movk	w6, #0x20, lsl #16
  424868:	mov	x4, #0x1                   	// #1
  42486c:	b	424694 <ferror@plt+0x21e14>
  424870:	cmp	x18, #0x0
  424874:	cset	w4, ne  // ne = any
  424878:	cmp	x14, #0x10
  42487c:	csel	w3, w4, wzr, ne  // ne = any
  424880:	cbz	w3, 424930 <ferror@plt+0x220b0>
  424884:	tst	x14, #0x1f
  424888:	ldr	x19, [sp, #16]
  42488c:	b.ne	424480 <ferror@plt+0x21c00>  // b.any
  424890:	b	42432c <ferror@plt+0x21aac>
  424894:	orr	x1, x11, x10
  424898:	mov	w0, #0x0                   	// #0
  42489c:	cmp	x1, #0x0
  4248a0:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  4248a4:	b.eq	424480 <ferror@plt+0x21c00>  // b.none
  4248a8:	mov	w0, #0x10                  	// #16
  4248ac:	mov	w2, #0x20                  	// #32
  4248b0:	mov	w4, #0x40                  	// #64
  4248b4:	mov	w7, #0x10000               	// #65536
  4248b8:	mov	w5, #0x20000               	// #131072
  4248bc:	mov	w6, #0x8000                	// #32768
  4248c0:	mov	w1, #0x0                   	// #0
  4248c4:	b	42438c <ferror@plt+0x21b0c>
  4248c8:	add	x18, x18, #0x1
  4248cc:	mov	x6, #0xffffffffffffffff    	// #-1
  4248d0:	b	424448 <ferror@plt+0x21bc8>
  4248d4:	sub	x4, x6, #0x2
  4248d8:	add	x17, x17, #0x1
  4248dc:	add	x5, x19, #0x2
  4248e0:	sub	x6, x6, #0x3
  4248e4:	b	424448 <ferror@plt+0x21bc8>
  4248e8:	cmp	x2, #0x1
  4248ec:	b.eq	424480 <ferror@plt+0x21c00>  // b.none
  4248f0:	cmp	x2, #0x2
  4248f4:	b.ne	424368 <ferror@plt+0x21ae8>  // b.any
  4248f8:	ldrb	w1, [x1, #1]
  4248fc:	mov	w2, #0x6c                  	// #108
  424900:	cmp	w1, #0x66
  424904:	ccmp	w1, w2, #0x4, ne  // ne = any
  424908:	b.ne	424368 <ferror@plt+0x21ae8>  // b.any
  42490c:	b	424480 <ferror@plt+0x21c00>
  424910:	mov	w0, w5
  424914:	b	424480 <ferror@plt+0x21c00>
  424918:	cmp	x17, #0x0
  42491c:	orr	w0, w0, #0x800000
  424920:	csel	w0, w0, w6, ne  // ne = any
  424924:	b	424480 <ferror@plt+0x21c00>
  424928:	mov	x16, x15
  42492c:	b	4244f8 <ferror@plt+0x21c78>
  424930:	mov	w3, w4
  424934:	ldr	x19, [sp, #16]
  424938:	b	42432c <ferror@plt+0x21aac>
  42493c:	nop
  424940:	mov	x6, x0
  424944:	cbz	x2, 424a44 <ferror@plt+0x221c4>
  424948:	add	x4, x1, x2
  42494c:	mov	x5, #0x0                   	// #0
  424950:	mov	x7, #0x0                   	// #0
  424954:	mov	x8, #0x0                   	// #0
  424958:	mov	x9, #0x1                   	// #1
  42495c:	ldurb	w0, [x4, #-1]
  424960:	sub	w3, w0, #0x49
  424964:	and	w3, w3, #0xff
  424968:	cmp	w3, #0x2c
  42496c:	b.hi	42498c <ferror@plt+0x2210c>  // b.pmore
  424970:	lsl	x3, x9, x3
  424974:	tst	x3, #0x300000003
  424978:	b.ne	424a3c <ferror@plt+0x221bc>  // b.any
  42497c:	tst	x3, #0x800000008
  424980:	b.ne	424a1c <ferror@plt+0x2219c>  // b.any
  424984:	tst	x3, #0x100000001000
  424988:	b.ne	424994 <ferror@plt+0x22114>  // b.any
  42498c:	mov	w0, #0x0                   	// #0
  424990:	ret
  424994:	add	x8, x8, #0x1
  424998:	sub	x4, x4, #0x1
  42499c:	cmp	x1, x4
  4249a0:	b.ne	42495c <ferror@plt+0x220dc>  // b.any
  4249a4:	cmp	x5, #0x2
  4249a8:	mov	w0, #0x0                   	// #0
  4249ac:	ccmp	x8, #0x1, #0x2, ls  // ls = plast
  4249b0:	ccmp	x7, #0x1, #0x2, ls  // ls = plast
  4249b4:	cset	w3, hi  // hi = pmore
  4249b8:	b.hi	424990 <ferror@plt+0x22110>  // b.pmore
  4249bc:	cbz	x7, 424a54 <ferror@plt+0x221d4>
  4249c0:	ldrb	w4, [x6, #1163]
  4249c4:	mov	w0, w3
  4249c8:	cbz	w4, 424990 <ferror@plt+0x22110>
  4249cc:	ldrb	w0, [x6, #1120]
  4249d0:	cbz	w0, 424a60 <ferror@plt+0x221e0>
  4249d4:	ldr	w0, [x6, #1116]
  4249d8:	cmp	w0, #0xe
  4249dc:	b.le	424a60 <ferror@plt+0x221e0>
  4249e0:	ldrb	w0, [x1]
  4249e4:	mov	w4, #0x3000                	// #12288
  4249e8:	mov	w6, #0x2000                	// #8192
  4249ec:	cmp	w0, #0x69
  4249f0:	b.eq	424a6c <ferror@plt+0x221ec>  // b.none
  4249f4:	nop
  4249f8:	cmp	x8, #0x0
  4249fc:	csel	w4, w4, w6, ne  // ne = any
  424a00:	cbz	x5, 424a94 <ferror@plt+0x22214>
  424a04:	cmp	x5, #0x1
  424a08:	mov	w0, #0x20                  	// #32
  424a0c:	mov	w1, #0x40                  	// #64
  424a10:	csel	w0, w0, w1, eq  // eq = none
  424a14:	orr	w0, w0, w4
  424a18:	ret
  424a1c:	add	x5, x5, #0x1
  424a20:	cmp	x5, #0x2
  424a24:	b.ne	424998 <ferror@plt+0x22118>  // b.any
  424a28:	ldrb	w3, [x4]
  424a2c:	cmp	w3, w0
  424a30:	b.eq	424998 <ferror@plt+0x22118>  // b.none
  424a34:	mov	w0, #0x0                   	// #0
  424a38:	b	424990 <ferror@plt+0x22110>
  424a3c:	add	x7, x7, #0x1
  424a40:	b	424998 <ferror@plt+0x22118>
  424a44:	mov	w4, #0x0                   	// #0
  424a48:	mov	w0, #0x10                  	// #16
  424a4c:	orr	w0, w0, w4
  424a50:	b	424a18 <ferror@plt+0x22198>
  424a54:	mov	w4, #0x1000                	// #4096
  424a58:	mov	w6, #0x0                   	// #0
  424a5c:	b	4249f8 <ferror@plt+0x22178>
  424a60:	mov	w4, #0x3000                	// #12288
  424a64:	mov	w6, #0x2000                	// #8192
  424a68:	b	4249f8 <ferror@plt+0x22178>
  424a6c:	mov	w0, w3
  424a70:	cmp	x2, #0x1
  424a74:	b.eq	424990 <ferror@plt+0x22110>  // b.none
  424a78:	cmp	x2, #0x2
  424a7c:	b.ne	4249f8 <ferror@plt+0x22178>  // b.any
  424a80:	ldrb	w0, [x1, #1]
  424a84:	cmp	w0, #0x6c
  424a88:	b.ne	4249f8 <ferror@plt+0x22178>  // b.any
  424a8c:	mov	w0, #0x0                   	// #0
  424a90:	b	424990 <ferror@plt+0x22110>
  424a94:	mov	w0, #0x10                  	// #16
  424a98:	orr	w0, w0, w4
  424a9c:	b	424a18 <ferror@plt+0x22198>
  424aa0:	cmp	w0, #0x4a
  424aa4:	b.eq	424ad0 <ferror@plt+0x22250>  // b.none
  424aa8:	cmp	w0, #0x4b
  424aac:	b.eq	424ad8 <ferror@plt+0x22258>  // b.none
  424ab0:	cmp	w0, #0x4c
  424ab4:	b.eq	424ae0 <ferror@plt+0x22260>  // b.none
  424ab8:	cmp	w0, #0x4d
  424abc:	b.eq	424ae8 <ferror@plt+0x22268>  // b.none
  424ac0:	cmp	w0, #0x4e
  424ac4:	mov	w1, #0x42                  	// #66
  424ac8:	csel	w0, w0, w1, ne  // ne = any
  424acc:	ret
  424ad0:	mov	w0, #0x3e                  	// #62
  424ad4:	ret
  424ad8:	mov	w0, #0x3f                  	// #63
  424adc:	ret
  424ae0:	mov	w0, #0x40                  	// #64
  424ae4:	ret
  424ae8:	mov	w0, #0x41                  	// #65
  424aec:	ret
  424af0:	cmp	w0, #0x3e
  424af4:	b.eq	424b20 <ferror@plt+0x222a0>  // b.none
  424af8:	cmp	w0, #0x3f
  424afc:	b.eq	424b28 <ferror@plt+0x222a8>  // b.none
  424b00:	cmp	w0, #0x40
  424b04:	b.eq	424b30 <ferror@plt+0x222b0>  // b.none
  424b08:	cmp	w0, #0x41
  424b0c:	b.eq	424b38 <ferror@plt+0x222b8>  // b.none
  424b10:	cmp	w0, #0x42
  424b14:	mov	w1, #0x4e                  	// #78
  424b18:	csel	w0, w0, w1, ne  // ne = any
  424b1c:	ret
  424b20:	mov	w0, #0x4a                  	// #74
  424b24:	ret
  424b28:	mov	w0, #0x4b                  	// #75
  424b2c:	ret
  424b30:	mov	w0, #0x4c                  	// #76
  424b34:	ret
  424b38:	mov	w0, #0x4d                  	// #77
  424b3c:	ret
  424b40:	cmp	w0, #0x45
  424b44:	b.eq	424b70 <ferror@plt+0x222f0>  // b.none
  424b48:	cmp	w0, #0x46
  424b4c:	b.eq	424b78 <ferror@plt+0x222f8>  // b.none
  424b50:	cmp	w0, #0x47
  424b54:	b.eq	424b80 <ferror@plt+0x22300>  // b.none
  424b58:	cmp	w0, #0x48
  424b5c:	b.eq	424b88 <ferror@plt+0x22308>  // b.none
  424b60:	cmp	w0, #0x49
  424b64:	mov	w1, #0x3c                  	// #60
  424b68:	csel	w0, w0, w1, ne  // ne = any
  424b6c:	ret
  424b70:	mov	w0, #0x38                  	// #56
  424b74:	ret
  424b78:	mov	w0, #0x39                  	// #57
  424b7c:	ret
  424b80:	mov	w0, #0x3a                  	// #58
  424b84:	ret
  424b88:	mov	w0, #0x3b                  	// #59
  424b8c:	ret
  424b90:	cmp	w0, #0x38
  424b94:	b.eq	424bc0 <ferror@plt+0x22340>  // b.none
  424b98:	cmp	w0, #0x39
  424b9c:	b.eq	424bc8 <ferror@plt+0x22348>  // b.none
  424ba0:	cmp	w0, #0x3a
  424ba4:	b.eq	424bd0 <ferror@plt+0x22350>  // b.none
  424ba8:	cmp	w0, #0x3b
  424bac:	b.eq	424bd8 <ferror@plt+0x22358>  // b.none
  424bb0:	cmp	w0, #0x3c
  424bb4:	mov	w1, #0x49                  	// #73
  424bb8:	csel	w0, w0, w1, ne  // ne = any
  424bbc:	ret
  424bc0:	mov	w0, #0x45                  	// #69
  424bc4:	ret
  424bc8:	mov	w0, #0x46                  	// #70
  424bcc:	ret
  424bd0:	mov	w0, #0x47                  	// #71
  424bd4:	ret
  424bd8:	mov	w0, #0x48                  	// #72
  424bdc:	ret
  424be0:	sub	w0, w0, #0x4a
  424be4:	cmp	w0, #0x4
  424be8:	cset	w0, ls  // ls = plast
  424bec:	ret
  424bf0:	sub	w0, w0, #0x45
  424bf4:	cmp	w0, #0x4
  424bf8:	cset	w0, ls  // ls = plast
  424bfc:	ret
  424c00:	ldr	w2, [x0, #8]
  424c04:	ldr	x0, [x0, #16]
  424c08:	cbz	w2, 424c78 <ferror@plt+0x223f8>
  424c0c:	mov	x1, #0x0                   	// #0
  424c10:	mov	w4, #0x22                  	// #34
  424c14:	b	424c20 <ferror@plt+0x223a0>
  424c18:	cmp	w2, w1
  424c1c:	b.ls	424c5c <ferror@plt+0x223dc>  // b.plast
  424c20:	ldrb	w3, [x0, x1]
  424c24:	add	w5, w1, #0x1
  424c28:	add	x1, x1, #0x1
  424c2c:	cmp	w3, #0x27
  424c30:	ccmp	w3, w4, #0x4, ne  // ne = any
  424c34:	b.ne	424c18 <ferror@plt+0x22398>  // b.any
  424c38:	mov	w4, w2
  424c3c:	sub	w2, w2, #0x1
  424c40:	ldrb	w1, [x0, w2, uxtw]
  424c44:	cmp	w1, w3
  424c48:	b.eq	424c54 <ferror@plt+0x223d4>  // b.none
  424c4c:	cbnz	w2, 424c38 <ferror@plt+0x223b8>
  424c50:	ret
  424c54:	add	x0, x0, w4, uxtw
  424c58:	ret
  424c5c:	cmp	w2, w5
  424c60:	add	x1, x0, w5, uxtw
  424c64:	b.ne	424c70 <ferror@plt+0x223f0>  // b.any
  424c68:	mov	x0, x1
  424c6c:	ret
  424c70:	ldrb	w3, [x0, w5, uxtw]
  424c74:	b	424c38 <ferror@plt+0x223b8>
  424c78:	mov	x1, x0
  424c7c:	mov	x0, x1
  424c80:	b	424c6c <ferror@plt+0x223ec>
  424c84:	nop
  424c88:	stp	x29, x30, [sp, #-112]!
  424c8c:	mov	x29, sp
  424c90:	stp	x19, x20, [sp, #16]
  424c94:	stp	x23, x24, [sp, #48]
  424c98:	mov	x23, x0
  424c9c:	mov	w24, w3
  424ca0:	stp	x27, x28, [sp, #80]
  424ca4:	mov	x27, x2
  424ca8:	ldr	x20, [x1, #16]
  424cac:	cbz	x2, 424cb4 <ferror@plt+0x22434>
  424cb0:	str	xzr, [x2]
  424cb4:	ldr	w28, [x1, #8]
  424cb8:	cmp	w28, #0x1
  424cbc:	b.eq	424f08 <ferror@plt+0x22688>  // b.none
  424cc0:	mov	x5, x20
  424cc4:	stp	x21, x22, [sp, #32]
  424cc8:	add	x28, x20, w28, uxtw
  424ccc:	stp	x25, x26, [sp, #64]
  424cd0:	ldrb	w4, [x5], #1
  424cd4:	cmp	w4, #0x30
  424cd8:	b.eq	424e60 <ferror@plt+0x225e0>  // b.none
  424cdc:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  424ce0:	add	x21, x21, #0x2c0
  424ce4:	mov	w9, #0x0                   	// #0
  424ce8:	mov	w25, #0xa                   	// #10
  424cec:	mov	w7, w4
  424cf0:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  424cf4:	mov	x22, x5
  424cf8:	add	x0, x0, #0xfa0
  424cfc:	mov	w8, #0x0                   	// #0
  424d00:	mov	w2, #0x0                   	// #0
  424d04:	ldrh	w7, [x21, x7, lsl #1]
  424d08:	mov	w26, #0x0                   	// #0
  424d0c:	mov	w19, #0x0                   	// #0
  424d10:	tbnz	w7, #2, 424d60 <ferror@plt+0x224e0>
  424d14:	nop
  424d18:	ands	w7, w9, w7, lsr #8
  424d1c:	b.ne	424d60 <ferror@plt+0x224e0>  // b.any
  424d20:	cmp	w4, #0x27
  424d24:	b.eq	424dc4 <ferror@plt+0x22544>  // b.none
  424d28:	cmp	w4, #0x2e
  424d2c:	b.ne	424f8c <ferror@plt+0x2270c>  // b.any
  424d30:	cbnz	w8, 424d84 <ferror@plt+0x22504>
  424d34:	ldrb	w4, [x5]
  424d38:	cmp	w4, #0x27
  424d3c:	b.eq	424d7c <ferror@plt+0x224fc>  // b.none
  424d40:	cbnz	w26, 424eac <ferror@plt+0x2262c>
  424d44:	mov	w26, #0x1                   	// #1
  424d48:	mov	w7, w4
  424d4c:	mov	x20, x5
  424d50:	add	x5, x5, #0x1
  424d54:	mov	x22, x5
  424d58:	ldrh	w7, [x21, x7, lsl #1]
  424d5c:	tbz	w7, #2, 424d18 <ferror@plt+0x22498>
  424d60:	ldrb	w1, [x0, w4, sxtw]
  424d64:	mov	w8, #0x0                   	// #0
  424d68:	ldrb	w4, [x5]
  424d6c:	mov	w2, #0x1                   	// #1
  424d70:	cmp	w19, w1
  424d74:	csel	w19, w19, w1, cs  // cs = hs, nlast
  424d78:	b	424d48 <ferror@plt+0x224c8>
  424d7c:	ldrb	w1, [x23, #1166]
  424d80:	cbz	w1, 424d40 <ferror@plt+0x224c0>
  424d84:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  424d88:	mov	w2, w24
  424d8c:	mov	x0, x23
  424d90:	add	x4, x4, #0x730
  424d94:	mov	w3, #0x0                   	// #0
  424d98:	mov	w1, #0x3                   	// #3
  424d9c:	bl	423290 <ferror@plt+0x20a10>
  424da0:	ldp	x21, x22, [sp, #32]
  424da4:	mov	w19, #0x0                   	// #0
  424da8:	ldp	x25, x26, [sp, #64]
  424dac:	mov	w0, w19
  424db0:	ldp	x19, x20, [sp, #16]
  424db4:	ldp	x23, x24, [sp, #48]
  424db8:	ldp	x27, x28, [sp, #80]
  424dbc:	ldp	x29, x30, [sp], #112
  424dc0:	ret
  424dc4:	ldrb	w1, [x23, #1166]
  424dc8:	cbnz	w1, 424e50 <ferror@plt+0x225d0>
  424dcc:	cmp	w25, #0xa
  424dd0:	b.ls	424ddc <ferror@plt+0x2255c>  // b.plast
  424dd4:	cmp	w25, #0x10
  424dd8:	b.eq	424fa8 <ferror@plt+0x22728>  // b.none
  424ddc:	cbnz	w8, 424f5c <ferror@plt+0x226dc>
  424de0:	eor	w0, w26, #0x1
  424de4:	cmp	w25, #0x10
  424de8:	and	w0, w0, #0x1
  424dec:	csel	w0, w0, wzr, ne  // ne = any
  424df0:	cbz	w0, 425254 <ferror@plt+0x229d4>
  424df4:	sub	x28, x28, x20
  424df8:	mov	x1, x20
  424dfc:	mov	x2, x28
  424e00:	mov	x0, x23
  424e04:	bl	423708 <ferror@plt+0x20e88>
  424e08:	tst	w0, #0x300000
  424e0c:	b.ne	425000 <ferror@plt+0x22780>  // b.any
  424e10:	cmp	w19, w25
  424e14:	b.cc	425124 <ferror@plt+0x228a4>  // b.lo, b.ul, b.last
  424e18:	add	w5, w19, #0x30
  424e1c:	cmp	w25, #0x2
  424e20:	b.ne	424fbc <ferror@plt+0x2273c>  // b.any
  424e24:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  424e28:	mov	w2, w24
  424e2c:	mov	x0, x23
  424e30:	add	x4, x4, #0x808
  424e34:	mov	w3, #0x0                   	// #0
  424e38:	mov	w1, #0x3                   	// #3
  424e3c:	mov	w19, #0x0                   	// #0
  424e40:	bl	423290 <ferror@plt+0x20a10>
  424e44:	ldp	x21, x22, [sp, #32]
  424e48:	ldp	x25, x26, [sp, #64]
  424e4c:	b	424dac <ferror@plt+0x2252c>
  424e50:	cbnz	w8, 424f74 <ferror@plt+0x226f4>
  424e54:	ldrb	w4, [x5]
  424e58:	mov	w8, #0x1                   	// #1
  424e5c:	b	424d48 <ferror@plt+0x224c8>
  424e60:	ldrb	w4, [x20, #1]
  424e64:	and	w0, w4, #0xffffffdf
  424e68:	and	w0, w0, #0xff
  424e6c:	cmp	w0, #0x58
  424e70:	b.ne	424ec4 <ferror@plt+0x22644>  // b.any
  424e74:	ldrb	w0, [x20, #2]
  424e78:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  424e7c:	add	x21, x21, #0x2c0
  424e80:	cmp	w0, #0x2e
  424e84:	b.eq	424f24 <ferror@plt+0x226a4>  // b.none
  424e88:	ldrh	w1, [x21, w0, sxtw #1]
  424e8c:	tbnz	w1, #8, 424f24 <ferror@plt+0x226a4>
  424e90:	cmp	w0, #0x27
  424e94:	b.eq	424ff4 <ferror@plt+0x22774>  // b.none
  424e98:	mov	x20, x5
  424e9c:	mov	w9, #0x0                   	// #0
  424ea0:	add	x5, x5, #0x1
  424ea4:	mov	w25, #0x8                   	// #8
  424ea8:	b	424cec <ferror@plt+0x2246c>
  424eac:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  424eb0:	mov	w2, w24
  424eb4:	mov	x0, x23
  424eb8:	add	x4, x4, #0x760
  424ebc:	mov	w3, #0x0                   	// #0
  424ec0:	b	424d98 <ferror@plt+0x22518>
  424ec4:	cmp	w0, #0x42
  424ec8:	b.ne	424f3c <ferror@plt+0x226bc>  // b.any
  424ecc:	ldrb	w1, [x20, #2]
  424ed0:	sub	w0, w1, #0x30
  424ed4:	and	w0, w0, #0xff
  424ed8:	cmp	w0, #0x1
  424edc:	b.ls	424fd4 <ferror@plt+0x22754>  // b.plast
  424ee0:	cmp	w1, #0x27
  424ee4:	b.ne	424f3c <ferror@plt+0x226bc>  // b.any
  424ee8:	ldrb	w1, [x23, #1166]
  424eec:	cbz	w1, 424f3c <ferror@plt+0x226bc>
  424ef0:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  424ef4:	mov	w2, w24
  424ef8:	mov	x0, x23
  424efc:	add	x4, x4, #0x6e8
  424f00:	mov	w3, #0x0                   	// #0
  424f04:	b	424d98 <ferror@plt+0x22518>
  424f08:	mov	w19, #0x111                 	// #273
  424f0c:	mov	w0, w19
  424f10:	ldp	x19, x20, [sp, #16]
  424f14:	ldp	x23, x24, [sp, #48]
  424f18:	ldp	x27, x28, [sp, #80]
  424f1c:	ldp	x29, x30, [sp], #112
  424f20:	ret
  424f24:	add	x20, x20, #0x2
  424f28:	mov	w4, w0
  424f2c:	add	x5, x20, #0x1
  424f30:	mov	w9, #0x1                   	// #1
  424f34:	mov	w25, #0x10                  	// #16
  424f38:	b	424cec <ferror@plt+0x2246c>
  424f3c:	mov	x20, x5
  424f40:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  424f44:	add	x5, x5, #0x1
  424f48:	add	x21, x21, #0x2c0
  424f4c:	mov	w9, #0x0                   	// #0
  424f50:	mov	w25, #0x8                   	// #8
  424f54:	b	424cec <ferror@plt+0x2246c>
  424f58:	cbz	w2, 42527c <ferror@plt+0x229fc>
  424f5c:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  424f60:	mov	w2, w24
  424f64:	mov	x0, x23
  424f68:	add	x4, x4, #0x7b0
  424f6c:	mov	w3, #0x0                   	// #0
  424f70:	b	424d98 <ferror@plt+0x22518>
  424f74:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  424f78:	mov	w2, w24
  424f7c:	mov	x0, x23
  424f80:	add	x4, x4, #0x710
  424f84:	mov	w3, #0x0                   	// #0
  424f88:	b	424d98 <ferror@plt+0x22518>
  424f8c:	cmp	w25, #0xa
  424f90:	b.ls	425528 <ferror@plt+0x22ca8>  // b.plast
  424f94:	cmp	w25, #0x10
  424f98:	b.ne	424ddc <ferror@plt+0x2255c>  // b.any
  424f9c:	and	w0, w4, #0xffffffdf
  424fa0:	cmp	w0, #0x50
  424fa4:	b.eq	425534 <ferror@plt+0x22cb4>  // b.none
  424fa8:	cbnz	w8, 424f5c <ferror@plt+0x226dc>
  424fac:	mov	x22, x20
  424fb0:	cmp	w19, #0x10
  424fb4:	add	w5, w19, #0x30
  424fb8:	b.cc	425048 <ferror@plt+0x227c8>  // b.lo, b.ul, b.last
  424fbc:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  424fc0:	mov	w2, w24
  424fc4:	mov	x0, x23
  424fc8:	add	x4, x4, #0x830
  424fcc:	mov	w3, #0x0                   	// #0
  424fd0:	b	424e38 <ferror@plt+0x225b8>
  424fd4:	add	x20, x20, #0x2
  424fd8:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  424fdc:	mov	w4, w1
  424fe0:	add	x5, x20, #0x1
  424fe4:	add	x21, x21, #0x2c0
  424fe8:	mov	w9, #0x0                   	// #0
  424fec:	mov	w25, #0x2                   	// #2
  424ff0:	b	424cec <ferror@plt+0x2246c>
  424ff4:	ldrb	w1, [x23, #1166]
  424ff8:	cbz	w1, 424e98 <ferror@plt+0x22618>
  424ffc:	b	424ef0 <ferror@plt+0x22670>
  425000:	ldrb	w1, [x23, #1154]
  425004:	cmp	w25, #0x8
  425008:	orr	w21, w0, #0x2
  42500c:	b.eq	425488 <ferror@plt+0x22c08>  // b.none
  425010:	cbnz	w1, 425490 <ferror@plt+0x22c10>
  425014:	cmp	w25, #0x2
  425018:	b.eq	42530c <ferror@plt+0x22a8c>  // b.none
  42501c:	cmp	w25, #0xa
  425020:	b.eq	4252fc <ferror@plt+0x22a7c>  // b.none
  425024:	cmp	w25, #0x10
  425028:	orr	w0, w21, #0x400
  42502c:	orr	w19, w21, #0x200
  425030:	csel	w19, w19, w0, eq  // eq = none
  425034:	ldp	x21, x22, [sp, #32]
  425038:	ldp	x25, x26, [sp, #64]
  42503c:	b	424dac <ferror@plt+0x2252c>
  425040:	cmp	w19, w25
  425044:	b.cs	424e18 <ferror@plt+0x22598>  // b.hs, b.nlast
  425048:	cbz	w26, 42511c <ferror@plt+0x2289c>
  42504c:	cmp	w25, #0x2
  425050:	b.eq	4255bc <ferror@plt+0x22d3c>  // b.none
  425054:	eor	w2, w2, #0x1
  425058:	tst	w9, w2
  42505c:	b.ne	4253d4 <ferror@plt+0x22b54>  // b.any
  425060:	cmp	w25, #0x10
  425064:	b.ne	425274 <ferror@plt+0x229f4>  // b.any
  425068:	ldrb	w0, [x23, #1154]
  42506c:	cbz	w0, 4250a4 <ferror@plt+0x22824>
  425070:	ldrb	w0, [x23, #1127]
  425074:	cbnz	w0, 4250a4 <ferror@plt+0x22824>
  425078:	ldrb	w0, [x23, #1120]
  42507c:	str	w7, [sp, #108]
  425080:	cbz	w0, 4256f4 <ferror@plt+0x22e74>
  425084:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  425088:	add	x4, x4, #0x8b8
  42508c:	mov	w3, #0x0                   	// #0
  425090:	mov	w2, w24
  425094:	mov	x0, x23
  425098:	mov	w1, #0x2                   	// #2
  42509c:	bl	423290 <ferror@plt+0x20a10>
  4250a0:	ldr	w7, [sp, #108]
  4250a4:	cmp	w26, #0x2
  4250a8:	b.ne	4255e8 <ferror@plt+0x22d68>  // b.any
  4250ac:	ldrb	w4, [x22]
  4250b0:	sub	w0, w4, #0x2b
  4250b4:	mov	w2, #0xfd                  	// #253
  4250b8:	mov	x1, x22
  4250bc:	tst	w0, w2
  4250c0:	b.ne	4250cc <ferror@plt+0x2284c>  // b.any
  4250c4:	ldrb	w4, [x22, #1]
  4250c8:	add	x1, x22, #0x1
  4250cc:	ldrh	w0, [x21, w4, sxtw #1]
  4250d0:	tbz	w0, #2, 425500 <ferror@plt+0x22c80>
  4250d4:	ldrb	w0, [x1]
  4250d8:	mov	x22, x1
  4250dc:	cmp	w0, #0x27
  4250e0:	mov	w2, #0x0                   	// #0
  4250e4:	b.eq	4254f8 <ferror@plt+0x22c78>  // b.none
  4250e8:	ldrb	w0, [x22, #1]!
  4250ec:	ldrh	w1, [x21, w0, sxtw #1]
  4250f0:	tbnz	w1, #2, 4250dc <ferror@plt+0x2285c>
  4250f4:	cmp	w0, #0x27
  4250f8:	b.ne	424f58 <ferror@plt+0x226d8>  // b.any
  4250fc:	ldrb	w1, [x23, #1166]
  425100:	cbz	w1, 424f58 <ferror@plt+0x226d8>
  425104:	ldrb	w0, [x22, #1]!
  425108:	cmp	w1, #0x0
  42510c:	cset	w2, ne  // ne = any
  425110:	ldrh	w1, [x21, w0, sxtw #1]
  425114:	tbnz	w1, #2, 4250dc <ferror@plt+0x2285c>
  425118:	b	4250f4 <ferror@plt+0x22874>
  42511c:	sub	x28, x28, x22
  425120:	mov	x20, x22
  425124:	cbz	x28, 4254b4 <ferror@plt+0x22c34>
  425128:	add	x0, x20, x28
  42512c:	mov	x3, #0x0                   	// #0
  425130:	mov	x6, #0x0                   	// #0
  425134:	mov	x5, #0x0                   	// #0
  425138:	mov	x1, #0x1                   	// #1
  42513c:	ldurb	w2, [x0, #-1]
  425140:	sub	w4, w2, #0x49
  425144:	and	w4, w4, #0xff
  425148:	cmp	w4, #0x2c
  42514c:	b.hi	42516c <ferror@plt+0x228ec>  // b.pmore
  425150:	lsl	x4, x1, x4
  425154:	tst	x4, #0x300000003
  425158:	b.ne	42524c <ferror@plt+0x229cc>  // b.any
  42515c:	tst	x4, #0x800000008
  425160:	b.ne	425230 <ferror@plt+0x229b0>  // b.any
  425164:	tst	x4, #0x100000001000
  425168:	b.ne	425198 <ferror@plt+0x22918>  // b.any
  42516c:	ldrb	w0, [x23, #1161]
  425170:	cbz	w0, 425600 <ferror@plt+0x22d80>
  425174:	cbz	x27, 42517c <ferror@plt+0x228fc>
  425178:	str	x20, [x27]
  42517c:	ldrb	w0, [x23, #1138]
  425180:	cbnz	w0, 425434 <ferror@plt+0x22bb4>
  425184:	ldrb	w0, [x23, #1139]
  425188:	cbnz	w0, 4253ec <ferror@plt+0x22b6c>
  42518c:	mov	w21, #0x1041                	// #4161
  425190:	movk	w21, #0x100, lsl #16
  425194:	b	425014 <ferror@plt+0x22794>
  425198:	add	x5, x5, #0x1
  42519c:	sub	x0, x0, #0x1
  4251a0:	cmp	x20, x0
  4251a4:	b.ne	42513c <ferror@plt+0x228bc>  // b.any
  4251a8:	cmp	x3, #0x2
  4251ac:	ccmp	x5, #0x1, #0x2, ls  // ls = plast
  4251b0:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
  4251b4:	b.hi	42516c <ferror@plt+0x228ec>  // b.pmore
  4251b8:	mov	w0, #0x0                   	// #0
  4251bc:	cbnz	x6, 4256a0 <ferror@plt+0x22e20>
  4251c0:	cmp	x5, #0x0
  4251c4:	cset	w22, ne  // ne = any
  4251c8:	orr	w22, w0, w22, lsl #12
  4251cc:	cbz	x3, 425704 <ferror@plt+0x22e84>
  4251d0:	cmp	x3, #0x1
  4251d4:	mov	w0, #0x20                  	// #32
  4251d8:	mov	w1, #0x40                  	// #64
  4251dc:	csel	w0, w0, w1, eq  // eq = none
  4251e0:	ldrb	w1, [x23, #1138]
  4251e4:	orr	w22, w22, w0
  4251e8:	mov	w27, w22
  4251ec:	and	w26, w22, #0xf0
  4251f0:	orr	w21, w22, #0x1
  4251f4:	and	w19, w22, #0x2000
  4251f8:	cbnz	w1, 4254d4 <ferror@plt+0x22c54>
  4251fc:	cmp	w26, #0x40
  425200:	b.eq	425684 <ferror@plt+0x22e04>  // b.none
  425204:	cbz	w19, 425014 <ferror@plt+0x22794>
  425208:	ldrb	w0, [x23, #1154]
  42520c:	cbz	w0, 425014 <ferror@plt+0x22794>
  425210:	mov	w2, w24
  425214:	mov	x0, x23
  425218:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42521c:	mov	w3, #0x0                   	// #0
  425220:	add	x4, x4, #0xa90
  425224:	mov	w1, #0x2                   	// #2
  425228:	bl	423290 <ferror@plt+0x20a10>
  42522c:	b	425014 <ferror@plt+0x22794>
  425230:	add	x3, x3, #0x1
  425234:	cmp	x3, #0x2
  425238:	b.ne	42519c <ferror@plt+0x2291c>  // b.any
  42523c:	ldrb	w4, [x0]
  425240:	cmp	w4, w2
  425244:	b.eq	42519c <ferror@plt+0x2291c>  // b.none
  425248:	b	42516c <ferror@plt+0x228ec>
  42524c:	add	x6, x6, #0x1
  425250:	b	42519c <ferror@plt+0x2291c>
  425254:	mov	x22, x20
  425258:	and	w0, w26, #0x1
  42525c:	cmp	w0, #0x0
  425260:	ccmp	w25, #0x8, #0x0, ne  // ne = any
  425264:	b.ne	425040 <ferror@plt+0x227c0>  // b.any
  425268:	cmp	w19, #0x9
  42526c:	mov	w25, #0xa                   	// #10
  425270:	b.hi	4252f4 <ferror@plt+0x22a74>  // b.pmore
  425274:	cmp	w26, #0x2
  425278:	b.eq	4250b0 <ferror@plt+0x22830>  // b.none
  42527c:	sub	x20, x28, x22
  425280:	mov	x1, x22
  425284:	mov	x2, x20
  425288:	mov	x0, x23
  42528c:	str	w7, [sp, #108]
  425290:	bl	423708 <ferror@plt+0x20e88>
  425294:	mov	w19, w0
  425298:	cbnz	w0, 425360 <ferror@plt+0x22ae0>
  42529c:	ldrb	w0, [x23, #1161]
  4252a0:	cbz	w0, 425718 <ferror@plt+0x22e98>
  4252a4:	ldr	w7, [sp, #108]
  4252a8:	cbz	x27, 4252b0 <ferror@plt+0x22a30>
  4252ac:	str	x22, [x27]
  4252b0:	mov	w21, #0x42                  	// #66
  4252b4:	cmp	x28, x22
  4252b8:	movk	w21, #0x100, lsl #16
  4252bc:	b.eq	42501c <ferror@plt+0x2279c>  // b.none
  4252c0:	ldrb	w0, [x23, #1138]
  4252c4:	cbnz	w0, 425620 <ferror@plt+0x22da0>
  4252c8:	mov	w19, #0x40                  	// #64
  4252cc:	movk	w19, #0x100, lsl #16
  4252d0:	tst	w19, #0x300000
  4252d4:	b.eq	4253a8 <ferror@plt+0x22b28>  // b.none
  4252d8:	ldrb	w0, [x23, #1154]
  4252dc:	cbnz	w0, 4255d4 <ferror@plt+0x22d54>
  4252e0:	orr	w21, w19, #0x2
  4252e4:	tbz	w19, #13, 42501c <ferror@plt+0x2279c>
  4252e8:	ldrb	w0, [x23, #1154]
  4252ec:	cbz	w0, 42501c <ferror@plt+0x2279c>
  4252f0:	b	425210 <ferror@plt+0x22990>
  4252f4:	add	w5, w19, #0x30
  4252f8:	b	424fbc <ferror@plt+0x2273c>
  4252fc:	orr	w19, w21, #0x100
  425300:	ldp	x21, x22, [sp, #32]
  425304:	ldp	x25, x26, [sp, #64]
  425308:	b	424dac <ferror@plt+0x2252c>
  42530c:	ldrb	w0, [x23, #1165]
  425310:	cbz	w0, 425324 <ferror@plt+0x22aa4>
  425314:	orr	w19, w21, #0x800
  425318:	ldp	x21, x22, [sp, #32]
  42531c:	ldp	x25, x26, [sp, #64]
  425320:	b	424dac <ferror@plt+0x2252c>
  425324:	ldrb	w0, [x23, #1154]
  425328:	cbz	w0, 425314 <ferror@plt+0x22a94>
  42532c:	ldrb	w0, [x23, #1120]
  425330:	adrp	x3, 476000 <_obstack_memory_used@@Base+0x196d8>
  425334:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  425338:	add	x3, x3, #0x6c0
  42533c:	cmp	w0, #0x0
  425340:	add	x4, x4, #0x688
  425344:	csel	x4, x4, x3, ne  // ne = any
  425348:	mov	w2, w24
  42534c:	mov	w1, w25
  425350:	mov	x0, x23
  425354:	mov	w3, #0x0                   	// #0
  425358:	bl	423290 <ferror@plt+0x20a10>
  42535c:	b	425314 <ferror@plt+0x22a94>
  425360:	cmp	x28, x22
  425364:	ubfx	x7, x19, #14, #1
  425368:	b.eq	425374 <ferror@plt+0x22af4>  // b.none
  42536c:	ldrb	w0, [x23, #1138]
  425370:	cbnz	w0, 42566c <ferror@plt+0x22dec>
  425374:	cmp	w19, #0x20
  425378:	b.ne	42556c <ferror@plt+0x22cec>  // b.any
  42537c:	ldrb	w0, [x23, #1154]
  425380:	cbz	w0, 4253a8 <ferror@plt+0x22b28>
  425384:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  425388:	add	x4, x4, #0x9c0
  42538c:	mov	w3, #0x0                   	// #0
  425390:	str	w7, [sp, #108]
  425394:	mov	w2, w24
  425398:	mov	x0, x23
  42539c:	mov	w1, #0x2                   	// #2
  4253a0:	bl	423290 <ferror@plt+0x20a10>
  4253a4:	ldr	w7, [sp, #108]
  4253a8:	cbz	w7, 4252e0 <ferror@plt+0x22a60>
  4253ac:	ldrb	w0, [x23, #1154]
  4253b0:	cbz	w0, 4252e0 <ferror@plt+0x22a60>
  4253b4:	mov	w2, w24
  4253b8:	mov	x0, x23
  4253bc:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  4253c0:	mov	w3, #0x0                   	// #0
  4253c4:	add	x4, x4, #0xa30
  4253c8:	mov	w1, #0x2                   	// #2
  4253cc:	bl	423290 <ferror@plt+0x20a10>
  4253d0:	b	4252e0 <ferror@plt+0x22a60>
  4253d4:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  4253d8:	mov	w2, w24
  4253dc:	mov	x0, x23
  4253e0:	add	x4, x4, #0x888
  4253e4:	mov	w3, #0x0                   	// #0
  4253e8:	b	424d98 <ferror@plt+0x22518>
  4253ec:	mov	w21, #0x1041                	// #4161
  4253f0:	mov	w19, #0x0                   	// #0
  4253f4:	movk	w21, #0x100, lsl #16
  4253f8:	ldrb	w1, [x23, #1152]
  4253fc:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  425400:	ldrb	w2, [x23, #1120]
  425404:	add	x0, x0, #0x660
  425408:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42540c:	add	x4, x4, #0x638
  425410:	cmp	w2, #0x0
  425414:	mov	w3, #0x0                   	// #0
  425418:	csel	x4, x4, x0, ne  // ne = any
  42541c:	mov	w2, w24
  425420:	cbz	w1, 4255ac <ferror@plt+0x22d2c>
  425424:	mov	x0, x23
  425428:	mov	w1, #0x7                   	// #7
  42542c:	bl	423308 <ferror@plt+0x20a88>
  425430:	b	425204 <ferror@plt+0x22984>
  425434:	mov	x0, x23
  425438:	bl	436758 <ferror@plt+0x33ed8>
  42543c:	cbnz	w0, 425184 <ferror@plt+0x22904>
  425440:	ldrb	w0, [x23, #1139]
  425444:	mov	w21, #0x1041                	// #4161
  425448:	mov	w27, #0x1040                	// #4160
  42544c:	mov	w19, #0x0                   	// #0
  425450:	movk	w21, #0x100, lsl #16
  425454:	movk	w27, #0x100, lsl #16
  425458:	cbnz	w0, 42570c <ferror@plt+0x22e8c>
  42545c:	and	w26, w27, #0xf0
  425460:	mov	w1, #0x6                   	// #6
  425464:	mov	x6, x20
  425468:	mov	w5, w28
  42546c:	mov	w2, w24
  425470:	mov	x0, x23
  425474:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  425478:	mov	w3, #0x0                   	// #0
  42547c:	add	x4, x4, #0x998
  425480:	bl	423308 <ferror@plt+0x20a88>
  425484:	b	4251fc <ferror@plt+0x2297c>
  425488:	cbz	w1, 4252fc <ferror@plt+0x22a7c>
  42548c:	mov	w25, #0xa                   	// #10
  425490:	and	w19, w0, #0x2000
  425494:	mov	w2, w24
  425498:	mov	x0, x23
  42549c:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  4254a0:	mov	w3, #0x0                   	// #0
  4254a4:	add	x4, x4, #0x7d8
  4254a8:	mov	w1, #0x2                   	// #2
  4254ac:	bl	423290 <ferror@plt+0x20a10>
  4254b0:	b	425204 <ferror@plt+0x22984>
  4254b4:	ldrb	w0, [x23, #1138]
  4254b8:	mov	w21, #0x11                  	// #17
  4254bc:	cbz	w0, 425014 <ferror@plt+0x22794>
  4254c0:	mov	w26, #0x10                  	// #16
  4254c4:	mov	w27, w26
  4254c8:	mov	w22, w26
  4254cc:	mov	w19, #0x0                   	// #0
  4254d0:	mov	w21, #0x11                  	// #17
  4254d4:	mov	x0, x23
  4254d8:	bl	436758 <ferror@plt+0x33ed8>
  4254dc:	cbnz	w0, 4251fc <ferror@plt+0x2297c>
  4254e0:	and	w22, w22, #0x3000
  4254e4:	cmp	w26, #0x40
  4254e8:	b.eq	425690 <ferror@plt+0x22e10>  // b.none
  4254ec:	cbz	w22, 425204 <ferror@plt+0x22984>
  4254f0:	mov	w1, #0x6                   	// #6
  4254f4:	b	425464 <ferror@plt+0x22be4>
  4254f8:	ldrb	w1, [x23, #1166]
  4254fc:	b	425104 <ferror@plt+0x22884>
  425500:	cmp	w4, #0x27
  425504:	b.ne	425510 <ferror@plt+0x22c90>  // b.any
  425508:	ldrb	w0, [x23, #1166]
  42550c:	cbnz	w0, 425554 <ferror@plt+0x22cd4>
  425510:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  425514:	mov	w2, w24
  425518:	mov	x0, x23
  42551c:	add	x4, x4, #0x918
  425520:	mov	w3, #0x0                   	// #0
  425524:	b	424d98 <ferror@plt+0x22518>
  425528:	and	w0, w4, #0xffffffdf
  42552c:	cmp	w0, #0x45
  425530:	b.ne	424ddc <ferror@plt+0x2255c>  // b.any
  425534:	cbnz	w8, 425554 <ferror@plt+0x22cd4>
  425538:	ldrb	w4, [x5]
  42553c:	mov	w0, #0x1                   	// #1
  425540:	mov	w26, #0x2                   	// #2
  425544:	cmp	w4, #0x27
  425548:	b.ne	42525c <ferror@plt+0x229dc>  // b.any
  42554c:	ldrb	w1, [x23, #1166]
  425550:	cbz	w1, 42525c <ferror@plt+0x229dc>
  425554:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  425558:	mov	w2, w24
  42555c:	mov	x0, x23
  425560:	add	x4, x4, #0x788
  425564:	mov	w3, #0x0                   	// #0
  425568:	b	424d98 <ferror@plt+0x22518>
  42556c:	cmp	w7, #0x0
  425570:	ccmp	w25, #0xa, #0x4, ne  // ne = any
  425574:	b.eq	4252d0 <ferror@plt+0x22a50>  // b.none
  425578:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42557c:	mov	x6, x22
  425580:	mov	w5, w20
  425584:	mov	w2, w24
  425588:	mov	x0, x23
  42558c:	add	x4, x4, #0x9f0
  425590:	mov	w3, #0x0                   	// #0
  425594:	mov	w1, #0x3                   	// #3
  425598:	mov	w19, #0x0                   	// #0
  42559c:	bl	423290 <ferror@plt+0x20a10>
  4255a0:	ldp	x21, x22, [sp, #32]
  4255a4:	ldp	x25, x26, [sp, #64]
  4255a8:	b	424dac <ferror@plt+0x2252c>
  4255ac:	mov	x0, x23
  4255b0:	mov	w1, #0x7                   	// #7
  4255b4:	bl	423388 <ferror@plt+0x20b08>
  4255b8:	b	425204 <ferror@plt+0x22984>
  4255bc:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  4255c0:	mov	w2, w24
  4255c4:	mov	x0, x23
  4255c8:	add	x4, x4, #0x858
  4255cc:	mov	w3, #0x0                   	// #0
  4255d0:	b	424d98 <ferror@plt+0x22518>
  4255d4:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  4255d8:	mov	w3, #0x0                   	// #0
  4255dc:	add	x4, x4, #0x7d8
  4255e0:	str	w7, [sp, #108]
  4255e4:	b	425394 <ferror@plt+0x22b14>
  4255e8:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  4255ec:	mov	w2, w24
  4255f0:	mov	x0, x23
  4255f4:	add	x4, x4, #0x930
  4255f8:	mov	w3, #0x0                   	// #0
  4255fc:	b	424d98 <ferror@plt+0x22518>
  425600:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  425604:	mov	x6, x20
  425608:	mov	w5, w28
  42560c:	mov	w2, w24
  425610:	mov	x0, x23
  425614:	add	x4, x4, #0xa60
  425618:	mov	w3, #0x0                   	// #0
  42561c:	b	425594 <ferror@plt+0x22d14>
  425620:	mov	x0, x23
  425624:	mov	w19, #0x40                  	// #64
  425628:	str	w7, [sp, #108]
  42562c:	bl	436758 <ferror@plt+0x33ed8>
  425630:	ldr	w7, [sp, #108]
  425634:	movk	w19, #0x100, lsl #16
  425638:	cbnz	w0, 42556c <ferror@plt+0x22cec>
  42563c:	mov	x6, x22
  425640:	mov	w5, w20
  425644:	mov	w2, w24
  425648:	mov	x0, x23
  42564c:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  425650:	mov	w3, #0x0                   	// #0
  425654:	add	x4, x4, #0x998
  425658:	mov	w1, #0x6                   	// #6
  42565c:	str	w7, [sp, #108]
  425660:	bl	423308 <ferror@plt+0x20a88>
  425664:	ldr	w7, [sp, #108]
  425668:	b	425374 <ferror@plt+0x22af4>
  42566c:	mov	x0, x23
  425670:	str	w7, [sp, #108]
  425674:	bl	436758 <ferror@plt+0x33ed8>
  425678:	ldr	w7, [sp, #108]
  42567c:	cbnz	w0, 425374 <ferror@plt+0x22af4>
  425680:	b	42563c <ferror@plt+0x22dbc>
  425684:	ldrb	w0, [x23, #1139]
  425688:	cbz	w0, 425204 <ferror@plt+0x22984>
  42568c:	b	4253f8 <ferror@plt+0x22b78>
  425690:	ldrb	w0, [x23, #1139]
  425694:	cbnz	w0, 42570c <ferror@plt+0x22e8c>
  425698:	cbz	w22, 425204 <ferror@plt+0x22984>
  42569c:	b	42545c <ferror@plt+0x22bdc>
  4256a0:	ldrb	w0, [x23, #1163]
  4256a4:	cbz	w0, 42516c <ferror@plt+0x228ec>
  4256a8:	ldrb	w0, [x23, #1120]
  4256ac:	cbz	w0, 4256c8 <ferror@plt+0x22e48>
  4256b0:	ldr	w0, [x23, #1116]
  4256b4:	cmp	w0, #0xe
  4256b8:	b.le	4256c8 <ferror@plt+0x22e48>
  4256bc:	ldrb	w0, [x20]
  4256c0:	cmp	w0, #0x69
  4256c4:	b.eq	4256d0 <ferror@plt+0x22e50>  // b.none
  4256c8:	mov	w0, #0x2000                	// #8192
  4256cc:	b	4251c0 <ferror@plt+0x22940>
  4256d0:	cmp	x28, #0x1
  4256d4:	b.eq	42516c <ferror@plt+0x228ec>  // b.none
  4256d8:	cmp	x28, #0x2
  4256dc:	b.ne	4256c8 <ferror@plt+0x22e48>  // b.any
  4256e0:	ldrb	w0, [x20, #1]
  4256e4:	cmp	w0, #0x6c
  4256e8:	b.eq	42516c <ferror@plt+0x228ec>  // b.none
  4256ec:	mov	w0, #0x2000                	// #8192
  4256f0:	b	4251c0 <ferror@plt+0x22940>
  4256f4:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  4256f8:	mov	w3, #0x0                   	// #0
  4256fc:	add	x4, x4, #0x8e8
  425700:	b	425090 <ferror@plt+0x22810>
  425704:	mov	w0, #0x10                  	// #16
  425708:	b	4251e0 <ferror@plt+0x22960>
  42570c:	and	w26, w27, #0xf0
  425710:	mov	w1, #0x7                   	// #7
  425714:	b	425464 <ferror@plt+0x22be4>
  425718:	mov	x6, x22
  42571c:	mov	w5, w20
  425720:	mov	w2, w24
  425724:	mov	x0, x23
  425728:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42572c:	mov	w3, #0x0                   	// #0
  425730:	add	x4, x4, #0x968
  425734:	mov	w1, #0x3                   	// #3
  425738:	bl	423290 <ferror@plt+0x20a10>
  42573c:	ldp	x21, x22, [sp, #32]
  425740:	ldp	x25, x26, [sp, #64]
  425744:	b	424dac <ferror@plt+0x2252c>
  425748:	ldr	w6, [x1, #8]
  42574c:	ubfx	x4, x2, #12, #1
  425750:	stp	xzr, xzr, [x8]
  425754:	cmp	w6, #0x1
  425758:	strb	w4, [x8, #16]
  42575c:	strb	wzr, [x8, #17]
  425760:	ldr	x5, [x1, #16]
  425764:	b.eq	4259a0 <ferror@plt+0x23120>  // b.none
  425768:	stp	x29, x30, [sp, #-64]!
  42576c:	and	w1, w2, #0xf00
  425770:	cmp	w1, #0x400
  425774:	mov	x29, sp
  425778:	ldr	x9, [x0, #1208]
  42577c:	b.eq	4257ac <ferror@plt+0x22f2c>  // b.none
  425780:	cmp	w1, #0x200
  425784:	b.eq	425a74 <ferror@plt+0x231f4>  // b.none
  425788:	cmp	w1, #0x800
  42578c:	b.eq	425a14 <ferror@plt+0x23194>  // b.none
  425790:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
  425794:	mov	x11, #0xa                   	// #10
  425798:	mov	x3, x5
  42579c:	mov	w10, w11
  4257a0:	movk	x7, #0x1999, lsl #48
  4257a4:	mov	x12, #0xfffffffffffffff7    	// #-9
  4257a8:	b	4257c0 <ferror@plt+0x22f40>
  4257ac:	mov	x11, #0x8                   	// #8
  4257b0:	add	x3, x5, #0x1
  4257b4:	mov	w10, w11
  4257b8:	mov	x7, #0x2000000000000000    	// #2305843009213693952
  4257bc:	mov	x12, #0xfffffffffffffff9    	// #-7
  4257c0:	cmp	x9, #0x3f
  4257c4:	b.hi	4257e0 <ferror@plt+0x22f60>  // b.pmore
  4257c8:	neg	w7, w9
  4257cc:	mov	x1, #0xffffffffffffffff    	// #-1
  4257d0:	lsr	x7, x1, x7
  4257d4:	add	x7, x7, x12
  4257d8:	udiv	x7, x7, x11
  4257dc:	add	x7, x7, #0x1
  4257e0:	add	x6, x5, w6, uxtw
  4257e4:	cmp	x3, x6
  4257e8:	b.cs	425860 <ferror@plt+0x22fe0>  // b.hs, b.nlast
  4257ec:	sub	x16, x9, #0x40
  4257f0:	mov	x4, #0xffffffffffffffff    	// #-1
  4257f4:	lsl	x17, x4, x9
  4257f8:	adrp	x12, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4257fc:	lsl	x4, x4, x16
  425800:	adrp	x14, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  425804:	mvn	x17, x17
  425808:	mvn	x13, x4
  42580c:	add	x12, x12, #0x2c0
  425810:	add	x14, x14, #0xfa0
  425814:	mov	w15, #0x0                   	// #0
  425818:	mov	w18, #0x1                   	// #1
  42581c:	stp	x19, x20, [sp, #16]
  425820:	stp	x21, x22, [sp, #32]
  425824:	ldrb	w1, [x3]
  425828:	mov	x4, x1
  42582c:	ldrh	w1, [x12, x1, lsl #1]
  425830:	tbnz	w1, #2, 4258c8 <ferror@plt+0x23048>
  425834:	cmp	w10, #0x10
  425838:	b.eq	4258f4 <ferror@plt+0x23074>  // b.none
  42583c:	cmp	w4, #0x27
  425840:	b.ne	42584c <ferror@plt+0x22fcc>  // b.any
  425844:	ldrb	w1, [x0, #1166]
  425848:	cbnz	w1, 4258e4 <ferror@plt+0x23064>
  42584c:	cbz	w15, 425854 <ferror@plt+0x22fd4>
  425850:	tbz	w2, #24, 425aa4 <ferror@plt+0x23224>
  425854:	ldp	x19, x20, [sp, #16]
  425858:	ldp	x21, x22, [sp, #32]
  42585c:	ldrb	w4, [x8, #16]
  425860:	cbnz	w4, 4258c0 <ferror@plt+0x23040>
  425864:	ldrb	w1, [x0, #1160]
  425868:	cbnz	w1, 425a08 <ferror@plt+0x23188>
  42586c:	cmp	x9, #0x40
  425870:	ldp	x3, x2, [x8]
  425874:	b.hi	425a2c <ferror@plt+0x231ac>  // b.pmore
  425878:	sub	w1, w9, #0x1
  42587c:	lsr	x1, x2, x1
  425880:	mvn	x1, x1
  425884:	and	w1, w1, #0x1
  425888:	cbnz	w1, 4258c0 <ferror@plt+0x23040>
  42588c:	cmp	w10, #0xa
  425890:	b.ne	4258b8 <ferror@plt+0x23038>  // b.any
  425894:	ldrb	w1, [x0, #1152]
  425898:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42589c:	add	x2, x2, #0xae8
  4258a0:	str	x8, [sp, #56]
  4258a4:	cmp	w1, #0x0
  4258a8:	cset	w1, ne  // ne = any
  4258ac:	lsl	w1, w1, #1
  4258b0:	bl	422e10 <ferror@plt+0x20590>
  4258b4:	ldr	x8, [sp, #56]
  4258b8:	mov	w0, #0x1                   	// #1
  4258bc:	strb	w0, [x8, #16]
  4258c0:	ldp	x29, x30, [sp], #64
  4258c4:	ret
  4258c8:	ldr	x5, [x8, #8]
  4258cc:	ldrb	w1, [x14, w4, sxtw]
  4258d0:	cmp	x5, x7
  4258d4:	b.cs	4259b4 <ferror@plt+0x23134>  // b.hs, b.nlast
  4258d8:	and	x1, x1, #0xff
  4258dc:	madd	x1, x11, x5, x1
  4258e0:	str	x1, [x8, #8]
  4258e4:	add	x3, x3, #0x1
  4258e8:	cmp	x6, x3
  4258ec:	b.ne	425824 <ferror@plt+0x22fa4>  // b.any
  4258f0:	b	42584c <ferror@plt+0x22fcc>
  4258f4:	tbz	w1, #8, 42583c <ferror@plt+0x22fbc>
  4258f8:	ldr	x5, [x8, #8]
  4258fc:	ldrb	w1, [x14, w4, sxtw]
  425900:	cmp	x5, x7
  425904:	b.cc	4258d8 <ferror@plt+0x23058>  // b.lo, b.ul, b.last
  425908:	ldrb	w20, [x8, #16]
  42590c:	and	x1, x1, #0xff
  425910:	ldr	x7, [x8]
  425914:	mov	w22, #0x3c                  	// #60
  425918:	mov	w30, #0x4                   	// #4
  42591c:	nop
  425920:	lsr	x4, x7, x22
  425924:	cmp	x4, #0x0
  425928:	lsr	x22, x5, x22
  42592c:	cset	w21, ne  // ne = any
  425930:	lsl	x4, x7, x30
  425934:	orr	x22, x4, x22
  425938:	lsl	x30, x5, x30
  42593c:	adds	x1, x1, x30
  425940:	mov	w5, w21
  425944:	b.cc	425958 <ferror@plt+0x230d8>  // b.lo, b.ul, b.last
  425948:	mov	x4, #0x1                   	// #1
  42594c:	adds	x4, x4, x22
  425950:	mov	x22, x4
  425954:	csel	w5, w21, w18, cc  // cc = lo, ul, last
  425958:	cmp	x9, #0x40
  42595c:	b.ls	425a40 <ferror@plt+0x231c0>  // b.plast
  425960:	and	x4, x13, x22
  425964:	cmp	x16, #0x3f
  425968:	b.ls	425ac8 <ferror@plt+0x23248>  // b.plast
  42596c:	mov	x19, x1
  425970:	mov	x4, x22
  425974:	orr	w15, w15, w5
  425978:	mov	x7, #0x0                   	// #0
  42597c:	and	w15, w15, #0xff
  425980:	stp	x4, x19, [x8]
  425984:	strb	w20, [x8, #16]
  425988:	strb	w5, [x8, #17]
  42598c:	nop
  425990:	add	x3, x3, #0x1
  425994:	cmp	x6, x3
  425998:	b.ne	425824 <ferror@plt+0x22fa4>  // b.any
  42599c:	b	42584c <ferror@plt+0x22fcc>
  4259a0:	ldrb	w0, [x5]
  4259a4:	sub	w0, w0, #0x30
  4259a8:	sxtw	x0, w0
  4259ac:	str	x0, [x8, #8]
  4259b0:	ret
  4259b4:	ldrb	w20, [x8, #16]
  4259b8:	and	x1, x1, #0xff
  4259bc:	cmp	w10, #0x2
  4259c0:	ldr	x7, [x8]
  4259c4:	b.eq	425a8c <ferror@plt+0x2320c>  // b.none
  4259c8:	cmp	w10, #0x10
  4259cc:	b.eq	425a98 <ferror@plt+0x23218>  // b.none
  4259d0:	cmp	xzr, x7, lsr #61
  4259d4:	lsl	x30, x5, #3
  4259d8:	cset	w21, ne  // ne = any
  4259dc:	extr	x22, x7, x5, #61
  4259e0:	cmp	w10, #0xa
  4259e4:	b.ne	42593c <ferror@plt+0x230bc>  // b.any
  4259e8:	lsr	x4, x5, #63
  4259ec:	lsl	x19, x5, #1
  4259f0:	adds	x1, x19, x1
  4259f4:	add	x4, x4, x7, lsl #1
  4259f8:	cinc	x4, x4, cs  // cs = hs, nlast
  4259fc:	adds	x1, x30, x1
  425a00:	cinc	x4, x4, cs  // cs = hs, nlast
  425a04:	b	42594c <ferror@plt+0x230cc>
  425a08:	ldrb	w1, [x0, #16]
  425a0c:	cbnz	w1, 4258c0 <ferror@plt+0x23040>
  425a10:	b	42586c <ferror@plt+0x22fec>
  425a14:	mov	x11, #0x2                   	// #2
  425a18:	mov	x7, #0x8000000000000000    	// #-9223372036854775808
  425a1c:	add	x3, x5, x11
  425a20:	mov	w10, w11
  425a24:	mov	x12, #0xffffffffffffffff    	// #-1
  425a28:	b	4257c0 <ferror@plt+0x22f40>
  425a2c:	sub	w1, w9, #0x41
  425a30:	lsr	x1, x3, x1
  425a34:	mvn	x1, x1
  425a38:	and	w1, w1, #0x1
  425a3c:	b	425888 <ferror@plt+0x23008>
  425a40:	b.eq	425ac4 <ferror@plt+0x23244>  // b.none
  425a44:	bics	xzr, x1, x17
  425a48:	and	x19, x17, x1
  425a4c:	mov	x4, #0x0                   	// #0
  425a50:	b.eq	425ac8 <ferror@plt+0x23248>  // b.none
  425a54:	mov	w5, #0x1                   	// #1
  425a58:	orr	w15, w15, w5
  425a5c:	mov	x7, #0x0                   	// #0
  425a60:	and	w15, w15, #0xff
  425a64:	stp	x4, x19, [x8]
  425a68:	strb	w20, [x8, #16]
  425a6c:	strb	w5, [x8, #17]
  425a70:	b	425990 <ferror@plt+0x23110>
  425a74:	mov	x11, #0x10                  	// #16
  425a78:	add	x3, x5, #0x2
  425a7c:	mov	w10, w11
  425a80:	mov	x7, #0x1000000000000000    	// #1152921504606846976
  425a84:	mov	x12, #0xfffffffffffffff1    	// #-15
  425a88:	b	4257c0 <ferror@plt+0x22f40>
  425a8c:	mov	w22, #0x3f                  	// #63
  425a90:	mov	w30, #0x1                   	// #1
  425a94:	b	425920 <ferror@plt+0x230a0>
  425a98:	mov	w22, #0x3c                  	// #60
  425a9c:	mov	w30, #0x4                   	// #4
  425aa0:	b	425920 <ferror@plt+0x230a0>
  425aa4:	mov	w1, #0x2                   	// #2
  425aa8:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  425aac:	add	x2, x2, #0xab8
  425ab0:	bl	422e10 <ferror@plt+0x20590>
  425ab4:	ldp	x19, x20, [sp, #16]
  425ab8:	ldp	x21, x22, [sp, #32]
  425abc:	ldp	x29, x30, [sp], #64
  425ac0:	ret
  425ac4:	mov	x4, #0x0                   	// #0
  425ac8:	mov	x19, x1
  425acc:	cmp	x4, x22
  425ad0:	b.eq	425974 <ferror@plt+0x230f4>  // b.none
  425ad4:	mov	w5, #0x1                   	// #1
  425ad8:	b	425a58 <ferror@plt+0x231d8>
  425adc:	nop
  425ae0:	stp	x29, x30, [sp, #-384]!
  425ae4:	and	w1, w1, #0xff
  425ae8:	mov	x29, sp
  425aec:	stp	x21, x22, [sp, #32]
  425af0:	mov	x22, x0
  425af4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  425af8:	stp	x19, x20, [sp, #16]
  425afc:	add	x0, x0, #0xe30
  425b00:	ldr	x19, [x22, #1096]
  425b04:	stp	x23, x24, [sp, #48]
  425b08:	mov	w24, #0x1                   	// #1
  425b0c:	stp	x25, x26, [sp, #64]
  425b10:	mov	w25, #0x0                   	// #0
  425b14:	stp	x27, x28, [sp, #80]
  425b18:	str	wzr, [x22, #28]
  425b1c:	str	xzr, [x22, #432]
  425b20:	str	wzr, [sp, #124]
  425b24:	str	x0, [sp, #176]
  425b28:	mov	w0, #0x16                  	// #22
  425b2c:	str	w0, [x19, #36]
  425b30:	str	w1, [sp, #188]
  425b34:	str	wzr, [sp, #260]
  425b38:	add	x1, sp, #0x104
  425b3c:	mov	x0, x22
  425b40:	bl	43a0b8 <ferror@plt+0x37838>
  425b44:	ldrb	w7, [x0, #4]
  425b48:	ldr	w9, [sp, #260]
  425b4c:	mov	x27, x0
  425b50:	add	w25, w25, #0x1
  425b54:	cmp	w7, #0x5
  425b58:	b.eq	4267b8 <ferror@plt+0x23f38>  // b.none
  425b5c:	b.hi	4265e0 <ferror@plt+0x23d60>  // b.pmore
  425b60:	cmp	w7, #0x1
  425b64:	b.eq	4267f4 <ferror@plt+0x23f74>  // b.none
  425b68:	cmp	w7, #0x4
  425b6c:	b.ne	42688c <ferror@plt+0x2400c>  // b.any
  425b70:	cbz	w24, 426854 <ferror@plt+0x23fd4>
  425b74:	ldr	w21, [x19, #36]
  425b78:	sub	w0, w21, #0x1
  425b7c:	cmp	w0, #0x1b
  425b80:	b.hi	425be0 <ferror@plt+0x23360>  // b.pmore
  425b84:	sbfiz	x1, x21, #1, #32
  425b88:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x196d8>
  425b8c:	add	x23, x23, #0xfe0
  425b90:	sxtw	x0, w21
  425b94:	ldrb	w1, [x23, x1]
  425b98:	cmp	w1, #0x10
  425b9c:	b.ls	427748 <ferror@plt+0x24ec8>  // b.plast
  425ba0:	mov	w7, #0x10                  	// #16
  425ba4:	mov	w28, #0x1b                  	// #27
  425ba8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  425bac:	add	x1, x1, #0xdf8
  425bb0:	stp	x27, x1, [sp, #104]
  425bb4:	mov	x27, x23
  425bb8:	mov	w23, w7
  425bbc:	str	w9, [sp, #120]
  425bc0:	ldrb	w1, [x22, #1141]
  425bc4:	cbz	w1, 425bd4 <ferror@plt+0x23354>
  425bc8:	add	x0, x27, x0, lsl #1
  425bcc:	ldrb	w0, [x0, #1]
  425bd0:	tbnz	w0, #2, 426748 <ferror@plt+0x23ec8>
  425bd4:	sub	w1, w21, #0x1
  425bd8:	cmp	w1, #0x1b
  425bdc:	b.ls	425c1c <ferror@plt+0x2339c>  // b.plast
  425be0:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  425be4:	mov	w3, w21
  425be8:	mov	x0, x22
  425bec:	add	x2, x2, #0xdd8
  425bf0:	mov	w1, #0x4                   	// #4
  425bf4:	mov	w24, #0x0                   	// #0
  425bf8:	bl	422e10 <ferror@plt+0x20590>
  425bfc:	mov	w0, w24
  425c00:	ldp	x19, x20, [sp, #16]
  425c04:	ldp	x21, x22, [sp, #32]
  425c08:	ldp	x23, x24, [sp, #48]
  425c0c:	ldp	x25, x26, [sp, #64]
  425c10:	ldp	x27, x28, [sp, #80]
  425c14:	ldp	x29, x30, [sp], #384
  425c18:	ret
  425c1c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  425c20:	add	x0, x0, #0xfa0
  425c24:	ldrh	w0, [x0, w1, uxtw #1]
  425c28:	adr	x1, 425c34 <ferror@plt+0x233b4>
  425c2c:	add	x0, x1, w0, sxth #2
  425c30:	br	x0
  425c34:	add	x2, sp, #0x200
  425c38:	sub	x20, x19, #0x28
  425c3c:	ldp	x0, x1, [x19, #-32]
  425c40:	cmp	w21, #0x5
  425c44:	stp	x0, x1, [x2, #-200]
  425c48:	add	x3, sp, #0x138
  425c4c:	add	x26, sp, #0x150
  425c50:	ldr	x0, [x20, #24]
  425c54:	str	x0, [sp, #328]
  425c58:	ldp	x0, x1, [x19, #8]
  425c5c:	ldurb	w12, [x19, #-16]
  425c60:	ldp	x13, x11, [x19, #-32]
  425c64:	stp	x0, x1, [sp, #336]
  425c68:	ldr	x0, [x19, #24]
  425c6c:	str	x0, [sp, #352]
  425c70:	ldr	x1, [x22, #1208]
  425c74:	ldrb	w6, [x19, #24]
  425c78:	ldp	x5, x4, [x19, #8]
  425c7c:	b.eq	426e28 <ferror@plt+0x245a8>  // b.none
  425c80:	b.hi	42697c <ferror@plt+0x240fc>  // b.pmore
  425c84:	cmp	w21, #0x4
  425c88:	b.ne	426fd4 <ferror@plt+0x24754>  // b.any
  425c8c:	adds	x8, x11, x4
  425c90:	adc	x3, x5, x13
  425c94:	cbz	w12, 4271b4 <ferror@plt+0x24934>
  425c98:	cmp	x1, #0x40
  425c9c:	mov	w6, #0x1                   	// #1
  425ca0:	b.ls	4271c0 <ferror@plt+0x24940>  // b.plast
  425ca4:	sub	x1, x1, #0x40
  425ca8:	mov	x0, #0xffffffffffffffff    	// #-1
  425cac:	cmp	x1, #0x40
  425cb0:	lsl	x0, x0, x1
  425cb4:	bic	x0, x3, x0
  425cb8:	csel	x3, x0, x3, cc  // cc = lo, ul, last
  425cbc:	cbz	w12, 4274b8 <ferror@plt+0x24c38>
  425cc0:	mov	x4, x8
  425cc4:	mov	x5, x3
  425cc8:	add	x12, sp, #0x168
  425ccc:	mov	w2, #0x0                   	// #0
  425cd0:	b	426a0c <ferror@plt+0x2418c>
  425cd4:	sub	x20, x19, #0x28
  425cd8:	ldrb	w6, [x19, #24]
  425cdc:	ldp	x4, x5, [x19, #-32]
  425ce0:	add	x26, sp, #0x150
  425ce4:	ldp	x3, x8, [x19, #8]
  425ce8:	stp	x4, x5, [sp, #336]
  425cec:	ldr	x0, [x20, #24]
  425cf0:	str	x0, [sp, #352]
  425cf4:	ldr	x1, [x22, #1208]
  425cf8:	ldurb	w0, [x19, #-16]
  425cfc:	ldp	x2, x5, [x19, #-32]
  425d00:	orr	w0, w0, w6
  425d04:	cbz	w0, 426f64 <ferror@plt+0x246e4>
  425d08:	cmp	x3, x2
  425d0c:	b.cc	426b70 <ferror@plt+0x242f0>  // b.lo, b.ul, b.last
  425d10:	cmp	x8, x5
  425d14:	cset	w1, ls  // ls = plast
  425d18:	cmp	x3, x2
  425d1c:	csel	w1, w1, wzr, eq  // eq = none
  425d20:	cmp	w21, #0x19
  425d24:	cbnz	w1, 42720c <ferror@plt+0x2498c>
  425d28:	mov	x0, #0x0                   	// #0
  425d2c:	b.eq	425d44 <ferror@plt+0x234c4>  // b.none
  425d30:	cmp	w21, #0x3
  425d34:	mov	x0, #0x1                   	// #1
  425d38:	b.eq	425d44 <ferror@plt+0x234c4>  // b.none
  425d3c:	cmp	w21, #0x2
  425d40:	cset	x0, ne  // ne = any
  425d44:	stp	xzr, x0, [sp, #336]
  425d48:	strh	wzr, [sp, #352]
  425d4c:	b	425e38 <ferror@plt+0x235b8>
  425d50:	add	x2, sp, #0x200
  425d54:	cmp	w21, #0x1b
  425d58:	ldp	x0, x1, [x19, #8]
  425d5c:	add	x3, sp, #0x138
  425d60:	stp	x0, x1, [x2, #-200]
  425d64:	ldr	x0, [x19, #24]
  425d68:	str	x0, [sp, #328]
  425d6c:	ldrb	w5, [x19, #24]
  425d70:	ldrb	w1, [x19, #25]
  425d74:	ldp	x20, x4, [x19, #8]
  425d78:	b.eq	426f48 <ferror@plt+0x246c8>  // b.none
  425d7c:	cmp	w21, #0x1c
  425d80:	b.eq	426ef0 <ferror@plt+0x24670>  // b.none
  425d84:	cmp	w21, #0xe
  425d88:	b.eq	426e74 <ferror@plt+0x245f4>  // b.none
  425d8c:	orr	x20, x4, x20
  425d90:	mov	w0, #0x0                   	// #0
  425d94:	cmp	x20, #0x0
  425d98:	mov	w5, #0x0                   	// #0
  425d9c:	cset	x4, eq  // eq = none
  425da0:	mov	x20, #0x0                   	// #0
  425da4:	add	x12, sp, #0x168
  425da8:	ldr	w2, [x19, #32]
  425dac:	stp	x20, x4, [sp, #312]
  425db0:	sub	x20, x19, #0x28
  425db4:	strb	w5, [sp, #328]
  425db8:	strb	w0, [sp, #329]
  425dbc:	ldp	x0, x1, [x3]
  425dc0:	stp	x0, x1, [x12]
  425dc4:	ldr	x3, [x3, #16]
  425dc8:	str	x3, [x12, #16]
  425dcc:	stp	x0, x1, [x19, #-32]
  425dd0:	ldr	x0, [x12, #16]
  425dd4:	str	x0, [x20, #24]
  425dd8:	stur	w2, [x19, #-8]
  425ddc:	b	426078 <ferror@plt+0x237f8>
  425de0:	sub	x20, x19, #0x28
  425de4:	ldrb	w1, [x19, #24]
  425de8:	ldp	x2, x3, [x19, #-32]
  425dec:	cmp	w21, #0x9
  425df0:	ldp	x4, x6, [x19, #8]
  425df4:	stp	x2, x3, [sp, #336]
  425df8:	add	x26, sp, #0x150
  425dfc:	ldr	x0, [x20, #24]
  425e00:	str	x0, [sp, #352]
  425e04:	ldurb	w0, [x19, #-16]
  425e08:	ldp	x3, x5, [x19, #-32]
  425e0c:	orr	w0, w0, w1
  425e10:	b.eq	426d98 <ferror@plt+0x24518>  // b.none
  425e14:	cmp	w21, #0xa
  425e18:	eor	x1, x6, x5
  425e1c:	eor	x2, x4, x3
  425e20:	b.ne	425e2c <ferror@plt+0x235ac>  // b.any
  425e24:	orr	x1, x6, x5
  425e28:	orr	x2, x4, x3
  425e2c:	stp	x2, x1, [sp, #336]
  425e30:	strb	w0, [sp, #352]
  425e34:	strb	wzr, [sp, #353]
  425e38:	add	x3, sp, #0x260
  425e3c:	ldr	w2, [x19, #32]
  425e40:	ldp	x0, x1, [x26]
  425e44:	stp	x0, x1, [x3, #-248]
  425e48:	ldr	x3, [x26, #16]
  425e4c:	str	x3, [sp, #376]
  425e50:	stp	x0, x1, [x20, #8]
  425e54:	ldr	x0, [sp, #376]
  425e58:	str	x0, [x20, #24]
  425e5c:	str	w2, [x20, #32]
  425e60:	b	426078 <ferror@plt+0x237f8>
  425e64:	add	x2, sp, #0x200
  425e68:	sub	x20, x19, #0x28
  425e6c:	ldp	x0, x1, [x19, #-32]
  425e70:	add	x12, sp, #0x120
  425e74:	stp	x0, x1, [x2, #-248]
  425e78:	ldurb	w13, [x19, #-16]
  425e7c:	ldp	x0, x1, [x19, #8]
  425e80:	stp	x0, x1, [sp, #288]
  425e84:	ldurb	w11, [x19, #-15]
  425e88:	ldr	x0, [x20, #24]
  425e8c:	str	x0, [sp, #280]
  425e90:	ldr	x0, [x19, #24]
  425e94:	str	x0, [sp, #304]
  425e98:	ldr	w18, [x19, #32]
  425e9c:	mov	w14, w13
  425ea0:	ldp	x6, x9, [x19, #-32]
  425ea4:	ldp	x4, x10, [x19, #8]
  425ea8:	ldr	x1, [x22, #1208]
  425eac:	cbnz	w13, 426a98 <ferror@plt+0x24218>
  425eb0:	ldrb	w0, [x19, #24]
  425eb4:	str	w0, [sp, #184]
  425eb8:	cbz	w0, 4260ac <ferror@plt+0x2382c>
  425ebc:	mov	w26, #0x0                   	// #0
  425ec0:	mov	w15, #0x1                   	// #1
  425ec4:	cbz	x4, 426148 <ferror@plt+0x238c8>
  425ec8:	sub	w2, w1, #0x41
  425ecc:	mov	x0, #0x1                   	// #1
  425ed0:	sub	x8, x1, #0x1
  425ed4:	lsl	x0, x0, x2
  425ed8:	tst	x4, x0
  425edc:	b.ne	427468 <ferror@plt+0x24be8>  // b.any
  425ee0:	lsr	x0, x0, #1
  425ee4:	mov	x2, x8
  425ee8:	tst	x4, x0
  425eec:	sub	x8, x8, #0x1
  425ef0:	b.eq	425ee0 <ferror@plt+0x23660>  // b.none
  425ef4:	sub	x2, x1, x2
  425ef8:	mov	w0, #0x1                   	// #1
  425efc:	stp	x4, x10, [sp, #288]
  425f00:	add	x8, sp, #0x150
  425f04:	strb	w0, [sp, #304]
  425f08:	add	x0, sp, #0xe0
  425f0c:	stp	x1, x2, [sp, #128]
  425f10:	ldp	x4, x5, [x12]
  425f14:	stp	x4, x5, [sp, #224]
  425f18:	ldr	x4, [x12, #16]
  425f1c:	str	w14, [sp, #144]
  425f20:	str	w15, [sp, #152]
  425f24:	stp	x9, x6, [sp, #160]
  425f28:	str	x4, [sp, #240]
  425f2c:	bl	424178 <ferror@plt+0x218f8>
  425f30:	ldr	w14, [sp, #144]
  425f34:	mov	x13, #0x0                   	// #0
  425f38:	ldr	w15, [sp, #152]
  425f3c:	mov	x8, #0x0                   	// #0
  425f40:	mov	x12, #0x1                   	// #1
  425f44:	mov	x11, #0xffffffffffffffff    	// #-1
  425f48:	ldp	x1, x2, [sp, #128]
  425f4c:	ldp	x9, x6, [sp, #160]
  425f50:	ldp	x0, x4, [sp, #336]
  425f54:	b	425fa4 <ferror@plt+0x23724>
  425f58:	ldr	x3, [x22, #1208]
  425f5c:	cmp	x9, x4
  425f60:	sbc	x6, x6, x0
  425f64:	sub	x9, x9, x4
  425f68:	cmp	x3, #0x40
  425f6c:	b.ls	426abc <ferror@plt+0x2423c>  // b.plast
  425f70:	sub	x3, x3, #0x40
  425f74:	cmp	x3, #0x40
  425f78:	lsl	x3, x11, x3
  425f7c:	bic	x3, x6, x3
  425f80:	csel	x6, x3, x6, cc  // cc = lo, ul, last
  425f84:	cmp	x2, #0x3f
  425f88:	b.ls	426aac <ferror@plt+0x2422c>  // b.plast
  425f8c:	sub	w3, w2, #0x40
  425f90:	lsl	x3, x12, x3
  425f94:	orr	x8, x8, x3
  425f98:	sub	x2, x2, #0x1
  425f9c:	extr	x4, x0, x4, #1
  425fa0:	lsr	x0, x0, #1
  425fa4:	cmp	x6, x0
  425fa8:	b.hi	425f58 <ferror@plt+0x236d8>  // b.pmore
  425fac:	cmp	x9, x4
  425fb0:	ccmp	x6, x0, #0x0, cs  // cs = hs, nlast
  425fb4:	b.eq	425f58 <ferror@plt+0x236d8>  // b.none
  425fb8:	cbnz	x2, 425f98 <ferror@plt+0x23718>
  425fbc:	cmp	w21, #0x7
  425fc0:	b.eq	426dd4 <ferror@plt+0x24554>  // b.none
  425fc4:	mov	w11, #0x0                   	// #0
  425fc8:	cbnz	w26, 426d2c <ferror@plt+0x244ac>
  425fcc:	strb	w15, [sp, #280]
  425fd0:	add	x12, sp, #0x168
  425fd4:	strb	w11, [sp, #281]
  425fd8:	stp	x6, x9, [sp, #264]
  425fdc:	ldr	x0, [sp, #280]
  425fe0:	str	x0, [sp, #376]
  425fe4:	stp	x6, x9, [sp, #360]
  425fe8:	strb	w15, [sp, #376]
  425fec:	strb	w11, [sp, #377]
  425ff0:	ldp	x0, x1, [x12]
  425ff4:	ldr	w2, [x19, #32]
  425ff8:	stp	x0, x1, [x20, #8]
  425ffc:	ldr	x0, [x12, #16]
  426000:	str	x0, [x20, #24]
  426004:	str	w2, [x20, #32]
  426008:	b	426078 <ferror@plt+0x237f8>
  42600c:	sub	x20, x19, #0x28
  426010:	ldr	w4, [x19, #32]
  426014:	ldp	x2, x3, [x19, #-32]
  426018:	ldp	x0, x5, [x19, #8]
  42601c:	stp	x2, x3, [sp, #336]
  426020:	ldr	x2, [x20, #24]
  426024:	str	x2, [sp, #352]
  426028:	ldp	x3, x2, [x19, #-32]
  42602c:	strh	wzr, [sp, #352]
  426030:	cmp	x3, x0
  426034:	cset	w0, eq  // eq = none
  426038:	cmp	x2, x5
  42603c:	csel	w0, w0, wzr, eq  // eq = none
  426040:	cmp	w21, #0x18
  426044:	eor	w2, w0, #0x1
  426048:	csel	w0, w0, w2, ne  // ne = any
  42604c:	and	x0, x0, #0xff
  426050:	stp	xzr, x0, [sp, #336]
  426054:	ldr	x0, [sp, #352]
  426058:	str	x0, [sp, #376]
  42605c:	add	x0, sp, #0x260
  426060:	ldp	x2, x3, [sp, #336]
  426064:	stp	x2, x3, [x0, #-248]
  426068:	stp	x2, x3, [x19, #-32]
  42606c:	ldr	x0, [sp, #376]
  426070:	str	x0, [x20, #24]
  426074:	stur	w4, [x19, #-8]
  426078:	ldrb	w0, [x20, #25]
  42607c:	mov	x26, x20
  426080:	cbz	w0, 42608c <ferror@plt+0x2380c>
  426084:	ldr	w0, [x22, #28]
  426088:	cbz	w0, 426964 <ferror@plt+0x240e4>
  42608c:	ldr	w21, [x26, #36]
  426090:	sbfiz	x1, x21, #1, #32
  426094:	sxtw	x0, w21
  426098:	ldrb	w1, [x27, x1]
  42609c:	cmp	w1, w23
  4260a0:	b.ls	426208 <ferror@plt+0x23988>  // b.plast
  4260a4:	mov	x19, x26
  4260a8:	b	425bc0 <ferror@plt+0x23340>
  4260ac:	cmp	x1, #0x40
  4260b0:	b.hi	426d0c <ferror@plt+0x2448c>  // b.pmore
  4260b4:	sub	w14, w1, #0x1
  4260b8:	mov	w26, #0x0                   	// #0
  4260bc:	lsr	x0, x9, x14
  4260c0:	tbnz	w0, #0, 42739c <ferror@plt+0x24b1c>
  4260c4:	lsr	x0, x10, x14
  4260c8:	mvn	x0, x0
  4260cc:	and	w0, w0, #0x1
  4260d0:	mov	w14, w26
  4260d4:	mov	w15, #0x0                   	// #0
  4260d8:	cbnz	w0, 425ec4 <ferror@plt+0x23644>
  4260dc:	stp	x4, x10, [sp, #288]
  4260e0:	add	x0, sp, #0xc0
  4260e4:	add	x8, sp, #0xe0
  4260e8:	strb	wzr, [sp, #304]
  4260ec:	str	w15, [sp, #128]
  4260f0:	ldp	x4, x5, [x12]
  4260f4:	stp	x4, x5, [sp, #192]
  4260f8:	ldr	x2, [x12, #16]
  4260fc:	str	x1, [sp, #136]
  426100:	str	w13, [sp, #144]
  426104:	str	w11, [sp, #152]
  426108:	stp	x9, x6, [sp, #160]
  42610c:	str	w15, [sp, #184]
  426110:	str	x2, [sp, #208]
  426114:	bl	423d70 <ferror@plt+0x214f0>
  426118:	ldp	x4, x5, [sp, #224]
  42611c:	stp	x4, x5, [x12]
  426120:	ldr	w15, [sp, #128]
  426124:	ldp	x4, x10, [sp, #288]
  426128:	eor	w14, w26, #0x1
  42612c:	ldr	x0, [sp, #240]
  426130:	str	x0, [x12, #16]
  426134:	ldr	w13, [sp, #144]
  426138:	ldr	w11, [sp, #152]
  42613c:	ldr	x1, [sp, #136]
  426140:	ldp	x9, x6, [sp, #160]
  426144:	cbnz	x4, 425ec8 <ferror@plt+0x23648>
  426148:	cbnz	x10, 426c3c <ferror@plt+0x243bc>
  42614c:	ldr	w0, [x22, #28]
  426150:	cbz	w0, 427430 <ferror@plt+0x24bb0>
  426154:	strb	w13, [sp, #280]
  426158:	mov	w15, w13
  42615c:	strb	w11, [sp, #281]
  426160:	add	x12, sp, #0x168
  426164:	stp	x6, x9, [sp, #264]
  426168:	ldr	x0, [sp, #280]
  42616c:	str	x0, [sp, #376]
  426170:	b	425fe4 <ferror@plt+0x23764>
  426174:	cmp	w28, #0x15
  426178:	b.ne	427034 <ferror@plt+0x247b4>  // b.any
  42617c:	ldp	x2, x3, [x19, #8]
  426180:	sub	x0, x19, #0x28
  426184:	ldr	w1, [x19, #32]
  426188:	stp	x2, x3, [x19, #-32]
  42618c:	ldr	x2, [x19, #24]
  426190:	stur	x2, [x19, #-16]
  426194:	stur	w1, [x19, #-8]
  426198:	mov	x19, x0
  42619c:	b	425b38 <ferror@plt+0x232b8>
  4261a0:	ldp	x1, x0, [x19, #-72]
  4261a4:	sub	x2, x19, #0x50
  4261a8:	mov	x26, x2
  4261ac:	orr	x0, x0, x1
  4261b0:	cbz	x0, 426a78 <ferror@plt+0x241f8>
  4261b4:	ldr	w0, [x22, #28]
  4261b8:	sub	x20, x19, #0x28
  4261bc:	ldp	x4, x5, [x19, #-32]
  4261c0:	sub	w0, w0, #0x1
  4261c4:	str	w0, [x22, #28]
  4261c8:	stp	x4, x5, [x19, #-72]
  4261cc:	ldur	w0, [x19, #-8]
  4261d0:	ldr	x1, [x20, #24]
  4261d4:	str	x1, [x2, #24]
  4261d8:	stur	w0, [x19, #-48]
  4261dc:	ldrb	w0, [x20, #24]
  4261e0:	cbnz	w0, 4261e8 <ferror@plt+0x23968>
  4261e4:	ldrb	w0, [x19, #24]
  4261e8:	ldr	w21, [x26, #36]
  4261ec:	strb	w0, [x2, #24]
  4261f0:	sbfiz	x1, x21, #1, #32
  4261f4:	sxtw	x0, w21
  4261f8:	ldrb	w1, [x27, x1]
  4261fc:	cmp	w1, w23
  426200:	b.hi	4260a4 <ferror@plt+0x23824>  // b.pmore
  426204:	nop
  426208:	ldr	w9, [sp, #120]
  42620c:	mov	x19, x26
  426210:	ldr	x27, [sp, #104]
  426214:	cmp	w28, #0x15
  426218:	b.eq	427700 <ferror@plt+0x24e80>  // b.none
  42621c:	cmp	w28, #0x16
  426220:	b.ne	4262a0 <ferror@plt+0x23a20>  // b.any
  426224:	ldr	x0, [x22, #432]
  426228:	cbz	x0, 426240 <ferror@plt+0x239c0>
  42622c:	ldr	w0, [sp, #124]
  426230:	cmp	w25, #0x3
  426234:	eor	w0, w0, #0x1
  426238:	csinc	w0, w0, wzr, eq  // eq = none
  42623c:	cbnz	w0, 42762c <ferror@plt+0x24dac>
  426240:	ldr	x0, [x22, #1096]
  426244:	cmp	x0, x19
  426248:	b.eq	427574 <ferror@plt+0x24cf4>  // b.none
  42624c:	ldr	w0, [sp, #188]
  426250:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  426254:	ldr	w2, [x19, #32]
  426258:	add	x1, x1, #0xb28
  42625c:	cmp	w0, #0x0
  426260:	adrp	x5, 476000 <_obstack_memory_used@@Base+0x196d8>
  426264:	add	x5, x5, #0xb20
  426268:	mov	x0, x22
  42626c:	csel	x5, x5, x1, ne  // ne = any
  426270:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  426274:	mov	w3, #0x0                   	// #0
  426278:	add	x4, x4, #0xf88
  42627c:	mov	w24, #0x0                   	// #0
  426280:	mov	w1, #0x4                   	// #4
  426284:	bl	423290 <ferror@plt+0x20a10>
  426288:	b	425bfc <ferror@plt+0x2337c>
  42628c:	sub	w0, w28, #0x12
  426290:	ldr	w9, [sp, #120]
  426294:	cmp	w0, #0x1
  426298:	ldr	x27, [sp, #104]
  42629c:	b.hi	426d7c <ferror@plt+0x244fc>  // b.pmore
  4262a0:	cmp	w28, #0x11
  4262a4:	b.eq	426a30 <ferror@plt+0x241b0>  // b.none
  4262a8:	b.hi	4266c4 <ferror@plt+0x23e44>  // b.pmore
  4262ac:	cmp	w28, #0xf
  4262b0:	b.eq	426a30 <ferror@plt+0x241b0>  // b.none
  4262b4:	cmp	w28, #0x10
  4262b8:	b.ne	4262d4 <ferror@plt+0x23a54>  // b.any
  4262bc:	ldp	x1, x0, [x19, #8]
  4262c0:	orr	x0, x0, x1
  4262c4:	cbz	x0, 4262d4 <ferror@plt+0x23a54>
  4262c8:	ldr	w0, [x22, #28]
  4262cc:	add	w0, w0, #0x1
  4262d0:	str	w0, [x22, #28]
  4262d4:	ldr	x0, [x22, #1104]
  4262d8:	add	x19, x19, #0x28
  4262dc:	cmp	x0, x19
  4262e0:	b.eq	426704 <ferror@plt+0x23e84>  // b.none
  4262e4:	mov	w24, #0x1                   	// #1
  4262e8:	str	x27, [x19]
  4262ec:	stp	w9, w28, [x19, #32]
  4262f0:	b	425b38 <ferror@plt+0x232b8>
  4262f4:	ldp	x1, x0, [x19, #-32]
  4262f8:	sub	x20, x19, #0x28
  4262fc:	mov	x26, x20
  426300:	orr	x0, x0, x1
  426304:	cbz	x0, 426a1c <ferror@plt+0x2419c>
  426308:	ldr	w1, [x22, #28]
  42630c:	mov	x0, #0x1                   	// #1
  426310:	sub	w1, w1, #0x1
  426314:	str	w1, [x22, #28]
  426318:	ldr	w1, [x19, #32]
  42631c:	stp	xzr, x0, [x20, #8]
  426320:	strb	wzr, [x20, #24]
  426324:	strb	wzr, [x20, #25]
  426328:	str	w1, [x20, #32]
  42632c:	b	42608c <ferror@plt+0x2380c>
  426330:	ldp	x1, x0, [x19, #-32]
  426334:	sub	x20, x19, #0x28
  426338:	mov	x26, x20
  42633c:	orr	x0, x0, x1
  426340:	cbnz	x0, 426a1c <ferror@plt+0x2419c>
  426344:	ldr	w1, [x22, #28]
  426348:	sub	w1, w1, #0x1
  42634c:	str	w1, [x22, #28]
  426350:	b	426318 <ferror@plt+0x23a98>
  426354:	add	x2, sp, #0x200
  426358:	sub	x20, x19, #0x28
  42635c:	ldp	x0, x1, [x19, #-32]
  426360:	add	x12, sp, #0x120
  426364:	stp	x0, x1, [x2, #-248]
  426368:	ldurb	w11, [x19, #-16]
  42636c:	ldp	x0, x1, [x19, #8]
  426370:	stp	x0, x1, [sp, #288]
  426374:	ldr	x0, [x20, #24]
  426378:	str	x0, [sp, #280]
  42637c:	ldr	x0, [x19, #24]
  426380:	str	x0, [sp, #304]
  426384:	ldp	x18, x26, [x19, #-32]
  426388:	ldp	x15, x10, [x19, #8]
  42638c:	ldr	x9, [x22, #1208]
  426390:	cbnz	w11, 426ad0 <ferror@plt+0x24250>
  426394:	ldrb	w13, [x19, #24]
  426398:	mov	w14, #0x1                   	// #1
  42639c:	cbz	w13, 426568 <ferror@plt+0x23ce8>
  4263a0:	and	x0, x26, #0xffffffff
  4263a4:	lsr	x8, x10, #32
  4263a8:	and	x2, x10, #0xffffffff
  4263ac:	lsr	x4, x26, #32
  4263b0:	mov	w5, #0x1                   	// #1
  4263b4:	and	x3, x18, #0xffffffff
  4263b8:	mul	x6, x0, x8
  4263bc:	strh	w5, [sp, #352]
  4263c0:	mul	x1, x0, x2
  4263c4:	lsr	x12, x18, #32
  4263c8:	mul	x17, x2, x4
  4263cc:	lsl	x5, x6, #32
  4263d0:	mul	x16, x3, x8
  4263d4:	adds	x1, x1, x5
  4263d8:	mul	x3, x3, x2
  4263dc:	cset	x21, cs  // cs = hs, nlast
  4263e0:	lsr	x5, x17, #32
  4263e4:	mul	x2, x12, x2
  4263e8:	add	x6, x5, x6, lsr #32
  4263ec:	lsl	x26, x17, #32
  4263f0:	lsl	x17, x16, #32
  4263f4:	madd	x5, x4, x8, x21
  4263f8:	adds	x1, x1, x26
  4263fc:	lsl	x21, x2, #32
  426400:	str	x1, [sp, #344]
  426404:	adc	x5, x5, x6
  426408:	adds	x3, x3, x17
  42640c:	cset	x6, cs  // cs = hs, nlast
  426410:	adds	x3, x21, x3
  426414:	cset	x17, cs  // cs = hs, nlast
  426418:	cbnz	x6, 426b68 <ferror@plt+0x242e8>
  42641c:	cbnz	x17, 426b68 <ferror@plt+0x242e8>
  426420:	lsr	x2, x2, #32
  426424:	add	x16, x2, x16, lsr #32
  426428:	madd	x8, x12, x8, x16
  42642c:	cbnz	x8, 426b68 <ferror@plt+0x242e8>
  426430:	cmp	x18, #0x0
  426434:	cset	w12, ne  // ne = any
  426438:	cmp	x15, #0x0
  42643c:	csel	w12, w12, wzr, ne  // ne = any
  426440:	lsr	x8, x15, #32
  426444:	and	x15, x15, #0xffffffff
  426448:	mul	x6, x0, x8
  42644c:	mul	x16, x4, x15
  426450:	mul	x0, x0, x15
  426454:	lsl	x2, x6, #32
  426458:	adds	x0, x0, x2
  42645c:	lsl	x2, x16, #32
  426460:	cset	x15, cs  // cs = hs, nlast
  426464:	adds	x0, x2, x0
  426468:	add	x0, x0, x3
  42646c:	cset	x2, cs  // cs = hs, nlast
  426470:	add	x0, x0, x5
  426474:	cbnz	x15, 426b60 <ferror@plt+0x242e0>
  426478:	cbnz	x2, 426b60 <ferror@plt+0x242e0>
  42647c:	lsr	x16, x16, #32
  426480:	add	x6, x16, x6, lsr #32
  426484:	madd	x4, x4, x8, x6
  426488:	cmp	x4, #0x0
  42648c:	csinc	w12, w12, wzr, eq  // eq = none
  426490:	ldr	x4, [sp, #352]
  426494:	add	x5, sp, #0x200
  426498:	stp	x4, x0, [sp, #328]
  42649c:	cmp	x9, #0x40
  4264a0:	add	x26, sp, #0x150
  4264a4:	ldp	x2, x3, [sp, #336]
  4264a8:	stp	x2, x3, [x5, #-200]
  4264ac:	add	x3, sp, #0x138
  4264b0:	b.ls	426ae0 <ferror@plt+0x24260>  // b.plast
  4264b4:	sub	x2, x9, #0x40
  4264b8:	cmp	x2, #0x3f
  4264bc:	b.hi	42705c <ferror@plt+0x247dc>  // b.pmore
  4264c0:	mov	x6, #0xffffffffffffffff    	// #-1
  4264c4:	lsl	x6, x6, x2
  4264c8:	bic	x6, x0, x6
  4264cc:	ldr	x2, [x3, #16]
  4264d0:	stp	x6, x1, [sp, #312]
  4264d4:	ldp	x4, x5, [x3]
  4264d8:	add	x3, sp, #0x260
  4264dc:	stp	x4, x5, [x26]
  4264e0:	stp	x4, x5, [x3, #-248]
  4264e4:	str	x2, [x26, #16]
  4264e8:	str	x2, [sp, #376]
  4264ec:	cmp	x6, x0
  4264f0:	mov	x2, x1
  4264f4:	csinc	w12, w12, wzr, eq  // eq = none
  4264f8:	cbnz	w11, 426b1c <ferror@plt+0x2429c>
  4264fc:	mov	w0, #0x0                   	// #0
  426500:	cbnz	w13, 426540 <ferror@plt+0x23cc0>
  426504:	mov	w0, #0x1                   	// #1
  426508:	cbnz	w12, 426540 <ferror@plt+0x23cc0>
  42650c:	cmp	x9, #0x40
  426510:	b.hi	427414 <ferror@plt+0x24b94>  // b.pmore
  426514:	sub	w1, w9, #0x1
  426518:	lsr	x1, x2, x1
  42651c:	mvn	x1, x1
  426520:	and	w1, w1, #0x1
  426524:	eor	w11, w11, #0x1
  426528:	mov	w0, #0x0                   	// #0
  42652c:	cmp	w11, w1
  426530:	b.eq	426540 <ferror@plt+0x23cc0>  // b.none
  426534:	orr	x0, x6, x2
  426538:	cmp	x0, #0x0
  42653c:	cset	w0, ne  // ne = any
  426540:	strb	w14, [sp, #352]
  426544:	strb	w0, [sp, #353]
  426548:	ldr	w0, [x19, #32]
  42654c:	stp	x6, x2, [sp, #336]
  426550:	ldp	x2, x3, [x26]
  426554:	stp	x2, x3, [x20, #8]
  426558:	ldr	x1, [x26, #16]
  42655c:	str	x1, [x20, #24]
  426560:	str	w0, [x20, #32]
  426564:	b	426078 <ferror@plt+0x237f8>
  426568:	cmp	x9, #0x40
  42656c:	b.hi	426cec <ferror@plt+0x2446c>  // b.pmore
  426570:	sub	w21, w9, #0x1
  426574:	mov	w11, w13
  426578:	lsr	x0, x26, x21
  42657c:	tbnz	w0, #0, 427354 <ferror@plt+0x24ad4>
  426580:	lsr	x0, x10, x21
  426584:	mvn	x0, x0
  426588:	and	w0, w0, #0x1
  42658c:	mov	w14, #0x0                   	// #0
  426590:	cbnz	w0, 4263a0 <ferror@plt+0x23b20>
  426594:	stp	x15, x10, [sp, #288]
  426598:	eor	w11, w11, #0x1
  42659c:	mov	x1, x9
  4265a0:	strb	wzr, [sp, #304]
  4265a4:	add	x0, sp, #0xc0
  4265a8:	add	x8, sp, #0xe0
  4265ac:	ldp	x2, x3, [x12]
  4265b0:	stp	x2, x3, [sp, #192]
  4265b4:	ldr	x2, [x12, #16]
  4265b8:	str	x2, [sp, #208]
  4265bc:	bl	423d70 <ferror@plt+0x214f0>
  4265c0:	ldp	x0, x1, [sp, #224]
  4265c4:	stp	x0, x1, [x12]
  4265c8:	mov	w13, #0x0                   	// #0
  4265cc:	ldr	x0, [sp, #240]
  4265d0:	mov	w14, w13
  4265d4:	ldp	x15, x10, [sp, #288]
  4265d8:	str	x0, [x12, #16]
  4265dc:	b	4263a0 <ferror@plt+0x23b20>
  4265e0:	cmp	w7, #0x35
  4265e4:	b.eq	42778c <ferror@plt+0x24f0c>  // b.none
  4265e8:	b.ls	426664 <ferror@plt+0x23de4>  // b.plast
  4265ec:	sub	w0, w7, #0x37
  4265f0:	and	w0, w0, #0xff
  4265f4:	cmp	w0, #0x5
  4265f8:	b.hi	4276c8 <ferror@plt+0x24e48>  // b.pmore
  4265fc:	cbz	w24, 426670 <ferror@plt+0x23df0>
  426600:	str	wzr, [sp, #336]
  426604:	cmp	w7, #0x37
  426608:	b.eq	426c78 <ferror@plt+0x243f8>  // b.none
  42660c:	mov	x1, x27
  426610:	add	x2, sp, #0x138
  426614:	add	x3, sp, #0x150
  426618:	mov	x0, x22
  42661c:	bl	41d2f0 <ferror@plt+0x1aa70>
  426620:	mov	w1, w0
  426624:	ldr	w2, [sp, #336]
  426628:	cbnz	w2, 426b9c <ferror@plt+0x2431c>
  42662c:	mov	w2, #0x0                   	// #0
  426630:	mov	x3, #0x0                   	// #0
  426634:	tbnz	w0, #31, 427328 <ferror@plt+0x24aa8>
  426638:	add	x20, sp, #0x168
  42663c:	mov	w0, #0x0                   	// #0
  426640:	stp	x3, x1, [sp, #360]
  426644:	mov	w24, #0x0                   	// #0
  426648:	strb	w2, [sp, #376]
  42664c:	strb	w0, [sp, #377]
  426650:	ldp	x0, x1, [x20]
  426654:	stp	x0, x1, [x19, #8]
  426658:	ldr	x0, [x20, #16]
  42665c:	str	x0, [x19, #24]
  426660:	b	425b38 <ferror@plt+0x232b8>
  426664:	cmp	w7, #0x25
  426668:	b.ne	42688c <ferror@plt+0x2400c>  // b.any
  42666c:	cbnz	w24, 426ba8 <ferror@plt+0x24328>
  426670:	mov	w26, w9
  426674:	mov	x1, x27
  426678:	mov	x0, x22
  42667c:	bl	42c490 <ferror@plt+0x29c10>
  426680:	mov	w2, w26
  426684:	mov	x5, x0
  426688:	mov	w3, #0x0                   	// #0
  42668c:	mov	x0, x22
  426690:	mov	w1, #0x3                   	// #3
  426694:	mov	w24, #0x0                   	// #0
  426698:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42669c:	add	x4, x4, #0xb30
  4266a0:	bl	423290 <ferror@plt+0x20a10>
  4266a4:	mov	w0, w24
  4266a8:	ldp	x19, x20, [sp, #16]
  4266ac:	ldp	x21, x22, [sp, #32]
  4266b0:	ldp	x23, x24, [sp, #48]
  4266b4:	ldp	x25, x26, [sp, #64]
  4266b8:	ldp	x27, x28, [sp, #80]
  4266bc:	ldp	x29, x30, [sp], #384
  4266c0:	ret
  4266c4:	cmp	w28, #0x12
  4266c8:	b.ne	42673c <ferror@plt+0x23ebc>  // b.any
  4266cc:	ldr	w0, [x19, #36]
  4266d0:	cmp	w0, #0x11
  4266d4:	b.ne	42771c <ferror@plt+0x24e9c>  // b.any
  4266d8:	ldp	x2, x1, [x19, #-32]
  4266dc:	add	x19, x19, #0x28
  4266e0:	ldr	w0, [x22, #28]
  4266e4:	orr	x1, x1, x2
  4266e8:	cmp	x1, #0x0
  4266ec:	sub	w1, w0, #0x1
  4266f0:	csinc	w0, w1, w0, eq  // eq = none
  4266f4:	str	w0, [x22, #28]
  4266f8:	ldr	x0, [x22, #1104]
  4266fc:	cmp	x0, x19
  426700:	b.ne	4262e4 <ferror@plt+0x23a64>  // b.any
  426704:	ldr	x0, [x22, #1096]
  426708:	str	w9, [sp, #104]
  42670c:	sub	x19, x19, x0
  426710:	asr	x20, x19, #3
  426714:	add	x20, x20, #0x32
  426718:	lsl	x20, x20, #4
  42671c:	mov	x1, x20
  426720:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  426724:	ldr	w9, [sp, #104]
  426728:	add	x19, x0, x19
  42672c:	str	x0, [x22, #1096]
  426730:	add	x0, x0, x20
  426734:	str	x0, [x22, #1104]
  426738:	b	4262e4 <ferror@plt+0x23a64>
  42673c:	cmp	w28, #0x15
  426740:	b.eq	425b38 <ferror@plt+0x232b8>  // b.none
  426744:	b	4262d4 <ferror@plt+0x23a54>
  426748:	ldrb	w1, [x19, #24]
  42674c:	sub	x20, x19, #0x28
  426750:	ldurb	w0, [x19, #-16]
  426754:	cmp	w0, w1
  426758:	b.eq	425bd4 <ferror@plt+0x23354>  // b.none
  42675c:	ldr	x0, [x22, #1208]
  426760:	cmp	x0, #0x40
  426764:	cbz	w1, 426a40 <ferror@plt+0x241c0>
  426768:	ldp	x2, x1, [x19, #-32]
  42676c:	b.hi	426da4 <ferror@plt+0x24524>  // b.pmore
  426770:	sub	w0, w0, #0x1
  426774:	lsr	x0, x1, x0
  426778:	mvn	x0, x0
  42677c:	and	w0, w0, #0x1
  426780:	cbnz	w0, 425bd4 <ferror@plt+0x23354>
  426784:	ldr	x1, [x19]
  426788:	mov	x0, x22
  42678c:	ldr	w20, [x20, #32]
  426790:	bl	42c490 <ferror@plt+0x29c10>
  426794:	mov	x5, x0
  426798:	ldr	x4, [sp, #112]
  42679c:	mov	w2, w20
  4267a0:	mov	x0, x22
  4267a4:	mov	w3, #0x0                   	// #0
  4267a8:	mov	w1, #0x0                   	// #0
  4267ac:	bl	423290 <ferror@plt+0x20a10>
  4267b0:	ldr	w21, [x19, #36]
  4267b4:	b	425bd4 <ferror@plt+0x23354>
  4267b8:	cbz	w24, 426854 <ferror@plt+0x23fd4>
  4267bc:	ldr	w21, [x19, #36]
  4267c0:	sub	w0, w21, #0x1
  4267c4:	cmp	w0, #0x1b
  4267c8:	b.hi	425be0 <ferror@plt+0x23360>  // b.pmore
  4267cc:	sbfiz	x1, x21, #1, #32
  4267d0:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x196d8>
  4267d4:	add	x23, x23, #0xfe0
  4267d8:	sxtw	x0, w21
  4267dc:	ldrb	w1, [x23, x1]
  4267e0:	cmp	w1, #0x10
  4267e4:	b.ls	427740 <ferror@plt+0x24ec0>  // b.plast
  4267e8:	mov	w7, #0x10                  	// #16
  4267ec:	mov	w28, #0x1c                  	// #28
  4267f0:	b	425ba8 <ferror@plt+0x23328>
  4267f4:	cmp	w25, #0x1
  4267f8:	mov	w28, w7
  4267fc:	cset	w0, eq  // eq = none
  426800:	str	w0, [sp, #124]
  426804:	mov	w0, w7
  426808:	cbz	w24, 427470 <ferror@plt+0x24bf0>
  42680c:	ldr	w21, [x19, #36]
  426810:	sub	w1, w21, #0x1
  426814:	cmp	w1, #0x1b
  426818:	b.hi	425be0 <ferror@plt+0x23360>  // b.pmore
  42681c:	cmp	w28, #0x14
  426820:	b.eq	4262d4 <ferror@plt+0x23a54>  // b.none
  426824:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x196d8>
  426828:	add	x23, x23, #0xfe0
  42682c:	sbfiz	x1, x0, #1, #32
  426830:	sbfiz	x2, x21, #1, #32
  426834:	ubfx	x7, x7, #1, #1
  426838:	sxtw	x0, w21
  42683c:	ldrb	w3, [x23, x1]
  426840:	ldrb	w1, [x23, x2]
  426844:	sub	w7, w3, w7
  426848:	cmp	w7, w1
  42684c:	b.cc	425ba8 <ferror@plt+0x23328>  // b.lo, b.ul, b.last
  426850:	b	426214 <ferror@plt+0x23994>
  426854:	ldr	w21, [x19, #36]
  426858:	mov	w28, w7
  42685c:	sub	w0, w21, #0x1
  426860:	cmp	w0, #0x1b
  426864:	b.hi	425be0 <ferror@plt+0x23360>  // b.pmore
  426868:	sbfiz	x1, x21, #1, #32
  42686c:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x196d8>
  426870:	add	x23, x23, #0xfe0
  426874:	sxtw	x0, w21
  426878:	ldrb	w1, [x23, x1]
  42687c:	cmp	w1, #0xd
  426880:	b.ls	4262a0 <ferror@plt+0x23a20>  // b.plast
  426884:	mov	w7, #0xd                   	// #13
  426888:	b	425ba8 <ferror@plt+0x23328>
  42688c:	sub	w0, w7, #0x1
  426890:	mov	w28, w7
  426894:	cmp	w0, #0x19
  426898:	b.hi	4276c8 <ferror@plt+0x24e48>  // b.pmore
  42689c:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x196d8>
  4268a0:	add	x23, x23, #0xfe0
  4268a4:	add	x1, x23, w7, sxtw #1
  4268a8:	mov	w0, w7
  4268ac:	ldrb	w7, [x1, #1]
  4268b0:	tbnz	w7, #0, 426808 <ferror@plt+0x23f88>
  4268b4:	ldr	w21, [x19, #36]
  4268b8:	cbz	w24, 426810 <ferror@plt+0x23f90>
  4268bc:	cmp	w28, #0x15
  4268c0:	b.ne	426914 <ferror@plt+0x24094>  // b.any
  4268c4:	cmp	w21, #0x14
  4268c8:	b.eq	42775c <ferror@plt+0x24edc>  // b.none
  4268cc:	and	w1, w21, #0xfffffffd
  4268d0:	mov	w0, w28
  4268d4:	cmp	w1, #0x14
  4268d8:	b.eq	42682c <ferror@plt+0x23fac>  // b.none
  4268dc:	ldr	x1, [x19]
  4268e0:	mov	w26, w9
  4268e4:	mov	x0, x22
  4268e8:	mov	w24, #0x0                   	// #0
  4268ec:	bl	42c490 <ferror@plt+0x29c10>
  4268f0:	mov	x5, x0
  4268f4:	mov	w2, w26
  4268f8:	mov	x0, x22
  4268fc:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  426900:	mov	w3, #0x0                   	// #0
  426904:	add	x4, x4, #0xd88
  426908:	mov	w1, #0x3                   	// #3
  42690c:	bl	423290 <ferror@plt+0x20a10>
  426910:	b	425bfc <ferror@plt+0x2337c>
  426914:	cmp	w28, #0x16
  426918:	b.ne	426bec <ferror@plt+0x2436c>  // b.any
  42691c:	cmp	w21, #0x16
  426920:	b.ne	4268cc <ferror@plt+0x2404c>  // b.any
  426924:	ldr	w0, [sp, #188]
  426928:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  42692c:	adrp	x5, 476000 <_obstack_memory_used@@Base+0x196d8>
  426930:	add	x1, x1, #0xb28
  426934:	cmp	w0, #0x0
  426938:	add	x5, x5, #0xb20
  42693c:	csel	x5, x5, x1, ne  // ne = any
  426940:	mov	w2, w9
  426944:	mov	x0, x22
  426948:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42694c:	mov	w3, #0x0                   	// #0
  426950:	add	x4, x4, #0xd70
  426954:	mov	w24, #0x0                   	// #0
  426958:	mov	w1, #0x3                   	// #3
  42695c:	bl	423290 <ferror@plt+0x20a10>
  426960:	b	425bfc <ferror@plt+0x2337c>
  426964:	mov	x0, x22
  426968:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42696c:	mov	w1, #0x2                   	// #2
  426970:	add	x2, x2, #0xf18
  426974:	bl	422e10 <ferror@plt+0x20590>
  426978:	b	42608c <ferror@plt+0x2380c>
  42697c:	sub	w0, w21, #0xc
  426980:	cmp	w0, #0x1
  426984:	b.hi	426fd4 <ferror@plt+0x24754>  // b.pmore
  426988:	cbz	w6, 4270b8 <ferror@plt+0x24838>
  42698c:	add	x9, sp, #0xc0
  426990:	cmp	x5, #0x0
  426994:	stp	x13, x11, [sp, #312]
  426998:	csinv	x4, x4, xzr, eq  // eq = none
  42699c:	strb	w12, [sp, #328]
  4269a0:	mov	x2, x4
  4269a4:	mov	x0, x9
  4269a8:	add	x8, sp, #0xe0
  4269ac:	ldp	x4, x5, [x3]
  4269b0:	stp	x4, x5, [x9]
  4269b4:	cmp	w21, #0xd
  4269b8:	str	x3, [sp, #128]
  4269bc:	ldr	x4, [x3, #16]
  4269c0:	str	x4, [x9, #16]
  4269c4:	b.eq	427428 <ferror@plt+0x24ba8>  // b.none
  4269c8:	bl	423ff8 <ferror@plt+0x21778>
  4269cc:	ldr	x3, [sp, #128]
  4269d0:	ldp	x0, x1, [sp, #224]
  4269d4:	stp	x0, x1, [x3]
  4269d8:	ldr	x0, [sp, #240]
  4269dc:	ldp	x5, x4, [sp, #312]
  4269e0:	str	x0, [x3, #16]
  4269e4:	ldrb	w6, [sp, #328]
  4269e8:	stp	x5, x4, [sp, #312]
  4269ec:	add	x7, sp, #0x260
  4269f0:	ldrb	w2, [sp, #329]
  4269f4:	strb	w6, [sp, #328]
  4269f8:	add	x12, sp, #0x168
  4269fc:	ldp	x0, x1, [x3]
  426a00:	stp	x0, x1, [x7, #-248]
  426a04:	ldr	x0, [x3, #16]
  426a08:	str	x0, [sp, #376]
  426a0c:	stp	x5, x4, [sp, #360]
  426a10:	strb	w6, [sp, #376]
  426a14:	strb	w2, [sp, #377]
  426a18:	b	425ff0 <ferror@plt+0x23770>
  426a1c:	ldp	x1, x0, [x19, #8]
  426a20:	orr	x0, x0, x1
  426a24:	cmp	x0, #0x0
  426a28:	cset	x0, ne  // ne = any
  426a2c:	b	426318 <ferror@plt+0x23a98>
  426a30:	ldp	x1, x0, [x19, #8]
  426a34:	orr	x0, x0, x1
  426a38:	cbnz	x0, 4262d4 <ferror@plt+0x23a54>
  426a3c:	b	4262c8 <ferror@plt+0x23a48>
  426a40:	ldp	x2, x1, [x19, #8]
  426a44:	b.hi	426dbc <ferror@plt+0x2453c>  // b.pmore
  426a48:	sub	w0, w0, #0x1
  426a4c:	lsr	x0, x1, x0
  426a50:	mvn	x0, x0
  426a54:	and	w0, w0, #0x1
  426a58:	cbnz	w0, 425bd4 <ferror@plt+0x23354>
  426a5c:	ldr	x1, [x19]
  426a60:	mov	x0, x22
  426a64:	ldr	w20, [x19, #32]
  426a68:	bl	42c490 <ferror@plt+0x29c10>
  426a6c:	mov	x5, x0
  426a70:	ldr	x4, [sp, #176]
  426a74:	b	42679c <ferror@plt+0x23f1c>
  426a78:	ldp	x0, x1, [x19, #8]
  426a7c:	stp	x0, x1, [x19, #-72]
  426a80:	sub	x20, x19, #0x28
  426a84:	ldr	x0, [x19, #24]
  426a88:	str	x0, [x2, #24]
  426a8c:	ldr	w0, [x19, #32]
  426a90:	stur	w0, [x19, #-48]
  426a94:	b	4261dc <ferror@plt+0x2395c>
  426a98:	mov	w15, #0x1                   	// #1
  426a9c:	mov	w26, #0x0                   	// #0
  426aa0:	mov	w14, #0x0                   	// #0
  426aa4:	str	w13, [sp, #184]
  426aa8:	b	425ec4 <ferror@plt+0x23644>
  426aac:	lsl	x3, x12, x2
  426ab0:	orr	x13, x13, x3
  426ab4:	cbnz	x2, 425f98 <ferror@plt+0x23718>
  426ab8:	b	425fbc <ferror@plt+0x2373c>
  426abc:	lsl	x3, x11, x3
  426ac0:	bic	x3, x9, x3
  426ac4:	csel	x9, x3, x9, ne  // ne = any
  426ac8:	mov	x6, #0x0                   	// #0
  426acc:	b	425f84 <ferror@plt+0x23704>
  426ad0:	mov	w13, w11
  426ad4:	mov	w14, #0x1                   	// #1
  426ad8:	mov	w11, #0x0                   	// #0
  426adc:	b	4263a0 <ferror@plt+0x23b20>
  426ae0:	b.eq	426ce4 <ferror@plt+0x24464>  // b.none
  426ae4:	mov	x2, #0xffffffffffffffff    	// #-1
  426ae8:	str	x4, [sp, #376]
  426aec:	lsl	x2, x2, x9
  426af0:	bic	x2, x1, x2
  426af4:	stp	xzr, x2, [sp, #312]
  426af8:	cmp	x2, x1
  426afc:	mov	x6, #0x0                   	// #0
  426b00:	ldp	x4, x5, [x3]
  426b04:	add	x3, sp, #0x260
  426b08:	stp	x4, x5, [x26]
  426b0c:	stp	x4, x5, [x3, #-248]
  426b10:	b.eq	4264ec <ferror@plt+0x23c6c>  // b.none
  426b14:	mov	w12, #0x1                   	// #1
  426b18:	cbz	w11, 4264fc <ferror@plt+0x23c7c>
  426b1c:	mov	w0, #0x1                   	// #1
  426b20:	stp	x6, x2, [sp, #336]
  426b24:	mov	x1, x9
  426b28:	strh	w0, [sp, #352]
  426b2c:	add	x8, sp, #0xe0
  426b30:	add	x0, sp, #0xc0
  426b34:	ldp	x2, x3, [x26]
  426b38:	stp	x2, x3, [sp, #192]
  426b3c:	ldr	x2, [x26, #16]
  426b40:	str	x2, [sp, #208]
  426b44:	bl	423d70 <ferror@plt+0x214f0>
  426b48:	ldp	x0, x1, [sp, #224]
  426b4c:	stp	x0, x1, [x26]
  426b50:	ldr	x0, [sp, #240]
  426b54:	ldp	x6, x2, [sp, #336]
  426b58:	str	x0, [x26, #16]
  426b5c:	b	4264fc <ferror@plt+0x23c7c>
  426b60:	mov	w12, #0x1                   	// #1
  426b64:	b	426490 <ferror@plt+0x23c10>
  426b68:	mov	w12, #0x1                   	// #1
  426b6c:	b	426440 <ferror@plt+0x23bc0>
  426b70:	cmp	w21, #0x19
  426b74:	mov	x0, #0x1                   	// #1
  426b78:	b.eq	425d44 <ferror@plt+0x234c4>  // b.none
  426b7c:	cmp	w21, #0x3
  426b80:	mov	x0, #0x0                   	// #0
  426b84:	b.eq	425d44 <ferror@plt+0x234c4>  // b.none
  426b88:	cmp	w21, #0x2
  426b8c:	strh	wzr, [sp, #352]
  426b90:	cset	x0, eq  // eq = none
  426b94:	stp	xzr, x0, [sp, #336]
  426b98:	b	425e38 <ferror@plt+0x235b8>
  426b9c:	mov	w2, #0x1                   	// #1
  426ba0:	mov	x3, #0x0                   	// #0
  426ba4:	b	426638 <ferror@plt+0x23db8>
  426ba8:	ldrb	w0, [x22, #18]
  426bac:	str	wzr, [sp, #336]
  426bb0:	cbnz	w0, 426bc8 <ferror@plt+0x24348>
  426bb4:	ldrb	w0, [x22, #1154]
  426bb8:	cbnz	w0, 42767c <ferror@plt+0x24dfc>
  426bbc:	ldrb	w0, [x22, #1132]
  426bc0:	cbnz	w0, 427634 <ferror@plt+0x24db4>
  426bc4:	nop
  426bc8:	add	x1, sp, #0x138
  426bcc:	mov	x0, x22
  426bd0:	bl	4216c0 <ferror@plt+0x1ee40>
  426bd4:	ldr	w0, [sp, #336]
  426bd8:	mov	x3, #0x0                   	// #0
  426bdc:	ldr	w1, [sp, #312]
  426be0:	cmp	w0, #0x0
  426be4:	cset	w2, ne  // ne = any
  426be8:	b	426638 <ferror@plt+0x23db8>
  426bec:	and	w1, w21, #0xfffffffd
  426bf0:	cmp	w1, #0x14
  426bf4:	b.ne	4268dc <ferror@plt+0x2405c>  // b.any
  426bf8:	sub	w1, w28, #0x15
  426bfc:	cmp	w1, #0x1
  426c00:	b.ls	42682c <ferror@plt+0x23fac>  // b.plast
  426c04:	mov	w26, w9
  426c08:	mov	x1, x27
  426c0c:	mov	x0, x22
  426c10:	bl	42c490 <ferror@plt+0x29c10>
  426c14:	mov	w2, w26
  426c18:	mov	x5, x0
  426c1c:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  426c20:	mov	x0, x22
  426c24:	add	x4, x4, #0xdb0
  426c28:	mov	w3, #0x0                   	// #0
  426c2c:	mov	w1, #0x3                   	// #3
  426c30:	mov	w24, #0x0                   	// #0
  426c34:	bl	423290 <ferror@plt+0x20a10>
  426c38:	b	425bfc <ferror@plt+0x2337c>
  426c3c:	cmp	x1, #0x40
  426c40:	sub	x8, x1, #0x1
  426c44:	mov	x2, #0x0                   	// #0
  426c48:	b.hi	427128 <ferror@plt+0x248a8>  // b.pmore
  426c4c:	mov	x0, #0x1                   	// #1
  426c50:	lsl	x0, x0, x8
  426c54:	tst	x10, x0
  426c58:	b.ne	425ef8 <ferror@plt+0x23678>  // b.any
  426c5c:	nop
  426c60:	lsr	x0, x0, #1
  426c64:	mov	x2, x8
  426c68:	tst	x10, x0
  426c6c:	sub	x8, x8, #0x1
  426c70:	b.eq	426c60 <ferror@plt+0x243e0>  // b.none
  426c74:	b	425ef4 <ferror@plt+0x23674>
  426c78:	mov	w3, w9
  426c7c:	mov	x1, x27
  426c80:	mov	x0, x22
  426c84:	mov	x2, #0x0                   	// #0
  426c88:	str	w9, [sp, #104]
  426c8c:	bl	424c88 <ferror@plt+0x22408>
  426c90:	str	w0, [sp, #312]
  426c94:	ldr	w9, [sp, #104]
  426c98:	tbnz	w0, #24, 427264 <ferror@plt+0x249e4>
  426c9c:	and	w1, w0, #0xf
  426ca0:	cmp	w1, #0x1
  426ca4:	b.eq	427238 <ferror@plt+0x249b8>  // b.none
  426ca8:	cmp	w1, #0x2
  426cac:	b.ne	426ccc <ferror@plt+0x2444c>  // b.any
  426cb0:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  426cb4:	mov	w2, w9
  426cb8:	add	x4, x4, #0xb90
  426cbc:	mov	w3, #0x0                   	// #0
  426cc0:	mov	x0, x22
  426cc4:	mov	w1, #0x3                   	// #3
  426cc8:	bl	423290 <ferror@plt+0x20a10>
  426ccc:	ldr	w0, [sp, #336]
  426cd0:	mov	x1, #0x0                   	// #0
  426cd4:	mov	x3, #0x0                   	// #0
  426cd8:	cmp	w0, #0x0
  426cdc:	cset	w2, ne  // ne = any
  426ce0:	b	426638 <ferror@plt+0x23db8>
  426ce4:	mov	x6, #0x0                   	// #0
  426ce8:	b	4264cc <ferror@plt+0x23c4c>
  426cec:	sub	w21, w9, #0x41
  426cf0:	mov	w11, w13
  426cf4:	lsr	x0, x18, x21
  426cf8:	tbnz	w0, #0, 4272e0 <ferror@plt+0x24a60>
  426cfc:	lsr	x0, x15, x21
  426d00:	mvn	x0, x0
  426d04:	and	w0, w0, #0x1
  426d08:	b	42658c <ferror@plt+0x23d0c>
  426d0c:	sub	w14, w1, #0x41
  426d10:	mov	w26, #0x0                   	// #0
  426d14:	lsr	x0, x6, x14
  426d18:	tbnz	w0, #0, 427288 <ferror@plt+0x24a08>
  426d1c:	lsr	x0, x4, x14
  426d20:	mvn	x0, x0
  426d24:	and	w0, w0, #0x1
  426d28:	b	4260d0 <ferror@plt+0x23850>
  426d2c:	add	x2, sp, #0x200
  426d30:	stp	x6, x9, [sp, #264]
  426d34:	add	x0, sp, #0xc0
  426d38:	strb	w15, [sp, #280]
  426d3c:	add	x8, sp, #0xe0
  426d40:	strb	wzr, [sp, #281]
  426d44:	ldp	x2, x3, [x2, #-248]
  426d48:	stp	x2, x3, [sp, #192]
  426d4c:	ldr	x2, [sp, #280]
  426d50:	str	x2, [sp, #208]
  426d54:	bl	423d70 <ferror@plt+0x214f0>
  426d58:	ldp	x0, x11, [sp, #232]
  426d5c:	stp	x0, x11, [sp, #272]
  426d60:	ldr	x0, [sp, #224]
  426d64:	str	x0, [sp, #264]
  426d68:	ldr	x9, [sp, #272]
  426d6c:	and	w15, w11, #0xff
  426d70:	mov	x6, x0
  426d74:	ubfx	w11, w11, #8, #8
  426d78:	b	425fcc <ferror@plt+0x2374c>
  426d7c:	mov	x0, x22
  426d80:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  426d84:	mov	w1, #0x3                   	// #3
  426d88:	add	x2, x2, #0xef8
  426d8c:	mov	w24, #0x0                   	// #0
  426d90:	bl	422e10 <ferror@plt+0x20590>
  426d94:	b	425bfc <ferror@plt+0x2337c>
  426d98:	and	x1, x6, x5
  426d9c:	and	x2, x4, x3
  426da0:	b	425e2c <ferror@plt+0x235ac>
  426da4:	sub	w0, w0, #0x41
  426da8:	lsr	x0, x2, x0
  426dac:	mvn	x0, x0
  426db0:	and	w0, w0, #0x1
  426db4:	cbnz	w0, 425bd4 <ferror@plt+0x23354>
  426db8:	b	426784 <ferror@plt+0x23f04>
  426dbc:	sub	w0, w0, #0x41
  426dc0:	lsr	x0, x2, x0
  426dc4:	mvn	x0, x0
  426dc8:	and	w0, w0, #0x1
  426dcc:	cbnz	w0, 425bd4 <ferror@plt+0x23354>
  426dd0:	b	426a5c <ferror@plt+0x241dc>
  426dd4:	ldr	w0, [sp, #184]
  426dd8:	cbnz	w0, 427080 <ferror@plt+0x24800>
  426ddc:	add	x3, sp, #0x138
  426de0:	mov	w15, #0x0                   	// #0
  426de4:	cbnz	w14, 427588 <ferror@plt+0x24d08>
  426de8:	cmp	x1, #0x40
  426dec:	b.hi	4274a4 <ferror@plt+0x24c24>  // b.pmore
  426df0:	sub	w0, w1, #0x1
  426df4:	lsr	x0, x13, x0
  426df8:	mvn	x0, x0
  426dfc:	and	w0, w0, #0x1
  426e00:	eor	w14, w14, #0x1
  426e04:	mov	w11, #0x0                   	// #0
  426e08:	cmp	w0, w14, uxtb
  426e0c:	b.eq	426e1c <ferror@plt+0x2459c>  // b.none
  426e10:	orr	x0, x8, x13
  426e14:	cmp	x0, #0x0
  426e18:	cset	w11, ne  // ne = any
  426e1c:	mov	x9, x13
  426e20:	mov	x6, x8
  426e24:	b	427090 <ferror@plt+0x24810>
  426e28:	subs	x8, x11, x4
  426e2c:	cmp	x11, x4
  426e30:	sbc	x0, x13, x5
  426e34:	cbz	w12, 427150 <ferror@plt+0x248d0>
  426e38:	cmp	x1, #0x40
  426e3c:	mov	w6, #0x1                   	// #1
  426e40:	b.ls	42715c <ferror@plt+0x248dc>  // b.plast
  426e44:	sub	x1, x1, #0x40
  426e48:	mov	x2, #0xffffffffffffffff    	// #-1
  426e4c:	cmp	x1, #0x40
  426e50:	lsl	x2, x2, x1
  426e54:	bic	x2, x0, x2
  426e58:	csel	x0, x2, x0, cc  // cc = lo, ul, last
  426e5c:	cbz	w12, 4274fc <ferror@plt+0x24c7c>
  426e60:	mov	x4, x8
  426e64:	mov	x5, x0
  426e68:	add	x12, sp, #0x168
  426e6c:	mov	w2, #0x0                   	// #0
  426e70:	b	426a0c <ferror@plt+0x2418c>
  426e74:	mvn	x8, x20
  426e78:	mvn	x2, x4
  426e7c:	stp	x8, x2, [sp, #312]
  426e80:	add	x26, sp, #0x150
  426e84:	strb	w5, [sp, #328]
  426e88:	strb	w1, [sp, #329]
  426e8c:	ldr	x6, [x22, #1208]
  426e90:	ldp	x0, x1, [x3]
  426e94:	stp	x0, x1, [sp, #336]
  426e98:	cmp	x6, #0x40
  426e9c:	ldr	x0, [x3, #16]
  426ea0:	str	x0, [sp, #352]
  426ea4:	b.hi	427134 <ferror@plt+0x248b4>  // b.pmore
  426ea8:	mov	x0, #0xffffffffffffffff    	// #-1
  426eac:	mov	x20, #0x0                   	// #0
  426eb0:	lsl	x0, x0, x6
  426eb4:	orr	x0, x0, x4
  426eb8:	mvn	x0, x0
  426ebc:	csel	x2, x0, x2, ne  // ne = any
  426ec0:	stp	x20, x2, [sp, #336]
  426ec4:	add	x6, sp, #0x260
  426ec8:	mov	x4, x2
  426ecc:	ldp	x0, x1, [x26]
  426ed0:	add	x12, sp, #0x168
  426ed4:	ldr	x2, [x26, #16]
  426ed8:	stp	x0, x1, [x6, #-248]
  426edc:	stp	x0, x1, [x3]
  426ee0:	mov	w0, #0x0                   	// #0
  426ee4:	str	x2, [x3, #16]
  426ee8:	str	x2, [sp, #376]
  426eec:	b	425da8 <ferror@plt+0x23528>
  426ef0:	stp	x20, x4, [sp, #312]
  426ef4:	add	x12, sp, #0x168
  426ef8:	add	x0, sp, #0xc0
  426efc:	strb	w5, [sp, #328]
  426f00:	add	x8, sp, #0xe0
  426f04:	strb	w1, [sp, #329]
  426f08:	ldr	x1, [x22, #1208]
  426f0c:	str	x3, [sp, #128]
  426f10:	ldp	x4, x5, [x3]
  426f14:	stp	x4, x5, [sp, #192]
  426f18:	ldr	x2, [x3, #16]
  426f1c:	str	x2, [sp, #208]
  426f20:	bl	423d70 <ferror@plt+0x214f0>
  426f24:	ldr	x3, [sp, #128]
  426f28:	ldp	x0, x1, [sp, #224]
  426f2c:	stp	x0, x1, [x3]
  426f30:	ldr	x0, [sp, #240]
  426f34:	ldp	x20, x4, [sp, #312]
  426f38:	str	x0, [x3, #16]
  426f3c:	ldrb	w5, [sp, #328]
  426f40:	ldrb	w0, [sp, #329]
  426f44:	b	425da8 <ferror@plt+0x23528>
  426f48:	ldrb	w0, [x22, #1138]
  426f4c:	cbz	w0, 425da4 <ferror@plt+0x23524>
  426f50:	ldr	w0, [x22, #28]
  426f54:	cbz	w0, 4275e8 <ferror@plt+0x24d68>
  426f58:	add	x12, sp, #0x168
  426f5c:	mov	w0, #0x0                   	// #0
  426f60:	b	425da8 <ferror@plt+0x23528>
  426f64:	cmp	x1, #0x40
  426f68:	b.hi	4273f4 <ferror@plt+0x24b74>  // b.pmore
  426f6c:	sub	w1, w1, #0x1
  426f70:	lsr	x4, x5, x1
  426f74:	mvn	x4, x4
  426f78:	lsr	x0, x8, x1
  426f7c:	mvn	x0, x0
  426f80:	and	w1, w4, #0x1
  426f84:	and	w0, w0, #0x1
  426f88:	cmp	w0, w1
  426f8c:	b.eq	425d08 <ferror@plt+0x23488>  // b.none
  426f90:	and	x0, x1, #0xff
  426f94:	cmp	w21, #0x19
  426f98:	b.eq	425d44 <ferror@plt+0x234c4>  // b.none
  426f9c:	eor	w0, w1, #0x1
  426fa0:	cmp	w21, #0x3
  426fa4:	and	x0, x0, #0xff
  426fa8:	b.eq	425d44 <ferror@plt+0x234c4>  // b.none
  426fac:	cmp	w21, #0x2
  426fb0:	b.eq	427670 <ferror@plt+0x24df0>  // b.none
  426fb4:	mov	x0, #0x1                   	// #1
  426fb8:	cbz	w1, 425d44 <ferror@plt+0x234c4>
  426fbc:	cmp	x3, x2
  426fc0:	cset	w1, eq  // eq = none
  426fc4:	cmp	w1, #0x0
  426fc8:	ccmp	x8, x5, #0x0, ne  // ne = any
  426fcc:	cset	x0, eq  // eq = none
  426fd0:	b	425d44 <ferror@plt+0x234c4>
  426fd4:	ldrb	w0, [x22, #1154]
  426fd8:	cbz	w0, 427018 <ferror@plt+0x24798>
  426fdc:	ldrb	w0, [x22, #1152]
  426fe0:	cbz	w0, 426fec <ferror@plt+0x2476c>
  426fe4:	ldr	w0, [x22, #28]
  426fe8:	cbnz	w0, 427018 <ferror@plt+0x24798>
  426fec:	mov	x0, x22
  426ff0:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  426ff4:	mov	w1, #0x15                  	// #21
  426ff8:	add	x2, x2, #0xe98
  426ffc:	stp	x5, x4, [sp, #128]
  427000:	str	w6, [sp, #144]
  427004:	str	x3, [sp, #152]
  427008:	bl	423050 <ferror@plt+0x207d0>
  42700c:	ldp	x5, x4, [sp, #128]
  427010:	ldr	w6, [sp, #144]
  427014:	ldr	x3, [sp, #152]
  427018:	stp	x5, x4, [sp, #336]
  42701c:	strb	w6, [sp, #352]
  427020:	ldp	x0, x1, [x26]
  427024:	stp	x0, x1, [x3]
  427028:	ldr	x0, [x26, #16]
  42702c:	str	x0, [x3, #16]
  427030:	b	4269e8 <ferror@plt+0x24168>
  427034:	ldr	x2, [x19]
  427038:	mov	x0, x22
  42703c:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  427040:	mov	w3, #0x0                   	// #0
  427044:	add	x4, x4, #0xed8
  427048:	mov	w1, #0x3                   	// #3
  42704c:	ldr	w2, [x2]
  427050:	mov	w24, #0x0                   	// #0
  427054:	bl	423290 <ferror@plt+0x20a10>
  427058:	b	425bfc <ferror@plt+0x2337c>
  42705c:	str	x1, [sp, #320]
  427060:	mov	x2, x1
  427064:	mov	x6, x0
  427068:	str	x4, [sp, #376]
  42706c:	ldp	x0, x1, [x3]
  427070:	add	x3, sp, #0x260
  427074:	stp	x0, x1, [x26]
  427078:	stp	x0, x1, [x3, #-248]
  42707c:	b	4264f8 <ferror@plt+0x23c78>
  427080:	mov	x9, x13
  427084:	mov	x6, x8
  427088:	add	x3, sp, #0x138
  42708c:	mov	w11, #0x0                   	// #0
  427090:	stp	x8, x13, [sp, #312]
  427094:	add	x2, sp, #0x260
  427098:	add	x12, sp, #0x168
  42709c:	strb	w15, [sp, #328]
  4270a0:	strb	w11, [sp, #329]
  4270a4:	ldp	x0, x1, [x3]
  4270a8:	stp	x0, x1, [x2, #-248]
  4270ac:	ldr	x0, [x3, #16]
  4270b0:	str	x0, [sp, #376]
  4270b4:	b	425fe4 <ferror@plt+0x23764>
  4270b8:	cmp	x1, #0x40
  4270bc:	b.hi	427560 <ferror@plt+0x24ce0>  // b.pmore
  4270c0:	sub	w0, w1, #0x1
  4270c4:	lsr	x0, x4, x0
  4270c8:	mvn	x0, x0
  4270cc:	and	w0, w0, #0x1
  4270d0:	cbnz	w0, 42698c <ferror@plt+0x2410c>
  4270d4:	stp	x5, x4, [sp, #336]
  4270d8:	cmp	w21, #0xd
  4270dc:	add	x9, sp, #0xc0
  4270e0:	strb	wzr, [sp, #352]
  4270e4:	cset	w21, ne  // ne = any
  4270e8:	mov	x0, x9
  4270ec:	add	x8, sp, #0xe0
  4270f0:	ldp	x4, x5, [x26]
  4270f4:	stp	x4, x5, [sp, #192]
  4270f8:	add	w21, w21, #0xc
  4270fc:	ldr	x2, [x26, #16]
  427100:	stp	x1, x3, [sp, #128]
  427104:	str	x2, [sp, #208]
  427108:	bl	423d70 <ferror@plt+0x214f0>
  42710c:	ldp	x4, x5, [sp, #224]
  427110:	stp	x4, x5, [x26]
  427114:	ldr	x0, [sp, #240]
  427118:	ldp	x1, x3, [sp, #128]
  42711c:	ldp	x5, x4, [sp, #336]
  427120:	str	x0, [x26, #16]
  427124:	b	426990 <ferror@plt+0x24110>
  427128:	sub	x8, x1, #0x41
  42712c:	mov	x2, #0x40                  	// #64
  427130:	b	426c4c <ferror@plt+0x243cc>
  427134:	sub	x6, x6, #0x40
  427138:	mov	x0, #0xffffffffffffffff    	// #-1
  42713c:	cmp	x6, #0x40
  427140:	lsl	x6, x0, x6
  427144:	orr	x20, x6, x20
  427148:	csinv	x20, x8, x20, cs  // cs = hs, nlast
  42714c:	b	426ec0 <ferror@plt+0x24640>
  427150:	mov	w12, w6
  427154:	cmp	x1, #0x40
  427158:	b.hi	426e44 <ferror@plt+0x245c4>  // b.pmore
  42715c:	mov	x0, #0xffffffffffffffff    	// #-1
  427160:	lsl	x0, x0, x1
  427164:	bic	x0, x8, x0
  427168:	csel	x0, x0, x8, ne  // ne = any
  42716c:	cbnz	w12, 42754c <ferror@plt+0x24ccc>
  427170:	sub	w1, w1, #0x1
  427174:	lsr	x2, x11, x1
  427178:	mvn	x2, x2
  42717c:	lsr	x4, x4, x1
  427180:	mvn	x4, x4
  427184:	and	w3, w2, #0x1
  427188:	and	w2, w4, #0x1
  42718c:	cmp	w3, w2
  427190:	b.eq	4276b4 <ferror@plt+0x24e34>  // b.none
  427194:	lsr	x1, x0, x1
  427198:	mvn	x2, x1
  42719c:	and	w2, w2, #0x1
  4271a0:	mov	x4, x0
  4271a4:	mov	x5, #0x0                   	// #0
  4271a8:	eor	w2, w2, w3
  4271ac:	add	x12, sp, #0x168
  4271b0:	b	426a0c <ferror@plt+0x2418c>
  4271b4:	mov	w12, w6
  4271b8:	cmp	x1, #0x40
  4271bc:	b.hi	425ca4 <ferror@plt+0x23424>  // b.pmore
  4271c0:	mov	x3, #0xffffffffffffffff    	// #-1
  4271c4:	lsl	x3, x3, x1
  4271c8:	bic	x3, x8, x3
  4271cc:	csel	x3, x3, x8, ne  // ne = any
  4271d0:	cbnz	w12, 427538 <ferror@plt+0x24cb8>
  4271d4:	sub	w1, w1, #0x1
  4271d8:	lsr	x0, x11, x1
  4271dc:	mvn	x0, x0
  4271e0:	lsr	x2, x4, x1
  4271e4:	mvn	x2, x2
  4271e8:	and	w0, w0, #0x1
  4271ec:	and	w2, w2, #0x1
  4271f0:	cmp	w0, w2
  4271f4:	b.eq	42769c <ferror@plt+0x24e1c>  // b.none
  4271f8:	mov	x4, x3
  4271fc:	add	x12, sp, #0x168
  427200:	mov	w2, #0x0                   	// #0
  427204:	mov	x5, #0x0                   	// #0
  427208:	b	426a0c <ferror@plt+0x2418c>
  42720c:	mov	x0, #0x1                   	// #1
  427210:	b.eq	425d44 <ferror@plt+0x234c4>  // b.none
  427214:	cmp	w21, #0x3
  427218:	mov	x0, #0x0                   	// #0
  42721c:	b.eq	425d44 <ferror@plt+0x234c4>  // b.none
  427220:	cmp	w21, #0x2
  427224:	b.ne	426fc4 <ferror@plt+0x24744>  // b.any
  427228:	cmp	x8, x5
  42722c:	ccmp	x3, x2, #0x0, eq  // eq = none
  427230:	cset	x0, ne  // ne = any
  427234:	b	425d44 <ferror@plt+0x234c4>
  427238:	tbnz	w0, #13, 427618 <ferror@plt+0x24d98>
  42723c:	add	x20, sp, #0x168
  427240:	mov	w2, w0
  427244:	mov	x1, x27
  427248:	mov	x0, x22
  42724c:	mov	x8, x20
  427250:	bl	425748 <ferror@plt+0x22ec8>
  427254:	ldrb	w2, [sp, #376]
  427258:	ldrb	w0, [sp, #377]
  42725c:	ldp	x3, x1, [sp, #360]
  427260:	b	426640 <ferror@plt+0x23dc0>
  427264:	mov	x0, x22
  427268:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  42726c:	mov	w1, #0x3                   	// #3
  427270:	add	x2, x2, #0xb60
  427274:	str	w9, [sp, #104]
  427278:	bl	422e10 <ferror@plt+0x20590>
  42727c:	ldr	w9, [sp, #104]
  427280:	ldr	w0, [sp, #312]
  427284:	b	426c9c <ferror@plt+0x2441c>
  427288:	add	x2, sp, #0x200
  42728c:	stp	x6, x9, [sp, #264]
  427290:	add	x0, sp, #0xc0
  427294:	strb	wzr, [sp, #280]
  427298:	add	x8, sp, #0xe0
  42729c:	strb	w11, [sp, #281]
  4272a0:	mov	w26, #0x1                   	// #1
  4272a4:	stp	x1, x4, [sp, #128]
  4272a8:	ldp	x16, x17, [x2, #-248]
  4272ac:	stp	x16, x17, [sp, #192]
  4272b0:	ldr	x2, [sp, #280]
  4272b4:	str	x2, [sp, #208]
  4272b8:	bl	423d70 <ferror@plt+0x214f0>
  4272bc:	ldp	x6, x0, [sp, #224]
  4272c0:	stp	x6, x0, [sp, #264]
  4272c4:	ldr	x11, [sp, #240]
  4272c8:	str	x11, [sp, #280]
  4272cc:	ldp	x1, x4, [sp, #128]
  4272d0:	and	w13, w11, #0xff
  4272d4:	mov	x9, x0
  4272d8:	ubfx	w11, w11, #8, #8
  4272dc:	b	426d1c <ferror@plt+0x2449c>
  4272e0:	add	x0, sp, #0x200
  4272e4:	stp	x18, x26, [sp, #264]
  4272e8:	mov	w11, w14
  4272ec:	strb	wzr, [sp, #280]
  4272f0:	add	x8, sp, #0xe0
  4272f4:	mov	x1, x9
  4272f8:	ldp	x4, x5, [x0, #-248]
  4272fc:	add	x0, sp, #0xc0
  427300:	ldr	x3, [sp, #280]
  427304:	stp	x4, x5, [sp, #192]
  427308:	str	x3, [sp, #208]
  42730c:	bl	423d70 <ferror@plt+0x214f0>
  427310:	ldp	x18, x0, [sp, #224]
  427314:	stp	x18, x0, [sp, #264]
  427318:	ldr	x0, [sp, #240]
  42731c:	str	x0, [sp, #280]
  427320:	ldr	x26, [sp, #272]
  427324:	b	426cfc <ferror@plt+0x2447c>
  427328:	ldr	x0, [x22, #1208]
  42732c:	orr	x1, x1, #0xffffffff00000000
  427330:	cmp	x0, #0x40
  427334:	b.ls	427654 <ferror@plt+0x24dd4>  // b.plast
  427338:	sub	x0, x0, #0x40
  42733c:	cmp	x0, #0x3f
  427340:	b.hi	427750 <ferror@plt+0x24ed0>  // b.pmore
  427344:	mov	x3, #0xffffffffffffffff    	// #-1
  427348:	lsl	x3, x3, x0
  42734c:	mvn	x3, x3
  427350:	b	426638 <ferror@plt+0x23db8>
  427354:	add	x0, sp, #0x200
  427358:	stp	x18, x26, [sp, #264]
  42735c:	mov	w11, w14
  427360:	strb	wzr, [sp, #280]
  427364:	add	x8, sp, #0xe0
  427368:	mov	x1, x9
  42736c:	ldp	x4, x5, [x0, #-248]
  427370:	add	x0, sp, #0xc0
  427374:	ldr	x3, [sp, #280]
  427378:	stp	x4, x5, [sp, #192]
  42737c:	str	x3, [sp, #208]
  427380:	bl	423d70 <ferror@plt+0x214f0>
  427384:	ldp	x18, x0, [sp, #224]
  427388:	stp	x18, x0, [sp, #264]
  42738c:	ldr	x0, [sp, #240]
  427390:	str	x0, [sp, #280]
  427394:	ldr	x26, [sp, #272]
  427398:	b	426580 <ferror@plt+0x23d00>
  42739c:	add	x2, sp, #0x200
  4273a0:	stp	x6, x9, [sp, #264]
  4273a4:	add	x0, sp, #0xc0
  4273a8:	strb	wzr, [sp, #280]
  4273ac:	add	x8, sp, #0xe0
  4273b0:	strb	w11, [sp, #281]
  4273b4:	mov	w26, #0x1                   	// #1
  4273b8:	stp	x1, x4, [sp, #128]
  4273bc:	ldp	x16, x17, [x2, #-248]
  4273c0:	stp	x16, x17, [sp, #192]
  4273c4:	ldr	x2, [sp, #280]
  4273c8:	str	x2, [sp, #208]
  4273cc:	bl	423d70 <ferror@plt+0x214f0>
  4273d0:	ldp	x6, x0, [sp, #224]
  4273d4:	stp	x6, x0, [sp, #264]
  4273d8:	ldr	x11, [sp, #240]
  4273dc:	str	x11, [sp, #280]
  4273e0:	ldp	x1, x4, [sp, #128]
  4273e4:	and	w13, w11, #0xff
  4273e8:	mov	x9, x0
  4273ec:	ubfx	w11, w11, #8, #8
  4273f0:	b	4260c4 <ferror@plt+0x23844>
  4273f4:	sub	w1, w1, #0x41
  4273f8:	lsr	x4, x2, x1
  4273fc:	mvn	x4, x4
  427400:	lsr	x0, x3, x1
  427404:	mvn	x0, x0
  427408:	and	w1, w4, #0x1
  42740c:	and	w0, w0, #0x1
  427410:	b	426f88 <ferror@plt+0x24708>
  427414:	sub	w1, w9, #0x41
  427418:	lsr	x1, x6, x1
  42741c:	mvn	x1, x1
  427420:	and	w1, w1, w0
  427424:	b	426524 <ferror@plt+0x23ca4>
  427428:	bl	424178 <ferror@plt+0x218f8>
  42742c:	b	4269cc <ferror@plt+0x2414c>
  427430:	mov	w2, w18
  427434:	mov	x0, x22
  427438:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42743c:	mov	w3, #0x0                   	// #0
  427440:	add	x4, x4, #0xec0
  427444:	mov	w1, #0x3                   	// #3
  427448:	str	w13, [sp, #128]
  42744c:	str	w11, [sp, #136]
  427450:	stp	x9, x6, [sp, #144]
  427454:	bl	423290 <ferror@plt+0x20a10>
  427458:	ldr	w13, [sp, #128]
  42745c:	ldr	w11, [sp, #136]
  427460:	ldp	x9, x6, [sp, #144]
  427464:	b	426154 <ferror@plt+0x238d4>
  427468:	mov	x2, #0x0                   	// #0
  42746c:	b	425ef8 <ferror@plt+0x23678>
  427470:	mov	w26, w9
  427474:	mov	x1, x27
  427478:	mov	x0, x22
  42747c:	bl	42c490 <ferror@plt+0x29c10>
  427480:	mov	w2, w26
  427484:	mov	x5, x0
  427488:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42748c:	mov	x0, x22
  427490:	add	x4, x4, #0xb30
  427494:	mov	w3, #0x0                   	// #0
  427498:	mov	w1, #0x3                   	// #3
  42749c:	bl	423290 <ferror@plt+0x20a10>
  4274a0:	b	425bfc <ferror@plt+0x2337c>
  4274a4:	sub	w0, w1, #0x41
  4274a8:	lsr	x0, x8, x0
  4274ac:	mvn	x0, x0
  4274b0:	and	w0, w0, #0x1
  4274b4:	b	426e00 <ferror@plt+0x24580>
  4274b8:	sub	w1, w1, #0x1
  4274bc:	lsr	x0, x13, x1
  4274c0:	mvn	x0, x0
  4274c4:	lsr	x2, x5, x1
  4274c8:	mvn	x2, x2
  4274cc:	and	w0, w0, #0x1
  4274d0:	and	w2, w2, #0x1
  4274d4:	cmp	w0, w2
  4274d8:	b.ne	425cc0 <ferror@plt+0x23440>  // b.any
  4274dc:	lsr	x1, x3, x1
  4274e0:	mvn	x2, x1
  4274e4:	and	w2, w2, #0x1
  4274e8:	mov	x4, x8
  4274ec:	mov	x5, x3
  4274f0:	eor	w2, w2, w0
  4274f4:	add	x12, sp, #0x168
  4274f8:	b	426a0c <ferror@plt+0x2418c>
  4274fc:	sub	w1, w1, #0x1
  427500:	lsr	x2, x13, x1
  427504:	mvn	x2, x2
  427508:	lsr	x4, x5, x1
  42750c:	mvn	x4, x4
  427510:	and	w3, w2, #0x1
  427514:	and	w2, w4, #0x1
  427518:	cmp	w3, w2
  42751c:	b.eq	426e60 <ferror@plt+0x245e0>  // b.none
  427520:	lsr	x1, x0, x1
  427524:	mvn	x2, x1
  427528:	and	w2, w2, #0x1
  42752c:	mov	x4, x8
  427530:	mov	x5, x0
  427534:	b	4271a8 <ferror@plt+0x24928>
  427538:	mov	x4, x3
  42753c:	add	x12, sp, #0x168
  427540:	mov	x5, #0x0                   	// #0
  427544:	mov	w2, #0x0                   	// #0
  427548:	b	426a0c <ferror@plt+0x2418c>
  42754c:	mov	x4, x0
  427550:	add	x12, sp, #0x168
  427554:	mov	x5, #0x0                   	// #0
  427558:	mov	w2, #0x0                   	// #0
  42755c:	b	426a0c <ferror@plt+0x2418c>
  427560:	sub	w0, w1, #0x41
  427564:	lsr	x0, x5, x0
  427568:	mvn	x0, x0
  42756c:	and	w0, w0, #0x1
  427570:	b	4270d0 <ferror@plt+0x24850>
  427574:	ldp	x1, x0, [x19, #8]
  427578:	orr	x0, x0, x1
  42757c:	cmp	x0, #0x0
  427580:	cset	w24, ne  // ne = any
  427584:	b	425bfc <ferror@plt+0x2337c>
  427588:	add	x2, sp, #0x200
  42758c:	stp	x8, x13, [sp, #312]
  427590:	add	x0, sp, #0xc0
  427594:	strh	wzr, [sp, #328]
  427598:	add	x8, sp, #0xe0
  42759c:	str	x1, [sp, #136]
  4275a0:	ldp	x2, x3, [x2, #-200]
  4275a4:	stp	x2, x3, [sp, #192]
  4275a8:	ldr	x2, [sp, #328]
  4275ac:	add	x3, sp, #0x138
  4275b0:	str	x3, [sp, #128]
  4275b4:	str	w14, [sp, #144]
  4275b8:	str	x2, [sp, #208]
  4275bc:	bl	423d70 <ferror@plt+0x214f0>
  4275c0:	add	x0, sp, #0x200
  4275c4:	ldr	w14, [sp, #144]
  4275c8:	ldp	x4, x5, [sp, #224]
  4275cc:	stp	x4, x5, [x0, #-200]
  4275d0:	ldr	x0, [sp, #240]
  4275d4:	str	x0, [sp, #328]
  4275d8:	ldp	x3, x1, [sp, #128]
  4275dc:	ldrb	w15, [sp, #328]
  4275e0:	ldp	x8, x13, [sp, #312]
  4275e4:	b	426de8 <ferror@plt+0x24568>
  4275e8:	mov	x0, x22
  4275ec:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  4275f0:	mov	w1, #0x6                   	// #6
  4275f4:	add	x2, x2, #0xe68
  4275f8:	str	w5, [sp, #128]
  4275fc:	stp	x4, x3, [sp, #136]
  427600:	bl	422f30 <ferror@plt+0x206b0>
  427604:	ldr	w5, [sp, #128]
  427608:	add	x12, sp, #0x168
  42760c:	mov	w0, #0x0                   	// #0
  427610:	ldp	x4, x3, [sp, #136]
  427614:	b	425da8 <ferror@plt+0x23528>
  427618:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  42761c:	mov	w2, w9
  427620:	add	x4, x4, #0xbc0
  427624:	mov	w3, #0x0                   	// #0
  427628:	b	426cc0 <ferror@plt+0x24440>
  42762c:	str	xzr, [x22, #432]
  427630:	b	426240 <ferror@plt+0x239c0>
  427634:	mov	w2, w9
  427638:	mov	x0, x22
  42763c:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  427640:	mov	w3, #0x0                   	// #0
  427644:	add	x4, x4, #0xce8
  427648:	mov	w1, #0x1                   	// #1
  42764c:	bl	423308 <ferror@plt+0x20a88>
  427650:	b	426bc8 <ferror@plt+0x24348>
  427654:	b.eq	427780 <ferror@plt+0x24f00>  // b.none
  427658:	mov	x3, #0xffffffffffffffff    	// #-1
  42765c:	mov	w2, #0x0                   	// #0
  427660:	lsl	x0, x3, x0
  427664:	mov	x3, #0x0                   	// #0
  427668:	bic	x1, x1, x0
  42766c:	b	426638 <ferror@plt+0x23db8>
  427670:	mov	x0, #0x0                   	// #0
  427674:	cbz	w1, 425d44 <ferror@plt+0x234c4>
  427678:	b	427228 <ferror@plt+0x249a8>
  42767c:	mov	w2, w9
  427680:	mov	x0, x22
  427684:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  427688:	mov	w3, #0x0                   	// #0
  42768c:	add	x4, x4, #0xcc8
  427690:	mov	w1, #0x2                   	// #2
  427694:	bl	423290 <ferror@plt+0x20a10>
  427698:	b	426bc8 <ferror@plt+0x24348>
  42769c:	lsr	x1, x3, x1
  4276a0:	mvn	x2, x1
  4276a4:	and	w2, w2, #0x1
  4276a8:	mov	x4, x3
  4276ac:	mov	x5, #0x0                   	// #0
  4276b0:	b	4274f0 <ferror@plt+0x24c70>
  4276b4:	mov	x4, x0
  4276b8:	add	x12, sp, #0x168
  4276bc:	mov	w2, #0x0                   	// #0
  4276c0:	mov	x5, #0x0                   	// #0
  4276c4:	b	426a0c <ferror@plt+0x2418c>
  4276c8:	mov	w26, w9
  4276cc:	mov	x1, x27
  4276d0:	mov	x0, x22
  4276d4:	bl	42c490 <ferror@plt+0x29c10>
  4276d8:	mov	w2, w26
  4276dc:	mov	x5, x0
  4276e0:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  4276e4:	mov	x0, x22
  4276e8:	add	x4, x4, #0xd10
  4276ec:	mov	w3, #0x0                   	// #0
  4276f0:	mov	w1, #0x3                   	// #3
  4276f4:	mov	w24, #0x0                   	// #0
  4276f8:	bl	423290 <ferror@plt+0x20a10>
  4276fc:	b	425bfc <ferror@plt+0x2337c>
  427700:	mov	x0, x22
  427704:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  427708:	mov	w1, #0x3                   	// #3
  42770c:	add	x2, x2, #0xf48
  427710:	mov	w24, #0x0                   	// #0
  427714:	bl	422e10 <ferror@plt+0x20590>
  427718:	b	425bfc <ferror@plt+0x2337c>
  42771c:	mov	w2, w9
  427720:	mov	x0, x22
  427724:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  427728:	mov	w3, #0x0                   	// #0
  42772c:	add	x4, x4, #0xf68
  427730:	mov	w1, #0x3                   	// #3
  427734:	mov	w24, #0x0                   	// #0
  427738:	bl	423290 <ferror@plt+0x20a10>
  42773c:	b	425bfc <ferror@plt+0x2337c>
  427740:	mov	w28, #0x1c                  	// #28
  427744:	b	4262d4 <ferror@plt+0x23a54>
  427748:	mov	w28, #0x1b                  	// #27
  42774c:	b	4262d4 <ferror@plt+0x23a54>
  427750:	mov	w2, #0x0                   	// #0
  427754:	mov	x3, #0xffffffffffffffff    	// #-1
  427758:	b	426638 <ferror@plt+0x23db8>
  42775c:	mov	w2, w9
  427760:	mov	x0, x22
  427764:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  427768:	mov	w3, #0x0                   	// #0
  42776c:	add	x4, x4, #0xd48
  427770:	mov	w1, #0x3                   	// #3
  427774:	mov	w24, #0x0                   	// #0
  427778:	bl	423290 <ferror@plt+0x20a10>
  42777c:	b	425bfc <ferror@plt+0x2337c>
  427780:	mov	w2, #0x0                   	// #0
  427784:	mov	x3, #0x0                   	// #0
  427788:	b	426638 <ferror@plt+0x23db8>
  42778c:	cbz	w24, 426670 <ferror@plt+0x23df0>
  427790:	str	wzr, [sp, #336]
  427794:	ldr	x1, [x22, #1248]
  427798:	ldr	x0, [x27, #8]
  42779c:	cmp	x0, x1
  4277a0:	b.eq	4277fc <ferror@plt+0x24f7c>  // b.none
  4277a4:	ldr	x1, [x22, #1288]
  4277a8:	cmp	x0, x1
  4277ac:	b.eq	4278bc <ferror@plt+0x2503c>  // b.none
  4277b0:	ldr	x1, [x22, #1296]
  4277b4:	cmp	x0, x1
  4277b8:	b.eq	4278e0 <ferror@plt+0x25060>  // b.none
  4277bc:	ldrb	w1, [x22, #1120]
  4277c0:	cbz	w1, 4277dc <ferror@plt+0x24f5c>
  4277c4:	ldr	x1, [x22, #1256]
  4277c8:	cmp	x0, x1
  4277cc:	b.eq	4278a8 <ferror@plt+0x25028>  // b.none
  4277d0:	ldr	x2, [x22, #1264]
  4277d4:	cmp	x0, x2
  4277d8:	b.eq	4278a8 <ferror@plt+0x25028>  // b.none
  4277dc:	ldrb	w2, [x22, #1149]
  4277e0:	cbz	w2, 4277f0 <ferror@plt+0x24f70>
  4277e4:	ldr	w1, [x22, #28]
  4277e8:	mov	w2, #0x0                   	// #0
  4277ec:	cbz	w1, 427920 <ferror@plt+0x250a0>
  4277f0:	mov	x1, #0x0                   	// #0
  4277f4:	mov	x3, #0x0                   	// #0
  4277f8:	b	426638 <ferror@plt+0x23db8>
  4277fc:	ldrb	w1, [x22, #24]
  427800:	mov	x0, x22
  427804:	ldr	x21, [x22, #136]
  427808:	add	w1, w1, #0x1
  42780c:	strb	w1, [x22, #24]
  427810:	bl	43a008 <ferror@plt+0x37788>
  427814:	mov	x20, x0
  427818:	ldrb	w0, [x0, #4]
  42781c:	cmp	w0, #0x14
  427820:	b.eq	427950 <ferror@plt+0x250d0>  // b.none
  427824:	cmp	w0, #0x35
  427828:	b.ne	4278ec <ferror@plt+0x2506c>  // b.any
  42782c:	ldr	x20, [x20, #8]
  427830:	cbz	x20, 427908 <ferror@plt+0x25088>
  427834:	ldr	x0, [x22, #136]
  427838:	cmp	x21, x0
  42783c:	b.eq	427a04 <ferror@plt+0x25184>  // b.none
  427840:	ldrb	w0, [x22, #1150]
  427844:	cbnz	w0, 427a14 <ferror@plt+0x25194>
  427848:	ldrb	w0, [x20, #18]
  42784c:	and	w0, w0, #0x3
  427850:	cmp	w0, #0x2
  427854:	b.ne	427868 <ferror@plt+0x24fe8>  // b.any
  427858:	ldr	x1, [x20, #24]
  42785c:	ldrb	w0, [x1, #19]
  427860:	orr	w0, w0, #0x20
  427864:	strb	w0, [x1, #19]
  427868:	ldrh	w0, [x20, #18]
  42786c:	tbz	w0, #7, 4279f4 <ferror@plt+0x25174>
  427870:	ldrb	w0, [x22, #24]
  427874:	sub	w0, w0, #0x1
  427878:	strb	w0, [x22, #24]
  42787c:	ldrb	w0, [x20, #18]
  427880:	str	x20, [x22, #432]
  427884:	tbz	w0, #1, 427944 <ferror@plt+0x250c4>
  427888:	ldrh	w1, [x20, #18]
  42788c:	add	x20, sp, #0x168
  427890:	eor	x1, x1, #0x100
  427894:	ubfx	x1, x1, #8, #1
  427898:	mov	w0, #0x0                   	// #0
  42789c:	mov	w2, #0x0                   	// #0
  4278a0:	mov	x3, #0x0                   	// #0
  4278a4:	b	426640 <ferror@plt+0x23dc0>
  4278a8:	cmp	x0, x1
  4278ac:	mov	w2, #0x0                   	// #0
  4278b0:	cset	x1, eq  // eq = none
  4278b4:	mov	x3, #0x0                   	// #0
  4278b8:	b	426638 <ferror@plt+0x23db8>
  4278bc:	add	x20, sp, #0x168
  4278c0:	mov	w1, #0x0                   	// #0
  4278c4:	mov	x0, x22
  4278c8:	mov	x8, x20
  4278cc:	bl	423e30 <ferror@plt+0x215b0>
  4278d0:	ldrb	w2, [sp, #376]
  4278d4:	ldrb	w0, [sp, #377]
  4278d8:	ldp	x3, x1, [sp, #360]
  4278dc:	b	426640 <ferror@plt+0x23dc0>
  4278e0:	add	x20, sp, #0x168
  4278e4:	mov	w1, #0x1                   	// #1
  4278e8:	b	4278c4 <ferror@plt+0x25044>
  4278ec:	mov	x0, x22
  4278f0:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  4278f4:	mov	w1, #0x3                   	// #3
  4278f8:	add	x2, x2, #0xc10
  4278fc:	bl	422e10 <ferror@plt+0x20590>
  427900:	ldrh	w0, [x20, #6]
  427904:	tbnz	w0, #4, 427998 <ferror@plt+0x25118>
  427908:	ldrb	w0, [x22, #24]
  42790c:	add	x20, sp, #0x168
  427910:	mov	x1, #0x0                   	// #0
  427914:	sub	w0, w0, #0x1
  427918:	strb	w0, [x22, #24]
  42791c:	b	427898 <ferror@plt+0x25018>
  427920:	ldr	x5, [x0]
  427924:	mov	w2, w9
  427928:	mov	x0, x22
  42792c:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x196d8>
  427930:	mov	w3, #0x0                   	// #0
  427934:	add	x4, x4, #0xca0
  427938:	mov	w1, #0xd                   	// #13
  42793c:	bl	423308 <ferror@plt+0x20a88>
  427940:	b	426ccc <ferror@plt+0x2444c>
  427944:	add	x20, sp, #0x168
  427948:	mov	x1, #0x0                   	// #0
  42794c:	b	427898 <ferror@plt+0x25018>
  427950:	mov	x0, x22
  427954:	bl	43a008 <ferror@plt+0x37788>
  427958:	mov	x20, x0
  42795c:	ldrb	w0, [x0, #4]
  427960:	cmp	w0, #0x35
  427964:	b.ne	4278ec <ferror@plt+0x2506c>  // b.any
  427968:	mov	x0, x22
  42796c:	ldr	x20, [x20, #8]
  427970:	bl	43a008 <ferror@plt+0x37788>
  427974:	ldrb	w0, [x0, #4]
  427978:	cmp	w0, #0x15
  42797c:	b.eq	427830 <ferror@plt+0x24fb0>  // b.none
  427980:	mov	x0, x22
  427984:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  427988:	mov	w1, #0x3                   	// #3
  42798c:	add	x2, x2, #0xbf0
  427990:	bl	422e10 <ferror@plt+0x20590>
  427994:	b	427908 <ferror@plt+0x25088>
  427998:	ldrb	w2, [x20, #4]
  42799c:	mov	x1, x20
  4279a0:	mov	x0, x22
  4279a4:	add	x20, sp, #0x168
  4279a8:	strb	w2, [sp, #364]
  4279ac:	strh	wzr, [sp, #366]
  4279b0:	bl	42c490 <ferror@plt+0x29c10>
  4279b4:	mov	x21, x0
  4279b8:	mov	x1, x20
  4279bc:	mov	x0, x22
  4279c0:	bl	42c490 <ferror@plt+0x29c10>
  4279c4:	mov	x4, x0
  4279c8:	mov	w1, #0x3                   	// #3
  4279cc:	mov	x3, x21
  4279d0:	mov	x0, x22
  4279d4:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  4279d8:	add	x2, x2, #0xc40
  4279dc:	bl	422e10 <ferror@plt+0x20590>
  4279e0:	ldrb	w0, [x22, #24]
  4279e4:	mov	x1, #0x0                   	// #0
  4279e8:	sub	w0, w0, #0x1
  4279ec:	strb	w0, [x22, #24]
  4279f0:	b	427898 <ferror@plt+0x25018>
  4279f4:	mov	x1, x20
  4279f8:	mov	x0, x22
  4279fc:	bl	437af0 <ferror@plt+0x35270>
  427a00:	b	427870 <ferror@plt+0x24ff0>
  427a04:	add	x0, x22, #0x50
  427a08:	cmp	x21, x0
  427a0c:	b.ne	427840 <ferror@plt+0x24fc0>  // b.any
  427a10:	b	427848 <ferror@plt+0x24fc8>
  427a14:	mov	x0, x22
  427a18:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x196d8>
  427a1c:	mov	w1, #0x18                  	// #24
  427a20:	add	x2, x2, #0xc70
  427a24:	bl	423050 <ferror@plt+0x207d0>
  427a28:	b	427848 <ferror@plt+0x24fc8>
  427a2c:	nop
  427a30:	stp	x29, x30, [sp, #-48]!
  427a34:	mov	x29, sp
  427a38:	stp	x19, x20, [sp, #16]
  427a3c:	mov	x20, x0
  427a40:	ldr	x0, [x0, #1096]
  427a44:	str	x21, [sp, #32]
  427a48:	ldr	x21, [x20, #1104]
  427a4c:	sub	x21, x21, x0
  427a50:	asr	x19, x21, #3
  427a54:	add	x19, x19, #0x32
  427a58:	lsl	x19, x19, #4
  427a5c:	mov	x1, x19
  427a60:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  427a64:	add	x19, x0, x19
  427a68:	str	x0, [x20, #1096]
  427a6c:	str	x19, [x20, #1104]
  427a70:	add	x0, x0, x21
  427a74:	ldp	x19, x20, [sp, #16]
  427a78:	ldr	x21, [sp, #32]
  427a7c:	ldp	x29, x30, [sp], #48
  427a80:	ret
  427a84:	nop
  427a88:	ldrb	w4, [x0, #16]
  427a8c:	ldp	x3, x2, [x0]
  427a90:	cbnz	w4, 427ac4 <ferror@plt+0x25244>
  427a94:	cmp	x1, #0x40
  427a98:	b.ls	427adc <ferror@plt+0x2525c>  // b.plast
  427a9c:	sub	x1, x1, #0x40
  427aa0:	cmp	x1, #0x3f
  427aa4:	b.hi	427ac4 <ferror@plt+0x25244>  // b.pmore
  427aa8:	sub	w4, w1, #0x1
  427aac:	lsr	x4, x3, x4
  427ab0:	tbz	w4, #0, 427ac4 <ferror@plt+0x25244>
  427ab4:	neg	w1, w1
  427ab8:	mov	x4, #0xffffffffffffffff    	// #-1
  427abc:	lsr	x1, x4, x1
  427ac0:	orn	x3, x3, x1
  427ac4:	stp	x3, x2, [x0]
  427ac8:	ldr	x1, [x0, #16]
  427acc:	str	x1, [x8, #16]
  427ad0:	ldp	x0, x1, [x0]
  427ad4:	stp	x0, x1, [x8]
  427ad8:	ret
  427adc:	sub	w4, w1, #0x1
  427ae0:	lsr	x4, x2, x4
  427ae4:	tbz	w4, #0, 427ac4 <ferror@plt+0x25244>
  427ae8:	neg	w4, w1
  427aec:	mov	x3, #0xffffffffffffffff    	// #-1
  427af0:	cmp	x1, #0x40
  427af4:	lsr	x1, x3, x4
  427af8:	orn	x1, x2, x1
  427afc:	csel	x2, x1, x2, ne  // ne = any
  427b00:	stp	x3, x2, [x0]
  427b04:	ldr	x1, [x0, #16]
  427b08:	str	x1, [x8, #16]
  427b0c:	ldp	x0, x1, [x0]
  427b10:	stp	x0, x1, [x8]
  427b14:	ret
  427b18:	ldr	x1, [x0, #8]
  427b1c:	ldr	x0, [x0, #24]
  427b20:	cmp	x1, #0x0
  427b24:	add	x1, x0, #0x8
  427b28:	csel	x0, x1, x0, eq  // eq = none
  427b2c:	ldr	x0, [x0]
  427b30:	b	45c100 <ferror@plt+0x59880>
  427b34:	nop
  427b38:	stp	x29, x30, [sp, #-32]!
  427b3c:	mov	x29, sp
  427b40:	ldr	x0, [x0]
  427b44:	stp	x19, x20, [sp, #16]
  427b48:	mov	x19, x1
  427b4c:	ldr	x1, [x0, #8]
  427b50:	cbz	x1, 427b68 <ferror@plt+0x252e8>
  427b54:	ldr	x20, [x0, #24]
  427b58:	ldrb	w0, [x20, #210]
  427b5c:	cbnz	w0, 427b68 <ferror@plt+0x252e8>
  427b60:	ldr	x0, [x20, #56]
  427b64:	cbz	x0, 427b78 <ferror@plt+0x252f8>
  427b68:	mov	w0, #0x1                   	// #1
  427b6c:	ldp	x19, x20, [sp, #16]
  427b70:	ldp	x29, x30, [sp], #32
  427b74:	ret
  427b78:	ldrh	w0, [x20, #208]
  427b7c:	cmp	w0, #0x1
  427b80:	b.ne	427b68 <ferror@plt+0x252e8>  // b.any
  427b84:	ldrb	w0, [x20, #212]
  427b88:	cbnz	w0, 427b68 <ferror@plt+0x252e8>
  427b8c:	ldp	x1, x0, [x19]
  427b90:	cbz	x1, 427bac <ferror@plt+0x2532c>
  427b94:	add	x1, x1, x0, lsl #3
  427b98:	add	x0, x0, #0x1
  427b9c:	str	x0, [x19, #8]
  427ba0:	ldr	x0, [x20, #8]
  427ba4:	str	x0, [x1]
  427ba8:	b	427b68 <ferror@plt+0x252e8>
  427bac:	mov	x1, #0x8                   	// #8
  427bb0:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  427bb4:	mov	x1, x0
  427bb8:	mov	x0, #0x1                   	// #1
  427bbc:	str	x1, [x19]
  427bc0:	b	427b9c <ferror@plt+0x2531c>
  427bc4:	nop
  427bc8:	stp	x29, x30, [sp, #-16]!
  427bcc:	mov	x29, sp
  427bd0:	bl	45b028 <ferror@plt+0x587a8>
  427bd4:	cmp	w0, #0x0
  427bd8:	cset	w0, eq  // eq = none
  427bdc:	ldp	x29, x30, [sp], #16
  427be0:	ret
  427be4:	nop
  427be8:	stp	x29, x30, [sp, #-16]!
  427bec:	mov	x29, sp
  427bf0:	ldr	x2, [x0, #8]
  427bf4:	ldr	x0, [x0, #24]
  427bf8:	cmp	x2, #0x0
  427bfc:	add	x2, x0, #0x8
  427c00:	csel	x0, x2, x0, eq  // eq = none
  427c04:	ldr	x0, [x0]
  427c08:	bl	45b028 <ferror@plt+0x587a8>
  427c0c:	cmp	w0, #0x0
  427c10:	cset	w0, eq  // eq = none
  427c14:	ldp	x29, x30, [sp], #16
  427c18:	ret
  427c1c:	nop
  427c20:	stp	x29, x30, [sp, #-80]!
  427c24:	mov	x29, sp
  427c28:	stp	x19, x20, [sp, #16]
  427c2c:	mov	w20, w0
  427c30:	mov	x0, #0x15                  	// #21
  427c34:	stp	x21, x22, [sp, #32]
  427c38:	mov	x21, x1
  427c3c:	str	x25, [sp, #64]
  427c40:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  427c44:	and	x1, x20, #0xff
  427c48:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  427c4c:	add	x25, x25, #0x2c0
  427c50:	mov	x22, x0
  427c54:	mov	x19, x0
  427c58:	ldrh	w0, [x25, x1, lsl #1]
  427c5c:	tst	w0, #0xc00
  427c60:	b.ne	427d04 <ferror@plt+0x25484>  // b.any
  427c64:	stp	x23, x24, [sp, #48]
  427c68:	mov	w24, #0x14                  	// #20
  427c6c:	nop
  427c70:	strb	w20, [x19], #1
  427c74:	ldp	x2, x0, [x21, #8]
  427c78:	add	x1, x2, #0x1
  427c7c:	cmp	x2, x0
  427c80:	b.cs	427cd8 <ferror@plt+0x25458>  // b.hs, b.nlast
  427c84:	str	x1, [x21, #8]
  427c88:	sub	x23, x19, x22
  427c8c:	ldrb	w20, [x2]
  427c90:	mov	w0, w20
  427c94:	ldrh	w0, [x25, w0, sxtw #1]
  427c98:	tst	w0, #0xc00
  427c9c:	b.ne	427d00 <ferror@plt+0x25480>  // b.any
  427ca0:	cmp	x23, w24, sxtw
  427ca4:	b.ne	427c70 <ferror@plt+0x253f0>  // b.any
  427ca8:	lsl	w24, w24, #1
  427cac:	mov	x0, x22
  427cb0:	add	w1, w24, #0x1
  427cb4:	sxtw	x1, w1
  427cb8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  427cbc:	add	x19, x0, x23
  427cc0:	mov	x22, x0
  427cc4:	strb	w20, [x19], #1
  427cc8:	ldp	x2, x0, [x21, #8]
  427ccc:	add	x1, x2, #0x1
  427cd0:	cmp	x2, x0
  427cd4:	b.cc	427c84 <ferror@plt+0x25404>  // b.lo, b.ul, b.last
  427cd8:	mov	x0, x21
  427cdc:	bl	402850 <__uflow@plt>
  427ce0:	mov	w20, w0
  427ce4:	cmn	w0, #0x1
  427ce8:	b.eq	427d00 <ferror@plt+0x25480>  // b.none
  427cec:	and	w0, w0, #0xff
  427cf0:	sub	x23, x19, x22
  427cf4:	ldrh	w0, [x25, w0, sxtw #1]
  427cf8:	tst	w0, #0xc00
  427cfc:	b.eq	427ca0 <ferror@plt+0x25420>  // b.none
  427d00:	ldp	x23, x24, [sp, #48]
  427d04:	strb	wzr, [x19]
  427d08:	mov	x1, x21
  427d0c:	mov	w0, w20
  427d10:	bl	402650 <ungetc@plt>
  427d14:	mov	x0, x22
  427d18:	ldp	x19, x20, [sp, #16]
  427d1c:	ldp	x21, x22, [sp, #32]
  427d20:	ldr	x25, [sp, #64]
  427d24:	ldp	x29, x30, [sp], #80
  427d28:	ret
  427d2c:	nop
  427d30:	ldr	x0, [x0]
  427d34:	ldr	x1, [x1]
  427d38:	b	4025d0 <strcmp@plt>
  427d3c:	nop
  427d40:	stp	x29, x30, [sp, #-32]!
  427d44:	mov	x29, sp
  427d48:	stp	x19, x20, [sp, #16]
  427d4c:	mov	x19, x0
  427d50:	ldr	x0, [x0, #8]
  427d54:	ldrb	w1, [x0]
  427d58:	cbnz	w1, 427db8 <ferror@plt+0x25538>
  427d5c:	str	wzr, [x19, #200]
  427d60:	add	x2, x19, #0x48
  427d64:	mov	w0, #0x0                   	// #0
  427d68:	bl	402740 <__fxstat@plt>
  427d6c:	cbnz	w0, 427e08 <ferror@plt+0x25588>
  427d70:	ldr	w0, [x19, #88]
  427d74:	and	w0, w0, #0xf000
  427d78:	cmp	w0, #0x4, lsl #12
  427d7c:	b.ne	427df4 <ferror@plt+0x25574>  // b.any
  427d80:	bl	4027c0 <__errno_location@plt>
  427d84:	mov	x20, x0
  427d88:	mov	w0, #0x2                   	// #2
  427d8c:	str	w0, [x20]
  427d90:	ldr	w0, [x19, #200]
  427d94:	bl	4024f0 <close@plt>
  427d98:	mov	w0, #0xffffffff            	// #-1
  427d9c:	str	w0, [x19, #200]
  427da0:	ldr	w1, [x20]
  427da4:	str	w1, [x19, #204]
  427da8:	mov	w0, #0x0                   	// #0
  427dac:	ldp	x19, x20, [sp, #16]
  427db0:	ldp	x29, x30, [sp], #32
  427db4:	ret
  427db8:	mov	w1, #0x100                 	// #256
  427dbc:	mov	w2, #0x1b6                 	// #438
  427dc0:	bl	4023e0 <open@plt>
  427dc4:	str	w0, [x19, #200]
  427dc8:	mov	w1, w0
  427dcc:	cmn	w0, #0x1
  427dd0:	b.ne	427d60 <ferror@plt+0x254e0>  // b.any
  427dd4:	bl	4027c0 <__errno_location@plt>
  427dd8:	ldr	w1, [x0]
  427ddc:	cmp	w1, #0x14
  427de0:	b.ne	427da4 <ferror@plt+0x25524>  // b.any
  427de4:	mov	w2, #0x2                   	// #2
  427de8:	mov	w1, w2
  427dec:	str	w2, [x0]
  427df0:	b	427da4 <ferror@plt+0x25524>
  427df4:	str	wzr, [x19, #204]
  427df8:	mov	w0, #0x1                   	// #1
  427dfc:	ldp	x19, x20, [sp, #16]
  427e00:	ldp	x29, x30, [sp], #32
  427e04:	ret
  427e08:	bl	4027c0 <__errno_location@plt>
  427e0c:	mov	x20, x0
  427e10:	b	427d90 <ferror@plt+0x25510>
  427e14:	nop
  427e18:	stp	x29, x30, [sp, #-96]!
  427e1c:	mov	x29, sp
  427e20:	stp	x19, x20, [sp, #16]
  427e24:	mov	x19, x1
  427e28:	mov	x20, x0
  427e2c:	stp	x21, x22, [sp, #32]
  427e30:	mov	x0, x1
  427e34:	mov	x22, x2
  427e38:	stp	x23, x24, [sp, #48]
  427e3c:	stp	x25, x26, [sp, #64]
  427e40:	ldr	x23, [x1, #8]
  427e44:	str	x2, [x1, #8]
  427e48:	bl	427d40 <ferror@plt+0x254c0>
  427e4c:	ands	w26, w0, #0xff
  427e50:	b.eq	427f18 <ferror@plt+0x25698>  // b.none
  427e54:	ldr	w2, [x19, #200]
  427e58:	mov	x1, x22
  427e5c:	ldr	x3, [x20, #968]
  427e60:	stp	x27, x28, [sp, #80]
  427e64:	mov	x0, x20
  427e68:	blr	x3
  427e6c:	and	w26, w0, #0x1
  427e70:	mov	w27, w26
  427e74:	tbz	w0, #0, 427f5c <ferror@plt+0x256dc>
  427e78:	ldrb	w0, [x20, #1131]
  427e7c:	cbz	w0, 427f38 <ferror@plt+0x256b8>
  427e80:	ldr	x0, [x20, #40]
  427e84:	adrp	x28, 49e000 <_obstack_memory_used@@Base+0x416d8>
  427e88:	mov	w21, #0x1                   	// #1
  427e8c:	add	x24, x28, #0x520
  427e90:	mov	w25, #0x2e                  	// #46
  427e94:	ldr	w0, [x0, #48]
  427e98:	cmp	w0, #0x1
  427e9c:	b.hi	427ec0 <ferror@plt+0x25640>  // b.pmore
  427ea0:	b	427ef0 <ferror@plt+0x25670>
  427ea4:	str	x2, [x0, #40]
  427ea8:	add	w21, w21, #0x1
  427eac:	strb	w25, [x3]
  427eb0:	ldr	x1, [x20, #40]
  427eb4:	ldr	w1, [x1, #48]
  427eb8:	cmp	w1, w21
  427ebc:	b.ls	427ef0 <ferror@plt+0x25670>  // b.plast
  427ec0:	ldr	x0, [x24]
  427ec4:	ldp	x3, x1, [x0, #40]
  427ec8:	add	x2, x3, #0x1
  427ecc:	cmp	x3, x1
  427ed0:	b.cc	427ea4 <ferror@plt+0x25624>  // b.lo, b.ul, b.last
  427ed4:	mov	w1, #0x2e                  	// #46
  427ed8:	bl	402550 <__overflow@plt>
  427edc:	ldr	x0, [x20, #40]
  427ee0:	add	w21, w21, #0x1
  427ee4:	ldr	w0, [x0, #48]
  427ee8:	cmp	w0, w21
  427eec:	b.hi	427ec0 <ferror@plt+0x25640>  // b.pmore
  427ef0:	ldr	x0, [x28, #1312]
  427ef4:	cmp	w27, #0x0
  427ef8:	mov	w4, #0x21                  	// #33
  427efc:	mov	x3, x22
  427f00:	mov	w2, #0x78                  	// #120
  427f04:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  427f08:	csel	w2, w4, w2, ne  // ne = any
  427f0c:	add	x1, x1, #0x20
  427f10:	bl	402840 <fprintf@plt>
  427f14:	ldp	x27, x28, [sp, #80]
  427f18:	mov	w0, w26
  427f1c:	ldp	x21, x22, [sp, #32]
  427f20:	ldp	x25, x26, [sp, #64]
  427f24:	str	x23, [x19, #8]
  427f28:	ldp	x19, x20, [sp, #16]
  427f2c:	ldp	x23, x24, [sp, #48]
  427f30:	ldp	x29, x30, [sp], #96
  427f34:	ret
  427f38:	mov	w0, w26
  427f3c:	ldp	x21, x22, [sp, #32]
  427f40:	ldp	x25, x26, [sp, #64]
  427f44:	ldp	x27, x28, [sp, #80]
  427f48:	str	x23, [x19, #8]
  427f4c:	ldp	x19, x20, [sp, #16]
  427f50:	ldp	x23, x24, [sp, #48]
  427f54:	ldp	x29, x30, [sp], #96
  427f58:	ret
  427f5c:	ldr	w0, [x19, #200]
  427f60:	bl	4024f0 <close@plt>
  427f64:	mov	w0, #0xffffffff            	// #-1
  427f68:	str	w0, [x19, #200]
  427f6c:	ldrb	w0, [x20, #1131]
  427f70:	cbz	w0, 427f38 <ferror@plt+0x256b8>
  427f74:	b	427e80 <ferror@plt+0x25600>
  427f78:	stp	x29, x30, [sp, #-48]!
  427f7c:	mov	x29, sp
  427f80:	stp	x19, x20, [sp, #16]
  427f84:	mov	x19, x0
  427f88:	mov	x20, x1
  427f8c:	ldr	x0, [x0, #40]
  427f90:	stp	x21, x22, [sp, #32]
  427f94:	mov	w21, w2
  427f98:	mov	w22, w3
  427f9c:	ldr	w0, [x0, #60]
  427fa0:	cmp	w0, #0x1
  427fa4:	b.ls	427fb8 <ferror@plt+0x25738>  // b.plast
  427fa8:	ldr	x0, [x19]
  427fac:	cbz	x0, 427fb8 <ferror@plt+0x25738>
  427fb0:	ldrb	w0, [x0, #106]
  427fb4:	orr	w21, w2, w0
  427fb8:	ldrb	w0, [x19, #26]
  427fbc:	cbnz	w0, 428048 <ferror@plt+0x257c8>
  427fc0:	bl	4027c0 <__errno_location@plt>
  427fc4:	ldr	w2, [x20, #204]
  427fc8:	cmp	w21, #0x0
  427fcc:	ldr	w1, [x19, #1200]
  427fd0:	cset	w3, ne  // ne = any
  427fd4:	str	w2, [x0]
  427fd8:	cmp	w1, w3
  427fdc:	b.le	428018 <ferror@plt+0x25798>
  427fe0:	cmp	w2, #0x2
  427fe4:	ldrb	w0, [x19, #1204]
  427fe8:	cset	w1, eq  // eq = none
  427fec:	tst	w1, w0
  427ff0:	b.ne	428058 <ferror@plt+0x257d8>  // b.any
  427ff4:	ldr	x2, [x20, #8]
  427ff8:	cbz	x2, 428074 <ferror@plt+0x257f4>
  427ffc:	mov	w3, w22
  428000:	mov	x0, x19
  428004:	ldp	x19, x20, [sp, #16]
  428008:	mov	w1, #0x6                   	// #6
  42800c:	ldp	x21, x22, [sp, #32]
  428010:	ldp	x29, x30, [sp], #48
  428014:	b	423688 <ferror@plt+0x20e08>
  428018:	ldr	x2, [x20, #8]
  42801c:	cbz	w1, 427ff8 <ferror@plt+0x25778>
  428020:	ldrb	w0, [x19, #1207]
  428024:	cbnz	w0, 427ff8 <ferror@plt+0x25778>
  428028:	cbz	x2, 428094 <ferror@plt+0x25814>
  42802c:	mov	w3, w22
  428030:	mov	x0, x19
  428034:	ldp	x19, x20, [sp, #16]
  428038:	mov	w1, #0x0                   	// #0
  42803c:	ldp	x21, x22, [sp, #32]
  428040:	ldp	x29, x30, [sp], #48
  428044:	b	423688 <ferror@plt+0x20e08>
  428048:	ldp	x19, x20, [sp, #16]
  42804c:	ldp	x21, x22, [sp, #32]
  428050:	ldp	x29, x30, [sp], #48
  428054:	ret
  428058:	ldr	x1, [x20]
  42805c:	ldr	x0, [x19, #712]
  428060:	bl	43a978 <ferror@plt+0x380f8>
  428064:	ldrb	w0, [x19, #1207]
  428068:	cbz	w0, 428048 <ferror@plt+0x257c8>
  42806c:	ldr	x2, [x20, #8]
  428070:	cbnz	x2, 427ffc <ferror@plt+0x2577c>
  428074:	mov	w3, w22
  428078:	mov	x0, x19
  42807c:	ldr	x2, [x20]
  428080:	mov	w1, #0x6                   	// #6
  428084:	ldp	x19, x20, [sp, #16]
  428088:	ldp	x21, x22, [sp, #32]
  42808c:	ldp	x29, x30, [sp], #48
  428090:	b	423688 <ferror@plt+0x20e08>
  428094:	ldr	x2, [x20]
  428098:	b	42802c <ferror@plt+0x257ac>
  42809c:	nop
  4280a0:	mov	x2, #0x20                  	// #32
  4280a4:	b	402590 <memcmp@plt>
  4280a8:	stp	x29, x30, [sp, #-80]!
  4280ac:	mov	x29, sp
  4280b0:	stp	x19, x20, [sp, #16]
  4280b4:	ldrb	w20, [x1, #213]
  4280b8:	cbnz	w20, 428244 <ferror@plt+0x259c4>
  4280bc:	stp	x23, x24, [sp, #48]
  4280c0:	mov	x19, x1
  4280c4:	ldrb	w24, [x1, #211]
  4280c8:	cbnz	w24, 428258 <ferror@plt+0x259d8>
  4280cc:	stp	x21, x22, [sp, #32]
  4280d0:	mov	x22, x0
  4280d4:	ldr	w0, [x1, #204]
  4280d8:	cbnz	w0, 428254 <ferror@plt+0x259d4>
  4280dc:	ldr	w0, [x1, #200]
  4280e0:	mov	w23, w2
  4280e4:	cmn	w0, #0x1
  4280e8:	b.eq	42826c <ferror@plt+0x259ec>  // b.none
  4280ec:	ldr	w0, [x19, #88]
  4280f0:	and	w0, w0, #0xf000
  4280f4:	cmp	w0, #0x6, lsl #12
  4280f8:	b.eq	42829c <ferror@plt+0x25a1c>  // b.none
  4280fc:	stp	x25, x26, [sp, #64]
  428100:	cmp	w0, #0x8, lsl #12
  428104:	b.eq	4281ac <ferror@plt+0x2592c>  // b.none
  428108:	mov	x0, #0x2010                	// #8208
  42810c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  428110:	mov	x21, x0
  428114:	mov	x20, #0x0                   	// #0
  428118:	mov	x25, #0x2000                	// #8192
  42811c:	nop
  428120:	ldr	w0, [x19, #200]
  428124:	sub	x2, x25, x20
  428128:	add	x1, x21, x20
  42812c:	mov	x26, x20
  428130:	bl	402700 <read@plt>
  428134:	add	x20, x20, x0
  428138:	cmp	x0, #0x0
  42813c:	b.le	42817c <ferror@plt+0x258fc>
  428140:	cmp	x20, x25
  428144:	b.ne	428120 <ferror@plt+0x258a0>  // b.any
  428148:	lsl	x25, x20, #1
  42814c:	mov	x0, x21
  428150:	add	x1, x25, #0x10
  428154:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  428158:	mov	x21, x0
  42815c:	ldr	w0, [x19, #200]
  428160:	sub	x2, x25, x20
  428164:	add	x1, x21, x20
  428168:	mov	x26, x20
  42816c:	bl	402700 <read@plt>
  428170:	add	x20, x20, x0
  428174:	cmp	x0, #0x0
  428178:	b.gt	428140 <ferror@plt+0x258c0>
  42817c:	add	x20, x25, #0x10
  428180:	b.eq	4281f0 <ferror@plt+0x25970>  // b.none
  428184:	ldr	x2, [x19, #8]
  428188:	mov	w3, w23
  42818c:	mov	w1, #0x3                   	// #3
  428190:	mov	x0, x22
  428194:	mov	w24, #0x1                   	// #1
  428198:	bl	423688 <ferror@plt+0x20e08>
  42819c:	mov	x0, x21
  4281a0:	bl	402640 <free@plt>
  4281a4:	ldp	x25, x26, [sp, #64]
  4281a8:	b	428220 <ferror@plt+0x259a0>
  4281ac:	ldr	x25, [x19, #120]
  4281b0:	add	x20, x25, #0x10
  4281b4:	mov	x0, x20
  4281b8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4281bc:	mov	x21, x0
  4281c0:	mov	x1, #0x0                   	// #0
  4281c4:	ldr	w0, [x19, #200]
  4281c8:	mov	x26, x1
  4281cc:	sub	x2, x25, x1
  4281d0:	add	x1, x21, x1
  4281d4:	bl	402700 <read@plt>
  4281d8:	add	x1, x26, x0
  4281dc:	cmp	x0, #0x0
  4281e0:	b.le	4282c0 <ferror@plt+0x25a40>
  4281e4:	cmp	x25, x1
  4281e8:	b.ne	4281c4 <ferror@plt+0x25944>  // b.any
  4281ec:	mov	x26, x25
  4281f0:	ldr	x1, [x22, #1184]
  4281f4:	mov	x4, x26
  4281f8:	mov	x3, x20
  4281fc:	mov	x2, x21
  428200:	mov	x0, x22
  428204:	add	x6, x19, #0x78
  428208:	add	x5, x19, #0x30
  42820c:	bl	41db98 <ferror@plt+0x1b318>
  428210:	mov	w1, #0x1                   	// #1
  428214:	strb	w1, [x19, #213]
  428218:	ldp	x25, x26, [sp, #64]
  42821c:	str	x0, [x19, #40]
  428220:	ldr	w0, [x19, #200]
  428224:	strb	w24, [x19, #211]
  428228:	bl	4024f0 <close@plt>
  42822c:	ldrb	w20, [x19, #211]
  428230:	mov	w0, #0xffffffff            	// #-1
  428234:	eor	w20, w20, #0x1
  428238:	ldp	x21, x22, [sp, #32]
  42823c:	ldp	x23, x24, [sp, #48]
  428240:	str	w0, [x19, #200]
  428244:	mov	w0, w20
  428248:	ldp	x19, x20, [sp, #16]
  42824c:	ldp	x29, x30, [sp], #80
  428250:	ret
  428254:	ldp	x21, x22, [sp, #32]
  428258:	mov	w0, w20
  42825c:	ldp	x19, x20, [sp, #16]
  428260:	ldp	x23, x24, [sp, #48]
  428264:	ldp	x29, x30, [sp], #80
  428268:	ret
  42826c:	mov	x0, x1
  428270:	bl	427d40 <ferror@plt+0x254c0>
  428274:	ands	w20, w0, #0xff
  428278:	b.ne	4280ec <ferror@plt+0x2586c>  // b.any
  42827c:	mov	w3, w23
  428280:	mov	x0, x22
  428284:	mov	x1, x19
  428288:	mov	w2, #0x0                   	// #0
  42828c:	bl	427f78 <ferror@plt+0x256f8>
  428290:	ldp	x21, x22, [sp, #32]
  428294:	ldp	x23, x24, [sp, #48]
  428298:	b	428244 <ferror@plt+0x259c4>
  42829c:	ldr	x4, [x19, #8]
  4282a0:	mov	w2, w23
  4282a4:	mov	x0, x22
  4282a8:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4282ac:	mov	w1, #0x3                   	// #3
  4282b0:	add	x3, x3, #0x28
  4282b4:	mov	w24, #0x1                   	// #1
  4282b8:	bl	423488 <ferror@plt+0x20c08>
  4282bc:	b	428220 <ferror@plt+0x259a0>
  4282c0:	b.ne	428184 <ferror@plt+0x25904>  // b.any
  4282c4:	cmp	x25, x26
  4282c8:	b.eq	4281f0 <ferror@plt+0x25970>  // b.none
  4282cc:	ldr	x4, [x19, #8]
  4282d0:	mov	w2, w23
  4282d4:	mov	x0, x22
  4282d8:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4282dc:	mov	w1, #0x0                   	// #0
  4282e0:	add	x3, x3, #0x40
  4282e4:	bl	423488 <ferror@plt+0x20c08>
  4282e8:	b	4281f0 <ferror@plt+0x25970>
  4282ec:	nop
  4282f0:	stp	x29, x30, [sp, #-64]!
  4282f4:	mov	x29, sp
  4282f8:	stp	x21, x22, [sp, #32]
  4282fc:	mov	x21, x0
  428300:	mov	x0, x1
  428304:	stp	x19, x20, [sp, #16]
  428308:	mov	x20, x1
  42830c:	ldr	x19, [x21, #304]
  428310:	str	x23, [sp, #48]
  428314:	mov	w23, w2
  428318:	bl	45c100 <ferror@plt+0x59880>
  42831c:	mov	w3, #0x1                   	// #1
  428320:	mov	w2, w0
  428324:	mov	x1, x20
  428328:	mov	x0, x19
  42832c:	bl	45bbf8 <ferror@plt+0x59378>
  428330:	mov	x22, x0
  428334:	ldr	x3, [x0]
  428338:	cbnz	x3, 428348 <ferror@plt+0x25ac8>
  42833c:	b	42836c <ferror@plt+0x25aec>
  428340:	ldr	x3, [x3]
  428344:	cbz	x3, 42836c <ferror@plt+0x25aec>
  428348:	ldr	x4, [x3, #8]
  42834c:	cbnz	x4, 428340 <ferror@plt+0x25ac0>
  428350:	ldr	x19, [x3, #24]
  428354:	ldp	x21, x22, [sp, #32]
  428358:	mov	x0, x19
  42835c:	ldp	x19, x20, [sp, #16]
  428360:	ldr	x23, [sp, #48]
  428364:	ldp	x29, x30, [sp], #64
  428368:	ret
  42836c:	mov	x1, #0x40                  	// #64
  428370:	mov	x0, #0x1                   	// #1
  428374:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  428378:	mov	x19, x0
  42837c:	ldr	x1, [x21, #200]
  428380:	mov	x0, x20
  428384:	stp	x1, x20, [x19]
  428388:	bl	402270 <strlen@plt>
  42838c:	strb	w23, [x19, #20]
  428390:	ldr	x3, [x21, #312]
  428394:	ldr	w1, [x3]
  428398:	str	w0, [x19, #16]
  42839c:	str	xzr, [x19, #40]
  4283a0:	cmp	w1, #0x7f
  4283a4:	b.eq	4283f8 <ferror@plt+0x25b78>  // b.none
  4283a8:	ubfiz	x0, x1, #5, #32
  4283ac:	add	w2, w1, #0x1
  4283b0:	add	x0, x0, #0x10
  4283b4:	ldr	x4, [x21, #40]
  4283b8:	ubfiz	x1, x1, #5, #32
  4283bc:	add	x1, x3, x1
  4283c0:	str	w2, [x3]
  4283c4:	add	x3, x3, x0
  4283c8:	ldr	w0, [x4, #56]
  4283cc:	ldr	x2, [x22]
  4283d0:	stp	x2, xzr, [x1, #16]
  4283d4:	str	w0, [x1, #32]
  4283d8:	mov	x0, x19
  4283dc:	str	x19, [x1, #40]
  4283e0:	str	x3, [x22]
  4283e4:	ldp	x19, x20, [sp, #16]
  4283e8:	ldp	x21, x22, [sp, #32]
  4283ec:	ldr	x23, [sp, #48]
  4283f0:	ldp	x29, x30, [sp], #64
  4283f4:	ret
  4283f8:	mov	x0, #0xff0                 	// #4080
  4283fc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  428400:	mov	x3, x0
  428404:	mov	w2, #0x1                   	// #1
  428408:	ldr	x4, [x21, #312]
  42840c:	mov	w1, #0x0                   	// #0
  428410:	mov	x0, #0x10                  	// #16
  428414:	str	wzr, [x3]
  428418:	str	x4, [x3, #8]
  42841c:	str	x3, [x21, #312]
  428420:	b	4283b4 <ferror@plt+0x25b34>
  428424:	nop
  428428:	stp	x29, x30, [sp, #-112]!
  42842c:	mov	x29, sp
  428430:	stp	x19, x20, [sp, #16]
  428434:	mov	x20, x0
  428438:	ldr	w19, [x0, #16]
  42843c:	ldr	x1, [x0, #8]
  428440:	add	x0, x19, #0x1b
  428444:	and	x0, x0, #0x1fffffff0
  428448:	stp	x21, x22, [sp, #32]
  42844c:	mov	x2, x19
  428450:	stp	x23, x24, [sp, #48]
  428454:	stp	x25, x26, [sp, #64]
  428458:	stp	x27, x28, [sp, #80]
  42845c:	sub	sp, sp, x0
  428460:	mov	x3, sp
  428464:	mov	x0, x3
  428468:	bl	402220 <memcpy@plt>
  42846c:	mov	x3, x0
  428470:	mov	x4, x0
  428474:	cbz	x19, 428498 <ferror@plt+0x25c18>
  428478:	add	x4, x0, x19
  42847c:	ldurb	w0, [x4, #-1]
  428480:	cmp	w0, #0x2f
  428484:	b.eq	428498 <ferror@plt+0x25c18>  // b.none
  428488:	add	x4, x19, #0x1
  42848c:	mov	w0, #0x2f                  	// #47
  428490:	add	x4, x3, x4
  428494:	strb	w0, [x3, x19]
  428498:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42849c:	add	x2, x2, #0x60
  4284a0:	mov	x0, x3
  4284a4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x196d8>
  4284a8:	add	x1, x1, #0x780
  4284ac:	ldr	x3, [x2]
  4284b0:	str	x3, [x4]
  4284b4:	ldur	w2, [x2, #7]
  4284b8:	stur	w2, [x4, #7]
  4284bc:	bl	45b180 <ferror@plt+0x58900>
  4284c0:	mov	x19, x0
  4284c4:	mov	x0, #0x48                  	// #72
  4284c8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4284cc:	str	x0, [x20, #32]
  4284d0:	cbz	x19, 428548 <ferror@plt+0x25cc8>
  4284d4:	ldr	x3, [x19, #16]
  4284d8:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4284dc:	add	x25, x25, #0x2c0
  4284e0:	mov	x22, #0x8                   	// #8
  4284e4:	mov	x23, #0x9                   	// #9
  4284e8:	mov	x21, #0x0                   	// #0
  4284ec:	ldr	x0, [x19, #8]
  4284f0:	cmp	x0, x3
  4284f4:	b.cs	428524 <ferror@plt+0x25ca4>  // b.hs, b.nlast
  4284f8:	add	x1, x0, #0x1
  4284fc:	str	x1, [x19, #8]
  428500:	ldrb	w26, [x0]
  428504:	mov	w0, w26
  428508:	ldrh	w0, [x25, w0, sxtw #1]
  42850c:	tst	w0, #0xc00
  428510:	b.eq	42856c <ferror@plt+0x25cec>  // b.none
  428514:	ldr	x0, [x19, #8]
  428518:	ldr	x3, [x19, #16]
  42851c:	cmp	x0, x3
  428520:	b.cc	4284f8 <ferror@plt+0x25c78>  // b.lo, b.ul, b.last
  428524:	mov	x0, x19
  428528:	bl	402850 <__uflow@plt>
  42852c:	mov	w26, w0
  428530:	cmn	w0, #0x1
  428534:	b.ne	4286e4 <ferror@plt+0x25e64>  // b.any
  428538:	mov	x0, x19
  42853c:	bl	402380 <fclose@plt>
  428540:	ldr	x0, [x20, #32]
  428544:	add	x0, x0, x21, lsl #3
  428548:	str	xzr, [x0]
  42854c:	mov	sp, x29
  428550:	ldp	x19, x20, [sp, #16]
  428554:	ldp	x21, x22, [sp, #32]
  428558:	ldp	x23, x24, [sp, #48]
  42855c:	ldp	x25, x26, [sp, #64]
  428560:	ldp	x27, x28, [sp, #80]
  428564:	ldp	x29, x30, [sp], #112
  428568:	ret
  42856c:	add	x21, x21, #0x2
  428570:	cmp	x21, x23
  428574:	ldr	x27, [x20, #32]
  428578:	b.hi	4286c8 <ferror@plt+0x25e48>  // b.pmore
  42857c:	sub	x28, x22, #0x8
  428580:	mov	w0, w26
  428584:	mov	x1, x19
  428588:	bl	427c20 <ferror@plt+0x253a0>
  42858c:	str	x0, [x27, x28]
  428590:	b	4285a8 <ferror@plt+0x25d28>
  428594:	str	x2, [x19, #8]
  428598:	ldrb	w0, [x1]
  42859c:	mov	w1, w0
  4285a0:	ldrh	w1, [x25, w1, sxtw #1]
  4285a4:	tbz	w1, #0, 4285c8 <ferror@plt+0x25d48>
  4285a8:	ldp	x1, x0, [x19, #8]
  4285ac:	add	x2, x1, #0x1
  4285b0:	cmp	x1, x0
  4285b4:	b.cc	428594 <ferror@plt+0x25d14>  // b.lo, b.ul, b.last
  4285b8:	mov	x0, x19
  4285bc:	bl	402850 <__uflow@plt>
  4285c0:	cmn	w0, #0x1
  4285c4:	b.ne	4286b4 <ferror@plt+0x25e34>  // b.any
  4285c8:	mov	x1, x19
  4285cc:	bl	427c20 <ferror@plt+0x253a0>
  4285d0:	ldrb	w1, [x0]
  4285d4:	mov	x26, x0
  4285d8:	cmp	w1, #0x2f
  4285dc:	b.ne	428638 <ferror@plt+0x25db8>  // b.any
  4285e0:	ldr	x0, [x20, #32]
  4285e4:	str	x26, [x0, x22]
  4285e8:	ldp	x1, x3, [x19, #8]
  4285ec:	add	x2, x1, #0x1
  4285f0:	cmp	x3, x1
  4285f4:	b.ls	428618 <ferror@plt+0x25d98>  // b.plast
  4285f8:	str	x2, [x19, #8]
  4285fc:	ldrb	w0, [x1]
  428600:	cmp	w0, #0xa
  428604:	b.eq	428630 <ferror@plt+0x25db0>  // b.none
  428608:	mov	x1, x2
  42860c:	add	x2, x1, #0x1
  428610:	cmp	x3, x1
  428614:	b.hi	4285f8 <ferror@plt+0x25d78>  // b.pmore
  428618:	mov	x0, x19
  42861c:	bl	402850 <__uflow@plt>
  428620:	cmp	w0, #0xa
  428624:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  428628:	b.ne	4286bc <ferror@plt+0x25e3c>  // b.any
  42862c:	ldr	x3, [x19, #16]
  428630:	add	x22, x22, #0x10
  428634:	b	4284ec <ferror@plt+0x25c6c>
  428638:	ldr	x1, [x20, #32]
  42863c:	ldr	w28, [x20, #16]
  428640:	add	x1, x1, x22
  428644:	str	x1, [x29, #104]
  428648:	bl	402270 <strlen@plt>
  42864c:	mov	x24, x0
  428650:	add	x1, x28, #0x2
  428654:	add	x0, x1, x0
  428658:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42865c:	mov	x27, x0
  428660:	ldr	x1, [x20, #8]
  428664:	mov	x2, x28
  428668:	bl	402220 <memcpy@plt>
  42866c:	mov	x0, x27
  428670:	cbz	x28, 428694 <ferror@plt+0x25e14>
  428674:	add	x0, x27, x28
  428678:	ldurb	w1, [x0, #-1]
  42867c:	cmp	w1, #0x2f
  428680:	b.eq	428694 <ferror@plt+0x25e14>  // b.none
  428684:	add	x0, x28, #0x1
  428688:	mov	w1, #0x2f                  	// #47
  42868c:	add	x0, x27, x0
  428690:	strb	w1, [x27, x28]
  428694:	add	x2, x24, #0x1
  428698:	mov	x1, x26
  42869c:	bl	402220 <memcpy@plt>
  4286a0:	ldr	x0, [x29, #104]
  4286a4:	str	x27, [x0]
  4286a8:	mov	x0, x26
  4286ac:	bl	402640 <free@plt>
  4286b0:	b	4285e8 <ferror@plt+0x25d68>
  4286b4:	and	w1, w0, #0xff
  4286b8:	b	4285a0 <ferror@plt+0x25d20>
  4286bc:	ldp	x2, x3, [x19, #8]
  4286c0:	mov	x1, x2
  4286c4:	b	42860c <ferror@plt+0x25d8c>
  4286c8:	add	x23, x23, #0x8
  4286cc:	mov	x0, x27
  4286d0:	lsl	x1, x23, #3
  4286d4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4286d8:	mov	x27, x0
  4286dc:	str	x0, [x20, #32]
  4286e0:	b	42857c <ferror@plt+0x25cfc>
  4286e4:	and	w0, w0, #0xff
  4286e8:	b	428508 <ferror@plt+0x25c88>
  4286ec:	nop
  4286f0:	ldr	w0, [x0, #204]
  4286f4:	cmp	w0, #0x0
  4286f8:	cset	w0, ne  // ne = any
  4286fc:	ret
  428700:	stp	x29, x30, [sp, #-288]!
  428704:	mov	x29, sp
  428708:	stp	x19, x20, [sp, #16]
  42870c:	mov	x19, x0
  428710:	stp	x21, x22, [sp, #32]
  428714:	mov	x22, x2
  428718:	and	w21, w3, #0xff
  42871c:	stp	x23, x24, [sp, #48]
  428720:	stp	x25, x26, [sp, #64]
  428724:	mov	x25, x1
  428728:	and	w1, w5, #0xff
  42872c:	stp	w1, w6, [sp, #120]
  428730:	str	w4, [sp, #140]
  428734:	cbz	x2, 428d30 <ferror@plt+0x264b0>
  428738:	ldr	x20, [x19, #296]
  42873c:	mov	x0, x25
  428740:	bl	45c100 <ferror@plt+0x59880>
  428744:	mov	w2, w0
  428748:	mov	x1, x25
  42874c:	mov	x0, x20
  428750:	mov	w3, #0x1                   	// #1
  428754:	bl	45bbf8 <ferror@plt+0x59378>
  428758:	mov	x24, x0
  42875c:	ldr	x0, [x0]
  428760:	cbnz	x0, 428770 <ferror@plt+0x25ef0>
  428764:	b	42879c <ferror@plt+0x25f1c>
  428768:	ldr	x0, [x0]
  42876c:	cbz	x0, 42879c <ferror@plt+0x25f1c>
  428770:	ldr	x1, [x0, #8]
  428774:	cmp	x22, x1
  428778:	b.ne	428768 <ferror@plt+0x25ee8>  // b.any
  42877c:	ldr	x20, [x0, #24]
  428780:	mov	x0, x20
  428784:	ldp	x19, x20, [sp, #16]
  428788:	ldp	x21, x22, [sp, #32]
  42878c:	ldp	x23, x24, [sp, #48]
  428790:	ldp	x25, x26, [sp, #64]
  428794:	ldp	x29, x30, [sp], #288
  428798:	ret
  42879c:	mov	x1, #0xd8                  	// #216
  4287a0:	mov	x0, #0x1                   	// #1
  4287a4:	stp	x27, x28, [sp, #80]
  4287a8:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  4287ac:	mov	x20, x0
  4287b0:	ldr	x1, [x19]
  4287b4:	mov	w2, #0xffffffff            	// #-1
  4287b8:	str	x22, [x20, #64]
  4287bc:	mov	x0, x25
  4287c0:	cmp	x1, #0x0
  4287c4:	str	w2, [x20, #200]
  4287c8:	cset	w1, eq  // eq = none
  4287cc:	strb	w1, [x20, #212]
  4287d0:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  4287d4:	mov	x27, x0
  4287d8:	ldr	w1, [sp, #120]
  4287dc:	str	x27, [x20]
  4287e0:	mov	w0, w1
  4287e4:	cbz	w1, 428d00 <ferror@plt+0x26480>
  4287e8:	strb	w0, [x20, #214]
  4287ec:	cbnz	w21, 429098 <ferror@plt+0x26818>
  4287f0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4287f4:	add	x0, x0, #0xf8
  4287f8:	str	x0, [sp, #144]
  4287fc:	ldrb	w0, [x19, #1145]
  428800:	str	wzr, [sp, #136]
  428804:	stp	wzr, wzr, [sp, #152]
  428808:	ldr	x23, [x20, #64]
  42880c:	cbnz	w0, 42886c <ferror@plt+0x25fec>
  428810:	ldr	x2, [x23, #40]
  428814:	cbz	x2, 428b78 <ferror@plt+0x262f8>
  428818:	mov	x1, x23
  42881c:	mov	x0, x27
  428820:	blr	x2
  428824:	mov	x21, x0
  428828:	cbnz	x0, 4288b4 <ferror@plt+0x26034>
  42882c:	mov	w0, #0x2                   	// #2
  428830:	str	xzr, [x20, #8]
  428834:	str	w0, [x20, #204]
  428838:	ldr	x0, [x20, #64]
  42883c:	ldr	x23, [x0]
  428840:	str	x23, [x20, #64]
  428844:	cbz	x23, 428d60 <ferror@plt+0x264e0>
  428848:	ldr	x0, [x19, #208]
  42884c:	cmp	x23, x0
  428850:	b.eq	428b6c <ferror@plt+0x262ec>  // b.none
  428854:	ldr	x0, [x19, #200]
  428858:	cmp	x23, x0
  42885c:	b.eq	4288f4 <ferror@plt+0x26074>  // b.none
  428860:	ldrb	w0, [x19, #1145]
  428864:	ldr	x27, [x20]
  428868:	cbz	w0, 428810 <ferror@plt+0x25f90>
  42886c:	ldr	x0, [x23, #32]
  428870:	cbz	x0, 4289fc <ferror@plt+0x2617c>
  428874:	ldr	x0, [x0]
  428878:	mov	x21, #0x0                   	// #0
  42887c:	cbnz	x0, 428894 <ferror@plt+0x26014>
  428880:	b	428934 <ferror@plt+0x260b4>
  428884:	ldr	x0, [x23, #32]
  428888:	add	x21, x21, #0x2
  42888c:	ldr	x0, [x0, x21, lsl #3]
  428890:	cbz	x0, 428934 <ferror@plt+0x260b4>
  428894:	mov	x1, x27
  428898:	bl	45b028 <ferror@plt+0x587a8>
  42889c:	cbnz	w0, 428884 <ferror@plt+0x26004>
  4288a0:	ldr	x0, [x23, #32]
  4288a4:	add	x21, x21, #0x1
  4288a8:	ldr	x0, [x0, x21, lsl #3]
  4288ac:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  4288b0:	mov	x21, x0
  4288b4:	ldrb	w0, [x19, #1245]
  4288b8:	cbz	w0, 4288c8 <ferror@plt+0x26048>
  4288bc:	ldr	x0, [x20, #64]
  4288c0:	ldrb	w0, [x0, #20]
  4288c4:	cbnz	w0, 428be4 <ferror@plt+0x26364>
  4288c8:	mov	x0, x21
  4288cc:	bl	45c100 <ferror@plt+0x59880>
  4288d0:	mov	w23, w0
  4288d4:	mov	w2, w0
  4288d8:	ldr	x0, [x19, #320]
  4288dc:	mov	x1, x21
  4288e0:	bl	45ba38 <ferror@plt+0x591b8>
  4288e4:	cbz	x0, 428a0c <ferror@plt+0x2618c>
  4288e8:	mov	w0, #0x2                   	// #2
  4288ec:	str	w0, [x20, #204]
  4288f0:	b	428838 <ferror@plt+0x25fb8>
  4288f4:	mov	w0, #0x1                   	// #1
  4288f8:	str	w0, [sp, #136]
  4288fc:	ldr	x21, [x24]
  428900:	cbnz	x21, 428910 <ferror@plt+0x26090>
  428904:	b	428860 <ferror@plt+0x25fe0>
  428908:	ldr	x21, [x21]
  42890c:	cbz	x21, 428860 <ferror@plt+0x25fe0>
  428910:	ldr	x27, [x21, #8]
  428914:	cmp	x23, x27
  428918:	b.ne	428908 <ferror@plt+0x26088>  // b.any
  42891c:	ldr	x0, [x20]
  428920:	bl	402640 <free@plt>
  428924:	mov	x0, x20
  428928:	bl	402640 <free@plt>
  42892c:	ldr	x20, [x21, #24]
  428930:	b	428ad4 <ferror@plt+0x26254>
  428934:	ldrb	w0, [x27]
  428938:	cmp	w0, #0x2f
  42893c:	b.eq	428dec <ferror@plt+0x2656c>  // b.none
  428940:	mov	x0, x27
  428944:	mov	w1, #0x2f                  	// #47
  428948:	bl	402670 <strchr@plt>
  42894c:	cmp	x0, #0x0
  428950:	mov	x26, x0
  428954:	ccmp	x27, x0, #0x4, ne  // ne = any
  428958:	b.eq	428dec <ferror@plt+0x2656c>  // b.none
  42895c:	sub	x4, x0, x27
  428960:	ldr	w21, [x23, #16]
  428964:	add	x4, x4, #0x1
  428968:	str	x4, [sp, #112]
  42896c:	add	x21, x21, x4
  428970:	add	x0, x21, #0x2
  428974:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  428978:	mov	x28, x0
  42897c:	ldr	w2, [x23, #16]
  428980:	ldr	x1, [x23, #8]
  428984:	add	x6, x0, x2
  428988:	str	x6, [sp, #104]
  42898c:	str	x2, [sp, #128]
  428990:	bl	402220 <memcpy@plt>
  428994:	ldr	w0, [x23, #16]
  428998:	ldp	x6, x4, [sp, #104]
  42899c:	cbz	w0, 4289c8 <ferror@plt+0x26148>
  4289a0:	ldr	x1, [x23, #8]
  4289a4:	sub	w0, w0, #0x1
  4289a8:	ldrb	w0, [x1, w0, uxtw]
  4289ac:	cmp	w0, #0x2f
  4289b0:	b.eq	4289c8 <ferror@plt+0x26148>  // b.none
  4289b4:	ldr	x2, [sp, #128]
  4289b8:	add	x21, x21, #0x1
  4289bc:	add	x6, x6, #0x1
  4289c0:	mov	w0, #0x2f                  	// #47
  4289c4:	strb	w0, [x28, x2]
  4289c8:	mov	x2, x4
  4289cc:	mov	x1, x27
  4289d0:	mov	x0, x6
  4289d4:	bl	402220 <memcpy@plt>
  4289d8:	strb	wzr, [x28, x21]
  4289dc:	mov	x1, x28
  4289e0:	mov	x0, x19
  4289e4:	add	x27, x26, #0x1
  4289e8:	ldrb	w2, [x23, #20]
  4289ec:	bl	4282f0 <ferror@plt+0x25a70>
  4289f0:	mov	x23, x0
  4289f4:	ldr	x0, [x23, #32]
  4289f8:	cbnz	x0, 428874 <ferror@plt+0x25ff4>
  4289fc:	mov	x0, x23
  428a00:	bl	428428 <ferror@plt+0x25ba8>
  428a04:	ldr	x0, [x23, #32]
  428a08:	b	428874 <ferror@plt+0x25ff4>
  428a0c:	ldr	x0, [x20]
  428a10:	str	x21, [x20, #8]
  428a14:	ldrb	w0, [x0]
  428a18:	cbz	w0, 428c28 <ferror@plt+0x263a8>
  428a1c:	ldr	x0, [x19, #968]
  428a20:	cbz	x0, 428c28 <ferror@plt+0x263a8>
  428a24:	ldr	x0, [x19, #280]
  428a28:	cbz	x0, 428a3c <ferror@plt+0x261bc>
  428a2c:	ldrb	w1, [x0, #214]
  428a30:	cbnz	w1, 428d48 <ferror@plt+0x264c8>
  428a34:	ldrb	w0, [x0, #212]
  428a38:	cbz	w0, 428c28 <ferror@plt+0x263a8>
  428a3c:	mov	x0, x21
  428a40:	bl	402270 <strlen@plt>
  428a44:	mov	x2, x0
  428a48:	add	x0, x0, #0x5
  428a4c:	mov	x28, x0
  428a50:	str	x2, [sp, #104]
  428a54:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  428a58:	mov	x27, x0
  428a5c:	ldr	x2, [sp, #104]
  428a60:	mov	x1, x21
  428a64:	add	x26, x0, x2
  428a68:	bl	402220 <memcpy@plt>
  428a6c:	ldr	x3, [sp, #144]
  428a70:	mov	x1, x27
  428a74:	ldr	x2, [sp, #104]
  428a78:	ldr	w0, [x3]
  428a7c:	ldrb	w3, [x3, #4]
  428a80:	str	w0, [x27, x2]
  428a84:	add	x2, sp, #0xa0
  428a88:	strb	w3, [x26, #4]
  428a8c:	mov	w0, #0x0                   	// #0
  428a90:	bl	4027f0 <__xstat@plt>
  428a94:	cbnz	w0, 428c1c <ferror@plt+0x2639c>
  428a98:	ldr	w0, [sp, #176]
  428a9c:	and	w0, w0, #0xf000
  428aa0:	cmp	w0, #0x4, lsl #12
  428aa4:	b.eq	428dc8 <ferror@plt+0x26548>  // b.none
  428aa8:	mov	x1, x20
  428aac:	mov	x2, x27
  428ab0:	mov	x0, x19
  428ab4:	bl	427e18 <ferror@plt+0x25598>
  428ab8:	and	w1, w0, #0xff
  428abc:	cbz	w1, 428dd8 <ferror@plt+0x26558>
  428ac0:	str	x27, [x20, #16]
  428ac4:	ldr	x0, [x19, #280]
  428ac8:	mov	x27, #0x0                   	// #0
  428acc:	str	x0, [x20, #32]
  428ad0:	str	x20, [x19, #280]
  428ad4:	ldr	x0, [x19, #312]
  428ad8:	ldr	w1, [x0]
  428adc:	cmp	w1, #0x7f
  428ae0:	b.eq	428df8 <ferror@plt+0x26578>  // b.none
  428ae4:	ubfiz	x2, x1, #5, #32
  428ae8:	add	w3, w1, #0x1
  428aec:	add	x2, x2, #0x10
  428af0:	ldr	x4, [x19, #40]
  428af4:	ubfiz	x1, x1, #5, #32
  428af8:	add	x1, x0, x1
  428afc:	str	w3, [x0]
  428b00:	add	x0, x0, x2
  428b04:	ldr	w2, [x4, #56]
  428b08:	ldr	x3, [x24]
  428b0c:	stp	x3, x22, [x1, #16]
  428b10:	str	w2, [x1, #32]
  428b14:	str	x20, [x1, #40]
  428b18:	ldr	w1, [sp, #152]
  428b1c:	str	x0, [x24]
  428b20:	cbz	w1, 428b34 <ferror@plt+0x262b4>
  428b24:	ldr	x2, [x19, #208]
  428b28:	cmp	x2, x22
  428b2c:	ccmp	x2, x27, #0x4, ne  // ne = any
  428b30:	b.ne	428f88 <ferror@plt+0x26708>  // b.any
  428b34:	ldr	w1, [sp, #136]
  428b38:	cbz	w1, 428b4c <ferror@plt+0x262cc>
  428b3c:	ldr	x2, [x19, #200]
  428b40:	cmp	x2, x27
  428b44:	ccmp	x2, x22, #0x4, ne  // ne = any
  428b48:	b.ne	428e20 <ferror@plt+0x265a0>  // b.any
  428b4c:	mov	x0, x20
  428b50:	ldp	x19, x20, [sp, #16]
  428b54:	ldp	x21, x22, [sp, #32]
  428b58:	ldp	x23, x24, [sp, #48]
  428b5c:	ldp	x25, x26, [sp, #64]
  428b60:	ldp	x27, x28, [sp, #80]
  428b64:	ldp	x29, x30, [sp], #288
  428b68:	ret
  428b6c:	mov	w0, #0x1                   	// #1
  428b70:	str	w0, [sp, #152]
  428b74:	b	4288fc <ferror@plt+0x2607c>
  428b78:	mov	x0, x27
  428b7c:	bl	402270 <strlen@plt>
  428b80:	ldr	w26, [x23, #16]
  428b84:	mov	x3, x0
  428b88:	str	x3, [sp, #104]
  428b8c:	add	x0, x26, #0x2
  428b90:	add	x0, x0, x3
  428b94:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  428b98:	ldr	x1, [x23, #8]
  428b9c:	mov	x21, x0
  428ba0:	mov	x2, x26
  428ba4:	bl	402220 <memcpy@plt>
  428ba8:	mov	x0, x21
  428bac:	ldr	x3, [sp, #104]
  428bb0:	cbz	x26, 428bd4 <ferror@plt+0x26354>
  428bb4:	add	x0, x21, x26
  428bb8:	ldurb	w1, [x0, #-1]
  428bbc:	cmp	w1, #0x2f
  428bc0:	b.eq	428bd4 <ferror@plt+0x26354>  // b.none
  428bc4:	add	x0, x26, #0x1
  428bc8:	mov	w1, #0x2f                  	// #47
  428bcc:	add	x0, x21, x0
  428bd0:	strb	w1, [x21, x26]
  428bd4:	add	x2, x3, #0x1
  428bd8:	mov	x1, x27
  428bdc:	bl	402220 <memcpy@plt>
  428be0:	b	4288b4 <ferror@plt+0x26034>
  428be4:	mov	x0, x21
  428be8:	bl	45c4c8 <ferror@plt+0x59c48>
  428bec:	mov	x23, x0
  428bf0:	cbz	x0, 428d54 <ferror@plt+0x264d4>
  428bf4:	bl	402270 <strlen@plt>
  428bf8:	mov	x27, x0
  428bfc:	mov	x0, x21
  428c00:	bl	402270 <strlen@plt>
  428c04:	cmp	x27, x0
  428c08:	b.cs	428d54 <ferror@plt+0x264d4>  // b.hs, b.nlast
  428c0c:	mov	x0, x21
  428c10:	mov	x21, x23
  428c14:	bl	402640 <free@plt>
  428c18:	b	4288c8 <ferror@plt+0x26048>
  428c1c:	mov	x0, x27
  428c20:	bl	402640 <free@plt>
  428c24:	nop
  428c28:	mov	x0, x20
  428c2c:	bl	427d40 <ferror@plt+0x254c0>
  428c30:	tst	w0, #0xff
  428c34:	b.ne	428ac4 <ferror@plt+0x26244>  // b.any
  428c38:	ldr	w0, [x20, #204]
  428c3c:	cmp	w0, #0x2
  428c40:	b.ne	428d18 <ferror@plt+0x26498>  // b.any
  428c44:	add	x27, x19, #0x148
  428c48:	mov	x0, x21
  428c4c:	bl	402270 <strlen@plt>
  428c50:	add	x1, x0, #0x1
  428c54:	mov	x2, x0
  428c58:	ldp	x0, x3, [x27, #24]
  428c5c:	sub	x3, x3, x0
  428c60:	cmp	x3, x1
  428c64:	b.cc	428fd4 <ferror@plt+0x26754>  // b.lo, b.ul, b.last
  428c68:	mov	x1, x21
  428c6c:	str	x2, [sp, #104]
  428c70:	bl	402220 <memcpy@plt>
  428c74:	ldr	x1, [x27, #24]
  428c78:	ldr	x2, [sp, #104]
  428c7c:	add	x0, x1, x2
  428c80:	add	x0, x0, #0x1
  428c84:	str	x0, [x27, #24]
  428c88:	strb	wzr, [x1, x2]
  428c8c:	ldp	x1, x3, [x27, #16]
  428c90:	cmp	x1, x3
  428c94:	b.eq	428fec <ferror@plt+0x2676c>  // b.none
  428c98:	ldr	x0, [x27, #48]
  428c9c:	ldr	x2, [x27, #8]
  428ca0:	add	x3, x3, x0
  428ca4:	ldr	x4, [x27, #32]
  428ca8:	bic	x0, x3, x0
  428cac:	str	x0, [x27, #24]
  428cb0:	sub	x3, x0, x2
  428cb4:	sub	x2, x4, x2
  428cb8:	cmp	x3, x2
  428cbc:	b.ls	428cc8 <ferror@plt+0x26448>  // b.plast
  428cc0:	mov	x0, x4
  428cc4:	str	x4, [x27, #24]
  428cc8:	str	x0, [x27, #16]
  428ccc:	mov	x0, x21
  428cd0:	str	x1, [sp, #104]
  428cd4:	bl	402640 <free@plt>
  428cd8:	ldr	x1, [sp, #104]
  428cdc:	mov	w2, w23
  428ce0:	ldr	x0, [x19, #320]
  428ce4:	mov	w3, #0x1                   	// #1
  428ce8:	bl	45bbf8 <ferror@plt+0x59378>
  428cec:	ldr	x1, [sp, #104]
  428cf0:	str	x1, [x0]
  428cf4:	ldr	x0, [x20]
  428cf8:	str	x0, [x20, #8]
  428cfc:	b	428838 <ferror@plt+0x25fb8>
  428d00:	ldr	x1, [x19]
  428d04:	ldr	w0, [sp, #120]
  428d08:	cbz	x1, 4287e8 <ferror@plt+0x25f68>
  428d0c:	ldr	x0, [x1, #80]
  428d10:	ldrb	w0, [x0, #214]
  428d14:	b	4287e8 <ferror@plt+0x25f68>
  428d18:	ldr	w3, [sp, #124]
  428d1c:	mov	x1, x20
  428d20:	mov	x0, x19
  428d24:	mov	w2, #0x0                   	// #0
  428d28:	bl	427f78 <ferror@plt+0x256f8>
  428d2c:	b	428ac4 <ferror@plt+0x26244>
  428d30:	mov	w2, w6
  428d34:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  428d38:	mov	w1, #0x4                   	// #4
  428d3c:	add	x3, x3, #0x70
  428d40:	bl	423488 <ferror@plt+0x20c08>
  428d44:	b	428738 <ferror@plt+0x25eb8>
  428d48:	ldr	x0, [x0, #32]
  428d4c:	cbnz	x0, 428a2c <ferror@plt+0x261ac>
  428d50:	b	428a3c <ferror@plt+0x261bc>
  428d54:	mov	x0, x23
  428d58:	bl	402640 <free@plt>
  428d5c:	b	4288c8 <ferror@plt+0x26048>
  428d60:	ldr	x3, [x19, #984]
  428d64:	cbz	x3, 428da0 <ferror@plt+0x26520>
  428d68:	mov	x1, x25
  428d6c:	add	x2, x20, #0x40
  428d70:	mov	x0, x19
  428d74:	blr	x3
  428d78:	str	x0, [x20, #8]
  428d7c:	cbz	x0, 428d98 <ferror@plt+0x26518>
  428d80:	mov	x0, x20
  428d84:	bl	427d40 <ferror@plt+0x254c0>
  428d88:	tst	w0, #0xff
  428d8c:	b.ne	428ffc <ferror@plt+0x2677c>  // b.any
  428d90:	ldr	x0, [x20, #8]
  428d94:	bl	402640 <free@plt>
  428d98:	ldr	x0, [x20]
  428d9c:	str	x0, [x20, #8]
  428da0:	ldr	w0, [sp, #156]
  428da4:	cbnz	w0, 428ef8 <ferror@plt+0x26678>
  428da8:	ldr	w0, [sp, #120]
  428dac:	cbnz	w0, 428f34 <ferror@plt+0x266b4>
  428db0:	ldr	w3, [sp, #124]
  428db4:	mov	x1, x20
  428db8:	ldr	w2, [sp, #140]
  428dbc:	mov	x0, x19
  428dc0:	bl	427f78 <ferror@plt+0x256f8>
  428dc4:	b	428ac4 <ferror@plt+0x26244>
  428dc8:	mov	x0, x27
  428dcc:	bl	402320 <opendir@plt>
  428dd0:	str	x0, [sp, #104]
  428dd4:	cbnz	x0, 428e6c <ferror@plt+0x265ec>
  428dd8:	mov	w1, #0x1                   	// #1
  428ddc:	mov	x0, x27
  428de0:	str	w1, [sp, #156]
  428de4:	bl	402640 <free@plt>
  428de8:	b	428c28 <ferror@plt+0x263a8>
  428dec:	ldr	x27, [x20]
  428df0:	ldr	x23, [x20, #64]
  428df4:	b	428810 <ferror@plt+0x25f90>
  428df8:	mov	x0, #0xff0                 	// #4080
  428dfc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  428e00:	ldr	x4, [x19, #312]
  428e04:	mov	x2, #0x10                  	// #16
  428e08:	mov	w3, #0x1                   	// #1
  428e0c:	mov	w1, #0x0                   	// #0
  428e10:	str	wzr, [x0]
  428e14:	str	x4, [x0, #8]
  428e18:	str	x0, [x19, #312]
  428e1c:	b	428af0 <ferror@plt+0x26270>
  428e20:	ldr	x3, [x19, #312]
  428e24:	ldr	w1, [x3]
  428e28:	cmp	w1, #0x7f
  428e2c:	b.eq	429064 <ferror@plt+0x267e4>  // b.none
  428e30:	ubfiz	x4, x1, #5, #32
  428e34:	add	w6, w1, #0x1
  428e38:	add	x4, x4, #0x10
  428e3c:	ldr	x5, [x19, #40]
  428e40:	ubfiz	x1, x1, #5, #32
  428e44:	add	x1, x3, x1
  428e48:	ldp	x27, x28, [sp, #80]
  428e4c:	str	w6, [x3]
  428e50:	add	x3, x3, x4
  428e54:	ldr	w4, [x5, #56]
  428e58:	stp	x0, x2, [x1, #16]
  428e5c:	str	w4, [x1, #32]
  428e60:	str	x20, [x1, #40]
  428e64:	str	x3, [x24]
  428e68:	b	428780 <ferror@plt+0x25f00>
  428e6c:	mov	w1, #0x2f                  	// #47
  428e70:	strb	w1, [x26, #4]
  428e74:	str	x28, [sp, #112]
  428e78:	ldr	x0, [sp, #104]
  428e7c:	bl	402490 <readdir@plt>
  428e80:	mov	x1, x0
  428e84:	cbz	x0, 429028 <ferror@plt+0x267a8>
  428e88:	ldurh	w1, [x1, #19]
  428e8c:	add	x26, x0, #0x13
  428e90:	mov	x0, x26
  428e94:	cmp	w1, #0x2e
  428e98:	b.eq	428e78 <ferror@plt+0x265f8>  // b.none
  428e9c:	mov	w2, #0x2e2e                	// #11822
  428ea0:	cmp	w1, w2
  428ea4:	b.eq	428f58 <ferror@plt+0x266d8>  // b.none
  428ea8:	bl	402270 <strlen@plt>
  428eac:	add	x2, x0, #0x1
  428eb0:	ldr	x1, [sp, #112]
  428eb4:	add	x0, x28, x2
  428eb8:	cmp	x0, x1
  428ebc:	b.hi	428f64 <ferror@plt+0x266e4>  // b.pmore
  428ec0:	mov	x1, x26
  428ec4:	add	x0, x27, x28
  428ec8:	bl	402220 <memcpy@plt>
  428ecc:	mov	x1, x20
  428ed0:	mov	x2, x27
  428ed4:	mov	x0, x19
  428ed8:	bl	427e18 <ferror@plt+0x25598>
  428edc:	ands	w1, w0, #0xff
  428ee0:	b.eq	428e78 <ferror@plt+0x265f8>  // b.none
  428ee4:	ldr	x0, [sp, #104]
  428ee8:	str	w1, [sp, #112]
  428eec:	bl	4024d0 <closedir@plt>
  428ef0:	ldr	w1, [sp, #112]
  428ef4:	b	428abc <ferror@plt+0x2623c>
  428ef8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  428efc:	add	x2, x2, #0x98
  428f00:	mov	w1, #0x3                   	// #3
  428f04:	mov	x0, x19
  428f08:	bl	422e10 <ferror@plt+0x20590>
  428f0c:	mov	x0, x19
  428f10:	bl	4217c0 <ferror@plt+0x1ef40>
  428f14:	ldrb	w0, [x0, #84]
  428f18:	cbnz	w0, 428da8 <ferror@plt+0x26528>
  428f1c:	mov	x0, x19
  428f20:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  428f24:	mov	w1, #0x3                   	// #3
  428f28:	add	x2, x2, #0xd0
  428f2c:	bl	422e10 <ferror@plt+0x20590>
  428f30:	b	428da8 <ferror@plt+0x26528>
  428f34:	ldr	x0, [x20]
  428f38:	bl	402640 <free@plt>
  428f3c:	mov	x0, x20
  428f40:	bl	402640 <free@plt>
  428f44:	ldr	x0, [x24]
  428f48:	cbz	x0, 4290a4 <ferror@plt+0x26824>
  428f4c:	mov	x20, #0x0                   	// #0
  428f50:	ldp	x27, x28, [sp, #80]
  428f54:	b	428780 <ferror@plt+0x25f00>
  428f58:	ldrb	w1, [x26, #2]
  428f5c:	cbz	w1, 428e78 <ferror@plt+0x265f8>
  428f60:	b	428ea8 <ferror@plt+0x26628>
  428f64:	add	x1, x1, #0x40
  428f68:	mov	x0, x27
  428f6c:	add	x1, x2, x1
  428f70:	str	x1, [sp, #112]
  428f74:	str	x2, [sp, #128]
  428f78:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  428f7c:	mov	x27, x0
  428f80:	ldr	x2, [sp, #128]
  428f84:	b	428ec0 <ferror@plt+0x26640>
  428f88:	ldr	x3, [x19, #312]
  428f8c:	ldr	w1, [x3]
  428f90:	cmp	w1, #0x7f
  428f94:	b.eq	429030 <ferror@plt+0x267b0>  // b.none
  428f98:	ubfiz	x4, x1, #5, #32
  428f9c:	mov	x5, x0
  428fa0:	add	w6, w1, #0x1
  428fa4:	add	x0, x4, #0x10
  428fa8:	ldr	x4, [x19, #40]
  428fac:	ubfiz	x1, x1, #5, #32
  428fb0:	add	x1, x3, x1
  428fb4:	add	x0, x3, x0
  428fb8:	str	w6, [x3]
  428fbc:	ldr	w3, [x4, #56]
  428fc0:	stp	x5, x2, [x1, #16]
  428fc4:	str	w3, [x1, #32]
  428fc8:	str	x20, [x1, #40]
  428fcc:	str	x0, [x24]
  428fd0:	b	428b34 <ferror@plt+0x262b4>
  428fd4:	mov	x0, x27
  428fd8:	str	x2, [sp, #104]
  428fdc:	bl	45c6e0 <_obstack_newchunk@@Base>
  428fe0:	ldr	x0, [x27, #24]
  428fe4:	ldr	x2, [sp, #104]
  428fe8:	b	428c68 <ferror@plt+0x263e8>
  428fec:	ldrb	w0, [x27, #80]
  428ff0:	orr	w0, w0, #0x2
  428ff4:	strb	w0, [x27, #80]
  428ff8:	b	428c98 <ferror@plt+0x26418>
  428ffc:	ldr	x0, [x19, #280]
  429000:	str	x0, [x20, #32]
  429004:	str	x20, [x19, #280]
  429008:	ldr	x0, [x24]
  42900c:	cbnz	x0, 428b4c <ferror@plt+0x262cc>
  429010:	str	x20, [x24]
  429014:	mov	x1, x24
  429018:	ldr	x0, [x19, #296]
  42901c:	bl	45bf88 <ferror@plt+0x59708>
  429020:	ldp	x27, x28, [sp, #80]
  429024:	b	428780 <ferror@plt+0x25f00>
  429028:	mov	w1, #0x0                   	// #0
  42902c:	b	428ee4 <ferror@plt+0x26664>
  429030:	mov	x0, #0xff0                 	// #4080
  429034:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  429038:	mov	x3, x0
  42903c:	mov	w6, #0x1                   	// #1
  429040:	ldr	x0, [x19, #312]
  429044:	str	x3, [x19, #312]
  429048:	str	x0, [x3, #8]
  42904c:	mov	w1, #0x0                   	// #0
  429050:	mov	x0, #0x10                  	// #16
  429054:	str	wzr, [x3]
  429058:	ldr	x5, [x24]
  42905c:	ldr	x2, [x19, #208]
  429060:	b	428fa8 <ferror@plt+0x26728>
  429064:	mov	x0, #0xff0                 	// #4080
  429068:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42906c:	mov	x3, x0
  429070:	mov	w6, #0x1                   	// #1
  429074:	ldr	x0, [x19, #312]
  429078:	str	x3, [x19, #312]
  42907c:	str	x0, [x3, #8]
  429080:	mov	w1, #0x0                   	// #0
  429084:	mov	x4, #0x10                  	// #16
  429088:	str	wzr, [x3]
  42908c:	ldr	x0, [x24]
  429090:	ldr	x2, [x19, #200]
  429094:	b	428e3c <ferror@plt+0x265bc>
  429098:	str	wzr, [sp, #136]
  42909c:	str	wzr, [sp, #152]
  4290a0:	b	428ac4 <ferror@plt+0x26244>
  4290a4:	str	x20, [x24]
  4290a8:	mov	x1, x24
  4290ac:	mov	x20, #0x0                   	// #0
  4290b0:	ldr	x0, [x19, #296]
  4290b4:	bl	45bf88 <ferror@plt+0x59708>
  4290b8:	ldp	x27, x28, [sp, #80]
  4290bc:	b	428780 <ferror@plt+0x25f00>
  4290c0:	stp	x29, x30, [sp, #-160]!
  4290c4:	mov	x29, sp
  4290c8:	stp	x19, x20, [sp, #16]
  4290cc:	ldrb	w20, [x1, #210]
  4290d0:	cbnz	w20, 429170 <ferror@plt+0x268f0>
  4290d4:	stp	x21, x22, [sp, #32]
  4290d8:	mov	x19, x1
  4290dc:	mov	w21, w3
  4290e0:	stp	x27, x28, [sp, #80]
  4290e4:	mov	x28, x0
  4290e8:	and	w27, w2, #0xff
  4290ec:	cbz	w27, 429104 <ferror@plt+0x26884>
  4290f0:	ldrh	w1, [x1, #208]
  4290f4:	mov	w0, #0x1                   	// #1
  4290f8:	strb	w0, [x28, #417]
  4290fc:	strb	w0, [x19, #210]
  429100:	cbnz	w1, 429184 <ferror@plt+0x26904>
  429104:	ldr	x0, [x19, #56]
  429108:	cbz	x0, 429114 <ferror@plt+0x26894>
  42910c:	ldrb	w0, [x0, #18]
  429110:	tbnz	w0, #1, 429184 <ferror@plt+0x26904>
  429114:	ldr	x1, [x19, #16]
  429118:	cbz	x1, 429190 <ferror@plt+0x26910>
  42911c:	ldr	w2, [x19, #200]
  429120:	mov	x0, x28
  429124:	ldr	x3, [x19, #8]
  429128:	ldr	x4, [x28, #976]
  42912c:	blr	x4
  429130:	ldr	x0, [x19, #16]
  429134:	mov	w1, #0xffffffff            	// #-1
  429138:	str	w1, [x19, #200]
  42913c:	bl	402640 <free@plt>
  429140:	ldp	x21, x22, [sp, #32]
  429144:	mov	w0, w20
  429148:	ldp	x27, x28, [sp, #80]
  42914c:	str	xzr, [x19, #16]
  429150:	ldp	x19, x20, [sp, #16]
  429154:	ldp	x29, x30, [sp], #160
  429158:	ret
  42915c:	ldp	x21, x22, [sp, #32]
  429160:	ldp	x23, x24, [sp, #48]
  429164:	ldp	x25, x26, [sp, #64]
  429168:	ldp	x27, x28, [sp, #80]
  42916c:	nop
  429170:	mov	w20, #0x0                   	// #0
  429174:	mov	w0, w20
  429178:	ldp	x19, x20, [sp, #16]
  42917c:	ldp	x29, x30, [sp], #160
  429180:	ret
  429184:	ldp	x21, x22, [sp, #32]
  429188:	ldp	x27, x28, [sp, #80]
  42918c:	b	429170 <ferror@plt+0x268f0>
  429190:	mov	w2, w21
  429194:	mov	x1, x19
  429198:	mov	x0, x28
  42919c:	bl	4280a8 <ferror@plt+0x25828>
  4291a0:	ands	w20, w0, #0xff
  4291a4:	b.eq	429184 <ferror@plt+0x26904>  // b.none
  4291a8:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4291ac:	stp	x25, x26, [sp, #64]
  4291b0:	ldr	x26, [x0, #1928]
  4291b4:	stp	x23, x24, [sp, #48]
  4291b8:	cbz	x26, 429254 <ferror@plt+0x269d4>
  4291bc:	cbnz	w27, 4291c8 <ferror@plt+0x26948>
  4291c0:	ldrb	w0, [x26, #8]
  4291c4:	cbz	w0, 429254 <ferror@plt+0x269d4>
  4291c8:	ldr	x0, [x19, #120]
  4291cc:	str	x0, [sp, #120]
  4291d0:	mov	x0, x26
  4291d4:	strb	wzr, [sp, #144]
  4291d8:	strb	w27, [sp, #145]
  4291dc:	ldr	x25, [x0], #16
  4291e0:	str	x0, [sp, #104]
  4291e4:	str	x19, [sp, #152]
  4291e8:	cbz	x25, 429254 <ferror@plt+0x269d4>
  4291ec:	add	x26, sp, #0x80
  4291f0:	mov	x24, #0x0                   	// #0
  4291f4:	nop
  4291f8:	add	x22, x25, x24
  4291fc:	add	x0, sp, #0x78
  429200:	ldr	x1, [sp, #104]
  429204:	lsr	x22, x22, #1
  429208:	mov	x2, #0x8                   	// #8
  42920c:	add	x23, x1, x22, lsl #5
  429210:	mov	x1, x23
  429214:	bl	402590 <memcmp@plt>
  429218:	cbnz	w0, 429448 <ferror@plt+0x26bc8>
  42921c:	ldrb	w0, [sp, #144]
  429220:	cbz	w0, 429454 <ferror@plt+0x26bd4>
  429224:	add	x1, x23, #0x8
  429228:	mov	x0, x26
  42922c:	mov	x2, #0x10                  	// #16
  429230:	bl	402590 <memcmp@plt>
  429234:	cbnz	w0, 429448 <ferror@plt+0x26bc8>
  429238:	ldrb	w0, [sp, #145]
  42923c:	cbnz	w0, 429324 <ferror@plt+0x26aa4>
  429240:	ldrb	w0, [x23, #24]
  429244:	cbnz	w0, 429324 <ferror@plt+0x26aa4>
  429248:	add	x24, x22, #0x1
  42924c:	cmp	x25, x24
  429250:	b.hi	4291f8 <ferror@plt+0x26978>  // b.pmore
  429254:	ldrb	w0, [x28, #417]
  429258:	cbz	w0, 42934c <ferror@plt+0x26acc>
  42925c:	ldr	x22, [x28, #280]
  429260:	cbz	x22, 42934c <ferror@plt+0x26acc>
  429264:	mov	w23, #0xffffffff            	// #-1
  429268:	b	429274 <ferror@plt+0x269f4>
  42926c:	ldr	x22, [x22, #32]
  429270:	cbz	x22, 42934c <ferror@plt+0x26acc>
  429274:	cmp	x19, x22
  429278:	b.eq	42926c <ferror@plt+0x269ec>  // b.none
  42927c:	cbnz	w27, 429288 <ferror@plt+0x26a08>
  429280:	ldrb	w0, [x22, #210]
  429284:	cbz	w0, 42926c <ferror@plt+0x269ec>
  429288:	ldr	w0, [x22, #204]
  42928c:	cbnz	w0, 42926c <ferror@plt+0x269ec>
  429290:	ldr	x0, [x19, #160]
  429294:	ldr	x1, [x22, #160]
  429298:	cmp	x1, x0
  42929c:	b.ne	42926c <ferror@plt+0x269ec>  // b.any
  4292a0:	ldr	x0, [x19, #120]
  4292a4:	ldr	x1, [x22, #120]
  4292a8:	cmp	x1, x0
  4292ac:	b.ne	42926c <ferror@plt+0x269ec>  // b.any
  4292b0:	ldr	x0, [x22, #40]
  4292b4:	mov	x24, x22
  4292b8:	cbz	x0, 4292c4 <ferror@plt+0x26a44>
  4292bc:	ldrb	w0, [x22, #213]
  4292c0:	cbz	w0, 429474 <ferror@plt+0x26bf4>
  4292c4:	mov	w2, w21
  4292c8:	mov	x1, x24
  4292cc:	mov	x0, x28
  4292d0:	bl	4280a8 <ferror@plt+0x25828>
  4292d4:	tst	w0, #0xff
  4292d8:	b.eq	4292ec <ferror@plt+0x26a6c>  // b.none
  4292dc:	ldr	x0, [x19, #120]
  4292e0:	ldr	x2, [x24, #120]
  4292e4:	cmp	x2, x0
  4292e8:	b.eq	4294b8 <ferror@plt+0x26c38>  // b.none
  4292ec:	ldr	x0, [x22, #40]
  4292f0:	cbz	x0, 42926c <ferror@plt+0x269ec>
  4292f4:	ldrb	w0, [x22, #213]
  4292f8:	cbnz	w0, 42926c <ferror@plt+0x269ec>
  4292fc:	ldr	x0, [x24, #48]
  429300:	str	xzr, [x24, #8]
  429304:	bl	402640 <free@plt>
  429308:	ldr	x0, [x24]
  42930c:	bl	402640 <free@plt>
  429310:	ldr	x0, [x24, #8]
  429314:	bl	402640 <free@plt>
  429318:	mov	x0, x24
  42931c:	bl	402640 <free@plt>
  429320:	b	42926c <ferror@plt+0x269ec>
  429324:	cbnz	w27, 42915c <ferror@plt+0x268dc>
  429328:	mov	w0, #0x1                   	// #1
  42932c:	strb	w0, [x28, #417]
  429330:	mov	w20, #0x0                   	// #0
  429334:	strb	w0, [x19, #210]
  429338:	ldp	x21, x22, [sp, #32]
  42933c:	ldp	x23, x24, [sp, #48]
  429340:	ldp	x25, x26, [sp, #64]
  429344:	ldp	x27, x28, [sp, #80]
  429348:	b	429174 <ferror@plt+0x268f4>
  42934c:	ldr	x0, [x28]
  429350:	cbz	x0, 429438 <ferror@plt+0x26bb8>
  429354:	ldr	x1, [x19, #64]
  429358:	cbz	x1, 429438 <ferror@plt+0x26bb8>
  42935c:	ldrb	w21, [x1, #20]
  429360:	ldrb	w0, [x0, #106]
  429364:	cmp	w21, w0, uxtb
  429368:	csel	w21, w21, w0, cs  // cs = hs, nlast
  42936c:	ands	w21, w21, #0xff
  429370:	cset	w2, ne  // ne = any
  429374:	mov	w22, w21
  429378:	ldr	w1, [x28, #1200]
  42937c:	ldrh	w0, [x19, #208]
  429380:	cmp	w1, w2
  429384:	b.le	4293b0 <ferror@plt+0x26b30>
  429388:	cbnz	w0, 4293b0 <ferror@plt+0x26b30>
  42938c:	ldrb	w1, [x19, #212]
  429390:	cbz	w1, 42939c <ferror@plt+0x26b1c>
  429394:	ldrb	w1, [x28, #1206]
  429398:	cbnz	w1, 4293b0 <ferror@plt+0x26b30>
  42939c:	ldr	x1, [x19, #8]
  4293a0:	ldr	x0, [x28, #712]
  4293a4:	bl	43a978 <ferror@plt+0x380f8>
  4293a8:	ldrh	w0, [x19, #208]
  4293ac:	nop
  4293b0:	add	w0, w0, #0x1
  4293b4:	strh	w0, [x19, #208]
  4293b8:	strb	wzr, [x19, #213]
  4293bc:	mov	w3, #0x0                   	// #0
  4293c0:	ldr	x1, [x19, #40]
  4293c4:	ldrb	w0, [x28, #1155]
  4293c8:	ldr	x2, [x19, #120]
  4293cc:	cbz	w0, 4293d8 <ferror@plt+0x26b58>
  4293d0:	ldrb	w3, [x28, #1244]
  4293d4:	eor	w3, w3, #0x1
  4293d8:	mov	x0, x28
  4293dc:	bl	421828 <ferror@plt+0x1efa8>
  4293e0:	mov	x6, x0
  4293e4:	mov	w7, #0x1                   	// #1
  4293e8:	mov	w4, w22
  4293ec:	mov	x0, x28
  4293f0:	mov	w3, #0x1                   	// #1
  4293f4:	mov	w1, #0x0                   	// #0
  4293f8:	strb	w21, [x6, #106]
  4293fc:	ldr	x2, [x19, #8]
  429400:	ldr	x8, [x19, #48]
  429404:	str	x8, [x6, #40]
  429408:	str	x19, [x6, #80]
  42940c:	str	xzr, [x28, #424]
  429410:	strb	w7, [x28, #440]
  429414:	bl	4212b8 <ferror@plt+0x1ea38>
  429418:	mov	w0, w20
  42941c:	ldp	x19, x20, [sp, #16]
  429420:	ldp	x21, x22, [sp, #32]
  429424:	ldp	x23, x24, [sp, #48]
  429428:	ldp	x25, x26, [sp, #64]
  42942c:	ldp	x27, x28, [sp, #80]
  429430:	ldp	x29, x30, [sp], #160
  429434:	ret
  429438:	mov	w22, #0x0                   	// #0
  42943c:	mov	w21, #0x0                   	// #0
  429440:	mov	w2, #0x0                   	// #0
  429444:	b	429378 <ferror@plt+0x26af8>
  429448:	tbz	w0, #31, 429248 <ferror@plt+0x269c8>
  42944c:	mov	x25, x22
  429450:	b	42924c <ferror@plt+0x269cc>
  429454:	ldr	x1, [sp, #152]
  429458:	mov	x2, x26
  42945c:	ldr	x0, [x1, #40]
  429460:	ldr	x1, [x1, #120]
  429464:	bl	45ae80 <ferror@plt+0x58600>
  429468:	mov	w0, #0x1                   	// #1
  42946c:	strb	w0, [sp, #144]
  429470:	b	429224 <ferror@plt+0x269a4>
  429474:	mov	x1, #0xd8                  	// #216
  429478:	mov	x0, #0x1                   	// #1
  42947c:	ldr	x26, [x22]
  429480:	ldr	x25, [x22, #64]
  429484:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  429488:	ldr	x1, [x28]
  42948c:	mov	x24, x0
  429490:	mov	x0, x26
  429494:	cmp	x1, #0x0
  429498:	cset	w1, eq  // eq = none
  42949c:	str	x25, [x24, #64]
  4294a0:	str	w23, [x24, #200]
  4294a4:	strb	w1, [x24, #212]
  4294a8:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  4294ac:	ldr	x1, [x22, #8]
  4294b0:	stp	x0, x1, [x24]
  4294b4:	b	4292c4 <ferror@plt+0x26a44>
  4294b8:	ldr	x1, [x19, #40]
  4294bc:	ldr	x0, [x24, #40]
  4294c0:	bl	402590 <memcmp@plt>
  4294c4:	cbnz	w0, 4292ec <ferror@plt+0x26a6c>
  4294c8:	ldr	x0, [x22, #40]
  4294cc:	cbz	x0, 42915c <ferror@plt+0x268dc>
  4294d0:	ldrb	w20, [x22, #213]
  4294d4:	cbnz	w20, 42915c <ferror@plt+0x268dc>
  4294d8:	ldr	x0, [x24, #48]
  4294dc:	str	xzr, [x24, #8]
  4294e0:	bl	402640 <free@plt>
  4294e4:	ldr	x0, [x24]
  4294e8:	bl	402640 <free@plt>
  4294ec:	ldr	x0, [x24, #8]
  4294f0:	bl	402640 <free@plt>
  4294f4:	mov	x0, x24
  4294f8:	bl	402640 <free@plt>
  4294fc:	ldp	x21, x22, [sp, #32]
  429500:	ldp	x23, x24, [sp, #48]
  429504:	ldp	x25, x26, [sp, #64]
  429508:	ldp	x27, x28, [sp, #80]
  42950c:	b	429174 <ferror@plt+0x268f4>
  429510:	mov	w2, #0x1                   	// #1
  429514:	strb	w2, [x0, #417]
  429518:	strb	w2, [x1, #210]
  42951c:	ret
  429520:	stp	x29, x30, [sp, #-96]!
  429524:	cmp	w3, #0x3
  429528:	mov	x29, sp
  42952c:	stp	x19, x20, [sp, #16]
  429530:	mov	w20, w3
  429534:	mov	x19, x0
  429538:	stp	x21, x22, [sp, #32]
  42953c:	mov	x21, x1
  429540:	mov	w22, w2
  429544:	stp	x23, x24, [sp, #48]
  429548:	mov	w23, w4
  42954c:	b.eq	42963c <ferror@plt+0x26dbc>  // b.none
  429550:	ldrb	w0, [x21]
  429554:	add	x2, x19, #0xd8
  429558:	cmp	w0, #0x2f
  42955c:	b.eq	429580 <ferror@plt+0x26d00>  // b.none
  429560:	ldr	x1, [x19]
  429564:	cbz	x1, 429730 <ferror@plt+0x26eb0>
  429568:	ldr	x24, [x1, #80]
  42956c:	cmp	w20, #0x1
  429570:	b.eq	429658 <ferror@plt+0x26dd8>  // b.none
  429574:	cbz	w22, 4295e4 <ferror@plt+0x26d64>
  429578:	ldr	x2, [x19, #208]
  42957c:	cbz	x2, 429740 <ferror@plt+0x26ec0>
  429580:	cmp	w20, #0x4
  429584:	mov	w4, w22
  429588:	cset	w22, eq  // eq = none
  42958c:	mov	x1, x21
  429590:	mov	w5, w22
  429594:	mov	w6, w23
  429598:	mov	x0, x19
  42959c:	mov	w3, #0x0                   	// #0
  4295a0:	bl	428700 <ferror@plt+0x25e80>
  4295a4:	cmp	x0, #0x0
  4295a8:	mov	x21, x0
  4295ac:	ccmp	w22, #0x0, #0x4, eq  // eq = none
  4295b0:	b.ne	429624 <ferror@plt+0x26da4>  // b.any
  4295b4:	ldr	x0, [x21, #16]
  4295b8:	cmp	w20, #0x2
  4295bc:	cset	w2, eq  // eq = none
  4295c0:	cbz	x0, 4296a4 <ferror@plt+0x26e24>
  4295c4:	mov	w3, w23
  4295c8:	mov	x1, x21
  4295cc:	mov	x0, x19
  4295d0:	ldp	x19, x20, [sp, #16]
  4295d4:	ldp	x21, x22, [sp, #32]
  4295d8:	ldp	x23, x24, [sp, #48]
  4295dc:	ldp	x29, x30, [sp], #96
  4295e0:	b	4290c0 <ferror@plt+0x26840>
  4295e4:	cmp	w20, #0x3
  4295e8:	b.eq	429768 <ferror@plt+0x26ee8>  // b.none
  4295ec:	ldrb	w0, [x19, #416]
  4295f0:	cbnz	w0, 429738 <ferror@plt+0x26eb8>
  4295f4:	stp	x25, x26, [sp, #64]
  4295f8:	ldr	x25, [x24, #24]
  4295fc:	cbz	x25, 4297a8 <ferror@plt+0x26f28>
  429600:	mov	w2, #0x0                   	// #0
  429604:	cbz	x1, 42960c <ferror@plt+0x26d8c>
  429608:	ldrb	w2, [x1, #106]
  42960c:	mov	x1, x25
  429610:	mov	x0, x19
  429614:	bl	4282f0 <ferror@plt+0x25a70>
  429618:	mov	x2, x0
  42961c:	ldp	x25, x26, [sp, #64]
  429620:	cbnz	x0, 429580 <ferror@plt+0x26d00>
  429624:	mov	w0, #0x0                   	// #0
  429628:	ldp	x19, x20, [sp, #16]
  42962c:	ldp	x21, x22, [sp, #32]
  429630:	ldp	x23, x24, [sp, #48]
  429634:	ldp	x29, x30, [sp], #96
  429638:	ret
  42963c:	ldr	x1, [x19, #488]
  429640:	ldr	x0, [x0, #448]
  429644:	ldr	x1, [x1, #16]
  429648:	cmp	x0, x1
  42964c:	b.eq	429550 <ferror@plt+0x26cd0>  // b.none
  429650:	stur	wzr, [x0, #-24]
  429654:	b	429550 <ferror@plt+0x26cd0>
  429658:	ldr	x0, [x24, #64]
  42965c:	cbz	x0, 42975c <ferror@plt+0x26edc>
  429660:	add	x2, x19, #0xd8
  429664:	cmp	x0, x2
  429668:	b.eq	42975c <ferror@plt+0x26edc>  // b.none
  42966c:	ldr	x2, [x0]
  429670:	cbz	x2, 429740 <ferror@plt+0x26ec0>
  429674:	mov	x1, x21
  429678:	mov	w4, w22
  42967c:	mov	w6, w23
  429680:	mov	x0, x19
  429684:	mov	w5, #0x0                   	// #0
  429688:	mov	w3, #0x0                   	// #0
  42968c:	bl	428700 <ferror@plt+0x25e80>
  429690:	mov	x21, x0
  429694:	cmp	w20, #0x2
  429698:	cset	w2, eq  // eq = none
  42969c:	ldr	x0, [x21, #16]
  4296a0:	cbnz	x0, 4295c4 <ferror@plt+0x26d44>
  4296a4:	ldr	w0, [x21, #204]
  4296a8:	cbnz	w0, 4295c4 <ferror@plt+0x26d44>
  4296ac:	sub	w20, w20, #0x3
  4296b0:	cmp	w20, #0x1
  4296b4:	b.ls	4295c4 <ferror@plt+0x26d44>  // b.plast
  4296b8:	ldr	x0, [x19, #40]
  4296bc:	str	w2, [sp, #92]
  4296c0:	ldr	w1, [x0, #56]
  4296c4:	bl	432120 <ferror@plt+0x2f8a0>
  4296c8:	mov	w20, w0
  4296cc:	ldr	x0, [x19, #40]
  4296d0:	mov	w1, w23
  4296d4:	bl	432120 <ferror@plt+0x2f8a0>
  4296d8:	cmp	w20, w0
  4296dc:	ldr	w2, [sp, #92]
  4296e0:	b.le	4295c4 <ferror@plt+0x26d44>
  4296e4:	ldr	x5, [x19, #40]
  4296e8:	mov	w3, w23
  4296ec:	mov	x1, x21
  4296f0:	mov	x0, x19
  4296f4:	ldr	w4, [x5, #56]
  4296f8:	sub	w4, w4, #0x1
  4296fc:	str	w4, [x5, #56]
  429700:	bl	4290c0 <ferror@plt+0x26840>
  429704:	ands	w0, w0, #0xff
  429708:	b.ne	429628 <ferror@plt+0x26da8>  // b.any
  42970c:	ldr	x2, [x19, #40]
  429710:	ldp	x19, x20, [sp, #16]
  429714:	ldr	w1, [x2, #56]
  429718:	ldp	x21, x22, [sp, #32]
  42971c:	add	w1, w1, #0x1
  429720:	str	w1, [x2, #56]
  429724:	ldp	x23, x24, [sp, #48]
  429728:	ldp	x29, x30, [sp], #96
  42972c:	ret
  429730:	ldr	x24, [x19, #288]
  429734:	b	42956c <ferror@plt+0x26cec>
  429738:	ldr	x2, [x19, #200]
  42973c:	cbnz	x2, 429580 <ferror@plt+0x26d00>
  429740:	mov	x3, x21
  429744:	mov	x0, x19
  429748:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42974c:	mov	w1, #0x3                   	// #3
  429750:	add	x2, x2, #0x108
  429754:	bl	422e10 <ferror@plt+0x20590>
  429758:	b	429624 <ferror@plt+0x26da4>
  42975c:	cbz	w22, 4295ec <ferror@plt+0x26d6c>
  429760:	ldr	x2, [x19, #208]
  429764:	b	42957c <ferror@plt+0x26cfc>
  429768:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42976c:	mov	x0, x19
  429770:	add	x1, x1, #0x100
  429774:	mov	w2, #0x0                   	// #0
  429778:	bl	4282f0 <ferror@plt+0x25a70>
  42977c:	cbz	x0, 429624 <ferror@plt+0x26da4>
  429780:	mov	x2, x0
  429784:	mov	x1, x21
  429788:	mov	w6, w23
  42978c:	mov	x0, x19
  429790:	mov	w5, #0x0                   	// #0
  429794:	mov	w4, #0x0                   	// #0
  429798:	mov	w3, #0x0                   	// #0
  42979c:	bl	428700 <ferror@plt+0x25e80>
  4297a0:	mov	x21, x0
  4297a4:	b	4295b4 <ferror@plt+0x26d34>
  4297a8:	ldr	x0, [x24, #8]
  4297ac:	bl	45c4a0 <ferror@plt+0x59c20>
  4297b0:	ldr	x26, [x24, #8]
  4297b4:	sub	x26, x0, x26
  4297b8:	add	x0, x26, #0x1
  4297bc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4297c0:	ldr	x1, [x24, #8]
  4297c4:	mov	x25, x0
  4297c8:	mov	x2, x26
  4297cc:	bl	402220 <memcpy@plt>
  4297d0:	strb	wzr, [x25, x26]
  4297d4:	ldr	x1, [x19]
  4297d8:	str	x25, [x24, #24]
  4297dc:	b	429600 <ferror@plt+0x26d80>
  4297e0:	stp	x29, x30, [sp, #-32]!
  4297e4:	mov	x2, x0
  4297e8:	mov	x0, x1
  4297ec:	mov	x29, sp
  4297f0:	stp	x19, x20, [sp, #16]
  4297f4:	mov	x19, x1
  4297f8:	ldr	x20, [x2, #296]
  4297fc:	bl	45c100 <ferror@plt+0x59880>
  429800:	mov	x1, x19
  429804:	mov	w2, w0
  429808:	mov	x0, x20
  42980c:	bl	45ba38 <ferror@plt+0x591b8>
  429810:	cbz	x0, 429850 <ferror@plt+0x26fd0>
  429814:	nop
  429818:	ldr	x1, [x0, #8]
  42981c:	cbz	x1, 42982c <ferror@plt+0x26fac>
  429820:	ldr	x1, [x0, #24]
  429824:	ldr	w1, [x1, #204]
  429828:	cbz	w1, 429840 <ferror@plt+0x26fc0>
  42982c:	ldr	x0, [x0]
  429830:	cbnz	x0, 429818 <ferror@plt+0x26f98>
  429834:	ldp	x19, x20, [sp, #16]
  429838:	ldp	x29, x30, [sp], #32
  42983c:	ret
  429840:	mov	w0, #0x1                   	// #1
  429844:	ldp	x19, x20, [sp, #16]
  429848:	ldp	x29, x30, [sp], #32
  42984c:	ret
  429850:	mov	w0, #0x0                   	// #0
  429854:	b	429834 <ferror@plt+0x26fb4>
  429858:	stp	x29, x30, [sp, #-48]!
  42985c:	mov	x29, sp
  429860:	stp	x21, x22, [sp, #32]
  429864:	mov	x21, x0
  429868:	mov	x0, x1
  42986c:	stp	x19, x20, [sp, #16]
  429870:	mov	x19, x1
  429874:	mov	w20, w2
  429878:	ldr	x22, [x21, #296]
  42987c:	bl	45c100 <ferror@plt+0x59880>
  429880:	mov	x1, x19
  429884:	mov	w2, w0
  429888:	mov	x0, x22
  42988c:	bl	45ba38 <ferror@plt+0x591b8>
  429890:	mov	x19, x0
  429894:	tbnz	w20, #31, 4298dc <ferror@plt+0x2705c>
  429898:	cbz	x19, 4298c8 <ferror@plt+0x27048>
  42989c:	nop
  4298a0:	ldr	x1, [x19, #8]
  4298a4:	cbz	x1, 4298c0 <ferror@plt+0x27040>
  4298a8:	ldr	x1, [x19, #24]
  4298ac:	ldr	w1, [x1, #204]
  4298b0:	cbnz	w1, 4298c0 <ferror@plt+0x27040>
  4298b4:	ldr	w0, [x19, #16]
  4298b8:	cmp	w0, w20
  4298bc:	b.ls	4298f0 <ferror@plt+0x27070>  // b.plast
  4298c0:	ldr	x19, [x19]
  4298c4:	cbnz	x19, 4298a0 <ferror@plt+0x27020>
  4298c8:	mov	w0, #0x0                   	// #0
  4298cc:	ldp	x19, x20, [sp, #16]
  4298d0:	ldp	x21, x22, [sp, #32]
  4298d4:	ldp	x29, x30, [sp], #48
  4298d8:	ret
  4298dc:	ldr	x0, [x21, #40]
  4298e0:	mov	w1, w20
  4298e4:	bl	431068 <ferror@plt+0x2e7e8>
  4298e8:	mov	w20, w0
  4298ec:	b	429898 <ferror@plt+0x27018>
  4298f0:	mov	w0, #0x1                   	// #1
  4298f4:	ldp	x19, x20, [sp, #16]
  4298f8:	ldp	x21, x22, [sp, #32]
  4298fc:	ldp	x29, x30, [sp], #48
  429900:	ret
  429904:	nop
  429908:	stp	x29, x30, [sp, #-64]!
  42990c:	mov	x3, #0x0                   	// #0
  429910:	mov	x29, sp
  429914:	stp	x19, x20, [sp, #16]
  429918:	mov	x19, x0
  42991c:	adrp	x20, 402000 <memcpy@plt-0x220>
  429920:	add	x20, x20, #0x640
  429924:	stp	x21, x22, [sp, #32]
  429928:	adrp	x21, 45c000 <ferror@plt+0x59780>
  42992c:	adrp	x22, 427000 <ferror@plt+0x24780>
  429930:	add	x21, x21, #0xa50
  429934:	add	x22, x22, #0xb18
  429938:	str	x23, [sp, #48]
  42993c:	adrp	x23, 427000 <ferror@plt+0x24780>
  429940:	add	x23, x23, #0xbe8
  429944:	mov	x5, x20
  429948:	mov	x4, x21
  42994c:	mov	x1, x22
  429950:	mov	x2, x23
  429954:	mov	x0, #0x7f                  	// #127
  429958:	bl	45b7b0 <ferror@plt+0x58f30>
  42995c:	str	x0, [x19, #296]
  429960:	mov	x2, x23
  429964:	mov	x1, x22
  429968:	mov	x5, x20
  42996c:	mov	x4, x21
  429970:	mov	x3, #0x0                   	// #0
  429974:	mov	x0, #0x7f                  	// #127
  429978:	bl	45b7b0 <ferror@plt+0x58f30>
  42997c:	str	x0, [x19, #304]
  429980:	mov	x0, #0xff0                 	// #4080
  429984:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  429988:	mov	x6, x0
  42998c:	ldr	x7, [x19, #312]
  429990:	str	x6, [x19, #312]
  429994:	str	wzr, [x6]
  429998:	mov	x4, x21
  42999c:	str	x7, [x6, #8]
  4299a0:	mov	x5, x20
  4299a4:	mov	x3, #0x0                   	// #0
  4299a8:	adrp	x2, 427000 <ferror@plt+0x24780>
  4299ac:	adrp	x1, 45c000 <ferror@plt+0x59780>
  4299b0:	add	x2, x2, #0xbc8
  4299b4:	add	x1, x1, #0x100
  4299b8:	mov	x0, #0x7f                  	// #127
  4299bc:	bl	45b7b0 <ferror@plt+0x58f30>
  4299c0:	ldp	x21, x22, [sp, #32]
  4299c4:	mov	x4, x20
  4299c8:	ldr	x23, [sp, #48]
  4299cc:	str	x0, [x19, #320]
  4299d0:	add	x0, x19, #0x148
  4299d4:	adrp	x3, 45c000 <ferror@plt+0x59780>
  4299d8:	ldp	x19, x20, [sp, #16]
  4299dc:	add	x3, x3, #0xa18
  4299e0:	ldp	x29, x30, [sp], #64
  4299e4:	mov	x2, #0x0                   	// #0
  4299e8:	mov	x1, #0x0                   	// #0
  4299ec:	b	45c538 <_obstack_begin@@Base>
  4299f0:	stp	x29, x30, [sp, #-32]!
  4299f4:	mov	x29, sp
  4299f8:	stp	x19, x20, [sp, #16]
  4299fc:	mov	x20, x0
  429a00:	ldr	x0, [x0, #296]
  429a04:	bl	45b808 <ferror@plt+0x58f88>
  429a08:	ldr	x0, [x20, #304]
  429a0c:	bl	45b808 <ferror@plt+0x58f88>
  429a10:	ldr	x0, [x20, #320]
  429a14:	bl	45b808 <ferror@plt+0x58f88>
  429a18:	add	x0, x20, #0x148
  429a1c:	mov	x1, #0x0                   	// #0
  429a20:	bl	45c878 <_obstack_free@@Base>
  429a24:	ldr	x19, [x20, #312]
  429a28:	cbz	x19, 429a40 <ferror@plt+0x271c0>
  429a2c:	nop
  429a30:	mov	x0, x19
  429a34:	ldr	x19, [x19, #8]
  429a38:	bl	402640 <free@plt>
  429a3c:	cbnz	x19, 429a30 <ferror@plt+0x271b0>
  429a40:	ldr	x20, [x20, #280]
  429a44:	cbz	x20, 429a74 <ferror@plt+0x271f4>
  429a48:	ldr	x0, [x20, #48]
  429a4c:	mov	x19, x20
  429a50:	ldr	x20, [x20, #32]
  429a54:	bl	402640 <free@plt>
  429a58:	ldr	x0, [x19]
  429a5c:	bl	402640 <free@plt>
  429a60:	ldr	x0, [x19, #8]
  429a64:	bl	402640 <free@plt>
  429a68:	mov	x0, x19
  429a6c:	bl	402640 <free@plt>
  429a70:	cbnz	x20, 429a48 <ferror@plt+0x271c8>
  429a74:	ldp	x19, x20, [sp, #16]
  429a78:	ldp	x29, x30, [sp], #32
  429a7c:	ret
  429a80:	stp	x29, x30, [sp, #-48]!
  429a84:	mov	x29, sp
  429a88:	stp	x19, x20, [sp, #16]
  429a8c:	mov	x19, x0
  429a90:	ldr	x0, [x0, #296]
  429a94:	bl	45b808 <ferror@plt+0x58f88>
  429a98:	ldr	x0, [x19, #304]
  429a9c:	bl	45b808 <ferror@plt+0x58f88>
  429aa0:	ldr	x0, [x19, #320]
  429aa4:	bl	45b808 <ferror@plt+0x58f88>
  429aa8:	add	x0, x19, #0x148
  429aac:	mov	x1, #0x0                   	// #0
  429ab0:	bl	45c878 <_obstack_free@@Base>
  429ab4:	ldr	x20, [x19, #312]
  429ab8:	cbz	x20, 429ad0 <ferror@plt+0x27250>
  429abc:	nop
  429ac0:	mov	x0, x20
  429ac4:	ldr	x20, [x20, #8]
  429ac8:	bl	402640 <free@plt>
  429acc:	cbnz	x20, 429ac0 <ferror@plt+0x27240>
  429ad0:	ldr	x20, [x19, #280]
  429ad4:	cbz	x20, 429b10 <ferror@plt+0x27290>
  429ad8:	str	x21, [sp, #32]
  429adc:	nop
  429ae0:	mov	x21, x20
  429ae4:	ldr	x20, [x20, #32]
  429ae8:	ldr	x0, [x21, #48]
  429aec:	bl	402640 <free@plt>
  429af0:	ldr	x0, [x21]
  429af4:	bl	402640 <free@plt>
  429af8:	ldr	x0, [x21, #8]
  429afc:	bl	402640 <free@plt>
  429b00:	mov	x0, x21
  429b04:	bl	402640 <free@plt>
  429b08:	cbnz	x20, 429ae0 <ferror@plt+0x27260>
  429b0c:	ldr	x21, [sp, #32]
  429b10:	str	xzr, [x19, #280]
  429b14:	str	xzr, [x19, #312]
  429b18:	mov	x0, x19
  429b1c:	ldp	x19, x20, [sp, #16]
  429b20:	ldp	x29, x30, [sp], #48
  429b24:	b	429908 <ferror@plt+0x27088>
  429b28:	stp	x29, x30, [sp, #-64]!
  429b2c:	mov	x29, sp
  429b30:	stp	x19, x20, [sp, #16]
  429b34:	mov	x20, x1
  429b38:	mov	x19, x0
  429b3c:	ldr	x1, [x0]
  429b40:	stp	x21, x22, [sp, #32]
  429b44:	ldr	x1, [x1, #80]
  429b48:	ldr	x22, [x1, #64]
  429b4c:	cbz	x22, 429c60 <ferror@plt+0x273e0>
  429b50:	ldr	x21, [x19, #296]
  429b54:	mov	x0, x20
  429b58:	bl	45c100 <ferror@plt+0x59880>
  429b5c:	mov	w2, w0
  429b60:	mov	x1, x20
  429b64:	mov	x0, x21
  429b68:	mov	w3, #0x1                   	// #1
  429b6c:	bl	45bbf8 <ferror@plt+0x59378>
  429b70:	ldr	x2, [x0]
  429b74:	mov	x21, x0
  429b78:	cbnz	x2, 429b88 <ferror@plt+0x27308>
  429b7c:	b	429ba4 <ferror@plt+0x27324>
  429b80:	ldr	x2, [x2]
  429b84:	cbz	x2, 429ba4 <ferror@plt+0x27324>
  429b88:	ldr	x0, [x2, #8]
  429b8c:	cmp	x22, x0
  429b90:	b.ne	429b80 <ferror@plt+0x27300>  // b.any
  429b94:	ldp	x19, x20, [sp, #16]
  429b98:	ldp	x21, x22, [sp, #32]
  429b9c:	ldp	x29, x30, [sp], #64
  429ba0:	ret
  429ba4:	mov	x1, #0xd8                  	// #216
  429ba8:	mov	x0, #0x1                   	// #1
  429bac:	str	x23, [sp, #48]
  429bb0:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  429bb4:	ldr	x1, [x19]
  429bb8:	mov	x23, x0
  429bbc:	mov	w2, #0xffffffff            	// #-1
  429bc0:	mov	x0, x20
  429bc4:	cmp	x1, #0x0
  429bc8:	cset	w1, eq  // eq = none
  429bcc:	str	x22, [x23, #64]
  429bd0:	str	w2, [x23, #200]
  429bd4:	strb	w1, [x23, #212]
  429bd8:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  429bdc:	str	x0, [x23]
  429be0:	ldr	x0, [x19]
  429be4:	mov	w1, #0x0                   	// #0
  429be8:	cbz	x0, 429bf4 <ferror@plt+0x27374>
  429bec:	ldr	x0, [x0, #80]
  429bf0:	ldrb	w1, [x0, #214]
  429bf4:	ldr	x0, [x19, #312]
  429bf8:	strb	w1, [x23, #214]
  429bfc:	ldr	x1, [x19, #280]
  429c00:	str	x1, [x23, #32]
  429c04:	ldr	w1, [x0]
  429c08:	str	x23, [x19, #280]
  429c0c:	cmp	w1, #0x7f
  429c10:	b.eq	429c78 <ferror@plt+0x273f8>  // b.none
  429c14:	ubfiz	x2, x1, #5, #32
  429c18:	add	w3, w1, #0x1
  429c1c:	add	x2, x2, #0x10
  429c20:	ldr	x4, [x19, #40]
  429c24:	ubfiz	x1, x1, #5, #32
  429c28:	add	x1, x0, x1
  429c2c:	str	w3, [x0]
  429c30:	add	x0, x0, x2
  429c34:	ldr	w2, [x4, #56]
  429c38:	ldr	x3, [x21]
  429c3c:	stp	x3, x22, [x1, #16]
  429c40:	str	w2, [x1, #32]
  429c44:	str	x23, [x1, #40]
  429c48:	ldr	x23, [sp, #48]
  429c4c:	str	x0, [x21]
  429c50:	ldp	x19, x20, [sp, #16]
  429c54:	ldp	x21, x22, [sp, #32]
  429c58:	ldp	x29, x30, [sp], #64
  429c5c:	ret
  429c60:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  429c64:	mov	w2, #0x0                   	// #0
  429c68:	add	x3, x3, #0x70
  429c6c:	mov	w1, #0x4                   	// #4
  429c70:	bl	423488 <ferror@plt+0x20c08>
  429c74:	b	429b50 <ferror@plt+0x272d0>
  429c78:	mov	x0, #0xff0                 	// #4080
  429c7c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  429c80:	ldr	x4, [x19, #312]
  429c84:	mov	w3, #0x1                   	// #1
  429c88:	mov	w1, #0x0                   	// #0
  429c8c:	mov	x2, #0x10                  	// #16
  429c90:	str	wzr, [x0]
  429c94:	str	x4, [x0, #8]
  429c98:	str	x0, [x19, #312]
  429c9c:	b	429c20 <ferror@plt+0x273a0>
  429ca0:	ldr	x6, [x0, #40]
  429ca4:	mov	w3, #0x18                  	// #24
  429ca8:	ldr	w5, [x6, #12]
  429cac:	ldr	x8, [x6]
  429cb0:	sub	w5, w5, #0x1
  429cb4:	smull	x5, w5, w3
  429cb8:	add	x7, x8, x5
  429cbc:	cbz	w1, 429cd0 <ferror@plt+0x27450>
  429cc0:	cbz	w2, 429d08 <ferror@plt+0x27488>
  429cc4:	mov	w4, #0x2                   	// #2
  429cc8:	mov	w3, w4
  429ccc:	b	429cd8 <ferror@plt+0x27458>
  429cd0:	mov	w4, #0x0                   	// #0
  429cd4:	mov	w3, #0x0                   	// #0
  429cd8:	ldr	x2, [x0]
  429cdc:	mov	w1, #0x2                   	// #2
  429ce0:	strb	w3, [x2, #106]
  429ce4:	ldrb	w3, [x7, #6]
  429ce8:	ldr	w8, [x8, x5]
  429cec:	ldr	w5, [x6, #60]
  429cf0:	ldr	x2, [x7, #8]
  429cf4:	sub	w5, w5, w8
  429cf8:	ldr	w7, [x7, #16]
  429cfc:	lsr	w3, w5, w3
  429d00:	add	w3, w3, w7
  429d04:	b	4212b8 <ferror@plt+0x1ea38>
  429d08:	mov	w4, #0x1                   	// #1
  429d0c:	mov	w3, w4
  429d10:	b	429cd8 <ferror@plt+0x27458>
  429d14:	nop
  429d18:	mov	w4, #0x0                   	// #0
  429d1c:	mov	w3, #0x1                   	// #1
  429d20:	b	4212b8 <ferror@plt+0x1ea38>
  429d24:	nop
  429d28:	stp	x29, x30, [sp, #-64]!
  429d2c:	mov	x29, sp
  429d30:	stp	x19, x20, [sp, #16]
  429d34:	mov	x19, x0
  429d38:	ldr	x0, [x0, #296]
  429d3c:	str	xzr, [sp, #48]
  429d40:	bl	45b530 <ferror@plt+0x58cb0>
  429d44:	mov	x3, x0
  429d48:	ldr	x0, [x19, #296]
  429d4c:	add	x2, sp, #0x30
  429d50:	adrp	x1, 427000 <ferror@plt+0x24780>
  429d54:	add	x1, x1, #0xb38
  429d58:	str	x3, [sp, #56]
  429d5c:	bl	45c050 <ferror@plt+0x597d0>
  429d60:	ldr	x0, [sp, #48]
  429d64:	cbz	x0, 429e1c <ferror@plt+0x2759c>
  429d68:	ldr	x1, [sp, #56]
  429d6c:	adrp	x3, 427000 <ferror@plt+0x24780>
  429d70:	add	x3, x3, #0xd30
  429d74:	mov	x2, #0x8                   	// #8
  429d78:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  429d7c:	bl	402350 <qsort@plt>
  429d80:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  429d84:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  429d88:	add	x1, x1, #0x138
  429d8c:	add	x0, x0, #0x5a8
  429d90:	bl	402630 <dgettext@plt>
  429d94:	ldr	x1, [x20, #1312]
  429d98:	bl	402770 <fputs_unlocked@plt>
  429d9c:	ldr	x0, [sp, #56]
  429da0:	cbz	x0, 429e14 <ferror@plt+0x27594>
  429da4:	add	x20, x20, #0x520
  429da8:	mov	x19, #0x0                   	// #0
  429dac:	str	x21, [sp, #32]
  429db0:	mov	w21, #0xa                   	// #10
  429db4:	b	429dd0 <ferror@plt+0x27550>
  429db8:	str	x3, [x0, #40]
  429dbc:	add	x19, x19, #0x1
  429dc0:	strb	w21, [x1]
  429dc4:	ldr	x0, [sp, #56]
  429dc8:	cmp	x0, x19
  429dcc:	b.ls	429e10 <ferror@plt+0x27590>  // b.plast
  429dd0:	ldr	x0, [sp, #48]
  429dd4:	ldr	x1, [x20]
  429dd8:	ldr	x0, [x0, x19, lsl #3]
  429ddc:	bl	402770 <fputs_unlocked@plt>
  429de0:	ldr	x0, [x20]
  429de4:	ldp	x1, x2, [x0, #40]
  429de8:	add	x3, x1, #0x1
  429dec:	cmp	x1, x2
  429df0:	b.cc	429db8 <ferror@plt+0x27538>  // b.lo, b.ul, b.last
  429df4:	mov	w1, #0xa                   	// #10
  429df8:	bl	402550 <__overflow@plt>
  429dfc:	ldr	x0, [sp, #56]
  429e00:	add	x19, x19, #0x1
  429e04:	cmp	x0, x19
  429e08:	b.hi	429dd0 <ferror@plt+0x27550>  // b.pmore
  429e0c:	nop
  429e10:	ldr	x21, [sp, #32]
  429e14:	ldr	x0, [sp, #48]
  429e18:	bl	402640 <free@plt>
  429e1c:	ldp	x19, x20, [sp, #16]
  429e20:	ldp	x29, x30, [sp], #64
  429e24:	ret
  429e28:	stp	x29, x30, [sp, #-64]!
  429e2c:	mov	x29, sp
  429e30:	stp	x19, x20, [sp, #16]
  429e34:	mov	x19, x0
  429e38:	mov	x20, x1
  429e3c:	stp	x21, x22, [sp, #32]
  429e40:	mov	w21, w2
  429e44:	add	x2, x19, #0xd8
  429e48:	ldrb	w0, [x1]
  429e4c:	cmp	w0, #0x2f
  429e50:	b.eq	429e74 <ferror@plt+0x275f4>  // b.none
  429e54:	ldr	x1, [x19]
  429e58:	cbz	x1, 429f2c <ferror@plt+0x276ac>
  429e5c:	ldr	x22, [x1, #80]
  429e60:	cbnz	w21, 429f20 <ferror@plt+0x276a0>
  429e64:	ldrb	w0, [x19, #416]
  429e68:	cbz	w0, 429edc <ferror@plt+0x2765c>
  429e6c:	ldr	x2, [x19, #200]
  429e70:	cbz	x2, 429f38 <ferror@plt+0x276b8>
  429e74:	mov	x1, x20
  429e78:	mov	w4, w21
  429e7c:	mov	x0, x19
  429e80:	mov	w6, #0x0                   	// #0
  429e84:	mov	w5, #0x0                   	// #0
  429e88:	mov	w3, #0x0                   	// #0
  429e8c:	bl	428700 <ferror@plt+0x25e80>
  429e90:	mov	x20, x0
  429e94:	ldr	w0, [x0, #204]
  429e98:	cbnz	w0, 429f0c <ferror@plt+0x2768c>
  429e9c:	ldr	w0, [x20, #200]
  429ea0:	cmn	w0, #0x1
  429ea4:	b.eq	429eb4 <ferror@plt+0x27634>  // b.none
  429ea8:	bl	4024f0 <close@plt>
  429eac:	mov	w0, #0xffffffff            	// #-1
  429eb0:	str	w0, [x20, #200]
  429eb4:	ldr	x0, [x19]
  429eb8:	ldr	x1, [x20, #160]
  429ebc:	ldr	x0, [x0, #80]
  429ec0:	ldp	x19, x20, [sp, #16]
  429ec4:	ldr	x0, [x0, #160]
  429ec8:	ldp	x21, x22, [sp, #32]
  429ecc:	cmp	x1, x0
  429ed0:	cset	w0, gt
  429ed4:	ldp	x29, x30, [sp], #64
  429ed8:	ret
  429edc:	stp	x23, x24, [sp, #48]
  429ee0:	ldr	x23, [x22, #24]
  429ee4:	cbz	x23, 429f54 <ferror@plt+0x276d4>
  429ee8:	mov	w2, #0x0                   	// #0
  429eec:	cbz	x1, 429ef4 <ferror@plt+0x27674>
  429ef0:	ldrb	w2, [x1, #106]
  429ef4:	mov	x1, x23
  429ef8:	mov	x0, x19
  429efc:	bl	4282f0 <ferror@plt+0x25a70>
  429f00:	mov	x2, x0
  429f04:	ldp	x23, x24, [sp, #48]
  429f08:	cbnz	x0, 429e74 <ferror@plt+0x275f4>
  429f0c:	mov	w0, #0xffffffff            	// #-1
  429f10:	ldp	x19, x20, [sp, #16]
  429f14:	ldp	x21, x22, [sp, #32]
  429f18:	ldp	x29, x30, [sp], #64
  429f1c:	ret
  429f20:	ldr	x2, [x19, #208]
  429f24:	cbnz	x2, 429e74 <ferror@plt+0x275f4>
  429f28:	b	429f38 <ferror@plt+0x276b8>
  429f2c:	ldr	x22, [x19, #288]
  429f30:	cbz	w21, 429e64 <ferror@plt+0x275e4>
  429f34:	b	429f20 <ferror@plt+0x276a0>
  429f38:	mov	x3, x20
  429f3c:	mov	x0, x19
  429f40:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  429f44:	mov	w1, #0x3                   	// #3
  429f48:	add	x2, x2, #0x108
  429f4c:	bl	422e10 <ferror@plt+0x20590>
  429f50:	b	429f0c <ferror@plt+0x2768c>
  429f54:	ldr	x0, [x22, #8]
  429f58:	bl	45c4a0 <ferror@plt+0x59c20>
  429f5c:	ldr	x24, [x22, #8]
  429f60:	sub	x24, x0, x24
  429f64:	add	x0, x24, #0x1
  429f68:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  429f6c:	ldr	x1, [x22, #8]
  429f70:	mov	x23, x0
  429f74:	mov	x2, x24
  429f78:	bl	402220 <memcpy@plt>
  429f7c:	strb	wzr, [x23, x24]
  429f80:	ldr	x1, [x19]
  429f84:	str	x23, [x22, #24]
  429f88:	b	429ee8 <ferror@plt+0x27668>
  429f8c:	nop
  429f90:	stp	x29, x30, [sp, #-32]!
  429f94:	mov	x29, sp
  429f98:	stp	x19, x20, [sp, #16]
  429f9c:	mov	x20, x1
  429fa0:	mov	x19, x0
  429fa4:	ldr	x1, [x0, #488]
  429fa8:	ldr	x0, [x0, #448]
  429fac:	ldr	x1, [x1, #16]
  429fb0:	cmp	x0, x1
  429fb4:	b.eq	429fbc <ferror@plt+0x2773c>  // b.none
  429fb8:	stur	wzr, [x0, #-24]
  429fbc:	ldrb	w0, [x20]
  429fc0:	add	x2, x19, #0xd8
  429fc4:	cmp	w0, #0x2f
  429fc8:	b.eq	429fe8 <ferror@plt+0x27768>  // b.none
  429fcc:	mov	w2, #0x0                   	// #0
  429fd0:	mov	x0, x19
  429fd4:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  429fd8:	add	x1, x1, #0x100
  429fdc:	bl	4282f0 <ferror@plt+0x25a70>
  429fe0:	mov	x2, x0
  429fe4:	cbz	x0, 42a020 <ferror@plt+0x277a0>
  429fe8:	mov	x1, x20
  429fec:	mov	x0, x19
  429ff0:	mov	w6, #0x0                   	// #0
  429ff4:	mov	w5, #0x0                   	// #0
  429ff8:	mov	w4, #0x0                   	// #0
  429ffc:	mov	w3, #0x0                   	// #0
  42a000:	bl	428700 <ferror@plt+0x25e80>
  42a004:	mov	x1, x0
  42a008:	mov	x0, x19
  42a00c:	mov	w3, #0x0                   	// #0
  42a010:	ldp	x19, x20, [sp, #16]
  42a014:	mov	w2, #0x0                   	// #0
  42a018:	ldp	x29, x30, [sp], #32
  42a01c:	b	4290c0 <ferror@plt+0x26840>
  42a020:	mov	w0, #0x0                   	// #0
  42a024:	ldp	x19, x20, [sp, #16]
  42a028:	ldp	x29, x30, [sp], #32
  42a02c:	ret
  42a030:	stp	x29, x30, [sp, #-32]!
  42a034:	mov	x29, sp
  42a038:	str	x19, [sp, #16]
  42a03c:	mov	x19, x0
  42a040:	ldrb	w2, [x1]
  42a044:	cmp	w2, #0x2f
  42a048:	b.eq	42a09c <ferror@plt+0x2781c>  // b.none
  42a04c:	ldr	x2, [x0, #208]
  42a050:	cbz	x2, 42a0a4 <ferror@plt+0x27824>
  42a054:	mov	x0, x19
  42a058:	mov	w6, #0x0                   	// #0
  42a05c:	mov	w5, #0x1                   	// #1
  42a060:	mov	w4, #0x1                   	// #1
  42a064:	mov	w3, #0x0                   	// #0
  42a068:	bl	428700 <ferror@plt+0x25e80>
  42a06c:	mov	x1, x0
  42a070:	cbz	x0, 42a08c <ferror@plt+0x2780c>
  42a074:	mov	x0, x19
  42a078:	mov	w3, #0x0                   	// #0
  42a07c:	ldr	x19, [sp, #16]
  42a080:	mov	w2, #0x0                   	// #0
  42a084:	ldp	x29, x30, [sp], #32
  42a088:	b	4290c0 <ferror@plt+0x26840>
  42a08c:	mov	w0, #0x0                   	// #0
  42a090:	ldr	x19, [sp, #16]
  42a094:	ldp	x29, x30, [sp], #32
  42a098:	ret
  42a09c:	add	x2, x0, #0xd8
  42a0a0:	b	42a054 <ferror@plt+0x277d4>
  42a0a4:	mov	x3, x1
  42a0a8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a0ac:	mov	w1, #0x3                   	// #3
  42a0b0:	add	x2, x2, #0x108
  42a0b4:	bl	422e10 <ferror@plt+0x20590>
  42a0b8:	mov	w0, #0x0                   	// #0
  42a0bc:	ldr	x19, [sp, #16]
  42a0c0:	ldp	x29, x30, [sp], #32
  42a0c4:	ret
  42a0c8:	mov	x3, x0
  42a0cc:	mov	x0, x2
  42a0d0:	ldrb	w2, [x3, #440]
  42a0d4:	cbz	w2, 42a0e0 <ferror@plt+0x27860>
  42a0d8:	ldr	x2, [x1, #56]
  42a0dc:	cbz	x2, 42a108 <ferror@plt+0x27888>
  42a0e0:	strb	wzr, [x3, #440]
  42a0e4:	cbz	x0, 42a104 <ferror@plt+0x27884>
  42a0e8:	ldr	x2, [x1, #48]
  42a0ec:	cmp	x2, x0
  42a0f0:	b.eq	42a0f8 <ferror@plt+0x27878>  // b.none
  42a0f4:	b	402640 <free@plt>
  42a0f8:	stp	xzr, xzr, [x1, #40]
  42a0fc:	strb	wzr, [x1, #213]
  42a100:	b	402640 <free@plt>
  42a104:	ret
  42a108:	ldr	x2, [x3, #424]
  42a10c:	str	x2, [x1, #56]
  42a110:	b	42a0e0 <ferror@plt+0x27860>
  42a114:	nop
  42a118:	ldr	x0, [x0]
  42a11c:	ret
  42a120:	add	x0, x0, #0x48
  42a124:	ret
  42a128:	stp	x29, x30, [sp, #-48]!
  42a12c:	dup	v0.2d, x1
  42a130:	cmp	w3, #0x0
  42a134:	mov	x29, sp
  42a138:	str	x21, [sp, #32]
  42a13c:	mov	x21, x0
  42a140:	stp	x19, x20, [sp, #16]
  42a144:	cset	w0, ne  // ne = any
  42a148:	mov	x19, x1
  42a14c:	strb	w0, [x21, #416]
  42a150:	mov	x20, x2
  42a154:	stur	q0, [x21, #200]
  42a158:	cbz	x1, 42a180 <ferror@plt+0x27900>
  42a15c:	nop
  42a160:	ldr	x0, [x19, #8]
  42a164:	str	xzr, [x19, #32]
  42a168:	bl	402270 <strlen@plt>
  42a16c:	str	w0, [x19, #16]
  42a170:	cmp	x20, x19
  42a174:	b.eq	42a190 <ferror@plt+0x27910>  // b.none
  42a178:	ldr	x19, [x19]
  42a17c:	cbnz	x19, 42a160 <ferror@plt+0x278e0>
  42a180:	ldp	x19, x20, [sp, #16]
  42a184:	ldr	x21, [sp, #32]
  42a188:	ldp	x29, x30, [sp], #48
  42a18c:	ret
  42a190:	ldr	x19, [x20]
  42a194:	str	x20, [x21, #208]
  42a198:	cbnz	x19, 42a160 <ferror@plt+0x278e0>
  42a19c:	ldp	x19, x20, [sp, #16]
  42a1a0:	ldr	x21, [sp, #32]
  42a1a4:	ldp	x29, x30, [sp], #48
  42a1a8:	ret
  42a1ac:	nop
  42a1b0:	ldr	x0, [x0, #8]
  42a1b4:	ret
  42a1b8:	ldr	x0, [x0, #64]
  42a1bc:	ret
  42a1c0:	ldr	x0, [x0]
  42a1c4:	ret
  42a1c8:	ldr	x0, [x0, #80]
  42a1cc:	ret
  42a1d0:	ldr	x0, [x0, #72]
  42a1d4:	ret
  42a1d8:	stp	x29, x30, [sp, #-80]!
  42a1dc:	mov	x29, sp
  42a1e0:	ldr	x2, [x0, #280]
  42a1e4:	stp	x19, x20, [sp, #16]
  42a1e8:	stp	x21, x22, [sp, #32]
  42a1ec:	mov	x22, x0
  42a1f0:	stp	x23, x24, [sp, #48]
  42a1f4:	mov	x23, x1
  42a1f8:	stp	x25, x26, [sp, #64]
  42a1fc:	cbz	x2, 42a394 <ferror@plt+0x27b14>
  42a200:	mov	x3, #0x0                   	// #0
  42a204:	nop
  42a208:	ldr	x2, [x2, #32]
  42a20c:	mov	x0, x3
  42a210:	add	x3, x3, #0x1
  42a214:	cbnz	x2, 42a208 <ferror@plt+0x27988>
  42a218:	lsl	x0, x0, #5
  42a21c:	add	x1, x0, #0x30
  42a220:	mov	x0, #0x1                   	// #1
  42a224:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  42a228:	ldr	x19, [x22, #280]
  42a22c:	str	xzr, [x0]
  42a230:	strb	wzr, [x0, #8]
  42a234:	mov	x20, x0
  42a238:	cbz	x19, 42a39c <ferror@plt+0x27b1c>
  42a23c:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x106d8>
  42a240:	mov	x1, #0x0                   	// #0
  42a244:	add	x24, x24, #0x7f0
  42a248:	b	42a278 <ferror@plt+0x279f8>
  42a24c:	ldr	x0, [x19, #40]
  42a250:	add	x2, x21, #0x18
  42a254:	ldr	x1, [x19, #120]
  42a258:	add	x2, x20, x2
  42a25c:	bl	45ae80 <ferror@plt+0x58600>
  42a260:	add	x21, x20, x21
  42a264:	ldr	x0, [x19, #120]
  42a268:	str	x0, [x21, #16]
  42a26c:	ldr	x1, [x20]
  42a270:	ldr	x19, [x19, #32]
  42a274:	cbz	x19, 42a300 <ferror@plt+0x27a80>
  42a278:	ldrb	w2, [x19, #211]
  42a27c:	cbnz	w2, 42a270 <ferror@plt+0x279f0>
  42a280:	ldr	w0, [x19, #204]
  42a284:	add	x2, x1, #0x1
  42a288:	add	x3, x20, x2, lsl #5
  42a28c:	cbnz	w0, 42a270 <ferror@plt+0x279f0>
  42a290:	ldrh	w0, [x19, #208]
  42a294:	cbz	w0, 42a270 <ferror@plt+0x279f0>
  42a298:	ldrb	w4, [x19, #210]
  42a29c:	lsl	x21, x1, #5
  42a2a0:	str	x2, [x20]
  42a2a4:	mov	x0, x19
  42a2a8:	strb	w4, [x3, #8]
  42a2ac:	ldrb	w2, [x20, #8]
  42a2b0:	ldrb	w3, [x19, #210]
  42a2b4:	orr	w2, w2, w3
  42a2b8:	strb	w2, [x20, #8]
  42a2bc:	ldrb	w2, [x19, #213]
  42a2c0:	cbnz	w2, 42a24c <ferror@plt+0x279cc>
  42a2c4:	ldr	w26, [x19, #200]
  42a2c8:	bl	427d40 <ferror@plt+0x254c0>
  42a2cc:	mov	x1, x24
  42a2d0:	ands	w25, w0, #0xff
  42a2d4:	b.eq	42a35c <ferror@plt+0x27adc>  // b.none
  42a2d8:	ldr	w0, [x19, #200]
  42a2dc:	bl	45b1b0 <ferror@plt+0x58930>
  42a2e0:	mov	x25, x0
  42a2e4:	add	x1, x21, #0x18
  42a2e8:	add	x1, x20, x1
  42a2ec:	bl	45ad88 <ferror@plt+0x58508>
  42a2f0:	mov	x0, x25
  42a2f4:	bl	402380 <fclose@plt>
  42a2f8:	str	w26, [x19, #200]
  42a2fc:	b	42a260 <ferror@plt+0x279e0>
  42a300:	lsl	x19, x1, #5
  42a304:	add	x19, x19, #0x10
  42a308:	add	x0, x20, #0x10
  42a30c:	mov	x2, #0x20                  	// #32
  42a310:	adrp	x3, 428000 <ferror@plt+0x25780>
  42a314:	add	x3, x3, #0xa0
  42a318:	bl	402350 <qsort@plt>
  42a31c:	mov	x3, x23
  42a320:	mov	x1, x19
  42a324:	mov	x2, #0x1                   	// #1
  42a328:	mov	x0, x20
  42a32c:	bl	402250 <fwrite_unlocked@plt>
  42a330:	cmp	x0, #0x1
  42a334:	cset	w25, eq  // eq = none
  42a338:	mov	x0, x20
  42a33c:	bl	402640 <free@plt>
  42a340:	mov	w0, w25
  42a344:	ldp	x19, x20, [sp, #16]
  42a348:	ldp	x21, x22, [sp, #32]
  42a34c:	ldp	x23, x24, [sp, #48]
  42a350:	ldp	x25, x26, [sp, #64]
  42a354:	ldp	x29, x30, [sp], #80
  42a358:	ret
  42a35c:	mov	x1, x19
  42a360:	mov	w3, #0x0                   	// #0
  42a364:	mov	w2, #0x0                   	// #0
  42a368:	mov	x0, x22
  42a36c:	bl	427f78 <ferror@plt+0x256f8>
  42a370:	mov	x0, x20
  42a374:	bl	402640 <free@plt>
  42a378:	mov	w0, w25
  42a37c:	ldp	x19, x20, [sp, #16]
  42a380:	ldp	x21, x22, [sp, #32]
  42a384:	ldp	x23, x24, [sp, #48]
  42a388:	ldp	x25, x26, [sp, #64]
  42a38c:	ldp	x29, x30, [sp], #80
  42a390:	ret
  42a394:	mov	x1, #0x10                  	// #16
  42a398:	b	42a220 <ferror@plt+0x279a0>
  42a39c:	mov	x19, #0x10                  	// #16
  42a3a0:	mov	x1, #0x0                   	// #0
  42a3a4:	b	42a308 <ferror@plt+0x27a88>
  42a3a8:	stp	x29, x30, [sp, #-80]!
  42a3ac:	mov	x2, #0x1                   	// #1
  42a3b0:	mov	x29, sp
  42a3b4:	str	x19, [sp, #16]
  42a3b8:	mov	x19, x1
  42a3bc:	add	x0, sp, #0x20
  42a3c0:	mov	x3, x19
  42a3c4:	mov	x1, #0x10                  	// #16
  42a3c8:	bl	402580 <fread_unlocked@plt>
  42a3cc:	cmp	x0, #0x1
  42a3d0:	b.eq	42a3e4 <ferror@plt+0x27b64>  // b.none
  42a3d4:	mov	w0, #0x0                   	// #0
  42a3d8:	ldr	x19, [sp, #16]
  42a3dc:	ldp	x29, x30, [sp], #80
  42a3e0:	ret
  42a3e4:	ldr	x0, [sp, #32]
  42a3e8:	lsl	x0, x0, #5
  42a3ec:	add	x0, x0, #0x10
  42a3f0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42a3f4:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  42a3f8:	mov	x3, x19
  42a3fc:	ldp	x4, x5, [sp, #32]
  42a400:	str	x0, [x2, #1928]
  42a404:	ldr	x2, [sp, #32]
  42a408:	stp	x4, x5, [x0], #16
  42a40c:	mov	x1, #0x20                  	// #32
  42a410:	bl	402580 <fread_unlocked@plt>
  42a414:	ldr	x1, [sp, #32]
  42a418:	ldr	x19, [sp, #16]
  42a41c:	cmp	x1, x0
  42a420:	cset	w0, eq  // eq = none
  42a424:	ldp	x29, x30, [sp], #80
  42a428:	ret
  42a42c:	nop
  42a430:	stp	x29, x30, [sp, #-64]!
  42a434:	mov	x29, sp
  42a438:	stp	x19, x20, [sp, #16]
  42a43c:	mov	x19, x0
  42a440:	mov	w20, w2
  42a444:	stp	x21, x22, [sp, #32]
  42a448:	mov	x22, x1
  42a44c:	add	x21, x19, #0xd8
  42a450:	ldrb	w0, [x1]
  42a454:	cmp	w0, #0x2f
  42a458:	b.eq	42a47c <ferror@plt+0x27bfc>  // b.none
  42a45c:	ldr	x4, [x19]
  42a460:	cbz	x4, 42a4f4 <ferror@plt+0x27c74>
  42a464:	ldr	x21, [x4, #80]
  42a468:	cmp	w3, #0x1
  42a46c:	b.eq	42a4d4 <ferror@plt+0x27c54>  // b.none
  42a470:	cbz	w20, 42a4b8 <ferror@plt+0x27c38>
  42a474:	ldr	x21, [x19, #208]
  42a478:	cbz	x21, 42a4fc <ferror@plt+0x27c7c>
  42a47c:	mov	w4, w20
  42a480:	mov	x2, x21
  42a484:	mov	x1, x22
  42a488:	mov	x0, x19
  42a48c:	mov	w6, #0x0                   	// #0
  42a490:	mov	w5, #0x0                   	// #0
  42a494:	mov	w3, #0x0                   	// #0
  42a498:	bl	428700 <ferror@plt+0x25e80>
  42a49c:	ldr	w0, [x0, #204]
  42a4a0:	ldp	x19, x20, [sp, #16]
  42a4a4:	cmp	w0, #0x2
  42a4a8:	cset	w0, ne  // ne = any
  42a4ac:	ldp	x21, x22, [sp, #32]
  42a4b0:	ldp	x29, x30, [sp], #64
  42a4b4:	ret
  42a4b8:	cmp	w3, #0x3
  42a4bc:	b.eq	42a554 <ferror@plt+0x27cd4>  // b.none
  42a4c0:	ldrb	w0, [x19, #416]
  42a4c4:	cbz	w0, 42a518 <ferror@plt+0x27c98>
  42a4c8:	ldr	x21, [x19, #200]
  42a4cc:	cbnz	x21, 42a47c <ferror@plt+0x27bfc>
  42a4d0:	b	42a4fc <ferror@plt+0x27c7c>
  42a4d4:	ldr	x0, [x21, #64]
  42a4d8:	cbz	x0, 42a548 <ferror@plt+0x27cc8>
  42a4dc:	add	x1, x19, #0xd8
  42a4e0:	cmp	x0, x1
  42a4e4:	b.eq	42a548 <ferror@plt+0x27cc8>  // b.none
  42a4e8:	ldr	x21, [x0]
  42a4ec:	cbnz	x21, 42a47c <ferror@plt+0x27bfc>
  42a4f0:	b	42a4fc <ferror@plt+0x27c7c>
  42a4f4:	ldr	x21, [x19, #288]
  42a4f8:	b	42a468 <ferror@plt+0x27be8>
  42a4fc:	mov	x3, x22
  42a500:	mov	x0, x19
  42a504:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a508:	mov	w1, #0x3                   	// #3
  42a50c:	add	x2, x2, #0x108
  42a510:	bl	422e10 <ferror@plt+0x20590>
  42a514:	b	42a47c <ferror@plt+0x27bfc>
  42a518:	stp	x23, x24, [sp, #48]
  42a51c:	ldr	x23, [x21, #24]
  42a520:	cbz	x23, 42a570 <ferror@plt+0x27cf0>
  42a524:	mov	w2, #0x0                   	// #0
  42a528:	cbz	x4, 42a530 <ferror@plt+0x27cb0>
  42a52c:	ldrb	w2, [x4, #106]
  42a530:	mov	x1, x23
  42a534:	mov	x0, x19
  42a538:	bl	4282f0 <ferror@plt+0x25a70>
  42a53c:	mov	x21, x0
  42a540:	ldp	x23, x24, [sp, #48]
  42a544:	b	42a47c <ferror@plt+0x27bfc>
  42a548:	cbz	w20, 42a4c0 <ferror@plt+0x27c40>
  42a54c:	ldr	x21, [x19, #208]
  42a550:	b	42a478 <ferror@plt+0x27bf8>
  42a554:	mov	x0, x19
  42a558:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a55c:	mov	w2, #0x0                   	// #0
  42a560:	add	x1, x1, #0x100
  42a564:	bl	4282f0 <ferror@plt+0x25a70>
  42a568:	mov	x21, x0
  42a56c:	b	42a47c <ferror@plt+0x27bfc>
  42a570:	ldr	x0, [x21, #8]
  42a574:	bl	45c4a0 <ferror@plt+0x59c20>
  42a578:	ldr	x24, [x21, #8]
  42a57c:	sub	x24, x0, x24
  42a580:	add	x0, x24, #0x1
  42a584:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42a588:	ldr	x1, [x21, #8]
  42a58c:	mov	x23, x0
  42a590:	mov	x2, x24
  42a594:	bl	402220 <memcpy@plt>
  42a598:	strb	wzr, [x23, x24]
  42a59c:	ldr	x4, [x19]
  42a5a0:	str	x23, [x21, #24]
  42a5a4:	b	42a524 <ferror@plt+0x27ca4>
  42a5a8:	stp	x29, x30, [sp, #-32]!
  42a5ac:	mov	x29, sp
  42a5b0:	str	x19, [sp, #16]
  42a5b4:	ldr	x19, [x0, #120]
  42a5b8:	add	x19, x19, #0x2d0
  42a5bc:	ldp	x0, x4, [x19, #24]
  42a5c0:	sub	x1, x4, x0
  42a5c4:	cmp	x1, #0x1f
  42a5c8:	b.ls	42a620 <ferror@plt+0x27da0>  // b.plast
  42a5cc:	add	x1, x0, #0x20
  42a5d0:	ldr	x0, [x19, #16]
  42a5d4:	cmp	x1, x0
  42a5d8:	b.eq	42a640 <ferror@plt+0x27dc0>  // b.none
  42a5dc:	ldr	x2, [x19, #48]
  42a5e0:	ldr	x3, [x19, #8]
  42a5e4:	add	x1, x1, x2
  42a5e8:	bic	x1, x1, x2
  42a5ec:	str	x1, [x19, #24]
  42a5f0:	sub	x2, x1, x3
  42a5f4:	sub	x3, x4, x3
  42a5f8:	cmp	x2, x3
  42a5fc:	b.ls	42a608 <ferror@plt+0x27d88>  // b.plast
  42a600:	mov	x1, x4
  42a604:	str	x4, [x19, #24]
  42a608:	str	x1, [x19, #16]
  42a60c:	stp	xzr, xzr, [x0]
  42a610:	stp	xzr, xzr, [x0, #16]
  42a614:	ldr	x19, [sp, #16]
  42a618:	ldp	x29, x30, [sp], #32
  42a61c:	ret
  42a620:	mov	x0, x19
  42a624:	mov	x1, #0x20                  	// #32
  42a628:	bl	45c6e0 <_obstack_newchunk@@Base>
  42a62c:	ldp	x0, x4, [x19, #24]
  42a630:	add	x1, x0, #0x20
  42a634:	ldr	x0, [x19, #16]
  42a638:	cmp	x1, x0
  42a63c:	b.ne	42a5dc <ferror@plt+0x27d5c>  // b.any
  42a640:	ldrb	w2, [x19, #80]
  42a644:	orr	w2, w2, #0x2
  42a648:	strb	w2, [x19, #80]
  42a64c:	b	42a5dc <ferror@plt+0x27d5c>
  42a650:	stp	x29, x30, [sp, #-32]!
  42a654:	mov	x29, sp
  42a658:	stp	x19, x20, [sp, #16]
  42a65c:	mov	x19, x0
  42a660:	mov	x20, x1
  42a664:	cbz	x1, 42a778 <ferror@plt+0x27ef8>
  42a668:	str	x19, [x20, #120]
  42a66c:	mov	x0, x19
  42a670:	str	x20, [x19, #1088]
  42a674:	bl	422ce0 <ferror@plt+0x20460>
  42a678:	mov	x0, x19
  42a67c:	bl	4213b0 <ferror@plt+0x1eb30>
  42a680:	ldr	x0, [x19, #1088]
  42a684:	mov	w3, #0x1                   	// #1
  42a688:	mov	x2, #0x7                   	// #7
  42a68c:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a690:	add	x1, x1, #0x168
  42a694:	bl	43b580 <ferror@plt+0x38d00>
  42a698:	mov	x1, x0
  42a69c:	ldr	x0, [x19, #1088]
  42a6a0:	str	x1, [x19, #1248]
  42a6a4:	mov	w3, #0x1                   	// #1
  42a6a8:	mov	x2, #0x4                   	// #4
  42a6ac:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a6b0:	add	x1, x1, #0x170
  42a6b4:	bl	43b580 <ferror@plt+0x38d00>
  42a6b8:	mov	x1, x0
  42a6bc:	ldr	x0, [x19, #1088]
  42a6c0:	str	x1, [x19, #1256]
  42a6c4:	mov	w3, #0x1                   	// #1
  42a6c8:	mov	x2, #0x5                   	// #5
  42a6cc:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a6d0:	add	x1, x1, #0x178
  42a6d4:	bl	43b580 <ferror@plt+0x38d00>
  42a6d8:	mov	x1, x0
  42a6dc:	ldr	x0, [x19, #1088]
  42a6e0:	str	x1, [x19, #1264]
  42a6e4:	mov	w3, #0x1                   	// #1
  42a6e8:	mov	x2, #0xb                   	// #11
  42a6ec:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a6f0:	add	x1, x1, #0x180
  42a6f4:	bl	43b580 <ferror@plt+0x38d00>
  42a6f8:	str	x0, [x19, #1272]
  42a6fc:	mov	w3, #0x1                   	// #1
  42a700:	mov	x2, #0xa                   	// #10
  42a704:	ldrh	w4, [x0, #18]
  42a708:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a70c:	add	x1, x1, #0x190
  42a710:	orr	w4, w4, #0x10
  42a714:	strh	w4, [x0, #18]
  42a718:	ldr	x0, [x19, #1088]
  42a71c:	bl	43b580 <ferror@plt+0x38d00>
  42a720:	str	x0, [x19, #1280]
  42a724:	mov	w3, #0x1                   	// #1
  42a728:	mov	x2, #0xf                   	// #15
  42a72c:	ldrh	w4, [x0, #18]
  42a730:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a734:	add	x1, x1, #0x1a0
  42a738:	orr	w4, w4, #0x10
  42a73c:	strh	w4, [x0, #18]
  42a740:	ldr	x0, [x19, #1088]
  42a744:	bl	43b580 <ferror@plt+0x38d00>
  42a748:	mov	x1, x0
  42a74c:	ldr	x0, [x19, #1088]
  42a750:	str	x1, [x19, #1288]
  42a754:	mov	w3, #0x1                   	// #1
  42a758:	mov	x2, #0x14                  	// #20
  42a75c:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42a760:	add	x1, x1, #0x1b0
  42a764:	bl	43b580 <ferror@plt+0x38d00>
  42a768:	str	x0, [x19, #1296]
  42a76c:	ldp	x19, x20, [sp, #16]
  42a770:	ldp	x29, x30, [sp], #32
  42a774:	ret
  42a778:	mov	w0, #0x1                   	// #1
  42a77c:	strb	w0, [x19, #1304]
  42a780:	mov	w0, #0xd                   	// #13
  42a784:	bl	43b148 <ferror@plt+0x388c8>
  42a788:	mov	x20, x0
  42a78c:	adrp	x0, 42a000 <ferror@plt+0x27780>
  42a790:	add	x0, x0, #0x5a8
  42a794:	adrp	x4, 402000 <memcpy@plt-0x220>
  42a798:	adrp	x3, 45c000 <ferror@plt+0x59780>
  42a79c:	str	x0, [x20, #96]
  42a7a0:	add	x4, x4, #0x640
  42a7a4:	add	x3, x3, #0xa18
  42a7a8:	add	x0, x19, #0x2d0
  42a7ac:	mov	x2, #0x0                   	// #0
  42a7b0:	mov	x1, #0x0                   	// #0
  42a7b4:	bl	45c538 <_obstack_begin@@Base>
  42a7b8:	b	42a668 <ferror@plt+0x27de8>
  42a7bc:	nop
  42a7c0:	stp	x29, x30, [sp, #-32]!
  42a7c4:	mov	x29, sp
  42a7c8:	str	x19, [sp, #16]
  42a7cc:	mov	x19, x0
  42a7d0:	ldrb	w0, [x0, #1304]
  42a7d4:	cbnz	w0, 42a7e4 <ferror@plt+0x27f64>
  42a7d8:	ldr	x19, [sp, #16]
  42a7dc:	ldp	x29, x30, [sp], #32
  42a7e0:	ret
  42a7e4:	ldr	x0, [x19, #1088]
  42a7e8:	bl	43b1c8 <ferror@plt+0x38948>
  42a7ec:	add	x0, x19, #0x2d0
  42a7f0:	mov	x1, #0x0                   	// #0
  42a7f4:	ldr	x19, [sp, #16]
  42a7f8:	ldp	x29, x30, [sp], #32
  42a7fc:	b	45c878 <_obstack_free@@Base>
  42a800:	ldr	x0, [x0, #1088]
  42a804:	mov	w2, w2
  42a808:	mov	w3, #0x1                   	// #1
  42a80c:	b	43b580 <ferror@plt+0x38d00>
  42a810:	stp	x29, x30, [sp, #-16]!
  42a814:	sxtw	x2, w2
  42a818:	mov	w3, #0x0                   	// #0
  42a81c:	mov	x29, sp
  42a820:	ldr	x0, [x0, #1088]
  42a824:	bl	43b580 <ferror@plt+0x38d00>
  42a828:	cbz	x0, 42a83c <ferror@plt+0x27fbc>
  42a82c:	ldrb	w0, [x0, #18]
  42a830:	ldp	x29, x30, [sp], #16
  42a834:	ubfx	x0, x0, #1, #1
  42a838:	ret
  42a83c:	mov	w0, #0x0                   	// #0
  42a840:	ldp	x29, x30, [sp], #16
  42a844:	ret
  42a848:	ldr	x0, [x0, #1088]
  42a84c:	b	43b5c8 <ferror@plt+0x38d48>
  42a850:	stp	x29, x30, [sp, #-48]!
  42a854:	mov	x4, x2
  42a858:	mov	x29, sp
  42a85c:	stp	x19, x20, [sp, #16]
  42a860:	ldr	x20, [x0]
  42a864:	ldr	x3, [x20]
  42a868:	ldrb	w2, [x3]
  42a86c:	cmp	w2, #0x24
  42a870:	b.eq	42a89c <ferror@plt+0x2801c>  // b.none
  42a874:	ldrb	w5, [x0, #1147]
  42a878:	cmp	w5, #0x0
  42a87c:	cset	w19, ne  // ne = any
  42a880:	cmp	w2, #0x5c
  42a884:	csel	w19, w19, wzr, eq  // eq = none
  42a888:	cbnz	w19, 42a8dc <ferror@plt+0x2805c>
  42a88c:	mov	w0, w19
  42a890:	ldp	x19, x20, [sp, #16]
  42a894:	ldp	x29, x30, [sp], #48
  42a898:	ret
  42a89c:	ldrb	w1, [x0, #1146]
  42a8a0:	mov	w19, #0x0                   	// #0
  42a8a4:	cbz	w1, 42a88c <ferror@plt+0x2800c>
  42a8a8:	add	x3, x3, #0x1
  42a8ac:	str	x3, [x20]
  42a8b0:	mov	w19, #0x1                   	// #1
  42a8b4:	ldrb	w1, [x0, #1148]
  42a8b8:	cbz	w1, 42a88c <ferror@plt+0x2800c>
  42a8bc:	ldrb	w1, [x0, #18]
  42a8c0:	cbnz	w1, 42a88c <ferror@plt+0x2800c>
  42a8c4:	strb	wzr, [x0, #1148]
  42a8c8:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x126d8>
  42a8cc:	mov	w1, #0x2                   	// #2
  42a8d0:	add	x2, x2, #0x998
  42a8d4:	bl	422e10 <ferror@plt+0x20590>
  42a8d8:	b	42a88c <ferror@plt+0x2800c>
  42a8dc:	ldrb	w2, [x3, #1]
  42a8e0:	mov	w19, #0x0                   	// #0
  42a8e4:	and	w2, w2, #0xffffffdf
  42a8e8:	and	w2, w2, #0xff
  42a8ec:	cmp	w2, #0x55
  42a8f0:	b.ne	42a88c <ferror@plt+0x2800c>  // b.any
  42a8f4:	ldr	x2, [x20, #32]
  42a8f8:	add	x3, x3, #0x2
  42a8fc:	str	x3, [x20]
  42a900:	add	x5, sp, #0x2c
  42a904:	mov	x7, #0x0                   	// #0
  42a908:	mov	x6, #0x0                   	// #0
  42a90c:	mov	w3, #0x2                   	// #2
  42a910:	sub	w3, w3, w1
  42a914:	mov	x1, x20
  42a918:	bl	41a020 <ferror@plt+0x177a0>
  42a91c:	ands	w19, w0, #0xff
  42a920:	b.ne	42a88c <ferror@plt+0x2800c>  // b.any
  42a924:	ldr	x0, [x20]
  42a928:	sub	x0, x0, #0x2
  42a92c:	str	x0, [x20]
  42a930:	b	42a88c <ferror@plt+0x2800c>
  42a934:	nop
  42a938:	stp	x29, x30, [sp, #-64]!
  42a93c:	mov	x29, sp
  42a940:	stp	x19, x20, [sp, #16]
  42a944:	ldr	x19, [x0]
  42a948:	stp	x23, x24, [sp, #48]
  42a94c:	mov	x23, x0
  42a950:	ldr	w1, [x19, #56]
  42a954:	ldr	x5, [x19, #48]
  42a958:	ubfiz	x0, x1, #4, #32
  42a95c:	ldr	x7, [x19]
  42a960:	add	x24, x5, x0
  42a964:	ldr	x2, [x5, x0]
  42a968:	cmp	x7, x2
  42a96c:	b.cc	42aabc <ferror@plt+0x2823c>  // b.lo, b.ul, b.last
  42a970:	mov	w20, #0x20                  	// #32
  42a974:	stp	x21, x22, [sp, #32]
  42a978:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  42a97c:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42a980:	add	x21, x21, #0x7b0
  42a984:	add	x22, x22, #0x2c0
  42a988:	b	42aa04 <ferror@plt+0x28184>
  42a98c:	ldr	x0, [x23, #40]
  42a990:	ldr	x5, [x19, #16]
  42a994:	ldr	x1, [x19, #32]
  42a998:	ldr	w4, [x0, #60]
  42a99c:	cmp	x5, x1
  42a9a0:	b.hi	42aae8 <ferror@plt+0x28268>  // b.pmore
  42a9a4:	ldr	w3, [x0, #12]
  42a9a8:	mov	w5, #0x18                  	// #24
  42a9ac:	ldr	x1, [x0]
  42a9b0:	sub	w3, w3, #0x1
  42a9b4:	smull	x3, w3, w5
  42a9b8:	add	x5, x1, x3
  42a9bc:	ldr	w6, [x1, x3]
  42a9c0:	ldrb	w3, [x5, #6]
  42a9c4:	sub	w4, w4, w6
  42a9c8:	ldr	w1, [x5, #16]
  42a9cc:	str	x2, [x19, #8]
  42a9d0:	mov	w2, #0x0                   	// #0
  42a9d4:	lsr	w4, w4, w3
  42a9d8:	add	w1, w1, #0x1
  42a9dc:	add	w1, w4, w1
  42a9e0:	bl	431640 <ferror@plt+0x2edc0>
  42a9e4:	ldr	w1, [x19, #56]
  42a9e8:	ldr	x7, [x19]
  42a9ec:	ldr	x5, [x19, #48]
  42a9f0:	ubfiz	x2, x1, #4, #32
  42a9f4:	add	x24, x5, x2
  42a9f8:	ldr	x2, [x5, x2]
  42a9fc:	cmp	x2, x7
  42aa00:	b.hi	42aab8 <ferror@plt+0x28238>  // b.pmore
  42aa04:	ldr	w4, [x24, #8]
  42aa08:	add	w1, w1, #0x1
  42aa0c:	ldr	x0, [x19, #8]
  42aa10:	str	w1, [x19, #56]
  42aa14:	add	x3, x2, #0x1
  42aa18:	cmp	w4, #0x5c
  42aa1c:	ccmp	w4, w20, #0x4, ne  // ne = any
  42aa20:	sub	x3, x3, x0
  42aa24:	b.eq	42a98c <ferror@plt+0x2810c>  // b.none
  42aa28:	ldrb	w6, [x21, w4, uxtw]
  42aa2c:	cbz	w6, 42aacc <ferror@plt+0x2824c>
  42aa30:	ldrb	w0, [x23, #1136]
  42aa34:	cmp	w4, #0x2f
  42aa38:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42aa3c:	b.eq	42a9f0 <ferror@plt+0x28170>  // b.none
  42aa40:	ldrb	w0, [x23, #1125]
  42aa44:	cbnz	w0, 42ab18 <ferror@plt+0x28298>
  42aa48:	ldrb	w0, [x2, #3]
  42aa4c:	add	x2, x2, #0x3
  42aa50:	ldrh	w4, [x22, w0, sxtw #1]
  42aa54:	tbz	w4, #11, 42aa64 <ferror@plt+0x281e4>
  42aa58:	ldrb	w0, [x2, #1]!
  42aa5c:	ldrh	w4, [x22, w0, sxtw #1]
  42aa60:	tbnz	w4, #11, 42aa58 <ferror@plt+0x281d8>
  42aa64:	cmp	w0, #0xa
  42aa68:	b.ne	42a9f0 <ferror@plt+0x28170>  // b.any
  42aa6c:	ldr	x0, [x24, #16]
  42aa70:	cmp	x0, x2
  42aa74:	b.ls	42a9f0 <ferror@plt+0x28170>  // b.plast
  42aa78:	ldr	x0, [x23, #40]
  42aa7c:	mov	w5, #0x2f                  	// #47
  42aa80:	mov	w1, #0x4                   	// #4
  42aa84:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42aa88:	add	x4, x4, #0x240
  42aa8c:	ldr	w2, [x0, #60]
  42aa90:	mov	x0, x23
  42aa94:	bl	423308 <ferror@plt+0x20a88>
  42aa98:	ldr	w1, [x19, #56]
  42aa9c:	ldr	x5, [x19, #48]
  42aaa0:	ubfiz	x2, x1, #4, #32
  42aaa4:	add	x24, x5, x2
  42aaa8:	ldr	x7, [x19]
  42aaac:	ldr	x2, [x5, x2]
  42aab0:	cmp	x2, x7
  42aab4:	b.ls	42aa04 <ferror@plt+0x28184>  // b.plast
  42aab8:	ldp	x21, x22, [sp, #32]
  42aabc:	ldp	x19, x20, [sp, #16]
  42aac0:	ldp	x23, x24, [sp, #48]
  42aac4:	ldp	x29, x30, [sp], #64
  42aac8:	ret
  42aacc:	cbz	w4, 42a9f0 <ferror@plt+0x28170>
  42aad0:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42aad4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42aad8:	add	x2, x2, #0x1f0
  42aadc:	add	x0, x0, #0x208
  42aae0:	mov	w1, #0x48b                 	// #1163
  42aae4:	bl	4028b0 <ferror@plt+0x30>
  42aae8:	mov	w2, w4
  42aaec:	mov	w1, #0x2                   	// #2
  42aaf0:	mov	x0, x23
  42aaf4:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42aaf8:	add	x4, x4, #0x1c8
  42aafc:	bl	423290 <ferror@plt+0x20a10>
  42ab00:	ldr	x0, [x23, #40]
  42ab04:	ldr	x1, [x19, #32]
  42ab08:	ldr	w4, [x0, #60]
  42ab0c:	ldr	x2, [x24]
  42ab10:	str	x1, [x19, #16]
  42ab14:	b	42a9a4 <ferror@plt+0x28124>
  42ab18:	ldr	x0, [x24, #16]
  42ab1c:	cmp	x0, x2
  42ab20:	b.ne	42a9f0 <ferror@plt+0x28170>  // b.any
  42ab24:	ldr	x0, [x23, #40]
  42ab28:	mov	w5, #0x2f                  	// #47
  42ab2c:	mov	w1, #0x4                   	// #4
  42ab30:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ab34:	add	x4, x4, #0x220
  42ab38:	ldr	w2, [x0, #60]
  42ab3c:	mov	x0, x23
  42ab40:	bl	423308 <ferror@plt+0x20a88>
  42ab44:	ldr	w1, [x19, #56]
  42ab48:	ldr	x7, [x19]
  42ab4c:	ldr	x5, [x19, #48]
  42ab50:	b	42a9f0 <ferror@plt+0x28170>
  42ab54:	nop
  42ab58:	stp	x29, x30, [sp, #-112]!
  42ab5c:	tst	w2, #0xff
  42ab60:	mov	x29, sp
  42ab64:	stp	x25, x26, [sp, #64]
  42ab68:	ldr	x25, [x0]
  42ab6c:	stp	x19, x20, [sp, #16]
  42ab70:	mov	x20, x3
  42ab74:	stp	x21, x22, [sp, #32]
  42ab78:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42ab7c:	add	x22, x22, #0x2c0
  42ab80:	ldr	x19, [x25]
  42ab84:	stp	x23, x24, [sp, #48]
  42ab88:	mov	x21, x0
  42ab8c:	str	x27, [sp, #80]
  42ab90:	mov	x24, x4
  42ab94:	mov	x27, x1
  42ab98:	ldrb	w2, [x19]
  42ab9c:	ldrh	w5, [x22, w2, sxtw #1]
  42aba0:	b.ne	42ac10 <ferror@plt+0x28390>  // b.any
  42aba4:	ldrb	w23, [x1]
  42aba8:	mov	w1, #0x204                 	// #516
  42abac:	tst	w5, w1
  42abb0:	sub	w23, w23, #0x71
  42abb4:	b.eq	42abd8 <ferror@plt+0x28358>  // b.none
  42abb8:	mov	w3, #0x43                  	// #67
  42abbc:	nop
  42abc0:	madd	w23, w23, w3, w2
  42abc4:	ldrb	w2, [x19, #1]!
  42abc8:	sub	w23, w23, #0x71
  42abcc:	ldrh	w0, [x22, w2, sxtw #1]
  42abd0:	tst	w1, w0
  42abd4:	b.ne	42abc0 <ferror@plt+0x28340>  // b.any
  42abd8:	ldurb	w0, [x19, #-1]
  42abdc:	mov	x2, x20
  42abe0:	str	w0, [x20]
  42abe4:	mov	w1, #0x0                   	// #0
  42abe8:	strb	wzr, [x20, #4]
  42abec:	mov	x0, x21
  42abf0:	str	x19, [x25]
  42abf4:	bl	42a850 <ferror@plt+0x27fd0>
  42abf8:	tst	w0, #0xff
  42abfc:	b.eq	42ad68 <ferror@plt+0x284e8>  // b.none
  42ac00:	ldr	x25, [x21]
  42ac04:	ldr	x19, [x25]
  42ac08:	ldrb	w2, [x19]
  42ac0c:	ldrh	w5, [x22, w2, sxtw #1]
  42ac10:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x126d8>
  42ac14:	mov	w23, #0x204                 	// #516
  42ac18:	add	x26, x26, #0x998
  42ac1c:	tst	w5, w23
  42ac20:	b.eq	42ac48 <ferror@plt+0x283c8>  // b.none
  42ac24:	nop
  42ac28:	str	w2, [x20]
  42ac2c:	add	x19, x19, #0x1
  42ac30:	strb	wzr, [x20, #4]
  42ac34:	str	x19, [x25]
  42ac38:	ldrb	w2, [x19]
  42ac3c:	ldrh	w5, [x22, w2, sxtw #1]
  42ac40:	tst	w5, w23
  42ac44:	b.ne	42ac28 <ferror@plt+0x283a8>  // b.any
  42ac48:	cmp	w2, #0x24
  42ac4c:	b.eq	42acbc <ferror@plt+0x2843c>  // b.none
  42ac50:	ldrb	w0, [x21, #1147]
  42ac54:	cmp	w2, #0x5c
  42ac58:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42ac5c:	b.ne	42acfc <ferror@plt+0x2847c>  // b.any
  42ac60:	sub	x2, x19, x27
  42ac64:	mov	x1, x27
  42ac68:	mov	x0, x21
  42ac6c:	bl	41d888 <ferror@plt+0x1b008>
  42ac70:	ldr	x2, [x21]
  42ac74:	mov	x19, x0
  42ac78:	mov	x1, x27
  42ac7c:	mov	x0, x21
  42ac80:	ldr	x2, [x2]
  42ac84:	sub	w2, w2, w27
  42ac88:	bl	42a800 <ferror@plt+0x27f80>
  42ac8c:	str	x0, [x24]
  42ac90:	ldrh	w0, [x19, #18]
  42ac94:	ubfx	x1, x0, #2, #8
  42ac98:	tbnz	w0, #4, 42ad98 <ferror@plt+0x28518>
  42ac9c:	mov	x0, x19
  42aca0:	ldp	x19, x20, [sp, #16]
  42aca4:	ldp	x21, x22, [sp, #32]
  42aca8:	ldp	x23, x24, [sp, #48]
  42acac:	ldp	x25, x26, [sp, #64]
  42acb0:	ldr	x27, [sp, #80]
  42acb4:	ldp	x29, x30, [sp], #112
  42acb8:	ret
  42acbc:	ldrb	w0, [x21, #1146]
  42acc0:	cbz	w0, 42ac60 <ferror@plt+0x283e0>
  42acc4:	add	x19, x19, #0x1
  42acc8:	str	x19, [x25]
  42accc:	ldrb	w0, [x21, #1148]
  42acd0:	cbz	w0, 42ac38 <ferror@plt+0x283b8>
  42acd4:	ldrb	w0, [x21, #18]
  42acd8:	cbnz	w0, 42ac38 <ferror@plt+0x283b8>
  42acdc:	strb	wzr, [x21, #1148]
  42ace0:	mov	x2, x26
  42ace4:	mov	x0, x21
  42ace8:	mov	w1, #0x2                   	// #2
  42acec:	bl	422e10 <ferror@plt+0x20590>
  42acf0:	ldr	x25, [x21]
  42acf4:	ldr	x19, [x25]
  42acf8:	b	42ac38 <ferror@plt+0x283b8>
  42acfc:	ldrb	w0, [x19, #1]
  42ad00:	and	w0, w0, #0xffffffdf
  42ad04:	and	w0, w0, #0xff
  42ad08:	cmp	w0, #0x55
  42ad0c:	b.ne	42ac60 <ferror@plt+0x283e0>  // b.any
  42ad10:	ldr	x2, [x25, #32]
  42ad14:	add	x19, x19, #0x2
  42ad18:	str	x19, [x25]
  42ad1c:	add	x5, sp, #0x6c
  42ad20:	mov	x4, x20
  42ad24:	mov	x1, x25
  42ad28:	mov	x0, x21
  42ad2c:	mov	x7, #0x0                   	// #0
  42ad30:	mov	x6, #0x0                   	// #0
  42ad34:	mov	w3, #0x2                   	// #2
  42ad38:	bl	41a020 <ferror@plt+0x177a0>
  42ad3c:	tst	w0, #0xff
  42ad40:	b.ne	42ad5c <ferror@plt+0x284dc>  // b.any
  42ad44:	ldr	x0, [x25]
  42ad48:	ldr	x1, [x21]
  42ad4c:	sub	x0, x0, #0x2
  42ad50:	str	x0, [x25]
  42ad54:	ldr	x19, [x1]
  42ad58:	b	42ac60 <ferror@plt+0x283e0>
  42ad5c:	ldr	x25, [x21]
  42ad60:	ldr	x19, [x25]
  42ad64:	b	42ac38 <ferror@plt+0x283b8>
  42ad68:	ldr	x0, [x21, #1088]
  42ad6c:	sub	x3, x19, x27
  42ad70:	sub	w2, w19, w27
  42ad74:	mov	x1, x27
  42ad78:	add	w3, w23, w3
  42ad7c:	mov	w4, #0x1                   	// #1
  42ad80:	bl	43b210 <ferror@plt+0x38990>
  42ad84:	mov	x19, x0
  42ad88:	str	x0, [x24]
  42ad8c:	ldrh	w0, [x19, #18]
  42ad90:	ubfx	x1, x0, #2, #8
  42ad94:	tbz	w0, #4, 42ac9c <ferror@plt+0x2841c>
  42ad98:	ldrb	w0, [x21, #18]
  42ad9c:	cbnz	w0, 42ac9c <ferror@plt+0x2841c>
  42ada0:	tbz	w1, #1, 42adac <ferror@plt+0x2852c>
  42ada4:	ldrb	w0, [x21, #23]
  42ada8:	cbz	w0, 42ae10 <ferror@plt+0x28590>
  42adac:	ldr	x0, [x21, #1272]
  42adb0:	cmp	x0, x19
  42adb4:	b.eq	42ade8 <ferror@plt+0x28568>  // b.none
  42adb8:	ldr	x0, [x21, #1280]
  42adbc:	cmp	x0, x19
  42adc0:	b.eq	42ae2c <ferror@plt+0x285ac>  // b.none
  42adc4:	ldrh	w0, [x19, #18]
  42adc8:	tbz	w0, #9, 42ac9c <ferror@plt+0x2841c>
  42adcc:	ldr	x3, [x19]
  42add0:	mov	x0, x21
  42add4:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42add8:	mov	w1, #0xf                   	// #15
  42addc:	add	x2, x2, #0x390
  42ade0:	bl	422f30 <ferror@plt+0x206b0>
  42ade4:	b	42ac9c <ferror@plt+0x2841c>
  42ade8:	ldrb	w0, [x21, #22]
  42adec:	cbnz	w0, 42adb8 <ferror@plt+0x28538>
  42adf0:	ldrb	w0, [x21, #1120]
  42adf4:	cbz	w0, 42ae84 <ferror@plt+0x28604>
  42adf8:	mov	x0, x21
  42adfc:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ae00:	mov	w1, #0x2                   	// #2
  42ae04:	add	x2, x2, #0x290
  42ae08:	bl	422e10 <ferror@plt+0x20590>
  42ae0c:	b	42adb8 <ferror@plt+0x28538>
  42ae10:	ldr	x3, [x19]
  42ae14:	mov	x0, x21
  42ae18:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ae1c:	mov	w1, #0x3                   	// #3
  42ae20:	add	x2, x2, #0x270
  42ae24:	bl	422e10 <ferror@plt+0x20590>
  42ae28:	b	42adac <ferror@plt+0x2852c>
  42ae2c:	ldrb	w0, [x21, #1154]
  42ae30:	cbz	w0, 42ae64 <ferror@plt+0x285e4>
  42ae34:	ldrb	w0, [x21, #1167]
  42ae38:	cbnz	w0, 42ae64 <ferror@plt+0x285e4>
  42ae3c:	ldr	x0, [x21]
  42ae40:	cbz	x0, 42ae4c <ferror@plt+0x285cc>
  42ae44:	ldrb	w0, [x0, #106]
  42ae48:	cbnz	w0, 42adc4 <ferror@plt+0x28544>
  42ae4c:	mov	x0, x21
  42ae50:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ae54:	mov	w1, #0x2                   	// #2
  42ae58:	add	x2, x2, #0x320
  42ae5c:	bl	422e10 <ferror@plt+0x20590>
  42ae60:	b	42adc4 <ferror@plt+0x28544>
  42ae64:	ldrb	w0, [x21, #22]
  42ae68:	cbnz	w0, 42adc4 <ferror@plt+0x28544>
  42ae6c:	mov	x0, x21
  42ae70:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ae74:	mov	w1, #0x2                   	// #2
  42ae78:	add	x2, x2, #0x348
  42ae7c:	bl	422e10 <ferror@plt+0x20590>
  42ae80:	b	42adc4 <ferror@plt+0x28544>
  42ae84:	mov	x0, x21
  42ae88:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ae8c:	mov	w1, #0x2                   	// #2
  42ae90:	add	x2, x2, #0x2d8
  42ae94:	bl	422e10 <ferror@plt+0x20590>
  42ae98:	b	42adb8 <ferror@plt+0x28538>
  42ae9c:	nop
  42aea0:	stp	x29, x30, [sp, #-80]!
  42aea4:	mov	x29, sp
  42aea8:	ldr	x4, [x0]
  42aeac:	stp	x19, x20, [sp, #16]
  42aeb0:	mov	x20, x3
  42aeb4:	stp	x21, x22, [sp, #32]
  42aeb8:	mov	x21, x1
  42aebc:	mov	x22, x2
  42aec0:	ldr	x3, [x4]
  42aec4:	stp	x23, x24, [sp, #48]
  42aec8:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42aecc:	sub	x23, x3, #0x1
  42aed0:	add	x24, x24, #0x2c0
  42aed4:	stp	x25, x26, [sp, #64]
  42aed8:	mov	x26, x0
  42aedc:	mov	w25, #0x204                 	// #516
  42aee0:	mov	x19, x3
  42aee4:	b	42aef4 <ferror@plt+0x28674>
  42aee8:	add	x19, x19, #0x1
  42aeec:	str	w0, [x20]
  42aef0:	strb	wzr, [x20, #4]
  42aef4:	ldrb	w0, [x19]
  42aef8:	cmp	w0, #0x2e
  42aefc:	ldrh	w1, [x24, w0, sxtw #1]
  42af00:	and	w1, w25, w1
  42af04:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  42af08:	b.ne	42aee8 <ferror@plt+0x28668>  // b.any
  42af0c:	sub	w1, w0, #0x2b
  42af10:	cmp	w0, #0x27
  42af14:	b.eq	42af70 <ferror@plt+0x286f0>  // b.none
  42af18:	mov	w2, #0xfd                  	// #253
  42af1c:	tst	w1, w2
  42af20:	b.ne	42af78 <ferror@plt+0x286f8>  // b.any
  42af24:	ldurb	w1, [x19, #-1]
  42af28:	and	w1, w1, #0xffffffdf
  42af2c:	and	w1, w1, #0xff
  42af30:	cmp	w1, #0x45
  42af34:	b.eq	42aee8 <ferror@plt+0x28668>  // b.none
  42af38:	cmp	w1, #0x50
  42af3c:	b.ne	42af78 <ferror@plt+0x286f8>  // b.any
  42af40:	ldrb	w1, [x26, #1127]
  42af44:	cbnz	w1, 42aee8 <ferror@plt+0x28668>
  42af48:	str	x19, [x4]
  42af4c:	mov	x2, x20
  42af50:	mov	x0, x26
  42af54:	mov	w1, #0x0                   	// #0
  42af58:	bl	42a850 <ferror@plt+0x27fd0>
  42af5c:	tst	w0, #0xff
  42af60:	b.eq	42afc0 <ferror@plt+0x28740>  // b.none
  42af64:	ldr	x4, [x26]
  42af68:	ldr	x3, [x4]
  42af6c:	b	42aee0 <ferror@plt+0x28660>
  42af70:	ldrb	w1, [x26, #1166]
  42af74:	cbnz	w1, 42aee8 <ferror@plt+0x28668>
  42af78:	cmp	x19, x3
  42af7c:	b.hi	42af90 <ferror@plt+0x28710>  // b.pmore
  42af80:	b	42af48 <ferror@plt+0x286c8>
  42af84:	sub	x19, x19, #0x1
  42af88:	cmp	x19, x3
  42af8c:	b.eq	42af48 <ferror@plt+0x286c8>  // b.none
  42af90:	ldurb	w0, [x19, #-1]
  42af94:	cmp	w0, #0x27
  42af98:	b.ne	42af48 <ferror@plt+0x286c8>  // b.any
  42af9c:	ldrb	w0, [x26, #1166]
  42afa0:	cbnz	w0, 42af84 <ferror@plt+0x28704>
  42afa4:	str	x19, [x4]
  42afa8:	mov	x2, x20
  42afac:	mov	x0, x26
  42afb0:	mov	w1, #0x0                   	// #0
  42afb4:	bl	42a850 <ferror@plt+0x27fd0>
  42afb8:	tst	w0, #0xff
  42afbc:	b.ne	42af64 <ferror@plt+0x286e4>  // b.any
  42afc0:	ldr	x0, [x26, #64]
  42afc4:	sub	x19, x19, x23
  42afc8:	add	w20, w19, #0x1
  42afcc:	ldp	x3, x1, [x0, #16]
  42afd0:	str	w19, [x21]
  42afd4:	sub	x1, x1, x3
  42afd8:	cmp	x20, x1
  42afdc:	b.hi	42b020 <ferror@plt+0x287a0>  // b.pmore
  42afe0:	add	x20, x3, x20
  42afe4:	str	x20, [x0, #16]
  42afe8:	mov	w2, w19
  42afec:	mov	x1, x23
  42aff0:	mov	x0, x3
  42aff4:	bl	402220 <memcpy@plt>
  42aff8:	mov	x3, x0
  42affc:	ldr	w0, [x21]
  42b000:	strb	wzr, [x3, x0]
  42b004:	ldp	x19, x20, [sp, #16]
  42b008:	ldp	x23, x24, [sp, #48]
  42b00c:	ldp	x25, x26, [sp, #64]
  42b010:	str	x3, [x22]
  42b014:	ldp	x21, x22, [sp, #32]
  42b018:	ldp	x29, x30, [sp], #80
  42b01c:	ret
  42b020:	ldr	x0, [x26, #72]
  42b024:	add	x2, x26, #0x48
  42b028:	cbz	x0, 42b060 <ferror@plt+0x287e0>
  42b02c:	add	x4, x20, x20, lsl #1
  42b030:	mov	x1, #0x1f40                	// #8000
  42b034:	add	x4, x1, x4, lsr #1
  42b038:	ldr	x3, [x0, #8]
  42b03c:	ldr	x1, [x0, #24]
  42b040:	sub	x1, x1, x3
  42b044:	cmp	x20, x1
  42b048:	b.hi	42b054 <ferror@plt+0x287d4>  // b.pmore
  42b04c:	cmp	x1, x4
  42b050:	b.ls	42b0a4 <ferror@plt+0x28824>  // b.plast
  42b054:	mov	x2, x0
  42b058:	ldr	x0, [x0]
  42b05c:	cbnz	x0, 42b038 <ferror@plt+0x287b8>
  42b060:	mov	x0, #0x1f40                	// #8000
  42b064:	cmp	x20, x0
  42b068:	csel	x24, x20, x0, cs  // cs = hs, nlast
  42b06c:	add	x24, x24, #0x7
  42b070:	and	x24, x24, #0xfffffffffffffff8
  42b074:	add	x0, x24, #0x20
  42b078:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42b07c:	mov	x3, x0
  42b080:	add	x0, x0, x24
  42b084:	ldr	w19, [x21]
  42b088:	stp	x3, x3, [x0, #8]
  42b08c:	str	x0, [x0, #24]
  42b090:	str	xzr, [x3, x24]
  42b094:	ldr	x1, [x26, #64]
  42b098:	str	x1, [x0]
  42b09c:	str	x0, [x26, #64]
  42b0a0:	b	42afe0 <ferror@plt+0x28760>
  42b0a4:	ldr	x1, [x0]
  42b0a8:	str	x1, [x2]
  42b0ac:	str	xzr, [x0]
  42b0b0:	str	x3, [x0, #16]
  42b0b4:	b	42b094 <ferror@plt+0x28814>
  42b0b8:	ldrb	w2, [x0, #4]
  42b0bc:	cmp	w2, #0x35
  42b0c0:	b.ne	42b0e8 <ferror@plt+0x28868>  // b.any
  42b0c4:	stp	x29, x30, [sp, #-16]!
  42b0c8:	mov	x29, sp
  42b0cc:	ldr	x0, [x0, #8]
  42b0d0:	ldr	x0, [x0]
  42b0d4:	bl	4025d0 <strcmp@plt>
  42b0d8:	cmp	w0, #0x0
  42b0dc:	cset	w0, eq  // eq = none
  42b0e0:	ldp	x29, x30, [sp], #16
  42b0e4:	ret
  42b0e8:	mov	w0, #0x0                   	// #0
  42b0ec:	ret
  42b0f0:	ret
  42b0f4:	nop
  42b0f8:	stp	x29, x30, [sp, #-112]!
  42b0fc:	mov	x29, sp
  42b100:	stp	x21, x22, [sp, #32]
  42b104:	ldr	x21, [x0]
  42b108:	stp	x19, x20, [sp, #16]
  42b10c:	stp	x23, x24, [sp, #48]
  42b110:	mov	x23, x0
  42b114:	ldrb	w0, [x21, #105]
  42b118:	ldr	x20, [x21, #16]
  42b11c:	str	xzr, [x21, #56]
  42b120:	strb	wzr, [x21, #104]
  42b124:	dup	v0.2d, x20
  42b128:	str	q0, [x21]
  42b12c:	tbnz	w0, #1, 42b2a0 <ferror@plt+0x28a20>
  42b130:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  42b134:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  42b138:	stp	x25, x26, [sp, #64]
  42b13c:	mov	x22, #0x1000                	// #4096
  42b140:	mov	x26, #0x0                   	// #0
  42b144:	ldr	q16, [x1, #528]
  42b148:	ldr	q17, [x0, #512]
  42b14c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  42b150:	add	x25, x0, #0x7b0
  42b154:	and	x0, x20, #0xfff
  42b158:	and	x2, x20, #0xfffffffffffffff0
  42b15c:	sub	x0, x22, x0
  42b160:	mov	x1, x2
  42b164:	movi	v1.16b, #0xa
  42b168:	cmp	x0, #0xf
  42b16c:	b.ls	42b360 <ferror@plt+0x28ae0>  // b.plast
  42b170:	movi	v0.16b, #0xd
  42b174:	ldr	q2, [x20]
  42b178:	movi	v3.16b, #0x5c
  42b17c:	movi	v4.16b, #0x3f
  42b180:	cmeq	v1.16b, v2.16b, v1.16b
  42b184:	cmeq	v0.16b, v2.16b, v0.16b
  42b188:	cmeq	v3.16b, v2.16b, v3.16b
  42b18c:	cmeq	v2.16b, v2.16b, v4.16b
  42b190:	orr	v0.16b, v1.16b, v0.16b
  42b194:	orr	v0.16b, v0.16b, v3.16b
  42b198:	orr	v0.16b, v0.16b, v2.16b
  42b19c:	addp	d1, v0.2d
  42b1a0:	fmov	x0, d1
  42b1a4:	cbnz	x0, 42b1e8 <ferror@plt+0x28968>
  42b1a8:	movi	v7.16b, #0xa
  42b1ac:	movi	v6.16b, #0xd
  42b1b0:	movi	v5.16b, #0x5c
  42b1b4:	movi	v4.16b, #0x3f
  42b1b8:	ldr	q1, [x1, #16]!
  42b1bc:	cmeq	v0.16b, v1.16b, v7.16b
  42b1c0:	cmeq	v3.16b, v1.16b, v6.16b
  42b1c4:	cmeq	v2.16b, v1.16b, v5.16b
  42b1c8:	cmeq	v1.16b, v1.16b, v4.16b
  42b1cc:	orr	v0.16b, v0.16b, v3.16b
  42b1d0:	orr	v0.16b, v0.16b, v2.16b
  42b1d4:	orr	v0.16b, v0.16b, v1.16b
  42b1d8:	addp	d1, v0.2d
  42b1dc:	fmov	x2, d1
  42b1e0:	cbz	x2, 42b1b8 <ferror@plt+0x28938>
  42b1e4:	mov	x2, x1
  42b1e8:	and	v0.16b, v0.16b, v17.16b
  42b1ec:	cmp	x20, x2
  42b1f0:	uaddlp	v0.8h, v0.16b
  42b1f4:	ushl	v0.8h, v0.8h, v16.8h
  42b1f8:	csel	x20, x20, x1, hi  // hi = pmore
  42b1fc:	addv	h0, v0.8h
  42b200:	umov	w19, v0.h[0]
  42b204:	rbit	w19, w19
  42b208:	clz	w19, w19
  42b20c:	add	x19, x20, w19, sxtw
  42b210:	mov	x20, x19
  42b214:	ldrb	w0, [x20], #1
  42b218:	cmp	w0, #0x5c
  42b21c:	b.eq	42b348 <ferror@plt+0x28ac8>  // b.none
  42b220:	cmp	w0, #0x3f
  42b224:	b.eq	42b338 <ferror@plt+0x28ab8>  // b.none
  42b228:	ldr	x1, [x21, #32]
  42b22c:	cmp	x1, x19
  42b230:	b.eq	42b57c <ferror@plt+0x28cfc>  // b.none
  42b234:	stp	x27, x28, [sp, #80]
  42b238:	cmp	w0, #0xd
  42b23c:	mov	x22, x20
  42b240:	mov	x27, x19
  42b244:	b.eq	42b3c4 <ferror@plt+0x28b44>  // b.none
  42b248:	cbnz	x26, 42b588 <ferror@plt+0x28d08>
  42b24c:	ldp	x25, x26, [sp, #64]
  42b250:	ldp	x27, x28, [sp, #80]
  42b254:	mov	w0, #0xa                   	// #10
  42b258:	strb	w0, [x19]
  42b25c:	ldp	w1, w0, [x21, #60]
  42b260:	cmp	w1, w0
  42b264:	b.eq	42b310 <ferror@plt+0x28a90>  // b.none
  42b268:	ldr	x0, [x21, #48]
  42b26c:	ubfiz	x2, x1, #4, #32
  42b270:	add	x3, x0, x2
  42b274:	mov	w4, #0xa                   	// #10
  42b278:	ldp	x23, x24, [sp, #48]
  42b27c:	str	x20, [x0, x2]
  42b280:	ldp	x19, x20, [sp, #16]
  42b284:	str	w4, [x3, #8]
  42b288:	add	w1, w1, #0x1
  42b28c:	str	x22, [x21, #16]
  42b290:	str	w1, [x21, #60]
  42b294:	ldp	x21, x22, [sp, #32]
  42b298:	ldp	x29, x30, [sp], #112
  42b29c:	ret
  42b2a0:	ldrb	w0, [x20]
  42b2a4:	cmp	w0, #0xa
  42b2a8:	b.ne	42b2c8 <ferror@plt+0x28a48>  // b.any
  42b2ac:	add	x22, x20, #0x1
  42b2b0:	mov	x19, x20
  42b2b4:	mov	x20, x22
  42b2b8:	b	42b254 <ferror@plt+0x289d4>
  42b2bc:	ldrb	w0, [x20]
  42b2c0:	cmp	w0, #0xa
  42b2c4:	b.eq	42b350 <ferror@plt+0x28ad0>  // b.none
  42b2c8:	mov	x19, x20
  42b2cc:	cmp	w0, #0xd
  42b2d0:	add	x20, x20, #0x1
  42b2d4:	b.ne	42b2bc <ferror@plt+0x28a3c>  // b.any
  42b2d8:	ldr	x0, [x21, #32]
  42b2dc:	mov	x22, x20
  42b2e0:	cmp	x0, x19
  42b2e4:	b.eq	42b254 <ferror@plt+0x289d4>  // b.none
  42b2e8:	ldrb	w0, [x19, #1]
  42b2ec:	add	x22, x19, #0x2
  42b2f0:	cmp	w0, #0xa
  42b2f4:	mov	w0, #0xa                   	// #10
  42b2f8:	strb	w0, [x19]
  42b2fc:	csel	x22, x22, x20, eq  // eq = none
  42b300:	ldp	w1, w0, [x21, #60]
  42b304:	cmp	w1, w0
  42b308:	b.ne	42b268 <ferror@plt+0x289e8>  // b.any
  42b30c:	nop
  42b310:	add	w1, w1, #0x64
  42b314:	ldr	x0, [x21, #48]
  42b318:	lsl	w1, w1, #1
  42b31c:	mov	x2, x1
  42b320:	str	w2, [x21, #64]
  42b324:	lsl	x1, x1, #4
  42b328:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  42b32c:	str	x0, [x21, #48]
  42b330:	ldr	w1, [x21, #60]
  42b334:	b	42b26c <ferror@plt+0x289ec>
  42b338:	ldrb	w0, [x19, #1]
  42b33c:	cmp	w0, #0x3f
  42b340:	b.eq	42b3e4 <ferror@plt+0x28b64>  // b.none
  42b344:	mov	x19, x26
  42b348:	mov	x26, x19
  42b34c:	b	42b154 <ferror@plt+0x288d4>
  42b350:	add	x22, x19, #0x2
  42b354:	mov	x19, x20
  42b358:	mov	x20, x22
  42b35c:	b	42b254 <ferror@plt+0x289d4>
  42b360:	movi	v0.16b, #0xd
  42b364:	and	w0, w20, #0xf
  42b368:	ldr	q2, [x2]
  42b36c:	mov	w3, #0xffffffff            	// #-1
  42b370:	movi	v3.16b, #0x5c
  42b374:	lsl	w3, w3, w0
  42b378:	movi	v4.16b, #0x3f
  42b37c:	cmeq	v1.16b, v2.16b, v1.16b
  42b380:	cmeq	v0.16b, v2.16b, v0.16b
  42b384:	cmeq	v3.16b, v2.16b, v3.16b
  42b388:	cmeq	v2.16b, v2.16b, v4.16b
  42b38c:	orr	v0.16b, v1.16b, v0.16b
  42b390:	orr	v0.16b, v0.16b, v3.16b
  42b394:	orr	v0.16b, v0.16b, v2.16b
  42b398:	and	v0.16b, v0.16b, v17.16b
  42b39c:	uaddlp	v0.8h, v0.16b
  42b3a0:	ushl	v0.8h, v0.8h, v16.8h
  42b3a4:	addv	h0, v0.8h
  42b3a8:	umov	w0, v0.h[0]
  42b3ac:	ands	w0, w3, w0
  42b3b0:	b.eq	42b1a8 <ferror@plt+0x28928>  // b.none
  42b3b4:	rbit	w0, w0
  42b3b8:	clz	w0, w0
  42b3bc:	add	x19, x2, w0, sxtw
  42b3c0:	b	42b210 <ferror@plt+0x28990>
  42b3c4:	ldrb	w0, [x19, #1]
  42b3c8:	cmp	w0, #0xa
  42b3cc:	b.ne	42b248 <ferror@plt+0x289c8>  // b.any
  42b3d0:	cmp	x1, x20
  42b3d4:	add	x22, x19, #0x2
  42b3d8:	b.eq	42b24c <ferror@plt+0x289cc>  // b.none
  42b3dc:	mov	x27, x20
  42b3e0:	b	42b248 <ferror@plt+0x289c8>
  42b3e4:	ldrb	w24, [x19, #2]
  42b3e8:	ldrb	w0, [x25, w24, sxtw]
  42b3ec:	cbz	w0, 42b344 <ferror@plt+0x28ac4>
  42b3f0:	ldp	w1, w2, [x21, #60]
  42b3f4:	ldr	x0, [x21, #48]
  42b3f8:	cmp	w1, w2
  42b3fc:	b.eq	42b6e0 <ferror@plt+0x28e60>  // b.none
  42b400:	ubfiz	x2, x1, #4, #32
  42b404:	add	w1, w1, #0x1
  42b408:	add	x3, x0, x2
  42b40c:	str	x19, [x0, x2]
  42b410:	str	w24, [x3, #8]
  42b414:	str	w1, [x21, #60]
  42b418:	ldrb	w0, [x23, #1125]
  42b41c:	cbz	w0, 42b344 <ferror@plt+0x28ac4>
  42b420:	stp	x27, x28, [sp, #80]
  42b424:	mov	x27, x19
  42b428:	mov	x24, x19
  42b42c:	ldrb	w0, [x19, #2]
  42b430:	ldrb	w0, [x25, x0]
  42b434:	strb	w0, [x27], #2
  42b438:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  42b43c:	add	x0, x22, #0x7b0
  42b440:	str	x0, [sp, #104]
  42b444:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42b448:	ldrb	w0, [x27, #1]
  42b44c:	add	x25, x25, #0x2c0
  42b450:	mov	w22, #0x20                  	// #32
  42b454:	nop
  42b458:	strb	w0, [x24, #1]
  42b45c:	cmp	w0, #0xa
  42b460:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42b464:	add	x26, x27, #0x1
  42b468:	add	x19, x24, #0x1
  42b46c:	b.ne	42b51c <ferror@plt+0x28c9c>  // b.any
  42b470:	cmp	w0, #0xd
  42b474:	ldr	x0, [x21, #32]
  42b478:	b.eq	42b548 <ferror@plt+0x28cc8>  // b.none
  42b47c:	cmp	x26, x0
  42b480:	b.eq	42b534 <ferror@plt+0x28cb4>  // b.none
  42b484:	ldr	x2, [x21, #16]
  42b488:	cmp	x2, x19
  42b48c:	b.eq	42b534 <ferror@plt+0x28cb4>  // b.none
  42b490:	mov	x20, x19
  42b494:	b	42b4a4 <ferror@plt+0x28c24>
  42b498:	sub	x20, x20, #0x1
  42b49c:	cmp	x2, x20
  42b4a0:	b.eq	42b534 <ferror@plt+0x28cb4>  // b.none
  42b4a4:	ldurb	w0, [x20, #-1]
  42b4a8:	ldrh	w1, [x25, w0, sxtw #1]
  42b4ac:	tbnz	w1, #11, 42b498 <ferror@plt+0x28c18>
  42b4b0:	cmp	x2, x20
  42b4b4:	b.eq	42b534 <ferror@plt+0x28cb4>  // b.none
  42b4b8:	cmp	w0, #0x5c
  42b4bc:	b.ne	42b534 <ferror@plt+0x28cb4>  // b.any
  42b4c0:	ldp	w1, w2, [x21, #60]
  42b4c4:	cmp	x19, x20
  42b4c8:	csel	w19, w22, w0, ne  // ne = any
  42b4cc:	sub	x28, x20, #0x1
  42b4d0:	cmp	w1, w2
  42b4d4:	ldr	x0, [x21, #48]
  42b4d8:	b.eq	42b604 <ferror@plt+0x28d84>  // b.none
  42b4dc:	ubfiz	x2, x1, #4, #32
  42b4e0:	sub	x24, x20, #0x2
  42b4e4:	add	x4, x0, x2
  42b4e8:	add	w1, w1, #0x1
  42b4ec:	mov	x27, x26
  42b4f0:	str	x28, [x0, x2]
  42b4f4:	str	w19, [x4, #8]
  42b4f8:	add	x19, x24, #0x1
  42b4fc:	str	x28, [x21, #16]
  42b500:	str	w1, [x21, #60]
  42b504:	ldrb	w0, [x26, #1]
  42b508:	add	x26, x27, #0x1
  42b50c:	strb	w0, [x24, #1]
  42b510:	cmp	w0, #0xa
  42b514:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42b518:	b.eq	42b470 <ferror@plt+0x28bf0>  // b.none
  42b51c:	cmp	w0, #0x3f
  42b520:	b.eq	42b564 <ferror@plt+0x28ce4>  // b.none
  42b524:	ldrb	w0, [x27, #2]
  42b528:	mov	x24, x19
  42b52c:	mov	x27, x26
  42b530:	b	42b458 <ferror@plt+0x28bd8>
  42b534:	add	x22, x26, #0x1
  42b538:	add	x20, x24, #0x2
  42b53c:	ldp	x25, x26, [sp, #64]
  42b540:	ldp	x27, x28, [sp, #80]
  42b544:	b	42b254 <ferror@plt+0x289d4>
  42b548:	cmp	x26, x0
  42b54c:	b.eq	42b534 <ferror@plt+0x28cb4>  // b.none
  42b550:	ldrb	w1, [x27, #2]
  42b554:	cmp	w1, #0xa
  42b558:	b.ne	42b484 <ferror@plt+0x28c04>  // b.any
  42b55c:	add	x26, x27, #0x2
  42b560:	b	42b47c <ferror@plt+0x28bfc>
  42b564:	ldrb	w0, [x27, #2]
  42b568:	cmp	w0, #0x3f
  42b56c:	b.eq	42b624 <ferror@plt+0x28da4>  // b.none
  42b570:	mov	x24, x19
  42b574:	mov	x27, x26
  42b578:	b	42b458 <ferror@plt+0x28bd8>
  42b57c:	mov	x22, x20
  42b580:	ldp	x25, x26, [sp, #64]
  42b584:	b	42b254 <ferror@plt+0x289d4>
  42b588:	ldurb	w0, [x19, #-1]
  42b58c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42b590:	add	x1, x1, #0x2c0
  42b594:	ldrh	w0, [x1, x0, lsl #1]
  42b598:	tbz	w0, #11, 42b688 <ferror@plt+0x28e08>
  42b59c:	mov	x24, x19
  42b5a0:	mov	x2, x24
  42b5a4:	sub	x24, x24, #0x1
  42b5a8:	ldurb	w0, [x24, #-1]
  42b5ac:	ldrh	w0, [x1, x0, lsl #1]
  42b5b0:	tbnz	w0, #11, 42b5a0 <ferror@plt+0x28d20>
  42b5b4:	sub	x2, x2, #0x2
  42b5b8:	cmp	x26, x2
  42b5bc:	b.ne	42b24c <ferror@plt+0x289cc>  // b.any
  42b5c0:	cmp	x24, x19
  42b5c4:	mov	w0, #0x5c                  	// #92
  42b5c8:	mov	w19, #0x20                  	// #32
  42b5cc:	csel	w19, w19, w0, ne  // ne = any
  42b5d0:	ldp	w1, w2, [x21, #60]
  42b5d4:	ldr	x0, [x21, #48]
  42b5d8:	cmp	w1, w2
  42b5dc:	b.eq	42b6a0 <ferror@plt+0x28e20>  // b.none
  42b5e0:	ubfiz	x2, x1, #4, #32
  42b5e4:	sub	x24, x24, #0x2
  42b5e8:	add	x3, x0, x2
  42b5ec:	add	w1, w1, #0x1
  42b5f0:	str	x26, [x0, x2]
  42b5f4:	str	w19, [x3, #8]
  42b5f8:	str	x26, [x21, #16]
  42b5fc:	str	w1, [x21, #60]
  42b600:	b	42b438 <ferror@plt+0x28bb8>
  42b604:	add	w1, w1, #0x64
  42b608:	lsl	w1, w1, #1
  42b60c:	str	w1, [x21, #64]
  42b610:	lsl	x1, x1, #4
  42b614:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  42b618:	ldr	w1, [x21, #60]
  42b61c:	str	x0, [x21, #48]
  42b620:	b	42b4dc <ferror@plt+0x28c5c>
  42b624:	ldrb	w20, [x27, #3]
  42b628:	ldr	x1, [sp, #104]
  42b62c:	ldrb	w1, [x1, w20, sxtw]
  42b630:	cbz	w1, 42b570 <ferror@plt+0x28cf0>
  42b634:	ldp	w1, w2, [x21, #60]
  42b638:	ldr	x0, [x21, #48]
  42b63c:	cmp	w1, w2
  42b640:	b.eq	42b6c0 <ferror@plt+0x28e40>  // b.none
  42b644:	ubfiz	x2, x1, #4, #32
  42b648:	add	w1, w1, #0x1
  42b64c:	add	x4, x0, x2
  42b650:	str	x19, [x0, x2]
  42b654:	str	w20, [x4, #8]
  42b658:	str	w1, [x21, #60]
  42b65c:	ldrb	w0, [x23, #1125]
  42b660:	cbz	w0, 42b524 <ferror@plt+0x28ca4>
  42b664:	mov	x1, x27
  42b668:	ldr	x2, [sp, #104]
  42b66c:	ldrb	w0, [x1, #3]!
  42b670:	ldrb	w0, [x2, w0, sxtw]
  42b674:	strb	w0, [x24, #1]
  42b678:	mov	x24, x19
  42b67c:	ldrb	w0, [x27, #4]
  42b680:	mov	x27, x1
  42b684:	b	42b458 <ferror@plt+0x28bd8>
  42b688:	sub	x0, x19, #0x1
  42b68c:	cmp	x26, x0
  42b690:	b.ne	42b24c <ferror@plt+0x289cc>  // b.any
  42b694:	mov	x24, x19
  42b698:	mov	w19, #0x5c                  	// #92
  42b69c:	b	42b5d0 <ferror@plt+0x28d50>
  42b6a0:	add	w1, w1, #0x64
  42b6a4:	lsl	w1, w1, #1
  42b6a8:	str	w1, [x21, #64]
  42b6ac:	lsl	x1, x1, #4
  42b6b0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  42b6b4:	ldr	w1, [x21, #60]
  42b6b8:	str	x0, [x21, #48]
  42b6bc:	b	42b5e0 <ferror@plt+0x28d60>
  42b6c0:	add	w1, w1, #0x64
  42b6c4:	lsl	w1, w1, #1
  42b6c8:	str	w1, [x21, #64]
  42b6cc:	lsl	x1, x1, #4
  42b6d0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  42b6d4:	ldr	w1, [x21, #60]
  42b6d8:	str	x0, [x21, #48]
  42b6dc:	b	42b644 <ferror@plt+0x28dc4>
  42b6e0:	add	w1, w1, #0x64
  42b6e4:	lsl	w1, w1, #1
  42b6e8:	str	w1, [x21, #64]
  42b6ec:	lsl	x1, x1, #4
  42b6f0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  42b6f4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  42b6f8:	ldr	w1, [x21, #60]
  42b6fc:	str	x0, [x21, #48]
  42b700:	ldr	q16, [x2, #528]
  42b704:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  42b708:	ldr	q17, [x2, #512]
  42b70c:	b	42b400 <ferror@plt+0x28b80>
  42b710:	stp	x29, x30, [sp, #-80]!
  42b714:	mov	x29, sp
  42b718:	stp	x19, x20, [sp, #16]
  42b71c:	ldr	x19, [x0]
  42b720:	stp	x25, x26, [sp, #64]
  42b724:	mov	x25, x0
  42b728:	stp	x23, x24, [sp, #48]
  42b72c:	mov	w23, w1
  42b730:	ldr	w2, [x19, #56]
  42b734:	ldr	x4, [x19, #48]
  42b738:	ubfiz	x0, x2, #4, #32
  42b73c:	ldr	x7, [x19]
  42b740:	add	x26, x4, x0
  42b744:	ldr	x1, [x4, x0]
  42b748:	cmp	x7, x1
  42b74c:	b.cc	42b870 <ferror@plt+0x28ff0>  // b.lo, b.ul, b.last
  42b750:	adrp	x24, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42b754:	add	x24, x24, #0x1c8
  42b758:	stp	x21, x22, [sp, #32]
  42b75c:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  42b760:	mov	w21, #0x18                  	// #24
  42b764:	add	x22, x22, #0x7b0
  42b768:	b	42b7d4 <ferror@plt+0x28f54>
  42b76c:	cmp	w5, #0x20
  42b770:	b.eq	42b884 <ferror@plt+0x29004>  // b.none
  42b774:	ldrb	w6, [x22, w5, uxtw]
  42b778:	cbz	w6, 42b8b0 <ferror@plt+0x29030>
  42b77c:	ldrb	w0, [x25, #1136]
  42b780:	cbz	w0, 42b7c0 <ferror@plt+0x28f40>
  42b784:	cbnz	w23, 42b8f8 <ferror@plt+0x29078>
  42b788:	ldrb	w0, [x25, #1125]
  42b78c:	ldr	x1, [x25, #40]
  42b790:	ldr	w2, [x1, #60]
  42b794:	cbz	w0, 42b940 <ferror@plt+0x290c0>
  42b798:	mov	w3, w20
  42b79c:	mov	x0, x25
  42b7a0:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42b7a4:	mov	w1, #0x4                   	// #4
  42b7a8:	add	x4, x4, #0x220
  42b7ac:	bl	423308 <ferror@plt+0x20a88>
  42b7b0:	ldr	w2, [x19, #56]
  42b7b4:	ldr	x7, [x19]
  42b7b8:	ldr	x4, [x19, #48]
  42b7bc:	nop
  42b7c0:	ubfiz	x0, x2, #4, #32
  42b7c4:	add	x26, x4, x0
  42b7c8:	ldr	x1, [x4, x0]
  42b7cc:	cmp	x1, x7
  42b7d0:	b.hi	42b86c <ferror@plt+0x28fec>  // b.pmore
  42b7d4:	ldr	x20, [x19, #8]
  42b7d8:	add	w2, w2, #0x1
  42b7dc:	ldr	w5, [x26, #8]
  42b7e0:	add	x3, x1, #0x1
  42b7e4:	str	w2, [x19, #56]
  42b7e8:	sub	x20, x3, x20
  42b7ec:	cmp	w5, #0x5c
  42b7f0:	b.ne	42b76c <ferror@plt+0x28eec>  // b.any
  42b7f4:	ldr	x0, [x25, #40]
  42b7f8:	ldr	w4, [x0, #60]
  42b7fc:	ldr	x2, [x19, #16]
  42b800:	ldr	x1, [x19, #32]
  42b804:	cmp	x2, x1
  42b808:	b.hi	42b8cc <ferror@plt+0x2904c>  // b.pmore
  42b80c:	ldr	w3, [x0, #12]
  42b810:	ldr	x1, [x0]
  42b814:	sub	w3, w3, #0x1
  42b818:	ldr	x2, [x26]
  42b81c:	smull	x3, w3, w21
  42b820:	add	x5, x1, x3
  42b824:	ldr	w6, [x1, x3]
  42b828:	ldrb	w3, [x5, #6]
  42b82c:	sub	w4, w4, w6
  42b830:	ldr	w1, [x5, #16]
  42b834:	str	x2, [x19, #8]
  42b838:	mov	w2, #0x0                   	// #0
  42b83c:	lsr	w4, w4, w3
  42b840:	add	w1, w1, #0x1
  42b844:	add	w1, w4, w1
  42b848:	bl	431640 <ferror@plt+0x2edc0>
  42b84c:	ldr	w2, [x19, #56]
  42b850:	ldr	x4, [x19, #48]
  42b854:	ubfiz	x0, x2, #4, #32
  42b858:	ldr	x7, [x19]
  42b85c:	add	x26, x4, x0
  42b860:	ldr	x1, [x4, x0]
  42b864:	cmp	x1, x7
  42b868:	b.ls	42b7d4 <ferror@plt+0x28f54>  // b.plast
  42b86c:	ldp	x21, x22, [sp, #32]
  42b870:	ldp	x19, x20, [sp, #16]
  42b874:	ldp	x23, x24, [sp, #48]
  42b878:	ldp	x25, x26, [sp, #64]
  42b87c:	ldp	x29, x30, [sp], #80
  42b880:	ret
  42b884:	ldr	x0, [x25, #40]
  42b888:	ldr	w4, [x0, #60]
  42b88c:	cbnz	w23, 42b7fc <ferror@plt+0x28f7c>
  42b890:	mov	w2, w4
  42b894:	mov	w3, w20
  42b898:	mov	x0, x25
  42b89c:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42b8a0:	mov	w1, #0x0                   	// #0
  42b8a4:	add	x4, x4, #0x3c8
  42b8a8:	bl	423290 <ferror@plt+0x20a10>
  42b8ac:	b	42b7f4 <ferror@plt+0x28f74>
  42b8b0:	cbz	w5, 42b7c0 <ferror@plt+0x28f40>
  42b8b4:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42b8b8:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42b8bc:	add	x2, x2, #0x1f0
  42b8c0:	add	x0, x0, #0x208
  42b8c4:	mov	w1, #0x48b                 	// #1163
  42b8c8:	bl	4028b0 <ferror@plt+0x30>
  42b8cc:	mov	w2, w4
  42b8d0:	mov	w1, #0x2                   	// #2
  42b8d4:	mov	x4, x24
  42b8d8:	mov	w3, w20
  42b8dc:	mov	x0, x25
  42b8e0:	bl	423290 <ferror@plt+0x20a10>
  42b8e4:	ldr	x0, [x25, #40]
  42b8e8:	ldr	x1, [x19, #32]
  42b8ec:	ldr	w4, [x0, #60]
  42b8f0:	str	x1, [x19, #16]
  42b8f4:	b	42b80c <ferror@plt+0x28f8c>
  42b8f8:	cmp	w5, #0x2f
  42b8fc:	b.ne	42b7c0 <ferror@plt+0x28f40>  // b.any
  42b900:	ldrb	w0, [x25, #1125]
  42b904:	cbnz	w0, 42b984 <ferror@plt+0x29104>
  42b908:	ldrb	w0, [x1, #3]
  42b90c:	adrp	x6, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42b910:	add	x6, x6, #0x2c0
  42b914:	add	x1, x1, #0x3
  42b918:	ldrh	w3, [x6, w0, sxtw #1]
  42b91c:	tbnz	w3, #11, 42b968 <ferror@plt+0x290e8>
  42b920:	cmp	w0, #0xa
  42b924:	b.ne	42b7c0 <ferror@plt+0x28f40>  // b.any
  42b928:	ldr	x0, [x26, #16]
  42b92c:	cmp	x0, x1
  42b930:	b.ls	42b7c0 <ferror@plt+0x28f40>  // b.plast
  42b934:	ldr	x0, [x25, #40]
  42b938:	ldr	w2, [x0, #60]
  42b93c:	nop
  42b940:	mov	w3, w20
  42b944:	mov	x0, x25
  42b948:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42b94c:	mov	w1, #0x4                   	// #4
  42b950:	add	x4, x4, #0x240
  42b954:	bl	423308 <ferror@plt+0x20a88>
  42b958:	ldr	w2, [x19, #56]
  42b95c:	ldr	x7, [x19]
  42b960:	ldr	x4, [x19, #48]
  42b964:	b	42b7c0 <ferror@plt+0x28f40>
  42b968:	ldrb	w0, [x1, #1]!
  42b96c:	ldrh	w3, [x6, w0, sxtw #1]
  42b970:	tbz	w3, #11, 42b920 <ferror@plt+0x290a0>
  42b974:	ldrb	w0, [x1, #1]!
  42b978:	ldrh	w3, [x6, w0, sxtw #1]
  42b97c:	tbnz	w3, #11, 42b968 <ferror@plt+0x290e8>
  42b980:	b	42b920 <ferror@plt+0x290a0>
  42b984:	ldr	x0, [x26, #16]
  42b988:	cmp	x0, x1
  42b98c:	b.ne	42b7c0 <ferror@plt+0x28f40>  // b.any
  42b990:	ldr	x0, [x25, #40]
  42b994:	ldr	w2, [x0, #60]
  42b998:	b	42b798 <ferror@plt+0x28f18>
  42b99c:	nop
  42b9a0:	stp	x29, x30, [sp, #-64]!
  42b9a4:	mov	x29, sp
  42b9a8:	stp	x21, x22, [sp, #32]
  42b9ac:	mov	x22, x0
  42b9b0:	ldr	x21, [x0]
  42b9b4:	stp	x19, x20, [sp, #16]
  42b9b8:	stp	x23, x24, [sp, #48]
  42b9bc:	ldr	x19, [x21]
  42b9c0:	ldrb	w1, [x19, #1]
  42b9c4:	cmp	w1, #0x2f
  42b9c8:	b.eq	42bb0c <ferror@plt+0x2928c>  // b.none
  42b9cc:	add	x19, x19, #0x1
  42b9d0:	adrp	x24, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42b9d4:	add	x24, x24, #0x3f8
  42b9d8:	mov	w23, #0x18                  	// #24
  42b9dc:	nop
  42b9e0:	cmp	w1, #0x2f
  42b9e4:	add	x20, x19, #0x1
  42b9e8:	b.eq	42ba08 <ferror@plt+0x29188>  // b.none
  42b9ec:	cmp	w1, #0xa
  42b9f0:	b.eq	42ba30 <ferror@plt+0x291b0>  // b.none
  42b9f4:	ldrb	w1, [x19, #1]
  42b9f8:	mov	x19, x20
  42b9fc:	add	x20, x19, #0x1
  42ba00:	cmp	w1, #0x2f
  42ba04:	b.ne	42b9ec <ferror@plt+0x2916c>  // b.any
  42ba08:	ldurb	w0, [x19, #-1]
  42ba0c:	cmp	w0, #0x2a
  42ba10:	b.eq	42bae8 <ferror@plt+0x29268>  // b.none
  42ba14:	ldrb	w0, [x22, #1133]
  42ba18:	cbz	w0, 42b9f4 <ferror@plt+0x29174>
  42ba1c:	ldrb	w1, [x19, #1]
  42ba20:	cmp	w1, #0x2a
  42ba24:	b.eq	42baa4 <ferror@plt+0x29224>  // b.none
  42ba28:	mov	x19, x20
  42ba2c:	b	42b9e0 <ferror@plt+0x29160>
  42ba30:	str	x19, [x21]
  42ba34:	mov	x0, x22
  42ba38:	bl	42a938 <ferror@plt+0x280b8>
  42ba3c:	ldr	x1, [x21, #16]
  42ba40:	ldr	x0, [x21, #32]
  42ba44:	cmp	x1, x0
  42ba48:	b.cs	42bb18 <ferror@plt+0x29298>  // b.hs, b.nlast
  42ba4c:	mov	x0, x22
  42ba50:	bl	42b0f8 <ferror@plt+0x28878>
  42ba54:	ldr	x0, [x22, #40]
  42ba58:	ldp	x2, x6, [x21, #8]
  42ba5c:	ldr	w1, [x0, #12]
  42ba60:	ldr	x5, [x0]
  42ba64:	sub	w1, w1, #0x1
  42ba68:	ldr	w3, [x0, #60]
  42ba6c:	sub	w2, w6, w2
  42ba70:	smull	x1, w1, w23
  42ba74:	add	x4, x5, x1
  42ba78:	ldr	w6, [x5, x1]
  42ba7c:	ldrb	w5, [x4, #6]
  42ba80:	sub	w3, w3, w6
  42ba84:	ldr	w1, [x4, #16]
  42ba88:	lsr	w3, w3, w5
  42ba8c:	add	w1, w1, #0x1
  42ba90:	add	w1, w3, w1
  42ba94:	bl	431640 <ferror@plt+0x2edc0>
  42ba98:	ldr	x19, [x21]
  42ba9c:	ldrb	w1, [x19]
  42baa0:	b	42b9e0 <ferror@plt+0x29160>
  42baa4:	ldrb	w0, [x19, #2]
  42baa8:	cmp	w0, #0x2f
  42baac:	b.ne	42bac0 <ferror@plt+0x29240>  // b.any
  42bab0:	add	x0, x19, #0x2
  42bab4:	mov	x19, x20
  42bab8:	mov	x20, x0
  42babc:	b	42b9f4 <ferror@plt+0x29174>
  42bac0:	ldr	x0, [x22, #40]
  42bac4:	mov	x4, x24
  42bac8:	ldr	x3, [x21, #8]
  42bacc:	mov	w1, #0x2                   	// #2
  42bad0:	ldr	w2, [x0, #60]
  42bad4:	mov	x0, x22
  42bad8:	str	x20, [x21]
  42badc:	sub	w3, w20, w3
  42bae0:	bl	423308 <ferror@plt+0x20a88>
  42bae4:	b	42b9f4 <ferror@plt+0x29174>
  42bae8:	str	x20, [x21]
  42baec:	mov	x0, x22
  42baf0:	bl	42a938 <ferror@plt+0x280b8>
  42baf4:	mov	w0, #0x0                   	// #0
  42baf8:	ldp	x19, x20, [sp, #16]
  42bafc:	ldp	x21, x22, [sp, #32]
  42bb00:	ldp	x23, x24, [sp, #48]
  42bb04:	ldp	x29, x30, [sp], #64
  42bb08:	ret
  42bb0c:	ldrb	w1, [x19, #2]
  42bb10:	add	x19, x19, #0x2
  42bb14:	b	42b9d0 <ferror@plt+0x29150>
  42bb18:	mov	w0, #0x1                   	// #1
  42bb1c:	ldp	x19, x20, [sp, #16]
  42bb20:	ldp	x21, x22, [sp, #32]
  42bb24:	ldp	x23, x24, [sp, #48]
  42bb28:	ldp	x29, x30, [sp], #64
  42bb2c:	ret
  42bb30:	stp	x29, x30, [sp, #-32]!
  42bb34:	mov	x2, x1
  42bb38:	adrp	x5, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42bb3c:	mov	x29, sp
  42bb40:	stp	x19, x20, [sp, #16]
  42bb44:	add	x5, x5, #0x2c0
  42bb48:	mov	x20, x0
  42bb4c:	ldrb	w4, [x1, #1]
  42bb50:	mov	w6, #0x204                 	// #516
  42bb54:	ldrb	w3, [x2], #1
  42bb58:	sub	w3, w3, #0x71
  42bb5c:	ldrh	w0, [x5, w4, sxtw #1]
  42bb60:	tst	w6, w0
  42bb64:	b.eq	42bbc4 <ferror@plt+0x29344>  // b.none
  42bb68:	mov	w7, #0x43                  	// #67
  42bb6c:	nop
  42bb70:	madd	w3, w3, w7, w4
  42bb74:	ldrb	w4, [x2, #1]!
  42bb78:	sub	w3, w3, #0x71
  42bb7c:	ldrh	w0, [x5, w4, sxtw #1]
  42bb80:	tst	w6, w0
  42bb84:	b.ne	42bb70 <ferror@plt+0x292f0>  // b.any
  42bb88:	ldr	x0, [x20, #1088]
  42bb8c:	sub	x2, x2, x1
  42bb90:	mov	w4, w2
  42bb94:	and	x2, x2, #0xffffffff
  42bb98:	add	w3, w3, w4
  42bb9c:	mov	w4, #0x1                   	// #1
  42bba0:	bl	43b210 <ferror@plt+0x38990>
  42bba4:	mov	x19, x0
  42bba8:	ldrh	w0, [x0, #18]
  42bbac:	ubfx	x1, x0, #2, #8
  42bbb0:	tbnz	w0, #4, 42bbf0 <ferror@plt+0x29370>
  42bbb4:	mov	x0, x19
  42bbb8:	ldp	x19, x20, [sp, #16]
  42bbbc:	ldp	x29, x30, [sp], #32
  42bbc0:	ret
  42bbc4:	ldr	x0, [x20, #1088]
  42bbc8:	mov	x2, #0x1                   	// #1
  42bbcc:	mov	w4, w2
  42bbd0:	add	w3, w3, w4
  42bbd4:	mov	w4, #0x1                   	// #1
  42bbd8:	bl	43b210 <ferror@plt+0x38990>
  42bbdc:	mov	x19, x0
  42bbe0:	ldrh	w0, [x0, #18]
  42bbe4:	ubfx	x1, x0, #2, #8
  42bbe8:	tbz	w0, #4, 42bbb4 <ferror@plt+0x29334>
  42bbec:	nop
  42bbf0:	ldrb	w0, [x20, #18]
  42bbf4:	cbnz	w0, 42bbb4 <ferror@plt+0x29334>
  42bbf8:	tbz	w1, #1, 42bc04 <ferror@plt+0x29384>
  42bbfc:	ldrb	w0, [x20, #23]
  42bc00:	cbz	w0, 42bca0 <ferror@plt+0x29420>
  42bc04:	ldr	x0, [x20, #1272]
  42bc08:	cmp	x19, x0
  42bc0c:	b.eq	42bc40 <ferror@plt+0x293c0>  // b.none
  42bc10:	ldr	x0, [x20, #1280]
  42bc14:	cmp	x19, x0
  42bc18:	b.eq	42bc68 <ferror@plt+0x293e8>  // b.none
  42bc1c:	ldrh	w0, [x19, #18]
  42bc20:	tbz	w0, #9, 42bbb4 <ferror@plt+0x29334>
  42bc24:	ldr	x3, [x19]
  42bc28:	mov	x0, x20
  42bc2c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42bc30:	mov	w1, #0xf                   	// #15
  42bc34:	add	x2, x2, #0x390
  42bc38:	bl	422f30 <ferror@plt+0x206b0>
  42bc3c:	b	42bbb4 <ferror@plt+0x29334>
  42bc40:	ldrb	w0, [x20, #22]
  42bc44:	cbnz	w0, 42bc10 <ferror@plt+0x29390>
  42bc48:	ldrb	w0, [x20, #1120]
  42bc4c:	cbz	w0, 42bcdc <ferror@plt+0x2945c>
  42bc50:	mov	x0, x20
  42bc54:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42bc58:	mov	w1, #0x2                   	// #2
  42bc5c:	add	x2, x2, #0x290
  42bc60:	bl	422e10 <ferror@plt+0x20590>
  42bc64:	b	42bc10 <ferror@plt+0x29390>
  42bc68:	ldrb	w0, [x20, #1154]
  42bc6c:	cbz	w0, 42bcbc <ferror@plt+0x2943c>
  42bc70:	ldrb	w0, [x20, #1167]
  42bc74:	cbnz	w0, 42bcbc <ferror@plt+0x2943c>
  42bc78:	ldr	x0, [x20]
  42bc7c:	cbz	x0, 42bc88 <ferror@plt+0x29408>
  42bc80:	ldrb	w0, [x0, #106]
  42bc84:	cbnz	w0, 42bc1c <ferror@plt+0x2939c>
  42bc88:	mov	x0, x20
  42bc8c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42bc90:	mov	w1, #0x2                   	// #2
  42bc94:	add	x2, x2, #0x320
  42bc98:	bl	422e10 <ferror@plt+0x20590>
  42bc9c:	b	42bc1c <ferror@plt+0x2939c>
  42bca0:	ldr	x3, [x19]
  42bca4:	mov	x0, x20
  42bca8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42bcac:	mov	w1, #0x3                   	// #3
  42bcb0:	add	x2, x2, #0x270
  42bcb4:	bl	422e10 <ferror@plt+0x20590>
  42bcb8:	b	42bc04 <ferror@plt+0x29384>
  42bcbc:	ldrb	w0, [x20, #22]
  42bcc0:	cbnz	w0, 42bc1c <ferror@plt+0x2939c>
  42bcc4:	mov	x0, x20
  42bcc8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42bccc:	mov	w1, #0x2                   	// #2
  42bcd0:	add	x2, x2, #0x348
  42bcd4:	bl	422e10 <ferror@plt+0x20590>
  42bcd8:	b	42bc1c <ferror@plt+0x2939c>
  42bcdc:	mov	x0, x20
  42bce0:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42bce4:	mov	w1, #0x2                   	// #2
  42bce8:	add	x2, x2, #0x2d8
  42bcec:	bl	422e10 <ferror@plt+0x20590>
  42bcf0:	b	42bc10 <ferror@plt+0x29390>
  42bcf4:	nop
  42bcf8:	add	x0, x0, #0x568
  42bcfc:	ret
  42bd00:	stp	x29, x30, [sp, #-32]!
  42bd04:	mov	x29, sp
  42bd08:	stp	x19, x20, [sp, #16]
  42bd0c:	mov	w20, #0x18                  	// #24
  42bd10:	mov	x19, x0
  42bd14:	umull	x20, w1, w20
  42bd18:	mov	x0, x20
  42bd1c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42bd20:	add	x1, x0, x20
  42bd24:	str	xzr, [x19]
  42bd28:	stp	x0, x1, [x19, #16]
  42bd2c:	ldp	x19, x20, [sp, #16]
  42bd30:	ldp	x29, x30, [sp], #32
  42bd34:	ret
  42bd38:	ldr	w1, [x0, #48]
  42bd3c:	cmp	w1, #0x1
  42bd40:	b.eq	42bd5c <ferror@plt+0x294dc>  // b.none
  42bd44:	tst	w1, #0xfffffffd
  42bd48:	b.ne	42bd78 <ferror@plt+0x294f8>  // b.any
  42bd4c:	ldp	x1, x0, [x0, #16]
  42bd50:	sub	x0, x0, x1
  42bd54:	ubfx	x0, x0, #3, #32
  42bd58:	ret
  42bd5c:	ldp	x2, x0, [x0, #16]
  42bd60:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42bd64:	movk	x1, #0xaaab
  42bd68:	sub	x0, x0, x2
  42bd6c:	asr	x0, x0, #3
  42bd70:	mul	w0, w0, w1
  42bd74:	ret
  42bd78:	stp	x29, x30, [sp, #-16]!
  42bd7c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42bd80:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42bd84:	mov	x29, sp
  42bd88:	add	x2, x2, #0x410
  42bd8c:	add	x0, x0, #0x208
  42bd90:	mov	w1, #0x99f                 	// #2463
  42bd94:	bl	4028b0 <ferror@plt+0x30>
  42bd98:	stp	x29, x30, [sp, #-80]!
  42bd9c:	mov	x29, sp
  42bda0:	stp	x23, x24, [sp, #48]
  42bda4:	ldr	w24, [x0, #496]
  42bda8:	ldr	x23, [x0, #488]
  42bdac:	stp	x19, x20, [sp, #16]
  42bdb0:	mov	x19, x0
  42bdb4:	stp	x21, x22, [sp, #32]
  42bdb8:	ldr	x20, [x23, #24]
  42bdbc:	ldr	x22, [x0, #448]
  42bdc0:	sub	x20, x20, x22
  42bdc4:	cbz	x24, 42be20 <ferror@plt+0x295a0>
  42bdc8:	asr	x21, x20, #3
  42bdcc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42bdd0:	movk	x1, #0xaaab
  42bdd4:	mov	x0, x22
  42bdd8:	mul	x21, x21, x1
  42bddc:	cmp	x21, x24
  42bde0:	b.le	42be50 <ferror@plt+0x295d0>
  42bde4:	cmp	x20, #0x18
  42bde8:	b.gt	42be28 <ferror@plt+0x295a8>
  42bdec:	cbnz	x20, 42bdfc <ferror@plt+0x2957c>
  42bdf0:	ldr	x1, [x23, #24]
  42bdf4:	cmp	x1, x0
  42bdf8:	b.eq	42be94 <ferror@plt+0x29614>  // b.none
  42bdfc:	add	x1, x0, #0x18
  42be00:	ldp	x23, x24, [sp, #48]
  42be04:	str	x1, [x19, #448]
  42be08:	ldur	w1, [x22, #-24]
  42be0c:	ldp	x19, x20, [sp, #16]
  42be10:	ldp	x21, x22, [sp, #32]
  42be14:	str	w1, [x0]
  42be18:	ldp	x29, x30, [sp], #80
  42be1c:	ret
  42be20:	mov	x0, x22
  42be24:	b	42bdec <ferror@plt+0x2956c>
  42be28:	sub	x21, x21, #0x1
  42be2c:	mov	x1, x0
  42be30:	cmp	x21, x24
  42be34:	add	x0, x0, #0x18
  42be38:	csel	x21, x21, x24, le
  42be3c:	add	x21, x21, x21, lsl #1
  42be40:	lsl	x2, x21, #3
  42be44:	bl	402230 <memmove@plt>
  42be48:	ldr	x0, [x19, #448]
  42be4c:	b	42bdfc <ferror@plt+0x2957c>
  42be50:	stp	x25, x26, [sp, #64]
  42be54:	ldr	x25, [x23]
  42be58:	cbz	x25, 42bec4 <ferror@plt+0x29644>
  42be5c:	cmp	x21, x24
  42be60:	ldr	x1, [x25, #16]
  42be64:	b.lt	42bea8 <ferror@plt+0x29628>  // b.tstop
  42be68:	ldr	x23, [x19, #488]
  42be6c:	cmp	x20, #0x18
  42be70:	ldp	x25, x26, [sp, #64]
  42be74:	ldr	x4, [x23, #24]
  42be78:	ldr	x0, [x19, #448]
  42be7c:	ldp	x2, x3, [x4, #-24]
  42be80:	stp	x2, x3, [x1]
  42be84:	ldur	x2, [x4, #-8]
  42be88:	str	x2, [x1, #16]
  42be8c:	b.le	42bdec <ferror@plt+0x2956c>
  42be90:	b	42be28 <ferror@plt+0x295a8>
  42be94:	ldr	x1, [x23]
  42be98:	cbz	x1, 42befc <ferror@plt+0x2967c>
  42be9c:	ldr	x0, [x1, #16]
  42bea0:	str	x1, [x19, #488]
  42bea4:	b	42bdfc <ferror@plt+0x2957c>
  42bea8:	sub	x2, x24, x21
  42beac:	add	x0, x1, #0x18
  42beb0:	add	x2, x2, x2, lsl #1
  42beb4:	lsl	x2, x2, #3
  42beb8:	bl	402230 <memmove@plt>
  42bebc:	ldr	x1, [x25, #16]
  42bec0:	b	42be68 <ferror@plt+0x295e8>
  42bec4:	mov	x0, #0x20                  	// #32
  42bec8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42becc:	mov	x26, x0
  42bed0:	str	x26, [x23]
  42bed4:	mov	x0, #0x1770                	// #6000
  42bed8:	str	x23, [x26, #8]
  42bedc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42bee0:	str	xzr, [x26]
  42bee4:	mov	x2, #0x1770                	// #6000
  42bee8:	str	x0, [x26, #16]
  42beec:	add	x0, x0, x2
  42bef0:	ldr	x25, [x23]
  42bef4:	str	x0, [x26, #24]
  42bef8:	b	42be5c <ferror@plt+0x295dc>
  42befc:	mov	x0, #0x20                  	// #32
  42bf00:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42bf04:	mov	x20, x0
  42bf08:	str	x20, [x23]
  42bf0c:	mov	x0, #0x1770                	// #6000
  42bf10:	str	x23, [x20, #8]
  42bf14:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42bf18:	str	xzr, [x20]
  42bf1c:	mov	x1, #0x1770                	// #6000
  42bf20:	str	x0, [x20, #16]
  42bf24:	add	x0, x0, x1
  42bf28:	ldr	x1, [x23]
  42bf2c:	str	x0, [x20, #24]
  42bf30:	b	42be9c <ferror@plt+0x2961c>
  42bf34:	nop
  42bf38:	stp	x29, x30, [sp, #-32]!
  42bf3c:	mov	x29, sp
  42bf40:	stp	x19, x20, [sp, #16]
  42bf44:	mov	x20, x0
  42bf48:	ldrb	w0, [x0, #16]
  42bf4c:	cbnz	w0, 42bfcc <ferror@plt+0x2974c>
  42bf50:	ldr	x1, [x20]
  42bf54:	b	42bf74 <ferror@plt+0x296f4>
  42bf58:	ubfx	x19, x2, #2, #1
  42bf5c:	mov	x0, x20
  42bf60:	bl	421958 <ferror@plt+0x1f0d8>
  42bf64:	ldr	x1, [x20]
  42bf68:	cmp	x1, #0x0
  42bf6c:	csinc	w2, w19, wzr, ne  // ne = any
  42bf70:	cbnz	w2, 42bfcc <ferror@plt+0x2974c>
  42bf74:	ldrb	w19, [x1, #104]
  42bf78:	cbz	w19, 42bfe0 <ferror@plt+0x29760>
  42bf7c:	ldr	x0, [x1, #16]
  42bf80:	ldr	x3, [x1, #32]
  42bf84:	cmp	x0, x3
  42bf88:	b.cc	42bff4 <ferror@plt+0x29774>  // b.lo, b.ul, b.last
  42bf8c:	ldrb	w2, [x20, #25]
  42bf90:	cbnz	w2, 42bfcc <ferror@plt+0x2974c>
  42bf94:	ldr	x2, [x1, #24]
  42bf98:	cmp	x2, x3
  42bf9c:	ldrb	w2, [x1, #105]
  42bfa0:	ccmp	x0, x3, #0x0, ne  // ne = any
  42bfa4:	b.ls	42bf58 <ferror@plt+0x296d8>  // b.plast
  42bfa8:	tbnz	w2, #1, 42bf58 <ferror@plt+0x296d8>
  42bfac:	str	x3, [x1, #16]
  42bfb0:	ubfx	x19, x2, #2, #1
  42bfb4:	mov	x0, x20
  42bfb8:	bl	421958 <ferror@plt+0x1f0d8>
  42bfbc:	ldr	x1, [x20]
  42bfc0:	cmp	x1, #0x0
  42bfc4:	csinc	w2, w19, wzr, ne  // ne = any
  42bfc8:	cbz	w2, 42bf74 <ferror@plt+0x296f4>
  42bfcc:	mov	w19, #0x0                   	// #0
  42bfd0:	mov	w0, w19
  42bfd4:	ldp	x19, x20, [sp, #16]
  42bfd8:	ldp	x29, x30, [sp], #32
  42bfdc:	ret
  42bfe0:	mov	w19, #0x1                   	// #1
  42bfe4:	mov	w0, w19
  42bfe8:	ldp	x19, x20, [sp, #16]
  42bfec:	ldp	x29, x30, [sp], #32
  42bff0:	ret
  42bff4:	mov	x0, x20
  42bff8:	bl	42b0f8 <ferror@plt+0x28878>
  42bffc:	mov	w0, w19
  42c000:	ldp	x19, x20, [sp, #16]
  42c004:	ldp	x29, x30, [sp], #32
  42c008:	ret
  42c00c:	nop
  42c010:	mov	x1, x0
  42c014:	ldrb	w0, [x0, #4]
  42c018:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c01c:	add	x2, x2, #0xc90
  42c020:	lsl	x0, x0, #4
  42c024:	ldr	w0, [x2, x0]
  42c028:	cmp	w0, #0x1
  42c02c:	b.eq	42c044 <ferror@plt+0x297c4>  // b.none
  42c030:	cmp	w0, #0x2
  42c034:	mov	w0, #0x6                   	// #6
  42c038:	b.ne	42c040 <ferror@plt+0x297c0>  // b.any
  42c03c:	ldr	w0, [x1, #8]
  42c040:	ret
  42c044:	ldr	x0, [x1, #8]
  42c048:	ldr	w0, [x0, #8]
  42c04c:	add	w0, w0, w0, lsl #2
  42c050:	lsl	w0, w0, #1
  42c054:	ret
  42c058:	ldr	w2, [x1, #8]
  42c05c:	ldr	x11, [x1]
  42c060:	cbz	w2, 42c180 <ferror@plt+0x29900>
  42c064:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c068:	mov	x7, #0x0                   	// #0
  42c06c:	add	x8, x8, #0x448
  42c070:	mov	w12, #0x555c                	// #21852
  42c074:	mov	w13, #0x7f                  	// #127
  42c078:	b	42c090 <ferror@plt+0x29810>
  42c07c:	strb	w5, [x0], #1
  42c080:	add	x7, x7, #0x1
  42c084:	ldr	w2, [x1, #8]
  42c088:	cmp	x2, x7
  42c08c:	b.ls	42c180 <ferror@plt+0x29900>  // b.plast
  42c090:	ldrb	w5, [x11, x7]
  42c094:	add	x6, x11, x7
  42c098:	tbz	w5, #7, 42c07c <ferror@plt+0x297fc>
  42c09c:	mov	w4, w5
  42c0a0:	tbz	w5, #7, 42c184 <ferror@plt+0x29904>
  42c0a4:	mov	w3, #0x0                   	// #0
  42c0a8:	mov	w9, w3
  42c0ac:	lsl	w4, w4, #1
  42c0b0:	add	w3, w3, #0x1
  42c0b4:	tbnz	w4, #7, 42c0a8 <ferror@plt+0x29828>
  42c0b8:	asr	w2, w13, w3
  42c0bc:	and	w2, w2, w5
  42c0c0:	cmp	w3, #0x1
  42c0c4:	sxtw	x2, w2
  42c0c8:	b.eq	42c190 <ferror@plt+0x29910>  // b.none
  42c0cc:	add	x6, x6, #0x1
  42c0d0:	mov	x4, #0x0                   	// #0
  42c0d4:	nop
  42c0d8:	ldrb	w5, [x6, x4]
  42c0dc:	and	w10, w5, #0xffffffc0
  42c0e0:	bfi	x5, x2, #6, #58
  42c0e4:	cmp	w10, #0x80
  42c0e8:	mov	x2, x5
  42c0ec:	b.ne	42c198 <ferror@plt+0x29918>  // b.any
  42c0f0:	add	x4, x4, #0x1
  42c0f4:	cmp	w9, w4
  42c0f8:	b.gt	42c0d8 <ferror@plt+0x29858>
  42c0fc:	sxtw	x3, w3
  42c100:	lsr	w14, w2, #28
  42c104:	ubfx	x10, x2, #24, #4
  42c108:	ubfx	x9, x2, #20, #4
  42c10c:	ubfx	x6, x2, #16, #4
  42c110:	ubfx	x5, x2, #12, #4
  42c114:	ubfx	x4, x2, #8, #4
  42c118:	ubfx	x15, x2, #4, #4
  42c11c:	and	x2, x2, #0xf
  42c120:	sub	x7, x7, #0x1
  42c124:	ldrb	w14, [x8, x14]
  42c128:	add	x7, x7, x3
  42c12c:	ldrb	w10, [x8, x10]
  42c130:	ldrb	w2, [x8, x2]
  42c134:	add	x7, x7, #0x1
  42c138:	ldrb	w9, [x8, x9]
  42c13c:	add	x0, x0, #0xa
  42c140:	ldrb	w6, [x8, x6]
  42c144:	ldrb	w5, [x8, x5]
  42c148:	ldrb	w4, [x8, x4]
  42c14c:	ldrb	w3, [x8, x15]
  42c150:	sturh	w12, [x0, #-10]
  42c154:	sturb	w14, [x0, #-8]
  42c158:	sturb	w10, [x0, #-7]
  42c15c:	sturb	w9, [x0, #-6]
  42c160:	sturb	w6, [x0, #-5]
  42c164:	sturb	w5, [x0, #-4]
  42c168:	sturb	w4, [x0, #-3]
  42c16c:	sturb	w3, [x0, #-2]
  42c170:	sturb	w2, [x0, #-1]
  42c174:	ldr	w2, [x1, #8]
  42c178:	cmp	x2, x7
  42c17c:	b.hi	42c090 <ferror@plt+0x29810>  // b.pmore
  42c180:	ret
  42c184:	and	x2, x5, #0xff
  42c188:	mov	x3, #0x0                   	// #0
  42c18c:	b	42c100 <ferror@plt+0x29880>
  42c190:	mov	x3, #0x1                   	// #1
  42c194:	b	42c100 <ferror@plt+0x29880>
  42c198:	stp	x29, x30, [sp, #-16]!
  42c19c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c1a0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c1a4:	mov	x29, sp
  42c1a8:	add	x2, x2, #0x438
  42c1ac:	add	x0, x0, #0x208
  42c1b0:	mov	w1, #0xc89                 	// #3209
  42c1b4:	bl	4028b0 <ferror@plt+0x30>
  42c1b8:	stp	x29, x30, [sp, #-64]!
  42c1bc:	mov	x29, sp
  42c1c0:	stp	x21, x22, [sp, #32]
  42c1c4:	mov	x22, x0
  42c1c8:	ldrb	w0, [x1, #4]
  42c1cc:	stp	x19, x20, [sp, #16]
  42c1d0:	adrp	x20, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c1d4:	add	x20, x20, #0xc90
  42c1d8:	lsl	x0, x0, #4
  42c1dc:	str	x23, [sp, #48]
  42c1e0:	mov	x19, x1
  42c1e4:	mov	x23, x2
  42c1e8:	ldr	w0, [x20, x0]
  42c1ec:	cmp	w0, #0x1
  42c1f0:	b.eq	42c2f0 <ferror@plt+0x29a70>  // b.none
  42c1f4:	cmp	w0, #0x2
  42c1f8:	mov	x0, #0x6                   	// #6
  42c1fc:	b.ne	42c204 <ferror@plt+0x29984>  // b.any
  42c200:	ldr	w0, [x1, #8]
  42c204:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42c208:	mov	x21, x0
  42c20c:	ldrb	w2, [x19, #4]
  42c210:	sbfiz	x1, x2, #4, #32
  42c214:	add	x3, x20, x1
  42c218:	ldr	w1, [x20, x1]
  42c21c:	cmp	w1, #0x2
  42c220:	b.eq	42c320 <ferror@plt+0x29aa0>  // b.none
  42c224:	b.hi	42c280 <ferror@plt+0x29a00>  // b.pmore
  42c228:	cbz	w1, 42c338 <ferror@plt+0x29ab8>
  42c22c:	ldr	x1, [x19, #8]
  42c230:	mov	x0, x21
  42c234:	bl	42c058 <ferror@plt+0x297d8>
  42c238:	sub	w5, w0, w21
  42c23c:	ldr	w0, [x23]
  42c240:	ldr	w2, [x19]
  42c244:	cmp	w0, #0x1
  42c248:	mov	x0, x22
  42c24c:	b.eq	42c2b8 <ferror@plt+0x29a38>  // b.none
  42c250:	mov	x6, x21
  42c254:	mov	w3, #0x0                   	// #0
  42c258:	mov	w1, #0x10                  	// #16
  42c25c:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c260:	add	x4, x4, #0x490
  42c264:	bl	423308 <ferror@plt+0x20a88>
  42c268:	mov	x0, x21
  42c26c:	ldp	x19, x20, [sp, #16]
  42c270:	ldp	x21, x22, [sp, #32]
  42c274:	ldr	x23, [sp, #48]
  42c278:	ldp	x29, x30, [sp], #64
  42c27c:	b	402640 <free@plt>
  42c280:	cmp	w1, #0x3
  42c284:	b.ne	42c2e8 <ferror@plt+0x29a68>  // b.any
  42c288:	ldr	x3, [x3, #8]
  42c28c:	mov	x0, x22
  42c290:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c294:	mov	w1, #0x4                   	// #4
  42c298:	add	x2, x2, #0x460
  42c29c:	bl	422e10 <ferror@plt+0x20590>
  42c2a0:	ldr	w0, [x23]
  42c2a4:	mov	w5, #0x0                   	// #0
  42c2a8:	ldr	w2, [x19]
  42c2ac:	cmp	w0, #0x1
  42c2b0:	mov	x0, x22
  42c2b4:	b.ne	42c250 <ferror@plt+0x299d0>  // b.any
  42c2b8:	mov	x6, x21
  42c2bc:	mov	w3, #0x0                   	// #0
  42c2c0:	mov	w1, #0x10                  	// #16
  42c2c4:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c2c8:	add	x4, x4, #0x478
  42c2cc:	bl	423308 <ferror@plt+0x20a88>
  42c2d0:	mov	x0, x21
  42c2d4:	ldp	x19, x20, [sp, #16]
  42c2d8:	ldp	x21, x22, [sp, #32]
  42c2dc:	ldr	x23, [sp, #48]
  42c2e0:	ldp	x29, x30, [sp], #64
  42c2e4:	b	402640 <free@plt>
  42c2e8:	mov	w5, #0x0                   	// #0
  42c2ec:	b	42c23c <ferror@plt+0x299bc>
  42c2f0:	ldr	x0, [x1, #8]
  42c2f4:	ldr	w0, [x0, #8]
  42c2f8:	add	w0, w0, w0, lsl #2
  42c2fc:	lsl	w0, w0, #1
  42c300:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42c304:	ldrb	w2, [x19, #4]
  42c308:	mov	x21, x0
  42c30c:	sbfiz	x1, x2, #4, #32
  42c310:	add	x3, x20, x1
  42c314:	ldr	w1, [x20, x1]
  42c318:	cmp	w1, #0x2
  42c31c:	b.ne	42c224 <ferror@plt+0x299a4>  // b.any
  42c320:	ldr	x1, [x19, #16]
  42c324:	ldr	w20, [x19, #8]
  42c328:	mov	w2, w20
  42c32c:	bl	402220 <memcpy@plt>
  42c330:	mov	w5, w20
  42c334:	b	42c23c <ferror@plt+0x299bc>
  42c338:	ldrh	w0, [x19, #6]
  42c33c:	tbz	w0, #1, 42c36c <ferror@plt+0x29aec>
  42c340:	add	x20, x20, #0x540
  42c344:	sub	w2, w2, #0x25
  42c348:	ldr	x1, [x20, w2, sxtw #3]
  42c34c:	ldrb	w0, [x1], #1
  42c350:	cbz	w0, 42c2e8 <ferror@plt+0x29a68>
  42c354:	mov	x5, x21
  42c358:	strb	w0, [x5], #1
  42c35c:	ldrb	w0, [x1], #1
  42c360:	cbnz	w0, 42c358 <ferror@plt+0x29ad8>
  42c364:	sub	w5, w5, w21
  42c368:	b	42c23c <ferror@plt+0x299bc>
  42c36c:	tbnz	w0, #4, 42c22c <ferror@plt+0x299ac>
  42c370:	ldr	x1, [x3, #8]
  42c374:	b	42c34c <ferror@plt+0x29acc>
  42c378:	stp	x29, x30, [sp, #-32]!
  42c37c:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c380:	add	x4, x4, #0xc90
  42c384:	mov	x29, sp
  42c388:	stp	x19, x20, [sp, #16]
  42c38c:	mov	x19, x2
  42c390:	ldrb	w2, [x1, #4]
  42c394:	mov	x20, x1
  42c398:	sbfiz	x1, x2, #4, #32
  42c39c:	add	x5, x4, x1
  42c3a0:	ldr	w1, [x4, x1]
  42c3a4:	cmp	w1, #0x2
  42c3a8:	b.eq	42c448 <ferror@plt+0x29bc8>  // b.none
  42c3ac:	b.hi	42c3e8 <ferror@plt+0x29b68>  // b.pmore
  42c3b0:	and	w3, w3, #0xff
  42c3b4:	cbz	w1, 42c414 <ferror@plt+0x29b94>
  42c3b8:	cbz	w3, 42c46c <ferror@plt+0x29bec>
  42c3bc:	ldr	x1, [x20, #16]
  42c3c0:	mov	x0, x19
  42c3c4:	ldr	w2, [x1, #8]
  42c3c8:	ldr	x1, [x1]
  42c3cc:	bl	402220 <memcpy@plt>
  42c3d0:	ldr	x0, [x20, #16]
  42c3d4:	ldr	w0, [x0, #8]
  42c3d8:	add	x0, x19, x0
  42c3dc:	ldp	x19, x20, [sp, #16]
  42c3e0:	ldp	x29, x30, [sp], #32
  42c3e4:	ret
  42c3e8:	cmp	w1, #0x3
  42c3ec:	b.ne	42c404 <ferror@plt+0x29b84>  // b.any
  42c3f0:	ldr	x3, [x5, #8]
  42c3f4:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c3f8:	mov	w1, #0x4                   	// #4
  42c3fc:	add	x2, x2, #0x460
  42c400:	bl	422e10 <ferror@plt+0x20590>
  42c404:	mov	x0, x19
  42c408:	ldp	x19, x20, [sp, #16]
  42c40c:	ldp	x29, x30, [sp], #32
  42c410:	ret
  42c414:	ldrh	w0, [x20, #6]
  42c418:	tbnz	w0, #1, 42c480 <ferror@plt+0x29c00>
  42c41c:	tbnz	w0, #4, 42c3b8 <ferror@plt+0x29b38>
  42c420:	ldr	x2, [x5, #8]
  42c424:	mov	x0, x19
  42c428:	ldrb	w1, [x2], #1
  42c42c:	cbz	w1, 42c408 <ferror@plt+0x29b88>
  42c430:	strb	w1, [x0], #1
  42c434:	ldrb	w1, [x2], #1
  42c438:	cbnz	w1, 42c430 <ferror@plt+0x29bb0>
  42c43c:	ldp	x19, x20, [sp, #16]
  42c440:	ldp	x29, x30, [sp], #32
  42c444:	ret
  42c448:	ldr	w2, [x20, #8]
  42c44c:	mov	x0, x19
  42c450:	ldr	x1, [x20, #16]
  42c454:	bl	402220 <memcpy@plt>
  42c458:	ldr	w0, [x20, #8]
  42c45c:	add	x0, x19, x0
  42c460:	ldp	x19, x20, [sp, #16]
  42c464:	ldp	x29, x30, [sp], #32
  42c468:	ret
  42c46c:	mov	x0, x19
  42c470:	ldr	x1, [x20, #8]
  42c474:	ldp	x19, x20, [sp, #16]
  42c478:	ldp	x29, x30, [sp], #32
  42c47c:	b	42c058 <ferror@plt+0x297d8>
  42c480:	add	x4, x4, #0x540
  42c484:	sub	w2, w2, #0x25
  42c488:	ldr	x2, [x4, w2, sxtw #3]
  42c48c:	b	42c424 <ferror@plt+0x29ba4>
  42c490:	stp	x29, x30, [sp, #-64]!
  42c494:	mov	x29, sp
  42c498:	stp	x23, x24, [sp, #48]
  42c49c:	mov	x23, x0
  42c4a0:	ldrb	w0, [x1, #4]
  42c4a4:	adrp	x24, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c4a8:	add	x24, x24, #0xc90
  42c4ac:	stp	x21, x22, [sp, #32]
  42c4b0:	mov	x22, x1
  42c4b4:	sbfiz	x1, x0, #4, #32
  42c4b8:	stp	x19, x20, [sp, #16]
  42c4bc:	mov	x5, x0
  42c4c0:	ldr	w6, [x24, x1]
  42c4c4:	cmp	w6, #0x1
  42c4c8:	b.eq	42c668 <ferror@plt+0x29de8>  // b.none
  42c4cc:	cmp	w6, #0x2
  42c4d0:	ldr	x2, [x23, #64]
  42c4d4:	b.ne	42c52c <ferror@plt+0x29cac>  // b.any
  42c4d8:	ldp	x19, x1, [x2, #16]
  42c4dc:	ldr	w20, [x22, #8]
  42c4e0:	add	w20, w20, #0x1
  42c4e4:	sub	x1, x1, x19
  42c4e8:	cmp	x1, x20
  42c4ec:	b.cc	42c57c <ferror@plt+0x29cfc>  // b.lo, b.ul, b.last
  42c4f0:	add	x20, x19, x20
  42c4f4:	str	x20, [x2, #16]
  42c4f8:	ldr	w2, [x22, #8]
  42c4fc:	mov	x0, x19
  42c500:	ldr	x1, [x22, #16]
  42c504:	bl	402220 <memcpy@plt>
  42c508:	ldr	w0, [x22, #8]
  42c50c:	add	x0, x19, x0
  42c510:	strb	wzr, [x0]
  42c514:	mov	x0, x19
  42c518:	ldp	x19, x20, [sp, #16]
  42c51c:	ldp	x21, x22, [sp, #32]
  42c520:	ldp	x23, x24, [sp, #48]
  42c524:	ldp	x29, x30, [sp], #64
  42c528:	ret
  42c52c:	ldp	x19, x1, [x2, #16]
  42c530:	sub	x1, x1, x19
  42c534:	cmp	x1, #0x6
  42c538:	b.ls	42c578 <ferror@plt+0x29cf8>  // b.plast
  42c53c:	add	x1, x19, #0x7
  42c540:	str	x1, [x2, #16]
  42c544:	cmp	w6, #0x2
  42c548:	b.hi	42c624 <ferror@plt+0x29da4>  // b.pmore
  42c54c:	cbz	w6, 42c69c <ferror@plt+0x29e1c>
  42c550:	ldr	x1, [x22, #8]
  42c554:	mov	x0, x19
  42c558:	bl	42c058 <ferror@plt+0x297d8>
  42c55c:	strb	wzr, [x0]
  42c560:	mov	x0, x19
  42c564:	ldp	x19, x20, [sp, #16]
  42c568:	ldp	x21, x22, [sp, #32]
  42c56c:	ldp	x23, x24, [sp, #48]
  42c570:	ldp	x29, x30, [sp], #64
  42c574:	ret
  42c578:	mov	x20, #0x7                   	// #7
  42c57c:	ldr	x2, [x23, #72]
  42c580:	add	x1, x23, #0x48
  42c584:	cbz	x2, 42c5c0 <ferror@plt+0x29d40>
  42c588:	add	x4, x20, x20, lsl #1
  42c58c:	mov	x3, #0x1f40                	// #8000
  42c590:	add	x4, x3, x4, lsr #1
  42c594:	nop
  42c598:	ldr	x19, [x2, #8]
  42c59c:	ldr	x3, [x2, #24]
  42c5a0:	sub	x3, x3, x19
  42c5a4:	cmp	x20, x3
  42c5a8:	b.hi	42c5b4 <ferror@plt+0x29d34>  // b.pmore
  42c5ac:	cmp	x3, x4
  42c5b0:	b.ls	42c6e8 <ferror@plt+0x29e68>  // b.plast
  42c5b4:	mov	x1, x2
  42c5b8:	ldr	x2, [x2]
  42c5bc:	cbnz	x2, 42c598 <ferror@plt+0x29d18>
  42c5c0:	mov	x21, #0x1f40                	// #8000
  42c5c4:	cmp	x20, x21
  42c5c8:	csel	x21, x20, x21, cs  // cs = hs, nlast
  42c5cc:	add	x21, x21, #0x7
  42c5d0:	and	x21, x21, #0xfffffffffffffff8
  42c5d4:	add	x0, x21, #0x20
  42c5d8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42c5dc:	ldrb	w5, [x22, #4]
  42c5e0:	add	x2, x0, x21
  42c5e4:	mov	x19, x0
  42c5e8:	sbfiz	x1, x5, #4, #32
  42c5ec:	sxtw	x0, w5
  42c5f0:	stp	x19, x19, [x2, #8]
  42c5f4:	ldr	w6, [x24, x1]
  42c5f8:	str	x2, [x2, #24]
  42c5fc:	str	xzr, [x19, x21]
  42c600:	ldr	x1, [x23, #64]
  42c604:	str	x1, [x2]
  42c608:	str	x2, [x23, #64]
  42c60c:	add	x20, x19, x20
  42c610:	str	x20, [x2, #16]
  42c614:	cmp	w6, #0x2
  42c618:	b.eq	42c4f8 <ferror@plt+0x29c78>  // b.none
  42c61c:	cmp	w6, #0x2
  42c620:	b.ls	42c54c <ferror@plt+0x29ccc>  // b.plast
  42c624:	cmp	w6, #0x3
  42c628:	b.ne	42c648 <ferror@plt+0x29dc8>  // b.any
  42c62c:	add	x24, x24, x0, lsl #4
  42c630:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c634:	mov	x0, x23
  42c638:	add	x2, x2, #0x460
  42c63c:	mov	w1, #0x4                   	// #4
  42c640:	ldr	x3, [x24, #8]
  42c644:	bl	422e10 <ferror@plt+0x20590>
  42c648:	mov	x0, x19
  42c64c:	strb	wzr, [x0]
  42c650:	mov	x0, x19
  42c654:	ldp	x19, x20, [sp, #16]
  42c658:	ldp	x21, x22, [sp, #32]
  42c65c:	ldp	x23, x24, [sp, #48]
  42c660:	ldp	x29, x30, [sp], #64
  42c664:	ret
  42c668:	ldr	x1, [x22, #8]
  42c66c:	ldr	x3, [x23, #64]
  42c670:	ldr	w20, [x1, #8]
  42c674:	ldp	x19, x2, [x3, #16]
  42c678:	add	w20, w20, w20, lsl #2
  42c67c:	lsl	w20, w20, #1
  42c680:	add	w20, w20, #0x1
  42c684:	sub	x2, x2, x19
  42c688:	cmp	x20, x2
  42c68c:	b.hi	42c57c <ferror@plt+0x29cfc>  // b.pmore
  42c690:	add	x20, x19, x20
  42c694:	str	x20, [x3, #16]
  42c698:	b	42c554 <ferror@plt+0x29cd4>
  42c69c:	ldrh	w1, [x22, #6]
  42c6a0:	tbz	w1, #1, 42c6fc <ferror@plt+0x29e7c>
  42c6a4:	add	x24, x24, #0x540
  42c6a8:	sub	w5, w5, #0x25
  42c6ac:	ldr	x2, [x24, w5, sxtw #3]
  42c6b0:	mov	x0, x19
  42c6b4:	ldrb	w1, [x2], #1
  42c6b8:	cbz	w1, 42c55c <ferror@plt+0x29cdc>
  42c6bc:	nop
  42c6c0:	strb	w1, [x0], #1
  42c6c4:	ldrb	w1, [x2], #1
  42c6c8:	cbnz	w1, 42c6c0 <ferror@plt+0x29e40>
  42c6cc:	strb	wzr, [x0]
  42c6d0:	mov	x0, x19
  42c6d4:	ldp	x19, x20, [sp, #16]
  42c6d8:	ldp	x21, x22, [sp, #32]
  42c6dc:	ldp	x23, x24, [sp, #48]
  42c6e0:	ldp	x29, x30, [sp], #64
  42c6e4:	ret
  42c6e8:	ldr	x3, [x2]
  42c6ec:	str	x3, [x1]
  42c6f0:	str	xzr, [x2]
  42c6f4:	str	x19, [x2, #16]
  42c6f8:	b	42c600 <ferror@plt+0x29d80>
  42c6fc:	tbnz	w1, #4, 42c550 <ferror@plt+0x29cd0>
  42c700:	add	x0, x24, x0, lsl #4
  42c704:	ldr	x2, [x0, #8]
  42c708:	b	42c6b0 <ferror@plt+0x29e30>
  42c70c:	nop
  42c710:	tst	w1, #0x2
  42c714:	mov	w2, w0
  42c718:	and	w1, w1, #0xff
  42c71c:	b.eq	42c738 <ferror@plt+0x29eb8>  // b.none
  42c720:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c724:	add	x1, x1, #0xc90
  42c728:	add	x1, x1, #0x540
  42c72c:	sub	w0, w0, #0x25
  42c730:	ldr	x0, [x1, w0, sxtw #3]
  42c734:	ret
  42c738:	tbnz	w1, #4, 42c750 <ferror@plt+0x29ed0>
  42c73c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c740:	add	x0, x0, #0xc90
  42c744:	add	x0, x0, w2, sxtw #4
  42c748:	ldr	x0, [x0, #8]
  42c74c:	ret
  42c750:	b	43de60 <ferror@plt+0x3b5e0>
  42c754:	nop
  42c758:	stp	x29, x30, [sp, #-80]!
  42c75c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c760:	mov	x29, sp
  42c764:	stp	x21, x22, [sp, #32]
  42c768:	mov	x22, x0
  42c76c:	add	x0, x2, #0xc90
  42c770:	stp	x19, x20, [sp, #16]
  42c774:	mov	x20, x1
  42c778:	ldrb	w2, [x22, #4]
  42c77c:	sbfiz	x1, x2, #4, #32
  42c780:	add	x3, x0, x1
  42c784:	ldr	w1, [x0, x1]
  42c788:	cmp	w1, #0x1
  42c78c:	b.eq	42c7ac <ferror@plt+0x29f2c>  // b.none
  42c790:	cmp	w1, #0x2
  42c794:	b.eq	42c96c <ferror@plt+0x2a0ec>  // b.none
  42c798:	cbz	w1, 42c920 <ferror@plt+0x2a0a0>
  42c79c:	ldp	x19, x20, [sp, #16]
  42c7a0:	ldp	x21, x22, [sp, #32]
  42c7a4:	ldp	x29, x30, [sp], #80
  42c7a8:	ret
  42c7ac:	ldr	x0, [x22, #8]
  42c7b0:	stp	x23, x24, [sp, #48]
  42c7b4:	ldr	w1, [x0, #8]
  42c7b8:	ldr	x24, [x0]
  42c7bc:	cbz	w1, 42c90c <ferror@plt+0x2a08c>
  42c7c0:	adrp	x23, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c7c4:	mov	x19, #0x0                   	// #0
  42c7c8:	add	x23, x23, #0x448
  42c7cc:	mov	w21, #0x555c                	// #21852
  42c7d0:	b	42c808 <ferror@plt+0x29f88>
  42c7d4:	ldr	x1, [x0]
  42c7d8:	ldp	x0, x2, [x20, #40]
  42c7dc:	ldrb	w1, [x1, x19]
  42c7e0:	cmp	x0, x2
  42c7e4:	b.cs	42c9a0 <ferror@plt+0x2a120>  // b.hs, b.nlast
  42c7e8:	add	x2, x0, #0x1
  42c7ec:	str	x2, [x20, #40]
  42c7f0:	strb	w1, [x0]
  42c7f4:	ldr	x0, [x22, #8]
  42c7f8:	add	x19, x19, #0x1
  42c7fc:	ldr	w1, [x0, #8]
  42c800:	cmp	x1, x19
  42c804:	b.ls	42c90c <ferror@plt+0x2a08c>  // b.plast
  42c808:	ldrb	w4, [x24, x19]
  42c80c:	add	x5, x24, x19
  42c810:	tbz	w4, #7, 42c7d4 <ferror@plt+0x29f54>
  42c814:	mov	w3, w4
  42c818:	tbz	w4, #7, 42c9ac <ferror@plt+0x2a12c>
  42c81c:	mov	w1, #0x0                   	// #0
  42c820:	mov	w6, w1
  42c824:	lsl	w3, w3, #1
  42c828:	add	w1, w1, #0x1
  42c82c:	tbnz	w3, #7, 42c820 <ferror@plt+0x29fa0>
  42c830:	mov	w2, #0x7f                  	// #127
  42c834:	cmp	w1, #0x1
  42c838:	asr	w2, w2, w1
  42c83c:	and	w2, w2, w4
  42c840:	sxtw	x2, w2
  42c844:	b.eq	42c9b8 <ferror@plt+0x2a138>  // b.none
  42c848:	add	x0, x5, #0x1
  42c84c:	mov	x3, #0x0                   	// #0
  42c850:	ldrb	w4, [x0, x3]
  42c854:	and	w5, w4, #0xffffffc0
  42c858:	bfi	x4, x2, #6, #58
  42c85c:	cmp	w5, #0x80
  42c860:	mov	x2, x4
  42c864:	b.ne	42c9c0 <ferror@plt+0x2a140>  // b.any
  42c868:	add	x3, x3, #0x1
  42c86c:	cmp	w6, w3
  42c870:	b.gt	42c850 <ferror@plt+0x29fd0>
  42c874:	sxtw	x1, w1
  42c878:	lsr	w9, w2, #28
  42c87c:	ubfx	x8, x2, #24, #4
  42c880:	ubfx	x3, x2, #20, #4
  42c884:	ubfx	x7, x2, #16, #4
  42c888:	ubfx	x6, x2, #12, #4
  42c88c:	ubfx	x0, x2, #8, #4
  42c890:	ubfx	x5, x2, #4, #4
  42c894:	and	x4, x2, #0xf
  42c898:	ldrb	w11, [x23, x9]
  42c89c:	sub	x19, x19, #0x1
  42c8a0:	ldrb	w10, [x23, x8]
  42c8a4:	add	x19, x19, x1
  42c8a8:	ldrb	w9, [x23, x3]
  42c8ac:	mov	x1, #0x1                   	// #1
  42c8b0:	ldrb	w8, [x23, x7]
  42c8b4:	mov	x3, x20
  42c8b8:	ldrb	w7, [x23, x6]
  42c8bc:	mov	x2, #0xa                   	// #10
  42c8c0:	ldrb	w6, [x23, x0]
  42c8c4:	add	x0, sp, #0x40
  42c8c8:	ldrb	w5, [x23, x5]
  42c8cc:	add	x19, x19, #0x1
  42c8d0:	ldrb	w4, [x23, x4]
  42c8d4:	strh	w21, [sp, #64]
  42c8d8:	strb	w11, [sp, #66]
  42c8dc:	strb	w10, [sp, #67]
  42c8e0:	strb	w9, [sp, #68]
  42c8e4:	strb	w8, [sp, #69]
  42c8e8:	strb	w7, [sp, #70]
  42c8ec:	strb	w6, [sp, #71]
  42c8f0:	strb	w5, [sp, #72]
  42c8f4:	strb	w4, [sp, #73]
  42c8f8:	bl	402250 <fwrite_unlocked@plt>
  42c8fc:	ldr	x0, [x22, #8]
  42c900:	ldr	w1, [x0, #8]
  42c904:	cmp	x1, x19
  42c908:	b.hi	42c808 <ferror@plt+0x29f88>  // b.pmore
  42c90c:	ldp	x19, x20, [sp, #16]
  42c910:	ldp	x21, x22, [sp, #32]
  42c914:	ldp	x23, x24, [sp, #48]
  42c918:	ldp	x29, x30, [sp], #80
  42c91c:	ret
  42c920:	ldrh	w1, [x22, #6]
  42c924:	tbnz	w1, #1, 42c990 <ferror@plt+0x2a110>
  42c928:	tbnz	w1, #4, 42c7ac <ferror@plt+0x29f2c>
  42c92c:	ldr	x19, [x3, #8]
  42c930:	ldrb	w1, [x19]
  42c934:	b	42c94c <ferror@plt+0x2a0cc>
  42c938:	add	x2, x0, #0x1
  42c93c:	str	x2, [x20, #40]
  42c940:	strb	w1, [x0]
  42c944:	ldrb	w1, [x19, #1]!
  42c948:	cbz	w1, 42c79c <ferror@plt+0x29f1c>
  42c94c:	ldp	x0, x2, [x20, #40]
  42c950:	cmp	x0, x2
  42c954:	b.cc	42c938 <ferror@plt+0x2a0b8>  // b.lo, b.ul, b.last
  42c958:	mov	x0, x20
  42c95c:	bl	402550 <__overflow@plt>
  42c960:	ldrb	w1, [x19, #1]!
  42c964:	cbnz	w1, 42c94c <ferror@plt+0x2a0cc>
  42c968:	b	42c79c <ferror@plt+0x29f1c>
  42c96c:	ldr	w2, [x22, #8]
  42c970:	mov	x3, x20
  42c974:	ldr	x0, [x22, #16]
  42c978:	mov	x1, #0x1                   	// #1
  42c97c:	bl	402250 <fwrite_unlocked@plt>
  42c980:	ldp	x19, x20, [sp, #16]
  42c984:	ldp	x21, x22, [sp, #32]
  42c988:	ldp	x29, x30, [sp], #80
  42c98c:	ret
  42c990:	add	x0, x0, #0x540
  42c994:	sub	w2, w2, #0x25
  42c998:	ldr	x19, [x0, w2, sxtw #3]
  42c99c:	b	42c930 <ferror@plt+0x2a0b0>
  42c9a0:	mov	x0, x20
  42c9a4:	bl	402550 <__overflow@plt>
  42c9a8:	b	42c7f4 <ferror@plt+0x29f74>
  42c9ac:	and	x2, x4, #0xff
  42c9b0:	mov	x1, #0x0                   	// #0
  42c9b4:	b	42c878 <ferror@plt+0x29ff8>
  42c9b8:	mov	x1, #0x1                   	// #1
  42c9bc:	b	42c878 <ferror@plt+0x29ff8>
  42c9c0:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c9c4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42c9c8:	add	x2, x2, #0x438
  42c9cc:	add	x0, x0, #0x208
  42c9d0:	mov	w1, #0xc89                 	// #3209
  42c9d4:	bl	4028b0 <ferror@plt+0x30>
  42c9d8:	ldr	w2, [x0, #4]
  42c9dc:	mov	x3, x0
  42c9e0:	ldr	w0, [x1, #4]
  42c9e4:	and	w2, w2, #0xffff00ff
  42c9e8:	and	w0, w0, #0xffff00ff
  42c9ec:	cmp	w2, w0
  42c9f0:	b.eq	42c9fc <ferror@plt+0x2a17c>  // b.none
  42c9f4:	mov	w0, #0x0                   	// #0
  42c9f8:	ret
  42c9fc:	ldrb	w2, [x3, #4]
  42ca00:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ca04:	add	x0, x0, #0xc90
  42ca08:	sbfiz	x4, x2, #4, #32
  42ca0c:	ldr	w0, [x0, x4]
  42ca10:	cmp	w0, #0x2
  42ca14:	b.eq	42ca84 <ferror@plt+0x2a204>  // b.none
  42ca18:	cmp	w0, #0x3
  42ca1c:	b.eq	42ca50 <ferror@plt+0x2a1d0>  // b.none
  42ca20:	cmp	w0, #0x1
  42ca24:	b.eq	42ca38 <ferror@plt+0x2a1b8>  // b.none
  42ca28:	cmp	w2, #0x26
  42ca2c:	mov	w0, #0x1                   	// #1
  42ca30:	b.eq	42cac0 <ferror@plt+0x2a240>  // b.none
  42ca34:	ret
  42ca38:	ldr	x2, [x1, #8]
  42ca3c:	mov	w0, #0x0                   	// #0
  42ca40:	ldr	x4, [x3, #8]
  42ca44:	cmp	x4, x2
  42ca48:	b.eq	42ca70 <ferror@plt+0x2a1f0>  // b.none
  42ca4c:	ret
  42ca50:	cmp	w2, #0x50
  42ca54:	mov	w0, #0x1                   	// #1
  42ca58:	b.ne	42ca34 <ferror@plt+0x2a1b4>  // b.any
  42ca5c:	ldr	w2, [x1, #8]
  42ca60:	mov	w0, #0x0                   	// #0
  42ca64:	ldr	w4, [x3, #8]
  42ca68:	cmp	w4, w2
  42ca6c:	b.ne	42ca34 <ferror@plt+0x2a1b4>  // b.any
  42ca70:	ldr	x0, [x1, #16]
  42ca74:	ldr	x2, [x3, #16]
  42ca78:	cmp	x2, x0
  42ca7c:	cset	w0, eq  // eq = none
  42ca80:	ret
  42ca84:	ldr	w4, [x1, #8]
  42ca88:	mov	w0, #0x0                   	// #0
  42ca8c:	ldr	w2, [x3, #8]
  42ca90:	cmp	w2, w4
  42ca94:	b.ne	42ca34 <ferror@plt+0x2a1b4>  // b.any
  42ca98:	stp	x29, x30, [sp, #-16]!
  42ca9c:	mov	w2, w2
  42caa0:	mov	x29, sp
  42caa4:	ldr	x1, [x1, #16]
  42caa8:	ldr	x0, [x3, #16]
  42caac:	bl	402590 <memcmp@plt>
  42cab0:	cmp	w0, #0x0
  42cab4:	cset	w0, eq  // eq = none
  42cab8:	ldp	x29, x30, [sp], #16
  42cabc:	ret
  42cac0:	ldr	w0, [x1, #8]
  42cac4:	ldr	w2, [x3, #8]
  42cac8:	cmp	w2, w0
  42cacc:	cset	w0, eq  // eq = none
  42cad0:	ret
  42cad4:	nop
  42cad8:	ldrh	w6, [x1, #6]
  42cadc:	mov	w5, #0x35                  	// #53
  42cae0:	ldrh	w4, [x2, #6]
  42cae4:	mov	x8, x0
  42cae8:	ldrb	w3, [x1, #4]
  42caec:	tst	x6, #0x10
  42caf0:	ldrb	w6, [x2, #4]
  42caf4:	csel	w3, w3, w5, eq  // eq = none
  42caf8:	tbnz	w4, #4, 42ccd0 <ferror@plt+0x2a450>
  42cafc:	mov	w5, w6
  42cb00:	mov	w7, w6
  42cb04:	mov	w9, w6
  42cb08:	tbz	w4, #1, 42ccac <ferror@plt+0x2a42c>
  42cb0c:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42cb10:	add	x4, x4, #0xc90
  42cb14:	sub	w5, w5, #0x25
  42cb18:	add	x0, x4, #0x540
  42cb1c:	ldr	x0, [x0, w5, sxtw #3]
  42cb20:	ldrb	w5, [x0]
  42cb24:	cmp	w5, #0x3d
  42cb28:	mov	w0, #0x1                   	// #1
  42cb2c:	ccmp	w3, #0xd, #0x0, eq  // eq = none
  42cb30:	b.le	42cb64 <ferror@plt+0x2a2e4>
  42cb34:	cmp	w3, #0x12
  42cb38:	b.eq	42cc74 <ferror@plt+0x2a3f4>  // b.none
  42cb3c:	b.hi	42cb90 <ferror@plt+0x2a310>  // b.pmore
  42cb40:	cmp	w3, #0x7
  42cb44:	b.eq	42cd84 <ferror@plt+0x2a504>  // b.none
  42cb48:	b.ls	42cb68 <ferror@plt+0x2a2e8>  // b.plast
  42cb4c:	cmp	w3, #0x9
  42cb50:	b.eq	42cd44 <ferror@plt+0x2a4c4>  // b.none
  42cb54:	cmp	w3, #0xa
  42cb58:	b.ne	42cc6c <ferror@plt+0x2a3ec>  // b.any
  42cb5c:	cmp	w5, #0x7c
  42cb60:	cset	w0, eq  // eq = none
  42cb64:	ret
  42cb68:	cmp	w3, #0x4
  42cb6c:	b.eq	42cd50 <ferror@plt+0x2a4d0>  // b.none
  42cb70:	b.ls	42cc84 <ferror@plt+0x2a404>  // b.plast
  42cb74:	cmp	w3, #0x5
  42cb78:	b.ne	42cce4 <ferror@plt+0x2a464>  // b.any
  42cb7c:	cmp	w5, #0x2d
  42cb80:	mov	w0, #0x3e                  	// #62
  42cb84:	ccmp	w5, w0, #0x4, ne  // ne = any
  42cb88:	cset	w0, eq  // eq = none
  42cb8c:	ret
  42cb90:	cmp	w3, #0x35
  42cb94:	b.eq	42cd5c <ferror@plt+0x2a4dc>  // b.none
  42cb98:	b.ls	42cbfc <ferror@plt+0x2a37c>  // b.plast
  42cb9c:	cmp	w3, #0x3d
  42cba0:	b.eq	42cd04 <ferror@plt+0x2a484>  // b.none
  42cba4:	b.ls	42cc28 <ferror@plt+0x2a3a8>  // b.plast
  42cba8:	sub	w3, w3, #0x3e
  42cbac:	cmp	w3, #0x4
  42cbb0:	b.hi	42cce4 <ferror@plt+0x2a464>  // b.pmore
  42cbb4:	ldrb	w1, [x8, #1161]
  42cbb8:	mov	w0, #0x0                   	// #0
  42cbbc:	cbz	w1, 42cb64 <ferror@plt+0x2a2e4>
  42cbc0:	cmp	w7, #0x35
  42cbc4:	mov	w0, #0x1                   	// #1
  42cbc8:	b.eq	42cb64 <ferror@plt+0x2a2e4>  // b.none
  42cbcc:	sbfiz	x6, x6, #4, #32
  42cbd0:	mov	w0, #0x0                   	// #0
  42cbd4:	ldr	w1, [x4, x6]
  42cbd8:	cmp	w1, #0x2
  42cbdc:	b.ne	42cb64 <ferror@plt+0x2a2e4>  // b.any
  42cbe0:	ldr	x1, [x2, #16]
  42cbe4:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42cbe8:	add	x0, x0, #0x2c0
  42cbec:	ldrb	w1, [x1]
  42cbf0:	ldrh	w0, [x0, x1, lsl #1]
  42cbf4:	ubfx	x0, x0, #9, #1
  42cbf8:	ret
  42cbfc:	cmp	w3, #0x2f
  42cc00:	b.eq	42ccf8 <ferror@plt+0x2a478>  // b.none
  42cc04:	cmp	w3, #0x30
  42cc08:	b.ne	42cc54 <ferror@plt+0x2a3d4>  // b.any
  42cc0c:	cmp	w5, #0x2e
  42cc10:	mov	w0, #0x25                  	// #37
  42cc14:	ccmp	w5, w0, #0x4, ne  // ne = any
  42cc18:	mov	w0, #0x37                  	// #55
  42cc1c:	ccmp	w7, w0, #0x4, ne  // ne = any
  42cc20:	cset	w0, eq  // eq = none
  42cc24:	ret
  42cc28:	cmp	w3, #0x37
  42cc2c:	b.ne	42cce4 <ferror@plt+0x2a464>  // b.any
  42cc30:	and	w9, w9, #0xfffffffd
  42cc34:	mov	w0, #0x1                   	// #1
  42cc38:	cmp	w9, #0x35
  42cc3c:	b.eq	42cb64 <ferror@plt+0x2a2e4>  // b.none
  42cc40:	cmp	w5, #0x2b
  42cc44:	sub	w5, w5, #0x2d
  42cc48:	ccmp	w5, w0, #0x0, ne  // ne = any
  42cc4c:	cset	w0, ls  // ls = plast
  42cc50:	ret
  42cc54:	cmp	w3, #0x25
  42cc58:	b.ne	42cce4 <ferror@plt+0x2a464>  // b.any
  42cc5c:	sub	w5, w5, #0x23
  42cc60:	tst	w5, #0xfffffffd
  42cc64:	cset	w0, eq  // eq = none
  42cc68:	ret
  42cc6c:	cmp	w3, #0x8
  42cc70:	b.ne	42cce4 <ferror@plt+0x2a464>  // b.any
  42cc74:	and	w5, w5, #0xfffffffb
  42cc78:	cmp	w5, #0x3a
  42cc7c:	cset	w0, eq  // eq = none
  42cc80:	ret
  42cc84:	cmp	w3, #0x2
  42cc88:	b.eq	42ccec <ferror@plt+0x2a46c>  // b.none
  42cc8c:	cmp	w3, #0x3
  42cc90:	b.ne	42cce4 <ferror@plt+0x2a464>  // b.any
  42cc94:	sub	w0, w5, #0x3a
  42cc98:	cmp	w5, #0x25
  42cc9c:	and	w0, w0, #0xfffffffd
  42cca0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  42cca4:	cset	w0, eq  // eq = none
  42cca8:	ret
  42ccac:	sbfiz	x5, x5, #4, #32
  42ccb0:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ccb4:	add	x4, x4, #0xc90
  42ccb8:	add	x10, x4, x5
  42ccbc:	ldr	w0, [x4, x5]
  42ccc0:	cbnz	w0, 42ccdc <ferror@plt+0x2a45c>
  42ccc4:	ldr	x0, [x10, #8]
  42ccc8:	ldrb	w5, [x0]
  42cccc:	b	42cb24 <ferror@plt+0x2a2a4>
  42ccd0:	mov	w7, w5
  42ccd4:	mov	w9, w5
  42ccd8:	b	42cb08 <ferror@plt+0x2a288>
  42ccdc:	mov	w5, #0xffffffff            	// #-1
  42cce0:	b	42cb34 <ferror@plt+0x2a2b4>
  42cce4:	mov	w0, #0x0                   	// #0
  42cce8:	ret
  42ccec:	cmp	w5, #0x3e
  42ccf0:	cset	w0, eq  // eq = none
  42ccf4:	ret
  42ccf8:	cmp	w5, #0x2a
  42ccfc:	cset	w0, eq  // eq = none
  42cd00:	ret
  42cd04:	ldr	x0, [x1, #16]
  42cd08:	cmp	w7, #0x35
  42cd0c:	cset	w1, eq  // eq = none
  42cd10:	ldrb	w0, [x0]
  42cd14:	cmp	w0, #0x5c
  42cd18:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  42cd1c:	b.ne	42cdec <ferror@plt+0x2a56c>  // b.any
  42cd20:	ldrb	w2, [x8, #1122]
  42cd24:	cmp	w0, #0x40
  42cd28:	mov	w0, #0x0                   	// #0
  42cd2c:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  42cd30:	b.eq	42cb64 <ferror@plt+0x2a2e4>  // b.none
  42cd34:	cmp	w7, #0x3e
  42cd38:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  42cd3c:	cset	w0, ne  // ne = any
  42cd40:	ret
  42cd44:	cmp	w5, #0x26
  42cd48:	cset	w0, eq  // eq = none
  42cd4c:	ret
  42cd50:	cmp	w5, #0x2b
  42cd54:	cset	w0, eq  // eq = none
  42cd58:	ret
  42cd5c:	cmp	w7, #0x37
  42cd60:	b.eq	42cd98 <ferror@plt+0x2a518>  // b.none
  42cd64:	cmp	w7, #0x35
  42cd68:	mov	w1, #0x38                  	// #56
  42cd6c:	mov	w0, #0x1                   	// #1
  42cd70:	ccmp	w7, w1, #0x4, ne  // ne = any
  42cd74:	b.eq	42cb64 <ferror@plt+0x2a2e4>  // b.none
  42cd78:	cmp	w7, #0x3e
  42cd7c:	cset	w0, eq  // eq = none
  42cd80:	ret
  42cd84:	cmp	w5, #0x2f
  42cd88:	mov	w0, #0x2a                  	// #42
  42cd8c:	ccmp	w5, w0, #0x4, ne  // ne = any
  42cd90:	cset	w0, eq  // eq = none
  42cd94:	ret
  42cd98:	ldr	w1, [x2, #8]
  42cd9c:	cbz	w1, 42cdec <ferror@plt+0x2a56c>
  42cda0:	ldr	x0, [x2, #16]
  42cda4:	sub	w1, w1, #0x1
  42cda8:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42cdac:	add	x3, x3, #0x2c0
  42cdb0:	add	x4, x0, #0x1
  42cdb4:	mov	w5, #0x204                 	// #516
  42cdb8:	add	x4, x4, x1
  42cdbc:	nop
  42cdc0:	ldrb	w1, [x0]
  42cdc4:	add	x0, x0, #0x1
  42cdc8:	ldrh	w2, [x3, w1, sxtw #1]
  42cdcc:	tst	w5, w2
  42cdd0:	b.ne	42cde4 <ferror@plt+0x2a564>  // b.any
  42cdd4:	cmp	w1, #0x24
  42cdd8:	b.ne	42cd78 <ferror@plt+0x2a4f8>  // b.any
  42cddc:	ldrb	w1, [x8, #1146]
  42cde0:	cbz	w1, 42cd78 <ferror@plt+0x2a4f8>
  42cde4:	cmp	x0, x4
  42cde8:	b.ne	42cdc0 <ferror@plt+0x2a540>  // b.any
  42cdec:	mov	w0, #0x1                   	// #1
  42cdf0:	ret
  42cdf4:	nop
  42cdf8:	stp	x29, x30, [sp, #-48]!
  42cdfc:	mov	x29, sp
  42ce00:	stp	x19, x20, [sp, #16]
  42ce04:	mov	x20, x1
  42ce08:	stp	x21, x22, [sp, #32]
  42ce0c:	mov	x21, x0
  42ce10:	bl	43a008 <ferror@plt+0x37788>
  42ce14:	mov	x19, x0
  42ce18:	ldrb	w0, [x0, #4]
  42ce1c:	cmp	w0, #0x16
  42ce20:	b.eq	42ce6c <ferror@plt+0x2a5ec>  // b.none
  42ce24:	mov	w22, #0x20                  	// #32
  42ce28:	mov	x1, x20
  42ce2c:	mov	x0, x19
  42ce30:	bl	42c758 <ferror@plt+0x29ed8>
  42ce34:	mov	x0, x21
  42ce38:	bl	43a008 <ferror@plt+0x37788>
  42ce3c:	ldrh	w1, [x0, #6]
  42ce40:	mov	x19, x0
  42ce44:	tbz	w1, #0, 42ce60 <ferror@plt+0x2a5e0>
  42ce48:	ldp	x1, x0, [x20, #40]
  42ce4c:	add	x2, x1, #0x1
  42ce50:	cmp	x1, x0
  42ce54:	b.cs	42ce98 <ferror@plt+0x2a618>  // b.hs, b.nlast
  42ce58:	str	x2, [x20, #40]
  42ce5c:	strb	w22, [x1]
  42ce60:	ldrb	w1, [x19, #4]
  42ce64:	cmp	w1, #0x16
  42ce68:	b.ne	42ce28 <ferror@plt+0x2a5a8>  // b.any
  42ce6c:	ldp	x0, x1, [x20, #40]
  42ce70:	cmp	x0, x1
  42ce74:	b.cs	42cea8 <ferror@plt+0x2a628>  // b.hs, b.nlast
  42ce78:	add	x1, x0, #0x1
  42ce7c:	str	x1, [x20, #40]
  42ce80:	mov	w1, #0xa                   	// #10
  42ce84:	strb	w1, [x0]
  42ce88:	ldp	x19, x20, [sp, #16]
  42ce8c:	ldp	x21, x22, [sp, #32]
  42ce90:	ldp	x29, x30, [sp], #48
  42ce94:	ret
  42ce98:	mov	x0, x20
  42ce9c:	mov	w1, #0x20                  	// #32
  42cea0:	bl	402550 <__overflow@plt>
  42cea4:	b	42ce60 <ferror@plt+0x2a5e0>
  42cea8:	mov	x0, x20
  42ceac:	mov	w1, #0xa                   	// #10
  42ceb0:	ldp	x19, x20, [sp, #16]
  42ceb4:	ldp	x21, x22, [sp, #32]
  42ceb8:	ldp	x29, x30, [sp], #48
  42cebc:	b	402550 <__overflow@plt>
  42cec0:	stp	x29, x30, [sp, #-96]!
  42cec4:	mov	x29, sp
  42cec8:	stp	x19, x20, [sp, #16]
  42cecc:	stp	x21, x22, [sp, #32]
  42ced0:	stp	x23, x24, [sp, #48]
  42ced4:	mov	x23, x0
  42ced8:	stp	x25, x26, [sp, #64]
  42cedc:	str	x27, [sp, #80]
  42cee0:	cbz	x1, 42d104 <ferror@plt+0x2a884>
  42cee4:	mov	x19, x1
  42cee8:	mov	x0, x1
  42ceec:	bl	402270 <strlen@plt>
  42cef0:	add	w22, w0, #0x78
  42cef4:	add	w27, w0, #0x2
  42cef8:	add	w21, w0, #0x2
  42cefc:	add	w0, w0, #0x78
  42cf00:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42cf04:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42cf08:	mov	x2, x19
  42cf0c:	mov	x26, x0
  42cf10:	add	x1, x1, #0x4a8
  42cf14:	bl	402310 <sprintf@plt>
  42cf18:	mov	x0, x23
  42cf1c:	bl	43a008 <ferror@plt+0x37788>
  42cf20:	ldrb	w1, [x0, #4]
  42cf24:	mov	x20, x0
  42cf28:	cmp	w1, #0x16
  42cf2c:	b.eq	42cfe4 <ferror@plt+0x2a764>  // b.none
  42cf30:	adrp	x21, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42cf34:	add	x21, x21, #0xc90
  42cf38:	adrp	x24, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42cf3c:	add	x25, x21, #0x540
  42cf40:	add	x24, x24, #0x460
  42cf44:	nop
  42cf48:	sbfiz	x1, x1, #4, #32
  42cf4c:	ldr	w0, [x21, x1]
  42cf50:	cmp	w0, #0x1
  42cf54:	b.eq	42d05c <ferror@plt+0x2a7dc>  // b.none
  42cf58:	cmp	w0, #0x2
  42cf5c:	mov	w0, #0x6                   	// #6
  42cf60:	b.ne	42cf68 <ferror@plt+0x2a6e8>  // b.any
  42cf64:	ldr	w0, [x20, #8]
  42cf68:	add	w1, w27, #0x2
  42cf6c:	add	w1, w1, w0
  42cf70:	cmp	w1, w22
  42cf74:	b.hi	42d07c <ferror@plt+0x2a7fc>  // b.pmore
  42cf78:	ldrb	w1, [x20, #4]
  42cf7c:	add	x19, x26, w27, uxtw
  42cf80:	sbfiz	x0, x1, #4, #32
  42cf84:	add	x2, x21, x0
  42cf88:	ldr	w0, [x21, x0]
  42cf8c:	cmp	w0, #0x2
  42cf90:	b.eq	42d0b4 <ferror@plt+0x2a834>  // b.none
  42cf94:	b.hi	42d008 <ferror@plt+0x2a788>  // b.pmore
  42cf98:	cbz	w0, 42d0d0 <ferror@plt+0x2a850>
  42cf9c:	ldr	x1, [x20, #8]
  42cfa0:	mov	x0, x19
  42cfa4:	bl	42c058 <ferror@plt+0x297d8>
  42cfa8:	mov	x19, x0
  42cfac:	mov	x0, x23
  42cfb0:	bl	43a008 <ferror@plt+0x37788>
  42cfb4:	mov	x20, x0
  42cfb8:	ldrh	w0, [x0, #6]
  42cfbc:	sub	x19, x19, x26
  42cfc0:	mov	w27, w19
  42cfc4:	tbz	w0, #0, 42d040 <ferror@plt+0x2a7c0>
  42cfc8:	mov	w0, #0x20                  	// #32
  42cfcc:	strb	w0, [x26, w19, uxtw]
  42cfd0:	add	w27, w19, #0x1
  42cfd4:	ldrb	w1, [x20, #4]
  42cfd8:	cmp	w1, #0x16
  42cfdc:	b.ne	42cf48 <ferror@plt+0x2a6c8>  // b.any
  42cfe0:	mov	w21, w27
  42cfe4:	strb	wzr, [x26, x21]
  42cfe8:	mov	x0, x26
  42cfec:	ldp	x19, x20, [sp, #16]
  42cff0:	ldp	x21, x22, [sp, #32]
  42cff4:	ldp	x23, x24, [sp, #48]
  42cff8:	ldp	x25, x26, [sp, #64]
  42cffc:	ldr	x27, [sp, #80]
  42d000:	ldp	x29, x30, [sp], #96
  42d004:	ret
  42d008:	cmp	w0, #0x3
  42d00c:	b.ne	42cfac <ferror@plt+0x2a72c>  // b.any
  42d010:	ldr	x3, [x2, #8]
  42d014:	mov	x2, x24
  42d018:	mov	w1, #0x4                   	// #4
  42d01c:	mov	x0, x23
  42d020:	sub	x19, x19, x26
  42d024:	bl	422e10 <ferror@plt+0x20590>
  42d028:	mov	w27, w19
  42d02c:	mov	x0, x23
  42d030:	bl	43a008 <ferror@plt+0x37788>
  42d034:	mov	x20, x0
  42d038:	ldrh	w0, [x0, #6]
  42d03c:	tbnz	w0, #0, 42cfc8 <ferror@plt+0x2a748>
  42d040:	ldrb	w1, [x20, #4]
  42d044:	cmp	w1, #0x16
  42d048:	b.eq	42cfe0 <ferror@plt+0x2a760>  // b.none
  42d04c:	sbfiz	x1, x1, #4, #32
  42d050:	ldr	w0, [x21, x1]
  42d054:	cmp	w0, #0x1
  42d058:	b.ne	42cf58 <ferror@plt+0x2a6d8>  // b.any
  42d05c:	ldr	x0, [x20, #8]
  42d060:	ldr	w1, [x0, #8]
  42d064:	add	w1, w1, w1, lsl #2
  42d068:	lsl	w0, w1, #1
  42d06c:	add	w1, w27, #0x2
  42d070:	add	w1, w1, w0
  42d074:	cmp	w1, w22
  42d078:	b.ls	42cf78 <ferror@plt+0x2a6f8>  // b.plast
  42d07c:	lsl	w2, w22, #1
  42d080:	mov	x0, x26
  42d084:	cmp	w1, w2
  42d088:	csel	w22, w1, w2, cs  // cs = hs, nlast
  42d08c:	csel	w1, w1, w2, cs  // cs = hs, nlast
  42d090:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  42d094:	mov	x26, x0
  42d098:	ldrb	w1, [x20, #4]
  42d09c:	add	x19, x26, w27, uxtw
  42d0a0:	sbfiz	x0, x1, #4, #32
  42d0a4:	add	x2, x21, x0
  42d0a8:	ldr	w0, [x21, x0]
  42d0ac:	cmp	w0, #0x2
  42d0b0:	b.ne	42cf94 <ferror@plt+0x2a714>  // b.any
  42d0b4:	ldr	w2, [x20, #8]
  42d0b8:	mov	x0, x19
  42d0bc:	ldr	x1, [x20, #16]
  42d0c0:	bl	402220 <memcpy@plt>
  42d0c4:	ldr	w0, [x20, #8]
  42d0c8:	add	x19, x19, x0
  42d0cc:	b	42cfac <ferror@plt+0x2a72c>
  42d0d0:	ldrh	w0, [x20, #6]
  42d0d4:	tbz	w0, #1, 42d0f8 <ferror@plt+0x2a878>
  42d0d8:	sub	w1, w1, #0x25
  42d0dc:	ldr	x1, [x25, w1, sxtw #3]
  42d0e0:	ldrb	w0, [x1], #1
  42d0e4:	cbz	w0, 42cfac <ferror@plt+0x2a72c>
  42d0e8:	strb	w0, [x19], #1
  42d0ec:	ldrb	w0, [x1], #1
  42d0f0:	cbnz	w0, 42d0e8 <ferror@plt+0x2a868>
  42d0f4:	b	42cfac <ferror@plt+0x2a72c>
  42d0f8:	tbnz	w0, #4, 42cf9c <ferror@plt+0x2a71c>
  42d0fc:	ldr	x1, [x2, #8]
  42d100:	b	42d0e0 <ferror@plt+0x2a860>
  42d104:	mov	x0, #0x78                  	// #120
  42d108:	mov	x21, #0x0                   	// #0
  42d10c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42d110:	mov	w22, #0x78                  	// #120
  42d114:	mov	x26, x0
  42d118:	mov	w27, #0x0                   	// #0
  42d11c:	b	42cf18 <ferror@plt+0x2a698>
  42d120:	mov	x2, x1
  42d124:	nop
  42d128:	mov	x3, x2
  42d12c:	ldr	x2, [x2]
  42d130:	cbnz	x2, 42d128 <ferror@plt+0x2a8a8>
  42d134:	ldr	x2, [x0, #72]
  42d138:	str	x2, [x3]
  42d13c:	str	x1, [x0, #72]
  42d140:	ret
  42d144:	nop
  42d148:	add	x4, x0, #0x48
  42d14c:	ldr	x0, [x0, #72]
  42d150:	cbz	x0, 42d188 <ferror@plt+0x2a908>
  42d154:	add	x5, x1, x1, lsl #1
  42d158:	mov	x2, #0x1f40                	// #8000
  42d15c:	add	x5, x2, x5, lsr #1
  42d160:	ldr	x3, [x0, #8]
  42d164:	ldr	x2, [x0, #24]
  42d168:	sub	x2, x2, x3
  42d16c:	cmp	x2, x1
  42d170:	b.cc	42d17c <ferror@plt+0x2a8fc>  // b.lo, b.ul, b.last
  42d174:	cmp	x5, x2
  42d178:	b.cs	42d1d0 <ferror@plt+0x2a950>  // b.hs, b.nlast
  42d17c:	mov	x4, x0
  42d180:	ldr	x0, [x0]
  42d184:	cbnz	x0, 42d160 <ferror@plt+0x2a8e0>
  42d188:	stp	x29, x30, [sp, #-32]!
  42d18c:	mov	x29, sp
  42d190:	str	x19, [sp, #16]
  42d194:	mov	x19, #0x1f40                	// #8000
  42d198:	cmp	x1, x19
  42d19c:	csel	x19, x1, x19, cs  // cs = hs, nlast
  42d1a0:	add	x19, x19, #0x7
  42d1a4:	and	x19, x19, #0xfffffffffffffff8
  42d1a8:	add	x0, x19, #0x20
  42d1ac:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42d1b0:	mov	x1, x0
  42d1b4:	add	x0, x0, x19
  42d1b8:	stp	x1, x1, [x0, #8]
  42d1bc:	str	x0, [x0, #24]
  42d1c0:	str	xzr, [x1, x19]
  42d1c4:	ldr	x19, [sp, #16]
  42d1c8:	ldp	x29, x30, [sp], #32
  42d1cc:	ret
  42d1d0:	ldr	x1, [x0]
  42d1d4:	str	x1, [x4]
  42d1d8:	str	xzr, [x0]
  42d1dc:	str	x3, [x0, #16]
  42d1e0:	ret
  42d1e4:	nop
  42d1e8:	stp	x29, x30, [sp, #-48]!
  42d1ec:	mov	x29, sp
  42d1f0:	ldp	x3, x5, [x1, #16]
  42d1f4:	stp	x19, x20, [sp, #16]
  42d1f8:	ldr	x20, [x0, #72]
  42d1fc:	str	x21, [sp, #32]
  42d200:	mov	x21, x1
  42d204:	sub	x3, x5, x3
  42d208:	add	x3, x2, x3, lsl #1
  42d20c:	cbz	x20, 42d248 <ferror@plt+0x2a9c8>
  42d210:	add	x1, x3, x3, lsl #1
  42d214:	add	x6, x0, #0x48
  42d218:	mov	x0, #0x1f40                	// #8000
  42d21c:	add	x1, x0, x1, lsr #1
  42d220:	ldr	x0, [x20, #8]
  42d224:	ldr	x4, [x20, #24]
  42d228:	sub	x4, x4, x0
  42d22c:	cmp	x3, x4
  42d230:	b.hi	42d23c <ferror@plt+0x2a9bc>  // b.pmore
  42d234:	cmp	x4, x1
  42d238:	b.ls	42d29c <ferror@plt+0x2aa1c>  // b.plast
  42d23c:	mov	x6, x20
  42d240:	ldr	x20, [x20]
  42d244:	cbnz	x20, 42d220 <ferror@plt+0x2a9a0>
  42d248:	mov	x19, #0x1f40                	// #8000
  42d24c:	cmp	x3, x19
  42d250:	csel	x19, x3, x19, cs  // cs = hs, nlast
  42d254:	add	x19, x19, #0x7
  42d258:	and	x19, x19, #0xfffffffffffffff8
  42d25c:	add	x0, x19, #0x20
  42d260:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42d264:	add	x20, x0, x19
  42d268:	ldr	x5, [x21, #24]
  42d26c:	stp	x0, x0, [x20, #8]
  42d270:	str	x20, [x20, #24]
  42d274:	str	xzr, [x0, x19]
  42d278:	ldr	x1, [x21, #16]
  42d27c:	str	x20, [x21]
  42d280:	sub	x2, x5, x1
  42d284:	bl	402220 <memcpy@plt>
  42d288:	mov	x0, x20
  42d28c:	ldp	x19, x20, [sp, #16]
  42d290:	ldr	x21, [sp, #32]
  42d294:	ldp	x29, x30, [sp], #48
  42d298:	ret
  42d29c:	ldr	x1, [x20]
  42d2a0:	str	x1, [x6]
  42d2a4:	str	xzr, [x20]
  42d2a8:	str	x0, [x20, #16]
  42d2ac:	b	42d278 <ferror@plt+0x2a9f8>
  42d2b0:	stp	x29, x30, [sp, #-48]!
  42d2b4:	mov	x29, sp
  42d2b8:	stp	x21, x22, [sp, #32]
  42d2bc:	mov	x21, x1
  42d2c0:	ldr	x22, [x1]
  42d2c4:	stp	x19, x20, [sp, #16]
  42d2c8:	ldr	x20, [x0, #72]
  42d2cc:	ldp	x3, x5, [x22, #16]
  42d2d0:	sub	x3, x5, x3
  42d2d4:	add	x3, x2, x3, lsl #1
  42d2d8:	cbz	x20, 42d318 <ferror@plt+0x2aa98>
  42d2dc:	add	x1, x3, x3, lsl #1
  42d2e0:	add	x6, x0, #0x48
  42d2e4:	mov	x0, #0x1f40                	// #8000
  42d2e8:	add	x1, x0, x1, lsr #1
  42d2ec:	nop
  42d2f0:	ldr	x0, [x20, #8]
  42d2f4:	ldr	x4, [x20, #24]
  42d2f8:	sub	x4, x4, x0
  42d2fc:	cmp	x3, x4
  42d300:	b.hi	42d30c <ferror@plt+0x2aa8c>  // b.pmore
  42d304:	cmp	x4, x1
  42d308:	b.ls	42d36c <ferror@plt+0x2aaec>  // b.plast
  42d30c:	mov	x6, x20
  42d310:	ldr	x20, [x20]
  42d314:	cbnz	x20, 42d2f0 <ferror@plt+0x2aa70>
  42d318:	mov	x19, #0x1f40                	// #8000
  42d31c:	cmp	x3, x19
  42d320:	csel	x19, x3, x19, cs  // cs = hs, nlast
  42d324:	add	x19, x19, #0x7
  42d328:	and	x19, x19, #0xfffffffffffffff8
  42d32c:	add	x0, x19, #0x20
  42d330:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42d334:	add	x20, x0, x19
  42d338:	str	x20, [x20, #24]
  42d33c:	stp	x0, x0, [x20, #8]
  42d340:	ldr	x5, [x22, #24]
  42d344:	str	xzr, [x0, x19]
  42d348:	ldr	x1, [x22, #16]
  42d34c:	sub	x2, x5, x1
  42d350:	bl	402220 <memcpy@plt>
  42d354:	str	x22, [x20]
  42d358:	str	x20, [x21]
  42d35c:	ldp	x19, x20, [sp, #16]
  42d360:	ldp	x21, x22, [sp, #32]
  42d364:	ldp	x29, x30, [sp], #48
  42d368:	ret
  42d36c:	ldr	x1, [x20]
  42d370:	str	x1, [x6]
  42d374:	str	xzr, [x20]
  42d378:	str	x0, [x20, #16]
  42d37c:	b	42d348 <ferror@plt+0x2aac8>
  42d380:	cbz	x0, 42d3b4 <ferror@plt+0x2ab34>
  42d384:	stp	x29, x30, [sp, #-32]!
  42d388:	mov	x29, sp
  42d38c:	str	x19, [sp, #16]
  42d390:	mov	x19, x0
  42d394:	nop
  42d398:	ldr	x0, [x19, #8]
  42d39c:	ldr	x19, [x19]
  42d3a0:	bl	402640 <free@plt>
  42d3a4:	cbnz	x19, 42d398 <ferror@plt+0x2ab18>
  42d3a8:	ldr	x19, [sp, #16]
  42d3ac:	ldp	x29, x30, [sp], #32
  42d3b0:	ret
  42d3b4:	ret
  42d3b8:	stp	x29, x30, [sp, #-48]!
  42d3bc:	mov	x29, sp
  42d3c0:	ldr	x2, [x0, #64]
  42d3c4:	stp	x19, x20, [sp, #16]
  42d3c8:	mov	x19, x1
  42d3cc:	mov	x20, x0
  42d3d0:	ldp	x0, x1, [x2, #16]
  42d3d4:	sub	x1, x1, x0
  42d3d8:	cmp	x1, x19
  42d3dc:	b.cc	42d3f4 <ferror@plt+0x2ab74>  // b.lo, b.ul, b.last
  42d3e0:	add	x19, x0, x19
  42d3e4:	str	x19, [x2, #16]
  42d3e8:	ldp	x19, x20, [sp, #16]
  42d3ec:	ldp	x29, x30, [sp], #48
  42d3f0:	ret
  42d3f4:	ldr	x2, [x20, #72]
  42d3f8:	add	x4, x20, #0x48
  42d3fc:	cbz	x2, 42d438 <ferror@plt+0x2abb8>
  42d400:	add	x3, x19, x19, lsl #1
  42d404:	mov	x0, #0x1f40                	// #8000
  42d408:	add	x3, x0, x3, lsr #1
  42d40c:	nop
  42d410:	ldr	x0, [x2, #8]
  42d414:	ldr	x1, [x2, #24]
  42d418:	sub	x1, x1, x0
  42d41c:	cmp	x19, x1
  42d420:	b.hi	42d42c <ferror@plt+0x2abac>  // b.pmore
  42d424:	cmp	x1, x3
  42d428:	b.ls	42d48c <ferror@plt+0x2ac0c>  // b.plast
  42d42c:	mov	x4, x2
  42d430:	ldr	x2, [x2]
  42d434:	cbnz	x2, 42d410 <ferror@plt+0x2ab90>
  42d438:	str	x21, [sp, #32]
  42d43c:	mov	x21, #0x1f40                	// #8000
  42d440:	cmp	x19, x21
  42d444:	csel	x21, x19, x21, cs  // cs = hs, nlast
  42d448:	add	x21, x21, #0x7
  42d44c:	and	x21, x21, #0xfffffffffffffff8
  42d450:	add	x0, x21, #0x20
  42d454:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42d458:	add	x2, x0, x21
  42d45c:	stp	x0, x0, [x2, #8]
  42d460:	str	x2, [x2, #24]
  42d464:	str	xzr, [x0, x21]
  42d468:	ldr	x21, [sp, #32]
  42d46c:	add	x19, x0, x19
  42d470:	ldr	x1, [x20, #64]
  42d474:	str	x1, [x2]
  42d478:	str	x2, [x20, #64]
  42d47c:	str	x19, [x2, #16]
  42d480:	ldp	x19, x20, [sp, #16]
  42d484:	ldp	x29, x30, [sp], #48
  42d488:	ret
  42d48c:	ldr	x1, [x2]
  42d490:	str	x1, [x4]
  42d494:	str	xzr, [x2]
  42d498:	str	x0, [x2, #16]
  42d49c:	b	42d46c <ferror@plt+0x2abec>
  42d4a0:	stp	x29, x30, [sp, #-224]!
  42d4a4:	mov	x3, x2
  42d4a8:	mov	x29, sp
  42d4ac:	stp	x19, x20, [sp, #16]
  42d4b0:	stp	x21, x22, [sp, #32]
  42d4b4:	mov	x22, x1
  42d4b8:	stp	x23, x24, [sp, #48]
  42d4bc:	stp	x27, x28, [sp, #80]
  42d4c0:	mov	x28, x0
  42d4c4:	ldrb	w0, [x2]
  42d4c8:	str	x2, [sp, #128]
  42d4cc:	mov	w2, #0x55                  	// #85
  42d4d0:	cmp	w0, #0x4c
  42d4d4:	ccmp	w0, w2, #0x4, ne  // ne = any
  42d4d8:	b.ne	42d57c <ferror@plt+0x2acfc>  // b.any
  42d4dc:	ldrb	w23, [x3, #1]
  42d4e0:	add	x19, x3, #0x2
  42d4e4:	cmp	w23, #0x52
  42d4e8:	b.eq	42d938 <ferror@plt+0x2b0b8>  // b.none
  42d4ec:	cmp	w23, #0x22
  42d4f0:	b.eq	42e55c <ferror@plt+0x2bcdc>  // b.none
  42d4f4:	cmp	w23, #0x27
  42d4f8:	b.eq	42d908 <ferror@plt+0x2b088>  // b.none
  42d4fc:	mov	w23, #0x3e                  	// #62
  42d500:	mov	w21, #0x44                  	// #68
  42d504:	ldrb	w1, [x19]
  42d508:	mov	w2, #0x0                   	// #0
  42d50c:	nop
  42d510:	cmp	w1, #0x5c
  42d514:	add	x20, x19, #0x1
  42d518:	b.eq	42d548 <ferror@plt+0x2acc8>  // b.none
  42d51c:	cmp	w1, w23
  42d520:	b.eq	42d5dc <ferror@plt+0x2ad5c>  // b.none
  42d524:	cmp	w1, #0xa
  42d528:	b.eq	42d774 <ferror@plt+0x2aef4>  // b.none
  42d52c:	cbnz	w1, 42d568 <ferror@plt+0x2ace8>
  42d530:	ldrb	w1, [x19, #1]
  42d534:	mov	x19, x20
  42d538:	add	x20, x19, #0x1
  42d53c:	mov	w2, #0x1                   	// #1
  42d540:	cmp	w1, #0x5c
  42d544:	b.ne	42d51c <ferror@plt+0x2ac9c>  // b.any
  42d548:	ldrb	w0, [x28, #19]
  42d54c:	cbnz	w0, 42d568 <ferror@plt+0x2ace8>
  42d550:	ldrb	w1, [x19, #1]
  42d554:	cmp	w1, #0xa
  42d558:	b.eq	42d574 <ferror@plt+0x2acf4>  // b.none
  42d55c:	ldrb	w1, [x19, #2]
  42d560:	add	x19, x19, #0x2
  42d564:	b	42d510 <ferror@plt+0x2ac90>
  42d568:	ldrb	w1, [x19, #1]
  42d56c:	mov	x19, x20
  42d570:	b	42d510 <ferror@plt+0x2ac90>
  42d574:	mov	x19, x20
  42d578:	b	42d510 <ferror@plt+0x2ac90>
  42d57c:	mov	w1, w0
  42d580:	cmp	w0, #0x75
  42d584:	add	x19, x3, #0x1
  42d588:	b.eq	42e4cc <ferror@plt+0x2bc4c>  // b.none
  42d58c:	cmp	w1, #0x52
  42d590:	b.eq	42e774 <ferror@plt+0x2bef4>  // b.none
  42d594:	cmp	w1, #0x22
  42d598:	b.eq	42e578 <ferror@plt+0x2bcf8>  // b.none
  42d59c:	cmp	w1, #0x27
  42d5a0:	b.ne	42d4fc <ferror@plt+0x2ac7c>  // b.any
  42d5a4:	cmp	w0, #0x55
  42d5a8:	mov	w23, #0x27                  	// #39
  42d5ac:	mov	w21, #0x3b                  	// #59
  42d5b0:	b.eq	42d504 <ferror@plt+0x2ac84>  // b.none
  42d5b4:	cmp	w0, #0x75
  42d5b8:	mov	w21, #0x38                  	// #56
  42d5bc:	b.ne	42d504 <ferror@plt+0x2ac84>  // b.any
  42d5c0:	ldr	x0, [sp, #128]
  42d5c4:	mov	w21, #0x3c                  	// #60
  42d5c8:	ldrb	w1, [x0, #1]
  42d5cc:	mov	w0, #0x3a                  	// #58
  42d5d0:	cmp	w1, #0x38
  42d5d4:	csel	w21, w21, w0, eq  // eq = none
  42d5d8:	b	42d504 <ferror@plt+0x2ac84>
  42d5dc:	cbz	w2, 42d5e8 <ferror@plt+0x2ad68>
  42d5e0:	ldrb	w0, [x28, #18]
  42d5e4:	cbz	w0, 42d918 <ferror@plt+0x2b098>
  42d5e8:	cmp	w21, #0x3d
  42d5ec:	b.eq	42ead8 <ferror@plt+0x2c258>  // b.none
  42d5f0:	ldrb	w0, [x28, #1161]
  42d5f4:	cbz	w0, 42d7b8 <ferror@plt+0x2af38>
  42d5f8:	stp	x25, x26, [sp, #64]
  42d5fc:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42d600:	add	x25, x25, #0x2c0
  42d604:	ldrb	w1, [x20]
  42d608:	cmp	w1, #0x5f
  42d60c:	b.ne	42d6d4 <ferror@plt+0x2ae54>  // b.any
  42d610:	ldrb	w0, [x20, #1]
  42d614:	cmp	w0, #0x5f
  42d618:	b.eq	42d6d4 <ferror@plt+0x2ae54>  // b.none
  42d61c:	ldrh	w0, [x25, w1, sxtw #1]
  42d620:	tbz	w0, #9, 42d660 <ferror@plt+0x2ade0>
  42d624:	mov	w0, w21
  42d628:	bl	424b90 <ferror@plt+0x22310>
  42d62c:	bl	424af0 <ferror@plt+0x22270>
  42d630:	mov	w21, w0
  42d634:	ldrb	w2, [x20, #1]
  42d638:	mov	w1, #0x204                 	// #516
  42d63c:	add	x20, x20, #0x1
  42d640:	ldrh	w0, [x25, x2, lsl #1]
  42d644:	tst	w1, w0
  42d648:	b.eq	42d660 <ferror@plt+0x2ade0>  // b.none
  42d64c:	nop
  42d650:	ldrb	w0, [x20, #1]!
  42d654:	ldrh	w0, [x25, x0, lsl #1]
  42d658:	tst	w1, w0
  42d65c:	b.ne	42d650 <ferror@plt+0x2add0>  // b.any
  42d660:	ldp	x25, x26, [sp, #64]
  42d664:	ldr	x1, [x28, #64]
  42d668:	ldr	x0, [sp, #128]
  42d66c:	ldr	x2, [x28]
  42d670:	sub	x23, x20, x0
  42d674:	ldr	x3, [x1, #16]
  42d678:	add	w19, w23, #0x1
  42d67c:	ldr	x0, [x1, #24]
  42d680:	str	x20, [x2]
  42d684:	sub	x0, x0, x3
  42d688:	cmp	x19, x0
  42d68c:	b.hi	42d864 <ferror@plt+0x2afe4>  // b.pmore
  42d690:	add	x19, x3, x19
  42d694:	str	x19, [x1, #16]
  42d698:	ldr	x1, [sp, #128]
  42d69c:	and	x20, x23, #0xffffffff
  42d6a0:	mov	x2, x20
  42d6a4:	mov	x0, x3
  42d6a8:	bl	402220 <memcpy@plt>
  42d6ac:	strb	wzr, [x0, x20]
  42d6b0:	strb	w21, [x22, #4]
  42d6b4:	str	w23, [x22, #8]
  42d6b8:	str	x0, [x22, #16]
  42d6bc:	ldp	x19, x20, [sp, #16]
  42d6c0:	ldp	x21, x22, [sp, #32]
  42d6c4:	ldp	x23, x24, [sp, #48]
  42d6c8:	ldp	x27, x28, [sp, #80]
  42d6cc:	ldp	x29, x30, [sp], #224
  42d6d0:	ret
  42d6d4:	ldrh	w0, [x25, w1, sxtw #1]
  42d6d8:	tbz	w0, #9, 42d660 <ferror@plt+0x2ade0>
  42d6dc:	ldrb	w0, [x20, #1]
  42d6e0:	mov	w4, #0x204                 	// #516
  42d6e4:	sub	w1, w1, #0x71
  42d6e8:	add	x2, x20, #0x1
  42d6ec:	ldrh	w3, [x25, w0, sxtw #1]
  42d6f0:	tst	w4, w3
  42d6f4:	b.eq	42e9c4 <ferror@plt+0x2c144>  // b.none
  42d6f8:	mov	w5, #0x43                  	// #67
  42d6fc:	nop
  42d700:	madd	w1, w1, w5, w0
  42d704:	ldrb	w0, [x2, #1]!
  42d708:	sub	w1, w1, #0x71
  42d70c:	ldrh	w3, [x25, w0, sxtw #1]
  42d710:	tst	w4, w3
  42d714:	b.ne	42d700 <ferror@plt+0x2ae80>  // b.any
  42d718:	sub	x2, x2, x20
  42d71c:	mov	w3, w2
  42d720:	ldr	x0, [x28, #1088]
  42d724:	add	w3, w3, w1
  42d728:	mov	w4, #0x0                   	// #0
  42d72c:	mov	x1, x20
  42d730:	bl	43b210 <ferror@plt+0x38990>
  42d734:	cbz	x0, 42d930 <ferror@plt+0x2b0b0>
  42d738:	ldrb	w0, [x0, #18]
  42d73c:	tbz	w0, #1, 42d930 <ferror@plt+0x2b0b0>
  42d740:	ldrb	w0, [x28, #1162]
  42d744:	cbz	w0, 42d660 <ferror@plt+0x2ade0>
  42d748:	ldrb	w0, [x28, #18]
  42d74c:	cbnz	w0, 42d660 <ferror@plt+0x2ade0>
  42d750:	ldr	w2, [x22]
  42d754:	mov	x0, x28
  42d758:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42d75c:	mov	w3, #0x0                   	// #0
  42d760:	add	x4, x4, #0x578
  42d764:	mov	w1, #0x13                  	// #19
  42d768:	bl	423308 <ferror@plt+0x20a88>
  42d76c:	ldp	x25, x26, [sp, #64]
  42d770:	b	42d664 <ferror@plt+0x2ade4>
  42d774:	cmp	w23, #0x3e
  42d778:	b.eq	42e5e8 <ferror@plt+0x2bd68>  // b.none
  42d77c:	cbnz	w2, 42d8e8 <ferror@plt+0x2b068>
  42d780:	ldr	w0, [x28, #1116]
  42d784:	mov	x20, x19
  42d788:	mov	w21, #0x3d                  	// #61
  42d78c:	cmp	w0, #0x15
  42d790:	b.eq	42d5f0 <ferror@plt+0x2ad70>  // b.none
  42d794:	mov	w3, w23
  42d798:	mov	x0, x28
  42d79c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42d7a0:	mov	w1, #0x2                   	// #2
  42d7a4:	add	x2, x2, #0x5f8
  42d7a8:	bl	422e10 <ferror@plt+0x20590>
  42d7ac:	ldrb	w0, [x28, #1161]
  42d7b0:	mov	w21, #0x3d                  	// #61
  42d7b4:	cbnz	w0, 42d5f8 <ferror@plt+0x2ad78>
  42d7b8:	ldrb	w0, [x28, #1199]
  42d7bc:	cbz	w0, 42d664 <ferror@plt+0x2ade4>
  42d7c0:	stp	x25, x26, [sp, #64]
  42d7c4:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42d7c8:	add	x25, x25, #0x2c0
  42d7cc:	ldrb	w1, [x20]
  42d7d0:	ldrh	w0, [x25, w1, sxtw #1]
  42d7d4:	tbz	w0, #9, 42d660 <ferror@plt+0x2ade0>
  42d7d8:	ldrb	w0, [x20, #1]
  42d7dc:	mov	w4, #0x204                 	// #516
  42d7e0:	sub	w1, w1, #0x71
  42d7e4:	add	x2, x20, #0x1
  42d7e8:	ldrh	w3, [x25, w0, sxtw #1]
  42d7ec:	tst	w4, w3
  42d7f0:	b.eq	42ea78 <ferror@plt+0x2c1f8>  // b.none
  42d7f4:	mov	w5, #0x43                  	// #67
  42d7f8:	madd	w1, w1, w5, w0
  42d7fc:	ldrb	w0, [x2, #1]!
  42d800:	sub	w1, w1, #0x71
  42d804:	ldrh	w3, [x25, w0, sxtw #1]
  42d808:	tst	w4, w3
  42d80c:	b.ne	42d7f8 <ferror@plt+0x2af78>  // b.any
  42d810:	sub	x2, x2, x20
  42d814:	mov	w3, w2
  42d818:	ldr	x0, [x28, #1088]
  42d81c:	add	w3, w3, w1
  42d820:	mov	w4, #0x0                   	// #0
  42d824:	mov	x1, x20
  42d828:	bl	43b210 <ferror@plt+0x38990>
  42d82c:	cbz	x0, 42d660 <ferror@plt+0x2ade0>
  42d830:	ldrb	w0, [x0, #18]
  42d834:	tbz	w0, #1, 42d660 <ferror@plt+0x2ade0>
  42d838:	ldrb	w0, [x28, #18]
  42d83c:	cbnz	w0, 42d660 <ferror@plt+0x2ade0>
  42d840:	ldr	w2, [x22]
  42d844:	mov	x0, x28
  42d848:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42d84c:	mov	w3, #0x0                   	// #0
  42d850:	add	x4, x4, #0x620
  42d854:	mov	w1, #0x17                  	// #23
  42d858:	bl	423308 <ferror@plt+0x20a88>
  42d85c:	ldp	x25, x26, [sp, #64]
  42d860:	b	42d664 <ferror@plt+0x2ade4>
  42d864:	ldr	x1, [x28, #72]
  42d868:	add	x0, x28, #0x48
  42d86c:	cbz	x1, 42d8a8 <ferror@plt+0x2b028>
  42d870:	add	x4, x19, x19, lsl #1
  42d874:	mov	x2, #0x1f40                	// #8000
  42d878:	add	x4, x2, x4, lsr #1
  42d87c:	nop
  42d880:	ldr	x3, [x1, #8]
  42d884:	ldr	x2, [x1, #24]
  42d888:	sub	x2, x2, x3
  42d88c:	cmp	x19, x2
  42d890:	b.hi	42d89c <ferror@plt+0x2b01c>  // b.pmore
  42d894:	cmp	x2, x4
  42d898:	b.ls	42e5f4 <ferror@plt+0x2bd74>  // b.plast
  42d89c:	mov	x0, x1
  42d8a0:	ldr	x1, [x1]
  42d8a4:	cbnz	x1, 42d880 <ferror@plt+0x2b000>
  42d8a8:	mov	x0, #0x1f40                	// #8000
  42d8ac:	cmp	x19, x0
  42d8b0:	csel	x20, x19, x0, cs  // cs = hs, nlast
  42d8b4:	add	x20, x20, #0x7
  42d8b8:	and	x20, x20, #0xfffffffffffffff8
  42d8bc:	add	x0, x20, #0x20
  42d8c0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42d8c4:	add	x1, x0, x20
  42d8c8:	mov	x3, x0
  42d8cc:	stp	x0, x0, [x1, #8]
  42d8d0:	str	x1, [x1, #24]
  42d8d4:	str	xzr, [x0, x20]
  42d8d8:	ldr	x0, [x28, #64]
  42d8dc:	str	x0, [x1]
  42d8e0:	str	x1, [x28, #64]
  42d8e4:	b	42d690 <ferror@plt+0x2ae10>
  42d8e8:	ldrb	w0, [x28, #18]
  42d8ec:	cbnz	w0, 42d780 <ferror@plt+0x2af00>
  42d8f0:	mov	x0, x28
  42d8f4:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42d8f8:	mov	w1, #0x0                   	// #0
  42d8fc:	add	x2, x2, #0x5d0
  42d900:	bl	422e10 <ferror@plt+0x20590>
  42d904:	b	42d780 <ferror@plt+0x2af00>
  42d908:	cmp	w0, #0x4c
  42d90c:	mov	w21, #0x39                  	// #57
  42d910:	b.eq	42d504 <ferror@plt+0x2ac84>  // b.none
  42d914:	b	42d5a4 <ferror@plt+0x2ad24>
  42d918:	mov	x0, x28
  42d91c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42d920:	mov	w1, #0x0                   	// #0
  42d924:	add	x2, x2, #0x5d0
  42d928:	bl	422e10 <ferror@plt+0x20590>
  42d92c:	b	42d5e8 <ferror@plt+0x2ad68>
  42d930:	ldrb	w1, [x20]
  42d934:	b	42d61c <ferror@plt+0x2ad9c>
  42d938:	ldr	x1, [x28]
  42d93c:	mov	w2, #0x3f                  	// #63
  42d940:	str	w2, [sp, #172]
  42d944:	cmp	w0, #0x4c
  42d948:	stp	x25, x26, [sp, #64]
  42d94c:	ldr	w4, [x1, #56]
  42d950:	ldr	x2, [x1, #48]
  42d954:	add	x27, x2, x4, lsl #4
  42d958:	b.ne	42e858 <ferror@plt+0x2bfd8>  // b.any
  42d95c:	ldr	x24, [sp, #128]
  42d960:	add	x0, x19, #0x1
  42d964:	adrp	x25, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42d968:	mov	x20, x0
  42d96c:	mov	x21, #0x0                   	// #0
  42d970:	mov	x19, #0x0                   	// #0
  42d974:	str	xzr, [sp, #104]
  42d978:	stp	wzr, wzr, [sp, #152]
  42d97c:	str	x0, [sp, #160]
  42d980:	add	x0, x25, #0x4b0
  42d984:	mov	x25, #0x0                   	// #0
  42d988:	str	x0, [sp, #112]
  42d98c:	str	wzr, [sp, #168]
  42d990:	ldr	x0, [x27]
  42d994:	cmp	x0, x20
  42d998:	b.cs	42d9ac <ferror@plt+0x2b12c>  // b.hs, b.nlast
  42d99c:	ldr	x0, [x27, #16]
  42d9a0:	add	x27, x27, #0x10
  42d9a4:	cmp	x0, x20
  42d9a8:	b.cc	42d99c <ferror@plt+0x2b11c>  // b.lo, b.ul, b.last
  42d9ac:	b.ne	42ea70 <ferror@plt+0x2c1f0>  // b.any
  42d9b0:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x126d8>
  42d9b4:	add	x0, x26, #0x240
  42d9b8:	str	x0, [sp, #136]
  42d9bc:	b	42d9f4 <ferror@plt+0x2b174>
  42d9c0:	cbz	w26, 42d9e0 <ferror@plt+0x2b160>
  42d9c4:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  42d9c8:	add	x0, x0, #0x7b0
  42d9cc:	ldrb	w0, [x0, w26, uxtw]
  42d9d0:	cbz	w0, 42ec10 <ferror@plt+0x2c390>
  42d9d4:	str	wzr, [x27, #8]
  42d9d8:	ldrb	w0, [x28, #1125]
  42d9dc:	cbnz	w0, 42dc9c <ferror@plt+0x2b41c>
  42d9e0:	ldr	x0, [x27, #16]
  42d9e4:	add	x4, x27, #0x10
  42d9e8:	cmp	x20, x0
  42d9ec:	b.ne	42dae0 <ferror@plt+0x2b260>  // b.any
  42d9f0:	mov	x27, x4
  42d9f4:	ldr	w26, [x27, #8]
  42d9f8:	cmp	w26, #0x20
  42d9fc:	b.eq	42da08 <ferror@plt+0x2b188>  // b.none
  42da00:	cmp	w26, #0x5c
  42da04:	b.ne	42d9c0 <ferror@plt+0x2b140>  // b.any
  42da08:	ldr	x0, [sp, #104]
  42da0c:	sub	x26, x20, x24
  42da10:	cbz	x0, 42df34 <ferror@plt+0x2b6b4>
  42da14:	ldp	x0, x2, [x25, #16]
  42da18:	mov	x23, x26
  42da1c:	sub	x2, x2, x0
  42da20:	cmp	x26, x2
  42da24:	b.hi	42de6c <ferror@plt+0x2b5ec>  // b.pmore
  42da28:	mov	x1, x24
  42da2c:	mov	x2, x23
  42da30:	bl	402220 <memcpy@plt>
  42da34:	add	x24, x19, #0x1
  42da38:	ldp	x0, x2, [x25, #16]
  42da3c:	add	x0, x0, x23
  42da40:	str	x0, [x25, #16]
  42da44:	cmp	x2, x0
  42da48:	b.eq	42dde4 <ferror@plt+0x2b564>  // b.none
  42da4c:	mov	w2, #0x5c                  	// #92
  42da50:	strb	w2, [x0]
  42da54:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42da58:	add	x0, x0, #0x4b8
  42da5c:	ldr	x1, [x25, #16]
  42da60:	cmp	x20, x0
  42da64:	add	x19, x26, x24
  42da68:	ccmp	x21, #0x10, #0x2, ne  // ne = any
  42da6c:	add	x1, x1, #0x1
  42da70:	str	x1, [x25, #16]
  42da74:	b.ls	42e32c <ferror@plt+0x2baac>  // b.plast
  42da78:	ldr	w0, [x27, #8]
  42da7c:	ldr	x2, [x25, #24]
  42da80:	cmp	w0, #0x20
  42da84:	b.eq	42dd94 <ferror@plt+0x2b514>  // b.none
  42da88:	cmp	x2, x1
  42da8c:	b.eq	42dc14 <ferror@plt+0x2b394>  // b.none
  42da90:	mov	w2, #0xa                   	// #10
  42da94:	strb	w2, [x1]
  42da98:	add	x19, x19, #0x1
  42da9c:	cmp	x21, #0x10
  42daa0:	ldr	x0, [x25, #16]
  42daa4:	mov	x24, x20
  42daa8:	add	x0, x0, #0x1
  42daac:	str	x0, [x25, #16]
  42dab0:	b.hi	42d9e0 <ferror@plt+0x2b160>  // b.pmore
  42dab4:	ldr	x0, [sp, #136]
  42dab8:	cmp	x20, x0
  42dabc:	b.eq	42d9e0 <ferror@plt+0x2b160>  // b.none
  42dac0:	add	x0, sp, #0xc8
  42dac4:	add	x4, x27, #0x10
  42dac8:	strb	w2, [x0, x21]
  42dacc:	add	x21, x21, #0x1
  42dad0:	ldr	x0, [x27, #16]
  42dad4:	cmp	x20, x0
  42dad8:	b.eq	42d9f0 <ferror@plt+0x2b170>  // b.none
  42dadc:	nop
  42dae0:	mov	x26, x20
  42dae4:	cmp	x21, #0x10
  42dae8:	ldrb	w7, [x26], #1
  42daec:	b.ls	42e7c0 <ferror@plt+0x2bf40>  // b.plast
  42daf0:	ldr	w0, [sp, #152]
  42daf4:	cbz	w0, 42e364 <ferror@plt+0x2bae4>
  42daf8:	ldr	w0, [sp, #152]
  42dafc:	cmp	w0, #0x2
  42db00:	b.eq	42e608 <ferror@plt+0x2bd88>  // b.none
  42db04:	mov	x27, x4
  42db08:	cmp	w7, #0x29
  42db0c:	b.eq	42e4e8 <ferror@plt+0x2bc68>  // b.none
  42db10:	cmp	w7, #0xa
  42db14:	mov	x20, x26
  42db18:	b.ne	42d990 <ferror@plt+0x2b110>  // b.any
  42db1c:	ldrb	w0, [x28, #16]
  42db20:	cbnz	w0, 42eae0 <ferror@plt+0x2c260>
  42db24:	ldrb	w0, [x28, #25]
  42db28:	cbz	w0, 42db40 <ferror@plt+0x2b2c0>
  42db2c:	ldr	x0, [x28]
  42db30:	ldr	x1, [x0, #16]
  42db34:	ldr	x0, [x0, #32]
  42db38:	cmp	x1, x0
  42db3c:	b.cs	42eae0 <ferror@plt+0x2c260>  // b.hs, b.nlast
  42db40:	ldr	x0, [sp, #104]
  42db44:	sub	x20, x26, x24
  42db48:	cbz	x0, 42e9ec <ferror@plt+0x2c16c>
  42db4c:	ldp	x0, x2, [x25, #16]
  42db50:	mov	x27, x20
  42db54:	sub	x2, x2, x0
  42db58:	cmp	x20, x2
  42db5c:	b.hi	42e8fc <ferror@plt+0x2c07c>  // b.pmore
  42db60:	mov	x1, x24
  42db64:	mov	x2, x27
  42db68:	bl	402220 <memcpy@plt>
  42db6c:	ldr	x0, [x28]
  42db70:	ldr	x1, [x25, #16]
  42db74:	ldr	x2, [x0]
  42db78:	add	x7, x1, x27
  42db7c:	ldr	x1, [x0, #32]
  42db80:	str	x7, [x25, #16]
  42db84:	cmp	x2, x1
  42db88:	b.cc	42e88c <ferror@plt+0x2c00c>  // b.lo, b.ul, b.last
  42db8c:	mov	w1, #0x1                   	// #1
  42db90:	sub	x26, x26, #0x1
  42db94:	str	x26, [x0]
  42db98:	strb	w1, [x0, #104]
  42db9c:	mov	x0, x28
  42dba0:	mov	w1, #0x0                   	// #0
  42dba4:	bl	42b710 <ferror@plt+0x28e90>
  42dba8:	ldrb	w0, [x28, #16]
  42dbac:	cbnz	w0, 42e6a0 <ferror@plt+0x2be20>
  42dbb0:	ldr	x0, [x28]
  42dbb4:	b	42dbd4 <ferror@plt+0x2b354>
  42dbb8:	ubfx	x26, x1, #2, #1
  42dbbc:	mov	x0, x28
  42dbc0:	bl	421958 <ferror@plt+0x1f0d8>
  42dbc4:	ldr	x0, [x28]
  42dbc8:	cmp	x0, #0x0
  42dbcc:	csinc	w1, w26, wzr, ne  // ne = any
  42dbd0:	cbnz	w1, 42e6a0 <ferror@plt+0x2be20>
  42dbd4:	ldrb	w1, [x0, #104]
  42dbd8:	cbz	w1, 42e71c <ferror@plt+0x2be9c>
  42dbdc:	ldr	x1, [x0, #16]
  42dbe0:	ldr	x2, [x0, #32]
  42dbe4:	cmp	x1, x2
  42dbe8:	b.cc	42e710 <ferror@plt+0x2be90>  // b.lo, b.ul, b.last
  42dbec:	ldrb	w4, [x28, #25]
  42dbf0:	cbnz	w4, 42e6a0 <ferror@plt+0x2be20>
  42dbf4:	ldr	x4, [x0, #24]
  42dbf8:	cmp	x4, x2
  42dbfc:	ccmp	x1, x2, #0x0, ne  // ne = any
  42dc00:	ldrb	w1, [x0, #105]
  42dc04:	b.ls	42dbb8 <ferror@plt+0x2b338>  // b.plast
  42dc08:	tbnz	w1, #1, 42dbb8 <ferror@plt+0x2b338>
  42dc0c:	str	x2, [x0, #16]
  42dc10:	b	42dbb8 <ferror@plt+0x2b338>
  42dc14:	ldr	x1, [x28, #72]
  42dc18:	add	x8, x28, #0x48
  42dc1c:	mov	x9, #0x1f40                	// #8000
  42dc20:	cbz	x1, 42dc78 <ferror@plt+0x2b3f8>
  42dc24:	nop
  42dc28:	ldr	x0, [x1, #8]
  42dc2c:	mov	x23, x1
  42dc30:	ldr	x5, [x1, #24]
  42dc34:	ldr	x1, [x1]
  42dc38:	sub	x5, x5, x0
  42dc3c:	sub	x5, x5, #0x1
  42dc40:	cmp	x5, x9
  42dc44:	b.hi	42dc70 <ferror@plt+0x2b3f0>  // b.pmore
  42dc48:	str	x1, [x8]
  42dc4c:	str	xzr, [x23]
  42dc50:	str	x0, [x23, #16]
  42dc54:	ldr	x1, [x25, #16]
  42dc58:	str	x23, [x25]
  42dc5c:	mov	x25, x23
  42dc60:	sub	x2, x2, x1
  42dc64:	bl	402220 <memcpy@plt>
  42dc68:	ldr	x1, [x23, #16]
  42dc6c:	b	42da90 <ferror@plt+0x2b210>
  42dc70:	mov	x8, x23
  42dc74:	cbnz	x1, 42dc28 <ferror@plt+0x2b3a8>
  42dc78:	mov	x0, #0x1f60                	// #8032
  42dc7c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42dc80:	mov	x2, #0x1f40                	// #8000
  42dc84:	add	x23, x0, x2
  42dc88:	str	x23, [x23, #24]
  42dc8c:	stp	x0, x0, [x23, #8]
  42dc90:	ldr	x2, [x25, #24]
  42dc94:	str	xzr, [x0, #8000]
  42dc98:	b	42dc54 <ferror@plt+0x2b3d4>
  42dc9c:	ldr	x0, [sp, #104]
  42dca0:	sub	x9, x20, x24
  42dca4:	cbz	x0, 42e284 <ferror@plt+0x2ba04>
  42dca8:	ldp	x0, x2, [x25, #16]
  42dcac:	mov	x23, x9
  42dcb0:	sub	x2, x2, x0
  42dcb4:	cmp	x9, x2
  42dcb8:	b.hi	42e084 <ferror@plt+0x2b804>  // b.pmore
  42dcbc:	mov	x2, x23
  42dcc0:	mov	x1, x24
  42dcc4:	str	x9, [sp, #120]
  42dcc8:	bl	402220 <memcpy@plt>
  42dccc:	ldp	x0, x2, [x25, #16]
  42dcd0:	ldr	x9, [sp, #120]
  42dcd4:	add	x19, x9, x19
  42dcd8:	add	x0, x0, x23
  42dcdc:	str	x0, [x25, #16]
  42dce0:	sub	x23, x2, x0
  42dce4:	cmp	x23, #0x1
  42dce8:	b.ls	42dfb8 <ferror@plt+0x2b738>  // b.plast
  42dcec:	ldr	x23, [sp, #112]
  42dcf0:	mov	x24, #0x2                   	// #2
  42dcf4:	mov	x1, x23
  42dcf8:	mov	x2, x24
  42dcfc:	bl	402220 <memcpy@plt>
  42dd00:	ldr	x0, [x25, #16]
  42dd04:	ldr	x1, [sp, #112]
  42dd08:	add	x9, x0, x24
  42dd0c:	str	x9, [x25, #16]
  42dd10:	cmp	x20, x1
  42dd14:	ccmp	x21, #0x10, #0x2, ne  // ne = any
  42dd18:	b.ls	42e5c0 <ferror@plt+0x2bd40>  // b.plast
  42dd1c:	and	w24, w26, #0xff
  42dd20:	cmp	w24, #0x2f
  42dd24:	b.ne	42e738 <ferror@plt+0x2beb8>  // b.any
  42dd28:	ldr	x0, [x27, #16]
  42dd2c:	cmp	x20, x0
  42dd30:	b.ne	42e7b8 <ferror@plt+0x2bf38>  // b.any
  42dd34:	ldr	w0, [x27, #24]
  42dd38:	mov	w1, #0x20                  	// #32
  42dd3c:	cmp	w0, #0x5c
  42dd40:	ccmp	w0, w1, #0x4, ne  // ne = any
  42dd44:	b.ne	42ed18 <ferror@plt+0x2c498>  // b.any
  42dd48:	ldr	x2, [x25, #24]
  42dd4c:	cmp	x9, x2
  42dd50:	b.eq	42e178 <ferror@plt+0x2b8f8>  // b.none
  42dd54:	mov	w2, #0x2f                  	// #47
  42dd58:	strb	w2, [x9]
  42dd5c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  42dd60:	add	x0, x0, #0xa38
  42dd64:	ldr	x1, [x25, #16]
  42dd68:	cmp	x20, x0
  42dd6c:	add	x19, x19, #0x3
  42dd70:	ccmp	x21, #0x10, #0x2, ne  // ne = any
  42dd74:	add	x1, x1, #0x1
  42dd78:	str	x1, [x25, #16]
  42dd7c:	b.ls	42ddd0 <ferror@plt+0x2b550>  // b.plast
  42dd80:	add	x27, x27, #0x10
  42dd84:	ldr	w0, [x27, #8]
  42dd88:	ldr	x2, [x25, #24]
  42dd8c:	cmp	w0, #0x20
  42dd90:	b.ne	42da88 <ferror@plt+0x2b208>  // b.any
  42dd94:	cmp	x1, x2
  42dd98:	b.eq	42e1fc <ferror@plt+0x2b97c>  // b.none
  42dd9c:	mov	w2, #0x20                  	// #32
  42dda0:	strb	w2, [x1]
  42dda4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  42dda8:	add	x0, x0, #0x3d8
  42ddac:	ldr	x1, [x25, #16]
  42ddb0:	cmp	x20, x0
  42ddb4:	add	x19, x19, #0x1
  42ddb8:	ccmp	x21, #0x10, #0x2, ne  // ne = any
  42ddbc:	add	x1, x1, #0x1
  42ddc0:	str	x1, [x25, #16]
  42ddc4:	b.ls	42e5d4 <ferror@plt+0x2bd54>  // b.plast
  42ddc8:	ldr	x2, [x25, #24]
  42ddcc:	b	42da88 <ferror@plt+0x2b208>
  42ddd0:	add	x0, sp, #0xc8
  42ddd4:	add	x27, x27, #0x10
  42ddd8:	strb	w2, [x0, x21]
  42dddc:	add	x21, x21, #0x1
  42dde0:	b	42dd84 <ferror@plt+0x2b504>
  42dde4:	ldr	x1, [x28, #72]
  42dde8:	add	x9, x28, #0x48
  42ddec:	mov	x10, #0x1f40                	// #8000
  42ddf0:	cbz	x1, 42de48 <ferror@plt+0x2b5c8>
  42ddf4:	nop
  42ddf8:	ldr	x0, [x1, #8]
  42ddfc:	mov	x19, x1
  42de00:	ldr	x5, [x1, #24]
  42de04:	ldr	x1, [x1]
  42de08:	sub	x5, x5, x0
  42de0c:	sub	x5, x5, #0x1
  42de10:	cmp	x5, x10
  42de14:	b.hi	42de40 <ferror@plt+0x2b5c0>  // b.pmore
  42de18:	str	x1, [x9]
  42de1c:	str	xzr, [x19]
  42de20:	str	x0, [x19, #16]
  42de24:	ldr	x1, [x25, #16]
  42de28:	str	x19, [x25]
  42de2c:	mov	x25, x19
  42de30:	sub	x2, x2, x1
  42de34:	bl	402220 <memcpy@plt>
  42de38:	ldr	x0, [x19, #16]
  42de3c:	b	42da4c <ferror@plt+0x2b1cc>
  42de40:	mov	x9, x19
  42de44:	cbnz	x1, 42ddf8 <ferror@plt+0x2b578>
  42de48:	mov	x0, #0x1f60                	// #8032
  42de4c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42de50:	mov	x4, #0x1f40                	// #8000
  42de54:	add	x19, x0, x4
  42de58:	str	x19, [x19, #24]
  42de5c:	stp	x0, x0, [x19, #8]
  42de60:	ldr	x2, [x25, #24]
  42de64:	str	xzr, [x0, #8000]
  42de68:	b	42de24 <ferror@plt+0x2b5a4>
  42de6c:	mov	x1, x24
  42de70:	str	x2, [sp, #120]
  42de74:	bl	402220 <memcpy@plt>
  42de78:	ldp	x0, x13, [x25, #16]
  42de7c:	add	x12, x28, #0x48
  42de80:	ldr	x2, [sp, #120]
  42de84:	ldr	x5, [x28, #72]
  42de88:	sub	x23, x26, x2
  42de8c:	add	x0, x0, x2
  42de90:	str	x0, [x25, #16]
  42de94:	sub	x10, x13, x0
  42de98:	add	x24, x24, x2
  42de9c:	add	x10, x23, x10, lsl #1
  42dea0:	cbz	x5, 42ded8 <ferror@plt+0x2b658>
  42dea4:	add	x11, x10, x10, lsl #1
  42dea8:	mov	x0, #0x1f40                	// #8000
  42deac:	add	x11, x0, x11, lsr #1
  42deb0:	ldr	x0, [x5, #8]
  42deb4:	ldr	x1, [x5, #24]
  42deb8:	sub	x1, x1, x0
  42debc:	cmp	x10, x1
  42dec0:	b.hi	42decc <ferror@plt+0x2b64c>  // b.pmore
  42dec4:	cmp	x1, x11
  42dec8:	b.ls	42e164 <ferror@plt+0x2b8e4>  // b.plast
  42decc:	mov	x12, x5
  42ded0:	ldr	x5, [x5]
  42ded4:	cbnz	x5, 42deb0 <ferror@plt+0x2b630>
  42ded8:	mov	x0, #0x1f40                	// #8000
  42dedc:	cmp	x10, x0
  42dee0:	csel	x10, x10, x0, cs  // cs = hs, nlast
  42dee4:	add	x10, x10, #0x7
  42dee8:	and	x10, x10, #0xfffffffffffffff8
  42deec:	str	x10, [sp, #120]
  42def0:	add	x0, x10, #0x20
  42def4:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42def8:	ldr	x10, [sp, #120]
  42defc:	add	x5, x0, x10
  42df00:	str	x5, [x5, #24]
  42df04:	stp	x0, x0, [x5, #8]
  42df08:	ldr	x13, [x25, #24]
  42df0c:	str	xzr, [x0, x10]
  42df10:	ldr	x1, [x25, #16]
  42df14:	str	x5, [x25]
  42df18:	mov	x25, x5
  42df1c:	str	x5, [sp, #120]
  42df20:	sub	x2, x13, x1
  42df24:	bl	402220 <memcpy@plt>
  42df28:	ldr	x5, [sp, #120]
  42df2c:	ldr	x0, [x5, #16]
  42df30:	b	42da28 <ferror@plt+0x2b1a8>
  42df34:	ldr	x25, [x28, #72]
  42df38:	add	x5, x28, #0x48
  42df3c:	cbz	x25, 42df78 <ferror@plt+0x2b6f8>
  42df40:	add	x2, x26, x26, lsl #1
  42df44:	mov	x0, #0x1f40                	// #8000
  42df48:	add	x2, x0, x2, lsr #1
  42df4c:	nop
  42df50:	ldr	x0, [x25, #8]
  42df54:	ldr	x1, [x25, #24]
  42df58:	sub	x1, x1, x0
  42df5c:	cmp	x26, x1
  42df60:	b.hi	42df6c <ferror@plt+0x2b6ec>  // b.pmore
  42df64:	cmp	x1, x2
  42df68:	b.ls	42e310 <ferror@plt+0x2ba90>  // b.plast
  42df6c:	mov	x5, x25
  42df70:	ldr	x25, [x25]
  42df74:	cbnz	x25, 42df50 <ferror@plt+0x2b6d0>
  42df78:	mov	x0, #0x1f40                	// #8000
  42df7c:	cmp	x26, x0
  42df80:	csel	x1, x26, x0, cs  // cs = hs, nlast
  42df84:	mov	x23, x26
  42df88:	add	x1, x1, #0x7
  42df8c:	and	x1, x1, #0xfffffffffffffff8
  42df90:	str	x1, [sp, #104]
  42df94:	add	x0, x1, #0x20
  42df98:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42df9c:	ldr	x1, [sp, #104]
  42dfa0:	add	x25, x0, x1
  42dfa4:	str	x25, [sp, #104]
  42dfa8:	stp	x0, x0, [x25, #8]
  42dfac:	str	x25, [x25, #24]
  42dfb0:	str	xzr, [x0, x1]
  42dfb4:	b	42da28 <ferror@plt+0x2b1a8>
  42dfb8:	ldr	x1, [sp, #112]
  42dfbc:	mov	x2, x23
  42dfc0:	bl	402220 <memcpy@plt>
  42dfc4:	ldp	x0, x2, [x25, #16]
  42dfc8:	mov	x9, #0x2                   	// #2
  42dfcc:	ldr	x5, [x28, #72]
  42dfd0:	sub	x24, x9, x23
  42dfd4:	add	x10, x28, #0x48
  42dfd8:	add	x0, x0, x23
  42dfdc:	str	x0, [x25, #16]
  42dfe0:	sub	x8, x2, x0
  42dfe4:	ldr	x0, [sp, #112]
  42dfe8:	add	x8, x24, x8, lsl #1
  42dfec:	add	x23, x0, x23
  42dff0:	cbz	x5, 42e028 <ferror@plt+0x2b7a8>
  42dff4:	add	x12, x8, x8, lsl #1
  42dff8:	mov	x0, #0x1f40                	// #8000
  42dffc:	add	x12, x0, x12, lsr #1
  42e000:	ldr	x0, [x5, #8]
  42e004:	ldr	x1, [x5, #24]
  42e008:	sub	x1, x1, x0
  42e00c:	cmp	x8, x1
  42e010:	b.hi	42e01c <ferror@plt+0x2b79c>  // b.pmore
  42e014:	cmp	x1, x12
  42e018:	b.ls	42e33c <ferror@plt+0x2babc>  // b.plast
  42e01c:	mov	x10, x5
  42e020:	ldr	x5, [x5]
  42e024:	cbnz	x5, 42e000 <ferror@plt+0x2b780>
  42e028:	mov	x1, #0x1f40                	// #8000
  42e02c:	cmp	x8, x1
  42e030:	csel	x1, x8, x1, cs  // cs = hs, nlast
  42e034:	add	x1, x1, #0x7
  42e038:	and	x1, x1, #0xfffffffffffffff8
  42e03c:	str	x1, [sp, #120]
  42e040:	add	x0, x1, #0x20
  42e044:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42e048:	ldr	x1, [sp, #120]
  42e04c:	add	x5, x0, x1
  42e050:	str	x5, [x5, #24]
  42e054:	stp	x0, x0, [x5, #8]
  42e058:	ldr	x2, [x25, #24]
  42e05c:	str	xzr, [x0, x1]
  42e060:	ldr	x1, [x25, #16]
  42e064:	str	x5, [x25]
  42e068:	mov	x25, x5
  42e06c:	str	x5, [sp, #120]
  42e070:	sub	x2, x2, x1
  42e074:	bl	402220 <memcpy@plt>
  42e078:	ldr	x5, [sp, #120]
  42e07c:	ldr	x0, [x5, #16]
  42e080:	b	42dcf4 <ferror@plt+0x2b474>
  42e084:	mov	x1, x24
  42e088:	str	x2, [sp, #120]
  42e08c:	str	x9, [sp, #144]
  42e090:	bl	402220 <memcpy@plt>
  42e094:	ldp	x11, x14, [x25, #16]
  42e098:	add	x12, x28, #0x48
  42e09c:	ldr	x2, [sp, #120]
  42e0a0:	ldr	x5, [x28, #72]
  42e0a4:	add	x24, x24, x2
  42e0a8:	ldr	x9, [sp, #144]
  42e0ac:	add	x11, x11, x2
  42e0b0:	str	x11, [x25, #16]
  42e0b4:	sub	x11, x14, x11
  42e0b8:	sub	x23, x9, x2
  42e0bc:	add	x11, x23, x11, lsl #1
  42e0c0:	cbz	x5, 42e0f8 <ferror@plt+0x2b878>
  42e0c4:	add	x13, x11, x11, lsl #1
  42e0c8:	mov	x0, #0x1f40                	// #8000
  42e0cc:	add	x13, x0, x13, lsr #1
  42e0d0:	ldr	x0, [x5, #8]
  42e0d4:	ldr	x1, [x5, #24]
  42e0d8:	sub	x1, x1, x0
  42e0dc:	cmp	x11, x1
  42e0e0:	b.hi	42e0ec <ferror@plt+0x2b86c>  // b.pmore
  42e0e4:	cmp	x1, x13
  42e0e8:	b.ls	42e350 <ferror@plt+0x2bad0>  // b.plast
  42e0ec:	mov	x12, x5
  42e0f0:	ldr	x5, [x5]
  42e0f4:	cbnz	x5, 42e0d0 <ferror@plt+0x2b850>
  42e0f8:	mov	x1, #0x1f40                	// #8000
  42e0fc:	cmp	x11, x1
  42e100:	csel	x1, x11, x1, cs  // cs = hs, nlast
  42e104:	str	x9, [sp, #144]
  42e108:	add	x1, x1, #0x7
  42e10c:	and	x1, x1, #0xfffffffffffffff8
  42e110:	str	x1, [sp, #120]
  42e114:	add	x0, x1, #0x20
  42e118:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42e11c:	ldr	x1, [sp, #120]
  42e120:	ldr	x9, [sp, #144]
  42e124:	add	x5, x0, x1
  42e128:	str	x5, [x5, #24]
  42e12c:	stp	x0, x0, [x5, #8]
  42e130:	ldr	x14, [x25, #24]
  42e134:	str	xzr, [x0, x1]
  42e138:	ldr	x1, [x25, #16]
  42e13c:	str	x5, [x25]
  42e140:	mov	x25, x5
  42e144:	str	x5, [sp, #120]
  42e148:	sub	x2, x14, x1
  42e14c:	str	x9, [sp, #144]
  42e150:	bl	402220 <memcpy@plt>
  42e154:	ldr	x5, [sp, #120]
  42e158:	ldr	x9, [sp, #144]
  42e15c:	ldr	x0, [x5, #16]
  42e160:	b	42dcbc <ferror@plt+0x2b43c>
  42e164:	ldr	x1, [x5]
  42e168:	str	x1, [x12]
  42e16c:	str	xzr, [x5]
  42e170:	str	x0, [x5, #16]
  42e174:	b	42df10 <ferror@plt+0x2b690>
  42e178:	ldr	x1, [x28, #72]
  42e17c:	add	x9, x28, #0x48
  42e180:	mov	x8, #0x1f40                	// #8000
  42e184:	cbz	x1, 42e1d8 <ferror@plt+0x2b958>
  42e188:	ldr	x0, [x1, #8]
  42e18c:	mov	x23, x1
  42e190:	ldr	x5, [x1, #24]
  42e194:	ldr	x1, [x1]
  42e198:	sub	x5, x5, x0
  42e19c:	sub	x5, x5, #0x1
  42e1a0:	cmp	x5, x8
  42e1a4:	b.hi	42e1d0 <ferror@plt+0x2b950>  // b.pmore
  42e1a8:	str	x1, [x9]
  42e1ac:	str	xzr, [x23]
  42e1b0:	str	x0, [x23, #16]
  42e1b4:	ldr	x1, [x25, #16]
  42e1b8:	str	x23, [x25]
  42e1bc:	mov	x25, x23
  42e1c0:	sub	x2, x2, x1
  42e1c4:	bl	402220 <memcpy@plt>
  42e1c8:	ldr	x9, [x23, #16]
  42e1cc:	b	42dd54 <ferror@plt+0x2b4d4>
  42e1d0:	mov	x9, x23
  42e1d4:	cbnz	x1, 42e188 <ferror@plt+0x2b908>
  42e1d8:	mov	x0, #0x1f60                	// #8032
  42e1dc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42e1e0:	mov	x1, #0x1f40                	// #8000
  42e1e4:	add	x23, x0, x1
  42e1e8:	str	x23, [x23, #24]
  42e1ec:	stp	x0, x0, [x23, #8]
  42e1f0:	ldr	x2, [x25, #24]
  42e1f4:	str	xzr, [x0, #8000]
  42e1f8:	b	42e1b4 <ferror@plt+0x2b934>
  42e1fc:	ldr	x1, [x28, #72]
  42e200:	add	x8, x28, #0x48
  42e204:	mov	x9, #0x1f40                	// #8000
  42e208:	cbz	x1, 42e260 <ferror@plt+0x2b9e0>
  42e20c:	nop
  42e210:	ldr	x0, [x1, #8]
  42e214:	mov	x23, x1
  42e218:	ldr	x5, [x1, #24]
  42e21c:	ldr	x1, [x1]
  42e220:	sub	x5, x5, x0
  42e224:	sub	x5, x5, #0x1
  42e228:	cmp	x5, x9
  42e22c:	b.hi	42e258 <ferror@plt+0x2b9d8>  // b.pmore
  42e230:	str	x1, [x8]
  42e234:	str	xzr, [x23]
  42e238:	str	x0, [x23, #16]
  42e23c:	ldr	x1, [x25, #16]
  42e240:	str	x23, [x25]
  42e244:	mov	x25, x23
  42e248:	sub	x2, x2, x1
  42e24c:	bl	402220 <memcpy@plt>
  42e250:	ldr	x1, [x23, #16]
  42e254:	b	42dd9c <ferror@plt+0x2b51c>
  42e258:	mov	x8, x23
  42e25c:	cbnz	x1, 42e210 <ferror@plt+0x2b990>
  42e260:	mov	x0, #0x1f60                	// #8032
  42e264:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42e268:	mov	x3, #0x1f40                	// #8000
  42e26c:	add	x23, x0, x3
  42e270:	str	x23, [x23, #24]
  42e274:	stp	x0, x0, [x23, #8]
  42e278:	ldr	x2, [x25, #24]
  42e27c:	str	xzr, [x0, #8000]
  42e280:	b	42e23c <ferror@plt+0x2b9bc>
  42e284:	ldr	x25, [x28, #72]
  42e288:	add	x2, x28, #0x48
  42e28c:	cbz	x25, 42e2c8 <ferror@plt+0x2ba48>
  42e290:	add	x5, x9, x9, lsl #1
  42e294:	mov	x0, #0x1f40                	// #8000
  42e298:	add	x5, x0, x5, lsr #1
  42e29c:	nop
  42e2a0:	ldr	x0, [x25, #8]
  42e2a4:	ldr	x1, [x25, #24]
  42e2a8:	sub	x1, x1, x0
  42e2ac:	cmp	x9, x1
  42e2b0:	b.hi	42e2bc <ferror@plt+0x2ba3c>  // b.pmore
  42e2b4:	cmp	x1, x5
  42e2b8:	b.ls	42e5a4 <ferror@plt+0x2bd24>  // b.plast
  42e2bc:	mov	x2, x25
  42e2c0:	ldr	x25, [x25]
  42e2c4:	cbnz	x25, 42e2a0 <ferror@plt+0x2ba20>
  42e2c8:	mov	x0, #0x1f40                	// #8000
  42e2cc:	cmp	x9, x0
  42e2d0:	csel	x1, x9, x0, cs  // cs = hs, nlast
  42e2d4:	mov	x23, x9
  42e2d8:	add	x1, x1, #0x7
  42e2dc:	str	x9, [sp, #120]
  42e2e0:	and	x1, x1, #0xfffffffffffffff8
  42e2e4:	str	x1, [sp, #104]
  42e2e8:	add	x0, x1, #0x20
  42e2ec:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42e2f0:	ldr	x1, [sp, #104]
  42e2f4:	ldr	x9, [sp, #120]
  42e2f8:	add	x25, x0, x1
  42e2fc:	str	x25, [sp, #104]
  42e300:	stp	x0, x0, [x25, #8]
  42e304:	str	x25, [x25, #24]
  42e308:	str	xzr, [x0, x1]
  42e30c:	b	42dcbc <ferror@plt+0x2b43c>
  42e310:	ldr	x1, [x25]
  42e314:	str	x1, [x5]
  42e318:	mov	x23, x26
  42e31c:	str	xzr, [x25]
  42e320:	str	x0, [x25, #16]
  42e324:	str	x25, [sp, #104]
  42e328:	b	42da28 <ferror@plt+0x2b1a8>
  42e32c:	add	x0, sp, #0xc8
  42e330:	strb	w2, [x0, x21]
  42e334:	add	x21, x21, #0x1
  42e338:	b	42da78 <ferror@plt+0x2b1f8>
  42e33c:	ldr	x1, [x5]
  42e340:	str	x1, [x10]
  42e344:	str	xzr, [x5]
  42e348:	str	x0, [x5, #16]
  42e34c:	b	42e060 <ferror@plt+0x2b7e0>
  42e350:	ldr	x1, [x5]
  42e354:	str	x1, [x12]
  42e358:	str	xzr, [x5]
  42e35c:	str	x0, [x5, #16]
  42e360:	b	42e138 <ferror@plt+0x2b8b8>
  42e364:	ldr	w0, [sp, #156]
  42e368:	mov	w1, w0
  42e36c:	cmp	x21, w0, uxtw
  42e370:	b.ls	42e694 <ferror@plt+0x2be14>  // b.plast
  42e374:	add	w2, w0, #0x1
  42e378:	add	x10, sp, #0xb0
  42e37c:	sub	x14, x2, #0x1
  42e380:	mov	x9, #0xffffffff77ffffff    	// #-2281701377
  42e384:	add	x2, sp, #0xc8
  42e388:	mov	x7, #0xfcee00000000        	// #278099132416000
  42e38c:	add	x13, x10, x1
  42e390:	add	x11, x2, x1
  42e394:	mov	x12, #0x0                   	// #0
  42e398:	mov	x2, #0x1                   	// #1
  42e39c:	movk	x9, #0x3fff, lsl #48
  42e3a0:	movk	x7, #0xffff, lsl #48
  42e3a4:	ldrb	w5, [x11, x12]
  42e3a8:	strb	w5, [x13, x12]
  42e3ac:	cmp	w5, #0x3f
  42e3b0:	b.hi	42e500 <ferror@plt+0x2bc80>  // b.pmore
  42e3b4:	cmp	w5, #0x20
  42e3b8:	b.hi	42e494 <ferror@plt+0x2bc14>  // b.pmore
  42e3bc:	cmp	w5, #0x28
  42e3c0:	b.eq	42e86c <ferror@plt+0x2bfec>  // b.none
  42e3c4:	ldr	x1, [x28]
  42e3c8:	cmp	w0, #0x10
  42e3cc:	ldr	w2, [x22]
  42e3d0:	ldr	x3, [x1, #8]
  42e3d4:	sub	x26, x26, x3
  42e3d8:	add	w26, w26, #0x1
  42e3dc:	b.eq	42e540 <ferror@plt+0x2bcc0>  // b.none
  42e3e0:	cmp	w5, #0xa
  42e3e4:	b.eq	42e9d0 <ferror@plt+0x2c150>  // b.none
  42e3e8:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42e3ec:	mov	w3, w26
  42e3f0:	add	x4, x4, #0x530
  42e3f4:	mov	x0, x28
  42e3f8:	mov	w1, #0x3                   	// #3
  42e3fc:	bl	423290 <ferror@plt+0x20a10>
  42e400:	ldr	x0, [x28, #64]
  42e404:	ldr	x2, [sp, #128]
  42e408:	ldr	x1, [sp, #160]
  42e40c:	ldr	x4, [x28]
  42e410:	sub	x2, x1, x2
  42e414:	sub	x5, x1, #0x1
  42e418:	sub	w20, w2, #0x1
  42e41c:	ldr	x3, [x0, #16]
  42e420:	and	x19, x2, #0xffffffff
  42e424:	ldr	x1, [x0, #24]
  42e428:	str	x5, [x4]
  42e42c:	sub	x1, x1, x3
  42e430:	cmp	x1, w2, uxtw
  42e434:	b.cc	42e7d0 <ferror@plt+0x2bf50>  // b.lo, b.ul, b.last
  42e438:	ldr	x1, [sp, #128]
  42e43c:	add	x19, x3, x19
  42e440:	str	x19, [x0, #16]
  42e444:	mov	w2, w20
  42e448:	mov	x0, x3
  42e44c:	bl	402220 <memcpy@plt>
  42e450:	mov	x3, x0
  42e454:	strb	wzr, [x0, w20, uxtw]
  42e458:	mov	w0, #0x3d                  	// #61
  42e45c:	strb	w0, [x22, #4]
  42e460:	ldr	x0, [sp, #104]
  42e464:	str	w20, [x22, #8]
  42e468:	str	x3, [x22, #16]
  42e46c:	cbz	x0, 42e850 <ferror@plt+0x2bfd0>
  42e470:	mov	x1, x0
  42e474:	ldr	x0, [x0]
  42e478:	cbnz	x0, 42e470 <ferror@plt+0x2bbf0>
  42e47c:	ldr	x0, [x28, #72]
  42e480:	ldp	x25, x26, [sp, #64]
  42e484:	str	x0, [x1]
  42e488:	ldr	x0, [sp, #104]
  42e48c:	str	x0, [x28, #72]
  42e490:	b	42d6bc <ferror@plt+0x2ae3c>
  42e494:	lsl	x1, x2, x5
  42e498:	tst	x1, x7
  42e49c:	b.eq	42e3bc <ferror@plt+0x2bb3c>  // b.none
  42e4a0:	cmp	w0, #0xf
  42e4a4:	b.hi	42e3bc <ferror@plt+0x2bb3c>  // b.pmore
  42e4a8:	add	x12, x12, #0x1
  42e4ac:	add	w0, w0, #0x1
  42e4b0:	add	x1, x14, x12
  42e4b4:	cmp	x21, x1
  42e4b8:	b.hi	42e3a4 <ferror@plt+0x2bb24>  // b.pmore
  42e4bc:	mov	x27, x4
  42e4c0:	mov	x20, x26
  42e4c4:	str	w0, [sp, #156]
  42e4c8:	b	42d990 <ferror@plt+0x2b110>
  42e4cc:	ldrb	w1, [x3, #1]
  42e4d0:	add	x19, x3, #0x2
  42e4d4:	cmp	w1, #0x38
  42e4d8:	b.ne	42d58c <ferror@plt+0x2ad0c>  // b.any
  42e4dc:	ldrb	w1, [x3, #2]
  42e4e0:	add	x19, x3, #0x3
  42e4e4:	b	42d58c <ferror@plt+0x2ad0c>
  42e4e8:	mov	w0, #0x2                   	// #2
  42e4ec:	mov	x20, x26
  42e4f0:	mov	x21, #0x0                   	// #0
  42e4f4:	str	w0, [sp, #152]
  42e4f8:	str	wzr, [sp, #168]
  42e4fc:	b	42d990 <ferror@plt+0x2b110>
  42e500:	sub	w1, w5, #0x41
  42e504:	and	w1, w1, #0xff
  42e508:	cmp	w1, #0x3d
  42e50c:	b.hi	42e524 <ferror@plt+0x2bca4>  // b.pmore
  42e510:	lsl	x1, x2, x1
  42e514:	tst	x1, x9
  42e518:	b.eq	42e524 <ferror@plt+0x2bca4>  // b.none
  42e51c:	cmp	w0, #0xf
  42e520:	b.ls	42e4a8 <ferror@plt+0x2bc28>  // b.plast
  42e524:	ldr	x1, [x28]
  42e528:	cmp	w0, #0x10
  42e52c:	ldr	w2, [x22]
  42e530:	ldr	x3, [x1, #8]
  42e534:	sub	x26, x26, x3
  42e538:	add	w26, w26, #0x1
  42e53c:	b.ne	42e3e8 <ferror@plt+0x2bb68>  // b.any
  42e540:	mov	w3, w26
  42e544:	mov	x0, x28
  42e548:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42e54c:	mov	w1, #0x3                   	// #3
  42e550:	add	x4, x4, #0x4d0
  42e554:	bl	423290 <ferror@plt+0x20a10>
  42e558:	b	42e400 <ferror@plt+0x2bb80>
  42e55c:	cmp	w0, #0x4c
  42e560:	mov	w21, #0x3f                  	// #63
  42e564:	b.eq	42d504 <ferror@plt+0x2ac84>  // b.none
  42e568:	cmp	w0, #0x55
  42e56c:	mov	w21, #0x41                  	// #65
  42e570:	b.eq	42d504 <ferror@plt+0x2ac84>  // b.none
  42e574:	nop
  42e578:	cmp	w0, #0x75
  42e57c:	mov	w23, #0x22                  	// #34
  42e580:	mov	w21, #0x3e                  	// #62
  42e584:	b.ne	42d504 <ferror@plt+0x2ac84>  // b.any
  42e588:	ldr	x0, [sp, #128]
  42e58c:	mov	w21, #0x42                  	// #66
  42e590:	ldrb	w1, [x0, #1]
  42e594:	mov	w0, #0x40                  	// #64
  42e598:	cmp	w1, #0x38
  42e59c:	csel	w21, w21, w0, eq  // eq = none
  42e5a0:	b	42d504 <ferror@plt+0x2ac84>
  42e5a4:	ldr	x1, [x25]
  42e5a8:	str	x1, [x2]
  42e5ac:	mov	x23, x9
  42e5b0:	str	xzr, [x25]
  42e5b4:	str	x0, [x25, #16]
  42e5b8:	str	x25, [sp, #104]
  42e5bc:	b	42dcbc <ferror@plt+0x2b43c>
  42e5c0:	add	x1, sp, #0xc8
  42e5c4:	mov	w0, #0x3f3f                	// #16191
  42e5c8:	strh	w0, [x1, x21]
  42e5cc:	add	x21, x21, #0x2
  42e5d0:	b	42dd1c <ferror@plt+0x2b49c>
  42e5d4:	add	x0, sp, #0xc8
  42e5d8:	strb	w2, [x0, x21]
  42e5dc:	add	x21, x21, #0x1
  42e5e0:	ldr	x2, [x25, #24]
  42e5e4:	b	42da88 <ferror@plt+0x2b208>
  42e5e8:	mov	w0, #0x3                   	// #3
  42e5ec:	strb	w0, [x22, #4]
  42e5f0:	b	42d6bc <ferror@plt+0x2ae3c>
  42e5f4:	ldr	x2, [x1]
  42e5f8:	str	x2, [x0]
  42e5fc:	str	xzr, [x1]
  42e600:	str	x3, [x1, #16]
  42e604:	b	42d8d8 <ferror@plt+0x2b058>
  42e608:	ldr	w1, [sp, #156]
  42e60c:	ldr	w0, [sp, #168]
  42e610:	cmp	w1, w0
  42e614:	b.cc	42eb08 <ferror@plt+0x2c288>  // b.lo, b.ul, b.last
  42e618:	cmp	x21, w0, uxtw
  42e61c:	mov	w5, w0
  42e620:	b.ls	42ec28 <ferror@plt+0x2c3a8>  // b.plast
  42e624:	add	w0, w0, #0x1
  42e628:	add	x10, sp, #0xb0
  42e62c:	sub	x5, x5, x0
  42e630:	add	x1, sp, #0xc8
  42e634:	add	x9, x1, x5
  42e638:	add	x5, x10, x5
  42e63c:	b	42e65c <ferror@plt+0x2bddc>
  42e640:	ldr	w1, [sp, #156]
  42e644:	cmp	w1, w0
  42e648:	b.cc	42eb08 <ferror@plt+0x2c288>  // b.lo, b.ul, b.last
  42e64c:	cmp	x21, x0
  42e650:	add	x1, x0, #0x1
  42e654:	b.ls	42e67c <ferror@plt+0x2bdfc>  // b.plast
  42e658:	mov	x0, x1
  42e65c:	ldrb	w2, [x9, x0]
  42e660:	sub	w10, w0, #0x1
  42e664:	ldrb	w1, [x5, x0]
  42e668:	str	w0, [sp, #168]
  42e66c:	cmp	w2, w1
  42e670:	b.eq	42e640 <ferror@plt+0x2bdc0>  // b.none
  42e674:	mov	w0, w10
  42e678:	str	w10, [sp, #168]
  42e67c:	cmp	x21, x0
  42e680:	b.eq	42e694 <ferror@plt+0x2be14>  // b.none
  42e684:	mov	w0, #0x1                   	// #1
  42e688:	mov	x21, #0x11                  	// #17
  42e68c:	str	w0, [sp, #152]
  42e690:	b	42db04 <ferror@plt+0x2b284>
  42e694:	mov	x27, x4
  42e698:	mov	x20, x26
  42e69c:	b	42d990 <ferror@plt+0x2b110>
  42e6a0:	ldr	x1, [x28, #40]
  42e6a4:	mov	w2, #0x40                  	// #64
  42e6a8:	ldr	x0, [sp, #104]
  42e6ac:	mov	w3, #0x16                  	// #22
  42e6b0:	ldr	w1, [x1, #60]
  42e6b4:	strb	w3, [x22, #4]
  42e6b8:	strh	w2, [x22, #6]
  42e6bc:	ldr	w2, [x22]
  42e6c0:	str	w1, [x22]
  42e6c4:	mov	x1, x0
  42e6c8:	ldr	x0, [x0]
  42e6cc:	cbnz	x0, 42e6c4 <ferror@plt+0x2be44>
  42e6d0:	ldr	x0, [x28, #72]
  42e6d4:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42e6d8:	ldp	x19, x20, [sp, #16]
  42e6dc:	add	x4, x4, #0x560
  42e6e0:	ldp	x21, x22, [sp, #32]
  42e6e4:	mov	w3, #0x0                   	// #0
  42e6e8:	ldp	x23, x24, [sp, #48]
  42e6ec:	ldp	x25, x26, [sp, #64]
  42e6f0:	str	x0, [x1]
  42e6f4:	ldr	x0, [sp, #104]
  42e6f8:	str	x0, [x28, #72]
  42e6fc:	mov	x0, x28
  42e700:	mov	w1, #0x3                   	// #3
  42e704:	ldp	x27, x28, [sp, #80]
  42e708:	ldp	x29, x30, [sp], #224
  42e70c:	b	423290 <ferror@plt+0x20a10>
  42e710:	mov	x0, x28
  42e714:	bl	42b0f8 <ferror@plt+0x28878>
  42e718:	ldr	x0, [x28]
  42e71c:	add	x19, x19, x20
  42e720:	ldr	x1, [x0, #48]
  42e724:	ldr	w4, [x0, #56]
  42e728:	ldr	x24, [x0]
  42e72c:	add	x27, x1, x4, lsl #4
  42e730:	mov	x20, x24
  42e734:	b	42d990 <ferror@plt+0x2b110>
  42e738:	and	w7, w26, #0xff
  42e73c:	ldr	x0, [x25, #24]
  42e740:	add	x26, x20, #0x1
  42e744:	cmp	x9, x0
  42e748:	b.eq	42e8d8 <ferror@plt+0x2c058>  // b.none
  42e74c:	strb	w24, [x9]
  42e750:	add	x19, x19, #0x3
  42e754:	cmp	x21, #0x10
  42e758:	ldr	x0, [x25, #16]
  42e75c:	add	x0, x0, #0x1
  42e760:	str	x0, [x25, #16]
  42e764:	b.ls	42ea98 <ferror@plt+0x2c218>  // b.plast
  42e768:	mov	x4, x27
  42e76c:	mov	x24, x26
  42e770:	b	42daf0 <ferror@plt+0x2b270>
  42e774:	ldr	x1, [x28]
  42e778:	stp	x25, x26, [sp, #64]
  42e77c:	ldr	x2, [x1, #48]
  42e780:	ldr	w4, [x1, #56]
  42e784:	add	x27, x2, x4, lsl #4
  42e788:	cmp	w0, #0x75
  42e78c:	mov	w0, #0x3e                  	// #62
  42e790:	str	w0, [sp, #172]
  42e794:	b.ne	42d95c <ferror@plt+0x2b0dc>  // b.any
  42e798:	ldr	x0, [sp, #128]
  42e79c:	mov	w1, #0x42                  	// #66
  42e7a0:	ldrb	w2, [x0, #1]
  42e7a4:	mov	w0, #0x40                  	// #64
  42e7a8:	cmp	w2, #0x38
  42e7ac:	csel	w0, w1, w0, eq  // eq = none
  42e7b0:	str	w0, [sp, #172]
  42e7b4:	b	42d95c <ferror@plt+0x2b0dc>
  42e7b8:	mov	w7, w24
  42e7bc:	b	42e73c <ferror@plt+0x2bebc>
  42e7c0:	add	x0, sp, #0xc8
  42e7c4:	strb	w7, [x0, x21]
  42e7c8:	add	x21, x21, #0x1
  42e7cc:	b	42daf0 <ferror@plt+0x2b270>
  42e7d0:	ldr	x0, [x28, #72]
  42e7d4:	add	x2, x28, #0x48
  42e7d8:	cbz	x0, 42e810 <ferror@plt+0x2bf90>
  42e7dc:	add	x4, x19, x19, lsl #1
  42e7e0:	mov	x1, #0x1f40                	// #8000
  42e7e4:	add	x4, x1, x4, lsr #1
  42e7e8:	ldr	x3, [x0, #8]
  42e7ec:	ldr	x1, [x0, #24]
  42e7f0:	sub	x1, x1, x3
  42e7f4:	cmp	x19, x1
  42e7f8:	b.hi	42e804 <ferror@plt+0x2bf84>  // b.pmore
  42e7fc:	cmp	x1, x4
  42e800:	b.ls	42eaa8 <ferror@plt+0x2c228>  // b.plast
  42e804:	mov	x2, x0
  42e808:	ldr	x0, [x0]
  42e80c:	cbnz	x0, 42e7e8 <ferror@plt+0x2bf68>
  42e810:	mov	x0, #0x1f40                	// #8000
  42e814:	cmp	x19, x0
  42e818:	csel	x21, x19, x0, cs  // cs = hs, nlast
  42e81c:	add	x21, x21, #0x7
  42e820:	and	x21, x21, #0xfffffffffffffff8
  42e824:	add	x0, x21, #0x20
  42e828:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42e82c:	mov	x3, x0
  42e830:	add	x0, x0, x21
  42e834:	stp	x3, x3, [x0, #8]
  42e838:	str	x0, [x0, #24]
  42e83c:	str	xzr, [x3, x21]
  42e840:	ldr	x1, [x28, #64]
  42e844:	str	x1, [x0]
  42e848:	str	x0, [x28, #64]
  42e84c:	b	42e438 <ferror@plt+0x2bbb8>
  42e850:	ldp	x25, x26, [sp, #64]
  42e854:	b	42d6bc <ferror@plt+0x2ae3c>
  42e858:	mov	w1, #0x41                  	// #65
  42e85c:	str	w1, [sp, #172]
  42e860:	cmp	w0, #0x55
  42e864:	b.eq	42d95c <ferror@plt+0x2b0dc>  // b.none
  42e868:	b	42e788 <ferror@plt+0x2bf08>
  42e86c:	mov	w1, #0x22                  	// #34
  42e870:	mov	w2, #0x1                   	// #1
  42e874:	mov	x27, x4
  42e878:	mov	x20, x26
  42e87c:	mov	x21, #0x11                  	// #17
  42e880:	strb	w1, [x10, w0, uxtw]
  42e884:	stp	w2, w0, [sp, #152]
  42e888:	b	42d990 <ferror@plt+0x2b110>
  42e88c:	ldr	x0, [x28, #40]
  42e890:	mov	w5, #0x18                  	// #24
  42e894:	mov	w2, #0x0                   	// #0
  42e898:	ldr	w1, [x0, #12]
  42e89c:	ldr	x7, [x0]
  42e8a0:	sub	w1, w1, #0x1
  42e8a4:	ldr	w4, [x0, #60]
  42e8a8:	smull	x1, w1, w5
  42e8ac:	add	x5, x7, x1
  42e8b0:	ldr	w7, [x7, x1]
  42e8b4:	ldrb	w1, [x5, #6]
  42e8b8:	ldr	w5, [x5, #16]
  42e8bc:	sub	w4, w4, w7
  42e8c0:	add	w5, w5, #0x1
  42e8c4:	lsr	w1, w4, w1
  42e8c8:	add	w1, w1, w5
  42e8cc:	bl	431640 <ferror@plt+0x2edc0>
  42e8d0:	ldr	x0, [x28]
  42e8d4:	b	42db8c <ferror@plt+0x2b30c>
  42e8d8:	mov	x1, x25
  42e8dc:	mov	x0, x28
  42e8e0:	mov	x2, #0x1                   	// #1
  42e8e4:	str	w7, [sp, #120]
  42e8e8:	bl	42d1e8 <ferror@plt+0x2a968>
  42e8ec:	mov	x25, x0
  42e8f0:	ldr	w7, [sp, #120]
  42e8f4:	ldr	x9, [x0, #16]
  42e8f8:	b	42e74c <ferror@plt+0x2becc>
  42e8fc:	mov	x1, x24
  42e900:	str	x2, [sp, #120]
  42e904:	bl	402220 <memcpy@plt>
  42e908:	ldp	x0, x11, [x25, #16]
  42e90c:	add	x9, x28, #0x48
  42e910:	ldr	x2, [sp, #120]
  42e914:	ldr	x4, [x28, #72]
  42e918:	sub	x27, x20, x2
  42e91c:	add	x0, x0, x2
  42e920:	str	x0, [x25, #16]
  42e924:	sub	x0, x11, x0
  42e928:	add	x24, x24, x2
  42e92c:	add	x5, x27, x0, lsl #1
  42e930:	cbz	x4, 42e968 <ferror@plt+0x2c0e8>
  42e934:	add	x10, x5, x5, lsl #1
  42e938:	mov	x0, #0x1f40                	// #8000
  42e93c:	add	x10, x0, x10, lsr #1
  42e940:	ldr	x0, [x4, #8]
  42e944:	ldr	x1, [x4, #24]
  42e948:	sub	x1, x1, x0
  42e94c:	cmp	x5, x1
  42e950:	b.hi	42e95c <ferror@plt+0x2c0dc>  // b.pmore
  42e954:	cmp	x1, x10
  42e958:	b.ls	42ea84 <ferror@plt+0x2c204>  // b.plast
  42e95c:	mov	x9, x4
  42e960:	ldr	x4, [x4]
  42e964:	cbnz	x4, 42e940 <ferror@plt+0x2c0c0>
  42e968:	mov	x1, #0x1f40                	// #8000
  42e96c:	cmp	x5, x1
  42e970:	csel	x1, x5, x1, cs  // cs = hs, nlast
  42e974:	add	x1, x1, #0x7
  42e978:	and	x1, x1, #0xfffffffffffffff8
  42e97c:	str	x1, [sp, #120]
  42e980:	add	x0, x1, #0x20
  42e984:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42e988:	ldr	x1, [sp, #120]
  42e98c:	add	x4, x0, x1
  42e990:	str	x4, [x4, #24]
  42e994:	stp	x0, x0, [x4, #8]
  42e998:	ldr	x11, [x25, #24]
  42e99c:	str	xzr, [x0, x1]
  42e9a0:	ldr	x1, [x25, #16]
  42e9a4:	str	x4, [x25]
  42e9a8:	mov	x25, x4
  42e9ac:	str	x4, [sp, #120]
  42e9b0:	sub	x2, x11, x1
  42e9b4:	bl	402220 <memcpy@plt>
  42e9b8:	ldr	x4, [sp, #120]
  42e9bc:	ldr	x0, [x4, #16]
  42e9c0:	b	42db60 <ferror@plt+0x2b2e0>
  42e9c4:	mov	x2, #0x1                   	// #1
  42e9c8:	mov	w3, w2
  42e9cc:	b	42d720 <ferror@plt+0x2aea0>
  42e9d0:	mov	w3, w26
  42e9d4:	mov	x0, x28
  42e9d8:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42e9dc:	mov	w1, #0x3                   	// #3
  42e9e0:	add	x4, x4, #0x500
  42e9e4:	bl	423290 <ferror@plt+0x20a10>
  42e9e8:	b	42e400 <ferror@plt+0x2bb80>
  42e9ec:	ldr	x25, [x28, #72]
  42e9f0:	add	x2, x28, #0x48
  42e9f4:	cbz	x25, 42ea30 <ferror@plt+0x2c1b0>
  42e9f8:	add	x4, x20, x20, lsl #1
  42e9fc:	mov	x0, #0x1f40                	// #8000
  42ea00:	add	x4, x0, x4, lsr #1
  42ea04:	nop
  42ea08:	ldr	x0, [x25, #8]
  42ea0c:	ldr	x1, [x25, #24]
  42ea10:	sub	x1, x1, x0
  42ea14:	cmp	x20, x1
  42ea18:	b.hi	42ea24 <ferror@plt+0x2c1a4>  // b.pmore
  42ea1c:	cmp	x1, x4
  42ea20:	b.ls	42eabc <ferror@plt+0x2c23c>  // b.plast
  42ea24:	mov	x2, x25
  42ea28:	ldr	x25, [x25]
  42ea2c:	cbnz	x25, 42ea08 <ferror@plt+0x2c188>
  42ea30:	mov	x0, #0x1f40                	// #8000
  42ea34:	cmp	x20, x0
  42ea38:	csel	x1, x20, x0, cs  // cs = hs, nlast
  42ea3c:	mov	x27, x20
  42ea40:	add	x1, x1, #0x7
  42ea44:	and	x1, x1, #0xfffffffffffffff8
  42ea48:	str	x1, [sp, #104]
  42ea4c:	add	x0, x1, #0x20
  42ea50:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42ea54:	ldr	x1, [sp, #104]
  42ea58:	add	x25, x0, x1
  42ea5c:	str	x25, [sp, #104]
  42ea60:	stp	x0, x0, [x25, #8]
  42ea64:	str	x25, [x25, #24]
  42ea68:	str	xzr, [x0, x1]
  42ea6c:	b	42db60 <ferror@plt+0x2b2e0>
  42ea70:	mov	x4, x27
  42ea74:	b	42dae0 <ferror@plt+0x2b260>
  42ea78:	mov	x2, #0x1                   	// #1
  42ea7c:	mov	w3, w2
  42ea80:	b	42d818 <ferror@plt+0x2af98>
  42ea84:	ldr	x1, [x4]
  42ea88:	str	x1, [x9]
  42ea8c:	str	xzr, [x4]
  42ea90:	str	x0, [x4, #16]
  42ea94:	b	42e9a0 <ferror@plt+0x2c120>
  42ea98:	add	x0, sp, #0xc8
  42ea9c:	strb	w24, [x0, x21]
  42eaa0:	add	x21, x21, #0x1
  42eaa4:	b	42e768 <ferror@plt+0x2bee8>
  42eaa8:	ldr	x1, [x0]
  42eaac:	str	x1, [x2]
  42eab0:	str	xzr, [x0]
  42eab4:	str	x3, [x0, #16]
  42eab8:	b	42e840 <ferror@plt+0x2bfc0>
  42eabc:	ldr	x1, [x25]
  42eac0:	str	x1, [x2]
  42eac4:	mov	x27, x20
  42eac8:	str	xzr, [x25]
  42eacc:	str	x0, [x25, #16]
  42ead0:	str	x25, [sp, #104]
  42ead4:	b	42db60 <ferror@plt+0x2b2e0>
  42ead8:	mov	x19, x20
  42eadc:	b	42d780 <ferror@plt+0x2af00>
  42eae0:	ldr	w2, [x22]
  42eae4:	mov	w5, #0x3d                  	// #61
  42eae8:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42eaec:	sub	x26, x26, #0x1
  42eaf0:	add	x4, x4, #0x560
  42eaf4:	mov	x0, x28
  42eaf8:	mov	w3, #0x0                   	// #0
  42eafc:	mov	w1, #0x3                   	// #3
  42eb00:	str	w5, [sp, #172]
  42eb04:	bl	423290 <ferror@plt+0x20a10>
  42eb08:	ldrb	w0, [x28, #1161]
  42eb0c:	cbz	w0, 42eb6c <ferror@plt+0x2c2ec>
  42eb10:	ldrb	w0, [x26]
  42eb14:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42eb18:	add	x25, x25, #0x2c0
  42eb1c:	cmp	w0, #0x5f
  42eb20:	b.ne	42ec80 <ferror@plt+0x2c400>  // b.any
  42eb24:	ldrb	w1, [x26, #1]
  42eb28:	cmp	w1, #0x5f
  42eb2c:	b.eq	42ec80 <ferror@plt+0x2c400>  // b.none
  42eb30:	ldrh	w0, [x25, w0, sxtw #1]
  42eb34:	tbz	w0, #9, 42eb6c <ferror@plt+0x2c2ec>
  42eb38:	ldr	w0, [sp, #172]
  42eb3c:	add	x26, x26, #0x1
  42eb40:	bl	424af0 <ferror@plt+0x22270>
  42eb44:	str	w0, [sp, #172]
  42eb48:	ldrb	w1, [x26]
  42eb4c:	mov	w0, #0x204                 	// #516
  42eb50:	ldrh	w1, [x25, x1, lsl #1]
  42eb54:	tst	w0, w1
  42eb58:	b.eq	42eb6c <ferror@plt+0x2c2ec>  // b.none
  42eb5c:	ldrb	w1, [x26, #1]!
  42eb60:	ldrh	w1, [x25, x1, lsl #1]
  42eb64:	tst	w0, w1
  42eb68:	b.ne	42eb5c <ferror@plt+0x2c2dc>  // b.any
  42eb6c:	ldr	x0, [x28]
  42eb70:	sub	x20, x26, x24
  42eb74:	ldrb	w21, [sp, #172]
  42eb78:	str	x26, [x0]
  42eb7c:	ldr	x0, [sp, #104]
  42eb80:	cbz	x0, 42ec30 <ferror@plt+0x2c3b0>
  42eb84:	add	x1, x19, #0x1
  42eb88:	mov	x23, x0
  42eb8c:	add	x1, x1, x20
  42eb90:	mov	x0, x28
  42eb94:	bl	42d3b8 <ferror@plt+0x2ab38>
  42eb98:	mov	x3, x0
  42eb9c:	add	w19, w19, w20
  42eba0:	strb	w21, [x22, #4]
  42eba4:	str	w19, [x22, #8]
  42eba8:	str	x0, [x22, #16]
  42ebac:	ldp	x1, x2, [x23, #8]
  42ebb0:	mov	x0, x3
  42ebb4:	sub	x2, x2, x1
  42ebb8:	bl	402220 <memcpy@plt>
  42ebbc:	mov	x3, x0
  42ebc0:	ldp	x1, x0, [x23, #8]
  42ebc4:	ldr	x23, [x23]
  42ebc8:	sub	x0, x0, x1
  42ebcc:	add	x3, x3, x0
  42ebd0:	cbnz	x23, 42ebac <ferror@plt+0x2c32c>
  42ebd4:	ldr	x0, [sp, #104]
  42ebd8:	mov	x1, x0
  42ebdc:	ldr	x0, [x0]
  42ebe0:	cbnz	x0, 42ebd8 <ferror@plt+0x2c358>
  42ebe4:	ldr	x0, [x28, #72]
  42ebe8:	str	x0, [x1]
  42ebec:	ldr	x0, [sp, #104]
  42ebf0:	str	x0, [x28, #72]
  42ebf4:	mov	x2, x20
  42ebf8:	mov	x1, x24
  42ebfc:	mov	x0, x3
  42ec00:	bl	402220 <memcpy@plt>
  42ec04:	strb	wzr, [x0, x20]
  42ec08:	ldp	x25, x26, [sp, #64]
  42ec0c:	b	42d6bc <ferror@plt+0x2ae3c>
  42ec10:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ec14:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ec18:	add	x2, x2, #0x4c0
  42ec1c:	add	x0, x0, #0x208
  42ec20:	mov	w1, #0x6f0                 	// #1776
  42ec24:	bl	4028b0 <ferror@plt+0x30>
  42ec28:	mov	x0, x5
  42ec2c:	b	42e67c <ferror@plt+0x2bdfc>
  42ec30:	ldr	x0, [x28, #64]
  42ec34:	add	w23, w20, #0x1
  42ec38:	add	w1, w20, #0x1
  42ec3c:	ldp	x3, x2, [x0, #16]
  42ec40:	sub	x2, x2, x3
  42ec44:	cmp	x23, x2
  42ec48:	b.hi	42ed30 <ferror@plt+0x2c4b0>  // b.pmore
  42ec4c:	and	x19, x20, #0xffffffff
  42ec50:	add	x23, x3, x23
  42ec54:	str	x23, [x0, #16]
  42ec58:	mov	x1, x24
  42ec5c:	mov	x2, x19
  42ec60:	mov	x0, x3
  42ec64:	bl	402220 <memcpy@plt>
  42ec68:	strb	wzr, [x0, x19]
  42ec6c:	strb	w21, [x22, #4]
  42ec70:	ldp	x25, x26, [sp, #64]
  42ec74:	str	w20, [x22, #8]
  42ec78:	str	x0, [x22, #16]
  42ec7c:	b	42d6bc <ferror@plt+0x2ae3c>
  42ec80:	ldrh	w1, [x25, w0, sxtw #1]
  42ec84:	tbz	w1, #9, 42eb6c <ferror@plt+0x2c2ec>
  42ec88:	ldrb	w4, [x26, #1]
  42ec8c:	sub	w3, w0, #0x71
  42ec90:	add	x1, x26, #0x1
  42ec94:	mov	w0, #0x204                 	// #516
  42ec98:	ldrh	w2, [x25, w4, sxtw #1]
  42ec9c:	tst	w0, w2
  42eca0:	b.eq	42ecc4 <ferror@plt+0x2c444>  // b.none
  42eca4:	mov	w2, w0
  42eca8:	mov	w5, #0x43                  	// #67
  42ecac:	madd	w0, w3, w5, w4
  42ecb0:	ldrb	w4, [x1, #1]!
  42ecb4:	sub	w3, w0, #0x71
  42ecb8:	ldrh	w0, [x25, w4, sxtw #1]
  42ecbc:	tst	w2, w0
  42ecc0:	b.ne	42ecac <ferror@plt+0x2c42c>  // b.any
  42ecc4:	ldr	x0, [x28, #1088]
  42ecc8:	sub	x2, x1, x26
  42eccc:	add	w3, w3, w2
  42ecd0:	mov	x1, x26
  42ecd4:	mov	w4, #0x0                   	// #0
  42ecd8:	bl	43b210 <ferror@plt+0x38990>
  42ecdc:	cbz	x0, 42edb8 <ferror@plt+0x2c538>
  42ece0:	ldrb	w0, [x0, #18]
  42ece4:	tbz	w0, #1, 42edb8 <ferror@plt+0x2c538>
  42ece8:	ldrb	w0, [x28, #1162]
  42ecec:	cbz	w0, 42eb6c <ferror@plt+0x2c2ec>
  42ecf0:	ldrb	w0, [x28, #18]
  42ecf4:	cbnz	w0, 42eb6c <ferror@plt+0x2c2ec>
  42ecf8:	ldr	w2, [x22]
  42ecfc:	mov	x0, x28
  42ed00:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ed04:	mov	w3, #0x0                   	// #0
  42ed08:	add	x4, x4, #0x578
  42ed0c:	mov	w1, #0x13                  	// #19
  42ed10:	bl	423308 <ferror@plt+0x20a88>
  42ed14:	b	42eb6c <ferror@plt+0x2c2ec>
  42ed18:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ed1c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ed20:	add	x2, x2, #0x4c0
  42ed24:	add	x0, x0, #0x208
  42ed28:	mov	w1, #0x6e1                 	// #1761
  42ed2c:	bl	4028b0 <ferror@plt+0x30>
  42ed30:	ldr	x0, [x28, #72]
  42ed34:	add	x4, x28, #0x48
  42ed38:	cbz	x0, 42ed74 <ferror@plt+0x2c4f4>
  42ed3c:	mov	w3, #0x3                   	// #3
  42ed40:	mov	x2, #0x1f40                	// #8000
  42ed44:	umull	x1, w1, w3
  42ed48:	add	x1, x2, x1, lsr #1
  42ed4c:	ldr	x3, [x0, #8]
  42ed50:	ldr	x2, [x0, #24]
  42ed54:	sub	x2, x2, x3
  42ed58:	cmp	x23, x2
  42ed5c:	b.hi	42ed68 <ferror@plt+0x2c4e8>  // b.pmore
  42ed60:	cmp	x2, x1
  42ed64:	b.ls	42edc0 <ferror@plt+0x2c540>  // b.plast
  42ed68:	mov	x4, x0
  42ed6c:	ldr	x0, [x0]
  42ed70:	cbnz	x0, 42ed4c <ferror@plt+0x2c4cc>
  42ed74:	mov	x0, #0x1f40                	// #8000
  42ed78:	cmp	x23, x0
  42ed7c:	csel	x19, x23, x0, cs  // cs = hs, nlast
  42ed80:	add	x19, x19, #0x7
  42ed84:	and	x19, x19, #0xfffffffffffffff8
  42ed88:	add	x0, x19, #0x20
  42ed8c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42ed90:	mov	x1, x0
  42ed94:	add	x0, x0, x19
  42ed98:	stp	x1, x1, [x0, #8]
  42ed9c:	str	x0, [x0, #24]
  42eda0:	str	xzr, [x1, x19]
  42eda4:	ldr	x1, [x28, #64]
  42eda8:	str	x1, [x0]
  42edac:	ldr	x3, [x0, #16]
  42edb0:	str	x0, [x28, #64]
  42edb4:	b	42ec4c <ferror@plt+0x2c3cc>
  42edb8:	ldrb	w0, [x26]
  42edbc:	b	42eb30 <ferror@plt+0x2c2b0>
  42edc0:	ldr	x1, [x0]
  42edc4:	str	x1, [x4]
  42edc8:	str	xzr, [x0]
  42edcc:	str	x3, [x0, #16]
  42edd0:	b	42eda4 <ferror@plt+0x2c524>
  42edd4:	nop
  42edd8:	stp	x29, x30, [sp, #-144]!
  42eddc:	mov	x29, sp
  42ede0:	stp	x19, x20, [sp, #16]
  42ede4:	mov	x19, x0
  42ede8:	stp	x25, x26, [sp, #64]
  42edec:	mov	x25, #0x6166                	// #24934
  42edf0:	movk	x25, #0x6c6c, lsl #16
  42edf4:	ldr	x20, [x0, #448]
  42edf8:	movk	x25, #0x6874, lsl #32
  42edfc:	stp	x21, x22, [sp, #32]
  42ee00:	movk	x25, #0x6f72, lsl #48
  42ee04:	add	x0, x20, #0x18
  42ee08:	stp	x23, x24, [sp, #48]
  42ee0c:	adrp	x23, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ee10:	add	x23, x23, #0x668
  42ee14:	mov	w24, #0x0                   	// #0
  42ee18:	str	x0, [x19, #448]
  42ee1c:	ldr	x21, [x19]
  42ee20:	strh	wzr, [x20, #6]
  42ee24:	ldrb	w0, [x21, #104]
  42ee28:	cbz	w0, 42eef8 <ferror@plt+0x2c678>
  42ee2c:	ldrb	w0, [x19, #32]
  42ee30:	cbnz	w0, 42fa7c <ferror@plt+0x2d1fc>
  42ee34:	ldrb	w0, [x19, #16]
  42ee38:	cbnz	w0, 42eeb8 <ferror@plt+0x2c638>
  42ee3c:	mov	x0, x21
  42ee40:	b	42ee68 <ferror@plt+0x2c5e8>
  42ee44:	ubfx	x22, x1, #2, #1
  42ee48:	mov	x0, x19
  42ee4c:	bl	421958 <ferror@plt+0x1f0d8>
  42ee50:	ldr	x0, [x19]
  42ee54:	cmp	x0, #0x0
  42ee58:	csinc	w1, w22, wzr, ne  // ne = any
  42ee5c:	cbnz	w1, 42eeb8 <ferror@plt+0x2c638>
  42ee60:	ldrb	w1, [x0, #104]
  42ee64:	cbz	w1, 42f080 <ferror@plt+0x2c800>
  42ee68:	ldr	x1, [x0, #16]
  42ee6c:	ldr	x2, [x0, #32]
  42ee70:	cmp	x1, x2
  42ee74:	b.cc	42f0cc <ferror@plt+0x2c84c>  // b.lo, b.ul, b.last
  42ee78:	ldrb	w3, [x19, #25]
  42ee7c:	cbnz	w3, 42eeb8 <ferror@plt+0x2c638>
  42ee80:	ldr	x3, [x0, #24]
  42ee84:	cmp	x3, x2
  42ee88:	ccmp	x1, x2, #0x0, ne  // ne = any
  42ee8c:	ldrb	w1, [x0, #105]
  42ee90:	b.ls	42ee44 <ferror@plt+0x2c5c4>  // b.plast
  42ee94:	tbnz	w1, #1, 42ee44 <ferror@plt+0x2c5c4>
  42ee98:	str	x2, [x0, #16]
  42ee9c:	ubfx	x22, x1, #2, #1
  42eea0:	mov	x0, x19
  42eea4:	bl	421958 <ferror@plt+0x1f0d8>
  42eea8:	ldr	x0, [x19]
  42eeac:	cmp	x0, #0x0
  42eeb0:	csinc	w1, w22, wzr, ne  // ne = any
  42eeb4:	cbz	w1, 42ee60 <ferror@plt+0x2c5e0>
  42eeb8:	mov	w0, #0x16                  	// #22
  42eebc:	strb	w0, [x20, #4]
  42eec0:	ldrb	w0, [x19, #16]
  42eec4:	cbnz	w0, 42eedc <ferror@plt+0x2c65c>
  42eec8:	ldr	x1, [x19, #40]
  42eecc:	mov	w0, #0x40                  	// #64
  42eed0:	ldr	w1, [x1, #60]
  42eed4:	str	w1, [x20]
  42eed8:	strh	w0, [x20, #6]
  42eedc:	mov	x0, x20
  42eee0:	ldp	x19, x20, [sp, #16]
  42eee4:	ldp	x21, x22, [sp, #32]
  42eee8:	ldp	x23, x24, [sp, #48]
  42eeec:	ldp	x25, x26, [sp, #64]
  42eef0:	ldp	x29, x30, [sp], #144
  42eef4:	ret
  42eef8:	stp	x27, x28, [sp, #80]
  42eefc:	mov	w26, #0x594c                	// #22860
  42ef00:	movk	w26, #0x4620, lsl #16
  42ef04:	ldr	x0, [x19, #40]
  42ef08:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ef0c:	add	x6, x1, #0xb90
  42ef10:	ldr	w0, [x0, #60]
  42ef14:	str	w0, [x20]
  42ef18:	ldr	w1, [x21, #56]
  42ef1c:	ldr	x2, [x21, #48]
  42ef20:	lsl	x1, x1, #4
  42ef24:	ldr	x0, [x21]
  42ef28:	ldr	x1, [x2, x1]
  42ef2c:	cmp	x0, x1
  42ef30:	b.cs	42f030 <ferror@plt+0x2c7b0>  // b.hs, b.nlast
  42ef34:	ldr	w22, [x19, #1408]
  42ef38:	add	x1, x0, #0x1
  42ef3c:	str	x1, [x21]
  42ef40:	ldrb	w27, [x0]
  42ef44:	mov	w28, w27
  42ef48:	cbz	w22, 42f05c <ferror@plt+0x2c7dc>
  42ef4c:	str	w22, [x20]
  42ef50:	cmp	w27, #0x7e
  42ef54:	b.ls	42f020 <ferror@plt+0x2c7a0>  // b.plast
  42ef58:	ldr	x22, [x21]
  42ef5c:	ldr	x3, [x19, #64]
  42ef60:	ldp	x0, x1, [x3, #16]
  42ef64:	sub	x1, x1, x0
  42ef68:	cmp	x1, #0x1
  42ef6c:	b.ls	42fa18 <ferror@plt+0x2d198>  // b.plast
  42ef70:	add	x1, x0, #0x2
  42ef74:	str	x1, [x3, #16]
  42ef78:	mov	w2, #0x3d                  	// #61
  42ef7c:	mov	w1, #0x1                   	// #1
  42ef80:	ldurb	w3, [x22, #-1]
  42ef84:	strb	w3, [x0]
  42ef88:	strb	wzr, [x0, #1]
  42ef8c:	strb	w2, [x20, #4]
  42ef90:	ldr	w22, [x20]
  42ef94:	str	w1, [x20, #8]
  42ef98:	str	x0, [x20, #16]
  42ef9c:	nop
  42efa0:	cmp	w22, #0x1
  42efa4:	b.ls	42f18c <ferror@plt+0x2c90c>  // b.plast
  42efa8:	ldr	w0, [x21, #56]
  42efac:	ldr	x2, [x21, #48]
  42efb0:	lsl	x0, x0, #4
  42efb4:	ldr	x1, [x21]
  42efb8:	ldr	x0, [x2, x0]
  42efbc:	cmp	x1, x0
  42efc0:	b.cc	42efcc <ferror@plt+0x2c74c>  // b.lo, b.ul, b.last
  42efc4:	ldr	x0, [x19, #8]
  42efc8:	cbz	x0, 42f938 <ferror@plt+0x2d0b8>
  42efcc:	ldr	x2, [x21, #8]
  42efd0:	ldr	x0, [x19, #40]
  42efd4:	sub	w1, w1, w2
  42efd8:	bl	431930 <ferror@plt+0x2f0b0>
  42efdc:	mov	w3, w0
  42efe0:	ldr	w1, [x20]
  42efe4:	mov	x2, #0x0                   	// #0
  42efe8:	ldr	x0, [x19, #40]
  42efec:	bfxil	x2, x22, #0, #32
  42eff0:	bfi	x2, x3, #32, #32
  42eff4:	mov	x3, #0x0                   	// #0
  42eff8:	bl	431b68 <ferror@plt+0x2f2e8>
  42effc:	ldp	x27, x28, [sp, #80]
  42f000:	str	w0, [x20]
  42f004:	mov	x0, x20
  42f008:	ldp	x19, x20, [sp, #16]
  42f00c:	ldp	x21, x22, [sp, #32]
  42f010:	ldp	x23, x24, [sp, #48]
  42f014:	ldp	x25, x26, [sp, #64]
  42f018:	ldp	x29, x30, [sp], #144
  42f01c:	ret
  42f020:	ldrh	w0, [x6, w27, uxtw #1]
  42f024:	adr	x1, 42f030 <ferror@plt+0x2c7b0>
  42f028:	add	x0, x1, w0, sxth #2
  42f02c:	br	x0
  42f030:	ldr	x1, [x19, #8]
  42f034:	cbnz	x1, 42ef34 <ferror@plt+0x2c6b4>
  42f038:	mov	x0, x19
  42f03c:	bl	42b710 <ferror@plt+0x28e90>
  42f040:	ldr	x1, [x19, #40]
  42f044:	ldr	x0, [x21]
  42f048:	ldr	w1, [x1, #60]
  42f04c:	str	w1, [x20]
  42f050:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42f054:	add	x6, x1, #0xb90
  42f058:	b	42ef34 <ferror@plt+0x2c6b4>
  42f05c:	ldr	x2, [x21, #8]
  42f060:	ldr	x0, [x19, #40]
  42f064:	sub	w1, w1, w2
  42f068:	bl	431930 <ferror@plt+0x2f0b0>
  42f06c:	mov	w22, w0
  42f070:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42f074:	add	x6, x0, #0xb90
  42f078:	str	w22, [x20]
  42f07c:	b	42ef50 <ferror@plt+0x2c6d0>
  42f080:	stp	x27, x28, [sp, #80]
  42f084:	ldr	w1, [x19, #500]
  42f088:	cmp	x21, x0
  42f08c:	csel	w24, w24, wzr, eq  // eq = none
  42f090:	cbnz	w1, 42f0a8 <ferror@plt+0x2c828>
  42f094:	ldr	x20, [x19, #472]
  42f098:	add	x1, x19, #0x1c8
  42f09c:	str	x1, [x19, #488]
  42f0a0:	add	x1, x20, #0x18
  42f0a4:	str	x1, [x19, #448]
  42f0a8:	mov	w1, #0x40                  	// #64
  42f0ac:	strh	w1, [x20, #6]
  42f0b0:	mov	x21, x0
  42f0b4:	mov	w0, #0x41                  	// #65
  42f0b8:	ldrb	w2, [x19, #25]
  42f0bc:	cmp	w2, #0x2
  42f0c0:	csel	w1, w0, w1, eq  // eq = none
  42f0c4:	strh	w1, [x20, #6]
  42f0c8:	b	42eefc <ferror@plt+0x2c67c>
  42f0cc:	mov	x0, x19
  42f0d0:	stp	x27, x28, [sp, #80]
  42f0d4:	bl	42b0f8 <ferror@plt+0x28878>
  42f0d8:	ldr	x0, [x19]
  42f0dc:	b	42f084 <ferror@plt+0x2c804>
  42f0e0:	ldr	x1, [x21]
  42f0e4:	mov	w0, #0x35                  	// #53
  42f0e8:	strb	w0, [x20, #4]
  42f0ec:	sub	x1, x1, #0x1
  42f0f0:	mov	w2, #0x0                   	// #0
  42f0f4:	add	x3, sp, #0x80
  42f0f8:	add	x4, x20, #0x10
  42f0fc:	mov	x0, x19
  42f100:	str	wzr, [sp, #128]
  42f104:	strb	wzr, [sp, #132]
  42f108:	str	wzr, [sp, #136]
  42f10c:	bl	42ab58 <ferror@plt+0x282d8>
  42f110:	ldr	w2, [x19, #1192]
  42f114:	ldr	w1, [sp, #136]
  42f118:	str	x0, [x20, #8]
  42f11c:	cmp	w2, w1
  42f120:	b.ge	42f140 <ferror@plt+0x2c8c0>  // b.tcont
  42f124:	ldrb	w1, [x19, #18]
  42f128:	cbnz	w1, 42f140 <ferror@plt+0x2c8c0>
  42f12c:	mov	x0, x19
  42f130:	add	x2, sp, #0x88
  42f134:	mov	x1, x20
  42f138:	bl	42c1b8 <ferror@plt+0x29938>
  42f13c:	ldr	x0, [x20, #8]
  42f140:	ldrh	w1, [x0, #18]
  42f144:	tbz	w1, #2, 42f160 <ferror@plt+0x2c8e0>
  42f148:	ldrb	w1, [x0, #16]
  42f14c:	ldrh	w0, [x20, #6]
  42f150:	ubfx	x1, x1, #1, #7
  42f154:	orr	w0, w0, #0x10
  42f158:	strb	w1, [x20, #4]
  42f15c:	strh	w0, [x20, #6]
  42f160:	ldr	w22, [x20]
  42f164:	cbz	w24, 42f178 <ferror@plt+0x2c8f8>
  42f168:	ldrh	w0, [x20, #6]
  42f16c:	orr	w0, w0, #0x20
  42f170:	strh	w0, [x20, #6]
  42f174:	nop
  42f178:	cmp	w22, #0x1
  42f17c:	b.ls	42f18c <ferror@plt+0x2c90c>  // b.plast
  42f180:	ldrb	w0, [x20, #4]
  42f184:	cmp	w0, #0x16
  42f188:	b.ne	42efa8 <ferror@plt+0x2c728>  // b.any
  42f18c:	mov	x0, x20
  42f190:	ldp	x19, x20, [sp, #16]
  42f194:	ldp	x21, x22, [sp, #32]
  42f198:	ldp	x23, x24, [sp, #48]
  42f19c:	ldp	x25, x26, [sp, #64]
  42f1a0:	ldp	x27, x28, [sp, #80]
  42f1a4:	ldp	x29, x30, [sp], #144
  42f1a8:	ret
  42f1ac:	str	wzr, [sp, #128]
  42f1b0:	mov	w0, #0x37                  	// #55
  42f1b4:	strb	wzr, [sp, #132]
  42f1b8:	add	x1, x20, #0x8
  42f1bc:	str	wzr, [sp, #136]
  42f1c0:	add	x3, sp, #0x80
  42f1c4:	strb	w0, [x20, #4]
  42f1c8:	add	x2, x20, #0x10
  42f1cc:	mov	x0, x19
  42f1d0:	bl	42aea0 <ferror@plt+0x28620>
  42f1d4:	ldr	w1, [x19, #1192]
  42f1d8:	ldr	w0, [sp, #136]
  42f1dc:	cmp	w1, w0
  42f1e0:	b.ge	42f1fc <ferror@plt+0x2c97c>  // b.tcont
  42f1e4:	ldrb	w0, [x19, #18]
  42f1e8:	cbnz	w0, 42f1fc <ferror@plt+0x2c97c>
  42f1ec:	add	x2, sp, #0x88
  42f1f0:	mov	x1, x20
  42f1f4:	mov	x0, x19
  42f1f8:	bl	42c1b8 <ferror@plt+0x29938>
  42f1fc:	ldr	w22, [x20]
  42f200:	b	42f178 <ferror@plt+0x2c8f8>
  42f204:	ldr	x22, [x19]
  42f208:	adrp	x27, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42f20c:	ldrh	w0, [x20, #6]
  42f210:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42f214:	add	x27, x27, #0x2c0
  42f218:	add	x8, x1, #0x658
  42f21c:	orr	w0, w0, #0x1
  42f220:	mov	w7, #0x0                   	// #0
  42f224:	strh	w0, [x20, #6]
  42f228:	ldr	x0, [x22]
  42f22c:	b	42f2a4 <ferror@plt+0x2ca24>
  42f230:	ldrb	w1, [x19, #16]
  42f234:	cbz	w1, 42f288 <ferror@plt+0x2ca08>
  42f238:	ldrb	w1, [x19, #1154]
  42f23c:	cbz	w1, 42f288 <ferror@plt+0x2ca08>
  42f240:	ldr	x1, [x19, #40]
  42f244:	cmp	w28, #0xc
  42f248:	ldr	x3, [x22, #8]
  42f24c:	csel	x5, x8, x23, eq  // eq = none
  42f250:	ldr	w2, [x1, #60]
  42f254:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42f258:	sub	w3, w0, w3
  42f25c:	mov	w1, #0x2                   	// #2
  42f260:	add	x4, x4, #0x698
  42f264:	mov	x0, x19
  42f268:	str	w7, [sp, #96]
  42f26c:	bl	423290 <ferror@plt+0x20a10>
  42f270:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42f274:	ldr	w7, [sp, #96]
  42f278:	ldr	x0, [x22]
  42f27c:	add	x8, x1, #0x658
  42f280:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42f284:	add	x6, x1, #0xb90
  42f288:	add	x1, x0, #0x1
  42f28c:	str	x1, [x22]
  42f290:	ldrb	w2, [x0]
  42f294:	mov	x28, x2
  42f298:	ldrh	w2, [x27, x2, lsl #1]
  42f29c:	tbz	w2, #11, 42f950 <ferror@plt+0x2d0d0>
  42f2a0:	mov	x0, x1
  42f2a4:	cmp	w28, #0x20
  42f2a8:	ccmp	w28, #0x9, #0x4, ne  // ne = any
  42f2ac:	b.eq	42f288 <ferror@plt+0x2ca08>  // b.none
  42f2b0:	cbnz	w28, 42f230 <ferror@plt+0x2c9b0>
  42f2b4:	mov	w7, #0x1                   	// #1
  42f2b8:	b	42f288 <ferror@plt+0x2ca08>
  42f2bc:	cmp	w27, #0x4c
  42f2c0:	ldr	x1, [x21]
  42f2c4:	b.eq	42f2e0 <ferror@plt+0x2ca60>  // b.none
  42f2c8:	ldrb	w0, [x19, #1130]
  42f2cc:	cbnz	w0, 42fc08 <ferror@plt+0x2d388>
  42f2d0:	cmp	w27, #0x52
  42f2d4:	b.eq	42f0e4 <ferror@plt+0x2c864>  // b.none
  42f2d8:	ldrb	w0, [x19, #1128]
  42f2dc:	cbz	w0, 42f0e4 <ferror@plt+0x2c864>
  42f2e0:	ldrb	w0, [x1]
  42f2e4:	cmp	w0, #0x27
  42f2e8:	b.eq	42f348 <ferror@plt+0x2cac8>  // b.none
  42f2ec:	cmp	w0, #0x22
  42f2f0:	b.eq	42f348 <ferror@plt+0x2cac8>  // b.none
  42f2f4:	cmp	w0, #0x52
  42f2f8:	mov	w2, #0x52                  	// #82
  42f2fc:	ccmp	w27, w2, #0x4, eq  // eq = none
  42f300:	b.ne	430220 <ferror@plt+0x2d9a0>  // b.any
  42f304:	cmp	w0, #0x38
  42f308:	mov	w0, #0x75                  	// #117
  42f30c:	ccmp	w27, w0, #0x0, eq  // eq = none
  42f310:	b.ne	42f0e4 <ferror@plt+0x2c864>  // b.any
  42f314:	ldrb	w0, [x1, #1]
  42f318:	cmp	w0, #0x22
  42f31c:	b.eq	42f348 <ferror@plt+0x2cac8>  // b.none
  42f320:	cmp	w0, #0x27
  42f324:	b.eq	430548 <ferror@plt+0x2dcc8>  // b.none
  42f328:	cmp	w0, #0x52
  42f32c:	b.ne	42f0e4 <ferror@plt+0x2c864>  // b.any
  42f330:	ldrb	w0, [x1, #2]
  42f334:	cmp	w0, #0x22
  42f338:	b.ne	42f0e4 <ferror@plt+0x2c864>  // b.any
  42f33c:	ldrb	w0, [x19, #1130]
  42f340:	cbz	w0, 42f0e4 <ferror@plt+0x2c864>
  42f344:	nop
  42f348:	sub	x2, x1, #0x1
  42f34c:	mov	x0, x19
  42f350:	mov	x1, x20
  42f354:	bl	42d4a0 <ferror@plt+0x2ac20>
  42f358:	ldr	w22, [x20]
  42f35c:	b	42f178 <ferror@plt+0x2c8f8>
  42f360:	ldr	x22, [x21]
  42f364:	add	x2, sp, #0x80
  42f368:	mov	x0, x19
  42f36c:	mov	w1, #0x1                   	// #1
  42f370:	sub	x22, x22, #0x1
  42f374:	str	x22, [x21]
  42f378:	str	wzr, [sp, #128]
  42f37c:	strb	wzr, [sp, #132]
  42f380:	str	wzr, [sp, #136]
  42f384:	bl	42a850 <ferror@plt+0x27fd0>
  42f388:	tst	w0, #0xff
  42f38c:	b.ne	42fbcc <ferror@plt+0x2d34c>  // b.any
  42f390:	ldr	x22, [x21]
  42f394:	add	x22, x22, #0x1
  42f398:	str	x22, [x21]
  42f39c:	b	42ef5c <ferror@plt+0x2c6dc>
  42f3a0:	ldr	x2, [x21]
  42f3a4:	mov	x1, x20
  42f3a8:	mov	x0, x19
  42f3ac:	sub	x2, x2, #0x1
  42f3b0:	bl	42d4a0 <ferror@plt+0x2ac20>
  42f3b4:	ldr	w22, [x20]
  42f3b8:	b	42f178 <ferror@plt+0x2c8f8>
  42f3bc:	mov	w0, #0x27                  	// #39
  42f3c0:	ldr	w22, [x20]
  42f3c4:	strb	w0, [x20, #4]
  42f3c8:	b	42efa0 <ferror@plt+0x2c720>
  42f3cc:	mov	w0, #0x28                  	// #40
  42f3d0:	ldr	w22, [x20]
  42f3d4:	strb	w0, [x20, #4]
  42f3d8:	b	42efa0 <ferror@plt+0x2c720>
  42f3dc:	ldr	x0, [x21]
  42f3e0:	strb	wzr, [x20, #4]
  42f3e4:	ldrb	w1, [x0]
  42f3e8:	cmp	w1, #0x3d
  42f3ec:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f3f0:	add	x0, x0, #0x1
  42f3f4:	ldr	w22, [x20]
  42f3f8:	str	x0, [x21]
  42f3fc:	mov	w0, #0x17                  	// #23
  42f400:	strb	w0, [x20, #4]
  42f404:	b	42efa0 <ferror@plt+0x2c720>
  42f408:	mov	w0, #0x15                  	// #21
  42f40c:	ldr	w22, [x20]
  42f410:	strb	w0, [x20, #4]
  42f414:	b	42efa0 <ferror@plt+0x2c720>
  42f418:	ldr	x0, [x21]
  42f41c:	mov	w1, #0x6                   	// #6
  42f420:	strb	w1, [x20, #4]
  42f424:	ldrb	w1, [x0]
  42f428:	cmp	w1, #0x3d
  42f42c:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f430:	add	x0, x0, #0x1
  42f434:	ldr	w22, [x20]
  42f438:	str	x0, [x21]
  42f43c:	mov	w0, #0x1d                  	// #29
  42f440:	strb	w0, [x20, #4]
  42f444:	b	42efa0 <ferror@plt+0x2c720>
  42f448:	ldr	x0, [x21]
  42f44c:	mov	w1, #0x4                   	// #4
  42f450:	strb	w1, [x20, #4]
  42f454:	ldrb	w1, [x0]
  42f458:	cmp	w1, #0x2b
  42f45c:	b.eq	42fb20 <ferror@plt+0x2d2a0>  // b.none
  42f460:	cmp	w1, #0x3d
  42f464:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f468:	add	x0, x0, #0x1
  42f46c:	str	x0, [x21]
  42f470:	mov	w0, #0x1b                  	// #27
  42f474:	strb	w0, [x20, #4]
  42f478:	b	42efa0 <ferror@plt+0x2c720>
  42f47c:	ldr	x0, [x21]
  42f480:	mov	w1, #0x8                   	// #8
  42f484:	strb	w1, [x20, #4]
  42f488:	ldrb	w1, [x0]
  42f48c:	cmp	w1, #0x3d
  42f490:	b.eq	42fb48 <ferror@plt+0x2d2c8>  // b.none
  42f494:	ldrb	w2, [x19, #1126]
  42f498:	cbz	w2, 42efa0 <ferror@plt+0x2c720>
  42f49c:	cmp	w1, #0x3a
  42f4a0:	b.eq	42ff94 <ferror@plt+0x2d714>  // b.none
  42f4a4:	cmp	w1, #0x3e
  42f4a8:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f4ac:	ldrh	w1, [x20, #6]
  42f4b0:	add	x0, x0, #0x1
  42f4b4:	str	x0, [x21]
  42f4b8:	mov	w2, #0x2a                  	// #42
  42f4bc:	orr	w0, w1, #0x2
  42f4c0:	strb	w2, [x20, #4]
  42f4c4:	strh	w0, [x20, #6]
  42f4c8:	b	42efa0 <ferror@plt+0x2c720>
  42f4cc:	ldr	x0, [x21]
  42f4d0:	mov	w1, #0x9                   	// #9
  42f4d4:	strb	w1, [x20, #4]
  42f4d8:	ldr	w22, [x20]
  42f4dc:	ldrb	w1, [x0]
  42f4e0:	cmp	w1, #0x26
  42f4e4:	b.eq	42fb34 <ferror@plt+0x2d2b4>  // b.none
  42f4e8:	cmp	w1, #0x3d
  42f4ec:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f4f0:	add	x0, x0, #0x1
  42f4f4:	str	x0, [x21]
  42f4f8:	mov	w0, #0x20                  	// #32
  42f4fc:	strb	w0, [x20, #4]
  42f500:	b	42efa0 <ferror@plt+0x2c720>
  42f504:	ldr	x0, [x21]
  42f508:	mov	w1, #0x25                  	// #37
  42f50c:	strb	w1, [x20, #4]
  42f510:	ldrb	w1, [x0]
  42f514:	cmp	w1, #0x23
  42f518:	b.eq	42f524 <ferror@plt+0x2cca4>  // b.none
  42f51c:	str	wzr, [x20, #8]
  42f520:	b	42f178 <ferror@plt+0x2c8f8>
  42f524:	add	x0, x0, #0x1
  42f528:	str	x0, [x21]
  42f52c:	mov	w0, #0x26                  	// #38
  42f530:	strb	w0, [x20, #4]
  42f534:	str	wzr, [x20, #8]
  42f538:	b	42f178 <ferror@plt+0x2c8f8>
  42f53c:	ldr	x0, [x21]
  42f540:	mov	w1, #0x1                   	// #1
  42f544:	strb	w1, [x20, #4]
  42f548:	ldrb	w1, [x0]
  42f54c:	cmp	w1, #0x3d
  42f550:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f554:	add	x0, x0, #0x1
  42f558:	ldr	w22, [x20]
  42f55c:	str	x0, [x21]
  42f560:	mov	w0, #0x18                  	// #24
  42f564:	strb	w0, [x20, #4]
  42f568:	b	42efa0 <ferror@plt+0x2c720>
  42f56c:	ldr	x1, [x21]
  42f570:	ldr	x0, [x21, #32]
  42f574:	cmp	x1, x0
  42f578:	b.cc	42fb84 <ferror@plt+0x2d304>  // b.lo, b.ul, b.last
  42f57c:	mov	w0, #0x1                   	// #1
  42f580:	strb	w0, [x21, #104]
  42f584:	ldp	x27, x28, [sp, #80]
  42f588:	b	42ee1c <ferror@plt+0x2c59c>
  42f58c:	ldr	x0, [x21]
  42f590:	mov	w1, #0x2                   	// #2
  42f594:	strb	w1, [x20, #4]
  42f598:	ldrb	w1, [x0]
  42f59c:	cmp	w1, #0x3d
  42f5a0:	b.eq	42faa0 <ferror@plt+0x2d220>  // b.none
  42f5a4:	cmp	w1, #0x3e
  42f5a8:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f5ac:	add	x1, x0, #0x1
  42f5b0:	ldr	w22, [x20]
  42f5b4:	str	x1, [x21]
  42f5b8:	mov	w1, #0xc                   	// #12
  42f5bc:	strb	w1, [x20, #4]
  42f5c0:	ldrb	w1, [x0, #1]
  42f5c4:	cmp	w1, #0x3d
  42f5c8:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f5cc:	add	x0, x0, #0x2
  42f5d0:	str	x0, [x21]
  42f5d4:	mov	w0, #0x23                  	// #35
  42f5d8:	strb	w0, [x20, #4]
  42f5dc:	b	42efa0 <ferror@plt+0x2c720>
  42f5e0:	ldr	x0, [x21]
  42f5e4:	mov	w1, #0x5                   	// #5
  42f5e8:	strb	w1, [x20, #4]
  42f5ec:	ldrb	w1, [x0]
  42f5f0:	cmp	w1, #0x3e
  42f5f4:	b.eq	42fac8 <ferror@plt+0x2d248>  // b.none
  42f5f8:	cmp	w1, #0x2d
  42f5fc:	b.eq	42fefc <ferror@plt+0x2d67c>  // b.none
  42f600:	ldr	w22, [x20]
  42f604:	cmp	w1, #0x3d
  42f608:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f60c:	add	x0, x0, #0x1
  42f610:	str	x0, [x21]
  42f614:	mov	w0, #0x1c                  	// #28
  42f618:	strb	w0, [x20, #4]
  42f61c:	b	42efa0 <ferror@plt+0x2c720>
  42f620:	mov	w0, #0x29                  	// #41
  42f624:	ldr	w22, [x20]
  42f628:	strb	w0, [x20, #4]
  42f62c:	b	42efa0 <ferror@plt+0x2c720>
  42f630:	ldr	x0, [x21]
  42f634:	mov	w1, #0xa                   	// #10
  42f638:	strb	w1, [x20, #4]
  42f63c:	ldrb	w1, [x0]
  42f640:	cmp	w1, #0x7c
  42f644:	b.eq	42fab4 <ferror@plt+0x2d234>  // b.none
  42f648:	cmp	w1, #0x3d
  42f64c:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f650:	add	x0, x0, #0x1
  42f654:	str	x0, [x21]
  42f658:	mov	w0, #0x21                  	// #33
  42f65c:	strb	w0, [x20, #4]
  42f660:	b	42efa0 <ferror@plt+0x2c720>
  42f664:	ldrb	w0, [x19, #19]
  42f668:	ldr	x2, [x21]
  42f66c:	cbnz	w0, 42fb5c <ferror@plt+0x2d2dc>
  42f670:	mov	w0, #0x3                   	// #3
  42f674:	strb	w0, [x20, #4]
  42f678:	ldrb	w0, [x2]
  42f67c:	cmp	w0, #0x3d
  42f680:	b.eq	42fd60 <ferror@plt+0x2d4e0>  // b.none
  42f684:	cmp	w0, #0x3c
  42f688:	b.eq	42ff3c <ferror@plt+0x2d6bc>  // b.none
  42f68c:	ldrb	w1, [x19, #1126]
  42f690:	cbz	w1, 42efa0 <ferror@plt+0x2c720>
  42f694:	cmp	w0, #0x3a
  42f698:	b.eq	430230 <ferror@plt+0x2d9b0>  // b.none
  42f69c:	cmp	w0, #0x25
  42f6a0:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f6a4:	ldrh	w0, [x20, #6]
  42f6a8:	add	x2, x2, #0x1
  42f6ac:	str	x2, [x21]
  42f6b0:	mov	w1, #0x29                  	// #41
  42f6b4:	orr	w0, w0, #0x2
  42f6b8:	strb	w1, [x20, #4]
  42f6bc:	strh	w0, [x20, #6]
  42f6c0:	b	42efa0 <ferror@plt+0x2c720>
  42f6c4:	mov	w0, #0x34                  	// #52
  42f6c8:	ldr	w22, [x20]
  42f6cc:	strb	w0, [x20, #4]
  42f6d0:	b	42efa0 <ferror@plt+0x2c720>
  42f6d4:	ldr	x0, [x21]
  42f6d8:	mov	w1, #0xb                   	// #11
  42f6dc:	strb	w1, [x20, #4]
  42f6e0:	ldr	w22, [x20]
  42f6e4:	ldrb	w1, [x0]
  42f6e8:	cmp	w1, #0x3d
  42f6ec:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f6f0:	add	x0, x0, #0x1
  42f6f4:	str	x0, [x21]
  42f6f8:	mov	w0, #0x22                  	// #34
  42f6fc:	strb	w0, [x20, #4]
  42f700:	b	42efa0 <ferror@plt+0x2c720>
  42f704:	mov	w0, #0x11                  	// #17
  42f708:	ldr	w22, [x20]
  42f70c:	strb	w0, [x20, #4]
  42f710:	b	42efa0 <ferror@plt+0x2c720>
  42f714:	ldr	x28, [x21]
  42f718:	ldrb	w27, [x28]
  42f71c:	cmp	w27, #0x2a
  42f720:	b.eq	42ff14 <ferror@plt+0x2d694>  // b.none
  42f724:	cmp	w27, #0x2f
  42f728:	b.ne	4304f4 <ferror@plt+0x2dc74>  // b.any
  42f72c:	ldrb	w0, [x19, #1160]
  42f730:	cbnz	w0, 4304e4 <ferror@plt+0x2dc64>
  42f734:	ldr	x2, [x19]
  42f738:	cbz	x2, 42f744 <ferror@plt+0x2cec4>
  42f73c:	ldrb	w0, [x2, #106]
  42f740:	cbnz	w0, 42f7a8 <ferror@plt+0x2cf28>
  42f744:	ldr	w0, [x19, #1116]
  42f748:	cbnz	w0, 42fd74 <ferror@plt+0x2d4f4>
  42f74c:	ldrb	w1, [x19, #1154]
  42f750:	cbz	w1, 42f75c <ferror@plt+0x2cedc>
  42f754:	ldrb	w1, [x21, #105]
  42f758:	tbz	w1, #0, 4302cc <ferror@plt+0x2da4c>
  42f75c:	ldrsb	w1, [x19, #1198]
  42f760:	cmp	w1, #0x0
  42f764:	b.le	42f7a8 <ferror@plt+0x2cf28>
  42f768:	ldrb	w1, [x19, #1120]
  42f76c:	cbnz	w1, 42f7a8 <ferror@plt+0x2cf28>
  42f770:	ldrb	w1, [x21, #105]
  42f774:	tbz	w1, #0, 430298 <ferror@plt+0x2da18>
  42f778:	sub	w0, w0, #0x5
  42f77c:	cmp	w0, #0x1
  42f780:	b.hi	42f7a8 <ferror@plt+0x2cf28>  // b.pmore
  42f784:	ldrb	w0, [x28, #1]
  42f788:	cmp	w0, #0x2a
  42f78c:	b.eq	430598 <ferror@plt+0x2dd18>  // b.none
  42f790:	ldr	w0, [x19, #16]
  42f794:	tst	w0, #0xff00ff
  42f798:	b.ne	430598 <ferror@plt+0x2dd18>  // b.any
  42f79c:	ldrb	w0, [x21, #105]
  42f7a0:	tbz	w0, #0, 430268 <ferror@plt+0x2d9e8>
  42f7a4:	nop
  42f7a8:	ldr	x0, [x2]
  42f7ac:	ldr	x1, [x19, #40]
  42f7b0:	ldrb	w3, [x0], #1
  42f7b4:	ldr	w22, [x1, #60]
  42f7b8:	cmp	w3, #0xa
  42f7bc:	b.eq	42f7d0 <ferror@plt+0x2cf50>  // b.none
  42f7c0:	str	x0, [x2]
  42f7c4:	ldrb	w1, [x0], #1
  42f7c8:	cmp	w1, #0xa
  42f7cc:	b.ne	42f7c0 <ferror@plt+0x2cf40>  // b.any
  42f7d0:	mov	x0, x19
  42f7d4:	bl	42a938 <ferror@plt+0x280b8>
  42f7d8:	ldr	x0, [x19, #40]
  42f7dc:	ldr	w0, [x0, #60]
  42f7e0:	cmp	w22, w0
  42f7e4:	b.eq	42f7f0 <ferror@plt+0x2cf70>  // b.none
  42f7e8:	ldrb	w0, [x19, #1133]
  42f7ec:	cbnz	w0, 42ff7c <ferror@plt+0x2d6fc>
  42f7f0:	ldrb	w0, [x19, #1144]
  42f7f4:	add	x22, x28, #0x1
  42f7f8:	ldr	x3, [x19]
  42f7fc:	cmp	w0, #0x2
  42f800:	b.eq	42fd8c <ferror@plt+0x2d50c>  // b.none
  42f804:	b.hi	42f988 <ferror@plt+0x2d108>  // b.pmore
  42f808:	cmp	w0, #0x1
  42f80c:	csinc	w24, w24, wzr, ne  // ne = any
  42f810:	ldr	x4, [x19, #1072]
  42f814:	cbz	x4, 42fc20 <ferror@plt+0x2d3a0>
  42f818:	ldr	w1, [x20]
  42f81c:	mov	x0, x19
  42f820:	ldr	x3, [x3]
  42f824:	sub	x2, x28, #0x1
  42f828:	sub	x3, x3, x28
  42f82c:	add	x3, x3, #0x1
  42f830:	blr	x4
  42f834:	ldrb	w0, [x19, #21]
  42f838:	cbnz	w0, 42fc28 <ferror@plt+0x2d3a8>
  42f83c:	ldrh	w0, [x20, #6]
  42f840:	orr	w0, w0, #0x1
  42f844:	strh	w0, [x20, #6]
  42f848:	b	42ef04 <ferror@plt+0x2c684>
  42f84c:	mov	w0, #0x2b                  	// #43
  42f850:	ldr	w22, [x20]
  42f854:	strb	w0, [x20, #4]
  42f858:	b	42efa0 <ferror@plt+0x2c720>
  42f85c:	ldr	x2, [x21]
  42f860:	mov	w0, #0x30                  	// #48
  42f864:	strb	w0, [x20, #4]
  42f868:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42f86c:	add	x0, x0, #0x2c0
  42f870:	ldrb	w1, [x2]
  42f874:	ldrh	w0, [x0, w1, sxtw #1]
  42f878:	tbnz	w0, #2, 42f1ac <ferror@plt+0x2c92c>
  42f87c:	cmp	w1, #0x2e
  42f880:	b.eq	42fed0 <ferror@plt+0x2d650>  // b.none
  42f884:	ldr	w22, [x20]
  42f888:	cmp	w1, #0x2a
  42f88c:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f890:	ldrb	w0, [x19, #1120]
  42f894:	cbz	w0, 42efa0 <ferror@plt+0x2c720>
  42f898:	add	x2, x2, #0x1
  42f89c:	str	x2, [x21]
  42f8a0:	mov	w0, #0x33                  	// #51
  42f8a4:	strb	w0, [x20, #4]
  42f8a8:	b	42efa0 <ferror@plt+0x2c720>
  42f8ac:	mov	w0, #0x2a                  	// #42
  42f8b0:	ldr	w22, [x20]
  42f8b4:	strb	w0, [x20, #4]
  42f8b8:	b	42efa0 <ferror@plt+0x2c720>
  42f8bc:	mov	w0, #0xe                   	// #14
  42f8c0:	ldr	w22, [x20]
  42f8c4:	strb	w0, [x20, #4]
  42f8c8:	b	42efa0 <ferror@plt+0x2c720>
  42f8cc:	mov	w0, #0x14                  	// #20
  42f8d0:	ldr	w22, [x20]
  42f8d4:	strb	w0, [x20, #4]
  42f8d8:	b	42efa0 <ferror@plt+0x2c720>
  42f8dc:	ldr	x0, [x21]
  42f8e0:	mov	w1, #0x12                  	// #18
  42f8e4:	strb	w1, [x20, #4]
  42f8e8:	ldr	w22, [x20]
  42f8ec:	ldrb	w1, [x0]
  42f8f0:	cmp	w1, #0x3a
  42f8f4:	b.eq	42fb04 <ferror@plt+0x2d284>  // b.none
  42f8f8:	cmp	w1, #0x3e
  42f8fc:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42f900:	ldrb	w1, [x19, #1126]
  42f904:	cbz	w1, 42efa0 <ferror@plt+0x2c720>
  42f908:	ldrh	w1, [x20, #6]
  42f90c:	add	x0, x0, #0x1
  42f910:	str	x0, [x21]
  42f914:	mov	w2, #0x28                  	// #40
  42f918:	orr	w0, w1, #0x2
  42f91c:	strb	w2, [x20, #4]
  42f920:	strh	w0, [x20, #6]
  42f924:	b	42efa0 <ferror@plt+0x2c720>
  42f928:	mov	w0, #0x13                  	// #19
  42f92c:	ldr	w22, [x20]
  42f930:	strb	w0, [x20, #4]
  42f934:	b	42efa0 <ferror@plt+0x2c720>
  42f938:	mov	w1, #0x0                   	// #0
  42f93c:	mov	x0, x19
  42f940:	bl	42b710 <ferror@plt+0x28e90>
  42f944:	ldr	w22, [x20]
  42f948:	ldr	x1, [x21]
  42f94c:	b	42efcc <ferror@plt+0x2c74c>
  42f950:	cbnz	w7, 42f95c <ferror@plt+0x2d0dc>
  42f954:	str	x0, [x22]
  42f958:	b	42ef18 <ferror@plt+0x2c698>
  42f95c:	mov	w1, #0x0                   	// #0
  42f960:	mov	x0, x19
  42f964:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42f968:	add	x2, x2, #0x6b8
  42f96c:	bl	422e10 <ferror@plt+0x20590>
  42f970:	ldr	x0, [x22]
  42f974:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42f978:	add	x6, x1, #0xb90
  42f97c:	sub	x0, x0, #0x1
  42f980:	str	x0, [x22]
  42f984:	b	42ef18 <ferror@plt+0x2c698>
  42f988:	sub	w1, w0, #0x3
  42f98c:	and	w1, w1, #0xff
  42f990:	cmp	w1, #0x1
  42f994:	b.hi	42f810 <ferror@plt+0x2cf90>  // b.pmore
  42f998:	ldrb	w4, [x28, #1]
  42f99c:	cmp	w4, #0x40
  42f9a0:	cset	w5, eq  // eq = none
  42f9a4:	cmp	w4, #0x2d
  42f9a8:	csinc	w5, w5, wzr, ne  // ne = any
  42f9ac:	cbz	w5, 42ffe0 <ferror@plt+0x2d760>
  42f9b0:	ldr	x0, [x3]
  42f9b4:	sub	x0, x0, x22
  42f9b8:	sub	x0, x0, #0x1
  42f9bc:	cmp	x0, #0xa
  42f9c0:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  42f9c4:	ldur	x1, [x28, #2]
  42f9c8:	cmp	x1, x25
  42f9cc:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  42f9d0:	ldrh	w2, [x28, #10]
  42f9d4:	mov	w1, #0x6775                	// #26485
  42f9d8:	cmp	w2, w1
  42f9dc:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  42f9e0:	ldrb	w0, [x28, #12]
  42f9e4:	cmp	w0, #0x68
  42f9e8:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  42f9ec:	cmp	w4, #0x40
  42f9f0:	b.eq	4304d0 <ferror@plt+0x2dc50>  // b.none
  42f9f4:	mov	x0, #0xc                   	// #12
  42f9f8:	add	x22, x22, x0
  42f9fc:	ldrb	w0, [x28]
  42fa00:	cmp	w0, #0x2a
  42fa04:	b.eq	4304b4 <ferror@plt+0x2dc34>  // b.none
  42fa08:	ldrb	w0, [x22]
  42fa0c:	cmp	w0, #0xa
  42fa10:	csinc	w24, w24, wzr, ne  // ne = any
  42fa14:	b	42f810 <ferror@plt+0x2cf90>
  42fa18:	ldr	x1, [x19, #72]
  42fa1c:	add	x4, x19, #0x48
  42fa20:	mov	x5, #0x1f41                	// #8001
  42fa24:	cbz	x1, 42fa50 <ferror@plt+0x2d1d0>
  42fa28:	ldr	x0, [x1, #8]
  42fa2c:	mov	x3, x1
  42fa30:	ldr	x2, [x1, #24]
  42fa34:	ldr	x1, [x1]
  42fa38:	sub	x2, x2, x0
  42fa3c:	sub	x2, x2, #0x2
  42fa40:	cmp	x2, x5
  42fa44:	b.ls	42ff6c <ferror@plt+0x2d6ec>  // b.plast
  42fa48:	mov	x4, x3
  42fa4c:	cbnz	x1, 42fa28 <ferror@plt+0x2d1a8>
  42fa50:	mov	x0, #0x1f60                	// #8032
  42fa54:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42fa58:	mov	x1, #0x1f40                	// #8000
  42fa5c:	add	x3, x0, x1
  42fa60:	stp	x0, x0, [x3, #8]
  42fa64:	str	x3, [x3, #24]
  42fa68:	str	xzr, [x0, #8000]
  42fa6c:	ldr	x1, [x19, #64]
  42fa70:	str	x1, [x3]
  42fa74:	str	x3, [x19, #64]
  42fa78:	b	42ef70 <ferror@plt+0x2c6f0>
  42fa7c:	mov	w0, #0x52                  	// #82
  42fa80:	strb	w0, [x20, #4]
  42fa84:	strb	wzr, [x19, #32]
  42fa88:	ldrb	w0, [x19, #33]
  42fa8c:	cbnz	w0, 42eedc <ferror@plt+0x2c65c>
  42fa90:	ldrb	w0, [x19, #24]
  42fa94:	sub	w0, w0, #0x1
  42fa98:	strb	w0, [x19, #24]
  42fa9c:	b	42eedc <ferror@plt+0x2c65c>
  42faa0:	add	x0, x0, #0x1
  42faa4:	str	x0, [x21]
  42faa8:	mov	w0, #0x19                  	// #25
  42faac:	strb	w0, [x20, #4]
  42fab0:	b	42efa0 <ferror@plt+0x2c720>
  42fab4:	add	x0, x0, #0x1
  42fab8:	str	x0, [x21]
  42fabc:	mov	w0, #0x10                  	// #16
  42fac0:	strb	w0, [x20, #4]
  42fac4:	b	42efa0 <ferror@plt+0x2c720>
  42fac8:	add	x1, x0, #0x1
  42facc:	ldr	w22, [x20]
  42fad0:	str	x1, [x21]
  42fad4:	mov	w1, #0x2f                  	// #47
  42fad8:	strb	w1, [x20, #4]
  42fadc:	ldrb	w1, [x0, #1]
  42fae0:	cmp	w1, #0x2a
  42fae4:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42fae8:	ldrb	w1, [x19, #1120]
  42faec:	cbz	w1, 42efa0 <ferror@plt+0x2c720>
  42faf0:	add	x0, x0, #0x2
  42faf4:	str	x0, [x21]
  42faf8:	mov	w0, #0x32                  	// #50
  42fafc:	strb	w0, [x20, #4]
  42fb00:	b	42efa0 <ferror@plt+0x2c720>
  42fb04:	ldrb	w1, [x19, #1120]
  42fb08:	cbz	w1, 42efa0 <ferror@plt+0x2c720>
  42fb0c:	add	x0, x0, #0x1
  42fb10:	str	x0, [x21]
  42fb14:	mov	w0, #0x31                  	// #49
  42fb18:	strb	w0, [x20, #4]
  42fb1c:	b	42efa0 <ferror@plt+0x2c720>
  42fb20:	add	x0, x0, #0x1
  42fb24:	str	x0, [x21]
  42fb28:	mov	w0, #0x2d                  	// #45
  42fb2c:	strb	w0, [x20, #4]
  42fb30:	b	42efa0 <ferror@plt+0x2c720>
  42fb34:	add	x0, x0, #0x1
  42fb38:	str	x0, [x21]
  42fb3c:	mov	w0, #0xf                   	// #15
  42fb40:	strb	w0, [x20, #4]
  42fb44:	b	42efa0 <ferror@plt+0x2c720>
  42fb48:	add	x0, x0, #0x1
  42fb4c:	str	x0, [x21]
  42fb50:	mov	w0, #0x1f                  	// #31
  42fb54:	strb	w0, [x20, #4]
  42fb58:	b	42efa0 <ferror@plt+0x2c720>
  42fb5c:	mov	x0, x19
  42fb60:	sub	x2, x2, #0x1
  42fb64:	mov	x1, x20
  42fb68:	bl	42d4a0 <ferror@plt+0x2ac20>
  42fb6c:	ldrb	w0, [x20, #4]
  42fb70:	cmp	w0, #0x3
  42fb74:	b.ne	42f1fc <ferror@plt+0x2c97c>  // b.any
  42fb78:	ldr	w22, [x20]
  42fb7c:	ldr	x2, [x21]
  42fb80:	b	42f670 <ferror@plt+0x2cdf0>
  42fb84:	ldr	x0, [x19, #40]
  42fb88:	mov	w4, #0x18                  	// #24
  42fb8c:	mov	w2, #0x0                   	// #0
  42fb90:	ldr	w1, [x0, #12]
  42fb94:	ldr	x5, [x0]
  42fb98:	sub	w1, w1, #0x1
  42fb9c:	ldr	w3, [x0, #60]
  42fba0:	smull	x1, w1, w4
  42fba4:	add	x4, x5, x1
  42fba8:	ldr	w1, [x5, x1]
  42fbac:	ldrb	w5, [x4, #6]
  42fbb0:	ldr	w4, [x4, #16]
  42fbb4:	sub	w1, w3, w1
  42fbb8:	add	w4, w4, #0x1
  42fbbc:	lsr	w1, w1, w5
  42fbc0:	add	w1, w1, w4
  42fbc4:	bl	431640 <ferror@plt+0x2edc0>
  42fbc8:	b	42f57c <ferror@plt+0x2ccfc>
  42fbcc:	mov	w0, #0x35                  	// #53
  42fbd0:	strb	w0, [x20, #4]
  42fbd4:	mov	x1, x22
  42fbd8:	add	x4, x20, #0x10
  42fbdc:	add	x3, sp, #0x80
  42fbe0:	mov	x0, x19
  42fbe4:	mov	w2, #0x1                   	// #1
  42fbe8:	bl	42ab58 <ferror@plt+0x282d8>
  42fbec:	ldr	w1, [x19, #1192]
  42fbf0:	str	x0, [x20, #8]
  42fbf4:	ldr	w0, [sp, #136]
  42fbf8:	cmp	w1, w0
  42fbfc:	b.lt	42f1e4 <ferror@plt+0x2c964>  // b.tstop
  42fc00:	ldr	w22, [x20]
  42fc04:	b	42f178 <ferror@plt+0x2c8f8>
  42fc08:	ldrb	w0, [x1]
  42fc0c:	cmp	w0, #0x27
  42fc10:	b.ne	42f2ec <ferror@plt+0x2ca6c>  // b.any
  42fc14:	cmp	w27, #0x52
  42fc18:	b.eq	42f0e4 <ferror@plt+0x2c864>  // b.none
  42fc1c:	b	42f348 <ferror@plt+0x2cac8>
  42fc20:	ldrb	w0, [x19, #21]
  42fc24:	cbz	w0, 42f83c <ferror@plt+0x2cfbc>
  42fc28:	cbz	w24, 42fc38 <ferror@plt+0x2d3b8>
  42fc2c:	ldrh	w0, [x20, #6]
  42fc30:	orr	w0, w0, #0x20
  42fc34:	strh	w0, [x20, #6]
  42fc38:	ldr	x1, [x19]
  42fc3c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  42fc40:	add	x0, x0, #0x2c0
  42fc44:	ldrb	w2, [x19, #16]
  42fc48:	ldr	x1, [x1]
  42fc4c:	sub	w24, w1, w28
  42fc50:	ldurb	w1, [x1, #-1]
  42fc54:	ldrh	w0, [x0, x1, lsl #1]
  42fc58:	tst	x0, #0x400
  42fc5c:	cinc	w24, w24, eq  // eq = none
  42fc60:	cbnz	w2, 430514 <ferror@plt+0x2dc94>
  42fc64:	ldrb	w0, [x19, #25]
  42fc68:	cbnz	w0, 430514 <ferror@plt+0x2dc94>
  42fc6c:	mov	w22, w24
  42fc70:	ldr	x0, [x19, #64]
  42fc74:	mov	w25, w22
  42fc78:	ldp	x23, x1, [x0, #16]
  42fc7c:	sub	x1, x1, x23
  42fc80:	cmp	x1, w22, uxtw
  42fc84:	b.cc	430578 <ferror@plt+0x2dcf8>  // b.lo, b.ul, b.last
  42fc88:	mov	x3, x23
  42fc8c:	add	x25, x23, x25
  42fc90:	str	x25, [x0, #16]
  42fc94:	mov	w0, #0x4f                  	// #79
  42fc98:	strb	w0, [x20, #4]
  42fc9c:	mov	w0, #0x2f                  	// #47
  42fca0:	str	w22, [x20, #8]
  42fca4:	sub	w2, w24, #0x1
  42fca8:	str	x23, [x20, #16]
  42fcac:	mov	x1, x28
  42fcb0:	strb	w0, [x3], #1
  42fcb4:	mov	x0, x3
  42fcb8:	bl	402220 <memcpy@plt>
  42fcbc:	mov	x3, x0
  42fcc0:	ldrb	w0, [x19, #16]
  42fcc4:	cbnz	w0, 42fcd0 <ferror@plt+0x2d450>
  42fcc8:	ldrb	w0, [x19, #25]
  42fccc:	cbz	w0, 42fcd8 <ferror@plt+0x2d458>
  42fcd0:	cmp	w27, #0x2f
  42fcd4:	b.eq	430600 <ferror@plt+0x2dd80>  // b.none
  42fcd8:	ldr	w1, [x19, #1396]
  42fcdc:	cbz	w1, 43055c <ferror@plt+0x2dcdc>
  42fce0:	ldr	w0, [x19, #1392]
  42fce4:	cmp	w0, w1
  42fce8:	b.eq	4305a4 <ferror@plt+0x2dd24>  // b.none
  42fcec:	ldr	w22, [x20, #8]
  42fcf0:	ldrsw	x23, [x19, #1392]
  42fcf4:	add	w0, w22, #0x1
  42fcf8:	ldr	x24, [x19, #1384]
  42fcfc:	sxtw	x0, w0
  42fd00:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  42fd04:	lsl	x23, x23, #4
  42fd08:	ldrsw	x1, [x19, #1392]
  42fd0c:	sxtw	x22, w22
  42fd10:	ldr	x3, [x19, #1384]
  42fd14:	str	x0, [x24, x23]
  42fd18:	lsl	x0, x1, #4
  42fd1c:	mov	x2, x22
  42fd20:	ldr	x1, [x20, #16]
  42fd24:	ldr	x0, [x3, x0]
  42fd28:	bl	402220 <memcpy@plt>
  42fd2c:	ldrsw	x0, [x19, #1392]
  42fd30:	ldr	x1, [x19, #1384]
  42fd34:	lsl	x0, x0, #4
  42fd38:	ldr	x0, [x1, x0]
  42fd3c:	strb	wzr, [x0, x22]
  42fd40:	ldr	x2, [x19, #1384]
  42fd44:	ldr	w0, [x19, #1392]
  42fd48:	ldr	w22, [x20]
  42fd4c:	add	w1, w0, #0x1
  42fd50:	add	x0, x2, w0, sxtw #4
  42fd54:	str	w22, [x0, #8]
  42fd58:	str	w1, [x19, #1392]
  42fd5c:	b	42f178 <ferror@plt+0x2c8f8>
  42fd60:	add	x2, x2, #0x1
  42fd64:	str	x2, [x21]
  42fd68:	mov	w0, #0x1a                  	// #26
  42fd6c:	strb	w0, [x20, #4]
  42fd70:	b	42efa0 <ferror@plt+0x2c720>
  42fd74:	ldrsb	w1, [x19, #1198]
  42fd78:	cmp	w1, #0x0
  42fd7c:	b.le	42f778 <ferror@plt+0x2cef8>
  42fd80:	ldrb	w1, [x19, #1120]
  42fd84:	cbnz	w1, 42f778 <ferror@plt+0x2cef8>
  42fd88:	b	42f770 <ferror@plt+0x2cef0>
  42fd8c:	ldr	x2, [x3]
  42fd90:	sub	x0, x2, x22
  42fd94:	cmp	x0, #0x7
  42fd98:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  42fd9c:	mov	w1, #0x2d                  	// #45
  42fda0:	b	42fdb4 <ferror@plt+0x2d534>
  42fda4:	add	x22, x22, #0x1
  42fda8:	sub	x0, x2, x22
  42fdac:	cmp	x0, #0x7
  42fdb0:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  42fdb4:	ldrb	w0, [x22]
  42fdb8:	and	w0, w0, #0xffffffdf
  42fdbc:	and	w0, w0, #0xff
  42fdc0:	cmp	w0, #0x46
  42fdc4:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fdc8:	ldrb	w0, [x22, #1]
  42fdcc:	and	w0, w0, #0xffffffdf
  42fdd0:	and	w0, w0, #0xff
  42fdd4:	cmp	w0, #0x41
  42fdd8:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fddc:	ldrb	w0, [x22, #2]
  42fde0:	and	w0, w0, #0xffffffdf
  42fde4:	and	w0, w0, #0xff
  42fde8:	cmp	w0, #0x4c
  42fdec:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fdf0:	ldrb	w0, [x22, #3]
  42fdf4:	and	w0, w0, #0xffffffdf
  42fdf8:	and	w0, w0, #0xff
  42fdfc:	cmp	w0, #0x4c
  42fe00:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fe04:	ldrb	w0, [x22, #4]
  42fe08:	and	w4, w0, #0xffffffdf
  42fe0c:	cmp	w4, #0x53
  42fe10:	b.ne	42fec8 <ferror@plt+0x2d648>  // b.any
  42fe14:	ldrb	w0, [x22, #5]
  42fe18:	add	x22, x22, #0x5
  42fe1c:	b	42fe24 <ferror@plt+0x2d5a4>
  42fe20:	ldrb	w0, [x22, #1]!
  42fe24:	cmp	w0, #0x20
  42fe28:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  42fe2c:	ccmp	w0, w1, #0x4, ne  // ne = any
  42fe30:	b.eq	42fe20 <ferror@plt+0x2d5a0>  // b.none
  42fe34:	and	w0, w0, #0xffffffdf
  42fe38:	cmp	w0, #0x54
  42fe3c:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fe40:	ldrb	w0, [x22, #1]
  42fe44:	and	w0, w0, #0xffffffdf
  42fe48:	and	w0, w0, #0xff
  42fe4c:	cmp	w0, #0x48
  42fe50:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fe54:	ldrb	w0, [x22, #2]
  42fe58:	and	w0, w0, #0xffffffdf
  42fe5c:	and	w0, w0, #0xff
  42fe60:	cmp	w0, #0x52
  42fe64:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fe68:	ldrb	w0, [x22, #3]
  42fe6c:	and	w0, w0, #0xffffffdf
  42fe70:	and	w0, w0, #0xff
  42fe74:	cmp	w0, #0x55
  42fe78:	b.eq	42fec0 <ferror@plt+0x2d640>  // b.none
  42fe7c:	cmp	w0, #0x4f
  42fe80:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fe84:	ldrb	w0, [x22, #4]
  42fe88:	and	w0, w0, #0xffffffdf
  42fe8c:	and	w0, w0, #0xff
  42fe90:	cmp	w0, #0x55
  42fe94:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fe98:	ldrb	w0, [x22, #5]
  42fe9c:	and	w0, w0, #0xffffffdf
  42fea0:	and	w0, w0, #0xff
  42fea4:	cmp	w0, #0x47
  42fea8:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42feac:	ldrb	w0, [x22, #6]
  42feb0:	and	w0, w0, #0xffffffdf
  42feb4:	and	w0, w0, #0xff
  42feb8:	cmp	w0, #0x48
  42febc:	b.ne	42fda4 <ferror@plt+0x2d524>  // b.any
  42fec0:	mov	w24, #0x1                   	// #1
  42fec4:	b	42f810 <ferror@plt+0x2cf90>
  42fec8:	add	x22, x22, #0x4
  42fecc:	b	42fe24 <ferror@plt+0x2d5a4>
  42fed0:	ldrb	w0, [x2, #1]
  42fed4:	cmp	w0, #0x2e
  42fed8:	b.eq	42fee4 <ferror@plt+0x2d664>  // b.none
  42fedc:	ldr	w22, [x20]
  42fee0:	b	42efa0 <ferror@plt+0x2c720>
  42fee4:	ldr	w22, [x20]
  42fee8:	add	x2, x2, #0x2
  42feec:	str	x2, [x21]
  42fef0:	mov	w0, #0x2c                  	// #44
  42fef4:	strb	w0, [x20, #4]
  42fef8:	b	42efa0 <ferror@plt+0x2c720>
  42fefc:	add	x0, x0, #0x1
  42ff00:	str	x0, [x21]
  42ff04:	ldr	w22, [x20]
  42ff08:	mov	w0, #0x2e                  	// #46
  42ff0c:	strb	w0, [x20, #4]
  42ff10:	b	42efa0 <ferror@plt+0x2c720>
  42ff14:	mov	x0, x19
  42ff18:	bl	42b9a0 <ferror@plt+0x29120>
  42ff1c:	tst	w0, #0xff
  42ff20:	b.eq	42f7f0 <ferror@plt+0x2cf70>  // b.none
  42ff24:	mov	x0, x19
  42ff28:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ff2c:	mov	w1, #0x3                   	// #3
  42ff30:	add	x2, x2, #0x6d8
  42ff34:	bl	422e10 <ferror@plt+0x20590>
  42ff38:	b	42f7f0 <ferror@plt+0x2cf70>
  42ff3c:	add	x0, x2, #0x1
  42ff40:	str	x0, [x21]
  42ff44:	mov	w0, #0xd                   	// #13
  42ff48:	strb	w0, [x20, #4]
  42ff4c:	ldrb	w0, [x2, #1]
  42ff50:	cmp	w0, #0x3d
  42ff54:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42ff58:	add	x2, x2, #0x2
  42ff5c:	str	x2, [x21]
  42ff60:	mov	w0, #0x24                  	// #36
  42ff64:	strb	w0, [x20, #4]
  42ff68:	b	42efa0 <ferror@plt+0x2c720>
  42ff6c:	str	x1, [x4]
  42ff70:	str	xzr, [x3]
  42ff74:	str	x0, [x3, #16]
  42ff78:	b	42fa6c <ferror@plt+0x2d1ec>
  42ff7c:	mov	x0, x19
  42ff80:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  42ff84:	mov	w1, #0x2                   	// #2
  42ff88:	add	x2, x2, #0x788
  42ff8c:	bl	422f30 <ferror@plt+0x206b0>
  42ff90:	b	42f7f0 <ferror@plt+0x2cf70>
  42ff94:	ldrh	w1, [x20, #6]
  42ff98:	add	x2, x0, #0x1
  42ff9c:	str	x2, [x21]
  42ffa0:	mov	w2, #0x25                  	// #37
  42ffa4:	orr	w1, w1, #0x2
  42ffa8:	strb	w2, [x20, #4]
  42ffac:	strh	w1, [x20, #6]
  42ffb0:	ldrb	w1, [x0, #1]
  42ffb4:	cmp	w1, #0x25
  42ffb8:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42ffbc:	ldrb	w1, [x0, #2]
  42ffc0:	cmp	w1, #0x3a
  42ffc4:	b.ne	42efa0 <ferror@plt+0x2c720>  // b.any
  42ffc8:	add	x0, x0, #0x3
  42ffcc:	str	x0, [x21]
  42ffd0:	mov	w0, #0x26                  	// #38
  42ffd4:	strb	w0, [x20, #4]
  42ffd8:	str	wzr, [x20, #8]
  42ffdc:	b	42efa0 <ferror@plt+0x2c720>
  42ffe0:	cmp	w4, #0x6c
  42ffe4:	b.eq	4302d8 <ferror@plt+0x2da58>  // b.none
  42ffe8:	cmp	w4, #0x9
  42ffec:	cset	w1, ne  // ne = any
  42fff0:	cmp	w0, #0x4
  42fff4:	b.eq	430334 <ferror@plt+0x2dab4>  // b.none
  42fff8:	cmp	w4, #0x2e
  42fffc:	sub	w0, w4, #0x20
  430000:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  430004:	and	w0, w0, #0xff
  430008:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  43000c:	b.hi	43002c <ferror@plt+0x2d7ac>  // b.pmore
  430010:	ldrb	w4, [x22, #1]!
  430014:	cmp	w4, #0x2e
  430018:	sub	w0, w4, #0x20
  43001c:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  430020:	and	w0, w0, #0xff
  430024:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  430028:	b.ls	430010 <ferror@plt+0x2d790>  // b.plast
  43002c:	and	w0, w4, #0xffffffdf
  430030:	cmp	w0, #0x45
  430034:	and	w0, w0, #0xff
  430038:	b.ne	4303e0 <ferror@plt+0x2db60>  // b.any
  43003c:	ldr	x0, [x3]
  430040:	sub	x0, x0, x22
  430044:	cmp	x0, #0xc
  430048:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  43004c:	cmp	w4, #0x45
  430050:	add	x6, x22, #0x1
  430054:	b.eq	4305c0 <ferror@plt+0x2dd40>  // b.none
  430058:	mov	x0, x6
  43005c:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430060:	mov	x2, #0x3                   	// #3
  430064:	add	x1, x1, #0x7d8
  430068:	str	x3, [sp, #96]
  43006c:	str	w4, [sp, #104]
  430070:	str	w5, [sp, #112]
  430074:	bl	402590 <memcmp@plt>
  430078:	ldr	w4, [sp, #104]
  43007c:	ldr	w5, [sp, #112]
  430080:	ldr	x3, [sp, #96]
  430084:	cbnz	w0, 42f810 <ferror@plt+0x2cf90>
  430088:	add	x0, x22, #0x5
  43008c:	ldrb	w1, [x22, #4]!
  430090:	cmp	w1, #0x2c
  430094:	csel	x0, x0, x22, eq  // eq = none
  430098:	ldrb	w1, [x0]
  43009c:	cmp	w1, #0x20
  4300a0:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  4300a4:	ldrb	w7, [x0, #1]
  4300a8:	add	x22, x0, #0x1
  4300ac:	cbz	w5, 4300b8 <ferror@plt+0x2d838>
  4300b0:	cmp	w7, #0x66
  4300b4:	b.eq	42f810 <ferror@plt+0x2cf90>  // b.none
  4300b8:	cmp	w4, #0x65
  4300bc:	b.eq	430714 <ferror@plt+0x2de94>  // b.none
  4300c0:	and	w0, w7, #0xffffffdf
  4300c4:	and	w0, w0, #0xff
  4300c8:	cmp	w0, #0x46
  4300cc:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  4300d0:	ldr	x6, [x3]
  4300d4:	sub	x0, x6, x22
  4300d8:	cmp	x0, #0x7
  4300dc:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  4300e0:	cmp	w7, #0x46
  4300e4:	b.eq	4306c8 <ferror@plt+0x2de48>  // b.none
  4300e8:	str	w5, [sp, #104]
  4300ec:	str	w7, [sp, #112]
  4300f0:	str	x6, [sp, #120]
  4300f4:	cbnz	w5, 42f810 <ferror@plt+0x2cf90>
  4300f8:	add	x0, x22, #0x1
  4300fc:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430100:	mov	x2, #0x3                   	// #3
  430104:	add	x1, x1, #0x810
  430108:	str	x3, [sp, #96]
  43010c:	bl	402590 <memcmp@plt>
  430110:	ldr	w5, [sp, #104]
  430114:	ldr	w7, [sp, #112]
  430118:	ldr	x3, [sp, #96]
  43011c:	ldr	x6, [sp, #120]
  430120:	cbnz	w0, 42f810 <ferror@plt+0x2cf90>
  430124:	ldrb	w0, [x22, #4]
  430128:	add	x4, x22, #0x4
  43012c:	mov	w1, #0x73                  	// #115
  430130:	cmp	w1, w0
  430134:	b.eq	430770 <ferror@plt+0x2def0>  // b.none
  430138:	cmp	w0, #0x20
  43013c:	mov	w1, #0x2d                  	// #45
  430140:	ccmp	w0, w1, #0x4, ne  // ne = any
  430144:	b.ne	430754 <ferror@plt+0x2ded4>  // b.any
  430148:	add	x4, x22, #0x5
  43014c:	cmp	w7, #0x66
  430150:	b.eq	430160 <ferror@plt+0x2d8e0>  // b.none
  430154:	ldrb	w0, [x4]
  430158:	cmp	w0, #0x54
  43015c:	b.eq	430720 <ferror@plt+0x2dea0>  // b.none
  430160:	cbnz	w5, 42f810 <ferror@plt+0x2cf90>
  430164:	ldrb	w0, [x4]
  430168:	cmp	w0, #0x74
  43016c:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  430170:	sub	x22, x6, x4
  430174:	cmp	x22, #0x3
  430178:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  43017c:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430180:	add	x6, x4, #0x1
  430184:	add	x1, x1, #0x678
  430188:	mov	x0, x6
  43018c:	mov	x2, #0x3                   	// #3
  430190:	stp	x3, x4, [sp, #96]
  430194:	str	x6, [sp, #112]
  430198:	str	w5, [sp, #120]
  43019c:	bl	402590 <memcmp@plt>
  4301a0:	ldp	x3, x4, [sp, #96]
  4301a4:	cbz	w0, 430784 <ferror@plt+0x2df04>
  4301a8:	cmp	x22, #0x6
  4301ac:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  4301b0:	ldr	w5, [sp, #120]
  4301b4:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4301b8:	ldr	x6, [sp, #112]
  4301bc:	cmp	w5, #0x0
  4301c0:	add	x1, x1, #0x690
  4301c4:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4301c8:	add	x2, x2, #0x688
  4301cc:	mov	x0, x6
  4301d0:	csel	x1, x2, x1, ne  // ne = any
  4301d4:	mov	x2, #0x6                   	// #6
  4301d8:	bl	402590 <memcmp@plt>
  4301dc:	ldr	x3, [sp, #96]
  4301e0:	cbnz	w0, 42f810 <ferror@plt+0x2cf90>
  4301e4:	ldr	x4, [sp, #104]
  4301e8:	add	x4, x4, #0x7
  4301ec:	b	4301f4 <ferror@plt+0x2d974>
  4301f0:	add	x4, x4, #0x1
  4301f4:	ldrb	w0, [x4]
  4301f8:	cmp	w0, #0x2e
  4301fc:	sub	w1, w0, #0x20
  430200:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  430204:	and	w1, w1, #0xff
  430208:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  43020c:	b.ls	4301f0 <ferror@plt+0x2d970>  // b.plast
  430210:	cmp	w0, #0x2d
  430214:	b.eq	43078c <ferror@plt+0x2df0c>  // b.none
  430218:	mov	x22, x4
  43021c:	b	42f9fc <ferror@plt+0x2d17c>
  430220:	ldrb	w0, [x1, #1]
  430224:	cmp	w0, #0x22
  430228:	b.ne	42f0e4 <ferror@plt+0x2c864>  // b.any
  43022c:	b	42f33c <ferror@plt+0x2cabc>
  430230:	ldrb	w0, [x19, #1120]
  430234:	cbz	w0, 430248 <ferror@plt+0x2d9c8>
  430238:	ldr	w0, [x19, #1116]
  43023c:	sub	w0, w0, #0xb
  430240:	cmp	w0, #0x1
  430244:	b.hi	430524 <ferror@plt+0x2dca4>  // b.pmore
  430248:	ldrh	w0, [x20, #6]
  43024c:	add	x2, x2, #0x1
  430250:	str	x2, [x21]
  430254:	mov	w1, #0x27                  	// #39
  430258:	orr	w0, w0, #0x2
  43025c:	strb	w1, [x20, #4]
  430260:	strh	w0, [x20, #6]
  430264:	b	42efa0 <ferror@plt+0x2c720>
  430268:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  43026c:	mov	w1, #0x3                   	// #3
  430270:	add	x2, x2, #0x6f0
  430274:	mov	x0, x19
  430278:	bl	422e10 <ferror@plt+0x20590>
  43027c:	tst	w0, #0xff
  430280:	b.ne	4302b4 <ferror@plt+0x2da34>  // b.any
  430284:	ldrb	w0, [x21, #105]
  430288:	orr	w0, w0, #0x1
  43028c:	strb	w0, [x21, #105]
  430290:	ldr	x2, [x19]
  430294:	b	42f7a8 <ferror@plt+0x2cf28>
  430298:	mov	x0, x19
  43029c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4302a0:	mov	w1, #0x0                   	// #0
  4302a4:	add	x2, x2, #0x758
  4302a8:	bl	422e10 <ferror@plt+0x20590>
  4302ac:	tst	w0, #0xff
  4302b0:	b.eq	430284 <ferror@plt+0x2da04>  // b.none
  4302b4:	mov	x0, x19
  4302b8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4302bc:	mov	w1, #0x5                   	// #5
  4302c0:	add	x2, x2, #0x720
  4302c4:	bl	422e10 <ferror@plt+0x20590>
  4302c8:	b	430284 <ferror@plt+0x2da04>
  4302cc:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4302d0:	mov	w1, #0x2                   	// #2
  4302d4:	b	430270 <ferror@plt+0x2d9f0>
  4302d8:	ldr	x0, [x3]
  4302dc:	sub	x0, x0, x22
  4302e0:	sub	x0, x0, #0x1
  4302e4:	cmp	x0, #0xf
  4302e8:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  4302ec:	add	x0, x28, #0x2
  4302f0:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4302f4:	mov	x2, #0x10                  	// #16
  4302f8:	add	x1, x1, #0x7b0
  4302fc:	str	x3, [sp, #96]
  430300:	bl	402590 <memcmp@plt>
  430304:	ldr	x3, [sp, #96]
  430308:	cbnz	w0, 42f810 <ferror@plt+0x2cf90>
  43030c:	ldrb	w0, [x28, #18]
  430310:	add	x22, x28, #0x12
  430314:	cmp	w0, #0x20
  430318:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  43031c:	b.ne	42f9fc <ferror@plt+0x2d17c>  // b.any
  430320:	ldrb	w0, [x22, #1]!
  430324:	cmp	w0, #0x20
  430328:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  43032c:	b.eq	430320 <ferror@plt+0x2daa0>  // b.none
  430330:	b	42f9fc <ferror@plt+0x2d17c>
  430334:	cmp	w4, #0x20
  430338:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43033c:	b.ne	430350 <ferror@plt+0x2dad0>  // b.any
  430340:	ldrb	w0, [x22, #1]!
  430344:	cmp	w0, #0x20
  430348:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  43034c:	b.eq	430340 <ferror@plt+0x2dac0>  // b.none
  430350:	ldr	x4, [x3]
  430354:	str	x4, [sp, #104]
  430358:	sub	x0, x4, x22
  43035c:	cmp	x0, #0x7
  430360:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  430364:	mov	x0, x22
  430368:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  43036c:	mov	x2, #0x7                   	// #7
  430370:	add	x1, x1, #0x7c8
  430374:	str	x3, [sp, #96]
  430378:	bl	402590 <memcmp@plt>
  43037c:	ldr	x3, [sp, #96]
  430380:	cbnz	w0, 42f810 <ferror@plt+0x2cf90>
  430384:	ldrb	w0, [x22, #7]
  430388:	ldr	x4, [sp, #104]
  43038c:	cmp	w0, #0x55
  430390:	b.eq	4305f8 <ferror@plt+0x2dd78>  // b.none
  430394:	add	x0, x22, #0x7
  430398:	sub	x4, x4, x0
  43039c:	cmp	x4, #0x3
  4303a0:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  4303a4:	ldur	w1, [x22, #7]
  4303a8:	mov	w0, #0x554f                	// #21839
  4303ac:	movk	w0, #0x4847, lsl #16
  4303b0:	cmp	w1, w0
  4303b4:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  4303b8:	add	x22, x22, #0xb
  4303bc:	ldrb	w0, [x22]
  4303c0:	cmp	w0, #0x20
  4303c4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4303c8:	b.ne	42f9fc <ferror@plt+0x2d17c>  // b.any
  4303cc:	ldrb	w0, [x22, #1]!
  4303d0:	cmp	w0, #0x20
  4303d4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4303d8:	b.eq	4303cc <ferror@plt+0x2db4c>  // b.none
  4303dc:	b	42f9fc <ferror@plt+0x2d17c>
  4303e0:	cmp	w0, #0x49
  4303e4:	b.ne	430554 <ferror@plt+0x2dcd4>  // b.any
  4303e8:	ldr	x0, [x3]
  4303ec:	sub	x0, x0, x22
  4303f0:	cmp	x0, #0x13
  4303f4:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  4303f8:	cmp	w4, #0x49
  4303fc:	add	x6, x22, #0x1
  430400:	b.eq	430670 <ferror@plt+0x2ddf0>  // b.none
  430404:	mov	x0, x6
  430408:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  43040c:	mov	x2, #0xa                   	// #10
  430410:	add	x1, x1, #0x7f0
  430414:	str	x3, [sp, #96]
  430418:	str	w4, [sp, #104]
  43041c:	str	w5, [sp, #112]
  430420:	bl	402590 <memcmp@plt>
  430424:	ldr	w4, [sp, #104]
  430428:	ldr	w5, [sp, #112]
  43042c:	ldr	x3, [sp, #96]
  430430:	cbnz	w0, 42f810 <ferror@plt+0x2cf90>
  430434:	ldrb	w1, [x22, #11]
  430438:	add	x0, x22, #0xb
  43043c:	cmp	w1, #0x20
  430440:	b.eq	43074c <ferror@plt+0x2decc>  // b.none
  430444:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430448:	mov	x2, #0x3                   	// #3
  43044c:	add	x1, x1, #0x800
  430450:	str	x3, [sp, #96]
  430454:	str	w4, [sp, #104]
  430458:	str	w5, [sp, #112]
  43045c:	bl	402590 <memcmp@plt>
  430460:	ldr	w4, [sp, #104]
  430464:	ldr	w5, [sp, #112]
  430468:	ldr	x3, [sp, #96]
  43046c:	cbnz	w0, 42f810 <ferror@plt+0x2cf90>
  430470:	add	x22, x22, #0xe
  430474:	ldrb	w0, [x22]
  430478:	cmp	w4, #0x69
  43047c:	b.ne	430488 <ferror@plt+0x2dc08>  // b.any
  430480:	cmp	w0, #0x46
  430484:	b.eq	42f810 <ferror@plt+0x2cf90>  // b.none
  430488:	ldrb	w7, [x22]
  43048c:	b	4300c0 <ferror@plt+0x2d840>
  430490:	add	x4, x4, #0x2
  430494:	ldurb	w0, [x4, #-1]
  430498:	sub	x22, x4, #0x1
  43049c:	cmp	w0, #0x2a
  4304a0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4304a4:	b.eq	4307d4 <ferror@plt+0x2df54>  // b.none
  4304a8:	cmp	w0, #0xd
  4304ac:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  4304b0:	b.ne	4307e8 <ferror@plt+0x2df68>  // b.any
  4304b4:	ldrb	w0, [x22]
  4304b8:	cmp	w0, #0x2a
  4304bc:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  4304c0:	ldrb	w0, [x22, #1]
  4304c4:	cmp	w0, #0x2f
  4304c8:	csinc	w24, w24, wzr, ne  // ne = any
  4304cc:	b	42f810 <ferror@plt+0x2cf90>
  4304d0:	ldrb	w0, [x28, #13]
  4304d4:	cmp	w0, #0x40
  4304d8:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  4304dc:	mov	x0, #0xd                   	// #13
  4304e0:	b	42f9f8 <ferror@plt+0x2d178>
  4304e4:	mov	w0, #0x7                   	// #7
  4304e8:	ldr	w22, [x20]
  4304ec:	strb	w0, [x20, #4]
  4304f0:	b	42efa0 <ferror@plt+0x2c720>
  4304f4:	cmp	w27, #0x3d
  4304f8:	b.ne	4304e4 <ferror@plt+0x2dc64>  // b.any
  4304fc:	ldr	w22, [x20]
  430500:	add	x28, x28, #0x1
  430504:	str	x28, [x21]
  430508:	mov	w0, #0x1e                  	// #30
  43050c:	strb	w0, [x20, #4]
  430510:	b	42efa0 <ferror@plt+0x2c720>
  430514:	cmp	w27, #0x2f
  430518:	add	w22, w24, #0x2
  43051c:	csel	w22, w22, w24, eq  // eq = none
  430520:	b	42fc70 <ferror@plt+0x2d3f0>
  430524:	ldrb	w0, [x2, #1]
  430528:	cmp	w0, #0x3a
  43052c:	b.ne	430248 <ferror@plt+0x2d9c8>  // b.any
  430530:	ldrb	w0, [x2, #2]
  430534:	and	w0, w0, #0xfffffffb
  430538:	and	w0, w0, #0xff
  43053c:	cmp	w0, #0x3a
  430540:	b.eq	430248 <ferror@plt+0x2d9c8>  // b.none
  430544:	b	42efa0 <ferror@plt+0x2c720>
  430548:	ldrb	w0, [x19, #1129]
  43054c:	cbnz	w0, 42f348 <ferror@plt+0x2cac8>
  430550:	b	42f0e4 <ferror@plt+0x2c864>
  430554:	mov	w7, w4
  430558:	b	4300c0 <ferror@plt+0x2d840>
  43055c:	mov	w0, #0x100                 	// #256
  430560:	str	w0, [x19, #1396]
  430564:	mov	x0, #0x1000                	// #4096
  430568:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43056c:	str	x0, [x19, #1384]
  430570:	ldr	w1, [x19, #1396]
  430574:	b	42fce0 <ferror@plt+0x2d460>
  430578:	mov	x1, x25
  43057c:	mov	x0, x19
  430580:	bl	42d148 <ferror@plt+0x2a8c8>
  430584:	ldr	x1, [x19, #64]
  430588:	str	x1, [x0]
  43058c:	ldr	x23, [x0, #16]
  430590:	str	x0, [x19, #64]
  430594:	b	42fc88 <ferror@plt+0x2d408>
  430598:	mov	w0, #0x7                   	// #7
  43059c:	strb	w0, [x20, #4]
  4305a0:	b	42efa0 <ferror@plt+0x2c720>
  4305a4:	ldr	x0, [x19, #1384]
  4305a8:	lsl	w1, w1, #1
  4305ac:	str	w1, [x19, #1396]
  4305b0:	sbfiz	x1, x1, #4, #32
  4305b4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4305b8:	str	x0, [x19, #1384]
  4305bc:	b	42fcec <ferror@plt+0x2d46c>
  4305c0:	mov	x0, x6
  4305c4:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4305c8:	mov	x2, #0x3                   	// #3
  4305cc:	add	x1, x1, #0x7d0
  4305d0:	stp	x6, x3, [sp, #96]
  4305d4:	str	w4, [sp, #112]
  4305d8:	str	w5, [sp, #120]
  4305dc:	bl	402590 <memcmp@plt>
  4305e0:	ldr	w4, [sp, #112]
  4305e4:	ldr	w5, [sp, #120]
  4305e8:	ldp	x6, x3, [sp, #96]
  4305ec:	cbnz	w0, 430058 <ferror@plt+0x2d7d8>
  4305f0:	mov	w5, #0x1                   	// #1
  4305f4:	b	430088 <ferror@plt+0x2d808>
  4305f8:	add	x22, x22, #0x8
  4305fc:	b	4303bc <ferror@plt+0x2db3c>
  430600:	sub	w0, w22, #0x2
  430604:	sub	w1, w22, #0x1
  430608:	mov	w2, #0x2a                  	// #42
  43060c:	strb	w2, [x23, #1]
  430610:	cmp	w0, #0x2
  430614:	strb	w2, [x23, w0, uxtw]
  430618:	strb	w27, [x23, x1]
  43061c:	b.ls	42fcd8 <ferror@plt+0x2d458>  // b.plast
  430620:	sub	w1, w22, #0x5
  430624:	mov	x0, x3
  430628:	add	x1, x1, #0x2
  43062c:	mov	w2, #0x7c                  	// #124
  430630:	add	x1, x23, x1
  430634:	b	430644 <ferror@plt+0x2ddc4>
  430638:	add	x0, x0, #0x1
  43063c:	cmp	x0, x1
  430640:	b.eq	42fcd8 <ferror@plt+0x2d458>  // b.none
  430644:	ldrb	w3, [x0, #1]
  430648:	cmp	w3, #0x2f
  43064c:	b.ne	430638 <ferror@plt+0x2ddb8>  // b.any
  430650:	ldrb	w3, [x0]
  430654:	cmp	w3, #0x2a
  430658:	b.eq	430668 <ferror@plt+0x2dde8>  // b.none
  43065c:	ldrb	w3, [x0, #2]
  430660:	cmp	w3, #0x2a
  430664:	b.ne	430638 <ferror@plt+0x2ddb8>  // b.any
  430668:	strb	w2, [x0, #1]
  43066c:	b	430638 <ferror@plt+0x2ddb8>
  430670:	mov	x0, x6
  430674:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430678:	mov	x2, #0xa                   	// #10
  43067c:	add	x1, x1, #0x7e0
  430680:	stp	x6, x3, [sp, #96]
  430684:	str	w4, [sp, #112]
  430688:	str	w5, [sp, #120]
  43068c:	bl	402590 <memcmp@plt>
  430690:	ldr	w4, [sp, #112]
  430694:	ldr	w5, [sp, #120]
  430698:	ldp	x6, x3, [sp, #96]
  43069c:	cbnz	w0, 430404 <ferror@plt+0x2db84>
  4306a0:	ldrb	w0, [x22, #11]
  4306a4:	cmp	w0, #0x20
  4306a8:	b.ne	4307bc <ferror@plt+0x2df3c>  // b.any
  4306ac:	ldrb	w0, [x22, #12]
  4306b0:	add	x22, x22, #0xc
  4306b4:	cmp	w0, #0x66
  4306b8:	b.eq	42f810 <ferror@plt+0x2cf90>  // b.none
  4306bc:	mov	w5, #0x1                   	// #1
  4306c0:	ldrb	w7, [x22]
  4306c4:	b	4300c0 <ferror@plt+0x2d840>
  4306c8:	add	x0, x22, #0x1
  4306cc:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4306d0:	mov	x2, #0x3                   	// #3
  4306d4:	add	x1, x1, #0x808
  4306d8:	str	x3, [sp, #96]
  4306dc:	str	w5, [sp, #104]
  4306e0:	str	w7, [sp, #112]
  4306e4:	str	x6, [sp, #120]
  4306e8:	bl	402590 <memcmp@plt>
  4306ec:	ldr	w5, [sp, #104]
  4306f0:	ldr	w7, [sp, #112]
  4306f4:	ldr	x3, [sp, #96]
  4306f8:	ldr	x6, [sp, #120]
  4306fc:	cbnz	w0, 4300e8 <ferror@plt+0x2d868>
  430700:	ldrb	w0, [x22, #4]
  430704:	add	x4, x22, #0x4
  430708:	mov	w5, #0x1                   	// #1
  43070c:	mov	w1, #0x53                  	// #83
  430710:	b	430130 <ferror@plt+0x2d8b0>
  430714:	cmp	w7, #0x46
  430718:	b.ne	4300c0 <ferror@plt+0x2d840>  // b.any
  43071c:	b	42f810 <ferror@plt+0x2cf90>
  430720:	sub	x22, x6, x4
  430724:	cmp	x22, #0x3
  430728:	b.ls	42f810 <ferror@plt+0x2cf90>  // b.plast
  43072c:	cmp	w5, #0x0
  430730:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430734:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430738:	add	x0, x0, #0x680
  43073c:	add	x1, x1, #0x678
  430740:	add	x6, x4, #0x1
  430744:	csel	x1, x1, x0, eq  // eq = none
  430748:	b	430188 <ferror@plt+0x2d908>
  43074c:	add	x22, x22, #0xc
  430750:	b	430474 <ferror@plt+0x2dbf4>
  430754:	cmp	w5, #0x0
  430758:	mov	w1, #0x54                  	// #84
  43075c:	mov	w2, #0x74                  	// #116
  430760:	csel	w1, w1, w2, ne  // ne = any
  430764:	cmp	w1, w0
  430768:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  43076c:	b	43014c <ferror@plt+0x2d8cc>
  430770:	ldrb	w1, [x22, #5]
  430774:	cmp	w1, #0x20
  430778:	b.ne	430138 <ferror@plt+0x2d8b8>  // b.any
  43077c:	add	x4, x22, #0x6
  430780:	b	43014c <ferror@plt+0x2d8cc>
  430784:	add	x4, x4, #0x4
  430788:	b	4301f4 <ferror@plt+0x2d974>
  43078c:	ldrb	w0, [x28]
  430790:	add	x22, x4, #0x1
  430794:	cmp	w0, #0x2a
  430798:	b.ne	4307a4 <ferror@plt+0x2df24>  // b.any
  43079c:	b	430490 <ferror@plt+0x2dc10>
  4307a0:	add	x22, x22, #0x1
  4307a4:	ldrb	w0, [x22]
  4307a8:	cmp	w0, #0x0
  4307ac:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  4307b0:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  4307b4:	b.ne	4307a0 <ferror@plt+0x2df20>  // b.any
  4307b8:	b	42fa08 <ferror@plt+0x2d188>
  4307bc:	ldur	w0, [x22, #11]
  4307c0:	cmp	w0, w26
  4307c4:	b.ne	42f810 <ferror@plt+0x2cf90>  // b.any
  4307c8:	add	x22, x22, #0xe
  4307cc:	mov	w5, #0x1                   	// #1
  4307d0:	b	4306c0 <ferror@plt+0x2de40>
  4307d4:	cmp	w0, #0x2a
  4307d8:	b.ne	4304b4 <ferror@plt+0x2dc34>  // b.any
  4307dc:	ldrb	w0, [x4]
  4307e0:	cmp	w0, #0x2f
  4307e4:	b.eq	4304b4 <ferror@plt+0x2dc34>  // b.none
  4307e8:	add	x4, x4, #0x1
  4307ec:	b	430494 <ferror@plt+0x2dc14>
  4307f0:	stp	x29, x30, [sp, #-64]!
  4307f4:	mov	x29, sp
  4307f8:	stp	x19, x20, [sp, #16]
  4307fc:	mov	x19, x0
  430800:	stp	x21, x22, [sp, #32]
  430804:	add	x22, x0, #0x98
  430808:	str	x23, [sp, #48]
  43080c:	mov	x23, #0x1770                	// #6000
  430810:	ldr	x21, [x19, #488]
  430814:	ldr	x20, [x19, #448]
  430818:	ldr	x0, [x21, #24]
  43081c:	cmp	x20, x0
  430820:	b.eq	430910 <ferror@plt+0x2e090>  // b.none
  430824:	ldr	x1, [x21, #16]
  430828:	cmp	x20, x1
  43082c:	b.cc	43095c <ferror@plt+0x2e0dc>  // b.lo, b.ul, b.last
  430830:	cmp	x20, x0
  430834:	b.cs	43095c <ferror@plt+0x2e0dc>  // b.hs, b.nlast
  430838:	ldr	w0, [x19, #496]
  43083c:	cbz	w0, 430900 <ferror@plt+0x2e080>
  430840:	sub	w0, w0, #0x1
  430844:	add	x1, x20, #0x18
  430848:	str	x1, [x19, #448]
  43084c:	str	w0, [x19, #496]
  430850:	ldrh	w1, [x20, #6]
  430854:	tbz	w1, #6, 430890 <ferror@plt+0x2e010>
  430858:	ldrb	w0, [x20, #4]
  43085c:	cmp	w0, #0x25
  430860:	b.eq	4308d0 <ferror@plt+0x2e050>  // b.none
  430864:	ldrb	w0, [x19, #32]
  430868:	cbnz	w0, 4308f8 <ferror@plt+0x2e078>
  43086c:	ldr	x3, [x19, #904]
  430870:	cbz	x3, 430890 <ferror@plt+0x2e010>
  430874:	ldrb	w0, [x19, #18]
  430878:	cbnz	w0, 430890 <ferror@plt+0x2e010>
  43087c:	ldrb	w2, [x19, #25]
  430880:	mov	x1, x20
  430884:	mov	x0, x19
  430888:	blr	x3
  43088c:	nop
  430890:	ldrb	w0, [x19, #16]
  430894:	cbnz	w0, 4308b8 <ferror@plt+0x2e038>
  430898:	ldrb	w0, [x19, #32]
  43089c:	cbnz	w0, 4308b8 <ferror@plt+0x2e038>
  4308a0:	ldrb	w0, [x19, #18]
  4308a4:	strb	wzr, [x19, #440]
  4308a8:	cbz	w0, 4308b8 <ferror@plt+0x2e038>
  4308ac:	ldrb	w0, [x20, #4]
  4308b0:	cmp	w0, #0x16
  4308b4:	b.ne	430810 <ferror@plt+0x2df90>  // b.any
  4308b8:	mov	x0, x20
  4308bc:	ldp	x19, x20, [sp, #16]
  4308c0:	ldp	x21, x22, [sp, #32]
  4308c4:	ldr	x23, [sp, #48]
  4308c8:	ldp	x29, x30, [sp], #64
  4308cc:	ret
  4308d0:	ldrb	w0, [x19, #25]
  4308d4:	cmp	w0, #0x1
  4308d8:	b.eq	430864 <ferror@plt+0x2dfe4>  // b.none
  4308dc:	and	w1, w1, #0x1
  4308e0:	mov	x0, x19
  4308e4:	bl	420dc0 <ferror@plt+0x1e540>
  4308e8:	cbz	w0, 43086c <ferror@plt+0x2dfec>
  4308ec:	ldrb	w0, [x19, #156]
  4308f0:	cmp	w0, #0x53
  4308f4:	b.eq	430810 <ferror@plt+0x2df90>  // b.none
  4308f8:	mov	x20, x22
  4308fc:	b	43086c <ferror@plt+0x2dfec>
  430900:	mov	x0, x19
  430904:	bl	42edd8 <ferror@plt+0x2c558>
  430908:	mov	x20, x0
  43090c:	b	430850 <ferror@plt+0x2dfd0>
  430910:	ldr	x1, [x21]
  430914:	cbz	x1, 430928 <ferror@plt+0x2e0a8>
  430918:	ldp	x20, x0, [x1, #16]
  43091c:	str	x20, [x19, #448]
  430920:	str	x1, [x19, #488]
  430924:	b	430830 <ferror@plt+0x2dfb0>
  430928:	mov	x0, #0x20                  	// #32
  43092c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  430930:	mov	x20, x0
  430934:	str	x20, [x21]
  430938:	mov	x0, #0x1770                	// #6000
  43093c:	str	x21, [x20, #8]
  430940:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  430944:	str	xzr, [x20]
  430948:	str	x0, [x20, #16]
  43094c:	add	x0, x0, x23
  430950:	ldr	x1, [x21]
  430954:	str	x0, [x20, #24]
  430958:	b	430918 <ferror@plt+0x2e098>
  43095c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430960:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430964:	add	x2, x2, #0x818
  430968:	add	x0, x0, #0x208
  43096c:	mov	w1, #0xa1d                 	// #2589
  430970:	bl	4028b0 <ferror@plt+0x30>
  430974:	nop
  430978:	stp	x29, x30, [sp, #-64]!
  43097c:	mov	x29, sp
  430980:	ldr	x2, [x0, #136]
  430984:	stp	x19, x20, [sp, #16]
  430988:	mov	w19, w1
  43098c:	stp	x21, x22, [sp, #32]
  430990:	mov	x22, x0
  430994:	ldr	x1, [x2, #8]
  430998:	cbz	x1, 430a24 <ferror@plt+0x2e1a4>
  43099c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4309a0:	movk	x0, #0xaaab
  4309a4:	b	4309d8 <ferror@plt+0x2e158>
  4309a8:	tst	w3, #0xfffffffd
  4309ac:	b.ne	430ac0 <ferror@plt+0x2e240>  // b.any
  4309b0:	ldp	x4, x2, [x2, #16]
  4309b4:	sub	x2, x2, x4
  4309b8:	ubfx	x2, x2, #3, #32
  4309bc:	cmp	w2, w19
  4309c0:	b.gt	4309fc <ferror@plt+0x2e17c>
  4309c4:	ldr	x3, [x1, #8]
  4309c8:	sub	w19, w19, w2
  4309cc:	mov	x2, x1
  4309d0:	cbz	x3, 430a24 <ferror@plt+0x2e1a4>
  4309d4:	mov	x1, x3
  4309d8:	ldr	w3, [x2, #48]
  4309dc:	cmp	w3, #0x1
  4309e0:	b.ne	4309a8 <ferror@plt+0x2e128>  // b.any
  4309e4:	ldp	x4, x2, [x2, #16]
  4309e8:	sub	x2, x2, x4
  4309ec:	asr	x2, x2, #3
  4309f0:	mul	w2, w2, w0
  4309f4:	cmp	w2, w19
  4309f8:	b.le	4309c4 <ferror@plt+0x2e144>
  4309fc:	cmp	w3, #0x1
  430a00:	b.eq	430aa4 <ferror@plt+0x2e224>  // b.none
  430a04:	tst	w3, #0xfffffffd
  430a08:	b.ne	430adc <ferror@plt+0x2e25c>  // b.any
  430a0c:	ldr	x20, [x4, w19, sxtw #3]
  430a10:	ldp	x21, x22, [sp, #32]
  430a14:	mov	x0, x20
  430a18:	ldp	x19, x20, [sp, #16]
  430a1c:	ldp	x29, x30, [sp], #64
  430a20:	ret
  430a24:	ldr	w0, [x22, #500]
  430a28:	mov	w21, w19
  430a2c:	str	x23, [sp, #48]
  430a30:	add	w0, w0, #0x1
  430a34:	str	w0, [x22, #500]
  430a38:	ldr	x23, [x22, #904]
  430a3c:	str	xzr, [x22, #904]
  430a40:	b	430a48 <ferror@plt+0x2e1c8>
  430a44:	cbz	w1, 430a9c <ferror@plt+0x2e21c>
  430a48:	mov	x0, x22
  430a4c:	bl	4307f0 <ferror@plt+0x2df70>
  430a50:	mov	x20, x0
  430a54:	ldrb	w0, [x0, #4]
  430a58:	mov	w1, w21
  430a5c:	sub	w21, w21, #0x1
  430a60:	cmp	w0, #0x16
  430a64:	b.ne	430a44 <ferror@plt+0x2e1c4>  // b.any
  430a68:	sub	w1, w19, w21
  430a6c:	mov	x0, x22
  430a70:	bl	436790 <ferror@plt+0x33f10>
  430a74:	str	x23, [x22, #904]
  430a78:	ldr	w0, [x22, #500]
  430a7c:	ldr	x23, [sp, #48]
  430a80:	sub	w0, w0, #0x1
  430a84:	str	w0, [x22, #500]
  430a88:	mov	x0, x20
  430a8c:	ldp	x19, x20, [sp, #16]
  430a90:	ldp	x21, x22, [sp, #32]
  430a94:	ldp	x29, x30, [sp], #64
  430a98:	ret
  430a9c:	mov	w21, #0xffffffff            	// #-1
  430aa0:	b	430a68 <ferror@plt+0x2e1e8>
  430aa4:	mov	w20, #0x18                  	// #24
  430aa8:	ldp	x21, x22, [sp, #32]
  430aac:	smaddl	x20, w19, w20, x4
  430ab0:	mov	x0, x20
  430ab4:	ldp	x19, x20, [sp, #16]
  430ab8:	ldp	x29, x30, [sp], #64
  430abc:	ret
  430ac0:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430ac4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430ac8:	add	x2, x2, #0x410
  430acc:	add	x0, x0, #0x208
  430ad0:	mov	w1, #0x99f                 	// #2463
  430ad4:	str	x23, [sp, #48]
  430ad8:	bl	4028b0 <ferror@plt+0x30>
  430adc:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430ae0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430ae4:	add	x2, x2, #0x828
  430ae8:	add	x0, x0, #0x208
  430aec:	mov	w1, #0x9ad                 	// #2477
  430af0:	str	x23, [sp, #48]
  430af4:	bl	4028b0 <ferror@plt+0x30>
  430af8:	stp	x29, x30, [sp, #-48]!
  430afc:	mov	x29, sp
  430b00:	ldr	x2, [x0, #56]
  430b04:	stp	x19, x20, [sp, #16]
  430b08:	mov	x19, x1
  430b0c:	mov	x20, x0
  430b10:	ldp	x0, x1, [x2, #16]
  430b14:	sub	x1, x1, x0
  430b18:	cmp	x1, x19
  430b1c:	b.cc	430b34 <ferror@plt+0x2e2b4>  // b.lo, b.ul, b.last
  430b20:	add	x19, x0, x19
  430b24:	str	x19, [x2, #16]
  430b28:	ldp	x19, x20, [sp, #16]
  430b2c:	ldp	x29, x30, [sp], #48
  430b30:	ret
  430b34:	ldr	x2, [x20, #72]
  430b38:	add	x4, x20, #0x48
  430b3c:	cbz	x2, 430b78 <ferror@plt+0x2e2f8>
  430b40:	add	x3, x19, x19, lsl #1
  430b44:	mov	x0, #0x1f40                	// #8000
  430b48:	add	x3, x0, x3, lsr #1
  430b4c:	nop
  430b50:	ldr	x0, [x2, #8]
  430b54:	ldr	x1, [x2, #24]
  430b58:	sub	x1, x1, x0
  430b5c:	cmp	x19, x1
  430b60:	b.hi	430b6c <ferror@plt+0x2e2ec>  // b.pmore
  430b64:	cmp	x1, x3
  430b68:	b.ls	430bcc <ferror@plt+0x2e34c>  // b.plast
  430b6c:	mov	x4, x2
  430b70:	ldr	x2, [x2]
  430b74:	cbnz	x2, 430b50 <ferror@plt+0x2e2d0>
  430b78:	str	x21, [sp, #32]
  430b7c:	mov	x21, #0x1f40                	// #8000
  430b80:	cmp	x19, x21
  430b84:	csel	x21, x19, x21, cs  // cs = hs, nlast
  430b88:	add	x21, x21, #0x7
  430b8c:	and	x21, x21, #0xfffffffffffffff8
  430b90:	add	x0, x21, #0x20
  430b94:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  430b98:	add	x2, x0, x21
  430b9c:	stp	x0, x0, [x2, #8]
  430ba0:	str	x2, [x2, #24]
  430ba4:	str	xzr, [x0, x21]
  430ba8:	ldr	x21, [sp, #32]
  430bac:	add	x19, x0, x19
  430bb0:	ldr	x1, [x20, #56]
  430bb4:	str	x1, [x2]
  430bb8:	str	x2, [x20, #56]
  430bbc:	str	x19, [x2, #16]
  430bc0:	ldp	x19, x20, [sp, #16]
  430bc4:	ldp	x29, x30, [sp], #48
  430bc8:	ret
  430bcc:	ldr	x1, [x2]
  430bd0:	str	x1, [x4]
  430bd4:	str	xzr, [x2]
  430bd8:	str	x0, [x2, #16]
  430bdc:	b	430bac <ferror@plt+0x2e32c>
  430be0:	stp	x29, x30, [sp, #-48]!
  430be4:	mov	x29, sp
  430be8:	stp	x19, x20, [sp, #16]
  430bec:	mov	x19, x1
  430bf0:	ldr	x1, [x0, #1088]
  430bf4:	ldr	x0, [x0, #56]
  430bf8:	ldr	x1, [x1, #104]
  430bfc:	str	x21, [sp, #32]
  430c00:	ldr	x21, [x0, #16]
  430c04:	cbz	x1, 430c34 <ferror@plt+0x2e3b4>
  430c08:	mov	x0, x19
  430c0c:	blr	x1
  430c10:	mov	x2, x19
  430c14:	mov	x1, x21
  430c18:	mov	x20, x0
  430c1c:	bl	402220 <memcpy@plt>
  430c20:	mov	x0, x20
  430c24:	ldp	x19, x20, [sp, #16]
  430c28:	ldr	x21, [sp, #32]
  430c2c:	ldp	x29, x30, [sp], #48
  430c30:	ret
  430c34:	add	x19, x21, x19
  430c38:	str	x19, [x0, #16]
  430c3c:	mov	x20, x21
  430c40:	mov	x0, x20
  430c44:	ldp	x19, x20, [sp, #16]
  430c48:	ldr	x21, [sp, #32]
  430c4c:	ldp	x29, x30, [sp], #48
  430c50:	ret
  430c54:	nop
  430c58:	ldrb	w2, [x0, #4]
  430c5c:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  430c60:	add	x1, x1, #0xc90
  430c64:	sbfiz	x0, x2, #4, #32
  430c68:	ldr	w0, [x1, x0]
  430c6c:	cmp	w0, #0x2
  430c70:	b.eq	430c80 <ferror@plt+0x2e400>  // b.none
  430c74:	b.hi	430c84 <ferror@plt+0x2e404>  // b.pmore
  430c78:	cbz	w0, 430cb8 <ferror@plt+0x2e438>
  430c7c:	mov	w0, #0x0                   	// #0
  430c80:	ret
  430c84:	cmp	w0, #0x3
  430c88:	b.ne	430cb0 <ferror@plt+0x2e430>  // b.any
  430c8c:	cmp	w2, #0x50
  430c90:	b.eq	430c80 <ferror@plt+0x2e400>  // b.none
  430c94:	cmp	w2, #0x53
  430c98:	mov	w0, #0x1                   	// #1
  430c9c:	b.eq	430c80 <ferror@plt+0x2e400>  // b.none
  430ca0:	cmp	w2, #0x51
  430ca4:	cset	w0, ne  // ne = any
  430ca8:	add	w0, w0, #0x5
  430cac:	ret
  430cb0:	mov	w0, #0x6                   	// #6
  430cb4:	ret
  430cb8:	cmp	w2, #0x26
  430cbc:	mov	w1, #0x6                   	// #6
  430cc0:	mov	w0, #0x4                   	// #4
  430cc4:	csel	w0, w0, w1, eq  // eq = none
  430cc8:	ret
  430ccc:	nop
  430cd0:	str	w1, [x0, #1408]
  430cd4:	ret
  430cd8:	str	wzr, [x0, #1408]
  430cdc:	ret
  430ce0:	ldp	w2, w4, [x0]
  430ce4:	ldr	x3, [x0, #16]
  430ce8:	add	w2, w2, w4
  430cec:	ldr	w1, [x0, #8]
  430cf0:	add	w0, w1, w3
  430cf4:	add	w0, w2, w0
  430cf8:	ret
  430cfc:	nop
  430d00:	mov	x2, x0
  430d04:	ldr	x0, [x1]
  430d08:	ldr	x3, [x2]
  430d0c:	cmp	x3, x0
  430d10:	b.eq	430d1c <ferror@plt+0x2e49c>  // b.none
  430d14:	mov	w0, #0x0                   	// #0
  430d18:	ret
  430d1c:	ldr	w3, [x1, #8]
  430d20:	mov	w0, #0x0                   	// #0
  430d24:	ldr	w4, [x2, #8]
  430d28:	cmp	w4, w3
  430d2c:	b.ne	430d18 <ferror@plt+0x2e498>  // b.any
  430d30:	ldr	x0, [x1, #16]
  430d34:	ldr	x2, [x2, #16]
  430d38:	cmp	x2, x0
  430d3c:	cset	w0, eq  // eq = none
  430d40:	ret
  430d44:	nop
  430d48:	mov	x2, x0
  430d4c:	mov	w0, #0x1                   	// #1
  430d50:	ldr	x3, [x1]
  430d54:	ldr	x1, [x2]
  430d58:	add	x1, x1, x3
  430d5c:	str	x1, [x2]
  430d60:	ret
  430d64:	nop
  430d68:	mov	x8, x0
  430d6c:	tbz	w1, #31, 430d84 <ferror@plt+0x2e504>
  430d70:	and	w1, w1, #0x7fffffff
  430d74:	mov	w2, #0x18                  	// #24
  430d78:	ldr	x0, [x0, #104]
  430d7c:	umull	x1, w1, w2
  430d80:	ldr	w1, [x0, x1]
  430d84:	cmp	x8, #0x0
  430d88:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  430d8c:	b.ls	430e1c <ferror@plt+0x2e59c>  // b.plast
  430d90:	ldr	w4, [x8, #16]
  430d94:	mov	w2, #0x18                  	// #24
  430d98:	ldr	x6, [x8]
  430d9c:	smull	x2, w4, w2
  430da0:	add	x0, x6, x2
  430da4:	ldr	w2, [x6, x2]
  430da8:	cmp	w1, w2
  430dac:	b.cc	430e14 <ferror@plt+0x2e594>  // b.lo, b.ul, b.last
  430db0:	ldr	w2, [x8, #12]
  430db4:	add	w3, w4, #0x1
  430db8:	cmp	w3, w2
  430dbc:	b.eq	430e10 <ferror@plt+0x2e590>  // b.none
  430dc0:	ldr	w3, [x0, #24]
  430dc4:	cmp	w1, w3
  430dc8:	b.cc	430e10 <ferror@plt+0x2e590>  // b.lo, b.ul, b.last
  430dcc:	mov	w3, w4
  430dd0:	mov	w4, w2
  430dd4:	mov	w7, #0x18                  	// #24
  430dd8:	b	430df4 <ferror@plt+0x2e574>
  430ddc:	lsr	w2, w2, #1
  430de0:	umull	x5, w2, w7
  430de4:	ldr	w5, [x6, x5]
  430de8:	cmp	w1, w5
  430dec:	csel	w3, w3, w2, cc  // cc = lo, ul, last
  430df0:	csel	w4, w2, w4, cc  // cc = lo, ul, last
  430df4:	sub	w5, w4, w3
  430df8:	add	w2, w3, w4
  430dfc:	cmp	w5, #0x1
  430e00:	b.hi	430ddc <ferror@plt+0x2e55c>  // b.pmore
  430e04:	mov	w0, #0x18                  	// #24
  430e08:	str	w3, [x8, #16]
  430e0c:	smaddl	x0, w3, w0, x6
  430e10:	ret
  430e14:	mov	w3, #0x0                   	// #0
  430e18:	b	430dd4 <ferror@plt+0x2e554>
  430e1c:	mov	x0, #0x0                   	// #0
  430e20:	ret
  430e24:	nop
  430e28:	stp	x29, x30, [sp, #-80]!
  430e2c:	mov	x29, sp
  430e30:	stp	x19, x20, [sp, #16]
  430e34:	mov	x19, x0
  430e38:	mov	w0, #0x6fffffff            	// #1879048191
  430e3c:	stp	x21, x22, [sp, #32]
  430e40:	cmp	w1, w0
  430e44:	mov	w22, w1
  430e48:	stp	x23, x24, [sp, #48]
  430e4c:	b.ls	430e8c <ferror@plt+0x2e60c>  // b.plast
  430e50:	ldp	w0, w21, [x19, #32]
  430e54:	add	x23, x19, #0x24
  430e58:	cmp	w0, w21
  430e5c:	mov	w20, w21
  430e60:	b.eq	430f54 <ferror@plt+0x2e6d4>  // b.none
  430e64:	ldr	x0, [x19, #24]
  430e68:	add	w21, w21, #0x1
  430e6c:	add	x0, x0, x20, lsl #5
  430e70:	ldp	x19, x20, [sp, #16]
  430e74:	str	w21, [x23]
  430e78:	ldp	x23, x24, [sp, #48]
  430e7c:	str	w22, [x0]
  430e80:	ldp	x21, x22, [sp, #32]
  430e84:	ldp	x29, x30, [sp], #80
  430e88:	ret
  430e8c:	ldp	w0, w20, [x19, #8]
  430e90:	add	x23, x19, #0xc
  430e94:	cmp	w0, w20
  430e98:	mov	w21, w20
  430e9c:	b.eq	430ecc <ferror@plt+0x2e64c>  // b.none
  430ea0:	ldr	x0, [x19]
  430ea4:	mov	w1, #0x18                  	// #24
  430ea8:	umaddl	x0, w20, w1, x0
  430eac:	add	w21, w21, #0x1
  430eb0:	ldp	x19, x20, [sp, #16]
  430eb4:	str	w21, [x23]
  430eb8:	ldp	x23, x24, [sp, #48]
  430ebc:	str	w22, [x0]
  430ec0:	ldp	x21, x22, [sp, #32]
  430ec4:	ldp	x29, x30, [sp], #80
  430ec8:	ret
  430ecc:	cmp	w20, #0x0
  430ed0:	mov	x1, #0x100                 	// #256
  430ed4:	lsl	w0, w20, #1
  430ed8:	csel	x0, x0, x1, ne  // ne = any
  430edc:	ldr	x1, [x19, #80]
  430ee0:	add	x0, x0, x0, lsl #1
  430ee4:	ldr	x24, [x19]
  430ee8:	lsl	x0, x0, #3
  430eec:	blr	x1
  430ef0:	mov	x21, x0
  430ef4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  430ef8:	mov	x0, x24
  430efc:	movk	x1, #0xaaab
  430f00:	ldr	x2, [x19, #72]
  430f04:	umulh	x21, x21, x1
  430f08:	ubfx	x1, x21, #4, #32
  430f0c:	lsr	x21, x21, #4
  430f10:	add	x1, x1, x1, lsl #1
  430f14:	lsl	x1, x1, #3
  430f18:	blr	x2
  430f1c:	sub	w2, w21, w20
  430f20:	mov	x24, x0
  430f24:	mov	w0, #0x18                  	// #24
  430f28:	mov	w1, #0x0                   	// #0
  430f2c:	umull	x2, w2, w0
  430f30:	umaddl	x0, w20, w0, x24
  430f34:	bl	402440 <memset@plt>
  430f38:	str	x24, [x19]
  430f3c:	mov	w1, #0x18                  	// #24
  430f40:	str	w21, [x19, #8]
  430f44:	ldr	x0, [x19]
  430f48:	ldr	w21, [x19, #12]
  430f4c:	umaddl	x0, w20, w1, x0
  430f50:	b	430eac <ferror@plt+0x2e62c>
  430f54:	ldr	x1, [x19, #80]
  430f58:	cmp	w21, #0x0
  430f5c:	lsl	w0, w21, #1
  430f60:	mov	x2, #0x100                 	// #256
  430f64:	csel	x0, x0, x2, ne  // ne = any
  430f68:	str	x25, [sp, #64]
  430f6c:	ldr	x25, [x19, #24]
  430f70:	lsl	x0, x0, #5
  430f74:	blr	x1
  430f78:	mov	x1, x0
  430f7c:	ldr	x2, [x19, #72]
  430f80:	lsr	x24, x0, #5
  430f84:	and	x1, x1, #0x1fffffffe0
  430f88:	mov	x0, x25
  430f8c:	blr	x2
  430f90:	sub	w2, w24, w21
  430f94:	mov	x21, x0
  430f98:	mov	w1, #0x0                   	// #0
  430f9c:	add	x0, x0, x20, lsl #5
  430fa0:	lsl	x2, x2, #5
  430fa4:	bl	402440 <memset@plt>
  430fa8:	ldr	x25, [sp, #64]
  430fac:	str	x21, [x19, #24]
  430fb0:	ldr	w21, [x19, #36]
  430fb4:	str	w24, [x19, #32]
  430fb8:	b	430e64 <ferror@plt+0x2e5e4>
  430fbc:	nop
  430fc0:	ldr	x0, [x0, #88]
  430fc4:	cbz	x0, 430fcc <ferror@plt+0x2e74c>
  430fc8:	b	45b808 <ferror@plt+0x58f88>
  430fcc:	ret
  430fd0:	stp	x29, x30, [sp, #-48]!
  430fd4:	adrp	x2, 430000 <ferror@plt+0x2d780>
  430fd8:	adrp	x1, 430000 <ferror@plt+0x2d780>
  430fdc:	mov	x29, sp
  430fe0:	stp	x19, x20, [sp, #16]
  430fe4:	mov	x20, x0
  430fe8:	add	x1, x1, #0xce0
  430fec:	add	x2, x2, #0xd00
  430ff0:	mov	x3, #0x0                   	// #0
  430ff4:	mov	x0, #0x64                  	// #100
  430ff8:	bl	45b7d8 <ferror@plt+0x58f58>
  430ffc:	ldr	w1, [x20, #96]
  431000:	str	x0, [x20, #88]
  431004:	cbz	w1, 431040 <ferror@plt+0x2e7c0>
  431008:	mov	w19, #0x0                   	// #0
  43100c:	str	x21, [sp, #32]
  431010:	mov	w21, #0x18                  	// #24
  431014:	b	43101c <ferror@plt+0x2e79c>
  431018:	ldr	x0, [x20, #88]
  43101c:	mov	w2, #0x1                   	// #1
  431020:	ldr	x1, [x20, #104]
  431024:	umaddl	x1, w19, w21, x1
  431028:	add	w19, w19, w2
  43102c:	bl	45be80 <ferror@plt+0x59600>
  431030:	ldr	w0, [x20, #96]
  431034:	cmp	w0, w19
  431038:	b.hi	431018 <ferror@plt+0x2e798>  // b.pmore
  43103c:	ldr	x21, [sp, #32]
  431040:	ldp	x19, x20, [sp, #16]
  431044:	ldp	x29, x30, [sp], #48
  431048:	ret
  43104c:	nop
  431050:	ldr	x0, [x0, #104]
  431054:	and	w1, w1, #0x7fffffff
  431058:	mov	w2, #0x18                  	// #24
  43105c:	umaddl	x1, w1, w2, x0
  431060:	ldr	x0, [x1, #16]
  431064:	ret
  431068:	and	w1, w1, #0x7fffffff
  43106c:	mov	w2, #0x18                  	// #24
  431070:	ldr	x0, [x0, #104]
  431074:	umull	x1, w1, w2
  431078:	ldr	w0, [x0, x1]
  43107c:	ret
  431080:	tbnz	w1, #31, 431100 <ferror@plt+0x2e880>
  431084:	mov	w2, #0x6fffffff            	// #1879048191
  431088:	mov	w9, w1
  43108c:	cmp	w1, w2
  431090:	b.ls	4310d4 <ferror@plt+0x2e854>  // b.plast
  431094:	mov	x3, x0
  431098:	cbz	x0, 431168 <ferror@plt+0x2e8e8>
  43109c:	ldp	w4, w5, [x0, #36]
  4310a0:	ldr	x6, [x0, #24]
  4310a4:	sbfiz	x1, x5, #5, #32
  4310a8:	add	x0, x6, x1
  4310ac:	ldr	w1, [x6, x1]
  4310b0:	cmp	w9, w1
  4310b4:	b.cc	431124 <ferror@plt+0x2e8a4>  // b.lo, b.ul, b.last
  4310b8:	cbz	w5, 431140 <ferror@plt+0x2e8c0>
  4310bc:	ldur	w1, [x0, #-32]
  4310c0:	cmp	w9, w1
  4310c4:	b.cc	431140 <ferror@plt+0x2e8c0>  // b.lo, b.ul, b.last
  4310c8:	sub	w4, w5, #0x1
  4310cc:	mov	w5, #0x0                   	// #0
  4310d0:	b	431124 <ferror@plt+0x2e8a4>
  4310d4:	stp	x29, x30, [sp, #-16]!
  4310d8:	mov	x29, sp
  4310dc:	bl	430d68 <ferror@plt+0x2e4e8>
  4310e0:	cbz	x0, 431160 <ferror@plt+0x2e8e0>
  4310e4:	ldrb	w1, [x0, #7]
  4310e8:	mov	w0, #0xffffffff            	// #-1
  4310ec:	lsl	w0, w0, w1
  4310f0:	bics	wzr, w9, w0
  4310f4:	cset	w0, eq  // eq = none
  4310f8:	ldp	x29, x30, [sp], #16
  4310fc:	ret
  431100:	mov	w0, #0x0                   	// #0
  431104:	ret
  431108:	lsr	w2, w1, #1
  43110c:	lsr	w1, w1, #1
  431110:	lsl	x2, x2, #5
  431114:	ldr	w0, [x6, x2]
  431118:	cmp	w9, w0
  43111c:	b.cc	431158 <ferror@plt+0x2e8d8>  // b.lo, b.ul, b.last
  431120:	mov	w4, w1
  431124:	add	w1, w4, w5
  431128:	cmp	w4, w5
  43112c:	b.hi	431108 <ferror@plt+0x2e888>  // b.pmore
  431130:	str	w4, [x3, #40]
  431134:	sbfiz	x0, x4, #5, #32
  431138:	add	x0, x6, x0
  43113c:	cbz	x0, 431168 <ferror@plt+0x2e8e8>
  431140:	ldrb	w1, [x0, #7]
  431144:	mov	w0, #0xffffffff            	// #-1
  431148:	lsl	w0, w0, w1
  43114c:	bics	wzr, w9, w0
  431150:	cset	w0, eq  // eq = none
  431154:	ret
  431158:	add	w5, w1, #0x1
  43115c:	b	431124 <ferror@plt+0x2e8a4>
  431160:	mov	w0, #0x1                   	// #1
  431164:	b	4310f8 <ferror@plt+0x2e878>
  431168:	mov	w0, #0x1                   	// #1
  43116c:	ret
  431170:	stp	x29, x30, [sp, #-32]!
  431174:	movi	v0.2s, #0x1
  431178:	adrp	x4, 45c000 <ferror@plt+0x59780>
  43117c:	mov	x29, sp
  431180:	stp	x19, x20, [sp, #16]
  431184:	mov	x19, x0
  431188:	add	x4, x4, #0xaa0
  43118c:	stp	xzr, xzr, [x0]
  431190:	mov	w20, w1
  431194:	mov	x3, #0x0                   	// #0
  431198:	stp	xzr, xzr, [x0, #16]
  43119c:	adrp	x2, 430000 <ferror@plt+0x2d780>
  4311a0:	adrp	x1, 430000 <ferror@plt+0x2d780>
  4311a4:	stp	xzr, xzr, [x0, #64]
  4311a8:	add	x2, x2, #0xd00
  4311ac:	add	x1, x1, #0xce0
  4311b0:	stp	xzr, xzr, [x19, #32]
  4311b4:	mov	x0, #0x64                  	// #100
  4311b8:	stp	xzr, xzr, [x19, #48]
  4311bc:	str	x4, [x19, #72]
  4311c0:	stp	xzr, xzr, [x19, #80]
  4311c4:	stp	xzr, xzr, [x19, #96]
  4311c8:	stp	xzr, xzr, [x19, #112]
  4311cc:	str	xzr, [x19, #128]
  4311d0:	str	d0, [x19, #56]
  4311d4:	bl	45b7d8 <ferror@plt+0x58f58>
  4311d8:	str	x0, [x19, #88]
  4311dc:	str	w20, [x19, #112]
  4311e0:	ldp	x19, x20, [sp, #16]
  4311e4:	ldp	x29, x30, [sp], #32
  4311e8:	ret
  4311ec:	nop
  4311f0:	ldr	w1, [x1, #20]
  4311f4:	b	430d68 <ferror@plt+0x2e4e8>
  4311f8:	stp	x29, x30, [sp, #-48]!
  4311fc:	mov	w1, #0x18                  	// #24
  431200:	mov	x29, sp
  431204:	stp	x19, x20, [sp, #16]
  431208:	mov	x20, x0
  43120c:	ldr	w19, [x0, #12]
  431210:	ldr	x0, [x0]
  431214:	sub	w19, w19, #0x1
  431218:	smaddl	x19, w19, w1, x0
  43121c:	ldr	w0, [x19, #20]
  431220:	cbz	w0, 431264 <ferror@plt+0x2e9e4>
  431224:	stp	x21, x22, [sp, #32]
  431228:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43122c:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  431230:	add	x22, x22, #0x230
  431234:	add	x21, x21, #0x520
  431238:	ldr	x0, [x21]
  43123c:	mov	x1, x22
  431240:	ldr	x2, [x19, #8]
  431244:	bl	402840 <fprintf@plt>
  431248:	ldr	w1, [x19, #20]
  43124c:	mov	x0, x20
  431250:	bl	430d68 <ferror@plt+0x2e4e8>
  431254:	ldr	w1, [x0, #20]
  431258:	mov	x19, x0
  43125c:	cbnz	w1, 431238 <ferror@plt+0x2e9b8>
  431260:	ldp	x21, x22, [sp, #32]
  431264:	ldp	x19, x20, [sp, #16]
  431268:	ldp	x29, x30, [sp], #48
  43126c:	ret
  431270:	stp	x29, x30, [sp, #-80]!
  431274:	mov	x29, sp
  431278:	ldr	w5, [x0, #56]
  43127c:	stp	x19, x20, [sp, #16]
  431280:	mov	x19, x0
  431284:	mov	w0, #0x5fffffff            	// #1610612735
  431288:	stp	x21, x22, [sp, #32]
  43128c:	cmp	w5, w0
  431290:	mov	w22, w2
  431294:	stp	x23, x24, [sp, #48]
  431298:	add	w21, w5, #0x1
  43129c:	mov	w24, w1
  4312a0:	str	x25, [sp, #64]
  4312a4:	mov	w23, w4
  4312a8:	mov	x25, x3
  4312ac:	b.hi	4312d0 <ferror@plt+0x2ea50>  // b.pmore
  4312b0:	ldr	w1, [x19, #120]
  4312b4:	mov	w0, #0x1                   	// #1
  4312b8:	cmp	w1, #0x0
  4312bc:	lsl	w0, w0, w1
  4312c0:	add	w21, w0, w5
  4312c4:	neg	w0, w0
  4312c8:	and	w0, w21, w0
  4312cc:	csel	w21, w0, w21, ne  // ne = any
  4312d0:	cmp	w24, #0x1
  4312d4:	b.eq	431458 <ferror@plt+0x2ebd8>  // b.none
  4312d8:	mov	w0, #0x6fffffff            	// #1879048191
  4312dc:	cmp	w21, w0
  4312e0:	csel	w21, w21, wzr, ls  // ls = plast
  4312e4:	mov	x0, x19
  4312e8:	mov	w1, w21
  4312ec:	bl	430e28 <ferror@plt+0x2e5a8>
  4312f0:	strb	w24, [x0, #4]
  4312f4:	mov	x20, x0
  4312f8:	cmp	w24, #0x3
  4312fc:	cbz	x25, 431320 <ferror@plt+0x2eaa0>
  431300:	ldrb	w0, [x25]
  431304:	cbnz	w0, 431320 <ferror@plt+0x2eaa0>
  431308:	b.eq	431408 <ferror@plt+0x2eb88>  // b.none
  43130c:	cmp	w24, #0x1
  431310:	b.eq	43150c <ferror@plt+0x2ec8c>  // b.none
  431314:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  431318:	add	x25, x3, #0x260
  43131c:	b	43132c <ferror@plt+0x2eaac>
  431320:	b.eq	431408 <ferror@plt+0x2eb88>  // b.none
  431324:	cmp	w24, #0x1
  431328:	b.eq	4314f0 <ferror@plt+0x2ec70>  // b.none
  43132c:	and	w22, w22, #0xff
  431330:	mov	x0, #0x0                   	// #0
  431334:	strb	w22, [x20, #5]
  431338:	dup	v0.2s, w21
  43133c:	str	w23, [x20, #16]
  431340:	str	x25, [x20, #8]
  431344:	ldr	w4, [x19, #12]
  431348:	sub	w4, w4, #0x1
  43134c:	str	w4, [x19, #16]
  431350:	strh	wzr, [x20, #6]
  431354:	str	wzr, [x19, #64]
  431358:	str	d0, [x19, #56]
  43135c:	cbnz	w24, 431418 <ferror@plt+0x2eb98>
  431360:	ldr	w21, [x19, #48]
  431364:	ldrb	w1, [x19, #52]
  431368:	add	w3, w21, #0x1
  43136c:	cbz	w21, 431490 <ferror@plt+0x2ec10>
  431370:	ldr	w0, [x20]
  431374:	mov	w2, #0xffffffff            	// #-1
  431378:	ldur	w4, [x20, #-24]
  43137c:	adrp	x24, 49e000 <_obstack_memory_used@@Base+0x416d8>
  431380:	ldurb	w5, [x20, #-18]
  431384:	add	w0, w0, w2
  431388:	sub	w0, w0, w4
  43138c:	add	x23, x24, #0x520
  431390:	mov	w22, #0x2e                  	// #46
  431394:	lsl	w2, w2, w5
  431398:	and	w0, w0, w2
  43139c:	add	w0, w0, w4
  4313a0:	str	w0, [x20, #20]
  4313a4:	str	w3, [x19, #48]
  4313a8:	cbz	w1, 4313ec <ferror@plt+0x2eb6c>
  4313ac:	nop
  4313b0:	ldr	x0, [x23]
  4313b4:	ldp	x1, x3, [x0, #40]
  4313b8:	add	x2, x1, #0x1
  4313bc:	cmp	x1, x3
  4313c0:	b.cs	4314e4 <ferror@plt+0x2ec64>  // b.hs, b.nlast
  4313c4:	str	x2, [x0, #40]
  4313c8:	strb	w22, [x1]
  4313cc:	subs	w21, w21, #0x1
  4313d0:	b.ne	4313b0 <ferror@plt+0x2eb30>  // b.any
  4313d4:	ldr	x25, [x20, #8]
  4313d8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4313dc:	ldr	x0, [x24, #1312]
  4313e0:	mov	x2, x25
  4313e4:	add	x1, x1, #0x268
  4313e8:	bl	402840 <fprintf@plt>
  4313ec:	mov	x0, x20
  4313f0:	ldp	x19, x20, [sp, #16]
  4313f4:	ldp	x21, x22, [sp, #32]
  4313f8:	ldp	x23, x24, [sp, #48]
  4313fc:	ldr	x25, [sp, #64]
  431400:	ldp	x29, x30, [sp], #80
  431404:	ret
  431408:	and	w22, w22, #0xff
  43140c:	mov	w24, #0x2                   	// #2
  431410:	mov	x0, #0x0                   	// #0
  431414:	b	431334 <ferror@plt+0x2eab4>
  431418:	cmp	w24, #0x2
  43141c:	b.eq	4314c0 <ferror@plt+0x2ec40>  // b.none
  431420:	cmp	w24, #0x1
  431424:	b.ne	4313ec <ferror@plt+0x2eb6c>  // b.any
  431428:	ldr	w1, [x19, #48]
  43142c:	ldp	x21, x22, [sp, #32]
  431430:	sub	w1, w1, #0x1
  431434:	str	w1, [x19, #48]
  431438:	ldp	x23, x24, [sp, #48]
  43143c:	ldr	w0, [x0, #20]
  431440:	str	w0, [x20, #20]
  431444:	mov	x0, x20
  431448:	ldp	x19, x20, [sp, #16]
  43144c:	ldr	x25, [sp, #64]
  431450:	ldp	x29, x30, [sp], #80
  431454:	ret
  431458:	ldr	w0, [x19, #12]
  43145c:	mov	w2, #0x18                  	// #24
  431460:	ldr	x1, [x19]
  431464:	sub	w0, w0, #0x1
  431468:	smaddl	x0, w0, w2, x1
  43146c:	ldr	w0, [x0, #20]
  431470:	cmp	w0, #0x0
  431474:	ccmp	x25, #0x0, #0x0, eq  // eq = none
  431478:	b.ne	4312d8 <ferror@plt+0x2ea58>  // b.any
  43147c:	ldr	w0, [x19, #48]
  431480:	mov	x20, #0x0                   	// #0
  431484:	sub	w0, w0, #0x1
  431488:	str	w0, [x19, #48]
  43148c:	b	4313ec <ferror@plt+0x2eb6c>
  431490:	str	wzr, [x20, #20]
  431494:	mov	w0, #0x1                   	// #1
  431498:	str	w0, [x19, #48]
  43149c:	adrp	x24, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4314a0:	cbnz	w1, 4313d8 <ferror@plt+0x2eb58>
  4314a4:	mov	x0, x20
  4314a8:	ldp	x19, x20, [sp, #16]
  4314ac:	ldp	x21, x22, [sp, #32]
  4314b0:	ldp	x23, x24, [sp, #48]
  4314b4:	ldr	x25, [sp, #64]
  4314b8:	ldp	x29, x30, [sp], #80
  4314bc:	ret
  4314c0:	ldur	w0, [x20, #-4]
  4314c4:	str	w0, [x20, #20]
  4314c8:	mov	x0, x20
  4314cc:	ldp	x19, x20, [sp, #16]
  4314d0:	ldp	x21, x22, [sp, #32]
  4314d4:	ldp	x23, x24, [sp, #48]
  4314d8:	ldr	x25, [sp, #64]
  4314dc:	ldp	x29, x30, [sp], #80
  4314e0:	ret
  4314e4:	mov	w1, #0x2e                  	// #46
  4314e8:	bl	402550 <__overflow@plt>
  4314ec:	b	4313cc <ferror@plt+0x2eb4c>
  4314f0:	ldur	w1, [x20, #-4]
  4314f4:	mov	x0, x19
  4314f8:	bl	430d68 <ferror@plt+0x2e4e8>
  4314fc:	cbz	x25, 431524 <ferror@plt+0x2eca4>
  431500:	and	w22, w22, #0xff
  431504:	mov	w24, #0x1                   	// #1
  431508:	b	431334 <ferror@plt+0x2eab4>
  43150c:	ldur	w1, [x20, #-4]
  431510:	mov	x0, x19
  431514:	bl	430d68 <ferror@plt+0x2e4e8>
  431518:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43151c:	add	x25, x3, #0x260
  431520:	b	431500 <ferror@plt+0x2ec80>
  431524:	ldr	w2, [x0]
  431528:	ldr	w23, [x0, #24]
  43152c:	ldrb	w1, [x0, #6]
  431530:	ldr	w4, [x0, #16]
  431534:	sub	w23, w23, w2
  431538:	ldrb	w22, [x0, #5]
  43153c:	lsr	w23, w23, w1
  431540:	add	w23, w23, w4
  431544:	ldr	x25, [x0, #8]
  431548:	b	431334 <ferror@plt+0x2eab4>
  43154c:	nop
  431550:	ldr	x0, [x0, #24]
  431554:	cmp	x0, #0x0
  431558:	cset	w0, ne  // ne = any
  43155c:	ret
  431560:	stp	x29, x30, [sp, #-64]!
  431564:	mov	x29, sp
  431568:	stp	x21, x22, [sp, #32]
  43156c:	mov	w21, w3
  431570:	ldr	w3, [x0, #36]
  431574:	stp	x19, x20, [sp, #16]
  431578:	mov	w22, w2
  43157c:	mov	x19, x0
  431580:	stp	x23, x24, [sp, #48]
  431584:	mov	w0, #0x80000000            	// #-2147483648
  431588:	mov	x23, x1
  43158c:	cbz	w3, 4315a0 <ferror@plt+0x2ed20>
  431590:	sub	w3, w3, #0x1
  431594:	ldr	x0, [x19, #24]
  431598:	sbfiz	x3, x3, #5, #32
  43159c:	ldr	w0, [x0, x3]
  4315a0:	sub	w1, w0, w21
  4315a4:	mov	x20, #0x0                   	// #0
  4315a8:	mov	w0, #0x6fffffff            	// #1879048191
  4315ac:	cmp	w1, w0
  4315b0:	b.ls	4315fc <ferror@plt+0x2ed7c>  // b.plast
  4315b4:	mov	x0, x19
  4315b8:	bl	430e28 <ferror@plt+0x2e5a8>
  4315bc:	mov	x20, x0
  4315c0:	ubfiz	x24, x21, #3, #31
  4315c4:	ldr	x2, [x19, #72]
  4315c8:	mov	x1, x24
  4315cc:	str	w21, [x20, #4]
  4315d0:	mov	x0, #0x0                   	// #0
  4315d4:	str	x23, [x20, #8]
  4315d8:	blr	x2
  4315dc:	str	x0, [x20, #16]
  4315e0:	str	w22, [x20, #24]
  4315e4:	mov	x2, x24
  4315e8:	mov	w1, #0x0                   	// #0
  4315ec:	bl	402440 <memset@plt>
  4315f0:	ldr	w0, [x19, #36]
  4315f4:	sub	w0, w0, #0x1
  4315f8:	str	w0, [x19, #40]
  4315fc:	mov	x0, x20
  431600:	ldp	x19, x20, [sp, #16]
  431604:	ldp	x21, x22, [sp, #32]
  431608:	ldp	x23, x24, [sp, #48]
  43160c:	ldp	x29, x30, [sp], #64
  431610:	ret
  431614:	nop
  431618:	ldr	x5, [x0, #16]
  43161c:	lsl	w6, w1, #1
  431620:	lsl	w4, w1, #1
  431624:	add	w4, w4, #0x1
  431628:	str	w2, [x5, x6, lsl #2]
  43162c:	str	w3, [x5, x4, lsl #2]
  431630:	ldr	w0, [x0]
  431634:	add	w0, w1, w0
  431638:	ret
  43163c:	nop
  431640:	stp	x29, x30, [sp, #-96]!
  431644:	mov	w3, #0x18                  	// #24
  431648:	mov	x29, sp
  43164c:	stp	x19, x20, [sp, #16]
  431650:	mov	x19, x0
  431654:	ldr	w0, [x0, #12]
  431658:	stp	x21, x22, [sp, #32]
  43165c:	mov	w22, w1
  431660:	sub	w0, w0, #0x1
  431664:	ldr	x4, [x19]
  431668:	stp	x23, x24, [sp, #48]
  43166c:	smull	x0, w0, w3
  431670:	ldp	w1, w7, [x19, #56]
  431674:	add	x3, x4, x0
  431678:	stp	x25, x26, [sp, #64]
  43167c:	ldr	w9, [x4, x0]
  431680:	ldrb	w8, [x3, #6]
  431684:	ldr	w0, [x3, #16]
  431688:	sub	w6, w7, w9
  43168c:	ldrb	w10, [x3, #7]
  431690:	lsr	w6, w6, w8
  431694:	add	w6, w6, w0
  431698:	subs	w5, w22, w6
  43169c:	b.mi	4316f0 <ferror@plt+0x2ee70>  // b.first
  4316a0:	cmp	w5, #0xa
  4316a4:	b.gt	4316e4 <ferror@plt+0x2ee64>
  4316a8:	sub	w11, w8, w10
  4316ac:	mov	w4, #0x1                   	// #1
  4316b0:	lsl	w4, w4, w11
  4316b4:	cmp	w4, w2
  4316b8:	b.ls	4316f0 <ferror@plt+0x2ee70>  // b.plast
  4316bc:	cmp	w2, #0x50
  4316c0:	ccmp	w11, #0x9, #0x4, ls  // ls = plast
  4316c4:	b.gt	4316f0 <ferror@plt+0x2ee70>
  4316c8:	mov	w4, #0x50000000            	// #1342177280
  4316cc:	cmp	w1, w4
  4316d0:	b.hi	431790 <ferror@plt+0x2ef10>  // b.pmore
  4316d4:	ldr	w20, [x19, #64]
  4316d8:	lsl	w0, w5, w8
  4316dc:	add	w0, w0, w7
  4316e0:	b	43189c <ferror@plt+0x2f01c>
  4316e4:	mul	w4, w5, w8
  4316e8:	cmp	w4, #0x3e8
  4316ec:	b.le	4316a8 <ferror@plt+0x2ee28>
  4316f0:	cmp	w2, #0x1, lsl #12
  4316f4:	mov	w4, #0x60000000            	// #1610612736
  4316f8:	ccmp	w1, w4, #0x2, ls  // ls = plast
  4316fc:	b.hi	4317a8 <ferror@plt+0x2ef28>  // b.pmore
  431700:	mov	w4, #0x50000000            	// #1342177280
  431704:	cmp	w1, w4
  431708:	b.hi	4318f4 <ferror@plt+0x2f074>  // b.pmore
  43170c:	ldr	w11, [x19, #120]
  431710:	and	w24, w11, #0xff
  431714:	cmp	w2, #0x7f
  431718:	mov	w4, #0x7                   	// #7
  43171c:	b.ls	431900 <ferror@plt+0x2f080>  // b.plast
  431720:	mov	w7, #0x1                   	// #1
  431724:	nop
  431728:	add	w4, w4, #0x1
  43172c:	lsl	w20, w7, w4
  431730:	cmp	w20, w2
  431734:	b.ls	431728 <ferror@plt+0x2eea8>  // b.plast
  431738:	add	w26, w11, w4
  43173c:	cmp	w5, #0x0
  431740:	and	w25, w26, #0xff
  431744:	ccmp	w6, w0, #0x0, ge  // ge = tcont
  431748:	b.ne	4317d8 <ferror@plt+0x2ef58>  // b.any
  43174c:	mov	w5, #0x1                   	// #1
  431750:	sub	w2, w1, w9
  431754:	lsl	w8, w5, w8
  431758:	sub	w8, w8, #0x1
  43175c:	and	w2, w8, w2
  431760:	lsr	w2, w2, w10
  431764:	lsr	w4, w2, w4
  431768:	cbnz	w4, 4317d8 <ferror@plt+0x2ef58>
  43176c:	sub	w2, w22, w0
  431770:	mov	w4, #0x20                  	// #32
  431774:	sub	w4, w4, w26
  431778:	sub	w0, w22, w0
  43177c:	lsr	x2, x2, x4
  431780:	cmp	x2, #0x0
  431784:	ccmp	w10, w11, #0x0, eq  // eq = none
  431788:	b.gt	4317d8 <ferror@plt+0x2ef58>
  43178c:	b	43188c <ferror@plt+0x2f00c>
  431790:	cbz	w10, 431908 <ferror@plt+0x2f088>
  431794:	cmp	w2, #0x1, lsl #12
  431798:	mov	w4, #0x60000000            	// #1610612736
  43179c:	ccmp	w1, w4, #0x2, ls  // ls = plast
  4317a0:	b.ls	4318f4 <ferror@plt+0x2f074>  // b.plast
  4317a4:	nop
  4317a8:	mov	w2, #0x6fffffff            	// #1879048191
  4317ac:	cmp	w1, w2
  4317b0:	b.hi	4318d8 <ferror@plt+0x2f058>  // b.pmore
  4317b4:	cmp	w5, #0x0
  4317b8:	mov	w4, #0x0                   	// #0
  4317bc:	ccmp	w6, w0, #0x0, ge  // ge = tcont
  4317c0:	mov	w24, #0x0                   	// #0
  4317c4:	mov	w25, #0x0                   	// #0
  4317c8:	mov	w11, #0x0                   	// #0
  4317cc:	mov	w26, #0x0                   	// #0
  4317d0:	mov	w20, #0x0                   	// #0
  4317d4:	b.eq	43174c <ferror@plt+0x2eecc>  // b.none
  4317d8:	ldr	x23, [x3, #8]
  4317dc:	str	x27, [sp, #80]
  4317e0:	mov	w0, #0x5fffffff            	// #1610612735
  4317e4:	add	w21, w1, #0x1
  4317e8:	ldrb	w27, [x3, #5]
  4317ec:	cmp	w1, w0
  4317f0:	b.hi	431814 <ferror@plt+0x2ef94>  // b.pmore
  4317f4:	ldr	w2, [x19, #120]
  4317f8:	mov	w0, #0x1                   	// #1
  4317fc:	cmp	w2, #0x0
  431800:	lsl	w0, w0, w2
  431804:	add	w21, w0, w1
  431808:	neg	w0, w0
  43180c:	and	w0, w21, w0
  431810:	csel	w21, w0, w21, ne  // ne = any
  431814:	mov	w0, #0x6fffffff            	// #1879048191
  431818:	cmp	w21, w0
  43181c:	csel	w21, w21, wzr, ls  // ls = plast
  431820:	mov	x0, x19
  431824:	mov	w1, w21
  431828:	bl	430e28 <ferror@plt+0x2e5a8>
  43182c:	mov	x3, x0
  431830:	mov	w0, #0x2                   	// #2
  431834:	strb	w0, [x3, #4]
  431838:	cbz	x23, 431850 <ferror@plt+0x2efd0>
  43183c:	ldrb	w1, [x23]
  431840:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  431844:	add	x0, x0, #0x260
  431848:	cmp	w1, #0x0
  43184c:	csel	x23, x0, x23, eq  // eq = none
  431850:	strb	w27, [x3, #5]
  431854:	dup	v0.2s, w21
  431858:	ldr	x27, [sp, #80]
  43185c:	str	w22, [x3, #16]
  431860:	str	x23, [x3, #8]
  431864:	ldr	w0, [x19, #12]
  431868:	sub	w0, w0, #0x1
  43186c:	str	w0, [x19, #16]
  431870:	strh	wzr, [x3, #6]
  431874:	str	wzr, [x19, #64]
  431878:	str	d0, [x19, #56]
  43187c:	ldr	w0, [x3, #16]
  431880:	ldp	w1, w9, [x3, #-4]
  431884:	sub	w0, w22, w0
  431888:	str	w1, [x3, #20]
  43188c:	lsl	w0, w0, w26
  431890:	add	w0, w0, w9
  431894:	strb	w25, [x3, #6]
  431898:	strb	w24, [x3, #7]
  43189c:	mov	w1, #0x6fffffff            	// #1879048191
  4318a0:	cmp	w0, w1
  4318a4:	b.hi	4318d8 <ferror@plt+0x2f058>  // b.pmore
  4318a8:	ldr	w1, [x19, #56]
  4318ac:	str	w0, [x19, #60]
  4318b0:	cmp	w1, w0
  4318b4:	b.cs	4318bc <ferror@plt+0x2f03c>  // b.hs, b.nlast
  4318b8:	str	w0, [x19, #56]
  4318bc:	str	w20, [x19, #64]
  4318c0:	ldp	x19, x20, [sp, #16]
  4318c4:	ldp	x21, x22, [sp, #32]
  4318c8:	ldp	x23, x24, [sp, #48]
  4318cc:	ldp	x25, x26, [sp, #64]
  4318d0:	ldp	x29, x30, [sp], #96
  4318d4:	ret
  4318d8:	mov	w0, #0x0                   	// #0
  4318dc:	ldp	x19, x20, [sp, #16]
  4318e0:	ldp	x21, x22, [sp, #32]
  4318e4:	ldp	x23, x24, [sp, #48]
  4318e8:	ldp	x25, x26, [sp, #64]
  4318ec:	ldp	x29, x30, [sp], #96
  4318f0:	ret
  4318f4:	mov	w24, #0x0                   	// #0
  4318f8:	mov	w11, #0x0                   	// #0
  4318fc:	b	431714 <ferror@plt+0x2ee94>
  431900:	mov	w20, #0x80                  	// #128
  431904:	b	431738 <ferror@plt+0x2eeb8>
  431908:	mov	w2, #0x60000000            	// #1610612736
  43190c:	ldr	w20, [x19, #64]
  431910:	cmp	w1, w2
  431914:	b.ls	4316d8 <ferror@plt+0x2ee58>  // b.plast
  431918:	cmp	w20, #0x0
  43191c:	mov	w2, #0x6fffffff            	// #1879048191
  431920:	ccmp	w1, w2, #0x2, eq  // eq = none
  431924:	b.hi	4317a8 <ferror@plt+0x2ef28>  // b.pmore
  431928:	mov	w20, #0x0                   	// #0
  43192c:	b	4316d8 <ferror@plt+0x2ee58>
  431930:	stp	x29, x30, [sp, #-48]!
  431934:	mov	x29, sp
  431938:	stp	x19, x20, [sp, #16]
  43193c:	mov	w20, w1
  431940:	mov	x19, x0
  431944:	ldp	w3, w1, [x0, #60]
  431948:	cmp	w1, w20
  43194c:	b.ls	431990 <ferror@plt+0x2f110>  // b.plast
  431950:	ldr	w0, [x0, #12]
  431954:	mov	w2, #0x18                  	// #24
  431958:	ldr	x1, [x19]
  43195c:	sub	w0, w0, #0x1
  431960:	smaddl	x0, w0, w2, x1
  431964:	ldrb	w1, [x0, #7]
  431968:	ldr	w0, [x19, #56]
  43196c:	lsl	w20, w20, w1
  431970:	add	w3, w3, w20
  431974:	cmp	w0, w3
  431978:	b.hi	431980 <ferror@plt+0x2f100>  // b.pmore
  43197c:	str	w3, [x19, #56]
  431980:	mov	w0, w3
  431984:	ldp	x19, x20, [sp, #16]
  431988:	ldp	x29, x30, [sp], #48
  43198c:	ret
  431990:	cmp	w20, #0x1, lsl #12
  431994:	mov	w1, #0x60000000            	// #1610612736
  431998:	ccmp	w3, w1, #0x2, ls  // ls = plast
  43199c:	b.hi	431980 <ferror@plt+0x2f100>  // b.pmore
  4319a0:	ldr	w1, [x0, #12]
  4319a4:	add	w2, w20, #0x32
  4319a8:	ldr	x5, [x0]
  4319ac:	sub	w1, w1, #0x1
  4319b0:	str	x21, [sp, #32]
  4319b4:	mov	w21, #0x18                  	// #24
  4319b8:	smull	x1, w1, w21
  4319bc:	add	x4, x5, x1
  4319c0:	ldr	w1, [x5, x1]
  4319c4:	ldrb	w5, [x4, #6]
  4319c8:	sub	w3, w3, w1
  4319cc:	ldr	w1, [x4, #16]
  4319d0:	lsr	w3, w3, w5
  4319d4:	add	w1, w3, w1
  4319d8:	bl	431640 <ferror@plt+0x2edc0>
  4319dc:	mov	w3, w0
  4319e0:	ldr	w1, [x19, #12]
  4319e4:	ldr	x2, [x19]
  4319e8:	sub	w0, w1, #0x1
  4319ec:	smaddl	x0, w0, w21, x2
  4319f0:	ldr	x21, [sp, #32]
  4319f4:	ldrb	w1, [x0, #6]
  4319f8:	cbnz	w1, 431964 <ferror@plt+0x2f0e4>
  4319fc:	b	431980 <ferror@plt+0x2f100>
  431a00:	mov	x4, x0
  431a04:	ldr	w0, [x1, #16]
  431a08:	ldrb	w5, [x1, #6]
  431a0c:	mov	w6, #0x60000000            	// #1610612736
  431a10:	sub	w2, w2, w0
  431a14:	ldr	w0, [x1]
  431a18:	lsl	w2, w2, w5
  431a1c:	add	w0, w2, w0
  431a20:	cmp	w0, w6
  431a24:	b.hi	431a44 <ferror@plt+0x2f1c4>  // b.pmore
  431a28:	mov	w2, #0x1                   	// #1
  431a2c:	ldrb	w6, [x1, #7]
  431a30:	lsl	w1, w2, w5
  431a34:	sub	w1, w1, #0x1
  431a38:	and	w1, w1, w3
  431a3c:	lsl	w1, w1, w6
  431a40:	add	w0, w0, w1
  431a44:	ldr	w2, [x4, #36]
  431a48:	mov	w1, #0x80000000            	// #-2147483648
  431a4c:	cbz	w2, 431a60 <ferror@plt+0x2f1e0>
  431a50:	sub	w2, w2, #0x1
  431a54:	ldr	x1, [x4, #24]
  431a58:	sbfiz	x2, x2, #5, #32
  431a5c:	ldr	w1, [x1, x2]
  431a60:	cmp	w0, w1
  431a64:	ldr	w2, [x4, #56]
  431a68:	sub	w1, w1, #0x1
  431a6c:	csel	w0, w1, w0, cs  // cs = hs, nlast
  431a70:	cmp	w2, w0
  431a74:	b.cs	431a7c <ferror@plt+0x2f1fc>  // b.hs, b.nlast
  431a78:	str	w0, [x4, #56]
  431a7c:	ret
  431a80:	tbnz	w1, #31, 431ab0 <ferror@plt+0x2f230>
  431a84:	mov	w2, #0x6fffffff            	// #1879048191
  431a88:	cmp	w1, w2
  431a8c:	b.ls	431aac <ferror@plt+0x2f22c>  // b.plast
  431a90:	mov	x2, #0x0                   	// #0
  431a94:	cbz	x0, 431b54 <ferror@plt+0x2f2d4>
  431a98:	mov	w5, w1
  431a9c:	b	431ae8 <ferror@plt+0x2f268>
  431aa0:	mov	w2, #0x6fffffff            	// #1879048191
  431aa4:	cmp	w1, w2
  431aa8:	b.hi	431a98 <ferror@plt+0x2f218>  // b.pmore
  431aac:	b	430d68 <ferror@plt+0x2e4e8>
  431ab0:	and	w1, w1, #0x7fffffff
  431ab4:	mov	w5, #0x18                  	// #24
  431ab8:	ldr	x4, [x0, #104]
  431abc:	umull	x1, w1, w5
  431ac0:	ldr	w1, [x4, x1]
  431ac4:	tbz	w1, #31, 431aa0 <ferror@plt+0x2f220>
  431ac8:	and	w3, w1, #0x7fffffff
  431acc:	mov	w2, #0x90000000            	// #-1879048192
  431ad0:	mov	w6, #0xfffffff             	// #268435455
  431ad4:	umull	x3, w3, w5
  431ad8:	ldr	w5, [x4, x3]
  431adc:	add	w2, w5, w2
  431ae0:	cmp	w2, w6
  431ae4:	b.hi	431aac <ferror@plt+0x2f22c>  // b.pmore
  431ae8:	ldp	w3, w4, [x0, #36]
  431aec:	ldr	x6, [x0, #24]
  431af0:	sbfiz	x1, x4, #5, #32
  431af4:	add	x2, x6, x1
  431af8:	ldr	w1, [x6, x1]
  431afc:	cmp	w1, w5
  431b00:	b.hi	431b3c <ferror@plt+0x2f2bc>  // b.pmore
  431b04:	cbz	w4, 431b54 <ferror@plt+0x2f2d4>
  431b08:	ldur	w1, [x2, #-32]
  431b0c:	cmp	w1, w5
  431b10:	b.hi	431b54 <ferror@plt+0x2f2d4>  // b.pmore
  431b14:	sub	w3, w4, #0x1
  431b18:	mov	w4, #0x0                   	// #0
  431b1c:	b	431b3c <ferror@plt+0x2f2bc>
  431b20:	lsr	w2, w1, #1
  431b24:	lsr	w1, w1, #1
  431b28:	lsl	x2, x2, #5
  431b2c:	ldr	w2, [x6, x2]
  431b30:	cmp	w2, w5
  431b34:	b.hi	431b5c <ferror@plt+0x2f2dc>  // b.pmore
  431b38:	mov	w3, w1
  431b3c:	add	w1, w3, w4
  431b40:	cmp	w3, w4
  431b44:	b.hi	431b20 <ferror@plt+0x2f2a0>  // b.pmore
  431b48:	sbfiz	x2, x3, #5, #32
  431b4c:	str	w3, [x0, #40]
  431b50:	add	x2, x6, x2
  431b54:	mov	x0, x2
  431b58:	ret
  431b5c:	add	w4, w1, #0x1
  431b60:	b	431b3c <ferror@plt+0x2f2bc>
  431b64:	nop
  431b68:	stp	x29, x30, [sp, #-80]!
  431b6c:	mov	w9, w1
  431b70:	mov	x12, x2
  431b74:	mov	x29, sp
  431b78:	stp	x19, x20, [sp, #16]
  431b7c:	mov	x10, x3
  431b80:	mov	x19, x0
  431b84:	tbz	w1, #31, 431b9c <ferror@plt+0x2f31c>
  431b88:	and	w9, w1, #0x7fffffff
  431b8c:	mov	w1, #0x18                  	// #24
  431b90:	ldr	x0, [x0, #104]
  431b94:	umull	x9, w9, w1
  431b98:	ldr	w9, [x0, x9]
  431b9c:	cmp	w9, #0x0
  431ba0:	mov	w0, #0x0                   	// #0
  431ba4:	ccmp	x10, #0x0, #0x0, eq  // eq = none
  431ba8:	b.eq	431bfc <ferror@plt+0x2f37c>  // b.none
  431bac:	lsr	x11, x12, #32
  431bb0:	mov	w0, w11
  431bb4:	cbz	x10, 431c08 <ferror@plt+0x2f388>
  431bb8:	ldr	x0, [x19, #88]
  431bbc:	add	x1, sp, #0x38
  431bc0:	mov	w2, #0x1                   	// #1
  431bc4:	stp	w9, w12, [sp, #56]
  431bc8:	str	w11, [sp, #64]
  431bcc:	str	x10, [sp, #72]
  431bd0:	bl	45be80 <ferror@plt+0x59600>
  431bd4:	ldr	x1, [x0]
  431bd8:	mov	x20, x0
  431bdc:	cbz	x1, 431c90 <ferror@plt+0x2f410>
  431be0:	ldr	x0, [x19, #104]
  431be4:	sub	x0, x1, x0
  431be8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  431bec:	asr	x0, x0, #3
  431bf0:	movk	x1, #0xaaab
  431bf4:	mul	x0, x0, x1
  431bf8:	orr	w0, w0, #0x80000000
  431bfc:	ldp	x19, x20, [sp, #16]
  431c00:	ldp	x29, x30, [sp], #80
  431c04:	ret
  431c08:	cmp	w9, w12
  431c0c:	b.ne	431d38 <ferror@plt+0x2f4b8>  // b.any
  431c10:	cmp	w11, w9
  431c14:	b.cc	431d38 <ferror@plt+0x2f4b8>  // b.lo, b.ul, b.last
  431c18:	sub	w2, w9, #0x2
  431c1c:	mov	w1, #0xfffd                	// #65533
  431c20:	movk	w1, #0x4fff, lsl #16
  431c24:	cmp	w2, w1
  431c28:	b.hi	431d30 <ferror@plt+0x2f4b0>  // b.pmore
  431c2c:	ldr	w0, [x19, #36]
  431c30:	mov	w1, #0x80000000            	// #-2147483648
  431c34:	cbz	w0, 431c48 <ferror@plt+0x2f3c8>
  431c38:	sub	w0, w0, #0x1
  431c3c:	ldr	x1, [x19, #24]
  431c40:	sbfiz	x0, x0, #5, #32
  431c44:	ldr	w1, [x1, x0]
  431c48:	cmp	w12, w1
  431c4c:	b.cs	431c80 <ferror@plt+0x2f400>  // b.hs, b.nlast
  431c50:	cmp	w11, w1
  431c54:	b.cs	431c80 <ferror@plt+0x2f400>  // b.hs, b.nlast
  431c58:	mov	w1, w12
  431c5c:	mov	x0, x19
  431c60:	bl	431a80 <ferror@plt+0x2f200>
  431c64:	ldrb	w0, [x0, #7]
  431c68:	sub	w4, w11, w12
  431c6c:	mov	w1, #0x1                   	// #1
  431c70:	lsr	w4, w4, w0
  431c74:	lsl	w1, w1, w0
  431c78:	cmp	w1, w4
  431c7c:	b.hi	431d54 <ferror@plt+0x2f4d4>  // b.pmore
  431c80:	cmp	w11, w12
  431c84:	b.ne	431d38 <ferror@plt+0x2f4b8>  // b.any
  431c88:	mov	w0, w11
  431c8c:	b	431bfc <ferror@plt+0x2f37c>
  431c90:	ldp	w0, w1, [x19, #96]
  431c94:	str	x21, [sp, #32]
  431c98:	ldr	x21, [x19, #104]
  431c9c:	cmp	w0, w1
  431ca0:	b.cc	431cf4 <ferror@plt+0x2f474>  // b.lo, b.ul, b.last
  431ca4:	ldr	x2, [x19, #72]
  431ca8:	adrp	x0, 45c000 <ferror@plt+0x59780>
  431cac:	add	x0, x0, #0xaa0
  431cb0:	cmp	x2, #0x0
  431cb4:	csel	x2, x0, x2, eq  // eq = none
  431cb8:	cbz	w1, 431d48 <ferror@plt+0x2f4c8>
  431cbc:	lsl	w0, w1, #1
  431cc0:	mov	w1, #0x18                  	// #24
  431cc4:	umull	x1, w0, w1
  431cc8:	str	w0, [x19, #100]
  431ccc:	mov	x0, x21
  431cd0:	blr	x2
  431cd4:	sub	x21, x0, x21
  431cd8:	ldr	w1, [x19, #100]
  431cdc:	str	x21, [sp, #48]
  431ce0:	str	x0, [x19, #104]
  431ce4:	cmp	w1, #0x80
  431ce8:	b.hi	431d68 <ferror@plt+0x2f4e8>  // b.pmore
  431cec:	mov	x21, x0
  431cf0:	ldr	w0, [x19, #96]
  431cf4:	mov	w2, #0x18                  	// #24
  431cf8:	add	w1, w0, #0x1
  431cfc:	umull	x2, w0, w2
  431d00:	add	x21, x21, x2
  431d04:	str	x21, [x20]
  431d08:	ldr	x21, [sp, #32]
  431d0c:	str	w1, [x19, #96]
  431d10:	ldr	x0, [x19, #104]
  431d14:	ldp	x4, x5, [sp, #56]
  431d18:	add	x2, x0, x2
  431d1c:	stp	x4, x5, [x2]
  431d20:	ldr	x1, [sp, #72]
  431d24:	str	x1, [x2, #16]
  431d28:	ldr	x1, [x20]
  431d2c:	b	431be4 <ferror@plt+0x2f364>
  431d30:	cmp	w11, w9
  431d34:	b.eq	431bfc <ferror@plt+0x2f37c>  // b.none
  431d38:	ldr	w0, [x19, #128]
  431d3c:	add	w0, w0, #0x1
  431d40:	str	w0, [x19, #128]
  431d44:	b	431bb8 <ferror@plt+0x2f338>
  431d48:	mov	x1, #0xc00                 	// #3072
  431d4c:	mov	w0, #0x80                  	// #128
  431d50:	b	431cc8 <ferror@plt+0x2f448>
  431d54:	ldr	w1, [x19, #124]
  431d58:	orr	w0, w4, w12
  431d5c:	add	w1, w1, #0x1
  431d60:	str	w1, [x19, #124]
  431d64:	b	431bfc <ferror@plt+0x2f37c>
  431d68:	ldr	x0, [x19, #88]
  431d6c:	add	x2, sp, #0x30
  431d70:	adrp	x1, 430000 <ferror@plt+0x2d780>
  431d74:	add	x1, x1, #0xd48
  431d78:	bl	45c050 <ferror@plt+0x597d0>
  431d7c:	ldr	x0, [x19, #104]
  431d80:	b	431cec <ferror@plt+0x2f46c>
  431d84:	nop
  431d88:	tbnz	w1, #31, 431dc0 <ferror@plt+0x2f540>
  431d8c:	cmp	w1, #0x1
  431d90:	b.ls	431db4 <ferror@plt+0x2f534>  // b.plast
  431d94:	ldr	w2, [x0, #36]
  431d98:	cbz	w2, 431ddc <ferror@plt+0x2f55c>
  431d9c:	sub	w2, w2, #0x1
  431da0:	ldr	x3, [x0, #24]
  431da4:	sbfiz	x2, x2, #5, #32
  431da8:	ldr	w2, [x3, x2]
  431dac:	cmp	w1, w2
  431db0:	b.cc	431ddc <ferror@plt+0x2f55c>  // b.lo, b.ul, b.last
  431db4:	dup	v0.2s, w1
  431db8:	mov	x0, v0.d[0]
  431dbc:	ret
  431dc0:	ldr	x0, [x0, #104]
  431dc4:	and	w1, w1, #0x7fffffff
  431dc8:	mov	w2, #0x18                  	// #24
  431dcc:	umaddl	x1, w1, w2, x0
  431dd0:	ldur	d0, [x1, #4]
  431dd4:	fmov	x0, d0
  431dd8:	ret
  431ddc:	mov	w2, #0x50000000            	// #1342177280
  431de0:	cmp	w1, w2
  431de4:	b.hi	431db4 <ferror@plt+0x2f534>  // b.pmore
  431de8:	stp	x29, x30, [sp, #-32]!
  431dec:	mov	x29, sp
  431df0:	str	w1, [sp, #28]
  431df4:	bl	431a80 <ferror@plt+0x2f200>
  431df8:	mov	x3, x0
  431dfc:	ldr	w1, [sp, #28]
  431e00:	mov	w2, #0x1                   	// #1
  431e04:	mov	x0, #0x0                   	// #0
  431e08:	ldrb	w4, [x3, #7]
  431e0c:	ldp	x29, x30, [sp], #32
  431e10:	lsl	w2, w2, w4
  431e14:	sub	w2, w2, #0x1
  431e18:	and	w3, w2, w1
  431e1c:	bic	w1, w1, w2
  431e20:	lsl	w3, w3, w4
  431e24:	bfxil	x0, x1, #0, #32
  431e28:	add	w1, w3, w1
  431e2c:	bfi	x0, x1, #32, #32
  431e30:	ret
  431e34:	nop
  431e38:	mov	w9, w1
  431e3c:	tbz	w1, #31, 431e54 <ferror@plt+0x2f5d4>
  431e40:	and	w9, w1, #0x7fffffff
  431e44:	mov	w2, #0x18                  	// #24
  431e48:	ldr	x1, [x0, #104]
  431e4c:	umull	x9, w9, w2
  431e50:	ldr	w9, [x1, x9]
  431e54:	ldr	w1, [x0, #36]
  431e58:	mov	w2, #0x80000000            	// #-2147483648
  431e5c:	cbz	w1, 431e70 <ferror@plt+0x2f5f0>
  431e60:	sub	w1, w1, #0x1
  431e64:	ldr	x2, [x0, #24]
  431e68:	sbfiz	x1, x1, #5, #32
  431e6c:	ldr	w2, [x2, x1]
  431e70:	cmp	w9, #0x1
  431e74:	ccmp	w9, w2, #0x2, hi  // hi = pmore
  431e78:	b.cc	431e84 <ferror@plt+0x2f604>  // b.lo, b.ul, b.last
  431e7c:	mov	w0, w9
  431e80:	ret
  431e84:	stp	x29, x30, [sp, #-16]!
  431e88:	mov	w1, w9
  431e8c:	mov	x29, sp
  431e90:	bl	431a80 <ferror@plt+0x2f200>
  431e94:	ldrb	w0, [x0, #7]
  431e98:	mov	w1, #0xffffffff            	// #-1
  431e9c:	ldp	x29, x30, [sp], #16
  431ea0:	lsl	w1, w1, w0
  431ea4:	and	w9, w9, w1
  431ea8:	mov	w0, w9
  431eac:	ret
  431eb0:	mov	x13, x0
  431eb4:	mov	w11, w2
  431eb8:	tbnz	w1, #31, 431eec <ferror@plt+0x2f66c>
  431ebc:	mov	w0, #0x6fffffff            	// #1879048191
  431ec0:	cmp	w1, w0
  431ec4:	b.hi	431ee4 <ferror@plt+0x2f664>  // b.pmore
  431ec8:	mov	w0, w1
  431ecc:	cmp	w11, #0x0
  431ed0:	mov	w10, w1
  431ed4:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  431ed8:	b.hi	4320ac <ferror@plt+0x2f82c>  // b.pmore
  431edc:	mov	w0, w10
  431ee0:	ret
  431ee4:	mov	w10, w1
  431ee8:	b	431edc <ferror@plt+0x2f65c>
  431eec:	and	w1, w1, #0x7fffffff
  431ef0:	mov	w3, #0x18                  	// #24
  431ef4:	ldr	x2, [x0, #104]
  431ef8:	umull	x1, w1, w3
  431efc:	ldr	w1, [x2, x1]
  431f00:	tbz	w1, #31, 431ebc <ferror@plt+0x2f63c>
  431f04:	and	w0, w1, #0x7fffffff
  431f08:	mov	w4, #0x6fffffff            	// #1879048191
  431f0c:	umull	x0, w0, w3
  431f10:	ldr	w0, [x2, x0]
  431f14:	cmp	w0, w4
  431f18:	b.ls	431ecc <ferror@plt+0x2f64c>  // b.plast
  431f1c:	tbz	w0, #31, 431ee4 <ferror@plt+0x2f664>
  431f20:	mov	w10, w1
  431f24:	cbz	w11, 431edc <ferror@plt+0x2f65c>
  431f28:	stp	x29, x30, [sp, #-16]!
  431f2c:	mov	w10, w1
  431f30:	mov	w12, #0x6fffffff            	// #1879048191
  431f34:	mov	x29, sp
  431f38:	mov	w14, #0x18                  	// #24
  431f3c:	b	431f64 <ferror@plt+0x2f6e4>
  431f40:	tbz	w10, #31, 431f54 <ferror@plt+0x2f6d4>
  431f44:	and	w10, w10, #0x7fffffff
  431f48:	ldr	x0, [x13, #104]
  431f4c:	umull	x10, w10, w14
  431f50:	ldr	w10, [x0, x10]
  431f54:	sub	w10, w10, w1
  431f58:	ldr	x1, [x9, #16]
  431f5c:	lsl	w10, w10, #1
  431f60:	ldr	w10, [x1, x10, lsl #2]
  431f64:	mov	w1, w10
  431f68:	mov	x0, x13
  431f6c:	bl	431a80 <ferror@plt+0x2f200>
  431f70:	mov	x9, x0
  431f74:	cbz	x0, 4320c0 <ferror@plt+0x2f840>
  431f78:	ldr	w1, [x0]
  431f7c:	cmp	w1, w12
  431f80:	b.hi	431f40 <ferror@plt+0x2f6c0>  // b.pmore
  431f84:	ldrb	w5, [x0, #7]
  431f88:	mov	w12, w5
  431f8c:	lsl	w2, w11, w5
  431f90:	add	w2, w2, w10
  431f94:	cmp	w2, w1
  431f98:	b.ls	4320a0 <ferror@plt+0x2f820>  // b.plast
  431f9c:	ldrb	w7, [x0, #6]
  431fa0:	sub	w8, w10, w1
  431fa4:	ldr	w6, [x0, #16]
  431fa8:	mov	w3, #0x18                  	// #24
  431fac:	ldr	w0, [x13, #12]
  431fb0:	ldr	x2, [x13]
  431fb4:	sub	w0, w0, #0x1
  431fb8:	smaddl	x0, w0, w3, x2
  431fbc:	lsr	w2, w8, w7
  431fc0:	add	w2, w2, w6
  431fc4:	b	431ff4 <ferror@plt+0x2f774>
  431fc8:	ldr	w4, [x9, #24]
  431fcc:	lsl	w3, w11, w5
  431fd0:	add	w3, w3, w10
  431fd4:	cmp	w3, w4
  431fd8:	b.cc	431ffc <ferror@plt+0x2f77c>  // b.lo, b.ul, b.last
  431fdc:	ldr	w6, [x9, #40]
  431fe0:	add	x9, x9, #0x18
  431fe4:	cmp	w6, w2
  431fe8:	b.hi	4320a0 <ferror@plt+0x2f820>  // b.pmore
  431fec:	ldrb	w5, [x9, #7]
  431ff0:	mov	w1, w4
  431ff4:	cmp	x0, x9
  431ff8:	b.ne	431fc8 <ferror@plt+0x2f748>  // b.any
  431ffc:	mov	w3, #0x1                   	// #1
  432000:	ldrb	w14, [x9, #6]
  432004:	lsl	w0, w3, w7
  432008:	sub	w0, w0, #0x1
  43200c:	and	w0, w0, w8
  432010:	sub	w4, w14, w5
  432014:	lsr	w0, w0, w12
  432018:	add	w11, w0, w11
  43201c:	lsl	w0, w3, w4
  432020:	cmp	w0, w11
  432024:	b.ls	4320a0 <ferror@plt+0x2f820>  // b.plast
  432028:	sub	w12, w2, w6
  43202c:	mov	w0, #0x60000000            	// #1610612736
  432030:	lsl	w12, w12, w14
  432034:	add	w12, w12, w1
  432038:	cmp	w12, w0
  43203c:	b.hi	432054 <ferror@plt+0x2f7d4>  // b.pmore
  432040:	lsl	w0, w3, w14
  432044:	sub	w0, w0, #0x1
  432048:	and	w11, w0, w11
  43204c:	lsl	w5, w11, w5
  432050:	add	w12, w12, w5
  432054:	ldr	w1, [x13, #36]
  432058:	mov	w0, #0x80000000            	// #-2147483648
  43205c:	cbz	w1, 432070 <ferror@plt+0x2f7f0>
  432060:	sub	w0, w1, #0x1
  432064:	ldr	x1, [x13, #24]
  432068:	sbfiz	x0, x0, #5, #32
  43206c:	ldr	w0, [x1, x0]
  432070:	cmp	w12, w0
  432074:	ldr	w1, [x13, #56]
  432078:	sub	w0, w0, #0x1
  43207c:	csel	w12, w0, w12, cs  // cs = hs, nlast
  432080:	cmp	w1, w12
  432084:	b.cs	43208c <ferror@plt+0x2f80c>  // b.hs, b.nlast
  432088:	str	w12, [x13, #56]
  43208c:	mov	x0, x13
  432090:	mov	w1, w12
  432094:	bl	431a80 <ferror@plt+0x2f200>
  432098:	cmp	x9, x0
  43209c:	csel	w10, w10, w12, ne  // ne = any
  4320a0:	mov	w0, w10
  4320a4:	ldp	x29, x30, [sp], #16
  4320a8:	ret
  4320ac:	cmp	w0, #0x1
  4320b0:	b.hi	431f28 <ferror@plt+0x2f6a8>  // b.pmore
  4320b4:	mov	x0, #0x0                   	// #0
  4320b8:	ldr	w0, [x0]
  4320bc:	brk	#0x3e8
  4320c0:	mov	x0, #0x0                   	// #0
  4320c4:	ldr	w0, [x0]
  4320c8:	brk	#0x3e8
  4320cc:	nop
  4320d0:	cbz	x0, 4320e8 <ferror@plt+0x2f868>
  4320d4:	ldr	w1, [x0]
  4320d8:	mov	w0, #0x6fffffff            	// #1879048191
  4320dc:	cmp	w1, w0
  4320e0:	cset	w0, hi  // hi = pmore
  4320e4:	ret
  4320e8:	mov	w0, #0x0                   	// #0
  4320ec:	ret
  4320f0:	tbz	w2, #31, 432108 <ferror@plt+0x2f888>
  4320f4:	and	w2, w2, #0x7fffffff
  4320f8:	mov	w3, #0x18                  	// #24
  4320fc:	ldr	x0, [x0, #104]
  432100:	umull	x2, w2, w3
  432104:	ldr	w2, [x0, x2]
  432108:	ldr	w3, [x1]
  43210c:	ldr	x0, [x1, #16]
  432110:	sub	w2, w2, w3
  432114:	lsl	w2, w2, #1
  432118:	ldr	w0, [x0, x2, lsl #2]
  43211c:	ret
  432120:	mov	x13, x0
  432124:	mov	w9, w1
  432128:	tbnz	w1, #31, 43219c <ferror@plt+0x2f91c>
  43212c:	cmp	w1, #0x1
  432130:	b.ls	432194 <ferror@plt+0x2f914>  // b.plast
  432134:	mov	w10, #0x6fffffff            	// #1879048191
  432138:	mov	w14, #0x18                  	// #24
  43213c:	mov	w12, #0x90000000            	// #-1879048192
  432140:	mov	w11, #0xfffffff             	// #268435455
  432144:	tbnz	w9, #31, 432340 <ferror@plt+0x2fac0>
  432148:	cmp	w9, w10
  43214c:	b.hi	4322b4 <ferror@plt+0x2fa34>  // b.pmore
  432150:	mov	w1, w9
  432154:	stp	x29, x30, [sp, #-16]!
  432158:	mov	x29, sp
  43215c:	nop
  432160:	mov	x0, x13
  432164:	bl	430d68 <ferror@plt+0x2e4e8>
  432168:	cbz	x0, 4323ac <ferror@plt+0x2fb2c>
  43216c:	ldr	w1, [x0]
  432170:	cmp	w1, w10
  432174:	b.hi	4321dc <ferror@plt+0x2f95c>  // b.pmore
  432178:	ldrb	w3, [x0, #6]
  43217c:	sub	w1, w9, w1
  432180:	ldr	w2, [x0, #16]
  432184:	ldp	x29, x30, [sp], #16
  432188:	lsr	w0, w1, w3
  43218c:	add	w0, w0, w2
  432190:	ret
  432194:	mov	w0, #0x0                   	// #0
  432198:	ret
  43219c:	and	w9, w1, #0x7fffffff
  4321a0:	mov	w2, #0x18                  	// #24
  4321a4:	ldr	x0, [x0, #104]
  4321a8:	umull	x9, w9, w2
  4321ac:	ldr	w9, [x0, x9]
  4321b0:	cmp	w9, #0x1
  4321b4:	b.ls	432194 <ferror@plt+0x2f914>  // b.plast
  4321b8:	tbz	w9, #31, 432134 <ferror@plt+0x2f8b4>
  4321bc:	and	w9, w9, #0x7fffffff
  4321c0:	mov	w10, #0x6fffffff            	// #1879048191
  4321c4:	mov	w14, #0x18                  	// #24
  4321c8:	mov	w12, #0x90000000            	// #-1879048192
  4321cc:	mov	w11, #0xfffffff             	// #268435455
  4321d0:	umull	x2, w9, w2
  4321d4:	ldr	w9, [x0, x2]
  4321d8:	b	432144 <ferror@plt+0x2f8c4>
  4321dc:	ldr	w9, [x0, #24]
  4321e0:	tbnz	w9, #31, 432264 <ferror@plt+0x2f9e4>
  4321e4:	cmp	w9, w10
  4321e8:	b.ls	432294 <ferror@plt+0x2fa14>  // b.plast
  4321ec:	cbz	x13, 4323ac <ferror@plt+0x2fb2c>
  4321f0:	mov	w5, w9
  4321f4:	ldp	w3, w4, [x13, #36]
  4321f8:	ldr	x6, [x13, #24]
  4321fc:	sbfiz	x1, x4, #5, #32
  432200:	add	x0, x6, x1
  432204:	ldr	w1, [x6, x1]
  432208:	cmp	w1, w5
  43220c:	b.hi	43224c <ferror@plt+0x2f9cc>  // b.pmore
  432210:	cbz	w4, 432170 <ferror@plt+0x2f8f0>
  432214:	ldur	w2, [x0, #-32]
  432218:	cmp	w2, w5
  43221c:	b.hi	432170 <ferror@plt+0x2f8f0>  // b.pmore
  432220:	sub	w3, w4, #0x1
  432224:	mov	w4, #0x0                   	// #0
  432228:	b	43224c <ferror@plt+0x2f9cc>
  43222c:	add	w1, w3, w4
  432230:	lsr	w2, w1, #1
  432234:	lsr	w1, w1, #1
  432238:	lsl	x2, x2, #5
  43223c:	ldr	w0, [x6, x2]
  432240:	cmp	w0, w5
  432244:	b.hi	43229c <ferror@plt+0x2fa1c>  // b.pmore
  432248:	mov	w3, w1
  43224c:	cmp	w3, w4
  432250:	b.hi	43222c <ferror@plt+0x2f9ac>  // b.pmore
  432254:	sbfiz	x1, x3, #5, #32
  432258:	str	w3, [x13, #40]
  43225c:	add	x0, x6, x1
  432260:	b	432168 <ferror@plt+0x2f8e8>
  432264:	and	w0, w9, #0x7fffffff
  432268:	ldr	x2, [x13, #104]
  43226c:	umull	x0, w0, w14
  432270:	ldr	w1, [x2, x0]
  432274:	tbz	w1, #31, 4322a4 <ferror@plt+0x2fa24>
  432278:	and	w0, w1, #0x7fffffff
  43227c:	umull	x0, w0, w14
  432280:	ldr	w5, [x2, x0]
  432284:	add	w0, w5, w12
  432288:	cmp	w0, w11
  43228c:	b.ls	4321f4 <ferror@plt+0x2f974>  // b.plast
  432290:	b	432160 <ferror@plt+0x2f8e0>
  432294:	mov	w1, w9
  432298:	b	432160 <ferror@plt+0x2f8e0>
  43229c:	add	w4, w1, #0x1
  4322a0:	b	43224c <ferror@plt+0x2f9cc>
  4322a4:	cmp	w1, w10
  4322a8:	b.ls	432160 <ferror@plt+0x2f8e0>  // b.plast
  4322ac:	mov	w5, w1
  4322b0:	b	4321f4 <ferror@plt+0x2f974>
  4322b4:	cbz	x13, 4323a0 <ferror@plt+0x2fb20>
  4322b8:	mov	w5, w9
  4322bc:	ldp	w3, w4, [x13, #36]
  4322c0:	ldr	x6, [x13, #24]
  4322c4:	sbfiz	x1, x4, #5, #32
  4322c8:	add	x0, x6, x1
  4322cc:	ldr	w1, [x6, x1]
  4322d0:	cmp	w1, w5
  4322d4:	b.hi	4322f0 <ferror@plt+0x2fa70>  // b.pmore
  4322d8:	cbz	w4, 432330 <ferror@plt+0x2fab0>
  4322dc:	ldur	w2, [x0, #-32]
  4322e0:	cmp	w2, w5
  4322e4:	b.hi	432330 <ferror@plt+0x2fab0>  // b.pmore
  4322e8:	sub	w3, w4, #0x1
  4322ec:	mov	w4, #0x0                   	// #0
  4322f0:	cmp	w3, w4
  4322f4:	b.ls	43231c <ferror@plt+0x2fa9c>  // b.plast
  4322f8:	add	w1, w3, w4
  4322fc:	lsr	w2, w1, #1
  432300:	lsr	w1, w1, #1
  432304:	lsl	x2, x2, #5
  432308:	ldr	w0, [x6, x2]
  43230c:	cmp	w0, w5
  432310:	b.hi	432370 <ferror@plt+0x2faf0>  // b.pmore
  432314:	mov	w3, w1
  432318:	b	4322f0 <ferror@plt+0x2fa70>
  43231c:	str	w3, [x13, #40]
  432320:	sbfiz	x1, x3, #5, #32
  432324:	add	x0, x6, x1
  432328:	cbz	x0, 4323a0 <ferror@plt+0x2fb20>
  43232c:	ldr	w1, [x0]
  432330:	cmp	w1, w10
  432334:	b.ls	432378 <ferror@plt+0x2faf8>  // b.plast
  432338:	ldr	w9, [x0, #24]
  43233c:	b	432144 <ferror@plt+0x2f8c4>
  432340:	and	w0, w9, #0x7fffffff
  432344:	ldr	x2, [x13, #104]
  432348:	umull	x0, w0, w14
  43234c:	ldr	w1, [x2, x0]
  432350:	tbz	w1, #31, 432390 <ferror@plt+0x2fb10>
  432354:	and	w0, w1, #0x7fffffff
  432358:	umull	x0, w0, w14
  43235c:	ldr	w5, [x2, x0]
  432360:	add	w0, w5, w12
  432364:	cmp	w0, w11
  432368:	b.ls	4322bc <ferror@plt+0x2fa3c>  // b.plast
  43236c:	b	432154 <ferror@plt+0x2f8d4>
  432370:	add	w4, w1, #0x1
  432374:	b	4322f0 <ferror@plt+0x2fa70>
  432378:	ldrb	w3, [x0, #6]
  43237c:	sub	w1, w9, w1
  432380:	ldr	w2, [x0, #16]
  432384:	lsr	w0, w1, w3
  432388:	add	w0, w0, w2
  43238c:	ret
  432390:	cmp	w1, w10
  432394:	b.ls	432154 <ferror@plt+0x2f8d4>  // b.plast
  432398:	mov	w5, w1
  43239c:	b	4322bc <ferror@plt+0x2fa3c>
  4323a0:	mov	x0, #0x0                   	// #0
  4323a4:	ldr	w0, [x0]
  4323a8:	brk	#0x3e8
  4323ac:	mov	x0, #0x0                   	// #0
  4323b0:	ldr	w0, [x0]
  4323b4:	brk	#0x3e8
  4323b8:	mov	x9, x0
  4323bc:	tbnz	w1, #31, 4323f8 <ferror@plt+0x2fb78>
  4323c0:	cmp	w1, #0x1
  4323c4:	b.ls	4323f0 <ferror@plt+0x2fb70>  // b.plast
  4323c8:	mov	w10, #0x6fffffff            	// #1879048191
  4323cc:	mov	w13, #0x18                  	// #24
  4323d0:	mov	w12, #0x90000000            	// #-1879048192
  4323d4:	mov	w11, #0xfffffff             	// #268435455
  4323d8:	tbnz	w1, #31, 432438 <ferror@plt+0x2fbb8>
  4323dc:	cmp	w1, w10
  4323e0:	b.ls	4324cc <ferror@plt+0x2fc4c>  // b.plast
  4323e4:	cbz	x9, 432608 <ferror@plt+0x2fd88>
  4323e8:	mov	w4, w1
  4323ec:	b	432464 <ferror@plt+0x2fbe4>
  4323f0:	mov	x0, #0x0                   	// #0
  4323f4:	ret
  4323f8:	and	w1, w1, #0x7fffffff
  4323fc:	mov	w2, #0x18                  	// #24
  432400:	ldr	x0, [x0, #104]
  432404:	umull	x1, w1, w2
  432408:	ldr	w1, [x0, x1]
  43240c:	cmp	w1, #0x1
  432410:	b.ls	4323f0 <ferror@plt+0x2fb70>  // b.plast
  432414:	tbz	w1, #31, 4323c8 <ferror@plt+0x2fb48>
  432418:	and	w1, w1, #0x7fffffff
  43241c:	mov	w10, #0x6fffffff            	// #1879048191
  432420:	mov	w13, #0x18                  	// #24
  432424:	mov	w12, #0x90000000            	// #-1879048192
  432428:	mov	w11, #0xfffffff             	// #268435455
  43242c:	umull	x1, w1, w2
  432430:	ldr	w1, [x0, x1]
  432434:	b	4323d8 <ferror@plt+0x2fb58>
  432438:	and	w1, w1, #0x7fffffff
  43243c:	ldr	x2, [x9, #104]
  432440:	umull	x1, w1, w13
  432444:	ldr	w1, [x2, x1]
  432448:	tbz	w1, #31, 4324c4 <ferror@plt+0x2fc44>
  43244c:	and	w0, w1, #0x7fffffff
  432450:	umull	x0, w0, w13
  432454:	ldr	w4, [x2, x0]
  432458:	add	w0, w4, w12
  43245c:	cmp	w0, w11
  432460:	b.hi	4324cc <ferror@plt+0x2fc4c>  // b.pmore
  432464:	ldp	w2, w3, [x9, #36]
  432468:	ldr	x5, [x9, #24]
  43246c:	sbfiz	x1, x3, #5, #32
  432470:	add	x0, x5, x1
  432474:	ldr	w1, [x5, x1]
  432478:	cmp	w1, w4
  43247c:	b.hi	432498 <ferror@plt+0x2fc18>  // b.pmore
  432480:	cbz	w3, 4325e4 <ferror@plt+0x2fd64>
  432484:	ldur	w2, [x0, #-32]
  432488:	cmp	w2, w4
  43248c:	b.hi	4325e4 <ferror@plt+0x2fd64>  // b.pmore
  432490:	sub	w2, w3, #0x1
  432494:	mov	w3, #0x0                   	// #0
  432498:	cmp	w2, w3
  43249c:	b.ls	4325d0 <ferror@plt+0x2fd50>  // b.plast
  4324a0:	add	w0, w2, w3
  4324a4:	lsr	w1, w0, #1
  4324a8:	lsr	w0, w0, #1
  4324ac:	lsl	x1, x1, #5
  4324b0:	ldr	w1, [x5, x1]
  4324b4:	cmp	w1, w4
  4324b8:	b.hi	4325c8 <ferror@plt+0x2fd48>  // b.pmore
  4324bc:	mov	w2, w0
  4324c0:	b	432498 <ferror@plt+0x2fc18>
  4324c4:	cmp	w1, w10
  4324c8:	b.hi	4323e8 <ferror@plt+0x2fb68>  // b.pmore
  4324cc:	stp	x29, x30, [sp, #-16]!
  4324d0:	mov	x29, sp
  4324d4:	nop
  4324d8:	mov	x0, x9
  4324dc:	bl	430d68 <ferror@plt+0x2e4e8>
  4324e0:	cbz	x0, 4325fc <ferror@plt+0x2fd7c>
  4324e4:	ldr	w1, [x0]
  4324e8:	cmp	w1, w10
  4324ec:	b.hi	4324fc <ferror@plt+0x2fc7c>  // b.pmore
  4324f0:	ldp	x29, x30, [sp], #16
  4324f4:	ldr	x0, [x0, #8]
  4324f8:	ret
  4324fc:	ldr	w1, [x0, #24]
  432500:	tbnz	w1, #31, 432584 <ferror@plt+0x2fd04>
  432504:	cmp	w1, w10
  432508:	b.ls	4324d8 <ferror@plt+0x2fc58>  // b.plast
  43250c:	cbz	x9, 4325fc <ferror@plt+0x2fd7c>
  432510:	mov	w4, w1
  432514:	ldp	w2, w3, [x9, #36]
  432518:	ldr	x5, [x9, #24]
  43251c:	sbfiz	x1, x3, #5, #32
  432520:	add	x0, x5, x1
  432524:	ldr	w1, [x5, x1]
  432528:	cmp	w1, w4
  43252c:	b.hi	43256c <ferror@plt+0x2fcec>  // b.pmore
  432530:	cbz	w3, 4324e8 <ferror@plt+0x2fc68>
  432534:	ldur	w2, [x0, #-32]
  432538:	cmp	w2, w4
  43253c:	b.hi	4324e8 <ferror@plt+0x2fc68>  // b.pmore
  432540:	sub	w2, w3, #0x1
  432544:	mov	w3, #0x0                   	// #0
  432548:	b	43256c <ferror@plt+0x2fcec>
  43254c:	add	w0, w2, w3
  432550:	lsr	w1, w0, #1
  432554:	lsr	w0, w0, #1
  432558:	lsl	x1, x1, #5
  43255c:	ldr	w1, [x5, x1]
  432560:	cmp	w1, w4
  432564:	b.hi	4325b4 <ferror@plt+0x2fd34>  // b.pmore
  432568:	mov	w2, w0
  43256c:	cmp	w2, w3
  432570:	b.hi	43254c <ferror@plt+0x2fccc>  // b.pmore
  432574:	sbfiz	x1, x2, #5, #32
  432578:	str	w2, [x9, #40]
  43257c:	add	x0, x5, x1
  432580:	b	4324e0 <ferror@plt+0x2fc60>
  432584:	and	w1, w1, #0x7fffffff
  432588:	ldr	x2, [x9, #104]
  43258c:	umull	x1, w1, w13
  432590:	ldr	w1, [x2, x1]
  432594:	tbz	w1, #31, 4325bc <ferror@plt+0x2fd3c>
  432598:	and	w0, w1, #0x7fffffff
  43259c:	umull	x0, w0, w13
  4325a0:	ldr	w4, [x2, x0]
  4325a4:	add	w0, w4, w12
  4325a8:	cmp	w0, w11
  4325ac:	b.ls	432514 <ferror@plt+0x2fc94>  // b.plast
  4325b0:	b	4324d8 <ferror@plt+0x2fc58>
  4325b4:	add	w3, w0, #0x1
  4325b8:	b	43256c <ferror@plt+0x2fcec>
  4325bc:	cmp	w1, w10
  4325c0:	b.hi	432510 <ferror@plt+0x2fc90>  // b.pmore
  4325c4:	b	4324d8 <ferror@plt+0x2fc58>
  4325c8:	add	w3, w0, #0x1
  4325cc:	b	432498 <ferror@plt+0x2fc18>
  4325d0:	str	w2, [x9, #40]
  4325d4:	sbfiz	x1, x2, #5, #32
  4325d8:	add	x0, x5, x1
  4325dc:	cbz	x0, 432608 <ferror@plt+0x2fd88>
  4325e0:	ldr	w1, [x0]
  4325e4:	cmp	w1, w10
  4325e8:	b.ls	4325f4 <ferror@plt+0x2fd74>  // b.plast
  4325ec:	ldr	w1, [x0, #24]
  4325f0:	b	4323d8 <ferror@plt+0x2fb58>
  4325f4:	ldr	x0, [x0, #8]
  4325f8:	ret
  4325fc:	mov	x0, #0x0                   	// #0
  432600:	ldr	x0, [x0, #8]
  432604:	brk	#0x3e8
  432608:	mov	x0, #0x0                   	// #0
  43260c:	ldr	x0, [x0, #8]
  432610:	brk	#0x3e8
  432614:	nop
  432618:	ldr	x0, [x0, #8]
  43261c:	ldr	x0, [x0]
  432620:	ret
  432624:	nop
  432628:	mov	x10, x0
  43262c:	mov	w9, w1
  432630:	tbz	w1, #31, 432648 <ferror@plt+0x2fdc8>
  432634:	and	w9, w1, #0x7fffffff
  432638:	mov	w1, #0x18                  	// #24
  43263c:	ldr	x0, [x0, #104]
  432640:	umull	x9, w9, w1
  432644:	ldr	w9, [x0, x9]
  432648:	cmp	w9, #0x1
  43264c:	b.ls	432838 <ferror@plt+0x2ffb8>  // b.plast
  432650:	mov	w13, #0x6fffffff            	// #1879048191
  432654:	mov	w14, #0x18                  	// #24
  432658:	mov	w12, #0x90000000            	// #-1879048192
  43265c:	mov	w11, #0xfffffff             	// #268435455
  432660:	tbnz	w9, #31, 432808 <ferror@plt+0x2ff88>
  432664:	cmp	w9, w13
  432668:	b.hi	4327a0 <ferror@plt+0x2ff20>  // b.pmore
  43266c:	mov	w1, w9
  432670:	stp	x29, x30, [sp, #-16]!
  432674:	mov	x29, sp
  432678:	mov	x0, x10
  43267c:	bl	430d68 <ferror@plt+0x2e4e8>
  432680:	cbz	x0, 43278c <ferror@plt+0x2ff0c>
  432684:	ldr	w2, [x0]
  432688:	cmp	w2, w13
  43268c:	b.ls	432778 <ferror@plt+0x2fef8>  // b.plast
  432690:	tbz	w9, #31, 4326a4 <ferror@plt+0x2fe24>
  432694:	and	w9, w9, #0x7fffffff
  432698:	ldr	x1, [x10, #104]
  43269c:	umull	x9, w9, w14
  4326a0:	ldr	w9, [x1, x9]
  4326a4:	sub	w9, w9, w2
  4326a8:	ldr	x1, [x0, #16]
  4326ac:	lsl	w9, w9, #1
  4326b0:	ldr	w9, [x1, x9, lsl #2]
  4326b4:	cmp	w9, #0x1
  4326b8:	b.ls	432740 <ferror@plt+0x2fec0>  // b.plast
  4326bc:	tbnz	w9, #31, 432748 <ferror@plt+0x2fec8>
  4326c0:	cmp	w9, w13
  4326c4:	b.ls	432784 <ferror@plt+0x2ff04>  // b.plast
  4326c8:	cbz	x10, 43278c <ferror@plt+0x2ff0c>
  4326cc:	mov	w5, w9
  4326d0:	ldp	w3, w4, [x10, #36]
  4326d4:	ldr	x6, [x10, #24]
  4326d8:	sbfiz	x1, x4, #5, #32
  4326dc:	add	x0, x6, x1
  4326e0:	ldr	w2, [x6, x1]
  4326e4:	cmp	w2, w5
  4326e8:	b.hi	432724 <ferror@plt+0x2fea4>  // b.pmore
  4326ec:	cbz	w4, 432688 <ferror@plt+0x2fe08>
  4326f0:	ldur	w1, [x0, #-32]
  4326f4:	cmp	w1, w5
  4326f8:	b.hi	432688 <ferror@plt+0x2fe08>  // b.pmore
  4326fc:	sub	w3, w4, #0x1
  432700:	mov	w4, #0x0                   	// #0
  432704:	b	432724 <ferror@plt+0x2fea4>
  432708:	lsr	w0, w1, #1
  43270c:	lsr	w1, w1, #1
  432710:	lsl	x0, x0, #5
  432714:	ldr	w0, [x6, x0]
  432718:	cmp	w0, w5
  43271c:	b.hi	432798 <ferror@plt+0x2ff18>  // b.pmore
  432720:	mov	w3, w1
  432724:	add	w1, w3, w4
  432728:	cmp	w3, w4
  43272c:	b.hi	432708 <ferror@plt+0x2fe88>  // b.pmore
  432730:	sbfiz	x1, x3, #5, #32
  432734:	str	w3, [x10, #40]
  432738:	add	x0, x6, x1
  43273c:	b	432680 <ferror@plt+0x2fe00>
  432740:	ldr	w9, [x0, #24]
  432744:	tbz	w9, #31, 4326c0 <ferror@plt+0x2fe40>
  432748:	and	w0, w9, #0x7fffffff
  43274c:	ldr	x2, [x10, #104]
  432750:	umull	x0, w0, w14
  432754:	ldr	w1, [x2, x0]
  432758:	tbz	w1, #31, 432850 <ferror@plt+0x2ffd0>
  43275c:	and	w0, w1, #0x7fffffff
  432760:	umull	x0, w0, w14
  432764:	ldr	w5, [x2, x0]
  432768:	add	w0, w5, w12
  43276c:	cmp	w0, w11
  432770:	b.ls	4326d0 <ferror@plt+0x2fe50>  // b.plast
  432774:	b	432678 <ferror@plt+0x2fdf8>
  432778:	ldrb	w0, [x0, #5]
  43277c:	ldp	x29, x30, [sp], #16
  432780:	ret
  432784:	mov	w1, w9
  432788:	b	432678 <ferror@plt+0x2fdf8>
  43278c:	mov	w0, #0x0                   	// #0
  432790:	ldp	x29, x30, [sp], #16
  432794:	ret
  432798:	add	w4, w1, #0x1
  43279c:	b	432724 <ferror@plt+0x2fea4>
  4327a0:	cbz	x10, 432838 <ferror@plt+0x2ffb8>
  4327a4:	mov	w5, w9
  4327a8:	ldp	w3, w4, [x10, #36]
  4327ac:	ldr	x6, [x10, #24]
  4327b0:	sbfiz	x1, x4, #5, #32
  4327b4:	add	x0, x6, x1
  4327b8:	ldr	w2, [x6, x1]
  4327bc:	cmp	w2, w5
  4327c0:	b.hi	4327dc <ferror@plt+0x2ff5c>  // b.pmore
  4327c4:	cbz	w4, 432874 <ferror@plt+0x2fff4>
  4327c8:	ldur	w1, [x0, #-32]
  4327cc:	cmp	w1, w5
  4327d0:	b.hi	432874 <ferror@plt+0x2fff4>  // b.pmore
  4327d4:	sub	w3, w4, #0x1
  4327d8:	mov	w4, #0x0                   	// #0
  4327dc:	add	w1, w3, w4
  4327e0:	cmp	w3, w4
  4327e4:	b.ls	432860 <ferror@plt+0x2ffe0>  // b.plast
  4327e8:	lsr	w0, w1, #1
  4327ec:	lsr	w1, w1, #1
  4327f0:	lsl	x0, x0, #5
  4327f4:	ldr	w0, [x6, x0]
  4327f8:	cmp	w0, w5
  4327fc:	b.hi	4328b8 <ferror@plt+0x30038>  // b.pmore
  432800:	mov	w3, w1
  432804:	b	4327dc <ferror@plt+0x2ff5c>
  432808:	and	w0, w9, #0x7fffffff
  43280c:	ldr	x2, [x10, #104]
  432810:	umull	x0, w0, w14
  432814:	ldr	w1, [x2, x0]
  432818:	tbz	w1, #31, 432840 <ferror@plt+0x2ffc0>
  43281c:	and	w0, w1, #0x7fffffff
  432820:	umull	x0, w0, w14
  432824:	ldr	w5, [x2, x0]
  432828:	add	w0, w5, w12
  43282c:	cmp	w0, w11
  432830:	b.ls	4327a8 <ferror@plt+0x2ff28>  // b.plast
  432834:	b	432670 <ferror@plt+0x2fdf0>
  432838:	mov	w0, #0x0                   	// #0
  43283c:	ret
  432840:	cmp	w1, w13
  432844:	b.ls	432670 <ferror@plt+0x2fdf0>  // b.plast
  432848:	mov	w5, w1
  43284c:	b	4327a8 <ferror@plt+0x2ff28>
  432850:	cmp	w1, w13
  432854:	b.ls	432678 <ferror@plt+0x2fdf8>  // b.plast
  432858:	mov	w5, w1
  43285c:	b	4326d0 <ferror@plt+0x2fe50>
  432860:	str	w3, [x10, #40]
  432864:	sbfiz	x1, x3, #5, #32
  432868:	add	x0, x6, x1
  43286c:	cbz	x0, 432838 <ferror@plt+0x2ffb8>
  432870:	ldr	w2, [x0]
  432874:	cmp	w2, w13
  432878:	b.ls	4328b0 <ferror@plt+0x30030>  // b.plast
  43287c:	tbz	w9, #31, 432890 <ferror@plt+0x30010>
  432880:	and	w9, w9, #0x7fffffff
  432884:	ldr	x1, [x10, #104]
  432888:	umull	x9, w9, w14
  43288c:	ldr	w9, [x1, x9]
  432890:	sub	w9, w9, w2
  432894:	ldr	x1, [x0, #16]
  432898:	lsl	w9, w9, #1
  43289c:	ldr	w9, [x1, x9, lsl #2]
  4328a0:	cmp	w9, #0x1
  4328a4:	b.hi	432660 <ferror@plt+0x2fde0>  // b.pmore
  4328a8:	ldr	w9, [x0, #24]
  4328ac:	b	432660 <ferror@plt+0x2fde0>
  4328b0:	ldrb	w0, [x0, #5]
  4328b4:	ret
  4328b8:	add	w4, w1, #0x1
  4328bc:	b	4327dc <ferror@plt+0x2ff5c>
  4328c0:	tbz	w1, #31, 4328d8 <ferror@plt+0x30058>
  4328c4:	and	w1, w1, #0x7fffffff
  4328c8:	mov	w2, #0x18                  	// #24
  4328cc:	ldr	x0, [x0, #104]
  4328d0:	umull	x1, w1, w2
  4328d4:	ldr	w1, [x0, x1]
  4328d8:	mov	w0, #0x90000000            	// #-1879048192
  4328dc:	add	w1, w1, w0
  4328e0:	mov	w0, #0xfffffff             	// #268435455
  4328e4:	cmp	w1, w0
  4328e8:	cset	w0, ls  // ls = plast
  4328ec:	ret
  4328f0:	mov	w11, w1
  4328f4:	mov	x12, x0
  4328f8:	mov	w13, w2
  4328fc:	mov	w10, w1
  432900:	tbz	w1, #31, 432918 <ferror@plt+0x30098>
  432904:	and	w0, w1, #0x7fffffff
  432908:	mov	w1, #0x18                  	// #24
  43290c:	ldr	x3, [x12, #104]
  432910:	umull	x0, w0, w1
  432914:	ldr	w10, [x3, x0]
  432918:	mov	w9, w13
  43291c:	tbz	w13, #31, 432934 <ferror@plt+0x300b4>
  432920:	and	w0, w13, #0x7fffffff
  432924:	mov	w1, #0x18                  	// #24
  432928:	ldr	x3, [x12, #104]
  43292c:	umull	x0, w0, w1
  432930:	ldr	w9, [x3, x0]
  432934:	cmp	w10, w9
  432938:	b.eq	432a68 <ferror@plt+0x301e8>  // b.none
  43293c:	stp	x29, x30, [sp, #-16]!
  432940:	mov	x29, sp
  432944:	tbnz	w10, #31, 432990 <ferror@plt+0x30110>
  432948:	mov	w0, #0x6fffffff            	// #1879048191
  43294c:	mov	w14, #0x0                   	// #0
  432950:	cmp	w10, w0
  432954:	b.hi	4329c0 <ferror@plt+0x30140>  // b.pmore
  432958:	tbnz	w9, #31, 432a38 <ferror@plt+0x301b8>
  43295c:	mov	w0, #0x6fffffff            	// #1879048191
  432960:	cmp	w9, w0
  432964:	b.ls	4329e8 <ferror@plt+0x30168>  // b.plast
  432968:	mov	w15, #0x6fffffff            	// #1879048191
  43296c:	mov	w1, w9
  432970:	mov	x0, x12
  432974:	bl	431a80 <ferror@plt+0x2f200>
  432978:	cbz	x0, 4329fc <ferror@plt+0x3017c>
  43297c:	ldr	w1, [x0]
  432980:	cmp	w1, w15
  432984:	b.ls	4329fc <ferror@plt+0x3017c>  // b.plast
  432988:	ldr	w9, [x0, #24]
  43298c:	b	43296c <ferror@plt+0x300ec>
  432990:	and	w1, w10, #0x7fffffff
  432994:	mov	w2, #0x18                  	// #24
  432998:	ldr	x3, [x12, #104]
  43299c:	mov	w0, #0x90000000            	// #-1879048192
  4329a0:	umull	x1, w1, w2
  4329a4:	mov	w14, #0x0                   	// #0
  4329a8:	mov	w2, #0xfffffff             	// #268435455
  4329ac:	ldr	w1, [x3, x1]
  4329b0:	add	w0, w1, w0
  4329b4:	cmp	w0, w2
  4329b8:	b.hi	432958 <ferror@plt+0x300d8>  // b.pmore
  4329bc:	mov	w10, w1
  4329c0:	mov	w14, #0x6fffffff            	// #1879048191
  4329c4:	mov	w1, w10
  4329c8:	mov	x0, x12
  4329cc:	bl	431a80 <ferror@plt+0x2f200>
  4329d0:	cbz	x0, 432b08 <ferror@plt+0x30288>
  4329d4:	ldr	w1, [x0]
  4329d8:	cmp	w1, w14
  4329dc:	b.ls	432b08 <ferror@plt+0x30288>  // b.plast
  4329e0:	ldr	w10, [x0, #24]
  4329e4:	b	4329c4 <ferror@plt+0x30144>
  4329e8:	tbnz	w10, #31, 432a08 <ferror@plt+0x30188>
  4329ec:	nop
  4329f0:	sub	w0, w9, w10
  4329f4:	ldp	x29, x30, [sp], #16
  4329f8:	ret
  4329fc:	cmp	w9, w10
  432a00:	b.eq	432a78 <ferror@plt+0x301f8>  // b.none
  432a04:	tbz	w10, #31, 432a1c <ferror@plt+0x3019c>
  432a08:	ldr	x3, [x12, #104]
  432a0c:	and	w0, w10, #0x7fffffff
  432a10:	mov	w10, #0x18                  	// #24
  432a14:	umull	x0, w0, w10
  432a18:	ldr	w10, [x3, x0]
  432a1c:	tbz	w9, #31, 4329f0 <ferror@plt+0x30170>
  432a20:	ldr	x3, [x12, #104]
  432a24:	and	w0, w9, #0x7fffffff
  432a28:	mov	w1, #0x18                  	// #24
  432a2c:	umull	x0, w0, w1
  432a30:	ldr	w9, [x3, x0]
  432a34:	b	4329f0 <ferror@plt+0x30170>
  432a38:	and	w0, w9, #0x7fffffff
  432a3c:	mov	w4, #0x18                  	// #24
  432a40:	ldr	x3, [x12, #104]
  432a44:	mov	w1, #0x90000000            	// #-1879048192
  432a48:	umull	x4, w0, w4
  432a4c:	mov	w5, #0xfffffff             	// #268435455
  432a50:	ldr	w2, [x3, x4]
  432a54:	add	w1, w2, w1
  432a58:	cmp	w1, w5
  432a5c:	b.hi	432a70 <ferror@plt+0x301f0>  // b.pmore
  432a60:	mov	w9, w2
  432a64:	b	432968 <ferror@plt+0x300e8>
  432a68:	mov	w0, #0x0                   	// #0
  432a6c:	ret
  432a70:	tbz	w10, #31, 432a28 <ferror@plt+0x301a8>
  432a74:	b	432a0c <ferror@plt+0x3018c>
  432a78:	cbz	w14, 432a04 <ferror@plt+0x30184>
  432a7c:	mov	w1, w11
  432a80:	mov	x0, x12
  432a84:	bl	431a80 <ferror@plt+0x2f200>
  432a88:	mov	x9, x0
  432a8c:	mov	w1, w13
  432a90:	mov	x0, x12
  432a94:	bl	431a80 <ferror@plt+0x2f200>
  432a98:	mov	x10, x0
  432a9c:	mov	w14, #0x6fffffff            	// #1879048191
  432aa0:	cbz	x9, 432af0 <ferror@plt+0x30270>
  432aa4:	ldr	w0, [x9]
  432aa8:	cmp	w0, w14
  432aac:	b.ls	432b10 <ferror@plt+0x30290>  // b.plast
  432ab0:	cbz	x10, 432af0 <ferror@plt+0x30270>
  432ab4:	cmp	x10, x9
  432ab8:	ldr	w2, [x10]
  432abc:	cset	w1, ne  // ne = any
  432ac0:	cmp	w1, #0x0
  432ac4:	ccmp	w2, w14, #0x0, ne  // ne = any
  432ac8:	b.ls	432b18 <ferror@plt+0x30298>  // b.plast
  432acc:	cmp	w0, w2
  432ad0:	b.cs	432b24 <ferror@plt+0x302a4>  // b.hs, b.nlast
  432ad4:	ldr	w11, [x9, #24]
  432ad8:	mov	x0, x12
  432adc:	mov	w1, w11
  432ae0:	bl	431a80 <ferror@plt+0x2f200>
  432ae4:	mov	x9, x0
  432ae8:	cbnz	x0, 432aa4 <ferror@plt+0x30224>
  432aec:	nop
  432af0:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  432af4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  432af8:	add	x2, x2, #0x270
  432afc:	add	x0, x0, #0x290
  432b00:	mov	w1, #0x549                 	// #1353
  432b04:	bl	4028b0 <ferror@plt+0x30>
  432b08:	mov	w14, #0x1                   	// #1
  432b0c:	b	432958 <ferror@plt+0x300d8>
  432b10:	cmp	x10, x9
  432b14:	cset	w1, ne  // ne = any
  432b18:	sub	w0, w13, w11
  432b1c:	cbz	w1, 4329f4 <ferror@plt+0x30174>
  432b20:	b	432af0 <ferror@plt+0x30270>
  432b24:	ldr	w13, [x10, #24]
  432b28:	mov	x0, x12
  432b2c:	mov	w1, w13
  432b30:	bl	431a80 <ferror@plt+0x2f200>
  432b34:	mov	x10, x0
  432b38:	b	432aa4 <ferror@plt+0x30224>
  432b3c:	nop
  432b40:	mov	w9, w1
  432b44:	mov	x12, x0
  432b48:	mov	x11, x3
  432b4c:	mov	w10, w1
  432b50:	tbz	w1, #31, 432b68 <ferror@plt+0x302e8>
  432b54:	and	w0, w1, #0x7fffffff
  432b58:	mov	w3, #0x18                  	// #24
  432b5c:	ldr	x1, [x12, #104]
  432b60:	umull	x0, w0, w3
  432b64:	ldr	w10, [x1, x0]
  432b68:	cmp	w10, #0x1
  432b6c:	b.ls	432cb0 <ferror@plt+0x30430>  // b.plast
  432b70:	stp	x29, x30, [sp, #-16]!
  432b74:	cmp	w2, #0x1
  432b78:	mov	x29, sp
  432b7c:	b.eq	432c60 <ferror@plt+0x303e0>  // b.none
  432b80:	cmp	w2, #0x2
  432b84:	b.eq	432bf4 <ferror@plt+0x30374>  // b.none
  432b88:	cbz	w2, 432ba4 <ferror@plt+0x30324>
  432b8c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  432b90:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  432b94:	add	x2, x2, #0x2a8
  432b98:	add	x0, x0, #0x290
  432b9c:	mov	w1, #0x621                 	// #1569
  432ba0:	bl	4028b0 <ferror@plt+0x30>
  432ba4:	mov	w9, #0x6fffffff            	// #1879048191
  432ba8:	mov	w1, w10
  432bac:	mov	x0, x12
  432bb0:	bl	431a80 <ferror@plt+0x2f200>
  432bb4:	mov	x1, x0
  432bb8:	cbz	x0, 432be0 <ferror@plt+0x30360>
  432bbc:	ldr	w0, [x0]
  432bc0:	cmp	w0, w9
  432bc4:	b.ls	432be0 <ferror@plt+0x30360>  // b.plast
  432bc8:	ldr	w10, [x1, #24]
  432bcc:	mov	x0, x12
  432bd0:	mov	w1, w10
  432bd4:	bl	431a80 <ferror@plt+0x2f200>
  432bd8:	mov	x1, x0
  432bdc:	cbnz	x0, 432bbc <ferror@plt+0x3033c>
  432be0:	cbz	x11, 432c54 <ferror@plt+0x303d4>
  432be4:	str	x1, [x11]
  432be8:	mov	w0, w10
  432bec:	ldp	x29, x30, [sp], #16
  432bf0:	ret
  432bf4:	mov	w14, #0x18                  	// #24
  432bf8:	mov	w13, #0x6fffffff            	// #1879048191
  432bfc:	b	432c20 <ferror@plt+0x303a0>
  432c00:	ldr	w1, [x0]
  432c04:	cmp	w1, w13
  432c08:	b.ls	432c48 <ferror@plt+0x303c8>  // b.plast
  432c0c:	sub	w10, w10, w1
  432c10:	ldr	x0, [x0, #16]
  432c14:	lsl	w10, w10, #1
  432c18:	add	w10, w10, #0x1
  432c1c:	ldr	w9, [x0, x10, lsl #2]
  432c20:	mov	w10, w9
  432c24:	tbz	w9, #31, 432c38 <ferror@plt+0x303b8>
  432c28:	and	w1, w9, #0x7fffffff
  432c2c:	ldr	x0, [x12, #104]
  432c30:	umull	x1, w1, w14
  432c34:	ldr	w10, [x0, x1]
  432c38:	mov	w1, w10
  432c3c:	mov	x0, x12
  432c40:	bl	431a80 <ferror@plt+0x2f200>
  432c44:	cbnz	x0, 432c00 <ferror@plt+0x30380>
  432c48:	mov	w10, w9
  432c4c:	cbz	x11, 432c54 <ferror@plt+0x303d4>
  432c50:	str	x0, [x11]
  432c54:	mov	w0, w10
  432c58:	ldp	x29, x30, [sp], #16
  432c5c:	ret
  432c60:	mov	w10, #0x6fffffff            	// #1879048191
  432c64:	mov	w13, #0x18                  	// #24
  432c68:	b	432c9c <ferror@plt+0x3041c>
  432c6c:	ldr	w2, [x0]
  432c70:	cmp	w2, w10
  432c74:	b.ls	432c48 <ferror@plt+0x303c8>  // b.plast
  432c78:	tbz	w9, #31, 432c8c <ferror@plt+0x3040c>
  432c7c:	and	w9, w9, #0x7fffffff
  432c80:	ldr	x1, [x12, #104]
  432c84:	umull	x9, w9, w13
  432c88:	ldr	w9, [x1, x9]
  432c8c:	sub	w9, w9, w2
  432c90:	ldr	x0, [x0, #16]
  432c94:	lsl	w9, w9, #1
  432c98:	ldr	w9, [x0, x9, lsl #2]
  432c9c:	mov	w1, w9
  432ca0:	mov	x0, x12
  432ca4:	bl	431a80 <ferror@plt+0x2f200>
  432ca8:	cbnz	x0, 432c6c <ferror@plt+0x303ec>
  432cac:	b	432c48 <ferror@plt+0x303c8>
  432cb0:	mov	w10, w9
  432cb4:	cbz	x11, 432cbc <ferror@plt+0x3043c>
  432cb8:	str	xzr, [x11]
  432cbc:	mov	w0, w10
  432cc0:	ret
  432cc4:	nop
  432cc8:	mov	x10, x0
  432ccc:	mov	w9, w1
  432cd0:	tbnz	w1, #31, 432d8c <ferror@plt+0x3050c>
  432cd4:	mov	w0, #0x6fffffff            	// #1879048191
  432cd8:	cmp	w9, w0
  432cdc:	b.ls	432d4c <ferror@plt+0x304cc>  // b.plast
  432ce0:	stp	x29, x30, [sp, #-16]!
  432ce4:	mov	w11, #0x18                  	// #24
  432ce8:	mov	w12, #0x6fffffff            	// #1879048191
  432cec:	mov	w14, #0x90000000            	// #-1879048192
  432cf0:	mov	w13, #0xfffffff             	// #268435455
  432cf4:	mov	x29, sp
  432cf8:	mov	w1, w9
  432cfc:	mov	x0, x10
  432d00:	bl	431a80 <ferror@plt+0x2f200>
  432d04:	and	w1, w9, #0x7fffffff
  432d08:	mov	x3, x0
  432d0c:	mov	w2, w9
  432d10:	tbz	w9, #31, 432d20 <ferror@plt+0x304a0>
  432d14:	umull	x1, w1, w11
  432d18:	ldr	x0, [x10, #104]
  432d1c:	ldr	w2, [x0, x1]
  432d20:	ldr	w1, [x3]
  432d24:	ldr	x0, [x3, #16]
  432d28:	sub	w2, w2, w1
  432d2c:	lsl	w2, w2, #1
  432d30:	ldr	w2, [x0, x2, lsl #2]
  432d34:	and	w3, w2, #0x7fffffff
  432d38:	tbnz	w2, #31, 432d54 <ferror@plt+0x304d4>
  432d3c:	cmp	w2, w12
  432d40:	b.ls	432d6c <ferror@plt+0x304ec>  // b.plast
  432d44:	mov	w9, w2
  432d48:	b	432cf8 <ferror@plt+0x30478>
  432d4c:	mov	w0, #0x0                   	// #0
  432d50:	ret
  432d54:	umull	x3, w3, w11
  432d58:	ldr	x4, [x10, #104]
  432d5c:	ldr	w3, [x4, x3]
  432d60:	add	w3, w3, w14
  432d64:	cmp	w3, w13
  432d68:	b.ls	432d44 <ferror@plt+0x304c4>  // b.plast
  432d6c:	sub	w1, w9, w1
  432d70:	ldp	x29, x30, [sp], #16
  432d74:	lsl	w1, w1, #1
  432d78:	add	w1, w1, #0x1
  432d7c:	ldr	w0, [x0, x1, lsl #2]
  432d80:	cmp	w0, w2
  432d84:	cset	w0, eq  // eq = none
  432d88:	ret
  432d8c:	and	w9, w1, #0x7fffffff
  432d90:	mov	w4, #0x18                  	// #24
  432d94:	ldr	x3, [x0, #104]
  432d98:	umull	x9, w9, w4
  432d9c:	ldr	w9, [x3, x9]
  432da0:	tbz	w9, #31, 432cd4 <ferror@plt+0x30454>
  432da4:	and	w2, w9, #0x7fffffff
  432da8:	mov	w6, #0x90000000            	// #-1879048192
  432dac:	mov	w5, #0xfffffff             	// #268435455
  432db0:	mov	w0, #0x0                   	// #0
  432db4:	umull	x2, w2, w4
  432db8:	ldr	w1, [x3, x2]
  432dbc:	add	w1, w1, w6
  432dc0:	cmp	w1, w5
  432dc4:	b.ls	432ce0 <ferror@plt+0x30460>  // b.plast
  432dc8:	ret
  432dcc:	nop
  432dd0:	stp	x29, x30, [sp, #-16]!
  432dd4:	mov	x10, x2
  432dd8:	mov	x9, x0
  432ddc:	mov	x29, sp
  432de0:	ldr	x12, [x2]
  432de4:	tbnz	w1, #31, 432e54 <ferror@plt+0x305d4>
  432de8:	ldr	w3, [x12]
  432dec:	mov	x0, x9
  432df0:	ldr	x2, [x12, #16]
  432df4:	sub	w1, w1, w3
  432df8:	lsl	w1, w1, #1
  432dfc:	ldr	w11, [x2, x1, lsl #2]
  432e00:	mov	w1, w11
  432e04:	bl	431a80 <ferror@plt+0x2f200>
  432e08:	mov	x3, x0
  432e0c:	cbz	x0, 432e30 <ferror@plt+0x305b0>
  432e10:	ldr	w1, [x3]
  432e14:	mov	w0, #0x6fffffff            	// #1879048191
  432e18:	cmp	w1, w0
  432e1c:	b.ls	432e30 <ferror@plt+0x305b0>  // b.plast
  432e20:	str	x3, [x10]
  432e24:	mov	w0, w11
  432e28:	ldp	x29, x30, [sp], #16
  432e2c:	ret
  432e30:	ldr	w11, [x12, #24]
  432e34:	mov	x0, x9
  432e38:	mov	w1, w11
  432e3c:	bl	431a80 <ferror@plt+0x2f200>
  432e40:	mov	x3, x0
  432e44:	str	x3, [x10]
  432e48:	mov	w0, w11
  432e4c:	ldp	x29, x30, [sp], #16
  432e50:	ret
  432e54:	and	w1, w1, #0x7fffffff
  432e58:	mov	w2, #0x18                  	// #24
  432e5c:	ldr	x0, [x0, #104]
  432e60:	umull	x1, w1, w2
  432e64:	ldr	w1, [x0, x1]
  432e68:	tbz	w1, #31, 432de8 <ferror@plt+0x30568>
  432e6c:	and	w1, w1, #0x7fffffff
  432e70:	umull	x1, w1, w2
  432e74:	ldr	w1, [x0, x1]
  432e78:	b	432de8 <ferror@plt+0x30568>
  432e7c:	nop
  432e80:	stp	x29, x30, [sp, #-32]!
  432e84:	mov	x14, x0
  432e88:	mov	w10, w1
  432e8c:	mov	x29, sp
  432e90:	str	xzr, [sp, #24]
  432e94:	mov	x13, x2
  432e98:	tbz	w1, #31, 432eb0 <ferror@plt+0x30630>
  432e9c:	and	w10, w1, #0x7fffffff
  432ea0:	mov	w1, #0x18                  	// #24
  432ea4:	ldr	x0, [x0, #104]
  432ea8:	umull	x10, w10, w1
  432eac:	ldr	w10, [x0, x10]
  432eb0:	mov	w1, w10
  432eb4:	mov	x0, x14
  432eb8:	bl	431a80 <ferror@plt+0x2f200>
  432ebc:	str	x0, [sp, #24]
  432ec0:	mov	x1, x0
  432ec4:	cbz	x0, 433008 <ferror@plt+0x30788>
  432ec8:	ldr	w2, [x1]
  432ecc:	mov	w0, #0x6fffffff            	// #1879048191
  432ed0:	cmp	w2, w0
  432ed4:	b.ls	433008 <ferror@plt+0x30788>  // b.plast
  432ed8:	tbnz	w10, #31, 43301c <ferror@plt+0x3079c>
  432edc:	mov	w9, w10
  432ee0:	cmp	w10, #0x1
  432ee4:	b.ls	433014 <ferror@plt+0x30794>  // b.plast
  432ee8:	mov	w11, #0x6fffffff            	// #1879048191
  432eec:	mov	w12, #0x18                  	// #24
  432ef0:	b	432f24 <ferror@plt+0x306a4>
  432ef4:	ldr	w1, [x0]
  432ef8:	cmp	w1, w11
  432efc:	b.ls	432f34 <ferror@plt+0x306b4>  // b.plast
  432f00:	tbz	w9, #31, 432f14 <ferror@plt+0x30694>
  432f04:	and	w3, w9, #0x7fffffff
  432f08:	ldr	x2, [x14, #104]
  432f0c:	umull	x3, w3, w12
  432f10:	ldr	w9, [x2, x3]
  432f14:	sub	w9, w9, w1
  432f18:	ldr	x0, [x0, #16]
  432f1c:	lsl	w9, w9, #1
  432f20:	ldr	w9, [x0, x9, lsl #2]
  432f24:	mov	w1, w9
  432f28:	mov	x0, x14
  432f2c:	bl	431a80 <ferror@plt+0x2f200>
  432f30:	cbnz	x0, 432ef4 <ferror@plt+0x30674>
  432f34:	cmp	w9, #0x1
  432f38:	b.ls	432f44 <ferror@plt+0x306c4>  // b.plast
  432f3c:	ldrb	w1, [x0, #5]
  432f40:	cbz	w1, 433008 <ferror@plt+0x30788>
  432f44:	ldr	x1, [sp, #24]
  432f48:	cbz	x1, 433000 <ferror@plt+0x30780>
  432f4c:	ldr	w2, [x1]
  432f50:	mov	w15, #0x6fffffff            	// #1879048191
  432f54:	mov	w18, #0x18                  	// #24
  432f58:	cmp	w2, w15
  432f5c:	b.ls	433000 <ferror@plt+0x30780>  // b.plast
  432f60:	cmp	w9, #0x1
  432f64:	b.ls	432f70 <ferror@plt+0x306f0>  // b.plast
  432f68:	ldrb	w0, [x0, #5]
  432f6c:	cbz	w0, 433000 <ferror@plt+0x30780>
  432f70:	mov	w1, w10
  432f74:	add	x2, sp, #0x18
  432f78:	mov	x0, x14
  432f7c:	bl	432dd0 <ferror@plt+0x30550>
  432f80:	mov	w10, w0
  432f84:	tbz	w0, #31, 432f98 <ferror@plt+0x30718>
  432f88:	and	w0, w0, #0x7fffffff
  432f8c:	ldr	x1, [x14, #104]
  432f90:	umull	x0, w0, w18
  432f94:	ldr	w0, [x1, x0]
  432f98:	mov	w9, w10
  432f9c:	cmp	w0, #0x1
  432fa0:	b.hi	432fd8 <ferror@plt+0x30758>  // b.pmore
  432fa4:	b	433040 <ferror@plt+0x307c0>
  432fa8:	ldr	w1, [x0]
  432fac:	cmp	w1, w15
  432fb0:	b.ls	432fe8 <ferror@plt+0x30768>  // b.plast
  432fb4:	tbz	w9, #31, 432fc8 <ferror@plt+0x30748>
  432fb8:	and	w3, w9, #0x7fffffff
  432fbc:	ldr	x2, [x14, #104]
  432fc0:	umull	x3, w3, w18
  432fc4:	ldr	w9, [x2, x3]
  432fc8:	sub	w9, w9, w1
  432fcc:	ldr	x0, [x0, #16]
  432fd0:	lsl	w9, w9, #1
  432fd4:	ldr	w9, [x0, x9, lsl #2]
  432fd8:	mov	w1, w9
  432fdc:	mov	x0, x14
  432fe0:	bl	431a80 <ferror@plt+0x2f200>
  432fe4:	cbnz	x0, 432fa8 <ferror@plt+0x30728>
  432fe8:	ldr	x1, [sp, #24]
  432fec:	cbz	x1, 433000 <ferror@plt+0x30780>
  432ff0:	ldr	w2, [x1]
  432ff4:	cmp	w2, w15
  432ff8:	b.hi	432f60 <ferror@plt+0x306e0>  // b.pmore
  432ffc:	nop
  433000:	cbz	x13, 433008 <ferror@plt+0x30788>
  433004:	str	x1, [x13]
  433008:	mov	w0, w10
  43300c:	ldp	x29, x30, [sp], #32
  433010:	ret
  433014:	mov	x0, #0x0                   	// #0
  433018:	b	432f50 <ferror@plt+0x306d0>
  43301c:	and	w0, w10, #0x7fffffff
  433020:	mov	w2, #0x18                  	// #24
  433024:	ldr	x1, [x14, #104]
  433028:	umull	x0, w0, w2
  43302c:	ldr	w0, [x1, x0]
  433030:	cmp	w0, #0x1
  433034:	b.ls	433048 <ferror@plt+0x307c8>  // b.plast
  433038:	mov	w9, w10
  43303c:	b	432ee8 <ferror@plt+0x30668>
  433040:	mov	x0, #0x0                   	// #0
  433044:	b	432fe8 <ferror@plt+0x30768>
  433048:	mov	x0, #0x0                   	// #0
  43304c:	ldrb	w0, [x0, #5]
  433050:	brk	#0x3e8
  433054:	nop
  433058:	stp	xzr, xzr, [x8]
  43305c:	stp	xzr, xzr, [x8, #16]
  433060:	tbz	w2, #31, 433084 <ferror@plt+0x30804>
  433064:	and	w2, w2, #0x7fffffff
  433068:	mov	w4, #0x18                  	// #24
  43306c:	ldr	x3, [x0, #104]
  433070:	umull	x2, w2, w4
  433074:	add	x4, x3, x2
  433078:	ldr	w2, [x3, x2]
  43307c:	ldr	x3, [x4, #16]
  433080:	str	x3, [x8, #16]
  433084:	cmp	w2, #0x1
  433088:	b.ls	43313c <ferror@plt+0x308bc>  // b.plast
  43308c:	stp	x29, x30, [sp, #-16]!
  433090:	mov	x29, sp
  433094:	cbz	x1, 433140 <ferror@plt+0x308c0>
  433098:	tbnz	w2, #31, 4330c0 <ferror@plt+0x30840>
  43309c:	mov	w0, #0x6fffffff            	// #1879048191
  4330a0:	cmp	w2, w0
  4330a4:	b.ls	4330e8 <ferror@plt+0x30868>  // b.plast
  4330a8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4330ac:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4330b0:	add	x2, x2, #0x2c8
  4330b4:	add	x0, x0, #0x290
  4330b8:	mov	w1, #0x6c5                 	// #1733
  4330bc:	bl	4028b0 <ferror@plt+0x30>
  4330c0:	and	w3, w2, #0x7fffffff
  4330c4:	mov	w4, #0x18                  	// #24
  4330c8:	ldr	x0, [x0, #104]
  4330cc:	mov	w5, #0x90000000            	// #-1879048192
  4330d0:	umull	x3, w3, w4
  4330d4:	mov	w4, #0xfffffff             	// #268435455
  4330d8:	ldr	w0, [x0, x3]
  4330dc:	add	w0, w0, w5
  4330e0:	cmp	w0, w4
  4330e4:	b.ls	4330a8 <ferror@plt+0x30828>  // b.plast
  4330e8:	ldrb	w3, [x1, #6]
  4330ec:	mov	w0, #0x1                   	// #1
  4330f0:	ldr	w4, [x1]
  4330f4:	ldrb	w5, [x1, #7]
  4330f8:	ldrb	w6, [x1, #5]
  4330fc:	sub	w2, w2, w4
  433100:	lsl	w0, w0, w3
  433104:	sub	w0, w0, #0x1
  433108:	ldr	w4, [x1, #16]
  43310c:	and	w0, w0, w2
  433110:	cmp	w6, #0x0
  433114:	lsr	w2, w2, w3
  433118:	ldr	x3, [x1, #8]
  43311c:	add	w2, w2, w4
  433120:	cset	w1, ne  // ne = any
  433124:	lsr	w0, w0, w5
  433128:	str	x3, [x8]
  43312c:	stp	w2, w0, [x8, #8]
  433130:	strb	w1, [x8, #24]
  433134:	ldp	x29, x30, [sp], #16
  433138:	ret
  43313c:	ret
  433140:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433144:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433148:	add	x2, x2, #0x2c8
  43314c:	add	x0, x0, #0x290
  433150:	mov	w1, #0x6bd                 	// #1725
  433154:	bl	4028b0 <ferror@plt+0x30>
  433158:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43315c:	add	x4, x4, #0x460
  433160:	stp	x29, x30, [sp, #-96]!
  433164:	adrp	x5, 49e000 <_obstack_memory_used@@Base+0x416d8>
  433168:	mov	x29, sp
  43316c:	ldp	x6, x7, [x4]
  433170:	stp	x19, x20, [sp, #16]
  433174:	mov	x19, x0
  433178:	ldr	x0, [x5, #1312]
  43317c:	stp	x6, x7, [sp, #56]
  433180:	cmp	x19, #0x0
  433184:	ldp	x6, x7, [x4, #16]
  433188:	stp	x21, x22, [sp, #32]
  43318c:	csel	x19, x0, x19, eq  // eq = none
  433190:	ldr	x5, [x4, #32]
  433194:	stp	x6, x7, [sp, #72]
  433198:	mov	x21, x1
  43319c:	str	x5, [sp, #88]
  4331a0:	mov	w0, w2
  4331a4:	tst	w3, #0xff
  4331a8:	b.ne	433278 <ferror@plt+0x309f8>  // b.any
  4331ac:	mov	w1, #0x18                  	// #24
  4331b0:	smull	x1, w2, w1
  4331b4:	ldr	x2, [x21]
  4331b8:	add	x22, x2, x1
  4331bc:	ldr	w4, [x2, x1]
  4331c0:	ldrb	w1, [x22, #4]
  4331c4:	cmp	w1, #0x4
  4331c8:	b.ls	4332d8 <ferror@plt+0x30a58>  // b.plast
  4331cc:	adrp	x5, 46d000 <_obstack_memory_used@@Base+0x106d8>
  4331d0:	add	x5, x5, #0xf20
  4331d4:	ldrb	w2, [x22, #5]
  4331d8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4331dc:	adrp	x6, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4331e0:	add	x1, x1, #0x2f0
  4331e4:	cmp	w2, #0x0
  4331e8:	add	x6, x6, #0x2e8
  4331ec:	mov	w2, w0
  4331f0:	csel	x6, x6, x1, ne  // ne = any
  4331f4:	mov	x3, x22
  4331f8:	mov	x0, x19
  4331fc:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433200:	add	x1, x1, #0x2f8
  433204:	bl	402840 <fprintf@plt>
  433208:	ldr	w1, [x22, #20]
  43320c:	mov	x0, x21
  433210:	bl	430d68 <ferror@plt+0x2e4e8>
  433214:	mov	x20, x0
  433218:	ldr	w3, [x22, #16]
  43321c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433220:	ldr	x2, [x22, #8]
  433224:	mov	x0, x19
  433228:	add	x1, x1, #0x358
  43322c:	bl	402840 <fprintf@plt>
  433230:	cbz	x20, 4332e8 <ferror@plt+0x30a68>
  433234:	ldr	x2, [x21]
  433238:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43323c:	movk	x0, #0xaaab
  433240:	sub	x2, x20, x2
  433244:	ldr	x3, [x20, #8]
  433248:	asr	x2, x2, #3
  43324c:	mul	w2, w2, w0
  433250:	mov	x0, x19
  433254:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433258:	add	x1, x1, #0x340
  43325c:	bl	402840 <fprintf@plt>
  433260:	mov	x1, x19
  433264:	mov	w0, #0xa                   	// #10
  433268:	ldp	x19, x20, [sp, #16]
  43326c:	ldp	x21, x22, [sp, #32]
  433270:	ldp	x29, x30, [sp], #96
  433274:	b	402340 <fputc@plt>
  433278:	ldr	x1, [x1, #24]
  43327c:	sbfiz	x0, x2, #5, #32
  433280:	adrp	x6, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433284:	add	x6, x6, #0x2f0
  433288:	add	x20, x1, x0
  43328c:	ldr	w4, [x1, x0]
  433290:	mov	x3, x20
  433294:	mov	x0, x19
  433298:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43329c:	add	x1, x1, #0x2f8
  4332a0:	bl	402840 <fprintf@plt>
  4332a4:	ldr	x2, [x20, #8]
  4332a8:	mov	x0, x19
  4332ac:	ldr	w3, [x20, #4]
  4332b0:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4332b4:	add	x1, x1, #0x328
  4332b8:	ldr	x2, [x2]
  4332bc:	bl	402840 <fprintf@plt>
  4332c0:	mov	x1, x19
  4332c4:	mov	w0, #0xa                   	// #10
  4332c8:	ldp	x19, x20, [sp, #16]
  4332cc:	ldp	x21, x22, [sp, #32]
  4332d0:	ldp	x29, x30, [sp], #96
  4332d4:	b	402340 <fputc@plt>
  4332d8:	add	x2, sp, #0x60
  4332dc:	add	x1, x2, w1, uxtb #3
  4332e0:	ldur	x5, [x1, #-40]
  4332e4:	b	4331d4 <ferror@plt+0x30954>
  4332e8:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4332ec:	mov	w2, #0xffffffff            	// #-1
  4332f0:	add	x3, x3, #0x2e0
  4332f4:	b	433250 <ferror@plt+0x309d0>
  4332f8:	sub	sp, sp, #0x80
  4332fc:	stp	x29, x30, [sp, #32]
  433300:	add	x29, sp, #0x20
  433304:	stp	x19, x20, [sp, #48]
  433308:	mov	x20, x0
  43330c:	mov	w19, w1
  433310:	str	x21, [sp, #64]
  433314:	mov	x21, x2
  433318:	tbnz	w1, #31, 433334 <ferror@plt+0x30ab4>
  43331c:	cbnz	w19, 43334c <ferror@plt+0x30acc>
  433320:	ldp	x29, x30, [sp, #32]
  433324:	ldp	x19, x20, [sp, #48]
  433328:	ldr	x21, [sp, #64]
  43332c:	add	sp, sp, #0x80
  433330:	ret
  433334:	and	w19, w1, #0x7fffffff
  433338:	mov	w1, #0x18                  	// #24
  43333c:	ldr	x0, [x0, #104]
  433340:	umull	x19, w19, w1
  433344:	ldr	w19, [x0, x19]
  433348:	cbz	w19, 433320 <ferror@plt+0x30aa0>
  43334c:	add	x3, sp, #0x78
  433350:	mov	w1, w19
  433354:	mov	x0, x20
  433358:	mov	w2, #0x2                   	// #2
  43335c:	bl	432b40 <ferror@plt+0x302c0>
  433360:	mov	w9, w0
  433364:	ldr	x7, [sp, #120]
  433368:	cbz	x7, 4333f0 <ferror@plt+0x30b70>
  43336c:	ldrb	w4, [x7, #6]
  433370:	mov	w3, #0x1                   	// #1
  433374:	ldrb	w6, [x7, #5]
  433378:	ldr	w1, [x7]
  43337c:	ldrb	w2, [x7, #7]
  433380:	cmp	w6, #0x0
  433384:	sub	w1, w9, w1
  433388:	lsl	w5, w3, w4
  43338c:	sub	w5, w5, #0x1
  433390:	cset	w6, ne  // ne = any
  433394:	and	w5, w5, w1
  433398:	cmp	w19, w0
  43339c:	ldr	w0, [x7, #16]
  4333a0:	lsr	w1, w1, w4
  4333a4:	lsr	w5, w5, w2
  4333a8:	add	w4, w1, w0
  4333ac:	ldr	x2, [x7, #8]
  4333b0:	b.eq	433410 <ferror@plt+0x30b90>  // b.none
  4333b4:	mov	w1, w3
  4333b8:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4333bc:	add	x3, x3, #0x370
  4333c0:	str	w1, [sp]
  4333c4:	mov	x0, x21
  4333c8:	str	w19, [sp, #8]
  4333cc:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4333d0:	str	w9, [sp, #16]
  4333d4:	add	x1, x1, #0x378
  4333d8:	bl	402840 <fprintf@plt>
  4333dc:	ldp	x29, x30, [sp, #32]
  4333e0:	ldp	x19, x20, [sp, #48]
  4333e4:	ldr	x21, [sp, #64]
  4333e8:	add	sp, sp, #0x80
  4333ec:	ret
  4333f0:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4333f4:	add	x3, x3, #0x148
  4333f8:	mov	w1, #0xffffffff            	// #-1
  4333fc:	mov	x2, x3
  433400:	mov	w6, w1
  433404:	mov	w5, w1
  433408:	mov	w4, w1
  43340c:	b	4333c0 <ferror@plt+0x30b40>
  433410:	ldr	w1, [x7, #20]
  433414:	mov	x0, x20
  433418:	str	x2, [sp, #88]
  43341c:	stp	w4, w5, [sp, #100]
  433420:	str	w6, [sp, #108]
  433424:	bl	430d68 <ferror@plt+0x2e4e8>
  433428:	ldp	w4, w5, [sp, #100]
  43342c:	ldr	w6, [sp, #108]
  433430:	ldr	x2, [sp, #88]
  433434:	cbz	x0, 433448 <ferror@plt+0x30bc8>
  433438:	mov	w1, #0x0                   	// #0
  43343c:	ldr	x3, [x0, #8]
  433440:	ldr	x7, [sp, #120]
  433444:	b	4333c0 <ferror@plt+0x30b40>
  433448:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43344c:	mov	w1, #0x0                   	// #0
  433450:	add	x3, x3, #0x368
  433454:	ldr	x7, [sp, #120]
  433458:	b	4333c0 <ferror@plt+0x30b40>
  43345c:	nop
  433460:	cbz	x0, 43352c <ferror@plt+0x30cac>
  433464:	stp	x29, x30, [sp, #-64]!
  433468:	mov	x29, sp
  43346c:	stp	x19, x20, [sp, #16]
  433470:	ldr	w19, [x0, #12]
  433474:	stp	x23, x24, [sp, #48]
  433478:	mov	x23, x0
  43347c:	cbz	w19, 4334d4 <ferror@plt+0x30c54>
  433480:	subs	w19, w19, #0x1
  433484:	b.mi	4334d4 <ferror@plt+0x30c54>  // b.first
  433488:	mov	w20, #0x18                  	// #24
  43348c:	mov	x24, x1
  433490:	stp	x21, x22, [sp, #32]
  433494:	mov	x22, x2
  433498:	smull	x20, w19, w20
  43349c:	sxtw	x21, w19
  4334a0:	ldr	x3, [x23]
  4334a4:	mov	x1, x24
  4334a8:	add	x3, x3, x20
  4334ac:	sub	x20, x20, #0x18
  4334b0:	ldr	x0, [x3, #8]
  4334b4:	cbz	x0, 4334c0 <ferror@plt+0x30c40>
  4334b8:	bl	45b028 <ferror@plt+0x587a8>
  4334bc:	cbz	w0, 4334e8 <ferror@plt+0x30c68>
  4334c0:	sub	w19, w19, #0x1
  4334c4:	sub	x21, x21, #0x1
  4334c8:	cmn	w19, #0x1
  4334cc:	b.ne	4334a0 <ferror@plt+0x30c20>  // b.any
  4334d0:	ldp	x21, x22, [sp, #32]
  4334d4:	mov	w0, #0x0                   	// #0
  4334d8:	ldp	x19, x20, [sp, #16]
  4334dc:	ldp	x23, x24, [sp, #48]
  4334e0:	ldp	x29, x30, [sp], #64
  4334e4:	ret
  4334e8:	ldr	w0, [x23, #12]
  4334ec:	sub	w0, w0, #0x1
  4334f0:	cmp	w0, w19
  4334f4:	b.eq	433534 <ferror@plt+0x30cb4>  // b.none
  4334f8:	add	x21, x21, #0x1
  4334fc:	ldr	x0, [x23]
  433500:	add	x21, x21, x21, lsl #1
  433504:	lsl	x21, x21, #3
  433508:	ldr	w1, [x0, x21]
  43350c:	sub	w1, w1, #0x1
  433510:	str	w1, [x22]
  433514:	mov	w0, #0x1                   	// #1
  433518:	ldp	x19, x20, [sp, #16]
  43351c:	ldp	x21, x22, [sp, #32]
  433520:	ldp	x23, x24, [sp, #48]
  433524:	ldp	x29, x30, [sp], #64
  433528:	ret
  43352c:	mov	w0, #0x0                   	// #0
  433530:	ret
  433534:	ldr	w1, [x23, #56]
  433538:	b	433510 <ferror@plt+0x30c90>
  43353c:	nop
  433540:	ldp	w13, w15, [x0, #8]
  433544:	mov	w2, #0x18                  	// #24
  433548:	ldp	w16, w12, [x0, #32]
  43354c:	ldr	x9, [x0, #24]
  433550:	umull	x17, w13, w2
  433554:	umull	x14, w15, w2
  433558:	lsl	x16, x16, #5
  43355c:	cbz	x9, 43360c <ferror@plt+0x30d8c>
  433560:	sub	w11, w12, #0x1
  433564:	mov	x3, #0x0                   	// #0
  433568:	mov	x10, #0x0                   	// #0
  43356c:	sbfiz	x11, x11, #5, #32
  433570:	adds	x11, x9, x11
  433574:	b.cs	4335c0 <ferror@plt+0x30d40>  // b.hs, b.nlast
  433578:	ldr	w8, [x9, #4]
  43357c:	lsl	w8, w8, #1
  433580:	add	x10, x10, w8, uxtw #2
  433584:	cbz	w8, 4335b4 <ferror@plt+0x30d34>
  433588:	ldr	x4, [x9, #16]
  43358c:	mov	w2, #0x0                   	// #0
  433590:	add	w7, w2, #0x1
  433594:	ldr	w6, [x4, w2, uxtw #2]
  433598:	add	x5, x3, #0x4
  43359c:	add	w2, w2, #0x2
  4335a0:	ldr	w7, [x4, x7, lsl #2]
  4335a4:	cmp	w7, w6
  4335a8:	csel	x3, x5, x3, eq  // eq = none
  4335ac:	cmp	w8, w2
  4335b0:	b.hi	433590 <ferror@plt+0x30d10>  // b.pmore
  4335b4:	add	x9, x9, #0x20
  4335b8:	cmp	x11, x9
  4335bc:	b.cs	433578 <ferror@plt+0x30cf8>  // b.hs, b.nlast
  4335c0:	ldp	w5, w4, [x0, #96]
  4335c4:	mov	w8, #0x18                  	// #24
  4335c8:	adrp	x7, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4335cc:	adrp	x6, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4335d0:	mov	w2, w12
  4335d4:	mov	w13, w13
  4335d8:	ldr	w7, [x7, #1940]
  4335dc:	umull	x0, w4, w8
  4335e0:	ldr	w6, [x6, #1936]
  4335e4:	mov	w15, w15
  4335e8:	lsl	x4, x2, #5
  4335ec:	stp	x13, x15, [x1]
  4335f0:	stp	x17, x14, [x1, #16]
  4335f4:	stp	x7, x6, [x1, #32]
  4335f8:	stp	x2, x16, [x1, #48]
  4335fc:	stp	x4, x10, [x1, #64]
  433600:	stp	x3, x0, [x1, #80]
  433604:	str	x5, [x1, #96]
  433608:	ret
  43360c:	mov	x3, #0x0                   	// #0
  433610:	mov	x10, #0x0                   	// #0
  433614:	b	4335c0 <ferror@plt+0x30d40>
  433618:	cbz	x1, 4337dc <ferror@plt+0x30f5c>
  43361c:	stp	x29, x30, [sp, #-80]!
  433620:	mov	x29, sp
  433624:	stp	x19, x20, [sp, #16]
  433628:	mov	x20, x1
  43362c:	mov	x19, x0
  433630:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  433634:	stp	x21, x22, [sp, #32]
  433638:	mov	w22, w2
  43363c:	ldr	x0, [x0, #1312]
  433640:	cmp	x19, #0x0
  433644:	ldr	w2, [x20, #12]
  433648:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43364c:	csel	x19, x0, x19, eq  // eq = none
  433650:	add	x1, x1, #0x3b0
  433654:	mov	x0, x19
  433658:	stp	x23, x24, [sp, #48]
  43365c:	mov	w23, w3
  433660:	bl	402840 <fprintf@plt>
  433664:	ldr	w2, [x20, #36]
  433668:	mov	x0, x19
  43366c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433670:	add	x1, x1, #0x3d0
  433674:	bl	402840 <fprintf@plt>
  433678:	ldr	w2, [x20, #48]
  43367c:	mov	x0, x19
  433680:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433684:	add	x1, x1, #0x3f0
  433688:	bl	402840 <fprintf@plt>
  43368c:	ldr	w2, [x20, #56]
  433690:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433694:	mov	x0, x19
  433698:	add	x1, x1, #0x410
  43369c:	bl	402840 <fprintf@plt>
  4336a0:	cbnz	w22, 4336bc <ferror@plt+0x30e3c>
  4336a4:	cbnz	w23, 433718 <ferror@plt+0x30e98>
  4336a8:	ldp	x19, x20, [sp, #16]
  4336ac:	ldp	x21, x22, [sp, #32]
  4336b0:	ldp	x23, x24, [sp, #48]
  4336b4:	ldp	x29, x30, [sp], #80
  4336b8:	ret
  4336bc:	mov	x3, x19
  4336c0:	mov	w21, #0x0                   	// #0
  4336c4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4336c8:	mov	x2, #0x14                  	// #20
  4336cc:	mov	x1, #0x1                   	// #1
  4336d0:	add	x0, x0, #0x430
  4336d4:	bl	402680 <fwrite@plt>
  4336d8:	b	4336e8 <ferror@plt+0x30e68>
  4336dc:	bl	433158 <ferror@plt+0x308d8>
  4336e0:	cmp	w22, w21
  4336e4:	b.eq	433708 <ferror@plt+0x30e88>  // b.none
  4336e8:	ldr	w4, [x20, #12]
  4336ec:	mov	w2, w21
  4336f0:	mov	x1, x20
  4336f4:	mov	x0, x19
  4336f8:	cmp	w4, w21
  4336fc:	mov	w3, #0x0                   	// #0
  433700:	add	w21, w21, #0x1
  433704:	b.hi	4336dc <ferror@plt+0x30e5c>  // b.pmore
  433708:	mov	x1, x19
  43370c:	mov	w0, #0xa                   	// #10
  433710:	bl	402340 <fputc@plt>
  433714:	cbz	w23, 4336a8 <ferror@plt+0x30e28>
  433718:	mov	x3, x19
  43371c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433720:	mov	x2, #0x11                  	// #17
  433724:	add	x0, x0, #0x448
  433728:	mov	x1, #0x1                   	// #1
  43372c:	adrp	x24, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433730:	mov	w21, #0x0                   	// #0
  433734:	add	x24, x24, #0x220
  433738:	stp	x25, x26, [sp, #64]
  43373c:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433740:	adrp	x26, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433744:	add	x25, x25, #0x2f0
  433748:	bl	402680 <fwrite@plt>
  43374c:	b	433794 <ferror@plt+0x30f14>
  433750:	ldr	x7, [x20, #24]
  433754:	add	x22, x7, x4
  433758:	ldr	w4, [x7, x4]
  43375c:	mov	x3, x22
  433760:	bl	402840 <fprintf@plt>
  433764:	ldr	x2, [x22, #8]
  433768:	mov	x0, x19
  43376c:	ldr	w3, [x22, #4]
  433770:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  433774:	add	x1, x1, #0x328
  433778:	ldr	x2, [x2]
  43377c:	bl	402840 <fprintf@plt>
  433780:	mov	x1, x19
  433784:	mov	w0, #0xa                   	// #10
  433788:	bl	402340 <fputc@plt>
  43378c:	cmp	w23, w21
  433790:	b.eq	4337bc <ferror@plt+0x30f3c>  // b.none
  433794:	ldr	w3, [x20, #36]
  433798:	sbfiz	x4, x21, #5, #32
  43379c:	mov	w2, w21
  4337a0:	mov	x6, x25
  4337a4:	cmp	w3, w21
  4337a8:	mov	x5, x24
  4337ac:	add	x1, x26, #0x2f8
  4337b0:	mov	x0, x19
  4337b4:	add	w21, w21, #0x1
  4337b8:	b.hi	433750 <ferror@plt+0x30ed0>  // b.pmore
  4337bc:	mov	x1, x19
  4337c0:	mov	w0, #0xa                   	// #10
  4337c4:	ldp	x19, x20, [sp, #16]
  4337c8:	ldp	x21, x22, [sp, #32]
  4337cc:	ldp	x23, x24, [sp, #48]
  4337d0:	ldp	x25, x26, [sp, #64]
  4337d4:	ldp	x29, x30, [sp], #80
  4337d8:	b	402340 <fputc@plt>
  4337dc:	ret
  4337e0:	mov	x4, x0
  4337e4:	mov	w6, #0x1                   	// #1
  4337e8:	str	x1, [x4], #8
  4337ec:	str	wzr, [x4, #56]
  4337f0:	str	xzr, [x4, #64]
  4337f4:	str	w6, [x0, #8]
  4337f8:	stp	w2, wzr, [x0, #16]
  4337fc:	str	x3, [x0, #24]
  433800:	str	wzr, [x0, #80]
  433804:	strb	wzr, [x0, #84]
  433808:	str	wzr, [x0, #120]
  43380c:	str	wzr, [x0, #144]
  433810:	str	xzr, [x0, #152]
  433814:	strh	wzr, [x0, #160]
  433818:	ret
  43381c:	nop
  433820:	stp	x29, x30, [sp, #-64]!
  433824:	mov	x29, sp
  433828:	stp	x21, x22, [sp, #32]
  43382c:	mov	x21, x0
  433830:	mov	x22, x0
  433834:	stp	x19, x20, [sp, #16]
  433838:	mov	w19, #0x0                   	// #0
  43383c:	ldr	w3, [x21, #120]!
  433840:	str	x23, [sp, #48]
  433844:	mov	x23, #0xfffffffffffffff0    	// #-16
  433848:	cbz	w3, 433894 <ferror@plt+0x31014>
  43384c:	nop
  433850:	add	x4, x23, w19, sxtw #3
  433854:	cmp	w19, #0x1
  433858:	sxtw	x2, w19
  43385c:	b.le	4338d0 <ferror@plt+0x31050>
  433860:	ldr	x1, [x21, #32]
  433864:	add	x1, x1, x4
  433868:	ldr	x20, [x1]
  43386c:	cbz	x20, 4338b4 <ferror@plt+0x31034>
  433870:	ldr	x0, [x20, #8]
  433874:	add	w19, w19, #0x1
  433878:	bl	402640 <free@plt>
  43387c:	mov	x0, x20
  433880:	mov	x1, #0x18                  	// #24
  433884:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  433888:	ldr	w3, [x22, #120]
  43388c:	cmp	w3, w19
  433890:	b.hi	433850 <ferror@plt+0x30fd0>  // b.pmore
  433894:	ldr	x0, [x21, #32]
  433898:	bl	402640 <free@plt>
  43389c:	ldp	x19, x20, [sp, #16]
  4338a0:	ldr	x23, [sp, #48]
  4338a4:	ldr	x0, [x22, #72]
  4338a8:	ldp	x21, x22, [sp, #32]
  4338ac:	ldp	x29, x30, [sp], #64
  4338b0:	b	402640 <free@plt>
  4338b4:	add	w19, w19, #0x1
  4338b8:	cmp	w3, w19
  4338bc:	b.ls	433894 <ferror@plt+0x31014>  // b.plast
  4338c0:	add	x4, x23, w19, sxtw #3
  4338c4:	cmp	w19, #0x1
  4338c8:	sxtw	x2, w19
  4338cc:	b.gt	433860 <ferror@plt+0x30fe0>
  4338d0:	add	x1, x2, #0x1
  4338d4:	add	x1, x21, x1, lsl #3
  4338d8:	b	433868 <ferror@plt+0x30fe8>
  4338dc:	nop
  4338e0:	cmp	w1, #0x2
  4338e4:	sbfiz	x1, x1, #4, #32
  4338e8:	b.gt	4338fc <ferror@plt+0x3107c>
  4338ec:	add	x0, x0, x1
  4338f0:	add	x0, x0, #0x10
  4338f4:	ldr	w0, [x0]
  4338f8:	ret
  4338fc:	ldr	x0, [x0, #72]
  433900:	sub	x1, x1, #0x30
  433904:	add	x0, x0, x1
  433908:	ldr	w0, [x0]
  43390c:	ret
  433910:	cmp	w1, #0x2
  433914:	sbfiz	x1, x1, #4, #32
  433918:	b.gt	433928 <ferror@plt+0x310a8>
  43391c:	add	x0, x0, x1
  433920:	add	x0, x0, #0x10
  433924:	ret
  433928:	ldr	x0, [x0, #72]
  43392c:	sub	x1, x1, #0x30
  433930:	add	x0, x0, x1
  433934:	ret
  433938:	cmp	w1, #0x2
  43393c:	sbfiz	x1, x1, #4, #32
  433940:	b.gt	433950 <ferror@plt+0x310d0>
  433944:	add	x0, x0, x1
  433948:	add	x0, x0, #0x10
  43394c:	ret
  433950:	ldr	x0, [x0, #72]
  433954:	sub	x1, x1, #0x30
  433958:	add	x0, x0, x1
  43395c:	ret
  433960:	stp	x29, x30, [sp, #-80]!
  433964:	mov	x29, sp
  433968:	stp	x19, x20, [sp, #16]
  43396c:	mov	x20, x8
  433970:	mov	x19, x0
  433974:	cbnz	w1, 4339a8 <ferror@plt+0x31128>
  433978:	ldrb	w0, [x0, #84]
  43397c:	str	x21, [sp, #32]
  433980:	add	x21, x19, #0x58
  433984:	cbz	w0, 4339e8 <ferror@plt+0x31168>
  433988:	ldp	x0, x1, [x21, #16]
  43398c:	stp	x0, x1, [x20, #16]
  433990:	ldp	x0, x1, [x19, #88]
  433994:	stp	x0, x1, [x20]
  433998:	ldp	x19, x20, [sp, #16]
  43399c:	ldr	x21, [sp, #32]
  4339a0:	ldp	x29, x30, [sp], #80
  4339a4:	ret
  4339a8:	cmp	w1, #0x2
  4339ac:	sbfiz	x0, x1, #4, #32
  4339b0:	b.le	4339dc <ferror@plt+0x3115c>
  4339b4:	ldr	x19, [x19, #72]
  4339b8:	sub	x0, x0, #0x30
  4339bc:	add	x19, x19, x0
  4339c0:	ldr	w0, [x19]
  4339c4:	mov	x8, x20
  4339c8:	mov	w1, #0x0                   	// #0
  4339cc:	bl	415f10 <ferror@plt+0x13690>
  4339d0:	ldp	x19, x20, [sp, #16]
  4339d4:	ldp	x29, x30, [sp], #80
  4339d8:	ret
  4339dc:	add	x19, x19, x0
  4339e0:	add	x19, x19, #0x10
  4339e4:	b	4339c0 <ferror@plt+0x31140>
  4339e8:	ldr	w0, [x19, #16]
  4339ec:	add	x8, sp, #0x30
  4339f0:	bl	415f10 <ferror@plt+0x13690>
  4339f4:	ldp	x2, x3, [sp, #48]
  4339f8:	stp	x2, x3, [x19, #88]
  4339fc:	ldr	w0, [x19, #80]
  433a00:	ldp	x2, x3, [sp, #64]
  433a04:	stp	x2, x3, [x21, #16]
  433a08:	cbz	w0, 433a10 <ferror@plt+0x31190>
  433a0c:	str	w0, [x19, #100]
  433a10:	mov	w0, #0x1                   	// #1
  433a14:	strb	w0, [x19, #84]
  433a18:	b	433988 <ferror@plt+0x31108>
  433a1c:	nop
  433a20:	str	w1, [x0, #80]
  433a24:	strb	wzr, [x0, #84]
  433a28:	ret
  433a2c:	nop
  433a30:	stp	x29, x30, [sp, #-64]!
  433a34:	mov	x29, sp
  433a38:	ldr	w4, [x0, #8]
  433a3c:	stp	x19, x20, [sp, #16]
  433a40:	mov	x20, x3
  433a44:	cmp	w4, #0x2
  433a48:	stp	x21, x22, [sp, #32]
  433a4c:	mov	w22, w1
  433a50:	add	w1, w4, #0x1
  433a54:	str	x23, [sp, #48]
  433a58:	mov	w21, w2
  433a5c:	str	w1, [x0, #8]
  433a60:	add	x23, x0, #0x8
  433a64:	b.gt	433a94 <ferror@plt+0x31214>
  433a68:	mov	x0, #0x8                   	// #8
  433a6c:	add	x4, x0, w4, sxtw #4
  433a70:	add	x0, x23, x4
  433a74:	ldp	x19, x20, [sp, #16]
  433a78:	str	w22, [x23, x4]
  433a7c:	str	w2, [x0, #4]
  433a80:	str	x3, [x0, #8]
  433a84:	ldp	x21, x22, [sp, #32]
  433a88:	ldr	x23, [sp, #48]
  433a8c:	ldp	x29, x30, [sp], #64
  433a90:	ret
  433a94:	ldr	x0, [x23, #64]
  433a98:	sub	w19, w4, #0x3
  433a9c:	cbz	x0, 433ad4 <ferror@plt+0x31254>
  433aa0:	ldr	w1, [x23, #56]
  433aa4:	cmp	w19, w1
  433aa8:	b.ge	433aec <ferror@plt+0x3126c>  // b.tcont
  433aac:	sbfiz	x4, x19, #4, #32
  433ab0:	add	x1, x0, x4
  433ab4:	ldr	x23, [sp, #48]
  433ab8:	str	w22, [x0, x4]
  433abc:	str	w21, [x1, #4]
  433ac0:	str	x20, [x1, #8]
  433ac4:	ldp	x19, x20, [sp, #16]
  433ac8:	ldp	x21, x22, [sp, #32]
  433acc:	ldp	x29, x30, [sp], #64
  433ad0:	ret
  433ad4:	mov	w0, #0x10                  	// #16
  433ad8:	str	w0, [x23, #56]
  433adc:	mov	x0, #0x100                 	// #256
  433ae0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  433ae4:	str	x0, [x23, #64]
  433ae8:	b	433aac <ferror@plt+0x3122c>
  433aec:	lsl	w1, w1, #1
  433af0:	str	w1, [x23, #56]
  433af4:	sbfiz	x1, x1, #4, #32
  433af8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  433afc:	str	x0, [x23, #64]
  433b00:	b	433aac <ferror@plt+0x3122c>
  433b04:	nop
  433b08:	stp	x29, x30, [sp, #-64]!
  433b0c:	mov	x29, sp
  433b10:	stp	x19, x20, [sp, #16]
  433b14:	mov	w19, w1
  433b18:	ldr	w1, [x0, #8]
  433b1c:	mov	x20, x0
  433b20:	cmp	w1, w19
  433b24:	b.eq	433b68 <ferror@plt+0x312e8>  // b.none
  433b28:	cmp	w19, #0x2
  433b2c:	sbfiz	x4, x19, #4, #32
  433b30:	b.gt	433b54 <ferror@plt+0x312d4>
  433b34:	add	x1, x0, x4
  433b38:	add	x1, x1, #0x10
  433b3c:	stp	w2, w3, [x1]
  433b40:	cbnz	w19, 433b48 <ferror@plt+0x312c8>
  433b44:	strb	wzr, [x20, #84]
  433b48:	ldp	x19, x20, [sp, #16]
  433b4c:	ldp	x29, x30, [sp], #64
  433b50:	ret
  433b54:	ldr	x1, [x0, #72]
  433b58:	sub	x4, x4, #0x30
  433b5c:	add	x1, x1, x4
  433b60:	stp	w2, w3, [x1]
  433b64:	b	433b40 <ferror@plt+0x312c0>
  433b68:	stp	x21, x22, [sp, #32]
  433b6c:	add	w0, w19, #0x1
  433b70:	cmp	w19, #0x2
  433b74:	str	w0, [x20, #8]
  433b78:	add	x21, x20, #0x8
  433b7c:	b.le	433bb4 <ferror@plt+0x31334>
  433b80:	ldr	x0, [x21, #64]
  433b84:	sub	w22, w19, #0x3
  433b88:	cbz	x0, 433bf4 <ferror@plt+0x31374>
  433b8c:	ldr	w1, [x21, #56]
  433b90:	cmp	w22, w1
  433b94:	b.ge	433bd4 <ferror@plt+0x31354>  // b.tcont
  433b98:	sbfiz	x1, x22, #4, #32
  433b9c:	add	x4, x0, x1
  433ba0:	ldp	x21, x22, [sp, #32]
  433ba4:	str	w2, [x0, x1]
  433ba8:	str	w3, [x4, #4]
  433bac:	str	xzr, [x4, #8]
  433bb0:	b	433b40 <ferror@plt+0x312c0>
  433bb4:	mov	x0, #0x8                   	// #8
  433bb8:	add	x0, x0, w19, sxtw #4
  433bbc:	add	x1, x21, x0
  433bc0:	str	w2, [x21, x0]
  433bc4:	ldp	x21, x22, [sp, #32]
  433bc8:	str	w3, [x1, #4]
  433bcc:	str	xzr, [x1, #8]
  433bd0:	b	433b40 <ferror@plt+0x312c0>
  433bd4:	lsl	w1, w1, #1
  433bd8:	str	w1, [x21, #56]
  433bdc:	stp	w2, w3, [sp, #56]
  433be0:	sbfiz	x1, x1, #4, #32
  433be4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  433be8:	ldp	w2, w3, [sp, #56]
  433bec:	str	x0, [x21, #64]
  433bf0:	b	433b98 <ferror@plt+0x31318>
  433bf4:	mov	w0, #0x10                  	// #16
  433bf8:	str	w0, [x21, #56]
  433bfc:	mov	x0, #0x100                 	// #256
  433c00:	stp	w2, w3, [sp, #56]
  433c04:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  433c08:	str	x0, [x21, #64]
  433c0c:	ldp	w2, w3, [sp, #56]
  433c10:	b	433b98 <ferror@plt+0x31318>
  433c14:	nop
  433c18:	ldr	w1, [x0, #120]
  433c1c:	cbz	w1, 433c58 <ferror@plt+0x313d8>
  433c20:	sub	w1, w1, #0x1
  433c24:	cmp	w1, #0x1
  433c28:	sxtw	x2, w1
  433c2c:	b.le	433c48 <ferror@plt+0x313c8>
  433c30:	ldr	x0, [x0, #152]
  433c34:	mov	x2, #0xfffffffffffffff0    	// #-16
  433c38:	add	x1, x2, w1, sxtw #3
  433c3c:	add	x1, x0, x1
  433c40:	ldr	x0, [x1]
  433c44:	ret
  433c48:	add	x1, x0, x2, lsl #3
  433c4c:	add	x1, x1, #0x80
  433c50:	ldr	x0, [x1]
  433c54:	b	433c44 <ferror@plt+0x313c4>
  433c58:	mov	x0, #0x0                   	// #0
  433c5c:	ret
  433c60:	stp	x29, x30, [sp, #-64]!
  433c64:	mov	x29, sp
  433c68:	stp	x19, x20, [sp, #16]
  433c6c:	mov	x20, x0
  433c70:	ldrb	w0, [x0, #160]
  433c74:	cbnz	w0, 433c84 <ferror@plt+0x31404>
  433c78:	mov	w2, #0x60000000            	// #1610612736
  433c7c:	cmp	w1, w2
  433c80:	b.hi	433c90 <ferror@plt+0x31410>  // b.pmore
  433c84:	ldp	x19, x20, [sp, #16]
  433c88:	ldp	x29, x30, [sp], #64
  433c8c:	ret
  433c90:	stp	x21, x22, [sp, #32]
  433c94:	mov	x22, x20
  433c98:	mov	w0, #0x1                   	// #1
  433c9c:	str	x23, [sp, #48]
  433ca0:	mov	w19, #0x0                   	// #0
  433ca4:	strb	w0, [x20, #160]
  433ca8:	mov	x23, #0xfffffffffffffff0    	// #-16
  433cac:	ldr	w0, [x22, #120]!
  433cb0:	cbz	w0, 433cfc <ferror@plt+0x3147c>
  433cb4:	nop
  433cb8:	add	x2, x23, w19, sxtw #3
  433cbc:	cmp	w19, #0x1
  433cc0:	sxtw	x1, w19
  433cc4:	b.le	433d34 <ferror@plt+0x314b4>
  433cc8:	ldr	x1, [x22, #32]
  433ccc:	add	x1, x1, x2
  433cd0:	ldr	x21, [x1]
  433cd4:	cbz	x21, 433d18 <ferror@plt+0x31498>
  433cd8:	ldr	x0, [x21, #8]
  433cdc:	add	w19, w19, #0x1
  433ce0:	bl	402640 <free@plt>
  433ce4:	mov	x0, x21
  433ce8:	mov	x1, #0x18                  	// #24
  433cec:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  433cf0:	ldr	w0, [x20, #120]
  433cf4:	cmp	w0, w19
  433cf8:	b.hi	433cb8 <ferror@plt+0x31438>  // b.pmore
  433cfc:	ldp	x21, x22, [sp, #32]
  433d00:	mov	w0, #0x1                   	// #1
  433d04:	ldr	x23, [sp, #48]
  433d08:	str	wzr, [x20, #120]
  433d0c:	ldp	x19, x20, [sp, #16]
  433d10:	ldp	x29, x30, [sp], #64
  433d14:	ret
  433d18:	add	w19, w19, #0x1
  433d1c:	cmp	w0, w19
  433d20:	b.ls	433cfc <ferror@plt+0x3147c>  // b.plast
  433d24:	add	x2, x23, w19, sxtw #3
  433d28:	cmp	w19, #0x1
  433d2c:	sxtw	x1, w19
  433d30:	b.gt	433cc8 <ferror@plt+0x31448>
  433d34:	add	x1, x1, #0x1
  433d38:	add	x1, x22, x1, lsl #3
  433d3c:	b	433cd0 <ferror@plt+0x31450>
  433d40:	stp	x29, x30, [sp, #-64]!
  433d44:	mov	w1, #0x1                   	// #1
  433d48:	mov	x29, sp
  433d4c:	stp	x21, x22, [sp, #32]
  433d50:	mov	x21, x0
  433d54:	mov	x22, x0
  433d58:	stp	x19, x20, [sp, #16]
  433d5c:	mov	w19, #0x0                   	// #0
  433d60:	ldr	w3, [x21, #120]!
  433d64:	str	x23, [sp, #48]
  433d68:	mov	x23, #0xfffffffffffffff0    	// #-16
  433d6c:	strb	w1, [x0, #160]
  433d70:	cbz	w3, 433dbc <ferror@plt+0x3153c>
  433d74:	nop
  433d78:	add	x4, x23, w19, sxtw #3
  433d7c:	cmp	w19, #0x1
  433d80:	sxtw	x2, w19
  433d84:	b.le	433df0 <ferror@plt+0x31570>
  433d88:	ldr	x1, [x21, #32]
  433d8c:	add	x1, x1, x4
  433d90:	ldr	x20, [x1]
  433d94:	cbz	x20, 433dd4 <ferror@plt+0x31554>
  433d98:	ldr	x0, [x20, #8]
  433d9c:	add	w19, w19, #0x1
  433da0:	bl	402640 <free@plt>
  433da4:	mov	x0, x20
  433da8:	mov	x1, #0x18                  	// #24
  433dac:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  433db0:	ldr	w3, [x22, #120]
  433db4:	cmp	w3, w19
  433db8:	b.hi	433d78 <ferror@plt+0x314f8>  // b.pmore
  433dbc:	ldp	x19, x20, [sp, #16]
  433dc0:	ldr	x23, [sp, #48]
  433dc4:	str	wzr, [x22, #120]
  433dc8:	ldp	x21, x22, [sp, #32]
  433dcc:	ldp	x29, x30, [sp], #64
  433dd0:	ret
  433dd4:	add	w19, w19, #0x1
  433dd8:	cmp	w3, w19
  433ddc:	b.ls	433dbc <ferror@plt+0x3153c>  // b.plast
  433de0:	add	x4, x23, w19, sxtw #3
  433de4:	cmp	w19, #0x1
  433de8:	sxtw	x2, w19
  433dec:	b.gt	433d88 <ferror@plt+0x31508>
  433df0:	add	x1, x2, #0x1
  433df4:	add	x1, x21, x1, lsl #3
  433df8:	b	433d90 <ferror@plt+0x31510>
  433dfc:	nop
  433e00:	stp	x29, x30, [sp, #-144]!
  433e04:	mov	x29, sp
  433e08:	stp	x19, x20, [sp, #16]
  433e0c:	mov	x20, x0
  433e10:	ldrb	w0, [x0, #160]
  433e14:	cbnz	w0, 433f84 <ferror@plt+0x31704>
  433e18:	stp	x21, x22, [sp, #32]
  433e1c:	mov	w0, #0x60000000            	// #1610612736
  433e20:	cmp	w1, w0
  433e24:	stp	x23, x24, [sp, #48]
  433e28:	mov	w24, w1
  433e2c:	b.hi	433f90 <ferror@plt+0x31710>  // b.pmore
  433e30:	mov	w23, w2
  433e34:	cmp	w2, w0
  433e38:	b.hi	434034 <ferror@plt+0x317b4>  // b.pmore
  433e3c:	mov	x19, x3
  433e40:	add	x8, sp, #0x50
  433e44:	mov	w0, w24
  433e48:	mov	w1, #0x1                   	// #1
  433e4c:	bl	415f10 <ferror@plt+0x13690>
  433e50:	ldr	w22, [sp, #92]
  433e54:	mov	w0, w23
  433e58:	mov	w1, #0x1                   	// #1
  433e5c:	add	x8, sp, #0x70
  433e60:	bl	415f10 <ferror@plt+0x13690>
  433e64:	ldr	x1, [sp, #80]
  433e68:	ldr	x0, [sp, #112]
  433e6c:	cmp	x1, x0
  433e70:	b.ne	4340c4 <ferror@plt+0x31844>  // b.any
  433e74:	ldr	w1, [sp, #88]
  433e78:	ldr	w0, [sp, #120]
  433e7c:	ldr	w21, [x20, #120]
  433e80:	cmp	w1, w0
  433e84:	b.ne	4341ac <ferror@plt+0x3192c>  // b.any
  433e88:	ldr	w0, [sp, #124]
  433e8c:	cmp	w0, w22
  433e90:	b.lt	434238 <ferror@plt+0x319b8>  // b.tstop
  433e94:	mov	x0, x19
  433e98:	mov	w1, #0xa                   	// #10
  433e9c:	bl	402670 <strchr@plt>
  433ea0:	cbz	x0, 433ebc <ferror@plt+0x3163c>
  433ea4:	cmp	w24, w23
  433ea8:	b.ne	4342b4 <ferror@plt+0x31a34>  // b.any
  433eac:	cmp	w22, #0x1
  433eb0:	b.ne	434358 <ferror@plt+0x31ad8>  // b.any
  433eb4:	ldrb	w0, [x0, #1]
  433eb8:	cbnz	w0, 4343ec <ferror@plt+0x31b6c>
  433ebc:	add	x22, x20, #0x78
  433ec0:	cbz	w21, 433f20 <ferror@plt+0x316a0>
  433ec4:	sub	w21, w21, #0x1
  433ec8:	cmp	w21, #0x1
  433ecc:	sxtw	x0, w21
  433ed0:	b.le	434348 <ferror@plt+0x31ac8>
  433ed4:	add	x22, x20, #0x78
  433ed8:	mov	x0, #0xfffffffffffffff0    	// #-16
  433edc:	add	x21, x0, w21, sxtw #3
  433ee0:	ldr	x0, [x22, #32]
  433ee4:	add	x21, x0, x21
  433ee8:	ldr	x21, [x21]
  433eec:	cbz	x21, 433f20 <ferror@plt+0x316a0>
  433ef0:	str	x25, [sp, #64]
  433ef4:	ldr	x25, [x21, #16]
  433ef8:	cbz	x25, 433f10 <ferror@plt+0x31690>
  433efc:	ldr	x0, [x21, #8]
  433f00:	add	x0, x0, x25
  433f04:	ldurb	w0, [x0, #-1]
  433f08:	cmp	w0, #0xa
  433f0c:	b.eq	433f1c <ferror@plt+0x3169c>  // b.none
  433f10:	ldr	w0, [x21, #4]
  433f14:	cmp	w24, w0
  433f18:	b.eq	434154 <ferror@plt+0x318d4>  // b.none
  433f1c:	ldr	x25, [sp, #64]
  433f20:	mov	x0, #0x18                  	// #24
  433f24:	bl	45d220 <_obstack_memory_used@@Base+0x8f8>
  433f28:	mov	x21, x0
  433f2c:	mov	x0, x19
  433f30:	stp	w24, w23, [x21]
  433f34:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  433f38:	mov	x1, x0
  433f3c:	str	x1, [x21, #8]
  433f40:	mov	x0, x19
  433f44:	bl	402270 <strlen@plt>
  433f48:	str	x0, [x21, #16]
  433f4c:	ldr	w1, [x20, #120]
  433f50:	add	w0, w1, #0x1
  433f54:	str	w0, [x20, #120]
  433f58:	cmp	w1, #0x1
  433f5c:	b.le	434334 <ferror@plt+0x31ab4>
  433f60:	ldr	x0, [x22, #32]
  433f64:	sub	w19, w1, #0x2
  433f68:	cbz	x0, 43446c <ferror@plt+0x31bec>
  433f6c:	ldr	w1, [x22, #24]
  433f70:	cmp	w19, w1
  433f74:	b.ge	4343d4 <ferror@plt+0x31b54>  // b.tcont
  433f78:	str	x21, [x0, w19, sxtw #3]
  433f7c:	ldp	x21, x22, [sp, #32]
  433f80:	ldp	x23, x24, [sp, #48]
  433f84:	ldp	x19, x20, [sp, #16]
  433f88:	ldp	x29, x30, [sp], #144
  433f8c:	ret
  433f90:	mov	x22, x20
  433f94:	mov	w0, #0x1                   	// #1
  433f98:	strb	w0, [x20, #160]
  433f9c:	mov	w19, #0x0                   	// #0
  433fa0:	mov	x24, #0xfffffffffffffff0    	// #-16
  433fa4:	ldr	w21, [x22, #120]!
  433fa8:	cbz	w21, 433ff4 <ferror@plt+0x31774>
  433fac:	nop
  433fb0:	add	x0, x24, w19, sxtw #3
  433fb4:	cmp	w19, #0x1
  433fb8:	sxtw	x1, w19
  433fbc:	b.le	434028 <ferror@plt+0x317a8>
  433fc0:	ldr	x1, [x22, #32]
  433fc4:	add	x1, x1, x0
  433fc8:	ldr	x23, [x1]
  433fcc:	cbz	x23, 43400c <ferror@plt+0x3178c>
  433fd0:	ldr	x0, [x23, #8]
  433fd4:	add	w19, w19, #0x1
  433fd8:	bl	402640 <free@plt>
  433fdc:	mov	x0, x23
  433fe0:	mov	x1, #0x18                  	// #24
  433fe4:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  433fe8:	ldr	w21, [x20, #120]
  433fec:	cmp	w21, w19
  433ff0:	b.hi	433fb0 <ferror@plt+0x31730>  // b.pmore
  433ff4:	ldp	x21, x22, [sp, #32]
  433ff8:	ldp	x23, x24, [sp, #48]
  433ffc:	str	wzr, [x20, #120]
  434000:	ldp	x19, x20, [sp, #16]
  434004:	ldp	x29, x30, [sp], #144
  434008:	ret
  43400c:	add	w19, w19, #0x1
  434010:	cmp	w21, w19
  434014:	b.ls	433ff4 <ferror@plt+0x31774>  // b.plast
  434018:	add	x0, x24, w19, sxtw #3
  43401c:	cmp	w19, #0x1
  434020:	sxtw	x1, w19
  434024:	b.gt	433fc0 <ferror@plt+0x31740>
  434028:	add	x1, x1, #0x1
  43402c:	add	x1, x22, x1, lsl #3
  434030:	b	433fc8 <ferror@plt+0x31748>
  434034:	ldr	w21, [x20, #120]
  434038:	mov	w0, #0x1                   	// #1
  43403c:	strb	w0, [x20, #160]
  434040:	cbz	w21, 433ff4 <ferror@plt+0x31774>
  434044:	add	x22, x20, #0x78
  434048:	mov	w19, #0x0                   	// #0
  43404c:	mov	x24, #0xfffffffffffffff0    	// #-16
  434050:	add	x2, x24, w19, sxtw #3
  434054:	cmp	w19, #0x1
  434058:	sxtw	x1, w19
  43405c:	b.le	4340a4 <ferror@plt+0x31824>
  434060:	ldr	x0, [x22, #32]
  434064:	add	x0, x0, x2
  434068:	ldr	x23, [x0]
  43406c:	cbz	x23, 4340b4 <ferror@plt+0x31834>
  434070:	ldr	x0, [x23, #8]
  434074:	add	w19, w19, #0x1
  434078:	bl	402640 <free@plt>
  43407c:	mov	x0, x23
  434080:	mov	x1, #0x18                  	// #24
  434084:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434088:	ldr	w21, [x20, #120]
  43408c:	cmp	w21, w19
  434090:	b.ls	433ff4 <ferror@plt+0x31774>  // b.plast
  434094:	add	x2, x24, w19, sxtw #3
  434098:	cmp	w19, #0x1
  43409c:	sxtw	x1, w19
  4340a0:	b.gt	434060 <ferror@plt+0x317e0>
  4340a4:	add	x0, x1, #0x1
  4340a8:	add	x0, x22, x0, lsl #3
  4340ac:	ldr	x23, [x0]
  4340b0:	cbnz	x23, 434070 <ferror@plt+0x317f0>
  4340b4:	add	w19, w19, #0x1
  4340b8:	cmp	w21, w19
  4340bc:	b.hi	434050 <ferror@plt+0x317d0>  // b.pmore
  4340c0:	b	433ff4 <ferror@plt+0x31774>
  4340c4:	ldr	w21, [x20, #120]
  4340c8:	mov	w0, #0x1                   	// #1
  4340cc:	strb	w0, [x20, #160]
  4340d0:	cbz	w21, 433ff4 <ferror@plt+0x31774>
  4340d4:	add	x22, x20, #0x78
  4340d8:	mov	w19, #0x0                   	// #0
  4340dc:	mov	x24, #0xfffffffffffffff0    	// #-16
  4340e0:	add	x2, x24, w19, sxtw #3
  4340e4:	cmp	w19, #0x1
  4340e8:	sxtw	x1, w19
  4340ec:	b.le	434134 <ferror@plt+0x318b4>
  4340f0:	ldr	x0, [x22, #32]
  4340f4:	add	x0, x0, x2
  4340f8:	ldr	x23, [x0]
  4340fc:	cbz	x23, 434144 <ferror@plt+0x318c4>
  434100:	ldr	x0, [x23, #8]
  434104:	add	w19, w19, #0x1
  434108:	bl	402640 <free@plt>
  43410c:	mov	x0, x23
  434110:	mov	x1, #0x18                  	// #24
  434114:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434118:	ldr	w21, [x20, #120]
  43411c:	cmp	w21, w19
  434120:	b.ls	433ff4 <ferror@plt+0x31774>  // b.plast
  434124:	add	x2, x24, w19, sxtw #3
  434128:	cmp	w19, #0x1
  43412c:	sxtw	x1, w19
  434130:	b.gt	4340f0 <ferror@plt+0x31870>
  434134:	add	x0, x1, #0x1
  434138:	add	x0, x22, x0, lsl #3
  43413c:	ldr	x23, [x0]
  434140:	cbnz	x23, 434100 <ferror@plt+0x31880>
  434144:	add	w19, w19, #0x1
  434148:	cmp	w21, w19
  43414c:	b.hi	4340e0 <ferror@plt+0x31860>  // b.pmore
  434150:	b	433ff4 <ferror@plt+0x31774>
  434154:	str	w23, [x21, #4]
  434158:	mov	x0, x19
  43415c:	bl	402270 <strlen@plt>
  434160:	mov	x20, x0
  434164:	add	x1, x25, #0x1
  434168:	add	x1, x1, x0
  43416c:	ldr	x0, [x21, #8]
  434170:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  434174:	str	x0, [x21, #8]
  434178:	ldr	x2, [x21, #16]
  43417c:	mov	x1, x19
  434180:	add	x0, x0, x2
  434184:	mov	x2, x20
  434188:	bl	402220 <memcpy@plt>
  43418c:	ldp	x0, x1, [x21, #8]
  434190:	add	x20, x20, x1
  434194:	str	x20, [x21, #16]
  434198:	strb	wzr, [x0, x20]
  43419c:	ldp	x21, x22, [sp, #32]
  4341a0:	ldp	x23, x24, [sp, #48]
  4341a4:	ldr	x25, [sp, #64]
  4341a8:	b	433f84 <ferror@plt+0x31704>
  4341ac:	mov	w0, #0x1                   	// #1
  4341b0:	strb	w0, [x20, #160]
  4341b4:	cbz	w21, 433ff4 <ferror@plt+0x31774>
  4341b8:	add	x22, x20, #0x78
  4341bc:	mov	w19, #0x0                   	// #0
  4341c0:	mov	x24, #0xfffffffffffffff0    	// #-16
  4341c4:	add	x2, x24, w19, sxtw #3
  4341c8:	cmp	w19, #0x1
  4341cc:	sxtw	x1, w19
  4341d0:	b.le	434218 <ferror@plt+0x31998>
  4341d4:	ldr	x0, [x22, #32]
  4341d8:	add	x0, x0, x2
  4341dc:	ldr	x23, [x0]
  4341e0:	cbz	x23, 434228 <ferror@plt+0x319a8>
  4341e4:	ldr	x0, [x23, #8]
  4341e8:	add	w19, w19, #0x1
  4341ec:	bl	402640 <free@plt>
  4341f0:	mov	x0, x23
  4341f4:	mov	x1, #0x18                  	// #24
  4341f8:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  4341fc:	ldr	w21, [x20, #120]
  434200:	cmp	w21, w19
  434204:	b.ls	433ff4 <ferror@plt+0x31774>  // b.plast
  434208:	add	x2, x24, w19, sxtw #3
  43420c:	cmp	w19, #0x1
  434210:	sxtw	x1, w19
  434214:	b.gt	4341d4 <ferror@plt+0x31954>
  434218:	add	x0, x1, #0x1
  43421c:	add	x0, x22, x0, lsl #3
  434220:	ldr	x23, [x0]
  434224:	cbnz	x23, 4341e4 <ferror@plt+0x31964>
  434228:	add	w19, w19, #0x1
  43422c:	cmp	w21, w19
  434230:	b.hi	4341c4 <ferror@plt+0x31944>  // b.pmore
  434234:	b	433ff4 <ferror@plt+0x31774>
  434238:	mov	w0, #0x1                   	// #1
  43423c:	strb	w0, [x20, #160]
  434240:	cbz	w21, 433ff4 <ferror@plt+0x31774>
  434244:	add	x22, x20, #0x78
  434248:	mov	w19, #0x0                   	// #0
  43424c:	mov	x24, #0xfffffffffffffff0    	// #-16
  434250:	add	x2, x24, w19, sxtw #3
  434254:	cmp	w19, #0x1
  434258:	sxtw	x1, w19
  43425c:	b.le	4342a8 <ferror@plt+0x31a28>
  434260:	ldr	x0, [x22, #32]
  434264:	add	x0, x0, x2
  434268:	ldr	x23, [x0]
  43426c:	cbz	x23, 434298 <ferror@plt+0x31a18>
  434270:	ldr	x0, [x23, #8]
  434274:	add	w19, w19, #0x1
  434278:	bl	402640 <free@plt>
  43427c:	mov	x0, x23
  434280:	mov	x1, #0x18                  	// #24
  434284:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434288:	ldr	w21, [x20, #120]
  43428c:	cmp	w21, w19
  434290:	b.hi	434250 <ferror@plt+0x319d0>  // b.pmore
  434294:	b	433ff4 <ferror@plt+0x31774>
  434298:	add	w19, w19, #0x1
  43429c:	cmp	w21, w19
  4342a0:	b.hi	434250 <ferror@plt+0x319d0>  // b.pmore
  4342a4:	b	433ff4 <ferror@plt+0x31774>
  4342a8:	add	x0, x1, #0x1
  4342ac:	add	x0, x22, x0, lsl #3
  4342b0:	b	434268 <ferror@plt+0x319e8>
  4342b4:	mov	w0, #0x1                   	// #1
  4342b8:	strb	w0, [x20, #160]
  4342bc:	cbz	w21, 433ff4 <ferror@plt+0x31774>
  4342c0:	add	x22, x20, #0x78
  4342c4:	mov	w19, #0x0                   	// #0
  4342c8:	mov	x24, #0xfffffffffffffff0    	// #-16
  4342cc:	nop
  4342d0:	add	x1, x24, w19, sxtw #3
  4342d4:	cmp	w19, #0x1
  4342d8:	sxtw	x0, w19
  4342dc:	b.le	434328 <ferror@plt+0x31aa8>
  4342e0:	ldr	x0, [x22, #32]
  4342e4:	add	x0, x0, x1
  4342e8:	ldr	x23, [x0]
  4342ec:	cbz	x23, 434318 <ferror@plt+0x31a98>
  4342f0:	ldr	x0, [x23, #8]
  4342f4:	add	w19, w19, #0x1
  4342f8:	bl	402640 <free@plt>
  4342fc:	mov	x0, x23
  434300:	mov	x1, #0x18                  	// #24
  434304:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434308:	ldr	w21, [x20, #120]
  43430c:	cmp	w21, w19
  434310:	b.hi	4342d0 <ferror@plt+0x31a50>  // b.pmore
  434314:	b	433ff4 <ferror@plt+0x31774>
  434318:	add	w19, w19, #0x1
  43431c:	cmp	w21, w19
  434320:	b.hi	4342d0 <ferror@plt+0x31a50>  // b.pmore
  434324:	b	433ff4 <ferror@plt+0x31774>
  434328:	add	x0, x0, #0x1
  43432c:	add	x0, x22, x0, lsl #3
  434330:	b	4342e8 <ferror@plt+0x31a68>
  434334:	add	x1, x22, w1, sxtw #3
  434338:	ldp	x23, x24, [sp, #48]
  43433c:	str	x21, [x1, #8]
  434340:	ldp	x21, x22, [sp, #32]
  434344:	b	433f84 <ferror@plt+0x31704>
  434348:	add	x21, x0, #0x1
  43434c:	add	x22, x20, #0x78
  434350:	add	x21, x22, x21, lsl #3
  434354:	b	433ee8 <ferror@plt+0x31668>
  434358:	mov	w0, #0x1                   	// #1
  43435c:	strb	w0, [x20, #160]
  434360:	cbz	w21, 433ff4 <ferror@plt+0x31774>
  434364:	add	x22, x20, #0x78
  434368:	mov	w19, #0x0                   	// #0
  43436c:	mov	x24, #0xfffffffffffffff0    	// #-16
  434370:	add	x2, x24, w19, sxtw #3
  434374:	cmp	w19, #0x1
  434378:	sxtw	x1, w19
  43437c:	b.le	4343c8 <ferror@plt+0x31b48>
  434380:	ldr	x0, [x22, #32]
  434384:	add	x0, x0, x2
  434388:	ldr	x23, [x0]
  43438c:	cbz	x23, 4343b8 <ferror@plt+0x31b38>
  434390:	ldr	x0, [x23, #8]
  434394:	add	w19, w19, #0x1
  434398:	bl	402640 <free@plt>
  43439c:	mov	x0, x23
  4343a0:	mov	x1, #0x18                  	// #24
  4343a4:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  4343a8:	ldr	w21, [x20, #120]
  4343ac:	cmp	w21, w19
  4343b0:	b.hi	434370 <ferror@plt+0x31af0>  // b.pmore
  4343b4:	b	433ff4 <ferror@plt+0x31774>
  4343b8:	add	w19, w19, #0x1
  4343bc:	cmp	w21, w19
  4343c0:	b.hi	434370 <ferror@plt+0x31af0>  // b.pmore
  4343c4:	b	433ff4 <ferror@plt+0x31774>
  4343c8:	add	x0, x1, #0x1
  4343cc:	add	x0, x22, x0, lsl #3
  4343d0:	b	434388 <ferror@plt+0x31b08>
  4343d4:	lsl	w1, w1, #1
  4343d8:	str	w1, [x22, #24]
  4343dc:	sbfiz	x1, x1, #3, #32
  4343e0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4343e4:	str	x0, [x22, #32]
  4343e8:	b	433f78 <ferror@plt+0x316f8>
  4343ec:	mov	w0, #0x1                   	// #1
  4343f0:	strb	w0, [x20, #160]
  4343f4:	cbz	w21, 433ff4 <ferror@plt+0x31774>
  4343f8:	add	x22, x20, #0x78
  4343fc:	mov	w19, #0x0                   	// #0
  434400:	mov	x24, #0xfffffffffffffff0    	// #-16
  434404:	nop
  434408:	add	x1, x24, w19, sxtw #3
  43440c:	cmp	w19, #0x1
  434410:	sxtw	x0, w19
  434414:	b.le	434460 <ferror@plt+0x31be0>
  434418:	ldr	x0, [x22, #32]
  43441c:	add	x0, x0, x1
  434420:	ldr	x23, [x0]
  434424:	cbz	x23, 434450 <ferror@plt+0x31bd0>
  434428:	ldr	x0, [x23, #8]
  43442c:	add	w19, w19, #0x1
  434430:	bl	402640 <free@plt>
  434434:	mov	x0, x23
  434438:	mov	x1, #0x18                  	// #24
  43443c:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434440:	ldr	w21, [x20, #120]
  434444:	cmp	w21, w19
  434448:	b.hi	434408 <ferror@plt+0x31b88>  // b.pmore
  43444c:	b	433ff4 <ferror@plt+0x31774>
  434450:	add	w19, w19, #0x1
  434454:	cmp	w21, w19
  434458:	b.hi	434408 <ferror@plt+0x31b88>  // b.pmore
  43445c:	b	433ff4 <ferror@plt+0x31774>
  434460:	add	x0, x0, #0x1
  434464:	add	x0, x22, x0, lsl #3
  434468:	b	434420 <ferror@plt+0x31ba0>
  43446c:	mov	w0, #0x10                  	// #16
  434470:	str	w0, [x22, #24]
  434474:	mov	x0, #0x80                  	// #128
  434478:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43447c:	str	x0, [x22, #32]
  434480:	b	433f78 <ferror@plt+0x316f8>
  434484:	nop
  434488:	mov	x9, x0
  43448c:	mov	x3, x2
  434490:	ldr	x0, [x0]
  434494:	tbnz	w1, #31, 4344cc <ferror@plt+0x31c4c>
  434498:	cmp	w1, #0x1
  43449c:	b.ls	4344c0 <ferror@plt+0x31c40>  // b.plast
  4344a0:	ldr	w2, [x0, #36]
  4344a4:	cbz	w2, 4344ec <ferror@plt+0x31c6c>
  4344a8:	sub	w2, w2, #0x1
  4344ac:	ldr	x4, [x0, #24]
  4344b0:	sbfiz	x2, x2, #5, #32
  4344b4:	ldr	w2, [x4, x2]
  4344b8:	cmp	w1, w2
  4344bc:	b.cc	4344ec <ferror@plt+0x31c6c>  // b.lo, b.ul, b.last
  4344c0:	mov	x0, x9
  4344c4:	mov	w2, w1
  4344c8:	b	433e00 <ferror@plt+0x31580>
  4344cc:	ldr	x0, [x0, #104]
  4344d0:	and	w1, w1, #0x7fffffff
  4344d4:	mov	w2, #0x18                  	// #24
  4344d8:	umaddl	x1, w1, w2, x0
  4344dc:	mov	x0, x9
  4344e0:	ldr	w1, [x1, #4]
  4344e4:	mov	w2, w1
  4344e8:	b	433e00 <ferror@plt+0x31580>
  4344ec:	mov	w2, #0x50000000            	// #1342177280
  4344f0:	cmp	w1, w2
  4344f4:	b.hi	4344c0 <ferror@plt+0x31c40>  // b.pmore
  4344f8:	stp	x29, x30, [sp, #-32]!
  4344fc:	mov	x29, sp
  434500:	str	w1, [sp, #20]
  434504:	str	x3, [sp, #24]
  434508:	bl	431a80 <ferror@plt+0x2f200>
  43450c:	ldr	w1, [sp, #20]
  434510:	mov	w2, #0xffffffff            	// #-1
  434514:	ldrb	w0, [x0, #7]
  434518:	ldr	x3, [sp, #24]
  43451c:	ldp	x29, x30, [sp], #32
  434520:	lsl	w2, w2, w0
  434524:	and	w1, w1, w2
  434528:	mov	x0, x9
  43452c:	mov	w2, w1
  434530:	b	433e00 <ferror@plt+0x31580>
  434534:	nop
  434538:	stp	x29, x30, [sp, #-64]!
  43453c:	mov	w15, w1
  434540:	mov	x18, x2
  434544:	mov	x29, sp
  434548:	stp	x19, x20, [sp, #16]
  43454c:	mov	x20, x0
  434550:	ldr	x0, [x0]
  434554:	tbnz	w1, #31, 4345b0 <ferror@plt+0x31d30>
  434558:	cmp	w1, #0x1
  43455c:	b.ls	434580 <ferror@plt+0x31d00>  // b.plast
  434560:	ldr	w1, [x0, #36]
  434564:	cbz	w1, 434684 <ferror@plt+0x31e04>
  434568:	sub	w1, w1, #0x1
  43456c:	ldr	x2, [x0, #24]
  434570:	sbfiz	x1, x1, #5, #32
  434574:	ldr	w1, [x2, x1]
  434578:	cmp	w15, w1
  43457c:	b.cc	434684 <ferror@plt+0x31e04>  // b.lo, b.ul, b.last
  434580:	mov	w2, #0x1                   	// #1
  434584:	mov	w1, w15
  434588:	bl	431eb0 <ferror@plt+0x2f630>
  43458c:	mov	w2, w0
  434590:	cmp	w0, w15
  434594:	b.eq	4345dc <ferror@plt+0x31d5c>  // b.none
  434598:	mov	x0, x20
  43459c:	mov	x3, x18
  4345a0:	ldp	x19, x20, [sp, #16]
  4345a4:	mov	w1, w2
  4345a8:	ldp	x29, x30, [sp], #64
  4345ac:	b	433e00 <ferror@plt+0x31580>
  4345b0:	and	w15, w1, #0x7fffffff
  4345b4:	mov	w2, #0x18                  	// #24
  4345b8:	ldr	x1, [x0, #104]
  4345bc:	umaddl	x15, w15, w2, x1
  4345c0:	mov	w2, #0x1                   	// #1
  4345c4:	ldr	w15, [x15, #8]
  4345c8:	mov	w1, w15
  4345cc:	bl	431eb0 <ferror@plt+0x2f630>
  4345d0:	mov	w2, w0
  4345d4:	cmp	w0, w15
  4345d8:	b.ne	434598 <ferror@plt+0x31d18>  // b.any
  4345dc:	stp	x21, x22, [sp, #32]
  4345e0:	mov	x22, x20
  4345e4:	mov	w0, #0x1                   	// #1
  4345e8:	str	x23, [sp, #48]
  4345ec:	mov	w19, #0x0                   	// #0
  4345f0:	strb	w0, [x20, #160]
  4345f4:	mov	x23, #0xfffffffffffffff0    	// #-16
  4345f8:	ldr	w0, [x22, #120]!
  4345fc:	cbz	w0, 434644 <ferror@plt+0x31dc4>
  434600:	add	x3, x23, w19, sxtw #3
  434604:	cmp	w19, #0x1
  434608:	sxtw	x2, w19
  43460c:	b.le	434678 <ferror@plt+0x31df8>
  434610:	ldr	x1, [x22, #32]
  434614:	add	x1, x1, x3
  434618:	ldr	x21, [x1]
  43461c:	cbz	x21, 43465c <ferror@plt+0x31ddc>
  434620:	ldr	x0, [x21, #8]
  434624:	add	w19, w19, #0x1
  434628:	bl	402640 <free@plt>
  43462c:	mov	x0, x21
  434630:	mov	x1, #0x18                  	// #24
  434634:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434638:	ldr	w0, [x20, #120]
  43463c:	cmp	w0, w19
  434640:	b.hi	434600 <ferror@plt+0x31d80>  // b.pmore
  434644:	ldp	x21, x22, [sp, #32]
  434648:	ldr	x23, [sp, #48]
  43464c:	str	wzr, [x20, #120]
  434650:	ldp	x19, x20, [sp, #16]
  434654:	ldp	x29, x30, [sp], #64
  434658:	ret
  43465c:	add	w19, w19, #0x1
  434660:	cmp	w0, w19
  434664:	b.ls	434644 <ferror@plt+0x31dc4>  // b.plast
  434668:	add	x3, x23, w19, sxtw #3
  43466c:	cmp	w19, #0x1
  434670:	sxtw	x2, w19
  434674:	b.gt	434610 <ferror@plt+0x31d90>
  434678:	add	x1, x2, #0x1
  43467c:	add	x1, x22, x1, lsl #3
  434680:	b	434618 <ferror@plt+0x31d98>
  434684:	mov	w1, #0x50000000            	// #1342177280
  434688:	cmp	w15, w1
  43468c:	b.hi	434580 <ferror@plt+0x31d00>  // b.pmore
  434690:	mov	w1, w15
  434694:	bl	431a80 <ferror@plt+0x2f200>
  434698:	ldrb	w3, [x0, #7]
  43469c:	mov	w1, #0x1                   	// #1
  4346a0:	ldr	x0, [x20]
  4346a4:	lsl	w1, w1, w3
  4346a8:	sub	w1, w1, #0x1
  4346ac:	and	w2, w1, w15
  4346b0:	bic	w15, w15, w1
  4346b4:	lsl	w2, w2, w3
  4346b8:	add	w15, w15, w2
  4346bc:	b	434580 <ferror@plt+0x31d00>
  4346c0:	stp	x29, x30, [sp, #-64]!
  4346c4:	mov	x9, x1
  4346c8:	mov	w18, w1
  4346cc:	mov	x29, sp
  4346d0:	stp	x19, x20, [sp, #16]
  4346d4:	mov	x20, x0
  4346d8:	mov	x19, x2
  4346dc:	ldr	x0, [x0]
  4346e0:	tbz	w1, #31, 4346f8 <ferror@plt+0x31e78>
  4346e4:	and	w1, w1, #0x7fffffff
  4346e8:	mov	w3, #0x18                  	// #24
  4346ec:	ldr	x2, [x0, #104]
  4346f0:	umull	x1, w1, w3
  4346f4:	ldr	w18, [x2, x1]
  4346f8:	ldr	w3, [x0, #36]
  4346fc:	mov	w1, #0x80000000            	// #-2147483648
  434700:	cbz	w3, 434714 <ferror@plt+0x31e94>
  434704:	sub	w1, w3, #0x1
  434708:	ldr	x2, [x0, #24]
  43470c:	sbfiz	x1, x1, #5, #32
  434710:	ldr	w1, [x2, x1]
  434714:	cmp	w18, #0x1
  434718:	ccmp	w18, w1, #0x2, hi  // hi = pmore
  43471c:	b.cs	434740 <ferror@plt+0x31ec0>  // b.hs, b.nlast
  434720:	mov	w1, w18
  434724:	bl	431a80 <ferror@plt+0x2f200>
  434728:	ldrb	w2, [x0, #7]
  43472c:	mov	w1, #0xffffffff            	// #-1
  434730:	ldr	x0, [x20]
  434734:	lsl	w1, w1, w2
  434738:	and	w18, w18, w1
  43473c:	ldr	w3, [x0, #36]
  434740:	lsr	x9, x9, #32
  434744:	mov	w15, w9
  434748:	tbz	w9, #31, 434760 <ferror@plt+0x31ee0>
  43474c:	and	w9, w9, #0x7fffffff
  434750:	mov	w2, #0x18                  	// #24
  434754:	ldr	x1, [x0, #104]
  434758:	umull	x9, w9, w2
  43475c:	ldr	w15, [x1, x9]
  434760:	mov	w1, #0x80000000            	// #-2147483648
  434764:	cbz	w3, 434778 <ferror@plt+0x31ef8>
  434768:	sub	w3, w3, #0x1
  43476c:	ldr	x1, [x0, #24]
  434770:	sbfiz	x3, x3, #5, #32
  434774:	ldr	w1, [x1, x3]
  434778:	cmp	w15, #0x1
  43477c:	ccmp	w15, w1, #0x2, hi  // hi = pmore
  434780:	b.cs	4347a0 <ferror@plt+0x31f20>  // b.hs, b.nlast
  434784:	mov	w1, w15
  434788:	bl	431a80 <ferror@plt+0x2f200>
  43478c:	ldrb	w2, [x0, #7]
  434790:	mov	w1, #0xffffffff            	// #-1
  434794:	ldr	x0, [x20]
  434798:	lsl	w1, w1, w2
  43479c:	and	w15, w15, w1
  4347a0:	mov	w2, #0x1                   	// #1
  4347a4:	mov	w1, w15
  4347a8:	bl	431eb0 <ferror@plt+0x2f630>
  4347ac:	mov	w2, w0
  4347b0:	cmp	w0, w15
  4347b4:	b.eq	4347d0 <ferror@plt+0x31f50>  // b.none
  4347b8:	mov	x3, x19
  4347bc:	mov	x0, x20
  4347c0:	ldp	x19, x20, [sp, #16]
  4347c4:	mov	w1, w18
  4347c8:	ldp	x29, x30, [sp], #64
  4347cc:	b	433e00 <ferror@plt+0x31580>
  4347d0:	stp	x21, x22, [sp, #32]
  4347d4:	mov	x22, x20
  4347d8:	mov	w0, #0x1                   	// #1
  4347dc:	str	x23, [sp, #48]
  4347e0:	mov	w19, #0x0                   	// #0
  4347e4:	strb	w0, [x20, #160]
  4347e8:	mov	x23, #0xfffffffffffffff0    	// #-16
  4347ec:	ldr	w0, [x22, #120]!
  4347f0:	cbz	w0, 43483c <ferror@plt+0x31fbc>
  4347f4:	nop
  4347f8:	add	x3, x23, w19, sxtw #3
  4347fc:	cmp	w19, #0x1
  434800:	sxtw	x2, w19
  434804:	b.le	434870 <ferror@plt+0x31ff0>
  434808:	ldr	x1, [x22, #32]
  43480c:	add	x1, x1, x3
  434810:	ldr	x21, [x1]
  434814:	cbz	x21, 434854 <ferror@plt+0x31fd4>
  434818:	ldr	x0, [x21, #8]
  43481c:	add	w19, w19, #0x1
  434820:	bl	402640 <free@plt>
  434824:	mov	x0, x21
  434828:	mov	x1, #0x18                  	// #24
  43482c:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434830:	ldr	w0, [x20, #120]
  434834:	cmp	w0, w19
  434838:	b.hi	4347f8 <ferror@plt+0x31f78>  // b.pmore
  43483c:	ldp	x21, x22, [sp, #32]
  434840:	ldr	x23, [sp, #48]
  434844:	str	wzr, [x20, #120]
  434848:	ldp	x19, x20, [sp, #16]
  43484c:	ldp	x29, x30, [sp], #64
  434850:	ret
  434854:	add	w19, w19, #0x1
  434858:	cmp	w0, w19
  43485c:	b.ls	43483c <ferror@plt+0x31fbc>  // b.plast
  434860:	add	x3, x23, w19, sxtw #3
  434864:	cmp	w19, #0x1
  434868:	sxtw	x2, w19
  43486c:	b.gt	434808 <ferror@plt+0x31f88>
  434870:	add	x1, x2, #0x1
  434874:	add	x1, x22, x1, lsl #3
  434878:	b	434810 <ferror@plt+0x31f90>
  43487c:	nop
  434880:	ldr	w2, [x0, #16]
  434884:	mov	x9, x0
  434888:	mov	x3, x1
  43488c:	ldr	x0, [x0]
  434890:	tbnz	w2, #31, 4348c8 <ferror@plt+0x32048>
  434894:	cmp	w2, #0x1
  434898:	b.ls	4348bc <ferror@plt+0x3203c>  // b.plast
  43489c:	ldr	w1, [x0, #36]
  4348a0:	cbz	w1, 4348e8 <ferror@plt+0x32068>
  4348a4:	sub	w1, w1, #0x1
  4348a8:	ldr	x4, [x0, #24]
  4348ac:	sbfiz	x1, x1, #5, #32
  4348b0:	ldr	w1, [x4, x1]
  4348b4:	cmp	w2, w1
  4348b8:	b.cc	4348e8 <ferror@plt+0x32068>  // b.lo, b.ul, b.last
  4348bc:	mov	x0, x9
  4348c0:	mov	w1, w2
  4348c4:	b	433e00 <ferror@plt+0x31580>
  4348c8:	ldr	x1, [x0, #104]
  4348cc:	and	w2, w2, #0x7fffffff
  4348d0:	mov	w0, #0x18                  	// #24
  4348d4:	umaddl	x2, w2, w0, x1
  4348d8:	mov	x0, x9
  4348dc:	ldr	w2, [x2, #4]
  4348e0:	mov	w1, w2
  4348e4:	b	433e00 <ferror@plt+0x31580>
  4348e8:	mov	w1, #0x50000000            	// #1342177280
  4348ec:	cmp	w2, w1
  4348f0:	b.hi	4348bc <ferror@plt+0x3203c>  // b.pmore
  4348f4:	stp	x29, x30, [sp, #-32]!
  4348f8:	mov	w1, w2
  4348fc:	mov	x29, sp
  434900:	str	w2, [sp, #20]
  434904:	str	x3, [sp, #24]
  434908:	bl	431a80 <ferror@plt+0x2f200>
  43490c:	ldr	w2, [sp, #20]
  434910:	mov	w1, #0xffffffff            	// #-1
  434914:	ldrb	w0, [x0, #7]
  434918:	ldr	x3, [sp, #24]
  43491c:	ldp	x29, x30, [sp], #32
  434920:	lsl	w1, w1, w0
  434924:	and	w2, w2, w1
  434928:	mov	x0, x9
  43492c:	mov	w1, w2
  434930:	b	433e00 <ferror@plt+0x31580>
  434934:	nop
  434938:	stp	x29, x30, [sp, #-64]!
  43493c:	mov	x18, x1
  434940:	mov	x29, sp
  434944:	ldr	w15, [x0, #16]
  434948:	stp	x19, x20, [sp, #16]
  43494c:	mov	x20, x0
  434950:	ldr	x0, [x0]
  434954:	tbnz	w15, #31, 4349b0 <ferror@plt+0x32130>
  434958:	cmp	w15, #0x1
  43495c:	b.ls	434980 <ferror@plt+0x32100>  // b.plast
  434960:	ldr	w1, [x0, #36]
  434964:	cbz	w1, 434a84 <ferror@plt+0x32204>
  434968:	sub	w1, w1, #0x1
  43496c:	ldr	x2, [x0, #24]
  434970:	sbfiz	x1, x1, #5, #32
  434974:	ldr	w1, [x2, x1]
  434978:	cmp	w15, w1
  43497c:	b.cc	434a84 <ferror@plt+0x32204>  // b.lo, b.ul, b.last
  434980:	mov	w2, #0x1                   	// #1
  434984:	mov	w1, w15
  434988:	bl	431eb0 <ferror@plt+0x2f630>
  43498c:	mov	w2, w0
  434990:	cmp	w0, w15
  434994:	b.eq	4349dc <ferror@plt+0x3215c>  // b.none
  434998:	mov	x0, x20
  43499c:	mov	x3, x18
  4349a0:	ldp	x19, x20, [sp, #16]
  4349a4:	mov	w1, w2
  4349a8:	ldp	x29, x30, [sp], #64
  4349ac:	b	433e00 <ferror@plt+0x31580>
  4349b0:	ldr	x1, [x0, #104]
  4349b4:	and	w15, w15, #0x7fffffff
  4349b8:	mov	w2, #0x18                  	// #24
  4349bc:	umaddl	x15, w15, w2, x1
  4349c0:	mov	w2, #0x1                   	// #1
  4349c4:	ldr	w15, [x15, #8]
  4349c8:	mov	w1, w15
  4349cc:	bl	431eb0 <ferror@plt+0x2f630>
  4349d0:	mov	w2, w0
  4349d4:	cmp	w0, w15
  4349d8:	b.ne	434998 <ferror@plt+0x32118>  // b.any
  4349dc:	stp	x21, x22, [sp, #32]
  4349e0:	mov	x22, x20
  4349e4:	mov	w0, #0x1                   	// #1
  4349e8:	str	x23, [sp, #48]
  4349ec:	mov	w19, #0x0                   	// #0
  4349f0:	strb	w0, [x20, #160]
  4349f4:	mov	x23, #0xfffffffffffffff0    	// #-16
  4349f8:	ldr	w0, [x22, #120]!
  4349fc:	cbz	w0, 434a44 <ferror@plt+0x321c4>
  434a00:	add	x3, x23, w19, sxtw #3
  434a04:	cmp	w19, #0x1
  434a08:	sxtw	x2, w19
  434a0c:	b.le	434a78 <ferror@plt+0x321f8>
  434a10:	ldr	x1, [x22, #32]
  434a14:	add	x1, x1, x3
  434a18:	ldr	x21, [x1]
  434a1c:	cbz	x21, 434a5c <ferror@plt+0x321dc>
  434a20:	ldr	x0, [x21, #8]
  434a24:	add	w19, w19, #0x1
  434a28:	bl	402640 <free@plt>
  434a2c:	mov	x0, x21
  434a30:	mov	x1, #0x18                  	// #24
  434a34:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434a38:	ldr	w0, [x20, #120]
  434a3c:	cmp	w0, w19
  434a40:	b.hi	434a00 <ferror@plt+0x32180>  // b.pmore
  434a44:	ldp	x21, x22, [sp, #32]
  434a48:	ldr	x23, [sp, #48]
  434a4c:	str	wzr, [x20, #120]
  434a50:	ldp	x19, x20, [sp, #16]
  434a54:	ldp	x29, x30, [sp], #64
  434a58:	ret
  434a5c:	add	w19, w19, #0x1
  434a60:	cmp	w0, w19
  434a64:	b.ls	434a44 <ferror@plt+0x321c4>  // b.plast
  434a68:	add	x3, x23, w19, sxtw #3
  434a6c:	cmp	w19, #0x1
  434a70:	sxtw	x2, w19
  434a74:	b.gt	434a10 <ferror@plt+0x32190>
  434a78:	add	x1, x2, #0x1
  434a7c:	add	x1, x22, x1, lsl #3
  434a80:	b	434a18 <ferror@plt+0x32198>
  434a84:	mov	w1, #0x50000000            	// #1342177280
  434a88:	cmp	w15, w1
  434a8c:	b.hi	434980 <ferror@plt+0x32100>  // b.pmore
  434a90:	mov	w1, w15
  434a94:	bl	431a80 <ferror@plt+0x2f200>
  434a98:	ldrb	w3, [x0, #7]
  434a9c:	mov	w1, #0x1                   	// #1
  434aa0:	ldr	x0, [x20]
  434aa4:	lsl	w1, w1, w3
  434aa8:	sub	w1, w1, #0x1
  434aac:	and	w2, w1, w15
  434ab0:	bic	w15, w15, w1
  434ab4:	lsl	w2, w2, w3
  434ab8:	add	w15, w15, w2
  434abc:	b	434980 <ferror@plt+0x32100>
  434ac0:	stp	x29, x30, [sp, #-64]!
  434ac4:	mov	x29, sp
  434ac8:	ldr	w15, [x0, #16]
  434acc:	ldr	x1, [x0]
  434ad0:	stp	x19, x20, [sp, #16]
  434ad4:	mov	x20, x0
  434ad8:	ldr	w0, [x1, #36]
  434adc:	tbnz	w15, #31, 434bcc <ferror@plt+0x3234c>
  434ae0:	mov	w9, w15
  434ae4:	cmp	w15, #0x1
  434ae8:	b.ls	434bbc <ferror@plt+0x3233c>  // b.plast
  434aec:	cbz	w0, 434c0c <ferror@plt+0x3238c>
  434af0:	sub	w2, w0, #0x1
  434af4:	mov	w18, w15
  434af8:	ldr	x4, [x1, #24]
  434afc:	sbfiz	x3, x2, #5, #32
  434b00:	ldr	w3, [x4, x3]
  434b04:	cmp	w15, w3
  434b08:	b.cc	434c0c <ferror@plt+0x3238c>  // b.lo, b.ul, b.last
  434b0c:	ldr	x0, [x1, #24]
  434b10:	sbfiz	x2, x2, #5, #32
  434b14:	ldr	w2, [x0, x2]
  434b18:	cmp	w2, w15
  434b1c:	ccmp	w15, #0x1, #0x0, hi  // hi = pmore
  434b20:	b.hi	434c20 <ferror@plt+0x323a0>  // b.pmore
  434b24:	mov	x0, x1
  434b28:	tbz	w9, #31, 434b40 <ferror@plt+0x322c0>
  434b2c:	and	w18, w18, #0x7fffffff
  434b30:	mov	w3, #0x18                  	// #24
  434b34:	ldr	x2, [x1, #104]
  434b38:	umull	x18, w18, w3
  434b3c:	ldr	w18, [x2, x18]
  434b40:	ldr	w2, [x1, #36]
  434b44:	mov	w3, #0x80000000            	// #-2147483648
  434b48:	cbz	w2, 434b5c <ferror@plt+0x322dc>
  434b4c:	sub	w2, w2, #0x1
  434b50:	ldr	x3, [x1, #24]
  434b54:	sbfiz	x2, x2, #5, #32
  434b58:	ldr	w3, [x3, x2]
  434b5c:	cmp	w18, w3
  434b60:	ccmp	w18, #0x1, #0x0, cc  // cc = lo, ul, last
  434b64:	b.ls	434b88 <ferror@plt+0x32308>  // b.plast
  434b68:	mov	x0, x1
  434b6c:	mov	w1, w18
  434b70:	bl	431a80 <ferror@plt+0x2f200>
  434b74:	ldrb	w2, [x0, #7]
  434b78:	mov	w1, #0xffffffff            	// #-1
  434b7c:	ldr	x0, [x20]
  434b80:	lsl	w1, w1, w2
  434b84:	and	w18, w18, w1
  434b88:	mov	w2, #0x1                   	// #1
  434b8c:	mov	w1, w18
  434b90:	bl	431eb0 <ferror@plt+0x2f630>
  434b94:	mov	w2, w0
  434b98:	cmp	w0, w18
  434b9c:	b.eq	434c44 <ferror@plt+0x323c4>  // b.none
  434ba0:	mov	x0, x20
  434ba4:	mov	w1, w15
  434ba8:	ldp	x19, x20, [sp, #16]
  434bac:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  434bb0:	ldp	x29, x30, [sp], #64
  434bb4:	add	x3, x3, #0x148
  434bb8:	b	433e00 <ferror@plt+0x31580>
  434bbc:	cbz	w0, 434cec <ferror@plt+0x3246c>
  434bc0:	sub	w2, w0, #0x1
  434bc4:	mov	w18, w15
  434bc8:	b	434b0c <ferror@plt+0x3228c>
  434bcc:	ldr	x2, [x1, #104]
  434bd0:	and	w15, w15, #0x7fffffff
  434bd4:	mov	w3, #0x18                  	// #24
  434bd8:	umaddl	x2, w15, w3, x2
  434bdc:	ldp	w15, w18, [x2, #4]
  434be0:	mov	w9, w18
  434be4:	tbz	w15, #31, 434bfc <ferror@plt+0x3237c>
  434be8:	and	w15, w15, #0x7fffffff
  434bec:	mov	w3, #0x18                  	// #24
  434bf0:	ldr	x2, [x1, #104]
  434bf4:	umull	x15, w15, w3
  434bf8:	ldr	w15, [x2, x15]
  434bfc:	mov	w2, #0x80000000            	// #-2147483648
  434c00:	cbz	w0, 434b18 <ferror@plt+0x32298>
  434c04:	sub	w2, w0, #0x1
  434c08:	b	434b0c <ferror@plt+0x3228c>
  434c0c:	mov	w2, #0x50000000            	// #1342177280
  434c10:	cmp	w15, w2
  434c14:	b.ls	434cf8 <ferror@plt+0x32478>  // b.plast
  434c18:	mov	w18, w15
  434c1c:	cbnz	w0, 434bc0 <ferror@plt+0x32340>
  434c20:	mov	x0, x1
  434c24:	mov	w1, w15
  434c28:	bl	431a80 <ferror@plt+0x2f200>
  434c2c:	ldrb	w0, [x0, #7]
  434c30:	mov	w2, #0xffffffff            	// #-1
  434c34:	ldr	x1, [x20]
  434c38:	lsl	w2, w2, w0
  434c3c:	and	w15, w15, w2
  434c40:	b	434b24 <ferror@plt+0x322a4>
  434c44:	stp	x21, x22, [sp, #32]
  434c48:	mov	x22, x20
  434c4c:	mov	w0, #0x1                   	// #1
  434c50:	mov	w19, #0x0                   	// #0
  434c54:	ldr	w2, [x22, #120]!
  434c58:	str	x23, [sp, #48]
  434c5c:	mov	x23, #0xfffffffffffffff0    	// #-16
  434c60:	strb	w0, [x20, #160]
  434c64:	cbz	w2, 434cac <ferror@plt+0x3242c>
  434c68:	add	x3, x23, w19, sxtw #3
  434c6c:	cmp	w19, #0x1
  434c70:	sxtw	x1, w19
  434c74:	b.le	434ce0 <ferror@plt+0x32460>
  434c78:	ldr	x0, [x22, #32]
  434c7c:	add	x0, x0, x3
  434c80:	ldr	x21, [x0]
  434c84:	cbz	x21, 434cc4 <ferror@plt+0x32444>
  434c88:	ldr	x0, [x21, #8]
  434c8c:	add	w19, w19, #0x1
  434c90:	bl	402640 <free@plt>
  434c94:	mov	x0, x21
  434c98:	mov	x1, #0x18                  	// #24
  434c9c:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434ca0:	ldr	w2, [x20, #120]
  434ca4:	cmp	w2, w19
  434ca8:	b.hi	434c68 <ferror@plt+0x323e8>  // b.pmore
  434cac:	ldp	x21, x22, [sp, #32]
  434cb0:	ldr	x23, [sp, #48]
  434cb4:	str	wzr, [x20, #120]
  434cb8:	ldp	x19, x20, [sp, #16]
  434cbc:	ldp	x29, x30, [sp], #64
  434cc0:	ret
  434cc4:	add	w19, w19, #0x1
  434cc8:	cmp	w2, w19
  434ccc:	b.ls	434cac <ferror@plt+0x3242c>  // b.plast
  434cd0:	add	x3, x23, w19, sxtw #3
  434cd4:	cmp	w19, #0x1
  434cd8:	sxtw	x1, w19
  434cdc:	b.gt	434c78 <ferror@plt+0x323f8>
  434ce0:	add	x0, x1, #0x1
  434ce4:	add	x0, x22, x0, lsl #3
  434ce8:	b	434c80 <ferror@plt+0x32400>
  434cec:	mov	x0, x1
  434cf0:	mov	w18, w15
  434cf4:	b	434b40 <ferror@plt+0x322c0>
  434cf8:	mov	x0, x1
  434cfc:	mov	w1, w15
  434d00:	bl	431a80 <ferror@plt+0x2f200>
  434d04:	ldrb	w3, [x0, #7]
  434d08:	mov	w2, #0x1                   	// #1
  434d0c:	ldr	x1, [x20]
  434d10:	lsl	w18, w2, w3
  434d14:	sub	w18, w18, #0x1
  434d18:	and	w18, w18, w15
  434d1c:	sub	w15, w15, w18
  434d20:	ldr	w0, [x1, #36]
  434d24:	lsl	w18, w18, w3
  434d28:	add	w18, w18, w15
  434d2c:	b	434be0 <ferror@plt+0x32360>
  434d30:	stp	x29, x30, [sp, #-64]!
  434d34:	lsr	x9, x1, #32
  434d38:	mov	w15, w9
  434d3c:	mov	x29, sp
  434d40:	stp	x19, x20, [sp, #16]
  434d44:	mov	w18, w1
  434d48:	mov	x20, x0
  434d4c:	ldr	x0, [x0]
  434d50:	tbz	w1, #31, 434d68 <ferror@plt+0x324e8>
  434d54:	and	w1, w1, #0x7fffffff
  434d58:	mov	w3, #0x18                  	// #24
  434d5c:	ldr	x2, [x0, #104]
  434d60:	umull	x1, w1, w3
  434d64:	ldr	w18, [x2, x1]
  434d68:	ldr	w1, [x0, #36]
  434d6c:	mov	w2, #0x80000000            	// #-2147483648
  434d70:	cbz	w1, 434d84 <ferror@plt+0x32504>
  434d74:	sub	w2, w1, #0x1
  434d78:	ldr	x3, [x0, #24]
  434d7c:	sbfiz	x2, x2, #5, #32
  434d80:	ldr	w2, [x3, x2]
  434d84:	cmp	w18, #0x1
  434d88:	ccmp	w18, w2, #0x2, hi  // hi = pmore
  434d8c:	b.cc	434e1c <ferror@plt+0x3259c>  // b.lo, b.ul, b.last
  434d90:	tbz	w9, #31, 434da8 <ferror@plt+0x32528>
  434d94:	and	w9, w9, #0x7fffffff
  434d98:	mov	w3, #0x18                  	// #24
  434d9c:	ldr	x2, [x0, #104]
  434da0:	umull	x9, w9, w3
  434da4:	ldr	w15, [x2, x9]
  434da8:	mov	w2, #0x80000000            	// #-2147483648
  434dac:	cbz	w1, 434dc0 <ferror@plt+0x32540>
  434db0:	sub	w1, w1, #0x1
  434db4:	ldr	x2, [x0, #24]
  434db8:	sbfiz	x1, x1, #5, #32
  434dbc:	ldr	w2, [x2, x1]
  434dc0:	cmp	w15, #0x1
  434dc4:	ccmp	w15, w2, #0x2, hi  // hi = pmore
  434dc8:	b.cs	434de8 <ferror@plt+0x32568>  // b.hs, b.nlast
  434dcc:	mov	w1, w15
  434dd0:	bl	431a80 <ferror@plt+0x2f200>
  434dd4:	ldrb	w2, [x0, #7]
  434dd8:	mov	w1, #0xffffffff            	// #-1
  434ddc:	ldr	x0, [x20]
  434de0:	lsl	w1, w1, w2
  434de4:	and	w15, w15, w1
  434de8:	mov	w2, #0x1                   	// #1
  434dec:	mov	w1, w15
  434df0:	bl	431eb0 <ferror@plt+0x2f630>
  434df4:	mov	w2, w0
  434df8:	cmp	w0, w15
  434dfc:	b.eq	434e40 <ferror@plt+0x325c0>  // b.none
  434e00:	mov	x0, x20
  434e04:	mov	w1, w18
  434e08:	ldp	x19, x20, [sp, #16]
  434e0c:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  434e10:	ldp	x29, x30, [sp], #64
  434e14:	add	x3, x3, #0x148
  434e18:	b	433e00 <ferror@plt+0x31580>
  434e1c:	mov	w1, w18
  434e20:	bl	431a80 <ferror@plt+0x2f200>
  434e24:	ldrb	w3, [x0, #7]
  434e28:	mov	w2, #0xffffffff            	// #-1
  434e2c:	ldr	x0, [x20]
  434e30:	lsl	w2, w2, w3
  434e34:	and	w18, w18, w2
  434e38:	ldr	w1, [x0, #36]
  434e3c:	b	434d90 <ferror@plt+0x32510>
  434e40:	stp	x21, x22, [sp, #32]
  434e44:	mov	x22, x20
  434e48:	mov	w0, #0x1                   	// #1
  434e4c:	str	x23, [sp, #48]
  434e50:	mov	w19, #0x0                   	// #0
  434e54:	strb	w0, [x20, #160]
  434e58:	mov	x23, #0xfffffffffffffff0    	// #-16
  434e5c:	ldr	w0, [x22, #120]!
  434e60:	cbz	w0, 434eac <ferror@plt+0x3262c>
  434e64:	nop
  434e68:	add	x3, x23, w19, sxtw #3
  434e6c:	cmp	w19, #0x1
  434e70:	sxtw	x2, w19
  434e74:	b.le	434ee0 <ferror@plt+0x32660>
  434e78:	ldr	x1, [x22, #32]
  434e7c:	add	x1, x1, x3
  434e80:	ldr	x21, [x1]
  434e84:	cbz	x21, 434ec4 <ferror@plt+0x32644>
  434e88:	ldr	x0, [x21, #8]
  434e8c:	add	w19, w19, #0x1
  434e90:	bl	402640 <free@plt>
  434e94:	mov	x0, x21
  434e98:	mov	x1, #0x18                  	// #24
  434e9c:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  434ea0:	ldr	w0, [x20, #120]
  434ea4:	cmp	w0, w19
  434ea8:	b.hi	434e68 <ferror@plt+0x325e8>  // b.pmore
  434eac:	ldp	x21, x22, [sp, #32]
  434eb0:	ldr	x23, [sp, #48]
  434eb4:	str	wzr, [x20, #120]
  434eb8:	ldp	x19, x20, [sp, #16]
  434ebc:	ldp	x29, x30, [sp], #64
  434ec0:	ret
  434ec4:	add	w19, w19, #0x1
  434ec8:	cmp	w0, w19
  434ecc:	b.ls	434eac <ferror@plt+0x3262c>  // b.plast
  434ed0:	add	x3, x23, w19, sxtw #3
  434ed4:	cmp	w19, #0x1
  434ed8:	sxtw	x2, w19
  434edc:	b.gt	434e78 <ferror@plt+0x325f8>
  434ee0:	add	x1, x2, #0x1
  434ee4:	add	x1, x22, x1, lsl #3
  434ee8:	b	434e80 <ferror@plt+0x32600>
  434eec:	nop
  434ef0:	stp	x29, x30, [sp, #-64]!
  434ef4:	mov	x29, sp
  434ef8:	ldr	w15, [x0, #16]
  434efc:	ldr	x2, [x0]
  434f00:	stp	x19, x20, [sp, #16]
  434f04:	mov	x20, x0
  434f08:	mov	x19, x1
  434f0c:	ldr	w0, [x2, #36]
  434f10:	tbnz	w15, #31, 434ffc <ferror@plt+0x3277c>
  434f14:	mov	w9, w15
  434f18:	cmp	w15, #0x1
  434f1c:	b.ls	434fec <ferror@plt+0x3276c>  // b.plast
  434f20:	cbz	w0, 43503c <ferror@plt+0x327bc>
  434f24:	sub	w1, w0, #0x1
  434f28:	mov	w18, w15
  434f2c:	ldr	x4, [x2, #24]
  434f30:	sbfiz	x3, x1, #5, #32
  434f34:	ldr	w3, [x4, x3]
  434f38:	cmp	w15, w3
  434f3c:	b.cc	43503c <ferror@plt+0x327bc>  // b.lo, b.ul, b.last
  434f40:	ldr	x0, [x2, #24]
  434f44:	sbfiz	x1, x1, #5, #32
  434f48:	ldr	w1, [x0, x1]
  434f4c:	cmp	w1, w15
  434f50:	ccmp	w15, #0x1, #0x0, hi  // hi = pmore
  434f54:	b.hi	435050 <ferror@plt+0x327d0>  // b.pmore
  434f58:	mov	x0, x2
  434f5c:	tbz	w9, #31, 434f74 <ferror@plt+0x326f4>
  434f60:	and	w18, w18, #0x7fffffff
  434f64:	mov	w3, #0x18                  	// #24
  434f68:	ldr	x1, [x2, #104]
  434f6c:	umull	x18, w18, w3
  434f70:	ldr	w18, [x1, x18]
  434f74:	ldr	w3, [x2, #36]
  434f78:	mov	w1, #0x80000000            	// #-2147483648
  434f7c:	cbz	w3, 434f90 <ferror@plt+0x32710>
  434f80:	sub	w3, w3, #0x1
  434f84:	ldr	x1, [x2, #24]
  434f88:	sbfiz	x3, x3, #5, #32
  434f8c:	ldr	w1, [x1, x3]
  434f90:	cmp	w18, w1
  434f94:	ccmp	w18, #0x1, #0x0, cc  // cc = lo, ul, last
  434f98:	b.ls	434fbc <ferror@plt+0x3273c>  // b.plast
  434f9c:	mov	w1, w18
  434fa0:	mov	x0, x2
  434fa4:	bl	431a80 <ferror@plt+0x2f200>
  434fa8:	ldrb	w2, [x0, #7]
  434fac:	mov	w1, #0xffffffff            	// #-1
  434fb0:	ldr	x0, [x20]
  434fb4:	lsl	w1, w1, w2
  434fb8:	and	w18, w18, w1
  434fbc:	mov	w2, #0x1                   	// #1
  434fc0:	mov	w1, w18
  434fc4:	bl	431eb0 <ferror@plt+0x2f630>
  434fc8:	mov	w2, w0
  434fcc:	cmp	w0, w18
  434fd0:	b.eq	435074 <ferror@plt+0x327f4>  // b.none
  434fd4:	mov	x3, x19
  434fd8:	mov	x0, x20
  434fdc:	ldp	x19, x20, [sp, #16]
  434fe0:	mov	w1, w15
  434fe4:	ldp	x29, x30, [sp], #64
  434fe8:	b	433e00 <ferror@plt+0x31580>
  434fec:	cbz	w0, 43511c <ferror@plt+0x3289c>
  434ff0:	sub	w1, w0, #0x1
  434ff4:	mov	w18, w15
  434ff8:	b	434f40 <ferror@plt+0x326c0>
  434ffc:	ldr	x1, [x2, #104]
  435000:	and	w15, w15, #0x7fffffff
  435004:	mov	w3, #0x18                  	// #24
  435008:	umaddl	x1, w15, w3, x1
  43500c:	ldp	w15, w18, [x1, #4]
  435010:	mov	w9, w18
  435014:	tbz	w15, #31, 43502c <ferror@plt+0x327ac>
  435018:	and	w15, w15, #0x7fffffff
  43501c:	mov	w3, #0x18                  	// #24
  435020:	ldr	x1, [x2, #104]
  435024:	umull	x15, w15, w3
  435028:	ldr	w15, [x1, x15]
  43502c:	mov	w1, #0x80000000            	// #-2147483648
  435030:	cbz	w0, 434f4c <ferror@plt+0x326cc>
  435034:	sub	w1, w0, #0x1
  435038:	b	434f40 <ferror@plt+0x326c0>
  43503c:	mov	w1, #0x50000000            	// #1342177280
  435040:	cmp	w15, w1
  435044:	b.ls	435128 <ferror@plt+0x328a8>  // b.plast
  435048:	mov	w18, w15
  43504c:	cbnz	w0, 434ff0 <ferror@plt+0x32770>
  435050:	mov	w1, w15
  435054:	mov	x0, x2
  435058:	bl	431a80 <ferror@plt+0x2f200>
  43505c:	ldrb	w0, [x0, #7]
  435060:	mov	w1, #0xffffffff            	// #-1
  435064:	ldr	x2, [x20]
  435068:	lsl	w1, w1, w0
  43506c:	and	w15, w15, w1
  435070:	b	434f58 <ferror@plt+0x326d8>
  435074:	stp	x21, x22, [sp, #32]
  435078:	mov	x22, x20
  43507c:	mov	w0, #0x1                   	// #1
  435080:	mov	w19, #0x0                   	// #0
  435084:	ldr	w2, [x22, #120]!
  435088:	str	x23, [sp, #48]
  43508c:	mov	x23, #0xfffffffffffffff0    	// #-16
  435090:	strb	w0, [x20, #160]
  435094:	cbz	w2, 4350dc <ferror@plt+0x3285c>
  435098:	add	x3, x23, w19, sxtw #3
  43509c:	cmp	w19, #0x1
  4350a0:	sxtw	x1, w19
  4350a4:	b.le	435110 <ferror@plt+0x32890>
  4350a8:	ldr	x0, [x22, #32]
  4350ac:	add	x0, x0, x3
  4350b0:	ldr	x21, [x0]
  4350b4:	cbz	x21, 4350f4 <ferror@plt+0x32874>
  4350b8:	ldr	x0, [x21, #8]
  4350bc:	add	w19, w19, #0x1
  4350c0:	bl	402640 <free@plt>
  4350c4:	mov	x0, x21
  4350c8:	mov	x1, #0x18                  	// #24
  4350cc:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  4350d0:	ldr	w2, [x20, #120]
  4350d4:	cmp	w2, w19
  4350d8:	b.hi	435098 <ferror@plt+0x32818>  // b.pmore
  4350dc:	ldp	x21, x22, [sp, #32]
  4350e0:	ldr	x23, [sp, #48]
  4350e4:	str	wzr, [x20, #120]
  4350e8:	ldp	x19, x20, [sp, #16]
  4350ec:	ldp	x29, x30, [sp], #64
  4350f0:	ret
  4350f4:	add	w19, w19, #0x1
  4350f8:	cmp	w2, w19
  4350fc:	b.ls	4350dc <ferror@plt+0x3285c>  // b.plast
  435100:	add	x3, x23, w19, sxtw #3
  435104:	cmp	w19, #0x1
  435108:	sxtw	x1, w19
  43510c:	b.gt	4350a8 <ferror@plt+0x32828>
  435110:	add	x0, x1, #0x1
  435114:	add	x0, x22, x0, lsl #3
  435118:	b	4350b0 <ferror@plt+0x32830>
  43511c:	mov	x0, x2
  435120:	mov	w18, w15
  435124:	b	434f74 <ferror@plt+0x326f4>
  435128:	mov	w1, w15
  43512c:	mov	x0, x2
  435130:	bl	431a80 <ferror@plt+0x2f200>
  435134:	ldrb	w3, [x0, #7]
  435138:	mov	w1, #0x1                   	// #1
  43513c:	ldr	x2, [x20]
  435140:	lsl	w18, w1, w3
  435144:	sub	w18, w18, #0x1
  435148:	and	w18, w18, w15
  43514c:	sub	w15, w15, w18
  435150:	ldr	w0, [x2, #36]
  435154:	lsl	w18, w18, w3
  435158:	add	w18, w18, w15
  43515c:	b	435010 <ferror@plt+0x32790>
  435160:	stp	x29, x30, [sp, #-64]!
  435164:	mov	w15, w1
  435168:	mov	x29, sp
  43516c:	ldr	x3, [x0]
  435170:	stp	x19, x20, [sp, #16]
  435174:	mov	x20, x0
  435178:	mov	x19, x2
  43517c:	ldr	w0, [x3, #36]
  435180:	tbnz	w1, #31, 43526c <ferror@plt+0x329ec>
  435184:	mov	w9, w1
  435188:	cmp	w1, #0x1
  43518c:	b.ls	43525c <ferror@plt+0x329dc>  // b.plast
  435190:	cbz	w0, 4352ac <ferror@plt+0x32a2c>
  435194:	sub	w1, w0, #0x1
  435198:	mov	w18, w15
  43519c:	ldr	x4, [x3, #24]
  4351a0:	sbfiz	x2, x1, #5, #32
  4351a4:	ldr	w2, [x4, x2]
  4351a8:	cmp	w15, w2
  4351ac:	b.cc	4352ac <ferror@plt+0x32a2c>  // b.lo, b.ul, b.last
  4351b0:	ldr	x0, [x3, #24]
  4351b4:	sbfiz	x1, x1, #5, #32
  4351b8:	ldr	w1, [x0, x1]
  4351bc:	cmp	w15, w1
  4351c0:	ccmp	w15, #0x1, #0x0, cc  // cc = lo, ul, last
  4351c4:	b.hi	4352c0 <ferror@plt+0x32a40>  // b.pmore
  4351c8:	mov	x0, x3
  4351cc:	tbz	w9, #31, 4351e4 <ferror@plt+0x32964>
  4351d0:	and	w18, w18, #0x7fffffff
  4351d4:	mov	w2, #0x18                  	// #24
  4351d8:	ldr	x1, [x3, #104]
  4351dc:	umull	x18, w18, w2
  4351e0:	ldr	w18, [x1, x18]
  4351e4:	ldr	w1, [x3, #36]
  4351e8:	mov	w2, #0x80000000            	// #-2147483648
  4351ec:	cbz	w1, 435200 <ferror@plt+0x32980>
  4351f0:	sub	w1, w1, #0x1
  4351f4:	ldr	x2, [x3, #24]
  4351f8:	sbfiz	x1, x1, #5, #32
  4351fc:	ldr	w2, [x2, x1]
  435200:	cmp	w18, w2
  435204:	ccmp	w18, #0x1, #0x0, cc  // cc = lo, ul, last
  435208:	b.ls	43522c <ferror@plt+0x329ac>  // b.plast
  43520c:	mov	w1, w18
  435210:	mov	x0, x3
  435214:	bl	431a80 <ferror@plt+0x2f200>
  435218:	ldrb	w2, [x0, #7]
  43521c:	mov	w1, #0xffffffff            	// #-1
  435220:	ldr	x0, [x20]
  435224:	lsl	w1, w1, w2
  435228:	and	w18, w18, w1
  43522c:	mov	w2, #0x1                   	// #1
  435230:	mov	w1, w18
  435234:	bl	431eb0 <ferror@plt+0x2f630>
  435238:	mov	w2, w0
  43523c:	cmp	w0, w18
  435240:	b.eq	4352e4 <ferror@plt+0x32a64>  // b.none
  435244:	mov	x3, x19
  435248:	mov	x0, x20
  43524c:	ldp	x19, x20, [sp, #16]
  435250:	mov	w1, w15
  435254:	ldp	x29, x30, [sp], #64
  435258:	b	433e00 <ferror@plt+0x31580>
  43525c:	cbz	w0, 43538c <ferror@plt+0x32b0c>
  435260:	sub	w1, w0, #0x1
  435264:	mov	w18, w15
  435268:	b	4351b0 <ferror@plt+0x32930>
  43526c:	and	w15, w1, #0x7fffffff
  435270:	mov	w2, #0x18                  	// #24
  435274:	ldr	x1, [x3, #104]
  435278:	umaddl	x1, w15, w2, x1
  43527c:	ldp	w15, w18, [x1, #4]
  435280:	mov	w9, w18
  435284:	tbz	w15, #31, 43529c <ferror@plt+0x32a1c>
  435288:	and	w15, w15, #0x7fffffff
  43528c:	mov	w2, #0x18                  	// #24
  435290:	ldr	x1, [x3, #104]
  435294:	umull	x15, w15, w2
  435298:	ldr	w15, [x1, x15]
  43529c:	mov	w1, #0x80000000            	// #-2147483648
  4352a0:	cbz	w0, 4351bc <ferror@plt+0x3293c>
  4352a4:	sub	w1, w0, #0x1
  4352a8:	b	4351b0 <ferror@plt+0x32930>
  4352ac:	mov	w1, #0x50000000            	// #1342177280
  4352b0:	cmp	w15, w1
  4352b4:	b.ls	435398 <ferror@plt+0x32b18>  // b.plast
  4352b8:	mov	w18, w15
  4352bc:	cbnz	w0, 435260 <ferror@plt+0x329e0>
  4352c0:	mov	w1, w15
  4352c4:	mov	x0, x3
  4352c8:	bl	431a80 <ferror@plt+0x2f200>
  4352cc:	ldrb	w0, [x0, #7]
  4352d0:	mov	w1, #0xffffffff            	// #-1
  4352d4:	ldr	x3, [x20]
  4352d8:	lsl	w1, w1, w0
  4352dc:	and	w15, w15, w1
  4352e0:	b	4351c8 <ferror@plt+0x32948>
  4352e4:	stp	x21, x22, [sp, #32]
  4352e8:	mov	x22, x20
  4352ec:	mov	w0, #0x1                   	// #1
  4352f0:	str	x23, [sp, #48]
  4352f4:	mov	w19, #0x0                   	// #0
  4352f8:	strb	w0, [x20, #160]
  4352fc:	mov	x23, #0xfffffffffffffff0    	// #-16
  435300:	ldr	w0, [x22, #120]!
  435304:	cbz	w0, 43534c <ferror@plt+0x32acc>
  435308:	add	x3, x23, w19, sxtw #3
  43530c:	cmp	w19, #0x1
  435310:	sxtw	x2, w19
  435314:	b.le	435380 <ferror@plt+0x32b00>
  435318:	ldr	x1, [x22, #32]
  43531c:	add	x1, x1, x3
  435320:	ldr	x21, [x1]
  435324:	cbz	x21, 435364 <ferror@plt+0x32ae4>
  435328:	ldr	x0, [x21, #8]
  43532c:	add	w19, w19, #0x1
  435330:	bl	402640 <free@plt>
  435334:	mov	x0, x21
  435338:	mov	x1, #0x18                  	// #24
  43533c:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  435340:	ldr	w0, [x20, #120]
  435344:	cmp	w0, w19
  435348:	b.hi	435308 <ferror@plt+0x32a88>  // b.pmore
  43534c:	ldp	x21, x22, [sp, #32]
  435350:	ldr	x23, [sp, #48]
  435354:	str	wzr, [x20, #120]
  435358:	ldp	x19, x20, [sp, #16]
  43535c:	ldp	x29, x30, [sp], #64
  435360:	ret
  435364:	add	w19, w19, #0x1
  435368:	cmp	w0, w19
  43536c:	b.ls	43534c <ferror@plt+0x32acc>  // b.plast
  435370:	add	x3, x23, w19, sxtw #3
  435374:	cmp	w19, #0x1
  435378:	sxtw	x2, w19
  43537c:	b.gt	435318 <ferror@plt+0x32a98>
  435380:	add	x1, x2, #0x1
  435384:	add	x1, x22, x1, lsl #3
  435388:	b	435320 <ferror@plt+0x32aa0>
  43538c:	mov	x0, x3
  435390:	mov	w18, w1
  435394:	b	4351e4 <ferror@plt+0x32964>
  435398:	mov	w1, w15
  43539c:	mov	x0, x3
  4353a0:	bl	431a80 <ferror@plt+0x2f200>
  4353a4:	ldrb	w2, [x0, #7]
  4353a8:	mov	w1, #0x1                   	// #1
  4353ac:	ldr	x3, [x20]
  4353b0:	lsl	w18, w1, w2
  4353b4:	sub	w18, w18, #0x1
  4353b8:	and	w18, w18, w15
  4353bc:	sub	w15, w15, w18
  4353c0:	ldr	w0, [x3, #36]
  4353c4:	lsl	w18, w18, w2
  4353c8:	add	w18, w18, w15
  4353cc:	b	435280 <ferror@plt+0x32a00>
  4353d0:	stp	x29, x30, [sp, #-64]!
  4353d4:	mov	w15, w1
  4353d8:	mov	x29, sp
  4353dc:	ldr	x2, [x0]
  4353e0:	stp	x19, x20, [sp, #16]
  4353e4:	mov	x20, x0
  4353e8:	ldr	w0, [x2, #36]
  4353ec:	tbnz	w1, #31, 4354dc <ferror@plt+0x32c5c>
  4353f0:	mov	w9, w1
  4353f4:	cmp	w1, #0x1
  4353f8:	b.ls	4354cc <ferror@plt+0x32c4c>  // b.plast
  4353fc:	cbz	w0, 43551c <ferror@plt+0x32c9c>
  435400:	sub	w1, w0, #0x1
  435404:	mov	w18, w15
  435408:	ldr	x4, [x2, #24]
  43540c:	sbfiz	x3, x1, #5, #32
  435410:	ldr	w3, [x4, x3]
  435414:	cmp	w15, w3
  435418:	b.cc	43551c <ferror@plt+0x32c9c>  // b.lo, b.ul, b.last
  43541c:	ldr	x0, [x2, #24]
  435420:	sbfiz	x1, x1, #5, #32
  435424:	ldr	w1, [x0, x1]
  435428:	cmp	w15, w1
  43542c:	ccmp	w15, #0x1, #0x0, cc  // cc = lo, ul, last
  435430:	b.hi	435530 <ferror@plt+0x32cb0>  // b.pmore
  435434:	mov	x0, x2
  435438:	tbz	w9, #31, 435450 <ferror@plt+0x32bd0>
  43543c:	and	w18, w18, #0x7fffffff
  435440:	mov	w3, #0x18                  	// #24
  435444:	ldr	x1, [x2, #104]
  435448:	umull	x18, w18, w3
  43544c:	ldr	w18, [x1, x18]
  435450:	ldr	w1, [x2, #36]
  435454:	mov	w3, #0x80000000            	// #-2147483648
  435458:	cbz	w1, 43546c <ferror@plt+0x32bec>
  43545c:	sub	w1, w1, #0x1
  435460:	ldr	x3, [x2, #24]
  435464:	sbfiz	x1, x1, #5, #32
  435468:	ldr	w3, [x3, x1]
  43546c:	cmp	w18, w3
  435470:	ccmp	w18, #0x1, #0x0, cc  // cc = lo, ul, last
  435474:	b.ls	435498 <ferror@plt+0x32c18>  // b.plast
  435478:	mov	w1, w18
  43547c:	mov	x0, x2
  435480:	bl	431a80 <ferror@plt+0x2f200>
  435484:	ldrb	w2, [x0, #7]
  435488:	mov	w1, #0xffffffff            	// #-1
  43548c:	ldr	x0, [x20]
  435490:	lsl	w1, w1, w2
  435494:	and	w18, w18, w1
  435498:	mov	w2, #0x1                   	// #1
  43549c:	mov	w1, w18
  4354a0:	bl	431eb0 <ferror@plt+0x2f630>
  4354a4:	mov	w2, w0
  4354a8:	cmp	w0, w18
  4354ac:	b.eq	435554 <ferror@plt+0x32cd4>  // b.none
  4354b0:	mov	x0, x20
  4354b4:	mov	w1, w15
  4354b8:	ldp	x19, x20, [sp, #16]
  4354bc:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4354c0:	ldp	x29, x30, [sp], #64
  4354c4:	add	x3, x3, #0x148
  4354c8:	b	433e00 <ferror@plt+0x31580>
  4354cc:	cbz	w0, 4355fc <ferror@plt+0x32d7c>
  4354d0:	sub	w1, w0, #0x1
  4354d4:	mov	w18, w15
  4354d8:	b	43541c <ferror@plt+0x32b9c>
  4354dc:	and	w15, w1, #0x7fffffff
  4354e0:	mov	w3, #0x18                  	// #24
  4354e4:	ldr	x1, [x2, #104]
  4354e8:	umaddl	x1, w15, w3, x1
  4354ec:	ldp	w15, w18, [x1, #4]
  4354f0:	mov	w9, w18
  4354f4:	tbz	w15, #31, 43550c <ferror@plt+0x32c8c>
  4354f8:	and	w15, w15, #0x7fffffff
  4354fc:	mov	w3, #0x18                  	// #24
  435500:	ldr	x1, [x2, #104]
  435504:	umull	x15, w15, w3
  435508:	ldr	w15, [x1, x15]
  43550c:	mov	w1, #0x80000000            	// #-2147483648
  435510:	cbz	w0, 435428 <ferror@plt+0x32ba8>
  435514:	sub	w1, w0, #0x1
  435518:	b	43541c <ferror@plt+0x32b9c>
  43551c:	mov	w1, #0x50000000            	// #1342177280
  435520:	cmp	w15, w1
  435524:	b.ls	435608 <ferror@plt+0x32d88>  // b.plast
  435528:	mov	w18, w15
  43552c:	cbnz	w0, 4354d0 <ferror@plt+0x32c50>
  435530:	mov	w1, w15
  435534:	mov	x0, x2
  435538:	bl	431a80 <ferror@plt+0x2f200>
  43553c:	ldrb	w0, [x0, #7]
  435540:	mov	w1, #0xffffffff            	// #-1
  435544:	ldr	x2, [x20]
  435548:	lsl	w1, w1, w0
  43554c:	and	w15, w15, w1
  435550:	b	435434 <ferror@plt+0x32bb4>
  435554:	stp	x21, x22, [sp, #32]
  435558:	mov	x22, x20
  43555c:	mov	w0, #0x1                   	// #1
  435560:	str	x23, [sp, #48]
  435564:	mov	w19, #0x0                   	// #0
  435568:	strb	w0, [x20, #160]
  43556c:	mov	x23, #0xfffffffffffffff0    	// #-16
  435570:	ldr	w0, [x22, #120]!
  435574:	cbz	w0, 4355bc <ferror@plt+0x32d3c>
  435578:	add	x3, x23, w19, sxtw #3
  43557c:	cmp	w19, #0x1
  435580:	sxtw	x2, w19
  435584:	b.le	4355f0 <ferror@plt+0x32d70>
  435588:	ldr	x1, [x22, #32]
  43558c:	add	x1, x1, x3
  435590:	ldr	x21, [x1]
  435594:	cbz	x21, 4355d4 <ferror@plt+0x32d54>
  435598:	ldr	x0, [x21, #8]
  43559c:	add	w19, w19, #0x1
  4355a0:	bl	402640 <free@plt>
  4355a4:	mov	x0, x21
  4355a8:	mov	x1, #0x18                  	// #24
  4355ac:	bl	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  4355b0:	ldr	w0, [x20, #120]
  4355b4:	cmp	w0, w19
  4355b8:	b.hi	435578 <ferror@plt+0x32cf8>  // b.pmore
  4355bc:	ldp	x21, x22, [sp, #32]
  4355c0:	ldr	x23, [sp, #48]
  4355c4:	str	wzr, [x20, #120]
  4355c8:	ldp	x19, x20, [sp, #16]
  4355cc:	ldp	x29, x30, [sp], #64
  4355d0:	ret
  4355d4:	add	w19, w19, #0x1
  4355d8:	cmp	w0, w19
  4355dc:	b.ls	4355bc <ferror@plt+0x32d3c>  // b.plast
  4355e0:	add	x3, x23, w19, sxtw #3
  4355e4:	cmp	w19, #0x1
  4355e8:	sxtw	x2, w19
  4355ec:	b.gt	435588 <ferror@plt+0x32d08>
  4355f0:	add	x1, x2, #0x1
  4355f4:	add	x1, x22, x1, lsl #3
  4355f8:	b	435590 <ferror@plt+0x32d10>
  4355fc:	mov	x0, x2
  435600:	mov	w18, w1
  435604:	b	435450 <ferror@plt+0x32bd0>
  435608:	mov	w1, w15
  43560c:	mov	x0, x2
  435610:	bl	431a80 <ferror@plt+0x2f200>
  435614:	ldrb	w3, [x0, #7]
  435618:	mov	w1, #0x1                   	// #1
  43561c:	ldr	x2, [x20]
  435620:	lsl	w18, w1, w3
  435624:	sub	w18, w18, #0x1
  435628:	and	w18, w18, w15
  43562c:	sub	w15, w15, w18
  435630:	ldr	w0, [x2, #36]
  435634:	lsl	w18, w18, w3
  435638:	add	w18, w18, w15
  43563c:	b	4354f0 <ferror@plt+0x32c70>
  435640:	stp	x29, x30, [sp, #-32]!
  435644:	mov	x29, sp
  435648:	stp	x19, x20, [sp, #16]
  43564c:	mov	x19, x0
  435650:	mov	x20, x3
  435654:	mov	x0, x3
  435658:	stp	w1, w2, [x19]
  43565c:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  435660:	str	x0, [x19, #8]
  435664:	mov	x0, x20
  435668:	bl	402270 <strlen@plt>
  43566c:	str	x0, [x19, #16]
  435670:	ldp	x19, x20, [sp, #16]
  435674:	ldp	x29, x30, [sp], #32
  435678:	ret
  43567c:	nop
  435680:	stp	x29, x30, [sp, #-112]!
  435684:	mov	x29, sp
  435688:	stp	x19, x20, [sp, #16]
  43568c:	mov	x19, x0
  435690:	ldr	w0, [x0]
  435694:	mov	x20, x1
  435698:	add	x8, sp, #0x30
  43569c:	mov	w1, #0x1                   	// #1
  4356a0:	stp	x21, x22, [sp, #32]
  4356a4:	mov	w21, w2
  4356a8:	bl	415f10 <ferror@plt+0x13690>
  4356ac:	ldr	x22, [sp, #48]
  4356b0:	cmp	x22, x20
  4356b4:	b.eq	4356cc <ferror@plt+0x32e4c>  // b.none
  4356b8:	mov	w0, #0x0                   	// #0
  4356bc:	ldp	x19, x20, [sp, #16]
  4356c0:	ldp	x21, x22, [sp, #32]
  4356c4:	ldp	x29, x30, [sp], #112
  4356c8:	ret
  4356cc:	ldr	w0, [sp, #56]
  4356d0:	cmp	w0, w21
  4356d4:	b.gt	4356b8 <ferror@plt+0x32e38>
  4356d8:	ldr	w0, [x19, #4]
  4356dc:	add	x8, sp, #0x50
  4356e0:	mov	w1, #0x1                   	// #1
  4356e4:	bl	415f10 <ferror@plt+0x13690>
  4356e8:	ldr	x0, [sp, #80]
  4356ec:	cmp	x0, x22
  4356f0:	b.ne	4356b8 <ferror@plt+0x32e38>  // b.any
  4356f4:	ldr	w0, [sp, #88]
  4356f8:	ldp	x19, x20, [sp, #16]
  4356fc:	cmp	w0, w21
  435700:	cset	w0, ge  // ge = tcont
  435704:	ldp	x21, x22, [sp, #32]
  435708:	ldp	x29, x30, [sp], #112
  43570c:	ret
  435710:	stp	x29, x30, [sp, #-48]!
  435714:	mov	x29, sp
  435718:	stp	x19, x20, [sp, #16]
  43571c:	mov	x19, x0
  435720:	ldr	w0, [x0, #4]
  435724:	cmp	w0, w1
  435728:	b.eq	43573c <ferror@plt+0x32ebc>  // b.none
  43572c:	mov	w0, #0x0                   	// #0
  435730:	ldp	x19, x20, [sp, #16]
  435734:	ldp	x29, x30, [sp], #48
  435738:	ret
  43573c:	str	x21, [sp, #32]
  435740:	mov	x20, x3
  435744:	str	w2, [x19, #4]
  435748:	mov	x0, x3
  43574c:	bl	402270 <strlen@plt>
  435750:	mov	x21, x0
  435754:	ldp	x0, x1, [x19, #8]
  435758:	add	x1, x1, #0x1
  43575c:	add	x1, x1, x21
  435760:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  435764:	ldr	x3, [x19, #16]
  435768:	str	x0, [x19, #8]
  43576c:	mov	x1, x20
  435770:	mov	x2, x21
  435774:	add	x0, x0, x3
  435778:	bl	402220 <memcpy@plt>
  43577c:	ldp	x1, x2, [x19, #8]
  435780:	mov	w0, #0x1                   	// #1
  435784:	add	x21, x21, x2
  435788:	str	x21, [x19, #16]
  43578c:	strb	wzr, [x1, x21]
  435790:	ldp	x19, x20, [sp, #16]
  435794:	ldr	x21, [sp, #32]
  435798:	ldp	x29, x30, [sp], #48
  43579c:	ret
  4357a0:	ldr	x1, [x0, #16]
  4357a4:	cbz	x1, 4357c0 <ferror@plt+0x32f40>
  4357a8:	ldr	x0, [x0, #8]
  4357ac:	add	x1, x0, x1
  4357b0:	ldurb	w0, [x1, #-1]
  4357b4:	cmp	w0, #0xa
  4357b8:	cset	w0, eq  // eq = none
  4357bc:	ret
  4357c0:	mov	w0, #0x0                   	// #0
  4357c4:	ret
  4357c8:	ldr	x1, [x0, #136]
  4357cc:	ldr	x2, [x1, #8]
  4357d0:	cbz	x2, 435804 <ferror@plt+0x32f84>
  4357d4:	ldr	w0, [x1, #48]
  4357d8:	cmp	w0, #0x1
  4357dc:	b.eq	4357f4 <ferror@plt+0x32f74>  // b.none
  4357e0:	cbnz	w0, 435830 <ferror@plt+0x32fb0>
  4357e4:	ldr	x0, [x1, #16]
  4357e8:	sub	x0, x0, #0x8
  4357ec:	str	x0, [x1, #16]
  4357f0:	ret
  4357f4:	ldr	x0, [x1, #16]
  4357f8:	sub	x0, x0, #0x18
  4357fc:	str	x0, [x1, #16]
  435800:	ret
  435804:	ldr	x3, [x0, #488]
  435808:	ldr	x1, [x0, #448]
  43580c:	ldr	w2, [x0, #496]
  435810:	ldr	x4, [x3, #16]
  435814:	sub	x1, x1, #0x18
  435818:	add	w2, w2, #0x1
  43581c:	str	x1, [x0, #448]
  435820:	str	w2, [x0, #496]
  435824:	cmp	x1, x4
  435828:	b.eq	435868 <ferror@plt+0x32fe8>  // b.none
  43582c:	ret
  435830:	stp	x29, x30, [sp, #-16]!
  435834:	cmp	w0, #0x2
  435838:	mov	x29, sp
  43583c:	b.ne	435898 <ferror@plt+0x33018>  // b.any
  435840:	ldr	x2, [x1, #16]
  435844:	ldr	x0, [x1, #40]
  435848:	sub	x2, x2, #0x8
  43584c:	str	x2, [x1, #16]
  435850:	cbz	x0, 435880 <ferror@plt+0x33000>
  435854:	ldr	x1, [x0, #16]
  435858:	sub	x1, x1, #0x4
  43585c:	str	x1, [x0, #16]
  435860:	ldp	x29, x30, [sp], #16
  435864:	ret
  435868:	ldr	x1, [x3, #8]
  43586c:	cbz	x1, 43582c <ferror@plt+0x32fac>
  435870:	ldr	x2, [x1, #24]
  435874:	str	x2, [x0, #448]
  435878:	str	x1, [x0, #488]
  43587c:	ret
  435880:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435884:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435888:	add	x2, x2, #0x540
  43588c:	add	x0, x0, #0x558
  435890:	mov	w1, #0xb9e                 	// #2974
  435894:	bl	4028b0 <ferror@plt+0x30>
  435898:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43589c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4358a0:	add	x2, x2, #0x540
  4358a4:	add	x0, x0, #0x558
  4358a8:	mov	w1, #0xba1                 	// #2977
  4358ac:	bl	4028b0 <ferror@plt+0x30>
  4358b0:	stp	x29, x30, [sp, #-80]!
  4358b4:	mov	x29, sp
  4358b8:	stp	x19, x20, [sp, #16]
  4358bc:	mov	x19, x0
  4358c0:	ldr	x0, [x2]
  4358c4:	stp	x21, x22, [sp, #32]
  4358c8:	mov	x21, x2
  4358cc:	mov	x22, x3
  4358d0:	stp	x23, x24, [sp, #48]
  4358d4:	mov	w23, w1
  4358d8:	stp	x25, x26, [sp, #64]
  4358dc:	bl	42c010 <ferror@plt+0x29790>
  4358e0:	mov	w20, w0
  4358e4:	mov	x0, x22
  4358e8:	bl	42c010 <ferror@plt+0x29790>
  4358ec:	add	w20, w20, w0
  4358f0:	mov	w3, #0x1                   	// #1
  4358f4:	add	w20, w20, #0x1
  4358f8:	mov	x0, x19
  4358fc:	add	x20, x20, #0xf
  435900:	ldr	x1, [x21]
  435904:	and	x20, x20, #0x1fffffff0
  435908:	sub	sp, sp, x20
  43590c:	mov	x25, sp
  435910:	mov	x2, x25
  435914:	bl	42c378 <ferror@plt+0x29af8>
  435918:	ldr	x1, [x21]
  43591c:	mov	x24, x0
  435920:	mov	x4, x0
  435924:	ldrb	w0, [x1, #4]
  435928:	cmp	w0, #0x7
  43592c:	b.eq	435a4c <ferror@plt+0x331cc>  // b.none
  435930:	ldrb	w0, [x22, #4]
  435934:	cmp	w0, #0x53
  435938:	b.ne	435a54 <ferror@plt+0x331d4>  // b.any
  43593c:	sub	x2, x4, x25
  435940:	mov	x1, x25
  435944:	mov	w0, #0xa                   	// #10
  435948:	strb	w0, [x4]
  43594c:	mov	w3, #0x1                   	// #1
  435950:	mov	x0, x19
  435954:	bl	421828 <ferror@plt+0x1efa8>
  435958:	mov	x0, x19
  43595c:	bl	42b0f8 <ferror@plt+0x28878>
  435960:	mov	x0, x19
  435964:	bl	42bd98 <ferror@plt+0x29518>
  435968:	str	x0, [x19, #448]
  43596c:	mov	x0, x19
  435970:	bl	42edd8 <ferror@plt+0x2c558>
  435974:	mov	x20, x0
  435978:	ldr	x1, [x19]
  43597c:	ldr	x2, [x1]
  435980:	ldr	x0, [x1, #32]
  435984:	cmp	x2, x0
  435988:	b.eq	435a70 <ferror@plt+0x331f0>  // b.none
  43598c:	ldr	w26, [x20]
  435990:	mov	x0, x19
  435994:	bl	421958 <ferror@plt+0x1f0d8>
  435998:	mov	x0, x19
  43599c:	bl	4357c8 <ferror@plt+0x32f48>
  4359a0:	strb	wzr, [x24]
  4359a4:	mov	w24, #0x0                   	// #0
  4359a8:	ldr	x2, [x21]
  4359ac:	ldr	w3, [x19, #1116]
  4359b0:	ldp	x0, x1, [x2]
  4359b4:	stp	x0, x1, [x20]
  4359b8:	cmp	w3, #0x15
  4359bc:	ldr	x0, [x2, #16]
  4359c0:	str	x0, [x20, #16]
  4359c4:	ldrh	w0, [x20, #6]
  4359c8:	str	x20, [x21]
  4359cc:	and	w0, w0, #0xfffffff7
  4359d0:	str	w26, [x20]
  4359d4:	strh	w0, [x20, #6]
  4359d8:	b.ne	4359fc <ferror@plt+0x3317c>  // b.any
  4359dc:	mov	sp, x29
  4359e0:	mov	w0, w24
  4359e4:	ldp	x19, x20, [sp, #16]
  4359e8:	ldp	x21, x22, [sp, #32]
  4359ec:	ldp	x23, x24, [sp, #48]
  4359f0:	ldp	x25, x26, [sp, #64]
  4359f4:	ldp	x29, x30, [sp], #80
  4359f8:	ret
  4359fc:	mov	x1, x22
  435a00:	mov	x0, x19
  435a04:	bl	42c490 <ferror@plt+0x29c10>
  435a08:	mov	x6, x0
  435a0c:	mov	x5, x25
  435a10:	mov	w2, w23
  435a14:	mov	x0, x19
  435a18:	mov	w3, #0x0                   	// #0
  435a1c:	mov	w1, #0x3                   	// #3
  435a20:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435a24:	add	x4, x4, #0x570
  435a28:	bl	423290 <ferror@plt+0x20a10>
  435a2c:	mov	sp, x29
  435a30:	mov	w0, w24
  435a34:	ldp	x19, x20, [sp, #16]
  435a38:	ldp	x21, x22, [sp, #32]
  435a3c:	ldp	x23, x24, [sp, #48]
  435a40:	ldp	x25, x26, [sp, #64]
  435a44:	ldp	x29, x30, [sp], #80
  435a48:	ret
  435a4c:	ldrb	w0, [x22, #4]
  435a50:	cbnz	w0, 435aa0 <ferror@plt+0x33220>
  435a54:	mov	x2, x4
  435a58:	mov	x1, x22
  435a5c:	mov	x0, x19
  435a60:	mov	w3, #0x1                   	// #1
  435a64:	bl	42c378 <ferror@plt+0x29af8>
  435a68:	mov	x4, x0
  435a6c:	b	43593c <ferror@plt+0x330bc>
  435a70:	str	x20, [x21]
  435a74:	mov	x0, x19
  435a78:	mov	w24, #0x1                   	// #1
  435a7c:	bl	421958 <ferror@plt+0x1f0d8>
  435a80:	mov	sp, x29
  435a84:	mov	w0, w24
  435a88:	ldp	x19, x20, [sp, #16]
  435a8c:	ldp	x21, x22, [sp, #32]
  435a90:	ldp	x23, x24, [sp, #48]
  435a94:	ldp	x25, x26, [sp, #64]
  435a98:	ldp	x29, x30, [sp], #80
  435a9c:	ret
  435aa0:	mov	w0, #0x20                  	// #32
  435aa4:	strb	w0, [x4], #1
  435aa8:	b	435930 <ferror@plt+0x330b0>
  435aac:	nop
  435ab0:	stp	x29, x30, [sp, #-80]!
  435ab4:	mov	x29, sp
  435ab8:	stp	x19, x20, [sp, #16]
  435abc:	mov	w20, w5
  435ac0:	stp	x21, x22, [sp, #32]
  435ac4:	mov	x22, x0
  435ac8:	mov	x21, x1
  435acc:	stp	x23, x24, [sp, #48]
  435ad0:	mov	x24, x3
  435ad4:	mov	x23, x4
  435ad8:	ldr	x0, [x0, #136]
  435adc:	str	x25, [sp, #64]
  435ae0:	mov	x25, x2
  435ae4:	cbz	x1, 435b34 <ferror@plt+0x332b4>
  435ae8:	ldr	x19, [x0]
  435aec:	cbz	x19, 435b50 <ferror@plt+0x332d0>
  435af0:	str	x19, [x22, #136]
  435af4:	mov	w1, #0x2                   	// #2
  435af8:	str	x25, [x19, #32]
  435afc:	mov	x0, #0x18                  	// #24
  435b00:	str	w1, [x19, #48]
  435b04:	add	x20, x23, w20, uxtw #3
  435b08:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  435b0c:	ldr	x25, [sp, #64]
  435b10:	stp	x21, x24, [x0]
  435b14:	str	x24, [x0, #16]
  435b18:	ldp	x21, x22, [sp, #32]
  435b1c:	stp	x23, x20, [x19, #16]
  435b20:	str	x0, [x19, #40]
  435b24:	ldp	x19, x20, [sp, #16]
  435b28:	ldp	x23, x24, [sp, #48]
  435b2c:	ldp	x29, x30, [sp], #80
  435b30:	ret
  435b34:	cbz	x0, 435b7c <ferror@plt+0x332fc>
  435b38:	ldr	w1, [x0, #48]
  435b3c:	ldr	x21, [x0, #40]
  435b40:	cmp	w1, #0x2
  435b44:	b.ne	435ae8 <ferror@plt+0x33268>  // b.any
  435b48:	ldr	x21, [x21]
  435b4c:	b	435ae8 <ferror@plt+0x33268>
  435b50:	mov	x0, #0x38                  	// #56
  435b54:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  435b58:	mov	x19, x0
  435b5c:	stp	xzr, xzr, [x0]
  435b60:	stp	xzr, xzr, [x0, #16]
  435b64:	stp	xzr, xzr, [x0, #32]
  435b68:	ldr	x0, [x22, #136]
  435b6c:	str	x0, [x19, #8]
  435b70:	str	xzr, [x19, #48]
  435b74:	str	x19, [x0]
  435b78:	b	435af0 <ferror@plt+0x33270>
  435b7c:	mov	x21, x0
  435b80:	b	435ae8 <ferror@plt+0x33268>
  435b84:	nop
  435b88:	stp	x29, x30, [sp, #-48]!
  435b8c:	mov	x29, sp
  435b90:	stp	x19, x20, [sp, #16]
  435b94:	mov	x19, x1
  435b98:	ldrb	w1, [x1, #18]
  435b9c:	and	w1, w1, #0x3
  435ba0:	cmp	w1, #0x2
  435ba4:	b.eq	435bb8 <ferror@plt+0x33338>  // b.none
  435ba8:	mov	w0, #0x1                   	// #1
  435bac:	ldp	x19, x20, [sp, #16]
  435bb0:	ldp	x29, x30, [sp], #48
  435bb4:	ret
  435bb8:	str	x21, [sp, #32]
  435bbc:	mov	x20, x0
  435bc0:	ldr	x21, [x19, #24]
  435bc4:	ldrb	w0, [x21, #19]
  435bc8:	tbz	w0, #5, 435be0 <ferror@plt+0x33360>
  435bcc:	mov	w0, #0x1                   	// #1
  435bd0:	ldp	x19, x20, [sp, #16]
  435bd4:	ldr	x21, [sp, #32]
  435bd8:	ldp	x29, x30, [sp], #48
  435bdc:	ret
  435be0:	ldr	w1, [x21, #8]
  435be4:	ldr	x0, [x20, #40]
  435be8:	bl	431a80 <ferror@plt+0x2f200>
  435bec:	ldr	w0, [x0, #20]
  435bf0:	cbnz	w0, 435bcc <ferror@plt+0x3334c>
  435bf4:	ldr	w2, [x21, #8]
  435bf8:	mov	x0, x20
  435bfc:	ldr	x5, [x19]
  435c00:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435c04:	mov	w3, #0x0                   	// #0
  435c08:	add	x4, x4, #0x5b0
  435c0c:	mov	w1, #0xe                   	// #14
  435c10:	bl	423308 <ferror@plt+0x20a88>
  435c14:	ldr	x21, [sp, #32]
  435c18:	b	435ba8 <ferror@plt+0x33328>
  435c1c:	nop
  435c20:	stp	x29, x30, [sp, #-80]!
  435c24:	mov	x29, sp
  435c28:	ldr	w3, [x1, #24]
  435c2c:	stp	x19, x20, [sp, #16]
  435c30:	mov	x20, x1
  435c34:	mov	x19, x0
  435c38:	cmp	w3, #0x5
  435c3c:	b.eq	435d00 <ferror@plt+0x33480>  // b.none
  435c40:	b.ls	435cd0 <ferror@plt+0x33450>  // b.plast
  435c44:	cmp	w3, #0x9
  435c48:	b.eq	435de8 <ferror@plt+0x33568>  // b.none
  435c4c:	b.ls	435c98 <ferror@plt+0x33418>  // b.plast
  435c50:	cmp	w3, #0xa
  435c54:	b.ne	435e08 <ferror@plt+0x33588>  // b.any
  435c58:	ldr	x1, [x0, #1040]
  435c5c:	blr	x1
  435c60:	mov	w20, w0
  435c64:	nop
  435c68:	mov	x1, #0x15                  	// #21
  435c6c:	mov	x0, x19
  435c70:	bl	42d3b8 <ferror@plt+0x2ab38>
  435c74:	mov	w2, w20
  435c78:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  435c7c:	mov	x20, x0
  435c80:	add	x1, x1, #0xa18
  435c84:	bl	402310 <sprintf@plt>
  435c88:	mov	x0, x20
  435c8c:	ldp	x19, x20, [sp, #16]
  435c90:	ldp	x29, x30, [sp], #80
  435c94:	ret
  435c98:	cmp	w3, #0x6
  435c9c:	b.eq	435e28 <ferror@plt+0x335a8>  // b.none
  435ca0:	cmp	w3, #0x8
  435ca4:	b.ne	435e08 <ferror@plt+0x33588>  // b.any
  435ca8:	stp	x21, x22, [sp, #32]
  435cac:	ldrb	w1, [x0, #1134]
  435cb0:	cbnz	w1, 435e6c <ferror@plt+0x335ec>
  435cb4:	mov	x0, x19
  435cb8:	bl	42a1c0 <ferror@plt+0x27940>
  435cbc:	ldr	x20, [x0, #88]
  435cc0:	mov	x21, x0
  435cc4:	cbz	x20, 435f90 <ferror@plt+0x33710>
  435cc8:	ldp	x21, x22, [sp, #32]
  435ccc:	b	435c88 <ferror@plt+0x33408>
  435cd0:	cmp	w3, #0x4
  435cd4:	b.eq	435e40 <ferror@plt+0x335c0>  // b.none
  435cd8:	cmp	w3, #0x1
  435cdc:	b.hi	435d2c <ferror@plt+0x334ac>  // b.pmore
  435ce0:	cbnz	w3, 435d00 <ferror@plt+0x33480>
  435ce4:	ldrb	w1, [x0, #1160]
  435ce8:	ldr	x0, [x0, #40]
  435cec:	cbz	w1, 435e84 <ferror@plt+0x33604>
  435cf0:	ldr	w1, [x0, #60]
  435cf4:	bl	432120 <ferror@plt+0x2f8a0>
  435cf8:	mov	w20, w0
  435cfc:	b	435c68 <ferror@plt+0x333e8>
  435d00:	ldrb	w0, [x19, #1134]
  435d04:	cbnz	w0, 435ed4 <ferror@plt+0x33654>
  435d08:	ldr	x0, [x19, #640]
  435d0c:	cbz	x0, 435ef0 <ferror@plt+0x33670>
  435d10:	ldr	w0, [x20, #24]
  435d14:	cmp	w0, #0x1
  435d18:	b.eq	435eb4 <ferror@plt+0x33634>  // b.none
  435d1c:	ldr	x20, [x19, #648]
  435d20:	cbnz	x20, 435c88 <ferror@plt+0x33408>
  435d24:	mov	w20, #0x1                   	// #1
  435d28:	b	435c68 <ferror@plt+0x333e8>
  435d2c:	stp	x21, x22, [sp, #32]
  435d30:	cmp	w3, #0x2
  435d34:	b.eq	435ec0 <ferror@plt+0x33640>  // b.none
  435d38:	ldr	x0, [x0, #288]
  435d3c:	bl	42a118 <ferror@plt+0x27898>
  435d40:	mov	x21, x0
  435d44:	cbz	x0, 43609c <ferror@plt+0x3381c>
  435d48:	ldr	x1, [x19, #1080]
  435d4c:	cbz	x1, 435d5c <ferror@plt+0x334dc>
  435d50:	mov	x0, x21
  435d54:	blr	x1
  435d58:	mov	x21, x0
  435d5c:	mov	x0, x21
  435d60:	bl	402270 <strlen@plt>
  435d64:	mov	x1, x0
  435d68:	mov	x0, x19
  435d6c:	mov	x19, x1
  435d70:	lsl	w1, w1, #1
  435d74:	add	w1, w1, #0x3
  435d78:	bl	42d3b8 <ferror@plt+0x2ab38>
  435d7c:	mov	x2, x0
  435d80:	mov	w3, #0x22                  	// #34
  435d84:	mov	x20, x0
  435d88:	sub	w1, w19, #0x1
  435d8c:	strb	w3, [x2], #1
  435d90:	cbz	w19, 435e50 <ferror@plt+0x335d0>
  435d94:	mov	w3, w1
  435d98:	mov	w4, #0x5c                  	// #92
  435d9c:	add	x3, x3, #0x1
  435da0:	add	x3, x21, x3
  435da4:	b	435db8 <ferror@plt+0x33538>
  435da8:	mov	x2, x0
  435dac:	cmp	x21, x3
  435db0:	strb	w1, [x2], #1
  435db4:	b.eq	435e50 <ferror@plt+0x335d0>  // b.none
  435db8:	ldrb	w1, [x21], #1
  435dbc:	cmp	w1, #0x22
  435dc0:	b.eq	435ddc <ferror@plt+0x3355c>  // b.none
  435dc4:	cmp	w1, #0x5c
  435dc8:	b.eq	435ddc <ferror@plt+0x3355c>  // b.none
  435dcc:	cmp	w1, #0xa
  435dd0:	mov	x0, x2
  435dd4:	b.ne	435da8 <ferror@plt+0x33528>  // b.any
  435dd8:	mov	w1, #0x6e                  	// #110
  435ddc:	mov	x0, x2
  435de0:	strb	w4, [x0], #1
  435de4:	b	435da8 <ferror@plt+0x33528>
  435de8:	ldrb	w1, [x0, #1244]
  435dec:	cbz	w1, 435df8 <ferror@plt+0x33578>
  435df0:	ldrb	w1, [x0, #16]
  435df4:	cbnz	w1, 435ea0 <ferror@plt+0x33620>
  435df8:	ldr	w20, [x19, #1376]
  435dfc:	add	w0, w20, #0x1
  435e00:	str	w0, [x19, #1376]
  435e04:	b	435c68 <ferror@plt+0x333e8>
  435e08:	ldr	x3, [x20]
  435e0c:	mov	x0, x19
  435e10:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435e14:	mov	w1, #0x4                   	// #4
  435e18:	add	x2, x2, #0x5e8
  435e1c:	mov	w20, #0x1                   	// #1
  435e20:	bl	422e10 <ferror@plt+0x20590>
  435e24:	b	435c68 <ferror@plt+0x333e8>
  435e28:	ldr	x0, [x0]
  435e2c:	cbz	x0, 435d24 <ferror@plt+0x334a4>
  435e30:	ldrb	w0, [x0, #106]
  435e34:	cmp	w0, #0x0
  435e38:	cset	w20, eq  // eq = none
  435e3c:	b	435c68 <ferror@plt+0x333e8>
  435e40:	ldr	x0, [x0, #40]
  435e44:	ldr	w20, [x0, #48]
  435e48:	sub	w20, w20, #0x1
  435e4c:	b	435c68 <ferror@plt+0x333e8>
  435e50:	mov	w0, #0x22                  	// #34
  435e54:	strh	w0, [x2]
  435e58:	mov	x0, x20
  435e5c:	ldp	x19, x20, [sp, #16]
  435e60:	ldp	x21, x22, [sp, #32]
  435e64:	ldp	x29, x30, [sp], #80
  435e68:	ret
  435e6c:	ldr	x3, [x20]
  435e70:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435e74:	mov	w1, #0x14                  	// #20
  435e78:	add	x2, x2, #0x608
  435e7c:	bl	422f30 <ferror@plt+0x206b0>
  435e80:	b	435cb4 <ferror@plt+0x33434>
  435e84:	mov	w1, w2
  435e88:	mov	x3, #0x0                   	// #0
  435e8c:	mov	w2, #0x0                   	// #0
  435e90:	bl	432b40 <ferror@plt+0x302c0>
  435e94:	mov	w1, w0
  435e98:	ldr	x0, [x19, #40]
  435e9c:	b	435cf4 <ferror@plt+0x33474>
  435ea0:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435ea4:	mov	w1, #0x3                   	// #3
  435ea8:	add	x2, x2, #0x6e8
  435eac:	bl	422e10 <ferror@plt+0x20590>
  435eb0:	b	435df8 <ferror@plt+0x33578>
  435eb4:	ldr	x20, [x19, #640]
  435eb8:	cbz	x20, 435d24 <ferror@plt+0x334a4>
  435ebc:	b	435c88 <ferror@plt+0x33408>
  435ec0:	ldr	x0, [x0, #40]
  435ec4:	ldr	w1, [x0, #60]
  435ec8:	bl	4323b8 <ferror@plt+0x2fb38>
  435ecc:	mov	x21, x0
  435ed0:	b	435d48 <ferror@plt+0x334c8>
  435ed4:	ldr	x3, [x20]
  435ed8:	mov	x0, x19
  435edc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435ee0:	mov	w1, #0x14                  	// #20
  435ee4:	add	x2, x2, #0x608
  435ee8:	bl	422f30 <ferror@plt+0x206b0>
  435eec:	b	435d08 <ferror@plt+0x33488>
  435ef0:	ldr	x0, [x19, #656]
  435ef4:	stp	x21, x22, [sp, #32]
  435ef8:	cmn	x0, #0x2
  435efc:	b.eq	435f78 <ferror@plt+0x336f8>  // b.none
  435f00:	tbnz	x0, #63, 43602c <ferror@plt+0x337ac>
  435f04:	add	x0, x19, #0x290
  435f08:	bl	402480 <gmtime@plt>
  435f0c:	mov	x21, x0
  435f10:	cbz	x21, 435ff8 <ferror@plt+0x33778>
  435f14:	mov	x1, #0xe                   	// #14
  435f18:	mov	x0, x19
  435f1c:	bl	42d3b8 <ferror@plt+0x2ab38>
  435f20:	ldrsw	x5, [x21, #16]
  435f24:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435f28:	add	x2, x2, #0xe00
  435f2c:	ldr	w3, [x21, #12]
  435f30:	ldr	w4, [x21, #20]
  435f34:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435f38:	str	x0, [x19, #640]
  435f3c:	add	x1, x1, #0x678
  435f40:	ldr	x2, [x2, x5, lsl #3]
  435f44:	add	w4, w4, #0x76c
  435f48:	bl	402310 <sprintf@plt>
  435f4c:	mov	x1, #0xb                   	// #11
  435f50:	mov	x0, x19
  435f54:	bl	42d3b8 <ferror@plt+0x2ab38>
  435f58:	ldp	w4, w3, [x21]
  435f5c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  435f60:	ldr	w2, [x21, #8]
  435f64:	add	x1, x1, #0x688
  435f68:	str	x0, [x19, #648]
  435f6c:	bl	402310 <sprintf@plt>
  435f70:	ldp	x21, x22, [sp, #32]
  435f74:	b	435d10 <ferror@plt+0x33490>
  435f78:	ldr	x1, [x19, #1056]
  435f7c:	cbz	x1, 43602c <ferror@plt+0x337ac>
  435f80:	mov	x0, x19
  435f84:	blr	x1
  435f88:	str	x0, [x19, #656]
  435f8c:	b	435f00 <ferror@plt+0x33680>
  435f90:	bl	42a1c8 <ferror@plt+0x27948>
  435f94:	cbz	x0, 436064 <ferror@plt+0x337e4>
  435f98:	bl	42a120 <ferror@plt+0x278a0>
  435f9c:	cbz	x0, 436074 <ferror@plt+0x337f4>
  435fa0:	add	x0, x0, #0x58
  435fa4:	bl	402370 <localtime@plt>
  435fa8:	cbz	x0, 436074 <ferror@plt+0x337f4>
  435fac:	str	x23, [sp, #48]
  435fb0:	bl	402730 <asctime@plt>
  435fb4:	mov	x22, x0
  435fb8:	bl	402270 <strlen@plt>
  435fbc:	mov	x1, x0
  435fc0:	mov	x0, x19
  435fc4:	mov	x19, x1
  435fc8:	add	x1, x1, #0x2
  435fcc:	bl	42d3b8 <ferror@plt+0x2ab38>
  435fd0:	mov	x20, x0
  435fd4:	mov	w23, #0x22                  	// #34
  435fd8:	strb	w23, [x0], #1
  435fdc:	mov	x1, x22
  435fe0:	bl	4026c0 <strcpy@plt>
  435fe4:	strb	w23, [x20, x19]
  435fe8:	ldr	x23, [sp, #48]
  435fec:	str	x20, [x21, #88]
  435ff0:	ldp	x21, x22, [sp, #32]
  435ff4:	b	435c88 <ferror@plt+0x33408>
  435ff8:	mov	w1, #0x0                   	// #0
  435ffc:	mov	x0, x19
  436000:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436004:	add	x2, x2, #0x6a0
  436008:	bl	423628 <ferror@plt+0x20da8>
  43600c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436010:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436014:	add	x1, x1, #0x6c8
  436018:	add	x0, x0, #0x6d8
  43601c:	ldp	x21, x22, [sp, #32]
  436020:	str	x1, [x19, #640]
  436024:	str	x0, [x19, #648]
  436028:	b	435d10 <ferror@plt+0x33490>
  43602c:	bl	4027c0 <__errno_location@plt>
  436030:	mov	x21, x0
  436034:	mov	x0, #0x0                   	// #0
  436038:	str	wzr, [x21]
  43603c:	bl	4023c0 <time@plt>
  436040:	str	x0, [sp, #72]
  436044:	cmn	x0, #0x1
  436048:	b.ne	436054 <ferror@plt+0x337d4>  // b.any
  43604c:	ldr	w0, [x21]
  436050:	cbnz	w0, 435ff8 <ferror@plt+0x33778>
  436054:	add	x0, sp, #0x48
  436058:	bl	402370 <localtime@plt>
  43605c:	mov	x21, x0
  436060:	b	435f10 <ferror@plt+0x33690>
  436064:	ldr	x20, [x21, #88]
  436068:	ldp	x21, x22, [sp, #32]
  43606c:	cbz	x20, 435d24 <ferror@plt+0x334a4>
  436070:	b	435c88 <ferror@plt+0x33408>
  436074:	mov	x0, x19
  436078:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43607c:	mov	w1, #0x0                   	// #0
  436080:	add	x2, x2, #0x638
  436084:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436088:	bl	423628 <ferror@plt+0x20da8>
  43608c:	add	x20, x20, #0x5c8
  436090:	str	x20, [x21, #88]
  436094:	ldp	x21, x22, [sp, #32]
  436098:	b	435c88 <ferror@plt+0x33408>
  43609c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4360a0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4360a4:	add	x2, x2, #0x660
  4360a8:	add	x0, x0, #0x558
  4360ac:	mov	w1, #0x1c5                 	// #453
  4360b0:	str	x23, [sp, #48]
  4360b4:	bl	4028b0 <ferror@plt+0x30>
  4360b8:	stp	x29, x30, [sp, #-80]!
  4360bc:	mov	x29, sp
  4360c0:	ldr	w4, [x1, #24]
  4360c4:	stp	x19, x20, [sp, #16]
  4360c8:	mov	x19, x0
  4360cc:	cmp	w4, #0x7
  4360d0:	stp	x21, x22, [sp, #32]
  4360d4:	mov	w22, w2
  4360d8:	stp	x23, x24, [sp, #48]
  4360dc:	stp	x25, x26, [sp, #64]
  4360e0:	b.ne	43613c <ferror@plt+0x338bc>  // b.any
  4360e4:	ldrb	w2, [x0, #16]
  4360e8:	mov	w1, #0x0                   	// #0
  4360ec:	cbz	w2, 436110 <ferror@plt+0x33890>
  4360f0:	mov	sp, x29
  4360f4:	mov	w0, w1
  4360f8:	ldp	x19, x20, [sp, #16]
  4360fc:	ldp	x21, x22, [sp, #32]
  436100:	ldp	x23, x24, [sp, #48]
  436104:	ldp	x25, x26, [sp, #64]
  436108:	ldp	x29, x30, [sp], #80
  43610c:	ret
  436110:	mov	w1, w22
  436114:	bl	422348 <ferror@plt+0x1fac8>
  436118:	mov	sp, x29
  43611c:	mov	w1, w0
  436120:	mov	w0, w1
  436124:	ldp	x19, x20, [sp, #16]
  436128:	ldp	x21, x22, [sp, #32]
  43612c:	ldp	x23, x24, [sp, #48]
  436130:	ldp	x25, x26, [sp, #64]
  436134:	ldp	x29, x30, [sp], #80
  436138:	ret
  43613c:	mov	w2, w3
  436140:	mov	x21, x1
  436144:	bl	435c20 <ferror@plt+0x333a0>
  436148:	mov	x23, x0
  43614c:	bl	402270 <strlen@plt>
  436150:	mov	x20, x0
  436154:	add	x0, x0, #0x10
  436158:	mov	x2, x20
  43615c:	and	x0, x0, #0xfffffffffffffff0
  436160:	mov	x1, x23
  436164:	sub	sp, sp, x0
  436168:	mov	x4, sp
  43616c:	mov	x0, x4
  436170:	bl	402220 <memcpy@plt>
  436174:	mov	x4, x0
  436178:	mov	x1, x0
  43617c:	mov	x2, x20
  436180:	mov	w5, #0xa                   	// #10
  436184:	mov	w3, #0x1                   	// #1
  436188:	strb	w5, [x4, x20]
  43618c:	mov	x0, x19
  436190:	bl	421828 <ferror@plt+0x1efa8>
  436194:	mov	x0, x19
  436198:	bl	42b0f8 <ferror@plt+0x28878>
  43619c:	mov	x0, x19
  4361a0:	bl	42bd98 <ferror@plt+0x29518>
  4361a4:	str	x0, [x19, #448]
  4361a8:	mov	x0, x19
  4361ac:	bl	42edd8 <ferror@plt+0x2c558>
  4361b0:	mov	x20, x0
  4361b4:	ldr	x1, [x19, #136]
  4361b8:	ldr	w0, [x1, #48]
  4361bc:	str	w22, [x20]
  4361c0:	cmp	w0, #0x2
  4361c4:	b.eq	436244 <ferror@plt+0x339c4>  // b.none
  4361c8:	ldr	x2, [x1]
  4361cc:	ldr	x22, [x1, #40]
  4361d0:	cbz	x2, 4362f8 <ferror@plt+0x33a78>
  4361d4:	str	x2, [x19, #136]
  4361d8:	add	x1, x20, #0x18
  4361dc:	mov	w0, #0x1                   	// #1
  4361e0:	stp	x20, x1, [x2, #16]
  4361e4:	stp	xzr, x22, [x2, #32]
  4361e8:	str	w0, [x2, #48]
  4361ec:	ldr	x0, [x19]
  4361f0:	ldr	x1, [x0]
  4361f4:	ldr	x0, [x0, #32]
  4361f8:	cmp	x1, x0
  4361fc:	b.eq	436218 <ferror@plt+0x33998>  // b.none
  436200:	ldr	x3, [x21]
  436204:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436208:	mov	x0, x19
  43620c:	add	x2, x2, #0x5e8
  436210:	mov	w1, #0x4                   	// #4
  436214:	bl	422e10 <ferror@plt+0x20590>
  436218:	mov	x0, x19
  43621c:	bl	421958 <ferror@plt+0x1f0d8>
  436220:	mov	sp, x29
  436224:	mov	w1, #0x1                   	// #1
  436228:	mov	w0, w1
  43622c:	ldp	x19, x20, [sp, #16]
  436230:	ldp	x21, x22, [sp, #32]
  436234:	ldp	x23, x24, [sp, #48]
  436238:	ldp	x25, x26, [sp, #64]
  43623c:	ldp	x29, x30, [sp], #80
  436240:	ret
  436244:	mov	x0, #0x10                  	// #16
  436248:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43624c:	mov	x1, #0x8                   	// #8
  436250:	mov	x24, x0
  436254:	mov	x0, x19
  436258:	bl	42d148 <ferror@plt+0x2a8c8>
  43625c:	mov	x23, x0
  436260:	mov	w2, w22
  436264:	ldr	x0, [x19, #40]
  436268:	mov	x1, x21
  43626c:	mov	w3, #0x1                   	// #1
  436270:	bl	431560 <ferror@plt+0x2ece0>
  436274:	ldp	x22, x2, [x23, #16]
  436278:	cmp	x22, x2
  43627c:	b.hi	436350 <ferror@plt+0x33ad0>  // b.pmore
  436280:	ldr	x25, [x23, #8]
  436284:	ldr	x2, [x19, #40]
  436288:	sub	x26, x22, x25
  43628c:	ubfx	x26, x26, #3, #32
  436290:	ldr	w3, [x2, #112]
  436294:	cbz	x0, 4362ac <ferror@plt+0x33a2c>
  436298:	mov	w2, w3
  43629c:	mov	w1, #0x0                   	// #0
  4362a0:	bl	431618 <ferror@plt+0x2ed98>
  4362a4:	mov	w3, w0
  4362a8:	ldr	x25, [x23, #8]
  4362ac:	mov	x1, x22
  4362b0:	ldr	x0, [x19, #136]
  4362b4:	str	w3, [x24, x26, lsl #2]
  4362b8:	str	x20, [x1], #8
  4362bc:	ldr	x20, [x0]
  4362c0:	str	x1, [x23, #16]
  4362c4:	cbz	x20, 436324 <ferror@plt+0x33aa4>
  4362c8:	str	x20, [x19, #136]
  4362cc:	mov	w1, #0x2                   	// #2
  4362d0:	str	x23, [x20, #32]
  4362d4:	mov	x0, #0x18                  	// #24
  4362d8:	str	w1, [x20, #48]
  4362dc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4362e0:	stp	x21, x24, [x0]
  4362e4:	add	x1, x25, #0x8
  4362e8:	str	x24, [x0, #16]
  4362ec:	stp	x25, x1, [x20, #16]
  4362f0:	str	x0, [x20, #40]
  4362f4:	b	4361ec <ferror@plt+0x3396c>
  4362f8:	mov	x0, #0x38                  	// #56
  4362fc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  436300:	mov	x2, x0
  436304:	stp	xzr, xzr, [x0]
  436308:	stp	xzr, xzr, [x0, #16]
  43630c:	stp	xzr, xzr, [x0, #32]
  436310:	ldr	x0, [x19, #136]
  436314:	str	x0, [x2, #8]
  436318:	str	xzr, [x2, #48]
  43631c:	str	x2, [x0]
  436320:	b	4361d4 <ferror@plt+0x33954>
  436324:	mov	x0, #0x38                  	// #56
  436328:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43632c:	mov	x20, x0
  436330:	stp	xzr, xzr, [x0]
  436334:	stp	xzr, xzr, [x0, #16]
  436338:	stp	xzr, xzr, [x0, #32]
  43633c:	ldr	x0, [x19, #136]
  436340:	str	x0, [x20, #8]
  436344:	str	xzr, [x20, #48]
  436348:	str	x20, [x0]
  43634c:	b	4362c8 <ferror@plt+0x33a48>
  436350:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436354:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436358:	add	x2, x2, #0x728
  43635c:	add	x0, x0, #0x558
  436360:	mov	w1, #0x953                 	// #2387
  436364:	bl	4028b0 <ferror@plt+0x30>
  436368:	sub	w3, w2, #0x1
  43636c:	cbz	w2, 4363d0 <ferror@plt+0x33b50>
  436370:	mov	w4, w3
  436374:	mov	w5, #0x5c                  	// #92
  436378:	add	x4, x4, #0x1
  43637c:	add	x4, x1, x4
  436380:	b	436394 <ferror@plt+0x33b14>
  436384:	mov	x0, x3
  436388:	cmp	x1, x4
  43638c:	strb	w2, [x0], #1
  436390:	b.eq	4363d0 <ferror@plt+0x33b50>  // b.none
  436394:	ldrb	w2, [x1], #1
  436398:	mov	x3, x0
  43639c:	cmp	w2, #0x22
  4363a0:	b.eq	4363b8 <ferror@plt+0x33b38>  // b.none
  4363a4:	cmp	w2, #0x5c
  4363a8:	b.eq	4363b8 <ferror@plt+0x33b38>  // b.none
  4363ac:	cmp	w2, #0xa
  4363b0:	b.ne	436384 <ferror@plt+0x33b04>  // b.any
  4363b4:	mov	w2, #0x6e                  	// #110
  4363b8:	mov	x3, x0
  4363bc:	cmp	x1, x4
  4363c0:	strb	w5, [x3], #1
  4363c4:	mov	x0, x3
  4363c8:	strb	w2, [x0], #1
  4363cc:	b.ne	436394 <ferror@plt+0x33b14>  // b.any
  4363d0:	ret
  4363d4:	nop
  4363d8:	stp	x29, x30, [sp, #-48]!
  4363dc:	mov	x29, sp
  4363e0:	ldrh	w4, [x1, #16]
  4363e4:	stp	x19, x20, [sp, #16]
  4363e8:	mov	w19, #0x1                   	// #1
  4363ec:	cmp	w4, w3
  4363f0:	b.eq	436450 <ferror@plt+0x33bd0>  // b.none
  4363f4:	str	x21, [sp, #32]
  4363f8:	mov	x19, x1
  4363fc:	mov	w6, w3
  436400:	mov	x20, x2
  436404:	mov	x21, x0
  436408:	b.ls	43648c <ferror@plt+0x33c0c>  // b.plast
  43640c:	add	w1, w3, #0x1
  436410:	cmp	w4, w1
  436414:	b.ne	436420 <ferror@plt+0x33ba0>  // b.any
  436418:	ldrb	w1, [x19, #19]
  43641c:	tbnz	w1, #3, 4364ac <ferror@plt+0x33c2c>
  436420:	ldr	x3, [x20]
  436424:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436428:	mov	w5, w6
  43642c:	add	x2, x2, #0x7e0
  436430:	mov	x0, x21
  436434:	mov	w1, #0x3                   	// #3
  436438:	bl	422e10 <ferror@plt+0x20590>
  43643c:	ldr	w2, [x19, #8]
  436440:	mov	w19, #0x0                   	// #0
  436444:	cmp	w2, #0x2
  436448:	b.hi	436460 <ferror@plt+0x33be0>  // b.pmore
  43644c:	ldr	x21, [sp, #32]
  436450:	mov	w0, w19
  436454:	ldp	x19, x20, [sp, #16]
  436458:	ldp	x29, x30, [sp], #48
  43645c:	ret
  436460:	ldr	x4, [x20]
  436464:	mov	x0, x21
  436468:	mov	w1, #0x5                   	// #5
  43646c:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436470:	add	x3, x3, #0x850
  436474:	bl	423488 <ferror@plt+0x20c08>
  436478:	mov	w0, w19
  43647c:	ldp	x19, x20, [sp, #16]
  436480:	ldr	x21, [sp, #32]
  436484:	ldp	x29, x30, [sp], #48
  436488:	ret
  43648c:	mov	w5, w4
  436490:	mov	w4, w3
  436494:	ldr	x3, [x20]
  436498:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43649c:	mov	w1, #0x3                   	// #3
  4364a0:	add	x2, x2, #0x818
  4364a4:	bl	422e10 <ferror@plt+0x20590>
  4364a8:	b	43643c <ferror@plt+0x33bbc>
  4364ac:	ldrb	w2, [x0, #1154]
  4364b0:	mov	w19, #0x1                   	// #1
  4364b4:	cbz	w2, 43644c <ferror@plt+0x33bcc>
  4364b8:	tbnz	w1, #4, 43644c <ferror@plt+0x33bcc>
  4364bc:	ldrb	w1, [x0, #1167]
  4364c0:	cbnz	w1, 43644c <ferror@plt+0x33bcc>
  4364c4:	ldrb	w1, [x0, #1120]
  4364c8:	cbz	w1, 4364e4 <ferror@plt+0x33c64>
  4364cc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4364d0:	mov	w1, #0x2                   	// #2
  4364d4:	add	x2, x2, #0x740
  4364d8:	bl	422e10 <ferror@plt+0x20590>
  4364dc:	ldr	x21, [sp, #32]
  4364e0:	b	436450 <ferror@plt+0x33bd0>
  4364e4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4364e8:	mov	w1, #0x2                   	// #2
  4364ec:	add	x2, x2, #0x790
  4364f0:	bl	422e10 <ferror@plt+0x20590>
  4364f4:	ldr	x21, [sp, #32]
  4364f8:	b	436450 <ferror@plt+0x33bd0>
  4364fc:	nop
  436500:	stp	x29, x30, [sp, #-48]!
  436504:	mov	x29, sp
  436508:	stp	x19, x20, [sp, #16]
  43650c:	mov	x20, x1
  436510:	mov	w19, w3
  436514:	stp	x21, x22, [sp, #32]
  436518:	mov	x21, x0
  43651c:	mov	x22, x2
  436520:	ldr	x0, [x0, #136]
  436524:	cbz	x1, 43655c <ferror@plt+0x33cdc>
  436528:	ldr	x4, [x0]
  43652c:	cbz	x4, 436578 <ferror@plt+0x33cf8>
  436530:	mov	w2, #0x18                  	// #24
  436534:	str	x4, [x21, #136]
  436538:	mov	w0, #0x1                   	// #1
  43653c:	stp	xzr, x20, [x4, #32]
  436540:	umaddl	x19, w19, w2, x22
  436544:	stp	x22, x19, [x4, #16]
  436548:	str	w0, [x4, #48]
  43654c:	ldp	x19, x20, [sp, #16]
  436550:	ldp	x21, x22, [sp, #32]
  436554:	ldp	x29, x30, [sp], #48
  436558:	ret
  43655c:	cbz	x0, 4365a4 <ferror@plt+0x33d24>
  436560:	ldr	w1, [x0, #48]
  436564:	ldr	x20, [x0, #40]
  436568:	cmp	w1, #0x2
  43656c:	b.ne	436528 <ferror@plt+0x33ca8>  // b.any
  436570:	ldr	x20, [x20]
  436574:	b	436528 <ferror@plt+0x33ca8>
  436578:	mov	x0, #0x38                  	// #56
  43657c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  436580:	mov	x4, x0
  436584:	stp	xzr, xzr, [x0]
  436588:	stp	xzr, xzr, [x0, #16]
  43658c:	stp	xzr, xzr, [x0, #32]
  436590:	ldr	x0, [x21, #136]
  436594:	str	x0, [x4, #8]
  436598:	str	xzr, [x4, #48]
  43659c:	str	x4, [x0]
  4365a0:	b	436530 <ferror@plt+0x33cb0>
  4365a4:	mov	x20, x0
  4365a8:	b	436528 <ferror@plt+0x33ca8>
  4365ac:	nop
  4365b0:	stp	x29, x30, [sp, #-48]!
  4365b4:	mov	x29, sp
  4365b8:	stp	x21, x22, [sp, #32]
  4365bc:	mov	x21, x0
  4365c0:	mov	x22, x2
  4365c4:	ldr	x0, [x0, #136]
  4365c8:	stp	x19, x20, [sp, #16]
  4365cc:	mov	x19, x1
  4365d0:	mov	x20, x3
  4365d4:	ldr	x4, [x0]
  4365d8:	cbz	x4, 436610 <ferror@plt+0x33d90>
  4365dc:	str	x4, [x21, #136]
  4365e0:	add	x20, x22, x20
  4365e4:	mov	w0, #0x1                   	// #1
  4365e8:	stp	x22, x20, [x4, #16]
  4365ec:	stp	xzr, x19, [x4, #32]
  4365f0:	str	w0, [x4, #48]
  4365f4:	ldrh	w0, [x19, #18]
  4365f8:	orr	w0, w0, #0x40
  4365fc:	strh	w0, [x19, #18]
  436600:	ldp	x19, x20, [sp, #16]
  436604:	ldp	x21, x22, [sp, #32]
  436608:	ldp	x29, x30, [sp], #48
  43660c:	ret
  436610:	mov	x0, #0x38                  	// #56
  436614:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  436618:	mov	x4, x0
  43661c:	stp	xzr, xzr, [x0]
  436620:	stp	xzr, xzr, [x0, #16]
  436624:	stp	xzr, xzr, [x0, #32]
  436628:	ldr	x0, [x21, #136]
  43662c:	str	x0, [x4, #8]
  436630:	str	xzr, [x4, #48]
  436634:	str	x4, [x0]
  436638:	b	4365dc <ferror@plt+0x33d5c>
  43663c:	nop
  436640:	stp	x29, x30, [sp, #-48]!
  436644:	mov	x29, sp
  436648:	stp	x19, x20, [sp, #16]
  43664c:	mov	x20, x0
  436650:	add	x0, x0, #0x50
  436654:	stp	x21, x22, [sp, #32]
  436658:	ldr	x19, [x20, #136]
  43665c:	cmp	x19, x0
  436660:	b.eq	43673c <ferror@plt+0x33ebc>  // b.none
  436664:	ldr	x21, [x19, #40]
  436668:	cbz	x21, 4366c0 <ferror@plt+0x33e40>
  43666c:	ldr	w0, [x19, #48]
  436670:	cmp	w0, #0x2
  436674:	b.eq	4366ec <ferror@plt+0x33e6c>  // b.none
  436678:	ldr	x0, [x19, #8]
  43667c:	cbz	x0, 43669c <ferror@plt+0x33e1c>
  436680:	ldr	w1, [x0, #48]
  436684:	ldr	x0, [x0, #40]
  436688:	cmp	w1, #0x2
  43668c:	b.ne	436694 <ferror@plt+0x33e14>  // b.any
  436690:	ldr	x0, [x0]
  436694:	cmp	x0, x21
  436698:	b.eq	4366c0 <ferror@plt+0x33e40>  // b.none
  43669c:	ldrh	w0, [x21, #18]
  4366a0:	ldr	x1, [x20, #184]
  4366a4:	mov	w2, w0
  4366a8:	ubfx	x0, x0, #2, #8
  4366ac:	and	w0, w0, #0xffffffef
  4366b0:	cmp	x1, x21
  4366b4:	bfi	w2, w0, #2, #8
  4366b8:	strh	w2, [x21, #18]
  4366bc:	b.eq	436724 <ferror@plt+0x33ea4>  // b.none
  4366c0:	ldr	x0, [x19, #32]
  4366c4:	cbz	x0, 4366cc <ferror@plt+0x33e4c>
  4366c8:	bl	42d380 <ferror@plt+0x2ab00>
  4366cc:	ldr	x1, [x19, #8]
  4366d0:	mov	x0, x19
  4366d4:	ldp	x21, x22, [sp, #32]
  4366d8:	str	x1, [x20, #136]
  4366dc:	ldp	x19, x20, [sp, #16]
  4366e0:	str	xzr, [x1]
  4366e4:	ldp	x29, x30, [sp], #48
  4366e8:	b	402640 <free@plt>
  4366ec:	ldr	x0, [x19, #32]
  4366f0:	ldr	x22, [x21]
  4366f4:	cbz	x0, 436704 <ferror@plt+0x33e84>
  4366f8:	ldr	x0, [x21, #8]
  4366fc:	cbz	x0, 436704 <ferror@plt+0x33e84>
  436700:	bl	402640 <free@plt>
  436704:	mov	x0, x21
  436708:	bl	402640 <free@plt>
  43670c:	str	xzr, [x19, #40]
  436710:	cbnz	x22, 436734 <ferror@plt+0x33eb4>
  436714:	ldr	x1, [x20, #184]
  436718:	mov	x21, #0x0                   	// #0
  43671c:	cmp	x1, x21
  436720:	b.ne	4366c0 <ferror@plt+0x33e40>  // b.any
  436724:	ldr	x0, [x19, #8]
  436728:	cbnz	x0, 4366c0 <ferror@plt+0x33e40>
  43672c:	str	xzr, [x20, #184]
  436730:	b	4366c0 <ferror@plt+0x33e40>
  436734:	mov	x21, x22
  436738:	b	436678 <ferror@plt+0x33df8>
  43673c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436740:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436744:	add	x2, x2, #0x868
  436748:	add	x0, x0, #0x558
  43674c:	mov	w1, #0x9eb                 	// #2539
  436750:	bl	4028b0 <ferror@plt+0x30>
  436754:	nop
  436758:	ldr	x0, [x0, #136]
  43675c:	ldr	w2, [x0, #48]
  436760:	ldr	x1, [x0, #40]
  436764:	cmp	w2, #0x2
  436768:	b.ne	436770 <ferror@plt+0x33ef0>  // b.any
  43676c:	ldr	x1, [x1]
  436770:	mov	w0, #0x0                   	// #0
  436774:	cbz	x1, 436788 <ferror@plt+0x33f08>
  436778:	ldr	x1, [x1, #24]
  43677c:	cbz	x1, 436788 <ferror@plt+0x33f08>
  436780:	ldrb	w0, [x1, #19]
  436784:	ubfx	x0, x0, #4, #1
  436788:	ret
  43678c:	nop
  436790:	ldr	w3, [x0, #496]
  436794:	sub	w2, w1, #0x1
  436798:	add	w3, w3, w1
  43679c:	str	w3, [x0, #496]
  4367a0:	cbz	w1, 4367f0 <ferror@plt+0x33f70>
  4367a4:	ldr	x1, [x0, #448]
  4367a8:	ldr	x4, [x0, #488]
  4367ac:	b	4367bc <ferror@plt+0x33f3c>
  4367b0:	sub	w2, w2, #0x1
  4367b4:	cmn	w2, #0x1
  4367b8:	b.eq	4367ec <ferror@plt+0x33f6c>  // b.none
  4367bc:	ldr	x3, [x4, #16]
  4367c0:	sub	x1, x1, #0x18
  4367c4:	cmp	x1, x3
  4367c8:	b.ne	4367b0 <ferror@plt+0x33f30>  // b.any
  4367cc:	ldr	x3, [x4, #8]
  4367d0:	cbz	x3, 4367b0 <ferror@plt+0x33f30>
  4367d4:	ldr	x1, [x3, #24]
  4367d8:	str	x3, [x0, #488]
  4367dc:	sub	w2, w2, #0x1
  4367e0:	mov	x4, x3
  4367e4:	cmn	w2, #0x1
  4367e8:	b.ne	4367bc <ferror@plt+0x33f3c>  // b.any
  4367ec:	str	x1, [x0, #448]
  4367f0:	ret
  4367f4:	nop
  4367f8:	ldr	x2, [x0, #136]
  4367fc:	ldr	x3, [x2, #8]
  436800:	cbz	x3, 43684c <ferror@plt+0x33fcc>
  436804:	stp	x29, x30, [sp, #-16]!
  436808:	cmp	w1, #0x1
  43680c:	mov	x29, sp
  436810:	b.ne	4368e4 <ferror@plt+0x34064>  // b.any
  436814:	ldr	w0, [x2, #48]
  436818:	cmp	w0, #0x1
  43681c:	b.eq	436838 <ferror@plt+0x33fb8>  // b.none
  436820:	cbnz	w0, 4368b4 <ferror@plt+0x34034>
  436824:	ldr	x0, [x2, #16]
  436828:	sub	x0, x0, #0x8
  43682c:	str	x0, [x2, #16]
  436830:	ldp	x29, x30, [sp], #16
  436834:	ret
  436838:	ldr	x0, [x2, #16]
  43683c:	sub	x0, x0, #0x18
  436840:	str	x0, [x2, #16]
  436844:	ldp	x29, x30, [sp], #16
  436848:	ret
  43684c:	ldr	w3, [x0, #496]
  436850:	sub	w2, w1, #0x1
  436854:	add	w3, w3, w1
  436858:	str	w3, [x0, #496]
  43685c:	cbz	w1, 4368b0 <ferror@plt+0x34030>
  436860:	ldr	x1, [x0, #448]
  436864:	ldr	x4, [x0, #488]
  436868:	b	436878 <ferror@plt+0x33ff8>
  43686c:	sub	w2, w2, #0x1
  436870:	cmn	w2, #0x1
  436874:	b.eq	4368a8 <ferror@plt+0x34028>  // b.none
  436878:	ldr	x3, [x4, #16]
  43687c:	sub	x1, x1, #0x18
  436880:	cmp	x1, x3
  436884:	b.ne	43686c <ferror@plt+0x33fec>  // b.any
  436888:	ldr	x3, [x4, #8]
  43688c:	cbz	x3, 43686c <ferror@plt+0x33fec>
  436890:	ldr	x1, [x3, #24]
  436894:	str	x3, [x0, #488]
  436898:	sub	w2, w2, #0x1
  43689c:	mov	x4, x3
  4368a0:	cmn	w2, #0x1
  4368a4:	b.ne	436878 <ferror@plt+0x33ff8>  // b.any
  4368a8:	str	x1, [x0, #448]
  4368ac:	ret
  4368b0:	ret
  4368b4:	cmp	w0, #0x2
  4368b8:	b.ne	4368fc <ferror@plt+0x3407c>  // b.any
  4368bc:	ldr	x1, [x2, #16]
  4368c0:	ldr	x0, [x2, #40]
  4368c4:	sub	x1, x1, #0x8
  4368c8:	str	x1, [x2, #16]
  4368cc:	cbz	x0, 436914 <ferror@plt+0x34094>
  4368d0:	ldr	x1, [x0, #16]
  4368d4:	sub	x1, x1, #0x4
  4368d8:	str	x1, [x0, #16]
  4368dc:	ldp	x29, x30, [sp], #16
  4368e0:	ret
  4368e4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4368e8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4368ec:	add	x2, x2, #0x540
  4368f0:	add	x0, x0, #0x558
  4368f4:	mov	w1, #0xb8f                 	// #2959
  4368f8:	bl	4028b0 <ferror@plt+0x30>
  4368fc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436900:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436904:	add	x2, x2, #0x540
  436908:	add	x0, x0, #0x558
  43690c:	mov	w1, #0xba1                 	// #2977
  436910:	bl	4028b0 <ferror@plt+0x30>
  436914:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436918:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43691c:	add	x2, x2, #0x540
  436920:	add	x0, x0, #0x558
  436924:	mov	w1, #0xb9e                 	// #2974
  436928:	bl	4028b0 <ferror@plt+0x30>
  43692c:	nop
  436930:	ldrb	w1, [x0, #18]
  436934:	str	xzr, [x0, #24]
  436938:	and	w1, w1, #0xfffffffc
  43693c:	strb	w1, [x0, #18]
  436940:	ldrh	w1, [x0, #18]
  436944:	mov	w2, w1
  436948:	ubfx	x1, x1, #2, #8
  43694c:	and	w1, w1, #0xffffffcf
  436950:	bfi	w2, w1, #2, #8
  436954:	strh	w2, [x0, #18]
  436958:	ret
  43695c:	nop
  436960:	stp	x29, x30, [sp, #-64]!
  436964:	mov	x29, sp
  436968:	stp	x19, x20, [sp, #16]
  43696c:	mov	w20, w1
  436970:	ldrb	w1, [x2, #18]
  436974:	mov	x19, x2
  436978:	and	w2, w1, #0x3
  43697c:	cmp	w2, #0x1
  436980:	b.eq	436a54 <ferror@plt+0x341d4>  // b.none
  436984:	stp	x23, x24, [sp, #48]
  436988:	add	w24, w20, #0x1
  43698c:	mov	x23, x3
  436990:	ldr	w3, [x0, #512]
  436994:	add	w2, w24, w24, lsl #1
  436998:	stp	x21, x22, [sp, #32]
  43699c:	mov	x21, x0
  4369a0:	lsl	w22, w2, #3
  4369a4:	cmp	w3, w2, lsl #3
  4369a8:	ldr	x0, [x0, #504]
  4369ac:	b.cc	436a20 <ferror@plt+0x341a0>  // b.lo, b.ul, b.last
  4369b0:	mov	w2, #0x18                  	// #24
  4369b4:	and	w1, w1, #0x3
  4369b8:	ldr	x5, [x21, #56]
  4369bc:	umull	x2, w20, w2
  4369c0:	ldr	x6, [x19, #24]
  4369c4:	add	x4, x0, x2
  4369c8:	ldr	x3, [x5, #16]
  4369cc:	str	x19, [x0, x2]
  4369d0:	ldr	x2, [x5, #24]
  4369d4:	ubfiz	x0, x20, #3, #32
  4369d8:	str	x6, [x4, #8]
  4369dc:	add	x0, x0, #0x8
  4369e0:	str	w1, [x4, #16]
  4369e4:	sub	x1, x2, x3
  4369e8:	cmp	x1, x0
  4369ec:	b.cc	436a38 <ferror@plt+0x341b8>  // b.lo, b.ul, b.last
  4369f0:	ldrb	w1, [x19, #18]
  4369f4:	mov	w2, #0x1                   	// #1
  4369f8:	str	x23, [x3, x20, lsl #3]
  4369fc:	mov	w0, w2
  436a00:	strh	w24, [x19, #24]
  436a04:	bfxil	w1, w2, #0, #2
  436a08:	strb	w1, [x19, #18]
  436a0c:	ldp	x19, x20, [sp, #16]
  436a10:	ldp	x21, x22, [sp, #32]
  436a14:	ldp	x23, x24, [sp, #48]
  436a18:	ldp	x29, x30, [sp], #64
  436a1c:	ret
  436a20:	mov	w1, w22
  436a24:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  436a28:	ldrb	w1, [x19, #18]
  436a2c:	str	x0, [x21, #504]
  436a30:	str	w22, [x21, #512]
  436a34:	b	4369b0 <ferror@plt+0x34130>
  436a38:	mov	x0, x21
  436a3c:	add	x1, x21, #0x38
  436a40:	mov	x2, #0x8                   	// #8
  436a44:	bl	42d2b0 <ferror@plt+0x2aa30>
  436a48:	ldr	x0, [x21, #56]
  436a4c:	ldr	x3, [x0, #16]
  436a50:	b	4369f0 <ferror@plt+0x34170>
  436a54:	ldr	x3, [x19]
  436a58:	mov	w1, #0x3                   	// #3
  436a5c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436a60:	add	x2, x2, #0x880
  436a64:	bl	422e10 <ferror@plt+0x20590>
  436a68:	mov	w0, #0x0                   	// #0
  436a6c:	ldp	x19, x20, [sp, #16]
  436a70:	ldp	x29, x30, [sp], #64
  436a74:	ret
  436a78:	sub	w2, w1, #0x1
  436a7c:	cbz	w1, 436ab8 <ferror@plt+0x34238>
  436a80:	ldr	x4, [x0, #504]
  436a84:	mov	w0, #0x18                  	// #24
  436a88:	umaddl	x0, w2, w0, x4
  436a8c:	nop
  436a90:	ldr	x1, [x0]
  436a94:	cmp	x4, x0
  436a98:	ldr	w3, [x0, #16]
  436a9c:	sub	x0, x0, #0x18
  436aa0:	ldrb	w2, [x1, #18]
  436aa4:	bfxil	w2, w3, #0, #2
  436aa8:	strb	w2, [x1, #18]
  436aac:	ldr	x2, [x0, #32]
  436ab0:	str	x2, [x1, #24]
  436ab4:	b.ne	436a90 <ferror@plt+0x34210>  // b.any
  436ab8:	ret
  436abc:	nop
  436ac0:	mov	x3, x0
  436ac4:	mov	x0, x2
  436ac8:	mov	x5, #0x9300000000000000    	// #-7854277750134145024
  436acc:	mov	w2, #0x0                   	// #0
  436ad0:	ldr	w4, [x3, #48]
  436ad4:	str	xzr, [x0]
  436ad8:	str	w4, [x0, #8]
  436adc:	ldur	x4, [x0, #12]
  436ae0:	ldrb	w6, [x3, #1151]
  436ae4:	and	x5, x4, x5
  436ae8:	cmp	w6, #0x0
  436aec:	cset	x4, eq  // eq = none
  436af0:	orr	x4, x5, x4, lsl #61
  436af4:	stur	x4, [x0, #12]
  436af8:	ldr	x3, [x3]
  436afc:	cbz	x3, 436b0c <ferror@plt+0x3428c>
  436b00:	ldrb	w2, [x3, #106]
  436b04:	cmp	w2, #0x0
  436b08:	cset	w2, ne  // ne = any
  436b0c:	ldrb	w3, [x0, #19]
  436b10:	and	w1, w1, #0x3
  436b14:	orr	w2, w1, w2, lsl #4
  436b18:	mov	w1, #0xffffffec            	// #-20
  436b1c:	and	w1, w3, w1
  436b20:	orr	w2, w2, w1
  436b24:	strb	w2, [x0, #19]
  436b28:	ret
  436b2c:	nop
  436b30:	stp	x29, x30, [sp, #-240]!
  436b34:	mov	x29, sp
  436b38:	stp	x19, x20, [sp, #16]
  436b3c:	mov	x19, x1
  436b40:	stp	x21, x22, [sp, #32]
  436b44:	stp	x23, x24, [sp, #48]
  436b48:	mov	x24, x0
  436b4c:	stp	x25, x26, [sp, #64]
  436b50:	ldrb	w1, [x0, #1160]
  436b54:	cbz	w1, 436bfc <ferror@plt+0x3437c>
  436b58:	bl	43d088 <ferror@plt+0x3a808>
  436b5c:	mov	x26, x0
  436b60:	cbz	x26, 437a08 <ferror@plt+0x35188>
  436b64:	ldrb	w0, [x19, #18]
  436b68:	tbnz	w0, #1, 436d60 <ferror@plt+0x344e0>
  436b6c:	ldrh	w20, [x19, #18]
  436b70:	ubfx	x20, x20, #2, #8
  436b74:	ldrb	w0, [x19, #18]
  436b78:	mov	w1, #0x2                   	// #2
  436b7c:	ldr	x21, [x19]
  436b80:	str	x26, [x19, #24]
  436b84:	bfxil	w0, w1, #0, #2
  436b88:	strb	w0, [x19, #18]
  436b8c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436b90:	mov	x0, x21
  436b94:	add	x1, x1, #0xbc0
  436b98:	mov	x2, #0x7                   	// #7
  436b9c:	bl	402400 <strncmp@plt>
  436ba0:	cbnz	w0, 436bd0 <ferror@plt+0x34350>
  436ba4:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436ba8:	mov	x0, x21
  436bac:	add	x1, x1, #0xbc8
  436bb0:	bl	4025d0 <strcmp@plt>
  436bb4:	cbz	w0, 436bd0 <ferror@plt+0x34350>
  436bb8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436bbc:	mov	x0, x21
  436bc0:	add	x1, x1, #0xbe0
  436bc4:	bl	4025d0 <strcmp@plt>
  436bc8:	cbnz	w0, 4373ac <ferror@plt+0x34b2c>
  436bcc:	nop
  436bd0:	ldrh	w1, [x19, #18]
  436bd4:	and	w20, w20, #0xffffffbf
  436bd8:	mov	w0, #0x1                   	// #1
  436bdc:	bfi	w1, w20, #2, #8
  436be0:	strh	w1, [x19, #18]
  436be4:	ldp	x19, x20, [sp, #16]
  436be8:	ldp	x21, x22, [sp, #32]
  436bec:	ldp	x23, x24, [sp, #48]
  436bf0:	ldp	x25, x26, [sp, #64]
  436bf4:	ldp	x29, x30, [sp], #240
  436bf8:	ret
  436bfc:	add	x1, sp, #0xb0
  436c00:	stp	x27, x28, [sp, #80]
  436c04:	ldr	x21, [x0, #448]
  436c08:	str	x1, [x0, #448]
  436c0c:	bl	42edd8 <ferror@plt+0x2c558>
  436c10:	mov	x20, x0
  436c14:	ldrh	w0, [x0, #6]
  436c18:	str	x21, [x24, #448]
  436c1c:	tbz	w0, #0, 436e34 <ferror@plt+0x345b4>
  436c20:	mov	w0, #0xffffffff            	// #-1
  436c24:	mov	w21, #0x0                   	// #0
  436c28:	mov	x22, #0x0                   	// #0
  436c2c:	stp	wzr, w0, [sp, #168]
  436c30:	ldr	x1, [x24, #56]
  436c34:	ldp	x26, x0, [x1, #16]
  436c38:	sub	x0, x0, x26
  436c3c:	cmp	x0, #0x2f
  436c40:	b.ls	437544 <ferror@plt+0x34cc4>  // b.plast
  436c44:	ldr	w0, [x24, #48]
  436c48:	mov	x4, #0x9300000000000000    	// #-7854277750134145024
  436c4c:	str	xzr, [x26]
  436c50:	mov	w2, #0x0                   	// #0
  436c54:	str	w0, [x26, #8]
  436c58:	ldur	x3, [x26, #12]
  436c5c:	ldrb	w0, [x24, #1151]
  436c60:	and	x4, x3, x4
  436c64:	cmp	w0, #0x0
  436c68:	cset	x3, eq  // eq = none
  436c6c:	orr	x3, x4, x3, lsl #61
  436c70:	stur	x3, [x26, #12]
  436c74:	ldr	x0, [x24]
  436c78:	cbz	x0, 436c88 <ferror@plt+0x34408>
  436c7c:	ldrb	w0, [x0, #106]
  436c80:	cmp	w0, #0x0
  436c84:	cset	w2, ne  // ne = any
  436c88:	ldrb	w3, [x26, #19]
  436c8c:	mov	w0, #0xffffffec            	// #-20
  436c90:	and	w3, w3, w0
  436c94:	orr	w2, w3, w2, lsl #4
  436c98:	strb	w2, [x26, #19]
  436c9c:	cbz	x20, 43775c <ferror@plt+0x34edc>
  436ca0:	ldp	x2, x3, [x20]
  436ca4:	stp	x2, x3, [x26, #24]
  436ca8:	add	x0, x26, #0x18
  436cac:	ldr	x1, [x20, #16]
  436cb0:	str	x1, [x26, #40]
  436cb4:	ldrb	w7, [x26, #19]
  436cb8:	mov	x2, x0
  436cbc:	mov	x3, #0x1                   	// #1
  436cc0:	ldrb	w0, [x0, #4]
  436cc4:	str	w3, [x26, #12]
  436cc8:	ubfx	x21, x7, #3, #1
  436ccc:	cmp	w0, #0x16
  436cd0:	b.eq	437a30 <ferror@plt+0x351b0>  // b.none
  436cd4:	cmp	w0, #0x26
  436cd8:	b.eq	437744 <ferror@plt+0x34ec4>  // b.none
  436cdc:	mov	w25, #0x0                   	// #0
  436ce0:	mov	w27, #0x0                   	// #0
  436ce4:	stp	wzr, wzr, [sp, #96]
  436ce8:	mov	w23, w21
  436cec:	cbz	w21, 4372e0 <ferror@plt+0x34a60>
  436cf0:	cmp	w0, #0x35
  436cf4:	b.ne	43725c <ferror@plt+0x349dc>  // b.any
  436cf8:	ldr	x7, [x2, #8]
  436cfc:	ldr	x1, [x24, #1280]
  436d00:	cmp	x7, x1
  436d04:	b.eq	4372f8 <ferror@plt+0x34a78>  // b.none
  436d08:	cmp	w27, #0x1
  436d0c:	b.eq	437290 <ferror@plt+0x34a10>  // b.none
  436d10:	mov	w21, #0x0                   	// #0
  436d14:	b.le	43723c <ferror@plt+0x349bc>
  436d18:	cmp	w27, #0x2
  436d1c:	mov	w23, #0x0                   	// #0
  436d20:	cset	w1, eq  // eq = none
  436d24:	mov	w21, #0x0                   	// #0
  436d28:	cbnz	w1, 4372ac <ferror@plt+0x34a2c>
  436d2c:	cbnz	w23, 43731c <ferror@plt+0x34a9c>
  436d30:	cmp	w0, #0x14
  436d34:	b.eq	4372b8 <ferror@plt+0x34a38>  // b.none
  436d38:	cmp	w0, #0x15
  436d3c:	b.ne	436fac <ferror@plt+0x3472c>  // b.any
  436d40:	sub	w27, w27, #0x1
  436d44:	cmp	w27, #0x2
  436d48:	b.ne	436fac <ferror@plt+0x3472c>  // b.any
  436d4c:	ldr	w0, [sp, #96]
  436d50:	cbnz	w0, 436f3c <ferror@plt+0x346bc>
  436d54:	ldr	w3, [x26, #12]
  436d58:	mov	w27, #0x0                   	// #0
  436d5c:	b	436fb4 <ferror@plt+0x34734>
  436d60:	ldrb	w1, [x24, #1151]
  436d64:	and	w0, w0, #0x3
  436d68:	cbz	w1, 436d74 <ferror@plt+0x344f4>
  436d6c:	cmp	w0, #0x2
  436d70:	b.eq	4374ac <ferror@plt+0x34c2c>  // b.none
  436d74:	ldrh	w1, [x19, #18]
  436d78:	ubfx	x20, x1, #2, #8
  436d7c:	tbnz	w1, #5, 4374c8 <ferror@plt+0x34c48>
  436d80:	cmp	w0, #0x3
  436d84:	b.eq	4374d0 <ferror@plt+0x34c50>  // b.none
  436d88:	tbnz	w20, #6, 436e1c <ferror@plt+0x3459c>
  436d8c:	ldr	x20, [x19, #24]
  436d90:	ldrb	w2, [x20, #18]
  436d94:	cbz	w2, 437560 <ferror@plt+0x34ce0>
  436d98:	ldr	x3, [x24, #1048]
  436d9c:	mov	x1, x20
  436da0:	mov	x0, x24
  436da4:	sub	w2, w2, #0x1
  436da8:	blr	x3
  436dac:	strb	wzr, [x20, #18]
  436db0:	ldrh	w1, [x20, #16]
  436db4:	ldrh	w0, [x26, #16]
  436db8:	cmp	w1, w0
  436dbc:	b.eq	437570 <ferror@plt+0x34cf0>  // b.none
  436dc0:	ldrb	w0, [x19, #18]
  436dc4:	and	w0, w0, #0x3
  436dc8:	cmp	w0, #0x3
  436dcc:	b.ne	4374c8 <ferror@plt+0x34c48>  // b.any
  436dd0:	ldrh	w0, [x19, #18]
  436dd4:	mov	w1, #0xb                   	// #11
  436dd8:	tbnz	w0, #5, 4374c8 <ferror@plt+0x34c48>
  436ddc:	nop
  436de0:	ldr	w2, [x24, #48]
  436de4:	mov	x0, x24
  436de8:	ldr	x5, [x19]
  436dec:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436df0:	mov	w3, #0x0                   	// #0
  436df4:	add	x4, x4, #0xb80
  436df8:	bl	423388 <ferror@plt+0x20b08>
  436dfc:	tst	w0, #0xff
  436e00:	b.eq	436e14 <ferror@plt+0x34594>  // b.none
  436e04:	ldrb	w0, [x19, #18]
  436e08:	and	w0, w0, #0x3
  436e0c:	cmp	w0, #0x2
  436e10:	b.eq	43790c <ferror@plt+0x3508c>  // b.none
  436e14:	ldrh	w20, [x19, #18]
  436e18:	ubfx	x20, x20, #2, #8
  436e1c:	ldrh	w0, [x19, #18]
  436e20:	and	w20, w20, #0xffffffcf
  436e24:	and	w20, w20, #0xff
  436e28:	bfi	w0, w20, #2, #8
  436e2c:	strh	w0, [x19, #18]
  436e30:	b	436b74 <ferror@plt+0x342f4>
  436e34:	ldrb	w0, [x20, #4]
  436e38:	cmp	w0, #0x14
  436e3c:	b.eq	4373d0 <ferror@plt+0x34b50>  // b.none
  436e40:	cmp	w0, #0x16
  436e44:	b.eq	436c20 <ferror@plt+0x343a0>  // b.none
  436e48:	cmp	w0, #0x4f
  436e4c:	b.eq	4374e0 <ferror@plt+0x34c60>  // b.none
  436e50:	ldrb	w1, [x24, #1152]
  436e54:	cbnz	w1, 4374f4 <ferror@plt+0x34c74>
  436e58:	cmp	w0, #0x3d
  436e5c:	b.eq	437930 <ferror@plt+0x350b0>  // b.none
  436e60:	b.hi	437828 <ferror@plt+0x34fa8>  // b.pmore
  436e64:	and	w0, w0, #0xfffffffd
  436e68:	cmp	w0, #0x34
  436e6c:	cset	w1, eq  // eq = none
  436e70:	lsl	w1, w1, #1
  436e74:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436e78:	mov	x0, x24
  436e7c:	add	x2, x2, #0xa00
  436e80:	b	437518 <ferror@plt+0x34c98>
  436e84:	ldr	x3, [x0, #8]
  436e88:	ldrb	w2, [x3, #18]
  436e8c:	and	w2, w2, #0x3
  436e90:	cmp	w2, #0x1
  436e94:	b.ne	437028 <ferror@plt+0x347a8>  // b.any
  436e98:	ldrh	w1, [x3, #24]
  436e9c:	mov	w2, #0x50                  	// #80
  436ea0:	strb	w2, [x0, #4]
  436ea4:	str	w1, [x0, #8]
  436ea8:	ldr	w11, [x26, #12]
  436eac:	mov	w0, w11
  436eb0:	add	w3, w11, #0x1
  436eb4:	add	x1, x0, #0x1
  436eb8:	str	w3, [x26, #12]
  436ebc:	cmp	w3, #0x1
  436ec0:	add	x1, x1, x1, lsl #1
  436ec4:	lsl	x1, x1, #3
  436ec8:	add	x2, x26, x1
  436ecc:	b.ls	436edc <ferror@plt+0x3465c>  // b.plast
  436ed0:	ldurb	w8, [x2, #-20]
  436ed4:	cmp	w8, #0x25
  436ed8:	b.eq	4371fc <ferror@plt+0x3497c>  // b.none
  436edc:	ldrb	w0, [x2, #4]
  436ee0:	cmp	w0, #0x16
  436ee4:	b.eq	437674 <ferror@plt+0x34df4>  // b.none
  436ee8:	cmp	w0, #0x26
  436eec:	b.ne	436ce8 <ferror@plt+0x34468>  // b.any
  436ef0:	cmp	w3, #0x1
  436ef4:	b.eq	437744 <ferror@plt+0x34ec4>  // b.none
  436ef8:	cbz	w22, 437178 <ferror@plt+0x348f8>
  436efc:	ldr	w1, [sp, #100]
  436f00:	str	w11, [x2, #8]
  436f04:	add	w1, w1, #0x1
  436f08:	str	w1, [sp, #100]
  436f0c:	cbz	w23, 4371b0 <ferror@plt+0x34930>
  436f10:	cmp	w27, #0x1
  436f14:	b.eq	437290 <ferror@plt+0x34a10>  // b.none
  436f18:	cmp	w27, #0x1
  436f1c:	b.le	43723c <ferror@plt+0x349bc>
  436f20:	cmp	w0, #0x26
  436f24:	cset	w23, eq  // eq = none
  436f28:	cmp	w27, #0x2
  436f2c:	cset	w1, eq  // eq = none
  436f30:	cmp	w23, #0x0
  436f34:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  436f38:	b.eq	436d28 <ferror@plt+0x344a8>  // b.none
  436f3c:	ldr	w2, [x2]
  436f40:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436f44:	mov	x0, x24
  436f48:	add	x3, x3, #0xb50
  436f4c:	mov	w1, #0x3                   	// #3
  436f50:	bl	423488 <ferror@plt+0x20c08>
  436f54:	nop
  436f58:	ldr	w0, [sp, #168]
  436f5c:	mov	w20, #0x0                   	// #0
  436f60:	strb	wzr, [x24, #22]
  436f64:	cbz	w0, 43748c <ferror@plt+0x34c0c>
  436f68:	ldr	w1, [sp, #172]
  436f6c:	mov	w0, #0x18                  	// #24
  436f70:	ldr	x3, [x24, #504]
  436f74:	umaddl	x27, w1, w0, x3
  436f78:	ldr	x0, [x27]
  436f7c:	cmp	x3, x27
  436f80:	ldr	w2, [x27, #16]
  436f84:	sub	x27, x27, #0x18
  436f88:	ldrb	w1, [x0, #18]
  436f8c:	bfxil	w1, w2, #0, #2
  436f90:	strb	w1, [x0, #18]
  436f94:	ldr	x1, [x27, #32]
  436f98:	str	x1, [x0, #24]
  436f9c:	b.ne	436f78 <ferror@plt+0x346f8>  // b.any
  436fa0:	cbz	w20, 43748c <ferror@plt+0x34c0c>
  436fa4:	ldp	x27, x28, [sp, #80]
  436fa8:	b	436b60 <ferror@plt+0x342e0>
  436fac:	ldr	w3, [x26, #12]
  436fb0:	str	wzr, [sp, #96]
  436fb4:	ldr	x1, [x24, #56]
  436fb8:	add	x3, x3, #0x2
  436fbc:	mov	w23, #0x1                   	// #1
  436fc0:	add	x3, x3, x3, lsl #1
  436fc4:	ldr	x26, [x1, #16]
  436fc8:	lsl	x3, x3, #3
  436fcc:	mov	w22, w21
  436fd0:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  436fd4:	add	x0, x21, #0xa28
  436fd8:	str	x0, [sp, #160]
  436fdc:	ldr	x0, [x1, #24]
  436fe0:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  436fe4:	mov	w21, w23
  436fe8:	add	x20, x20, #0x2c0
  436fec:	sub	x0, x0, x26
  436ff0:	cmp	x0, x3
  436ff4:	b.cc	4371e0 <ferror@plt+0x34960>  // b.lo, b.ul, b.last
  436ff8:	ldr	w1, [x26, #12]
  436ffc:	mov	x0, x24
  437000:	ldr	x28, [x24, #448]
  437004:	add	x1, x1, #0x1
  437008:	add	x1, x1, x1, lsl #1
  43700c:	add	x1, x26, x1, lsl #3
  437010:	str	x1, [x24, #448]
  437014:	bl	42edd8 <ferror@plt+0x2c558>
  437018:	ldrb	w1, [x0, #4]
  43701c:	str	x28, [x24, #448]
  437020:	cmp	w1, #0x35
  437024:	b.eq	436e84 <ferror@plt+0x34604>  // b.none
  437028:	ldrb	w2, [x24, #1138]
  43702c:	cbz	w2, 436ea8 <ferror@plt+0x34628>
  437030:	ldrh	w11, [x26, #16]
  437034:	cbz	w11, 436ea8 <ferror@plt+0x34628>
  437038:	cmp	w1, #0x3e
  43703c:	mov	w2, #0x38                  	// #56
  437040:	ccmp	w1, w2, #0x4, ne  // ne = any
  437044:	b.ne	436ea8 <ferror@plt+0x34628>  // b.any
  437048:	ldr	w12, [x0, #8]
  43704c:	ldr	x8, [x0, #16]
  437050:	sub	x12, x12, #0x1
  437054:	add	x12, x8, x12
  437058:	add	x28, x8, #0x1
  43705c:	cmp	x12, x28
  437060:	b.hi	437074 <ferror@plt+0x347f4>  // b.pmore
  437064:	b	436ea8 <ferror@plt+0x34628>
  437068:	add	x28, x28, #0x1
  43706c:	cmp	x12, x28
  437070:	b.ls	437618 <ferror@plt+0x34d98>  // b.plast
  437074:	ldrb	w1, [x28]
  437078:	ldrh	w0, [x20, w1, sxtw #1]
  43707c:	tbnz	w0, #9, 437090 <ferror@plt+0x34810>
  437080:	cmp	w1, #0x24
  437084:	b.ne	437068 <ferror@plt+0x347e8>  // b.any
  437088:	ldrb	w1, [x24, #1146]
  43708c:	cbz	w1, 437068 <ferror@plt+0x347e8>
  437090:	mov	x9, x28
  437094:	cmp	x12, x28
  437098:	b.ls	43761c <ferror@plt+0x34d9c>  // b.plast
  43709c:	mov	w1, #0x204                 	// #516
  4370a0:	b	4370ac <ferror@plt+0x3482c>
  4370a4:	ldrb	w0, [x9]
  4370a8:	ldrh	w0, [x20, x0, lsl #1]
  4370ac:	tst	w0, w1
  4370b0:	b.ne	4370c8 <ferror@plt+0x34848>  // b.any
  4370b4:	ldrb	w0, [x9]
  4370b8:	cmp	w0, #0x24
  4370bc:	b.ne	437608 <ferror@plt+0x34d88>  // b.any
  4370c0:	ldrb	w0, [x24, #1146]
  4370c4:	cbz	w0, 437608 <ferror@plt+0x34d88>
  4370c8:	add	x9, x9, #0x1
  4370cc:	cmp	x12, x9
  4370d0:	b.ne	4370a4 <ferror@plt+0x34824>  // b.any
  4370d4:	sub	x2, x12, x28
  4370d8:	mov	x9, x12
  4370dc:	mov	w14, w2
  4370e0:	cbz	w11, 436ea8 <ferror@plt+0x34628>
  4370e4:	ldr	x0, [x26]
  4370e8:	and	x2, x2, #0xffffffff
  4370ec:	mov	x13, #0x0                   	// #0
  4370f0:	str	x0, [sp, #152]
  4370f4:	b	437100 <ferror@plt+0x34880>
  4370f8:	cmp	w11, w13
  4370fc:	b.ls	437164 <ferror@plt+0x348e4>  // b.plast
  437100:	ldr	x0, [sp, #152]
  437104:	ldr	x0, [x0, x13, lsl #3]
  437108:	add	x13, x13, #0x1
  43710c:	ldr	w1, [x0, #8]
  437110:	cmp	w14, w1
  437114:	b.ne	4370f8 <ferror@plt+0x34878>  // b.any
  437118:	ldr	x1, [x0]
  43711c:	mov	x0, x28
  437120:	stp	x1, x2, [sp, #104]
  437124:	stp	x12, x9, [sp, #120]
  437128:	str	x13, [sp, #136]
  43712c:	stp	w14, w11, [sp, #144]
  437130:	bl	402590 <memcmp@plt>
  437134:	ldp	w14, w11, [sp, #144]
  437138:	ldp	x1, x2, [sp, #104]
  43713c:	ldp	x12, x9, [sp, #120]
  437140:	ldr	x13, [sp, #136]
  437144:	cbnz	w0, 4370f8 <ferror@plt+0x34878>
  437148:	ldr	x2, [sp, #160]
  43714c:	mov	x3, x1
  437150:	mov	x0, x24
  437154:	mov	w1, #0x6                   	// #6
  437158:	stp	x12, x9, [sp, #104]
  43715c:	bl	422f30 <ferror@plt+0x206b0>
  437160:	ldp	x12, x9, [sp, #104]
  437164:	cmp	x12, x9
  437168:	b.ls	436ea8 <ferror@plt+0x34628>  // b.plast
  43716c:	ldrh	w11, [x26, #16]
  437170:	mov	x28, x9
  437174:	b	437074 <ferror@plt+0x347f4>
  437178:	ldurh	w8, [x2, #-18]
  43717c:	sub	x9, x2, #0x18
  437180:	ldrh	w3, [x2, #6]
  437184:	str	w11, [x26, #12]
  437188:	orr	w1, w8, #0x8
  43718c:	sturh	w1, [x2, #-18]
  437190:	tbz	w3, #1, 4371a0 <ferror@plt+0x34920>
  437194:	mov	w1, #0x108                 	// #264
  437198:	orr	w1, w8, w1
  43719c:	sturh	w1, [x2, #-18]
  4371a0:	tbz	w3, #0, 436f0c <ferror@plt+0x3468c>
  4371a4:	orr	w1, w1, #0x200
  4371a8:	strh	w1, [x9, #6]
  4371ac:	cbnz	w23, 436f10 <ferror@plt+0x34690>
  4371b0:	ldr	x1, [x24, #56]
  4371b4:	mov	w22, #0x1                   	// #1
  4371b8:	ldr	w3, [x26, #12]
  4371bc:	add	x3, x3, #0x2
  4371c0:	ldr	x26, [x1, #16]
  4371c4:	add	x3, x3, x3, lsl #1
  4371c8:	ldr	x0, [x1, #24]
  4371cc:	lsl	x3, x3, #3
  4371d0:	sub	x0, x0, x26
  4371d4:	cmp	x0, x3
  4371d8:	b.cs	436ff8 <ferror@plt+0x34778>  // b.hs, b.nlast
  4371dc:	nop
  4371e0:	mov	x0, x24
  4371e4:	add	x1, x24, #0x38
  4371e8:	mov	x2, #0x18                  	// #24
  4371ec:	bl	42d2b0 <ferror@plt+0x2aa30>
  4371f0:	ldr	x0, [x24, #56]
  4371f4:	ldr	x26, [x0, #16]
  4371f8:	b	436ff8 <ferror@plt+0x34778>
  4371fc:	ldrb	w8, [x26, #19]
  437200:	tbz	w8, #2, 436edc <ferror@plt+0x3465c>
  437204:	add	x8, x0, x0, lsl #1
  437208:	add	x8, x26, x8, lsl #3
  43720c:	ldrb	w9, [x8, #28]
  437210:	cmp	w9, #0x50
  437214:	b.eq	43732c <ferror@plt+0x34aac>  // b.none
  437218:	ldr	w0, [x24, #1116]
  43721c:	cmp	w0, #0x15
  437220:	b.eq	436edc <ferror@plt+0x3465c>  // b.none
  437224:	mov	x0, x24
  437228:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43722c:	mov	w1, #0x3                   	// #3
  437230:	add	x2, x2, #0xa68
  437234:	bl	422e10 <ferror@plt+0x20590>
  437238:	b	436f58 <ferror@plt+0x346d8>
  43723c:	ldr	w3, [x26, #12]
  437240:	mov	w23, #0x1                   	// #1
  437244:	add	x3, x3, #0x2
  437248:	ldr	x1, [x24, #56]
  43724c:	add	x3, x3, x3, lsl #1
  437250:	lsl	x3, x3, #3
  437254:	ldr	x26, [x1, #16]
  437258:	b	436fcc <ferror@plt+0x3474c>
  43725c:	cmp	w27, #0x1
  437260:	b.ne	437aac <ferror@plt+0x3522c>  // b.any
  437264:	cmp	w0, #0x14
  437268:	b.ne	437290 <ferror@plt+0x34a10>  // b.any
  43726c:	ldr	w3, [x26, #12]
  437270:	mov	w27, #0x2                   	// #2
  437274:	ldr	x1, [x24, #56]
  437278:	add	x3, x3, #0x2
  43727c:	mov	w21, #0x0                   	// #0
  437280:	add	x3, x3, x3, lsl #1
  437284:	ldr	x26, [x1, #16]
  437288:	lsl	x3, x3, #3
  43728c:	b	436fcc <ferror@plt+0x3474c>
  437290:	mov	w2, w25
  437294:	mov	x0, x24
  437298:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43729c:	mov	w1, #0x3                   	// #3
  4372a0:	add	x3, x3, #0xb18
  4372a4:	bl	423488 <ferror@plt+0x20c08>
  4372a8:	b	436f58 <ferror@plt+0x346d8>
  4372ac:	cmp	w0, #0x14
  4372b0:	mov	w27, #0x3                   	// #3
  4372b4:	b.ne	436d38 <ferror@plt+0x344b8>  // b.any
  4372b8:	ldr	w3, [x26, #12]
  4372bc:	add	w27, w27, #0x1
  4372c0:	ldr	x1, [x24, #56]
  4372c4:	add	x3, x3, #0x2
  4372c8:	mov	w23, #0x1                   	// #1
  4372cc:	add	x3, x3, x3, lsl #1
  4372d0:	ldr	x26, [x1, #16]
  4372d4:	lsl	x3, x3, #3
  4372d8:	str	wzr, [sp, #96]
  4372dc:	b	436fcc <ferror@plt+0x3474c>
  4372e0:	add	x3, x3, #0x2
  4372e4:	ldr	x1, [x24, #56]
  4372e8:	add	x3, x3, x3, lsl #1
  4372ec:	lsl	x3, x3, #3
  4372f0:	ldr	x26, [x1, #16]
  4372f4:	b	436fcc <ferror@plt+0x3474c>
  4372f8:	ldr	w25, [x2]
  4372fc:	cbz	w27, 43738c <ferror@plt+0x34b0c>
  437300:	mov	w2, w25
  437304:	mov	x0, x24
  437308:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43730c:	mov	w1, #0x3                   	// #3
  437310:	add	x3, x3, #0xae8
  437314:	bl	423488 <ferror@plt+0x20c08>
  437318:	b	436f58 <ferror@plt+0x346d8>
  43731c:	mov	w0, #0x1                   	// #1
  437320:	ldr	w3, [x26, #12]
  437324:	str	w0, [sp, #96]
  437328:	b	437244 <ferror@plt+0x349c4>
  43732c:	ldrh	w1, [x8, #30]
  437330:	tbz	w1, #0, 43733c <ferror@plt+0x34abc>
  437334:	orr	w1, w1, #0x200
  437338:	strh	w1, [x8, #30]
  43733c:	ldurh	w8, [x2, #-18]
  437340:	orr	w9, w1, #0x100
  437344:	add	x0, x0, x0, lsl #1
  437348:	and	w9, w9, #0xffff
  43734c:	mov	w3, w11
  437350:	tst	x8, #0x2
  437354:	add	x0, x26, x0, lsl #3
  437358:	csel	w1, w9, w1, ne  // ne = any
  43735c:	and	w8, w8, #0x1
  437360:	and	w1, w1, #0xfffffffe
  437364:	orr	w1, w1, #0x4
  437368:	orr	w1, w1, w8
  43736c:	strh	w1, [x0, #30]
  437370:	ldp	x8, x9, [x0, #24]
  437374:	stp	x8, x9, [x2, #-24]
  437378:	ldr	x1, [x0, #40]
  43737c:	stur	x1, [x2, #-8]
  437380:	str	w11, [x26, #12]
  437384:	ldrb	w0, [x0, #28]
  437388:	b	436cec <ferror@plt+0x3446c>
  43738c:	add	x3, x3, #0x2
  437390:	mov	w27, #0x1                   	// #1
  437394:	ldr	x1, [x24, #56]
  437398:	add	x3, x3, x3, lsl #1
  43739c:	mov	w21, #0x0                   	// #0
  4373a0:	lsl	x3, x3, #3
  4373a4:	ldr	x26, [x1, #16]
  4373a8:	b	436fcc <ferror@plt+0x3474c>
  4373ac:	mov	x0, x21
  4373b0:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4373b4:	add	x1, x1, #0xbf8
  4373b8:	bl	4025d0 <strcmp@plt>
  4373bc:	orr	w1, w20, #0x8
  4373c0:	cmp	w0, #0x0
  4373c4:	and	w1, w1, #0xff
  4373c8:	csel	w20, w1, w20, ne  // ne = any
  4373cc:	b	436bd0 <ferror@plt+0x34350>
  4373d0:	adrp	x23, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4373d4:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4373d8:	add	x23, x23, #0x940
  4373dc:	add	x22, x22, #0x910
  4373e0:	mov	w21, #0x0                   	// #0
  4373e4:	mov	w20, #0x0                   	// #0
  4373e8:	str	wzr, [sp, #168]
  4373ec:	mov	x0, x24
  4373f0:	bl	4307f0 <ferror@plt+0x2df70>
  4373f4:	ldrb	w1, [x0, #4]
  4373f8:	cmp	w1, #0x2c
  4373fc:	b.eq	437838 <ferror@plt+0x34fb8>  // b.none
  437400:	b.hi	437628 <ferror@plt+0x34da8>  // b.pmore
  437404:	cmp	w1, #0x13
  437408:	b.eq	437798 <ferror@plt+0x34f18>  // b.none
  43740c:	cmp	w1, #0x15
  437410:	b.ne	4378a0 <ferror@plt+0x35020>  // b.any
  437414:	ldr	w1, [sp, #168]
  437418:	cmp	w1, #0x0
  43741c:	ccmp	w20, #0x0, #0x0, ne  // ne = any
  437420:	b.ne	437804 <ferror@plt+0x34f84>  // b.any
  437424:	cbnz	w21, 437804 <ferror@plt+0x34f84>
  437428:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43742c:	add	x1, x1, #0xe00
  437430:	mov	w20, #0x0                   	// #0
  437434:	ldp	x4, x5, [x1, #96]
  437438:	stp	x4, x5, [sp, #200]
  43743c:	ldp	x4, x5, [x1, #112]
  437440:	stp	x4, x5, [sp, #216]
  437444:	ldr	x1, [x1, #128]
  437448:	str	x1, [sp, #232]
  43744c:	mov	x1, x0
  437450:	mov	x0, x24
  437454:	bl	42c490 <ferror@plt+0x29c10>
  437458:	mov	x3, x0
  43745c:	add	x2, sp, #0xc8
  437460:	ldr	w21, [sp, #168]
  437464:	mov	x0, x24
  437468:	mov	w1, #0x3                   	// #3
  43746c:	sub	w4, w21, #0x1
  437470:	str	w4, [sp, #172]
  437474:	ldr	x2, [x2, w20, uxtw #3]
  437478:	mov	x26, #0x0                   	// #0
  43747c:	mov	w20, #0x0                   	// #0
  437480:	bl	422e10 <ferror@plt+0x20590>
  437484:	strb	wzr, [x24, #22]
  437488:	cbnz	w21, 436f68 <ferror@plt+0x346e8>
  43748c:	mov	w0, #0x0                   	// #0
  437490:	ldp	x19, x20, [sp, #16]
  437494:	ldp	x21, x22, [sp, #32]
  437498:	ldp	x23, x24, [sp, #48]
  43749c:	ldp	x25, x26, [sp, #64]
  4374a0:	ldp	x27, x28, [sp, #80]
  4374a4:	ldp	x29, x30, [sp], #240
  4374a8:	ret
  4374ac:	ldr	x20, [x19, #24]
  4374b0:	ldrb	w0, [x20, #19]
  4374b4:	tbz	w0, #5, 4377c8 <ferror@plt+0x34f48>
  4374b8:	ldrh	w0, [x19, #18]
  4374bc:	ubfx	x20, x0, #2, #8
  4374c0:	tbz	w0, #5, 436d88 <ferror@plt+0x34508>
  4374c4:	nop
  4374c8:	mov	w1, #0x0                   	// #0
  4374cc:	b	436de0 <ferror@plt+0x34560>
  4374d0:	ldrb	w0, [x24, #1143]
  4374d4:	cbz	w0, 436e1c <ferror@plt+0x3459c>
  4374d8:	mov	w1, #0xb                   	// #11
  4374dc:	b	436de0 <ferror@plt+0x34560>
  4374e0:	ldrb	w0, [x24, #1124]
  4374e4:	cbz	w0, 436c20 <ferror@plt+0x343a0>
  4374e8:	ldrb	w0, [x24, #1152]
  4374ec:	mov	w1, #0x0                   	// #0
  4374f0:	cbz	w0, 436e74 <ferror@plt+0x345f4>
  4374f4:	ldrb	w1, [x24, #1120]
  4374f8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4374fc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437500:	add	x0, x0, #0x9a8
  437504:	cmp	w1, #0x0
  437508:	add	x2, x2, #0x970
  43750c:	csel	x2, x2, x0, ne  // ne = any
  437510:	mov	x0, x24
  437514:	mov	w1, #0x2                   	// #2
  437518:	mov	w3, #0xffffffff            	// #-1
  43751c:	str	w3, [sp, #172]
  437520:	mov	w21, #0x0                   	// #0
  437524:	mov	x22, #0x0                   	// #0
  437528:	bl	422e10 <ferror@plt+0x20590>
  43752c:	str	wzr, [sp, #168]
  437530:	ldr	x1, [x24, #56]
  437534:	ldp	x26, x0, [x1, #16]
  437538:	sub	x0, x0, x26
  43753c:	cmp	x0, #0x2f
  437540:	b.hi	436c44 <ferror@plt+0x343c4>  // b.pmore
  437544:	add	x1, x24, #0x38
  437548:	mov	x0, x24
  43754c:	mov	x2, #0x30                  	// #48
  437550:	bl	42d2b0 <ferror@plt+0x2aa30>
  437554:	ldr	x1, [x24, #56]
  437558:	ldr	x26, [x1, #16]
  43755c:	b	436c44 <ferror@plt+0x343c4>
  437560:	ldrh	w0, [x20, #16]
  437564:	ldrh	w1, [x26, #16]
  437568:	cmp	w1, w0
  43756c:	b.ne	4374c8 <ferror@plt+0x34c48>  // b.any
  437570:	ldrb	w4, [x20, #19]
  437574:	ldrb	w1, [x26, #19]
  437578:	eor	w1, w4, w1
  43757c:	tst	w1, #0xc
  437580:	b.ne	436dc0 <ferror@plt+0x34540>  // b.any
  437584:	sub	w0, w0, #0x1
  437588:	b	4375a8 <ferror@plt+0x34d28>
  43758c:	ldr	x2, [x20]
  437590:	sub	w0, w0, #0x1
  437594:	ldr	x3, [x26]
  437598:	ldr	x2, [x2, x1, lsl #3]
  43759c:	ldr	x1, [x3, x1, lsl #3]
  4375a0:	cmp	x2, x1
  4375a4:	b.ne	436dc0 <ferror@plt+0x34540>  // b.any
  4375a8:	mov	w1, w0
  4375ac:	cmn	w0, #0x1
  4375b0:	b.ne	43758c <ferror@plt+0x34d0c>  // b.any
  4375b4:	and	w4, w4, #0x3
  4375b8:	cmp	w4, #0x2
  4375bc:	b.eq	437954 <ferror@plt+0x350d4>  // b.none
  4375c0:	ldr	w21, [x20, #12]
  4375c4:	ldr	w0, [x26, #12]
  4375c8:	cmp	w21, w0
  4375cc:	b.ne	436dc0 <ferror@plt+0x34540>  // b.any
  4375d0:	sub	w21, w21, #0x1
  4375d4:	nop
  4375d8:	mov	w0, w21
  4375dc:	cmn	w21, #0x1
  4375e0:	add	x0, x0, #0x1
  4375e4:	b.eq	436e14 <ferror@plt+0x34594>  // b.none
  4375e8:	add	x0, x0, x0, lsl #1
  4375ec:	sub	w21, w21, #0x1
  4375f0:	lsl	x0, x0, #3
  4375f4:	add	x1, x26, x0
  4375f8:	add	x0, x20, x0
  4375fc:	bl	42c9d8 <ferror@plt+0x2a158>
  437600:	cbnz	w0, 4375d8 <ferror@plt+0x34d58>
  437604:	b	436dc0 <ferror@plt+0x34540>
  437608:	sub	x2, x9, x28
  43760c:	mov	w14, w2
  437610:	cbnz	w11, 4370e4 <ferror@plt+0x34864>
  437614:	b	437164 <ferror@plt+0x348e4>
  437618:	mov	x9, x28
  43761c:	mov	x2, #0x0                   	// #0
  437620:	mov	w14, #0x0                   	// #0
  437624:	b	4370e0 <ferror@plt+0x34860>
  437628:	cmp	w1, #0x35
  43762c:	b.eq	437870 <ferror@plt+0x34ff0>  // b.none
  437630:	cmp	w1, #0x4f
  437634:	b.ne	437640 <ferror@plt+0x34dc0>  // b.any
  437638:	ldrb	w1, [x24, #1124]
  43763c:	cbz	w1, 4373ec <ferror@plt+0x34b6c>
  437640:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437644:	add	x1, x1, #0xe00
  437648:	ldp	x4, x5, [x1, #96]
  43764c:	stp	x4, x5, [sp, #200]
  437650:	ldp	x4, x5, [x1, #112]
  437654:	stp	x4, x5, [sp, #216]
  437658:	ldr	x1, [x1, #128]
  43765c:	str	x1, [sp, #232]
  437660:	cbz	w21, 43744c <ferror@plt+0x34bcc>
  437664:	nop
  437668:	mov	x3, #0x0                   	// #0
  43766c:	mov	w20, #0x4                   	// #4
  437670:	b	43745c <ferror@plt+0x34bdc>
  437674:	cbnz	w22, 437744 <ferror@plt+0x34ec4>
  437678:	cbz	w23, 4377a8 <ferror@plt+0x34f28>
  43767c:	cbnz	w27, 4377e8 <ferror@plt+0x34f68>
  437680:	str	w11, [x26, #12]
  437684:	mov	x0, x24
  437688:	bl	430be0 <ferror@plt+0x2e360>
  43768c:	mov	x26, x0
  437690:	ldr	w0, [x0, #12]
  437694:	cbz	w0, 4376a4 <ferror@plt+0x34e24>
  437698:	ldrh	w1, [x26, #30]
  43769c:	and	w1, w1, #0xfffffffe
  4376a0:	strh	w1, [x26, #30]
  4376a4:	ldr	w3, [sp, #100]
  4376a8:	cbz	w3, 4377b0 <ferror@plt+0x34f30>
  4376ac:	ldr	x2, [x24, #56]
  4376b0:	mov	w1, #0x18                  	// #24
  4376b4:	umull	x20, w3, w1
  4376b8:	ldp	x1, x2, [x2, #16]
  4376bc:	sub	x2, x2, x1
  4376c0:	cmp	x20, x2
  4376c4:	b.hi	437a10 <ferror@plt+0x35190>  // b.pmore
  4376c8:	add	x11, x26, #0x18
  4376cc:	cbz	w0, 4378dc <ferror@plt+0x3505c>
  4376d0:	sub	w0, w0, #0x1
  4376d4:	add	x2, x26, #0x30
  4376d8:	mov	w9, #0x18                  	// #24
  4376dc:	mov	x3, x11
  4376e0:	mov	w8, w9
  4376e4:	mov	w7, #0x0                   	// #0
  4376e8:	umaddl	x9, w0, w9, x2
  4376ec:	mov	w13, #0x0                   	// #0
  4376f0:	b	437718 <ferror@plt+0x34e98>
  4376f4:	ldp	x4, x5, [x3]
  4376f8:	add	w7, w7, #0x1
  4376fc:	stp	x4, x5, [x0]
  437700:	ldr	x4, [x3, #16]
  437704:	str	x4, [x0, #16]
  437708:	umaddl	x0, w7, w8, x11
  43770c:	add	x3, x3, #0x18
  437710:	cmp	x9, x3
  437714:	b.eq	4378e0 <ferror@plt+0x35060>  // b.none
  437718:	ldrb	w4, [x3, #4]
  43771c:	umaddl	x0, w7, w8, x11
  437720:	cmp	w4, #0x26
  437724:	b.ne	4376f4 <ferror@plt+0x34e74>  // b.any
  437728:	umaddl	x12, w13, w8, x1
  43772c:	add	w13, w13, #0x1
  437730:	ldp	x4, x5, [x3]
  437734:	stp	x4, x5, [x12]
  437738:	ldr	x4, [x3, #16]
  43773c:	str	x4, [x12, #16]
  437740:	b	43770c <ferror@plt+0x34e8c>
  437744:	mov	x0, x24
  437748:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43774c:	mov	w1, #0x3                   	// #3
  437750:	add	x2, x2, #0xa98
  437754:	bl	422e10 <ferror@plt+0x20590>
  437758:	b	436f58 <ferror@plt+0x346d8>
  43775c:	ubfiz	w21, w21, #3, #1
  437760:	and	w2, w2, #0xfffffff3
  437764:	orr	w21, w21, #0x4
  437768:	ldrh	w0, [sp, #168]
  43776c:	orr	w2, w21, w2
  437770:	mov	x3, #0x30                  	// #48
  437774:	mov	w25, #0x0                   	// #0
  437778:	mov	w27, #0x0                   	// #0
  43777c:	ubfx	x23, x2, #3, #1
  437780:	mov	w21, #0x0                   	// #0
  437784:	str	x22, [x26]
  437788:	strh	w0, [x26, #16]
  43778c:	strb	w2, [x26, #19]
  437790:	stp	wzr, wzr, [sp, #96]
  437794:	b	436fcc <ferror@plt+0x3474c>
  437798:	cbz	w20, 437ab4 <ferror@plt+0x35234>
  43779c:	cbnz	w21, 437a64 <ferror@plt+0x351e4>
  4377a0:	mov	w20, #0x0                   	// #0
  4377a4:	b	4373ec <ferror@plt+0x34b6c>
  4377a8:	cbnz	w27, 436f58 <ferror@plt+0x346d8>
  4377ac:	b	437680 <ferror@plt+0x34e00>
  4377b0:	ldr	w0, [sp, #168]
  4377b4:	mov	w20, #0x1                   	// #1
  4377b8:	strb	wzr, [x24, #22]
  4377bc:	cbnz	w0, 436f68 <ferror@plt+0x346e8>
  4377c0:	ldp	x27, x28, [sp, #80]
  4377c4:	b	436b60 <ferror@plt+0x342e0>
  4377c8:	ldr	w1, [x20, #8]
  4377cc:	ldr	x0, [x24, #40]
  4377d0:	bl	431a80 <ferror@plt+0x2f200>
  4377d4:	ldr	w0, [x0, #20]
  4377d8:	cbz	w0, 437a40 <ferror@plt+0x351c0>
  4377dc:	ldrb	w0, [x19, #18]
  4377e0:	and	w0, w0, #0x3
  4377e4:	b	436d74 <ferror@plt+0x344f4>
  4377e8:	mov	w2, w25
  4377ec:	mov	x0, x24
  4377f0:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4377f4:	mov	w1, #0x3                   	// #3
  4377f8:	add	x3, x3, #0xad0
  4377fc:	bl	423488 <ferror@plt+0x20c08>
  437800:	b	436f58 <ferror@plt+0x346d8>
  437804:	ldr	w20, [sp, #168]
  437808:	mov	x0, x24
  43780c:	ubfiz	x1, x20, #3, #32
  437810:	bl	430be0 <ferror@plt+0x2e360>
  437814:	mov	x22, x0
  437818:	sub	w0, w20, #0x1
  43781c:	mov	x20, #0x0                   	// #0
  437820:	str	w0, [sp, #172]
  437824:	b	436c30 <ferror@plt+0x343b0>
  437828:	cmp	w0, #0x43
  43782c:	cset	w1, eq  // eq = none
  437830:	lsl	w1, w1, #1
  437834:	b	436e74 <ferror@plt+0x345f4>
  437838:	cbnz	w21, 437a64 <ferror@plt+0x351e4>
  43783c:	cbz	w20, 43796c <ferror@plt+0x350ec>
  437840:	ldrb	w0, [x24, #1154]
  437844:	mov	w21, w20
  437848:	cbz	w0, 4373ec <ferror@plt+0x34b6c>
  43784c:	ldrb	w0, [x24, #1142]
  437850:	cbz	w0, 4373ec <ferror@plt+0x34b6c>
  437854:	ldrb	w2, [x24, #1120]
  437858:	mov	x0, x24
  43785c:	mov	w1, #0xa                   	// #10
  437860:	cmp	w2, #0x0
  437864:	csel	x2, x22, x23, ne  // ne = any
  437868:	bl	423050 <ferror@plt+0x207d0>
  43786c:	b	4373ec <ferror@plt+0x34b6c>
  437870:	cbnz	w20, 437640 <ferror@plt+0x34dc0>
  437874:	cbnz	w21, 437a64 <ferror@plt+0x351e4>
  437878:	ldp	x2, x3, [x0, #8]
  43787c:	mov	x0, x24
  437880:	ldr	w25, [sp, #168]
  437884:	mov	w1, w25
  437888:	bl	436960 <ferror@plt+0x340e0>
  43788c:	ands	w20, w0, #0xff
  437890:	b.eq	437a90 <ferror@plt+0x35210>  // b.none
  437894:	add	w0, w25, #0x1
  437898:	str	w0, [sp, #168]
  43789c:	b	4373ec <ferror@plt+0x34b6c>
  4378a0:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4378a4:	add	x2, x2, #0xe00
  4378a8:	add	x4, x2, #0x60
  4378ac:	ldp	x2, x3, [x2, #96]
  4378b0:	stp	x2, x3, [sp, #200]
  4378b4:	ldp	x2, x3, [x4, #16]
  4378b8:	stp	x2, x3, [sp, #216]
  4378bc:	ldr	x2, [x4, #32]
  4378c0:	str	x2, [sp, #232]
  4378c4:	cbnz	w21, 437668 <ferror@plt+0x34de8>
  4378c8:	cmp	w1, #0x16
  4378cc:	b.ne	43744c <ferror@plt+0x34bcc>  // b.any
  4378d0:	add	w20, w20, #0x2
  4378d4:	mov	x3, #0x0                   	// #0
  4378d8:	b	43745c <ferror@plt+0x34bdc>
  4378dc:	mov	x0, x11
  4378e0:	mov	x2, x20
  4378e4:	bl	402220 <memcpy@plt>
  4378e8:	ldrb	w0, [x26, #19]
  4378ec:	mov	w20, #0x1                   	// #1
  4378f0:	orr	w0, w0, #0x40
  4378f4:	strb	w0, [x26, #19]
  4378f8:	ldr	w0, [sp, #168]
  4378fc:	strb	wzr, [x24, #22]
  437900:	cbnz	w0, 436f68 <ferror@plt+0x346e8>
  437904:	ldp	x27, x28, [sp, #80]
  437908:	b	436b60 <ferror@plt+0x342e0>
  43790c:	ldr	x2, [x19, #24]
  437910:	mov	x0, x24
  437914:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437918:	mov	w3, #0x0                   	// #0
  43791c:	add	x4, x4, #0xb90
  437920:	mov	w1, #0x5                   	// #5
  437924:	ldr	w2, [x2, #8]
  437928:	bl	423290 <ferror@plt+0x20a10>
  43792c:	b	436e14 <ferror@plt+0x34594>
  437930:	ldr	x1, [x20, #16]
  437934:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437938:	add	x0, x0, #0x9e0
  43793c:	ldrb	w1, [x1]
  437940:	bl	402670 <strchr@plt>
  437944:	cmp	x0, #0x0
  437948:	cset	w1, eq  // eq = none
  43794c:	lsl	w1, w1, #1
  437950:	b	436e74 <ferror@plt+0x345f4>
  437954:	mov	x0, x20
  437958:	mov	x1, x26
  43795c:	bl	43d488 <ferror@plt+0x3ac08>
  437960:	tst	w0, #0xff
  437964:	b.eq	436e14 <ferror@plt+0x34594>  // b.none
  437968:	b	436dc0 <ferror@plt+0x34540>
  43796c:	ldr	w1, [sp, #168]
  437970:	mov	x0, x24
  437974:	ldr	x3, [x24, #1272]
  437978:	add	w2, w1, #0x1
  43797c:	str	w2, [sp, #168]
  437980:	mov	x2, x3
  437984:	bl	436960 <ferror@plt+0x340e0>
  437988:	ldrb	w0, [x24, #1152]
  43798c:	mov	w1, #0x1                   	// #1
  437990:	strb	w1, [x24, #22]
  437994:	cbnz	w0, 4379d8 <ferror@plt+0x35158>
  437998:	ldrb	w0, [x24, #1154]
  43799c:	cbz	w0, 4379d8 <ferror@plt+0x35158>
  4379a0:	ldrb	w0, [x24, #1142]
  4379a4:	cbz	w0, 4379d8 <ferror@plt+0x35158>
  4379a8:	ldrb	w1, [x24, #1120]
  4379ac:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4379b0:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4379b4:	add	x0, x0, #0x8d8
  4379b8:	cmp	w1, #0x0
  4379bc:	add	x2, x2, #0x8a0
  4379c0:	csel	x2, x2, x0, ne  // ne = any
  4379c4:	mov	w1, #0xa                   	// #10
  4379c8:	mov	x0, x24
  4379cc:	mov	w21, #0x1                   	// #1
  4379d0:	bl	423050 <ferror@plt+0x207d0>
  4379d4:	b	4373ec <ferror@plt+0x34b6c>
  4379d8:	ldrsb	w0, [x24, #1198]
  4379dc:	mov	w21, #0x1                   	// #1
  4379e0:	cmp	w0, #0x0
  4379e4:	b.le	4373ec <ferror@plt+0x34b6c>
  4379e8:	ldrb	w0, [x24, #1120]
  4379ec:	cbnz	w0, 4373ec <ferror@plt+0x34b6c>
  4379f0:	mov	x0, x24
  4379f4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  4379f8:	mov	w1, #0x0                   	// #0
  4379fc:	add	x2, x2, #0x8d8
  437a00:	bl	422e10 <ferror@plt+0x20590>
  437a04:	b	4373ec <ferror@plt+0x34b6c>
  437a08:	mov	w0, #0x0                   	// #0
  437a0c:	b	436be4 <ferror@plt+0x34364>
  437a10:	add	x1, x24, #0x38
  437a14:	mov	x0, x24
  437a18:	mov	x2, x20
  437a1c:	bl	42d2b0 <ferror@plt+0x2aa30>
  437a20:	ldr	x1, [x24, #56]
  437a24:	ldr	w0, [x26, #12]
  437a28:	ldr	x1, [x1, #16]
  437a2c:	b	4376c8 <ferror@plt+0x34e48>
  437a30:	mov	w11, #0x0                   	// #0
  437a34:	mov	x1, #0x18                  	// #24
  437a38:	str	wzr, [sp, #100]
  437a3c:	b	437680 <ferror@plt+0x34e00>
  437a40:	ldr	w2, [x20, #8]
  437a44:	mov	x0, x24
  437a48:	ldr	x5, [x19]
  437a4c:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437a50:	mov	w3, #0x0                   	// #0
  437a54:	add	x4, x4, #0x5b0
  437a58:	mov	w1, #0xe                   	// #14
  437a5c:	bl	423308 <ferror@plt+0x20a88>
  437a60:	b	4377dc <ferror@plt+0x34f5c>
  437a64:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437a68:	add	x0, x0, #0xe00
  437a6c:	mov	x3, #0x0                   	// #0
  437a70:	mov	w20, #0x4                   	// #4
  437a74:	ldp	x4, x5, [x0, #96]
  437a78:	stp	x4, x5, [sp, #200]
  437a7c:	ldp	x4, x5, [x0, #112]
  437a80:	stp	x4, x5, [sp, #216]
  437a84:	ldr	x0, [x0, #128]
  437a88:	str	x0, [sp, #232]
  437a8c:	b	43745c <ferror@plt+0x34bdc>
  437a90:	ldr	w0, [sp, #168]
  437a94:	strb	wzr, [x24, #22]
  437a98:	cbz	w0, 43748c <ferror@plt+0x34c0c>
  437a9c:	sub	w0, w0, #0x1
  437aa0:	mov	x26, #0x0                   	// #0
  437aa4:	str	w0, [sp, #172]
  437aa8:	b	436f68 <ferror@plt+0x346e8>
  437aac:	mov	w21, #0x0                   	// #0
  437ab0:	b	436f18 <ferror@plt+0x34698>
  437ab4:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437ab8:	add	x1, x1, #0xe00
  437abc:	ldp	x4, x5, [x1, #96]
  437ac0:	stp	x4, x5, [sp, #200]
  437ac4:	ldp	x4, x5, [x1, #112]
  437ac8:	stp	x4, x5, [sp, #216]
  437acc:	ldr	x1, [x1, #128]
  437ad0:	str	x1, [sp, #232]
  437ad4:	cbnz	w21, 437668 <ferror@plt+0x34de8>
  437ad8:	mov	w20, #0x0                   	// #0
  437adc:	b	43744c <ferror@plt+0x34bcc>
  437ae0:	ldr	x0, [x1, #24]
  437ae4:	add	w2, w2, #0x1
  437ae8:	strb	w2, [x0, #18]
  437aec:	ret
  437af0:	stp	x29, x30, [sp, #-48]!
  437af4:	mov	x29, sp
  437af8:	stp	x19, x20, [sp, #16]
  437afc:	mov	x19, x1
  437b00:	mov	x20, x0
  437b04:	ldrh	w2, [x1, #18]
  437b08:	orr	w2, w2, #0x80
  437b0c:	strh	w2, [x1, #18]
  437b10:	and	w2, w2, #0x3
  437b14:	cmp	w2, #0x2
  437b18:	b.eq	437b44 <ferror@plt+0x352c4>  // b.none
  437b1c:	cmp	w2, #0x3
  437b20:	b.eq	437b58 <ferror@plt+0x352d8>  // b.none
  437b24:	cbz	w2, 437b88 <ferror@plt+0x35308>
  437b28:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437b2c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437b30:	add	x2, x2, #0xc10
  437b34:	add	x0, x0, #0x558
  437b38:	mov	w1, #0xe0b                 	// #3595
  437b3c:	str	x21, [sp, #32]
  437b40:	bl	4028b0 <ferror@plt+0x30>
  437b44:	str	x21, [sp, #32]
  437b48:	ldr	x21, [x1, #24]
  437b4c:	ldrb	w2, [x21, #18]
  437b50:	cbnz	w2, 437ba8 <ferror@plt+0x35328>
  437b54:	ldr	x21, [sp, #32]
  437b58:	ldr	x3, [x20, #1008]
  437b5c:	cbz	x3, 437b7c <ferror@plt+0x352fc>
  437b60:	ldr	w1, [x20, #48]
  437b64:	mov	x2, x19
  437b68:	mov	x0, x20
  437b6c:	mov	x16, x3
  437b70:	ldp	x19, x20, [sp, #16]
  437b74:	ldp	x29, x30, [sp], #48
  437b78:	br	x16
  437b7c:	ldp	x19, x20, [sp, #16]
  437b80:	ldp	x29, x30, [sp], #48
  437b84:	ret
  437b88:	ldr	x3, [x0, #1016]
  437b8c:	cbz	x3, 437b7c <ferror@plt+0x352fc>
  437b90:	ldp	x19, x20, [sp, #16]
  437b94:	mov	x2, x1
  437b98:	ldp	x29, x30, [sp], #48
  437b9c:	mov	x16, x3
  437ba0:	ldr	w1, [x0, #48]
  437ba4:	br	x16
  437ba8:	ldr	x3, [x0, #1048]
  437bac:	mov	x1, x21
  437bb0:	sub	w2, w2, #0x1
  437bb4:	blr	x3
  437bb8:	strb	wzr, [x21, #18]
  437bbc:	ldr	x3, [x20, #1008]
  437bc0:	ldr	x21, [sp, #32]
  437bc4:	cbnz	x3, 437b60 <ferror@plt+0x352e0>
  437bc8:	b	437b7c <ferror@plt+0x352fc>
  437bcc:	nop
  437bd0:	stp	x29, x30, [sp, #-320]!
  437bd4:	mov	x29, sp
  437bd8:	stp	x27, x28, [sp, #80]
  437bdc:	mov	x27, x0
  437be0:	ldr	x0, [x1, #24]
  437be4:	str	x0, [sp, #104]
  437be8:	stp	x19, x20, [sp, #16]
  437bec:	mov	x19, #0x0                   	// #0
  437bf0:	ldrb	w0, [x0, #19]
  437bf4:	stp	x21, x22, [sp, #32]
  437bf8:	stp	x23, x24, [sp, #48]
  437bfc:	mov	x23, x1
  437c00:	str	w3, [sp, #124]
  437c04:	str	x2, [sp, #128]
  437c08:	tbnz	w0, #2, 437f18 <ferror@plt+0x35698>
  437c0c:	ldrh	w0, [x23, #18]
  437c10:	mov	w1, w0
  437c14:	ubfx	x0, x0, #2, #8
  437c18:	orr	w2, w0, #0x10
  437c1c:	bfi	w1, w2, #2, #8
  437c20:	strh	w1, [x23, #18]
  437c24:	tbz	w0, #5, 43800c <ferror@plt+0x3578c>
  437c28:	ldr	x3, [x27, #1032]
  437c2c:	cbz	x3, 437c40 <ferror@plt+0x353c0>
  437c30:	ldr	w1, [sp, #124]
  437c34:	mov	x2, x23
  437c38:	mov	x0, x27
  437c3c:	blr	x3
  437c40:	ldr	x2, [sp, #104]
  437c44:	ldrb	w0, [x2, #19]
  437c48:	ldrh	w1, [x2, #16]
  437c4c:	orr	w0, w0, #0x20
  437c50:	strb	w0, [x2, #19]
  437c54:	cbnz	w1, 437d9c <ferror@plt+0x3551c>
  437c58:	stp	x25, x26, [sp, #64]
  437c5c:	ldr	w25, [x2, #12]
  437c60:	ldrb	w1, [x27, #1157]
  437c64:	tbnz	w0, #6, 437e3c <ferror@plt+0x355bc>
  437c68:	add	x22, x2, #0x18
  437c6c:	cbz	w1, 438088 <ferror@plt+0x35808>
  437c70:	ubfiz	x0, x25, #4, #32
  437c74:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  437c78:	mov	x5, x0
  437c7c:	mov	w20, w25
  437c80:	mov	x0, x27
  437c84:	str	x5, [sp, #96]
  437c88:	lsl	x1, x20, #3
  437c8c:	bl	42d148 <ferror@plt+0x2a8c8>
  437c90:	mov	x26, x0
  437c94:	ldr	w2, [sp, #124]
  437c98:	mov	w3, w25
  437c9c:	ldr	x0, [x27, #40]
  437ca0:	mov	x1, x23
  437ca4:	bl	431560 <ferror@plt+0x2ece0>
  437ca8:	mov	x28, x0
  437cac:	ldr	x5, [sp, #96]
  437cb0:	cbz	w25, 438604 <ferror@plt+0x35d84>
  437cb4:	ldp	x4, x20, [x26, #8]
  437cb8:	mov	x0, x23
  437cbc:	ldr	x1, [x26, #24]
  437cc0:	mov	x23, x19
  437cc4:	mov	x19, x5
  437cc8:	mov	x5, x0
  437ccc:	mov	w24, #0x0                   	// #0
  437cd0:	cmp	x20, x1
  437cd4:	b.hi	437d2c <ferror@plt+0x354ac>  // b.pmore
  437cd8:	sub	x21, x20, x4
  437cdc:	ldr	w3, [x22]
  437ce0:	ubfx	x21, x21, #3, #32
  437ce4:	cbz	x28, 437d44 <ferror@plt+0x354c4>
  437ce8:	mov	w1, w24
  437cec:	mov	w2, w3
  437cf0:	mov	x0, x28
  437cf4:	str	x5, [sp, #96]
  437cf8:	bl	431618 <ferror@plt+0x2ed98>
  437cfc:	add	w24, w24, #0x1
  437d00:	ldr	x4, [x26, #8]
  437d04:	str	w0, [x19, x21, lsl #2]
  437d08:	str	x22, [x20], #8
  437d0c:	cmp	w25, w24
  437d10:	add	x22, x22, #0x18
  437d14:	str	x20, [x26, #16]
  437d18:	ldr	x5, [sp, #96]
  437d1c:	b.ls	437d60 <ferror@plt+0x354e0>  // b.plast
  437d20:	ldr	x1, [x26, #24]
  437d24:	cmp	x20, x1
  437d28:	b.ls	437cd8 <ferror@plt+0x35458>  // b.plast
  437d2c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437d30:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437d34:	add	x2, x2, #0x728
  437d38:	add	x0, x0, #0x558
  437d3c:	mov	w1, #0x953                 	// #2387
  437d40:	bl	4028b0 <ferror@plt+0x30>
  437d44:	str	w3, [x19, x21, lsl #2]
  437d48:	add	w24, w24, #0x1
  437d4c:	str	x22, [x20], #8
  437d50:	cmp	w24, w25
  437d54:	add	x22, x22, #0x18
  437d58:	str	x20, [x26, #16]
  437d5c:	b.cc	437cd0 <ferror@plt+0x35450>  // b.lo, b.ul, b.last
  437d60:	mov	x0, x5
  437d64:	mov	x5, x19
  437d68:	mov	x19, x23
  437d6c:	mov	x23, x0
  437d70:	mov	x3, x5
  437d74:	mov	x2, x26
  437d78:	mov	x1, x23
  437d7c:	mov	w5, w25
  437d80:	mov	x0, x27
  437d84:	bl	435ab0 <ferror@plt+0x33230>
  437d88:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  437d8c:	ldr	w0, [x1, #1936]
  437d90:	add	w25, w0, w25
  437d94:	str	w25, [x1, #1936]
  437d98:	ldp	x25, x26, [sp, #64]
  437d9c:	cbz	x19, 43801c <ferror@plt+0x3579c>
  437da0:	ldrb	w0, [x27, #16]
  437da4:	cbz	w0, 437e90 <ferror@plt+0x35610>
  437da8:	ldr	x0, [x27, #136]
  437dac:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  437db0:	add	x23, x23, #0x790
  437db4:	nop
  437db8:	mov	x21, x19
  437dbc:	ldr	x0, [x0]
  437dc0:	ldp	x22, x20, [x21, #8]
  437dc4:	ldr	x19, [x19]
  437dc8:	str	xzr, [x21]
  437dcc:	sub	x20, x20, x22
  437dd0:	asr	x20, x20, #3
  437dd4:	cbz	x0, 437ef0 <ferror@plt+0x35670>
  437dd8:	str	x0, [x27, #136]
  437ddc:	add	x1, x22, w20, uxtw #3
  437de0:	stp	x22, x1, [x0, #16]
  437de4:	stp	x21, xzr, [x0, #32]
  437de8:	str	wzr, [x0, #48]
  437dec:	ldrb	w1, [x27, #1157]
  437df0:	cbnz	w1, 437e00 <ferror@plt+0x35580>
  437df4:	ldr	w1, [x23]
  437df8:	add	w20, w1, w20
  437dfc:	str	w20, [x23]
  437e00:	cbnz	x19, 437db8 <ferror@plt+0x35538>
  437e04:	mov	w0, #0x2                   	// #2
  437e08:	strb	wzr, [x27, #192]
  437e0c:	ldp	x19, x20, [sp, #16]
  437e10:	ldp	x21, x22, [sp, #32]
  437e14:	ldp	x23, x24, [sp, #48]
  437e18:	ldp	x27, x28, [sp, #80]
  437e1c:	ldp	x29, x30, [sp], #320
  437e20:	ret
  437e24:	ubfiz	x0, x25, #1, #32
  437e28:	add	x0, x0, w25, uxtw
  437e2c:	add	x0, x2, x0, lsl #3
  437e30:	ldrb	w0, [x0, #28]
  437e34:	cmp	w0, #0x26
  437e38:	b.ne	439494 <ferror@plt+0x36c14>  // b.any
  437e3c:	mov	w20, w25
  437e40:	sub	w25, w25, #0x1
  437e44:	cbnz	w20, 437e24 <ferror@plt+0x355a4>
  437e48:	cbz	w1, 4395c0 <ferror@plt+0x36d40>
  437e4c:	mov	x0, #0x0                   	// #0
  437e50:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  437e54:	mov	x5, x0
  437e58:	mov	x1, #0x0                   	// #0
  437e5c:	mov	x0, x27
  437e60:	str	x5, [sp, #96]
  437e64:	mov	w25, #0x0                   	// #0
  437e68:	bl	42d148 <ferror@plt+0x2a8c8>
  437e6c:	mov	x26, x0
  437e70:	ldr	w2, [sp, #124]
  437e74:	mov	x1, x23
  437e78:	ldr	x0, [x27, #40]
  437e7c:	mov	w3, #0x0                   	// #0
  437e80:	bl	431560 <ferror@plt+0x2ece0>
  437e84:	ldr	x4, [x26, #8]
  437e88:	ldr	x5, [sp, #96]
  437e8c:	b	437d70 <ferror@plt+0x354f0>
  437e90:	mov	x0, x27
  437e94:	bl	42bd98 <ferror@plt+0x29518>
  437e98:	mov	x20, x0
  437e9c:	mov	w1, #0x53                  	// #83
  437ea0:	ldr	x0, [x27, #136]
  437ea4:	strb	w1, [x20, #4]
  437ea8:	ldr	x1, [sp, #128]
  437eac:	strh	wzr, [x20, #6]
  437eb0:	str	x1, [x20, #8]
  437eb4:	cbz	x0, 4385fc <ferror@plt+0x35d7c>
  437eb8:	ldr	w1, [x0, #48]
  437ebc:	ldr	x21, [x0, #40]
  437ec0:	cmp	w1, #0x2
  437ec4:	b.ne	437ecc <ferror@plt+0x3564c>  // b.any
  437ec8:	ldr	x21, [x21]
  437ecc:	ldr	x0, [x0]
  437ed0:	cbz	x0, 43928c <ferror@plt+0x36a0c>
  437ed4:	str	x0, [x27, #136]
  437ed8:	add	x2, x20, #0x18
  437edc:	mov	w1, #0x1                   	// #1
  437ee0:	stp	x20, x2, [x0, #16]
  437ee4:	stp	xzr, x21, [x0, #32]
  437ee8:	str	w1, [x0, #48]
  437eec:	b	437dac <ferror@plt+0x3552c>
  437ef0:	mov	x0, #0x38                  	// #56
  437ef4:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  437ef8:	ldr	x1, [x27, #136]
  437efc:	stp	xzr, xzr, [x0]
  437f00:	str	x1, [x0, #8]
  437f04:	stp	xzr, xzr, [x0, #16]
  437f08:	stp	xzr, xzr, [x0, #32]
  437f0c:	str	xzr, [x0, #48]
  437f10:	str	x0, [x1]
  437f14:	b	437dd8 <ferror@plt+0x35558>
  437f18:	ldrb	w1, [x27, #24]
  437f1c:	mov	w2, #0x1                   	// #1
  437f20:	ldr	w0, [x27, #500]
  437f24:	add	w1, w1, #0x1
  437f28:	strb	w1, [x27, #24]
  437f2c:	add	w0, w0, #0x1
  437f30:	strb	w2, [x27, #25]
  437f34:	str	w0, [x27, #500]
  437f38:	mov	x1, #0x0                   	// #0
  437f3c:	mov	x0, x27
  437f40:	bl	4399d0 <ferror@plt+0x37150>
  437f44:	ldrb	w1, [x0, #4]
  437f48:	cmp	w1, #0x53
  437f4c:	b.ne	437f80 <ferror@plt+0x35700>  // b.any
  437f50:	cbz	x19, 438004 <ferror@plt+0x35784>
  437f54:	ldrh	w1, [x19, #6]
  437f58:	tbnz	w1, #0, 437f38 <ferror@plt+0x356b8>
  437f5c:	ldr	x1, [x0, #8]
  437f60:	cmp	x1, #0x0
  437f64:	mov	x1, #0x0                   	// #0
  437f68:	csel	x19, x19, x0, ne  // ne = any
  437f6c:	mov	x0, x27
  437f70:	bl	4399d0 <ferror@plt+0x37150>
  437f74:	ldrb	w1, [x0, #4]
  437f78:	cmp	w1, #0x53
  437f7c:	b.eq	437f50 <ferror@plt+0x356d0>  // b.none
  437f80:	cmp	w1, #0x14
  437f84:	b.eq	4380b8 <ferror@plt+0x35838>  // b.none
  437f88:	cmp	w1, #0x16
  437f8c:	b.ne	43803c <ferror@plt+0x357bc>  // b.any
  437f90:	add	x1, x27, #0x2b0
  437f94:	cmp	x0, x1
  437f98:	b.eq	43803c <ferror@plt+0x357bc>  // b.none
  437f9c:	ldrb	w1, [x27, #24]
  437fa0:	ldr	w0, [x27, #500]
  437fa4:	ldrb	w2, [x27, #1138]
  437fa8:	sub	w1, w1, #0x1
  437fac:	sub	w0, w0, #0x1
  437fb0:	strb	w1, [x27, #24]
  437fb4:	strb	wzr, [x27, #25]
  437fb8:	str	w0, [x27, #500]
  437fbc:	cbz	w2, 437ff8 <ferror@plt+0x35778>
  437fc0:	ldr	x0, [x23, #24]
  437fc4:	mov	x19, #0x0                   	// #0
  437fc8:	ldrb	w0, [x0, #19]
  437fcc:	tbnz	w0, #4, 437ff8 <ferror@plt+0x35778>
  437fd0:	ldr	x3, [x23]
  437fd4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  437fd8:	mov	x0, x27
  437fdc:	add	x2, x2, #0xc58
  437fe0:	mov	w1, #0x6                   	// #6
  437fe4:	bl	422f30 <ferror@plt+0x206b0>
  437fe8:	cbz	x19, 437ff8 <ferror@plt+0x35778>
  437fec:	mov	x1, x19
  437ff0:	mov	x0, x27
  437ff4:	bl	42d120 <ferror@plt+0x2a8a0>
  437ff8:	mov	w0, #0x0                   	// #0
  437ffc:	strb	wzr, [x27, #192]
  438000:	b	437e0c <ferror@plt+0x3558c>
  438004:	mov	x19, x0
  438008:	b	437f38 <ferror@plt+0x356b8>
  43800c:	mov	x1, x23
  438010:	mov	x0, x27
  438014:	bl	437af0 <ferror@plt+0x35270>
  438018:	b	437c28 <ferror@plt+0x353a8>
  43801c:	strb	wzr, [x27, #192]
  438020:	mov	w0, #0x1                   	// #1
  438024:	ldp	x19, x20, [sp, #16]
  438028:	ldp	x21, x22, [sp, #32]
  43802c:	ldp	x23, x24, [sp, #48]
  438030:	ldp	x27, x28, [sp, #80]
  438034:	ldp	x29, x30, [sp], #320
  438038:	ret
  43803c:	mov	x0, x27
  438040:	bl	4357c8 <ferror@plt+0x32f48>
  438044:	cbz	x19, 437f9c <ferror@plt+0x3571c>
  438048:	ldr	x0, [x27, #136]
  43804c:	cbz	x0, 4395b8 <ferror@plt+0x36d38>
  438050:	ldr	w1, [x0, #48]
  438054:	ldr	x20, [x0, #40]
  438058:	cmp	w1, #0x2
  43805c:	b.ne	438064 <ferror@plt+0x357e4>  // b.any
  438060:	ldr	x20, [x20]
  438064:	ldr	x0, [x0]
  438068:	cbz	x0, 4394e8 <ferror@plt+0x36c68>
  43806c:	str	x0, [x27, #136]
  438070:	add	x2, x19, #0x18
  438074:	mov	w1, #0x1                   	// #1
  438078:	stp	x19, x2, [x0, #16]
  43807c:	stp	xzr, x20, [x0, #32]
  438080:	str	w1, [x0, #48]
  438084:	b	437f9c <ferror@plt+0x3571c>
  438088:	mov	w20, #0x18                  	// #24
  43808c:	umull	x20, w25, w20
  438090:	ldr	x0, [x27, #136]
  438094:	ldr	x0, [x0]
  438098:	cbz	x0, 439258 <ferror@plt+0x369d8>
  43809c:	str	x0, [x27, #136]
  4380a0:	add	x20, x22, x20
  4380a4:	mov	w1, #0x1                   	// #1
  4380a8:	stp	x22, x20, [x0, #16]
  4380ac:	stp	xzr, x23, [x0, #32]
  4380b0:	str	w1, [x0, #48]
  4380b4:	b	437d88 <ferror@plt+0x35508>
  4380b8:	stp	x25, x26, [sp, #64]
  4380bc:	mov	w0, #0x2                   	// #2
  4380c0:	mov	w1, #0x1c0                 	// #448
  4380c4:	strb	w0, [x27, #25]
  4380c8:	mov	x19, #0x0                   	// #0
  4380cc:	ldrb	w25, [x27, #1157]
  4380d0:	ldr	x0, [x23, #24]
  4380d4:	str	w25, [sp, #136]
  4380d8:	str	wzr, [sp, #208]
  4380dc:	mov	x2, x0
  4380e0:	mov	x0, x27
  4380e4:	str	x2, [sp, #112]
  4380e8:	ldrh	w20, [x2, #16]
  4380ec:	cmp	w20, #0x0
  4380f0:	csinc	w20, w20, wzr, ne  // ne = any
  4380f4:	umull	x1, w20, w1
  4380f8:	bl	42d148 <ferror@plt+0x2a8c8>
  4380fc:	mov	x21, x0
  438100:	mov	w0, #0x30                  	// #48
  438104:	mov	w1, #0x0                   	// #0
  438108:	mov	x24, x21
  43810c:	ldr	x22, [x21, #8]
  438110:	umull	x20, w20, w0
  438114:	stp	x21, x22, [sp, #152]
  438118:	mov	x2, x20
  43811c:	mov	x0, x22
  438120:	bl	402440 <memset@plt>
  438124:	ldr	w0, [sp, #208]
  438128:	cmp	w25, #0x0
  43812c:	mov	x25, x22
  438130:	add	x1, x22, x20
  438134:	add	w0, w0, #0x1
  438138:	str	w0, [sp, #96]
  43813c:	ldr	w0, [sp, #136]
  438140:	cset	w2, ne  // ne = any
  438144:	str	x1, [x21, #16]
  438148:	str	x1, [x25]
  43814c:	str	x23, [sp, #144]
  438150:	mov	w23, w2
  438154:	cbnz	w0, 438340 <ferror@plt+0x35ac0>
  438158:	mov	w21, #0x32                  	// #50
  43815c:	mov	w26, #0x0                   	// #0
  438160:	mov	w20, #0x0                   	// #0
  438164:	mov	w22, #0x2                   	// #2
  438168:	b	43817c <ferror@plt+0x358fc>
  43816c:	cbz	x1, 438278 <ferror@plt+0x359f8>
  438170:	str	x28, [x1, w26, uxtw #3]
  438174:	add	w26, w26, #0x1
  438178:	add	w22, w26, #0x2
  43817c:	ldr	x0, [x24, #24]
  438180:	add	x1, x1, w22, uxtw #3
  438184:	cmp	x0, x1
  438188:	b.cc	438238 <ferror@plt+0x359b8>  // b.lo, b.ul, b.last
  43818c:	cmp	w23, #0x0
  438190:	ccmp	w22, w21, #0x0, ne  // ne = any
  438194:	b.hi	438260 <ferror@plt+0x359e0>  // b.pmore
  438198:	add	x1, sp, #0x13c
  43819c:	mov	x0, x27
  4381a0:	bl	4399d0 <ferror@plt+0x37150>
  4381a4:	ldrb	w1, [x0, #4]
  4381a8:	mov	x28, x0
  4381ac:	cmp	w1, #0x53
  4381b0:	b.eq	438220 <ferror@plt+0x359a0>  // b.none
  4381b4:	cmp	w1, #0x14
  4381b8:	b.eq	438214 <ferror@plt+0x35994>  // b.none
  4381bc:	cmp	w1, #0x15
  4381c0:	b.eq	438284 <ferror@plt+0x35a04>  // b.none
  4381c4:	cmp	w1, #0x13
  4381c8:	b.eq	438354 <ferror@plt+0x35ad4>  // b.none
  4381cc:	cmp	w1, #0x16
  4381d0:	b.eq	43829c <ferror@plt+0x35a1c>  // b.none
  4381d4:	cmp	w1, #0x25
  4381d8:	b.eq	438380 <ferror@plt+0x35b00>  // b.none
  4381dc:	cmp	w1, #0x51
  4381e0:	b.eq	438394 <ferror@plt+0x35b14>  // b.none
  4381e4:	ldr	x1, [x25]
  4381e8:	ldrb	w0, [x27, #1157]
  4381ec:	cbz	w0, 43816c <ferror@plt+0x358ec>
  4381f0:	cbz	x1, 438278 <ferror@plt+0x359f8>
  4381f4:	mov	w5, w26
  4381f8:	ldr	w6, [sp, #316]
  4381fc:	ldr	x0, [x25, #32]
  438200:	str	x28, [x1, x5, lsl #3]
  438204:	add	x7, x0, w26, uxtw #2
  438208:	cbz	x7, 438174 <ferror@plt+0x358f4>
  43820c:	str	w6, [x0, x5, lsl #2]
  438210:	b	438174 <ferror@plt+0x358f4>
  438214:	add	w20, w20, #0x1
  438218:	ldr	x1, [x25]
  43821c:	b	4381e8 <ferror@plt+0x35968>
  438220:	ldr	x1, [x25]
  438224:	cbnz	w26, 4381e8 <ferror@plt+0x35968>
  438228:	ldr	x0, [x24, #24]
  43822c:	add	x1, x1, w22, uxtw #3
  438230:	cmp	x0, x1
  438234:	b.cs	43818c <ferror@plt+0x3590c>  // b.hs, b.nlast
  438238:	mov	x1, x24
  43823c:	mov	x0, x27
  438240:	mov	x2, #0x1f40                	// #8000
  438244:	bl	42d1e8 <ferror@plt+0x2a968>
  438248:	mov	x24, x0
  43824c:	cmp	w23, #0x0
  438250:	ldr	x0, [x0, #16]
  438254:	str	x0, [x25]
  438258:	ccmp	w22, w21, #0x0, ne  // ne = any
  43825c:	b.ls	438198 <ferror@plt+0x35918>  // b.plast
  438260:	ldr	x0, [x25, #32]
  438264:	add	w21, w21, #0x3e8
  438268:	ubfiz	x1, x21, #2, #32
  43826c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  438270:	str	x0, [x25, #32]
  438274:	b	438198 <ferror@plt+0x35918>
  438278:	mov	x0, #0x0                   	// #0
  43827c:	str	x28, [x0]
  438280:	brk	#0x3e8
  438284:	ldr	x1, [x25]
  438288:	sub	w5, w20, #0x1
  43828c:	mov	x0, x1
  438290:	cbz	w20, 4382a0 <ferror@plt+0x35a20>
  438294:	mov	w20, w5
  438298:	b	4381e8 <ferror@plt+0x35968>
  43829c:	ldr	x0, [x25]
  4382a0:	cbz	w26, 4382c4 <ferror@plt+0x35a44>
  4382a4:	nop
  4382a8:	sub	w1, w26, #0x1
  4382ac:	ldr	x5, [x0, w1, uxtw #3]
  4382b0:	ldrb	w5, [x5, #4]
  4382b4:	cmp	w5, #0x53
  4382b8:	b.ne	43846c <ferror@plt+0x35bec>  // b.any
  4382bc:	mov	w26, w1
  4382c0:	cbnz	w26, 4382a8 <ferror@plt+0x35a28>
  4382c4:	mov	x1, #0x0                   	// #0
  4382c8:	str	w26, [x25, #24]
  4382cc:	add	x7, x27, #0x2b0
  4382d0:	ldrb	w5, [x27, #1157]
  4382d4:	cbnz	w5, 43844c <ferror@plt+0x35bcc>
  4382d8:	cbz	x0, 438474 <ferror@plt+0x35bf4>
  4382dc:	str	x7, [x0, x1, lsl #3]
  4382e0:	ldr	x1, [sp, #112]
  4382e4:	ldrh	w7, [x1, #16]
  4382e8:	ldr	w1, [sp, #96]
  4382ec:	cmp	w1, w7
  4382f0:	b.hi	438308 <ferror@plt+0x35a88>  // b.pmore
  4382f4:	add	w3, w26, #0x1
  4382f8:	add	x1, x25, #0x30
  4382fc:	csel	x25, x1, x25, ne  // ne = any
  438300:	add	x3, x0, x3, lsl #3
  438304:	str	x3, [x24, #16]
  438308:	ldrb	w1, [x28, #4]
  43830c:	sub	w0, w1, #0x15
  438310:	and	w0, w0, #0xff
  438314:	cmp	w0, #0x1
  438318:	b.ls	438480 <ferror@plt+0x35c00>  // b.plast
  43831c:	ldr	w0, [sp, #96]
  438320:	str	w0, [sp, #208]
  438324:	ldr	x1, [x24, #16]
  438328:	str	x1, [x25]
  43832c:	ldr	w0, [sp, #208]
  438330:	add	w0, w0, #0x1
  438334:	str	w0, [sp, #96]
  438338:	ldr	w0, [sp, #136]
  43833c:	cbz	w0, 438158 <ferror@plt+0x358d8>
  438340:	mov	x0, #0xc8                  	// #200
  438344:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  438348:	str	x0, [x25, #32]
  43834c:	ldr	x1, [x25]
  438350:	b	438158 <ferror@plt+0x358d8>
  438354:	ldr	x0, [x25]
  438358:	mov	x1, x0
  43835c:	cbnz	w20, 4381e8 <ferror@plt+0x35968>
  438360:	ldr	x2, [sp, #112]
  438364:	ldrb	w5, [x2, #19]
  438368:	tbz	w5, #3, 4382a0 <ferror@plt+0x35a20>
  43836c:	ldrh	w5, [x2, #16]
  438370:	ldr	w2, [sp, #96]
  438374:	cmp	w2, w5
  438378:	b.eq	4381e8 <ferror@plt+0x35968>  // b.none
  43837c:	b	4382a0 <ferror@plt+0x35a20>
  438380:	ldrh	w5, [x0, #6]
  438384:	ldr	x0, [x25]
  438388:	mov	x1, x0
  43838c:	tbz	w5, #6, 4381e8 <ferror@plt+0x35968>
  438390:	b	4382a0 <ferror@plt+0x35a20>
  438394:	mov	x0, x27
  438398:	bl	42bd98 <ferror@plt+0x29518>
  43839c:	ldp	x6, x7, [x28]
  4383a0:	stp	x6, x7, [x0]
  4383a4:	ldr	x1, [x28, #16]
  4383a8:	mov	x28, x0
  4383ac:	str	x1, [x0, #16]
  4383b0:	cbz	x19, 438434 <ferror@plt+0x35bb4>
  4383b4:	ldp	x1, x0, [x19, #16]
  4383b8:	sub	x0, x0, x1
  4383bc:	cmp	x0, #0x7
  4383c0:	b.hi	4383e4 <ferror@plt+0x35b64>  // b.pmore
  4383c4:	ldr	x5, [x19, #8]
  4383c8:	mov	x0, x27
  4383cc:	sub	x1, x1, x5
  4383d0:	lsl	x1, x1, #1
  4383d4:	bl	42d148 <ferror@plt+0x2a8c8>
  4383d8:	ldr	x1, [x0, #16]
  4383dc:	str	x19, [x0]
  4383e0:	mov	x19, x0
  4383e4:	str	x28, [x1], #8
  4383e8:	ldrb	w0, [x28, #4]
  4383ec:	str	x1, [x19, #16]
  4383f0:	cmp	w0, #0x52
  4383f4:	b.eq	438414 <ferror@plt+0x35b94>  // b.none
  4383f8:	add	x1, sp, #0x13c
  4383fc:	mov	x0, x27
  438400:	bl	4399d0 <ferror@plt+0x37150>
  438404:	mov	x28, x0
  438408:	ldrb	w0, [x0, #4]
  43840c:	cmp	w0, #0x16
  438410:	b.ne	4383b0 <ferror@plt+0x35b30>  // b.any
  438414:	mov	w0, #0x201                 	// #513
  438418:	strh	w0, [x27, #24]
  43841c:	ldr	x0, [x25]
  438420:	ldrb	w5, [x28, #4]
  438424:	mov	x1, x0
  438428:	cmp	w5, #0x16
  43842c:	b.eq	4382a0 <ferror@plt+0x35a20>  // b.none
  438430:	b	43817c <ferror@plt+0x358fc>
  438434:	mov	x1, #0x100                 	// #256
  438438:	mov	x0, x27
  43843c:	bl	42d148 <ferror@plt+0x2a8c8>
  438440:	mov	x19, x0
  438444:	ldr	x1, [x0, #16]
  438448:	b	4383e4 <ferror@plt+0x35b64>
  43844c:	cbz	x0, 438474 <ferror@plt+0x35bf4>
  438450:	ldr	x5, [x25, #32]
  438454:	ldr	w6, [x27, #688]
  438458:	str	x7, [x0, x1, lsl #3]
  43845c:	add	x7, x5, x1, lsl #2
  438460:	cbz	x7, 4382e0 <ferror@plt+0x35a60>
  438464:	str	w6, [x5, x1, lsl #2]
  438468:	b	4382e0 <ferror@plt+0x35a60>
  43846c:	mov	w1, w26
  438470:	b	4382c8 <ferror@plt+0x35a48>
  438474:	mov	x0, #0x0                   	// #0
  438478:	str	x7, [x0]
  43847c:	brk	#0x3e8
  438480:	cmp	w1, #0x16
  438484:	ldr	x23, [sp, #144]
  438488:	b.eq	43857c <ferror@plt+0x35cfc>  // b.none
  43848c:	ldr	w0, [sp, #96]
  438490:	cmp	w0, #0x1
  438494:	mov	w21, w0
  438498:	b.eq	4385e0 <ferror@plt+0x35d60>  // b.none
  43849c:	ldr	x20, [sp, #112]
  4384a0:	mov	w3, w21
  4384a4:	mov	x2, x23
  4384a8:	mov	x0, x27
  4384ac:	mov	x1, x20
  4384b0:	bl	4363d8 <ferror@plt+0x33b58>
  4384b4:	ands	w0, w0, #0xff
  4384b8:	str	w0, [sp, #176]
  4384bc:	b.eq	4385a8 <ferror@plt+0x35d28>  // b.none
  4384c0:	ldrb	w0, [x20, #19]
  4384c4:	tbz	w0, #3, 4384dc <ferror@plt+0x35c5c>
  4384c8:	ldrh	w0, [x20, #16]
  4384cc:	cmp	w21, w0
  4384d0:	b.cc	439654 <ferror@plt+0x36dd4>  // b.lo, b.ul, b.last
  4384d4:	cmp	w21, #0x1
  4384d8:	b.eq	439640 <ferror@plt+0x36dc0>  // b.none
  4384dc:	ldrb	w0, [x27, #24]
  4384e0:	ldr	x1, [sp, #104]
  4384e4:	sub	w0, w0, #0x1
  4384e8:	strb	w0, [x27, #24]
  4384ec:	ldr	w0, [x27, #500]
  4384f0:	strb	wzr, [x27, #25]
  4384f4:	sub	w0, w0, #0x1
  4384f8:	ldrh	w1, [x1, #16]
  4384fc:	str	w0, [x27, #500]
  438500:	ldr	x0, [sp, #152]
  438504:	ldr	x0, [x0, #8]
  438508:	str	x0, [sp, #112]
  43850c:	cbnz	w1, 43860c <ferror@plt+0x35d8c>
  438510:	ldr	w0, [sp, #96]
  438514:	cbz	w0, 43856c <ferror@plt+0x35cec>
  438518:	ldr	w1, [sp, #208]
  43851c:	mov	w21, #0x30                  	// #48
  438520:	ldr	x0, [sp, #112]
  438524:	add	x20, x0, #0x8
  438528:	umaddl	x21, w1, w21, x0
  43852c:	add	x21, x21, #0x38
  438530:	ldr	x0, [x20]
  438534:	cbz	x0, 438540 <ferror@plt+0x35cc0>
  438538:	bl	402640 <free@plt>
  43853c:	str	xzr, [x20]
  438540:	ldr	x0, [x20, #24]
  438544:	cbz	x0, 438550 <ferror@plt+0x35cd0>
  438548:	bl	402640 <free@plt>
  43854c:	str	xzr, [x20, #24]
  438550:	ldr	x0, [x20, #32]
  438554:	cbz	x0, 438560 <ferror@plt+0x35ce0>
  438558:	bl	402640 <free@plt>
  43855c:	str	xzr, [x20, #32]
  438560:	add	x20, x20, #0x30
  438564:	cmp	x21, x20
  438568:	b.ne	438530 <ferror@plt+0x35cb0>  // b.any
  43856c:	ldr	x0, [sp, #152]
  438570:	bl	42d380 <ferror@plt+0x2ab00>
  438574:	ldp	x25, x26, [sp, #64]
  438578:	b	437c0c <ferror@plt+0x3538c>
  43857c:	ldr	x0, [x27, #136]
  438580:	ldr	x0, [x0, #8]
  438584:	cbz	x0, 439824 <ferror@plt+0x36fa4>
  438588:	mov	x0, x27
  43858c:	bl	4357c8 <ferror@plt+0x32f48>
  438590:	ldr	x3, [x23]
  438594:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  438598:	mov	x0, x27
  43859c:	add	x2, x2, #0xc28
  4385a0:	mov	w1, #0x3                   	// #3
  4385a4:	bl	422e10 <ferror@plt+0x20590>
  4385a8:	ldr	x1, [sp, #152]
  4385ac:	mov	x0, x27
  4385b0:	bl	42d120 <ferror@plt+0x2a8a0>
  4385b4:	strb	wzr, [x27, #25]
  4385b8:	ldrb	w1, [x27, #24]
  4385bc:	ldr	w0, [x27, #500]
  4385c0:	ldrb	w2, [x27, #1138]
  4385c4:	sub	w1, w1, #0x1
  4385c8:	sub	w0, w0, #0x1
  4385cc:	strb	w1, [x27, #24]
  4385d0:	str	w0, [x27, #500]
  4385d4:	cbnz	w2, 439974 <ferror@plt+0x370f4>
  4385d8:	ldp	x25, x26, [sp, #64]
  4385dc:	b	437fe8 <ferror@plt+0x35768>
  4385e0:	mov	x21, x0
  4385e4:	cbnz	w7, 43849c <ferror@plt+0x35c1c>
  4385e8:	ldr	x0, [sp, #160]
  4385ec:	ldr	w0, [x0, #24]
  4385f0:	cmp	w0, #0x0
  4385f4:	cset	w21, ne  // ne = any
  4385f8:	b	43849c <ferror@plt+0x35c1c>
  4385fc:	mov	x21, #0x0                   	// #0
  438600:	b	437ecc <ferror@plt+0x3564c>
  438604:	ldr	x4, [x26, #8]
  438608:	b	437d70 <ferror@plt+0x354f0>
  43860c:	ldr	x1, [sp, #104]
  438610:	ldrb	w0, [x1, #19]
  438614:	ldr	w25, [x1, #12]
  438618:	tbnz	w0, #6, 438874 <ferror@plt+0x35ff4>
  43861c:	ldr	x0, [sp, #104]
  438620:	mov	w1, #0x18                  	// #24
  438624:	add	x28, x0, #0x18
  438628:	mov	w0, w25
  43862c:	umaddl	x21, w25, w1, x28
  438630:	stp	x28, x21, [sp, #136]
  438634:	cmp	x28, x21
  438638:	b.cs	439818 <ferror@plt+0x36f98>  // b.hs, b.nlast
  43863c:	mov	w22, w25
  438640:	mov	x26, x27
  438644:	stp	x19, x23, [sp, #160]
  438648:	b	438658 <ferror@plt+0x35dd8>
  43864c:	add	x28, x28, #0x18
  438650:	cmp	x21, x28
  438654:	b.ls	438ed0 <ferror@plt+0x36650>  // b.plast
  438658:	ldrb	w0, [x28, #4]
  43865c:	cmp	w0, #0x50
  438660:	b.ne	43864c <ferror@plt+0x35dcc>  // b.any
  438664:	ldr	w4, [x28, #8]
  438668:	mov	w1, #0x30                  	// #48
  43866c:	ldrh	w0, [x28, #6]
  438670:	add	w25, w25, #0x2
  438674:	ldr	x2, [sp, #112]
  438678:	sub	w4, w4, #0x1
  43867c:	add	w24, w22, #0x2
  438680:	umaddl	x19, w4, w1, x2
  438684:	tbz	w0, #2, 438de8 <ferror@plt+0x36568>
  438688:	ldr	x0, [x19, #16]
  43868c:	mov	w22, w24
  438690:	cbnz	x0, 43864c <ferror@plt+0x35dcc>
  438694:	ldr	x1, [x26, #64]
  438698:	ldp	x0, x1, [x1, #16]
  43869c:	sub	x1, x1, x0
  4386a0:	cmp	x1, #0x2
  4386a4:	b.ls	4396a4 <ferror@plt+0x36e24>  // b.plast
  4386a8:	mov	x20, x0
  4386ac:	mov	w1, #0x22                  	// #34
  4386b0:	mov	x23, #0x0                   	// #0
  4386b4:	mov	w2, #0x0                   	// #0
  4386b8:	mov	w22, #0x0                   	// #0
  4386bc:	strb	w1, [x20], #1
  4386c0:	ldr	w1, [x19, #24]
  4386c4:	cbz	w1, 4398c4 <ferror@plt+0x37044>
  4386c8:	mov	w27, w2
  4386cc:	str	x21, [sp, #184]
  4386d0:	mov	x21, x26
  4386d4:	str	w24, [sp, #192]
  4386d8:	str	w25, [sp, #200]
  4386dc:	nop
  4386e0:	ldr	x0, [x19]
  4386e4:	ldr	x24, [x0, w22, uxtw #3]
  4386e8:	ldrb	w0, [x24, #4]
  4386ec:	cmp	w0, #0x53
  4386f0:	b.eq	4393cc <ferror@plt+0x36b4c>  // b.none
  4386f4:	cmp	w0, #0x3e
  4386f8:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  4386fc:	cmp	w0, #0x38
  438700:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  438704:	cmp	w0, #0x3f
  438708:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  43870c:	cmp	w0, #0x39
  438710:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  438714:	cmp	w0, #0x41
  438718:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  43871c:	cmp	w0, #0x3b
  438720:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  438724:	cmp	w0, #0x40
  438728:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  43872c:	cmp	w0, #0x3a
  438730:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  438734:	cmp	w0, #0x42
  438738:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  43873c:	cmp	w0, #0x3c
  438740:	b.eq	438750 <ferror@plt+0x35ed0>  // b.none
  438744:	bl	424be0 <ferror@plt+0x22360>
  438748:	tst	w0, #0xff
  43874c:	b.eq	438a58 <ferror@plt+0x361d8>  // b.none
  438750:	mov	x0, x24
  438754:	bl	42c010 <ferror@plt+0x29790>
  438758:	mov	w0, w0
  43875c:	ldr	w25, [sp, #176]
  438760:	lsl	x0, x0, #2
  438764:	ldr	x1, [x21, #64]
  438768:	add	x26, x0, #0x3
  43876c:	ldr	x0, [x1, #24]
  438770:	ldr	x1, [x1, #16]
  438774:	sub	x0, x0, x20
  438778:	cmp	x26, x0
  43877c:	b.hi	43920c <ferror@plt+0x3698c>  // b.pmore
  438780:	sub	x0, x20, #0x1
  438784:	cmp	x1, x0
  438788:	b.eq	4387a4 <ferror@plt+0x35f24>  // b.none
  43878c:	cmp	x23, #0x0
  438790:	csel	x23, x23, x24, ne  // ne = any
  438794:	ldrh	w0, [x23, #6]
  438798:	tbz	w0, #0, 4387a4 <ferror@plt+0x35f24>
  43879c:	mov	w0, #0x20                  	// #32
  4387a0:	strb	w0, [x20], #1
  4387a4:	cbnz	w25, 4392b4 <ferror@plt+0x36a34>
  4387a8:	mov	x2, x20
  4387ac:	mov	x1, x24
  4387b0:	mov	x0, x21
  4387b4:	mov	w3, #0x1                   	// #1
  4387b8:	bl	42c378 <ferror@plt+0x29af8>
  4387bc:	mov	x20, x0
  4387c0:	ldrb	w0, [x24, #4]
  4387c4:	ldr	w1, [x19, #24]
  4387c8:	cmp	w0, #0x3d
  4387cc:	b.eq	4391f0 <ferror@plt+0x36970>  // b.none
  4387d0:	mov	x23, #0x0                   	// #0
  4387d4:	mov	w27, #0x0                   	// #0
  4387d8:	add	w22, w22, #0x1
  4387dc:	cmp	w22, w1
  4387e0:	b.cc	4386e0 <ferror@plt+0x35e60>  // b.lo, b.ul, b.last
  4387e4:	mov	x26, x21
  4387e8:	ldr	w24, [sp, #192]
  4387ec:	ldr	w25, [sp, #200]
  4387f0:	add	x1, x20, #0x1
  4387f4:	ldr	x21, [sp, #184]
  4387f8:	tbz	w27, #0, 438818 <ferror@plt+0x35f98>
  4387fc:	mov	w1, #0x0                   	// #0
  438800:	mov	x0, x26
  438804:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  438808:	add	x2, x2, #0xca0
  43880c:	bl	422e10 <ferror@plt+0x20590>
  438810:	mov	x1, x20
  438814:	sub	x20, x20, #0x1
  438818:	mov	w2, #0x22                  	// #34
  43881c:	strb	w2, [x20], #2
  438820:	mov	w22, w24
  438824:	mov	x0, x26
  438828:	ldr	x2, [x26, #64]
  43882c:	ldr	x24, [x2, #16]
  438830:	str	x20, [x2, #16]
  438834:	sub	x20, x1, x24
  438838:	bl	42bd98 <ferror@plt+0x29518>
  43883c:	mov	w1, #0x3e                  	// #62
  438840:	strb	wzr, [x24, w20, uxtw]
  438844:	strb	w1, [x0, #4]
  438848:	strh	wzr, [x0, #6]
  43884c:	str	w20, [x0, #8]
  438850:	str	x24, [x0, #16]
  438854:	str	x0, [x19, #16]
  438858:	b	43864c <ferror@plt+0x35dcc>
  43885c:	ubfiz	x0, x25, #1, #32
  438860:	add	x0, x0, w25, uxtw
  438864:	add	x0, x1, x0, lsl #3
  438868:	ldrb	w0, [x0, #28]
  43886c:	cmp	w0, #0x26
  438870:	b.ne	439830 <ferror@plt+0x36fb0>  // b.any
  438874:	mov	w22, w25
  438878:	sub	w25, w25, #0x1
  43887c:	cbnz	w22, 43885c <ferror@plt+0x35fdc>
  438880:	ldr	x0, [sp, #104]
  438884:	mov	w25, #0x0                   	// #0
  438888:	mov	x20, #0x0                   	// #0
  43888c:	add	x0, x0, #0x18
  438890:	stp	x0, x0, [sp, #136]
  438894:	mov	x0, #0x0                   	// #0
  438898:	ldrb	w1, [x27, #1157]
  43889c:	str	w1, [sp, #272]
  4388a0:	cbnz	w1, 439128 <ferror@plt+0x368a8>
  4388a4:	mov	x1, x20
  4388a8:	mov	x0, x27
  4388ac:	bl	42d148 <ferror@plt+0x2a8c8>
  4388b0:	mov	x21, x0
  4388b4:	ldr	x0, [x0, #8]
  4388b8:	mov	x14, #0x0                   	// #0
  4388bc:	mov	x7, #0x0                   	// #0
  4388c0:	str	x0, [sp, #248]
  4388c4:	ldr	x1, [sp, #104]
  4388c8:	mov	x2, #0xffffffffffffffd0    	// #-48
  4388cc:	mov	w0, #0x30                  	// #48
  4388d0:	ldp	x4, x5, [sp, #136]
  4388d4:	ldrh	w3, [x1, #16]
  4388d8:	ldrb	w1, [x1, #19]
  4388dc:	and	w1, w1, #0x8
  4388e0:	umaddl	x0, w0, w3, x2
  4388e4:	mov	w2, w1
  4388e8:	ldr	x1, [sp, #112]
  4388ec:	cmp	x4, x5
  4388f0:	add	x0, x1, x0
  4388f4:	ldr	w0, [x0, #24]
  4388f8:	str	w0, [sp, #228]
  4388fc:	b.cs	438e4c <ferror@plt+0x365cc>  // b.hs, b.nlast
  438900:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  438904:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  438908:	add	x1, x1, #0xd20
  43890c:	add	x0, x0, #0xcd0
  438910:	mov	w6, #0x0                   	// #0
  438914:	mov	x20, x4
  438918:	mov	x26, x7
  43891c:	mov	w25, w2
  438920:	mov	x24, x14
  438924:	mov	w28, #0x0                   	// #0
  438928:	str	xzr, [sp, #160]
  43892c:	str	wzr, [sp, #168]
  438930:	str	wzr, [sp, #224]
  438934:	str	x23, [sp, #240]
  438938:	mov	w23, w6
  43893c:	stp	x19, x1, [sp, #256]
  438940:	str	x0, [sp, #296]
  438944:	b	4389b8 <ferror@plt+0x36138>
  438948:	cmp	w23, #0x1
  43894c:	b.eq	438dbc <ferror@plt+0x3653c>  // b.none
  438950:	b.le	438a88 <ferror@plt+0x36208>
  438954:	cmp	w23, #0x2
  438958:	b.eq	438eb8 <ferror@plt+0x36638>  // b.none
  43895c:	cmp	w0, #0x26
  438960:	b.eq	439114 <ferror@plt+0x36894>  // b.none
  438964:	cmp	w0, #0x14
  438968:	b.eq	439280 <ferror@plt+0x36a00>  // b.none
  43896c:	cmp	w0, #0x15
  438970:	b.ne	438a78 <ferror@plt+0x361f8>  // b.any
  438974:	sub	w23, w23, #0x1
  438978:	cmp	w23, #0x2
  43897c:	b.ne	4393c4 <ferror@plt+0x36b44>  // b.any
  438980:	ldr	w0, [sp, #168]
  438984:	cbz	w0, 43934c <ferror@plt+0x36acc>
  438988:	ldr	w2, [x20]
  43898c:	mov	x0, x27
  438990:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  438994:	mov	w1, #0x3                   	// #3
  438998:	add	x3, x3, #0xb50
  43899c:	mov	w23, #0x0                   	// #0
  4389a0:	bl	423488 <ferror@plt+0x20c08>
  4389a4:	str	wzr, [sp, #168]
  4389a8:	ldr	x0, [sp, #144]
  4389ac:	add	x20, x20, #0x18
  4389b0:	cmp	x20, x0
  4389b4:	b.cs	438e40 <ferror@plt+0x365c0>  // b.hs, b.nlast
  4389b8:	ldrb	w0, [x20, #4]
  4389bc:	cbz	w25, 438a88 <ferror@plt+0x36208>
  4389c0:	cmp	w0, #0x35
  4389c4:	b.ne	438948 <ferror@plt+0x360c8>  // b.any
  4389c8:	ldr	x2, [x20, #8]
  4389cc:	ldr	x1, [x27, #1280]
  4389d0:	cmp	x2, x1
  4389d4:	b.eq	438ef0 <ferror@plt+0x36670>  // b.none
  4389d8:	cmp	w23, #0x1
  4389dc:	b.eq	438dc8 <ferror@plt+0x36548>  // b.none
  4389e0:	b.gt	438954 <ferror@plt+0x360d4>
  4389e4:	ldrb	w8, [x27, #1157]
  4389e8:	ldr	x0, [sp, #136]
  4389ec:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4389f0:	ldp	x19, x2, [x21, #16]
  4389f4:	sub	x0, x20, x0
  4389f8:	movk	x1, #0xaaab
  4389fc:	cmp	w8, #0x2
  438a00:	asr	x0, x0, #3
  438a04:	mul	x0, x0, x1
  438a08:	csel	w1, w28, w0, cs  // cs = hs, nlast
  438a0c:	cmp	x19, x2
  438a10:	b.hi	437d2c <ferror@plt+0x354ac>  // b.pmore
  438a14:	cbz	x24, 438a44 <ferror@plt+0x361c4>
  438a18:	ldr	x22, [x21, #8]
  438a1c:	ldr	w3, [x20]
  438a20:	sub	x22, x19, x22
  438a24:	ubfx	x22, x22, #3, #32
  438a28:	add	x22, x24, x22, lsl #2
  438a2c:	cbz	x26, 438a40 <ferror@plt+0x361c0>
  438a30:	mov	w2, w3
  438a34:	mov	x0, x26
  438a38:	bl	431618 <ferror@plt+0x2ed98>
  438a3c:	mov	w3, w0
  438a40:	str	w3, [x22]
  438a44:	mov	x0, x19
  438a48:	add	w28, w28, #0x1
  438a4c:	str	x20, [x0], #8
  438a50:	str	x0, [x21, #16]
  438a54:	b	4389a8 <ferror@plt+0x36128>
  438a58:	ldrb	w0, [x24, #4]
  438a5c:	bl	424bf0 <ferror@plt+0x22370>
  438a60:	ands	w25, w0, #0xff
  438a64:	mov	x0, x24
  438a68:	b.ne	438754 <ferror@plt+0x35ed4>  // b.any
  438a6c:	bl	42c010 <ferror@plt+0x29790>
  438a70:	mov	w0, w0
  438a74:	b	438764 <ferror@plt+0x35ee4>
  438a78:	ldr	w1, [sp, #228]
  438a7c:	str	wzr, [sp, #168]
  438a80:	cbz	w1, 4389a8 <ferror@plt+0x36128>
  438a84:	nop
  438a88:	ldrb	w8, [x27, #1157]
  438a8c:	cmp	w0, #0x50
  438a90:	b.ne	4389e8 <ferror@plt+0x36168>  // b.any
  438a94:	ldr	w2, [x20, #8]
  438a98:	mov	w3, #0x30                  	// #48
  438a9c:	ldrh	w1, [x20, #6]
  438aa0:	ldr	x4, [sp, #112]
  438aa4:	sub	w0, w2, #0x1
  438aa8:	umaddl	x0, w0, w3, x4
  438aac:	tbz	w1, #2, 438e18 <ferror@plt+0x36598>
  438ab0:	mov	w19, #0x1                   	// #1
  438ab4:	add	x22, x0, #0x10
  438ab8:	mov	w18, w19
  438abc:	mov	x9, #0x0                   	// #0
  438ac0:	cbnz	w8, 4393f0 <ferror@plt+0x36b70>
  438ac4:	ldrb	w0, [x27, #16]
  438ac8:	cbz	w0, 438ad8 <ferror@plt+0x36258>
  438acc:	ldrb	w0, [x27, #17]
  438ad0:	mov	x11, #0x0                   	// #0
  438ad4:	cbz	w0, 438bd8 <ferror@plt+0x36358>
  438ad8:	ldr	x0, [sp, #136]
  438adc:	cmp	x20, x0
  438ae0:	b.eq	438ec8 <ferror@plt+0x36648>  // b.none
  438ae4:	ldurh	w0, [x20, #-18]
  438ae8:	tbnz	w0, #3, 438ec8 <ferror@plt+0x36648>
  438aec:	ldr	x2, [sp, #160]
  438af0:	cbz	x2, 438b0c <ferror@plt+0x3628c>
  438af4:	ldp	x1, x0, [x21, #8]
  438af8:	cmp	x1, x0
  438afc:	b.eq	438b0c <ferror@plt+0x3628c>  // b.none
  438b00:	sub	x0, x0, #0x8
  438b04:	cmp	x2, x0
  438b08:	b.eq	438ec8 <ferror@plt+0x36648>  // b.none
  438b0c:	mov	x0, x27
  438b10:	str	w8, [sp, #176]
  438b14:	str	w18, [sp, #184]
  438b18:	str	x9, [sp, #192]
  438b1c:	bl	42bd98 <ferror@plt+0x29518>
  438b20:	ldr	x1, [sp, #136]
  438b24:	mov	x5, x0
  438b28:	mov	w2, #0x53                  	// #83
  438b2c:	sub	x1, x20, x1
  438b30:	ldr	x4, [x21, #16]
  438b34:	strb	w2, [x0, #4]
  438b38:	strh	wzr, [x0, #6]
  438b3c:	asr	x0, x1, #3
  438b40:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  438b44:	movk	x1, #0xaaab
  438b48:	ldr	x2, [x21, #24]
  438b4c:	str	x20, [x5, #8]
  438b50:	mul	x0, x0, x1
  438b54:	ldrb	w1, [x27, #1157]
  438b58:	cmp	w1, #0x2
  438b5c:	csel	w1, w28, w0, cs  // cs = hs, nlast
  438b60:	cmp	x4, x2
  438b64:	b.hi	437d2c <ferror@plt+0x354ac>  // b.pmore
  438b68:	ldr	w8, [sp, #176]
  438b6c:	ldr	w18, [sp, #184]
  438b70:	ldr	x9, [sp, #192]
  438b74:	cbz	x24, 438bcc <ferror@plt+0x3634c>
  438b78:	ldr	x10, [x21, #8]
  438b7c:	ldr	w3, [x5]
  438b80:	sub	x10, x4, x10
  438b84:	ubfx	x10, x10, #3, #32
  438b88:	add	x10, x24, x10, lsl #2
  438b8c:	cbz	x26, 438bc8 <ferror@plt+0x36348>
  438b90:	mov	w2, w3
  438b94:	mov	x0, x26
  438b98:	str	w8, [sp, #176]
  438b9c:	stp	x5, x4, [sp, #184]
  438ba0:	str	x10, [sp, #200]
  438ba4:	str	w18, [sp, #212]
  438ba8:	str	x9, [sp, #216]
  438bac:	bl	431618 <ferror@plt+0x2ed98>
  438bb0:	ldp	x5, x4, [sp, #184]
  438bb4:	mov	w3, w0
  438bb8:	ldr	w8, [sp, #176]
  438bbc:	ldr	w18, [sp, #212]
  438bc0:	ldr	x10, [sp, #200]
  438bc4:	ldr	x9, [sp, #216]
  438bc8:	str	w3, [x10]
  438bcc:	str	x5, [x4], #8
  438bd0:	mov	x11, #0x0                   	// #0
  438bd4:	str	x4, [x21, #16]
  438bd8:	cbnz	w18, 438fd8 <ferror@plt+0x36758>
  438bdc:	ldrb	w0, [x27, #1154]
  438be0:	cbz	w0, 438d64 <ferror@plt+0x364e4>
  438be4:	ldrb	w0, [x27, #1152]
  438be8:	cbnz	w0, 438d64 <ferror@plt+0x364e4>
  438bec:	ldr	x0, [sp, #104]
  438bf0:	ldrb	w0, [x0, #19]
  438bf4:	tbnz	w0, #4, 438d64 <ferror@plt+0x364e4>
  438bf8:	ldr	x0, [x27]
  438bfc:	cbz	x0, 438c08 <ferror@plt+0x36388>
  438c00:	ldrb	w0, [x0, #106]
  438c04:	cbnz	w0, 438d64 <ferror@plt+0x364e4>
  438c08:	ldrb	w0, [x27, #1120]
  438c0c:	cbnz	w0, 439848 <ferror@plt+0x36fc8>
  438c10:	ldrsb	w0, [x27, #1198]
  438c14:	cmp	w0, #0x0
  438c18:	cbz	w0, 438c48 <ferror@plt+0x363c8>
  438c1c:	ldr	x0, [sp, #240]
  438c20:	cset	w1, gt
  438c24:	ldr	w4, [x20, #8]
  438c28:	add	w1, w1, #0x15
  438c2c:	ldr	x2, [sp, #264]
  438c30:	str	x11, [sp, #176]
  438c34:	ldr	x3, [x0]
  438c38:	mov	x0, x27
  438c3c:	bl	423050 <ferror@plt+0x207d0>
  438c40:	ldr	x11, [sp, #176]
  438c44:	nop
  438c48:	ldrb	w0, [x27, #16]
  438c4c:	cbnz	w0, 438ee4 <ferror@plt+0x36664>
  438c50:	ldrh	w0, [x20, #6]
  438c54:	mov	w12, w28
  438c58:	tbnz	w0, #3, 438cbc <ferror@plt+0x3643c>
  438c5c:	ldr	x0, [x21, #16]
  438c60:	mov	w18, #0x0                   	// #0
  438c64:	ldr	x2, [sp, #160]
  438c68:	cbz	x2, 438c88 <ferror@plt+0x36408>
  438c6c:	ldr	x1, [x21, #8]
  438c70:	cmp	x0, x1
  438c74:	b.eq	438c88 <ferror@plt+0x36408>  // b.none
  438c78:	sub	x0, x0, #0x8
  438c7c:	add	w12, w28, w18
  438c80:	cmp	x2, x0
  438c84:	b.eq	438cbc <ferror@plt+0x3643c>  // b.none
  438c88:	ldp	x0, x1, [x21, #16]
  438c8c:	add	x2, x27, #0x298
  438c90:	cmp	x0, x1
  438c94:	b.hi	437d2c <ferror@plt+0x354ac>  // b.pmore
  438c98:	cbz	x24, 438cb0 <ferror@plt+0x36430>
  438c9c:	ldr	x1, [x21, #8]
  438ca0:	ldr	w3, [x27, #664]
  438ca4:	sub	x1, x0, x1
  438ca8:	ubfx	x1, x1, #3, #32
  438cac:	str	w3, [x24, x1, lsl #2]
  438cb0:	str	x2, [x0], #8
  438cb4:	add	w12, w28, w18
  438cb8:	str	x0, [x21, #16]
  438cbc:	cbnz	x11, 438d10 <ferror@plt+0x36490>
  438cc0:	mov	w28, w12
  438cc4:	b	4389a8 <ferror@plt+0x36128>
  438cc8:	mov	x24, x5
  438ccc:	mov	x5, x20
  438cd0:	ldr	x20, [sp, #232]
  438cd4:	mov	x1, x28
  438cd8:	mov	w28, w21
  438cdc:	mov	x21, x1
  438ce0:	mov	x26, x25
  438ce4:	ldr	w23, [sp, #288]
  438ce8:	ldrh	w1, [x20, #6]
  438cec:	mov	x27, x13
  438cf0:	ldr	w25, [sp, #276]
  438cf4:	ldr	w18, [sp, #292]
  438cf8:	ldr	x11, [sp, #280]
  438cfc:	tbz	w1, #3, 439484 <ferror@plt+0x36c04>
  438d00:	ldr	x1, [x21, #8]
  438d04:	mov	x11, x5
  438d08:	cmp	x1, x0
  438d0c:	b.eq	438cc0 <ferror@plt+0x36440>  // b.none
  438d10:	mov	x0, x27
  438d14:	str	x11, [sp, #176]
  438d18:	str	w12, [sp, #184]
  438d1c:	bl	42bd98 <ferror@plt+0x29518>
  438d20:	ldr	x11, [sp, #176]
  438d24:	ldr	w12, [sp, #184]
  438d28:	ldr	x1, [x11]
  438d2c:	ldrb	w1, [x1, #4]
  438d30:	strb	w1, [x0, #4]
  438d34:	ldr	x2, [x11]
  438d38:	ldrh	w1, [x20, #6]
  438d3c:	ldp	x2, x3, [x2, #8]
  438d40:	stp	x2, x3, [x0, #8]
  438d44:	tbz	w1, #3, 439100 <ferror@plt+0x36880>
  438d48:	ldr	x1, [x11]
  438d4c:	ldrh	w1, [x1, #6]
  438d50:	orr	w1, w1, #0x8
  438d54:	strh	w1, [x0, #6]
  438d58:	mov	w28, w12
  438d5c:	str	x0, [x11]
  438d60:	b	4389a8 <ferror@plt+0x36128>
  438d64:	ldrsb	w0, [x27, #1198]
  438d68:	cmp	w0, #0x0
  438d6c:	b.le	438c48 <ferror@plt+0x363c8>
  438d70:	ldrb	w0, [x27, #1120]
  438d74:	cbnz	w0, 438c48 <ferror@plt+0x363c8>
  438d78:	ldr	x0, [sp, #104]
  438d7c:	ldrb	w0, [x0, #19]
  438d80:	tbnz	w0, #4, 438c48 <ferror@plt+0x363c8>
  438d84:	ldr	x0, [x27]
  438d88:	cbz	x0, 438d94 <ferror@plt+0x36514>
  438d8c:	ldrb	w0, [x0, #106]
  438d90:	cbnz	w0, 438c48 <ferror@plt+0x363c8>
  438d94:	ldr	x0, [sp, #240]
  438d98:	mov	w1, #0x16                  	// #22
  438d9c:	ldr	w4, [x20, #8]
  438da0:	ldr	x2, [sp, #264]
  438da4:	str	x11, [sp, #176]
  438da8:	ldr	x3, [x0]
  438dac:	mov	x0, x27
  438db0:	bl	422f30 <ferror@plt+0x206b0>
  438db4:	ldr	x11, [sp, #176]
  438db8:	b	438c48 <ferror@plt+0x363c8>
  438dbc:	cmp	w0, #0x14
  438dc0:	mov	w23, #0x2                   	// #2
  438dc4:	b.eq	4389a8 <ferror@plt+0x36128>  // b.none
  438dc8:	ldr	w2, [sp, #224]
  438dcc:	mov	x0, x27
  438dd0:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  438dd4:	mov	w1, #0x3                   	// #3
  438dd8:	add	x3, x3, #0xb18
  438ddc:	mov	w23, #0x1                   	// #1
  438de0:	bl	423488 <ferror@plt+0x20c08>
  438de4:	b	4389a8 <ferror@plt+0x36128>
  438de8:	tbnz	w0, #3, 438ea8 <ferror@plt+0x36628>
  438dec:	ldr	x0, [sp, #136]
  438df0:	cmp	x0, x28
  438df4:	b.eq	438e00 <ferror@plt+0x36580>  // b.none
  438df8:	ldurh	w0, [x28, #-18]
  438dfc:	tbnz	w0, #3, 438ea8 <ferror@plt+0x36628>
  438e00:	ldr	x0, [x19, #8]
  438e04:	cbz	x0, 4396c0 <ferror@plt+0x36e40>
  438e08:	ldr	w0, [x19, #28]
  438e0c:	add	w22, w22, #0x1
  438e10:	add	w22, w22, w0
  438e14:	b	43864c <ferror@plt+0x35dcc>
  438e18:	tbz	w1, #3, 439178 <ferror@plt+0x368f8>
  438e1c:	ldr	w18, [x0, #24]
  438e20:	mov	x9, #0x0                   	// #0
  438e24:	mov	w19, #0x0                   	// #0
  438e28:	ldr	x22, [x0]
  438e2c:	cbz	w8, 438ac4 <ferror@plt+0x36244>
  438e30:	cbz	x22, 4398a8 <ferror@plt+0x37028>
  438e34:	mov	w19, #0x0                   	// #0
  438e38:	ldr	x9, [x0, #32]
  438e3c:	b	438ac4 <ferror@plt+0x36244>
  438e40:	ldr	x23, [sp, #240]
  438e44:	mov	x14, x24
  438e48:	ldr	x19, [sp, #256]
  438e4c:	ldp	x0, x20, [x21, #8]
  438e50:	sub	x20, x20, x0
  438e54:	ldr	w0, [sp, #272]
  438e58:	lsr	x20, x20, #3
  438e5c:	cbz	w0, 439230 <ferror@plt+0x369b0>
  438e60:	ldr	x4, [sp, #248]
  438e64:	mov	w5, w20
  438e68:	mov	x3, x14
  438e6c:	mov	x2, x21
  438e70:	mov	x1, x23
  438e74:	mov	x0, x27
  438e78:	bl	435ab0 <ferror@plt+0x33230>
  438e7c:	ldp	x3, x0, [x21, #8]
  438e80:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  438e84:	ldr	w1, [x2, #1936]
  438e88:	sub	x0, x0, x3
  438e8c:	ldr	x3, [sp, #152]
  438e90:	lsr	x0, x0, #3
  438e94:	add	w0, w1, w0
  438e98:	str	w0, [x2, #1936]
  438e9c:	ldr	x3, [x3, #8]
  438ea0:	str	x3, [sp, #112]
  438ea4:	b	438510 <ferror@plt+0x35c90>
  438ea8:	ldr	w0, [x19, #24]
  438eac:	add	w22, w22, #0x1
  438eb0:	add	w22, w22, w0
  438eb4:	b	43864c <ferror@plt+0x35dcc>
  438eb8:	cmp	w0, #0x26
  438ebc:	b.eq	439590 <ferror@plt+0x36d10>  // b.none
  438ec0:	mov	w23, #0x3                   	// #3
  438ec4:	b	438964 <ferror@plt+0x360e4>
  438ec8:	mov	x11, #0x0                   	// #0
  438ecc:	b	438bd8 <ferror@plt+0x36358>
  438ed0:	mov	x27, x26
  438ed4:	mov	w0, w22
  438ed8:	ubfiz	x20, x22, #3, #32
  438edc:	ldp	x19, x23, [sp, #160]
  438ee0:	b	438898 <ferror@plt+0x36018>
  438ee4:	mov	w12, w28
  438ee8:	cbz	x11, 438cc0 <ferror@plt+0x36440>
  438eec:	b	438d10 <ferror@plt+0x36490>
  438ef0:	cbz	w23, 438f10 <ferror@plt+0x36690>
  438ef4:	ldr	w2, [x20]
  438ef8:	mov	x0, x27
  438efc:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  438f00:	mov	w1, #0x3                   	// #3
  438f04:	add	x3, x3, #0xae8
  438f08:	bl	423488 <ferror@plt+0x20c08>
  438f0c:	b	4389a8 <ferror@plt+0x36128>
  438f10:	ldr	x0, [sp, #136]
  438f14:	cmp	x20, x0
  438f18:	ldr	w0, [x20]
  438f1c:	str	w0, [sp, #224]
  438f20:	b.eq	438f2c <ferror@plt+0x366ac>  // b.none
  438f24:	ldurh	w0, [x20, #-18]
  438f28:	tbz	w0, #3, 438f4c <ferror@plt+0x366cc>
  438f2c:	ldr	x23, [x21, #16]
  438f30:	ldr	x0, [x21, #8]
  438f34:	cmp	x0, x23
  438f38:	b.eq	439584 <ferror@plt+0x36d04>  // b.none
  438f3c:	sub	x0, x23, #0x8
  438f40:	mov	w23, #0x1                   	// #1
  438f44:	str	x0, [sp, #160]
  438f48:	b	4389a8 <ferror@plt+0x36128>
  438f4c:	mov	x0, x27
  438f50:	bl	42bd98 <ferror@plt+0x29518>
  438f54:	ldr	x1, [sp, #136]
  438f58:	mov	x19, x0
  438f5c:	mov	w0, #0x53                  	// #83
  438f60:	sub	x1, x20, x1
  438f64:	ldr	x23, [x21, #16]
  438f68:	asr	x1, x1, #3
  438f6c:	strb	w0, [x19, #4]
  438f70:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  438f74:	movk	x0, #0xaaab
  438f78:	strh	wzr, [x19, #6]
  438f7c:	mul	x1, x1, x0
  438f80:	ldr	x0, [x21, #24]
  438f84:	str	x20, [x19, #8]
  438f88:	ldrb	w2, [x27, #1157]
  438f8c:	cmp	w2, #0x2
  438f90:	csel	w1, w28, w1, cs  // cs = hs, nlast
  438f94:	cmp	x23, x0
  438f98:	b.hi	437d2c <ferror@plt+0x354ac>  // b.pmore
  438f9c:	cbz	x24, 438fcc <ferror@plt+0x3674c>
  438fa0:	ldr	x22, [x21, #8]
  438fa4:	ldr	w3, [x19]
  438fa8:	sub	x22, x23, x22
  438fac:	ubfx	x22, x22, #3, #32
  438fb0:	add	x22, x24, x22, lsl #2
  438fb4:	cbz	x26, 438fc8 <ferror@plt+0x36748>
  438fb8:	mov	w2, w3
  438fbc:	mov	x0, x26
  438fc0:	bl	431618 <ferror@plt+0x2ed98>
  438fc4:	mov	w3, w0
  438fc8:	str	w3, [x22]
  438fcc:	str	x19, [x23], #8
  438fd0:	str	x23, [x21, #16]
  438fd4:	b	438f30 <ferror@plt+0x366b0>
  438fd8:	ldr	x0, [sp, #136]
  438fdc:	and	w10, w19, #0xfffffffd
  438fe0:	ldr	x5, [x21, #16]
  438fe4:	sub	x15, x20, x0
  438fe8:	mov	w0, #0xaaab                	// #43691
  438fec:	str	x20, [sp, #232]
  438ff0:	asr	x15, x15, #3
  438ff4:	movk	w0, #0xaaaa, lsl #16
  438ff8:	mov	x20, x5
  438ffc:	mov	x5, x24
  439000:	ldr	w24, [sp, #272]
  439004:	add	w12, w28, w18
  439008:	mul	w15, w15, w0
  43900c:	mov	x0, x21
  439010:	mov	x13, x27
  439014:	mov	w21, w28
  439018:	mov	x27, x22
  43901c:	eor	w10, w10, #0x1
  439020:	mov	w22, w28
  439024:	mov	x28, x0
  439028:	str	w25, [sp, #276]
  43902c:	mov	x25, x26
  439030:	mov	w26, w15
  439034:	str	w23, [sp, #288]
  439038:	mov	w23, w8
  43903c:	str	x11, [sp, #280]
  439040:	str	w18, [sp, #292]
  439044:	nop
  439048:	ldrb	w0, [x13, #1157]
  43904c:	cmp	w24, #0x1
  439050:	csel	w1, w22, w21, gt
  439054:	cmp	w0, #0x1
  439058:	csel	w1, w1, w26, hi  // hi = pmore
  43905c:	cbz	x27, 4393e8 <ferror@plt+0x36b68>
  439060:	ldr	x4, [x27]
  439064:	cbz	w23, 4390f4 <ferror@plt+0x36874>
  439068:	ldr	w2, [x9]
  43906c:	ldr	x0, [x28, #24]
  439070:	cmp	x0, x20
  439074:	b.cc	437d2c <ferror@plt+0x354ac>  // b.lo, b.ul, b.last
  439078:	cbz	x5, 4390c0 <ferror@plt+0x36840>
  43907c:	ldr	x19, [x28, #8]
  439080:	sub	x19, x20, x19
  439084:	ubfx	x19, x19, #3, #32
  439088:	add	x19, x5, x19, lsl #2
  43908c:	cbz	x25, 4390bc <ferror@plt+0x3683c>
  439090:	ldr	x0, [sp, #232]
  439094:	stp	x4, x5, [sp, #176]
  439098:	stp	x9, x13, [sp, #192]
  43909c:	ldr	w3, [x0]
  4390a0:	mov	x0, x25
  4390a4:	stp	w12, w10, [sp, #212]
  4390a8:	bl	431618 <ferror@plt+0x2ed98>
  4390ac:	mov	w2, w0
  4390b0:	ldp	x4, x5, [sp, #176]
  4390b4:	ldp	x9, x13, [sp, #192]
  4390b8:	ldp	w12, w10, [sp, #212]
  4390bc:	str	w2, [x19]
  4390c0:	mov	x0, x20
  4390c4:	str	x4, [x0], #8
  4390c8:	str	x0, [x28, #16]
  4390cc:	cbz	w10, 4390e0 <ferror@plt+0x36860>
  4390d0:	cmp	w23, #0x0
  4390d4:	add	x1, x9, #0x4
  4390d8:	add	x27, x27, #0x8
  4390dc:	csel	x9, x1, x9, ne  // ne = any
  4390e0:	add	w22, w22, #0x1
  4390e4:	cmp	w12, w22
  4390e8:	b.eq	438cc8 <ferror@plt+0x36448>  // b.none
  4390ec:	mov	x20, x0
  4390f0:	b	439048 <ferror@plt+0x367c8>
  4390f4:	ldr	x0, [x27]
  4390f8:	ldr	w2, [x0]
  4390fc:	b	43906c <ferror@plt+0x367ec>
  439100:	ldr	x1, [x11]
  439104:	ldrh	w1, [x1, #6]
  439108:	and	w1, w1, #0xfffffff7
  43910c:	and	w1, w1, #0xffff
  439110:	b	438d54 <ferror@plt+0x364d4>
  439114:	mov	w0, #0x1                   	// #1
  439118:	str	w0, [sp, #168]
  43911c:	ldr	w0, [sp, #228]
  439120:	cbz	w0, 4389a8 <ferror@plt+0x36128>
  439124:	b	4389e4 <ferror@plt+0x36164>
  439128:	lsl	x0, x0, #4
  43912c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439130:	mov	x14, x0
  439134:	mov	x1, x20
  439138:	mov	x0, x27
  43913c:	str	x14, [sp, #160]
  439140:	bl	42d148 <ferror@plt+0x2a8c8>
  439144:	mov	x21, x0
  439148:	ldr	w1, [sp, #272]
  43914c:	ldr	w2, [sp, #124]
  439150:	ldr	x4, [x0, #8]
  439154:	cmp	w1, #0x1
  439158:	ldr	x0, [x27, #40]
  43915c:	csel	w3, w22, w25, ne  // ne = any
  439160:	mov	x1, x23
  439164:	str	x4, [sp, #248]
  439168:	bl	431560 <ferror@plt+0x2ece0>
  43916c:	mov	x7, x0
  439170:	ldr	x14, [sp, #160]
  439174:	b	4388c4 <ferror@plt+0x36044>
  439178:	ldr	x1, [sp, #136]
  43917c:	mov	x9, #0x0                   	// #0
  439180:	cmp	x20, x1
  439184:	b.eq	4393f8 <ferror@plt+0x36b78>  // b.none
  439188:	ldurh	w1, [x20, #-18]
  43918c:	tbz	w1, #3, 4393f8 <ferror@plt+0x36b78>
  439190:	ldr	w18, [x0, #24]
  439194:	ldr	x22, [x0]
  439198:	cbnz	w8, 43980c <ferror@plt+0x36f8c>
  43919c:	ldp	x1, x0, [x21, #8]
  4391a0:	sub	x3, x0, x1
  4391a4:	tst	x3, #0x7fffffff8
  4391a8:	b.eq	439550 <ferror@plt+0x36cd0>  // b.none
  4391ac:	cmp	x1, x0
  4391b0:	b.eq	4399c0 <ferror@plt+0x37140>  // b.none
  4391b4:	ldur	x3, [x0, #-8]
  4391b8:	sub	x11, x0, #0x8
  4391bc:	ldrb	w3, [x3, #4]
  4391c0:	cmp	w3, #0x13
  4391c4:	b.eq	439870 <ferror@plt+0x36ff0>  // b.none
  4391c8:	ldr	x0, [sp, #160]
  4391cc:	cmp	w18, #0x0
  4391d0:	ccmp	x11, x0, #0x4, eq  // eq = none
  4391d4:	b.eq	439550 <ferror@plt+0x36cd0>  // b.none
  4391d8:	ldrb	w0, [x27, #16]
  4391dc:	cbz	w0, 438bdc <ferror@plt+0x3635c>
  4391e0:	ldrb	w0, [x27, #17]
  4391e4:	cbz	w0, 438bdc <ferror@plt+0x3635c>
  4391e8:	mov	w19, #0x0                   	// #0
  4391ec:	b	438bd8 <ferror@plt+0x36358>
  4391f0:	ldr	x0, [x24, #16]
  4391f4:	add	w27, w27, #0x1
  4391f8:	mov	x23, #0x0                   	// #0
  4391fc:	ldrb	w0, [x0]
  439200:	cmp	w0, #0x5c
  439204:	b.ne	4387d0 <ferror@plt+0x35f50>  // b.any
  439208:	b	4387d8 <ferror@plt+0x35f58>
  43920c:	sub	x20, x20, x1
  439210:	mov	x0, x21
  439214:	add	x1, x21, #0x40
  439218:	mov	x2, x26
  43921c:	bl	42d2b0 <ferror@plt+0x2aa30>
  439220:	ldr	x0, [x21, #64]
  439224:	ldr	x1, [x0, #16]
  439228:	add	x20, x1, x20
  43922c:	b	438780 <ferror@plt+0x35f00>
  439230:	ldr	x0, [x27, #136]
  439234:	ldr	x0, [x0]
  439238:	cbz	x0, 43966c <ferror@plt+0x36dec>
  43923c:	ldr	x1, [sp, #248]
  439240:	str	x0, [x27, #136]
  439244:	stp	x21, x23, [x0, #32]
  439248:	add	x20, x1, w20, uxtw #3
  43924c:	stp	x1, x20, [x0, #16]
  439250:	str	wzr, [x0, #48]
  439254:	b	438e7c <ferror@plt+0x365fc>
  439258:	mov	x0, #0x38                  	// #56
  43925c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439260:	ldr	x1, [x27, #136]
  439264:	stp	xzr, xzr, [x0]
  439268:	str	x1, [x0, #8]
  43926c:	stp	xzr, xzr, [x0, #16]
  439270:	stp	xzr, xzr, [x0, #32]
  439274:	str	xzr, [x0, #48]
  439278:	str	x0, [x1]
  43927c:	b	43809c <ferror@plt+0x3581c>
  439280:	add	w23, w23, #0x1
  439284:	str	wzr, [sp, #168]
  439288:	b	43911c <ferror@plt+0x3689c>
  43928c:	mov	x0, #0x38                  	// #56
  439290:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439294:	ldr	x1, [x27, #136]
  439298:	stp	xzr, xzr, [x0]
  43929c:	str	x1, [x0, #8]
  4392a0:	stp	xzr, xzr, [x0, #16]
  4392a4:	stp	xzr, xzr, [x0, #32]
  4392a8:	str	xzr, [x0, #48]
  4392ac:	str	x0, [x1]
  4392b0:	b	437ed4 <ferror@plt+0x35654>
  4392b4:	mov	x1, x26
  4392b8:	mov	x0, x21
  4392bc:	bl	42d148 <ferror@plt+0x2a8c8>
  4392c0:	mov	x23, x0
  4392c4:	mov	x1, x24
  4392c8:	mov	x0, x21
  4392cc:	mov	w3, #0x1                   	// #1
  4392d0:	ldr	x26, [x23, #16]
  4392d4:	mov	x2, x26
  4392d8:	bl	42c378 <ferror@plt+0x29af8>
  4392dc:	sub	x0, x0, x26
  4392e0:	sub	w1, w0, #0x1
  4392e4:	cbz	w0, 43933c <ferror@plt+0x36abc>
  4392e8:	mov	w2, w1
  4392ec:	add	x2, x2, #0x1
  4392f0:	add	x2, x26, x2
  4392f4:	b	439308 <ferror@plt+0x36a88>
  4392f8:	mov	x20, x1
  4392fc:	cmp	x26, x2
  439300:	strb	w0, [x20], #1
  439304:	b.eq	43933c <ferror@plt+0x36abc>  // b.none
  439308:	ldrb	w0, [x26], #1
  43930c:	cmp	w0, #0x22
  439310:	b.eq	43932c <ferror@plt+0x36aac>  // b.none
  439314:	cmp	w0, #0x5c
  439318:	b.eq	43932c <ferror@plt+0x36aac>  // b.none
  43931c:	cmp	w0, #0xa
  439320:	mov	x1, x20
  439324:	b.ne	4392f8 <ferror@plt+0x36a78>  // b.any
  439328:	mov	w0, #0x6e                  	// #110
  43932c:	mov	x1, x20
  439330:	mov	w3, #0x5c                  	// #92
  439334:	strb	w3, [x1], #1
  439338:	b	4392f8 <ferror@plt+0x36a78>
  43933c:	mov	x1, x23
  439340:	mov	x0, x21
  439344:	bl	42d120 <ferror@plt+0x2a8a0>
  439348:	b	4387c0 <ferror@plt+0x35f40>
  43934c:	ldp	x2, x1, [x21, #8]
  439350:	ldrh	w4, [x20, #6]
  439354:	and	w4, w4, #0x8
  439358:	cmp	x2, x1
  43935c:	b.eq	4398b4 <ferror@plt+0x37034>  // b.none
  439360:	ldr	x5, [sp, #160]
  439364:	sub	x0, x1, #0x8
  439368:	mov	x19, x0
  43936c:	cmp	x0, x5
  439370:	b.ne	439388 <ferror@plt+0x36b08>  // b.any
  439374:	b	4395d4 <ferror@plt+0x36d54>
  439378:	sub	x0, x1, #0x8
  43937c:	cmp	x0, x5
  439380:	mov	x19, x0
  439384:	b.eq	4395d4 <ferror@plt+0x36d54>  // b.none
  439388:	ldr	x3, [x0]
  43938c:	ldrb	w3, [x3, #4]
  439390:	cmp	w3, #0x53
  439394:	b.ne	439510 <ferror@plt+0x36c90>  // b.any
  439398:	cmp	x2, x1
  43939c:	b.cs	4393a8 <ferror@plt+0x36b28>  // b.hs, b.nlast
  4393a0:	mov	x1, x0
  4393a4:	str	x0, [x21, #16]
  4393a8:	cmp	x2, x1
  4393ac:	b.ne	439378 <ferror@plt+0x36af8>  // b.any
  4393b0:	cbz	w4, 439514 <ferror@plt+0x36c94>
  4393b4:	mov	w23, #0x0                   	// #0
  4393b8:	str	xzr, [sp, #160]
  4393bc:	str	wzr, [sp, #168]
  4393c0:	b	4389a8 <ferror@plt+0x36128>
  4393c4:	str	wzr, [sp, #168]
  4393c8:	b	43911c <ferror@plt+0x3689c>
  4393cc:	cbz	x23, 439578 <ferror@plt+0x36cf8>
  4393d0:	ldrh	w0, [x23, #6]
  4393d4:	tbnz	w0, #0, 4387d8 <ferror@plt+0x35f58>
  4393d8:	ldr	x0, [x24, #8]
  4393dc:	cbnz	x0, 4387d8 <ferror@plt+0x35f58>
  4393e0:	mov	x23, x0
  4393e4:	b	4387d8 <ferror@plt+0x35f58>
  4393e8:	mov	x4, #0x0                   	// #0
  4393ec:	b	439064 <ferror@plt+0x367e4>
  4393f0:	ldr	x9, [x0, #16]
  4393f4:	b	438ac4 <ferror@plt+0x36244>
  4393f8:	ldr	w18, [x0, #28]
  4393fc:	ldr	x22, [x0, #8]
  439400:	cbnz	w8, 4395ac <ferror@plt+0x36d2c>
  439404:	ldr	x2, [sp, #160]
  439408:	cbz	x2, 439570 <ferror@plt+0x36cf0>
  43940c:	ldp	x1, x0, [x21, #8]
  439410:	cmp	x1, x0
  439414:	b.eq	439570 <ferror@plt+0x36cf0>  // b.none
  439418:	sub	x0, x0, #0x8
  43941c:	mov	w19, #0x2                   	// #2
  439420:	cmp	x2, x0
  439424:	b.ne	438ac4 <ferror@plt+0x36244>  // b.any
  439428:	cbz	w18, 438ac4 <ferror@plt+0x36244>
  43942c:	cbnz	w8, 43945c <ferror@plt+0x36bdc>
  439430:	cbz	x22, 4399b4 <ferror@plt+0x37134>
  439434:	ldr	x0, [x22]
  439438:	ldrb	w0, [x0, #4]
  43943c:	cmp	w0, #0x53
  439440:	b.ne	439570 <ferror@plt+0x36cf0>  // b.any
  439444:	add	x22, x22, #0x8
  439448:	subs	w18, w18, #0x1
  43944c:	b.ne	439430 <ferror@plt+0x36bb0>  // b.any
  439450:	mov	w19, #0x2                   	// #2
  439454:	mov	w18, #0x0                   	// #0
  439458:	b	438ac4 <ferror@plt+0x36244>
  43945c:	cbz	x22, 4399b4 <ferror@plt+0x37134>
  439460:	ldr	x0, [x22]
  439464:	ldrb	w0, [x0, #4]
  439468:	cmp	w0, #0x53
  43946c:	b.ne	439570 <ferror@plt+0x36cf0>  // b.any
  439470:	add	x22, x22, #0x8
  439474:	add	x9, x9, #0x4
  439478:	subs	w18, w18, #0x1
  43947c:	b.ne	43945c <ferror@plt+0x36bdc>  // b.any
  439480:	b	439450 <ferror@plt+0x36bd0>
  439484:	ldrb	w1, [x13, #16]
  439488:	cbz	w1, 438c64 <ferror@plt+0x363e4>
  43948c:	cbz	x11, 438cc0 <ferror@plt+0x36440>
  439490:	b	438d10 <ferror@plt+0x36490>
  439494:	ldr	x0, [sp, #104]
  439498:	add	x22, x0, #0x18
  43949c:	cbz	w1, 439694 <ferror@plt+0x36e14>
  4394a0:	ubfiz	x0, x20, #4, #32
  4394a4:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4394a8:	mov	x5, x0
  4394ac:	mov	w21, w20
  4394b0:	mov	x0, x27
  4394b4:	str	x5, [sp, #96]
  4394b8:	lsl	x1, x21, #3
  4394bc:	mov	w25, w20
  4394c0:	bl	42d148 <ferror@plt+0x2a8c8>
  4394c4:	mov	x26, x0
  4394c8:	ldr	w2, [sp, #124]
  4394cc:	mov	w3, w20
  4394d0:	ldr	x0, [x27, #40]
  4394d4:	mov	x1, x23
  4394d8:	bl	431560 <ferror@plt+0x2ece0>
  4394dc:	mov	x28, x0
  4394e0:	ldr	x5, [sp, #96]
  4394e4:	b	437cb4 <ferror@plt+0x35434>
  4394e8:	mov	x0, #0x38                  	// #56
  4394ec:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4394f0:	ldr	x1, [x27, #136]
  4394f4:	stp	xzr, xzr, [x0]
  4394f8:	str	x1, [x0, #8]
  4394fc:	stp	xzr, xzr, [x0, #16]
  439500:	stp	xzr, xzr, [x0, #32]
  439504:	str	xzr, [x0, #48]
  439508:	str	x0, [x1]
  43950c:	b	43806c <ferror@plt+0x357ec>
  439510:	cbnz	w4, 4395f0 <ferror@plt+0x36d70>
  439514:	ldr	x0, [x21, #24]
  439518:	add	x3, x27, #0x298
  43951c:	cmp	x0, x1
  439520:	b.cc	437d2c <ferror@plt+0x354ac>  // b.lo, b.ul, b.last
  439524:	cbz	x24, 439538 <ferror@plt+0x36cb8>
  439528:	sub	x0, x1, x2
  43952c:	ldr	w2, [x27, #664]
  439530:	ubfx	x0, x0, #3, #32
  439534:	str	w2, [x24, x0, lsl #2]
  439538:	str	x3, [x1], #8
  43953c:	mov	w23, #0x0                   	// #0
  439540:	str	xzr, [sp, #160]
  439544:	str	x1, [x21, #16]
  439548:	str	wzr, [sp, #168]
  43954c:	b	4389a8 <ferror@plt+0x36128>
  439550:	mov	x11, #0x0                   	// #0
  439554:	ldrb	w0, [x27, #16]
  439558:	mov	w19, #0x0                   	// #0
  43955c:	cbz	w0, 438bd8 <ferror@plt+0x36358>
  439560:	ldrb	w0, [x27, #17]
  439564:	cbz	w0, 438bd8 <ferror@plt+0x36358>
  439568:	mov	w19, #0x0                   	// #0
  43956c:	b	438bd8 <ferror@plt+0x36358>
  439570:	mov	w19, #0x2                   	// #2
  439574:	b	438ac4 <ferror@plt+0x36244>
  439578:	ldr	x0, [x24, #8]
  43957c:	mov	x23, x0
  439580:	b	4387d8 <ferror@plt+0x35f58>
  439584:	mov	w23, #0x1                   	// #1
  439588:	str	xzr, [sp, #160]
  43958c:	b	4389a8 <ferror@plt+0x36128>
  439590:	ldr	w2, [x20]
  439594:	mov	x0, x27
  439598:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43959c:	mov	w1, #0x3                   	// #3
  4395a0:	add	x3, x3, #0xb50
  4395a4:	bl	423488 <ferror@plt+0x20c08>
  4395a8:	b	4389a8 <ferror@plt+0x36128>
  4395ac:	cbz	x22, 4398cc <ferror@plt+0x3704c>
  4395b0:	ldr	x9, [x0, #40]
  4395b4:	b	439404 <ferror@plt+0x36b84>
  4395b8:	mov	x20, #0x0                   	// #0
  4395bc:	b	438064 <ferror@plt+0x357e4>
  4395c0:	ldr	x0, [sp, #104]
  4395c4:	mov	w25, #0x0                   	// #0
  4395c8:	mov	x20, #0x0                   	// #0
  4395cc:	add	x22, x0, #0x18
  4395d0:	b	438090 <ferror@plt+0x35810>
  4395d4:	cbz	w4, 439514 <ferror@plt+0x36c94>
  4395d8:	ldr	x0, [sp, #160]
  4395dc:	ldr	x0, [x0]
  4395e0:	ldrb	w0, [x0, #4]
  4395e4:	cmp	w0, #0x53
  4395e8:	b.eq	4393b4 <ferror@plt+0x36b34>  // b.none
  4395ec:	ldr	x19, [sp, #160]
  4395f0:	mov	x0, x27
  4395f4:	bl	42bd98 <ferror@plt+0x29518>
  4395f8:	mov	x2, x0
  4395fc:	ldr	x1, [x19]
  439600:	ldrb	w0, [x1, #4]
  439604:	strb	w0, [x2, #4]
  439608:	ldr	x0, [x19]
  43960c:	ldrh	w3, [x20, #6]
  439610:	ldp	x0, x1, [x0, #8]
  439614:	stp	x0, x1, [x2, #8]
  439618:	ldr	x0, [x19]
  43961c:	tbz	w3, #3, 439838 <ferror@plt+0x36fb8>
  439620:	ldrh	w0, [x0, #6]
  439624:	orr	w0, w0, #0x8
  439628:	strh	w0, [x2, #6]
  43962c:	mov	w23, #0x0                   	// #0
  439630:	str	x2, [x19]
  439634:	str	xzr, [sp, #160]
  439638:	str	wzr, [sp, #168]
  43963c:	b	4389a8 <ferror@plt+0x36128>
  439640:	ldr	x1, [sp, #160]
  439644:	ldr	w1, [x1, #24]
  439648:	cbnz	w1, 4384dc <ferror@plt+0x35c5c>
  43964c:	ldrb	w1, [x27, #1153]
  439650:	cbnz	w1, 4384dc <ferror@plt+0x35c5c>
  439654:	mov	w1, #0x30                  	// #48
  439658:	mov	x2, #0xffffffffffffffd0    	// #-48
  43965c:	umaddl	x0, w1, w0, x2
  439660:	ldr	x1, [sp, #160]
  439664:	str	xzr, [x1, x0]
  439668:	b	4384dc <ferror@plt+0x35c5c>
  43966c:	mov	x0, #0x38                  	// #56
  439670:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439674:	ldr	x1, [x27, #136]
  439678:	stp	xzr, xzr, [x0]
  43967c:	str	x1, [x0, #8]
  439680:	stp	xzr, xzr, [x0, #16]
  439684:	stp	xzr, xzr, [x0, #32]
  439688:	str	xzr, [x0, #48]
  43968c:	str	x0, [x1]
  439690:	b	43923c <ferror@plt+0x369bc>
  439694:	mov	w0, #0x18                  	// #24
  439698:	mov	w25, w20
  43969c:	umull	x20, w20, w0
  4396a0:	b	438090 <ferror@plt+0x35810>
  4396a4:	mov	x0, x26
  4396a8:	add	x1, x26, #0x40
  4396ac:	mov	x2, #0x3                   	// #3
  4396b0:	bl	42d2b0 <ferror@plt+0x2aa30>
  4396b4:	ldr	x0, [x26, #64]
  4396b8:	ldr	x0, [x0, #16]
  4396bc:	b	4386a8 <ferror@plt+0x35e28>
  4396c0:	ldr	w0, [x19, #24]
  4396c4:	cbz	w0, 438e08 <ferror@plt+0x36588>
  4396c8:	ldrb	w1, [x26, #1138]
  4396cc:	mov	x0, #0x800                 	// #2048
  4396d0:	strb	wzr, [x26, #1138]
  4396d4:	cmp	w1, #0x0
  4396d8:	ldrb	w1, [x26, #1157]
  4396dc:	mov	w23, w1
  4396e0:	cset	w1, ne  // ne = any
  4396e4:	str	w1, [sp, #184]
  4396e8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  4396ec:	str	x0, [x19, #8]
  4396f0:	ldrb	w0, [x26, #1157]
  4396f4:	cbnz	w0, 439928 <ferror@plt+0x370a8>
  4396f8:	ldr	x0, [x26, #136]
  4396fc:	ldr	w20, [x19, #24]
  439700:	ldr	x24, [x19]
  439704:	add	w20, w20, #0x1
  439708:	ldr	x27, [x0]
  43970c:	cbz	w23, 43990c <ferror@plt+0x3708c>
  439710:	ldr	w2, [x0, #48]
  439714:	ldr	x1, [x0, #40]
  439718:	cmp	w2, #0x2
  43971c:	ldr	x0, [x19, #32]
  439720:	mov	x23, x0
  439724:	b.eq	43996c <ferror@plt+0x370ec>  // b.none
  439728:	cbz	x27, 439938 <ferror@plt+0x370b8>
  43972c:	str	x27, [x26, #136]
  439730:	mov	w2, #0x2                   	// #2
  439734:	str	xzr, [x27, #32]
  439738:	mov	x0, #0x18                  	// #24
  43973c:	str	w2, [x27, #48]
  439740:	add	x20, x24, w20, uxtw #3
  439744:	str	x1, [sp, #192]
  439748:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43974c:	stp	x23, x23, [x0, #8]
  439750:	ldr	x1, [sp, #192]
  439754:	str	x1, [x0]
  439758:	stp	x24, x20, [x27, #16]
  43975c:	str	x0, [x27, #40]
  439760:	ldr	w0, [x19, #28]
  439764:	mov	x20, #0x100                 	// #256
  439768:	b	43977c <ferror@plt+0x36efc>
  43976c:	cbz	x2, 4398d4 <ferror@plt+0x37054>
  439770:	str	x1, [x2, w0, uxtw #3]
  439774:	add	w0, w0, #0x1
  439778:	str	w0, [x19, #28]
  43977c:	add	w23, w0, #0x1
  439780:	cmp	x23, x20
  439784:	b.ls	4397b8 <ferror@plt+0x36f38>  // b.plast
  439788:	ldr	x0, [x19, #8]
  43978c:	lsl	x1, x23, #4
  439790:	lsl	x20, x23, #1
  439794:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  439798:	str	x0, [x19, #8]
  43979c:	ldrb	w0, [x26, #1157]
  4397a0:	cbz	w0, 4397b8 <ferror@plt+0x36f38>
  4397a4:	ldr	x0, [x19, #40]
  4397a8:	lsl	x1, x23, #3
  4397ac:	cbz	x0, 4398fc <ferror@plt+0x3707c>
  4397b0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  4397b4:	str	x0, [x19, #40]
  4397b8:	add	x1, sp, #0x13c
  4397bc:	mov	x0, x26
  4397c0:	bl	4399d0 <ferror@plt+0x37150>
  4397c4:	mov	x1, x0
  4397c8:	ldrb	w0, [x0, #4]
  4397cc:	cmp	w0, #0x16
  4397d0:	b.eq	4398e0 <ferror@plt+0x37060>  // b.none
  4397d4:	ldrb	w3, [x26, #1157]
  4397d8:	ldr	w0, [x19, #28]
  4397dc:	ldr	x2, [x19, #8]
  4397e0:	cbz	w3, 43976c <ferror@plt+0x36eec>
  4397e4:	cbz	x2, 4398d4 <ferror@plt+0x37054>
  4397e8:	mov	w4, w0
  4397ec:	ldr	w5, [sp, #316]
  4397f0:	ldr	x3, [x19, #40]
  4397f4:	str	x1, [x2, x4, lsl #3]
  4397f8:	add	x1, x3, w0, uxtw #2
  4397fc:	cbz	x1, 439774 <ferror@plt+0x36ef4>
  439800:	str	w5, [x3, x4, lsl #2]
  439804:	ldr	w0, [x19, #28]
  439808:	b	439774 <ferror@plt+0x36ef4>
  43980c:	cbz	x22, 4398f4 <ferror@plt+0x37074>
  439810:	ldr	x9, [x0, #32]
  439814:	b	43919c <ferror@plt+0x3691c>
  439818:	lsl	x20, x0, #3
  43981c:	mov	w22, w25
  439820:	b	438898 <ferror@plt+0x36018>
  439824:	ldrb	w0, [x27, #16]
  439828:	cbz	w0, 438590 <ferror@plt+0x35d10>
  43982c:	b	438588 <ferror@plt+0x35d08>
  439830:	mov	w25, w22
  439834:	b	43861c <ferror@plt+0x35d9c>
  439838:	ldrh	w0, [x0, #6]
  43983c:	and	w0, w0, #0xfffffff7
  439840:	and	w0, w0, #0xffff
  439844:	b	439628 <ferror@plt+0x36da8>
  439848:	ldr	x0, [sp, #240]
  43984c:	mov	w1, #0x15                  	// #21
  439850:	ldr	w4, [x20, #8]
  439854:	ldr	x2, [sp, #296]
  439858:	str	x11, [sp, #176]
  43985c:	ldr	x3, [x0]
  439860:	mov	x0, x27
  439864:	bl	423050 <ferror@plt+0x207d0>
  439868:	ldr	x11, [sp, #176]
  43986c:	b	438c48 <ferror@plt+0x363c8>
  439870:	ldr	x4, [sp, #104]
  439874:	ldrb	w3, [x4, #19]
  439878:	tbz	w3, #3, 4391c8 <ferror@plt+0x36948>
  43987c:	ldrh	w3, [x4, #16]
  439880:	cmp	w2, w3
  439884:	b.ne	4391c8 <ferror@plt+0x36948>  // b.any
  439888:	cbz	x22, 439894 <ferror@plt+0x37014>
  43988c:	ldr	x2, [x22]
  439890:	cbnz	x2, 439554 <ferror@plt+0x36cd4>
  439894:	cmp	x1, x0
  439898:	b.cs	439550 <ferror@plt+0x36cd0>  // b.hs, b.nlast
  43989c:	str	x11, [x21, #16]
  4398a0:	mov	x11, #0x0                   	// #0
  4398a4:	b	439554 <ferror@plt+0x36cd4>
  4398a8:	mov	x9, x22
  4398ac:	mov	w19, #0x0                   	// #0
  4398b0:	b	438ac4 <ferror@plt+0x36244>
  4398b4:	str	xzr, [sp, #160]
  4398b8:	mov	w23, #0x0                   	// #0
  4398bc:	cbnz	w4, 4389a8 <ferror@plt+0x36128>
  4398c0:	b	439514 <ferror@plt+0x36c94>
  4398c4:	add	x1, x0, #0x2
  4398c8:	b	438818 <ferror@plt+0x35f98>
  4398cc:	mov	x9, x22
  4398d0:	b	439404 <ferror@plt+0x36b84>
  4398d4:	mov	x0, #0x0                   	// #0
  4398d8:	str	x1, [x0]
  4398dc:	brk	#0x3e8
  4398e0:	mov	x0, x26
  4398e4:	bl	436640 <ferror@plt+0x33dc0>
  4398e8:	ldrb	w0, [sp, #184]
  4398ec:	strb	w0, [x26, #1138]
  4398f0:	b	438e08 <ferror@plt+0x36588>
  4398f4:	mov	x9, x22
  4398f8:	b	43919c <ferror@plt+0x3691c>
  4398fc:	mov	x0, x1
  439900:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439904:	str	x0, [x19, #40]
  439908:	b	4397b8 <ferror@plt+0x36f38>
  43990c:	cbz	x27, 439988 <ferror@plt+0x37108>
  439910:	str	x27, [x26, #136]
  439914:	add	x20, x24, w20, uxtw #3
  439918:	stp	x24, x20, [x27, #16]
  43991c:	stp	xzr, xzr, [x27, #32]
  439920:	str	wzr, [x27, #48]
  439924:	b	439760 <ferror@plt+0x36ee0>
  439928:	mov	x0, #0x400                 	// #1024
  43992c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439930:	str	x0, [x19, #40]
  439934:	b	4396f8 <ferror@plt+0x36e78>
  439938:	mov	x0, #0x38                  	// #56
  43993c:	str	x1, [sp, #192]
  439940:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439944:	mov	x27, x0
  439948:	stp	xzr, xzr, [x0]
  43994c:	stp	xzr, xzr, [x0, #16]
  439950:	stp	xzr, xzr, [x0, #32]
  439954:	ldr	x0, [x26, #136]
  439958:	str	x0, [x27, #8]
  43995c:	str	xzr, [x27, #48]
  439960:	ldr	x1, [sp, #192]
  439964:	str	x27, [x0]
  439968:	b	43972c <ferror@plt+0x36eac>
  43996c:	ldr	x1, [x1]
  439970:	b	439728 <ferror@plt+0x36ea8>
  439974:	ldr	x0, [x23, #24]
  439978:	ldp	x25, x26, [sp, #64]
  43997c:	ldrb	w0, [x0, #19]
  439980:	tbnz	w0, #4, 437fe8 <ferror@plt+0x35768>
  439984:	b	437fd0 <ferror@plt+0x35750>
  439988:	mov	x0, #0x38                  	// #56
  43998c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439990:	mov	x27, x0
  439994:	stp	xzr, xzr, [x0]
  439998:	stp	xzr, xzr, [x0, #16]
  43999c:	stp	xzr, xzr, [x0, #32]
  4399a0:	ldr	x0, [x26, #136]
  4399a4:	str	x0, [x27, #8]
  4399a8:	str	xzr, [x27, #48]
  4399ac:	str	x27, [x0]
  4399b0:	b	439910 <ferror@plt+0x37090>
  4399b4:	mov	x0, #0x0                   	// #0
  4399b8:	ldrb	w0, [x0, #4]
  4399bc:	brk	#0x3e8
  4399c0:	mov	x0, #0x0                   	// #0
  4399c4:	ldr	x0, [x0]
  4399c8:	brk	#0x3e8
  4399cc:	nop
  4399d0:	stp	x29, x30, [sp, #-128]!
  4399d4:	mov	x29, sp
  4399d8:	stp	x25, x26, [sp, #64]
  4399dc:	ldrb	w26, [x0, #192]
  4399e0:	stp	x19, x20, [sp, #16]
  4399e4:	mov	x19, x0
  4399e8:	stp	x23, x24, [sp, #48]
  4399ec:	adrp	x24, 49e000 <_obstack_memory_used@@Base+0x416d8>
  4399f0:	mov	x23, x1
  4399f4:	add	x24, x24, #0x790
  4399f8:	stp	x21, x22, [sp, #32]
  4399fc:	mov	w22, #0x0                   	// #0
  439a00:	stp	x27, x28, [sp, #80]
  439a04:	mov	w27, #0x1                   	// #1
  439a08:	ldr	x20, [x19, #136]
  439a0c:	ldr	x0, [x20, #8]
  439a10:	cbz	x0, 439ac8 <ferror@plt+0x37248>
  439a14:	ldr	w2, [x20, #48]
  439a18:	cmp	w2, #0x1
  439a1c:	b.eq	439cfc <ferror@plt+0x3747c>  // b.none
  439a20:	tst	w2, #0xfffffffd
  439a24:	b.ne	439fd4 <ferror@plt+0x37754>  // b.any
  439a28:	ldp	x0, x1, [x20, #16]
  439a2c:	cmp	x0, x1
  439a30:	b.ne	439c4c <ferror@plt+0x373cc>  // b.any
  439a34:	ldr	x0, [x20, #40]
  439a38:	cbz	x0, 439a48 <ferror@plt+0x371c8>
  439a3c:	ldr	w0, [x24, #4]
  439a40:	add	w0, w0, #0x1
  439a44:	str	w0, [x24, #4]
  439a48:	mov	x0, x19
  439a4c:	bl	436640 <ferror@plt+0x33dc0>
  439a50:	ldrb	w0, [x19, #16]
  439a54:	cbnz	w0, 439a08 <ferror@plt+0x37188>
  439a58:	add	x20, x19, #0x298
  439a5c:	cbz	x23, 439aa4 <ferror@plt+0x37224>
  439a60:	cbnz	w22, 439a68 <ferror@plt+0x371e8>
  439a64:	ldr	w22, [x20]
  439a68:	str	w22, [x23]
  439a6c:	ldrb	w0, [x19, #1157]
  439a70:	cbnz	w0, 439a98 <ferror@plt+0x37218>
  439a74:	ldr	x0, [x19, #136]
  439a78:	cbz	x0, 439a98 <ferror@plt+0x37218>
  439a7c:	ldr	w1, [x0, #48]
  439a80:	ldr	x0, [x0, #40]
  439a84:	cmp	w1, #0x2
  439a88:	b.eq	439d64 <ferror@plt+0x374e4>  // b.none
  439a8c:	cbz	x0, 439a98 <ferror@plt+0x37218>
  439a90:	ldr	w22, [x19, #176]
  439a94:	str	w22, [x23]
  439a98:	ldrb	w0, [x19, #1160]
  439a9c:	cbnz	w0, 439c14 <ferror@plt+0x37394>
  439aa0:	str	w22, [x23]
  439aa4:	strb	w26, [x19, #192]
  439aa8:	mov	x0, x20
  439aac:	ldp	x19, x20, [sp, #16]
  439ab0:	ldp	x21, x22, [sp, #32]
  439ab4:	ldp	x23, x24, [sp, #48]
  439ab8:	ldp	x25, x26, [sp, #64]
  439abc:	ldp	x27, x28, [sp, #80]
  439ac0:	ldp	x29, x30, [sp], #128
  439ac4:	ret
  439ac8:	mov	x0, x19
  439acc:	bl	4307f0 <ferror@plt+0x2df70>
  439ad0:	ldr	w22, [x0]
  439ad4:	mov	x21, x0
  439ad8:	ldrb	w1, [x19, #16]
  439adc:	ldrb	w0, [x21, #4]
  439ae0:	cbz	w1, 439aec <ferror@plt+0x3726c>
  439ae4:	cmp	w0, #0x4f
  439ae8:	b.eq	439a08 <ferror@plt+0x37188>  // b.none
  439aec:	cmp	w0, #0x35
  439af0:	b.ne	439df0 <ferror@plt+0x37570>  // b.any
  439af4:	ldr	x1, [x21, #8]
  439af8:	ldrb	w0, [x1, #18]
  439afc:	ands	w0, w0, #0x3
  439b00:	b.eq	439df0 <ferror@plt+0x37570>  // b.none
  439b04:	ldrh	w2, [x21, #6]
  439b08:	tbnz	w2, #10, 439df0 <ferror@plt+0x37570>
  439b0c:	ldrh	w2, [x1, #18]
  439b10:	ubfx	x3, x2, #2, #8
  439b14:	tbnz	w2, #6, 439f0c <ferror@plt+0x3768c>
  439b18:	ldrb	w2, [x19, #192]
  439b1c:	cbz	w2, 439be8 <ferror@plt+0x37368>
  439b20:	ldrb	w2, [x19, #24]
  439b24:	cbnz	w2, 439df0 <ferror@plt+0x37570>
  439b28:	tbz	w3, #6, 439c24 <ferror@plt+0x373a4>
  439b2c:	ldr	x0, [x19, #992]
  439b30:	cbz	x0, 439df0 <ferror@plt+0x37570>
  439b34:	mov	w1, #0x0                   	// #0
  439b38:	mov	x0, x19
  439b3c:	bl	430978 <ferror@plt+0x2e0f8>
  439b40:	ldrb	w1, [x0, #4]
  439b44:	mov	w25, #0x1                   	// #1
  439b48:	cmp	w1, #0x53
  439b4c:	b.eq	439b58 <ferror@plt+0x372d8>  // b.none
  439b50:	ldrb	w25, [x0, #6]
  439b54:	and	w25, w25, #0x1
  439b58:	ldr	x2, [x19, #992]
  439b5c:	mov	x1, x21
  439b60:	mov	x0, x19
  439b64:	blr	x2
  439b68:	mov	x1, x0
  439b6c:	cbz	x0, 439f50 <ferror@plt+0x376d0>
  439b70:	strb	wzr, [x19, #19]
  439b74:	strb	w27, [x19, #192]
  439b78:	ldrb	w0, [x0, #18]
  439b7c:	strb	wzr, [x19, #440]
  439b80:	and	w0, w0, #0x3
  439b84:	cmp	w0, #0x2
  439b88:	b.eq	439c38 <ferror@plt+0x373b8>  // b.none
  439b8c:	ldr	x2, [x19, #184]
  439b90:	strb	wzr, [x19, #192]
  439b94:	ldrb	w0, [x2, #18]
  439b98:	and	w0, w0, #0x3
  439b9c:	cmp	w0, #0x2
  439ba0:	b.eq	439d30 <ferror@plt+0x374b0>  // b.none
  439ba4:	ldr	w3, [x19, #176]
  439ba8:	mov	w2, w22
  439bac:	mov	x0, x19
  439bb0:	bl	4360b8 <ferror@plt+0x33838>
  439bb4:	cbz	w0, 439df0 <ferror@plt+0x37570>
  439bb8:	ldrb	w1, [x19, #16]
  439bbc:	cmp	w1, #0x0
  439bc0:	ccmp	w0, #0x2, #0x4, eq  // eq = none
  439bc4:	b.eq	439a08 <ferror@plt+0x37188>  // b.none
  439bc8:	mov	x0, x19
  439bcc:	bl	42bd98 <ferror@plt+0x29518>
  439bd0:	mov	w1, #0x53                  	// #83
  439bd4:	mov	x20, x0
  439bd8:	strb	w1, [x0, #4]
  439bdc:	strh	wzr, [x0, #6]
  439be0:	str	x21, [x0, #8]
  439be4:	b	439a5c <ferror@plt+0x371dc>
  439be8:	ldr	x2, [x19, #136]
  439bec:	cbz	x2, 439c04 <ferror@plt+0x37384>
  439bf0:	ldr	w4, [x2, #48]
  439bf4:	ldr	x2, [x2, #40]
  439bf8:	cmp	w4, #0x2
  439bfc:	b.eq	439d58 <ferror@plt+0x374d8>  // b.none
  439c00:	cbnz	x2, 439b20 <ferror@plt+0x372a0>
  439c04:	ldr	w2, [x21]
  439c08:	str	w2, [x19, #176]
  439c0c:	str	x1, [x19, #184]
  439c10:	b	439b20 <ferror@plt+0x372a0>
  439c14:	ldrb	w0, [x19, #16]
  439c18:	cbz	w0, 439aa0 <ferror@plt+0x37220>
  439c1c:	ldr	w22, [x19, #48]
  439c20:	b	439aa0 <ferror@plt+0x37220>
  439c24:	strb	wzr, [x19, #19]
  439c28:	cmp	w0, #0x2
  439c2c:	strb	w27, [x19, #192]
  439c30:	strb	wzr, [x19, #440]
  439c34:	b.ne	439b8c <ferror@plt+0x3730c>  // b.any
  439c38:	mov	w3, w22
  439c3c:	mov	x2, x21
  439c40:	mov	x0, x19
  439c44:	bl	437bd0 <ferror@plt+0x35350>
  439c48:	b	439bb4 <ferror@plt+0x37334>
  439c4c:	ldr	x21, [x0], #8
  439c50:	cbz	w2, 439d4c <ferror@plt+0x374cc>
  439c54:	ldr	x1, [x20, #40]
  439c58:	ldr	x3, [x1, #8]
  439c5c:	cbz	x3, 439e8c <ferror@plt+0x3760c>
  439c60:	ldr	x3, [x1, #16]
  439c64:	ldr	w22, [x3], #4
  439c68:	str	x3, [x1, #16]
  439c6c:	ldrh	w3, [x21, #6]
  439c70:	str	x0, [x20, #16]
  439c74:	tbz	w3, #3, 439ad8 <ferror@plt+0x37258>
  439c78:	ldr	x0, [x1]
  439c7c:	str	x21, [sp, #120]
  439c80:	cbz	x0, 439f38 <ferror@plt+0x376b8>
  439c84:	ldr	x0, [x1, #16]
  439c88:	ldur	w25, [x0, #-4]
  439c8c:	mov	x28, #0x0                   	// #0
  439c90:	b	439ce4 <ferror@plt+0x37464>
  439c94:	cbnz	w2, 439d6c <ferror@plt+0x374ec>
  439c98:	ldr	x0, [x20, #16]
  439c9c:	add	x1, x0, #0x8
  439ca0:	str	x1, [x20, #16]
  439ca4:	ldr	x28, [x0]
  439ca8:	ldrb	w0, [x28, #4]
  439cac:	cmp	w0, #0x53
  439cb0:	b.ne	439cbc <ferror@plt+0x3743c>  // b.any
  439cb4:	ldrh	w0, [x28, #6]
  439cb8:	tbnz	w0, #3, 439fbc <ferror@plt+0x3773c>
  439cbc:	mov	x3, x28
  439cc0:	add	x2, sp, #0x78
  439cc4:	mov	w1, w25
  439cc8:	mov	x0, x19
  439ccc:	bl	4358b0 <ferror@plt+0x33030>
  439cd0:	tst	w0, #0xff
  439cd4:	b.eq	439d98 <ferror@plt+0x37518>  // b.none
  439cd8:	ldrh	w0, [x28, #6]
  439cdc:	ldr	w2, [x20, #48]
  439ce0:	tbz	w0, #3, 439d9c <ferror@plt+0x3751c>
  439ce4:	cmp	w2, #0x1
  439ce8:	b.ne	439c94 <ferror@plt+0x37414>  // b.any
  439cec:	ldr	x28, [x20, #16]
  439cf0:	add	x0, x28, #0x18
  439cf4:	str	x0, [x20, #16]
  439cf8:	b	439ca8 <ferror@plt+0x37428>
  439cfc:	ldp	x21, x0, [x20, #16]
  439d00:	cmp	x21, x0
  439d04:	b.eq	439a34 <ferror@plt+0x371b4>  // b.none
  439d08:	mov	x0, x21
  439d0c:	ldr	w22, [x0], #24
  439d10:	str	x0, [x20, #16]
  439d14:	ldrh	w0, [x21, #6]
  439d18:	tbz	w0, #3, 439ad8 <ferror@plt+0x37258>
  439d1c:	ldr	x0, [x20, #40]
  439d20:	str	x21, [sp, #120]
  439d24:	cbz	x0, 439f38 <ferror@plt+0x376b8>
  439d28:	ldr	w25, [x19, #176]
  439d2c:	b	439c8c <ferror@plt+0x3740c>
  439d30:	ldr	x0, [x2, #24]
  439d34:	ldrb	w0, [x0, #19]
  439d38:	tbz	w0, #2, 439ba4 <ferror@plt+0x37324>
  439d3c:	ldrb	w0, [x19, #1157]
  439d40:	mov	w3, w22
  439d44:	cbnz	w0, 439ba8 <ferror@plt+0x37328>
  439d48:	b	439ba4 <ferror@plt+0x37324>
  439d4c:	ldr	w22, [x21]
  439d50:	str	x0, [x20, #16]
  439d54:	b	439d14 <ferror@plt+0x37494>
  439d58:	ldr	x2, [x2]
  439d5c:	cbnz	x2, 439b20 <ferror@plt+0x372a0>
  439d60:	b	439c04 <ferror@plt+0x37384>
  439d64:	ldr	x0, [x0]
  439d68:	b	439a8c <ferror@plt+0x3720c>
  439d6c:	cmp	w2, #0x2
  439d70:	b.ne	439ca8 <ferror@plt+0x37428>  // b.any
  439d74:	ldr	x1, [x20, #40]
  439d78:	ldr	x2, [x20, #16]
  439d7c:	ldr	x0, [x1, #16]
  439d80:	add	x3, x2, #0x8
  439d84:	str	x3, [x20, #16]
  439d88:	add	x0, x0, #0x4
  439d8c:	ldr	x28, [x2]
  439d90:	str	x0, [x1, #16]
  439d94:	b	439ca8 <ferror@plt+0x37428>
  439d98:	ldr	w2, [x20, #48]
  439d9c:	cmp	w2, #0x2
  439da0:	b.eq	439df8 <ferror@plt+0x37578>  // b.none
  439da4:	ldr	x0, [x19, #136]
  439da8:	ldr	x20, [sp, #120]
  439dac:	cbz	x0, 439fac <ferror@plt+0x3772c>
  439db0:	ldr	w1, [x0, #48]
  439db4:	ldr	x25, [x0, #40]
  439db8:	cmp	w1, #0x2
  439dbc:	b.ne	439dc4 <ferror@plt+0x37544>  // b.any
  439dc0:	ldr	x25, [x25]
  439dc4:	ldr	x0, [x0]
  439dc8:	cbz	x0, 439ee4 <ferror@plt+0x37664>
  439dcc:	str	x0, [x19, #136]
  439dd0:	add	x2, x20, #0x18
  439dd4:	mov	w1, #0x1                   	// #1
  439dd8:	stp	x20, x2, [x0, #16]
  439ddc:	stp	xzr, x25, [x0, #32]
  439de0:	str	w1, [x0, #48]
  439de4:	ldrb	w0, [x19, #16]
  439de8:	cbnz	w0, 439a08 <ferror@plt+0x37188>
  439dec:	b	439bc8 <ferror@plt+0x37348>
  439df0:	mov	x20, x21
  439df4:	b	439a5c <ferror@plt+0x371dc>
  439df8:	mov	x0, #0x10                  	// #16
  439dfc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439e00:	mov	x1, #0x8                   	// #8
  439e04:	mov	x28, x0
  439e08:	mov	x0, x19
  439e0c:	bl	42d148 <ferror@plt+0x2a8c8>
  439e10:	mov	x1, x0
  439e14:	ldp	x3, x0, [x0, #8]
  439e18:	ldr	x4, [x1, #24]
  439e1c:	ldr	x5, [sp, #120]
  439e20:	sub	x2, x0, x3
  439e24:	cmp	x0, x4
  439e28:	lsr	x2, x2, #3
  439e2c:	b.hi	439fec <ferror@plt+0x3776c>  // b.pmore
  439e30:	ldr	x4, [x20, #40]
  439e34:	str	w25, [x28, w2, uxtw #2]
  439e38:	ldr	x2, [x19, #136]
  439e3c:	ldr	x25, [x4]
  439e40:	str	x5, [x0], #8
  439e44:	str	x0, [x1, #16]
  439e48:	cbz	x25, 439e94 <ferror@plt+0x37614>
  439e4c:	ldr	x20, [x2]
  439e50:	cbz	x20, 439eb0 <ferror@plt+0x37630>
  439e54:	str	x20, [x19, #136]
  439e58:	mov	w2, #0x2                   	// #2
  439e5c:	str	x1, [x20, #32]
  439e60:	mov	x0, #0x18                  	// #24
  439e64:	str	w2, [x20, #48]
  439e68:	str	x3, [sp, #96]
  439e6c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439e70:	stp	x25, x28, [x0]
  439e74:	ldr	x3, [sp, #96]
  439e78:	str	x28, [x0, #16]
  439e7c:	str	x0, [x20, #40]
  439e80:	add	x1, x3, #0x8
  439e84:	stp	x3, x1, [x20, #16]
  439e88:	b	439de4 <ferror@plt+0x37564>
  439e8c:	ldr	w22, [x21]
  439e90:	b	439c6c <ferror@plt+0x373ec>
  439e94:	cbz	x2, 439fb4 <ferror@plt+0x37734>
  439e98:	ldr	w0, [x2, #48]
  439e9c:	ldr	x25, [x2, #40]
  439ea0:	cmp	w0, #0x2
  439ea4:	b.ne	439e4c <ferror@plt+0x375cc>  // b.any
  439ea8:	ldr	x25, [x25]
  439eac:	b	439e4c <ferror@plt+0x375cc>
  439eb0:	mov	x0, #0x38                  	// #56
  439eb4:	stp	x1, x3, [sp, #96]
  439eb8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439ebc:	mov	x20, x0
  439ec0:	stp	xzr, xzr, [x0]
  439ec4:	stp	xzr, xzr, [x0, #16]
  439ec8:	stp	xzr, xzr, [x0, #32]
  439ecc:	ldr	x0, [x19, #136]
  439ed0:	str	x0, [x20, #8]
  439ed4:	str	xzr, [x20, #48]
  439ed8:	ldp	x1, x3, [sp, #96]
  439edc:	str	x20, [x0]
  439ee0:	b	439e54 <ferror@plt+0x375d4>
  439ee4:	mov	x0, #0x38                  	// #56
  439ee8:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  439eec:	ldr	x1, [x19, #136]
  439ef0:	stp	xzr, xzr, [x0]
  439ef4:	str	x1, [x0, #8]
  439ef8:	stp	xzr, xzr, [x0, #16]
  439efc:	stp	xzr, xzr, [x0, #32]
  439f00:	str	xzr, [x0, #48]
  439f04:	str	x0, [x1]
  439f08:	b	439dcc <ferror@plt+0x3754c>
  439f0c:	mov	x0, x19
  439f10:	bl	42bd98 <ferror@plt+0x29518>
  439f14:	mov	x20, x0
  439f18:	ldrh	w1, [x21, #6]
  439f1c:	ldrb	w0, [x21, #4]
  439f20:	ldp	x2, x3, [x21, #8]
  439f24:	orr	w1, w1, #0x400
  439f28:	strb	w0, [x20, #4]
  439f2c:	strh	w1, [x20, #6]
  439f30:	stp	x2, x3, [x20, #8]
  439f34:	b	439a5c <ferror@plt+0x371dc>
  439f38:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  439f3c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  439f40:	add	x2, x2, #0xd88
  439f44:	add	x0, x0, #0x558
  439f48:	mov	w1, #0x352                 	// #850
  439f4c:	bl	4028b0 <ferror@plt+0x30>
  439f50:	mov	x20, x21
  439f54:	cbz	w25, 439a5c <ferror@plt+0x371dc>
  439f58:	mov	x0, x19
  439f5c:	mov	w1, #0x0                   	// #0
  439f60:	bl	430978 <ferror@plt+0x2e0f8>
  439f64:	mov	x21, x0
  439f68:	ldrb	w0, [x0, #4]
  439f6c:	cmp	w0, #0x53
  439f70:	b.eq	439a5c <ferror@plt+0x371dc>  // b.none
  439f74:	ldrh	w0, [x21, #6]
  439f78:	tbnz	w0, #0, 439a5c <ferror@plt+0x371dc>
  439f7c:	mov	x0, x19
  439f80:	bl	42bd98 <ferror@plt+0x29518>
  439f84:	mov	x2, x0
  439f88:	mov	w4, #0x53                  	// #83
  439f8c:	mov	x0, x19
  439f90:	mov	w3, #0x1                   	// #1
  439f94:	mov	x1, #0x0                   	// #0
  439f98:	strb	w4, [x2, #4]
  439f9c:	strh	wzr, [x2, #6]
  439fa0:	str	x21, [x2, #8]
  439fa4:	bl	436500 <ferror@plt+0x33c80>
  439fa8:	b	439a5c <ferror@plt+0x371dc>
  439fac:	mov	x25, #0x0                   	// #0
  439fb0:	b	439dc4 <ferror@plt+0x37544>
  439fb4:	mov	x25, x2
  439fb8:	b	439e4c <ferror@plt+0x375cc>
  439fbc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  439fc0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  439fc4:	add	x2, x2, #0xd88
  439fc8:	add	x0, x0, #0x558
  439fcc:	mov	w1, #0x380                 	// #896
  439fd0:	bl	4028b0 <ferror@plt+0x30>
  439fd4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  439fd8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  439fdc:	add	x2, x2, #0xd70
  439fe0:	add	x0, x0, #0x558
  439fe4:	mov	w1, #0xa2f                 	// #2607
  439fe8:	bl	4028b0 <ferror@plt+0x30>
  439fec:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  439ff0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  439ff4:	add	x2, x2, #0x728
  439ff8:	add	x0, x0, #0x558
  439ffc:	mov	w1, #0x953                 	// #2387
  43a000:	bl	4028b0 <ferror@plt+0x30>
  43a004:	nop
  43a008:	mov	x1, #0x0                   	// #0
  43a00c:	b	4399d0 <ferror@plt+0x37150>
  43a010:	stp	x29, x30, [sp, #-32]!
  43a014:	mov	x29, sp
  43a018:	ldr	x1, [x0]
  43a01c:	str	x19, [sp, #16]
  43a020:	mov	x19, x0
  43a024:	ldrb	w0, [x1, #105]
  43a028:	orr	w0, w0, #0x4
  43a02c:	strb	w0, [x1, #105]
  43a030:	ldrb	w1, [x19, #24]
  43a034:	ldrb	w0, [x19, #27]
  43a038:	ldrb	w2, [x19, #1160]
  43a03c:	add	w1, w1, #0x1
  43a040:	add	w0, w0, #0x1
  43a044:	strb	w1, [x19, #24]
  43a048:	strb	w0, [x19, #27]
  43a04c:	cbz	w2, 43a084 <ferror@plt+0x37804>
  43a050:	mov	x0, x19
  43a054:	bl	43cee0 <ferror@plt+0x3a660>
  43a058:	tst	w0, #0xff
  43a05c:	b.ne	43a050 <ferror@plt+0x377d0>  // b.any
  43a060:	ldrb	w1, [x19, #24]
  43a064:	ldrb	w0, [x19, #27]
  43a068:	sub	w1, w1, #0x1
  43a06c:	strb	w1, [x19, #24]
  43a070:	sub	w0, w0, #0x1
  43a074:	strb	w0, [x19, #27]
  43a078:	ldr	x19, [sp, #16]
  43a07c:	ldp	x29, x30, [sp], #32
  43a080:	ret
  43a084:	mov	x0, x19
  43a088:	mov	x1, #0x0                   	// #0
  43a08c:	bl	4399d0 <ferror@plt+0x37150>
  43a090:	ldrb	w0, [x0, #4]
  43a094:	cmp	w0, #0x16
  43a098:	b.eq	43a060 <ferror@plt+0x377e0>  // b.none
  43a09c:	mov	x0, x19
  43a0a0:	mov	x1, #0x0                   	// #0
  43a0a4:	bl	4399d0 <ferror@plt+0x37150>
  43a0a8:	ldrb	w0, [x0, #4]
  43a0ac:	cmp	w0, #0x16
  43a0b0:	b.ne	43a084 <ferror@plt+0x37804>  // b.any
  43a0b4:	b	43a060 <ferror@plt+0x377e0>
  43a0b8:	b	4399d0 <ferror@plt+0x37150>
  43a0bc:	nop
  43a0c0:	stp	x29, x30, [sp, #-80]!
  43a0c4:	mov	x29, sp
  43a0c8:	stp	x21, x22, [sp, #32]
  43a0cc:	ldr	x21, [x1, #24]
  43a0d0:	stp	x23, x24, [sp, #48]
  43a0d4:	mov	x24, x0
  43a0d8:	ldr	w0, [x1, #8]
  43a0dc:	mov	x23, x1
  43a0e0:	ldrb	w4, [x21, #19]
  43a0e4:	stp	x19, x20, [sp, #16]
  43a0e8:	add	w0, w0, w0, lsl #2
  43a0ec:	stp	x25, x26, [sp, #64]
  43a0f0:	lsl	w0, w0, #1
  43a0f4:	add	w19, w0, #0x2
  43a0f8:	tbz	w4, #2, 43a12c <ferror@plt+0x378ac>
  43a0fc:	ldrh	w2, [x21, #16]
  43a100:	add	w19, w0, #0x6
  43a104:	cbz	w2, 43a12c <ferror@plt+0x378ac>
  43a108:	ldr	x3, [x21]
  43a10c:	mov	x1, #0x0                   	// #0
  43a110:	ldr	x0, [x3, x1, lsl #3]
  43a114:	add	x1, x1, #0x1
  43a118:	cmp	w2, w1
  43a11c:	ldr	w0, [x0, #8]
  43a120:	add	w0, w0, #0x1
  43a124:	add	w19, w19, w0
  43a128:	b.hi	43a110 <ferror@plt+0x37890>  // b.pmore
  43a12c:	ldrb	w0, [x24, #1160]
  43a130:	cbnz	w0, 43a3b0 <ferror@plt+0x37b30>
  43a134:	ldr	w25, [x21, #12]
  43a138:	tbnz	w4, #6, 43a1c8 <ferror@plt+0x37948>
  43a13c:	cbz	w25, 43a1d8 <ferror@plt+0x37958>
  43a140:	add	x22, x21, #0x18
  43a144:	mov	w20, #0x0                   	// #0
  43a148:	b	43a188 <ferror@plt+0x37908>
  43a14c:	ldr	x0, [x22, #16]
  43a150:	ldr	w0, [x0, #8]
  43a154:	add	w19, w19, w0
  43a158:	ldrh	w2, [x22, #6]
  43a15c:	add	w20, w20, #0x1
  43a160:	add	x22, x22, #0x18
  43a164:	and	w0, w2, #0x1
  43a168:	ubfx	x1, x2, #2, #1
  43a16c:	tst	x2, #0x8
  43a170:	add	w19, w19, w1
  43a174:	add	w1, w19, #0x3
  43a178:	csel	w19, w1, w19, ne  // ne = any
  43a17c:	cmp	w25, w20
  43a180:	add	w19, w19, w0
  43a184:	b.ls	43a1d8 <ferror@plt+0x37958>  // b.plast
  43a188:	ubfiz	x2, x20, #1, #32
  43a18c:	mov	x0, x22
  43a190:	add	x2, x2, w20, uxtw
  43a194:	add	x2, x21, x2, lsl #3
  43a198:	ldrb	w1, [x2, #28]
  43a19c:	cmp	w1, #0x50
  43a1a0:	b.eq	43a14c <ferror@plt+0x378cc>  // b.none
  43a1a4:	bl	42c010 <ferror@plt+0x29790>
  43a1a8:	add	w19, w19, w0
  43a1ac:	b	43a158 <ferror@plt+0x378d8>
  43a1b0:	ubfiz	x0, x25, #1, #32
  43a1b4:	add	x0, x0, w25, uxtw
  43a1b8:	add	x0, x21, x0, lsl #3
  43a1bc:	ldrb	w0, [x0, #28]
  43a1c0:	cmp	w0, #0x26
  43a1c4:	b.ne	43a414 <ferror@plt+0x37b94>  // b.any
  43a1c8:	mov	w1, w25
  43a1cc:	sub	w25, w25, #0x1
  43a1d0:	cbnz	w1, 43a1b0 <ferror@plt+0x37930>
  43a1d4:	nop
  43a1d8:	ldr	w1, [x24, #512]
  43a1dc:	ldr	x0, [x24, #504]
  43a1e0:	cmp	w1, w19
  43a1e4:	b.cc	43a3cc <ferror@plt+0x37b4c>  // b.lo, b.ul, b.last
  43a1e8:	mov	x1, x23
  43a1ec:	bl	42c058 <ferror@plt+0x297d8>
  43a1f0:	mov	x4, x0
  43a1f4:	ldrb	w0, [x21, #19]
  43a1f8:	tbz	w0, #2, 43a2a0 <ferror@plt+0x37a20>
  43a1fc:	mov	x19, x4
  43a200:	mov	w0, #0x28                  	// #40
  43a204:	strb	w0, [x19], #1
  43a208:	ldrh	w1, [x21, #16]
  43a20c:	cbz	w1, 43a294 <ferror@plt+0x37a14>
  43a210:	mov	x20, #0x0                   	// #0
  43a214:	mov	w26, #0x2e2e                	// #11822
  43a218:	mov	w25, #0x2e                  	// #46
  43a21c:	mov	w23, #0x2c                  	// #44
  43a220:	b	43a23c <ferror@plt+0x379bc>
  43a224:	strb	w23, [x0], #1
  43a228:	mov	x19, x0
  43a22c:	ldrh	w1, [x21, #16]
  43a230:	add	x20, x20, #0x1
  43a234:	cmp	w1, w20
  43a238:	b.ls	43a294 <ferror@plt+0x37a14>  // b.plast
  43a23c:	ldr	x3, [x21]
  43a240:	mov	x0, x19
  43a244:	ldr	x2, [x24, #1272]
  43a248:	ldr	x22, [x3, x20, lsl #3]
  43a24c:	cmp	x2, x22
  43a250:	b.eq	43a26c <ferror@plt+0x379ec>  // b.none
  43a254:	ldr	w2, [x22, #8]
  43a258:	ldr	x1, [x22]
  43a25c:	bl	402220 <memcpy@plt>
  43a260:	ldr	w0, [x22, #8]
  43a264:	ldrh	w1, [x21, #16]
  43a268:	add	x19, x19, x0
  43a26c:	add	w2, w20, #0x1
  43a270:	mov	x0, x19
  43a274:	cmp	w1, w2
  43a278:	b.hi	43a224 <ferror@plt+0x379a4>  // b.pmore
  43a27c:	ldrb	w1, [x21, #19]
  43a280:	tbz	w1, #3, 43a294 <ferror@plt+0x37a14>
  43a284:	strh	w26, [x0], #3
  43a288:	strb	w25, [x19, #2]
  43a28c:	mov	x19, x0
  43a290:	b	43a22c <ferror@plt+0x379ac>
  43a294:	mov	x4, x19
  43a298:	mov	w0, #0x29                  	// #41
  43a29c:	strb	w0, [x4], #1
  43a2a0:	mov	w0, #0x20                  	// #32
  43a2a4:	strb	w0, [x4], #1
  43a2a8:	ldrb	w0, [x24, #1160]
  43a2ac:	cbnz	w0, 43a380 <ferror@plt+0x37b00>
  43a2b0:	ldr	w20, [x21, #12]
  43a2b4:	cbz	w20, 43a390 <ferror@plt+0x37b10>
  43a2b8:	ldrb	w0, [x21, #19]
  43a2bc:	tbnz	w0, #6, 43a3e0 <ferror@plt+0x37b60>
  43a2c0:	add	x19, x21, #0x18
  43a2c4:	mov	w26, #0x0                   	// #0
  43a2c8:	mov	w25, #0x20                  	// #32
  43a2cc:	mov	w22, #0x23                  	// #35
  43a2d0:	mov	w23, #0x2320                	// #8992
  43a2d4:	b	43a308 <ferror@plt+0x37a88>
  43a2d8:	bl	42c378 <ferror@plt+0x29af8>
  43a2dc:	mov	x4, x0
  43a2e0:	ldrh	w1, [x19, #6]
  43a2e4:	mov	x0, x4
  43a2e8:	add	w26, w26, #0x1
  43a2ec:	add	x19, x19, #0x18
  43a2f0:	tbz	w1, #3, 43a300 <ferror@plt+0x37a80>
  43a2f4:	strh	w23, [x0], #3
  43a2f8:	strb	w22, [x4, #2]
  43a2fc:	mov	x4, x0
  43a300:	cmp	w20, w26
  43a304:	b.ls	43a390 <ferror@plt+0x37b10>  // b.plast
  43a308:	ldrh	w2, [x19, #6]
  43a30c:	ubfiz	x5, x26, #1, #32
  43a310:	add	x5, x5, w26, uxtw
  43a314:	mov	x6, x4
  43a318:	mov	x1, x19
  43a31c:	mov	x0, x24
  43a320:	add	x5, x21, x5, lsl #3
  43a324:	mov	w3, #0x1                   	// #1
  43a328:	tbz	w2, #0, 43a338 <ferror@plt+0x37ab8>
  43a32c:	strb	w25, [x6], #1
  43a330:	ldrh	w2, [x19, #6]
  43a334:	mov	x4, x6
  43a338:	mov	x6, x4
  43a33c:	tbz	w2, #2, 43a348 <ferror@plt+0x37ac8>
  43a340:	strb	w22, [x6], #1
  43a344:	mov	x4, x6
  43a348:	ldrb	w5, [x5, #28]
  43a34c:	mov	x2, x4
  43a350:	cmp	w5, #0x50
  43a354:	b.ne	43a2d8 <ferror@plt+0x37a58>  // b.any
  43a358:	ldr	x1, [x19, #16]
  43a35c:	mov	x0, x4
  43a360:	ldr	w2, [x1, #8]
  43a364:	ldr	x1, [x1]
  43a368:	bl	402220 <memcpy@plt>
  43a36c:	mov	x4, x0
  43a370:	ldr	x0, [x19, #16]
  43a374:	ldr	w0, [x0, #8]
  43a378:	add	x4, x4, x0
  43a37c:	b	43a2e0 <ferror@plt+0x37a60>
  43a380:	mov	x1, x4
  43a384:	mov	x0, x21
  43a388:	bl	43cfb8 <ferror@plt+0x3a738>
  43a38c:	mov	x4, x0
  43a390:	strb	wzr, [x4]
  43a394:	ldp	x19, x20, [sp, #16]
  43a398:	ldp	x21, x22, [sp, #32]
  43a39c:	ldp	x25, x26, [sp, #64]
  43a3a0:	ldr	x0, [x24, #504]
  43a3a4:	ldp	x23, x24, [sp, #48]
  43a3a8:	ldp	x29, x30, [sp], #80
  43a3ac:	ret
  43a3b0:	mov	x0, x21
  43a3b4:	bl	43cf48 <ferror@plt+0x3a6c8>
  43a3b8:	ldr	w1, [x24, #512]
  43a3bc:	add	w19, w19, w0
  43a3c0:	ldr	x0, [x24, #504]
  43a3c4:	cmp	w1, w19
  43a3c8:	b.cs	43a1e8 <ferror@plt+0x37968>  // b.hs, b.nlast
  43a3cc:	mov	w1, w19
  43a3d0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43a3d4:	str	x0, [x24, #504]
  43a3d8:	str	w19, [x24, #512]
  43a3dc:	b	43a1e8 <ferror@plt+0x37968>
  43a3e0:	sub	w0, w20, #0x1
  43a3e4:	nop
  43a3e8:	ubfiz	x1, x0, #1, #32
  43a3ec:	add	w20, w0, #0x1
  43a3f0:	add	x1, x1, w0, uxtw
  43a3f4:	sub	w0, w0, #0x1
  43a3f8:	add	x1, x21, x1, lsl #3
  43a3fc:	ldrb	w1, [x1, #28]
  43a400:	cmp	w1, #0x26
  43a404:	b.ne	43a2c0 <ferror@plt+0x37a40>  // b.any
  43a408:	cmn	w0, #0x1
  43a40c:	b.ne	43a3e8 <ferror@plt+0x37b68>  // b.any
  43a410:	b	43a390 <ferror@plt+0x37b10>
  43a414:	mov	w25, w1
  43a418:	b	43a140 <ferror@plt+0x378c0>
  43a41c:	nop
  43a420:	stp	x29, x30, [sp, #-48]!
  43a424:	mov	x29, sp
  43a428:	stp	x21, x22, [sp, #32]
  43a42c:	mov	x21, x0
  43a430:	ldr	x0, [x0, #32]
  43a434:	stp	x19, x20, [sp, #16]
  43a438:	mov	x19, x1
  43a43c:	cbz	x0, 43a4bc <ferror@plt+0x37c3c>
  43a440:	ldr	w1, [x21, #48]
  43a444:	cbz	w1, 43a4bc <ferror@plt+0x37c3c>
  43a448:	mov	w20, #0x0                   	// #0
  43a44c:	b	43a454 <ferror@plt+0x37bd4>
  43a450:	ldr	x0, [x21, #32]
  43a454:	mov	w22, w20
  43a458:	ldr	x2, [x21, #40]
  43a45c:	add	w20, w20, #0x1
  43a460:	ldr	x0, [x0, x22, lsl #3]
  43a464:	mov	x1, x19
  43a468:	ldr	x2, [x2, x22, lsl #3]
  43a46c:	bl	45b030 <ferror@plt+0x587b0>
  43a470:	cbnz	w0, 43a4b0 <ferror@plt+0x37c30>
  43a474:	ldr	x0, [x21, #40]
  43a478:	ldr	x0, [x0, x22, lsl #3]
  43a47c:	add	x1, x19, x0
  43a480:	ldrb	w2, [x19, x0]
  43a484:	cmp	w2, #0x2f
  43a488:	b.ne	43a4b0 <ferror@plt+0x37c30>  // b.any
  43a48c:	ldrb	w2, [x1, #1]
  43a490:	cmp	w2, #0x2e
  43a494:	b.ne	43a50c <ferror@plt+0x37c8c>  // b.any
  43a498:	ldrb	w2, [x1, #2]
  43a49c:	cmp	w2, #0x2e
  43a4a0:	b.ne	43a50c <ferror@plt+0x37c8c>  // b.any
  43a4a4:	ldrb	w1, [x1, #3]
  43a4a8:	cmp	w1, #0x2f
  43a4ac:	b.ne	43a50c <ferror@plt+0x37c8c>  // b.any
  43a4b0:	ldr	w0, [x21, #48]
  43a4b4:	cmp	w0, w20
  43a4b8:	b.hi	43a450 <ferror@plt+0x37bd0>  // b.pmore
  43a4bc:	mov	x0, x19
  43a4c0:	ldrb	w1, [x0]
  43a4c4:	cmp	w1, #0x2e
  43a4c8:	b.ne	43a4fc <ferror@plt+0x37c7c>  // b.any
  43a4cc:	ldrb	w1, [x0, #1]
  43a4d0:	cmp	w1, #0x2f
  43a4d4:	b.ne	43a4fc <ferror@plt+0x37c7c>  // b.any
  43a4d8:	ldrb	w1, [x0, #2]
  43a4dc:	add	x0, x0, #0x2
  43a4e0:	cmp	w1, #0x2f
  43a4e4:	b.ne	43a4c4 <ferror@plt+0x37c44>  // b.any
  43a4e8:	ldrb	w1, [x0, #1]!
  43a4ec:	cmp	w1, #0x2f
  43a4f0:	b.eq	43a4e8 <ferror@plt+0x37c68>  // b.none
  43a4f4:	cmp	w1, #0x2e
  43a4f8:	b.eq	43a4cc <ferror@plt+0x37c4c>  // b.none
  43a4fc:	ldp	x19, x20, [sp, #16]
  43a500:	ldp	x21, x22, [sp, #32]
  43a504:	ldp	x29, x30, [sp], #48
  43a508:	ret
  43a50c:	add	x0, x0, #0x1
  43a510:	add	x0, x19, x0
  43a514:	b	43a4c0 <ferror@plt+0x37c40>
  43a518:	stp	x29, x30, [sp, #-32]!
  43a51c:	mov	x29, sp
  43a520:	str	x19, [sp, #16]
  43a524:	mov	x19, x0
  43a528:	ldrb	w1, [x0]
  43a52c:	cbz	w1, 43a6bc <ferror@plt+0x37e3c>
  43a530:	sub	x7, x0, #0x1
  43a534:	mov	w2, #0x0                   	// #0
  43a538:	mov	x6, x7
  43a53c:	b	43a554 <ferror@plt+0x37cd4>
  43a540:	add	w4, w2, #0x3
  43a544:	mov	w2, w3
  43a548:	ldrb	w1, [x6, #2]
  43a54c:	add	x6, x6, #0x1
  43a550:	cbz	w1, 43a5c8 <ferror@plt+0x37d48>
  43a554:	cmp	w1, #0x24
  43a558:	add	w0, w2, #0x1
  43a55c:	add	w3, w2, #0x2
  43a560:	b.hi	43a674 <ferror@plt+0x37df4>  // b.pmore
  43a564:	cmp	w1, #0x22
  43a568:	b.hi	43a540 <ferror@plt+0x37cc0>  // b.pmore
  43a56c:	cmp	w1, #0x9
  43a570:	b.eq	43a57c <ferror@plt+0x37cfc>  // b.none
  43a574:	cmp	w1, #0x20
  43a578:	b.ne	43a674 <ferror@plt+0x37df4>  // b.any
  43a57c:	cmp	x19, x6
  43a580:	mov	x1, x6
  43a584:	b.hi	43a540 <ferror@plt+0x37cc0>  // b.pmore
  43a588:	ldrb	w5, [x1]
  43a58c:	add	w4, w3, #0x1
  43a590:	mov	w2, w3
  43a594:	sub	x1, x1, #0x1
  43a598:	mov	w3, w4
  43a59c:	cmp	w5, #0x5c
  43a5a0:	b.ne	43a548 <ferror@plt+0x37cc8>  // b.any
  43a5a4:	cmp	x7, x1
  43a5a8:	b.ne	43a588 <ferror@plt+0x37d08>  // b.any
  43a5ac:	ldrb	w1, [x6, #2]
  43a5b0:	add	w0, w2, #0x2
  43a5b4:	add	x6, x6, #0x1
  43a5b8:	mov	w2, w4
  43a5bc:	mov	w4, w0
  43a5c0:	cbnz	w1, 43a554 <ferror@plt+0x37cd4>
  43a5c4:	nop
  43a5c8:	sxtw	x0, w4
  43a5cc:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43a5d0:	ldrb	w4, [x19]
  43a5d4:	cbz	w4, 43a6cc <ferror@plt+0x37e4c>
  43a5d8:	sub	x9, x19, #0x1
  43a5dc:	mov	x1, x0
  43a5e0:	mov	x7, x9
  43a5e4:	mov	w10, #0x5c                  	// #92
  43a5e8:	add	x6, x1, #0x1
  43a5ec:	cmp	w4, #0x23
  43a5f0:	mov	x3, x6
  43a5f4:	b.eq	43a69c <ferror@plt+0x37e1c>  // b.none
  43a5f8:	b.hi	43a680 <ferror@plt+0x37e00>  // b.pmore
  43a5fc:	cmp	w4, #0x9
  43a600:	b.eq	43a60c <ferror@plt+0x37d8c>  // b.none
  43a604:	cmp	w4, #0x20
  43a608:	b.ne	43a690 <ferror@plt+0x37e10>  // b.any
  43a60c:	cmp	x19, x7
  43a610:	mov	x2, x7
  43a614:	b.ls	43a628 <ferror@plt+0x37da8>  // b.plast
  43a618:	b	43a6b0 <ferror@plt+0x37e30>
  43a61c:	sturb	w5, [x1, #-1]
  43a620:	cmp	x9, x2
  43a624:	b.eq	43a6a4 <ferror@plt+0x37e24>  // b.none
  43a628:	ldrb	w5, [x2]
  43a62c:	mov	x8, x1
  43a630:	mov	x1, x3
  43a634:	add	x3, x3, #0x1
  43a638:	sub	x2, x2, #0x1
  43a63c:	cmp	w5, #0x5c
  43a640:	mov	x6, x3
  43a644:	b.eq	43a61c <ferror@plt+0x37d9c>  // b.none
  43a648:	mov	x6, x1
  43a64c:	mov	x1, x3
  43a650:	strb	w10, [x8]
  43a654:	add	x7, x7, #0x1
  43a658:	strb	w4, [x6]
  43a65c:	ldrb	w4, [x7, #1]
  43a660:	cbnz	w4, 43a5e8 <ferror@plt+0x37d68>
  43a664:	strb	wzr, [x1]
  43a668:	ldr	x19, [sp, #16]
  43a66c:	ldp	x29, x30, [sp], #32
  43a670:	ret
  43a674:	mov	w4, w3
  43a678:	mov	w2, w0
  43a67c:	b	43a548 <ferror@plt+0x37cc8>
  43a680:	cmp	w4, #0x24
  43a684:	b.ne	43a690 <ferror@plt+0x37e10>  // b.any
  43a688:	strb	w4, [x1], #2
  43a68c:	b	43a654 <ferror@plt+0x37dd4>
  43a690:	mov	x6, x1
  43a694:	mov	x1, x3
  43a698:	b	43a654 <ferror@plt+0x37dd4>
  43a69c:	strb	w10, [x1], #2
  43a6a0:	b	43a654 <ferror@plt+0x37dd4>
  43a6a4:	mov	x8, x1
  43a6a8:	add	x1, x3, #0x1
  43a6ac:	b	43a650 <ferror@plt+0x37dd0>
  43a6b0:	mov	x8, x1
  43a6b4:	add	x1, x1, #0x2
  43a6b8:	b	43a650 <ferror@plt+0x37dd0>
  43a6bc:	mov	x0, #0x1                   	// #1
  43a6c0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43a6c4:	ldrb	w4, [x19]
  43a6c8:	cbnz	w4, 43a5d8 <ferror@plt+0x37d58>
  43a6cc:	mov	x1, x0
  43a6d0:	strb	wzr, [x1]
  43a6d4:	ldr	x19, [sp, #16]
  43a6d8:	ldp	x29, x30, [sp], #32
  43a6dc:	ret
  43a6e0:	mov	x1, #0x38                  	// #56
  43a6e4:	mov	x0, #0x1                   	// #1
  43a6e8:	b	45ca50 <_obstack_memory_used@@Base+0x128>
  43a6ec:	nop
  43a6f0:	stp	x29, x30, [sp, #-32]!
  43a6f4:	mov	x29, sp
  43a6f8:	stp	x19, x20, [sp, #16]
  43a6fc:	mov	x19, x0
  43a700:	ldr	x0, [x0]
  43a704:	cbz	x0, 43a738 <ferror@plt+0x37eb8>
  43a708:	ldr	w1, [x19, #8]
  43a70c:	cbz	w1, 43a734 <ferror@plt+0x37eb4>
  43a710:	mov	w20, #0x0                   	// #0
  43a714:	nop
  43a718:	ldr	x0, [x0, w20, uxtw #3]
  43a71c:	add	w20, w20, #0x1
  43a720:	bl	402640 <free@plt>
  43a724:	ldr	w0, [x19, #8]
  43a728:	cmp	w0, w20
  43a72c:	ldr	x0, [x19]
  43a730:	b.hi	43a718 <ferror@plt+0x37e98>  // b.pmore
  43a734:	bl	402640 <free@plt>
  43a738:	ldr	x0, [x19, #16]
  43a73c:	cbz	x0, 43a770 <ferror@plt+0x37ef0>
  43a740:	ldr	w1, [x19, #24]
  43a744:	cbz	w1, 43a76c <ferror@plt+0x37eec>
  43a748:	mov	w20, #0x0                   	// #0
  43a74c:	nop
  43a750:	ldr	x0, [x0, w20, uxtw #3]
  43a754:	add	w20, w20, #0x1
  43a758:	bl	402640 <free@plt>
  43a75c:	ldr	w0, [x19, #24]
  43a760:	cmp	w0, w20
  43a764:	ldr	x0, [x19, #16]
  43a768:	b.hi	43a750 <ferror@plt+0x37ed0>  // b.pmore
  43a76c:	bl	402640 <free@plt>
  43a770:	ldr	x0, [x19, #32]
  43a774:	cbz	x0, 43a7b0 <ferror@plt+0x37f30>
  43a778:	ldr	w1, [x19, #48]
  43a77c:	cbz	w1, 43a7a4 <ferror@plt+0x37f24>
  43a780:	mov	w20, #0x0                   	// #0
  43a784:	nop
  43a788:	ldr	x0, [x0, w20, uxtw #3]
  43a78c:	add	w20, w20, #0x1
  43a790:	bl	402640 <free@plt>
  43a794:	ldr	w0, [x19, #48]
  43a798:	cmp	w0, w20
  43a79c:	ldr	x0, [x19, #32]
  43a7a0:	b.hi	43a788 <ferror@plt+0x37f08>  // b.pmore
  43a7a4:	bl	402640 <free@plt>
  43a7a8:	ldr	x0, [x19, #40]
  43a7ac:	bl	402640 <free@plt>
  43a7b0:	mov	x0, x19
  43a7b4:	ldp	x19, x20, [sp, #16]
  43a7b8:	ldp	x29, x30, [sp], #32
  43a7bc:	b	402640 <free@plt>
  43a7c0:	stp	x29, x30, [sp, #-48]!
  43a7c4:	mov	x29, sp
  43a7c8:	stp	x19, x20, [sp, #16]
  43a7cc:	mov	x19, x0
  43a7d0:	ldr	w0, [x0, #8]
  43a7d4:	str	x21, [sp, #32]
  43a7d8:	mov	x21, x1
  43a7dc:	ldr	w1, [x19, #12]
  43a7e0:	mov	w20, w2
  43a7e4:	cmp	w0, w1
  43a7e8:	b.eq	43a82c <ferror@plt+0x37fac>  // b.none
  43a7ec:	mov	x1, x21
  43a7f0:	mov	x0, x19
  43a7f4:	bl	43a420 <ferror@plt+0x37ba0>
  43a7f8:	cbz	w20, 43a824 <ferror@plt+0x37fa4>
  43a7fc:	bl	43a518 <ferror@plt+0x37c98>
  43a800:	ldr	w1, [x19, #8]
  43a804:	ldr	x2, [x19]
  43a808:	add	w3, w1, #0x1
  43a80c:	ldr	x21, [sp, #32]
  43a810:	str	w3, [x19, #8]
  43a814:	str	x0, [x2, w1, uxtw #3]
  43a818:	ldp	x19, x20, [sp, #16]
  43a81c:	ldp	x29, x30, [sp], #48
  43a820:	ret
  43a824:	bl	45cb60 <_obstack_memory_used@@Base+0x238>
  43a828:	b	43a800 <ferror@plt+0x37f80>
  43a82c:	add	w2, w0, #0x2
  43a830:	ldr	x0, [x19]
  43a834:	lsl	w1, w2, #1
  43a838:	mov	x2, x1
  43a83c:	str	w2, [x19, #12]
  43a840:	lsl	x1, x1, #3
  43a844:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43a848:	str	x0, [x19]
  43a84c:	b	43a7ec <ferror@plt+0x37f6c>
  43a850:	stp	x29, x30, [sp, #-48]!
  43a854:	mov	x29, sp
  43a858:	stp	x19, x20, [sp, #16]
  43a85c:	mov	x19, x0
  43a860:	ldr	w0, [x0, #8]
  43a864:	str	x21, [sp, #32]
  43a868:	cbnz	w0, 43a8a4 <ferror@plt+0x38024>
  43a86c:	ldrb	w0, [x1]
  43a870:	cbnz	w0, 43a8b8 <ferror@plt+0x38038>
  43a874:	ldr	w0, [x19, #12]
  43a878:	cbz	w0, 43a958 <ferror@plt+0x380d8>
  43a87c:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  43a880:	add	x1, x1, #0x860
  43a884:	mov	x0, x19
  43a888:	bl	43a420 <ferror@plt+0x37ba0>
  43a88c:	bl	43a518 <ferror@plt+0x37c98>
  43a890:	ldr	w1, [x19, #8]
  43a894:	ldr	x2, [x19]
  43a898:	add	w3, w1, #0x1
  43a89c:	str	w3, [x19, #8]
  43a8a0:	str	x0, [x2, w1, uxtw #3]
  43a8a4:	mov	sp, x29
  43a8a8:	ldp	x19, x20, [sp, #16]
  43a8ac:	ldr	x21, [sp, #32]
  43a8b0:	ldp	x29, x30, [sp], #48
  43a8b4:	ret
  43a8b8:	mov	x0, x1
  43a8bc:	bl	45c4a0 <ferror@plt+0x59c20>
  43a8c0:	mov	x20, x0
  43a8c4:	bl	402270 <strlen@plt>
  43a8c8:	mov	x1, x20
  43a8cc:	mov	x20, x0
  43a8d0:	add	x0, x0, #0x12
  43a8d4:	add	x2, x20, #0x1
  43a8d8:	and	x0, x0, #0xfffffffffffffff0
  43a8dc:	sub	sp, sp, x0
  43a8e0:	mov	x21, sp
  43a8e4:	mov	x0, x21
  43a8e8:	bl	402220 <memcpy@plt>
  43a8ec:	mov	w1, #0x2e                  	// #46
  43a8f0:	mov	x0, x21
  43a8f4:	bl	402500 <strrchr@plt>
  43a8f8:	add	x20, x21, x20
  43a8fc:	cmp	x0, #0x0
  43a900:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43a904:	add	x1, x1, #0xe88
  43a908:	csel	x0, x20, x0, eq  // eq = none
  43a90c:	ldp	w2, w4, [x19, #8]
  43a910:	ldrh	w3, [x1]
  43a914:	ldrb	w1, [x1, #2]
  43a918:	cmp	w2, w4
  43a91c:	strh	w3, [x0]
  43a920:	strb	w1, [x0, #2]
  43a924:	b.eq	43a930 <ferror@plt+0x380b0>  // b.none
  43a928:	mov	x1, x21
  43a92c:	b	43a884 <ferror@plt+0x38004>
  43a930:	add	w2, w2, #0x2
  43a934:	ldr	x0, [x19]
  43a938:	lsl	w1, w2, #1
  43a93c:	mov	x2, x1
  43a940:	str	w2, [x19, #12]
  43a944:	lsl	x1, x1, #3
  43a948:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43a94c:	str	x0, [x19]
  43a950:	mov	x1, x21
  43a954:	b	43a884 <ferror@plt+0x38004>
  43a958:	ldr	x0, [x19]
  43a95c:	mov	w1, #0x4                   	// #4
  43a960:	str	w1, [x19, #12]
  43a964:	mov	x1, #0x20                  	// #32
  43a968:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43a96c:	str	x0, [x19]
  43a970:	b	43a87c <ferror@plt+0x37ffc>
  43a974:	nop
  43a978:	stp	x29, x30, [sp, #-32]!
  43a97c:	mov	x29, sp
  43a980:	stp	x19, x20, [sp, #16]
  43a984:	mov	x19, x0
  43a988:	bl	43a420 <ferror@plt+0x37ba0>
  43a98c:	bl	43a518 <ferror@plt+0x37c98>
  43a990:	mov	x20, x0
  43a994:	ldp	w1, w0, [x19, #24]
  43a998:	cmp	w1, w0
  43a99c:	b.eq	43a9bc <ferror@plt+0x3813c>  // b.none
  43a9a0:	ldr	x0, [x19, #16]
  43a9a4:	add	w2, w1, #0x1
  43a9a8:	str	w2, [x19, #24]
  43a9ac:	str	x20, [x0, w1, uxtw #3]
  43a9b0:	ldp	x19, x20, [sp, #16]
  43a9b4:	ldp	x29, x30, [sp], #32
  43a9b8:	ret
  43a9bc:	add	w1, w1, #0x4
  43a9c0:	ldr	x0, [x19, #16]
  43a9c4:	lsl	w1, w1, #1
  43a9c8:	mov	x2, x1
  43a9cc:	str	w2, [x19, #28]
  43a9d0:	lsl	x1, x1, #3
  43a9d4:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43a9d8:	str	x0, [x19, #16]
  43a9dc:	ldr	w1, [x19, #24]
  43a9e0:	add	w2, w1, #0x1
  43a9e4:	str	w2, [x19, #24]
  43a9e8:	str	x20, [x0, w1, uxtw #3]
  43a9ec:	ldp	x19, x20, [sp, #16]
  43a9f0:	ldp	x29, x30, [sp], #32
  43a9f4:	ret
  43a9f8:	stp	x29, x30, [sp, #-48]!
  43a9fc:	mov	x29, sp
  43aa00:	stp	x19, x20, [sp, #16]
  43aa04:	mov	x20, x0
  43aa08:	ldrb	w0, [x1]
  43aa0c:	cbz	w0, 43ab08 <ferror@plt+0x38288>
  43aa10:	stp	x21, x22, [sp, #32]
  43aa14:	mov	x21, x1
  43aa18:	mov	x19, x21
  43aa1c:	cmp	w0, #0x3a
  43aa20:	b.eq	43aaa4 <ferror@plt+0x38224>  // b.none
  43aa24:	nop
  43aa28:	ldrb	w2, [x19, #1]!
  43aa2c:	cmp	w2, #0x3a
  43aa30:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  43aa34:	b.ne	43aa28 <ferror@plt+0x381a8>  // b.any
  43aa38:	sub	x22, x19, x21
  43aa3c:	add	x0, x22, #0x1
  43aa40:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43aa44:	mov	x1, x21
  43aa48:	mov	x21, x0
  43aa4c:	mov	x2, x22
  43aa50:	bl	402220 <memcpy@plt>
  43aa54:	ldrb	w0, [x19]
  43aa58:	ldp	w1, w2, [x20, #48]
  43aa5c:	strb	wzr, [x21, x22]
  43aa60:	cmp	w0, #0x3a
  43aa64:	cinc	x19, x19, eq  // eq = none
  43aa68:	cmp	w1, w2
  43aa6c:	ldr	x0, [x20, #32]
  43aa70:	b.eq	43aab0 <ferror@plt+0x38230>  // b.none
  43aa74:	mov	w2, w1
  43aa78:	add	w1, w1, #0x1
  43aa7c:	ldr	x3, [x20, #40]
  43aa80:	str	x21, [x0, x2, lsl #3]
  43aa84:	str	x22, [x3, x2, lsl #3]
  43aa88:	str	w1, [x20, #48]
  43aa8c:	ldrb	w0, [x19]
  43aa90:	cbz	w0, 43ab04 <ferror@plt+0x38284>
  43aa94:	mov	x21, x19
  43aa98:	cmp	w0, #0x3a
  43aa9c:	mov	x19, x21
  43aaa0:	b.ne	43aa28 <ferror@plt+0x381a8>  // b.any
  43aaa4:	mov	x22, #0x0                   	// #0
  43aaa8:	mov	x0, #0x1                   	// #1
  43aaac:	b	43aa40 <ferror@plt+0x381c0>
  43aab0:	add	w1, w1, #0x4
  43aab4:	lsl	w1, w1, #1
  43aab8:	str	w1, [x20, #52]
  43aabc:	lsl	x1, x1, #3
  43aac0:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43aac4:	mov	x2, x0
  43aac8:	ldr	w1, [x20, #52]
  43aacc:	ldr	x0, [x20, #40]
  43aad0:	str	x2, [x20, #32]
  43aad4:	lsl	x1, x1, #3
  43aad8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43aadc:	str	x0, [x20, #40]
  43aae0:	ldr	w1, [x20, #48]
  43aae4:	ldr	x3, [x20, #32]
  43aae8:	mov	w2, w1
  43aaec:	add	w1, w1, #0x1
  43aaf0:	str	x21, [x3, x2, lsl #3]
  43aaf4:	str	x22, [x0, x2, lsl #3]
  43aaf8:	str	w1, [x20, #48]
  43aafc:	ldrb	w0, [x19]
  43ab00:	cbnz	w0, 43aa94 <ferror@plt+0x38214>
  43ab04:	ldp	x21, x22, [sp, #32]
  43ab08:	ldp	x19, x20, [sp, #16]
  43ab0c:	ldp	x29, x30, [sp], #48
  43ab10:	ret
  43ab14:	nop
  43ab18:	stp	x29, x30, [sp, #-96]!
  43ab1c:	mov	x29, sp
  43ab20:	stp	x19, x20, [sp, #16]
  43ab24:	mov	x20, x0
  43ab28:	sub	w0, w2, #0x1
  43ab2c:	cmp	w0, #0x20
  43ab30:	stp	x21, x22, [sp, #32]
  43ab34:	ldr	w0, [x20, #8]
  43ab38:	stp	x23, x24, [sp, #48]
  43ab3c:	mov	x19, x1
  43ab40:	mov	w1, #0x22                  	// #34
  43ab44:	stp	x25, x26, [sp, #64]
  43ab48:	csel	w24, w2, w1, hi  // hi = pmore
  43ab4c:	stp	x27, x28, [sp, #80]
  43ab50:	cbz	w0, 43ad3c <ferror@plt+0x384bc>
  43ab54:	ldr	x0, [x20]
  43ab58:	adrp	x26, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43ab5c:	add	x26, x26, #0xe90
  43ab60:	mov	w21, #0x0                   	// #0
  43ab64:	mov	w27, #0x20                  	// #32
  43ab68:	ldr	x25, [x0]
  43ab6c:	mov	x0, x25
  43ab70:	bl	402270 <strlen@plt>
  43ab74:	mov	w23, w0
  43ab78:	mov	x0, x25
  43ab7c:	mov	x1, x19
  43ab80:	bl	402770 <fputs_unlocked@plt>
  43ab84:	add	w28, w21, #0x1
  43ab88:	ldr	w0, [x20, #8]
  43ab8c:	mov	x21, x28
  43ab90:	cmp	w0, w28
  43ab94:	b.ls	43ac04 <ferror@plt+0x38384>  // b.plast
  43ab98:	ldr	x0, [x20]
  43ab9c:	ldr	x25, [x0, x28, lsl #3]
  43aba0:	mov	x0, x25
  43aba4:	bl	402270 <strlen@plt>
  43aba8:	cmp	w24, #0x0
  43abac:	mov	x22, x0
  43abb0:	add	w23, w23, w0
  43abb4:	cbz	w21, 43ab78 <ferror@plt+0x382f8>
  43abb8:	ccmp	w24, w23, #0x2, ne  // ne = any
  43abbc:	b.cc	43acf8 <ferror@plt+0x38478>  // b.lo, b.ul, b.last
  43abc0:	ldp	x0, x1, [x19, #40]
  43abc4:	add	x2, x0, #0x1
  43abc8:	cmp	x0, x1
  43abcc:	b.cs	43ad2c <ferror@plt+0x384ac>  // b.hs, b.nlast
  43abd0:	str	x2, [x19, #40]
  43abd4:	strb	w27, [x0]
  43abd8:	ldr	x0, [x20]
  43abdc:	mov	x1, x19
  43abe0:	add	w23, w23, #0x1
  43abe4:	ldr	x25, [x0, x28, lsl #3]
  43abe8:	add	w28, w21, #0x1
  43abec:	mov	x21, x28
  43abf0:	mov	x0, x25
  43abf4:	bl	402770 <fputs_unlocked@plt>
  43abf8:	ldr	w0, [x20, #8]
  43abfc:	cmp	w0, w28
  43ac00:	b.hi	43ab98 <ferror@plt+0x38318>  // b.pmore
  43ac04:	ldp	x0, x1, [x19, #40]
  43ac08:	add	w23, w23, #0x1
  43ac0c:	cmp	x0, x1
  43ac10:	b.cs	43ad50 <ferror@plt+0x384d0>  // b.hs, b.nlast
  43ac14:	add	x1, x0, #0x1
  43ac18:	str	x1, [x19, #40]
  43ac1c:	mov	w1, #0x3a                  	// #58
  43ac20:	strb	w1, [x0]
  43ac24:	ldr	w0, [x20, #24]
  43ac28:	cbz	w0, 43aca4 <ferror@plt+0x38424>
  43ac2c:	cmp	w24, #0x0
  43ac30:	adrp	x26, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43ac34:	cset	w22, ne  // ne = any
  43ac38:	add	x26, x26, #0xe90
  43ac3c:	mov	w21, #0x0                   	// #0
  43ac40:	mov	w25, #0x20                  	// #32
  43ac44:	nop
  43ac48:	ldr	x0, [x20, #16]
  43ac4c:	mov	w27, w21
  43ac50:	ldr	x0, [x0, x27, lsl #3]
  43ac54:	bl	402270 <strlen@plt>
  43ac58:	add	w23, w23, w0
  43ac5c:	cmp	w22, #0x0
  43ac60:	ccmp	w24, w23, #0x2, ne  // ne = any
  43ac64:	b.cc	43acdc <ferror@plt+0x3845c>  // b.lo, b.ul, b.last
  43ac68:	ldp	x0, x1, [x19, #40]
  43ac6c:	add	x2, x0, #0x1
  43ac70:	cmp	x0, x1
  43ac74:	b.cs	43ad1c <ferror@plt+0x3849c>  // b.hs, b.nlast
  43ac78:	str	x2, [x19, #40]
  43ac7c:	strb	w25, [x0]
  43ac80:	add	w23, w23, #0x1
  43ac84:	ldr	x0, [x20, #16]
  43ac88:	mov	x1, x19
  43ac8c:	add	w21, w21, #0x1
  43ac90:	ldr	x0, [x0, x27, lsl #3]
  43ac94:	bl	402770 <fputs_unlocked@plt>
  43ac98:	ldr	w0, [x20, #24]
  43ac9c:	cmp	w0, w21
  43aca0:	b.hi	43ac48 <ferror@plt+0x383c8>  // b.pmore
  43aca4:	ldp	x0, x1, [x19, #40]
  43aca8:	cmp	x0, x1
  43acac:	b.cs	43ad60 <ferror@plt+0x384e0>  // b.hs, b.nlast
  43acb0:	add	x1, x0, #0x1
  43acb4:	str	x1, [x19, #40]
  43acb8:	mov	w1, #0xa                   	// #10
  43acbc:	strb	w1, [x0]
  43acc0:	ldp	x19, x20, [sp, #16]
  43acc4:	ldp	x21, x22, [sp, #32]
  43acc8:	ldp	x23, x24, [sp, #48]
  43accc:	ldp	x25, x26, [sp, #64]
  43acd0:	ldp	x27, x28, [sp, #80]
  43acd4:	ldp	x29, x30, [sp], #96
  43acd8:	ret
  43acdc:	add	w23, w0, #0x1
  43ace0:	mov	x3, x19
  43ace4:	mov	x0, x26
  43ace8:	mov	x2, #0x4                   	// #4
  43acec:	mov	x1, #0x1                   	// #1
  43acf0:	bl	402250 <fwrite_unlocked@plt>
  43acf4:	b	43ac84 <ferror@plt+0x38404>
  43acf8:	mov	x3, x19
  43acfc:	mov	x0, x26
  43ad00:	mov	x2, #0x4                   	// #4
  43ad04:	mov	x1, #0x1                   	// #1
  43ad08:	bl	402250 <fwrite_unlocked@plt>
  43ad0c:	add	w23, w22, #0x1
  43ad10:	ldr	x0, [x20]
  43ad14:	ldr	x25, [x0, x28, lsl #3]
  43ad18:	b	43ab78 <ferror@plt+0x382f8>
  43ad1c:	mov	x0, x19
  43ad20:	mov	w1, #0x20                  	// #32
  43ad24:	bl	402550 <__overflow@plt>
  43ad28:	b	43ac80 <ferror@plt+0x38400>
  43ad2c:	mov	x0, x19
  43ad30:	mov	w1, #0x20                  	// #32
  43ad34:	bl	402550 <__overflow@plt>
  43ad38:	b	43abd8 <ferror@plt+0x38358>
  43ad3c:	ldp	x0, x1, [x19, #40]
  43ad40:	mov	w23, #0x1                   	// #1
  43ad44:	cmp	x0, x1
  43ad48:	b.cc	43ac14 <ferror@plt+0x38394>  // b.lo, b.ul, b.last
  43ad4c:	nop
  43ad50:	mov	x0, x19
  43ad54:	mov	w1, #0x3a                  	// #58
  43ad58:	bl	402550 <__overflow@plt>
  43ad5c:	b	43ac24 <ferror@plt+0x383a4>
  43ad60:	mov	x0, x19
  43ad64:	mov	w1, #0xa                   	// #10
  43ad68:	ldp	x19, x20, [sp, #16]
  43ad6c:	ldp	x21, x22, [sp, #32]
  43ad70:	ldp	x23, x24, [sp, #48]
  43ad74:	ldp	x25, x26, [sp, #64]
  43ad78:	ldp	x27, x28, [sp, #80]
  43ad7c:	ldp	x29, x30, [sp], #96
  43ad80:	b	402550 <__overflow@plt>
  43ad84:	nop
  43ad88:	stp	x29, x30, [sp, #-64]!
  43ad8c:	mov	x29, sp
  43ad90:	stp	x21, x22, [sp, #32]
  43ad94:	mov	x21, x0
  43ad98:	ldr	w0, [x0, #24]
  43ad9c:	cmp	w0, #0x1
  43ada0:	b.ls	43aea0 <ferror@plt+0x38620>  // b.plast
  43ada4:	mov	w22, #0xa                   	// #10
  43ada8:	stp	x19, x20, [sp, #16]
  43adac:	mov	x19, x1
  43adb0:	mov	w20, #0x1                   	// #1
  43adb4:	str	x23, [sp, #48]
  43adb8:	mov	w23, #0x3a                  	// #58
  43adbc:	b	43ae18 <ferror@plt+0x38598>
  43adc0:	str	x2, [x19, #40]
  43adc4:	strb	w22, [x1]
  43adc8:	mov	x1, x19
  43adcc:	ldr	x0, [x21, #16]
  43add0:	ldr	x0, [x0, w20, uxtw #3]
  43add4:	bl	402770 <fputs_unlocked@plt>
  43add8:	ldp	x1, x0, [x19, #40]
  43addc:	add	x2, x1, #0x1
  43ade0:	cmp	x1, x0
  43ade4:	b.cs	43ae58 <ferror@plt+0x385d8>  // b.hs, b.nlast
  43ade8:	str	x2, [x19, #40]
  43adec:	strb	w23, [x1]
  43adf0:	ldp	x1, x0, [x19, #40]
  43adf4:	add	x2, x1, #0x1
  43adf8:	cmp	x1, x0
  43adfc:	b.cs	43ae78 <ferror@plt+0x385f8>  // b.hs, b.nlast
  43ae00:	str	x2, [x19, #40]
  43ae04:	add	w20, w20, #0x1
  43ae08:	strb	w22, [x1]
  43ae0c:	ldr	w0, [x21, #24]
  43ae10:	cmp	w0, w20
  43ae14:	b.ls	43ae98 <ferror@plt+0x38618>  // b.plast
  43ae18:	ldp	x1, x0, [x19, #40]
  43ae1c:	add	x2, x1, #0x1
  43ae20:	cmp	x1, x0
  43ae24:	b.cc	43adc0 <ferror@plt+0x38540>  // b.lo, b.ul, b.last
  43ae28:	mov	w1, #0xa                   	// #10
  43ae2c:	mov	x0, x19
  43ae30:	bl	402550 <__overflow@plt>
  43ae34:	ldr	x0, [x21, #16]
  43ae38:	mov	x1, x19
  43ae3c:	ldr	x0, [x0, w20, uxtw #3]
  43ae40:	bl	402770 <fputs_unlocked@plt>
  43ae44:	ldp	x1, x0, [x19, #40]
  43ae48:	add	x2, x1, #0x1
  43ae4c:	cmp	x1, x0
  43ae50:	b.cc	43ade8 <ferror@plt+0x38568>  // b.lo, b.ul, b.last
  43ae54:	nop
  43ae58:	mov	w1, #0x3a                  	// #58
  43ae5c:	mov	x0, x19
  43ae60:	bl	402550 <__overflow@plt>
  43ae64:	ldp	x1, x0, [x19, #40]
  43ae68:	add	x2, x1, #0x1
  43ae6c:	cmp	x1, x0
  43ae70:	b.cc	43ae00 <ferror@plt+0x38580>  // b.lo, b.ul, b.last
  43ae74:	nop
  43ae78:	mov	x0, x19
  43ae7c:	mov	w1, #0xa                   	// #10
  43ae80:	bl	402550 <__overflow@plt>
  43ae84:	add	w20, w20, #0x1
  43ae88:	ldr	w0, [x21, #24]
  43ae8c:	cmp	w0, w20
  43ae90:	b.hi	43ae18 <ferror@plt+0x38598>  // b.pmore
  43ae94:	nop
  43ae98:	ldp	x19, x20, [sp, #16]
  43ae9c:	ldr	x23, [sp, #48]
  43aea0:	ldp	x21, x22, [sp, #32]
  43aea4:	ldp	x29, x30, [sp], #64
  43aea8:	ret
  43aeac:	nop
  43aeb0:	stp	x29, x30, [sp, #-64]!
  43aeb4:	mov	x3, x1
  43aeb8:	mov	x2, #0x1                   	// #1
  43aebc:	mov	x29, sp
  43aec0:	stp	x19, x20, [sp, #16]
  43aec4:	mov	x20, x0
  43aec8:	add	x0, x0, #0x18
  43aecc:	stp	x21, x22, [sp, #32]
  43aed0:	mov	x22, x1
  43aed4:	mov	x1, #0x4                   	// #4
  43aed8:	bl	402250 <fwrite_unlocked@plt>
  43aedc:	cmp	x0, #0x1
  43aee0:	b.ne	43af58 <ferror@plt+0x386d8>  // b.any
  43aee4:	ldr	w0, [x20, #24]
  43aee8:	mov	w19, #0x0                   	// #0
  43aeec:	cbnz	w0, 43af18 <ferror@plt+0x38698>
  43aef0:	b	43af6c <ferror@plt+0x386ec>
  43aef4:	ldr	x0, [x20, #16]
  43aef8:	ldr	x1, [sp, #56]
  43aefc:	ldr	x0, [x0, x21, lsl #3]
  43af00:	bl	402250 <fwrite_unlocked@plt>
  43af04:	cmp	x0, #0x1
  43af08:	b.ne	43af58 <ferror@plt+0x386d8>  // b.any
  43af0c:	ldr	w0, [x20, #24]
  43af10:	cmp	w0, w19
  43af14:	b.ls	43af6c <ferror@plt+0x386ec>  // b.plast
  43af18:	ldr	x0, [x20, #16]
  43af1c:	mov	w21, w19
  43af20:	add	w19, w19, #0x1
  43af24:	ldr	x0, [x0, x21, lsl #3]
  43af28:	bl	402270 <strlen@plt>
  43af2c:	mov	x4, x0
  43af30:	mov	x3, x22
  43af34:	mov	x2, #0x1                   	// #1
  43af38:	add	x0, sp, #0x38
  43af3c:	mov	x1, #0x8                   	// #8
  43af40:	str	x4, [sp, #56]
  43af44:	bl	402250 <fwrite_unlocked@plt>
  43af48:	mov	x3, x22
  43af4c:	mov	x2, x0
  43af50:	cmp	x0, #0x1
  43af54:	b.eq	43aef4 <ferror@plt+0x38674>  // b.none
  43af58:	mov	w0, #0xffffffff            	// #-1
  43af5c:	ldp	x19, x20, [sp, #16]
  43af60:	ldp	x21, x22, [sp, #32]
  43af64:	ldp	x29, x30, [sp], #64
  43af68:	ret
  43af6c:	mov	w0, #0x0                   	// #0
  43af70:	ldp	x19, x20, [sp, #16]
  43af74:	ldp	x21, x22, [sp, #32]
  43af78:	ldp	x29, x30, [sp], #64
  43af7c:	ret
  43af80:	stp	x29, x30, [sp, #-96]!
  43af84:	mov	x3, x1
  43af88:	mov	x29, sp
  43af8c:	stp	x21, x22, [sp, #32]
  43af90:	mov	x21, x1
  43af94:	mov	x22, x2
  43af98:	mov	x1, #0x1                   	// #1
  43af9c:	mov	x2, #0x4                   	// #4
  43afa0:	stp	x23, x24, [sp, #48]
  43afa4:	mov	x24, x0
  43afa8:	add	x0, sp, #0x54
  43afac:	bl	402580 <fread_unlocked@plt>
  43afb0:	cmp	x0, #0x4
  43afb4:	b.ne	43b13c <ferror@plt+0x388bc>  // b.any
  43afb8:	mov	x0, #0x200                 	// #512
  43afbc:	stp	x19, x20, [sp, #16]
  43afc0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43afc4:	ldr	w1, [sp, #84]
  43afc8:	mov	x19, x0
  43afcc:	cbz	w1, 43b0f4 <ferror@plt+0x38874>
  43afd0:	mov	x23, #0x200                 	// #512
  43afd4:	mov	w20, #0x0                   	// #0
  43afd8:	str	x25, [sp, #64]
  43afdc:	b	43b024 <ferror@plt+0x387a4>
  43afe0:	mov	x1, #0x1                   	// #1
  43afe4:	mov	x3, x21
  43afe8:	mov	x0, x19
  43afec:	bl	402580 <fread_unlocked@plt>
  43aff0:	ldr	x1, [sp, #88]
  43aff4:	cmp	x0, x1
  43aff8:	b.ne	43b088 <ferror@plt+0x38808>  // b.any
  43affc:	strb	wzr, [x19, x0]
  43b000:	cbz	x22, 43b014 <ferror@plt+0x38794>
  43b004:	mov	x1, x22
  43b008:	mov	x0, x19
  43b00c:	bl	45b028 <ferror@plt+0x587a8>
  43b010:	cbnz	w0, 43b0ac <ferror@plt+0x3882c>
  43b014:	ldr	w0, [sp, #84]
  43b018:	add	w20, w20, #0x1
  43b01c:	cmp	w0, w20
  43b020:	b.ls	43b0f0 <ferror@plt+0x38870>  // b.plast
  43b024:	mov	x3, x21
  43b028:	add	x0, sp, #0x58
  43b02c:	mov	x2, #0x8                   	// #8
  43b030:	mov	x1, #0x1                   	// #1
  43b034:	bl	402580 <fread_unlocked@plt>
  43b038:	cmp	x0, #0x8
  43b03c:	b.ne	43b088 <ferror@plt+0x38808>  // b.any
  43b040:	ldr	x2, [sp, #88]
  43b044:	add	x0, x2, #0x1
  43b048:	cmp	x0, x23
  43b04c:	b.ls	43afe0 <ferror@plt+0x38760>  // b.plast
  43b050:	add	x23, x2, #0x80
  43b054:	mov	x0, x19
  43b058:	mov	x1, x23
  43b05c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43b060:	ldr	x2, [sp, #88]
  43b064:	mov	x19, x0
  43b068:	mov	x1, #0x1                   	// #1
  43b06c:	mov	x3, x21
  43b070:	mov	x0, x19
  43b074:	bl	402580 <fread_unlocked@plt>
  43b078:	ldr	x1, [sp, #88]
  43b07c:	cmp	x0, x1
  43b080:	b.eq	43affc <ferror@plt+0x3877c>  // b.none
  43b084:	nop
  43b088:	mov	x0, x19
  43b08c:	bl	402640 <free@plt>
  43b090:	ldp	x19, x20, [sp, #16]
  43b094:	mov	w0, #0xffffffff            	// #-1
  43b098:	ldr	x25, [sp, #64]
  43b09c:	ldp	x21, x22, [sp, #32]
  43b0a0:	ldp	x23, x24, [sp, #48]
  43b0a4:	ldp	x29, x30, [sp], #96
  43b0a8:	ret
  43b0ac:	mov	x1, x19
  43b0b0:	mov	x0, x24
  43b0b4:	bl	43a420 <ferror@plt+0x37ba0>
  43b0b8:	bl	43a518 <ferror@plt+0x37c98>
  43b0bc:	mov	x25, x0
  43b0c0:	ldp	w1, w0, [x24, #24]
  43b0c4:	cmp	w1, w0
  43b0c8:	b.eq	43b114 <ferror@plt+0x38894>  // b.none
  43b0cc:	ldr	x0, [x24, #16]
  43b0d0:	add	w2, w1, #0x1
  43b0d4:	str	w2, [x24, #24]
  43b0d8:	add	w20, w20, #0x1
  43b0dc:	str	x25, [x0, w1, uxtw #3]
  43b0e0:	ldr	w0, [sp, #84]
  43b0e4:	cmp	w0, w20
  43b0e8:	b.hi	43b024 <ferror@plt+0x387a4>  // b.pmore
  43b0ec:	nop
  43b0f0:	ldr	x25, [sp, #64]
  43b0f4:	mov	x0, x19
  43b0f8:	bl	402640 <free@plt>
  43b0fc:	mov	w0, #0x0                   	// #0
  43b100:	ldp	x19, x20, [sp, #16]
  43b104:	ldp	x21, x22, [sp, #32]
  43b108:	ldp	x23, x24, [sp, #48]
  43b10c:	ldp	x29, x30, [sp], #96
  43b110:	ret
  43b114:	add	w1, w1, #0x4
  43b118:	ldr	x0, [x24, #16]
  43b11c:	lsl	w1, w1, #1
  43b120:	mov	x2, x1
  43b124:	str	w2, [x24, #28]
  43b128:	lsl	x1, x1, #3
  43b12c:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43b130:	str	x0, [x24, #16]
  43b134:	ldr	w1, [x24, #24]
  43b138:	b	43b0d0 <ferror@plt+0x38850>
  43b13c:	mov	w0, #0xffffffff            	// #-1
  43b140:	b	43b09c <ferror@plt+0x3881c>
  43b144:	nop
  43b148:	stp	x29, x30, [sp, #-48]!
  43b14c:	mov	x1, #0x90                  	// #144
  43b150:	mov	x29, sp
  43b154:	stp	x19, x20, [sp, #16]
  43b158:	mov	w20, w0
  43b15c:	mov	x0, #0x1                   	// #1
  43b160:	str	x21, [sp, #32]
  43b164:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  43b168:	adrp	x4, 402000 <memcpy@plt-0x220>
  43b16c:	mov	x19, x0
  43b170:	add	x4, x4, #0x640
  43b174:	adrp	x3, 45c000 <ferror@plt+0x59780>
  43b178:	add	x3, x3, #0xa18
  43b17c:	mov	x2, #0x0                   	// #0
  43b180:	mov	w21, #0x1                   	// #1
  43b184:	mov	x1, #0x0                   	// #0
  43b188:	bl	45c538 <_obstack_begin@@Base>
  43b18c:	lsl	w20, w21, w20
  43b190:	mov	x1, #0x8                   	// #8
  43b194:	mov	w0, w20
  43b198:	str	xzr, [x19, #48]
  43b19c:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  43b1a0:	mov	x1, x0
  43b1a4:	mov	x0, x19
  43b1a8:	str	x1, [x19, #88]
  43b1ac:	str	w20, [x19, #112]
  43b1b0:	strb	w21, [x19, #136]
  43b1b4:	ldp	x19, x20, [sp, #16]
  43b1b8:	ldr	x21, [sp, #32]
  43b1bc:	ldp	x29, x30, [sp], #48
  43b1c0:	ret
  43b1c4:	nop
  43b1c8:	stp	x29, x30, [sp, #-32]!
  43b1cc:	mov	x1, #0x0                   	// #0
  43b1d0:	mov	x29, sp
  43b1d4:	str	x19, [sp, #16]
  43b1d8:	mov	x19, x0
  43b1dc:	bl	45c878 <_obstack_free@@Base>
  43b1e0:	ldrb	w0, [x19, #136]
  43b1e4:	cbnz	w0, 43b1f8 <ferror@plt+0x38978>
  43b1e8:	mov	x0, x19
  43b1ec:	ldr	x19, [sp, #16]
  43b1f0:	ldp	x29, x30, [sp], #32
  43b1f4:	b	402640 <free@plt>
  43b1f8:	ldr	x0, [x19, #88]
  43b1fc:	bl	402640 <free@plt>
  43b200:	mov	x0, x19
  43b204:	ldr	x19, [sp, #16]
  43b208:	ldp	x29, x30, [sp], #32
  43b20c:	b	402640 <free@plt>
  43b210:	stp	x29, x30, [sp, #-128]!
  43b214:	mov	x29, sp
  43b218:	ldr	w8, [x0, #112]
  43b21c:	stp	x23, x24, [sp, #48]
  43b220:	mov	x23, x2
  43b224:	sub	w24, w8, #0x1
  43b228:	stp	x27, x28, [sp, #80]
  43b22c:	mov	w27, w3
  43b230:	ldr	x28, [x0, #88]
  43b234:	stp	x25, x26, [sp, #64]
  43b238:	and	w25, w24, w3
  43b23c:	stp	x21, x22, [sp, #32]
  43b240:	mov	x22, x0
  43b244:	ldr	w0, [x0, #128]
  43b248:	stp	x19, x20, [sp, #16]
  43b24c:	and	w19, w24, w3
  43b250:	add	w0, w0, #0x1
  43b254:	ldr	x20, [x28, x25, lsl #3]
  43b258:	str	x1, [sp, #104]
  43b25c:	str	w0, [x22, #128]
  43b260:	cbz	x20, 43b47c <ferror@plt+0x38bfc>
  43b264:	cmn	x20, #0x1
  43b268:	b.eq	43b418 <ferror@plt+0x38b98>  // b.none
  43b26c:	ldr	w0, [x20, #12]
  43b270:	mov	w3, w8
  43b274:	cmp	w0, w27
  43b278:	b.eq	43b554 <ferror@plt+0x38cd4>  // b.none
  43b27c:	add	w26, w27, w27, lsl #4
  43b280:	ldr	w21, [x22, #132]
  43b284:	and	w26, w26, w24
  43b288:	orr	w26, w26, #0x1
  43b28c:	add	w0, w21, #0x1
  43b290:	add	w5, w19, w26
  43b294:	str	w0, [x22, #132]
  43b298:	and	w0, w24, w5
  43b29c:	and	w19, w24, w5
  43b2a0:	lsl	x25, x0, #3
  43b2a4:	ldr	x20, [x28, x0, lsl #3]
  43b2a8:	cbz	x20, 43b310 <ferror@plt+0x38a90>
  43b2ac:	add	w21, w21, #0x2
  43b2b0:	b	43b2e0 <ferror@plt+0x38a60>
  43b2b4:	ldr	w0, [x20, #12]
  43b2b8:	cmp	w0, w27
  43b2bc:	b.eq	43b420 <ferror@plt+0x38ba0>  // b.none
  43b2c0:	add	w5, w26, w19
  43b2c4:	and	w6, w24, w5
  43b2c8:	and	w19, w24, w5
  43b2cc:	lsl	x25, x6, #3
  43b2d0:	ldr	x20, [x28, x6, lsl #3]
  43b2d4:	str	w21, [x22, #132]
  43b2d8:	add	w21, w21, #0x1
  43b2dc:	cbz	x20, 43b310 <ferror@plt+0x38a90>
  43b2e0:	cmn	x20, #0x1
  43b2e4:	b.ne	43b2b4 <ferror@plt+0x38a34>  // b.any
  43b2e8:	add	w5, w26, w19
  43b2ec:	cmp	w8, w3
  43b2f0:	and	w6, w24, w5
  43b2f4:	csel	w3, w3, w19, eq  // eq = none
  43b2f8:	and	w19, w24, w5
  43b2fc:	lsl	x25, x6, #3
  43b300:	ldr	x20, [x28, x6, lsl #3]
  43b304:	str	w21, [x22, #132]
  43b308:	add	w21, w21, #0x1
  43b30c:	cbnz	x20, 43b2e0 <ferror@plt+0x38a60>
  43b310:	cbz	w4, 43b484 <ferror@plt+0x38c04>
  43b314:	cmp	w8, w3
  43b318:	ubfiz	x3, x3, #3, #32
  43b31c:	csel	x25, x3, x25, ne  // ne = any
  43b320:	ldr	x1, [x22, #96]
  43b324:	mov	x0, x22
  43b328:	blr	x1
  43b32c:	mov	x20, x0
  43b330:	ldr	x1, [x22, #88]
  43b334:	add	x0, x23, #0x1
  43b338:	ldr	x2, [x22, #104]
  43b33c:	str	x20, [x1, x25]
  43b340:	stp	w23, w27, [x20, #8]
  43b344:	cbz	x2, 43b4a8 <ferror@plt+0x38c28>
  43b348:	blr	x2
  43b34c:	mov	x19, x0
  43b350:	ldr	x1, [sp, #104]
  43b354:	mov	x2, x23
  43b358:	bl	402220 <memcpy@plt>
  43b35c:	strb	wzr, [x19, x23]
  43b360:	str	x19, [x20]
  43b364:	ldp	w0, w1, [x22, #112]
  43b368:	add	w1, w1, #0x1
  43b36c:	str	w1, [x22, #116]
  43b370:	lsl	w21, w0, #1
  43b374:	add	w0, w21, w0
  43b378:	cmp	w0, w1, lsl #2
  43b37c:	b.hi	43b3f8 <ferror@plt+0x38b78>  // b.pmore
  43b380:	mov	w0, w21
  43b384:	mov	x1, #0x8                   	// #8
  43b388:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  43b38c:	mov	x19, x0
  43b390:	ldr	x9, [x22, #88]
  43b394:	sub	w3, w21, #0x1
  43b398:	ldr	w8, [x22, #112]
  43b39c:	mov	x5, x9
  43b3a0:	add	x8, x9, x8, lsl #3
  43b3a4:	nop
  43b3a8:	ldr	x7, [x5]
  43b3ac:	sub	x1, x7, #0x1
  43b3b0:	cmn	x1, #0x3
  43b3b4:	b.hi	43b3d4 <ferror@plt+0x38b54>  // b.pmore
  43b3b8:	ldr	w2, [x7, #12]
  43b3bc:	and	w4, w3, w2
  43b3c0:	and	w1, w3, w2
  43b3c4:	add	x6, x19, x4, lsl #3
  43b3c8:	ldr	x4, [x19, x4, lsl #3]
  43b3cc:	cbnz	x4, 43b454 <ferror@plt+0x38bd4>
  43b3d0:	str	x7, [x6]
  43b3d4:	add	x5, x5, #0x8
  43b3d8:	cmp	x8, x5
  43b3dc:	b.hi	43b3a8 <ferror@plt+0x38b28>  // b.pmore
  43b3e0:	ldrb	w0, [x22, #136]
  43b3e4:	cbnz	w0, 43b524 <ferror@plt+0x38ca4>
  43b3e8:	mov	w0, #0x1                   	// #1
  43b3ec:	str	x19, [x22, #88]
  43b3f0:	str	w21, [x22, #112]
  43b3f4:	strb	w0, [x22, #136]
  43b3f8:	mov	x0, x20
  43b3fc:	ldp	x19, x20, [sp, #16]
  43b400:	ldp	x21, x22, [sp, #32]
  43b404:	ldp	x23, x24, [sp, #48]
  43b408:	ldp	x25, x26, [sp, #64]
  43b40c:	ldp	x27, x28, [sp, #80]
  43b410:	ldp	x29, x30, [sp], #128
  43b414:	ret
  43b418:	mov	w3, w19
  43b41c:	b	43b27c <ferror@plt+0x389fc>
  43b420:	ldr	w0, [x20, #8]
  43b424:	cmp	w0, w23
  43b428:	b.ne	43b2c0 <ferror@plt+0x38a40>  // b.any
  43b42c:	ldr	x0, [x20]
  43b430:	mov	x2, x23
  43b434:	ldr	x1, [sp, #104]
  43b438:	stp	w8, w3, [sp, #116]
  43b43c:	str	w4, [sp, #124]
  43b440:	bl	402590 <memcmp@plt>
  43b444:	ldp	w8, w3, [sp, #116]
  43b448:	ldr	w4, [sp, #124]
  43b44c:	cbnz	w0, 43b2c0 <ferror@plt+0x38a40>
  43b450:	b	43b3f8 <ferror@plt+0x38b78>
  43b454:	add	w2, w2, w2, lsl #4
  43b458:	and	w4, w2, w3
  43b45c:	orr	w4, w4, #0x1
  43b460:	add	w1, w4, w1
  43b464:	and	w2, w3, w1
  43b468:	and	w1, w3, w1
  43b46c:	add	x6, x19, x2, lsl #3
  43b470:	ldr	x2, [x19, x2, lsl #3]
  43b474:	cbnz	x2, 43b460 <ferror@plt+0x38be0>
  43b478:	b	43b3d0 <ferror@plt+0x38b50>
  43b47c:	lsl	x25, x25, #3
  43b480:	cbnz	w4, 43b320 <ferror@plt+0x38aa0>
  43b484:	mov	x20, #0x0                   	// #0
  43b488:	mov	x0, x20
  43b48c:	ldp	x19, x20, [sp, #16]
  43b490:	ldp	x21, x22, [sp, #32]
  43b494:	ldp	x23, x24, [sp, #48]
  43b498:	ldp	x25, x26, [sp, #64]
  43b49c:	ldp	x27, x28, [sp, #80]
  43b4a0:	ldp	x29, x30, [sp], #128
  43b4a4:	ret
  43b4a8:	ldp	x2, x1, [x22, #24]
  43b4ac:	sub	x1, x1, x2
  43b4b0:	cmp	x1, x0
  43b4b4:	b.cc	43b530 <ferror@plt+0x38cb0>  // b.lo, b.ul, b.last
  43b4b8:	ldr	x1, [sp, #104]
  43b4bc:	mov	x0, x2
  43b4c0:	mov	x2, x23
  43b4c4:	bl	402220 <memcpy@plt>
  43b4c8:	ldr	x1, [x22, #24]
  43b4cc:	add	x0, x1, x23
  43b4d0:	add	x0, x0, #0x1
  43b4d4:	str	x0, [x22, #24]
  43b4d8:	strb	wzr, [x1, x23]
  43b4dc:	ldp	x3, x2, [x22, #16]
  43b4e0:	cmp	x2, x3
  43b4e4:	b.eq	43b544 <ferror@plt+0x38cc4>  // b.none
  43b4e8:	ldr	x0, [x22, #48]
  43b4ec:	ldr	x1, [x22, #8]
  43b4f0:	add	x2, x2, x0
  43b4f4:	ldr	x4, [x22, #32]
  43b4f8:	bic	x0, x2, x0
  43b4fc:	str	x0, [x22, #24]
  43b500:	sub	x2, x0, x1
  43b504:	sub	x1, x4, x1
  43b508:	cmp	x2, x1
  43b50c:	b.ls	43b518 <ferror@plt+0x38c98>  // b.plast
  43b510:	mov	x0, x4
  43b514:	str	x4, [x22, #24]
  43b518:	str	x0, [x22, #16]
  43b51c:	str	x3, [x20]
  43b520:	b	43b364 <ferror@plt+0x38ae4>
  43b524:	mov	x0, x9
  43b528:	bl	402640 <free@plt>
  43b52c:	b	43b3e8 <ferror@plt+0x38b68>
  43b530:	mov	x1, x0
  43b534:	mov	x0, x22
  43b538:	bl	45c6e0 <_obstack_newchunk@@Base>
  43b53c:	ldr	x2, [x22, #24]
  43b540:	b	43b4b8 <ferror@plt+0x38c38>
  43b544:	ldrb	w0, [x22, #80]
  43b548:	orr	w0, w0, #0x2
  43b54c:	strb	w0, [x22, #80]
  43b550:	b	43b4e8 <ferror@plt+0x38c68>
  43b554:	ldr	w0, [x20, #8]
  43b558:	cmp	w0, w2
  43b55c:	b.ne	43b27c <ferror@plt+0x389fc>  // b.any
  43b560:	ldr	x0, [x20]
  43b564:	stp	w8, w4, [sp, #116]
  43b568:	bl	402590 <memcmp@plt>
  43b56c:	cbz	w0, 43b3f8 <ferror@plt+0x38b78>
  43b570:	ldp	w8, w4, [sp, #116]
  43b574:	mov	w3, w8
  43b578:	b	43b27c <ferror@plt+0x389fc>
  43b57c:	nop
  43b580:	mov	w4, w3
  43b584:	cbz	x2, 43b5b8 <ferror@plt+0x38d38>
  43b588:	add	x9, x1, x2
  43b58c:	mov	x6, x1
  43b590:	mov	w5, #0x0                   	// #0
  43b594:	mov	w8, #0x43                  	// #67
  43b598:	mul	w5, w5, w8
  43b59c:	ldrb	w7, [x6], #1
  43b5a0:	sub	w5, w5, #0x71
  43b5a4:	cmp	x6, x9
  43b5a8:	add	w5, w7, w5
  43b5ac:	b.ne	43b598 <ferror@plt+0x38d18>  // b.any
  43b5b0:	add	w3, w5, w2
  43b5b4:	b	43b210 <ferror@plt+0x38990>
  43b5b8:	mov	w5, #0x0                   	// #0
  43b5bc:	add	w3, w5, w2
  43b5c0:	b	43b210 <ferror@plt+0x38990>
  43b5c4:	nop
  43b5c8:	stp	x29, x30, [sp, #-64]!
  43b5cc:	mov	x29, sp
  43b5d0:	stp	x19, x20, [sp, #16]
  43b5d4:	mov	x20, x2
  43b5d8:	ldr	x19, [x0, #88]
  43b5dc:	stp	x21, x22, [sp, #32]
  43b5e0:	ldr	w21, [x0, #112]
  43b5e4:	mov	x22, x0
  43b5e8:	str	x23, [sp, #48]
  43b5ec:	mov	x23, x1
  43b5f0:	add	x21, x19, x21, lsl #3
  43b5f4:	nop
  43b5f8:	ldr	x1, [x19]
  43b5fc:	mov	x2, x20
  43b600:	add	x19, x19, #0x8
  43b604:	sub	x3, x1, #0x1
  43b608:	cmn	x3, #0x3
  43b60c:	b.hi	43b61c <ferror@plt+0x38d9c>  // b.pmore
  43b610:	ldr	x0, [x22, #120]
  43b614:	blr	x23
  43b618:	cbz	w0, 43b624 <ferror@plt+0x38da4>
  43b61c:	cmp	x21, x19
  43b620:	b.hi	43b5f8 <ferror@plt+0x38d78>  // b.pmore
  43b624:	ldp	x19, x20, [sp, #16]
  43b628:	ldp	x21, x22, [sp, #32]
  43b62c:	ldr	x23, [sp, #48]
  43b630:	ldp	x29, x30, [sp], #64
  43b634:	ret
  43b638:	stp	x29, x30, [sp, #-64]!
  43b63c:	mov	x29, sp
  43b640:	stp	x19, x20, [sp, #16]
  43b644:	ldr	w20, [x0, #112]
  43b648:	ldr	x19, [x0, #88]
  43b64c:	stp	x21, x22, [sp, #32]
  43b650:	mov	x22, x0
  43b654:	mov	x21, x2
  43b658:	stp	x23, x24, [sp, #48]
  43b65c:	add	x20, x19, x20, lsl #3
  43b660:	mov	x23, x1
  43b664:	mov	x24, #0xffffffffffffffff    	// #-1
  43b668:	ldr	x1, [x19]
  43b66c:	mov	x2, x21
  43b670:	sub	x3, x1, #0x1
  43b674:	cmn	x3, #0x3
  43b678:	b.hi	43b68c <ferror@plt+0x38e0c>  // b.pmore
  43b67c:	ldr	x0, [x22, #120]
  43b680:	blr	x23
  43b684:	cbz	w0, 43b68c <ferror@plt+0x38e0c>
  43b688:	str	x24, [x19]
  43b68c:	add	x19, x19, #0x8
  43b690:	cmp	x20, x19
  43b694:	b.hi	43b668 <ferror@plt+0x38de8>  // b.pmore
  43b698:	ldp	x19, x20, [sp, #16]
  43b69c:	ldp	x21, x22, [sp, #32]
  43b6a0:	ldp	x23, x24, [sp, #48]
  43b6a4:	ldp	x29, x30, [sp], #64
  43b6a8:	ret
  43b6ac:	nop
  43b6b0:	stp	x29, x30, [sp, #-64]!
  43b6b4:	mov	x29, sp
  43b6b8:	stp	x19, x20, [sp, #16]
  43b6bc:	mov	x19, x0
  43b6c0:	ldrb	w0, [x0, #136]
  43b6c4:	stp	x21, x22, [sp, #32]
  43b6c8:	mov	w20, w3
  43b6cc:	mov	x22, x1
  43b6d0:	str	x23, [sp, #48]
  43b6d4:	mov	w21, w2
  43b6d8:	and	w23, w4, #0xff
  43b6dc:	cbnz	w0, 43b700 <ferror@plt+0x38e80>
  43b6e0:	strb	w23, [x19, #136]
  43b6e4:	ldr	x23, [sp, #48]
  43b6e8:	str	x22, [x19, #88]
  43b6ec:	stp	w21, w20, [x19, #112]
  43b6f0:	ldp	x19, x20, [sp, #16]
  43b6f4:	ldp	x21, x22, [sp, #32]
  43b6f8:	ldp	x29, x30, [sp], #64
  43b6fc:	ret
  43b700:	ldr	x0, [x19, #88]
  43b704:	bl	402640 <free@plt>
  43b708:	strb	w23, [x19, #136]
  43b70c:	ldr	x23, [sp, #48]
  43b710:	str	x22, [x19, #88]
  43b714:	stp	w21, w20, [x19, #112]
  43b718:	ldp	x19, x20, [sp, #16]
  43b71c:	ldp	x21, x22, [sp, #32]
  43b720:	ldp	x29, x30, [sp], #64
  43b724:	ret
  43b728:	stp	x29, x30, [sp, #-112]!
  43b72c:	mov	x29, sp
  43b730:	stp	x23, x24, [sp, #48]
  43b734:	ldr	w24, [x0, #112]
  43b738:	ldr	x1, [x0, #88]
  43b73c:	stp	x19, x20, [sp, #16]
  43b740:	lsl	x24, x24, #3
  43b744:	mov	x20, #0x0                   	// #0
  43b748:	mov	x19, #0x0                   	// #0
  43b74c:	stp	x21, x22, [sp, #32]
  43b750:	mov	x22, x0
  43b754:	mov	x21, #0x0                   	// #0
  43b758:	add	x0, x1, x24
  43b75c:	stp	x25, x26, [sp, #64]
  43b760:	mov	x25, #0x0                   	// #0
  43b764:	stp	d8, d9, [sp, #80]
  43b768:	movi	d8, #0x0
  43b76c:	str	d10, [sp, #96]
  43b770:	b	43b7a4 <ferror@plt+0x38f24>
  43b774:	cbz	x2, 43b798 <ferror@plt+0x38f18>
  43b778:	ldr	w2, [x2, #8]
  43b77c:	add	x21, x21, #0x1
  43b780:	mov	w3, w2
  43b784:	ucvtf	d0, w2
  43b788:	cmp	x20, x3
  43b78c:	csel	x20, x20, x3, cs  // cs = hs, nlast
  43b790:	add	x19, x19, x3
  43b794:	fmadd	d8, d0, d0, d8
  43b798:	add	x1, x1, #0x8
  43b79c:	cmp	x0, x1
  43b7a0:	b.ls	43b7c0 <ferror@plt+0x38f40>  // b.plast
  43b7a4:	ldr	x2, [x1]
  43b7a8:	cmn	x2, #0x1
  43b7ac:	b.ne	43b774 <ferror@plt+0x38ef4>  // b.any
  43b7b0:	add	x1, x1, #0x8
  43b7b4:	add	x25, x25, #0x1
  43b7b8:	cmp	x0, x1
  43b7bc:	b.hi	43b7a4 <ferror@plt+0x38f24>  // b.pmore
  43b7c0:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  43b7c4:	ldr	w26, [x22, #116]
  43b7c8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b7cc:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b7d0:	ldr	x0, [x23, #1312]
  43b7d4:	add	x2, x2, #0xe98
  43b7d8:	add	x1, x1, #0xea8
  43b7dc:	mov	w3, w26
  43b7e0:	bl	402840 <fprintf@plt>
  43b7e4:	ucvtf	d0, x21
  43b7e8:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  43b7ec:	fmov	d1, x0
  43b7f0:	ucvtf	d10, w26
  43b7f4:	ldr	x0, [x23, #1312]
  43b7f8:	mov	x3, x21
  43b7fc:	fmul	d0, d0, d1
  43b800:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b804:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b808:	add	x2, x2, #0xec0
  43b80c:	add	x1, x1, #0xed0
  43b810:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b814:	add	x21, x21, #0xef0
  43b818:	fdiv	d0, d0, d10
  43b81c:	bl	402840 <fprintf@plt>
  43b820:	ldr	w3, [x22, #112]
  43b824:	mov	x1, x21
  43b828:	ldr	x0, [x23, #1312]
  43b82c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b830:	add	x2, x2, #0xee8
  43b834:	bl	402840 <fprintf@plt>
  43b838:	ldr	x0, [x23, #1312]
  43b83c:	mov	x3, x25
  43b840:	mov	x1, x21
  43b844:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b848:	add	x2, x2, #0xf00
  43b84c:	bl	402840 <fprintf@plt>
  43b850:	ldr	x0, [x22, #104]
  43b854:	cbz	x0, 43b9c4 <ferror@plt+0x39144>
  43b858:	mov	x0, #0x27ff                	// #10239
  43b85c:	cmp	x19, x0
  43b860:	ldr	x0, [x23, #1312]
  43b864:	b.hi	43b9ac <ferror@plt+0x3912c>  // b.pmore
  43b868:	mov	x3, x19
  43b86c:	mov	w4, #0x20                  	// #32
  43b870:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b874:	add	x25, x25, #0xf20
  43b878:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b87c:	mov	x1, x25
  43b880:	add	x2, x2, #0xf10
  43b884:	bl	402840 <fprintf@plt>
  43b888:	mov	x0, #0x27ff                	// #10239
  43b88c:	mov	w4, #0x20                  	// #32
  43b890:	cmp	x24, x0
  43b894:	ldr	x0, [x23, #1312]
  43b898:	b.ls	43b8b0 <ferror@plt+0x39030>  // b.plast
  43b89c:	mov	w1, #0x9fffff              	// #10485759
  43b8a0:	cmp	x24, x1
  43b8a4:	b.hi	43ba2c <ferror@plt+0x391ac>  // b.pmore
  43b8a8:	lsr	x24, x24, #10
  43b8ac:	mov	w4, #0x6b                  	// #107
  43b8b0:	mov	x3, x24
  43b8b4:	mov	x1, x25
  43b8b8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b8bc:	add	x2, x2, #0xf60
  43b8c0:	bl	402840 <fprintf@plt>
  43b8c4:	ldp	w1, w2, [x22, #128]
  43b8c8:	ucvtf	d9, x19
  43b8cc:	ldr	x0, [x23, #1312]
  43b8d0:	ucvtf	d1, w2
  43b8d4:	ucvtf	d0, w1
  43b8d8:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b8dc:	fdiv	d9, d9, d10
  43b8e0:	add	x19, x19, #0xf80
  43b8e4:	mov	x1, x19
  43b8e8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b8ec:	add	x2, x2, #0xf70
  43b8f0:	fdiv	d0, d1, d0
  43b8f4:	bl	402840 <fprintf@plt>
  43b8f8:	ldr	w2, [x22, #128]
  43b8fc:	mov	x1, x19
  43b900:	ldr	x0, [x23, #1312]
  43b904:	ucvtf	d0, w2
  43b908:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b90c:	add	x2, x2, #0xf90
  43b910:	fdiv	d0, d10, d0
  43b914:	bl	402840 <fprintf@plt>
  43b918:	fdiv	d8, d8, d10
  43b91c:	ldr	x0, [x23, #1312]
  43b920:	fmsub	d8, d9, d9, d8
  43b924:	fcmpe	d8, #0.0
  43b928:	b.mi	43ba74 <ferror@plt+0x391f4>  // b.first
  43b92c:	fcmp	d8, #0.0
  43b930:	movi	d1, #0x0
  43b934:	b.eq	43b960 <ferror@plt+0x390e0>  // b.none
  43b938:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43b93c:	fmov	d1, d8
  43b940:	ldr	d3, [x1, #8]
  43b944:	nop
  43b948:	fnmsub	d0, d1, d1, d8
  43b94c:	fadd	d2, d1, d1
  43b950:	fdiv	d0, d0, d2
  43b954:	fcmpe	d0, d3
  43b958:	fsub	d1, d1, d0
  43b95c:	b.gt	43b948 <ferror@plt+0x390c8>
  43b960:	fmov	d0, d9
  43b964:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b968:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b96c:	add	x2, x2, #0xfc8
  43b970:	add	x1, x1, #0xfd8
  43b974:	bl	402840 <fprintf@plt>
  43b978:	ldr	x0, [x23, #1312]
  43b97c:	mov	x3, x20
  43b980:	mov	x1, x21
  43b984:	ldr	d10, [sp, #96]
  43b988:	ldp	x19, x20, [sp, #16]
  43b98c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43b990:	ldp	x21, x22, [sp, #32]
  43b994:	add	x2, x2, #0xff8
  43b998:	ldp	x23, x24, [sp, #48]
  43b99c:	ldp	x25, x26, [sp, #64]
  43b9a0:	ldp	d8, d9, [sp, #80]
  43b9a4:	ldp	x29, x30, [sp], #112
  43b9a8:	b	402840 <fprintf@plt>
  43b9ac:	mov	w1, #0x9fffff              	// #10485759
  43b9b0:	cmp	x19, x1
  43b9b4:	b.hi	43ba38 <ferror@plt+0x391b8>  // b.pmore
  43b9b8:	lsr	x3, x19, #10
  43b9bc:	mov	w4, #0x6b                  	// #107
  43b9c0:	b	43b870 <ferror@plt+0x38ff0>
  43b9c4:	mov	x0, x22
  43b9c8:	bl	45c928 <_obstack_memory_used@@Base>
  43b9cc:	mov	x1, #0x27ff                	// #10239
  43b9d0:	sub	x5, x0, x19
  43b9d4:	cmp	x19, x1
  43b9d8:	ldr	x0, [x23, #1312]
  43b9dc:	b.hi	43ba44 <ferror@plt+0x391c4>  // b.pmore
  43b9e0:	mov	x3, x19
  43b9e4:	mov	w4, #0x20                  	// #32
  43b9e8:	mov	x1, #0x27ff                	// #10239
  43b9ec:	mov	w6, #0x20                  	// #32
  43b9f0:	cmp	x5, x1
  43b9f4:	b.ls	43ba0c <ferror@plt+0x3918c>  // b.plast
  43b9f8:	mov	w1, #0x9fffff              	// #10485759
  43b9fc:	cmp	x5, x1
  43ba00:	b.hi	43ba5c <ferror@plt+0x391dc>  // b.pmore
  43ba04:	lsr	x5, x5, #10
  43ba08:	mov	w6, #0x6b                  	// #107
  43ba0c:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43ba10:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43ba14:	add	x2, x2, #0xf30
  43ba18:	add	x1, x1, #0xf40
  43ba1c:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43ba20:	bl	402840 <fprintf@plt>
  43ba24:	add	x25, x25, #0xf20
  43ba28:	b	43b888 <ferror@plt+0x39008>
  43ba2c:	lsr	x24, x24, #20
  43ba30:	mov	w4, #0x4d                  	// #77
  43ba34:	b	43b8b0 <ferror@plt+0x39030>
  43ba38:	lsr	x3, x19, #20
  43ba3c:	mov	w4, #0x4d                  	// #77
  43ba40:	b	43b870 <ferror@plt+0x38ff0>
  43ba44:	mov	w1, #0x9fffff              	// #10485759
  43ba48:	cmp	x19, x1
  43ba4c:	b.hi	43ba68 <ferror@plt+0x391e8>  // b.pmore
  43ba50:	lsr	x3, x19, #10
  43ba54:	mov	w4, #0x6b                  	// #107
  43ba58:	b	43b9e8 <ferror@plt+0x39168>
  43ba5c:	lsr	x5, x5, #20
  43ba60:	mov	w6, #0x4d                  	// #77
  43ba64:	b	43ba0c <ferror@plt+0x3918c>
  43ba68:	lsr	x3, x19, #20
  43ba6c:	mov	w4, #0x4d                  	// #77
  43ba70:	b	43b9e8 <ferror@plt+0x39168>
  43ba74:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43ba78:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43ba7c:	add	x2, x2, #0xfa0
  43ba80:	add	x0, x0, #0xfb0
  43ba84:	mov	w1, #0x165                 	// #357
  43ba88:	bl	4028b0 <ferror@plt+0x30>
  43ba8c:	nop
  43ba90:	stp	x29, x30, [sp, #-80]!
  43ba94:	mov	x29, sp
  43ba98:	stp	x19, x20, [sp, #16]
  43ba9c:	mov	x20, x1
  43baa0:	mov	x19, x0
  43baa4:	ldr	x1, [x0, #136]
  43baa8:	stp	x21, x22, [sp, #32]
  43baac:	mov	w22, w2
  43bab0:	ldr	x2, [x0, #40]
  43bab4:	ldr	x21, [x0]
  43bab8:	ldr	x1, [x1, #8]
  43babc:	ldr	w2, [x2, #60]
  43bac0:	str	x23, [sp, #48]
  43bac4:	str	x20, [x21]
  43bac8:	cbz	x1, 43bc24 <ferror@plt+0x393a4>
  43bacc:	ldrb	w0, [x20, #1]
  43bad0:	cmp	w0, #0x2f
  43bad4:	cinc	x5, x20, eq  // eq = none
  43bad8:	add	x5, x5, #0x1
  43badc:	mov	x3, x5
  43bae0:	ldrb	w4, [x3], #1
  43bae4:	cmp	w4, #0x2f
  43bae8:	b.eq	43bb0c <ferror@plt+0x3928c>  // b.none
  43baec:	nop
  43baf0:	cmp	w4, #0xa
  43baf4:	b.eq	43bb54 <ferror@plt+0x392d4>  // b.none
  43baf8:	mov	x5, x3
  43bafc:	mov	x3, x5
  43bb00:	ldrb	w4, [x3], #1
  43bb04:	cmp	w4, #0x2f
  43bb08:	b.ne	43baf0 <ferror@plt+0x39270>  // b.any
  43bb0c:	ldurb	w0, [x3, #-2]
  43bb10:	cmp	w0, #0x2a
  43bb14:	b.ne	43baf8 <ferror@plt+0x39278>  // b.any
  43bb18:	str	x3, [x21]
  43bb1c:	mov	w23, #0x0                   	// #0
  43bb20:	ldr	x0, [x19, #1328]
  43bb24:	ldrb	w1, [x19, #16]
  43bb28:	cbnz	w1, 43bb80 <ferror@plt+0x39300>
  43bb2c:	ldrb	w1, [x19, #1123]
  43bb30:	cbz	w1, 43bb8c <ferror@plt+0x3930c>
  43bb34:	sub	x0, x0, #0x1
  43bb38:	str	x0, [x19, #1328]
  43bb3c:	ldr	x0, [x21]
  43bb40:	ldp	x19, x20, [sp, #16]
  43bb44:	ldp	x21, x22, [sp, #32]
  43bb48:	ldr	x23, [sp, #48]
  43bb4c:	ldp	x29, x30, [sp], #80
  43bb50:	ret
  43bb54:	str	x5, [x21]
  43bb58:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  43bb5c:	mov	x0, x19
  43bb60:	add	x4, x4, #0x6d8
  43bb64:	mov	w23, #0x1                   	// #1
  43bb68:	mov	w3, #0x0                   	// #0
  43bb6c:	mov	w1, #0x3                   	// #3
  43bb70:	bl	423290 <ferror@plt+0x20a10>
  43bb74:	ldrb	w1, [x19, #16]
  43bb78:	ldr	x0, [x19, #1328]
  43bb7c:	cbz	w1, 43bb2c <ferror@plt+0x392ac>
  43bb80:	cbz	w22, 43bbe8 <ferror@plt+0x39368>
  43bb84:	ldrb	w1, [x19, #1124]
  43bb88:	cbnz	w1, 43bb34 <ferror@plt+0x392b4>
  43bb8c:	ldr	x2, [x21]
  43bb90:	mov	x1, x20
  43bb94:	sub	x20, x2, x20
  43bb98:	mov	x2, x20
  43bb9c:	bl	402220 <memcpy@plt>
  43bba0:	ldr	x1, [x19, #1328]
  43bba4:	add	x0, x1, x20
  43bba8:	cbz	w23, 43bc08 <ferror@plt+0x39388>
  43bbac:	add	x0, x0, #0x1
  43bbb0:	str	x0, [x19, #1328]
  43bbb4:	mov	w0, #0x2a                  	// #42
  43bbb8:	strb	w0, [x1, x20]
  43bbbc:	mov	w1, #0x2f                  	// #47
  43bbc0:	ldr	x0, [x19, #1328]
  43bbc4:	add	x2, x0, #0x1
  43bbc8:	str	x2, [x19, #1328]
  43bbcc:	strb	w1, [x0]
  43bbd0:	ldr	x0, [x21]
  43bbd4:	ldp	x19, x20, [sp, #16]
  43bbd8:	ldp	x21, x22, [sp, #32]
  43bbdc:	ldr	x23, [sp, #48]
  43bbe0:	ldp	x29, x30, [sp], #80
  43bbe4:	ret
  43bbe8:	mov	w1, #0x20                  	// #32
  43bbec:	sturb	w1, [x0, #-1]
  43bbf0:	ldr	x0, [x21]
  43bbf4:	ldp	x19, x20, [sp, #16]
  43bbf8:	ldp	x21, x22, [sp, #32]
  43bbfc:	ldr	x23, [sp, #48]
  43bc00:	ldp	x29, x30, [sp], #80
  43bc04:	ret
  43bc08:	str	x0, [x19, #1328]
  43bc0c:	ldr	x0, [x21]
  43bc10:	ldp	x19, x20, [sp, #16]
  43bc14:	ldp	x21, x22, [sp, #32]
  43bc18:	ldr	x23, [sp, #48]
  43bc1c:	ldp	x29, x30, [sp], #80
  43bc20:	ret
  43bc24:	str	w2, [sp, #76]
  43bc28:	bl	42b9a0 <ferror@plt+0x29120>
  43bc2c:	ldr	w2, [sp, #76]
  43bc30:	ands	w23, w0, #0xff
  43bc34:	b.eq	43bb74 <ferror@plt+0x392f4>  // b.none
  43bc38:	b	43bb58 <ferror@plt+0x392d8>
  43bc3c:	nop
  43bc40:	stp	x29, x30, [sp, #-64]!
  43bc44:	mov	x29, sp
  43bc48:	stp	x21, x22, [sp, #32]
  43bc4c:	ldr	x21, [x0, #1328]
  43bc50:	str	x23, [sp, #48]
  43bc54:	mov	w23, w2
  43bc58:	ldrh	w2, [x1, #16]
  43bc5c:	stp	x19, x20, [sp, #16]
  43bc60:	mov	x20, x1
  43bc64:	mov	x19, x0
  43bc68:	ldr	x1, [x0, #1312]
  43bc6c:	sub	x21, x21, x1
  43bc70:	cbz	w2, 43bd0c <ferror@plt+0x3948c>
  43bc74:	ldr	x5, [x0, #56]
  43bc78:	add	x22, x21, #0xd
  43bc7c:	ldr	w4, [x20, #12]
  43bc80:	and	x22, x22, #0xfffffffffffffff8
  43bc84:	ldp	x3, x5, [x5, #16]
  43bc88:	add	x2, x4, x22
  43bc8c:	sub	x5, x5, x3
  43bc90:	cmp	x2, x5
  43bc94:	b.hi	43bcf0 <ferror@plt+0x39470>  // b.pmore
  43bc98:	add	x5, x3, x4
  43bc9c:	str	x3, [x20, #24]
  43bca0:	str	w21, [x3, x4]
  43bca4:	add	x0, x5, #0x6
  43bca8:	mov	x2, x21
  43bcac:	strh	w23, [x5, #4]
  43bcb0:	bl	402220 <memcpy@plt>
  43bcb4:	ldr	w0, [x20, #12]
  43bcb8:	ldr	x1, [x19, #1312]
  43bcbc:	str	x1, [x19, #1328]
  43bcc0:	add	w22, w0, w22
  43bcc4:	str	w22, [x20, #12]
  43bcc8:	cbnz	w23, 43bcdc <ferror@plt+0x3945c>
  43bccc:	ldr	x0, [x19, #56]
  43bcd0:	ldr	x1, [x0, #16]
  43bcd4:	add	x22, x1, w22, uxtw
  43bcd8:	str	x22, [x0, #16]
  43bcdc:	ldp	x19, x20, [sp, #16]
  43bce0:	ldp	x21, x22, [sp, #32]
  43bce4:	ldr	x23, [sp, #48]
  43bce8:	ldp	x29, x30, [sp], #64
  43bcec:	ret
  43bcf0:	add	x1, x0, #0x38
  43bcf4:	bl	42d2b0 <ferror@plt+0x2aa30>
  43bcf8:	ldr	x0, [x19, #56]
  43bcfc:	ldr	w4, [x20, #12]
  43bd00:	ldr	x1, [x19, #1312]
  43bd04:	ldr	x3, [x0, #16]
  43bd08:	b	43bc98 <ferror@plt+0x39418>
  43bd0c:	add	x1, x21, #0x1
  43bd10:	bl	42d3b8 <ferror@plt+0x2ab38>
  43bd14:	ldr	x1, [x19, #1312]
  43bd18:	mov	x19, x0
  43bd1c:	mov	x2, x21
  43bd20:	bl	402220 <memcpy@plt>
  43bd24:	mov	w0, #0xa                   	// #10
  43bd28:	strb	w0, [x19, x21]
  43bd2c:	str	w21, [x20, #12]
  43bd30:	str	x19, [x20, #24]
  43bd34:	ldp	x19, x20, [sp, #16]
  43bd38:	ldp	x21, x22, [sp, #32]
  43bd3c:	ldr	x23, [sp, #48]
  43bd40:	ldp	x29, x30, [sp], #64
  43bd44:	ret
  43bd48:	add	x2, x1, x2
  43bd4c:	fmov	d0, x1
  43bd50:	ldr	x1, [x0]
  43bd54:	dup	v0.2d, v0.d[0]
  43bd58:	ldr	x3, [x1]
  43bd5c:	ldr	x4, [x1, #32]
  43bd60:	str	x3, [x0, #1344]
  43bd64:	ldr	x3, [x1, #16]
  43bd68:	str	x1, [x0, #8]
  43bd6c:	str	x4, [x0, #1352]
  43bd70:	str	x3, [x0, #1360]
  43bd74:	str	x2, [x1, #32]
  43bd78:	str	q0, [x1]
  43bd7c:	strb	wzr, [x1, #104]
  43bd80:	ret
  43bd84:	nop
  43bd88:	ldr	x1, [x0, #8]
  43bd8c:	mov	w2, #0x1                   	// #1
  43bd90:	ldr	x4, [x0, #1344]
  43bd94:	ldr	x3, [x0, #1352]
  43bd98:	str	x4, [x1]
  43bd9c:	ldr	x4, [x0, #1360]
  43bda0:	str	x4, [x1, #8]
  43bda4:	str	x3, [x1, #32]
  43bda8:	strb	w2, [x1, #104]
  43bdac:	str	xzr, [x0, #8]
  43bdb0:	ret
  43bdb4:	nop
  43bdb8:	stp	x29, x30, [sp, #-272]!
  43bdbc:	mov	x29, sp
  43bdc0:	stp	x27, x28, [sp, #80]
  43bdc4:	mov	x28, x0
  43bdc8:	ldr	x0, [x0]
  43bdcc:	stp	x25, x26, [sp, #64]
  43bdd0:	ldr	x25, [x28, #136]
  43bdd4:	stp	x19, x20, [sp, #16]
  43bdd8:	stp	x21, x22, [sp, #32]
  43bddc:	stp	x23, x24, [sp, #48]
  43bde0:	str	x1, [sp, #136]
  43bde4:	ldrb	w1, [x28, #19]
  43bde8:	ldr	x3, [x0]
  43bdec:	str	x3, [sp, #112]
  43bdf0:	ldr	x0, [x0, #32]
  43bdf4:	stp	x3, x0, [x25, #16]
  43bdf8:	cmp	w1, #0x0
  43bdfc:	cset	w22, ne  // ne = any
  43be00:	ands	w23, w2, #0xff
  43be04:	b.eq	43c298 <ferror@plt+0x39a18>  // b.none
  43be08:	ldr	x26, [x28, #1328]
  43be0c:	mov	x2, x3
  43be10:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  43be14:	add	x1, x20, #0x2c0
  43be18:	mov	w24, #0x0                   	// #0
  43be1c:	mov	w27, #0x0                   	// #0
  43be20:	mov	w21, #0x0                   	// #0
  43be24:	str	x1, [sp, #104]
  43be28:	mov	x1, x28
  43be2c:	mov	w20, w27
  43be30:	mov	w28, w24
  43be34:	adrp	x19, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43be38:	mov	x27, x2
  43be3c:	add	x19, x19, #0x68
  43be40:	mov	x24, x1
  43be44:	str	w21, [sp, #96]
  43be48:	mov	w21, w23
  43be4c:	mov	x23, x25
  43be50:	mov	x25, x26
  43be54:	str	wzr, [sp, #120]
  43be58:	str	xzr, [sp, #128]
  43be5c:	str	xzr, [sp, #144]
  43be60:	str	wzr, [sp, #156]
  43be64:	stp	xzr, xzr, [sp, #160]
  43be68:	str	wzr, [sp, #200]
  43be6c:	sub	x1, x0, x27
  43be70:	ldr	x0, [x24, #1320]
  43be74:	add	x1, x1, #0x3
  43be78:	sub	x0, x0, x25
  43be7c:	cmp	x1, x0
  43be80:	b.hi	43c33c <ferror@plt+0x39abc>  // b.pmore
  43be84:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43be88:	add	x0, x0, #0x10
  43be8c:	str	x0, [sp, #176]
  43be90:	ldr	x0, [x23, #8]
  43be94:	cmp	x0, #0x0
  43be98:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  43be9c:	b.eq	43bf3c <ferror@plt+0x396bc>  // b.none
  43bea0:	mov	x26, x25
  43bea4:	ldrb	w1, [x27]
  43bea8:	add	x4, x27, #0x1
  43beac:	cmp	w1, #0x7a
  43beb0:	mov	x9, x4
  43beb4:	strb	w1, [x26], #1
  43beb8:	b.hi	43bee8 <ferror@plt+0x39668>  // b.pmore
  43bebc:	ldrh	w0, [x19, w1, uxtw #1]
  43bec0:	adr	x2, 43becc <ferror@plt+0x3964c>
  43bec4:	add	x0, x2, w0, sxth #2
  43bec8:	br	x0
  43becc:	ldrb	w0, [x24, #18]
  43bed0:	cbnz	w0, 43bee8 <ferror@plt+0x39668>
  43bed4:	ldr	x0, [sp, #136]
  43bed8:	cmp	w20, #0x0
  43bedc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  43bee0:	b.ne	43c39c <ferror@plt+0x39b1c>  // b.any
  43bee4:	nop
  43bee8:	ldrb	w0, [x24, #16]
  43beec:	cbnz	w0, 43bf90 <ferror@plt+0x39710>
  43bef0:	mov	x25, x26
  43bef4:	mov	x27, x9
  43bef8:	strb	wzr, [x24, #440]
  43befc:	cmp	w28, #0x1
  43bf00:	b.ls	43bf24 <ferror@plt+0x396a4>  // b.plast
  43bf04:	cmp	w28, #0x8
  43bf08:	sub	w0, w28, #0x5
  43bf0c:	ccmp	w28, #0x3, #0x4, ne  // ne = any
  43bf10:	cset	w22, eq  // eq = none
  43bf14:	cmp	w0, #0x1
  43bf18:	cset	w0, ls  // ls = plast
  43bf1c:	orr	w22, w22, w0
  43bf20:	cbz	w22, 43be90 <ferror@plt+0x39610>
  43bf24:	ldr	x0, [x23, #8]
  43bf28:	mov	w22, #0x0                   	// #0
  43bf2c:	mov	w28, #0x0                   	// #0
  43bf30:	cmp	x0, #0x0
  43bf34:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  43bf38:	b.ne	43bea0 <ferror@plt+0x39620>  // b.any
  43bf3c:	ldr	x1, [x24]
  43bf40:	ldr	w0, [x1, #56]
  43bf44:	ldr	x2, [x1, #48]
  43bf48:	lsl	x0, x0, #4
  43bf4c:	ldr	x0, [x2, x0]
  43bf50:	cmp	x0, x27
  43bf54:	b.hi	43bea0 <ferror@plt+0x39620>  // b.pmore
  43bf58:	str	x27, [x1]
  43bf5c:	mov	x0, x24
  43bf60:	mov	w1, #0x0                   	// #0
  43bf64:	bl	42b710 <ferror@plt+0x28e90>
  43bf68:	b	43bea0 <ferror@plt+0x39620>
  43bf6c:	mov	x25, x26
  43bf70:	mov	x27, x4
  43bf74:	b	43be90 <ferror@plt+0x39610>
  43bf78:	cmp	w20, w1
  43bf7c:	b.eq	43c200 <ferror@plt+0x39980>  // b.none
  43bf80:	ldrb	w0, [x24, #16]
  43bf84:	cmp	w20, #0x0
  43bf88:	csel	w20, w20, w1, ne  // ne = any
  43bf8c:	cbz	w0, 43bef0 <ferror@plt+0x39670>
  43bf90:	mov	x25, x26
  43bf94:	mov	x27, x9
  43bf98:	b	43befc <ferror@plt+0x3967c>
  43bf9c:	cbnz	w20, 43bee8 <ferror@plt+0x39668>
  43bfa0:	ldrb	w0, [x27, #1]
  43bfa4:	cmp	w0, #0x2a
  43bfa8:	b.ne	43bee8 <ferror@plt+0x39668>  // b.any
  43bfac:	ldr	x0, [sp, #136]
  43bfb0:	str	x26, [x24, #1328]
  43bfb4:	mov	x1, x4
  43bfb8:	cmp	x0, #0x0
  43bfbc:	mov	x0, x24
  43bfc0:	cset	w2, ne  // ne = any
  43bfc4:	bl	43ba90 <ferror@plt+0x39210>
  43bfc8:	mov	x27, x0
  43bfcc:	ldr	x25, [x24, #1328]
  43bfd0:	b	43be90 <ferror@plt+0x39610>
  43bfd4:	cbnz	w20, 43bee8 <ferror@plt+0x39668>
  43bfd8:	ldr	w0, [sp, #96]
  43bfdc:	subs	w0, w0, #0x1
  43bfe0:	str	w0, [sp, #96]
  43bfe4:	ccmp	w28, #0x2, #0x0, eq  // eq = none
  43bfe8:	b.eq	43c2b4 <ferror@plt+0x39a34>  // b.none
  43bfec:	sub	w0, w28, #0x7
  43bff0:	tst	w0, #0xfffffffd
  43bff4:	ccmp	w28, #0x4, #0x4, ne  // ne = any
  43bff8:	b.ne	43bee8 <ferror@plt+0x39668>  // b.any
  43bffc:	ldrb	w0, [x24, #16]
  43c000:	mov	x25, x26
  43c004:	mov	x27, x4
  43c008:	mov	w22, #0x0                   	// #0
  43c00c:	mov	w28, #0x0                   	// #0
  43c010:	mov	w20, #0x0                   	// #0
  43c014:	cbnz	w0, 43be90 <ferror@plt+0x39610>
  43c018:	strb	wzr, [x24, #440]
  43c01c:	b	43be90 <ferror@plt+0x39610>
  43c020:	cbnz	w20, 43bee8 <ferror@plt+0x39668>
  43c024:	ldr	w0, [sp, #96]
  43c028:	cmp	w28, #0x1
  43c02c:	add	w0, w0, #0x1
  43c030:	str	w0, [sp, #96]
  43c034:	b.eq	43c4d8 <ferror@plt+0x39c58>  // b.none
  43c038:	cmp	w28, #0x6
  43c03c:	b.eq	43c334 <ferror@plt+0x39ab4>  // b.none
  43c040:	cmp	w28, #0x3
  43c044:	b.eq	43c578 <ferror@plt+0x39cf8>  // b.none
  43c048:	cmp	w28, #0x8
  43c04c:	b.ne	43bee8 <ferror@plt+0x39668>  // b.any
  43c050:	ldrb	w0, [x24, #16]
  43c054:	mov	w28, #0x9                   	// #9
  43c058:	cbnz	w0, 43c08c <ferror@plt+0x3980c>
  43c05c:	nop
  43c060:	mov	w20, #0x0                   	// #0
  43c064:	b	43bef0 <ferror@plt+0x39670>
  43c068:	cmp	w20, #0x0
  43c06c:	ccmp	w28, #0x2, #0x0, eq  // eq = none
  43c070:	b.ne	43bee8 <ferror@plt+0x39668>  // b.any
  43c074:	ldr	w0, [sp, #96]
  43c078:	mov	w28, #0x2                   	// #2
  43c07c:	cmp	w0, #0x1
  43c080:	b.eq	43c370 <ferror@plt+0x39af0>  // b.none
  43c084:	ldrb	w0, [x24, #16]
  43c088:	cbz	w0, 43c060 <ferror@plt+0x397e0>
  43c08c:	mov	x25, x26
  43c090:	mov	x27, x4
  43c094:	mov	w22, #0x0                   	// #0
  43c098:	mov	w20, #0x0                   	// #0
  43c09c:	b	43be90 <ferror@plt+0x39610>
  43c0a0:	ldr	x0, [x23, #8]
  43c0a4:	cbnz	x0, 43cb8c <ferror@plt+0x3a30c>
  43c0a8:	ldr	x2, [x24]
  43c0ac:	str	x25, [x24, #1328]
  43c0b0:	str	x4, [x2]
  43c0b4:	cbnz	w21, 43c1b4 <ferror@plt+0x39934>
  43c0b8:	ldr	x0, [x24, #40]
  43c0bc:	mov	w1, #0x1                   	// #1
  43c0c0:	strb	w1, [x2, #104]
  43c0c4:	mov	w4, #0x18                  	// #24
  43c0c8:	mov	w2, #0x0                   	// #0
  43c0cc:	ldr	w1, [x0, #12]
  43c0d0:	ldr	x5, [x0]
  43c0d4:	sub	w1, w1, #0x1
  43c0d8:	ldr	w3, [x0, #60]
  43c0dc:	smull	x1, w1, w4
  43c0e0:	add	x4, x5, x1
  43c0e4:	ldr	w1, [x5, x1]
  43c0e8:	ldrb	w5, [x4, #6]
  43c0ec:	ldr	w4, [x4, #16]
  43c0f0:	sub	w1, w3, w1
  43c0f4:	add	w4, w4, #0x1
  43c0f8:	lsr	w1, w1, w5
  43c0fc:	add	w1, w1, w4
  43c100:	bl	431640 <ferror@plt+0x2edc0>
  43c104:	sub	w0, w28, #0x1
  43c108:	cmp	w0, #0x1
  43c10c:	b.hi	43c1b4 <ferror@plt+0x39934>  // b.pmore
  43c110:	ldrb	w0, [x24, #16]
  43c114:	cbnz	w0, 43c1b4 <ferror@plt+0x39934>
  43c118:	mov	x0, x24
  43c11c:	bl	42bf38 <ferror@plt+0x296b8>
  43c120:	tst	w0, #0xff
  43c124:	b.eq	43c1b4 <ferror@plt+0x39934>  // b.none
  43c128:	cmp	w28, #0x2
  43c12c:	b.ne	43c138 <ferror@plt+0x398b8>  // b.any
  43c130:	mov	w0, #0x20                  	// #32
  43c134:	strb	w0, [x25]
  43c138:	ldr	x0, [x24]
  43c13c:	mov	x25, x26
  43c140:	ldr	x27, [x0]
  43c144:	b	43be90 <ferror@plt+0x39610>
  43c148:	cmp	w20, #0x3e
  43c14c:	csel	w20, w20, wzr, ne  // ne = any
  43c150:	b	43bee8 <ferror@plt+0x39668>
  43c154:	cmp	w22, #0x0
  43c158:	mov	w0, #0x3e                  	// #62
  43c15c:	csel	w20, w20, w0, eq  // eq = none
  43c160:	b	43bee8 <ferror@plt+0x39668>
  43c164:	ldrb	w0, [x27, #1]
  43c168:	mov	w2, #0x22                  	// #34
  43c16c:	mov	w1, #0x27                  	// #39
  43c170:	cmp	w0, #0x5c
  43c174:	ccmp	w0, w2, #0x4, ne  // ne = any
  43c178:	ccmp	w0, w1, #0x4, ne  // ne = any
  43c17c:	b.ne	43bee8 <ferror@plt+0x39668>  // b.any
  43c180:	add	x9, x27, #0x2
  43c184:	add	x26, x25, #0x2
  43c188:	strb	w0, [x25, #1]
  43c18c:	b	43bee8 <ferror@plt+0x39668>
  43c190:	ldr	x0, [sp, #112]
  43c194:	cmp	x0, x27
  43c198:	b.eq	43c208 <ferror@plt+0x39988>  // b.none
  43c19c:	ldrb	w0, [x24, #20]
  43c1a0:	cbz	w0, 43bee8 <ferror@plt+0x39668>
  43c1a4:	mov	x25, x26
  43c1a8:	mov	x27, x9
  43c1ac:	mov	w28, #0x5                   	// #5
  43c1b0:	b	43be90 <ferror@plt+0x39610>
  43c1b4:	mov	x0, x24
  43c1b8:	mov	w24, w28
  43c1bc:	mov	x28, x0
  43c1c0:	mov	w19, #0x1                   	// #1
  43c1c4:	ldr	x0, [sp, #144]
  43c1c8:	cbz	x0, 43c1d8 <ferror@plt+0x39958>
  43c1cc:	mov	x1, x0
  43c1d0:	mov	x0, x28
  43c1d4:	bl	42d120 <ferror@plt+0x2a8a0>
  43c1d8:	cmp	w24, #0x2
  43c1dc:	b.eq	43c45c <ferror@plt+0x39bdc>  // b.none
  43c1e0:	mov	w0, w19
  43c1e4:	ldp	x19, x20, [sp, #16]
  43c1e8:	ldp	x21, x22, [sp, #32]
  43c1ec:	ldp	x23, x24, [sp, #48]
  43c1f0:	ldp	x25, x26, [sp, #64]
  43c1f4:	ldp	x27, x28, [sp, #80]
  43c1f8:	ldp	x29, x30, [sp], #272
  43c1fc:	ret
  43c200:	mov	w20, #0x0                   	// #0
  43c204:	b	43bee8 <ferror@plt+0x39668>
  43c208:	ldr	x0, [x24, #136]
  43c20c:	ldr	x0, [x0, #8]
  43c210:	cbnz	x0, 43c19c <ferror@plt+0x3991c>
  43c214:	ldrb	w0, [x24, #16]
  43c218:	cbnz	w0, 43c19c <ferror@plt+0x3991c>
  43c21c:	str	x26, [x24, #1328]
  43c220:	mov	x1, x9
  43c224:	mov	x0, x26
  43c228:	ldr	x4, [sp, #104]
  43c22c:	ldrb	w3, [x1], #1
  43c230:	strb	w3, [x0], #1
  43c234:	mov	x2, x3
  43c238:	ldrh	w3, [x4, x3, lsl #1]
  43c23c:	tbnz	w3, #11, 43c28c <ferror@plt+0x39a0c>
  43c240:	cmp	w2, #0x2f
  43c244:	b.ne	43c818 <ferror@plt+0x39f98>  // b.any
  43c248:	ldrb	w2, [x9, #1]
  43c24c:	cmp	w2, #0x2a
  43c250:	b.ne	43c818 <ferror@plt+0x39f98>  // b.any
  43c254:	str	x0, [x24, #1328]
  43c258:	mov	w2, #0x0                   	// #0
  43c25c:	mov	x0, x24
  43c260:	bl	43ba90 <ferror@plt+0x39210>
  43c264:	mov	x9, x0
  43c268:	mov	x1, x9
  43c26c:	ldr	x26, [x24, #1328]
  43c270:	ldrb	w3, [x1], #1
  43c274:	ldr	x4, [sp, #104]
  43c278:	mov	x0, x26
  43c27c:	mov	x2, x3
  43c280:	strb	w3, [x0], #1
  43c284:	ldrh	w3, [x4, x3, lsl #1]
  43c288:	tbz	w3, #11, 43c240 <ferror@plt+0x399c0>
  43c28c:	mov	x26, x0
  43c290:	mov	x9, x1
  43c294:	b	43c220 <ferror@plt+0x399a0>
  43c298:	ldr	x1, [x28, #40]
  43c29c:	mov	x2, x3
  43c2a0:	ldr	x26, [x28, #1312]
  43c2a4:	ldr	w1, [x1, #60]
  43c2a8:	str	x26, [x28, #1328]
  43c2ac:	str	w1, [x28, #1336]
  43c2b0:	b	43be10 <ferror@plt+0x39590>
  43c2b4:	ldr	x0, [sp, #128]
  43c2b8:	ldr	w1, [sp, #120]
  43c2bc:	ldr	x2, [x24, #1312]
  43c2c0:	add	w1, w1, #0x1
  43c2c4:	ldrb	w0, [x0, #18]
  43c2c8:	str	w1, [sp, #120]
  43c2cc:	sub	x3, x26, x2
  43c2d0:	and	w0, w0, #0x3
  43c2d4:	cmp	w0, #0x3
  43c2d8:	b.eq	43c580 <ferror@plt+0x39d00>  // b.none
  43c2dc:	ldr	x0, [sp, #128]
  43c2e0:	ldr	w5, [sp, #120]
  43c2e4:	ldr	x1, [x0, #24]
  43c2e8:	ldr	w0, [sp, #156]
  43c2ec:	cmp	w0, w5
  43c2f0:	ldrb	w0, [x1, #19]
  43c2f4:	orr	w0, w0, #0x20
  43c2f8:	strb	w0, [x1, #19]
  43c2fc:	b.cs	43c4a0 <ferror@plt+0x39c20>  // b.hs, b.nlast
  43c300:	ldr	w0, [sp, #120]
  43c304:	cmp	w0, #0x1
  43c308:	b.eq	43c4b4 <ferror@plt+0x39c34>  // b.none
  43c30c:	ldr	w3, [sp, #120]
  43c310:	mov	x0, x24
  43c314:	ldr	x2, [sp, #128]
  43c318:	str	x4, [sp, #96]
  43c31c:	bl	4363d8 <ferror@plt+0x33b58>
  43c320:	tst	w0, #0xff
  43c324:	ldr	x4, [sp, #96]
  43c328:	b.ne	43c928 <ferror@plt+0x3a0a8>  // b.any
  43c32c:	str	wzr, [sp, #96]
  43c330:	b	43bffc <ferror@plt+0x3977c>
  43c334:	mov	w28, #0x7                   	// #7
  43c338:	b	43c084 <ferror@plt+0x39804>
  43c33c:	ldr	x0, [x24, #1312]
  43c340:	sub	x25, x25, x0
  43c344:	add	x1, x1, x25
  43c348:	add	x1, x1, x1, lsl #1
  43c34c:	lsr	x26, x1, #1
  43c350:	mov	x1, x26
  43c354:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43c358:	add	x1, x0, x26
  43c35c:	add	x25, x0, x25
  43c360:	str	x0, [x24, #1312]
  43c364:	str	x1, [x24, #1320]
  43c368:	str	x25, [x24, #1328]
  43c36c:	b	43be84 <ferror@plt+0x39604>
  43c370:	ldr	w0, [sp, #120]
  43c374:	add	w1, w0, #0x1
  43c378:	ldr	w0, [sp, #156]
  43c37c:	str	w1, [sp, #120]
  43c380:	cmp	w1, w0
  43c384:	b.hi	43c084 <ferror@plt+0x39804>  // b.pmore
  43c388:	ldr	x2, [sp, #160]
  43c38c:	ldr	x0, [x24, #1312]
  43c390:	sub	x0, x26, x0
  43c394:	str	x0, [x2, w1, uxtw #3]
  43c398:	b	43c084 <ferror@plt+0x39804>
  43c39c:	mov	x26, x25
  43c3a0:	mov	w1, #0x204                 	// #516
  43c3a4:	str	x25, [x24, #1328]
  43c3a8:	ldr	x2, [sp, #104]
  43c3ac:	b	43c3b4 <ferror@plt+0x39b34>
  43c3b0:	add	x4, x4, #0x1
  43c3b4:	ldurb	w0, [x4, #-1]
  43c3b8:	strb	w0, [x26], #1
  43c3bc:	ldrb	w0, [x4]
  43c3c0:	ldrh	w0, [x2, x0, lsl #1]
  43c3c4:	tst	w1, w0
  43c3c8:	b.ne	43c3b0 <ferror@plt+0x39b30>  // b.any
  43c3cc:	ldr	x2, [x24, #136]
  43c3d0:	mov	w3, #0x1                   	// #1
  43c3d4:	ldr	x0, [x24, #1088]
  43c3d8:	ldr	x1, [x24, #1328]
  43c3dc:	str	x4, [x2, #16]
  43c3e0:	sub	x2, x26, x1
  43c3e4:	bl	43b580 <ferror@plt+0x38d00>
  43c3e8:	mov	x27, x0
  43c3ec:	ldrb	w0, [x0, #18]
  43c3f0:	ldr	x9, [x23, #16]
  43c3f4:	str	x26, [x24, #1328]
  43c3f8:	tst	x0, #0x2
  43c3fc:	ccmp	w28, #0x1, #0x2, ne  // ne = any
  43c400:	b.ls	43c7a0 <ferror@plt+0x39f20>  // b.plast
  43c404:	ldr	x1, [sp, #136]
  43c408:	cbz	x1, 43c418 <ferror@plt+0x39b98>
  43c40c:	and	w0, w0, #0x3
  43c410:	cmp	w0, #0x1
  43c414:	b.eq	43c8a0 <ferror@plt+0x3a020>  // b.none
  43c418:	cmp	w28, #0x5
  43c41c:	b.eq	43c87c <ferror@plt+0x39ffc>  // b.none
  43c420:	ldrb	w0, [x24, #20]
  43c424:	cbz	w0, 43bee8 <ferror@plt+0x39668>
  43c428:	ldr	x0, [x24, #1248]
  43c42c:	cmp	x0, x27
  43c430:	b.eq	43cbb4 <ferror@plt+0x3a334>  // b.none
  43c434:	ldr	x0, [x24, #1288]
  43c438:	cmp	x0, x27
  43c43c:	b.eq	43c44c <ferror@plt+0x39bcc>  // b.none
  43c440:	ldr	x0, [x24, #1296]
  43c444:	cmp	x0, x27
  43c448:	b.ne	43bee8 <ferror@plt+0x39668>  // b.any
  43c44c:	mov	x25, x26
  43c450:	mov	x27, x9
  43c454:	mov	w28, #0x8                   	// #8
  43c458:	b	43be90 <ferror@plt+0x39610>
  43c45c:	ldr	x0, [sp, #128]
  43c460:	mov	w3, #0x0                   	// #0
  43c464:	ldr	w2, [sp, #200]
  43c468:	mov	w1, #0x3                   	// #3
  43c46c:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x1b6d8>
  43c470:	add	x4, x4, #0xc28
  43c474:	ldr	x5, [x0]
  43c478:	mov	x0, x28
  43c47c:	bl	423290 <ferror@plt+0x20a10>
  43c480:	mov	w0, w19
  43c484:	ldp	x19, x20, [sp, #16]
  43c488:	ldp	x21, x22, [sp, #32]
  43c48c:	ldp	x23, x24, [sp, #48]
  43c490:	ldp	x25, x26, [sp, #64]
  43c494:	ldp	x27, x28, [sp, #80]
  43c498:	ldp	x29, x30, [sp], #272
  43c49c:	ret
  43c4a0:	ldr	x0, [sp, #160]
  43c4a4:	str	x3, [x0, w5, uxtw #3]
  43c4a8:	ldr	w0, [sp, #120]
  43c4ac:	cmp	w0, #0x1
  43c4b0:	b.ne	43c30c <ferror@plt+0x39a8c>  // b.any
  43c4b4:	ldrh	w0, [x1, #16]
  43c4b8:	cbnz	w0, 43c30c <ferror@plt+0x39a8c>
  43c4bc:	ldr	x0, [sp, #168]
  43c4c0:	add	x0, x0, #0x1
  43c4c4:	add	x2, x2, x0
  43c4c8:	cmp	x26, x2
  43c4cc:	cset	w0, ne  // ne = any
  43c4d0:	str	w0, [sp, #120]
  43c4d4:	b	43c30c <ferror@plt+0x39a8c>
  43c4d8:	ldr	x1, [sp, #128]
  43c4dc:	ldrh	w0, [x1, #18]
  43c4e0:	tbz	w0, #6, 43c530 <ferror@plt+0x39cb0>
  43c4e4:	ldrb	w0, [x1, #18]
  43c4e8:	and	w0, w0, #0x3
  43c4ec:	cmp	w0, #0x3
  43c4f0:	b.eq	43cba0 <ferror@plt+0x3a320>  // b.none
  43c4f4:	ldr	x0, [x1, #24]
  43c4f8:	ldrb	w0, [x0, #19]
  43c4fc:	ubfx	x0, x0, #2, #1
  43c500:	cbz	w0, 43c554 <ferror@plt+0x39cd4>
  43c504:	mov	x1, #0x1                   	// #1
  43c508:	ldr	x0, [x24, #136]
  43c50c:	b	43c528 <ferror@plt+0x39ca8>
  43c510:	ldr	x2, [x0, #40]
  43c514:	add	x1, x1, #0x1
  43c518:	ldr	x3, [sp, #128]
  43c51c:	cmp	x2, x3
  43c520:	ccmp	x1, #0x14, #0x0, eq  // eq = none
  43c524:	b.hi	43c554 <ferror@plt+0x39cd4>  // b.pmore
  43c528:	ldr	x0, [x0, #8]
  43c52c:	cbnz	x0, 43c510 <ferror@plt+0x39c90>
  43c530:	mov	w0, #0x1                   	// #1
  43c534:	str	w0, [sp, #96]
  43c538:	ldr	x1, [sp, #160]
  43c53c:	mov	w28, #0x2                   	// #2
  43c540:	ldr	x0, [sp, #168]
  43c544:	ldr	x26, [x24, #1312]
  43c548:	str	x0, [x1]
  43c54c:	add	x26, x26, x0
  43c550:	b	43c084 <ferror@plt+0x39804>
  43c554:	ldr	x0, [sp, #128]
  43c558:	mov	w1, #0x3                   	// #3
  43c55c:	ldr	x2, [sp, #176]
  43c560:	str	x4, [sp, #184]
  43c564:	ldr	x3, [x0]
  43c568:	mov	x0, x24
  43c56c:	bl	422e10 <ferror@plt+0x20590>
  43c570:	ldr	x4, [sp, #184]
  43c574:	b	43bffc <ferror@plt+0x3977c>
  43c578:	mov	w28, #0x4                   	// #4
  43c57c:	b	43c084 <ferror@plt+0x39804>
  43c580:	ldr	w0, [sp, #120]
  43c584:	ldr	w1, [sp, #156]
  43c588:	cmp	w1, w0
  43c58c:	b.cc	43c598 <ferror@plt+0x39d18>  // b.lo, b.ul, b.last
  43c590:	ldr	x1, [sp, #160]
  43c594:	str	x3, [x1, w0, uxtw #3]
  43c598:	ldr	w3, [sp, #120]
  43c59c:	add	x1, sp, #0xe0
  43c5a0:	str	x4, [sp, #96]
  43c5a4:	mov	x0, x24
  43c5a8:	ldrh	w4, [sp, #156]
  43c5ac:	ldr	x2, [sp, #128]
  43c5b0:	stp	xzr, xzr, [sp, #240]
  43c5b4:	stp	xzr, xzr, [sp, #224]
  43c5b8:	strh	w4, [sp, #240]
  43c5bc:	stp	xzr, xzr, [sp, #256]
  43c5c0:	bl	4363d8 <ferror@plt+0x33b58>
  43c5c4:	tst	w0, #0xff
  43c5c8:	ldr	x4, [sp, #96]
  43c5cc:	b.eq	43c32c <ferror@plt+0x39aac>  // b.none
  43c5d0:	ldp	x27, x3, [sp, #160]
  43c5d4:	mov	x0, x24
  43c5d8:	ldr	x1, [x24, #1312]
  43c5dc:	str	x4, [sp, #216]
  43c5e0:	add	x1, x1, x3
  43c5e4:	ldp	x2, x3, [x27]
  43c5e8:	str	x1, [x24, #1328]
  43c5ec:	str	x4, [x23, #16]
  43c5f0:	sub	x26, x3, x2
  43c5f4:	add	x1, x26, #0x2
  43c5f8:	bl	42d3b8 <ferror@plt+0x2ab38>
  43c5fc:	mov	w1, #0x28                  	// #40
  43c600:	mov	x25, x0
  43c604:	strb	w1, [x0], #1
  43c608:	mov	x2, x26
  43c60c:	ldr	x3, [x24, #1312]
  43c610:	ldr	x1, [x27]
  43c614:	add	x1, x3, x1
  43c618:	bl	402220 <memcpy@plt>
  43c61c:	add	x3, x26, #0x1
  43c620:	mov	w0, #0xa                   	// #10
  43c624:	add	x6, x25, x3
  43c628:	dup	v0.2d, x25
  43c62c:	mov	w2, #0x1                   	// #1
  43c630:	mov	x1, #0x0                   	// #0
  43c634:	strb	w0, [x25, x3]
  43c638:	mov	x0, x24
  43c63c:	ldp	x3, x4, [x24]
  43c640:	str	x4, [sp, #208]
  43c644:	ldr	x26, [x23, #24]
  43c648:	ldrb	w4, [x3, #104]
  43c64c:	str	w4, [sp, #204]
  43c650:	ldr	x4, [x3, #32]
  43c654:	str	x6, [x3, #32]
  43c658:	strb	wzr, [x3, #104]
  43c65c:	str	x4, [sp, #184]
  43c660:	ldr	x4, [x3]
  43c664:	str	x4, [sp, #176]
  43c668:	ldr	x4, [x3, #8]
  43c66c:	str	q0, [x3]
  43c670:	ldrb	w6, [x24, #16]
  43c674:	strb	w2, [x24, #16]
  43c678:	str	x3, [x24, #8]
  43c67c:	cmp	w6, #0x0
  43c680:	ldr	x3, [x23, #8]
  43c684:	str	xzr, [x23, #8]
  43c688:	cset	w25, ne  // ne = any
  43c68c:	str	x3, [sp, #96]
  43c690:	str	x4, [sp, #192]
  43c694:	bl	43bdb8 <ferror@plt+0x39538>
  43c698:	strb	w25, [x24, #16]
  43c69c:	ldr	x0, [x24, #1320]
  43c6a0:	ldr	x1, [x24, #1328]
  43c6a4:	ldr	x4, [sp, #216]
  43c6a8:	sub	x0, x0, x1
  43c6ac:	cmp	x0, #0x3
  43c6b0:	b.ls	43cdb0 <ferror@plt+0x3a530>  // b.plast
  43c6b4:	mov	w27, #0xa                   	// #10
  43c6b8:	strb	w27, [x1]
  43c6bc:	str	x4, [sp, #216]
  43c6c0:	mov	w2, #0x0                   	// #0
  43c6c4:	ldr	x1, [x24]
  43c6c8:	mov	w28, #0x0                   	// #0
  43c6cc:	ldr	x4, [sp, #168]
  43c6d0:	ldr	x0, [x24, #1312]
  43c6d4:	ldr	x3, [x24, #1328]
  43c6d8:	add	x0, x0, x4
  43c6dc:	stp	x0, x0, [x1]
  43c6e0:	str	x3, [x1, #32]
  43c6e4:	stp	x0, x3, [x23, #16]
  43c6e8:	mov	x0, x24
  43c6ec:	ldrb	w3, [x24, #24]
  43c6f0:	ldr	x1, [sp, #128]
  43c6f4:	add	w3, w3, #0x1
  43c6f8:	strb	w3, [x24, #24]
  43c6fc:	bl	435c20 <ferror@plt+0x333a0>
  43c700:	mov	x25, x0
  43c704:	ldrb	w3, [x24, #24]
  43c708:	ldr	x1, [x24]
  43c70c:	sub	w3, w3, #0x1
  43c710:	strb	w3, [x24, #24]
  43c714:	ldr	x2, [sp, #96]
  43c718:	str	wzr, [sp, #96]
  43c71c:	ldr	x3, [x24, #1312]
  43c720:	str	x2, [x23, #8]
  43c724:	ldr	x2, [sp, #176]
  43c728:	str	x2, [x1]
  43c72c:	ldr	x4, [sp, #168]
  43c730:	ldr	x2, [sp, #192]
  43c734:	str	x2, [x1, #8]
  43c738:	ldr	x2, [sp, #184]
  43c73c:	str	x2, [x1, #32]
  43c740:	ldrb	w2, [sp, #204]
  43c744:	strb	w2, [x1, #104]
  43c748:	add	x1, x3, x4
  43c74c:	ldp	x2, x4, [sp, #208]
  43c750:	str	x2, [x24, #8]
  43c754:	str	x1, [x24, #1328]
  43c758:	stp	x4, x26, [x23, #16]
  43c75c:	bl	402270 <strlen@plt>
  43c760:	mov	x23, x0
  43c764:	add	x1, x23, #0x1
  43c768:	mov	x0, x24
  43c76c:	bl	42d3b8 <ferror@plt+0x2ab38>
  43c770:	mov	x26, x0
  43c774:	mov	x2, x23
  43c778:	mov	x1, x25
  43c77c:	bl	402220 <memcpy@plt>
  43c780:	ldr	x1, [sp, #128]
  43c784:	strb	w27, [x26, x23]
  43c788:	mov	x3, x23
  43c78c:	mov	x2, x26
  43c790:	mov	x0, x24
  43c794:	bl	4365b0 <ferror@plt+0x33d30>
  43c798:	ldr	x23, [x24, #136]
  43c79c:	b	43c80c <ferror@plt+0x39f8c>
  43c7a0:	ldrb	w1, [x24, #24]
  43c7a4:	cbnz	w1, 43c88c <ferror@plt+0x3a00c>
  43c7a8:	strb	wzr, [x24, #440]
  43c7ac:	and	w0, w0, #0x3
  43c7b0:	cmp	w0, #0x3
  43c7b4:	b.eq	43cc4c <ferror@plt+0x3a3cc>  // b.none
  43c7b8:	ldr	x1, [x27, #24]
  43c7bc:	ldrb	w2, [x1, #19]
  43c7c0:	tbnz	w2, #2, 43ccd0 <ferror@plt+0x3a450>
  43c7c4:	ldrh	w1, [x27, #18]
  43c7c8:	tbnz	w1, #6, 43cce4 <ferror@plt+0x3a464>
  43c7cc:	str	x25, [x24, #1328]
  43c7d0:	cmp	w0, #0x3
  43c7d4:	b.eq	43ce98 <ferror@plt+0x3a618>  // b.none
  43c7d8:	ldr	x0, [x27, #24]
  43c7dc:	ldrb	w1, [x0, #19]
  43c7e0:	ldr	w23, [x0, #12]
  43c7e4:	ldr	x26, [x0, #24]
  43c7e8:	orr	w1, w1, #0x20
  43c7ec:	strb	w1, [x0, #19]
  43c7f0:	mov	x3, x23
  43c7f4:	mov	x2, x26
  43c7f8:	mov	x1, x27
  43c7fc:	mov	x0, x24
  43c800:	bl	4365b0 <ferror@plt+0x33d30>
  43c804:	mov	w28, #0x0                   	// #0
  43c808:	ldr	x23, [x24, #136]
  43c80c:	ldp	x27, x0, [x23, #16]
  43c810:	ldr	x25, [x24, #1328]
  43c814:	b	43be6c <ferror@plt+0x395ec>
  43c818:	str	x26, [x24, #1328]
  43c81c:	ldrb	w0, [x9]
  43c820:	cmp	w0, #0xa
  43c824:	b.eq	43ce34 <ferror@plt+0x3a5b4>  // b.none
  43c828:	ldr	x1, [sp, #104]
  43c82c:	ldrh	w1, [x1, w0, sxtw #1]
  43c830:	tbz	w1, #2, 43c840 <ferror@plt+0x39fc0>
  43c834:	ldr	w2, [x24, #1116]
  43c838:	cmp	w2, #0x15
  43c83c:	b.ne	43c858 <ferror@plt+0x39fd8>  // b.any
  43c840:	tbnz	w1, #9, 43c8cc <ferror@plt+0x3a04c>
  43c844:	cmp	w0, #0x24
  43c848:	b.eq	43c8c4 <ferror@plt+0x3a044>  // b.none
  43c84c:	ldr	w0, [x24, #1116]
  43c850:	cmp	w0, #0x15
  43c854:	b.eq	43c19c <ferror@plt+0x3991c>  // b.none
  43c858:	mov	x0, x24
  43c85c:	mov	w1, #0x0                   	// #0
  43c860:	mov	w24, w28
  43c864:	mov	w19, #0x0                   	// #0
  43c868:	mov	x28, x0
  43c86c:	ldr	x2, [x0]
  43c870:	str	x9, [x2]
  43c874:	bl	420dc0 <ferror@plt+0x1e540>
  43c878:	b	43c1c4 <ferror@plt+0x39944>
  43c87c:	mov	x25, x26
  43c880:	mov	x27, x9
  43c884:	mov	w28, #0x6                   	// #6
  43c888:	b	43be90 <ferror@plt+0x39610>
  43c88c:	ldr	x1, [sp, #136]
  43c890:	cbz	x1, 43c420 <ferror@plt+0x39ba0>
  43c894:	and	w0, w0, #0x3
  43c898:	cmp	w0, #0x1
  43c89c:	b.ne	43c420 <ferror@plt+0x39ba0>  // b.any
  43c8a0:	ldrh	w2, [x27, #24]
  43c8a4:	mov	x0, x24
  43c8a8:	ldr	x1, [sp, #136]
  43c8ac:	str	x25, [x24, #1328]
  43c8b0:	str	x9, [sp, #184]
  43c8b4:	bl	43bc40 <ferror@plt+0x393c0>
  43c8b8:	ldr	x9, [sp, #184]
  43c8bc:	ldr	x26, [x24, #1312]
  43c8c0:	b	43bee8 <ferror@plt+0x39668>
  43c8c4:	ldrb	w0, [x24, #1146]
  43c8c8:	cbz	w0, 43c84c <ferror@plt+0x39fcc>
  43c8cc:	mov	x25, x26
  43c8d0:	mov	x2, x9
  43c8d4:	mov	w1, #0x204                 	// #516
  43c8d8:	ldrb	w0, [x2], #1
  43c8dc:	strb	w0, [x25], #1
  43c8e0:	ldr	x3, [sp, #104]
  43c8e4:	ldrb	w0, [x2]
  43c8e8:	ldrh	w0, [x3, x0, lsl #1]
  43c8ec:	tst	w1, w0
  43c8f0:	b.ne	43c8d8 <ferror@plt+0x3a058>  // b.any
  43c8f4:	ldr	x4, [x24, #136]
  43c8f8:	mov	w3, #0x1                   	// #1
  43c8fc:	ldr	x0, [x24, #1088]
  43c900:	str	x9, [sp, #184]
  43c904:	ldr	x1, [x24, #1328]
  43c908:	str	x2, [x4, #16]
  43c90c:	sub	x2, x25, x1
  43c910:	bl	43b580 <ferror@plt+0x38d00>
  43c914:	ldrb	w0, [x0, #16]
  43c918:	str	x25, [x24, #1328]
  43c91c:	ldr	x9, [sp, #184]
  43c920:	tbz	w0, #0, 43c84c <ferror@plt+0x39fcc>
  43c924:	b	43c858 <ferror@plt+0x39fd8>
  43c928:	ldr	x0, [sp, #128]
  43c92c:	ldr	x2, [sp, #168]
  43c930:	ldr	x27, [x0, #24]
  43c934:	ldr	x0, [x24, #1312]
  43c938:	ldrh	w1, [x27, #16]
  43c93c:	add	x0, x0, x2
  43c940:	str	x0, [x24, #1328]
  43c944:	str	x4, [x23, #16]
  43c948:	cbz	w1, 43cd64 <ferror@plt+0x3a4e4>
  43c94c:	ldr	x4, [x27, #24]
  43c950:	ldrh	w2, [x4, #4]
  43c954:	ldr	w0, [x4]
  43c958:	mov	x1, x0
  43c95c:	cbz	w2, 43c99c <ferror@plt+0x3a11c>
  43c960:	ldr	x5, [sp, #160]
  43c964:	mov	w3, w2
  43c968:	add	x0, x0, #0xd
  43c96c:	add	x2, x5, w2, uxth #3
  43c970:	and	x0, x0, #0xfffffffffffffff8
  43c974:	add	x4, x4, x0
  43c978:	ldr	x3, [x5, x3, lsl #3]
  43c97c:	ldur	x6, [x2, #-8]
  43c980:	sub	x3, x3, #0x1
  43c984:	ldr	w0, [x4]
  43c988:	ldrh	w2, [x4, #4]
  43c98c:	sub	x3, x3, x6
  43c990:	add	x3, x0, x3, lsl #1
  43c994:	add	x1, x1, x3
  43c998:	cbnz	w2, 43c964 <ferror@plt+0x3a0e4>
  43c99c:	add	x1, x1, #0x1
  43c9a0:	mov	x0, x24
  43c9a4:	bl	42d148 <ferror@plt+0x2a8c8>
  43c9a8:	mov	x25, x0
  43c9ac:	ldr	x1, [x0, #16]
  43c9b0:	mov	w8, #0x0                   	// #0
  43c9b4:	ldr	x12, [x27, #24]
  43c9b8:	mov	x3, #0x0                   	// #0
  43c9bc:	ldr	x7, [sp, #160]
  43c9c0:	mov	w13, #0x5c                  	// #92
  43c9c4:	ldr	w4, [x12]
  43c9c8:	add	x3, x3, x4
  43c9cc:	cbz	x4, 43c9f8 <ferror@plt+0x3a178>
  43c9d0:	add	x5, x12, #0x6
  43c9d4:	mov	x0, #0x0                   	// #0
  43c9d8:	ldrb	w2, [x5, x0]
  43c9dc:	strb	w2, [x1, x0]
  43c9e0:	add	x0, x0, #0x1
  43c9e4:	cmp	w2, #0x22
  43c9e8:	b.eq	43cb7c <ferror@plt+0x3a2fc>  // b.none
  43c9ec:	cmp	x4, x0
  43c9f0:	b.ne	43c9d8 <ferror@plt+0x3a158>  // b.any
  43c9f4:	add	x1, x1, x4
  43c9f8:	ldrh	w0, [x12, #4]
  43c9fc:	cbz	w0, 43cd1c <ferror@plt+0x3a49c>
  43ca00:	mov	w2, w0
  43ca04:	add	x0, x7, w0, uxth #3
  43ca08:	ldr	x5, [x24, #1312]
  43ca0c:	ldr	x2, [x7, x2, lsl #3]
  43ca10:	ldur	x0, [x0, #-8]
  43ca14:	sub	x2, x2, #0x1
  43ca18:	subs	x6, x2, x0
  43ca1c:	add	x10, x5, x0
  43ca20:	b.eq	43cb68 <ferror@plt+0x3a2e8>  // b.none
  43ca24:	cbnz	w8, 43cbc4 <ferror@plt+0x3a344>
  43ca28:	add	x0, x0, #0x10
  43ca2c:	add	x2, x1, #0x10
  43ca30:	add	x5, x5, x0
  43ca34:	sub	x0, x6, #0x1
  43ca38:	cmp	x1, x5
  43ca3c:	ccmp	x10, x2, #0x2, cc  // cc = lo, ul, last
  43ca40:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
  43ca44:	b.ls	43cd48 <ferror@plt+0x3a4c8>  // b.plast
  43ca48:	and	x4, x6, #0xfffffffffffffff0
  43ca4c:	mov	x2, #0x0                   	// #0
  43ca50:	ldr	q0, [x10, x2]
  43ca54:	str	q0, [x1, x2]
  43ca58:	add	x2, x2, #0x10
  43ca5c:	cmp	x4, x2
  43ca60:	b.ne	43ca50 <ferror@plt+0x3a1d0>  // b.any
  43ca64:	and	x2, x6, #0xfffffffffffffff0
  43ca68:	cmp	x6, x2
  43ca6c:	add	x5, x10, x2
  43ca70:	add	x4, x1, x2
  43ca74:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43ca78:	ldrb	w9, [x10, x2]
  43ca7c:	subs	x0, x0, x2
  43ca80:	strb	w9, [x1, x2]
  43ca84:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43ca88:	ldrb	w2, [x5, #1]
  43ca8c:	cmp	x0, #0x1
  43ca90:	strb	w2, [x4, #1]
  43ca94:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43ca98:	ldrb	w2, [x5, #2]
  43ca9c:	cmp	x0, #0x2
  43caa0:	strb	w2, [x4, #2]
  43caa4:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43caa8:	ldrb	w2, [x5, #3]
  43caac:	cmp	x0, #0x3
  43cab0:	strb	w2, [x4, #3]
  43cab4:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cab8:	ldrb	w2, [x5, #4]
  43cabc:	cmp	x0, #0x4
  43cac0:	strb	w2, [x4, #4]
  43cac4:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cac8:	ldrb	w2, [x5, #5]
  43cacc:	cmp	x0, #0x5
  43cad0:	strb	w2, [x4, #5]
  43cad4:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cad8:	ldrb	w2, [x5, #6]
  43cadc:	cmp	x0, #0x6
  43cae0:	strb	w2, [x4, #6]
  43cae4:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cae8:	ldrb	w2, [x5, #7]
  43caec:	cmp	x0, #0x7
  43caf0:	strb	w2, [x4, #7]
  43caf4:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43caf8:	ldrb	w2, [x5, #8]
  43cafc:	cmp	x0, #0x8
  43cb00:	strb	w2, [x4, #8]
  43cb04:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cb08:	ldrb	w2, [x5, #9]
  43cb0c:	cmp	x0, #0x9
  43cb10:	strb	w2, [x4, #9]
  43cb14:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cb18:	ldrb	w2, [x5, #10]
  43cb1c:	cmp	x0, #0xa
  43cb20:	strb	w2, [x4, #10]
  43cb24:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cb28:	ldrb	w2, [x5, #11]
  43cb2c:	cmp	x0, #0xb
  43cb30:	strb	w2, [x4, #11]
  43cb34:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cb38:	ldrb	w2, [x5, #12]
  43cb3c:	cmp	x0, #0xc
  43cb40:	strb	w2, [x4, #12]
  43cb44:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cb48:	ldrb	w2, [x5, #13]
  43cb4c:	cmp	x0, #0xd
  43cb50:	strb	w2, [x4, #13]
  43cb54:	b.eq	43cb60 <ferror@plt+0x3a2e0>  // b.none
  43cb58:	ldrb	w0, [x5, #14]
  43cb5c:	strb	w0, [x4, #14]
  43cb60:	add	x1, x1, x6
  43cb64:	add	x3, x3, x6
  43cb68:	ldr	w0, [x12]
  43cb6c:	add	x0, x0, #0xd
  43cb70:	and	x0, x0, #0xfffffffffffffff8
  43cb74:	add	x12, x12, x0
  43cb78:	b	43c9c4 <ferror@plt+0x3a144>
  43cb7c:	cmp	x4, x0
  43cb80:	eor	w8, w8, #0x1
  43cb84:	b.ne	43c9d8 <ferror@plt+0x3a158>  // b.any
  43cb88:	b	43c9f4 <ferror@plt+0x3a174>
  43cb8c:	str	x25, [x24, #1328]
  43cb90:	mov	x0, x24
  43cb94:	bl	436640 <ferror@plt+0x33dc0>
  43cb98:	ldr	x23, [x24, #136]
  43cb9c:	b	43c80c <ferror@plt+0x39f8c>
  43cba0:	ldr	w0, [x1, #24]
  43cba4:	cmp	w0, #0xa
  43cba8:	cset	w0, eq  // eq = none
  43cbac:	cbz	w0, 43c554 <ferror@plt+0x39cd4>
  43cbb0:	b	43c504 <ferror@plt+0x39c84>
  43cbb4:	mov	x25, x26
  43cbb8:	mov	x27, x9
  43cbbc:	mov	w28, #0x3                   	// #3
  43cbc0:	b	43be90 <ferror@plt+0x39610>
  43cbc4:	add	x5, x5, x2
  43cbc8:	mov	x0, x10
  43cbcc:	mov	w9, #0x0                   	// #0
  43cbd0:	b	43cc00 <ferror@plt+0x3a380>
  43cbd4:	cbz	w9, 43cbe0 <ferror@plt+0x3a360>
  43cbd8:	cmp	w2, #0x5c
  43cbdc:	b.eq	43cc3c <ferror@plt+0x3a3bc>  // b.none
  43cbe0:	mov	x11, x4
  43cbe4:	mov	x3, x6
  43cbe8:	mov	x4, x1
  43cbec:	mov	x1, x11
  43cbf0:	strb	w2, [x4]
  43cbf4:	add	x0, x0, #0x1
  43cbf8:	cmp	x0, x5
  43cbfc:	b.eq	43cb68 <ferror@plt+0x3a2e8>  // b.none
  43cc00:	ldrb	w2, [x0]
  43cc04:	add	x4, x1, #0x1
  43cc08:	add	x6, x3, #0x1
  43cc0c:	cmp	w2, #0x22
  43cc10:	b.ne	43cbd4 <ferror@plt+0x3a354>  // b.any
  43cc14:	cmp	x0, x10
  43cc18:	b.ls	43cc2c <ferror@plt+0x3a3ac>  // b.plast
  43cc1c:	ldurb	w6, [x0, #-1]
  43cc20:	eor	w2, w9, #0x1
  43cc24:	cmp	w6, #0x5c
  43cc28:	csel	w9, w2, w9, ne  // ne = any
  43cc2c:	strb	w13, [x1], #2
  43cc30:	add	x3, x3, #0x2
  43cc34:	ldrb	w2, [x0]
  43cc38:	b	43cbf0 <ferror@plt+0x3a370>
  43cc3c:	strb	w2, [x1], #2
  43cc40:	add	x3, x3, #0x2
  43cc44:	ldrb	w2, [x0]
  43cc48:	b	43cbf0 <ferror@plt+0x3a370>
  43cc4c:	ldr	w1, [x27, #24]
  43cc50:	cmp	w1, #0xa
  43cc54:	b.ne	43c7c4 <ferror@plt+0x39f44>  // b.any
  43cc58:	mov	w0, #0x1                   	// #1
  43cc5c:	mov	x28, #0x10                  	// #16
  43cc60:	str	w0, [sp, #156]
  43cc64:	ldr	x1, [sp, #144]
  43cc68:	cbz	x1, 43cc7c <ferror@plt+0x3a3fc>
  43cc6c:	mov	x0, x24
  43cc70:	str	x9, [sp, #120]
  43cc74:	bl	42d120 <ferror@plt+0x2a8a0>
  43cc78:	ldr	x9, [sp, #120]
  43cc7c:	mov	x1, x28
  43cc80:	mov	x0, x24
  43cc84:	str	x9, [sp, #120]
  43cc88:	bl	42d148 <ferror@plt+0x2a8c8>
  43cc8c:	mov	x2, x0
  43cc90:	ldr	x1, [x24, #40]
  43cc94:	mov	w28, #0x1                   	// #1
  43cc98:	ldr	x0, [x24, #1312]
  43cc9c:	str	x27, [sp, #128]
  43cca0:	ldr	x9, [sp, #120]
  43cca4:	sub	x0, x25, x0
  43cca8:	str	x0, [sp, #168]
  43ccac:	mov	x25, x26
  43ccb0:	ldr	w0, [x1, #60]
  43ccb4:	mov	x27, x9
  43ccb8:	str	w0, [sp, #200]
  43ccbc:	ldr	x0, [x2, #16]
  43ccc0:	str	wzr, [sp, #120]
  43ccc4:	str	x2, [sp, #144]
  43ccc8:	str	x0, [sp, #160]
  43cccc:	b	43be90 <ferror@plt+0x39610>
  43ccd0:	ldrh	w0, [x1, #16]
  43ccd4:	str	w0, [sp, #156]
  43ccd8:	add	w28, w0, #0x1
  43ccdc:	ubfiz	x28, x28, #3, #17
  43cce0:	b	43cc64 <ferror@plt+0x3a3e4>
  43cce4:	ldr	x3, [x27]
  43cce8:	mov	x0, x24
  43ccec:	ldr	x2, [sp, #176]
  43ccf0:	mov	w1, #0x3                   	// #3
  43ccf4:	str	x9, [sp, #184]
  43ccf8:	bl	422e10 <ferror@plt+0x20590>
  43ccfc:	ldrb	w0, [x24, #16]
  43cd00:	ldr	x9, [sp, #184]
  43cd04:	cbz	w0, 43bef0 <ferror@plt+0x39670>
  43cd08:	mov	x25, x26
  43cd0c:	mov	x27, x9
  43cd10:	mov	w22, #0x0                   	// #0
  43cd14:	mov	w28, #0x0                   	// #0
  43cd18:	b	43be90 <ferror@plt+0x39610>
  43cd1c:	mov	w0, #0xa                   	// #10
  43cd20:	strb	w0, [x1]
  43cd24:	ldr	x1, [sp, #128]
  43cd28:	mov	x0, x24
  43cd2c:	ldr	x2, [x25, #16]
  43cd30:	str	wzr, [sp, #96]
  43cd34:	mov	w28, #0x0                   	// #0
  43cd38:	bl	4365b0 <ferror@plt+0x33d30>
  43cd3c:	ldr	x23, [x24, #136]
  43cd40:	str	x25, [x23, #32]
  43cd44:	b	43c80c <ferror@plt+0x39f8c>
  43cd48:	mov	x0, #0x0                   	// #0
  43cd4c:	ldrb	w2, [x10, x0]
  43cd50:	strb	w2, [x1, x0]
  43cd54:	add	x0, x0, #0x1
  43cd58:	cmp	x0, x6
  43cd5c:	b.ne	43cd4c <ferror@plt+0x3a4cc>  // b.any
  43cd60:	b	43cb60 <ferror@plt+0x3a2e0>
  43cd64:	ldr	x0, [sp, #128]
  43cd68:	ldrb	w0, [x0, #18]
  43cd6c:	and	w0, w0, #0x3
  43cd70:	cmp	w0, #0x3
  43cd74:	b.eq	43cdec <ferror@plt+0x3a56c>  // b.none
  43cd78:	ldrb	w0, [x27, #19]
  43cd7c:	ldr	w23, [x27, #12]
  43cd80:	ldr	x26, [x27, #24]
  43cd84:	orr	w0, w0, #0x20
  43cd88:	strb	w0, [x27, #19]
  43cd8c:	ldr	x1, [sp, #128]
  43cd90:	mov	x3, x23
  43cd94:	mov	x2, x26
  43cd98:	mov	x0, x24
  43cd9c:	mov	w28, #0x0                   	// #0
  43cda0:	bl	4365b0 <ferror@plt+0x33d30>
  43cda4:	str	wzr, [sp, #96]
  43cda8:	ldr	x23, [x24, #136]
  43cdac:	b	43c80c <ferror@plt+0x39f8c>
  43cdb0:	ldr	x0, [x24, #1312]
  43cdb4:	sub	x27, x1, x0
  43cdb8:	add	x1, x27, #0x4
  43cdbc:	add	x1, x1, x1, lsl #1
  43cdc0:	lsr	x25, x1, #1
  43cdc4:	mov	x1, x25
  43cdc8:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43cdcc:	mov	x1, x0
  43cdd0:	add	x0, x0, x25
  43cdd4:	str	x1, [x24, #1312]
  43cdd8:	add	x1, x1, x27
  43cddc:	str	x0, [x24, #1320]
  43cde0:	str	x1, [x24, #1328]
  43cde4:	ldr	x4, [sp, #216]
  43cde8:	b	43c6b4 <ferror@plt+0x39e34>
  43cdec:	ldr	x1, [sp, #128]
  43cdf0:	mov	w2, #0x0                   	// #0
  43cdf4:	mov	x0, x24
  43cdf8:	bl	435c20 <ferror@plt+0x333a0>
  43cdfc:	mov	x25, x0
  43ce00:	bl	402270 <strlen@plt>
  43ce04:	mov	x1, x0
  43ce08:	mov	x23, x1
  43ce0c:	mov	x0, x24
  43ce10:	add	x1, x1, #0x1
  43ce14:	bl	42d3b8 <ferror@plt+0x2ab38>
  43ce18:	mov	x26, x0
  43ce1c:	mov	x1, x25
  43ce20:	mov	x2, x23
  43ce24:	bl	402220 <memcpy@plt>
  43ce28:	mov	w0, #0xa                   	// #10
  43ce2c:	strb	w0, [x26, x23]
  43ce30:	b	43cd8c <ferror@plt+0x3a50c>
  43ce34:	mov	x0, x24
  43ce38:	mov	w24, w28
  43ce3c:	mov	x28, x0
  43ce40:	mov	w4, #0x18                  	// #24
  43ce44:	mov	w9, #0x1                   	// #1
  43ce48:	mov	w2, #0x0                   	// #0
  43ce4c:	ldr	x8, [x0]
  43ce50:	mov	w19, #0x0                   	// #0
  43ce54:	ldr	x0, [x0, #40]
  43ce58:	ldr	w1, [x0, #12]
  43ce5c:	ldr	x7, [x0]
  43ce60:	sub	w1, w1, #0x1
  43ce64:	ldr	w3, [x0, #60]
  43ce68:	strb	w9, [x8, #104]
  43ce6c:	smull	x1, w1, w4
  43ce70:	add	x4, x7, x1
  43ce74:	ldr	w1, [x7, x1]
  43ce78:	ldrb	w7, [x4, #6]
  43ce7c:	ldr	w4, [x4, #16]
  43ce80:	sub	w1, w3, w1
  43ce84:	add	w4, w4, #0x1
  43ce88:	lsr	w1, w1, w7
  43ce8c:	add	w1, w1, w4
  43ce90:	bl	431640 <ferror@plt+0x2edc0>
  43ce94:	b	43c1c4 <ferror@plt+0x39944>
  43ce98:	mov	x1, x27
  43ce9c:	mov	w2, #0x0                   	// #0
  43cea0:	mov	x0, x24
  43cea4:	bl	435c20 <ferror@plt+0x333a0>
  43cea8:	mov	x26, x0
  43ceac:	bl	402270 <strlen@plt>
  43ceb0:	mov	x1, x0
  43ceb4:	mov	x23, x1
  43ceb8:	mov	x0, x24
  43cebc:	add	x1, x1, #0x1
  43cec0:	bl	42d3b8 <ferror@plt+0x2ab38>
  43cec4:	mov	x1, x26
  43cec8:	mov	x26, x0
  43cecc:	mov	x2, x23
  43ced0:	bl	402220 <memcpy@plt>
  43ced4:	mov	w0, #0xa                   	// #10
  43ced8:	strb	w0, [x26, x23]
  43cedc:	b	43c7f0 <ferror@plt+0x39f70>
  43cee0:	stp	x29, x30, [sp, #-32]!
  43cee4:	mov	x29, sp
  43cee8:	str	x19, [sp, #16]
  43ceec:	mov	x19, x0
  43cef0:	ldr	x1, [x19]
  43cef4:	mov	x0, x19
  43cef8:	ldrb	w1, [x1, #104]
  43cefc:	cbz	w1, 43cf0c <ferror@plt+0x3a68c>
  43cf00:	bl	42bf38 <ferror@plt+0x296b8>
  43cf04:	ands	w0, w0, #0xff
  43cf08:	b.eq	43cf38 <ferror@plt+0x3a6b8>  // b.none
  43cf0c:	mov	x0, x19
  43cf10:	mov	w2, #0x0                   	// #0
  43cf14:	mov	x1, #0x0                   	// #0
  43cf18:	bl	43bdb8 <ferror@plt+0x39538>
  43cf1c:	tst	w0, #0xff
  43cf20:	b.eq	43cef0 <ferror@plt+0x3a670>  // b.none
  43cf24:	ldrb	w0, [x19, #18]
  43cf28:	cbnz	w0, 43cef0 <ferror@plt+0x3a670>
  43cf2c:	ldr	x0, [x19]
  43cf30:	cmp	x0, #0x0
  43cf34:	cset	w0, ne  // ne = any
  43cf38:	ldr	x19, [sp, #16]
  43cf3c:	ldp	x29, x30, [sp], #32
  43cf40:	ret
  43cf44:	nop
  43cf48:	ldrb	w1, [x0, #19]
  43cf4c:	tbz	w1, #2, 43cfa8 <ferror@plt+0x3a728>
  43cf50:	ldrh	w1, [x0, #16]
  43cf54:	cbz	w1, 43cfa8 <ferror@plt+0x3a728>
  43cf58:	ldr	x3, [x0, #24]
  43cf5c:	ldrh	w2, [x3, #4]
  43cf60:	ldr	w1, [x3]
  43cf64:	cbz	w2, 43cfb0 <ferror@plt+0x3a730>
  43cf68:	ldr	x6, [x0]
  43cf6c:	mov	x0, x1
  43cf70:	mov	x5, #0xfffffffffffffff8    	// #-8
  43cf74:	nop
  43cf78:	add	x2, x5, w2, uxtw #3
  43cf7c:	add	x1, x1, #0xd
  43cf80:	and	x1, x1, #0xfffffffffffffff8
  43cf84:	add	x3, x3, x1
  43cf88:	ldr	x4, [x6, x2]
  43cf8c:	ldrh	w2, [x3, #4]
  43cf90:	ldr	w1, [x3]
  43cf94:	ldr	w4, [x4, #8]
  43cf98:	add	x4, x4, x1
  43cf9c:	add	x0, x0, x4
  43cfa0:	cbnz	w2, 43cf78 <ferror@plt+0x3a6f8>
  43cfa4:	ret
  43cfa8:	ldr	w0, [x0, #12]
  43cfac:	ret
  43cfb0:	mov	x0, x1
  43cfb4:	ret
  43cfb8:	stp	x29, x30, [sp, #-64]!
  43cfbc:	mov	x3, x1
  43cfc0:	mov	x29, sp
  43cfc4:	stp	x21, x22, [sp, #32]
  43cfc8:	mov	x22, x0
  43cfcc:	ldrb	w0, [x0, #19]
  43cfd0:	stp	x19, x20, [sp, #16]
  43cfd4:	ldr	x20, [x22, #24]
  43cfd8:	tbz	w0, #2, 43d05c <ferror@plt+0x3a7dc>
  43cfdc:	ldrh	w0, [x22, #16]
  43cfe0:	cbz	w0, 43d05c <ferror@plt+0x3a7dc>
  43cfe4:	str	x23, [sp, #48]
  43cfe8:	mov	x23, #0xfffffffffffffff8    	// #-8
  43cfec:	b	43d01c <ferror@plt+0x3a79c>
  43cff0:	ldr	x2, [x22]
  43cff4:	ldr	x21, [x2, x1]
  43cff8:	ldr	w2, [x21, #8]
  43cffc:	ldr	x1, [x21]
  43d000:	bl	402220 <memcpy@plt>
  43d004:	ldr	w2, [x20]
  43d008:	ldr	w3, [x21, #8]
  43d00c:	add	x2, x2, #0xd
  43d010:	and	x2, x2, #0xfffffffffffffff8
  43d014:	add	x3, x19, x3
  43d018:	add	x20, x20, x2
  43d01c:	mov	x1, x20
  43d020:	mov	x0, x3
  43d024:	ldr	w2, [x1], #6
  43d028:	bl	402220 <memcpy@plt>
  43d02c:	ldr	w19, [x20]
  43d030:	ldrh	w2, [x20, #4]
  43d034:	add	x19, x0, x19
  43d038:	mov	x0, x19
  43d03c:	add	x1, x23, w2, uxtw #3
  43d040:	cbnz	w2, 43cff0 <ferror@plt+0x3a770>
  43d044:	mov	x0, x19
  43d048:	ldp	x19, x20, [sp, #16]
  43d04c:	ldp	x21, x22, [sp, #32]
  43d050:	ldr	x23, [sp, #48]
  43d054:	ldp	x29, x30, [sp], #64
  43d058:	ret
  43d05c:	ldr	w2, [x22, #12]
  43d060:	mov	x1, x20
  43d064:	mov	x0, x3
  43d068:	bl	402220 <memcpy@plt>
  43d06c:	ldr	w19, [x22, #12]
  43d070:	ldp	x21, x22, [sp, #32]
  43d074:	add	x19, x0, x19
  43d078:	mov	x0, x19
  43d07c:	ldp	x19, x20, [sp, #16]
  43d080:	ldp	x29, x30, [sp], #64
  43d084:	ret
  43d088:	stp	x29, x30, [sp, #-96]!
  43d08c:	mov	x29, sp
  43d090:	stp	x19, x20, [sp, #16]
  43d094:	mov	x20, x0
  43d098:	ldr	x0, [x0]
  43d09c:	stp	x23, x24, [sp, #48]
  43d0a0:	ldr	x24, [x20, #136]
  43d0a4:	stp	x21, x22, [sp, #32]
  43d0a8:	ldr	x2, [x0]
  43d0ac:	stp	x25, x26, [sp, #64]
  43d0b0:	ldr	x4, [x0, #32]
  43d0b4:	ldr	x0, [x20, #1312]
  43d0b8:	sub	x1, x4, x2
  43d0bc:	ldr	x3, [x20, #1320]
  43d0c0:	str	x27, [sp, #80]
  43d0c4:	str	x0, [x20, #1328]
  43d0c8:	add	x1, x1, #0x3
  43d0cc:	stp	x2, x4, [x24, #16]
  43d0d0:	sub	x3, x3, x0
  43d0d4:	cmp	x1, x3
  43d0d8:	b.hi	43d3f4 <ferror@plt+0x3ab74>  // b.pmore
  43d0dc:	ldrb	w0, [x2]
  43d0e0:	cmp	w0, #0x28
  43d0e4:	b.eq	43d228 <ferror@plt+0x3a9a8>  // b.none
  43d0e8:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  43d0ec:	add	x23, x23, #0x2c0
  43d0f0:	mov	w22, #0x0                   	// #0
  43d0f4:	mov	w27, #0x0                   	// #0
  43d0f8:	mov	w25, #0x0                   	// #0
  43d0fc:	mov	x21, #0x0                   	// #0
  43d100:	mov	x1, #0x30                  	// #48
  43d104:	mov	x0, x20
  43d108:	bl	430af8 <ferror@plt+0x2e278>
  43d10c:	mov	x2, x0
  43d110:	mov	w1, #0x2                   	// #2
  43d114:	mov	x0, x20
  43d118:	bl	436ac0 <ferror@plt+0x34240>
  43d11c:	ldrb	w1, [x0, #19]
  43d120:	mov	x19, x0
  43d124:	str	x21, [x0]
  43d128:	strh	w27, [x0, #16]
  43d12c:	bfi	w1, w22, #2, #1
  43d130:	strb	w1, [x0, #19]
  43d134:	ldrb	w21, [x20, #1124]
  43d138:	ldr	x22, [x20]
  43d13c:	ldr	x0, [x24, #16]
  43d140:	ldr	x4, [x20, #1328]
  43d144:	mov	x1, x0
  43d148:	mov	x3, x4
  43d14c:	ldrb	w5, [x1], #1
  43d150:	strb	w5, [x3], #1
  43d154:	mov	x2, x5
  43d158:	ldrh	w5, [x23, x5, lsl #1]
  43d15c:	tbnz	w5, #11, 43d21c <ferror@plt+0x3a99c>
  43d160:	cmp	w2, #0x2f
  43d164:	b.ne	43d178 <ferror@plt+0x3a8f8>  // b.any
  43d168:	ldrb	w2, [x0, #1]
  43d16c:	cmp	w2, #0x2a
  43d170:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  43d174:	b.ne	43d41c <ferror@plt+0x3ab9c>  // b.any
  43d178:	str	x4, [x20, #1328]
  43d17c:	mov	x1, x19
  43d180:	str	x0, [x22]
  43d184:	mov	w2, #0x0                   	// #0
  43d188:	mov	x0, x20
  43d18c:	ldrb	w3, [x20, #24]
  43d190:	add	w3, w3, #0x1
  43d194:	strb	w3, [x20, #24]
  43d198:	bl	43bdb8 <ferror@plt+0x39538>
  43d19c:	ldrb	w2, [x20, #24]
  43d1a0:	mov	w1, w25
  43d1a4:	mov	x0, x20
  43d1a8:	sub	w2, w2, #0x1
  43d1ac:	strb	w2, [x20, #24]
  43d1b0:	bl	436a78 <ferror@plt+0x341f8>
  43d1b4:	cbz	x19, 43d1fc <ferror@plt+0x3a97c>
  43d1b8:	ldr	x0, [x20, #1312]
  43d1bc:	ldr	x1, [x20, #1328]
  43d1c0:	cmp	x0, x1
  43d1c4:	b.cc	43d1d8 <ferror@plt+0x3a958>  // b.lo, b.ul, b.last
  43d1c8:	b	43d1e8 <ferror@plt+0x3a968>
  43d1cc:	sub	x1, x1, #0x1
  43d1d0:	cmp	x0, x1
  43d1d4:	b.eq	43d1e8 <ferror@plt+0x3a968>  // b.none
  43d1d8:	ldurb	w2, [x1, #-1]
  43d1dc:	ldrh	w2, [x23, x2, lsl #1]
  43d1e0:	tst	w2, #0xc00
  43d1e4:	b.ne	43d1cc <ferror@plt+0x3a94c>  // b.any
  43d1e8:	str	x1, [x20, #1328]
  43d1ec:	mov	x0, x20
  43d1f0:	mov	x1, x19
  43d1f4:	mov	w2, #0x0                   	// #0
  43d1f8:	bl	43bc40 <ferror@plt+0x393c0>
  43d1fc:	mov	x0, x19
  43d200:	ldp	x19, x20, [sp, #16]
  43d204:	ldp	x21, x22, [sp, #32]
  43d208:	ldp	x23, x24, [sp, #48]
  43d20c:	ldp	x25, x26, [sp, #64]
  43d210:	ldr	x27, [sp, #80]
  43d214:	ldp	x29, x30, [sp], #96
  43d218:	ret
  43d21c:	mov	x4, x3
  43d220:	mov	x0, x1
  43d224:	b	43d144 <ferror@plt+0x3a8c4>
  43d228:	ldr	x0, [x20, #136]
  43d22c:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  43d230:	ldr	x3, [x20, #1328]
  43d234:	add	x23, x23, #0x2c0
  43d238:	ldr	x21, [x0, #16]
  43d23c:	add	x19, x3, #0x1
  43d240:	mov	w25, #0x0                   	// #0
  43d244:	mov	w26, #0x204                 	// #516
  43d248:	add	x21, x21, #0x1
  43d24c:	nop
  43d250:	mov	x1, x21
  43d254:	ldrb	w2, [x1], #1
  43d258:	sturb	w2, [x19, #-1]
  43d25c:	mov	x0, x2
  43d260:	ldrh	w2, [x23, x2, lsl #1]
  43d264:	tbnz	w2, #11, 43d2b0 <ferror@plt+0x3aa30>
  43d268:	cmp	w0, #0x2f
  43d26c:	b.ne	43d2c0 <ferror@plt+0x3aa40>  // b.any
  43d270:	ldrb	w0, [x21, #1]
  43d274:	cmp	w0, #0x2a
  43d278:	b.ne	43d2c0 <ferror@plt+0x3aa40>  // b.any
  43d27c:	str	x19, [x20, #1328]
  43d280:	mov	w2, #0x0                   	// #0
  43d284:	mov	x0, x20
  43d288:	bl	43ba90 <ferror@plt+0x39210>
  43d28c:	mov	x21, x0
  43d290:	mov	x1, x21
  43d294:	ldr	x3, [x20, #1328]
  43d298:	ldrb	w2, [x1], #1
  43d29c:	add	x19, x3, #0x1
  43d2a0:	mov	x0, x2
  43d2a4:	sturb	w2, [x19, #-1]
  43d2a8:	ldrh	w2, [x23, x2, lsl #1]
  43d2ac:	tbz	w2, #11, 43d268 <ferror@plt+0x3a9e8>
  43d2b0:	mov	x3, x19
  43d2b4:	mov	x21, x1
  43d2b8:	add	x19, x19, #0x1
  43d2bc:	b	43d250 <ferror@plt+0x3a9d0>
  43d2c0:	str	x3, [x20, #1328]
  43d2c4:	ldrb	w1, [x21]
  43d2c8:	ldrh	w0, [x23, w1, sxtw #1]
  43d2cc:	and	w27, w0, #0x200
  43d2d0:	tbnz	w0, #9, 43d2e4 <ferror@plt+0x3aa64>
  43d2d4:	cmp	w1, #0x24
  43d2d8:	b.ne	43d468 <ferror@plt+0x3abe8>  // b.any
  43d2dc:	ldrb	w0, [x20, #1146]
  43d2e0:	cbz	w0, 43d434 <ferror@plt+0x3abb4>
  43d2e4:	mov	x2, x21
  43d2e8:	b	43d2f0 <ferror@plt+0x3aa70>
  43d2ec:	add	x19, x19, #0x1
  43d2f0:	ldrb	w0, [x2], #1
  43d2f4:	sturb	w0, [x19, #-1]
  43d2f8:	ldrb	w0, [x2]
  43d2fc:	ldrh	w0, [x23, x0, lsl #1]
  43d300:	tst	w26, w0
  43d304:	b.ne	43d2ec <ferror@plt+0x3aa6c>  // b.any
  43d308:	ldr	x4, [x20, #136]
  43d30c:	mov	w3, #0x1                   	// #1
  43d310:	ldr	x0, [x20, #1088]
  43d314:	ldr	x1, [x20, #1328]
  43d318:	str	x2, [x4, #16]
  43d31c:	sub	x2, x19, x1
  43d320:	bl	43b580 <ferror@plt+0x38d00>
  43d324:	str	x19, [x20, #1328]
  43d328:	mov	x3, x0
  43d32c:	mov	x2, x0
  43d330:	mov	w1, w25
  43d334:	mov	x0, x20
  43d338:	bl	436960 <ferror@plt+0x340e0>
  43d33c:	tst	w0, #0xff
  43d340:	b.eq	43d434 <ferror@plt+0x3abb4>  // b.none
  43d344:	ldr	x0, [x20, #136]
  43d348:	add	w25, w25, #0x1
  43d34c:	ldr	x3, [x20, #1328]
  43d350:	ldr	x22, [x0, #16]
  43d354:	nop
  43d358:	mov	x19, x3
  43d35c:	ldrb	w6, [x22]
  43d360:	add	x4, x22, #0x1
  43d364:	mov	x1, x4
  43d368:	mov	x0, x20
  43d36c:	mov	x5, x6
  43d370:	strb	w6, [x19], #1
  43d374:	mov	x21, x4
  43d378:	mov	w2, #0x0                   	// #0
  43d37c:	ldrh	w6, [x23, x6, lsl #1]
  43d380:	tbnz	w6, #11, 43d3ac <ferror@plt+0x3ab2c>
  43d384:	cmp	w5, #0x2f
  43d388:	b.ne	43d3b8 <ferror@plt+0x3ab38>  // b.any
  43d38c:	ldrb	w5, [x22, #1]
  43d390:	cmp	w5, #0x2a
  43d394:	b.ne	43d3b8 <ferror@plt+0x3ab38>  // b.any
  43d398:	str	x19, [x20, #1328]
  43d39c:	bl	43ba90 <ferror@plt+0x39210>
  43d3a0:	mov	x22, x0
  43d3a4:	ldr	x3, [x20, #1328]
  43d3a8:	b	43d358 <ferror@plt+0x3aad8>
  43d3ac:	mov	x3, x19
  43d3b0:	mov	x22, x4
  43d3b4:	b	43d358 <ferror@plt+0x3aad8>
  43d3b8:	str	x3, [x20, #1328]
  43d3bc:	ldrb	w0, [x22]
  43d3c0:	cmp	w0, #0x2c
  43d3c4:	b.eq	43d250 <ferror@plt+0x3a9d0>  // b.none
  43d3c8:	cmp	w0, #0x29
  43d3cc:	ubfiz	x1, x25, #3, #32
  43d3d0:	and	w27, w25, #0xffff
  43d3d4:	b.ne	43d438 <ferror@plt+0x3abb8>  // b.any
  43d3d8:	ldr	x2, [x20, #136]
  43d3dc:	mov	x0, x20
  43d3e0:	mov	w22, #0x1                   	// #1
  43d3e4:	str	x4, [x2, #16]
  43d3e8:	bl	430be0 <ferror@plt+0x2e360>
  43d3ec:	mov	x21, x0
  43d3f0:	b	43d100 <ferror@plt+0x3a880>
  43d3f4:	add	x1, x1, x1, lsl #1
  43d3f8:	lsr	x19, x1, #1
  43d3fc:	mov	x1, x19
  43d400:	bl	45caa0 <_obstack_memory_used@@Base+0x178>
  43d404:	add	x19, x0, x19
  43d408:	ldr	x2, [x24, #16]
  43d40c:	str	x0, [x20, #1312]
  43d410:	str	x19, [x20, #1320]
  43d414:	str	x0, [x20, #1328]
  43d418:	b	43d0dc <ferror@plt+0x3a85c>
  43d41c:	str	x3, [x20, #1328]
  43d420:	mov	x0, x20
  43d424:	mov	w2, #0x0                   	// #0
  43d428:	bl	43ba90 <ferror@plt+0x39210>
  43d42c:	ldr	x4, [x20, #1328]
  43d430:	b	43d144 <ferror@plt+0x3a8c4>
  43d434:	mov	x22, x21
  43d438:	mov	w1, #0x3                   	// #3
  43d43c:	mov	x0, x20
  43d440:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43d444:	add	x2, x2, #0x40
  43d448:	bl	422e10 <ferror@plt+0x20590>
  43d44c:	mov	x19, #0x0                   	// #0
  43d450:	ldr	x0, [x20, #136]
  43d454:	ldrb	w1, [x22]
  43d458:	cmp	w1, #0x29
  43d45c:	cinc	x22, x22, eq  // eq = none
  43d460:	str	x22, [x0, #16]
  43d464:	b	43d134 <ferror@plt+0x3a8b4>
  43d468:	cmp	w1, #0x29
  43d46c:	ccmp	w25, #0x0, #0x0, eq  // eq = none
  43d470:	b.ne	43d434 <ferror@plt+0x3abb4>  // b.any
  43d474:	add	x4, x21, #0x1
  43d478:	mov	x1, #0x0                   	// #0
  43d47c:	mov	w25, #0x0                   	// #0
  43d480:	b	43d3d8 <ferror@plt+0x3ab58>
  43d484:	nop
  43d488:	stp	x29, x30, [sp, #-112]!
  43d48c:	mov	x29, sp
  43d490:	stp	x19, x20, [sp, #16]
  43d494:	mov	x20, x1
  43d498:	ldr	w1, [x0, #12]
  43d49c:	mov	x19, x0
  43d4a0:	stp	x25, x26, [sp, #64]
  43d4a4:	ldr	w0, [x20, #12]
  43d4a8:	stp	x27, x28, [sp, #80]
  43d4ac:	add	w0, w1, w0
  43d4b0:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  43d4b4:	mov	x25, x0
  43d4b8:	ldrh	w1, [x19, #16]
  43d4bc:	ldr	w3, [x19, #12]
  43d4c0:	add	x28, x0, x3
  43d4c4:	cbz	w1, 43d6c8 <ferror@plt+0x3ae48>
  43d4c8:	stp	x23, x24, [sp, #48]
  43d4cc:	ldr	x23, [x20, #24]
  43d4d0:	stp	x21, x22, [sp, #32]
  43d4d4:	mov	w20, #0x0                   	// #0
  43d4d8:	ldr	x24, [x19, #24]
  43d4dc:	mov	w21, #0x0                   	// #0
  43d4e0:	ldrh	w0, [x23, #4]
  43d4e4:	ldrh	w9, [x24, #4]
  43d4e8:	cmp	w0, w9
  43d4ec:	b.ne	43d688 <ferror@plt+0x3ae08>  // b.any
  43d4f0:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  43d4f4:	add	x22, x22, #0x2c0
  43d4f8:	mov	w27, #0x20                  	// #32
  43d4fc:	mov	w26, #0x27                  	// #39
  43d500:	mov	x4, x24
  43d504:	mov	x3, x23
  43d508:	ldr	w19, [x4], #6
  43d50c:	ldr	w8, [x3], #6
  43d510:	cbz	x19, 43d6b4 <ferror@plt+0x3ae34>
  43d514:	add	x7, x25, #0x1
  43d518:	mov	x6, x19
  43d51c:	b	43d540 <ferror@plt+0x3acc0>
  43d520:	cmp	w20, w5
  43d524:	csel	w20, w20, wzr, ne  // ne = any
  43d528:	sturb	w5, [x7, #-1]
  43d52c:	mov	x2, x7
  43d530:	add	x4, x4, #0x1
  43d534:	sub	x6, x6, #0x1
  43d538:	add	x7, x7, #0x1
  43d53c:	cbz	x6, 43d5a0 <ferror@plt+0x3ad20>
  43d540:	ldrb	w5, [x4]
  43d544:	ldrh	w0, [x22, w5, sxtw #1]
  43d548:	tst	w0, #0xc00
  43d54c:	ccmp	w20, #0x0, #0x0, ne  // ne = any
  43d550:	b.eq	43d57c <ferror@plt+0x3acfc>  // b.none
  43d554:	cmp	w5, #0x22
  43d558:	ccmp	w5, w26, #0x4, ne  // ne = any
  43d55c:	b.ne	43d528 <ferror@plt+0x3aca8>  // b.any
  43d560:	cbnz	w20, 43d520 <ferror@plt+0x3aca0>
  43d564:	mov	w20, w5
  43d568:	b	43d528 <ferror@plt+0x3aca8>
  43d56c:	ldrb	w0, [x4]
  43d570:	ldrh	w0, [x22, x0, lsl #1]
  43d574:	tst	w0, #0xc00
  43d578:	b.eq	43d588 <ferror@plt+0x3ad08>  // b.none
  43d57c:	add	x4, x4, #0x1
  43d580:	subs	x6, x6, #0x1
  43d584:	b.ne	43d56c <ferror@plt+0x3acec>  // b.any
  43d588:	sturb	w27, [x7, #-1]
  43d58c:	mov	x2, x7
  43d590:	mov	w20, #0x0                   	// #0
  43d594:	add	x7, x7, #0x1
  43d598:	cbnz	x6, 43d540 <ferror@plt+0x3acc0>
  43d59c:	nop
  43d5a0:	sub	x2, x2, x25
  43d5a4:	cbz	x8, 43d6c0 <ferror@plt+0x3ae40>
  43d5a8:	add	x6, x28, #0x1
  43d5ac:	mov	x5, x8
  43d5b0:	b	43d5d4 <ferror@plt+0x3ad54>
  43d5b4:	cmp	w4, w21
  43d5b8:	csel	w21, w21, wzr, ne  // ne = any
  43d5bc:	sturb	w4, [x6, #-1]
  43d5c0:	mov	x7, x6
  43d5c4:	add	x3, x3, #0x1
  43d5c8:	sub	x5, x5, #0x1
  43d5cc:	add	x6, x6, #0x1
  43d5d0:	cbz	x5, 43d630 <ferror@plt+0x3adb0>
  43d5d4:	ldrb	w4, [x3]
  43d5d8:	ldrh	w0, [x22, w4, sxtw #1]
  43d5dc:	tst	w0, #0xc00
  43d5e0:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  43d5e4:	b.eq	43d610 <ferror@plt+0x3ad90>  // b.none
  43d5e8:	cmp	w4, #0x22
  43d5ec:	ccmp	w4, w26, #0x4, ne  // ne = any
  43d5f0:	b.ne	43d5bc <ferror@plt+0x3ad3c>  // b.any
  43d5f4:	cbnz	w21, 43d5b4 <ferror@plt+0x3ad34>
  43d5f8:	mov	w21, w4
  43d5fc:	b	43d5bc <ferror@plt+0x3ad3c>
  43d600:	ldrb	w0, [x3]
  43d604:	ldrh	w0, [x22, x0, lsl #1]
  43d608:	tst	w0, #0xc00
  43d60c:	b.eq	43d61c <ferror@plt+0x3ad9c>  // b.none
  43d610:	add	x3, x3, #0x1
  43d614:	subs	x5, x5, #0x1
  43d618:	b.ne	43d600 <ferror@plt+0x3ad80>  // b.any
  43d61c:	sturb	w27, [x6, #-1]
  43d620:	mov	x7, x6
  43d624:	mov	w21, #0x0                   	// #0
  43d628:	add	x6, x6, #0x1
  43d62c:	cbnz	x5, 43d5d4 <ferror@plt+0x3ad54>
  43d630:	sub	x7, x7, x28
  43d634:	str	w9, [sp, #100]
  43d638:	cmp	x2, x7
  43d63c:	str	x8, [sp, #104]
  43d640:	b.ne	43d688 <ferror@plt+0x3ae08>  // b.any
  43d644:	mov	x1, x28
  43d648:	mov	x0, x25
  43d64c:	bl	402590 <memcmp@plt>
  43d650:	ldr	w9, [sp, #100]
  43d654:	ldr	x8, [sp, #104]
  43d658:	cbnz	w0, 43d688 <ferror@plt+0x3ae08>
  43d65c:	cbz	w9, 43d848 <ferror@plt+0x3afc8>
  43d660:	add	x19, x19, #0xd
  43d664:	add	x2, x8, #0xd
  43d668:	and	x19, x19, #0xfffffffffffffff8
  43d66c:	and	x2, x2, #0xfffffffffffffff8
  43d670:	add	x24, x24, x19
  43d674:	add	x23, x23, x2
  43d678:	ldrh	w9, [x24, #4]
  43d67c:	ldrh	w0, [x23, #4]
  43d680:	cmp	w0, w9
  43d684:	b.eq	43d500 <ferror@plt+0x3ac80>  // b.none
  43d688:	ldp	x21, x22, [sp, #32]
  43d68c:	ldp	x23, x24, [sp, #48]
  43d690:	mov	x0, x25
  43d694:	mov	w19, #0x1                   	// #1
  43d698:	bl	402640 <free@plt>
  43d69c:	mov	w0, w19
  43d6a0:	ldp	x19, x20, [sp, #16]
  43d6a4:	ldp	x25, x26, [sp, #64]
  43d6a8:	ldp	x27, x28, [sp, #80]
  43d6ac:	ldp	x29, x30, [sp], #112
  43d6b0:	ret
  43d6b4:	cbz	x8, 43d65c <ferror@plt+0x3addc>
  43d6b8:	mov	x2, #0x0                   	// #0
  43d6bc:	b	43d5a8 <ferror@plt+0x3ad28>
  43d6c0:	mov	x7, #0x0                   	// #0
  43d6c4:	b	43d634 <ferror@plt+0x3adb4>
  43d6c8:	ldr	w2, [x20, #12]
  43d6cc:	ldr	x4, [x19, #24]
  43d6d0:	ldr	x0, [x20, #24]
  43d6d4:	cbz	x3, 43d874 <ferror@plt+0x3aff4>
  43d6d8:	adrp	x5, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  43d6dc:	add	x6, x25, #0x1
  43d6e0:	add	x5, x5, #0x2c0
  43d6e4:	mov	w7, #0x0                   	// #0
  43d6e8:	mov	w10, #0x20                  	// #32
  43d6ec:	mov	w9, #0x27                  	// #39
  43d6f0:	b	43d714 <ferror@plt+0x3ae94>
  43d6f4:	cmp	w1, w7
  43d6f8:	csel	w7, w7, wzr, ne  // ne = any
  43d6fc:	sturb	w1, [x6, #-1]
  43d700:	mov	x8, x6
  43d704:	add	x4, x4, #0x1
  43d708:	sub	x3, x3, #0x1
  43d70c:	add	x6, x6, #0x1
  43d710:	cbz	x3, 43d770 <ferror@plt+0x3aef0>
  43d714:	ldrb	w1, [x4]
  43d718:	ldrh	w8, [x5, w1, sxtw #1]
  43d71c:	tst	w8, #0xc00
  43d720:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  43d724:	b.eq	43d750 <ferror@plt+0x3aed0>  // b.none
  43d728:	cmp	w1, #0x22
  43d72c:	ccmp	w1, w9, #0x4, ne  // ne = any
  43d730:	b.ne	43d6fc <ferror@plt+0x3ae7c>  // b.any
  43d734:	cbnz	w7, 43d6f4 <ferror@plt+0x3ae74>
  43d738:	mov	w7, w1
  43d73c:	b	43d6fc <ferror@plt+0x3ae7c>
  43d740:	ldrb	w1, [x4]
  43d744:	ldrh	w1, [x5, x1, lsl #1]
  43d748:	tst	w1, #0xc00
  43d74c:	b.eq	43d75c <ferror@plt+0x3aedc>  // b.none
  43d750:	add	x4, x4, #0x1
  43d754:	subs	x3, x3, #0x1
  43d758:	b.ne	43d740 <ferror@plt+0x3aec0>  // b.any
  43d75c:	sturb	w10, [x6, #-1]
  43d760:	mov	x8, x6
  43d764:	mov	w7, #0x0                   	// #0
  43d768:	add	x6, x6, #0x1
  43d76c:	cbnz	x3, 43d714 <ferror@plt+0x3ae94>
  43d770:	sub	x3, x8, x25
  43d774:	cbz	x2, 43d80c <ferror@plt+0x3af8c>
  43d778:	add	x4, x28, #0x1
  43d77c:	mov	w6, #0x0                   	// #0
  43d780:	mov	w9, #0x20                  	// #32
  43d784:	mov	w8, #0x27                  	// #39
  43d788:	b	43d7ac <ferror@plt+0x3af2c>
  43d78c:	cmp	w6, w1
  43d790:	csel	w6, w6, wzr, ne  // ne = any
  43d794:	sturb	w1, [x4, #-1]
  43d798:	mov	x7, x4
  43d79c:	add	x0, x0, #0x1
  43d7a0:	sub	x2, x2, #0x1
  43d7a4:	add	x4, x4, #0x1
  43d7a8:	cbz	x2, 43d808 <ferror@plt+0x3af88>
  43d7ac:	ldrb	w1, [x0]
  43d7b0:	ldrh	w7, [x5, w1, sxtw #1]
  43d7b4:	tst	w7, #0xc00
  43d7b8:	ccmp	w6, #0x0, #0x0, ne  // ne = any
  43d7bc:	b.eq	43d7e8 <ferror@plt+0x3af68>  // b.none
  43d7c0:	cmp	w1, #0x22
  43d7c4:	ccmp	w1, w8, #0x4, ne  // ne = any
  43d7c8:	b.ne	43d794 <ferror@plt+0x3af14>  // b.any
  43d7cc:	cbnz	w6, 43d78c <ferror@plt+0x3af0c>
  43d7d0:	mov	w6, w1
  43d7d4:	b	43d794 <ferror@plt+0x3af14>
  43d7d8:	ldrb	w1, [x0]
  43d7dc:	ldrh	w1, [x5, x1, lsl #1]
  43d7e0:	tst	w1, #0xc00
  43d7e4:	b.eq	43d7f4 <ferror@plt+0x3af74>  // b.none
  43d7e8:	add	x0, x0, #0x1
  43d7ec:	subs	x2, x2, #0x1
  43d7f0:	b.ne	43d7d8 <ferror@plt+0x3af58>  // b.any
  43d7f4:	sturb	w9, [x4, #-1]
  43d7f8:	mov	x7, x4
  43d7fc:	mov	w6, #0x0                   	// #0
  43d800:	add	x4, x4, #0x1
  43d804:	cbnz	x2, 43d7ac <ferror@plt+0x3af2c>
  43d808:	sub	x2, x7, x28
  43d80c:	cmp	x3, x2
  43d810:	b.ne	43d690 <ferror@plt+0x3ae10>  // b.any
  43d814:	mov	x1, x28
  43d818:	mov	x0, x25
  43d81c:	bl	402590 <memcmp@plt>
  43d820:	cmp	w0, #0x0
  43d824:	cset	w19, ne  // ne = any
  43d828:	mov	x0, x25
  43d82c:	bl	402640 <free@plt>
  43d830:	mov	w0, w19
  43d834:	ldp	x19, x20, [sp, #16]
  43d838:	ldp	x25, x26, [sp, #64]
  43d83c:	ldp	x27, x28, [sp, #80]
  43d840:	ldp	x29, x30, [sp], #112
  43d844:	ret
  43d848:	mov	x0, x25
  43d84c:	mov	w19, #0x0                   	// #0
  43d850:	ldp	x21, x22, [sp, #32]
  43d854:	ldp	x23, x24, [sp, #48]
  43d858:	bl	402640 <free@plt>
  43d85c:	mov	w0, w19
  43d860:	ldp	x19, x20, [sp, #16]
  43d864:	ldp	x25, x26, [sp, #64]
  43d868:	ldp	x27, x28, [sp, #80]
  43d86c:	ldp	x29, x30, [sp], #112
  43d870:	ret
  43d874:	cbz	x2, 43d814 <ferror@plt+0x3af94>
  43d878:	adrp	x5, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  43d87c:	add	x5, x5, #0x2c0
  43d880:	b	43d778 <ferror@plt+0x3aef8>
  43d884:	nop
  43d888:	stp	x29, x30, [sp, #-48]!
  43d88c:	mov	x29, sp
  43d890:	stp	x19, x20, [sp, #16]
  43d894:	mov	x19, x0
  43d898:	str	x21, [sp, #32]
  43d89c:	bl	42edd8 <ferror@plt+0x2c558>
  43d8a0:	ldrb	w0, [x0, #4]
  43d8a4:	cmp	w0, #0x25
  43d8a8:	mov	x0, x19
  43d8ac:	b.eq	43d8cc <ferror@plt+0x3b04c>  // b.none
  43d8b0:	mov	w1, #0x1                   	// #1
  43d8b4:	bl	4367f8 <ferror@plt+0x33f78>
  43d8b8:	mov	sp, x29
  43d8bc:	ldp	x19, x20, [sp, #16]
  43d8c0:	ldr	x21, [sp, #32]
  43d8c4:	ldp	x29, x30, [sp], #48
  43d8c8:	ret
  43d8cc:	bl	42edd8 <ferror@plt+0x2c558>
  43d8d0:	ldrb	w0, [x0, #4]
  43d8d4:	cmp	w0, #0x37
  43d8d8:	mov	x0, x19
  43d8dc:	b.eq	43d8fc <ferror@plt+0x3b07c>  // b.none
  43d8e0:	mov	w1, #0x2                   	// #2
  43d8e4:	bl	4367f8 <ferror@plt+0x33f78>
  43d8e8:	mov	sp, x29
  43d8ec:	ldp	x19, x20, [sp, #16]
  43d8f0:	ldr	x21, [sp, #32]
  43d8f4:	ldp	x29, x30, [sp], #48
  43d8f8:	ret
  43d8fc:	bl	42edd8 <ferror@plt+0x2c558>
  43d900:	mov	x20, x0
  43d904:	ldrb	w0, [x0, #4]
  43d908:	cmp	w0, #0x3e
  43d90c:	b.ne	43d988 <ferror@plt+0x3b108>  // b.any
  43d910:	ldr	w2, [x20, #8]
  43d914:	cmp	w2, #0x4
  43d918:	b.ls	43d988 <ferror@plt+0x3b108>  // b.plast
  43d91c:	ldr	x1, [x20, #16]
  43d920:	sub	w0, w2, #0x2
  43d924:	ldrb	w0, [x1, w0, uxtw]
  43d928:	cmp	w0, #0x2f
  43d92c:	b.ne	43d988 <ferror@plt+0x3b108>  // b.any
  43d930:	sub	w3, w2, #0x3
  43d934:	ldrb	w0, [x1, w3, uxtw]
  43d938:	cmp	w0, #0x2f
  43d93c:	b.ne	43d988 <ferror@plt+0x3b108>  // b.any
  43d940:	ldr	x21, [x19, #920]
  43d944:	cbz	x21, 43d8b8 <ferror@plt+0x3b038>
  43d948:	add	x0, x3, #0xf
  43d94c:	sub	w2, w2, #0x4
  43d950:	and	x0, x0, #0x1fffffff0
  43d954:	add	x1, x1, #0x1
  43d958:	sub	sp, sp, x0
  43d95c:	mov	x3, sp
  43d960:	mov	x0, x3
  43d964:	bl	402220 <memcpy@plt>
  43d968:	mov	x3, x0
  43d96c:	ldr	w2, [x20, #8]
  43d970:	mov	x1, x0
  43d974:	mov	x0, x19
  43d978:	sub	w2, w2, #0x4
  43d97c:	strb	wzr, [x3, w2, uxtw]
  43d980:	blr	x21
  43d984:	b	43d8b8 <ferror@plt+0x3b038>
  43d988:	mov	x0, x19
  43d98c:	mov	w1, #0x3                   	// #3
  43d990:	bl	4367f8 <ferror@plt+0x33f78>
  43d994:	mov	sp, x29
  43d998:	ldp	x19, x20, [sp, #16]
  43d99c:	ldr	x21, [sp, #32]
  43d9a0:	ldp	x29, x30, [sp], #48
  43d9a4:	ret
  43d9a8:	sbfiz	x3, x1, #4, #32
  43d9ac:	adrp	x4, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43d9b0:	sub	x3, x3, w1, sxtw
  43d9b4:	add	x4, x4, #0x450
  43d9b8:	add	x2, x4, x3
  43d9bc:	str	w1, [x0, #1116]
  43d9c0:	add	x5, x0, #0x400
  43d9c4:	ldrb	w6, [x4, x3]
  43d9c8:	ldrb	w1, [x2, #4]
  43d9cc:	ldrb	w4, [x2, #5]
  43d9d0:	ldrb	w3, [x2, #9]
  43d9d4:	ldrb	w12, [x2, #1]
  43d9d8:	ldrb	w10, [x2, #2]
  43d9dc:	ldrb	w7, [x2, #3]
  43d9e0:	ldrb	w11, [x2, #6]
  43d9e4:	ldrb	w9, [x2, #7]
  43d9e8:	ldrb	w8, [x2, #8]
  43d9ec:	strb	w12, [x0, #1120]
  43d9f0:	strb	w11, [x0, #1126]
  43d9f4:	strb	w10, [x0, #1127]
  43d9f8:	strb	w9, [x0, #1128]
  43d9fc:	strb	w8, [x0, #1130]
  43da00:	strb	w7, [x0, #1147]
  43da04:	strb	w6, [x0, #1152]
  43da08:	strb	w4, [x0, #1153]
  43da0c:	strb	w3, [x0, #1161]
  43da10:	strb	w1, [x0, #1164]
  43da14:	ldrb	w4, [x2, #12]
  43da18:	ldrh	w1, [x2, #10]
  43da1c:	ldrb	w3, [x2, #13]
  43da20:	sturh	w1, [x5, #141]
  43da24:	ldrb	w1, [x2, #14]
  43da28:	strb	w4, [x0, #1125]
  43da2c:	strb	w3, [x0, #1129]
  43da30:	strb	w1, [x0, #1167]
  43da34:	ret
  43da38:	stp	x29, x30, [sp, #-64]!
  43da3c:	adrp	x3, 49e000 <_obstack_memory_used@@Base+0x416d8>
  43da40:	mov	x29, sp
  43da44:	ldr	w4, [x3, #1952]
  43da48:	stp	x19, x20, [sp, #16]
  43da4c:	mov	w20, w0
  43da50:	stp	x21, x22, [sp, #32]
  43da54:	mov	x22, x2
  43da58:	str	x23, [sp, #48]
  43da5c:	mov	x23, x1
  43da60:	cbz	w4, 43dc90 <ferror@plt+0x3b410>
  43da64:	mov	x1, #0x588                 	// #1416
  43da68:	mov	x0, #0x1                   	// #1
  43da6c:	bl	45ca50 <_obstack_memory_used@@Base+0x128>
  43da70:	mov	x19, x0
  43da74:	sbfiz	x3, x20, #4, #32
  43da78:	adrp	x5, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43da7c:	sub	x0, x3, w20, sxtw
  43da80:	add	x5, x5, #0x450
  43da84:	add	x3, x5, x0
  43da88:	add	x4, x19, #0x400
  43da8c:	stp	xzr, xzr, [x19, #80]
  43da90:	mov	w1, #0x101                 	// #257
  43da94:	ldrb	w13, [x5, x0]
  43da98:	ldrb	w15, [x3, #1]
  43da9c:	mov	w8, #0x8                   	// #8
  43daa0:	ldrb	w9, [x3, #6]
  43daa4:	mov	w7, #0xff                  	// #255
  43daa8:	ldrb	w11, [x3, #2]
  43daac:	mov	w6, #0x102                 	// #258
  43dab0:	strb	w15, [x19, #1120]
  43dab4:	mov	w0, #0x1                   	// #1
  43dab8:	ldrb	w15, [x3, #7]
  43dabc:	mov	w2, #0x100                 	// #256
  43dac0:	strb	w9, [x19, #1126]
  43dac4:	mov	w5, #0x1                   	// #1
  43dac8:	ldrb	w9, [x3, #8]
  43dacc:	add	x21, x19, #0x50
  43dad0:	stp	xzr, xzr, [x19, #96]
  43dad4:	ldrb	w14, [x3, #3]
  43dad8:	stp	xzr, xzr, [x19, #112]
  43dadc:	ldrb	w12, [x3, #5]
  43dae0:	str	xzr, [x19, #128]
  43dae4:	strb	w11, [x19, #1127]
  43dae8:	strb	w15, [x19, #1128]
  43daec:	strb	w9, [x19, #1130]
  43daf0:	ldrb	w11, [x3, #9]
  43daf4:	ldrb	w10, [x3, #4]
  43daf8:	ldrh	w9, [x3, #10]
  43dafc:	str	w20, [x19, #1116]
  43db00:	add	x20, x19, #0x1c8
  43db04:	strb	w14, [x19, #1147]
  43db08:	strb	w13, [x19, #1152]
  43db0c:	strb	w12, [x19, #1153]
  43db10:	strb	w11, [x19, #1161]
  43db14:	strb	w10, [x19, #1164]
  43db18:	ldrb	w10, [x3, #12]
  43db1c:	sturh	w9, [x4, #141]
  43db20:	ldrb	w9, [x3, #13]
  43db24:	ldrb	w3, [x3, #14]
  43db28:	strb	w10, [x19, #1125]
  43db2c:	strb	w9, [x19, #1129]
  43db30:	strb	w3, [x19, #1167]
  43db34:	adrp	x3, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43db38:	sturh	w1, [x4, #99]
  43db3c:	ldr	q1, [x3, #1072]
  43db40:	adrp	x3, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43db44:	str	w8, [x19, #1112]
  43db48:	strb	w0, [x19, #1132]
  43db4c:	strh	w6, [x19, #1136]
  43db50:	strh	w7, [x19, #1198]
  43db54:	sturh	w2, [x4, #115]
  43db58:	ldr	q0, [x3, #1088]
  43db5c:	strh	w1, [x19, #1142]
  43db60:	strb	wzr, [x19, #1144]
  43db64:	strb	w0, [x19, #1146]
  43db68:	strb	w0, [x19, #1148]
  43db6c:	sturh	w6, [x4, #133]
  43db70:	strb	wzr, [x19, #1134]
  43db74:	strh	w1, [x19, #1162]
  43db78:	str	w5, [x19, #1192]
  43db7c:	strb	w5, [x19, #1245]
  43db80:	stur	q1, [x4, #184]
  43db84:	stur	q0, [x4, #200]
  43db88:	strh	w2, [x19, #1240]
  43db8c:	strb	w0, [x19, #1242]
  43db90:	bl	41dd80 <ferror@plt+0x1b500>
  43db94:	str	x0, [x19, #1168]
  43db98:	str	xzr, [x19, #1176]
  43db9c:	bl	41dd80 <ferror@plt+0x1b500>
  43dba0:	mov	x3, x0
  43dba4:	ldrb	w0, [x19, #1123]
  43dba8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x116d8>
  43dbac:	add	x2, x2, #0x148
  43dbb0:	mov	w5, #0x53                  	// #83
  43dbb4:	cmp	w0, #0x0
  43dbb8:	mov	w4, #0x16                  	// #22
  43dbbc:	cset	w6, eq  // eq = none
  43dbc0:	strb	w6, [x19, #21]
  43dbc4:	str	x22, [x19, #40]
  43dbc8:	mov	x0, x20
  43dbcc:	str	x2, [x19, #224]
  43dbd0:	mov	w1, #0xfa                  	// #250
  43dbd4:	strb	w5, [x19, #668]
  43dbd8:	str	xzr, [x19, #672]
  43dbdc:	strb	w4, [x19, #692]
  43dbe0:	strh	wzr, [x19, #694]
  43dbe4:	str	x3, [x19, #1184]
  43dbe8:	bl	42bd00 <ferror@plt+0x29480>
  43dbec:	stp	xzr, xzr, [x19, #80]
  43dbf0:	mov	x0, x19
  43dbf4:	ldr	x2, [x19, #472]
  43dbf8:	str	xzr, [x19, #120]
  43dbfc:	str	x21, [x19, #136]
  43dc00:	mov	x1, #0x0                   	// #0
  43dc04:	str	x2, [x19, #448]
  43dc08:	str	x20, [x19, #488]
  43dc0c:	bl	42d148 <ferror@plt+0x2a8c8>
  43dc10:	mov	x2, x0
  43dc14:	str	x2, [x19, #56]
  43dc18:	mov	x0, x19
  43dc1c:	mov	x1, #0x0                   	// #0
  43dc20:	bl	42d148 <ferror@plt+0x2a8c8>
  43dc24:	mov	x2, x0
  43dc28:	mov	x1, #0xfffffffffffffffe    	// #-2
  43dc2c:	str	x2, [x19, #64]
  43dc30:	str	x1, [x19, #656]
  43dc34:	mov	x0, x19
  43dc38:	str	xzr, [x19, #1400]
  43dc3c:	str	wzr, [x19, #1408]
  43dc40:	bl	427a30 <ferror@plt+0x251b0>
  43dc44:	adrp	x4, 402000 <memcpy@plt-0x220>
  43dc48:	adrp	x3, 45c000 <ferror@plt+0x59780>
  43dc4c:	add	x4, x4, #0x640
  43dc50:	add	x3, x3, #0xa18
  43dc54:	mov	x2, #0x0                   	// #0
  43dc58:	mov	x1, #0x0                   	// #0
  43dc5c:	add	x0, x19, #0x328
  43dc60:	bl	45c538 <_obstack_begin@@Base>
  43dc64:	mov	x0, x19
  43dc68:	bl	429908 <ferror@plt+0x27088>
  43dc6c:	mov	x1, x23
  43dc70:	mov	x0, x19
  43dc74:	bl	42a650 <ferror@plt+0x27dd0>
  43dc78:	mov	x0, x19
  43dc7c:	ldp	x19, x20, [sp, #16]
  43dc80:	ldp	x21, x22, [sp, #32]
  43dc84:	ldr	x23, [sp, #48]
  43dc88:	ldp	x29, x30, [sp], #64
  43dc8c:	ret
  43dc90:	add	x19, x3, #0x7a0
  43dc94:	mov	w0, #0x1                   	// #1
  43dc98:	str	w0, [x3, #1952]
  43dc9c:	bl	42b0f0 <ferror@plt+0x28870>
  43dca0:	mov	w9, #0x7c                  	// #124
  43dca4:	mov	w8, #0x5e                  	// #94
  43dca8:	mov	w7, #0x5d5b                	// #23899
  43dcac:	mov	w5, #0x5c                  	// #92
  43dcb0:	mov	w4, #0x237b                	// #9083
  43dcb4:	mov	w3, #0x7d                  	// #125
  43dcb8:	mov	w6, #0x7e                  	// #126
  43dcbc:	strb	w9, [x19, #49]
  43dcc0:	strb	w8, [x19, #55]
  43dcc4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  43dcc8:	strh	w7, [x19, #56]
  43dccc:	add	x1, x1, #0xab0
  43dcd0:	strb	w6, [x19, #61]
  43dcd4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x196d8>
  43dcd8:	strb	w5, [x19, #63]
  43dcdc:	add	x0, x0, #0x5a8
  43dce0:	strh	w4, [x19, #76]
  43dce4:	strb	w3, [x19, #78]
  43dce8:	bl	402410 <bindtextdomain@plt>
  43dcec:	b	43da64 <ferror@plt+0x3b1e4>
  43dcf0:	str	x1, [x0, #40]
  43dcf4:	ret
  43dcf8:	stp	x29, x30, [sp, #-48]!
  43dcfc:	mov	x29, sp
  43dd00:	stp	x19, x20, [sp, #16]
  43dd04:	mov	x19, x0
  43dd08:	ldr	x0, [x0, #1096]
  43dd0c:	stp	x21, x22, [sp, #32]
  43dd10:	bl	402640 <free@plt>
  43dd14:	ldr	x0, [x19]
  43dd18:	cbz	x0, 43dd30 <ferror@plt+0x3b4b0>
  43dd1c:	nop
  43dd20:	mov	x0, x19
  43dd24:	bl	421958 <ferror@plt+0x1f0d8>
  43dd28:	ldr	x0, [x19]
  43dd2c:	cbnz	x0, 43dd20 <ferror@plt+0x3b4a0>
  43dd30:	ldr	x0, [x19, #1312]
  43dd34:	bl	402640 <free@plt>
  43dd38:	ldr	x0, [x19, #504]
  43dd3c:	cbz	x0, 43dd4c <ferror@plt+0x3b4cc>
  43dd40:	bl	402640 <free@plt>
  43dd44:	str	xzr, [x19, #504]
  43dd48:	str	wzr, [x19, #512]
  43dd4c:	ldr	x0, [x19, #712]
  43dd50:	cbz	x0, 43dd58 <ferror@plt+0x3b4d8>
  43dd54:	bl	43a6f0 <ferror@plt+0x37e70>
  43dd58:	mov	x1, #0x0                   	// #0
  43dd5c:	add	x0, x19, #0x328
  43dd60:	bl	45c878 <_obstack_free@@Base>
  43dd64:	add	x22, x19, #0x1c8
  43dd68:	mov	x0, x19
  43dd6c:	bl	42a7c0 <ferror@plt+0x27f40>
  43dd70:	mov	x0, x19
  43dd74:	bl	4299f0 <ferror@plt+0x27170>
  43dd78:	mov	x0, x19
  43dd7c:	bl	419cb8 <ferror@plt+0x17438>
  43dd80:	ldr	x0, [x19, #56]
  43dd84:	bl	42d380 <ferror@plt+0x2ab00>
  43dd88:	ldr	x0, [x19, #64]
  43dd8c:	bl	42d380 <ferror@plt+0x2ab00>
  43dd90:	ldr	x0, [x19, #72]
  43dd94:	bl	42d380 <ferror@plt+0x2ab00>
  43dd98:	ldr	x0, [x22, #16]
  43dd9c:	ldr	x20, [x19, #456]
  43dda0:	bl	402640 <free@plt>
  43dda4:	cbz	x20, 43ddcc <ferror@plt+0x3b54c>
  43dda8:	mov	x21, x20
  43ddac:	ldr	x20, [x20]
  43ddb0:	ldr	x0, [x21, #16]
  43ddb4:	bl	402640 <free@plt>
  43ddb8:	cmp	x22, x21
  43ddbc:	b.eq	43ddc8 <ferror@plt+0x3b548>  // b.none
  43ddc0:	mov	x0, x21
  43ddc4:	bl	402640 <free@plt>
  43ddc8:	cbnz	x20, 43dda8 <ferror@plt+0x3b528>
  43ddcc:	ldr	x20, [x19, #80]
  43ddd0:	cbz	x20, 43dde8 <ferror@plt+0x3b568>
  43ddd4:	nop
  43ddd8:	mov	x0, x20
  43dddc:	ldr	x20, [x20]
  43dde0:	bl	402640 <free@plt>
  43dde4:	cbnz	x20, 43ddd8 <ferror@plt+0x3b558>
  43dde8:	ldr	x0, [x19, #1384]
  43ddec:	cbz	x0, 43de24 <ferror@plt+0x3b5a4>
  43ddf0:	ldr	w1, [x19, #1392]
  43ddf4:	cmp	w1, #0x0
  43ddf8:	b.le	43de20 <ferror@plt+0x3b5a0>
  43ddfc:	mov	x20, #0x0                   	// #0
  43de00:	lsl	x1, x20, #4
  43de04:	add	x20, x20, #0x1
  43de08:	ldr	x0, [x0, x1]
  43de0c:	bl	402640 <free@plt>
  43de10:	ldr	w0, [x19, #1392]
  43de14:	cmp	w0, w20
  43de18:	ldr	x0, [x19, #1384]
  43de1c:	b.gt	43de00 <ferror@plt+0x3b580>
  43de20:	bl	402640 <free@plt>
  43de24:	ldr	x20, [x19, #1400]
  43de28:	cbz	x20, 43de4c <ferror@plt+0x3b5cc>
  43de2c:	nop
  43de30:	ldp	x1, x0, [x20]
  43de34:	str	x1, [x19, #1400]
  43de38:	bl	402640 <free@plt>
  43de3c:	mov	x0, x20
  43de40:	bl	402640 <free@plt>
  43de44:	ldr	x20, [x19, #1400]
  43de48:	cbnz	x20, 43de30 <ferror@plt+0x3b5b0>
  43de4c:	mov	x0, x19
  43de50:	ldp	x19, x20, [sp, #16]
  43de54:	ldp	x21, x22, [sp, #32]
  43de58:	ldp	x29, x30, [sp], #48
  43de5c:	b	402640 <free@plt>
  43de60:	cmp	w0, #0xf
  43de64:	b.eq	43dec0 <ferror@plt+0x3b640>  // b.none
  43de68:	cmp	w0, #0x20
  43de6c:	b.eq	43ded4 <ferror@plt+0x3b654>  // b.none
  43de70:	cmp	w0, #0x9
  43de74:	b.eq	43defc <ferror@plt+0x3b67c>  // b.none
  43de78:	cmp	w0, #0xa
  43de7c:	b.eq	43df10 <ferror@plt+0x3b690>  // b.none
  43de80:	cmp	w0, #0xe
  43de84:	b.eq	43df24 <ferror@plt+0x3b6a4>  // b.none
  43de88:	cmp	w0, #0x1
  43de8c:	b.eq	43df38 <ferror@plt+0x3b6b8>  // b.none
  43de90:	cmp	w0, #0x18
  43de94:	b.eq	43df4c <ferror@plt+0x3b6cc>  // b.none
  43de98:	cmp	w0, #0x10
  43de9c:	b.eq	43df60 <ferror@plt+0x3b6e0>  // b.none
  43dea0:	cmp	w0, #0x21
  43dea4:	b.eq	43df74 <ferror@plt+0x3b6f4>  // b.none
  43dea8:	cmp	w0, #0xb
  43deac:	b.eq	43df88 <ferror@plt+0x3b708>  // b.none
  43deb0:	cmp	w0, #0x22
  43deb4:	mov	x0, #0x0                   	// #0
  43deb8:	b.eq	43dee8 <ferror@plt+0x3b668>  // b.none
  43debc:	ret
  43dec0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43dec4:	add	x0, x0, #0x450
  43dec8:	add	x0, x0, #0x150
  43decc:	ldr	x0, [x0]
  43ded0:	ret
  43ded4:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ded8:	add	x0, x0, #0x450
  43dedc:	add	x0, x0, #0x160
  43dee0:	ldr	x0, [x0]
  43dee4:	b	43ded0 <ferror@plt+0x3b650>
  43dee8:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43deec:	add	x0, x0, #0x450
  43def0:	add	x0, x0, #0x1f0
  43def4:	ldr	x0, [x0]
  43def8:	b	43ded0 <ferror@plt+0x3b650>
  43defc:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43df00:	add	x0, x0, #0x450
  43df04:	add	x0, x0, #0x170
  43df08:	ldr	x0, [x0]
  43df0c:	b	43ded0 <ferror@plt+0x3b650>
  43df10:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43df14:	add	x0, x0, #0x450
  43df18:	add	x0, x0, #0x180
  43df1c:	ldr	x0, [x0]
  43df20:	b	43ded0 <ferror@plt+0x3b650>
  43df24:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43df28:	add	x0, x0, #0x450
  43df2c:	add	x0, x0, #0x190
  43df30:	ldr	x0, [x0]
  43df34:	b	43ded0 <ferror@plt+0x3b650>
  43df38:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43df3c:	add	x0, x0, #0x450
  43df40:	add	x0, x0, #0x1a0
  43df44:	ldr	x0, [x0]
  43df48:	b	43ded0 <ferror@plt+0x3b650>
  43df4c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43df50:	add	x0, x0, #0x450
  43df54:	add	x0, x0, #0x1b0
  43df58:	ldr	x0, [x0]
  43df5c:	b	43ded0 <ferror@plt+0x3b650>
  43df60:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43df64:	add	x0, x0, #0x450
  43df68:	add	x0, x0, #0x1c0
  43df6c:	ldr	x0, [x0]
  43df70:	b	43ded0 <ferror@plt+0x3b650>
  43df74:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43df78:	add	x0, x0, #0x450
  43df7c:	add	x0, x0, #0x1d0
  43df80:	ldr	x0, [x0]
  43df84:	b	43ded0 <ferror@plt+0x3b650>
  43df88:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43df8c:	add	x0, x0, #0x450
  43df90:	add	x0, x0, #0x1e0
  43df94:	ldr	x0, [x0]
  43df98:	b	43ded0 <ferror@plt+0x3b650>
  43df9c:	nop
  43dfa0:	stp	x29, x30, [sp, #-48]!
  43dfa4:	mov	x29, sp
  43dfa8:	stp	x19, x20, [sp, #16]
  43dfac:	mov	x20, x0
  43dfb0:	str	x21, [sp, #32]
  43dfb4:	mov	x21, #0xa0                  	// #160
  43dfb8:	ldrb	w0, [x0, #1160]
  43dfbc:	cbnz	w0, 43dfcc <ferror@plt+0x3b74c>
  43dfc0:	ldrb	w0, [x20, #1243]
  43dfc4:	mov	x21, #0xb0                  	// #176
  43dfc8:	cbnz	w0, 43e054 <ferror@plt+0x3b7d4>
  43dfcc:	adrp	x19, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43dfd0:	add	x19, x19, #0x450
  43dfd4:	add	x19, x19, #0x200
  43dfd8:	add	x21, x19, x21
  43dfdc:	nop
  43dfe0:	ldrh	w1, [x19, #10]
  43dfe4:	mov	x0, x20
  43dfe8:	cmp	w1, #0xa
  43dfec:	b.ne	43e004 <ferror@plt+0x3b784>  // b.any
  43dff0:	ldr	w1, [x20, #1116]
  43dff4:	cmp	w1, #0x15
  43dff8:	b.eq	43e038 <ferror@plt+0x3b7b8>  // b.none
  43dffc:	ldr	x1, [x20, #1040]
  43e000:	cbz	x1, 43e038 <ferror@plt+0x3b7b8>
  43e004:	ldrh	w2, [x19, #8]
  43e008:	ldr	x1, [x19]
  43e00c:	bl	42a800 <ferror@plt+0x27f80>
  43e010:	ldrb	w1, [x0, #18]
  43e014:	ldrb	w2, [x19, #12]
  43e018:	orr	w1, w1, #0x3
  43e01c:	strb	w1, [x0, #18]
  43e020:	cbz	w2, 43e030 <ferror@plt+0x3b7b0>
  43e024:	ldrh	w1, [x0, #18]
  43e028:	orr	w1, w1, #0x20
  43e02c:	strh	w1, [x0, #18]
  43e030:	ldrh	w1, [x19, #10]
  43e034:	str	w1, [x0, #24]
  43e038:	add	x19, x19, #0x10
  43e03c:	cmp	x19, x21
  43e040:	b.cc	43dfe0 <ferror@plt+0x3b760>  // b.lo, b.ul, b.last
  43e044:	ldp	x19, x20, [sp, #16]
  43e048:	ldr	x21, [sp, #32]
  43e04c:	ldp	x29, x30, [sp], #48
  43e050:	ret
  43e054:	ldrb	w1, [x20, #1153]
  43e058:	mov	x0, #0xc0                  	// #192
  43e05c:	cmp	w1, #0x0
  43e060:	csel	x21, x0, x21, eq  // eq = none
  43e064:	b	43dfcc <ferror@plt+0x3b74c>
  43e068:	stp	x29, x30, [sp, #-32]!
  43e06c:	mov	x29, sp
  43e070:	stp	x19, x20, [sp, #16]
  43e074:	mov	x19, x0
  43e078:	mov	w20, w1
  43e07c:	bl	43dfa0 <ferror@plt+0x3b720>
  43e080:	ldrb	w0, [x19, #1160]
  43e084:	cbnz	w0, 43e098 <ferror@plt+0x3b818>
  43e088:	ldrb	w0, [x19, #1243]
  43e08c:	cbz	w0, 43e190 <ferror@plt+0x3b910>
  43e090:	ldrb	w0, [x19, #1153]
  43e094:	cbnz	w0, 43e190 <ferror@plt+0x3b910>
  43e098:	ldrb	w2, [x19, #1120]
  43e09c:	ldr	w0, [x19, #1116]
  43e0a0:	cbz	w2, 43e118 <ferror@plt+0x3b898>
  43e0a4:	sub	w1, w0, #0x13
  43e0a8:	cmp	w1, #0x1
  43e0ac:	b.ls	43e1fc <ferror@plt+0x3b97c>  // b.plast
  43e0b0:	sub	w1, w0, #0x11
  43e0b4:	cmp	w1, #0x1
  43e0b8:	b.ls	43e238 <ferror@plt+0x3b9b8>  // b.plast
  43e0bc:	sub	w1, w0, #0xf
  43e0c0:	cmp	w1, #0x1
  43e0c4:	b.ls	43e274 <ferror@plt+0x3b9f4>  // b.plast
  43e0c8:	sub	w0, w0, #0xd
  43e0cc:	cmp	w0, #0x1
  43e0d0:	b.ls	43e224 <ferror@plt+0x3b9a4>  // b.plast
  43e0d4:	mov	x0, x19
  43e0d8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e0dc:	add	x1, x1, #0x1d0
  43e0e0:	bl	422800 <ferror@plt+0x1ff80>
  43e0e4:	ldrb	w0, [x19, #1128]
  43e0e8:	cbnz	w0, 43e1c0 <ferror@plt+0x3b940>
  43e0ec:	nop
  43e0f0:	cbz	w20, 43e160 <ferror@plt+0x3b8e0>
  43e0f4:	mov	x0, x19
  43e0f8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e0fc:	add	x1, x1, #0x2c8
  43e100:	bl	422800 <ferror@plt+0x1ff80>
  43e104:	ldrb	w0, [x19, #1122]
  43e108:	cbnz	w0, 43e178 <ferror@plt+0x3b8f8>
  43e10c:	ldp	x19, x20, [sp, #16]
  43e110:	ldp	x29, x30, [sp], #32
  43e114:	ret
  43e118:	cmp	w0, #0x15
  43e11c:	b.eq	43e210 <ferror@plt+0x3b990>  // b.none
  43e120:	cmp	w0, #0x6
  43e124:	b.eq	43e24c <ferror@plt+0x3b9cc>  // b.none
  43e128:	cmp	w0, #0xa
  43e12c:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  43e130:	b.eq	43e1a4 <ferror@plt+0x3b924>  // b.none
  43e134:	cmp	w0, #0x9
  43e138:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  43e13c:	b.eq	43e260 <ferror@plt+0x3b9e0>  // b.none
  43e140:	cmp	w0, #0x8
  43e144:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  43e148:	b.eq	43e288 <ferror@plt+0x3ba08>  // b.none
  43e14c:	ldrb	w0, [x19, #1152]
  43e150:	cbnz	w0, 43e29c <ferror@plt+0x3ba1c>
  43e154:	ldrb	w0, [x19, #1128]
  43e158:	cbnz	w0, 43e1d8 <ferror@plt+0x3b958>
  43e15c:	cbnz	w20, 43e0f4 <ferror@plt+0x3b874>
  43e160:	mov	x0, x19
  43e164:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e168:	add	x1, x1, #0x2e0
  43e16c:	bl	422800 <ferror@plt+0x1ff80>
  43e170:	ldrb	w0, [x19, #1122]
  43e174:	cbz	w0, 43e10c <ferror@plt+0x3b88c>
  43e178:	mov	x0, x19
  43e17c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e180:	ldp	x19, x20, [sp, #16]
  43e184:	add	x1, x1, #0x2f8
  43e188:	ldp	x29, x30, [sp], #32
  43e18c:	b	422800 <ferror@plt+0x1ff80>
  43e190:	mov	x0, x19
  43e194:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e198:	add	x1, x1, #0x160
  43e19c:	bl	422800 <ferror@plt+0x1ff80>
  43e1a0:	b	43e098 <ferror@plt+0x3b818>
  43e1a4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e1a8:	mov	x0, x19
  43e1ac:	add	x1, x1, #0x218
  43e1b0:	bl	422800 <ferror@plt+0x1ff80>
  43e1b4:	nop
  43e1b8:	ldrb	w0, [x19, #1128]
  43e1bc:	cbz	w0, 43e0f0 <ferror@plt+0x3b870>
  43e1c0:	ldrb	w0, [x19, #1120]
  43e1c4:	cbz	w0, 43e1d8 <ferror@plt+0x3b958>
  43e1c8:	ldr	w0, [x19, #1116]
  43e1cc:	sub	w0, w0, #0xb
  43e1d0:	cmp	w0, #0x1
  43e1d4:	b.ls	43e0f0 <ferror@plt+0x3b870>  // b.plast
  43e1d8:	mov	x0, x19
  43e1dc:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e1e0:	add	x1, x1, #0x298
  43e1e4:	bl	422800 <ferror@plt+0x1ff80>
  43e1e8:	mov	x0, x19
  43e1ec:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e1f0:	add	x1, x1, #0x2b0
  43e1f4:	bl	422800 <ferror@plt+0x1ff80>
  43e1f8:	b	43e0f0 <ferror@plt+0x3b870>
  43e1fc:	mov	x0, x19
  43e200:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e204:	add	x1, x1, #0x170
  43e208:	bl	422800 <ferror@plt+0x1ff80>
  43e20c:	b	43e1b8 <ferror@plt+0x3b938>
  43e210:	mov	x0, x19
  43e214:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e218:	add	x1, x1, #0x1e8
  43e21c:	bl	422800 <ferror@plt+0x1ff80>
  43e220:	b	43e1b8 <ferror@plt+0x3b938>
  43e224:	mov	x0, x19
  43e228:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e22c:	add	x1, x1, #0x1b8
  43e230:	bl	422800 <ferror@plt+0x1ff80>
  43e234:	b	43e1b8 <ferror@plt+0x3b938>
  43e238:	mov	x0, x19
  43e23c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e240:	add	x1, x1, #0x188
  43e244:	bl	422800 <ferror@plt+0x1ff80>
  43e248:	b	43e1b8 <ferror@plt+0x3b938>
  43e24c:	mov	x0, x19
  43e250:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e254:	add	x1, x1, #0x1f8
  43e258:	bl	422800 <ferror@plt+0x1ff80>
  43e25c:	b	43e1b8 <ferror@plt+0x3b938>
  43e260:	mov	x0, x19
  43e264:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e268:	add	x1, x1, #0x238
  43e26c:	bl	422800 <ferror@plt+0x1ff80>
  43e270:	b	43e1b8 <ferror@plt+0x3b938>
  43e274:	mov	x0, x19
  43e278:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e27c:	add	x1, x1, #0x1a0
  43e280:	bl	422800 <ferror@plt+0x1ff80>
  43e284:	b	43e1b8 <ferror@plt+0x3b938>
  43e288:	mov	x0, x19
  43e28c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e290:	add	x1, x1, #0x258
  43e294:	bl	422800 <ferror@plt+0x1ff80>
  43e298:	b	43e1b8 <ferror@plt+0x3b938>
  43e29c:	mov	x0, x19
  43e2a0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e2a4:	add	x1, x1, #0x278
  43e2a8:	bl	422800 <ferror@plt+0x1ff80>
  43e2ac:	b	43e1b8 <ferror@plt+0x3b938>
  43e2b0:	stp	x29, x30, [sp, #-48]!
  43e2b4:	mov	x29, sp
  43e2b8:	stp	x19, x20, [sp, #16]
  43e2bc:	mov	x19, x0
  43e2c0:	ldrb	w0, [x0, #1120]
  43e2c4:	cbz	w0, 43e2cc <ferror@plt+0x3ba4c>
  43e2c8:	strb	wzr, [x19, #1138]
  43e2cc:	ldrb	w2, [x19, #1155]
  43e2d0:	ldrb	w1, [x19, #1136]
  43e2d4:	cbz	w2, 43e318 <ferror@plt+0x3ba98>
  43e2d8:	ldrb	w2, [x19, #1244]
  43e2dc:	cbnz	w2, 43e2e8 <ferror@plt+0x3ba68>
  43e2e0:	mov	w2, #0x1                   	// #1
  43e2e4:	strb	w2, [x19, #24]
  43e2e8:	strb	wzr, [x19, #1160]
  43e2ec:	cmp	w1, #0x2
  43e2f0:	b.eq	43e3b4 <ferror@plt+0x3bb34>  // b.none
  43e2f4:	ldrb	w1, [x19, #1159]
  43e2f8:	cbz	w0, 43e338 <ferror@plt+0x3bab8>
  43e2fc:	ldrb	w0, [x19, #1158]
  43e300:	cbz	w0, 43e338 <ferror@plt+0x3bab8>
  43e304:	cmp	w1, #0x0
  43e308:	stp	x21, x22, [sp, #32]
  43e30c:	mov	w21, #0xffffff85            	// #-123
  43e310:	csinc	w21, w21, wzr, ne  // ne = any
  43e314:	b	43e344 <ferror@plt+0x3bac4>
  43e318:	cmp	w1, #0x2
  43e31c:	ldrb	w1, [x19, #1160]
  43e320:	b.eq	43e3c8 <ferror@plt+0x3bb48>  // b.none
  43e324:	cbz	w1, 43e2f4 <ferror@plt+0x3ba74>
  43e328:	strb	wzr, [x19, #1125]
  43e32c:	strb	wzr, [x19, #1136]
  43e330:	ldrb	w1, [x19, #1159]
  43e334:	cbnz	w0, 43e2fc <ferror@plt+0x3ba7c>
  43e338:	cbz	w1, 43e3a8 <ferror@plt+0x3bb28>
  43e33c:	stp	x21, x22, [sp, #32]
  43e340:	mov	w21, #0xffffff84            	// #-124
  43e344:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43e348:	add	x20, x20, #0x450
  43e34c:	add	x22, x20, #0x150
  43e350:	add	x20, x20, #0x200
  43e354:	nop
  43e358:	ldrh	w2, [x22, #8]
  43e35c:	mov	x0, x19
  43e360:	ldr	x1, [x22]
  43e364:	add	x22, x22, #0x10
  43e368:	bl	42a800 <ferror@plt+0x27f80>
  43e36c:	ldrh	w2, [x0, #18]
  43e370:	ldrb	w1, [x0, #16]
  43e374:	mov	w3, w2
  43e378:	ubfx	x2, x2, #2, #8
  43e37c:	and	w1, w1, #0xfffffffe
  43e380:	orr	w2, w21, w2
  43e384:	strb	w1, [x0, #16]
  43e388:	bfi	w3, w2, #2, #8
  43e38c:	strh	w3, [x0, #18]
  43e390:	ldurh	w2, [x22, #-6]
  43e394:	cmp	x22, x20
  43e398:	bfi	w1, w2, #1, #7
  43e39c:	strb	w1, [x0, #16]
  43e3a0:	b.ne	43e358 <ferror@plt+0x3bad8>  // b.any
  43e3a4:	ldp	x21, x22, [sp, #32]
  43e3a8:	ldp	x19, x20, [sp, #16]
  43e3ac:	ldp	x29, x30, [sp], #48
  43e3b0:	ret
  43e3b4:	ldrb	w1, [x19, #1125]
  43e3b8:	cmp	w1, #0x0
  43e3bc:	cset	w1, eq  // eq = none
  43e3c0:	strb	w1, [x19, #1136]
  43e3c4:	b	43e2f4 <ferror@plt+0x3ba74>
  43e3c8:	ldrb	w2, [x19, #1125]
  43e3cc:	cmp	w2, #0x0
  43e3d0:	cset	w2, eq  // eq = none
  43e3d4:	strb	w2, [x19, #1136]
  43e3d8:	cbnz	w1, 43e328 <ferror@plt+0x3baa8>
  43e3dc:	b	43e2f4 <ferror@plt+0x3ba74>
  43e3e0:	stp	x29, x30, [sp, #-48]!
  43e3e4:	mov	x29, sp
  43e3e8:	stp	x19, x20, [sp, #16]
  43e3ec:	mov	x19, x0
  43e3f0:	ldr	w0, [x0, #1200]
  43e3f4:	mov	x20, x1
  43e3f8:	cbz	w0, 43e40c <ferror@plt+0x3bb8c>
  43e3fc:	ldr	x0, [x19, #712]
  43e400:	cbz	x0, 43e4b8 <ferror@plt+0x3bc38>
  43e404:	mov	x1, x20
  43e408:	bl	43a850 <ferror@plt+0x37fd0>
  43e40c:	add	x2, x19, #0xd8
  43e410:	mov	x1, x20
  43e414:	mov	w6, #0x0                   	// #0
  43e418:	mov	w5, #0x0                   	// #0
  43e41c:	mov	w4, #0x0                   	// #0
  43e420:	mov	w3, #0x0                   	// #0
  43e424:	mov	x0, x19
  43e428:	bl	428700 <ferror@plt+0x25e80>
  43e42c:	str	x0, [x19, #288]
  43e430:	bl	4286f0 <ferror@plt+0x25e70>
  43e434:	tst	w0, #0xff
  43e438:	mov	x0, #0x0                   	// #0
  43e43c:	b.ne	43e460 <ferror@plt+0x3bbe0>  // b.any
  43e440:	ldr	x1, [x19, #288]
  43e444:	mov	x0, x19
  43e448:	mov	w3, #0x0                   	// #0
  43e44c:	mov	w2, #0x0                   	// #0
  43e450:	bl	4290c0 <ferror@plt+0x26840>
  43e454:	ldrb	w1, [x19, #1155]
  43e458:	mov	x0, x20
  43e45c:	cbnz	w1, 43e46c <ferror@plt+0x3bbec>
  43e460:	ldp	x19, x20, [sp, #16]
  43e464:	ldp	x29, x30, [sp], #48
  43e468:	ret
  43e46c:	mov	x0, x19
  43e470:	bl	42edd8 <ferror@plt+0x2c558>
  43e474:	mov	x20, x0
  43e478:	ldrb	w0, [x0, #4]
  43e47c:	cmp	w0, #0x25
  43e480:	b.eq	43e4c4 <ferror@plt+0x3bc44>  // b.none
  43e484:	mov	x0, x19
  43e488:	mov	w1, #0x1                   	// #1
  43e48c:	bl	4367f8 <ferror@plt+0x33f78>
  43e490:	ldr	x1, [x19, #40]
  43e494:	mov	w2, #0x18                  	// #24
  43e498:	ldp	x19, x20, [sp, #16]
  43e49c:	ldr	w0, [x1, #12]
  43e4a0:	ldr	x1, [x1]
  43e4a4:	sub	w0, w0, #0x1
  43e4a8:	ldp	x29, x30, [sp], #48
  43e4ac:	smaddl	x0, w0, w2, x1
  43e4b0:	ldr	x0, [x0, #8]
  43e4b4:	ret
  43e4b8:	bl	43a6e0 <ferror@plt+0x37e60>
  43e4bc:	str	x0, [x19, #712]
  43e4c0:	b	43e404 <ferror@plt+0x3bb84>
  43e4c4:	str	x21, [sp, #32]
  43e4c8:	mov	w0, #0x1                   	// #1
  43e4cc:	strb	w0, [x19, #16]
  43e4d0:	mov	x0, x19
  43e4d4:	bl	42edd8 <ferror@plt+0x2c558>
  43e4d8:	mov	x21, x0
  43e4dc:	mov	w1, #0x1                   	// #1
  43e4e0:	mov	x0, x19
  43e4e4:	bl	4367f8 <ferror@plt+0x33f78>
  43e4e8:	strb	wzr, [x19, #16]
  43e4ec:	ldrb	w0, [x21, #4]
  43e4f0:	cmp	w0, #0x37
  43e4f4:	b.eq	43e500 <ferror@plt+0x3bc80>  // b.none
  43e4f8:	ldr	x21, [sp, #32]
  43e4fc:	b	43e484 <ferror@plt+0x3bc04>
  43e500:	ldrh	w1, [x20, #6]
  43e504:	mov	x0, x19
  43e508:	and	w1, w1, #0x1
  43e50c:	bl	420dc0 <ferror@plt+0x1e540>
  43e510:	cbz	w0, 43e4f8 <ferror@plt+0x3bc78>
  43e514:	mov	x0, x19
  43e518:	bl	43d888 <ferror@plt+0x3b008>
  43e51c:	ldr	x21, [sp, #32]
  43e520:	b	43e490 <ferror@plt+0x3bc10>
  43e524:	nop
  43e528:	stp	x29, x30, [sp, #-32]!
  43e52c:	mov	x29, sp
  43e530:	stp	x19, x20, [sp, #16]
  43e534:	mov	x20, x1
  43e538:	mov	x19, x0
  43e53c:	ldrb	w1, [x0, #1151]
  43e540:	cbz	w1, 43e550 <ferror@plt+0x3bcd0>
  43e544:	b	43e57c <ferror@plt+0x3bcfc>
  43e548:	mov	x0, x19
  43e54c:	bl	421958 <ferror@plt+0x1f0d8>
  43e550:	ldr	x0, [x19]
  43e554:	cbnz	x0, 43e548 <ferror@plt+0x3bcc8>
  43e558:	ldr	w0, [x19, #1200]
  43e55c:	cmp	w0, #0x0
  43e560:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  43e564:	b.ne	43e5a0 <ferror@plt+0x3bd20>  // b.any
  43e568:	ldrb	w0, [x19, #1131]
  43e56c:	cbnz	w0, 43e590 <ferror@plt+0x3bd10>
  43e570:	ldp	x19, x20, [sp, #16]
  43e574:	ldp	x29, x30, [sp], #32
  43e578:	ret
  43e57c:	adrp	x1, 435000 <ferror@plt+0x32780>
  43e580:	mov	x2, #0x0                   	// #0
  43e584:	add	x1, x1, #0xb88
  43e588:	bl	42a848 <ferror@plt+0x27fc8>
  43e58c:	b	43e550 <ferror@plt+0x3bcd0>
  43e590:	mov	x0, x19
  43e594:	ldp	x19, x20, [sp, #16]
  43e598:	ldp	x29, x30, [sp], #32
  43e59c:	b	429d28 <ferror@plt+0x274a8>
  43e5a0:	ldr	x0, [x19, #712]
  43e5a4:	mov	x1, x20
  43e5a8:	mov	w2, #0x48                  	// #72
  43e5ac:	bl	43ab18 <ferror@plt+0x38298>
  43e5b0:	ldrb	w0, [x19, #1205]
  43e5b4:	cbz	w0, 43e568 <ferror@plt+0x3bce8>
  43e5b8:	ldr	x0, [x19, #712]
  43e5bc:	mov	x1, x20
  43e5c0:	bl	43ad88 <ferror@plt+0x38508>
  43e5c4:	b	43e568 <ferror@plt+0x3bce8>
  43e5c8:	stp	x29, x30, [sp, #-96]!
  43e5cc:	mov	x7, x0
  43e5d0:	mov	w6, w1
  43e5d4:	add	x4, sp, #0x18
  43e5d8:	mov	x29, sp
  43e5dc:	mov	x0, x4
  43e5e0:	stp	xzr, xzr, [sp, #32]
  43e5e4:	mov	x1, #0x48                  	// #72
  43e5e8:	str	x7, [sp, #24]
  43e5ec:	str	w6, [sp, #32]
  43e5f0:	stp	xzr, xzr, [sp, #48]
  43e5f4:	stp	xzr, xzr, [sp, #64]
  43e5f8:	stp	xzr, xzr, [sp, #80]
  43e5fc:	bl	43e8a8 <ferror@plt+0x3c028>
  43e600:	cbz	x0, 43e62c <ferror@plt+0x3bdac>
  43e604:	ldp	x2, x3, [sp, #24]
  43e608:	stp	x2, x3, [x0]
  43e60c:	ldp	x2, x3, [sp, #40]
  43e610:	stp	x2, x3, [x0, #16]
  43e614:	ldp	x2, x3, [sp, #56]
  43e618:	stp	x2, x3, [x0, #32]
  43e61c:	ldp	x2, x3, [sp, #72]
  43e620:	stp	x2, x3, [x0, #48]
  43e624:	ldr	x1, [sp, #88]
  43e628:	str	x1, [x0, #64]
  43e62c:	ldp	x29, x30, [sp], #96
  43e630:	ret
  43e634:	nop
  43e638:	stp	x29, x30, [sp, #-48]!
  43e63c:	mov	x29, sp
  43e640:	str	x19, [sp, #16]
  43e644:	mov	x19, x1
  43e648:	add	x1, sp, #0x2c
  43e64c:	str	wzr, [sp, #44]
  43e650:	bl	46b118 <_obstack_memory_used@@Base+0xe7f0>
  43e654:	mov	x1, x0
  43e658:	ldr	w0, [x19]
  43e65c:	cmp	w0, #0x0
  43e660:	b.gt	43e6b4 <ferror@plt+0x3be34>
  43e664:	ldr	w2, [sp, #44]
  43e668:	ldr	w0, [x19, #44]
  43e66c:	cmp	w2, #0x0
  43e670:	cset	x2, eq  // eq = none
  43e674:	sub	x1, x1, x2
  43e678:	ldr	x5, [x19, #16]
  43e67c:	ldr	x4, [x19, #32]
  43e680:	cbnz	w0, 43e6cc <ferror@plt+0x3be4c>
  43e684:	mov	x0, x4
  43e688:	mov	w3, #0x0                   	// #0
  43e68c:	mov	x4, #0x0                   	// #0
  43e690:	mov	x2, #0x0                   	// #0
  43e694:	blr	x5
  43e698:	str	w0, [x19, #40]
  43e69c:	cmp	w0, #0x0
  43e6a0:	mov	w0, #0x5                   	// #5
  43e6a4:	csel	w0, wzr, w0, eq  // eq = none
  43e6a8:	ldr	x19, [sp, #16]
  43e6ac:	ldp	x29, x30, [sp], #48
  43e6b0:	ret
  43e6b4:	sub	w1, w0, #0x1
  43e6b8:	str	w1, [x19]
  43e6bc:	mov	w0, #0x0                   	// #0
  43e6c0:	ldr	x19, [sp, #16]
  43e6c4:	ldp	x29, x30, [sp], #48
  43e6c8:	ret
  43e6cc:	ldr	x0, [x19, #8]
  43e6d0:	mov	x2, x5
  43e6d4:	ldr	x3, [x19, #24]
  43e6d8:	bl	43ec10 <ferror@plt+0x3c390>
  43e6dc:	str	w0, [x19, #40]
  43e6e0:	b	43e69c <ferror@plt+0x3be1c>
  43e6e4:	nop
  43e6e8:	stp	x29, x30, [sp, #-80]!
  43e6ec:	add	w5, w1, #0x1
  43e6f0:	mov	x7, x2
  43e6f4:	mov	x6, x3
  43e6f8:	mov	x29, sp
  43e6fc:	mov	x3, #0x0                   	// #0
  43e700:	mov	x2, #0x0                   	// #0
  43e704:	mov	x1, #0x1000                	// #4096
  43e708:	str	x19, [sp, #16]
  43e70c:	mov	x19, x0
  43e710:	str	w5, [sp, #32]
  43e714:	stp	x0, x7, [sp, #40]
  43e718:	stp	x6, x4, [sp, #56]
  43e71c:	str	wzr, [sp, #72]
  43e720:	bl	43e8a8 <ferror@plt+0x3c028>
  43e724:	cbz	x0, 43e768 <ferror@plt+0x3bee8>
  43e728:	mov	x1, x0
  43e72c:	mov	x4, #0x0                   	// #0
  43e730:	mov	x0, x19
  43e734:	mov	x3, #0x0                   	// #0
  43e738:	mov	x2, #0x1000                	// #4096
  43e73c:	bl	43e770 <ferror@plt+0x3bef0>
  43e740:	mov	w0, #0x1                   	// #1
  43e744:	str	w0, [sp, #76]
  43e748:	add	x1, sp, #0x20
  43e74c:	adrp	x0, 43e000 <ferror@plt+0x3b780>
  43e750:	add	x0, x0, #0x638
  43e754:	bl	46b760 <_obstack_memory_used@@Base+0xee38>
  43e758:	ldr	w0, [sp, #72]
  43e75c:	ldr	x19, [sp, #16]
  43e760:	ldp	x29, x30, [sp], #80
  43e764:	ret
  43e768:	str	wzr, [sp, #76]
  43e76c:	b	43e748 <ferror@plt+0x3bec8>
  43e770:	stp	x29, x30, [sp, #-48]!
  43e774:	mov	x29, sp
  43e778:	stp	x19, x20, [sp, #16]
  43e77c:	mov	x19, x0
  43e780:	mov	x20, x1
  43e784:	str	x21, [sp, #32]
  43e788:	mov	x0, #0xffff                	// #65535
  43e78c:	mov	x21, x2
  43e790:	cmp	x2, x0
  43e794:	b.ls	43e7b0 <ferror@plt+0x3bf30>  // b.plast
  43e798:	bl	4024b0 <getpagesize@plt>
  43e79c:	sxtw	x0, w0
  43e7a0:	orr	x1, x20, x21
  43e7a4:	sub	x0, x0, #0x1
  43e7a8:	tst	x0, x1
  43e7ac:	b.eq	43e884 <ferror@plt+0x3c004>  // b.none
  43e7b0:	ldr	w7, [x19, #8]
  43e7b4:	cbnz	w7, 43e848 <ferror@plt+0x3bfc8>
  43e7b8:	cmp	x21, #0xf
  43e7bc:	b.ls	43e838 <ferror@plt+0x3bfb8>  // b.plast
  43e7c0:	ldr	x3, [x19, #64]
  43e7c4:	add	x0, x19, #0x40
  43e7c8:	mov	x9, x3
  43e7cc:	cbz	x3, 43e898 <ferror@plt+0x3c018>
  43e7d0:	mov	x4, x3
  43e7d4:	mov	x6, #0x0                   	// #0
  43e7d8:	b	43e7f4 <ferror@plt+0x3bf74>
  43e7dc:	ldr	x4, [x0]
  43e7e0:	ldr	x5, [x3, #8]
  43e7e4:	ldr	x1, [x4, #8]
  43e7e8:	cmp	x5, x1
  43e7ec:	csel	x4, x4, x3, cs  // cs = hs, nlast
  43e7f0:	csel	x0, x0, x8, cs  // cs = hs, nlast
  43e7f4:	mov	x8, x3
  43e7f8:	add	x6, x6, #0x1
  43e7fc:	ldr	x3, [x3]
  43e800:	cbnz	x3, 43e7dc <ferror@plt+0x3bf5c>
  43e804:	cmp	x6, #0xf
  43e808:	b.ls	43e824 <ferror@plt+0x3bfa4>  // b.plast
  43e80c:	ldr	x1, [x4, #8]
  43e810:	cmp	x21, x1
  43e814:	b.ls	43e82c <ferror@plt+0x3bfac>  // b.plast
  43e818:	ldr	x1, [x4]
  43e81c:	str	x1, [x0]
  43e820:	ldr	x9, [x19, #64]
  43e824:	stp	x9, x21, [x20]
  43e828:	str	x20, [x19, #64]
  43e82c:	cbz	w7, 43e838 <ferror@plt+0x3bfb8>
  43e830:	add	x19, x19, #0x3c
  43e834:	stlr	wzr, [x19]
  43e838:	ldp	x19, x20, [sp, #16]
  43e83c:	ldr	x21, [sp, #32]
  43e840:	ldp	x29, x30, [sp], #48
  43e844:	ret
  43e848:	add	x0, x19, #0x3c
  43e84c:	mov	w3, #0x1                   	// #1
  43e850:	ldxr	w1, [x0]
  43e854:	stxr	w2, w3, [x0]
  43e858:	cbnz	w2, 43e850 <ferror@plt+0x3bfd0>
  43e85c:	dmb	ish
  43e860:	cbnz	w1, 43e838 <ferror@plt+0x3bfb8>
  43e864:	ldr	w7, [x19, #8]
  43e868:	cmp	x21, #0xf
  43e86c:	b.ls	43e82c <ferror@plt+0x3bfac>  // b.plast
  43e870:	ldr	x9, [x19, #64]
  43e874:	add	x0, x19, #0x40
  43e878:	mov	x3, x9
  43e87c:	cbnz	x9, 43e7d0 <ferror@plt+0x3bf50>
  43e880:	b	43e824 <ferror@plt+0x3bfa4>
  43e884:	mov	x1, x21
  43e888:	mov	x0, x20
  43e88c:	bl	4026a0 <munmap@plt>
  43e890:	cbnz	w0, 43e7b0 <ferror@plt+0x3bf30>
  43e894:	b	43e838 <ferror@plt+0x3bfb8>
  43e898:	stp	xzr, x21, [x20]
  43e89c:	str	x20, [x19, #64]
  43e8a0:	b	43e838 <ferror@plt+0x3bfb8>
  43e8a4:	nop
  43e8a8:	stp	x29, x30, [sp, #-64]!
  43e8ac:	mov	x29, sp
  43e8b0:	ldr	w8, [x0, #8]
  43e8b4:	stp	x19, x20, [sp, #16]
  43e8b8:	mov	x20, x1
  43e8bc:	stp	x21, x22, [sp, #32]
  43e8c0:	mov	x21, x0
  43e8c4:	stp	x23, x24, [sp, #48]
  43e8c8:	mov	x24, x2
  43e8cc:	mov	x23, x3
  43e8d0:	cbnz	w8, 43e9b0 <ferror@plt+0x3c130>
  43e8d4:	ldr	x4, [x0, #64]
  43e8d8:	add	x7, x0, #0x40
  43e8dc:	cbz	x4, 43e9f0 <ferror@plt+0x3c170>
  43e8e0:	mov	x6, x7
  43e8e4:	b	43e8f0 <ferror@plt+0x3c070>
  43e8e8:	mov	x6, x19
  43e8ec:	cbz	x4, 43e9e0 <ferror@plt+0x3c160>
  43e8f0:	ldr	x5, [x4, #8]
  43e8f4:	mov	x19, x4
  43e8f8:	ldr	x4, [x4]
  43e8fc:	cmp	x5, x20
  43e900:	b.cc	43e8e8 <ferror@plt+0x3c068>  // b.lo, b.ul, b.last
  43e904:	add	x20, x20, #0x7
  43e908:	str	x4, [x6]
  43e90c:	and	x20, x20, #0xfffffffffffffff8
  43e910:	cmp	x5, x20
  43e914:	b.ls	43e994 <ferror@plt+0x3c114>  // b.plast
  43e918:	sub	x5, x5, x20
  43e91c:	cmp	x5, #0xf
  43e920:	b.ls	43e994 <ferror@plt+0x3c114>  // b.plast
  43e924:	ldr	x9, [x21, #64]
  43e928:	mov	x4, #0x0                   	// #0
  43e92c:	mov	x0, x9
  43e930:	mov	x1, x9
  43e934:	cbnz	x9, 43e954 <ferror@plt+0x3c0d4>
  43e938:	b	43e984 <ferror@plt+0x3c104>
  43e93c:	ldr	x1, [x7]
  43e940:	ldr	x3, [x0, #8]
  43e944:	ldr	x2, [x1, #8]
  43e948:	cmp	x3, x2
  43e94c:	csel	x1, x1, x0, cs  // cs = hs, nlast
  43e950:	csel	x7, x7, x6, cs  // cs = hs, nlast
  43e954:	mov	x6, x0
  43e958:	add	x4, x4, #0x1
  43e95c:	ldr	x0, [x0]
  43e960:	cbnz	x0, 43e93c <ferror@plt+0x3c0bc>
  43e964:	cmp	x4, #0xf
  43e968:	b.ls	43e984 <ferror@plt+0x3c104>  // b.plast
  43e96c:	ldr	x0, [x1, #8]
  43e970:	cmp	x5, x0
  43e974:	b.ls	43e994 <ferror@plt+0x3c114>  // b.plast
  43e978:	ldr	x0, [x1]
  43e97c:	str	x0, [x7]
  43e980:	ldr	x9, [x21, #64]
  43e984:	add	x0, x19, x20
  43e988:	str	x9, [x19, x20]
  43e98c:	str	x5, [x0, #8]
  43e990:	str	x0, [x21, #64]
  43e994:	cbnz	w8, 43ea84 <ferror@plt+0x3c204>
  43e998:	mov	x0, x19
  43e99c:	ldp	x19, x20, [sp, #16]
  43e9a0:	ldp	x21, x22, [sp, #32]
  43e9a4:	ldp	x23, x24, [sp, #48]
  43e9a8:	ldp	x29, x30, [sp], #64
  43e9ac:	ret
  43e9b0:	add	x0, x0, #0x3c
  43e9b4:	mov	w2, #0x1                   	// #1
  43e9b8:	ldxr	w1, [x0]
  43e9bc:	stxr	w3, w2, [x0]
  43e9c0:	cbnz	w3, 43e9b8 <ferror@plt+0x3c138>
  43e9c4:	dmb	ish
  43e9c8:	cbnz	w1, 43e9f0 <ferror@plt+0x3c170>
  43e9cc:	ldr	x4, [x21, #64]
  43e9d0:	add	x7, x21, #0x40
  43e9d4:	ldr	w8, [x21, #8]
  43e9d8:	cbnz	x4, 43e8e0 <ferror@plt+0x3c060>
  43e9dc:	nop
  43e9e0:	cbz	w8, 43e9f0 <ferror@plt+0x3c170>
  43e9e4:	add	x0, x21, #0x3c
  43e9e8:	stlr	wzr, [x0]
  43e9ec:	nop
  43e9f0:	bl	4024b0 <getpagesize@plt>
  43e9f4:	sub	x22, x20, #0x1
  43e9f8:	sxtw	x0, w0
  43e9fc:	mov	x5, #0x0                   	// #0
  43ea00:	add	x22, x22, x0
  43ea04:	neg	x0, x0
  43ea08:	and	x22, x22, x0
  43ea0c:	mov	w4, #0xffffffff            	// #-1
  43ea10:	mov	x1, x22
  43ea14:	mov	w3, #0x22                  	// #34
  43ea18:	mov	w2, #0x3                   	// #3
  43ea1c:	mov	x0, #0x0                   	// #0
  43ea20:	bl	4025f0 <mmap@plt>
  43ea24:	mov	x19, x0
  43ea28:	cmn	x0, #0x1
  43ea2c:	b.eq	43ea5c <ferror@plt+0x3c1dc>  // b.none
  43ea30:	add	x1, x20, #0x7
  43ea34:	and	x1, x1, #0xfffffffffffffff8
  43ea38:	cmp	x22, x1
  43ea3c:	b.ls	43e998 <ferror@plt+0x3c118>  // b.plast
  43ea40:	sub	x2, x22, x1
  43ea44:	mov	x4, x23
  43ea48:	add	x1, x0, x1
  43ea4c:	mov	x3, x24
  43ea50:	mov	x0, x21
  43ea54:	bl	43e770 <ferror@plt+0x3bef0>
  43ea58:	b	43e998 <ferror@plt+0x3c118>
  43ea5c:	mov	x19, #0x0                   	// #0
  43ea60:	cbz	x24, 43e998 <ferror@plt+0x3c118>
  43ea64:	bl	4027c0 <__errno_location@plt>
  43ea68:	mov	x2, x0
  43ea6c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ea70:	mov	x0, x23
  43ea74:	add	x1, x1, #0x710
  43ea78:	ldr	w2, [x2]
  43ea7c:	blr	x24
  43ea80:	b	43e998 <ferror@plt+0x3c118>
  43ea84:	add	x21, x21, #0x3c
  43ea88:	stlr	wzr, [x21]
  43ea8c:	b	43e998 <ferror@plt+0x3c118>
  43ea90:	stp	x29, x30, [sp, #-96]!
  43ea94:	mov	x29, sp
  43ea98:	stp	x23, x24, [sp, #48]
  43ea9c:	ldp	x23, x5, [x4, #8]
  43eaa0:	stp	x19, x20, [sp, #16]
  43eaa4:	mov	x19, x4
  43eaa8:	stp	x21, x22, [sp, #32]
  43eaac:	mov	x21, x1
  43eab0:	add	x20, x1, x23
  43eab4:	cmp	x5, x1
  43eab8:	b.cc	43eae4 <ferror@plt+0x3c264>  // b.lo, b.ul, b.last
  43eabc:	ldr	x22, [x4]
  43eac0:	add	x22, x22, x23
  43eac4:	sub	x5, x5, x21
  43eac8:	stp	x20, x5, [x19, #8]
  43eacc:	mov	x0, x22
  43ead0:	ldp	x19, x20, [sp, #16]
  43ead4:	ldp	x21, x22, [sp, #32]
  43ead8:	ldp	x23, x24, [sp, #48]
  43eadc:	ldp	x29, x30, [sp], #96
  43eae0:	ret
  43eae4:	stp	x25, x26, [sp, #64]
  43eae8:	mov	x24, x0
  43eaec:	mov	x25, x2
  43eaf0:	mov	x26, x3
  43eaf4:	cbnz	x23, 43eb6c <ferror@plt+0x3c2ec>
  43eaf8:	lsl	x20, x20, #4
  43eafc:	mov	x3, x26
  43eb00:	mov	x2, x25
  43eb04:	mov	x1, x20
  43eb08:	mov	x0, x24
  43eb0c:	bl	43e8a8 <ferror@plt+0x3c028>
  43eb10:	mov	x22, x0
  43eb14:	cbz	x0, 43eba0 <ferror@plt+0x3c320>
  43eb18:	ldr	x23, [x19, #8]
  43eb1c:	str	x27, [sp, #80]
  43eb20:	ldr	x27, [x19]
  43eb24:	cbz	x27, 43eb54 <ferror@plt+0x3c2d4>
  43eb28:	mov	x2, x23
  43eb2c:	mov	x1, x27
  43eb30:	bl	402220 <memcpy@plt>
  43eb34:	ldr	x2, [x19, #16]
  43eb38:	mov	x4, x26
  43eb3c:	mov	x3, x25
  43eb40:	mov	x1, x27
  43eb44:	add	x2, x23, x2
  43eb48:	mov	x0, x24
  43eb4c:	bl	43e770 <ferror@plt+0x3bef0>
  43eb50:	ldr	x23, [x19, #8]
  43eb54:	sub	x5, x20, x23
  43eb58:	add	x20, x21, x23
  43eb5c:	ldp	x25, x26, [sp, #64]
  43eb60:	ldr	x27, [sp, #80]
  43eb64:	str	x22, [x19]
  43eb68:	b	43eac0 <ferror@plt+0x3c240>
  43eb6c:	bl	4024b0 <getpagesize@plt>
  43eb70:	cmp	x20, w0, sxtw
  43eb74:	lsl	x6, x20, #1
  43eb78:	sxtw	x5, w0
  43eb7c:	b.cs	43eb8c <ferror@plt+0x3c30c>  // b.hs, b.nlast
  43eb80:	cmp	x5, x6
  43eb84:	csel	x20, x5, x6, ls  // ls = plast
  43eb88:	b	43eafc <ferror@plt+0x3c27c>
  43eb8c:	sub	x20, x6, #0x1
  43eb90:	neg	x0, x5
  43eb94:	add	x20, x20, x5
  43eb98:	and	x20, x20, x0
  43eb9c:	b	43eafc <ferror@plt+0x3c27c>
  43eba0:	ldp	x25, x26, [sp, #64]
  43eba4:	b	43eacc <ferror@plt+0x3c24c>
  43eba8:	ldp	x0, x2, [x1]
  43ebac:	add	x2, x0, x2
  43ebb0:	stp	x2, xzr, [x1]
  43ebb4:	ret
  43ebb8:	stp	x29, x30, [sp, #-32]!
  43ebbc:	mov	x4, x3
  43ebc0:	mov	x3, x2
  43ebc4:	mov	x29, sp
  43ebc8:	ldp	x2, x6, [x1, #8]
  43ebcc:	str	x19, [sp, #16]
  43ebd0:	mov	x19, x1
  43ebd4:	ldr	x5, [x19]
  43ebd8:	add	x1, x2, #0x7
  43ebdc:	and	x1, x1, #0xfffffffffffffff8
  43ebe0:	add	x2, x2, x6
  43ebe4:	sub	x2, x2, x1
  43ebe8:	add	x1, x5, x1
  43ebec:	bl	43e770 <ferror@plt+0x3bef0>
  43ebf0:	str	xzr, [x19, #16]
  43ebf4:	ldr	x0, [x19, #8]
  43ebf8:	cbnz	x0, 43ec00 <ferror@plt+0x3c380>
  43ebfc:	str	xzr, [x19]
  43ec00:	mov	w0, #0x1                   	// #1
  43ec04:	ldr	x19, [sp, #16]
  43ec08:	ldp	x29, x30, [sp], #32
  43ec0c:	ret
  43ec10:	stp	x29, x30, [sp, #-176]!
  43ec14:	mov	x29, sp
  43ec18:	stp	x19, x20, [sp, #16]
  43ec1c:	mov	x19, x0
  43ec20:	ldr	w0, [x0, #8]
  43ec24:	stp	x21, x22, [sp, #32]
  43ec28:	mov	x22, x3
  43ec2c:	stp	x23, x24, [sp, #48]
  43ec30:	mov	x23, x1
  43ec34:	mov	x24, x2
  43ec38:	stp	x27, x28, [sp, #80]
  43ec3c:	mov	x28, x4
  43ec40:	cbnz	w0, 43ecc8 <ferror@plt+0x3c448>
  43ec44:	ldr	w0, [x19, #56]
  43ec48:	cbnz	w0, 43ec98 <ferror@plt+0x3c418>
  43ec4c:	ldr	x0, [x19, #24]
  43ec50:	str	x0, [sp, #104]
  43ec54:	cbz	x0, 43ecec <ferror@plt+0x3c46c>
  43ec58:	ldr	w1, [x19, #56]
  43ec5c:	mov	w0, #0x0                   	// #0
  43ec60:	cbnz	w1, 43ec80 <ferror@plt+0x3c400>
  43ec64:	ldr	x5, [x19, #24]
  43ec68:	mov	x4, x28
  43ec6c:	mov	x3, x22
  43ec70:	mov	x2, x24
  43ec74:	mov	x1, x23
  43ec78:	mov	x0, x19
  43ec7c:	blr	x5
  43ec80:	ldp	x19, x20, [sp, #16]
  43ec84:	ldp	x21, x22, [sp, #32]
  43ec88:	ldp	x23, x24, [sp, #48]
  43ec8c:	ldp	x27, x28, [sp, #80]
  43ec90:	ldp	x29, x30, [sp], #176
  43ec94:	ret
  43ec98:	mov	x0, x28
  43ec9c:	mov	w2, #0xffffffff            	// #-1
  43eca0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43eca4:	add	x1, x1, #0x740
  43eca8:	blr	x22
  43ecac:	mov	w0, #0x0                   	// #0
  43ecb0:	ldp	x19, x20, [sp, #16]
  43ecb4:	ldp	x21, x22, [sp, #32]
  43ecb8:	ldp	x23, x24, [sp, #48]
  43ecbc:	ldp	x27, x28, [sp, #80]
  43ecc0:	ldp	x29, x30, [sp], #176
  43ecc4:	ret
  43ecc8:	add	x0, x19, #0x38
  43eccc:	ldar	w0, [x0]
  43ecd0:	cbnz	w0, 43ec98 <ferror@plt+0x3c418>
  43ecd4:	ldr	w0, [x19, #8]
  43ecd8:	cbz	w0, 43ec4c <ferror@plt+0x3c3cc>
  43ecdc:	add	x0, x19, #0x18
  43ece0:	ldar	x0, [x0]
  43ece4:	str	x0, [sp, #104]
  43ece8:	cbnz	x0, 43ec58 <ferror@plt+0x3c3d8>
  43ecec:	add	x27, sp, #0x64
  43ecf0:	stp	x25, x26, [sp, #64]
  43ecf4:	adrp	x26, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ecf8:	adrp	x25, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ecfc:	add	x26, x26, #0x718
  43ed00:	add	x25, x25, #0x768
  43ed04:	mov	w20, #0x0                   	// #0
  43ed08:	cmp	w20, #0x3
  43ed0c:	b.eq	43edf0 <ferror@plt+0x3c570>  // b.none
  43ed10:	cmp	w20, #0x4
  43ed14:	b.eq	43edcc <ferror@plt+0x3c54c>  // b.none
  43ed18:	cmp	w20, #0x1
  43ed1c:	b.eq	43ed88 <ferror@plt+0x3c508>  // b.none
  43ed20:	cmp	w20, #0x2
  43ed24:	b.ne	43ed80 <ferror@plt+0x3c500>  // b.any
  43ed28:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ed2c:	add	x21, x21, #0x730
  43ed30:	mov	x3, x27
  43ed34:	mov	x2, x28
  43ed38:	mov	x1, x22
  43ed3c:	mov	x0, x21
  43ed40:	bl	43f060 <ferror@plt+0x3c7e0>
  43ed44:	tbnz	w0, #31, 43edc0 <ferror@plt+0x3c540>
  43ed48:	mov	w2, w0
  43ed4c:	mov	x1, x21
  43ed50:	add	x5, sp, #0x68
  43ed54:	mov	x4, x28
  43ed58:	mov	x3, x22
  43ed5c:	mov	x0, x19
  43ed60:	bl	442b18 <ferror@plt+0x40298>
  43ed64:	cbz	w0, 43eda8 <ferror@plt+0x3c528>
  43ed68:	ldr	w1, [x19, #8]
  43ed6c:	ldr	x0, [sp, #104]
  43ed70:	cbnz	w1, 43edf8 <ferror@plt+0x3c578>
  43ed74:	ldp	x25, x26, [sp, #64]
  43ed78:	str	x0, [x19, #24]
  43ed7c:	b	43ec58 <ferror@plt+0x3c3d8>
  43ed80:	ldr	x21, [x19]
  43ed84:	cbnz	x21, 43ed30 <ferror@plt+0x3c4b0>
  43ed88:	add	w20, w20, #0x1
  43ed8c:	cmp	w20, #0x5
  43ed90:	b.ne	43ed08 <ferror@plt+0x3c488>  // b.any
  43ed94:	ldr	x1, [x19]
  43ed98:	mov	x0, x28
  43ed9c:	cbz	x1, 43ee08 <ferror@plt+0x3c588>
  43eda0:	mov	w2, #0x2                   	// #2
  43eda4:	blr	x22
  43eda8:	ldr	w0, [x19, #8]
  43edac:	cbnz	w0, 43ee1c <ferror@plt+0x3c59c>
  43edb0:	mov	w1, #0x1                   	// #1
  43edb4:	ldp	x25, x26, [sp, #64]
  43edb8:	str	w1, [x19, #56]
  43edbc:	b	43ec80 <ferror@plt+0x3c400>
  43edc0:	ldr	w0, [sp, #100]
  43edc4:	cbnz	w0, 43ed88 <ferror@plt+0x3c508>
  43edc8:	b	43eda8 <ferror@plt+0x3c528>
  43edcc:	bl	402390 <getpid@plt>
  43edd0:	sxtw	x3, w0
  43edd4:	add	x1, sp, #0x70
  43edd8:	mov	x2, x25
  43eddc:	mov	x21, x1
  43ede0:	mov	x0, x1
  43ede4:	mov	x1, #0x40                  	// #64
  43ede8:	bl	402360 <snprintf@plt>
  43edec:	b	43ed30 <ferror@plt+0x3c4b0>
  43edf0:	mov	x21, x26
  43edf4:	b	43ed30 <ferror@plt+0x3c4b0>
  43edf8:	add	x1, x19, #0x18
  43edfc:	stlr	x0, [x1]
  43ee00:	ldp	x25, x26, [sp, #64]
  43ee04:	b	43ec58 <ferror@plt+0x3c3d8>
  43ee08:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ee0c:	mov	w2, #0x0                   	// #0
  43ee10:	add	x1, x1, #0x780
  43ee14:	blr	x22
  43ee18:	b	43eda8 <ferror@plt+0x3c528>
  43ee1c:	mov	w0, #0x1                   	// #1
  43ee20:	add	x19, x19, #0x38
  43ee24:	stlr	w0, [x19]
  43ee28:	ldp	x25, x26, [sp, #64]
  43ee2c:	mov	w0, #0x0                   	// #0
  43ee30:	b	43ec80 <ferror@plt+0x3c400>
  43ee34:	nop
  43ee38:	stp	x29, x30, [sp, #-176]!
  43ee3c:	mov	x29, sp
  43ee40:	stp	x19, x20, [sp, #16]
  43ee44:	mov	x19, x0
  43ee48:	ldr	w0, [x0, #8]
  43ee4c:	stp	x21, x22, [sp, #32]
  43ee50:	mov	x22, x3
  43ee54:	stp	x23, x24, [sp, #48]
  43ee58:	mov	x23, x1
  43ee5c:	mov	x24, x2
  43ee60:	stp	x27, x28, [sp, #80]
  43ee64:	mov	x28, x4
  43ee68:	cbnz	w0, 43eef4 <ferror@plt+0x3c674>
  43ee6c:	ldr	w0, [x19, #56]
  43ee70:	cbnz	w0, 43eec4 <ferror@plt+0x3c644>
  43ee74:	ldr	x0, [x19, #24]
  43ee78:	str	x0, [sp, #104]
  43ee7c:	cbz	x0, 43ef18 <ferror@plt+0x3c698>
  43ee80:	ldr	w1, [x19, #56]
  43ee84:	mov	w0, #0x0                   	// #0
  43ee88:	cbnz	w1, 43eeac <ferror@plt+0x3c62c>
  43ee8c:	ldr	x5, [x19, #40]
  43ee90:	mov	x0, x19
  43ee94:	mov	x4, x28
  43ee98:	mov	x3, x22
  43ee9c:	mov	x2, x24
  43eea0:	mov	x1, x23
  43eea4:	blr	x5
  43eea8:	mov	w0, #0x1                   	// #1
  43eeac:	ldp	x19, x20, [sp, #16]
  43eeb0:	ldp	x21, x22, [sp, #32]
  43eeb4:	ldp	x23, x24, [sp, #48]
  43eeb8:	ldp	x27, x28, [sp, #80]
  43eebc:	ldp	x29, x30, [sp], #176
  43eec0:	ret
  43eec4:	mov	x0, x28
  43eec8:	mov	w2, #0xffffffff            	// #-1
  43eecc:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43eed0:	add	x1, x1, #0x740
  43eed4:	blr	x22
  43eed8:	mov	w0, #0x0                   	// #0
  43eedc:	ldp	x19, x20, [sp, #16]
  43eee0:	ldp	x21, x22, [sp, #32]
  43eee4:	ldp	x23, x24, [sp, #48]
  43eee8:	ldp	x27, x28, [sp, #80]
  43eeec:	ldp	x29, x30, [sp], #176
  43eef0:	ret
  43eef4:	add	x0, x19, #0x38
  43eef8:	ldar	w0, [x0]
  43eefc:	cbnz	w0, 43eec4 <ferror@plt+0x3c644>
  43ef00:	ldr	w0, [x19, #8]
  43ef04:	cbz	w0, 43ee74 <ferror@plt+0x3c5f4>
  43ef08:	add	x0, x19, #0x18
  43ef0c:	ldar	x0, [x0]
  43ef10:	str	x0, [sp, #104]
  43ef14:	cbnz	x0, 43ee80 <ferror@plt+0x3c600>
  43ef18:	add	x27, sp, #0x64
  43ef1c:	stp	x25, x26, [sp, #64]
  43ef20:	adrp	x26, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ef24:	adrp	x25, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ef28:	add	x26, x26, #0x718
  43ef2c:	add	x25, x25, #0x768
  43ef30:	mov	w20, #0x0                   	// #0
  43ef34:	cmp	w20, #0x3
  43ef38:	b.eq	43f01c <ferror@plt+0x3c79c>  // b.none
  43ef3c:	cmp	w20, #0x4
  43ef40:	b.eq	43eff8 <ferror@plt+0x3c778>  // b.none
  43ef44:	cmp	w20, #0x1
  43ef48:	b.eq	43efb4 <ferror@plt+0x3c734>  // b.none
  43ef4c:	cmp	w20, #0x2
  43ef50:	b.ne	43efac <ferror@plt+0x3c72c>  // b.any
  43ef54:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43ef58:	add	x21, x21, #0x730
  43ef5c:	mov	x3, x27
  43ef60:	mov	x2, x28
  43ef64:	mov	x1, x22
  43ef68:	mov	x0, x21
  43ef6c:	bl	43f060 <ferror@plt+0x3c7e0>
  43ef70:	tbnz	w0, #31, 43efec <ferror@plt+0x3c76c>
  43ef74:	mov	w2, w0
  43ef78:	mov	x1, x21
  43ef7c:	add	x5, sp, #0x68
  43ef80:	mov	x4, x28
  43ef84:	mov	x3, x22
  43ef88:	mov	x0, x19
  43ef8c:	bl	442b18 <ferror@plt+0x40298>
  43ef90:	cbz	w0, 43efd4 <ferror@plt+0x3c754>
  43ef94:	ldr	w1, [x19, #8]
  43ef98:	ldr	x0, [sp, #104]
  43ef9c:	cbnz	w1, 43f024 <ferror@plt+0x3c7a4>
  43efa0:	ldp	x25, x26, [sp, #64]
  43efa4:	str	x0, [x19, #24]
  43efa8:	b	43ee80 <ferror@plt+0x3c600>
  43efac:	ldr	x21, [x19]
  43efb0:	cbnz	x21, 43ef5c <ferror@plt+0x3c6dc>
  43efb4:	add	w20, w20, #0x1
  43efb8:	cmp	w20, #0x5
  43efbc:	b.ne	43ef34 <ferror@plt+0x3c6b4>  // b.any
  43efc0:	ldr	x1, [x19]
  43efc4:	mov	x0, x28
  43efc8:	cbz	x1, 43f034 <ferror@plt+0x3c7b4>
  43efcc:	mov	w2, #0x2                   	// #2
  43efd0:	blr	x22
  43efd4:	ldr	w0, [x19, #8]
  43efd8:	cbnz	w0, 43f048 <ferror@plt+0x3c7c8>
  43efdc:	mov	w1, #0x1                   	// #1
  43efe0:	ldp	x25, x26, [sp, #64]
  43efe4:	str	w1, [x19, #56]
  43efe8:	b	43eeac <ferror@plt+0x3c62c>
  43efec:	ldr	w0, [sp, #100]
  43eff0:	cbnz	w0, 43efb4 <ferror@plt+0x3c734>
  43eff4:	b	43efd4 <ferror@plt+0x3c754>
  43eff8:	bl	402390 <getpid@plt>
  43effc:	sxtw	x3, w0
  43f000:	add	x1, sp, #0x70
  43f004:	mov	x2, x25
  43f008:	mov	x21, x1
  43f00c:	mov	x0, x1
  43f010:	mov	x1, #0x40                  	// #64
  43f014:	bl	402360 <snprintf@plt>
  43f018:	b	43ef5c <ferror@plt+0x3c6dc>
  43f01c:	mov	x21, x26
  43f020:	b	43ef5c <ferror@plt+0x3c6dc>
  43f024:	add	x1, x19, #0x18
  43f028:	stlr	x0, [x1]
  43f02c:	ldp	x25, x26, [sp, #64]
  43f030:	b	43ee80 <ferror@plt+0x3c600>
  43f034:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43f038:	mov	w2, #0x0                   	// #0
  43f03c:	add	x1, x1, #0x780
  43f040:	blr	x22
  43f044:	b	43efd4 <ferror@plt+0x3c754>
  43f048:	mov	w0, #0x1                   	// #1
  43f04c:	add	x19, x19, #0x38
  43f050:	stlr	w0, [x19]
  43f054:	ldp	x25, x26, [sp, #64]
  43f058:	mov	w0, #0x0                   	// #0
  43f05c:	b	43eeac <ferror@plt+0x3c62c>
  43f060:	stp	x29, x30, [sp, #-64]!
  43f064:	mov	x29, sp
  43f068:	stp	x19, x20, [sp, #16]
  43f06c:	stp	x21, x22, [sp, #32]
  43f070:	mov	x22, x2
  43f074:	mov	x21, x0
  43f078:	str	x23, [sp, #48]
  43f07c:	mov	x23, x1
  43f080:	cbz	x3, 43f0c4 <ferror@plt+0x3c844>
  43f084:	str	wzr, [x3]
  43f088:	mov	x20, x3
  43f08c:	mov	w1, #0x80000               	// #524288
  43f090:	bl	4023e0 <open@plt>
  43f094:	mov	w19, w0
  43f098:	tbnz	w0, #31, 43f0f0 <ferror@plt+0x3c870>
  43f09c:	mov	w0, w19
  43f0a0:	mov	w2, #0x1                   	// #1
  43f0a4:	mov	w1, #0x2                   	// #2
  43f0a8:	bl	402690 <fcntl@plt>
  43f0ac:	mov	w0, w19
  43f0b0:	ldp	x19, x20, [sp, #16]
  43f0b4:	ldp	x21, x22, [sp, #32]
  43f0b8:	ldr	x23, [sp, #48]
  43f0bc:	ldp	x29, x30, [sp], #64
  43f0c0:	ret
  43f0c4:	mov	w1, #0x80000               	// #524288
  43f0c8:	bl	4023e0 <open@plt>
  43f0cc:	mov	w19, w0
  43f0d0:	tbz	w0, #31, 43f09c <ferror@plt+0x3c81c>
  43f0d4:	bl	4027c0 <__errno_location@plt>
  43f0d8:	ldr	w2, [x0]
  43f0dc:	mov	x1, x21
  43f0e0:	mov	x0, x22
  43f0e4:	mov	w19, #0xffffffff            	// #-1
  43f0e8:	blr	x23
  43f0ec:	b	43f0ac <ferror@plt+0x3c82c>
  43f0f0:	bl	4027c0 <__errno_location@plt>
  43f0f4:	ldr	w1, [x0]
  43f0f8:	cmp	w1, #0x2
  43f0fc:	b.ne	43f0d8 <ferror@plt+0x3c858>  // b.any
  43f100:	mov	w0, #0x1                   	// #1
  43f104:	mov	w19, #0xffffffff            	// #-1
  43f108:	str	w0, [x20]
  43f10c:	b	43f0ac <ferror@plt+0x3c82c>
  43f110:	stp	x29, x30, [sp, #-32]!
  43f114:	mov	x29, sp
  43f118:	stp	x19, x20, [sp, #16]
  43f11c:	mov	x19, x1
  43f120:	mov	x20, x2
  43f124:	bl	4024f0 <close@plt>
  43f128:	tbnz	w0, #31, 43f13c <ferror@plt+0x3c8bc>
  43f12c:	mov	w0, #0x1                   	// #1
  43f130:	ldp	x19, x20, [sp, #16]
  43f134:	ldp	x29, x30, [sp], #32
  43f138:	ret
  43f13c:	bl	4027c0 <__errno_location@plt>
  43f140:	mov	x2, x0
  43f144:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43f148:	mov	x0, x20
  43f14c:	add	x1, x1, #0x7b0
  43f150:	ldr	w2, [x2]
  43f154:	blr	x19
  43f158:	mov	w0, #0x0                   	// #0
  43f15c:	ldp	x19, x20, [sp, #16]
  43f160:	ldp	x29, x30, [sp], #32
  43f164:	ret
  43f168:	stp	x29, x30, [sp, #-16]!
  43f16c:	mov	x0, x4
  43f170:	mov	w2, #0xffffffff            	// #-1
  43f174:	mov	x29, sp
  43f178:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43f17c:	add	x1, x1, #0x7b8
  43f180:	blr	x3
  43f184:	mov	w0, #0x0                   	// #0
  43f188:	ldp	x29, x30, [sp], #16
  43f18c:	ret
  43f190:	mov	x0, x4
  43f194:	mov	x16, x3
  43f198:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43f19c:	mov	w2, #0xffffffff            	// #-1
  43f1a0:	add	x1, x1, #0x7d8
  43f1a4:	br	x16
  43f1a8:	ldr	x2, [x0, #8]
  43f1ac:	mov	w3, #0xffffffff            	// #-1
  43f1b0:	ldr	x1, [x1, #8]
  43f1b4:	cmp	x2, x1
  43f1b8:	cset	w0, hi  // hi = pmore
  43f1bc:	csel	w0, w0, w3, cs  // cs = hs, nlast
  43f1c0:	ret
  43f1c4:	nop
  43f1c8:	stp	x29, x30, [sp, #-48]!
  43f1cc:	mov	x12, x2
  43f1d0:	mov	x17, #0x15af                	// #5551
  43f1d4:	mov	x29, sp
  43f1d8:	cmp	x2, x17
  43f1dc:	ldrb	w18, [x0]
  43f1e0:	ldrb	w2, [x0, #1]
  43f1e4:	mov	x11, x1
  43f1e8:	ldrb	w1, [x0, #2]
  43f1ec:	ldrb	w0, [x0, #3]
  43f1f0:	orr	w18, w2, w18, lsl #8
  43f1f4:	orr	w18, w1, w18, lsl #8
  43f1f8:	orr	w18, w0, w18, lsl #8
  43f1fc:	b.ls	43f478 <ferror@plt+0x3cbf8>  // b.plast
  43f200:	mov	x16, #0x15b0                	// #5552
  43f204:	mov	w14, #0x8071                	// #32881
  43f208:	add	x10, x11, x16
  43f20c:	mov	w9, #0x0                   	// #0
  43f210:	mov	w5, #0x1                   	// #1
  43f214:	mov	x15, #0xffffffffffffea50    	// #-5552
  43f218:	movk	w14, #0x8007, lsl #16
  43f21c:	mov	w13, #0xfff1                	// #65521
  43f220:	stp	x19, x20, [sp, #16]
  43f224:	stp	x21, x22, [sp, #32]
  43f228:	add	x2, x10, x15
  43f22c:	nop
  43f230:	ldrb	w3, [x2]
  43f234:	add	x2, x2, #0x10
  43f238:	ldurb	w4, [x2, #-15]
  43f23c:	mov	x11, x10
  43f240:	ldurb	w0, [x2, #-14]
  43f244:	add	w3, w3, w5
  43f248:	ldurb	w1, [x2, #-13]
  43f24c:	add	w4, w4, w3
  43f250:	add	w0, w0, w4
  43f254:	ldurb	w8, [x2, #-12]
  43f258:	ldurb	w22, [x2, #-11]
  43f25c:	add	w1, w1, w0
  43f260:	ldurb	w7, [x2, #-10]
  43f264:	add	w8, w8, w1
  43f268:	ldurb	w21, [x2, #-9]
  43f26c:	add	w22, w22, w8
  43f270:	ldurb	w6, [x2, #-8]
  43f274:	add	w7, w7, w22
  43f278:	ldurb	w19, [x2, #-7]
  43f27c:	add	w21, w21, w7
  43f280:	ldurb	w5, [x2, #-6]
  43f284:	add	w6, w6, w21
  43f288:	ldurb	w30, [x2, #-5]
  43f28c:	add	w19, w19, w6
  43f290:	ldurb	w20, [x2, #-3]
  43f294:	add	w3, w3, w4
  43f298:	add	w1, w0, w1
  43f29c:	ldurb	w4, [x2, #-4]
  43f2a0:	add	w5, w5, w19
  43f2a4:	add	w1, w1, w3
  43f2a8:	ldurb	w3, [x2, #-2]
  43f2ac:	add	w30, w30, w5
  43f2b0:	add	w8, w8, w22
  43f2b4:	add	w0, w7, w21
  43f2b8:	add	w4, w4, w30
  43f2bc:	add	w1, w1, w8
  43f2c0:	add	w1, w1, w0
  43f2c4:	add	w7, w20, w4
  43f2c8:	add	w0, w6, w19
  43f2cc:	ldurb	w6, [x2, #-1]
  43f2d0:	add	w5, w5, w30
  43f2d4:	add	w3, w3, w7
  43f2d8:	add	w0, w1, w0
  43f2dc:	add	w4, w4, w7
  43f2e0:	add	w0, w0, w5
  43f2e4:	add	w5, w6, w3
  43f2e8:	add	w0, w0, w4
  43f2ec:	add	w3, w3, w5
  43f2f0:	add	w0, w0, w3
  43f2f4:	cmp	x10, x2
  43f2f8:	add	w9, w9, w0
  43f2fc:	b.ne	43f230 <ferror@plt+0x3c9b0>  // b.any
  43f300:	umull	x1, w5, w14
  43f304:	add	x12, x12, x15
  43f308:	umull	x0, w9, w14
  43f30c:	cmp	x12, x17
  43f310:	add	x10, x10, x16
  43f314:	lsr	x1, x1, #47
  43f318:	lsr	x0, x0, #47
  43f31c:	msub	w5, w1, w13, w5
  43f320:	msub	w9, w0, w13, w9
  43f324:	b.hi	43f228 <ferror@plt+0x3c9a8>  // b.pmore
  43f328:	ldp	x19, x20, [sp, #16]
  43f32c:	ldp	x21, x22, [sp, #32]
  43f330:	cmp	x12, #0xf
  43f334:	b.ls	43f418 <ferror@plt+0x3cb98>  // b.plast
  43f338:	sub	x7, x12, #0x10
  43f33c:	and	x7, x7, #0xfffffffffffffff0
  43f340:	add	x7, x7, #0x10
  43f344:	add	x7, x11, x7
  43f348:	ldrb	w1, [x11]
  43f34c:	add	x11, x11, #0x10
  43f350:	ldurb	w8, [x11, #-15]
  43f354:	ldurb	w0, [x11, #-14]
  43f358:	add	w1, w1, w5
  43f35c:	ldurb	w2, [x11, #-13]
  43f360:	add	w8, w8, w1
  43f364:	ldurb	w6, [x11, #-12]
  43f368:	add	w0, w0, w8
  43f36c:	ldurb	w15, [x11, #-11]
  43f370:	add	w2, w2, w0
  43f374:	ldurb	w5, [x11, #-10]
  43f378:	add	w6, w6, w2
  43f37c:	ldurb	w14, [x11, #-9]
  43f380:	add	w15, w15, w6
  43f384:	ldurb	w3, [x11, #-8]
  43f388:	add	w5, w5, w15
  43f38c:	ldurb	w13, [x11, #-7]
  43f390:	add	w14, w14, w5
  43f394:	ldurb	w4, [x11, #-6]
  43f398:	add	w3, w3, w14
  43f39c:	ldurb	w10, [x11, #-5]
  43f3a0:	add	w1, w1, w8
  43f3a4:	add	w13, w13, w3
  43f3a8:	ldurb	w8, [x11, #-3]
  43f3ac:	add	w0, w0, w2
  43f3b0:	ldurb	w2, [x11, #-4]
  43f3b4:	add	w4, w4, w13
  43f3b8:	add	w0, w0, w1
  43f3bc:	ldurb	w1, [x11, #-2]
  43f3c0:	add	w6, w6, w15
  43f3c4:	add	w10, w10, w4
  43f3c8:	add	w0, w0, w6
  43f3cc:	add	w5, w5, w14
  43f3d0:	add	w2, w2, w10
  43f3d4:	add	w0, w0, w5
  43f3d8:	add	w6, w8, w2
  43f3dc:	ldurb	w5, [x11, #-1]
  43f3e0:	add	w3, w3, w13
  43f3e4:	add	w1, w1, w6
  43f3e8:	add	w0, w0, w3
  43f3ec:	add	w4, w4, w10
  43f3f0:	add	w2, w2, w6
  43f3f4:	add	w0, w0, w4
  43f3f8:	add	w5, w5, w1
  43f3fc:	add	w0, w0, w2
  43f400:	add	w1, w1, w5
  43f404:	add	w0, w0, w1
  43f408:	cmp	x11, x7
  43f40c:	add	w9, w9, w0
  43f410:	b.ne	43f348 <ferror@plt+0x3cac8>  // b.any
  43f414:	and	x12, x12, #0xf
  43f418:	cbz	x12, 43f440 <ferror@plt+0x3cbc0>
  43f41c:	mov	w2, #0x1                   	// #1
  43f420:	sub	w2, w2, w11
  43f424:	ldrb	w0, [x11]
  43f428:	add	w1, w2, w11
  43f42c:	cmp	x1, x12
  43f430:	add	x11, x11, #0x1
  43f434:	add	w5, w5, w0
  43f438:	add	w9, w9, w5
  43f43c:	b.cc	43f424 <ferror@plt+0x3cba4>  // b.lo, b.ul, b.last
  43f440:	mov	w0, #0x8071                	// #32881
  43f444:	mov	w2, #0xfff1                	// #65521
  43f448:	movk	w0, #0x8007, lsl #16
  43f44c:	ldp	x29, x30, [sp], #48
  43f450:	umull	x1, w9, w0
  43f454:	umull	x3, w5, w0
  43f458:	lsr	x0, x1, #47
  43f45c:	lsr	x3, x3, #47
  43f460:	msub	w9, w0, w2, w9
  43f464:	msub	w3, w3, w2, w5
  43f468:	add	w3, w3, w9, lsl #16
  43f46c:	cmp	w3, w18
  43f470:	cset	w0, eq  // eq = none
  43f474:	ret
  43f478:	mov	w9, #0x0                   	// #0
  43f47c:	mov	w5, #0x1                   	// #1
  43f480:	b	43f330 <ferror@plt+0x3cab0>
  43f484:	nop
  43f488:	stp	x29, x30, [sp, #-176]!
  43f48c:	mov	x5, #0x0                   	// #0
  43f490:	mov	w9, #0x1                   	// #1
  43f494:	mov	x29, sp
  43f498:	add	x8, sp, #0x90
  43f49c:	add	x10, sp, #0x70
  43f4a0:	stp	x19, x20, [sp, #16]
  43f4a4:	add	x20, x2, #0x1, lsl #12
  43f4a8:	add	x19, sp, #0x50
  43f4ac:	stp	xzr, xzr, [sp, #80]
  43f4b0:	stp	xzr, xzr, [sp, #96]
  43f4b4:	nop
  43f4b8:	ldrb	w4, [x0, x5]
  43f4bc:	and	w6, w5, #0xffff
  43f4c0:	cmp	w4, #0xf
  43f4c4:	b.hi	43f5e0 <ferror@plt+0x3cd60>  // b.pmore
  43f4c8:	sbfiz	x4, x4, #1, #32
  43f4cc:	ldrh	w7, [x19, x4]
  43f4d0:	cbnz	w7, 43f5f0 <ferror@plt+0x3cd70>
  43f4d4:	strh	w6, [x10, x4]
  43f4d8:	add	x5, x5, #0x1
  43f4dc:	strh	w6, [x8, x4]
  43f4e0:	cmp	x5, x1
  43f4e4:	strh	w9, [x19, x4]
  43f4e8:	b.ne	43f4b8 <ferror@plt+0x3cc38>  // b.any
  43f4ec:	mov	x0, x3
  43f4f0:	mov	w1, #0x0                   	// #0
  43f4f4:	mov	x2, #0x800                 	// #2048
  43f4f8:	bl	402440 <memset@plt>
  43f4fc:	add	x12, sp, #0x70
  43f500:	mov	x3, x0
  43f504:	mov	x5, #0x0                   	// #0
  43f508:	mov	w1, #0x0                   	// #0
  43f50c:	mov	w10, #0x1                   	// #1
  43f510:	lsl	x2, x5, #1
  43f514:	add	x0, x19, x2
  43f518:	ldrh	w0, [x0, #2]
  43f51c:	cbnz	w0, 43f620 <ferror@plt+0x3cda0>
  43f520:	add	x5, x5, #0x1
  43f524:	cmp	x5, #0x8
  43f528:	b.ne	43f510 <ferror@plt+0x3cc90>  // b.any
  43f52c:	mov	x8, x19
  43f530:	add	x11, sp, #0x40
  43f534:	mov	x2, #0x9                   	// #9
  43f538:	mov	w9, #0x1                   	// #1
  43f53c:	b	43f550 <ferror@plt+0x3ccd0>
  43f540:	add	x2, x2, #0x1
  43f544:	add	x8, x8, #0x2
  43f548:	cmp	x2, #0x10
  43f54c:	b.eq	43f6e0 <ferror@plt+0x3ce60>  // b.none
  43f550:	ldrh	w7, [x8, #18]
  43f554:	cbz	w7, 43f540 <ferror@plt+0x3ccc0>
  43f558:	add	x0, x11, x2, lsl #1
  43f55c:	sub	w10, w2, #0x1
  43f560:	mov	w5, #0x0                   	// #0
  43f564:	mov	x6, #0x0                   	// #0
  43f568:	sturh	w1, [x0, #-18]
  43f56c:	b	43f580 <ferror@plt+0x3cd00>
  43f570:	add	w6, w5, #0x1
  43f574:	mov	x5, x6
  43f578:	cmp	x2, w6, uxtw
  43f57c:	b.ls	43f5dc <ferror@plt+0x3cd5c>  // b.plast
  43f580:	lsr	w0, w7, w5
  43f584:	tbz	w0, #0, 43f570 <ferror@plt+0x3ccf0>
  43f588:	sub	w0, w10, w5
  43f58c:	subs	x6, x2, x6
  43f590:	lsl	w0, w9, w0
  43f594:	b.eq	43f5c4 <ferror@plt+0x3cd44>  // b.none
  43f598:	tst	w1, w0
  43f59c:	b.eq	43f684 <ferror@plt+0x3ce04>  // b.none
  43f5a0:	mov	w4, #0x0                   	// #0
  43f5a4:	b	43f5b0 <ferror@plt+0x3cd30>
  43f5a8:	tst	w1, w0
  43f5ac:	b.eq	43f684 <ferror@plt+0x3ce04>  // b.none
  43f5b0:	add	w4, w4, #0x1
  43f5b4:	bic	w1, w1, w0
  43f5b8:	lsr	w0, w0, #1
  43f5bc:	cmp	x6, w4, uxtw
  43f5c0:	b.hi	43f5a8 <ferror@plt+0x3cd28>  // b.pmore
  43f5c4:	lsl	w0, w9, w5
  43f5c8:	bic	w7, w7, w0
  43f5cc:	add	w6, w5, #0x1
  43f5d0:	mov	x5, x6
  43f5d4:	cmp	x2, w6, uxtw
  43f5d8:	b.hi	43f580 <ferror@plt+0x3cd00>  // b.pmore
  43f5dc:	cbz	w7, 43f540 <ferror@plt+0x3ccc0>
  43f5e0:	mov	w0, #0x0                   	// #0
  43f5e4:	ldp	x19, x20, [sp, #16]
  43f5e8:	ldp	x29, x30, [sp], #176
  43f5ec:	ret
  43f5f0:	ldrh	w2, [x8, x4]
  43f5f4:	strh	w6, [x20, x2, lsl #1]
  43f5f8:	ldrb	w4, [x0, x5]
  43f5fc:	add	x5, x5, #0x1
  43f600:	cmp	x1, x5
  43f604:	lsl	x4, x4, #1
  43f608:	ldrh	w7, [x19, x4]
  43f60c:	strh	w6, [x8, x4]
  43f610:	add	w6, w7, #0x1
  43f614:	strh	w6, [x19, x4]
  43f618:	b.ne	43f4b8 <ferror@plt+0x3cc38>  // b.any
  43f61c:	b	43f4ec <ferror@plt+0x3cc6c>
  43f620:	add	w4, w5, #0x1
  43f624:	lsl	w4, w10, w4
  43f628:	cmp	w4, w0
  43f62c:	b.cc	43f5e0 <ferror@plt+0x3cd60>  // b.lo, b.ul, b.last
  43f630:	add	x2, x2, x12
  43f634:	and	x6, x0, #0xffff
  43f638:	ldrh	w8, [x2, #2]
  43f63c:	tst	w8, #0xfe00
  43f640:	b.ne	43f5e0 <ferror@plt+0x3cd60>  // b.any
  43f644:	sxtw	x4, w4
  43f648:	ubfiz	w13, w5, #9, #7
  43f64c:	lsl	w9, w10, w5
  43f650:	mov	x11, #0x0                   	// #0
  43f654:	cmp	w1, #0xff
  43f658:	orr	w7, w13, w8
  43f65c:	mov	w0, w1
  43f660:	b.ls	43f678 <ferror@plt+0x3cdf8>  // b.plast
  43f664:	b	43f694 <ferror@plt+0x3ce14>
  43f668:	strh	w7, [x3, x0, lsl #1]
  43f66c:	add	x0, x0, x4
  43f670:	cmp	x0, #0xff
  43f674:	b.hi	43f694 <ferror@plt+0x3ce14>  // b.pmore
  43f678:	ldrh	w2, [x3, x0, lsl #1]
  43f67c:	cbz	w2, 43f668 <ferror@plt+0x3cde8>
  43f680:	b	43f5e0 <ferror@plt+0x3cd60>
  43f684:	add	w1, w1, w0
  43f688:	lsl	w0, w9, w5
  43f68c:	bic	w7, w7, w0
  43f690:	b	43f5cc <ferror@plt+0x3cd4c>
  43f694:	add	x11, x11, #0x1
  43f698:	cmp	x11, x6
  43f69c:	b.cs	43f6a8 <ferror@plt+0x3ce28>  // b.hs, b.nlast
  43f6a0:	ubfiz	x8, x8, #1, #16
  43f6a4:	ldrh	w8, [x20, x8]
  43f6a8:	mov	w0, w9
  43f6ac:	tst	w9, w1
  43f6b0:	b.eq	43f714 <ferror@plt+0x3ce94>  // b.none
  43f6b4:	nop
  43f6b8:	lsr	w0, w0, #1
  43f6bc:	tst	w0, w1
  43f6c0:	b.ne	43f6b8 <ferror@plt+0x3ce38>  // b.any
  43f6c4:	cbnz	w0, 43f714 <ferror@plt+0x3ce94>
  43f6c8:	mov	w1, #0x0                   	// #0
  43f6cc:	cmp	x11, x6
  43f6d0:	b.eq	43f520 <ferror@plt+0x3cca0>  // b.none
  43f6d4:	tst	w8, #0xfe00
  43f6d8:	b.eq	43f654 <ferror@plt+0x3cdd4>  // b.none
  43f6dc:	b	43f5e0 <ferror@plt+0x3cd60>
  43f6e0:	add	x30, sp, #0x70
  43f6e4:	add	x18, sp, #0x40
  43f6e8:	mov	x6, #0x7                   	// #7
  43f6ec:	mov	x11, #0x0                   	// #0
  43f6f0:	mov	w9, #0x1                   	// #1
  43f6f4:	lsl	x0, x6, #1
  43f6f8:	add	x1, x19, x0
  43f6fc:	ldrh	w8, [x1, #16]
  43f700:	cbnz	w8, 43f724 <ferror@plt+0x3cea4>
  43f704:	subs	x6, x6, #0x1
  43f708:	b.ne	43f6f4 <ferror@plt+0x3ce74>  // b.any
  43f70c:	mov	w0, #0x1                   	// #1
  43f710:	b	43f5e4 <ferror@plt+0x3cd64>
  43f714:	sub	w2, w0, #0x1
  43f718:	and	w1, w2, w1
  43f71c:	add	w1, w0, w1
  43f720:	b	43f6cc <ferror@plt+0x3ce4c>
  43f724:	add	x1, x0, x30
  43f728:	add	x0, x0, x18
  43f72c:	ubfiz	w13, w6, #9, #7
  43f730:	lsl	w5, w9, w6
  43f734:	add	w12, w13, #0x1, lsl #12
  43f738:	add	w10, w6, #0x7
  43f73c:	ldrh	w15, [x1, #16]
  43f740:	and	x8, x8, #0xffff
  43f744:	ldurh	w7, [x0, #-2]
  43f748:	and	w12, w12, #0xffff
  43f74c:	stp	x21, x22, [sp, #32]
  43f750:	sxtw	x22, w5
  43f754:	mov	w21, w6
  43f758:	mov	w5, w5
  43f75c:	lsl	w10, w9, w10
  43f760:	mov	x17, #0x0                   	// #0
  43f764:	mov	x14, #0x0                   	// #0
  43f768:	mov	x16, #0x0                   	// #0
  43f76c:	stp	x23, x24, [sp, #48]
  43f770:	mov	x24, #0x100                 	// #256
  43f774:	mov	w2, w17
  43f778:	cmp	x24, w7, uxtb
  43f77c:	and	x1, x7, #0xff
  43f780:	b.eq	43f7b4 <ferror@plt+0x3cf34>  // b.none
  43f784:	lsl	x2, x1, #1
  43f788:	ldrh	w0, [x3, x2]
  43f78c:	cbnz	w0, 43f840 <ferror@plt+0x3cfc0>
  43f790:	tst	x11, #0xfffffffffffffe00
  43f794:	b.ne	43f7ec <ferror@plt+0x3cf6c>  // b.any
  43f798:	add	w0, w12, w11
  43f79c:	mov	x14, x11
  43f7a0:	mov	x24, x1
  43f7a4:	add	x11, x11, x22
  43f7a8:	mov	x17, x6
  43f7ac:	strh	w0, [x3, x2]
  43f7b0:	mov	w2, w21
  43f7b4:	lsr	w0, w7, #8
  43f7b8:	add	x1, x3, x14, lsl #1
  43f7bc:	lsl	w2, w9, w2
  43f7c0:	add	x1, x1, #0x200
  43f7c4:	cmp	x2, x0
  43f7c8:	orr	w23, w13, w15
  43f7cc:	b.hi	43f7e4 <ferror@plt+0x3cf64>  // b.pmore
  43f7d0:	b	43f7f8 <ferror@plt+0x3cf78>
  43f7d4:	strh	w23, [x1, x0, lsl #1]
  43f7d8:	add	x0, x0, x5
  43f7dc:	cmp	x2, x0
  43f7e0:	b.ls	43f7f8 <ferror@plt+0x3cf78>  // b.plast
  43f7e4:	ldrh	w4, [x1, x0, lsl #1]
  43f7e8:	cbz	w4, 43f7d4 <ferror@plt+0x3cf54>
  43f7ec:	ldp	x21, x22, [sp, #32]
  43f7f0:	ldp	x23, x24, [sp, #48]
  43f7f4:	b	43f5e0 <ferror@plt+0x3cd60>
  43f7f8:	add	x16, x16, #0x1
  43f7fc:	cmp	x8, x16
  43f800:	b.ls	43f80c <ferror@plt+0x3cf8c>  // b.plast
  43f804:	ubfiz	x15, x15, #1, #16
  43f808:	ldrh	w15, [x20, x15]
  43f80c:	mov	w0, w10
  43f810:	tst	w10, w7
  43f814:	b.eq	43f860 <ferror@plt+0x3cfe0>  // b.none
  43f818:	lsr	w0, w0, #1
  43f81c:	tst	w0, w7
  43f820:	b.ne	43f818 <ferror@plt+0x3cf98>  // b.any
  43f824:	cbnz	w0, 43f860 <ferror@plt+0x3cfe0>
  43f828:	mov	w7, #0x0                   	// #0
  43f82c:	cmp	x8, x16
  43f830:	b.ne	43f774 <ferror@plt+0x3cef4>  // b.any
  43f834:	ldp	x21, x22, [sp, #32]
  43f838:	ldp	x23, x24, [sp, #48]
  43f83c:	b	43f704 <ferror@plt+0x3ce84>
  43f840:	tbz	w0, #12, 43f7ec <ferror@plt+0x3cf6c>
  43f844:	ubfx	x17, x0, #9, #3
  43f848:	and	x14, x0, #0x1ff
  43f84c:	cmp	x17, x6
  43f850:	mov	x2, x17
  43f854:	b.cc	43f7ec <ferror@plt+0x3cf6c>  // b.lo, b.ul, b.last
  43f858:	mov	x24, x1
  43f85c:	b	43f7b4 <ferror@plt+0x3cf34>
  43f860:	sub	w1, w0, #0x1
  43f864:	and	w7, w1, w7
  43f868:	add	w7, w0, w7
  43f86c:	b	43f82c <ferror@plt+0x3cfac>
  43f870:	mov	x10, x0
  43f874:	mov	x11, x2
  43f878:	mov	x0, x4
  43f87c:	ldr	w2, [x10, #8]
  43f880:	cbnz	w2, 43f908 <ferror@plt+0x3d088>
  43f884:	ldr	x2, [x10, #48]
  43f888:	cbz	x2, 43f8ec <ferror@plt+0x3d06c>
  43f88c:	nop
  43f890:	ldp	x9, x8, [x2, #8]
  43f894:	mov	x7, #0x0                   	// #0
  43f898:	add	x3, x8, x7
  43f89c:	cmp	x8, x7
  43f8a0:	and	x5, x3, #0xfffffffffffffffe
  43f8a4:	b.ls	43f8e4 <ferror@plt+0x3d064>  // b.plast
  43f8a8:	lsr	x3, x3, #1
  43f8ac:	add	x5, x5, x3
  43f8b0:	add	x5, x9, x5, lsl #3
  43f8b4:	ldr	x6, [x5, #8]
  43f8b8:	cmp	x6, x1
  43f8bc:	b.hi	43f900 <ferror@plt+0x3d080>  // b.pmore
  43f8c0:	ldr	x4, [x5, #16]
  43f8c4:	add	x7, x3, #0x1
  43f8c8:	add	x3, x6, x4
  43f8cc:	cmp	x3, x1
  43f8d0:	b.ls	43f898 <ferror@plt+0x3d018>  // b.plast
  43f8d4:	ldr	x2, [x5]
  43f8d8:	mov	x3, x6
  43f8dc:	mov	x16, x11
  43f8e0:	br	x16
  43f8e4:	ldr	x2, [x2]
  43f8e8:	cbnz	x2, 43f890 <ferror@plt+0x3d010>
  43f8ec:	mov	x16, x11
  43f8f0:	mov	x4, #0x0                   	// #0
  43f8f4:	mov	x3, #0x0                   	// #0
  43f8f8:	mov	x2, #0x0                   	// #0
  43f8fc:	br	x16
  43f900:	mov	x8, x3
  43f904:	b	43f898 <ferror@plt+0x3d018>
  43f908:	add	x10, x10, #0x30
  43f90c:	nop
  43f910:	ldar	x10, [x10]
  43f914:	cbz	x10, 43f8ec <ferror@plt+0x3d06c>
  43f918:	ldp	x9, x8, [x10, #8]
  43f91c:	mov	x7, #0x0                   	// #0
  43f920:	add	x3, x8, x7
  43f924:	cmp	x8, x7
  43f928:	and	x5, x3, #0xfffffffffffffffe
  43f92c:	b.ls	43f910 <ferror@plt+0x3d090>  // b.plast
  43f930:	lsr	x3, x3, #1
  43f934:	add	x5, x5, x3
  43f938:	add	x5, x9, x5, lsl #3
  43f93c:	ldr	x6, [x5, #8]
  43f940:	cmp	x6, x1
  43f944:	b.hi	43f96c <ferror@plt+0x3d0ec>  // b.pmore
  43f948:	ldr	x4, [x5, #16]
  43f94c:	add	x7, x3, #0x1
  43f950:	add	x3, x6, x4
  43f954:	cmp	x3, x1
  43f958:	b.ls	43f920 <ferror@plt+0x3d0a0>  // b.plast
  43f95c:	ldr	x2, [x5]
  43f960:	mov	x3, x6
  43f964:	mov	x16, x11
  43f968:	br	x16
  43f96c:	mov	x8, x3
  43f970:	b	43f920 <ferror@plt+0x3d0a0>
  43f974:	nop
  43f978:	stp	x29, x30, [sp, #-144]!
  43f97c:	mov	x29, sp
  43f980:	stp	x27, x28, [sp, #80]
  43f984:	add	x28, x2, x4
  43f988:	mov	x27, x5
  43f98c:	stp	x19, x20, [sp, #16]
  43f990:	mov	x20, x6
  43f994:	stp	x21, x22, [sp, #32]
  43f998:	mov	x22, x2
  43f99c:	mov	x21, x7
  43f9a0:	stp	x23, x24, [sp, #48]
  43f9a4:	mov	x23, x0
  43f9a8:	mov	x0, x5
  43f9ac:	stp	x25, x26, [sp, #64]
  43f9b0:	mov	x25, x4
  43f9b4:	stp	x3, x1, [sp, #112]
  43f9b8:	bl	402270 <strlen@plt>
  43f9bc:	mov	x24, x0
  43f9c0:	add	x0, x28, x0
  43f9c4:	mov	x3, x21
  43f9c8:	add	x26, x0, #0x1
  43f9cc:	mov	x2, x20
  43f9d0:	mov	x1, x26
  43f9d4:	str	x0, [sp, #104]
  43f9d8:	mov	x0, x23
  43f9dc:	bl	43e8a8 <ferror@plt+0x3c028>
  43f9e0:	cbz	x0, 43fa70 <ferror@plt+0x3d1f0>
  43f9e4:	ldr	x8, [sp, #120]
  43f9e8:	mov	x19, x0
  43f9ec:	mov	x2, x22
  43f9f0:	mov	x1, x8
  43f9f4:	bl	402220 <memcpy@plt>
  43f9f8:	ldr	x1, [sp, #112]
  43f9fc:	mov	x2, x25
  43fa00:	add	x0, x19, x22
  43fa04:	bl	402220 <memcpy@plt>
  43fa08:	mov	x2, x24
  43fa0c:	mov	x1, x27
  43fa10:	add	x0, x19, x28
  43fa14:	bl	402220 <memcpy@plt>
  43fa18:	ldr	x0, [sp, #104]
  43fa1c:	add	x3, sp, #0x8c
  43fa20:	mov	x2, x21
  43fa24:	mov	x1, x20
  43fa28:	strb	wzr, [x19, x0]
  43fa2c:	mov	x0, x19
  43fa30:	bl	43f060 <ferror@plt+0x3c7e0>
  43fa34:	mov	w22, w0
  43fa38:	mov	x4, x21
  43fa3c:	mov	x3, x20
  43fa40:	mov	x2, x26
  43fa44:	mov	x1, x19
  43fa48:	mov	x0, x23
  43fa4c:	bl	43e770 <ferror@plt+0x3bef0>
  43fa50:	mov	w0, w22
  43fa54:	ldp	x19, x20, [sp, #16]
  43fa58:	ldp	x21, x22, [sp, #32]
  43fa5c:	ldp	x23, x24, [sp, #48]
  43fa60:	ldp	x25, x26, [sp, #64]
  43fa64:	ldp	x27, x28, [sp, #80]
  43fa68:	ldp	x29, x30, [sp], #144
  43fa6c:	ret
  43fa70:	mov	w22, #0xffffffff            	// #-1
  43fa74:	b	43fa50 <ferror@plt+0x3d1d0>
  43fa78:	stp	x29, x30, [sp, #-256]!
  43fa7c:	mov	x29, sp
  43fa80:	stp	x19, x20, [sp, #16]
  43fa84:	mov	x20, x0
  43fa88:	mov	x19, x1
  43fa8c:	stp	x21, x22, [sp, #32]
  43fa90:	mov	x21, x3
  43fa94:	mov	x22, x4
  43fa98:	stp	x27, x28, [sp, #80]
  43fa9c:	add	x27, sp, #0x80
  43faa0:	stp	x23, x24, [sp, #48]
  43faa4:	mov	x24, #0x0                   	// #0
  43faa8:	stp	x25, x26, [sp, #64]
  43faac:	mov	x25, #0x0                   	// #0
  43fab0:	str	x2, [sp, #104]
  43fab4:	mov	x2, x27
  43fab8:	mov	x1, x19
  43fabc:	mov	w0, #0x0                   	// #0
  43fac0:	bl	4026f0 <__lxstat@plt>
  43fac4:	tbnz	w0, #31, 43fb50 <ferror@plt+0x3d2d0>
  43fac8:	ldr	w0, [sp, #144]
  43facc:	and	w0, w0, #0xf000
  43fad0:	cmp	w0, #0xa, lsl #12
  43fad4:	b.ne	43fb50 <ferror@plt+0x3d2d0>  // b.any
  43fad8:	mov	x28, #0x80                  	// #128
  43fadc:	b	43fb04 <ferror@plt+0x3d284>
  43fae0:	cmp	x1, x0
  43fae4:	b.hi	43fbc4 <ferror@plt+0x3d344>  // b.pmore
  43fae8:	mov	x2, x28
  43faec:	mov	x1, x26
  43faf0:	mov	x4, x22
  43faf4:	mov	x3, x21
  43faf8:	mov	x0, x20
  43fafc:	lsl	x28, x28, #1
  43fb00:	bl	43e770 <ferror@plt+0x3bef0>
  43fb04:	mov	x2, x21
  43fb08:	mov	x3, x22
  43fb0c:	mov	x1, x28
  43fb10:	mov	x0, x20
  43fb14:	bl	43e8a8 <ferror@plt+0x3c028>
  43fb18:	mov	x26, x0
  43fb1c:	mov	x2, x28
  43fb20:	mov	x0, x19
  43fb24:	cbz	x26, 43fb50 <ferror@plt+0x3d2d0>
  43fb28:	mov	x1, x26
  43fb2c:	bl	4022f0 <readlink@plt>
  43fb30:	sub	x1, x28, #0x1
  43fb34:	tbz	x0, #63, 43fae0 <ferror@plt+0x3d260>
  43fb38:	mov	x2, x28
  43fb3c:	mov	x1, x26
  43fb40:	mov	x4, x22
  43fb44:	mov	x3, x21
  43fb48:	mov	x0, x20
  43fb4c:	bl	43e770 <ferror@plt+0x3bef0>
  43fb50:	mov	x0, x19
  43fb54:	mov	w1, #0x2f                  	// #47
  43fb58:	bl	402500 <strrchr@plt>
  43fb5c:	cbz	x0, 43fd40 <ferror@plt+0x3d4c0>
  43fb60:	add	x0, x0, #0x1
  43fb64:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  43fb68:	sub	x23, x0, x19
  43fb6c:	ldr	x5, [sp, #104]
  43fb70:	add	x3, x3, #0x148
  43fb74:	mov	x7, x22
  43fb78:	mov	x6, x21
  43fb7c:	mov	x2, x23
  43fb80:	mov	x1, x19
  43fb84:	mov	x0, x20
  43fb88:	mov	x4, #0x0                   	// #0
  43fb8c:	bl	43f978 <ferror@plt+0x3d0f8>
  43fb90:	mov	w27, w0
  43fb94:	tbnz	w0, #31, 43fc9c <ferror@plt+0x3d41c>
  43fb98:	cmp	x24, #0x0
  43fb9c:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  43fba0:	b.ne	43fd08 <ferror@plt+0x3d488>  // b.any
  43fba4:	mov	w0, w27
  43fba8:	ldp	x19, x20, [sp, #16]
  43fbac:	ldp	x21, x22, [sp, #32]
  43fbb0:	ldp	x23, x24, [sp, #48]
  43fbb4:	ldp	x25, x26, [sp, #64]
  43fbb8:	ldp	x27, x28, [sp, #80]
  43fbbc:	ldp	x29, x30, [sp], #256
  43fbc0:	ret
  43fbc4:	strb	wzr, [x26, x0]
  43fbc8:	ldrb	w0, [x26]
  43fbcc:	cmp	w0, #0x2f
  43fbd0:	b.eq	43fc70 <ferror@plt+0x3d3f0>  // b.none
  43fbd4:	mov	x0, x19
  43fbd8:	mov	w1, #0x2f                  	// #47
  43fbdc:	bl	402500 <strrchr@plt>
  43fbe0:	cbz	x0, 43fc70 <ferror@plt+0x3d3f0>
  43fbe4:	add	x23, x0, #0x1
  43fbe8:	mov	x0, x26
  43fbec:	sub	x23, x23, x19
  43fbf0:	bl	402270 <strlen@plt>
  43fbf4:	add	x1, x23, #0x1
  43fbf8:	mov	x3, x22
  43fbfc:	add	x0, x1, x0
  43fc00:	mov	x2, x21
  43fc04:	mov	x1, x0
  43fc08:	str	x0, [sp, #112]
  43fc0c:	mov	x0, x20
  43fc10:	bl	43e8a8 <ferror@plt+0x3c028>
  43fc14:	str	x0, [sp, #120]
  43fc18:	cbz	x0, 43fd50 <ferror@plt+0x3d4d0>
  43fc1c:	mov	x1, x19
  43fc20:	mov	x2, x23
  43fc24:	bl	402220 <memcpy@plt>
  43fc28:	ldr	x3, [sp, #120]
  43fc2c:	mov	x0, x26
  43fc30:	add	x23, x3, x23
  43fc34:	bl	402270 <strlen@plt>
  43fc38:	mov	x19, x0
  43fc3c:	mov	x1, x26
  43fc40:	mov	x2, x19
  43fc44:	mov	x0, x23
  43fc48:	bl	402220 <memcpy@plt>
  43fc4c:	mov	x2, x28
  43fc50:	strb	wzr, [x23, x19]
  43fc54:	ldp	x28, x3, [sp, #112]
  43fc58:	mov	x1, x26
  43fc5c:	mov	x4, x22
  43fc60:	mov	x0, x20
  43fc64:	mov	x26, x3
  43fc68:	mov	x3, x21
  43fc6c:	bl	43e770 <ferror@plt+0x3bef0>
  43fc70:	cbz	x24, 43fc8c <ferror@plt+0x3d40c>
  43fc74:	mov	x2, x25
  43fc78:	mov	x1, x24
  43fc7c:	mov	x4, x22
  43fc80:	mov	x3, x21
  43fc84:	mov	x0, x20
  43fc88:	bl	43e770 <ferror@plt+0x3bef0>
  43fc8c:	mov	x24, x26
  43fc90:	mov	x25, x28
  43fc94:	mov	x19, x26
  43fc98:	b	43fab4 <ferror@plt+0x3d234>
  43fc9c:	ldr	x5, [sp, #104]
  43fca0:	mov	x7, x22
  43fca4:	mov	x6, x21
  43fca8:	mov	x2, x23
  43fcac:	mov	x1, x19
  43fcb0:	mov	x0, x20
  43fcb4:	adrp	x3, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43fcb8:	mov	x4, #0x7                   	// #7
  43fcbc:	add	x3, x3, #0x800
  43fcc0:	bl	43f978 <ferror@plt+0x3d0f8>
  43fcc4:	mov	w27, w0
  43fcc8:	tbz	w0, #31, 43fb98 <ferror@plt+0x3d318>
  43fccc:	ldr	x5, [sp, #104]
  43fcd0:	mov	x4, x23
  43fcd4:	mov	x3, x19
  43fcd8:	mov	x7, x22
  43fcdc:	mov	x6, x21
  43fce0:	mov	x0, x20
  43fce4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43fce8:	mov	x2, #0xf                   	// #15
  43fcec:	add	x1, x1, #0x808
  43fcf0:	bl	43f978 <ferror@plt+0x3d0f8>
  43fcf4:	cmp	w0, #0x0
  43fcf8:	csinv	w27, w0, wzr, ge  // ge = tcont
  43fcfc:	cmp	x24, #0x0
  43fd00:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  43fd04:	b.eq	43fba4 <ferror@plt+0x3d324>  // b.none
  43fd08:	mov	x4, x22
  43fd0c:	mov	x3, x21
  43fd10:	mov	x2, x25
  43fd14:	mov	x1, x24
  43fd18:	mov	x0, x20
  43fd1c:	bl	43e770 <ferror@plt+0x3bef0>
  43fd20:	mov	w0, w27
  43fd24:	ldp	x19, x20, [sp, #16]
  43fd28:	ldp	x21, x22, [sp, #32]
  43fd2c:	ldp	x23, x24, [sp, #48]
  43fd30:	ldp	x25, x26, [sp, #64]
  43fd34:	ldp	x27, x28, [sp, #80]
  43fd38:	ldp	x29, x30, [sp], #256
  43fd3c:	ret
  43fd40:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x116d8>
  43fd44:	mov	x23, #0x0                   	// #0
  43fd48:	add	x19, x3, #0x148
  43fd4c:	b	43fb6c <ferror@plt+0x3d2ec>
  43fd50:	mov	w27, #0xffffffff            	// #-1
  43fd54:	b	43fb98 <ferror@plt+0x3d318>
  43fd58:	stp	x29, x30, [sp, #-320]!
  43fd5c:	add	x18, x0, x1
  43fd60:	cmp	x1, #0x4
  43fd64:	mov	x29, sp
  43fd68:	stp	x19, x20, [sp, #16]
  43fd6c:	mov	x19, x0
  43fd70:	add	x0, x3, x4
  43fd74:	stp	x27, x28, [sp, #80]
  43fd78:	mov	x28, x3
  43fd7c:	str	x0, [sp, #96]
  43fd80:	b.le	440afc <ferror@plt+0x3e27c>
  43fd84:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  43fd88:	mov	x28, x18
  43fd8c:	add	x0, x0, #0xa60
  43fd90:	stp	x23, x24, [sp, #48]
  43fd94:	mov	x23, x2
  43fd98:	stp	x25, x26, [sp, #64]
  43fd9c:	mov	x25, x3
  43fda0:	str	x3, [sp, #104]
  43fda4:	str	x0, [sp, #120]
  43fda8:	add	x0, x0, #0x200
  43fdac:	str	x0, [sp, #128]
  43fdb0:	ldrb	w0, [x19]
  43fdb4:	and	w1, w0, #0xf
  43fdb8:	cmp	w1, #0x8
  43fdbc:	b.ne	440270 <ferror@plt+0x3d9f0>  // b.any
  43fdc0:	cmp	w0, #0x7f
  43fdc4:	b.hi	440270 <ferror@plt+0x3d9f0>  // b.pmore
  43fdc8:	ldrb	w1, [x19, #1]
  43fdcc:	ldrh	w0, [x19]
  43fdd0:	rev16	w0, w0
  43fdd4:	tbnz	w1, #5, 440270 <ferror@plt+0x3d9f0>
  43fdd8:	mov	x1, #0x4211                	// #16913
  43fddc:	and	x0, x0, #0xffff
  43fde0:	movk	x1, #0x2108, lsl #16
  43fde4:	movk	x1, #0x1084, lsl #32
  43fde8:	movk	x1, #0x842, lsl #48
  43fdec:	umulh	x2, x0, x1
  43fdf0:	sub	x1, x0, x2
  43fdf4:	add	x1, x2, x1, lsr #1
  43fdf8:	lsr	x1, x1, #4
  43fdfc:	lsl	x2, x1, #5
  43fe00:	sub	x1, x2, x1
  43fe04:	cmp	x0, x1
  43fe08:	b.ne	440270 <ferror@plt+0x3d9f0>  // b.any
  43fe0c:	stp	x21, x22, [sp, #32]
  43fe10:	add	x19, x19, #0x2
  43fe14:	ands	x22, x19, #0x3
  43fe18:	b.eq	44079c <ferror@plt+0x3df1c>  // b.none
  43fe1c:	mov	x22, #0x0                   	// #0
  43fe20:	mov	w0, #0x0                   	// #0
  43fe24:	nop
  43fe28:	ldrb	w1, [x19], #1
  43fe2c:	lsl	x1, x1, x0
  43fe30:	tst	x19, #0x3
  43fe34:	orr	x22, x22, x1
  43fe38:	add	w0, w0, #0x8
  43fe3c:	b.ne	43fe28 <ferror@plt+0x3d5a8>  // b.any
  43fe40:	add	x1, sp, #0x100
  43fe44:	str	x1, [sp, #112]
  43fe48:	cmp	w0, #0xe
  43fe4c:	b.hi	43fe70 <ferror@plt+0x3d5f0>  // b.pmore
  43fe50:	sub	x1, x28, x19
  43fe54:	cmp	x1, #0x3
  43fe58:	b.le	44026c <ferror@plt+0x3d9ec>
  43fe5c:	ldr	w1, [x19], #4
  43fe60:	lsl	x1, x1, x0
  43fe64:	add	w0, w0, #0x20
  43fe68:	prfm	pldl1strm, [x19]
  43fe6c:	orr	x22, x22, x1
  43fe70:	ubfx	w1, w22, #1, #2
  43fe74:	sub	w20, w0, #0x3
  43fe78:	cmp	w1, #0x3
  43fe7c:	b.eq	44026c <ferror@plt+0x3d9ec>  // b.none
  43fe80:	cbz	w1, 44037c <ferror@plt+0x3dafc>
  43fe84:	cmp	w1, #0x1
  43fe88:	lsr	x21, x22, #3
  43fe8c:	b.eq	440494 <ferror@plt+0x3dc14>  // b.none
  43fe90:	cmp	w20, #0xe
  43fe94:	b.hi	43feb8 <ferror@plt+0x3d638>  // b.pmore
  43fe98:	sub	x1, x28, x19
  43fe9c:	cmp	x1, #0x3
  43fea0:	b.le	44035c <ferror@plt+0x3dadc>
  43fea4:	ldr	w1, [x19], #4
  43fea8:	lsl	x1, x1, x20
  43feac:	add	w20, w0, #0x1d
  43feb0:	prfm	pldl1strm, [x19]
  43feb4:	orr	x21, x21, x1
  43feb8:	and	w26, w21, #0x1f
  43febc:	ubfx	w27, w21, #5, #5
  43fec0:	add	w26, w26, #0x101
  43fec4:	add	w27, w27, #0x1
  43fec8:	cmp	w26, #0x11e
  43fecc:	ubfx	w1, w21, #10, #4
  43fed0:	ccmp	w27, #0x1e, #0x2, ls  // ls = plast
  43fed4:	add	w1, w1, #0x4
  43fed8:	lsr	x2, x21, #14
  43fedc:	sub	w5, w20, #0xe
  43fee0:	b.hi	44035c <ferror@plt+0x3dadc>  // b.pmore
  43fee4:	stp	xzr, xzr, [sp, #200]
  43fee8:	cmp	w5, #0xe
  43feec:	add	x3, sp, #0xc8
  43fef0:	strh	wzr, [sp, #216]
  43fef4:	strb	wzr, [sp, #218]
  43fef8:	b.hi	43ff1c <ferror@plt+0x3d69c>  // b.pmore
  43fefc:	sub	x0, x28, x19
  43ff00:	cmp	x0, #0x3
  43ff04:	b.le	44035c <ferror@plt+0x3dadc>
  43ff08:	ldr	w0, [x19], #4
  43ff0c:	lsl	x0, x0, x5
  43ff10:	add	w5, w20, #0x12
  43ff14:	prfm	pldl1strm, [x19]
  43ff18:	orr	x2, x2, x0
  43ff1c:	and	w0, w2, #0x7
  43ff20:	ubfx	w7, w2, #3, #3
  43ff24:	ubfx	w6, w2, #6, #3
  43ff28:	strb	w0, [sp, #216]
  43ff2c:	ubfx	w0, w2, #9, #3
  43ff30:	strb	w0, [sp, #200]
  43ff34:	strb	w7, [sp, #217]
  43ff38:	sub	w20, w5, #0xc
  43ff3c:	strb	w6, [sp, #218]
  43ff40:	cmp	w1, #0x4
  43ff44:	lsr	x21, x2, #12
  43ff48:	b.eq	4400f8 <ferror@plt+0x3d878>  // b.none
  43ff4c:	and	w21, w21, #0x7
  43ff50:	strb	w21, [sp, #208]
  43ff54:	cmp	w1, #0x5
  43ff58:	lsr	x21, x2, #15
  43ff5c:	sub	w20, w5, #0xf
  43ff60:	b.eq	4400f8 <ferror@plt+0x3d878>  // b.none
  43ff64:	cmp	w20, #0xe
  43ff68:	b.hi	43ff8c <ferror@plt+0x3d70c>  // b.pmore
  43ff6c:	sub	x2, x28, x19
  43ff70:	cmp	x2, #0x3
  43ff74:	b.le	44035c <ferror@plt+0x3dadc>
  43ff78:	ldr	w2, [x19], #4
  43ff7c:	lsl	x2, x2, x20
  43ff80:	add	w20, w5, #0x11
  43ff84:	prfm	pldl1strm, [x19]
  43ff88:	orr	x21, x21, x2
  43ff8c:	and	w2, w21, #0x7
  43ff90:	strb	w2, [sp, #207]
  43ff94:	cmp	w1, #0x6
  43ff98:	lsr	x2, x21, #3
  43ff9c:	b.eq	4407cc <ferror@plt+0x3df4c>  // b.none
  43ffa0:	and	w2, w2, #0x7
  43ffa4:	strb	w2, [sp, #209]
  43ffa8:	cmp	w1, #0x7
  43ffac:	lsr	x2, x21, #6
  43ffb0:	b.eq	440828 <ferror@plt+0x3dfa8>  // b.none
  43ffb4:	and	w2, w2, #0x7
  43ffb8:	strb	w2, [sp, #206]
  43ffbc:	cmp	w1, #0x8
  43ffc0:	lsr	x2, x21, #9
  43ffc4:	b.eq	440ae0 <ferror@plt+0x3e260>  // b.none
  43ffc8:	and	w2, w2, #0x7
  43ffcc:	strb	w2, [sp, #210]
  43ffd0:	cmp	w1, #0x9
  43ffd4:	lsr	x2, x21, #12
  43ffd8:	b.eq	4407a4 <ferror@plt+0x3df24>  // b.none
  43ffdc:	and	w2, w2, #0x7
  43ffe0:	strb	w2, [sp, #205]
  43ffe4:	lsr	x21, x21, #15
  43ffe8:	cmp	w1, #0xa
  43ffec:	sub	w2, w20, #0xf
  43fff0:	b.eq	440b0c <ferror@plt+0x3e28c>  // b.none
  43fff4:	cmp	w2, #0xe
  43fff8:	b.hi	44001c <ferror@plt+0x3d79c>  // b.pmore
  43fffc:	sub	x5, x28, x19
  440000:	cmp	x5, #0x3
  440004:	b.le	44035c <ferror@plt+0x3dadc>
  440008:	ldr	w5, [x19], #4
  44000c:	lsl	x5, x5, x2
  440010:	add	w2, w20, #0x11
  440014:	prfm	pldl1strm, [x19]
  440018:	orr	x21, x21, x5
  44001c:	and	w5, w21, #0x7
  440020:	strb	w5, [sp, #211]
  440024:	cmp	w1, #0xb
  440028:	lsr	x5, x21, #3
  44002c:	b.eq	440b14 <ferror@plt+0x3e294>  // b.none
  440030:	and	w5, w5, #0x7
  440034:	strb	w5, [sp, #204]
  440038:	cmp	w1, #0xc
  44003c:	lsr	x5, x21, #6
  440040:	b.eq	440b34 <ferror@plt+0x3e2b4>  // b.none
  440044:	and	w5, w5, #0x7
  440048:	strb	w5, [sp, #212]
  44004c:	cmp	w1, #0xd
  440050:	lsr	x5, x21, #9
  440054:	b.eq	440b40 <ferror@plt+0x3e2c0>  // b.none
  440058:	and	w5, w5, #0x7
  44005c:	strb	w5, [sp, #203]
  440060:	cmp	w1, #0xe
  440064:	lsr	x5, x21, #12
  440068:	b.eq	440b4c <ferror@plt+0x3e2cc>  // b.none
  44006c:	and	w5, w5, #0x7
  440070:	strb	w5, [sp, #213]
  440074:	lsr	x21, x21, #15
  440078:	cmp	w1, #0xf
  44007c:	sub	w20, w2, #0xf
  440080:	b.eq	4400f8 <ferror@plt+0x3d878>  // b.none
  440084:	cmp	w20, #0xe
  440088:	b.hi	4400ac <ferror@plt+0x3d82c>  // b.pmore
  44008c:	sub	x5, x28, x19
  440090:	cmp	x5, #0x3
  440094:	b.le	44035c <ferror@plt+0x3dadc>
  440098:	ldr	w5, [x19], #4
  44009c:	lsl	x5, x5, x20
  4400a0:	add	w20, w2, #0x11
  4400a4:	prfm	pldl1strm, [x19]
  4400a8:	orr	x21, x21, x5
  4400ac:	and	w2, w21, #0x7
  4400b0:	strb	w2, [sp, #202]
  4400b4:	cmp	w1, #0x10
  4400b8:	lsr	x2, x21, #3
  4400bc:	b.eq	4407cc <ferror@plt+0x3df4c>  // b.none
  4400c0:	and	w2, w2, #0x7
  4400c4:	strb	w2, [sp, #214]
  4400c8:	cmp	w1, #0x11
  4400cc:	lsr	x2, x21, #6
  4400d0:	b.eq	440828 <ferror@plt+0x3dfa8>  // b.none
  4400d4:	and	w2, w2, #0x7
  4400d8:	strb	w2, [sp, #201]
  4400dc:	cmp	w1, #0x12
  4400e0:	lsr	x1, x21, #9
  4400e4:	b.eq	4407b0 <ferror@plt+0x3df30>  // b.none
  4400e8:	lsr	x21, x21, #12
  4400ec:	sub	w20, w20, #0xc
  4400f0:	and	w1, w1, #0x7
  4400f4:	strb	w1, [sp, #215]
  4400f8:	add	x4, x23, #0x1, lsl #12
  4400fc:	add	x24, sp, #0xe0
  440100:	add	x6, sp, #0x120
  440104:	mov	x1, #0x0                   	// #0
  440108:	stp	xzr, xzr, [sp, #224]
  44010c:	stp	xzr, xzr, [sp, #240]
  440110:	ldr	x7, [sp, #112]
  440114:	b	44014c <ferror@plt+0x3d8cc>
  440118:	strh	w2, [x7, x0]
  44011c:	add	x1, x1, #0x1
  440120:	strh	w2, [x6, x0]
  440124:	cmp	x1, #0x13
  440128:	ldrb	w0, [x3]
  44012c:	lsl	x0, x0, #1
  440130:	ldrh	w2, [x24, x0]
  440134:	add	w2, w2, #0x1
  440138:	strh	w2, [x24, x0]
  44013c:	b.eq	440188 <ferror@plt+0x3d908>  // b.none
  440140:	ldrb	w0, [x3, #1]!
  440144:	cmp	w0, #0xf
  440148:	b.hi	44035c <ferror@plt+0x3dadc>  // b.pmore
  44014c:	sbfiz	x0, x0, #1, #32
  440150:	and	w2, w1, #0xffff
  440154:	ldrh	w5, [x24, x0]
  440158:	cbz	w5, 440118 <ferror@plt+0x3d898>
  44015c:	ldrh	w5, [x6, x0]
  440160:	add	x1, x1, #0x1
  440164:	ldrb	w0, [x3]
  440168:	cmp	x1, #0x13
  44016c:	strh	w2, [x4, x5, lsl #1]
  440170:	strh	w2, [x6, x0, lsl #1]
  440174:	lsl	x0, x0, #1
  440178:	ldrh	w2, [x24, x0]
  44017c:	add	w2, w2, #0x1
  440180:	strh	w2, [x24, x0]
  440184:	b.ne	440140 <ferror@plt+0x3d8c0>  // b.any
  440188:	mov	w1, #0x0                   	// #0
  44018c:	mov	x0, x23
  440190:	mov	x2, #0x800                 	// #2048
  440194:	str	x4, [sp, #136]
  440198:	bl	402440 <memset@plt>
  44019c:	ldr	x4, [sp, #136]
  4401a0:	mov	x5, #0x0                   	// #0
  4401a4:	mov	w1, #0x0                   	// #0
  4401a8:	mov	w9, #0x1                   	// #1
  4401ac:	lsl	x2, x5, #1
  4401b0:	add	x0, x24, x2
  4401b4:	ldrh	w0, [x0, #2]
  4401b8:	cbnz	w0, 44042c <ferror@plt+0x3dbac>
  4401bc:	add	x5, x5, #0x1
  4401c0:	cmp	x5, #0x8
  4401c4:	b.ne	4401ac <ferror@plt+0x3d92c>  // b.any
  4401c8:	mov	x8, x24
  4401cc:	add	x11, sp, #0xb8
  4401d0:	mov	x6, #0x9                   	// #9
  4401d4:	mov	w9, #0x1                   	// #1
  4401d8:	b	4401ec <ferror@plt+0x3d96c>
  4401dc:	add	x6, x6, #0x1
  4401e0:	add	x8, x8, #0x2
  4401e4:	cmp	x6, #0x10
  4401e8:	b.eq	440834 <ferror@plt+0x3dfb4>  // b.none
  4401ec:	ldrh	w7, [x8, #18]
  4401f0:	cbz	w7, 4401dc <ferror@plt+0x3d95c>
  4401f4:	add	x0, x11, x6, lsl #1
  4401f8:	sub	w10, w6, #0x1
  4401fc:	mov	x5, #0x0                   	// #0
  440200:	mov	w3, #0x0                   	// #0
  440204:	sturh	w1, [x0, #-18]
  440208:	b	44021c <ferror@plt+0x3d99c>
  44020c:	add	w5, w3, #0x1
  440210:	mov	x3, x5
  440214:	cmp	x6, w5, uxtw
  440218:	b.ls	4407c4 <ferror@plt+0x3df44>  // b.plast
  44021c:	lsr	w0, w7, w3
  440220:	tbz	w0, #0, 44020c <ferror@plt+0x3d98c>
  440224:	sub	w0, w10, w3
  440228:	subs	x5, x6, x5
  44022c:	lsl	w0, w9, w0
  440230:	b.eq	440260 <ferror@plt+0x3d9e0>  // b.none
  440234:	tst	w0, w1
  440238:	b.eq	4407bc <ferror@plt+0x3df3c>  // b.none
  44023c:	mov	w2, #0x0                   	// #0
  440240:	b	44024c <ferror@plt+0x3d9cc>
  440244:	tst	w1, w0
  440248:	b.eq	4407bc <ferror@plt+0x3df3c>  // b.none
  44024c:	add	w2, w2, #0x1
  440250:	bic	w1, w1, w0
  440254:	lsr	w0, w0, #1
  440258:	cmp	x5, w2, uxtw
  44025c:	b.hi	440244 <ferror@plt+0x3d9c4>  // b.pmore
  440260:	lsl	w0, w9, w3
  440264:	bic	w7, w7, w0
  440268:	b	44020c <ferror@plt+0x3d98c>
  44026c:	ldp	x21, x22, [sp, #32]
  440270:	mov	w0, #0x0                   	// #0
  440274:	ldp	x23, x24, [sp, #48]
  440278:	ldp	x25, x26, [sp, #64]
  44027c:	ldp	x19, x20, [sp, #16]
  440280:	ldp	x27, x28, [sp, #80]
  440284:	ldp	x29, x30, [sp], #320
  440288:	ret
  44028c:	ldr	x1, [sp, #112]
  440290:	ubfiz	w14, w6, #9, #7
  440294:	ldr	x2, [sp, #136]
  440298:	add	x1, x0, x1
  44029c:	lsl	w5, w18, w6
  4402a0:	add	w11, w14, #0x1, lsl #12
  4402a4:	add	x0, x0, x2
  4402a8:	add	w10, w6, #0x7
  4402ac:	ldrh	w12, [x1, #16]
  4402b0:	and	x9, x9, #0xffff
  4402b4:	and	w11, w11, #0xffff
  4402b8:	lsl	w10, w18, w10
  4402bc:	ldurh	w7, [x0, #-2]
  4402c0:	sxtw	x0, w5
  4402c4:	mov	w5, w5
  4402c8:	mov	x17, #0x0                   	// #0
  4402cc:	mov	x15, #0x0                   	// #0
  4402d0:	mov	x16, #0x0                   	// #0
  4402d4:	mov	x13, #0x100                 	// #256
  4402d8:	str	x0, [sp, #144]
  4402dc:	str	w6, [sp, #152]
  4402e0:	mov	w2, w17
  4402e4:	cmp	x13, w7, uxtb
  4402e8:	and	x1, x7, #0xff
  4402ec:	b.eq	440324 <ferror@plt+0x3daa4>  // b.none
  4402f0:	lsl	x2, x1, #1
  4402f4:	ldrh	w0, [x23, x2]
  4402f8:	cbnz	w0, 440b98 <ferror@plt+0x3e318>
  4402fc:	tst	x30, #0xfffffffffffffe00
  440300:	b.ne	44035c <ferror@plt+0x3dadc>  // b.any
  440304:	mov	x13, x1
  440308:	add	w0, w11, w30
  44030c:	ldr	x1, [sp, #144]
  440310:	strh	w0, [x23, x2]
  440314:	ldr	w2, [sp, #152]
  440318:	mov	x15, x30
  44031c:	mov	x17, x6
  440320:	add	x30, x30, x1
  440324:	lsr	w0, w7, #8
  440328:	add	x1, x23, x15, lsl #1
  44032c:	lsl	w2, w18, w2
  440330:	add	x1, x1, #0x200
  440334:	cmp	x0, x2
  440338:	orr	w8, w14, w12
  44033c:	b.cc	440354 <ferror@plt+0x3dad4>  // b.lo, b.ul, b.last
  440340:	b	440b58 <ferror@plt+0x3e2d8>
  440344:	strh	w8, [x1, x0, lsl #1]
  440348:	add	x0, x0, x5
  44034c:	cmp	x0, x2
  440350:	b.cs	440b58 <ferror@plt+0x3e2d8>  // b.hs, b.nlast
  440354:	ldrh	w3, [x1, x0, lsl #1]
  440358:	cbz	w3, 440344 <ferror@plt+0x3dac4>
  44035c:	mov	w0, #0x0                   	// #0
  440360:	ldp	x19, x20, [sp, #16]
  440364:	ldp	x21, x22, [sp, #32]
  440368:	ldp	x23, x24, [sp, #48]
  44036c:	ldp	x25, x26, [sp, #64]
  440370:	ldp	x27, x28, [sp, #80]
  440374:	ldp	x29, x30, [sp], #320
  440378:	ret
  44037c:	sub	w0, w0, #0xc
  440380:	lsr	w0, w0, #3
  440384:	mvn	x5, x0
  440388:	add	x3, x19, x5
  44038c:	sub	x1, x28, x3
  440390:	cmp	x1, #0x3
  440394:	b.le	44026c <ferror@plt+0x3d9ec>
  440398:	ldrb	w6, [x3, #3]
  44039c:	sub	x0, x19, x0
  4403a0:	ldrb	w2, [x3, #2]
  4403a4:	add	x1, x0, #0x3
  4403a8:	ldrb	w3, [x3, #1]
  4403ac:	ldrb	w0, [x19, x5]
  4403b0:	bfi	w2, w6, #8, #24
  4403b4:	mvn	w2, w2
  4403b8:	bfi	w0, w3, #8, #24
  4403bc:	cmp	w0, w2, uxth
  4403c0:	b.ne	44026c <ferror@plt+0x3d9ec>  // b.any
  4403c4:	sub	x2, x28, x1
  4403c8:	cmp	w0, w2
  4403cc:	b.hi	44026c <ferror@plt+0x3d9ec>  // b.pmore
  4403d0:	ldr	x2, [sp, #96]
  4403d4:	sub	x2, x2, x25
  4403d8:	cmp	w0, w2
  4403dc:	b.hi	44026c <ferror@plt+0x3d9ec>  // b.pmore
  4403e0:	and	x20, x0, #0xffff
  4403e4:	mov	x0, x25
  4403e8:	add	x19, x1, x20
  4403ec:	mov	x2, x20
  4403f0:	bl	402220 <memcpy@plt>
  4403f4:	add	x25, x25, x20
  4403f8:	ands	x21, x19, #0x3
  4403fc:	mov	w0, #0x0                   	// #0
  440400:	b.eq	440420 <ferror@plt+0x3dba0>  // b.none
  440404:	mov	x21, #0x0                   	// #0
  440408:	ldrb	w1, [x19], #1
  44040c:	lsl	x1, x1, x0
  440410:	tst	x19, #0x3
  440414:	orr	x21, x21, x1
  440418:	add	w0, w0, #0x8
  44041c:	b.ne	440408 <ferror@plt+0x3db88>  // b.any
  440420:	tbnz	w22, #0, 440b20 <ferror@plt+0x3e2a0>
  440424:	mov	x22, x21
  440428:	b	43fe48 <ferror@plt+0x3d5c8>
  44042c:	add	w3, w5, #0x1
  440430:	lsl	w3, w9, w3
  440434:	cmp	w0, w3
  440438:	b.hi	44035c <ferror@plt+0x3dadc>  // b.pmore
  44043c:	ldr	x6, [sp, #112]
  440440:	add	x2, x2, x6
  440444:	and	x6, x0, #0xffff
  440448:	ldrh	w8, [x2, #2]
  44044c:	tst	w8, #0xfe00
  440450:	b.ne	44035c <ferror@plt+0x3dadc>  // b.any
  440454:	sxtw	x3, w3
  440458:	ubfiz	w12, w5, #9, #7
  44045c:	lsl	w10, w9, w5
  440460:	mov	x11, #0x0                   	// #0
  440464:	cmp	w1, #0xff
  440468:	orr	w7, w12, w8
  44046c:	mov	w0, w1
  440470:	b.ls	440488 <ferror@plt+0x3dc08>  // b.plast
  440474:	b	4407d8 <ferror@plt+0x3df58>
  440478:	strh	w7, [x23, x0, lsl #1]
  44047c:	add	x0, x0, x3
  440480:	cmp	x0, #0xff
  440484:	b.hi	4407d8 <ferror@plt+0x3df58>  // b.pmore
  440488:	ldrh	w2, [x23, x0, lsl #1]
  44048c:	cbz	w2, 440478 <ferror@plt+0x3dbf8>
  440490:	b	44035c <ferror@plt+0x3dadc>
  440494:	ldp	x0, x27, [sp, #120]
  440498:	str	x0, [sp, #144]
  44049c:	stp	x22, x23, [sp, #160]
  4404a0:	mov	x23, x27
  4404a4:	mov	x22, x28
  4404a8:	mov	x27, x19
  4404ac:	mov	w26, #0x1                   	// #1
  4404b0:	cmp	w20, #0xe
  4404b4:	b.hi	4404d8 <ferror@plt+0x3dc58>  // b.pmore
  4404b8:	sub	x0, x22, x27
  4404bc:	cmp	x0, #0x3
  4404c0:	b.le	44026c <ferror@plt+0x3d9ec>
  4404c4:	ldr	w0, [x27], #4
  4404c8:	lsl	x0, x0, x20
  4404cc:	add	w20, w20, #0x20
  4404d0:	prfm	pldl1strm, [x27]
  4404d4:	orr	x21, x21, x0
  4404d8:	and	x0, x21, #0xff
  4404dc:	ldrh	w1, [x23, x0, lsl #1]
  4404e0:	and	w24, w1, #0x1ff
  4404e4:	ubfx	x0, x1, #9, #3
  4404e8:	tbnz	w1, #12, 440524 <ferror@plt+0x3dca4>
  4404ec:	add	w1, w0, #0x1
  4404f0:	sub	w20, w20, #0x1
  4404f4:	sub	w20, w20, w0
  4404f8:	cmp	w24, #0xff
  4404fc:	lsr	x21, x21, x1
  440500:	b.hi	44055c <ferror@plt+0x3dcdc>  // b.pmore
  440504:	ldr	x0, [sp, #96]
  440508:	cmp	x25, x0
  44050c:	b.eq	44026c <ferror@plt+0x3d9ec>  // b.none
  440510:	strb	w24, [x25], #1
  440514:	cmp	w20, #0xe
  440518:	prfm	pstl1keep, [x25]
  44051c:	b.ls	4404b8 <ferror@plt+0x3dc38>  // b.plast
  440520:	b	4404d8 <ferror@plt+0x3dc58>
  440524:	add	w24, w24, #0x100
  440528:	lsl	w0, w26, w0
  44052c:	sub	w0, w0, #0x1
  440530:	sub	w20, w20, #0x8
  440534:	and	x0, x0, x21, lsr #8
  440538:	add	x24, x0, w24, sxtw
  44053c:	ldrh	w0, [x23, x24, lsl #1]
  440540:	and	w24, w0, #0x1ff
  440544:	ubfx	x0, x0, #9, #3
  440548:	cmp	w24, #0xff
  44054c:	add	w1, w0, #0x8
  440550:	sub	w20, w20, w0
  440554:	lsr	x21, x21, x1
  440558:	b.ls	440504 <ferror@plt+0x3dc84>  // b.plast
  44055c:	cmp	w24, #0x100
  440560:	b.eq	440bb8 <ferror@plt+0x3e338>  // b.none
  440564:	cmp	w24, #0x108
  440568:	b.hi	4405f8 <ferror@plt+0x3dd78>  // b.pmore
  44056c:	sub	w24, w24, #0xfe
  440570:	cmp	w20, #0xe
  440574:	b.hi	440598 <ferror@plt+0x3dd18>  // b.pmore
  440578:	sub	x0, x22, x27
  44057c:	cmp	x0, #0x3
  440580:	b.le	44026c <ferror@plt+0x3d9ec>
  440584:	ldr	w0, [x27], #4
  440588:	lsl	x0, x0, x20
  44058c:	add	w20, w20, #0x20
  440590:	prfm	pldl1strm, [x27]
  440594:	orr	x21, x21, x0
  440598:	ldr	x1, [sp, #144]
  44059c:	and	x0, x21, #0xff
  4405a0:	ldrh	w2, [x1, x0, lsl #1]
  4405a4:	and	w0, w2, #0x1ff
  4405a8:	ubfx	x1, x2, #9, #3
  4405ac:	tbnz	w2, #12, 44066c <ferror@plt+0x3ddec>
  4405b0:	add	w2, w1, #0x1
  4405b4:	sub	w20, w20, #0x1
  4405b8:	sub	w20, w20, w1
  4405bc:	lsr	x21, x21, x2
  4405c0:	cbnz	w0, 4406a4 <ferror@plt+0x3de24>
  4405c4:	ldr	x0, [sp, #104]
  4405c8:	cmp	x25, x0
  4405cc:	b.eq	44026c <ferror@plt+0x3d9ec>  // b.none
  4405d0:	ldr	x0, [sp, #96]
  4405d4:	sub	x0, x0, x25
  4405d8:	cmp	w24, w0
  4405dc:	b.hi	44026c <ferror@plt+0x3d9ec>  // b.pmore
  4405e0:	ldurb	w1, [x25, #-1]
  4405e4:	mov	w2, w24
  4405e8:	mov	x0, x25
  4405ec:	add	x25, x25, x2
  4405f0:	bl	402440 <memset@plt>
  4405f4:	b	4404b0 <ferror@plt+0x3dc30>
  4405f8:	cmp	w24, #0x11d
  4405fc:	b.eq	440820 <ferror@plt+0x3dfa0>  // b.none
  440600:	b.hi	44026c <ferror@plt+0x3d9ec>  // b.pmore
  440604:	cmp	w20, #0xe
  440608:	b.hi	44062c <ferror@plt+0x3ddac>  // b.pmore
  44060c:	sub	x0, x22, x27
  440610:	cmp	x0, #0x3
  440614:	b.le	44026c <ferror@plt+0x3d9ec>
  440618:	ldr	w0, [x27], #4
  44061c:	lsl	x0, x0, x20
  440620:	add	w20, w20, #0x20
  440624:	prfm	pldl1strm, [x27]
  440628:	orr	x21, x21, x0
  44062c:	sub	w24, w24, #0x109
  440630:	and	w1, w24, #0x3
  440634:	lsr	w0, w24, #2
  440638:	add	w2, w0, #0x1
  44063c:	lsl	w24, w26, w0
  440640:	mov	w0, #0xffffffff            	// #-1
  440644:	sub	w24, w24, #0x1
  440648:	lsl	w5, w0, w2
  44064c:	bic	w5, w21, w5
  440650:	lsl	w0, w1, w2
  440654:	add	w24, w5, w24, lsl #3
  440658:	add	w0, w0, #0xb
  44065c:	sub	w20, w20, w2
  440660:	add	w24, w24, w0
  440664:	lsr	x21, x21, x2
  440668:	b	440570 <ferror@plt+0x3dcf0>
  44066c:	add	w0, w0, #0x100
  440670:	lsl	w1, w26, w1
  440674:	sub	w1, w1, #0x1
  440678:	sub	w20, w20, #0x8
  44067c:	and	x1, x1, x21, lsr #8
  440680:	add	x0, x1, w0, sxtw
  440684:	ldr	x1, [sp, #144]
  440688:	ldrh	w1, [x1, x0, lsl #1]
  44068c:	and	w0, w1, #0x1ff
  440690:	ubfx	x1, x1, #9, #3
  440694:	add	w2, w1, #0x8
  440698:	sub	w20, w20, w1
  44069c:	lsr	x21, x21, x2
  4406a0:	cbz	w0, 4405c4 <ferror@plt+0x3dd44>
  4406a4:	cmp	w0, #0x1d
  4406a8:	b.hi	44026c <ferror@plt+0x3d9ec>  // b.pmore
  4406ac:	add	w19, w0, #0x1
  4406b0:	cmp	w0, #0x3
  4406b4:	b.ls	44071c <ferror@plt+0x3de9c>  // b.plast
  4406b8:	cmp	w20, #0xe
  4406bc:	b.hi	4406e0 <ferror@plt+0x3de60>  // b.pmore
  4406c0:	sub	x1, x22, x27
  4406c4:	cmp	x1, #0x3
  4406c8:	b.le	44026c <ferror@plt+0x3d9ec>
  4406cc:	ldr	w1, [x27], #4
  4406d0:	lsl	x1, x1, x20
  4406d4:	add	w20, w20, #0x20
  4406d8:	prfm	pldl1strm, [x27]
  4406dc:	orr	x21, x21, x1
  4406e0:	sub	w0, w0, #0x4
  4406e4:	and	w1, w0, #0x1
  4406e8:	lsr	w0, w0, #1
  4406ec:	add	w2, w0, #0x1
  4406f0:	lsl	w19, w26, w0
  4406f4:	mov	w0, #0xffffffff            	// #-1
  4406f8:	sub	w19, w19, #0x1
  4406fc:	lsl	w5, w0, w2
  440700:	bic	w5, w21, w5
  440704:	lsl	w0, w1, w2
  440708:	add	w19, w5, w19, lsl #2
  44070c:	add	w0, w0, #0x5
  440710:	sub	w20, w20, w2
  440714:	add	w19, w19, w0
  440718:	lsr	x21, x21, x2
  44071c:	ldr	x0, [sp, #104]
  440720:	sub	x0, x25, x0
  440724:	cmp	w19, w0
  440728:	b.hi	44026c <ferror@plt+0x3d9ec>  // b.pmore
  44072c:	ldr	x0, [sp, #96]
  440730:	sub	x0, x0, x25
  440734:	cmp	w24, w0
  440738:	b.hi	44026c <ferror@plt+0x3d9ec>  // b.pmore
  44073c:	mov	w28, w19
  440740:	cmp	w19, w24
  440744:	neg	x0, x28
  440748:	str	x0, [sp, #152]
  44074c:	b.cc	440768 <ferror@plt+0x3dee8>  // b.lo, b.ul, b.last
  440750:	mov	w2, w24
  440754:	add	x1, x25, x0
  440758:	mov	x0, x25
  44075c:	add	x25, x25, x2
  440760:	bl	402220 <memcpy@plt>
  440764:	b	4404b0 <ferror@plt+0x3dc30>
  440768:	cmp	w19, w24
  44076c:	ldr	x0, [sp, #152]
  440770:	csel	w2, w19, w24, ls  // ls = plast
  440774:	csel	w28, w19, w24, ls  // ls = plast
  440778:	str	x2, [sp, #136]
  44077c:	add	x1, x25, x0
  440780:	mov	x0, x25
  440784:	bl	402220 <memcpy@plt>
  440788:	ldr	x2, [sp, #136]
  44078c:	subs	w24, w24, w28
  440790:	add	x25, x25, x2
  440794:	b.ne	440768 <ferror@plt+0x3dee8>  // b.any
  440798:	b	4404b0 <ferror@plt+0x3dc30>
  44079c:	mov	w0, #0x0                   	// #0
  4407a0:	b	43fe40 <ferror@plt+0x3d5c0>
  4407a4:	sub	w20, w20, #0xc
  4407a8:	mov	x21, x2
  4407ac:	b	4400f8 <ferror@plt+0x3d878>
  4407b0:	sub	w20, w20, #0x9
  4407b4:	mov	x21, x1
  4407b8:	b	4400f8 <ferror@plt+0x3d878>
  4407bc:	add	w1, w1, w0
  4407c0:	b	440260 <ferror@plt+0x3d9e0>
  4407c4:	cbz	w7, 4401dc <ferror@plt+0x3d95c>
  4407c8:	b	44035c <ferror@plt+0x3dadc>
  4407cc:	sub	w20, w20, #0x3
  4407d0:	mov	x21, x2
  4407d4:	b	4400f8 <ferror@plt+0x3d878>
  4407d8:	add	x11, x11, #0x1
  4407dc:	cmp	x11, x6
  4407e0:	b.cs	4407ec <ferror@plt+0x3df6c>  // b.hs, b.nlast
  4407e4:	ubfiz	x8, x8, #1, #16
  4407e8:	ldrh	w8, [x4, x8]
  4407ec:	mov	w0, w10
  4407f0:	tst	w1, w10
  4407f4:	b.eq	440ad0 <ferror@plt+0x3e250>  // b.none
  4407f8:	lsr	w0, w0, #1
  4407fc:	tst	w1, w0
  440800:	b.ne	4407f8 <ferror@plt+0x3df78>  // b.any
  440804:	cbnz	w0, 440ad0 <ferror@plt+0x3e250>
  440808:	mov	w1, #0x0                   	// #0
  44080c:	cmp	x11, x6
  440810:	b.eq	4401bc <ferror@plt+0x3d93c>  // b.none
  440814:	tst	w8, #0xfe00
  440818:	b.eq	440464 <ferror@plt+0x3dbe4>  // b.none
  44081c:	b	44035c <ferror@plt+0x3dadc>
  440820:	mov	w24, #0x102                 	// #258
  440824:	b	440570 <ferror@plt+0x3dcf0>
  440828:	sub	w20, w20, #0x6
  44082c:	mov	x21, x2
  440830:	b	4400f8 <ferror@plt+0x3d878>
  440834:	add	x0, sp, #0xb8
  440838:	mov	x30, #0x0                   	// #0
  44083c:	mov	x6, #0x7                   	// #7
  440840:	mov	w18, #0x1                   	// #1
  440844:	str	x0, [sp, #136]
  440848:	lsl	x0, x6, #1
  44084c:	add	x1, x24, x0
  440850:	ldrh	w9, [x1, #16]
  440854:	cbnz	w9, 44028c <ferror@plt+0x3da0c>
  440858:	subs	x6, x6, #0x1
  44085c:	b.ne	440848 <ferror@plt+0x3dfc8>  // b.any
  440860:	mov	w5, w26
  440864:	mov	w6, w27
  440868:	add	x27, x5, x6
  44086c:	mov	x0, #0x1278                	// #4728
  440870:	add	x26, x23, x0
  440874:	add	x27, x26, x27
  440878:	mov	x24, x26
  44087c:	cmp	x26, x27
  440880:	b.cs	440a7c <ferror@plt+0x3e1fc>  // b.hs, b.nlast
  440884:	stp	x22, x6, [sp, #136]
  440888:	mov	x22, x23
  44088c:	mov	x23, x21
  440890:	mov	x21, x26
  440894:	mov	x26, x19
  440898:	mov	x19, x28
  44089c:	mov	x28, x27
  4408a0:	mov	x27, x5
  4408a4:	str	x4, [sp, #152]
  4408a8:	b	4408bc <ferror@plt+0x3e03c>
  4408ac:	sub	w20, w20, #0x1
  4408b0:	strb	w0, [x24], #1
  4408b4:	cmp	x28, x24
  4408b8:	b.ls	440a5c <ferror@plt+0x3e1dc>  // b.plast
  4408bc:	cmp	w20, #0xe
  4408c0:	b.hi	4408e4 <ferror@plt+0x3e064>  // b.pmore
  4408c4:	sub	x0, x19, x26
  4408c8:	cmp	x0, #0x3
  4408cc:	b.le	44035c <ferror@plt+0x3dadc>
  4408d0:	ldr	w0, [x26], #4
  4408d4:	lsl	x0, x0, x20
  4408d8:	add	w20, w20, #0x20
  4408dc:	prfm	pldl1strm, [x26]
  4408e0:	orr	x23, x23, x0
  4408e4:	and	x0, x23, #0xff
  4408e8:	ldrh	w0, [x22, x0, lsl #1]
  4408ec:	tbnz	w0, #12, 44035c <ferror@plt+0x3dadc>
  4408f0:	ubfx	x1, x0, #9, #3
  4408f4:	tst	w0, #0x1f0
  4408f8:	add	w2, w1, #0x1
  4408fc:	sub	w20, w20, w1
  440900:	and	w0, w0, #0x1ff
  440904:	lsr	x23, x23, x2
  440908:	b.eq	4408ac <ferror@plt+0x3e02c>  // b.none
  44090c:	cmp	w0, #0x10
  440910:	b.eq	440954 <ferror@plt+0x3e0d4>  // b.none
  440914:	cmp	w0, #0x11
  440918:	b.eq	4409a8 <ferror@plt+0x3e128>  // b.none
  44091c:	cmp	w0, #0x12
  440920:	b.ne	44035c <ferror@plt+0x3dadc>  // b.any
  440924:	and	w2, w23, #0x7f
  440928:	sub	x0, x28, x24
  44092c:	add	w2, w2, #0xb
  440930:	sub	w20, w20, #0x8
  440934:	lsr	x23, x23, #7
  440938:	cmp	w2, w0
  44093c:	b.hi	44035c <ferror@plt+0x3dadc>  // b.pmore
  440940:	mov	x0, x24
  440944:	mov	w1, #0x0                   	// #0
  440948:	add	x24, x24, x2
  44094c:	bl	402440 <memset@plt>
  440950:	b	4408b4 <ferror@plt+0x3e034>
  440954:	cmp	x24, x21
  440958:	b.eq	44035c <ferror@plt+0x3dadc>  // b.none
  44095c:	and	w0, w23, #0x3
  440960:	sub	x1, x28, x24
  440964:	add	w0, w0, #0x3
  440968:	sub	w20, w20, #0x3
  44096c:	lsr	x23, x23, #2
  440970:	cmp	w0, w1
  440974:	b.hi	44035c <ferror@plt+0x3dadc>  // b.pmore
  440978:	ldurb	w1, [x24, #-1]
  44097c:	cmp	w0, #0x5
  440980:	b.eq	440a18 <ferror@plt+0x3e198>  // b.none
  440984:	cmp	w0, #0x6
  440988:	b.eq	440a14 <ferror@plt+0x3e194>  // b.none
  44098c:	cmp	w0, #0x4
  440990:	b.eq	440a1c <ferror@plt+0x3e19c>  // b.none
  440994:	add	x24, x24, #0x3
  440998:	sturb	w1, [x24, #-3]
  44099c:	sturb	w1, [x24, #-2]
  4409a0:	sturb	w1, [x24, #-1]
  4409a4:	b	4408b4 <ferror@plt+0x3e034>
  4409a8:	and	w0, w23, #0x7
  4409ac:	sub	x1, x28, x24
  4409b0:	add	w0, w0, #0x3
  4409b4:	sub	w20, w20, #0x4
  4409b8:	lsr	x23, x23, #3
  4409bc:	cmp	w0, w1
  4409c0:	b.hi	44035c <ferror@plt+0x3dadc>  // b.pmore
  4409c4:	cmp	w0, #0x7
  4409c8:	b.eq	440a40 <ferror@plt+0x3e1c0>  // b.none
  4409cc:	b.hi	440a24 <ferror@plt+0x3e1a4>  // b.pmore
  4409d0:	cmp	w0, #0x5
  4409d4:	b.eq	4409e8 <ferror@plt+0x3e168>  // b.none
  4409d8:	cmp	w0, #0x6
  4409dc:	b.ne	440a04 <ferror@plt+0x3e184>  // b.any
  4409e0:	strb	wzr, [x24], #1
  4409e4:	nop
  4409e8:	strb	wzr, [x24], #1
  4409ec:	mov	x0, x24
  4409f0:	strb	wzr, [x0], #1
  4409f4:	mov	x24, x0
  4409f8:	strh	wzr, [x24], #3
  4409fc:	strb	wzr, [x0, #2]
  440a00:	b	4408b4 <ferror@plt+0x3e034>
  440a04:	cmp	w0, #0x4
  440a08:	b.eq	4409ec <ferror@plt+0x3e16c>  // b.none
  440a0c:	mov	x0, x24
  440a10:	b	4409f4 <ferror@plt+0x3e174>
  440a14:	strb	w1, [x24], #1
  440a18:	strb	w1, [x24], #1
  440a1c:	strb	w1, [x24], #1
  440a20:	b	440994 <ferror@plt+0x3e114>
  440a24:	cmp	w0, #0x9
  440a28:	b.eq	440a38 <ferror@plt+0x3e1b8>  // b.none
  440a2c:	cmp	w0, #0xa
  440a30:	b.ne	440a4c <ferror@plt+0x3e1cc>  // b.any
  440a34:	strb	wzr, [x24], #1
  440a38:	strb	wzr, [x24], #1
  440a3c:	strb	wzr, [x24], #1
  440a40:	strb	wzr, [x24], #1
  440a44:	strb	wzr, [x24], #1
  440a48:	b	4409e8 <ferror@plt+0x3e168>
  440a4c:	cmp	w0, #0x8
  440a50:	b.ne	440a0c <ferror@plt+0x3e18c>  // b.any
  440a54:	strb	wzr, [x24], #1
  440a58:	b	440a40 <ferror@plt+0x3e1c0>
  440a5c:	mov	x28, x19
  440a60:	mov	x19, x26
  440a64:	mov	x26, x21
  440a68:	mov	x21, x23
  440a6c:	mov	x23, x22
  440a70:	mov	x5, x27
  440a74:	ldp	x22, x6, [sp, #136]
  440a78:	ldr	x4, [sp, #152]
  440a7c:	str	x6, [sp, #152]
  440a80:	ldrb	w0, [x4, #888]
  440a84:	cbz	w0, 44035c <ferror@plt+0x3dadc>
  440a88:	mov	x3, x23
  440a8c:	mov	x2, x23
  440a90:	mov	x1, x5
  440a94:	mov	x0, x26
  440a98:	str	x5, [sp, #136]
  440a9c:	bl	43f488 <ferror@plt+0x3cc08>
  440aa0:	cbz	w0, 44035c <ferror@plt+0x3dadc>
  440aa4:	ldr	x5, [sp, #136]
  440aa8:	add	x3, x23, #0x800
  440aac:	ldr	x6, [sp, #152]
  440ab0:	mov	x2, x23
  440ab4:	add	x0, x26, x5
  440ab8:	str	x3, [sp, #144]
  440abc:	mov	x1, x6
  440ac0:	bl	43f488 <ferror@plt+0x3cc08>
  440ac4:	cbz	w0, 44035c <ferror@plt+0x3dadc>
  440ac8:	mov	x27, x23
  440acc:	b	44049c <ferror@plt+0x3dc1c>
  440ad0:	sub	w2, w0, #0x1
  440ad4:	and	w1, w2, w1
  440ad8:	add	w1, w0, w1
  440adc:	b	44080c <ferror@plt+0x3df8c>
  440ae0:	sub	w20, w20, #0x9
  440ae4:	mov	x21, x2
  440ae8:	b	4400f8 <ferror@plt+0x3d878>
  440aec:	mov	x28, x25
  440af0:	ldp	x21, x22, [sp, #32]
  440af4:	ldp	x23, x24, [sp, #48]
  440af8:	ldp	x25, x26, [sp, #64]
  440afc:	ldr	x0, [sp, #96]
  440b00:	cmp	x28, x0
  440b04:	cset	w0, eq  // eq = none
  440b08:	b	44027c <ferror@plt+0x3d9fc>
  440b0c:	mov	w20, w2
  440b10:	b	4400f8 <ferror@plt+0x3d878>
  440b14:	sub	w20, w2, #0x3
  440b18:	mov	x21, x5
  440b1c:	b	4400f8 <ferror@plt+0x3d878>
  440b20:	sub	x0, x28, x19
  440b24:	cmp	x0, #0x4
  440b28:	b.le	440aec <ferror@plt+0x3e26c>
  440b2c:	ldp	x21, x22, [sp, #32]
  440b30:	b	43fdb0 <ferror@plt+0x3d530>
  440b34:	sub	w20, w2, #0x6
  440b38:	mov	x21, x5
  440b3c:	b	4400f8 <ferror@plt+0x3d878>
  440b40:	sub	w20, w2, #0x9
  440b44:	mov	x21, x5
  440b48:	b	4400f8 <ferror@plt+0x3d878>
  440b4c:	sub	w20, w2, #0xc
  440b50:	mov	x21, x5
  440b54:	b	4400f8 <ferror@plt+0x3d878>
  440b58:	add	x16, x16, #0x1
  440b5c:	cmp	x9, x16
  440b60:	b.ls	440b6c <ferror@plt+0x3e2ec>  // b.plast
  440b64:	ubfiz	x12, x12, #1, #16
  440b68:	ldrh	w12, [x4, x12]
  440b6c:	mov	w0, w10
  440b70:	tst	w10, w7
  440b74:	b.eq	440bcc <ferror@plt+0x3e34c>  // b.none
  440b78:	lsr	w0, w0, #1
  440b7c:	tst	w0, w7
  440b80:	b.ne	440b78 <ferror@plt+0x3e2f8>  // b.any
  440b84:	cbnz	w0, 440bcc <ferror@plt+0x3e34c>
  440b88:	mov	w7, #0x0                   	// #0
  440b8c:	cmp	x9, x16
  440b90:	b.ne	4402e0 <ferror@plt+0x3da60>  // b.any
  440b94:	b	440858 <ferror@plt+0x3dfd8>
  440b98:	tbz	w0, #12, 44035c <ferror@plt+0x3dadc>
  440b9c:	ubfx	x17, x0, #9, #3
  440ba0:	and	x15, x0, #0x1ff
  440ba4:	cmp	x17, x6
  440ba8:	mov	x2, x17
  440bac:	b.cc	44035c <ferror@plt+0x3dadc>  // b.lo, b.ul, b.last
  440bb0:	mov	x13, x1
  440bb4:	b	440324 <ferror@plt+0x3daa4>
  440bb8:	mov	x28, x22
  440bbc:	mov	x19, x27
  440bc0:	mov	w0, w20
  440bc4:	ldp	x22, x23, [sp, #160]
  440bc8:	b	440420 <ferror@plt+0x3dba0>
  440bcc:	sub	w1, w0, #0x1
  440bd0:	and	w7, w1, w7
  440bd4:	add	w7, w0, w7
  440bd8:	b	440b8c <ferror@plt+0x3e30c>
  440bdc:	nop
  440be0:	sub	sp, sp, #0x4c0
  440be4:	stp	x29, x30, [sp, #80]
  440be8:	add	x29, sp, #0x50
  440bec:	stp	x21, x22, [sp, #112]
  440bf0:	mov	x21, x0
  440bf4:	ldr	w0, [sp, #1240]
  440bf8:	stp	x19, x20, [sp, #96]
  440bfc:	mov	x19, x4
  440c00:	mov	x20, x5
  440c04:	stp	x23, x24, [sp, #128]
  440c08:	stp	x25, x26, [sp, #144]
  440c0c:	mov	w26, w2
  440c10:	stp	x27, x28, [sp, #160]
  440c14:	mov	x28, x7
  440c18:	stp	x3, x6, [sp, #200]
  440c1c:	str	x1, [sp, #216]
  440c20:	cbnz	w0, 440c30 <ferror@plt+0x3e3b0>
  440c24:	ldr	x0, [sp, #1216]
  440c28:	str	wzr, [x7]
  440c2c:	str	wzr, [x0]
  440c30:	add	x22, sp, #0x1b8
  440c34:	mov	x5, x20
  440c38:	mov	x6, x22
  440c3c:	mov	x4, x19
  440c40:	mov	w1, w26
  440c44:	mov	x0, x21
  440c48:	mov	x3, #0x40                  	// #64
  440c4c:	mov	x2, #0x0                   	// #0
  440c50:	bl	442c98 <ferror@plt+0x40418>
  440c54:	cbnz	w0, 440cbc <ferror@plt+0x3e43c>
  440c58:	mov	w22, #0x0                   	// #0
  440c5c:	mov	x23, #0x0                   	// #0
  440c60:	cbnz	w22, 440d68 <ferror@plt+0x3e4e8>
  440c64:	cbz	x23, 440c7c <ferror@plt+0x3e3fc>
  440c68:	add	x1, x23, #0x18
  440c6c:	mov	x0, x21
  440c70:	mov	x3, x20
  440c74:	mov	x2, x19
  440c78:	bl	442d68 <ferror@plt+0x404e8>
  440c7c:	cmn	w26, #0x1
  440c80:	mov	w23, #0x0                   	// #0
  440c84:	b.eq	440c98 <ferror@plt+0x3e418>  // b.none
  440c88:	mov	x2, x20
  440c8c:	mov	x1, x19
  440c90:	mov	w0, w26
  440c94:	bl	43f110 <ferror@plt+0x3c890>
  440c98:	mov	w0, w23
  440c9c:	ldp	x29, x30, [sp, #80]
  440ca0:	ldp	x19, x20, [sp, #96]
  440ca4:	ldp	x21, x22, [sp, #112]
  440ca8:	ldp	x23, x24, [sp, #128]
  440cac:	ldp	x25, x26, [sp, #144]
  440cb0:	ldp	x27, x28, [sp, #160]
  440cb4:	add	sp, sp, #0x4c0
  440cb8:	ret
  440cbc:	ldr	x4, [sp, #440]
  440cc0:	add	x5, sp, #0x200
  440cc4:	mov	x1, x22
  440cc8:	mov	x0, x21
  440ccc:	mov	x3, x20
  440cd0:	mov	x2, x19
  440cd4:	ldp	x6, x7, [x4]
  440cd8:	stp	x6, x7, [x5, #192]
  440cdc:	ldrb	w24, [x4, #4]
  440ce0:	ldp	x6, x7, [x4, #16]
  440ce4:	stp	x6, x7, [x5, #208]
  440ce8:	ldrb	w5, [x4, #5]
  440cec:	str	w5, [sp, #320]
  440cf0:	add	x5, sp, #0x200
  440cf4:	ldp	x6, x7, [x4, #32]
  440cf8:	stp	x6, x7, [x5, #224]
  440cfc:	add	x5, sp, #0x2f0
  440d00:	ldrb	w22, [x4, #6]
  440d04:	ldp	x6, x7, [x4, #48]
  440d08:	stp	x6, x7, [x5]
  440d0c:	ldrh	w5, [x4, #18]
  440d10:	ldrh	w27, [x4, #16]
  440d14:	ldrh	w23, [x4, #62]
  440d18:	str	w5, [sp, #232]
  440d1c:	ldrh	w5, [x4, #60]
  440d20:	ldr	x25, [x4, #40]
  440d24:	str	w5, [sp, #224]
  440d28:	ldr	w4, [x4, #48]
  440d2c:	str	w4, [sp, #240]
  440d30:	bl	442d68 <ferror@plt+0x404e8>
  440d34:	ldr	w1, [sp, #704]
  440d38:	mov	w0, #0x457f                	// #17791
  440d3c:	movk	w0, #0x464c, lsl #16
  440d40:	cmp	w1, w0
  440d44:	b.eq	440d80 <ferror@plt+0x3e500>  // b.none
  440d48:	mov	x0, x20
  440d4c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  440d50:	mov	w2, #0x0                   	// #0
  440d54:	add	x1, x1, #0x818
  440d58:	mov	w22, #0x0                   	// #0
  440d5c:	mov	x23, #0x0                   	// #0
  440d60:	blr	x19
  440d64:	b	440c60 <ferror@plt+0x3e3e0>
  440d68:	mov	x3, x20
  440d6c:	mov	x2, x19
  440d70:	add	x1, sp, #0x300
  440d74:	mov	x0, x21
  440d78:	bl	442d68 <ferror@plt+0x404e8>
  440d7c:	b	440c64 <ferror@plt+0x3e3e4>
  440d80:	cmp	w22, #0x1
  440d84:	b.ne	440db0 <ferror@plt+0x3e530>  // b.any
  440d88:	cmp	w24, #0x2
  440d8c:	b.eq	440dd0 <ferror@plt+0x3e550>  // b.none
  440d90:	mov	x0, x20
  440d94:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  440d98:	mov	w2, #0x0                   	// #0
  440d9c:	add	x1, x1, #0x868
  440da0:	mov	w22, #0x0                   	// #0
  440da4:	mov	x23, #0x0                   	// #0
  440da8:	blr	x19
  440dac:	b	440c60 <ferror@plt+0x3e3e0>
  440db0:	mov	x0, x20
  440db4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  440db8:	mov	w2, #0x0                   	// #0
  440dbc:	add	x1, x1, #0x838
  440dc0:	mov	w22, #0x0                   	// #0
  440dc4:	mov	x23, #0x0                   	// #0
  440dc8:	blr	x19
  440dcc:	b	440c60 <ferror@plt+0x3e3e0>
  440dd0:	ldr	w0, [sp, #320]
  440dd4:	sub	w0, w0, #0x1
  440dd8:	and	w0, w0, #0xff
  440ddc:	cmp	w0, #0x1
  440de0:	b.hi	440ecc <ferror@plt+0x3e64c>  // b.pmore
  440de4:	ldr	w0, [sp, #1232]
  440de8:	cmp	w27, #0x3
  440dec:	and	w0, w0, #0x1
  440df0:	csel	w0, w0, wzr, eq  // eq = none
  440df4:	cbnz	w0, 442484 <ferror@plt+0x3fc04>
  440df8:	ldr	w0, [sp, #224]
  440dfc:	mov	w24, #0xffff                	// #65535
  440e00:	str	w0, [sp, #264]
  440e04:	cmp	w0, #0x0
  440e08:	ccmp	w23, w24, #0x4, ne  // ne = any
  440e0c:	ccmp	x25, #0x0, #0x4, eq  // eq = none
  440e10:	b.ne	440eec <ferror@plt+0x3e66c>  // b.any
  440e14:	ldr	w22, [sp, #264]
  440e18:	add	x0, sp, #0x1d0
  440e1c:	mov	x6, x0
  440e20:	add	x2, x25, #0x40
  440e24:	sub	w3, w22, #0x1
  440e28:	mov	x5, x20
  440e2c:	mov	x4, x19
  440e30:	mov	w1, w26
  440e34:	lsl	x3, x3, #6
  440e38:	str	x0, [sp, #248]
  440e3c:	mov	x0, x21
  440e40:	bl	442c98 <ferror@plt+0x40418>
  440e44:	cbz	w0, 440c58 <ferror@plt+0x3e3d8>
  440e48:	ldr	x25, [sp, #464]
  440e4c:	sub	w23, w23, #0x1
  440e50:	add	x0, sp, #0x1e8
  440e54:	mov	x5, x20
  440e58:	mov	x6, x0
  440e5c:	mov	x4, x19
  440e60:	add	x3, x25, x23, lsl #6
  440e64:	mov	w1, w26
  440e68:	str	x0, [sp, #256]
  440e6c:	mov	x0, x21
  440e70:	str	x25, [sp, #392]
  440e74:	ldp	x2, x3, [x3, #24]
  440e78:	str	x3, [sp, #328]
  440e7c:	bl	442c98 <ferror@plt+0x40418>
  440e80:	cbnz	w0, 440f5c <ferror@plt+0x3e6dc>
  440e84:	ldr	x1, [sp, #248]
  440e88:	mov	x3, x20
  440e8c:	mov	x2, x19
  440e90:	mov	x0, x21
  440e94:	mov	w22, #0x0                   	// #0
  440e98:	mov	x23, #0x0                   	// #0
  440e9c:	bl	442d68 <ferror@plt+0x404e8>
  440ea0:	str	wzr, [sp, #224]
  440ea4:	nop
  440ea8:	ldr	w0, [sp, #224]
  440eac:	cbz	w0, 440c60 <ferror@plt+0x3e3e0>
  440eb0:	mov	x3, x20
  440eb4:	mov	x2, x19
  440eb8:	add	x1, sp, #0x230
  440ebc:	mov	x0, x21
  440ec0:	bl	442d68 <ferror@plt+0x404e8>
  440ec4:	cbz	w22, 440c64 <ferror@plt+0x3e3e4>
  440ec8:	b	440d68 <ferror@plt+0x3e4e8>
  440ecc:	mov	x0, x20
  440ed0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  440ed4:	mov	w2, #0x0                   	// #0
  440ed8:	add	x1, x1, #0x890
  440edc:	mov	w22, #0x0                   	// #0
  440ee0:	mov	x23, #0x0                   	// #0
  440ee4:	blr	x19
  440ee8:	b	440c60 <ferror@plt+0x3e3e0>
  440eec:	add	x0, sp, #0x380
  440ef0:	mov	x5, x20
  440ef4:	mov	x6, x0
  440ef8:	mov	x4, x19
  440efc:	mov	x2, x25
  440f00:	mov	w1, w26
  440f04:	mov	x3, #0x8                   	// #8
  440f08:	str	x0, [sp, #304]
  440f0c:	mov	x0, x21
  440f10:	bl	442c98 <ferror@plt+0x40418>
  440f14:	mov	w22, w0
  440f18:	cbz	w0, 440c5c <ferror@plt+0x3e3dc>
  440f1c:	ldr	w1, [sp, #264]
  440f20:	ldr	x0, [sp, #896]
  440f24:	cbz	w1, 44150c <ferror@plt+0x3ec8c>
  440f28:	ldr	w23, [x0, #40]
  440f2c:	mov	w1, #0xffff                	// #65535
  440f30:	ldr	w0, [sp, #264]
  440f34:	cmp	w0, w23
  440f38:	sub	w0, w23, #0x100
  440f3c:	ccmp	w23, w1, #0x0, ls  // ls = plast
  440f40:	csel	w23, w0, w23, hi  // hi = pmore
  440f44:	ldr	x1, [sp, #304]
  440f48:	mov	x3, x20
  440f4c:	mov	x2, x19
  440f50:	mov	x0, x21
  440f54:	bl	442d68 <ferror@plt+0x404e8>
  440f58:	b	440e14 <ferror@plt+0x3e594>
  440f5c:	ldr	x4, [sp, #488]
  440f60:	add	x0, sp, #0x380
  440f64:	mov	x2, #0x140                 	// #320
  440f68:	mov	w1, #0x0                   	// #0
  440f6c:	str	x4, [sp, #288]
  440f70:	str	x0, [sp, #304]
  440f74:	bl	402440 <memset@plt>
  440f78:	ldr	w0, [sp, #1240]
  440f7c:	cmp	w22, #0x1
  440f80:	eor	w0, w0, #0x1
  440f84:	and	w0, w0, #0x1
  440f88:	str	w0, [sp, #404]
  440f8c:	b.ls	442440 <ferror@plt+0x3fbc0>  // b.plast
  440f90:	ldr	x1, [sp, #1248]
  440f94:	mov	x23, #0x0                   	// #0
  440f98:	ldr	w2, [sp, #240]
  440f9c:	mov	w27, #0x0                   	// #0
  440fa0:	cmp	x1, #0x0
  440fa4:	add	x1, sp, #0x290
  440fa8:	and	w2, w2, #0x2
  440fac:	str	w2, [sp, #324]
  440fb0:	csinc	w2, w0, wzr, eq  // eq = none
  440fb4:	add	x0, sp, #0x2a8
  440fb8:	str	x0, [sp, #416]
  440fbc:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  440fc0:	add	x22, x0, #0x8d8
  440fc4:	add	x0, sp, #0x388
  440fc8:	str	x20, [sp, #296]
  440fcc:	mov	w24, #0x0                   	// #0
  440fd0:	ldr	x20, [sp, #328]
  440fd4:	str	w26, [sp, #280]
  440fd8:	str	x0, [sp, #312]
  440fdc:	mov	w0, #0x1                   	// #1
  440fe0:	stp	xzr, x23, [sp, #368]
  440fe4:	mov	w23, w0
  440fe8:	str	x1, [sp, #408]
  440fec:	mov	w1, #0x0                   	// #0
  440ff0:	str	x28, [sp, #424]
  440ff4:	mov	w28, w1
  440ff8:	ldr	x26, [sp, #288]
  440ffc:	str	x19, [sp, #288]
  441000:	mov	w19, w2
  441004:	str	wzr, [sp, #224]
  441008:	str	wzr, [sp, #240]
  44100c:	str	x21, [sp, #272]
  441010:	str	xzr, [sp, #336]
  441014:	str	xzr, [sp, #352]
  441018:	str	wzr, [sp, #360]
  44101c:	str	wzr, [sp, #364]
  441020:	str	xzr, [sp, #384]
  441024:	str	wzr, [sp, #400]
  441028:	ldr	w0, [x25, #4]
  44102c:	cmp	w0, #0x2
  441030:	b.eq	441334 <ferror@plt+0x3eab4>  // b.none
  441034:	cmp	w0, #0xb
  441038:	csel	w24, w24, w23, ne  // ne = any
  44103c:	ldr	w21, [x25]
  441040:	cmp	x21, x20
  441044:	b.cs	441520 <ferror@plt+0x3eca0>  // b.hs, b.nlast
  441048:	add	x21, x26, x21
  44104c:	mov	x1, x22
  441050:	mov	x0, x21
  441054:	bl	4025d0 <strcmp@plt>
  441058:	cbz	w0, 4412e8 <ferror@plt+0x3ea68>
  44105c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441060:	mov	x0, x21
  441064:	add	x1, x1, #0x8e8
  441068:	bl	4025d0 <strcmp@plt>
  44106c:	cbz	w0, 441478 <ferror@plt+0x3ebf8>
  441070:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441074:	mov	x0, x21
  441078:	add	x1, x1, #0x8f8
  44107c:	bl	4025d0 <strcmp@plt>
  441080:	cbz	w0, 441480 <ferror@plt+0x3ec00>
  441084:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441088:	mov	x0, x21
  44108c:	add	x1, x1, #0x908
  441090:	bl	4025d0 <strcmp@plt>
  441094:	cbz	w0, 441488 <ferror@plt+0x3ec08>
  441098:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  44109c:	mov	x0, x21
  4410a0:	add	x1, x1, #0x918
  4410a4:	bl	4025d0 <strcmp@plt>
  4410a8:	cbz	w0, 441490 <ferror@plt+0x3ec10>
  4410ac:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  4410b0:	mov	x0, x21
  4410b4:	add	x1, x1, #0x928
  4410b8:	bl	4025d0 <strcmp@plt>
  4410bc:	cbz	w0, 441498 <ferror@plt+0x3ec18>
  4410c0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  4410c4:	mov	x0, x21
  4410c8:	add	x1, x1, #0x938
  4410cc:	bl	4025d0 <strcmp@plt>
  4410d0:	cbz	w0, 4414a0 <ferror@plt+0x3ec20>
  4410d4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  4410d8:	mov	x0, x21
  4410dc:	add	x1, x1, #0x948
  4410e0:	bl	4025d0 <strcmp@plt>
  4410e4:	cbz	w0, 4414a8 <ferror@plt+0x3ec28>
  4410e8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  4410ec:	mov	x0, x21
  4410f0:	add	x1, x1, #0x958
  4410f4:	bl	4025d0 <strcmp@plt>
  4410f8:	cbz	w0, 4414b0 <ferror@plt+0x3ec30>
  4410fc:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441100:	mov	x0, x21
  441104:	add	x1, x1, #0x968
  441108:	bl	4025d0 <strcmp@plt>
  44110c:	cbz	w0, 4412e4 <ferror@plt+0x3ea64>
  441110:	cbz	w19, 441158 <ferror@plt+0x3e8d8>
  441114:	ldr	w0, [sp, #224]
  441118:	cbnz	w0, 441134 <ferror@plt+0x3e8b4>
  44111c:	mov	x0, x21
  441120:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441124:	add	x1, x1, #0x978
  441128:	bl	4025d0 <strcmp@plt>
  44112c:	mov	w7, w0
  441130:	cbz	w0, 441404 <ferror@plt+0x3eb84>
  441134:	ldr	w0, [sp, #1240]
  441138:	orr	w0, w0, w28
  44113c:	cbnz	w0, 441158 <ferror@plt+0x3e8d8>
  441140:	mov	x0, x21
  441144:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441148:	mov	w28, #0x0                   	// #0
  44114c:	add	x1, x1, #0x998
  441150:	bl	4025d0 <strcmp@plt>
  441154:	cbz	w0, 44127c <ferror@plt+0x3e9fc>
  441158:	cbnz	w27, 441170 <ferror@plt+0x3e8f0>
  44115c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441160:	mov	x0, x21
  441164:	add	x1, x1, #0x9a8
  441168:	bl	4025d0 <strcmp@plt>
  44116c:	cbz	w0, 4413a8 <ferror@plt+0x3eb28>
  441170:	ldr	w0, [sp, #232]
  441174:	cmp	w0, #0x15
  441178:	b.eq	44133c <ferror@plt+0x3eabc>  // b.none
  44117c:	ldr	w0, [sp, #264]
  441180:	add	w23, w23, #0x1
  441184:	add	x25, x25, #0x40
  441188:	cmp	w0, w23
  44118c:	b.ne	441028 <ferror@plt+0x3e7a8>  // b.any
  441190:	ldr	w0, [sp, #240]
  441194:	ldr	w1, [sp, #404]
  441198:	cmp	w0, #0x0
  44119c:	str	w28, [sp, #232]
  4411a0:	csel	w0, w0, w24, ne  // ne = any
  4411a4:	ldr	w26, [sp, #280]
  4411a8:	cmp	w0, #0x0
  4411ac:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4411b0:	ldr	x21, [sp, #272]
  4411b4:	ldp	x19, x20, [sp, #288]
  4411b8:	ldr	x23, [sp, #376]
  4411bc:	ldr	x28, [sp, #424]
  4411c0:	b.eq	441b08 <ferror@plt+0x3f288>  // b.none
  4411c4:	sub	w25, w0, #0x1
  4411c8:	ldr	x0, [sp, #392]
  4411cc:	add	x25, x0, x25, lsl #6
  4411d0:	ldr	w0, [sp, #264]
  4411d4:	ldr	w7, [x25, #40]
  4411d8:	cmp	w0, w7
  4411dc:	b.hi	441574 <ferror@plt+0x3ecf4>  // b.pmore
  4411e0:	mov	x0, x20
  4411e4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  4411e8:	mov	w2, #0x0                   	// #0
  4411ec:	add	x1, x1, #0x9c8
  4411f0:	mov	w22, #0x0                   	// #0
  4411f4:	blr	x19
  4411f8:	str	wzr, [sp, #240]
  4411fc:	ldr	x1, [sp, #248]
  441200:	mov	x3, x20
  441204:	mov	x2, x19
  441208:	mov	x0, x21
  44120c:	bl	442d68 <ferror@plt+0x404e8>
  441210:	ldr	x1, [sp, #256]
  441214:	mov	x0, x21
  441218:	mov	x3, x20
  44121c:	mov	x2, x19
  441220:	bl	442d68 <ferror@plt+0x404e8>
  441224:	ldr	w0, [sp, #240]
  441228:	cbz	w0, 441240 <ferror@plt+0x3e9c0>
  44122c:	mov	x3, x20
  441230:	mov	x2, x19
  441234:	add	x1, sp, #0x200
  441238:	mov	x0, x21
  44123c:	bl	442d68 <ferror@plt+0x404e8>
  441240:	cbnz	w22, 441318 <ferror@plt+0x3ea98>
  441244:	ldr	w0, [sp, #232]
  441248:	cbz	w0, 441260 <ferror@plt+0x3e9e0>
  44124c:	mov	x3, x20
  441250:	mov	x2, x19
  441254:	add	x1, sp, #0x248
  441258:	mov	x0, x21
  44125c:	bl	442d68 <ferror@plt+0x404e8>
  441260:	cbz	w27, 440ea8 <ferror@plt+0x3e628>
  441264:	mov	x3, x20
  441268:	mov	x2, x19
  44126c:	add	x1, sp, #0x260
  441270:	mov	x0, x21
  441274:	bl	442d68 <ferror@plt+0x404e8>
  441278:	b	440ea8 <ferror@plt+0x3e628>
  44127c:	ldp	x2, x3, [x25, #24]
  441280:	add	x6, sp, #0x248
  441284:	ldp	x4, x5, [sp, #288]
  441288:	ldr	w1, [sp, #280]
  44128c:	ldr	x0, [sp, #272]
  441290:	bl	442c98 <ferror@plt+0x40418>
  441294:	mov	w7, w0
  441298:	cbz	w0, 441554 <ferror@plt+0x3ecd4>
  44129c:	ldr	x1, [x25, #32]
  4412a0:	str	x1, [sp, #328]
  4412a4:	ldr	x2, [sp, #584]
  4412a8:	str	x2, [sp, #344]
  4412ac:	mov	w28, #0x1                   	// #1
  4412b0:	mov	x0, x2
  4412b4:	bl	4022c0 <strnlen@plt>
  4412b8:	add	x0, x0, #0x3
  4412bc:	ldr	x1, [sp, #328]
  4412c0:	and	x0, x0, #0xfffffffffffffffc
  4412c4:	add	x3, x0, #0x4
  4412c8:	cmp	x1, x3
  4412cc:	b.cc	441158 <ferror@plt+0x3e8d8>  // b.lo, b.ul, b.last
  4412d0:	ldr	x2, [sp, #344]
  4412d4:	str	x2, [sp, #368]
  4412d8:	ldr	w0, [x2, x0]
  4412dc:	str	w0, [sp, #360]
  4412e0:	b	441158 <ferror@plt+0x3e8d8>
  4412e4:	mov	w0, #0x9                   	// #9
  4412e8:	ldr	x3, [sp, #304]
  4412ec:	sbfiz	x0, x0, #5, #32
  4412f0:	ldr	x1, [x25, #24]
  4412f4:	add	x2, sp, #0x398
  4412f8:	str	x1, [x3, x0]
  4412fc:	ldr	x3, [sp, #312]
  441300:	ldr	x1, [x25, #32]
  441304:	str	x1, [x3, x0]
  441308:	ldr	x1, [x25, #8]
  44130c:	ubfx	w1, w1, #11, #1
  441310:	str	w1, [x2, x0]
  441314:	b	441110 <ferror@plt+0x3e890>
  441318:	mov	w22, #0x0                   	// #0
  44131c:	mov	x3, x20
  441320:	mov	x2, x19
  441324:	add	x1, sp, #0x218
  441328:	mov	x0, x21
  44132c:	bl	442d68 <ferror@plt+0x404e8>
  441330:	b	441244 <ferror@plt+0x3e9c4>
  441334:	str	w23, [sp, #240]
  441338:	b	44103c <ferror@plt+0x3e7bc>
  44133c:	ldr	w0, [sp, #324]
  441340:	cbnz	w0, 44117c <ferror@plt+0x3e8fc>
  441344:	ldr	w0, [x25, #4]
  441348:	cmp	w0, #0x1
  44134c:	b.ne	44117c <ferror@plt+0x3e8fc>  // b.any
  441350:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441354:	mov	x0, x21
  441358:	add	x1, x1, #0x9c0
  44135c:	bl	4025d0 <strcmp@plt>
  441360:	cbnz	w0, 44117c <ferror@plt+0x3e8fc>
  441364:	ldp	x2, x3, [x25, #24]
  441368:	ldp	x4, x5, [sp, #288]
  44136c:	ldr	w1, [sp, #280]
  441370:	ldr	x0, [sp, #272]
  441374:	ldr	x6, [sp, #416]
  441378:	bl	442c98 <ferror@plt+0x40418>
  44137c:	mov	w7, w0
  441380:	cbz	w0, 441554 <ferror@plt+0x3ecd4>
  441384:	ldr	x0, [x25, #16]
  441388:	str	x0, [sp, #656]
  44138c:	ldr	x0, [sp, #408]
  441390:	str	x0, [sp, #376]
  441394:	ldr	x0, [x25, #32]
  441398:	str	x0, [sp, #672]
  44139c:	ldr	x0, [sp, #680]
  4413a0:	str	x0, [sp, #664]
  4413a4:	b	44117c <ferror@plt+0x3e8fc>
  4413a8:	ldp	x2, x3, [x25, #24]
  4413ac:	add	x6, sp, #0x260
  4413b0:	ldp	x4, x5, [sp, #288]
  4413b4:	ldr	w1, [sp, #280]
  4413b8:	ldr	x0, [sp, #272]
  4413bc:	bl	442c98 <ferror@plt+0x40418>
  4413c0:	mov	w7, w0
  4413c4:	cbz	w0, 441554 <ferror@plt+0x3ecd4>
  4413c8:	ldr	x1, [x25, #32]
  4413cc:	mov	w27, #0x1                   	// #1
  4413d0:	ldr	x0, [sp, #608]
  4413d4:	stp	x1, x0, [sp, #328]
  4413d8:	bl	4022c0 <strnlen@plt>
  4413dc:	ldr	x1, [sp, #328]
  4413e0:	cmp	x1, x0
  4413e4:	b.ls	441170 <ferror@plt+0x3e8f0>  // b.plast
  4413e8:	add	x0, x0, #0x1
  4413ec:	sub	w2, w1, w0
  4413f0:	str	w2, [sp, #364]
  4413f4:	ldr	x1, [sp, #336]
  4413f8:	add	x0, x1, x0
  4413fc:	str	x0, [sp, #352]
  441400:	b	441170 <ferror@plt+0x3e8f0>
  441404:	ldp	x2, x3, [x25, #24]
  441408:	add	x6, sp, #0x230
  44140c:	ldp	x4, x5, [sp, #288]
  441410:	str	w7, [sp, #328]
  441414:	ldr	w1, [sp, #280]
  441418:	ldr	x0, [sp, #272]
  44141c:	bl	442c98 <ferror@plt+0x40418>
  441420:	cbz	w0, 4423d4 <ferror@plt+0x3fb54>
  441424:	ldr	x2, [sp, #560]
  441428:	ldr	w7, [sp, #328]
  44142c:	ldr	w0, [x2, #8]
  441430:	cmp	w0, #0x3
  441434:	b.eq	4414b8 <ferror@plt+0x3ec38>  // b.none
  441438:	ldr	w0, [sp, #1256]
  44143c:	cbz	w0, 44146c <ferror@plt+0x3ebec>
  441440:	ldr	w0, [sp, #400]
  441444:	ldr	w1, [sp, #1256]
  441448:	cmp	w0, w1
  44144c:	b.ne	4423f8 <ferror@plt+0x3fb78>  // b.any
  441450:	mov	w2, w0
  441454:	str	w7, [sp, #224]
  441458:	ldr	x0, [sp, #384]
  44145c:	ldr	x1, [sp, #1248]
  441460:	bl	402590 <memcmp@plt>
  441464:	ldr	w7, [sp, #224]
  441468:	cbnz	w0, 4423f8 <ferror@plt+0x3fb78>
  44146c:	mov	w0, #0x1                   	// #1
  441470:	str	w0, [sp, #224]
  441474:	b	441134 <ferror@plt+0x3e8b4>
  441478:	mov	w0, #0x1                   	// #1
  44147c:	b	4412e8 <ferror@plt+0x3ea68>
  441480:	mov	w0, #0x2                   	// #2
  441484:	b	4412e8 <ferror@plt+0x3ea68>
  441488:	mov	w0, #0x3                   	// #3
  44148c:	b	4412e8 <ferror@plt+0x3ea68>
  441490:	mov	w0, #0x4                   	// #4
  441494:	b	4412e8 <ferror@plt+0x3ea68>
  441498:	mov	w0, #0x5                   	// #5
  44149c:	b	4412e8 <ferror@plt+0x3ea68>
  4414a0:	mov	w0, #0x6                   	// #6
  4414a4:	b	4412e8 <ferror@plt+0x3ea68>
  4414a8:	mov	w0, #0x7                   	// #7
  4414ac:	b	4412e8 <ferror@plt+0x3ea68>
  4414b0:	mov	w0, #0x8                   	// #8
  4414b4:	b	4412e8 <ferror@plt+0x3ea68>
  4414b8:	ldr	w0, [x2]
  4414bc:	cmp	w0, #0x4
  4414c0:	b.ne	441438 <ferror@plt+0x3ebb8>  // b.any
  4414c4:	add	x0, x2, #0xc
  4414c8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  4414cc:	add	x1, x1, #0x990
  4414d0:	str	x2, [sp, #224]
  4414d4:	str	w7, [sp, #328]
  4414d8:	bl	4025d0 <strcmp@plt>
  4414dc:	ldr	w7, [sp, #328]
  4414e0:	cbnz	w0, 441438 <ferror@plt+0x3ebb8>
  4414e4:	ldr	x2, [sp, #224]
  4414e8:	ldr	x3, [x25, #32]
  4414ec:	ldr	w0, [x2, #4]
  4414f0:	add	w1, w0, #0x10
  4414f4:	cmp	x3, x1
  4414f8:	b.hi	441438 <ferror@plt+0x3ebb8>  // b.pmore
  4414fc:	add	x1, x2, #0x10
  441500:	str	x1, [sp, #384]
  441504:	str	w0, [sp, #400]
  441508:	b	441438 <ferror@plt+0x3ebb8>
  44150c:	ldr	w1, [x0, #32]
  441510:	cmp	w23, w24
  441514:	str	w1, [sp, #264]
  441518:	b.ne	440f44 <ferror@plt+0x3e6c4>  // b.any
  44151c:	b	440f28 <ferror@plt+0x3e6a8>
  441520:	ldp	x19, x20, [sp, #288]
  441524:	str	w28, [sp, #232]
  441528:	ldr	w26, [sp, #280]
  44152c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441530:	mov	w2, #0x0                   	// #0
  441534:	add	x1, x1, #0x8b8
  441538:	mov	w22, #0x0                   	// #0
  44153c:	ldr	x21, [sp, #272]
  441540:	mov	x0, x20
  441544:	ldr	x23, [sp, #376]
  441548:	blr	x19
  44154c:	str	wzr, [sp, #240]
  441550:	b	4411fc <ferror@plt+0x3e97c>
  441554:	ldr	w26, [sp, #280]
  441558:	mov	w22, #0x0                   	// #0
  44155c:	str	w28, [sp, #232]
  441560:	str	w7, [sp, #240]
  441564:	ldr	x21, [sp, #272]
  441568:	ldp	x19, x20, [sp, #288]
  44156c:	ldr	x23, [sp, #376]
  441570:	b	4411fc <ferror@plt+0x3e97c>
  441574:	ldp	x2, x3, [x25, #24]
  441578:	add	x24, sp, #0x200
  44157c:	mov	x6, x24
  441580:	mov	x5, x20
  441584:	mov	x4, x19
  441588:	mov	w1, w26
  44158c:	mov	x0, x21
  441590:	str	w7, [sp, #264]
  441594:	mov	w22, #0x0                   	// #0
  441598:	bl	442c98 <ferror@plt+0x40418>
  44159c:	str	w0, [sp, #240]
  4415a0:	cbz	w0, 4411fc <ferror@plt+0x3e97c>
  4415a4:	ldr	w7, [sp, #264]
  4415a8:	add	x6, sp, #0x218
  4415ac:	ldr	x0, [sp, #392]
  4415b0:	sub	w7, w7, #0x1
  4415b4:	mov	x5, x20
  4415b8:	mov	x4, x19
  4415bc:	mov	w1, w26
  4415c0:	add	x7, x0, x7, lsl #6
  4415c4:	mov	x0, x21
  4415c8:	str	x7, [sp, #240]
  4415cc:	ldp	x2, x3, [x7, #24]
  4415d0:	bl	442c98 <ferror@plt+0x40418>
  4415d4:	mov	w22, w0
  4415d8:	cbz	w0, 4423c8 <ferror@plt+0x3fb48>
  4415dc:	mov	x3, x20
  4415e0:	mov	x2, x19
  4415e4:	mov	x0, x21
  4415e8:	mov	x1, #0x18                  	// #24
  4415ec:	bl	43e8a8 <ferror@plt+0x3c028>
  4415f0:	mov	x22, x0
  4415f4:	cbz	x0, 4427d8 <ferror@plt+0x3ff58>
  4415f8:	ldr	x0, [x25, #32]
  4415fc:	mov	x1, #0x18                  	// #24
  441600:	ldr	x7, [sp, #240]
  441604:	cmp	x0, #0x17
  441608:	udiv	x12, x0, x1
  44160c:	ldr	x11, [sp, #512]
  441610:	ldr	x6, [x7, #32]
  441614:	ldr	x4, [sp, #536]
  441618:	b.ls	4427b4 <ferror@plt+0x3ff34>  // b.plast
  44161c:	cmp	x0, #0x17f
  441620:	b.ls	442824 <ferror@plt+0x3ffa4>  // b.plast
  441624:	lsr	x1, x12, #4
  441628:	mov	x2, #0x180                 	// #384
  44162c:	movi	v4.4s, #0x0
  441630:	mov	x0, x11
  441634:	movi	v17.16b, #0xf
  441638:	str	d8, [sp, #176]
  44163c:	mvni	v6.4s, #0x0
  441640:	madd	x1, x1, x2, x11
  441644:	movi	v5.4s, #0x1
  441648:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  44164c:	ldr	q16, [x2, #2640]
  441650:	ldr	b3, [x0, #28]
  441654:	ldr	b0, [x0, #4]
  441658:	ldr	b2, [x0, #52]
  44165c:	ldr	b1, [x0, #76]
  441660:	mov	v0.b[1], v3.b[0]
  441664:	ldr	b7, [x0, #100]
  441668:	ldr	b23, [x0, #124]
  44166c:	ldr	b24, [x0, #148]
  441670:	ldr	b21, [x0, #172]
  441674:	mov	v0.b[2], v2.b[0]
  441678:	ldr	b31, [x0, #196]
  44167c:	ldr	b28, [x0, #220]
  441680:	ldr	b25, [x0, #244]
  441684:	ldr	b22, [x0, #268]
  441688:	mov	v0.b[3], v1.b[0]
  44168c:	ldr	b20, [x0, #292]
  441690:	ldr	h3, [x0, #30]
  441694:	ldr	h2, [x0, #6]
  441698:	ldr	b18, [x0, #316]
  44169c:	mov	v0.b[4], v7.b[0]
  4416a0:	ldr	h1, [x0, #54]
  4416a4:	mov	v2.h[1], v3.h[0]
  4416a8:	ldr	b7, [x0, #340]
  4416ac:	ldr	h8, [x0, #78]
  4416b0:	ldr	b3, [x0, #364]
  4416b4:	mov	v0.b[5], v23.b[0]
  4416b8:	ldr	h23, [x0, #222]
  4416bc:	mov	v2.h[2], v1.h[0]
  4416c0:	ldr	h1, [x0, #198]
  4416c4:	ldr	h19, [x0, #102]
  4416c8:	ldr	h29, [x0, #270]
  4416cc:	mov	v0.b[6], v24.b[0]
  4416d0:	ldr	h30, [x0, #126]
  4416d4:	mov	v1.h[1], v23.h[0]
  4416d8:	ldr	h26, [x0, #294]
  4416dc:	mov	v2.h[3], v8.h[0]
  4416e0:	ldr	h8, [x0, #246]
  4416e4:	ldr	h27, [x0, #150]
  4416e8:	add	x0, x0, #0x180
  4416ec:	mov	v0.b[7], v21.b[0]
  4416f0:	ldur	h23, [x0, #-66]
  4416f4:	mov	v1.h[2], v8.h[0]
  4416f8:	ldur	h24, [x0, #-210]
  4416fc:	mov	v2.h[4], v19.h[0]
  441700:	ldur	h21, [x0, #-42]
  441704:	ldur	h19, [x0, #-18]
  441708:	cmp	x1, x0
  44170c:	mov	v0.b[8], v31.b[0]
  441710:	mov	v1.h[3], v29.h[0]
  441714:	mov	v2.h[5], v30.h[0]
  441718:	mov	v0.b[9], v28.b[0]
  44171c:	mov	v1.h[4], v26.h[0]
  441720:	mov	v2.h[6], v27.h[0]
  441724:	mov	v0.b[10], v25.b[0]
  441728:	mov	v1.h[5], v23.h[0]
  44172c:	mov	v2.h[7], v24.h[0]
  441730:	mov	v0.b[11], v22.b[0]
  441734:	mov	v1.h[6], v21.h[0]
  441738:	cmeq	v2.8h, v2.8h, #0
  44173c:	mov	v0.b[12], v20.b[0]
  441740:	mov	v1.h[7], v19.h[0]
  441744:	mov	v0.b[13], v18.b[0]
  441748:	cmeq	v1.8h, v1.8h, #0
  44174c:	mov	v0.b[14], v7.b[0]
  441750:	mov	v0.b[15], v3.b[0]
  441754:	and	v0.16b, v0.16b, v17.16b
  441758:	uxtl	v3.8h, v0.8b
  44175c:	uxtl2	v0.8h, v0.16b
  441760:	uaddw	v18.4s, v6.4s, v3.4h
  441764:	uaddw2	v3.4s, v6.4s, v3.8h
  441768:	uaddw	v7.4s, v6.4s, v0.4h
  44176c:	uaddw2	v0.4s, v6.4s, v0.8h
  441770:	cmhs	v18.4s, v5.4s, v18.4s
  441774:	cmhs	v3.4s, v5.4s, v3.4s
  441778:	cmhs	v7.4s, v5.4s, v7.4s
  44177c:	cmhs	v0.4s, v5.4s, v0.4s
  441780:	xtn	v19.4h, v18.4s
  441784:	xtn2	v19.8h, v3.4s
  441788:	xtn	v3.4h, v7.4s
  44178c:	xtn2	v3.8h, v0.4s
  441790:	bic	v2.16b, v19.16b, v2.16b
  441794:	bic	v0.16b, v3.16b, v1.16b
  441798:	sxtl	v7.4s, v2.4h
  44179c:	sxtl2	v1.4s, v2.8h
  4417a0:	sxtl	v3.4s, v0.4h
  4417a4:	sxtl2	v0.4s, v0.8h
  4417a8:	sxtl	v2.2d, v7.2s
  4417ac:	and	v2.16b, v16.16b, v2.16b
  4417b0:	ssubw2	v2.2d, v2.2d, v7.4s
  4417b4:	ssubw	v2.2d, v2.2d, v1.2s
  4417b8:	ssubw2	v1.2d, v2.2d, v1.4s
  4417bc:	ssubw	v1.2d, v1.2d, v3.2s
  4417c0:	ssubw2	v1.2d, v1.2d, v3.4s
  4417c4:	ssubw	v1.2d, v1.2d, v0.2s
  4417c8:	ssubw2	v0.2d, v1.2d, v0.4s
  4417cc:	add	v4.2d, v4.2d, v0.2d
  4417d0:	b.ne	441650 <ferror@plt+0x3edd0>  // b.any
  4417d4:	addp	d4, v4.2d
  4417d8:	and	x1, x12, #0xfffffffffffffff0
  4417dc:	mov	x0, #0x18                  	// #24
  4417e0:	cmp	x12, x1
  4417e4:	ldr	d8, [sp, #176]
  4417e8:	madd	x0, x1, x0, x11
  4417ec:	mov	x25, v4.d[0]
  4417f0:	b.eq	4419cc <ferror@plt+0x3f14c>  // b.none
  4417f4:	ldrb	w2, [x0, #4]
  4417f8:	and	w2, w2, #0xf
  4417fc:	sub	w2, w2, #0x1
  441800:	cmp	w2, #0x1
  441804:	b.ls	442628 <ferror@plt+0x3fda8>  // b.plast
  441808:	add	x2, x1, #0x1
  44180c:	cmp	x12, x2
  441810:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441814:	ldrb	w2, [x0, #28]
  441818:	and	w2, w2, #0xf
  44181c:	sub	w2, w2, #0x1
  441820:	cmp	w2, #0x1
  441824:	b.ls	442618 <ferror@plt+0x3fd98>  // b.plast
  441828:	add	x2, x1, #0x2
  44182c:	cmp	x12, x2
  441830:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441834:	ldrb	w2, [x0, #52]
  441838:	and	w2, w2, #0xf
  44183c:	sub	w2, w2, #0x1
  441840:	cmp	w2, #0x1
  441844:	b.ls	442608 <ferror@plt+0x3fd88>  // b.plast
  441848:	add	x2, x1, #0x3
  44184c:	cmp	x12, x2
  441850:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441854:	ldrb	w2, [x0, #76]
  441858:	and	w2, w2, #0xf
  44185c:	sub	w2, w2, #0x1
  441860:	cmp	w2, #0x1
  441864:	b.ls	4425f8 <ferror@plt+0x3fd78>  // b.plast
  441868:	add	x2, x1, #0x4
  44186c:	cmp	x12, x2
  441870:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441874:	ldrb	w2, [x0, #100]
  441878:	and	w2, w2, #0xf
  44187c:	sub	w2, w2, #0x1
  441880:	cmp	w2, #0x1
  441884:	b.ls	442814 <ferror@plt+0x3ff94>  // b.plast
  441888:	add	x2, x1, #0x5
  44188c:	cmp	x12, x2
  441890:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441894:	ldrb	w2, [x0, #124]
  441898:	and	w2, w2, #0xf
  44189c:	sub	w2, w2, #0x1
  4418a0:	cmp	w2, #0x1
  4418a4:	b.ls	442804 <ferror@plt+0x3ff84>  // b.plast
  4418a8:	add	x2, x1, #0x6
  4418ac:	cmp	x12, x2
  4418b0:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  4418b4:	ldrb	w2, [x0, #148]
  4418b8:	and	w2, w2, #0xf
  4418bc:	sub	w2, w2, #0x1
  4418c0:	cmp	w2, #0x1
  4418c4:	b.ls	4427f4 <ferror@plt+0x3ff74>  // b.plast
  4418c8:	add	x2, x1, #0x7
  4418cc:	cmp	x12, x2
  4418d0:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  4418d4:	ldrb	w2, [x0, #172]
  4418d8:	and	w2, w2, #0xf
  4418dc:	sub	w2, w2, #0x1
  4418e0:	cmp	w2, #0x1
  4418e4:	b.ls	4427e4 <ferror@plt+0x3ff64>  // b.plast
  4418e8:	add	x2, x1, #0x8
  4418ec:	cmp	x12, x2
  4418f0:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  4418f4:	ldrb	w2, [x0, #196]
  4418f8:	and	w2, w2, #0xf
  4418fc:	sub	w2, w2, #0x1
  441900:	cmp	w2, #0x1
  441904:	b.ls	442894 <ferror@plt+0x40014>  // b.plast
  441908:	add	x2, x1, #0x9
  44190c:	cmp	x12, x2
  441910:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441914:	ldrb	w2, [x0, #220]
  441918:	and	w2, w2, #0xf
  44191c:	sub	w2, w2, #0x1
  441920:	cmp	w2, #0x1
  441924:	b.ls	442884 <ferror@plt+0x40004>  // b.plast
  441928:	add	x2, x1, #0xa
  44192c:	cmp	x12, x2
  441930:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441934:	ldrb	w2, [x0, #244]
  441938:	and	w2, w2, #0xf
  44193c:	sub	w2, w2, #0x1
  441940:	cmp	w2, #0x1
  441944:	b.ls	442874 <ferror@plt+0x3fff4>  // b.plast
  441948:	add	x2, x1, #0xb
  44194c:	cmp	x12, x2
  441950:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441954:	ldrb	w2, [x0, #268]
  441958:	and	w2, w2, #0xf
  44195c:	sub	w2, w2, #0x1
  441960:	cmp	w2, #0x1
  441964:	b.ls	442864 <ferror@plt+0x3ffe4>  // b.plast
  441968:	add	x2, x1, #0xc
  44196c:	cmp	x12, x2
  441970:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441974:	ldrb	w2, [x0, #292]
  441978:	and	w2, w2, #0xf
  44197c:	sub	w2, w2, #0x1
  441980:	cmp	w2, #0x1
  441984:	b.ls	442854 <ferror@plt+0x3ffd4>  // b.plast
  441988:	add	x2, x1, #0xd
  44198c:	cmp	x12, x2
  441990:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  441994:	ldrb	w2, [x0, #316]
  441998:	and	w2, w2, #0xf
  44199c:	sub	w2, w2, #0x1
  4419a0:	cmp	w2, #0x1
  4419a4:	b.ls	442844 <ferror@plt+0x3ffc4>  // b.plast
  4419a8:	add	x1, x1, #0xe
  4419ac:	cmp	x12, x1
  4419b0:	b.ls	4419cc <ferror@plt+0x3f14c>  // b.plast
  4419b4:	ldrb	w1, [x0, #340]
  4419b8:	add	x0, x0, #0x150
  4419bc:	and	w1, w1, #0xf
  4419c0:	sub	w1, w1, #0x1
  4419c4:	cmp	w1, #0x1
  4419c8:	b.ls	442834 <ferror@plt+0x3ffb4>  // b.plast
  4419cc:	mov	x7, #0x18                  	// #24
  4419d0:	mov	x3, x20
  4419d4:	mov	x2, x19
  4419d8:	mov	x0, x21
  4419dc:	mul	x8, x25, x7
  4419e0:	stp	x4, x6, [sp, #264]
  4419e4:	mov	x1, x8
  4419e8:	str	x8, [sp, #240]
  4419ec:	stp	x11, x12, [sp, #280]
  4419f0:	bl	43e8a8 <ferror@plt+0x3c028>
  4419f4:	mov	x7, #0x18                  	// #24
  4419f8:	mov	x5, x0
  4419fc:	ldr	x8, [sp, #240]
  441a00:	ldp	x4, x6, [sp, #264]
  441a04:	ldp	x11, x12, [sp, #280]
  441a08:	cbz	x0, 442504 <ferror@plt+0x3fc84>
  441a0c:	cbz	x23, 442528 <ferror@plt+0x3fca8>
  441a10:	mov	x1, #0x0                   	// #0
  441a14:	mov	w3, #0x0                   	// #0
  441a18:	ldrb	w0, [x11, #4]
  441a1c:	add	x1, x1, #0x1
  441a20:	and	w0, w0, #0xf
  441a24:	sub	w0, w0, #0x1
  441a28:	cmp	w0, #0x1
  441a2c:	b.hi	441a98 <ferror@plt+0x3f218>  // b.pmore
  441a30:	ldrh	w2, [x11, #6]
  441a34:	umull	x0, w3, w7
  441a38:	add	x9, x5, x0
  441a3c:	cbz	w2, 441a98 <ferror@plt+0x3f218>
  441a40:	ldr	w2, [x11]
  441a44:	add	w3, w3, #0x1
  441a48:	add	x10, x4, x2
  441a4c:	cmp	x6, x2
  441a50:	b.ls	4424d0 <ferror@plt+0x3fc50>  // b.plast
  441a54:	str	x10, [x5, x0]
  441a58:	ldr	x2, [x23]
  441a5c:	ldr	x0, [x11, #8]
  441a60:	cmp	x2, x0
  441a64:	b.hi	441a84 <ferror@plt+0x3f204>  // b.pmore
  441a68:	ldr	x13, [x23, #16]
  441a6c:	sub	x10, x0, x2
  441a70:	add	x2, x2, x13
  441a74:	cmp	x2, x0
  441a78:	b.ls	441a84 <ferror@plt+0x3f204>  // b.plast
  441a7c:	ldr	x0, [x23, #8]
  441a80:	ldr	x0, [x0, x10]
  441a84:	ldr	x2, [sp, #200]
  441a88:	add	x0, x2, x0
  441a8c:	str	x0, [x9, #8]
  441a90:	ldr	x0, [x11, #16]
  441a94:	str	x0, [x9, #16]
  441a98:	add	x11, x11, #0x18
  441a9c:	cmp	x12, x1
  441aa0:	b.hi	441a18 <ferror@plt+0x3f198>  // b.pmore
  441aa4:	mov	x0, x5
  441aa8:	mov	x1, x25
  441aac:	mov	x2, #0x18                  	// #24
  441ab0:	adrp	x3, 43f000 <ferror@plt+0x3c780>
  441ab4:	add	x3, x3, #0x1a8
  441ab8:	str	x5, [sp, #240]
  441abc:	bl	447768 <ferror@plt+0x44ee8>
  441ac0:	str	x25, [x22, #16]
  441ac4:	ldr	x5, [sp, #240]
  441ac8:	stp	xzr, x5, [x22]
  441acc:	mov	x1, x24
  441ad0:	mov	x0, x21
  441ad4:	mov	x3, x20
  441ad8:	mov	x2, x19
  441adc:	bl	442d68 <ferror@plt+0x404e8>
  441ae0:	mov	w0, #0x1                   	// #1
  441ae4:	str	w0, [x28]
  441ae8:	add	x1, x21, #0x30
  441aec:	ldr	w0, [x21, #8]
  441af0:	cbnz	w0, 442498 <ferror@plt+0x3fc18>
  441af4:	ldr	x0, [x21, #48]
  441af8:	cbz	x0, 44248c <ferror@plt+0x3fc0c>
  441afc:	mov	x1, x0
  441b00:	ldr	x0, [x0]
  441b04:	b	441af8 <ferror@plt+0x3f278>
  441b08:	mov	w25, #0x0                   	// #0
  441b0c:	ldr	x1, [sp, #248]
  441b10:	mov	x3, x20
  441b14:	mov	x2, x19
  441b18:	mov	x0, x21
  441b1c:	bl	442d68 <ferror@plt+0x404e8>
  441b20:	ldr	x1, [sp, #256]
  441b24:	mov	x0, x21
  441b28:	mov	x3, x20
  441b2c:	mov	x2, x19
  441b30:	bl	442d68 <ferror@plt+0x404e8>
  441b34:	ldr	x0, [sp, #384]
  441b38:	cbz	x0, 441c44 <ferror@plt+0x3f3c4>
  441b3c:	ldr	w22, [sp, #400]
  441b40:	mov	x0, #0x21                  	// #33
  441b44:	mov	x3, x20
  441b48:	mov	x2, x19
  441b4c:	add	x8, x0, w22, uxtw #1
  441b50:	mov	x0, x21
  441b54:	mov	x1, x8
  441b58:	str	x8, [sp, #240]
  441b5c:	bl	43e8a8 <ferror@plt+0x3c028>
  441b60:	mov	x24, x0
  441b64:	mov	w6, w22
  441b68:	cbz	x0, 441c44 <ferror@plt+0x3f3c4>
  441b6c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441b70:	add	x2, x2, #0xa20
  441b74:	add	x4, x0, #0x19
  441b78:	ldr	x8, [sp, #240]
  441b7c:	ldp	x0, x1, [x2]
  441b80:	stp	x0, x1, [x24]
  441b84:	ldrb	w0, [x2, #24]
  441b88:	ldr	x1, [x2, #16]
  441b8c:	str	x1, [x24, #16]
  441b90:	strb	w0, [x24, #24]
  441b94:	cbz	x6, 441bec <ferror@plt+0x3f36c>
  441b98:	mov	x2, #0x0                   	// #0
  441b9c:	mov	w7, #0x2f                  	// #47
  441ba0:	ldr	x0, [sp, #384]
  441ba4:	ldrb	w0, [x0, x2]
  441ba8:	and	w1, w0, #0xf
  441bac:	lsr	w0, w0, #4
  441bb0:	add	w3, w1, #0x30
  441bb4:	cmp	w0, #0x9
  441bb8:	add	w5, w0, #0x30
  441bbc:	add	w0, w0, #0x57
  441bc0:	csel	w0, w0, w5, hi  // hi = pmore
  441bc4:	cmp	w1, #0x9
  441bc8:	add	w1, w1, #0x57
  441bcc:	strb	w0, [x4]
  441bd0:	csel	w0, w1, w3, hi  // hi = pmore
  441bd4:	strb	w0, [x4, #1]
  441bd8:	cbz	x2, 441d20 <ferror@plt+0x3f4a0>
  441bdc:	add	x2, x2, #0x1
  441be0:	add	x4, x4, #0x2
  441be4:	cmp	x6, x2
  441be8:	b.ne	441ba0 <ferror@plt+0x3f320>  // b.any
  441bec:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441bf0:	add	x0, x0, #0xa40
  441bf4:	strb	wzr, [x4, #6]
  441bf8:	add	x3, sp, #0x300
  441bfc:	mov	x2, x20
  441c00:	str	x8, [sp, #240]
  441c04:	ldr	w1, [x0]
  441c08:	ldrh	w0, [x0, #4]
  441c0c:	str	w1, [x4]
  441c10:	mov	x1, x19
  441c14:	strh	w0, [x4, #4]
  441c18:	mov	x0, x24
  441c1c:	bl	43f060 <ferror@plt+0x3c7e0>
  441c20:	mov	w22, w0
  441c24:	ldr	x8, [sp, #240]
  441c28:	mov	x1, x24
  441c2c:	mov	x4, x20
  441c30:	mov	x3, x19
  441c34:	mov	x0, x21
  441c38:	mov	x2, x8
  441c3c:	bl	43e770 <ferror@plt+0x3bef0>
  441c40:	tbz	w22, #31, 442420 <ferror@plt+0x3fba0>
  441c44:	ldr	w0, [sp, #224]
  441c48:	cbnz	w0, 441d08 <ferror@plt+0x3f488>
  441c4c:	cbz	x23, 441c64 <ferror@plt+0x3f3e4>
  441c50:	add	x1, x23, #0x18
  441c54:	mov	x3, x20
  441c58:	mov	x2, x19
  441c5c:	mov	x0, x21
  441c60:	bl	442d68 <ferror@plt+0x404e8>
  441c64:	ldr	x0, [sp, #368]
  441c68:	cbz	x0, 441de8 <ferror@plt+0x3f568>
  441c6c:	ldr	x1, [sp, #216]
  441c70:	mov	x2, x0
  441c74:	mov	x4, x20
  441c78:	mov	x3, x19
  441c7c:	mov	x0, x21
  441c80:	bl	43fa78 <ferror@plt+0x3d1f8>
  441c84:	mov	w22, w0
  441c88:	tbnz	w0, #31, 441de8 <ferror@plt+0x3f568>
  441c8c:	ldr	w0, [sp, #360]
  441c90:	cbnz	w0, 441d3c <ferror@plt+0x3f4bc>
  441c94:	mov	x3, x20
  441c98:	mov	x2, x19
  441c9c:	add	x1, sp, #0x248
  441ca0:	mov	x0, x21
  441ca4:	bl	442d68 <ferror@plt+0x404e8>
  441ca8:	cbnz	w27, 4425cc <ferror@plt+0x3fd4c>
  441cac:	ldp	x3, x6, [sp, #200]
  441cb0:	mov	w0, #0x1                   	// #1
  441cb4:	ldr	x1, [sp, #1216]
  441cb8:	stp	x1, xzr, [sp]
  441cbc:	mov	w2, w22
  441cc0:	str	wzr, [sp, #16]
  441cc4:	mov	x7, x28
  441cc8:	str	w0, [sp, #24]
  441ccc:	mov	x5, x20
  441cd0:	str	xzr, [sp, #32]
  441cd4:	mov	x4, x19
  441cd8:	str	wzr, [sp, #40]
  441cdc:	mov	x0, x21
  441ce0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  441ce4:	add	x1, x1, #0x148
  441ce8:	bl	440be0 <ferror@plt+0x3e360>
  441cec:	mov	w23, w0
  441cf0:	mov	x2, x20
  441cf4:	mov	x1, x19
  441cf8:	tbz	w0, #31, 440c90 <ferror@plt+0x3e410>
  441cfc:	mov	w0, w22
  441d00:	bl	43f110 <ferror@plt+0x3c890>
  441d04:	b	440c98 <ferror@plt+0x3e418>
  441d08:	mov	x3, x20
  441d0c:	mov	x2, x19
  441d10:	add	x1, sp, #0x230
  441d14:	mov	x0, x21
  441d18:	bl	442d68 <ferror@plt+0x404e8>
  441d1c:	b	441c4c <ferror@plt+0x3f3cc>
  441d20:	strb	w7, [x4, #2]
  441d24:	add	x0, x4, #0x3
  441d28:	cmp	x6, #0x1
  441d2c:	mov	x4, x0
  441d30:	b.eq	441bec <ferror@plt+0x3f36c>  // b.none
  441d34:	mov	x2, #0x1                   	// #1
  441d38:	b	441ba0 <ferror@plt+0x3f320>
  441d3c:	add	x2, sp, #0x300
  441d40:	mov	w1, w22
  441d44:	mov	w0, #0x0                   	// #0
  441d48:	bl	402740 <__fxstat@plt>
  441d4c:	tbnz	w0, #31, 4425ac <ferror@plt+0x3fd2c>
  441d50:	ldr	x3, [sp, #816]
  441d54:	add	x24, sp, #0x278
  441d58:	mov	x6, x24
  441d5c:	mov	x5, x20
  441d60:	mov	x4, x19
  441d64:	mov	w1, w22
  441d68:	mov	x0, x21
  441d6c:	mov	x2, #0x0                   	// #0
  441d70:	bl	442c98 <ferror@plt+0x40418>
  441d74:	cbz	w0, 441dd8 <ferror@plt+0x3f558>
  441d78:	ldr	x2, [sp, #632]
  441d7c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  441d80:	ldr	x3, [sp, #816]
  441d84:	add	x0, x0, #0xa60
  441d88:	add	x0, x0, #0x4e0
  441d8c:	mov	w23, #0xffffffff            	// #-1
  441d90:	add	x3, x2, x3
  441d94:	b	441dac <ferror@plt+0x3f52c>
  441d98:	ldrb	w1, [x2], #1
  441d9c:	eor	w1, w1, w23
  441da0:	and	x1, x1, #0xff
  441da4:	ldr	w1, [x0, x1, lsl #2]
  441da8:	eor	w23, w1, w23, lsr #8
  441dac:	cmp	x3, x2
  441db0:	b.hi	441d98 <ferror@plt+0x3f518>  // b.pmore
  441db4:	mov	x0, x21
  441db8:	mov	x1, x24
  441dbc:	mov	x3, x20
  441dc0:	mov	x2, x19
  441dc4:	bl	442d68 <ferror@plt+0x404e8>
  441dc8:	mvn	w23, w23
  441dcc:	ldr	w0, [sp, #360]
  441dd0:	cmp	w23, w0
  441dd4:	b.eq	441c94 <ferror@plt+0x3f414>  // b.none
  441dd8:	mov	w0, w22
  441ddc:	mov	x2, x20
  441de0:	mov	x1, x19
  441de4:	bl	43f110 <ferror@plt+0x3c890>
  441de8:	ldr	w0, [sp, #232]
  441dec:	cbnz	w0, 4423b0 <ferror@plt+0x3fb30>
  441df0:	ldr	x0, [sp, #336]
  441df4:	str	xzr, [sp, #632]
  441df8:	cbz	x0, 442344 <ferror@plt+0x3fac4>
  441dfc:	ldr	x23, [sp, #216]
  441e00:	mov	x2, x0
  441e04:	mov	x4, x20
  441e08:	mov	x3, x19
  441e0c:	mov	x0, x21
  441e10:	mov	x1, x23
  441e14:	bl	43fa78 <ferror@plt+0x3d1f8>
  441e18:	mov	w22, w0
  441e1c:	tbnz	w0, #31, 442344 <ferror@plt+0x3fac4>
  441e20:	mov	w8, #0x1                   	// #1
  441e24:	str	w8, [sp, #24]
  441e28:	ldp	x3, x6, [sp, #200]
  441e2c:	add	x0, sp, #0x278
  441e30:	ldr	x8, [sp, #352]
  441e34:	str	x8, [sp, #32]
  441e38:	ldr	w8, [sp, #364]
  441e3c:	mov	x7, x28
  441e40:	ldr	x1, [sp, #1216]
  441e44:	mov	x5, x20
  441e48:	mov	x4, x19
  441e4c:	stp	x1, x0, [sp]
  441e50:	mov	w2, w22
  441e54:	str	wzr, [sp, #16]
  441e58:	mov	x1, x23
  441e5c:	str	w8, [sp, #40]
  441e60:	mov	x0, x21
  441e64:	bl	440be0 <ferror@plt+0x3e360>
  441e68:	mov	w23, w0
  441e6c:	mov	x3, x20
  441e70:	mov	x2, x19
  441e74:	add	x1, sp, #0x260
  441e78:	mov	x0, x21
  441e7c:	bl	442d68 <ferror@plt+0x404e8>
  441e80:	tbnz	w23, #31, 4425a0 <ferror@plt+0x3fd20>
  441e84:	ldr	x23, [sp, #904]
  441e88:	cbz	x23, 442008 <ferror@plt+0x3f788>
  441e8c:	ldr	x24, [sp, #896]
  441e90:	ldr	x27, [sp, #936]
  441e94:	adds	x3, x24, x23
  441e98:	csel	x3, x3, xzr, pl  // pl = nfrst
  441e9c:	cbz	x27, 441ebc <ferror@plt+0x3f63c>
  441ea0:	ldr	x0, [sp, #928]
  441ea4:	cbz	x24, 442018 <ferror@plt+0x3f798>
  441ea8:	cmp	x24, x0
  441eac:	b.gt	442018 <ferror@plt+0x3f798>
  441eb0:	add	x0, x0, x27
  441eb4:	cmp	x3, x0
  441eb8:	csel	x3, x3, x0, ge  // ge = tcont
  441ebc:	ldr	x28, [sp, #968]
  441ec0:	cbz	x28, 441ee0 <ferror@plt+0x3f660>
  441ec4:	ldr	x0, [sp, #960]
  441ec8:	cbz	x24, 442038 <ferror@plt+0x3f7b8>
  441ecc:	cmp	x24, x0
  441ed0:	b.gt	442038 <ferror@plt+0x3f7b8>
  441ed4:	add	x0, x0, x28
  441ed8:	cmp	x3, x0
  441edc:	csel	x3, x3, x0, ge  // ge = tcont
  441ee0:	ldr	x13, [sp, #1000]
  441ee4:	cbz	x13, 441f00 <ferror@plt+0x3f680>
  441ee8:	ldr	x0, [sp, #992]
  441eec:	cbnz	x24, 4423a4 <ferror@plt+0x3fb24>
  441ef0:	mov	x24, x0
  441ef4:	add	x0, x0, x13
  441ef8:	cmp	x3, x0
  441efc:	csel	x3, x3, x0, ge  // ge = tcont
  441f00:	ldr	x12, [sp, #1032]
  441f04:	cbz	x12, 441f20 <ferror@plt+0x3f6a0>
  441f08:	ldr	x0, [sp, #1024]
  441f0c:	cbnz	x24, 442360 <ferror@plt+0x3fae0>
  441f10:	mov	x24, x0
  441f14:	add	x0, x0, x12
  441f18:	cmp	x3, x0
  441f1c:	csel	x3, x3, x0, ge  // ge = tcont
  441f20:	ldr	x11, [sp, #1064]
  441f24:	cbz	x11, 441f40 <ferror@plt+0x3f6c0>
  441f28:	ldr	x0, [sp, #1056]
  441f2c:	cbnz	x24, 44236c <ferror@plt+0x3faec>
  441f30:	mov	x24, x0
  441f34:	add	x0, x0, x11
  441f38:	cmp	x3, x0
  441f3c:	csel	x3, x3, x0, ge  // ge = tcont
  441f40:	ldr	x10, [sp, #1096]
  441f44:	cbz	x10, 441f60 <ferror@plt+0x3f6e0>
  441f48:	ldr	x0, [sp, #1088]
  441f4c:	cbnz	x24, 442378 <ferror@plt+0x3faf8>
  441f50:	mov	x24, x0
  441f54:	add	x0, x0, x10
  441f58:	cmp	x3, x0
  441f5c:	csel	x3, x3, x0, ge  // ge = tcont
  441f60:	ldr	x9, [sp, #1128]
  441f64:	cbz	x9, 441f80 <ferror@plt+0x3f700>
  441f68:	ldr	x0, [sp, #1120]
  441f6c:	cbnz	x24, 442384 <ferror@plt+0x3fb04>
  441f70:	mov	x24, x0
  441f74:	add	x0, x0, x9
  441f78:	cmp	x3, x0
  441f7c:	csel	x3, x3, x0, ge  // ge = tcont
  441f80:	ldr	x8, [sp, #1160]
  441f84:	cbz	x8, 441fa0 <ferror@plt+0x3f720>
  441f88:	ldr	x0, [sp, #1152]
  441f8c:	cbnz	x24, 442390 <ferror@plt+0x3fb10>
  441f90:	mov	x24, x0
  441f94:	add	x0, x0, x8
  441f98:	cmp	x3, x0
  441f9c:	csel	x3, x3, x0, ge  // ge = tcont
  441fa0:	ldr	x7, [sp, #1192]
  441fa4:	cbz	x7, 441fc4 <ferror@plt+0x3f744>
  441fa8:	ldr	x0, [sp, #1184]
  441fac:	cbz	x24, 44239c <ferror@plt+0x3fb1c>
  441fb0:	cmp	x0, x24
  441fb4:	csel	x24, x24, x0, ge  // ge = tcont
  441fb8:	add	x0, x0, x7
  441fbc:	cmp	x3, x0
  441fc0:	csel	x3, x3, x0, ge  // ge = tcont
  441fc4:	cmp	x24, #0x0
  441fc8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  441fcc:	b.ne	442040 <ferror@plt+0x3f7c0>  // b.any
  441fd0:	mov	x2, x20
  441fd4:	mov	x1, x19
  441fd8:	mov	w0, w26
  441fdc:	bl	43f110 <ferror@plt+0x3c890>
  441fe0:	mov	w22, w0
  441fe4:	cbnz	w0, 442000 <ferror@plt+0x3f780>
  441fe8:	cbz	w25, 440c5c <ferror@plt+0x3e3dc>
  441fec:	mov	x23, #0x0                   	// #0
  441ff0:	mov	w27, #0x0                   	// #0
  441ff4:	str	wzr, [sp, #224]
  441ff8:	str	wzr, [sp, #232]
  441ffc:	b	44131c <ferror@plt+0x3ea9c>
  442000:	mov	w23, #0x1                   	// #1
  442004:	b	440c98 <ferror@plt+0x3e418>
  442008:	ldr	x27, [sp, #936]
  44200c:	cbz	x27, 442020 <ferror@plt+0x3f7a0>
  442010:	ldr	x0, [sp, #928]
  442014:	mov	x3, #0x0                   	// #0
  442018:	mov	x24, x0
  44201c:	b	441eb0 <ferror@plt+0x3f630>
  442020:	ldr	x27, [sp, #968]
  442024:	cbz	x27, 4427a4 <ferror@plt+0x3ff24>
  442028:	ldr	x0, [sp, #960]
  44202c:	mov	x28, x27
  442030:	mov	x3, #0x0                   	// #0
  442034:	mov	x27, #0x0                   	// #0
  442038:	mov	x24, x0
  44203c:	b	441ed4 <ferror@plt+0x3f654>
  442040:	add	x0, sp, #0x300
  442044:	sub	x3, x3, x24
  442048:	mov	x6, x0
  44204c:	mov	x5, x20
  442050:	mov	x4, x19
  442054:	mov	x2, x24
  442058:	mov	w1, w26
  44205c:	stp	x7, x13, [sp, #216]
  442060:	stp	x0, x12, [sp, #232]
  442064:	mov	x0, x21
  442068:	stp	x11, x10, [sp, #248]
  44206c:	stp	x9, x8, [sp, #264]
  442070:	bl	442c98 <ferror@plt+0x40418>
  442074:	mov	w22, w0
  442078:	cbz	w0, 441fe8 <ferror@plt+0x3f768>
  44207c:	mov	x2, x20
  442080:	mov	x1, x19
  442084:	mov	w0, w26
  442088:	bl	43f110 <ferror@plt+0x3c890>
  44208c:	cbz	w0, 4425f0 <ferror@plt+0x3fd70>
  442090:	ldp	x7, x13, [sp, #216]
  442094:	ldp	x12, x11, [sp, #240]
  442098:	ldp	x10, x9, [sp, #256]
  44209c:	ldr	x8, [sp, #272]
  4420a0:	ldr	x0, [sp, #768]
  4420a4:	cbz	x23, 4425e4 <ferror@plt+0x3fd64>
  4420a8:	ldr	x1, [sp, #896]
  4420ac:	mov	w23, #0x1                   	// #1
  4420b0:	sub	x1, x1, x24
  4420b4:	add	x1, x0, x1
  4420b8:	str	x1, [sp, #912]
  4420bc:	cbz	x27, 442598 <ferror@plt+0x3fd18>
  4420c0:	ldr	x1, [sp, #928]
  4420c4:	add	w23, w23, #0x1
  4420c8:	sub	x1, x1, x24
  4420cc:	add	x1, x0, x1
  4420d0:	str	x1, [sp, #944]
  4420d4:	cbz	x28, 44279c <ferror@plt+0x3ff1c>
  4420d8:	ldr	x1, [sp, #960]
  4420dc:	add	w23, w23, #0x1
  4420e0:	sub	x1, x1, x24
  4420e4:	add	x1, x0, x1
  4420e8:	str	x1, [sp, #976]
  4420ec:	cbz	x13, 442744 <ferror@plt+0x3fec4>
  4420f0:	ldr	x1, [sp, #992]
  4420f4:	add	w23, w23, #0x1
  4420f8:	sub	x1, x1, x24
  4420fc:	add	x1, x0, x1
  442100:	str	x1, [sp, #1008]
  442104:	cbz	x12, 44274c <ferror@plt+0x3fecc>
  442108:	ldr	x1, [sp, #1024]
  44210c:	add	w23, w23, #0x1
  442110:	sub	x1, x1, x24
  442114:	add	x1, x0, x1
  442118:	str	x1, [sp, #1040]
  44211c:	cbnz	x11, 442730 <ferror@plt+0x3feb0>
  442120:	str	xzr, [sp, #1072]
  442124:	cbnz	x10, 44271c <ferror@plt+0x3fe9c>
  442128:	str	xzr, [sp, #1104]
  44212c:	cbnz	x9, 442638 <ferror@plt+0x3fdb8>
  442130:	str	xzr, [sp, #1136]
  442134:	cbnz	x8, 442788 <ferror@plt+0x3ff08>
  442138:	str	xzr, [sp, #1168]
  44213c:	cbnz	x7, 442754 <ferror@plt+0x3fed4>
  442140:	str	xzr, [sp, #1200]
  442144:	ldr	x24, [sp, #304]
  442148:	mov	x26, #0x0                   	// #0
  44214c:	str	w23, [sp, #224]
  442150:	mov	x23, x26
  442154:	mov	x27, x24
  442158:	add	x0, x24, #0xa0
  44215c:	str	x0, [sp, #216]
  442160:	ldr	x0, [x27, #8]
  442164:	cbnz	x0, 442220 <ferror@plt+0x3f9a0>
  442168:	ldr	x28, [x27, #168]
  44216c:	cbz	x28, 442220 <ferror@plt+0x3f9a0>
  442170:	cbz	x23, 442768 <ferror@plt+0x3fee8>
  442174:	cmp	x28, #0xb
  442178:	b.ls	442678 <ferror@plt+0x3fdf8>  // b.plast
  44217c:	ldr	x5, [x27, #176]
  442180:	mov	w1, #0x4c5a                	// #19546
  442184:	movk	w1, #0x4249, lsl #16
  442188:	ldr	w0, [x5]
  44218c:	cmp	w0, w1
  442190:	b.ne	442678 <ferror@plt+0x3fdf8>  // b.any
  442194:	add	x1, x5, #0x4
  442198:	mov	x0, #0x0                   	// #0
  44219c:	mov	x26, #0x0                   	// #0
  4421a0:	ldrb	w2, [x1, x0]
  4421a4:	add	x0, x0, #0x1
  4421a8:	cmp	x0, #0x8
  4421ac:	orr	x26, x2, x26, lsl #8
  4421b0:	b.ne	4421a0 <ferror@plt+0x3f920>  // b.any
  4421b4:	mov	x3, x20
  4421b8:	mov	x2, x19
  4421bc:	mov	x1, x26
  4421c0:	mov	x0, x21
  4421c4:	str	x5, [sp, #240]
  4421c8:	bl	43e8a8 <ferror@plt+0x3c028>
  4421cc:	mov	x22, x0
  4421d0:	cbz	x0, 44266c <ferror@plt+0x3fdec>
  4421d4:	ldr	x5, [sp, #240]
  4421d8:	mov	x3, x0
  4421dc:	mov	x4, x26
  4421e0:	mov	x2, x23
  4421e4:	add	x5, x5, #0xc
  4421e8:	sub	x1, x28, #0xc
  4421ec:	mov	x0, x5
  4421f0:	str	x5, [sp, #240]
  4421f4:	bl	43fd58 <ferror@plt+0x3d4d8>
  4421f8:	cbz	w0, 442678 <ferror@plt+0x3fdf8>
  4421fc:	ldr	x5, [sp, #240]
  442200:	sub	x0, x28, #0x10
  442204:	mov	x2, x26
  442208:	mov	x1, x22
  44220c:	add	x0, x5, x0
  442210:	bl	43f1c8 <ferror@plt+0x3c948>
  442214:	cbz	w0, 442678 <ferror@plt+0x3fdf8>
  442218:	stp	x26, x22, [x27, #8]
  44221c:	str	wzr, [x27, #24]
  442220:	ldr	x0, [sp, #216]
  442224:	add	x27, x27, #0x20
  442228:	cmp	x0, x27
  44222c:	b.ne	442160 <ferror@plt+0x3f8e0>  // b.any
  442230:	mov	x26, x23
  442234:	mov	w0, #0x5                   	// #5
  442238:	ldr	w23, [sp, #224]
  44223c:	str	w25, [sp, #216]
  442240:	str	w0, [sp, #224]
  442244:	ldr	x27, [x24, #8]
  442248:	cbz	x27, 442284 <ferror@plt+0x3fa04>
  44224c:	ldr	w0, [x24, #24]
  442250:	cbz	w0, 442284 <ferror@plt+0x3fa04>
  442254:	cbz	x26, 44264c <ferror@plt+0x3fdcc>
  442258:	cmp	x27, #0x17
  44225c:	b.ls	442270 <ferror@plt+0x3f9f0>  // b.plast
  442260:	ldr	x25, [x24, #16]
  442264:	ldr	w28, [x25]
  442268:	cmp	w28, #0x1
  44226c:	b.eq	442684 <ferror@plt+0x3fe04>  // b.none
  442270:	mov	x0, #0x0                   	// #0
  442274:	mov	x22, #0x0                   	// #0
  442278:	sub	w23, w23, #0x1
  44227c:	stp	x0, x22, [x24, #8]
  442280:	str	wzr, [x24, #24]
  442284:	ldr	w0, [sp, #224]
  442288:	add	x24, x24, #0x20
  44228c:	subs	w0, w0, #0x1
  442290:	str	w0, [sp, #224]
  442294:	b.ne	442244 <ferror@plt+0x3f9c4>  // b.any
  442298:	ldr	w25, [sp, #216]
  44229c:	cbz	x26, 4422b8 <ferror@plt+0x3fa38>
  4422a0:	mov	x1, x26
  4422a4:	mov	x4, x20
  4422a8:	mov	x3, x19
  4422ac:	mov	x0, x21
  4422b0:	mov	x2, #0x13b4                	// #5044
  4422b4:	bl	43e770 <ferror@plt+0x3bef0>
  4422b8:	cbz	w23, 4426f0 <ferror@plt+0x3fe70>
  4422bc:	mov	w22, #0x1                   	// #1
  4422c0:	ldr	w0, [sp, #320]
  4422c4:	add	x6, sp, #0x388
  4422c8:	ldr	x1, [sp, #200]
  4422cc:	cmp	w0, #0x2
  4422d0:	cset	w0, eq  // eq = none
  4422d4:	ldp	x3, x2, [x6]
  4422d8:	ldp	x5, x4, [x6, #32]
  4422dc:	str	w0, [sp, #32]
  4422e0:	ldr	x0, [sp, #208]
  4422e4:	str	x0, [sp, #64]
  4422e8:	ldr	x0, [sp, #632]
  4422ec:	str	x0, [sp, #40]
  4422f0:	ldr	x0, [sp, #1000]
  4422f4:	str	x0, [sp, #8]
  4422f8:	ldr	x0, [sp, #1008]
  4422fc:	str	x0, [sp]
  442300:	ldr	x7, [sp, #968]
  442304:	stp	x19, x20, [sp, #48]
  442308:	ldr	x6, [sp, #976]
  44230c:	ldr	x0, [sp, #1032]
  442310:	str	x0, [sp, #24]
  442314:	ldr	x0, [sp, #1040]
  442318:	str	x0, [sp, #16]
  44231c:	ldr	x0, [sp, #1224]
  442320:	str	x0, [sp, #72]
  442324:	mov	x0, x21
  442328:	bl	446808 <ferror@plt+0x43f88>
  44232c:	cbz	w0, 4426e8 <ferror@plt+0x3fe68>
  442330:	ldr	x1, [sp, #1216]
  442334:	mov	w0, #0x1                   	// #1
  442338:	mov	w23, w0
  44233c:	str	w0, [x1]
  442340:	b	440c98 <ferror@plt+0x3e418>
  442344:	cbz	w27, 441e84 <ferror@plt+0x3f604>
  442348:	mov	x3, x20
  44234c:	mov	x2, x19
  442350:	add	x1, sp, #0x260
  442354:	mov	x0, x21
  442358:	bl	442d68 <ferror@plt+0x404e8>
  44235c:	b	441e84 <ferror@plt+0x3f604>
  442360:	cmp	x24, x0
  442364:	csel	x24, x24, x0, le
  442368:	b	441f14 <ferror@plt+0x3f694>
  44236c:	cmp	x24, x0
  442370:	csel	x24, x24, x0, le
  442374:	b	441f34 <ferror@plt+0x3f6b4>
  442378:	cmp	x24, x0
  44237c:	csel	x24, x24, x0, le
  442380:	b	441f54 <ferror@plt+0x3f6d4>
  442384:	cmp	x24, x0
  442388:	csel	x24, x24, x0, le
  44238c:	b	441f74 <ferror@plt+0x3f6f4>
  442390:	cmp	x24, x0
  442394:	csel	x24, x24, x0, le
  442398:	b	441f94 <ferror@plt+0x3f714>
  44239c:	mov	x24, x0
  4423a0:	b	441fb8 <ferror@plt+0x3f738>
  4423a4:	cmp	x24, x0
  4423a8:	csel	x24, x24, x0, le
  4423ac:	b	441ef4 <ferror@plt+0x3f674>
  4423b0:	mov	x3, x20
  4423b4:	mov	x2, x19
  4423b8:	add	x1, sp, #0x248
  4423bc:	mov	x0, x21
  4423c0:	bl	442d68 <ferror@plt+0x404e8>
  4423c4:	b	441df0 <ferror@plt+0x3f570>
  4423c8:	mov	w0, #0x1                   	// #1
  4423cc:	str	w0, [sp, #240]
  4423d0:	b	4411fc <ferror@plt+0x3e97c>
  4423d4:	mov	w22, w0
  4423d8:	ldr	w0, [sp, #224]
  4423dc:	ldr	w26, [sp, #280]
  4423e0:	str	w28, [sp, #232]
  4423e4:	str	w0, [sp, #240]
  4423e8:	ldr	x21, [sp, #272]
  4423ec:	ldp	x19, x20, [sp, #288]
  4423f0:	ldr	x23, [sp, #376]
  4423f4:	b	4411fc <ferror@plt+0x3e97c>
  4423f8:	mov	w0, #0x1                   	// #1
  4423fc:	ldr	w26, [sp, #280]
  442400:	mov	w22, #0x0                   	// #0
  442404:	str	w0, [sp, #224]
  442408:	str	w28, [sp, #232]
  44240c:	str	w7, [sp, #240]
  442410:	ldr	x21, [sp, #272]
  442414:	ldp	x19, x20, [sp, #288]
  442418:	ldr	x23, [sp, #376]
  44241c:	b	4411fc <ferror@plt+0x3e97c>
  442420:	mov	x0, x21
  442424:	mov	x3, x20
  442428:	mov	x2, x19
  44242c:	add	x1, sp, #0x230
  442430:	bl	442d68 <ferror@plt+0x404e8>
  442434:	ldr	w0, [sp, #232]
  442438:	cbz	w0, 441ca8 <ferror@plt+0x3f428>
  44243c:	b	441c94 <ferror@plt+0x3f414>
  442440:	ldr	x1, [sp, #248]
  442444:	mov	x3, x20
  442448:	mov	x2, x19
  44244c:	mov	x0, x21
  442450:	str	xzr, [sp, #352]
  442454:	mov	w27, #0x0                   	// #0
  442458:	bl	442d68 <ferror@plt+0x404e8>
  44245c:	mov	w25, #0x0                   	// #0
  442460:	ldr	x1, [sp, #256]
  442464:	mov	x3, x20
  442468:	mov	x2, x19
  44246c:	mov	x0, x21
  442470:	str	xzr, [sp, #336]
  442474:	bl	442d68 <ferror@plt+0x404e8>
  442478:	str	wzr, [sp, #232]
  44247c:	str	wzr, [sp, #364]
  442480:	b	441de8 <ferror@plt+0x3f568>
  442484:	mov	w23, #0xffffffff            	// #-1
  442488:	b	440c98 <ferror@plt+0x3e418>
  44248c:	mov	w25, #0x1                   	// #1
  442490:	str	x22, [x1]
  442494:	b	441b0c <ferror@plt+0x3f28c>
  442498:	mov	x0, x1
  44249c:	b	4424a4 <ferror@plt+0x3fc24>
  4424a0:	mov	x0, x2
  4424a4:	ldar	x2, [x0]
  4424a8:	cbnz	x2, 4424a0 <ferror@plt+0x3fc20>
  4424ac:	ldxr	x2, [x0]
  4424b0:	cbnz	x2, 4424bc <ferror@plt+0x3fc3c>
  4424b4:	stlxr	w3, x22, [x0]
  4424b8:	cbnz	w3, 4424ac <ferror@plt+0x3fc2c>
  4424bc:	dmb	ish
  4424c0:	cmp	x2, #0x0
  4424c4:	b.ne	442498 <ferror@plt+0x3fc18>  // b.any
  4424c8:	mov	w25, #0x1                   	// #1
  4424cc:	b	441b0c <ferror@plt+0x3f28c>
  4424d0:	stp	x5, x8, [sp, #200]
  4424d4:	mov	x0, x20
  4424d8:	mov	w2, #0x0                   	// #0
  4424dc:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  4424e0:	add	x1, x1, #0x9f8
  4424e4:	blr	x19
  4424e8:	ldp	x5, x8, [sp, #200]
  4424ec:	mov	x4, x20
  4424f0:	mov	x3, x19
  4424f4:	mov	x0, x21
  4424f8:	mov	x2, x8
  4424fc:	mov	x1, x5
  442500:	bl	43e770 <ferror@plt+0x3bef0>
  442504:	mov	x1, x22
  442508:	mov	x4, x20
  44250c:	mov	x3, x19
  442510:	mov	x0, x21
  442514:	mov	x2, #0x18                  	// #24
  442518:	mov	w22, #0x1                   	// #1
  44251c:	bl	43e770 <ferror@plt+0x3bef0>
  442520:	str	w22, [sp, #240]
  442524:	b	4411fc <ferror@plt+0x3e97c>
  442528:	mov	x2, #0x0                   	// #0
  44252c:	mov	w1, #0x0                   	// #0
  442530:	ldrb	w0, [x11, #4]
  442534:	add	x2, x2, #0x1
  442538:	and	w0, w0, #0xf
  44253c:	sub	w0, w0, #0x1
  442540:	cmp	w0, #0x1
  442544:	b.hi	442588 <ferror@plt+0x3fd08>  // b.pmore
  442548:	ldrh	w0, [x11, #6]
  44254c:	umull	x9, w1, w7
  442550:	add	x3, x5, x9
  442554:	cbz	w0, 442588 <ferror@plt+0x3fd08>
  442558:	ldr	w0, [x11]
  44255c:	add	w1, w1, #0x1
  442560:	add	x10, x4, x0
  442564:	cmp	x6, x0
  442568:	b.ls	4424d0 <ferror@plt+0x3fc50>  // b.plast
  44256c:	ldr	x0, [x11, #8]
  442570:	str	x10, [x5, x9]
  442574:	ldr	x9, [sp, #200]
  442578:	add	x0, x0, x9
  44257c:	str	x0, [x3, #8]
  442580:	ldr	x0, [x11, #16]
  442584:	str	x0, [x3, #16]
  442588:	add	x11, x11, #0x18
  44258c:	cmp	x2, x12
  442590:	b.cc	442530 <ferror@plt+0x3fcb0>  // b.lo, b.ul, b.last
  442594:	b	441aa4 <ferror@plt+0x3f224>
  442598:	str	xzr, [sp, #944]
  44259c:	b	4420d4 <ferror@plt+0x3f854>
  4425a0:	mov	x2, x20
  4425a4:	mov	x1, x19
  4425a8:	b	441cfc <ferror@plt+0x3f47c>
  4425ac:	bl	4027c0 <__errno_location@plt>
  4425b0:	mov	x2, x0
  4425b4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  4425b8:	mov	x0, x20
  4425bc:	add	x1, x1, #0xa48
  4425c0:	ldr	w2, [x2]
  4425c4:	blr	x19
  4425c8:	b	441dd8 <ferror@plt+0x3f558>
  4425cc:	mov	x3, x20
  4425d0:	mov	x2, x19
  4425d4:	add	x1, sp, #0x260
  4425d8:	mov	x0, x21
  4425dc:	bl	442d68 <ferror@plt+0x404e8>
  4425e0:	b	441cac <ferror@plt+0x3f42c>
  4425e4:	mov	w23, #0x0                   	// #0
  4425e8:	str	xzr, [sp, #912]
  4425ec:	b	4420bc <ferror@plt+0x3f83c>
  4425f0:	mov	w22, #0x1                   	// #1
  4425f4:	b	441fe8 <ferror@plt+0x3f768>
  4425f8:	ldrh	w2, [x0, #78]
  4425fc:	cbz	w2, 441868 <ferror@plt+0x3efe8>
  442600:	add	x25, x25, #0x1
  442604:	b	441868 <ferror@plt+0x3efe8>
  442608:	ldrh	w2, [x0, #54]
  44260c:	cbz	w2, 441848 <ferror@plt+0x3efc8>
  442610:	add	x25, x25, #0x1
  442614:	b	441848 <ferror@plt+0x3efc8>
  442618:	ldrh	w2, [x0, #30]
  44261c:	cbz	w2, 441828 <ferror@plt+0x3efa8>
  442620:	add	x25, x25, #0x1
  442624:	b	441828 <ferror@plt+0x3efa8>
  442628:	ldrh	w2, [x0, #6]
  44262c:	cbz	w2, 441808 <ferror@plt+0x3ef88>
  442630:	add	x25, x25, #0x1
  442634:	b	441808 <ferror@plt+0x3ef88>
  442638:	ldr	x1, [sp, #1120]
  44263c:	sub	x1, x1, x24
  442640:	add	x1, x0, x1
  442644:	str	x1, [sp, #1136]
  442648:	b	442134 <ferror@plt+0x3f8b4>
  44264c:	mov	x3, x20
  442650:	mov	x2, x19
  442654:	mov	x0, x21
  442658:	mov	x1, #0x13b4                	// #5044
  44265c:	bl	43e8a8 <ferror@plt+0x3c028>
  442660:	mov	x26, x0
  442664:	cbnz	x0, 442258 <ferror@plt+0x3f9d8>
  442668:	ldr	w25, [sp, #216]
  44266c:	mov	w22, #0x1                   	// #1
  442670:	mov	w26, #0xffffffff            	// #-1
  442674:	b	441fe8 <ferror@plt+0x3f768>
  442678:	mov	x26, #0x0                   	// #0
  44267c:	mov	x22, #0x0                   	// #0
  442680:	b	442218 <ferror@plt+0x3f998>
  442684:	ldr	x1, [x25, #8]
  442688:	mov	x3, x20
  44268c:	mov	x2, x19
  442690:	mov	x0, x21
  442694:	bl	43e8a8 <ferror@plt+0x3c028>
  442698:	mov	x22, x0
  44269c:	cbz	x0, 44270c <ferror@plt+0x3fe8c>
  4426a0:	ldr	x4, [x25, #8]
  4426a4:	add	x28, x25, #0x18
  4426a8:	mov	x0, x28
  4426ac:	mov	x3, x22
  4426b0:	mov	x2, x26
  4426b4:	sub	x1, x27, #0x18
  4426b8:	str	x4, [sp, #240]
  4426bc:	bl	43fd58 <ferror@plt+0x3d4d8>
  4426c0:	cbz	w0, 442270 <ferror@plt+0x3f9f0>
  4426c4:	ldr	x4, [sp, #240]
  4426c8:	sub	x0, x27, #0x1c
  4426cc:	add	x0, x28, x0
  4426d0:	mov	x1, x22
  4426d4:	mov	x2, x4
  4426d8:	bl	43f1c8 <ferror@plt+0x3c948>
  4426dc:	cbz	w0, 442270 <ferror@plt+0x3f9f0>
  4426e0:	ldr	x0, [x25, #8]
  4426e4:	b	442278 <ferror@plt+0x3f9f8>
  4426e8:	mov	w26, #0xffffffff            	// #-1
  4426ec:	b	441fe8 <ferror@plt+0x3f768>
  4426f0:	ldr	x1, [sp, #232]
  4426f4:	mov	x3, x20
  4426f8:	mov	x2, x19
  4426fc:	mov	x0, x21
  442700:	mov	w22, #0x0                   	// #0
  442704:	bl	442d68 <ferror@plt+0x404e8>
  442708:	b	4422c0 <ferror@plt+0x3fa40>
  44270c:	ldr	w25, [sp, #216]
  442710:	mov	w22, w28
  442714:	mov	w26, #0xffffffff            	// #-1
  442718:	b	441fe8 <ferror@plt+0x3f768>
  44271c:	ldr	x1, [sp, #1088]
  442720:	sub	x1, x1, x24
  442724:	add	x1, x0, x1
  442728:	str	x1, [sp, #1104]
  44272c:	b	44212c <ferror@plt+0x3f8ac>
  442730:	ldr	x1, [sp, #1056]
  442734:	sub	x1, x1, x24
  442738:	add	x1, x0, x1
  44273c:	str	x1, [sp, #1072]
  442740:	b	442124 <ferror@plt+0x3f8a4>
  442744:	str	xzr, [sp, #1008]
  442748:	b	442104 <ferror@plt+0x3f884>
  44274c:	str	xzr, [sp, #1040]
  442750:	b	44211c <ferror@plt+0x3f89c>
  442754:	ldr	x1, [sp, #1184]
  442758:	sub	x24, x1, x24
  44275c:	add	x0, x0, x24
  442760:	str	x0, [sp, #1200]
  442764:	b	442144 <ferror@plt+0x3f8c4>
  442768:	mov	x3, x20
  44276c:	mov	x2, x19
  442770:	mov	x0, x21
  442774:	mov	x1, #0x13b4                	// #5044
  442778:	bl	43e8a8 <ferror@plt+0x3c028>
  44277c:	mov	x23, x0
  442780:	cbnz	x0, 442174 <ferror@plt+0x3f8f4>
  442784:	b	44266c <ferror@plt+0x3fdec>
  442788:	ldr	x1, [sp, #1152]
  44278c:	sub	x1, x1, x24
  442790:	add	x1, x0, x1
  442794:	str	x1, [sp, #1168]
  442798:	b	44213c <ferror@plt+0x3f8bc>
  44279c:	str	xzr, [sp, #976]
  4427a0:	b	4420ec <ferror@plt+0x3f86c>
  4427a4:	mov	x28, #0x0                   	// #0
  4427a8:	mov	x3, #0x0                   	// #0
  4427ac:	mov	x24, #0x0                   	// #0
  4427b0:	b	441ee0 <ferror@plt+0x3f660>
  4427b4:	mov	x3, x20
  4427b8:	mov	x2, x19
  4427bc:	mov	x0, x21
  4427c0:	mov	x1, #0x0                   	// #0
  4427c4:	bl	43e8a8 <ferror@plt+0x3c028>
  4427c8:	mov	x5, x0
  4427cc:	cbz	x0, 442504 <ferror@plt+0x3fc84>
  4427d0:	mov	x25, #0x0                   	// #0
  4427d4:	b	441aa4 <ferror@plt+0x3f224>
  4427d8:	mov	w22, #0x1                   	// #1
  4427dc:	str	w22, [sp, #240]
  4427e0:	b	4411fc <ferror@plt+0x3e97c>
  4427e4:	ldrh	w2, [x0, #174]
  4427e8:	cbz	w2, 4418e8 <ferror@plt+0x3f068>
  4427ec:	add	x25, x25, #0x1
  4427f0:	b	4418e8 <ferror@plt+0x3f068>
  4427f4:	ldrh	w2, [x0, #150]
  4427f8:	cbz	w2, 4418c8 <ferror@plt+0x3f048>
  4427fc:	add	x25, x25, #0x1
  442800:	b	4418c8 <ferror@plt+0x3f048>
  442804:	ldrh	w2, [x0, #126]
  442808:	cbz	w2, 4418a8 <ferror@plt+0x3f028>
  44280c:	add	x25, x25, #0x1
  442810:	b	4418a8 <ferror@plt+0x3f028>
  442814:	ldrh	w2, [x0, #102]
  442818:	cbz	w2, 441888 <ferror@plt+0x3f008>
  44281c:	add	x25, x25, #0x1
  442820:	b	441888 <ferror@plt+0x3f008>
  442824:	mov	x0, x11
  442828:	mov	x1, #0x0                   	// #0
  44282c:	mov	x25, #0x0                   	// #0
  442830:	b	4417f4 <ferror@plt+0x3ef74>
  442834:	ldrh	w0, [x0, #6]
  442838:	cbz	w0, 4419cc <ferror@plt+0x3f14c>
  44283c:	add	x25, x25, #0x1
  442840:	b	4419cc <ferror@plt+0x3f14c>
  442844:	ldrh	w2, [x0, #318]
  442848:	cbz	w2, 4419a8 <ferror@plt+0x3f128>
  44284c:	add	x25, x25, #0x1
  442850:	b	4419a8 <ferror@plt+0x3f128>
  442854:	ldrh	w2, [x0, #294]
  442858:	cbz	w2, 441988 <ferror@plt+0x3f108>
  44285c:	add	x25, x25, #0x1
  442860:	b	441988 <ferror@plt+0x3f108>
  442864:	ldrh	w2, [x0, #270]
  442868:	cbz	w2, 441968 <ferror@plt+0x3f0e8>
  44286c:	add	x25, x25, #0x1
  442870:	b	441968 <ferror@plt+0x3f0e8>
  442874:	ldrh	w2, [x0, #246]
  442878:	cbz	w2, 441948 <ferror@plt+0x3f0c8>
  44287c:	add	x25, x25, #0x1
  442880:	b	441948 <ferror@plt+0x3f0c8>
  442884:	ldrh	w2, [x0, #222]
  442888:	cbz	w2, 441928 <ferror@plt+0x3f0a8>
  44288c:	add	x25, x25, #0x1
  442890:	b	441928 <ferror@plt+0x3f0a8>
  442894:	ldrh	w2, [x0, #198]
  442898:	cbz	w2, 441908 <ferror@plt+0x3f088>
  44289c:	add	x25, x25, #0x1
  4428a0:	b	441908 <ferror@plt+0x3f088>
  4428a4:	nop
  4428a8:	sub	sp, sp, #0x70
  4428ac:	stp	x29, x30, [sp, #48]
  4428b0:	add	x29, sp, #0x30
  4428b4:	ldr	w6, [x2, #56]
  4428b8:	str	x21, [sp, #80]
  4428bc:	ldr	x21, [x0, #8]
  4428c0:	stp	x19, x20, [sp, #64]
  4428c4:	cmn	w6, #0x1
  4428c8:	mov	x20, x0
  4428cc:	mov	x19, x2
  4428d0:	cbz	x21, 4428dc <ferror@plt+0x4005c>
  4428d4:	ldrb	w0, [x21]
  4428d8:	cbnz	w0, 442968 <ferror@plt+0x400e8>
  4428dc:	b.eq	442950 <ferror@plt+0x400d0>  // b.none
  4428e0:	ldr	x21, [x19, #48]
  4428e4:	mov	w0, #0xffffffff            	// #-1
  4428e8:	str	w0, [x19, #56]
  4428ec:	add	x1, sp, #0x64
  4428f0:	mov	w2, w6
  4428f4:	ldr	x0, [x19]
  4428f8:	add	x6, sp, #0x68
  4428fc:	ldr	x3, [x20]
  442900:	str	x1, [sp]
  442904:	mov	x1, x21
  442908:	ldr	x4, [x19, #8]
  44290c:	str	xzr, [sp, #8]
  442910:	ldr	x5, [x19, #16]
  442914:	str	wzr, [sp, #16]
  442918:	ldr	x7, [x19, #32]
  44291c:	str	wzr, [sp, #24]
  442920:	str	xzr, [sp, #32]
  442924:	str	wzr, [sp, #40]
  442928:	bl	440be0 <ferror@plt+0x3e360>
  44292c:	cbz	w0, 442950 <ferror@plt+0x400d0>
  442930:	ldr	w0, [sp, #100]
  442934:	cbz	w0, 442950 <ferror@plt+0x400d0>
  442938:	ldr	x1, [x19, #40]
  44293c:	mov	w2, #0x1                   	// #1
  442940:	ldr	x0, [x19, #24]
  442944:	str	w2, [x1]
  442948:	ldr	x1, [sp, #104]
  44294c:	str	x1, [x0]
  442950:	mov	w0, #0x0                   	// #0
  442954:	ldp	x29, x30, [sp, #48]
  442958:	ldp	x19, x20, [sp, #64]
  44295c:	ldr	x21, [sp, #80]
  442960:	add	sp, sp, #0x70
  442964:	ret
  442968:	ldp	x1, x2, [x2, #8]
  44296c:	b.ne	442988 <ferror@plt+0x40108>  // b.any
  442970:	add	x3, sp, #0x60
  442974:	mov	x0, x21
  442978:	bl	43f060 <ferror@plt+0x3c7e0>
  44297c:	mov	w6, w0
  442980:	tbz	w0, #31, 4428ec <ferror@plt+0x4006c>
  442984:	b	442950 <ferror@plt+0x400d0>
  442988:	mov	w0, w6
  44298c:	bl	43f110 <ferror@plt+0x3c890>
  442990:	ldp	x1, x2, [x19, #8]
  442994:	mov	w0, #0xffffffff            	// #-1
  442998:	ldr	x21, [x20, #8]
  44299c:	str	w0, [x19, #56]
  4429a0:	add	x3, sp, #0x60
  4429a4:	mov	x0, x21
  4429a8:	bl	43f060 <ferror@plt+0x3c7e0>
  4429ac:	mov	w6, w0
  4429b0:	tbz	w0, #31, 4428ec <ferror@plt+0x4006c>
  4429b4:	b	442950 <ferror@plt+0x400d0>
  4429b8:	stp	x29, x30, [sp, #-96]!
  4429bc:	mov	x29, sp
  4429c0:	stp	x25, x26, [sp, #64]
  4429c4:	mov	x26, x3
  4429c8:	mov	x3, x4
  4429cc:	stp	x19, x20, [sp, #16]
  4429d0:	mov	x19, x1
  4429d4:	mov	x1, #0x13b4                	// #5044
  4429d8:	stp	x21, x22, [sp, #32]
  4429dc:	mov	x21, x2
  4429e0:	mov	x22, x0
  4429e4:	mov	x2, x26
  4429e8:	stp	x23, x24, [sp, #48]
  4429ec:	mov	x24, x5
  4429f0:	mov	x23, x6
  4429f4:	stp	x27, x28, [sp, #80]
  4429f8:	mov	x27, x4
  4429fc:	bl	43e8a8 <ferror@plt+0x3c028>
  442a00:	cbz	x0, 442b08 <ferror@plt+0x40288>
  442a04:	str	xzr, [x24]
  442a08:	mov	x25, x0
  442a0c:	str	xzr, [x23]
  442a10:	cmp	x21, #0xb
  442a14:	b.ls	442acc <ferror@plt+0x4024c>  // b.plast
  442a18:	ldr	w1, [x19]
  442a1c:	mov	w0, #0x4c5a                	// #19546
  442a20:	movk	w0, #0x4249, lsl #16
  442a24:	cmp	w1, w0
  442a28:	b.ne	442acc <ferror@plt+0x4024c>  // b.any
  442a2c:	ldrb	w4, [x19, #5]
  442a30:	mov	x3, x27
  442a34:	ldrb	w20, [x19, #4]
  442a38:	mov	x2, x26
  442a3c:	ldrb	w1, [x19, #6]
  442a40:	mov	x0, x22
  442a44:	ldrb	w7, [x19, #7]
  442a48:	orr	x20, x4, x20, lsl #8
  442a4c:	ldrb	w6, [x19, #8]
  442a50:	ldrb	w5, [x19, #9]
  442a54:	orr	x20, x1, x20, lsl #8
  442a58:	ldrb	w1, [x19, #10]
  442a5c:	ldrb	w4, [x19, #11]
  442a60:	orr	x20, x7, x20, lsl #8
  442a64:	orr	x20, x6, x20, lsl #8
  442a68:	orr	x20, x5, x20, lsl #8
  442a6c:	orr	x20, x1, x20, lsl #8
  442a70:	orr	x20, x4, x20, lsl #8
  442a74:	mov	x1, x20
  442a78:	bl	43e8a8 <ferror@plt+0x3c028>
  442a7c:	mov	x28, x0
  442a80:	cbz	x0, 442b10 <ferror@plt+0x40290>
  442a84:	add	x19, x19, #0xc
  442a88:	mov	x4, x20
  442a8c:	mov	x0, x19
  442a90:	mov	x3, x28
  442a94:	mov	x2, x25
  442a98:	sub	x1, x21, #0xc
  442a9c:	bl	43fd58 <ferror@plt+0x3d4d8>
  442aa0:	cbz	w0, 442acc <ferror@plt+0x4024c>
  442aa4:	sub	x21, x21, #0x10
  442aa8:	mov	x2, x20
  442aac:	add	x0, x19, x21
  442ab0:	mov	x1, x28
  442ab4:	bl	43f1c8 <ferror@plt+0x3c948>
  442ab8:	cbz	w0, 442acc <ferror@plt+0x4024c>
  442abc:	str	x28, [x24]
  442ac0:	mov	w19, #0x1                   	// #1
  442ac4:	str	x20, [x23]
  442ac8:	b	442ad0 <ferror@plt+0x40250>
  442acc:	mov	w19, #0x1                   	// #1
  442ad0:	mov	x4, x27
  442ad4:	mov	x3, x26
  442ad8:	mov	x1, x25
  442adc:	mov	x0, x22
  442ae0:	mov	x2, #0x13b4                	// #5044
  442ae4:	bl	43e770 <ferror@plt+0x3bef0>
  442ae8:	mov	w0, w19
  442aec:	ldp	x19, x20, [sp, #16]
  442af0:	ldp	x21, x22, [sp, #32]
  442af4:	ldp	x23, x24, [sp, #48]
  442af8:	ldp	x25, x26, [sp, #64]
  442afc:	ldp	x27, x28, [sp, #80]
  442b00:	ldp	x29, x30, [sp], #96
  442b04:	ret
  442b08:	mov	w19, #0x0                   	// #0
  442b0c:	b	442ae8 <ferror@plt+0x40268>
  442b10:	mov	w19, #0x0                   	// #0
  442b14:	b	442ad0 <ferror@plt+0x40250>
  442b18:	sub	sp, sp, #0xe0
  442b1c:	mov	w6, #0x1                   	// #1
  442b20:	stp	x29, x30, [sp, #48]
  442b24:	add	x29, sp, #0x30
  442b28:	stp	x23, x24, [sp, #96]
  442b2c:	adrp	x24, 43f000 <ferror@plt+0x3c780>
  442b30:	add	x8, x24, #0x168
  442b34:	str	w6, [sp, #16]
  442b38:	mov	x23, x5
  442b3c:	str	wzr, [sp, #24]
  442b40:	mov	x5, x4
  442b44:	str	xzr, [sp, #32]
  442b48:	str	wzr, [sp, #40]
  442b4c:	stp	x27, x28, [sp, #128]
  442b50:	add	x28, sp, #0x94
  442b54:	add	x27, sp, #0x98
  442b58:	stp	x28, xzr, [sp]
  442b5c:	mov	x6, x27
  442b60:	stp	x25, x26, [sp, #112]
  442b64:	add	x26, sp, #0x90
  442b68:	mov	x25, x1
  442b6c:	mov	x7, x26
  442b70:	stp	x19, x20, [sp, #64]
  442b74:	mov	x19, x0
  442b78:	mov	w20, w2
  442b7c:	stp	x21, x22, [sp, #80]
  442b80:	mov	x22, x3
  442b84:	mov	x21, x4
  442b88:	mov	x4, x3
  442b8c:	mov	x3, #0x0                   	// #0
  442b90:	str	x8, [sp, #152]
  442b94:	bl	440be0 <ferror@plt+0x3e360>
  442b98:	cbz	w0, 442c04 <ferror@plt+0x40384>
  442b9c:	cmp	w0, #0x0
  442ba0:	add	x1, sp, #0xa0
  442ba4:	csinv	w20, w20, wzr, lt  // lt = tstop
  442ba8:	adrp	x0, 442000 <ferror@plt+0x3f780>
  442bac:	add	x0, x0, #0x8a8
  442bb0:	stp	x19, x22, [sp, #160]
  442bb4:	stp	x21, x27, [sp, #176]
  442bb8:	stp	x26, x28, [sp, #192]
  442bbc:	str	x25, [sp, #208]
  442bc0:	str	w20, [sp, #216]
  442bc4:	bl	402620 <dl_iterate_phdr@plt>
  442bc8:	ldr	w0, [x19, #8]
  442bcc:	cbnz	w0, 442c24 <ferror@plt+0x403a4>
  442bd0:	ldr	w0, [sp, #144]
  442bd4:	cbnz	w0, 442c54 <ferror@plt+0x403d4>
  442bd8:	ldr	x0, [x19, #40]
  442bdc:	cbz	x0, 442c84 <ferror@plt+0x40404>
  442be0:	ldr	x0, [x19, #24]
  442be4:	str	x0, [x23]
  442be8:	cmp	x0, #0x0
  442bec:	add	x24, x24, #0x168
  442bf0:	ccmp	x0, x24, #0x4, ne  // ne = any
  442bf4:	mov	w0, #0x1                   	// #1
  442bf8:	b.ne	442c04 <ferror@plt+0x40384>  // b.any
  442bfc:	ldr	x1, [sp, #152]
  442c00:	str	x1, [x23]
  442c04:	ldp	x29, x30, [sp, #48]
  442c08:	ldp	x19, x20, [sp, #64]
  442c0c:	ldp	x21, x22, [sp, #80]
  442c10:	ldp	x23, x24, [sp, #96]
  442c14:	ldp	x25, x26, [sp, #112]
  442c18:	ldp	x27, x28, [sp, #128]
  442c1c:	add	sp, sp, #0xe0
  442c20:	ret
  442c24:	ldr	w1, [sp, #144]
  442c28:	add	x0, x19, #0x28
  442c2c:	cbz	w1, 442c64 <ferror@plt+0x403e4>
  442c30:	adrp	x1, 43f000 <ferror@plt+0x3c780>
  442c34:	add	x1, x1, #0x870
  442c38:	stlr	x1, [x0]
  442c3c:	ldr	w0, [x19, #8]
  442c40:	cbz	w0, 442be0 <ferror@plt+0x40360>
  442c44:	add	x19, x19, #0x18
  442c48:	ldar	x0, [x19]
  442c4c:	str	x0, [x23]
  442c50:	b	442be8 <ferror@plt+0x40368>
  442c54:	adrp	x0, 43f000 <ferror@plt+0x3c780>
  442c58:	add	x0, x0, #0x870
  442c5c:	str	x0, [x19, #40]
  442c60:	b	442be0 <ferror@plt+0x40360>
  442c64:	adrp	x1, 43f000 <ferror@plt+0x3c780>
  442c68:	add	x1, x1, #0x190
  442c6c:	ldxr	x2, [x0]
  442c70:	cbnz	x2, 442c7c <ferror@plt+0x403fc>
  442c74:	stlxr	w3, x1, [x0]
  442c78:	cbnz	w3, 442c6c <ferror@plt+0x403ec>
  442c7c:	dmb	ish
  442c80:	b	442c3c <ferror@plt+0x403bc>
  442c84:	adrp	x0, 43f000 <ferror@plt+0x3c780>
  442c88:	add	x0, x0, #0x190
  442c8c:	str	x0, [x19, #40]
  442c90:	b	442be0 <ferror@plt+0x40360>
  442c94:	nop
  442c98:	stp	x29, x30, [sp, #-64]!
  442c9c:	mov	x29, sp
  442ca0:	stp	x19, x20, [sp, #16]
  442ca4:	mov	x19, x3
  442ca8:	mov	x20, x4
  442cac:	stp	x21, x22, [sp, #32]
  442cb0:	mov	x22, x2
  442cb4:	mov	x21, x5
  442cb8:	stp	x23, x24, [sp, #48]
  442cbc:	mov	w24, w1
  442cc0:	mov	x23, x6
  442cc4:	bl	4024b0 <getpagesize@plt>
  442cc8:	sxtw	x7, w0
  442ccc:	sub	x8, x19, #0x1
  442cd0:	neg	x1, x7
  442cd4:	mov	w4, w24
  442cd8:	mov	w3, #0x2                   	// #2
  442cdc:	udiv	x19, x22, x7
  442ce0:	mov	w2, #0x1                   	// #1
  442ce4:	mov	x0, #0x0                   	// #0
  442ce8:	msub	w19, w19, w7, w22
  442cec:	add	x7, x7, x19
  442cf0:	sub	x5, x22, x19
  442cf4:	add	x7, x8, x7
  442cf8:	and	x22, x1, x7
  442cfc:	mov	x1, x22
  442d00:	bl	4025f0 <mmap@plt>
  442d04:	cmn	x0, #0x1
  442d08:	b.eq	442d34 <ferror@plt+0x404b4>  // b.none
  442d0c:	mov	x2, x0
  442d10:	add	x19, x0, x19
  442d14:	stp	x19, x2, [x23]
  442d18:	mov	w0, #0x1                   	// #1
  442d1c:	str	x22, [x23, #16]
  442d20:	ldp	x19, x20, [sp, #16]
  442d24:	ldp	x21, x22, [sp, #32]
  442d28:	ldp	x23, x24, [sp, #48]
  442d2c:	ldp	x29, x30, [sp], #64
  442d30:	ret
  442d34:	bl	4027c0 <__errno_location@plt>
  442d38:	mov	x2, x0
  442d3c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  442d40:	mov	x0, x21
  442d44:	add	x1, x1, #0x710
  442d48:	ldr	w2, [x2]
  442d4c:	blr	x20
  442d50:	mov	w0, #0x0                   	// #0
  442d54:	ldp	x19, x20, [sp, #16]
  442d58:	ldp	x21, x22, [sp, #32]
  442d5c:	ldp	x23, x24, [sp, #48]
  442d60:	ldp	x29, x30, [sp], #64
  442d64:	ret
  442d68:	stp	x29, x30, [sp, #-32]!
  442d6c:	mov	x29, sp
  442d70:	ldp	x0, x1, [x1, #8]
  442d74:	stp	x19, x20, [sp, #16]
  442d78:	mov	x19, x2
  442d7c:	mov	x20, x3
  442d80:	bl	4026a0 <munmap@plt>
  442d84:	tbnz	w0, #31, 442d94 <ferror@plt+0x40514>
  442d88:	ldp	x19, x20, [sp, #16]
  442d8c:	ldp	x29, x30, [sp], #32
  442d90:	ret
  442d94:	bl	4027c0 <__errno_location@plt>
  442d98:	mov	x2, x0
  442d9c:	mov	x16, x19
  442da0:	mov	x0, x20
  442da4:	ldp	x19, x20, [sp, #16]
  442da8:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  442dac:	ldp	x29, x30, [sp], #32
  442db0:	add	x1, x1, #0x340
  442db4:	ldr	w2, [x2]
  442db8:	br	x16
  442dbc:	nop
  442dc0:	ldr	x2, [x0]
  442dc4:	mov	w3, #0xffffffff            	// #-1
  442dc8:	ldr	x1, [x1]
  442dcc:	cmp	x2, x1
  442dd0:	cset	w0, hi  // hi = pmore
  442dd4:	csel	w0, w0, w3, cs  // cs = hs, nlast
  442dd8:	ret
  442ddc:	nop
  442de0:	mov	x2, x0
  442de4:	ldr	x0, [x1]
  442de8:	ldr	x3, [x2]
  442dec:	cmp	x3, x0
  442df0:	b.cc	442e34 <ferror@plt+0x405b4>  // b.lo, b.ul, b.last
  442df4:	mov	w0, #0x1                   	// #1
  442df8:	b.hi	442e30 <ferror@plt+0x405b0>  // b.pmore
  442dfc:	ldr	x3, [x1, #8]
  442e00:	ldr	x4, [x2, #8]
  442e04:	cmp	x4, x3
  442e08:	b.cc	442e30 <ferror@plt+0x405b0>  // b.lo, b.ul, b.last
  442e0c:	mov	w0, #0xffffffff            	// #-1
  442e10:	b.hi	442e30 <ferror@plt+0x405b0>  // b.pmore
  442e14:	ldr	x1, [x1, #16]
  442e18:	ldr	x2, [x2, #16]
  442e1c:	ldr	x1, [x1, #56]
  442e20:	ldr	x2, [x2, #56]
  442e24:	cmp	x2, x1
  442e28:	cset	w3, gt
  442e2c:	csel	w0, w3, w0, ge  // ge = tcont
  442e30:	ret
  442e34:	mov	w0, #0xffffffff            	// #-1
  442e38:	ret
  442e3c:	nop
  442e40:	mov	x2, x0
  442e44:	ldr	x0, [x1]
  442e48:	ldr	x3, [x2]
  442e4c:	cmp	x3, x0
  442e50:	b.cc	442e78 <ferror@plt+0x405f8>  // b.lo, b.ul, b.last
  442e54:	mov	w0, #0x1                   	// #1
  442e58:	b.hi	442e74 <ferror@plt+0x405f4>  // b.pmore
  442e5c:	ldr	w1, [x1, #20]
  442e60:	mov	w3, #0xffffffff            	// #-1
  442e64:	ldr	w2, [x2, #20]
  442e68:	cmp	w2, w1
  442e6c:	cset	w0, gt
  442e70:	csel	w0, w0, w3, ge  // ge = tcont
  442e74:	ret
  442e78:	mov	w0, #0xffffffff            	// #-1
  442e7c:	ret
  442e80:	cbz	x2, 442fd8 <ferror@plt+0x40758>
  442e84:	stp	x29, x30, [sp, #-64]!
  442e88:	mov	x10, x2
  442e8c:	mov	x29, sp
  442e90:	stp	x19, x20, [sp, #16]
  442e94:	mov	x20, x6
  442e98:	mov	x19, x0
  442e9c:	stp	x21, x22, [sp, #32]
  442ea0:	mov	x21, x3
  442ea4:	mov	x22, x4
  442ea8:	stp	x23, x24, [sp, #48]
  442eac:	mov	x23, x5
  442eb0:	mov	x0, #0x0                   	// #0
  442eb4:	add	x7, x10, x0
  442eb8:	cmp	x10, x0
  442ebc:	and	x8, x7, #0xfffffffffffffffe
  442ec0:	b.ls	442fc0 <ferror@plt+0x40740>  // b.plast
  442ec4:	lsr	x7, x7, #1
  442ec8:	add	x8, x8, x7
  442ecc:	lsl	x9, x8, #3
  442ed0:	ldr	x3, [x1, x8, lsl #3]
  442ed4:	add	x8, x1, x9
  442ed8:	cmp	x3, x19
  442edc:	b.hi	442fac <ferror@plt+0x4072c>  // b.pmore
  442ee0:	ldr	x3, [x8, #8]
  442ee4:	add	x0, x7, #0x1
  442ee8:	cmp	x19, x3
  442eec:	b.cs	442eb4 <ferror@plt+0x40634>  // b.hs, b.nlast
  442ef0:	asr	x9, x9, #3
  442ef4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  442ef8:	movk	x0, #0xaaab
  442efc:	mov	x3, x0
  442f00:	mul	x9, x9, x0
  442f04:	add	x9, x9, #0x1
  442f08:	cmp	x2, x9
  442f0c:	b.hi	442f3c <ferror@plt+0x406bc>  // b.pmore
  442f10:	b	442f48 <ferror@plt+0x406c8>
  442f14:	ldr	x0, [x8, #32]
  442f18:	cmp	x19, x0
  442f1c:	b.cs	442f48 <ferror@plt+0x406c8>  // b.hs, b.nlast
  442f20:	add	x8, x8, #0x18
  442f24:	sub	x7, x8, x1
  442f28:	asr	x7, x7, #3
  442f2c:	mul	x7, x7, x3
  442f30:	add	x7, x7, #0x1
  442f34:	cmp	x7, x2
  442f38:	b.cs	442f48 <ferror@plt+0x406c8>  // b.hs, b.nlast
  442f3c:	ldr	x0, [x8, #24]
  442f40:	cmp	x19, x0
  442f44:	b.cs	442f14 <ferror@plt+0x40694>  // b.hs, b.nlast
  442f48:	ldr	x24, [x8, #16]
  442f4c:	mov	x6, x20
  442f50:	mov	x5, x23
  442f54:	mov	x4, x22
  442f58:	mov	x3, x21
  442f5c:	mov	x0, x19
  442f60:	ldp	x1, x2, [x24, #24]
  442f64:	bl	442e80 <ferror@plt+0x40600>
  442f68:	cbnz	w0, 442f98 <ferror@plt+0x40718>
  442f6c:	ldr	w3, [x20]
  442f70:	mov	x1, x19
  442f74:	ldr	x2, [x23]
  442f78:	mov	x0, x22
  442f7c:	ldr	x4, [x24]
  442f80:	blr	x21
  442f84:	cbnz	w0, 442f98 <ferror@plt+0x40718>
  442f88:	ldr	x1, [x24, #8]
  442f8c:	str	x1, [x23]
  442f90:	ldr	w1, [x24, #16]
  442f94:	str	w1, [x20]
  442f98:	ldp	x19, x20, [sp, #16]
  442f9c:	ldp	x21, x22, [sp, #32]
  442fa0:	ldp	x23, x24, [sp, #48]
  442fa4:	ldp	x29, x30, [sp], #64
  442fa8:	ret
  442fac:	mov	x10, x7
  442fb0:	add	x7, x10, x0
  442fb4:	cmp	x10, x0
  442fb8:	and	x8, x7, #0xfffffffffffffffe
  442fbc:	b.hi	442ec4 <ferror@plt+0x40644>  // b.pmore
  442fc0:	mov	w0, #0x0                   	// #0
  442fc4:	ldp	x19, x20, [sp, #16]
  442fc8:	ldp	x21, x22, [sp, #32]
  442fcc:	ldp	x23, x24, [sp, #48]
  442fd0:	ldp	x29, x30, [sp], #64
  442fd4:	ret
  442fd8:	mov	w0, #0x0                   	// #0
  442fdc:	ret
  442fe0:	ldr	x3, [x0]
  442fe4:	ldr	x2, [x1]
  442fe8:	cmp	x3, x2
  442fec:	b.cc	443024 <ferror@plt+0x407a4>  // b.lo, b.ul, b.last
  442ff0:	b.hi	44301c <ferror@plt+0x4079c>  // b.pmore
  442ff4:	ldr	x3, [x0, #8]
  442ff8:	ldr	x2, [x1, #8]
  442ffc:	cmp	x3, x2
  443000:	b.cc	44301c <ferror@plt+0x4079c>  // b.lo, b.ul, b.last
  443004:	b.hi	443024 <ferror@plt+0x407a4>  // b.pmore
  443008:	ldr	x0, [x0, #16]
  44300c:	ldr	x1, [x1, #16]
  443010:	ldr	x0, [x0]
  443014:	ldr	x1, [x1]
  443018:	b	4025d0 <strcmp@plt>
  44301c:	mov	w0, #0x1                   	// #1
  443020:	ret
  443024:	mov	w0, #0xffffffff            	// #-1
  443028:	ret
  44302c:	nop
  443030:	stp	x29, x30, [sp, #-288]!
  443034:	mov	w1, #0x0                   	// #0
  443038:	mov	x29, sp
  44303c:	stp	x19, x20, [sp, #16]
  443040:	mov	x19, x0
  443044:	stp	x23, x24, [sp, #48]
  443048:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44304c:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443050:	add	x24, x24, #0x368
  443054:	add	x23, x23, #0x358
  443058:	str	x25, [sp, #64]
  44305c:	add	x25, sp, #0x58
  443060:	stp	x21, x22, [sp, #32]
  443064:	mov	w21, #0x0                   	// #0
  443068:	mov	x22, #0x0                   	// #0
  44306c:	nop
  443070:	ldp	x6, x20, [x19, #16]
  443074:	cbnz	x20, 44309c <ferror@plt+0x4081c>
  443078:	ldr	w0, [x19, #56]
  44307c:	cbz	w0, 443120 <ferror@plt+0x408a0>
  443080:	mov	x0, x20
  443084:	ldp	x19, x20, [sp, #16]
  443088:	ldp	x21, x22, [sp, #32]
  44308c:	ldp	x23, x24, [sp, #48]
  443090:	ldr	x25, [sp, #64]
  443094:	ldp	x29, x30, [sp], #288
  443098:	ret
  44309c:	sub	x20, x20, #0x1
  4430a0:	add	x5, x6, #0x1
  4430a4:	stp	x5, x20, [x19, #16]
  4430a8:	cmp	w21, #0x3f
  4430ac:	ldrb	w20, [x6]
  4430b0:	b.hi	4430e8 <ferror@plt+0x40868>  // b.pmore
  4430b4:	and	x0, x20, #0x7f
  4430b8:	lsl	x0, x0, x21
  4430bc:	orr	x22, x22, x0
  4430c0:	add	w21, w21, #0x7
  4430c4:	tbnz	w20, #7, 443070 <ferror@plt+0x407f0>
  4430c8:	mov	x20, x22
  4430cc:	mov	x0, x20
  4430d0:	ldp	x19, x20, [sp, #16]
  4430d4:	ldp	x21, x22, [sp, #32]
  4430d8:	ldp	x23, x24, [sp, #48]
  4430dc:	ldr	x25, [sp, #64]
  4430e0:	ldp	x29, x30, [sp], #288
  4430e4:	ret
  4430e8:	cbnz	w1, 4430c0 <ferror@plt+0x40840>
  4430ec:	ldp	x4, x6, [x19]
  4430f0:	mov	x3, x24
  4430f4:	mov	x2, x23
  4430f8:	mov	x1, #0xc8                  	// #200
  4430fc:	mov	x0, x25
  443100:	sub	w5, w5, w6
  443104:	bl	402360 <snprintf@plt>
  443108:	ldp	x3, x0, [x19, #40]
  44310c:	mov	x1, x25
  443110:	mov	w2, #0x0                   	// #0
  443114:	blr	x3
  443118:	mov	w1, #0x1                   	// #1
  44311c:	b	4430c0 <ferror@plt+0x40840>
  443120:	ldp	x4, x5, [x19]
  443124:	add	x21, sp, #0x58
  443128:	mov	x0, x21
  44312c:	mov	x1, #0xc8                  	// #200
  443130:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443134:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443138:	add	x3, x3, #0x348
  44313c:	add	x2, x2, #0x358
  443140:	sub	w5, w6, w5
  443144:	bl	402360 <snprintf@plt>
  443148:	ldp	x3, x0, [x19, #40]
  44314c:	mov	x1, x21
  443150:	mov	w2, #0x0                   	// #0
  443154:	blr	x3
  443158:	mov	w0, #0x1                   	// #1
  44315c:	str	w0, [x19, #56]
  443160:	mov	x0, x20
  443164:	ldp	x19, x20, [sp, #16]
  443168:	ldp	x21, x22, [sp, #32]
  44316c:	ldp	x23, x24, [sp, #48]
  443170:	ldr	x25, [sp, #64]
  443174:	ldp	x29, x30, [sp], #288
  443178:	ret
  44317c:	nop
  443180:	stp	x29, x30, [sp, #-288]!
  443184:	mov	w1, #0x0                   	// #0
  443188:	mov	x29, sp
  44318c:	stp	x19, x20, [sp, #16]
  443190:	mov	x19, x0
  443194:	mov	w20, #0x0                   	// #0
  443198:	stp	x23, x24, [sp, #48]
  44319c:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4431a0:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4431a4:	add	x24, x24, #0x388
  4431a8:	add	x23, x23, #0x358
  4431ac:	str	x25, [sp, #64]
  4431b0:	add	x25, sp, #0x58
  4431b4:	stp	x21, x22, [sp, #32]
  4431b8:	mov	x22, #0x0                   	// #0
  4431bc:	nop
  4431c0:	ldp	x6, x0, [x19, #16]
  4431c4:	cbnz	x0, 4431f0 <ferror@plt+0x40970>
  4431c8:	ldr	w0, [x19, #56]
  4431cc:	mov	x22, #0x0                   	// #0
  4431d0:	cbz	w0, 44328c <ferror@plt+0x40a0c>
  4431d4:	mov	x0, x22
  4431d8:	ldp	x19, x20, [sp, #16]
  4431dc:	ldp	x21, x22, [sp, #32]
  4431e0:	ldp	x23, x24, [sp, #48]
  4431e4:	ldr	x25, [sp, #64]
  4431e8:	ldp	x29, x30, [sp], #288
  4431ec:	ret
  4431f0:	sub	x0, x0, #0x1
  4431f4:	add	x5, x6, #0x1
  4431f8:	stp	x5, x0, [x19, #16]
  4431fc:	cmp	w20, #0x3f
  443200:	ldrb	w21, [x6]
  443204:	b.hi	443254 <ferror@plt+0x409d4>  // b.pmore
  443208:	and	x0, x21, #0x7f
  44320c:	lsl	x0, x0, x20
  443210:	orr	x22, x22, x0
  443214:	add	w20, w20, #0x7
  443218:	tbnz	w21, #7, 4431c0 <ferror@plt+0x40940>
  44321c:	and	w21, w21, #0x40
  443220:	cmp	w20, #0x3f
  443224:	mov	x0, #0xffffffffffffffff    	// #-1
  443228:	ccmp	w21, #0x0, #0x4, ls  // ls = plast
  44322c:	lsl	x20, x0, x20
  443230:	orr	x20, x22, x20
  443234:	csel	x22, x20, x22, ne  // ne = any
  443238:	mov	x0, x22
  44323c:	ldp	x19, x20, [sp, #16]
  443240:	ldp	x21, x22, [sp, #32]
  443244:	ldp	x23, x24, [sp, #48]
  443248:	ldr	x25, [sp, #64]
  44324c:	ldp	x29, x30, [sp], #288
  443250:	ret
  443254:	cbnz	w1, 443214 <ferror@plt+0x40994>
  443258:	ldp	x4, x6, [x19]
  44325c:	mov	x3, x24
  443260:	mov	x2, x23
  443264:	mov	x1, #0xc8                  	// #200
  443268:	mov	x0, x25
  44326c:	sub	w5, w5, w6
  443270:	bl	402360 <snprintf@plt>
  443274:	ldp	x3, x0, [x19, #40]
  443278:	mov	x1, x25
  44327c:	mov	w2, #0x0                   	// #0
  443280:	blr	x3
  443284:	mov	w1, #0x1                   	// #1
  443288:	b	443214 <ferror@plt+0x40994>
  44328c:	ldp	x4, x5, [x19]
  443290:	add	x20, sp, #0x58
  443294:	mov	x0, x20
  443298:	mov	x1, #0xc8                  	// #200
  44329c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4432a0:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4432a4:	add	x3, x3, #0x348
  4432a8:	add	x2, x2, #0x358
  4432ac:	sub	w5, w6, w5
  4432b0:	bl	402360 <snprintf@plt>
  4432b4:	ldp	x3, x0, [x19, #40]
  4432b8:	mov	x1, x20
  4432bc:	mov	w2, #0x0                   	// #0
  4432c0:	blr	x3
  4432c4:	mov	w0, #0x1                   	// #1
  4432c8:	str	w0, [x19, #56]
  4432cc:	mov	x0, x22
  4432d0:	ldp	x19, x20, [sp, #16]
  4432d4:	ldp	x21, x22, [sp, #32]
  4432d8:	ldp	x23, x24, [sp, #48]
  4432dc:	ldr	x25, [sp, #64]
  4432e0:	ldp	x29, x30, [sp], #288
  4432e4:	ret
  4432e8:	stp	x29, x30, [sp, #-256]!
  4432ec:	mov	x29, sp
  4432f0:	stp	x19, x20, [sp, #16]
  4432f4:	mov	x19, x0
  4432f8:	ldr	x0, [x0, #24]
  4432fc:	ldr	x5, [x19, #16]
  443300:	cmp	x0, #0x1
  443304:	b.hi	443324 <ferror@plt+0x40aa4>  // b.pmore
  443308:	ldr	w0, [x19, #56]
  44330c:	mov	w20, #0x0                   	// #0
  443310:	cbz	w0, 443370 <ferror@plt+0x40af0>
  443314:	mov	w0, w20
  443318:	ldp	x19, x20, [sp, #16]
  44331c:	ldp	x29, x30, [sp], #256
  443320:	ret
  443324:	ldr	w1, [x19, #32]
  443328:	sub	x0, x0, #0x2
  44332c:	add	x2, x5, #0x2
  443330:	stp	x2, x0, [x19, #16]
  443334:	cbz	w1, 443354 <ferror@plt+0x40ad4>
  443338:	ldrb	w0, [x5]
  44333c:	ldrb	w20, [x5, #1]
  443340:	bfi	w20, w0, #8, #24
  443344:	mov	w0, w20
  443348:	ldp	x19, x20, [sp, #16]
  44334c:	ldp	x29, x30, [sp], #256
  443350:	ret
  443354:	ldrb	w0, [x5, #1]
  443358:	ldrb	w20, [x5]
  44335c:	bfi	w20, w0, #8, #24
  443360:	mov	w0, w20
  443364:	ldp	x19, x20, [sp, #16]
  443368:	ldp	x29, x30, [sp], #256
  44336c:	ret
  443370:	ldp	x4, x1, [x19]
  443374:	str	x21, [sp, #32]
  443378:	add	x21, sp, #0x38
  44337c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443380:	mov	x0, x21
  443384:	add	x3, x3, #0x348
  443388:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44338c:	add	x2, x2, #0x358
  443390:	sub	w5, w5, w1
  443394:	mov	x1, #0xc8                  	// #200
  443398:	bl	402360 <snprintf@plt>
  44339c:	ldp	x3, x0, [x19, #40]
  4433a0:	mov	x1, x21
  4433a4:	mov	w2, #0x0                   	// #0
  4433a8:	blr	x3
  4433ac:	mov	w0, #0x1                   	// #1
  4433b0:	ldr	x21, [sp, #32]
  4433b4:	str	w0, [x19, #56]
  4433b8:	mov	w0, w20
  4433bc:	ldp	x19, x20, [sp, #16]
  4433c0:	ldp	x29, x30, [sp], #256
  4433c4:	ret
  4433c8:	stp	x29, x30, [sp, #-256]!
  4433cc:	mov	x29, sp
  4433d0:	stp	x19, x20, [sp, #16]
  4433d4:	mov	x19, x0
  4433d8:	ldr	x0, [x0, #24]
  4433dc:	ldr	x5, [x19, #16]
  4433e0:	cmp	x0, #0x3
  4433e4:	b.hi	443404 <ferror@plt+0x40b84>  // b.pmore
  4433e8:	ldr	w0, [x19, #56]
  4433ec:	mov	w20, #0x0                   	// #0
  4433f0:	cbz	w0, 443444 <ferror@plt+0x40bc4>
  4433f4:	mov	w0, w20
  4433f8:	ldp	x19, x20, [sp, #16]
  4433fc:	ldp	x29, x30, [sp], #256
  443400:	ret
  443404:	ldr	w1, [x19, #32]
  443408:	sub	x0, x0, #0x4
  44340c:	add	x2, x5, #0x4
  443410:	stp	x2, x0, [x19, #16]
  443414:	cbz	w1, 443430 <ferror@plt+0x40bb0>
  443418:	ldr	w20, [x5]
  44341c:	rev	w20, w20
  443420:	mov	w0, w20
  443424:	ldp	x19, x20, [sp, #16]
  443428:	ldp	x29, x30, [sp], #256
  44342c:	ret
  443430:	ldr	w20, [x5]
  443434:	mov	w0, w20
  443438:	ldp	x19, x20, [sp, #16]
  44343c:	ldp	x29, x30, [sp], #256
  443440:	ret
  443444:	ldp	x4, x1, [x19]
  443448:	str	x21, [sp, #32]
  44344c:	add	x21, sp, #0x38
  443450:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443454:	mov	x0, x21
  443458:	add	x3, x3, #0x348
  44345c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443460:	add	x2, x2, #0x358
  443464:	sub	w5, w5, w1
  443468:	mov	x1, #0xc8                  	// #200
  44346c:	bl	402360 <snprintf@plt>
  443470:	ldp	x3, x0, [x19, #40]
  443474:	mov	x1, x21
  443478:	mov	w2, #0x0                   	// #0
  44347c:	blr	x3
  443480:	mov	w0, #0x1                   	// #1
  443484:	ldr	x21, [sp, #32]
  443488:	str	w0, [x19, #56]
  44348c:	mov	w0, w20
  443490:	ldp	x19, x20, [sp, #16]
  443494:	ldp	x29, x30, [sp], #256
  443498:	ret
  44349c:	nop
  4434a0:	stp	x29, x30, [sp, #-256]!
  4434a4:	mov	x29, sp
  4434a8:	stp	x19, x20, [sp, #16]
  4434ac:	mov	x19, x0
  4434b0:	ldr	x0, [x0, #24]
  4434b4:	ldr	x5, [x19, #16]
  4434b8:	cmp	x0, #0x7
  4434bc:	b.hi	4434dc <ferror@plt+0x40c5c>  // b.pmore
  4434c0:	ldr	w0, [x19, #56]
  4434c4:	mov	x20, #0x0                   	// #0
  4434c8:	cbz	w0, 44351c <ferror@plt+0x40c9c>
  4434cc:	mov	x0, x20
  4434d0:	ldp	x19, x20, [sp, #16]
  4434d4:	ldp	x29, x30, [sp], #256
  4434d8:	ret
  4434dc:	ldr	w1, [x19, #32]
  4434e0:	sub	x0, x0, #0x8
  4434e4:	add	x2, x5, #0x8
  4434e8:	stp	x2, x0, [x19, #16]
  4434ec:	cbz	w1, 443508 <ferror@plt+0x40c88>
  4434f0:	ldr	x20, [x5]
  4434f4:	rev	x20, x20
  4434f8:	mov	x0, x20
  4434fc:	ldp	x19, x20, [sp, #16]
  443500:	ldp	x29, x30, [sp], #256
  443504:	ret
  443508:	ldr	x20, [x5]
  44350c:	mov	x0, x20
  443510:	ldp	x19, x20, [sp, #16]
  443514:	ldp	x29, x30, [sp], #256
  443518:	ret
  44351c:	ldp	x4, x1, [x19]
  443520:	str	x21, [sp, #32]
  443524:	add	x21, sp, #0x38
  443528:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44352c:	mov	x0, x21
  443530:	add	x3, x3, #0x348
  443534:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443538:	add	x2, x2, #0x358
  44353c:	sub	w5, w5, w1
  443540:	mov	x1, #0xc8                  	// #200
  443544:	bl	402360 <snprintf@plt>
  443548:	ldp	x3, x0, [x19, #40]
  44354c:	mov	x1, x21
  443550:	mov	w2, #0x0                   	// #0
  443554:	blr	x3
  443558:	mov	w0, #0x1                   	// #1
  44355c:	ldr	x21, [sp, #32]
  443560:	str	w0, [x19, #56]
  443564:	mov	x0, x20
  443568:	ldp	x19, x20, [sp, #16]
  44356c:	ldp	x29, x30, [sp], #256
  443570:	ret
  443574:	nop
  443578:	stp	x29, x30, [sp, #-256]!
  44357c:	cmp	w1, #0x4
  443580:	mov	x29, sp
  443584:	stp	x21, x22, [sp, #32]
  443588:	b.eq	44367c <ferror@plt+0x40dfc>  // b.none
  44358c:	stp	x19, x20, [sp, #16]
  443590:	mov	w19, w1
  443594:	mov	x20, x0
  443598:	b.gt	4435d8 <ferror@plt+0x40d58>
  44359c:	cmp	w1, #0x1
  4435a0:	b.eq	443694 <ferror@plt+0x40e14>  // b.none
  4435a4:	cmp	w1, #0x2
  4435a8:	b.ne	443628 <ferror@plt+0x40da8>  // b.any
  4435ac:	ldp	x5, x0, [x0, #16]
  4435b0:	cmp	x0, #0x1
  4435b4:	b.hi	4435fc <ferror@plt+0x40d7c>  // b.pmore
  4435b8:	ldr	w0, [x20, #56]
  4435bc:	mov	x21, #0x0                   	// #0
  4435c0:	cbz	w0, 443724 <ferror@plt+0x40ea4>
  4435c4:	ldp	x19, x20, [sp, #16]
  4435c8:	mov	x0, x21
  4435cc:	ldp	x21, x22, [sp, #32]
  4435d0:	ldp	x29, x30, [sp], #256
  4435d4:	ret
  4435d8:	cmp	w1, #0x8
  4435dc:	b.ne	443628 <ferror@plt+0x40da8>  // b.any
  4435e0:	bl	4434a0 <ferror@plt+0x40c20>
  4435e4:	mov	x21, x0
  4435e8:	mov	x0, x21
  4435ec:	ldp	x19, x20, [sp, #16]
  4435f0:	ldp	x21, x22, [sp, #32]
  4435f4:	ldp	x29, x30, [sp], #256
  4435f8:	ret
  4435fc:	ldr	w1, [x20, #32]
  443600:	sub	x0, x0, #0x2
  443604:	add	x2, x5, #0x2
  443608:	stp	x2, x0, [x20, #16]
  44360c:	cbz	w1, 44370c <ferror@plt+0x40e8c>
  443610:	ldrb	w21, [x5]
  443614:	ldrb	w0, [x5, #1]
  443618:	ldp	x19, x20, [sp, #16]
  44361c:	orr	w21, w0, w21, lsl #8
  443620:	and	x21, x21, #0xffff
  443624:	b	4435c8 <ferror@plt+0x40d48>
  443628:	ldp	x4, x1, [x20]
  44362c:	add	x19, sp, #0x38
  443630:	ldr	x5, [x20, #16]
  443634:	mov	x0, x19
  443638:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44363c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443640:	add	x3, x3, #0x3b0
  443644:	add	x2, x2, #0x358
  443648:	sub	w5, w5, w1
  44364c:	mov	x1, #0xc8                  	// #200
  443650:	bl	402360 <snprintf@plt>
  443654:	mov	x21, #0x0                   	// #0
  443658:	ldp	x3, x0, [x20, #40]
  44365c:	mov	x1, x19
  443660:	mov	w2, #0x0                   	// #0
  443664:	blr	x3
  443668:	mov	x0, x21
  44366c:	ldp	x19, x20, [sp, #16]
  443670:	ldp	x21, x22, [sp, #32]
  443674:	ldp	x29, x30, [sp], #256
  443678:	ret
  44367c:	bl	4433c8 <ferror@plt+0x40b48>
  443680:	mov	w21, w0
  443684:	mov	x0, x21
  443688:	ldp	x21, x22, [sp, #32]
  44368c:	ldp	x29, x30, [sp], #256
  443690:	ret
  443694:	ldp	x5, x21, [x0, #16]
  443698:	cbnz	x21, 4436e8 <ferror@plt+0x40e68>
  44369c:	ldr	w0, [x0, #56]
  4436a0:	cbnz	w0, 4435c4 <ferror@plt+0x40d44>
  4436a4:	ldp	x4, x1, [x20]
  4436a8:	add	x22, sp, #0x38
  4436ac:	mov	x0, x22
  4436b0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4436b4:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4436b8:	add	x3, x3, #0x348
  4436bc:	add	x2, x2, #0x358
  4436c0:	sub	w5, w5, w1
  4436c4:	mov	x1, #0xc8                  	// #200
  4436c8:	bl	402360 <snprintf@plt>
  4436cc:	ldp	x3, x0, [x20, #40]
  4436d0:	mov	x1, x22
  4436d4:	mov	w2, #0x0                   	// #0
  4436d8:	blr	x3
  4436dc:	str	w19, [x20, #56]
  4436e0:	ldp	x19, x20, [sp, #16]
  4436e4:	b	4435c8 <ferror@plt+0x40d48>
  4436e8:	add	x0, x5, #0x1
  4436ec:	sub	x21, x21, #0x1
  4436f0:	stp	x0, x21, [x20, #16]
  4436f4:	ldrb	w21, [x5]
  4436f8:	ldp	x19, x20, [sp, #16]
  4436fc:	mov	x0, x21
  443700:	ldp	x21, x22, [sp, #32]
  443704:	ldp	x29, x30, [sp], #256
  443708:	ret
  44370c:	ldrb	w21, [x5, #1]
  443710:	ldrb	w0, [x5]
  443714:	ldp	x19, x20, [sp, #16]
  443718:	orr	w21, w0, w21, lsl #8
  44371c:	and	x21, x21, #0xffff
  443720:	b	4435c8 <ferror@plt+0x40d48>
  443724:	ldp	x4, x1, [x20]
  443728:	add	x19, sp, #0x38
  44372c:	mov	x0, x19
  443730:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443734:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443738:	add	x3, x3, #0x348
  44373c:	add	x2, x2, #0x358
  443740:	sub	w5, w5, w1
  443744:	mov	x1, #0xc8                  	// #200
  443748:	bl	402360 <snprintf@plt>
  44374c:	ldp	x3, x0, [x20, #40]
  443750:	mov	x1, x19
  443754:	mov	w2, #0x0                   	// #0
  443758:	blr	x3
  44375c:	mov	w0, #0x1                   	// #1
  443760:	str	w0, [x20, #56]
  443764:	ldp	x19, x20, [sp, #16]
  443768:	b	4435c8 <ferror@plt+0x40d48>
  44376c:	nop
  443770:	stp	x29, x30, [sp, #-320]!
  443774:	mov	x29, sp
  443778:	stp	x21, x22, [sp, #32]
  44377c:	ldr	x21, [sp, #320]
  443780:	stp	x19, x20, [sp, #16]
  443784:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443788:	mov	x19, x1
  44378c:	add	x20, x20, #0x644
  443790:	stp	xzr, xzr, [x21]
  443794:	cmp	w0, #0x20
  443798:	b.hi	4437bc <ferror@plt+0x40f3c>  // b.pmore
  44379c:	cbz	w0, 443a44 <ferror@plt+0x411c4>
  4437a0:	sub	w0, w0, #0x1
  4437a4:	cmp	w0, #0x1f
  4437a8:	b.hi	443a44 <ferror@plt+0x411c4>  // b.pmore
  4437ac:	ldrh	w0, [x20, w0, uxtw #1]
  4437b0:	adr	x1, 4437bc <ferror@plt+0x40f3c>
  4437b4:	add	x0, x1, w0, sxth #2
  4437b8:	br	x0
  4437bc:	mov	w1, #0x1f20                	// #7968
  4437c0:	cmp	w0, w1
  4437c4:	b.eq	443c20 <ferror@plt+0x413a0>  // b.none
  4437c8:	b.ls	443818 <ferror@plt+0x40f98>  // b.plast
  4437cc:	mov	w1, #0x1f21                	// #7969
  4437d0:	cmp	w0, w1
  4437d4:	b.ne	443a44 <ferror@plt+0x411c4>  // b.any
  4437d8:	str	x7, [sp, #64]
  4437dc:	mov	x0, x19
  4437e0:	cbz	w2, 443c10 <ferror@plt+0x41390>
  4437e4:	bl	4434a0 <ferror@plt+0x40c20>
  4437e8:	ldr	x7, [sp, #64]
  4437ec:	cbz	x7, 443cd0 <ferror@plt+0x41450>
  4437f0:	ldr	x1, [x7, #112]
  4437f4:	cmp	x1, x0
  4437f8:	b.ls	443dd8 <ferror@plt+0x41558>  // b.plast
  4437fc:	ldr	x1, [x7, #104]
  443800:	mov	w2, #0x4                   	// #4
  443804:	mov	w20, #0x1                   	// #1
  443808:	str	w2, [x21]
  44380c:	add	x0, x1, x0
  443810:	str	x0, [x21, #8]
  443814:	b	443840 <ferror@plt+0x40fc0>
  443818:	mov	w1, #0xffffe0ff            	// #-7937
  44381c:	add	w0, w0, w1
  443820:	cmp	w0, #0x1
  443824:	b.hi	443a44 <ferror@plt+0x411c4>  // b.pmore
  443828:	mov	w0, #0x8                   	// #8
  44382c:	str	w0, [x21]
  443830:	mov	w20, #0x1                   	// #1
  443834:	mov	x0, x19
  443838:	bl	443030 <ferror@plt+0x407b0>
  44383c:	str	x0, [x21, #8]
  443840:	mov	w0, w20
  443844:	ldp	x19, x20, [sp, #16]
  443848:	ldp	x21, x22, [sp, #32]
  44384c:	ldp	x29, x30, [sp], #320
  443850:	ret
  443854:	ldp	x5, x22, [x19, #16]
  443858:	mov	w0, #0x2                   	// #2
  44385c:	str	w0, [x21]
  443860:	cbnz	x22, 443898 <ferror@plt+0x41018>
  443864:	ldr	w0, [x19, #56]
  443868:	cbz	w0, 443bc8 <ferror@plt+0x41348>
  44386c:	mov	w20, #0x1                   	// #1
  443870:	str	x22, [x21, #8]
  443874:	mov	w0, w20
  443878:	ldp	x19, x20, [sp, #16]
  44387c:	ldp	x21, x22, [sp, #32]
  443880:	ldp	x29, x30, [sp], #320
  443884:	ret
  443888:	ldp	x5, x22, [x19, #16]
  44388c:	mov	w0, #0x5                   	// #5
  443890:	str	w0, [x21]
  443894:	cbz	x22, 443864 <ferror@plt+0x40fe4>
  443898:	sub	x22, x22, #0x1
  44389c:	add	x0, x5, #0x1
  4438a0:	stp	x0, x22, [x19, #16]
  4438a4:	mov	w20, #0x1                   	// #1
  4438a8:	ldrb	w22, [x5]
  4438ac:	b	443870 <ferror@plt+0x40ff0>
  4438b0:	mov	w0, #0x3                   	// #3
  4438b4:	str	w0, [x21]
  4438b8:	mov	w20, #0x1                   	// #1
  4438bc:	mov	x0, x19
  4438c0:	bl	443180 <ferror@plt+0x40900>
  4438c4:	str	x0, [x21, #8]
  4438c8:	b	443840 <ferror@plt+0x40fc0>
  4438cc:	mov	w0, #0x9                   	// #9
  4438d0:	str	w0, [x21]
  4438d4:	mov	x0, x19
  4438d8:	mov	w20, #0x1                   	// #1
  4438dc:	bl	4434a0 <ferror@plt+0x40c20>
  4438e0:	str	x0, [x21, #8]
  4438e4:	mov	w0, w20
  4438e8:	ldp	x19, x20, [sp, #16]
  4438ec:	ldp	x21, x22, [sp, #32]
  4438f0:	ldp	x29, x30, [sp], #320
  4438f4:	ret
  4438f8:	ldp	x6, x0, [x19, #16]
  4438fc:	mov	w1, #0xa                   	// #10
  443900:	str	w1, [x21]
  443904:	cbnz	x0, 443c58 <ferror@plt+0x413d8>
  443908:	ldr	w1, [x19, #56]
  44390c:	cbz	w1, 443d48 <ferror@plt+0x414c8>
  443910:	mov	w20, #0x1                   	// #1
  443914:	stp	x6, x0, [x19, #16]
  443918:	b	443840 <ferror@plt+0x40fc0>
  44391c:	mov	w0, #0xa                   	// #10
  443920:	str	w0, [x21]
  443924:	mov	x0, x19
  443928:	bl	443030 <ferror@plt+0x407b0>
  44392c:	ldr	x1, [x19, #24]
  443930:	cmp	x0, x1
  443934:	b.ls	443c98 <ferror@plt+0x41418>  // b.plast
  443938:	ldr	w20, [x19, #56]
  44393c:	cbz	w20, 443b80 <ferror@plt+0x41300>
  443940:	mov	w20, #0x0                   	// #0
  443944:	b	443840 <ferror@plt+0x40fc0>
  443948:	ldp	x22, x20, [x19, #16]
  44394c:	mov	w0, #0x4                   	// #4
  443950:	str	w0, [x21]
  443954:	mov	x1, x20
  443958:	mov	x0, x22
  44395c:	bl	4022c0 <strnlen@plt>
  443960:	add	x0, x0, #0x1
  443964:	cmp	x20, x0
  443968:	b.cs	443cdc <ferror@plt+0x4145c>  // b.hs, b.nlast
  44396c:	ldr	w20, [x19, #56]
  443970:	cbz	w20, 443cf4 <ferror@plt+0x41474>
  443974:	mov	x22, #0x0                   	// #0
  443978:	mov	w20, #0x0                   	// #0
  44397c:	str	x22, [x21, #8]
  443980:	b	443874 <ferror@plt+0x40ff4>
  443984:	mov	w0, #0x2                   	// #2
  443988:	str	w0, [x21]
  44398c:	mov	w20, #0x1                   	// #1
  443990:	mov	x0, x19
  443994:	bl	4433c8 <ferror@plt+0x40b48>
  443998:	mov	w0, w0
  44399c:	str	x0, [x21, #8]
  4439a0:	b	443840 <ferror@plt+0x40fc0>
  4439a4:	mov	w0, #0x2                   	// #2
  4439a8:	str	w0, [x21]
  4439ac:	mov	w20, #0x1                   	// #1
  4439b0:	mov	x0, x19
  4439b4:	bl	4432e8 <ferror@plt+0x40a68>
  4439b8:	and	x0, x0, #0xffff
  4439bc:	str	x0, [x21, #8]
  4439c0:	b	443840 <ferror@plt+0x40fc0>
  4439c4:	mov	w0, #0x2                   	// #2
  4439c8:	b	4438d0 <ferror@plt+0x41050>
  4439cc:	mov	w0, #0xa                   	// #10
  4439d0:	str	w0, [x21]
  4439d4:	mov	x0, x19
  4439d8:	bl	4433c8 <ferror@plt+0x40b48>
  4439dc:	mov	w2, w0
  4439e0:	ldr	x1, [x19, #24]
  4439e4:	cmp	x1, w0, uxtw
  4439e8:	b.cc	443938 <ferror@plt+0x410b8>  // b.lo, b.ul, b.last
  4439ec:	ldr	x0, [x19, #16]
  4439f0:	sub	x1, x1, x2
  4439f4:	mov	w20, #0x1                   	// #1
  4439f8:	add	x2, x0, x2
  4439fc:	stp	x2, x1, [x19, #16]
  443a00:	b	443840 <ferror@plt+0x40fc0>
  443a04:	mov	w0, #0xa                   	// #10
  443a08:	str	w0, [x21]
  443a0c:	mov	x0, x19
  443a10:	bl	4432e8 <ferror@plt+0x40a68>
  443a14:	and	x2, x0, #0xffff
  443a18:	ldr	x1, [x19, #24]
  443a1c:	cmp	x1, w0, uxth
  443a20:	b.cc	443938 <ferror@plt+0x410b8>  // b.lo, b.ul, b.last
  443a24:	b	4439ec <ferror@plt+0x4116c>
  443a28:	mov	w20, #0x1                   	// #1
  443a2c:	str	w20, [x21]
  443a30:	mov	w1, w4
  443a34:	mov	x0, x19
  443a38:	bl	443578 <ferror@plt+0x40cf8>
  443a3c:	str	x0, [x21, #8]
  443a40:	b	443840 <ferror@plt+0x40fc0>
  443a44:	ldp	x4, x1, [x19]
  443a48:	add	x21, sp, #0x78
  443a4c:	ldr	x5, [x19, #16]
  443a50:	mov	x0, x21
  443a54:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443a58:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443a5c:	add	x3, x3, #0x418
  443a60:	add	x2, x2, #0x358
  443a64:	sub	w5, w5, w1
  443a68:	mov	x1, #0xc8                  	// #200
  443a6c:	bl	402360 <snprintf@plt>
  443a70:	mov	w20, #0x0                   	// #0
  443a74:	ldp	x3, x0, [x19, #40]
  443a78:	mov	x1, x21
  443a7c:	mov	w2, #0x0                   	// #0
  443a80:	blr	x3
  443a84:	b	443840 <ferror@plt+0x40fc0>
  443a88:	mov	x0, #0x1                   	// #1
  443a8c:	mov	w1, #0x2                   	// #2
  443a90:	mov	w20, w0
  443a94:	str	w1, [x21]
  443a98:	str	x0, [x21, #8]
  443a9c:	b	443840 <ferror@plt+0x40fc0>
  443aa0:	mov	w0, #0xb                   	// #11
  443aa4:	b	443920 <ferror@plt+0x410a0>
  443aa8:	mov	w0, #0x8                   	// #8
  443aac:	str	w0, [x21]
  443ab0:	mov	x0, x19
  443ab4:	cbz	w2, 443c4c <ferror@plt+0x413cc>
  443ab8:	bl	4434a0 <ferror@plt+0x40c20>
  443abc:	mov	w20, #0x1                   	// #1
  443ac0:	str	x0, [x21, #8]
  443ac4:	b	443840 <ferror@plt+0x40fc0>
  443ac8:	mov	x0, x19
  443acc:	str	w2, [sp, #64]
  443ad0:	str	w3, [sp, #72]
  443ad4:	str	w4, [sp, #84]
  443ad8:	stp	x5, x6, [sp, #88]
  443adc:	str	x7, [sp, #104]
  443ae0:	bl	443030 <ferror@plt+0x407b0>
  443ae4:	ldr	w2, [sp, #64]
  443ae8:	ldr	w3, [sp, #72]
  443aec:	ldr	w4, [sp, #84]
  443af0:	ldp	x5, x6, [sp, #88]
  443af4:	ldr	x7, [sp, #104]
  443af8:	b	443790 <ferror@plt+0x40f10>
  443afc:	mov	w0, #0x5                   	// #5
  443b00:	b	44382c <ferror@plt+0x40fac>
  443b04:	mov	w0, #0x6                   	// #6
  443b08:	str	w0, [x21]
  443b0c:	cmp	w3, #0x2
  443b10:	b.ne	443ab0 <ferror@plt+0x41230>  // b.any
  443b14:	mov	w1, w4
  443b18:	mov	x0, x19
  443b1c:	mov	w20, #0x1                   	// #1
  443b20:	bl	443578 <ferror@plt+0x40cf8>
  443b24:	str	x0, [x21, #8]
  443b28:	b	443840 <ferror@plt+0x40fc0>
  443b2c:	mov	w0, #0x2                   	// #2
  443b30:	b	44382c <ferror@plt+0x40fac>
  443b34:	mov	w0, #0x5                   	// #5
  443b38:	b	4438d0 <ferror@plt+0x41050>
  443b3c:	mov	w0, #0x5                   	// #5
  443b40:	b	443988 <ferror@plt+0x41108>
  443b44:	mov	w0, #0x5                   	// #5
  443b48:	b	4439a8 <ferror@plt+0x41128>
  443b4c:	stp	x5, x6, [sp, #64]
  443b50:	mov	x0, x19
  443b54:	cbz	w2, 443cb0 <ferror@plt+0x41430>
  443b58:	bl	4434a0 <ferror@plt+0x40c20>
  443b5c:	ldp	x5, x6, [sp, #64]
  443b60:	cmp	x0, x6
  443b64:	b.cs	443d94 <ferror@plt+0x41514>  // b.hs, b.nlast
  443b68:	add	x5, x5, x0
  443b6c:	mov	w20, #0x1                   	// #1
  443b70:	mov	w0, #0x4                   	// #4
  443b74:	str	w0, [x21]
  443b78:	str	x5, [x21, #8]
  443b7c:	b	443840 <ferror@plt+0x40fc0>
  443b80:	ldp	x4, x1, [x19]
  443b84:	add	x21, sp, #0x78
  443b88:	ldr	x5, [x19, #16]
  443b8c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443b90:	mov	x0, x21
  443b94:	add	x3, x3, #0x348
  443b98:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443b9c:	sub	w5, w5, w1
  443ba0:	add	x2, x2, #0x358
  443ba4:	mov	x1, #0xc8                  	// #200
  443ba8:	bl	402360 <snprintf@plt>
  443bac:	ldp	x3, x0, [x19, #40]
  443bb0:	mov	x1, x21
  443bb4:	mov	w2, #0x0                   	// #0
  443bb8:	blr	x3
  443bbc:	mov	w0, #0x1                   	// #1
  443bc0:	str	w0, [x19, #56]
  443bc4:	b	443840 <ferror@plt+0x40fc0>
  443bc8:	ldp	x4, x1, [x19]
  443bcc:	add	x20, sp, #0x78
  443bd0:	mov	x0, x20
  443bd4:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443bd8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443bdc:	add	x3, x3, #0x348
  443be0:	add	x2, x2, #0x358
  443be4:	sub	w5, w5, w1
  443be8:	mov	x1, #0xc8                  	// #200
  443bec:	bl	402360 <snprintf@plt>
  443bf0:	ldp	x3, x0, [x19, #40]
  443bf4:	mov	x1, x20
  443bf8:	mov	w2, #0x0                   	// #0
  443bfc:	mov	w20, #0x1                   	// #1
  443c00:	blr	x3
  443c04:	mov	w0, #0x1                   	// #1
  443c08:	str	w0, [x19, #56]
  443c0c:	b	443870 <ferror@plt+0x40ff0>
  443c10:	bl	4433c8 <ferror@plt+0x40b48>
  443c14:	mov	w0, w0
  443c18:	ldr	x7, [sp, #64]
  443c1c:	b	4437ec <ferror@plt+0x40f6c>
  443c20:	str	x7, [sp, #64]
  443c24:	mov	x0, x19
  443c28:	cbz	w2, 443cc0 <ferror@plt+0x41440>
  443c2c:	bl	4434a0 <ferror@plt+0x40c20>
  443c30:	ldr	x7, [sp, #64]
  443c34:	str	x0, [x21, #8]
  443c38:	cbz	x7, 443cd0 <ferror@plt+0x41450>
  443c3c:	mov	w0, #0x7                   	// #7
  443c40:	mov	w20, #0x1                   	// #1
  443c44:	str	w0, [x21]
  443c48:	b	443840 <ferror@plt+0x40fc0>
  443c4c:	bl	4433c8 <ferror@plt+0x40b48>
  443c50:	mov	w0, w0
  443c54:	b	443abc <ferror@plt+0x4123c>
  443c58:	sub	x0, x0, #0x1
  443c5c:	add	x5, x6, #0x1
  443c60:	stp	x5, x0, [x19, #16]
  443c64:	ldrb	w6, [x6]
  443c68:	cmp	x6, x0
  443c6c:	b.ls	443df8 <ferror@plt+0x41578>  // b.plast
  443c70:	ldr	w20, [x19, #56]
  443c74:	cbnz	w20, 443940 <ferror@plt+0x410c0>
  443c78:	ldp	x4, x1, [x19]
  443c7c:	add	x21, sp, #0x78
  443c80:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443c84:	mov	x0, x21
  443c88:	add	x3, x3, #0x348
  443c8c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443c90:	sub	w5, w5, w1
  443c94:	b	443ba0 <ferror@plt+0x41320>
  443c98:	ldr	x2, [x19, #16]
  443c9c:	sub	x1, x1, x0
  443ca0:	mov	w20, #0x1                   	// #1
  443ca4:	add	x0, x2, x0
  443ca8:	stp	x0, x1, [x19, #16]
  443cac:	b	443840 <ferror@plt+0x40fc0>
  443cb0:	bl	4433c8 <ferror@plt+0x40b48>
  443cb4:	mov	w0, w0
  443cb8:	ldp	x5, x6, [sp, #64]
  443cbc:	b	443b60 <ferror@plt+0x412e0>
  443cc0:	bl	4433c8 <ferror@plt+0x40b48>
  443cc4:	mov	w0, w0
  443cc8:	ldr	x7, [sp, #64]
  443ccc:	b	443c34 <ferror@plt+0x413b4>
  443cd0:	mov	w20, #0x1                   	// #1
  443cd4:	str	wzr, [x21]
  443cd8:	b	443840 <ferror@plt+0x40fc0>
  443cdc:	sub	x1, x20, x0
  443ce0:	add	x0, x22, x0
  443ce4:	stp	x0, x1, [x19, #16]
  443ce8:	mov	w20, #0x1                   	// #1
  443cec:	str	x22, [x21, #8]
  443cf0:	b	443874 <ferror@plt+0x40ff4>
  443cf4:	ldp	x4, x5, [x19]
  443cf8:	str	x23, [sp, #48]
  443cfc:	add	x23, sp, #0x78
  443d00:	mov	x1, #0xc8                  	// #200
  443d04:	mov	x0, x23
  443d08:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443d0c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443d10:	add	x3, x3, #0x348
  443d14:	add	x2, x2, #0x358
  443d18:	sub	w5, w22, w5
  443d1c:	bl	402360 <snprintf@plt>
  443d20:	ldp	x3, x0, [x19, #40]
  443d24:	mov	x1, x23
  443d28:	mov	w2, #0x0                   	// #0
  443d2c:	mov	x22, #0x0                   	// #0
  443d30:	blr	x3
  443d34:	mov	w0, #0x1                   	// #1
  443d38:	ldr	x23, [sp, #48]
  443d3c:	str	w0, [x19, #56]
  443d40:	str	x22, [x21, #8]
  443d44:	b	443874 <ferror@plt+0x40ff4>
  443d48:	ldp	x4, x5, [x19]
  443d4c:	add	x20, sp, #0x78
  443d50:	mov	x1, #0xc8                  	// #200
  443d54:	mov	x0, x20
  443d58:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443d5c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443d60:	add	x3, x3, #0x348
  443d64:	add	x2, x2, #0x358
  443d68:	sub	w5, w6, w5
  443d6c:	bl	402360 <snprintf@plt>
  443d70:	ldp	x3, x0, [x19, #40]
  443d74:	mov	x1, x20
  443d78:	mov	w2, #0x0                   	// #0
  443d7c:	blr	x3
  443d80:	mov	w0, #0x1                   	// #1
  443d84:	str	w0, [x19, #56]
  443d88:	ldr	x6, [x19, #16]
  443d8c:	ldr	x0, [x19, #24]
  443d90:	b	443910 <ferror@plt+0x41090>
  443d94:	ldp	x4, x1, [x19]
  443d98:	add	x20, sp, #0x78
  443d9c:	ldr	x5, [x19, #16]
  443da0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443da4:	mov	x0, x20
  443da8:	add	x3, x3, #0x3d0
  443dac:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443db0:	sub	w5, w5, w1
  443db4:	add	x2, x2, #0x358
  443db8:	mov	x1, #0xc8                  	// #200
  443dbc:	bl	402360 <snprintf@plt>
  443dc0:	ldp	x3, x0, [x19, #40]
  443dc4:	mov	x1, x20
  443dc8:	mov	w2, #0x0                   	// #0
  443dcc:	mov	w20, #0x0                   	// #0
  443dd0:	blr	x3
  443dd4:	b	443840 <ferror@plt+0x40fc0>
  443dd8:	add	x20, sp, #0x78
  443ddc:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443de0:	mov	x0, x20
  443de4:	add	x3, x3, #0x3f0
  443de8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443dec:	ldp	x4, x1, [x19]
  443df0:	ldr	x5, [x19, #16]
  443df4:	b	443db0 <ferror@plt+0x41530>
  443df8:	sub	x0, x0, x6
  443dfc:	add	x6, x5, x6
  443e00:	b	443910 <ferror@plt+0x41090>
  443e04:	nop
  443e08:	sub	sp, sp, #0x190
  443e0c:	stp	x29, x30, [sp, #16]
  443e10:	add	x29, sp, #0x10
  443e14:	stp	x27, x28, [sp, #96]
  443e18:	mov	x27, x0
  443e1c:	ldr	x0, [x1, #16]
  443e20:	stp	x21, x22, [sp, #48]
  443e24:	stp	x23, x24, [sp, #64]
  443e28:	cmp	x0, x2
  443e2c:	mov	x24, x4
  443e30:	str	x3, [sp, #112]
  443e34:	b.hi	444038 <ferror@plt+0x417b8>  // b.pmore
  443e38:	stp	x19, x20, [sp, #32]
  443e3c:	mov	x19, x1
  443e40:	sub	x4, x2, x0
  443e44:	ldr	x1, [x1, #8]
  443e48:	cmp	x4, x1
  443e4c:	b.cs	444034 <ferror@plt+0x417b4>  // b.hs, b.nlast
  443e50:	ldr	x3, [x19]
  443e54:	add	x0, x0, x1
  443e58:	sub	x1, x0, x2
  443e5c:	ldr	w5, [x27, #120]
  443e60:	add	x2, x3, x4
  443e64:	stp	x2, x1, [sp, #152]
  443e68:	adrp	x3, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  443e6c:	ldr	x6, [x27, #56]
  443e70:	add	x3, x3, #0x8d8
  443e74:	ldr	x1, [sp, #112]
  443e78:	add	x21, sp, #0x88
  443e7c:	mov	x0, x21
  443e80:	stp	x3, x6, [sp, #136]
  443e84:	str	w5, [sp, #168]
  443e88:	str	x1, [sp, #176]
  443e8c:	str	x24, [sp, #184]
  443e90:	str	wzr, [sp, #192]
  443e94:	bl	443030 <ferror@plt+0x407b0>
  443e98:	cbz	x0, 4440ac <ferror@plt+0x4182c>
  443e9c:	ldp	x4, x5, [x19, #88]
  443ea0:	stp	x25, x26, [sp, #80]
  443ea4:	sub	x1, x0, #0x1
  443ea8:	cmp	x4, x1
  443eac:	b.ls	443ec8 <ferror@plt+0x41648>  // b.plast
  443eb0:	lsl	x1, x0, #5
  443eb4:	sub	x1, x1, #0x20
  443eb8:	add	x26, x5, x1
  443ebc:	ldr	x1, [x5, x1]
  443ec0:	cmp	x0, x1
  443ec4:	b.eq	443ef4 <ferror@plt+0x41674>  // b.none
  443ec8:	mov	x3, #0x0                   	// #0
  443ecc:	add	x1, x4, x3
  443ed0:	cmp	x4, x3
  443ed4:	b.ls	443fbc <ferror@plt+0x4173c>  // b.plast
  443ed8:	lsr	x1, x1, #1
  443edc:	lsl	x2, x1, #5
  443ee0:	add	x26, x5, x2
  443ee4:	ldr	x2, [x5, x2]
  443ee8:	cmp	x0, x2
  443eec:	b.cc	443ffc <ferror@plt+0x4177c>  // b.lo, b.ul, b.last
  443ef0:	b.hi	443fac <ferror@plt+0x4172c>  // b.pmore
  443ef4:	ldr	x0, [x26, #16]
  443ef8:	cbz	x0, 444084 <ferror@plt+0x41804>
  443efc:	add	x20, sp, #0xc8
  443f00:	mov	x28, #0x0                   	// #0
  443f04:	add	x0, x20, #0x8
  443f08:	mov	x22, #0x0                   	// #0
  443f0c:	mov	w25, #0x2007                	// #8199
  443f10:	str	x0, [sp, #120]
  443f14:	b	443f38 <ferror@plt+0x416b8>
  443f18:	cmp	w2, #0x3
  443f1c:	b.ne	443f28 <ferror@plt+0x416a8>  // b.any
  443f20:	cbz	x22, 444070 <ferror@plt+0x417f0>
  443f24:	nop
  443f28:	ldr	x0, [x26, #16]
  443f2c:	add	x28, x28, #0x1
  443f30:	cmp	x0, x28
  443f34:	b.ls	443fd8 <ferror@plt+0x41758>  // b.plast
  443f38:	ldr	x8, [x26, #24]
  443f3c:	lsl	x23, x28, #3
  443f40:	ldp	x5, x6, [x27, #104]
  443f44:	add	x8, x8, x23
  443f48:	ldp	w3, w2, [x19, #40]
  443f4c:	mov	x1, x21
  443f50:	ldr	w4, [x19, #48]
  443f54:	ldr	w0, [x8, #4]
  443f58:	ldr	x7, [x27, #8]
  443f5c:	str	x20, [sp]
  443f60:	bl	443770 <ferror@plt+0x40ef0>
  443f64:	cbz	w0, 444084 <ferror@plt+0x41804>
  443f68:	ldr	x0, [x26, #24]
  443f6c:	add	x1, x0, x23
  443f70:	ldr	w2, [x0, x23]
  443f74:	cmp	w2, #0x47
  443f78:	b.eq	444004 <ferror@plt+0x41784>  // b.none
  443f7c:	b.ls	443f18 <ferror@plt+0x41698>  // b.plast
  443f80:	cmp	w2, #0x6e
  443f84:	b.eq	443f90 <ferror@plt+0x41710>  // b.none
  443f88:	cmp	w2, w25
  443f8c:	b.ne	443f28 <ferror@plt+0x416a8>  // b.any
  443f90:	ldr	w0, [sp, #200]
  443f94:	cmp	w0, #0x4
  443f98:	b.ne	443f28 <ferror@plt+0x416a8>  // b.any
  443f9c:	ldp	x19, x20, [sp, #32]
  443fa0:	ldp	x25, x26, [sp, #80]
  443fa4:	ldr	x22, [sp, #208]
  443fa8:	b	444054 <ferror@plt+0x417d4>
  443fac:	add	x3, x1, #0x1
  443fb0:	add	x1, x4, x3
  443fb4:	cmp	x4, x3
  443fb8:	b.hi	443ed8 <ferror@plt+0x41658>  // b.pmore
  443fbc:	ldr	x3, [sp, #112]
  443fc0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  443fc4:	mov	x0, x24
  443fc8:	add	x1, x1, #0x490
  443fcc:	mov	x22, #0x0                   	// #0
  443fd0:	mov	w2, #0x0                   	// #0
  443fd4:	blr	x3
  443fd8:	mov	x0, x22
  443fdc:	ldp	x29, x30, [sp, #16]
  443fe0:	ldp	x19, x20, [sp, #32]
  443fe4:	ldp	x21, x22, [sp, #48]
  443fe8:	ldp	x23, x24, [sp, #64]
  443fec:	ldp	x25, x26, [sp, #80]
  443ff0:	ldp	x27, x28, [sp, #96]
  443ff4:	add	sp, sp, #0x190
  443ff8:	ret
  443ffc:	mov	x4, x1
  444000:	b	443ecc <ferror@plt+0x4164c>
  444004:	ldr	w0, [x1, #4]
  444008:	cmp	w0, #0x20
  44400c:	b.eq	443f28 <ferror@plt+0x416a8>  // b.none
  444010:	ldp	x4, x3, [sp, #112]
  444014:	mov	x5, x24
  444018:	mov	x2, x20
  44401c:	mov	x1, x19
  444020:	mov	x0, x27
  444024:	bl	444110 <ferror@plt+0x41890>
  444028:	cmp	x0, #0x0
  44402c:	csel	x22, x22, x0, eq  // eq = none
  444030:	b	443f28 <ferror@plt+0x416a8>
  444034:	ldp	x19, x20, [sp, #32]
  444038:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44403c:	ldr	x3, [sp, #112]
  444040:	mov	x0, x24
  444044:	add	x1, x1, #0x430
  444048:	mov	w2, #0x0                   	// #0
  44404c:	mov	x22, #0x0                   	// #0
  444050:	blr	x3
  444054:	mov	x0, x22
  444058:	ldp	x29, x30, [sp, #16]
  44405c:	ldp	x21, x22, [sp, #48]
  444060:	ldp	x23, x24, [sp, #64]
  444064:	ldp	x27, x28, [sp, #96]
  444068:	add	sp, sp, #0x190
  44406c:	ret
  444070:	ldr	w0, [sp, #200]
  444074:	ldr	x22, [sp, #208]
  444078:	cmp	w0, #0x4
  44407c:	csel	x22, x22, xzr, eq  // eq = none
  444080:	b	443f28 <ferror@plt+0x416a8>
  444084:	mov	x22, #0x0                   	// #0
  444088:	mov	x0, x22
  44408c:	ldp	x29, x30, [sp, #16]
  444090:	ldp	x19, x20, [sp, #32]
  444094:	ldp	x21, x22, [sp, #48]
  444098:	ldp	x23, x24, [sp, #64]
  44409c:	ldp	x25, x26, [sp, #80]
  4440a0:	ldp	x27, x28, [sp, #96]
  4440a4:	add	sp, sp, #0x190
  4440a8:	ret
  4440ac:	ldp	x4, x1, [sp, #136]
  4440b0:	add	x19, sp, #0xc8
  4440b4:	ldr	x5, [sp, #152]
  4440b8:	mov	x0, x19
  4440bc:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4440c0:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4440c4:	add	x3, x3, #0x460
  4440c8:	add	x2, x2, #0x358
  4440cc:	sub	w5, w5, w1
  4440d0:	mov	x1, #0xc8                  	// #200
  4440d4:	bl	402360 <snprintf@plt>
  4440d8:	mov	x22, #0x0                   	// #0
  4440dc:	ldp	x3, x0, [sp, #176]
  4440e0:	mov	x1, x19
  4440e4:	mov	w2, #0x0                   	// #0
  4440e8:	blr	x3
  4440ec:	mov	x0, x22
  4440f0:	ldp	x29, x30, [sp, #16]
  4440f4:	ldp	x19, x20, [sp, #32]
  4440f8:	ldp	x21, x22, [sp, #48]
  4440fc:	ldp	x23, x24, [sp, #64]
  444100:	ldp	x27, x28, [sp, #96]
  444104:	add	sp, sp, #0x190
  444108:	ret
  44410c:	nop
  444110:	ldr	w2, [x2]
  444114:	mov	x6, x3
  444118:	mov	x7, x0
  44411c:	mov	x3, x4
  444120:	cmp	w2, #0x6
  444124:	mov	x4, x5
  444128:	b.eq	444190 <ferror@plt+0x41910>  // b.none
  44412c:	cmp	w2, #0x2
  444130:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  444134:	b.eq	4441e8 <ferror@plt+0x41968>  // b.none
  444138:	cmp	w2, #0x7
  44413c:	b.ne	444188 <ferror@plt+0x41908>  // b.any
  444140:	ldr	x0, [x0, #8]
  444144:	mov	x5, #0x0                   	// #0
  444148:	ldr	x2, [x6]
  44414c:	ldp	x9, x7, [x0, #40]
  444150:	add	x6, x7, x5
  444154:	cmp	x7, x5
  444158:	b.ls	444188 <ferror@plt+0x41908>  // b.plast
  44415c:	lsr	x6, x6, #1
  444160:	ldr	x1, [x9, x6, lsl #3]
  444164:	ldr	x8, [x1, #24]
  444168:	cmp	x2, x8
  44416c:	b.cc	4441e0 <ferror@plt+0x41960>  // b.lo, b.ul, b.last
  444170:	ldr	x10, [x1, #32]
  444174:	add	x5, x6, #0x1
  444178:	cmp	x2, x10
  44417c:	b.cs	444150 <ferror@plt+0x418d0>  // b.hs, b.nlast
  444180:	sub	x2, x2, x8
  444184:	b	443e08 <ferror@plt+0x41588>
  444188:	mov	x0, #0x0                   	// #0
  44418c:	ret
  444190:	ldp	x9, x5, [x7, #40]
  444194:	mov	x0, #0x0                   	// #0
  444198:	ldr	x2, [x6]
  44419c:	add	x6, x5, x0
  4441a0:	cmp	x5, x0
  4441a4:	b.ls	444188 <ferror@plt+0x41908>  // b.plast
  4441a8:	lsr	x6, x6, #1
  4441ac:	ldr	x1, [x9, x6, lsl #3]
  4441b0:	ldr	x8, [x1, #24]
  4441b4:	cmp	x2, x8
  4441b8:	b.cc	4441d8 <ferror@plt+0x41958>  // b.lo, b.ul, b.last
  4441bc:	ldr	x10, [x1, #32]
  4441c0:	add	x0, x6, #0x1
  4441c4:	cmp	x2, x10
  4441c8:	b.cs	44419c <ferror@plt+0x4191c>  // b.hs, b.nlast
  4441cc:	sub	x2, x2, x8
  4441d0:	mov	x0, x7
  4441d4:	b	443e08 <ferror@plt+0x41588>
  4441d8:	mov	x5, x6
  4441dc:	b	44419c <ferror@plt+0x4191c>
  4441e0:	mov	x7, x6
  4441e4:	b	444150 <ferror@plt+0x418d0>
  4441e8:	ldr	x2, [x6]
  4441ec:	b	443e08 <ferror@plt+0x41588>
  4441f0:	sub	sp, sp, #0x120
  4441f4:	stp	x29, x30, [sp, #48]
  4441f8:	add	x29, sp, #0x30
  4441fc:	stp	x27, x28, [sp, #128]
  444200:	ldr	x27, [sp, #312]
  444204:	stp	x23, x24, [sp, #96]
  444208:	ldr	x23, [sp, #288]
  44420c:	mov	x28, x27
  444210:	stp	x19, x20, [sp, #64]
  444214:	mov	x19, x2
  444218:	add	x20, sp, #0xe0
  44421c:	stp	x21, x22, [sp, #80]
  444220:	mov	x22, x3
  444224:	mov	x21, x4
  444228:	stp	x25, x26, [sp, #112]
  44422c:	stp	x1, x6, [sp, #184]
  444230:	stp	x0, x5, [sp, #200]
  444234:	str	w7, [sp, #220]
  444238:	ldr	x0, [x19, #24]
  44423c:	cbz	x0, 4445e8 <ferror@plt+0x41d68>
  444240:	mov	x0, x19
  444244:	bl	443030 <ferror@plt+0x407b0>
  444248:	cbz	x0, 4445e8 <ferror@plt+0x41d68>
  44424c:	ldp	x4, x5, [x28, #88]
  444250:	sub	x1, x0, #0x1
  444254:	cmp	x4, x1
  444258:	b.ls	444274 <ferror@plt+0x419f4>  // b.plast
  44425c:	lsl	x1, x0, #5
  444260:	sub	x1, x1, #0x20
  444264:	add	x25, x5, x1
  444268:	ldr	x1, [x5, x1]
  44426c:	cmp	x0, x1
  444270:	b.eq	4442a0 <ferror@plt+0x41a20>  // b.none
  444274:	mov	x3, #0x0                   	// #0
  444278:	add	x1, x4, x3
  44427c:	cmp	x4, x3
  444280:	b.ls	444514 <ferror@plt+0x41c94>  // b.plast
  444284:	lsr	x1, x1, #1
  444288:	lsl	x2, x1, #5
  44428c:	add	x25, x5, x2
  444290:	ldr	x2, [x5, x2]
  444294:	cmp	x0, x2
  444298:	b.cc	444530 <ferror@plt+0x41cb0>  // b.lo, b.ul, b.last
  44429c:	b.hi	444504 <ferror@plt+0x41c84>  // b.pmore
  4442a0:	ldr	x0, [sp, #328]
  4442a4:	cbz	x0, 4442b4 <ferror@plt+0x41a34>
  4442a8:	mov	x1, x0
  4442ac:	ldr	w0, [x25, #8]
  4442b0:	str	w0, [x1]
  4442b4:	ldr	x0, [x25, #16]
  4442b8:	cbz	x0, 444468 <ferror@plt+0x41be8>
  4442bc:	ldr	x1, [x25, #24]
  4442c0:	mov	x27, #0x0                   	// #0
  4442c4:	mov	x24, #0x0                   	// #0
  4442c8:	str	wzr, [sp, #144]
  4442cc:	mov	x2, x1
  4442d0:	str	wzr, [sp, #152]
  4442d4:	stp	xzr, xzr, [sp, #160]
  4442d8:	str	wzr, [sp, #180]
  4442dc:	str	wzr, [sp, #216]
  4442e0:	b	444318 <ferror@plt+0x41a98>
  4442e4:	cmp	w0, #0x10
  4442e8:	b.eq	444564 <ferror@plt+0x41ce4>  // b.none
  4442ec:	cmp	w0, #0x11
  4442f0:	b.ne	4444d8 <ferror@plt+0x41c58>  // b.any
  4442f4:	ldr	w0, [sp, #224]
  4442f8:	cmp	w0, #0x1
  4442fc:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  444300:	ldr	x24, [sp, #232]
  444304:	str	w0, [sp, #180]
  444308:	ldr	x0, [x25, #16]
  44430c:	add	x27, x27, #0x1
  444310:	cmp	x0, x27
  444314:	b.ls	4443a0 <ferror@plt+0x41b20>  // b.plast
  444318:	lsl	x26, x27, #3
  44431c:	ldr	w4, [x28, #48]
  444320:	add	x0, x2, x26
  444324:	mov	x7, x23
  444328:	ldp	w3, w2, [x28, #40]
  44432c:	mov	x6, x21
  444330:	ldr	w0, [x0, #4]
  444334:	mov	x5, x22
  444338:	str	x20, [sp]
  44433c:	mov	x1, x19
  444340:	bl	443770 <ferror@plt+0x40ef0>
  444344:	cbz	w0, 4444b8 <ferror@plt+0x41c38>
  444348:	ldr	x2, [x25, #24]
  44434c:	ldr	w0, [x2, x26]
  444350:	cmp	w0, #0x12
  444354:	b.eq	444538 <ferror@plt+0x41cb8>  // b.none
  444358:	b.ls	4442e4 <ferror@plt+0x41a64>  // b.plast
  44435c:	cmp	w0, #0x1b
  444360:	b.eq	44458c <ferror@plt+0x41d0c>  // b.none
  444364:	cmp	w0, #0x55
  444368:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  44436c:	ldr	w0, [sp, #224]
  444370:	cmp	w0, #0x2
  444374:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  444378:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  44437c:	mov	w0, #0x1                   	// #1
  444380:	str	w0, [sp, #144]
  444384:	ldr	x0, [sp, #232]
  444388:	str	x0, [sp, #168]
  44438c:	ldr	x0, [x25, #16]
  444390:	add	x27, x27, #0x1
  444394:	cmp	x0, x27
  444398:	b.hi	444318 <ferror@plt+0x41a98>  // b.pmore
  44439c:	nop
  4443a0:	ldr	w1, [x25, #8]
  4443a4:	cmp	w1, #0x2e
  4443a8:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  4443ac:	b.ne	444468 <ferror@plt+0x41be8>  // b.any
  4443b0:	ldr	w0, [sp, #144]
  4443b4:	cbnz	w0, 4445f0 <ferror@plt+0x41d70>
  4443b8:	ldr	w2, [sp, #152]
  4443bc:	ldr	w0, [sp, #180]
  4443c0:	tst	w0, w2
  4443c4:	b.eq	444468 <ferror@plt+0x41be8>  // b.none
  4443c8:	ldr	x0, [sp, #320]
  4443cc:	ldr	x3, [sp, #160]
  4443d0:	ldr	w2, [sp, #216]
  4443d4:	ldr	x0, [x0, #24]
  4443d8:	cmp	w2, #0x0
  4443dc:	ldr	x4, [sp, #184]
  4443e0:	add	x2, x3, x24
  4443e4:	csel	x2, x2, x3, ne  // ne = any
  4443e8:	add	x24, x24, x4
  4443ec:	add	x26, x2, x4
  4443f0:	cbz	x0, 444424 <ferror@plt+0x41ba4>
  4443f4:	ldr	x2, [sp, #320]
  4443f8:	add	x0, x0, x0, lsl #1
  4443fc:	lsl	x0, x0, #3
  444400:	ldr	x2, [x2]
  444404:	sub	x0, x0, #0x18
  444408:	add	x0, x2, x0
  44440c:	ldr	x2, [x0, #8]
  444410:	cmp	x24, x2
  444414:	b.eq	4445b0 <ferror@plt+0x41d30>  // b.none
  444418:	add	x3, x2, #0x1
  44441c:	cmp	x24, x3
  444420:	b.eq	4445b0 <ferror@plt+0x41d30>  // b.none
  444424:	ldp	x2, x3, [sp, #296]
  444428:	mov	x1, #0x18                  	// #24
  44442c:	ldr	x0, [sp, #200]
  444430:	ldr	x4, [sp, #320]
  444434:	bl	43ea90 <ferror@plt+0x3c210>
  444438:	cbz	x0, 4444b4 <ferror@plt+0x41c34>
  44443c:	ldr	x1, [sp, #320]
  444440:	ldr	x2, [x1, #24]
  444444:	ldr	w1, [x25, #8]
  444448:	stp	x24, x26, [x0]
  44444c:	add	x2, x2, #0x1
  444450:	str	x28, [x0, #16]
  444454:	ldr	x0, [sp, #320]
  444458:	str	x2, [x0, #24]
  44445c:	cmp	w1, #0x11
  444460:	b.eq	4445e8 <ferror@plt+0x41d68>  // b.none
  444464:	nop
  444468:	ldr	w0, [x25, #12]
  44446c:	cbz	w0, 444238 <ferror@plt+0x419b8>
  444470:	ldr	x0, [sp, #296]
  444474:	stp	x23, x0, [sp]
  444478:	ldr	w7, [sp, #220]
  44447c:	ldp	x1, x6, [sp, #184]
  444480:	str	x28, [sp, #24]
  444484:	ldr	x0, [sp, #304]
  444488:	str	x0, [sp, #16]
  44448c:	ldr	x0, [sp, #320]
  444490:	str	x0, [sp, #32]
  444494:	ldr	x0, [sp, #200]
  444498:	str	xzr, [sp, #40]
  44449c:	ldr	x5, [sp, #208]
  4444a0:	mov	x4, x21
  4444a4:	mov	x3, x22
  4444a8:	mov	x2, x19
  4444ac:	bl	4441f0 <ferror@plt+0x41970>
  4444b0:	cbnz	w0, 444238 <ferror@plt+0x419b8>
  4444b4:	mov	w0, #0x0                   	// #0
  4444b8:	ldp	x29, x30, [sp, #48]
  4444bc:	ldp	x19, x20, [sp, #64]
  4444c0:	ldp	x21, x22, [sp, #80]
  4444c4:	ldp	x23, x24, [sp, #96]
  4444c8:	ldp	x25, x26, [sp, #112]
  4444cc:	ldp	x27, x28, [sp, #128]
  4444d0:	add	sp, sp, #0x120
  4444d4:	ret
  4444d8:	cmp	w0, #0x3
  4444dc:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  4444e0:	ldr	w0, [x25, #8]
  4444e4:	cmp	w0, #0x11
  4444e8:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  4444ec:	ldr	w0, [sp, #224]
  4444f0:	cmp	w0, #0x4
  4444f4:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  4444f8:	ldr	x0, [sp, #232]
  4444fc:	str	x0, [x28, #64]
  444500:	b	444308 <ferror@plt+0x41a88>
  444504:	add	x3, x1, #0x1
  444508:	add	x1, x4, x3
  44450c:	cmp	x4, x3
  444510:	b.hi	444284 <ferror@plt+0x41a04>  // b.pmore
  444514:	ldp	x3, x0, [sp, #296]
  444518:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44451c:	mov	w2, #0x0                   	// #0
  444520:	add	x1, x1, #0x490
  444524:	blr	x3
  444528:	mov	w0, #0x0                   	// #0
  44452c:	b	4444b8 <ferror@plt+0x41c38>
  444530:	mov	x4, x1
  444534:	b	444278 <ferror@plt+0x419f8>
  444538:	ldr	w0, [sp, #224]
  44453c:	cmp	w0, #0x1
  444540:	b.eq	444554 <ferror@plt+0x41cd4>  // b.none
  444544:	cmp	w0, #0x2
  444548:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  44454c:	mov	w0, #0x1                   	// #1
  444550:	str	w0, [sp, #216]
  444554:	str	w0, [sp, #152]
  444558:	ldr	x0, [sp, #232]
  44455c:	str	x0, [sp, #160]
  444560:	b	444308 <ferror@plt+0x41a88>
  444564:	ldr	w0, [x25, #8]
  444568:	cmp	w0, #0x11
  44456c:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  444570:	ldr	w0, [sp, #224]
  444574:	cmp	w0, #0x2
  444578:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  44457c:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  444580:	ldr	x0, [sp, #232]
  444584:	str	x0, [x28, #56]
  444588:	b	444308 <ferror@plt+0x41a88>
  44458c:	ldr	w0, [x25, #8]
  444590:	cmp	w0, #0x11
  444594:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  444598:	ldr	w0, [sp, #224]
  44459c:	cmp	w0, #0x4
  4445a0:	b.ne	444308 <ferror@plt+0x41a88>  // b.any
  4445a4:	ldr	x0, [sp, #232]
  4445a8:	str	x0, [x28, #72]
  4445ac:	b	444308 <ferror@plt+0x41a88>
  4445b0:	ldr	x3, [x0, #16]
  4445b4:	cmp	x28, x3
  4445b8:	b.ne	444424 <ferror@plt+0x41ba4>  // b.any
  4445bc:	cmp	x26, x2
  4445c0:	b.ls	44445c <ferror@plt+0x41bdc>  // b.plast
  4445c4:	str	x26, [x0, #8]
  4445c8:	b	44445c <ferror@plt+0x41bdc>
  4445cc:	ldr	w0, [sp, #280]
  4445d0:	ldp	x19, x22, [sp, #144]
  4445d4:	ldr	x21, [sp, #160]
  4445d8:	cbnz	w0, 4444b4 <ferror@plt+0x41c34>
  4445dc:	ldr	w0, [x25, #8]
  4445e0:	cmp	w0, #0x11
  4445e4:	b.ne	444468 <ferror@plt+0x41be8>  // b.any
  4445e8:	mov	w0, #0x1                   	// #1
  4445ec:	b	4444b8 <ferror@plt+0x41c38>
  4445f0:	ldr	x0, [sp, #168]
  4445f4:	ldr	x1, [sp, #192]
  4445f8:	cmp	x0, x1
  4445fc:	b.cs	44477c <ferror@plt+0x41efc>  // b.hs, b.nlast
  444600:	ldp	x27, x2, [sp, #200]
  444604:	mov	x3, x0
  444608:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  44460c:	add	x0, x0, #0x908
  444610:	sub	x26, x1, x3
  444614:	stp	x0, x2, [sp, #224]
  444618:	ldr	w0, [sp, #220]
  44461c:	stp	x19, x22, [sp, #144]
  444620:	add	x1, x2, x3
  444624:	stp	x1, x26, [sp, #240]
  444628:	str	w0, [sp, #256]
  44462c:	ldr	x26, [sp, #184]
  444630:	str	x21, [sp, #160]
  444634:	ldr	x0, [sp, #296]
  444638:	str	x0, [sp, #264]
  44463c:	ldr	x19, [sp, #320]
  444640:	str	wzr, [sp, #280]
  444644:	ldr	x0, [sp, #304]
  444648:	str	x0, [sp, #272]
  44464c:	nop
  444650:	ldr	w1, [x28, #48]
  444654:	mov	x0, x20
  444658:	bl	443578 <ferror@plt+0x40cf8>
  44465c:	mov	x21, x0
  444660:	ldr	w1, [x28, #48]
  444664:	mov	x0, x20
  444668:	bl	443578 <ferror@plt+0x40cf8>
  44466c:	orr	x1, x21, x0
  444670:	cbz	x1, 4445cc <ferror@plt+0x41d4c>
  444674:	ldr	w1, [x28, #48]
  444678:	cmp	w1, #0x4
  44467c:	b.eq	444760 <ferror@plt+0x41ee0>  // b.none
  444680:	b.gt	4446b8 <ferror@plt+0x41e38>
  444684:	cmp	w1, #0x1
  444688:	b.eq	444770 <ferror@plt+0x41ef0>  // b.none
  44468c:	cmp	w1, #0x2
  444690:	b.ne	4446d0 <ferror@plt+0x41e50>  // b.any
  444694:	mov	x1, #0xffff                	// #65535
  444698:	cmp	x21, x1
  44469c:	cset	w1, eq  // eq = none
  4446a0:	cbz	w1, 4446d0 <ferror@plt+0x41e50>
  4446a4:	mov	x24, x0
  4446a8:	ldr	w0, [sp, #280]
  4446ac:	cbz	w0, 444650 <ferror@plt+0x41dd0>
  4446b0:	mov	w0, #0x0                   	// #0
  4446b4:	b	4444b8 <ferror@plt+0x41c38>
  4446b8:	cmp	w1, #0x8
  4446bc:	b.ne	4446d0 <ferror@plt+0x41e50>  // b.any
  4446c0:	cmn	x21, #0x1
  4446c4:	cset	w1, eq  // eq = none
  4446c8:	cbnz	w1, 4446a4 <ferror@plt+0x41e24>
  4446cc:	nop
  4446d0:	ldr	x1, [x19, #24]
  4446d4:	add	x2, x21, x24
  4446d8:	add	x0, x0, x24
  4446dc:	add	x22, x2, x26
  4446e0:	add	x21, x0, x26
  4446e4:	cbz	x1, 444714 <ferror@plt+0x41e94>
  4446e8:	add	x0, x1, x1, lsl #1
  4446ec:	ldr	x1, [x19]
  4446f0:	lsl	x0, x0, #3
  4446f4:	sub	x0, x0, #0x18
  4446f8:	add	x0, x1, x0
  4446fc:	ldr	x1, [x0, #8]
  444700:	cmp	x22, x1
  444704:	b.eq	444744 <ferror@plt+0x41ec4>  // b.none
  444708:	add	x2, x1, #0x1
  44470c:	cmp	x22, x2
  444710:	b.eq	444744 <ferror@plt+0x41ec4>  // b.none
  444714:	ldp	x2, x3, [sp, #296]
  444718:	mov	x4, x19
  44471c:	mov	x0, x27
  444720:	mov	x1, #0x18                  	// #24
  444724:	bl	43ea90 <ferror@plt+0x3c210>
  444728:	cbz	x0, 4444b4 <ferror@plt+0x41c34>
  44472c:	ldr	x1, [x19, #24]
  444730:	stp	x22, x21, [x0]
  444734:	str	x28, [x0, #16]
  444738:	add	x0, x1, #0x1
  44473c:	str	x0, [x19, #24]
  444740:	b	4446a8 <ferror@plt+0x41e28>
  444744:	ldr	x2, [x0, #16]
  444748:	cmp	x28, x2
  44474c:	b.ne	444714 <ferror@plt+0x41e94>  // b.any
  444750:	cmp	x21, x1
  444754:	b.ls	4446a8 <ferror@plt+0x41e28>  // b.plast
  444758:	str	x21, [x0, #8]
  44475c:	b	4446a8 <ferror@plt+0x41e28>
  444760:	mov	x1, #0xffffffff            	// #4294967295
  444764:	cmp	x21, x1
  444768:	cset	w1, eq  // eq = none
  44476c:	b	4446a0 <ferror@plt+0x41e20>
  444770:	cmp	x21, #0xff
  444774:	cset	w1, eq  // eq = none
  444778:	b	4446a0 <ferror@plt+0x41e20>
  44477c:	ldp	x3, x0, [sp, #296]
  444780:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  444784:	mov	w2, #0x0                   	// #0
  444788:	add	x1, x1, #0x4b0
  44478c:	blr	x3
  444790:	mov	w0, #0x0                   	// #0
  444794:	b	4444b8 <ferror@plt+0x41c38>
  444798:	sub	sp, sp, #0x1d0
  44479c:	stp	x29, x30, [sp, #16]
  4447a0:	add	x29, sp, #0x10
  4447a4:	stp	x23, x24, [sp, #64]
  4447a8:	mov	x24, x4
  4447ac:	ldr	x4, [x4, #24]
  4447b0:	stp	x6, x7, [sp, #136]
  4447b4:	stp	x0, x3, [sp, #176]
  4447b8:	str	x5, [sp, #216]
  4447bc:	cbz	x4, 444ab0 <ferror@plt+0x42230>
  4447c0:	stp	x27, x28, [sp, #96]
  4447c4:	mov	x27, x1
  4447c8:	mov	x28, x2
  4447cc:	stp	x25, x26, [sp, #80]
  4447d0:	add	x26, sp, #0xf8
  4447d4:	mov	x25, x27
  4447d8:	add	x1, x26, #0x8
  4447dc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4447e0:	add	x0, x0, #0x148
  4447e4:	stp	x19, x20, [sp, #32]
  4447e8:	stp	x21, x22, [sp, #48]
  4447ec:	stp	x1, x0, [sp, #224]
  4447f0:	mov	x0, x24
  4447f4:	bl	443030 <ferror@plt+0x407b0>
  4447f8:	cbz	x0, 444aa0 <ferror@plt+0x42220>
  4447fc:	ldp	x4, x5, [x28, #88]
  444800:	sub	x1, x0, #0x1
  444804:	cmp	x4, x1
  444808:	b.ls	444824 <ferror@plt+0x41fa4>  // b.plast
  44480c:	lsl	x1, x0, #5
  444810:	sub	x1, x1, #0x20
  444814:	add	x23, x5, x1
  444818:	ldr	x1, [x5, x1]
  44481c:	cmp	x0, x1
  444820:	b.eq	444850 <ferror@plt+0x41fd0>  // b.none
  444824:	mov	x3, #0x0                   	// #0
  444828:	add	x1, x4, x3
  44482c:	cmp	x4, x3
  444830:	b.ls	444b74 <ferror@plt+0x422f4>  // b.plast
  444834:	lsr	x1, x1, #1
  444838:	lsl	x2, x1, #5
  44483c:	add	x23, x5, x2
  444840:	ldr	x2, [x5, x2]
  444844:	cmp	x0, x2
  444848:	b.cc	444c34 <ferror@plt+0x423b4>  // b.lo, b.ul, b.last
  44484c:	b.hi	444b64 <ferror@plt+0x422e4>  // b.pmore
  444850:	ldr	w0, [x23, #8]
  444854:	cmp	w0, #0x2e
  444858:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  44485c:	b.ne	444c9c <ferror@plt+0x4241c>  // b.any
  444860:	cmp	w0, #0x1d
  444864:	ldp	x0, x1, [sp, #464]
  444868:	csel	x0, x0, x1, ne  // ne = any
  44486c:	str	x0, [sp, #208]
  444870:	ldp	x2, x3, [sp, #136]
  444874:	mov	x1, #0x28                  	// #40
  444878:	ldr	x0, [sp, #176]
  44487c:	bl	43e8a8 <ferror@plt+0x3c028>
  444880:	mov	x21, x0
  444884:	cbz	x0, 444b40 <ferror@plt+0x422c0>
  444888:	mov	w19, #0x1                   	// #1
  44488c:	stp	xzr, xzr, [x0]
  444890:	stp	xzr, xzr, [x0, #16]
  444894:	str	xzr, [x0, #32]
  444898:	ldr	x0, [x23, #16]
  44489c:	str	x0, [sp, #120]
  4448a0:	cbz	x0, 444ed8 <ferror@plt+0x42658>
  4448a4:	mov	x22, x28
  4448a8:	mov	x28, x25
  4448ac:	mov	x27, #0x0                   	// #0
  4448b0:	mov	w20, #0x2007                	// #8199
  4448b4:	str	xzr, [sp, #120]
  4448b8:	str	wzr, [sp, #128]
  4448bc:	str	wzr, [sp, #152]
  4448c0:	str	wzr, [sp, #160]
  4448c4:	str	xzr, [sp, #168]
  4448c8:	str	xzr, [sp, #192]
  4448cc:	stp	wzr, wzr, [sp, #200]
  4448d0:	ldr	x0, [x23, #24]
  4448d4:	lsl	x25, x27, #3
  4448d8:	ldp	x5, x6, [x28, #104]
  4448dc:	add	x0, x0, x25
  4448e0:	ldp	w3, w2, [x22, #40]
  4448e4:	mov	x1, x24
  4448e8:	ldr	w4, [x22, #48]
  4448ec:	ldr	w0, [x0, #4]
  4448f0:	ldr	x7, [x28, #8]
  4448f4:	str	x26, [sp]
  4448f8:	bl	443770 <ferror@plt+0x40ef0>
  4448fc:	cbz	w0, 444b40 <ferror@plt+0x422c0>
  444900:	ldr	w0, [x23, #8]
  444904:	cmp	w0, #0x11
  444908:	b.eq	444ab8 <ferror@plt+0x42238>  // b.none
  44490c:	cbz	w19, 444950 <ferror@plt+0x420d0>
  444910:	ldr	x0, [x23, #24]
  444914:	add	x1, x0, x25
  444918:	ldr	w0, [x0, x25]
  44491c:	cmp	w0, #0x55
  444920:	b.eq	444c7c <ferror@plt+0x423fc>  // b.none
  444924:	b.hi	444bb8 <ferror@plt+0x42338>  // b.pmore
  444928:	cmp	w0, #0x12
  44492c:	b.eq	444c3c <ferror@plt+0x423bc>  // b.none
  444930:	b.ls	444b90 <ferror@plt+0x42310>  // b.plast
  444934:	cmp	w0, #0x31
  444938:	b.eq	444944 <ferror@plt+0x420c4>  // b.none
  44493c:	cmp	w0, #0x47
  444940:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444944:	ldr	w0, [sp, #128]
  444948:	cbz	w0, 444cb8 <ferror@plt+0x42438>
  44494c:	nop
  444950:	ldr	x0, [x23, #16]
  444954:	add	x27, x27, #0x1
  444958:	cmp	x0, x27
  44495c:	b.hi	4448d0 <ferror@plt+0x42050>  // b.pmore
  444960:	mov	x25, x28
  444964:	mov	x28, x22
  444968:	cbz	w19, 444b04 <ferror@plt+0x42284>
  44496c:	ldr	x0, [x21]
  444970:	cbz	x0, 444af0 <ferror@plt+0x42270>
  444974:	ldr	w0, [sp, #152]
  444978:	cbnz	w0, 444d24 <ferror@plt+0x424a4>
  44497c:	ldr	w1, [sp, #160]
  444980:	ldr	w0, [sp, #200]
  444984:	tst	w0, w1
  444988:	b.eq	444af0 <ferror@plt+0x42270>  // b.none
  44498c:	ldr	x4, [sp, #208]
  444990:	ldr	x2, [sp, #120]
  444994:	ldr	x3, [sp, #192]
  444998:	ldr	w1, [sp, #204]
  44499c:	ldr	x0, [x4, #24]
  4449a0:	cmp	w1, #0x0
  4449a4:	ldr	x19, [x25, #16]
  4449a8:	add	x1, x2, x3
  4449ac:	csel	x1, x1, x2, ne  // ne = any
  4449b0:	add	x22, x1, x19
  4449b4:	add	x19, x3, x19
  4449b8:	cbz	x0, 4449e8 <ferror@plt+0x42168>
  4449bc:	add	x0, x0, x0, lsl #1
  4449c0:	ldr	x1, [x4]
  4449c4:	lsl	x0, x0, #3
  4449c8:	sub	x0, x0, #0x18
  4449cc:	add	x0, x1, x0
  4449d0:	ldr	x1, [x0, #8]
  4449d4:	cmp	x19, x1
  4449d8:	b.eq	444ebc <ferror@plt+0x4263c>  // b.none
  4449dc:	add	x2, x1, #0x1
  4449e0:	cmp	x19, x2
  4449e4:	b.eq	444ebc <ferror@plt+0x4263c>  // b.none
  4449e8:	ldp	x2, x3, [sp, #136]
  4449ec:	mov	x1, #0x18                  	// #24
  4449f0:	ldr	x0, [sp, #176]
  4449f4:	ldr	x20, [sp, #208]
  4449f8:	mov	x4, x20
  4449fc:	bl	43ea90 <ferror@plt+0x3c210>
  444a00:	cbz	x0, 444b40 <ferror@plt+0x422c0>
  444a04:	ldr	x1, [x20, #24]
  444a08:	stp	x19, x22, [x0]
  444a0c:	str	x21, [x0, #16]
  444a10:	add	x0, x1, #0x1
  444a14:	str	x0, [x20, #24]
  444a18:	ldr	w0, [x23, #12]
  444a1c:	cbz	w0, 444a98 <ferror@plt+0x42218>
  444a20:	add	x19, sp, #0x108
  444a24:	ldp	x6, x7, [sp, #136]
  444a28:	mov	x4, x24
  444a2c:	ldr	x0, [sp, #464]
  444a30:	stp	x0, x19, [sp]
  444a34:	mov	x2, x28
  444a38:	ldr	x0, [sp, #176]
  444a3c:	stp	xzr, xzr, [x19]
  444a40:	mov	x1, x25
  444a44:	ldr	x3, [sp, #184]
  444a48:	stp	xzr, xzr, [x19, #16]
  444a4c:	ldr	x5, [sp, #216]
  444a50:	bl	444798 <ferror@plt+0x41f18>
  444a54:	cbz	w0, 444b40 <ferror@plt+0x422c0>
  444a58:	ldr	x0, [sp, #288]
  444a5c:	cbz	x0, 444a98 <ferror@plt+0x42218>
  444a60:	ldp	x2, x3, [sp, #136]
  444a64:	mov	x1, x19
  444a68:	ldr	x0, [sp, #176]
  444a6c:	bl	43ebb8 <ferror@plt+0x3c338>
  444a70:	cbz	w0, 444b40 <ferror@plt+0x422c0>
  444a74:	ldr	x1, [sp, #288]
  444a78:	adrp	x3, 442000 <ferror@plt+0x3f780>
  444a7c:	ldr	x19, [sp, #264]
  444a80:	add	x3, x3, #0xfe0
  444a84:	mov	x2, #0x18                  	// #24
  444a88:	mov	x0, x19
  444a8c:	bl	447768 <ferror@plt+0x44ee8>
  444a90:	ldr	x0, [sp, #288]
  444a94:	stp	x19, x0, [x21, #24]
  444a98:	ldr	x0, [x24, #24]
  444a9c:	cbnz	x0, 4447f0 <ferror@plt+0x41f70>
  444aa0:	ldp	x19, x20, [sp, #32]
  444aa4:	ldp	x21, x22, [sp, #48]
  444aa8:	ldp	x25, x26, [sp, #80]
  444aac:	ldp	x27, x28, [sp, #96]
  444ab0:	mov	w0, #0x1                   	// #1
  444ab4:	b	444b54 <ferror@plt+0x422d4>
  444ab8:	ldr	x0, [x23, #24]
  444abc:	ldr	w0, [x0, x25]
  444ac0:	cmp	w0, #0x11
  444ac4:	b.ne	44490c <ferror@plt+0x4208c>  // b.any
  444ac8:	ldr	w0, [sp, #248]
  444acc:	cmp	w0, #0x1
  444ad0:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444ad4:	ldr	x0, [sp, #256]
  444ad8:	str	x0, [sp, #184]
  444adc:	cbz	w19, 444950 <ferror@plt+0x420d0>
  444ae0:	str	x0, [sp, #192]
  444ae4:	mov	w0, #0x1                   	// #1
  444ae8:	str	w0, [sp, #200]
  444aec:	b	444950 <ferror@plt+0x420d0>
  444af0:	ldp	x3, x4, [sp, #136]
  444af4:	mov	x1, x21
  444af8:	ldr	x0, [sp, #176]
  444afc:	mov	x2, #0x28                  	// #40
  444b00:	bl	43e770 <ferror@plt+0x3bef0>
  444b04:	ldr	w0, [x23, #12]
  444b08:	cbz	w0, 444a98 <ferror@plt+0x42218>
  444b0c:	ldp	x6, x7, [sp, #136]
  444b10:	mov	x4, x24
  444b14:	ldr	x0, [sp, #464]
  444b18:	str	x0, [sp]
  444b1c:	ldr	x0, [sp, #472]
  444b20:	str	x0, [sp, #8]
  444b24:	ldr	x0, [sp, #176]
  444b28:	mov	x2, x28
  444b2c:	ldr	x3, [sp, #184]
  444b30:	mov	x1, x25
  444b34:	ldr	x5, [sp, #216]
  444b38:	bl	444798 <ferror@plt+0x41f18>
  444b3c:	cbnz	w0, 444a98 <ferror@plt+0x42218>
  444b40:	ldp	x19, x20, [sp, #32]
  444b44:	mov	w0, #0x0                   	// #0
  444b48:	ldp	x21, x22, [sp, #48]
  444b4c:	ldp	x25, x26, [sp, #80]
  444b50:	ldp	x27, x28, [sp, #96]
  444b54:	ldp	x29, x30, [sp, #16]
  444b58:	ldp	x23, x24, [sp, #64]
  444b5c:	add	sp, sp, #0x1d0
  444b60:	ret
  444b64:	add	x3, x1, #0x1
  444b68:	add	x1, x4, x3
  444b6c:	cmp	x4, x3
  444b70:	b.hi	444834 <ferror@plt+0x41fb4>  // b.pmore
  444b74:	ldr	x0, [sp, #144]
  444b78:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  444b7c:	add	x1, x1, #0x490
  444b80:	mov	w2, #0x0                   	// #0
  444b84:	ldr	x3, [sp, #136]
  444b88:	blr	x3
  444b8c:	b	444b40 <ferror@plt+0x422c0>
  444b90:	cmp	w0, #0x3
  444b94:	b.ne	444c18 <ferror@plt+0x42398>  // b.any
  444b98:	ldr	x0, [x21]
  444b9c:	cbnz	x0, 444950 <ferror@plt+0x420d0>
  444ba0:	ldr	w0, [sp, #248]
  444ba4:	cmp	w0, #0x4
  444ba8:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444bac:	ldr	x0, [sp, #256]
  444bb0:	str	x0, [x21]
  444bb4:	b	444950 <ferror@plt+0x420d0>
  444bb8:	cmp	w0, #0x59
  444bbc:	b.eq	444c64 <ferror@plt+0x423e4>  // b.none
  444bc0:	b.ls	444bf0 <ferror@plt+0x42370>  // b.plast
  444bc4:	cmp	w0, #0x6e
  444bc8:	b.eq	444bd4 <ferror@plt+0x42354>  // b.none
  444bcc:	cmp	w0, w20
  444bd0:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444bd4:	ldr	w0, [sp, #248]
  444bd8:	cmp	w0, #0x4
  444bdc:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444be0:	ldr	x0, [sp, #256]
  444be4:	str	x0, [x21]
  444be8:	str	w19, [sp, #128]
  444bec:	b	444950 <ferror@plt+0x420d0>
  444bf0:	cmp	w0, #0x58
  444bf4:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444bf8:	ldr	w0, [sp, #248]
  444bfc:	cmp	w0, #0x2
  444c00:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444c04:	ldr	x0, [sp, #256]
  444c08:	cbnz	x0, 444cf8 <ferror@plt+0x42478>
  444c0c:	ldr	x0, [sp, #232]
  444c10:	str	x0, [x21, #8]
  444c14:	b	444950 <ferror@plt+0x420d0>
  444c18:	cmp	w0, #0x11
  444c1c:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444c20:	ldr	w0, [sp, #248]
  444c24:	cmp	w0, #0x1
  444c28:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444c2c:	ldr	x0, [sp, #256]
  444c30:	b	444ae0 <ferror@plt+0x42260>
  444c34:	mov	x4, x1
  444c38:	b	444828 <ferror@plt+0x41fa8>
  444c3c:	ldr	w0, [sp, #248]
  444c40:	cmp	w0, #0x1
  444c44:	b.eq	444c54 <ferror@plt+0x423d4>  // b.none
  444c48:	cmp	w0, #0x2
  444c4c:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444c50:	str	w19, [sp, #204]
  444c54:	ldr	x0, [sp, #256]
  444c58:	str	x0, [sp, #120]
  444c5c:	str	w19, [sp, #160]
  444c60:	b	444950 <ferror@plt+0x420d0>
  444c64:	ldr	w0, [sp, #248]
  444c68:	cmp	w0, #0x2
  444c6c:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444c70:	ldr	x0, [sp, #256]
  444c74:	str	w0, [x21, #16]
  444c78:	b	444950 <ferror@plt+0x420d0>
  444c7c:	ldr	w0, [sp, #248]
  444c80:	cmp	w0, #0x2
  444c84:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  444c88:	b.ne	444950 <ferror@plt+0x420d0>  // b.any
  444c8c:	ldr	x0, [sp, #256]
  444c90:	str	w19, [sp, #152]
  444c94:	str	x0, [sp, #168]
  444c98:	b	444950 <ferror@plt+0x420d0>
  444c9c:	cmp	w0, #0x1d
  444ca0:	b.eq	444cec <ferror@plt+0x4246c>  // b.none
  444ca4:	ldr	x0, [sp, #464]
  444ca8:	mov	w19, #0x0                   	// #0
  444cac:	mov	x21, #0x0                   	// #0
  444cb0:	str	x0, [sp, #208]
  444cb4:	b	444898 <ferror@plt+0x42018>
  444cb8:	ldr	w0, [x1, #4]
  444cbc:	cmp	w0, #0x20
  444cc0:	b.eq	444f08 <ferror@plt+0x42688>  // b.none
  444cc4:	ldp	x4, x5, [sp, #136]
  444cc8:	mov	x2, x26
  444ccc:	ldr	x3, [sp, #224]
  444cd0:	mov	x1, x22
  444cd4:	mov	x0, x28
  444cd8:	bl	444110 <ferror@plt+0x41890>
  444cdc:	str	wzr, [sp, #128]
  444ce0:	cbz	x0, 444950 <ferror@plt+0x420d0>
  444ce4:	str	x0, [x21]
  444ce8:	b	444950 <ferror@plt+0x420d0>
  444cec:	ldr	x0, [sp, #472]
  444cf0:	str	x0, [sp, #208]
  444cf4:	b	444870 <ferror@plt+0x41ff0>
  444cf8:	ldr	x1, [sp, #216]
  444cfc:	sub	x2, x0, #0x1
  444d00:	ldr	x1, [x1, #48]
  444d04:	cmp	x2, x1
  444d08:	b.cs	444f2c <ferror@plt+0x426ac>  // b.hs, b.nlast
  444d0c:	ldr	x1, [sp, #216]
  444d10:	ldr	x1, [x1, #56]
  444d14:	add	x0, x1, x0, lsl #3
  444d18:	ldur	x0, [x0, #-8]
  444d1c:	str	x0, [x21, #8]
  444d20:	b	444950 <ferror@plt+0x420d0>
  444d24:	ldr	x0, [x25, #96]
  444d28:	ldr	x1, [sp, #168]
  444d2c:	cmp	x0, x1
  444d30:	b.ls	444ef4 <ferror@plt+0x42674>  // b.plast
  444d34:	ldr	x3, [x25, #88]
  444d38:	mov	x5, x1
  444d3c:	sub	x1, x0, x1
  444d40:	stp	x24, x26, [sp, #152]
  444d44:	add	x0, x3, x5
  444d48:	stp	x0, x1, [sp, #280]
  444d4c:	add	x19, sp, #0x108
  444d50:	ldr	w4, [x25, #120]
  444d54:	ldr	x0, [sp, #136]
  444d58:	stp	x21, x23, [sp, #120]
  444d5c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  444d60:	ldp	x22, x20, [sp, #176]
  444d64:	mov	x23, x0
  444d68:	ldr	x24, [sp, #208]
  444d6c:	add	x2, x2, #0x908
  444d70:	ldr	x27, [sp, #144]
  444d74:	stp	x2, x3, [sp, #264]
  444d78:	str	w4, [sp, #296]
  444d7c:	str	x0, [sp, #304]
  444d80:	str	x27, [sp, #312]
  444d84:	str	wzr, [sp, #320]
  444d88:	ldr	w1, [x28, #48]
  444d8c:	mov	x0, x19
  444d90:	bl	443578 <ferror@plt+0x40cf8>
  444d94:	mov	x21, x0
  444d98:	ldr	w1, [x28, #48]
  444d9c:	mov	x0, x19
  444da0:	bl	443578 <ferror@plt+0x40cf8>
  444da4:	orr	x1, x21, x0
  444da8:	cbz	x1, 444f10 <ferror@plt+0x42690>
  444dac:	ldr	w1, [x28, #48]
  444db0:	cmp	w1, #0x4
  444db4:	b.eq	444eac <ferror@plt+0x4262c>  // b.none
  444db8:	b.gt	444dec <ferror@plt+0x4256c>
  444dbc:	cmp	w1, #0x1
  444dc0:	b.eq	444ea0 <ferror@plt+0x42620>  // b.none
  444dc4:	cmp	w1, #0x2
  444dc8:	b.ne	444e00 <ferror@plt+0x42580>  // b.any
  444dcc:	mov	x1, #0xffff                	// #65535
  444dd0:	cmp	x21, x1
  444dd4:	cset	w1, eq  // eq = none
  444dd8:	cbz	w1, 444e00 <ferror@plt+0x42580>
  444ddc:	mov	x20, x0
  444de0:	ldr	w0, [sp, #320]
  444de4:	cbz	w0, 444d88 <ferror@plt+0x42508>
  444de8:	b	444b40 <ferror@plt+0x422c0>
  444dec:	cmp	w1, #0x8
  444df0:	b.ne	444e00 <ferror@plt+0x42580>  // b.any
  444df4:	cmn	x21, #0x1
  444df8:	cset	w1, eq  // eq = none
  444dfc:	cbnz	w1, 444ddc <ferror@plt+0x4255c>
  444e00:	ldr	x1, [x24, #24]
  444e04:	add	x2, x21, x20
  444e08:	ldr	x6, [x25, #16]
  444e0c:	add	x0, x0, x20
  444e10:	add	x21, x2, x6
  444e14:	add	x26, x0, x6
  444e18:	cbz	x1, 444e48 <ferror@plt+0x425c8>
  444e1c:	add	x0, x1, x1, lsl #1
  444e20:	ldr	x1, [x24]
  444e24:	lsl	x0, x0, #3
  444e28:	sub	x0, x0, #0x18
  444e2c:	add	x0, x1, x0
  444e30:	ldr	x1, [x0, #8]
  444e34:	cmp	x21, x1
  444e38:	b.eq	444e80 <ferror@plt+0x42600>  // b.none
  444e3c:	add	x2, x1, #0x1
  444e40:	cmp	x21, x2
  444e44:	b.eq	444e80 <ferror@plt+0x42600>  // b.none
  444e48:	mov	x4, x24
  444e4c:	mov	x3, x27
  444e50:	mov	x2, x23
  444e54:	mov	x0, x22
  444e58:	mov	x1, #0x18                  	// #24
  444e5c:	bl	43ea90 <ferror@plt+0x3c210>
  444e60:	cbz	x0, 444b40 <ferror@plt+0x422c0>
  444e64:	ldr	x1, [x24, #24]
  444e68:	stp	x21, x26, [x0]
  444e6c:	ldr	x2, [sp, #120]
  444e70:	str	x2, [x0, #16]
  444e74:	add	x0, x1, #0x1
  444e78:	str	x0, [x24, #24]
  444e7c:	b	444de0 <ferror@plt+0x42560>
  444e80:	ldr	x2, [x0, #16]
  444e84:	ldr	x3, [sp, #120]
  444e88:	cmp	x3, x2
  444e8c:	b.ne	444e48 <ferror@plt+0x425c8>  // b.any
  444e90:	cmp	x26, x1
  444e94:	b.ls	444de0 <ferror@plt+0x42560>  // b.plast
  444e98:	str	x26, [x0, #8]
  444e9c:	b	444de0 <ferror@plt+0x42560>
  444ea0:	cmp	x21, #0xff
  444ea4:	cset	w1, eq  // eq = none
  444ea8:	b	444dd8 <ferror@plt+0x42558>
  444eac:	mov	x1, #0xffffffff            	// #4294967295
  444eb0:	cmp	x21, x1
  444eb4:	cset	w1, eq  // eq = none
  444eb8:	b	444dd8 <ferror@plt+0x42558>
  444ebc:	ldr	x2, [x0, #16]
  444ec0:	cmp	x21, x2
  444ec4:	b.ne	4449e8 <ferror@plt+0x42168>  // b.any
  444ec8:	cmp	x22, x1
  444ecc:	b.ls	444a18 <ferror@plt+0x42198>  // b.plast
  444ed0:	str	x22, [x0, #8]
  444ed4:	b	444a18 <ferror@plt+0x42198>
  444ed8:	str	wzr, [sp, #152]
  444edc:	str	wzr, [sp, #160]
  444ee0:	str	xzr, [sp, #168]
  444ee4:	str	xzr, [sp, #192]
  444ee8:	stp	wzr, wzr, [sp, #200]
  444eec:	cbz	w19, 444b04 <ferror@plt+0x42284>
  444ef0:	b	44496c <ferror@plt+0x420ec>
  444ef4:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  444ef8:	mov	w2, #0x0                   	// #0
  444efc:	add	x1, x1, #0x508
  444f00:	ldr	x0, [sp, #144]
  444f04:	b	444b84 <ferror@plt+0x42304>
  444f08:	str	wzr, [sp, #128]
  444f0c:	b	444950 <ferror@plt+0x420d0>
  444f10:	ldr	w0, [sp, #320]
  444f14:	ldp	x21, x23, [sp, #120]
  444f18:	ldp	x24, x26, [sp, #152]
  444f1c:	cbnz	w0, 444b40 <ferror@plt+0x422c0>
  444f20:	ldr	w0, [x23, #12]
  444f24:	cbnz	w0, 444a24 <ferror@plt+0x421a4>
  444f28:	b	444a98 <ferror@plt+0x42218>
  444f2c:	ldp	x4, x1, [x24]
  444f30:	add	x19, sp, #0x108
  444f34:	ldr	x5, [x24, #16]
  444f38:	mov	x0, x19
  444f3c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  444f40:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  444f44:	add	x3, x3, #0x4d0
  444f48:	add	x2, x2, #0x358
  444f4c:	sub	w5, w5, w1
  444f50:	mov	x1, #0xc8                  	// #200
  444f54:	bl	402360 <snprintf@plt>
  444f58:	ldp	x3, x0, [x24, #40]
  444f5c:	mov	x1, x19
  444f60:	mov	w2, #0x0                   	// #0
  444f64:	blr	x3
  444f68:	b	444b40 <ferror@plt+0x422c0>
  444f6c:	nop
  444f70:	sub	sp, sp, #0x290
  444f74:	mov	x7, x6
  444f78:	stp	x29, x30, [sp, #16]
  444f7c:	add	x29, sp, #0x10
  444f80:	stp	x21, x22, [sp, #48]
  444f84:	mov	x22, x1
  444f88:	mov	w1, #0x1                   	// #1
  444f8c:	str	x6, [sp, #128]
  444f90:	ldr	x6, [x22, #32]
  444f94:	str	w1, [x7]
  444f98:	stp	x4, x3, [sp, #112]
  444f9c:	cbz	x6, 44523c <ferror@plt+0x429bc>
  444fa0:	ldr	x4, [x22, #24]
  444fa4:	mov	x21, x2
  444fa8:	stp	x19, x20, [sp, #32]
  444fac:	mov	x20, x5
  444fb0:	mov	x19, x0
  444fb4:	mov	x5, x6
  444fb8:	mov	x3, #0x0                   	// #0
  444fbc:	stp	x23, x24, [sp, #64]
  444fc0:	stp	x25, x26, [sp, #80]
  444fc4:	add	x0, x5, x3
  444fc8:	cmp	x5, x3
  444fcc:	and	x1, x0, #0xfffffffffffffffe
  444fd0:	b.ls	445230 <ferror@plt+0x429b0>  // b.plast
  444fd4:	lsr	x0, x0, #1
  444fd8:	add	x1, x1, x0
  444fdc:	lsl	x2, x1, #3
  444fe0:	ldr	x1, [x4, x1, lsl #3]
  444fe4:	add	x23, x4, x2
  444fe8:	cmp	x1, x21
  444fec:	b.hi	44521c <ferror@plt+0x4299c>  // b.pmore
  444ff0:	ldr	x1, [x23, #8]
  444ff4:	add	x3, x0, #0x1
  444ff8:	cmp	x1, x21
  444ffc:	b.ls	444fc4 <ferror@plt+0x42744>  // b.plast
  445000:	asr	x2, x2, #3
  445004:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  445008:	movk	x0, #0xaaab
  44500c:	mov	x1, x0
  445010:	mul	x2, x2, x0
  445014:	add	x2, x2, #0x1
  445018:	cmp	x6, x2
  44501c:	b.hi	44504c <ferror@plt+0x427cc>  // b.pmore
  445020:	b	445058 <ferror@plt+0x427d8>
  445024:	ldr	x0, [x23, #32]
  445028:	cmp	x0, x21
  44502c:	b.ls	445058 <ferror@plt+0x427d8>  // b.plast
  445030:	add	x23, x23, #0x18
  445034:	sub	x0, x23, x4
  445038:	asr	x0, x0, #3
  44503c:	mul	x0, x0, x1
  445040:	add	x0, x0, #0x1
  445044:	cmp	x6, x0
  445048:	b.ls	445058 <ferror@plt+0x427d8>  // b.plast
  44504c:	ldr	x0, [x23, #24]
  445050:	cmp	x0, x21
  445054:	b.ls	445024 <ferror@plt+0x427a4>  // b.plast
  445058:	ldr	x26, [x23, #16]
  44505c:	cmp	x4, x23
  445060:	ldr	w1, [x19, #8]
  445064:	ldr	x24, [x26, #104]
  445068:	b.cc	445090 <ferror@plt+0x42810>  // b.lo, b.ul, b.last
  44506c:	b	4450c0 <ferror@plt+0x42840>
  445070:	cmn	x24, #0x1
  445074:	b.ne	4450c0 <ferror@plt+0x42840>  // b.any
  445078:	ldur	x26, [x23, #-8]
  44507c:	sub	x23, x23, #0x18
  445080:	ldr	x0, [x22, #24]
  445084:	ldr	x24, [x26, #104]
  445088:	cmp	x0, x23
  44508c:	b.cs	4450c0 <ferror@plt+0x42840>  // b.hs, b.nlast
  445090:	ldur	x0, [x23, #-24]
  445094:	cmp	x0, x21
  445098:	b.hi	4450c0 <ferror@plt+0x42840>  // b.pmore
  44509c:	ldur	x0, [x23, #-16]
  4450a0:	cmp	x0, x21
  4450a4:	b.ls	4450c0 <ferror@plt+0x42840>  // b.plast
  4450a8:	cbz	w1, 445070 <ferror@plt+0x427f0>
  4450ac:	add	x0, x26, #0x68
  4450b0:	ldar	x24, [x0]
  4450b4:	ldr	w1, [x19, #8]
  4450b8:	cmn	x24, #0x1
  4450bc:	b.eq	445078 <ferror@plt+0x427f8>  // b.none
  4450c0:	cbnz	w1, 4452b8 <ferror@plt+0x42a38>
  4450c4:	cbz	x24, 4452c4 <ferror@plt+0x42a44>
  4450c8:	cmn	x24, #0x1
  4450cc:	b.eq	4453a0 <ferror@plt+0x42b20>  // b.none
  4450d0:	ldr	x7, [x23, #16]
  4450d4:	mov	x2, #0x0                   	// #0
  4450d8:	ldr	x3, [x7, #112]
  4450dc:	add	x0, x2, x3
  4450e0:	cmp	x2, x3
  4450e4:	and	x1, x0, #0xfffffffffffffffe
  4450e8:	b.cs	44526c <ferror@plt+0x429ec>  // b.hs, b.nlast
  4450ec:	lsr	x0, x0, #1
  4450f0:	add	x1, x1, x0
  4450f4:	add	x4, x24, x1, lsl #3
  4450f8:	ldr	x1, [x24, x1, lsl #3]
  4450fc:	cmp	x1, x21
  445100:	b.hi	445258 <ferror@plt+0x429d8>  // b.pmore
  445104:	ldr	x1, [x4, #24]
  445108:	add	x2, x0, #0x1
  44510c:	cmp	x1, x21
  445110:	b.ls	4450dc <ferror@plt+0x4285c>  // b.plast
  445114:	ldr	x6, [x7, #128]
  445118:	ldr	w10, [x4, #16]
  44511c:	ldr	x8, [x4, #8]
  445120:	cbz	x6, 4452a0 <ferror@plt+0x42a20>
  445124:	ldr	x4, [x7, #120]
  445128:	mov	x5, x6
  44512c:	mov	x3, #0x0                   	// #0
  445130:	add	x0, x5, x3
  445134:	cmp	x5, x3
  445138:	and	x1, x0, #0xfffffffffffffffe
  44513c:	b.ls	4452a0 <ferror@plt+0x42a20>  // b.plast
  445140:	lsr	x0, x0, #1
  445144:	add	x1, x1, x0
  445148:	lsl	x2, x1, #3
  44514c:	ldr	x7, [x4, x1, lsl #3]
  445150:	add	x1, x4, x2
  445154:	cmp	x7, x21
  445158:	b.hi	44528c <ferror@plt+0x42a0c>  // b.pmore
  44515c:	ldr	x7, [x1, #8]
  445160:	add	x3, x0, #0x1
  445164:	cmp	x7, x21
  445168:	b.ls	445130 <ferror@plt+0x428b0>  // b.plast
  44516c:	asr	x0, x2, #3
  445170:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  445174:	movk	x2, #0xaaab
  445178:	mov	x3, x2
  44517c:	mul	x0, x0, x2
  445180:	add	x0, x0, #0x1
  445184:	cmp	x6, x0
  445188:	b.hi	4451b8 <ferror@plt+0x42938>  // b.pmore
  44518c:	b	4451c4 <ferror@plt+0x42944>
  445190:	ldr	x0, [x1, #32]
  445194:	cmp	x0, x21
  445198:	b.ls	4451c4 <ferror@plt+0x42944>  // b.plast
  44519c:	add	x1, x1, #0x18
  4451a0:	sub	x0, x1, x4
  4451a4:	asr	x0, x0, #3
  4451a8:	mul	x0, x0, x3
  4451ac:	add	x0, x0, #0x1
  4451b0:	cmp	x6, x0
  4451b4:	b.ls	4451c4 <ferror@plt+0x42944>  // b.plast
  4451b8:	ldr	x0, [x1, #24]
  4451bc:	cmp	x0, x21
  4451c0:	b.ls	445190 <ferror@plt+0x42910>  // b.plast
  4451c4:	ldr	x19, [x1, #16]
  4451c8:	add	x6, sp, #0x188
  4451cc:	ldr	x22, [sp, #120]
  4451d0:	add	x5, sp, #0x1c8
  4451d4:	ldp	x1, x2, [x19, #24]
  4451d8:	mov	x4, x20
  4451dc:	mov	x0, x21
  4451e0:	mov	x3, x22
  4451e4:	str	w10, [sp, #392]
  4451e8:	str	x8, [sp, #456]
  4451ec:	bl	442e80 <ferror@plt+0x40600>
  4451f0:	cbnz	w0, 44551c <ferror@plt+0x42c9c>
  4451f4:	ldr	w3, [sp, #392]
  4451f8:	mov	x0, x20
  4451fc:	ldr	x4, [x19]
  445200:	mov	x1, x21
  445204:	ldr	x2, [sp, #456]
  445208:	blr	x22
  44520c:	ldp	x19, x20, [sp, #32]
  445210:	ldp	x23, x24, [sp, #64]
  445214:	ldp	x25, x26, [sp, #80]
  445218:	b	445248 <ferror@plt+0x429c8>
  44521c:	mov	x5, x0
  445220:	add	x0, x5, x3
  445224:	cmp	x5, x3
  445228:	and	x1, x0, #0xfffffffffffffffe
  44522c:	b.hi	444fd4 <ferror@plt+0x42754>  // b.pmore
  445230:	ldp	x19, x20, [sp, #32]
  445234:	ldp	x23, x24, [sp, #64]
  445238:	ldp	x25, x26, [sp, #80]
  44523c:	mov	w0, #0x0                   	// #0
  445240:	ldr	x1, [sp, #128]
  445244:	str	wzr, [x1]
  445248:	ldp	x29, x30, [sp, #16]
  44524c:	ldp	x21, x22, [sp, #48]
  445250:	add	sp, sp, #0x290
  445254:	ret
  445258:	mov	x3, x0
  44525c:	add	x0, x2, x3
  445260:	cmp	x2, x3
  445264:	and	x1, x0, #0xfffffffffffffffe
  445268:	b.cc	4450ec <ferror@plt+0x4286c>  // b.lo, b.ul, b.last
  44526c:	ldr	x24, [x7, #80]
  445270:	cbz	x24, 4453d8 <ferror@plt+0x42b58>
  445274:	mov	x2, x24
  445278:	mov	x1, x21
  44527c:	mov	x0, x20
  445280:	mov	x4, #0x0                   	// #0
  445284:	mov	w3, #0x0                   	// #0
  445288:	b	4453b4 <ferror@plt+0x42b34>
  44528c:	mov	x5, x0
  445290:	add	x0, x5, x3
  445294:	cmp	x5, x3
  445298:	and	x1, x0, #0xfffffffffffffffe
  44529c:	b.hi	445140 <ferror@plt+0x428c0>  // b.pmore
  4452a0:	mov	w3, w10
  4452a4:	mov	x2, x8
  4452a8:	mov	x1, x21
  4452ac:	mov	x0, x20
  4452b0:	mov	x4, #0x0                   	// #0
  4452b4:	b	4453b4 <ferror@plt+0x42b34>
  4452b8:	add	x0, x26, #0x68
  4452bc:	ldar	x24, [x0]
  4452c0:	cbnz	x24, 4450c8 <ferror@plt+0x42848>
  4452c4:	add	x1, sp, #0x200
  4452c8:	stp	x27, x28, [sp, #96]
  4452cc:	ldr	x0, [x23, #16]
  4452d0:	stp	xzr, xzr, [x1, #-248]
  4452d4:	stp	xzr, xzr, [x1, #-232]
  4452d8:	stp	xzr, xzr, [x1, #-216]
  4452dc:	stp	xzr, xzr, [x1, #-200]
  4452e0:	str	x0, [sp, #184]
  4452e4:	ldr	x0, [x0, #56]
  4452e8:	stp	xzr, xzr, [sp, #232]
  4452ec:	ldr	x1, [x22, #80]
  4452f0:	stp	xzr, xzr, [sp, #248]
  4452f4:	cmp	x0, x1
  4452f8:	b.cc	445464 <ferror@plt+0x42be4>  // b.lo, b.ul, b.last
  4452fc:	add	x3, sp, #0xe8
  445300:	str	x3, [sp, #144]
  445304:	ldr	x3, [sp, #112]
  445308:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44530c:	mov	x0, x20
  445310:	add	x1, x1, #0x530
  445314:	mov	w2, #0x0                   	// #0
  445318:	blr	x3
  44531c:	nop
  445320:	ldp	x5, x4, [sp, #240]
  445324:	mov	x3, x20
  445328:	ldr	x2, [sp, #112]
  44532c:	mov	x0, x19
  445330:	ldr	x1, [sp, #144]
  445334:	add	x4, x4, x5
  445338:	stp	xzr, x4, [sp, #240]
  44533c:	bl	43ebb8 <ferror@plt+0x3c338>
  445340:	ldr	x2, [sp, #296]
  445344:	cbnz	x2, 445554 <ferror@plt+0x42cd4>
  445348:	ldp	x2, x1, [sp, #312]
  44534c:	mov	x4, x20
  445350:	ldr	x3, [sp, #112]
  445354:	mov	x0, x19
  445358:	str	xzr, [sp, #136]
  44535c:	mov	x25, #0x0                   	// #0
  445360:	mov	x28, #0x0                   	// #0
  445364:	mov	x24, #0xffffffffffffffff    	// #-1
  445368:	lsl	x2, x2, #3
  44536c:	bl	43e770 <ferror@plt+0x3bef0>
  445370:	mov	w1, #0x0                   	// #0
  445374:	ldr	w0, [x19, #8]
  445378:	cbnz	w0, 44552c <ferror@plt+0x42cac>
  44537c:	ldr	x0, [sp, #136]
  445380:	stp	x24, x0, [x26, #104]
  445384:	stp	x25, x28, [x26, #120]
  445388:	cmn	x24, #0x1
  44538c:	b.eq	445570 <ferror@plt+0x42cf0>  // b.none
  445390:	ldp	x27, x28, [sp, #96]
  445394:	b	4450d0 <ferror@plt+0x42850>
  445398:	ldp	x27, x28, [sp, #96]
  44539c:	nop
  4453a0:	mov	x1, x21
  4453a4:	mov	x0, x20
  4453a8:	mov	x4, #0x0                   	// #0
  4453ac:	mov	w3, #0x0                   	// #0
  4453b0:	mov	x2, #0x0                   	// #0
  4453b4:	ldr	x5, [sp, #120]
  4453b8:	blr	x5
  4453bc:	ldp	x29, x30, [sp, #16]
  4453c0:	ldp	x19, x20, [sp, #32]
  4453c4:	ldp	x21, x22, [sp, #48]
  4453c8:	ldp	x23, x24, [sp, #64]
  4453cc:	ldp	x25, x26, [sp, #80]
  4453d0:	add	sp, sp, #0x290
  4453d4:	ret
  4453d8:	ldr	x24, [x7, #64]
  4453dc:	cbz	x24, 44545c <ferror@plt+0x42bdc>
  4453e0:	ldrb	w0, [x24]
  4453e4:	cmp	w0, #0x2f
  4453e8:	b.eq	44545c <ferror@plt+0x42bdc>  // b.none
  4453ec:	ldr	x26, [x7, #72]
  4453f0:	cbz	x26, 44545c <ferror@plt+0x42bdc>
  4453f4:	mov	x0, x24
  4453f8:	bl	402270 <strlen@plt>
  4453fc:	mov	x25, x0
  445400:	mov	x0, x26
  445404:	bl	402270 <strlen@plt>
  445408:	mov	x22, x0
  44540c:	ldr	x2, [sp, #112]
  445410:	add	x1, x25, x22
  445414:	mov	x0, x19
  445418:	mov	x3, x20
  44541c:	add	x1, x1, #0x2
  445420:	bl	43e8a8 <ferror@plt+0x3c028>
  445424:	mov	x19, x0
  445428:	cbz	x0, 445230 <ferror@plt+0x429b0>
  44542c:	mov	x1, x26
  445430:	mov	x2, x22
  445434:	bl	402220 <memcpy@plt>
  445438:	mov	w3, #0x2f                  	// #47
  44543c:	strb	w3, [x19, x22]
  445440:	add	x0, x22, #0x1
  445444:	mov	x1, x24
  445448:	add	x2, x25, #0x1
  44544c:	add	x0, x19, x0
  445450:	bl	402220 <memcpy@plt>
  445454:	mov	x24, x19
  445458:	ldr	x7, [x23, #16]
  44545c:	str	x24, [x7, #80]
  445460:	b	445274 <ferror@plt+0x429f4>
  445464:	ldr	x4, [x22, #72]
  445468:	sub	x2, x1, x0
  44546c:	ldr	w5, [x22, #120]
  445470:	adrp	x3, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  445474:	add	x1, x4, x0
  445478:	stp	x1, x2, [sp, #344]
  44547c:	add	x3, x3, #0x8e8
  445480:	ldr	x1, [sp, #112]
  445484:	add	x28, sp, #0x148
  445488:	mov	x0, x28
  44548c:	stp	x3, x4, [sp, #328]
  445490:	str	w5, [sp, #360]
  445494:	str	x1, [sp, #368]
  445498:	str	x20, [sp, #376]
  44549c:	str	wzr, [sp, #384]
  4454a0:	bl	4433c8 <ferror@plt+0x40b48>
  4454a4:	mov	x1, #0xffffffff            	// #4294967295
  4454a8:	mov	w2, w0
  4454ac:	cmp	x1, w0, uxtw
  4454b0:	mov	x0, x28
  4454b4:	b.eq	445938 <ferror@plt+0x430b8>  // b.none
  4454b8:	str	x2, [sp, #352]
  4454bc:	bl	4432e8 <ferror@plt+0x40a68>
  4454c0:	and	w0, w0, #0xffff
  4454c4:	str	w0, [sp, #264]
  4454c8:	sub	w0, w0, #0x2
  4454cc:	cmp	w0, #0x2
  4454d0:	b.ls	4455a4 <ferror@plt+0x42d24>  // b.plast
  4454d4:	ldp	x4, x1, [sp, #328]
  4454d8:	add	x24, sp, #0x1c8
  4454dc:	ldr	x5, [sp, #344]
  4454e0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4454e4:	mov	x0, x24
  4454e8:	add	x3, x3, #0x550
  4454ec:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4454f0:	sub	w5, w5, w1
  4454f4:	add	x2, x2, #0x358
  4454f8:	mov	x1, #0xc8                  	// #200
  4454fc:	bl	402360 <snprintf@plt>
  445500:	ldp	x3, x0, [sp, #368]
  445504:	add	x4, sp, #0xe8
  445508:	str	x4, [sp, #144]
  44550c:	mov	x1, x24
  445510:	mov	w2, #0x0                   	// #0
  445514:	blr	x3
  445518:	b	445320 <ferror@plt+0x42aa0>
  44551c:	ldp	x19, x20, [sp, #32]
  445520:	ldp	x23, x24, [sp, #64]
  445524:	ldp	x25, x26, [sp, #80]
  445528:	b	445248 <ferror@plt+0x429c8>
  44552c:	add	x0, x26, #0x70
  445530:	ldr	x2, [sp, #136]
  445534:	stlr	x2, [x0]
  445538:	add	x0, x26, #0x78
  44553c:	stlr	x25, [x0]
  445540:	add	x0, x26, #0x80
  445544:	stlr	x28, [x0]
  445548:	add	x11, x26, #0x68
  44554c:	stlr	x24, [x11]
  445550:	b	445388 <ferror@plt+0x42b08>
  445554:	ldr	x3, [sp, #112]
  445558:	lsl	x2, x2, #3
  44555c:	ldr	x1, [sp, #304]
  445560:	mov	x4, x20
  445564:	mov	x0, x19
  445568:	bl	43e770 <ferror@plt+0x3bef0>
  44556c:	b	445348 <ferror@plt+0x42ac8>
  445570:	cbz	w1, 445398 <ferror@plt+0x42b18>
  445574:	ldp	x4, x3, [sp, #112]
  445578:	mov	x5, x20
  44557c:	ldr	x6, [sp, #128]
  445580:	mov	x0, x19
  445584:	mov	x2, x21
  445588:	mov	x1, x22
  44558c:	bl	444f70 <ferror@plt+0x426f0>
  445590:	ldp	x19, x20, [sp, #32]
  445594:	ldp	x23, x24, [sp, #64]
  445598:	ldp	x25, x26, [sp, #80]
  44559c:	ldp	x27, x28, [sp, #96]
  4455a0:	b	445248 <ferror@plt+0x429c8>
  4455a4:	mov	x0, x28
  4455a8:	bl	4433c8 <ferror@plt+0x40b48>
  4455ac:	mov	w0, w0
  4455b0:	add	x1, sp, #0x200
  4455b4:	add	x4, sp, #0x270
  4455b8:	ldp	x2, x3, [x1, #-168]
  4455bc:	add	x1, sp, #0x270
  4455c0:	stp	x2, x3, [x1, #-216]
  4455c4:	add	x1, sp, #0x200
  4455c8:	str	x0, [sp, #416]
  4455cc:	ldp	x2, x3, [x1, #-184]
  4455d0:	add	x1, sp, #0x270
  4455d4:	stp	x2, x3, [x1, #-232]
  4455d8:	add	x2, sp, #0x200
  4455dc:	ldr	x1, [sp, #352]
  4455e0:	ldp	x2, x3, [x2, #-152]
  4455e4:	stp	x2, x3, [x4, #-200]
  4455e8:	cmp	x0, x1
  4455ec:	ldp	x2, x3, [x4, #-248]
  4455f0:	stp	x2, x3, [x4, #-184]
  4455f4:	b.ls	44560c <ferror@plt+0x42d8c>  // b.plast
  4455f8:	ldr	w0, [sp, #384]
  4455fc:	cbz	w0, 44596c <ferror@plt+0x430ec>
  445600:	add	x0, sp, #0xe8
  445604:	str	x0, [sp, #144]
  445608:	b	445320 <ferror@plt+0x42aa0>
  44560c:	ldr	x5, [sp, #344]
  445610:	sub	x1, x1, x0
  445614:	str	x1, [sp, #352]
  445618:	add	x1, x5, x0
  44561c:	str	x1, [sp, #344]
  445620:	cbnz	x0, 4458a4 <ferror@plt+0x43024>
  445624:	ldr	w0, [sp, #448]
  445628:	cbz	w0, 446494 <ferror@plt+0x43c14>
  44562c:	ldr	w2, [sp, #264]
  445630:	str	wzr, [sp, #268]
  445634:	cmp	w2, #0x3
  445638:	ldr	x1, [sp, #408]
  44563c:	b.gt	446484 <ferror@plt+0x43c04>
  445640:	mov	w2, #0x1                   	// #1
  445644:	str	w2, [sp, #272]
  445648:	cbz	w0, 4456ac <ferror@plt+0x42e2c>
  44564c:	str	wzr, [sp, #276]
  445650:	cbz	w0, 4464e0 <ferror@plt+0x43c60>
  445654:	str	wzr, [sp, #280]
  445658:	cbz	w0, 44652c <ferror@plt+0x43cac>
  44565c:	str	wzr, [sp, #284]
  445660:	str	x1, [sp, #288]
  445664:	add	x2, sp, #0xe8
  445668:	str	x2, [sp, #144]
  44566c:	cbnz	w0, 445320 <ferror@plt+0x42aa0>
  445670:	ldp	x4, x5, [sp, #392]
  445674:	add	x24, sp, #0x1c8
  445678:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44567c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445680:	mov	x0, x24
  445684:	add	x3, x3, #0x348
  445688:	add	x2, x2, #0x358
  44568c:	sub	w5, w1, w5
  445690:	mov	x1, #0xc8                  	// #200
  445694:	bl	402360 <snprintf@plt>
  445698:	ldp	x3, x0, [sp, #432]
  44569c:	mov	x1, x24
  4456a0:	mov	w2, #0x0                   	// #0
  4456a4:	blr	x3
  4456a8:	b	445320 <ferror@plt+0x42aa0>
  4456ac:	ldp	x4, x5, [sp, #392]
  4456b0:	add	x24, sp, #0x1c8
  4456b4:	mov	x0, x24
  4456b8:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4456bc:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4456c0:	add	x3, x3, #0x348
  4456c4:	add	x2, x2, #0x358
  4456c8:	sub	w5, w1, w5
  4456cc:	mov	x1, #0xc8                  	// #200
  4456d0:	bl	402360 <snprintf@plt>
  4456d4:	ldp	x3, x0, [sp, #432]
  4456d8:	mov	w2, #0x0                   	// #0
  4456dc:	mov	x1, x24
  4456e0:	blr	x3
  4456e4:	ldp	x5, x0, [sp, #408]
  4456e8:	mov	w2, #0x1                   	// #1
  4456ec:	str	w2, [sp, #448]
  4456f0:	cbz	x0, 4465e8 <ferror@plt+0x43d68>
  4456f4:	sub	x0, x0, #0x1
  4456f8:	add	x1, x5, #0x1
  4456fc:	stp	x1, x0, [sp, #408]
  445700:	ldrb	w24, [x5]
  445704:	eor	w24, w24, #0xffffff80
  445708:	sub	w24, w24, #0x80
  44570c:	sxtb	w24, w24
  445710:	str	w24, [sp, #276]
  445714:	cbz	x0, 445a2c <ferror@plt+0x431ac>
  445718:	add	x2, x1, #0x1
  44571c:	sub	x0, x0, #0x1
  445720:	stp	x2, x0, [sp, #408]
  445724:	ldrb	w1, [x1]
  445728:	str	w1, [sp, #280]
  44572c:	cbz	x0, 445a34 <ferror@plt+0x431b4>
  445730:	sub	x24, x0, #0x1
  445734:	add	x1, x2, #0x1
  445738:	stp	x1, x24, [sp, #408]
  44573c:	ldrb	w2, [x2]
  445740:	sub	w0, w2, #0x1
  445744:	str	w2, [sp, #284]
  445748:	cmp	x0, x24
  44574c:	str	x1, [sp, #288]
  445750:	b.hi	445a24 <ferror@plt+0x431a4>  // b.pmore
  445754:	add	x6, x1, x0
  445758:	sub	x0, x24, x0
  44575c:	str	xzr, [sp, #296]
  445760:	add	x24, x1, x24
  445764:	stp	x6, x0, [sp, #408]
  445768:	cmp	x6, x24
  44576c:	mov	x25, x6
  445770:	mov	x27, #0x0                   	// #0
  445774:	b.cc	4457a0 <ferror@plt+0x42f20>  // b.lo, b.ul, b.last
  445778:	b	446644 <ferror@plt+0x43dc4>
  44577c:	add	x27, x27, #0x1
  445780:	str	x6, [sp, #136]
  445784:	bl	4022c0 <strnlen@plt>
  445788:	add	x0, x0, #0x1
  44578c:	str	x27, [sp, #296]
  445790:	add	x25, x25, x0
  445794:	cmp	x24, x25
  445798:	ldr	x6, [sp, #136]
  44579c:	b.ls	4457b0 <ferror@plt+0x42f30>  // b.plast
  4457a0:	ldrb	w2, [x25]
  4457a4:	sub	x1, x24, x25
  4457a8:	mov	x0, x25
  4457ac:	cbnz	w2, 44577c <ferror@plt+0x42efc>
  4457b0:	str	xzr, [sp, #304]
  4457b4:	cbnz	x27, 4459bc <ferror@plt+0x4313c>
  4457b8:	mov	x12, #0x0                   	// #0
  4457bc:	ldrb	w0, [x6]
  4457c0:	cbz	w0, 4459e0 <ferror@plt+0x43160>
  4457c4:	ldr	w0, [sp, #448]
  4457c8:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4457cc:	str	w0, [sp, #160]
  4457d0:	add	x25, sp, #0x1c8
  4457d4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4457d8:	add	x0, x0, #0x348
  4457dc:	str	x0, [sp, #168]
  4457e0:	add	x0, x27, #0x358
  4457e4:	mov	x27, #0x0                   	// #0
  4457e8:	str	x0, [sp, #176]
  4457ec:	b	445848 <ferror@plt+0x42fc8>
  4457f0:	ldp	x4, x5, [sp, #392]
  4457f4:	sub	w5, w6, w5
  4457f8:	bl	402360 <snprintf@plt>
  4457fc:	ldp	x3, x0, [sp, #432]
  445800:	mov	x6, #0x0                   	// #0
  445804:	mov	x1, x25
  445808:	mov	w2, #0x0                   	// #0
  44580c:	str	x6, [sp, #136]
  445810:	blr	x3
  445814:	ldr	x12, [sp, #304]
  445818:	mov	w0, #0x1                   	// #1
  44581c:	ldr	x6, [sp, #136]
  445820:	str	w0, [sp, #160]
  445824:	str	w0, [sp, #448]
  445828:	add	x0, x12, x27
  44582c:	str	x6, [x24]
  445830:	add	x27, x27, #0x8
  445834:	ldr	x0, [x0]
  445838:	cbz	x0, 445600 <ferror@plt+0x42d80>
  44583c:	ldr	x6, [sp, #408]
  445840:	ldrb	w0, [x6]
  445844:	cbz	w0, 4459e0 <ferror@plt+0x43160>
  445848:	ldr	w1, [sp, #160]
  44584c:	mov	x0, x6
  445850:	cbnz	w1, 445600 <ferror@plt+0x42d80>
  445854:	ldr	x5, [sp, #416]
  445858:	add	x24, x12, x27
  44585c:	stp	x5, x12, [sp, #136]
  445860:	mov	x1, x5
  445864:	str	x6, [sp, #152]
  445868:	bl	4022c0 <strnlen@plt>
  44586c:	ldp	x5, x12, [sp, #136]
  445870:	mov	x4, x0
  445874:	add	x4, x4, #0x1
  445878:	mov	x0, x25
  44587c:	mov	x1, #0xc8                  	// #200
  445880:	ldr	x6, [sp, #152]
  445884:	cmp	x5, x4
  445888:	ldp	x3, x2, [sp, #168]
  44588c:	b.cc	4457f0 <ferror@plt+0x42f70>  // b.lo, b.ul, b.last
  445890:	sub	x5, x5, x4
  445894:	mov	x0, x24
  445898:	add	x4, x6, x4
  44589c:	stp	x4, x5, [sp, #408]
  4458a0:	b	44582c <ferror@plt+0x42fac>
  4458a4:	sub	x0, x0, #0x1
  4458a8:	add	x1, x5, #0x1
  4458ac:	stp	x1, x0, [sp, #408]
  4458b0:	ldrb	w2, [x5]
  4458b4:	str	w2, [sp, #268]
  4458b8:	ldr	w2, [sp, #264]
  4458bc:	cmp	w2, #0x3
  4458c0:	b.gt	44657c <ferror@plt+0x43cfc>
  4458c4:	mov	w2, #0x1                   	// #1
  4458c8:	str	w2, [sp, #272]
  4458cc:	cbz	x0, 4465dc <ferror@plt+0x43d5c>
  4458d0:	add	x5, x1, #0x1
  4458d4:	sub	x0, x0, #0x1
  4458d8:	stp	x5, x0, [sp, #408]
  4458dc:	cbnz	x0, 4456f4 <ferror@plt+0x42e74>
  4458e0:	ldr	w24, [sp, #448]
  4458e4:	mov	w0, w24
  4458e8:	cbnz	w24, 4466bc <ferror@plt+0x43e3c>
  4458ec:	ldp	x4, x1, [sp, #392]
  4458f0:	add	x25, sp, #0x1c8
  4458f4:	mov	x0, x25
  4458f8:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4458fc:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445900:	add	x3, x3, #0x348
  445904:	add	x2, x2, #0x358
  445908:	sub	w5, w5, w1
  44590c:	mov	x1, #0xc8                  	// #200
  445910:	bl	402360 <snprintf@plt>
  445914:	ldp	x3, x0, [sp, #432]
  445918:	mov	x1, x25
  44591c:	mov	w2, #0x0                   	// #0
  445920:	blr	x3
  445924:	mov	w0, #0x1                   	// #1
  445928:	str	w0, [sp, #448]
  44592c:	ldr	x1, [sp, #408]
  445930:	ldr	x0, [sp, #416]
  445934:	b	445710 <ferror@plt+0x42e90>
  445938:	bl	4434a0 <ferror@plt+0x40c20>
  44593c:	mov	x1, x0
  445940:	mov	x0, x28
  445944:	str	x1, [sp, #352]
  445948:	bl	4432e8 <ferror@plt+0x40a68>
  44594c:	and	w0, w0, #0xffff
  445950:	str	w0, [sp, #264]
  445954:	sub	w0, w0, #0x2
  445958:	cmp	w0, #0x2
  44595c:	b.hi	4454d4 <ferror@plt+0x42c54>  // b.pmore
  445960:	mov	x0, x28
  445964:	bl	4434a0 <ferror@plt+0x40c20>
  445968:	b	4455b0 <ferror@plt+0x42d30>
  44596c:	ldp	x4, x1, [sp, #328]
  445970:	add	x24, sp, #0x1c8
  445974:	ldr	x5, [sp, #344]
  445978:	mov	x0, x24
  44597c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445980:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445984:	add	x3, x3, #0x348
  445988:	add	x2, x2, #0x358
  44598c:	sub	w5, w5, w1
  445990:	mov	x1, #0xc8                  	// #200
  445994:	bl	402360 <snprintf@plt>
  445998:	ldp	x3, x0, [sp, #368]
  44599c:	add	x4, sp, #0xe8
  4459a0:	str	x4, [sp, #144]
  4459a4:	mov	x1, x24
  4459a8:	mov	w2, #0x0                   	// #0
  4459ac:	blr	x3
  4459b0:	mov	w0, #0x1                   	// #1
  4459b4:	str	w0, [sp, #384]
  4459b8:	b	445320 <ferror@plt+0x42aa0>
  4459bc:	ldp	x2, x3, [sp, #368]
  4459c0:	lsl	x1, x27, #3
  4459c4:	mov	x0, x19
  4459c8:	bl	43e8a8 <ferror@plt+0x3c028>
  4459cc:	str	x0, [sp, #304]
  4459d0:	mov	x12, x0
  4459d4:	cbz	x0, 445600 <ferror@plt+0x42d80>
  4459d8:	ldr	x6, [sp, #408]
  4459dc:	b	4457bc <ferror@plt+0x42f3c>
  4459e0:	ldr	x27, [sp, #416]
  4459e4:	cbnz	x27, 445a40 <ferror@plt+0x431c0>
  4459e8:	ldr	w0, [sp, #448]
  4459ec:	add	x1, sp, #0xe8
  4459f0:	str	x1, [sp, #144]
  4459f4:	cbnz	w0, 445320 <ferror@plt+0x42aa0>
  4459f8:	ldp	x4, x5, [sp, #392]
  4459fc:	add	x24, sp, #0x1c8
  445a00:	mov	x0, x24
  445a04:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445a08:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445a0c:	add	x3, x3, #0x348
  445a10:	add	x2, x2, #0x358
  445a14:	mov	x1, #0xc8                  	// #200
  445a18:	sub	w5, w6, w5
  445a1c:	bl	402360 <snprintf@plt>
  445a20:	b	445698 <ferror@plt+0x42e18>
  445a24:	ldr	w0, [sp, #448]
  445a28:	b	445664 <ferror@plt+0x42de4>
  445a2c:	ldr	w0, [sp, #448]
  445a30:	b	445650 <ferror@plt+0x42dd0>
  445a34:	ldr	w0, [sp, #448]
  445a38:	mov	x1, x2
  445a3c:	b	445658 <ferror@plt+0x42dd8>
  445a40:	add	x24, x6, #0x1
  445a44:	sub	x0, x27, #0x1
  445a48:	str	xzr, [sp, #312]
  445a4c:	add	x27, x6, x27
  445a50:	stp	x24, x0, [sp, #408]
  445a54:	cmp	x24, x27
  445a58:	mov	x25, #0x0                   	// #0
  445a5c:	b.cs	445af0 <ferror@plt+0x43270>  // b.hs, b.nlast
  445a60:	ldrb	w0, [x24]
  445a64:	cbz	w0, 445af0 <ferror@plt+0x43270>
  445a68:	sub	x1, x27, x24
  445a6c:	mov	x0, x24
  445a70:	bl	4022c0 <strnlen@plt>
  445a74:	add	x1, x0, #0x1
  445a78:	add	x2, x24, x1
  445a7c:	ldrsb	w1, [x24, x1]
  445a80:	tbz	w1, #31, 4465b4 <ferror@plt+0x43d34>
  445a84:	add	x24, x24, x0
  445a88:	mov	x0, #0x1                   	// #1
  445a8c:	nop
  445a90:	add	x0, x0, #0x1
  445a94:	ldrsb	w1, [x24, x0]
  445a98:	tbnz	w1, #31, 445a90 <ferror@plt+0x43210>
  445a9c:	ldrsb	w1, [x2, x0]
  445aa0:	add	x0, x2, x0
  445aa4:	tbz	w1, #31, 4465ac <ferror@plt+0x43d2c>
  445aa8:	sub	x2, x0, #0x1
  445aac:	mov	x24, #0x1                   	// #1
  445ab0:	add	x24, x24, #0x1
  445ab4:	ldrsb	w1, [x2, x24]
  445ab8:	tbnz	w1, #31, 445ab0 <ferror@plt+0x43230>
  445abc:	ldrsb	w1, [x0, x24]
  445ac0:	add	x0, x0, x24
  445ac4:	tbz	w1, #31, 44659c <ferror@plt+0x43d1c>
  445ac8:	sub	x2, x0, #0x1
  445acc:	mov	x24, #0x1                   	// #1
  445ad0:	add	x24, x24, #0x1
  445ad4:	ldrsb	w1, [x2, x24]
  445ad8:	tbnz	w1, #31, 445ad0 <ferror@plt+0x43250>
  445adc:	add	x25, x25, #0x1
  445ae0:	str	x25, [sp, #312]
  445ae4:	add	x24, x0, x24
  445ae8:	cmp	x27, x24
  445aec:	b.hi	445a60 <ferror@plt+0x431e0>  // b.pmore
  445af0:	ldp	x2, x3, [sp, #368]
  445af4:	lsl	x1, x25, #3
  445af8:	mov	x0, x19
  445afc:	bl	43e8a8 <ferror@plt+0x3c028>
  445b00:	str	x0, [sp, #320]
  445b04:	cbz	x0, 445600 <ferror@plt+0x42d80>
  445b08:	ldr	x27, [sp, #408]
  445b0c:	str	xzr, [sp, #136]
  445b10:	add	x25, sp, #0x188
  445b14:	ldrb	w0, [x27]
  445b18:	cbz	w0, 445c5c <ferror@plt+0x433dc>
  445b1c:	nop
  445b20:	ldr	w0, [sp, #448]
  445b24:	cbnz	w0, 445600 <ferror@plt+0x42d80>
  445b28:	ldr	x24, [sp, #416]
  445b2c:	mov	x0, x27
  445b30:	mov	x1, x24
  445b34:	bl	4022c0 <strnlen@plt>
  445b38:	add	x0, x0, #0x1
  445b3c:	cmp	x24, x0
  445b40:	b.cs	445b78 <ferror@plt+0x432f8>  // b.hs, b.nlast
  445b44:	ldp	x4, x1, [sp, #392]
  445b48:	add	x24, sp, #0x1c8
  445b4c:	mov	x0, x24
  445b50:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445b54:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445b58:	add	x3, x3, #0x348
  445b5c:	add	x2, x2, #0x358
  445b60:	sub	w5, w27, w1
  445b64:	mov	x1, #0xc8                  	// #200
  445b68:	bl	402360 <snprintf@plt>
  445b6c:	add	x0, sp, #0xe8
  445b70:	str	x0, [sp, #144]
  445b74:	b	445698 <ferror@plt+0x42e18>
  445b78:	add	x1, x27, x0
  445b7c:	sub	x24, x24, x0
  445b80:	mov	x0, x25
  445b84:	stp	x1, x24, [sp, #408]
  445b88:	bl	443030 <ferror@plt+0x407b0>
  445b8c:	ldrb	w1, [x27]
  445b90:	cmp	w1, #0x2f
  445b94:	b.eq	446364 <ferror@plt+0x43ae4>  // b.none
  445b98:	cbz	x0, 446358 <ferror@plt+0x43ad8>
  445b9c:	ldr	x1, [sp, #296]
  445ba0:	sub	x2, x0, #0x1
  445ba4:	cmp	x2, x1
  445ba8:	b.cs	44669c <ferror@plt+0x43e1c>  // b.hs, b.nlast
  445bac:	ldr	x1, [sp, #304]
  445bb0:	add	x0, x1, x0, lsl #3
  445bb4:	ldur	x4, [x0, #-8]
  445bb8:	mov	x0, x4
  445bbc:	str	x4, [sp, #152]
  445bc0:	bl	402270 <strlen@plt>
  445bc4:	mov	x24, x0
  445bc8:	mov	x0, x27
  445bcc:	bl	402270 <strlen@plt>
  445bd0:	mov	x1, x0
  445bd4:	ldp	x2, x3, [sp, #368]
  445bd8:	str	x1, [sp, #144]
  445bdc:	add	x1, x24, x1
  445be0:	mov	x0, x19
  445be4:	add	x1, x1, #0x2
  445be8:	bl	43e8a8 <ferror@plt+0x3c028>
  445bec:	ldr	x4, [sp, #152]
  445bf0:	cbz	x0, 445600 <ferror@plt+0x42d80>
  445bf4:	mov	x1, x4
  445bf8:	mov	x2, x24
  445bfc:	str	x0, [sp, #152]
  445c00:	bl	402220 <memcpy@plt>
  445c04:	ldp	x1, x3, [sp, #144]
  445c08:	mov	w4, #0x2f                  	// #47
  445c0c:	add	x0, x24, #0x1
  445c10:	str	x3, [sp, #144]
  445c14:	strb	w4, [x3, x24]
  445c18:	add	x0, x3, x0
  445c1c:	add	x2, x1, #0x1
  445c20:	mov	x1, x27
  445c24:	bl	402220 <memcpy@plt>
  445c28:	ldr	x0, [sp, #320]
  445c2c:	ldp	x1, x3, [sp, #136]
  445c30:	str	x3, [x0, x1]
  445c34:	mov	x0, x25
  445c38:	bl	443030 <ferror@plt+0x407b0>
  445c3c:	mov	x0, x25
  445c40:	bl	443030 <ferror@plt+0x407b0>
  445c44:	ldr	x0, [sp, #136]
  445c48:	ldr	x27, [sp, #408]
  445c4c:	add	x0, x0, #0x8
  445c50:	str	x0, [sp, #136]
  445c54:	ldrb	w0, [x27]
  445c58:	cbnz	w0, 445b20 <ferror@plt+0x432a0>
  445c5c:	ldr	w0, [sp, #448]
  445c60:	cbnz	w0, 445600 <ferror@plt+0x42d80>
  445c64:	ldr	x0, [sp, #312]
  445c68:	cbz	x0, 446470 <ferror@plt+0x43bf0>
  445c6c:	ldr	x0, [sp, #320]
  445c70:	ldr	x0, [x0]
  445c74:	str	x0, [sp, #160]
  445c78:	ldr	x1, [sp, #352]
  445c7c:	cbz	x1, 446650 <ferror@plt+0x43dd0>
  445c80:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445c84:	add	x0, x0, #0x358
  445c88:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445c8c:	add	x2, x2, #0x348
  445c90:	stp	x2, x0, [sp, #192]
  445c94:	mov	w27, #0x1                   	// #1
  445c98:	mov	x25, #0x0                   	// #0
  445c9c:	ldr	x0, [sp, #160]
  445ca0:	str	x0, [sp, #152]
  445ca4:	add	x0, sp, #0xe8
  445ca8:	mov	w24, #0x0                   	// #0
  445cac:	str	x0, [sp, #144]
  445cb0:	add	x0, sp, #0x1c8
  445cb4:	str	x0, [sp, #168]
  445cb8:	ldr	x2, [sp, #344]
  445cbc:	sub	x4, x1, #0x1
  445cc0:	ldr	w3, [sp, #284]
  445cc4:	add	x5, x2, #0x1
  445cc8:	stp	x5, x4, [sp, #344]
  445ccc:	ldrb	w0, [x2]
  445cd0:	cmp	w0, w3
  445cd4:	b.cs	445ee0 <ferror@plt+0x43660>  // b.hs, b.nlast
  445cd8:	cbz	w0, 445f84 <ferror@plt+0x43704>
  445cdc:	cmp	w0, #0x5
  445ce0:	b.eq	445e88 <ferror@plt+0x43608>  // b.none
  445ce4:	b.hi	445e68 <ferror@plt+0x435e8>  // b.pmore
  445ce8:	cmp	w0, #0x3
  445cec:	b.eq	446068 <ferror@plt+0x437e8>  // b.none
  445cf0:	cmp	w0, #0x4
  445cf4:	b.ne	445e28 <ferror@plt+0x435a8>  // b.any
  445cf8:	mov	x0, x28
  445cfc:	bl	443030 <ferror@plt+0x407b0>
  445d00:	cbnz	x0, 4463d4 <ferror@plt+0x43b54>
  445d04:	ldr	x1, [sp, #352]
  445d08:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  445d0c:	add	x0, x0, #0x148
  445d10:	str	x0, [sp, #152]
  445d14:	nop
  445d18:	cbnz	x1, 445cb8 <ferror@plt+0x43438>
  445d1c:	ldr	w0, [sp, #384]
  445d20:	cbnz	w0, 445320 <ferror@plt+0x42aa0>
  445d24:	ldr	x0, [sp, #256]
  445d28:	cbz	x0, 445320 <ferror@plt+0x42aa0>
  445d2c:	ldr	x24, [sp, #112]
  445d30:	mov	x3, x20
  445d34:	ldr	x25, [sp, #144]
  445d38:	mov	x0, x19
  445d3c:	mov	x2, x24
  445d40:	mov	x1, #0x18                  	// #24
  445d44:	mov	x4, x25
  445d48:	bl	43ea90 <ferror@plt+0x3c210>
  445d4c:	cbz	x0, 445320 <ferror@plt+0x42aa0>
  445d50:	mov	x1, #0xffffffffffffffff    	// #-1
  445d54:	stp	x1, xzr, [x0]
  445d58:	mov	x3, x20
  445d5c:	str	xzr, [x0, #16]
  445d60:	mov	x2, x24
  445d64:	mov	x1, x25
  445d68:	mov	x0, x19
  445d6c:	bl	43ebb8 <ferror@plt+0x3c338>
  445d70:	cbz	w0, 445320 <ferror@plt+0x42aa0>
  445d74:	ldr	x0, [sp, #232]
  445d78:	adrp	x3, 442000 <ferror@plt+0x3f780>
  445d7c:	ldr	x1, [sp, #256]
  445d80:	add	x3, x3, #0xe40
  445d84:	mov	x2, #0x18                  	// #24
  445d88:	str	x0, [sp, #144]
  445d8c:	bl	447768 <ferror@plt+0x44ee8>
  445d90:	ldr	w0, [x19, #8]
  445d94:	ldr	x1, [sp, #256]
  445d98:	str	x1, [sp, #136]
  445d9c:	cbz	w0, 4463c4 <ferror@plt+0x43b44>
  445da0:	add	x0, sp, #0x270
  445da4:	add	x24, sp, #0x188
  445da8:	str	xzr, [sp, #152]
  445dac:	ldr	x27, [x23, #16]
  445db0:	stp	xzr, xzr, [x0, #-232]
  445db4:	stp	xzr, xzr, [x0, #-216]
  445db8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  445dbc:	add	x1, x1, #0x8d8
  445dc0:	ldr	w3, [x22, #120]
  445dc4:	ldr	x5, [x22, #56]
  445dc8:	add	x28, sp, #0x108
  445dcc:	add	x25, sp, #0x1c8
  445dd0:	ldp	x4, x0, [x27]
  445dd4:	stp	x1, x5, [sp, #456]
  445dd8:	ldr	x1, [sp, #112]
  445ddc:	stp	x4, x0, [sp, #472]
  445de0:	str	w3, [sp, #488]
  445de4:	str	x1, [sp, #496]
  445de8:	str	x20, [sp, #504]
  445dec:	str	wzr, [sp, #512]
  445df0:	cbz	x0, 446374 <ferror@plt+0x43af4>
  445df4:	ldr	x6, [sp, #112]
  445df8:	stp	x24, x24, [sp]
  445dfc:	mov	x7, x20
  445e00:	mov	x5, x28
  445e04:	mov	x4, x25
  445e08:	mov	x2, x27
  445e0c:	mov	x1, x22
  445e10:	mov	x0, x19
  445e14:	mov	x3, #0x0                   	// #0
  445e18:	bl	444798 <ferror@plt+0x41f18>
  445e1c:	cbz	w0, 4462f8 <ferror@plt+0x43a78>
  445e20:	ldr	x0, [sp, #480]
  445e24:	b	445df0 <ferror@plt+0x43570>
  445e28:	cmp	w0, #0x1
  445e2c:	b.eq	4461c0 <ferror@plt+0x43940>  // b.none
  445e30:	cmp	w0, #0x2
  445e34:	b.ne	446190 <ferror@plt+0x43910>  // b.any
  445e38:	mov	x0, x28
  445e3c:	bl	443030 <ferror@plt+0x407b0>
  445e40:	ldr	w2, [sp, #268]
  445e44:	add	x24, x0, w24, uxtw
  445e48:	ldr	w3, [sp, #272]
  445e4c:	ldr	x1, [sp, #352]
  445e50:	mul	x0, x2, x24
  445e54:	udiv	x2, x24, x3
  445e58:	udiv	x0, x0, x3
  445e5c:	msub	w24, w2, w3, w24
  445e60:	add	x25, x25, x0
  445e64:	b	445d18 <ferror@plt+0x43498>
  445e68:	cmp	w0, #0x9
  445e6c:	b.eq	446134 <ferror@plt+0x438b4>  // b.none
  445e70:	b.ls	445e98 <ferror@plt+0x43618>  // b.plast
  445e74:	cmp	w0, #0xb
  445e78:	mov	x1, x4
  445e7c:	b.ls	445d18 <ferror@plt+0x43498>  // b.plast
  445e80:	cmp	w0, #0xc
  445e84:	b.ne	446190 <ferror@plt+0x43910>  // b.any
  445e88:	mov	x0, x28
  445e8c:	bl	443030 <ferror@plt+0x407b0>
  445e90:	ldr	x1, [sp, #352]
  445e94:	b	445d18 <ferror@plt+0x43498>
  445e98:	cmp	w0, #0x7
  445e9c:	mov	x1, x4
  445ea0:	b.ls	445d18 <ferror@plt+0x43498>  // b.plast
  445ea4:	cmp	w0, #0x8
  445ea8:	b.ne	446190 <ferror@plt+0x43910>  // b.any
  445eac:	ldr	w4, [sp, #280]
  445eb0:	mov	w0, #0xff                  	// #255
  445eb4:	sub	w0, w0, w3
  445eb8:	ldr	w2, [sp, #268]
  445ebc:	ldr	w3, [sp, #272]
  445ec0:	udiv	w0, w0, w4
  445ec4:	add	w24, w0, w24
  445ec8:	mul	w0, w24, w2
  445ecc:	udiv	w2, w24, w3
  445ed0:	udiv	w0, w0, w3
  445ed4:	msub	w24, w2, w3, w24
  445ed8:	add	x25, x25, x0
  445edc:	b	445d18 <ferror@plt+0x43498>
  445ee0:	add	x1, sp, #0x114
  445ee4:	sub	w0, w0, w3
  445ee8:	ldp	w6, w5, [x1]
  445eec:	ldp	w2, w3, [x1, #-8]
  445ef0:	udiv	w1, w0, w5
  445ef4:	add	w24, w1, w24
  445ef8:	msub	w0, w1, w5, w0
  445efc:	add	w0, w0, w6
  445f00:	mul	w1, w24, w2
  445f04:	add	w27, w27, w0
  445f08:	udiv	w2, w24, w3
  445f0c:	ldr	x0, [sp, #256]
  445f10:	udiv	w1, w1, w3
  445f14:	msub	w24, w2, w3, w24
  445f18:	ldp	x2, x3, [sp, #368]
  445f1c:	add	x25, x25, x1
  445f20:	cbz	x0, 445f44 <ferror@plt+0x436c4>
  445f24:	add	x0, x0, x0, lsl #1
  445f28:	ldr	x1, [sp, #232]
  445f2c:	lsl	x0, x0, #3
  445f30:	sub	x0, x0, #0x18
  445f34:	add	x5, x1, x0
  445f38:	ldr	x0, [x1, x0]
  445f3c:	cmp	x25, x0
  445f40:	b.eq	44607c <ferror@plt+0x437fc>  // b.none
  445f44:	ldr	x4, [sp, #144]
  445f48:	mov	x0, x19
  445f4c:	mov	x1, #0x18                  	// #24
  445f50:	bl	43ea90 <ferror@plt+0x3c210>
  445f54:	cbz	x0, 446074 <ferror@plt+0x437f4>
  445f58:	ldr	x1, [x22, #16]
  445f5c:	ldr	x2, [sp, #152]
  445f60:	str	x2, [x0, #8]
  445f64:	ldr	x2, [sp, #256]
  445f68:	add	x1, x1, x25
  445f6c:	str	x1, [x0]
  445f70:	add	x1, x2, #0x1
  445f74:	stp	w27, w2, [x0, #16]
  445f78:	str	x1, [sp, #256]
  445f7c:	ldr	x1, [sp, #352]
  445f80:	b	445d18 <ferror@plt+0x43498>
  445f84:	mov	x0, x28
  445f88:	bl	443030 <ferror@plt+0x407b0>
  445f8c:	ldp	x7, x1, [sp, #344]
  445f90:	mov	x6, x0
  445f94:	cbnz	x1, 445ffc <ferror@plt+0x4377c>
  445f98:	ldr	w0, [sp, #384]
  445f9c:	cbz	w0, 4460a0 <ferror@plt+0x43820>
  445fa0:	sub	x0, x6, #0x1
  445fa4:	cmp	x0, x1
  445fa8:	b.ls	44643c <ferror@plt+0x43bbc>  // b.plast
  445fac:	ldr	w0, [sp, #384]
  445fb0:	cbnz	w0, 445320 <ferror@plt+0x42aa0>
  445fb4:	ldp	x4, x1, [sp, #328]
  445fb8:	add	x24, sp, #0x1c8
  445fbc:	ldr	x5, [sp, #344]
  445fc0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445fc4:	mov	x0, x24
  445fc8:	add	x3, x3, #0x348
  445fcc:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  445fd0:	sub	w5, w5, w1
  445fd4:	add	x2, x2, #0x358
  445fd8:	mov	x1, #0xc8                  	// #200
  445fdc:	bl	402360 <snprintf@plt>
  445fe0:	ldp	x3, x0, [sp, #368]
  445fe4:	mov	x1, x24
  445fe8:	mov	w2, #0x0                   	// #0
  445fec:	blr	x3
  445ff0:	mov	w0, #0x1                   	// #1
  445ff4:	str	w0, [sp, #384]
  445ff8:	b	445320 <ferror@plt+0x42aa0>
  445ffc:	sub	x1, x1, #0x1
  446000:	add	x5, x7, #0x1
  446004:	stp	x5, x1, [sp, #344]
  446008:	ldrb	w2, [x7]
  44600c:	cmp	w2, #0x3
  446010:	b.eq	4460e0 <ferror@plt+0x43860>  // b.none
  446014:	b.hi	446038 <ferror@plt+0x437b8>  // b.pmore
  446018:	cmp	w2, #0x1
  44601c:	b.ne	446044 <ferror@plt+0x437c4>  // b.any
  446020:	ldr	x0, [sp, #160]
  446024:	mov	w27, w2
  446028:	mov	w24, #0x0                   	// #0
  44602c:	mov	x25, #0x0                   	// #0
  446030:	str	x0, [sp, #152]
  446034:	b	445d18 <ferror@plt+0x43498>
  446038:	cmp	w2, #0x4
  44603c:	b.eq	445e88 <ferror@plt+0x43608>  // b.none
  446040:	b	445fa0 <ferror@plt+0x43720>
  446044:	cmp	w2, #0x2
  446048:	b.ne	445fa0 <ferror@plt+0x43720>  // b.any
  44604c:	ldr	x0, [sp, #184]
  446050:	ldr	w1, [x0, #48]
  446054:	mov	x0, x28
  446058:	bl	443578 <ferror@plt+0x40cf8>
  44605c:	mov	x25, x0
  446060:	ldr	x1, [sp, #352]
  446064:	b	445d18 <ferror@plt+0x43498>
  446068:	mov	x0, x28
  44606c:	bl	443180 <ferror@plt+0x40900>
  446070:	add	w27, w27, w0
  446074:	ldr	x1, [sp, #352]
  446078:	b	445d18 <ferror@plt+0x43498>
  44607c:	ldr	x0, [x5, #8]
  446080:	ldr	x1, [sp, #152]
  446084:	cmp	x1, x0
  446088:	b.ne	445f44 <ferror@plt+0x436c4>  // b.any
  44608c:	ldr	w0, [x5, #16]
  446090:	mov	x1, x4
  446094:	cmp	w27, w0
  446098:	b.ne	445f44 <ferror@plt+0x436c4>  // b.any
  44609c:	b	445d18 <ferror@plt+0x43498>
  4460a0:	ldp	x3, x2, [sp, #192]
  4460a4:	mov	x1, #0xc8                  	// #200
  4460a8:	ldp	x4, x5, [sp, #328]
  4460ac:	str	x6, [sp, #136]
  4460b0:	ldr	x0, [sp, #168]
  4460b4:	sub	w5, w7, w5
  4460b8:	bl	402360 <snprintf@plt>
  4460bc:	ldp	x3, x0, [sp, #368]
  4460c0:	mov	w2, #0x0                   	// #0
  4460c4:	ldr	x1, [sp, #168]
  4460c8:	blr	x3
  4460cc:	mov	w0, #0x1                   	// #1
  4460d0:	str	w0, [sp, #384]
  4460d4:	ldr	x6, [sp, #136]
  4460d8:	ldr	x1, [sp, #352]
  4460dc:	b	445fa0 <ferror@plt+0x43720>
  4460e0:	mov	x0, x5
  4460e4:	str	x5, [sp, #136]
  4460e8:	str	x1, [sp, #152]
  4460ec:	str	x7, [sp, #176]
  4460f0:	bl	4022c0 <strnlen@plt>
  4460f4:	ldr	x1, [sp, #152]
  4460f8:	add	x0, x0, #0x1
  4460fc:	ldr	x5, [sp, #136]
  446100:	cmp	x1, x0
  446104:	ldr	x7, [sp, #176]
  446108:	b.cs	446210 <ferror@plt+0x43990>  // b.hs, b.nlast
  44610c:	ldr	w0, [sp, #384]
  446110:	cbnz	w0, 445320 <ferror@plt+0x42aa0>
  446114:	ldp	x4, x1, [sp, #328]
  446118:	add	x24, sp, #0x1c8
  44611c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446120:	mov	x0, x24
  446124:	add	x3, x3, #0x348
  446128:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44612c:	sub	w5, w5, w1
  446130:	b	445fd4 <ferror@plt+0x43754>
  446134:	cmp	x4, #0x1
  446138:	b.hi	44632c <ferror@plt+0x43aac>  // b.pmore
  44613c:	ldr	w0, [sp, #384]
  446140:	mov	x1, x4
  446144:	cbz	w0, 446150 <ferror@plt+0x438d0>
  446148:	mov	w24, #0x0                   	// #0
  44614c:	b	445d18 <ferror@plt+0x43498>
  446150:	ldp	x3, x2, [sp, #192]
  446154:	mov	x1, #0xc8                  	// #200
  446158:	ldp	x4, x6, [sp, #328]
  44615c:	ldr	x24, [sp, #168]
  446160:	mov	x0, x24
  446164:	sub	w5, w5, w6
  446168:	bl	402360 <snprintf@plt>
  44616c:	ldp	x3, x0, [sp, #368]
  446170:	mov	x1, x24
  446174:	mov	w2, #0x0                   	// #0
  446178:	mov	w24, #0x0                   	// #0
  44617c:	blr	x3
  446180:	mov	w0, #0x1                   	// #1
  446184:	str	w0, [sp, #384]
  446188:	ldr	x1, [sp, #352]
  44618c:	b	445d18 <ferror@plt+0x43498>
  446190:	ldr	x1, [sp, #288]
  446194:	sub	w0, w0, #0x1
  446198:	ldrb	w1, [x1, w0, uxtw]
  44619c:	cbz	w1, 4465a4 <ferror@plt+0x43d24>
  4461a0:	mov	x0, x28
  4461a4:	str	w1, [sp, #136]
  4461a8:	bl	443030 <ferror@plt+0x407b0>
  4461ac:	ldr	w1, [sp, #136]
  4461b0:	subs	w1, w1, #0x1
  4461b4:	b.ne	4461a0 <ferror@plt+0x43920>  // b.any
  4461b8:	ldr	x1, [sp, #352]
  4461bc:	b	445d18 <ferror@plt+0x43498>
  4461c0:	ldr	x0, [sp, #256]
  4461c4:	ldp	x2, x3, [sp, #368]
  4461c8:	cbz	x0, 445f44 <ferror@plt+0x436c4>
  4461cc:	add	x0, x0, x0, lsl #1
  4461d0:	ldr	x1, [sp, #232]
  4461d4:	lsl	x0, x0, #3
  4461d8:	sub	x0, x0, #0x18
  4461dc:	add	x5, x1, x0
  4461e0:	ldr	x0, [x1, x0]
  4461e4:	cmp	x0, x25
  4461e8:	b.ne	445f44 <ferror@plt+0x436c4>  // b.any
  4461ec:	ldr	x0, [x5, #8]
  4461f0:	ldr	x1, [sp, #152]
  4461f4:	cmp	x1, x0
  4461f8:	b.ne	445f44 <ferror@plt+0x436c4>  // b.any
  4461fc:	ldr	w0, [x5, #16]
  446200:	mov	x1, x4
  446204:	cmp	w0, w27
  446208:	b.ne	445f44 <ferror@plt+0x436c4>  // b.any
  44620c:	b	445d18 <ferror@plt+0x43498>
  446210:	sub	x1, x1, x0
  446214:	add	x0, x5, x0
  446218:	str	x7, [sp, #152]
  44621c:	stp	x0, x1, [sp, #344]
  446220:	mov	x0, x28
  446224:	bl	443030 <ferror@plt+0x407b0>
  446228:	mov	x1, x0
  44622c:	mov	x0, x28
  446230:	str	x1, [sp, #176]
  446234:	bl	443030 <ferror@plt+0x407b0>
  446238:	mov	x0, x28
  44623c:	bl	443030 <ferror@plt+0x407b0>
  446240:	ldr	x7, [sp, #152]
  446244:	ldr	x5, [sp, #136]
  446248:	ldrb	w0, [x7, #1]
  44624c:	cmp	w0, #0x2f
  446250:	b.eq	446430 <ferror@plt+0x43bb0>  // b.none
  446254:	ldr	w0, [sp, #176]
  446258:	cbnz	w0, 446450 <ferror@plt+0x43bd0>
  44625c:	ldr	x0, [sp, #184]
  446260:	ldr	x4, [x0, #72]
  446264:	mov	x0, x4
  446268:	str	x5, [sp, #136]
  44626c:	str	x4, [sp, #216]
  446270:	bl	402270 <strlen@plt>
  446274:	ldr	x5, [sp, #136]
  446278:	mov	x1, x0
  44627c:	str	x1, [sp, #136]
  446280:	mov	x0, x5
  446284:	str	x5, [sp, #208]
  446288:	bl	402270 <strlen@plt>
  44628c:	mov	x1, x0
  446290:	ldp	x2, x3, [sp, #368]
  446294:	str	x1, [sp, #176]
  446298:	ldr	x4, [sp, #136]
  44629c:	mov	x0, x19
  4462a0:	add	x1, x4, x1
  4462a4:	add	x1, x1, #0x2
  4462a8:	bl	43e8a8 <ferror@plt+0x3c028>
  4462ac:	str	x0, [sp, #152]
  4462b0:	cbz	x0, 445320 <ferror@plt+0x42aa0>
  4462b4:	ldr	x2, [sp, #136]
  4462b8:	ldr	x4, [sp, #216]
  4462bc:	mov	x1, x4
  4462c0:	bl	402220 <memcpy@plt>
  4462c4:	ldr	x4, [sp, #136]
  4462c8:	mov	w0, #0x2f                  	// #47
  4462cc:	ldr	x3, [sp, #152]
  4462d0:	ldr	x5, [sp, #208]
  4462d4:	ldr	x1, [sp, #176]
  4462d8:	strb	w0, [x3, x4]
  4462dc:	add	x0, x4, #0x1
  4462e0:	add	x2, x1, #0x1
  4462e4:	add	x0, x3, x0
  4462e8:	mov	x1, x5
  4462ec:	bl	402220 <memcpy@plt>
  4462f0:	ldr	x1, [sp, #352]
  4462f4:	b	445d18 <ferror@plt+0x43498>
  4462f8:	mov	x25, #0x0                   	// #0
  4462fc:	mov	x28, #0x0                   	// #0
  446300:	ldr	x2, [sp, #296]
  446304:	cbnz	x2, 446414 <ferror@plt+0x43b94>
  446308:	ldp	x2, x1, [sp, #312]
  44630c:	mov	x4, x20
  446310:	ldr	x3, [sp, #112]
  446314:	mov	x0, x19
  446318:	lsl	x2, x2, #3
  44631c:	bl	43e770 <ferror@plt+0x3bef0>
  446320:	mov	w1, #0x1                   	// #1
  446324:	ldr	x24, [sp, #144]
  446328:	b	445374 <ferror@plt+0x42af4>
  44632c:	ldr	w0, [sp, #360]
  446330:	sub	x1, x1, #0x3
  446334:	add	x3, x2, #0x3
  446338:	stp	x3, x1, [sp, #344]
  44633c:	cbz	w0, 4463fc <ferror@plt+0x43b7c>
  446340:	ldrb	w0, [x2, #1]
  446344:	mov	w24, #0x0                   	// #0
  446348:	ldrb	w2, [x2, #2]
  44634c:	orr	w0, w2, w0, lsl #8
  446350:	add	x25, x25, w0, uxth
  446354:	b	445d18 <ferror@plt+0x43498>
  446358:	ldr	x0, [sp, #184]
  44635c:	ldr	x4, [x0, #72]
  446360:	cbnz	x4, 445bb8 <ferror@plt+0x43338>
  446364:	ldr	x1, [sp, #136]
  446368:	ldr	x0, [sp, #320]
  44636c:	str	x27, [x0, x1]
  446370:	b	445c34 <ferror@plt+0x433b4>
  446374:	ldr	x28, [x24, #24]
  446378:	cbz	x28, 4462f8 <ferror@plt+0x43a78>
  44637c:	ldr	x0, [sp, #152]
  446380:	cbz	x0, 4465bc <ferror@plt+0x43d3c>
  446384:	ldr	x2, [sp, #112]
  446388:	mov	x1, x0
  44638c:	mov	x24, x0
  446390:	mov	x3, x20
  446394:	mov	x0, x19
  446398:	bl	43eba8 <ferror@plt+0x3c328>
  44639c:	mov	x25, x0
  4463a0:	cbz	x0, 4462f8 <ferror@plt+0x43a78>
  4463a4:	str	xzr, [x24, #24]
  4463a8:	mov	x1, x28
  4463ac:	mov	x0, x25
  4463b0:	adrp	x3, 442000 <ferror@plt+0x3f780>
  4463b4:	mov	x2, #0x18                  	// #24
  4463b8:	add	x3, x3, #0xfe0
  4463bc:	bl	447768 <ferror@plt+0x44ee8>
  4463c0:	b	446300 <ferror@plt+0x43a80>
  4463c4:	add	x24, x22, #0x80
  4463c8:	str	x24, [sp, #152]
  4463cc:	ldr	x27, [x23, #16]
  4463d0:	b	445db8 <ferror@plt+0x43538>
  4463d4:	ldr	x1, [sp, #312]
  4463d8:	sub	x2, x0, #0x1
  4463dc:	cmp	x2, x1
  4463e0:	b.cs	44665c <ferror@plt+0x43ddc>  // b.hs, b.nlast
  4463e4:	ldr	x2, [sp, #320]
  4463e8:	ldr	x1, [sp, #352]
  4463ec:	add	x0, x2, x0, lsl #3
  4463f0:	ldur	x0, [x0, #-8]
  4463f4:	str	x0, [sp, #152]
  4463f8:	b	445d18 <ferror@plt+0x43498>
  4463fc:	ldrb	w0, [x2, #2]
  446400:	mov	w24, #0x0                   	// #0
  446404:	ldrb	w2, [x2, #1]
  446408:	orr	w0, w2, w0, lsl #8
  44640c:	add	x25, x25, w0, uxth
  446410:	b	445d18 <ferror@plt+0x43498>
  446414:	ldr	x3, [sp, #112]
  446418:	lsl	x2, x2, #3
  44641c:	ldr	x1, [sp, #304]
  446420:	mov	x4, x20
  446424:	mov	x0, x19
  446428:	bl	43e770 <ferror@plt+0x3bef0>
  44642c:	b	446308 <ferror@plt+0x43a88>
  446430:	str	x5, [sp, #152]
  446434:	ldr	x1, [sp, #352]
  446438:	b	445d18 <ferror@plt+0x43498>
  44643c:	ldr	x2, [sp, #344]
  446440:	sub	x1, x1, x0
  446444:	add	x0, x2, x0
  446448:	stp	x0, x1, [sp, #344]
  44644c:	b	445d18 <ferror@plt+0x43498>
  446450:	ldr	w0, [sp, #176]
  446454:	ldr	x1, [sp, #296]
  446458:	sub	w0, w0, #0x1
  44645c:	cmp	x0, x1
  446460:	b.cs	4466c8 <ferror@plt+0x43e48>  // b.hs, b.nlast
  446464:	ldr	x1, [sp, #304]
  446468:	ldr	x4, [x1, x0, lsl #3]
  44646c:	b	446264 <ferror@plt+0x439e4>
  446470:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x116d8>
  446474:	add	x0, x0, #0x148
  446478:	str	x0, [sp, #160]
  44647c:	b	445c78 <ferror@plt+0x433f8>
  446480:	ldr	w0, [sp, #448]
  446484:	cbz	w0, 4465f8 <ferror@plt+0x43d78>
  446488:	str	wzr, [sp, #272]
  44648c:	cbnz	w0, 44564c <ferror@plt+0x42dcc>
  446490:	b	4456ac <ferror@plt+0x42e2c>
  446494:	ldp	x4, x1, [sp, #392]
  446498:	add	x24, sp, #0x1c8
  44649c:	mov	x0, x24
  4464a0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4464a4:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4464a8:	add	x3, x3, #0x348
  4464ac:	add	x2, x2, #0x358
  4464b0:	sub	w5, w5, w1
  4464b4:	mov	x1, #0xc8                  	// #200
  4464b8:	bl	402360 <snprintf@plt>
  4464bc:	ldp	x3, x0, [sp, #432]
  4464c0:	mov	x1, x24
  4464c4:	mov	w2, #0x0                   	// #0
  4464c8:	blr	x3
  4464cc:	mov	w3, #0x1                   	// #1
  4464d0:	mov	w2, #0x0                   	// #0
  4464d4:	str	w3, [sp, #448]
  4464d8:	ldp	x1, x0, [sp, #408]
  4464dc:	b	4458b4 <ferror@plt+0x43034>
  4464e0:	ldp	x4, x5, [sp, #392]
  4464e4:	add	x24, sp, #0x1c8
  4464e8:	mov	x0, x24
  4464ec:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4464f0:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4464f4:	add	x3, x3, #0x348
  4464f8:	add	x2, x2, #0x358
  4464fc:	sub	w5, w1, w5
  446500:	mov	x1, #0xc8                  	// #200
  446504:	bl	402360 <snprintf@plt>
  446508:	ldp	x3, x0, [sp, #432]
  44650c:	mov	x1, x24
  446510:	mov	w2, #0x0                   	// #0
  446514:	blr	x3
  446518:	mov	w3, #0x1                   	// #1
  44651c:	mov	w1, #0x0                   	// #0
  446520:	str	w3, [sp, #448]
  446524:	ldp	x2, x0, [sp, #408]
  446528:	b	445728 <ferror@plt+0x42ea8>
  44652c:	ldp	x4, x5, [sp, #392]
  446530:	add	x24, sp, #0x1c8
  446534:	mov	x0, x24
  446538:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44653c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446540:	add	x3, x3, #0x348
  446544:	add	x2, x2, #0x358
  446548:	sub	w5, w1, w5
  44654c:	mov	x1, #0xc8                  	// #200
  446550:	bl	402360 <snprintf@plt>
  446554:	ldp	x3, x0, [sp, #432]
  446558:	mov	x1, x24
  44655c:	mov	w2, #0x0                   	// #0
  446560:	blr	x3
  446564:	mov	w3, #0x1                   	// #1
  446568:	mov	x0, #0xffffffff            	// #4294967295
  44656c:	mov	w2, #0x0                   	// #0
  446570:	str	w3, [sp, #448]
  446574:	ldp	x1, x24, [sp, #408]
  446578:	b	445744 <ferror@plt+0x42ec4>
  44657c:	cbz	x0, 446480 <ferror@plt+0x43c00>
  446580:	sub	x0, x0, #0x1
  446584:	add	x2, x1, #0x1
  446588:	stp	x2, x0, [sp, #408]
  44658c:	ldrb	w3, [x1]
  446590:	mov	x1, x2
  446594:	str	w3, [sp, #272]
  446598:	b	4458cc <ferror@plt+0x4304c>
  44659c:	mov	x24, #0x1                   	// #1
  4465a0:	b	445adc <ferror@plt+0x4325c>
  4465a4:	mov	x1, x4
  4465a8:	b	445d18 <ferror@plt+0x43498>
  4465ac:	mov	x24, #0x1                   	// #1
  4465b0:	b	445abc <ferror@plt+0x4323c>
  4465b4:	mov	x0, #0x1                   	// #1
  4465b8:	b	445a9c <ferror@plt+0x4321c>
  4465bc:	ldr	x2, [sp, #112]
  4465c0:	mov	x3, x20
  4465c4:	add	x1, sp, #0x188
  4465c8:	mov	x0, x19
  4465cc:	bl	43ebb8 <ferror@plt+0x3c338>
  4465d0:	cbz	w0, 4462f8 <ferror@plt+0x43a78>
  4465d4:	ldr	x25, [x24]
  4465d8:	b	4463a8 <ferror@plt+0x43b28>
  4465dc:	ldr	w0, [sp, #448]
  4465e0:	cbnz	w0, 44564c <ferror@plt+0x42dcc>
  4465e4:	b	4456ac <ferror@plt+0x42e2c>
  4465e8:	mov	x1, x5
  4465ec:	mov	w0, w2
  4465f0:	str	wzr, [sp, #276]
  4465f4:	b	445650 <ferror@plt+0x42dd0>
  4465f8:	ldp	x4, x5, [sp, #392]
  4465fc:	add	x24, sp, #0x1c8
  446600:	mov	x0, x24
  446604:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446608:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44660c:	add	x3, x3, #0x348
  446610:	add	x2, x2, #0x358
  446614:	sub	w5, w1, w5
  446618:	mov	x1, #0xc8                  	// #200
  44661c:	bl	402360 <snprintf@plt>
  446620:	ldp	x3, x0, [sp, #432]
  446624:	mov	x1, x24
  446628:	mov	w2, #0x0                   	// #0
  44662c:	blr	x3
  446630:	mov	w1, #0x1                   	// #1
  446634:	mov	w3, #0x0                   	// #0
  446638:	str	w1, [sp, #448]
  44663c:	ldp	x2, x0, [sp, #408]
  446640:	b	446590 <ferror@plt+0x43d10>
  446644:	mov	x12, #0x0                   	// #0
  446648:	str	xzr, [sp, #304]
  44664c:	b	4457bc <ferror@plt+0x42f3c>
  446650:	add	x0, sp, #0xe8
  446654:	str	x0, [sp, #144]
  446658:	b	445d1c <ferror@plt+0x4349c>
  44665c:	ldp	x4, x1, [sp, #328]
  446660:	add	x24, sp, #0x1c8
  446664:	ldr	x5, [sp, #344]
  446668:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44666c:	mov	x0, x24
  446670:	add	x3, x3, #0x5d8
  446674:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446678:	sub	w5, w5, w1
  44667c:	add	x2, x2, #0x358
  446680:	mov	x1, #0xc8                  	// #200
  446684:	bl	402360 <snprintf@plt>
  446688:	ldp	x3, x0, [sp, #368]
  44668c:	mov	x1, x24
  446690:	mov	w2, #0x0                   	// #0
  446694:	blr	x3
  446698:	b	445320 <ferror@plt+0x42aa0>
  44669c:	add	x24, sp, #0x1c8
  4466a0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4466a4:	mov	x0, x24
  4466a8:	add	x3, x3, #0x570
  4466ac:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4466b0:	ldp	x4, x1, [sp, #328]
  4466b4:	ldr	x5, [sp, #344]
  4466b8:	b	4454f0 <ferror@plt+0x42c70>
  4466bc:	mov	x1, x5
  4466c0:	str	wzr, [sp, #276]
  4466c4:	b	445650 <ferror@plt+0x42dd0>
  4466c8:	add	x24, sp, #0x1c8
  4466cc:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4466d0:	mov	x0, x24
  4466d4:	add	x3, x3, #0x5a8
  4466d8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4466dc:	ldp	x4, x1, [sp, #328]
  4466e0:	ldr	x5, [sp, #344]
  4466e4:	b	446678 <ferror@plt+0x43df8>
  4466e8:	stp	x29, x30, [sp, #-96]!
  4466ec:	mov	x29, sp
  4466f0:	stp	x23, x24, [sp, #48]
  4466f4:	mov	x24, x0
  4466f8:	ldr	w0, [x0, #8]
  4466fc:	stp	x19, x20, [sp, #16]
  446700:	mov	x23, x3
  446704:	mov	x20, x2
  446708:	stp	x21, x22, [sp, #32]
  44670c:	mov	x22, x1
  446710:	mov	x21, x4
  446714:	cbnz	w0, 446778 <ferror@plt+0x43ef8>
  446718:	ldr	x19, [x24, #32]
  44671c:	cbz	x19, 4467c0 <ferror@plt+0x43f40>
  446720:	str	x25, [sp, #64]
  446724:	add	x25, sp, #0x5c
  446728:	b	44673c <ferror@plt+0x43ebc>
  44672c:	ldr	w0, [sp, #92]
  446730:	cbnz	w0, 4467ec <ferror@plt+0x43f6c>
  446734:	ldr	x19, [x19]
  446738:	cbz	x19, 4467bc <ferror@plt+0x43f3c>
  44673c:	mov	x6, x25
  446740:	mov	x5, x21
  446744:	mov	x4, x23
  446748:	mov	x3, x20
  44674c:	mov	x2, x22
  446750:	mov	x1, x19
  446754:	mov	x0, x24
  446758:	bl	444f70 <ferror@plt+0x426f0>
  44675c:	cbz	w0, 44672c <ferror@plt+0x43eac>
  446760:	ldp	x19, x20, [sp, #16]
  446764:	ldp	x21, x22, [sp, #32]
  446768:	ldp	x23, x24, [sp, #48]
  44676c:	ldr	x25, [sp, #64]
  446770:	ldp	x29, x30, [sp], #96
  446774:	ret
  446778:	add	x19, x24, #0x20
  44677c:	str	x25, [sp, #64]
  446780:	add	x25, sp, #0x5c
  446784:	b	446798 <ferror@plt+0x43f18>
  446788:	bl	444f70 <ferror@plt+0x426f0>
  44678c:	cbnz	w0, 446760 <ferror@plt+0x43ee0>
  446790:	ldr	w0, [sp, #92]
  446794:	cbnz	w0, 4467ec <ferror@plt+0x43f6c>
  446798:	ldar	x19, [x19]
  44679c:	mov	x6, x25
  4467a0:	mov	x5, x21
  4467a4:	mov	x4, x23
  4467a8:	mov	x3, x20
  4467ac:	mov	x2, x22
  4467b0:	mov	x1, x19
  4467b4:	mov	x0, x24
  4467b8:	cbnz	x19, 446788 <ferror@plt+0x43f08>
  4467bc:	ldr	x25, [sp, #64]
  4467c0:	mov	x1, x22
  4467c4:	mov	x0, x21
  4467c8:	mov	x4, #0x0                   	// #0
  4467cc:	mov	w3, #0x0                   	// #0
  4467d0:	mov	x2, #0x0                   	// #0
  4467d4:	blr	x20
  4467d8:	ldp	x19, x20, [sp, #16]
  4467dc:	ldp	x21, x22, [sp, #32]
  4467e0:	ldp	x23, x24, [sp, #48]
  4467e4:	ldp	x29, x30, [sp], #96
  4467e8:	ret
  4467ec:	mov	w0, #0x0                   	// #0
  4467f0:	ldp	x19, x20, [sp, #16]
  4467f4:	ldp	x21, x22, [sp, #32]
  4467f8:	ldp	x23, x24, [sp, #48]
  4467fc:	ldr	x25, [sp, #64]
  446800:	ldp	x29, x30, [sp], #96
  446804:	ret
  446808:	sub	sp, sp, #0x370
  44680c:	mov	x8, x2
  446810:	add	x9, sp, #0x200
  446814:	stp	x29, x30, [sp, #48]
  446818:	add	x29, sp, #0x30
  44681c:	stp	x19, x20, [sp, #64]
  446820:	stp	x21, x22, [sp, #80]
  446824:	stp	x23, x24, [sp, #96]
  446828:	stp	x25, x26, [sp, #112]
  44682c:	mov	x26, x0
  446830:	stp	xzr, xzr, [x9, #-152]
  446834:	stp	xzr, xzr, [x9, #-120]
  446838:	str	x7, [sp, #200]
  44683c:	str	x1, [sp, #240]
  446840:	str	x6, [sp, #264]
  446844:	stp	x2, x3, [sp, #288]
  446848:	stp	x4, x5, [sp, #304]
  44684c:	stp	xzr, xzr, [sp, #336]
  446850:	str	xzr, [sp, #352]
  446854:	stp	xzr, xzr, [sp, #376]
  446858:	stp	xzr, xzr, [sp, #408]
  44685c:	stp	x2, x2, [sp, #432]
  446860:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  446864:	add	x2, x2, #0x8d8
  446868:	str	x2, [sp, #424]
  44686c:	str	x3, [sp, #448]
  446870:	ldr	x24, [sp, #928]
  446874:	ldr	x23, [sp, #936]
  446878:	ldr	w0, [sp, #912]
  44687c:	str	w0, [sp, #456]
  446880:	stp	x24, x23, [sp, #464]
  446884:	str	wzr, [sp, #480]
  446888:	cbz	x3, 447668 <ferror@plt+0x44de8>
  44688c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446890:	add	x25, sp, #0x1a8
  446894:	add	x0, x0, #0x368
  446898:	stp	x27, x28, [sp, #128]
  44689c:	str	xzr, [sp, #192]
  4468a0:	stp	xzr, x8, [sp, #208]
  4468a4:	str	x0, [sp, #248]
  4468a8:	add	x0, sp, #0x1e8
  4468ac:	str	x0, [sp, #160]
  4468b0:	mov	x0, x25
  4468b4:	bl	4433c8 <ferror@plt+0x40b48>
  4468b8:	mov	w2, w0
  4468bc:	str	x2, [sp, #152]
  4468c0:	str	wzr, [sp, #180]
  4468c4:	mov	x1, #0xffffffff            	// #4294967295
  4468c8:	cmp	x1, w0, uxtw
  4468cc:	b.eq	446da0 <ferror@plt+0x44520>  // b.none
  4468d0:	ldp	x5, x4, [sp, #152]
  4468d4:	ldp	x2, x3, [x25]
  4468d8:	ldp	x0, x1, [x25, #16]
  4468dc:	stp	x2, x3, [x4]
  4468e0:	ldp	x2, x3, [x25, #32]
  4468e4:	stp	x0, x1, [x4, #16]
  4468e8:	stp	x2, x3, [x4, #32]
  4468ec:	ldp	x2, x3, [x25, #48]
  4468f0:	stp	x2, x3, [x4, #48]
  4468f4:	ldr	x1, [sp, #448]
  4468f8:	str	x5, [sp, #512]
  4468fc:	cmp	x1, x5
  446900:	b.cs	4469e8 <ferror@plt+0x44168>  // b.hs, b.nlast
  446904:	ldr	w0, [sp, #480]
  446908:	cbz	w0, 446d10 <ferror@plt+0x44490>
  44690c:	nop
  446910:	ldr	x0, [sp, #192]
  446914:	cbz	x0, 4469bc <ferror@plt+0x4413c>
  446918:	ldr	x20, [sp, #336]
  44691c:	add	x21, x20, x0, lsl #3
  446920:	ldr	x19, [x20]
  446924:	ldr	x2, [x19, #88]
  446928:	cbz	x2, 446964 <ferror@plt+0x440e4>
  44692c:	mov	x22, #0x0                   	// #0
  446930:	ldr	x1, [x19, #96]
  446934:	mov	x4, x23
  446938:	mov	x3, x24
  44693c:	mov	x0, x26
  446940:	add	x1, x1, x22, lsl #5
  446944:	add	x22, x22, #0x1
  446948:	ldp	x2, x1, [x1, #16]
  44694c:	lsl	x2, x2, #3
  446950:	bl	43e770 <ferror@plt+0x3bef0>
  446954:	ldr	x2, [x19, #88]
  446958:	cmp	x22, x2
  44695c:	b.cc	446930 <ferror@plt+0x440b0>  // b.lo, b.ul, b.last
  446960:	lsl	x2, x2, #5
  446964:	ldr	x1, [x19, #96]
  446968:	mov	x4, x23
  44696c:	mov	x3, x24
  446970:	mov	x0, x26
  446974:	bl	43e770 <ferror@plt+0x3bef0>
  446978:	ldr	x1, [x20], #8
  44697c:	stp	xzr, xzr, [x19, #88]
  446980:	mov	x4, x23
  446984:	mov	x3, x24
  446988:	mov	x0, x26
  44698c:	mov	x2, #0x88                  	// #136
  446990:	bl	43e770 <ferror@plt+0x3bef0>
  446994:	cmp	x20, x21
  446998:	b.ne	446920 <ferror@plt+0x440a0>  // b.any
  44699c:	ldp	x5, x4, [sp, #344]
  4469a0:	mov	x3, x23
  4469a4:	mov	x2, x24
  4469a8:	add	x1, sp, #0x150
  4469ac:	mov	x0, x26
  4469b0:	add	x4, x4, x5
  4469b4:	stp	xzr, x4, [sp, #344]
  4469b8:	bl	43ebb8 <ferror@plt+0x3c338>
  4469bc:	ldr	x0, [sp, #384]
  4469c0:	cbnz	x0, 446db8 <ferror@plt+0x44538>
  4469c4:	ldp	x27, x28, [sp, #128]
  4469c8:	mov	w0, #0x0                   	// #0
  4469cc:	ldp	x29, x30, [sp, #48]
  4469d0:	ldp	x19, x20, [sp, #64]
  4469d4:	ldp	x21, x22, [sp, #80]
  4469d8:	ldp	x23, x24, [sp, #96]
  4469dc:	ldp	x25, x26, [sp, #112]
  4469e0:	add	sp, sp, #0x370
  4469e4:	ret
  4469e8:	ldr	x0, [sp, #440]
  4469ec:	sub	x1, x1, x5
  4469f0:	str	x1, [sp, #448]
  4469f4:	cmp	x5, #0x1
  4469f8:	add	x1, x0, x5
  4469fc:	str	x1, [sp, #440]
  446a00:	b.hi	446a50 <ferror@plt+0x441d0>  // b.pmore
  446a04:	ldr	w1, [sp, #544]
  446a08:	ldp	x4, x5, [sp, #488]
  446a0c:	cbz	w1, 446d58 <ferror@plt+0x444d8>
  446a10:	add	x19, sp, #0x2a8
  446a14:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446a18:	ldr	x0, [sp, #504]
  446a1c:	add	x2, x20, #0x358
  446a20:	mov	x1, #0xc8                  	// #200
  446a24:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446a28:	sub	w5, w0, w5
  446a2c:	add	x3, x3, #0x608
  446a30:	mov	x0, x19
  446a34:	bl	402360 <snprintf@plt>
  446a38:	ldr	x3, [sp, #528]
  446a3c:	mov	x1, x19
  446a40:	ldr	x0, [sp, #536]
  446a44:	mov	w2, #0x0                   	// #0
  446a48:	blr	x3
  446a4c:	b	446910 <ferror@plt+0x44090>
  446a50:	add	x2, x0, #0x2
  446a54:	str	x2, [sp, #504]
  446a58:	ldr	x2, [sp, #152]
  446a5c:	ldr	w1, [sp, #520]
  446a60:	sub	x2, x2, #0x2
  446a64:	str	x2, [sp, #512]
  446a68:	cbz	w1, 446cfc <ferror@plt+0x4447c>
  446a6c:	ldrb	w1, [x0]
  446a70:	ldrb	w0, [x0, #1]
  446a74:	bfi	w0, w1, #8, #24
  446a78:	str	w0, [sp, #176]
  446a7c:	ldr	w0, [sp, #176]
  446a80:	sub	w0, w0, #0x2
  446a84:	cmp	w0, #0x2
  446a88:	b.hi	447758 <ferror@plt+0x44ed8>  // b.pmore
  446a8c:	add	x4, sp, #0x150
  446a90:	mov	x3, x23
  446a94:	mov	x2, x24
  446a98:	mov	x0, x26
  446a9c:	mov	x1, #0x8                   	// #8
  446aa0:	bl	43ea90 <ferror@plt+0x3c210>
  446aa4:	mov	x19, x0
  446aa8:	cbz	x0, 446910 <ferror@plt+0x44090>
  446aac:	mov	x3, x23
  446ab0:	mov	x2, x24
  446ab4:	mov	x0, x26
  446ab8:	mov	x1, #0x88                  	// #136
  446abc:	bl	43e8a8 <ferror@plt+0x3c028>
  446ac0:	mov	x22, x0
  446ac4:	cbz	x0, 446910 <ferror@plt+0x44090>
  446ac8:	ldr	x0, [sp, #192]
  446acc:	str	x22, [x19]
  446ad0:	stp	xzr, xzr, [x22, #88]
  446ad4:	add	x0, x0, #0x1
  446ad8:	str	x0, [sp, #192]
  446adc:	ldr	w0, [sp, #180]
  446ae0:	cbz	w0, 446cc8 <ferror@plt+0x44448>
  446ae4:	ldr	x0, [sp, #160]
  446ae8:	bl	4434a0 <ferror@plt+0x40c20>
  446aec:	stp	xzr, xzr, [x22, #88]
  446af0:	ldr	x1, [sp, #200]
  446af4:	cmp	x1, x0
  446af8:	b.ls	446ce4 <ferror@plt+0x44464>  // b.plast
  446afc:	ldr	x3, [sp, #264]
  446b00:	mov	x4, x1
  446b04:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1c6d8>
  446b08:	add	x1, x1, #0x8f8
  446b0c:	add	x2, x3, x0
  446b10:	sub	x0, x4, x0
  446b14:	add	x4, sp, #0x228
  446b18:	str	x24, [sp, #592]
  446b1c:	str	x23, [sp, #600]
  446b20:	add	x20, sp, #0x2a8
  446b24:	str	wzr, [sp, #608]
  446b28:	add	x27, sp, #0x268
  446b2c:	stp	x2, x0, [x4, #16]
  446b30:	add	x2, sp, #0x2c0
  446b34:	ldr	w0, [sp, #912]
  446b38:	str	w0, [sp, #584]
  446b3c:	add	x0, sp, #0x2c0
  446b40:	stp	x1, x3, [x4]
  446b44:	add	x19, sp, #0x228
  446b48:	ldp	x0, x1, [x0, #-152]
  446b4c:	stp	x0, x1, [x2, #-88]
  446b50:	ldp	x0, x1, [x2, #-136]
  446b54:	stp	x0, x1, [x2, #-72]
  446b58:	ldp	x0, x1, [x2, #-120]
  446b5c:	stp	x0, x1, [x2, #-56]
  446b60:	ldr	x21, [sp, #248]
  446b64:	str	xzr, [sp, #168]
  446b68:	ldp	x0, x1, [x2, #-104]
  446b6c:	stp	x0, x1, [x2, #-40]
  446b70:	str	x22, [sp, #184]
  446b74:	stp	x25, x19, [sp, #224]
  446b78:	str	x27, [sp, #272]
  446b7c:	nop
  446b80:	adrp	x6, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446b84:	add	x22, x6, #0x358
  446b88:	mov	w2, #0x0                   	// #0
  446b8c:	mov	w28, #0x0                   	// #0
  446b90:	mov	x19, #0x0                   	// #0
  446b94:	nop
  446b98:	ldr	x0, [sp, #640]
  446b9c:	ldr	x1, [sp, #632]
  446ba0:	cbnz	x0, 446bf0 <ferror@plt+0x44370>
  446ba4:	ldr	w0, [sp, #672]
  446ba8:	cbnz	w0, 446910 <ferror@plt+0x44090>
  446bac:	ldr	x4, [sp, #616]
  446bb0:	add	x19, sp, #0x2a8
  446bb4:	ldr	x5, [sp, #624]
  446bb8:	mov	x0, x19
  446bbc:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446bc0:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446bc4:	sub	w5, w1, w5
  446bc8:	add	x3, x3, #0x348
  446bcc:	add	x2, x2, #0x358
  446bd0:	mov	x1, #0xc8                  	// #200
  446bd4:	bl	402360 <snprintf@plt>
  446bd8:	ldr	x3, [sp, #656]
  446bdc:	mov	x1, x19
  446be0:	ldr	x0, [sp, #664]
  446be4:	mov	w2, #0x0                   	// #0
  446be8:	blr	x3
  446bec:	b	446910 <ferror@plt+0x44090>
  446bf0:	sub	x0, x0, #0x1
  446bf4:	add	x5, x1, #0x1
  446bf8:	str	x5, [sp, #632]
  446bfc:	cmp	w28, #0x3f
  446c00:	str	x0, [sp, #640]
  446c04:	ldrb	w25, [x1]
  446c08:	b.hi	446c88 <ferror@plt+0x44408>  // b.pmore
  446c0c:	and	x0, x25, #0x7f
  446c10:	lsl	x0, x0, x28
  446c14:	orr	x19, x19, x0
  446c18:	add	w28, w28, #0x7
  446c1c:	tbnz	w25, #7, 446b98 <ferror@plt+0x44318>
  446c20:	ldr	w0, [sp, #672]
  446c24:	cbz	x19, 446f5c <ferror@plt+0x446dc>
  446c28:	cbnz	w0, 446910 <ferror@plt+0x44090>
  446c2c:	mov	x0, x27
  446c30:	bl	443030 <ferror@plt+0x407b0>
  446c34:	ldr	x1, [sp, #168]
  446c38:	ldr	x0, [sp, #640]
  446c3c:	add	x1, x1, #0x1
  446c40:	str	x1, [sp, #168]
  446c44:	ldr	x6, [sp, #632]
  446c48:	cbnz	x0, 446eb4 <ferror@plt+0x44634>
  446c4c:	nop
  446c50:	ldr	w1, [sp, #672]
  446c54:	cbz	w1, 446de0 <ferror@plt+0x44560>
  446c58:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446c5c:	add	x22, x22, #0x358
  446c60:	mov	w1, #0x0                   	// #0
  446c64:	mov	w19, #0x0                   	// #0
  446c68:	mov	x25, #0x0                   	// #0
  446c6c:	nop
  446c70:	cbnz	x0, 446e78 <ferror@plt+0x445f8>
  446c74:	ldr	w0, [sp, #672]
  446c78:	cbz	w0, 446e30 <ferror@plt+0x445b0>
  446c7c:	mov	x0, x27
  446c80:	bl	443030 <ferror@plt+0x407b0>
  446c84:	b	446b80 <ferror@plt+0x44300>
  446c88:	cbnz	w2, 446c18 <ferror@plt+0x44398>
  446c8c:	ldr	x4, [sp, #616]
  446c90:	mov	x3, x21
  446c94:	ldr	x6, [sp, #624]
  446c98:	mov	x2, x22
  446c9c:	mov	x1, #0xc8                  	// #200
  446ca0:	mov	x0, x20
  446ca4:	sub	w5, w5, w6
  446ca8:	bl	402360 <snprintf@plt>
  446cac:	ldr	x4, [sp, #656]
  446cb0:	mov	w2, #0x0                   	// #0
  446cb4:	ldr	x0, [sp, #664]
  446cb8:	mov	x1, x20
  446cbc:	blr	x4
  446cc0:	mov	w2, #0x1                   	// #1
  446cc4:	b	446c18 <ferror@plt+0x44398>
  446cc8:	ldr	x0, [sp, #160]
  446ccc:	bl	4433c8 <ferror@plt+0x40b48>
  446cd0:	stp	xzr, xzr, [x22, #88]
  446cd4:	mov	w0, w0
  446cd8:	ldr	x1, [sp, #200]
  446cdc:	cmp	x1, x0
  446ce0:	b.hi	446afc <ferror@plt+0x4427c>  // b.pmore
  446ce4:	mov	x0, x23
  446ce8:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446cec:	mov	w2, #0x0                   	// #0
  446cf0:	add	x1, x1, #0x628
  446cf4:	blr	x24
  446cf8:	b	446910 <ferror@plt+0x44090>
  446cfc:	ldrb	w1, [x0, #1]
  446d00:	ldrb	w0, [x0]
  446d04:	bfi	w0, w1, #8, #24
  446d08:	str	w0, [sp, #176]
  446d0c:	b	446a7c <ferror@plt+0x441fc>
  446d10:	ldp	x4, x1, [sp, #424]
  446d14:	add	x19, sp, #0x2a8
  446d18:	ldr	x5, [sp, #440]
  446d1c:	mov	x0, x19
  446d20:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446d24:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446d28:	add	x3, x3, #0x348
  446d2c:	add	x2, x2, #0x358
  446d30:	sub	w5, w5, w1
  446d34:	mov	x1, #0xc8                  	// #200
  446d38:	bl	402360 <snprintf@plt>
  446d3c:	ldp	x3, x0, [sp, #464]
  446d40:	mov	x1, x19
  446d44:	mov	w2, #0x0                   	// #0
  446d48:	blr	x3
  446d4c:	mov	w0, #0x1                   	// #1
  446d50:	str	w0, [sp, #480]
  446d54:	b	446910 <ferror@plt+0x44090>
  446d58:	add	x19, sp, #0x2a8
  446d5c:	sub	w5, w0, w5
  446d60:	mov	x1, #0xc8                  	// #200
  446d64:	mov	x0, x19
  446d68:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446d6c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446d70:	add	x3, x3, #0x348
  446d74:	add	x2, x20, #0x358
  446d78:	bl	402360 <snprintf@plt>
  446d7c:	ldr	x3, [sp, #528]
  446d80:	mov	x1, x19
  446d84:	ldr	x0, [sp, #536]
  446d88:	mov	w2, #0x0                   	// #0
  446d8c:	blr	x3
  446d90:	mov	w0, #0x1                   	// #1
  446d94:	str	w0, [sp, #544]
  446d98:	ldp	x4, x5, [sp, #488]
  446d9c:	b	446a18 <ferror@plt+0x44198>
  446da0:	mov	x0, x25
  446da4:	bl	4434a0 <ferror@plt+0x40c20>
  446da8:	mov	w1, #0x1                   	// #1
  446dac:	str	x0, [sp, #152]
  446db0:	str	w1, [sp, #180]
  446db4:	b	4468d0 <ferror@plt+0x44050>
  446db8:	ldp	x5, x4, [sp, #368]
  446dbc:	mov	x3, x23
  446dc0:	mov	x2, x24
  446dc4:	mov	x0, x26
  446dc8:	add	x1, sp, #0x168
  446dcc:	add	x4, x4, x5
  446dd0:	stp	xzr, x4, [sp, #368]
  446dd4:	bl	43ebb8 <ferror@plt+0x3c338>
  446dd8:	ldp	x27, x28, [sp, #128]
  446ddc:	b	4469c8 <ferror@plt+0x44148>
  446de0:	ldr	x4, [sp, #616]
  446de4:	mov	x1, #0xc8                  	// #200
  446de8:	ldr	x5, [sp, #624]
  446dec:	mov	x0, x20
  446df0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446df4:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446df8:	sub	w5, w6, w5
  446dfc:	add	x3, x3, #0x348
  446e00:	add	x2, x2, #0x358
  446e04:	bl	402360 <snprintf@plt>
  446e08:	ldr	x3, [sp, #656]
  446e0c:	mov	x1, x20
  446e10:	ldr	x0, [sp, #664]
  446e14:	mov	w2, #0x0                   	// #0
  446e18:	blr	x3
  446e1c:	mov	w0, #0x1                   	// #1
  446e20:	str	w0, [sp, #672]
  446e24:	ldr	x6, [sp, #632]
  446e28:	ldr	x0, [sp, #640]
  446e2c:	b	446c58 <ferror@plt+0x443d8>
  446e30:	ldr	x4, [sp, #616]
  446e34:	mov	x1, #0xc8                  	// #200
  446e38:	ldr	x5, [sp, #624]
  446e3c:	mov	x0, x20
  446e40:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446e44:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446e48:	add	x3, x3, #0x348
  446e4c:	add	x2, x2, #0x358
  446e50:	sub	w5, w6, w5
  446e54:	bl	402360 <snprintf@plt>
  446e58:	ldr	x3, [sp, #656]
  446e5c:	mov	x1, x20
  446e60:	ldr	x0, [sp, #664]
  446e64:	mov	w2, #0x0                   	// #0
  446e68:	blr	x3
  446e6c:	mov	w0, #0x1                   	// #1
  446e70:	str	w0, [sp, #672]
  446e74:	b	446c7c <ferror@plt+0x443fc>
  446e78:	sub	x0, x0, #0x1
  446e7c:	add	x5, x6, #0x1
  446e80:	str	x5, [sp, #632]
  446e84:	cmp	w19, #0x3f
  446e88:	str	x0, [sp, #640]
  446e8c:	ldrb	w28, [x6]
  446e90:	b.hi	446ec8 <ferror@plt+0x44648>  // b.pmore
  446e94:	and	x0, x28, #0x7f
  446e98:	lsl	x0, x0, x19
  446e9c:	orr	x25, x25, x0
  446ea0:	add	w19, w19, #0x7
  446ea4:	tbz	w28, #7, 446f0c <ferror@plt+0x4468c>
  446ea8:	ldr	x6, [sp, #632]
  446eac:	ldr	x0, [sp, #640]
  446eb0:	b	446c70 <ferror@plt+0x443f0>
  446eb4:	add	x6, x6, #0x1
  446eb8:	sub	x0, x0, #0x1
  446ebc:	str	x6, [sp, #632]
  446ec0:	str	x0, [sp, #640]
  446ec4:	b	446c58 <ferror@plt+0x443d8>
  446ec8:	cbnz	w1, 446ea0 <ferror@plt+0x44620>
  446ecc:	ldr	x4, [sp, #616]
  446ed0:	mov	x3, x21
  446ed4:	ldr	x6, [sp, #624]
  446ed8:	mov	x2, x22
  446edc:	mov	x1, #0xc8                  	// #200
  446ee0:	mov	x0, x20
  446ee4:	sub	w5, w5, w6
  446ee8:	add	w19, w19, #0x7
  446eec:	bl	402360 <snprintf@plt>
  446ef0:	ldr	x4, [sp, #656]
  446ef4:	mov	x1, x20
  446ef8:	ldr	x0, [sp, #664]
  446efc:	mov	w2, #0x0                   	// #0
  446f00:	blr	x4
  446f04:	mov	w1, #0x1                   	// #1
  446f08:	tbnz	w28, #7, 446ea8 <ferror@plt+0x44628>
  446f0c:	cbz	x25, 446c7c <ferror@plt+0x443fc>
  446f10:	ldr	x6, [sp, #632]
  446f14:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  446f18:	ldr	x0, [sp, #640]
  446f1c:	add	x22, x22, #0x358
  446f20:	mov	w1, #0x0                   	// #0
  446f24:	mov	w19, #0x0                   	// #0
  446f28:	cbz	x0, 446c50 <ferror@plt+0x443d0>
  446f2c:	sub	x0, x0, #0x1
  446f30:	add	x5, x6, #0x1
  446f34:	str	x5, [sp, #632]
  446f38:	cmp	w19, #0x3f
  446f3c:	str	x0, [sp, #640]
  446f40:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
  446f44:	ldrb	w25, [x6]
  446f48:	b.eq	44768c <ferror@plt+0x44e0c>  // b.none
  446f4c:	mov	x6, x5
  446f50:	add	w19, w19, #0x7
  446f54:	tbnz	w25, #7, 446f28 <ferror@plt+0x446a8>
  446f58:	b	446c58 <ferror@plt+0x443d8>
  446f5c:	str	x19, [sp, #320]
  446f60:	ldr	x22, [sp, #184]
  446f64:	str	w0, [sp, #184]
  446f68:	ldr	x25, [sp, #224]
  446f6c:	ldr	x19, [sp, #232]
  446f70:	cbnz	w0, 446910 <ferror@plt+0x44090>
  446f74:	ldr	x21, [sp, #168]
  446f78:	cbz	x21, 447274 <ferror@plt+0x449f4>
  446f7c:	lsl	x20, x21, #5
  446f80:	mov	x3, x23
  446f84:	mov	x1, x20
  446f88:	mov	x2, x24
  446f8c:	mov	x0, x26
  446f90:	bl	43e8a8 <ferror@plt+0x3c028>
  446f94:	str	x0, [x22, #96]
  446f98:	str	x0, [sp, #168]
  446f9c:	cbz	x0, 446910 <ferror@plt+0x44090>
  446fa0:	str	x21, [x22, #88]
  446fa4:	mov	x2, x20
  446fa8:	mov	w1, #0x0                   	// #0
  446fac:	bl	402440 <memset@plt>
  446fb0:	ldr	w0, [sp, #608]
  446fb4:	ldr	x3, [sp, #168]
  446fb8:	cbnz	w0, 4470e8 <ferror@plt+0x44868>
  446fbc:	str	x22, [sp, #256]
  446fc0:	add	x21, sp, #0x2a8
  446fc4:	ldr	x28, [sp, #248]
  446fc8:	mov	x27, #0x0                   	// #0
  446fcc:	ldr	x22, [sp, #272]
  446fd0:	str	x26, [sp, #280]
  446fd4:	str	x25, [sp, #328]
  446fd8:	str	x24, [sp, #928]
  446fdc:	str	x23, [sp, #936]
  446fe0:	mov	x0, x19
  446fe4:	bl	443030 <ferror@plt+0x407b0>
  446fe8:	mov	x25, x0
  446fec:	cbz	x0, 44724c <ferror@plt+0x449cc>
  446ff0:	mov	x0, x19
  446ff4:	bl	443030 <ferror@plt+0x407b0>
  446ff8:	ldr	x1, [sp, #576]
  446ffc:	mov	x26, x0
  447000:	ldr	x0, [sp, #568]
  447004:	cbnz	x1, 447234 <ferror@plt+0x449b4>
  447008:	ldr	w24, [sp, #608]
  44700c:	cbz	w24, 447444 <ferror@plt+0x44bc4>
  447010:	mov	w24, #0x0                   	// #0
  447014:	ldp	x0, x1, [x19, #16]
  447018:	stp	x0, x1, [x22, #16]
  44701c:	mov	x20, #0x0                   	// #0
  447020:	ldp	x2, x3, [x19]
  447024:	stp	x2, x3, [x22]
  447028:	ldp	x2, x3, [x19, #32]
  44702c:	stp	x2, x3, [x22, #32]
  447030:	ldp	x2, x3, [x19, #48]
  447034:	stp	x2, x3, [x22, #48]
  447038:	ldr	x1, [sp, #640]
  44703c:	str	x19, [sp, #168]
  447040:	mov	x19, x20
  447044:	str	x22, [sp, #224]
  447048:	mov	x22, x28
  44704c:	nop
  447050:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  447054:	add	x20, x20, #0x358
  447058:	mov	x7, x27
  44705c:	mov	x27, x19
  447060:	mov	x19, x20
  447064:	mov	w2, #0x0                   	// #0
  447068:	mov	x28, #0x0                   	// #0
  44706c:	mov	w23, #0x0                   	// #0
  447070:	cbnz	x1, 4471f8 <ferror@plt+0x44978>
  447074:	ldr	w1, [sp, #672]
  447078:	mov	x20, x27
  44707c:	mov	x28, x22
  447080:	mov	x27, x7
  447084:	ldr	x19, [sp, #168]
  447088:	ldr	x22, [sp, #224]
  44708c:	cbz	w1, 447148 <ferror@plt+0x448c8>
  447090:	cbnz	x20, 447190 <ferror@plt+0x44910>
  447094:	nop
  447098:	mov	x23, #0x0                   	// #0
  44709c:	mov	x0, x19
  4470a0:	bl	443030 <ferror@plt+0x407b0>
  4470a4:	mov	x0, x19
  4470a8:	bl	443030 <ferror@plt+0x407b0>
  4470ac:	ldr	x0, [sp, #256]
  4470b0:	ldr	w2, [sp, #608]
  4470b4:	ldr	x3, [x0, #96]
  4470b8:	add	x0, x3, x27
  4470bc:	str	x25, [x3, x27]
  4470c0:	add	x27, x27, #0x20
  4470c4:	stp	w26, w24, [x0, #8]
  4470c8:	stp	x20, x23, [x0, #16]
  4470cc:	cbz	w2, 446fe0 <ferror@plt+0x44760>
  4470d0:	ldr	x22, [sp, #256]
  4470d4:	ldr	x26, [sp, #280]
  4470d8:	ldr	x2, [x22, #88]
  4470dc:	ldr	x24, [sp, #928]
  4470e0:	ldr	x23, [sp, #936]
  4470e4:	cbz	x2, 44712c <ferror@plt+0x448ac>
  4470e8:	mov	x1, x3
  4470ec:	ldr	x19, [sp, #320]
  4470f0:	b	4470f8 <ferror@plt+0x44878>
  4470f4:	ldr	x1, [x22, #96]
  4470f8:	add	x1, x1, x19, lsl #5
  4470fc:	mov	x4, x23
  447100:	mov	x3, x24
  447104:	mov	x0, x26
  447108:	add	x19, x19, #0x1
  44710c:	ldp	x2, x1, [x1, #16]
  447110:	lsl	x2, x2, #3
  447114:	bl	43e770 <ferror@plt+0x3bef0>
  447118:	ldr	x2, [x22, #88]
  44711c:	cmp	x19, x2
  447120:	b.cc	4470f4 <ferror@plt+0x44874>  // b.lo, b.ul, b.last
  447124:	ldr	x3, [x22, #96]
  447128:	lsl	x2, x2, #5
  44712c:	mov	x1, x3
  447130:	mov	x4, x23
  447134:	mov	x3, x24
  447138:	mov	x0, x26
  44713c:	bl	43e770 <ferror@plt+0x3bef0>
  447140:	stp	xzr, xzr, [x22, #88]
  447144:	b	446910 <ferror@plt+0x44090>
  447148:	ldr	x4, [sp, #616]
  44714c:	mov	x1, #0xc8                  	// #200
  447150:	ldr	x5, [sp, #624]
  447154:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  447158:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44715c:	add	x3, x3, #0x348
  447160:	sub	w5, w0, w5
  447164:	add	x2, x2, #0x358
  447168:	mov	x0, x21
  44716c:	bl	402360 <snprintf@plt>
  447170:	ldr	x3, [sp, #656]
  447174:	mov	x1, x21
  447178:	ldr	x0, [sp, #664]
  44717c:	mov	w2, #0x0                   	// #0
  447180:	blr	x3
  447184:	mov	w0, #0x1                   	// #1
  447188:	str	w0, [sp, #672]
  44718c:	cbz	x20, 447098 <ferror@plt+0x44818>
  447190:	ldr	x0, [sp, #280]
  447194:	lsl	x1, x20, #3
  447198:	ldr	x2, [sp, #928]
  44719c:	ldr	x3, [sp, #936]
  4471a0:	bl	43e8a8 <ferror@plt+0x3c028>
  4471a4:	cbz	x0, 447674 <ferror@plt+0x44df4>
  4471a8:	mov	x23, x19
  4471ac:	mov	x20, #0x0                   	// #0
  4471b0:	str	x21, [sp, #168]
  4471b4:	mov	x21, x0
  4471b8:	b	4471d0 <ferror@plt+0x44950>
  4471bc:	fmov	d0, x19
  4471c0:	mov	v0.d[1], x0
  4471c4:	xtn	v0.2s, v0.2d
  4471c8:	str	d0, [x21, x20, lsl #3]
  4471cc:	add	x20, x20, #0x1
  4471d0:	mov	x0, x23
  4471d4:	bl	443030 <ferror@plt+0x407b0>
  4471d8:	mov	x19, x0
  4471dc:	mov	x0, x23
  4471e0:	bl	443030 <ferror@plt+0x407b0>
  4471e4:	cbnz	x19, 4471bc <ferror@plt+0x4493c>
  4471e8:	mov	x19, x23
  4471ec:	mov	x23, x21
  4471f0:	ldr	x21, [sp, #168]
  4471f4:	b	4470ac <ferror@plt+0x4482c>
  4471f8:	sub	x1, x1, #0x1
  4471fc:	add	x5, x0, #0x1
  447200:	str	x5, [sp, #632]
  447204:	cmp	w23, #0x3f
  447208:	str	x1, [sp, #640]
  44720c:	ldrb	w20, [x0]
  447210:	b.hi	447350 <ferror@plt+0x44ad0>  // b.pmore
  447214:	and	x0, x20, #0x7f
  447218:	lsl	x0, x0, x23
  44721c:	orr	x28, x28, x0
  447220:	add	w23, w23, #0x7
  447224:	tbz	w20, #7, 44739c <ferror@plt+0x44b1c>
  447228:	ldr	x0, [sp, #632]
  44722c:	ldr	x1, [sp, #640]
  447230:	b	447070 <ferror@plt+0x447f0>
  447234:	sub	x1, x1, #0x1
  447238:	str	x1, [sp, #576]
  44723c:	add	x1, x0, #0x1
  447240:	str	x1, [sp, #568]
  447244:	ldrb	w24, [x0]
  447248:	b	447014 <ferror@plt+0x44794>
  44724c:	ldr	x22, [sp, #256]
  447250:	adrp	x3, 442000 <ferror@plt+0x3f780>
  447254:	mov	x2, #0x20                  	// #32
  447258:	add	x3, x3, #0xdc0
  44725c:	ldr	x26, [sp, #280]
  447260:	ldp	x1, x0, [x22, #88]
  447264:	ldr	x25, [sp, #328]
  447268:	ldr	x24, [sp, #928]
  44726c:	ldr	x23, [sp, #936]
  447270:	bl	447768 <ferror@plt+0x44ee8>
  447274:	ldp	x5, x1, [sp, #504]
  447278:	cbnz	x1, 447424 <ferror@plt+0x44ba4>
  44727c:	ldr	w0, [sp, #544]
  447280:	add	x19, sp, #0x2a8
  447284:	cbz	w0, 44748c <ferror@plt+0x44c0c>
  447288:	ldr	w8, [sp, #180]
  44728c:	mov	x3, #0x4                   	// #4
  447290:	ldr	x0, [sp, #920]
  447294:	cmp	w8, #0x0
  447298:	stp	x0, x24, [sp]
  44729c:	mov	x0, #0xc                   	// #12
  4472a0:	csel	x0, x0, x3, ne  // ne = any
  4472a4:	stp	x23, x22, [sp, #16]
  4472a8:	ldr	w7, [sp, #912]
  4472ac:	str	x19, [sp, #40]
  4472b0:	add	x19, sp, #0x168
  4472b4:	str	x19, [sp, #32]
  4472b8:	ldr	x3, [sp, #152]
  4472bc:	stp	x5, x1, [x22]
  4472c0:	ldr	x1, [sp, #208]
  4472c4:	add	x0, x0, x3
  4472c8:	ldr	x2, [sp, #216]
  4472cc:	add	x0, x1, x0
  4472d0:	stp	x1, x0, [x22, #24]
  4472d4:	sub	x2, x5, x2
  4472d8:	str	x0, [sp, #208]
  4472dc:	ldr	w0, [sp, #176]
  4472e0:	str	x2, [x22, #16]
  4472e4:	str	w0, [x22, #40]
  4472e8:	ldr	w0, [sp, #184]
  4472ec:	ldr	x2, [sp, #160]
  4472f0:	str	w8, [x22, #44]
  4472f4:	ldr	x1, [sp, #240]
  4472f8:	str	w0, [x22, #48]
  4472fc:	ldr	x5, [sp, #880]
  447300:	str	xzr, [x22, #56]
  447304:	ldr	x6, [sp, #888]
  447308:	stp	xzr, xzr, [x22, #64]
  44730c:	mov	x0, x26
  447310:	ldr	x3, [sp, #896]
  447314:	str	xzr, [x22, #80]
  447318:	ldr	x4, [sp, #904]
  44731c:	stp	xzr, xzr, [x22, #104]
  447320:	stp	xzr, xzr, [x22, #120]
  447324:	bl	4441f0 <ferror@plt+0x41970>
  447328:	cbz	w0, 446910 <ferror@plt+0x44090>
  44732c:	ldr	w0, [sp, #544]
  447330:	cbnz	w0, 446910 <ferror@plt+0x44090>
  447334:	ldr	x1, [sp, #448]
  447338:	ldr	w0, [sp, #480]
  44733c:	cbz	x1, 4474d8 <ferror@plt+0x44c58>
  447340:	cbnz	w0, 446910 <ferror@plt+0x44090>
  447344:	ldr	x0, [sp, #440]
  447348:	str	x0, [sp, #216]
  44734c:	b	4468b0 <ferror@plt+0x44030>
  447350:	cbnz	w2, 447220 <ferror@plt+0x449a0>
  447354:	ldr	x4, [sp, #616]
  447358:	mov	x3, x22
  44735c:	ldr	x6, [sp, #624]
  447360:	mov	x2, x19
  447364:	mov	x1, #0xc8                  	// #200
  447368:	mov	x0, x21
  44736c:	sub	w5, w5, w6
  447370:	str	x7, [sp, #232]
  447374:	bl	402360 <snprintf@plt>
  447378:	add	w23, w23, #0x7
  44737c:	ldr	x4, [sp, #656]
  447380:	mov	w2, #0x0                   	// #0
  447384:	ldr	x0, [sp, #664]
  447388:	mov	x1, x21
  44738c:	blr	x4
  447390:	mov	w2, #0x1                   	// #1
  447394:	ldr	x7, [sp, #232]
  447398:	tbnz	w20, #7, 447228 <ferror@plt+0x449a8>
  44739c:	mov	x19, x27
  4473a0:	mov	x27, x7
  4473a4:	cbz	x28, 447744 <ferror@plt+0x44ec4>
  4473a8:	ldr	x0, [sp, #632]
  4473ac:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4473b0:	ldr	x1, [sp, #640]
  4473b4:	add	x19, x19, #0x1
  4473b8:	add	x20, x2, #0x358
  4473bc:	mov	w23, #0x0                   	// #0
  4473c0:	mov	w2, #0x0                   	// #0
  4473c4:	nop
  4473c8:	cbnz	x1, 4476d0 <ferror@plt+0x44e50>
  4473cc:	ldr	w2, [sp, #672]
  4473d0:	cbnz	w2, 447050 <ferror@plt+0x447d0>
  4473d4:	ldr	x4, [sp, #616]
  4473d8:	mov	x1, #0xc8                  	// #200
  4473dc:	ldr	x5, [sp, #624]
  4473e0:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4473e4:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4473e8:	add	x3, x3, #0x348
  4473ec:	sub	w5, w0, w5
  4473f0:	add	x2, x2, #0x358
  4473f4:	mov	x0, x21
  4473f8:	bl	402360 <snprintf@plt>
  4473fc:	ldr	x3, [sp, #656]
  447400:	mov	x1, x21
  447404:	ldr	x0, [sp, #664]
  447408:	mov	w2, #0x0                   	// #0
  44740c:	blr	x3
  447410:	mov	w0, #0x1                   	// #1
  447414:	str	w0, [sp, #672]
  447418:	ldr	x0, [sp, #632]
  44741c:	ldr	x1, [sp, #640]
  447420:	b	447050 <ferror@plt+0x447d0>
  447424:	add	x0, x5, #0x1
  447428:	sub	x1, x1, #0x1
  44742c:	stp	x0, x1, [sp, #504]
  447430:	add	x19, sp, #0x2a8
  447434:	ldrb	w2, [x5]
  447438:	mov	x5, x0
  44743c:	str	w2, [sp, #184]
  447440:	b	447288 <ferror@plt+0x44a08>
  447444:	ldr	x4, [sp, #552]
  447448:	mov	x1, #0xc8                  	// #200
  44744c:	ldr	x5, [sp, #560]
  447450:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  447454:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  447458:	add	x3, x3, #0x348
  44745c:	sub	w5, w0, w5
  447460:	add	x2, x2, #0x358
  447464:	mov	x0, x21
  447468:	bl	402360 <snprintf@plt>
  44746c:	ldr	x3, [sp, #592]
  447470:	mov	x1, x21
  447474:	ldr	x0, [sp, #600]
  447478:	mov	w2, #0x0                   	// #0
  44747c:	blr	x3
  447480:	mov	w0, #0x1                   	// #1
  447484:	str	w0, [sp, #608]
  447488:	b	447014 <ferror@plt+0x44794>
  44748c:	ldp	x4, x0, [sp, #488]
  447490:	mov	x1, #0xc8                  	// #200
  447494:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  447498:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44749c:	add	x3, x3, #0x348
  4474a0:	add	x2, x2, #0x358
  4474a4:	sub	w5, w5, w0
  4474a8:	mov	x0, x19
  4474ac:	bl	402360 <snprintf@plt>
  4474b0:	str	wzr, [sp, #184]
  4474b4:	ldr	x3, [sp, #528]
  4474b8:	mov	x1, x19
  4474bc:	ldr	x0, [sp, #536]
  4474c0:	mov	w2, #0x0                   	// #0
  4474c4:	blr	x3
  4474c8:	mov	w0, #0x1                   	// #1
  4474cc:	str	w0, [sp, #544]
  4474d0:	ldp	x5, x1, [sp, #504]
  4474d4:	b	447288 <ferror@plt+0x44a08>
  4474d8:	cbnz	w0, 446910 <ferror@plt+0x44090>
  4474dc:	ldp	x27, x28, [sp, #128]
  4474e0:	add	x4, sp, #0x200
  4474e4:	ldp	x2, x3, [sp, #336]
  4474e8:	mov	x1, x19
  4474ec:	stp	x2, x3, [x4, #-120]
  4474f0:	add	x19, sp, #0x188
  4474f4:	mov	x3, x23
  4474f8:	ldr	x4, [sp, #192]
  4474fc:	mov	x2, x24
  447500:	ldr	x0, [sp, #352]
  447504:	stp	x0, x4, [sp, #408]
  447508:	mov	x0, x26
  44750c:	bl	43ebb8 <ferror@plt+0x3c338>
  447510:	cbz	w0, 4469c8 <ferror@plt+0x44148>
  447514:	mov	x1, x19
  447518:	mov	x3, x23
  44751c:	mov	x2, x24
  447520:	mov	x0, x26
  447524:	bl	43ebb8 <ferror@plt+0x3c338>
  447528:	cbz	w0, 4469c8 <ferror@plt+0x44148>
  44752c:	ldp	x19, x22, [sp, #384]
  447530:	mov	x2, #0x18                  	// #24
  447534:	ldr	x20, [sp, #360]
  447538:	adrp	x3, 442000 <ferror@plt+0x3f780>
  44753c:	add	x3, x3, #0xde0
  447540:	mov	x0, x20
  447544:	mov	x1, x19
  447548:	ldr	x21, [sp, #416]
  44754c:	bl	447768 <ferror@plt+0x44ee8>
  447550:	mov	x3, x23
  447554:	mov	x2, x24
  447558:	mov	x0, x26
  44755c:	mov	x1, #0xa0                  	// #160
  447560:	bl	43e8a8 <ferror@plt+0x3c028>
  447564:	cbz	x0, 4469c8 <ferror@plt+0x44148>
  447568:	ldr	x1, [sp, #920]
  44756c:	stp	xzr, x1, [x0]
  447570:	ldr	x1, [sp, #240]
  447574:	str	x1, [x0, #16]
  447578:	ldr	x1, [sp, #288]
  44757c:	str	x1, [x0, #56]
  447580:	ldr	x1, [sp, #296]
  447584:	str	x1, [x0, #64]
  447588:	ldr	x1, [sp, #304]
  44758c:	str	x1, [x0, #72]
  447590:	ldr	x1, [sp, #312]
  447594:	str	x1, [x0, #80]
  447598:	ldr	x1, [sp, #880]
  44759c:	str	x1, [x0, #88]
  4475a0:	ldr	x1, [sp, #888]
  4475a4:	str	x1, [x0, #96]
  4475a8:	ldr	x1, [sp, #896]
  4475ac:	str	x1, [x0, #104]
  4475b0:	ldr	x1, [sp, #904]
  4475b4:	str	x1, [x0, #112]
  4475b8:	ldr	w1, [sp, #912]
  4475bc:	str	w1, [x0, #120]
  4475c0:	ldr	x1, [sp, #952]
  4475c4:	stp	x20, x19, [x0, #24]
  4475c8:	stp	x22, x21, [x0, #40]
  4475cc:	stp	xzr, xzr, [x0, #128]
  4475d0:	stp	xzr, xzr, [x0, #144]
  4475d4:	cbz	x1, 4475dc <ferror@plt+0x44d5c>
  4475d8:	str	x0, [x1]
  4475dc:	ldr	w1, [x26, #8]
  4475e0:	add	x3, x26, #0x20
  4475e4:	cbnz	w1, 447650 <ferror@plt+0x44dd0>
  4475e8:	ldr	x1, [x26, #32]
  4475ec:	cbz	x1, 447600 <ferror@plt+0x44d80>
  4475f0:	mov	x2, x1
  4475f4:	ldr	x1, [x1]
  4475f8:	cbnz	x1, 4475f0 <ferror@plt+0x44d70>
  4475fc:	mov	x3, x2
  447600:	str	x0, [x3]
  447604:	ldr	x2, [sp, #944]
  447608:	adrp	x1, 446000 <ferror@plt+0x43780>
  44760c:	add	x1, x1, #0x6e8
  447610:	mov	w0, #0x1                   	// #1
  447614:	ldp	x29, x30, [sp, #48]
  447618:	str	x1, [x2]
  44761c:	ldp	x19, x20, [sp, #64]
  447620:	ldp	x21, x22, [sp, #80]
  447624:	ldp	x23, x24, [sp, #96]
  447628:	ldp	x25, x26, [sp, #112]
  44762c:	add	sp, sp, #0x370
  447630:	ret
  447634:	ldxr	x1, [x2]
  447638:	cbnz	x1, 447644 <ferror@plt+0x44dc4>
  44763c:	stlxr	w4, x0, [x2]
  447640:	cbnz	w4, 447634 <ferror@plt+0x44db4>
  447644:	dmb	ish
  447648:	cmp	x1, #0x0
  44764c:	b.eq	447604 <ferror@plt+0x44d84>  // b.none
  447650:	mov	x2, x3
  447654:	b	44765c <ferror@plt+0x44ddc>
  447658:	mov	x2, x1
  44765c:	ldar	x1, [x2]
  447660:	cbnz	x1, 447658 <ferror@plt+0x44dd8>
  447664:	b	447634 <ferror@plt+0x44db4>
  447668:	add	x19, sp, #0x168
  44766c:	str	xzr, [sp, #192]
  447670:	b	4474e0 <ferror@plt+0x44c60>
  447674:	ldr	x22, [sp, #256]
  447678:	ldr	x26, [sp, #280]
  44767c:	ldp	x2, x3, [x22, #88]
  447680:	ldr	x24, [sp, #928]
  447684:	ldr	x23, [sp, #936]
  447688:	b	4470e4 <ferror@plt+0x44864>
  44768c:	ldr	x4, [sp, #616]
  447690:	mov	x3, x21
  447694:	ldr	x6, [sp, #624]
  447698:	mov	x2, x22
  44769c:	mov	x1, #0xc8                  	// #200
  4476a0:	mov	x0, x20
  4476a4:	sub	w5, w5, w6
  4476a8:	bl	402360 <snprintf@plt>
  4476ac:	ldr	x4, [sp, #656]
  4476b0:	mov	x1, x20
  4476b4:	ldr	x0, [sp, #664]
  4476b8:	mov	w2, #0x0                   	// #0
  4476bc:	blr	x4
  4476c0:	mov	w1, #0x1                   	// #1
  4476c4:	ldr	x6, [sp, #632]
  4476c8:	ldr	x0, [sp, #640]
  4476cc:	b	446f50 <ferror@plt+0x446d0>
  4476d0:	sub	x1, x1, #0x1
  4476d4:	add	x5, x0, #0x1
  4476d8:	str	x5, [sp, #632]
  4476dc:	cmp	w23, #0x3f
  4476e0:	str	x1, [sp, #640]
  4476e4:	ccmp	w2, #0x0, #0x0, hi  // hi = pmore
  4476e8:	ldrb	w28, [x0]
  4476ec:	b.eq	447700 <ferror@plt+0x44e80>  // b.none
  4476f0:	mov	x0, x5
  4476f4:	add	w23, w23, #0x7
  4476f8:	tbnz	w28, #7, 4473c8 <ferror@plt+0x44b48>
  4476fc:	b	447050 <ferror@plt+0x447d0>
  447700:	ldr	x4, [sp, #616]
  447704:	mov	x3, x22
  447708:	ldr	x6, [sp, #624]
  44770c:	mov	x2, x20
  447710:	mov	x1, #0xc8                  	// #200
  447714:	mov	x0, x21
  447718:	sub	w5, w5, w6
  44771c:	bl	402360 <snprintf@plt>
  447720:	ldr	x4, [sp, #656]
  447724:	mov	x1, x21
  447728:	ldr	x0, [sp, #664]
  44772c:	mov	w2, #0x0                   	// #0
  447730:	blr	x4
  447734:	mov	w2, #0x1                   	// #1
  447738:	ldr	x0, [sp, #632]
  44773c:	ldr	x1, [sp, #640]
  447740:	b	4476f4 <ferror@plt+0x44e74>
  447744:	mov	x20, x19
  447748:	mov	x28, x22
  44774c:	ldr	x19, [sp, #168]
  447750:	ldr	x22, [sp, #224]
  447754:	b	447090 <ferror@plt+0x44810>
  447758:	add	x19, sp, #0x2a8
  44775c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  447760:	ldp	x4, x5, [sp, #488]
  447764:	b	446a18 <ferror@plt+0x44198>
  447768:	cmp	x1, #0x1
  44776c:	b.ls	447f9c <ferror@plt+0x4571c>  // b.plast
  447770:	stp	x29, x30, [sp, #-224]!
  447774:	mov	x29, sp
  447778:	stp	x27, x28, [sp, #80]
  44777c:	and	x27, x2, #0xfffffffffffffff0
  447780:	stp	x25, x26, [sp, #64]
  447784:	mov	x26, x0
  447788:	add	x0, x27, #0x1
  44778c:	str	x0, [sp, #112]
  447790:	add	x0, x27, #0x2
  447794:	str	x0, [sp, #120]
  447798:	add	x0, x27, #0x3
  44779c:	str	x0, [sp, #128]
  4477a0:	add	x0, x27, #0x4
  4477a4:	str	x0, [sp, #136]
  4477a8:	add	x0, x27, #0x5
  4477ac:	str	x0, [sp, #144]
  4477b0:	add	x0, x27, #0x6
  4477b4:	str	x0, [sp, #152]
  4477b8:	add	x0, x27, #0x7
  4477bc:	str	x0, [sp, #160]
  4477c0:	add	x0, x27, #0x8
  4477c4:	str	x0, [sp, #168]
  4477c8:	add	x0, x27, #0x9
  4477cc:	str	x0, [sp, #176]
  4477d0:	add	x0, x27, #0xa
  4477d4:	str	x0, [sp, #184]
  4477d8:	add	x0, x27, #0xb
  4477dc:	str	x0, [sp, #192]
  4477e0:	add	x0, x27, #0xc
  4477e4:	str	x0, [sp, #200]
  4477e8:	add	x0, x27, #0xd
  4477ec:	mov	x28, x26
  4477f0:	mov	x26, x2
  4477f4:	stp	x19, x20, [sp, #16]
  4477f8:	mov	x19, x1
  4477fc:	mov	x20, x27
  447800:	stp	x21, x22, [sp, #32]
  447804:	mov	x21, x3
  447808:	str	x0, [sp, #208]
  44780c:	add	x0, x27, #0xe
  447810:	stp	x23, x24, [sp, #48]
  447814:	str	x0, [sp, #216]
  447818:	sub	x0, x2, #0x1
  44781c:	str	x0, [sp, #104]
  447820:	lsr	x0, x19, #1
  447824:	mul	x0, x0, x26
  447828:	add	x1, x28, x0
  44782c:	cbz	x26, 447a18 <ferror@plt+0x45198>
  447830:	add	x0, x0, #0x10
  447834:	add	x3, x28, #0x10
  447838:	cmp	x0, #0x0
  44783c:	ldr	x0, [sp, #104]
  447840:	ccmp	x1, x3, #0x2, gt
  447844:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
  447848:	mov	x0, #0x0                   	// #0
  44784c:	b.ls	447ca4 <ferror@plt+0x45424>  // b.plast
  447850:	ldr	q1, [x1, x0]
  447854:	ldr	q0, [x28, x0]
  447858:	str	q1, [x28, x0]
  44785c:	str	q0, [x1, x0]
  447860:	add	x0, x0, #0x10
  447864:	cmp	x0, x20
  447868:	b.ne	447850 <ferror@plt+0x44fd0>  // b.any
  44786c:	cmp	x26, x27
  447870:	add	x3, x28, x27
  447874:	add	x0, x1, x27
  447878:	b.eq	447a18 <ferror@plt+0x45198>  // b.none
  44787c:	ldrb	w6, [x1, x27]
  447880:	ldrb	w5, [x28, x27]
  447884:	strb	w6, [x28, x27]
  447888:	ldr	x2, [sp, #112]
  44788c:	strb	w5, [x1, x27]
  447890:	cmp	x26, x2
  447894:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  447898:	ldr	x1, [sp, #120]
  44789c:	ldrb	w5, [x0, #1]
  4478a0:	cmp	x26, x1
  4478a4:	ldrb	w1, [x3, #1]
  4478a8:	strb	w5, [x3, #1]
  4478ac:	strb	w1, [x0, #1]
  4478b0:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  4478b4:	ldr	x1, [sp, #128]
  4478b8:	ldrb	w5, [x0, #2]
  4478bc:	cmp	x26, x1
  4478c0:	ldrb	w1, [x3, #2]
  4478c4:	strb	w5, [x3, #2]
  4478c8:	strb	w1, [x0, #2]
  4478cc:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  4478d0:	ldr	x1, [sp, #136]
  4478d4:	ldrb	w5, [x0, #3]
  4478d8:	cmp	x26, x1
  4478dc:	ldrb	w1, [x3, #3]
  4478e0:	strb	w5, [x3, #3]
  4478e4:	strb	w1, [x0, #3]
  4478e8:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  4478ec:	ldr	x1, [sp, #144]
  4478f0:	ldrb	w5, [x0, #4]
  4478f4:	cmp	x26, x1
  4478f8:	ldrb	w1, [x3, #4]
  4478fc:	strb	w5, [x3, #4]
  447900:	strb	w1, [x0, #4]
  447904:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  447908:	ldr	x1, [sp, #152]
  44790c:	ldrb	w5, [x0, #5]
  447910:	cmp	x26, x1
  447914:	ldrb	w1, [x3, #5]
  447918:	strb	w5, [x3, #5]
  44791c:	strb	w1, [x0, #5]
  447920:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  447924:	ldr	x1, [sp, #160]
  447928:	ldrb	w5, [x0, #6]
  44792c:	cmp	x26, x1
  447930:	ldrb	w1, [x3, #6]
  447934:	strb	w5, [x3, #6]
  447938:	strb	w1, [x0, #6]
  44793c:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  447940:	ldr	x1, [sp, #168]
  447944:	ldrb	w5, [x0, #7]
  447948:	cmp	x26, x1
  44794c:	ldrb	w1, [x3, #7]
  447950:	strb	w5, [x3, #7]
  447954:	strb	w1, [x0, #7]
  447958:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  44795c:	ldr	x1, [sp, #176]
  447960:	ldrb	w5, [x0, #8]
  447964:	cmp	x26, x1
  447968:	ldrb	w1, [x3, #8]
  44796c:	strb	w5, [x3, #8]
  447970:	strb	w1, [x0, #8]
  447974:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  447978:	ldr	x1, [sp, #184]
  44797c:	ldrb	w5, [x0, #9]
  447980:	cmp	x26, x1
  447984:	ldrb	w1, [x3, #9]
  447988:	strb	w5, [x3, #9]
  44798c:	strb	w1, [x0, #9]
  447990:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  447994:	ldr	x1, [sp, #192]
  447998:	ldrb	w5, [x0, #10]
  44799c:	cmp	x26, x1
  4479a0:	ldrb	w1, [x3, #10]
  4479a4:	strb	w5, [x3, #10]
  4479a8:	strb	w1, [x0, #10]
  4479ac:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  4479b0:	ldr	x1, [sp, #200]
  4479b4:	ldrb	w5, [x0, #11]
  4479b8:	cmp	x26, x1
  4479bc:	ldrb	w1, [x3, #11]
  4479c0:	strb	w5, [x3, #11]
  4479c4:	strb	w1, [x0, #11]
  4479c8:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  4479cc:	ldr	x1, [sp, #208]
  4479d0:	ldrb	w5, [x0, #12]
  4479d4:	cmp	x26, x1
  4479d8:	ldrb	w1, [x3, #12]
  4479dc:	strb	w5, [x3, #12]
  4479e0:	strb	w1, [x0, #12]
  4479e4:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  4479e8:	ldr	x1, [sp, #216]
  4479ec:	ldrb	w5, [x0, #13]
  4479f0:	cmp	x26, x1
  4479f4:	ldrb	w1, [x3, #13]
  4479f8:	strb	w5, [x3, #13]
  4479fc:	strb	w1, [x0, #13]
  447a00:	b.ls	447a18 <ferror@plt+0x45198>  // b.plast
  447a04:	ldrb	w5, [x0, #14]
  447a08:	ldrb	w1, [x3, #14]
  447a0c:	strb	w5, [x3, #14]
  447a10:	strb	w1, [x0, #14]
  447a14:	nop
  447a18:	mov	x23, x26
  447a1c:	mov	x24, #0x0                   	// #0
  447a20:	mov	x25, #0x1                   	// #1
  447a24:	b	447a38 <ferror@plt+0x451b8>
  447a28:	add	x25, x25, #0x1
  447a2c:	add	x23, x23, x26
  447a30:	cmp	x25, x19
  447a34:	b.cs	447c74 <ferror@plt+0x453f4>  // b.hs, b.nlast
  447a38:	add	x22, x28, x23
  447a3c:	mov	x0, x28
  447a40:	mov	x1, x22
  447a44:	blr	x21
  447a48:	add	x7, x24, #0x1
  447a4c:	cmp	w0, #0x0
  447a50:	mov	x3, x7
  447a54:	b.le	447a28 <ferror@plt+0x451a8>
  447a58:	add	x7, x24, #0x2
  447a5c:	cmp	x3, x25
  447a60:	mov	x24, x25
  447a64:	b.eq	447a28 <ferror@plt+0x451a8>  // b.none
  447a68:	mul	x0, x26, x3
  447a6c:	add	x1, x28, x0
  447a70:	cbz	x26, 447c60 <ferror@plt+0x453e0>
  447a74:	add	x2, x23, #0x10
  447a78:	add	x4, x0, #0x10
  447a7c:	cmp	x0, x2
  447a80:	ldr	x0, [sp, #104]
  447a84:	ccmp	x4, x23, #0x4, lt  // lt = tstop
  447a88:	ccmp	x0, #0xe, #0x0, le
  447a8c:	mov	x0, #0x0                   	// #0
  447a90:	b.ls	447ce0 <ferror@plt+0x45460>  // b.plast
  447a94:	nop
  447a98:	ldr	q1, [x22, x0]
  447a9c:	ldr	q0, [x1, x0]
  447aa0:	str	q1, [x1, x0]
  447aa4:	str	q0, [x22, x0]
  447aa8:	add	x0, x0, #0x10
  447aac:	cmp	x0, x20
  447ab0:	b.ne	447a98 <ferror@plt+0x45218>  // b.any
  447ab4:	cmp	x26, x27
  447ab8:	add	x2, x1, x27
  447abc:	add	x0, x22, x27
  447ac0:	b.eq	447c60 <ferror@plt+0x453e0>  // b.none
  447ac4:	ldr	x4, [sp, #112]
  447ac8:	ldrb	w5, [x22, x27]
  447acc:	cmp	x26, x4
  447ad0:	ldrb	w4, [x1, x27]
  447ad4:	strb	w5, [x1, x27]
  447ad8:	strb	w4, [x22, x27]
  447adc:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447ae0:	ldr	x1, [sp, #120]
  447ae4:	ldrb	w4, [x0, #1]
  447ae8:	cmp	x26, x1
  447aec:	ldrb	w1, [x2, #1]
  447af0:	strb	w4, [x2, #1]
  447af4:	strb	w1, [x0, #1]
  447af8:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447afc:	ldr	x1, [sp, #128]
  447b00:	ldrb	w4, [x0, #2]
  447b04:	cmp	x26, x1
  447b08:	ldrb	w1, [x2, #2]
  447b0c:	strb	w4, [x2, #2]
  447b10:	strb	w1, [x0, #2]
  447b14:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447b18:	ldr	x1, [sp, #136]
  447b1c:	ldrb	w4, [x0, #3]
  447b20:	cmp	x26, x1
  447b24:	ldrb	w1, [x2, #3]
  447b28:	strb	w4, [x2, #3]
  447b2c:	strb	w1, [x0, #3]
  447b30:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447b34:	ldr	x1, [sp, #144]
  447b38:	ldrb	w4, [x0, #4]
  447b3c:	cmp	x26, x1
  447b40:	ldrb	w1, [x2, #4]
  447b44:	strb	w4, [x2, #4]
  447b48:	strb	w1, [x0, #4]
  447b4c:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447b50:	ldr	x1, [sp, #152]
  447b54:	ldrb	w4, [x0, #5]
  447b58:	cmp	x26, x1
  447b5c:	ldrb	w1, [x2, #5]
  447b60:	strb	w4, [x2, #5]
  447b64:	strb	w1, [x0, #5]
  447b68:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447b6c:	ldr	x1, [sp, #160]
  447b70:	ldrb	w4, [x0, #6]
  447b74:	cmp	x26, x1
  447b78:	ldrb	w1, [x2, #6]
  447b7c:	strb	w4, [x2, #6]
  447b80:	strb	w1, [x0, #6]
  447b84:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447b88:	ldr	x1, [sp, #168]
  447b8c:	ldrb	w4, [x0, #7]
  447b90:	cmp	x26, x1
  447b94:	ldrb	w1, [x2, #7]
  447b98:	strb	w4, [x2, #7]
  447b9c:	strb	w1, [x0, #7]
  447ba0:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447ba4:	ldr	x1, [sp, #176]
  447ba8:	ldrb	w4, [x0, #8]
  447bac:	cmp	x26, x1
  447bb0:	ldrb	w1, [x2, #8]
  447bb4:	strb	w4, [x2, #8]
  447bb8:	strb	w1, [x0, #8]
  447bbc:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447bc0:	ldr	x1, [sp, #184]
  447bc4:	ldrb	w4, [x0, #9]
  447bc8:	cmp	x26, x1
  447bcc:	ldrb	w1, [x2, #9]
  447bd0:	strb	w4, [x2, #9]
  447bd4:	strb	w1, [x0, #9]
  447bd8:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447bdc:	ldr	x1, [sp, #192]
  447be0:	ldrb	w4, [x0, #10]
  447be4:	cmp	x26, x1
  447be8:	ldrb	w1, [x2, #10]
  447bec:	strb	w4, [x2, #10]
  447bf0:	strb	w1, [x0, #10]
  447bf4:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447bf8:	ldr	x1, [sp, #200]
  447bfc:	ldrb	w4, [x0, #11]
  447c00:	cmp	x26, x1
  447c04:	ldrb	w1, [x2, #11]
  447c08:	strb	w4, [x2, #11]
  447c0c:	strb	w1, [x0, #11]
  447c10:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447c14:	ldr	x1, [sp, #208]
  447c18:	ldrb	w4, [x0, #12]
  447c1c:	cmp	x26, x1
  447c20:	ldrb	w1, [x2, #12]
  447c24:	strb	w4, [x2, #12]
  447c28:	strb	w1, [x0, #12]
  447c2c:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447c30:	ldr	x1, [sp, #216]
  447c34:	ldrb	w4, [x0, #13]
  447c38:	cmp	x26, x1
  447c3c:	ldrb	w1, [x2, #13]
  447c40:	strb	w4, [x2, #13]
  447c44:	strb	w1, [x0, #13]
  447c48:	b.ls	447c60 <ferror@plt+0x453e0>  // b.plast
  447c4c:	ldrb	w4, [x0, #14]
  447c50:	ldrb	w1, [x2, #14]
  447c54:	strb	w4, [x2, #14]
  447c58:	strb	w1, [x0, #14]
  447c5c:	nop
  447c60:	add	x25, x25, #0x1
  447c64:	mov	x24, x3
  447c68:	add	x23, x23, x26
  447c6c:	cmp	x25, x19
  447c70:	b.cc	447a38 <ferror@plt+0x451b8>  // b.lo, b.ul, b.last
  447c74:	cbnz	x24, 447d1c <ferror@plt+0x4549c>
  447c78:	madd	x25, x7, x26, x28
  447c7c:	sub	x19, x19, #0x1
  447c80:	mov	x1, x24
  447c84:	mov	x0, x28
  447c88:	mov	x3, x21
  447c8c:	mov	x2, x26
  447c90:	bl	447768 <ferror@plt+0x44ee8>
  447c94:	cmp	x19, #0x1
  447c98:	b.ls	447f80 <ferror@plt+0x45700>  // b.plast
  447c9c:	mov	x28, x25
  447ca0:	b	447820 <ferror@plt+0x44fa0>
  447ca4:	ldrb	w3, [x1, x0]
  447ca8:	ldrb	w2, [x28, x0]
  447cac:	strb	w3, [x28, x0]
  447cb0:	strb	w2, [x1, x0]
  447cb4:	add	x0, x0, #0x1
  447cb8:	cmp	x26, x0
  447cbc:	b.eq	447a18 <ferror@plt+0x45198>  // b.none
  447cc0:	ldrb	w3, [x1, x0]
  447cc4:	ldrb	w2, [x28, x0]
  447cc8:	strb	w3, [x28, x0]
  447ccc:	strb	w2, [x1, x0]
  447cd0:	add	x0, x0, #0x1
  447cd4:	cmp	x26, x0
  447cd8:	b.ne	447ca4 <ferror@plt+0x45424>  // b.any
  447cdc:	b	447a18 <ferror@plt+0x45198>
  447ce0:	ldrb	w4, [x22, x0]
  447ce4:	ldrb	w2, [x1, x0]
  447ce8:	strb	w4, [x1, x0]
  447cec:	strb	w2, [x22, x0]
  447cf0:	add	x0, x0, #0x1
  447cf4:	cmp	x26, x0
  447cf8:	b.eq	447c60 <ferror@plt+0x453e0>  // b.none
  447cfc:	ldrb	w4, [x22, x0]
  447d00:	ldrb	w2, [x1, x0]
  447d04:	strb	w4, [x1, x0]
  447d08:	strb	w2, [x22, x0]
  447d0c:	add	x0, x0, #0x1
  447d10:	cmp	x26, x0
  447d14:	b.ne	447ce0 <ferror@plt+0x45460>  // b.any
  447d18:	b	447c60 <ferror@plt+0x453e0>
  447d1c:	mul	x0, x24, x26
  447d20:	add	x1, x28, x0
  447d24:	cbz	x26, 447f10 <ferror@plt+0x45690>
  447d28:	add	x0, x0, #0x10
  447d2c:	add	x3, x28, #0x10
  447d30:	cmp	x0, #0x0
  447d34:	ldr	x0, [sp, #104]
  447d38:	ccmp	x1, x3, #0x2, gt
  447d3c:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
  447d40:	mov	x0, #0x0                   	// #0
  447d44:	b.ls	447f44 <ferror@plt+0x456c4>  // b.plast
  447d48:	ldr	q1, [x1, x0]
  447d4c:	ldr	q0, [x28, x0]
  447d50:	str	q1, [x28, x0]
  447d54:	str	q0, [x1, x0]
  447d58:	add	x0, x0, #0x10
  447d5c:	cmp	x0, x20
  447d60:	b.ne	447d48 <ferror@plt+0x454c8>  // b.any
  447d64:	cmp	x26, x27
  447d68:	add	x3, x28, x27
  447d6c:	add	x0, x1, x27
  447d70:	b.eq	447f10 <ferror@plt+0x45690>  // b.none
  447d74:	ldrb	w8, [x1, x27]
  447d78:	ldrb	w6, [x28, x27]
  447d7c:	strb	w8, [x28, x27]
  447d80:	ldr	x2, [sp, #112]
  447d84:	strb	w6, [x1, x27]
  447d88:	cmp	x26, x2
  447d8c:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447d90:	ldr	x1, [sp, #120]
  447d94:	ldrb	w6, [x0, #1]
  447d98:	cmp	x26, x1
  447d9c:	ldrb	w1, [x3, #1]
  447da0:	strb	w6, [x3, #1]
  447da4:	strb	w1, [x0, #1]
  447da8:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447dac:	ldr	x1, [sp, #128]
  447db0:	ldrb	w6, [x0, #2]
  447db4:	cmp	x26, x1
  447db8:	ldrb	w1, [x3, #2]
  447dbc:	strb	w6, [x3, #2]
  447dc0:	strb	w1, [x0, #2]
  447dc4:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447dc8:	ldr	x1, [sp, #136]
  447dcc:	ldrb	w6, [x0, #3]
  447dd0:	cmp	x26, x1
  447dd4:	ldrb	w1, [x3, #3]
  447dd8:	strb	w6, [x3, #3]
  447ddc:	strb	w1, [x0, #3]
  447de0:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447de4:	ldr	x1, [sp, #144]
  447de8:	ldrb	w6, [x0, #4]
  447dec:	cmp	x26, x1
  447df0:	ldrb	w1, [x3, #4]
  447df4:	strb	w6, [x3, #4]
  447df8:	strb	w1, [x0, #4]
  447dfc:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447e00:	ldr	x1, [sp, #152]
  447e04:	ldrb	w6, [x0, #5]
  447e08:	cmp	x26, x1
  447e0c:	ldrb	w1, [x3, #5]
  447e10:	strb	w6, [x3, #5]
  447e14:	strb	w1, [x0, #5]
  447e18:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447e1c:	ldr	x1, [sp, #160]
  447e20:	ldrb	w6, [x0, #6]
  447e24:	cmp	x26, x1
  447e28:	ldrb	w1, [x3, #6]
  447e2c:	strb	w6, [x3, #6]
  447e30:	strb	w1, [x0, #6]
  447e34:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447e38:	ldr	x1, [sp, #168]
  447e3c:	ldrb	w6, [x0, #7]
  447e40:	cmp	x26, x1
  447e44:	ldrb	w1, [x3, #7]
  447e48:	strb	w6, [x3, #7]
  447e4c:	strb	w1, [x0, #7]
  447e50:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447e54:	ldr	x1, [sp, #176]
  447e58:	ldrb	w6, [x0, #8]
  447e5c:	cmp	x26, x1
  447e60:	ldrb	w1, [x3, #8]
  447e64:	strb	w6, [x3, #8]
  447e68:	strb	w1, [x0, #8]
  447e6c:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447e70:	ldr	x1, [sp, #184]
  447e74:	ldrb	w6, [x0, #9]
  447e78:	cmp	x26, x1
  447e7c:	ldrb	w1, [x3, #9]
  447e80:	strb	w6, [x3, #9]
  447e84:	strb	w1, [x0, #9]
  447e88:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447e8c:	ldr	x1, [sp, #192]
  447e90:	ldrb	w6, [x0, #10]
  447e94:	cmp	x26, x1
  447e98:	ldrb	w1, [x3, #10]
  447e9c:	strb	w6, [x3, #10]
  447ea0:	strb	w1, [x0, #10]
  447ea4:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447ea8:	ldr	x1, [sp, #200]
  447eac:	ldrb	w6, [x0, #11]
  447eb0:	cmp	x26, x1
  447eb4:	ldrb	w1, [x3, #11]
  447eb8:	strb	w6, [x3, #11]
  447ebc:	strb	w1, [x0, #11]
  447ec0:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447ec4:	ldr	x1, [sp, #208]
  447ec8:	ldrb	w6, [x0, #12]
  447ecc:	cmp	x26, x1
  447ed0:	ldrb	w1, [x3, #12]
  447ed4:	strb	w6, [x3, #12]
  447ed8:	strb	w1, [x0, #12]
  447edc:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447ee0:	ldr	x1, [sp, #216]
  447ee4:	ldrb	w6, [x0, #13]
  447ee8:	cmp	x26, x1
  447eec:	ldrb	w1, [x3, #13]
  447ef0:	strb	w6, [x3, #13]
  447ef4:	strb	w1, [x0, #13]
  447ef8:	b.ls	447f10 <ferror@plt+0x45690>  // b.plast
  447efc:	ldrb	w6, [x0, #14]
  447f00:	ldrb	w1, [x3, #14]
  447f04:	strb	w6, [x3, #14]
  447f08:	strb	w1, [x0, #14]
  447f0c:	nop
  447f10:	sub	x1, x19, #0x1
  447f14:	madd	x25, x7, x26, x28
  447f18:	cmp	x19, x24, lsl #1
  447f1c:	sub	x1, x1, x24
  447f20:	b.hi	447fa0 <ferror@plt+0x45720>  // b.pmore
  447f24:	mov	x0, x25
  447f28:	mov	x3, x21
  447f2c:	mov	x2, x26
  447f30:	bl	447768 <ferror@plt+0x44ee8>
  447f34:	cmp	x24, #0x1
  447f38:	b.ls	447f80 <ferror@plt+0x45700>  // b.plast
  447f3c:	mov	x19, x24
  447f40:	b	447820 <ferror@plt+0x44fa0>
  447f44:	ldrb	w3, [x1, x0]
  447f48:	ldrb	w2, [x28, x0]
  447f4c:	strb	w3, [x28, x0]
  447f50:	strb	w2, [x1, x0]
  447f54:	add	x0, x0, #0x1
  447f58:	cmp	x0, x26
  447f5c:	b.eq	447f10 <ferror@plt+0x45690>  // b.none
  447f60:	ldrb	w3, [x1, x0]
  447f64:	ldrb	w2, [x28, x0]
  447f68:	strb	w3, [x28, x0]
  447f6c:	strb	w2, [x1, x0]
  447f70:	add	x0, x0, #0x1
  447f74:	cmp	x0, x26
  447f78:	b.ne	447f44 <ferror@plt+0x456c4>  // b.any
  447f7c:	b	447f10 <ferror@plt+0x45690>
  447f80:	ldp	x19, x20, [sp, #16]
  447f84:	ldp	x21, x22, [sp, #32]
  447f88:	ldp	x23, x24, [sp, #48]
  447f8c:	ldp	x25, x26, [sp, #64]
  447f90:	ldp	x27, x28, [sp, #80]
  447f94:	ldp	x29, x30, [sp], #224
  447f98:	ret
  447f9c:	ret
  447fa0:	mov	x19, x1
  447fa4:	b	447c80 <ferror@plt+0x45400>
  447fa8:	sub	w5, w1, #0x1
  447fac:	mov	x4, x0
  447fb0:	cmp	w5, #0x4f
  447fb4:	b.ls	447fc0 <ferror@plt+0x45740>  // b.plast
  447fb8:	mov	x0, #0x0                   	// #0
  447fbc:	ret
  447fc0:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  447fc4:	add	x0, x0, #0x688
  447fc8:	ldrb	w0, [x0, w5, uxtw]
  447fcc:	adr	x5, 447fd8 <ferror@plt+0x45758>
  447fd0:	add	x0, x5, w0, sxtb #2
  447fd4:	br	x0
  447fd8:	cbz	x3, 447fb8 <ferror@plt+0x45738>
  447fdc:	ldp	w0, w5, [x4, #40]
  447fe0:	cmp	w0, w5
  447fe4:	b.ge	447fb8 <ferror@plt+0x45738>  // b.tcont
  447fe8:	mov	w5, #0x18                  	// #24
  447fec:	add	w7, w0, #0x1
  447ff0:	ldr	x6, [x4, #32]
  447ff4:	smull	x5, w0, w5
  447ff8:	add	x0, x6, x5
  447ffc:	str	wzr, [x0, #4]
  448000:	str	w7, [x4, #40]
  448004:	str	w1, [x6, x5]
  448008:	stp	x2, x3, [x0, #8]
  44800c:	ret
  448010:	cbnz	x2, 447fdc <ferror@plt+0x4575c>
  448014:	mov	x0, #0x0                   	// #0
  448018:	b	447fbc <ferror@plt+0x4573c>
  44801c:	cmp	x2, #0x0
  448020:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  448024:	b.ne	447fdc <ferror@plt+0x4575c>  // b.any
  448028:	mov	x0, #0x0                   	// #0
  44802c:	b	447fbc <ferror@plt+0x4573c>
  448030:	cbz	x1, 448110 <ferror@plt+0x45890>
  448034:	stp	x29, x30, [sp, #-32]!
  448038:	mov	x29, sp
  44803c:	stp	x19, x20, [sp, #16]
  448040:	mov	x20, x0
  448044:	mov	x19, x1
  448048:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44804c:	add	x0, x0, #0x6d8
  448050:	ldr	w1, [x19]
  448054:	sub	w1, w1, #0x1
  448058:	cmp	w1, #0x4f
  44805c:	b.ls	44806c <ferror@plt+0x457ec>  // b.plast
  448060:	ldp	x19, x20, [sp, #16]
  448064:	ldp	x29, x30, [sp], #32
  448068:	ret
  44806c:	ldrb	w1, [x0, w1, uxtw]
  448070:	adr	x2, 44807c <ferror@plt+0x457fc>
  448074:	add	x1, x2, w1, sxtb #2
  448078:	br	x1
  44807c:	ldr	x0, [x19, #8]
  448080:	ldr	w0, [x0]
  448084:	cmp	w0, #0x5
  448088:	b.ne	448098 <ferror@plt+0x45818>  // b.any
  44808c:	ldr	w0, [x20, #348]
  448090:	add	w0, w0, #0x1
  448094:	str	w0, [x20, #348]
  448098:	ldr	w0, [x20, #308]
  44809c:	cmp	w0, #0x800
  4480a0:	b.gt	448060 <ferror@plt+0x457e0>
  4480a4:	ldr	x1, [x19, #8]
  4480a8:	add	w0, w0, #0x1
  4480ac:	str	w0, [x20, #308]
  4480b0:	mov	x0, x20
  4480b4:	bl	448030 <ferror@plt+0x457b0>
  4480b8:	ldr	x1, [x19, #16]
  4480bc:	mov	x0, x20
  4480c0:	bl	448030 <ferror@plt+0x457b0>
  4480c4:	ldr	w0, [x20, #308]
  4480c8:	sub	w0, w0, #0x1
  4480cc:	str	w0, [x20, #308]
  4480d0:	ldp	x19, x20, [sp, #16]
  4480d4:	ldp	x29, x30, [sp], #32
  4480d8:	ret
  4480dc:	ldr	x19, [x19, #8]
  4480e0:	cbnz	x19, 448050 <ferror@plt+0x457d0>
  4480e4:	b	448060 <ferror@plt+0x457e0>
  4480e8:	ldr	x19, [x19, #16]
  4480ec:	cbnz	x19, 448050 <ferror@plt+0x457d0>
  4480f0:	b	448060 <ferror@plt+0x457e0>
  4480f4:	ldr	w0, [x20, #364]
  4480f8:	add	w0, w0, #0x1
  4480fc:	str	w0, [x20, #364]
  448100:	ldr	w0, [x20, #308]
  448104:	cmp	w0, #0x800
  448108:	b.gt	448060 <ferror@plt+0x457e0>
  44810c:	b	4480a4 <ferror@plt+0x45824>
  448110:	ret
  448114:	nop
  448118:	cbz	x2, 4481e0 <ferror@plt+0x45960>
  44811c:	stp	x29, x30, [sp, #-64]!
  448120:	mov	x29, sp
  448124:	stp	x19, x20, [sp, #16]
  448128:	mov	x20, x1
  44812c:	mov	x19, x0
  448130:	stp	x21, x22, [sp, #32]
  448134:	add	x22, x1, x2
  448138:	ldr	x1, [x0, #256]
  44813c:	str	x23, [sp, #48]
  448140:	mov	x23, #0x1                   	// #1
  448144:	b	44819c <ferror@plt+0x4591c>
  448148:	ldp	x3, x2, [x19, #272]
  44814c:	strb	wzr, [x19, #255]
  448150:	add	x20, x20, #0x1
  448154:	blr	x3
  448158:	strb	w21, [x19]
  44815c:	ldr	x0, [x19, #320]
  448160:	str	x23, [x19, #256]
  448164:	strb	w21, [x19, #264]
  448168:	cmp	x22, x20
  44816c:	add	x0, x0, #0x1
  448170:	str	x0, [x19, #320]
  448174:	mov	x0, #0x1                   	// #1
  448178:	b.eq	4481cc <ferror@plt+0x4594c>  // b.none
  44817c:	ldrb	w21, [x20]
  448180:	add	x1, x0, #0x1
  448184:	str	x1, [x19, #256]
  448188:	add	x20, x20, #0x1
  44818c:	strb	w21, [x19, x0]
  448190:	cmp	x20, x22
  448194:	strb	w21, [x19, #264]
  448198:	b.eq	4481cc <ferror@plt+0x4594c>  // b.none
  44819c:	ldrb	w21, [x20]
  4481a0:	mov	x0, x19
  4481a4:	cmp	x1, #0xff
  4481a8:	b.eq	448148 <ferror@plt+0x458c8>  // b.none
  4481ac:	mov	x0, x1
  4481b0:	add	x20, x20, #0x1
  4481b4:	add	x1, x0, #0x1
  4481b8:	str	x1, [x19, #256]
  4481bc:	cmp	x20, x22
  4481c0:	strb	w21, [x19, x0]
  4481c4:	strb	w21, [x19, #264]
  4481c8:	b.ne	44819c <ferror@plt+0x4591c>  // b.any
  4481cc:	ldp	x19, x20, [sp, #16]
  4481d0:	ldp	x21, x22, [sp, #32]
  4481d4:	ldr	x23, [sp, #48]
  4481d8:	ldp	x29, x30, [sp], #64
  4481dc:	ret
  4481e0:	ret
  4481e4:	nop
  4481e8:	cbnz	x0, 448204 <ferror@plt+0x45984>
  4481ec:	b	448210 <ferror@plt+0x45990>
  4481f0:	cmp	w1, #0x0
  4481f4:	b.le	448218 <ferror@plt+0x45998>
  4481f8:	ldr	x0, [x0, #16]
  4481fc:	sub	w1, w1, #0x1
  448200:	cbz	x0, 448214 <ferror@plt+0x45994>
  448204:	ldr	w2, [x0]
  448208:	cmp	w2, #0x2f
  44820c:	b.eq	4481f0 <ferror@plt+0x45970>  // b.none
  448210:	mov	x0, #0x0                   	// #0
  448214:	ret
  448218:	b.ne	448210 <ferror@plt+0x45990>  // b.any
  44821c:	ldr	x0, [x0, #8]
  448220:	ret
  448224:	nop
  448228:	stp	x29, x30, [sp, #-48]!
  44822c:	mov	x29, sp
  448230:	stp	x19, x20, [sp, #16]
  448234:	mov	x19, x2
  448238:	add	x2, x1, #0x1
  44823c:	stp	x21, x22, [sp, #32]
  448240:	mov	x21, x1
  448244:	mov	x22, x0
  448248:	ldp	x1, x20, [x19, #8]
  44824c:	add	x1, x2, x1
  448250:	ldr	w2, [x19, #24]
  448254:	cmp	x1, x20
  448258:	b.hi	44829c <ferror@plt+0x45a1c>  // b.pmore
  44825c:	cbnz	w2, 44828c <ferror@plt+0x45a0c>
  448260:	ldp	x3, x0, [x19]
  448264:	mov	x1, x22
  448268:	mov	x2, x21
  44826c:	add	x0, x3, x0
  448270:	bl	402220 <memcpy@plt>
  448274:	ldp	x0, x1, [x19]
  448278:	add	x0, x0, x21
  44827c:	strb	wzr, [x0, x1]
  448280:	ldr	x1, [x19, #8]
  448284:	add	x1, x1, x21
  448288:	str	x1, [x19, #8]
  44828c:	ldp	x19, x20, [sp, #16]
  448290:	ldp	x21, x22, [sp, #32]
  448294:	ldp	x29, x30, [sp], #48
  448298:	ret
  44829c:	cbnz	w2, 44828c <ferror@plt+0x45a0c>
  4482a0:	cbz	x20, 4482d8 <ferror@plt+0x45a58>
  4482a4:	nop
  4482a8:	lsl	x20, x20, #1
  4482ac:	cmp	x1, x20
  4482b0:	b.hi	4482a8 <ferror@plt+0x45a28>  // b.pmore
  4482b4:	ldr	x0, [x19]
  4482b8:	mov	x1, x20
  4482bc:	bl	4024a0 <realloc@plt>
  4482c0:	cbz	x0, 4482e8 <ferror@plt+0x45a68>
  4482c4:	ldr	w2, [x19, #24]
  4482c8:	str	x0, [x19]
  4482cc:	str	x20, [x19, #16]
  4482d0:	cbz	w2, 448260 <ferror@plt+0x459e0>
  4482d4:	b	44828c <ferror@plt+0x45a0c>
  4482d8:	cmp	x1, #0x2
  4482dc:	mov	x20, #0x2                   	// #2
  4482e0:	b.hi	4482a8 <ferror@plt+0x45a28>  // b.pmore
  4482e4:	b	4482b4 <ferror@plt+0x45a34>
  4482e8:	ldr	x0, [x19]
  4482ec:	bl	402640 <free@plt>
  4482f0:	str	xzr, [x19]
  4482f4:	mov	w0, #0x1                   	// #1
  4482f8:	stp	xzr, xzr, [x19, #8]
  4482fc:	str	w0, [x19, #24]
  448300:	b	44828c <ferror@plt+0x45a0c>
  448304:	nop
  448308:	cbz	x1, 448424 <ferror@plt+0x45ba4>
  44830c:	stp	x29, x30, [sp, #-48]!
  448310:	mov	x29, sp
  448314:	stp	x21, x22, [sp, #32]
  448318:	mov	x21, #0x8001                	// #32769
  44831c:	movk	x21, #0x410, lsl #16
  448320:	movk	x21, #0xc600, lsl #32
  448324:	stp	x19, x20, [sp, #16]
  448328:	mov	x20, x0
  44832c:	mov	x19, x1
  448330:	mov	x22, #0x1                   	// #1
  448334:	movk	x21, #0x19, lsl #48
  448338:	ldr	w2, [x19]
  44833c:	cmp	w2, #0x8
  448340:	b.eq	448358 <ferror@plt+0x45ad8>  // b.none
  448344:	b.hi	4483c4 <ferror@plt+0x45b44>  // b.pmore
  448348:	cmp	w2, #0x6
  44834c:	b.eq	448360 <ferror@plt+0x45ae0>  // b.none
  448350:	cmp	w2, #0x7
  448354:	b.ne	448374 <ferror@plt+0x45af4>  // b.any
  448358:	ldr	x19, [x19, #16]
  44835c:	cbnz	x19, 448338 <ferror@plt+0x45ab8>
  448360:	mov	x0, #0x0                   	// #0
  448364:	ldp	x19, x20, [sp, #16]
  448368:	ldp	x21, x22, [sp, #32]
  44836c:	ldp	x29, x30, [sp], #48
  448370:	ret
  448374:	cbz	w2, 448360 <ferror@plt+0x45ae0>
  448378:	cmp	w2, #0x5
  44837c:	b.ne	4483e0 <ferror@plt+0x45b60>  // b.any
  448380:	ldr	x0, [x20, #288]
  448384:	cbz	x0, 448418 <ferror@plt+0x45b98>
  448388:	ldr	x0, [x0, #8]
  44838c:	ldr	x2, [x19, #8]
  448390:	ldr	x0, [x0, #16]
  448394:	mov	w1, w2
  448398:	tbnz	w2, #31, 4483f8 <ferror@plt+0x45b78>
  44839c:	cbnz	x0, 4483b4 <ferror@plt+0x45b34>
  4483a0:	b	448360 <ferror@plt+0x45ae0>
  4483a4:	cbz	w1, 4483f4 <ferror@plt+0x45b74>
  4483a8:	ldr	x0, [x0, #16]
  4483ac:	sub	w1, w1, #0x1
  4483b0:	cbz	x0, 448360 <ferror@plt+0x45ae0>
  4483b4:	ldr	w2, [x0]
  4483b8:	cmp	w2, #0x2f
  4483bc:	b.eq	4483a4 <ferror@plt+0x45b24>  // b.none
  4483c0:	b	448360 <ferror@plt+0x45ae0>
  4483c4:	sub	w2, w2, #0x18
  4483c8:	cmp	w2, #0x34
  4483cc:	b.hi	4483e0 <ferror@plt+0x45b60>  // b.pmore
  4483d0:	lsl	x2, x22, x2
  4483d4:	tst	x2, x21
  4483d8:	b.ne	448360 <ferror@plt+0x45ae0>  // b.any
  4483dc:	tbnz	w2, #27, 448358 <ferror@plt+0x45ad8>
  4483e0:	ldr	x1, [x19, #8]
  4483e4:	mov	x0, x20
  4483e8:	bl	448308 <ferror@plt+0x45a88>
  4483ec:	cbz	x0, 448358 <ferror@plt+0x45ad8>
  4483f0:	b	448364 <ferror@plt+0x45ae4>
  4483f4:	ldr	x0, [x0, #8]
  4483f8:	cbz	x0, 448360 <ferror@plt+0x45ae0>
  4483fc:	ldr	w1, [x0]
  448400:	cmp	w1, #0x2f
  448404:	b.ne	448360 <ferror@plt+0x45ae0>  // b.any
  448408:	ldp	x19, x20, [sp, #16]
  44840c:	ldp	x21, x22, [sp, #32]
  448410:	ldp	x29, x30, [sp], #48
  448414:	ret
  448418:	mov	w1, #0x1                   	// #1
  44841c:	str	w1, [x20, #304]
  448420:	b	448364 <ferror@plt+0x45ae4>
  448424:	mov	x0, #0x0                   	// #0
  448428:	ret
  44842c:	nop
  448430:	ldr	x2, [x0, #24]
  448434:	mov	x6, x0
  448438:	mov	w9, #0x0                   	// #0
  44843c:	ldrb	w1, [x2]
  448440:	cmp	w1, #0x6e
  448444:	b.ne	44845c <ferror@plt+0x45bdc>  // b.any
  448448:	add	x0, x2, #0x1
  44844c:	str	x0, [x6, #24]
  448450:	mov	w9, #0x1                   	// #1
  448454:	ldrb	w1, [x2, #1]
  448458:	mov	x2, x0
  44845c:	sub	w3, w1, #0x30
  448460:	mov	w7, #0xcccd                	// #52429
  448464:	and	w3, w3, #0xff
  448468:	add	x5, x2, #0x1
  44846c:	cmp	w3, #0x9
  448470:	mov	w2, w1
  448474:	mov	w8, #0x7fffffff            	// #2147483647
  448478:	mov	w1, #0x0                   	// #0
  44847c:	movk	w7, #0xcccc, lsl #16
  448480:	b.ls	44849c <ferror@plt+0x45c1c>  // b.plast
  448484:	b	448590 <ferror@plt+0x45d10>
  448488:	umull	x3, w3, w7
  44848c:	add	x5, x5, #0x1
  448490:	lsr	x3, x3, #35
  448494:	cmp	w3, w1
  448498:	b.lt	448590 <ferror@plt+0x45d10>  // b.tstop
  44849c:	str	x5, [x6, #24]
  4484a0:	add	w1, w1, w1, lsl #2
  4484a4:	ldrb	w0, [x5]
  4484a8:	add	w1, w2, w1, lsl #1
  4484ac:	sub	w1, w1, #0x30
  4484b0:	sub	w4, w0, #0x30
  4484b4:	mov	w2, w0
  4484b8:	sub	w3, w8, w4
  4484bc:	and	w4, w4, #0xff
  4484c0:	cmp	w4, #0x9
  4484c4:	b.ls	448488 <ferror@plt+0x45c08>  // b.plast
  4484c8:	cmp	w1, #0x0
  4484cc:	ccmp	w9, #0x0, #0x0, gt
  4484d0:	b.ne	448590 <ferror@plt+0x45d10>  // b.any
  4484d4:	ldr	x0, [x6, #8]
  4484d8:	sxtw	x2, w1
  4484dc:	sub	x0, x0, x5
  4484e0:	cmp	x0, w1, sxtw
  4484e4:	b.lt	448598 <ferror@plt+0x45d18>  // b.tstop
  4484e8:	ldr	w3, [x6, #16]
  4484ec:	add	x0, x5, x2
  4484f0:	str	x0, [x6, #24]
  4484f4:	tbz	w3, #2, 448510 <ferror@plt+0x45c90>
  4484f8:	ldrb	w2, [x5, x2]
  4484fc:	cmp	w2, #0x24
  448500:	b.ne	448510 <ferror@plt+0x45c90>  // b.any
  448504:	add	x0, x0, #0x1
  448508:	str	x0, [x6, #24]
  44850c:	nop
  448510:	ldp	w2, w0, [x6, #40]
  448514:	cmp	w1, #0x9
  448518:	b.le	448560 <ferror@plt+0x45ce0>
  44851c:	mov	x3, #0x475f                	// #18271
  448520:	ldr	x4, [x5]
  448524:	movk	x3, #0x4f4c, lsl #16
  448528:	movk	x3, #0x4142, lsl #32
  44852c:	movk	x3, #0x5f4c, lsl #48
  448530:	cmp	x4, x3
  448534:	b.ne	448560 <ferror@plt+0x45ce0>  // b.any
  448538:	ldrb	w3, [x5, #8]
  44853c:	mov	w7, #0x5f                  	// #95
  448540:	mov	w4, #0x24                  	// #36
  448544:	cmp	w3, #0x2e
  448548:	ccmp	w3, w7, #0x4, ne  // ne = any
  44854c:	ccmp	w3, w4, #0x4, ne  // ne = any
  448550:	b.ne	448560 <ferror@plt+0x45ce0>  // b.any
  448554:	ldrb	w3, [x5, #9]
  448558:	cmp	w3, #0x4e
  44855c:	b.eq	4485a4 <ferror@plt+0x45d24>  // b.none
  448560:	cmp	w0, w2
  448564:	b.le	448598 <ferror@plt+0x45d18>
  448568:	ldr	x0, [x6, #32]
  44856c:	mov	w4, #0x18                  	// #24
  448570:	add	w3, w2, #0x1
  448574:	smaddl	x0, w2, w4, x0
  448578:	str	wzr, [x0, #4]
  44857c:	str	w3, [x6, #40]
  448580:	stp	xzr, x5, [x0]
  448584:	str	w1, [x0, #16]
  448588:	str	x0, [x6, #64]
  44858c:	ret
  448590:	mov	x0, #0x0                   	// #0
  448594:	ret
  448598:	mov	x0, #0x0                   	// #0
  44859c:	str	x0, [x6, #64]
  4485a0:	b	44858c <ferror@plt+0x45d0c>
  4485a4:	ldr	w3, [x6, #72]
  4485a8:	cmp	w0, w2
  4485ac:	add	w0, w3, #0x16
  4485b0:	sub	w1, w0, w1
  4485b4:	str	w1, [x6, #72]
  4485b8:	b.le	448598 <ferror@plt+0x45d18>
  4485bc:	mov	w0, #0x18                  	// #24
  4485c0:	add	w1, w2, #0x1
  4485c4:	ldr	x3, [x6, #32]
  4485c8:	smull	x2, w2, w0
  4485cc:	str	w1, [x6, #40]
  4485d0:	mov	w4, #0x15                  	// #21
  4485d4:	add	x0, x3, x2
  4485d8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4485dc:	add	x1, x1, #0x528
  4485e0:	str	xzr, [x3, x2]
  4485e4:	str	x1, [x0, #8]
  4485e8:	str	w4, [x0, #16]
  4485ec:	str	x0, [x6, #64]
  4485f0:	b	44858c <ferror@plt+0x45d0c>
  4485f4:	nop
  4485f8:	mov	x10, x0
  4485fc:	ldr	x0, [x0, #24]
  448600:	ldrb	w2, [x0]
  448604:	cmp	w2, #0x53
  448608:	b.ne	448690 <ferror@plt+0x45e10>  // b.any
  44860c:	add	x3, x0, #0x1
  448610:	str	x3, [x10, #24]
  448614:	ldrb	w2, [x0, #1]
  448618:	cbnz	w2, 44869c <ferror@plt+0x45e1c>
  44861c:	ldr	w0, [x10, #16]
  448620:	and	w1, w1, #0x1
  448624:	ands	w4, w0, #0x8
  448628:	ubfx	x4, x0, #3, #1
  44862c:	csel	w1, w1, wzr, eq  // eq = none
  448630:	cbz	w1, 448648 <ferror@plt+0x45dc8>
  448634:	ldrb	w0, [x3]
  448638:	sub	w0, w0, #0x43
  44863c:	and	w0, w0, #0xff
  448640:	cmp	w0, #0x1
  448644:	csinc	w4, w4, wzr, hi  // hi = pmore
  448648:	cmp	w2, #0x74
  44864c:	b.eq	4488ac <ferror@plt+0x4602c>  // b.none
  448650:	cmp	w2, #0x61
  448654:	b.eq	4488bc <ferror@plt+0x4603c>  // b.none
  448658:	cmp	w2, #0x62
  44865c:	b.eq	4488cc <ferror@plt+0x4604c>  // b.none
  448660:	cmp	w2, #0x73
  448664:	b.eq	4488e4 <ferror@plt+0x46064>  // b.none
  448668:	cmp	w2, #0x69
  44866c:	b.eq	4488f4 <ferror@plt+0x46074>  // b.none
  448670:	cmp	w2, #0x6f
  448674:	b.eq	448774 <ferror@plt+0x45ef4>  // b.none
  448678:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44867c:	add	x1, x1, #0x900
  448680:	add	x1, x1, #0x150
  448684:	cmp	w2, #0x64
  448688:	b.eq	448780 <ferror@plt+0x45f00>  // b.none
  44868c:	nop
  448690:	mov	x11, #0x0                   	// #0
  448694:	mov	x0, x11
  448698:	ret
  44869c:	add	x3, x0, #0x2
  4486a0:	str	x3, [x10, #24]
  4486a4:	ldrb	w2, [x0, #1]
  4486a8:	sub	w5, w2, #0x30
  4486ac:	cmp	w2, #0x5f
  4486b0:	and	w0, w5, #0xff
  4486b4:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  4486b8:	b.hi	4486e4 <ferror@plt+0x45e64>  // b.pmore
  4486bc:	cmp	w2, #0x5f
  4486c0:	mov	w1, #0x0                   	// #0
  4486c4:	b.ne	4486f8 <ferror@plt+0x45e78>  // b.any
  4486c8:	ldr	w0, [x10, #56]
  4486cc:	cmp	w0, w1
  4486d0:	b.ls	448690 <ferror@plt+0x45e10>  // b.plast
  4486d4:	ldr	x0, [x10, #48]
  4486d8:	ldr	x11, [x0, w1, uxtw #3]
  4486dc:	mov	x0, x11
  4486e0:	ret
  4486e4:	sub	w0, w2, #0x41
  4486e8:	and	w0, w0, #0xff
  4486ec:	cmp	w0, #0x19
  4486f0:	b.hi	44861c <ferror@plt+0x45d9c>  // b.pmore
  4486f4:	nop
  4486f8:	mov	w3, #0x0                   	// #0
  4486fc:	nop
  448700:	add	w1, w3, w3, lsl #3
  448704:	sub	w6, w2, #0x41
  448708:	mov	w4, w1
  44870c:	and	w5, w5, #0xff
  448710:	add	w1, w2, w1, lsl #2
  448714:	and	w6, w6, #0xff
  448718:	sub	w1, w1, #0x37
  44871c:	add	w2, w2, w4, lsl #2
  448720:	cmp	w5, #0x9
  448724:	b.hi	448768 <ferror@plt+0x45ee8>  // b.pmore
  448728:	sub	w1, w2, #0x30
  44872c:	cmp	w3, w1
  448730:	b.hi	448690 <ferror@plt+0x45e10>  // b.pmore
  448734:	ldr	x4, [x10, #24]
  448738:	mov	w3, w1
  44873c:	add	x0, x4, #0x1
  448740:	ldrb	w2, [x4]
  448744:	cbz	w2, 448758 <ferror@plt+0x45ed8>
  448748:	str	x0, [x10, #24]
  44874c:	ldrb	w2, [x4]
  448750:	cmp	w2, #0x5f
  448754:	b.eq	448760 <ferror@plt+0x45ee0>  // b.none
  448758:	sub	w5, w2, #0x30
  44875c:	b	448700 <ferror@plt+0x45e80>
  448760:	add	w1, w1, #0x1
  448764:	b	4486c8 <ferror@plt+0x45e48>
  448768:	cmp	w6, #0x19
  44876c:	b.ls	44872c <ferror@plt+0x45eac>  // b.plast
  448770:	b	448690 <ferror@plt+0x45e10>
  448774:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  448778:	add	x1, x1, #0x900
  44877c:	add	x1, x1, #0x118
  448780:	ldr	x6, [x1, #40]
  448784:	ldp	w0, w5, [x10, #40]
  448788:	cbz	x6, 4487c4 <ferror@plt+0x45f44>
  44878c:	ldr	w11, [x1, #48]
  448790:	cmp	w5, w0
  448794:	b.le	448904 <ferror@plt+0x46084>
  448798:	mov	w9, #0x18                  	// #24
  44879c:	ldr	x8, [x10, #32]
  4487a0:	smull	x7, w0, w9
  4487a4:	add	w0, w0, #0x1
  4487a8:	add	x2, x8, x7
  4487ac:	str	wzr, [x2, #4]
  4487b0:	str	w0, [x10, #40]
  4487b4:	str	w9, [x8, x7]
  4487b8:	str	x6, [x2, #8]
  4487bc:	str	w11, [x2, #16]
  4487c0:	str	x2, [x10, #64]
  4487c4:	cbz	w4, 4488a0 <ferror@plt+0x46020>
  4487c8:	ldr	w2, [x1, #32]
  4487cc:	ldr	x6, [x1, #24]
  4487d0:	cmp	w5, w0
  4487d4:	ldr	w1, [x10, #72]
  4487d8:	add	w1, w1, w2
  4487dc:	str	w1, [x10, #72]
  4487e0:	b.le	4488dc <ferror@plt+0x4605c>
  4487e4:	mov	w4, #0x18                  	// #24
  4487e8:	add	w5, w0, #0x1
  4487ec:	ldr	x1, [x10, #32]
  4487f0:	smull	x0, w0, w4
  4487f4:	add	x11, x1, x0
  4487f8:	str	wzr, [x11, #4]
  4487fc:	str	w5, [x10, #40]
  448800:	str	w4, [x1, x0]
  448804:	str	x6, [x11, #8]
  448808:	str	w2, [x11, #16]
  44880c:	ldrb	w0, [x3]
  448810:	cmp	w0, #0x42
  448814:	b.ne	448694 <ferror@plt+0x45e14>  // b.any
  448818:	stp	x29, x30, [sp, #-16]!
  44881c:	mov	x29, sp
  448820:	ldr	x12, [x10, #64]
  448824:	nop
  448828:	add	x3, x3, #0x1
  44882c:	str	x3, [x10, #24]
  448830:	mov	x0, x10
  448834:	bl	448430 <ferror@plt+0x45bb0>
  448838:	mov	x3, x0
  44883c:	mov	x2, x11
  448840:	mov	x0, x10
  448844:	mov	w1, #0x4c                  	// #76
  448848:	bl	447fa8 <ferror@plt+0x45728>
  44884c:	ldr	x3, [x10, #24]
  448850:	mov	x11, x0
  448854:	ldrb	w0, [x3]
  448858:	cmp	w0, #0x42
  44885c:	b.eq	448828 <ferror@plt+0x45fa8>  // b.none
  448860:	str	x12, [x10, #64]
  448864:	cbz	x11, 448890 <ferror@plt+0x46010>
  448868:	ldp	w0, w1, [x10, #56]
  44886c:	cmp	w0, w1
  448870:	b.ge	448890 <ferror@plt+0x46010>  // b.tcont
  448874:	ldr	x2, [x10, #48]
  448878:	add	w1, w0, #0x1
  44887c:	str	x11, [x2, w0, sxtw #3]
  448880:	mov	x0, x11
  448884:	str	w1, [x10, #56]
  448888:	ldp	x29, x30, [sp], #16
  44888c:	ret
  448890:	mov	x11, #0x0                   	// #0
  448894:	mov	x0, x11
  448898:	ldp	x29, x30, [sp], #16
  44889c:	ret
  4488a0:	ldr	w2, [x1, #16]
  4488a4:	ldr	x6, [x1, #8]
  4488a8:	b	4487d0 <ferror@plt+0x45f50>
  4488ac:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4488b0:	add	x1, x1, #0x900
  4488b4:	ldp	w0, w5, [x10, #40]
  4488b8:	b	4487c4 <ferror@plt+0x45f44>
  4488bc:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4488c0:	add	x1, x1, #0x900
  4488c4:	add	x1, x1, #0x38
  4488c8:	b	448780 <ferror@plt+0x45f00>
  4488cc:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4488d0:	add	x1, x1, #0x900
  4488d4:	add	x1, x1, #0x70
  4488d8:	b	448780 <ferror@plt+0x45f00>
  4488dc:	mov	x11, #0x0                   	// #0
  4488e0:	b	44880c <ferror@plt+0x45f8c>
  4488e4:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4488e8:	add	x1, x1, #0x900
  4488ec:	add	x1, x1, #0xa8
  4488f0:	b	448780 <ferror@plt+0x45f00>
  4488f4:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4488f8:	add	x1, x1, #0x900
  4488fc:	add	x1, x1, #0xe0
  448900:	b	448780 <ferror@plt+0x45f00>
  448904:	mov	x2, #0x0                   	// #0
  448908:	str	x2, [x10, #64]
  44890c:	b	4487c4 <ferror@plt+0x45f44>
  448910:	ldr	x1, [x0, #24]
  448914:	mov	x5, x0
  448918:	ldrb	w2, [x1]
  44891c:	cmp	w2, #0x5f
  448920:	b.eq	4489ac <ferror@plt+0x4612c>  // b.none
  448924:	cmp	w2, #0x6e
  448928:	b.eq	4489b4 <ferror@plt+0x46134>  // b.none
  44892c:	sub	w0, w2, #0x30
  448930:	and	w0, w0, #0xff
  448934:	cmp	w0, #0x9
  448938:	b.hi	4489b4 <ferror@plt+0x46134>  // b.pmore
  44893c:	mov	w8, #0xcccd                	// #52429
  448940:	mov	w3, w2
  448944:	mov	w9, #0x7fffffff            	// #2147483647
  448948:	mov	w2, #0x0                   	// #0
  44894c:	movk	w8, #0xcccc, lsl #16
  448950:	b	448964 <ferror@plt+0x460e4>
  448954:	umull	x4, w4, w8
  448958:	lsr	x4, x4, #35
  44895c:	cmp	w4, w2
  448960:	b.lt	4489b4 <ferror@plt+0x46134>  // b.tstop
  448964:	add	x1, x1, #0x1
  448968:	str	x1, [x5, #24]
  44896c:	add	w2, w2, w2, lsl #2
  448970:	ldrb	w7, [x1]
  448974:	add	w0, w3, w2, lsl #1
  448978:	sub	w2, w0, #0x30
  44897c:	sub	w6, w7, #0x30
  448980:	mov	w3, w7
  448984:	sub	w4, w9, w6
  448988:	and	w6, w6, #0xff
  44898c:	cmp	w6, #0x9
  448990:	b.ls	448954 <ferror@plt+0x460d4>  // b.plast
  448994:	sub	w0, w0, #0x2f
  448998:	cmp	w7, #0x5f
  44899c:	b.ne	4489b4 <ferror@plt+0x46134>  // b.any
  4489a0:	add	x1, x1, #0x1
  4489a4:	str	x1, [x5, #24]
  4489a8:	ret
  4489ac:	mov	w0, #0x0                   	// #0
  4489b0:	b	4489a0 <ferror@plt+0x46120>
  4489b4:	mov	w0, #0xffffffff            	// #-1
  4489b8:	ret
  4489bc:	nop
  4489c0:	mov	x4, x0
  4489c4:	ldr	x0, [x0, #24]
  4489c8:	ldrb	w1, [x0]
  4489cc:	cmp	w1, #0x5f
  4489d0:	b.ne	448a70 <ferror@plt+0x461f0>  // b.any
  4489d4:	add	x1, x0, #0x1
  4489d8:	str	x1, [x4, #24]
  4489dc:	mov	w12, #0x0                   	// #0
  4489e0:	ldrb	w2, [x0, #1]
  4489e4:	cmp	w2, #0x5f
  4489e8:	b.eq	448aa8 <ferror@plt+0x46228>  // b.none
  4489ec:	cmp	w2, #0x6e
  4489f0:	b.eq	448a80 <ferror@plt+0x46200>  // b.none
  4489f4:	sub	w0, w2, #0x30
  4489f8:	and	w0, w0, #0xff
  4489fc:	cmp	w0, #0x9
  448a00:	b.hi	448a70 <ferror@plt+0x461f0>  // b.pmore
  448a04:	mov	w0, #0x0                   	// #0
  448a08:	mov	w9, #0xcccd                	// #52429
  448a0c:	mov	w5, w2
  448a10:	mov	w10, #0x7fffffff            	// #2147483647
  448a14:	mov	w2, #0x0                   	// #0
  448a18:	movk	w9, #0xcccc, lsl #16
  448a1c:	b	448a30 <ferror@plt+0x461b0>
  448a20:	umull	x3, w3, w9
  448a24:	lsr	x3, x3, #35
  448a28:	cmp	w3, w2
  448a2c:	b.lt	448a78 <ferror@plt+0x461f8>  // b.tstop
  448a30:	mov	x11, x1
  448a34:	add	x1, x1, #0x1
  448a38:	str	x1, [x4, #24]
  448a3c:	add	w2, w2, w2, lsl #2
  448a40:	ldrb	w7, [x1]
  448a44:	add	w8, w5, w2, lsl #1
  448a48:	sub	w2, w8, #0x30
  448a4c:	sub	w6, w7, #0x30
  448a50:	mov	w5, w7
  448a54:	sub	w3, w10, w6
  448a58:	and	w6, w6, #0xff
  448a5c:	cmp	w6, #0x9
  448a60:	b.ls	448a20 <ferror@plt+0x461a0>  // b.plast
  448a64:	cbz	w0, 448ac4 <ferror@plt+0x46244>
  448a68:	cmp	w8, #0x30
  448a6c:	b.ne	448a78 <ferror@plt+0x461f8>  // b.any
  448a70:	mov	w0, #0x1                   	// #1
  448a74:	ret
  448a78:	mov	w0, #0x0                   	// #0
  448a7c:	ret
  448a80:	add	x3, x1, #0x1
  448a84:	str	x3, [x4, #24]
  448a88:	ldrb	w2, [x1, #1]
  448a8c:	sub	w0, w2, #0x30
  448a90:	and	w0, w0, #0xff
  448a94:	cmp	w0, #0x9
  448a98:	b.hi	448a70 <ferror@plt+0x461f0>  // b.pmore
  448a9c:	mov	x1, x3
  448aa0:	mov	w0, #0x1                   	// #1
  448aa4:	b	448a08 <ferror@plt+0x46188>
  448aa8:	add	x1, x0, #0x2
  448aac:	str	x1, [x4, #24]
  448ab0:	mov	w12, #0x1                   	// #1
  448ab4:	ldrb	w2, [x0, #2]
  448ab8:	cmp	w2, #0x6e
  448abc:	b.ne	4489f4 <ferror@plt+0x46174>  // b.any
  448ac0:	b	448a80 <ferror@plt+0x46200>
  448ac4:	cmp	w12, #0x0
  448ac8:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  448acc:	b.le	448a70 <ferror@plt+0x461f0>
  448ad0:	cmp	w7, #0x5f
  448ad4:	b.ne	448a74 <ferror@plt+0x461f4>  // b.any
  448ad8:	add	x11, x11, #0x2
  448adc:	mov	w0, #0x1                   	// #1
  448ae0:	str	x11, [x4, #24]
  448ae4:	ret
  448ae8:	mov	x1, x0
  448aec:	ldr	x0, [x0, #24]
  448af0:	ldrb	w2, [x0]
  448af4:	cmp	w2, #0x54
  448af8:	b.ne	448bc8 <ferror@plt+0x46348>  // b.any
  448afc:	add	x2, x0, #0x1
  448b00:	str	x2, [x1, #24]
  448b04:	ldrb	w5, [x0, #1]
  448b08:	cmp	w5, #0x5f
  448b0c:	b.eq	448bd0 <ferror@plt+0x46350>  // b.none
  448b10:	sub	w0, w5, #0x30
  448b14:	and	w0, w0, #0xff
  448b18:	cmp	w0, #0x9
  448b1c:	b.hi	448bc8 <ferror@plt+0x46348>  // b.pmore
  448b20:	mov	w9, #0xcccd                	// #52429
  448b24:	mov	w0, #0x0                   	// #0
  448b28:	mov	w10, #0x7fffffff            	// #2147483647
  448b2c:	movk	w9, #0xcccc, lsl #16
  448b30:	b	448b44 <ferror@plt+0x462c4>
  448b34:	umull	x3, w3, w9
  448b38:	lsr	x3, x3, #35
  448b3c:	cmp	w3, w0
  448b40:	b.lt	448bc8 <ferror@plt+0x46348>  // b.tstop
  448b44:	mov	x8, x2
  448b48:	add	x2, x2, #0x1
  448b4c:	str	x2, [x1, #24]
  448b50:	add	w0, w0, w0, lsl #2
  448b54:	ldrb	w7, [x2]
  448b58:	add	w6, w5, w0, lsl #1
  448b5c:	sub	w0, w6, #0x30
  448b60:	sub	w4, w7, #0x30
  448b64:	mov	w5, w7
  448b68:	sub	w3, w10, w4
  448b6c:	and	w4, w4, #0xff
  448b70:	cmp	w4, #0x9
  448b74:	b.ls	448b34 <ferror@plt+0x462b4>  // b.plast
  448b78:	sub	w0, w6, #0x2f
  448b7c:	cmp	w7, #0x5f
  448b80:	b.ne	448bc8 <ferror@plt+0x46348>  // b.any
  448b84:	add	x8, x8, #0x2
  448b88:	str	x8, [x1, #24]
  448b8c:	ldp	w2, w3, [x1, #40]
  448b90:	cmp	w2, w3
  448b94:	b.ge	448bc8 <ferror@plt+0x46348>  // b.tcont
  448b98:	mov	w4, #0x18                  	// #24
  448b9c:	add	w5, w2, #0x1
  448ba0:	ldr	x3, [x1, #32]
  448ba4:	smull	x2, w2, w4
  448ba8:	sxtw	x6, w0
  448bac:	mov	w4, #0x5                   	// #5
  448bb0:	add	x0, x3, x2
  448bb4:	str	wzr, [x0, #4]
  448bb8:	str	w5, [x1, #40]
  448bbc:	str	w4, [x3, x2]
  448bc0:	str	x6, [x0, #8]
  448bc4:	ret
  448bc8:	mov	x0, #0x0                   	// #0
  448bcc:	ret
  448bd0:	add	x2, x0, #0x2
  448bd4:	mov	w0, #0x0                   	// #0
  448bd8:	str	x2, [x1, #24]
  448bdc:	b	448b8c <ferror@plt+0x4630c>
  448be0:	mov	x2, x0
  448be4:	cbnz	w1, 448c00 <ferror@plt+0x46380>
  448be8:	ldr	x0, [x0, #24]
  448bec:	ldrb	w1, [x0]
  448bf0:	cbz	w1, 448d28 <ferror@plt+0x464a8>
  448bf4:	add	x1, x0, #0x1
  448bf8:	str	x1, [x2, #24]
  448bfc:	ldrb	w1, [x0]
  448c00:	cmp	w1, #0x68
  448c04:	b.eq	448d44 <ferror@plt+0x464c4>  // b.none
  448c08:	cmp	w1, #0x76
  448c0c:	b.ne	448d28 <ferror@plt+0x464a8>  // b.any
  448c10:	ldr	x6, [x2, #24]
  448c14:	ldrb	w5, [x6]
  448c18:	cmp	w5, #0x6e
  448c1c:	b.eq	448d30 <ferror@plt+0x464b0>  // b.none
  448c20:	sub	w0, w5, #0x30
  448c24:	and	w0, w0, #0xff
  448c28:	cmp	w0, #0x9
  448c2c:	b.hi	448c88 <ferror@plt+0x46408>  // b.pmore
  448c30:	mov	w7, #0xcccd                	// #52429
  448c34:	add	x3, x6, #0x1
  448c38:	mov	w1, #0x0                   	// #0
  448c3c:	mov	w8, #0x7fffffff            	// #2147483647
  448c40:	movk	w7, #0xcccc, lsl #16
  448c44:	b	448c58 <ferror@plt+0x463d8>
  448c48:	umull	x0, w0, w7
  448c4c:	lsr	x0, x0, #35
  448c50:	cmp	w0, w1
  448c54:	b.lt	448d28 <ferror@plt+0x464a8>  // b.tstop
  448c58:	add	w1, w1, w1, lsl #2
  448c5c:	str	x3, [x2, #24]
  448c60:	mov	x6, x3
  448c64:	add	x3, x3, #0x1
  448c68:	add	w1, w5, w1, lsl #1
  448c6c:	ldurb	w5, [x3, #-1]
  448c70:	sub	w1, w1, #0x30
  448c74:	sub	w4, w5, #0x30
  448c78:	sub	w0, w8, w4
  448c7c:	and	w4, w4, #0xff
  448c80:	cmp	w4, #0x9
  448c84:	b.ls	448c48 <ferror@plt+0x463c8>  // b.plast
  448c88:	cmp	w5, #0x5f
  448c8c:	b.ne	448d28 <ferror@plt+0x464a8>  // b.any
  448c90:	add	x4, x6, #0x1
  448c94:	str	x4, [x2, #24]
  448c98:	ldrb	w0, [x6, #1]
  448c9c:	cmp	w0, #0x6e
  448ca0:	b.ne	448cb0 <ferror@plt+0x46430>  // b.any
  448ca4:	add	x4, x6, #0x2
  448ca8:	str	x4, [x2, #24]
  448cac:	ldrb	w0, [x6, #2]
  448cb0:	sub	w1, w0, #0x30
  448cb4:	and	w1, w1, #0xff
  448cb8:	cmp	w1, #0x9
  448cbc:	b.hi	448d10 <ferror@plt+0x46490>  // b.pmore
  448cc0:	mov	w7, #0xcccd                	// #52429
  448cc4:	mov	w1, #0x0                   	// #0
  448cc8:	mov	w6, #0x7fffffff            	// #2147483647
  448ccc:	movk	w7, #0xcccc, lsl #16
  448cd0:	b	448ce4 <ferror@plt+0x46464>
  448cd4:	umull	x3, w3, w7
  448cd8:	lsr	x3, x3, #35
  448cdc:	cmp	w3, w1
  448ce0:	b.lt	448d28 <ferror@plt+0x464a8>  // b.tstop
  448ce4:	add	x4, x4, #0x1
  448ce8:	add	w1, w1, w1, lsl #2
  448cec:	str	x4, [x2, #24]
  448cf0:	add	w1, w0, w1, lsl #1
  448cf4:	ldrb	w0, [x4]
  448cf8:	sub	w1, w1, #0x30
  448cfc:	sub	w5, w0, #0x30
  448d00:	sub	w3, w6, w5
  448d04:	and	w5, w5, #0xff
  448d08:	cmp	w5, #0x9
  448d0c:	b.ls	448cd4 <ferror@plt+0x46454>  // b.plast
  448d10:	cmp	w0, #0x5f
  448d14:	b.ne	448d28 <ferror@plt+0x464a8>  // b.any
  448d18:	add	x4, x4, #0x1
  448d1c:	mov	w0, #0x1                   	// #1
  448d20:	str	x4, [x2, #24]
  448d24:	ret
  448d28:	mov	w0, #0x0                   	// #0
  448d2c:	ret
  448d30:	add	x0, x6, #0x1
  448d34:	str	x0, [x2, #24]
  448d38:	ldrb	w5, [x6, #1]
  448d3c:	mov	x6, x0
  448d40:	b	448c20 <ferror@plt+0x463a0>
  448d44:	ldr	x4, [x2, #24]
  448d48:	ldrb	w0, [x4]
  448d4c:	cmp	w0, #0x6e
  448d50:	b.ne	448d64 <ferror@plt+0x464e4>  // b.any
  448d54:	add	x1, x4, #0x1
  448d58:	str	x1, [x2, #24]
  448d5c:	ldrb	w0, [x4, #1]
  448d60:	mov	x4, x1
  448d64:	sub	w1, w0, #0x30
  448d68:	and	w1, w1, #0xff
  448d6c:	cmp	w1, #0x9
  448d70:	b.hi	448d10 <ferror@plt+0x46490>  // b.pmore
  448d74:	mov	w7, #0xcccd                	// #52429
  448d78:	add	x5, x4, #0x1
  448d7c:	mov	w1, #0x0                   	// #0
  448d80:	mov	w8, #0x7fffffff            	// #2147483647
  448d84:	movk	w7, #0xcccc, lsl #16
  448d88:	b	448d9c <ferror@plt+0x4651c>
  448d8c:	umull	x3, w3, w7
  448d90:	lsr	x3, x3, #35
  448d94:	cmp	w3, w1
  448d98:	b.lt	448d28 <ferror@plt+0x464a8>  // b.tstop
  448d9c:	add	w1, w1, w1, lsl #2
  448da0:	str	x5, [x2, #24]
  448da4:	mov	x4, x5
  448da8:	add	x5, x5, #0x1
  448dac:	add	w1, w0, w1, lsl #1
  448db0:	ldurb	w0, [x5, #-1]
  448db4:	sub	w1, w1, #0x30
  448db8:	sub	w6, w0, #0x30
  448dbc:	sub	w3, w8, w6
  448dc0:	and	w6, w6, #0xff
  448dc4:	cmp	w6, #0x9
  448dc8:	b.ls	448d8c <ferror@plt+0x4650c>  // b.plast
  448dcc:	b	448d10 <ferror@plt+0x46490>
  448dd0:	stp	x29, x30, [sp, #-256]!
  448dd4:	mov	x29, sp
  448dd8:	stp	x19, x20, [sp, #16]
  448ddc:	mov	x19, x0
  448de0:	cbz	x2, 448e6c <ferror@plt+0x465ec>
  448de4:	stp	x21, x22, [sp, #32]
  448de8:	ldr	w21, [x0, #304]
  448dec:	cbnz	w21, 448e34 <ferror@plt+0x465b4>
  448df0:	ldr	w20, [x2]
  448df4:	stp	x23, x24, [sp, #48]
  448df8:	mov	x24, x2
  448dfc:	cmp	w20, #0x50
  448e00:	b.ls	448e18 <ferror@plt+0x46598>  // b.plast
  448e04:	mov	w0, #0x1                   	// #1
  448e08:	ldp	x21, x22, [sp, #32]
  448e0c:	ldp	x23, x24, [sp, #48]
  448e10:	str	w0, [x19, #304]
  448e14:	b	448e38 <ferror@plt+0x465b8>
  448e18:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  448e1c:	mov	w22, w1
  448e20:	add	x0, x0, #0x728
  448e24:	ldrh	w0, [x0, w20, uxtw #1]
  448e28:	adr	x1, 448e34 <ferror@plt+0x465b4>
  448e2c:	add	x0, x1, w0, sxth #2
  448e30:	br	x0
  448e34:	ldp	x21, x22, [sp, #32]
  448e38:	ldp	x19, x20, [sp, #16]
  448e3c:	ldp	x29, x30, [sp], #256
  448e40:	ret
  448e44:	ldr	x0, [x2, #16]
  448e48:	ldr	w1, [x0]
  448e4c:	cmp	w1, #0x3b
  448e50:	b.ne	448e64 <ferror@plt+0x465e4>  // b.any
  448e54:	ldr	x0, [x0, #16]
  448e58:	ldr	w0, [x0]
  448e5c:	cmp	w0, #0x3c
  448e60:	b.eq	450d9c <ferror@plt+0x4e51c>  // b.none
  448e64:	ldp	x21, x22, [sp, #32]
  448e68:	ldp	x23, x24, [sp, #48]
  448e6c:	mov	w0, #0x1                   	// #1
  448e70:	str	w0, [x19, #304]
  448e74:	ldp	x19, x20, [sp, #16]
  448e78:	ldp	x29, x30, [sp], #256
  448e7c:	ret
  448e80:	stp	x25, x26, [sp, #64]
  448e84:	add	x0, sp, #0x80
  448e88:	ldp	x1, x2, [x19, #288]
  448e8c:	stp	x2, x24, [sp, #128]
  448e90:	str	wzr, [sp, #144]
  448e94:	str	x1, [sp, #152]
  448e98:	ldr	x3, [x24, #8]
  448e9c:	str	x0, [x19, #296]
  448ea0:	mov	x25, x3
  448ea4:	cbnz	x25, 44c484 <ferror@plt+0x49c04>
  448ea8:	mov	w0, #0x1                   	// #1
  448eac:	str	w0, [x19, #304]
  448eb0:	mov	x2, x24
  448eb4:	mov	w1, w22
  448eb8:	mov	x0, x19
  448ebc:	bl	4524e8 <ferror@plt+0x4fc68>
  448ec0:	ldr	x0, [sp, #128]
  448ec4:	str	x0, [x19, #296]
  448ec8:	cbz	w21, 44c4f8 <ferror@plt+0x49c78>
  448ecc:	ldp	x21, x22, [sp, #32]
  448ed0:	ldp	x25, x26, [sp, #64]
  448ed4:	str	x23, [x19, #288]
  448ed8:	ldp	x23, x24, [sp, #48]
  448edc:	b	448e38 <ferror@plt+0x465b8>
  448ee0:	ldr	x2, [x19, #296]
  448ee4:	stp	x25, x26, [sp, #64]
  448ee8:	mov	x0, x2
  448eec:	ldr	x25, [x24, #8]
  448ef0:	cbz	x2, 448f24 <ferror@plt+0x466a4>
  448ef4:	nop
  448ef8:	ldr	w1, [x0, #16]
  448efc:	cbnz	w1, 448f1c <ferror@plt+0x4669c>
  448f00:	ldr	x1, [x0, #8]
  448f04:	ldr	w1, [x1]
  448f08:	sub	w3, w1, #0x19
  448f0c:	cmp	w3, #0x2
  448f10:	b.hi	4503f4 <ferror@plt+0x4db74>  // b.pmore
  448f14:	cmp	w20, w1
  448f18:	b.eq	450400 <ferror@plt+0x4db80>  // b.none
  448f1c:	ldr	x0, [x0]
  448f20:	cbnz	x0, 448ef8 <ferror@plt+0x46678>
  448f24:	ldr	x4, [x19, #288]
  448f28:	b	4491f8 <ferror@plt+0x46978>
  448f2c:	ldr	x20, [x2, #8]
  448f30:	cbz	x20, 448f9c <ferror@plt+0x4671c>
  448f34:	ldr	w0, [x20, #4]
  448f38:	cmp	w0, #0x1
  448f3c:	b.gt	44f710 <ferror@plt+0x4ce90>
  448f40:	ldr	w1, [x19, #308]
  448f44:	cmp	w1, #0x400
  448f48:	b.gt	44f710 <ferror@plt+0x4ce90>
  448f4c:	ldr	x3, [x19, #328]
  448f50:	add	w0, w0, #0x1
  448f54:	str	w0, [x20, #4]
  448f58:	add	w1, w1, #0x1
  448f5c:	add	x0, sp, #0x80
  448f60:	str	w1, [x19, #308]
  448f64:	str	x0, [x19, #328]
  448f68:	mov	w1, w22
  448f6c:	mov	x0, x19
  448f70:	mov	x2, x20
  448f74:	stp	x20, x3, [sp, #128]
  448f78:	bl	448dd0 <ferror@plt+0x46550>
  448f7c:	ldr	w1, [x20, #4]
  448f80:	ldr	x0, [sp, #136]
  448f84:	str	x0, [x19, #328]
  448f88:	ldr	w0, [x19, #308]
  448f8c:	sub	w1, w1, #0x1
  448f90:	str	w1, [x20, #4]
  448f94:	sub	w0, w0, #0x1
  448f98:	str	w0, [x19, #308]
  448f9c:	ldr	x0, [x24, #16]
  448fa0:	cbz	x0, 450378 <ferror@plt+0x4daf8>
  448fa4:	ldr	x1, [x19, #256]
  448fa8:	cmp	x1, #0xfd
  448fac:	b.ls	44f7e0 <ferror@plt+0x4cf60>  // b.plast
  448fb0:	strb	wzr, [x19, x1]
  448fb4:	mov	x0, x19
  448fb8:	ldp	x3, x2, [x19, #272]
  448fbc:	blr	x3
  448fc0:	ldr	x0, [x19, #320]
  448fc4:	mov	w1, #0x2c                  	// #44
  448fc8:	mov	x2, #0x1                   	// #1
  448fcc:	strb	w1, [x19]
  448fd0:	add	x0, x0, x2
  448fd4:	str	x0, [x19, #320]
  448fd8:	add	x21, x2, #0x1
  448fdc:	str	x21, [x19, #256]
  448fe0:	mov	w0, #0x20                  	// #32
  448fe4:	strb	w0, [x19, x2]
  448fe8:	strb	w0, [x19, #264]
  448fec:	ldr	x20, [x24, #16]
  448ff0:	cbz	x20, 44d740 <ferror@plt+0x4aec0>
  448ff4:	ldr	w0, [x20, #4]
  448ff8:	cmp	w0, #0x1
  448ffc:	b.gt	44d740 <ferror@plt+0x4aec0>
  449000:	ldr	w1, [x19, #308]
  449004:	cmp	w1, #0x400
  449008:	b.gt	44d740 <ferror@plt+0x4aec0>
  44900c:	ldp	x23, x3, [x19, #320]
  449010:	add	w0, w0, #0x1
  449014:	str	w0, [x20, #4]
  449018:	add	w1, w1, #0x1
  44901c:	add	x0, sp, #0x80
  449020:	str	w1, [x19, #308]
  449024:	str	x0, [x19, #328]
  449028:	mov	w1, w22
  44902c:	mov	x0, x19
  449030:	mov	x2, x20
  449034:	stp	x20, x3, [sp, #128]
  449038:	bl	448dd0 <ferror@plt+0x46550>
  44903c:	ldr	w1, [x20, #4]
  449040:	ldr	x0, [sp, #136]
  449044:	sub	w1, w1, #0x1
  449048:	str	x0, [x19, #328]
  44904c:	ldr	w0, [x19, #308]
  449050:	str	w1, [x20, #4]
  449054:	ldr	x1, [x19, #320]
  449058:	sub	w0, w0, #0x1
  44905c:	str	w0, [x19, #308]
  449060:	cmp	x1, x23
  449064:	b.eq	451000 <ferror@plt+0x4e780>  // b.none
  449068:	ldp	x21, x22, [sp, #32]
  44906c:	ldp	x23, x24, [sp, #48]
  449070:	b	448e38 <ferror@plt+0x465b8>
  449074:	ldr	x20, [x2, #8]
  449078:	cbz	x20, 44d120 <ferror@plt+0x4a8a0>
  44907c:	ldr	w0, [x20, #4]
  449080:	cmp	w0, #0x1
  449084:	b.gt	44d120 <ferror@plt+0x4a8a0>
  449088:	ldr	w1, [x19, #308]
  44908c:	cmp	w1, #0x400
  449090:	b.gt	44d120 <ferror@plt+0x4a8a0>
  449094:	ldr	x3, [x19, #328]
  449098:	add	w0, w0, #0x1
  44909c:	str	w0, [x20, #4]
  4490a0:	add	w1, w1, #0x1
  4490a4:	add	x0, sp, #0x80
  4490a8:	str	w1, [x19, #308]
  4490ac:	str	x0, [x19, #328]
  4490b0:	mov	w1, w22
  4490b4:	mov	x0, x19
  4490b8:	mov	x2, x20
  4490bc:	stp	x20, x3, [sp, #128]
  4490c0:	bl	448dd0 <ferror@plt+0x46550>
  4490c4:	ldr	w1, [x20, #4]
  4490c8:	ldr	x0, [sp, #136]
  4490cc:	str	x0, [x19, #328]
  4490d0:	ldr	w0, [x19, #308]
  4490d4:	sub	w1, w1, #0x1
  4490d8:	str	w1, [x20, #4]
  4490dc:	sub	w0, w0, #0x1
  4490e0:	str	w0, [x19, #308]
  4490e4:	ldr	x1, [x19, #256]
  4490e8:	tbz	w22, #2, 44ffdc <ferror@plt+0x4d75c>
  4490ec:	add	x0, x1, #0x1
  4490f0:	cmp	x1, #0xff
  4490f4:	b.ne	44911c <ferror@plt+0x4689c>  // b.any
  4490f8:	ldp	x3, x2, [x19, #272]
  4490fc:	strb	wzr, [x19, #255]
  449100:	mov	x0, x19
  449104:	blr	x3
  449108:	ldr	x2, [x19, #320]
  44910c:	mov	x0, #0x1                   	// #1
  449110:	mov	x1, #0x0                   	// #0
  449114:	add	x2, x2, x0
  449118:	str	x2, [x19, #320]
  44911c:	str	x0, [x19, #256]
  449120:	mov	w2, #0x2e                  	// #46
  449124:	strb	w2, [x19, x1]
  449128:	strb	w2, [x19, #264]
  44912c:	ldr	x23, [x24, #16]
  449130:	ldr	w1, [x23]
  449134:	cmp	w1, #0x47
  449138:	b.eq	450830 <ferror@plt+0x4dfb0>  // b.none
  44913c:	ldr	w0, [x23, #4]
  449140:	cmp	w0, #0x1
  449144:	b.gt	44d10c <ferror@plt+0x4a88c>
  449148:	ldr	w1, [x19, #308]
  44914c:	cmp	w1, #0x400
  449150:	b.gt	44d10c <ferror@plt+0x4a88c>
  449154:	ldr	x3, [x19, #328]
  449158:	add	w0, w0, #0x1
  44915c:	str	w0, [x23, #4]
  449160:	add	w1, w1, #0x1
  449164:	add	x0, sp, #0x80
  449168:	str	w1, [x19, #308]
  44916c:	str	x0, [x19, #328]
  449170:	mov	w1, w22
  449174:	mov	x2, x23
  449178:	mov	x0, x19
  44917c:	stp	x23, x3, [sp, #128]
  449180:	bl	448dd0 <ferror@plt+0x46550>
  449184:	ldr	w1, [x23, #4]
  449188:	ldr	x0, [sp, #136]
  44918c:	sub	w1, w1, #0x1
  449190:	ldp	x21, x22, [sp, #32]
  449194:	str	x0, [x19, #328]
  449198:	ldr	w0, [x19, #308]
  44919c:	str	w1, [x23, #4]
  4491a0:	sub	w0, w0, #0x1
  4491a4:	ldp	x23, x24, [sp, #48]
  4491a8:	str	w0, [x19, #308]
  4491ac:	b	448e38 <ferror@plt+0x465b8>
  4491b0:	ldr	w0, [x19, #312]
  4491b4:	ldr	x3, [x2, #8]
  4491b8:	stp	x25, x26, [sp, #64]
  4491bc:	mov	x25, x3
  4491c0:	ldr	w1, [x3]
  4491c4:	cbnz	w0, 44d854 <ferror@plt+0x4afd4>
  4491c8:	cmp	w1, #0x5
  4491cc:	b.eq	450c14 <ferror@plt+0x4e394>  // b.none
  4491d0:	ldr	x4, [x19, #288]
  4491d4:	mov	x0, x3
  4491d8:	mov	w21, #0x0                   	// #0
  4491dc:	cmp	w1, #0x23
  4491e0:	ldr	x2, [x19, #296]
  4491e4:	b.eq	44d75c <ferror@plt+0x4aedc>  // b.none
  4491e8:	cmp	w20, w1
  4491ec:	b.eq	44d75c <ferror@plt+0x4aedc>  // b.none
  4491f0:	cmp	w1, #0x24
  4491f4:	b.eq	44c468 <ferror@plt+0x49be8>  // b.none
  4491f8:	add	x0, sp, #0x80
  4491fc:	stp	x2, x24, [sp, #128]
  449200:	str	wzr, [sp, #144]
  449204:	str	x4, [sp, #152]
  449208:	str	x0, [x19, #296]
  44920c:	b	448ea4 <ferror@plt+0x46624>
  449210:	ldr	x20, [x24, #16]
  449214:	add	x0, sp, #0x80
  449218:	ldp	x1, x2, [x19, #288]
  44921c:	stp	x2, x24, [sp, #128]
  449220:	str	wzr, [sp, #144]
  449224:	str	x1, [sp, #152]
  449228:	str	x0, [x19, #296]
  44922c:	cbz	x20, 44d1d8 <ferror@plt+0x4a958>
  449230:	ldr	w0, [x20, #4]
  449234:	cmp	w0, #0x1
  449238:	b.gt	44d1d8 <ferror@plt+0x4a958>
  44923c:	ldr	w1, [x19, #308]
  449240:	cmp	w1, #0x400
  449244:	b.gt	44d1d8 <ferror@plt+0x4a958>
  449248:	ldr	x3, [x19, #328]
  44924c:	add	w0, w0, #0x1
  449250:	str	w0, [x20, #4]
  449254:	add	w1, w1, #0x1
  449258:	add	x0, sp, #0x70
  44925c:	str	w1, [x19, #308]
  449260:	str	x0, [x19, #328]
  449264:	mov	x2, x20
  449268:	mov	w1, w22
  44926c:	mov	x0, x19
  449270:	stp	x20, x3, [sp, #112]
  449274:	bl	448dd0 <ferror@plt+0x46550>
  449278:	ldr	w1, [x20, #4]
  44927c:	ldr	x0, [sp, #120]
  449280:	str	x0, [x19, #328]
  449284:	ldr	w2, [sp, #144]
  449288:	sub	w1, w1, #0x1
  44928c:	ldr	w0, [x19, #308]
  449290:	str	w1, [x20, #4]
  449294:	sub	w0, w0, #0x1
  449298:	str	w0, [x19, #308]
  44929c:	cbz	w2, 44d1e0 <ferror@plt+0x4a960>
  4492a0:	ldr	x0, [sp, #128]
  4492a4:	ldp	x21, x22, [sp, #32]
  4492a8:	ldp	x23, x24, [sp, #48]
  4492ac:	str	x0, [x19, #296]
  4492b0:	b	448e38 <ferror@plt+0x465b8>
  4492b4:	ldr	x23, [x2, #8]
  4492b8:	mov	w21, #0x0                   	// #0
  4492bc:	ldr	w0, [x23]
  4492c0:	cmp	w0, #0x27
  4492c4:	b.eq	44fc24 <ferror@plt+0x4d3a4>  // b.none
  4492c8:	ldr	x0, [x19, #256]
  4492cc:	cmp	x0, #0xff
  4492d0:	b.eq	450108 <ferror@plt+0x4d888>  // b.none
  4492d4:	add	x1, x0, #0x1
  4492d8:	str	x1, [x19, #256]
  4492dc:	mov	w2, #0x28                  	// #40
  4492e0:	strb	w2, [x19, x0]
  4492e4:	strb	w2, [x19, #264]
  4492e8:	ldr	w0, [x23, #4]
  4492ec:	cmp	w0, #0x1
  4492f0:	b.gt	44d774 <ferror@plt+0x4aef4>
  4492f4:	ldr	w2, [x19, #308]
  4492f8:	cmp	w2, #0x400
  4492fc:	b.gt	44d774 <ferror@plt+0x4aef4>
  449300:	ldr	x3, [x19, #328]
  449304:	add	w0, w0, #0x1
  449308:	str	w0, [x23, #4]
  44930c:	add	w2, w2, #0x1
  449310:	add	x0, sp, #0x80
  449314:	str	w2, [x19, #308]
  449318:	str	x0, [x19, #328]
  44931c:	mov	w1, w22
  449320:	mov	x2, x23
  449324:	mov	x0, x19
  449328:	stp	x23, x3, [sp, #128]
  44932c:	bl	448dd0 <ferror@plt+0x46550>
  449330:	ldr	w2, [x23, #4]
  449334:	ldr	x0, [sp, #136]
  449338:	str	x0, [x19, #328]
  44933c:	ldr	w0, [x19, #308]
  449340:	sub	w2, w2, #0x1
  449344:	ldr	x1, [x19, #256]
  449348:	str	w2, [x23, #4]
  44934c:	sub	w0, w0, #0x1
  449350:	str	w0, [x19, #308]
  449354:	cmp	x1, #0xff
  449358:	b.ne	44f71c <ferror@plt+0x4ce9c>  // b.any
  44935c:	ldp	x3, x2, [x19, #272]
  449360:	strb	wzr, [x19, #255]
  449364:	mov	x0, x19
  449368:	blr	x3
  44936c:	ldr	x1, [x19, #320]
  449370:	mov	w0, #0x29                  	// #41
  449374:	strb	w0, [x19]
  449378:	strb	w0, [x19, #264]
  44937c:	mov	x0, #0x1                   	// #1
  449380:	add	x1, x1, x0
  449384:	str	x0, [x19, #256]
  449388:	str	x1, [x19, #320]
  44938c:	ldr	w1, [x24]
  449390:	cmp	w1, #0x3e
  449394:	b.eq	450068 <ferror@plt+0x4d7e8>  // b.none
  449398:	cmp	w21, #0x8
  44939c:	b.eq	44f770 <ferror@plt+0x4cef0>  // b.none
  4493a0:	ldr	x20, [x24, #16]
  4493a4:	cbz	x20, 44d358 <ferror@plt+0x4aad8>
  4493a8:	ldr	w0, [x20, #4]
  4493ac:	cmp	w0, #0x1
  4493b0:	b.gt	44d358 <ferror@plt+0x4aad8>
  4493b4:	ldr	w1, [x19, #308]
  4493b8:	cmp	w1, #0x400
  4493bc:	b.gt	44d358 <ferror@plt+0x4aad8>
  4493c0:	ldr	x3, [x19, #328]
  4493c4:	add	w0, w0, #0x1
  4493c8:	str	w0, [x20, #4]
  4493cc:	add	w1, w1, #0x1
  4493d0:	add	x0, sp, #0x80
  4493d4:	str	w1, [x19, #308]
  4493d8:	str	x0, [x19, #328]
  4493dc:	mov	w1, w22
  4493e0:	mov	x0, x19
  4493e4:	mov	x2, x20
  4493e8:	stp	x20, x3, [sp, #128]
  4493ec:	bl	448dd0 <ferror@plt+0x46550>
  4493f0:	ldr	w1, [x20, #4]
  4493f4:	ldr	x0, [sp, #136]
  4493f8:	str	x0, [x19, #328]
  4493fc:	ldr	w0, [x19, #308]
  449400:	sub	w1, w1, #0x1
  449404:	str	w1, [x20, #4]
  449408:	sub	w0, w0, #0x1
  44940c:	str	w0, [x19, #308]
  449410:	cmp	w21, #0x8
  449414:	b.eq	4502fc <ferror@plt+0x4da7c>  // b.none
  449418:	ldp	x21, x22, [sp, #32]
  44941c:	ldp	x23, x24, [sp, #48]
  449420:	b	448e38 <ferror@plt+0x465b8>
  449424:	ldr	x0, [x19, #256]
  449428:	cmp	x0, #0xff
  44942c:	b.eq	44ef50 <ferror@plt+0x4c6d0>  // b.none
  449430:	add	x1, x0, #0x1
  449434:	str	x1, [x19, #256]
  449438:	mov	w2, #0x6f                  	// #111
  44943c:	strb	w2, [x19, x0]
  449440:	strb	w2, [x19, #264]
  449444:	cmp	x1, #0xff
  449448:	b.ne	44e89c <ferror@plt+0x4c01c>  // b.any
  44944c:	ldp	x3, x2, [x19, #272]
  449450:	strb	wzr, [x19, #255]
  449454:	mov	x0, x19
  449458:	blr	x3
  44945c:	ldr	x0, [x19, #320]
  449460:	mov	w2, #0x6570                	// #25968
  449464:	mov	w1, #0x72                  	// #114
  449468:	mov	x3, #0x3                   	// #3
  44946c:	add	x0, x0, #0x1
  449470:	strh	w2, [x19]
  449474:	strb	w1, [x19, #2]
  449478:	str	x0, [x19, #320]
  44947c:	add	x1, x3, #0x1
  449480:	str	x1, [x19, #256]
  449484:	mov	w0, #0x61                  	// #97
  449488:	strb	w0, [x19, x3]
  44948c:	strb	w0, [x19, #264]
  449490:	cmp	x1, #0xff
  449494:	b.ne	44e8ec <ferror@plt+0x4c06c>  // b.any
  449498:	ldp	x3, x2, [x19, #272]
  44949c:	strb	wzr, [x19, #255]
  4494a0:	mov	x0, x19
  4494a4:	blr	x3
  4494a8:	ldr	x0, [x19, #320]
  4494ac:	mov	w2, #0x6f74                	// #28532
  4494b0:	mov	x1, #0x2                   	// #2
  4494b4:	strh	w2, [x19]
  4494b8:	add	x0, x0, #0x1
  4494bc:	str	x0, [x19, #320]
  4494c0:	add	x0, x1, #0x1
  4494c4:	mov	w2, #0x72                  	// #114
  4494c8:	strb	w2, [x19, x1]
  4494cc:	add	x3, x0, #0x1
  4494d0:	str	x3, [x19, #256]
  4494d4:	mov	w1, #0x20                  	// #32
  4494d8:	strb	w1, [x19, x0]
  4494dc:	strb	w1, [x19, #264]
  4494e0:	ldr	x0, [x19, #368]
  4494e4:	cbz	x0, 4494f8 <ferror@plt+0x46c78>
  4494e8:	ldr	x2, [x19, #288]
  4494ec:	add	x1, sp, #0x70
  4494f0:	stp	x2, x0, [sp, #112]
  4494f4:	str	x1, [x19, #288]
  4494f8:	ldr	x20, [x24, #8]
  4494fc:	ldr	w1, [x20]
  449500:	cmp	w1, #0x4
  449504:	b.eq	44fd68 <ferror@plt+0x4d4e8>  // b.none
  449508:	ldr	w1, [x20, #4]
  44950c:	cmp	w1, #0x1
  449510:	b.gt	44d768 <ferror@plt+0x4aee8>
  449514:	ldr	w2, [x19, #308]
  449518:	cmp	w2, #0x400
  44951c:	b.gt	44d768 <ferror@plt+0x4aee8>
  449520:	ldr	x3, [x19, #328]
  449524:	add	w1, w1, #0x1
  449528:	str	w1, [x20, #4]
  44952c:	add	w2, w2, #0x1
  449530:	add	x0, sp, #0x80
  449534:	str	w2, [x19, #308]
  449538:	str	x0, [x19, #328]
  44953c:	mov	w1, w22
  449540:	mov	x2, x20
  449544:	mov	x0, x19
  449548:	stp	x20, x3, [sp, #128]
  44954c:	bl	448dd0 <ferror@plt+0x46550>
  449550:	ldr	w2, [x20, #4]
  449554:	ldr	x0, [sp, #136]
  449558:	str	x0, [x19, #328]
  44955c:	ldr	w1, [x19, #308]
  449560:	sub	w2, w2, #0x1
  449564:	ldr	x0, [x19, #368]
  449568:	str	w2, [x20, #4]
  44956c:	sub	w1, w1, #0x1
  449570:	str	w1, [x19, #308]
  449574:	cbz	x0, 4509e0 <ferror@plt+0x4e160>
  449578:	ldr	x0, [sp, #112]
  44957c:	ldp	x21, x22, [sp, #32]
  449580:	ldp	x23, x24, [sp, #48]
  449584:	str	x0, [x19, #288]
  449588:	b	448e38 <ferror@plt+0x465b8>
  44958c:	ldr	x20, [x2, #8]
  449590:	ldr	x0, [x19, #256]
  449594:	cmp	x0, #0xff
  449598:	cbnz	x20, 44d9d8 <ferror@plt+0x4b158>
  44959c:	b.eq	450e40 <ferror@plt+0x4e5c0>  // b.none
  4495a0:	add	x1, x0, #0x1
  4495a4:	str	x1, [x19, #256]
  4495a8:	mov	w2, #0x74                  	// #116
  4495ac:	strb	w2, [x19, x0]
  4495b0:	strb	w2, [x19, #264]
  4495b4:	cmp	x1, #0xff
  4495b8:	b.ne	450420 <ferror@plt+0x4dba0>  // b.any
  4495bc:	ldp	x3, x2, [x19, #272]
  4495c0:	strb	wzr, [x19, #255]
  4495c4:	mov	x0, x19
  4495c8:	blr	x3
  4495cc:	ldr	x0, [x19, #320]
  4495d0:	mov	w2, #0x68                  	// #104
  4495d4:	mov	x1, #0x1                   	// #1
  4495d8:	strb	w2, [x19]
  4495dc:	add	x0, x0, x1
  4495e0:	str	x0, [x19, #320]
  4495e4:	add	x0, x1, #0x1
  4495e8:	mov	w2, #0x69                  	// #105
  4495ec:	strb	w2, [x19, x1]
  4495f0:	add	x1, x0, #0x1
  4495f4:	str	x1, [x19, #256]
  4495f8:	mov	w1, #0x73                  	// #115
  4495fc:	strb	w1, [x19, x0]
  449600:	strb	w1, [x19, #264]
  449604:	ldp	x21, x22, [sp, #32]
  449608:	ldp	x23, x24, [sp, #48]
  44960c:	b	448e38 <ferror@plt+0x465b8>
  449610:	ldr	x20, [x2, #16]
  449614:	cbz	x20, 44d12c <ferror@plt+0x4a8ac>
  449618:	ldr	w0, [x20, #4]
  44961c:	cmp	w0, #0x1
  449620:	b.gt	44d12c <ferror@plt+0x4a8ac>
  449624:	ldr	w1, [x19, #308]
  449628:	cmp	w1, #0x400
  44962c:	b.gt	44d12c <ferror@plt+0x4a8ac>
  449630:	ldr	x3, [x19, #328]
  449634:	add	w0, w0, #0x1
  449638:	str	w0, [x20, #4]
  44963c:	add	w1, w1, #0x1
  449640:	add	x0, sp, #0x80
  449644:	str	w1, [x19, #308]
  449648:	str	x0, [x19, #328]
  44964c:	mov	w1, w22
  449650:	mov	x0, x19
  449654:	mov	x2, x20
  449658:	stp	x20, x3, [sp, #128]
  44965c:	bl	448dd0 <ferror@plt+0x46550>
  449660:	ldr	w1, [x20, #4]
  449664:	ldr	x0, [sp, #136]
  449668:	sub	w1, w1, #0x1
  44966c:	ldp	x21, x22, [sp, #32]
  449670:	ldp	x23, x24, [sp, #48]
  449674:	str	x0, [x19, #328]
  449678:	ldr	w0, [x19, #308]
  44967c:	str	w1, [x20, #4]
  449680:	sub	w0, w0, #0x1
  449684:	str	w0, [x19, #308]
  449688:	b	448e38 <ferror@plt+0x465b8>
  44968c:	ldrsw	x21, [x2, #16]
  449690:	ldr	x20, [x2, #8]
  449694:	tbnz	w22, #2, 44d8e8 <ferror@plt+0x4b068>
  449698:	cbz	x21, 45181c <ferror@plt+0x4ef9c>
  44969c:	add	x22, x20, x21
  4496a0:	mov	x23, #0x1                   	// #1
  4496a4:	ldr	x1, [x19, #256]
  4496a8:	b	449704 <ferror@plt+0x46e84>
  4496ac:	ldp	x3, x2, [x19, #272]
  4496b0:	strb	wzr, [x19, #255]
  4496b4:	mov	x0, x19
  4496b8:	add	x20, x20, #0x1
  4496bc:	blr	x3
  4496c0:	strb	w21, [x19]
  4496c4:	ldr	x0, [x19, #320]
  4496c8:	str	x23, [x19, #256]
  4496cc:	strb	w21, [x19, #264]
  4496d0:	cmp	x20, x22
  4496d4:	add	x0, x0, #0x1
  4496d8:	str	x0, [x19, #320]
  4496dc:	b.eq	45107c <ferror@plt+0x4e7fc>  // b.none
  4496e0:	ldrb	w21, [x20]
  4496e4:	mov	x0, #0x1                   	// #1
  4496e8:	add	x1, x0, #0x1
  4496ec:	str	x1, [x19, #256]
  4496f0:	strb	w21, [x19, x0]
  4496f4:	add	x20, x20, #0x1
  4496f8:	strb	w21, [x19, #264]
  4496fc:	cmp	x22, x20
  449700:	b.eq	4503a8 <ferror@plt+0x4db28>  // b.none
  449704:	ldrb	w21, [x20]
  449708:	cmp	x1, #0xff
  44970c:	b.eq	4496ac <ferror@plt+0x46e2c>  // b.none
  449710:	mov	x0, x1
  449714:	b	4496e8 <ferror@plt+0x46e68>
  449718:	stp	x25, x26, [sp, #64]
  44971c:	ldr	x25, [x2, #8]
  449720:	ldr	x23, [x19, #296]
  449724:	str	xzr, [x19, #296]
  449728:	cbz	x25, 450b70 <ferror@plt+0x4e2f0>
  44972c:	ldr	w4, [x25]
  449730:	ldr	x3, [x19, #288]
  449734:	stp	xzr, x25, [sp, #128]
  449738:	sub	w1, w4, #0x1c
  44973c:	str	wzr, [sp, #144]
  449740:	cmp	w1, #0x34
  449744:	str	x3, [sp, #152]
  449748:	b.hi	449764 <ferror@plt+0x46ee4>  // b.pmore
  44974c:	mov	x0, #0x1                   	// #1
  449750:	mov	x2, #0x1f                  	// #31
  449754:	movk	x2, #0x1a, lsl #48
  449758:	lsl	x1, x0, x1
  44975c:	tst	x1, x2
  449760:	b.ne	44db20 <ferror@plt+0x4b2a0>  // b.any
  449764:	add	x21, sp, #0x80
  449768:	mov	w20, #0x1                   	// #1
  44976c:	mov	x1, x21
  449770:	str	x1, [x19, #296]
  449774:	cmp	w4, #0x2
  449778:	b.eq	450a00 <ferror@plt+0x4e180>  // b.none
  44977c:	cmp	w4, #0x4
  449780:	b.ne	449790 <ferror@plt+0x46f10>  // b.any
  449784:	add	x0, sp, #0x60
  449788:	stp	x3, x25, [sp, #96]
  44978c:	str	x0, [x19, #288]
  449790:	ldr	x24, [x24, #16]
  449794:	cbz	x24, 44f788 <ferror@plt+0x4cf08>
  449798:	ldr	w0, [x24, #4]
  44979c:	cmp	w0, #0x1
  4497a0:	b.gt	44f788 <ferror@plt+0x4cf08>
  4497a4:	ldr	w1, [x19, #308]
  4497a8:	cmp	w1, #0x400
  4497ac:	b.gt	44f788 <ferror@plt+0x4cf08>
  4497b0:	ldr	x3, [x19, #328]
  4497b4:	add	w0, w0, #0x1
  4497b8:	str	w0, [x24, #4]
  4497bc:	add	w1, w1, #0x1
  4497c0:	add	x0, sp, #0x70
  4497c4:	str	w1, [x19, #308]
  4497c8:	str	x0, [x19, #328]
  4497cc:	mov	w1, w22
  4497d0:	mov	x0, x19
  4497d4:	mov	x2, x24
  4497d8:	stp	x24, x3, [sp, #112]
  4497dc:	bl	448dd0 <ferror@plt+0x46550>
  4497e0:	ldr	w1, [x24, #4]
  4497e4:	ldr	x0, [sp, #120]
  4497e8:	str	x0, [x19, #328]
  4497ec:	ldr	w0, [x19, #308]
  4497f0:	sub	w1, w1, #0x1
  4497f4:	str	w1, [x24, #4]
  4497f8:	sub	w0, w0, #0x1
  4497fc:	str	w0, [x19, #308]
  449800:	ldr	w0, [x25]
  449804:	cmp	w0, #0x4
  449808:	b.ne	449814 <ferror@plt+0x46f94>  // b.any
  44980c:	ldr	x0, [sp, #96]
  449810:	str	x0, [x19, #288]
  449814:	sub	w20, w20, #0x1
  449818:	mov	w24, #0x20                  	// #32
  44981c:	add	x20, x21, x20, lsl #5
  449820:	ldr	w0, [x20, #16]
  449824:	cbnz	w0, 44987c <ferror@plt+0x46ffc>
  449828:	ldr	x0, [x19, #256]
  44982c:	add	x1, x0, #0x1
  449830:	cmp	x0, #0xff
  449834:	b.ne	449860 <ferror@plt+0x46fe0>  // b.any
  449838:	ldp	x3, x2, [x19, #272]
  44983c:	strb	wzr, [x19, #255]
  449840:	mov	x1, x0
  449844:	mov	x0, x19
  449848:	blr	x3
  44984c:	ldr	x2, [x19, #320]
  449850:	mov	x1, #0x1                   	// #1
  449854:	mov	x0, #0x0                   	// #0
  449858:	add	x2, x2, x1
  44985c:	str	x2, [x19, #320]
  449860:	str	x1, [x19, #256]
  449864:	mov	w1, w22
  449868:	ldr	x2, [x20, #8]
  44986c:	strb	w24, [x19, x0]
  449870:	strb	w24, [x19, #264]
  449874:	mov	x0, x19
  449878:	bl	4524e8 <ferror@plt+0x4fc68>
  44987c:	cmp	x21, x20
  449880:	sub	x20, x20, #0x20
  449884:	b.ne	449820 <ferror@plt+0x46fa0>  // b.any
  449888:	ldp	x21, x22, [sp, #32]
  44988c:	ldp	x25, x26, [sp, #64]
  449890:	str	x23, [x19, #296]
  449894:	ldp	x23, x24, [sp, #48]
  449898:	b	448e38 <ferror@plt+0x465b8>
  44989c:	and	w20, w22, #0xffffff9f
  4498a0:	ldr	x3, [x19, #296]
  4498a4:	tbnz	w22, #5, 4501c4 <ferror@plt+0x4d944>
  4498a8:	ldr	x2, [x2, #8]
  4498ac:	cbz	x2, 4498b4 <ferror@plt+0x47034>
  4498b0:	tbz	w22, #6, 450b94 <ferror@plt+0x4e314>
  4498b4:	add	x2, x24, #0x10
  4498b8:	mov	w1, w20
  4498bc:	mov	x0, x19
  4498c0:	bl	454cd8 <ferror@plt+0x52458>
  4498c4:	ldp	x21, x22, [sp, #32]
  4498c8:	ldp	x23, x24, [sp, #48]
  4498cc:	b	448e38 <ferror@plt+0x465b8>
  4498d0:	ldp	x1, x23, [x19, #288]
  4498d4:	add	x21, sp, #0x80
  4498d8:	stp	x23, x2, [sp, #128]
  4498dc:	mov	w20, #0x1                   	// #1
  4498e0:	mov	x5, x21
  4498e4:	str	wzr, [sp, #144]
  4498e8:	mov	w6, w20
  4498ec:	str	x1, [sp, #152]
  4498f0:	str	x21, [x19, #296]
  4498f4:	mov	x0, x23
  4498f8:	cbnz	x23, 449944 <ferror@plt+0x470c4>
  4498fc:	b	449958 <ferror@plt+0x470d8>
  449900:	ldr	w1, [x0, #16]
  449904:	cbnz	w1, 44993c <ferror@plt+0x470bc>
  449908:	cmp	w20, #0x3
  44990c:	b.hi	4509ec <ferror@plt+0x4e16c>  // b.pmore
  449910:	ubfiz	x1, x20, #5, #32
  449914:	add	w20, w20, #0x1
  449918:	add	x4, x21, x1
  44991c:	ldp	x2, x3, [x0]
  449920:	stp	x2, x3, [x4]
  449924:	ldp	x2, x3, [x0, #16]
  449928:	stp	x2, x3, [x4, #16]
  44992c:	str	x5, [x21, x1]
  449930:	mov	x5, x4
  449934:	str	x4, [x19, #296]
  449938:	str	w6, [x0, #16]
  44993c:	ldr	x0, [x0]
  449940:	cbz	x0, 449958 <ferror@plt+0x470d8>
  449944:	ldr	x1, [x0, #8]
  449948:	ldr	w1, [x1]
  44994c:	sub	w1, w1, #0x19
  449950:	cmp	w1, #0x2
  449954:	b.ls	449900 <ferror@plt+0x47080>  // b.plast
  449958:	stp	x25, x26, [sp, #64]
  44995c:	ldr	x25, [x24, #16]
  449960:	cbz	x25, 44d700 <ferror@plt+0x4ae80>
  449964:	ldr	w0, [x25, #4]
  449968:	cmp	w0, #0x1
  44996c:	b.gt	44d700 <ferror@plt+0x4ae80>
  449970:	ldr	w1, [x19, #308]
  449974:	cmp	w1, #0x400
  449978:	b.gt	44d700 <ferror@plt+0x4ae80>
  44997c:	ldr	x3, [x19, #328]
  449980:	add	w0, w0, #0x1
  449984:	str	w0, [x25, #4]
  449988:	add	w1, w1, #0x1
  44998c:	add	x0, sp, #0x70
  449990:	str	w1, [x19, #308]
  449994:	str	x0, [x19, #328]
  449998:	mov	w1, w22
  44999c:	mov	x0, x19
  4499a0:	mov	x2, x25
  4499a4:	stp	x25, x3, [sp, #112]
  4499a8:	bl	448dd0 <ferror@plt+0x46550>
  4499ac:	ldr	w1, [x25, #4]
  4499b0:	ldr	x0, [sp, #120]
  4499b4:	str	x0, [x19, #328]
  4499b8:	ldr	w0, [x19, #308]
  4499bc:	sub	w1, w1, #0x1
  4499c0:	str	w1, [x25, #4]
  4499c4:	sub	w0, w0, #0x1
  4499c8:	str	w0, [x19, #308]
  4499cc:	ldr	w0, [sp, #144]
  4499d0:	str	x23, [x19, #296]
  4499d4:	cbnz	w0, 4503b4 <ferror@plt+0x4db34>
  4499d8:	ubfiz	x0, x20, #5, #32
  4499dc:	cmp	w20, #0x1
  4499e0:	add	x21, x21, x0
  4499e4:	b.eq	449a08 <ferror@plt+0x47188>  // b.none
  4499e8:	ldur	x2, [x21, #-24]
  4499ec:	sub	w20, w20, #0x1
  4499f0:	mov	w1, w22
  4499f4:	mov	x0, x19
  4499f8:	sub	x21, x21, #0x20
  4499fc:	bl	4524e8 <ferror@plt+0x4fc68>
  449a00:	cmp	w20, #0x1
  449a04:	b.ne	4499e8 <ferror@plt+0x47168>  // b.any
  449a08:	ldr	x3, [x19, #296]
  449a0c:	add	x2, x24, #0x8
  449a10:	mov	w1, w22
  449a14:	mov	x0, x19
  449a18:	bl	4549a8 <ferror@plt+0x52128>
  449a1c:	ldp	x21, x22, [sp, #32]
  449a20:	ldp	x23, x24, [sp, #48]
  449a24:	ldp	x25, x26, [sp, #64]
  449a28:	b	448e38 <ferror@plt+0x465b8>
  449a2c:	ldr	x1, [x2, #8]
  449a30:	mov	x0, x19
  449a34:	stp	x25, x26, [sp, #64]
  449a38:	mov	w26, #0x0                   	// #0
  449a3c:	bl	448308 <ferror@plt+0x45a88>
  449a40:	cbz	x0, 4512c8 <ferror@plt+0x4ea48>
  449a44:	nop
  449a48:	ldr	w1, [x0]
  449a4c:	cmp	w1, #0x2f
  449a50:	b.ne	44d730 <ferror@plt+0x4aeb0>  // b.any
  449a54:	ldr	x1, [x0, #8]
  449a58:	cbz	x1, 44d730 <ferror@plt+0x4aeb0>
  449a5c:	ldr	x0, [x0, #16]
  449a60:	add	w26, w26, #0x1
  449a64:	cbnz	x0, 449a48 <ferror@plt+0x471c8>
  449a68:	ldr	x20, [x24, #8]
  449a6c:	str	x27, [sp, #80]
  449a70:	sub	w27, w26, #0x1
  449a74:	cmp	w27, #0x0
  449a78:	b.le	44cf30 <ferror@plt+0x4a6b0>
  449a7c:	add	x25, sp, #0x80
  449a80:	mov	w23, #0x1                   	// #1
  449a84:	mov	w24, #0x2c                  	// #44
  449a88:	b	449b28 <ferror@plt+0x472a8>
  449a8c:	ldr	w1, [x19, #308]
  449a90:	cmp	w1, #0x400
  449a94:	b.gt	449b3c <ferror@plt+0x472bc>
  449a98:	ldr	x3, [x19, #328]
  449a9c:	add	w0, w0, #0x1
  449aa0:	str	w0, [x20, #4]
  449aa4:	add	w1, w1, #0x1
  449aa8:	str	w1, [x19, #308]
  449aac:	mov	x0, x19
  449ab0:	str	x25, [x19, #328]
  449ab4:	mov	w1, w22
  449ab8:	mov	x2, x20
  449abc:	stp	x20, x3, [sp, #128]
  449ac0:	bl	448dd0 <ferror@plt+0x46550>
  449ac4:	ldr	w1, [x20, #4]
  449ac8:	ldr	x0, [sp, #136]
  449acc:	str	x0, [x19, #328]
  449ad0:	ldr	w0, [x19, #308]
  449ad4:	sub	w1, w1, #0x1
  449ad8:	str	w1, [x20, #4]
  449adc:	sub	w0, w0, #0x1
  449ae0:	str	w0, [x19, #308]
  449ae4:	ldr	x0, [x19, #256]
  449ae8:	cmp	x0, #0xff
  449aec:	b.eq	44c530 <ferror@plt+0x49cb0>  // b.none
  449af0:	add	x1, x0, #0x1
  449af4:	str	x1, [x19, #256]
  449af8:	strb	w24, [x19, x0]
  449afc:	cmp	x1, #0xff
  449b00:	strb	w24, [x19, #264]
  449b04:	b.eq	44c508 <ferror@plt+0x49c88>  // b.none
  449b08:	add	x0, x0, #0x2
  449b0c:	str	x0, [x19, #256]
  449b10:	mov	w0, #0x20                  	// #32
  449b14:	strb	w0, [x19, x1]
  449b18:	add	w21, w21, #0x1
  449b1c:	strb	w0, [x19, #264]
  449b20:	cmp	w21, w27
  449b24:	b.ge	44cfd0 <ferror@plt+0x4a750>  // b.tcont
  449b28:	str	w21, [x19, #316]
  449b2c:	cbz	x20, 449b3c <ferror@plt+0x472bc>
  449b30:	ldr	w0, [x20, #4]
  449b34:	cmp	w0, #0x1
  449b38:	b.le	449a8c <ferror@plt+0x4720c>
  449b3c:	str	w23, [x19, #304]
  449b40:	b	449ae4 <ferror@plt+0x47264>
  449b44:	ldr	x20, [x2, #8]
  449b48:	cbz	x20, 44d20c <ferror@plt+0x4a98c>
  449b4c:	ldr	w0, [x20, #4]
  449b50:	cmp	w0, #0x1
  449b54:	b.gt	44d20c <ferror@plt+0x4a98c>
  449b58:	ldr	w1, [x19, #308]
  449b5c:	cmp	w1, #0x400
  449b60:	b.gt	44d20c <ferror@plt+0x4a98c>
  449b64:	ldr	x3, [x19, #328]
  449b68:	add	w0, w0, #0x1
  449b6c:	str	w0, [x20, #4]
  449b70:	add	w1, w1, #0x1
  449b74:	add	x0, sp, #0x80
  449b78:	str	w1, [x19, #308]
  449b7c:	str	x0, [x19, #328]
  449b80:	mov	w1, w22
  449b84:	mov	x0, x19
  449b88:	mov	x2, x20
  449b8c:	stp	x20, x3, [sp, #128]
  449b90:	bl	448dd0 <ferror@plt+0x46550>
  449b94:	ldr	w1, [x20, #4]
  449b98:	ldr	x0, [sp, #136]
  449b9c:	str	x0, [x19, #328]
  449ba0:	ldr	w0, [x19, #308]
  449ba4:	sub	w1, w1, #0x1
  449ba8:	str	w1, [x20, #4]
  449bac:	sub	w0, w0, #0x1
  449bb0:	str	w0, [x19, #308]
  449bb4:	ldr	x0, [x19, #256]
  449bb8:	cmp	x0, #0xff
  449bbc:	b.eq	44fb80 <ferror@plt+0x4d300>  // b.none
  449bc0:	add	x1, x0, #0x1
  449bc4:	str	x1, [x19, #256]
  449bc8:	mov	w2, #0x5b                  	// #91
  449bcc:	strb	w2, [x19, x0]
  449bd0:	strb	w2, [x19, #264]
  449bd4:	cmp	x1, #0xff
  449bd8:	b.ne	44e244 <ferror@plt+0x4b9c4>  // b.any
  449bdc:	ldp	x3, x2, [x19, #272]
  449be0:	strb	wzr, [x19, #255]
  449be4:	mov	x0, x19
  449be8:	blr	x3
  449bec:	ldr	x0, [x19, #320]
  449bf0:	mov	w1, #0x6261                	// #25185
  449bf4:	mov	x2, #0x2                   	// #2
  449bf8:	strh	w1, [x19]
  449bfc:	add	x0, x0, #0x1
  449c00:	str	x0, [x19, #320]
  449c04:	add	x1, x2, #0x1
  449c08:	mov	w0, #0x69                  	// #105
  449c0c:	strb	w0, [x19, x2]
  449c10:	add	x0, x1, #0x1
  449c14:	str	x0, [x19, #256]
  449c18:	mov	w2, #0x3a                  	// #58
  449c1c:	strb	w2, [x19, x1]
  449c20:	strb	w2, [x19, #264]
  449c24:	ldr	x20, [x24, #16]
  449c28:	cbz	x20, 44d004 <ferror@plt+0x4a784>
  449c2c:	ldr	w1, [x20, #4]
  449c30:	cmp	w1, #0x1
  449c34:	b.gt	44d004 <ferror@plt+0x4a784>
  449c38:	ldr	w2, [x19, #308]
  449c3c:	cmp	w2, #0x400
  449c40:	b.gt	44d004 <ferror@plt+0x4a784>
  449c44:	ldr	x3, [x19, #328]
  449c48:	add	w1, w1, #0x1
  449c4c:	str	w1, [x20, #4]
  449c50:	add	w2, w2, #0x1
  449c54:	add	x0, sp, #0x80
  449c58:	str	w2, [x19, #308]
  449c5c:	str	x0, [x19, #328]
  449c60:	mov	w1, w22
  449c64:	mov	x2, x20
  449c68:	mov	x0, x19
  449c6c:	stp	x20, x3, [sp, #128]
  449c70:	bl	448dd0 <ferror@plt+0x46550>
  449c74:	ldr	w2, [x20, #4]
  449c78:	ldr	x0, [sp, #136]
  449c7c:	str	x0, [x19, #328]
  449c80:	ldr	w1, [x19, #308]
  449c84:	sub	w2, w2, #0x1
  449c88:	ldr	x0, [x19, #256]
  449c8c:	str	w2, [x20, #4]
  449c90:	sub	w1, w1, #0x1
  449c94:	str	w1, [x19, #308]
  449c98:	add	x1, x0, #0x1
  449c9c:	cmp	x0, #0xff
  449ca0:	b.ne	449ccc <ferror@plt+0x4744c>  // b.any
  449ca4:	ldp	x3, x2, [x19, #272]
  449ca8:	strb	wzr, [x19, #255]
  449cac:	mov	x1, x0
  449cb0:	mov	x0, x19
  449cb4:	blr	x3
  449cb8:	ldr	x2, [x19, #320]
  449cbc:	mov	x1, #0x1                   	// #1
  449cc0:	mov	x0, #0x0                   	// #0
  449cc4:	add	x2, x2, x1
  449cc8:	str	x2, [x19, #320]
  449ccc:	str	x1, [x19, #256]
  449cd0:	mov	w1, #0x5d                  	// #93
  449cd4:	strb	w1, [x19, x0]
  449cd8:	strb	w1, [x19, #264]
  449cdc:	ldp	x21, x22, [sp, #32]
  449ce0:	ldp	x23, x24, [sp, #48]
  449ce4:	b	448e38 <ferror@plt+0x465b8>
  449ce8:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  449cec:	add	x20, x20, #0x710
  449cf0:	mov	x23, #0x1                   	// #1
  449cf4:	stp	x25, x26, [sp, #64]
  449cf8:	add	x25, x20, #0x1c
  449cfc:	ldr	x1, [x19, #256]
  449d00:	b	449d5c <ferror@plt+0x474dc>
  449d04:	ldp	x3, x2, [x19, #272]
  449d08:	strb	wzr, [x19, #255]
  449d0c:	mov	x0, x19
  449d10:	add	x20, x20, #0x1
  449d14:	blr	x3
  449d18:	strb	w21, [x19]
  449d1c:	ldr	x0, [x19, #320]
  449d20:	str	x23, [x19, #256]
  449d24:	strb	w21, [x19, #264]
  449d28:	cmp	x20, x25
  449d2c:	add	x0, x0, #0x1
  449d30:	str	x0, [x19, #320]
  449d34:	b.eq	44cb48 <ferror@plt+0x4a2c8>  // b.none
  449d38:	ldrb	w21, [x20]
  449d3c:	mov	x0, #0x1                   	// #1
  449d40:	add	x1, x0, #0x1
  449d44:	str	x1, [x19, #256]
  449d48:	strb	w21, [x19, x0]
  449d4c:	add	x20, x20, #0x1
  449d50:	strb	w21, [x19, #264]
  449d54:	cmp	x25, x20
  449d58:	b.eq	44cb48 <ferror@plt+0x4a2c8>  // b.none
  449d5c:	ldrb	w21, [x20]
  449d60:	cmp	x1, #0xff
  449d64:	b.eq	449d04 <ferror@plt+0x47484>  // b.none
  449d68:	mov	x0, x1
  449d6c:	b	449d40 <ferror@plt+0x474c0>
  449d70:	ldr	x0, [x19, #256]
  449d74:	cmp	x0, #0xff
  449d78:	b.eq	44f350 <ferror@plt+0x4cad0>  // b.none
  449d7c:	add	x1, x0, #0x1
  449d80:	str	x1, [x19, #256]
  449d84:	mov	w2, #0x7b                  	// #123
  449d88:	strb	w2, [x19, x0]
  449d8c:	strb	w2, [x19, #264]
  449d90:	cmp	x1, #0xff
  449d94:	b.ne	44dbac <ferror@plt+0x4b32c>  // b.any
  449d98:	ldp	x3, x2, [x19, #272]
  449d9c:	strb	wzr, [x19, #255]
  449da0:	mov	x0, x19
  449da4:	blr	x3
  449da8:	ldr	x0, [x19, #320]
  449dac:	mov	w3, #0x616c                	// #24940
  449db0:	mov	w2, #0x6d                  	// #109
  449db4:	mov	x1, #0x3                   	// #3
  449db8:	add	x0, x0, #0x1
  449dbc:	strh	w3, [x19]
  449dc0:	strb	w2, [x19, #2]
  449dc4:	str	x0, [x19, #320]
  449dc8:	add	x0, x1, #0x1
  449dcc:	str	x0, [x19, #256]
  449dd0:	mov	w2, #0x62                  	// #98
  449dd4:	strb	w2, [x19, x1]
  449dd8:	strb	w2, [x19, #264]
  449ddc:	cmp	x0, #0xff
  449de0:	b.ne	44dbfc <ferror@plt+0x4b37c>  // b.any
  449de4:	ldp	x3, x2, [x19, #272]
  449de8:	strb	wzr, [x19, #255]
  449dec:	mov	x1, x0
  449df0:	mov	x0, x19
  449df4:	blr	x3
  449df8:	ldr	x0, [x19, #320]
  449dfc:	mov	w1, #0x64                  	// #100
  449e00:	mov	x2, #0x1                   	// #1
  449e04:	strb	w1, [x19]
  449e08:	add	x0, x0, x2
  449e0c:	str	x0, [x19, #320]
  449e10:	add	x1, x2, #0x1
  449e14:	mov	w0, #0x61                  	// #97
  449e18:	strb	w0, [x19, x2]
  449e1c:	add	x0, x1, #0x1
  449e20:	str	x0, [x19, #256]
  449e24:	mov	w2, #0x28                  	// #40
  449e28:	strb	w2, [x19, x1]
  449e2c:	strb	w2, [x19, #264]
  449e30:	ldr	w1, [x19, #312]
  449e34:	ldr	x20, [x24, #8]
  449e38:	add	w2, w1, #0x1
  449e3c:	str	w2, [x19, #312]
  449e40:	cbz	x20, 44d010 <ferror@plt+0x4a790>
  449e44:	ldr	w2, [x20, #4]
  449e48:	cmp	w2, #0x1
  449e4c:	b.gt	44d010 <ferror@plt+0x4a790>
  449e50:	ldr	w3, [x19, #308]
  449e54:	cmp	w3, #0x400
  449e58:	b.gt	44d010 <ferror@plt+0x4a790>
  449e5c:	add	w2, w2, #0x1
  449e60:	add	w3, w3, #0x1
  449e64:	str	w2, [x20, #4]
  449e68:	add	x21, sp, #0x80
  449e6c:	str	w3, [x19, #308]
  449e70:	mov	w1, w22
  449e74:	ldr	x3, [x19, #328]
  449e78:	str	x21, [x19, #328]
  449e7c:	mov	x0, x19
  449e80:	mov	x2, x20
  449e84:	stp	x20, x3, [sp, #128]
  449e88:	bl	448dd0 <ferror@plt+0x46550>
  449e8c:	ldr	w3, [x20, #4]
  449e90:	ldr	w1, [x19, #312]
  449e94:	ldr	x0, [sp, #136]
  449e98:	str	x0, [x19, #328]
  449e9c:	ldr	w2, [x19, #308]
  449ea0:	sub	w3, w3, #0x1
  449ea4:	sub	w1, w1, #0x1
  449ea8:	ldr	x0, [x19, #256]
  449eac:	str	w3, [x20, #4]
  449eb0:	sub	w2, w2, #0x1
  449eb4:	str	w2, [x19, #308]
  449eb8:	str	w1, [x19, #312]
  449ebc:	cmp	x0, #0xff
  449ec0:	b.eq	44d3fc <ferror@plt+0x4ab7c>  // b.none
  449ec4:	add	x1, x0, #0x1
  449ec8:	str	x1, [x19, #256]
  449ecc:	mov	w2, #0x29                  	// #41
  449ed0:	strb	w2, [x19, x0]
  449ed4:	strb	w2, [x19, #264]
  449ed8:	cmp	x1, #0xff
  449edc:	b.ne	44d428 <ferror@plt+0x4aba8>  // b.any
  449ee0:	ldp	x3, x2, [x19, #272]
  449ee4:	strb	wzr, [x19, #255]
  449ee8:	mov	x0, x19
  449eec:	blr	x3
  449ef0:	ldr	x2, [x19, #320]
  449ef4:	mov	x0, #0x1                   	// #1
  449ef8:	mov	x1, #0x0                   	// #0
  449efc:	add	x2, x2, x0
  449f00:	str	x2, [x19, #320]
  449f04:	str	x0, [x19, #256]
  449f08:	mov	w0, #0x23                  	// #35
  449f0c:	strb	w0, [x19, x1]
  449f10:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  449f14:	strb	w0, [x19, #264]
  449f18:	add	x1, x1, #0x9e0
  449f1c:	mov	x0, x21
  449f20:	ldr	w2, [x24, #16]
  449f24:	add	w2, w2, #0x1
  449f28:	bl	402310 <sprintf@plt>
  449f2c:	mov	x0, x21
  449f30:	bl	402270 <strlen@plt>
  449f34:	cbz	x0, 44d364 <ferror@plt+0x4aae4>
  449f38:	add	x22, x21, x0
  449f3c:	mov	x23, #0x1                   	// #1
  449f40:	ldr	x1, [x19, #256]
  449f44:	b	449fa0 <ferror@plt+0x47720>
  449f48:	ldp	x3, x2, [x19, #272]
  449f4c:	strb	wzr, [x19, #255]
  449f50:	mov	x0, x19
  449f54:	add	x21, x21, #0x1
  449f58:	blr	x3
  449f5c:	strb	w20, [x19]
  449f60:	ldr	x0, [x19, #320]
  449f64:	str	x23, [x19, #256]
  449f68:	strb	w20, [x19, #264]
  449f6c:	cmp	x21, x22
  449f70:	add	x0, x0, #0x1
  449f74:	str	x0, [x19, #320]
  449f78:	b.eq	44d430 <ferror@plt+0x4abb0>  // b.none
  449f7c:	ldrb	w20, [x21]
  449f80:	mov	x0, #0x1                   	// #1
  449f84:	add	x1, x0, #0x1
  449f88:	str	x1, [x19, #256]
  449f8c:	strb	w20, [x19, x0]
  449f90:	add	x21, x21, #0x1
  449f94:	strb	w20, [x19, #264]
  449f98:	cmp	x22, x21
  449f9c:	b.eq	44d368 <ferror@plt+0x4aae8>  // b.none
  449fa0:	ldrb	w20, [x21]
  449fa4:	cmp	x1, #0xff
  449fa8:	b.eq	449f48 <ferror@plt+0x476c8>  // b.none
  449fac:	mov	x0, x1
  449fb0:	b	449f84 <ferror@plt+0x47704>
  449fb4:	ldr	x0, [x19, #256]
  449fb8:	cmp	x0, #0xff
  449fbc:	b.eq	44e414 <ferror@plt+0x4bb94>  // b.none
  449fc0:	add	x1, x0, #0x1
  449fc4:	str	x1, [x19, #256]
  449fc8:	mov	w2, #0x7b                  	// #123
  449fcc:	strb	w2, [x19, x0]
  449fd0:	strb	w2, [x19, #264]
  449fd4:	cmp	x1, #0xff
  449fd8:	b.ne	44d448 <ferror@plt+0x4abc8>  // b.any
  449fdc:	ldp	x3, x2, [x19, #272]
  449fe0:	strb	wzr, [x19, #255]
  449fe4:	mov	x0, x19
  449fe8:	blr	x3
  449fec:	ldr	x0, [x19, #320]
  449ff0:	mov	w3, #0x6e75                	// #28277
  449ff4:	mov	w2, #0x6e                  	// #110
  449ff8:	mov	x1, #0x3                   	// #3
  449ffc:	add	x0, x0, #0x1
  44a000:	strh	w3, [x19]
  44a004:	strb	w2, [x19, #2]
  44a008:	str	x0, [x19, #320]
  44a00c:	add	x0, x1, #0x1
  44a010:	str	x0, [x19, #256]
  44a014:	mov	w2, #0x61                  	// #97
  44a018:	strb	w2, [x19, x1]
  44a01c:	strb	w2, [x19, #264]
  44a020:	cmp	x0, #0xff
  44a024:	b.ne	44d498 <ferror@plt+0x4ac18>  // b.any
  44a028:	ldp	x3, x2, [x19, #272]
  44a02c:	strb	wzr, [x19, #255]
  44a030:	mov	x1, x0
  44a034:	mov	x0, x19
  44a038:	blr	x3
  44a03c:	ldr	x0, [x19, #320]
  44a040:	mov	w3, #0x656d                	// #25965
  44a044:	mov	w2, #0x64                  	// #100
  44a048:	mov	x1, #0x3                   	// #3
  44a04c:	add	x0, x0, #0x1
  44a050:	strh	w3, [x19]
  44a054:	strb	w2, [x19, #2]
  44a058:	str	x0, [x19, #320]
  44a05c:	add	x0, x1, #0x1
  44a060:	str	x0, [x19, #256]
  44a064:	mov	w2, #0x20                  	// #32
  44a068:	strb	w2, [x19, x1]
  44a06c:	strb	w2, [x19, #264]
  44a070:	cmp	x0, #0xff
  44a074:	b.ne	44d4e4 <ferror@plt+0x4ac64>  // b.any
  44a078:	ldp	x3, x2, [x19, #272]
  44a07c:	strb	wzr, [x19, #255]
  44a080:	mov	x1, x0
  44a084:	mov	x0, x19
  44a088:	blr	x3
  44a08c:	ldr	x0, [x19, #320]
  44a090:	mov	w3, #0x7974                	// #31092
  44a094:	mov	w2, #0x70                  	// #112
  44a098:	mov	x1, #0x3                   	// #3
  44a09c:	add	x0, x0, #0x1
  44a0a0:	strh	w3, [x19]
  44a0a4:	strb	w2, [x19, #2]
  44a0a8:	str	x0, [x19, #320]
  44a0ac:	add	x0, x1, #0x1
  44a0b0:	str	x0, [x19, #256]
  44a0b4:	mov	w2, #0x65                  	// #101
  44a0b8:	strb	w2, [x19, x1]
  44a0bc:	strb	w2, [x19, #264]
  44a0c0:	cmp	x0, #0xff
  44a0c4:	b.ne	44d534 <ferror@plt+0x4acb4>  // b.any
  44a0c8:	ldp	x3, x2, [x19, #272]
  44a0cc:	strb	wzr, [x19, #255]
  44a0d0:	mov	x1, x0
  44a0d4:	mov	x0, x19
  44a0d8:	blr	x3
  44a0dc:	ldr	x2, [x19, #320]
  44a0e0:	mov	x1, #0x1                   	// #1
  44a0e4:	mov	x0, #0x0                   	// #0
  44a0e8:	add	x2, x2, x1
  44a0ec:	str	x2, [x19, #320]
  44a0f0:	str	x1, [x19, #256]
  44a0f4:	mov	w2, #0x23                  	// #35
  44a0f8:	strb	w2, [x19, x0]
  44a0fc:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  44a100:	strb	w2, [x19, #264]
  44a104:	add	x1, x1, #0x9e0
  44a108:	add	x0, sp, #0x80
  44a10c:	ldr	x2, [x24, #8]
  44a110:	add	w2, w2, #0x1
  44a114:	bl	402310 <sprintf@plt>
  44a118:	add	x0, sp, #0x80
  44a11c:	bl	402270 <strlen@plt>
  44a120:	cbz	x0, 44d3b0 <ferror@plt+0x4ab30>
  44a124:	add	x20, sp, #0x80
  44a128:	mov	x23, #0x1                   	// #1
  44a12c:	add	x22, x20, x0
  44a130:	ldr	x1, [x19, #256]
  44a134:	b	44a190 <ferror@plt+0x47910>
  44a138:	ldp	x3, x2, [x19, #272]
  44a13c:	strb	wzr, [x19, #255]
  44a140:	mov	x0, x19
  44a144:	add	x20, x20, #0x1
  44a148:	blr	x3
  44a14c:	strb	w21, [x19]
  44a150:	ldr	x0, [x19, #320]
  44a154:	str	x23, [x19, #256]
  44a158:	strb	w21, [x19, #264]
  44a15c:	cmp	x20, x22
  44a160:	add	x0, x0, #0x1
  44a164:	str	x0, [x19, #320]
  44a168:	b.eq	44d43c <ferror@plt+0x4abbc>  // b.none
  44a16c:	ldrb	w21, [x20]
  44a170:	mov	x0, #0x1                   	// #1
  44a174:	add	x1, x0, #0x1
  44a178:	str	x1, [x19, #256]
  44a17c:	strb	w21, [x19, x0]
  44a180:	add	x20, x20, #0x1
  44a184:	strb	w21, [x19, #264]
  44a188:	cmp	x22, x20
  44a18c:	b.eq	44d3b4 <ferror@plt+0x4ab34>  // b.none
  44a190:	ldrb	w21, [x20]
  44a194:	cmp	x1, #0xff
  44a198:	b.eq	44a138 <ferror@plt+0x478b8>  // b.none
  44a19c:	mov	x0, x1
  44a1a0:	b	44a174 <ferror@plt+0x478f4>
  44a1a4:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44a1a8:	add	x20, x20, #0x688
  44a1ac:	mov	x23, #0x1                   	// #1
  44a1b0:	stp	x25, x26, [sp, #64]
  44a1b4:	add	x25, x20, #0x16
  44a1b8:	ldr	x1, [x19, #256]
  44a1bc:	b	44a218 <ferror@plt+0x47998>
  44a1c0:	ldp	x3, x2, [x19, #272]
  44a1c4:	strb	wzr, [x19, #255]
  44a1c8:	mov	x0, x19
  44a1cc:	add	x20, x20, #0x1
  44a1d0:	blr	x3
  44a1d4:	strb	w21, [x19]
  44a1d8:	ldr	x0, [x19, #320]
  44a1dc:	str	x23, [x19, #256]
  44a1e0:	strb	w21, [x19, #264]
  44a1e4:	cmp	x20, x25
  44a1e8:	add	x0, x0, #0x1
  44a1ec:	str	x0, [x19, #320]
  44a1f0:	b.eq	44ce30 <ferror@plt+0x4a5b0>  // b.none
  44a1f4:	ldrb	w21, [x20]
  44a1f8:	mov	x0, #0x1                   	// #1
  44a1fc:	add	x1, x0, #0x1
  44a200:	str	x1, [x19, #256]
  44a204:	strb	w21, [x19, x0]
  44a208:	add	x20, x20, #0x1
  44a20c:	strb	w21, [x19, #264]
  44a210:	cmp	x20, x25
  44a214:	b.eq	44ce30 <ferror@plt+0x4a5b0>  // b.none
  44a218:	ldrb	w21, [x20]
  44a21c:	cmp	x1, #0xff
  44a220:	b.eq	44a1c0 <ferror@plt+0x47940>  // b.none
  44a224:	mov	x0, x1
  44a228:	b	44a1fc <ferror@plt+0x4797c>
  44a22c:	ldr	x0, [x19, #256]
  44a230:	cmp	x0, #0xff
  44a234:	b.eq	44e614 <ferror@plt+0x4bd94>  // b.none
  44a238:	add	x1, x0, #0x1
  44a23c:	str	x1, [x19, #256]
  44a240:	mov	w2, #0x6a                  	// #106
  44a244:	strb	w2, [x19, x0]
  44a248:	strb	w2, [x19, #264]
  44a24c:	cmp	x1, #0xff
  44a250:	b.ne	44dce4 <ferror@plt+0x4b464>  // b.any
  44a254:	ldp	x3, x2, [x19, #272]
  44a258:	strb	wzr, [x19, #255]
  44a25c:	mov	x0, x19
  44a260:	blr	x3
  44a264:	ldr	x0, [x19, #320]
  44a268:	mov	w2, #0x7661                	// #30305
  44a26c:	mov	w1, #0x61                  	// #97
  44a270:	mov	x3, #0x3                   	// #3
  44a274:	add	x0, x0, #0x1
  44a278:	strh	w2, [x19]
  44a27c:	strb	w1, [x19, #2]
  44a280:	str	x0, [x19, #320]
  44a284:	add	x1, x3, #0x1
  44a288:	str	x1, [x19, #256]
  44a28c:	mov	w0, #0x20                  	// #32
  44a290:	strb	w0, [x19, x3]
  44a294:	strb	w0, [x19, #264]
  44a298:	cmp	x1, #0xff
  44a29c:	b.ne	44dd34 <ferror@plt+0x4b4b4>  // b.any
  44a2a0:	ldp	x3, x2, [x19, #272]
  44a2a4:	strb	wzr, [x19, #255]
  44a2a8:	mov	x0, x19
  44a2ac:	blr	x3
  44a2b0:	ldr	x1, [x19, #320]
  44a2b4:	mov	w3, #0x6c43                	// #27715
  44a2b8:	mov	w2, #0x61                  	// #97
  44a2bc:	mov	x0, #0x3                   	// #3
  44a2c0:	add	x1, x1, #0x1
  44a2c4:	strh	w3, [x19]
  44a2c8:	strb	w2, [x19, #2]
  44a2cc:	str	x1, [x19, #320]
  44a2d0:	add	x1, x0, #0x1
  44a2d4:	str	x1, [x19, #256]
  44a2d8:	mov	w2, #0x73                  	// #115
  44a2dc:	strb	w2, [x19, x0]
  44a2e0:	strb	w2, [x19, #264]
  44a2e4:	cmp	x1, #0xff
  44a2e8:	b.ne	44dd84 <ferror@plt+0x4b504>  // b.any
  44a2ec:	ldp	x3, x2, [x19, #272]
  44a2f0:	strb	wzr, [x19, #255]
  44a2f4:	mov	x0, x19
  44a2f8:	blr	x3
  44a2fc:	ldr	x1, [x19, #320]
  44a300:	mov	w3, #0x2073                	// #8307
  44a304:	mov	w2, #0x66                  	// #102
  44a308:	mov	x0, #0x3                   	// #3
  44a30c:	add	x1, x1, #0x1
  44a310:	strh	w3, [x19]
  44a314:	strb	w2, [x19, #2]
  44a318:	str	x1, [x19, #320]
  44a31c:	add	x1, x0, #0x1
  44a320:	str	x1, [x19, #256]
  44a324:	mov	w2, #0x6f                  	// #111
  44a328:	strb	w2, [x19, x0]
  44a32c:	strb	w2, [x19, #264]
  44a330:	cmp	x1, #0xff
  44a334:	b.ne	44ddd4 <ferror@plt+0x4b554>  // b.any
  44a338:	ldp	x3, x2, [x19, #272]
  44a33c:	strb	wzr, [x19, #255]
  44a340:	mov	x0, x19
  44a344:	blr	x3
  44a348:	ldr	x1, [x19, #320]
  44a34c:	mov	w2, #0x72                  	// #114
  44a350:	mov	x0, #0x1                   	// #1
  44a354:	strb	w2, [x19]
  44a358:	add	x1, x1, x0
  44a35c:	str	x1, [x19, #320]
  44a360:	add	x1, x0, #0x1
  44a364:	str	x1, [x19, #256]
  44a368:	mov	w1, #0x20                  	// #32
  44a36c:	strb	w1, [x19, x0]
  44a370:	strb	w1, [x19, #264]
  44a374:	ldr	x20, [x24, #8]
  44a378:	cbz	x20, 44d078 <ferror@plt+0x4a7f8>
  44a37c:	ldr	w0, [x20, #4]
  44a380:	cmp	w0, #0x1
  44a384:	b.gt	44d078 <ferror@plt+0x4a7f8>
  44a388:	ldr	w1, [x19, #308]
  44a38c:	cmp	w1, #0x400
  44a390:	b.gt	44d078 <ferror@plt+0x4a7f8>
  44a394:	ldr	x3, [x19, #328]
  44a398:	add	w0, w0, #0x1
  44a39c:	str	w0, [x20, #4]
  44a3a0:	add	w1, w1, #0x1
  44a3a4:	add	x0, sp, #0x80
  44a3a8:	str	w1, [x19, #308]
  44a3ac:	str	x0, [x19, #328]
  44a3b0:	mov	w1, w22
  44a3b4:	mov	x0, x19
  44a3b8:	mov	x2, x20
  44a3bc:	stp	x20, x3, [sp, #128]
  44a3c0:	bl	448dd0 <ferror@plt+0x46550>
  44a3c4:	ldr	w1, [x20, #4]
  44a3c8:	ldr	x0, [sp, #136]
  44a3cc:	sub	w1, w1, #0x1
  44a3d0:	ldp	x21, x22, [sp, #32]
  44a3d4:	ldp	x23, x24, [sp, #48]
  44a3d8:	str	x0, [x19, #328]
  44a3dc:	ldr	w0, [x19, #308]
  44a3e0:	str	w1, [x20, #4]
  44a3e4:	sub	w0, w0, #0x1
  44a3e8:	str	w0, [x19, #308]
  44a3ec:	b	448e38 <ferror@plt+0x465b8>
  44a3f0:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44a3f4:	add	x20, x20, #0x608
  44a3f8:	mov	x23, #0x1                   	// #1
  44a3fc:	stp	x25, x26, [sp, #64]
  44a400:	add	x25, x20, #0x13
  44a404:	ldr	x1, [x19, #256]
  44a408:	b	44a464 <ferror@plt+0x47be4>
  44a40c:	ldp	x3, x2, [x19, #272]
  44a410:	strb	wzr, [x19, #255]
  44a414:	mov	x0, x19
  44a418:	add	x20, x20, #0x1
  44a41c:	blr	x3
  44a420:	strb	w21, [x19]
  44a424:	ldr	x0, [x19, #320]
  44a428:	str	x23, [x19, #256]
  44a42c:	strb	w21, [x19, #264]
  44a430:	cmp	x20, x25
  44a434:	add	x0, x0, #0x1
  44a438:	str	x0, [x19, #320]
  44a43c:	b.eq	44c8c8 <ferror@plt+0x4a048>  // b.none
  44a440:	ldrb	w21, [x20]
  44a444:	mov	x0, #0x1                   	// #1
  44a448:	add	x1, x0, #0x1
  44a44c:	str	x1, [x19, #256]
  44a450:	strb	w21, [x19, x0]
  44a454:	add	x20, x20, #0x1
  44a458:	strb	w21, [x19, #264]
  44a45c:	cmp	x25, x20
  44a460:	b.eq	44c8c8 <ferror@plt+0x4a048>  // b.none
  44a464:	ldrb	w21, [x20]
  44a468:	cmp	x1, #0xff
  44a46c:	b.eq	44a40c <ferror@plt+0x47b8c>  // b.none
  44a470:	mov	x0, x1
  44a474:	b	44a448 <ferror@plt+0x47bc8>
  44a478:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44a47c:	add	x20, x20, #0x620
  44a480:	mov	x23, #0x1                   	// #1
  44a484:	stp	x25, x26, [sp, #64]
  44a488:	add	x25, x20, #0x16
  44a48c:	ldr	x1, [x19, #256]
  44a490:	b	44a4ec <ferror@plt+0x47c6c>
  44a494:	ldp	x3, x2, [x19, #272]
  44a498:	strb	wzr, [x19, #255]
  44a49c:	mov	x0, x19
  44a4a0:	add	x20, x20, #0x1
  44a4a4:	blr	x3
  44a4a8:	strb	w21, [x19]
  44a4ac:	ldr	x0, [x19, #320]
  44a4b0:	str	x23, [x19, #256]
  44a4b4:	strb	w21, [x19, #264]
  44a4b8:	cmp	x25, x20
  44a4bc:	add	x0, x0, #0x1
  44a4c0:	str	x0, [x19, #320]
  44a4c4:	b.eq	44c7c8 <ferror@plt+0x49f48>  // b.none
  44a4c8:	ldrb	w21, [x20]
  44a4cc:	mov	x0, #0x1                   	// #1
  44a4d0:	add	x1, x0, #0x1
  44a4d4:	str	x1, [x19, #256]
  44a4d8:	strb	w21, [x19, x0]
  44a4dc:	add	x20, x20, #0x1
  44a4e0:	strb	w21, [x19, #264]
  44a4e4:	cmp	x25, x20
  44a4e8:	b.eq	44c7c8 <ferror@plt+0x49f48>  // b.none
  44a4ec:	ldrb	w21, [x20]
  44a4f0:	cmp	x1, #0xff
  44a4f4:	b.eq	44a494 <ferror@plt+0x47c14>  // b.none
  44a4f8:	mov	x0, x1
  44a4fc:	b	44a4d0 <ferror@plt+0x47c50>
  44a500:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44a504:	add	x20, x20, #0x638
  44a508:	mov	x23, #0x1                   	// #1
  44a50c:	stp	x25, x26, [sp, #64]
  44a510:	add	x25, x20, #0x19
  44a514:	ldr	x1, [x19, #256]
  44a518:	b	44a574 <ferror@plt+0x47cf4>
  44a51c:	ldp	x3, x2, [x19, #272]
  44a520:	strb	wzr, [x19, #255]
  44a524:	mov	x0, x19
  44a528:	add	x20, x20, #0x1
  44a52c:	blr	x3
  44a530:	strb	w21, [x19]
  44a534:	ldr	x0, [x19, #320]
  44a538:	str	x23, [x19, #256]
  44a53c:	strb	w21, [x19, #264]
  44a540:	cmp	x25, x20
  44a544:	add	x0, x0, #0x1
  44a548:	str	x0, [x19, #320]
  44a54c:	b.eq	44ca48 <ferror@plt+0x4a1c8>  // b.none
  44a550:	ldrb	w21, [x20]
  44a554:	mov	x0, #0x1                   	// #1
  44a558:	add	x1, x0, #0x1
  44a55c:	str	x1, [x19, #256]
  44a560:	strb	w21, [x19, x0]
  44a564:	add	x20, x20, #0x1
  44a568:	strb	w21, [x19, #264]
  44a56c:	cmp	x20, x25
  44a570:	b.eq	44ca48 <ferror@plt+0x4a1c8>  // b.none
  44a574:	ldrb	w21, [x20]
  44a578:	cmp	x1, #0xff
  44a57c:	b.eq	44a51c <ferror@plt+0x47c9c>  // b.none
  44a580:	mov	x0, x1
  44a584:	b	44a558 <ferror@plt+0x47cd8>
  44a588:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44a58c:	add	x20, x20, #0x658
  44a590:	mov	x23, #0x1                   	// #1
  44a594:	stp	x25, x26, [sp, #64]
  44a598:	add	x25, x20, #0x15
  44a59c:	ldr	x1, [x19, #256]
  44a5a0:	b	44a5fc <ferror@plt+0x47d7c>
  44a5a4:	ldp	x3, x2, [x19, #272]
  44a5a8:	strb	wzr, [x19, #255]
  44a5ac:	mov	x0, x19
  44a5b0:	add	x20, x20, #0x1
  44a5b4:	blr	x3
  44a5b8:	strb	w21, [x19]
  44a5bc:	ldr	x0, [x19, #320]
  44a5c0:	str	x23, [x19, #256]
  44a5c4:	strb	w21, [x19, #264]
  44a5c8:	cmp	x25, x20
  44a5cc:	add	x0, x0, #0x1
  44a5d0:	str	x0, [x19, #320]
  44a5d4:	b.eq	44cc48 <ferror@plt+0x4a3c8>  // b.none
  44a5d8:	ldrb	w21, [x20]
  44a5dc:	mov	x0, #0x1                   	// #1
  44a5e0:	add	x1, x0, #0x1
  44a5e4:	str	x1, [x19, #256]
  44a5e8:	strb	w21, [x19, x0]
  44a5ec:	add	x20, x20, #0x1
  44a5f0:	strb	w21, [x19, #264]
  44a5f4:	cmp	x25, x20
  44a5f8:	b.eq	44cc4c <ferror@plt+0x4a3cc>  // b.none
  44a5fc:	ldrb	w21, [x20]
  44a600:	cmp	x1, #0xff
  44a604:	b.eq	44a5a4 <ferror@plt+0x47d24>  // b.none
  44a608:	mov	x0, x1
  44a60c:	b	44a5e0 <ferror@plt+0x47d60>
  44a610:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44a614:	add	x20, x20, #0x670
  44a618:	mov	x23, #0x1                   	// #1
  44a61c:	stp	x25, x26, [sp, #64]
  44a620:	add	x25, x20, #0x11
  44a624:	ldr	x1, [x19, #256]
  44a628:	b	44a684 <ferror@plt+0x47e04>
  44a62c:	ldp	x3, x2, [x19, #272]
  44a630:	strb	wzr, [x19, #255]
  44a634:	mov	x0, x19
  44a638:	add	x20, x20, #0x1
  44a63c:	blr	x3
  44a640:	strb	w21, [x19]
  44a644:	ldr	x0, [x19, #320]
  44a648:	str	x23, [x19, #256]
  44a64c:	strb	w21, [x19, #264]
  44a650:	cmp	x25, x20
  44a654:	add	x0, x0, #0x1
  44a658:	str	x0, [x19, #320]
  44a65c:	b.eq	44ceb0 <ferror@plt+0x4a630>  // b.none
  44a660:	ldrb	w21, [x20]
  44a664:	mov	x0, #0x1                   	// #1
  44a668:	add	x1, x0, #0x1
  44a66c:	str	x1, [x19, #256]
  44a670:	strb	w21, [x19, x0]
  44a674:	add	x20, x20, #0x1
  44a678:	strb	w21, [x19, #264]
  44a67c:	cmp	x25, x20
  44a680:	b.eq	44ceb0 <ferror@plt+0x4a630>  // b.none
  44a684:	ldrb	w21, [x20]
  44a688:	cmp	x1, #0xff
  44a68c:	b.eq	44a62c <ferror@plt+0x47dac>  // b.none
  44a690:	mov	x0, x1
  44a694:	b	44a668 <ferror@plt+0x47de8>
  44a698:	ldr	x0, [x2, #8]
  44a69c:	tbnz	w22, #2, 44d860 <ferror@plt+0x4afe0>
  44a6a0:	ldrsw	x22, [x0, #8]
  44a6a4:	ldr	x20, [x0]
  44a6a8:	cbz	x22, 4517f8 <ferror@plt+0x4ef78>
  44a6ac:	add	x22, x20, x22
  44a6b0:	mov	x23, #0x1                   	// #1
  44a6b4:	ldr	x1, [x19, #256]
  44a6b8:	b	44a714 <ferror@plt+0x47e94>
  44a6bc:	ldp	x3, x2, [x19, #272]
  44a6c0:	strb	wzr, [x19, #255]
  44a6c4:	mov	x0, x19
  44a6c8:	add	x20, x20, #0x1
  44a6cc:	blr	x3
  44a6d0:	strb	w21, [x19]
  44a6d4:	ldr	x0, [x19, #320]
  44a6d8:	str	x23, [x19, #256]
  44a6dc:	strb	w21, [x19, #264]
  44a6e0:	cmp	x20, x22
  44a6e4:	add	x0, x0, #0x1
  44a6e8:	str	x0, [x19, #320]
  44a6ec:	b.eq	451064 <ferror@plt+0x4e7e4>  // b.none
  44a6f0:	ldrb	w21, [x20]
  44a6f4:	mov	x0, #0x1                   	// #1
  44a6f8:	add	x1, x0, #0x1
  44a6fc:	str	x1, [x19, #256]
  44a700:	strb	w21, [x19, x0]
  44a704:	add	x20, x20, #0x1
  44a708:	strb	w21, [x19, #264]
  44a70c:	cmp	x22, x20
  44a710:	b.eq	450384 <ferror@plt+0x4db04>  // b.none
  44a714:	ldrb	w21, [x20]
  44a718:	cmp	x1, #0xff
  44a71c:	b.eq	44a6bc <ferror@plt+0x47e3c>  // b.none
  44a720:	mov	x0, x1
  44a724:	b	44a6f8 <ferror@plt+0x47e78>
  44a728:	ldr	x20, [x2, #8]
  44a72c:	cbz	x20, 44d020 <ferror@plt+0x4a7a0>
  44a730:	ldr	w0, [x20, #4]
  44a734:	cmp	w0, #0x1
  44a738:	b.gt	44d020 <ferror@plt+0x4a7a0>
  44a73c:	ldr	w1, [x19, #308]
  44a740:	cmp	w1, #0x400
  44a744:	b.gt	44d020 <ferror@plt+0x4a7a0>
  44a748:	ldr	x3, [x19, #328]
  44a74c:	add	w0, w0, #0x1
  44a750:	str	w0, [x20, #4]
  44a754:	add	w1, w1, #0x1
  44a758:	add	x0, sp, #0x80
  44a75c:	str	w1, [x19, #308]
  44a760:	str	x0, [x19, #328]
  44a764:	mov	w1, w22
  44a768:	mov	x0, x19
  44a76c:	mov	x2, x20
  44a770:	stp	x20, x3, [sp, #128]
  44a774:	bl	448dd0 <ferror@plt+0x46550>
  44a778:	ldr	w1, [x20, #4]
  44a77c:	ldr	x0, [sp, #136]
  44a780:	sub	w1, w1, #0x1
  44a784:	ldp	x21, x22, [sp, #32]
  44a788:	ldp	x23, x24, [sp, #48]
  44a78c:	str	x0, [x19, #328]
  44a790:	ldr	w0, [x19, #308]
  44a794:	str	w1, [x20, #4]
  44a798:	sub	w0, w0, #0x1
  44a79c:	str	w0, [x19, #308]
  44a7a0:	b	448e38 <ferror@plt+0x465b8>
  44a7a4:	ldr	x0, [x19, #256]
  44a7a8:	cmp	x0, #0xff
  44a7ac:	b.eq	44eb0c <ferror@plt+0x4c28c>  // b.none
  44a7b0:	add	x1, x0, #0x1
  44a7b4:	str	x1, [x19, #256]
  44a7b8:	mov	w2, #0x56                  	// #86
  44a7bc:	strb	w2, [x19, x0]
  44a7c0:	strb	w2, [x19, #264]
  44a7c4:	cmp	x1, #0xff
  44a7c8:	b.ne	44e290 <ferror@plt+0x4ba10>  // b.any
  44a7cc:	ldp	x3, x2, [x19, #272]
  44a7d0:	strb	wzr, [x19, #255]
  44a7d4:	mov	x0, x19
  44a7d8:	blr	x3
  44a7dc:	ldr	x0, [x19, #320]
  44a7e0:	mov	w3, #0x5454                	// #21588
  44a7e4:	mov	w2, #0x20                  	// #32
  44a7e8:	mov	x1, #0x3                   	// #3
  44a7ec:	add	x0, x0, #0x1
  44a7f0:	strh	w3, [x19]
  44a7f4:	strb	w2, [x19, #2]
  44a7f8:	str	x0, [x19, #320]
  44a7fc:	add	x0, x1, #0x1
  44a800:	str	x0, [x19, #256]
  44a804:	mov	w2, #0x66                  	// #102
  44a808:	strb	w2, [x19, x1]
  44a80c:	strb	w2, [x19, #264]
  44a810:	cmp	x0, #0xff
  44a814:	b.ne	44e2e0 <ferror@plt+0x4ba60>  // b.any
  44a818:	ldp	x3, x2, [x19, #272]
  44a81c:	strb	wzr, [x19, #255]
  44a820:	mov	x1, x0
  44a824:	mov	x0, x19
  44a828:	blr	x3
  44a82c:	ldr	x0, [x19, #320]
  44a830:	mov	w2, #0x6f                  	// #111
  44a834:	mov	x1, #0x1                   	// #1
  44a838:	strb	w2, [x19]
  44a83c:	add	x0, x0, x1
  44a840:	str	x0, [x19, #320]
  44a844:	add	x0, x1, #0x1
  44a848:	mov	w2, #0x72                  	// #114
  44a84c:	strb	w2, [x19, x1]
  44a850:	add	x1, x0, #0x1
  44a854:	str	x1, [x19, #256]
  44a858:	mov	w1, #0x20                  	// #32
  44a85c:	strb	w1, [x19, x0]
  44a860:	strb	w1, [x19, #264]
  44a864:	ldr	x20, [x24, #8]
  44a868:	cbz	x20, 44d140 <ferror@plt+0x4a8c0>
  44a86c:	ldr	w0, [x20, #4]
  44a870:	cmp	w0, #0x1
  44a874:	b.gt	44d140 <ferror@plt+0x4a8c0>
  44a878:	ldr	w1, [x19, #308]
  44a87c:	cmp	w1, #0x400
  44a880:	b.gt	44d140 <ferror@plt+0x4a8c0>
  44a884:	ldr	x3, [x19, #328]
  44a888:	add	w0, w0, #0x1
  44a88c:	str	w0, [x20, #4]
  44a890:	add	w1, w1, #0x1
  44a894:	add	x0, sp, #0x80
  44a898:	str	w1, [x19, #308]
  44a89c:	str	x0, [x19, #328]
  44a8a0:	mov	w1, w22
  44a8a4:	mov	x0, x19
  44a8a8:	mov	x2, x20
  44a8ac:	stp	x20, x3, [sp, #128]
  44a8b0:	bl	448dd0 <ferror@plt+0x46550>
  44a8b4:	ldr	w1, [x20, #4]
  44a8b8:	ldr	x0, [sp, #136]
  44a8bc:	sub	w1, w1, #0x1
  44a8c0:	ldp	x21, x22, [sp, #32]
  44a8c4:	ldp	x23, x24, [sp, #48]
  44a8c8:	str	x0, [x19, #328]
  44a8cc:	ldr	w0, [x19, #308]
  44a8d0:	str	w1, [x20, #4]
  44a8d4:	sub	w0, w0, #0x1
  44a8d8:	str	w0, [x19, #308]
  44a8dc:	b	448e38 <ferror@plt+0x465b8>
  44a8e0:	ldr	x1, [x19, #256]
  44a8e4:	ldrb	w20, [x2, #8]
  44a8e8:	add	x0, x1, #0x1
  44a8ec:	cmp	x1, #0xff
  44a8f0:	b.ne	44a918 <ferror@plt+0x48098>  // b.any
  44a8f4:	ldp	x3, x2, [x19, #272]
  44a8f8:	strb	wzr, [x19, #255]
  44a8fc:	mov	x0, x19
  44a900:	blr	x3
  44a904:	ldr	x2, [x19, #320]
  44a908:	mov	x0, #0x1                   	// #1
  44a90c:	mov	x1, #0x0                   	// #0
  44a910:	add	x2, x2, x0
  44a914:	str	x2, [x19, #320]
  44a918:	str	x0, [x19, #256]
  44a91c:	strb	w20, [x19, x1]
  44a920:	strb	w20, [x19, #264]
  44a924:	ldp	x21, x22, [sp, #32]
  44a928:	ldp	x23, x24, [sp, #48]
  44a92c:	b	448e38 <ferror@plt+0x465b8>
  44a930:	ldr	x0, [x19, #256]
  44a934:	cmp	x0, #0xff
  44a938:	b.eq	44f108 <ferror@plt+0x4c888>  // b.none
  44a93c:	add	x1, x0, #0x1
  44a940:	str	x1, [x19, #256]
  44a944:	mov	w2, #0x6a                  	// #106
  44a948:	strb	w2, [x19, x0]
  44a94c:	strb	w2, [x19, #264]
  44a950:	cmp	x1, #0xff
  44a954:	b.ne	44d53c <ferror@plt+0x4acbc>  // b.any
  44a958:	ldp	x3, x2, [x19, #272]
  44a95c:	strb	wzr, [x19, #255]
  44a960:	mov	x0, x19
  44a964:	blr	x3
  44a968:	ldr	x0, [x19, #320]
  44a96c:	mov	w3, #0x7661                	// #30305
  44a970:	mov	w2, #0x61                  	// #97
  44a974:	mov	x1, #0x3                   	// #3
  44a978:	add	x0, x0, #0x1
  44a97c:	strh	w3, [x19]
  44a980:	strb	w2, [x19, #2]
  44a984:	str	x0, [x19, #320]
  44a988:	add	x0, x1, #0x1
  44a98c:	str	x0, [x19, #256]
  44a990:	mov	w2, #0x20                  	// #32
  44a994:	strb	w2, [x19, x1]
  44a998:	strb	w2, [x19, #264]
  44a99c:	cmp	x0, #0xff
  44a9a0:	b.ne	44d58c <ferror@plt+0x4ad0c>  // b.any
  44a9a4:	ldp	x3, x2, [x19, #272]
  44a9a8:	strb	wzr, [x19, #255]
  44a9ac:	mov	x1, x0
  44a9b0:	mov	x0, x19
  44a9b4:	blr	x3
  44a9b8:	ldr	x0, [x19, #320]
  44a9bc:	mov	w3, #0x6572                	// #25970
  44a9c0:	mov	w2, #0x73                  	// #115
  44a9c4:	mov	x1, #0x3                   	// #3
  44a9c8:	add	x0, x0, #0x1
  44a9cc:	strh	w3, [x19]
  44a9d0:	strb	w2, [x19, #2]
  44a9d4:	str	x0, [x19, #320]
  44a9d8:	add	x0, x1, #0x1
  44a9dc:	str	x0, [x19, #256]
  44a9e0:	mov	w2, #0x6f                  	// #111
  44a9e4:	strb	w2, [x19, x1]
  44a9e8:	strb	w2, [x19, #264]
  44a9ec:	cmp	x0, #0xff
  44a9f0:	b.ne	44d5d8 <ferror@plt+0x4ad58>  // b.any
  44a9f4:	ldp	x3, x2, [x19, #272]
  44a9f8:	strb	wzr, [x19, #255]
  44a9fc:	mov	x1, x0
  44aa00:	mov	x0, x19
  44aa04:	blr	x3
  44aa08:	ldr	x0, [x19, #320]
  44aa0c:	mov	w3, #0x7275                	// #29301
  44aa10:	mov	w2, #0x63                  	// #99
  44aa14:	mov	x1, #0x3                   	// #3
  44aa18:	add	x0, x0, #0x1
  44aa1c:	strh	w3, [x19]
  44aa20:	strb	w2, [x19, #2]
  44aa24:	str	x0, [x19, #320]
  44aa28:	add	x0, x1, #0x1
  44aa2c:	str	x0, [x19, #256]
  44aa30:	mov	w2, #0x65                  	// #101
  44aa34:	strb	w2, [x19, x1]
  44aa38:	strb	w2, [x19, #264]
  44aa3c:	cmp	x0, #0xff
  44aa40:	b.ne	44d628 <ferror@plt+0x4ada8>  // b.any
  44aa44:	ldp	x3, x2, [x19, #272]
  44aa48:	strb	wzr, [x19, #255]
  44aa4c:	mov	x1, x0
  44aa50:	mov	x0, x19
  44aa54:	blr	x3
  44aa58:	ldr	x2, [x19, #320]
  44aa5c:	mov	x1, #0x1                   	// #1
  44aa60:	mov	x0, #0x0                   	// #0
  44aa64:	add	x2, x2, x1
  44aa68:	str	x2, [x19, #320]
  44aa6c:	str	x1, [x19, #256]
  44aa70:	mov	w1, #0x20                  	// #32
  44aa74:	strb	w1, [x19, x0]
  44aa78:	strb	w1, [x19, #264]
  44aa7c:	ldr	x20, [x24, #8]
  44aa80:	cbz	x20, 44d154 <ferror@plt+0x4a8d4>
  44aa84:	ldr	w0, [x20, #4]
  44aa88:	cmp	w0, #0x1
  44aa8c:	b.gt	44d154 <ferror@plt+0x4a8d4>
  44aa90:	ldr	w1, [x19, #308]
  44aa94:	cmp	w1, #0x400
  44aa98:	b.gt	44d154 <ferror@plt+0x4a8d4>
  44aa9c:	ldr	x3, [x19, #328]
  44aaa0:	add	w0, w0, #0x1
  44aaa4:	str	w0, [x20, #4]
  44aaa8:	add	w1, w1, #0x1
  44aaac:	add	x0, sp, #0x80
  44aab0:	str	w1, [x19, #308]
  44aab4:	str	x0, [x19, #328]
  44aab8:	mov	w1, w22
  44aabc:	mov	x0, x19
  44aac0:	mov	x2, x20
  44aac4:	stp	x20, x3, [sp, #128]
  44aac8:	bl	448dd0 <ferror@plt+0x46550>
  44aacc:	ldr	w1, [x20, #4]
  44aad0:	ldr	x0, [sp, #136]
  44aad4:	sub	w1, w1, #0x1
  44aad8:	ldp	x21, x22, [sp, #32]
  44aadc:	ldp	x23, x24, [sp, #48]
  44aae0:	str	x0, [x19, #328]
  44aae4:	ldr	w0, [x19, #308]
  44aae8:	str	w1, [x20, #4]
  44aaec:	sub	w0, w0, #0x1
  44aaf0:	str	w0, [x19, #308]
  44aaf4:	b	448e38 <ferror@plt+0x465b8>
  44aaf8:	ldr	x20, [x2, #8]
  44aafc:	cbz	x20, 44d2a0 <ferror@plt+0x4aa20>
  44ab00:	ldr	w0, [x20, #4]
  44ab04:	cmp	w0, #0x1
  44ab08:	b.gt	44d2a0 <ferror@plt+0x4aa20>
  44ab0c:	ldr	w1, [x19, #308]
  44ab10:	cmp	w1, #0x400
  44ab14:	b.gt	44d2a0 <ferror@plt+0x4aa20>
  44ab18:	ldr	x3, [x19, #328]
  44ab1c:	add	w0, w0, #0x1
  44ab20:	str	w0, [x20, #4]
  44ab24:	add	w1, w1, #0x1
  44ab28:	add	x0, sp, #0x80
  44ab2c:	str	w1, [x19, #308]
  44ab30:	str	x0, [x19, #328]
  44ab34:	mov	w1, w22
  44ab38:	mov	x0, x19
  44ab3c:	mov	x2, x20
  44ab40:	stp	x20, x3, [sp, #128]
  44ab44:	bl	448dd0 <ferror@plt+0x46550>
  44ab48:	ldr	w1, [x20, #4]
  44ab4c:	ldr	x0, [sp, #136]
  44ab50:	str	x0, [x19, #328]
  44ab54:	ldr	w0, [x19, #308]
  44ab58:	sub	w1, w1, #0x1
  44ab5c:	str	w1, [x20, #4]
  44ab60:	sub	w0, w0, #0x1
  44ab64:	str	w0, [x19, #308]
  44ab68:	ldr	x20, [x24, #16]
  44ab6c:	cbz	x20, 44d28c <ferror@plt+0x4aa0c>
  44ab70:	ldr	w0, [x20, #4]
  44ab74:	cmp	w0, #0x1
  44ab78:	b.gt	44d28c <ferror@plt+0x4aa0c>
  44ab7c:	ldr	w1, [x19, #308]
  44ab80:	cmp	w1, #0x400
  44ab84:	b.gt	44d28c <ferror@plt+0x4aa0c>
  44ab88:	ldr	x3, [x19, #328]
  44ab8c:	add	w0, w0, #0x1
  44ab90:	str	w0, [x20, #4]
  44ab94:	add	w1, w1, #0x1
  44ab98:	add	x0, sp, #0x80
  44ab9c:	str	w1, [x19, #308]
  44aba0:	str	x0, [x19, #328]
  44aba4:	mov	w1, w22
  44aba8:	mov	x0, x19
  44abac:	mov	x2, x20
  44abb0:	stp	x20, x3, [sp, #128]
  44abb4:	bl	448dd0 <ferror@plt+0x46550>
  44abb8:	ldr	w1, [x20, #4]
  44abbc:	ldr	x0, [sp, #136]
  44abc0:	sub	w1, w1, #0x1
  44abc4:	ldp	x21, x22, [sp, #32]
  44abc8:	ldp	x23, x24, [sp, #48]
  44abcc:	str	x0, [x19, #328]
  44abd0:	ldr	w0, [x19, #308]
  44abd4:	str	w1, [x20, #4]
  44abd8:	sub	w0, w0, #0x1
  44abdc:	str	w0, [x19, #308]
  44abe0:	b	448e38 <ferror@plt+0x465b8>
  44abe4:	ldrsh	w0, [x2, #18]
  44abe8:	cbnz	w0, 450090 <ferror@plt+0x4d810>
  44abec:	ldr	x20, [x24, #8]
  44abf0:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  44abf4:	add	x0, x0, #0x900
  44abf8:	add	x0, x0, #0x288
  44abfc:	ldr	x1, [x20, #8]
  44ac00:	cmp	x1, x0
  44ac04:	b.ne	44f5b0 <ferror@plt+0x4cd30>  // b.any
  44ac08:	ldr	x0, [x19, #256]
  44ac0c:	cmp	x0, #0xff
  44ac10:	ldrsh	w1, [x24, #16]
  44ac14:	cbz	w1, 44f654 <ferror@plt+0x4cdd4>
  44ac18:	b.eq	450780 <ferror@plt+0x4df00>  // b.none
  44ac1c:	add	x1, x0, #0x1
  44ac20:	str	x1, [x19, #256]
  44ac24:	mov	w2, #0x5f                  	// #95
  44ac28:	strb	w2, [x19, x0]
  44ac2c:	strb	w2, [x19, #264]
  44ac30:	cmp	x1, #0xff
  44ac34:	b.ne	450238 <ferror@plt+0x4d9b8>  // b.any
  44ac38:	ldp	x3, x2, [x19, #272]
  44ac3c:	strb	wzr, [x19, #255]
  44ac40:	mov	x0, x19
  44ac44:	blr	x3
  44ac48:	ldr	x0, [x19, #320]
  44ac4c:	mov	w3, #0x6341                	// #25409
  44ac50:	mov	w2, #0x63                  	// #99
  44ac54:	mov	x1, #0x3                   	// #3
  44ac58:	add	x0, x0, #0x1
  44ac5c:	strh	w3, [x19]
  44ac60:	strb	w2, [x19, #2]
  44ac64:	str	x0, [x19, #320]
  44ac68:	add	x0, x1, #0x1
  44ac6c:	str	x0, [x19, #256]
  44ac70:	mov	w2, #0x75                  	// #117
  44ac74:	strb	w2, [x19, x1]
  44ac78:	strb	w2, [x19, #264]
  44ac7c:	cmp	x0, #0xff
  44ac80:	b.ne	45028c <ferror@plt+0x4da0c>  // b.any
  44ac84:	ldp	x3, x2, [x19, #272]
  44ac88:	strb	wzr, [x19, #255]
  44ac8c:	mov	x1, x0
  44ac90:	mov	x0, x19
  44ac94:	blr	x3
  44ac98:	ldr	x2, [x19, #320]
  44ac9c:	mov	x1, #0x1                   	// #1
  44aca0:	mov	x0, #0x0                   	// #0
  44aca4:	add	x2, x2, x1
  44aca8:	str	x2, [x19, #320]
  44acac:	str	x1, [x19, #256]
  44acb0:	mov	w1, #0x6d                  	// #109
  44acb4:	strb	w1, [x19, x0]
  44acb8:	strb	w1, [x19, #264]
  44acbc:	ldp	x21, x22, [sp, #32]
  44acc0:	ldp	x23, x24, [sp, #48]
  44acc4:	b	448e38 <ferror@plt+0x465b8>
  44acc8:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44accc:	add	x20, x20, #0x548
  44acd0:	mov	x23, #0x1                   	// #1
  44acd4:	stp	x25, x26, [sp, #64]
  44acd8:	add	x25, x20, #0x1e
  44acdc:	ldr	x1, [x19, #256]
  44ace0:	b	44ad3c <ferror@plt+0x484bc>
  44ace4:	ldp	x3, x2, [x19, #272]
  44ace8:	strb	wzr, [x19, #255]
  44acec:	mov	x0, x19
  44acf0:	add	x20, x20, #0x1
  44acf4:	blr	x3
  44acf8:	strb	w21, [x19]
  44acfc:	ldr	x0, [x19, #320]
  44ad00:	str	x23, [x19, #256]
  44ad04:	strb	w21, [x19, #264]
  44ad08:	cmp	x20, x25
  44ad0c:	add	x0, x0, #0x1
  44ad10:	str	x0, [x19, #320]
  44ad14:	b.eq	44cac8 <ferror@plt+0x4a248>  // b.none
  44ad18:	ldrb	w21, [x20]
  44ad1c:	mov	x0, #0x1                   	// #1
  44ad20:	add	x1, x0, #0x1
  44ad24:	str	x1, [x19, #256]
  44ad28:	strb	w21, [x19, x0]
  44ad2c:	add	x20, x20, #0x1
  44ad30:	strb	w21, [x19, #264]
  44ad34:	cmp	x25, x20
  44ad38:	b.eq	44cac8 <ferror@plt+0x4a248>  // b.none
  44ad3c:	ldrb	w21, [x20]
  44ad40:	cmp	x1, #0xff
  44ad44:	b.eq	44ace4 <ferror@plt+0x48464>  // b.none
  44ad48:	mov	x0, x1
  44ad4c:	b	44ad20 <ferror@plt+0x484a0>
  44ad50:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44ad54:	add	x20, x20, #0x5d0
  44ad58:	mov	x23, #0x1                   	// #1
  44ad5c:	stp	x25, x26, [sp, #64]
  44ad60:	add	x25, x20, #0x11
  44ad64:	ldr	x1, [x19, #256]
  44ad68:	b	44adc4 <ferror@plt+0x48544>
  44ad6c:	ldp	x3, x2, [x19, #272]
  44ad70:	strb	wzr, [x19, #255]
  44ad74:	mov	x0, x19
  44ad78:	add	x20, x20, #0x1
  44ad7c:	blr	x3
  44ad80:	strb	w21, [x19]
  44ad84:	ldr	x0, [x19, #320]
  44ad88:	str	x23, [x19, #256]
  44ad8c:	strb	w21, [x19, #264]
  44ad90:	cmp	x20, x25
  44ad94:	add	x0, x0, #0x1
  44ad98:	str	x0, [x19, #320]
  44ad9c:	b.eq	44cbc8 <ferror@plt+0x4a348>  // b.none
  44ada0:	ldrb	w21, [x20]
  44ada4:	mov	x0, #0x1                   	// #1
  44ada8:	add	x1, x0, #0x1
  44adac:	str	x1, [x19, #256]
  44adb0:	strb	w21, [x19, x0]
  44adb4:	add	x20, x20, #0x1
  44adb8:	strb	w21, [x19, #264]
  44adbc:	cmp	x25, x20
  44adc0:	b.eq	44cbc8 <ferror@plt+0x4a348>  // b.none
  44adc4:	ldrb	w21, [x20]
  44adc8:	cmp	x1, #0xff
  44adcc:	b.eq	44ad6c <ferror@plt+0x484ec>  // b.none
  44add0:	mov	x0, x1
  44add4:	b	44ada8 <ferror@plt+0x48528>
  44add8:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44addc:	add	x20, x20, #0x5e8
  44ade0:	mov	x23, #0x1                   	// #1
  44ade4:	stp	x25, x26, [sp, #64]
  44ade8:	add	x25, x20, #0x1a
  44adec:	ldr	x1, [x19, #256]
  44adf0:	b	44ae4c <ferror@plt+0x485cc>
  44adf4:	ldp	x3, x2, [x19, #272]
  44adf8:	strb	wzr, [x19, #255]
  44adfc:	mov	x0, x19
  44ae00:	add	x20, x20, #0x1
  44ae04:	blr	x3
  44ae08:	strb	w21, [x19]
  44ae0c:	ldr	x0, [x19, #320]
  44ae10:	str	x23, [x19, #256]
  44ae14:	strb	w21, [x19, #264]
  44ae18:	cmp	x20, x25
  44ae1c:	add	x0, x0, #0x1
  44ae20:	str	x0, [x19, #320]
  44ae24:	b.eq	44cdb0 <ferror@plt+0x4a530>  // b.none
  44ae28:	ldrb	w21, [x20]
  44ae2c:	mov	x0, #0x1                   	// #1
  44ae30:	add	x1, x0, #0x1
  44ae34:	str	x1, [x19, #256]
  44ae38:	strb	w21, [x19, x0]
  44ae3c:	add	x20, x20, #0x1
  44ae40:	strb	w21, [x19, #264]
  44ae44:	cmp	x25, x20
  44ae48:	b.eq	44cdb0 <ferror@plt+0x4a530>  // b.none
  44ae4c:	ldrb	w21, [x20]
  44ae50:	cmp	x1, #0xff
  44ae54:	b.eq	44adf4 <ferror@plt+0x48574>  // b.none
  44ae58:	mov	x0, x1
  44ae5c:	b	44ae30 <ferror@plt+0x485b0>
  44ae60:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44ae64:	add	x20, x20, #0x6a0
  44ae68:	mov	x23, #0x1                   	// #1
  44ae6c:	stp	x25, x26, [sp, #64]
  44ae70:	add	x25, x20, #0x1a
  44ae74:	ldr	x1, [x19, #256]
  44ae78:	b	44aed4 <ferror@plt+0x48654>
  44ae7c:	ldp	x3, x2, [x19, #272]
  44ae80:	strb	wzr, [x19, #255]
  44ae84:	mov	x0, x19
  44ae88:	add	x20, x20, #0x1
  44ae8c:	blr	x3
  44ae90:	strb	w21, [x19]
  44ae94:	ldr	x0, [x19, #320]
  44ae98:	str	x23, [x19, #256]
  44ae9c:	strb	w21, [x19, #264]
  44aea0:	cmp	x20, x25
  44aea4:	add	x0, x0, #0x1
  44aea8:	str	x0, [x19, #320]
  44aeac:	b.eq	44c748 <ferror@plt+0x49ec8>  // b.none
  44aeb0:	ldrb	w21, [x20]
  44aeb4:	mov	x0, #0x1                   	// #1
  44aeb8:	add	x1, x0, #0x1
  44aebc:	str	x1, [x19, #256]
  44aec0:	strb	w21, [x19, x0]
  44aec4:	add	x20, x20, #0x1
  44aec8:	strb	w21, [x19, #264]
  44aecc:	cmp	x20, x25
  44aed0:	b.eq	44c748 <ferror@plt+0x49ec8>  // b.none
  44aed4:	ldrb	w21, [x20]
  44aed8:	cmp	x1, #0xff
  44aedc:	b.eq	44ae7c <ferror@plt+0x485fc>  // b.none
  44aee0:	mov	x0, x1
  44aee4:	b	44aeb8 <ferror@plt+0x48638>
  44aee8:	ldp	x21, x20, [x2, #8]
  44aeec:	cbz	x21, 44af58 <ferror@plt+0x486d8>
  44aef0:	ldr	w0, [x21, #4]
  44aef4:	cmp	w0, #0x1
  44aef8:	b.gt	44f648 <ferror@plt+0x4cdc8>
  44aefc:	ldr	w1, [x19, #308]
  44af00:	cmp	w1, #0x400
  44af04:	b.gt	44f648 <ferror@plt+0x4cdc8>
  44af08:	ldr	x3, [x19, #328]
  44af0c:	add	w0, w0, #0x1
  44af10:	str	w0, [x21, #4]
  44af14:	add	w1, w1, #0x1
  44af18:	add	x0, sp, #0x80
  44af1c:	str	w1, [x19, #308]
  44af20:	str	x0, [x19, #328]
  44af24:	mov	w1, w22
  44af28:	mov	x0, x19
  44af2c:	mov	x2, x21
  44af30:	stp	x21, x3, [sp, #128]
  44af34:	bl	448dd0 <ferror@plt+0x46550>
  44af38:	ldr	w1, [x21, #4]
  44af3c:	ldr	x0, [sp, #136]
  44af40:	str	x0, [x19, #328]
  44af44:	ldr	w0, [x19, #308]
  44af48:	sub	w1, w1, #0x1
  44af4c:	str	w1, [x21, #4]
  44af50:	sub	w0, w0, #0x1
  44af54:	str	w0, [x19, #308]
  44af58:	ldr	x1, [x19, #256]
  44af5c:	add	x0, x1, #0x1
  44af60:	cmp	x1, #0xff
  44af64:	b.ne	44af8c <ferror@plt+0x4870c>  // b.any
  44af68:	ldp	x3, x2, [x19, #272]
  44af6c:	strb	wzr, [x19, #255]
  44af70:	mov	x0, x19
  44af74:	blr	x3
  44af78:	ldr	x2, [x19, #320]
  44af7c:	mov	x0, #0x1                   	// #1
  44af80:	mov	x1, #0x0                   	// #0
  44af84:	add	x2, x2, x0
  44af88:	str	x2, [x19, #320]
  44af8c:	str	x0, [x19, #256]
  44af90:	mov	w2, #0x7b                  	// #123
  44af94:	strb	w2, [x19, x1]
  44af98:	strb	w2, [x19, #264]
  44af9c:	cbz	x20, 44d23c <ferror@plt+0x4a9bc>
  44afa0:	ldr	w1, [x20, #4]
  44afa4:	cmp	w1, #0x1
  44afa8:	b.gt	44d23c <ferror@plt+0x4a9bc>
  44afac:	ldr	w2, [x19, #308]
  44afb0:	cmp	w2, #0x400
  44afb4:	b.gt	44d23c <ferror@plt+0x4a9bc>
  44afb8:	ldr	x3, [x19, #328]
  44afbc:	add	w1, w1, #0x1
  44afc0:	str	w1, [x20, #4]
  44afc4:	add	w2, w2, #0x1
  44afc8:	add	x0, sp, #0x80
  44afcc:	str	w2, [x19, #308]
  44afd0:	str	x0, [x19, #328]
  44afd4:	mov	w1, w22
  44afd8:	mov	x2, x20
  44afdc:	mov	x0, x19
  44afe0:	stp	x20, x3, [sp, #128]
  44afe4:	bl	448dd0 <ferror@plt+0x46550>
  44afe8:	ldr	w2, [x20, #4]
  44afec:	ldr	x0, [sp, #136]
  44aff0:	str	x0, [x19, #328]
  44aff4:	ldr	w1, [x19, #308]
  44aff8:	sub	w2, w2, #0x1
  44affc:	ldr	x0, [x19, #256]
  44b000:	str	w2, [x20, #4]
  44b004:	sub	w1, w1, #0x1
  44b008:	str	w1, [x19, #308]
  44b00c:	add	x1, x0, #0x1
  44b010:	cmp	x0, #0xff
  44b014:	b.ne	44b040 <ferror@plt+0x487c0>  // b.any
  44b018:	ldp	x3, x2, [x19, #272]
  44b01c:	strb	wzr, [x19, #255]
  44b020:	mov	x1, x0
  44b024:	mov	x0, x19
  44b028:	blr	x3
  44b02c:	ldr	x2, [x19, #320]
  44b030:	mov	x1, #0x1                   	// #1
  44b034:	mov	x0, #0x0                   	// #0
  44b038:	add	x2, x2, x1
  44b03c:	str	x2, [x19, #320]
  44b040:	str	x1, [x19, #256]
  44b044:	mov	w1, #0x7d                  	// #125
  44b048:	strb	w1, [x19, x0]
  44b04c:	strb	w1, [x19, #264]
  44b050:	ldp	x21, x22, [sp, #32]
  44b054:	ldp	x23, x24, [sp, #48]
  44b058:	b	448e38 <ferror@plt+0x465b8>
  44b05c:	ldr	x22, [x2, #8]
  44b060:	ldr	x0, [x19, #256]
  44b064:	ldr	w21, [x22, #16]
  44b068:	cmp	x0, #0xff
  44b06c:	b.eq	44ee3c <ferror@plt+0x4c5bc>  // b.none
  44b070:	add	x1, x0, #0x1
  44b074:	str	x1, [x19, #256]
  44b078:	mov	w2, #0x6f                  	// #111
  44b07c:	strb	w2, [x19, x0]
  44b080:	strb	w2, [x19, #264]
  44b084:	cmp	x1, #0xff
  44b088:	b.ne	44e184 <ferror@plt+0x4b904>  // b.any
  44b08c:	ldp	x3, x2, [x19, #272]
  44b090:	strb	wzr, [x19, #255]
  44b094:	mov	x0, x19
  44b098:	blr	x3
  44b09c:	ldr	x0, [x19, #320]
  44b0a0:	mov	w3, #0x6570                	// #25968
  44b0a4:	mov	w2, #0x72                  	// #114
  44b0a8:	mov	x1, #0x3                   	// #3
  44b0ac:	add	x0, x0, #0x1
  44b0b0:	strh	w3, [x19]
  44b0b4:	strb	w2, [x19, #2]
  44b0b8:	str	x0, [x19, #320]
  44b0bc:	add	x0, x1, #0x1
  44b0c0:	str	x0, [x19, #256]
  44b0c4:	mov	w2, #0x61                  	// #97
  44b0c8:	strb	w2, [x19, x1]
  44b0cc:	strb	w2, [x19, #264]
  44b0d0:	cmp	x0, #0xff
  44b0d4:	b.ne	44e1d4 <ferror@plt+0x4b954>  // b.any
  44b0d8:	ldp	x3, x2, [x19, #272]
  44b0dc:	strb	wzr, [x19, #255]
  44b0e0:	mov	x1, x0
  44b0e4:	mov	x0, x19
  44b0e8:	blr	x3
  44b0ec:	ldr	x0, [x19, #320]
  44b0f0:	mov	w2, #0x74                  	// #116
  44b0f4:	mov	x1, #0x1                   	// #1
  44b0f8:	strb	w2, [x19]
  44b0fc:	add	x0, x0, x1
  44b100:	str	x0, [x19, #320]
  44b104:	add	x0, x1, #0x1
  44b108:	mov	w2, #0x6f                  	// #111
  44b10c:	strb	w2, [x19, x1]
  44b110:	add	x1, x0, #0x1
  44b114:	str	x1, [x19, #256]
  44b118:	mov	w2, #0x72                  	// #114
  44b11c:	strb	w2, [x19, x0]
  44b120:	strb	w2, [x19, #264]
  44b124:	ldr	x20, [x22, #8]
  44b128:	ldrb	w0, [x20]
  44b12c:	sub	w0, w0, #0x61
  44b130:	and	w0, w0, #0xff
  44b134:	cmp	w0, #0x19
  44b138:	b.hi	44b17c <ferror@plt+0x488fc>  // b.pmore
  44b13c:	cmp	x1, #0xff
  44b140:	b.ne	451c00 <ferror@plt+0x4f380>  // b.any
  44b144:	ldp	x3, x2, [x19, #272]
  44b148:	strb	wzr, [x19, #255]
  44b14c:	mov	x0, x19
  44b150:	blr	x3
  44b154:	ldr	x2, [x19, #320]
  44b158:	mov	x1, #0x1                   	// #1
  44b15c:	mov	x0, #0x0                   	// #0
  44b160:	add	x2, x2, x1
  44b164:	ldr	x20, [x22, #8]
  44b168:	str	x2, [x19, #320]
  44b16c:	str	x1, [x19, #256]
  44b170:	mov	w2, #0x20                  	// #32
  44b174:	strb	w2, [x19, x0]
  44b178:	strb	w2, [x19, #264]
  44b17c:	sxtw	x22, w21
  44b180:	sub	w0, w21, #0x1
  44b184:	add	x2, x20, x22
  44b188:	sxtw	x0, w0
  44b18c:	ldurb	w2, [x2, #-1]
  44b190:	cmp	w2, #0x20
  44b194:	csel	x22, x22, x0, ne  // ne = any
  44b198:	cbz	x22, 45126c <ferror@plt+0x4e9ec>
  44b19c:	add	x22, x20, x22
  44b1a0:	mov	x23, #0x1                   	// #1
  44b1a4:	b	44b200 <ferror@plt+0x48980>
  44b1a8:	ldp	x3, x2, [x19, #272]
  44b1ac:	strb	wzr, [x19, #255]
  44b1b0:	mov	x0, x19
  44b1b4:	add	x20, x20, #0x1
  44b1b8:	blr	x3
  44b1bc:	strb	w21, [x19]
  44b1c0:	ldr	x0, [x19, #320]
  44b1c4:	str	x23, [x19, #256]
  44b1c8:	strb	w21, [x19, #264]
  44b1cc:	cmp	x20, x22
  44b1d0:	add	x0, x0, #0x1
  44b1d4:	str	x0, [x19, #320]
  44b1d8:	b.eq	450360 <ferror@plt+0x4dae0>  // b.none
  44b1dc:	ldrb	w21, [x20]
  44b1e0:	mov	x0, #0x1                   	// #1
  44b1e4:	add	x1, x0, #0x1
  44b1e8:	str	x1, [x19, #256]
  44b1ec:	strb	w21, [x19, x0]
  44b1f0:	add	x20, x20, #0x1
  44b1f4:	strb	w21, [x19, #264]
  44b1f8:	cmp	x22, x20
  44b1fc:	b.eq	44d70c <ferror@plt+0x4ae8c>  // b.none
  44b200:	ldrb	w21, [x20]
  44b204:	cmp	x1, #0xff
  44b208:	b.eq	44b1a8 <ferror@plt+0x48928>  // b.none
  44b20c:	mov	x0, x1
  44b210:	b	44b1e4 <ferror@plt+0x48964>
  44b214:	ldr	x0, [x19, #256]
  44b218:	cmp	x0, #0xff
  44b21c:	b.eq	44f4e4 <ferror@plt+0x4cc64>  // b.none
  44b220:	add	x1, x0, #0x1
  44b224:	str	x1, [x19, #256]
  44b228:	mov	w2, #0x6f                  	// #111
  44b22c:	strb	w2, [x19, x0]
  44b230:	strb	w2, [x19, #264]
  44b234:	cmp	x1, #0xff
  44b238:	b.ne	44dc48 <ferror@plt+0x4b3c8>  // b.any
  44b23c:	ldp	x3, x2, [x19, #272]
  44b240:	strb	wzr, [x19, #255]
  44b244:	mov	x0, x19
  44b248:	blr	x3
  44b24c:	ldr	x0, [x19, #320]
  44b250:	mov	w2, #0x6570                	// #25968
  44b254:	mov	w1, #0x72                  	// #114
  44b258:	mov	x3, #0x3                   	// #3
  44b25c:	add	x0, x0, #0x1
  44b260:	strh	w2, [x19]
  44b264:	strb	w1, [x19, #2]
  44b268:	str	x0, [x19, #320]
  44b26c:	add	x1, x3, #0x1
  44b270:	str	x1, [x19, #256]
  44b274:	mov	w0, #0x61                  	// #97
  44b278:	strb	w0, [x19, x3]
  44b27c:	strb	w0, [x19, #264]
  44b280:	cmp	x1, #0xff
  44b284:	b.ne	44dc98 <ferror@plt+0x4b418>  // b.any
  44b288:	ldp	x3, x2, [x19, #272]
  44b28c:	strb	wzr, [x19, #255]
  44b290:	mov	x0, x19
  44b294:	blr	x3
  44b298:	ldr	x0, [x19, #320]
  44b29c:	mov	w2, #0x6f74                	// #28532
  44b2a0:	mov	x1, #0x2                   	// #2
  44b2a4:	strh	w2, [x19]
  44b2a8:	add	x0, x0, #0x1
  44b2ac:	str	x0, [x19, #320]
  44b2b0:	add	x0, x1, #0x1
  44b2b4:	mov	w2, #0x72                  	// #114
  44b2b8:	strb	w2, [x19, x1]
  44b2bc:	add	x1, x0, #0x1
  44b2c0:	str	x1, [x19, #256]
  44b2c4:	mov	w1, #0x20                  	// #32
  44b2c8:	strb	w1, [x19, x0]
  44b2cc:	strb	w1, [x19, #264]
  44b2d0:	ldr	x20, [x24, #16]
  44b2d4:	cbz	x20, 44d278 <ferror@plt+0x4a9f8>
  44b2d8:	ldr	w0, [x20, #4]
  44b2dc:	cmp	w0, #0x1
  44b2e0:	b.gt	44d278 <ferror@plt+0x4a9f8>
  44b2e4:	ldr	w1, [x19, #308]
  44b2e8:	cmp	w1, #0x400
  44b2ec:	b.gt	44d278 <ferror@plt+0x4a9f8>
  44b2f0:	ldr	x3, [x19, #328]
  44b2f4:	add	w0, w0, #0x1
  44b2f8:	str	w0, [x20, #4]
  44b2fc:	add	w1, w1, #0x1
  44b300:	add	x0, sp, #0x80
  44b304:	str	w1, [x19, #308]
  44b308:	str	x0, [x19, #328]
  44b30c:	mov	w1, w22
  44b310:	mov	x0, x19
  44b314:	mov	x2, x20
  44b318:	stp	x20, x3, [sp, #128]
  44b31c:	bl	448dd0 <ferror@plt+0x46550>
  44b320:	ldr	w1, [x20, #4]
  44b324:	ldr	x0, [sp, #136]
  44b328:	sub	w1, w1, #0x1
  44b32c:	ldp	x21, x22, [sp, #32]
  44b330:	ldp	x23, x24, [sp, #48]
  44b334:	str	x0, [x19, #328]
  44b338:	ldr	w0, [x19, #308]
  44b33c:	str	w1, [x20, #4]
  44b340:	sub	w0, w0, #0x1
  44b344:	str	w0, [x19, #308]
  44b348:	b	448e38 <ferror@plt+0x465b8>
  44b34c:	ldr	x20, [x2, #8]
  44b350:	cbz	x20, 44d06c <ferror@plt+0x4a7ec>
  44b354:	ldr	w0, [x20, #4]
  44b358:	cmp	w0, #0x1
  44b35c:	b.gt	44d06c <ferror@plt+0x4a7ec>
  44b360:	ldr	w1, [x19, #308]
  44b364:	cmp	w1, #0x400
  44b368:	b.gt	44d06c <ferror@plt+0x4a7ec>
  44b36c:	ldr	x3, [x19, #328]
  44b370:	add	w0, w0, #0x1
  44b374:	str	w0, [x20, #4]
  44b378:	add	w1, w1, #0x1
  44b37c:	add	x0, sp, #0x80
  44b380:	str	w1, [x19, #308]
  44b384:	str	x0, [x19, #328]
  44b388:	mov	w1, w22
  44b38c:	mov	x0, x19
  44b390:	mov	x2, x20
  44b394:	stp	x20, x3, [sp, #128]
  44b398:	bl	448dd0 <ferror@plt+0x46550>
  44b39c:	ldr	w1, [x20, #4]
  44b3a0:	ldr	x0, [sp, #136]
  44b3a4:	str	x0, [x19, #328]
  44b3a8:	ldr	w0, [x19, #308]
  44b3ac:	sub	w1, w1, #0x1
  44b3b0:	str	w1, [x20, #4]
  44b3b4:	sub	w0, w0, #0x1
  44b3b8:	str	w0, [x19, #308]
  44b3bc:	ldr	x0, [x19, #256]
  44b3c0:	cmp	x0, #0xff
  44b3c4:	b.eq	44ec1c <ferror@plt+0x4c39c>  // b.none
  44b3c8:	add	x1, x0, #0x1
  44b3cc:	str	x1, [x19, #256]
  44b3d0:	mov	w2, #0x20                  	// #32
  44b3d4:	strb	w2, [x19, x0]
  44b3d8:	strb	w2, [x19, #264]
  44b3dc:	cmp	x1, #0xff
  44b3e0:	b.ne	44e52c <ferror@plt+0x4bcac>  // b.any
  44b3e4:	ldp	x3, x2, [x19, #272]
  44b3e8:	strb	wzr, [x19, #255]
  44b3ec:	mov	x0, x19
  44b3f0:	blr	x3
  44b3f4:	ldr	x0, [x19, #320]
  44b3f8:	mov	w3, #0x635b                	// #25435
  44b3fc:	mov	w2, #0x6c                  	// #108
  44b400:	mov	x1, #0x3                   	// #3
  44b404:	add	x0, x0, #0x1
  44b408:	strh	w3, [x19]
  44b40c:	strb	w2, [x19, #2]
  44b410:	str	x0, [x19, #320]
  44b414:	add	x0, x1, #0x1
  44b418:	str	x0, [x19, #256]
  44b41c:	mov	w2, #0x6f                  	// #111
  44b420:	strb	w2, [x19, x1]
  44b424:	strb	w2, [x19, #264]
  44b428:	cmp	x0, #0xff
  44b42c:	b.ne	44e57c <ferror@plt+0x4bcfc>  // b.any
  44b430:	ldp	x3, x2, [x19, #272]
  44b434:	strb	wzr, [x19, #255]
  44b438:	mov	x1, x0
  44b43c:	mov	x0, x19
  44b440:	blr	x3
  44b444:	ldr	x0, [x19, #320]
  44b448:	mov	w1, #0x6e                  	// #110
  44b44c:	mov	x2, #0x1                   	// #1
  44b450:	strb	w1, [x19]
  44b454:	add	x0, x0, x2
  44b458:	str	x0, [x19, #320]
  44b45c:	add	x1, x2, #0x1
  44b460:	mov	w0, #0x65                  	// #101
  44b464:	strb	w0, [x19, x2]
  44b468:	add	x0, x1, #0x1
  44b46c:	str	x0, [x19, #256]
  44b470:	mov	w2, #0x20                  	// #32
  44b474:	strb	w2, [x19, x1]
  44b478:	strb	w2, [x19, #264]
  44b47c:	ldr	x20, [x24, #16]
  44b480:	cbz	x20, 44d218 <ferror@plt+0x4a998>
  44b484:	ldr	w1, [x20, #4]
  44b488:	cmp	w1, #0x1
  44b48c:	b.gt	44d218 <ferror@plt+0x4a998>
  44b490:	ldr	w2, [x19, #308]
  44b494:	cmp	w2, #0x400
  44b498:	b.gt	44d218 <ferror@plt+0x4a998>
  44b49c:	ldr	x3, [x19, #328]
  44b4a0:	add	w1, w1, #0x1
  44b4a4:	str	w1, [x20, #4]
  44b4a8:	add	w2, w2, #0x1
  44b4ac:	add	x0, sp, #0x80
  44b4b0:	str	w2, [x19, #308]
  44b4b4:	str	x0, [x19, #328]
  44b4b8:	mov	w1, w22
  44b4bc:	mov	x2, x20
  44b4c0:	mov	x0, x19
  44b4c4:	stp	x20, x3, [sp, #128]
  44b4c8:	bl	448dd0 <ferror@plt+0x46550>
  44b4cc:	ldr	w2, [x20, #4]
  44b4d0:	ldr	x0, [sp, #136]
  44b4d4:	str	x0, [x19, #328]
  44b4d8:	ldr	w1, [x19, #308]
  44b4dc:	sub	w2, w2, #0x1
  44b4e0:	ldr	x0, [x19, #256]
  44b4e4:	str	w2, [x20, #4]
  44b4e8:	sub	w1, w1, #0x1
  44b4ec:	str	w1, [x19, #308]
  44b4f0:	add	x1, x0, #0x1
  44b4f4:	cmp	x0, #0xff
  44b4f8:	b.ne	44b524 <ferror@plt+0x48ca4>  // b.any
  44b4fc:	ldp	x3, x2, [x19, #272]
  44b500:	strb	wzr, [x19, #255]
  44b504:	mov	x1, x0
  44b508:	mov	x0, x19
  44b50c:	blr	x3
  44b510:	ldr	x2, [x19, #320]
  44b514:	mov	x1, #0x1                   	// #1
  44b518:	mov	x0, #0x0                   	// #0
  44b51c:	add	x2, x2, x1
  44b520:	str	x2, [x19, #320]
  44b524:	str	x1, [x19, #256]
  44b528:	mov	w1, #0x5d                  	// #93
  44b52c:	strb	w1, [x19, x0]
  44b530:	strb	w1, [x19, #264]
  44b534:	ldp	x21, x22, [sp, #32]
  44b538:	ldp	x23, x24, [sp, #48]
  44b53c:	b	448e38 <ferror@plt+0x465b8>
  44b540:	ldr	x2, [x2, #8]
  44b544:	mov	w1, w22
  44b548:	mov	x0, x19
  44b54c:	bl	451ce8 <ferror@plt+0x4f468>
  44b550:	ldp	x21, x22, [sp, #32]
  44b554:	ldp	x23, x24, [sp, #48]
  44b558:	b	448e38 <ferror@plt+0x465b8>
  44b55c:	ldp	x21, x20, [x2, #8]
  44b560:	ldr	w0, [x21]
  44b564:	cmp	w0, #0x32
  44b568:	b.eq	44f864 <ferror@plt+0x4cfe4>  // b.none
  44b56c:	cmp	w0, #0x34
  44b570:	b.ne	451c18 <ferror@plt+0x4f398>  // b.any
  44b574:	ldr	x1, [x19, #256]
  44b578:	add	x0, x1, #0x1
  44b57c:	cmp	x1, #0xff
  44b580:	b.ne	44b5a8 <ferror@plt+0x48d28>  // b.any
  44b584:	ldp	x3, x2, [x19, #272]
  44b588:	strb	wzr, [x19, #255]
  44b58c:	mov	x0, x19
  44b590:	blr	x3
  44b594:	ldr	x2, [x19, #320]
  44b598:	mov	x0, #0x1                   	// #1
  44b59c:	mov	x1, #0x0                   	// #0
  44b5a0:	add	x2, x2, x0
  44b5a4:	str	x2, [x19, #320]
  44b5a8:	str	x0, [x19, #256]
  44b5ac:	mov	w2, #0x28                  	// #40
  44b5b0:	strb	w2, [x19, x1]
  44b5b4:	strb	w2, [x19, #264]
  44b5b8:	ldr	x21, [x21, #8]
  44b5bc:	cbz	x21, 450348 <ferror@plt+0x4dac8>
  44b5c0:	ldr	w1, [x21, #4]
  44b5c4:	cmp	w1, #0x1
  44b5c8:	b.gt	450348 <ferror@plt+0x4dac8>
  44b5cc:	ldr	w2, [x19, #308]
  44b5d0:	cmp	w2, #0x400
  44b5d4:	b.gt	450348 <ferror@plt+0x4dac8>
  44b5d8:	ldr	x3, [x19, #328]
  44b5dc:	add	w1, w1, #0x1
  44b5e0:	str	w1, [x21, #4]
  44b5e4:	add	w2, w2, #0x1
  44b5e8:	add	x0, sp, #0x80
  44b5ec:	str	w2, [x19, #308]
  44b5f0:	str	x0, [x19, #328]
  44b5f4:	mov	w1, w22
  44b5f8:	mov	x2, x21
  44b5fc:	mov	x0, x19
  44b600:	stp	x21, x3, [sp, #128]
  44b604:	bl	448dd0 <ferror@plt+0x46550>
  44b608:	ldr	w2, [x21, #4]
  44b60c:	ldr	x0, [sp, #136]
  44b610:	str	x0, [x19, #328]
  44b614:	ldr	w1, [x19, #308]
  44b618:	sub	w2, w2, #0x1
  44b61c:	ldr	x0, [x19, #256]
  44b620:	str	w2, [x21, #4]
  44b624:	sub	w1, w1, #0x1
  44b628:	str	w1, [x19, #308]
  44b62c:	add	x1, x0, #0x1
  44b630:	cmp	x0, #0xff
  44b634:	b.ne	44b660 <ferror@plt+0x48de0>  // b.any
  44b638:	ldp	x3, x2, [x19, #272]
  44b63c:	strb	wzr, [x19, #255]
  44b640:	mov	x1, x0
  44b644:	mov	x0, x19
  44b648:	blr	x3
  44b64c:	ldr	x2, [x19, #320]
  44b650:	mov	x1, #0x1                   	// #1
  44b654:	mov	x0, #0x0                   	// #0
  44b658:	add	x2, x2, x1
  44b65c:	str	x2, [x19, #320]
  44b660:	str	x1, [x19, #256]
  44b664:	mov	w1, #0x29                  	// #41
  44b668:	strb	w1, [x19, x0]
  44b66c:	strb	w1, [x19, #264]
  44b670:	mov	w1, w22
  44b674:	mov	x2, x20
  44b678:	mov	x0, x19
  44b67c:	bl	451e50 <ferror@plt+0x4f5d0>
  44b680:	ldp	x21, x22, [sp, #32]
  44b684:	ldp	x23, x24, [sp, #48]
  44b688:	b	448e38 <ferror@plt+0x465b8>
  44b68c:	ldr	x0, [x2, #16]
  44b690:	ldr	w0, [x0]
  44b694:	cmp	w0, #0x39
  44b698:	b.ne	448e64 <ferror@plt+0x465e4>  // b.any
  44b69c:	ldr	x2, [x2, #8]
  44b6a0:	ldr	x0, [x2, #8]
  44b6a4:	ldr	x0, [x0]
  44b6a8:	ldrb	w1, [x0, #1]
  44b6ac:	cmp	w1, #0x63
  44b6b0:	b.eq	450e70 <ferror@plt+0x4e5f0>  // b.none
  44b6b4:	add	x3, x24, #0x10
  44b6b8:	mov	w1, w22
  44b6bc:	mov	x0, x19
  44b6c0:	bl	451fa0 <ferror@plt+0x4f720>
  44b6c4:	cbnz	w0, 4510c0 <ferror@plt+0x4e840>
  44b6c8:	ldr	x0, [x24, #8]
  44b6cc:	ldr	w1, [x0]
  44b6d0:	cmp	w1, #0x32
  44b6d4:	b.eq	451670 <ferror@plt+0x4edf0>  // b.none
  44b6d8:	ldr	x0, [x0, #8]
  44b6dc:	ldr	x1, [x0]
  44b6e0:	ldrb	w0, [x1]
  44b6e4:	subs	w0, w0, #0x63
  44b6e8:	b.ne	44b6fc <ferror@plt+0x48e7c>  // b.any
  44b6ec:	ldrb	w0, [x1, #1]
  44b6f0:	subs	w0, w0, #0x6c
  44b6f4:	b.ne	44b6fc <ferror@plt+0x48e7c>  // b.any
  44b6f8:	ldrb	w0, [x1, #2]
  44b6fc:	ldr	x1, [x24, #16]
  44b700:	ldr	x2, [x1, #8]
  44b704:	cbnz	w0, 44b714 <ferror@plt+0x48e94>
  44b708:	ldr	w0, [x2]
  44b70c:	cmp	w0, #0x3
  44b710:	b.eq	451790 <ferror@plt+0x4ef10>  // b.none
  44b714:	mov	w1, w22
  44b718:	mov	x0, x19
  44b71c:	bl	451e50 <ferror@plt+0x4f5d0>
  44b720:	ldr	x2, [x24, #8]
  44b724:	ldr	x0, [x2, #8]
  44b728:	ldr	x0, [x0]
  44b72c:	ldrb	w1, [x0]
  44b730:	cmp	w1, #0x69
  44b734:	b.ne	451188 <ferror@plt+0x4e908>  // b.any
  44b738:	ldrb	w3, [x0, #1]
  44b73c:	cmp	w3, #0x78
  44b740:	b.ne	451188 <ferror@plt+0x4e908>  // b.any
  44b744:	ldrb	w3, [x0, #2]
  44b748:	cbnz	w3, 451188 <ferror@plt+0x4e908>
  44b74c:	ldr	x1, [x19, #256]
  44b750:	cmp	x1, #0xff
  44b754:	b.ne	44b77c <ferror@plt+0x48efc>  // b.any
  44b758:	ldp	x3, x2, [x19, #272]
  44b75c:	strb	wzr, [x19, #255]
  44b760:	mov	x0, x19
  44b764:	blr	x3
  44b768:	str	xzr, [x19, #256]
  44b76c:	ldr	x0, [x19, #320]
  44b770:	mov	x1, #0x0                   	// #0
  44b774:	add	x0, x0, #0x1
  44b778:	str	x0, [x19, #320]
  44b77c:	add	x0, x1, #0x1
  44b780:	str	x0, [x19, #256]
  44b784:	mov	w0, #0x5b                  	// #91
  44b788:	strb	w0, [x19, x1]
  44b78c:	strb	w0, [x19, #264]
  44b790:	mov	w1, w22
  44b794:	mov	x0, x19
  44b798:	ldr	x2, [x24, #16]
  44b79c:	ldr	x2, [x2, #16]
  44b7a0:	bl	451c50 <ferror@plt+0x4f3d0>
  44b7a4:	ldr	x1, [x19, #256]
  44b7a8:	cmp	x1, #0xff
  44b7ac:	b.ne	44b7d4 <ferror@plt+0x48f54>  // b.any
  44b7b0:	ldp	x3, x2, [x19, #272]
  44b7b4:	strb	wzr, [x19, #255]
  44b7b8:	mov	x0, x19
  44b7bc:	blr	x3
  44b7c0:	str	xzr, [x19, #256]
  44b7c4:	ldr	x0, [x19, #320]
  44b7c8:	mov	x1, #0x0                   	// #0
  44b7cc:	add	x0, x0, #0x1
  44b7d0:	str	x0, [x19, #320]
  44b7d4:	add	x0, x1, #0x1
  44b7d8:	str	x0, [x19, #256]
  44b7dc:	mov	w0, #0x5d                  	// #93
  44b7e0:	strb	w0, [x19, x1]
  44b7e4:	strb	w0, [x19, #264]
  44b7e8:	ldr	x0, [x24, #8]
  44b7ec:	ldr	w1, [x0]
  44b7f0:	cmp	w1, #0x32
  44b7f4:	b.eq	4516dc <ferror@plt+0x4ee5c>  // b.none
  44b7f8:	ldp	x21, x22, [sp, #32]
  44b7fc:	ldp	x23, x24, [sp, #48]
  44b800:	b	448e38 <ferror@plt+0x465b8>
  44b804:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44b808:	add	x20, x20, #0x5a0
  44b80c:	mov	x23, #0x1                   	// #1
  44b810:	stp	x25, x26, [sp, #64]
  44b814:	add	x25, x20, #0x10
  44b818:	ldr	x1, [x19, #256]
  44b81c:	b	44b878 <ferror@plt+0x48ff8>
  44b820:	ldp	x3, x2, [x19, #272]
  44b824:	strb	wzr, [x19, #255]
  44b828:	mov	x0, x19
  44b82c:	add	x20, x20, #0x1
  44b830:	blr	x3
  44b834:	strb	w21, [x19]
  44b838:	ldr	x0, [x19, #320]
  44b83c:	str	x23, [x19, #256]
  44b840:	strb	w21, [x19, #264]
  44b844:	cmp	x25, x20
  44b848:	add	x0, x0, #0x1
  44b84c:	str	x0, [x19, #320]
  44b850:	b.eq	44c848 <ferror@plt+0x49fc8>  // b.none
  44b854:	ldrb	w21, [x20]
  44b858:	mov	x0, #0x1                   	// #1
  44b85c:	add	x1, x0, #0x1
  44b860:	str	x1, [x19, #256]
  44b864:	strb	w21, [x19, x0]
  44b868:	add	x20, x20, #0x1
  44b86c:	strb	w21, [x19, #264]
  44b870:	cmp	x25, x20
  44b874:	b.eq	44c848 <ferror@plt+0x49fc8>  // b.none
  44b878:	ldrb	w21, [x20]
  44b87c:	cmp	x1, #0xff
  44b880:	b.eq	44b820 <ferror@plt+0x48fa0>  // b.none
  44b884:	mov	x0, x1
  44b888:	b	44b85c <ferror@plt+0x48fdc>
  44b88c:	ldrsw	x22, [x2, #16]
  44b890:	ldr	x20, [x2, #8]
  44b894:	cbz	x22, 451284 <ferror@plt+0x4ea04>
  44b898:	add	x22, x20, x22
  44b89c:	mov	x23, #0x1                   	// #1
  44b8a0:	ldr	x1, [x19, #256]
  44b8a4:	b	44b900 <ferror@plt+0x49080>
  44b8a8:	ldp	x3, x2, [x19, #272]
  44b8ac:	strb	wzr, [x19, #255]
  44b8b0:	mov	x0, x19
  44b8b4:	add	x20, x20, #0x1
  44b8b8:	blr	x3
  44b8bc:	strb	w21, [x19]
  44b8c0:	ldr	x0, [x19, #320]
  44b8c4:	str	x23, [x19, #256]
  44b8c8:	strb	w21, [x19, #264]
  44b8cc:	cmp	x20, x22
  44b8d0:	add	x0, x0, #0x1
  44b8d4:	str	x0, [x19, #320]
  44b8d8:	b.eq	45036c <ferror@plt+0x4daec>  // b.none
  44b8dc:	ldrb	w21, [x20]
  44b8e0:	mov	x0, #0x1                   	// #1
  44b8e4:	add	x1, x0, #0x1
  44b8e8:	str	x1, [x19, #256]
  44b8ec:	strb	w21, [x19, x0]
  44b8f0:	add	x20, x20, #0x1
  44b8f4:	strb	w21, [x19, #264]
  44b8f8:	cmp	x22, x20
  44b8fc:	b.eq	44d718 <ferror@plt+0x4ae98>  // b.none
  44b900:	ldrb	w21, [x20]
  44b904:	cmp	x1, #0xff
  44b908:	b.eq	44b8a8 <ferror@plt+0x49028>  // b.none
  44b90c:	mov	x0, x1
  44b910:	b	44b8e4 <ferror@plt+0x49064>
  44b914:	ldr	w2, [x2, #8]
  44b918:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  44b91c:	add	x1, x1, #0x9e0
  44b920:	add	x0, sp, #0x80
  44b924:	bl	402310 <sprintf@plt>
  44b928:	add	x0, sp, #0x80
  44b92c:	bl	402270 <strlen@plt>
  44b930:	cbz	x0, 451278 <ferror@plt+0x4e9f8>
  44b934:	add	x20, sp, #0x80
  44b938:	mov	x23, #0x1                   	// #1
  44b93c:	add	x22, x20, x0
  44b940:	ldr	x1, [x19, #256]
  44b944:	b	44b9a0 <ferror@plt+0x49120>
  44b948:	ldp	x3, x2, [x19, #272]
  44b94c:	strb	wzr, [x19, #255]
  44b950:	mov	x0, x19
  44b954:	add	x20, x20, #0x1
  44b958:	blr	x3
  44b95c:	strb	w21, [x19]
  44b960:	ldr	x0, [x19, #320]
  44b964:	str	x23, [x19, #256]
  44b968:	strb	w21, [x19, #264]
  44b96c:	cmp	x20, x22
  44b970:	add	x0, x0, #0x1
  44b974:	str	x0, [x19, #320]
  44b978:	b.eq	450354 <ferror@plt+0x4dad4>  // b.none
  44b97c:	ldrb	w21, [x20]
  44b980:	mov	x0, #0x1                   	// #1
  44b984:	add	x1, x0, #0x1
  44b988:	str	x1, [x19, #256]
  44b98c:	strb	w21, [x19, x0]
  44b990:	add	x20, x20, #0x1
  44b994:	strb	w21, [x19, #264]
  44b998:	cmp	x22, x20
  44b99c:	b.eq	44d724 <ferror@plt+0x4aea4>  // b.none
  44b9a0:	ldrb	w21, [x20]
  44b9a4:	cmp	x1, #0xff
  44b9a8:	b.eq	44b948 <ferror@plt+0x490c8>  // b.none
  44b9ac:	mov	x0, x1
  44b9b0:	b	44b984 <ferror@plt+0x49104>
  44b9b4:	ldr	x0, [x19, #256]
  44b9b8:	cmp	x0, #0xff
  44b9bc:	b.eq	44d630 <ferror@plt+0x4adb0>  // b.none
  44b9c0:	add	x1, x0, #0x1
  44b9c4:	str	x1, [x19, #256]
  44b9c8:	mov	w2, #0x64                  	// #100
  44b9cc:	strb	w2, [x19, x0]
  44b9d0:	strb	w2, [x19, #264]
  44b9d4:	cmp	x1, #0xff
  44b9d8:	b.ne	44e9d0 <ferror@plt+0x4c150>  // b.any
  44b9dc:	ldp	x3, x2, [x19, #272]
  44b9e0:	strb	wzr, [x19, #255]
  44b9e4:	mov	x0, x19
  44b9e8:	blr	x3
  44b9ec:	ldr	x0, [x19, #320]
  44b9f0:	mov	w3, #0x6365                	// #25445
  44b9f4:	mov	w2, #0x6c                  	// #108
  44b9f8:	mov	x1, #0x3                   	// #3
  44b9fc:	add	x0, x0, #0x1
  44ba00:	strh	w3, [x19]
  44ba04:	strb	w2, [x19, #2]
  44ba08:	str	x0, [x19, #320]
  44ba0c:	add	x0, x1, #0x1
  44ba10:	str	x0, [x19, #256]
  44ba14:	mov	w2, #0x74                  	// #116
  44ba18:	strb	w2, [x19, x1]
  44ba1c:	strb	w2, [x19, #264]
  44ba20:	cmp	x0, #0xff
  44ba24:	b.ne	44ea20 <ferror@plt+0x4c1a0>  // b.any
  44ba28:	ldp	x3, x2, [x19, #272]
  44ba2c:	strb	wzr, [x19, #255]
  44ba30:	mov	x1, x0
  44ba34:	mov	x0, x19
  44ba38:	blr	x3
  44ba3c:	ldr	x0, [x19, #320]
  44ba40:	mov	w2, #0x7079                	// #28793
  44ba44:	mov	w1, #0x65                  	// #101
  44ba48:	mov	x3, #0x3                   	// #3
  44ba4c:	add	x0, x0, #0x1
  44ba50:	strh	w2, [x19]
  44ba54:	strb	w1, [x19, #2]
  44ba58:	str	x0, [x19, #320]
  44ba5c:	add	x1, x3, #0x1
  44ba60:	str	x1, [x19, #256]
  44ba64:	mov	w0, #0x20                  	// #32
  44ba68:	strb	w0, [x19, x3]
  44ba6c:	strb	w0, [x19, #264]
  44ba70:	cmp	x1, #0xff
  44ba74:	b.ne	44d6f8 <ferror@plt+0x4ae78>  // b.any
  44ba78:	ldp	x3, x2, [x19, #272]
  44ba7c:	strb	wzr, [x19, #255]
  44ba80:	mov	x0, x19
  44ba84:	blr	x3
  44ba88:	ldr	x2, [x19, #320]
  44ba8c:	mov	x0, #0x1                   	// #1
  44ba90:	mov	x1, #0x0                   	// #0
  44ba94:	add	x2, x2, x0
  44ba98:	str	x2, [x19, #320]
  44ba9c:	str	x0, [x19, #256]
  44baa0:	mov	w2, #0x28                  	// #40
  44baa4:	strb	w2, [x19, x1]
  44baa8:	strb	w2, [x19, #264]
  44baac:	ldr	x20, [x24, #8]
  44bab0:	cbz	x20, 44d048 <ferror@plt+0x4a7c8>
  44bab4:	ldr	w1, [x20, #4]
  44bab8:	cmp	w1, #0x1
  44babc:	b.gt	44d048 <ferror@plt+0x4a7c8>
  44bac0:	ldr	w2, [x19, #308]
  44bac4:	cmp	w2, #0x400
  44bac8:	b.gt	44d048 <ferror@plt+0x4a7c8>
  44bacc:	ldr	x3, [x19, #328]
  44bad0:	add	w1, w1, #0x1
  44bad4:	str	w1, [x20, #4]
  44bad8:	add	w2, w2, #0x1
  44badc:	add	x0, sp, #0x80
  44bae0:	str	w2, [x19, #308]
  44bae4:	str	x0, [x19, #328]
  44bae8:	mov	w1, w22
  44baec:	mov	x2, x20
  44baf0:	mov	x0, x19
  44baf4:	stp	x20, x3, [sp, #128]
  44baf8:	bl	448dd0 <ferror@plt+0x46550>
  44bafc:	ldr	w2, [x20, #4]
  44bb00:	ldr	x0, [sp, #136]
  44bb04:	str	x0, [x19, #328]
  44bb08:	ldr	w1, [x19, #308]
  44bb0c:	sub	w2, w2, #0x1
  44bb10:	ldr	x0, [x19, #256]
  44bb14:	str	w2, [x20, #4]
  44bb18:	sub	w1, w1, #0x1
  44bb1c:	str	w1, [x19, #308]
  44bb20:	add	x1, x0, #0x1
  44bb24:	cmp	x0, #0xff
  44bb28:	b.ne	44bb54 <ferror@plt+0x492d4>  // b.any
  44bb2c:	ldp	x3, x2, [x19, #272]
  44bb30:	strb	wzr, [x19, #255]
  44bb34:	mov	x1, x0
  44bb38:	mov	x0, x19
  44bb3c:	blr	x3
  44bb40:	ldr	x2, [x19, #320]
  44bb44:	mov	x1, #0x1                   	// #1
  44bb48:	mov	x0, #0x0                   	// #0
  44bb4c:	add	x2, x2, x1
  44bb50:	str	x2, [x19, #320]
  44bb54:	str	x1, [x19, #256]
  44bb58:	mov	w1, #0x29                  	// #41
  44bb5c:	strb	w1, [x19, x0]
  44bb60:	strb	w1, [x19, #264]
  44bb64:	ldp	x21, x22, [sp, #32]
  44bb68:	ldp	x23, x24, [sp, #48]
  44bb6c:	b	448e38 <ferror@plt+0x465b8>
  44bb70:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44bb74:	add	x20, x20, #0x6f0
  44bb78:	mov	x23, #0x1                   	// #1
  44bb7c:	stp	x25, x26, [sp, #64]
  44bb80:	add	x25, x20, #0x1d
  44bb84:	ldr	x1, [x19, #256]
  44bb88:	b	44bbe4 <ferror@plt+0x49364>
  44bb8c:	ldp	x3, x2, [x19, #272]
  44bb90:	strb	wzr, [x19, #255]
  44bb94:	mov	x0, x19
  44bb98:	add	x20, x20, #0x1
  44bb9c:	blr	x3
  44bba0:	strb	w21, [x19]
  44bba4:	ldr	x0, [x19, #320]
  44bba8:	str	x23, [x19, #256]
  44bbac:	strb	w21, [x19, #264]
  44bbb0:	cmp	x20, x25
  44bbb4:	add	x0, x0, #0x1
  44bbb8:	str	x0, [x19, #320]
  44bbbc:	b.eq	44c948 <ferror@plt+0x4a0c8>  // b.none
  44bbc0:	ldrb	w21, [x20]
  44bbc4:	mov	x0, #0x1                   	// #1
  44bbc8:	add	x1, x0, #0x1
  44bbcc:	str	x1, [x19, #256]
  44bbd0:	strb	w21, [x19, x0]
  44bbd4:	add	x20, x20, #0x1
  44bbd8:	strb	w21, [x19, #264]
  44bbdc:	cmp	x25, x20
  44bbe0:	b.eq	44c948 <ferror@plt+0x4a0c8>  // b.none
  44bbe4:	ldrb	w21, [x20]
  44bbe8:	cmp	x1, #0xff
  44bbec:	b.eq	44bb8c <ferror@plt+0x4930c>  // b.none
  44bbf0:	mov	x0, x1
  44bbf4:	b	44bbc8 <ferror@plt+0x49348>
  44bbf8:	ldr	x1, [x19, #256]
  44bbfc:	add	x0, x1, #0x1
  44bc00:	cmp	x1, #0xff
  44bc04:	b.ne	44bc2c <ferror@plt+0x493ac>  // b.any
  44bc08:	ldp	x3, x2, [x19, #272]
  44bc0c:	strb	wzr, [x19, #255]
  44bc10:	mov	x0, x19
  44bc14:	blr	x3
  44bc18:	ldr	x2, [x19, #320]
  44bc1c:	mov	x0, #0x1                   	// #1
  44bc20:	mov	x1, #0x0                   	// #0
  44bc24:	add	x2, x2, x0
  44bc28:	str	x2, [x19, #320]
  44bc2c:	str	x0, [x19, #256]
  44bc30:	mov	w0, #0x7e                  	// #126
  44bc34:	strb	w0, [x19, x1]
  44bc38:	strb	w0, [x19, #264]
  44bc3c:	ldr	x20, [x24, #16]
  44bc40:	cbz	x20, 44d034 <ferror@plt+0x4a7b4>
  44bc44:	ldr	w0, [x20, #4]
  44bc48:	cmp	w0, #0x1
  44bc4c:	b.gt	44d034 <ferror@plt+0x4a7b4>
  44bc50:	ldr	w1, [x19, #308]
  44bc54:	cmp	w1, #0x400
  44bc58:	b.gt	44d034 <ferror@plt+0x4a7b4>
  44bc5c:	ldr	x3, [x19, #328]
  44bc60:	add	w0, w0, #0x1
  44bc64:	str	w0, [x20, #4]
  44bc68:	add	w1, w1, #0x1
  44bc6c:	add	x0, sp, #0x80
  44bc70:	str	w1, [x19, #308]
  44bc74:	str	x0, [x19, #328]
  44bc78:	mov	w1, w22
  44bc7c:	mov	x0, x19
  44bc80:	mov	x2, x20
  44bc84:	stp	x20, x3, [sp, #128]
  44bc88:	bl	448dd0 <ferror@plt+0x46550>
  44bc8c:	ldr	w1, [x20, #4]
  44bc90:	ldr	x0, [sp, #136]
  44bc94:	sub	w1, w1, #0x1
  44bc98:	ldp	x21, x22, [sp, #32]
  44bc9c:	ldp	x23, x24, [sp, #48]
  44bca0:	str	x0, [x19, #328]
  44bca4:	ldr	w0, [x19, #308]
  44bca8:	str	w1, [x20, #4]
  44bcac:	sub	w0, w0, #0x1
  44bcb0:	str	w0, [x19, #308]
  44bcb4:	b	448e38 <ferror@plt+0x465b8>
  44bcb8:	ldr	x0, [x19, #256]
  44bcbc:	cmp	x0, #0xff
  44bcc0:	b.eq	44e7cc <ferror@plt+0x4bf4c>  // b.none
  44bcc4:	add	x1, x0, #0x1
  44bcc8:	str	x1, [x19, #256]
  44bccc:	mov	w2, #0x76                  	// #118
  44bcd0:	strb	w2, [x19, x0]
  44bcd4:	strb	w2, [x19, #264]
  44bcd8:	cmp	x1, #0xff
  44bcdc:	b.ne	44df0c <ferror@plt+0x4b68c>  // b.any
  44bce0:	ldp	x3, x2, [x19, #272]
  44bce4:	strb	wzr, [x19, #255]
  44bce8:	mov	x0, x19
  44bcec:	blr	x3
  44bcf0:	ldr	x0, [x19, #320]
  44bcf4:	mov	w2, #0x6174                	// #24948
  44bcf8:	mov	w1, #0x62                  	// #98
  44bcfc:	mov	x3, #0x3                   	// #3
  44bd00:	add	x0, x0, #0x1
  44bd04:	strh	w2, [x19]
  44bd08:	strb	w1, [x19, #2]
  44bd0c:	str	x0, [x19, #320]
  44bd10:	add	x1, x3, #0x1
  44bd14:	str	x1, [x19, #256]
  44bd18:	mov	w0, #0x6c                  	// #108
  44bd1c:	strb	w0, [x19, x3]
  44bd20:	strb	w0, [x19, #264]
  44bd24:	cmp	x1, #0xff
  44bd28:	b.ne	44df5c <ferror@plt+0x4b6dc>  // b.any
  44bd2c:	ldp	x3, x2, [x19, #272]
  44bd30:	strb	wzr, [x19, #255]
  44bd34:	mov	x0, x19
  44bd38:	blr	x3
  44bd3c:	ldr	x1, [x19, #320]
  44bd40:	mov	w3, #0x2065                	// #8293
  44bd44:	mov	w2, #0x66                  	// #102
  44bd48:	mov	x0, #0x3                   	// #3
  44bd4c:	add	x1, x1, #0x1
  44bd50:	strh	w3, [x19]
  44bd54:	strb	w2, [x19, #2]
  44bd58:	str	x1, [x19, #320]
  44bd5c:	add	x1, x0, #0x1
  44bd60:	str	x1, [x19, #256]
  44bd64:	mov	w2, #0x6f                  	// #111
  44bd68:	strb	w2, [x19, x0]
  44bd6c:	strb	w2, [x19, #264]
  44bd70:	cmp	x1, #0xff
  44bd74:	b.ne	44dfac <ferror@plt+0x4b72c>  // b.any
  44bd78:	ldp	x3, x2, [x19, #272]
  44bd7c:	strb	wzr, [x19, #255]
  44bd80:	mov	x0, x19
  44bd84:	blr	x3
  44bd88:	ldr	x1, [x19, #320]
  44bd8c:	mov	w2, #0x72                  	// #114
  44bd90:	mov	x0, #0x1                   	// #1
  44bd94:	strb	w2, [x19]
  44bd98:	add	x1, x1, x0
  44bd9c:	str	x1, [x19, #320]
  44bda0:	add	x1, x0, #0x1
  44bda4:	str	x1, [x19, #256]
  44bda8:	mov	w1, #0x20                  	// #32
  44bdac:	strb	w1, [x19, x0]
  44bdb0:	strb	w1, [x19, #264]
  44bdb4:	ldr	x20, [x24, #8]
  44bdb8:	cbz	x20, 44d168 <ferror@plt+0x4a8e8>
  44bdbc:	ldr	w0, [x20, #4]
  44bdc0:	cmp	w0, #0x1
  44bdc4:	b.gt	44d168 <ferror@plt+0x4a8e8>
  44bdc8:	ldr	w1, [x19, #308]
  44bdcc:	cmp	w1, #0x400
  44bdd0:	b.gt	44d168 <ferror@plt+0x4a8e8>
  44bdd4:	ldr	x3, [x19, #328]
  44bdd8:	add	w0, w0, #0x1
  44bddc:	str	w0, [x20, #4]
  44bde0:	add	w1, w1, #0x1
  44bde4:	add	x0, sp, #0x80
  44bde8:	str	w1, [x19, #308]
  44bdec:	str	x0, [x19, #328]
  44bdf0:	mov	w1, w22
  44bdf4:	mov	x0, x19
  44bdf8:	mov	x2, x20
  44bdfc:	stp	x20, x3, [sp, #128]
  44be00:	bl	448dd0 <ferror@plt+0x46550>
  44be04:	ldr	w1, [x20, #4]
  44be08:	ldr	x0, [sp, #136]
  44be0c:	sub	w1, w1, #0x1
  44be10:	ldp	x21, x22, [sp, #32]
  44be14:	ldp	x23, x24, [sp, #48]
  44be18:	str	x0, [x19, #328]
  44be1c:	ldr	w0, [x19, #308]
  44be20:	str	w1, [x20, #4]
  44be24:	sub	w0, w0, #0x1
  44be28:	str	w0, [x19, #308]
  44be2c:	b	448e38 <ferror@plt+0x465b8>
  44be30:	ldr	x0, [x19, #256]
  44be34:	cmp	x0, #0xff
  44be38:	b.eq	44f3cc <ferror@plt+0x4cb4c>  // b.none
  44be3c:	add	x1, x0, #0x1
  44be40:	str	x1, [x19, #256]
  44be44:	mov	w2, #0x74                  	// #116
  44be48:	strb	w2, [x19, x0]
  44be4c:	strb	w2, [x19, #264]
  44be50:	cmp	x1, #0xff
  44be54:	b.ne	44e098 <ferror@plt+0x4b818>  // b.any
  44be58:	ldp	x3, x2, [x19, #272]
  44be5c:	strb	wzr, [x19, #255]
  44be60:	mov	x0, x19
  44be64:	blr	x3
  44be68:	ldr	x0, [x19, #320]
  44be6c:	mov	w2, #0x7079                	// #28793
  44be70:	mov	w1, #0x65                  	// #101
  44be74:	mov	x3, #0x3                   	// #3
  44be78:	add	x0, x0, #0x1
  44be7c:	strh	w2, [x19]
  44be80:	strb	w1, [x19, #2]
  44be84:	str	x0, [x19, #320]
  44be88:	add	x1, x3, #0x1
  44be8c:	str	x1, [x19, #256]
  44be90:	mov	w0, #0x69                  	// #105
  44be94:	strb	w0, [x19, x3]
  44be98:	strb	w0, [x19, #264]
  44be9c:	cmp	x1, #0xff
  44bea0:	b.ne	44e0e8 <ferror@plt+0x4b868>  // b.any
  44bea4:	ldp	x3, x2, [x19, #272]
  44bea8:	strb	wzr, [x19, #255]
  44beac:	mov	x0, x19
  44beb0:	blr	x3
  44beb4:	ldr	x1, [x19, #320]
  44beb8:	mov	w3, #0x666e                	// #26222
  44bebc:	mov	w2, #0x6f                  	// #111
  44bec0:	mov	x0, #0x3                   	// #3
  44bec4:	add	x1, x1, #0x1
  44bec8:	strh	w3, [x19]
  44becc:	strb	w2, [x19, #2]
  44bed0:	str	x1, [x19, #320]
  44bed4:	add	x1, x0, #0x1
  44bed8:	str	x1, [x19, #256]
  44bedc:	mov	w2, #0x20                  	// #32
  44bee0:	strb	w2, [x19, x0]
  44bee4:	strb	w2, [x19, #264]
  44bee8:	cmp	x1, #0xff
  44beec:	b.ne	44e138 <ferror@plt+0x4b8b8>  // b.any
  44bef0:	ldp	x3, x2, [x19, #272]
  44bef4:	strb	wzr, [x19, #255]
  44bef8:	mov	x0, x19
  44befc:	blr	x3
  44bf00:	ldr	x0, [x19, #320]
  44bf04:	mov	w2, #0x6f66                	// #28518
  44bf08:	mov	x1, #0x2                   	// #2
  44bf0c:	strh	w2, [x19]
  44bf10:	add	x0, x0, #0x1
  44bf14:	str	x0, [x19, #320]
  44bf18:	add	x0, x1, #0x1
  44bf1c:	mov	w2, #0x72                  	// #114
  44bf20:	strb	w2, [x19, x1]
  44bf24:	add	x1, x0, #0x1
  44bf28:	str	x1, [x19, #256]
  44bf2c:	mov	w1, #0x20                  	// #32
  44bf30:	strb	w1, [x19, x0]
  44bf34:	strb	w1, [x19, #264]
  44bf38:	ldr	x20, [x24, #8]
  44bf3c:	cbz	x20, 44d1ac <ferror@plt+0x4a92c>
  44bf40:	ldr	w0, [x20, #4]
  44bf44:	cmp	w0, #0x1
  44bf48:	b.gt	44d1ac <ferror@plt+0x4a92c>
  44bf4c:	ldr	w1, [x19, #308]
  44bf50:	cmp	w1, #0x400
  44bf54:	b.gt	44d1ac <ferror@plt+0x4a92c>
  44bf58:	ldr	x3, [x19, #328]
  44bf5c:	add	w0, w0, #0x1
  44bf60:	str	w0, [x20, #4]
  44bf64:	add	w1, w1, #0x1
  44bf68:	add	x0, sp, #0x80
  44bf6c:	str	w1, [x19, #308]
  44bf70:	str	x0, [x19, #328]
  44bf74:	mov	w1, w22
  44bf78:	mov	x0, x19
  44bf7c:	mov	x2, x20
  44bf80:	stp	x20, x3, [sp, #128]
  44bf84:	bl	448dd0 <ferror@plt+0x46550>
  44bf88:	ldr	w1, [x20, #4]
  44bf8c:	ldr	x0, [sp, #136]
  44bf90:	sub	w1, w1, #0x1
  44bf94:	ldp	x21, x22, [sp, #32]
  44bf98:	ldp	x23, x24, [sp, #48]
  44bf9c:	str	x0, [x19, #328]
  44bfa0:	ldr	w0, [x19, #308]
  44bfa4:	str	w1, [x20, #4]
  44bfa8:	sub	w0, w0, #0x1
  44bfac:	str	w0, [x19, #308]
  44bfb0:	b	448e38 <ferror@plt+0x465b8>
  44bfb4:	ldr	x20, [x2, #8]
  44bfb8:	ldr	x23, [x19, #296]
  44bfbc:	str	xzr, [x19, #296]
  44bfc0:	ldr	x21, [x19, #368]
  44bfc4:	str	x2, [x19, #368]
  44bfc8:	tbz	w22, #2, 44d33c <ferror@plt+0x4aabc>
  44bfcc:	ldr	w0, [x20]
  44bfd0:	cbnz	w0, 44bfe0 <ferror@plt+0x49760>
  44bfd4:	ldr	w0, [x20, #16]
  44bfd8:	cmp	w0, #0x6
  44bfdc:	b.eq	4511b4 <ferror@plt+0x4e934>  // b.none
  44bfe0:	ldr	w0, [x20, #4]
  44bfe4:	cmp	w0, #0x1
  44bfe8:	b.gt	44d340 <ferror@plt+0x4aac0>
  44bfec:	ldr	w1, [x19, #308]
  44bff0:	cmp	w1, #0x400
  44bff4:	b.gt	44d340 <ferror@plt+0x4aac0>
  44bff8:	ldr	x3, [x19, #328]
  44bffc:	add	w0, w0, #0x1
  44c000:	str	w0, [x20, #4]
  44c004:	add	w1, w1, #0x1
  44c008:	add	x0, sp, #0x80
  44c00c:	str	w1, [x19, #308]
  44c010:	str	x0, [x19, #328]
  44c014:	mov	w1, w22
  44c018:	mov	x0, x19
  44c01c:	mov	x2, x20
  44c020:	stp	x20, x3, [sp, #128]
  44c024:	bl	448dd0 <ferror@plt+0x46550>
  44c028:	ldr	w1, [x20, #4]
  44c02c:	ldr	x0, [sp, #136]
  44c030:	str	x0, [x19, #328]
  44c034:	ldr	w0, [x19, #308]
  44c038:	sub	w1, w1, #0x1
  44c03c:	str	w1, [x20, #4]
  44c040:	sub	w0, w0, #0x1
  44c044:	str	w0, [x19, #308]
  44c048:	ldrb	w0, [x19, #264]
  44c04c:	ldr	x1, [x19, #256]
  44c050:	cmp	w0, #0x3c
  44c054:	b.eq	44ff98 <ferror@plt+0x4d718>  // b.none
  44c058:	add	x0, x1, #0x1
  44c05c:	cmp	x1, #0xff
  44c060:	b.ne	44c088 <ferror@plt+0x49808>  // b.any
  44c064:	ldp	x3, x2, [x19, #272]
  44c068:	strb	wzr, [x19, #255]
  44c06c:	mov	x0, x19
  44c070:	blr	x3
  44c074:	ldr	x2, [x19, #320]
  44c078:	mov	x0, #0x1                   	// #1
  44c07c:	mov	x1, #0x0                   	// #0
  44c080:	add	x2, x2, x0
  44c084:	str	x2, [x19, #320]
  44c088:	str	x0, [x19, #256]
  44c08c:	mov	w2, #0x3c                  	// #60
  44c090:	strb	w2, [x19, x1]
  44c094:	strb	w2, [x19, #264]
  44c098:	ldr	x20, [x24, #16]
  44c09c:	cbz	x20, 44d34c <ferror@plt+0x4aacc>
  44c0a0:	ldr	w1, [x20, #4]
  44c0a4:	cmp	w1, #0x1
  44c0a8:	b.gt	44d34c <ferror@plt+0x4aacc>
  44c0ac:	ldr	w2, [x19, #308]
  44c0b0:	cmp	w2, #0x400
  44c0b4:	b.gt	44d34c <ferror@plt+0x4aacc>
  44c0b8:	ldr	x3, [x19, #328]
  44c0bc:	add	w1, w1, #0x1
  44c0c0:	str	w1, [x20, #4]
  44c0c4:	add	w2, w2, #0x1
  44c0c8:	add	x0, sp, #0x80
  44c0cc:	str	w2, [x19, #308]
  44c0d0:	str	x0, [x19, #328]
  44c0d4:	mov	w1, w22
  44c0d8:	mov	x2, x20
  44c0dc:	mov	x0, x19
  44c0e0:	stp	x20, x3, [sp, #128]
  44c0e4:	bl	448dd0 <ferror@plt+0x46550>
  44c0e8:	ldr	w1, [x20, #4]
  44c0ec:	ldr	x0, [sp, #136]
  44c0f0:	str	x0, [x19, #328]
  44c0f4:	sub	w1, w1, #0x1
  44c0f8:	ldr	w0, [x19, #308]
  44c0fc:	str	w1, [x20, #4]
  44c100:	ldr	x1, [x19, #256]
  44c104:	sub	w0, w0, #0x1
  44c108:	ldrb	w2, [x19, #264]
  44c10c:	str	w0, [x19, #308]
  44c110:	mov	x0, x1
  44c114:	cmp	w2, #0x3e
  44c118:	b.ne	44c158 <ferror@plt+0x498d8>  // b.any
  44c11c:	cmp	x1, #0xff
  44c120:	b.ne	44c144 <ferror@plt+0x498c4>  // b.any
  44c124:	ldp	x3, x2, [x19, #272]
  44c128:	strb	wzr, [x19, #255]
  44c12c:	mov	x0, x19
  44c130:	blr	x3
  44c134:	ldr	x0, [x19, #320]
  44c138:	mov	x1, #0x0                   	// #0
  44c13c:	add	x0, x0, #0x1
  44c140:	str	x0, [x19, #320]
  44c144:	add	x0, x1, #0x1
  44c148:	str	x0, [x19, #256]
  44c14c:	mov	w2, #0x20                  	// #32
  44c150:	strb	w2, [x19, x1]
  44c154:	strb	w2, [x19, #264]
  44c158:	add	x1, x0, #0x1
  44c15c:	cmp	x0, #0xff
  44c160:	b.ne	44c18c <ferror@plt+0x4990c>  // b.any
  44c164:	ldp	x3, x2, [x19, #272]
  44c168:	strb	wzr, [x19, #255]
  44c16c:	mov	x1, x0
  44c170:	mov	x0, x19
  44c174:	blr	x3
  44c178:	ldr	x2, [x19, #320]
  44c17c:	mov	x1, #0x1                   	// #1
  44c180:	mov	x0, #0x0                   	// #0
  44c184:	add	x2, x2, x1
  44c188:	str	x2, [x19, #320]
  44c18c:	str	x1, [x19, #256]
  44c190:	mov	w1, #0x3e                  	// #62
  44c194:	strb	w1, [x19, x0]
  44c198:	strb	w1, [x19, #264]
  44c19c:	str	x23, [x19, #296]
  44c1a0:	str	x21, [x19, #368]
  44c1a4:	ldp	x21, x22, [sp, #32]
  44c1a8:	ldp	x23, x24, [sp, #48]
  44c1ac:	b	448e38 <ferror@plt+0x465b8>
  44c1b0:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44c1b4:	add	x20, x20, #0x5b8
  44c1b8:	mov	x23, #0x1                   	// #1
  44c1bc:	stp	x25, x26, [sp, #64]
  44c1c0:	add	x25, x20, #0x15
  44c1c4:	ldr	x1, [x19, #256]
  44c1c8:	b	44c224 <ferror@plt+0x499a4>
  44c1cc:	ldp	x3, x2, [x19, #272]
  44c1d0:	strb	wzr, [x19, #255]
  44c1d4:	mov	x0, x19
  44c1d8:	add	x20, x20, #0x1
  44c1dc:	blr	x3
  44c1e0:	strb	w21, [x19]
  44c1e4:	ldr	x0, [x19, #320]
  44c1e8:	str	x23, [x19, #256]
  44c1ec:	strb	w21, [x19, #264]
  44c1f0:	cmp	x20, x25
  44c1f4:	add	x0, x0, #0x1
  44c1f8:	str	x0, [x19, #320]
  44c1fc:	b.eq	44c6c8 <ferror@plt+0x49e48>  // b.none
  44c200:	ldrb	w21, [x20]
  44c204:	mov	x0, #0x1                   	// #1
  44c208:	add	x1, x0, #0x1
  44c20c:	str	x1, [x19, #256]
  44c210:	strb	w21, [x19, x0]
  44c214:	add	x20, x20, #0x1
  44c218:	strb	w21, [x19, #264]
  44c21c:	cmp	x20, x25
  44c220:	b.eq	44c6c8 <ferror@plt+0x49e48>  // b.none
  44c224:	ldrb	w21, [x20]
  44c228:	cmp	x1, #0xff
  44c22c:	b.eq	44c1cc <ferror@plt+0x4994c>  // b.none
  44c230:	mov	x0, x1
  44c234:	b	44c208 <ferror@plt+0x49988>
  44c238:	ldr	w0, [x19, #312]
  44c23c:	cbz	w0, 44d780 <ferror@plt+0x4af00>
  44c240:	ldr	x0, [x19, #256]
  44c244:	cmp	x0, #0xff
  44c248:	b.eq	450cdc <ferror@plt+0x4e45c>  // b.none
  44c24c:	add	x3, x0, #0x1
  44c250:	str	x3, [x19, #256]
  44c254:	mov	w1, #0x61                  	// #97
  44c258:	strb	w1, [x19, x0]
  44c25c:	strb	w1, [x19, #264]
  44c260:	cmp	x3, #0xff
  44c264:	b.ne	45046c <ferror@plt+0x4dbec>  // b.any
  44c268:	ldp	x4, x2, [x19, #272]
  44c26c:	strb	wzr, [x19, #255]
  44c270:	mov	x1, x3
  44c274:	mov	x0, x19
  44c278:	blr	x4
  44c27c:	ldr	x1, [x19, #320]
  44c280:	mov	w2, #0x7475                	// #29813
  44c284:	mov	x0, #0x2                   	// #2
  44c288:	strh	w2, [x19]
  44c28c:	add	x1, x1, #0x1
  44c290:	str	x1, [x19, #320]
  44c294:	add	x1, x0, #0x1
  44c298:	mov	w2, #0x6f                  	// #111
  44c29c:	strb	w2, [x19, x0]
  44c2a0:	add	x0, x1, #0x1
  44c2a4:	str	x0, [x19, #256]
  44c2a8:	mov	w0, #0x3a                  	// #58
  44c2ac:	strb	w0, [x19, x1]
  44c2b0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  44c2b4:	strb	w0, [x19, #264]
  44c2b8:	add	x1, x1, #0x9e0
  44c2bc:	add	x0, sp, #0x80
  44c2c0:	ldr	x2, [x24, #8]
  44c2c4:	add	w2, w2, #0x1
  44c2c8:	bl	402310 <sprintf@plt>
  44c2cc:	add	x0, sp, #0x80
  44c2d0:	bl	402270 <strlen@plt>
  44c2d4:	cbz	x0, 4517e0 <ferror@plt+0x4ef60>
  44c2d8:	add	x20, sp, #0x80
  44c2dc:	mov	x23, #0x1                   	// #1
  44c2e0:	add	x22, x20, x0
  44c2e4:	ldr	x1, [x19, #256]
  44c2e8:	b	44c344 <ferror@plt+0x49ac4>
  44c2ec:	ldp	x3, x2, [x19, #272]
  44c2f0:	strb	wzr, [x19, #255]
  44c2f4:	mov	x0, x19
  44c2f8:	add	x20, x20, #0x1
  44c2fc:	blr	x3
  44c300:	strb	w21, [x19]
  44c304:	ldr	x0, [x19, #320]
  44c308:	str	x23, [x19, #256]
  44c30c:	strb	w21, [x19, #264]
  44c310:	cmp	x20, x22
  44c314:	add	x0, x0, #0x1
  44c318:	str	x0, [x19, #320]
  44c31c:	b.eq	451070 <ferror@plt+0x4e7f0>  // b.none
  44c320:	ldrb	w21, [x20]
  44c324:	mov	x0, #0x1                   	// #1
  44c328:	add	x1, x0, #0x1
  44c32c:	str	x1, [x19, #256]
  44c330:	strb	w21, [x19, x0]
  44c334:	add	x20, x20, #0x1
  44c338:	strb	w21, [x19, #264]
  44c33c:	cmp	x22, x20
  44c340:	b.eq	45039c <ferror@plt+0x4db1c>  // b.none
  44c344:	ldrb	w21, [x20]
  44c348:	cmp	x1, #0xff
  44c34c:	b.eq	44c2ec <ferror@plt+0x49a6c>  // b.none
  44c350:	mov	x0, x1
  44c354:	b	44c328 <ferror@plt+0x49aa8>
  44c358:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44c35c:	add	x20, x20, #0x568
  44c360:	mov	x23, #0x1                   	// #1
  44c364:	stp	x25, x26, [sp, #64]
  44c368:	add	x25, x20, #0x18
  44c36c:	ldr	x1, [x19, #256]
  44c370:	b	44c3cc <ferror@plt+0x49b4c>
  44c374:	ldp	x3, x2, [x19, #272]
  44c378:	strb	wzr, [x19, #255]
  44c37c:	mov	x0, x19
  44c380:	add	x20, x20, #0x1
  44c384:	blr	x3
  44c388:	strb	w21, [x19]
  44c38c:	ldr	x0, [x19, #320]
  44c390:	str	x23, [x19, #256]
  44c394:	strb	w21, [x19, #264]
  44c398:	cmp	x20, x25
  44c39c:	add	x0, x0, #0x1
  44c3a0:	str	x0, [x19, #320]
  44c3a4:	b.eq	44c560 <ferror@plt+0x49ce0>  // b.none
  44c3a8:	ldrb	w21, [x20]
  44c3ac:	mov	x0, #0x1                   	// #1
  44c3b0:	add	x1, x0, #0x1
  44c3b4:	str	x1, [x19, #256]
  44c3b8:	strb	w21, [x19, x0]
  44c3bc:	add	x20, x20, #0x1
  44c3c0:	strb	w21, [x19, #264]
  44c3c4:	cmp	x25, x20
  44c3c8:	b.eq	44c564 <ferror@plt+0x49ce4>  // b.none
  44c3cc:	ldrb	w21, [x20]
  44c3d0:	cmp	x1, #0xff
  44c3d4:	b.eq	44c374 <ferror@plt+0x49af4>  // b.none
  44c3d8:	mov	x0, x1
  44c3dc:	b	44c3b0 <ferror@plt+0x49b30>
  44c3e0:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  44c3e4:	add	x20, x20, #0x588
  44c3e8:	mov	x23, #0x1                   	// #1
  44c3ec:	stp	x25, x26, [sp, #64]
  44c3f0:	add	x25, x20, #0x12
  44c3f4:	ldr	x1, [x19, #256]
  44c3f8:	b	44c454 <ferror@plt+0x49bd4>
  44c3fc:	ldp	x3, x2, [x19, #272]
  44c400:	strb	wzr, [x19, #255]
  44c404:	mov	x0, x19
  44c408:	add	x20, x20, #0x1
  44c40c:	blr	x3
  44c410:	strb	w21, [x19]
  44c414:	ldr	x0, [x19, #320]
  44c418:	str	x23, [x19, #256]
  44c41c:	strb	w21, [x19, #264]
  44c420:	cmp	x20, x25
  44c424:	add	x0, x0, #0x1
  44c428:	str	x0, [x19, #320]
  44c42c:	b.eq	44c9c8 <ferror@plt+0x4a148>  // b.none
  44c430:	ldrb	w21, [x20]
  44c434:	mov	x0, #0x1                   	// #1
  44c438:	add	x1, x0, #0x1
  44c43c:	str	x1, [x19, #256]
  44c440:	strb	w21, [x19, x0]
  44c444:	add	x20, x20, #0x1
  44c448:	strb	w21, [x19, #264]
  44c44c:	cmp	x25, x20
  44c450:	b.eq	44c9c8 <ferror@plt+0x4a148>  // b.none
  44c454:	ldrb	w21, [x20]
  44c458:	cmp	x1, #0xff
  44c45c:	b.eq	44c3fc <ferror@plt+0x49b7c>  // b.none
  44c460:	mov	x0, x1
  44c464:	b	44c438 <ferror@plt+0x49bb8>
  44c468:	ldr	x25, [x0, #8]
  44c46c:	add	x0, sp, #0x80
  44c470:	stp	x2, x24, [sp, #128]
  44c474:	str	wzr, [sp, #144]
  44c478:	str	x4, [sp, #152]
  44c47c:	str	x0, [x19, #296]
  44c480:	cbz	x25, 448ea0 <ferror@plt+0x46620>
  44c484:	ldr	w0, [x25, #4]
  44c488:	cmp	w0, #0x1
  44c48c:	b.gt	448ea8 <ferror@plt+0x46628>
  44c490:	ldr	w1, [x19, #308]
  44c494:	cmp	w1, #0x400
  44c498:	b.gt	448ea8 <ferror@plt+0x46628>
  44c49c:	ldr	x3, [x19, #328]
  44c4a0:	add	w0, w0, #0x1
  44c4a4:	str	w0, [x25, #4]
  44c4a8:	add	w1, w1, #0x1
  44c4ac:	add	x0, sp, #0x70
  44c4b0:	str	w1, [x19, #308]
  44c4b4:	str	x0, [x19, #328]
  44c4b8:	mov	x2, x25
  44c4bc:	mov	w1, w22
  44c4c0:	mov	x0, x19
  44c4c4:	stp	x25, x3, [sp, #112]
  44c4c8:	bl	448dd0 <ferror@plt+0x46550>
  44c4cc:	ldr	w1, [x25, #4]
  44c4d0:	ldr	x0, [sp, #120]
  44c4d4:	str	x0, [x19, #328]
  44c4d8:	ldr	w2, [sp, #144]
  44c4dc:	sub	w1, w1, #0x1
  44c4e0:	ldr	w0, [x19, #308]
  44c4e4:	str	w1, [x25, #4]
  44c4e8:	sub	w0, w0, #0x1
  44c4ec:	str	w0, [x19, #308]
  44c4f0:	cbnz	w2, 448ec0 <ferror@plt+0x46640>
  44c4f4:	b	448eb0 <ferror@plt+0x46630>
  44c4f8:	ldp	x21, x22, [sp, #32]
  44c4fc:	ldp	x23, x24, [sp, #48]
  44c500:	ldp	x25, x26, [sp, #64]
  44c504:	b	448e38 <ferror@plt+0x465b8>
  44c508:	ldp	x3, x2, [x19, #272]
  44c50c:	strb	wzr, [x19, #255]
  44c510:	mov	x0, x19
  44c514:	blr	x3
  44c518:	ldr	x2, [x19, #320]
  44c51c:	mov	x0, #0x1                   	// #1
  44c520:	mov	x1, #0x0                   	// #0
  44c524:	add	x2, x2, x0
  44c528:	str	x2, [x19, #320]
  44c52c:	b	449b0c <ferror@plt+0x4728c>
  44c530:	ldp	x3, x2, [x19, #272]
  44c534:	strb	wzr, [x19, #255]
  44c538:	mov	x1, x0
  44c53c:	mov	x0, x19
  44c540:	blr	x3
  44c544:	strb	w24, [x19]
  44c548:	ldr	x2, [x19, #320]
  44c54c:	mov	x1, #0x1                   	// #1
  44c550:	mov	x0, #0x2                   	// #2
  44c554:	add	x2, x2, x1
  44c558:	str	x2, [x19, #320]
  44c55c:	b	449b0c <ferror@plt+0x4728c>
  44c560:	mov	x1, #0x1                   	// #1
  44c564:	ldr	x20, [x24, #8]
  44c568:	cbz	x20, 44cff8 <ferror@plt+0x4a778>
  44c56c:	ldr	w0, [x20, #4]
  44c570:	cmp	w0, #0x1
  44c574:	b.gt	44cff8 <ferror@plt+0x4a778>
  44c578:	ldr	w2, [x19, #308]
  44c57c:	cmp	w2, #0x400
  44c580:	b.gt	44cff8 <ferror@plt+0x4a778>
  44c584:	ldr	x3, [x19, #328]
  44c588:	add	w0, w0, #0x1
  44c58c:	str	w0, [x20, #4]
  44c590:	add	w2, w2, #0x1
  44c594:	add	x0, sp, #0x80
  44c598:	str	w2, [x19, #308]
  44c59c:	str	x0, [x19, #328]
  44c5a0:	mov	w1, w22
  44c5a4:	mov	x2, x20
  44c5a8:	mov	x0, x19
  44c5ac:	stp	x20, x3, [sp, #128]
  44c5b0:	bl	448dd0 <ferror@plt+0x46550>
  44c5b4:	ldr	w2, [x20, #4]
  44c5b8:	ldr	x0, [sp, #136]
  44c5bc:	str	x0, [x19, #328]
  44c5c0:	ldr	w0, [x19, #308]
  44c5c4:	sub	w2, w2, #0x1
  44c5c8:	ldr	x1, [x19, #256]
  44c5cc:	str	w2, [x20, #4]
  44c5d0:	sub	w0, w0, #0x1
  44c5d4:	str	w0, [x19, #308]
  44c5d8:	cmp	x1, #0xff
  44c5dc:	b.eq	44fbf8 <ferror@plt+0x4d378>  // b.none
  44c5e0:	add	x0, x1, #0x1
  44c5e4:	str	x0, [x19, #256]
  44c5e8:	mov	w2, #0x2d                  	// #45
  44c5ec:	strb	w2, [x19, x1]
  44c5f0:	strb	w2, [x19, #264]
  44c5f4:	cmp	x0, #0xff
  44c5f8:	b.ne	44e5c8 <ferror@plt+0x4bd48>  // b.any
  44c5fc:	ldp	x3, x2, [x19, #272]
  44c600:	strb	wzr, [x19, #255]
  44c604:	mov	x1, x0
  44c608:	mov	x0, x19
  44c60c:	blr	x3
  44c610:	ldr	x0, [x19, #320]
  44c614:	mov	w1, #0x69                  	// #105
  44c618:	mov	x2, #0x1                   	// #1
  44c61c:	strb	w1, [x19]
  44c620:	add	x0, x0, x2
  44c624:	str	x0, [x19, #320]
  44c628:	add	x1, x2, #0x1
  44c62c:	mov	w0, #0x6e                  	// #110
  44c630:	strb	w0, [x19, x2]
  44c634:	add	x0, x1, #0x1
  44c638:	str	x0, [x19, #256]
  44c63c:	mov	w0, #0x2d                  	// #45
  44c640:	strb	w0, [x19, x1]
  44c644:	strb	w0, [x19, #264]
  44c648:	ldr	x20, [x24, #16]
  44c64c:	cbz	x20, 44d054 <ferror@plt+0x4a7d4>
  44c650:	ldr	w0, [x20, #4]
  44c654:	cmp	w0, #0x1
  44c658:	b.gt	44d054 <ferror@plt+0x4a7d4>
  44c65c:	ldr	w1, [x19, #308]
  44c660:	cmp	w1, #0x400
  44c664:	b.gt	44d054 <ferror@plt+0x4a7d4>
  44c668:	ldr	x3, [x19, #328]
  44c66c:	add	w0, w0, #0x1
  44c670:	str	w0, [x20, #4]
  44c674:	add	w1, w1, #0x1
  44c678:	add	x0, sp, #0x80
  44c67c:	str	w1, [x19, #308]
  44c680:	str	x0, [x19, #328]
  44c684:	mov	w1, w22
  44c688:	mov	x0, x19
  44c68c:	mov	x2, x20
  44c690:	stp	x20, x3, [sp, #128]
  44c694:	bl	448dd0 <ferror@plt+0x46550>
  44c698:	ldr	w1, [x20, #4]
  44c69c:	ldr	x0, [sp, #136]
  44c6a0:	sub	w1, w1, #0x1
  44c6a4:	ldp	x21, x22, [sp, #32]
  44c6a8:	ldp	x23, x24, [sp, #48]
  44c6ac:	ldp	x25, x26, [sp, #64]
  44c6b0:	str	x0, [x19, #328]
  44c6b4:	ldr	w0, [x19, #308]
  44c6b8:	str	w1, [x20, #4]
  44c6bc:	sub	w0, w0, #0x1
  44c6c0:	str	w0, [x19, #308]
  44c6c4:	b	448e38 <ferror@plt+0x465b8>
  44c6c8:	ldr	x20, [x24, #8]
  44c6cc:	cbz	x20, 44d08c <ferror@plt+0x4a80c>
  44c6d0:	ldr	w0, [x20, #4]
  44c6d4:	cmp	w0, #0x1
  44c6d8:	b.gt	44d08c <ferror@plt+0x4a80c>
  44c6dc:	ldr	w1, [x19, #308]
  44c6e0:	cmp	w1, #0x400
  44c6e4:	b.gt	44d08c <ferror@plt+0x4a80c>
  44c6e8:	ldr	x3, [x19, #328]
  44c6ec:	add	w0, w0, #0x1
  44c6f0:	str	w0, [x20, #4]
  44c6f4:	add	w1, w1, #0x1
  44c6f8:	add	x0, sp, #0x80
  44c6fc:	str	w1, [x19, #308]
  44c700:	str	x0, [x19, #328]
  44c704:	mov	w1, w22
  44c708:	mov	x0, x19
  44c70c:	mov	x2, x20
  44c710:	stp	x20, x3, [sp, #128]
  44c714:	bl	448dd0 <ferror@plt+0x46550>
  44c718:	ldr	w1, [x20, #4]
  44c71c:	ldr	x0, [sp, #136]
  44c720:	sub	w1, w1, #0x1
  44c724:	ldp	x21, x22, [sp, #32]
  44c728:	ldp	x23, x24, [sp, #48]
  44c72c:	ldp	x25, x26, [sp, #64]
  44c730:	str	x0, [x19, #328]
  44c734:	ldr	w0, [x19, #308]
  44c738:	str	w1, [x20, #4]
  44c73c:	sub	w0, w0, #0x1
  44c740:	str	w0, [x19, #308]
  44c744:	b	448e38 <ferror@plt+0x465b8>
  44c748:	ldr	x20, [x24, #8]
  44c74c:	cbz	x20, 44d17c <ferror@plt+0x4a8fc>
  44c750:	ldr	w0, [x20, #4]
  44c754:	cmp	w0, #0x1
  44c758:	b.gt	44d17c <ferror@plt+0x4a8fc>
  44c75c:	ldr	w1, [x19, #308]
  44c760:	cmp	w1, #0x400
  44c764:	b.gt	44d17c <ferror@plt+0x4a8fc>
  44c768:	ldr	x3, [x19, #328]
  44c76c:	add	w0, w0, #0x1
  44c770:	str	w0, [x20, #4]
  44c774:	add	w1, w1, #0x1
  44c778:	add	x0, sp, #0x80
  44c77c:	str	w1, [x19, #308]
  44c780:	str	x0, [x19, #328]
  44c784:	mov	w1, w22
  44c788:	mov	x0, x19
  44c78c:	mov	x2, x20
  44c790:	stp	x20, x3, [sp, #128]
  44c794:	bl	448dd0 <ferror@plt+0x46550>
  44c798:	ldr	w1, [x20, #4]
  44c79c:	ldr	x0, [sp, #136]
  44c7a0:	sub	w1, w1, #0x1
  44c7a4:	ldp	x21, x22, [sp, #32]
  44c7a8:	ldp	x23, x24, [sp, #48]
  44c7ac:	ldp	x25, x26, [sp, #64]
  44c7b0:	str	x0, [x19, #328]
  44c7b4:	ldr	w0, [x19, #308]
  44c7b8:	str	w1, [x20, #4]
  44c7bc:	sub	w0, w0, #0x1
  44c7c0:	str	w0, [x19, #308]
  44c7c4:	b	448e38 <ferror@plt+0x465b8>
  44c7c8:	ldr	x20, [x24, #8]
  44c7cc:	cbz	x20, 44d1c0 <ferror@plt+0x4a940>
  44c7d0:	ldr	w0, [x20, #4]
  44c7d4:	cmp	w0, #0x1
  44c7d8:	b.gt	44d1c0 <ferror@plt+0x4a940>
  44c7dc:	ldr	w1, [x19, #308]
  44c7e0:	cmp	w1, #0x400
  44c7e4:	b.gt	44d1c0 <ferror@plt+0x4a940>
  44c7e8:	ldr	x3, [x19, #328]
  44c7ec:	add	w0, w0, #0x1
  44c7f0:	str	w0, [x20, #4]
  44c7f4:	add	w1, w1, #0x1
  44c7f8:	add	x0, sp, #0x80
  44c7fc:	str	w1, [x19, #308]
  44c800:	str	x0, [x19, #328]
  44c804:	mov	w1, w22
  44c808:	mov	x0, x19
  44c80c:	mov	x2, x20
  44c810:	stp	x20, x3, [sp, #128]
  44c814:	bl	448dd0 <ferror@plt+0x46550>
  44c818:	ldr	w1, [x20, #4]
  44c81c:	ldr	x0, [sp, #136]
  44c820:	sub	w1, w1, #0x1
  44c824:	ldp	x21, x22, [sp, #32]
  44c828:	ldp	x23, x24, [sp, #48]
  44c82c:	ldp	x25, x26, [sp, #64]
  44c830:	str	x0, [x19, #328]
  44c834:	ldr	w0, [x19, #308]
  44c838:	str	w1, [x20, #4]
  44c83c:	sub	w0, w0, #0x1
  44c840:	str	w0, [x19, #308]
  44c844:	b	448e38 <ferror@plt+0x465b8>
  44c848:	ldr	x20, [x24, #8]
  44c84c:	cbz	x20, 44d194 <ferror@plt+0x4a914>
  44c850:	ldr	w0, [x20, #4]
  44c854:	cmp	w0, #0x1
  44c858:	b.gt	44d194 <ferror@plt+0x4a914>
  44c85c:	ldr	w1, [x19, #308]
  44c860:	cmp	w1, #0x400
  44c864:	b.gt	44d194 <ferror@plt+0x4a914>
  44c868:	ldr	x3, [x19, #328]
  44c86c:	add	w0, w0, #0x1
  44c870:	str	w0, [x20, #4]
  44c874:	add	w1, w1, #0x1
  44c878:	add	x0, sp, #0x80
  44c87c:	str	w1, [x19, #308]
  44c880:	str	x0, [x19, #328]
  44c884:	mov	w1, w22
  44c888:	mov	x0, x19
  44c88c:	mov	x2, x20
  44c890:	stp	x20, x3, [sp, #128]
  44c894:	bl	448dd0 <ferror@plt+0x46550>
  44c898:	ldr	w1, [x20, #4]
  44c89c:	ldr	x0, [sp, #136]
  44c8a0:	sub	w1, w1, #0x1
  44c8a4:	ldp	x21, x22, [sp, #32]
  44c8a8:	ldp	x23, x24, [sp, #48]
  44c8ac:	ldp	x25, x26, [sp, #64]
  44c8b0:	str	x0, [x19, #328]
  44c8b4:	ldr	w0, [x19, #308]
  44c8b8:	str	w1, [x20, #4]
  44c8bc:	sub	w0, w0, #0x1
  44c8c0:	str	w0, [x19, #308]
  44c8c4:	b	448e38 <ferror@plt+0x465b8>
  44c8c8:	ldr	x20, [x24, #8]
  44c8cc:	cbz	x20, 44d2ac <ferror@plt+0x4aa2c>
  44c8d0:	ldr	w0, [x20, #4]
  44c8d4:	cmp	w0, #0x1
  44c8d8:	b.gt	44d2ac <ferror@plt+0x4aa2c>
  44c8dc:	ldr	w1, [x19, #308]
  44c8e0:	cmp	w1, #0x400
  44c8e4:	b.gt	44d2ac <ferror@plt+0x4aa2c>
  44c8e8:	ldr	x3, [x19, #328]
  44c8ec:	add	w0, w0, #0x1
  44c8f0:	str	w0, [x20, #4]
  44c8f4:	add	w1, w1, #0x1
  44c8f8:	add	x0, sp, #0x80
  44c8fc:	str	w1, [x19, #308]
  44c900:	str	x0, [x19, #328]
  44c904:	mov	w1, w22
  44c908:	mov	x0, x19
  44c90c:	mov	x2, x20
  44c910:	stp	x20, x3, [sp, #128]
  44c914:	bl	448dd0 <ferror@plt+0x46550>
  44c918:	ldr	w1, [x20, #4]
  44c91c:	ldr	x0, [sp, #136]
  44c920:	sub	w1, w1, #0x1
  44c924:	ldp	x21, x22, [sp, #32]
  44c928:	ldp	x23, x24, [sp, #48]
  44c92c:	ldp	x25, x26, [sp, #64]
  44c930:	str	x0, [x19, #328]
  44c934:	ldr	w0, [x19, #308]
  44c938:	str	w1, [x20, #4]
  44c93c:	sub	w0, w0, #0x1
  44c940:	str	w0, [x19, #308]
  44c944:	b	448e38 <ferror@plt+0x465b8>
  44c948:	ldr	x20, [x24, #8]
  44c94c:	cbz	x20, 44d224 <ferror@plt+0x4a9a4>
  44c950:	ldr	w0, [x20, #4]
  44c954:	cmp	w0, #0x1
  44c958:	b.gt	44d224 <ferror@plt+0x4a9a4>
  44c95c:	ldr	w1, [x19, #308]
  44c960:	cmp	w1, #0x400
  44c964:	b.gt	44d224 <ferror@plt+0x4a9a4>
  44c968:	ldr	x3, [x19, #328]
  44c96c:	add	w0, w0, #0x1
  44c970:	str	w0, [x20, #4]
  44c974:	add	w1, w1, #0x1
  44c978:	add	x0, sp, #0x80
  44c97c:	str	w1, [x19, #308]
  44c980:	str	x0, [x19, #328]
  44c984:	mov	w1, w22
  44c988:	mov	x0, x19
  44c98c:	mov	x2, x20
  44c990:	stp	x20, x3, [sp, #128]
  44c994:	bl	448dd0 <ferror@plt+0x46550>
  44c998:	ldr	w1, [x20, #4]
  44c99c:	ldr	x0, [sp, #136]
  44c9a0:	sub	w1, w1, #0x1
  44c9a4:	ldp	x21, x22, [sp, #32]
  44c9a8:	ldp	x23, x24, [sp, #48]
  44c9ac:	ldp	x25, x26, [sp, #64]
  44c9b0:	str	x0, [x19, #328]
  44c9b4:	ldr	w0, [x19, #308]
  44c9b8:	str	w1, [x20, #4]
  44c9bc:	sub	w0, w0, #0x1
  44c9c0:	str	w0, [x19, #308]
  44c9c4:	b	448e38 <ferror@plt+0x465b8>
  44c9c8:	ldr	x20, [x24, #8]
  44c9cc:	cbz	x20, 44d30c <ferror@plt+0x4aa8c>
  44c9d0:	ldr	w0, [x20, #4]
  44c9d4:	cmp	w0, #0x1
  44c9d8:	b.gt	44d30c <ferror@plt+0x4aa8c>
  44c9dc:	ldr	w1, [x19, #308]
  44c9e0:	cmp	w1, #0x400
  44c9e4:	b.gt	44d30c <ferror@plt+0x4aa8c>
  44c9e8:	ldr	x3, [x19, #328]
  44c9ec:	add	w0, w0, #0x1
  44c9f0:	str	w0, [x20, #4]
  44c9f4:	add	w1, w1, #0x1
  44c9f8:	add	x0, sp, #0x80
  44c9fc:	str	w1, [x19, #308]
  44ca00:	str	x0, [x19, #328]
  44ca04:	mov	w1, w22
  44ca08:	mov	x0, x19
  44ca0c:	mov	x2, x20
  44ca10:	stp	x20, x3, [sp, #128]
  44ca14:	bl	448dd0 <ferror@plt+0x46550>
  44ca18:	ldr	w1, [x20, #4]
  44ca1c:	ldr	x0, [sp, #136]
  44ca20:	sub	w1, w1, #0x1
  44ca24:	ldp	x21, x22, [sp, #32]
  44ca28:	ldp	x23, x24, [sp, #48]
  44ca2c:	ldp	x25, x26, [sp, #64]
  44ca30:	str	x0, [x19, #328]
  44ca34:	ldr	w0, [x19, #308]
  44ca38:	str	w1, [x20, #4]
  44ca3c:	sub	w0, w0, #0x1
  44ca40:	str	w0, [x19, #308]
  44ca44:	b	448e38 <ferror@plt+0x465b8>
  44ca48:	ldr	x20, [x24, #8]
  44ca4c:	cbz	x20, 44d1f4 <ferror@plt+0x4a974>
  44ca50:	ldr	w0, [x20, #4]
  44ca54:	cmp	w0, #0x1
  44ca58:	b.gt	44d1f4 <ferror@plt+0x4a974>
  44ca5c:	ldr	w1, [x19, #308]
  44ca60:	cmp	w1, #0x400
  44ca64:	b.gt	44d1f4 <ferror@plt+0x4a974>
  44ca68:	ldr	x3, [x19, #328]
  44ca6c:	add	w0, w0, #0x1
  44ca70:	str	w0, [x20, #4]
  44ca74:	add	w1, w1, #0x1
  44ca78:	add	x0, sp, #0x80
  44ca7c:	str	w1, [x19, #308]
  44ca80:	str	x0, [x19, #328]
  44ca84:	mov	w1, w22
  44ca88:	mov	x0, x19
  44ca8c:	mov	x2, x20
  44ca90:	stp	x20, x3, [sp, #128]
  44ca94:	bl	448dd0 <ferror@plt+0x46550>
  44ca98:	ldr	w1, [x20, #4]
  44ca9c:	ldr	x0, [sp, #136]
  44caa0:	sub	w1, w1, #0x1
  44caa4:	ldp	x21, x22, [sp, #32]
  44caa8:	ldp	x23, x24, [sp, #48]
  44caac:	ldp	x25, x26, [sp, #64]
  44cab0:	str	x0, [x19, #328]
  44cab4:	ldr	w0, [x19, #308]
  44cab8:	str	w1, [x20, #4]
  44cabc:	sub	w0, w0, #0x1
  44cac0:	str	w0, [x19, #308]
  44cac4:	b	448e38 <ferror@plt+0x465b8>
  44cac8:	ldr	x20, [x24, #8]
  44cacc:	cbz	x20, 44d2c4 <ferror@plt+0x4aa44>
  44cad0:	ldr	w0, [x20, #4]
  44cad4:	cmp	w0, #0x1
  44cad8:	b.gt	44d2c4 <ferror@plt+0x4aa44>
  44cadc:	ldr	w1, [x19, #308]
  44cae0:	cmp	w1, #0x400
  44cae4:	b.gt	44d2c4 <ferror@plt+0x4aa44>
  44cae8:	ldr	x3, [x19, #328]
  44caec:	add	w0, w0, #0x1
  44caf0:	str	w0, [x20, #4]
  44caf4:	add	w1, w1, #0x1
  44caf8:	add	x0, sp, #0x80
  44cafc:	str	w1, [x19, #308]
  44cb00:	str	x0, [x19, #328]
  44cb04:	mov	w1, w22
  44cb08:	mov	x0, x19
  44cb0c:	mov	x2, x20
  44cb10:	stp	x20, x3, [sp, #128]
  44cb14:	bl	448dd0 <ferror@plt+0x46550>
  44cb18:	ldr	w1, [x20, #4]
  44cb1c:	ldr	x0, [sp, #136]
  44cb20:	sub	w1, w1, #0x1
  44cb24:	ldp	x21, x22, [sp, #32]
  44cb28:	ldp	x23, x24, [sp, #48]
  44cb2c:	ldp	x25, x26, [sp, #64]
  44cb30:	str	x0, [x19, #328]
  44cb34:	ldr	w0, [x19, #308]
  44cb38:	str	w1, [x20, #4]
  44cb3c:	sub	w0, w0, #0x1
  44cb40:	str	w0, [x19, #308]
  44cb44:	b	448e38 <ferror@plt+0x465b8>
  44cb48:	ldr	x20, [x24, #8]
  44cb4c:	cbz	x20, 44d248 <ferror@plt+0x4a9c8>
  44cb50:	ldr	w0, [x20, #4]
  44cb54:	cmp	w0, #0x1
  44cb58:	b.gt	44d248 <ferror@plt+0x4a9c8>
  44cb5c:	ldr	w1, [x19, #308]
  44cb60:	cmp	w1, #0x400
  44cb64:	b.gt	44d248 <ferror@plt+0x4a9c8>
  44cb68:	ldr	x3, [x19, #328]
  44cb6c:	add	w0, w0, #0x1
  44cb70:	str	w0, [x20, #4]
  44cb74:	add	w1, w1, #0x1
  44cb78:	add	x0, sp, #0x80
  44cb7c:	str	w1, [x19, #308]
  44cb80:	str	x0, [x19, #328]
  44cb84:	mov	w1, w22
  44cb88:	mov	x0, x19
  44cb8c:	mov	x2, x20
  44cb90:	stp	x20, x3, [sp, #128]
  44cb94:	bl	448dd0 <ferror@plt+0x46550>
  44cb98:	ldr	w1, [x20, #4]
  44cb9c:	ldr	x0, [sp, #136]
  44cba0:	sub	w1, w1, #0x1
  44cba4:	ldp	x21, x22, [sp, #32]
  44cba8:	ldp	x23, x24, [sp, #48]
  44cbac:	ldp	x25, x26, [sp, #64]
  44cbb0:	str	x0, [x19, #328]
  44cbb4:	ldr	w0, [x19, #308]
  44cbb8:	str	w1, [x20, #4]
  44cbbc:	sub	w0, w0, #0x1
  44cbc0:	str	w0, [x19, #308]
  44cbc4:	b	448e38 <ferror@plt+0x465b8>
  44cbc8:	ldr	x20, [x24, #8]
  44cbcc:	cbz	x20, 44d2f4 <ferror@plt+0x4aa74>
  44cbd0:	ldr	w0, [x20, #4]
  44cbd4:	cmp	w0, #0x1
  44cbd8:	b.gt	44d2f4 <ferror@plt+0x4aa74>
  44cbdc:	ldr	w1, [x19, #308]
  44cbe0:	cmp	w1, #0x400
  44cbe4:	b.gt	44d2f4 <ferror@plt+0x4aa74>
  44cbe8:	ldr	x3, [x19, #328]
  44cbec:	add	w0, w0, #0x1
  44cbf0:	str	w0, [x20, #4]
  44cbf4:	add	w1, w1, #0x1
  44cbf8:	add	x0, sp, #0x80
  44cbfc:	str	w1, [x19, #308]
  44cc00:	str	x0, [x19, #328]
  44cc04:	mov	w1, w22
  44cc08:	mov	x0, x19
  44cc0c:	mov	x2, x20
  44cc10:	stp	x20, x3, [sp, #128]
  44cc14:	bl	448dd0 <ferror@plt+0x46550>
  44cc18:	ldr	w1, [x20, #4]
  44cc1c:	ldr	x0, [sp, #136]
  44cc20:	sub	w1, w1, #0x1
  44cc24:	ldp	x21, x22, [sp, #32]
  44cc28:	ldp	x23, x24, [sp, #48]
  44cc2c:	ldp	x25, x26, [sp, #64]
  44cc30:	str	x0, [x19, #328]
  44cc34:	ldr	w0, [x19, #308]
  44cc38:	str	w1, [x20, #4]
  44cc3c:	sub	w0, w0, #0x1
  44cc40:	str	w0, [x19, #308]
  44cc44:	b	448e38 <ferror@plt+0x465b8>
  44cc48:	mov	x1, #0x1                   	// #1
  44cc4c:	ldr	x20, [x24, #16]
  44cc50:	cbz	x20, 44cfec <ferror@plt+0x4a76c>
  44cc54:	ldr	w0, [x20, #4]
  44cc58:	cmp	w0, #0x1
  44cc5c:	b.gt	44cfec <ferror@plt+0x4a76c>
  44cc60:	ldr	w2, [x19, #308]
  44cc64:	cmp	w2, #0x400
  44cc68:	b.gt	44cfec <ferror@plt+0x4a76c>
  44cc6c:	ldr	x3, [x19, #328]
  44cc70:	add	w0, w0, #0x1
  44cc74:	str	w0, [x20, #4]
  44cc78:	add	w2, w2, #0x1
  44cc7c:	add	x0, sp, #0x80
  44cc80:	str	w2, [x19, #308]
  44cc84:	str	x0, [x19, #328]
  44cc88:	mov	w1, w22
  44cc8c:	mov	x2, x20
  44cc90:	mov	x0, x19
  44cc94:	stp	x20, x3, [sp, #128]
  44cc98:	bl	448dd0 <ferror@plt+0x46550>
  44cc9c:	ldr	w2, [x20, #4]
  44cca0:	ldr	x0, [sp, #136]
  44cca4:	str	x0, [x19, #328]
  44cca8:	ldr	w0, [x19, #308]
  44ccac:	sub	w2, w2, #0x1
  44ccb0:	ldr	x1, [x19, #256]
  44ccb4:	str	w2, [x20, #4]
  44ccb8:	sub	w0, w0, #0x1
  44ccbc:	str	w0, [x19, #308]
  44ccc0:	cmp	x1, #0xff
  44ccc4:	b.eq	44f7f0 <ferror@plt+0x4cf70>  // b.none
  44ccc8:	add	x0, x1, #0x1
  44cccc:	str	x0, [x19, #256]
  44ccd0:	mov	w2, #0x20                  	// #32
  44ccd4:	strb	w2, [x19, x1]
  44ccd8:	strb	w2, [x19, #264]
  44ccdc:	cmp	x0, #0xff
  44cce0:	b.ne	44db60 <ferror@plt+0x4b2e0>  // b.any
  44cce4:	ldp	x3, x2, [x19, #272]
  44cce8:	strb	wzr, [x19, #255]
  44ccec:	mov	x1, x0
  44ccf0:	mov	x0, x19
  44ccf4:	blr	x3
  44ccf8:	ldr	x0, [x19, #320]
  44ccfc:	mov	w1, #0x6f66                	// #28518
  44cd00:	mov	x2, #0x2                   	// #2
  44cd04:	strh	w1, [x19]
  44cd08:	add	x0, x0, #0x1
  44cd0c:	str	x0, [x19, #320]
  44cd10:	add	x1, x2, #0x1
  44cd14:	mov	w0, #0x72                  	// #114
  44cd18:	strb	w0, [x19, x2]
  44cd1c:	add	x0, x1, #0x1
  44cd20:	str	x0, [x19, #256]
  44cd24:	mov	w0, #0x20                  	// #32
  44cd28:	strb	w0, [x19, x1]
  44cd2c:	strb	w0, [x19, #264]
  44cd30:	ldr	x20, [x24, #8]
  44cd34:	cbz	x20, 44d260 <ferror@plt+0x4a9e0>
  44cd38:	ldr	w0, [x20, #4]
  44cd3c:	cmp	w0, #0x1
  44cd40:	b.gt	44d260 <ferror@plt+0x4a9e0>
  44cd44:	ldr	w1, [x19, #308]
  44cd48:	cmp	w1, #0x400
  44cd4c:	b.gt	44d260 <ferror@plt+0x4a9e0>
  44cd50:	ldr	x3, [x19, #328]
  44cd54:	add	w0, w0, #0x1
  44cd58:	str	w0, [x20, #4]
  44cd5c:	add	w1, w1, #0x1
  44cd60:	add	x0, sp, #0x80
  44cd64:	str	w1, [x19, #308]
  44cd68:	str	x0, [x19, #328]
  44cd6c:	mov	w1, w22
  44cd70:	mov	x0, x19
  44cd74:	mov	x2, x20
  44cd78:	stp	x20, x3, [sp, #128]
  44cd7c:	bl	448dd0 <ferror@plt+0x46550>
  44cd80:	ldr	w1, [x20, #4]
  44cd84:	ldr	x0, [sp, #136]
  44cd88:	sub	w1, w1, #0x1
  44cd8c:	ldp	x21, x22, [sp, #32]
  44cd90:	ldp	x23, x24, [sp, #48]
  44cd94:	ldp	x25, x26, [sp, #64]
  44cd98:	str	x0, [x19, #328]
  44cd9c:	ldr	w0, [x19, #308]
  44cda0:	str	w1, [x20, #4]
  44cda4:	sub	w0, w0, #0x1
  44cda8:	str	w0, [x19, #308]
  44cdac:	b	448e38 <ferror@plt+0x465b8>
  44cdb0:	ldr	x20, [x24, #8]
  44cdb4:	cbz	x20, 44d2dc <ferror@plt+0x4aa5c>
  44cdb8:	ldr	w0, [x20, #4]
  44cdbc:	cmp	w0, #0x1
  44cdc0:	b.gt	44d2dc <ferror@plt+0x4aa5c>
  44cdc4:	ldr	w1, [x19, #308]
  44cdc8:	cmp	w1, #0x400
  44cdcc:	b.gt	44d2dc <ferror@plt+0x4aa5c>
  44cdd0:	ldr	x3, [x19, #328]
  44cdd4:	add	w0, w0, #0x1
  44cdd8:	str	w0, [x20, #4]
  44cddc:	add	w1, w1, #0x1
  44cde0:	add	x0, sp, #0x80
  44cde4:	str	w1, [x19, #308]
  44cde8:	str	x0, [x19, #328]
  44cdec:	mov	w1, w22
  44cdf0:	mov	x0, x19
  44cdf4:	mov	x2, x20
  44cdf8:	stp	x20, x3, [sp, #128]
  44cdfc:	bl	448dd0 <ferror@plt+0x46550>
  44ce00:	ldr	w1, [x20, #4]
  44ce04:	ldr	x0, [sp, #136]
  44ce08:	sub	w1, w1, #0x1
  44ce0c:	ldp	x21, x22, [sp, #32]
  44ce10:	ldp	x23, x24, [sp, #48]
  44ce14:	ldp	x25, x26, [sp, #64]
  44ce18:	str	x0, [x19, #328]
  44ce1c:	ldr	w0, [x19, #308]
  44ce20:	str	w1, [x20, #4]
  44ce24:	sub	w0, w0, #0x1
  44ce28:	str	w0, [x19, #308]
  44ce2c:	b	448e38 <ferror@plt+0x465b8>
  44ce30:	ldr	x20, [x24, #8]
  44ce34:	cbz	x20, 44d324 <ferror@plt+0x4aaa4>
  44ce38:	ldr	w0, [x20, #4]
  44ce3c:	cmp	w0, #0x1
  44ce40:	b.gt	44d324 <ferror@plt+0x4aaa4>
  44ce44:	ldr	w1, [x19, #308]
  44ce48:	cmp	w1, #0x400
  44ce4c:	b.gt	44d324 <ferror@plt+0x4aaa4>
  44ce50:	ldr	x3, [x19, #328]
  44ce54:	add	w0, w0, #0x1
  44ce58:	str	w0, [x20, #4]
  44ce5c:	add	w1, w1, #0x1
  44ce60:	add	x0, sp, #0x80
  44ce64:	str	w1, [x19, #308]
  44ce68:	str	x0, [x19, #328]
  44ce6c:	mov	w1, w22
  44ce70:	mov	x0, x19
  44ce74:	mov	x2, x20
  44ce78:	stp	x20, x3, [sp, #128]
  44ce7c:	bl	448dd0 <ferror@plt+0x46550>
  44ce80:	ldr	w1, [x20, #4]
  44ce84:	ldr	x0, [sp, #136]
  44ce88:	sub	w1, w1, #0x1
  44ce8c:	ldp	x21, x22, [sp, #32]
  44ce90:	ldp	x23, x24, [sp, #48]
  44ce94:	ldp	x25, x26, [sp, #64]
  44ce98:	str	x0, [x19, #328]
  44ce9c:	ldr	w0, [x19, #308]
  44cea0:	str	w1, [x20, #4]
  44cea4:	sub	w0, w0, #0x1
  44cea8:	str	w0, [x19, #308]
  44ceac:	b	448e38 <ferror@plt+0x465b8>
  44ceb0:	ldr	x20, [x24, #8]
  44ceb4:	cbz	x20, 44d0a4 <ferror@plt+0x4a824>
  44ceb8:	ldr	w0, [x20, #4]
  44cebc:	cmp	w0, #0x1
  44cec0:	b.gt	44d0a4 <ferror@plt+0x4a824>
  44cec4:	ldr	w1, [x19, #308]
  44cec8:	cmp	w1, #0x400
  44cecc:	b.gt	44d0a4 <ferror@plt+0x4a824>
  44ced0:	ldr	x3, [x19, #328]
  44ced4:	add	w0, w0, #0x1
  44ced8:	str	w0, [x20, #4]
  44cedc:	add	w1, w1, #0x1
  44cee0:	add	x0, sp, #0x80
  44cee4:	str	w1, [x19, #308]
  44cee8:	str	x0, [x19, #328]
  44ceec:	mov	w1, w22
  44cef0:	mov	x0, x19
  44cef4:	mov	x2, x20
  44cef8:	stp	x20, x3, [sp, #128]
  44cefc:	bl	448dd0 <ferror@plt+0x46550>
  44cf00:	ldr	w1, [x20, #4]
  44cf04:	ldr	x0, [sp, #136]
  44cf08:	sub	w1, w1, #0x1
  44cf0c:	ldp	x21, x22, [sp, #32]
  44cf10:	ldp	x23, x24, [sp, #48]
  44cf14:	ldp	x25, x26, [sp, #64]
  44cf18:	str	x0, [x19, #328]
  44cf1c:	ldr	w0, [x19, #308]
  44cf20:	str	w1, [x20, #4]
  44cf24:	sub	w0, w0, #0x1
  44cf28:	str	w0, [x19, #308]
  44cf2c:	b	448e38 <ferror@plt+0x465b8>
  44cf30:	add	x23, sp, #0x80
  44cf34:	mov	w24, #0x1                   	// #1
  44cf38:	b	44cfa0 <ferror@plt+0x4a720>
  44cf3c:	ldr	w1, [x19, #308]
  44cf40:	cmp	w1, #0x400
  44cf44:	b.gt	44cfb4 <ferror@plt+0x4a734>
  44cf48:	ldr	x3, [x19, #328]
  44cf4c:	add	w0, w0, #0x1
  44cf50:	str	w0, [x20, #4]
  44cf54:	add	w1, w1, #0x1
  44cf58:	str	w1, [x19, #308]
  44cf5c:	mov	x0, x19
  44cf60:	str	x23, [x19, #328]
  44cf64:	mov	w1, w22
  44cf68:	mov	x2, x20
  44cf6c:	stp	x20, x3, [sp, #128]
  44cf70:	bl	448dd0 <ferror@plt+0x46550>
  44cf74:	ldr	w1, [x20, #4]
  44cf78:	ldr	x0, [sp, #136]
  44cf7c:	str	x0, [x19, #328]
  44cf80:	ldr	w0, [x19, #308]
  44cf84:	sub	w1, w1, #0x1
  44cf88:	str	w1, [x20, #4]
  44cf8c:	sub	w0, w0, #0x1
  44cf90:	str	w0, [x19, #308]
  44cf94:	add	w21, w21, #0x1
  44cf98:	cmp	w21, w26
  44cf9c:	b.ge	44cfbc <ferror@plt+0x4a73c>  // b.tcont
  44cfa0:	str	w21, [x19, #316]
  44cfa4:	cbz	x20, 44cfb4 <ferror@plt+0x4a734>
  44cfa8:	ldr	w0, [x20, #4]
  44cfac:	cmp	w0, #0x1
  44cfb0:	b.le	44cf3c <ferror@plt+0x4a6bc>
  44cfb4:	str	w24, [x19, #304]
  44cfb8:	b	44cf94 <ferror@plt+0x4a714>
  44cfbc:	ldp	x21, x22, [sp, #32]
  44cfc0:	ldp	x23, x24, [sp, #48]
  44cfc4:	ldp	x25, x26, [sp, #64]
  44cfc8:	ldr	x27, [sp, #80]
  44cfcc:	b	448e38 <ferror@plt+0x465b8>
  44cfd0:	cmp	w21, w26
  44cfd4:	b.lt	44cf30 <ferror@plt+0x4a6b0>  // b.tstop
  44cfd8:	ldp	x21, x22, [sp, #32]
  44cfdc:	ldp	x23, x24, [sp, #48]
  44cfe0:	ldp	x25, x26, [sp, #64]
  44cfe4:	ldr	x27, [sp, #80]
  44cfe8:	b	448e38 <ferror@plt+0x465b8>
  44cfec:	mov	w0, #0x1                   	// #1
  44cff0:	str	w0, [x19, #304]
  44cff4:	b	44ccc0 <ferror@plt+0x4a440>
  44cff8:	mov	w0, #0x1                   	// #1
  44cffc:	str	w0, [x19, #304]
  44d000:	b	44c5d8 <ferror@plt+0x49d58>
  44d004:	mov	w1, #0x1                   	// #1
  44d008:	str	w1, [x19, #304]
  44d00c:	b	449c98 <ferror@plt+0x47418>
  44d010:	mov	w2, #0x1                   	// #1
  44d014:	add	x21, sp, #0x80
  44d018:	str	w2, [x19, #304]
  44d01c:	b	449eb8 <ferror@plt+0x47638>
  44d020:	mov	w0, #0x1                   	// #1
  44d024:	ldp	x21, x22, [sp, #32]
  44d028:	ldp	x23, x24, [sp, #48]
  44d02c:	str	w0, [x19, #304]
  44d030:	b	448e38 <ferror@plt+0x465b8>
  44d034:	mov	w0, #0x1                   	// #1
  44d038:	ldp	x21, x22, [sp, #32]
  44d03c:	ldp	x23, x24, [sp, #48]
  44d040:	str	w0, [x19, #304]
  44d044:	b	448e38 <ferror@plt+0x465b8>
  44d048:	mov	w1, #0x1                   	// #1
  44d04c:	str	w1, [x19, #304]
  44d050:	b	44bb20 <ferror@plt+0x492a0>
  44d054:	mov	w0, #0x1                   	// #1
  44d058:	ldp	x21, x22, [sp, #32]
  44d05c:	ldp	x23, x24, [sp, #48]
  44d060:	ldp	x25, x26, [sp, #64]
  44d064:	str	w0, [x19, #304]
  44d068:	b	448e38 <ferror@plt+0x465b8>
  44d06c:	mov	w0, #0x1                   	// #1
  44d070:	str	w0, [x19, #304]
  44d074:	b	44b3bc <ferror@plt+0x48b3c>
  44d078:	mov	w0, #0x1                   	// #1
  44d07c:	ldp	x21, x22, [sp, #32]
  44d080:	ldp	x23, x24, [sp, #48]
  44d084:	str	w0, [x19, #304]
  44d088:	b	448e38 <ferror@plt+0x465b8>
  44d08c:	mov	w0, #0x1                   	// #1
  44d090:	ldp	x21, x22, [sp, #32]
  44d094:	ldp	x23, x24, [sp, #48]
  44d098:	ldp	x25, x26, [sp, #64]
  44d09c:	str	w0, [x19, #304]
  44d0a0:	b	448e38 <ferror@plt+0x465b8>
  44d0a4:	mov	w0, #0x1                   	// #1
  44d0a8:	ldp	x21, x22, [sp, #32]
  44d0ac:	ldp	x23, x24, [sp, #48]
  44d0b0:	ldp	x25, x26, [sp, #64]
  44d0b4:	str	w0, [x19, #304]
  44d0b8:	b	448e38 <ferror@plt+0x465b8>
  44d0bc:	ldp	x25, x26, [sp, #64]
  44d0c0:	cmp	x1, #0xff
  44d0c4:	b.ne	451424 <ferror@plt+0x4eba4>  // b.any
  44d0c8:	ldp	x3, x2, [x19, #272]
  44d0cc:	strb	wzr, [x19, #255]
  44d0d0:	mov	x0, x19
  44d0d4:	blr	x3
  44d0d8:	ldr	x1, [x19, #320]
  44d0dc:	mov	w2, #0x3a7d                	// #14973
  44d0e0:	mov	x0, #0x2                   	// #2
  44d0e4:	strh	w2, [x19]
  44d0e8:	add	x1, x1, #0x1
  44d0ec:	str	x1, [x19, #320]
  44d0f0:	add	x2, x0, #0x1
  44d0f4:	str	x2, [x19, #256]
  44d0f8:	mov	w1, #0x3a                  	// #58
  44d0fc:	strb	w1, [x19, x0]
  44d100:	strb	w1, [x19, #264]
  44d104:	ldr	x23, [x23, #8]
  44d108:	cbnz	x23, 44913c <ferror@plt+0x468bc>
  44d10c:	mov	w0, #0x1                   	// #1
  44d110:	ldp	x21, x22, [sp, #32]
  44d114:	ldp	x23, x24, [sp, #48]
  44d118:	str	w0, [x19, #304]
  44d11c:	b	448e38 <ferror@plt+0x465b8>
  44d120:	mov	w0, #0x1                   	// #1
  44d124:	str	w0, [x19, #304]
  44d128:	b	4490e4 <ferror@plt+0x46864>
  44d12c:	mov	w0, #0x1                   	// #1
  44d130:	ldp	x21, x22, [sp, #32]
  44d134:	ldp	x23, x24, [sp, #48]
  44d138:	str	w0, [x19, #304]
  44d13c:	b	448e38 <ferror@plt+0x465b8>
  44d140:	mov	w0, #0x1                   	// #1
  44d144:	ldp	x21, x22, [sp, #32]
  44d148:	ldp	x23, x24, [sp, #48]
  44d14c:	str	w0, [x19, #304]
  44d150:	b	448e38 <ferror@plt+0x465b8>
  44d154:	mov	w0, #0x1                   	// #1
  44d158:	ldp	x21, x22, [sp, #32]
  44d15c:	ldp	x23, x24, [sp, #48]
  44d160:	str	w0, [x19, #304]
  44d164:	b	448e38 <ferror@plt+0x465b8>
  44d168:	mov	w0, #0x1                   	// #1
  44d16c:	ldp	x21, x22, [sp, #32]
  44d170:	ldp	x23, x24, [sp, #48]
  44d174:	str	w0, [x19, #304]
  44d178:	b	448e38 <ferror@plt+0x465b8>
  44d17c:	mov	w0, #0x1                   	// #1
  44d180:	ldp	x21, x22, [sp, #32]
  44d184:	ldp	x23, x24, [sp, #48]
  44d188:	ldp	x25, x26, [sp, #64]
  44d18c:	str	w0, [x19, #304]
  44d190:	b	448e38 <ferror@plt+0x465b8>
  44d194:	mov	w0, #0x1                   	// #1
  44d198:	ldp	x21, x22, [sp, #32]
  44d19c:	ldp	x23, x24, [sp, #48]
  44d1a0:	ldp	x25, x26, [sp, #64]
  44d1a4:	str	w0, [x19, #304]
  44d1a8:	b	448e38 <ferror@plt+0x465b8>
  44d1ac:	mov	w0, #0x1                   	// #1
  44d1b0:	ldp	x21, x22, [sp, #32]
  44d1b4:	ldp	x23, x24, [sp, #48]
  44d1b8:	str	w0, [x19, #304]
  44d1bc:	b	448e38 <ferror@plt+0x465b8>
  44d1c0:	mov	w0, #0x1                   	// #1
  44d1c4:	ldp	x21, x22, [sp, #32]
  44d1c8:	ldp	x23, x24, [sp, #48]
  44d1cc:	ldp	x25, x26, [sp, #64]
  44d1d0:	str	w0, [x19, #304]
  44d1d4:	b	448e38 <ferror@plt+0x465b8>
  44d1d8:	mov	w0, #0x1                   	// #1
  44d1dc:	str	w0, [x19, #304]
  44d1e0:	mov	x2, x24
  44d1e4:	mov	w1, w22
  44d1e8:	mov	x0, x19
  44d1ec:	bl	4524e8 <ferror@plt+0x4fc68>
  44d1f0:	b	4492a0 <ferror@plt+0x46a20>
  44d1f4:	mov	w0, #0x1                   	// #1
  44d1f8:	ldp	x21, x22, [sp, #32]
  44d1fc:	ldp	x23, x24, [sp, #48]
  44d200:	ldp	x25, x26, [sp, #64]
  44d204:	str	w0, [x19, #304]
  44d208:	b	448e38 <ferror@plt+0x465b8>
  44d20c:	mov	w0, #0x1                   	// #1
  44d210:	str	w0, [x19, #304]
  44d214:	b	449bb4 <ferror@plt+0x47334>
  44d218:	mov	w1, #0x1                   	// #1
  44d21c:	str	w1, [x19, #304]
  44d220:	b	44b4f0 <ferror@plt+0x48c70>
  44d224:	mov	w0, #0x1                   	// #1
  44d228:	ldp	x21, x22, [sp, #32]
  44d22c:	ldp	x23, x24, [sp, #48]
  44d230:	ldp	x25, x26, [sp, #64]
  44d234:	str	w0, [x19, #304]
  44d238:	b	448e38 <ferror@plt+0x465b8>
  44d23c:	mov	w1, #0x1                   	// #1
  44d240:	str	w1, [x19, #304]
  44d244:	b	44b00c <ferror@plt+0x4878c>
  44d248:	mov	w0, #0x1                   	// #1
  44d24c:	ldp	x21, x22, [sp, #32]
  44d250:	ldp	x23, x24, [sp, #48]
  44d254:	ldp	x25, x26, [sp, #64]
  44d258:	str	w0, [x19, #304]
  44d25c:	b	448e38 <ferror@plt+0x465b8>
  44d260:	mov	w0, #0x1                   	// #1
  44d264:	ldp	x21, x22, [sp, #32]
  44d268:	ldp	x23, x24, [sp, #48]
  44d26c:	ldp	x25, x26, [sp, #64]
  44d270:	str	w0, [x19, #304]
  44d274:	b	448e38 <ferror@plt+0x465b8>
  44d278:	mov	w0, #0x1                   	// #1
  44d27c:	ldp	x21, x22, [sp, #32]
  44d280:	ldp	x23, x24, [sp, #48]
  44d284:	str	w0, [x19, #304]
  44d288:	b	448e38 <ferror@plt+0x465b8>
  44d28c:	mov	w0, #0x1                   	// #1
  44d290:	ldp	x21, x22, [sp, #32]
  44d294:	ldp	x23, x24, [sp, #48]
  44d298:	str	w0, [x19, #304]
  44d29c:	b	448e38 <ferror@plt+0x465b8>
  44d2a0:	mov	w0, #0x1                   	// #1
  44d2a4:	str	w0, [x19, #304]
  44d2a8:	b	44ab68 <ferror@plt+0x482e8>
  44d2ac:	mov	w0, #0x1                   	// #1
  44d2b0:	ldp	x21, x22, [sp, #32]
  44d2b4:	ldp	x23, x24, [sp, #48]
  44d2b8:	ldp	x25, x26, [sp, #64]
  44d2bc:	str	w0, [x19, #304]
  44d2c0:	b	448e38 <ferror@plt+0x465b8>
  44d2c4:	mov	w0, #0x1                   	// #1
  44d2c8:	ldp	x21, x22, [sp, #32]
  44d2cc:	ldp	x23, x24, [sp, #48]
  44d2d0:	ldp	x25, x26, [sp, #64]
  44d2d4:	str	w0, [x19, #304]
  44d2d8:	b	448e38 <ferror@plt+0x465b8>
  44d2dc:	mov	w0, #0x1                   	// #1
  44d2e0:	ldp	x21, x22, [sp, #32]
  44d2e4:	ldp	x23, x24, [sp, #48]
  44d2e8:	ldp	x25, x26, [sp, #64]
  44d2ec:	str	w0, [x19, #304]
  44d2f0:	b	448e38 <ferror@plt+0x465b8>
  44d2f4:	mov	w0, #0x1                   	// #1
  44d2f8:	ldp	x21, x22, [sp, #32]
  44d2fc:	ldp	x23, x24, [sp, #48]
  44d300:	ldp	x25, x26, [sp, #64]
  44d304:	str	w0, [x19, #304]
  44d308:	b	448e38 <ferror@plt+0x465b8>
  44d30c:	mov	w0, #0x1                   	// #1
  44d310:	ldp	x21, x22, [sp, #32]
  44d314:	ldp	x23, x24, [sp, #48]
  44d318:	ldp	x25, x26, [sp, #64]
  44d31c:	str	w0, [x19, #304]
  44d320:	b	448e38 <ferror@plt+0x465b8>
  44d324:	mov	w0, #0x1                   	// #1
  44d328:	ldp	x21, x22, [sp, #32]
  44d32c:	ldp	x23, x24, [sp, #48]
  44d330:	ldp	x25, x26, [sp, #64]
  44d334:	str	w0, [x19, #304]
  44d338:	b	448e38 <ferror@plt+0x465b8>
  44d33c:	cbnz	x20, 44bfe0 <ferror@plt+0x49760>
  44d340:	mov	w0, #0x1                   	// #1
  44d344:	str	w0, [x19, #304]
  44d348:	b	44c048 <ferror@plt+0x497c8>
  44d34c:	mov	w1, #0x1                   	// #1
  44d350:	str	w1, [x19, #304]
  44d354:	b	44c158 <ferror@plt+0x498d8>
  44d358:	mov	w0, #0x1                   	// #1
  44d35c:	str	w0, [x19, #304]
  44d360:	b	449410 <ferror@plt+0x46b90>
  44d364:	ldr	x1, [x19, #256]
  44d368:	cmp	x1, #0xff
  44d36c:	b.ne	44d434 <ferror@plt+0x4abb4>  // b.any
  44d370:	ldp	x3, x2, [x19, #272]
  44d374:	strb	wzr, [x19, #255]
  44d378:	mov	x0, x19
  44d37c:	blr	x3
  44d380:	ldr	x2, [x19, #320]
  44d384:	mov	x0, #0x1                   	// #1
  44d388:	mov	x1, #0x0                   	// #0
  44d38c:	add	x2, x2, x0
  44d390:	str	x2, [x19, #320]
  44d394:	str	x0, [x19, #256]
  44d398:	mov	w0, #0x7d                  	// #125
  44d39c:	strb	w0, [x19, x1]
  44d3a0:	strb	w0, [x19, #264]
  44d3a4:	ldp	x21, x22, [sp, #32]
  44d3a8:	ldp	x23, x24, [sp, #48]
  44d3ac:	b	448e38 <ferror@plt+0x465b8>
  44d3b0:	ldr	x1, [x19, #256]
  44d3b4:	cmp	x1, #0xff
  44d3b8:	b.ne	44d440 <ferror@plt+0x4abc0>  // b.any
  44d3bc:	ldp	x3, x2, [x19, #272]
  44d3c0:	strb	wzr, [x19, #255]
  44d3c4:	mov	x0, x19
  44d3c8:	blr	x3
  44d3cc:	ldr	x2, [x19, #320]
  44d3d0:	mov	x0, #0x1                   	// #1
  44d3d4:	mov	x1, #0x0                   	// #0
  44d3d8:	add	x2, x2, x0
  44d3dc:	str	x2, [x19, #320]
  44d3e0:	str	x0, [x19, #256]
  44d3e4:	mov	w0, #0x7d                  	// #125
  44d3e8:	strb	w0, [x19, x1]
  44d3ec:	strb	w0, [x19, #264]
  44d3f0:	ldp	x21, x22, [sp, #32]
  44d3f4:	ldp	x23, x24, [sp, #48]
  44d3f8:	b	448e38 <ferror@plt+0x465b8>
  44d3fc:	ldp	x3, x2, [x19, #272]
  44d400:	strb	wzr, [x19, #255]
  44d404:	mov	x1, x0
  44d408:	mov	x0, x19
  44d40c:	blr	x3
  44d410:	ldr	x0, [x19, #320]
  44d414:	mov	w2, #0x29                  	// #41
  44d418:	mov	x1, #0x1                   	// #1
  44d41c:	strb	w2, [x19]
  44d420:	add	x0, x0, x1
  44d424:	str	x0, [x19, #320]
  44d428:	add	x0, x1, #0x1
  44d42c:	b	449f04 <ferror@plt+0x47684>
  44d430:	mov	x1, #0x1                   	// #1
  44d434:	add	x0, x1, #0x1
  44d438:	b	44d394 <ferror@plt+0x4ab14>
  44d43c:	mov	x1, #0x1                   	// #1
  44d440:	add	x0, x1, #0x1
  44d444:	b	44d3e0 <ferror@plt+0x4ab60>
  44d448:	add	x3, x0, #0x2
  44d44c:	str	x3, [x19, #256]
  44d450:	mov	w2, #0x75                  	// #117
  44d454:	strb	w2, [x19, x1]
  44d458:	strb	w2, [x19, #264]
  44d45c:	cmp	x3, #0xff
  44d460:	b.ne	44e328 <ferror@plt+0x4baa8>  // b.any
  44d464:	ldp	x4, x2, [x19, #272]
  44d468:	strb	wzr, [x19, #255]
  44d46c:	mov	x1, x3
  44d470:	mov	x0, x19
  44d474:	blr	x4
  44d478:	ldr	x1, [x19, #320]
  44d47c:	mov	w3, #0x6e6e                	// #28270
  44d480:	mov	w2, #0x61                  	// #97
  44d484:	mov	x0, #0x3                   	// #3
  44d488:	add	x1, x1, #0x1
  44d48c:	strh	w3, [x19]
  44d490:	strb	w2, [x19, #2]
  44d494:	str	x1, [x19, #320]
  44d498:	add	x1, x0, #0x1
  44d49c:	str	x1, [x19, #256]
  44d4a0:	mov	w2, #0x6d                  	// #109
  44d4a4:	strb	w2, [x19, x0]
  44d4a8:	strb	w2, [x19, #264]
  44d4ac:	cmp	x1, #0xff
  44d4b0:	b.ne	44e378 <ferror@plt+0x4baf8>  // b.any
  44d4b4:	ldp	x3, x2, [x19, #272]
  44d4b8:	strb	wzr, [x19, #255]
  44d4bc:	mov	x0, x19
  44d4c0:	blr	x3
  44d4c4:	ldr	x1, [x19, #320]
  44d4c8:	mov	w3, #0x6465                	// #25701
  44d4cc:	mov	w2, #0x20                  	// #32
  44d4d0:	mov	x0, #0x3                   	// #3
  44d4d4:	add	x1, x1, #0x1
  44d4d8:	strh	w3, [x19]
  44d4dc:	strb	w2, [x19, #2]
  44d4e0:	str	x1, [x19, #320]
  44d4e4:	add	x1, x0, #0x1
  44d4e8:	str	x1, [x19, #256]
  44d4ec:	mov	w2, #0x74                  	// #116
  44d4f0:	strb	w2, [x19, x0]
  44d4f4:	strb	w2, [x19, #264]
  44d4f8:	cmp	x1, #0xff
  44d4fc:	b.ne	44e3c8 <ferror@plt+0x4bb48>  // b.any
  44d500:	ldp	x3, x2, [x19, #272]
  44d504:	strb	wzr, [x19, #255]
  44d508:	mov	x0, x19
  44d50c:	blr	x3
  44d510:	ldr	x0, [x19, #320]
  44d514:	mov	w2, #0x7079                	// #28793
  44d518:	mov	x1, #0x2                   	// #2
  44d51c:	strh	w2, [x19]
  44d520:	add	x0, x0, #0x1
  44d524:	str	x0, [x19, #320]
  44d528:	add	x0, x1, #0x1
  44d52c:	mov	w2, #0x65                  	// #101
  44d530:	strb	w2, [x19, x1]
  44d534:	add	x1, x0, #0x1
  44d538:	b	44a0f0 <ferror@plt+0x47870>
  44d53c:	add	x3, x0, #0x2
  44d540:	str	x3, [x19, #256]
  44d544:	mov	w2, #0x61                  	// #97
  44d548:	strb	w2, [x19, x1]
  44d54c:	strb	w2, [x19, #264]
  44d550:	cmp	x3, #0xff
  44d554:	b.ne	44f01c <ferror@plt+0x4c79c>  // b.any
  44d558:	ldp	x4, x2, [x19, #272]
  44d55c:	strb	wzr, [x19, #255]
  44d560:	mov	x1, x3
  44d564:	mov	x0, x19
  44d568:	blr	x4
  44d56c:	ldr	x1, [x19, #320]
  44d570:	mov	w3, #0x6176                	// #24950
  44d574:	mov	w2, #0x20                  	// #32
  44d578:	mov	x0, #0x3                   	// #3
  44d57c:	add	x1, x1, #0x1
  44d580:	strh	w3, [x19]
  44d584:	strb	w2, [x19, #2]
  44d588:	str	x1, [x19, #320]
  44d58c:	add	x1, x0, #0x1
  44d590:	str	x1, [x19, #256]
  44d594:	mov	w2, #0x72                  	// #114
  44d598:	strb	w2, [x19, x0]
  44d59c:	strb	w2, [x19, #264]
  44d5a0:	cmp	x1, #0xff
  44d5a4:	b.ne	44f06c <ferror@plt+0x4c7ec>  // b.any
  44d5a8:	ldp	x3, x2, [x19, #272]
  44d5ac:	strb	wzr, [x19, #255]
  44d5b0:	mov	x0, x19
  44d5b4:	blr	x3
  44d5b8:	ldr	x1, [x19, #320]
  44d5bc:	mov	w3, #0x7365                	// #29541
  44d5c0:	mov	w2, #0x6f                  	// #111
  44d5c4:	mov	x0, #0x3                   	// #3
  44d5c8:	add	x1, x1, #0x1
  44d5cc:	strh	w3, [x19]
  44d5d0:	strb	w2, [x19, #2]
  44d5d4:	str	x1, [x19, #320]
  44d5d8:	add	x1, x0, #0x1
  44d5dc:	str	x1, [x19, #256]
  44d5e0:	mov	w2, #0x75                  	// #117
  44d5e4:	strb	w2, [x19, x0]
  44d5e8:	strb	w2, [x19, #264]
  44d5ec:	cmp	x1, #0xff
  44d5f0:	b.ne	44f0bc <ferror@plt+0x4c83c>  // b.any
  44d5f4:	ldp	x3, x2, [x19, #272]
  44d5f8:	strb	wzr, [x19, #255]
  44d5fc:	mov	x0, x19
  44d600:	blr	x3
  44d604:	ldr	x0, [x19, #320]
  44d608:	mov	w2, #0x6372                	// #25458
  44d60c:	mov	x1, #0x2                   	// #2
  44d610:	strh	w2, [x19]
  44d614:	add	x0, x0, #0x1
  44d618:	str	x0, [x19, #320]
  44d61c:	add	x0, x1, #0x1
  44d620:	mov	w2, #0x65                  	// #101
  44d624:	strb	w2, [x19, x1]
  44d628:	add	x1, x0, #0x1
  44d62c:	b	44aa6c <ferror@plt+0x481ec>
  44d630:	ldp	x3, x2, [x19, #272]
  44d634:	strb	wzr, [x19, #255]
  44d638:	mov	x1, x0
  44d63c:	mov	x0, x19
  44d640:	blr	x3
  44d644:	ldr	x1, [x19, #320]
  44d648:	mov	w3, #0x6564                	// #25956
  44d64c:	mov	w2, #0x63                  	// #99
  44d650:	mov	x0, #0x3                   	// #3
  44d654:	add	x1, x1, #0x1
  44d658:	strh	w3, [x19]
  44d65c:	strb	w2, [x19, #2]
  44d660:	str	x1, [x19, #320]
  44d664:	add	x1, x0, #0x1
  44d668:	str	x1, [x19, #256]
  44d66c:	mov	w2, #0x6c                  	// #108
  44d670:	strb	w2, [x19, x0]
  44d674:	strb	w2, [x19, #264]
  44d678:	cmp	x1, #0xff
  44d67c:	b.ne	44ba0c <ferror@plt+0x4918c>  // b.any
  44d680:	ldp	x3, x2, [x19, #272]
  44d684:	strb	wzr, [x19, #255]
  44d688:	mov	x0, x19
  44d68c:	blr	x3
  44d690:	ldr	x1, [x19, #320]
  44d694:	mov	w3, #0x7974                	// #31092
  44d698:	mov	w2, #0x70                  	// #112
  44d69c:	mov	x0, #0x3                   	// #3
  44d6a0:	add	x1, x1, #0x1
  44d6a4:	strh	w3, [x19]
  44d6a8:	strb	w2, [x19, #2]
  44d6ac:	str	x1, [x19, #320]
  44d6b0:	add	x3, x0, #0x1
  44d6b4:	str	x3, [x19, #256]
  44d6b8:	mov	w1, #0x65                  	// #101
  44d6bc:	strb	w1, [x19, x0]
  44d6c0:	strb	w1, [x19, #264]
  44d6c4:	cmp	x3, #0xff
  44d6c8:	b.ne	44ba5c <ferror@plt+0x491dc>  // b.any
  44d6cc:	ldp	x4, x2, [x19, #272]
  44d6d0:	strb	wzr, [x19, #255]
  44d6d4:	mov	x1, x3
  44d6d8:	mov	x0, x19
  44d6dc:	blr	x4
  44d6e0:	ldr	x0, [x19, #320]
  44d6e4:	mov	w2, #0x20                  	// #32
  44d6e8:	mov	x1, #0x1                   	// #1
  44d6ec:	strb	w2, [x19]
  44d6f0:	add	x0, x0, x1
  44d6f4:	str	x0, [x19, #320]
  44d6f8:	add	x0, x1, #0x1
  44d6fc:	b	44ba9c <ferror@plt+0x4921c>
  44d700:	mov	w0, #0x1                   	// #1
  44d704:	str	w0, [x19, #304]
  44d708:	b	4499cc <ferror@plt+0x4714c>
  44d70c:	ldp	x21, x22, [sp, #32]
  44d710:	ldp	x23, x24, [sp, #48]
  44d714:	b	448e38 <ferror@plt+0x465b8>
  44d718:	ldp	x21, x22, [sp, #32]
  44d71c:	ldp	x23, x24, [sp, #48]
  44d720:	b	448e38 <ferror@plt+0x465b8>
  44d724:	ldp	x21, x22, [sp, #32]
  44d728:	ldp	x23, x24, [sp, #48]
  44d72c:	b	448e38 <ferror@plt+0x465b8>
  44d730:	ldr	x20, [x24, #8]
  44d734:	cbz	w26, 4512fc <ferror@plt+0x4ea7c>
  44d738:	str	x27, [sp, #80]
  44d73c:	b	449a70 <ferror@plt+0x471f0>
  44d740:	mov	w0, #0x1                   	// #1
  44d744:	str	w0, [x19, #304]
  44d748:	sub	x21, x21, #0x2
  44d74c:	ldp	x23, x24, [sp, #48]
  44d750:	str	x21, [x19, #256]
  44d754:	ldp	x21, x22, [sp, #32]
  44d758:	b	448e38 <ferror@plt+0x465b8>
  44d75c:	mov	x24, x0
  44d760:	ldr	x25, [x0, #8]
  44d764:	b	4491f8 <ferror@plt+0x46978>
  44d768:	mov	w1, #0x1                   	// #1
  44d76c:	str	w1, [x19, #304]
  44d770:	b	449574 <ferror@plt+0x46cf4>
  44d774:	mov	w0, #0x1                   	// #1
  44d778:	str	w0, [x19, #304]
  44d77c:	b	449354 <ferror@plt+0x46ad4>
  44d780:	ldr	x21, [x19, #288]
  44d784:	cbz	x21, 448e64 <ferror@plt+0x465e4>
  44d788:	ldr	x2, [x21, #8]
  44d78c:	ldr	x1, [x24, #8]
  44d790:	ldr	x20, [x2, #16]
  44d794:	mov	w0, w1
  44d798:	tbnz	w1, #31, 44d7c4 <ferror@plt+0x4af44>
  44d79c:	nop
  44d7a0:	cbz	x20, 448e64 <ferror@plt+0x465e4>
  44d7a4:	ldr	w1, [x20]
  44d7a8:	cmp	w1, #0x2f
  44d7ac:	b.ne	448e64 <ferror@plt+0x465e4>  // b.any
  44d7b0:	cbz	w0, 44d7c0 <ferror@plt+0x4af40>
  44d7b4:	sub	w0, w0, #0x1
  44d7b8:	ldr	x20, [x20, #16]
  44d7bc:	b	44d7a0 <ferror@plt+0x4af20>
  44d7c0:	ldr	x20, [x20, #8]
  44d7c4:	cbz	x20, 448e64 <ferror@plt+0x465e4>
  44d7c8:	ldr	w0, [x20]
  44d7cc:	cmp	w0, #0x2f
  44d7d0:	b.eq	4510cc <ferror@plt+0x4e84c>  // b.none
  44d7d4:	ldr	x0, [x21]
  44d7d8:	str	x0, [x19, #288]
  44d7dc:	ldr	w0, [x20, #4]
  44d7e0:	cmp	w0, #0x1
  44d7e4:	b.gt	4503c4 <ferror@plt+0x4db44>
  44d7e8:	ldr	w1, [x19, #308]
  44d7ec:	cmp	w1, #0x400
  44d7f0:	b.gt	4503c4 <ferror@plt+0x4db44>
  44d7f4:	ldr	x3, [x19, #328]
  44d7f8:	add	w0, w0, #0x1
  44d7fc:	str	w0, [x20, #4]
  44d800:	add	w1, w1, #0x1
  44d804:	add	x0, sp, #0x80
  44d808:	str	w1, [x19, #308]
  44d80c:	str	x0, [x19, #328]
  44d810:	mov	w1, w22
  44d814:	mov	x0, x19
  44d818:	mov	x2, x20
  44d81c:	stp	x20, x3, [sp, #128]
  44d820:	bl	448dd0 <ferror@plt+0x46550>
  44d824:	ldr	w1, [x20, #4]
  44d828:	ldr	x0, [sp, #136]
  44d82c:	str	x0, [x19, #328]
  44d830:	ldr	w0, [x19, #308]
  44d834:	sub	w1, w1, #0x1
  44d838:	str	w1, [x20, #4]
  44d83c:	sub	w0, w0, #0x1
  44d840:	str	w0, [x19, #308]
  44d844:	ldp	x23, x24, [sp, #48]
  44d848:	str	x21, [x19, #288]
  44d84c:	ldp	x21, x22, [sp, #32]
  44d850:	b	448e38 <ferror@plt+0x465b8>
  44d854:	mov	x0, x3
  44d858:	ldr	x4, [x19, #288]
  44d85c:	b	4491dc <ferror@plt+0x4695c>
  44d860:	ldrsw	x22, [x0, #24]
  44d864:	ldr	x20, [x0, #16]
  44d868:	cbz	x22, 4517ec <ferror@plt+0x4ef6c>
  44d86c:	add	x22, x20, x22
  44d870:	mov	x23, #0x1                   	// #1
  44d874:	ldr	x1, [x19, #256]
  44d878:	b	44d8d4 <ferror@plt+0x4b054>
  44d87c:	ldp	x3, x2, [x19, #272]
  44d880:	strb	wzr, [x19, #255]
  44d884:	mov	x0, x19
  44d888:	add	x20, x20, #0x1
  44d88c:	blr	x3
  44d890:	strb	w21, [x19]
  44d894:	ldr	x0, [x19, #320]
  44d898:	str	x23, [x19, #256]
  44d89c:	strb	w21, [x19, #264]
  44d8a0:	cmp	x20, x22
  44d8a4:	add	x0, x0, #0x1
  44d8a8:	str	x0, [x19, #320]
  44d8ac:	b.eq	45109c <ferror@plt+0x4e81c>  // b.none
  44d8b0:	ldrb	w21, [x20]
  44d8b4:	mov	x0, #0x1                   	// #1
  44d8b8:	add	x1, x0, #0x1
  44d8bc:	str	x1, [x19, #256]
  44d8c0:	strb	w21, [x19, x0]
  44d8c4:	add	x20, x20, #0x1
  44d8c8:	strb	w21, [x19, #264]
  44d8cc:	cmp	x22, x20
  44d8d0:	b.eq	450390 <ferror@plt+0x4db10>  // b.none
  44d8d4:	ldrb	w21, [x20]
  44d8d8:	cmp	x1, #0xff
  44d8dc:	b.eq	44d87c <ferror@plt+0x4affc>  // b.none
  44d8e0:	mov	x0, x1
  44d8e4:	b	44d8b8 <ferror@plt+0x4b038>
  44d8e8:	add	x21, x20, x21
  44d8ec:	cmp	x21, x20
  44d8f0:	b.ls	4518d8 <ferror@plt+0x4f058>  // b.plast
  44d8f4:	mov	w23, #0x5f                  	// #95
  44d8f8:	ldr	x1, [x19, #256]
  44d8fc:	b	44d920 <ferror@plt+0x4b0a0>
  44d900:	mov	x0, x1
  44d904:	add	x1, x1, #0x1
  44d908:	str	x1, [x19, #256]
  44d90c:	strb	w22, [x19, x0]
  44d910:	strb	w22, [x19, #264]
  44d914:	add	x20, x20, #0x1
  44d918:	cmp	x21, x20
  44d91c:	b.ls	44f63c <ferror@plt+0x4cdbc>  // b.plast
  44d920:	sub	x0, x21, x20
  44d924:	ldrb	w22, [x20]
  44d928:	cmp	x0, #0x3
  44d92c:	b.le	44d938 <ferror@plt+0x4b0b8>
  44d930:	cmp	w22, #0x5f
  44d934:	b.eq	44d968 <ferror@plt+0x4b0e8>  // b.none
  44d938:	cmp	x1, #0xff
  44d93c:	b.ne	44d900 <ferror@plt+0x4b080>  // b.any
  44d940:	ldp	x3, x2, [x19, #272]
  44d944:	strb	wzr, [x19, #255]
  44d948:	mov	x0, x19
  44d94c:	blr	x3
  44d950:	ldr	x2, [x19, #320]
  44d954:	mov	x1, #0x1                   	// #1
  44d958:	mov	x0, #0x0                   	// #0
  44d95c:	add	x2, x2, x1
  44d960:	str	x2, [x19, #320]
  44d964:	b	44d908 <ferror@plt+0x4b088>
  44d968:	ldrb	w0, [x20, #1]
  44d96c:	cmp	w0, #0x5f
  44d970:	b.ne	44d938 <ferror@plt+0x4b0b8>  // b.any
  44d974:	ldrb	w0, [x20, #2]
  44d978:	cmp	w0, #0x55
  44d97c:	b.ne	44d938 <ferror@plt+0x4b0b8>  // b.any
  44d980:	add	x24, x20, #0x3
  44d984:	cmp	x21, x24
  44d988:	b.ls	44d938 <ferror@plt+0x4b0b8>  // b.plast
  44d98c:	mov	x2, #0x0                   	// #0
  44d990:	b	44d9ac <ferror@plt+0x4b12c>
  44d994:	mov	w0, w3
  44d998:	sxtw	x0, w0
  44d99c:	add	x24, x24, #0x1
  44d9a0:	add	x2, x0, x2, lsl #4
  44d9a4:	cmp	x21, x24
  44d9a8:	b.eq	44d938 <ferror@plt+0x4b0b8>  // b.none
  44d9ac:	ldrb	w0, [x24]
  44d9b0:	sub	w3, w0, #0x30
  44d9b4:	and	w4, w3, #0xff
  44d9b8:	cmp	w4, #0x9
  44d9bc:	b.ls	44d994 <ferror@plt+0x4b114>  // b.plast
  44d9c0:	sub	w3, w0, #0x41
  44d9c4:	and	w3, w3, #0xff
  44d9c8:	cmp	w3, #0x5
  44d9cc:	b.hi	4510a8 <ferror@plt+0x4e828>  // b.pmore
  44d9d0:	sub	w0, w0, #0x37
  44d9d4:	b	44d998 <ferror@plt+0x4b118>
  44d9d8:	b.eq	45066c <ferror@plt+0x4ddec>  // b.none
  44d9dc:	add	x3, x0, #0x1
  44d9e0:	str	x3, [x19, #256]
  44d9e4:	mov	w1, #0x7b                  	// #123
  44d9e8:	strb	w1, [x19, x0]
  44d9ec:	strb	w1, [x19, #264]
  44d9f0:	cmp	x3, #0xff
  44d9f4:	b.ne	45016c <ferror@plt+0x4d8ec>  // b.any
  44d9f8:	ldp	x4, x2, [x19, #272]
  44d9fc:	strb	wzr, [x19, #255]
  44da00:	mov	x1, x3
  44da04:	mov	x0, x19
  44da08:	blr	x4
  44da0c:	ldr	x0, [x19, #320]
  44da10:	mov	w3, #0x6170                	// #24944
  44da14:	mov	w2, #0x72                  	// #114
  44da18:	mov	x1, #0x3                   	// #3
  44da1c:	add	x0, x0, #0x1
  44da20:	strh	w3, [x19]
  44da24:	strb	w2, [x19, #2]
  44da28:	str	x0, [x19, #320]
  44da2c:	add	x0, x1, #0x1
  44da30:	str	x0, [x19, #256]
  44da34:	mov	w2, #0x6d                  	// #109
  44da38:	strb	w2, [x19, x1]
  44da3c:	strb	w2, [x19, #264]
  44da40:	cmp	x0, #0xff
  44da44:	b.ne	4501bc <ferror@plt+0x4d93c>  // b.any
  44da48:	ldp	x3, x2, [x19, #272]
  44da4c:	strb	wzr, [x19, #255]
  44da50:	mov	x1, x0
  44da54:	mov	x0, x19
  44da58:	blr	x3
  44da5c:	ldr	x2, [x19, #320]
  44da60:	mov	x1, #0x1                   	// #1
  44da64:	mov	x0, #0x0                   	// #0
  44da68:	add	x2, x2, x1
  44da6c:	str	x2, [x19, #320]
  44da70:	str	x1, [x19, #256]
  44da74:	mov	w3, #0x23                  	// #35
  44da78:	strb	w3, [x19, x0]
  44da7c:	mov	w2, w20
  44da80:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  44da84:	add	x1, x1, #0x9e0
  44da88:	strb	w3, [x19, #264]
  44da8c:	add	x0, sp, #0x80
  44da90:	bl	402310 <sprintf@plt>
  44da94:	add	x0, sp, #0x80
  44da98:	bl	402270 <strlen@plt>
  44da9c:	cbz	x0, 44f794 <ferror@plt+0x4cf14>
  44daa0:	add	x20, sp, #0x80
  44daa4:	mov	x23, #0x1                   	// #1
  44daa8:	add	x22, x20, x0
  44daac:	ldr	x1, [x19, #256]
  44dab0:	b	44db0c <ferror@plt+0x4b28c>
  44dab4:	ldp	x3, x2, [x19, #272]
  44dab8:	strb	wzr, [x19, #255]
  44dabc:	mov	x0, x19
  44dac0:	add	x20, x20, #0x1
  44dac4:	blr	x3
  44dac8:	strb	w21, [x19]
  44dacc:	ldr	x0, [x19, #320]
  44dad0:	str	x23, [x19, #256]
  44dad4:	strb	w21, [x19, #264]
  44dad8:	cmp	x20, x22
  44dadc:	add	x0, x0, #0x1
  44dae0:	str	x0, [x19, #320]
  44dae4:	b.eq	450084 <ferror@plt+0x4d804>  // b.none
  44dae8:	ldrb	w21, [x20]
  44daec:	mov	x0, #0x1                   	// #1
  44daf0:	add	x1, x0, #0x1
  44daf4:	str	x1, [x19, #256]
  44daf8:	strb	w21, [x19, x0]
  44dafc:	add	x20, x20, #0x1
  44db00:	strb	w21, [x19, #264]
  44db04:	cmp	x22, x20
  44db08:	b.eq	44f798 <ferror@plt+0x4cf18>  // b.none
  44db0c:	ldrb	w21, [x20]
  44db10:	cmp	x1, #0xff
  44db14:	b.eq	44dab4 <ferror@plt+0x4b234>  // b.none
  44db18:	mov	x0, x1
  44db1c:	b	44daf0 <ferror@plt+0x4b270>
  44db20:	ldr	x25, [x25, #8]
  44db24:	cbz	x25, 451a88 <ferror@plt+0x4f208>
  44db28:	ldr	w4, [x25]
  44db2c:	add	x21, sp, #0x80
  44db30:	stp	x21, x25, [sp, #160]
  44db34:	sub	w1, w4, #0x1c
  44db38:	str	wzr, [sp, #176]
  44db3c:	cmp	w1, #0x34
  44db40:	str	x3, [sp, #184]
  44db44:	b.hi	44db54 <ferror@plt+0x4b2d4>  // b.pmore
  44db48:	lsl	x1, x0, x1
  44db4c:	tst	x1, x2
  44db50:	b.ne	4504b4 <ferror@plt+0x4dc34>  // b.any
  44db54:	add	x1, x21, #0x20
  44db58:	mov	w20, #0x2                   	// #2
  44db5c:	b	449770 <ferror@plt+0x46ef0>
  44db60:	add	x3, x1, #0x2
  44db64:	str	x3, [x19, #256]
  44db68:	mov	w2, #0x66                  	// #102
  44db6c:	strb	w2, [x19, x0]
  44db70:	strb	w2, [x19, #264]
  44db74:	cmp	x3, #0xff
  44db78:	b.ne	44e734 <ferror@plt+0x4beb4>  // b.any
  44db7c:	ldp	x4, x2, [x19, #272]
  44db80:	strb	wzr, [x19, #255]
  44db84:	mov	x1, x3
  44db88:	mov	x0, x19
  44db8c:	blr	x4
  44db90:	ldr	x0, [x19, #320]
  44db94:	mov	w1, #0x6f                  	// #111
  44db98:	mov	x2, #0x1                   	// #1
  44db9c:	strb	w1, [x19]
  44dba0:	add	x0, x0, x2
  44dba4:	str	x0, [x19, #320]
  44dba8:	b	44cd10 <ferror@plt+0x4a490>
  44dbac:	add	x3, x0, #0x2
  44dbb0:	str	x3, [x19, #256]
  44dbb4:	mov	w2, #0x6c                  	// #108
  44dbb8:	strb	w2, [x19, x1]
  44dbbc:	strb	w2, [x19, #264]
  44dbc0:	cmp	x3, #0xff
  44dbc4:	b.ne	44f2bc <ferror@plt+0x4ca3c>  // b.any
  44dbc8:	ldp	x4, x2, [x19, #272]
  44dbcc:	strb	wzr, [x19, #255]
  44dbd0:	mov	x1, x3
  44dbd4:	mov	x0, x19
  44dbd8:	blr	x4
  44dbdc:	ldr	x1, [x19, #320]
  44dbe0:	mov	w3, #0x6d61                	// #28001
  44dbe4:	mov	w2, #0x62                  	// #98
  44dbe8:	mov	x0, #0x3                   	// #3
  44dbec:	add	x1, x1, #0x1
  44dbf0:	strh	w3, [x19]
  44dbf4:	strb	w2, [x19, #2]
  44dbf8:	str	x1, [x19, #320]
  44dbfc:	add	x3, x0, #0x1
  44dc00:	str	x3, [x19, #256]
  44dc04:	mov	w1, #0x64                  	// #100
  44dc08:	strb	w1, [x19, x0]
  44dc0c:	strb	w1, [x19, #264]
  44dc10:	cmp	x3, #0xff
  44dc14:	b.ne	44f30c <ferror@plt+0x4ca8c>  // b.any
  44dc18:	ldp	x4, x2, [x19, #272]
  44dc1c:	strb	wzr, [x19, #255]
  44dc20:	mov	x1, x3
  44dc24:	mov	x0, x19
  44dc28:	blr	x4
  44dc2c:	ldr	x0, [x19, #320]
  44dc30:	mov	w2, #0x61                  	// #97
  44dc34:	mov	x1, #0x1                   	// #1
  44dc38:	strb	w2, [x19]
  44dc3c:	add	x0, x0, x1
  44dc40:	str	x0, [x19, #320]
  44dc44:	b	449e1c <ferror@plt+0x4759c>
  44dc48:	add	x3, x0, #0x2
  44dc4c:	str	x3, [x19, #256]
  44dc50:	mov	w2, #0x70                  	// #112
  44dc54:	strb	w2, [x19, x1]
  44dc58:	strb	w2, [x19, #264]
  44dc5c:	cmp	x3, #0xff
  44dc60:	b.ne	44e938 <ferror@plt+0x4c0b8>  // b.any
  44dc64:	ldp	x4, x2, [x19, #272]
  44dc68:	strb	wzr, [x19, #255]
  44dc6c:	mov	x1, x3
  44dc70:	mov	x0, x19
  44dc74:	blr	x4
  44dc78:	ldr	x0, [x19, #320]
  44dc7c:	mov	w3, #0x7265                	// #29285
  44dc80:	mov	w2, #0x61                  	// #97
  44dc84:	mov	x1, #0x3                   	// #3
  44dc88:	add	x0, x0, #0x1
  44dc8c:	strh	w3, [x19]
  44dc90:	strb	w2, [x19, #2]
  44dc94:	str	x0, [x19, #320]
  44dc98:	add	x0, x1, #0x1
  44dc9c:	str	x0, [x19, #256]
  44dca0:	mov	w2, #0x74                  	// #116
  44dca4:	strb	w2, [x19, x1]
  44dca8:	strb	w2, [x19, #264]
  44dcac:	cmp	x0, #0xff
  44dcb0:	b.ne	44e988 <ferror@plt+0x4c108>  // b.any
  44dcb4:	ldp	x3, x2, [x19, #272]
  44dcb8:	strb	wzr, [x19, #255]
  44dcbc:	mov	x1, x0
  44dcc0:	mov	x0, x19
  44dcc4:	blr	x3
  44dcc8:	ldr	x0, [x19, #320]
  44dccc:	mov	w2, #0x6f                  	// #111
  44dcd0:	mov	x1, #0x1                   	// #1
  44dcd4:	strb	w2, [x19]
  44dcd8:	add	x0, x0, x1
  44dcdc:	str	x0, [x19, #320]
  44dce0:	b	44b2b0 <ferror@plt+0x48a30>
  44dce4:	add	x3, x0, #0x2
  44dce8:	str	x3, [x19, #256]
  44dcec:	mov	w2, #0x61                  	// #97
  44dcf0:	strb	w2, [x19, x1]
  44dcf4:	strb	w2, [x19, #264]
  44dcf8:	cmp	x3, #0xff
  44dcfc:	b.ne	44de1c <ferror@plt+0x4b59c>  // b.any
  44dd00:	ldp	x4, x2, [x19, #272]
  44dd04:	strb	wzr, [x19, #255]
  44dd08:	mov	x1, x3
  44dd0c:	mov	x0, x19
  44dd10:	blr	x4
  44dd14:	ldr	x0, [x19, #320]
  44dd18:	mov	w3, #0x6176                	// #24950
  44dd1c:	mov	w2, #0x20                  	// #32
  44dd20:	mov	x1, #0x3                   	// #3
  44dd24:	add	x0, x0, #0x1
  44dd28:	strh	w3, [x19]
  44dd2c:	strb	w2, [x19, #2]
  44dd30:	str	x0, [x19, #320]
  44dd34:	add	x0, x1, #0x1
  44dd38:	str	x0, [x19, #256]
  44dd3c:	mov	w2, #0x43                  	// #67
  44dd40:	strb	w2, [x19, x1]
  44dd44:	strb	w2, [x19, #264]
  44dd48:	cmp	x0, #0xff
  44dd4c:	b.ne	44de6c <ferror@plt+0x4b5ec>  // b.any
  44dd50:	ldp	x3, x2, [x19, #272]
  44dd54:	strb	wzr, [x19, #255]
  44dd58:	mov	x1, x0
  44dd5c:	mov	x0, x19
  44dd60:	blr	x3
  44dd64:	ldr	x0, [x19, #320]
  44dd68:	mov	w3, #0x616c                	// #24940
  44dd6c:	mov	w2, #0x73                  	// #115
  44dd70:	mov	x1, #0x3                   	// #3
  44dd74:	add	x0, x0, #0x1
  44dd78:	strh	w3, [x19]
  44dd7c:	strb	w2, [x19, #2]
  44dd80:	str	x0, [x19, #320]
  44dd84:	add	x0, x1, #0x1
  44dd88:	str	x0, [x19, #256]
  44dd8c:	mov	w2, #0x73                  	// #115
  44dd90:	strb	w2, [x19, x1]
  44dd94:	strb	w2, [x19, #264]
  44dd98:	cmp	x0, #0xff
  44dd9c:	b.ne	44deb8 <ferror@plt+0x4b638>  // b.any
  44dda0:	ldp	x3, x2, [x19, #272]
  44dda4:	strb	wzr, [x19, #255]
  44dda8:	mov	x1, x0
  44ddac:	mov	x0, x19
  44ddb0:	blr	x3
  44ddb4:	ldr	x0, [x19, #320]
  44ddb8:	mov	w3, #0x6620                	// #26144
  44ddbc:	mov	w2, #0x6f                  	// #111
  44ddc0:	mov	x1, #0x3                   	// #3
  44ddc4:	add	x0, x0, #0x1
  44ddc8:	strh	w3, [x19]
  44ddcc:	strb	w2, [x19, #2]
  44ddd0:	str	x0, [x19, #320]
  44ddd4:	add	x0, x1, #0x1
  44ddd8:	str	x0, [x19, #256]
  44dddc:	mov	w2, #0x72                  	// #114
  44dde0:	strb	w2, [x19, x1]
  44dde4:	strb	w2, [x19, #264]
  44dde8:	cmp	x0, #0xff
  44ddec:	b.ne	44a360 <ferror@plt+0x47ae0>  // b.any
  44ddf0:	ldp	x3, x2, [x19, #272]
  44ddf4:	strb	wzr, [x19, #255]
  44ddf8:	mov	x1, x0
  44ddfc:	mov	x0, x19
  44de00:	blr	x3
  44de04:	ldr	x2, [x19, #320]
  44de08:	mov	x1, #0x1                   	// #1
  44de0c:	mov	x0, #0x0                   	// #0
  44de10:	add	x2, x2, x1
  44de14:	str	x2, [x19, #320]
  44de18:	b	44a364 <ferror@plt+0x47ae4>
  44de1c:	add	x0, x0, #0x3
  44de20:	str	x0, [x19, #256]
  44de24:	mov	w1, #0x76                  	// #118
  44de28:	strb	w1, [x19, x3]
  44de2c:	strb	w1, [x19, #264]
  44de30:	cmp	x0, #0xff
  44de34:	b.ne	44e648 <ferror@plt+0x4bdc8>  // b.any
  44de38:	ldp	x3, x2, [x19, #272]
  44de3c:	strb	wzr, [x19, #255]
  44de40:	mov	x1, x0
  44de44:	mov	x0, x19
  44de48:	blr	x3
  44de4c:	ldr	x1, [x19, #320]
  44de50:	mov	w3, #0x2061                	// #8289
  44de54:	mov	w2, #0x43                  	// #67
  44de58:	mov	x0, #0x3                   	// #3
  44de5c:	add	x1, x1, #0x1
  44de60:	strh	w3, [x19]
  44de64:	strb	w2, [x19, #2]
  44de68:	str	x1, [x19, #320]
  44de6c:	add	x1, x0, #0x1
  44de70:	str	x1, [x19, #256]
  44de74:	mov	w2, #0x6c                  	// #108
  44de78:	strb	w2, [x19, x0]
  44de7c:	strb	w2, [x19, #264]
  44de80:	cmp	x1, #0xff
  44de84:	b.ne	44e698 <ferror@plt+0x4be18>  // b.any
  44de88:	ldp	x3, x2, [x19, #272]
  44de8c:	strb	wzr, [x19, #255]
  44de90:	mov	x0, x19
  44de94:	blr	x3
  44de98:	ldr	x1, [x19, #320]
  44de9c:	mov	w3, #0x7361                	// #29537
  44dea0:	mov	w2, #0x73                  	// #115
  44dea4:	mov	x0, #0x3                   	// #3
  44dea8:	add	x1, x1, #0x1
  44deac:	strh	w3, [x19]
  44deb0:	strb	w2, [x19, #2]
  44deb4:	str	x1, [x19, #320]
  44deb8:	add	x1, x0, #0x1
  44debc:	str	x1, [x19, #256]
  44dec0:	mov	w2, #0x20                  	// #32
  44dec4:	strb	w2, [x19, x0]
  44dec8:	strb	w2, [x19, #264]
  44decc:	cmp	x1, #0xff
  44ded0:	b.ne	44e6e8 <ferror@plt+0x4be68>  // b.any
  44ded4:	ldp	x3, x2, [x19, #272]
  44ded8:	strb	wzr, [x19, #255]
  44dedc:	mov	x0, x19
  44dee0:	blr	x3
  44dee4:	ldr	x0, [x19, #320]
  44dee8:	mov	w2, #0x6f66                	// #28518
  44deec:	mov	x1, #0x2                   	// #2
  44def0:	strh	w2, [x19]
  44def4:	add	x0, x0, #0x1
  44def8:	str	x0, [x19, #320]
  44defc:	mov	w2, #0x72                  	// #114
  44df00:	add	x0, x1, #0x1
  44df04:	strb	w2, [x19, x1]
  44df08:	b	44a360 <ferror@plt+0x47ae0>
  44df0c:	add	x3, x0, #0x2
  44df10:	str	x3, [x19, #256]
  44df14:	mov	w2, #0x74                  	// #116
  44df18:	strb	w2, [x19, x1]
  44df1c:	strb	w2, [x19, #264]
  44df20:	cmp	x3, #0xff
  44df24:	b.ne	44dff4 <ferror@plt+0x4b774>  // b.any
  44df28:	ldp	x4, x2, [x19, #272]
  44df2c:	strb	wzr, [x19, #255]
  44df30:	mov	x1, x3
  44df34:	mov	x0, x19
  44df38:	blr	x4
  44df3c:	ldr	x0, [x19, #320]
  44df40:	mov	w3, #0x6261                	// #25185
  44df44:	mov	w2, #0x6c                  	// #108
  44df48:	mov	x1, #0x3                   	// #3
  44df4c:	add	x0, x0, #0x1
  44df50:	strh	w3, [x19]
  44df54:	strb	w2, [x19, #2]
  44df58:	str	x0, [x19, #320]
  44df5c:	add	x0, x1, #0x1
  44df60:	str	x0, [x19, #256]
  44df64:	mov	w2, #0x65                  	// #101
  44df68:	strb	w2, [x19, x1]
  44df6c:	strb	w2, [x19, #264]
  44df70:	cmp	x0, #0xff
  44df74:	b.ne	44e044 <ferror@plt+0x4b7c4>  // b.any
  44df78:	ldp	x3, x2, [x19, #272]
  44df7c:	strb	wzr, [x19, #255]
  44df80:	mov	x1, x0
  44df84:	mov	x0, x19
  44df88:	blr	x3
  44df8c:	ldr	x0, [x19, #320]
  44df90:	mov	w3, #0x6620                	// #26144
  44df94:	mov	w2, #0x6f                  	// #111
  44df98:	mov	x1, #0x3                   	// #3
  44df9c:	add	x0, x0, #0x1
  44dfa0:	strh	w3, [x19]
  44dfa4:	strb	w2, [x19, #2]
  44dfa8:	str	x0, [x19, #320]
  44dfac:	add	x0, x1, #0x1
  44dfb0:	str	x0, [x19, #256]
  44dfb4:	mov	w2, #0x72                  	// #114
  44dfb8:	strb	w2, [x19, x1]
  44dfbc:	strb	w2, [x19, #264]
  44dfc0:	cmp	x0, #0xff
  44dfc4:	b.ne	44bda0 <ferror@plt+0x49520>  // b.any
  44dfc8:	ldp	x3, x2, [x19, #272]
  44dfcc:	strb	wzr, [x19, #255]
  44dfd0:	mov	x1, x0
  44dfd4:	mov	x0, x19
  44dfd8:	blr	x3
  44dfdc:	ldr	x2, [x19, #320]
  44dfe0:	mov	x1, #0x1                   	// #1
  44dfe4:	mov	x0, #0x0                   	// #0
  44dfe8:	add	x2, x2, x1
  44dfec:	str	x2, [x19, #320]
  44dff0:	b	44bda4 <ferror@plt+0x49524>
  44dff4:	add	x0, x0, #0x3
  44dff8:	str	x0, [x19, #256]
  44dffc:	mov	w1, #0x61                  	// #97
  44e000:	strb	w1, [x19, x3]
  44e004:	strb	w1, [x19, #264]
  44e008:	cmp	x0, #0xff
  44e00c:	b.ne	44e800 <ferror@plt+0x4bf80>  // b.any
  44e010:	ldp	x3, x2, [x19, #272]
  44e014:	strb	wzr, [x19, #255]
  44e018:	mov	x1, x0
  44e01c:	mov	x0, x19
  44e020:	blr	x3
  44e024:	ldr	x1, [x19, #320]
  44e028:	mov	w3, #0x6c62                	// #27746
  44e02c:	mov	w2, #0x65                  	// #101
  44e030:	mov	x0, #0x3                   	// #3
  44e034:	add	x1, x1, #0x1
  44e038:	strh	w3, [x19]
  44e03c:	strb	w2, [x19, #2]
  44e040:	str	x1, [x19, #320]
  44e044:	add	x1, x0, #0x1
  44e048:	str	x1, [x19, #256]
  44e04c:	mov	w2, #0x20                  	// #32
  44e050:	strb	w2, [x19, x0]
  44e054:	strb	w2, [x19, #264]
  44e058:	cmp	x1, #0xff
  44e05c:	b.ne	44e850 <ferror@plt+0x4bfd0>  // b.any
  44e060:	ldp	x3, x2, [x19, #272]
  44e064:	strb	wzr, [x19, #255]
  44e068:	mov	x0, x19
  44e06c:	blr	x3
  44e070:	ldr	x0, [x19, #320]
  44e074:	mov	w2, #0x6f66                	// #28518
  44e078:	mov	x1, #0x2                   	// #2
  44e07c:	strh	w2, [x19]
  44e080:	add	x0, x0, #0x1
  44e084:	str	x0, [x19, #320]
  44e088:	mov	w2, #0x72                  	// #114
  44e08c:	add	x0, x1, #0x1
  44e090:	strb	w2, [x19, x1]
  44e094:	b	44bda0 <ferror@plt+0x49520>
  44e098:	add	x3, x0, #0x2
  44e09c:	str	x3, [x19, #256]
  44e0a0:	mov	w2, #0x79                  	// #121
  44e0a4:	strb	w2, [x19, x1]
  44e0a8:	strb	w2, [x19, #264]
  44e0ac:	cmp	x3, #0xff
  44e0b0:	b.ne	44ec98 <ferror@plt+0x4c418>  // b.any
  44e0b4:	ldp	x4, x2, [x19, #272]
  44e0b8:	strb	wzr, [x19, #255]
  44e0bc:	mov	x1, x3
  44e0c0:	mov	x0, x19
  44e0c4:	blr	x4
  44e0c8:	ldr	x0, [x19, #320]
  44e0cc:	mov	w3, #0x6570                	// #25968
  44e0d0:	mov	w2, #0x69                  	// #105
  44e0d4:	mov	x1, #0x3                   	// #3
  44e0d8:	add	x0, x0, #0x1
  44e0dc:	strh	w3, [x19]
  44e0e0:	strb	w2, [x19, #2]
  44e0e4:	str	x0, [x19, #320]
  44e0e8:	add	x0, x1, #0x1
  44e0ec:	str	x0, [x19, #256]
  44e0f0:	mov	w2, #0x6e                  	// #110
  44e0f4:	strb	w2, [x19, x1]
  44e0f8:	strb	w2, [x19, #264]
  44e0fc:	cmp	x0, #0xff
  44e100:	b.ne	44ece8 <ferror@plt+0x4c468>  // b.any
  44e104:	ldp	x3, x2, [x19, #272]
  44e108:	strb	wzr, [x19, #255]
  44e10c:	mov	x1, x0
  44e110:	mov	x0, x19
  44e114:	blr	x3
  44e118:	ldr	x0, [x19, #320]
  44e11c:	mov	w3, #0x6f66                	// #28518
  44e120:	mov	w2, #0x20                  	// #32
  44e124:	mov	x1, #0x3                   	// #3
  44e128:	add	x0, x0, #0x1
  44e12c:	strh	w3, [x19]
  44e130:	strb	w2, [x19, #2]
  44e134:	str	x0, [x19, #320]
  44e138:	add	x0, x1, #0x1
  44e13c:	str	x0, [x19, #256]
  44e140:	mov	w2, #0x66                  	// #102
  44e144:	strb	w2, [x19, x1]
  44e148:	strb	w2, [x19, #264]
  44e14c:	cmp	x0, #0xff
  44e150:	b.ne	44ed30 <ferror@plt+0x4c4b0>  // b.any
  44e154:	ldp	x3, x2, [x19, #272]
  44e158:	strb	wzr, [x19, #255]
  44e15c:	mov	x1, x0
  44e160:	mov	x0, x19
  44e164:	blr	x3
  44e168:	ldr	x0, [x19, #320]
  44e16c:	mov	w2, #0x6f                  	// #111
  44e170:	mov	x1, #0x1                   	// #1
  44e174:	strb	w2, [x19]
  44e178:	add	x0, x0, x1
  44e17c:	str	x0, [x19, #320]
  44e180:	b	44bf18 <ferror@plt+0x49698>
  44e184:	add	x3, x0, #0x2
  44e188:	str	x3, [x19, #256]
  44e18c:	mov	w2, #0x70                  	// #112
  44e190:	strb	w2, [x19, x1]
  44e194:	strb	w2, [x19, #264]
  44e198:	cmp	x3, #0xff
  44e19c:	b.ne	44ed78 <ferror@plt+0x4c4f8>  // b.any
  44e1a0:	ldp	x4, x2, [x19, #272]
  44e1a4:	strb	wzr, [x19, #255]
  44e1a8:	mov	x1, x3
  44e1ac:	mov	x0, x19
  44e1b0:	blr	x4
  44e1b4:	ldr	x1, [x19, #320]
  44e1b8:	mov	w3, #0x7265                	// #29285
  44e1bc:	mov	w2, #0x61                  	// #97
  44e1c0:	mov	x0, #0x3                   	// #3
  44e1c4:	add	x1, x1, #0x1
  44e1c8:	strh	w3, [x19]
  44e1cc:	strb	w2, [x19, #2]
  44e1d0:	str	x1, [x19, #320]
  44e1d4:	add	x1, x0, #0x1
  44e1d8:	str	x1, [x19, #256]
  44e1dc:	mov	w2, #0x74                  	// #116
  44e1e0:	strb	w2, [x19, x0]
  44e1e4:	strb	w2, [x19, #264]
  44e1e8:	cmp	x1, #0xff
  44e1ec:	b.ne	44edc8 <ferror@plt+0x4c548>  // b.any
  44e1f0:	ldp	x3, x2, [x19, #272]
  44e1f4:	strb	wzr, [x19, #255]
  44e1f8:	mov	x0, x19
  44e1fc:	blr	x3
  44e200:	mov	w1, #0x726f                	// #29295
  44e204:	mov	w0, #0x72                  	// #114
  44e208:	strh	w1, [x19]
  44e20c:	strb	w0, [x19, #264]
  44e210:	mov	x0, #0x2                   	// #2
  44e214:	ldr	x1, [x19, #320]
  44e218:	ldr	x20, [x22, #8]
  44e21c:	add	x1, x1, #0x1
  44e220:	str	x0, [x19, #256]
  44e224:	str	x1, [x19, #320]
  44e228:	ldrb	w1, [x20]
  44e22c:	sub	w1, w1, #0x61
  44e230:	and	w1, w1, #0xff
  44e234:	cmp	w1, #0x19
  44e238:	b.ls	44ee34 <ferror@plt+0x4c5b4>  // b.plast
  44e23c:	mov	x1, x0
  44e240:	b	44b17c <ferror@plt+0x488fc>
  44e244:	add	x3, x0, #0x2
  44e248:	str	x3, [x19, #256]
  44e24c:	mov	w2, #0x61                  	// #97
  44e250:	strb	w2, [x19, x1]
  44e254:	strb	w2, [x19, #264]
  44e258:	cmp	x3, #0xff
  44e25c:	b.ne	44e780 <ferror@plt+0x4bf00>  // b.any
  44e260:	ldp	x4, x2, [x19, #272]
  44e264:	strb	wzr, [x19, #255]
  44e268:	mov	x1, x3
  44e26c:	mov	x0, x19
  44e270:	blr	x4
  44e274:	ldr	x0, [x19, #320]
  44e278:	mov	w1, #0x62                  	// #98
  44e27c:	mov	x2, #0x1                   	// #1
  44e280:	strb	w1, [x19]
  44e284:	add	x0, x0, x2
  44e288:	str	x0, [x19, #320]
  44e28c:	b	449c04 <ferror@plt+0x47384>
  44e290:	add	x3, x0, #0x2
  44e294:	str	x3, [x19, #256]
  44e298:	mov	w2, #0x54                  	// #84
  44e29c:	strb	w2, [x19, x1]
  44e2a0:	strb	w2, [x19, #264]
  44e2a4:	cmp	x3, #0xff
  44e2a8:	b.ne	44ea78 <ferror@plt+0x4c1f8>  // b.any
  44e2ac:	ldp	x4, x2, [x19, #272]
  44e2b0:	strb	wzr, [x19, #255]
  44e2b4:	mov	x1, x3
  44e2b8:	mov	x0, x19
  44e2bc:	blr	x4
  44e2c0:	ldr	x1, [x19, #320]
  44e2c4:	mov	w3, #0x2054                	// #8276
  44e2c8:	mov	w2, #0x66                  	// #102
  44e2cc:	mov	x0, #0x3                   	// #3
  44e2d0:	add	x1, x1, #0x1
  44e2d4:	strh	w3, [x19]
  44e2d8:	strb	w2, [x19, #2]
  44e2dc:	str	x1, [x19, #320]
  44e2e0:	add	x1, x0, #0x1
  44e2e4:	str	x1, [x19, #256]
  44e2e8:	mov	w2, #0x6f                  	// #111
  44e2ec:	strb	w2, [x19, x0]
  44e2f0:	strb	w2, [x19, #264]
  44e2f4:	cmp	x1, #0xff
  44e2f8:	b.ne	44eac4 <ferror@plt+0x4c244>  // b.any
  44e2fc:	ldp	x3, x2, [x19, #272]
  44e300:	strb	wzr, [x19, #255]
  44e304:	mov	x0, x19
  44e308:	blr	x3
  44e30c:	ldr	x1, [x19, #320]
  44e310:	mov	w2, #0x72                  	// #114
  44e314:	mov	x0, #0x1                   	// #1
  44e318:	strb	w2, [x19]
  44e31c:	add	x1, x1, x0
  44e320:	str	x1, [x19, #320]
  44e324:	b	44a850 <ferror@plt+0x47fd0>
  44e328:	add	x0, x0, #0x3
  44e32c:	str	x0, [x19, #256]
  44e330:	mov	w1, #0x6e                  	// #110
  44e334:	strb	w1, [x19, x3]
  44e338:	strb	w1, [x19, #264]
  44e33c:	cmp	x0, #0xff
  44e340:	b.ne	44e448 <ferror@plt+0x4bbc8>  // b.any
  44e344:	ldp	x3, x2, [x19, #272]
  44e348:	strb	wzr, [x19, #255]
  44e34c:	mov	x1, x0
  44e350:	mov	x0, x19
  44e354:	blr	x3
  44e358:	ldr	x0, [x19, #320]
  44e35c:	mov	w3, #0x616e                	// #24942
  44e360:	mov	w2, #0x6d                  	// #109
  44e364:	mov	x1, #0x3                   	// #3
  44e368:	add	x0, x0, #0x1
  44e36c:	strh	w3, [x19]
  44e370:	strb	w2, [x19, #2]
  44e374:	str	x0, [x19, #320]
  44e378:	add	x0, x1, #0x1
  44e37c:	str	x0, [x19, #256]
  44e380:	mov	w2, #0x65                  	// #101
  44e384:	strb	w2, [x19, x1]
  44e388:	strb	w2, [x19, #264]
  44e38c:	cmp	x0, #0xff
  44e390:	b.ne	44e494 <ferror@plt+0x4bc14>  // b.any
  44e394:	ldp	x3, x2, [x19, #272]
  44e398:	strb	wzr, [x19, #255]
  44e39c:	mov	x1, x0
  44e3a0:	mov	x0, x19
  44e3a4:	blr	x3
  44e3a8:	ldr	x0, [x19, #320]
  44e3ac:	mov	w3, #0x2064                	// #8292
  44e3b0:	mov	w2, #0x74                  	// #116
  44e3b4:	mov	x1, #0x3                   	// #3
  44e3b8:	add	x0, x0, #0x1
  44e3bc:	strh	w3, [x19]
  44e3c0:	strb	w2, [x19, #2]
  44e3c4:	str	x0, [x19, #320]
  44e3c8:	add	x0, x1, #0x1
  44e3cc:	str	x0, [x19, #256]
  44e3d0:	mov	w2, #0x79                  	// #121
  44e3d4:	strb	w2, [x19, x1]
  44e3d8:	strb	w2, [x19, #264]
  44e3dc:	cmp	x0, #0xff
  44e3e0:	b.ne	44e4e0 <ferror@plt+0x4bc60>  // b.any
  44e3e4:	ldp	x3, x2, [x19, #272]
  44e3e8:	strb	wzr, [x19, #255]
  44e3ec:	mov	x1, x0
  44e3f0:	mov	x0, x19
  44e3f4:	blr	x3
  44e3f8:	ldr	x0, [x19, #320]
  44e3fc:	mov	w2, #0x70                  	// #112
  44e400:	mov	x1, #0x1                   	// #1
  44e404:	strb	w2, [x19]
  44e408:	add	x0, x0, x1
  44e40c:	str	x0, [x19, #320]
  44e410:	b	44d528 <ferror@plt+0x4aca8>
  44e414:	ldp	x3, x2, [x19, #272]
  44e418:	strb	wzr, [x19, #255]
  44e41c:	mov	x1, x0
  44e420:	mov	x0, x19
  44e424:	blr	x3
  44e428:	ldr	x1, [x19, #320]
  44e42c:	mov	w3, #0x757b                	// #30075
  44e430:	mov	w2, #0x6e                  	// #110
  44e434:	mov	x0, #0x3                   	// #3
  44e438:	add	x1, x1, #0x1
  44e43c:	strh	w3, [x19]
  44e440:	strb	w2, [x19, #2]
  44e444:	str	x1, [x19, #320]
  44e448:	add	x1, x0, #0x1
  44e44c:	str	x1, [x19, #256]
  44e450:	mov	w2, #0x6e                  	// #110
  44e454:	strb	w2, [x19, x0]
  44e458:	strb	w2, [x19, #264]
  44e45c:	cmp	x1, #0xff
  44e460:	b.ne	44a00c <ferror@plt+0x4778c>  // b.any
  44e464:	ldp	x3, x2, [x19, #272]
  44e468:	strb	wzr, [x19, #255]
  44e46c:	mov	x0, x19
  44e470:	blr	x3
  44e474:	ldr	x1, [x19, #320]
  44e478:	mov	w3, #0x6d61                	// #28001
  44e47c:	mov	w2, #0x65                  	// #101
  44e480:	mov	x0, #0x3                   	// #3
  44e484:	add	x1, x1, #0x1
  44e488:	strh	w3, [x19]
  44e48c:	strb	w2, [x19, #2]
  44e490:	str	x1, [x19, #320]
  44e494:	add	x1, x0, #0x1
  44e498:	str	x1, [x19, #256]
  44e49c:	mov	w2, #0x64                  	// #100
  44e4a0:	strb	w2, [x19, x0]
  44e4a4:	strb	w2, [x19, #264]
  44e4a8:	cmp	x1, #0xff
  44e4ac:	b.ne	44a05c <ferror@plt+0x477dc>  // b.any
  44e4b0:	ldp	x3, x2, [x19, #272]
  44e4b4:	strb	wzr, [x19, #255]
  44e4b8:	mov	x0, x19
  44e4bc:	blr	x3
  44e4c0:	ldr	x1, [x19, #320]
  44e4c4:	mov	w3, #0x7420                	// #29728
  44e4c8:	mov	w2, #0x79                  	// #121
  44e4cc:	mov	x0, #0x3                   	// #3
  44e4d0:	add	x1, x1, #0x1
  44e4d4:	strh	w3, [x19]
  44e4d8:	strb	w2, [x19, #2]
  44e4dc:	str	x1, [x19, #320]
  44e4e0:	add	x1, x0, #0x1
  44e4e4:	str	x1, [x19, #256]
  44e4e8:	mov	w2, #0x70                  	// #112
  44e4ec:	strb	w2, [x19, x0]
  44e4f0:	strb	w2, [x19, #264]
  44e4f4:	cmp	x1, #0xff
  44e4f8:	b.ne	44a0ac <ferror@plt+0x4782c>  // b.any
  44e4fc:	ldp	x3, x2, [x19, #272]
  44e500:	strb	wzr, [x19, #255]
  44e504:	mov	x0, x19
  44e508:	blr	x3
  44e50c:	ldr	x1, [x19, #320]
  44e510:	mov	x0, #0x1                   	// #1
  44e514:	mov	w2, #0x65                  	// #101
  44e518:	strb	w2, [x19]
  44e51c:	add	x1, x1, x0
  44e520:	str	x1, [x19, #320]
  44e524:	add	x1, x0, #0x1
  44e528:	b	44a0f0 <ferror@plt+0x47870>
  44e52c:	add	x3, x0, #0x2
  44e530:	str	x3, [x19, #256]
  44e534:	mov	w2, #0x5b                  	// #91
  44e538:	strb	w2, [x19, x1]
  44e53c:	strb	w2, [x19, #264]
  44e540:	cmp	x3, #0xff
  44e544:	b.ne	44eb88 <ferror@plt+0x4c308>  // b.any
  44e548:	ldp	x4, x2, [x19, #272]
  44e54c:	strb	wzr, [x19, #255]
  44e550:	mov	x1, x3
  44e554:	mov	x0, x19
  44e558:	blr	x4
  44e55c:	ldr	x1, [x19, #320]
  44e560:	mov	w3, #0x6c63                	// #27747
  44e564:	mov	w2, #0x6f                  	// #111
  44e568:	mov	x0, #0x3                   	// #3
  44e56c:	add	x1, x1, #0x1
  44e570:	strh	w3, [x19]
  44e574:	strb	w2, [x19, #2]
  44e578:	str	x1, [x19, #320]
  44e57c:	add	x3, x0, #0x1
  44e580:	str	x3, [x19, #256]
  44e584:	mov	w1, #0x6e                  	// #110
  44e588:	strb	w1, [x19, x0]
  44e58c:	strb	w1, [x19, #264]
  44e590:	cmp	x3, #0xff
  44e594:	b.ne	44ebd8 <ferror@plt+0x4c358>  // b.any
  44e598:	ldp	x4, x2, [x19, #272]
  44e59c:	strb	wzr, [x19, #255]
  44e5a0:	mov	x1, x3
  44e5a4:	mov	x0, x19
  44e5a8:	blr	x4
  44e5ac:	ldr	x0, [x19, #320]
  44e5b0:	mov	w2, #0x65                  	// #101
  44e5b4:	mov	x1, #0x1                   	// #1
  44e5b8:	strb	w2, [x19]
  44e5bc:	add	x0, x0, x1
  44e5c0:	str	x0, [x19, #320]
  44e5c4:	b	44b468 <ferror@plt+0x48be8>
  44e5c8:	add	x3, x1, #0x2
  44e5cc:	str	x3, [x19, #256]
  44e5d0:	mov	w2, #0x69                  	// #105
  44e5d4:	strb	w2, [x19, x0]
  44e5d8:	strb	w2, [x19, #264]
  44e5dc:	cmp	x3, #0xff
  44e5e0:	b.ne	44fd24 <ferror@plt+0x4d4a4>  // b.any
  44e5e4:	ldp	x4, x2, [x19, #272]
  44e5e8:	strb	wzr, [x19, #255]
  44e5ec:	mov	x1, x3
  44e5f0:	mov	x0, x19
  44e5f4:	blr	x4
  44e5f8:	ldr	x0, [x19, #320]
  44e5fc:	mov	w2, #0x6e                  	// #110
  44e600:	mov	x1, #0x1                   	// #1
  44e604:	strb	w2, [x19]
  44e608:	add	x0, x0, x1
  44e60c:	str	x0, [x19, #320]
  44e610:	b	44c634 <ferror@plt+0x49db4>
  44e614:	ldp	x3, x2, [x19, #272]
  44e618:	strb	wzr, [x19, #255]
  44e61c:	mov	x1, x0
  44e620:	mov	x0, x19
  44e624:	blr	x3
  44e628:	ldr	x1, [x19, #320]
  44e62c:	mov	w3, #0x616a                	// #24938
  44e630:	mov	w2, #0x76                  	// #118
  44e634:	mov	x0, #0x3                   	// #3
  44e638:	add	x1, x1, #0x1
  44e63c:	strh	w3, [x19]
  44e640:	strb	w2, [x19, #2]
  44e644:	str	x1, [x19, #320]
  44e648:	add	x3, x0, #0x1
  44e64c:	str	x3, [x19, #256]
  44e650:	mov	w1, #0x61                  	// #97
  44e654:	strb	w1, [x19, x0]
  44e658:	strb	w1, [x19, #264]
  44e65c:	cmp	x3, #0xff
  44e660:	b.ne	44a284 <ferror@plt+0x47a04>  // b.any
  44e664:	ldp	x4, x2, [x19, #272]
  44e668:	strb	wzr, [x19, #255]
  44e66c:	mov	x1, x3
  44e670:	mov	x0, x19
  44e674:	blr	x4
  44e678:	ldr	x0, [x19, #320]
  44e67c:	mov	w3, #0x4320                	// #17184
  44e680:	mov	w2, #0x6c                  	// #108
  44e684:	mov	x1, #0x3                   	// #3
  44e688:	add	x0, x0, #0x1
  44e68c:	strh	w3, [x19]
  44e690:	strb	w2, [x19, #2]
  44e694:	str	x0, [x19, #320]
  44e698:	add	x0, x1, #0x1
  44e69c:	str	x0, [x19, #256]
  44e6a0:	mov	w2, #0x61                  	// #97
  44e6a4:	strb	w2, [x19, x1]
  44e6a8:	strb	w2, [x19, #264]
  44e6ac:	cmp	x0, #0xff
  44e6b0:	b.ne	44a2d0 <ferror@plt+0x47a50>  // b.any
  44e6b4:	ldp	x3, x2, [x19, #272]
  44e6b8:	strb	wzr, [x19, #255]
  44e6bc:	mov	x1, x0
  44e6c0:	mov	x0, x19
  44e6c4:	blr	x3
  44e6c8:	ldr	x0, [x19, #320]
  44e6cc:	mov	w3, #0x7373                	// #29555
  44e6d0:	mov	w2, #0x20                  	// #32
  44e6d4:	mov	x1, #0x3                   	// #3
  44e6d8:	add	x0, x0, #0x1
  44e6dc:	strh	w3, [x19]
  44e6e0:	strb	w2, [x19, #2]
  44e6e4:	str	x0, [x19, #320]
  44e6e8:	add	x0, x1, #0x1
  44e6ec:	str	x0, [x19, #256]
  44e6f0:	mov	w2, #0x66                  	// #102
  44e6f4:	strb	w2, [x19, x1]
  44e6f8:	strb	w2, [x19, #264]
  44e6fc:	cmp	x0, #0xff
  44e700:	b.ne	44a31c <ferror@plt+0x47a9c>  // b.any
  44e704:	ldp	x3, x2, [x19, #272]
  44e708:	strb	wzr, [x19, #255]
  44e70c:	mov	x1, x0
  44e710:	mov	x0, x19
  44e714:	blr	x3
  44e718:	ldr	x0, [x19, #320]
  44e71c:	mov	w2, #0x6f                  	// #111
  44e720:	mov	x1, #0x1                   	// #1
  44e724:	strb	w2, [x19]
  44e728:	add	x0, x0, x1
  44e72c:	str	x0, [x19, #320]
  44e730:	b	44defc <ferror@plt+0x4b67c>
  44e734:	add	x0, x1, #0x3
  44e738:	str	x0, [x19, #256]
  44e73c:	mov	w1, #0x6f                  	// #111
  44e740:	strb	w1, [x19, x3]
  44e744:	strb	w1, [x19, #264]
  44e748:	cmp	x0, #0xff
  44e74c:	b.ne	44f820 <ferror@plt+0x4cfa0>  // b.any
  44e750:	ldp	x3, x2, [x19, #272]
  44e754:	strb	wzr, [x19, #255]
  44e758:	mov	x1, x0
  44e75c:	mov	x0, x19
  44e760:	blr	x3
  44e764:	ldr	x0, [x19, #320]
  44e768:	mov	w2, #0x72                  	// #114
  44e76c:	mov	x1, #0x1                   	// #1
  44e770:	strb	w2, [x19]
  44e774:	add	x0, x0, x1
  44e778:	str	x0, [x19, #320]
  44e77c:	b	44cd1c <ferror@plt+0x4a49c>
  44e780:	add	x0, x0, #0x3
  44e784:	str	x0, [x19, #256]
  44e788:	mov	w1, #0x62                  	// #98
  44e78c:	strb	w1, [x19, x3]
  44e790:	strb	w1, [x19, #264]
  44e794:	cmp	x0, #0xff
  44e798:	b.ne	44fbb4 <ferror@plt+0x4d334>  // b.any
  44e79c:	ldp	x3, x2, [x19, #272]
  44e7a0:	strb	wzr, [x19, #255]
  44e7a4:	mov	x1, x0
  44e7a8:	mov	x0, x19
  44e7ac:	blr	x3
  44e7b0:	ldr	x0, [x19, #320]
  44e7b4:	mov	w2, #0x69                  	// #105
  44e7b8:	mov	x1, #0x1                   	// #1
  44e7bc:	strb	w2, [x19]
  44e7c0:	add	x0, x0, x1
  44e7c4:	str	x0, [x19, #320]
  44e7c8:	b	449c10 <ferror@plt+0x47390>
  44e7cc:	ldp	x3, x2, [x19, #272]
  44e7d0:	strb	wzr, [x19, #255]
  44e7d4:	mov	x1, x0
  44e7d8:	mov	x0, x19
  44e7dc:	blr	x3
  44e7e0:	ldr	x1, [x19, #320]
  44e7e4:	mov	w3, #0x7476                	// #29814
  44e7e8:	mov	w2, #0x61                  	// #97
  44e7ec:	mov	x0, #0x3                   	// #3
  44e7f0:	add	x1, x1, #0x1
  44e7f4:	strh	w3, [x19]
  44e7f8:	strb	w2, [x19, #2]
  44e7fc:	str	x1, [x19, #320]
  44e800:	add	x3, x0, #0x1
  44e804:	str	x3, [x19, #256]
  44e808:	mov	w1, #0x62                  	// #98
  44e80c:	strb	w1, [x19, x0]
  44e810:	strb	w1, [x19, #264]
  44e814:	cmp	x3, #0xff
  44e818:	b.ne	44bd10 <ferror@plt+0x49490>  // b.any
  44e81c:	ldp	x4, x2, [x19, #272]
  44e820:	strb	wzr, [x19, #255]
  44e824:	mov	x1, x3
  44e828:	mov	x0, x19
  44e82c:	blr	x4
  44e830:	ldr	x0, [x19, #320]
  44e834:	mov	w3, #0x656c                	// #25964
  44e838:	mov	w2, #0x20                  	// #32
  44e83c:	mov	x1, #0x3                   	// #3
  44e840:	add	x0, x0, #0x1
  44e844:	strh	w3, [x19]
  44e848:	strb	w2, [x19, #2]
  44e84c:	str	x0, [x19, #320]
  44e850:	add	x0, x1, #0x1
  44e854:	str	x0, [x19, #256]
  44e858:	mov	w2, #0x66                  	// #102
  44e85c:	strb	w2, [x19, x1]
  44e860:	strb	w2, [x19, #264]
  44e864:	cmp	x0, #0xff
  44e868:	b.ne	44bd5c <ferror@plt+0x494dc>  // b.any
  44e86c:	ldp	x3, x2, [x19, #272]
  44e870:	strb	wzr, [x19, #255]
  44e874:	mov	x1, x0
  44e878:	mov	x0, x19
  44e87c:	blr	x3
  44e880:	ldr	x0, [x19, #320]
  44e884:	mov	w2, #0x6f                  	// #111
  44e888:	mov	x1, #0x1                   	// #1
  44e88c:	strb	w2, [x19]
  44e890:	add	x0, x0, x1
  44e894:	str	x0, [x19, #320]
  44e898:	b	44e088 <ferror@plt+0x4b808>
  44e89c:	add	x3, x0, #0x2
  44e8a0:	str	x3, [x19, #256]
  44e8a4:	mov	w2, #0x70                  	// #112
  44e8a8:	strb	w2, [x19, x1]
  44e8ac:	strb	w2, [x19, #264]
  44e8b0:	cmp	x3, #0xff
  44e8b4:	b.ne	44eeb8 <ferror@plt+0x4c638>  // b.any
  44e8b8:	ldp	x4, x2, [x19, #272]
  44e8bc:	strb	wzr, [x19, #255]
  44e8c0:	mov	x1, x3
  44e8c4:	mov	x0, x19
  44e8c8:	blr	x4
  44e8cc:	ldr	x0, [x19, #320]
  44e8d0:	mov	w3, #0x7265                	// #29285
  44e8d4:	mov	w2, #0x61                  	// #97
  44e8d8:	mov	x1, #0x3                   	// #3
  44e8dc:	add	x0, x0, #0x1
  44e8e0:	strh	w3, [x19]
  44e8e4:	strb	w2, [x19, #2]
  44e8e8:	str	x0, [x19, #320]
  44e8ec:	add	x0, x1, #0x1
  44e8f0:	str	x0, [x19, #256]
  44e8f4:	mov	w2, #0x74                  	// #116
  44e8f8:	strb	w2, [x19, x1]
  44e8fc:	strb	w2, [x19, #264]
  44e900:	cmp	x0, #0xff
  44e904:	b.ne	44ef08 <ferror@plt+0x4c688>  // b.any
  44e908:	ldp	x3, x2, [x19, #272]
  44e90c:	strb	wzr, [x19, #255]
  44e910:	mov	x1, x0
  44e914:	mov	x0, x19
  44e918:	blr	x3
  44e91c:	ldr	x0, [x19, #320]
  44e920:	mov	w2, #0x6f                  	// #111
  44e924:	mov	x1, #0x1                   	// #1
  44e928:	strb	w2, [x19]
  44e92c:	add	x0, x0, x1
  44e930:	str	x0, [x19, #320]
  44e934:	b	4494c0 <ferror@plt+0x46c40>
  44e938:	add	x0, x0, #0x3
  44e93c:	str	x0, [x19, #256]
  44e940:	mov	w1, #0x65                  	// #101
  44e944:	strb	w1, [x19, x3]
  44e948:	strb	w1, [x19, #264]
  44e94c:	cmp	x0, #0xff
  44e950:	b.ne	44f518 <ferror@plt+0x4cc98>  // b.any
  44e954:	ldp	x3, x2, [x19, #272]
  44e958:	strb	wzr, [x19, #255]
  44e95c:	mov	x1, x0
  44e960:	mov	x0, x19
  44e964:	blr	x3
  44e968:	ldr	x1, [x19, #320]
  44e96c:	mov	w3, #0x6172                	// #24946
  44e970:	mov	w2, #0x74                  	// #116
  44e974:	mov	x0, #0x3                   	// #3
  44e978:	add	x1, x1, #0x1
  44e97c:	strh	w3, [x19]
  44e980:	strb	w2, [x19, #2]
  44e984:	str	x1, [x19, #320]
  44e988:	add	x1, x0, #0x1
  44e98c:	str	x1, [x19, #256]
  44e990:	mov	w2, #0x6f                  	// #111
  44e994:	strb	w2, [x19, x0]
  44e998:	strb	w2, [x19, #264]
  44e99c:	cmp	x1, #0xff
  44e9a0:	b.ne	44f568 <ferror@plt+0x4cce8>  // b.any
  44e9a4:	ldp	x3, x2, [x19, #272]
  44e9a8:	strb	wzr, [x19, #255]
  44e9ac:	mov	x0, x19
  44e9b0:	blr	x3
  44e9b4:	ldr	x1, [x19, #320]
  44e9b8:	mov	w2, #0x72                  	// #114
  44e9bc:	mov	x0, #0x1                   	// #1
  44e9c0:	strb	w2, [x19]
  44e9c4:	add	x1, x1, x0
  44e9c8:	str	x1, [x19, #320]
  44e9cc:	b	44b2bc <ferror@plt+0x48a3c>
  44e9d0:	add	x3, x0, #0x2
  44e9d4:	str	x3, [x19, #256]
  44e9d8:	mov	w2, #0x65                  	// #101
  44e9dc:	strb	w2, [x19, x1]
  44e9e0:	strb	w2, [x19, #264]
  44e9e4:	cmp	x3, #0xff
  44e9e8:	b.ne	44f220 <ferror@plt+0x4c9a0>  // b.any
  44e9ec:	ldp	x4, x2, [x19, #272]
  44e9f0:	strb	wzr, [x19, #255]
  44e9f4:	mov	x1, x3
  44e9f8:	mov	x0, x19
  44e9fc:	blr	x4
  44ea00:	ldr	x1, [x19, #320]
  44ea04:	mov	w3, #0x6c63                	// #27747
  44ea08:	mov	w2, #0x74                  	// #116
  44ea0c:	mov	x0, #0x3                   	// #3
  44ea10:	add	x1, x1, #0x1
  44ea14:	strh	w3, [x19]
  44ea18:	strb	w2, [x19, #2]
  44ea1c:	str	x1, [x19, #320]
  44ea20:	add	x1, x0, #0x1
  44ea24:	str	x1, [x19, #256]
  44ea28:	mov	w2, #0x79                  	// #121
  44ea2c:	strb	w2, [x19, x0]
  44ea30:	strb	w2, [x19, #264]
  44ea34:	cmp	x1, #0xff
  44ea38:	b.ne	44f270 <ferror@plt+0x4c9f0>  // b.any
  44ea3c:	ldp	x3, x2, [x19, #272]
  44ea40:	strb	wzr, [x19, #255]
  44ea44:	mov	x0, x19
  44ea48:	blr	x3
  44ea4c:	ldr	x0, [x19, #320]
  44ea50:	mov	w1, #0x6570                	// #25968
  44ea54:	mov	x2, #0x2                   	// #2
  44ea58:	strh	w1, [x19]
  44ea5c:	add	x0, x0, #0x1
  44ea60:	str	x0, [x19, #320]
  44ea64:	mov	w0, #0x20                  	// #32
  44ea68:	add	x1, x2, #0x1
  44ea6c:	strb	w0, [x19, x2]
  44ea70:	add	x0, x1, #0x1
  44ea74:	b	44ba9c <ferror@plt+0x4921c>
  44ea78:	add	x0, x0, #0x3
  44ea7c:	str	x0, [x19, #256]
  44ea80:	strb	w2, [x19, x3]
  44ea84:	cmp	x0, #0xff
  44ea88:	strb	w2, [x19, #264]
  44ea8c:	b.ne	44eb40 <ferror@plt+0x4c2c0>  // b.any
  44ea90:	ldp	x3, x2, [x19, #272]
  44ea94:	strb	wzr, [x19, #255]
  44ea98:	mov	x1, x0
  44ea9c:	mov	x0, x19
  44eaa0:	blr	x3
  44eaa4:	ldr	x0, [x19, #320]
  44eaa8:	mov	w3, #0x6620                	// #26144
  44eaac:	mov	w2, #0x6f                  	// #111
  44eab0:	mov	x1, #0x3                   	// #3
  44eab4:	add	x0, x0, #0x1
  44eab8:	strh	w3, [x19]
  44eabc:	strb	w2, [x19, #2]
  44eac0:	str	x0, [x19, #320]
  44eac4:	add	x0, x1, #0x1
  44eac8:	str	x0, [x19, #256]
  44eacc:	mov	w2, #0x72                  	// #114
  44ead0:	strb	w2, [x19, x1]
  44ead4:	strb	w2, [x19, #264]
  44ead8:	cmp	x0, #0xff
  44eadc:	b.ne	44a850 <ferror@plt+0x47fd0>  // b.any
  44eae0:	ldp	x3, x2, [x19, #272]
  44eae4:	strb	wzr, [x19, #255]
  44eae8:	mov	x1, x0
  44eaec:	mov	x0, x19
  44eaf0:	blr	x3
  44eaf4:	ldr	x2, [x19, #320]
  44eaf8:	mov	x1, #0x1                   	// #1
  44eafc:	mov	x0, #0x0                   	// #0
  44eb00:	add	x2, x2, x1
  44eb04:	str	x2, [x19, #320]
  44eb08:	b	44a854 <ferror@plt+0x47fd4>
  44eb0c:	ldp	x3, x2, [x19, #272]
  44eb10:	strb	wzr, [x19, #255]
  44eb14:	mov	x1, x0
  44eb18:	mov	x0, x19
  44eb1c:	blr	x3
  44eb20:	ldr	x1, [x19, #320]
  44eb24:	mov	w3, #0x5456                	// #21590
  44eb28:	mov	w2, #0x54                  	// #84
  44eb2c:	mov	x0, #0x3                   	// #3
  44eb30:	add	x1, x1, #0x1
  44eb34:	strh	w3, [x19]
  44eb38:	strb	w2, [x19, #2]
  44eb3c:	str	x1, [x19, #320]
  44eb40:	add	x1, x0, #0x1
  44eb44:	str	x1, [x19, #256]
  44eb48:	mov	w2, #0x20                  	// #32
  44eb4c:	strb	w2, [x19, x0]
  44eb50:	strb	w2, [x19, #264]
  44eb54:	cmp	x1, #0xff
  44eb58:	b.ne	44a7fc <ferror@plt+0x47f7c>  // b.any
  44eb5c:	ldp	x3, x2, [x19, #272]
  44eb60:	strb	wzr, [x19, #255]
  44eb64:	mov	x0, x19
  44eb68:	blr	x3
  44eb6c:	ldr	x0, [x19, #320]
  44eb70:	mov	w2, #0x6f66                	// #28518
  44eb74:	mov	x1, #0x2                   	// #2
  44eb78:	strh	w2, [x19]
  44eb7c:	add	x0, x0, #0x1
  44eb80:	str	x0, [x19, #320]
  44eb84:	b	44a844 <ferror@plt+0x47fc4>
  44eb88:	add	x0, x0, #0x3
  44eb8c:	str	x0, [x19, #256]
  44eb90:	mov	w1, #0x63                  	// #99
  44eb94:	strb	w1, [x19, x3]
  44eb98:	strb	w1, [x19, #264]
  44eb9c:	cmp	x0, #0xff
  44eba0:	b.ne	44ec50 <ferror@plt+0x4c3d0>  // b.any
  44eba4:	ldp	x3, x2, [x19, #272]
  44eba8:	strb	wzr, [x19, #255]
  44ebac:	mov	x1, x0
  44ebb0:	mov	x0, x19
  44ebb4:	blr	x3
  44ebb8:	ldr	x0, [x19, #320]
  44ebbc:	mov	w2, #0x6f6c                	// #28524
  44ebc0:	mov	w1, #0x6e                  	// #110
  44ebc4:	mov	x3, #0x3                   	// #3
  44ebc8:	add	x0, x0, #0x1
  44ebcc:	strh	w2, [x19]
  44ebd0:	strb	w1, [x19, #2]
  44ebd4:	str	x0, [x19, #320]
  44ebd8:	add	x1, x3, #0x1
  44ebdc:	str	x1, [x19, #256]
  44ebe0:	mov	w0, #0x65                  	// #101
  44ebe4:	strb	w0, [x19, x3]
  44ebe8:	strb	w0, [x19, #264]
  44ebec:	cmp	x1, #0xff
  44ebf0:	b.ne	44b468 <ferror@plt+0x48be8>  // b.any
  44ebf4:	ldp	x3, x2, [x19, #272]
  44ebf8:	strb	wzr, [x19, #255]
  44ebfc:	mov	x0, x19
  44ec00:	blr	x3
  44ec04:	ldr	x2, [x19, #320]
  44ec08:	mov	x0, #0x1                   	// #1
  44ec0c:	mov	x1, #0x0                   	// #0
  44ec10:	add	x2, x2, x0
  44ec14:	str	x2, [x19, #320]
  44ec18:	b	44b46c <ferror@plt+0x48bec>
  44ec1c:	ldp	x3, x2, [x19, #272]
  44ec20:	strb	wzr, [x19, #255]
  44ec24:	mov	x1, x0
  44ec28:	mov	x0, x19
  44ec2c:	blr	x3
  44ec30:	ldr	x1, [x19, #320]
  44ec34:	mov	w3, #0x5b20                	// #23328
  44ec38:	mov	w2, #0x63                  	// #99
  44ec3c:	mov	x0, #0x3                   	// #3
  44ec40:	add	x1, x1, #0x1
  44ec44:	strh	w3, [x19]
  44ec48:	strb	w2, [x19, #2]
  44ec4c:	str	x1, [x19, #320]
  44ec50:	add	x1, x0, #0x1
  44ec54:	str	x1, [x19, #256]
  44ec58:	mov	w2, #0x6c                  	// #108
  44ec5c:	strb	w2, [x19, x0]
  44ec60:	strb	w2, [x19, #264]
  44ec64:	cmp	x1, #0xff
  44ec68:	b.ne	44b414 <ferror@plt+0x48b94>  // b.any
  44ec6c:	ldp	x3, x2, [x19, #272]
  44ec70:	strb	wzr, [x19, #255]
  44ec74:	mov	x0, x19
  44ec78:	blr	x3
  44ec7c:	ldr	x0, [x19, #320]
  44ec80:	mov	w1, #0x6e6f                	// #28271
  44ec84:	mov	x2, #0x2                   	// #2
  44ec88:	strh	w1, [x19]
  44ec8c:	add	x0, x0, #0x1
  44ec90:	str	x0, [x19, #320]
  44ec94:	b	44b45c <ferror@plt+0x48bdc>
  44ec98:	add	x0, x0, #0x3
  44ec9c:	str	x0, [x19, #256]
  44eca0:	mov	w1, #0x70                  	// #112
  44eca4:	strb	w1, [x19, x3]
  44eca8:	strb	w1, [x19, #264]
  44ecac:	cmp	x0, #0xff
  44ecb0:	b.ne	44f400 <ferror@plt+0x4cb80>  // b.any
  44ecb4:	ldp	x3, x2, [x19, #272]
  44ecb8:	strb	wzr, [x19, #255]
  44ecbc:	mov	x1, x0
  44ecc0:	mov	x0, x19
  44ecc4:	blr	x3
  44ecc8:	ldr	x1, [x19, #320]
  44eccc:	mov	w3, #0x6965                	// #26981
  44ecd0:	mov	w2, #0x6e                  	// #110
  44ecd4:	mov	x0, #0x3                   	// #3
  44ecd8:	add	x1, x1, #0x1
  44ecdc:	strh	w3, [x19]
  44ece0:	strb	w2, [x19, #2]
  44ece4:	str	x1, [x19, #320]
  44ece8:	add	x1, x0, #0x1
  44ecec:	str	x1, [x19, #256]
  44ecf0:	mov	w20, #0x66                  	// #102
  44ecf4:	strb	w20, [x19, x0]
  44ecf8:	strb	w20, [x19, #264]
  44ecfc:	cmp	x1, #0xff
  44ed00:	b.ne	44f450 <ferror@plt+0x4cbd0>  // b.any
  44ed04:	ldp	x3, x2, [x19, #272]
  44ed08:	strb	wzr, [x19, #255]
  44ed0c:	mov	x0, x19
  44ed10:	blr	x3
  44ed14:	strb	w20, [x19, #2]
  44ed18:	ldr	x1, [x19, #320]
  44ed1c:	mov	w2, #0x206f                	// #8303
  44ed20:	mov	x0, #0x3                   	// #3
  44ed24:	strh	w2, [x19]
  44ed28:	add	x1, x1, #0x1
  44ed2c:	str	x1, [x19, #320]
  44ed30:	add	x1, x0, #0x1
  44ed34:	str	x1, [x19, #256]
  44ed38:	mov	w2, #0x6f                  	// #111
  44ed3c:	strb	w2, [x19, x0]
  44ed40:	strb	w2, [x19, #264]
  44ed44:	cmp	x1, #0xff
  44ed48:	b.ne	44f49c <ferror@plt+0x4cc1c>  // b.any
  44ed4c:	ldp	x3, x2, [x19, #272]
  44ed50:	strb	wzr, [x19, #255]
  44ed54:	mov	x0, x19
  44ed58:	blr	x3
  44ed5c:	ldr	x1, [x19, #320]
  44ed60:	mov	w2, #0x72                  	// #114
  44ed64:	mov	x0, #0x1                   	// #1
  44ed68:	strb	w2, [x19]
  44ed6c:	add	x1, x1, x0
  44ed70:	str	x1, [x19, #320]
  44ed74:	b	44bf24 <ferror@plt+0x496a4>
  44ed78:	add	x0, x0, #0x3
  44ed7c:	str	x0, [x19, #256]
  44ed80:	mov	w1, #0x65                  	// #101
  44ed84:	strb	w1, [x19, x3]
  44ed88:	strb	w1, [x19, #264]
  44ed8c:	cmp	x0, #0xff
  44ed90:	b.ne	44ee70 <ferror@plt+0x4c5f0>  // b.any
  44ed94:	ldp	x3, x2, [x19, #272]
  44ed98:	strb	wzr, [x19, #255]
  44ed9c:	mov	x1, x0
  44eda0:	mov	x0, x19
  44eda4:	blr	x3
  44eda8:	ldr	x0, [x19, #320]
  44edac:	mov	w3, #0x6172                	// #24946
  44edb0:	mov	w2, #0x74                  	// #116
  44edb4:	mov	x1, #0x3                   	// #3
  44edb8:	add	x0, x0, #0x1
  44edbc:	strh	w3, [x19]
  44edc0:	strb	w2, [x19, #2]
  44edc4:	str	x0, [x19, #320]
  44edc8:	add	x0, x1, #0x1
  44edcc:	str	x0, [x19, #256]
  44edd0:	mov	w2, #0x6f                  	// #111
  44edd4:	strb	w2, [x19, x1]
  44edd8:	strb	w2, [x19, #264]
  44eddc:	cmp	x0, #0xff
  44ede0:	b.ne	44b110 <ferror@plt+0x48890>  // b.any
  44ede4:	ldp	x3, x2, [x19, #272]
  44ede8:	strb	wzr, [x19, #255]
  44edec:	mov	x1, x0
  44edf0:	mov	x0, x19
  44edf4:	blr	x3
  44edf8:	mov	w0, #0x72                  	// #114
  44edfc:	strb	w0, [x19]
  44ee00:	strb	w0, [x19, #264]
  44ee04:	mov	x1, #0x1                   	// #1
  44ee08:	ldr	x2, [x19, #320]
  44ee0c:	mov	x0, x1
  44ee10:	ldr	x20, [x22, #8]
  44ee14:	add	x2, x2, x1
  44ee18:	str	x1, [x19, #256]
  44ee1c:	str	x2, [x19, #320]
  44ee20:	ldrb	w2, [x20]
  44ee24:	sub	w2, w2, #0x61
  44ee28:	and	w2, w2, #0xff
  44ee2c:	cmp	w2, #0x19
  44ee30:	b.hi	44b17c <ferror@plt+0x488fc>  // b.pmore
  44ee34:	add	x1, x0, #0x1
  44ee38:	b	44b16c <ferror@plt+0x488ec>
  44ee3c:	ldp	x3, x2, [x19, #272]
  44ee40:	strb	wzr, [x19, #255]
  44ee44:	mov	x1, x0
  44ee48:	mov	x0, x19
  44ee4c:	blr	x3
  44ee50:	ldr	x1, [x19, #320]
  44ee54:	mov	w3, #0x706f                	// #28783
  44ee58:	mov	w2, #0x65                  	// #101
  44ee5c:	mov	x0, #0x3                   	// #3
  44ee60:	add	x1, x1, #0x1
  44ee64:	strh	w3, [x19]
  44ee68:	strb	w2, [x19, #2]
  44ee6c:	str	x1, [x19, #320]
  44ee70:	add	x1, x0, #0x1
  44ee74:	str	x1, [x19, #256]
  44ee78:	mov	w2, #0x72                  	// #114
  44ee7c:	strb	w2, [x19, x0]
  44ee80:	strb	w2, [x19, #264]
  44ee84:	cmp	x1, #0xff
  44ee88:	b.ne	44b0bc <ferror@plt+0x4883c>  // b.any
  44ee8c:	ldp	x3, x2, [x19, #272]
  44ee90:	strb	wzr, [x19, #255]
  44ee94:	mov	x0, x19
  44ee98:	blr	x3
  44ee9c:	ldr	x0, [x19, #320]
  44eea0:	mov	w2, #0x7461                	// #29793
  44eea4:	mov	x1, #0x2                   	// #2
  44eea8:	strh	w2, [x19]
  44eeac:	add	x0, x0, #0x1
  44eeb0:	str	x0, [x19, #320]
  44eeb4:	b	44b104 <ferror@plt+0x48884>
  44eeb8:	add	x0, x0, #0x3
  44eebc:	str	x0, [x19, #256]
  44eec0:	mov	w1, #0x65                  	// #101
  44eec4:	strb	w1, [x19, x3]
  44eec8:	strb	w1, [x19, #264]
  44eecc:	cmp	x0, #0xff
  44eed0:	b.ne	44ef84 <ferror@plt+0x4c704>  // b.any
  44eed4:	ldp	x3, x2, [x19, #272]
  44eed8:	strb	wzr, [x19, #255]
  44eedc:	mov	x1, x0
  44eee0:	mov	x0, x19
  44eee4:	blr	x3
  44eee8:	ldr	x1, [x19, #320]
  44eeec:	mov	w3, #0x6172                	// #24946
  44eef0:	mov	w2, #0x74                  	// #116
  44eef4:	mov	x0, #0x3                   	// #3
  44eef8:	add	x1, x1, #0x1
  44eefc:	strh	w3, [x19]
  44ef00:	strb	w2, [x19, #2]
  44ef04:	str	x1, [x19, #320]
  44ef08:	add	x1, x0, #0x1
  44ef0c:	str	x1, [x19, #256]
  44ef10:	mov	w2, #0x6f                  	// #111
  44ef14:	strb	w2, [x19, x0]
  44ef18:	strb	w2, [x19, #264]
  44ef1c:	cmp	x1, #0xff
  44ef20:	b.ne	44efd4 <ferror@plt+0x4c754>  // b.any
  44ef24:	ldp	x3, x2, [x19, #272]
  44ef28:	strb	wzr, [x19, #255]
  44ef2c:	mov	x0, x19
  44ef30:	blr	x3
  44ef34:	ldr	x1, [x19, #320]
  44ef38:	mov	w2, #0x72                  	// #114
  44ef3c:	mov	x0, #0x1                   	// #1
  44ef40:	strb	w2, [x19]
  44ef44:	add	x1, x1, x0
  44ef48:	str	x1, [x19, #320]
  44ef4c:	b	4494cc <ferror@plt+0x46c4c>
  44ef50:	ldp	x3, x2, [x19, #272]
  44ef54:	strb	wzr, [x19, #255]
  44ef58:	mov	x1, x0
  44ef5c:	mov	x0, x19
  44ef60:	blr	x3
  44ef64:	ldr	x1, [x19, #320]
  44ef68:	mov	w3, #0x706f                	// #28783
  44ef6c:	mov	w2, #0x65                  	// #101
  44ef70:	mov	x0, #0x3                   	// #3
  44ef74:	add	x1, x1, #0x1
  44ef78:	strh	w3, [x19]
  44ef7c:	strb	w2, [x19, #2]
  44ef80:	str	x1, [x19, #320]
  44ef84:	add	x3, x0, #0x1
  44ef88:	str	x3, [x19, #256]
  44ef8c:	mov	w1, #0x72                  	// #114
  44ef90:	strb	w1, [x19, x0]
  44ef94:	strb	w1, [x19, #264]
  44ef98:	cmp	x3, #0xff
  44ef9c:	b.ne	44947c <ferror@plt+0x46bfc>  // b.any
  44efa0:	ldp	x4, x2, [x19, #272]
  44efa4:	strb	wzr, [x19, #255]
  44efa8:	mov	x1, x3
  44efac:	mov	x0, x19
  44efb0:	blr	x4
  44efb4:	ldr	x0, [x19, #320]
  44efb8:	mov	w3, #0x7461                	// #29793
  44efbc:	mov	w2, #0x6f                  	// #111
  44efc0:	mov	x1, #0x3                   	// #3
  44efc4:	add	x0, x0, #0x1
  44efc8:	strh	w3, [x19]
  44efcc:	strb	w2, [x19, #2]
  44efd0:	str	x0, [x19, #320]
  44efd4:	add	x0, x1, #0x1
  44efd8:	str	x0, [x19, #256]
  44efdc:	mov	w2, #0x72                  	// #114
  44efe0:	strb	w2, [x19, x1]
  44efe4:	strb	w2, [x19, #264]
  44efe8:	cmp	x0, #0xff
  44efec:	b.ne	4494cc <ferror@plt+0x46c4c>  // b.any
  44eff0:	ldp	x3, x2, [x19, #272]
  44eff4:	strb	wzr, [x19, #255]
  44eff8:	mov	x1, x0
  44effc:	mov	x0, x19
  44f000:	blr	x3
  44f004:	ldr	x1, [x19, #320]
  44f008:	mov	x3, #0x1                   	// #1
  44f00c:	mov	x0, #0x0                   	// #0
  44f010:	add	x1, x1, x3
  44f014:	str	x1, [x19, #320]
  44f018:	b	4494d0 <ferror@plt+0x46c50>
  44f01c:	add	x0, x0, #0x3
  44f020:	str	x0, [x19, #256]
  44f024:	mov	w1, #0x76                  	// #118
  44f028:	strb	w1, [x19, x3]
  44f02c:	strb	w1, [x19, #264]
  44f030:	cmp	x0, #0xff
  44f034:	b.ne	44f13c <ferror@plt+0x4c8bc>  // b.any
  44f038:	ldp	x3, x2, [x19, #272]
  44f03c:	strb	wzr, [x19, #255]
  44f040:	mov	x1, x0
  44f044:	mov	x0, x19
  44f048:	blr	x3
  44f04c:	ldr	x0, [x19, #320]
  44f050:	mov	w3, #0x2061                	// #8289
  44f054:	mov	w2, #0x72                  	// #114
  44f058:	mov	x1, #0x3                   	// #3
  44f05c:	add	x0, x0, #0x1
  44f060:	strh	w3, [x19]
  44f064:	strb	w2, [x19, #2]
  44f068:	str	x0, [x19, #320]
  44f06c:	add	x0, x1, #0x1
  44f070:	str	x0, [x19, #256]
  44f074:	mov	w2, #0x65                  	// #101
  44f078:	strb	w2, [x19, x1]
  44f07c:	strb	w2, [x19, #264]
  44f080:	cmp	x0, #0xff
  44f084:	b.ne	44f188 <ferror@plt+0x4c908>  // b.any
  44f088:	ldp	x3, x2, [x19, #272]
  44f08c:	strb	wzr, [x19, #255]
  44f090:	mov	x1, x0
  44f094:	mov	x0, x19
  44f098:	blr	x3
  44f09c:	ldr	x0, [x19, #320]
  44f0a0:	mov	w3, #0x6f73                	// #28531
  44f0a4:	mov	w2, #0x75                  	// #117
  44f0a8:	mov	x1, #0x3                   	// #3
  44f0ac:	add	x0, x0, #0x1
  44f0b0:	strh	w3, [x19]
  44f0b4:	strb	w2, [x19, #2]
  44f0b8:	str	x0, [x19, #320]
  44f0bc:	add	x0, x1, #0x1
  44f0c0:	str	x0, [x19, #256]
  44f0c4:	mov	w2, #0x72                  	// #114
  44f0c8:	strb	w2, [x19, x1]
  44f0cc:	strb	w2, [x19, #264]
  44f0d0:	cmp	x0, #0xff
  44f0d4:	b.ne	44f1d4 <ferror@plt+0x4c954>  // b.any
  44f0d8:	ldp	x3, x2, [x19, #272]
  44f0dc:	strb	wzr, [x19, #255]
  44f0e0:	mov	x1, x0
  44f0e4:	mov	x0, x19
  44f0e8:	blr	x3
  44f0ec:	ldr	x0, [x19, #320]
  44f0f0:	mov	w2, #0x63                  	// #99
  44f0f4:	mov	x1, #0x1                   	// #1
  44f0f8:	strb	w2, [x19]
  44f0fc:	add	x0, x0, x1
  44f100:	str	x0, [x19, #320]
  44f104:	b	44d61c <ferror@plt+0x4ad9c>
  44f108:	ldp	x3, x2, [x19, #272]
  44f10c:	strb	wzr, [x19, #255]
  44f110:	mov	x1, x0
  44f114:	mov	x0, x19
  44f118:	blr	x3
  44f11c:	ldr	x1, [x19, #320]
  44f120:	mov	w3, #0x616a                	// #24938
  44f124:	mov	w2, #0x76                  	// #118
  44f128:	mov	x0, #0x3                   	// #3
  44f12c:	add	x1, x1, #0x1
  44f130:	strh	w3, [x19]
  44f134:	strb	w2, [x19, #2]
  44f138:	str	x1, [x19, #320]
  44f13c:	add	x1, x0, #0x1
  44f140:	str	x1, [x19, #256]
  44f144:	mov	w2, #0x61                  	// #97
  44f148:	strb	w2, [x19, x0]
  44f14c:	strb	w2, [x19, #264]
  44f150:	cmp	x1, #0xff
  44f154:	b.ne	44a988 <ferror@plt+0x48108>  // b.any
  44f158:	ldp	x3, x2, [x19, #272]
  44f15c:	strb	wzr, [x19, #255]
  44f160:	mov	x0, x19
  44f164:	blr	x3
  44f168:	ldr	x1, [x19, #320]
  44f16c:	mov	w3, #0x7220                	// #29216
  44f170:	mov	w2, #0x65                  	// #101
  44f174:	mov	x0, #0x3                   	// #3
  44f178:	add	x1, x1, #0x1
  44f17c:	strh	w3, [x19]
  44f180:	strb	w2, [x19, #2]
  44f184:	str	x1, [x19, #320]
  44f188:	add	x1, x0, #0x1
  44f18c:	str	x1, [x19, #256]
  44f190:	mov	w2, #0x73                  	// #115
  44f194:	strb	w2, [x19, x0]
  44f198:	strb	w2, [x19, #264]
  44f19c:	cmp	x1, #0xff
  44f1a0:	b.ne	44a9d8 <ferror@plt+0x48158>  // b.any
  44f1a4:	ldp	x3, x2, [x19, #272]
  44f1a8:	strb	wzr, [x19, #255]
  44f1ac:	mov	x0, x19
  44f1b0:	blr	x3
  44f1b4:	ldr	x1, [x19, #320]
  44f1b8:	mov	w3, #0x756f                	// #30063
  44f1bc:	mov	w2, #0x72                  	// #114
  44f1c0:	mov	x0, #0x3                   	// #3
  44f1c4:	add	x1, x1, #0x1
  44f1c8:	strh	w3, [x19]
  44f1cc:	strb	w2, [x19, #2]
  44f1d0:	str	x1, [x19, #320]
  44f1d4:	add	x1, x0, #0x1
  44f1d8:	str	x1, [x19, #256]
  44f1dc:	mov	w2, #0x63                  	// #99
  44f1e0:	strb	w2, [x19, x0]
  44f1e4:	strb	w2, [x19, #264]
  44f1e8:	cmp	x1, #0xff
  44f1ec:	b.ne	44aa28 <ferror@plt+0x481a8>  // b.any
  44f1f0:	ldp	x3, x2, [x19, #272]
  44f1f4:	strb	wzr, [x19, #255]
  44f1f8:	mov	x0, x19
  44f1fc:	blr	x3
  44f200:	ldr	x1, [x19, #320]
  44f204:	mov	x0, #0x1                   	// #1
  44f208:	mov	w2, #0x65                  	// #101
  44f20c:	strb	w2, [x19]
  44f210:	add	x1, x1, x0
  44f214:	str	x1, [x19, #320]
  44f218:	add	x1, x0, #0x1
  44f21c:	b	44aa6c <ferror@plt+0x481ec>
  44f220:	add	x0, x0, #0x3
  44f224:	str	x0, [x19, #256]
  44f228:	mov	w1, #0x63                  	// #99
  44f22c:	strb	w1, [x19, x3]
  44f230:	strb	w1, [x19, #264]
  44f234:	cmp	x0, #0xff
  44f238:	b.ne	44d664 <ferror@plt+0x4ade4>  // b.any
  44f23c:	ldp	x3, x2, [x19, #272]
  44f240:	strb	wzr, [x19, #255]
  44f244:	mov	x1, x0
  44f248:	mov	x0, x19
  44f24c:	blr	x3
  44f250:	ldr	x0, [x19, #320]
  44f254:	mov	w3, #0x746c                	// #29804
  44f258:	mov	w2, #0x79                  	// #121
  44f25c:	mov	x1, #0x3                   	// #3
  44f260:	add	x0, x0, #0x1
  44f264:	strh	w3, [x19]
  44f268:	strb	w2, [x19, #2]
  44f26c:	str	x0, [x19, #320]
  44f270:	add	x0, x1, #0x1
  44f274:	str	x0, [x19, #256]
  44f278:	mov	w2, #0x70                  	// #112
  44f27c:	strb	w2, [x19, x1]
  44f280:	strb	w2, [x19, #264]
  44f284:	cmp	x0, #0xff
  44f288:	b.ne	44d6b0 <ferror@plt+0x4ae30>  // b.any
  44f28c:	ldp	x3, x2, [x19, #272]
  44f290:	strb	wzr, [x19, #255]
  44f294:	mov	x1, x0
  44f298:	mov	x0, x19
  44f29c:	blr	x3
  44f2a0:	ldr	x0, [x19, #320]
  44f2a4:	mov	w1, #0x65                  	// #101
  44f2a8:	mov	x2, #0x1                   	// #1
  44f2ac:	strb	w1, [x19]
  44f2b0:	add	x0, x0, x2
  44f2b4:	str	x0, [x19, #320]
  44f2b8:	b	44ea64 <ferror@plt+0x4c1e4>
  44f2bc:	add	x0, x0, #0x3
  44f2c0:	str	x0, [x19, #256]
  44f2c4:	mov	w1, #0x61                  	// #97
  44f2c8:	strb	w1, [x19, x3]
  44f2cc:	strb	w1, [x19, #264]
  44f2d0:	cmp	x0, #0xff
  44f2d4:	b.ne	44f384 <ferror@plt+0x4cb04>  // b.any
  44f2d8:	ldp	x3, x2, [x19, #272]
  44f2dc:	strb	wzr, [x19, #255]
  44f2e0:	mov	x1, x0
  44f2e4:	mov	x0, x19
  44f2e8:	blr	x3
  44f2ec:	ldr	x0, [x19, #320]
  44f2f0:	mov	w2, #0x626d                	// #25197
  44f2f4:	mov	w1, #0x64                  	// #100
  44f2f8:	mov	x3, #0x3                   	// #3
  44f2fc:	add	x0, x0, #0x1
  44f300:	strh	w2, [x19]
  44f304:	strb	w1, [x19, #2]
  44f308:	str	x0, [x19, #320]
  44f30c:	add	x1, x3, #0x1
  44f310:	str	x1, [x19, #256]
  44f314:	mov	w0, #0x61                  	// #97
  44f318:	strb	w0, [x19, x3]
  44f31c:	strb	w0, [x19, #264]
  44f320:	cmp	x1, #0xff
  44f324:	b.ne	449e1c <ferror@plt+0x4759c>  // b.any
  44f328:	ldp	x3, x2, [x19, #272]
  44f32c:	strb	wzr, [x19, #255]
  44f330:	mov	x0, x19
  44f334:	blr	x3
  44f338:	ldr	x2, [x19, #320]
  44f33c:	mov	x0, #0x1                   	// #1
  44f340:	mov	x1, #0x0                   	// #0
  44f344:	add	x2, x2, x0
  44f348:	str	x2, [x19, #320]
  44f34c:	b	449e20 <ferror@plt+0x475a0>
  44f350:	ldp	x3, x2, [x19, #272]
  44f354:	strb	wzr, [x19, #255]
  44f358:	mov	x1, x0
  44f35c:	mov	x0, x19
  44f360:	blr	x3
  44f364:	ldr	x1, [x19, #320]
  44f368:	mov	w3, #0x6c7b                	// #27771
  44f36c:	mov	w2, #0x61                  	// #97
  44f370:	mov	x0, #0x3                   	// #3
  44f374:	add	x1, x1, #0x1
  44f378:	strh	w3, [x19]
  44f37c:	strb	w2, [x19, #2]
  44f380:	str	x1, [x19, #320]
  44f384:	add	x1, x0, #0x1
  44f388:	str	x1, [x19, #256]
  44f38c:	mov	w2, #0x6d                  	// #109
  44f390:	strb	w2, [x19, x0]
  44f394:	strb	w2, [x19, #264]
  44f398:	cmp	x1, #0xff
  44f39c:	b.ne	449dc8 <ferror@plt+0x47548>  // b.any
  44f3a0:	ldp	x3, x2, [x19, #272]
  44f3a4:	strb	wzr, [x19, #255]
  44f3a8:	mov	x0, x19
  44f3ac:	blr	x3
  44f3b0:	ldr	x0, [x19, #320]
  44f3b4:	mov	w1, #0x6462                	// #25698
  44f3b8:	mov	x2, #0x2                   	// #2
  44f3bc:	strh	w1, [x19]
  44f3c0:	add	x0, x0, #0x1
  44f3c4:	str	x0, [x19, #320]
  44f3c8:	b	449e10 <ferror@plt+0x47590>
  44f3cc:	ldp	x3, x2, [x19, #272]
  44f3d0:	strb	wzr, [x19, #255]
  44f3d4:	mov	x1, x0
  44f3d8:	mov	x0, x19
  44f3dc:	blr	x3
  44f3e0:	ldr	x1, [x19, #320]
  44f3e4:	mov	w3, #0x7974                	// #31092
  44f3e8:	mov	w2, #0x70                  	// #112
  44f3ec:	mov	x0, #0x3                   	// #3
  44f3f0:	add	x1, x1, #0x1
  44f3f4:	strh	w3, [x19]
  44f3f8:	strb	w2, [x19, #2]
  44f3fc:	str	x1, [x19, #320]
  44f400:	add	x3, x0, #0x1
  44f404:	str	x3, [x19, #256]
  44f408:	mov	w1, #0x65                  	// #101
  44f40c:	strb	w1, [x19, x0]
  44f410:	strb	w1, [x19, #264]
  44f414:	cmp	x3, #0xff
  44f418:	b.ne	44be88 <ferror@plt+0x49608>  // b.any
  44f41c:	ldp	x4, x2, [x19, #272]
  44f420:	strb	wzr, [x19, #255]
  44f424:	mov	x1, x3
  44f428:	mov	x0, x19
  44f42c:	blr	x4
  44f430:	ldr	x0, [x19, #320]
  44f434:	mov	w3, #0x6e69                	// #28265
  44f438:	mov	w2, #0x66                  	// #102
  44f43c:	mov	x1, #0x3                   	// #3
  44f440:	add	x0, x0, #0x1
  44f444:	strh	w3, [x19]
  44f448:	strb	w2, [x19, #2]
  44f44c:	str	x0, [x19, #320]
  44f450:	add	x0, x1, #0x1
  44f454:	str	x0, [x19, #256]
  44f458:	mov	w20, #0x6f                  	// #111
  44f45c:	strb	w20, [x19, x1]
  44f460:	strb	w20, [x19, #264]
  44f464:	cmp	x0, #0xff
  44f468:	b.ne	44bed4 <ferror@plt+0x49654>  // b.any
  44f46c:	ldp	x3, x2, [x19, #272]
  44f470:	strb	wzr, [x19, #255]
  44f474:	mov	x1, x0
  44f478:	mov	x0, x19
  44f47c:	blr	x3
  44f480:	strb	w20, [x19, #2]
  44f484:	ldr	x0, [x19, #320]
  44f488:	mov	w2, #0x6620                	// #26144
  44f48c:	mov	x1, #0x3                   	// #3
  44f490:	strh	w2, [x19]
  44f494:	add	x0, x0, #0x1
  44f498:	str	x0, [x19, #320]
  44f49c:	add	x0, x1, #0x1
  44f4a0:	str	x0, [x19, #256]
  44f4a4:	mov	w2, #0x72                  	// #114
  44f4a8:	strb	w2, [x19, x1]
  44f4ac:	strb	w2, [x19, #264]
  44f4b0:	cmp	x0, #0xff
  44f4b4:	b.ne	44bf24 <ferror@plt+0x496a4>  // b.any
  44f4b8:	ldp	x3, x2, [x19, #272]
  44f4bc:	strb	wzr, [x19, #255]
  44f4c0:	mov	x1, x0
  44f4c4:	mov	x0, x19
  44f4c8:	blr	x3
  44f4cc:	ldr	x2, [x19, #320]
  44f4d0:	mov	x1, #0x1                   	// #1
  44f4d4:	mov	x0, #0x0                   	// #0
  44f4d8:	add	x2, x2, x1
  44f4dc:	str	x2, [x19, #320]
  44f4e0:	b	44bf28 <ferror@plt+0x496a8>
  44f4e4:	ldp	x3, x2, [x19, #272]
  44f4e8:	strb	wzr, [x19, #255]
  44f4ec:	mov	x1, x0
  44f4f0:	mov	x0, x19
  44f4f4:	blr	x3
  44f4f8:	ldr	x1, [x19, #320]
  44f4fc:	mov	w3, #0x706f                	// #28783
  44f500:	mov	w2, #0x65                  	// #101
  44f504:	mov	x0, #0x3                   	// #3
  44f508:	add	x1, x1, #0x1
  44f50c:	strh	w3, [x19]
  44f510:	strb	w2, [x19, #2]
  44f514:	str	x1, [x19, #320]
  44f518:	add	x3, x0, #0x1
  44f51c:	str	x3, [x19, #256]
  44f520:	mov	w1, #0x72                  	// #114
  44f524:	strb	w1, [x19, x0]
  44f528:	strb	w1, [x19, #264]
  44f52c:	cmp	x3, #0xff
  44f530:	b.ne	44b26c <ferror@plt+0x489ec>  // b.any
  44f534:	ldp	x4, x2, [x19, #272]
  44f538:	strb	wzr, [x19, #255]
  44f53c:	mov	x1, x3
  44f540:	mov	x0, x19
  44f544:	blr	x4
  44f548:	ldr	x0, [x19, #320]
  44f54c:	mov	w3, #0x7461                	// #29793
  44f550:	mov	w2, #0x6f                  	// #111
  44f554:	mov	x1, #0x3                   	// #3
  44f558:	add	x0, x0, #0x1
  44f55c:	strh	w3, [x19]
  44f560:	strb	w2, [x19, #2]
  44f564:	str	x0, [x19, #320]
  44f568:	add	x0, x1, #0x1
  44f56c:	str	x0, [x19, #256]
  44f570:	mov	w2, #0x72                  	// #114
  44f574:	strb	w2, [x19, x1]
  44f578:	strb	w2, [x19, #264]
  44f57c:	cmp	x0, #0xff
  44f580:	b.ne	44b2bc <ferror@plt+0x48a3c>  // b.any
  44f584:	ldp	x3, x2, [x19, #272]
  44f588:	strb	wzr, [x19, #255]
  44f58c:	mov	x1, x0
  44f590:	mov	x0, x19
  44f594:	blr	x3
  44f598:	ldr	x2, [x19, #320]
  44f59c:	mov	x1, #0x1                   	// #1
  44f5a0:	mov	x0, #0x0                   	// #0
  44f5a4:	add	x2, x2, x1
  44f5a8:	str	x2, [x19, #320]
  44f5ac:	b	44b2c0 <ferror@plt+0x48a40>
  44f5b0:	ldr	w0, [x20, #4]
  44f5b4:	cmp	w0, #0x1
  44f5b8:	b.gt	44f704 <ferror@plt+0x4ce84>
  44f5bc:	ldr	w1, [x19, #308]
  44f5c0:	cmp	w1, #0x400
  44f5c4:	b.gt	44f704 <ferror@plt+0x4ce84>
  44f5c8:	ldr	x3, [x19, #328]
  44f5cc:	add	w0, w0, #0x1
  44f5d0:	str	w0, [x20, #4]
  44f5d4:	add	w1, w1, #0x1
  44f5d8:	add	x0, sp, #0x80
  44f5dc:	str	w1, [x19, #308]
  44f5e0:	str	x0, [x19, #328]
  44f5e4:	mov	w1, w22
  44f5e8:	mov	x0, x19
  44f5ec:	mov	x2, x20
  44f5f0:	stp	x20, x3, [sp, #128]
  44f5f4:	bl	448dd0 <ferror@plt+0x46550>
  44f5f8:	ldr	w1, [x20, #4]
  44f5fc:	ldr	x0, [sp, #136]
  44f600:	str	x0, [x19, #328]
  44f604:	ldr	w0, [x19, #308]
  44f608:	sub	w1, w1, #0x1
  44f60c:	str	w1, [x20, #4]
  44f610:	sub	w0, w0, #0x1
  44f614:	str	w0, [x19, #308]
  44f618:	ldr	x1, [x19, #256]
  44f61c:	cmp	x1, #0xff
  44f620:	b.eq	4501f4 <ferror@plt+0x4d974>  // b.none
  44f624:	add	x0, x1, #0x1
  44f628:	str	x0, [x19, #256]
  44f62c:	mov	w2, #0x20                  	// #32
  44f630:	strb	w2, [x19, x1]
  44f634:	strb	w2, [x19, #264]
  44f638:	b	44ac0c <ferror@plt+0x4838c>
  44f63c:	ldp	x21, x22, [sp, #32]
  44f640:	ldp	x23, x24, [sp, #48]
  44f644:	b	448e38 <ferror@plt+0x465b8>
  44f648:	mov	w0, #0x1                   	// #1
  44f64c:	str	w0, [x19, #304]
  44f650:	b	44af58 <ferror@plt+0x486d8>
  44f654:	b.eq	4505ec <ferror@plt+0x4dd6c>  // b.none
  44f658:	add	x1, x0, #0x1
  44f65c:	str	x1, [x19, #256]
  44f660:	mov	w2, #0x5f                  	// #95
  44f664:	strb	w2, [x19, x0]
  44f668:	strb	w2, [x19, #264]
  44f66c:	cmp	x1, #0xff
  44f670:	b.ne	4502a0 <ferror@plt+0x4da20>  // b.any
  44f674:	ldp	x3, x2, [x19, #272]
  44f678:	strb	wzr, [x19, #255]
  44f67c:	mov	x0, x19
  44f680:	blr	x3
  44f684:	ldr	x0, [x19, #320]
  44f688:	mov	w3, #0x7246                	// #29254
  44f68c:	mov	w2, #0x61                  	// #97
  44f690:	mov	x1, #0x3                   	// #3
  44f694:	add	x0, x0, #0x1
  44f698:	strh	w3, [x19]
  44f69c:	strb	w2, [x19, #2]
  44f6a0:	str	x0, [x19, #320]
  44f6a4:	add	x0, x1, #0x1
  44f6a8:	str	x0, [x19, #256]
  44f6ac:	mov	w2, #0x63                  	// #99
  44f6b0:	strb	w2, [x19, x1]
  44f6b4:	strb	w2, [x19, #264]
  44f6b8:	cmp	x0, #0xff
  44f6bc:	b.ne	4502f4 <ferror@plt+0x4da74>  // b.any
  44f6c0:	ldp	x3, x2, [x19, #272]
  44f6c4:	strb	wzr, [x19, #255]
  44f6c8:	mov	x1, x0
  44f6cc:	mov	x0, x19
  44f6d0:	blr	x3
  44f6d4:	ldr	x2, [x19, #320]
  44f6d8:	mov	x1, #0x1                   	// #1
  44f6dc:	mov	x0, #0x0                   	// #0
  44f6e0:	add	x2, x2, x1
  44f6e4:	str	x2, [x19, #320]
  44f6e8:	str	x1, [x19, #256]
  44f6ec:	mov	w1, #0x74                  	// #116
  44f6f0:	strb	w1, [x19, x0]
  44f6f4:	strb	w1, [x19, #264]
  44f6f8:	ldp	x21, x22, [sp, #32]
  44f6fc:	ldp	x23, x24, [sp, #48]
  44f700:	b	448e38 <ferror@plt+0x465b8>
  44f704:	mov	w0, #0x1                   	// #1
  44f708:	str	w0, [x19, #304]
  44f70c:	b	44f618 <ferror@plt+0x4cd98>
  44f710:	mov	w0, #0x1                   	// #1
  44f714:	str	w0, [x19, #304]
  44f718:	b	448f9c <ferror@plt+0x4671c>
  44f71c:	add	x0, x1, #0x1
  44f720:	str	x0, [x19, #256]
  44f724:	mov	w2, #0x29                  	// #41
  44f728:	strb	w2, [x19, x1]
  44f72c:	strb	w2, [x19, #264]
  44f730:	ldr	w1, [x24]
  44f734:	cmp	w1, #0x3e
  44f738:	b.eq	45003c <ferror@plt+0x4d7bc>  // b.none
  44f73c:	cmp	w21, #0x8
  44f740:	b.ne	4493a0 <ferror@plt+0x46b20>  // b.any
  44f744:	cmp	x0, #0xff
  44f748:	b.ne	44f770 <ferror@plt+0x4cef0>  // b.any
  44f74c:	ldp	x3, x2, [x19, #272]
  44f750:	strb	wzr, [x19, #255]
  44f754:	mov	x1, x0
  44f758:	mov	x0, x19
  44f75c:	blr	x3
  44f760:	ldr	x1, [x19, #320]
  44f764:	mov	x0, #0x0                   	// #0
  44f768:	add	x1, x1, #0x1
  44f76c:	str	x1, [x19, #320]
  44f770:	add	x1, x0, #0x1
  44f774:	str	x1, [x19, #256]
  44f778:	mov	w1, #0x5b                  	// #91
  44f77c:	strb	w1, [x19, x0]
  44f780:	strb	w1, [x19, #264]
  44f784:	b	4493a0 <ferror@plt+0x46b20>
  44f788:	mov	w0, #0x1                   	// #1
  44f78c:	str	w0, [x19, #304]
  44f790:	b	449800 <ferror@plt+0x46f80>
  44f794:	ldr	x1, [x19, #256]
  44f798:	cmp	x1, #0xff
  44f79c:	b.ne	450088 <ferror@plt+0x4d808>  // b.any
  44f7a0:	ldp	x3, x2, [x19, #272]
  44f7a4:	strb	wzr, [x19, #255]
  44f7a8:	mov	x0, x19
  44f7ac:	blr	x3
  44f7b0:	ldr	x2, [x19, #320]
  44f7b4:	mov	x0, #0x1                   	// #1
  44f7b8:	mov	x1, #0x0                   	// #0
  44f7bc:	add	x2, x2, x0
  44f7c0:	str	x2, [x19, #320]
  44f7c4:	str	x0, [x19, #256]
  44f7c8:	mov	w0, #0x7d                  	// #125
  44f7cc:	strb	w0, [x19, x1]
  44f7d0:	strb	w0, [x19, #264]
  44f7d4:	ldp	x21, x22, [sp, #32]
  44f7d8:	ldp	x23, x24, [sp, #48]
  44f7dc:	b	448e38 <ferror@plt+0x465b8>
  44f7e0:	mov	w0, #0x2c                  	// #44
  44f7e4:	add	x2, x1, #0x1
  44f7e8:	strb	w0, [x19, x1]
  44f7ec:	b	448fd8 <ferror@plt+0x46758>
  44f7f0:	ldp	x3, x2, [x19, #272]
  44f7f4:	strb	wzr, [x19, #255]
  44f7f8:	mov	x0, x19
  44f7fc:	blr	x3
  44f800:	ldr	x1, [x19, #320]
  44f804:	mov	w3, #0x6620                	// #26144
  44f808:	mov	w2, #0x6f                  	// #111
  44f80c:	mov	x0, #0x3                   	// #3
  44f810:	add	x1, x1, #0x1
  44f814:	strh	w3, [x19]
  44f818:	strb	w2, [x19, #2]
  44f81c:	str	x1, [x19, #320]
  44f820:	add	x1, x0, #0x1
  44f824:	str	x1, [x19, #256]
  44f828:	mov	w2, #0x72                  	// #114
  44f82c:	strb	w2, [x19, x0]
  44f830:	strb	w2, [x19, #264]
  44f834:	cmp	x1, #0xff
  44f838:	b.ne	44cd1c <ferror@plt+0x4a49c>  // b.any
  44f83c:	ldp	x3, x2, [x19, #272]
  44f840:	strb	wzr, [x19, #255]
  44f844:	mov	x0, x19
  44f848:	blr	x3
  44f84c:	ldr	x2, [x19, #320]
  44f850:	mov	x0, #0x1                   	// #1
  44f854:	mov	x1, #0x0                   	// #0
  44f858:	add	x2, x2, x0
  44f85c:	str	x2, [x19, #320]
  44f860:	b	44cd20 <ferror@plt+0x4a4a0>
  44f864:	ldr	x0, [x21, #8]
  44f868:	ldr	x23, [x0]
  44f86c:	ldrb	w0, [x23]
  44f870:	subs	w1, w0, #0x61
  44f874:	b.ne	44f888 <ferror@plt+0x4d008>  // b.any
  44f878:	ldrb	w1, [x23, #1]
  44f87c:	subs	w1, w1, #0x64
  44f880:	b.ne	44f888 <ferror@plt+0x4d008>  // b.any
  44f884:	ldrb	w1, [x23, #2]
  44f888:	ldr	w2, [x20]
  44f88c:	cbnz	w1, 44f898 <ferror@plt+0x4d018>
  44f890:	cmp	w2, #0x3
  44f894:	b.eq	4517bc <ferror@plt+0x4ef3c>  // b.none
  44f898:	cmp	w2, #0x39
  44f89c:	b.eq	4518ec <ferror@plt+0x4f06c>  // b.none
  44f8a0:	cmp	w0, #0x73
  44f8a4:	b.ne	44f990 <ferror@plt+0x4d110>  // b.any
  44f8a8:	ldrb	w1, [x23, #1]
  44f8ac:	cmp	w1, #0x5a
  44f8b0:	b.ne	44f9dc <ferror@plt+0x4d15c>  // b.any
  44f8b4:	ldrb	w3, [x23, #2]
  44f8b8:	cbnz	w3, 44f9dc <ferror@plt+0x4d15c>
  44f8bc:	mov	x1, x20
  44f8c0:	mov	x0, x19
  44f8c4:	bl	448308 <ferror@plt+0x45a88>
  44f8c8:	cbnz	x0, 44f8e4 <ferror@plt+0x4d064>
  44f8cc:	b	44f8f0 <ferror@plt+0x4d070>
  44f8d0:	ldr	x1, [x0, #8]
  44f8d4:	cbz	x1, 44f8f0 <ferror@plt+0x4d070>
  44f8d8:	ldr	x0, [x0, #16]
  44f8dc:	add	w3, w3, #0x1
  44f8e0:	cbz	x0, 44f8f0 <ferror@plt+0x4d070>
  44f8e4:	ldr	w1, [x0]
  44f8e8:	cmp	w1, #0x2f
  44f8ec:	b.eq	44f8d0 <ferror@plt+0x4d050>  // b.none
  44f8f0:	mov	w2, w3
  44f8f4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  44f8f8:	add	x1, x1, #0x9e0
  44f8fc:	add	x0, sp, #0x80
  44f900:	bl	402310 <sprintf@plt>
  44f904:	add	x0, sp, #0x80
  44f908:	bl	402270 <strlen@plt>
  44f90c:	cbz	x0, 451a94 <ferror@plt+0x4f214>
  44f910:	add	x20, sp, #0x80
  44f914:	mov	x23, #0x1                   	// #1
  44f918:	add	x22, x20, x0
  44f91c:	ldr	x1, [x19, #256]
  44f920:	b	44f97c <ferror@plt+0x4d0fc>
  44f924:	ldp	x3, x2, [x19, #272]
  44f928:	strb	wzr, [x19, #255]
  44f92c:	mov	x0, x19
  44f930:	add	x20, x20, #0x1
  44f934:	blr	x3
  44f938:	strb	w21, [x19]
  44f93c:	ldr	x0, [x19, #320]
  44f940:	str	x23, [x19, #256]
  44f944:	strb	w21, [x19, #264]
  44f948:	cmp	x20, x22
  44f94c:	add	x0, x0, #0x1
  44f950:	str	x0, [x19, #320]
  44f954:	b.eq	4519e0 <ferror@plt+0x4f160>  // b.none
  44f958:	ldrb	w21, [x20]
  44f95c:	mov	x0, #0x1                   	// #1
  44f960:	add	x1, x0, #0x1
  44f964:	str	x1, [x19, #256]
  44f968:	strb	w21, [x19, x0]
  44f96c:	add	x20, x20, #0x1
  44f970:	strb	w21, [x19, #264]
  44f974:	cmp	x22, x20
  44f978:	b.eq	451924 <ferror@plt+0x4f0a4>  // b.none
  44f97c:	ldrb	w21, [x20]
  44f980:	cmp	x1, #0xff
  44f984:	b.eq	44f924 <ferror@plt+0x4d0a4>  // b.none
  44f988:	mov	x0, x1
  44f98c:	b	44f960 <ferror@plt+0x4d0e0>
  44f990:	mov	x0, x19
  44f994:	mov	x2, x21
  44f998:	mov	w1, w22
  44f99c:	bl	451ce8 <ferror@plt+0x4f468>
  44f9a0:	ldrb	w0, [x23]
  44f9a4:	cmp	w0, #0x67
  44f9a8:	b.ne	44fa6c <ferror@plt+0x4d1ec>  // b.any
  44f9ac:	ldrb	w1, [x23, #1]
  44f9b0:	cmp	w1, #0x73
  44f9b4:	b.ne	44fa6c <ferror@plt+0x4d1ec>  // b.any
  44f9b8:	ldrb	w1, [x23, #2]
  44f9bc:	cbnz	w1, 44fa6c <ferror@plt+0x4d1ec>
  44f9c0:	mov	w1, w22
  44f9c4:	mov	x2, x20
  44f9c8:	mov	x0, x19
  44f9cc:	bl	451c50 <ferror@plt+0x4f3d0>
  44f9d0:	ldp	x21, x22, [sp, #32]
  44f9d4:	ldp	x23, x24, [sp, #48]
  44f9d8:	b	448e38 <ferror@plt+0x465b8>
  44f9dc:	cmp	w0, #0x73
  44f9e0:	b.ne	44f990 <ferror@plt+0x4d110>  // b.any
  44f9e4:	ldrb	w0, [x23, #1]
  44f9e8:	cmp	w0, #0x50
  44f9ec:	b.ne	44f990 <ferror@plt+0x4d110>  // b.any
  44f9f0:	ldrb	w0, [x23, #2]
  44f9f4:	mov	w3, #0x0                   	// #0
  44f9f8:	cbz	w0, 44fa0c <ferror@plt+0x4d18c>
  44f9fc:	b	44f990 <ferror@plt+0x4d110>
  44fa00:	add	w3, w3, #0x1
  44fa04:	ldr	x20, [x20, #16]
  44fa08:	cbz	x20, 4510e8 <ferror@plt+0x4e868>
  44fa0c:	ldr	w0, [x20]
  44fa10:	cmp	w0, #0x2f
  44fa14:	b.ne	4510e8 <ferror@plt+0x4e868>  // b.any
  44fa18:	ldr	x0, [x20, #8]
  44fa1c:	cbz	x0, 4510e8 <ferror@plt+0x4e868>
  44fa20:	ldr	w1, [x0]
  44fa24:	cmp	w1, #0x4b
  44fa28:	b.ne	44fa00 <ferror@plt+0x4d180>  // b.any
  44fa2c:	ldr	x1, [x0, #8]
  44fa30:	mov	x0, x19
  44fa34:	bl	448308 <ferror@plt+0x45a88>
  44fa38:	mov	w1, #0x0                   	// #0
  44fa3c:	cbnz	x0, 44fa58 <ferror@plt+0x4d1d8>
  44fa40:	b	44fa64 <ferror@plt+0x4d1e4>
  44fa44:	ldr	x2, [x0, #8]
  44fa48:	cbz	x2, 44fa64 <ferror@plt+0x4d1e4>
  44fa4c:	ldr	x0, [x0, #16]
  44fa50:	add	w1, w1, #0x1
  44fa54:	cbz	x0, 44fa64 <ferror@plt+0x4d1e4>
  44fa58:	ldr	w2, [x0]
  44fa5c:	cmp	w2, #0x2f
  44fa60:	b.eq	44fa44 <ferror@plt+0x4d1c4>  // b.none
  44fa64:	add	w3, w3, w1
  44fa68:	b	44fa04 <ferror@plt+0x4d184>
  44fa6c:	cmp	w0, #0x73
  44fa70:	b.ne	44b670 <ferror@plt+0x48df0>  // b.any
  44fa74:	ldrb	w0, [x23, #1]
  44fa78:	cmp	w0, #0x74
  44fa7c:	b.ne	44b670 <ferror@plt+0x48df0>  // b.any
  44fa80:	ldrb	w0, [x23, #2]
  44fa84:	cbnz	w0, 44b670 <ferror@plt+0x48df0>
  44fa88:	ldr	x1, [x19, #256]
  44fa8c:	cmp	x1, #0xff
  44fa90:	b.ne	44fab4 <ferror@plt+0x4d234>  // b.any
  44fa94:	ldp	x3, x2, [x19, #272]
  44fa98:	strb	wzr, [x19, #255]
  44fa9c:	mov	x0, x19
  44faa0:	blr	x3
  44faa4:	ldr	x0, [x19, #320]
  44faa8:	mov	x1, #0x0                   	// #0
  44faac:	add	x0, x0, #0x1
  44fab0:	str	x0, [x19, #320]
  44fab4:	add	x0, x1, #0x1
  44fab8:	str	x0, [x19, #256]
  44fabc:	mov	w2, #0x28                  	// #40
  44fac0:	strb	w2, [x19, x1]
  44fac4:	strb	w2, [x19, #264]
  44fac8:	ldr	w1, [x20, #4]
  44facc:	cmp	w1, #0x1
  44fad0:	b.gt	450b88 <ferror@plt+0x4e308>
  44fad4:	ldr	w2, [x19, #308]
  44fad8:	cmp	w2, #0x400
  44fadc:	b.gt	450b88 <ferror@plt+0x4e308>
  44fae0:	ldr	x3, [x19, #328]
  44fae4:	add	w1, w1, #0x1
  44fae8:	str	w1, [x20, #4]
  44faec:	add	w2, w2, #0x1
  44faf0:	add	x0, sp, #0x80
  44faf4:	str	w2, [x19, #308]
  44faf8:	str	x0, [x19, #328]
  44fafc:	mov	w1, w22
  44fb00:	mov	x2, x20
  44fb04:	mov	x0, x19
  44fb08:	stp	x20, x3, [sp, #128]
  44fb0c:	bl	448dd0 <ferror@plt+0x46550>
  44fb10:	ldr	w2, [x20, #4]
  44fb14:	ldr	x0, [sp, #136]
  44fb18:	str	x0, [x19, #328]
  44fb1c:	ldr	w1, [x19, #308]
  44fb20:	sub	w2, w2, #0x1
  44fb24:	ldr	x0, [x19, #256]
  44fb28:	str	w2, [x20, #4]
  44fb2c:	sub	w1, w1, #0x1
  44fb30:	str	w1, [x19, #308]
  44fb34:	cmp	x0, #0xff
  44fb38:	b.ne	44fb60 <ferror@plt+0x4d2e0>  // b.any
  44fb3c:	ldp	x3, x2, [x19, #272]
  44fb40:	strb	wzr, [x19, #255]
  44fb44:	mov	x1, x0
  44fb48:	mov	x0, x19
  44fb4c:	blr	x3
  44fb50:	ldr	x1, [x19, #320]
  44fb54:	mov	x0, #0x0                   	// #0
  44fb58:	add	x1, x1, #0x1
  44fb5c:	str	x1, [x19, #320]
  44fb60:	add	x1, x0, #0x1
  44fb64:	str	x1, [x19, #256]
  44fb68:	mov	w1, #0x29                  	// #41
  44fb6c:	strb	w1, [x19, x0]
  44fb70:	strb	w1, [x19, #264]
  44fb74:	ldp	x21, x22, [sp, #32]
  44fb78:	ldp	x23, x24, [sp, #48]
  44fb7c:	b	448e38 <ferror@plt+0x465b8>
  44fb80:	ldp	x3, x2, [x19, #272]
  44fb84:	strb	wzr, [x19, #255]
  44fb88:	mov	x1, x0
  44fb8c:	mov	x0, x19
  44fb90:	blr	x3
  44fb94:	ldr	x1, [x19, #320]
  44fb98:	mov	w3, #0x615b                	// #24923
  44fb9c:	mov	w2, #0x62                  	// #98
  44fba0:	mov	x0, #0x3                   	// #3
  44fba4:	add	x1, x1, #0x1
  44fba8:	strh	w3, [x19]
  44fbac:	strb	w2, [x19, #2]
  44fbb0:	str	x1, [x19, #320]
  44fbb4:	add	x1, x0, #0x1
  44fbb8:	str	x1, [x19, #256]
  44fbbc:	mov	w2, #0x69                  	// #105
  44fbc0:	strb	w2, [x19, x0]
  44fbc4:	strb	w2, [x19, #264]
  44fbc8:	cmp	x1, #0xff
  44fbcc:	b.ne	449c10 <ferror@plt+0x47390>  // b.any
  44fbd0:	ldp	x3, x2, [x19, #272]
  44fbd4:	strb	wzr, [x19, #255]
  44fbd8:	mov	x0, x19
  44fbdc:	blr	x3
  44fbe0:	ldr	x2, [x19, #320]
  44fbe4:	mov	x0, #0x1                   	// #1
  44fbe8:	mov	x1, #0x0                   	// #0
  44fbec:	add	x2, x2, x0
  44fbf0:	str	x2, [x19, #320]
  44fbf4:	b	449c14 <ferror@plt+0x47394>
  44fbf8:	ldp	x3, x2, [x19, #272]
  44fbfc:	strb	wzr, [x19, #255]
  44fc00:	mov	x0, x19
  44fc04:	blr	x3
  44fc08:	ldr	x0, [x19, #320]
  44fc0c:	mov	w1, #0x692d                	// #26925
  44fc10:	mov	x2, #0x2                   	// #2
  44fc14:	strh	w1, [x19]
  44fc18:	add	x0, x0, #0x1
  44fc1c:	str	x0, [x19, #320]
  44fc20:	b	44c628 <ferror@plt+0x49da8>
  44fc24:	ldr	x0, [x23, #8]
  44fc28:	ldr	w21, [x0, #28]
  44fc2c:	cmp	w21, #0x6
  44fc30:	b.hi	44fcc8 <ferror@plt+0x4d448>  // b.pmore
  44fc34:	cbz	w21, 4492c8 <ferror@plt+0x46a48>
  44fc38:	ldr	x0, [x2, #16]
  44fc3c:	ldr	w0, [x0]
  44fc40:	cbnz	w0, 4492c8 <ferror@plt+0x46a48>
  44fc44:	cmp	w20, #0x3e
  44fc48:	b.eq	451b9c <ferror@plt+0x4f31c>  // b.none
  44fc4c:	ldr	x2, [x24, #16]
  44fc50:	mov	w1, w22
  44fc54:	mov	x0, x19
  44fc58:	bl	451c50 <ferror@plt+0x4f3d0>
  44fc5c:	cmp	w21, #0x4
  44fc60:	b.eq	451b7c <ferror@plt+0x4f2fc>  // b.none
  44fc64:	b.hi	451930 <ferror@plt+0x4f0b0>  // b.pmore
  44fc68:	cmp	w21, #0x2
  44fc6c:	b.eq	451b2c <ferror@plt+0x4f2ac>  // b.none
  44fc70:	cmp	w21, #0x3
  44fc74:	b.ne	451c0c <ferror@plt+0x4f38c>  // b.any
  44fc78:	ldr	x1, [x19, #256]
  44fc7c:	cmp	x1, #0xff
  44fc80:	b.ne	44fca8 <ferror@plt+0x4d428>  // b.any
  44fc84:	ldp	x3, x2, [x19, #272]
  44fc88:	strb	wzr, [x19, #255]
  44fc8c:	mov	x0, x19
  44fc90:	blr	x3
  44fc94:	str	xzr, [x19, #256]
  44fc98:	ldr	x0, [x19, #320]
  44fc9c:	mov	x1, #0x0                   	// #0
  44fca0:	add	x0, x0, #0x1
  44fca4:	str	x0, [x19, #320]
  44fca8:	add	x0, x1, #0x1
  44fcac:	str	x0, [x19, #256]
  44fcb0:	mov	w0, #0x6c                  	// #108
  44fcb4:	strb	w0, [x19, x1]
  44fcb8:	strb	w0, [x19, #264]
  44fcbc:	ldp	x21, x22, [sp, #32]
  44fcc0:	ldp	x23, x24, [sp, #48]
  44fcc4:	b	448e38 <ferror@plt+0x465b8>
  44fcc8:	cmp	w21, #0x7
  44fccc:	b.ne	4492c8 <ferror@plt+0x46a48>  // b.any
  44fcd0:	ldr	x0, [x2, #16]
  44fcd4:	ldr	w1, [x0]
  44fcd8:	cbnz	w1, 4492c8 <ferror@plt+0x46a48>
  44fcdc:	ldr	w1, [x0, #16]
  44fce0:	cmp	w20, #0x3d
  44fce4:	ccmp	w1, #0x1, #0x0, eq  // eq = none
  44fce8:	b.ne	4492c8 <ferror@plt+0x46a48>  // b.any
  44fcec:	ldr	x0, [x0, #8]
  44fcf0:	ldrb	w0, [x0]
  44fcf4:	cmp	w0, #0x30
  44fcf8:	b.eq	451c2c <ferror@plt+0x4f3ac>  // b.none
  44fcfc:	cmp	w0, #0x31
  44fd00:	b.ne	4492c8 <ferror@plt+0x46a48>  // b.any
  44fd04:	mov	x0, x19
  44fd08:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  44fd0c:	mov	x2, #0x4                   	// #4
  44fd10:	add	x1, x1, #0x170
  44fd14:	bl	448118 <ferror@plt+0x45898>
  44fd18:	ldp	x21, x22, [sp, #32]
  44fd1c:	ldp	x23, x24, [sp, #48]
  44fd20:	b	448e38 <ferror@plt+0x465b8>
  44fd24:	add	x1, x1, #0x3
  44fd28:	str	x1, [x19, #256]
  44fd2c:	mov	w0, #0x6e                  	// #110
  44fd30:	strb	w0, [x19, x3]
  44fd34:	strb	w0, [x19, #264]
  44fd38:	cmp	x1, #0xff
  44fd3c:	b.ne	44c634 <ferror@plt+0x49db4>  // b.any
  44fd40:	ldp	x3, x2, [x19, #272]
  44fd44:	strb	wzr, [x19, #255]
  44fd48:	mov	x0, x19
  44fd4c:	blr	x3
  44fd50:	ldr	x2, [x19, #320]
  44fd54:	mov	x0, #0x1                   	// #1
  44fd58:	mov	x1, #0x0                   	// #0
  44fd5c:	add	x2, x2, x0
  44fd60:	str	x2, [x19, #320]
  44fd64:	b	44c638 <ferror@plt+0x49db8>
  44fd68:	ldr	x20, [x20, #8]
  44fd6c:	cbz	x20, 4503dc <ferror@plt+0x4db5c>
  44fd70:	ldr	w1, [x20, #4]
  44fd74:	cmp	w1, #0x1
  44fd78:	b.gt	4503dc <ferror@plt+0x4db5c>
  44fd7c:	ldr	w2, [x19, #308]
  44fd80:	cmp	w2, #0x400
  44fd84:	b.gt	4503dc <ferror@plt+0x4db5c>
  44fd88:	ldr	x3, [x19, #328]
  44fd8c:	add	w1, w1, #0x1
  44fd90:	str	w1, [x20, #4]
  44fd94:	add	w2, w2, #0x1
  44fd98:	add	x0, sp, #0x80
  44fd9c:	str	w2, [x19, #308]
  44fda0:	str	x0, [x19, #328]
  44fda4:	mov	w1, w22
  44fda8:	mov	x2, x20
  44fdac:	mov	x0, x19
  44fdb0:	stp	x20, x3, [sp, #128]
  44fdb4:	bl	448dd0 <ferror@plt+0x46550>
  44fdb8:	ldr	w1, [x20, #4]
  44fdbc:	ldr	x0, [sp, #136]
  44fdc0:	str	x0, [x19, #328]
  44fdc4:	ldr	w0, [x19, #308]
  44fdc8:	sub	w1, w1, #0x1
  44fdcc:	ldr	x2, [x19, #368]
  44fdd0:	sub	w0, w0, #0x1
  44fdd4:	ldr	x3, [x19, #256]
  44fdd8:	str	w1, [x20, #4]
  44fddc:	str	w0, [x19, #308]
  44fde0:	mov	x1, x3
  44fde4:	ldrb	w0, [x19, #264]
  44fde8:	cbz	x2, 44fdf4 <ferror@plt+0x4d574>
  44fdec:	ldr	x2, [sp, #112]
  44fdf0:	str	x2, [x19, #288]
  44fdf4:	cmp	w0, #0x3c
  44fdf8:	b.ne	44fe3c <ferror@plt+0x4d5bc>  // b.any
  44fdfc:	cmp	x1, #0xff
  44fe00:	b.ne	44fe28 <ferror@plt+0x4d5a8>  // b.any
  44fe04:	ldp	x3, x2, [x19, #272]
  44fe08:	strb	wzr, [x19, #255]
  44fe0c:	mov	x0, x19
  44fe10:	blr	x3
  44fe14:	str	xzr, [x19, #256]
  44fe18:	ldr	x0, [x19, #320]
  44fe1c:	mov	x1, #0x0                   	// #0
  44fe20:	add	x0, x0, #0x1
  44fe24:	str	x0, [x19, #320]
  44fe28:	add	x3, x1, #0x1
  44fe2c:	str	x3, [x19, #256]
  44fe30:	mov	w0, #0x20                  	// #32
  44fe34:	strb	w0, [x19, x1]
  44fe38:	strb	w0, [x19, #264]
  44fe3c:	add	x0, x3, #0x1
  44fe40:	cmp	x3, #0xff
  44fe44:	b.ne	44fe70 <ferror@plt+0x4d5f0>  // b.any
  44fe48:	ldp	x4, x2, [x19, #272]
  44fe4c:	strb	wzr, [x19, #255]
  44fe50:	mov	x1, x3
  44fe54:	mov	x0, x19
  44fe58:	blr	x4
  44fe5c:	ldr	x1, [x19, #320]
  44fe60:	mov	x0, #0x1                   	// #1
  44fe64:	mov	x3, #0x0                   	// #0
  44fe68:	add	x1, x1, x0
  44fe6c:	str	x1, [x19, #320]
  44fe70:	str	x0, [x19, #256]
  44fe74:	mov	w1, #0x3c                  	// #60
  44fe78:	strb	w1, [x19, x3]
  44fe7c:	strb	w1, [x19, #264]
  44fe80:	ldr	x1, [x24, #8]
  44fe84:	ldr	x20, [x1, #16]
  44fe88:	cbz	x20, 4503d0 <ferror@plt+0x4db50>
  44fe8c:	ldr	w1, [x20, #4]
  44fe90:	cmp	w1, #0x1
  44fe94:	b.gt	4503d0 <ferror@plt+0x4db50>
  44fe98:	ldr	w2, [x19, #308]
  44fe9c:	cmp	w2, #0x400
  44fea0:	b.gt	4503d0 <ferror@plt+0x4db50>
  44fea4:	ldr	x3, [x19, #328]
  44fea8:	add	w1, w1, #0x1
  44feac:	str	w1, [x20, #4]
  44feb0:	add	w2, w2, #0x1
  44feb4:	add	x0, sp, #0x80
  44feb8:	str	w2, [x19, #308]
  44febc:	str	x0, [x19, #328]
  44fec0:	mov	w1, w22
  44fec4:	mov	x2, x20
  44fec8:	mov	x0, x19
  44fecc:	stp	x20, x3, [sp, #128]
  44fed0:	bl	448dd0 <ferror@plt+0x46550>
  44fed4:	ldr	w1, [x19, #308]
  44fed8:	ldr	x0, [sp, #136]
  44fedc:	str	x0, [x19, #328]
  44fee0:	ldr	w0, [x20, #4]
  44fee4:	sub	w1, w1, #0x1
  44fee8:	sub	w0, w0, #0x1
  44feec:	str	w0, [x20, #4]
  44fef0:	ldr	x0, [x19, #256]
  44fef4:	str	w1, [x19, #308]
  44fef8:	ldrb	w2, [x19, #264]
  44fefc:	mov	x1, x0
  44ff00:	cmp	w2, #0x3e
  44ff04:	b.ne	44ff48 <ferror@plt+0x4d6c8>  // b.any
  44ff08:	cmp	x0, #0xff
  44ff0c:	b.ne	44ff34 <ferror@plt+0x4d6b4>  // b.any
  44ff10:	ldp	x3, x2, [x19, #272]
  44ff14:	strb	wzr, [x19, #255]
  44ff18:	mov	x0, x19
  44ff1c:	blr	x3
  44ff20:	str	xzr, [x19, #256]
  44ff24:	ldr	x0, [x19, #320]
  44ff28:	mov	x1, #0x0                   	// #0
  44ff2c:	add	x0, x0, #0x1
  44ff30:	str	x0, [x19, #320]
  44ff34:	add	x0, x1, #0x1
  44ff38:	str	x0, [x19, #256]
  44ff3c:	mov	w2, #0x20                  	// #32
  44ff40:	strb	w2, [x19, x1]
  44ff44:	strb	w2, [x19, #264]
  44ff48:	add	x1, x0, #0x1
  44ff4c:	cmp	x0, #0xff
  44ff50:	b.ne	44ff7c <ferror@plt+0x4d6fc>  // b.any
  44ff54:	ldp	x3, x2, [x19, #272]
  44ff58:	strb	wzr, [x19, #255]
  44ff5c:	mov	x1, x0
  44ff60:	mov	x0, x19
  44ff64:	blr	x3
  44ff68:	ldr	x2, [x19, #320]
  44ff6c:	mov	x1, #0x1                   	// #1
  44ff70:	mov	x0, #0x0                   	// #0
  44ff74:	add	x2, x2, x1
  44ff78:	str	x2, [x19, #320]
  44ff7c:	str	x1, [x19, #256]
  44ff80:	mov	w1, #0x3e                  	// #62
  44ff84:	strb	w1, [x19, x0]
  44ff88:	strb	w1, [x19, #264]
  44ff8c:	ldp	x21, x22, [sp, #32]
  44ff90:	ldp	x23, x24, [sp, #48]
  44ff94:	b	448e38 <ferror@plt+0x465b8>
  44ff98:	cmp	x1, #0xff
  44ff9c:	b.ne	44ffc0 <ferror@plt+0x4d740>  // b.any
  44ffa0:	ldp	x3, x2, [x19, #272]
  44ffa4:	strb	wzr, [x19, #255]
  44ffa8:	mov	x0, x19
  44ffac:	blr	x3
  44ffb0:	ldr	x0, [x19, #320]
  44ffb4:	mov	x1, #0x0                   	// #0
  44ffb8:	add	x0, x0, #0x1
  44ffbc:	str	x0, [x19, #320]
  44ffc0:	add	x2, x1, #0x1
  44ffc4:	str	x2, [x19, #256]
  44ffc8:	mov	w0, #0x20                  	// #32
  44ffcc:	strb	w0, [x19, x1]
  44ffd0:	mov	x1, x2
  44ffd4:	strb	w0, [x19, #264]
  44ffd8:	b	44c058 <ferror@plt+0x497d8>
  44ffdc:	cmp	x1, #0xff
  44ffe0:	b.eq	450800 <ferror@plt+0x4df80>  // b.none
  44ffe4:	add	x3, x1, #0x1
  44ffe8:	str	x3, [x19, #256]
  44ffec:	mov	w0, #0x3a                  	// #58
  44fff0:	strb	w0, [x19, x1]
  44fff4:	strb	w0, [x19, #264]
  44fff8:	cmp	x3, #0xff
  44fffc:	b.ne	450828 <ferror@plt+0x4dfa8>  // b.any
  450000:	ldp	x4, x2, [x19, #272]
  450004:	strb	wzr, [x19, #255]
  450008:	mov	x1, x3
  45000c:	mov	x0, x19
  450010:	blr	x4
  450014:	ldr	x1, [x19, #320]
  450018:	mov	x0, #0x1                   	// #1
  45001c:	mov	x3, #0x0                   	// #0
  450020:	add	x1, x1, x0
  450024:	str	x1, [x19, #320]
  450028:	str	x0, [x19, #256]
  45002c:	mov	w1, #0x3a                  	// #58
  450030:	strb	w1, [x19, x3]
  450034:	strb	w1, [x19, #264]
  450038:	b	44912c <ferror@plt+0x468ac>
  45003c:	cmp	x0, #0xff
  450040:	b.ne	450068 <ferror@plt+0x4d7e8>  // b.any
  450044:	ldp	x3, x2, [x19, #272]
  450048:	strb	wzr, [x19, #255]
  45004c:	mov	x1, x0
  450050:	mov	x0, x19
  450054:	blr	x3
  450058:	str	xzr, [x19, #256]
  45005c:	ldr	x0, [x19, #320]
  450060:	add	x0, x0, #0x1
  450064:	str	x0, [x19, #320]
  450068:	ldr	x2, [x19, #256]
  45006c:	mov	w1, #0x2d                  	// #45
  450070:	add	x0, x2, #0x1
  450074:	str	x0, [x19, #256]
  450078:	strb	w1, [x19, x2]
  45007c:	strb	w1, [x19, #264]
  450080:	b	44f73c <ferror@plt+0x4cebc>
  450084:	mov	x1, #0x1                   	// #1
  450088:	add	x0, x1, #0x1
  45008c:	b	44f7c4 <ferror@plt+0x4cf44>
  450090:	ldr	x0, [x19, #256]
  450094:	cmp	x0, #0xff
  450098:	b.eq	4511f4 <ferror@plt+0x4e974>  // b.none
  45009c:	add	x3, x0, #0x1
  4500a0:	str	x3, [x19, #256]
  4500a4:	mov	w1, #0x5f                  	// #95
  4500a8:	strb	w1, [x19, x0]
  4500ac:	strb	w1, [x19, #264]
  4500b0:	cmp	x3, #0xff
  4500b4:	b.ne	450fb8 <ferror@plt+0x4e738>  // b.any
  4500b8:	ldp	x4, x2, [x19, #272]
  4500bc:	strb	wzr, [x19, #255]
  4500c0:	mov	x1, x3
  4500c4:	mov	x0, x19
  4500c8:	blr	x4
  4500cc:	ldr	x1, [x19, #320]
  4500d0:	mov	w2, #0x6153                	// #24915
  4500d4:	mov	x0, #0x2                   	// #2
  4500d8:	strh	w2, [x19]
  4500dc:	add	x1, x1, #0x1
  4500e0:	str	x1, [x19, #320]
  4500e4:	add	x1, x0, #0x1
  4500e8:	mov	w2, #0x74                  	// #116
  4500ec:	strb	w2, [x19, x0]
  4500f0:	add	x0, x1, #0x1
  4500f4:	str	x0, [x19, #256]
  4500f8:	mov	w0, #0x20                  	// #32
  4500fc:	strb	w0, [x19, x1]
  450100:	strb	w0, [x19, #264]
  450104:	b	44abec <ferror@plt+0x4836c>
  450108:	ldp	x3, x2, [x19, #272]
  45010c:	strb	wzr, [x19, #255]
  450110:	mov	x1, x0
  450114:	mov	x0, x19
  450118:	blr	x3
  45011c:	ldr	x0, [x19, #320]
  450120:	mov	x2, #0x1                   	// #1
  450124:	ldr	x23, [x24, #8]
  450128:	mov	w1, #0x28                  	// #40
  45012c:	add	x0, x0, x2
  450130:	strb	w1, [x19]
  450134:	str	x2, [x19, #256]
  450138:	strb	w1, [x19, #264]
  45013c:	str	x0, [x19, #320]
  450140:	cbnz	x23, 451088 <ferror@plt+0x4e808>
  450144:	mov	w0, #0x29                  	// #41
  450148:	strb	w0, [x19, #1]
  45014c:	strb	w0, [x19, #264]
  450150:	mov	x0, #0x2                   	// #2
  450154:	str	w2, [x19, #304]
  450158:	ldr	w1, [x24]
  45015c:	str	x0, [x19, #256]
  450160:	cmp	w1, #0x3e
  450164:	b.ne	44f73c <ferror@plt+0x4cebc>  // b.any
  450168:	b	450068 <ferror@plt+0x4d7e8>
  45016c:	add	x1, x0, #0x2
  450170:	str	x1, [x19, #256]
  450174:	mov	w2, #0x70                  	// #112
  450178:	strb	w2, [x19, x3]
  45017c:	strb	w2, [x19, #264]
  450180:	cmp	x1, #0xff
  450184:	b.ne	4505a0 <ferror@plt+0x4dd20>  // b.any
  450188:	ldp	x3, x2, [x19, #272]
  45018c:	strb	wzr, [x19, #255]
  450190:	mov	x0, x19
  450194:	blr	x3
  450198:	ldr	x0, [x19, #320]
  45019c:	mov	w2, #0x7261                	// #29281
  4501a0:	mov	x1, #0x2                   	// #2
  4501a4:	strh	w2, [x19]
  4501a8:	add	x0, x0, #0x1
  4501ac:	str	x0, [x19, #320]
  4501b0:	add	x0, x1, #0x1
  4501b4:	mov	w2, #0x6d                  	// #109
  4501b8:	strb	w2, [x19, x1]
  4501bc:	add	x1, x0, #0x1
  4501c0:	b	44da70 <ferror@plt+0x4b1f0>
  4501c4:	add	x2, x2, #0x10
  4501c8:	mov	w1, w20
  4501cc:	mov	x0, x19
  4501d0:	bl	454cd8 <ferror@plt+0x52458>
  4501d4:	ldr	x2, [x24, #8]
  4501d8:	cbz	x2, 451290 <ferror@plt+0x4ea10>
  4501dc:	mov	w1, w20
  4501e0:	mov	x0, x19
  4501e4:	bl	451c50 <ferror@plt+0x4f3d0>
  4501e8:	ldp	x21, x22, [sp, #32]
  4501ec:	ldp	x23, x24, [sp, #48]
  4501f0:	b	448e38 <ferror@plt+0x465b8>
  4501f4:	ldp	x3, x2, [x19, #272]
  4501f8:	strb	wzr, [x19, #255]
  4501fc:	mov	x0, x19
  450200:	blr	x3
  450204:	mov	w0, #0x20                  	// #32
  450208:	strb	w0, [x19]
  45020c:	strb	w0, [x19, #264]
  450210:	mov	x1, #0x1                   	// #1
  450214:	ldr	x0, [x19, #320]
  450218:	str	x1, [x19, #256]
  45021c:	ldrsh	w1, [x24, #16]
  450220:	add	x0, x0, #0x1
  450224:	str	x0, [x19, #320]
  450228:	cbz	w1, 450294 <ferror@plt+0x4da14>
  45022c:	mov	w0, #0x5f                  	// #95
  450230:	mov	x1, #0x2                   	// #2
  450234:	strb	w0, [x19, #1]
  450238:	add	x3, x1, #0x1
  45023c:	str	x3, [x19, #256]
  450240:	mov	w0, #0x41                  	// #65
  450244:	strb	w0, [x19, x1]
  450248:	strb	w0, [x19, #264]
  45024c:	cmp	x3, #0xff
  450250:	b.ne	450738 <ferror@plt+0x4deb8>  // b.any
  450254:	ldp	x4, x2, [x19, #272]
  450258:	strb	wzr, [x19, #255]
  45025c:	mov	x1, x3
  450260:	mov	x0, x19
  450264:	blr	x4
  450268:	ldr	x0, [x19, #320]
  45026c:	mov	w2, #0x6363                	// #25443
  450270:	mov	x1, #0x2                   	// #2
  450274:	strh	w2, [x19]
  450278:	add	x0, x0, #0x1
  45027c:	str	x0, [x19, #320]
  450280:	add	x0, x1, #0x1
  450284:	mov	w2, #0x75                  	// #117
  450288:	strb	w2, [x19, x1]
  45028c:	add	x1, x0, #0x1
  450290:	b	44acac <ferror@plt+0x4842c>
  450294:	mov	w0, #0x5f                  	// #95
  450298:	mov	x1, #0x2                   	// #2
  45029c:	strb	w0, [x19, #1]
  4502a0:	add	x3, x1, #0x1
  4502a4:	str	x3, [x19, #256]
  4502a8:	mov	w0, #0x46                  	// #70
  4502ac:	strb	w0, [x19, x1]
  4502b0:	strb	w0, [x19, #264]
  4502b4:	cmp	x3, #0xff
  4502b8:	b.ne	450554 <ferror@plt+0x4dcd4>  // b.any
  4502bc:	ldp	x4, x2, [x19, #272]
  4502c0:	strb	wzr, [x19, #255]
  4502c4:	mov	x1, x3
  4502c8:	mov	x0, x19
  4502cc:	blr	x4
  4502d0:	ldr	x0, [x19, #320]
  4502d4:	mov	w2, #0x6172                	// #24946
  4502d8:	mov	x1, #0x2                   	// #2
  4502dc:	strh	w2, [x19]
  4502e0:	add	x0, x0, #0x1
  4502e4:	str	x0, [x19, #320]
  4502e8:	add	x0, x1, #0x1
  4502ec:	mov	w2, #0x63                  	// #99
  4502f0:	strb	w2, [x19, x1]
  4502f4:	add	x1, x0, #0x1
  4502f8:	b	44f6e8 <ferror@plt+0x4ce68>
  4502fc:	ldr	x1, [x19, #256]
  450300:	cmp	x1, #0xff
  450304:	b.ne	450328 <ferror@plt+0x4daa8>  // b.any
  450308:	ldp	x3, x2, [x19, #272]
  45030c:	strb	wzr, [x19, #255]
  450310:	mov	x0, x19
  450314:	blr	x3
  450318:	ldr	x0, [x19, #320]
  45031c:	mov	x1, #0x0                   	// #0
  450320:	add	x0, x0, #0x1
  450324:	str	x0, [x19, #320]
  450328:	add	x0, x1, #0x1
  45032c:	str	x0, [x19, #256]
  450330:	mov	w0, #0x5d                  	// #93
  450334:	strb	w0, [x19, x1]
  450338:	strb	w0, [x19, #264]
  45033c:	ldp	x21, x22, [sp, #32]
  450340:	ldp	x23, x24, [sp, #48]
  450344:	b	448e38 <ferror@plt+0x465b8>
  450348:	mov	w1, #0x1                   	// #1
  45034c:	str	w1, [x19, #304]
  450350:	b	44b62c <ferror@plt+0x48dac>
  450354:	ldp	x21, x22, [sp, #32]
  450358:	ldp	x23, x24, [sp, #48]
  45035c:	b	448e38 <ferror@plt+0x465b8>
  450360:	ldp	x21, x22, [sp, #32]
  450364:	ldp	x23, x24, [sp, #48]
  450368:	b	448e38 <ferror@plt+0x465b8>
  45036c:	ldp	x21, x22, [sp, #32]
  450370:	ldp	x23, x24, [sp, #48]
  450374:	b	448e38 <ferror@plt+0x465b8>
  450378:	ldp	x21, x22, [sp, #32]
  45037c:	ldp	x23, x24, [sp, #48]
  450380:	b	448e38 <ferror@plt+0x465b8>
  450384:	ldp	x21, x22, [sp, #32]
  450388:	ldp	x23, x24, [sp, #48]
  45038c:	b	448e38 <ferror@plt+0x465b8>
  450390:	ldp	x21, x22, [sp, #32]
  450394:	ldp	x23, x24, [sp, #48]
  450398:	b	448e38 <ferror@plt+0x465b8>
  45039c:	ldp	x21, x22, [sp, #32]
  4503a0:	ldp	x23, x24, [sp, #48]
  4503a4:	b	448e38 <ferror@plt+0x465b8>
  4503a8:	ldp	x21, x22, [sp, #32]
  4503ac:	ldp	x23, x24, [sp, #48]
  4503b0:	b	448e38 <ferror@plt+0x465b8>
  4503b4:	ldp	x21, x22, [sp, #32]
  4503b8:	ldp	x23, x24, [sp, #48]
  4503bc:	ldp	x25, x26, [sp, #64]
  4503c0:	b	448e38 <ferror@plt+0x465b8>
  4503c4:	mov	w0, #0x1                   	// #1
  4503c8:	str	w0, [x19, #304]
  4503cc:	b	44d844 <ferror@plt+0x4afc4>
  4503d0:	mov	w1, #0x1                   	// #1
  4503d4:	str	w1, [x19, #304]
  4503d8:	b	44ff48 <ferror@plt+0x4d6c8>
  4503dc:	mov	w1, #0x1                   	// #1
  4503e0:	str	w1, [x19, #304]
  4503e4:	cbz	x0, 44fe3c <ferror@plt+0x4d5bc>
  4503e8:	ldr	x0, [sp, #112]
  4503ec:	str	x0, [x19, #288]
  4503f0:	b	44fe3c <ferror@plt+0x4d5bc>
  4503f4:	mov	w21, #0x0                   	// #0
  4503f8:	ldr	x4, [x19, #288]
  4503fc:	b	4491f8 <ferror@plt+0x46978>
  450400:	mov	x2, x25
  450404:	mov	w1, w22
  450408:	mov	x0, x19
  45040c:	bl	451c50 <ferror@plt+0x4f3d0>
  450410:	ldp	x21, x22, [sp, #32]
  450414:	ldp	x23, x24, [sp, #48]
  450418:	ldp	x25, x26, [sp, #64]
  45041c:	b	448e38 <ferror@plt+0x465b8>
  450420:	add	x3, x0, #0x2
  450424:	str	x3, [x19, #256]
  450428:	mov	w2, #0x68                  	// #104
  45042c:	strb	w2, [x19, x1]
  450430:	strb	w2, [x19, #264]
  450434:	cmp	x3, #0xff
  450438:	b.ne	450d54 <ferror@plt+0x4e4d4>  // b.any
  45043c:	ldp	x4, x2, [x19, #272]
  450440:	strb	wzr, [x19, #255]
  450444:	mov	x1, x3
  450448:	mov	x0, x19
  45044c:	blr	x4
  450450:	ldr	x1, [x19, #320]
  450454:	mov	w2, #0x69                  	// #105
  450458:	mov	x0, #0x1                   	// #1
  45045c:	strb	w2, [x19]
  450460:	add	x1, x1, x0
  450464:	str	x1, [x19, #320]
  450468:	b	4495f0 <ferror@plt+0x46d70>
  45046c:	add	x1, x0, #0x2
  450470:	str	x1, [x19, #256]
  450474:	mov	w2, #0x75                  	// #117
  450478:	strb	w2, [x19, x3]
  45047c:	strb	w2, [x19, #264]
  450480:	cmp	x1, #0xff
  450484:	b.ne	4506ec <ferror@plt+0x4de6c>  // b.any
  450488:	ldp	x3, x2, [x19, #272]
  45048c:	strb	wzr, [x19, #255]
  450490:	mov	x0, x19
  450494:	blr	x3
  450498:	ldr	x1, [x19, #320]
  45049c:	mov	w2, #0x74                  	// #116
  4504a0:	mov	x0, #0x1                   	// #1
  4504a4:	strb	w2, [x19]
  4504a8:	add	x1, x1, x0
  4504ac:	str	x1, [x19, #320]
  4504b0:	b	44c294 <ferror@plt+0x49a14>
  4504b4:	ldr	x25, [x25, #8]
  4504b8:	cbz	x25, 451ac8 <ferror@plt+0x4f248>
  4504bc:	ldr	w4, [x25]
  4504c0:	add	x1, x21, #0x20
  4504c4:	stp	x1, x25, [sp, #192]
  4504c8:	sub	w1, w4, #0x1c
  4504cc:	str	wzr, [sp, #208]
  4504d0:	cmp	w1, #0x34
  4504d4:	str	x3, [sp, #216]
  4504d8:	b.hi	4518e4 <ferror@plt+0x4f064>  // b.pmore
  4504dc:	lsl	x0, x0, x1
  4504e0:	add	x1, x21, #0x40
  4504e4:	tst	x0, x2
  4504e8:	b.eq	449770 <ferror@plt+0x46ef0>  // b.none
  4504ec:	ldr	x25, [x25, #8]
  4504f0:	cbz	x25, 450b68 <ferror@plt+0x4e2e8>
  4504f4:	ldr	w4, [x25]
  4504f8:	stp	x1, x25, [sp, #224]
  4504fc:	sub	w0, w4, #0x1c
  450500:	str	wzr, [sp, #240]
  450504:	cmp	w0, #0x34
  450508:	str	x3, [sp, #248]
  45050c:	b.hi	451a08 <ferror@plt+0x4f188>  // b.pmore
  450510:	mov	x1, #0x1f                  	// #31
  450514:	mov	x2, #0x1                   	// #1
  450518:	movk	x1, #0x1a, lsl #48
  45051c:	lsl	x0, x2, x0
  450520:	mov	w20, #0x4                   	// #4
  450524:	tst	x0, x1
  450528:	add	x1, x21, #0x60
  45052c:	b.eq	449770 <ferror@plt+0x46ef0>  // b.none
  450530:	ldr	x0, [x25, #8]
  450534:	mov	x21, x1
  450538:	cbz	x0, 450b6c <ferror@plt+0x4e2ec>
  45053c:	ldp	x21, x22, [sp, #32]
  450540:	ldp	x23, x24, [sp, #48]
  450544:	ldp	x25, x26, [sp, #64]
  450548:	str	x1, [x19, #296]
  45054c:	str	w2, [x19, #304]
  450550:	b	448e38 <ferror@plt+0x465b8>
  450554:	add	x0, x1, #0x2
  450558:	str	x0, [x19, #256]
  45055c:	mov	w1, #0x72                  	// #114
  450560:	strb	w1, [x19, x3]
  450564:	strb	w1, [x19, #264]
  450568:	cmp	x0, #0xff
  45056c:	b.ne	450620 <ferror@plt+0x4dda0>  // b.any
  450570:	ldp	x3, x2, [x19, #272]
  450574:	strb	wzr, [x19, #255]
  450578:	mov	x1, x0
  45057c:	mov	x0, x19
  450580:	blr	x3
  450584:	ldr	x0, [x19, #320]
  450588:	mov	w2, #0x61                  	// #97
  45058c:	mov	x1, #0x1                   	// #1
  450590:	strb	w2, [x19]
  450594:	add	x0, x0, x1
  450598:	str	x0, [x19, #320]
  45059c:	b	4502e8 <ferror@plt+0x4da68>
  4505a0:	add	x0, x0, #0x3
  4505a4:	str	x0, [x19, #256]
  4505a8:	mov	w2, #0x61                  	// #97
  4505ac:	strb	w2, [x19, x1]
  4505b0:	strb	w2, [x19, #264]
  4505b4:	cmp	x0, #0xff
  4505b8:	b.ne	4506a0 <ferror@plt+0x4de20>  // b.any
  4505bc:	ldp	x3, x2, [x19, #272]
  4505c0:	strb	wzr, [x19, #255]
  4505c4:	mov	x1, x0
  4505c8:	mov	x0, x19
  4505cc:	blr	x3
  4505d0:	ldr	x0, [x19, #320]
  4505d4:	mov	w2, #0x72                  	// #114
  4505d8:	mov	x1, #0x1                   	// #1
  4505dc:	strb	w2, [x19]
  4505e0:	add	x0, x0, x1
  4505e4:	str	x0, [x19, #320]
  4505e8:	b	4501b0 <ferror@plt+0x4d930>
  4505ec:	ldp	x3, x2, [x19, #272]
  4505f0:	strb	wzr, [x19, #255]
  4505f4:	mov	x1, x0
  4505f8:	mov	x0, x19
  4505fc:	blr	x3
  450600:	ldr	x1, [x19, #320]
  450604:	mov	w3, #0x465f                	// #18015
  450608:	mov	w2, #0x72                  	// #114
  45060c:	mov	x0, #0x3                   	// #3
  450610:	add	x1, x1, #0x1
  450614:	strh	w3, [x19]
  450618:	strb	w2, [x19, #2]
  45061c:	str	x1, [x19, #320]
  450620:	add	x1, x0, #0x1
  450624:	str	x1, [x19, #256]
  450628:	mov	w2, #0x61                  	// #97
  45062c:	strb	w2, [x19, x0]
  450630:	strb	w2, [x19, #264]
  450634:	cmp	x1, #0xff
  450638:	b.ne	44f6a4 <ferror@plt+0x4ce24>  // b.any
  45063c:	ldp	x3, x2, [x19, #272]
  450640:	strb	wzr, [x19, #255]
  450644:	mov	x0, x19
  450648:	blr	x3
  45064c:	ldr	x1, [x19, #320]
  450650:	mov	x0, #0x1                   	// #1
  450654:	mov	w2, #0x63                  	// #99
  450658:	strb	w2, [x19]
  45065c:	add	x1, x1, x0
  450660:	str	x1, [x19, #320]
  450664:	add	x1, x0, #0x1
  450668:	b	44f6e8 <ferror@plt+0x4ce68>
  45066c:	ldp	x3, x2, [x19, #272]
  450670:	strb	wzr, [x19, #255]
  450674:	mov	x1, x0
  450678:	mov	x0, x19
  45067c:	blr	x3
  450680:	ldr	x1, [x19, #320]
  450684:	mov	w3, #0x707b                	// #28795
  450688:	mov	w2, #0x61                  	// #97
  45068c:	mov	x0, #0x3                   	// #3
  450690:	add	x1, x1, #0x1
  450694:	strh	w3, [x19]
  450698:	strb	w2, [x19, #2]
  45069c:	str	x1, [x19, #320]
  4506a0:	add	x1, x0, #0x1
  4506a4:	str	x1, [x19, #256]
  4506a8:	mov	w2, #0x72                  	// #114
  4506ac:	strb	w2, [x19, x0]
  4506b0:	strb	w2, [x19, #264]
  4506b4:	cmp	x1, #0xff
  4506b8:	b.ne	44da2c <ferror@plt+0x4b1ac>  // b.any
  4506bc:	ldp	x3, x2, [x19, #272]
  4506c0:	strb	wzr, [x19, #255]
  4506c4:	mov	x0, x19
  4506c8:	blr	x3
  4506cc:	ldr	x1, [x19, #320]
  4506d0:	mov	x0, #0x1                   	// #1
  4506d4:	mov	w2, #0x6d                  	// #109
  4506d8:	strb	w2, [x19]
  4506dc:	add	x1, x1, x0
  4506e0:	str	x1, [x19, #320]
  4506e4:	add	x1, x0, #0x1
  4506e8:	b	44da70 <ferror@plt+0x4b1f0>
  4506ec:	add	x0, x0, #0x3
  4506f0:	str	x0, [x19, #256]
  4506f4:	mov	w2, #0x74                  	// #116
  4506f8:	strb	w2, [x19, x1]
  4506fc:	strb	w2, [x19, #264]
  450700:	cmp	x0, #0xff
  450704:	b.ne	450d10 <ferror@plt+0x4e490>  // b.any
  450708:	ldp	x3, x2, [x19, #272]
  45070c:	strb	wzr, [x19, #255]
  450710:	mov	x1, x0
  450714:	mov	x0, x19
  450718:	blr	x3
  45071c:	ldr	x0, [x19, #320]
  450720:	mov	w2, #0x6f                  	// #111
  450724:	mov	x1, #0x1                   	// #1
  450728:	strb	w2, [x19]
  45072c:	add	x0, x0, x1
  450730:	str	x0, [x19, #320]
  450734:	b	44c2a0 <ferror@plt+0x49a20>
  450738:	add	x0, x1, #0x2
  45073c:	str	x0, [x19, #256]
  450740:	mov	w20, #0x63                  	// #99
  450744:	strb	w20, [x19, x3]
  450748:	strb	w20, [x19, #264]
  45074c:	cmp	x0, #0xff
  450750:	b.ne	4507b4 <ferror@plt+0x4df34>  // b.any
  450754:	ldp	x3, x2, [x19, #272]
  450758:	strb	wzr, [x19, #255]
  45075c:	mov	x1, x0
  450760:	mov	x0, x19
  450764:	blr	x3
  450768:	strb	w20, [x19]
  45076c:	ldr	x0, [x19, #320]
  450770:	mov	x1, #0x1                   	// #1
  450774:	add	x0, x0, x1
  450778:	str	x0, [x19, #320]
  45077c:	b	450280 <ferror@plt+0x4da00>
  450780:	ldp	x3, x2, [x19, #272]
  450784:	strb	wzr, [x19, #255]
  450788:	mov	x1, x0
  45078c:	mov	x0, x19
  450790:	blr	x3
  450794:	ldr	x1, [x19, #320]
  450798:	mov	w3, #0x415f                	// #16735
  45079c:	mov	w2, #0x63                  	// #99
  4507a0:	mov	x0, #0x3                   	// #3
  4507a4:	add	x1, x1, #0x1
  4507a8:	strh	w3, [x19]
  4507ac:	strb	w2, [x19, #2]
  4507b0:	str	x1, [x19, #320]
  4507b4:	add	x1, x0, #0x1
  4507b8:	str	x1, [x19, #256]
  4507bc:	mov	w2, #0x63                  	// #99
  4507c0:	strb	w2, [x19, x0]
  4507c4:	strb	w2, [x19, #264]
  4507c8:	cmp	x1, #0xff
  4507cc:	b.ne	44ac68 <ferror@plt+0x483e8>  // b.any
  4507d0:	ldp	x3, x2, [x19, #272]
  4507d4:	strb	wzr, [x19, #255]
  4507d8:	mov	x0, x19
  4507dc:	blr	x3
  4507e0:	ldr	x1, [x19, #320]
  4507e4:	mov	x0, #0x1                   	// #1
  4507e8:	mov	w2, #0x75                  	// #117
  4507ec:	strb	w2, [x19]
  4507f0:	add	x1, x1, x0
  4507f4:	str	x1, [x19, #320]
  4507f8:	add	x1, x0, #0x1
  4507fc:	b	44acac <ferror@plt+0x4842c>
  450800:	ldp	x3, x2, [x19, #272]
  450804:	strb	wzr, [x19, #255]
  450808:	mov	x0, x19
  45080c:	blr	x3
  450810:	ldr	x0, [x19, #320]
  450814:	mov	w1, #0x3a                  	// #58
  450818:	mov	x3, #0x1                   	// #1
  45081c:	strb	w1, [x19]
  450820:	add	x0, x0, x3
  450824:	str	x0, [x19, #320]
  450828:	add	x0, x3, #0x1
  45082c:	b	450028 <ferror@plt+0x4d7a8>
  450830:	cmp	x0, #0xff
  450834:	b.eq	451554 <ferror@plt+0x4ecd4>  // b.none
  450838:	add	x3, x0, #0x1
  45083c:	str	x3, [x19, #256]
  450840:	mov	w1, #0x7b                  	// #123
  450844:	strb	w1, [x19, x0]
  450848:	strb	w1, [x19, #264]
  45084c:	cmp	x3, #0xff
  450850:	b.ne	45130c <ferror@plt+0x4ea8c>  // b.any
  450854:	ldp	x4, x2, [x19, #272]
  450858:	strb	wzr, [x19, #255]
  45085c:	mov	x1, x3
  450860:	mov	x0, x19
  450864:	blr	x4
  450868:	ldr	x0, [x19, #320]
  45086c:	mov	w2, #0x6564                	// #25956
  450870:	mov	w1, #0x66                  	// #102
  450874:	mov	x3, #0x3                   	// #3
  450878:	add	x0, x0, #0x1
  45087c:	strh	w2, [x19]
  450880:	strb	w1, [x19, #2]
  450884:	str	x0, [x19, #320]
  450888:	add	x1, x3, #0x1
  45088c:	str	x1, [x19, #256]
  450890:	mov	w0, #0x61                  	// #97
  450894:	strb	w0, [x19, x3]
  450898:	strb	w0, [x19, #264]
  45089c:	cmp	x1, #0xff
  4508a0:	b.ne	451358 <ferror@plt+0x4ead8>  // b.any
  4508a4:	ldp	x3, x2, [x19, #272]
  4508a8:	strb	wzr, [x19, #255]
  4508ac:	mov	x0, x19
  4508b0:	blr	x3
  4508b4:	ldr	x1, [x19, #320]
  4508b8:	mov	w3, #0x6c75                	// #27765
  4508bc:	mov	w2, #0x74                  	// #116
  4508c0:	mov	x0, #0x3                   	// #3
  4508c4:	add	x1, x1, #0x1
  4508c8:	strh	w3, [x19]
  4508cc:	strb	w2, [x19, #2]
  4508d0:	str	x1, [x19, #320]
  4508d4:	add	x1, x0, #0x1
  4508d8:	str	x1, [x19, #256]
  4508dc:	mov	w2, #0x20                  	// #32
  4508e0:	strb	w2, [x19, x0]
  4508e4:	strb	w2, [x19, #264]
  4508e8:	cmp	x1, #0xff
  4508ec:	b.ne	4513a8 <ferror@plt+0x4eb28>  // b.any
  4508f0:	ldp	x3, x2, [x19, #272]
  4508f4:	strb	wzr, [x19, #255]
  4508f8:	mov	x0, x19
  4508fc:	blr	x3
  450900:	ldr	x0, [x19, #320]
  450904:	mov	w2, #0x7261                	// #29281
  450908:	mov	x1, #0x2                   	// #2
  45090c:	strh	w2, [x19]
  450910:	add	x0, x0, #0x1
  450914:	str	x0, [x19, #320]
  450918:	add	x0, x1, #0x1
  45091c:	mov	w2, #0x67                  	// #103
  450920:	strb	w2, [x19, x1]
  450924:	add	x2, x0, #0x1
  450928:	str	x2, [x19, #256]
  45092c:	mov	w2, #0x23                  	// #35
  450930:	strb	w2, [x19, x0]
  450934:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  450938:	strb	w2, [x19, #264]
  45093c:	add	x1, x1, #0x9e0
  450940:	add	x0, sp, #0x80
  450944:	ldr	w2, [x23, #16]
  450948:	add	w2, w2, #0x1
  45094c:	bl	402310 <sprintf@plt>
  450950:	add	x0, sp, #0x80
  450954:	bl	402270 <strlen@plt>
  450958:	cbz	x0, 451a70 <ferror@plt+0x4f1f0>
  45095c:	add	x20, sp, #0x80
  450960:	stp	x25, x26, [sp, #64]
  450964:	add	x24, x20, x0
  450968:	mov	x25, #0x1                   	// #1
  45096c:	ldr	x1, [x19, #256]
  450970:	b	4509cc <ferror@plt+0x4e14c>
  450974:	ldp	x3, x2, [x19, #272]
  450978:	strb	wzr, [x19, #255]
  45097c:	mov	x0, x19
  450980:	add	x20, x20, #0x1
  450984:	blr	x3
  450988:	strb	w21, [x19]
  45098c:	ldr	x0, [x19, #320]
  450990:	str	x25, [x19, #256]
  450994:	strb	w21, [x19, #264]
  450998:	cmp	x20, x24
  45099c:	add	x0, x0, #0x1
  4509a0:	str	x0, [x19, #320]
  4509a4:	b.eq	45172c <ferror@plt+0x4eeac>  // b.none
  4509a8:	ldrb	w21, [x20]
  4509ac:	mov	x0, #0x1                   	// #1
  4509b0:	add	x1, x0, #0x1
  4509b4:	str	x1, [x19, #256]
  4509b8:	strb	w21, [x19, x0]
  4509bc:	add	x20, x20, #0x1
  4509c0:	strb	w21, [x19, #264]
  4509c4:	cmp	x20, x24
  4509c8:	b.eq	44d0bc <ferror@plt+0x4a83c>  // b.none
  4509cc:	ldrb	w21, [x20]
  4509d0:	cmp	x1, #0xff
  4509d4:	b.eq	450974 <ferror@plt+0x4e0f4>  // b.none
  4509d8:	mov	x0, x1
  4509dc:	b	4509b0 <ferror@plt+0x4e130>
  4509e0:	ldp	x21, x22, [sp, #32]
  4509e4:	ldp	x23, x24, [sp, #48]
  4509e8:	b	448e38 <ferror@plt+0x465b8>
  4509ec:	mov	w0, #0x1                   	// #1
  4509f0:	ldp	x21, x22, [sp, #32]
  4509f4:	ldp	x23, x24, [sp, #48]
  4509f8:	str	w0, [x19, #304]
  4509fc:	b	448e38 <ferror@plt+0x465b8>
  450a00:	ldr	x25, [x25, #16]
  450a04:	ldr	w4, [x25]
  450a08:	cmp	w4, #0x47
  450a0c:	b.eq	451704 <ferror@plt+0x4ee84>  // b.none
  450a10:	sub	w2, w4, #0x1c
  450a14:	cmp	w2, #0x34
  450a18:	b.hi	44977c <ferror@plt+0x46efc>  // b.pmore
  450a1c:	mov	x0, #0x1                   	// #1
  450a20:	mov	x1, #0x1f                  	// #31
  450a24:	movk	x1, #0x1a, lsl #48
  450a28:	lsl	x2, x0, x2
  450a2c:	tst	x2, x1
  450a30:	b.eq	44977c <ferror@plt+0x46efc>  // b.none
  450a34:	cmp	w20, #0x4
  450a38:	b.eq	450b70 <ferror@plt+0x4e2f0>  // b.none
  450a3c:	sub	w2, w20, #0x1
  450a40:	ubfiz	x8, x20, #5, #32
  450a44:	add	x7, x21, x8
  450a48:	add	x9, sp, #0x88
  450a4c:	add	x12, x21, x2, lsl #5
  450a50:	lsl	x2, x2, #5
  450a54:	add	x11, sp, #0x90
  450a58:	add	x10, sp, #0x98
  450a5c:	add	w6, w20, #0x1
  450a60:	ldp	x4, x5, [x12]
  450a64:	stp	x4, x5, [x7]
  450a68:	ldp	x4, x5, [x12, #16]
  450a6c:	stp	x4, x5, [x7, #16]
  450a70:	str	x12, [x21, x8]
  450a74:	str	x25, [x9, x2]
  450a78:	ldr	x25, [x25, #8]
  450a7c:	str	wzr, [x11, x2]
  450a80:	str	x3, [x10, x2]
  450a84:	ldr	w4, [x25]
  450a88:	str	x7, [x19, #296]
  450a8c:	sub	w2, w4, #0x1c
  450a90:	cmp	w2, #0x34
  450a94:	b.hi	450aa4 <ferror@plt+0x4e224>  // b.pmore
  450a98:	lsl	x2, x0, x2
  450a9c:	tst	x2, x1
  450aa0:	b.ne	450aac <ferror@plt+0x4e22c>  // b.any
  450aa4:	mov	w20, w6
  450aa8:	b	44977c <ferror@plt+0x46efc>
  450aac:	cmp	w6, #0x4
  450ab0:	b.eq	450b70 <ferror@plt+0x4e2f0>  // b.none
  450ab4:	ubfiz	x6, x6, #5, #32
  450ab8:	add	w20, w20, #0x2
  450abc:	add	x2, x21, x6
  450ac0:	ldp	x4, x5, [x7]
  450ac4:	stp	x4, x5, [x2]
  450ac8:	ldp	x4, x5, [x7, #16]
  450acc:	stp	x4, x5, [x2, #16]
  450ad0:	str	x7, [x21, x6]
  450ad4:	str	x25, [x9, x8]
  450ad8:	ldr	x25, [x25, #8]
  450adc:	str	wzr, [x11, x8]
  450ae0:	str	x3, [x10, x8]
  450ae4:	ldr	w4, [x25]
  450ae8:	str	x2, [x19, #296]
  450aec:	sub	w2, w4, #0x1c
  450af0:	cmp	w2, #0x34
  450af4:	b.hi	44977c <ferror@plt+0x46efc>  // b.pmore
  450af8:	lsl	x0, x0, x2
  450afc:	tst	x0, x1
  450b00:	b.eq	44977c <ferror@plt+0x46efc>  // b.none
  450b04:	cmp	w20, #0x4
  450b08:	b.eq	450b70 <ferror@plt+0x4e2f0>  // b.none
  450b0c:	ldp	x0, x1, [sp, #192]
  450b10:	str	x25, [sp, #200]
  450b14:	ldr	x25, [x25, #8]
  450b18:	stp	x0, x1, [sp, #224]
  450b1c:	add	x1, x21, #0x40
  450b20:	ldp	x6, x7, [sp, #208]
  450b24:	add	x0, x21, #0x60
  450b28:	ldr	w4, [x25]
  450b2c:	str	wzr, [sp, #208]
  450b30:	stp	x3, x1, [sp, #216]
  450b34:	sub	w2, w4, #0x1c
  450b38:	cmp	w2, #0x34
  450b3c:	stp	x6, x7, [sp, #240]
  450b40:	str	x0, [x19, #296]
  450b44:	b.hi	450b60 <ferror@plt+0x4e2e0>  // b.pmore
  450b48:	mov	x0, #0x1                   	// #1
  450b4c:	mov	x1, #0x1f                  	// #31
  450b50:	movk	x1, #0x1a, lsl #48
  450b54:	lsl	x0, x0, x2
  450b58:	tst	x0, x1
  450b5c:	b.ne	450b70 <ferror@plt+0x4e2f0>  // b.any
  450b60:	mov	w20, #0x4                   	// #4
  450b64:	b	44977c <ferror@plt+0x46efc>
  450b68:	add	x21, x21, #0x40
  450b6c:	str	x21, [x19, #296]
  450b70:	mov	w0, #0x1                   	// #1
  450b74:	ldp	x21, x22, [sp, #32]
  450b78:	ldp	x23, x24, [sp, #48]
  450b7c:	ldp	x25, x26, [sp, #64]
  450b80:	str	w0, [x19, #304]
  450b84:	b	448e38 <ferror@plt+0x465b8>
  450b88:	mov	w1, #0x1                   	// #1
  450b8c:	str	w1, [x19, #304]
  450b90:	b	44fb34 <ferror@plt+0x4d2b4>
  450b94:	ldr	x4, [x19, #288]
  450b98:	add	x0, sp, #0x80
  450b9c:	str	x0, [x19, #296]
  450ba0:	mov	w1, w20
  450ba4:	mov	x0, x19
  450ba8:	stp	x3, x24, [sp, #128]
  450bac:	str	wzr, [sp, #144]
  450bb0:	str	x4, [sp, #152]
  450bb4:	bl	451c50 <ferror@plt+0x4f3d0>
  450bb8:	ldr	w0, [sp, #144]
  450bbc:	ldr	x1, [sp, #128]
  450bc0:	str	x1, [x19, #296]
  450bc4:	cbnz	w0, 451784 <ferror@plt+0x4ef04>
  450bc8:	ldr	x1, [x19, #256]
  450bcc:	cmp	x1, #0xff
  450bd0:	b.ne	450bf8 <ferror@plt+0x4e378>  // b.any
  450bd4:	ldp	x3, x2, [x19, #272]
  450bd8:	strb	wzr, [x19, #255]
  450bdc:	mov	x0, x19
  450be0:	blr	x3
  450be4:	str	xzr, [x19, #256]
  450be8:	ldr	x0, [x19, #320]
  450bec:	mov	x1, #0x0                   	// #0
  450bf0:	add	x0, x0, #0x1
  450bf4:	str	x0, [x19, #320]
  450bf8:	add	x0, x1, #0x1
  450bfc:	str	x0, [x19, #256]
  450c00:	mov	w0, #0x20                  	// #32
  450c04:	strb	w0, [x19, x1]
  450c08:	strb	w0, [x19, #264]
  450c0c:	ldr	x3, [x19, #296]
  450c10:	b	4498b4 <ferror@plt+0x47034>
  450c14:	ldr	w4, [x19, #344]
  450c18:	ldr	x5, [x19, #336]
  450c1c:	cmp	w4, #0x0
  450c20:	b.le	451958 <ferror@plt+0x4f0d8>
  450c24:	sub	w2, w4, #0x1
  450c28:	add	x0, x5, #0x10
  450c2c:	mov	x1, x5
  450c30:	add	x2, x0, w2, uxtw #4
  450c34:	b	450c44 <ferror@plt+0x4e3c4>
  450c38:	add	x1, x1, #0x10
  450c3c:	cmp	x2, x1
  450c40:	b.eq	451958 <ferror@plt+0x4f0d8>  // b.none
  450c44:	ldr	x0, [x1]
  450c48:	cmp	x3, x0
  450c4c:	b.ne	450c38 <ferror@plt+0x4e3b8>  // b.any
  450c50:	ldr	x4, [x19, #328]
  450c54:	mov	x0, x4
  450c58:	cbnz	x4, 450c74 <ferror@plt+0x4e3f4>
  450c5c:	b	451714 <ferror@plt+0x4ee94>
  450c60:	cmp	x2, x24
  450c64:	ccmp	x4, x0, #0x4, eq  // eq = none
  450c68:	b.ne	450c80 <ferror@plt+0x4e400>  // b.any
  450c6c:	ldr	x0, [x0, #8]
  450c70:	cbz	x0, 451714 <ferror@plt+0x4ee94>
  450c74:	ldr	x2, [x0]
  450c78:	cmp	x2, x3
  450c7c:	b.ne	450c60 <ferror@plt+0x4e3e0>  // b.any
  450c80:	ldr	x4, [x19, #288]
  450c84:	cbz	x4, 451bf0 <ferror@plt+0x4f370>
  450c88:	mov	w21, #0x0                   	// #0
  450c8c:	ldr	x2, [x3, #8]
  450c90:	ldr	x0, [x4, #8]
  450c94:	mov	w1, w2
  450c98:	ldr	x0, [x0, #16]
  450c9c:	tbnz	w2, #31, 4512a0 <ferror@plt+0x4ea20>
  450ca0:	cbnz	x0, 450cb8 <ferror@plt+0x4e438>
  450ca4:	b	450cc4 <ferror@plt+0x4e444>
  450ca8:	cbz	w1, 45129c <ferror@plt+0x4ea1c>
  450cac:	ldr	x0, [x0, #16]
  450cb0:	sub	w1, w1, #0x1
  450cb4:	cbz	x0, 450cc4 <ferror@plt+0x4e444>
  450cb8:	ldr	w2, [x0]
  450cbc:	cmp	w2, #0x2f
  450cc0:	b.eq	450ca8 <ferror@plt+0x4e428>  // b.none
  450cc4:	cbz	w21, 451bf0 <ferror@plt+0x4f370>
  450cc8:	ldp	x21, x22, [sp, #32]
  450ccc:	ldp	x25, x26, [sp, #64]
  450cd0:	str	x23, [x19, #288]
  450cd4:	ldp	x23, x24, [sp, #48]
  450cd8:	b	448e6c <ferror@plt+0x465ec>
  450cdc:	ldp	x3, x2, [x19, #272]
  450ce0:	strb	wzr, [x19, #255]
  450ce4:	mov	x1, x0
  450ce8:	mov	x0, x19
  450cec:	blr	x3
  450cf0:	ldr	x1, [x19, #320]
  450cf4:	mov	w3, #0x7561                	// #30049
  450cf8:	mov	w2, #0x74                  	// #116
  450cfc:	mov	x0, #0x3                   	// #3
  450d00:	add	x1, x1, #0x1
  450d04:	strh	w3, [x19]
  450d08:	strb	w2, [x19, #2]
  450d0c:	str	x1, [x19, #320]
  450d10:	add	x1, x0, #0x1
  450d14:	str	x1, [x19, #256]
  450d18:	mov	w2, #0x6f                  	// #111
  450d1c:	strb	w2, [x19, x0]
  450d20:	strb	w2, [x19, #264]
  450d24:	cmp	x1, #0xff
  450d28:	b.ne	44c2a0 <ferror@plt+0x49a20>  // b.any
  450d2c:	ldp	x3, x2, [x19, #272]
  450d30:	strb	wzr, [x19, #255]
  450d34:	mov	x0, x19
  450d38:	blr	x3
  450d3c:	ldr	x2, [x19, #320]
  450d40:	mov	x0, #0x1                   	// #1
  450d44:	mov	x1, #0x0                   	// #0
  450d48:	add	x2, x2, x0
  450d4c:	str	x2, [x19, #320]
  450d50:	b	44c2a4 <ferror@plt+0x49a24>
  450d54:	add	x0, x0, #0x3
  450d58:	str	x0, [x19, #256]
  450d5c:	mov	w1, #0x69                  	// #105
  450d60:	strb	w1, [x19, x3]
  450d64:	strb	w1, [x19, #264]
  450d68:	cmp	x0, #0xff
  450d6c:	b.ne	4495f0 <ferror@plt+0x46d70>  // b.any
  450d70:	ldp	x3, x2, [x19, #272]
  450d74:	strb	wzr, [x19, #255]
  450d78:	mov	x1, x0
  450d7c:	mov	x0, x19
  450d80:	blr	x3
  450d84:	ldr	x2, [x19, #320]
  450d88:	mov	x1, #0x1                   	// #1
  450d8c:	mov	x0, #0x0                   	// #0
  450d90:	add	x2, x2, x1
  450d94:	str	x2, [x19, #320]
  450d98:	b	4495f4 <ferror@plt+0x46d74>
  450d9c:	add	x3, x2, #0x10
  450da0:	mov	w1, w22
  450da4:	ldr	x2, [x2, #8]
  450da8:	mov	x0, x19
  450dac:	bl	451fa0 <ferror@plt+0x4f720>
  450db0:	cbnz	w0, 4518cc <ferror@plt+0x4f04c>
  450db4:	stp	x25, x26, [sp, #64]
  450db8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  450dbc:	add	x1, x1, #0x6c0
  450dc0:	ldp	x25, x3, [x24, #8]
  450dc4:	ldr	x0, [x25, #8]
  450dc8:	ldp	x21, x2, [x3, #8]
  450dcc:	ldr	x0, [x0]
  450dd0:	ldp	x23, x20, [x2, #8]
  450dd4:	bl	4025d0 <strcmp@plt>
  450dd8:	cbnz	w0, 451828 <ferror@plt+0x4efa8>
  450ddc:	mov	x2, x21
  450de0:	mov	w1, w22
  450de4:	mov	x0, x19
  450de8:	bl	451e50 <ferror@plt+0x4f5d0>
  450dec:	mov	x2, x25
  450df0:	mov	w1, w22
  450df4:	mov	x0, x19
  450df8:	bl	451ce8 <ferror@plt+0x4f468>
  450dfc:	mov	x2, x23
  450e00:	mov	w1, w22
  450e04:	mov	x0, x19
  450e08:	bl	451e50 <ferror@plt+0x4f5d0>
  450e0c:	mov	x0, x19
  450e10:	mov	x2, #0x3                   	// #3
  450e14:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  450e18:	add	x1, x1, #0x6c8
  450e1c:	bl	448118 <ferror@plt+0x45898>
  450e20:	mov	w1, w22
  450e24:	mov	x2, x20
  450e28:	mov	x0, x19
  450e2c:	bl	451e50 <ferror@plt+0x4f5d0>
  450e30:	ldp	x21, x22, [sp, #32]
  450e34:	ldp	x23, x24, [sp, #48]
  450e38:	ldp	x25, x26, [sp, #64]
  450e3c:	b	448e38 <ferror@plt+0x465b8>
  450e40:	ldp	x3, x2, [x19, #272]
  450e44:	strb	wzr, [x19, #255]
  450e48:	mov	x1, x0
  450e4c:	mov	x0, x19
  450e50:	blr	x3
  450e54:	ldr	x0, [x19, #320]
  450e58:	mov	w2, #0x6874                	// #26740
  450e5c:	mov	x1, #0x2                   	// #2
  450e60:	strh	w2, [x19]
  450e64:	add	x0, x0, #0x1
  450e68:	str	x0, [x19, #320]
  450e6c:	b	4495e4 <ferror@plt+0x46d64>
  450e70:	ldrb	w0, [x0]
  450e74:	sub	w1, w0, #0x63
  450e78:	sub	w0, w0, #0x72
  450e7c:	and	w1, w1, #0xff
  450e80:	and	w0, w0, #0xff
  450e84:	cmp	w1, #0x1
  450e88:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  450e8c:	b.hi	44b6b4 <ferror@plt+0x48e34>  // b.pmore
  450e90:	mov	w1, w22
  450e94:	mov	x0, x19
  450e98:	bl	451ce8 <ferror@plt+0x4f468>
  450e9c:	ldr	x1, [x19, #256]
  450ea0:	cmp	x1, #0xff
  450ea4:	b.ne	450ecc <ferror@plt+0x4e64c>  // b.any
  450ea8:	ldp	x3, x2, [x19, #272]
  450eac:	strb	wzr, [x19, #255]
  450eb0:	mov	x0, x19
  450eb4:	blr	x3
  450eb8:	str	xzr, [x19, #256]
  450ebc:	ldr	x0, [x19, #320]
  450ec0:	mov	x1, #0x0                   	// #0
  450ec4:	add	x0, x0, #0x1
  450ec8:	str	x0, [x19, #320]
  450ecc:	add	x0, x1, #0x1
  450ed0:	str	x0, [x19, #256]
  450ed4:	mov	w0, #0x3c                  	// #60
  450ed8:	strb	w0, [x19, x1]
  450edc:	strb	w0, [x19, #264]
  450ee0:	mov	w1, w22
  450ee4:	mov	x0, x19
  450ee8:	ldr	x2, [x24, #16]
  450eec:	ldr	x2, [x2, #8]
  450ef0:	bl	451c50 <ferror@plt+0x4f3d0>
  450ef4:	ldr	x1, [x19, #256]
  450ef8:	cmp	x1, #0xff
  450efc:	b.eq	4513f4 <ferror@plt+0x4eb74>  // b.none
  450f00:	add	x0, x1, #0x1
  450f04:	str	x0, [x19, #256]
  450f08:	mov	w2, #0x3e                  	// #62
  450f0c:	strb	w2, [x19, x1]
  450f10:	strb	w2, [x19, #264]
  450f14:	cmp	x0, #0xff
  450f18:	b.ne	45141c <ferror@plt+0x4eb9c>  // b.any
  450f1c:	ldp	x3, x2, [x19, #272]
  450f20:	strb	wzr, [x19, #255]
  450f24:	mov	x1, x0
  450f28:	mov	x0, x19
  450f2c:	blr	x3
  450f30:	ldr	x1, [x19, #320]
  450f34:	mov	x2, #0x1                   	// #1
  450f38:	mov	x0, #0x0                   	// #0
  450f3c:	add	x1, x1, x2
  450f40:	str	x1, [x19, #320]
  450f44:	str	x2, [x19, #256]
  450f48:	mov	w2, #0x28                  	// #40
  450f4c:	strb	w2, [x19, x0]
  450f50:	mov	w1, w22
  450f54:	strb	w2, [x19, #264]
  450f58:	mov	x0, x19
  450f5c:	ldr	x2, [x24, #16]
  450f60:	ldr	x2, [x2, #16]
  450f64:	bl	451c50 <ferror@plt+0x4f3d0>
  450f68:	ldr	x1, [x19, #256]
  450f6c:	cmp	x1, #0xff
  450f70:	b.ne	450f98 <ferror@plt+0x4e718>  // b.any
  450f74:	ldp	x3, x2, [x19, #272]
  450f78:	strb	wzr, [x19, #255]
  450f7c:	mov	x0, x19
  450f80:	blr	x3
  450f84:	str	xzr, [x19, #256]
  450f88:	ldr	x0, [x19, #320]
  450f8c:	mov	x1, #0x0                   	// #0
  450f90:	add	x0, x0, #0x1
  450f94:	str	x0, [x19, #320]
  450f98:	add	x0, x1, #0x1
  450f9c:	str	x0, [x19, #256]
  450fa0:	mov	w0, #0x29                  	// #41
  450fa4:	strb	w0, [x19, x1]
  450fa8:	strb	w0, [x19, #264]
  450fac:	ldp	x21, x22, [sp, #32]
  450fb0:	ldp	x23, x24, [sp, #48]
  450fb4:	b	448e38 <ferror@plt+0x465b8>
  450fb8:	add	x1, x0, #0x2
  450fbc:	str	x1, [x19, #256]
  450fc0:	mov	w2, #0x53                  	// #83
  450fc4:	strb	w2, [x19, x3]
  450fc8:	strb	w2, [x19, #264]
  450fcc:	cmp	x1, #0xff
  450fd0:	b.ne	451018 <ferror@plt+0x4e798>  // b.any
  450fd4:	ldp	x3, x2, [x19, #272]
  450fd8:	strb	wzr, [x19, #255]
  450fdc:	mov	x0, x19
  450fe0:	blr	x3
  450fe4:	ldr	x1, [x19, #320]
  450fe8:	mov	w2, #0x61                  	// #97
  450fec:	mov	x0, #0x1                   	// #1
  450ff0:	strb	w2, [x19]
  450ff4:	add	x1, x1, x0
  450ff8:	str	x1, [x19, #320]
  450ffc:	b	4500e4 <ferror@plt+0x4d864>
  451000:	ldr	x0, [x19, #256]
  451004:	cmp	x0, x21
  451008:	b.eq	44d748 <ferror@plt+0x4aec8>  // b.none
  45100c:	ldp	x21, x22, [sp, #32]
  451010:	ldp	x23, x24, [sp, #48]
  451014:	b	448e38 <ferror@plt+0x465b8>
  451018:	add	x0, x0, #0x3
  45101c:	str	x0, [x19, #256]
  451020:	mov	w2, #0x61                  	// #97
  451024:	strb	w2, [x19, x1]
  451028:	strb	w2, [x19, #264]
  45102c:	cmp	x0, #0xff
  451030:	b.ne	451228 <ferror@plt+0x4e9a8>  // b.any
  451034:	ldp	x3, x2, [x19, #272]
  451038:	strb	wzr, [x19, #255]
  45103c:	mov	x1, x0
  451040:	mov	x0, x19
  451044:	blr	x3
  451048:	ldr	x0, [x19, #320]
  45104c:	mov	w2, #0x74                  	// #116
  451050:	mov	x1, #0x1                   	// #1
  451054:	strb	w2, [x19]
  451058:	add	x0, x0, x1
  45105c:	str	x0, [x19, #320]
  451060:	b	4500f0 <ferror@plt+0x4d870>
  451064:	ldp	x21, x22, [sp, #32]
  451068:	ldp	x23, x24, [sp, #48]
  45106c:	b	448e38 <ferror@plt+0x465b8>
  451070:	ldp	x21, x22, [sp, #32]
  451074:	ldp	x23, x24, [sp, #48]
  451078:	b	448e38 <ferror@plt+0x465b8>
  45107c:	ldp	x21, x22, [sp, #32]
  451080:	ldp	x23, x24, [sp, #48]
  451084:	b	448e38 <ferror@plt+0x465b8>
  451088:	ldr	w0, [x23, #4]
  45108c:	mov	x1, x2
  451090:	cmp	w0, #0x1
  451094:	b.le	4492f4 <ferror@plt+0x46a74>
  451098:	b	450144 <ferror@plt+0x4d8c4>
  45109c:	ldp	x21, x22, [sp, #32]
  4510a0:	ldp	x23, x24, [sp, #48]
  4510a4:	b	448e38 <ferror@plt+0x465b8>
  4510a8:	sub	w3, w0, #0x61
  4510ac:	and	w3, w3, #0xff
  4510b0:	cmp	w3, #0x5
  4510b4:	b.hi	451a14 <ferror@plt+0x4f194>  // b.pmore
  4510b8:	sub	w0, w0, #0x57
  4510bc:	b	44d998 <ferror@plt+0x4b118>
  4510c0:	ldp	x21, x22, [sp, #32]
  4510c4:	ldp	x23, x24, [sp, #48]
  4510c8:	b	448e38 <ferror@plt+0x465b8>
  4510cc:	ldr	w1, [x19, #316]
  4510d0:	tbnz	w1, #31, 44d7d4 <ferror@plt+0x4af54>
  4510d4:	mov	x0, x20
  4510d8:	bl	4481e8 <ferror@plt+0x45968>
  4510dc:	mov	x20, x0
  4510e0:	cbnz	x0, 44d7d4 <ferror@plt+0x4af54>
  4510e4:	b	448e64 <ferror@plt+0x465e4>
  4510e8:	mov	w2, w3
  4510ec:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4510f0:	add	x1, x1, #0x9e0
  4510f4:	add	x0, sp, #0x80
  4510f8:	bl	402310 <sprintf@plt>
  4510fc:	add	x0, sp, #0x80
  451100:	bl	402270 <strlen@plt>
  451104:	cbz	x0, 451be4 <ferror@plt+0x4f364>
  451108:	add	x20, sp, #0x80
  45110c:	mov	x23, #0x1                   	// #1
  451110:	add	x22, x20, x0
  451114:	ldr	x1, [x19, #256]
  451118:	b	451174 <ferror@plt+0x4e8f4>
  45111c:	ldp	x3, x2, [x19, #272]
  451120:	strb	wzr, [x19, #255]
  451124:	mov	x0, x19
  451128:	add	x20, x20, #0x1
  45112c:	blr	x3
  451130:	strb	w21, [x19]
  451134:	ldr	x0, [x19, #320]
  451138:	str	x23, [x19, #256]
  45113c:	strb	w21, [x19, #264]
  451140:	cmp	x20, x22
  451144:	add	x0, x0, #0x1
  451148:	str	x0, [x19, #320]
  45114c:	b.eq	451918 <ferror@plt+0x4f098>  // b.none
  451150:	ldrb	w21, [x20]
  451154:	mov	x0, #0x1                   	// #1
  451158:	add	x1, x0, #0x1
  45115c:	str	x1, [x19, #256]
  451160:	strb	w21, [x19, x0]
  451164:	add	x20, x20, #0x1
  451168:	strb	w21, [x19, #264]
  45116c:	cmp	x22, x20
  451170:	b.eq	4516f8 <ferror@plt+0x4ee78>  // b.none
  451174:	ldrb	w21, [x20]
  451178:	cmp	x1, #0xff
  45117c:	b.eq	45111c <ferror@plt+0x4e89c>  // b.none
  451180:	mov	x0, x1
  451184:	b	451158 <ferror@plt+0x4e8d8>
  451188:	cmp	w1, #0x63
  45118c:	b.eq	451804 <ferror@plt+0x4ef84>  // b.none
  451190:	mov	w1, w22
  451194:	mov	x0, x19
  451198:	bl	451ce8 <ferror@plt+0x4f468>
  45119c:	ldr	x2, [x24, #16]
  4511a0:	mov	w1, w22
  4511a4:	mov	x0, x19
  4511a8:	ldr	x2, [x2, #16]
  4511ac:	bl	451e50 <ferror@plt+0x4f5d0>
  4511b0:	b	44b7e8 <ferror@plt+0x48f68>
  4511b4:	ldr	x0, [x20, #8]
  4511b8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4511bc:	mov	x2, #0x6                   	// #6
  4511c0:	add	x1, x1, #0x540
  4511c4:	bl	402400 <strncmp@plt>
  4511c8:	cbnz	w0, 44bfe0 <ferror@plt+0x49760>
  4511cc:	ldr	x2, [x24, #16]
  4511d0:	mov	w1, w22
  4511d4:	mov	x0, x19
  4511d8:	bl	451c50 <ferror@plt+0x4f3d0>
  4511dc:	mov	x0, x19
  4511e0:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4511e4:	mov	x2, #0x2                   	// #2
  4511e8:	add	x1, x1, #0x900
  4511ec:	bl	448118 <ferror@plt+0x45898>
  4511f0:	b	44c19c <ferror@plt+0x4991c>
  4511f4:	ldp	x3, x2, [x19, #272]
  4511f8:	strb	wzr, [x19, #255]
  4511fc:	mov	x1, x0
  451200:	mov	x0, x19
  451204:	blr	x3
  451208:	ldr	x1, [x19, #320]
  45120c:	mov	w3, #0x535f                	// #21343
  451210:	mov	w2, #0x61                  	// #97
  451214:	mov	x0, #0x3                   	// #3
  451218:	add	x1, x1, #0x1
  45121c:	strh	w3, [x19]
  451220:	strb	w2, [x19, #2]
  451224:	str	x1, [x19, #320]
  451228:	add	x1, x0, #0x1
  45122c:	str	x1, [x19, #256]
  451230:	mov	w2, #0x74                  	// #116
  451234:	strb	w2, [x19, x0]
  451238:	strb	w2, [x19, #264]
  45123c:	cmp	x1, #0xff
  451240:	b.ne	4500f0 <ferror@plt+0x4d870>  // b.any
  451244:	ldp	x3, x2, [x19, #272]
  451248:	strb	wzr, [x19, #255]
  45124c:	mov	x0, x19
  451250:	blr	x3
  451254:	ldr	x2, [x19, #320]
  451258:	mov	x0, #0x1                   	// #1
  45125c:	mov	x1, #0x0                   	// #0
  451260:	add	x2, x2, x0
  451264:	str	x2, [x19, #320]
  451268:	b	4500f4 <ferror@plt+0x4d874>
  45126c:	ldp	x21, x22, [sp, #32]
  451270:	ldp	x23, x24, [sp, #48]
  451274:	b	448e38 <ferror@plt+0x465b8>
  451278:	ldp	x21, x22, [sp, #32]
  45127c:	ldp	x23, x24, [sp, #48]
  451280:	b	448e38 <ferror@plt+0x465b8>
  451284:	ldp	x21, x22, [sp, #32]
  451288:	ldp	x23, x24, [sp, #48]
  45128c:	b	448e38 <ferror@plt+0x465b8>
  451290:	ldp	x21, x22, [sp, #32]
  451294:	ldp	x23, x24, [sp, #48]
  451298:	b	448e38 <ferror@plt+0x465b8>
  45129c:	ldr	x0, [x0, #8]
  4512a0:	cbz	x0, 450cc4 <ferror@plt+0x4e444>
  4512a4:	ldr	w1, [x0]
  4512a8:	cmp	w1, #0x2f
  4512ac:	b.ne	4491dc <ferror@plt+0x4695c>  // b.any
  4512b0:	ldr	w1, [x19, #316]
  4512b4:	tbnz	w1, #31, 451aa0 <ferror@plt+0x4f220>
  4512b8:	bl	4481e8 <ferror@plt+0x45968>
  4512bc:	cbz	x0, 450cc4 <ferror@plt+0x4e444>
  4512c0:	ldr	w1, [x0]
  4512c4:	b	4491dc <ferror@plt+0x4695c>
  4512c8:	ldr	x2, [x24, #8]
  4512cc:	mov	w1, w22
  4512d0:	mov	x0, x19
  4512d4:	bl	451e50 <ferror@plt+0x4f5d0>
  4512d8:	mov	x0, x19
  4512dc:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  4512e0:	mov	x2, #0x3                   	// #3
  4512e4:	add	x1, x1, #0x978
  4512e8:	bl	448118 <ferror@plt+0x45898>
  4512ec:	ldp	x21, x22, [sp, #32]
  4512f0:	ldp	x23, x24, [sp, #48]
  4512f4:	ldp	x25, x26, [sp, #64]
  4512f8:	b	448e38 <ferror@plt+0x465b8>
  4512fc:	ldp	x21, x22, [sp, #32]
  451300:	ldp	x23, x24, [sp, #48]
  451304:	ldp	x25, x26, [sp, #64]
  451308:	b	448e38 <ferror@plt+0x465b8>
  45130c:	add	x1, x0, #0x2
  451310:	str	x1, [x19, #256]
  451314:	mov	w2, #0x64                  	// #100
  451318:	strb	w2, [x19, x3]
  45131c:	strb	w2, [x19, #264]
  451320:	cmp	x1, #0xff
  451324:	b.ne	451470 <ferror@plt+0x4ebf0>  // b.any
  451328:	ldp	x3, x2, [x19, #272]
  45132c:	strb	wzr, [x19, #255]
  451330:	mov	x0, x19
  451334:	blr	x3
  451338:	ldr	x0, [x19, #320]
  45133c:	mov	w3, #0x6665                	// #26213
  451340:	mov	w2, #0x61                  	// #97
  451344:	mov	x1, #0x3                   	// #3
  451348:	add	x0, x0, #0x1
  45134c:	strh	w3, [x19]
  451350:	strb	w2, [x19, #2]
  451354:	str	x0, [x19, #320]
  451358:	add	x0, x1, #0x1
  45135c:	str	x0, [x19, #256]
  451360:	mov	w2, #0x75                  	// #117
  451364:	strb	w2, [x19, x1]
  451368:	strb	w2, [x19, #264]
  45136c:	cmp	x0, #0xff
  451370:	b.ne	4514c0 <ferror@plt+0x4ec40>  // b.any
  451374:	ldp	x3, x2, [x19, #272]
  451378:	strb	wzr, [x19, #255]
  45137c:	mov	x1, x0
  451380:	mov	x0, x19
  451384:	blr	x3
  451388:	ldr	x0, [x19, #320]
  45138c:	mov	w3, #0x746c                	// #29804
  451390:	mov	w2, #0x20                  	// #32
  451394:	mov	x1, #0x3                   	// #3
  451398:	add	x0, x0, #0x1
  45139c:	strh	w3, [x19]
  4513a0:	strb	w2, [x19, #2]
  4513a4:	str	x0, [x19, #320]
  4513a8:	add	x0, x1, #0x1
  4513ac:	str	x0, [x19, #256]
  4513b0:	mov	w2, #0x61                  	// #97
  4513b4:	strb	w2, [x19, x1]
  4513b8:	strb	w2, [x19, #264]
  4513bc:	cmp	x0, #0xff
  4513c0:	b.ne	45150c <ferror@plt+0x4ec8c>  // b.any
  4513c4:	ldp	x3, x2, [x19, #272]
  4513c8:	strb	wzr, [x19, #255]
  4513cc:	mov	x1, x0
  4513d0:	mov	x0, x19
  4513d4:	blr	x3
  4513d8:	ldr	x0, [x19, #320]
  4513dc:	mov	w2, #0x72                  	// #114
  4513e0:	mov	x1, #0x1                   	// #1
  4513e4:	strb	w2, [x19]
  4513e8:	add	x0, x0, x1
  4513ec:	str	x0, [x19, #320]
  4513f0:	b	450918 <ferror@plt+0x4e098>
  4513f4:	ldp	x3, x2, [x19, #272]
  4513f8:	strb	wzr, [x19, #255]
  4513fc:	mov	x0, x19
  451400:	blr	x3
  451404:	ldr	x1, [x19, #320]
  451408:	mov	w2, #0x3e                  	// #62
  45140c:	mov	x0, #0x1                   	// #1
  451410:	strb	w2, [x19]
  451414:	add	x1, x1, x0
  451418:	str	x1, [x19, #320]
  45141c:	add	x2, x0, #0x1
  451420:	b	450f44 <ferror@plt+0x4e6c4>
  451424:	add	x3, x1, #0x1
  451428:	str	x3, [x19, #256]
  45142c:	mov	w0, #0x7d                  	// #125
  451430:	strb	w0, [x19, x1]
  451434:	strb	w0, [x19, #264]
  451438:	cmp	x3, #0xff
  45143c:	b.ne	45173c <ferror@plt+0x4eebc>  // b.any
  451440:	ldp	x4, x2, [x19, #272]
  451444:	strb	wzr, [x19, #255]
  451448:	mov	x1, x3
  45144c:	mov	x0, x19
  451450:	blr	x4
  451454:	ldr	x1, [x19, #320]
  451458:	mov	w2, #0x3a                  	// #58
  45145c:	mov	x0, #0x1                   	// #1
  451460:	strb	w2, [x19]
  451464:	add	x1, x1, x0
  451468:	str	x1, [x19, #320]
  45146c:	b	44d0f0 <ferror@plt+0x4a870>
  451470:	add	x0, x0, #0x3
  451474:	str	x0, [x19, #256]
  451478:	mov	w2, #0x65                  	// #101
  45147c:	strb	w2, [x19, x1]
  451480:	strb	w2, [x19, #264]
  451484:	cmp	x0, #0xff
  451488:	b.ne	451588 <ferror@plt+0x4ed08>  // b.any
  45148c:	ldp	x3, x2, [x19, #272]
  451490:	strb	wzr, [x19, #255]
  451494:	mov	x1, x0
  451498:	mov	x0, x19
  45149c:	blr	x3
  4514a0:	ldr	x1, [x19, #320]
  4514a4:	mov	w3, #0x6166                	// #24934
  4514a8:	mov	w2, #0x75                  	// #117
  4514ac:	mov	x0, #0x3                   	// #3
  4514b0:	add	x1, x1, #0x1
  4514b4:	strh	w3, [x19]
  4514b8:	strb	w2, [x19, #2]
  4514bc:	str	x1, [x19, #320]
  4514c0:	add	x1, x0, #0x1
  4514c4:	str	x1, [x19, #256]
  4514c8:	mov	w2, #0x6c                  	// #108
  4514cc:	strb	w2, [x19, x0]
  4514d0:	strb	w2, [x19, #264]
  4514d4:	cmp	x1, #0xff
  4514d8:	b.ne	4515d8 <ferror@plt+0x4ed58>  // b.any
  4514dc:	ldp	x3, x2, [x19, #272]
  4514e0:	strb	wzr, [x19, #255]
  4514e4:	mov	x0, x19
  4514e8:	blr	x3
  4514ec:	ldr	x1, [x19, #320]
  4514f0:	mov	w3, #0x2074                	// #8308
  4514f4:	mov	w2, #0x61                  	// #97
  4514f8:	mov	x0, #0x3                   	// #3
  4514fc:	add	x1, x1, #0x1
  451500:	strh	w3, [x19]
  451504:	strb	w2, [x19, #2]
  451508:	str	x1, [x19, #320]
  45150c:	add	x1, x0, #0x1
  451510:	str	x1, [x19, #256]
  451514:	mov	w2, #0x72                  	// #114
  451518:	strb	w2, [x19, x0]
  45151c:	strb	w2, [x19, #264]
  451520:	cmp	x1, #0xff
  451524:	b.ne	451628 <ferror@plt+0x4eda8>  // b.any
  451528:	ldp	x3, x2, [x19, #272]
  45152c:	strb	wzr, [x19, #255]
  451530:	mov	x0, x19
  451534:	blr	x3
  451538:	ldr	x1, [x19, #320]
  45153c:	mov	w2, #0x67                  	// #103
  451540:	mov	x0, #0x1                   	// #1
  451544:	strb	w2, [x19]
  451548:	add	x1, x1, x0
  45154c:	str	x1, [x19, #320]
  451550:	b	450924 <ferror@plt+0x4e0a4>
  451554:	ldp	x3, x2, [x19, #272]
  451558:	strb	wzr, [x19, #255]
  45155c:	mov	x1, x0
  451560:	mov	x0, x19
  451564:	blr	x3
  451568:	ldr	x1, [x19, #320]
  45156c:	mov	w3, #0x647b                	// #25723
  451570:	mov	w2, #0x65                  	// #101
  451574:	mov	x0, #0x3                   	// #3
  451578:	add	x1, x1, #0x1
  45157c:	strh	w3, [x19]
  451580:	strb	w2, [x19, #2]
  451584:	str	x1, [x19, #320]
  451588:	add	x3, x0, #0x1
  45158c:	str	x3, [x19, #256]
  451590:	mov	w1, #0x66                  	// #102
  451594:	strb	w1, [x19, x0]
  451598:	strb	w1, [x19, #264]
  45159c:	cmp	x3, #0xff
  4515a0:	b.ne	450888 <ferror@plt+0x4e008>  // b.any
  4515a4:	ldp	x4, x2, [x19, #272]
  4515a8:	strb	wzr, [x19, #255]
  4515ac:	mov	x1, x3
  4515b0:	mov	x0, x19
  4515b4:	blr	x4
  4515b8:	ldr	x0, [x19, #320]
  4515bc:	mov	w3, #0x7561                	// #30049
  4515c0:	mov	w2, #0x6c                  	// #108
  4515c4:	mov	x1, #0x3                   	// #3
  4515c8:	add	x0, x0, #0x1
  4515cc:	strh	w3, [x19]
  4515d0:	strb	w2, [x19, #2]
  4515d4:	str	x0, [x19, #320]
  4515d8:	add	x0, x1, #0x1
  4515dc:	str	x0, [x19, #256]
  4515e0:	mov	w2, #0x74                  	// #116
  4515e4:	strb	w2, [x19, x1]
  4515e8:	strb	w2, [x19, #264]
  4515ec:	cmp	x0, #0xff
  4515f0:	b.ne	4508d4 <ferror@plt+0x4e054>  // b.any
  4515f4:	ldp	x3, x2, [x19, #272]
  4515f8:	strb	wzr, [x19, #255]
  4515fc:	mov	x1, x0
  451600:	mov	x0, x19
  451604:	blr	x3
  451608:	ldr	x0, [x19, #320]
  45160c:	mov	w3, #0x6120                	// #24864
  451610:	mov	w2, #0x72                  	// #114
  451614:	mov	x1, #0x3                   	// #3
  451618:	add	x0, x0, #0x1
  45161c:	strh	w3, [x19]
  451620:	strb	w2, [x19, #2]
  451624:	str	x0, [x19, #320]
  451628:	add	x0, x1, #0x1
  45162c:	str	x0, [x19, #256]
  451630:	mov	w2, #0x67                  	// #103
  451634:	strb	w2, [x19, x1]
  451638:	strb	w2, [x19, #264]
  45163c:	cmp	x0, #0xff
  451640:	b.ne	450924 <ferror@plt+0x4e0a4>  // b.any
  451644:	ldp	x3, x2, [x19, #272]
  451648:	strb	wzr, [x19, #255]
  45164c:	mov	x1, x0
  451650:	mov	x0, x19
  451654:	blr	x3
  451658:	ldr	x1, [x19, #320]
  45165c:	mov	x2, #0x1                   	// #1
  451660:	mov	x0, #0x0                   	// #0
  451664:	add	x1, x1, x2
  451668:	str	x1, [x19, #320]
  45166c:	b	450928 <ferror@plt+0x4e0a8>
  451670:	ldr	x1, [x0, #8]
  451674:	ldr	w2, [x1, #16]
  451678:	cmp	w2, #0x1
  45167c:	b.ne	44b6d8 <ferror@plt+0x48e58>  // b.any
  451680:	ldr	x1, [x1, #8]
  451684:	ldrb	w1, [x1]
  451688:	cmp	w1, #0x3e
  45168c:	b.ne	44b6d8 <ferror@plt+0x48e58>  // b.any
  451690:	ldr	x1, [x19, #256]
  451694:	cmp	x1, #0xff
  451698:	b.ne	4516c0 <ferror@plt+0x4ee40>  // b.any
  45169c:	ldp	x3, x2, [x19, #272]
  4516a0:	strb	wzr, [x19, #255]
  4516a4:	mov	x0, x19
  4516a8:	blr	x3
  4516ac:	str	xzr, [x19, #256]
  4516b0:	ldr	x0, [x19, #320]
  4516b4:	mov	x1, #0x0                   	// #0
  4516b8:	add	x0, x0, #0x1
  4516bc:	str	x0, [x19, #320]
  4516c0:	add	x0, x1, #0x1
  4516c4:	str	x0, [x19, #256]
  4516c8:	mov	w0, #0x28                  	// #40
  4516cc:	strb	w0, [x19, x1]
  4516d0:	strb	w0, [x19, #264]
  4516d4:	ldr	x0, [x24, #8]
  4516d8:	b	44b6d8 <ferror@plt+0x48e58>
  4516dc:	ldr	x0, [x0, #8]
  4516e0:	ldr	w1, [x0, #16]
  4516e4:	cmp	w1, #0x1
  4516e8:	b.eq	4519ec <ferror@plt+0x4f16c>  // b.none
  4516ec:	ldp	x21, x22, [sp, #32]
  4516f0:	ldp	x23, x24, [sp, #48]
  4516f4:	b	448e38 <ferror@plt+0x465b8>
  4516f8:	ldp	x21, x22, [sp, #32]
  4516fc:	ldp	x23, x24, [sp, #48]
  451700:	b	448e38 <ferror@plt+0x465b8>
  451704:	ldr	x25, [x25, #8]
  451708:	cbz	x25, 450b70 <ferror@plt+0x4e2f0>
  45170c:	ldr	w4, [x25]
  451710:	b	450a10 <ferror@plt+0x4e190>
  451714:	ldr	x4, [x1, #8]
  451718:	ldr	x23, [x19, #288]
  45171c:	str	x4, [x19, #288]
  451720:	cbz	x4, 450cc8 <ferror@plt+0x4e448>
  451724:	mov	w21, #0x1                   	// #1
  451728:	b	450c8c <ferror@plt+0x4e40c>
  45172c:	mov	w0, #0x7d                  	// #125
  451730:	strb	w0, [x19, #1]
  451734:	mov	x3, #0x2                   	// #2
  451738:	ldp	x25, x26, [sp, #64]
  45173c:	add	x0, x3, #0x1
  451740:	str	x0, [x19, #256]
  451744:	mov	w1, #0x3a                  	// #58
  451748:	strb	w1, [x19, x3]
  45174c:	cmp	x0, #0xff
  451750:	strb	w1, [x19, #264]
  451754:	b.ne	44d0f0 <ferror@plt+0x4a870>  // b.any
  451758:	ldp	x3, x2, [x19, #272]
  45175c:	strb	wzr, [x19, #255]
  451760:	mov	x1, x0
  451764:	mov	x0, x19
  451768:	blr	x3
  45176c:	ldr	x1, [x19, #320]
  451770:	mov	x2, #0x1                   	// #1
  451774:	mov	x0, #0x0                   	// #0
  451778:	add	x1, x1, x2
  45177c:	str	x1, [x19, #320]
  451780:	b	44d0f4 <ferror@plt+0x4a874>
  451784:	ldp	x21, x22, [sp, #32]
  451788:	ldp	x23, x24, [sp, #48]
  45178c:	b	448e38 <ferror@plt+0x465b8>
  451790:	ldr	x0, [x2, #16]
  451794:	ldr	w0, [x0]
  451798:	cmp	w0, #0x29
  45179c:	b.eq	4517a8 <ferror@plt+0x4ef28>  // b.none
  4517a0:	mov	w0, #0x1                   	// #1
  4517a4:	str	w0, [x19, #304]
  4517a8:	ldr	x2, [x2, #8]
  4517ac:	mov	w1, w22
  4517b0:	mov	x0, x19
  4517b4:	bl	451e50 <ferror@plt+0x4f5d0>
  4517b8:	b	44b720 <ferror@plt+0x48ea0>
  4517bc:	ldr	x1, [x20, #8]
  4517c0:	ldr	w2, [x1]
  4517c4:	cmp	w2, #0x1
  4517c8:	b.ne	44f8a0 <ferror@plt+0x4d020>  // b.any
  4517cc:	ldr	x2, [x20, #16]
  4517d0:	ldr	w2, [x2]
  4517d4:	cmp	w2, #0x29
  4517d8:	csel	x20, x20, x1, ne  // ne = any
  4517dc:	b	44f8a0 <ferror@plt+0x4d020>
  4517e0:	ldp	x21, x22, [sp, #32]
  4517e4:	ldp	x23, x24, [sp, #48]
  4517e8:	b	448e38 <ferror@plt+0x465b8>
  4517ec:	ldp	x21, x22, [sp, #32]
  4517f0:	ldp	x23, x24, [sp, #48]
  4517f4:	b	448e38 <ferror@plt+0x465b8>
  4517f8:	ldp	x21, x22, [sp, #32]
  4517fc:	ldp	x23, x24, [sp, #48]
  451800:	b	448e38 <ferror@plt+0x465b8>
  451804:	ldrb	w1, [x0, #1]
  451808:	cmp	w1, #0x6c
  45180c:	b.ne	451190 <ferror@plt+0x4e910>  // b.any
  451810:	ldrb	w0, [x0, #2]
  451814:	cbz	w0, 45119c <ferror@plt+0x4e91c>
  451818:	b	451190 <ferror@plt+0x4e910>
  45181c:	ldp	x21, x22, [sp, #32]
  451820:	ldp	x23, x24, [sp, #48]
  451824:	b	448e38 <ferror@plt+0x465b8>
  451828:	mov	x0, x19
  45182c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  451830:	mov	x2, #0x4                   	// #4
  451834:	add	x1, x1, #0x6d0
  451838:	bl	448118 <ferror@plt+0x45898>
  45183c:	ldr	x0, [x21, #8]
  451840:	cbz	x0, 451898 <ferror@plt+0x4f018>
  451844:	mov	w1, w22
  451848:	mov	x2, x21
  45184c:	mov	x0, x19
  451850:	bl	451e50 <ferror@plt+0x4f5d0>
  451854:	ldr	x1, [x19, #256]
  451858:	cmp	x1, #0xff
  45185c:	b.ne	451884 <ferror@plt+0x4f004>  // b.any
  451860:	ldp	x3, x2, [x19, #272]
  451864:	strb	wzr, [x19, #255]
  451868:	mov	x0, x19
  45186c:	blr	x3
  451870:	str	xzr, [x19, #256]
  451874:	ldr	x0, [x19, #320]
  451878:	mov	x1, #0x0                   	// #0
  45187c:	add	x0, x0, #0x1
  451880:	str	x0, [x19, #320]
  451884:	add	x0, x1, #0x1
  451888:	str	x0, [x19, #256]
  45188c:	mov	w0, #0x20                  	// #32
  451890:	strb	w0, [x19, x1]
  451894:	strb	w0, [x19, #264]
  451898:	mov	x2, x23
  45189c:	mov	w1, w22
  4518a0:	mov	x0, x19
  4518a4:	bl	451c50 <ferror@plt+0x4f3d0>
  4518a8:	cbz	x20, 451a78 <ferror@plt+0x4f1f8>
  4518ac:	mov	w1, w22
  4518b0:	mov	x2, x20
  4518b4:	mov	x0, x19
  4518b8:	bl	451e50 <ferror@plt+0x4f5d0>
  4518bc:	ldp	x21, x22, [sp, #32]
  4518c0:	ldp	x23, x24, [sp, #48]
  4518c4:	ldp	x25, x26, [sp, #64]
  4518c8:	b	448e38 <ferror@plt+0x465b8>
  4518cc:	ldp	x21, x22, [sp, #32]
  4518d0:	ldp	x23, x24, [sp, #48]
  4518d4:	b	448e38 <ferror@plt+0x465b8>
  4518d8:	ldp	x21, x22, [sp, #32]
  4518dc:	ldp	x23, x24, [sp, #48]
  4518e0:	b	448e38 <ferror@plt+0x465b8>
  4518e4:	add	x1, x21, #0x40
  4518e8:	b	449770 <ferror@plt+0x46ef0>
  4518ec:	ldr	x2, [x20, #8]
  4518f0:	mov	w1, w22
  4518f4:	mov	x0, x19
  4518f8:	bl	451e50 <ferror@plt+0x4f5d0>
  4518fc:	mov	x2, x21
  451900:	mov	w1, w22
  451904:	mov	x0, x19
  451908:	bl	451ce8 <ferror@plt+0x4f468>
  45190c:	ldp	x21, x22, [sp, #32]
  451910:	ldp	x23, x24, [sp, #48]
  451914:	b	448e38 <ferror@plt+0x465b8>
  451918:	ldp	x21, x22, [sp, #32]
  45191c:	ldp	x23, x24, [sp, #48]
  451920:	b	448e38 <ferror@plt+0x465b8>
  451924:	ldp	x21, x22, [sp, #32]
  451928:	ldp	x23, x24, [sp, #48]
  45192c:	b	448e38 <ferror@plt+0x465b8>
  451930:	cmp	w21, #0x5
  451934:	b.eq	451aa8 <ferror@plt+0x4f228>  // b.none
  451938:	mov	x0, x19
  45193c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  451940:	mov	x2, #0x3                   	// #3
  451944:	add	x1, x1, #0x6e8
  451948:	bl	448118 <ferror@plt+0x45898>
  45194c:	ldp	x21, x22, [sp, #32]
  451950:	ldp	x23, x24, [sp, #48]
  451954:	b	448e38 <ferror@plt+0x465b8>
  451958:	ldr	w0, [x19, #348]
  45195c:	cmp	w4, w0
  451960:	b.ge	4519c8 <ferror@plt+0x4f148>  // b.tcont
  451964:	sbfiz	x0, x4, #4, #32
  451968:	add	w1, w4, #0x1
  45196c:	ldr	x2, [x19, #288]
  451970:	str	w1, [x19, #344]
  451974:	str	x3, [x5, x0]
  451978:	add	x0, x5, w4, sxtw #4
  45197c:	add	x0, x0, #0x8
  451980:	cbz	x2, 451b24 <ferror@plt+0x4f2a4>
  451984:	ldr	w1, [x19, #360]
  451988:	ldr	w6, [x19, #364]
  45198c:	sbfiz	x5, x1, #4, #32
  451990:	b	4519c0 <ferror@plt+0x4f140>
  451994:	ldr	x4, [x19, #352]
  451998:	add	w1, w1, #0x1
  45199c:	ldr	x7, [x2, #8]
  4519a0:	add	x4, x4, x5
  4519a4:	str	w1, [x19, #360]
  4519a8:	add	x5, x5, #0x10
  4519ac:	str	x7, [x4, #8]
  4519b0:	str	x4, [x0]
  4519b4:	mov	x0, x4
  4519b8:	ldr	x2, [x2]
  4519bc:	cbz	x2, 451b24 <ferror@plt+0x4f2a4>
  4519c0:	cmp	w6, w1
  4519c4:	b.gt	451994 <ferror@plt+0x4f114>
  4519c8:	mov	w0, #0x1                   	// #1
  4519cc:	ldp	x21, x22, [sp, #32]
  4519d0:	ldp	x23, x24, [sp, #48]
  4519d4:	ldp	x25, x26, [sp, #64]
  4519d8:	str	w0, [x19, #304]
  4519dc:	b	448e38 <ferror@plt+0x465b8>
  4519e0:	ldp	x21, x22, [sp, #32]
  4519e4:	ldp	x23, x24, [sp, #48]
  4519e8:	b	448e38 <ferror@plt+0x465b8>
  4519ec:	ldr	x0, [x0, #8]
  4519f0:	ldrb	w0, [x0]
  4519f4:	cmp	w0, #0x3e
  4519f8:	b.eq	451ad4 <ferror@plt+0x4f254>  // b.none
  4519fc:	ldp	x21, x22, [sp, #32]
  451a00:	ldp	x23, x24, [sp, #48]
  451a04:	b	448e38 <ferror@plt+0x465b8>
  451a08:	add	x1, x21, #0x60
  451a0c:	mov	w20, #0x4                   	// #4
  451a10:	b	449770 <ferror@plt+0x46ef0>
  451a14:	cmp	x21, x24
  451a18:	b.ls	44d938 <ferror@plt+0x4b0b8>  // b.plast
  451a1c:	cmp	x2, #0xff
  451a20:	ccmp	w0, w23, #0x0, ls  // ls = plast
  451a24:	b.ne	44d938 <ferror@plt+0x4b0b8>  // b.any
  451a28:	and	w22, w2, #0xff
  451a2c:	cmp	x1, #0xff
  451a30:	b.ne	451a54 <ferror@plt+0x4f1d4>  // b.any
  451a34:	ldp	x3, x2, [x19, #272]
  451a38:	strb	wzr, [x19, #255]
  451a3c:	mov	x0, x19
  451a40:	blr	x3
  451a44:	str	xzr, [x19, #256]
  451a48:	ldr	x0, [x19, #320]
  451a4c:	add	x0, x0, #0x1
  451a50:	str	x0, [x19, #320]
  451a54:	ldr	x0, [x19, #256]
  451a58:	mov	x20, x24
  451a5c:	add	x1, x0, #0x1
  451a60:	str	x1, [x19, #256]
  451a64:	strb	w22, [x19, x0]
  451a68:	strb	w22, [x19, #264]
  451a6c:	b	44d914 <ferror@plt+0x4b094>
  451a70:	ldr	x1, [x19, #256]
  451a74:	b	44d0c0 <ferror@plt+0x4a840>
  451a78:	ldp	x21, x22, [sp, #32]
  451a7c:	ldp	x23, x24, [sp, #48]
  451a80:	ldp	x25, x26, [sp, #64]
  451a84:	b	448e38 <ferror@plt+0x465b8>
  451a88:	add	x21, sp, #0x80
  451a8c:	str	x21, [x19, #296]
  451a90:	b	450b70 <ferror@plt+0x4e2f0>
  451a94:	ldp	x21, x22, [sp, #32]
  451a98:	ldp	x23, x24, [sp, #48]
  451a9c:	b	448e38 <ferror@plt+0x465b8>
  451aa0:	ldr	x2, [x19, #296]
  451aa4:	b	4491f8 <ferror@plt+0x46978>
  451aa8:	mov	x0, x19
  451aac:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  451ab0:	mov	x2, #0x2                   	// #2
  451ab4:	add	x1, x1, #0x6e0
  451ab8:	bl	448118 <ferror@plt+0x45898>
  451abc:	ldp	x21, x22, [sp, #32]
  451ac0:	ldp	x23, x24, [sp, #48]
  451ac4:	b	448e38 <ferror@plt+0x465b8>
  451ac8:	add	x21, x21, #0x20
  451acc:	str	x21, [x19, #296]
  451ad0:	b	450b70 <ferror@plt+0x4e2f0>
  451ad4:	ldr	x1, [x19, #256]
  451ad8:	cmp	x1, #0xff
  451adc:	b.ne	451b04 <ferror@plt+0x4f284>  // b.any
  451ae0:	ldp	x3, x2, [x19, #272]
  451ae4:	strb	wzr, [x19, #255]
  451ae8:	mov	x0, x19
  451aec:	blr	x3
  451af0:	str	xzr, [x19, #256]
  451af4:	ldr	x0, [x19, #320]
  451af8:	mov	x1, #0x0                   	// #0
  451afc:	add	x0, x0, #0x1
  451b00:	str	x0, [x19, #320]
  451b04:	add	x0, x1, #0x1
  451b08:	str	x0, [x19, #256]
  451b0c:	mov	w0, #0x29                  	// #41
  451b10:	strb	w0, [x19, x1]
  451b14:	strb	w0, [x19, #264]
  451b18:	ldp	x21, x22, [sp, #32]
  451b1c:	ldp	x23, x24, [sp, #48]
  451b20:	b	448e38 <ferror@plt+0x465b8>
  451b24:	str	xzr, [x0]
  451b28:	b	450c80 <ferror@plt+0x4e400>
  451b2c:	ldr	x1, [x19, #256]
  451b30:	cmp	x1, #0xff
  451b34:	b.ne	451b5c <ferror@plt+0x4f2dc>  // b.any
  451b38:	ldp	x3, x2, [x19, #272]
  451b3c:	strb	wzr, [x19, #255]
  451b40:	mov	x0, x19
  451b44:	blr	x3
  451b48:	str	xzr, [x19, #256]
  451b4c:	ldr	x0, [x19, #320]
  451b50:	mov	x1, #0x0                   	// #0
  451b54:	add	x0, x0, #0x1
  451b58:	str	x0, [x19, #320]
  451b5c:	add	x0, x1, #0x1
  451b60:	str	x0, [x19, #256]
  451b64:	mov	w0, #0x75                  	// #117
  451b68:	strb	w0, [x19, x1]
  451b6c:	strb	w0, [x19, #264]
  451b70:	ldp	x21, x22, [sp, #32]
  451b74:	ldp	x23, x24, [sp, #48]
  451b78:	b	448e38 <ferror@plt+0x465b8>
  451b7c:	mov	x0, x19
  451b80:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  451b84:	mov	x2, #0x2                   	// #2
  451b88:	add	x1, x1, #0x6d8
  451b8c:	bl	448118 <ferror@plt+0x45898>
  451b90:	ldp	x21, x22, [sp, #32]
  451b94:	ldp	x23, x24, [sp, #48]
  451b98:	b	448e38 <ferror@plt+0x465b8>
  451b9c:	ldr	x1, [x19, #256]
  451ba0:	cmp	x1, #0xff
  451ba4:	b.ne	451bcc <ferror@plt+0x4f34c>  // b.any
  451ba8:	ldp	x3, x2, [x19, #272]
  451bac:	strb	wzr, [x19, #255]
  451bb0:	mov	x0, x19
  451bb4:	blr	x3
  451bb8:	str	xzr, [x19, #256]
  451bbc:	ldr	x0, [x19, #320]
  451bc0:	mov	x1, #0x0                   	// #0
  451bc4:	add	x0, x0, #0x1
  451bc8:	str	x0, [x19, #320]
  451bcc:	add	x0, x1, #0x1
  451bd0:	str	x0, [x19, #256]
  451bd4:	mov	w0, #0x2d                  	// #45
  451bd8:	strb	w0, [x19, x1]
  451bdc:	strb	w0, [x19, #264]
  451be0:	b	44fc4c <ferror@plt+0x4d3cc>
  451be4:	ldp	x21, x22, [sp, #32]
  451be8:	ldp	x23, x24, [sp, #48]
  451bec:	b	448e38 <ferror@plt+0x465b8>
  451bf0:	ldp	x21, x22, [sp, #32]
  451bf4:	ldp	x23, x24, [sp, #48]
  451bf8:	ldp	x25, x26, [sp, #64]
  451bfc:	b	448e6c <ferror@plt+0x465ec>
  451c00:	mov	x0, x1
  451c04:	add	x1, x0, #0x1
  451c08:	b	44b16c <ferror@plt+0x488ec>
  451c0c:	ldp	x21, x22, [sp, #32]
  451c10:	ldp	x23, x24, [sp, #48]
  451c14:	b	448e38 <ferror@plt+0x465b8>
  451c18:	mov	x2, x21
  451c1c:	mov	w1, w22
  451c20:	mov	x0, x19
  451c24:	bl	451ce8 <ferror@plt+0x4f468>
  451c28:	b	44b670 <ferror@plt+0x48df0>
  451c2c:	mov	x0, x19
  451c30:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  451c34:	mov	x2, #0x5                   	// #5
  451c38:	add	x1, x1, #0x178
  451c3c:	bl	448118 <ferror@plt+0x45898>
  451c40:	ldp	x21, x22, [sp, #32]
  451c44:	ldp	x23, x24, [sp, #48]
  451c48:	b	448e38 <ferror@plt+0x465b8>
  451c4c:	nop
  451c50:	stp	x29, x30, [sp, #-48]!
  451c54:	mov	x29, sp
  451c58:	stp	x19, x20, [sp, #16]
  451c5c:	mov	x20, x0
  451c60:	cbz	x2, 451cd0 <ferror@plt+0x4f450>
  451c64:	ldr	w3, [x2, #4]
  451c68:	mov	x19, x2
  451c6c:	cmp	w3, #0x1
  451c70:	b.gt	451cd0 <ferror@plt+0x4f450>
  451c74:	ldr	w4, [x0, #308]
  451c78:	cmp	w4, #0x400
  451c7c:	b.gt	451cd0 <ferror@plt+0x4f450>
  451c80:	add	w3, w3, #0x1
  451c84:	str	w3, [x2, #4]
  451c88:	ldr	x3, [x0, #328]
  451c8c:	add	x5, sp, #0x20
  451c90:	add	w4, w4, #0x1
  451c94:	str	w4, [x0, #308]
  451c98:	str	x5, [x0, #328]
  451c9c:	stp	x2, x3, [sp, #32]
  451ca0:	bl	448dd0 <ferror@plt+0x46550>
  451ca4:	ldr	w1, [x19, #4]
  451ca8:	ldr	x0, [sp, #40]
  451cac:	str	x0, [x20, #328]
  451cb0:	ldr	w0, [x20, #308]
  451cb4:	sub	w1, w1, #0x1
  451cb8:	str	w1, [x19, #4]
  451cbc:	sub	w0, w0, #0x1
  451cc0:	str	w0, [x20, #308]
  451cc4:	ldp	x19, x20, [sp, #16]
  451cc8:	ldp	x29, x30, [sp], #48
  451ccc:	ret
  451cd0:	mov	w0, #0x1                   	// #1
  451cd4:	str	w0, [x20, #304]
  451cd8:	ldp	x19, x20, [sp, #16]
  451cdc:	ldp	x29, x30, [sp], #48
  451ce0:	ret
  451ce4:	nop
  451ce8:	stp	x29, x30, [sp, #-80]!
  451cec:	mov	x29, sp
  451cf0:	ldr	w3, [x2]
  451cf4:	stp	x19, x20, [sp, #16]
  451cf8:	mov	x20, x2
  451cfc:	mov	x19, x0
  451d00:	cmp	w3, #0x32
  451d04:	b.eq	451d34 <ferror@plt+0x4f4b4>  // b.none
  451d08:	ldr	w3, [x2, #4]
  451d0c:	cmp	w3, #0x1
  451d10:	b.gt	451d20 <ferror@plt+0x4f4a0>
  451d14:	ldr	w4, [x0, #308]
  451d18:	cmp	w4, #0x400
  451d1c:	b.le	451df4 <ferror@plt+0x4f574>
  451d20:	mov	w0, #0x1                   	// #1
  451d24:	str	w0, [x19, #304]
  451d28:	ldp	x19, x20, [sp, #16]
  451d2c:	ldp	x29, x30, [sp], #80
  451d30:	ret
  451d34:	ldr	x0, [x2, #8]
  451d38:	stp	x21, x22, [sp, #32]
  451d3c:	ldrsw	x22, [x0, #16]
  451d40:	ldr	x20, [x0, #8]
  451d44:	cbz	x22, 451e44 <ferror@plt+0x4f5c4>
  451d48:	add	x22, x20, x22
  451d4c:	ldr	x1, [x19, #256]
  451d50:	str	x23, [sp, #48]
  451d54:	mov	x23, #0x1                   	// #1
  451d58:	b	451db0 <ferror@plt+0x4f530>
  451d5c:	ldp	x3, x2, [x19, #272]
  451d60:	strb	wzr, [x19, #255]
  451d64:	add	x20, x20, #0x1
  451d68:	blr	x3
  451d6c:	strb	w21, [x19]
  451d70:	ldr	x0, [x19, #320]
  451d74:	str	x23, [x19, #256]
  451d78:	strb	w21, [x19, #264]
  451d7c:	cmp	x22, x20
  451d80:	add	x0, x0, #0x1
  451d84:	str	x0, [x19, #320]
  451d88:	mov	x0, #0x1                   	// #1
  451d8c:	b.eq	451de0 <ferror@plt+0x4f560>  // b.none
  451d90:	ldrb	w21, [x20]
  451d94:	add	x1, x0, #0x1
  451d98:	str	x1, [x19, #256]
  451d9c:	add	x20, x20, #0x1
  451da0:	strb	w21, [x19, x0]
  451da4:	cmp	x20, x22
  451da8:	strb	w21, [x19, #264]
  451dac:	b.eq	451de0 <ferror@plt+0x4f560>  // b.none
  451db0:	ldrb	w21, [x20]
  451db4:	mov	x0, x19
  451db8:	cmp	x1, #0xff
  451dbc:	b.eq	451d5c <ferror@plt+0x4f4dc>  // b.none
  451dc0:	mov	x0, x1
  451dc4:	add	x20, x20, #0x1
  451dc8:	add	x1, x0, #0x1
  451dcc:	str	x1, [x19, #256]
  451dd0:	cmp	x20, x22
  451dd4:	strb	w21, [x19, x0]
  451dd8:	strb	w21, [x19, #264]
  451ddc:	b.ne	451db0 <ferror@plt+0x4f530>  // b.any
  451de0:	ldp	x19, x20, [sp, #16]
  451de4:	ldp	x21, x22, [sp, #32]
  451de8:	ldr	x23, [sp, #48]
  451dec:	ldp	x29, x30, [sp], #80
  451df0:	ret
  451df4:	add	w3, w3, #0x1
  451df8:	str	w3, [x2, #4]
  451dfc:	ldr	x3, [x0, #328]
  451e00:	add	x5, sp, #0x40
  451e04:	add	w4, w4, #0x1
  451e08:	str	w4, [x0, #308]
  451e0c:	str	x5, [x0, #328]
  451e10:	stp	x2, x3, [sp, #64]
  451e14:	bl	448dd0 <ferror@plt+0x46550>
  451e18:	ldr	w1, [x20, #4]
  451e1c:	ldr	x0, [sp, #72]
  451e20:	str	x0, [x19, #328]
  451e24:	ldr	w0, [x19, #308]
  451e28:	sub	w1, w1, #0x1
  451e2c:	str	w1, [x20, #4]
  451e30:	sub	w0, w0, #0x1
  451e34:	str	w0, [x19, #308]
  451e38:	ldp	x19, x20, [sp, #16]
  451e3c:	ldp	x29, x30, [sp], #80
  451e40:	ret
  451e44:	ldp	x21, x22, [sp, #32]
  451e48:	b	451d28 <ferror@plt+0x4f4a8>
  451e4c:	nop
  451e50:	stp	x29, x30, [sp, #-64]!
  451e54:	mov	x29, sp
  451e58:	stp	x19, x20, [sp, #16]
  451e5c:	mov	x20, x2
  451e60:	ldr	w2, [x2]
  451e64:	stp	x21, x22, [sp, #32]
  451e68:	mov	w22, #0x1                   	// #1
  451e6c:	cmp	w2, #0x31
  451e70:	ccmp	w2, w22, #0x0, ne  // ne = any
  451e74:	mov	w21, w1
  451e78:	mov	x19, x0
  451e7c:	ccmp	w2, #0x6, #0x4, hi  // hi = pmore
  451e80:	b.ne	451f2c <ferror@plt+0x4f6ac>  // b.any
  451e84:	ldr	w0, [x20, #4]
  451e88:	cmp	w0, #0x1
  451e8c:	b.gt	451f20 <ferror@plt+0x4f6a0>
  451e90:	ldr	w1, [x19, #308]
  451e94:	cmp	w1, #0x400
  451e98:	b.gt	451f20 <ferror@plt+0x4f6a0>
  451e9c:	ldr	x3, [x19, #328]
  451ea0:	add	w0, w0, #0x1
  451ea4:	str	w0, [x20, #4]
  451ea8:	add	w1, w1, #0x1
  451eac:	add	x0, sp, #0x30
  451eb0:	str	w1, [x19, #308]
  451eb4:	str	x0, [x19, #328]
  451eb8:	mov	w1, w21
  451ebc:	mov	x0, x19
  451ec0:	mov	x2, x20
  451ec4:	stp	x20, x3, [sp, #48]
  451ec8:	bl	448dd0 <ferror@plt+0x46550>
  451ecc:	ldr	w1, [x20, #4]
  451ed0:	ldr	x0, [sp, #56]
  451ed4:	str	x0, [x19, #328]
  451ed8:	ldr	w0, [x19, #308]
  451edc:	sub	w1, w1, #0x1
  451ee0:	str	w1, [x20, #4]
  451ee4:	sub	w0, w0, #0x1
  451ee8:	str	w0, [x19, #308]
  451eec:	cbnz	w22, 451f10 <ferror@plt+0x4f690>
  451ef0:	ldr	x1, [x19, #256]
  451ef4:	add	x0, x1, #0x1
  451ef8:	cmp	x1, #0xff
  451efc:	b.eq	451f54 <ferror@plt+0x4f6d4>  // b.none
  451f00:	str	x0, [x19, #256]
  451f04:	mov	w0, #0x29                  	// #41
  451f08:	strb	w0, [x19, x1]
  451f0c:	strb	w0, [x19, #264]
  451f10:	ldp	x19, x20, [sp, #16]
  451f14:	ldp	x21, x22, [sp, #32]
  451f18:	ldp	x29, x30, [sp], #64
  451f1c:	ret
  451f20:	mov	w0, #0x1                   	// #1
  451f24:	str	w0, [x19, #304]
  451f28:	b	451eec <ferror@plt+0x4f66c>
  451f2c:	ldr	x1, [x0, #256]
  451f30:	cmp	x1, #0xff
  451f34:	b.eq	451f7c <ferror@plt+0x4f6fc>  // b.none
  451f38:	add	x0, x1, #0x1
  451f3c:	str	x0, [x19, #256]
  451f40:	mov	w0, #0x28                  	// #40
  451f44:	strb	w0, [x19, x1]
  451f48:	mov	w22, #0x0                   	// #0
  451f4c:	strb	w0, [x19, #264]
  451f50:	b	451e84 <ferror@plt+0x4f604>
  451f54:	ldp	x3, x2, [x19, #272]
  451f58:	strb	wzr, [x19, #255]
  451f5c:	mov	x0, x19
  451f60:	blr	x3
  451f64:	ldr	x2, [x19, #320]
  451f68:	mov	x0, #0x1                   	// #1
  451f6c:	mov	x1, #0x0                   	// #0
  451f70:	add	x2, x2, x0
  451f74:	str	x2, [x19, #320]
  451f78:	b	451f00 <ferror@plt+0x4f680>
  451f7c:	ldp	x3, x2, [x0, #272]
  451f80:	strb	wzr, [x0, #255]
  451f84:	blr	x3
  451f88:	ldr	x2, [x19, #320]
  451f8c:	mov	x0, #0x1                   	// #1
  451f90:	mov	x1, #0x0                   	// #0
  451f94:	add	x2, x2, x0
  451f98:	str	x2, [x19, #320]
  451f9c:	b	451f3c <ferror@plt+0x4f6bc>
  451fa0:	stp	x29, x30, [sp, #-64]!
  451fa4:	mov	x29, sp
  451fa8:	stp	x19, x20, [sp, #16]
  451fac:	mov	x19, x0
  451fb0:	mov	w20, w1
  451fb4:	ldr	x0, [x2, #8]
  451fb8:	ldr	x0, [x0]
  451fbc:	ldrb	w1, [x0]
  451fc0:	cmp	w1, #0x66
  451fc4:	b.ne	452138 <ferror@plt+0x4f8b8>  // b.any
  451fc8:	ldr	x1, [x3]
  451fcc:	stp	x21, x22, [sp, #32]
  451fd0:	stp	x23, x24, [sp, #48]
  451fd4:	mov	x24, #0x0                   	// #0
  451fd8:	ldp	x23, x21, [x1, #8]
  451fdc:	ldr	w1, [x21]
  451fe0:	cmp	w1, #0x3c
  451fe4:	b.eq	452210 <ferror@plt+0x4f990>  // b.none
  451fe8:	ldr	w22, [x19, #316]
  451fec:	mov	w1, #0xffffffff            	// #-1
  451ff0:	str	w1, [x19, #316]
  451ff4:	ldrb	w0, [x0, #1]
  451ff8:	cmp	w0, #0x6c
  451ffc:	b.eq	452230 <ferror@plt+0x4f9b0>  // b.none
  452000:	b.hi	452148 <ferror@plt+0x4f8c8>  // b.pmore
  452004:	cmp	w0, #0x4c
  452008:	b.eq	452014 <ferror@plt+0x4f794>  // b.none
  45200c:	cmp	w0, #0x52
  452010:	b.ne	45211c <ferror@plt+0x4f89c>  // b.any
  452014:	ldr	x1, [x19, #256]
  452018:	add	x0, x1, #0x1
  45201c:	cmp	x1, #0xff
  452020:	b.eq	452344 <ferror@plt+0x4fac4>  // b.none
  452024:	str	x0, [x19, #256]
  452028:	mov	w0, #0x28                  	// #40
  45202c:	strb	w0, [x19, x1]
  452030:	mov	x2, x21
  452034:	strb	w0, [x19, #264]
  452038:	mov	w1, w20
  45203c:	mov	x0, x19
  452040:	bl	451e50 <ferror@plt+0x4f5d0>
  452044:	mov	w1, w20
  452048:	mov	x2, x23
  45204c:	mov	x0, x19
  452050:	bl	451ce8 <ferror@plt+0x4f468>
  452054:	ldr	x1, [x19, #256]
  452058:	cmp	x1, #0xff
  45205c:	b.eq	452478 <ferror@plt+0x4fbf8>  // b.none
  452060:	add	x0, x1, #0x1
  452064:	str	x0, [x19, #256]
  452068:	mov	w21, #0x2e                  	// #46
  45206c:	strb	w21, [x19, x1]
  452070:	strb	w21, [x19, #264]
  452074:	cmp	x0, #0xff
  452078:	b.ne	452438 <ferror@plt+0x4fbb8>  // b.any
  45207c:	ldp	x3, x2, [x19, #272]
  452080:	strb	wzr, [x19, #255]
  452084:	mov	x1, x0
  452088:	mov	x0, x19
  45208c:	blr	x3
  452090:	strb	w21, [x19]
  452094:	ldr	x0, [x19, #320]
  452098:	mov	x1, #0x1                   	// #1
  45209c:	add	x0, x0, x1
  4520a0:	str	x0, [x19, #320]
  4520a4:	add	x0, x1, #0x1
  4520a8:	str	x0, [x19, #256]
  4520ac:	mov	w0, #0x2e                  	// #46
  4520b0:	strb	w0, [x19, x1]
  4520b4:	mov	x2, x23
  4520b8:	strb	w0, [x19, #264]
  4520bc:	mov	w1, w20
  4520c0:	mov	x0, x19
  4520c4:	bl	451ce8 <ferror@plt+0x4f468>
  4520c8:	mov	x2, x24
  4520cc:	mov	w1, w20
  4520d0:	mov	x0, x19
  4520d4:	bl	451e50 <ferror@plt+0x4f5d0>
  4520d8:	ldr	x1, [x19, #256]
  4520dc:	add	x0, x1, #0x1
  4520e0:	cmp	x1, #0xff
  4520e4:	b.ne	45210c <ferror@plt+0x4f88c>  // b.any
  4520e8:	ldp	x3, x2, [x19, #272]
  4520ec:	strb	wzr, [x19, #255]
  4520f0:	mov	x0, x19
  4520f4:	blr	x3
  4520f8:	ldr	x2, [x19, #320]
  4520fc:	mov	x0, #0x1                   	// #1
  452100:	mov	x1, #0x0                   	// #0
  452104:	add	x2, x2, x0
  452108:	str	x2, [x19, #320]
  45210c:	str	x0, [x19, #256]
  452110:	mov	w0, #0x29                  	// #41
  452114:	strb	w0, [x19, x1]
  452118:	strb	w0, [x19, #264]
  45211c:	ldp	x23, x24, [sp, #48]
  452120:	str	w22, [x19, #316]
  452124:	ldp	x21, x22, [sp, #32]
  452128:	mov	w0, #0x1                   	// #1
  45212c:	ldp	x19, x20, [sp, #16]
  452130:	ldp	x29, x30, [sp], #64
  452134:	ret
  452138:	mov	w0, #0x0                   	// #0
  45213c:	ldp	x19, x20, [sp, #16]
  452140:	ldp	x29, x30, [sp], #64
  452144:	ret
  452148:	cmp	w0, #0x72
  45214c:	b.ne	45211c <ferror@plt+0x4f89c>  // b.any
  452150:	ldr	x1, [x19, #256]
  452154:	add	x0, x1, #0x1
  452158:	cmp	x1, #0xff
  45215c:	b.eq	45236c <ferror@plt+0x4faec>  // b.none
  452160:	str	x0, [x19, #256]
  452164:	mov	w0, #0x28                  	// #40
  452168:	strb	w0, [x19, x1]
  45216c:	mov	x2, x21
  452170:	strb	w0, [x19, #264]
  452174:	mov	w1, w20
  452178:	mov	x0, x19
  45217c:	bl	451e50 <ferror@plt+0x4f5d0>
  452180:	mov	x0, x19
  452184:	mov	x2, x23
  452188:	mov	w1, w20
  45218c:	bl	451ce8 <ferror@plt+0x4f468>
  452190:	ldr	x0, [x19, #256]
  452194:	cmp	x0, #0xff
  452198:	b.eq	452408 <ferror@plt+0x4fb88>  // b.none
  45219c:	add	x1, x0, #0x1
  4521a0:	str	x1, [x19, #256]
  4521a4:	mov	w20, #0x2e                  	// #46
  4521a8:	strb	w20, [x19, x0]
  4521ac:	strb	w20, [x19, #264]
  4521b0:	cmp	x1, #0xff
  4521b4:	b.ne	4522b8 <ferror@plt+0x4fa38>  // b.any
  4521b8:	ldp	x3, x2, [x19, #272]
  4521bc:	strb	wzr, [x19, #255]
  4521c0:	mov	x0, x19
  4521c4:	blr	x3
  4521c8:	strb	w20, [x19]
  4521cc:	ldr	x0, [x19, #320]
  4521d0:	mov	x1, #0x1                   	// #1
  4521d4:	add	x0, x0, x1
  4521d8:	str	x0, [x19, #320]
  4521dc:	add	x0, x1, #0x1
  4521e0:	mov	w2, #0x2e                  	// #46
  4521e4:	strb	w2, [x19, x1]
  4521e8:	add	x1, x0, #0x1
  4521ec:	str	x1, [x19, #256]
  4521f0:	mov	w1, #0x29                  	// #41
  4521f4:	strb	w1, [x19, x0]
  4521f8:	mov	w0, #0x1                   	// #1
  4521fc:	strb	w1, [x19, #264]
  452200:	ldp	x23, x24, [sp, #48]
  452204:	str	w22, [x19, #316]
  452208:	ldp	x21, x22, [sp, #32]
  45220c:	b	45212c <ferror@plt+0x4f8ac>
  452210:	ldr	w22, [x19, #316]
  452214:	mov	w1, #0xffffffff            	// #-1
  452218:	ldr	x24, [x21, #16]
  45221c:	ldr	x21, [x21, #8]
  452220:	str	w1, [x19, #316]
  452224:	ldrb	w0, [x0, #1]
  452228:	cmp	w0, #0x6c
  45222c:	b.ne	452000 <ferror@plt+0x4f780>  // b.any
  452230:	ldr	x0, [x19, #256]
  452234:	cmp	x0, #0xff
  452238:	b.eq	452394 <ferror@plt+0x4fb14>  // b.none
  45223c:	add	x1, x0, #0x1
  452240:	str	x1, [x19, #256]
  452244:	mov	w2, #0x28                  	// #40
  452248:	strb	w2, [x19, x0]
  45224c:	strb	w2, [x19, #264]
  452250:	cmp	x1, #0xff
  452254:	b.ne	4522fc <ferror@plt+0x4fa7c>  // b.any
  452258:	ldp	x3, x2, [x19, #272]
  45225c:	strb	wzr, [x19, #255]
  452260:	mov	x0, x19
  452264:	blr	x3
  452268:	ldr	x0, [x19, #320]
  45226c:	mov	w2, #0x2e                  	// #46
  452270:	mov	x1, #0x1                   	// #1
  452274:	strb	w2, [x19]
  452278:	add	x0, x0, x1
  45227c:	str	x0, [x19, #320]
  452280:	add	x0, x1, #0x1
  452284:	mov	w2, #0x2e                  	// #46
  452288:	strb	w2, [x19, x1]
  45228c:	add	x1, x0, #0x1
  452290:	str	x1, [x19, #256]
  452294:	mov	w1, #0x2e                  	// #46
  452298:	strb	w1, [x19, x0]
  45229c:	mov	x2, x23
  4522a0:	strb	w1, [x19, #264]
  4522a4:	mov	x0, x19
  4522a8:	mov	w1, w20
  4522ac:	bl	451ce8 <ferror@plt+0x4f468>
  4522b0:	mov	x2, x21
  4522b4:	b	4520cc <ferror@plt+0x4f84c>
  4522b8:	add	x3, x0, #0x2
  4522bc:	str	x3, [x19, #256]
  4522c0:	strb	w20, [x19, x1]
  4522c4:	cmp	x3, #0xff
  4522c8:	strb	w20, [x19, #264]
  4522cc:	b.ne	4523c4 <ferror@plt+0x4fb44>  // b.any
  4522d0:	ldp	x4, x2, [x19, #272]
  4522d4:	strb	wzr, [x19, #255]
  4522d8:	mov	x1, x3
  4522dc:	mov	x0, x19
  4522e0:	blr	x4
  4522e4:	strb	w20, [x19]
  4522e8:	ldr	x1, [x19, #320]
  4522ec:	mov	x0, #0x1                   	// #1
  4522f0:	add	x1, x1, x0
  4522f4:	str	x1, [x19, #320]
  4522f8:	b	4521e8 <ferror@plt+0x4f968>
  4522fc:	add	x3, x0, #0x2
  452300:	str	x3, [x19, #256]
  452304:	mov	w24, #0x2e                  	// #46
  452308:	strb	w24, [x19, x1]
  45230c:	strb	w24, [x19, #264]
  452310:	cmp	x3, #0xff
  452314:	b.ne	4524a4 <ferror@plt+0x4fc24>  // b.any
  452318:	ldp	x4, x2, [x19, #272]
  45231c:	strb	wzr, [x19, #255]
  452320:	mov	x1, x3
  452324:	mov	x0, x19
  452328:	blr	x4
  45232c:	strb	w24, [x19]
  452330:	ldr	x1, [x19, #320]
  452334:	mov	x0, #0x1                   	// #1
  452338:	add	x1, x1, x0
  45233c:	str	x1, [x19, #320]
  452340:	b	45228c <ferror@plt+0x4fa0c>
  452344:	ldp	x3, x2, [x19, #272]
  452348:	strb	wzr, [x19, #255]
  45234c:	mov	x0, x19
  452350:	blr	x3
  452354:	ldr	x2, [x19, #320]
  452358:	mov	x0, #0x1                   	// #1
  45235c:	mov	x1, #0x0                   	// #0
  452360:	add	x2, x2, x0
  452364:	str	x2, [x19, #320]
  452368:	b	452024 <ferror@plt+0x4f7a4>
  45236c:	ldp	x3, x2, [x19, #272]
  452370:	strb	wzr, [x19, #255]
  452374:	mov	x0, x19
  452378:	blr	x3
  45237c:	ldr	x2, [x19, #320]
  452380:	mov	x0, #0x1                   	// #1
  452384:	mov	x1, #0x0                   	// #0
  452388:	add	x2, x2, x0
  45238c:	str	x2, [x19, #320]
  452390:	b	452160 <ferror@plt+0x4f8e0>
  452394:	ldp	x3, x2, [x19, #272]
  452398:	strb	wzr, [x19, #255]
  45239c:	mov	x1, x0
  4523a0:	mov	x0, x19
  4523a4:	blr	x3
  4523a8:	ldr	x0, [x19, #320]
  4523ac:	mov	w2, #0x2e28                	// #11816
  4523b0:	mov	x1, #0x2                   	// #2
  4523b4:	strh	w2, [x19]
  4523b8:	add	x0, x0, #0x1
  4523bc:	str	x0, [x19, #320]
  4523c0:	b	452280 <ferror@plt+0x4fa00>
  4523c4:	add	x0, x0, #0x3
  4523c8:	str	x0, [x19, #256]
  4523cc:	strb	w20, [x19, x3]
  4523d0:	cmp	x0, #0xff
  4523d4:	strb	w20, [x19, #264]
  4523d8:	b.ne	4521e8 <ferror@plt+0x4f968>  // b.any
  4523dc:	ldp	x3, x2, [x19, #272]
  4523e0:	strb	wzr, [x19, #255]
  4523e4:	mov	x1, x0
  4523e8:	mov	x0, x19
  4523ec:	blr	x3
  4523f0:	ldr	x2, [x19, #320]
  4523f4:	mov	x1, #0x1                   	// #1
  4523f8:	mov	x0, #0x0                   	// #0
  4523fc:	add	x2, x2, x1
  452400:	str	x2, [x19, #320]
  452404:	b	4521ec <ferror@plt+0x4f96c>
  452408:	ldp	x3, x2, [x19, #272]
  45240c:	strb	wzr, [x19, #255]
  452410:	mov	x1, x0
  452414:	mov	x0, x19
  452418:	blr	x3
  45241c:	ldr	x0, [x19, #320]
  452420:	mov	w2, #0x2e2e                	// #11822
  452424:	mov	x1, #0x2                   	// #2
  452428:	strh	w2, [x19]
  45242c:	add	x0, x0, #0x1
  452430:	str	x0, [x19, #320]
  452434:	b	4521dc <ferror@plt+0x4f95c>
  452438:	add	x1, x1, #0x2
  45243c:	str	x1, [x19, #256]
  452440:	strb	w21, [x19, x0]
  452444:	cmp	x1, #0xff
  452448:	strb	w21, [x19, #264]
  45244c:	b.ne	4520a4 <ferror@plt+0x4f824>  // b.any
  452450:	ldp	x3, x2, [x19, #272]
  452454:	strb	wzr, [x19, #255]
  452458:	mov	x0, x19
  45245c:	blr	x3
  452460:	ldr	x2, [x19, #320]
  452464:	mov	x0, #0x1                   	// #1
  452468:	mov	x1, #0x0                   	// #0
  45246c:	add	x2, x2, x0
  452470:	str	x2, [x19, #320]
  452474:	b	4520a8 <ferror@plt+0x4f828>
  452478:	ldp	x3, x2, [x19, #272]
  45247c:	strb	wzr, [x19, #255]
  452480:	mov	x0, x19
  452484:	blr	x3
  452488:	ldr	x0, [x19, #320]
  45248c:	mov	w2, #0x2e2e                	// #11822
  452490:	mov	x1, #0x2                   	// #2
  452494:	strh	w2, [x19]
  452498:	add	x0, x0, #0x1
  45249c:	str	x0, [x19, #320]
  4524a0:	b	4520a4 <ferror@plt+0x4f824>
  4524a4:	add	x0, x0, #0x3
  4524a8:	str	x0, [x19, #256]
  4524ac:	strb	w24, [x19, x3]
  4524b0:	cmp	x0, #0xff
  4524b4:	strb	w24, [x19, #264]
  4524b8:	b.ne	45228c <ferror@plt+0x4fa0c>  // b.any
  4524bc:	ldp	x3, x2, [x19, #272]
  4524c0:	strb	wzr, [x19, #255]
  4524c4:	mov	x1, x0
  4524c8:	mov	x0, x19
  4524cc:	blr	x3
  4524d0:	ldr	x2, [x19, #320]
  4524d4:	mov	x1, #0x1                   	// #1
  4524d8:	mov	x0, #0x0                   	// #0
  4524dc:	add	x2, x2, x1
  4524e0:	str	x2, [x19, #320]
  4524e4:	b	452290 <ferror@plt+0x4fa10>
  4524e8:	stp	x29, x30, [sp, #-80]!
  4524ec:	mov	x29, sp
  4524f0:	stp	x19, x20, [sp, #16]
  4524f4:	mov	x19, x0
  4524f8:	ldr	w0, [x2]
  4524fc:	stp	x21, x22, [sp, #32]
  452500:	mov	x20, x2
  452504:	sub	w0, w0, #0x3
  452508:	mov	w21, w1
  45250c:	cmp	w0, #0x4d
  452510:	b.ls	452544 <ferror@plt+0x4fcc4>  // b.plast
  452514:	ldr	w0, [x20, #4]
  452518:	cmp	w0, #0x1
  45251c:	b.gt	45252c <ferror@plt+0x4fcac>
  452520:	ldr	w1, [x19, #308]
  452524:	cmp	w1, #0x400
  452528:	b.le	4530f4 <ferror@plt+0x50874>
  45252c:	mov	w0, #0x1                   	// #1
  452530:	str	w0, [x19, #304]
  452534:	ldp	x19, x20, [sp, #16]
  452538:	ldp	x21, x22, [sp, #32]
  45253c:	ldp	x29, x30, [sp], #80
  452540:	ret
  452544:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  452548:	add	x1, x1, #0x7cc
  45254c:	ldrh	w0, [x1, w0, uxtw #1]
  452550:	adr	x1, 45255c <ferror@plt+0x4fcdc>
  452554:	add	x0, x1, w0, sxth #2
  452558:	br	x0
  45255c:	ldr	x0, [x19, #256]
  452560:	cmp	x0, #0xff
  452564:	b.eq	4535cc <ferror@plt+0x50d4c>  // b.none
  452568:	add	x1, x0, #0x1
  45256c:	str	x1, [x19, #256]
  452570:	mov	w2, #0x20                  	// #32
  452574:	strb	w2, [x19, x0]
  452578:	strb	w2, [x19, #264]
  45257c:	cmp	x1, #0xff
  452580:	b.ne	453940 <ferror@plt+0x510c0>  // b.any
  452584:	ldp	x3, x2, [x19, #272]
  452588:	strb	wzr, [x19, #255]
  45258c:	mov	x0, x19
  452590:	blr	x3
  452594:	ldr	x0, [x19, #320]
  452598:	mov	w3, #0x6f63                	// #28515
  45259c:	mov	w2, #0x6e                  	// #110
  4525a0:	mov	x1, #0x3                   	// #3
  4525a4:	add	x0, x0, #0x1
  4525a8:	strh	w3, [x19]
  4525ac:	strb	w2, [x19, #2]
  4525b0:	str	x0, [x19, #320]
  4525b4:	add	x0, x1, #0x1
  4525b8:	str	x0, [x19, #256]
  4525bc:	mov	w2, #0x73                  	// #115
  4525c0:	strb	w2, [x19, x1]
  4525c4:	strb	w2, [x19, #264]
  4525c8:	cmp	x0, #0xff
  4525cc:	b.ne	4526c0 <ferror@plt+0x4fe40>  // b.any
  4525d0:	ldp	x3, x2, [x19, #272]
  4525d4:	strb	wzr, [x19, #255]
  4525d8:	mov	x1, x0
  4525dc:	mov	x0, x19
  4525e0:	blr	x3
  4525e4:	ldr	x2, [x19, #320]
  4525e8:	mov	x1, #0x1                   	// #1
  4525ec:	mov	x0, #0x0                   	// #0
  4525f0:	add	x2, x2, x1
  4525f4:	str	x2, [x19, #320]
  4525f8:	str	x1, [x19, #256]
  4525fc:	mov	w1, #0x74                  	// #116
  452600:	strb	w1, [x19, x0]
  452604:	strb	w1, [x19, #264]
  452608:	ldp	x19, x20, [sp, #16]
  45260c:	ldp	x21, x22, [sp, #32]
  452610:	ldp	x29, x30, [sp], #80
  452614:	ret
  452618:	ldr	x0, [x19, #256]
  45261c:	cmp	x0, #0xff
  452620:	b.eq	453208 <ferror@plt+0x50988>  // b.none
  452624:	add	x1, x0, #0x1
  452628:	str	x1, [x19, #256]
  45262c:	mov	w2, #0x20                  	// #32
  452630:	strb	w2, [x19, x0]
  452634:	strb	w2, [x19, #264]
  452638:	cmp	x1, #0xff
  45263c:	b.ne	453a80 <ferror@plt+0x51200>  // b.any
  452640:	ldp	x3, x2, [x19, #272]
  452644:	strb	wzr, [x19, #255]
  452648:	mov	x0, x19
  45264c:	blr	x3
  452650:	ldr	x0, [x19, #320]
  452654:	mov	w2, #0x6572                	// #25970
  452658:	mov	w1, #0x73                  	// #115
  45265c:	mov	x3, #0x3                   	// #3
  452660:	add	x0, x0, #0x1
  452664:	strh	w2, [x19]
  452668:	strb	w1, [x19, #2]
  45266c:	str	x0, [x19, #320]
  452670:	add	x1, x3, #0x1
  452674:	str	x1, [x19, #256]
  452678:	mov	w0, #0x74                  	// #116
  45267c:	strb	w0, [x19, x3]
  452680:	strb	w0, [x19, #264]
  452684:	cmp	x1, #0xff
  452688:	b.ne	453ad0 <ferror@plt+0x51250>  // b.any
  45268c:	ldp	x3, x2, [x19, #272]
  452690:	strb	wzr, [x19, #255]
  452694:	mov	x0, x19
  452698:	blr	x3
  45269c:	ldr	x0, [x19, #320]
  4526a0:	mov	w2, #0x6972                	// #26994
  4526a4:	mov	x1, #0x2                   	// #2
  4526a8:	strh	w2, [x19]
  4526ac:	add	x0, x0, #0x1
  4526b0:	str	x0, [x19, #320]
  4526b4:	add	x0, x1, #0x1
  4526b8:	mov	w2, #0x63                  	// #99
  4526bc:	strb	w2, [x19, x1]
  4526c0:	add	x1, x0, #0x1
  4526c4:	b	4525f8 <ferror@plt+0x4fd78>
  4526c8:	ldr	x0, [x19, #256]
  4526cc:	cmp	x0, #0xff
  4526d0:	b.eq	4532b0 <ferror@plt+0x50a30>  // b.none
  4526d4:	add	x1, x0, #0x1
  4526d8:	str	x1, [x19, #256]
  4526dc:	mov	w2, #0x20                  	// #32
  4526e0:	strb	w2, [x19, x0]
  4526e4:	strb	w2, [x19, #264]
  4526e8:	cmp	x1, #0xff
  4526ec:	b.ne	453ce0 <ferror@plt+0x51460>  // b.any
  4526f0:	ldp	x3, x2, [x19, #272]
  4526f4:	strb	wzr, [x19, #255]
  4526f8:	mov	x0, x19
  4526fc:	blr	x3
  452700:	ldr	x0, [x19, #320]
  452704:	mov	w2, #0x6f76                	// #28534
  452708:	mov	w1, #0x6c                  	// #108
  45270c:	mov	x3, #0x3                   	// #3
  452710:	add	x0, x0, #0x1
  452714:	strh	w2, [x19]
  452718:	strb	w1, [x19, #2]
  45271c:	str	x0, [x19, #320]
  452720:	add	x1, x3, #0x1
  452724:	str	x1, [x19, #256]
  452728:	mov	w0, #0x61                  	// #97
  45272c:	strb	w0, [x19, x3]
  452730:	strb	w0, [x19, #264]
  452734:	cmp	x1, #0xff
  452738:	b.ne	453d30 <ferror@plt+0x514b0>  // b.any
  45273c:	ldp	x3, x2, [x19, #272]
  452740:	strb	wzr, [x19, #255]
  452744:	mov	x0, x19
  452748:	blr	x3
  45274c:	ldr	x0, [x19, #320]
  452750:	mov	w2, #0x6974                	// #26996
  452754:	mov	x1, #0x2                   	// #2
  452758:	strh	w2, [x19]
  45275c:	add	x0, x0, #0x1
  452760:	str	x0, [x19, #320]
  452764:	add	x0, x1, #0x1
  452768:	mov	w2, #0x6c                  	// #108
  45276c:	strb	w2, [x19, x1]
  452770:	add	x1, x0, #0x1
  452774:	b	453378 <ferror@plt+0x50af8>
  452778:	ldr	x0, [x19, #256]
  45277c:	cmp	x0, #0xff
  452780:	b.eq	453090 <ferror@plt+0x50810>  // b.none
  452784:	add	x1, x0, #0x1
  452788:	str	x1, [x19, #256]
  45278c:	mov	w2, #0x20                  	// #32
  452790:	strb	w2, [x19, x0]
  452794:	strb	w2, [x19, #264]
  452798:	b	45299c <ferror@plt+0x5011c>
  45279c:	ldr	x1, [x19, #256]
  4527a0:	add	x0, x1, #0x1
  4527a4:	cmp	x1, #0xff
  4527a8:	b.eq	45338c <ferror@plt+0x50b0c>  // b.none
  4527ac:	str	x0, [x19, #256]
  4527b0:	mov	w0, #0x20                  	// #32
  4527b4:	strb	w0, [x19, x1]
  4527b8:	strb	w0, [x19, #264]
  4527bc:	ldr	x20, [x20, #16]
  4527c0:	cbnz	x20, 452514 <ferror@plt+0x4fc94>
  4527c4:	b	45252c <ferror@plt+0x4fcac>
  4527c8:	tbnz	w21, #2, 452534 <ferror@plt+0x4fcb4>
  4527cc:	ldr	x1, [x19, #256]
  4527d0:	add	x0, x1, #0x1
  4527d4:	cmp	x1, #0xff
  4527d8:	b.ne	452800 <ferror@plt+0x4ff80>  // b.any
  4527dc:	ldp	x3, x2, [x19, #272]
  4527e0:	strb	wzr, [x19, #255]
  4527e4:	mov	x0, x19
  4527e8:	blr	x3
  4527ec:	ldr	x2, [x19, #320]
  4527f0:	mov	x0, #0x1                   	// #1
  4527f4:	mov	x1, #0x0                   	// #0
  4527f8:	add	x2, x2, x0
  4527fc:	str	x2, [x19, #320]
  452800:	str	x0, [x19, #256]
  452804:	mov	w0, #0x2a                  	// #42
  452808:	strb	w0, [x19, x1]
  45280c:	strb	w0, [x19, #264]
  452810:	b	452534 <ferror@plt+0x4fcb4>
  452814:	ldr	x20, [x2, #8]
  452818:	cbnz	x20, 452514 <ferror@plt+0x4fc94>
  45281c:	b	45252c <ferror@plt+0x4fcac>
  452820:	ldrb	w0, [x19, #264]
  452824:	cmp	w0, #0x28
  452828:	b.eq	452870 <ferror@plt+0x4fff0>  // b.none
  45282c:	ldr	x1, [x19, #256]
  452830:	add	x0, x1, #0x1
  452834:	cmp	x1, #0xff
  452838:	b.ne	452860 <ferror@plt+0x4ffe0>  // b.any
  45283c:	ldp	x3, x2, [x19, #272]
  452840:	strb	wzr, [x19, #255]
  452844:	mov	x0, x19
  452848:	blr	x3
  45284c:	ldr	x2, [x19, #320]
  452850:	mov	x0, #0x1                   	// #1
  452854:	mov	x1, #0x0                   	// #0
  452858:	add	x2, x2, x0
  45285c:	str	x2, [x19, #320]
  452860:	str	x0, [x19, #256]
  452864:	mov	w0, #0x20                  	// #32
  452868:	strb	w0, [x19, x1]
  45286c:	strb	w0, [x19, #264]
  452870:	ldr	x20, [x20, #8]
  452874:	cbz	x20, 453704 <ferror@plt+0x50e84>
  452878:	ldr	w0, [x20, #4]
  45287c:	cmp	w0, #0x1
  452880:	b.gt	453704 <ferror@plt+0x50e84>
  452884:	ldr	w1, [x19, #308]
  452888:	cmp	w1, #0x400
  45288c:	b.gt	453704 <ferror@plt+0x50e84>
  452890:	ldr	x3, [x19, #328]
  452894:	add	w0, w0, #0x1
  452898:	str	w0, [x20, #4]
  45289c:	add	w1, w1, #0x1
  4528a0:	add	x0, sp, #0x40
  4528a4:	str	w1, [x19, #308]
  4528a8:	str	x0, [x19, #328]
  4528ac:	mov	w1, w21
  4528b0:	mov	x0, x19
  4528b4:	mov	x2, x20
  4528b8:	stp	x20, x3, [sp, #64]
  4528bc:	bl	448dd0 <ferror@plt+0x46550>
  4528c0:	ldr	w1, [x20, #4]
  4528c4:	ldr	x0, [sp, #72]
  4528c8:	str	x0, [x19, #328]
  4528cc:	ldr	w0, [x19, #308]
  4528d0:	sub	w1, w1, #0x1
  4528d4:	str	w1, [x20, #4]
  4528d8:	sub	w0, w0, #0x1
  4528dc:	str	w0, [x19, #308]
  4528e0:	ldr	x0, [x19, #256]
  4528e4:	cmp	x0, #0xff
  4528e8:	b.eq	453ff4 <ferror@plt+0x51774>  // b.none
  4528ec:	add	x1, x0, #0x1
  4528f0:	str	x1, [x19, #256]
  4528f4:	mov	w20, #0x3a                  	// #58
  4528f8:	strb	w20, [x19, x0]
  4528fc:	strb	w20, [x19, #264]
  452900:	cmp	x1, #0xff
  452904:	b.ne	453fb0 <ferror@plt+0x51730>  // b.any
  452908:	ldp	x3, x2, [x19, #272]
  45290c:	strb	wzr, [x19, #255]
  452910:	mov	x0, x19
  452914:	blr	x3
  452918:	strb	w20, [x19]
  45291c:	ldr	x1, [x19, #320]
  452920:	mov	x0, #0x1                   	// #1
  452924:	add	x1, x1, x0
  452928:	str	x1, [x19, #320]
  45292c:	add	x1, x0, #0x1
  452930:	str	x1, [x19, #256]
  452934:	mov	w1, #0x2a                  	// #42
  452938:	strb	w1, [x19, x0]
  45293c:	strb	w1, [x19, #264]
  452940:	b	452534 <ferror@plt+0x4fcb4>
  452944:	ldr	x0, [x19, #256]
  452948:	cmp	x0, #0xff
  45294c:	b.eq	4531d8 <ferror@plt+0x50958>  // b.none
  452950:	add	x1, x0, #0x1
  452954:	str	x1, [x19, #256]
  452958:	mov	w2, #0x20                  	// #32
  45295c:	strb	w2, [x19, x0]
  452960:	strb	w2, [x19, #264]
  452964:	b	45296c <ferror@plt+0x500ec>
  452968:	ldr	x1, [x19, #256]
  45296c:	cmp	x1, #0xff
  452970:	b.eq	4530cc <ferror@plt+0x5084c>  // b.none
  452974:	add	x0, x1, #0x1
  452978:	str	x0, [x19, #256]
  45297c:	mov	w0, #0x26                  	// #38
  452980:	strb	w0, [x19, x1]
  452984:	strb	w0, [x19, #264]
  452988:	ldp	x19, x20, [sp, #16]
  45298c:	ldp	x21, x22, [sp, #32]
  452990:	ldp	x29, x30, [sp], #80
  452994:	ret
  452998:	ldr	x1, [x19, #256]
  45299c:	cmp	x1, #0xff
  4529a0:	b.eq	453728 <ferror@plt+0x50ea8>  // b.none
  4529a4:	add	x0, x1, #0x1
  4529a8:	str	x0, [x19, #256]
  4529ac:	mov	w2, #0x26                  	// #38
  4529b0:	strb	w2, [x19, x1]
  4529b4:	strb	w2, [x19, #264]
  4529b8:	cmp	x0, #0xff
  4529bc:	b.ne	4530bc <ferror@plt+0x5083c>  // b.any
  4529c0:	ldp	x3, x2, [x19, #272]
  4529c4:	strb	wzr, [x19, #255]
  4529c8:	mov	x1, x0
  4529cc:	mov	x0, x19
  4529d0:	blr	x3
  4529d4:	ldr	x2, [x19, #320]
  4529d8:	mov	x1, #0x1                   	// #1
  4529dc:	mov	x0, #0x0                   	// #0
  4529e0:	add	x2, x2, x1
  4529e4:	str	x2, [x19, #320]
  4529e8:	str	x1, [x19, #256]
  4529ec:	mov	w1, #0x26                  	// #38
  4529f0:	strb	w1, [x19, x0]
  4529f4:	strb	w1, [x19, #264]
  4529f8:	ldp	x19, x20, [sp, #16]
  4529fc:	ldp	x21, x22, [sp, #32]
  452a00:	ldp	x29, x30, [sp], #80
  452a04:	ret
  452a08:	ldr	x0, [x19, #256]
  452a0c:	cmp	x0, #0xff
  452a10:	b.eq	4534fc <ferror@plt+0x50c7c>  // b.none
  452a14:	add	x1, x0, #0x1
  452a18:	str	x1, [x19, #256]
  452a1c:	mov	w2, #0x20                  	// #32
  452a20:	strb	w2, [x19, x0]
  452a24:	strb	w2, [x19, #264]
  452a28:	cmp	x1, #0xff
  452a2c:	b.ne	453898 <ferror@plt+0x51018>  // b.any
  452a30:	ldp	x3, x2, [x19, #272]
  452a34:	strb	wzr, [x19, #255]
  452a38:	mov	x0, x19
  452a3c:	blr	x3
  452a40:	ldr	x0, [x19, #320]
  452a44:	mov	w3, #0x5f5f                	// #24415
  452a48:	mov	w2, #0x76                  	// #118
  452a4c:	mov	x1, #0x3                   	// #3
  452a50:	add	x0, x0, #0x1
  452a54:	strh	w3, [x19]
  452a58:	strb	w2, [x19, #2]
  452a5c:	str	x0, [x19, #320]
  452a60:	add	x0, x1, #0x1
  452a64:	str	x0, [x19, #256]
  452a68:	mov	w2, #0x65                  	// #101
  452a6c:	strb	w2, [x19, x1]
  452a70:	strb	w2, [x19, #264]
  452a74:	cmp	x0, #0xff
  452a78:	b.ne	4538e8 <ferror@plt+0x51068>  // b.any
  452a7c:	ldp	x3, x2, [x19, #272]
  452a80:	strb	wzr, [x19, #255]
  452a84:	mov	x1, x0
  452a88:	mov	x0, x19
  452a8c:	blr	x3
  452a90:	ldr	x0, [x19, #320]
  452a94:	mov	w2, #0x7463                	// #29795
  452a98:	mov	w1, #0x6f                  	// #111
  452a9c:	mov	x3, #0x3                   	// #3
  452aa0:	add	x0, x0, #0x1
  452aa4:	strh	w2, [x19]
  452aa8:	strb	w1, [x19, #2]
  452aac:	str	x0, [x19, #320]
  452ab0:	add	x1, x3, #0x1
  452ab4:	str	x1, [x19, #256]
  452ab8:	mov	w0, #0x72                  	// #114
  452abc:	strb	w0, [x19, x3]
  452ac0:	strb	w0, [x19, #264]
  452ac4:	cmp	x1, #0xff
  452ac8:	b.ne	4535c4 <ferror@plt+0x50d44>  // b.any
  452acc:	ldp	x3, x2, [x19, #272]
  452ad0:	strb	wzr, [x19, #255]
  452ad4:	mov	x0, x19
  452ad8:	blr	x3
  452adc:	ldr	x2, [x19, #320]
  452ae0:	mov	x0, #0x1                   	// #1
  452ae4:	mov	x1, #0x0                   	// #0
  452ae8:	add	x2, x2, x0
  452aec:	str	x2, [x19, #320]
  452af0:	str	x0, [x19, #256]
  452af4:	mov	w2, #0x28                  	// #40
  452af8:	strb	w2, [x19, x1]
  452afc:	strb	w2, [x19, #264]
  452b00:	ldr	x20, [x20, #8]
  452b04:	cbz	x20, 453710 <ferror@plt+0x50e90>
  452b08:	ldr	w1, [x20, #4]
  452b0c:	cmp	w1, #0x1
  452b10:	b.gt	453710 <ferror@plt+0x50e90>
  452b14:	ldr	w2, [x19, #308]
  452b18:	cmp	w2, #0x400
  452b1c:	b.gt	453710 <ferror@plt+0x50e90>
  452b20:	ldr	x3, [x19, #328]
  452b24:	add	w1, w1, #0x1
  452b28:	str	w1, [x20, #4]
  452b2c:	add	w2, w2, #0x1
  452b30:	add	x0, sp, #0x40
  452b34:	str	w2, [x19, #308]
  452b38:	str	x0, [x19, #328]
  452b3c:	mov	w1, w21
  452b40:	mov	x2, x20
  452b44:	mov	x0, x19
  452b48:	stp	x20, x3, [sp, #64]
  452b4c:	bl	448dd0 <ferror@plt+0x46550>
  452b50:	ldr	w2, [x20, #4]
  452b54:	ldr	x0, [sp, #72]
  452b58:	str	x0, [x19, #328]
  452b5c:	ldr	w1, [x19, #308]
  452b60:	sub	w2, w2, #0x1
  452b64:	ldr	x0, [x19, #256]
  452b68:	str	w2, [x20, #4]
  452b6c:	sub	w1, w1, #0x1
  452b70:	str	w1, [x19, #308]
  452b74:	add	x1, x0, #0x1
  452b78:	cmp	x0, #0xff
  452b7c:	b.ne	452ba8 <ferror@plt+0x50328>  // b.any
  452b80:	ldp	x3, x2, [x19, #272]
  452b84:	strb	wzr, [x19, #255]
  452b88:	mov	x1, x0
  452b8c:	mov	x0, x19
  452b90:	blr	x3
  452b94:	ldr	x2, [x19, #320]
  452b98:	mov	x1, #0x1                   	// #1
  452b9c:	mov	x0, #0x0                   	// #0
  452ba0:	add	x2, x2, x1
  452ba4:	str	x2, [x19, #320]
  452ba8:	str	x1, [x19, #256]
  452bac:	mov	w1, #0x29                  	// #41
  452bb0:	strb	w1, [x19, x0]
  452bb4:	strb	w1, [x19, #264]
  452bb8:	b	452534 <ferror@plt+0x4fcb4>
  452bbc:	ldr	x0, [x19, #256]
  452bc0:	cmp	x0, #0xff
  452bc4:	b.eq	453148 <ferror@plt+0x508c8>  // b.none
  452bc8:	add	x1, x0, #0x1
  452bcc:	str	x1, [x19, #256]
  452bd0:	mov	w2, #0x20                  	// #32
  452bd4:	strb	w2, [x19, x0]
  452bd8:	strb	w2, [x19, #264]
  452bdc:	cmp	x1, #0xff
  452be0:	b.ne	453c20 <ferror@plt+0x513a0>  // b.any
  452be4:	ldp	x3, x2, [x19, #272]
  452be8:	strb	wzr, [x19, #255]
  452bec:	mov	x0, x19
  452bf0:	blr	x3
  452bf4:	ldr	x0, [x19, #320]
  452bf8:	mov	w3, #0x6874                	// #26740
  452bfc:	mov	w2, #0x72                  	// #114
  452c00:	mov	x1, #0x3                   	// #3
  452c04:	add	x0, x0, #0x1
  452c08:	strh	w3, [x19]
  452c0c:	strb	w2, [x19, #2]
  452c10:	str	x0, [x19, #320]
  452c14:	add	x3, x1, #0x1
  452c18:	str	x3, [x19, #256]
  452c1c:	mov	w0, #0x6f                  	// #111
  452c20:	strb	w0, [x19, x1]
  452c24:	strb	w0, [x19, #264]
  452c28:	cmp	x3, #0xff
  452c2c:	b.ne	453c74 <ferror@plt+0x513f4>  // b.any
  452c30:	ldp	x4, x2, [x19, #272]
  452c34:	strb	wzr, [x19, #255]
  452c38:	mov	x0, x19
  452c3c:	mov	x1, x3
  452c40:	blr	x4
  452c44:	mov	w0, #0x77                  	// #119
  452c48:	strb	w0, [x19]
  452c4c:	mov	x2, #0x1                   	// #1
  452c50:	strb	w0, [x19, #264]
  452c54:	mov	x0, x2
  452c58:	ldr	x1, [x19, #320]
  452c5c:	ldr	x22, [x20, #16]
  452c60:	add	x1, x1, x2
  452c64:	str	x2, [x19, #256]
  452c68:	str	x1, [x19, #320]
  452c6c:	cbz	x22, 452534 <ferror@plt+0x4fcb4>
  452c70:	add	x1, x0, #0x1
  452c74:	str	x1, [x19, #256]
  452c78:	mov	w2, #0x28                  	// #40
  452c7c:	strb	w2, [x19, x0]
  452c80:	strb	w2, [x19, #264]
  452c84:	ldr	w0, [x22, #4]
  452c88:	cmp	w0, #0x1
  452c8c:	b.gt	45371c <ferror@plt+0x50e9c>
  452c90:	ldr	w2, [x19, #308]
  452c94:	cmp	w2, #0x400
  452c98:	b.gt	45371c <ferror@plt+0x50e9c>
  452c9c:	ldr	x3, [x19, #328]
  452ca0:	add	w0, w0, #0x1
  452ca4:	str	w0, [x22, #4]
  452ca8:	add	w2, w2, #0x1
  452cac:	add	x0, sp, #0x40
  452cb0:	str	w2, [x19, #308]
  452cb4:	str	x0, [x19, #328]
  452cb8:	mov	w1, w21
  452cbc:	mov	x2, x22
  452cc0:	mov	x0, x19
  452cc4:	stp	x22, x3, [sp, #64]
  452cc8:	bl	448dd0 <ferror@plt+0x46550>
  452ccc:	ldr	w2, [x22, #4]
  452cd0:	ldr	x0, [sp, #72]
  452cd4:	str	x0, [x19, #328]
  452cd8:	ldr	w0, [x19, #308]
  452cdc:	sub	w2, w2, #0x1
  452ce0:	ldr	x1, [x19, #256]
  452ce4:	str	w2, [x22, #4]
  452ce8:	sub	w0, w0, #0x1
  452cec:	str	w0, [x19, #308]
  452cf0:	cmp	x1, #0xff
  452cf4:	b.ne	453088 <ferror@plt+0x50808>  // b.any
  452cf8:	ldp	x3, x2, [x19, #272]
  452cfc:	strb	wzr, [x19, #255]
  452d00:	mov	x0, x19
  452d04:	blr	x3
  452d08:	ldr	x2, [x19, #320]
  452d0c:	mov	x0, #0x1                   	// #1
  452d10:	mov	x1, #0x0                   	// #0
  452d14:	add	x2, x2, x0
  452d18:	str	x2, [x19, #320]
  452d1c:	str	x0, [x19, #256]
  452d20:	mov	w0, #0x29                  	// #41
  452d24:	strb	w0, [x19, x1]
  452d28:	strb	w0, [x19, #264]
  452d2c:	b	452534 <ferror@plt+0x4fcb4>
  452d30:	ldr	x0, [x19, #256]
  452d34:	cmp	x0, #0xff
  452d38:	b.eq	4533b4 <ferror@plt+0x50b34>  // b.none
  452d3c:	add	x1, x0, #0x1
  452d40:	str	x1, [x19, #256]
  452d44:	mov	w2, #0x63                  	// #99
  452d48:	strb	w2, [x19, x0]
  452d4c:	strb	w2, [x19, #264]
  452d50:	cmp	x1, #0xff
  452d54:	b.ne	453b9c <ferror@plt+0x5131c>  // b.any
  452d58:	ldp	x3, x2, [x19, #272]
  452d5c:	strb	wzr, [x19, #255]
  452d60:	mov	x0, x19
  452d64:	blr	x3
  452d68:	ldr	x0, [x19, #320]
  452d6c:	mov	w3, #0x6d6f                	// #28015
  452d70:	mov	w2, #0x70                  	// #112
  452d74:	mov	x1, #0x3                   	// #3
  452d78:	add	x0, x0, #0x1
  452d7c:	strh	w3, [x19]
  452d80:	strb	w2, [x19, #2]
  452d84:	str	x0, [x19, #320]
  452d88:	add	x0, x1, #0x1
  452d8c:	str	x0, [x19, #256]
  452d90:	mov	w2, #0x6c                  	// #108
  452d94:	strb	w2, [x19, x1]
  452d98:	strb	w2, [x19, #264]
  452d9c:	cmp	x0, #0xff
  452da0:	b.ne	453bec <ferror@plt+0x5136c>  // b.any
  452da4:	ldp	x3, x2, [x19, #272]
  452da8:	strb	wzr, [x19, #255]
  452dac:	mov	x1, x0
  452db0:	mov	x0, x19
  452db4:	blr	x3
  452db8:	ldr	x0, [x19, #320]
  452dbc:	mov	w2, #0x65                  	// #101
  452dc0:	mov	x1, #0x1                   	// #1
  452dc4:	strb	w2, [x19]
  452dc8:	add	x0, x0, x1
  452dcc:	str	x0, [x19, #320]
  452dd0:	add	x0, x1, #0x1
  452dd4:	mov	w2, #0x78                  	// #120
  452dd8:	strb	w2, [x19, x1]
  452ddc:	add	x1, x0, #0x1
  452de0:	b	452ed0 <ferror@plt+0x50650>
  452de4:	ldr	x0, [x19, #256]
  452de8:	cmp	x0, #0xff
  452dec:	b.eq	453430 <ferror@plt+0x50bb0>  // b.none
  452df0:	add	x1, x0, #0x1
  452df4:	str	x1, [x19, #256]
  452df8:	mov	w20, #0x69                  	// #105
  452dfc:	strb	w20, [x19, x0]
  452e00:	strb	w20, [x19, #264]
  452e04:	cmp	x1, #0xff
  452e08:	b.ne	453758 <ferror@plt+0x50ed8>  // b.any
  452e0c:	ldp	x3, x2, [x19, #272]
  452e10:	strb	wzr, [x19, #255]
  452e14:	mov	x0, x19
  452e18:	blr	x3
  452e1c:	ldr	x0, [x19, #320]
  452e20:	mov	w3, #0x616d                	// #24941
  452e24:	mov	w2, #0x67                  	// #103
  452e28:	mov	x1, #0x3                   	// #3
  452e2c:	add	x0, x0, #0x1
  452e30:	strh	w3, [x19]
  452e34:	strb	w2, [x19, #2]
  452e38:	str	x0, [x19, #320]
  452e3c:	add	x0, x1, #0x1
  452e40:	str	x0, [x19, #256]
  452e44:	mov	w2, #0x69                  	// #105
  452e48:	strb	w2, [x19, x1]
  452e4c:	strb	w2, [x19, #264]
  452e50:	cmp	x0, #0xff
  452e54:	b.ne	4537a4 <ferror@plt+0x50f24>  // b.any
  452e58:	ldp	x3, x2, [x19, #272]
  452e5c:	strb	wzr, [x19, #255]
  452e60:	mov	x1, x0
  452e64:	mov	x0, x19
  452e68:	blr	x3
  452e6c:	ldr	x0, [x19, #320]
  452e70:	mov	w3, #0x616e                	// #24942
  452e74:	mov	w2, #0x72                  	// #114
  452e78:	mov	x1, #0x3                   	// #3
  452e7c:	add	x0, x0, #0x1
  452e80:	strh	w3, [x19]
  452e84:	strb	w2, [x19, #2]
  452e88:	str	x0, [x19, #320]
  452e8c:	add	x0, x1, #0x1
  452e90:	str	x0, [x19, #256]
  452e94:	mov	w2, #0x79                  	// #121
  452e98:	strb	w2, [x19, x1]
  452e9c:	strb	w2, [x19, #264]
  452ea0:	cmp	x0, #0xff
  452ea4:	b.ne	452ddc <ferror@plt+0x5055c>  // b.any
  452ea8:	ldp	x3, x2, [x19, #272]
  452eac:	strb	wzr, [x19, #255]
  452eb0:	mov	x1, x0
  452eb4:	mov	x0, x19
  452eb8:	blr	x3
  452ebc:	ldr	x2, [x19, #320]
  452ec0:	mov	x1, #0x1                   	// #1
  452ec4:	mov	x0, #0x0                   	// #0
  452ec8:	add	x2, x2, x1
  452ecc:	str	x2, [x19, #320]
  452ed0:	str	x1, [x19, #256]
  452ed4:	mov	w1, #0x20                  	// #32
  452ed8:	strb	w1, [x19, x0]
  452edc:	strb	w1, [x19, #264]
  452ee0:	ldp	x19, x20, [sp, #16]
  452ee4:	ldp	x21, x22, [sp, #32]
  452ee8:	ldp	x29, x30, [sp], #80
  452eec:	ret
  452ef0:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  452ef4:	add	x20, x20, #0x730
  452ef8:	add	x22, x20, #0x11
  452efc:	ldr	x1, [x19, #256]
  452f00:	str	x23, [sp, #48]
  452f04:	mov	x23, #0x1                   	// #1
  452f08:	b	452f64 <ferror@plt+0x506e4>
  452f0c:	ldp	x3, x2, [x19, #272]
  452f10:	strb	wzr, [x19, #255]
  452f14:	mov	x0, x19
  452f18:	add	x20, x20, #0x1
  452f1c:	blr	x3
  452f20:	strb	w21, [x19]
  452f24:	ldr	x0, [x19, #320]
  452f28:	str	x23, [x19, #256]
  452f2c:	strb	w21, [x19, #264]
  452f30:	cmp	x20, x22
  452f34:	add	x0, x0, #0x1
  452f38:	str	x0, [x19, #320]
  452f3c:	b.eq	4530c4 <ferror@plt+0x50844>  // b.none
  452f40:	ldrb	w21, [x20]
  452f44:	mov	x0, #0x1                   	// #1
  452f48:	add	x1, x0, #0x1
  452f4c:	str	x1, [x19, #256]
  452f50:	strb	w21, [x19, x0]
  452f54:	add	x20, x20, #0x1
  452f58:	strb	w21, [x19, #264]
  452f5c:	cmp	x20, x22
  452f60:	b.eq	4530c4 <ferror@plt+0x50844>  // b.none
  452f64:	ldrb	w21, [x20]
  452f68:	cmp	x1, #0xff
  452f6c:	b.eq	452f0c <ferror@plt+0x5068c>  // b.none
  452f70:	mov	x0, x1
  452f74:	b	452f48 <ferror@plt+0x506c8>
  452f78:	ldr	x0, [x19, #256]
  452f7c:	cmp	x0, #0xff
  452f80:	b.eq	45364c <ferror@plt+0x50dcc>  // b.none
  452f84:	add	x1, x0, #0x1
  452f88:	str	x1, [x19, #256]
  452f8c:	mov	w2, #0x20                  	// #32
  452f90:	strb	w2, [x19, x0]
  452f94:	strb	w2, [x19, #264]
  452f98:	cmp	x1, #0xff
  452f9c:	b.ne	453d7c <ferror@plt+0x514fc>  // b.any
  452fa0:	ldp	x3, x2, [x19, #272]
  452fa4:	strb	wzr, [x19, #255]
  452fa8:	mov	x0, x19
  452fac:	blr	x3
  452fb0:	ldr	x0, [x19, #320]
  452fb4:	mov	w2, #0x6f6e                	// #28526
  452fb8:	mov	w1, #0x65                  	// #101
  452fbc:	mov	x3, #0x3                   	// #3
  452fc0:	add	x0, x0, #0x1
  452fc4:	strh	w2, [x19]
  452fc8:	strb	w1, [x19, #2]
  452fcc:	str	x0, [x19, #320]
  452fd0:	add	x1, x3, #0x1
  452fd4:	str	x1, [x19, #256]
  452fd8:	mov	w0, #0x78                  	// #120
  452fdc:	strb	w0, [x19, x3]
  452fe0:	strb	w0, [x19, #264]
  452fe4:	cmp	x1, #0xff
  452fe8:	b.ne	453dcc <ferror@plt+0x5154c>  // b.any
  452fec:	ldp	x3, x2, [x19, #272]
  452ff0:	strb	wzr, [x19, #255]
  452ff4:	mov	x0, x19
  452ff8:	blr	x3
  452ffc:	ldr	x0, [x19, #320]
  453000:	mov	w2, #0x6563                	// #25955
  453004:	mov	x1, #0x2                   	// #2
  453008:	strh	w2, [x19]
  45300c:	add	x0, x0, #0x1
  453010:	str	x0, [x19, #320]
  453014:	add	x3, x1, #0x1
  453018:	mov	w0, #0x70                  	// #112
  45301c:	strb	w0, [x19, x1]
  453020:	add	x0, x3, #0x1
  453024:	str	x0, [x19, #256]
  453028:	mov	w1, #0x74                  	// #116
  45302c:	strb	w1, [x19, x3]
  453030:	strb	w1, [x19, #264]
  453034:	ldr	x22, [x20, #16]
  453038:	cbz	x22, 452534 <ferror@plt+0x4fcb4>
  45303c:	cmp	x0, #0xff
  453040:	b.ne	452c70 <ferror@plt+0x503f0>  // b.any
  453044:	ldp	x3, x2, [x19, #272]
  453048:	strb	wzr, [x19, #255]
  45304c:	mov	x1, x0
  453050:	mov	x0, x19
  453054:	blr	x3
  453058:	ldr	x0, [x19, #320]
  45305c:	mov	x2, #0x1                   	// #1
  453060:	ldr	x22, [x20, #16]
  453064:	mov	w1, #0x28                  	// #40
  453068:	add	x0, x0, x2
  45306c:	strb	w1, [x19]
  453070:	str	x2, [x19, #256]
  453074:	strb	w1, [x19, #264]
  453078:	str	x0, [x19, #320]
  45307c:	cbnz	x22, 454024 <ferror@plt+0x517a4>
  453080:	mov	x1, x2
  453084:	str	w2, [x19, #304]
  453088:	add	x0, x1, #0x1
  45308c:	b	452d1c <ferror@plt+0x5049c>
  453090:	ldp	x3, x2, [x19, #272]
  453094:	strb	wzr, [x19, #255]
  453098:	mov	x1, x0
  45309c:	mov	x0, x19
  4530a0:	blr	x3
  4530a4:	ldr	x1, [x19, #320]
  4530a8:	mov	w2, #0x2620                	// #9760
  4530ac:	mov	x0, #0x2                   	// #2
  4530b0:	strh	w2, [x19]
  4530b4:	add	x1, x1, #0x1
  4530b8:	str	x1, [x19, #320]
  4530bc:	add	x1, x0, #0x1
  4530c0:	b	4529e8 <ferror@plt+0x50168>
  4530c4:	ldr	x23, [sp, #48]
  4530c8:	b	452534 <ferror@plt+0x4fcb4>
  4530cc:	ldp	x3, x2, [x19, #272]
  4530d0:	strb	wzr, [x19, #255]
  4530d4:	mov	x0, x19
  4530d8:	blr	x3
  4530dc:	ldr	x2, [x19, #320]
  4530e0:	mov	x0, #0x1                   	// #1
  4530e4:	mov	x1, #0x0                   	// #0
  4530e8:	add	x2, x2, x0
  4530ec:	str	x2, [x19, #320]
  4530f0:	b	452978 <ferror@plt+0x500f8>
  4530f4:	ldr	x3, [x19, #328]
  4530f8:	add	w0, w0, #0x1
  4530fc:	str	w0, [x20, #4]
  453100:	add	w1, w1, #0x1
  453104:	add	x0, sp, #0x40
  453108:	str	w1, [x19, #308]
  45310c:	str	x0, [x19, #328]
  453110:	mov	w1, w21
  453114:	mov	x0, x19
  453118:	mov	x2, x20
  45311c:	stp	x20, x3, [sp, #64]
  453120:	bl	448dd0 <ferror@plt+0x46550>
  453124:	ldr	w1, [x20, #4]
  453128:	ldr	x0, [sp, #72]
  45312c:	str	x0, [x19, #328]
  453130:	ldr	w0, [x19, #308]
  453134:	sub	w1, w1, #0x1
  453138:	str	w1, [x20, #4]
  45313c:	sub	w0, w0, #0x1
  453140:	str	w0, [x19, #308]
  453144:	b	452534 <ferror@plt+0x4fcb4>
  453148:	ldp	x3, x2, [x19, #272]
  45314c:	strb	wzr, [x19, #255]
  453150:	mov	x1, x0
  453154:	mov	x0, x19
  453158:	blr	x3
  45315c:	ldr	x1, [x19, #320]
  453160:	mov	w3, #0x7420                	// #29728
  453164:	mov	w2, #0x68                  	// #104
  453168:	mov	x0, #0x3                   	// #3
  45316c:	add	x1, x1, #0x1
  453170:	strh	w3, [x19]
  453174:	strb	w2, [x19, #2]
  453178:	str	x1, [x19, #320]
  45317c:	add	x1, x0, #0x1
  453180:	str	x1, [x19, #256]
  453184:	mov	w2, #0x72                  	// #114
  453188:	strb	w2, [x19, x0]
  45318c:	strb	w2, [x19, #264]
  453190:	cmp	x1, #0xff
  453194:	b.ne	452c14 <ferror@plt+0x50394>  // b.any
  453198:	ldp	x3, x2, [x19, #272]
  45319c:	strb	wzr, [x19, #255]
  4531a0:	mov	x0, x19
  4531a4:	blr	x3
  4531a8:	mov	w1, #0x776f                	// #30575
  4531ac:	mov	w0, #0x77                  	// #119
  4531b0:	strh	w1, [x19]
  4531b4:	strb	w0, [x19, #264]
  4531b8:	mov	x0, #0x2                   	// #2
  4531bc:	ldr	x1, [x19, #320]
  4531c0:	ldr	x22, [x20, #16]
  4531c4:	add	x1, x1, #0x1
  4531c8:	str	x0, [x19, #256]
  4531cc:	str	x1, [x19, #320]
  4531d0:	cbnz	x22, 452c70 <ferror@plt+0x503f0>
  4531d4:	b	452534 <ferror@plt+0x4fcb4>
  4531d8:	ldp	x3, x2, [x19, #272]
  4531dc:	strb	wzr, [x19, #255]
  4531e0:	mov	x1, x0
  4531e4:	mov	x0, x19
  4531e8:	blr	x3
  4531ec:	ldr	x0, [x19, #320]
  4531f0:	mov	w2, #0x20                  	// #32
  4531f4:	mov	x1, #0x1                   	// #1
  4531f8:	strb	w2, [x19]
  4531fc:	add	x0, x0, x1
  453200:	str	x0, [x19, #320]
  453204:	b	452974 <ferror@plt+0x500f4>
  453208:	ldp	x3, x2, [x19, #272]
  45320c:	strb	wzr, [x19, #255]
  453210:	mov	x1, x0
  453214:	mov	x0, x19
  453218:	blr	x3
  45321c:	ldr	x1, [x19, #320]
  453220:	mov	w3, #0x7220                	// #29216
  453224:	mov	w2, #0x65                  	// #101
  453228:	mov	x0, #0x3                   	// #3
  45322c:	add	x1, x1, #0x1
  453230:	strh	w3, [x19]
  453234:	strb	w2, [x19, #2]
  453238:	str	x1, [x19, #320]
  45323c:	add	x3, x0, #0x1
  453240:	str	x3, [x19, #256]
  453244:	mov	w1, #0x73                  	// #115
  453248:	strb	w1, [x19, x0]
  45324c:	strb	w1, [x19, #264]
  453250:	cmp	x3, #0xff
  453254:	b.ne	452670 <ferror@plt+0x4fdf0>  // b.any
  453258:	ldp	x4, x2, [x19, #272]
  45325c:	strb	wzr, [x19, #255]
  453260:	mov	x1, x3
  453264:	mov	x0, x19
  453268:	blr	x4
  45326c:	ldr	x0, [x19, #320]
  453270:	mov	w3, #0x7274                	// #29300
  453274:	mov	w2, #0x69                  	// #105
  453278:	mov	x1, #0x3                   	// #3
  45327c:	add	x0, x0, #0x1
  453280:	strh	w3, [x19]
  453284:	strb	w2, [x19, #2]
  453288:	str	x0, [x19, #320]
  45328c:	add	x0, x1, #0x1
  453290:	str	x0, [x19, #256]
  453294:	mov	w2, #0x63                  	// #99
  453298:	strb	w2, [x19, x1]
  45329c:	strb	w2, [x19, #264]
  4532a0:	cmp	x0, #0xff
  4532a4:	b.eq	4525d0 <ferror@plt+0x4fd50>  // b.none
  4532a8:	add	x1, x0, #0x1
  4532ac:	b	4525f8 <ferror@plt+0x4fd78>
  4532b0:	ldp	x3, x2, [x19, #272]
  4532b4:	strb	wzr, [x19, #255]
  4532b8:	mov	x1, x0
  4532bc:	mov	x0, x19
  4532c0:	blr	x3
  4532c4:	ldr	x1, [x19, #320]
  4532c8:	mov	w3, #0x7620                	// #30240
  4532cc:	mov	w2, #0x6f                  	// #111
  4532d0:	mov	x0, #0x3                   	// #3
  4532d4:	add	x1, x1, #0x1
  4532d8:	strh	w3, [x19]
  4532dc:	strb	w2, [x19, #2]
  4532e0:	str	x1, [x19, #320]
  4532e4:	add	x3, x0, #0x1
  4532e8:	str	x3, [x19, #256]
  4532ec:	mov	w1, #0x6c                  	// #108
  4532f0:	strb	w1, [x19, x0]
  4532f4:	strb	w1, [x19, #264]
  4532f8:	cmp	x3, #0xff
  4532fc:	b.ne	452720 <ferror@plt+0x4fea0>  // b.any
  453300:	ldp	x4, x2, [x19, #272]
  453304:	strb	wzr, [x19, #255]
  453308:	mov	x1, x3
  45330c:	mov	x0, x19
  453310:	blr	x4
  453314:	ldr	x0, [x19, #320]
  453318:	mov	w3, #0x7461                	// #29793
  45331c:	mov	w2, #0x69                  	// #105
  453320:	mov	x1, #0x3                   	// #3
  453324:	add	x0, x0, #0x1
  453328:	strh	w3, [x19]
  45332c:	strb	w2, [x19, #2]
  453330:	str	x0, [x19, #320]
  453334:	add	x0, x1, #0x1
  453338:	str	x0, [x19, #256]
  45333c:	mov	w2, #0x6c                  	// #108
  453340:	strb	w2, [x19, x1]
  453344:	strb	w2, [x19, #264]
  453348:	cmp	x0, #0xff
  45334c:	b.ne	452770 <ferror@plt+0x4fef0>  // b.any
  453350:	ldp	x3, x2, [x19, #272]
  453354:	strb	wzr, [x19, #255]
  453358:	mov	x1, x0
  45335c:	mov	x0, x19
  453360:	blr	x3
  453364:	ldr	x2, [x19, #320]
  453368:	mov	x1, #0x1                   	// #1
  45336c:	mov	x0, #0x0                   	// #0
  453370:	add	x2, x2, x1
  453374:	str	x2, [x19, #320]
  453378:	str	x1, [x19, #256]
  45337c:	mov	w1, #0x65                  	// #101
  453380:	strb	w1, [x19, x0]
  453384:	strb	w1, [x19, #264]
  453388:	b	452534 <ferror@plt+0x4fcb4>
  45338c:	ldp	x3, x2, [x19, #272]
  453390:	strb	wzr, [x19, #255]
  453394:	mov	x0, x19
  453398:	blr	x3
  45339c:	ldr	x2, [x19, #320]
  4533a0:	mov	x0, #0x1                   	// #1
  4533a4:	mov	x1, #0x0                   	// #0
  4533a8:	add	x2, x2, x0
  4533ac:	str	x2, [x19, #320]
  4533b0:	b	4527ac <ferror@plt+0x4ff2c>
  4533b4:	ldp	x3, x2, [x19, #272]
  4533b8:	strb	wzr, [x19, #255]
  4533bc:	mov	x1, x0
  4533c0:	mov	x0, x19
  4533c4:	blr	x3
  4533c8:	ldr	x1, [x19, #320]
  4533cc:	mov	w3, #0x6f63                	// #28515
  4533d0:	mov	w2, #0x6d                  	// #109
  4533d4:	mov	x0, #0x3                   	// #3
  4533d8:	add	x1, x1, #0x1
  4533dc:	strh	w3, [x19]
  4533e0:	strb	w2, [x19, #2]
  4533e4:	str	x1, [x19, #320]
  4533e8:	add	x1, x0, #0x1
  4533ec:	str	x1, [x19, #256]
  4533f0:	mov	w2, #0x70                  	// #112
  4533f4:	strb	w2, [x19, x0]
  4533f8:	strb	w2, [x19, #264]
  4533fc:	cmp	x1, #0xff
  453400:	b.ne	452d88 <ferror@plt+0x50508>  // b.any
  453404:	ldp	x3, x2, [x19, #272]
  453408:	strb	wzr, [x19, #255]
  45340c:	mov	x0, x19
  453410:	blr	x3
  453414:	ldr	x0, [x19, #320]
  453418:	mov	w2, #0x656c                	// #25964
  45341c:	mov	x1, #0x2                   	// #2
  453420:	strh	w2, [x19]
  453424:	add	x0, x0, #0x1
  453428:	str	x0, [x19, #320]
  45342c:	b	452dd0 <ferror@plt+0x50550>
  453430:	ldp	x3, x2, [x19, #272]
  453434:	strb	wzr, [x19, #255]
  453438:	mov	x1, x0
  45343c:	mov	x0, x19
  453440:	blr	x3
  453444:	ldr	x1, [x19, #320]
  453448:	mov	w3, #0x6d69                	// #28009
  45344c:	mov	w2, #0x61                  	// #97
  453450:	mov	x0, #0x3                   	// #3
  453454:	add	x1, x1, #0x1
  453458:	strh	w3, [x19]
  45345c:	strb	w2, [x19, #2]
  453460:	str	x1, [x19, #320]
  453464:	add	x1, x0, #0x1
  453468:	str	x1, [x19, #256]
  45346c:	mov	w2, #0x67                  	// #103
  453470:	strb	w2, [x19, x0]
  453474:	strb	w2, [x19, #264]
  453478:	cmp	x1, #0xff
  45347c:	b.ne	452e3c <ferror@plt+0x505bc>  // b.any
  453480:	ldp	x3, x2, [x19, #272]
  453484:	strb	wzr, [x19, #255]
  453488:	mov	x0, x19
  45348c:	blr	x3
  453490:	ldr	x1, [x19, #320]
  453494:	mov	w3, #0x6e69                	// #28265
  453498:	mov	w2, #0x61                  	// #97
  45349c:	mov	x0, #0x3                   	// #3
  4534a0:	add	x1, x1, #0x1
  4534a4:	strh	w3, [x19]
  4534a8:	strb	w2, [x19, #2]
  4534ac:	str	x1, [x19, #320]
  4534b0:	add	x1, x0, #0x1
  4534b4:	str	x1, [x19, #256]
  4534b8:	mov	w2, #0x72                  	// #114
  4534bc:	strb	w2, [x19, x0]
  4534c0:	strb	w2, [x19, #264]
  4534c4:	cmp	x1, #0xff
  4534c8:	b.ne	452e8c <ferror@plt+0x5060c>  // b.any
  4534cc:	ldp	x3, x2, [x19, #272]
  4534d0:	strb	wzr, [x19, #255]
  4534d4:	mov	x0, x19
  4534d8:	blr	x3
  4534dc:	mov	w2, #0x79                  	// #121
  4534e0:	ldr	x1, [x19, #320]
  4534e4:	mov	x0, #0x1                   	// #1
  4534e8:	strb	w2, [x19]
  4534ec:	add	x1, x1, x0
  4534f0:	str	x1, [x19, #320]
  4534f4:	add	x1, x0, #0x1
  4534f8:	b	452ed0 <ferror@plt+0x50650>
  4534fc:	ldp	x3, x2, [x19, #272]
  453500:	strb	wzr, [x19, #255]
  453504:	mov	x1, x0
  453508:	mov	x0, x19
  45350c:	blr	x3
  453510:	ldr	x1, [x19, #320]
  453514:	mov	w3, #0x5f20                	// #24352
  453518:	mov	w2, #0x5f                  	// #95
  45351c:	mov	x0, #0x3                   	// #3
  453520:	add	x1, x1, #0x1
  453524:	strh	w3, [x19]
  453528:	strb	w2, [x19, #2]
  45352c:	str	x1, [x19, #320]
  453530:	add	x1, x0, #0x1
  453534:	str	x1, [x19, #256]
  453538:	mov	w2, #0x76                  	// #118
  45353c:	strb	w2, [x19, x0]
  453540:	strb	w2, [x19, #264]
  453544:	cmp	x1, #0xff
  453548:	b.ne	452a60 <ferror@plt+0x501e0>  // b.any
  45354c:	ldp	x3, x2, [x19, #272]
  453550:	strb	wzr, [x19, #255]
  453554:	mov	x0, x19
  453558:	blr	x3
  45355c:	ldr	x1, [x19, #320]
  453560:	mov	w3, #0x6365                	// #25445
  453564:	mov	w2, #0x74                  	// #116
  453568:	mov	x0, #0x3                   	// #3
  45356c:	add	x1, x1, #0x1
  453570:	strh	w3, [x19]
  453574:	strb	w2, [x19, #2]
  453578:	str	x1, [x19, #320]
  45357c:	add	x3, x0, #0x1
  453580:	str	x3, [x19, #256]
  453584:	mov	w1, #0x6f                  	// #111
  453588:	strb	w1, [x19, x0]
  45358c:	strb	w1, [x19, #264]
  453590:	cmp	x3, #0xff
  453594:	b.ne	452ab0 <ferror@plt+0x50230>  // b.any
  453598:	ldp	x4, x2, [x19, #272]
  45359c:	strb	wzr, [x19, #255]
  4535a0:	mov	x1, x3
  4535a4:	mov	x0, x19
  4535a8:	blr	x4
  4535ac:	ldr	x0, [x19, #320]
  4535b0:	mov	w2, #0x72                  	// #114
  4535b4:	mov	x1, #0x1                   	// #1
  4535b8:	strb	w2, [x19]
  4535bc:	add	x0, x0, x1
  4535c0:	str	x0, [x19, #320]
  4535c4:	add	x0, x1, #0x1
  4535c8:	b	452af0 <ferror@plt+0x50270>
  4535cc:	ldp	x3, x2, [x19, #272]
  4535d0:	strb	wzr, [x19, #255]
  4535d4:	mov	x1, x0
  4535d8:	mov	x0, x19
  4535dc:	blr	x3
  4535e0:	ldr	x1, [x19, #320]
  4535e4:	mov	w3, #0x6320                	// #25376
  4535e8:	mov	w2, #0x6f                  	// #111
  4535ec:	mov	x0, #0x3                   	// #3
  4535f0:	add	x1, x1, #0x1
  4535f4:	strh	w3, [x19]
  4535f8:	strb	w2, [x19, #2]
  4535fc:	str	x1, [x19, #320]
  453600:	add	x1, x0, #0x1
  453604:	str	x1, [x19, #256]
  453608:	mov	w2, #0x6e                  	// #110
  45360c:	strb	w2, [x19, x0]
  453610:	strb	w2, [x19, #264]
  453614:	cmp	x1, #0xff
  453618:	b.ne	4525b4 <ferror@plt+0x4fd34>  // b.any
  45361c:	ldp	x3, x2, [x19, #272]
  453620:	strb	wzr, [x19, #255]
  453624:	mov	x0, x19
  453628:	blr	x3
  45362c:	mov	w2, #0x73                  	// #115
  453630:	ldr	x1, [x19, #320]
  453634:	mov	x0, #0x1                   	// #1
  453638:	strb	w2, [x19]
  45363c:	add	x1, x1, x0
  453640:	str	x1, [x19, #320]
  453644:	add	x1, x0, #0x1
  453648:	b	4525f8 <ferror@plt+0x4fd78>
  45364c:	ldp	x3, x2, [x19, #272]
  453650:	strb	wzr, [x19, #255]
  453654:	mov	x1, x0
  453658:	mov	x0, x19
  45365c:	blr	x3
  453660:	ldr	x1, [x19, #320]
  453664:	mov	w3, #0x6e20                	// #28192
  453668:	mov	w2, #0x6f                  	// #111
  45366c:	mov	x0, #0x3                   	// #3
  453670:	add	x1, x1, #0x1
  453674:	strh	w3, [x19]
  453678:	strb	w2, [x19, #2]
  45367c:	str	x1, [x19, #320]
  453680:	add	x3, x0, #0x1
  453684:	str	x3, [x19, #256]
  453688:	mov	w22, #0x65                  	// #101
  45368c:	strb	w22, [x19, x0]
  453690:	strb	w22, [x19, #264]
  453694:	cmp	x3, #0xff
  453698:	b.ne	452fd0 <ferror@plt+0x50750>  // b.any
  45369c:	ldp	x4, x2, [x19, #272]
  4536a0:	strb	wzr, [x19, #255]
  4536a4:	mov	x1, x3
  4536a8:	mov	x0, x19
  4536ac:	blr	x4
  4536b0:	strb	w22, [x19, #2]
  4536b4:	ldr	x0, [x19, #320]
  4536b8:	mov	w2, #0x6378                	// #25464
  4536bc:	mov	x1, #0x3                   	// #3
  4536c0:	strh	w2, [x19]
  4536c4:	add	x0, x0, #0x1
  4536c8:	str	x0, [x19, #320]
  4536cc:	add	x3, x1, #0x1
  4536d0:	str	x3, [x19, #256]
  4536d4:	mov	w0, #0x70                  	// #112
  4536d8:	strb	w0, [x19, x1]
  4536dc:	strb	w0, [x19, #264]
  4536e0:	cmp	x3, #0xff
  4536e4:	b.ne	453020 <ferror@plt+0x507a0>  // b.any
  4536e8:	ldp	x4, x2, [x19, #272]
  4536ec:	strb	wzr, [x19, #255]
  4536f0:	mov	x0, x19
  4536f4:	mov	x1, x3
  4536f8:	blr	x4
  4536fc:	mov	w0, #0x74                  	// #116
  453700:	b	452c48 <ferror@plt+0x503c8>
  453704:	mov	w0, #0x1                   	// #1
  453708:	str	w0, [x19, #304]
  45370c:	b	4528e0 <ferror@plt+0x50060>
  453710:	mov	w1, #0x1                   	// #1
  453714:	str	w1, [x19, #304]
  453718:	b	452b74 <ferror@plt+0x502f4>
  45371c:	mov	w0, #0x1                   	// #1
  453720:	str	w0, [x19, #304]
  453724:	b	452cf0 <ferror@plt+0x50470>
  453728:	ldp	x3, x2, [x19, #272]
  45372c:	strb	wzr, [x19, #255]
  453730:	mov	x0, x19
  453734:	blr	x3
  453738:	ldr	x1, [x19, #320]
  45373c:	mov	x0, #0x1                   	// #1
  453740:	mov	w2, #0x26                  	// #38
  453744:	strb	w2, [x19]
  453748:	add	x1, x1, x0
  45374c:	str	x1, [x19, #320]
  453750:	add	x1, x0, #0x1
  453754:	b	4529e8 <ferror@plt+0x50168>
  453758:	add	x3, x0, #0x2
  45375c:	str	x3, [x19, #256]
  453760:	mov	w2, #0x6d                  	// #109
  453764:	strb	w2, [x19, x1]
  453768:	strb	w2, [x19, #264]
  45376c:	cmp	x3, #0xff
  453770:	b.ne	4537fc <ferror@plt+0x50f7c>  // b.any
  453774:	ldp	x4, x2, [x19, #272]
  453778:	strb	wzr, [x19, #255]
  45377c:	mov	x1, x3
  453780:	mov	x0, x19
  453784:	blr	x4
  453788:	strb	w20, [x19, #2]
  45378c:	ldr	x1, [x19, #320]
  453790:	mov	w2, #0x6761                	// #26465
  453794:	mov	x0, #0x3                   	// #3
  453798:	strh	w2, [x19]
  45379c:	add	x1, x1, #0x1
  4537a0:	str	x1, [x19, #320]
  4537a4:	add	x1, x0, #0x1
  4537a8:	str	x1, [x19, #256]
  4537ac:	mov	w2, #0x6e                  	// #110
  4537b0:	strb	w2, [x19, x0]
  4537b4:	strb	w2, [x19, #264]
  4537b8:	cmp	x1, #0xff
  4537bc:	b.ne	45384c <ferror@plt+0x50fcc>  // b.any
  4537c0:	ldp	x3, x2, [x19, #272]
  4537c4:	strb	wzr, [x19, #255]
  4537c8:	mov	x0, x19
  4537cc:	blr	x3
  4537d0:	ldr	x0, [x19, #320]
  4537d4:	mov	w2, #0x7261                	// #29281
  4537d8:	mov	x1, #0x2                   	// #2
  4537dc:	strh	w2, [x19]
  4537e0:	add	x0, x0, #0x1
  4537e4:	str	x0, [x19, #320]
  4537e8:	add	x0, x1, #0x1
  4537ec:	mov	w2, #0x79                  	// #121
  4537f0:	strb	w2, [x19, x1]
  4537f4:	add	x1, x0, #0x1
  4537f8:	b	452ed0 <ferror@plt+0x50650>
  4537fc:	add	x0, x0, #0x3
  453800:	str	x0, [x19, #256]
  453804:	mov	w1, #0x61                  	// #97
  453808:	strb	w1, [x19, x3]
  45380c:	strb	w1, [x19, #264]
  453810:	cmp	x0, #0xff
  453814:	b.ne	453464 <ferror@plt+0x50be4>  // b.any
  453818:	ldp	x3, x2, [x19, #272]
  45381c:	strb	wzr, [x19, #255]
  453820:	mov	x1, x0
  453824:	mov	x0, x19
  453828:	blr	x3
  45382c:	ldr	x0, [x19, #320]
  453830:	mov	w3, #0x6967                	// #26983
  453834:	mov	w2, #0x6e                  	// #110
  453838:	mov	x1, #0x3                   	// #3
  45383c:	add	x0, x0, #0x1
  453840:	strh	w3, [x19]
  453844:	strb	w2, [x19, #2]
  453848:	str	x0, [x19, #320]
  45384c:	add	x0, x1, #0x1
  453850:	str	x0, [x19, #256]
  453854:	mov	w2, #0x61                  	// #97
  453858:	strb	w2, [x19, x1]
  45385c:	strb	w2, [x19, #264]
  453860:	cmp	x0, #0xff
  453864:	b.ne	4534b0 <ferror@plt+0x50c30>  // b.any
  453868:	ldp	x3, x2, [x19, #272]
  45386c:	strb	wzr, [x19, #255]
  453870:	mov	x1, x0
  453874:	mov	x0, x19
  453878:	blr	x3
  45387c:	ldr	x0, [x19, #320]
  453880:	mov	w2, #0x72                  	// #114
  453884:	mov	x1, #0x1                   	// #1
  453888:	strb	w2, [x19]
  45388c:	add	x0, x0, x1
  453890:	str	x0, [x19, #320]
  453894:	b	4537e8 <ferror@plt+0x50f68>
  453898:	add	x3, x0, #0x2
  45389c:	str	x3, [x19, #256]
  4538a0:	mov	w2, #0x5f                  	// #95
  4538a4:	strb	w2, [x19, x1]
  4538a8:	strb	w2, [x19, #264]
  4538ac:	cmp	x3, #0xff
  4538b0:	b.ne	45399c <ferror@plt+0x5111c>  // b.any
  4538b4:	ldp	x4, x2, [x19, #272]
  4538b8:	strb	wzr, [x19, #255]
  4538bc:	mov	x1, x3
  4538c0:	mov	x0, x19
  4538c4:	blr	x4
  4538c8:	ldr	x1, [x19, #320]
  4538cc:	mov	w3, #0x765f                	// #30303
  4538d0:	mov	w2, #0x65                  	// #101
  4538d4:	mov	x0, #0x3                   	// #3
  4538d8:	add	x1, x1, #0x1
  4538dc:	strh	w3, [x19]
  4538e0:	strb	w2, [x19, #2]
  4538e4:	str	x1, [x19, #320]
  4538e8:	add	x1, x0, #0x1
  4538ec:	str	x1, [x19, #256]
  4538f0:	mov	w2, #0x63                  	// #99
  4538f4:	strb	w2, [x19, x0]
  4538f8:	strb	w2, [x19, #264]
  4538fc:	cmp	x1, #0xff
  453900:	b.ne	4539e8 <ferror@plt+0x51168>  // b.any
  453904:	ldp	x3, x2, [x19, #272]
  453908:	strb	wzr, [x19, #255]
  45390c:	mov	x0, x19
  453910:	blr	x3
  453914:	ldr	x0, [x19, #320]
  453918:	mov	w1, #0x6f74                	// #28532
  45391c:	mov	x2, #0x2                   	// #2
  453920:	strh	w1, [x19]
  453924:	add	x0, x0, #0x1
  453928:	str	x0, [x19, #320]
  45392c:	mov	w0, #0x72                  	// #114
  453930:	add	x1, x2, #0x1
  453934:	strb	w0, [x19, x2]
  453938:	add	x0, x1, #0x1
  45393c:	b	452af0 <ferror@plt+0x50270>
  453940:	add	x3, x0, #0x2
  453944:	str	x3, [x19, #256]
  453948:	mov	w2, #0x63                  	// #99
  45394c:	strb	w2, [x19, x1]
  453950:	strb	w2, [x19, #264]
  453954:	cmp	x3, #0xff
  453958:	b.ne	453a34 <ferror@plt+0x511b4>  // b.any
  45395c:	ldp	x4, x2, [x19, #272]
  453960:	strb	wzr, [x19, #255]
  453964:	mov	x1, x3
  453968:	mov	x0, x19
  45396c:	blr	x4
  453970:	ldr	x0, [x19, #320]
  453974:	mov	w2, #0x6e6f                	// #28271
  453978:	mov	x1, #0x2                   	// #2
  45397c:	strh	w2, [x19]
  453980:	add	x0, x0, #0x1
  453984:	str	x0, [x19, #320]
  453988:	add	x0, x1, #0x1
  45398c:	mov	w2, #0x73                  	// #115
  453990:	strb	w2, [x19, x1]
  453994:	add	x1, x0, #0x1
  453998:	b	4525f8 <ferror@plt+0x4fd78>
  45399c:	add	x0, x0, #0x3
  4539a0:	str	x0, [x19, #256]
  4539a4:	strb	w2, [x19, x3]
  4539a8:	cmp	x0, #0xff
  4539ac:	strb	w2, [x19, #264]
  4539b0:	b.ne	453530 <ferror@plt+0x50cb0>  // b.any
  4539b4:	ldp	x3, x2, [x19, #272]
  4539b8:	strb	wzr, [x19, #255]
  4539bc:	mov	x1, x0
  4539c0:	mov	x0, x19
  4539c4:	blr	x3
  4539c8:	ldr	x0, [x19, #320]
  4539cc:	mov	w3, #0x6576                	// #25974
  4539d0:	mov	w2, #0x63                  	// #99
  4539d4:	mov	x1, #0x3                   	// #3
  4539d8:	add	x0, x0, #0x1
  4539dc:	strh	w3, [x19]
  4539e0:	strb	w2, [x19, #2]
  4539e4:	str	x0, [x19, #320]
  4539e8:	add	x0, x1, #0x1
  4539ec:	str	x0, [x19, #256]
  4539f0:	mov	w2, #0x74                  	// #116
  4539f4:	strb	w2, [x19, x1]
  4539f8:	strb	w2, [x19, #264]
  4539fc:	cmp	x0, #0xff
  453a00:	b.ne	45357c <ferror@plt+0x50cfc>  // b.any
  453a04:	ldp	x3, x2, [x19, #272]
  453a08:	strb	wzr, [x19, #255]
  453a0c:	mov	x1, x0
  453a10:	mov	x0, x19
  453a14:	blr	x3
  453a18:	ldr	x0, [x19, #320]
  453a1c:	mov	w1, #0x6f                  	// #111
  453a20:	mov	x2, #0x1                   	// #1
  453a24:	strb	w1, [x19]
  453a28:	add	x0, x0, x2
  453a2c:	str	x0, [x19, #320]
  453a30:	b	45392c <ferror@plt+0x510ac>
  453a34:	add	x0, x0, #0x3
  453a38:	str	x0, [x19, #256]
  453a3c:	mov	w1, #0x6f                  	// #111
  453a40:	strb	w1, [x19, x3]
  453a44:	strb	w1, [x19, #264]
  453a48:	cmp	x0, #0xff
  453a4c:	b.ne	453600 <ferror@plt+0x50d80>  // b.any
  453a50:	ldp	x3, x2, [x19, #272]
  453a54:	strb	wzr, [x19, #255]
  453a58:	mov	x1, x0
  453a5c:	mov	x0, x19
  453a60:	blr	x3
  453a64:	ldr	x0, [x19, #320]
  453a68:	mov	w2, #0x6e                  	// #110
  453a6c:	mov	x1, #0x1                   	// #1
  453a70:	strb	w2, [x19]
  453a74:	add	x0, x0, x1
  453a78:	str	x0, [x19, #320]
  453a7c:	b	453988 <ferror@plt+0x51108>
  453a80:	add	x3, x0, #0x2
  453a84:	str	x3, [x19, #256]
  453a88:	mov	w20, #0x72                  	// #114
  453a8c:	strb	w20, [x19, x1]
  453a90:	strb	w20, [x19, #264]
  453a94:	cmp	x3, #0xff
  453a98:	b.ne	453b1c <ferror@plt+0x5129c>  // b.any
  453a9c:	ldp	x4, x2, [x19, #272]
  453aa0:	strb	wzr, [x19, #255]
  453aa4:	mov	x1, x3
  453aa8:	mov	x0, x19
  453aac:	blr	x4
  453ab0:	ldr	x0, [x19, #320]
  453ab4:	mov	w3, #0x7365                	// #29541
  453ab8:	mov	w2, #0x74                  	// #116
  453abc:	mov	x1, #0x3                   	// #3
  453ac0:	add	x0, x0, #0x1
  453ac4:	strh	w3, [x19]
  453ac8:	strb	w2, [x19, #2]
  453acc:	str	x0, [x19, #320]
  453ad0:	add	x0, x1, #0x1
  453ad4:	str	x0, [x19, #256]
  453ad8:	mov	w2, #0x72                  	// #114
  453adc:	strb	w2, [x19, x1]
  453ae0:	strb	w2, [x19, #264]
  453ae4:	cmp	x0, #0xff
  453ae8:	b.ne	453b68 <ferror@plt+0x512e8>  // b.any
  453aec:	ldp	x3, x2, [x19, #272]
  453af0:	strb	wzr, [x19, #255]
  453af4:	mov	x1, x0
  453af8:	mov	x0, x19
  453afc:	blr	x3
  453b00:	ldr	x0, [x19, #320]
  453b04:	mov	w2, #0x69                  	// #105
  453b08:	mov	x1, #0x1                   	// #1
  453b0c:	strb	w2, [x19]
  453b10:	add	x0, x0, x1
  453b14:	str	x0, [x19, #320]
  453b18:	b	4526b4 <ferror@plt+0x4fe34>
  453b1c:	add	x0, x0, #0x3
  453b20:	str	x0, [x19, #256]
  453b24:	mov	w1, #0x65                  	// #101
  453b28:	strb	w1, [x19, x3]
  453b2c:	strb	w1, [x19, #264]
  453b30:	cmp	x0, #0xff
  453b34:	b.ne	45323c <ferror@plt+0x509bc>  // b.any
  453b38:	ldp	x3, x2, [x19, #272]
  453b3c:	strb	wzr, [x19, #255]
  453b40:	mov	x1, x0
  453b44:	mov	x0, x19
  453b48:	blr	x3
  453b4c:	strb	w20, [x19, #2]
  453b50:	ldr	x1, [x19, #320]
  453b54:	mov	w2, #0x7473                	// #29811
  453b58:	mov	x0, #0x3                   	// #3
  453b5c:	strh	w2, [x19]
  453b60:	add	x1, x1, #0x1
  453b64:	str	x1, [x19, #320]
  453b68:	add	x1, x0, #0x1
  453b6c:	str	x1, [x19, #256]
  453b70:	mov	w2, #0x69                  	// #105
  453b74:	strb	w2, [x19, x0]
  453b78:	strb	w2, [x19, #264]
  453b7c:	cmp	x1, #0xff
  453b80:	b.ne	45328c <ferror@plt+0x50a0c>  // b.any
  453b84:	ldp	x3, x2, [x19, #272]
  453b88:	strb	wzr, [x19, #255]
  453b8c:	mov	x0, x19
  453b90:	blr	x3
  453b94:	mov	w2, #0x63                  	// #99
  453b98:	b	453630 <ferror@plt+0x50db0>
  453b9c:	add	x3, x0, #0x2
  453ba0:	str	x3, [x19, #256]
  453ba4:	mov	w2, #0x6f                  	// #111
  453ba8:	strb	w2, [x19, x1]
  453bac:	strb	w2, [x19, #264]
  453bb0:	cmp	x3, #0xff
  453bb4:	b.ne	453e18 <ferror@plt+0x51598>  // b.any
  453bb8:	ldp	x4, x2, [x19, #272]
  453bbc:	strb	wzr, [x19, #255]
  453bc0:	mov	x1, x3
  453bc4:	mov	x0, x19
  453bc8:	blr	x4
  453bcc:	ldr	x1, [x19, #320]
  453bd0:	mov	w3, #0x706d                	// #28781
  453bd4:	mov	w2, #0x6c                  	// #108
  453bd8:	mov	x0, #0x3                   	// #3
  453bdc:	add	x1, x1, #0x1
  453be0:	strh	w3, [x19]
  453be4:	strb	w2, [x19, #2]
  453be8:	str	x1, [x19, #320]
  453bec:	add	x1, x0, #0x1
  453bf0:	str	x1, [x19, #256]
  453bf4:	mov	w2, #0x65                  	// #101
  453bf8:	strb	w2, [x19, x0]
  453bfc:	strb	w2, [x19, #264]
  453c00:	cmp	x1, #0xff
  453c04:	b.ne	453e68 <ferror@plt+0x515e8>  // b.any
  453c08:	ldp	x3, x2, [x19, #272]
  453c0c:	strb	wzr, [x19, #255]
  453c10:	mov	x0, x19
  453c14:	blr	x3
  453c18:	mov	w2, #0x78                  	// #120
  453c1c:	b	4534e0 <ferror@plt+0x50c60>
  453c20:	add	x3, x0, #0x2
  453c24:	str	x3, [x19, #256]
  453c28:	mov	w2, #0x74                  	// #116
  453c2c:	strb	w2, [x19, x1]
  453c30:	strb	w2, [x19, #264]
  453c34:	cmp	x3, #0xff
  453c38:	b.ne	453c94 <ferror@plt+0x51414>  // b.any
  453c3c:	ldp	x4, x2, [x19, #272]
  453c40:	strb	wzr, [x19, #255]
  453c44:	mov	x1, x3
  453c48:	mov	x0, x19
  453c4c:	blr	x4
  453c50:	ldr	x0, [x19, #320]
  453c54:	mov	w2, #0x7268                	// #29288
  453c58:	mov	x1, #0x2                   	// #2
  453c5c:	strh	w2, [x19]
  453c60:	add	x0, x0, #0x1
  453c64:	str	x0, [x19, #320]
  453c68:	add	x3, x1, #0x1
  453c6c:	mov	w0, #0x6f                  	// #111
  453c70:	strb	w0, [x19, x1]
  453c74:	add	x0, x3, #0x1
  453c78:	str	x0, [x19, #256]
  453c7c:	mov	w1, #0x77                  	// #119
  453c80:	strb	w1, [x19, x3]
  453c84:	strb	w1, [x19, #264]
  453c88:	ldr	x22, [x20, #16]
  453c8c:	cbnz	x22, 45303c <ferror@plt+0x507bc>
  453c90:	b	452534 <ferror@plt+0x4fcb4>
  453c94:	add	x0, x0, #0x3
  453c98:	str	x0, [x19, #256]
  453c9c:	mov	w1, #0x68                  	// #104
  453ca0:	strb	w1, [x19, x3]
  453ca4:	strb	w1, [x19, #264]
  453ca8:	cmp	x0, #0xff
  453cac:	b.ne	45317c <ferror@plt+0x508fc>  // b.any
  453cb0:	ldp	x3, x2, [x19, #272]
  453cb4:	strb	wzr, [x19, #255]
  453cb8:	mov	x1, x0
  453cbc:	mov	x0, x19
  453cc0:	blr	x3
  453cc4:	ldr	x0, [x19, #320]
  453cc8:	mov	w2, #0x72                  	// #114
  453ccc:	mov	x1, #0x1                   	// #1
  453cd0:	strb	w2, [x19]
  453cd4:	add	x0, x0, x1
  453cd8:	str	x0, [x19, #320]
  453cdc:	b	453c68 <ferror@plt+0x513e8>
  453ce0:	add	x3, x0, #0x2
  453ce4:	str	x3, [x19, #256]
  453ce8:	mov	w2, #0x76                  	// #118
  453cec:	strb	w2, [x19, x1]
  453cf0:	strb	w2, [x19, #264]
  453cf4:	cmp	x3, #0xff
  453cf8:	b.ne	453f14 <ferror@plt+0x51694>  // b.any
  453cfc:	ldp	x4, x2, [x19, #272]
  453d00:	strb	wzr, [x19, #255]
  453d04:	mov	x1, x3
  453d08:	mov	x0, x19
  453d0c:	blr	x4
  453d10:	ldr	x0, [x19, #320]
  453d14:	mov	w3, #0x6c6f                	// #27759
  453d18:	mov	w2, #0x61                  	// #97
  453d1c:	mov	x1, #0x3                   	// #3
  453d20:	add	x0, x0, #0x1
  453d24:	strh	w3, [x19]
  453d28:	strb	w2, [x19, #2]
  453d2c:	str	x0, [x19, #320]
  453d30:	add	x0, x1, #0x1
  453d34:	str	x0, [x19, #256]
  453d38:	mov	w2, #0x74                  	// #116
  453d3c:	strb	w2, [x19, x1]
  453d40:	strb	w2, [x19, #264]
  453d44:	cmp	x0, #0xff
  453d48:	b.ne	453f64 <ferror@plt+0x516e4>  // b.any
  453d4c:	ldp	x3, x2, [x19, #272]
  453d50:	strb	wzr, [x19, #255]
  453d54:	mov	x1, x0
  453d58:	mov	x0, x19
  453d5c:	blr	x3
  453d60:	ldr	x0, [x19, #320]
  453d64:	mov	w2, #0x69                  	// #105
  453d68:	mov	x1, #0x1                   	// #1
  453d6c:	strb	w2, [x19]
  453d70:	add	x0, x0, x1
  453d74:	str	x0, [x19, #320]
  453d78:	b	452764 <ferror@plt+0x4fee4>
  453d7c:	add	x3, x0, #0x2
  453d80:	str	x3, [x19, #256]
  453d84:	mov	w2, #0x6e                  	// #110
  453d88:	strb	w2, [x19, x1]
  453d8c:	strb	w2, [x19, #264]
  453d90:	cmp	x3, #0xff
  453d94:	b.ne	453e8c <ferror@plt+0x5160c>  // b.any
  453d98:	ldp	x4, x2, [x19, #272]
  453d9c:	strb	wzr, [x19, #255]
  453da0:	mov	x1, x3
  453da4:	mov	x0, x19
  453da8:	blr	x4
  453dac:	ldr	x0, [x19, #320]
  453db0:	mov	w3, #0x656f                	// #25967
  453db4:	mov	w2, #0x78                  	// #120
  453db8:	mov	x1, #0x3                   	// #3
  453dbc:	add	x0, x0, #0x1
  453dc0:	strh	w3, [x19]
  453dc4:	strb	w2, [x19, #2]
  453dc8:	str	x0, [x19, #320]
  453dcc:	add	x0, x1, #0x1
  453dd0:	str	x0, [x19, #256]
  453dd4:	mov	w2, #0x63                  	// #99
  453dd8:	strb	w2, [x19, x1]
  453ddc:	strb	w2, [x19, #264]
  453de0:	cmp	x0, #0xff
  453de4:	b.ne	453edc <ferror@plt+0x5165c>  // b.any
  453de8:	ldp	x3, x2, [x19, #272]
  453dec:	strb	wzr, [x19, #255]
  453df0:	mov	x1, x0
  453df4:	mov	x0, x19
  453df8:	blr	x3
  453dfc:	ldr	x0, [x19, #320]
  453e00:	mov	w2, #0x65                  	// #101
  453e04:	mov	x1, #0x1                   	// #1
  453e08:	strb	w2, [x19]
  453e0c:	add	x0, x0, x1
  453e10:	str	x0, [x19, #320]
  453e14:	b	453014 <ferror@plt+0x50794>
  453e18:	add	x0, x0, #0x3
  453e1c:	str	x0, [x19, #256]
  453e20:	mov	w1, #0x6d                  	// #109
  453e24:	strb	w1, [x19, x3]
  453e28:	strb	w1, [x19, #264]
  453e2c:	cmp	x0, #0xff
  453e30:	b.ne	4533e8 <ferror@plt+0x50b68>  // b.any
  453e34:	ldp	x3, x2, [x19, #272]
  453e38:	strb	wzr, [x19, #255]
  453e3c:	mov	x1, x0
  453e40:	mov	x0, x19
  453e44:	blr	x3
  453e48:	ldr	x0, [x19, #320]
  453e4c:	mov	w3, #0x6c70                	// #27760
  453e50:	mov	w2, #0x65                  	// #101
  453e54:	mov	x1, #0x3                   	// #3
  453e58:	add	x0, x0, #0x1
  453e5c:	strh	w3, [x19]
  453e60:	strb	w2, [x19, #2]
  453e64:	str	x0, [x19, #320]
  453e68:	add	x0, x1, #0x1
  453e6c:	str	x0, [x19, #256]
  453e70:	mov	w2, #0x78                  	// #120
  453e74:	strb	w2, [x19, x1]
  453e78:	strb	w2, [x19, #264]
  453e7c:	cmp	x0, #0xff
  453e80:	b.eq	452ea8 <ferror@plt+0x50628>  // b.none
  453e84:	add	x1, x0, #0x1
  453e88:	b	452ed0 <ferror@plt+0x50650>
  453e8c:	add	x0, x0, #0x3
  453e90:	str	x0, [x19, #256]
  453e94:	mov	w1, #0x6f                  	// #111
  453e98:	strb	w1, [x19, x3]
  453e9c:	strb	w1, [x19, #264]
  453ea0:	cmp	x0, #0xff
  453ea4:	b.ne	453680 <ferror@plt+0x50e00>  // b.any
  453ea8:	ldp	x3, x2, [x19, #272]
  453eac:	strb	wzr, [x19, #255]
  453eb0:	mov	x1, x0
  453eb4:	mov	x0, x19
  453eb8:	blr	x3
  453ebc:	ldr	x1, [x19, #320]
  453ec0:	mov	w3, #0x7865                	// #30821
  453ec4:	mov	w2, #0x63                  	// #99
  453ec8:	mov	x0, #0x3                   	// #3
  453ecc:	add	x1, x1, #0x1
  453ed0:	strh	w3, [x19]
  453ed4:	strb	w2, [x19, #2]
  453ed8:	str	x1, [x19, #320]
  453edc:	add	x1, x0, #0x1
  453ee0:	str	x1, [x19, #256]
  453ee4:	mov	w2, #0x65                  	// #101
  453ee8:	strb	w2, [x19, x0]
  453eec:	strb	w2, [x19, #264]
  453ef0:	cmp	x1, #0xff
  453ef4:	b.ne	4536cc <ferror@plt+0x50e4c>  // b.any
  453ef8:	ldp	x3, x2, [x19, #272]
  453efc:	strb	wzr, [x19, #255]
  453f00:	mov	x0, x19
  453f04:	blr	x3
  453f08:	mov	w1, #0x7470                	// #29808
  453f0c:	mov	w0, #0x74                  	// #116
  453f10:	b	4531b0 <ferror@plt+0x50930>
  453f14:	add	x0, x0, #0x3
  453f18:	str	x0, [x19, #256]
  453f1c:	mov	w1, #0x6f                  	// #111
  453f20:	strb	w1, [x19, x3]
  453f24:	strb	w1, [x19, #264]
  453f28:	cmp	x0, #0xff
  453f2c:	b.ne	4532e4 <ferror@plt+0x50a64>  // b.any
  453f30:	ldp	x3, x2, [x19, #272]
  453f34:	strb	wzr, [x19, #255]
  453f38:	mov	x1, x0
  453f3c:	mov	x0, x19
  453f40:	blr	x3
  453f44:	ldr	x1, [x19, #320]
  453f48:	mov	w3, #0x616c                	// #24940
  453f4c:	mov	w2, #0x74                  	// #116
  453f50:	mov	x0, #0x3                   	// #3
  453f54:	add	x1, x1, #0x1
  453f58:	strh	w3, [x19]
  453f5c:	strb	w2, [x19, #2]
  453f60:	str	x1, [x19, #320]
  453f64:	add	x1, x0, #0x1
  453f68:	str	x1, [x19, #256]
  453f6c:	mov	w2, #0x69                  	// #105
  453f70:	strb	w2, [x19, x0]
  453f74:	strb	w2, [x19, #264]
  453f78:	cmp	x1, #0xff
  453f7c:	b.ne	453334 <ferror@plt+0x50ab4>  // b.any
  453f80:	ldp	x3, x2, [x19, #272]
  453f84:	strb	wzr, [x19, #255]
  453f88:	mov	x0, x19
  453f8c:	blr	x3
  453f90:	ldr	x1, [x19, #320]
  453f94:	mov	x0, #0x1                   	// #1
  453f98:	mov	w2, #0x6c                  	// #108
  453f9c:	strb	w2, [x19]
  453fa0:	add	x1, x1, x0
  453fa4:	str	x1, [x19, #320]
  453fa8:	add	x1, x0, #0x1
  453fac:	b	453378 <ferror@plt+0x50af8>
  453fb0:	add	x0, x0, #0x2
  453fb4:	str	x0, [x19, #256]
  453fb8:	strb	w20, [x19, x1]
  453fbc:	cmp	x0, #0xff
  453fc0:	strb	w20, [x19, #264]
  453fc4:	b.ne	45292c <ferror@plt+0x500ac>  // b.any
  453fc8:	ldp	x3, x2, [x19, #272]
  453fcc:	strb	wzr, [x19, #255]
  453fd0:	mov	x1, x0
  453fd4:	mov	x0, x19
  453fd8:	blr	x3
  453fdc:	ldr	x2, [x19, #320]
  453fe0:	mov	x1, #0x1                   	// #1
  453fe4:	mov	x0, #0x0                   	// #0
  453fe8:	add	x2, x2, x1
  453fec:	str	x2, [x19, #320]
  453ff0:	b	452930 <ferror@plt+0x500b0>
  453ff4:	ldp	x3, x2, [x19, #272]
  453ff8:	strb	wzr, [x19, #255]
  453ffc:	mov	x1, x0
  454000:	mov	x0, x19
  454004:	blr	x3
  454008:	ldr	x1, [x19, #320]
  45400c:	mov	w2, #0x3a3a                	// #14906
  454010:	mov	x0, #0x2                   	// #2
  454014:	strh	w2, [x19]
  454018:	add	x1, x1, #0x1
  45401c:	str	x1, [x19, #320]
  454020:	b	45292c <ferror@plt+0x500ac>
  454024:	ldr	w0, [x22, #4]
  454028:	mov	x1, x2
  45402c:	cmp	w0, #0x1
  454030:	b.le	452c90 <ferror@plt+0x50410>
  454034:	add	x0, x1, #0x1
  454038:	str	w2, [x19, #304]
  45403c:	b	452d1c <ferror@plt+0x5049c>
  454040:	cbz	x2, 4545c4 <ferror@plt+0x51d44>
  454044:	stp	x29, x30, [sp, #-112]!
  454048:	mov	x29, sp
  45404c:	stp	x19, x20, [sp, #16]
  454050:	mov	x20, x0
  454054:	mov	x19, x2
  454058:	stp	x21, x22, [sp, #32]
  45405c:	mov	w21, w1
  454060:	mov	w22, #0x1                   	// #1
  454064:	stp	x25, x26, [sp, #64]
  454068:	cbnz	w3, 45415c <ferror@plt+0x518dc>
  45406c:	mov	x22, #0x1f                  	// #31
  454070:	stp	x23, x24, [sp, #48]
  454074:	movk	x22, #0x1a, lsl #48
  454078:	mov	w24, #0x1                   	// #1
  45407c:	mov	x23, #0x1                   	// #1
  454080:	b	4540e8 <ferror@plt+0x51868>
  454084:	ldr	w2, [x19, #16]
  454088:	cbnz	w2, 4540e0 <ferror@plt+0x51860>
  45408c:	ldr	x4, [x19, #8]
  454090:	mov	x2, x4
  454094:	ldr	w5, [x4]
  454098:	sub	w3, w5, #0x1c
  45409c:	cmp	w3, #0x34
  4540a0:	b.hi	4540b0 <ferror@plt+0x51830>  // b.pmore
  4540a4:	lsl	x3, x23, x3
  4540a8:	tst	x3, x22
  4540ac:	b.ne	4540e0 <ferror@plt+0x51860>  // b.any
  4540b0:	ldr	x3, [x19, #24]
  4540b4:	cmp	w5, #0x29
  4540b8:	ldr	x25, [x20, #288]
  4540bc:	str	w24, [x19, #16]
  4540c0:	str	x3, [x20, #288]
  4540c4:	b.eq	454180 <ferror@plt+0x51900>  // b.none
  4540c8:	cmp	w5, #0x2a
  4540cc:	b.eq	4541b0 <ferror@plt+0x51930>  // b.none
  4540d0:	cmp	w5, #0x2
  4540d4:	b.eq	4541e4 <ferror@plt+0x51964>  // b.none
  4540d8:	bl	4524e8 <ferror@plt+0x4fc68>
  4540dc:	str	x25, [x20, #288]
  4540e0:	ldr	x19, [x19]
  4540e4:	cbz	x19, 4540f8 <ferror@plt+0x51878>
  4540e8:	ldr	w2, [x20, #304]
  4540ec:	mov	w1, w21
  4540f0:	mov	x0, x20
  4540f4:	cbz	w2, 454084 <ferror@plt+0x51804>
  4540f8:	ldp	x23, x24, [sp, #48]
  4540fc:	ldp	x19, x20, [sp, #16]
  454100:	ldp	x21, x22, [sp, #32]
  454104:	ldp	x25, x26, [sp, #64]
  454108:	ldp	x29, x30, [sp], #112
  45410c:	ret
  454110:	ldr	w2, [x19, #16]
  454114:	cbnz	w2, 454154 <ferror@plt+0x518d4>
  454118:	ldr	x4, [x19, #8]
  45411c:	ldr	x5, [x19, #24]
  454120:	mov	x2, x4
  454124:	ldr	w3, [x4]
  454128:	ldr	x25, [x20, #288]
  45412c:	str	w22, [x19, #16]
  454130:	str	x5, [x20, #288]
  454134:	cmp	w3, #0x29
  454138:	b.eq	454184 <ferror@plt+0x51904>  // b.none
  45413c:	cmp	w3, #0x2a
  454140:	b.eq	4541b4 <ferror@plt+0x51934>  // b.none
  454144:	cmp	w3, #0x2
  454148:	b.eq	4541e0 <ferror@plt+0x51960>  // b.none
  45414c:	bl	4524e8 <ferror@plt+0x4fc68>
  454150:	str	x25, [x20, #288]
  454154:	ldr	x19, [x19]
  454158:	cbz	x19, 4540fc <ferror@plt+0x5187c>
  45415c:	ldr	w2, [x20, #304]
  454160:	mov	w1, w21
  454164:	mov	x0, x20
  454168:	cbz	w2, 454110 <ferror@plt+0x51890>
  45416c:	ldp	x19, x20, [sp, #16]
  454170:	ldp	x21, x22, [sp, #32]
  454174:	ldp	x25, x26, [sp, #64]
  454178:	ldp	x29, x30, [sp], #112
  45417c:	ret
  454180:	ldp	x23, x24, [sp, #48]
  454184:	mov	w1, w21
  454188:	ldr	x3, [x19]
  45418c:	mov	x0, x20
  454190:	add	x2, x4, #0x10
  454194:	bl	454cd8 <ferror@plt+0x52458>
  454198:	str	x25, [x20, #288]
  45419c:	ldp	x19, x20, [sp, #16]
  4541a0:	ldp	x21, x22, [sp, #32]
  4541a4:	ldp	x25, x26, [sp, #64]
  4541a8:	ldp	x29, x30, [sp], #112
  4541ac:	ret
  4541b0:	ldp	x23, x24, [sp, #48]
  4541b4:	mov	w1, w21
  4541b8:	ldr	x3, [x19]
  4541bc:	mov	x0, x20
  4541c0:	add	x2, x4, #0x8
  4541c4:	bl	4549a8 <ferror@plt+0x52128>
  4541c8:	str	x25, [x20, #288]
  4541cc:	ldp	x19, x20, [sp, #16]
  4541d0:	ldp	x21, x22, [sp, #32]
  4541d4:	ldp	x25, x26, [sp, #64]
  4541d8:	ldp	x29, x30, [sp], #112
  4541dc:	ret
  4541e0:	stp	x23, x24, [sp, #48]
  4541e4:	ldr	x22, [x4, #8]
  4541e8:	ldr	x23, [x20, #296]
  4541ec:	str	xzr, [x20, #296]
  4541f0:	cbz	x22, 45420c <ferror@plt+0x5198c>
  4541f4:	ldr	w0, [x22, #4]
  4541f8:	cmp	w0, #0x1
  4541fc:	b.gt	45420c <ferror@plt+0x5198c>
  454200:	ldr	w1, [x20, #308]
  454204:	cmp	w1, #0x400
  454208:	b.le	454338 <ferror@plt+0x51ab8>
  45420c:	mov	w0, #0x1                   	// #1
  454210:	str	w0, [x20, #304]
  454214:	str	x23, [x20, #296]
  454218:	ldr	x0, [x20, #256]
  45421c:	tbz	w21, #2, 45438c <ferror@plt+0x51b0c>
  454220:	add	x3, x0, #0x1
  454224:	cmp	x0, #0xff
  454228:	b.ne	454254 <ferror@plt+0x519d4>  // b.any
  45422c:	ldp	x3, x2, [x20, #272]
  454230:	strb	wzr, [x20, #255]
  454234:	mov	x1, x0
  454238:	mov	x0, x20
  45423c:	blr	x3
  454240:	ldr	x1, [x20, #320]
  454244:	mov	x3, #0x1                   	// #1
  454248:	mov	x0, #0x0                   	// #0
  45424c:	add	x1, x1, x3
  454250:	str	x1, [x20, #320]
  454254:	str	x3, [x20, #256]
  454258:	mov	w1, #0x2e                  	// #46
  45425c:	strb	w1, [x20, x0]
  454260:	strb	w1, [x20, #264]
  454264:	ldr	x0, [x19, #8]
  454268:	ldr	x22, [x0, #16]
  45426c:	ldr	w0, [x22]
  454270:	cmp	w0, #0x47
  454274:	b.eq	45441c <ferror@plt+0x51b9c>  // b.none
  454278:	mov	x1, #0x1f                  	// #31
  45427c:	mov	x2, #0x1                   	// #1
  454280:	movk	x1, #0x1a, lsl #48
  454284:	sub	w0, w0, #0x1c
  454288:	cmp	w0, #0x34
  45428c:	b.hi	45429c <ferror@plt+0x51a1c>  // b.pmore
  454290:	lsl	x0, x2, x0
  454294:	tst	x0, x1
  454298:	b.ne	4542d8 <ferror@plt+0x51a58>  // b.any
  45429c:	ldr	w0, [x22, #4]
  4542a0:	cmp	w0, #0x1
  4542a4:	b.gt	4542b4 <ferror@plt+0x51a34>
  4542a8:	ldr	w1, [x20, #308]
  4542ac:	cmp	w1, #0x400
  4542b0:	b.le	4542e4 <ferror@plt+0x51a64>
  4542b4:	mov	w0, #0x1                   	// #1
  4542b8:	str	w0, [x20, #304]
  4542bc:	ldp	x23, x24, [sp, #48]
  4542c0:	str	x25, [x20, #288]
  4542c4:	ldp	x19, x20, [sp, #16]
  4542c8:	ldp	x21, x22, [sp, #32]
  4542cc:	ldp	x25, x26, [sp, #64]
  4542d0:	ldp	x29, x30, [sp], #112
  4542d4:	ret
  4542d8:	ldr	x22, [x22, #8]
  4542dc:	ldr	w0, [x22]
  4542e0:	b	454284 <ferror@plt+0x51a04>
  4542e4:	ldr	x3, [x20, #328]
  4542e8:	add	w0, w0, #0x1
  4542ec:	str	w0, [x22, #4]
  4542f0:	add	w1, w1, #0x1
  4542f4:	add	x0, sp, #0x50
  4542f8:	str	w1, [x20, #308]
  4542fc:	str	x0, [x20, #328]
  454300:	mov	w1, w21
  454304:	mov	x0, x20
  454308:	mov	x2, x22
  45430c:	stp	x22, x3, [sp, #80]
  454310:	bl	448dd0 <ferror@plt+0x46550>
  454314:	ldr	w1, [x22, #4]
  454318:	ldr	x0, [sp, #88]
  45431c:	str	x0, [x20, #328]
  454320:	ldr	w0, [x20, #308]
  454324:	sub	w1, w1, #0x1
  454328:	str	w1, [x22, #4]
  45432c:	sub	w0, w0, #0x1
  454330:	str	w0, [x20, #308]
  454334:	b	4542bc <ferror@plt+0x51a3c>
  454338:	ldr	x3, [x20, #328]
  45433c:	add	w0, w0, #0x1
  454340:	str	w0, [x22, #4]
  454344:	add	w1, w1, #0x1
  454348:	add	x0, sp, #0x50
  45434c:	str	w1, [x20, #308]
  454350:	str	x0, [x20, #328]
  454354:	mov	w1, w21
  454358:	mov	x0, x20
  45435c:	mov	x2, x22
  454360:	stp	x22, x3, [sp, #80]
  454364:	bl	448dd0 <ferror@plt+0x46550>
  454368:	ldr	w1, [x22, #4]
  45436c:	ldr	x0, [sp, #88]
  454370:	str	x0, [x20, #328]
  454374:	ldr	w0, [x20, #308]
  454378:	sub	w1, w1, #0x1
  45437c:	str	w1, [x22, #4]
  454380:	sub	w0, w0, #0x1
  454384:	str	w0, [x20, #308]
  454388:	b	454214 <ferror@plt+0x51994>
  45438c:	cmp	x0, #0xff
  454390:	b.eq	4543e8 <ferror@plt+0x51b68>  // b.none
  454394:	add	x1, x0, #0x1
  454398:	str	x1, [x20, #256]
  45439c:	mov	w2, #0x3a                  	// #58
  4543a0:	strb	w2, [x20, x0]
  4543a4:	strb	w2, [x20, #264]
  4543a8:	cmp	x1, #0xff
  4543ac:	b.ne	454414 <ferror@plt+0x51b94>  // b.any
  4543b0:	ldp	x3, x2, [x20, #272]
  4543b4:	strb	wzr, [x20, #255]
  4543b8:	mov	x0, x20
  4543bc:	blr	x3
  4543c0:	ldr	x0, [x20, #320]
  4543c4:	mov	x3, #0x1                   	// #1
  4543c8:	mov	x1, #0x0                   	// #0
  4543cc:	add	x0, x0, x3
  4543d0:	str	x0, [x20, #320]
  4543d4:	str	x3, [x20, #256]
  4543d8:	mov	w0, #0x3a                  	// #58
  4543dc:	strb	w0, [x20, x1]
  4543e0:	strb	w0, [x20, #264]
  4543e4:	b	454264 <ferror@plt+0x519e4>
  4543e8:	ldp	x3, x2, [x20, #272]
  4543ec:	strb	wzr, [x20, #255]
  4543f0:	mov	x1, x0
  4543f4:	mov	x0, x20
  4543f8:	blr	x3
  4543fc:	ldr	x0, [x20, #320]
  454400:	mov	w2, #0x3a                  	// #58
  454404:	mov	x1, #0x1                   	// #1
  454408:	strb	w2, [x20]
  45440c:	add	x0, x0, x1
  454410:	str	x0, [x20, #320]
  454414:	add	x3, x1, #0x1
  454418:	b	4543d4 <ferror@plt+0x51b54>
  45441c:	cmp	x3, #0xff
  454420:	b.eq	4547ec <ferror@plt+0x51f6c>  // b.none
  454424:	add	x1, x3, #0x1
  454428:	str	x1, [x20, #256]
  45442c:	mov	w0, #0x7b                  	// #123
  454430:	strb	w0, [x20, x3]
  454434:	strb	w0, [x20, #264]
  454438:	cmp	x1, #0xff
  45443c:	b.ne	45461c <ferror@plt+0x51d9c>  // b.any
  454440:	ldp	x3, x2, [x20, #272]
  454444:	strb	wzr, [x20, #255]
  454448:	mov	x0, x20
  45444c:	blr	x3
  454450:	ldr	x1, [x20, #320]
  454454:	mov	w3, #0x6564                	// #25956
  454458:	mov	w2, #0x66                  	// #102
  45445c:	mov	x0, #0x3                   	// #3
  454460:	add	x1, x1, #0x1
  454464:	strh	w3, [x20]
  454468:	strb	w2, [x20, #2]
  45446c:	str	x1, [x20, #320]
  454470:	add	x1, x0, #0x1
  454474:	str	x1, [x20, #256]
  454478:	mov	w2, #0x61                  	// #97
  45447c:	strb	w2, [x20, x0]
  454480:	strb	w2, [x20, #264]
  454484:	cmp	x1, #0xff
  454488:	b.ne	45466c <ferror@plt+0x51dec>  // b.any
  45448c:	ldp	x3, x2, [x20, #272]
  454490:	strb	wzr, [x20, #255]
  454494:	mov	x0, x20
  454498:	blr	x3
  45449c:	ldr	x1, [x20, #320]
  4544a0:	mov	w3, #0x6c75                	// #27765
  4544a4:	mov	w2, #0x74                  	// #116
  4544a8:	mov	x0, #0x3                   	// #3
  4544ac:	add	x1, x1, #0x1
  4544b0:	strh	w3, [x20]
  4544b4:	strb	w2, [x20, #2]
  4544b8:	str	x1, [x20, #320]
  4544bc:	add	x1, x0, #0x1
  4544c0:	str	x1, [x20, #256]
  4544c4:	mov	w2, #0x20                  	// #32
  4544c8:	strb	w2, [x20, x0]
  4544cc:	strb	w2, [x20, #264]
  4544d0:	cmp	x1, #0xff
  4544d4:	b.ne	4546bc <ferror@plt+0x51e3c>  // b.any
  4544d8:	ldp	x3, x2, [x20, #272]
  4544dc:	strb	wzr, [x20, #255]
  4544e0:	mov	x0, x20
  4544e4:	blr	x3
  4544e8:	ldr	x0, [x20, #320]
  4544ec:	mov	w2, #0x7261                	// #29281
  4544f0:	mov	x1, #0x2                   	// #2
  4544f4:	strh	w2, [x20]
  4544f8:	add	x0, x0, #0x1
  4544fc:	str	x0, [x20, #320]
  454500:	add	x0, x1, #0x1
  454504:	mov	w2, #0x67                  	// #103
  454508:	strb	w2, [x20, x1]
  45450c:	add	x2, x0, #0x1
  454510:	str	x2, [x20, #256]
  454514:	mov	w2, #0x23                  	// #35
  454518:	strb	w2, [x20, x0]
  45451c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  454520:	strb	w2, [x20, #264]
  454524:	add	x1, x1, #0x9e0
  454528:	add	x0, sp, #0x50
  45452c:	ldr	w2, [x22, #16]
  454530:	add	w2, w2, #0x1
  454534:	bl	402310 <sprintf@plt>
  454538:	add	x0, sp, #0x50
  45453c:	bl	402270 <strlen@plt>
  454540:	cbz	x0, 4545c8 <ferror@plt+0x51d48>
  454544:	add	x19, sp, #0x50
  454548:	mov	x26, #0x1                   	// #1
  45454c:	add	x24, x19, x0
  454550:	ldr	x1, [x20, #256]
  454554:	b	4545ac <ferror@plt+0x51d2c>
  454558:	ldp	x3, x2, [x20, #272]
  45455c:	strb	wzr, [x20, #255]
  454560:	add	x19, x19, #0x1
  454564:	blr	x3
  454568:	strb	w23, [x20]
  45456c:	ldr	x0, [x20, #320]
  454570:	str	x26, [x20, #256]
  454574:	strb	w23, [x20, #264]
  454578:	cmp	x24, x19
  45457c:	add	x0, x0, #0x1
  454580:	str	x0, [x20, #320]
  454584:	mov	x0, #0x1                   	// #1
  454588:	b.eq	454954 <ferror@plt+0x520d4>  // b.none
  45458c:	ldrb	w23, [x19]
  454590:	add	x1, x0, #0x1
  454594:	str	x1, [x20, #256]
  454598:	strb	w23, [x20, x0]
  45459c:	add	x19, x19, #0x1
  4545a0:	strb	w23, [x20, #264]
  4545a4:	cmp	x24, x19
  4545a8:	b.eq	4545cc <ferror@plt+0x51d4c>  // b.none
  4545ac:	ldrb	w23, [x19]
  4545b0:	mov	x0, x20
  4545b4:	cmp	x1, #0xff
  4545b8:	b.eq	454558 <ferror@plt+0x51cd8>  // b.none
  4545bc:	mov	x0, x1
  4545c0:	b	454590 <ferror@plt+0x51d10>
  4545c4:	ret
  4545c8:	ldr	x1, [x20, #256]
  4545cc:	cmp	x1, #0xff
  4545d0:	b.ne	454908 <ferror@plt+0x52088>  // b.any
  4545d4:	ldp	x3, x2, [x20, #272]
  4545d8:	strb	wzr, [x20, #255]
  4545dc:	mov	x0, x20
  4545e0:	blr	x3
  4545e4:	ldr	x1, [x20, #320]
  4545e8:	mov	w2, #0x3a7d                	// #14973
  4545ec:	mov	x0, #0x2                   	// #2
  4545f0:	strh	w2, [x20]
  4545f4:	add	x1, x1, #0x1
  4545f8:	str	x1, [x20, #320]
  4545fc:	add	x2, x0, #0x1
  454600:	str	x2, [x20, #256]
  454604:	mov	w1, #0x3a                  	// #58
  454608:	strb	w1, [x20, x0]
  45460c:	strb	w1, [x20, #264]
  454610:	ldr	x22, [x22, #8]
  454614:	ldr	w0, [x22]
  454618:	b	454278 <ferror@plt+0x519f8>
  45461c:	add	x0, x3, #0x2
  454620:	str	x0, [x20, #256]
  454624:	mov	w2, #0x64                  	// #100
  454628:	strb	w2, [x20, x1]
  45462c:	strb	w2, [x20, #264]
  454630:	cmp	x0, #0xff
  454634:	b.ne	454708 <ferror@plt+0x51e88>  // b.any
  454638:	ldp	x3, x2, [x20, #272]
  45463c:	strb	wzr, [x20, #255]
  454640:	mov	x1, x0
  454644:	mov	x0, x20
  454648:	blr	x3
  45464c:	ldr	x0, [x20, #320]
  454650:	mov	w3, #0x6665                	// #26213
  454654:	mov	w2, #0x61                  	// #97
  454658:	mov	x1, #0x3                   	// #3
  45465c:	add	x0, x0, #0x1
  454660:	strh	w3, [x20]
  454664:	strb	w2, [x20, #2]
  454668:	str	x0, [x20, #320]
  45466c:	add	x0, x1, #0x1
  454670:	str	x0, [x20, #256]
  454674:	mov	w2, #0x75                  	// #117
  454678:	strb	w2, [x20, x1]
  45467c:	strb	w2, [x20, #264]
  454680:	cmp	x0, #0xff
  454684:	b.ne	454758 <ferror@plt+0x51ed8>  // b.any
  454688:	ldp	x3, x2, [x20, #272]
  45468c:	strb	wzr, [x20, #255]
  454690:	mov	x1, x0
  454694:	mov	x0, x20
  454698:	blr	x3
  45469c:	ldr	x0, [x20, #320]
  4546a0:	mov	w3, #0x746c                	// #29804
  4546a4:	mov	w2, #0x20                  	// #32
  4546a8:	mov	x1, #0x3                   	// #3
  4546ac:	add	x0, x0, #0x1
  4546b0:	strh	w3, [x20]
  4546b4:	strb	w2, [x20, #2]
  4546b8:	str	x0, [x20, #320]
  4546bc:	add	x0, x1, #0x1
  4546c0:	str	x0, [x20, #256]
  4546c4:	mov	w2, #0x61                  	// #97
  4546c8:	strb	w2, [x20, x1]
  4546cc:	strb	w2, [x20, #264]
  4546d0:	cmp	x0, #0xff
  4546d4:	b.ne	4547a4 <ferror@plt+0x51f24>  // b.any
  4546d8:	ldp	x3, x2, [x20, #272]
  4546dc:	strb	wzr, [x20, #255]
  4546e0:	mov	x1, x0
  4546e4:	mov	x0, x20
  4546e8:	blr	x3
  4546ec:	ldr	x0, [x20, #320]
  4546f0:	mov	w2, #0x72                  	// #114
  4546f4:	mov	x1, #0x1                   	// #1
  4546f8:	strb	w2, [x20]
  4546fc:	add	x0, x0, x1
  454700:	str	x0, [x20, #320]
  454704:	b	454500 <ferror@plt+0x51c80>
  454708:	add	x3, x3, #0x3
  45470c:	str	x3, [x20, #256]
  454710:	mov	w1, #0x65                  	// #101
  454714:	strb	w1, [x20, x0]
  454718:	strb	w1, [x20, #264]
  45471c:	cmp	x3, #0xff
  454720:	b.ne	454820 <ferror@plt+0x51fa0>  // b.any
  454724:	ldp	x4, x2, [x20, #272]
  454728:	strb	wzr, [x20, #255]
  45472c:	mov	x1, x3
  454730:	mov	x0, x20
  454734:	blr	x4
  454738:	ldr	x1, [x20, #320]
  45473c:	mov	w3, #0x6166                	// #24934
  454740:	mov	w2, #0x75                  	// #117
  454744:	mov	x0, #0x3                   	// #3
  454748:	add	x1, x1, #0x1
  45474c:	strh	w3, [x20]
  454750:	strb	w2, [x20, #2]
  454754:	str	x1, [x20, #320]
  454758:	add	x1, x0, #0x1
  45475c:	str	x1, [x20, #256]
  454760:	mov	w2, #0x6c                  	// #108
  454764:	strb	w2, [x20, x0]
  454768:	strb	w2, [x20, #264]
  45476c:	cmp	x1, #0xff
  454770:	b.ne	454870 <ferror@plt+0x51ff0>  // b.any
  454774:	ldp	x3, x2, [x20, #272]
  454778:	strb	wzr, [x20, #255]
  45477c:	mov	x0, x20
  454780:	blr	x3
  454784:	ldr	x1, [x20, #320]
  454788:	mov	w3, #0x2074                	// #8308
  45478c:	mov	w2, #0x61                  	// #97
  454790:	mov	x0, #0x3                   	// #3
  454794:	add	x1, x1, #0x1
  454798:	strh	w3, [x20]
  45479c:	strb	w2, [x20, #2]
  4547a0:	str	x1, [x20, #320]
  4547a4:	add	x1, x0, #0x1
  4547a8:	str	x1, [x20, #256]
  4547ac:	mov	w2, #0x72                  	// #114
  4547b0:	strb	w2, [x20, x0]
  4547b4:	strb	w2, [x20, #264]
  4547b8:	cmp	x1, #0xff
  4547bc:	b.ne	4548c0 <ferror@plt+0x52040>  // b.any
  4547c0:	ldp	x3, x2, [x20, #272]
  4547c4:	strb	wzr, [x20, #255]
  4547c8:	mov	x0, x20
  4547cc:	blr	x3
  4547d0:	ldr	x1, [x20, #320]
  4547d4:	mov	w2, #0x67                  	// #103
  4547d8:	mov	x0, #0x1                   	// #1
  4547dc:	strb	w2, [x20]
  4547e0:	add	x1, x1, x0
  4547e4:	str	x1, [x20, #320]
  4547e8:	b	45450c <ferror@plt+0x51c8c>
  4547ec:	ldp	x4, x2, [x20, #272]
  4547f0:	strb	wzr, [x20, #255]
  4547f4:	mov	x1, x3
  4547f8:	mov	x0, x20
  4547fc:	blr	x4
  454800:	ldr	x0, [x20, #320]
  454804:	mov	w2, #0x647b                	// #25723
  454808:	mov	w1, #0x65                  	// #101
  45480c:	mov	x3, #0x3                   	// #3
  454810:	add	x0, x0, #0x1
  454814:	strh	w2, [x20]
  454818:	strb	w1, [x20, #2]
  45481c:	str	x0, [x20, #320]
  454820:	add	x0, x3, #0x1
  454824:	str	x0, [x20, #256]
  454828:	mov	w1, #0x66                  	// #102
  45482c:	strb	w1, [x20, x3]
  454830:	strb	w1, [x20, #264]
  454834:	cmp	x0, #0xff
  454838:	b.ne	454470 <ferror@plt+0x51bf0>  // b.any
  45483c:	ldp	x3, x2, [x20, #272]
  454840:	strb	wzr, [x20, #255]
  454844:	mov	x1, x0
  454848:	mov	x0, x20
  45484c:	blr	x3
  454850:	ldr	x0, [x20, #320]
  454854:	mov	w3, #0x7561                	// #30049
  454858:	mov	w2, #0x6c                  	// #108
  45485c:	mov	x1, #0x3                   	// #3
  454860:	add	x0, x0, #0x1
  454864:	strh	w3, [x20]
  454868:	strb	w2, [x20, #2]
  45486c:	str	x0, [x20, #320]
  454870:	add	x0, x1, #0x1
  454874:	str	x0, [x20, #256]
  454878:	mov	w2, #0x74                  	// #116
  45487c:	strb	w2, [x20, x1]
  454880:	strb	w2, [x20, #264]
  454884:	cmp	x0, #0xff
  454888:	b.ne	4544bc <ferror@plt+0x51c3c>  // b.any
  45488c:	ldp	x3, x2, [x20, #272]
  454890:	strb	wzr, [x20, #255]
  454894:	mov	x1, x0
  454898:	mov	x0, x20
  45489c:	blr	x3
  4548a0:	ldr	x0, [x20, #320]
  4548a4:	mov	w3, #0x6120                	// #24864
  4548a8:	mov	w2, #0x72                  	// #114
  4548ac:	mov	x1, #0x3                   	// #3
  4548b0:	add	x0, x0, #0x1
  4548b4:	strh	w3, [x20]
  4548b8:	strb	w2, [x20, #2]
  4548bc:	str	x0, [x20, #320]
  4548c0:	add	x0, x1, #0x1
  4548c4:	str	x0, [x20, #256]
  4548c8:	mov	w2, #0x67                  	// #103
  4548cc:	strb	w2, [x20, x1]
  4548d0:	strb	w2, [x20, #264]
  4548d4:	cmp	x0, #0xff
  4548d8:	b.ne	45450c <ferror@plt+0x51c8c>  // b.any
  4548dc:	ldp	x3, x2, [x20, #272]
  4548e0:	strb	wzr, [x20, #255]
  4548e4:	mov	x1, x0
  4548e8:	mov	x0, x20
  4548ec:	blr	x3
  4548f0:	ldr	x1, [x20, #320]
  4548f4:	mov	x2, #0x1                   	// #1
  4548f8:	mov	x0, #0x0                   	// #0
  4548fc:	add	x1, x1, x2
  454900:	str	x1, [x20, #320]
  454904:	b	454510 <ferror@plt+0x51c90>
  454908:	add	x3, x1, #0x1
  45490c:	str	x3, [x20, #256]
  454910:	mov	w0, #0x7d                  	// #125
  454914:	strb	w0, [x20, x1]
  454918:	strb	w0, [x20, #264]
  45491c:	cmp	x3, #0xff
  454920:	b.ne	454960 <ferror@plt+0x520e0>  // b.any
  454924:	ldp	x4, x2, [x20, #272]
  454928:	strb	wzr, [x20, #255]
  45492c:	mov	x1, x3
  454930:	mov	x0, x20
  454934:	blr	x4
  454938:	ldr	x1, [x20, #320]
  45493c:	mov	w2, #0x3a                  	// #58
  454940:	mov	x0, #0x1                   	// #1
  454944:	strb	w2, [x20]
  454948:	add	x1, x1, x0
  45494c:	str	x1, [x20, #320]
  454950:	b	4545fc <ferror@plt+0x51d7c>
  454954:	mov	w0, #0x7d                  	// #125
  454958:	mov	x3, #0x2                   	// #2
  45495c:	strb	w0, [x20, #1]
  454960:	add	x0, x3, #0x1
  454964:	str	x0, [x20, #256]
  454968:	mov	w1, #0x3a                  	// #58
  45496c:	strb	w1, [x20, x3]
  454970:	strb	w1, [x20, #264]
  454974:	cmp	x0, #0xff
  454978:	b.ne	4545fc <ferror@plt+0x51d7c>  // b.any
  45497c:	ldp	x3, x2, [x20, #272]
  454980:	strb	wzr, [x20, #255]
  454984:	mov	x1, x0
  454988:	mov	x0, x20
  45498c:	blr	x3
  454990:	ldr	x1, [x20, #320]
  454994:	mov	x2, #0x1                   	// #1
  454998:	mov	x0, #0x0                   	// #0
  45499c:	add	x1, x1, x2
  4549a0:	str	x1, [x20, #320]
  4549a4:	b	454600 <ferror@plt+0x51d80>
  4549a8:	stp	x29, x30, [sp, #-80]!
  4549ac:	mov	x4, x3
  4549b0:	mov	x29, sp
  4549b4:	stp	x19, x20, [sp, #16]
  4549b8:	mov	x19, x0
  4549bc:	stp	x21, x22, [sp, #32]
  4549c0:	mov	w22, w1
  4549c4:	mov	x21, x2
  4549c8:	cbz	x3, 4549f4 <ferror@plt+0x52174>
  4549cc:	nop
  4549d0:	ldr	w0, [x4, #16]
  4549d4:	cbz	w0, 454b08 <ferror@plt+0x52288>
  4549d8:	ldr	x4, [x4]
  4549dc:	cbnz	x4, 4549d0 <ferror@plt+0x52150>
  4549e0:	mov	x2, x3
  4549e4:	mov	w1, w22
  4549e8:	mov	x0, x19
  4549ec:	mov	w3, #0x0                   	// #0
  4549f0:	bl	454040 <ferror@plt+0x517c0>
  4549f4:	ldr	x0, [x19, #256]
  4549f8:	cmp	x0, #0xff
  4549fc:	b.eq	454b34 <ferror@plt+0x522b4>  // b.none
  454a00:	add	x1, x0, #0x1
  454a04:	str	x1, [x19, #256]
  454a08:	mov	w2, #0x20                  	// #32
  454a0c:	strb	w2, [x19, x0]
  454a10:	strb	w2, [x19, #264]
  454a14:	cmp	x1, #0xff
  454a18:	b.eq	454acc <ferror@plt+0x5224c>  // b.none
  454a1c:	add	x0, x1, #0x1
  454a20:	str	x0, [x19, #256]
  454a24:	mov	w2, #0x5b                  	// #91
  454a28:	strb	w2, [x19, x1]
  454a2c:	strb	w2, [x19, #264]
  454a30:	ldr	x20, [x21]
  454a34:	cbz	x20, 454a58 <ferror@plt+0x521d8>
  454a38:	ldr	w1, [x20, #4]
  454a3c:	cmp	w1, #0x1
  454a40:	b.gt	454a50 <ferror@plt+0x521d0>
  454a44:	ldr	w2, [x19, #308]
  454a48:	cmp	w2, #0x400
  454a4c:	b.le	454c14 <ferror@plt+0x52394>
  454a50:	mov	w1, #0x1                   	// #1
  454a54:	str	w1, [x19, #304]
  454a58:	cmp	x0, #0xff
  454a5c:	b.eq	454a84 <ferror@plt+0x52204>  // b.none
  454a60:	add	x1, x0, #0x1
  454a64:	str	x1, [x19, #256]
  454a68:	mov	w1, #0x5d                  	// #93
  454a6c:	strb	w1, [x19, x0]
  454a70:	strb	w1, [x19, #264]
  454a74:	ldp	x19, x20, [sp, #16]
  454a78:	ldp	x21, x22, [sp, #32]
  454a7c:	ldp	x29, x30, [sp], #80
  454a80:	ret
  454a84:	ldp	x3, x2, [x19, #272]
  454a88:	strb	wzr, [x19, #255]
  454a8c:	mov	x1, x0
  454a90:	mov	x0, x19
  454a94:	blr	x3
  454a98:	ldr	x2, [x19, #320]
  454a9c:	mov	x0, #0x0                   	// #0
  454aa0:	mov	x1, #0x1                   	// #1
  454aa4:	str	x1, [x19, #256]
  454aa8:	add	x2, x2, x1
  454aac:	str	x2, [x19, #320]
  454ab0:	mov	w1, #0x5d                  	// #93
  454ab4:	strb	w1, [x19, x0]
  454ab8:	strb	w1, [x19, #264]
  454abc:	ldp	x19, x20, [sp, #16]
  454ac0:	ldp	x21, x22, [sp, #32]
  454ac4:	ldp	x29, x30, [sp], #80
  454ac8:	ret
  454acc:	ldp	x3, x2, [x19, #272]
  454ad0:	strb	wzr, [x19, #255]
  454ad4:	mov	x0, x19
  454ad8:	blr	x3
  454adc:	mov	w1, #0x5b                  	// #91
  454ae0:	strb	w1, [x19]
  454ae4:	strb	w1, [x19, #264]
  454ae8:	mov	x0, #0x1                   	// #1
  454aec:	ldr	x1, [x19, #320]
  454af0:	ldr	x20, [x21]
  454af4:	add	x1, x1, x0
  454af8:	str	x0, [x19, #256]
  454afc:	str	x1, [x19, #320]
  454b00:	cbnz	x20, 454a38 <ferror@plt+0x521b8>
  454b04:	b	454a60 <ferror@plt+0x521e0>
  454b08:	ldr	x0, [x4, #8]
  454b0c:	ldr	w0, [x0]
  454b10:	cmp	w0, #0x2a
  454b14:	b.ne	454b78 <ferror@plt+0x522f8>  // b.any
  454b18:	mov	x2, x3
  454b1c:	mov	w1, w22
  454b20:	mov	x0, x19
  454b24:	mov	w3, #0x0                   	// #0
  454b28:	bl	454040 <ferror@plt+0x517c0>
  454b2c:	ldr	x1, [x19, #256]
  454b30:	b	454a14 <ferror@plt+0x52194>
  454b34:	ldp	x3, x2, [x19, #272]
  454b38:	strb	wzr, [x19, #255]
  454b3c:	mov	x1, x0
  454b40:	mov	x0, x19
  454b44:	blr	x3
  454b48:	mov	w1, #0x5b20                	// #23328
  454b4c:	mov	w0, #0x5b                  	// #91
  454b50:	strh	w1, [x19]
  454b54:	strb	w0, [x19, #264]
  454b58:	mov	x0, #0x2                   	// #2
  454b5c:	ldr	x1, [x19, #320]
  454b60:	ldr	x20, [x21]
  454b64:	add	x1, x1, #0x1
  454b68:	str	x0, [x19, #256]
  454b6c:	str	x1, [x19, #320]
  454b70:	cbnz	x20, 454a38 <ferror@plt+0x521b8>
  454b74:	b	454a60 <ferror@plt+0x521e0>
  454b78:	ldr	x0, [x19, #256]
  454b7c:	cmp	x0, #0xff
  454b80:	b.eq	454c98 <ferror@plt+0x52418>  // b.none
  454b84:	add	x1, x0, #0x1
  454b88:	str	x1, [x19, #256]
  454b8c:	mov	w2, #0x20                  	// #32
  454b90:	strb	w2, [x19, x0]
  454b94:	strb	w2, [x19, #264]
  454b98:	cmp	x1, #0xff
  454b9c:	b.ne	454ccc <ferror@plt+0x5244c>  // b.any
  454ba0:	ldp	x4, x2, [x19, #272]
  454ba4:	strb	wzr, [x19, #255]
  454ba8:	mov	x0, x19
  454bac:	str	x3, [sp, #56]
  454bb0:	blr	x4
  454bb4:	ldr	x2, [x19, #320]
  454bb8:	mov	x0, #0x1                   	// #1
  454bbc:	ldr	x3, [sp, #56]
  454bc0:	add	x2, x2, x0
  454bc4:	mov	x1, #0x0                   	// #0
  454bc8:	str	x2, [x19, #320]
  454bcc:	str	x0, [x19, #256]
  454bd0:	mov	w0, #0x28                  	// #40
  454bd4:	strb	w0, [x19, x1]
  454bd8:	mov	x2, x3
  454bdc:	strb	w0, [x19, #264]
  454be0:	mov	w1, w22
  454be4:	mov	x0, x19
  454be8:	mov	w3, #0x0                   	// #0
  454bec:	bl	454040 <ferror@plt+0x517c0>
  454bf0:	ldr	x1, [x19, #256]
  454bf4:	cmp	x1, #0xff
  454bf8:	b.eq	454c6c <ferror@plt+0x523ec>  // b.none
  454bfc:	add	x0, x1, #0x1
  454c00:	str	x0, [x19, #256]
  454c04:	mov	w2, #0x29                  	// #41
  454c08:	strb	w2, [x19, x1]
  454c0c:	strb	w2, [x19, #264]
  454c10:	b	4549f8 <ferror@plt+0x52178>
  454c14:	ldr	x3, [x19, #328]
  454c18:	add	w1, w1, #0x1
  454c1c:	str	w1, [x20, #4]
  454c20:	add	w2, w2, #0x1
  454c24:	add	x0, sp, #0x40
  454c28:	str	w2, [x19, #308]
  454c2c:	str	x0, [x19, #328]
  454c30:	mov	w1, w22
  454c34:	mov	x2, x20
  454c38:	mov	x0, x19
  454c3c:	stp	x20, x3, [sp, #64]
  454c40:	bl	448dd0 <ferror@plt+0x46550>
  454c44:	ldr	w2, [x20, #4]
  454c48:	ldr	x0, [sp, #72]
  454c4c:	str	x0, [x19, #328]
  454c50:	ldr	w1, [x19, #308]
  454c54:	sub	w2, w2, #0x1
  454c58:	ldr	x0, [x19, #256]
  454c5c:	str	w2, [x20, #4]
  454c60:	sub	w1, w1, #0x1
  454c64:	str	w1, [x19, #308]
  454c68:	b	454a58 <ferror@plt+0x521d8>
  454c6c:	ldp	x3, x2, [x19, #272]
  454c70:	strb	wzr, [x19, #255]
  454c74:	mov	x0, x19
  454c78:	blr	x3
  454c7c:	ldr	x1, [x19, #320]
  454c80:	mov	w2, #0x29                  	// #41
  454c84:	mov	x0, #0x1                   	// #1
  454c88:	strb	w2, [x19]
  454c8c:	add	x1, x1, x0
  454c90:	str	x1, [x19, #320]
  454c94:	b	454a00 <ferror@plt+0x52180>
  454c98:	ldp	x4, x2, [x19, #272]
  454c9c:	strb	wzr, [x19, #255]
  454ca0:	mov	x1, x0
  454ca4:	mov	x0, x19
  454ca8:	str	x3, [sp, #56]
  454cac:	blr	x4
  454cb0:	ldr	x0, [x19, #320]
  454cb4:	mov	w2, #0x20                  	// #32
  454cb8:	ldr	x3, [sp, #56]
  454cbc:	mov	x1, #0x1                   	// #1
  454cc0:	add	x0, x0, x1
  454cc4:	strb	w2, [x19]
  454cc8:	str	x0, [x19, #320]
  454ccc:	add	x0, x1, #0x1
  454cd0:	b	454bcc <ferror@plt+0x5234c>
  454cd4:	nop
  454cd8:	stp	x29, x30, [sp, #-80]!
  454cdc:	mov	x29, sp
  454ce0:	stp	x19, x20, [sp, #16]
  454ce4:	mov	x19, x0
  454ce8:	mov	x20, x3
  454cec:	stp	x21, x22, [sp, #32]
  454cf0:	mov	w22, w1
  454cf4:	mov	x21, x2
  454cf8:	stp	x23, x24, [sp, #48]
  454cfc:	cbz	x3, 454d40 <ferror@plt+0x524c0>
  454d00:	mov	x2, #0xe000000             	// #234881024
  454d04:	mov	x4, #0x1                   	// #1
  454d08:	movk	x2, #0x862, lsl #32
  454d0c:	ldr	w0, [x3, #16]
  454d10:	cbnz	w0, 454d40 <ferror@plt+0x524c0>
  454d14:	ldr	x0, [x3, #8]
  454d18:	ldr	w0, [x0]
  454d1c:	cmp	w0, #0x2b
  454d20:	b.hi	454d38 <ferror@plt+0x524b8>  // b.pmore
  454d24:	lsl	x0, x4, x0
  454d28:	tst	x0, x2
  454d2c:	b.ne	454e18 <ferror@plt+0x52598>  // b.any
  454d30:	tst	x0, #0x1c00000000
  454d34:	b.ne	454ee4 <ferror@plt+0x52664>  // b.any
  454d38:	ldr	x3, [x3]
  454d3c:	cbnz	x3, 454d0c <ferror@plt+0x5248c>
  454d40:	ldr	x23, [x19, #296]
  454d44:	str	xzr, [x19, #296]
  454d48:	mov	w1, w22
  454d4c:	mov	x2, x20
  454d50:	mov	x0, x19
  454d54:	mov	w3, #0x0                   	// #0
  454d58:	bl	454040 <ferror@plt+0x517c0>
  454d5c:	ldr	x1, [x19, #256]
  454d60:	cmp	x1, #0xff
  454d64:	b.eq	454ea8 <ferror@plt+0x52628>  // b.none
  454d68:	add	x0, x1, #0x1
  454d6c:	str	x0, [x19, #256]
  454d70:	mov	w2, #0x28                  	// #40
  454d74:	strb	w2, [x19, x1]
  454d78:	strb	w2, [x19, #264]
  454d7c:	ldr	x21, [x21]
  454d80:	cbz	x21, 454da4 <ferror@plt+0x52524>
  454d84:	ldr	w1, [x21, #4]
  454d88:	cmp	w1, #0x1
  454d8c:	b.gt	454d9c <ferror@plt+0x5251c>
  454d90:	ldr	w2, [x19, #308]
  454d94:	cmp	w2, #0x400
  454d98:	b.le	454f28 <ferror@plt+0x526a8>
  454d9c:	mov	w1, #0x1                   	// #1
  454da0:	str	w1, [x19, #304]
  454da4:	cmp	x0, #0xff
  454da8:	b.eq	454dec <ferror@plt+0x5256c>  // b.none
  454dac:	add	x1, x0, #0x1
  454db0:	str	x1, [x19, #256]
  454db4:	mov	w3, #0x29                  	// #41
  454db8:	strb	w3, [x19, x0]
  454dbc:	mov	x2, x20
  454dc0:	strb	w3, [x19, #264]
  454dc4:	mov	w1, w22
  454dc8:	mov	x0, x19
  454dcc:	mov	w3, #0x1                   	// #1
  454dd0:	bl	454040 <ferror@plt+0x517c0>
  454dd4:	ldp	x21, x22, [sp, #32]
  454dd8:	str	x23, [x19, #296]
  454ddc:	ldp	x19, x20, [sp, #16]
  454de0:	ldp	x23, x24, [sp, #48]
  454de4:	ldp	x29, x30, [sp], #80
  454de8:	ret
  454dec:	ldp	x3, x2, [x19, #272]
  454df0:	strb	wzr, [x19, #255]
  454df4:	mov	x1, x0
  454df8:	mov	x0, x19
  454dfc:	blr	x3
  454e00:	ldr	x2, [x19, #320]
  454e04:	mov	x1, #0x1                   	// #1
  454e08:	mov	x0, #0x0                   	// #0
  454e0c:	add	x2, x2, x1
  454e10:	str	x2, [x19, #320]
  454e14:	b	454db0 <ferror@plt+0x52530>
  454e18:	ldrb	w0, [x19, #264]
  454e1c:	ldr	x1, [x19, #256]
  454e20:	cmp	w0, #0x20
  454e24:	b.eq	454e48 <ferror@plt+0x525c8>  // b.none
  454e28:	cmp	x1, #0xff
  454e2c:	b.eq	454f80 <ferror@plt+0x52700>  // b.none
  454e30:	add	x2, x1, #0x1
  454e34:	str	x2, [x19, #256]
  454e38:	mov	w0, #0x20                  	// #32
  454e3c:	strb	w0, [x19, x1]
  454e40:	mov	x1, x2
  454e44:	strb	w0, [x19, #264]
  454e48:	cmp	x1, #0xff
  454e4c:	b.eq	454f00 <ferror@plt+0x52680>  // b.none
  454e50:	add	x0, x1, #0x1
  454e54:	str	x0, [x19, #256]
  454e58:	mov	w24, #0x28                  	// #40
  454e5c:	strb	w24, [x19, x1]
  454e60:	mov	x0, x19
  454e64:	strb	w24, [x19, #264]
  454e68:	mov	x2, x20
  454e6c:	ldr	x23, [x19, #296]
  454e70:	str	xzr, [x19, #296]
  454e74:	mov	w1, w22
  454e78:	mov	w3, #0x0                   	// #0
  454e7c:	bl	454040 <ferror@plt+0x517c0>
  454e80:	ldr	x0, [x19, #256]
  454e84:	cmp	x0, #0xff
  454e88:	b.eq	454fac <ferror@plt+0x5272c>  // b.none
  454e8c:	add	x1, x0, #0x1
  454e90:	str	x1, [x19, #256]
  454e94:	mov	w2, #0x29                  	// #41
  454e98:	strb	w2, [x19, x0]
  454e9c:	strb	w2, [x19, #264]
  454ea0:	cmp	x1, #0xff
  454ea4:	b.ne	454d68 <ferror@plt+0x524e8>  // b.any
  454ea8:	ldp	x3, x2, [x19, #272]
  454eac:	strb	wzr, [x19, #255]
  454eb0:	mov	x0, x19
  454eb4:	blr	x3
  454eb8:	mov	w1, #0x28                  	// #40
  454ebc:	strb	w1, [x19]
  454ec0:	strb	w1, [x19, #264]
  454ec4:	mov	x0, #0x1                   	// #1
  454ec8:	ldr	x1, [x19, #320]
  454ecc:	ldr	x21, [x21]
  454ed0:	add	x1, x1, x0
  454ed4:	str	x0, [x19, #256]
  454ed8:	str	x1, [x19, #320]
  454edc:	cbnz	x21, 454d84 <ferror@plt+0x52504>
  454ee0:	b	454dac <ferror@plt+0x5252c>
  454ee4:	ldrb	w0, [x19, #264]
  454ee8:	ldr	x1, [x19, #256]
  454eec:	and	w2, w0, #0xfffffffd
  454ef0:	cmp	w2, #0x28
  454ef4:	b.ne	454e20 <ferror@plt+0x525a0>  // b.any
  454ef8:	cmp	x1, #0xff
  454efc:	b.ne	454e50 <ferror@plt+0x525d0>  // b.any
  454f00:	ldp	x3, x2, [x19, #272]
  454f04:	strb	wzr, [x19, #255]
  454f08:	mov	x0, x19
  454f0c:	blr	x3
  454f10:	ldr	x2, [x19, #320]
  454f14:	mov	x0, #0x1                   	// #1
  454f18:	mov	x1, #0x0                   	// #0
  454f1c:	add	x2, x2, x0
  454f20:	str	x2, [x19, #320]
  454f24:	b	454e54 <ferror@plt+0x525d4>
  454f28:	ldr	x3, [x19, #328]
  454f2c:	add	w1, w1, #0x1
  454f30:	str	w1, [x21, #4]
  454f34:	add	w2, w2, #0x1
  454f38:	add	x0, sp, #0x40
  454f3c:	str	w2, [x19, #308]
  454f40:	str	x0, [x19, #328]
  454f44:	mov	w1, w22
  454f48:	mov	x2, x21
  454f4c:	mov	x0, x19
  454f50:	stp	x21, x3, [sp, #64]
  454f54:	bl	448dd0 <ferror@plt+0x46550>
  454f58:	ldr	w2, [x21, #4]
  454f5c:	ldr	x0, [sp, #72]
  454f60:	str	x0, [x19, #328]
  454f64:	ldr	w1, [x19, #308]
  454f68:	sub	w2, w2, #0x1
  454f6c:	ldr	x0, [x19, #256]
  454f70:	str	w2, [x21, #4]
  454f74:	sub	w1, w1, #0x1
  454f78:	str	w1, [x19, #308]
  454f7c:	b	454da4 <ferror@plt+0x52524>
  454f80:	ldp	x3, x2, [x19, #272]
  454f84:	strb	wzr, [x19, #255]
  454f88:	mov	x0, x19
  454f8c:	blr	x3
  454f90:	ldr	x0, [x19, #320]
  454f94:	mov	w2, #0x20                  	// #32
  454f98:	mov	x1, #0x1                   	// #1
  454f9c:	strb	w2, [x19]
  454fa0:	add	x0, x0, x1
  454fa4:	str	x0, [x19, #320]
  454fa8:	b	454e50 <ferror@plt+0x525d0>
  454fac:	ldp	x3, x2, [x19, #272]
  454fb0:	strb	wzr, [x19, #255]
  454fb4:	mov	x1, x0
  454fb8:	mov	x0, x19
  454fbc:	blr	x3
  454fc0:	strb	w24, [x19, #264]
  454fc4:	mov	w0, #0x2829                	// #10281
  454fc8:	strh	w0, [x19]
  454fcc:	ldr	x1, [x19, #320]
  454fd0:	mov	x2, #0x2                   	// #2
  454fd4:	ldr	x21, [x21]
  454fd8:	add	x1, x1, #0x1
  454fdc:	str	x2, [x19, #256]
  454fe0:	mov	x0, x2
  454fe4:	str	x1, [x19, #320]
  454fe8:	cbnz	x21, 454d84 <ferror@plt+0x52504>
  454fec:	b	454dac <ferror@plt+0x5252c>
  454ff0:	cmp	x1, #0x0
  454ff4:	mov	x3, x0
  454ff8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  454ffc:	ccmp	x0, #0x0, #0x4, gt
  455000:	mov	w0, #0x0                   	// #0
  455004:	b.ne	45500c <ferror@plt+0x5278c>  // b.any
  455008:	ret
  45500c:	mov	w0, #0x1                   	// #1
  455010:	stp	xzr, x1, [x3]
  455014:	str	w2, [x3, #16]
  455018:	ret
  45501c:	nop
  455020:	cmp	w1, #0x0
  455024:	mov	x3, x0
  455028:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
  45502c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  455030:	mov	w0, #0x0                   	// #0
  455034:	b.eq	45504c <ferror@plt+0x527cc>  // b.none
  455038:	mov	x4, #0x33                  	// #51
  45503c:	mov	w0, #0x1                   	// #1
  455040:	str	x4, [x3]
  455044:	str	w1, [x3, #8]
  455048:	str	x2, [x3, #16]
  45504c:	ret
  455050:	cmp	x0, #0x0
  455054:	mov	x3, x0
  455058:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  45505c:	mov	w0, #0x0                   	// #0
  455060:	b.eq	455088 <ferror@plt+0x52808>  // b.none
  455064:	sub	w4, w1, #0x1
  455068:	mov	w0, #0x0                   	// #0
  45506c:	cmp	w4, #0x4
  455070:	b.hi	455088 <ferror@plt+0x52808>  // b.pmore
  455074:	mov	x4, #0x7                   	// #7
  455078:	mov	w0, #0x1                   	// #1
  45507c:	str	x4, [x3]
  455080:	str	w1, [x3, #8]
  455084:	str	x2, [x3, #16]
  455088:	ret
  45508c:	nop
  455090:	cmp	x0, #0x0
  455094:	mov	x3, x0
  455098:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  45509c:	mov	w0, #0x0                   	// #0
  4550a0:	b.eq	4550c8 <ferror@plt+0x52848>  // b.none
  4550a4:	sub	w4, w1, #0x1
  4550a8:	mov	w0, #0x0                   	// #0
  4550ac:	cmp	w4, #0x4
  4550b0:	b.hi	4550c8 <ferror@plt+0x52848>  // b.pmore
  4550b4:	mov	x4, #0x8                   	// #8
  4550b8:	mov	w0, #0x1                   	// #1
  4550bc:	str	x4, [x3]
  4550c0:	str	w1, [x3, #8]
  4550c4:	str	x2, [x3, #16]
  4550c8:	ret
  4550cc:	nop
  4550d0:	stp	x29, x30, [sp, #-80]!
  4550d4:	mov	w2, #0x56                  	// #86
  4550d8:	mov	w1, #0x4b                  	// #75
  4550dc:	mov	x29, sp
  4550e0:	ldr	x3, [x0, #24]
  4550e4:	stp	x19, x20, [sp, #16]
  4550e8:	mov	x19, x0
  4550ec:	ldrb	w0, [x3]
  4550f0:	cmp	w0, #0x72
  4550f4:	ccmp	w0, w2, #0x4, ne  // ne = any
  4550f8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4550fc:	b.eq	455144 <ferror@plt+0x528c4>  // b.none
  455100:	cmp	w0, #0x44
  455104:	b.eq	4551c8 <ferror@plt+0x52948>  // b.none
  455108:	sub	w2, w0, #0x30
  45510c:	cmp	w2, #0x4a
  455110:	b.hi	455130 <ferror@plt+0x528b0>  // b.pmore
  455114:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  455118:	add	x1, x1, #0x868
  45511c:	ldrh	w1, [x1, w2, uxtw #1]
  455120:	adr	x2, 45512c <ferror@plt+0x528ac>
  455124:	add	x1, x2, w1, sxth #2
  455128:	br	x1
  45512c:	ldp	x21, x22, [sp, #32]
  455130:	mov	x20, #0x0                   	// #0
  455134:	mov	x0, x20
  455138:	ldp	x19, x20, [sp, #16]
  45513c:	ldp	x29, x30, [sp], #80
  455140:	ret
  455144:	add	x1, sp, #0x48
  455148:	mov	x0, x19
  45514c:	mov	w2, #0x0                   	// #0
  455150:	stp	x21, x22, [sp, #32]
  455154:	bl	4577a8 <ferror@plt+0x54f28>
  455158:	mov	x21, x0
  45515c:	cbz	x0, 45512c <ferror@plt+0x528ac>
  455160:	ldr	x0, [x19, #24]
  455164:	ldrb	w0, [x0]
  455168:	cmp	w0, #0x46
  45516c:	mov	x0, x19
  455170:	b.eq	455294 <ferror@plt+0x52a14>  // b.none
  455174:	bl	4550d0 <ferror@plt+0x52850>
  455178:	str	x0, [x21]
  45517c:	cbz	x0, 45512c <ferror@plt+0x528ac>
  455180:	ldr	w1, [x0]
  455184:	ldr	x20, [sp, #72]
  455188:	sub	w1, w1, #0x1f
  45518c:	cmp	w1, #0x1
  455190:	b.ls	455278 <ferror@plt+0x529f8>  // b.plast
  455194:	cbz	x20, 45512c <ferror@plt+0x528ac>
  455198:	ldp	w0, w1, [x19, #56]
  45519c:	cmp	w0, w1
  4551a0:	b.ge	45512c <ferror@plt+0x528ac>  // b.tcont
  4551a4:	ldr	x2, [x19, #48]
  4551a8:	add	w1, w0, #0x1
  4551ac:	ldp	x21, x22, [sp, #32]
  4551b0:	str	x20, [x2, w0, sxtw #3]
  4551b4:	mov	x0, x20
  4551b8:	str	w1, [x19, #56]
  4551bc:	ldp	x19, x20, [sp, #16]
  4551c0:	ldp	x29, x30, [sp], #80
  4551c4:	ret
  4551c8:	ldrb	w0, [x3, #1]
  4551cc:	and	w1, w0, #0xffffffdf
  4551d0:	sub	w0, w0, #0x77
  4551d4:	cmp	w1, #0x4f
  4551d8:	and	w0, w0, #0xff
  4551dc:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  4551e0:	b.ls	455144 <ferror@plt+0x528c4>  // b.plast
  4551e4:	add	x0, x3, #0x1
  4551e8:	str	x0, [x19, #24]
  4551ec:	ldrb	w0, [x3, #1]
  4551f0:	cbz	w0, 455130 <ferror@plt+0x528b0>
  4551f4:	add	x0, x3, #0x2
  4551f8:	str	x0, [x19, #24]
  4551fc:	ldrb	w0, [x3, #1]
  455200:	cmp	w0, #0x68
  455204:	b.eq	455d04 <ferror@plt+0x53484>  // b.none
  455208:	b.hi	45571c <ferror@plt+0x52e9c>  // b.pmore
  45520c:	cmp	w0, #0x63
  455210:	b.eq	455cc4 <ferror@plt+0x53444>  // b.none
  455214:	b.ls	4556cc <ferror@plt+0x52e4c>  // b.plast
  455218:	cmp	w0, #0x65
  45521c:	b.eq	455c74 <ferror@plt+0x533f4>  // b.none
  455220:	cmp	w0, #0x66
  455224:	b.ne	45568c <ferror@plt+0x52e0c>  // b.any
  455228:	ldp	w0, w1, [x19, #40]
  45522c:	cmp	w0, w1
  455230:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  455234:	mov	w1, #0x18                  	// #24
  455238:	add	w5, w0, #0x1
  45523c:	ldr	x3, [x19, #32]
  455240:	smull	x0, w0, w1
  455244:	ldr	w2, [x19, #72]
  455248:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  45524c:	add	x1, x1, #0x900
  455250:	add	x20, x3, x0
  455254:	add	x1, x1, #0x4c8
  455258:	mov	w4, #0x27                  	// #39
  45525c:	str	wzr, [x20, #4]
  455260:	add	w2, w2, #0x9
  455264:	str	w5, [x19, #40]
  455268:	str	w4, [x3, x0]
  45526c:	str	x1, [x20, #8]
  455270:	str	w2, [x19, #72]
  455274:	b	455134 <ferror@plt+0x528b4>
  455278:	ldr	x1, [x0, #8]
  45527c:	str	x20, [x0, #8]
  455280:	ldr	x0, [x21]
  455284:	str	x0, [sp, #72]
  455288:	str	x1, [x21]
  45528c:	ldr	x20, [sp, #72]
  455290:	b	455194 <ferror@plt+0x52914>
  455294:	bl	4566d8 <ferror@plt+0x53e58>
  455298:	str	x0, [x21]
  45529c:	b	45517c <ferror@plt+0x528fc>
  4552a0:	ldp	w2, w4, [x19, #40]
  4552a4:	sub	w0, w0, #0x61
  4552a8:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4552ac:	add	x1, x1, #0x900
  4552b0:	sbfiz	x0, x0, #5, #32
  4552b4:	add	x1, x1, #0x188
  4552b8:	add	x0, x1, x0
  4552bc:	cmp	w2, w4
  4552c0:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  4552c4:	mov	w1, #0x18                  	// #24
  4552c8:	add	w6, w2, #0x1
  4552cc:	ldr	x4, [x19, #32]
  4552d0:	smull	x2, w2, w1
  4552d4:	ldr	w7, [x0, #8]
  4552d8:	mov	w5, #0x27                  	// #39
  4552dc:	add	x20, x4, x2
  4552e0:	ldr	w1, [x19, #72]
  4552e4:	add	x3, x3, #0x1
  4552e8:	add	w1, w1, w7
  4552ec:	str	wzr, [x20, #4]
  4552f0:	str	w6, [x19, #40]
  4552f4:	str	w5, [x4, x2]
  4552f8:	str	x0, [x20, #8]
  4552fc:	str	x3, [x19, #24]
  455300:	str	w1, [x19, #72]
  455304:	b	455134 <ferror@plt+0x528b4>
  455308:	add	x3, x3, #0x1
  45530c:	str	x3, [x19, #24]
  455310:	mov	x0, x19
  455314:	bl	448430 <ferror@plt+0x45bb0>
  455318:	str	x0, [sp, #72]
  45531c:	ldr	x1, [x19, #24]
  455320:	mov	x20, x0
  455324:	ldrb	w0, [x1]
  455328:	cmp	w0, #0x49
  45532c:	b.eq	455af4 <ferror@plt+0x53274>  // b.none
  455330:	mov	x0, x19
  455334:	bl	4550d0 <ferror@plt+0x52850>
  455338:	ldr	x3, [sp, #72]
  45533c:	mov	x2, x0
  455340:	mov	w1, #0x21                  	// #33
  455344:	mov	x0, x19
  455348:	bl	447fa8 <ferror@plt+0x45728>
  45534c:	mov	x20, x0
  455350:	str	x0, [sp, #72]
  455354:	nop
  455358:	cbz	x20, 455130 <ferror@plt+0x528b0>
  45535c:	ldp	w0, w1, [x19, #56]
  455360:	cmp	w0, w1
  455364:	b.ge	455130 <ferror@plt+0x528b0>  // b.tcont
  455368:	ldr	x2, [x19, #48]
  45536c:	add	w1, w0, #0x1
  455370:	str	x20, [x2, w0, sxtw #3]
  455374:	str	w1, [x19, #56]
  455378:	ldr	x20, [sp, #72]
  45537c:	mov	x0, x20
  455380:	ldp	x19, x20, [sp, #16]
  455384:	ldp	x29, x30, [sp], #80
  455388:	ret
  45538c:	mov	x0, x19
  455390:	stp	x21, x22, [sp, #32]
  455394:	bl	448ae8 <ferror@plt+0x46268>
  455398:	ldr	x21, [x19, #24]
  45539c:	str	x0, [sp, #72]
  4553a0:	mov	x20, x0
  4553a4:	ldrb	w0, [x21]
  4553a8:	cmp	w0, #0x49
  4553ac:	b.eq	455a54 <ferror@plt+0x531d4>  // b.none
  4553b0:	ldp	x21, x22, [sp, #32]
  4553b4:	b	455358 <ferror@plt+0x52ad8>
  4553b8:	ldrb	w0, [x3, #1]
  4553bc:	sub	w1, w0, #0x30
  4553c0:	cmp	w0, #0x5f
  4553c4:	and	w1, w1, #0xff
  4553c8:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  4553cc:	b.ls	4553e0 <ferror@plt+0x52b60>  // b.plast
  4553d0:	sub	w0, w0, #0x41
  4553d4:	and	w0, w0, #0xff
  4553d8:	cmp	w0, #0x19
  4553dc:	b.hi	455ad0 <ferror@plt+0x53250>  // b.pmore
  4553e0:	mov	w1, #0x0                   	// #0
  4553e4:	mov	x0, x19
  4553e8:	bl	4485f8 <ferror@plt+0x45d78>
  4553ec:	str	x0, [sp, #72]
  4553f0:	ldr	x1, [x19, #24]
  4553f4:	mov	x20, x0
  4553f8:	ldrb	w0, [x1]
  4553fc:	cmp	w0, #0x49
  455400:	b.ne	455134 <ferror@plt+0x528b4>  // b.any
  455404:	add	x1, x1, #0x1
  455408:	str	x1, [x19, #24]
  45540c:	mov	x0, x19
  455410:	bl	457aa0 <ferror@plt+0x55220>
  455414:	mov	x3, x0
  455418:	mov	x2, x20
  45541c:	mov	x0, x19
  455420:	mov	w1, #0x4                   	// #4
  455424:	bl	447fa8 <ferror@plt+0x45728>
  455428:	mov	x20, x0
  45542c:	str	x0, [sp, #72]
  455430:	b	455358 <ferror@plt+0x52ad8>
  455434:	add	x3, x3, #0x1
  455438:	str	x3, [x19, #24]
  45543c:	mov	x0, x19
  455440:	bl	4550d0 <ferror@plt+0x52850>
  455444:	mov	x2, x0
  455448:	mov	x3, #0x0                   	// #0
  45544c:	mov	x0, x19
  455450:	mov	w1, #0x23                  	// #35
  455454:	bl	447fa8 <ferror@plt+0x45728>
  455458:	mov	x20, x0
  45545c:	str	x0, [sp, #72]
  455460:	b	455358 <ferror@plt+0x52ad8>
  455464:	add	x3, x3, #0x1
  455468:	str	x3, [x19, #24]
  45546c:	mov	x0, x19
  455470:	bl	4550d0 <ferror@plt+0x52850>
  455474:	mov	x2, x0
  455478:	mov	x3, #0x0                   	// #0
  45547c:	mov	x0, x19
  455480:	mov	w1, #0x22                  	// #34
  455484:	bl	447fa8 <ferror@plt+0x45728>
  455488:	mov	x20, x0
  45548c:	str	x0, [sp, #72]
  455490:	b	455358 <ferror@plt+0x52ad8>
  455494:	add	x3, x3, #0x1
  455498:	str	x3, [x19, #24]
  45549c:	mov	x0, x19
  4554a0:	bl	4550d0 <ferror@plt+0x52850>
  4554a4:	mov	x2, x0
  4554a8:	mov	x3, #0x0                   	// #0
  4554ac:	mov	x0, x19
  4554b0:	mov	w1, #0x24                  	// #36
  4554b4:	bl	447fa8 <ferror@plt+0x45728>
  4554b8:	mov	x20, x0
  4554bc:	str	x0, [sp, #72]
  4554c0:	b	455358 <ferror@plt+0x52ad8>
  4554c4:	add	x3, x3, #0x1
  4554c8:	str	x3, [x19, #24]
  4554cc:	mov	x0, x19
  4554d0:	bl	4550d0 <ferror@plt+0x52850>
  4554d4:	mov	x2, x0
  4554d8:	mov	x3, #0x0                   	// #0
  4554dc:	mov	x0, x19
  4554e0:	mov	w1, #0x26                  	// #38
  4554e4:	bl	447fa8 <ferror@plt+0x45728>
  4554e8:	mov	x20, x0
  4554ec:	str	x0, [sp, #72]
  4554f0:	b	455358 <ferror@plt+0x52ad8>
  4554f4:	mov	x0, x19
  4554f8:	bl	4566d8 <ferror@plt+0x53e58>
  4554fc:	mov	x20, x0
  455500:	str	x0, [sp, #72]
  455504:	b	455358 <ferror@plt+0x52ad8>
  455508:	add	x3, x3, #0x1
  45550c:	str	x3, [x19, #24]
  455510:	mov	x0, x19
  455514:	bl	448430 <ferror@plt+0x45bb0>
  455518:	mov	x2, x0
  45551c:	mov	x3, #0x0                   	// #0
  455520:	mov	x0, x19
  455524:	mov	w1, #0x28                  	// #40
  455528:	bl	447fa8 <ferror@plt+0x45728>
  45552c:	mov	x20, x0
  455530:	str	x0, [sp, #72]
  455534:	b	455358 <ferror@plt+0x52ad8>
  455538:	add	x3, x3, #0x1
  45553c:	str	x3, [x19, #24]
  455540:	mov	x0, x19
  455544:	bl	4550d0 <ferror@plt+0x52850>
  455548:	mov	x2, x0
  45554c:	mov	x3, #0x0                   	// #0
  455550:	mov	x0, x19
  455554:	mov	w1, #0x25                  	// #37
  455558:	bl	447fa8 <ferror@plt+0x45728>
  45555c:	mov	x20, x0
  455560:	str	x0, [sp, #72]
  455564:	b	455358 <ferror@plt+0x52ad8>
  455568:	mov	x0, x19
  45556c:	bl	4586c0 <ferror@plt+0x55e40>
  455570:	mov	x20, x0
  455574:	str	x0, [sp, #72]
  455578:	b	455358 <ferror@plt+0x52ad8>
  45557c:	add	x4, x3, #0x1
  455580:	str	x4, [x19, #24]
  455584:	ldrb	w0, [x3, #1]
  455588:	cmp	w0, #0x5f
  45558c:	b.eq	455ac8 <ferror@plt+0x53248>  // b.none
  455590:	sub	w0, w0, #0x30
  455594:	and	w0, w0, #0xff
  455598:	cmp	w0, #0x9
  45559c:	b.hi	455b20 <ferror@plt+0x532a0>  // b.pmore
  4555a0:	mov	x1, x4
  4555a4:	nop
  4555a8:	mov	x3, x1
  4555ac:	add	x1, x1, #0x1
  4555b0:	str	x1, [x19, #24]
  4555b4:	ldrb	w0, [x1]
  4555b8:	sub	w0, w0, #0x30
  4555bc:	and	w0, w0, #0xff
  4555c0:	cmp	w0, #0x9
  4555c4:	b.ls	4555a8 <ferror@plt+0x52d28>  // b.plast
  4555c8:	ldp	w0, w5, [x19, #40]
  4555cc:	sub	x2, x1, x4
  4555d0:	cmp	w0, w5
  4555d4:	b.ge	455130 <ferror@plt+0x528b0>  // b.tcont
  4555d8:	mov	w7, #0x18                  	// #24
  4555dc:	add	w6, w0, #0x1
  4555e0:	ldr	x5, [x19, #32]
  4555e4:	smull	x0, w0, w7
  4555e8:	cmp	w2, #0x0
  4555ec:	add	x20, x5, x0
  4555f0:	str	wzr, [x20, #4]
  4555f4:	str	w6, [x19, #40]
  4555f8:	b.le	455130 <ferror@plt+0x528b0>
  4555fc:	str	xzr, [x5, x0]
  455600:	str	x4, [x20, #8]
  455604:	str	w2, [x20, #16]
  455608:	ldrb	w0, [x3, #1]
  45560c:	mov	x4, x1
  455610:	cmp	w0, #0x5f
  455614:	b.ne	455130 <ferror@plt+0x528b0>  // b.any
  455618:	add	x4, x4, #0x1
  45561c:	str	x4, [x19, #24]
  455620:	mov	x0, x19
  455624:	bl	4550d0 <ferror@plt+0x52850>
  455628:	mov	x3, x0
  45562c:	mov	x2, x20
  455630:	mov	x0, x19
  455634:	mov	w1, #0x2a                  	// #42
  455638:	bl	447fa8 <ferror@plt+0x45728>
  45563c:	mov	x20, x0
  455640:	str	x0, [sp, #72]
  455644:	b	455358 <ferror@plt+0x52ad8>
  455648:	add	x3, x3, #0x1
  45564c:	str	x3, [x19, #24]
  455650:	mov	x0, x19
  455654:	bl	4550d0 <ferror@plt+0x52850>
  455658:	mov	x20, x0
  45565c:	cbz	x0, 455130 <ferror@plt+0x528b0>
  455660:	mov	x0, x19
  455664:	bl	4550d0 <ferror@plt+0x52850>
  455668:	mov	x3, x0
  45566c:	cbz	x0, 455130 <ferror@plt+0x528b0>
  455670:	mov	x2, x20
  455674:	mov	x0, x19
  455678:	mov	w1, #0x2b                  	// #43
  45567c:	bl	447fa8 <ferror@plt+0x45728>
  455680:	mov	x20, x0
  455684:	str	x0, [sp, #72]
  455688:	b	455358 <ferror@plt+0x52ad8>
  45568c:	cmp	w0, #0x64
  455690:	b.ne	455130 <ferror@plt+0x528b0>  // b.any
  455694:	ldp	w0, w1, [x19, #40]
  455698:	cmp	w0, w1
  45569c:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  4556a0:	mov	w1, #0x18                  	// #24
  4556a4:	add	w5, w0, #0x1
  4556a8:	ldr	x3, [x19, #32]
  4556ac:	smull	x0, w0, w1
  4556b0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  4556b4:	add	x1, x1, #0x900
  4556b8:	ldr	w2, [x19, #72]
  4556bc:	add	x1, x1, #0x4e8
  4556c0:	add	x20, x3, x0
  4556c4:	mov	w4, #0x27                  	// #39
  4556c8:	b	45525c <ferror@plt+0x529dc>
  4556cc:	cmp	w0, #0x54
  4556d0:	b.eq	455848 <ferror@plt+0x52fc8>  // b.none
  4556d4:	cmp	w0, #0x61
  4556d8:	b.ne	4558dc <ferror@plt+0x5305c>  // b.any
  4556dc:	ldp	w0, w1, [x19, #40]
  4556e0:	cmp	w0, w1
  4556e4:	b.ge	455130 <ferror@plt+0x528b0>  // b.tcont
  4556e8:	mov	w3, #0x18                  	// #24
  4556ec:	add	w1, w0, #0x1
  4556f0:	ldr	x2, [x19, #32]
  4556f4:	smull	x0, w0, w3
  4556f8:	str	w1, [x19, #40]
  4556fc:	mov	w3, #0x4                   	// #4
  455700:	add	x20, x2, x0
  455704:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  455708:	add	x1, x1, #0x748
  45570c:	str	xzr, [x2, x0]
  455710:	str	x1, [x20, #8]
  455714:	str	w3, [x20, #16]
  455718:	b	455134 <ferror@plt+0x528b4>
  45571c:	cmp	w0, #0x73
  455720:	b.eq	455b9c <ferror@plt+0x5331c>  // b.none
  455724:	b.ls	4558a4 <ferror@plt+0x53024>  // b.plast
  455728:	cmp	w0, #0x75
  45572c:	b.eq	455c24 <ferror@plt+0x533a4>  // b.none
  455730:	cmp	w0, #0x76
  455734:	b.ne	455840 <ferror@plt+0x52fc0>  // b.any
  455738:	ldrb	w0, [x3, #2]
  45573c:	cmp	w0, #0x5f
  455740:	b.eq	455e38 <ferror@plt+0x535b8>  // b.none
  455744:	ldp	w0, w1, [x19, #40]
  455748:	cmp	w0, w1
  45574c:	b.ge	455130 <ferror@plt+0x528b0>  // b.tcont
  455750:	mov	w2, #0x18                  	// #24
  455754:	add	w4, w0, #0x1
  455758:	ldr	x1, [x19, #32]
  45575c:	smull	x0, w0, w2
  455760:	mov	w2, #0x42                  	// #66
  455764:	add	x20, x1, x0
  455768:	str	wzr, [x20, #4]
  45576c:	str	w4, [x19, #40]
  455770:	str	w2, [x1, x0]
  455774:	ldrb	w0, [x3, #2]
  455778:	cmp	w0, #0x6e
  45577c:	b.eq	455e6c <ferror@plt+0x535ec>  // b.none
  455780:	sub	w1, w0, #0x30
  455784:	and	w1, w1, #0xff
  455788:	cmp	w1, #0x9
  45578c:	b.hi	455e90 <ferror@plt+0x53610>  // b.pmore
  455790:	mov	w2, #0x0                   	// #0
  455794:	mov	w6, #0xcccd                	// #52429
  455798:	mov	w5, w0
  45579c:	mov	w7, #0x7fffffff            	// #2147483647
  4557a0:	mov	w0, #0x0                   	// #0
  4557a4:	movk	w6, #0xcccc, lsl #16
  4557a8:	ldr	x3, [x19, #24]
  4557ac:	b	4557c8 <ferror@plt+0x52f48>
  4557b0:	sub	w1, w7, w1
  4557b4:	mov	w5, w4
  4557b8:	umull	x1, w1, w6
  4557bc:	lsr	x1, x1, #35
  4557c0:	cmp	w1, w0
  4557c4:	b.lt	455e64 <ferror@plt+0x535e4>  // b.tstop
  4557c8:	add	x3, x3, #0x1
  4557cc:	str	x3, [x19, #24]
  4557d0:	add	w0, w0, w0, lsl #2
  4557d4:	ldrb	w4, [x3]
  4557d8:	add	w0, w5, w0, lsl #1
  4557dc:	sub	w0, w0, #0x30
  4557e0:	sub	w1, w4, #0x30
  4557e4:	and	w5, w1, #0xff
  4557e8:	cmp	w5, #0x9
  4557ec:	b.ls	4557b0 <ferror@plt+0x52f30>  // b.plast
  4557f0:	cbz	w2, 4557f8 <ferror@plt+0x52f78>
  4557f4:	neg	w0, w0
  4557f8:	sxtw	x0, w0
  4557fc:	str	x0, [x20, #8]
  455800:	ldr	x0, [x19, #24]
  455804:	ldrb	w1, [x0]
  455808:	cmp	w1, #0x5f
  45580c:	b.ne	455130 <ferror@plt+0x528b0>  // b.any
  455810:	add	x0, x0, #0x1
  455814:	str	x0, [x19, #24]
  455818:	mov	x0, x19
  45581c:	bl	4550d0 <ferror@plt+0x52850>
  455820:	mov	x3, x0
  455824:	mov	x2, x20
  455828:	mov	x0, x19
  45582c:	mov	w1, #0x2d                  	// #45
  455830:	bl	447fa8 <ferror@plt+0x45728>
  455834:	mov	x20, x0
  455838:	str	x0, [sp, #72]
  45583c:	b	455358 <ferror@plt+0x52ad8>
  455840:	cmp	w0, #0x74
  455844:	b.ne	455130 <ferror@plt+0x528b0>  // b.any
  455848:	ldr	w20, [x19, #76]
  45584c:	mov	w0, #0x1                   	// #1
  455850:	str	w0, [x19, #76]
  455854:	mov	x0, x19
  455858:	bl	457078 <ferror@plt+0x547f8>
  45585c:	str	w20, [x19, #76]
  455860:	mov	x2, x0
  455864:	mov	x3, #0x0                   	// #0
  455868:	mov	x0, x19
  45586c:	mov	w1, #0x43                  	// #67
  455870:	bl	447fa8 <ferror@plt+0x45728>
  455874:	str	x0, [sp, #72]
  455878:	mov	x20, x0
  45587c:	cbz	x0, 455130 <ferror@plt+0x528b0>
  455880:	ldr	x0, [x19, #24]
  455884:	ldrb	w1, [x0]
  455888:	cbz	w1, 455130 <ferror@plt+0x528b0>
  45588c:	add	x1, x0, #0x1
  455890:	str	x1, [x19, #24]
  455894:	ldrb	w0, [x0]
  455898:	cmp	w0, #0x45
  45589c:	b.ne	455130 <ferror@plt+0x528b0>  // b.any
  4558a0:	b	45535c <ferror@plt+0x52adc>
  4558a4:	cmp	w0, #0x6e
  4558a8:	b.eq	455bd4 <ferror@plt+0x53354>  // b.none
  4558ac:	cmp	w0, #0x70
  4558b0:	b.ne	4559fc <ferror@plt+0x5317c>  // b.any
  4558b4:	mov	x0, x19
  4558b8:	bl	4550d0 <ferror@plt+0x52850>
  4558bc:	mov	x3, #0x0                   	// #0
  4558c0:	mov	x2, x0
  4558c4:	mov	w1, #0x4b                  	// #75
  4558c8:	mov	x0, x19
  4558cc:	bl	447fa8 <ferror@plt+0x45728>
  4558d0:	mov	x20, x0
  4558d4:	str	x0, [sp, #72]
  4558d8:	b	455358 <ferror@plt+0x52ad8>
  4558dc:	cmp	w0, #0x46
  4558e0:	b.ne	455130 <ferror@plt+0x528b0>  // b.any
  4558e4:	ldp	w0, w1, [x19, #40]
  4558e8:	cmp	w0, w1
  4558ec:	b.ge	455ea0 <ferror@plt+0x53620>  // b.tcont
  4558f0:	mov	w2, #0x18                  	// #24
  4558f4:	add	w4, w0, #0x1
  4558f8:	ldr	x1, [x19, #32]
  4558fc:	smull	x0, w0, w2
  455900:	mov	w2, #0x2c                  	// #44
  455904:	add	x20, x1, x0
  455908:	str	wzr, [x20, #4]
  45590c:	str	w4, [x19, #40]
  455910:	str	x20, [sp, #72]
  455914:	str	w2, [x1, x0]
  455918:	ldrb	w0, [x3, #2]
  45591c:	sub	w0, w0, #0x30
  455920:	and	w0, w0, #0xff
  455924:	cmp	w0, #0x9
  455928:	cset	w1, ls  // ls = plast
  45592c:	strh	w1, [x20, #16]
  455930:	b.ls	455d9c <ferror@plt+0x5351c>  // b.plast
  455934:	mov	x0, x19
  455938:	bl	4550d0 <ferror@plt+0x52850>
  45593c:	str	x0, [x20, #8]
  455940:	ldr	x20, [sp, #72]
  455944:	ldr	x0, [x20, #8]
  455948:	cbz	x0, 455130 <ferror@plt+0x528b0>
  45594c:	ldr	x2, [x19, #24]
  455950:	ldrb	w1, [x2]
  455954:	cmp	w1, #0x6e
  455958:	b.ne	45596c <ferror@plt+0x530ec>  // b.any
  45595c:	add	x0, x2, #0x1
  455960:	str	x0, [x19, #24]
  455964:	ldrb	w1, [x2, #1]
  455968:	mov	x2, x0
  45596c:	sub	w0, w1, #0x30
  455970:	mov	w5, #0xcccd                	// #52429
  455974:	and	w0, w0, #0xff
  455978:	mov	w4, w1
  45597c:	cmp	w0, #0x9
  455980:	mov	w1, #0x0                   	// #0
  455984:	mov	w6, #0x7fffffff            	// #2147483647
  455988:	movk	w5, #0xcccc, lsl #16
  45598c:	b.ls	4559ac <ferror@plt+0x5312c>  // b.plast
  455990:	b	4559d4 <ferror@plt+0x53154>
  455994:	sub	w0, w6, w0
  455998:	mov	w4, w3
  45599c:	umull	x0, w0, w5
  4559a0:	lsr	x0, x0, #35
  4559a4:	cmp	w0, w1
  4559a8:	b.lt	4559d4 <ferror@plt+0x53154>  // b.tstop
  4559ac:	add	x2, x2, #0x1
  4559b0:	str	x2, [x19, #24]
  4559b4:	add	w1, w1, w1, lsl #2
  4559b8:	ldrb	w3, [x2]
  4559bc:	add	w1, w4, w1, lsl #1
  4559c0:	sub	w1, w1, #0x30
  4559c4:	sub	w0, w3, #0x30
  4559c8:	and	w4, w0, #0xff
  4559cc:	cmp	w4, #0x9
  4559d0:	b.ls	455994 <ferror@plt+0x53114>  // b.plast
  4559d4:	ldr	x1, [x19, #24]
  4559d8:	ldrb	w0, [x1]
  4559dc:	cbz	w0, 4559ec <ferror@plt+0x5316c>
  4559e0:	add	x0, x1, #0x1
  4559e4:	str	x0, [x19, #24]
  4559e8:	ldrb	w0, [x1]
  4559ec:	cmp	w0, #0x73
  4559f0:	cset	w0, eq  // eq = none
  4559f4:	strh	w0, [x20, #18]
  4559f8:	b	455134 <ferror@plt+0x528b4>
  4559fc:	cmp	w0, #0x69
  455a00:	b.ne	455130 <ferror@plt+0x528b0>  // b.any
  455a04:	ldp	w0, w1, [x19, #40]
  455a08:	cmp	w0, w1
  455a0c:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  455a10:	mov	w1, #0x18                  	// #24
  455a14:	add	w5, w0, #0x1
  455a18:	ldr	x3, [x19, #32]
  455a1c:	smull	x0, w0, w1
  455a20:	ldr	w2, [x19, #72]
  455a24:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  455a28:	add	x1, x1, #0x900
  455a2c:	add	x20, x3, x0
  455a30:	add	x1, x1, #0x588
  455a34:	mov	w4, #0x27                  	// #39
  455a38:	str	wzr, [x20, #4]
  455a3c:	add	w2, w2, #0x8
  455a40:	str	w5, [x19, #40]
  455a44:	str	w4, [x3, x0]
  455a48:	str	x1, [x20, #8]
  455a4c:	str	w2, [x19, #72]
  455a50:	b	455134 <ferror@plt+0x528b4>
  455a54:	ldr	w0, [x19, #80]
  455a58:	cbnz	w0, 455b4c <ferror@plt+0x532cc>
  455a5c:	cbz	x20, 45512c <ferror@plt+0x528ac>
  455a60:	ldp	w0, w1, [x19, #56]
  455a64:	cmp	w0, w1
  455a68:	b.ge	45512c <ferror@plt+0x528ac>  // b.tcont
  455a6c:	ldr	x2, [x19, #48]
  455a70:	add	w1, w0, #0x1
  455a74:	mov	x3, #0x0                   	// #0
  455a78:	str	x20, [x2, w0, sxtw #3]
  455a7c:	str	w1, [x19, #56]
  455a80:	ldrb	w0, [x21]
  455a84:	sub	w0, w0, #0x49
  455a88:	and	w0, w0, #0xff
  455a8c:	cmp	w0, #0x1
  455a90:	b.hi	455aa8 <ferror@plt+0x53228>  // b.pmore
  455a94:	add	x21, x21, #0x1
  455a98:	str	x21, [x19, #24]
  455a9c:	mov	x0, x19
  455aa0:	bl	457aa0 <ferror@plt+0x55220>
  455aa4:	mov	x3, x0
  455aa8:	mov	x2, x20
  455aac:	mov	x0, x19
  455ab0:	mov	w1, #0x4                   	// #4
  455ab4:	bl	447fa8 <ferror@plt+0x45728>
  455ab8:	mov	x20, x0
  455abc:	str	x0, [sp, #72]
  455ac0:	ldp	x21, x22, [sp, #32]
  455ac4:	b	455358 <ferror@plt+0x52ad8>
  455ac8:	mov	x20, #0x0                   	// #0
  455acc:	b	455618 <ferror@plt+0x52d98>
  455ad0:	mov	x0, x19
  455ad4:	bl	4586c0 <ferror@plt+0x55e40>
  455ad8:	str	x0, [sp, #72]
  455adc:	mov	x20, x0
  455ae0:	cbz	x0, 455130 <ferror@plt+0x528b0>
  455ae4:	ldr	w0, [x0]
  455ae8:	cmp	w0, #0x18
  455aec:	b.ne	45535c <ferror@plt+0x52adc>  // b.any
  455af0:	b	455134 <ferror@plt+0x528b4>
  455af4:	add	x1, x1, #0x1
  455af8:	str	x1, [x19, #24]
  455afc:	mov	x0, x19
  455b00:	bl	457aa0 <ferror@plt+0x55220>
  455b04:	mov	x3, x0
  455b08:	mov	x2, x20
  455b0c:	mov	x0, x19
  455b10:	mov	w1, #0x4                   	// #4
  455b14:	bl	447fa8 <ferror@plt+0x45728>
  455b18:	str	x0, [sp, #72]
  455b1c:	b	455330 <ferror@plt+0x52ab0>
  455b20:	ldr	w20, [x19, #76]
  455b24:	mov	w0, #0x1                   	// #1
  455b28:	str	w0, [x19, #76]
  455b2c:	mov	x0, x19
  455b30:	bl	457078 <ferror@plt+0x547f8>
  455b34:	str	w20, [x19, #76]
  455b38:	mov	x20, x0
  455b3c:	cbz	x0, 455130 <ferror@plt+0x528b0>
  455b40:	ldr	x1, [x19, #24]
  455b44:	ldrb	w0, [x1]
  455b48:	b	45560c <ferror@plt+0x52d8c>
  455b4c:	ldr	w22, [x19, #56]
  455b50:	add	x0, x21, #0x1
  455b54:	ldr	w20, [x19, #72]
  455b58:	str	x23, [sp, #48]
  455b5c:	str	x0, [x19, #24]
  455b60:	mov	x0, x19
  455b64:	ldr	w23, [x19, #40]
  455b68:	bl	457aa0 <ferror@plt+0x55220>
  455b6c:	ldr	x1, [x19, #24]
  455b70:	ldrb	w1, [x1]
  455b74:	cmp	w1, #0x49
  455b78:	b.eq	455d54 <ferror@plt+0x534d4>  // b.none
  455b7c:	str	x21, [x19, #24]
  455b80:	str	w23, [x19, #40]
  455b84:	str	w22, [x19, #56]
  455b88:	str	w20, [x19, #72]
  455b8c:	ldp	x21, x22, [sp, #32]
  455b90:	ldr	x23, [sp, #48]
  455b94:	ldr	x20, [sp, #72]
  455b98:	b	455358 <ferror@plt+0x52ad8>
  455b9c:	ldp	w0, w1, [x19, #40]
  455ba0:	cmp	w0, w1
  455ba4:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  455ba8:	mov	w1, #0x18                  	// #24
  455bac:	add	w5, w0, #0x1
  455bb0:	ldr	x3, [x19, #32]
  455bb4:	smull	x0, w0, w1
  455bb8:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  455bbc:	add	x1, x1, #0x900
  455bc0:	ldr	w2, [x19, #72]
  455bc4:	add	x1, x1, #0x568
  455bc8:	add	x20, x3, x0
  455bcc:	mov	w4, #0x27                  	// #39
  455bd0:	b	455a38 <ferror@plt+0x531b8>
  455bd4:	ldp	w0, w1, [x19, #40]
  455bd8:	cmp	w0, w1
  455bdc:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  455be0:	mov	w1, #0x18                  	// #24
  455be4:	add	w5, w0, #0x1
  455be8:	ldr	x3, [x19, #32]
  455bec:	smull	x0, w0, w1
  455bf0:	ldr	w2, [x19, #72]
  455bf4:	mov	w4, #0x27                  	// #39
  455bf8:	add	x20, x3, x0
  455bfc:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  455c00:	add	x1, x1, #0x900
  455c04:	add	w2, w2, #0x11
  455c08:	add	x1, x1, #0x5a8
  455c0c:	str	wzr, [x20, #4]
  455c10:	str	w5, [x19, #40]
  455c14:	str	w4, [x3, x0]
  455c18:	str	x1, [x20, #8]
  455c1c:	str	w2, [x19, #72]
  455c20:	b	455134 <ferror@plt+0x528b4>
  455c24:	ldp	w0, w1, [x19, #40]
  455c28:	cmp	w0, w1
  455c2c:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  455c30:	mov	w1, #0x18                  	// #24
  455c34:	add	w5, w0, #0x1
  455c38:	ldr	x3, [x19, #32]
  455c3c:	smull	x0, w0, w1
  455c40:	ldr	w2, [x19, #72]
  455c44:	mov	w4, #0x27                  	// #39
  455c48:	add	x20, x3, x0
  455c4c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  455c50:	add	x1, x1, #0x900
  455c54:	add	w2, w2, #0x7
  455c58:	add	x1, x1, #0x548
  455c5c:	str	wzr, [x20, #4]
  455c60:	str	w5, [x19, #40]
  455c64:	str	w4, [x3, x0]
  455c68:	str	x1, [x20, #8]
  455c6c:	str	w2, [x19, #72]
  455c70:	b	455134 <ferror@plt+0x528b4>
  455c74:	ldp	w0, w1, [x19, #40]
  455c78:	cmp	w0, w1
  455c7c:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  455c80:	mov	w1, #0x18                  	// #24
  455c84:	add	w5, w0, #0x1
  455c88:	ldr	x3, [x19, #32]
  455c8c:	smull	x0, w0, w1
  455c90:	ldr	w2, [x19, #72]
  455c94:	mov	w4, #0x27                  	// #39
  455c98:	add	x20, x3, x0
  455c9c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  455ca0:	add	x1, x1, #0x900
  455ca4:	add	w2, w2, #0xa
  455ca8:	add	x1, x1, #0x508
  455cac:	str	wzr, [x20, #4]
  455cb0:	str	w5, [x19, #40]
  455cb4:	str	w4, [x3, x0]
  455cb8:	str	x1, [x20, #8]
  455cbc:	str	w2, [x19, #72]
  455cc0:	b	455134 <ferror@plt+0x528b4>
  455cc4:	ldp	w0, w1, [x19, #40]
  455cc8:	cmp	w0, w1
  455ccc:	b.ge	455130 <ferror@plt+0x528b0>  // b.tcont
  455cd0:	mov	w3, #0x18                  	// #24
  455cd4:	add	w1, w0, #0x1
  455cd8:	ldr	x2, [x19, #32]
  455cdc:	smull	x0, w0, w3
  455ce0:	str	w1, [x19, #40]
  455ce4:	mov	w3, #0xe                   	// #14
  455ce8:	add	x20, x2, x0
  455cec:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  455cf0:	add	x1, x1, #0x750
  455cf4:	str	xzr, [x2, x0]
  455cf8:	str	x1, [x20, #8]
  455cfc:	str	w3, [x20, #16]
  455d00:	b	455134 <ferror@plt+0x528b4>
  455d04:	ldp	w0, w1, [x19, #40]
  455d08:	cmp	w0, w1
  455d0c:	b.ge	455eb4 <ferror@plt+0x53634>  // b.tcont
  455d10:	mov	w1, #0x18                  	// #24
  455d14:	add	w5, w0, #0x1
  455d18:	ldr	x3, [x19, #32]
  455d1c:	smull	x0, w0, w1
  455d20:	ldr	w2, [x19, #72]
  455d24:	mov	w4, #0x27                  	// #39
  455d28:	add	x20, x3, x0
  455d2c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  455d30:	add	x1, x1, #0x900
  455d34:	add	w2, w2, #0x4
  455d38:	add	x1, x1, #0x528
  455d3c:	str	wzr, [x20, #4]
  455d40:	str	w5, [x19, #40]
  455d44:	str	w4, [x3, x0]
  455d48:	str	x1, [x20, #8]
  455d4c:	str	w2, [x19, #72]
  455d50:	b	455134 <ferror@plt+0x528b4>
  455d54:	ldr	x2, [sp, #72]
  455d58:	cbz	x2, 455e2c <ferror@plt+0x535ac>
  455d5c:	ldp	w4, w1, [x19, #56]
  455d60:	cmp	w4, w1
  455d64:	b.ge	455e2c <ferror@plt+0x535ac>  // b.tcont
  455d68:	ldr	x6, [x19, #48]
  455d6c:	add	w5, w4, #0x1
  455d70:	mov	x3, x0
  455d74:	mov	w1, #0x4                   	// #4
  455d78:	mov	x0, x19
  455d7c:	str	x2, [x6, w4, sxtw #3]
  455d80:	str	w5, [x19, #56]
  455d84:	bl	447fa8 <ferror@plt+0x45728>
  455d88:	mov	x20, x0
  455d8c:	str	x0, [sp, #72]
  455d90:	ldp	x21, x22, [sp, #32]
  455d94:	ldr	x23, [sp, #48]
  455d98:	b	455358 <ferror@plt+0x52ad8>
  455d9c:	ldr	x0, [x19, #24]
  455da0:	ldrb	w1, [x0]
  455da4:	cmp	w1, #0x6e
  455da8:	b.ne	455db8 <ferror@plt+0x53538>  // b.any
  455dac:	add	x1, x0, #0x1
  455db0:	str	x1, [x19, #24]
  455db4:	ldrb	w1, [x0, #1]
  455db8:	sub	w0, w1, #0x30
  455dbc:	and	w0, w0, #0xff
  455dc0:	cmp	w0, #0x9
  455dc4:	b.hi	455934 <ferror@plt+0x530b4>  // b.pmore
  455dc8:	ldr	x2, [x19, #24]
  455dcc:	mov	w5, #0xcccd                	// #52429
  455dd0:	mov	w3, w1
  455dd4:	mov	w6, #0x7fffffff            	// #2147483647
  455dd8:	add	x2, x2, #0x1
  455ddc:	mov	w1, #0x0                   	// #0
  455de0:	movk	w5, #0xcccc, lsl #16
  455de4:	b	455e04 <ferror@plt+0x53584>
  455de8:	sub	w0, w6, w0
  455dec:	mov	w3, w4
  455df0:	add	x2, x2, #0x1
  455df4:	umull	x0, w0, w5
  455df8:	lsr	x0, x0, #35
  455dfc:	cmp	w0, w1
  455e00:	b.lt	455934 <ferror@plt+0x530b4>  // b.tstop
  455e04:	str	x2, [x19, #24]
  455e08:	add	w1, w1, w1, lsl #2
  455e0c:	ldrb	w4, [x2]
  455e10:	add	w1, w3, w1, lsl #1
  455e14:	sub	w1, w1, #0x30
  455e18:	sub	w0, w4, #0x30
  455e1c:	and	w3, w0, #0xff
  455e20:	cmp	w3, #0x9
  455e24:	b.ls	455de8 <ferror@plt+0x53568>  // b.plast
  455e28:	b	455934 <ferror@plt+0x530b4>
  455e2c:	ldp	x21, x22, [sp, #32]
  455e30:	ldr	x23, [sp, #48]
  455e34:	b	455130 <ferror@plt+0x528b0>
  455e38:	add	x3, x3, #0x3
  455e3c:	ldr	w20, [x19, #76]
  455e40:	mov	w1, #0x1                   	// #1
  455e44:	str	x3, [x19, #24]
  455e48:	str	w1, [x19, #76]
  455e4c:	mov	x0, x19
  455e50:	bl	457078 <ferror@plt+0x547f8>
  455e54:	str	w20, [x19, #76]
  455e58:	mov	x20, x0
  455e5c:	cbnz	x0, 455800 <ferror@plt+0x52f80>
  455e60:	b	455130 <ferror@plt+0x528b0>
  455e64:	mov	w0, #0xffffffff            	// #-1
  455e68:	b	4557f8 <ferror@plt+0x52f78>
  455e6c:	add	x0, x3, #0x3
  455e70:	str	x0, [x19, #24]
  455e74:	ldrb	w0, [x3, #3]
  455e78:	sub	w1, w0, #0x30
  455e7c:	and	w1, w1, #0xff
  455e80:	cmp	w1, #0x9
  455e84:	b.hi	455e98 <ferror@plt+0x53618>  // b.pmore
  455e88:	mov	w2, #0x1                   	// #1
  455e8c:	b	455794 <ferror@plt+0x52f14>
  455e90:	mov	w0, #0x0                   	// #0
  455e94:	b	4557f8 <ferror@plt+0x52f78>
  455e98:	mov	w0, #0x0                   	// #0
  455e9c:	b	4557f4 <ferror@plt+0x52f74>
  455ea0:	mov	x0, #0x0                   	// #0
  455ea4:	stp	x21, x22, [sp, #32]
  455ea8:	str	x23, [sp, #48]
  455eac:	str	wzr, [x0]
  455eb0:	brk	#0x3e8
  455eb4:	mov	x0, #0x0                   	// #0
  455eb8:	str	xzr, [sp, #72]
  455ebc:	stp	x21, x22, [sp, #32]
  455ec0:	str	x23, [sp, #48]
  455ec4:	ldr	x0, [x0, #8]
  455ec8:	brk	#0x3e8
  455ecc:	nop
  455ed0:	stp	x29, x30, [sp, #-80]!
  455ed4:	mov	x29, sp
  455ed8:	stp	x19, x20, [sp, #16]
  455edc:	mov	x19, x0
  455ee0:	mov	w0, #0x2e                  	// #46
  455ee4:	str	xzr, [sp, #72]
  455ee8:	ldr	x4, [x19, #24]
  455eec:	ldrb	w1, [x4]
  455ef0:	cmp	w1, #0x45
  455ef4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  455ef8:	ccmp	w1, w0, #0x4, ne  // ne = any
  455efc:	b.eq	455fd0 <ferror@plt+0x53750>  // b.none
  455f00:	mov	w20, #0x4f                  	// #79
  455f04:	stp	x21, x22, [sp, #32]
  455f08:	add	x22, sp, #0x48
  455f0c:	mov	w21, #0x18                  	// #24
  455f10:	str	x23, [sp, #48]
  455f14:	mov	w23, w0
  455f18:	b	455f54 <ferror@plt+0x536d4>
  455f1c:	ldp	x4, x3, [x19, #24]
  455f20:	smull	x1, w1, w21
  455f24:	add	x2, x3, x1
  455f28:	str	wzr, [x2, #4]
  455f2c:	str	w5, [x19, #40]
  455f30:	str	w23, [x3, x1]
  455f34:	stp	x0, xzr, [x2, #8]
  455f38:	str	x2, [x22]
  455f3c:	add	x22, x2, #0x10
  455f40:	ldrb	w1, [x4]
  455f44:	cmp	w1, #0x45
  455f48:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  455f4c:	ccmp	w1, w23, #0x4, ne  // ne = any
  455f50:	b.eq	455fa4 <ferror@plt+0x53724>  // b.none
  455f54:	cmp	w1, #0x52
  455f58:	mov	x0, x19
  455f5c:	ccmp	w1, w20, #0x4, ne  // ne = any
  455f60:	b.ne	455f70 <ferror@plt+0x536f0>  // b.any
  455f64:	ldrb	w1, [x4, #1]
  455f68:	cmp	w1, #0x45
  455f6c:	b.eq	455fa4 <ferror@plt+0x53724>  // b.none
  455f70:	bl	4550d0 <ferror@plt+0x52850>
  455f74:	cbz	x0, 455fc8 <ferror@plt+0x53748>
  455f78:	ldp	w1, w2, [x19, #40]
  455f7c:	add	w5, w1, #0x1
  455f80:	cmp	w1, w2
  455f84:	b.lt	455f1c <ferror@plt+0x5369c>  // b.tstop
  455f88:	ldr	x23, [sp, #48]
  455f8c:	str	xzr, [x22]
  455f90:	ldp	x21, x22, [sp, #32]
  455f94:	mov	x0, #0x0                   	// #0
  455f98:	ldp	x19, x20, [sp, #16]
  455f9c:	ldp	x29, x30, [sp], #80
  455fa0:	ret
  455fa4:	ldr	x0, [sp, #72]
  455fa8:	cbz	x0, 455fc8 <ferror@plt+0x53748>
  455fac:	ldr	x1, [x0, #16]
  455fb0:	cbz	x1, 455fe0 <ferror@plt+0x53760>
  455fb4:	ldp	x19, x20, [sp, #16]
  455fb8:	ldp	x21, x22, [sp, #32]
  455fbc:	ldr	x23, [sp, #48]
  455fc0:	ldp	x29, x30, [sp], #80
  455fc4:	ret
  455fc8:	ldp	x21, x22, [sp, #32]
  455fcc:	ldr	x23, [sp, #48]
  455fd0:	mov	x0, #0x0                   	// #0
  455fd4:	ldp	x19, x20, [sp, #16]
  455fd8:	ldp	x29, x30, [sp], #80
  455fdc:	ret
  455fe0:	ldr	x1, [x0, #8]
  455fe4:	ldr	w2, [x1]
  455fe8:	cmp	w2, #0x27
  455fec:	b.ne	455fb4 <ferror@plt+0x53734>  // b.any
  455ff0:	ldr	x1, [x1, #8]
  455ff4:	ldr	w2, [x1, #28]
  455ff8:	cmp	w2, #0x9
  455ffc:	b.ne	455fb4 <ferror@plt+0x53734>  // b.any
  456000:	ldr	w2, [x1, #8]
  456004:	ldr	w1, [x19, #72]
  456008:	ldp	x21, x22, [sp, #32]
  45600c:	sub	w1, w1, w2
  456010:	ldr	x23, [sp, #48]
  456014:	str	w1, [x19, #72]
  456018:	str	xzr, [x0, #8]
  45601c:	b	455f98 <ferror@plt+0x53718>
  456020:	stp	x29, x30, [sp, #-32]!
  456024:	mov	x29, sp
  456028:	ldr	x1, [x0, #24]
  45602c:	stp	x19, x20, [sp, #16]
  456030:	mov	x19, x0
  456034:	ldrb	w10, [x1]
  456038:	cbz	w10, 4560fc <ferror@plt+0x5387c>
  45603c:	add	x2, x1, #0x1
  456040:	str	x2, [x0, #24]
  456044:	ldrb	w10, [x1, #1]
  456048:	ldrb	w8, [x1]
  45604c:	cbnz	w10, 456104 <ferror@plt+0x53884>
  456050:	adrp	x5, 47a000 <_obstack_memory_used@@Base+0x1d6d8>
  456054:	add	x5, x5, #0x900
  456058:	add	x5, x5, #0x5c8
  45605c:	mov	w4, #0x43                  	// #67
  456060:	mov	w2, #0x0                   	// #0
  456064:	mov	w7, #0x18                  	// #24
  456068:	sub	w1, w4, w2
  45606c:	add	w1, w1, w1, lsr #31
  456070:	add	w1, w2, w1, asr #1
  456074:	smull	x3, w1, w7
  456078:	add	x9, x5, x3
  45607c:	ldr	x3, [x5, x3]
  456080:	ldrb	w6, [x3]
  456084:	cmp	w6, w8
  456088:	b.eq	4560ac <ferror@plt+0x5382c>  // b.none
  45608c:	b.ls	4560f4 <ferror@plt+0x53874>  // b.plast
  456090:	mov	w4, w1
  456094:	cmp	w2, w4
  456098:	b.ne	456068 <ferror@plt+0x537e8>  // b.any
  45609c:	mov	x0, #0x0                   	// #0
  4560a0:	ldp	x19, x20, [sp, #16]
  4560a4:	ldp	x29, x30, [sp], #32
  4560a8:	ret
  4560ac:	ldrb	w3, [x3, #1]
  4560b0:	cmp	w3, w10
  4560b4:	b.ne	45608c <ferror@plt+0x5380c>  // b.any
  4560b8:	ldp	w0, w1, [x19, #40]
  4560bc:	cmp	w0, w1
  4560c0:	b.ge	45609c <ferror@plt+0x5381c>  // b.tcont
  4560c4:	ldr	x2, [x19, #32]
  4560c8:	smull	x7, w0, w7
  4560cc:	add	w1, w0, #0x1
  4560d0:	mov	w3, #0x32                  	// #50
  4560d4:	add	x0, x2, x7
  4560d8:	str	wzr, [x0, #4]
  4560dc:	str	w1, [x19, #40]
  4560e0:	str	w3, [x2, x7]
  4560e4:	str	x9, [x0, #8]
  4560e8:	ldp	x19, x20, [sp, #16]
  4560ec:	ldp	x29, x30, [sp], #32
  4560f0:	ret
  4560f4:	add	w2, w1, #0x1
  4560f8:	b	456094 <ferror@plt+0x53814>
  4560fc:	mov	w8, #0x0                   	// #0
  456100:	b	456050 <ferror@plt+0x537d0>
  456104:	add	x2, x1, #0x2
  456108:	str	x2, [x0, #24]
  45610c:	cmp	w8, #0x76
  456110:	ldrb	w10, [x1, #1]
  456114:	b.ne	456170 <ferror@plt+0x538f0>  // b.any
  456118:	sub	w11, w10, #0x30
  45611c:	and	w1, w11, #0xff
  456120:	cmp	w1, #0x9
  456124:	b.hi	456050 <ferror@plt+0x537d0>  // b.pmore
  456128:	bl	448430 <ferror@plt+0x45bb0>
  45612c:	mov	x2, x0
  456130:	ldp	w1, w0, [x19, #40]
  456134:	cmp	w1, w0
  456138:	b.ge	45609c <ferror@plt+0x5381c>  // b.tcont
  45613c:	mov	w0, #0x18                  	// #24
  456140:	add	w4, w1, #0x1
  456144:	ldr	x3, [x19, #32]
  456148:	smull	x1, w1, w0
  45614c:	add	x0, x3, x1
  456150:	str	wzr, [x0, #4]
  456154:	str	w4, [x19, #40]
  456158:	cbz	x2, 45609c <ferror@plt+0x5381c>
  45615c:	mov	x4, #0x33                  	// #51
  456160:	str	x4, [x3, x1]
  456164:	str	w11, [x0, #8]
  456168:	str	x2, [x0, #16]
  45616c:	b	4560a0 <ferror@plt+0x53820>
  456170:	cmp	w8, #0x63
  456174:	mov	w1, #0x76                  	// #118
  456178:	ccmp	w10, w1, #0x0, eq  // eq = none
  45617c:	b.ne	456050 <ferror@plt+0x537d0>  // b.any
  456180:	ldp	w1, w20, [x0, #76]
  456184:	cmp	w1, #0x0
  456188:	cset	w1, eq  // eq = none
  45618c:	str	w1, [x0, #80]
  456190:	bl	4550d0 <ferror@plt+0x52850>
  456194:	mov	x2, x0
  456198:	ldr	w1, [x19, #80]
  45619c:	mov	x3, #0x0                   	// #0
  4561a0:	cbz	w1, 4561c0 <ferror@plt+0x53940>
  4561a4:	mov	x0, x19
  4561a8:	mov	w1, #0x35                  	// #53
  4561ac:	bl	447fa8 <ferror@plt+0x45728>
  4561b0:	str	w20, [x19, #80]
  4561b4:	ldp	x19, x20, [sp, #16]
  4561b8:	ldp	x29, x30, [sp], #32
  4561bc:	ret
  4561c0:	mov	x0, x19
  4561c4:	mov	w1, #0x34                  	// #52
  4561c8:	bl	447fa8 <ferror@plt+0x45728>
  4561cc:	str	w20, [x19, #80]
  4561d0:	b	4561b4 <ferror@plt+0x53934>
  4561d4:	nop
  4561d8:	stp	x29, x30, [sp, #-32]!
  4561dc:	mov	x29, sp
  4561e0:	ldr	x1, [x0, #24]
  4561e4:	stp	x19, x20, [sp, #16]
  4561e8:	mov	x19, x0
  4561ec:	ldrb	w3, [x1]
  4561f0:	sub	w2, w3, #0x30
  4561f4:	and	w2, w2, #0xff
  4561f8:	cmp	w2, #0x9
  4561fc:	b.ls	456308 <ferror@plt+0x53a88>  // b.plast
  456200:	sub	w2, w3, #0x61
  456204:	and	w2, w2, #0xff
  456208:	cmp	w2, #0x19
  45620c:	b.hi	456254 <ferror@plt+0x539d4>  // b.pmore
  456210:	cmp	w3, #0x6f
  456214:	b.eq	456450 <ferror@plt+0x53bd0>  // b.none
  456218:	mov	x0, x19
  45621c:	bl	456020 <ferror@plt+0x537a0>
  456220:	mov	x13, x0
  456224:	cbz	x0, 456234 <ferror@plt+0x539b4>
  456228:	ldr	w0, [x0]
  45622c:	cmp	w0, #0x32
  456230:	b.eq	4563b4 <ferror@plt+0x53b34>  // b.none
  456234:	ldr	x1, [x19, #24]
  456238:	ldrb	w2, [x1]
  45623c:	cmp	w2, #0x42
  456240:	b.eq	456320 <ferror@plt+0x53aa0>  // b.none
  456244:	mov	x0, x13
  456248:	ldp	x19, x20, [sp, #16]
  45624c:	ldp	x29, x30, [sp], #32
  456250:	ret
  456254:	sub	w2, w3, #0x43
  456258:	and	w2, w2, #0xff
  45625c:	cmp	w2, #0x1
  456260:	b.ls	456468 <ferror@plt+0x53be8>  // b.plast
  456264:	cmp	w3, #0x4c
  456268:	b.eq	45641c <ferror@plt+0x53b9c>  // b.none
  45626c:	cmp	w3, #0x55
  456270:	b.ne	45643c <ferror@plt+0x53bbc>  // b.any
  456274:	ldrb	w2, [x1, #1]
  456278:	cmp	w2, #0x6c
  45627c:	b.eq	456598 <ferror@plt+0x53d18>  // b.none
  456280:	cmp	w2, #0x74
  456284:	b.ne	45643c <ferror@plt+0x53bbc>  // b.any
  456288:	add	x3, x1, #0x1
  45628c:	str	x3, [x0, #24]
  456290:	ldrb	w2, [x1, #1]
  456294:	cmp	w2, #0x74
  456298:	b.ne	45658c <ferror@plt+0x53d0c>  // b.any
  45629c:	add	x1, x1, #0x2
  4562a0:	str	x1, [x0, #24]
  4562a4:	bl	448910 <ferror@plt+0x46090>
  4562a8:	tbnz	w0, #31, 456674 <ferror@plt+0x53df4>
  4562ac:	ldp	w1, w2, [x19, #40]
  4562b0:	cmp	w1, w2
  4562b4:	b.ge	456674 <ferror@plt+0x53df4>  // b.tcont
  4562b8:	mov	w2, #0x18                  	// #24
  4562bc:	add	w7, w1, #0x1
  4562c0:	ldp	w3, w6, [x19, #56]
  4562c4:	smull	x2, w1, w2
  4562c8:	ldp	x1, x4, [x19, #24]
  4562cc:	mov	w5, #0x48                  	// #72
  4562d0:	sxtw	x0, w0
  4562d4:	cmp	w3, w6
  4562d8:	add	x13, x4, x2
  4562dc:	str	wzr, [x13, #4]
  4562e0:	str	w7, [x19, #40]
  4562e4:	str	w5, [x4, x2]
  4562e8:	str	x0, [x13, #8]
  4562ec:	b.ge	456630 <ferror@plt+0x53db0>  // b.tcont
  4562f0:	ldr	x2, [x19, #48]
  4562f4:	add	w0, w3, #0x1
  4562f8:	str	x13, [x2, w3, sxtw #3]
  4562fc:	str	w0, [x19, #56]
  456300:	ldrb	w2, [x1]
  456304:	b	45623c <ferror@plt+0x539bc>
  456308:	bl	448430 <ferror@plt+0x45bb0>
  45630c:	mov	x13, x0
  456310:	ldr	x1, [x19, #24]
  456314:	ldrb	w2, [x1]
  456318:	cmp	w2, #0x42
  45631c:	b.ne	456244 <ferror@plt+0x539c4>  // b.any
  456320:	mov	w11, #0x18                  	// #24
  456324:	mov	w10, #0x4c                  	// #76
  456328:	ldr	x12, [x19, #64]
  45632c:	b	456370 <ferror@plt+0x53af0>
  456330:	ldp	w1, w3, [x19, #40]
  456334:	add	w2, w1, #0x1
  456338:	cmp	w1, w3
  45633c:	b.ge	45638c <ferror@plt+0x53b0c>  // b.tcont
  456340:	ldr	x4, [x19, #32]
  456344:	smull	x1, w1, w11
  456348:	add	x3, x4, x1
  45634c:	str	wzr, [x3, #4]
  456350:	str	w2, [x19, #40]
  456354:	str	w10, [x4, x1]
  456358:	ldr	x1, [x19, #24]
  45635c:	stp	x13, x0, [x3, #8]
  456360:	mov	x13, x3
  456364:	ldrb	w3, [x1]
  456368:	cmp	w3, #0x42
  45636c:	b.ne	4563a0 <ferror@plt+0x53b20>  // b.any
  456370:	add	x1, x1, #0x1
  456374:	str	x1, [x19, #24]
  456378:	mov	x0, x19
  45637c:	bl	448430 <ferror@plt+0x45bb0>
  456380:	cmp	x13, #0x0
  456384:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  456388:	b.ne	456330 <ferror@plt+0x53ab0>  // b.any
  45638c:	ldr	x1, [x19, #24]
  456390:	mov	x13, #0x0                   	// #0
  456394:	ldrb	w3, [x1]
  456398:	cmp	w3, #0x42
  45639c:	b.eq	456370 <ferror@plt+0x53af0>  // b.none
  4563a0:	str	x12, [x19, #64]
  4563a4:	mov	x0, x13
  4563a8:	ldp	x19, x20, [sp, #16]
  4563ac:	ldp	x29, x30, [sp], #32
  4563b0:	ret
  4563b4:	ldr	x1, [x13, #8]
  4563b8:	ldr	w0, [x19, #72]
  4563bc:	ldr	x2, [x1]
  4563c0:	add	w0, w0, #0x7
  4563c4:	ldr	w1, [x1, #16]
  4563c8:	add	w0, w0, w1
  4563cc:	str	w0, [x19, #72]
  4563d0:	ldrb	w0, [x2]
  4563d4:	cmp	w0, #0x6c
  4563d8:	b.ne	456234 <ferror@plt+0x539b4>  // b.any
  4563dc:	ldrb	w0, [x2, #1]
  4563e0:	cmp	w0, #0x69
  4563e4:	b.ne	456234 <ferror@plt+0x539b4>  // b.any
  4563e8:	ldrb	w0, [x2, #2]
  4563ec:	cbnz	w0, 456234 <ferror@plt+0x539b4>
  4563f0:	mov	x0, x19
  4563f4:	bl	448430 <ferror@plt+0x45bb0>
  4563f8:	mov	w1, #0x37                  	// #55
  4563fc:	mov	x2, x13
  456400:	mov	x3, x0
  456404:	mov	x0, x19
  456408:	bl	447fa8 <ferror@plt+0x45728>
  45640c:	mov	x13, x0
  456410:	ldr	x1, [x19, #24]
  456414:	ldrb	w2, [x1]
  456418:	b	45623c <ferror@plt+0x539bc>
  45641c:	add	x1, x1, #0x1
  456420:	str	x1, [x0, #24]
  456424:	bl	448430 <ferror@plt+0x45bb0>
  456428:	mov	x13, x0
  45642c:	cbz	x0, 45643c <ferror@plt+0x53bbc>
  456430:	mov	x0, x19
  456434:	bl	4489c0 <ferror@plt+0x46140>
  456438:	cbnz	w0, 456234 <ferror@plt+0x539b4>
  45643c:	mov	x13, #0x0                   	// #0
  456440:	mov	x0, x13
  456444:	ldp	x19, x20, [sp, #16]
  456448:	ldp	x29, x30, [sp], #32
  45644c:	ret
  456450:	ldrb	w0, [x1, #1]
  456454:	cmp	w0, #0x6e
  456458:	b.ne	456218 <ferror@plt+0x53998>  // b.any
  45645c:	add	x1, x1, #0x2
  456460:	str	x1, [x19, #24]
  456464:	b	456218 <ferror@plt+0x53998>
  456468:	ldr	x0, [x0, #64]
  45646c:	cbz	x0, 456518 <ferror@plt+0x53c98>
  456470:	ldr	w2, [x0]
  456474:	cbnz	w2, 456510 <ferror@plt+0x53c90>
  456478:	ldr	w3, [x0, #16]
  45647c:	ldr	w2, [x19, #72]
  456480:	add	w2, w2, w3
  456484:	str	w2, [x19, #72]
  456488:	ldrb	w2, [x1]
  45648c:	cmp	w2, #0x43
  456490:	b.eq	456520 <ferror@plt+0x53ca0>  // b.none
  456494:	cmp	w2, #0x44
  456498:	b.ne	456590 <ferror@plt+0x53d10>  // b.any
  45649c:	ldrb	w2, [x1, #1]
  4564a0:	cmp	w2, #0x32
  4564a4:	b.eq	4566bc <ferror@plt+0x53e3c>  // b.none
  4564a8:	b.hi	45663c <ferror@plt+0x53dbc>  // b.pmore
  4564ac:	cmp	w2, #0x30
  4564b0:	b.eq	456664 <ferror@plt+0x53de4>  // b.none
  4564b4:	cmp	w2, #0x31
  4564b8:	mov	w3, #0x2                   	// #2
  4564bc:	b.ne	45643c <ferror@plt+0x53bbc>  // b.any
  4564c0:	ldp	w2, w5, [x19, #40]
  4564c4:	add	x4, x1, #0x2
  4564c8:	str	x4, [x19, #24]
  4564cc:	cmp	w2, w5
  4564d0:	b.ge	456654 <ferror@plt+0x53dd4>  // b.tcont
  4564d4:	mov	w7, #0x18                  	// #24
  4564d8:	add	w6, w2, #0x1
  4564dc:	ldr	x5, [x19, #32]
  4564e0:	smull	x2, w2, w7
  4564e4:	add	x13, x5, x2
  4564e8:	str	wzr, [x13, #4]
  4564ec:	str	w6, [x19, #40]
  4564f0:	cbz	x0, 456654 <ferror@plt+0x53dd4>
  4564f4:	mov	x6, #0x8                   	// #8
  4564f8:	str	x6, [x5, x2]
  4564fc:	str	w3, [x13, #8]
  456500:	str	x0, [x13, #16]
  456504:	ldrb	w2, [x1, #2]
  456508:	mov	x1, x4
  45650c:	b	45623c <ferror@plt+0x539bc>
  456510:	cmp	w2, #0x18
  456514:	b.eq	456478 <ferror@plt+0x53bf8>  // b.none
  456518:	cmp	w3, #0x43
  45651c:	b.ne	45649c <ferror@plt+0x53c1c>  // b.any
  456520:	ldrb	w2, [x1, #1]
  456524:	cmp	w2, #0x49
  456528:	b.eq	456684 <ferror@plt+0x53e04>  // b.none
  45652c:	sub	w3, w2, #0x31
  456530:	and	w3, w3, #0xff
  456534:	cmp	w3, #0x4
  456538:	b.hi	45643c <ferror@plt+0x53bbc>  // b.pmore
  45653c:	sub	w20, w2, #0x30
  456540:	add	x1, x1, #0x2
  456544:	str	x1, [x19, #24]
  456548:	ldp	w1, w2, [x19, #40]
  45654c:	cmp	w1, w2
  456550:	b.ge	456674 <ferror@plt+0x53df4>  // b.tcont
  456554:	mov	w2, #0x18                  	// #24
  456558:	add	w4, w1, #0x1
  45655c:	smull	x2, w1, w2
  456560:	ldp	x1, x3, [x19, #24]
  456564:	add	x13, x3, x2
  456568:	str	wzr, [x13, #4]
  45656c:	str	w4, [x19, #40]
  456570:	cbz	x0, 456630 <ferror@plt+0x53db0>
  456574:	mov	x4, #0x7                   	// #7
  456578:	str	x4, [x3, x2]
  45657c:	str	w20, [x13, #8]
  456580:	str	x0, [x13, #16]
  456584:	ldrb	w2, [x1]
  456588:	b	45623c <ferror@plt+0x539bc>
  45658c:	mov	x1, x3
  456590:	mov	x13, #0x0                   	// #0
  456594:	b	45623c <ferror@plt+0x539bc>
  456598:	add	x3, x1, #0x1
  45659c:	str	x3, [x0, #24]
  4565a0:	ldrb	w2, [x1, #1]
  4565a4:	cmp	w2, #0x6c
  4565a8:	b.ne	45658c <ferror@plt+0x53d0c>  // b.any
  4565ac:	add	x1, x1, #0x2
  4565b0:	str	x1, [x0, #24]
  4565b4:	bl	455ed0 <ferror@plt+0x53650>
  4565b8:	mov	x10, x0
  4565bc:	ldr	x1, [x19, #24]
  4565c0:	mov	x13, #0x0                   	// #0
  4565c4:	ldrb	w2, [x1]
  4565c8:	cbz	x0, 45623c <ferror@plt+0x539bc>
  4565cc:	cmp	w2, #0x45
  4565d0:	b.ne	45623c <ferror@plt+0x539bc>  // b.any
  4565d4:	add	x1, x1, #0x1
  4565d8:	str	x1, [x19, #24]
  4565dc:	mov	x0, x19
  4565e0:	bl	448910 <ferror@plt+0x46090>
  4565e4:	tbnz	w0, #31, 456674 <ferror@plt+0x53df4>
  4565e8:	ldp	w2, w3, [x19, #40]
  4565ec:	ldr	x1, [x19, #24]
  4565f0:	cmp	w2, w3
  4565f4:	b.ge	456630 <ferror@plt+0x53db0>  // b.tcont
  4565f8:	mov	w3, #0x18                  	// #24
  4565fc:	add	w6, w2, #0x1
  456600:	ldr	x4, [x19, #32]
  456604:	smull	x2, w2, w3
  456608:	ldp	w3, w7, [x19, #56]
  45660c:	add	x13, x4, x2
  456610:	mov	w5, #0x46                  	// #70
  456614:	cmp	w3, w7
  456618:	str	wzr, [x13, #4]
  45661c:	str	w6, [x19, #40]
  456620:	str	w5, [x4, x2]
  456624:	str	x10, [x13, #8]
  456628:	str	w0, [x13, #16]
  45662c:	b.lt	4562f0 <ferror@plt+0x53a70>  // b.tstop
  456630:	ldrb	w2, [x1]
  456634:	mov	x13, #0x0                   	// #0
  456638:	b	45623c <ferror@plt+0x539bc>
  45663c:	cmp	w2, #0x34
  456640:	b.eq	45666c <ferror@plt+0x53dec>  // b.none
  456644:	cmp	w2, #0x35
  456648:	b.ne	45643c <ferror@plt+0x53bbc>  // b.any
  45664c:	mov	w3, #0x5                   	// #5
  456650:	b	4564c0 <ferror@plt+0x53c40>
  456654:	ldrb	w2, [x1, #2]
  456658:	mov	x13, #0x0                   	// #0
  45665c:	mov	x1, x4
  456660:	b	45623c <ferror@plt+0x539bc>
  456664:	mov	w3, #0x1                   	// #1
  456668:	b	4564c0 <ferror@plt+0x53c40>
  45666c:	mov	w3, #0x4                   	// #4
  456670:	b	4564c0 <ferror@plt+0x53c40>
  456674:	ldr	x1, [x19, #24]
  456678:	mov	x13, #0x0                   	// #0
  45667c:	ldrb	w2, [x1]
  456680:	b	45623c <ferror@plt+0x539bc>
  456684:	add	x3, x1, #0x1
  456688:	str	x3, [x19, #24]
  45668c:	ldrb	w2, [x1, #2]
  456690:	sub	w0, w2, #0x31
  456694:	and	w0, w0, #0xff
  456698:	cmp	w0, #0x4
  45669c:	b.hi	4566c4 <ferror@plt+0x53e44>  // b.pmore
  4566a0:	add	x1, x1, #0x3
  4566a4:	str	x1, [x19, #24]
  4566a8:	sub	w20, w2, #0x30
  4566ac:	mov	x0, x19
  4566b0:	bl	4550d0 <ferror@plt+0x52850>
  4566b4:	ldr	x0, [x19, #64]
  4566b8:	b	456548 <ferror@plt+0x53cc8>
  4566bc:	mov	w3, #0x3                   	// #3
  4566c0:	b	4564c0 <ferror@plt+0x53c40>
  4566c4:	ldrb	w2, [x1, #1]
  4566c8:	mov	x13, #0x0                   	// #0
  4566cc:	mov	x1, x3
  4566d0:	b	45623c <ferror@plt+0x539bc>
  4566d4:	nop
  4566d8:	stp	x29, x30, [sp, #-32]!
  4566dc:	mov	x29, sp
  4566e0:	stp	x19, x20, [sp, #16]
  4566e4:	mov	x19, x0
  4566e8:	ldr	w0, [x0, #16]
  4566ec:	tbnz	w0, #18, 456728 <ferror@plt+0x53ea8>
  4566f0:	ldr	w2, [x19, #84]
  4566f4:	cmp	w2, #0x800
  4566f8:	b.hi	456738 <ferror@plt+0x53eb8>  // b.pmore
  4566fc:	ldr	x1, [x19, #24]
  456700:	add	w0, w2, #0x1
  456704:	str	w0, [x19, #84]
  456708:	mov	x0, #0x0                   	// #0
  45670c:	ldrb	w3, [x1]
  456710:	cmp	w3, #0x46
  456714:	b.eq	456748 <ferror@plt+0x53ec8>  // b.none
  456718:	str	w2, [x19, #84]
  45671c:	ldp	x19, x20, [sp, #16]
  456720:	ldp	x29, x30, [sp], #32
  456724:	ret
  456728:	ldr	x1, [x19, #24]
  45672c:	ldrb	w0, [x1]
  456730:	cmp	w0, #0x46
  456734:	b.eq	456748 <ferror@plt+0x53ec8>  // b.none
  456738:	mov	x0, #0x0                   	// #0
  45673c:	ldp	x19, x20, [sp, #16]
  456740:	ldp	x29, x30, [sp], #32
  456744:	ret
  456748:	add	x0, x1, #0x1
  45674c:	str	x0, [x19, #24]
  456750:	ldrb	w2, [x1, #1]
  456754:	cmp	w2, #0x59
  456758:	b.ne	456768 <ferror@plt+0x53ee8>  // b.any
  45675c:	add	x0, x1, #0x2
  456760:	str	x0, [x19, #24]
  456764:	ldrb	w2, [x1, #2]
  456768:	cmp	w2, #0x4a
  45676c:	b.ne	456778 <ferror@plt+0x53ef8>  // b.any
  456770:	add	x0, x0, #0x1
  456774:	str	x0, [x19, #24]
  456778:	mov	x0, x19
  45677c:	bl	4550d0 <ferror@plt+0x52850>
  456780:	mov	x20, x0
  456784:	cbz	x0, 456830 <ferror@plt+0x53fb0>
  456788:	mov	x0, x19
  45678c:	bl	455ed0 <ferror@plt+0x53650>
  456790:	mov	x3, x0
  456794:	cbz	x0, 456830 <ferror@plt+0x53fb0>
  456798:	mov	x2, x20
  45679c:	mov	x0, x19
  4567a0:	mov	w1, #0x29                  	// #41
  4567a4:	bl	447fa8 <ferror@plt+0x45728>
  4567a8:	ldr	x2, [x19, #24]
  4567ac:	mov	w3, #0x4f                  	// #79
  4567b0:	ldrb	w1, [x2]
  4567b4:	cmp	w1, #0x52
  4567b8:	ccmp	w1, w3, #0x4, ne  // ne = any
  4567bc:	b.ne	456800 <ferror@plt+0x53f80>  // b.any
  4567c0:	ldr	w4, [x19, #72]
  4567c4:	cmp	w1, #0x52
  4567c8:	mov	w1, #0x20                  	// #32
  4567cc:	add	w3, w4, #0x3
  4567d0:	b.ne	4567dc <ferror@plt+0x53f5c>  // b.any
  4567d4:	add	w3, w4, #0x2
  4567d8:	mov	w1, #0x1f                  	// #31
  4567dc:	add	x2, x2, #0x1
  4567e0:	str	x2, [x19, #24]
  4567e4:	str	w3, [x19, #72]
  4567e8:	mov	x2, x0
  4567ec:	mov	x3, #0x0                   	// #0
  4567f0:	mov	x0, x19
  4567f4:	bl	447fa8 <ferror@plt+0x45728>
  4567f8:	ldr	x2, [x19, #24]
  4567fc:	ldrb	w1, [x2]
  456800:	cmp	w1, #0x45
  456804:	b.eq	456824 <ferror@plt+0x53fa4>  // b.none
  456808:	mov	x0, #0x0                   	// #0
  45680c:	ldr	w1, [x19, #16]
  456810:	tbnz	w1, #18, 45673c <ferror@plt+0x53ebc>
  456814:	ldr	w2, [x19, #84]
  456818:	sub	w2, w2, #0x1
  45681c:	str	w2, [x19, #84]
  456820:	b	45671c <ferror@plt+0x53e9c>
  456824:	add	x2, x2, #0x1
  456828:	str	x2, [x19, #24]
  45682c:	b	45680c <ferror@plt+0x53f8c>
  456830:	mov	x0, #0x0                   	// #0
  456834:	b	4567a8 <ferror@plt+0x53f28>
  456838:	stp	x29, x30, [sp, #-112]!
  45683c:	mov	x29, sp
  456840:	ldr	x2, [x0, #24]
  456844:	stp	x19, x20, [sp, #16]
  456848:	mov	x19, x0
  45684c:	str	xzr, [sp, #104]
  456850:	ldrb	w3, [x2]
  456854:	cmp	w3, w1, uxtb
  456858:	b.eq	456f7c <ferror@plt+0x546fc>  // b.none
  45685c:	stp	x21, x22, [sp, #32]
  456860:	add	x21, sp, #0x68
  456864:	mov	w22, #0x1                   	// #1
  456868:	stp	x23, x24, [sp, #48]
  45686c:	and	w23, w1, #0xff
  456870:	mov	w24, #0x6d                  	// #109
  456874:	stp	x25, x26, [sp, #64]
  456878:	ldr	w25, [x19, #76]
  45687c:	str	w22, [x19, #76]
  456880:	ldrb	w0, [x2]
  456884:	cmp	w0, #0x4c
  456888:	b.eq	456a44 <ferror@plt+0x541c4>  // b.none
  45688c:	cmp	w0, #0x54
  456890:	b.eq	456ae0 <ferror@plt+0x54260>  // b.none
  456894:	cmp	w0, #0x73
  456898:	b.eq	4569e0 <ferror@plt+0x54160>  // b.none
  45689c:	cmp	w0, #0x66
  4568a0:	b.ne	45693c <ferror@plt+0x540bc>  // b.any
  4568a4:	ldrb	w0, [x2, #1]
  4568a8:	cmp	w0, #0x70
  4568ac:	b.eq	456af0 <ferror@plt+0x54270>  // b.none
  4568b0:	mov	x0, x19
  4568b4:	bl	456020 <ferror@plt+0x537a0>
  4568b8:	mov	x20, x0
  4568bc:	cbz	x0, 45691c <ferror@plt+0x5409c>
  4568c0:	ldr	w0, [x0]
  4568c4:	cmp	w0, #0x32
  4568c8:	b.eq	456b58 <ferror@plt+0x542d8>  // b.none
  4568cc:	cmp	w0, #0x34
  4568d0:	b.eq	456f9c <ferror@plt+0x5471c>  // b.none
  4568d4:	b.hi	456918 <ferror@plt+0x54098>  // b.pmore
  4568d8:	cmp	w0, #0x33
  4568dc:	b.ne	456918 <ferror@plt+0x54098>  // b.any
  4568e0:	ldr	w0, [x20, #8]
  4568e4:	cmp	w0, #0x2
  4568e8:	b.eq	456918 <ferror@plt+0x54098>  // b.none
  4568ec:	b.gt	456918 <ferror@plt+0x54098>
  4568f0:	cbnz	w0, 456d40 <ferror@plt+0x544c0>
  4568f4:	mov	x2, x20
  4568f8:	mov	x0, x19
  4568fc:	mov	x3, #0x0                   	// #0
  456900:	mov	w1, #0x36                  	// #54
  456904:	bl	447fa8 <ferror@plt+0x45728>
  456908:	mov	x20, x0
  45690c:	b	456a50 <ferror@plt+0x541d0>
  456910:	ldr	x27, [sp, #80]
  456914:	nop
  456918:	mov	x20, #0x0                   	// #0
  45691c:	str	w25, [x19, #76]
  456920:	mov	x0, x20
  456924:	ldp	x19, x20, [sp, #16]
  456928:	ldp	x21, x22, [sp, #32]
  45692c:	ldp	x23, x24, [sp, #48]
  456930:	ldp	x25, x26, [sp, #64]
  456934:	ldp	x29, x30, [sp], #112
  456938:	ret
  45693c:	sub	w1, w0, #0x30
  456940:	and	w1, w1, #0xff
  456944:	cmp	w1, #0x9
  456948:	b.hi	456a60 <ferror@plt+0x541e0>  // b.pmore
  45694c:	mov	x0, x19
  456950:	bl	4561d8 <ferror@plt+0x53958>
  456954:	mov	x20, x0
  456958:	cbz	x0, 45691c <ferror@plt+0x5409c>
  45695c:	ldr	x0, [x19, #24]
  456960:	ldrb	w1, [x0]
  456964:	cmp	w1, #0x49
  456968:	b.eq	456c6c <ferror@plt+0x543ec>  // b.none
  45696c:	ldp	w1, w0, [x19, #40]
  456970:	str	w25, [x19, #76]
  456974:	cmp	w0, w1
  456978:	b.le	456a20 <ferror@plt+0x541a0>
  45697c:	ldp	x2, x3, [x19, #24]
  456980:	mov	w0, #0x18                  	// #24
  456984:	add	w5, w1, #0x1
  456988:	mov	w4, #0x2e                  	// #46
  45698c:	smull	x1, w1, w0
  456990:	add	x0, x3, x1
  456994:	str	wzr, [x0, #4]
  456998:	str	w5, [x19, #40]
  45699c:	str	w4, [x3, x1]
  4569a0:	stp	x20, xzr, [x0, #8]
  4569a4:	str	x0, [x21]
  4569a8:	add	x21, x0, #0x10
  4569ac:	ldrb	w0, [x2]
  4569b0:	cmp	w0, w23
  4569b4:	b.ne	456878 <ferror@plt+0x53ff8>  // b.any
  4569b8:	ldr	x20, [sp, #104]
  4569bc:	add	x2, x2, #0x1
  4569c0:	str	x2, [x19, #24]
  4569c4:	mov	x0, x20
  4569c8:	ldp	x19, x20, [sp, #16]
  4569cc:	ldp	x21, x22, [sp, #32]
  4569d0:	ldp	x23, x24, [sp, #48]
  4569d4:	ldp	x25, x26, [sp, #64]
  4569d8:	ldp	x29, x30, [sp], #112
  4569dc:	ret
  4569e0:	ldrb	w0, [x2, #1]
  4569e4:	cmp	w0, #0x72
  4569e8:	b.eq	456ccc <ferror@plt+0x5444c>  // b.none
  4569ec:	cmp	w0, #0x70
  4569f0:	b.ne	4568b0 <ferror@plt+0x54030>  // b.any
  4569f4:	add	x2, x2, #0x2
  4569f8:	str	x2, [x19, #24]
  4569fc:	mov	x0, x19
  456a00:	bl	457078 <ferror@plt+0x547f8>
  456a04:	mov	x2, x0
  456a08:	mov	x3, #0x0                   	// #0
  456a0c:	mov	x0, x19
  456a10:	mov	w1, #0x4b                  	// #75
  456a14:	bl	447fa8 <ferror@plt+0x45728>
  456a18:	mov	x20, x0
  456a1c:	b	456a50 <ferror@plt+0x541d0>
  456a20:	str	xzr, [x21]
  456a24:	mov	x20, #0x0                   	// #0
  456a28:	mov	x0, x20
  456a2c:	ldp	x19, x20, [sp, #16]
  456a30:	ldp	x21, x22, [sp, #32]
  456a34:	ldp	x23, x24, [sp, #48]
  456a38:	ldp	x25, x26, [sp, #64]
  456a3c:	ldp	x29, x30, [sp], #112
  456a40:	ret
  456a44:	mov	x0, x19
  456a48:	bl	4590c0 <ferror@plt+0x56840>
  456a4c:	mov	x20, x0
  456a50:	str	w25, [x19, #76]
  456a54:	cbz	x20, 456920 <ferror@plt+0x540a0>
  456a58:	ldp	w1, w0, [x19, #40]
  456a5c:	b	456974 <ferror@plt+0x540f4>
  456a60:	cmp	w0, #0x6f
  456a64:	b.ne	456a80 <ferror@plt+0x54200>  // b.any
  456a68:	ldrb	w0, [x2, #1]
  456a6c:	cmp	w0, #0x6e
  456a70:	b.ne	4568b0 <ferror@plt+0x54030>  // b.any
  456a74:	add	x2, x2, #0x2
  456a78:	str	x2, [x19, #24]
  456a7c:	b	45694c <ferror@plt+0x540cc>
  456a80:	cmp	w0, #0x69
  456a84:	mov	w1, #0x74                  	// #116
  456a88:	ccmp	w0, w1, #0x4, ne  // ne = any
  456a8c:	b.ne	4568b0 <ferror@plt+0x54030>  // b.any
  456a90:	ldrb	w1, [x2, #1]
  456a94:	cmp	w1, #0x6c
  456a98:	b.ne	4568b0 <ferror@plt+0x54030>  // b.any
  456a9c:	add	x1, x2, #0x2
  456aa0:	str	x1, [x19, #24]
  456aa4:	cmp	w0, #0x74
  456aa8:	mov	x20, #0x0                   	// #0
  456aac:	b.eq	456e1c <ferror@plt+0x5459c>  // b.none
  456ab0:	ldrb	w0, [x1, #1]
  456ab4:	cbz	w0, 456918 <ferror@plt+0x54098>
  456ab8:	mov	w1, #0x45                  	// #69
  456abc:	mov	x0, x19
  456ac0:	bl	456838 <ferror@plt+0x53fb8>
  456ac4:	mov	x3, x0
  456ac8:	mov	x2, x20
  456acc:	mov	x0, x19
  456ad0:	mov	w1, #0x31                  	// #49
  456ad4:	bl	447fa8 <ferror@plt+0x45728>
  456ad8:	mov	x20, x0
  456adc:	b	456a50 <ferror@plt+0x541d0>
  456ae0:	mov	x0, x19
  456ae4:	bl	448ae8 <ferror@plt+0x46268>
  456ae8:	mov	x20, x0
  456aec:	b	456a50 <ferror@plt+0x541d0>
  456af0:	add	x0, x2, #0x2
  456af4:	str	x0, [x19, #24]
  456af8:	ldrb	w0, [x2, #2]
  456afc:	cmp	w0, #0x54
  456b00:	b.eq	456cbc <ferror@plt+0x5443c>  // b.none
  456b04:	mov	x0, x19
  456b08:	bl	448910 <ferror@plt+0x46090>
  456b0c:	mvn	x1, x0
  456b10:	tst	x1, #0x7fffffff
  456b14:	b.eq	456918 <ferror@plt+0x54098>  // b.none
  456b18:	add	w3, w0, #0x1
  456b1c:	ldp	w2, w0, [x19, #40]
  456b20:	cmp	w2, w0
  456b24:	b.ge	456918 <ferror@plt+0x54098>  // b.tcont
  456b28:	mov	w5, #0x18                  	// #24
  456b2c:	add	w1, w2, #0x1
  456b30:	ldr	x4, [x19, #32]
  456b34:	smull	x2, w2, w5
  456b38:	mov	w5, #0x6                   	// #6
  456b3c:	sxtw	x3, w3
  456b40:	add	x20, x4, x2
  456b44:	str	wzr, [x20, #4]
  456b48:	str	w1, [x19, #40]
  456b4c:	str	w5, [x4, x2]
  456b50:	str	x3, [x20, #8]
  456b54:	b	456970 <ferror@plt+0x540f0>
  456b58:	ldr	x2, [x20, #8]
  456b5c:	ldr	w0, [x19, #72]
  456b60:	ldr	w1, [x2, #16]
  456b64:	ldr	x26, [x2]
  456b68:	sub	w1, w1, #0x2
  456b6c:	add	w0, w0, w1
  456b70:	str	w0, [x19, #72]
  456b74:	ldrb	w1, [x26]
  456b78:	cmp	w1, #0x73
  456b7c:	b.eq	456c98 <ferror@plt+0x54418>  // b.none
  456b80:	str	x27, [sp, #80]
  456b84:	ldr	w27, [x2, #20]
  456b88:	cmp	w27, #0x1
  456b8c:	b.eq	456d64 <ferror@plt+0x544e4>  // b.none
  456b90:	b.le	456d58 <ferror@plt+0x544d8>
  456b94:	cmp	w27, #0x2
  456b98:	b.eq	456e84 <ferror@plt+0x54604>  // b.none
  456b9c:	cmp	w27, #0x3
  456ba0:	b.ne	456910 <ferror@plt+0x54090>  // b.any
  456ba4:	cmp	w1, #0x71
  456ba8:	b.eq	456e38 <ferror@plt+0x545b8>  // b.none
  456bac:	ldrb	w0, [x26]
  456bb0:	cmp	w0, #0x66
  456bb4:	b.eq	457008 <ferror@plt+0x54788>  // b.none
  456bb8:	cmp	w0, #0x6e
  456bbc:	b.ne	456e74 <ferror@plt+0x545f4>  // b.any
  456bc0:	ldrb	w0, [x26, #1]
  456bc4:	mov	w1, #0x61                  	// #97
  456bc8:	cmp	w0, #0x77
  456bcc:	ccmp	w0, w1, #0x4, ne  // ne = any
  456bd0:	b.ne	456e74 <ferror@plt+0x545f4>  // b.any
  456bd4:	mov	w1, #0x5f                  	// #95
  456bd8:	mov	x0, x19
  456bdc:	bl	456838 <ferror@plt+0x53fb8>
  456be0:	mov	x26, x0
  456be4:	mov	x0, x19
  456be8:	bl	4550d0 <ferror@plt+0x52850>
  456bec:	ldr	x1, [x19, #24]
  456bf0:	mov	x27, x0
  456bf4:	ldrb	w0, [x1]
  456bf8:	cmp	w0, #0x45
  456bfc:	b.eq	457068 <ferror@plt+0x547e8>  // b.none
  456c00:	cmp	w0, #0x70
  456c04:	b.eq	457040 <ferror@plt+0x547c0>  // b.none
  456c08:	cmp	w0, #0x69
  456c0c:	b.ne	456e74 <ferror@plt+0x545f4>  // b.any
  456c10:	ldrb	w0, [x1, #1]
  456c14:	cmp	w0, #0x6c
  456c18:	b.ne	456e74 <ferror@plt+0x545f4>  // b.any
  456c1c:	mov	x0, x19
  456c20:	bl	457078 <ferror@plt+0x547f8>
  456c24:	mov	x3, x0
  456c28:	mov	x2, x27
  456c2c:	mov	w1, #0x3c                  	// #60
  456c30:	mov	x0, x19
  456c34:	bl	447fa8 <ferror@plt+0x45728>
  456c38:	mov	x2, x26
  456c3c:	mov	x3, x0
  456c40:	mov	w1, #0x3b                  	// #59
  456c44:	mov	x0, x19
  456c48:	bl	447fa8 <ferror@plt+0x45728>
  456c4c:	mov	x3, x0
  456c50:	mov	x2, x20
  456c54:	mov	x0, x19
  456c58:	mov	w1, #0x3a                  	// #58
  456c5c:	bl	447fa8 <ferror@plt+0x45728>
  456c60:	mov	x20, x0
  456c64:	ldr	x27, [sp, #80]
  456c68:	b	456a50 <ferror@plt+0x541d0>
  456c6c:	add	x0, x0, #0x1
  456c70:	str	x0, [x19, #24]
  456c74:	mov	x0, x19
  456c78:	bl	457aa0 <ferror@plt+0x55220>
  456c7c:	mov	x3, x0
  456c80:	mov	x2, x20
  456c84:	mov	x0, x19
  456c88:	mov	w1, #0x4                   	// #4
  456c8c:	bl	447fa8 <ferror@plt+0x45728>
  456c90:	mov	x20, x0
  456c94:	b	456a50 <ferror@plt+0x541d0>
  456c98:	ldrb	w0, [x26, #1]
  456c9c:	cmp	w0, #0x74
  456ca0:	b.ne	456b80 <ferror@plt+0x54300>  // b.any
  456ca4:	ldrb	w0, [x26, #2]
  456ca8:	cbnz	w0, 456b80 <ferror@plt+0x54300>
  456cac:	mov	x0, x19
  456cb0:	bl	4550d0 <ferror@plt+0x52850>
  456cb4:	mov	x3, x0
  456cb8:	b	456da8 <ferror@plt+0x54528>
  456cbc:	add	x2, x2, #0x3
  456cc0:	mov	w3, #0x0                   	// #0
  456cc4:	str	x2, [x19, #24]
  456cc8:	b	456b1c <ferror@plt+0x5429c>
  456ccc:	add	x2, x2, #0x2
  456cd0:	str	x2, [x19, #24]
  456cd4:	mov	x0, x19
  456cd8:	bl	4550d0 <ferror@plt+0x52850>
  456cdc:	mov	x20, x0
  456ce0:	mov	x0, x19
  456ce4:	bl	4561d8 <ferror@plt+0x53958>
  456ce8:	ldr	x1, [x19, #24]
  456cec:	mov	x26, x0
  456cf0:	mov	x3, x26
  456cf4:	ldrb	w0, [x1]
  456cf8:	cmp	w0, #0x49
  456cfc:	b.ne	456d28 <ferror@plt+0x544a8>  // b.any
  456d00:	add	x1, x1, #0x1
  456d04:	str	x1, [x19, #24]
  456d08:	mov	x0, x19
  456d0c:	bl	457aa0 <ferror@plt+0x55220>
  456d10:	mov	x3, x0
  456d14:	mov	x2, x26
  456d18:	mov	x0, x19
  456d1c:	mov	w1, #0x4                   	// #4
  456d20:	bl	447fa8 <ferror@plt+0x45728>
  456d24:	mov	x3, x0
  456d28:	mov	x2, x20
  456d2c:	mov	x0, x19
  456d30:	mov	w1, #0x1                   	// #1
  456d34:	bl	447fa8 <ferror@plt+0x45728>
  456d38:	mov	x20, x0
  456d3c:	b	456a50 <ferror@plt+0x541d0>
  456d40:	cmp	w0, #0x1
  456d44:	b.ne	456918 <ferror@plt+0x54098>  // b.any
  456d48:	mov	x0, x19
  456d4c:	bl	457078 <ferror@plt+0x547f8>
  456d50:	mov	x3, x0
  456d54:	b	456da8 <ferror@plt+0x54528>
  456d58:	cbnz	w27, 456910 <ferror@plt+0x54090>
  456d5c:	ldr	x27, [sp, #80]
  456d60:	b	4568f4 <ferror@plt+0x54074>
  456d64:	ldrb	w0, [x26]
  456d68:	cmp	w0, #0x70
  456d6c:	ccmp	w0, w24, #0x4, ne  // ne = any
  456d70:	b.eq	456dec <ferror@plt+0x5456c>  // b.none
  456d74:	mov	w27, #0x0                   	// #0
  456d78:	cmp	w1, #0x73
  456d7c:	b.ne	456dc0 <ferror@plt+0x54540>  // b.any
  456d80:	ldrb	w0, [x26, #1]
  456d84:	cmp	w0, #0x50
  456d88:	b.ne	456dc0 <ferror@plt+0x54540>  // b.any
  456d8c:	ldrb	w0, [x26, #2]
  456d90:	cbnz	w0, 456dc0 <ferror@plt+0x54540>
  456d94:	mov	x0, x19
  456d98:	bl	457aa0 <ferror@plt+0x55220>
  456d9c:	mov	x3, x0
  456da0:	cbnz	w27, 456dd0 <ferror@plt+0x54550>
  456da4:	ldr	x27, [sp, #80]
  456da8:	mov	x2, x20
  456dac:	mov	x0, x19
  456db0:	mov	w1, #0x37                  	// #55
  456db4:	bl	447fa8 <ferror@plt+0x45728>
  456db8:	mov	x20, x0
  456dbc:	b	456a50 <ferror@plt+0x541d0>
  456dc0:	mov	x0, x19
  456dc4:	bl	457078 <ferror@plt+0x547f8>
  456dc8:	mov	x3, x0
  456dcc:	cbz	w27, 456da4 <ferror@plt+0x54524>
  456dd0:	mov	x2, x3
  456dd4:	mov	x0, x19
  456dd8:	mov	w1, #0x39                  	// #57
  456ddc:	bl	447fa8 <ferror@plt+0x45728>
  456de0:	mov	x3, x0
  456de4:	ldr	x27, [sp, #80]
  456de8:	b	456da8 <ferror@plt+0x54528>
  456dec:	ldrb	w2, [x26, #1]
  456df0:	cmp	w2, w0
  456df4:	b.ne	456d74 <ferror@plt+0x544f4>  // b.any
  456df8:	ldr	x0, [x19, #24]
  456dfc:	ldrb	w2, [x0]
  456e00:	cmp	w2, #0x5f
  456e04:	b.ne	456d78 <ferror@plt+0x544f8>  // b.any
  456e08:	add	x0, x0, #0x1
  456e0c:	str	x0, [x19, #24]
  456e10:	mov	w27, #0x0                   	// #0
  456e14:	ldrb	w1, [x26]
  456e18:	b	456d78 <ferror@plt+0x544f8>
  456e1c:	mov	x0, x19
  456e20:	bl	4550d0 <ferror@plt+0x52850>
  456e24:	ldr	x1, [x19, #24]
  456e28:	mov	x20, x0
  456e2c:	ldrb	w0, [x1, #1]
  456e30:	cbnz	w0, 456ab8 <ferror@plt+0x54238>
  456e34:	b	456918 <ferror@plt+0x54098>
  456e38:	ldrb	w0, [x26, #1]
  456e3c:	cmp	w0, #0x75
  456e40:	b.ne	456bac <ferror@plt+0x5432c>  // b.any
  456e44:	ldrb	w0, [x26, #2]
  456e48:	cbnz	w0, 456bac <ferror@plt+0x5432c>
  456e4c:	mov	x0, x19
  456e50:	bl	457078 <ferror@plt+0x547f8>
  456e54:	mov	x26, x0
  456e58:	mov	x0, x19
  456e5c:	bl	457078 <ferror@plt+0x547f8>
  456e60:	mov	x27, x0
  456e64:	mov	x0, x19
  456e68:	bl	457078 <ferror@plt+0x547f8>
  456e6c:	mov	x3, x0
  456e70:	cbnz	x0, 456c28 <ferror@plt+0x543a8>
  456e74:	mov	x20, #0x0                   	// #0
  456e78:	ldr	x27, [sp, #80]
  456e7c:	str	w25, [x19, #76]
  456e80:	b	456920 <ferror@plt+0x540a0>
  456e84:	ldr	x0, [x20, #8]
  456e88:	ldr	x0, [x0]
  456e8c:	ldrb	w1, [x0, #1]
  456e90:	cmp	w1, #0x63
  456e94:	b.eq	456fc8 <ferror@plt+0x54748>  // b.none
  456e98:	ldrb	w0, [x26]
  456e9c:	cmp	w0, #0x66
  456ea0:	b.eq	456ff8 <ferror@plt+0x54778>  // b.none
  456ea4:	mov	x0, x19
  456ea8:	bl	457078 <ferror@plt+0x547f8>
  456eac:	mov	x27, x0
  456eb0:	ldrb	w1, [x26]
  456eb4:	cmp	w1, #0x63
  456eb8:	b.ne	456ee4 <ferror@plt+0x54664>  // b.any
  456ebc:	ldrb	w0, [x26, #1]
  456ec0:	cmp	w0, #0x6c
  456ec4:	b.ne	456ee4 <ferror@plt+0x54664>  // b.any
  456ec8:	ldrb	w0, [x26, #2]
  456ecc:	cbnz	w0, 456ee4 <ferror@plt+0x54664>
  456ed0:	mov	x0, x19
  456ed4:	mov	w1, #0x45                  	// #69
  456ed8:	bl	456838 <ferror@plt+0x53fb8>
  456edc:	mov	x26, x0
  456ee0:	b	456f1c <ferror@plt+0x5469c>
  456ee4:	cmp	w1, #0x64
  456ee8:	b.ne	456f50 <ferror@plt+0x546d0>  // b.any
  456eec:	ldrb	w0, [x26, #1]
  456ef0:	cmp	w0, #0x74
  456ef4:	b.ne	456f50 <ferror@plt+0x546d0>  // b.any
  456ef8:	ldrb	w0, [x26, #2]
  456efc:	cbnz	w0, 456f50 <ferror@plt+0x546d0>
  456f00:	mov	x0, x19
  456f04:	bl	4561d8 <ferror@plt+0x53958>
  456f08:	ldr	x1, [x19, #24]
  456f0c:	mov	x26, x0
  456f10:	ldrb	w0, [x1]
  456f14:	cmp	w0, #0x49
  456f18:	b.eq	457014 <ferror@plt+0x54794>  // b.none
  456f1c:	mov	x2, x27
  456f20:	mov	x3, x26
  456f24:	mov	w1, #0x39                  	// #57
  456f28:	mov	x0, x19
  456f2c:	bl	447fa8 <ferror@plt+0x45728>
  456f30:	mov	x3, x0
  456f34:	mov	x2, x20
  456f38:	mov	x0, x19
  456f3c:	mov	w1, #0x38                  	// #56
  456f40:	bl	447fa8 <ferror@plt+0x45728>
  456f44:	mov	x20, x0
  456f48:	ldr	x27, [sp, #80]
  456f4c:	b	456a50 <ferror@plt+0x541d0>
  456f50:	cmp	w1, #0x70
  456f54:	b.ne	456f6c <ferror@plt+0x546ec>  // b.any
  456f58:	ldrb	w0, [x26, #1]
  456f5c:	cmp	w0, #0x74
  456f60:	b.ne	456f6c <ferror@plt+0x546ec>  // b.any
  456f64:	ldrb	w0, [x26, #2]
  456f68:	cbz	w0, 456f00 <ferror@plt+0x54680>
  456f6c:	mov	x0, x19
  456f70:	bl	457078 <ferror@plt+0x547f8>
  456f74:	mov	x26, x0
  456f78:	b	456f1c <ferror@plt+0x5469c>
  456f7c:	add	x2, x2, #0x1
  456f80:	str	x2, [x0, #24]
  456f84:	ldp	x19, x20, [sp, #16]
  456f88:	mov	x3, #0x0                   	// #0
  456f8c:	ldp	x29, x30, [sp], #112
  456f90:	mov	w1, #0x2e                  	// #46
  456f94:	mov	x2, #0x0                   	// #0
  456f98:	b	447fa8 <ferror@plt+0x45728>
  456f9c:	ldr	x0, [x19, #24]
  456fa0:	ldrb	w1, [x0]
  456fa4:	cmp	w1, #0x5f
  456fa8:	b.ne	456d48 <ferror@plt+0x544c8>  // b.any
  456fac:	add	x0, x0, #0x1
  456fb0:	str	x0, [x19, #24]
  456fb4:	mov	w1, #0x45                  	// #69
  456fb8:	mov	x0, x19
  456fbc:	bl	456838 <ferror@plt+0x53fb8>
  456fc0:	mov	x3, x0
  456fc4:	b	456da8 <ferror@plt+0x54528>
  456fc8:	ldrb	w0, [x0]
  456fcc:	sub	w1, w0, #0x63
  456fd0:	sub	w0, w0, #0x72
  456fd4:	and	w1, w1, #0xff
  456fd8:	and	w0, w0, #0xff
  456fdc:	cmp	w1, #0x1
  456fe0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  456fe4:	b.hi	456e98 <ferror@plt+0x54618>  // b.pmore
  456fe8:	mov	x0, x19
  456fec:	bl	4550d0 <ferror@plt+0x52850>
  456ff0:	mov	x27, x0
  456ff4:	b	456eb0 <ferror@plt+0x54630>
  456ff8:	mov	x0, x19
  456ffc:	bl	456020 <ferror@plt+0x537a0>
  457000:	mov	x27, x0
  457004:	b	456eb0 <ferror@plt+0x54630>
  457008:	mov	x0, x19
  45700c:	bl	456020 <ferror@plt+0x537a0>
  457010:	b	456e54 <ferror@plt+0x545d4>
  457014:	add	x1, x1, #0x1
  457018:	str	x1, [x19, #24]
  45701c:	mov	x0, x19
  457020:	bl	457aa0 <ferror@plt+0x55220>
  457024:	mov	x3, x0
  457028:	mov	x2, x26
  45702c:	mov	x0, x19
  457030:	mov	w1, #0x4                   	// #4
  457034:	bl	447fa8 <ferror@plt+0x45728>
  457038:	mov	x26, x0
  45703c:	b	456f1c <ferror@plt+0x5469c>
  457040:	ldrb	w0, [x1, #1]
  457044:	cmp	w0, #0x69
  457048:	b.ne	456e74 <ferror@plt+0x545f4>  // b.any
  45704c:	add	x1, x1, #0x2
  457050:	str	x1, [x19, #24]
  457054:	mov	x0, x19
  457058:	mov	w1, #0x45                  	// #69
  45705c:	bl	456838 <ferror@plt+0x53fb8>
  457060:	mov	x3, x0
  457064:	b	456c28 <ferror@plt+0x543a8>
  457068:	add	x1, x1, #0x1
  45706c:	mov	x3, #0x0                   	// #0
  457070:	str	x1, [x19, #24]
  457074:	b	456c28 <ferror@plt+0x543a8>
  457078:	ldr	x2, [x0, #24]
  45707c:	ldrb	w1, [x2]
  457080:	cmp	w1, #0x4c
  457084:	b.eq	457214 <ferror@plt+0x54994>  // b.none
  457088:	cmp	w1, #0x54
  45708c:	b.eq	457298 <ferror@plt+0x54a18>  // b.none
  457090:	stp	x29, x30, [sp, #-48]!
  457094:	cmp	w1, #0x73
  457098:	mov	x29, sp
  45709c:	stp	x19, x20, [sp, #16]
  4570a0:	mov	x19, x0
  4570a4:	b.eq	45715c <ferror@plt+0x548dc>  // b.none
  4570a8:	cmp	w1, #0x66
  4570ac:	b.eq	4570f0 <ferror@plt+0x54870>  // b.none
  4570b0:	sub	w3, w1, #0x30
  4570b4:	and	w3, w3, #0xff
  4570b8:	cmp	w3, #0x9
  4570bc:	b.hi	457218 <ferror@plt+0x54998>  // b.pmore
  4570c0:	mov	x0, x19
  4570c4:	bl	4561d8 <ferror@plt+0x53958>
  4570c8:	mov	x20, x0
  4570cc:	cbz	x0, 457200 <ferror@plt+0x54980>
  4570d0:	ldr	x0, [x19, #24]
  4570d4:	ldrb	w1, [x0]
  4570d8:	cmp	w1, #0x49
  4570dc:	b.eq	457370 <ferror@plt+0x54af0>  // b.none
  4570e0:	mov	x0, x20
  4570e4:	ldp	x19, x20, [sp, #16]
  4570e8:	ldp	x29, x30, [sp], #48
  4570ec:	ret
  4570f0:	ldrb	w1, [x2, #1]
  4570f4:	cmp	w1, #0x70
  4570f8:	b.eq	457198 <ferror@plt+0x54918>  // b.none
  4570fc:	mov	x0, x19
  457100:	bl	456020 <ferror@plt+0x537a0>
  457104:	mov	x20, x0
  457108:	cbz	x0, 457200 <ferror@plt+0x54980>
  45710c:	ldr	w0, [x0]
  457110:	cmp	w0, #0x32
  457114:	b.eq	45729c <ferror@plt+0x54a1c>  // b.none
  457118:	cmp	w0, #0x34
  45711c:	b.eq	4576c8 <ferror@plt+0x54e48>  // b.none
  457120:	b.hi	457200 <ferror@plt+0x54980>  // b.pmore
  457124:	cmp	w0, #0x33
  457128:	b.ne	457200 <ferror@plt+0x54980>  // b.any
  45712c:	ldr	w0, [x20, #8]
  457130:	cmp	w0, #0x2
  457134:	b.eq	457200 <ferror@plt+0x54980>  // b.none
  457138:	b.gt	457200 <ferror@plt+0x54980>
  45713c:	cbnz	w0, 457464 <ferror@plt+0x54be4>
  457140:	mov	x2, x20
  457144:	mov	x0, x19
  457148:	ldp	x19, x20, [sp, #16]
  45714c:	mov	x3, #0x0                   	// #0
  457150:	ldp	x29, x30, [sp], #48
  457154:	mov	w1, #0x36                  	// #54
  457158:	b	447fa8 <ferror@plt+0x45728>
  45715c:	ldrb	w1, [x2, #1]
  457160:	cmp	w1, #0x72
  457164:	b.eq	45739c <ferror@plt+0x54b1c>  // b.none
  457168:	cmp	w1, #0x70
  45716c:	b.ne	4570fc <ferror@plt+0x5487c>  // b.any
  457170:	add	x2, x2, #0x2
  457174:	str	x2, [x0, #24]
  457178:	bl	457078 <ferror@plt+0x547f8>
  45717c:	mov	x2, x0
  457180:	mov	x0, x19
  457184:	mov	x3, #0x0                   	// #0
  457188:	ldp	x19, x20, [sp, #16]
  45718c:	mov	w1, #0x4b                  	// #75
  457190:	ldp	x29, x30, [sp], #48
  457194:	b	447fa8 <ferror@plt+0x45728>
  457198:	add	x1, x2, #0x2
  45719c:	str	x1, [x0, #24]
  4571a0:	ldrb	w1, [x2, #2]
  4571a4:	cmp	w1, #0x54
  4571a8:	b.eq	457528 <ferror@plt+0x54ca8>  // b.none
  4571ac:	bl	448910 <ferror@plt+0x46090>
  4571b0:	mvn	x1, x0
  4571b4:	add	w0, w0, #0x1
  4571b8:	tst	x1, #0x7fffffff
  4571bc:	b.eq	457200 <ferror@plt+0x54980>  // b.none
  4571c0:	ldp	w1, w2, [x19, #40]
  4571c4:	cmp	w1, w2
  4571c8:	b.ge	457200 <ferror@plt+0x54980>  // b.tcont
  4571cc:	mov	w3, #0x18                  	// #24
  4571d0:	add	w4, w1, #0x1
  4571d4:	ldr	x2, [x19, #32]
  4571d8:	smull	x1, w1, w3
  4571dc:	mov	w3, #0x6                   	// #6
  4571e0:	sxtw	x0, w0
  4571e4:	add	x20, x2, x1
  4571e8:	str	wzr, [x20, #4]
  4571ec:	str	w4, [x19, #40]
  4571f0:	str	w3, [x2, x1]
  4571f4:	str	x0, [x20, #8]
  4571f8:	b	4570e0 <ferror@plt+0x54860>
  4571fc:	ldp	x21, x22, [sp, #32]
  457200:	mov	x20, #0x0                   	// #0
  457204:	mov	x0, x20
  457208:	ldp	x19, x20, [sp, #16]
  45720c:	ldp	x29, x30, [sp], #48
  457210:	ret
  457214:	b	4590c0 <ferror@plt+0x56840>
  457218:	cmp	w1, #0x6f
  45721c:	b.ne	457238 <ferror@plt+0x549b8>  // b.any
  457220:	ldrb	w0, [x2, #1]
  457224:	cmp	w0, #0x6e
  457228:	b.ne	4570fc <ferror@plt+0x5487c>  // b.any
  45722c:	add	x2, x2, #0x2
  457230:	str	x2, [x19, #24]
  457234:	b	4570c0 <ferror@plt+0x54840>
  457238:	cmp	w1, #0x69
  45723c:	mov	w3, #0x74                  	// #116
  457240:	ccmp	w1, w3, #0x4, ne  // ne = any
  457244:	b.ne	4570fc <ferror@plt+0x5487c>  // b.any
  457248:	ldrb	w3, [x2, #1]
  45724c:	cmp	w3, #0x6c
  457250:	b.ne	4570fc <ferror@plt+0x5487c>  // b.any
  457254:	add	x3, x2, #0x2
  457258:	str	x3, [x0, #24]
  45725c:	cmp	w1, #0x74
  457260:	mov	x20, #0x0                   	// #0
  457264:	b.eq	457454 <ferror@plt+0x54bd4>  // b.none
  457268:	ldrb	w0, [x3, #1]
  45726c:	cbz	w0, 457200 <ferror@plt+0x54980>
  457270:	mov	x0, x19
  457274:	mov	w1, #0x45                  	// #69
  457278:	bl	456838 <ferror@plt+0x53fb8>
  45727c:	mov	x3, x0
  457280:	mov	x2, x20
  457284:	mov	x0, x19
  457288:	ldp	x19, x20, [sp, #16]
  45728c:	mov	w1, #0x31                  	// #49
  457290:	ldp	x29, x30, [sp], #48
  457294:	b	447fa8 <ferror@plt+0x45728>
  457298:	b	448ae8 <ferror@plt+0x46268>
  45729c:	ldr	x2, [x20, #8]
  4572a0:	stp	x21, x22, [sp, #32]
  4572a4:	ldr	w0, [x19, #72]
  4572a8:	ldr	w1, [x2, #16]
  4572ac:	ldr	x21, [x2]
  4572b0:	sub	w1, w1, #0x2
  4572b4:	add	w0, w0, w1
  4572b8:	str	w0, [x19, #72]
  4572bc:	ldrb	w1, [x21]
  4572c0:	cmp	w1, #0x73
  4572c4:	b.eq	4573ec <ferror@plt+0x54b6c>  // b.none
  4572c8:	ldr	w22, [x2, #20]
  4572cc:	cmp	w22, #0x1
  4572d0:	b.eq	45749c <ferror@plt+0x54c1c>  // b.none
  4572d4:	b.le	457490 <ferror@plt+0x54c10>
  4572d8:	cmp	w22, #0x2
  4572dc:	b.eq	457554 <ferror@plt+0x54cd4>  // b.none
  4572e0:	cmp	w22, #0x3
  4572e4:	b.ne	4571fc <ferror@plt+0x5497c>  // b.any
  4572e8:	cmp	w1, #0x71
  4572ec:	b.ne	4575e4 <ferror@plt+0x54d64>  // b.any
  4572f0:	ldrb	w0, [x21, #1]
  4572f4:	cmp	w0, #0x75
  4572f8:	b.ne	4575e4 <ferror@plt+0x54d64>  // b.any
  4572fc:	ldrb	w0, [x21, #2]
  457300:	cbnz	w0, 4575e4 <ferror@plt+0x54d64>
  457304:	mov	x0, x19
  457308:	bl	457078 <ferror@plt+0x547f8>
  45730c:	mov	x21, x0
  457310:	mov	x0, x19
  457314:	bl	457078 <ferror@plt+0x547f8>
  457318:	mov	x22, x0
  45731c:	mov	x0, x19
  457320:	bl	457078 <ferror@plt+0x547f8>
  457324:	mov	x3, x0
  457328:	cbz	x0, 4571fc <ferror@plt+0x5497c>
  45732c:	mov	x2, x22
  457330:	mov	x0, x19
  457334:	mov	w1, #0x3c                  	// #60
  457338:	bl	447fa8 <ferror@plt+0x45728>
  45733c:	mov	x2, x21
  457340:	mov	x3, x0
  457344:	mov	w1, #0x3b                  	// #59
  457348:	mov	x0, x19
  45734c:	bl	447fa8 <ferror@plt+0x45728>
  457350:	mov	x3, x0
  457354:	mov	x2, x20
  457358:	mov	x0, x19
  45735c:	ldp	x19, x20, [sp, #16]
  457360:	mov	w1, #0x3a                  	// #58
  457364:	ldp	x21, x22, [sp, #32]
  457368:	ldp	x29, x30, [sp], #48
  45736c:	b	447fa8 <ferror@plt+0x45728>
  457370:	add	x0, x0, #0x1
  457374:	str	x0, [x19, #24]
  457378:	mov	x0, x19
  45737c:	bl	457aa0 <ferror@plt+0x55220>
  457380:	mov	x3, x0
  457384:	mov	x2, x20
  457388:	mov	x0, x19
  45738c:	ldp	x19, x20, [sp, #16]
  457390:	mov	w1, #0x4                   	// #4
  457394:	ldp	x29, x30, [sp], #48
  457398:	b	447fa8 <ferror@plt+0x45728>
  45739c:	add	x2, x2, #0x2
  4573a0:	stp	x21, x22, [sp, #32]
  4573a4:	str	x2, [x0, #24]
  4573a8:	bl	4550d0 <ferror@plt+0x52850>
  4573ac:	mov	x20, x0
  4573b0:	mov	x0, x19
  4573b4:	bl	4561d8 <ferror@plt+0x53958>
  4573b8:	ldr	x1, [x19, #24]
  4573bc:	mov	x21, x0
  4573c0:	mov	x3, x21
  4573c4:	ldrb	w0, [x1]
  4573c8:	cmp	w0, #0x49
  4573cc:	b.eq	457428 <ferror@plt+0x54ba8>  // b.none
  4573d0:	mov	x2, x20
  4573d4:	mov	x0, x19
  4573d8:	ldp	x19, x20, [sp, #16]
  4573dc:	mov	w1, #0x1                   	// #1
  4573e0:	ldp	x21, x22, [sp, #32]
  4573e4:	ldp	x29, x30, [sp], #48
  4573e8:	b	447fa8 <ferror@plt+0x45728>
  4573ec:	ldrb	w0, [x21, #1]
  4573f0:	cmp	w0, #0x74
  4573f4:	b.ne	4572c8 <ferror@plt+0x54a48>  // b.any
  4573f8:	ldrb	w0, [x21, #2]
  4573fc:	cbnz	w0, 4572c8 <ferror@plt+0x54a48>
  457400:	mov	x0, x19
  457404:	bl	4550d0 <ferror@plt+0x52850>
  457408:	mov	x2, x20
  45740c:	mov	x3, x0
  457410:	mov	x0, x19
  457414:	mov	w1, #0x37                  	// #55
  457418:	ldp	x19, x20, [sp, #16]
  45741c:	ldp	x21, x22, [sp, #32]
  457420:	ldp	x29, x30, [sp], #48
  457424:	b	447fa8 <ferror@plt+0x45728>
  457428:	add	x1, x1, #0x1
  45742c:	str	x1, [x19, #24]
  457430:	mov	x0, x19
  457434:	bl	457aa0 <ferror@plt+0x55220>
  457438:	mov	x3, x0
  45743c:	mov	x2, x21
  457440:	mov	x0, x19
  457444:	mov	w1, #0x4                   	// #4
  457448:	bl	447fa8 <ferror@plt+0x45728>
  45744c:	mov	x3, x0
  457450:	b	4573d0 <ferror@plt+0x54b50>
  457454:	bl	4550d0 <ferror@plt+0x52850>
  457458:	mov	x20, x0
  45745c:	ldr	x3, [x19, #24]
  457460:	b	457268 <ferror@plt+0x549e8>
  457464:	cmp	w0, #0x1
  457468:	b.ne	457200 <ferror@plt+0x54980>  // b.any
  45746c:	mov	x0, x19
  457470:	bl	457078 <ferror@plt+0x547f8>
  457474:	mov	x3, x0
  457478:	mov	x2, x20
  45747c:	mov	x0, x19
  457480:	ldp	x19, x20, [sp, #16]
  457484:	mov	w1, #0x37                  	// #55
  457488:	ldp	x29, x30, [sp], #48
  45748c:	b	447fa8 <ferror@plt+0x45728>
  457490:	cbnz	w22, 4571fc <ferror@plt+0x5497c>
  457494:	ldp	x21, x22, [sp, #32]
  457498:	b	457140 <ferror@plt+0x548c0>
  45749c:	ldrb	w0, [x21]
  4574a0:	mov	w2, #0x6d                  	// #109
  4574a4:	cmp	w0, #0x70
  4574a8:	ccmp	w0, w2, #0x4, ne  // ne = any
  4574ac:	b.ne	4574bc <ferror@plt+0x54c3c>  // b.any
  4574b0:	ldrb	w2, [x21, #1]
  4574b4:	cmp	w2, w0
  4574b8:	b.eq	4574f4 <ferror@plt+0x54c74>  // b.none
  4574bc:	mov	w22, #0x0                   	// #0
  4574c0:	cmp	w1, #0x73
  4574c4:	b.ne	457518 <ferror@plt+0x54c98>  // b.any
  4574c8:	ldrb	w0, [x21, #1]
  4574cc:	cmp	w0, #0x50
  4574d0:	b.ne	457518 <ferror@plt+0x54c98>  // b.any
  4574d4:	ldrb	w0, [x21, #2]
  4574d8:	cbnz	w0, 457518 <ferror@plt+0x54c98>
  4574dc:	mov	x0, x19
  4574e0:	bl	457aa0 <ferror@plt+0x55220>
  4574e4:	mov	x3, x0
  4574e8:	cbnz	w22, 457538 <ferror@plt+0x54cb8>
  4574ec:	ldp	x21, x22, [sp, #32]
  4574f0:	b	457478 <ferror@plt+0x54bf8>
  4574f4:	ldr	x0, [x19, #24]
  4574f8:	ldrb	w2, [x0]
  4574fc:	cmp	w2, #0x5f
  457500:	b.ne	4574c0 <ferror@plt+0x54c40>  // b.any
  457504:	add	x0, x0, #0x1
  457508:	str	x0, [x19, #24]
  45750c:	mov	w22, #0x0                   	// #0
  457510:	ldrb	w1, [x21]
  457514:	b	4574c0 <ferror@plt+0x54c40>
  457518:	mov	x0, x19
  45751c:	bl	457078 <ferror@plt+0x547f8>
  457520:	mov	x3, x0
  457524:	b	4574e8 <ferror@plt+0x54c68>
  457528:	add	x2, x2, #0x3
  45752c:	mov	w0, #0x0                   	// #0
  457530:	str	x2, [x19, #24]
  457534:	b	4571c0 <ferror@plt+0x54940>
  457538:	mov	x2, x3
  45753c:	mov	x0, x19
  457540:	mov	w1, #0x39                  	// #57
  457544:	bl	447fa8 <ferror@plt+0x45728>
  457548:	mov	x3, x0
  45754c:	ldp	x21, x22, [sp, #32]
  457550:	b	457478 <ferror@plt+0x54bf8>
  457554:	ldr	x0, [x20, #8]
  457558:	ldr	x0, [x0]
  45755c:	ldrb	w1, [x0, #1]
  457560:	cmp	w1, #0x63
  457564:	b.eq	45770c <ferror@plt+0x54e8c>  // b.none
  457568:	ldrb	w0, [x21]
  45756c:	cmp	w0, #0x66
  457570:	b.eq	45773c <ferror@plt+0x54ebc>  // b.none
  457574:	mov	x0, x19
  457578:	bl	457078 <ferror@plt+0x547f8>
  45757c:	mov	x22, x0
  457580:	ldrb	w1, [x21]
  457584:	cmp	w1, #0x63
  457588:	b.ne	457664 <ferror@plt+0x54de4>  // b.any
  45758c:	ldrb	w0, [x21, #1]
  457590:	cmp	w0, #0x6c
  457594:	b.ne	457664 <ferror@plt+0x54de4>  // b.any
  457598:	ldrb	w0, [x21, #2]
  45759c:	cbnz	w0, 457664 <ferror@plt+0x54de4>
  4575a0:	mov	x0, x19
  4575a4:	mov	w1, #0x45                  	// #69
  4575a8:	bl	456838 <ferror@plt+0x53fb8>
  4575ac:	mov	x21, x0
  4575b0:	mov	x3, x21
  4575b4:	mov	x2, x22
  4575b8:	mov	x0, x19
  4575bc:	mov	w1, #0x39                  	// #57
  4575c0:	bl	447fa8 <ferror@plt+0x45728>
  4575c4:	mov	x3, x0
  4575c8:	mov	x2, x20
  4575cc:	mov	x0, x19
  4575d0:	ldp	x19, x20, [sp, #16]
  4575d4:	mov	w1, #0x38                  	// #56
  4575d8:	ldp	x21, x22, [sp, #32]
  4575dc:	ldp	x29, x30, [sp], #48
  4575e0:	b	447fa8 <ferror@plt+0x45728>
  4575e4:	ldrb	w0, [x21]
  4575e8:	cmp	w0, #0x66
  4575ec:	b.eq	457764 <ferror@plt+0x54ee4>  // b.none
  4575f0:	cmp	w0, #0x6e
  4575f4:	b.ne	4571fc <ferror@plt+0x5497c>  // b.any
  4575f8:	ldrb	w0, [x21, #1]
  4575fc:	mov	w1, #0x61                  	// #97
  457600:	cmp	w0, #0x77
  457604:	ccmp	w0, w1, #0x4, ne  // ne = any
  457608:	b.ne	4571fc <ferror@plt+0x5497c>  // b.any
  45760c:	mov	w1, #0x5f                  	// #95
  457610:	mov	x0, x19
  457614:	bl	456838 <ferror@plt+0x53fb8>
  457618:	mov	x21, x0
  45761c:	mov	x0, x19
  457620:	bl	4550d0 <ferror@plt+0x52850>
  457624:	ldr	x1, [x19, #24]
  457628:	mov	x22, x0
  45762c:	ldrb	w0, [x1]
  457630:	cmp	w0, #0x45
  457634:	b.eq	457798 <ferror@plt+0x54f18>  // b.none
  457638:	cmp	w0, #0x70
  45763c:	b.eq	457770 <ferror@plt+0x54ef0>  // b.none
  457640:	cmp	w0, #0x69
  457644:	b.ne	4571fc <ferror@plt+0x5497c>  // b.any
  457648:	ldrb	w0, [x1, #1]
  45764c:	cmp	w0, #0x6c
  457650:	b.ne	4571fc <ferror@plt+0x5497c>  // b.any
  457654:	mov	x0, x19
  457658:	bl	457078 <ferror@plt+0x547f8>
  45765c:	mov	x3, x0
  457660:	b	45732c <ferror@plt+0x54aac>
  457664:	cmp	w1, #0x64
  457668:	b.ne	4576f4 <ferror@plt+0x54e74>  // b.any
  45766c:	ldrb	w0, [x21, #1]
  457670:	cmp	w0, #0x74
  457674:	b.ne	4576f4 <ferror@plt+0x54e74>  // b.any
  457678:	ldrb	w0, [x21, #2]
  45767c:	cbnz	w0, 4576f4 <ferror@plt+0x54e74>
  457680:	mov	x0, x19
  457684:	bl	4561d8 <ferror@plt+0x53958>
  457688:	ldr	x1, [x19, #24]
  45768c:	mov	x21, x0
  457690:	ldrb	w0, [x1]
  457694:	cmp	w0, #0x49
  457698:	b.ne	4575b0 <ferror@plt+0x54d30>  // b.any
  45769c:	add	x1, x1, #0x1
  4576a0:	str	x1, [x19, #24]
  4576a4:	mov	x0, x19
  4576a8:	bl	457aa0 <ferror@plt+0x55220>
  4576ac:	mov	x3, x0
  4576b0:	mov	x2, x21
  4576b4:	mov	x0, x19
  4576b8:	mov	w1, #0x4                   	// #4
  4576bc:	bl	447fa8 <ferror@plt+0x45728>
  4576c0:	mov	x21, x0
  4576c4:	b	4575b0 <ferror@plt+0x54d30>
  4576c8:	ldr	x0, [x19, #24]
  4576cc:	ldrb	w1, [x0]
  4576d0:	cmp	w1, #0x5f
  4576d4:	b.ne	45746c <ferror@plt+0x54bec>  // b.any
  4576d8:	add	x0, x0, #0x1
  4576dc:	str	x0, [x19, #24]
  4576e0:	mov	w1, #0x45                  	// #69
  4576e4:	mov	x0, x19
  4576e8:	bl	456838 <ferror@plt+0x53fb8>
  4576ec:	mov	x3, x0
  4576f0:	b	457478 <ferror@plt+0x54bf8>
  4576f4:	cmp	w1, #0x70
  4576f8:	b.eq	45774c <ferror@plt+0x54ecc>  // b.none
  4576fc:	mov	x0, x19
  457700:	bl	457078 <ferror@plt+0x547f8>
  457704:	mov	x21, x0
  457708:	b	4575b0 <ferror@plt+0x54d30>
  45770c:	ldrb	w0, [x0]
  457710:	sub	w1, w0, #0x63
  457714:	sub	w0, w0, #0x72
  457718:	and	w1, w1, #0xff
  45771c:	and	w0, w0, #0xff
  457720:	cmp	w1, #0x1
  457724:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  457728:	b.hi	457568 <ferror@plt+0x54ce8>  // b.pmore
  45772c:	mov	x0, x19
  457730:	bl	4550d0 <ferror@plt+0x52850>
  457734:	mov	x22, x0
  457738:	b	457580 <ferror@plt+0x54d00>
  45773c:	mov	x0, x19
  457740:	bl	456020 <ferror@plt+0x537a0>
  457744:	mov	x22, x0
  457748:	b	457580 <ferror@plt+0x54d00>
  45774c:	ldrb	w0, [x21, #1]
  457750:	cmp	w0, #0x74
  457754:	b.ne	4576fc <ferror@plt+0x54e7c>  // b.any
  457758:	ldrb	w0, [x21, #2]
  45775c:	cbz	w0, 457680 <ferror@plt+0x54e00>
  457760:	b	4576fc <ferror@plt+0x54e7c>
  457764:	mov	x0, x19
  457768:	bl	456020 <ferror@plt+0x537a0>
  45776c:	b	45730c <ferror@plt+0x54a8c>
  457770:	ldrb	w0, [x1, #1]
  457774:	cmp	w0, #0x69
  457778:	b.ne	4571fc <ferror@plt+0x5497c>  // b.any
  45777c:	add	x1, x1, #0x2
  457780:	str	x1, [x19, #24]
  457784:	mov	x0, x19
  457788:	mov	w1, #0x45                  	// #69
  45778c:	bl	456838 <ferror@plt+0x53fb8>
  457790:	mov	x3, x0
  457794:	b	45732c <ferror@plt+0x54aac>
  457798:	add	x1, x1, #0x1
  45779c:	mov	x3, #0x0                   	// #0
  4577a0:	str	x1, [x19, #24]
  4577a4:	b	45732c <ferror@plt+0x54aac>
  4577a8:	stp	x29, x30, [sp, #-80]!
  4577ac:	mov	x29, sp
  4577b0:	ldr	x3, [x0, #24]
  4577b4:	stp	x19, x20, [sp, #16]
  4577b8:	mov	x19, x0
  4577bc:	stp	x21, x22, [sp, #32]
  4577c0:	mov	x20, x1
  4577c4:	mov	w22, #0x56                  	// #86
  4577c8:	stp	x23, x24, [sp, #48]
  4577cc:	mov	x23, x1
  4577d0:	mov	w24, w2
  4577d4:	stp	x25, x26, [sp, #64]
  4577d8:	mov	w21, #0x4b                  	// #75
  4577dc:	ldrb	w4, [x3]
  4577e0:	mov	w0, w4
  4577e4:	nop
  4577e8:	cmp	w0, #0x72
  4577ec:	ccmp	w0, w22, #0x4, ne  // ne = any
  4577f0:	ccmp	w0, w21, #0x4, ne  // ne = any
  4577f4:	b.eq	4578a0 <ferror@plt+0x55020>  // b.none
  4577f8:	cmp	w0, #0x44
  4577fc:	b.eq	457884 <ferror@plt+0x55004>  // b.none
  457800:	cmp	w4, #0x46
  457804:	eor	w24, w24, #0x1
  457808:	cset	w0, eq  // eq = none
  45780c:	tst	w24, w0
  457810:	b.eq	457868 <ferror@plt+0x54fe8>  // b.none
  457814:	cmp	x20, x23
  457818:	b.eq	457868 <ferror@plt+0x54fe8>  // b.none
  45781c:	mov	w3, #0x1d                  	// #29
  457820:	mov	w2, #0x1e                  	// #30
  457824:	mov	w1, #0x1c                  	// #28
  457828:	b	457840 <ferror@plt+0x54fc0>
  45782c:	cmp	w0, #0x19
  457830:	b.eq	457a94 <ferror@plt+0x55214>  // b.none
  457834:	add	x23, x23, #0x8
  457838:	cmp	x20, x23
  45783c:	b.eq	457868 <ferror@plt+0x54fe8>  // b.none
  457840:	ldr	x23, [x23]
  457844:	ldr	w0, [x23]
  457848:	cmp	w0, #0x1a
  45784c:	b.eq	457a8c <ferror@plt+0x5520c>  // b.none
  457850:	cmp	w0, #0x1b
  457854:	b.ne	45782c <ferror@plt+0x54fac>  // b.any
  457858:	str	w2, [x23]
  45785c:	add	x23, x23, #0x8
  457860:	cmp	x20, x23
  457864:	b.ne	457840 <ferror@plt+0x54fc0>  // b.any
  457868:	mov	x0, x20
  45786c:	ldp	x19, x20, [sp, #16]
  457870:	ldp	x21, x22, [sp, #32]
  457874:	ldp	x23, x24, [sp, #48]
  457878:	ldp	x25, x26, [sp, #64]
  45787c:	ldp	x29, x30, [sp], #80
  457880:	ret
  457884:	ldrb	w0, [x3, #1]
  457888:	and	w1, w0, #0xffffffdf
  45788c:	sub	w0, w0, #0x77
  457890:	cmp	w1, #0x4f
  457894:	and	w0, w0, #0xff
  457898:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  45789c:	b.hi	457800 <ferror@plt+0x54f80>  // b.pmore
  4578a0:	add	x5, x3, #0x1
  4578a4:	str	x5, [x19, #24]
  4578a8:	cmp	w4, #0x72
  4578ac:	b.eq	45796c <ferror@plt+0x550ec>  // b.none
  4578b0:	cmp	w4, #0x56
  4578b4:	b.eq	4579d0 <ferror@plt+0x55150>  // b.none
  4578b8:	cmp	w4, #0x4b
  4578bc:	b.eq	4579f8 <ferror@plt+0x55178>  // b.none
  4578c0:	ldrb	w0, [x3, #1]
  4578c4:	cbz	w0, 45794c <ferror@plt+0x550cc>
  4578c8:	add	x5, x3, #0x2
  4578cc:	str	x5, [x19, #24]
  4578d0:	ldrb	w25, [x3, #1]
  4578d4:	cmp	w25, #0x78
  4578d8:	b.eq	457a2c <ferror@plt+0x551ac>  // b.none
  4578dc:	and	w0, w25, #0xffffffdf
  4578e0:	cmp	w0, #0x4f
  4578e4:	and	w7, w0, #0xff
  4578e8:	b.ne	457a44 <ferror@plt+0x551c4>  // b.any
  4578ec:	ldr	w0, [x19, #72]
  4578f0:	cmp	w25, #0x4f
  4578f4:	add	w0, w0, #0x9
  4578f8:	str	w0, [x19, #72]
  4578fc:	b.ne	457a84 <ferror@plt+0x55204>  // b.any
  457900:	ldr	w26, [x19, #76]
  457904:	mov	w0, #0x1                   	// #1
  457908:	str	w0, [x19, #76]
  45790c:	mov	x0, x19
  457910:	bl	457078 <ferror@plt+0x547f8>
  457914:	str	w26, [x19, #76]
  457918:	cbz	x0, 45794c <ferror@plt+0x550cc>
  45791c:	ldr	x5, [x19, #24]
  457920:	ldrb	w1, [x5]
  457924:	cmp	w1, #0x45
  457928:	b.ne	45794c <ferror@plt+0x550cc>  // b.any
  45792c:	ldp	w3, w1, [x19, #40]
  457930:	add	x5, x5, #0x1
  457934:	str	x5, [x19, #24]
  457938:	mov	w7, w25
  45793c:	cmp	w3, w1
  457940:	b.lt	457994 <ferror@plt+0x55114>  // b.tstop
  457944:	nop
  457948:	str	xzr, [x20]
  45794c:	mov	x20, #0x0                   	// #0
  457950:	mov	x0, x20
  457954:	ldp	x19, x20, [sp, #16]
  457958:	ldp	x21, x22, [sp, #32]
  45795c:	ldp	x23, x24, [sp, #48]
  457960:	ldp	x25, x26, [sp, #64]
  457964:	ldp	x29, x30, [sp], #80
  457968:	ret
  45796c:	ldr	w0, [x19, #72]
  457970:	add	w3, w0, #0x9
  457974:	mov	x0, #0x0                   	// #0
  457978:	cbnz	w24, 4579ec <ferror@plt+0x5516c>
  45797c:	mov	w7, #0x19                  	// #25
  457980:	str	w3, [x19, #72]
  457984:	nop
  457988:	ldp	w3, w1, [x19, #40]
  45798c:	cmp	w3, w1
  457990:	b.ge	457948 <ferror@plt+0x550c8>  // b.tcont
  457994:	mov	w4, #0x18                  	// #24
  457998:	add	w8, w3, #0x1
  45799c:	ldr	x6, [x19, #32]
  4579a0:	smull	x3, w3, w4
  4579a4:	add	x4, x6, x3
  4579a8:	str	wzr, [x4, #4]
  4579ac:	str	w8, [x19, #40]
  4579b0:	str	w7, [x6, x3]
  4579b4:	stp	xzr, x0, [x4, #8]
  4579b8:	ldr	x3, [x19, #24]
  4579bc:	str	x4, [x20]
  4579c0:	add	x20, x4, #0x8
  4579c4:	ldrb	w4, [x5]
  4579c8:	ldrb	w0, [x3]
  4579cc:	b	4577e8 <ferror@plt+0x54f68>
  4579d0:	ldr	w1, [x19, #72]
  4579d4:	mov	x0, #0x0                   	// #0
  4579d8:	add	w1, w1, #0x9
  4579dc:	cbnz	w24, 457a14 <ferror@plt+0x55194>
  4579e0:	mov	w7, #0x1a                  	// #26
  4579e4:	str	w1, [x19, #72]
  4579e8:	b	457988 <ferror@plt+0x55108>
  4579ec:	mov	w7, #0x1c                  	// #28
  4579f0:	str	w3, [x19, #72]
  4579f4:	b	457988 <ferror@plt+0x55108>
  4579f8:	ldr	w0, [x19, #72]
  4579fc:	add	w1, w0, #0x6
  457a00:	mov	x0, #0x0                   	// #0
  457a04:	cbnz	w24, 457a20 <ferror@plt+0x551a0>
  457a08:	mov	w7, #0x1b                  	// #27
  457a0c:	str	w1, [x19, #72]
  457a10:	b	457988 <ferror@plt+0x55108>
  457a14:	mov	w7, #0x1d                  	// #29
  457a18:	str	w1, [x19, #72]
  457a1c:	b	457988 <ferror@plt+0x55108>
  457a20:	mov	w7, #0x1e                  	// #30
  457a24:	str	w1, [x19, #72]
  457a28:	b	457988 <ferror@plt+0x55108>
  457a2c:	ldr	w1, [x19, #72]
  457a30:	mov	x0, #0x0                   	// #0
  457a34:	mov	w7, #0x4d                  	// #77
  457a38:	add	w1, w1, #0x11
  457a3c:	str	w1, [x19, #72]
  457a40:	b	457988 <ferror@plt+0x55108>
  457a44:	cmp	w25, #0x77
  457a48:	b.ne	45794c <ferror@plt+0x550cc>  // b.any
  457a4c:	ldr	w1, [x19, #72]
  457a50:	mov	x0, x19
  457a54:	add	w1, w1, #0x6
  457a58:	str	w1, [x19, #72]
  457a5c:	bl	455ed0 <ferror@plt+0x53650>
  457a60:	cbz	x0, 45794c <ferror@plt+0x550cc>
  457a64:	ldr	x5, [x19, #24]
  457a68:	ldrb	w1, [x5]
  457a6c:	cmp	w1, #0x45
  457a70:	b.ne	45794c <ferror@plt+0x550cc>  // b.any
  457a74:	add	x5, x5, #0x1
  457a78:	mov	w7, #0x50                  	// #80
  457a7c:	str	x5, [x19, #24]
  457a80:	b	457988 <ferror@plt+0x55108>
  457a84:	mov	x0, #0x0                   	// #0
  457a88:	b	457988 <ferror@plt+0x55108>
  457a8c:	str	w3, [x23]
  457a90:	b	457834 <ferror@plt+0x54fb4>
  457a94:	str	w1, [x23]
  457a98:	b	457834 <ferror@plt+0x54fb4>
  457a9c:	nop
  457aa0:	stp	x29, x30, [sp, #-96]!
  457aa4:	mov	x29, sp
  457aa8:	ldr	x3, [x0, #24]
  457aac:	stp	x19, x20, [sp, #16]
  457ab0:	mov	x19, x0
  457ab4:	stp	x23, x24, [sp, #48]
  457ab8:	ldrb	w1, [x3]
  457abc:	ldr	x23, [x0, #64]
  457ac0:	cmp	w1, #0x45
  457ac4:	b.eq	457c14 <ferror@plt+0x55394>  // b.none
  457ac8:	add	x24, sp, #0x58
  457acc:	mov	w20, #0x2f                  	// #47
  457ad0:	stp	x21, x22, [sp, #32]
  457ad4:	mov	w22, #0x1                   	// #1
  457ad8:	mov	w21, #0x18                  	// #24
  457adc:	str	x25, [sp, #64]
  457ae0:	str	xzr, [sp, #88]
  457ae4:	nop
  457ae8:	cmp	w1, #0x4c
  457aec:	b.eq	457bcc <ferror@plt+0x5534c>  // b.none
  457af0:	b.hi	457b80 <ferror@plt+0x55300>  // b.pmore
  457af4:	sub	w1, w1, #0x49
  457af8:	and	w1, w1, #0xff
  457afc:	cmp	w1, #0x1
  457b00:	b.hi	457bc0 <ferror@plt+0x55340>  // b.pmore
  457b04:	add	x3, x3, #0x1
  457b08:	str	x3, [x19, #24]
  457b0c:	mov	x0, x19
  457b10:	bl	457aa0 <ferror@plt+0x55220>
  457b14:	cbz	x0, 457bf8 <ferror@plt+0x55378>
  457b18:	ldp	w1, w2, [x19, #40]
  457b1c:	cmp	w1, w2
  457b20:	b.ge	457bd8 <ferror@plt+0x55358>  // b.tcont
  457b24:	ldp	x3, x5, [x19, #24]
  457b28:	smull	x4, w1, w21
  457b2c:	add	w1, w1, #0x1
  457b30:	add	x2, x5, x4
  457b34:	str	wzr, [x2, #4]
  457b38:	str	w1, [x19, #40]
  457b3c:	str	w20, [x5, x4]
  457b40:	stp	x0, xzr, [x2, #8]
  457b44:	str	x2, [x24]
  457b48:	add	x24, x2, #0x10
  457b4c:	ldrb	w1, [x3]
  457b50:	cmp	w1, #0x45
  457b54:	b.ne	457ae8 <ferror@plt+0x55268>  // b.any
  457b58:	add	x3, x3, #0x1
  457b5c:	str	x3, [x19, #24]
  457b60:	str	x23, [x19, #64]
  457b64:	ldp	x19, x20, [sp, #16]
  457b68:	ldp	x21, x22, [sp, #32]
  457b6c:	ldp	x23, x24, [sp, #48]
  457b70:	ldr	x25, [sp, #64]
  457b74:	ldr	x0, [sp, #88]
  457b78:	ldp	x29, x30, [sp], #96
  457b7c:	ret
  457b80:	cmp	w1, #0x58
  457b84:	b.ne	457bc0 <ferror@plt+0x55340>  // b.any
  457b88:	add	x3, x3, #0x1
  457b8c:	ldr	w25, [x19, #76]
  457b90:	str	x3, [x19, #24]
  457b94:	mov	x0, x19
  457b98:	str	w22, [x19, #76]
  457b9c:	bl	457078 <ferror@plt+0x547f8>
  457ba0:	str	w25, [x19, #76]
  457ba4:	ldr	x1, [x19, #24]
  457ba8:	ldrb	w2, [x1]
  457bac:	cmp	w2, #0x45
  457bb0:	b.ne	457bf8 <ferror@plt+0x55378>  // b.any
  457bb4:	add	x1, x1, #0x1
  457bb8:	str	x1, [x19, #24]
  457bbc:	b	457b14 <ferror@plt+0x55294>
  457bc0:	mov	x0, x19
  457bc4:	bl	4550d0 <ferror@plt+0x52850>
  457bc8:	b	457b14 <ferror@plt+0x55294>
  457bcc:	mov	x0, x19
  457bd0:	bl	4590c0 <ferror@plt+0x56840>
  457bd4:	b	457b14 <ferror@plt+0x55294>
  457bd8:	str	xzr, [x24]
  457bdc:	mov	x0, #0x0                   	// #0
  457be0:	ldp	x19, x20, [sp, #16]
  457be4:	ldp	x21, x22, [sp, #32]
  457be8:	ldp	x23, x24, [sp, #48]
  457bec:	ldr	x25, [sp, #64]
  457bf0:	ldp	x29, x30, [sp], #96
  457bf4:	ret
  457bf8:	mov	x0, #0x0                   	// #0
  457bfc:	ldp	x19, x20, [sp, #16]
  457c00:	ldp	x21, x22, [sp, #32]
  457c04:	ldp	x23, x24, [sp, #48]
  457c08:	ldr	x25, [sp, #64]
  457c0c:	ldp	x29, x30, [sp], #96
  457c10:	ret
  457c14:	add	x3, x3, #0x1
  457c18:	mov	x2, #0x0                   	// #0
  457c1c:	ldp	x23, x24, [sp, #48]
  457c20:	str	x3, [x0, #24]
  457c24:	ldp	x19, x20, [sp, #16]
  457c28:	mov	w1, #0x2f                  	// #47
  457c2c:	ldp	x29, x30, [sp], #96
  457c30:	mov	x3, #0x0                   	// #0
  457c34:	b	447fa8 <ferror@plt+0x45728>
  457c38:	stp	x29, x30, [sp, #-32]!
  457c3c:	mov	x29, sp
  457c40:	ldr	w3, [x0, #72]
  457c44:	ldr	x2, [x0, #24]
  457c48:	stp	x19, x20, [sp, #16]
  457c4c:	add	w1, w3, #0x14
  457c50:	str	w1, [x0, #72]
  457c54:	mov	x19, x0
  457c58:	ldrb	w1, [x2]
  457c5c:	cmp	w1, #0x54
  457c60:	b.eq	457f00 <ferror@plt+0x55680>  // b.none
  457c64:	cmp	w1, #0x47
  457c68:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  457c6c:	add	x1, x2, #0x1
  457c70:	str	x1, [x0, #24]
  457c74:	ldrb	w1, [x2, #1]
  457c78:	cbz	w1, 457e08 <ferror@plt+0x55588>
  457c7c:	add	x1, x2, #0x2
  457c80:	str	x1, [x0, #24]
  457c84:	ldrb	w3, [x2, #1]
  457c88:	cmp	w3, #0x54
  457c8c:	b.eq	4580b4 <ferror@plt+0x55834>  // b.none
  457c90:	b.ls	457e18 <ferror@plt+0x55598>  // b.plast
  457c94:	cmp	w3, #0x56
  457c98:	b.eq	458094 <ferror@plt+0x55814>  // b.none
  457c9c:	cmp	w3, #0x72
  457ca0:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  457ca4:	ldrb	w5, [x2, #2]
  457ca8:	mov	w9, #0x0                   	// #0
  457cac:	cmp	w5, #0x6e
  457cb0:	b.eq	45825c <ferror@plt+0x559dc>  // b.none
  457cb4:	sub	w0, w5, #0x30
  457cb8:	and	w0, w0, #0xff
  457cbc:	cmp	w0, #0x9
  457cc0:	b.hi	457e08 <ferror@plt+0x55588>  // b.pmore
  457cc4:	mov	w8, #0xcccd                	// #52429
  457cc8:	add	x1, x1, #0x1
  457ccc:	mov	w0, #0x0                   	// #0
  457cd0:	mov	w7, #0x7fffffff            	// #2147483647
  457cd4:	movk	w8, #0xcccc, lsl #16
  457cd8:	b	457cf0 <ferror@plt+0x55470>
  457cdc:	umull	x2, w2, w8
  457ce0:	add	x1, x1, #0x1
  457ce4:	lsr	x2, x2, #35
  457ce8:	cmp	w2, w0
  457cec:	b.lt	457e08 <ferror@plt+0x55588>  // b.tstop
  457cf0:	str	x1, [x19, #24]
  457cf4:	add	w0, w0, w0, lsl #2
  457cf8:	ldrb	w4, [x1]
  457cfc:	add	w6, w5, w0, lsl #1
  457d00:	sub	w0, w6, #0x30
  457d04:	sub	w3, w4, #0x30
  457d08:	mov	w5, w4
  457d0c:	sub	w2, w7, w3
  457d10:	and	w3, w3, #0xff
  457d14:	cmp	w3, #0x9
  457d18:	b.ls	457cdc <ferror@plt+0x5545c>  // b.plast
  457d1c:	cmp	w9, #0x0
  457d20:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  457d24:	b.le	457e08 <ferror@plt+0x55588>
  457d28:	cbz	w4, 457e08 <ferror@plt+0x55588>
  457d2c:	add	x9, x1, #0x1
  457d30:	str	x9, [x19, #24]
  457d34:	ldrb	w0, [x1]
  457d38:	cmp	w0, #0x5f
  457d3c:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  457d40:	sub	w8, w6, #0x31
  457d44:	mov	x2, #0x0                   	// #0
  457d48:	mov	w11, #0x18                  	// #24
  457d4c:	mov	w10, #0x41                  	// #65
  457d50:	ldrb	w0, [x9]
  457d54:	cbz	w0, 457e08 <ferror@plt+0x55588>
  457d58:	cmp	w0, #0x24
  457d5c:	b.ne	4582d4 <ferror@plt+0x55a54>  // b.any
  457d60:	ldrb	w0, [x9, #1]
  457d64:	cmp	w0, #0x53
  457d68:	b.eq	458354 <ferror@plt+0x55ad4>  // b.none
  457d6c:	cmp	w0, #0x5f
  457d70:	b.eq	458344 <ferror@plt+0x55ac4>  // b.none
  457d74:	cmp	w0, #0x24
  457d78:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  457d7c:	ldp	w1, w3, [x19, #40]
  457d80:	ldr	x9, [x19, #24]
  457d84:	cmp	w1, w3
  457d88:	add	x9, x9, #0x2
  457d8c:	b.ge	458428 <ferror@plt+0x55ba8>  // b.tcont
  457d90:	ldr	x5, [x19, #32]
  457d94:	smull	x4, w1, w11
  457d98:	add	w1, w1, #0x1
  457d9c:	sub	w8, w8, #0x2
  457da0:	add	x3, x5, x4
  457da4:	str	wzr, [x3, #4]
  457da8:	str	w1, [x19, #40]
  457dac:	str	w10, [x5, x4]
  457db0:	str	w0, [x3, #8]
  457db4:	str	x9, [x19, #24]
  457db8:	cbz	x2, 45833c <ferror@plt+0x55abc>
  457dbc:	mov	x0, x19
  457dc0:	mov	w1, #0x40                  	// #64
  457dc4:	bl	447fa8 <ferror@plt+0x45728>
  457dc8:	mov	x2, x0
  457dcc:	cbz	x0, 457e08 <ferror@plt+0x55588>
  457dd0:	cmp	w8, #0x0
  457dd4:	b.gt	457d50 <ferror@plt+0x554d0>
  457dd8:	mov	x0, x19
  457ddc:	mov	x3, #0x0                   	// #0
  457de0:	ldp	x19, x20, [sp, #16]
  457de4:	mov	w1, #0x3f                  	// #63
  457de8:	ldp	x29, x30, [sp], #32
  457dec:	b	447fa8 <ferror@plt+0x45728>
  457df0:	ldp	w3, w0, [x19, #40]
  457df4:	cmp	w0, w3
  457df8:	b.gt	45830c <ferror@plt+0x55a8c>
  457dfc:	ldr	x0, [x19, #24]
  457e00:	add	x1, x0, x1
  457e04:	str	x1, [x19, #24]
  457e08:	mov	x0, #0x0                   	// #0
  457e0c:	ldp	x19, x20, [sp, #16]
  457e10:	ldp	x29, x30, [sp], #32
  457e14:	ret
  457e18:	cmp	w3, #0x41
  457e1c:	b.eq	4580f8 <ferror@plt+0x55878>  // b.none
  457e20:	cmp	w3, #0x52
  457e24:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  457e28:	bl	4586c0 <ferror@plt+0x55e40>
  457e2c:	mov	x2, x0
  457e30:	ldp	w1, w0, [x19, #40]
  457e34:	cmp	w1, w0
  457e38:	b.ge	458298 <ferror@plt+0x55a18>  // b.tcont
  457e3c:	ldp	x6, x0, [x19, #24]
  457e40:	mov	w3, #0x18                  	// #24
  457e44:	add	w5, w1, #0x1
  457e48:	mov	w4, #0x42                  	// #66
  457e4c:	smull	x1, w1, w3
  457e50:	add	x3, x0, x1
  457e54:	str	wzr, [x3, #4]
  457e58:	str	w5, [x19, #40]
  457e5c:	str	w4, [x0, x1]
  457e60:	ldrb	w1, [x6]
  457e64:	cmp	w1, #0x6e
  457e68:	b.eq	458270 <ferror@plt+0x559f0>  // b.none
  457e6c:	sub	w0, w1, #0x30
  457e70:	and	w0, w0, #0xff
  457e74:	cmp	w0, #0x9
  457e78:	b.hi	458468 <ferror@plt+0x55be8>  // b.pmore
  457e7c:	mov	w0, #0x0                   	// #0
  457e80:	mov	w9, #0xcccd                	// #52429
  457e84:	mov	w7, w1
  457e88:	add	x6, x6, #0x1
  457e8c:	mov	w1, #0x0                   	// #0
  457e90:	mov	w8, #0x7fffffff            	// #2147483647
  457e94:	movk	w9, #0xcccc, lsl #16
  457e98:	b	457eac <ferror@plt+0x5562c>
  457e9c:	umull	x4, w4, w9
  457ea0:	lsr	x4, x4, #35
  457ea4:	cmp	w4, w1
  457ea8:	b.lt	45834c <ferror@plt+0x55acc>  // b.tstop
  457eac:	str	x6, [x19, #24]
  457eb0:	add	w1, w1, w1, lsl #2
  457eb4:	add	x6, x6, #0x1
  457eb8:	ldurb	w4, [x6, #-1]
  457ebc:	add	w1, w7, w1, lsl #1
  457ec0:	sub	w1, w1, #0x30
  457ec4:	sub	w5, w4, #0x30
  457ec8:	mov	w7, w4
  457ecc:	sub	w4, w8, w5
  457ed0:	and	w5, w5, #0xff
  457ed4:	cmp	w5, #0x9
  457ed8:	b.ls	457e9c <ferror@plt+0x5561c>  // b.plast
  457edc:	cbz	w0, 457ee4 <ferror@plt+0x55664>
  457ee0:	neg	w1, w1
  457ee4:	sxtw	x1, w1
  457ee8:	str	x1, [x3, #8]
  457eec:	mov	x0, x19
  457ef0:	mov	w1, #0x16                  	// #22
  457ef4:	ldp	x19, x20, [sp, #16]
  457ef8:	ldp	x29, x30, [sp], #32
  457efc:	b	447fa8 <ferror@plt+0x45728>
  457f00:	add	x1, x2, #0x1
  457f04:	str	x1, [x0, #24]
  457f08:	ldrb	w1, [x2, #1]
  457f0c:	cbz	w1, 457e08 <ferror@plt+0x55588>
  457f10:	add	x1, x2, #0x2
  457f14:	str	x1, [x0, #24]
  457f18:	ldrb	w1, [x2, #1]
  457f1c:	cmp	w1, #0x53
  457f20:	b.eq	4583e8 <ferror@plt+0x55b68>  // b.none
  457f24:	b.ls	457f74 <ferror@plt+0x556f4>  // b.plast
  457f28:	cmp	w1, #0x63
  457f2c:	b.eq	4583a4 <ferror@plt+0x55b24>  // b.none
  457f30:	b.ls	457fe0 <ferror@plt+0x55760>  // b.plast
  457f34:	cmp	w1, #0x68
  457f38:	b.eq	45813c <ferror@plt+0x558bc>  // b.none
  457f3c:	cmp	w1, #0x76
  457f40:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  457f44:	bl	448be0 <ferror@plt+0x46360>
  457f48:	cbz	w0, 457e08 <ferror@plt+0x55588>
  457f4c:	mov	x0, x19
  457f50:	mov	w1, #0x0                   	// #0
  457f54:	bl	458488 <ferror@plt+0x55c08>
  457f58:	mov	x2, x0
  457f5c:	mov	x0, x19
  457f60:	mov	x3, #0x0                   	// #0
  457f64:	ldp	x19, x20, [sp, #16]
  457f68:	mov	w1, #0x10                  	// #16
  457f6c:	ldp	x29, x30, [sp], #32
  457f70:	b	447fa8 <ferror@plt+0x45728>
  457f74:	cmp	w1, #0x48
  457f78:	b.eq	458408 <ferror@plt+0x55b88>  // b.none
  457f7c:	b.ls	457fb0 <ferror@plt+0x55730>  // b.plast
  457f80:	cmp	w1, #0x49
  457f84:	b.eq	45811c <ferror@plt+0x5589c>  // b.none
  457f88:	cmp	w1, #0x4a
  457f8c:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  457f90:	bl	4550d0 <ferror@plt+0x52850>
  457f94:	mov	x2, x0
  457f98:	mov	x0, x19
  457f9c:	mov	x3, #0x0                   	// #0
  457fa0:	ldp	x19, x20, [sp, #16]
  457fa4:	mov	w1, #0x12                  	// #18
  457fa8:	ldp	x29, x30, [sp], #32
  457fac:	b	447fa8 <ferror@plt+0x45728>
  457fb0:	cmp	w1, #0x43
  457fb4:	b.eq	458194 <ferror@plt+0x55914>  // b.none
  457fb8:	cmp	w1, #0x46
  457fbc:	b.ne	458010 <ferror@plt+0x55790>  // b.any
  457fc0:	bl	4550d0 <ferror@plt+0x52850>
  457fc4:	mov	x2, x0
  457fc8:	mov	x0, x19
  457fcc:	mov	x3, #0x0                   	// #0
  457fd0:	ldp	x19, x20, [sp, #16]
  457fd4:	mov	w1, #0xe                   	// #14
  457fd8:	ldp	x29, x30, [sp], #32
  457fdc:	b	447fa8 <ferror@plt+0x45728>
  457fe0:	cmp	w1, #0x56
  457fe4:	b.eq	45816c <ferror@plt+0x558ec>  // b.none
  457fe8:	cmp	w1, #0x57
  457fec:	b.ne	458064 <ferror@plt+0x557e4>  // b.any
  457ff0:	bl	4586c0 <ferror@plt+0x55e40>
  457ff4:	mov	x2, x0
  457ff8:	mov	x0, x19
  457ffc:	mov	x3, #0x0                   	// #0
  458000:	ldp	x19, x20, [sp, #16]
  458004:	mov	w1, #0x15                  	// #21
  458008:	ldp	x29, x30, [sp], #32
  45800c:	b	447fa8 <ferror@plt+0x45728>
  458010:	cmp	w1, #0x41
  458014:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  458018:	ldrb	w0, [x2, #2]
  45801c:	cmp	w0, #0x4c
  458020:	b.eq	4582c4 <ferror@plt+0x55a44>  // b.none
  458024:	b.hi	45835c <ferror@plt+0x55adc>  // b.pmore
  458028:	sub	w0, w0, #0x49
  45802c:	and	w0, w0, #0xff
  458030:	cmp	w0, #0x1
  458034:	b.hi	458458 <ferror@plt+0x55bd8>  // b.pmore
  458038:	add	x2, x2, #0x3
  45803c:	str	x2, [x19, #24]
  458040:	mov	x0, x19
  458044:	bl	457aa0 <ferror@plt+0x55220>
  458048:	mov	x2, x0
  45804c:	mov	x0, x19
  458050:	mov	x3, #0x0                   	// #0
  458054:	ldp	x19, x20, [sp, #16]
  458058:	mov	w1, #0x30                  	// #48
  45805c:	ldp	x29, x30, [sp], #32
  458060:	b	447fa8 <ferror@plt+0x45728>
  458064:	cmp	w1, #0x54
  458068:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  45806c:	add	w3, w3, #0xa
  458070:	str	w3, [x0, #72]
  458074:	bl	4550d0 <ferror@plt+0x52850>
  458078:	mov	x2, x0
  45807c:	mov	x0, x19
  458080:	mov	x3, #0x0                   	// #0
  458084:	ldp	x19, x20, [sp, #16]
  458088:	mov	w1, #0xa                   	// #10
  45808c:	ldp	x29, x30, [sp], #32
  458090:	b	447fa8 <ferror@plt+0x45728>
  458094:	bl	4586c0 <ferror@plt+0x55e40>
  458098:	mov	x2, x0
  45809c:	mov	x0, x19
  4580a0:	mov	x3, #0x0                   	// #0
  4580a4:	ldp	x19, x20, [sp, #16]
  4580a8:	mov	w1, #0x13                  	// #19
  4580ac:	ldp	x29, x30, [sp], #32
  4580b0:	b	447fa8 <ferror@plt+0x45728>
  4580b4:	ldrb	w1, [x2, #2]
  4580b8:	cbz	w1, 4580d0 <ferror@plt+0x55850>
  4580bc:	add	x1, x2, #0x3
  4580c0:	str	x1, [x0, #24]
  4580c4:	ldrb	w1, [x2, #2]
  4580c8:	cmp	w1, #0x6e
  4580cc:	b.eq	4582a0 <ferror@plt+0x55a20>  // b.none
  4580d0:	mov	x0, x19
  4580d4:	mov	w1, #0x0                   	// #0
  4580d8:	bl	458488 <ferror@plt+0x55c08>
  4580dc:	mov	x2, x0
  4580e0:	mov	x0, x19
  4580e4:	mov	x3, #0x0                   	// #0
  4580e8:	ldp	x19, x20, [sp, #16]
  4580ec:	mov	w1, #0x49                  	// #73
  4580f0:	ldp	x29, x30, [sp], #32
  4580f4:	b	447fa8 <ferror@plt+0x45728>
  4580f8:	mov	w1, #0x0                   	// #0
  4580fc:	bl	458488 <ferror@plt+0x55c08>
  458100:	mov	x2, x0
  458104:	mov	x0, x19
  458108:	ldp	x19, x20, [sp, #16]
  45810c:	mov	x3, #0x0                   	// #0
  458110:	ldp	x29, x30, [sp], #32
  458114:	mov	w1, #0x17                  	// #23
  458118:	b	447fa8 <ferror@plt+0x45728>
  45811c:	bl	4550d0 <ferror@plt+0x52850>
  458120:	mov	x2, x0
  458124:	mov	x0, x19
  458128:	mov	x3, #0x0                   	// #0
  45812c:	ldp	x19, x20, [sp, #16]
  458130:	mov	w1, #0xc                   	// #12
  458134:	ldp	x29, x30, [sp], #32
  458138:	b	447fa8 <ferror@plt+0x45728>
  45813c:	bl	448be0 <ferror@plt+0x46360>
  458140:	cbz	w0, 457e08 <ferror@plt+0x55588>
  458144:	mov	x0, x19
  458148:	mov	w1, #0x0                   	// #0
  45814c:	bl	458488 <ferror@plt+0x55c08>
  458150:	mov	x2, x0
  458154:	mov	x0, x19
  458158:	mov	x3, #0x0                   	// #0
  45815c:	ldp	x19, x20, [sp, #16]
  458160:	mov	w1, #0xf                   	// #15
  458164:	ldp	x29, x30, [sp], #32
  458168:	b	447fa8 <ferror@plt+0x45728>
  45816c:	add	w3, w3, #0xf
  458170:	str	w3, [x0, #72]
  458174:	bl	4550d0 <ferror@plt+0x52850>
  458178:	mov	x2, x0
  45817c:	mov	x0, x19
  458180:	mov	x3, #0x0                   	// #0
  458184:	ldp	x19, x20, [sp, #16]
  458188:	mov	w1, #0x9                   	// #9
  45818c:	ldp	x29, x30, [sp], #32
  458190:	b	447fa8 <ferror@plt+0x45728>
  458194:	bl	4550d0 <ferror@plt+0x52850>
  458198:	mov	x20, x0
  45819c:	ldr	x5, [x19, #24]
  4581a0:	ldrb	w6, [x5]
  4581a4:	cmp	w6, #0x6e
  4581a8:	b.eq	458430 <ferror@plt+0x55bb0>  // b.none
  4581ac:	sub	w0, w6, #0x30
  4581b0:	and	w0, w0, #0xff
  4581b4:	cmp	w0, #0x9
  4581b8:	b.hi	45821c <ferror@plt+0x5599c>  // b.pmore
  4581bc:	mov	w0, #0x0                   	// #0
  4581c0:	mov	w9, #0xcccd                	// #52429
  4581c4:	mov	w1, #0x0                   	// #0
  4581c8:	mov	w8, #0x7fffffff            	// #2147483647
  4581cc:	movk	w9, #0xcccc, lsl #16
  4581d0:	b	4581e4 <ferror@plt+0x55964>
  4581d4:	umull	x2, w2, w9
  4581d8:	lsr	x2, x2, #35
  4581dc:	cmp	w2, w1
  4581e0:	b.lt	457e08 <ferror@plt+0x55588>  // b.tstop
  4581e4:	add	x5, x5, #0x1
  4581e8:	add	w1, w1, w1, lsl #2
  4581ec:	str	x5, [x19, #24]
  4581f0:	add	w7, w6, w1, lsl #1
  4581f4:	ldrb	w6, [x5]
  4581f8:	sub	w1, w7, #0x30
  4581fc:	sub	w4, w6, #0x30
  458200:	sub	w2, w8, w4
  458204:	and	w4, w4, #0xff
  458208:	cmp	w4, #0x9
  45820c:	b.ls	4581d4 <ferror@plt+0x55954>  // b.plast
  458210:	cbz	w0, 45821c <ferror@plt+0x5599c>
  458214:	cmp	w7, #0x30
  458218:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  45821c:	cmp	w6, #0x5f
  458220:	b.ne	457e08 <ferror@plt+0x55588>  // b.any
  458224:	add	x5, x5, #0x1
  458228:	str	x5, [x19, #24]
  45822c:	mov	x0, x19
  458230:	bl	4550d0 <ferror@plt+0x52850>
  458234:	mov	x2, x0
  458238:	ldr	w1, [x19, #72]
  45823c:	mov	x3, x20
  458240:	mov	x0, x19
  458244:	add	w1, w1, #0x5
  458248:	str	w1, [x19, #72]
  45824c:	ldp	x19, x20, [sp, #16]
  458250:	mov	w1, #0xb                   	// #11
  458254:	ldp	x29, x30, [sp], #32
  458258:	b	447fa8 <ferror@plt+0x45728>
  45825c:	add	x1, x2, #0x3
  458260:	str	x1, [x0, #24]
  458264:	mov	w9, #0x1                   	// #1
  458268:	ldrb	w5, [x2, #3]
  45826c:	b	457cb4 <ferror@plt+0x55434>
  458270:	add	x4, x6, #0x1
  458274:	str	x4, [x19, #24]
  458278:	ldrb	w1, [x6, #1]
  45827c:	sub	w0, w1, #0x30
  458280:	and	w0, w0, #0xff
  458284:	cmp	w0, #0x9
  458288:	b.hi	458478 <ferror@plt+0x55bf8>  // b.pmore
  45828c:	mov	x6, x4
  458290:	mov	w0, #0x1                   	// #1
  458294:	b	457e80 <ferror@plt+0x55600>
  458298:	mov	x3, #0x0                   	// #0
  45829c:	b	457eec <ferror@plt+0x5566c>
  4582a0:	mov	w1, #0x0                   	// #0
  4582a4:	bl	458488 <ferror@plt+0x55c08>
  4582a8:	mov	x2, x0
  4582ac:	mov	x0, x19
  4582b0:	ldp	x19, x20, [sp, #16]
  4582b4:	mov	x3, #0x0                   	// #0
  4582b8:	ldp	x29, x30, [sp], #32
  4582bc:	mov	w1, #0x4a                  	// #74
  4582c0:	b	447fa8 <ferror@plt+0x45728>
  4582c4:	mov	x0, x19
  4582c8:	bl	4590c0 <ferror@plt+0x56840>
  4582cc:	mov	x2, x0
  4582d0:	b	45804c <ferror@plt+0x557cc>
  4582d4:	mov	x1, #0x1                   	// #1
  4582d8:	b	4582e0 <ferror@plt+0x55a60>
  4582dc:	mov	x1, x4
  4582e0:	cmp	w8, w1
  4582e4:	mov	w5, w1
  4582e8:	b.le	457df0 <ferror@plt+0x55570>
  4582ec:	ldrb	w3, [x9, x1]
  4582f0:	add	x4, x1, #0x1
  4582f4:	cmp	w3, #0x24
  4582f8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  4582fc:	b.ne	4582dc <ferror@plt+0x55a5c>  // b.any
  458300:	ldp	w3, w0, [x19, #40]
  458304:	cmp	w3, w0
  458308:	b.ge	457dfc <ferror@plt+0x5557c>  // b.tcont
  45830c:	ldr	x4, [x19, #32]
  458310:	add	w0, w3, #0x1
  458314:	sub	w8, w8, w5
  458318:	smaddl	x3, w3, w11, x4
  45831c:	str	wzr, [x3, #4]
  458320:	str	w0, [x19, #40]
  458324:	stp	xzr, x9, [x3]
  458328:	ldr	x9, [x19, #24]
  45832c:	str	w5, [x3, #16]
  458330:	add	x9, x9, x1
  458334:	str	x9, [x19, #24]
  458338:	b	457db8 <ferror@plt+0x55538>
  45833c:	mov	x2, x3
  458340:	b	457dd0 <ferror@plt+0x55550>
  458344:	mov	w0, #0x2e                  	// #46
  458348:	b	457d7c <ferror@plt+0x554fc>
  45834c:	mov	x1, #0xffffffffffffffff    	// #-1
  458350:	b	457ee8 <ferror@plt+0x55668>
  458354:	mov	w0, #0x2f                  	// #47
  458358:	b	457d7c <ferror@plt+0x554fc>
  45835c:	cmp	w0, #0x58
  458360:	b.ne	458458 <ferror@plt+0x55bd8>  // b.any
  458364:	add	x2, x2, #0x3
  458368:	ldr	w20, [x19, #76]
  45836c:	mov	w1, #0x1                   	// #1
  458370:	str	x2, [x19, #24]
  458374:	str	w1, [x19, #76]
  458378:	mov	x0, x19
  45837c:	bl	457078 <ferror@plt+0x547f8>
  458380:	str	w20, [x19, #76]
  458384:	ldr	x1, [x19, #24]
  458388:	mov	x2, x0
  45838c:	ldrb	w0, [x1]
  458390:	cmp	w0, #0x45
  458394:	b.ne	458470 <ferror@plt+0x55bf0>  // b.any
  458398:	add	x1, x1, #0x1
  45839c:	str	x1, [x19, #24]
  4583a0:	b	45804c <ferror@plt+0x557cc>
  4583a4:	mov	w1, #0x0                   	// #0
  4583a8:	bl	448be0 <ferror@plt+0x46360>
  4583ac:	cbz	w0, 457e08 <ferror@plt+0x55588>
  4583b0:	mov	x0, x19
  4583b4:	mov	w1, #0x0                   	// #0
  4583b8:	bl	448be0 <ferror@plt+0x46360>
  4583bc:	cbz	w0, 457e08 <ferror@plt+0x55588>
  4583c0:	mov	x0, x19
  4583c4:	mov	w1, #0x0                   	// #0
  4583c8:	bl	458488 <ferror@plt+0x55c08>
  4583cc:	mov	x2, x0
  4583d0:	mov	x0, x19
  4583d4:	mov	x3, #0x0                   	// #0
  4583d8:	ldp	x19, x20, [sp, #16]
  4583dc:	mov	w1, #0x11                  	// #17
  4583e0:	ldp	x29, x30, [sp], #32
  4583e4:	b	447fa8 <ferror@plt+0x45728>
  4583e8:	bl	4550d0 <ferror@plt+0x52850>
  4583ec:	mov	x2, x0
  4583f0:	mov	x0, x19
  4583f4:	mov	x3, #0x0                   	// #0
  4583f8:	ldp	x19, x20, [sp, #16]
  4583fc:	mov	w1, #0xd                   	// #13
  458400:	ldp	x29, x30, [sp], #32
  458404:	b	447fa8 <ferror@plt+0x45728>
  458408:	bl	4586c0 <ferror@plt+0x55e40>
  45840c:	mov	x2, x0
  458410:	mov	x0, x19
  458414:	mov	x3, #0x0                   	// #0
  458418:	ldp	x19, x20, [sp, #16]
  45841c:	mov	w1, #0x14                  	// #20
  458420:	ldp	x29, x30, [sp], #32
  458424:	b	447fa8 <ferror@plt+0x45728>
  458428:	str	x9, [x19, #24]
  45842c:	b	457e08 <ferror@plt+0x55588>
  458430:	add	x1, x5, #0x1
  458434:	str	x1, [x19, #24]
  458438:	ldrb	w6, [x5, #1]
  45843c:	mov	x5, x1
  458440:	sub	w0, w6, #0x30
  458444:	and	w0, w0, #0xff
  458448:	cmp	w0, #0x9
  45844c:	b.hi	45821c <ferror@plt+0x5599c>  // b.pmore
  458450:	mov	w0, #0x1                   	// #1
  458454:	b	4581c0 <ferror@plt+0x55940>
  458458:	mov	x0, x19
  45845c:	bl	4550d0 <ferror@plt+0x52850>
  458460:	mov	x2, x0
  458464:	b	45804c <ferror@plt+0x557cc>
  458468:	mov	x1, #0x0                   	// #0
  45846c:	b	457ee8 <ferror@plt+0x55668>
  458470:	mov	x2, #0x0                   	// #0
  458474:	b	45804c <ferror@plt+0x557cc>
  458478:	mov	w1, #0x0                   	// #0
  45847c:	neg	w1, w1
  458480:	b	457ee4 <ferror@plt+0x55664>
  458484:	nop
  458488:	ldr	x2, [x0, #24]
  45848c:	mov	w3, #0x54                  	// #84
  458490:	ldrb	w2, [x2]
  458494:	cmp	w2, #0x47
  458498:	ccmp	w2, w3, #0x4, ne  // ne = any
  45849c:	b.ne	4584a4 <ferror@plt+0x55c24>  // b.any
  4584a0:	b	457c38 <ferror@plt+0x553b8>
  4584a4:	stp	x29, x30, [sp, #-48]!
  4584a8:	mov	x29, sp
  4584ac:	stp	x19, x20, [sp, #16]
  4584b0:	mov	x19, x0
  4584b4:	mov	w20, w1
  4584b8:	stp	x21, x22, [sp, #32]
  4584bc:	bl	4586c0 <ferror@plt+0x55e40>
  4584c0:	mov	x21, x0
  4584c4:	cbz	x0, 458580 <ferror@plt+0x55d00>
  4584c8:	cbz	w20, 458518 <ferror@plt+0x55c98>
  4584cc:	ldr	w0, [x19, #16]
  4584d0:	tbnz	w0, #0, 458518 <ferror@plt+0x55c98>
  4584d4:	mov	x0, #0x1f                  	// #31
  4584d8:	mov	x2, #0x1                   	// #1
  4584dc:	movk	x0, #0x1a, lsl #48
  4584e0:	ldr	w3, [x21]
  4584e4:	sub	w1, w3, #0x1c
  4584e8:	cmp	w1, #0x34
  4584ec:	b.hi	4584fc <ferror@plt+0x55c7c>  // b.pmore
  4584f0:	lsl	x1, x2, x1
  4584f4:	tst	x1, x0
  4584f8:	b.ne	458630 <ferror@plt+0x55db0>  // b.any
  4584fc:	cmp	w3, #0x2
  458500:	b.eq	458638 <ferror@plt+0x55db8>  // b.none
  458504:	mov	x0, x21
  458508:	ldp	x19, x20, [sp, #16]
  45850c:	ldp	x21, x22, [sp, #32]
  458510:	ldp	x29, x30, [sp], #48
  458514:	ret
  458518:	ldr	x5, [x19, #24]
  45851c:	ldrb	w1, [x5]
  458520:	cmp	w1, #0x45
  458524:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  458528:	b.eq	458504 <ferror@plt+0x55c84>  // b.none
  45852c:	mov	x0, #0x1f                  	// #31
  458530:	mov	x22, x21
  458534:	mov	x2, #0x1                   	// #1
  458538:	movk	x0, #0x1a, lsl #48
  45853c:	ldr	w4, [x22]
  458540:	cmp	w4, #0x4
  458544:	b.eq	458680 <ferror@plt+0x55e00>  // b.none
  458548:	sub	w3, w4, #0x1c
  45854c:	b.hi	458610 <ferror@plt+0x55d90>  // b.pmore
  458550:	cmp	w4, #0x2
  458554:	b.ne	4585a0 <ferror@plt+0x55d20>  // b.any
  458558:	ldr	x22, [x22, #16]
  45855c:	cbnz	x22, 45853c <ferror@plt+0x55cbc>
  458560:	cmp	w1, #0x4a
  458564:	b.ne	4585ac <ferror@plt+0x55d2c>  // b.any
  458568:	add	x5, x5, #0x1
  45856c:	str	x5, [x19, #24]
  458570:	mov	x0, x19
  458574:	bl	4550d0 <ferror@plt+0x52850>
  458578:	mov	x22, x0
  45857c:	cbnz	x0, 4585ac <ferror@plt+0x55d2c>
  458580:	mov	x21, #0x0                   	// #0
  458584:	mov	x0, x21
  458588:	ldp	x19, x20, [sp, #16]
  45858c:	ldp	x21, x22, [sp, #32]
  458590:	ldp	x29, x30, [sp], #48
  458594:	ret
  458598:	cmp	w0, #0x35
  45859c:	b.ne	4586b0 <ferror@plt+0x55e30>  // b.any
  4585a0:	cmp	w1, #0x4a
  4585a4:	mov	x22, #0x0                   	// #0
  4585a8:	b.eq	458568 <ferror@plt+0x55ce8>  // b.none
  4585ac:	mov	x0, x19
  4585b0:	bl	455ed0 <ferror@plt+0x53650>
  4585b4:	mov	x3, x0
  4585b8:	cbz	x0, 458580 <ferror@plt+0x55d00>
  4585bc:	mov	x2, x22
  4585c0:	mov	x0, x19
  4585c4:	mov	w1, #0x29                  	// #41
  4585c8:	bl	447fa8 <ferror@plt+0x45728>
  4585cc:	mov	x3, x0
  4585d0:	cbz	x0, 458580 <ferror@plt+0x55d00>
  4585d4:	cbnz	w20, 4585f4 <ferror@plt+0x55d74>
  4585d8:	ldr	w0, [x21]
  4585dc:	cmp	w0, #0x2
  4585e0:	b.ne	4585f4 <ferror@plt+0x55d74>  // b.any
  4585e4:	ldr	w0, [x3]
  4585e8:	cmp	w0, #0x29
  4585ec:	b.ne	4585f4 <ferror@plt+0x55d74>  // b.any
  4585f0:	str	xzr, [x3, #8]
  4585f4:	mov	x2, x21
  4585f8:	mov	x0, x19
  4585fc:	ldp	x19, x20, [sp, #16]
  458600:	mov	w1, #0x3                   	// #3
  458604:	ldp	x21, x22, [sp, #32]
  458608:	ldp	x29, x30, [sp], #48
  45860c:	b	447fa8 <ferror@plt+0x45728>
  458610:	cmp	w3, #0x34
  458614:	b.hi	4585a0 <ferror@plt+0x55d20>  // b.pmore
  458618:	lsl	x3, x2, x3
  45861c:	tst	x3, x0
  458620:	b.eq	4585a0 <ferror@plt+0x55d20>  // b.none
  458624:	ldr	x22, [x22, #8]
  458628:	cbnz	x22, 45853c <ferror@plt+0x55cbc>
  45862c:	b	458560 <ferror@plt+0x55ce0>
  458630:	ldr	x21, [x21, #8]
  458634:	b	4584e0 <ferror@plt+0x55c60>
  458638:	ldr	x3, [x21, #16]
  45863c:	mov	x0, #0x1f                  	// #31
  458640:	mov	x2, #0x1                   	// #1
  458644:	movk	x0, #0x1a, lsl #48
  458648:	ldr	w1, [x3]
  45864c:	sub	w1, w1, #0x1c
  458650:	cmp	w1, #0x34
  458654:	b.hi	458504 <ferror@plt+0x55c84>  // b.pmore
  458658:	lsl	x1, x2, x1
  45865c:	tst	x1, x0
  458660:	b.eq	458504 <ferror@plt+0x55c84>  // b.none
  458664:	ldr	x3, [x3, #8]
  458668:	str	x3, [x21, #16]
  45866c:	ldr	w1, [x3]
  458670:	sub	w1, w1, #0x1c
  458674:	cmp	w1, #0x34
  458678:	b.ls	458658 <ferror@plt+0x55dd8>  // b.plast
  45867c:	b	458504 <ferror@plt+0x55c84>
  458680:	ldr	x2, [x22, #8]
  458684:	cbz	x2, 4586b0 <ferror@plt+0x55e30>
  458688:	ldr	w0, [x2]
  45868c:	sub	w3, w0, #0x1
  458690:	cmp	w0, #0x8
  458694:	b.hi	458598 <ferror@plt+0x55d18>  // b.pmore
  458698:	cmp	w0, #0x6
  45869c:	b.hi	4585a0 <ferror@plt+0x55d20>  // b.pmore
  4586a0:	cmp	w3, #0x1
  4586a4:	b.hi	4586b0 <ferror@plt+0x55e30>  // b.pmore
  4586a8:	ldr	x2, [x2, #16]
  4586ac:	cbnz	x2, 458688 <ferror@plt+0x55e08>
  4586b0:	cmp	w1, #0x4a
  4586b4:	b.ne	458570 <ferror@plt+0x55cf0>  // b.any
  4586b8:	b	458568 <ferror@plt+0x55ce8>
  4586bc:	nop
  4586c0:	stp	x29, x30, [sp, #-112]!
  4586c4:	mov	x29, sp
  4586c8:	ldr	x2, [x0, #24]
  4586cc:	stp	x19, x20, [sp, #16]
  4586d0:	ldrb	w1, [x2]
  4586d4:	cmp	w1, #0x55
  4586d8:	b.eq	4588d8 <ferror@plt+0x56058>  // b.none
  4586dc:	mov	x19, x0
  4586e0:	b.hi	458790 <ferror@plt+0x55f10>  // b.pmore
  4586e4:	cmp	w1, #0x4e
  4586e8:	b.eq	4588f0 <ferror@plt+0x56070>  // b.none
  4586ec:	cmp	w1, #0x53
  4586f0:	b.ne	458880 <ferror@plt+0x56000>  // b.any
  4586f4:	ldrb	w1, [x2, #1]
  4586f8:	cmp	w1, #0x74
  4586fc:	b.ne	458820 <ferror@plt+0x55fa0>  // b.any
  458700:	ldp	w0, w1, [x0, #40]
  458704:	add	x2, x2, #0x2
  458708:	str	x2, [x19, #24]
  45870c:	cmp	w0, w1
  458710:	b.ge	458c10 <ferror@plt+0x56390>  // b.tcont
  458714:	mov	w3, #0x18                  	// #24
  458718:	add	w1, w0, #0x1
  45871c:	ldr	x2, [x19, #32]
  458720:	smull	x0, w0, w3
  458724:	str	w1, [x19, #40]
  458728:	mov	w3, #0x3                   	// #3
  45872c:	add	x20, x2, x0
  458730:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  458734:	add	x1, x1, #0x770
  458738:	str	xzr, [x2, x0]
  45873c:	str	x1, [x20, #8]
  458740:	str	w3, [x20, #16]
  458744:	mov	x0, x19
  458748:	bl	4561d8 <ferror@plt+0x53958>
  45874c:	mov	x2, x20
  458750:	mov	x3, x0
  458754:	mov	w1, #0x1                   	// #1
  458758:	mov	x0, x19
  45875c:	bl	447fa8 <ferror@plt+0x45728>
  458760:	mov	x20, x0
  458764:	ldr	w3, [x19, #72]
  458768:	ldr	x1, [x19, #24]
  45876c:	add	w3, w3, #0x3
  458770:	str	w3, [x19, #72]
  458774:	ldrb	w0, [x1]
  458778:	cmp	w0, #0x49
  45877c:	b.eq	458bbc <ferror@plt+0x5633c>  // b.none
  458780:	mov	x0, x20
  458784:	ldp	x19, x20, [sp, #16]
  458788:	ldp	x29, x30, [sp], #112
  45878c:	ret
  458790:	cmp	w1, #0x5a
  458794:	b.ne	458880 <ferror@plt+0x56000>  // b.any
  458798:	add	x2, x2, #0x1
  45879c:	str	x2, [x0, #24]
  4587a0:	mov	w1, #0x0                   	// #0
  4587a4:	bl	458488 <ferror@plt+0x55c08>
  4587a8:	mov	x20, x0
  4587ac:	cbz	x0, 458878 <ferror@plt+0x55ff8>
  4587b0:	ldr	x0, [x19, #24]
  4587b4:	ldrb	w1, [x0]
  4587b8:	cmp	w1, #0x45
  4587bc:	b.ne	458878 <ferror@plt+0x55ff8>  // b.any
  4587c0:	add	x1, x0, #0x1
  4587c4:	str	x1, [x19, #24]
  4587c8:	ldrb	w1, [x0, #1]
  4587cc:	cmp	w1, #0x73
  4587d0:	b.eq	458c38 <ferror@plt+0x563b8>  // b.none
  4587d4:	cmp	w1, #0x64
  4587d8:	b.eq	458acc <ferror@plt+0x5624c>  // b.none
  4587dc:	mov	x0, x19
  4587e0:	bl	4586c0 <ferror@plt+0x55e40>
  4587e4:	mov	x3, x0
  4587e8:	cbz	x0, 4587fc <ferror@plt+0x55f7c>
  4587ec:	ldr	w0, [x0]
  4587f0:	sub	w0, w0, #0x46
  4587f4:	tst	w0, #0xfffffffd
  4587f8:	b.ne	458c8c <ferror@plt+0x5640c>  // b.any
  4587fc:	ldr	w0, [x20]
  458800:	cmp	w0, #0x3
  458804:	b.eq	458bf8 <ferror@plt+0x56378>  // b.none
  458808:	mov	x2, x20
  45880c:	mov	x0, x19
  458810:	mov	w1, #0x2                   	// #2
  458814:	bl	447fa8 <ferror@plt+0x45728>
  458818:	mov	x20, x0
  45881c:	b	458780 <ferror@plt+0x55f00>
  458820:	mov	w1, #0x0                   	// #0
  458824:	bl	4485f8 <ferror@plt+0x45d78>
  458828:	ldr	x1, [x19, #24]
  45882c:	mov	x20, x0
  458830:	ldrb	w0, [x1]
  458834:	cmp	w0, #0x49
  458838:	b.ne	458780 <ferror@plt+0x55f00>  // b.any
  45883c:	add	x1, x1, #0x1
  458840:	str	x1, [x19, #24]
  458844:	mov	x0, x19
  458848:	bl	457aa0 <ferror@plt+0x55220>
  45884c:	mov	x3, x0
  458850:	mov	x2, x20
  458854:	mov	x0, x19
  458858:	mov	w1, #0x4                   	// #4
  45885c:	bl	447fa8 <ferror@plt+0x45728>
  458860:	mov	x20, x0
  458864:	b	458780 <ferror@plt+0x55f00>
  458868:	mov	x0, x19
  45886c:	bl	4489c0 <ferror@plt+0x46140>
  458870:	cbnz	w0, 458b08 <ferror@plt+0x56288>
  458874:	ldp	x21, x22, [sp, #32]
  458878:	mov	x20, #0x0                   	// #0
  45887c:	b	458780 <ferror@plt+0x55f00>
  458880:	mov	x0, x19
  458884:	bl	4561d8 <ferror@plt+0x53958>
  458888:	ldr	x1, [x19, #24]
  45888c:	mov	x20, x0
  458890:	ldrb	w0, [x1]
  458894:	cmp	w0, #0x49
  458898:	b.ne	458780 <ferror@plt+0x55f00>  // b.any
  45889c:	cbz	x20, 458878 <ferror@plt+0x55ff8>
  4588a0:	ldp	w2, w0, [x19, #56]
  4588a4:	cmp	w2, w0
  4588a8:	b.ge	458878 <ferror@plt+0x55ff8>  // b.tcont
  4588ac:	ldr	x4, [x19, #48]
  4588b0:	add	w0, w2, #0x1
  4588b4:	mov	x3, #0x0                   	// #0
  4588b8:	str	x20, [x4, w2, sxtw #3]
  4588bc:	str	w0, [x19, #56]
  4588c0:	ldrb	w2, [x1]
  4588c4:	sub	w2, w2, #0x49
  4588c8:	and	w2, w2, #0xff
  4588cc:	cmp	w2, #0x1
  4588d0:	b.ls	45883c <ferror@plt+0x55fbc>  // b.plast
  4588d4:	b	458850 <ferror@plt+0x55fd0>
  4588d8:	bl	4561d8 <ferror@plt+0x53958>
  4588dc:	mov	x20, x0
  4588e0:	mov	x0, x20
  4588e4:	ldp	x19, x20, [sp, #16]
  4588e8:	ldp	x29, x30, [sp], #112
  4588ec:	ret
  4588f0:	stp	x21, x22, [sp, #32]
  4588f4:	add	x2, x2, #0x1
  4588f8:	add	x1, sp, #0x68
  4588fc:	str	x2, [x0, #24]
  458900:	mov	w2, #0x1                   	// #1
  458904:	bl	4577a8 <ferror@plt+0x54f28>
  458908:	mov	x22, x0
  45890c:	cbz	x0, 458bb0 <ferror@plt+0x56330>
  458910:	ldr	x3, [x19, #24]
  458914:	stp	x23, x24, [sp, #48]
  458918:	mov	w0, #0x4f                  	// #79
  45891c:	mov	x23, #0x0                   	// #0
  458920:	ldrb	w20, [x3]
  458924:	cmp	w20, #0x52
  458928:	ccmp	w20, w0, #0x4, ne  // ne = any
  45892c:	b.eq	458a84 <ferror@plt+0x56204>  // b.none
  458930:	cbz	w20, 4589ec <ferror@plt+0x5616c>
  458934:	mov	x21, #0x0                   	// #0
  458938:	mov	w24, #0x4c                  	// #76
  45893c:	stp	x25, x26, [sp, #64]
  458940:	mov	w25, #0x55                  	// #85
  458944:	cmp	w20, #0x44
  458948:	b.eq	458a00 <ferror@plt+0x56180>  // b.none
  45894c:	sub	w1, w20, #0x30
  458950:	sub	w0, w20, #0x61
  458954:	and	w1, w1, #0xff
  458958:	and	w0, w0, #0xff
  45895c:	cmp	w1, #0x9
  458960:	mov	x26, x21
  458964:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  458968:	b.ls	45897c <ferror@plt+0x560fc>  // b.plast
  45896c:	cmp	w20, #0x43
  458970:	ccmp	w20, w25, #0x4, ne  // ne = any
  458974:	ccmp	w20, w24, #0x4, ne  // ne = any
  458978:	b.ne	458a4c <ferror@plt+0x561cc>  // b.any
  45897c:	mov	x0, x19
  458980:	bl	4561d8 <ferror@plt+0x53958>
  458984:	mov	x21, x0
  458988:	cbz	x26, 4589a4 <ferror@plt+0x56124>
  45898c:	mov	w1, #0x1                   	// #1
  458990:	mov	x3, x21
  458994:	mov	x2, x26
  458998:	mov	x0, x19
  45899c:	bl	447fa8 <ferror@plt+0x45728>
  4589a0:	mov	x21, x0
  4589a4:	cmp	w20, #0x53
  4589a8:	ldr	x3, [x19, #24]
  4589ac:	b.eq	4589dc <ferror@plt+0x5615c>  // b.none
  4589b0:	ldrb	w20, [x3]
  4589b4:	cmp	w20, #0x45
  4589b8:	b.eq	458a34 <ferror@plt+0x561b4>  // b.none
  4589bc:	cbz	x21, 4589e8 <ferror@plt+0x56168>
  4589c0:	ldp	w0, w1, [x19, #56]
  4589c4:	cmp	w0, w1
  4589c8:	b.ge	4589e8 <ferror@plt+0x56168>  // b.tcont
  4589cc:	ldr	x2, [x19, #48]
  4589d0:	add	w1, w0, #0x1
  4589d4:	str	x21, [x2, w0, sxtw #3]
  4589d8:	str	w1, [x19, #56]
  4589dc:	ldrb	w20, [x3]
  4589e0:	cbnz	w20, 458944 <ferror@plt+0x560c4>
  4589e4:	nop
  4589e8:	ldp	x25, x26, [sp, #64]
  4589ec:	mov	x20, #0x0                   	// #0
  4589f0:	ldp	x23, x24, [sp, #48]
  4589f4:	str	xzr, [x22]
  4589f8:	ldp	x21, x22, [sp, #32]
  4589fc:	b	458780 <ferror@plt+0x55f00>
  458a00:	ldrb	w0, [x3, #1]
  458a04:	and	w0, w0, #0xffffffdf
  458a08:	and	w0, w0, #0xff
  458a0c:	cmp	w0, #0x54
  458a10:	mov	x0, x19
  458a14:	b.ne	458a3c <ferror@plt+0x561bc>  // b.any
  458a18:	mov	x26, x21
  458a1c:	bl	4550d0 <ferror@plt+0x52850>
  458a20:	mov	x21, x0
  458a24:	mov	w1, #0x1                   	// #1
  458a28:	cbnz	x26, 458990 <ferror@plt+0x56110>
  458a2c:	ldr	x3, [x19, #24]
  458a30:	b	4589b0 <ferror@plt+0x56130>
  458a34:	mov	x26, x21
  458a38:	b	45896c <ferror@plt+0x560ec>
  458a3c:	mov	x26, x21
  458a40:	bl	4561d8 <ferror@plt+0x53958>
  458a44:	mov	x21, x0
  458a48:	b	458a24 <ferror@plt+0x561a4>
  458a4c:	cmp	w20, #0x53
  458a50:	b.eq	458b48 <ferror@plt+0x562c8>  // b.none
  458a54:	cmp	w20, #0x49
  458a58:	b.eq	458c18 <ferror@plt+0x56398>  // b.none
  458a5c:	cmp	w20, #0x54
  458a60:	b.eq	458cb4 <ferror@plt+0x56434>  // b.none
  458a64:	cmp	w20, #0x45
  458a68:	b.eq	458b64 <ferror@plt+0x562e4>  // b.none
  458a6c:	cmp	w20, #0x4d
  458a70:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  458a74:	b.eq	4589e8 <ferror@plt+0x56168>  // b.none
  458a78:	add	x3, x3, #0x1
  458a7c:	str	x3, [x19, #24]
  458a80:	b	4589dc <ferror@plt+0x5615c>
  458a84:	ldr	w2, [x19, #72]
  458a88:	cmp	w20, #0x52
  458a8c:	mov	w1, #0x20                  	// #32
  458a90:	add	w0, w2, #0x3
  458a94:	b.ne	458aa0 <ferror@plt+0x56220>  // b.any
  458a98:	add	w0, w2, #0x2
  458a9c:	mov	w1, #0x1f                  	// #31
  458aa0:	add	x3, x3, #0x1
  458aa4:	str	x3, [x19, #24]
  458aa8:	str	w0, [x19, #72]
  458aac:	mov	x3, #0x0                   	// #0
  458ab0:	mov	x0, x19
  458ab4:	mov	x2, #0x0                   	// #0
  458ab8:	bl	447fa8 <ferror@plt+0x45728>
  458abc:	mov	x23, x0
  458ac0:	ldr	x3, [x19, #24]
  458ac4:	ldrb	w20, [x3]
  458ac8:	b	458930 <ferror@plt+0x560b0>
  458acc:	stp	x21, x22, [sp, #32]
  458ad0:	add	x0, x0, #0x2
  458ad4:	str	x0, [x19, #24]
  458ad8:	mov	x0, x19
  458adc:	bl	448910 <ferror@plt+0x46090>
  458ae0:	mov	w21, w0
  458ae4:	tbnz	w0, #31, 458874 <ferror@plt+0x55ff4>
  458ae8:	mov	x0, x19
  458aec:	bl	4586c0 <ferror@plt+0x55e40>
  458af0:	mov	x13, x0
  458af4:	cbz	x0, 458b08 <ferror@plt+0x56288>
  458af8:	ldr	w0, [x0]
  458afc:	sub	w0, w0, #0x46
  458b00:	tst	w0, #0xfffffffd
  458b04:	b.ne	458868 <ferror@plt+0x55fe8>  // b.any
  458b08:	ldp	w1, w0, [x19, #40]
  458b0c:	cmp	w1, w0
  458b10:	b.ge	458ca8 <ferror@plt+0x56428>  // b.tcont
  458b14:	mov	w2, #0x18                  	// #24
  458b18:	add	w4, w1, #0x1
  458b1c:	ldr	x0, [x19, #32]
  458b20:	smull	x1, w1, w2
  458b24:	mov	w2, #0x47                  	// #71
  458b28:	add	x3, x0, x1
  458b2c:	str	wzr, [x3, #4]
  458b30:	str	w4, [x19, #40]
  458b34:	str	w2, [x0, x1]
  458b38:	str	x13, [x3, #8]
  458b3c:	str	w21, [x3, #16]
  458b40:	ldp	x21, x22, [sp, #32]
  458b44:	b	4587fc <ferror@plt+0x55f7c>
  458b48:	mov	x0, x19
  458b4c:	mov	w1, #0x1                   	// #1
  458b50:	bl	4485f8 <ferror@plt+0x45d78>
  458b54:	mov	x21, x0
  458b58:	cbnz	x26, 45898c <ferror@plt+0x5610c>
  458b5c:	ldr	x3, [x19, #24]
  458b60:	b	4589dc <ferror@plt+0x5615c>
  458b64:	str	x21, [x22]
  458b68:	cbz	x21, 458ba8 <ferror@plt+0x56328>
  458b6c:	cbz	x23, 458b7c <ferror@plt+0x562fc>
  458b70:	ldr	x0, [sp, #104]
  458b74:	str	x0, [x23, #8]
  458b78:	str	x23, [sp, #104]
  458b7c:	ldr	x0, [x19, #24]
  458b80:	ldrb	w1, [x0]
  458b84:	cmp	w1, #0x45
  458b88:	b.ne	458ba8 <ferror@plt+0x56328>  // b.any
  458b8c:	add	x0, x0, #0x1
  458b90:	ldp	x21, x22, [sp, #32]
  458b94:	ldp	x23, x24, [sp, #48]
  458b98:	ldp	x25, x26, [sp, #64]
  458b9c:	str	x0, [x19, #24]
  458ba0:	ldr	x20, [sp, #104]
  458ba4:	b	458780 <ferror@plt+0x55f00>
  458ba8:	ldp	x23, x24, [sp, #48]
  458bac:	ldp	x25, x26, [sp, #64]
  458bb0:	mov	x20, #0x0                   	// #0
  458bb4:	ldp	x21, x22, [sp, #32]
  458bb8:	b	458780 <ferror@plt+0x55f00>
  458bbc:	cbz	x20, 458878 <ferror@plt+0x55ff8>
  458bc0:	ldp	w0, w2, [x19, #56]
  458bc4:	cmp	w0, w2
  458bc8:	b.ge	458878 <ferror@plt+0x55ff8>  // b.tcont
  458bcc:	ldr	x4, [x19, #48]
  458bd0:	add	w2, w0, #0x1
  458bd4:	mov	x3, #0x0                   	// #0
  458bd8:	str	x20, [x4, w0, sxtw #3]
  458bdc:	str	w2, [x19, #56]
  458be0:	ldrb	w0, [x1]
  458be4:	sub	w0, w0, #0x49
  458be8:	and	w0, w0, #0xff
  458bec:	cmp	w0, #0x1
  458bf0:	b.hi	458850 <ferror@plt+0x55fd0>  // b.pmore
  458bf4:	b	45883c <ferror@plt+0x55fbc>
  458bf8:	ldr	x0, [x20, #16]
  458bfc:	ldr	w1, [x0]
  458c00:	cmp	w1, #0x29
  458c04:	b.ne	458808 <ferror@plt+0x55f88>  // b.any
  458c08:	str	xzr, [x0, #8]
  458c0c:	b	458808 <ferror@plt+0x55f88>
  458c10:	mov	x20, #0x0                   	// #0
  458c14:	b	458744 <ferror@plt+0x55ec4>
  458c18:	cbz	x21, 4589e8 <ferror@plt+0x56168>
  458c1c:	add	x3, x3, #0x1
  458c20:	str	x3, [x19, #24]
  458c24:	mov	x0, x19
  458c28:	bl	457aa0 <ferror@plt+0x55220>
  458c2c:	mov	x21, x0
  458c30:	mov	w1, #0x4                   	// #4
  458c34:	b	458990 <ferror@plt+0x56110>
  458c38:	add	x0, x0, #0x2
  458c3c:	str	x0, [x19, #24]
  458c40:	mov	x0, x19
  458c44:	bl	4489c0 <ferror@plt+0x46140>
  458c48:	cbz	w0, 458878 <ferror@plt+0x55ff8>
  458c4c:	ldp	w0, w1, [x19, #40]
  458c50:	cmp	w0, w1
  458c54:	b.ge	458cac <ferror@plt+0x5642c>  // b.tcont
  458c58:	mov	w3, #0x18                  	// #24
  458c5c:	add	w1, w0, #0x1
  458c60:	ldr	x2, [x19, #32]
  458c64:	smull	x0, w0, w3
  458c68:	str	w1, [x19, #40]
  458c6c:	mov	w4, #0xe                   	// #14
  458c70:	add	x3, x2, x0
  458c74:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  458c78:	add	x1, x1, #0x760
  458c7c:	str	xzr, [x2, x0]
  458c80:	str	x1, [x3, #8]
  458c84:	str	w4, [x3, #16]
  458c88:	b	4587fc <ferror@plt+0x55f7c>
  458c8c:	mov	x0, x19
  458c90:	str	x3, [sp, #88]
  458c94:	bl	4489c0 <ferror@plt+0x46140>
  458c98:	ldr	x3, [sp, #88]
  458c9c:	cbnz	w0, 4587fc <ferror@plt+0x55f7c>
  458ca0:	mov	x20, #0x0                   	// #0
  458ca4:	b	458780 <ferror@plt+0x55f00>
  458ca8:	ldp	x21, x22, [sp, #32]
  458cac:	mov	x3, #0x0                   	// #0
  458cb0:	b	4587fc <ferror@plt+0x55f7c>
  458cb4:	mov	x0, x19
  458cb8:	bl	448ae8 <ferror@plt+0x46268>
  458cbc:	mov	x21, x0
  458cc0:	b	458a24 <ferror@plt+0x561a4>
  458cc4:	nop
  458cc8:	stp	x29, x30, [sp, #-48]!
  458ccc:	mov	x29, sp
  458cd0:	stp	x19, x20, [sp, #16]
  458cd4:	mov	x20, x0
  458cd8:	stp	x21, x22, [sp, #32]
  458cdc:	mov	w22, w1
  458ce0:	bl	4586c0 <ferror@plt+0x55e40>
  458ce4:	cbz	x0, 458dfc <ferror@plt+0x5657c>
  458ce8:	mov	x19, x0
  458cec:	cbz	w22, 458d80 <ferror@plt+0x56500>
  458cf0:	ldr	w0, [x20, #16]
  458cf4:	tbnz	w0, #0, 458d80 <ferror@plt+0x56500>
  458cf8:	mov	x1, #0x1f                  	// #31
  458cfc:	mov	x2, #0x1                   	// #1
  458d00:	movk	x1, #0x1a, lsl #48
  458d04:	ldr	w3, [x19]
  458d08:	sub	w0, w3, #0x1c
  458d0c:	cmp	w0, #0x34
  458d10:	b.hi	458d20 <ferror@plt+0x564a0>  // b.pmore
  458d14:	lsl	x0, x2, x0
  458d18:	tst	x0, x1
  458d1c:	b.ne	458e94 <ferror@plt+0x56614>  // b.any
  458d20:	cmp	w3, #0x2
  458d24:	b.ne	458d6c <ferror@plt+0x564ec>  // b.any
  458d28:	ldr	x3, [x19, #16]
  458d2c:	mov	x1, #0x1f                  	// #31
  458d30:	mov	x2, #0x1                   	// #1
  458d34:	movk	x1, #0x1a, lsl #48
  458d38:	ldr	w0, [x3]
  458d3c:	sub	w0, w0, #0x1c
  458d40:	cmp	w0, #0x34
  458d44:	b.hi	458d6c <ferror@plt+0x564ec>  // b.pmore
  458d48:	lsl	x0, x2, x0
  458d4c:	tst	x0, x1
  458d50:	b.eq	458d6c <ferror@plt+0x564ec>  // b.none
  458d54:	ldr	x3, [x3, #8]
  458d58:	str	x3, [x19, #16]
  458d5c:	ldr	w0, [x3]
  458d60:	sub	w0, w0, #0x1c
  458d64:	cmp	w0, #0x34
  458d68:	b.ls	458d48 <ferror@plt+0x564c8>  // b.plast
  458d6c:	mov	x0, x19
  458d70:	ldp	x19, x20, [sp, #16]
  458d74:	ldp	x21, x22, [sp, #32]
  458d78:	ldp	x29, x30, [sp], #48
  458d7c:	ret
  458d80:	ldr	x1, [x20, #24]
  458d84:	ldrb	w4, [x1]
  458d88:	cmp	w4, #0x45
  458d8c:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  458d90:	b.eq	458d6c <ferror@plt+0x564ec>  // b.none
  458d94:	mov	x2, #0x1f                  	// #31
  458d98:	mov	x21, x19
  458d9c:	mov	x5, #0x1                   	// #1
  458da0:	movk	x2, #0x1a, lsl #48
  458da4:	ldr	w0, [x21]
  458da8:	cmp	w0, #0x4
  458dac:	b.eq	458e9c <ferror@plt+0x5661c>  // b.none
  458db0:	sub	w3, w0, #0x1c
  458db4:	b.hi	458e74 <ferror@plt+0x565f4>  // b.pmore
  458db8:	cmp	w0, #0x2
  458dbc:	b.ne	458e14 <ferror@plt+0x56594>  // b.any
  458dc0:	ldr	x21, [x21, #16]
  458dc4:	cbnz	x21, 458da4 <ferror@plt+0x56524>
  458dc8:	cmp	w4, #0x4a
  458dcc:	b.ne	458e20 <ferror@plt+0x565a0>  // b.any
  458dd0:	add	x1, x1, #0x1
  458dd4:	str	x1, [x20, #24]
  458dd8:	b	458dec <ferror@plt+0x5656c>
  458ddc:	cmp	w0, #0x35
  458de0:	b.eq	458e14 <ferror@plt+0x56594>  // b.none
  458de4:	cmp	w4, #0x4a
  458de8:	b.eq	458dd0 <ferror@plt+0x56550>  // b.none
  458dec:	mov	x0, x20
  458df0:	bl	4550d0 <ferror@plt+0x52850>
  458df4:	mov	x21, x0
  458df8:	cbnz	x0, 458e20 <ferror@plt+0x565a0>
  458dfc:	mov	x19, #0x0                   	// #0
  458e00:	mov	x0, x19
  458e04:	ldp	x19, x20, [sp, #16]
  458e08:	ldp	x21, x22, [sp, #32]
  458e0c:	ldp	x29, x30, [sp], #48
  458e10:	ret
  458e14:	cmp	w4, #0x4a
  458e18:	mov	x21, #0x0                   	// #0
  458e1c:	b.eq	458dd0 <ferror@plt+0x56550>  // b.none
  458e20:	mov	x0, x20
  458e24:	bl	455ed0 <ferror@plt+0x53650>
  458e28:	mov	x3, x0
  458e2c:	cbz	x0, 458dfc <ferror@plt+0x5657c>
  458e30:	mov	x2, x21
  458e34:	mov	x0, x20
  458e38:	mov	w1, #0x29                  	// #41
  458e3c:	bl	447fa8 <ferror@plt+0x45728>
  458e40:	mov	x3, x0
  458e44:	cbz	x0, 458dfc <ferror@plt+0x5657c>
  458e48:	cbnz	w22, 458e58 <ferror@plt+0x565d8>
  458e4c:	ldr	w0, [x19]
  458e50:	cmp	w0, #0x2
  458e54:	b.eq	458ed0 <ferror@plt+0x56650>  // b.none
  458e58:	mov	x2, x19
  458e5c:	mov	x0, x20
  458e60:	ldp	x19, x20, [sp, #16]
  458e64:	mov	w1, #0x3                   	// #3
  458e68:	ldp	x21, x22, [sp, #32]
  458e6c:	ldp	x29, x30, [sp], #48
  458e70:	b	447fa8 <ferror@plt+0x45728>
  458e74:	cmp	w3, #0x34
  458e78:	b.hi	458e14 <ferror@plt+0x56594>  // b.pmore
  458e7c:	lsl	x3, x5, x3
  458e80:	tst	x3, x2
  458e84:	b.eq	458e14 <ferror@plt+0x56594>  // b.none
  458e88:	ldr	x21, [x21, #8]
  458e8c:	cbnz	x21, 458da4 <ferror@plt+0x56524>
  458e90:	b	458dc8 <ferror@plt+0x56548>
  458e94:	ldr	x19, [x19, #8]
  458e98:	b	458d04 <ferror@plt+0x56484>
  458e9c:	ldr	x2, [x21, #8]
  458ea0:	cbz	x2, 458de4 <ferror@plt+0x56564>
  458ea4:	ldr	w0, [x2]
  458ea8:	sub	w3, w0, #0x1
  458eac:	cmp	w0, #0x8
  458eb0:	b.hi	458ddc <ferror@plt+0x5655c>  // b.pmore
  458eb4:	cmp	w0, #0x6
  458eb8:	b.hi	458e14 <ferror@plt+0x56594>  // b.pmore
  458ebc:	cmp	w3, #0x1
  458ec0:	b.hi	458de4 <ferror@plt+0x56564>  // b.pmore
  458ec4:	ldr	x2, [x2, #16]
  458ec8:	cbnz	x2, 458ea4 <ferror@plt+0x56624>
  458ecc:	b	458de4 <ferror@plt+0x56564>
  458ed0:	ldr	w0, [x3]
  458ed4:	cmp	w0, #0x29
  458ed8:	b.ne	458e58 <ferror@plt+0x565d8>  // b.any
  458edc:	str	xzr, [x3, #8]
  458ee0:	b	458e58 <ferror@plt+0x565d8>
  458ee4:	nop
  458ee8:	stp	x29, x30, [sp, #-32]!
  458eec:	mov	x29, sp
  458ef0:	stp	x19, x20, [sp, #16]
  458ef4:	mov	x19, x0
  458ef8:	mov	w20, w1
  458efc:	ldr	x0, [x0, #24]
  458f00:	ldrb	w1, [x0]
  458f04:	cmp	w1, #0x5f
  458f08:	b.eq	459094 <ferror@plt+0x56814>  // b.none
  458f0c:	cbnz	w20, 459084 <ferror@plt+0x56804>
  458f10:	cmp	w1, #0x5a
  458f14:	b.ne	459084 <ferror@plt+0x56804>  // b.any
  458f18:	add	x1, x0, #0x1
  458f1c:	str	x1, [x19, #24]
  458f20:	mov	w1, #0x54                  	// #84
  458f24:	ldrb	w0, [x0, #1]
  458f28:	cmp	w0, #0x47
  458f2c:	ccmp	w0, w1, #0x4, ne  // ne = any
  458f30:	b.ne	4590a8 <ferror@plt+0x56828>  // b.any
  458f34:	mov	x0, x19
  458f38:	bl	457c38 <ferror@plt+0x553b8>
  458f3c:	cbz	w20, 459088 <ferror@plt+0x56808>
  458f40:	ldr	w1, [x19, #16]
  458f44:	tbz	w1, #0, 459088 <ferror@plt+0x56808>
  458f48:	ldr	x4, [x19, #24]
  458f4c:	mov	w8, #0x18                  	// #24
  458f50:	ldrb	w1, [x4]
  458f54:	cmp	w1, #0x2e
  458f58:	b.ne	459088 <ferror@plt+0x56808>  // b.any
  458f5c:	ldrb	w1, [x4, #1]
  458f60:	sub	w2, w1, #0x61
  458f64:	cmp	w1, #0x5f
  458f68:	and	w2, w2, #0xff
  458f6c:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  458f70:	b.ls	459054 <ferror@plt+0x567d4>  // b.plast
  458f74:	nop
  458f78:	sub	w1, w1, #0x30
  458f7c:	and	w1, w1, #0xff
  458f80:	cmp	w1, #0x9
  458f84:	b.hi	459088 <ferror@plt+0x56808>  // b.pmore
  458f88:	mov	x1, x4
  458f8c:	nop
  458f90:	ldrb	w3, [x1, #1]
  458f94:	sub	w3, w3, #0x30
  458f98:	and	w3, w3, #0xff
  458f9c:	cmp	w3, #0x9
  458fa0:	b.hi	458fdc <ferror@plt+0x5675c>  // b.pmore
  458fa4:	ldrb	w2, [x1, #2]
  458fa8:	add	x1, x1, #0x2
  458fac:	sub	w3, w2, #0x30
  458fb0:	and	w3, w3, #0xff
  458fb4:	cmp	w3, #0x9
  458fb8:	b.hi	458fd4 <ferror@plt+0x56754>  // b.pmore
  458fbc:	nop
  458fc0:	ldrb	w2, [x1, #1]!
  458fc4:	sub	w3, w2, #0x30
  458fc8:	and	w3, w3, #0xff
  458fcc:	cmp	w3, #0x9
  458fd0:	b.ls	458fc0 <ferror@plt+0x56740>  // b.plast
  458fd4:	cmp	w2, #0x2e
  458fd8:	b.eq	458f90 <ferror@plt+0x56710>  // b.none
  458fdc:	ldp	w2, w3, [x19, #40]
  458fe0:	str	x1, [x19, #24]
  458fe4:	sub	x1, x1, x4
  458fe8:	cmp	w2, w3
  458fec:	b.ge	4590b8 <ferror@plt+0x56838>  // b.tcont
  458ff0:	ldr	x6, [x19, #32]
  458ff4:	smull	x5, w2, w8
  458ff8:	add	w2, w2, #0x1
  458ffc:	cmp	w1, #0x0
  459000:	add	x3, x6, x5
  459004:	str	wzr, [x3, #4]
  459008:	str	w2, [x19, #40]
  45900c:	b.le	4590b8 <ferror@plt+0x56838>
  459010:	str	xzr, [x6, x5]
  459014:	str	x4, [x3, #8]
  459018:	str	w1, [x3, #16]
  45901c:	mov	x2, x0
  459020:	mov	w1, #0x4e                  	// #78
  459024:	mov	x0, x19
  459028:	bl	447fa8 <ferror@plt+0x45728>
  45902c:	ldr	x4, [x19, #24]
  459030:	ldrb	w1, [x4]
  459034:	cmp	w1, #0x2e
  459038:	b.ne	459088 <ferror@plt+0x56808>  // b.any
  45903c:	ldrb	w1, [x4, #1]
  459040:	sub	w2, w1, #0x61
  459044:	cmp	w1, #0x5f
  459048:	and	w2, w2, #0xff
  45904c:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  459050:	b.hi	458f78 <ferror@plt+0x566f8>  // b.pmore
  459054:	ldrb	w3, [x4, #2]
  459058:	add	x1, x4, #0x2
  45905c:	b	459064 <ferror@plt+0x567e4>
  459060:	ldrb	w3, [x1, #1]!
  459064:	sub	w2, w3, #0x61
  459068:	cmp	w3, #0x5f
  45906c:	and	w2, w2, #0xff
  459070:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  459074:	b.ls	459060 <ferror@plt+0x567e0>  // b.plast
  459078:	cmp	w3, #0x2e
  45907c:	b.eq	458f90 <ferror@plt+0x56710>  // b.none
  459080:	b	458fdc <ferror@plt+0x5675c>
  459084:	mov	x0, #0x0                   	// #0
  459088:	ldp	x19, x20, [sp, #16]
  45908c:	ldp	x29, x30, [sp], #32
  459090:	ret
  459094:	add	x2, x0, #0x1
  459098:	str	x2, [x19, #24]
  45909c:	ldrb	w1, [x0, #1]
  4590a0:	mov	x0, x2
  4590a4:	b	458f10 <ferror@plt+0x56690>
  4590a8:	mov	w1, w20
  4590ac:	mov	x0, x19
  4590b0:	bl	458cc8 <ferror@plt+0x56448>
  4590b4:	b	458f3c <ferror@plt+0x566bc>
  4590b8:	mov	x3, #0x0                   	// #0
  4590bc:	b	45901c <ferror@plt+0x5679c>
  4590c0:	ldr	x2, [x0, #24]
  4590c4:	ldrb	w1, [x2]
  4590c8:	cmp	w1, #0x4c
  4590cc:	b.ne	4591e0 <ferror@plt+0x56960>  // b.any
  4590d0:	stp	x29, x30, [sp, #-32]!
  4590d4:	add	x1, x2, #0x1
  4590d8:	mov	w4, #0x5a                  	// #90
  4590dc:	mov	x29, sp
  4590e0:	str	x19, [sp, #16]
  4590e4:	mov	x19, x0
  4590e8:	str	x1, [x0, #24]
  4590ec:	ldrb	w3, [x2, #1]
  4590f0:	cmp	w3, #0x5f
  4590f4:	ccmp	w3, w4, #0x4, ne  // ne = any
  4590f8:	b.eq	459174 <ferror@plt+0x568f4>  // b.none
  4590fc:	bl	4550d0 <ferror@plt+0x52850>
  459100:	mov	x2, x0
  459104:	cbz	x0, 459164 <ferror@plt+0x568e4>
  459108:	ldr	w0, [x0]
  45910c:	cmp	w0, #0x27
  459110:	b.eq	459258 <ferror@plt+0x569d8>  // b.none
  459114:	ldr	x0, [x19, #24]
  459118:	mov	w1, #0x3d                  	// #61
  45911c:	ldrb	w4, [x0]
  459120:	cmp	w4, #0x6e
  459124:	b.ne	45913c <ferror@plt+0x568bc>  // b.any
  459128:	add	x3, x0, #0x1
  45912c:	str	x3, [x19, #24]
  459130:	mov	w1, #0x3e                  	// #62
  459134:	ldrb	w4, [x0, #1]
  459138:	mov	x0, x3
  45913c:	cmp	w4, #0x45
  459140:	b.eq	459280 <ferror@plt+0x56a00>  // b.none
  459144:	add	x3, x0, #0x1
  459148:	b	45915c <ferror@plt+0x568dc>
  45914c:	str	x3, [x19, #24]
  459150:	ldrb	w4, [x3], #1
  459154:	cmp	w4, #0x45
  459158:	b.eq	459204 <ferror@plt+0x56984>  // b.none
  45915c:	mov	x5, x3
  459160:	cbnz	w4, 45914c <ferror@plt+0x568cc>
  459164:	mov	x0, #0x0                   	// #0
  459168:	ldr	x19, [sp, #16]
  45916c:	ldp	x29, x30, [sp], #32
  459170:	ret
  459174:	cmp	w3, #0x5f
  459178:	b.eq	4591e8 <ferror@plt+0x56968>  // b.none
  45917c:	add	x0, x1, #0x1
  459180:	str	x0, [x19, #24]
  459184:	mov	w2, #0x54                  	// #84
  459188:	ldrb	w0, [x1, #1]
  45918c:	cmp	w0, #0x47
  459190:	ccmp	w0, w2, #0x4, ne  // ne = any
  459194:	b.eq	4591cc <ferror@plt+0x5694c>  // b.none
  459198:	mov	w1, #0x0                   	// #0
  45919c:	mov	x0, x19
  4591a0:	bl	458cc8 <ferror@plt+0x56448>
  4591a4:	ldr	x1, [x19, #24]
  4591a8:	ldrb	w2, [x1]
  4591ac:	nop
  4591b0:	cmp	w2, #0x45
  4591b4:	b.ne	459164 <ferror@plt+0x568e4>  // b.any
  4591b8:	add	x1, x1, #0x1
  4591bc:	str	x1, [x19, #24]
  4591c0:	ldr	x19, [sp, #16]
  4591c4:	ldp	x29, x30, [sp], #32
  4591c8:	ret
  4591cc:	mov	x0, x19
  4591d0:	bl	457c38 <ferror@plt+0x553b8>
  4591d4:	ldr	x1, [x19, #24]
  4591d8:	ldrb	w2, [x1]
  4591dc:	b	4591b0 <ferror@plt+0x56930>
  4591e0:	mov	x0, #0x0                   	// #0
  4591e4:	ret
  4591e8:	add	x1, x2, #0x2
  4591ec:	str	x1, [x19, #24]
  4591f0:	mov	x0, #0x0                   	// #0
  4591f4:	ldrb	w2, [x2, #2]
  4591f8:	cmp	w2, w4
  4591fc:	b.ne	4591b0 <ferror@plt+0x56930>  // b.any
  459200:	b	45917c <ferror@plt+0x568fc>
  459204:	sub	w5, w5, w0
  459208:	ldp	w3, w4, [x19, #40]
  45920c:	cmp	w3, w4
  459210:	b.ge	459278 <ferror@plt+0x569f8>  // b.tcont
  459214:	mov	w4, #0x18                  	// #24
  459218:	add	w7, w3, #0x1
  45921c:	ldr	x6, [x19, #32]
  459220:	smull	x4, w3, w4
  459224:	cmp	w5, #0x0
  459228:	add	x3, x6, x4
  45922c:	str	wzr, [x3, #4]
  459230:	str	w7, [x19, #40]
  459234:	b.le	459278 <ferror@plt+0x569f8>
  459238:	str	xzr, [x6, x4]
  45923c:	str	x0, [x3, #8]
  459240:	str	w5, [x3, #16]
  459244:	mov	x0, x19
  459248:	bl	447fa8 <ferror@plt+0x45728>
  45924c:	ldr	x1, [x19, #24]
  459250:	ldrb	w2, [x1]
  459254:	b	4591b0 <ferror@plt+0x56930>
  459258:	ldr	x0, [x2, #8]
  45925c:	ldr	w1, [x0, #28]
  459260:	cbz	w1, 459114 <ferror@plt+0x56894>
  459264:	ldr	w1, [x0, #8]
  459268:	ldr	w0, [x19, #72]
  45926c:	sub	w0, w0, w1
  459270:	str	w0, [x19, #72]
  459274:	b	459114 <ferror@plt+0x56894>
  459278:	mov	x3, #0x0                   	// #0
  45927c:	b	459244 <ferror@plt+0x569c4>
  459280:	mov	w5, #0x0                   	// #0
  459284:	b	459208 <ferror@plt+0x56988>
  459288:	stp	x29, x30, [sp, #-448]!
  45928c:	mov	w4, w0
  459290:	mov	x29, sp
  459294:	stp	x19, x20, [sp, #16]
  459298:	add	x20, x29, #0x40
  45929c:	mov	x19, x1
  4592a0:	str	x21, [sp, #32]
  4592a4:	mov	x0, x20
  4592a8:	stp	x2, x3, [x29, #336]
  4592ac:	add	x2, x29, #0x200
  4592b0:	str	xzr, [x29, #320]
  4592b4:	stp	xzr, xzr, [x2, #-120]
  4592b8:	strb	wzr, [x29, #328]
  4592bc:	stp	xzr, xzr, [x29, #352]
  4592c0:	stp	xzr, xzr, [x29, #368]
  4592c4:	str	xzr, [x29, #384]
  4592c8:	stp	xzr, xzr, [x29, #408]
  4592cc:	str	xzr, [x29, #424]
  4592d0:	bl	448030 <ferror@plt+0x457b0>
  4592d4:	ldr	w1, [x29, #372]
  4592d8:	cmp	w1, #0x7ff
  4592dc:	b.gt	4592e8 <ferror@plt+0x56a68>
  4592e0:	mov	w1, #0x0                   	// #0
  4592e4:	str	wzr, [x29, #372]
  4592e8:	ldr	w3, [x29, #412]
  4592ec:	mov	w0, #0x1                   	// #1
  4592f0:	ldr	w5, [x29, #428]
  4592f4:	mov	x21, sp
  4592f8:	cmp	w3, #0x0
  4592fc:	str	xzr, [x29, #432]
  459300:	csel	w2, w3, w0, gt
  459304:	mul	w3, w3, w5
  459308:	sub	sp, sp, w2, sxtw #4
  45930c:	str	w3, [x29, #428]
  459310:	mov	x2, sp
  459314:	cmp	w3, #0x0
  459318:	str	x2, [x29, #400]
  45931c:	csel	w3, w3, w0, gt
  459320:	sub	sp, sp, w3, sxtw #4
  459324:	mov	x0, sp
  459328:	str	x0, [x29, #416]
  45932c:	cbz	x19, 459398 <ferror@plt+0x56b18>
  459330:	ldr	w0, [x19, #4]
  459334:	cmp	w0, #0x1
  459338:	b.gt	459398 <ferror@plt+0x56b18>
  45933c:	cmp	w1, #0x400
  459340:	b.gt	459398 <ferror@plt+0x56b18>
  459344:	ldr	x5, [x29, #392]
  459348:	add	w3, w1, #0x1
  45934c:	mov	w1, w4
  459350:	add	x4, x29, #0x30
  459354:	add	w0, w0, #0x1
  459358:	str	w0, [x19, #4]
  45935c:	mov	x2, x19
  459360:	mov	x0, x20
  459364:	stp	x19, x5, [x29, #48]
  459368:	str	w3, [x29, #372]
  45936c:	str	x4, [x29, #392]
  459370:	bl	448dd0 <ferror@plt+0x46550>
  459374:	ldr	w0, [x19, #4]
  459378:	ldr	w1, [x29, #372]
  45937c:	ldr	x2, [x29, #56]
  459380:	sub	w0, w0, #0x1
  459384:	sub	w1, w1, #0x1
  459388:	str	w0, [x19, #4]
  45938c:	str	w1, [x29, #372]
  459390:	str	x2, [x29, #392]
  459394:	b	4593a0 <ferror@plt+0x56b20>
  459398:	mov	w0, #0x1                   	// #1
  45939c:	str	w0, [x29, #368]
  4593a0:	ldr	x1, [x29, #320]
  4593a4:	mov	sp, x21
  4593a8:	ldp	x3, x2, [x29, #336]
  4593ac:	mov	x0, x20
  4593b0:	strb	wzr, [x20, x1]
  4593b4:	blr	x3
  4593b8:	ldr	w0, [x29, #368]
  4593bc:	mov	sp, x29
  4593c0:	cmp	w0, #0x0
  4593c4:	cset	w0, eq  // eq = none
  4593c8:	ldp	x19, x20, [sp, #16]
  4593cc:	ldr	x21, [sp, #32]
  4593d0:	ldp	x29, x30, [sp], #448
  4593d4:	ret
  4593d8:	stp	x29, x30, [sp, #-96]!
  4593dc:	mov	x29, sp
  4593e0:	stp	x19, x20, [sp, #16]
  4593e4:	mov	w19, w0
  4593e8:	str	x21, [sp, #32]
  4593ec:	mov	x21, x3
  4593f0:	str	xzr, [sp, #64]
  4593f4:	stp	xzr, xzr, [sp, #72]
  4593f8:	str	wzr, [sp, #88]
  4593fc:	cbnz	w2, 459440 <ferror@plt+0x56bc0>
  459400:	adrp	x2, 448000 <ferror@plt+0x45780>
  459404:	mov	w0, w19
  459408:	add	x3, sp, #0x40
  45940c:	add	x2, x2, #0x228
  459410:	bl	459288 <ferror@plt+0x56a08>
  459414:	cbz	w0, 45947c <ferror@plt+0x56bfc>
  459418:	ldr	w2, [sp, #88]
  45941c:	ldr	x1, [sp, #80]
  459420:	cmp	w2, #0x0
  459424:	ldr	x0, [sp, #64]
  459428:	csinc	x1, x1, xzr, eq  // eq = none
  45942c:	str	x1, [x21]
  459430:	ldp	x19, x20, [sp, #16]
  459434:	ldr	x21, [sp, #32]
  459438:	ldp	x29, x30, [sp], #96
  45943c:	ret
  459440:	sxtw	x0, w2
  459444:	mov	x20, #0x2                   	// #2
  459448:	cmp	x0, #0x2
  45944c:	b.ls	45945c <ferror@plt+0x56bdc>  // b.plast
  459450:	lsl	x20, x20, #1
  459454:	cmp	x0, x20
  459458:	b.hi	459450 <ferror@plt+0x56bd0>  // b.pmore
  45945c:	mov	x0, x20
  459460:	str	x1, [sp, #56]
  459464:	bl	4023d0 <malloc@plt>
  459468:	ldr	x1, [sp, #56]
  45946c:	cbz	x0, 459490 <ferror@plt+0x56c10>
  459470:	str	x0, [sp, #64]
  459474:	str	x20, [sp, #80]
  459478:	b	459400 <ferror@plt+0x56b80>
  45947c:	ldr	x0, [sp, #64]
  459480:	bl	402640 <free@plt>
  459484:	str	xzr, [x21]
  459488:	mov	x0, #0x0                   	// #0
  45948c:	b	459430 <ferror@plt+0x56bb0>
  459490:	mov	w0, #0x1                   	// #1
  459494:	str	w0, [sp, #88]
  459498:	b	459400 <ferror@plt+0x56b80>
  45949c:	nop
  4594a0:	lsl	w4, w2, #1
  4594a4:	add	x5, x0, x2
  4594a8:	stp	x0, x5, [x3]
  4594ac:	str	w1, [x3, #16]
  4594b0:	str	x0, [x3, #24]
  4594b4:	stp	wzr, w4, [x3, #40]
  4594b8:	stp	wzr, w2, [x3, #56]
  4594bc:	stp	xzr, xzr, [x3, #64]
  4594c0:	str	xzr, [x3, #80]
  4594c4:	ret
  4594c8:	stp	x29, x30, [sp, #-208]!
  4594cc:	mov	x29, sp
  4594d0:	stp	x19, x20, [sp, #16]
  4594d4:	mov	x19, x0
  4594d8:	mov	w20, w1
  4594dc:	stp	x21, x22, [sp, #32]
  4594e0:	stp	x23, x24, [sp, #48]
  4594e4:	str	x25, [sp, #64]
  4594e8:	str	xzr, [x29, #80]
  4594ec:	ldrb	w0, [x0]
  4594f0:	stp	xzr, xzr, [x29, #88]
  4594f4:	cmp	w0, #0x5f
  4594f8:	str	wzr, [x29, #104]
  4594fc:	b.eq	4596b0 <ferror@plt+0x56e30>  // b.none
  459500:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  459504:	mov	x0, x19
  459508:	add	x1, x1, #0x778
  45950c:	mov	x2, #0x8                   	// #8
  459510:	bl	402400 <strncmp@plt>
  459514:	cbz	w0, 45963c <ferror@plt+0x56dbc>
  459518:	mov	w21, #0x0                   	// #0
  45951c:	tbz	w20, #4, 459688 <ferror@plt+0x56e08>
  459520:	mov	x0, x19
  459524:	bl	402270 <strlen@plt>
  459528:	add	x1, x19, x0
  45952c:	lsl	w4, w0, #1
  459530:	stp	x19, x1, [x29, #120]
  459534:	cmp	w4, #0x800
  459538:	and	w1, w20, #0x40000
  45953c:	str	w20, [x29, #136]
  459540:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
  459544:	str	x19, [x29, #144]
  459548:	stp	wzr, w4, [x29, #160]
  45954c:	stp	wzr, w0, [x29, #176]
  459550:	stp	xzr, xzr, [x29, #184]
  459554:	str	xzr, [x29, #200]
  459558:	b.eq	459688 <ferror@plt+0x56e08>  // b.none
  45955c:	mov	x24, sp
  459560:	mov	w1, #0x18                  	// #24
  459564:	sbfiz	x3, x0, #3, #32
  459568:	cmp	w21, #0x1
  45956c:	add	x3, x3, #0xf
  459570:	smsubl	x0, w4, w1, x24
  459574:	and	x3, x3, #0xfffffffffffffff0
  459578:	mov	sp, x0
  45957c:	mov	x22, sp
  459580:	sub	sp, sp, x3
  459584:	mov	x0, sp
  459588:	str	x22, [x29, #152]
  45958c:	str	x0, [x29, #168]
  459590:	b.eq	4596f0 <ferror@plt+0x56e70>  // b.none
  459594:	sub	w0, w21, #0x2
  459598:	cmp	w0, #0x1
  45959c:	b.hi	459748 <ferror@plt+0x56ec8>  // b.pmore
  4595a0:	cmp	w21, #0x2
  4595a4:	ldrb	w0, [x19, #11]
  4595a8:	add	x23, x19, #0xb
  4595ac:	str	x23, [x29, #144]
  4595b0:	cset	w1, ne  // ne = any
  4595b4:	cmp	w0, #0x5f
  4595b8:	add	w21, w1, #0x44
  4595bc:	b.eq	4596c4 <ferror@plt+0x56e44>  // b.none
  4595c0:	cmp	w4, #0x0
  4595c4:	b.le	459758 <ferror@plt+0x56ed8>
  4595c8:	mov	x0, x23
  4595cc:	bl	402270 <strlen@plt>
  4595d0:	mov	w1, #0x1                   	// #1
  4595d4:	str	wzr, [x22, #4]
  4595d8:	str	w1, [x29, #160]
  4595dc:	cmp	w0, #0x0
  4595e0:	b.le	459758 <ferror@plt+0x56ed8>
  4595e4:	add	x25, x29, #0x78
  4595e8:	str	wzr, [x22]
  4595ec:	str	x23, [x22, #8]
  4595f0:	str	w0, [x22, #16]
  4595f4:	mov	w1, w21
  4595f8:	mov	x2, x22
  4595fc:	mov	x3, #0x0                   	// #0
  459600:	mov	x0, x25
  459604:	bl	447fa8 <ferror@plt+0x45728>
  459608:	mov	x19, x0
  45960c:	ldr	x21, [x29, #144]
  459610:	mov	x0, x21
  459614:	bl	402270 <strlen@plt>
  459618:	add	x21, x21, x0
  45961c:	str	x21, [x29, #144]
  459620:	tbz	w20, #0, 459704 <ferror@plt+0x56e84>
  459624:	ldr	x0, [x29, #144]
  459628:	ldrb	w0, [x0]
  45962c:	cbz	w0, 459704 <ferror@plt+0x56e84>
  459630:	mov	sp, x24
  459634:	ldr	x0, [x29, #80]
  459638:	b	45968c <ferror@plt+0x56e0c>
  45963c:	ldrb	w0, [x19, #8]
  459640:	mov	w2, #0x5f                  	// #95
  459644:	mov	w1, #0x24                  	// #36
  459648:	cmp	w0, #0x2e
  45964c:	ccmp	w0, w2, #0x4, ne  // ne = any
  459650:	ccmp	w0, w1, #0x4, ne  // ne = any
  459654:	b.ne	459518 <ferror@plt+0x56c98>  // b.any
  459658:	ldrb	w0, [x19, #9]
  45965c:	mov	w1, #0x49                  	// #73
  459660:	cmp	w0, #0x44
  459664:	ccmp	w0, w1, #0x4, ne  // ne = any
  459668:	b.ne	459518 <ferror@plt+0x56c98>  // b.any
  45966c:	ldrb	w1, [x19, #10]
  459670:	cmp	w1, w2
  459674:	b.ne	459518 <ferror@plt+0x56c98>  // b.any
  459678:	cmp	w0, #0x49
  45967c:	cset	w21, ne  // ne = any
  459680:	add	w21, w21, #0x2
  459684:	b	459520 <ferror@plt+0x56ca0>
  459688:	mov	x0, #0x0                   	// #0
  45968c:	bl	402640 <free@plt>
  459690:	mov	sp, x29
  459694:	mov	x0, #0x0                   	// #0
  459698:	ldp	x19, x20, [sp, #16]
  45969c:	ldp	x21, x22, [sp, #32]
  4596a0:	ldp	x23, x24, [sp, #48]
  4596a4:	ldr	x25, [sp, #64]
  4596a8:	ldp	x29, x30, [sp], #208
  4596ac:	ret
  4596b0:	ldrb	w0, [x19, #1]
  4596b4:	cmp	w0, #0x5a
  4596b8:	b.ne	459500 <ferror@plt+0x56c80>  // b.any
  4596bc:	mov	w21, #0x1                   	// #1
  4596c0:	b	459520 <ferror@plt+0x56ca0>
  4596c4:	ldrb	w0, [x19, #12]
  4596c8:	cmp	w0, #0x5a
  4596cc:	b.ne	4595c0 <ferror@plt+0x56d40>  // b.any
  4596d0:	add	x25, x29, #0x78
  4596d4:	add	x19, x19, #0xd
  4596d8:	mov	x0, x25
  4596dc:	mov	w1, #0x0                   	// #0
  4596e0:	str	x19, [x29, #144]
  4596e4:	bl	458488 <ferror@plt+0x55c08>
  4596e8:	mov	x22, x0
  4596ec:	b	4595f4 <ferror@plt+0x56d74>
  4596f0:	mov	w1, w21
  4596f4:	add	x0, x29, #0x78
  4596f8:	bl	458ee8 <ferror@plt+0x56668>
  4596fc:	mov	x19, x0
  459700:	tbnz	w20, #0, 459624 <ferror@plt+0x56da4>
  459704:	cbz	x19, 459630 <ferror@plt+0x56db0>
  459708:	mov	x1, x19
  45970c:	mov	w0, w20
  459710:	add	x3, x29, #0x50
  459714:	adrp	x2, 448000 <ferror@plt+0x45780>
  459718:	add	x2, x2, #0x228
  45971c:	bl	459288 <ferror@plt+0x56a08>
  459720:	mov	sp, x24
  459724:	cbz	w0, 459764 <ferror@plt+0x56ee4>
  459728:	ldr	x0, [x29, #80]
  45972c:	mov	sp, x29
  459730:	ldp	x19, x20, [sp, #16]
  459734:	ldp	x21, x22, [sp, #32]
  459738:	ldp	x23, x24, [sp, #48]
  45973c:	ldr	x25, [sp, #64]
  459740:	ldp	x29, x30, [sp], #208
  459744:	ret
  459748:	add	x0, x29, #0x78
  45974c:	bl	4550d0 <ferror@plt+0x52850>
  459750:	mov	x19, x0
  459754:	b	459620 <ferror@plt+0x56da0>
  459758:	add	x25, x29, #0x78
  45975c:	mov	x22, #0x0                   	// #0
  459760:	b	4595f4 <ferror@plt+0x56d74>
  459764:	ldr	x0, [x29, #80]
  459768:	b	45968c <ferror@plt+0x56e0c>
  45976c:	nop
  459770:	stp	x29, x30, [sp, #-192]!
  459774:	mov	x29, sp
  459778:	stp	x19, x20, [sp, #16]
  45977c:	mov	x19, x0
  459780:	mov	w20, w1
  459784:	stp	x21, x22, [sp, #32]
  459788:	mov	x21, x2
  45978c:	mov	x22, x3
  459790:	stp	x23, x24, [sp, #48]
  459794:	stp	x25, x26, [sp, #64]
  459798:	str	x27, [sp, #80]
  45979c:	ldrb	w0, [x0]
  4597a0:	cmp	w0, #0x5f
  4597a4:	b.eq	45998c <ferror@plt+0x5710c>  // b.none
  4597a8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4597ac:	mov	x0, x19
  4597b0:	add	x1, x1, #0x778
  4597b4:	mov	x2, #0x8                   	// #8
  4597b8:	bl	402400 <strncmp@plt>
  4597bc:	cbz	w0, 45991c <ferror@plt+0x5709c>
  4597c0:	mov	w23, #0x0                   	// #0
  4597c4:	tbz	w20, #4, 459968 <ferror@plt+0x570e8>
  4597c8:	mov	x0, x19
  4597cc:	bl	402270 <strlen@plt>
  4597d0:	add	x1, x19, x0
  4597d4:	lsl	w3, w0, #1
  4597d8:	stp	x19, x1, [x29, #104]
  4597dc:	cmp	w3, #0x800
  4597e0:	and	w1, w20, #0x40000
  4597e4:	str	w20, [x29, #120]
  4597e8:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
  4597ec:	str	x19, [x29, #128]
  4597f0:	stp	wzr, w3, [x29, #144]
  4597f4:	stp	wzr, w0, [x29, #160]
  4597f8:	stp	xzr, xzr, [x29, #168]
  4597fc:	str	xzr, [x29, #184]
  459800:	b.eq	459968 <ferror@plt+0x570e8>  // b.none
  459804:	mov	x26, sp
  459808:	mov	w1, #0x18                  	// #24
  45980c:	sbfiz	x4, x0, #3, #32
  459810:	cmp	w23, #0x1
  459814:	add	x4, x4, #0xf
  459818:	smsubl	x0, w3, w1, x26
  45981c:	and	x4, x4, #0xfffffffffffffff0
  459820:	mov	sp, x0
  459824:	mov	x24, sp
  459828:	sub	sp, sp, x4
  45982c:	mov	x0, sp
  459830:	str	x24, [x29, #136]
  459834:	str	x0, [x29, #152]
  459838:	b.eq	4599cc <ferror@plt+0x5714c>  // b.none
  45983c:	sub	w0, w23, #0x2
  459840:	cmp	w0, #0x1
  459844:	b.hi	4599e0 <ferror@plt+0x57160>  // b.pmore
  459848:	cmp	w23, #0x2
  45984c:	ldrb	w0, [x19, #11]
  459850:	add	x25, x19, #0xb
  459854:	str	x25, [x29, #128]
  459858:	cset	w1, ne  // ne = any
  45985c:	cmp	w0, #0x5f
  459860:	add	w23, w1, #0x44
  459864:	b.eq	4599a0 <ferror@plt+0x57120>  // b.none
  459868:	cmp	w3, #0x0
  45986c:	b.le	4599f0 <ferror@plt+0x57170>
  459870:	mov	x0, x25
  459874:	bl	402270 <strlen@plt>
  459878:	mov	w1, #0x1                   	// #1
  45987c:	str	wzr, [x24, #4]
  459880:	str	w1, [x29, #144]
  459884:	cmp	w0, #0x0
  459888:	b.le	4599f0 <ferror@plt+0x57170>
  45988c:	add	x27, x29, #0x68
  459890:	str	wzr, [x24]
  459894:	str	x25, [x24, #8]
  459898:	str	w0, [x24, #16]
  45989c:	mov	w1, w23
  4598a0:	mov	x2, x24
  4598a4:	mov	x3, #0x0                   	// #0
  4598a8:	mov	x0, x27
  4598ac:	bl	447fa8 <ferror@plt+0x45728>
  4598b0:	mov	x19, x0
  4598b4:	ldr	x23, [x29, #128]
  4598b8:	mov	x0, x23
  4598bc:	bl	402270 <strlen@plt>
  4598c0:	add	x23, x23, x0
  4598c4:	str	x23, [x29, #128]
  4598c8:	tbz	w20, #0, 4598dc <ferror@plt+0x5705c>
  4598cc:	ldr	x1, [x29, #128]
  4598d0:	mov	w0, #0x0                   	// #0
  4598d4:	ldrb	w1, [x1]
  4598d8:	cbnz	w1, 4598f8 <ferror@plt+0x57078>
  4598dc:	mov	w0, #0x0                   	// #0
  4598e0:	cbz	x19, 4598f8 <ferror@plt+0x57078>
  4598e4:	mov	x3, x22
  4598e8:	mov	x2, x21
  4598ec:	mov	x1, x19
  4598f0:	mov	w0, w20
  4598f4:	bl	459288 <ferror@plt+0x56a08>
  4598f8:	mov	sp, x26
  4598fc:	mov	sp, x29
  459900:	ldp	x19, x20, [sp, #16]
  459904:	ldp	x21, x22, [sp, #32]
  459908:	ldp	x23, x24, [sp, #48]
  45990c:	ldp	x25, x26, [sp, #64]
  459910:	ldr	x27, [sp, #80]
  459914:	ldp	x29, x30, [sp], #192
  459918:	ret
  45991c:	ldrb	w0, [x19, #8]
  459920:	mov	w2, #0x5f                  	// #95
  459924:	mov	w1, #0x24                  	// #36
  459928:	cmp	w0, #0x2e
  45992c:	ccmp	w0, w2, #0x4, ne  // ne = any
  459930:	ccmp	w0, w1, #0x4, ne  // ne = any
  459934:	b.ne	4597c0 <ferror@plt+0x56f40>  // b.any
  459938:	ldrb	w0, [x19, #9]
  45993c:	mov	w1, #0x49                  	// #73
  459940:	cmp	w0, #0x44
  459944:	ccmp	w0, w1, #0x4, ne  // ne = any
  459948:	b.ne	4597c0 <ferror@plt+0x56f40>  // b.any
  45994c:	ldrb	w1, [x19, #10]
  459950:	cmp	w1, w2
  459954:	b.ne	4597c0 <ferror@plt+0x56f40>  // b.any
  459958:	cmp	w0, #0x49
  45995c:	cset	w23, ne  // ne = any
  459960:	add	w23, w23, #0x2
  459964:	b	4597c8 <ferror@plt+0x56f48>
  459968:	mov	sp, x29
  45996c:	mov	w0, #0x0                   	// #0
  459970:	ldp	x19, x20, [sp, #16]
  459974:	ldp	x21, x22, [sp, #32]
  459978:	ldp	x23, x24, [sp, #48]
  45997c:	ldp	x25, x26, [sp, #64]
  459980:	ldr	x27, [sp, #80]
  459984:	ldp	x29, x30, [sp], #192
  459988:	ret
  45998c:	ldrb	w0, [x19, #1]
  459990:	cmp	w0, #0x5a
  459994:	b.ne	4597a8 <ferror@plt+0x56f28>  // b.any
  459998:	mov	w23, #0x1                   	// #1
  45999c:	b	4597c8 <ferror@plt+0x56f48>
  4599a0:	ldrb	w0, [x19, #12]
  4599a4:	cmp	w0, #0x5a
  4599a8:	b.ne	459868 <ferror@plt+0x56fe8>  // b.any
  4599ac:	add	x27, x29, #0x68
  4599b0:	add	x19, x19, #0xd
  4599b4:	mov	x0, x27
  4599b8:	mov	w1, #0x0                   	// #0
  4599bc:	str	x19, [x29, #128]
  4599c0:	bl	458488 <ferror@plt+0x55c08>
  4599c4:	mov	x24, x0
  4599c8:	b	45989c <ferror@plt+0x5701c>
  4599cc:	mov	w1, w23
  4599d0:	add	x0, x29, #0x68
  4599d4:	bl	458ee8 <ferror@plt+0x56668>
  4599d8:	mov	x19, x0
  4599dc:	b	4598c8 <ferror@plt+0x57048>
  4599e0:	add	x0, x29, #0x68
  4599e4:	bl	4550d0 <ferror@plt+0x52850>
  4599e8:	mov	x19, x0
  4599ec:	b	4598c8 <ferror@plt+0x57048>
  4599f0:	add	x27, x29, #0x68
  4599f4:	mov	x24, #0x0                   	// #0
  4599f8:	b	45989c <ferror@plt+0x5701c>
  4599fc:	nop
  459a00:	stp	x29, x30, [sp, #-192]!
  459a04:	mov	x29, sp
  459a08:	stp	x19, x20, [sp, #16]
  459a0c:	mov	x19, x0
  459a10:	stp	x21, x22, [sp, #32]
  459a14:	stp	x23, x24, [sp, #48]
  459a18:	ldrb	w0, [x0]
  459a1c:	str	xzr, [x29, #64]
  459a20:	stp	xzr, xzr, [x29, #72]
  459a24:	cmp	w0, #0x5f
  459a28:	str	wzr, [x29, #88]
  459a2c:	b.eq	459b74 <ferror@plt+0x572f4>  // b.none
  459a30:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  459a34:	mov	x0, x19
  459a38:	add	x1, x1, #0x778
  459a3c:	mov	x2, #0x8                   	// #8
  459a40:	bl	402400 <strncmp@plt>
  459a44:	cbnz	w0, 459b64 <ferror@plt+0x572e4>
  459a48:	ldrb	w0, [x19, #8]
  459a4c:	mov	w2, #0x5f                  	// #95
  459a50:	mov	w1, #0x24                  	// #36
  459a54:	cmp	w0, #0x2e
  459a58:	ccmp	w0, w2, #0x4, ne  // ne = any
  459a5c:	ccmp	w0, w1, #0x4, ne  // ne = any
  459a60:	b.ne	459b64 <ferror@plt+0x572e4>  // b.any
  459a64:	ldrb	w0, [x19, #9]
  459a68:	mov	w1, #0x49                  	// #73
  459a6c:	cmp	w0, #0x44
  459a70:	ccmp	w0, w1, #0x4, ne  // ne = any
  459a74:	b.ne	459b64 <ferror@plt+0x572e4>  // b.any
  459a78:	ldrb	w1, [x19, #10]
  459a7c:	cmp	w1, w2
  459a80:	b.ne	459b64 <ferror@plt+0x572e4>  // b.any
  459a84:	cmp	w0, #0x49
  459a88:	mov	w21, #0x2                   	// #2
  459a8c:	mov	w0, #0x3                   	// #3
  459a90:	cset	w20, ne  // ne = any
  459a94:	csel	w21, w21, w0, eq  // eq = none
  459a98:	mov	x0, x19
  459a9c:	bl	402270 <strlen@plt>
  459aa0:	mov	w1, #0x25                  	// #37
  459aa4:	lsl	w3, w0, #1
  459aa8:	add	x2, x19, x0
  459aac:	stp	x19, x2, [x29, #104]
  459ab0:	cmp	w3, #0x800
  459ab4:	str	w1, [x29, #120]
  459ab8:	str	x19, [x29, #128]
  459abc:	stp	wzr, w3, [x29, #144]
  459ac0:	stp	wzr, w0, [x29, #160]
  459ac4:	stp	xzr, xzr, [x29, #168]
  459ac8:	str	xzr, [x29, #184]
  459acc:	b.hi	459b64 <ferror@plt+0x572e4>  // b.pmore
  459ad0:	mov	x22, sp
  459ad4:	mov	w2, #0x18                  	// #24
  459ad8:	sbfiz	x1, x0, #3, #32
  459adc:	cmp	w20, #0x1
  459ae0:	add	x1, x1, #0xf
  459ae4:	smsubl	x0, w3, w2, x22
  459ae8:	and	x1, x1, #0xfffffffffffffff0
  459aec:	mov	sp, x0
  459af0:	mov	x20, sp
  459af4:	sub	sp, sp, x1
  459af8:	mov	x0, sp
  459afc:	str	x20, [x29, #136]
  459b00:	str	x0, [x29, #152]
  459b04:	b.ls	459b98 <ferror@plt+0x57318>  // b.plast
  459b08:	add	x0, x29, #0x68
  459b0c:	mov	w1, #0x1                   	// #1
  459b10:	bl	458ee8 <ferror@plt+0x56668>
  459b14:	mov	x19, x0
  459b18:	ldr	x0, [x29, #128]
  459b1c:	ldrb	w0, [x0]
  459b20:	cbnz	w0, 459b8c <ferror@plt+0x5730c>
  459b24:	cbz	x19, 459b8c <ferror@plt+0x5730c>
  459b28:	mov	x1, x19
  459b2c:	add	x3, x29, #0x40
  459b30:	adrp	x2, 448000 <ferror@plt+0x45780>
  459b34:	mov	w0, #0x25                  	// #37
  459b38:	add	x2, x2, #0x228
  459b3c:	bl	459288 <ferror@plt+0x56a08>
  459b40:	mov	sp, x22
  459b44:	cbz	w0, 459c54 <ferror@plt+0x573d4>
  459b48:	ldr	x0, [x29, #64]
  459b4c:	mov	sp, x29
  459b50:	ldp	x19, x20, [sp, #16]
  459b54:	ldp	x21, x22, [sp, #32]
  459b58:	ldp	x23, x24, [sp, #48]
  459b5c:	ldp	x29, x30, [sp], #192
  459b60:	ret
  459b64:	mov	x0, #0x0                   	// #0
  459b68:	bl	402640 <free@plt>
  459b6c:	mov	x0, #0x0                   	// #0
  459b70:	b	459b4c <ferror@plt+0x572cc>
  459b74:	ldrb	w0, [x19, #1]
  459b78:	cmp	w0, #0x5a
  459b7c:	b.ne	459a30 <ferror@plt+0x571b0>  // b.any
  459b80:	mov	w20, #0xffffffff            	// #-1
  459b84:	mov	w21, #0x1                   	// #1
  459b88:	b	459a98 <ferror@plt+0x57218>
  459b8c:	mov	sp, x22
  459b90:	ldr	x0, [x29, #64]
  459b94:	b	459b68 <ferror@plt+0x572e8>
  459b98:	cmp	w21, #0x2
  459b9c:	ldrb	w0, [x19, #11]
  459ba0:	add	x23, x19, #0xb
  459ba4:	str	x23, [x29, #128]
  459ba8:	cset	w21, ne  // ne = any
  459bac:	cmp	w0, #0x5f
  459bb0:	add	w21, w21, #0x44
  459bb4:	b.ne	459bc4 <ferror@plt+0x57344>  // b.any
  459bb8:	ldrb	w0, [x19, #12]
  459bbc:	cmp	w0, #0x5a
  459bc0:	b.eq	459c34 <ferror@plt+0x573b4>  // b.none
  459bc4:	cmp	w3, #0x0
  459bc8:	b.le	459c28 <ferror@plt+0x573a8>
  459bcc:	mov	x0, x23
  459bd0:	bl	402270 <strlen@plt>
  459bd4:	mov	w1, #0x1                   	// #1
  459bd8:	str	wzr, [x20, #4]
  459bdc:	str	w1, [x29, #144]
  459be0:	cmp	w0, #0x0
  459be4:	b.le	459c28 <ferror@plt+0x573a8>
  459be8:	add	x24, x29, #0x68
  459bec:	str	wzr, [x20]
  459bf0:	str	x23, [x20, #8]
  459bf4:	str	w0, [x20, #16]
  459bf8:	mov	x2, x20
  459bfc:	mov	w1, w21
  459c00:	mov	x3, #0x0                   	// #0
  459c04:	mov	x0, x24
  459c08:	bl	447fa8 <ferror@plt+0x45728>
  459c0c:	mov	x19, x0
  459c10:	ldr	x20, [x29, #128]
  459c14:	mov	x0, x20
  459c18:	bl	402270 <strlen@plt>
  459c1c:	add	x0, x20, x0
  459c20:	str	x0, [x29, #128]
  459c24:	b	459b1c <ferror@plt+0x5729c>
  459c28:	add	x24, x29, #0x68
  459c2c:	mov	x20, #0x0                   	// #0
  459c30:	b	459bf8 <ferror@plt+0x57378>
  459c34:	add	x24, x29, #0x68
  459c38:	add	x19, x19, #0xd
  459c3c:	mov	x0, x24
  459c40:	mov	w1, #0x0                   	// #0
  459c44:	str	x19, [x29, #128]
  459c48:	bl	458488 <ferror@plt+0x55c08>
  459c4c:	mov	x20, x0
  459c50:	b	459bf8 <ferror@plt+0x57378>
  459c54:	ldr	x0, [x29, #64]
  459c58:	b	459b68 <ferror@plt+0x572e8>
  459c5c:	nop
  459c60:	stp	x29, x30, [sp, #-176]!
  459c64:	mov	x29, sp
  459c68:	stp	x19, x20, [sp, #16]
  459c6c:	mov	x19, x0
  459c70:	mov	x20, x1
  459c74:	stp	x21, x22, [sp, #32]
  459c78:	mov	x21, x2
  459c7c:	stp	x23, x24, [sp, #48]
  459c80:	stp	x25, x26, [sp, #64]
  459c84:	ldrb	w0, [x0]
  459c88:	cmp	w0, #0x5f
  459c8c:	b.eq	459dd0 <ferror@plt+0x57550>  // b.none
  459c90:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  459c94:	mov	x0, x19
  459c98:	add	x1, x1, #0x778
  459c9c:	mov	x2, #0x8                   	// #8
  459ca0:	bl	402400 <strncmp@plt>
  459ca4:	cbnz	w0, 459db0 <ferror@plt+0x57530>
  459ca8:	ldrb	w0, [x19, #8]
  459cac:	mov	w2, #0x5f                  	// #95
  459cb0:	mov	w1, #0x24                  	// #36
  459cb4:	cmp	w0, #0x2e
  459cb8:	ccmp	w0, w2, #0x4, ne  // ne = any
  459cbc:	ccmp	w0, w1, #0x4, ne  // ne = any
  459cc0:	b.ne	459db0 <ferror@plt+0x57530>  // b.any
  459cc4:	ldrb	w0, [x19, #9]
  459cc8:	mov	w1, #0x49                  	// #73
  459ccc:	cmp	w0, #0x44
  459cd0:	ccmp	w0, w1, #0x4, ne  // ne = any
  459cd4:	b.ne	459db0 <ferror@plt+0x57530>  // b.any
  459cd8:	ldrb	w1, [x19, #10]
  459cdc:	cmp	w1, w2
  459ce0:	b.ne	459db0 <ferror@plt+0x57530>  // b.any
  459ce4:	cmp	w0, #0x49
  459ce8:	mov	w23, #0x2                   	// #2
  459cec:	mov	w0, #0x3                   	// #3
  459cf0:	cset	w22, ne  // ne = any
  459cf4:	csel	w23, w23, w0, eq  // eq = none
  459cf8:	mov	x0, x19
  459cfc:	bl	402270 <strlen@plt>
  459d00:	mov	w1, #0x25                  	// #37
  459d04:	lsl	w4, w0, #1
  459d08:	add	x2, x19, x0
  459d0c:	stp	x19, x2, [x29, #88]
  459d10:	cmp	w4, #0x800
  459d14:	str	w1, [x29, #104]
  459d18:	str	x19, [x29, #112]
  459d1c:	stp	wzr, w4, [x29, #128]
  459d20:	stp	wzr, w0, [x29, #144]
  459d24:	stp	xzr, xzr, [x29, #152]
  459d28:	str	xzr, [x29, #168]
  459d2c:	b.hi	459db0 <ferror@plt+0x57530>  // b.pmore
  459d30:	mov	x24, sp
  459d34:	mov	w1, #0x18                  	// #24
  459d38:	sbfiz	x3, x0, #3, #32
  459d3c:	cmp	w22, #0x1
  459d40:	add	x3, x3, #0xf
  459d44:	smsubl	x0, w4, w1, x24
  459d48:	and	x3, x3, #0xfffffffffffffff0
  459d4c:	mov	sp, x0
  459d50:	mov	x22, sp
  459d54:	sub	sp, sp, x3
  459d58:	mov	x0, sp
  459d5c:	str	x22, [x29, #120]
  459d60:	str	x0, [x29, #136]
  459d64:	b.ls	459e04 <ferror@plt+0x57584>  // b.plast
  459d68:	add	x0, x29, #0x58
  459d6c:	mov	w1, #0x1                   	// #1
  459d70:	bl	458ee8 <ferror@plt+0x56668>
  459d74:	mov	x19, x0
  459d78:	ldr	x0, [x29, #112]
  459d7c:	ldrb	w1, [x0]
  459d80:	mov	w0, #0x0                   	// #0
  459d84:	cmp	w1, #0x0
  459d88:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  459d8c:	b.ne	459de8 <ferror@plt+0x57568>  // b.any
  459d90:	mov	sp, x24
  459d94:	mov	sp, x29
  459d98:	ldp	x19, x20, [sp, #16]
  459d9c:	ldp	x21, x22, [sp, #32]
  459da0:	ldp	x23, x24, [sp, #48]
  459da4:	ldp	x25, x26, [sp, #64]
  459da8:	ldp	x29, x30, [sp], #176
  459dac:	ret
  459db0:	mov	sp, x29
  459db4:	mov	w0, #0x0                   	// #0
  459db8:	ldp	x19, x20, [sp, #16]
  459dbc:	ldp	x21, x22, [sp, #32]
  459dc0:	ldp	x23, x24, [sp, #48]
  459dc4:	ldp	x25, x26, [sp, #64]
  459dc8:	ldp	x29, x30, [sp], #176
  459dcc:	ret
  459dd0:	ldrb	w0, [x19, #1]
  459dd4:	cmp	w0, #0x5a
  459dd8:	b.ne	459c90 <ferror@plt+0x57410>  // b.any
  459ddc:	mov	w22, #0xffffffff            	// #-1
  459de0:	mov	w23, #0x1                   	// #1
  459de4:	b	459cf8 <ferror@plt+0x57478>
  459de8:	mov	x3, x21
  459dec:	mov	x2, x20
  459df0:	mov	x1, x19
  459df4:	mov	w0, #0x25                  	// #37
  459df8:	bl	459288 <ferror@plt+0x56a08>
  459dfc:	mov	sp, x24
  459e00:	b	459d94 <ferror@plt+0x57514>
  459e04:	cmp	w23, #0x2
  459e08:	ldrb	w0, [x19, #11]
  459e0c:	add	x25, x19, #0xb
  459e10:	str	x25, [x29, #112]
  459e14:	cset	w23, ne  // ne = any
  459e18:	cmp	w0, #0x5f
  459e1c:	add	w23, w23, #0x44
  459e20:	b.ne	459e30 <ferror@plt+0x575b0>  // b.any
  459e24:	ldrb	w0, [x19, #12]
  459e28:	cmp	w0, #0x5a
  459e2c:	b.eq	459ea0 <ferror@plt+0x57620>  // b.none
  459e30:	cmp	w4, #0x0
  459e34:	b.le	459e94 <ferror@plt+0x57614>
  459e38:	mov	x0, x25
  459e3c:	bl	402270 <strlen@plt>
  459e40:	mov	w1, #0x1                   	// #1
  459e44:	str	wzr, [x22, #4]
  459e48:	str	w1, [x29, #128]
  459e4c:	cmp	w0, #0x0
  459e50:	b.le	459e94 <ferror@plt+0x57614>
  459e54:	add	x26, x29, #0x58
  459e58:	str	wzr, [x22]
  459e5c:	str	x25, [x22, #8]
  459e60:	str	w0, [x22, #16]
  459e64:	mov	x2, x22
  459e68:	mov	w1, w23
  459e6c:	mov	x3, #0x0                   	// #0
  459e70:	mov	x0, x26
  459e74:	bl	447fa8 <ferror@plt+0x45728>
  459e78:	mov	x19, x0
  459e7c:	ldr	x22, [x29, #112]
  459e80:	mov	x0, x22
  459e84:	bl	402270 <strlen@plt>
  459e88:	add	x0, x22, x0
  459e8c:	str	x0, [x29, #112]
  459e90:	b	459d7c <ferror@plt+0x574fc>
  459e94:	add	x26, x29, #0x58
  459e98:	mov	x22, #0x0                   	// #0
  459e9c:	b	459e64 <ferror@plt+0x575e4>
  459ea0:	add	x26, x29, #0x58
  459ea4:	add	x19, x19, #0xd
  459ea8:	mov	x0, x26
  459eac:	mov	w1, #0x0                   	// #0
  459eb0:	str	x19, [x29, #112]
  459eb4:	bl	458488 <ferror@plt+0x55c08>
  459eb8:	mov	x22, x0
  459ebc:	b	459e64 <ferror@plt+0x575e4>
  459ec0:	stp	x29, x30, [sp, #-128]!
  459ec4:	mov	x29, sp
  459ec8:	stp	x19, x20, [sp, #16]
  459ecc:	mov	x19, x0
  459ed0:	mov	x20, sp
  459ed4:	bl	402270 <strlen@plt>
  459ed8:	lsl	w4, w0, #1
  459edc:	mov	w7, #0x18                  	// #24
  459ee0:	sbfiz	x3, x0, #3, #32
  459ee4:	add	x3, x3, #0xf
  459ee8:	mov	w5, #0x4000                	// #16384
  459eec:	smsubl	x7, w4, w7, x20
  459ef0:	and	x3, x3, #0xfffffffffffffff0
  459ef4:	str	w5, [x29, #56]
  459ef8:	mov	x2, x0
  459efc:	mov	sp, x7
  459f00:	add	x6, x19, x0
  459f04:	mov	x5, sp
  459f08:	sub	sp, sp, x3
  459f0c:	mov	x3, sp
  459f10:	add	x0, x29, #0x28
  459f14:	mov	w1, #0x1                   	// #1
  459f18:	stp	x19, x6, [x29, #40]
  459f1c:	str	x19, [x29, #64]
  459f20:	str	x5, [x29, #72]
  459f24:	stp	wzr, w4, [x29, #80]
  459f28:	str	x3, [x29, #88]
  459f2c:	stp	wzr, w2, [x29, #96]
  459f30:	stp	xzr, xzr, [x29, #104]
  459f34:	str	xzr, [x29, #120]
  459f38:	bl	458ee8 <ferror@plt+0x56668>
  459f3c:	cbz	x0, 459fa8 <ferror@plt+0x57728>
  459f40:	ldr	w1, [x0]
  459f44:	cmp	w1, #0x7
  459f48:	b.eq	459f88 <ferror@plt+0x57708>  // b.none
  459f4c:	b.hi	459f60 <ferror@plt+0x576e0>  // b.pmore
  459f50:	sub	w2, w1, #0x3
  459f54:	cmp	w1, #0x2
  459f58:	b.hi	459f78 <ferror@plt+0x576f8>  // b.pmore
  459f5c:	cbnz	w1, 459fa0 <ferror@plt+0x57720>
  459f60:	mov	sp, x20
  459f64:	mov	w0, #0x0                   	// #0
  459f68:	mov	sp, x29
  459f6c:	ldp	x19, x20, [sp, #16]
  459f70:	ldp	x29, x30, [sp], #128
  459f74:	ret
  459f78:	cmp	w2, #0x1
  459f7c:	b.hi	459f60 <ferror@plt+0x576e0>  // b.pmore
  459f80:	ldr	x0, [x0, #8]
  459f84:	b	459f3c <ferror@plt+0x576bc>
  459f88:	ldr	w0, [x0, #8]
  459f8c:	mov	sp, x20
  459f90:	mov	sp, x29
  459f94:	ldp	x19, x20, [sp, #16]
  459f98:	ldp	x29, x30, [sp], #128
  459f9c:	ret
  459fa0:	ldr	x0, [x0, #16]
  459fa4:	b	459f3c <ferror@plt+0x576bc>
  459fa8:	mov	w0, #0x0                   	// #0
  459fac:	mov	sp, x20
  459fb0:	b	459f68 <ferror@plt+0x576e8>
  459fb4:	nop
  459fb8:	stp	x29, x30, [sp, #-128]!
  459fbc:	mov	x29, sp
  459fc0:	stp	x19, x20, [sp, #16]
  459fc4:	mov	x19, x0
  459fc8:	mov	x20, sp
  459fcc:	bl	402270 <strlen@plt>
  459fd0:	lsl	w4, w0, #1
  459fd4:	mov	w7, #0x18                  	// #24
  459fd8:	sbfiz	x3, x0, #3, #32
  459fdc:	add	x3, x3, #0xf
  459fe0:	mov	w5, #0x4000                	// #16384
  459fe4:	smsubl	x7, w4, w7, x20
  459fe8:	and	x3, x3, #0xfffffffffffffff0
  459fec:	str	w5, [x29, #56]
  459ff0:	mov	x2, x0
  459ff4:	mov	sp, x7
  459ff8:	add	x6, x19, x0
  459ffc:	mov	x5, sp
  45a000:	sub	sp, sp, x3
  45a004:	mov	x3, sp
  45a008:	add	x0, x29, #0x28
  45a00c:	mov	w1, #0x1                   	// #1
  45a010:	stp	x19, x6, [x29, #40]
  45a014:	str	x19, [x29, #64]
  45a018:	str	x5, [x29, #72]
  45a01c:	stp	wzr, w4, [x29, #80]
  45a020:	str	x3, [x29, #88]
  45a024:	stp	wzr, w2, [x29, #96]
  45a028:	stp	xzr, xzr, [x29, #104]
  45a02c:	str	xzr, [x29, #120]
  45a030:	bl	458ee8 <ferror@plt+0x56668>
  45a034:	cbz	x0, 45a0a8 <ferror@plt+0x57828>
  45a038:	ldr	w1, [x0]
  45a03c:	cmp	w1, #0x7
  45a040:	b.eq	45a058 <ferror@plt+0x577d8>  // b.none
  45a044:	b.hi	45a080 <ferror@plt+0x57800>  // b.pmore
  45a048:	sub	w2, w1, #0x3
  45a04c:	cmp	w1, #0x2
  45a050:	b.hi	45a070 <ferror@plt+0x577f0>  // b.pmore
  45a054:	cbnz	w1, 45a0a0 <ferror@plt+0x57820>
  45a058:	mov	sp, x20
  45a05c:	mov	w0, #0x0                   	// #0
  45a060:	mov	sp, x29
  45a064:	ldp	x19, x20, [sp, #16]
  45a068:	ldp	x29, x30, [sp], #128
  45a06c:	ret
  45a070:	cmp	w2, #0x1
  45a074:	b.hi	45a058 <ferror@plt+0x577d8>  // b.pmore
  45a078:	ldr	x0, [x0, #8]
  45a07c:	b	45a034 <ferror@plt+0x577b4>
  45a080:	cmp	w1, #0x8
  45a084:	b.ne	45a058 <ferror@plt+0x577d8>  // b.any
  45a088:	ldr	w0, [x0, #8]
  45a08c:	mov	sp, x20
  45a090:	mov	sp, x29
  45a094:	ldp	x19, x20, [sp, #16]
  45a098:	ldp	x29, x30, [sp], #128
  45a09c:	ret
  45a0a0:	ldr	x0, [x0, #16]
  45a0a4:	b	45a034 <ferror@plt+0x577b4>
  45a0a8:	mov	w0, #0x0                   	// #0
  45a0ac:	mov	sp, x20
  45a0b0:	b	45a060 <ferror@plt+0x577e0>
  45a0b4:	nop
  45a0b8:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45a0bc:	str	xzr, [x0, #16]
  45a0c0:	str	wzr, [x0, #24]
  45a0c4:	ldr	q0, [x1, #3392]
  45a0c8:	str	q0, [x0]
  45a0cc:	ret
  45a0d0:	mov	x2, x0
  45a0d4:	mov	x0, x1
  45a0d8:	ldr	q0, [x2]
  45a0dc:	str	q0, [x1]
  45a0e0:	ret
  45a0e4:	nop
  45a0e8:	stp	x29, x30, [sp, #-96]!
  45a0ec:	lsr	x5, x1, #32
  45a0f0:	mov	x29, sp
  45a0f4:	ldp	w4, w3, [x2, #16]
  45a0f8:	stp	x25, x26, [sp, #64]
  45a0fc:	and	x26, x1, #0xfffffffffffffffc
  45a100:	add	w4, w4, w1
  45a104:	add	w3, w3, w5
  45a108:	add	x26, x0, x26
  45a10c:	ldr	w10, [x2, #4]
  45a110:	cmp	x1, w4, uxtw
  45a114:	ldr	s2, [x2]
  45a118:	cinc	w1, w3, hi  // hi = pmore
  45a11c:	stp	w4, w1, [x2, #16]
  45a120:	ldp	s0, s1, [x2, #8]
  45a124:	cmp	x0, x26
  45a128:	b.cs	45ab28 <ferror@plt+0x582a8>  // b.hs, b.nlast
  45a12c:	stp	x27, x28, [sp, #80]
  45a130:	mov	w28, #0xa478                	// #42104
  45a134:	mov	w27, #0xb756                	// #46934
  45a138:	movk	w28, #0xd76a, lsl #16
  45a13c:	movk	w27, #0xe8c7, lsl #16
  45a140:	stp	x19, x20, [sp, #16]
  45a144:	stp	x21, x22, [sp, #32]
  45a148:	stp	x23, x24, [sp, #48]
  45a14c:	nop
  45a150:	eor	v3.8b, v0.8b, v1.8b
  45a154:	fmov	w3, s1
  45a158:	fmov	w1, s2
  45a15c:	ldp	w19, w15, [x0]
  45a160:	fmov	w7, s0
  45a164:	fmov	w4, s3
  45a168:	mov	w6, #0x70db                	// #28891
  45a16c:	add	w1, w1, w28
  45a170:	movk	w6, #0x2420, lsl #16
  45a174:	ldp	w8, w16, [x0, #8]
  45a178:	add	w6, w7, w6
  45a17c:	and	w4, w4, w10
  45a180:	ldr	w14, [x0, #32]
  45a184:	eor	w4, w4, w3
  45a188:	fmov	w3, s0
  45a18c:	add	w4, w4, w19
  45a190:	add	w4, w4, w1
  45a194:	fmov	w1, s1
  45a198:	ldp	w11, w17, [x0, #16]
  45a19c:	ror	w4, w4, #25
  45a1a0:	add	w4, w4, w10
  45a1a4:	eor	w3, w10, w3
  45a1a8:	and	w3, w3, w4
  45a1ac:	add	w5, w1, w27
  45a1b0:	eor	w3, w3, w7
  45a1b4:	eor	w1, w4, w10
  45a1b8:	add	w3, w3, w15
  45a1bc:	mov	w7, #0xceee                	// #52974
  45a1c0:	add	w3, w3, w5
  45a1c4:	mov	w5, #0xfaf                 	// #4015
  45a1c8:	movk	w5, #0xf57c, lsl #16
  45a1cc:	add	w25, w11, w5
  45a1d0:	mov	w5, #0xc62a                	// #50730
  45a1d4:	ror	w3, w3, #20
  45a1d8:	add	w3, w4, w3
  45a1dc:	movk	w5, #0x4787, lsl #16
  45a1e0:	and	w1, w1, w3
  45a1e4:	add	w23, w17, w5
  45a1e8:	eor	w1, w1, w10
  45a1ec:	eor	w5, w4, w3
  45a1f0:	add	w1, w1, w8
  45a1f4:	movk	w7, #0xc1bd, lsl #16
  45a1f8:	add	w1, w1, w6
  45a1fc:	add	w9, w10, w7
  45a200:	ldp	w13, w18, [x0, #24]
  45a204:	ror	w1, w1, #15
  45a208:	add	w1, w3, w1
  45a20c:	mov	w7, #0x4613                	// #17939
  45a210:	and	w5, w5, w1
  45a214:	eor	w21, w3, w1
  45a218:	eor	w5, w5, w4
  45a21c:	movk	w7, #0xa830, lsl #16
  45a220:	add	w5, w5, w16
  45a224:	add	w20, w13, w7
  45a228:	add	w5, w5, w9
  45a22c:	mov	w6, #0x9501                	// #38145
  45a230:	movk	w6, #0xfd46, lsl #16
  45a234:	add	w22, w18, w6
  45a238:	mov	w6, #0x98d8                	// #39128
  45a23c:	ror	w5, w5, #10
  45a240:	add	w5, w1, w5
  45a244:	movk	w6, #0x6980, lsl #16
  45a248:	and	w21, w21, w5
  45a24c:	eor	w30, w1, w5
  45a250:	eor	w21, w21, w3
  45a254:	add	w12, w14, w6
  45a258:	add	w4, w21, w4
  45a25c:	ldr	w7, [x0, #36]
  45a260:	add	w4, w25, w4
  45a264:	mov	w6, #0xf7af                	// #63407
  45a268:	movk	w6, #0x8b44, lsl #16
  45a26c:	add	w24, w7, w6
  45a270:	ldr	w6, [x0, #40]
  45a274:	ror	w4, w4, #25
  45a278:	add	w4, w5, w4
  45a27c:	mov	w21, #0xffff5bb1            	// #-42063
  45a280:	and	w25, w30, w4
  45a284:	add	w21, w6, w21
  45a288:	eor	w25, w25, w1
  45a28c:	add	w3, w25, w3
  45a290:	eor	w25, w5, w4
  45a294:	add	w3, w23, w3
  45a298:	mov	w23, #0xd7be                	// #55230
  45a29c:	movk	w23, #0x895c, lsl #16
  45a2a0:	ror	w3, w3, #20
  45a2a4:	add	w3, w4, w3
  45a2a8:	and	w25, w25, w3
  45a2ac:	eor	w25, w25, w5
  45a2b0:	add	w1, w25, w1
  45a2b4:	eor	w25, w4, w3
  45a2b8:	add	w1, w20, w1
  45a2bc:	ldp	w9, w20, [x0, #44]
  45a2c0:	ror	w1, w1, #15
  45a2c4:	add	w1, w3, w1
  45a2c8:	and	w25, w25, w1
  45a2cc:	add	w23, w9, w23
  45a2d0:	eor	w25, w25, w4
  45a2d4:	add	w5, w25, w5
  45a2d8:	eor	w25, w3, w1
  45a2dc:	add	w5, w22, w5
  45a2e0:	mov	w22, #0x1122                	// #4386
  45a2e4:	movk	w22, #0x6b90, lsl #16
  45a2e8:	add	w22, w20, w22
  45a2ec:	ror	w5, w5, #10
  45a2f0:	add	w5, w1, w5
  45a2f4:	and	w25, w25, w5
  45a2f8:	eor	w25, w25, w3
  45a2fc:	add	w4, w25, w4
  45a300:	eor	w25, w1, w5
  45a304:	add	w4, w12, w4
  45a308:	ldr	w12, [x0, #52]
  45a30c:	ror	w4, w4, #25
  45a310:	add	w4, w5, w4
  45a314:	and	w25, w25, w4
  45a318:	eor	w30, w5, w4
  45a31c:	eor	w25, w25, w1
  45a320:	add	w3, w25, w3
  45a324:	add	w24, w24, w3
  45a328:	mov	w3, #0x7193                	// #29075
  45a32c:	movk	w3, #0xfd98, lsl #16
  45a330:	add	w25, w12, w3
  45a334:	mov	w3, #0x438e                	// #17294
  45a338:	ror	w24, w24, #20
  45a33c:	add	w24, w4, w24
  45a340:	movk	w3, #0xa679, lsl #16
  45a344:	and	w30, w30, w24
  45a348:	eor	w30, w30, w5
  45a34c:	add	w30, w30, w1
  45a350:	eor	w1, w4, w24
  45a354:	add	w30, w21, w30
  45a358:	ror	w30, w30, #15
  45a35c:	add	w30, w24, w30
  45a360:	and	w1, w1, w30
  45a364:	eor	w1, w1, w4
  45a368:	add	w5, w1, w5
  45a36c:	eor	w1, w24, w30
  45a370:	add	w23, w23, w5
  45a374:	ror	w23, w23, #10
  45a378:	add	w23, w30, w23
  45a37c:	and	w1, w1, w23
  45a380:	eor	w1, w1, w24
  45a384:	add	w1, w1, w4
  45a388:	eor	w4, w30, w23
  45a38c:	add	w22, w22, w1
  45a390:	ldp	w21, w1, [x0, #56]
  45a394:	ror	w22, w22, #25
  45a398:	add	w22, w23, w22
  45a39c:	add	x0, x0, #0x40
  45a3a0:	and	w4, w4, w22
  45a3a4:	eor	w5, w23, w22
  45a3a8:	eor	w4, w4, w30
  45a3ac:	add	w3, w21, w3
  45a3b0:	add	w24, w4, w24
  45a3b4:	mov	w4, #0x821                 	// #2081
  45a3b8:	add	w25, w25, w24
  45a3bc:	movk	w4, #0x49b4, lsl #16
  45a3c0:	add	w4, w1, w4
  45a3c4:	cmp	x26, x0
  45a3c8:	ror	w25, w25, #20
  45a3cc:	add	w25, w22, w25
  45a3d0:	and	w5, w5, w25
  45a3d4:	eor	w5, w5, w23
  45a3d8:	add	w30, w5, w30
  45a3dc:	eor	w5, w22, w25
  45a3e0:	add	w30, w3, w30
  45a3e4:	mov	w3, #0x2562                	// #9570
  45a3e8:	movk	w3, #0xf61e, lsl #16
  45a3ec:	add	w24, w15, w3
  45a3f0:	ror	w30, w30, #15
  45a3f4:	add	w30, w25, w30
  45a3f8:	and	w3, w5, w30
  45a3fc:	eor	w3, w3, w22
  45a400:	add	w23, w3, w23
  45a404:	mov	w3, #0xb340                	// #45888
  45a408:	add	w23, w4, w23
  45a40c:	movk	w3, #0xc040, lsl #16
  45a410:	add	w5, w13, w3
  45a414:	mov	w3, #0x5a51                	// #23121
  45a418:	movk	w3, #0x265e, lsl #16
  45a41c:	ror	w23, w23, #10
  45a420:	add	w23, w30, w23
  45a424:	add	w4, w9, w3
  45a428:	eor	w3, w30, w23
  45a42c:	and	w3, w3, w25
  45a430:	eor	w3, w3, w30
  45a434:	add	w22, w3, w22
  45a438:	mov	w3, #0xc7aa                	// #51114
  45a43c:	add	w24, w24, w22
  45a440:	movk	w3, #0xe9b6, lsl #16
  45a444:	add	w22, w19, w3
  45a448:	ror	w24, w24, #27
  45a44c:	add	w24, w23, w24
  45a450:	eor	w3, w23, w24
  45a454:	and	w3, w3, w30
  45a458:	eor	w3, w3, w23
  45a45c:	add	w25, w3, w25
  45a460:	mov	w3, #0x105d                	// #4189
  45a464:	add	w5, w5, w25
  45a468:	movk	w3, #0xd62f, lsl #16
  45a46c:	add	w3, w17, w3
  45a470:	ror	w5, w5, #23
  45a474:	add	w5, w24, w5
  45a478:	eor	w25, w24, w5
  45a47c:	and	w25, w25, w23
  45a480:	eor	w25, w25, w24
  45a484:	add	w30, w25, w30
  45a488:	add	w30, w4, w30
  45a48c:	mov	w4, #0x1453                	// #5203
  45a490:	movk	w4, #0x244, lsl #16
  45a494:	add	w25, w6, w4
  45a498:	ror	w30, w30, #18
  45a49c:	add	w30, w5, w30
  45a4a0:	eor	w4, w5, w30
  45a4a4:	and	w4, w4, w24
  45a4a8:	eor	w4, w4, w5
  45a4ac:	add	w23, w4, w23
  45a4b0:	mov	w4, #0xe681                	// #59009
  45a4b4:	add	w22, w22, w23
  45a4b8:	movk	w4, #0xd8a1, lsl #16
  45a4bc:	add	w4, w1, w4
  45a4c0:	ror	w22, w22, #12
  45a4c4:	add	w22, w30, w22
  45a4c8:	eor	w23, w30, w22
  45a4cc:	and	w23, w23, w5
  45a4d0:	eor	w23, w23, w30
  45a4d4:	add	w24, w23, w24
  45a4d8:	add	w24, w3, w24
  45a4dc:	mov	w3, #0xfbc8                	// #64456
  45a4e0:	movk	w3, #0xe7d3, lsl #16
  45a4e4:	add	w23, w11, w3
  45a4e8:	ror	w24, w24, #27
  45a4ec:	add	w24, w22, w24
  45a4f0:	eor	w3, w22, w24
  45a4f4:	and	w3, w3, w30
  45a4f8:	eor	w3, w3, w22
  45a4fc:	add	w5, w3, w5
  45a500:	mov	w3, #0xcde6                	// #52710
  45a504:	add	w25, w25, w5
  45a508:	movk	w3, #0x21e1, lsl #16
  45a50c:	add	w3, w7, w3
  45a510:	ror	w25, w25, #23
  45a514:	add	w25, w24, w25
  45a518:	eor	w5, w24, w25
  45a51c:	and	w5, w5, w22
  45a520:	eor	w5, w5, w24
  45a524:	add	w30, w5, w30
  45a528:	add	w30, w4, w30
  45a52c:	mov	w4, #0x7d6                 	// #2006
  45a530:	movk	w4, #0xc337, lsl #16
  45a534:	add	w5, w21, w4
  45a538:	ror	w30, w30, #18
  45a53c:	add	w30, w25, w30
  45a540:	eor	w4, w25, w30
  45a544:	and	w4, w4, w24
  45a548:	eor	w4, w4, w25
  45a54c:	add	w22, w4, w22
  45a550:	mov	w4, #0xd87                 	// #3463
  45a554:	add	w23, w23, w22
  45a558:	movk	w4, #0xf4d5, lsl #16
  45a55c:	add	w4, w16, w4
  45a560:	ror	w23, w23, #12
  45a564:	add	w23, w30, w23
  45a568:	eor	w22, w30, w23
  45a56c:	and	w22, w22, w25
  45a570:	eor	w22, w22, w30
  45a574:	add	w24, w22, w24
  45a578:	mov	w22, #0x14ed                	// #5357
  45a57c:	add	w24, w3, w24
  45a580:	movk	w22, #0x455a, lsl #16
  45a584:	add	w22, w14, w22
  45a588:	ror	w24, w24, #27
  45a58c:	add	w24, w23, w24
  45a590:	eor	w3, w23, w24
  45a594:	and	w3, w3, w30
  45a598:	eor	w3, w3, w23
  45a59c:	add	w25, w3, w25
  45a5a0:	mov	w3, #0xe905                	// #59653
  45a5a4:	add	w5, w5, w25
  45a5a8:	movk	w3, #0xa9e3, lsl #16
  45a5ac:	add	w3, w12, w3
  45a5b0:	ror	w5, w5, #23
  45a5b4:	add	w5, w24, w5
  45a5b8:	eor	w25, w24, w5
  45a5bc:	and	w25, w25, w23
  45a5c0:	eor	w25, w25, w24
  45a5c4:	add	w30, w25, w30
  45a5c8:	mov	w25, #0xa3f8                	// #41976
  45a5cc:	add	w4, w4, w30
  45a5d0:	movk	w25, #0xfcef, lsl #16
  45a5d4:	add	w25, w8, w25
  45a5d8:	ror	w4, w4, #18
  45a5dc:	add	w4, w5, w4
  45a5e0:	eor	w30, w5, w4
  45a5e4:	and	w30, w30, w24
  45a5e8:	eor	w30, w30, w5
  45a5ec:	add	w23, w30, w23
  45a5f0:	mov	w30, #0x2d9                 	// #729
  45a5f4:	add	w23, w22, w23
  45a5f8:	movk	w30, #0x676f, lsl #16
  45a5fc:	add	w30, w18, w30
  45a600:	ror	w23, w23, #12
  45a604:	add	w23, w4, w23
  45a608:	eor	w22, w4, w23
  45a60c:	and	w22, w22, w5
  45a610:	eor	w22, w22, w4
  45a614:	add	w24, w22, w24
  45a618:	mov	w22, #0x4c8a                	// #19594
  45a61c:	add	w3, w3, w24
  45a620:	movk	w22, #0x8d2a, lsl #16
  45a624:	add	w22, w20, w22
  45a628:	ror	w3, w3, #27
  45a62c:	add	w3, w23, w3
  45a630:	eor	w24, w23, w3
  45a634:	and	w24, w24, w4
  45a638:	eor	w24, w24, w23
  45a63c:	add	w5, w24, w5
  45a640:	add	w25, w25, w5
  45a644:	sub	w5, w17, #0x5c, lsl #12
  45a648:	sub	w5, w5, #0x6be
  45a64c:	ror	w25, w25, #23
  45a650:	add	w25, w3, w25
  45a654:	eor	w24, w3, w25
  45a658:	and	w24, w24, w23
  45a65c:	eor	w24, w24, w3
  45a660:	add	w4, w24, w4
  45a664:	add	w4, w30, w4
  45a668:	ror	w24, w4, #18
  45a66c:	add	w24, w25, w24
  45a670:	eor	w4, w25, w24
  45a674:	and	w30, w4, w3
  45a678:	eor	w30, w30, w25
  45a67c:	add	w23, w30, w23
  45a680:	mov	w30, #0xf681                	// #63105
  45a684:	add	w22, w22, w23
  45a688:	movk	w30, #0x8771, lsl #16
  45a68c:	add	w30, w14, w30
  45a690:	ror	w22, w22, #12
  45a694:	add	w22, w24, w22
  45a698:	eor	w4, w4, w22
  45a69c:	add	w3, w4, w3
  45a6a0:	eor	w4, w24, w22
  45a6a4:	add	w23, w5, w3
  45a6a8:	mov	w3, #0x6122                	// #24866
  45a6ac:	movk	w3, #0x6d9d, lsl #16
  45a6b0:	add	w3, w9, w3
  45a6b4:	mov	w5, #0x380c                	// #14348
  45a6b8:	ror	w23, w23, #28
  45a6bc:	add	w23, w22, w23
  45a6c0:	movk	w5, #0xfde5, lsl #16
  45a6c4:	eor	w4, w4, w23
  45a6c8:	add	w5, w21, w5
  45a6cc:	add	w25, w4, w25
  45a6d0:	eor	w4, w22, w23
  45a6d4:	add	w30, w30, w25
  45a6d8:	mov	w25, #0xea44                	// #59972
  45a6dc:	movk	w25, #0xa4be, lsl #16
  45a6e0:	add	w25, w15, w25
  45a6e4:	ror	w30, w30, #21
  45a6e8:	add	w30, w23, w30
  45a6ec:	eor	w4, w4, w30
  45a6f0:	add	w4, w4, w24
  45a6f4:	eor	w24, w23, w30
  45a6f8:	add	w4, w3, w4
  45a6fc:	ror	w4, w4, #16
  45a700:	add	w4, w30, w4
  45a704:	eor	w3, w24, w4
  45a708:	mov	w24, #0x4b60                	// #19296
  45a70c:	add	w3, w3, w22
  45a710:	eor	w22, w30, w4
  45a714:	add	w5, w5, w3
  45a718:	mov	w3, #0xcfa9                	// #53161
  45a71c:	movk	w3, #0x4bde, lsl #16
  45a720:	add	w3, w11, w3
  45a724:	movk	w24, #0xf6bb, lsl #16
  45a728:	ror	w5, w5, #9
  45a72c:	add	w5, w4, w5
  45a730:	add	w24, w18, w24
  45a734:	eor	w22, w22, w5
  45a738:	add	w23, w22, w23
  45a73c:	eor	w22, w4, w5
  45a740:	add	w25, w25, w23
  45a744:	mov	w23, #0xbc70                	// #48240
  45a748:	movk	w23, #0xbebf, lsl #16
  45a74c:	add	w23, w6, w23
  45a750:	sub	w6, w6, #0x100, lsl #12
  45a754:	ror	w25, w25, #28
  45a758:	add	w25, w5, w25
  45a75c:	sub	w6, w6, #0xb83
  45a760:	eor	w22, w22, w25
  45a764:	add	w30, w22, w30
  45a768:	eor	w22, w5, w25
  45a76c:	add	w3, w3, w30
  45a770:	mov	w30, #0x27fa                	// #10234
  45a774:	movk	w30, #0xeaa1, lsl #16
  45a778:	add	w30, w19, w30
  45a77c:	ror	w3, w3, #21
  45a780:	add	w3, w25, w3
  45a784:	eor	w22, w22, w3
  45a788:	add	w22, w22, w4
  45a78c:	eor	w4, w25, w3
  45a790:	add	w24, w24, w22
  45a794:	mov	w22, #0x7ec6                	// #32454
  45a798:	movk	w22, #0x289b, lsl #16
  45a79c:	add	w22, w12, w22
  45a7a0:	ror	w24, w24, #16
  45a7a4:	add	w24, w3, w24
  45a7a8:	eor	w4, w4, w24
  45a7ac:	add	w5, w4, w5
  45a7b0:	eor	w4, w3, w24
  45a7b4:	add	w23, w23, w5
  45a7b8:	ror	w23, w23, #9
  45a7bc:	add	w23, w24, w23
  45a7c0:	eor	w4, w4, w23
  45a7c4:	eor	w5, w24, w23
  45a7c8:	add	w25, w4, w25
  45a7cc:	mov	w4, #0x3085                	// #12421
  45a7d0:	add	w22, w22, w25
  45a7d4:	movk	w4, #0xd4ef, lsl #16
  45a7d8:	add	w4, w16, w4
  45a7dc:	mov	w25, #0xd039                	// #53305
  45a7e0:	movk	w25, #0xd9d4, lsl #16
  45a7e4:	ror	w22, w22, #28
  45a7e8:	add	w22, w23, w22
  45a7ec:	add	w25, w7, w25
  45a7f0:	eor	w5, w5, w22
  45a7f4:	add	w5, w5, w3
  45a7f8:	eor	w3, w23, w22
  45a7fc:	add	w5, w30, w5
  45a800:	mov	w30, #0x1d05                	// #7429
  45a804:	movk	w30, #0x488, lsl #16
  45a808:	add	w30, w13, w30
  45a80c:	ror	w5, w5, #21
  45a810:	add	w5, w22, w5
  45a814:	eor	w3, w3, w5
  45a818:	add	w24, w3, w24
  45a81c:	eor	w3, w22, w5
  45a820:	add	w4, w4, w24
  45a824:	mov	w24, #0x99e5                	// #39397
  45a828:	movk	w24, #0xe6db, lsl #16
  45a82c:	add	w24, w20, w24
  45a830:	ror	w4, w4, #16
  45a834:	add	w4, w5, w4
  45a838:	eor	w3, w3, w4
  45a83c:	add	w23, w3, w23
  45a840:	eor	w3, w5, w4
  45a844:	add	w23, w30, w23
  45a848:	mov	w30, #0xff97                	// #65431
  45a84c:	movk	w30, #0x432a, lsl #16
  45a850:	add	w18, w18, w30
  45a854:	ror	w23, w23, #9
  45a858:	add	w23, w4, w23
  45a85c:	eor	w3, w3, w23
  45a860:	add	w22, w3, w22
  45a864:	eor	w3, w4, w23
  45a868:	add	w22, w25, w22
  45a86c:	mov	w25, #0x7cf8                	// #31992
  45a870:	movk	w25, #0x1fa2, lsl #16
  45a874:	add	w25, w1, w25
  45a878:	ror	w22, w22, #28
  45a87c:	add	w22, w23, w22
  45a880:	eor	w3, w3, w22
  45a884:	add	w5, w3, w5
  45a888:	eor	w3, w23, w22
  45a88c:	add	w5, w24, w5
  45a890:	mov	w24, #0x5665                	// #22117
  45a894:	movk	w24, #0xc4ac, lsl #16
  45a898:	add	w24, w8, w24
  45a89c:	ror	w5, w5, #21
  45a8a0:	add	w5, w22, w5
  45a8a4:	eor	w3, w3, w5
  45a8a8:	add	w3, w3, w4
  45a8ac:	eor	w4, w22, w5
  45a8b0:	add	w3, w25, w3
  45a8b4:	mov	w25, #0x2244                	// #8772
  45a8b8:	movk	w25, #0xf429, lsl #16
  45a8bc:	add	w19, w19, w25
  45a8c0:	mov	w25, #0x23a7                	// #9127
  45a8c4:	ror	w3, w3, #16
  45a8c8:	add	w3, w5, w3
  45a8cc:	movk	w25, #0xab94, lsl #16
  45a8d0:	eor	w4, w4, w3
  45a8d4:	add	w21, w21, w25
  45a8d8:	add	w23, w4, w23
  45a8dc:	mov	w4, #0xa039                	// #41017
  45a8e0:	add	w24, w24, w23
  45a8e4:	movk	w4, #0xfc93, lsl #16
  45a8e8:	add	w17, w17, w4
  45a8ec:	mov	w4, #0x59c3                	// #22979
  45a8f0:	movk	w4, #0x655b, lsl #16
  45a8f4:	ror	w24, w24, #9
  45a8f8:	add	w24, w3, w24
  45a8fc:	add	w20, w20, w4
  45a900:	orn	w4, w24, w5
  45a904:	mov	w23, #0xcc92                	// #52370
  45a908:	eor	w4, w4, w3
  45a90c:	movk	w23, #0x8f0c, lsl #16
  45a910:	add	w22, w4, w22
  45a914:	mov	w4, #0x5dd1                	// #24017
  45a918:	add	w19, w19, w22
  45a91c:	movk	w4, #0x8584, lsl #16
  45a920:	add	w15, w15, w4
  45a924:	mov	w4, #0x7e4f                	// #32335
  45a928:	movk	w4, #0x6fa8, lsl #16
  45a92c:	ror	w19, w19, #26
  45a930:	add	w19, w24, w19
  45a934:	add	w14, w14, w4
  45a938:	orn	w22, w19, w3
  45a93c:	mov	w4, #0xe6e0                	// #59104
  45a940:	movk	w4, #0xfe2c, lsl #16
  45a944:	add	w4, w1, w4
  45a948:	eor	w1, w22, w24
  45a94c:	add	w16, w16, w23
  45a950:	add	w5, w1, w5
  45a954:	mov	w22, #0x4314                	// #17172
  45a958:	add	w18, w18, w5
  45a95c:	movk	w22, #0xa301, lsl #16
  45a960:	add	w13, w13, w22
  45a964:	mov	w1, #0x11a1                	// #4513
  45a968:	movk	w1, #0x4e08, lsl #16
  45a96c:	ror	w18, w18, #22
  45a970:	add	w18, w19, w18
  45a974:	add	w12, w12, w1
  45a978:	orn	w5, w18, w24
  45a97c:	mov	w1, #0x7e82                	// #32386
  45a980:	eor	w5, w5, w19
  45a984:	movk	w1, #0xf753, lsl #16
  45a988:	add	w3, w5, w3
  45a98c:	add	w1, w11, w1
  45a990:	add	w21, w21, w3
  45a994:	mov	w3, #0xd391                	// #54161
  45a998:	movk	w3, #0xeb86, lsl #16
  45a99c:	add	w7, w7, w3
  45a9a0:	mov	w11, #0xf235                	// #62005
  45a9a4:	ror	w21, w21, #17
  45a9a8:	add	w21, w18, w21
  45a9ac:	movk	w11, #0xbd3a, lsl #16
  45a9b0:	orn	w3, w21, w19
  45a9b4:	add	w9, w9, w11
  45a9b8:	eor	w3, w3, w18
  45a9bc:	mov	w5, #0xd2bb                	// #53947
  45a9c0:	add	w24, w3, w24
  45a9c4:	movk	w5, #0x2ad7, lsl #16
  45a9c8:	add	w17, w17, w24
  45a9cc:	add	w8, w8, w5
  45a9d0:	ror	w17, w17, #11
  45a9d4:	add	w17, w21, w17
  45a9d8:	orn	w3, w17, w18
  45a9dc:	eor	w3, w3, w21
  45a9e0:	add	w19, w3, w19
  45a9e4:	add	w20, w20, w19
  45a9e8:	ror	w20, w20, #26
  45a9ec:	add	w20, w17, w20
  45a9f0:	orn	w3, w20, w21
  45a9f4:	eor	w3, w3, w17
  45a9f8:	add	w18, w3, w18
  45a9fc:	add	w16, w16, w18
  45aa00:	ror	w16, w16, #22
  45aa04:	add	w16, w20, w16
  45aa08:	orn	w3, w16, w17
  45aa0c:	eor	w3, w3, w20
  45aa10:	add	w21, w3, w21
  45aa14:	add	w6, w6, w21
  45aa18:	ror	w6, w6, #17
  45aa1c:	add	w6, w16, w6
  45aa20:	orn	w3, w6, w20
  45aa24:	eor	w3, w3, w16
  45aa28:	add	w17, w3, w17
  45aa2c:	add	w15, w15, w17
  45aa30:	ror	w15, w15, #11
  45aa34:	add	w15, w6, w15
  45aa38:	orn	w3, w15, w16
  45aa3c:	eor	w3, w3, w6
  45aa40:	add	w20, w3, w20
  45aa44:	add	w14, w14, w20
  45aa48:	ror	w14, w14, #26
  45aa4c:	add	w14, w15, w14
  45aa50:	orn	w3, w14, w6
  45aa54:	eor	w3, w3, w15
  45aa58:	add	w16, w3, w16
  45aa5c:	add	w4, w4, w16
  45aa60:	ror	w4, w4, #22
  45aa64:	add	w4, w14, w4
  45aa68:	orn	w3, w4, w15
  45aa6c:	eor	w3, w3, w14
  45aa70:	add	w6, w3, w6
  45aa74:	add	w13, w13, w6
  45aa78:	ror	w13, w13, #17
  45aa7c:	add	w13, w4, w13
  45aa80:	orn	w3, w13, w14
  45aa84:	eor	w3, w3, w4
  45aa88:	add	w15, w3, w15
  45aa8c:	add	w12, w12, w15
  45aa90:	ror	w12, w12, #11
  45aa94:	add	w12, w13, w12
  45aa98:	orn	w3, w12, w4
  45aa9c:	eor	w3, w3, w13
  45aaa0:	add	w14, w3, w14
  45aaa4:	add	w1, w1, w14
  45aaa8:	ror	w1, w1, #26
  45aaac:	add	w1, w12, w1
  45aab0:	fmov	s3, w1
  45aab4:	orn	w3, w1, w13
  45aab8:	eor	w3, w3, w12
  45aabc:	add	v2.2s, v2.2s, v3.2s
  45aac0:	add	w4, w3, w4
  45aac4:	add	w9, w9, w4
  45aac8:	ror	w9, w9, #22
  45aacc:	add	w9, w1, w9
  45aad0:	fmov	s3, w9
  45aad4:	orn	w3, w9, w12
  45aad8:	eor	w3, w3, w1
  45aadc:	add	v1.2s, v1.2s, v3.2s
  45aae0:	add	w13, w3, w13
  45aae4:	add	w8, w8, w13
  45aae8:	ror	w8, w8, #17
  45aaec:	add	w8, w9, w8
  45aaf0:	fmov	s3, w8
  45aaf4:	orn	w1, w8, w1
  45aaf8:	eor	w1, w1, w9
  45aafc:	add	v0.2s, v0.2s, v3.2s
  45ab00:	add	w1, w1, w12
  45ab04:	add	w7, w7, w1
  45ab08:	ror	w7, w7, #11
  45ab0c:	add	w8, w8, w7
  45ab10:	add	w10, w10, w8
  45ab14:	b.hi	45a150 <ferror@plt+0x578d0>  // b.pmore
  45ab18:	ldp	x19, x20, [sp, #16]
  45ab1c:	ldp	x21, x22, [sp, #32]
  45ab20:	ldp	x23, x24, [sp, #48]
  45ab24:	ldp	x27, x28, [sp, #80]
  45ab28:	mov	v2.s[1], w10
  45ab2c:	ldp	x25, x26, [sp, #64]
  45ab30:	ldp	x29, x30, [sp], #96
  45ab34:	mov	v2.s[2], v0.s[0]
  45ab38:	mov	v2.s[3], v1.s[0]
  45ab3c:	str	q2, [x2]
  45ab40:	ret
  45ab44:	nop
  45ab48:	stp	x29, x30, [sp, #-48]!
  45ab4c:	mov	x29, sp
  45ab50:	stp	x19, x20, [sp, #16]
  45ab54:	mov	x19, x0
  45ab58:	ldr	w0, [x0, #16]
  45ab5c:	stp	x21, x22, [sp, #32]
  45ab60:	mov	x22, x1
  45ab64:	ldr	w20, [x19, #24]
  45ab68:	adds	w0, w0, w20
  45ab6c:	str	w0, [x19, #16]
  45ab70:	b.cc	45ab80 <ferror@plt+0x58300>  // b.lo, b.ul, b.last
  45ab74:	ldr	w0, [x19, #20]
  45ab78:	add	w0, w0, #0x1
  45ab7c:	str	w0, [x19, #20]
  45ab80:	cmp	w20, #0x38
  45ab84:	mov	w21, w20
  45ab88:	mov	w1, #0x78                  	// #120
  45ab8c:	mov	w2, #0x38                  	// #56
  45ab90:	sub	w1, w1, w20
  45ab94:	sub	w2, w2, w20
  45ab98:	csel	x20, x2, x1, cc  // cc = lo, ul, last
  45ab9c:	add	x0, x21, #0x1c
  45aba0:	mov	x2, x20
  45aba4:	add	x0, x19, x0
  45aba8:	add	x20, x20, x21
  45abac:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45abb0:	add	x1, x1, #0xd50
  45abb4:	bl	402220 <memcpy@plt>
  45abb8:	ldr	w5, [x19, #16]
  45abbc:	add	x4, x19, x20
  45abc0:	add	x1, x20, #0x8
  45abc4:	mov	x2, x19
  45abc8:	add	x0, x19, #0x1c
  45abcc:	lsl	w3, w5, #3
  45abd0:	str	w3, [x4, #28]
  45abd4:	ldr	w3, [x19, #20]
  45abd8:	extr	w3, w3, w5, #29
  45abdc:	str	w3, [x4, #32]
  45abe0:	bl	45a0e8 <ferror@plt+0x57868>
  45abe4:	ldr	q0, [x19]
  45abe8:	mov	x0, x22
  45abec:	str	q0, [x22]
  45abf0:	ldp	x19, x20, [sp, #16]
  45abf4:	ldp	x21, x22, [sp, #32]
  45abf8:	ldp	x29, x30, [sp], #48
  45abfc:	ret
  45ac00:	stp	x29, x30, [sp, #-80]!
  45ac04:	mov	x29, sp
  45ac08:	stp	x21, x22, [sp, #32]
  45ac0c:	mov	x21, x1
  45ac10:	ldr	w22, [x2, #24]
  45ac14:	stp	x19, x20, [sp, #16]
  45ac18:	mov	x19, x0
  45ac1c:	stp	x23, x24, [sp, #48]
  45ac20:	mov	x24, x2
  45ac24:	cbnz	w22, 45acec <ferror@plt+0x5846c>
  45ac28:	cmp	x21, #0x40
  45ac2c:	b.ls	45acd4 <ferror@plt+0x58454>  // b.plast
  45ac30:	tst	x19, #0x3
  45ac34:	b.eq	45acbc <ferror@plt+0x5843c>  // b.none
  45ac38:	sub	x23, x21, #0x41
  45ac3c:	add	x20, x24, #0x1c
  45ac40:	lsr	x23, x23, #6
  45ac44:	add	x22, x23, #0x1
  45ac48:	add	x22, x19, x22, lsl #6
  45ac4c:	nop
  45ac50:	ldp	x0, x1, [x19]
  45ac54:	stp	x0, x1, [x20]
  45ac58:	mov	x2, x24
  45ac5c:	ldp	x0, x1, [x19, #16]
  45ac60:	stp	x0, x1, [x20, #16]
  45ac64:	ldp	x4, x5, [x19, #32]
  45ac68:	stp	x4, x5, [x20, #32]
  45ac6c:	mov	x1, #0x40                  	// #64
  45ac70:	ldp	x4, x5, [x19, #48]
  45ac74:	stp	x4, x5, [x20, #48]
  45ac78:	add	x19, x19, x1
  45ac7c:	mov	x0, x20
  45ac80:	bl	45a0e8 <ferror@plt+0x57868>
  45ac84:	cmp	x19, x22
  45ac88:	b.ne	45ac50 <ferror@plt+0x583d0>  // b.any
  45ac8c:	sub	x21, x21, #0x40
  45ac90:	sub	x21, x21, x23, lsl #6
  45ac94:	mov	x1, x22
  45ac98:	mov	x2, x21
  45ac9c:	mov	x0, x20
  45aca0:	bl	402220 <memcpy@plt>
  45aca4:	str	w21, [x24, #24]
  45aca8:	ldp	x19, x20, [sp, #16]
  45acac:	ldp	x21, x22, [sp, #32]
  45acb0:	ldp	x23, x24, [sp, #48]
  45acb4:	ldp	x29, x30, [sp], #80
  45acb8:	ret
  45acbc:	and	x1, x21, #0xffffffffffffffc0
  45acc0:	mov	x0, x19
  45acc4:	and	x21, x21, #0x3f
  45acc8:	add	x19, x19, x1
  45accc:	mov	x2, x24
  45acd0:	bl	45a0e8 <ferror@plt+0x57868>
  45acd4:	cbnz	x21, 45ad7c <ferror@plt+0x584fc>
  45acd8:	ldp	x19, x20, [sp, #16]
  45acdc:	ldp	x21, x22, [sp, #32]
  45ace0:	ldp	x23, x24, [sp, #48]
  45ace4:	ldp	x29, x30, [sp], #80
  45ace8:	ret
  45acec:	mov	w3, w22
  45acf0:	mov	x20, #0x80                  	// #128
  45acf4:	sub	x20, x20, x3
  45acf8:	add	x0, x3, #0x1c
  45acfc:	cmp	x20, x1
  45ad00:	add	x0, x2, x0
  45ad04:	csel	x20, x20, x1, ls  // ls = plast
  45ad08:	mov	x1, x19
  45ad0c:	add	x23, x3, x20
  45ad10:	mov	x2, x20
  45ad14:	bl	402220 <memcpy@plt>
  45ad18:	ldr	w0, [x24, #24]
  45ad1c:	cmp	x23, #0x40
  45ad20:	add	w0, w0, w20
  45ad24:	str	w0, [x24, #24]
  45ad28:	b.hi	45ad38 <ferror@plt+0x584b8>  // b.pmore
  45ad2c:	add	x19, x19, x20
  45ad30:	sub	x21, x21, x20
  45ad34:	b	45ac28 <ferror@plt+0x583a8>
  45ad38:	stp	x25, x26, [sp, #64]
  45ad3c:	add	x26, x24, #0x1c
  45ad40:	and	x25, x23, #0xffffffffffffffc0
  45ad44:	mov	x0, x26
  45ad48:	mov	x1, x25
  45ad4c:	mov	x2, x24
  45ad50:	bl	45a0e8 <ferror@plt+0x57868>
  45ad54:	add	x1, x25, #0x1c
  45ad58:	add	w22, w22, w20
  45ad5c:	mov	x0, x26
  45ad60:	add	x1, x24, x1
  45ad64:	and	x2, x23, #0x3f
  45ad68:	and	w22, w22, #0x3f
  45ad6c:	bl	402220 <memcpy@plt>
  45ad70:	ldp	x25, x26, [sp, #64]
  45ad74:	str	w22, [x24, #24]
  45ad78:	b	45ad2c <ferror@plt+0x584ac>
  45ad7c:	mov	x22, x19
  45ad80:	add	x20, x24, #0x1c
  45ad84:	b	45ac94 <ferror@plt+0x58414>
  45ad88:	mov	x12, #0x1120                	// #4384
  45ad8c:	sub	sp, sp, x12
  45ad90:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45ad94:	stp	x29, x30, [sp]
  45ad98:	mov	x29, sp
  45ad9c:	ldr	q0, [x2, #3392]
  45ada0:	stp	x19, x20, [sp, #16]
  45ada4:	mov	x20, x0
  45ada8:	stp	x21, x22, [sp, #32]
  45adac:	mov	x22, x1
  45adb0:	mov	x21, #0x1000                	// #4096
  45adb4:	str	xzr, [sp, #64]
  45adb8:	str	wzr, [sp, #72]
  45adbc:	str	q0, [sp, #48]
  45adc0:	mov	x19, #0x0                   	// #0
  45adc4:	nop
  45adc8:	add	x0, sp, #0xd8
  45adcc:	sub	x2, x21, x19
  45add0:	add	x0, x0, x19
  45add4:	mov	x3, x20
  45add8:	mov	x1, #0x1                   	// #1
  45addc:	bl	402610 <fread@plt>
  45ade0:	add	x19, x19, x0
  45ade4:	cmp	x19, #0xfff
  45ade8:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  45adec:	b.ne	45adc8 <ferror@plt+0x58548>  // b.any
  45adf0:	cbz	x0, 45ae08 <ferror@plt+0x58588>
  45adf4:	add	x2, sp, #0x30
  45adf8:	add	x0, sp, #0xd8
  45adfc:	mov	x1, #0x1000                	// #4096
  45ae00:	bl	45a0e8 <ferror@plt+0x57868>
  45ae04:	b	45adc0 <ferror@plt+0x58540>
  45ae08:	mov	x0, x20
  45ae0c:	bl	402880 <ferror@plt>
  45ae10:	mov	w20, w0
  45ae14:	cbnz	w0, 45ae48 <ferror@plt+0x585c8>
  45ae18:	add	x21, sp, #0x30
  45ae1c:	cbnz	x19, 45ae68 <ferror@plt+0x585e8>
  45ae20:	mov	x1, x22
  45ae24:	mov	x0, x21
  45ae28:	bl	45ab48 <ferror@plt+0x582c8>
  45ae2c:	mov	w0, w20
  45ae30:	mov	x12, #0x1120                	// #4384
  45ae34:	ldp	x29, x30, [sp]
  45ae38:	ldp	x19, x20, [sp, #16]
  45ae3c:	ldp	x21, x22, [sp, #32]
  45ae40:	add	sp, sp, x12
  45ae44:	ret
  45ae48:	mov	w20, #0x1                   	// #1
  45ae4c:	mov	x12, #0x1120                	// #4384
  45ae50:	mov	w0, w20
  45ae54:	ldp	x29, x30, [sp]
  45ae58:	ldp	x19, x20, [sp, #16]
  45ae5c:	ldp	x21, x22, [sp, #32]
  45ae60:	add	sp, sp, x12
  45ae64:	ret
  45ae68:	mov	x1, x19
  45ae6c:	add	x0, sp, #0xd8
  45ae70:	mov	x2, x21
  45ae74:	bl	45ac00 <ferror@plt+0x58380>
  45ae78:	b	45ae20 <ferror@plt+0x585a0>
  45ae7c:	nop
  45ae80:	stp	x29, x30, [sp, #-240]!
  45ae84:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45ae88:	cmp	x1, #0x40
  45ae8c:	mov	x29, sp
  45ae90:	ldr	q0, [x3, #3392]
  45ae94:	stp	x19, x20, [sp, #16]
  45ae98:	mov	x20, x1
  45ae9c:	stp	x21, x22, [sp, #32]
  45aea0:	mov	x19, x0
  45aea4:	mov	x22, x2
  45aea8:	stp	x23, x24, [sp, #48]
  45aeac:	str	xzr, [sp, #96]
  45aeb0:	str	wzr, [sp, #104]
  45aeb4:	str	q0, [sp, #80]
  45aeb8:	b.ls	45af70 <ferror@plt+0x586f0>  // b.plast
  45aebc:	tst	x0, #0x3
  45aec0:	b.eq	45aff0 <ferror@plt+0x58770>  // b.none
  45aec4:	str	x25, [sp, #64]
  45aec8:	sub	x25, x1, #0x41
  45aecc:	add	x23, sp, #0x50
  45aed0:	lsr	x25, x25, #6
  45aed4:	add	x21, x23, #0x1c
  45aed8:	add	x24, x25, #0x1
  45aedc:	add	x24, x0, x24, lsl #6
  45aee0:	ldp	x10, x11, [x19]
  45aee4:	stp	x10, x11, [x21]
  45aee8:	mov	x1, #0x40                  	// #64
  45aeec:	ldp	x8, x9, [x19, #16]
  45aef0:	stp	x8, x9, [x21, #16]
  45aef4:	mov	x2, x23
  45aef8:	ldp	x6, x7, [x19, #32]
  45aefc:	stp	x6, x7, [x21, #32]
  45af00:	mov	x0, x21
  45af04:	ldp	x4, x5, [x19, #48]
  45af08:	stp	x4, x5, [x21, #48]
  45af0c:	add	x19, x19, x1
  45af10:	bl	45a0e8 <ferror@plt+0x57868>
  45af14:	cmp	x24, x19
  45af18:	b.ne	45aee0 <ferror@plt+0x58660>  // b.any
  45af1c:	sub	x3, x20, #0x40
  45af20:	sub	x20, x3, x25, lsl #6
  45af24:	ldr	x25, [sp, #64]
  45af28:	mov	x1, x24
  45af2c:	mov	x2, x20
  45af30:	add	x0, x23, #0x1c
  45af34:	bl	402220 <memcpy@plt>
  45af38:	str	w20, [sp, #104]
  45af3c:	mov	w0, w20
  45af40:	ldr	w1, [sp, #96]
  45af44:	adds	w1, w1, w0
  45af48:	str	w1, [sp, #96]
  45af4c:	b.cc	45af5c <ferror@plt+0x586dc>  // b.lo, b.ul, b.last
  45af50:	ldr	w1, [sp, #100]
  45af54:	add	w1, w1, #0x1
  45af58:	str	w1, [sp, #100]
  45af5c:	cmp	w0, #0x37
  45af60:	b.ls	45af7c <ferror@plt+0x586fc>  // b.plast
  45af64:	mov	w3, #0x78                  	// #120
  45af68:	sub	w19, w3, w0
  45af6c:	b	45af84 <ferror@plt+0x58704>
  45af70:	cbnz	x1, 45b01c <ferror@plt+0x5879c>
  45af74:	add	x23, sp, #0x50
  45af78:	mov	w0, #0x0                   	// #0
  45af7c:	mov	w3, #0x38                  	// #56
  45af80:	sub	w19, w3, w0
  45af84:	add	x0, x20, #0x1c
  45af88:	mov	x2, x19
  45af8c:	add	x0, x23, x0
  45af90:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45af94:	add	x1, x1, #0xd50
  45af98:	bl	402220 <memcpy@plt>
  45af9c:	ldr	w5, [sp, #96]
  45afa0:	add	x3, x19, x20
  45afa4:	add	x4, sp, #0x6c
  45afa8:	add	x6, sp, #0x70
  45afac:	add	x1, x3, #0x8
  45afb0:	mov	x2, x23
  45afb4:	lsl	w7, w5, #3
  45afb8:	add	x0, x23, #0x1c
  45afbc:	str	w7, [x4, x3]
  45afc0:	ldr	w4, [sp, #100]
  45afc4:	extr	w4, w4, w5, #29
  45afc8:	str	w4, [x6, x3]
  45afcc:	bl	45a0e8 <ferror@plt+0x57868>
  45afd0:	ldp	x0, x1, [sp, #80]
  45afd4:	stp	x0, x1, [x22]
  45afd8:	mov	x0, x22
  45afdc:	ldp	x19, x20, [sp, #16]
  45afe0:	ldp	x21, x22, [sp, #32]
  45afe4:	ldp	x23, x24, [sp, #48]
  45afe8:	ldp	x29, x30, [sp], #240
  45afec:	ret
  45aff0:	and	x24, x1, #0xffffffffffffffc0
  45aff4:	add	x23, sp, #0x50
  45aff8:	mov	x1, x24
  45affc:	mov	x2, x23
  45b000:	bl	45a0e8 <ferror@plt+0x57868>
  45b004:	add	x24, x19, x24
  45b008:	ands	x20, x20, #0x3f
  45b00c:	b.ne	45af28 <ferror@plt+0x586a8>  // b.any
  45b010:	ldr	w0, [sp, #104]
  45b014:	mov	w20, w0
  45b018:	b	45af40 <ferror@plt+0x586c0>
  45b01c:	mov	x24, x19
  45b020:	add	x23, sp, #0x50
  45b024:	b	45af28 <ferror@plt+0x586a8>
  45b028:	b	4025d0 <strcmp@plt>
  45b02c:	nop
  45b030:	b	402400 <strncmp@plt>
  45b034:	nop
  45b038:	mov	x3, x0
  45b03c:	ldrb	w2, [x3], #1
  45b040:	cbz	w2, 45b098 <ferror@plt+0x58818>
  45b044:	adrp	x5, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45b048:	add	x5, x5, #0x1c0
  45b04c:	mov	w0, #0x0                   	// #0
  45b050:	mov	w4, #0x43                  	// #67
  45b054:	nop
  45b058:	mul	w1, w0, w4
  45b05c:	cmp	w2, #0x5c
  45b060:	b.eq	45b07c <ferror@plt+0x587fc>  // b.none
  45b064:	ldrb	w0, [x5, w2, sxtw]
  45b068:	sub	w1, w1, #0x71
  45b06c:	ldrb	w2, [x3], #1
  45b070:	add	w0, w0, w1
  45b074:	cbnz	w2, 45b058 <ferror@plt+0x587d8>
  45b078:	ret
  45b07c:	ldrb	w2, [x3], #1
  45b080:	mul	w1, w0, w4
  45b084:	ldrb	w0, [x5, #47]
  45b088:	sub	w1, w1, #0x71
  45b08c:	add	w0, w0, w1
  45b090:	cbnz	w2, 45b058 <ferror@plt+0x587d8>
  45b094:	ret
  45b098:	mov	w0, #0x0                   	// #0
  45b09c:	ret
  45b0a0:	stp	x29, x30, [sp, #-16]!
  45b0a4:	mov	x29, sp
  45b0a8:	bl	4025d0 <strcmp@plt>
  45b0ac:	cmp	w0, #0x0
  45b0b0:	cset	w0, eq  // eq = none
  45b0b4:	ldp	x29, x30, [sp], #16
  45b0b8:	ret
  45b0bc:	nop
  45b0c0:	stp	x29, x30, [sp, #-32]!
  45b0c4:	mov	x29, sp
  45b0c8:	stp	x19, x20, [sp, #16]
  45b0cc:	mov	x19, x1
  45b0d0:	bl	45c4c8 <ferror@plt+0x59c48>
  45b0d4:	mov	x20, x0
  45b0d8:	mov	x0, x19
  45b0dc:	bl	45c4c8 <ferror@plt+0x59c48>
  45b0e0:	mov	x19, x0
  45b0e4:	mov	x1, x19
  45b0e8:	mov	x0, x20
  45b0ec:	bl	4025d0 <strcmp@plt>
  45b0f0:	mov	w1, w0
  45b0f4:	mov	x0, x20
  45b0f8:	mov	w20, w1
  45b0fc:	bl	402640 <free@plt>
  45b100:	mov	x0, x19
  45b104:	bl	402640 <free@plt>
  45b108:	cmp	w20, #0x0
  45b10c:	cset	w0, eq  // eq = none
  45b110:	ldp	x19, x20, [sp, #16]
  45b114:	ldp	x29, x30, [sp], #32
  45b118:	ret
  45b11c:	nop
  45b120:	cbz	x0, 45b12c <ferror@plt+0x588ac>
  45b124:	mov	w1, #0x2                   	// #2
  45b128:	b	402780 <__fsetlocking@plt>
  45b12c:	ret
  45b130:	stp	x29, x30, [sp, #-16]!
  45b134:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45b138:	mov	x29, sp
  45b13c:	ldr	x0, [x0, #1336]
  45b140:	cbz	x0, 45b14c <ferror@plt+0x588cc>
  45b144:	mov	w1, #0x2                   	// #2
  45b148:	bl	402780 <__fsetlocking@plt>
  45b14c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45b150:	ldr	x0, [x0, #1328]
  45b154:	cbz	x0, 45b160 <ferror@plt+0x588e0>
  45b158:	mov	w1, #0x2                   	// #2
  45b15c:	bl	402780 <__fsetlocking@plt>
  45b160:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45b164:	ldr	x0, [x0, #1312]
  45b168:	cbz	x0, 45b178 <ferror@plt+0x588f8>
  45b16c:	ldp	x29, x30, [sp], #16
  45b170:	mov	w1, #0x2                   	// #2
  45b174:	b	402780 <__fsetlocking@plt>
  45b178:	ldp	x29, x30, [sp], #16
  45b17c:	ret
  45b180:	stp	x29, x30, [sp, #-32]!
  45b184:	mov	x29, sp
  45b188:	str	x19, [sp, #16]
  45b18c:	bl	4023b0 <fopen@plt>
  45b190:	mov	x19, x0
  45b194:	cbz	x0, 45b1a0 <ferror@plt+0x58920>
  45b198:	mov	w1, #0x2                   	// #2
  45b19c:	bl	402780 <__fsetlocking@plt>
  45b1a0:	mov	x0, x19
  45b1a4:	ldr	x19, [sp, #16]
  45b1a8:	ldp	x29, x30, [sp], #32
  45b1ac:	ret
  45b1b0:	stp	x29, x30, [sp, #-32]!
  45b1b4:	mov	x29, sp
  45b1b8:	str	x19, [sp, #16]
  45b1bc:	bl	402450 <fdopen@plt>
  45b1c0:	mov	x19, x0
  45b1c4:	cbz	x0, 45b1d0 <ferror@plt+0x58950>
  45b1c8:	mov	w1, #0x2                   	// #2
  45b1cc:	bl	402780 <__fsetlocking@plt>
  45b1d0:	mov	x0, x19
  45b1d4:	ldr	x19, [sp, #16]
  45b1d8:	ldp	x29, x30, [sp], #32
  45b1dc:	ret
  45b1e0:	stp	x29, x30, [sp, #-32]!
  45b1e4:	mov	x29, sp
  45b1e8:	str	x19, [sp, #16]
  45b1ec:	bl	402660 <freopen@plt>
  45b1f0:	mov	x19, x0
  45b1f4:	cbz	x0, 45b200 <ferror@plt+0x58980>
  45b1f8:	mov	w1, #0x2                   	// #2
  45b1fc:	bl	402780 <__fsetlocking@plt>
  45b200:	mov	x0, x19
  45b204:	ldr	x19, [sp, #16]
  45b208:	ldp	x29, x30, [sp], #32
  45b20c:	ret
  45b210:	cmp	x1, x0
  45b214:	cset	w0, eq  // eq = none
  45b218:	ret
  45b21c:	nop
  45b220:	asr	x1, x0, #32
  45b224:	mov	w3, #0x2785                	// #10117
  45b228:	mov	w5, #0xadcc                	// #44492
  45b22c:	movk	w3, #0x5c24, lsl #16
  45b230:	add	w3, w3, w0
  45b234:	sub	w0, w1, w0
  45b238:	movk	w5, #0xbdec, lsl #16
  45b23c:	mov	w4, #0x109a                	// #4250
  45b240:	add	w0, w0, w5
  45b244:	movk	w4, #0x2, lsl #16
  45b248:	mov	w2, #0x5234                	// #21044
  45b24c:	eor	w0, w0, w4
  45b250:	sub	w3, w3, w0
  45b254:	movk	w2, #0x4213, lsl #16
  45b258:	sub	w1, w2, w0
  45b25c:	eor	w2, w3, w0, lsl #8
  45b260:	sub	w1, w1, w2
  45b264:	sub	w0, w0, w2
  45b268:	eor	w1, w1, w2, lsr #13
  45b26c:	sub	w0, w0, w1
  45b270:	sub	w2, w2, w1
  45b274:	eor	w0, w0, w1, lsr #12
  45b278:	sub	w2, w2, w0
  45b27c:	sub	w1, w1, w0
  45b280:	eor	w2, w2, w0, lsl #16
  45b284:	sub	w1, w1, w2
  45b288:	sub	w0, w0, w2
  45b28c:	eor	w1, w1, w2, lsr #5
  45b290:	sub	w0, w0, w1
  45b294:	sub	w2, w2, w1
  45b298:	eor	w0, w0, w1, lsr #3
  45b29c:	sub	w2, w2, w0
  45b2a0:	sub	w1, w1, w0
  45b2a4:	eor	w0, w2, w0, lsl #10
  45b2a8:	sub	w1, w1, w0
  45b2ac:	eor	w0, w1, w0, lsr #15
  45b2b0:	ret
  45b2b4:	nop
  45b2b8:	stp	x29, x30, [sp, #-80]!
  45b2bc:	mov	x29, sp
  45b2c0:	stp	x21, x22, [sp, #32]
  45b2c4:	mov	x21, x0
  45b2c8:	stp	x23, x24, [sp, #48]
  45b2cc:	ldr	w23, [x0, #104]
  45b2d0:	ldr	x0, [x0, #40]
  45b2d4:	stp	x19, x20, [sp, #16]
  45b2d8:	ldr	x1, [x21, #48]
  45b2dc:	ldr	x20, [x21, #24]
  45b2e0:	str	x25, [sp, #64]
  45b2e4:	ldr	x25, [x21, #32]
  45b2e8:	sub	x0, x0, x1
  45b2ec:	lsl	x2, x0, #1
  45b2f0:	cmp	x25, x0, lsl #1
  45b2f4:	add	x19, x20, x25, lsl #3
  45b2f8:	b.cc	45b450 <ferror@plt+0x58bd0>  // b.lo, b.ul, b.last
  45b2fc:	lsl	x0, x0, #3
  45b300:	mov	x1, #0x20                  	// #32
  45b304:	cmp	x0, x1
  45b308:	csel	x0, x0, x1, cs  // cs = hs, nlast
  45b30c:	cmp	x25, x0
  45b310:	b.hi	45b450 <ferror@plt+0x58bd0>  // b.pmore
  45b314:	ldr	x3, [x21, #88]
  45b318:	cbz	x3, 45b4b8 <ferror@plt+0x58c38>
  45b31c:	ldr	x0, [x21, #80]
  45b320:	mov	x1, x25
  45b324:	mov	x2, #0x8                   	// #8
  45b328:	blr	x3
  45b32c:	cbz	x0, 45b4cc <ferror@plt+0x58c4c>
  45b330:	ldp	x1, x2, [x21, #40]
  45b334:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45b338:	mov	x22, x20
  45b33c:	add	x24, x24, #0xdb8
  45b340:	stp	x0, x25, [x21, #24]
  45b344:	str	xzr, [x21, #48]
  45b348:	sub	x0, x1, x2
  45b34c:	str	x0, [x21, #40]
  45b350:	str	w23, [x21, #104]
  45b354:	nop
  45b358:	ldr	x23, [x22]
  45b35c:	cmp	x23, #0x1
  45b360:	b.ls	45b414 <ferror@plt+0x58b94>  // b.plast
  45b364:	ldr	x1, [x21]
  45b368:	mov	x0, x23
  45b36c:	blr	x1
  45b370:	ldr	w1, [x21, #104]
  45b374:	ldr	x4, [x21, #24]
  45b378:	lsl	x1, x1, #4
  45b37c:	add	x6, x24, x1
  45b380:	ldr	w5, [x24, x1]
  45b384:	ldr	w1, [x6, #4]
  45b388:	ldr	w7, [x6, #12]
  45b38c:	umull	x1, w0, w1
  45b390:	lsr	x3, x1, #32
  45b394:	sub	w1, w0, w3
  45b398:	add	w1, w3, w1, lsr #1
  45b39c:	lsr	w1, w1, w7
  45b3a0:	msub	w1, w1, w5, w0
  45b3a4:	add	x3, x4, w1, uxtw #3
  45b3a8:	ldr	x2, [x4, w1, uxtw #3]
  45b3ac:	cbz	x2, 45b410 <ferror@plt+0x58b90>
  45b3b0:	cmp	x2, #0x1
  45b3b4:	b.eq	45b520 <ferror@plt+0x58ca0>  // b.none
  45b3b8:	ldr	w3, [x6, #8]
  45b3bc:	add	w8, w0, #0x1
  45b3c0:	sub	w6, w5, #0x2
  45b3c4:	ldr	x5, [x21, #32]
  45b3c8:	umull	x3, w0, w3
  45b3cc:	lsr	x3, x3, #32
  45b3d0:	sub	w2, w0, w3
  45b3d4:	add	w2, w3, w2, lsr #1
  45b3d8:	lsr	w2, w2, w7
  45b3dc:	msub	w2, w2, w6, w8
  45b3e0:	b	45b3ec <ferror@plt+0x58b6c>
  45b3e4:	cmp	x0, #0x1
  45b3e8:	b.eq	45b520 <ferror@plt+0x58ca0>  // b.none
  45b3ec:	add	w3, w1, w2
  45b3f0:	mov	x1, x3
  45b3f4:	cmp	x5, w3, uxtw
  45b3f8:	b.hi	45b404 <ferror@plt+0x58b84>  // b.pmore
  45b3fc:	sub	w3, w3, w5
  45b400:	mov	x1, x3
  45b404:	ldr	x0, [x4, x3, lsl #3]
  45b408:	add	x3, x4, x3, lsl #3
  45b40c:	cbnz	x0, 45b3e4 <ferror@plt+0x58b64>
  45b410:	str	x23, [x3]
  45b414:	add	x22, x22, #0x8
  45b418:	cmp	x19, x22
  45b41c:	b.hi	45b358 <ferror@plt+0x58ad8>  // b.pmore
  45b420:	ldr	x1, [x21, #72]
  45b424:	cbz	x1, 45b4ec <ferror@plt+0x58c6c>
  45b428:	mov	x0, x20
  45b42c:	mov	w19, #0x1                   	// #1
  45b430:	blr	x1
  45b434:	mov	w0, w19
  45b438:	ldp	x19, x20, [sp, #16]
  45b43c:	ldp	x21, x22, [sp, #32]
  45b440:	ldp	x23, x24, [sp, #48]
  45b444:	ldr	x25, [sp, #64]
  45b448:	ldp	x29, x30, [sp], #80
  45b44c:	ret
  45b450:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45b454:	mov	w0, #0x1e                  	// #30
  45b458:	add	x4, x4, #0xdb8
  45b45c:	mov	w23, #0x0                   	// #0
  45b460:	b	45b480 <ferror@plt+0x58c00>
  45b464:	sub	w1, w0, w23
  45b468:	add	w1, w23, w1, lsr #1
  45b46c:	ubfiz	x3, x1, #4, #32
  45b470:	ldr	w3, [x4, x3]
  45b474:	cmp	x2, x3
  45b478:	b.hi	45b4b0 <ferror@plt+0x58c30>  // b.pmore
  45b47c:	mov	w0, w1
  45b480:	cmp	w0, w23
  45b484:	b.ne	45b464 <ferror@plt+0x58be4>  // b.any
  45b488:	ubfiz	x0, x0, #4, #32
  45b48c:	ldr	w25, [x4, x0]
  45b490:	cmp	x2, x25
  45b494:	b.ls	45b314 <ferror@plt+0x58a94>  // b.plast
  45b498:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45b49c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45b4a0:	add	x1, x1, #0xd90
  45b4a4:	ldr	x0, [x0, #1312]
  45b4a8:	bl	402840 <fprintf@plt>
  45b4ac:	bl	402540 <abort@plt>
  45b4b0:	add	w23, w1, #0x1
  45b4b4:	b	45b480 <ferror@plt+0x58c00>
  45b4b8:	ldr	x2, [x21, #64]
  45b4bc:	mov	x0, x25
  45b4c0:	mov	x1, #0x8                   	// #8
  45b4c4:	blr	x2
  45b4c8:	cbnz	x0, 45b330 <ferror@plt+0x58ab0>
  45b4cc:	mov	w19, #0x0                   	// #0
  45b4d0:	mov	w0, w19
  45b4d4:	ldp	x19, x20, [sp, #16]
  45b4d8:	ldp	x21, x22, [sp, #32]
  45b4dc:	ldp	x23, x24, [sp, #48]
  45b4e0:	ldr	x25, [sp, #64]
  45b4e4:	ldp	x29, x30, [sp], #80
  45b4e8:	ret
  45b4ec:	ldr	x2, [x21, #96]
  45b4f0:	mov	w19, #0x1                   	// #1
  45b4f4:	cbz	x2, 45b434 <ferror@plt+0x58bb4>
  45b4f8:	ldr	x0, [x21, #80]
  45b4fc:	mov	x1, x20
  45b500:	blr	x2
  45b504:	mov	w0, w19
  45b508:	ldp	x19, x20, [sp, #16]
  45b50c:	ldp	x21, x22, [sp, #32]
  45b510:	ldp	x23, x24, [sp, #48]
  45b514:	ldr	x25, [sp, #64]
  45b518:	ldp	x29, x30, [sp], #80
  45b51c:	ret
  45b520:	bl	402540 <abort@plt>
  45b524:	nop
  45b528:	ldr	x0, [x0, #32]
  45b52c:	ret
  45b530:	ldp	x1, x0, [x0, #40]
  45b534:	sub	x0, x1, x0
  45b538:	ret
  45b53c:	nop
  45b540:	stp	x29, x30, [sp, #-96]!
  45b544:	mov	x29, sp
  45b548:	stp	x19, x20, [sp, #16]
  45b54c:	mov	w20, #0x1e                  	// #30
  45b550:	stp	x21, x22, [sp, #32]
  45b554:	mov	x21, x5
  45b558:	mov	x22, x6
  45b55c:	stp	x23, x24, [sp, #48]
  45b560:	mov	x24, x2
  45b564:	mov	x23, x3
  45b568:	mov	w2, #0x0                   	// #0
  45b56c:	stp	x25, x26, [sp, #64]
  45b570:	mov	x25, x1
  45b574:	mov	x26, x4
  45b578:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45b57c:	add	x1, x1, #0xdb8
  45b580:	str	x27, [sp, #80]
  45b584:	b	45b5a4 <ferror@plt+0x58d24>
  45b588:	sub	w7, w20, w2
  45b58c:	add	w7, w2, w7, lsr #1
  45b590:	ubfiz	x3, x7, #4, #32
  45b594:	ldr	w3, [x1, x3]
  45b598:	cmp	x0, x3
  45b59c:	b.hi	45b624 <ferror@plt+0x58da4>  // b.pmore
  45b5a0:	mov	w20, w7
  45b5a4:	cmp	w20, w2
  45b5a8:	b.ne	45b588 <ferror@plt+0x58d08>  // b.any
  45b5ac:	ubfiz	x2, x20, #4, #32
  45b5b0:	ldr	w27, [x1, x2]
  45b5b4:	cmp	x0, x27
  45b5b8:	b.hi	45b668 <ferror@plt+0x58de8>  // b.pmore
  45b5bc:	mov	x0, x26
  45b5c0:	mov	x2, #0x70                  	// #112
  45b5c4:	mov	x1, #0x1                   	// #1
  45b5c8:	blr	x21
  45b5cc:	mov	x19, x0
  45b5d0:	cbz	x0, 45b62c <ferror@plt+0x58dac>
  45b5d4:	mov	x1, x27
  45b5d8:	mov	x0, x26
  45b5dc:	mov	x2, #0x8                   	// #8
  45b5e0:	blr	x21
  45b5e4:	str	x0, [x19, #24]
  45b5e8:	cbz	x0, 45b650 <ferror@plt+0x58dd0>
  45b5ec:	stp	x25, x24, [x19]
  45b5f0:	str	x23, [x19, #16]
  45b5f4:	str	x27, [x19, #32]
  45b5f8:	stp	x26, x21, [x19, #80]
  45b5fc:	str	x22, [x19, #96]
  45b600:	str	w20, [x19, #104]
  45b604:	mov	x0, x19
  45b608:	ldp	x19, x20, [sp, #16]
  45b60c:	ldp	x21, x22, [sp, #32]
  45b610:	ldp	x23, x24, [sp, #48]
  45b614:	ldp	x25, x26, [sp, #64]
  45b618:	ldr	x27, [sp, #80]
  45b61c:	ldp	x29, x30, [sp], #96
  45b620:	ret
  45b624:	add	w2, w7, #0x1
  45b628:	b	45b5a4 <ferror@plt+0x58d24>
  45b62c:	mov	x19, #0x0                   	// #0
  45b630:	mov	x0, x19
  45b634:	ldp	x19, x20, [sp, #16]
  45b638:	ldp	x21, x22, [sp, #32]
  45b63c:	ldp	x23, x24, [sp, #48]
  45b640:	ldp	x25, x26, [sp, #64]
  45b644:	ldr	x27, [sp, #80]
  45b648:	ldp	x29, x30, [sp], #96
  45b64c:	ret
  45b650:	cbz	x22, 45b62c <ferror@plt+0x58dac>
  45b654:	mov	x1, x19
  45b658:	mov	x0, x26
  45b65c:	mov	x19, #0x0                   	// #0
  45b660:	blr	x22
  45b664:	b	45b604 <ferror@plt+0x58d84>
  45b668:	adrp	x3, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45b66c:	mov	x2, x0
  45b670:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45b674:	add	x1, x1, #0xd90
  45b678:	ldr	x0, [x3, #1312]
  45b67c:	bl	402840 <fprintf@plt>
  45b680:	bl	402540 <abort@plt>
  45b684:	nop
  45b688:	stp	x29, x30, [sp, #-80]!
  45b68c:	mov	x29, sp
  45b690:	stp	x19, x20, [sp, #16]
  45b694:	mov	w20, #0x1e                  	// #30
  45b698:	stp	x21, x22, [sp, #32]
  45b69c:	mov	x21, x5
  45b6a0:	mov	x22, x6
  45b6a4:	stp	x23, x24, [sp, #48]
  45b6a8:	mov	x24, x2
  45b6ac:	mov	x23, x3
  45b6b0:	mov	w2, #0x0                   	// #0
  45b6b4:	stp	x25, x26, [sp, #64]
  45b6b8:	mov	x25, x1
  45b6bc:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45b6c0:	add	x1, x1, #0xdb8
  45b6c4:	b	45b6e4 <ferror@plt+0x58e64>
  45b6c8:	sub	w7, w20, w2
  45b6cc:	add	w7, w2, w7, lsr #1
  45b6d0:	ubfiz	x3, x7, #4, #32
  45b6d4:	ldr	w3, [x1, x3]
  45b6d8:	cmp	x0, x3
  45b6dc:	b.hi	45b754 <ferror@plt+0x58ed4>  // b.pmore
  45b6e0:	mov	w20, w7
  45b6e4:	cmp	w20, w2
  45b6e8:	b.ne	45b6c8 <ferror@plt+0x58e48>  // b.any
  45b6ec:	ubfiz	x2, x20, #4, #32
  45b6f0:	ldr	w26, [x1, x2]
  45b6f4:	cmp	x0, x26
  45b6f8:	b.hi	45b790 <ferror@plt+0x58f10>  // b.pmore
  45b6fc:	mov	x1, #0x70                  	// #112
  45b700:	mov	x0, #0x1                   	// #1
  45b704:	blr	x4
  45b708:	mov	x19, x0
  45b70c:	cbz	x0, 45b75c <ferror@plt+0x58edc>
  45b710:	mov	x0, x26
  45b714:	mov	x1, #0x8                   	// #8
  45b718:	blr	x21
  45b71c:	str	x0, [x19, #24]
  45b720:	cbz	x0, 45b77c <ferror@plt+0x58efc>
  45b724:	stp	x25, x24, [x19]
  45b728:	str	x23, [x19, #16]
  45b72c:	str	x26, [x19, #32]
  45b730:	stp	x21, x22, [x19, #64]
  45b734:	str	w20, [x19, #104]
  45b738:	mov	x0, x19
  45b73c:	ldp	x19, x20, [sp, #16]
  45b740:	ldp	x21, x22, [sp, #32]
  45b744:	ldp	x23, x24, [sp, #48]
  45b748:	ldp	x25, x26, [sp, #64]
  45b74c:	ldp	x29, x30, [sp], #80
  45b750:	ret
  45b754:	add	w2, w7, #0x1
  45b758:	b	45b6e4 <ferror@plt+0x58e64>
  45b75c:	mov	x19, #0x0                   	// #0
  45b760:	mov	x0, x19
  45b764:	ldp	x19, x20, [sp, #16]
  45b768:	ldp	x21, x22, [sp, #32]
  45b76c:	ldp	x23, x24, [sp, #48]
  45b770:	ldp	x25, x26, [sp, #64]
  45b774:	ldp	x29, x30, [sp], #80
  45b778:	ret
  45b77c:	cbz	x22, 45b75c <ferror@plt+0x58edc>
  45b780:	mov	x0, x19
  45b784:	mov	x19, #0x0                   	// #0
  45b788:	blr	x22
  45b78c:	b	45b738 <ferror@plt+0x58eb8>
  45b790:	adrp	x3, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45b794:	mov	x2, x0
  45b798:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45b79c:	add	x1, x1, #0xd90
  45b7a0:	ldr	x0, [x3, #1312]
  45b7a4:	bl	402840 <fprintf@plt>
  45b7a8:	bl	402540 <abort@plt>
  45b7ac:	nop
  45b7b0:	mov	x6, x5
  45b7b4:	mov	x5, x4
  45b7b8:	b	45b688 <ferror@plt+0x58e08>
  45b7bc:	nop
  45b7c0:	stp	x1, x2, [x0]
  45b7c4:	str	x3, [x0, #16]
  45b7c8:	stp	x4, x5, [x0, #80]
  45b7cc:	str	x6, [x0, #96]
  45b7d0:	ret
  45b7d4:	nop
  45b7d8:	adrp	x5, 45c000 <ferror@plt+0x59780>
  45b7dc:	add	x5, x5, #0xa50
  45b7e0:	mov	x4, x5
  45b7e4:	adrp	x6, 402000 <memcpy@plt-0x220>
  45b7e8:	add	x6, x6, #0x640
  45b7ec:	b	45b688 <ferror@plt+0x58e08>
  45b7f0:	adrp	x5, 402000 <memcpy@plt-0x220>
  45b7f4:	add	x5, x5, #0x460
  45b7f8:	mov	x4, x5
  45b7fc:	adrp	x6, 402000 <memcpy@plt-0x220>
  45b800:	add	x6, x6, #0x640
  45b804:	b	45b688 <ferror@plt+0x58e08>
  45b808:	stp	x29, x30, [sp, #-48]!
  45b80c:	mov	x29, sp
  45b810:	stp	x19, x20, [sp, #16]
  45b814:	mov	x20, x0
  45b818:	ldr	x0, [x0, #16]
  45b81c:	str	x21, [sp, #32]
  45b820:	ldr	x21, [x20, #24]
  45b824:	cbz	x0, 45b854 <ferror@plt+0x58fd4>
  45b828:	ldr	x19, [x20, #32]
  45b82c:	subs	w19, w19, #0x1
  45b830:	b.mi	45b854 <ferror@plt+0x58fd4>  // b.first
  45b834:	sxtw	x19, w19
  45b838:	ldr	x0, [x21, x19, lsl #3]
  45b83c:	sub	x19, x19, #0x1
  45b840:	cmp	x0, #0x1
  45b844:	b.ls	45b850 <ferror@plt+0x58fd0>  // b.plast
  45b848:	ldr	x1, [x20, #16]
  45b84c:	blr	x1
  45b850:	tbz	w19, #31, 45b838 <ferror@plt+0x58fb8>
  45b854:	ldr	x1, [x20, #72]
  45b858:	cbz	x1, 45b880 <ferror@plt+0x59000>
  45b85c:	mov	x0, x21
  45b860:	blr	x1
  45b864:	mov	x0, x20
  45b868:	ldr	x21, [sp, #32]
  45b86c:	ldr	x1, [x20, #72]
  45b870:	ldp	x19, x20, [sp, #16]
  45b874:	mov	x16, x1
  45b878:	ldp	x29, x30, [sp], #48
  45b87c:	br	x16
  45b880:	ldr	x2, [x20, #96]
  45b884:	cbz	x2, 45b8b4 <ferror@plt+0x59034>
  45b888:	ldr	x0, [x20, #80]
  45b88c:	mov	x1, x21
  45b890:	blr	x2
  45b894:	mov	x1, x20
  45b898:	ldr	x21, [sp, #32]
  45b89c:	ldr	x0, [x20, #80]
  45b8a0:	ldr	x2, [x20, #96]
  45b8a4:	ldp	x19, x20, [sp, #16]
  45b8a8:	mov	x16, x2
  45b8ac:	ldp	x29, x30, [sp], #48
  45b8b0:	br	x16
  45b8b4:	ldp	x19, x20, [sp, #16]
  45b8b8:	ldr	x21, [sp, #32]
  45b8bc:	ldp	x29, x30, [sp], #48
  45b8c0:	ret
  45b8c4:	nop
  45b8c8:	stp	x29, x30, [sp, #-48]!
  45b8cc:	mov	x29, sp
  45b8d0:	stp	x19, x20, [sp, #16]
  45b8d4:	mov	x20, x0
  45b8d8:	ldr	x0, [x0, #16]
  45b8dc:	stp	x21, x22, [sp, #32]
  45b8e0:	ldp	x21, x22, [x20, #24]
  45b8e4:	cbz	x0, 45b914 <ferror@plt+0x59094>
  45b8e8:	subs	w19, w22, #0x1
  45b8ec:	b.mi	45b914 <ferror@plt+0x59094>  // b.first
  45b8f0:	sxtw	x19, w19
  45b8f4:	nop
  45b8f8:	ldr	x0, [x21, x19, lsl #3]
  45b8fc:	cmp	x0, #0x1
  45b900:	b.ls	45b90c <ferror@plt+0x5908c>  // b.plast
  45b904:	ldr	x1, [x20, #16]
  45b908:	blr	x1
  45b90c:	sub	x19, x19, #0x1
  45b910:	tbz	w19, #31, 45b8f8 <ferror@plt+0x59078>
  45b914:	cmp	x22, #0x20, lsl #12
  45b918:	b.ls	45b9b8 <ferror@plt+0x59138>  // b.plast
  45b91c:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45b920:	mov	w2, #0x1e                  	// #30
  45b924:	add	x3, x3, #0xdb8
  45b928:	mov	w19, #0x0                   	// #0
  45b92c:	b	45b94c <ferror@plt+0x590cc>
  45b930:	sub	w1, w2, w19
  45b934:	add	w1, w19, w1, lsr #1
  45b938:	ubfiz	x0, x1, #4, #32
  45b93c:	ldr	w0, [x3, x0]
  45b940:	cmp	w0, #0x7f
  45b944:	b.ls	45b9dc <ferror@plt+0x5915c>  // b.plast
  45b948:	mov	w2, w1
  45b94c:	cmp	w2, w19
  45b950:	b.ne	45b930 <ferror@plt+0x590b0>  // b.any
  45b954:	ubfiz	x2, x2, #4, #32
  45b958:	ldr	w0, [x3, x2]
  45b95c:	cmp	w0, #0x7f
  45b960:	b.ls	45ba1c <ferror@plt+0x5919c>  // b.plast
  45b964:	ldr	x1, [x20, #72]
  45b968:	sbfiz	x0, x19, #4, #32
  45b96c:	ldr	w21, [x3, x0]
  45b970:	cbz	x1, 45b9e4 <ferror@plt+0x59164>
  45b974:	ldr	x0, [x20, #24]
  45b978:	blr	x1
  45b97c:	ldr	x3, [x20, #88]
  45b980:	sxtw	x21, w21
  45b984:	cbz	x3, 45ba04 <ferror@plt+0x59184>
  45b988:	ldr	x0, [x20, #80]
  45b98c:	mov	x1, x21
  45b990:	mov	x2, #0x8                   	// #8
  45b994:	blr	x3
  45b998:	str	x0, [x20, #24]
  45b99c:	str	x21, [x20, #32]
  45b9a0:	stp	xzr, xzr, [x20, #40]
  45b9a4:	str	w19, [x20, #104]
  45b9a8:	ldp	x19, x20, [sp, #16]
  45b9ac:	ldp	x21, x22, [sp, #32]
  45b9b0:	ldp	x29, x30, [sp], #48
  45b9b4:	ret
  45b9b8:	lsl	x2, x22, #3
  45b9bc:	mov	x0, x21
  45b9c0:	mov	w1, #0x0                   	// #0
  45b9c4:	bl	402440 <memset@plt>
  45b9c8:	stp	xzr, xzr, [x20, #40]
  45b9cc:	ldp	x19, x20, [sp, #16]
  45b9d0:	ldp	x21, x22, [sp, #32]
  45b9d4:	ldp	x29, x30, [sp], #48
  45b9d8:	ret
  45b9dc:	add	w19, w1, #0x1
  45b9e0:	b	45b94c <ferror@plt+0x590cc>
  45b9e4:	ldr	x2, [x20, #96]
  45b9e8:	cbz	x2, 45b97c <ferror@plt+0x590fc>
  45b9ec:	ldr	x1, [x20, #24]
  45b9f0:	sxtw	x21, w21
  45b9f4:	ldr	x0, [x20, #80]
  45b9f8:	blr	x2
  45b9fc:	ldr	x3, [x20, #88]
  45ba00:	cbnz	x3, 45b988 <ferror@plt+0x59108>
  45ba04:	ldr	x2, [x20, #64]
  45ba08:	mov	x0, x21
  45ba0c:	mov	x1, #0x8                   	// #8
  45ba10:	blr	x2
  45ba14:	str	x0, [x20, #24]
  45ba18:	b	45b99c <ferror@plt+0x5911c>
  45ba1c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45ba20:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45ba24:	add	x1, x1, #0xd90
  45ba28:	mov	x2, #0x80                  	// #128
  45ba2c:	ldr	x0, [x0, #1312]
  45ba30:	bl	402840 <fprintf@plt>
  45ba34:	bl	402540 <abort@plt>
  45ba38:	stp	x29, x30, [sp, #-80]!
  45ba3c:	mov	x29, sp
  45ba40:	stp	x21, x22, [sp, #32]
  45ba44:	mov	x21, x0
  45ba48:	ldr	w0, [x0, #104]
  45ba4c:	mov	w22, w2
  45ba50:	stp	x19, x20, [sp, #16]
  45ba54:	ldr	w2, [x21, #56]
  45ba58:	lsl	x3, x0, #4
  45ba5c:	ldr	x4, [x21, #24]
  45ba60:	str	x25, [sp, #64]
  45ba64:	adrp	x25, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45ba68:	add	x25, x25, #0xdb8
  45ba6c:	add	x5, x25, x3
  45ba70:	add	w2, w2, #0x1
  45ba74:	str	w2, [x21, #56]
  45ba78:	ldr	w2, [x25, x3]
  45ba7c:	ldr	w3, [x5, #4]
  45ba80:	ldr	w5, [x5, #12]
  45ba84:	umull	x3, w22, w3
  45ba88:	lsr	x3, x3, #32
  45ba8c:	sub	w19, w22, w3
  45ba90:	add	w19, w3, w19, lsr #1
  45ba94:	lsr	w19, w19, w5
  45ba98:	msub	w19, w19, w2, w22
  45ba9c:	ldr	x20, [x4, w19, uxtw #3]
  45baa0:	cbz	x20, 45bb88 <ferror@plt+0x59308>
  45baa4:	stp	x23, x24, [sp, #48]
  45baa8:	cmp	x20, #0x1
  45baac:	mov	x24, x1
  45bab0:	ldr	x23, [x21, #32]
  45bab4:	b.eq	45bae0 <ferror@plt+0x59260>  // b.none
  45bab8:	ldr	x2, [x21, #8]
  45babc:	mov	x0, x20
  45bac0:	blr	x2
  45bac4:	cbnz	w0, 45bba4 <ferror@plt+0x59324>
  45bac8:	ldr	w0, [x21, #104]
  45bacc:	ldr	x4, [x21, #24]
  45bad0:	lsl	x1, x0, #4
  45bad4:	add	x3, x25, x1
  45bad8:	ldr	w2, [x25, x1]
  45badc:	ldr	w5, [x3, #12]
  45bae0:	add	x25, x25, x0, lsl #4
  45bae4:	sub	w0, w2, #0x2
  45bae8:	add	w6, w22, #0x1
  45baec:	ldr	w3, [x21, #60]
  45baf0:	ldr	w1, [x25, #8]
  45baf4:	umull	x2, w22, w1
  45baf8:	lsr	x1, x2, #32
  45bafc:	sub	w2, w22, w1
  45bb00:	add	w2, w1, w2, lsr #1
  45bb04:	lsr	w2, w2, w5
  45bb08:	msub	w22, w2, w0, w6
  45bb0c:	add	w2, w19, w22
  45bb10:	add	w3, w3, #0x1
  45bb14:	str	w3, [x21, #60]
  45bb18:	mov	x19, x2
  45bb1c:	cmp	x23, w2, uxtw
  45bb20:	mov	x1, x24
  45bb24:	b.hi	45bb30 <ferror@plt+0x592b0>  // b.pmore
  45bb28:	sub	w2, w2, w23
  45bb2c:	mov	x19, x2
  45bb30:	ldr	x20, [x4, x2, lsl #3]
  45bb34:	cmp	x20, #0x1
  45bb38:	mov	x0, x20
  45bb3c:	cbz	x20, 45bb84 <ferror@plt+0x59304>
  45bb40:	b.eq	45bb0c <ferror@plt+0x5928c>  // b.none
  45bb44:	ldr	x2, [x21, #8]
  45bb48:	blr	x2
  45bb4c:	cbnz	w0, 45bba4 <ferror@plt+0x59324>
  45bb50:	ldr	w3, [x21, #60]
  45bb54:	add	w2, w19, w22
  45bb58:	mov	x19, x2
  45bb5c:	mov	x1, x24
  45bb60:	add	w3, w3, #0x1
  45bb64:	str	w3, [x21, #60]
  45bb68:	cmp	x23, w2, uxtw
  45bb6c:	ldr	x4, [x21, #24]
  45bb70:	b.ls	45bb28 <ferror@plt+0x592a8>  // b.plast
  45bb74:	ldr	x20, [x4, x2, lsl #3]
  45bb78:	cmp	x20, #0x1
  45bb7c:	mov	x0, x20
  45bb80:	cbnz	x20, 45bb40 <ferror@plt+0x592c0>
  45bb84:	ldp	x23, x24, [sp, #48]
  45bb88:	mov	x20, #0x0                   	// #0
  45bb8c:	mov	x0, x20
  45bb90:	ldp	x19, x20, [sp, #16]
  45bb94:	ldp	x21, x22, [sp, #32]
  45bb98:	ldr	x25, [sp, #64]
  45bb9c:	ldp	x29, x30, [sp], #80
  45bba0:	ret
  45bba4:	mov	x0, x20
  45bba8:	ldp	x19, x20, [sp, #16]
  45bbac:	ldp	x21, x22, [sp, #32]
  45bbb0:	ldp	x23, x24, [sp, #48]
  45bbb4:	ldr	x25, [sp, #64]
  45bbb8:	ldp	x29, x30, [sp], #80
  45bbbc:	ret
  45bbc0:	stp	x29, x30, [sp, #-32]!
  45bbc4:	mov	x29, sp
  45bbc8:	stp	x19, x20, [sp, #16]
  45bbcc:	mov	x19, x0
  45bbd0:	mov	x20, x1
  45bbd4:	mov	x0, x1
  45bbd8:	ldr	x1, [x19]
  45bbdc:	blr	x1
  45bbe0:	mov	w2, w0
  45bbe4:	mov	x1, x20
  45bbe8:	mov	x0, x19
  45bbec:	ldp	x19, x20, [sp, #16]
  45bbf0:	ldp	x29, x30, [sp], #32
  45bbf4:	b	45ba38 <ferror@plt+0x591b8>
  45bbf8:	stp	x29, x30, [sp, #-96]!
  45bbfc:	cmp	w3, #0x1
  45bc00:	mov	x29, sp
  45bc04:	stp	x21, x22, [sp, #32]
  45bc08:	mov	w22, w3
  45bc0c:	mov	w21, w2
  45bc10:	stp	x23, x24, [sp, #48]
  45bc14:	mov	x24, x0
  45bc18:	stp	x25, x26, [sp, #64]
  45bc1c:	mov	x26, x1
  45bc20:	ldr	x25, [x0, #32]
  45bc24:	b.eq	45bdac <ferror@plt+0x5952c>  // b.none
  45bc28:	stp	x19, x20, [sp, #16]
  45bc2c:	str	x27, [sp, #80]
  45bc30:	ldr	w1, [x24, #104]
  45bc34:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45bc38:	add	x20, x20, #0xdb8
  45bc3c:	ldr	w0, [x24, #56]
  45bc40:	ldr	x3, [x24, #24]
  45bc44:	lsl	x2, x1, #4
  45bc48:	add	x5, x20, x2
  45bc4c:	add	w0, w0, #0x1
  45bc50:	str	w0, [x24, #56]
  45bc54:	ldr	w4, [x20, x2]
  45bc58:	ldr	w2, [x5, #4]
  45bc5c:	ldr	w5, [x5, #12]
  45bc60:	umull	x2, w21, w2
  45bc64:	lsr	x2, x2, #32
  45bc68:	sub	w19, w21, w2
  45bc6c:	add	w19, w2, w19, lsr #1
  45bc70:	lsr	w19, w19, w5
  45bc74:	msub	w19, w19, w4, w21
  45bc78:	ubfiz	x27, x19, #3, #32
  45bc7c:	ldr	x0, [x3, w19, uxtw #3]
  45bc80:	add	x23, x3, x27
  45bc84:	cbz	x0, 45be24 <ferror@plt+0x595a4>
  45bc88:	cmp	x0, #0x1
  45bc8c:	b.eq	45bcbc <ferror@plt+0x5943c>  // b.none
  45bc90:	ldr	x2, [x24, #8]
  45bc94:	mov	x1, x26
  45bc98:	blr	x2
  45bc9c:	cbnz	w0, 45bdfc <ferror@plt+0x5957c>
  45bca0:	ldr	w1, [x24, #104]
  45bca4:	mov	x23, #0x0                   	// #0
  45bca8:	ldr	x3, [x24, #24]
  45bcac:	lsl	x0, x1, #4
  45bcb0:	add	x2, x20, x0
  45bcb4:	ldr	w4, [x20, x0]
  45bcb8:	ldr	w5, [x2, #12]
  45bcbc:	add	x1, x20, x1, lsl #4
  45bcc0:	sub	w2, w4, #0x2
  45bcc4:	add	w6, w21, #0x1
  45bcc8:	ldr	w4, [x24, #60]
  45bccc:	ldr	w0, [x1, #8]
  45bcd0:	umull	x0, w21, w0
  45bcd4:	lsr	x0, x0, #32
  45bcd8:	sub	w20, w21, w0
  45bcdc:	add	w20, w0, w20, lsr #1
  45bce0:	lsr	w20, w20, w5
  45bce4:	msub	w20, w20, w2, w6
  45bce8:	add	w2, w19, w20
  45bcec:	add	w4, w4, #0x1
  45bcf0:	str	w4, [x24, #60]
  45bcf4:	mov	x19, x2
  45bcf8:	cmp	x25, w2, uxtw
  45bcfc:	mov	x1, x26
  45bd00:	b.hi	45bd0c <ferror@plt+0x5948c>  // b.pmore
  45bd04:	sub	w2, w2, w25
  45bd08:	mov	x19, x2
  45bd0c:	ldr	x0, [x3, x2, lsl #3]
  45bd10:	lsl	x21, x2, #3
  45bd14:	add	x2, x3, x21
  45bd18:	cmp	x0, #0x1
  45bd1c:	cbz	x0, 45bd68 <ferror@plt+0x594e8>
  45bd20:	b.eq	45bda0 <ferror@plt+0x59520>  // b.none
  45bd24:	ldr	x2, [x24, #8]
  45bd28:	blr	x2
  45bd2c:	cbnz	w0, 45bdd4 <ferror@plt+0x59554>
  45bd30:	ldr	w4, [x24, #60]
  45bd34:	add	w2, w19, w20
  45bd38:	mov	x19, x2
  45bd3c:	mov	x1, x26
  45bd40:	add	w4, w4, #0x1
  45bd44:	str	w4, [x24, #60]
  45bd48:	cmp	x25, w2, uxtw
  45bd4c:	ldr	x3, [x24, #24]
  45bd50:	b.ls	45bd04 <ferror@plt+0x59484>  // b.plast
  45bd54:	ldr	x0, [x3, x2, lsl #3]
  45bd58:	lsl	x21, x2, #3
  45bd5c:	add	x2, x3, x21
  45bd60:	cmp	x0, #0x1
  45bd64:	cbnz	x0, 45bd20 <ferror@plt+0x594a0>
  45bd68:	cbz	w22, 45be54 <ferror@plt+0x595d4>
  45bd6c:	cbz	x23, 45be78 <ferror@plt+0x595f8>
  45bd70:	ldr	x0, [x24, #48]
  45bd74:	ldp	x19, x20, [sp, #16]
  45bd78:	sub	x0, x0, #0x1
  45bd7c:	ldr	x27, [sp, #80]
  45bd80:	str	x0, [x24, #48]
  45bd84:	str	xzr, [x23]
  45bd88:	mov	x0, x23
  45bd8c:	ldp	x21, x22, [sp, #32]
  45bd90:	ldp	x23, x24, [sp, #48]
  45bd94:	ldp	x25, x26, [sp, #64]
  45bd98:	ldp	x29, x30, [sp], #96
  45bd9c:	ret
  45bda0:	cmp	x23, #0x0
  45bda4:	csel	x23, x23, x2, ne  // ne = any
  45bda8:	b	45bce8 <ferror@plt+0x59468>
  45bdac:	ldr	x2, [x0, #40]
  45bdb0:	add	x1, x25, x25, lsl #1
  45bdb4:	cmp	x1, x2, lsl #2
  45bdb8:	b.hi	45bc28 <ferror@plt+0x593a8>  // b.pmore
  45bdbc:	bl	45b2b8 <ferror@plt+0x58a38>
  45bdc0:	cbz	w0, 45be5c <ferror@plt+0x595dc>
  45bdc4:	stp	x19, x20, [sp, #16]
  45bdc8:	ldr	x25, [x24, #32]
  45bdcc:	str	x27, [sp, #80]
  45bdd0:	b	45bc30 <ferror@plt+0x593b0>
  45bdd4:	ldr	x23, [x24, #24]
  45bdd8:	ldp	x19, x20, [sp, #16]
  45bddc:	add	x23, x23, x21
  45bde0:	mov	x0, x23
  45bde4:	ldp	x21, x22, [sp, #32]
  45bde8:	ldp	x23, x24, [sp, #48]
  45bdec:	ldp	x25, x26, [sp, #64]
  45bdf0:	ldr	x27, [sp, #80]
  45bdf4:	ldp	x29, x30, [sp], #96
  45bdf8:	ret
  45bdfc:	ldr	x23, [x24, #24]
  45be00:	ldp	x19, x20, [sp, #16]
  45be04:	add	x23, x23, x27
  45be08:	mov	x0, x23
  45be0c:	ldp	x21, x22, [sp, #32]
  45be10:	ldp	x23, x24, [sp, #48]
  45be14:	ldp	x25, x26, [sp, #64]
  45be18:	ldr	x27, [sp, #80]
  45be1c:	ldp	x29, x30, [sp], #96
  45be20:	ret
  45be24:	cbz	w22, 45be54 <ferror@plt+0x595d4>
  45be28:	ldr	x0, [x24, #40]
  45be2c:	ldp	x19, x20, [sp, #16]
  45be30:	add	x0, x0, #0x1
  45be34:	ldr	x27, [sp, #80]
  45be38:	str	x0, [x24, #40]
  45be3c:	mov	x0, x23
  45be40:	ldp	x21, x22, [sp, #32]
  45be44:	ldp	x23, x24, [sp, #48]
  45be48:	ldp	x25, x26, [sp, #64]
  45be4c:	ldp	x29, x30, [sp], #96
  45be50:	ret
  45be54:	ldp	x19, x20, [sp, #16]
  45be58:	ldr	x27, [sp, #80]
  45be5c:	mov	x23, #0x0                   	// #0
  45be60:	mov	x0, x23
  45be64:	ldp	x21, x22, [sp, #32]
  45be68:	ldp	x23, x24, [sp, #48]
  45be6c:	ldp	x25, x26, [sp, #64]
  45be70:	ldp	x29, x30, [sp], #96
  45be74:	ret
  45be78:	mov	x23, x2
  45be7c:	b	45be28 <ferror@plt+0x595a8>
  45be80:	stp	x29, x30, [sp, #-48]!
  45be84:	mov	x29, sp
  45be88:	stp	x19, x20, [sp, #16]
  45be8c:	mov	x19, x0
  45be90:	mov	x20, x1
  45be94:	mov	x0, x1
  45be98:	ldr	x1, [x19]
  45be9c:	str	x21, [sp, #32]
  45bea0:	mov	w21, w2
  45bea4:	blr	x1
  45bea8:	mov	w2, w0
  45beac:	mov	w3, w21
  45beb0:	mov	x1, x20
  45beb4:	mov	x0, x19
  45beb8:	ldp	x19, x20, [sp, #16]
  45bebc:	ldr	x21, [sp, #32]
  45bec0:	ldp	x29, x30, [sp], #48
  45bec4:	b	45bbf8 <ferror@plt+0x59378>
  45bec8:	stp	x29, x30, [sp, #-32]!
  45becc:	mov	x29, sp
  45bed0:	stp	x19, x20, [sp, #16]
  45bed4:	mov	x19, x0
  45bed8:	mov	x20, x1
  45bedc:	mov	x0, x1
  45bee0:	ldr	x1, [x19]
  45bee4:	blr	x1
  45bee8:	mov	w2, w0
  45beec:	mov	x1, x20
  45bef0:	mov	x0, x19
  45bef4:	mov	w3, #0x0                   	// #0
  45bef8:	bl	45bbf8 <ferror@plt+0x59378>
  45befc:	cbz	x0, 45bf28 <ferror@plt+0x596a8>
  45bf00:	ldr	x1, [x19, #16]
  45bf04:	mov	x20, x0
  45bf08:	cbz	x1, 45bf14 <ferror@plt+0x59694>
  45bf0c:	ldr	x0, [x0]
  45bf10:	blr	x1
  45bf14:	ldr	x0, [x19, #48]
  45bf18:	mov	x1, #0x1                   	// #1
  45bf1c:	str	x1, [x20]
  45bf20:	add	x0, x0, x1
  45bf24:	str	x0, [x19, #48]
  45bf28:	ldp	x19, x20, [sp, #16]
  45bf2c:	ldp	x29, x30, [sp], #32
  45bf30:	ret
  45bf34:	nop
  45bf38:	stp	x29, x30, [sp, #-32]!
  45bf3c:	mov	w3, #0x0                   	// #0
  45bf40:	mov	x29, sp
  45bf44:	stp	x19, x20, [sp, #16]
  45bf48:	mov	x19, x0
  45bf4c:	bl	45bbf8 <ferror@plt+0x59378>
  45bf50:	cbz	x0, 45bf7c <ferror@plt+0x596fc>
  45bf54:	ldr	x1, [x19, #16]
  45bf58:	mov	x20, x0
  45bf5c:	cbz	x1, 45bf68 <ferror@plt+0x596e8>
  45bf60:	ldr	x0, [x0]
  45bf64:	blr	x1
  45bf68:	ldr	x0, [x19, #48]
  45bf6c:	mov	x1, #0x1                   	// #1
  45bf70:	str	x1, [x20]
  45bf74:	add	x0, x0, x1
  45bf78:	str	x0, [x19, #48]
  45bf7c:	ldp	x19, x20, [sp, #16]
  45bf80:	ldp	x29, x30, [sp], #32
  45bf84:	ret
  45bf88:	stp	x29, x30, [sp, #-32]!
  45bf8c:	mov	x29, sp
  45bf90:	stp	x19, x20, [sp, #16]
  45bf94:	mov	x20, x1
  45bf98:	ldr	x1, [x0, #24]
  45bf9c:	cmp	x1, x20
  45bfa0:	b.hi	45bff0 <ferror@plt+0x59770>  // b.pmore
  45bfa4:	mov	x19, x0
  45bfa8:	ldr	x0, [x0, #32]
  45bfac:	add	x0, x1, x0, lsl #3
  45bfb0:	cmp	x20, x0
  45bfb4:	b.cs	45bff0 <ferror@plt+0x59770>  // b.hs, b.nlast
  45bfb8:	ldr	x0, [x20]
  45bfbc:	cmp	x0, #0x1
  45bfc0:	b.ls	45bff0 <ferror@plt+0x59770>  // b.plast
  45bfc4:	ldr	x1, [x19, #16]
  45bfc8:	cbz	x1, 45bfd0 <ferror@plt+0x59750>
  45bfcc:	blr	x1
  45bfd0:	ldr	x0, [x19, #48]
  45bfd4:	mov	x1, #0x1                   	// #1
  45bfd8:	str	x1, [x20]
  45bfdc:	add	x0, x0, x1
  45bfe0:	str	x0, [x19, #48]
  45bfe4:	ldp	x19, x20, [sp, #16]
  45bfe8:	ldp	x29, x30, [sp], #32
  45bfec:	ret
  45bff0:	bl	402540 <abort@plt>
  45bff4:	nop
  45bff8:	stp	x29, x30, [sp, #-48]!
  45bffc:	mov	x29, sp
  45c000:	stp	x19, x20, [sp, #16]
  45c004:	mov	x20, x2
  45c008:	stp	x21, x22, [sp, #32]
  45c00c:	mov	x22, x1
  45c010:	ldp	x19, x21, [x0, #24]
  45c014:	add	x21, x19, x21, lsl #3
  45c018:	ldr	x3, [x19]
  45c01c:	mov	x0, x19
  45c020:	mov	x1, x20
  45c024:	add	x19, x19, #0x8
  45c028:	cmp	x3, #0x1
  45c02c:	b.ls	45c038 <ferror@plt+0x597b8>  // b.plast
  45c030:	blr	x22
  45c034:	cbz	w0, 45c040 <ferror@plt+0x597c0>
  45c038:	cmp	x21, x19
  45c03c:	b.hi	45c018 <ferror@plt+0x59798>  // b.pmore
  45c040:	ldp	x19, x20, [sp, #16]
  45c044:	ldp	x21, x22, [sp, #32]
  45c048:	ldp	x29, x30, [sp], #48
  45c04c:	ret
  45c050:	stp	x29, x30, [sp, #-48]!
  45c054:	mov	x3, #0x20                  	// #32
  45c058:	mov	x29, sp
  45c05c:	stp	x19, x20, [sp, #16]
  45c060:	mov	x19, x0
  45c064:	stp	x21, x22, [sp, #32]
  45c068:	mov	x22, x1
  45c06c:	mov	x21, x2
  45c070:	ldp	x20, x1, [x0, #32]
  45c074:	ldr	x2, [x0, #48]
  45c078:	sub	x1, x1, x2
  45c07c:	lsl	x1, x1, #3
  45c080:	cmp	x1, x3
  45c084:	csel	x1, x1, x3, cs  // cs = hs, nlast
  45c088:	cmp	x20, x1
  45c08c:	b.hi	45c0d0 <ferror@plt+0x59850>  // b.pmore
  45c090:	ldr	x19, [x19, #24]
  45c094:	add	x20, x19, x20, lsl #3
  45c098:	ldr	x3, [x19]
  45c09c:	mov	x0, x19
  45c0a0:	mov	x1, x21
  45c0a4:	add	x19, x19, #0x8
  45c0a8:	cmp	x3, #0x1
  45c0ac:	b.ls	45c0b8 <ferror@plt+0x59838>  // b.plast
  45c0b0:	blr	x22
  45c0b4:	cbz	w0, 45c0c0 <ferror@plt+0x59840>
  45c0b8:	cmp	x20, x19
  45c0bc:	b.hi	45c098 <ferror@plt+0x59818>  // b.pmore
  45c0c0:	ldp	x19, x20, [sp, #16]
  45c0c4:	ldp	x21, x22, [sp, #32]
  45c0c8:	ldp	x29, x30, [sp], #48
  45c0cc:	ret
  45c0d0:	bl	45b2b8 <ferror@plt+0x58a38>
  45c0d4:	ldr	x20, [x19, #32]
  45c0d8:	b	45c090 <ferror@plt+0x59810>
  45c0dc:	nop
  45c0e0:	ldr	w1, [x0, #56]
  45c0e4:	movi	d0, #0x0
  45c0e8:	cbz	w1, 45c0fc <ferror@plt+0x5987c>
  45c0ec:	ldr	w0, [x0, #60]
  45c0f0:	ucvtf	d1, w1
  45c0f4:	ucvtf	d0, w0
  45c0f8:	fdiv	d0, d0, d1
  45c0fc:	ret
  45c100:	mov	x2, x0
  45c104:	mov	w0, #0x0                   	// #0
  45c108:	ldrb	w1, [x2], #1
  45c10c:	cbz	w1, 45c128 <ferror@plt+0x598a8>
  45c110:	mov	w3, #0x43                  	// #67
  45c114:	nop
  45c118:	madd	w0, w0, w3, w1
  45c11c:	ldrb	w1, [x2], #1
  45c120:	sub	w0, w0, #0x71
  45c124:	cbnz	w1, 45c118 <ferror@plt+0x59898>
  45c128:	ret
  45c12c:	nop
  45c130:	mov	w8, #0x79b9                	// #31161
  45c134:	mov	w5, w1
  45c138:	movk	w8, #0x9e37, lsl #16
  45c13c:	tst	x0, #0x3
  45c140:	mov	w7, w8
  45c144:	b.eq	45c370 <ferror@plt+0x59af0>  // b.none
  45c148:	cmp	w1, #0xb
  45c14c:	b.ls	45c234 <ferror@plt+0x599b4>  // b.plast
  45c150:	ldrb	w3, [x0, #10]
  45c154:	sub	w5, w5, #0xc
  45c158:	ldrb	w10, [x0, #6]
  45c15c:	cmp	w5, #0xb
  45c160:	ldrb	w4, [x0, #5]
  45c164:	ldrb	w9, [x0, #7]
  45c168:	lsl	w6, w3, #16
  45c16c:	ldrb	w13, [x0, #4]
  45c170:	lsl	w10, w10, #16
  45c174:	ldrb	w3, [x0, #9]
  45c178:	add	w4, w10, w4, lsl #8
  45c17c:	ldrb	w11, [x0, #11]
  45c180:	ldrb	w12, [x0, #8]
  45c184:	add	w9, w13, w9, lsl #24
  45c188:	ldrb	w10, [x0, #2]
  45c18c:	add	w3, w6, w3, lsl #8
  45c190:	add	w4, w4, w9
  45c194:	ldrb	w6, [x0, #1]
  45c198:	ldrb	w9, [x0, #3]
  45c19c:	add	w11, w12, w11, lsl #24
  45c1a0:	ldrb	w12, [x0], #12
  45c1a4:	add	w3, w3, w11
  45c1a8:	lsl	w10, w10, #16
  45c1ac:	add	w2, w3, w2
  45c1b0:	add	w4, w4, w8
  45c1b4:	add	w6, w10, w6, lsl #8
  45c1b8:	add	w3, w12, w9, lsl #24
  45c1bc:	add	w8, w4, w2
  45c1c0:	add	w6, w6, w3
  45c1c4:	sub	w3, w4, w2
  45c1c8:	sub	w4, w6, w8
  45c1cc:	add	w4, w4, w7
  45c1d0:	eor	w4, w4, w2, lsr #13
  45c1d4:	sub	w3, w3, w4
  45c1d8:	sub	w2, w2, w4
  45c1dc:	eor	w3, w3, w4, lsl #8
  45c1e0:	sub	w2, w2, w3
  45c1e4:	sub	w4, w4, w3
  45c1e8:	eor	w2, w2, w3, lsr #13
  45c1ec:	sub	w4, w4, w2
  45c1f0:	sub	w3, w3, w2
  45c1f4:	eor	w4, w4, w2, lsr #12
  45c1f8:	sub	w3, w3, w4
  45c1fc:	sub	w2, w2, w4
  45c200:	eor	w3, w3, w4, lsl #16
  45c204:	sub	w2, w2, w3
  45c208:	sub	w4, w4, w3
  45c20c:	eor	w2, w2, w3, lsr #5
  45c210:	sub	w4, w4, w2
  45c214:	sub	w3, w3, w2
  45c218:	eor	w7, w4, w2, lsr #3
  45c21c:	sub	w3, w3, w7
  45c220:	sub	w2, w2, w7
  45c224:	eor	w8, w3, w7, lsl #10
  45c228:	sub	w2, w2, w8
  45c22c:	eor	w2, w2, w8, lsr #15
  45c230:	b.hi	45c150 <ferror@plt+0x598d0>  // b.pmore
  45c234:	add	w2, w2, w1
  45c238:	cmp	w5, #0x6
  45c23c:	b.eq	45c280 <ferror@plt+0x59a00>  // b.none
  45c240:	b.ls	45c28c <ferror@plt+0x59a0c>  // b.plast
  45c244:	cmp	w5, #0x9
  45c248:	b.eq	45c268 <ferror@plt+0x599e8>  // b.none
  45c24c:	b.ls	45c354 <ferror@plt+0x59ad4>  // b.plast
  45c250:	cmp	w5, #0xa
  45c254:	b.eq	45c260 <ferror@plt+0x599e0>  // b.none
  45c258:	ldrb	w1, [x0, #10]
  45c25c:	add	w2, w2, w1, lsl #24
  45c260:	ldrb	w1, [x0, #9]
  45c264:	add	w2, w2, w1, lsl #16
  45c268:	ldrb	w1, [x0, #8]
  45c26c:	add	w2, w2, w1, lsl #8
  45c270:	ldrb	w1, [x0, #7]
  45c274:	add	w8, w8, w1, lsl #24
  45c278:	ldrb	w1, [x0, #6]
  45c27c:	add	w8, w8, w1, lsl #16
  45c280:	ldrb	w1, [x0, #5]
  45c284:	add	w8, w8, w1, lsl #8
  45c288:	b	45c2a8 <ferror@plt+0x59a28>
  45c28c:	cmp	w5, #0x3
  45c290:	b.eq	45c2b8 <ferror@plt+0x59a38>  // b.none
  45c294:	b.ls	45c340 <ferror@plt+0x59ac0>  // b.plast
  45c298:	cmp	w5, #0x4
  45c29c:	b.eq	45c2b0 <ferror@plt+0x59a30>  // b.none
  45c2a0:	cmp	w5, #0x5
  45c2a4:	b.ne	45c2d0 <ferror@plt+0x59a50>  // b.any
  45c2a8:	ldrb	w1, [x0, #4]
  45c2ac:	add	w8, w8, w1
  45c2b0:	ldrb	w1, [x0, #3]
  45c2b4:	add	w7, w7, w1, lsl #24
  45c2b8:	ldrb	w1, [x0, #2]
  45c2bc:	add	w7, w7, w1, lsl #16
  45c2c0:	ldrb	w1, [x0, #1]
  45c2c4:	add	w7, w7, w1, lsl #8
  45c2c8:	ldrb	w0, [x0]
  45c2cc:	add	w7, w7, w0
  45c2d0:	add	w4, w8, w2
  45c2d4:	sub	w3, w8, w2
  45c2d8:	sub	w4, w7, w4
  45c2dc:	eor	w7, w4, w2, lsr #13
  45c2e0:	sub	w3, w3, w7
  45c2e4:	sub	w2, w2, w7
  45c2e8:	eor	w3, w3, w7, lsl #8
  45c2ec:	sub	w2, w2, w3
  45c2f0:	sub	w0, w7, w3
  45c2f4:	eor	w2, w2, w3, lsr #13
  45c2f8:	sub	w0, w0, w2
  45c2fc:	sub	w1, w3, w2
  45c300:	eor	w0, w0, w2, lsr #12
  45c304:	sub	w1, w1, w0
  45c308:	sub	w2, w2, w0
  45c30c:	eor	w1, w1, w0, lsl #16
  45c310:	sub	w2, w2, w1
  45c314:	sub	w0, w0, w1
  45c318:	eor	w2, w2, w1, lsr #5
  45c31c:	sub	w0, w0, w2
  45c320:	sub	w1, w1, w2
  45c324:	eor	w0, w0, w2, lsr #3
  45c328:	sub	w1, w1, w0
  45c32c:	sub	w2, w2, w0
  45c330:	eor	w0, w1, w0, lsl #10
  45c334:	sub	w2, w2, w0
  45c338:	eor	w0, w2, w0, lsr #15
  45c33c:	ret
  45c340:	cmp	w5, #0x1
  45c344:	b.eq	45c2c8 <ferror@plt+0x59a48>  // b.none
  45c348:	cmp	w5, #0x2
  45c34c:	b.eq	45c2c0 <ferror@plt+0x59a40>  // b.none
  45c350:	b	45c2d0 <ferror@plt+0x59a50>
  45c354:	cmp	w5, #0x7
  45c358:	b.eq	45c278 <ferror@plt+0x599f8>  // b.none
  45c35c:	cmp	w5, #0x8
  45c360:	b.ne	45c2d0 <ferror@plt+0x59a50>  // b.any
  45c364:	ldrb	w1, [x0, #7]
  45c368:	add	w8, w8, w1, lsl #24
  45c36c:	b	45c278 <ferror@plt+0x599f8>
  45c370:	cmp	w1, #0xb
  45c374:	b.ls	45c234 <ferror@plt+0x599b4>  // b.plast
  45c378:	ldp	w4, w3, [x0]
  45c37c:	sub	w5, w5, #0xc
  45c380:	ldr	w6, [x0, #8]
  45c384:	cmp	w5, #0xb
  45c388:	add	w3, w8, w3
  45c38c:	add	w4, w7, w4
  45c390:	add	w2, w2, w6
  45c394:	add	x0, x0, #0xc
  45c398:	add	w6, w3, w2
  45c39c:	sub	w3, w3, w2
  45c3a0:	sub	w4, w4, w6
  45c3a4:	eor	w4, w4, w2, lsr #13
  45c3a8:	sub	w3, w3, w4
  45c3ac:	sub	w2, w2, w4
  45c3b0:	eor	w3, w3, w4, lsl #8
  45c3b4:	sub	w2, w2, w3
  45c3b8:	sub	w4, w4, w3
  45c3bc:	eor	w2, w2, w3, lsr #13
  45c3c0:	sub	w4, w4, w2
  45c3c4:	sub	w3, w3, w2
  45c3c8:	eor	w4, w4, w2, lsr #12
  45c3cc:	sub	w3, w3, w4
  45c3d0:	sub	w2, w2, w4
  45c3d4:	eor	w3, w3, w4, lsl #16
  45c3d8:	sub	w2, w2, w3
  45c3dc:	sub	w4, w4, w3
  45c3e0:	eor	w2, w2, w3, lsr #5
  45c3e4:	sub	w4, w4, w2
  45c3e8:	sub	w3, w3, w2
  45c3ec:	eor	w7, w4, w2, lsr #3
  45c3f0:	sub	w3, w3, w7
  45c3f4:	sub	w2, w2, w7
  45c3f8:	eor	w8, w3, w7, lsl #10
  45c3fc:	sub	w2, w2, w8
  45c400:	eor	w2, w2, w8, lsr #15
  45c404:	b.hi	45c378 <ferror@plt+0x59af8>  // b.pmore
  45c408:	b	45c234 <ferror@plt+0x599b4>
  45c40c:	nop
  45c410:	ret
  45c414:	nop
  45c418:	ldrb	w2, [x0]
  45c41c:	mov	x1, x0
  45c420:	cbz	w2, 45c43c <ferror@plt+0x59bbc>
  45c424:	nop
  45c428:	add	x1, x1, #0x1
  45c42c:	cmp	w2, #0x2f
  45c430:	csel	x0, x0, x1, ne  // ne = any
  45c434:	ldrb	w2, [x1]
  45c438:	cbnz	w2, 45c428 <ferror@plt+0x59ba8>
  45c43c:	ret
  45c440:	mov	x1, x0
  45c444:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45c448:	add	x0, x2, #0x2c0
  45c44c:	mov	w3, #0x88                  	// #136
  45c450:	ldrb	w2, [x1]
  45c454:	ldrh	w0, [x0, w2, sxtw #1]
  45c458:	tst	w3, w0
  45c45c:	b.eq	45c46c <ferror@plt+0x59bec>  // b.none
  45c460:	ldrb	w0, [x1, #1]
  45c464:	cmp	w0, #0x3a
  45c468:	b.eq	45c494 <ferror@plt+0x59c14>  // b.none
  45c46c:	mov	x0, x1
  45c470:	cbz	w2, 45c490 <ferror@plt+0x59c10>
  45c474:	mov	w3, #0x5c                  	// #92
  45c478:	add	x1, x1, #0x1
  45c47c:	cmp	w2, #0x2f
  45c480:	ccmp	w2, w3, #0x4, ne  // ne = any
  45c484:	csel	x0, x0, x1, ne  // ne = any
  45c488:	ldrb	w2, [x1]
  45c48c:	cbnz	w2, 45c478 <ferror@plt+0x59bf8>
  45c490:	ret
  45c494:	ldrb	w2, [x1, #2]
  45c498:	add	x1, x1, #0x2
  45c49c:	b	45c46c <ferror@plt+0x59bec>
  45c4a0:	ldrb	w2, [x0]
  45c4a4:	mov	x1, x0
  45c4a8:	cbz	w2, 45c4c4 <ferror@plt+0x59c44>
  45c4ac:	nop
  45c4b0:	add	x1, x1, #0x1
  45c4b4:	cmp	w2, #0x2f
  45c4b8:	csel	x0, x0, x1, ne  // ne = any
  45c4bc:	ldrb	w2, [x1]
  45c4c0:	cbnz	w2, 45c4b0 <ferror@plt+0x59c30>
  45c4c4:	ret
  45c4c8:	mov	x12, #0x1020                	// #4128
  45c4cc:	sub	sp, sp, x12
  45c4d0:	add	x1, sp, #0x20
  45c4d4:	stp	x29, x30, [sp]
  45c4d8:	mov	x29, sp
  45c4dc:	str	x19, [sp, #16]
  45c4e0:	mov	x19, x0
  45c4e4:	bl	402760 <realpath@plt>
  45c4e8:	cmp	x0, #0x0
  45c4ec:	csel	x0, x0, x19, ne  // ne = any
  45c4f0:	bl	4024c0 <strdup@plt>
  45c4f4:	mov	x12, #0x1020                	// #4128
  45c4f8:	ldp	x29, x30, [sp]
  45c4fc:	ldr	x19, [sp, #16]
  45c500:	add	sp, sp, x12
  45c504:	ret
  45c508:	stp	x29, x30, [sp, #-16]!
  45c50c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c510:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45c514:	mov	x29, sp
  45c518:	ldr	x0, [x0, #1312]
  45c51c:	add	x2, x2, #0xa0
  45c520:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x106d8>
  45c524:	add	x1, x1, #0x888
  45c528:	bl	402840 <fprintf@plt>
  45c52c:	mov	w0, #0x1                   	// #1
  45c530:	bl	4022a0 <exit@plt>
  45c534:	nop

000000000045c538 <_obstack_begin@@Base>:
  45c538:	stp	x29, x30, [sp, #-48]!
  45c53c:	mov	x29, sp
  45c540:	stp	x19, x20, [sp, #16]
  45c544:	mov	x19, x0
  45c548:	ldrb	w0, [x0, #80]
  45c54c:	stp	x21, x22, [sp, #32]
  45c550:	and	w0, w0, #0xfffffffe
  45c554:	stp	x3, x4, [x19, #56]
  45c558:	strb	w0, [x19, #80]
  45c55c:	cbz	x2, 45c5fc <_obstack_begin@@Base+0xc4>
  45c560:	sub	x22, x2, #0x1
  45c564:	neg	x21, x2
  45c568:	ldrb	w0, [x19, #80]
  45c56c:	cmp	x1, #0x0
  45c570:	mov	x2, #0xfe0                 	// #4064
  45c574:	csel	x1, x1, x2, ne  // ne = any
  45c578:	str	x1, [x19]
  45c57c:	str	x22, [x19, #48]
  45c580:	tbz	w0, #0, 45c5dc <_obstack_begin@@Base+0xa4>
  45c584:	ldr	x0, [x19, #72]
  45c588:	blr	x3
  45c58c:	mov	x20, x0
  45c590:	cbz	x20, 45c5ec <_obstack_begin@@Base+0xb4>
  45c594:	add	x2, x20, #0x10
  45c598:	mov	w0, #0x1                   	// #1
  45c59c:	ldr	x1, [x19]
  45c5a0:	add	x2, x2, x22
  45c5a4:	and	x2, x2, x21
  45c5a8:	ldp	x21, x22, [sp, #32]
  45c5ac:	stp	x20, x2, [x19, #8]
  45c5b0:	add	x1, x20, x1
  45c5b4:	str	x2, [x19, #24]
  45c5b8:	str	x1, [x20]
  45c5bc:	str	x1, [x19, #32]
  45c5c0:	ldrb	w1, [x19, #80]
  45c5c4:	str	xzr, [x20, #8]
  45c5c8:	and	w1, w1, #0xfffffff9
  45c5cc:	strb	w1, [x19, #80]
  45c5d0:	ldp	x19, x20, [sp, #16]
  45c5d4:	ldp	x29, x30, [sp], #48
  45c5d8:	ret
  45c5dc:	mov	x0, x1
  45c5e0:	blr	x3
  45c5e4:	mov	x20, x0
  45c5e8:	cbnz	x20, 45c594 <_obstack_begin@@Base+0x5c>
  45c5ec:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c5f0:	ldr	x0, [x0, #1256]
  45c5f4:	blr	x0
  45c5f8:	b	45c594 <_obstack_begin@@Base+0x5c>
  45c5fc:	mov	x21, #0xfffffffffffffff0    	// #-16
  45c600:	mov	x22, #0xf                   	// #15
  45c604:	b	45c568 <_obstack_begin@@Base+0x30>

000000000045c608 <_obstack_begin_1@@Base>:
  45c608:	stp	x29, x30, [sp, #-48]!
  45c60c:	mov	x29, sp
  45c610:	stp	x19, x20, [sp, #16]
  45c614:	mov	x19, x0
  45c618:	mov	x0, x5
  45c61c:	stp	x21, x22, [sp, #32]
  45c620:	ldrb	w5, [x19, #80]
  45c624:	stp	x3, x4, [x19, #56]
  45c628:	orr	w5, w5, #0x1
  45c62c:	str	x0, [x19, #72]
  45c630:	strb	w5, [x19, #80]
  45c634:	cbz	x2, 45c6d0 <_obstack_begin_1@@Base+0xc8>
  45c638:	sub	x22, x2, #0x1
  45c63c:	neg	x21, x2
  45c640:	ldrb	w2, [x19, #80]
  45c644:	cmp	x1, #0x0
  45c648:	mov	x4, #0xfe0                 	// #4064
  45c64c:	csel	x1, x1, x4, ne  // ne = any
  45c650:	str	x1, [x19]
  45c654:	str	x22, [x19, #48]
  45c658:	tbz	w2, #0, 45c6b0 <_obstack_begin_1@@Base+0xa8>
  45c65c:	blr	x3
  45c660:	mov	x20, x0
  45c664:	cbz	x20, 45c6c0 <_obstack_begin_1@@Base+0xb8>
  45c668:	add	x2, x20, #0x10
  45c66c:	mov	w0, #0x1                   	// #1
  45c670:	ldr	x1, [x19]
  45c674:	add	x2, x2, x22
  45c678:	and	x2, x2, x21
  45c67c:	ldp	x21, x22, [sp, #32]
  45c680:	stp	x20, x2, [x19, #8]
  45c684:	add	x1, x20, x1
  45c688:	str	x2, [x19, #24]
  45c68c:	str	x1, [x20]
  45c690:	str	x1, [x19, #32]
  45c694:	ldrb	w1, [x19, #80]
  45c698:	str	xzr, [x20, #8]
  45c69c:	and	w1, w1, #0xfffffff9
  45c6a0:	strb	w1, [x19, #80]
  45c6a4:	ldp	x19, x20, [sp, #16]
  45c6a8:	ldp	x29, x30, [sp], #48
  45c6ac:	ret
  45c6b0:	mov	x0, x1
  45c6b4:	blr	x3
  45c6b8:	mov	x20, x0
  45c6bc:	cbnz	x20, 45c668 <_obstack_begin_1@@Base+0x60>
  45c6c0:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c6c4:	ldr	x0, [x0, #1256]
  45c6c8:	blr	x0
  45c6cc:	b	45c668 <_obstack_begin_1@@Base+0x60>
  45c6d0:	mov	x21, #0xfffffffffffffff0    	// #-16
  45c6d4:	mov	x22, #0xf                   	// #15
  45c6d8:	b	45c640 <_obstack_begin_1@@Base+0x38>
  45c6dc:	nop

000000000045c6e0 <_obstack_newchunk@@Base>:
  45c6e0:	stp	x29, x30, [sp, #-64]!
  45c6e4:	mov	x29, sp
  45c6e8:	stp	x19, x20, [sp, #16]
  45c6ec:	mov	x19, x0
  45c6f0:	ldp	x2, x20, [x0, #16]
  45c6f4:	stp	x21, x22, [sp, #32]
  45c6f8:	ldr	x0, [x0, #48]
  45c6fc:	str	x23, [sp, #48]
  45c700:	ldr	x23, [x19, #8]
  45c704:	sub	x20, x20, x2
  45c708:	adds	x1, x20, x1
  45c70c:	cset	x2, cs  // cs = hs, nlast
  45c710:	adds	x1, x0, x1
  45c714:	cset	x0, cs  // cs = hs, nlast
  45c718:	cmp	x2, #0x0
  45c71c:	ccmp	x0, #0x0, #0x0, eq  // eq = none
  45c720:	b.eq	45c740 <_obstack_newchunk@@Base+0x60>  // b.none
  45c724:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c728:	ldr	x0, [x0, #1256]
  45c72c:	blr	x0
  45c730:	str	xzr, [x19, #8]
  45c734:	mov	x0, #0x0                   	// #0
  45c738:	str	x23, [x0, #8]
  45c73c:	brk	#0x3e8
  45c740:	ldr	x0, [x19]
  45c744:	lsr	x21, x20, #3
  45c748:	add	x21, x21, #0x64
  45c74c:	ldrb	w3, [x19, #80]
  45c750:	cmp	x0, x1
  45c754:	add	x21, x21, x1
  45c758:	csel	x1, x0, x1, cs  // cs = hs, nlast
  45c75c:	cmp	x1, x21
  45c760:	csel	x21, x1, x21, cs  // cs = hs, nlast
  45c764:	ldr	x2, [x19, #56]
  45c768:	tbz	w3, #0, 45c800 <_obstack_newchunk@@Base+0x120>
  45c76c:	ldr	x0, [x19, #72]
  45c770:	mov	x1, x21
  45c774:	blr	x2
  45c778:	mov	x22, x0
  45c77c:	cbz	x22, 45c724 <_obstack_newchunk@@Base+0x44>
  45c780:	mov	x0, x22
  45c784:	str	x22, [x19, #8]
  45c788:	add	x1, x22, x21
  45c78c:	mov	x2, x20
  45c790:	ldr	x21, [x19, #48]
  45c794:	str	x23, [x22, #8]
  45c798:	str	x1, [x19, #32]
  45c79c:	str	x1, [x0], #16
  45c7a0:	ldr	x1, [x19, #16]
  45c7a4:	add	x0, x0, x21
  45c7a8:	bic	x21, x0, x21
  45c7ac:	mov	x0, x21
  45c7b0:	bl	402220 <memcpy@plt>
  45c7b4:	ldrb	w3, [x19, #80]
  45c7b8:	tbnz	w3, #1, 45c7d8 <_obstack_newchunk@@Base+0xf8>
  45c7bc:	ldr	x2, [x19, #48]
  45c7c0:	add	x1, x23, #0x10
  45c7c4:	ldr	x0, [x19, #16]
  45c7c8:	add	x1, x1, x2
  45c7cc:	bic	x1, x1, x2
  45c7d0:	cmp	x0, x1
  45c7d4:	b.eq	45c810 <_obstack_newchunk@@Base+0x130>  // b.none
  45c7d8:	ldrb	w0, [x19, #80]
  45c7dc:	add	x20, x21, x20
  45c7e0:	ldr	x23, [sp, #48]
  45c7e4:	and	w0, w0, #0xfffffffd
  45c7e8:	stp	x21, x20, [x19, #16]
  45c7ec:	strb	w0, [x19, #80]
  45c7f0:	ldp	x19, x20, [sp, #16]
  45c7f4:	ldp	x21, x22, [sp, #32]
  45c7f8:	ldp	x29, x30, [sp], #64
  45c7fc:	ret
  45c800:	mov	x0, x21
  45c804:	blr	x2
  45c808:	mov	x22, x0
  45c80c:	b	45c77c <_obstack_newchunk@@Base+0x9c>
  45c810:	ldr	x0, [x23, #8]
  45c814:	ldr	x2, [x19, #64]
  45c818:	str	x0, [x22, #8]
  45c81c:	tbz	w3, #0, 45c830 <_obstack_newchunk@@Base+0x150>
  45c820:	ldr	x0, [x19, #72]
  45c824:	mov	x1, x23
  45c828:	blr	x2
  45c82c:	b	45c7d8 <_obstack_newchunk@@Base+0xf8>
  45c830:	mov	x0, x23
  45c834:	blr	x2
  45c838:	b	45c7d8 <_obstack_newchunk@@Base+0xf8>
  45c83c:	nop

000000000045c840 <_obstack_allocated_p@@Base>:
  45c840:	ldr	x0, [x0, #8]
  45c844:	cbz	x0, 45c868 <_obstack_allocated_p@@Base+0x28>
  45c848:	cmp	x1, x0
  45c84c:	b.ls	45c85c <_obstack_allocated_p@@Base+0x1c>  // b.plast
  45c850:	ldr	x2, [x0]
  45c854:	cmp	x2, x1
  45c858:	b.cs	45c86c <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  45c85c:	ldr	x0, [x0, #8]
  45c860:	cbnz	x0, 45c848 <_obstack_allocated_p@@Base+0x8>
  45c864:	mov	w0, #0x0                   	// #0
  45c868:	ret
  45c86c:	mov	w0, #0x1                   	// #1
  45c870:	ret
  45c874:	nop

000000000045c878 <_obstack_free@@Base>:
  45c878:	stp	x29, x30, [sp, #-48]!
  45c87c:	mov	x29, sp
  45c880:	str	x21, [sp, #32]
  45c884:	mov	x21, x1
  45c888:	ldr	x1, [x0, #8]
  45c88c:	cbz	x1, 45c8f8 <_obstack_free@@Base+0x80>
  45c890:	stp	x19, x20, [sp, #16]
  45c894:	mov	x19, x0
  45c898:	cmp	x1, x21
  45c89c:	b.cs	45c8ac <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  45c8a0:	ldr	x0, [x1]
  45c8a4:	cmp	x0, x21
  45c8a8:	b.cs	45c908 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  45c8ac:	ldrb	w0, [x19, #80]
  45c8b0:	ldr	x20, [x1, #8]
  45c8b4:	ldr	x2, [x19, #64]
  45c8b8:	tbz	w0, #0, 45c8dc <_obstack_free@@Base+0x64>
  45c8bc:	ldr	x0, [x19, #72]
  45c8c0:	blr	x2
  45c8c4:	ldrb	w0, [x19, #80]
  45c8c8:	orr	w0, w0, #0x2
  45c8cc:	strb	w0, [x19, #80]
  45c8d0:	cbz	x20, 45c8f4 <_obstack_free@@Base+0x7c>
  45c8d4:	mov	x1, x20
  45c8d8:	b	45c898 <_obstack_free@@Base+0x20>
  45c8dc:	mov	x0, x1
  45c8e0:	blr	x2
  45c8e4:	ldrb	w0, [x19, #80]
  45c8e8:	orr	w0, w0, #0x2
  45c8ec:	strb	w0, [x19, #80]
  45c8f0:	cbnz	x20, 45c8d4 <_obstack_free@@Base+0x5c>
  45c8f4:	ldp	x19, x20, [sp, #16]
  45c8f8:	cbnz	x21, 45c920 <_obstack_free@@Base+0xa8>
  45c8fc:	ldr	x21, [sp, #32]
  45c900:	ldp	x29, x30, [sp], #48
  45c904:	ret
  45c908:	stp	x1, x21, [x19, #8]
  45c90c:	stp	x21, x0, [x19, #24]
  45c910:	ldp	x19, x20, [sp, #16]
  45c914:	ldr	x21, [sp, #32]
  45c918:	ldp	x29, x30, [sp], #48
  45c91c:	ret
  45c920:	stp	x19, x20, [sp, #16]
  45c924:	bl	402540 <abort@plt>

000000000045c928 <_obstack_memory_used@@Base>:
  45c928:	ldr	x1, [x0, #8]
  45c92c:	mov	x0, #0x0                   	// #0
  45c930:	cbz	x1, 45c94c <_obstack_memory_used@@Base+0x24>
  45c934:	nop
  45c938:	ldr	x2, [x1]
  45c93c:	sub	x2, x2, x1
  45c940:	ldr	x1, [x1, #8]
  45c944:	add	x0, x0, x2
  45c948:	cbnz	x1, 45c938 <_obstack_memory_used@@Base+0x10>
  45c94c:	ret
  45c950:	stp	x29, x30, [sp, #-32]!
  45c954:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c958:	mov	x29, sp
  45c95c:	str	x19, [sp, #16]
  45c960:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c964:	str	x0, [x2, #1264]
  45c968:	ldr	x1, [x19, #2224]
  45c96c:	cbz	x1, 45c97c <_obstack_memory_used@@Base+0x54>
  45c970:	ldr	x19, [sp, #16]
  45c974:	ldp	x29, x30, [sp], #32
  45c978:	ret
  45c97c:	mov	x0, #0x0                   	// #0
  45c980:	bl	4022b0 <sbrk@plt>
  45c984:	str	x0, [x19, #2224]
  45c988:	ldr	x19, [sp, #16]
  45c98c:	ldp	x29, x30, [sp], #32
  45c990:	ret
  45c994:	nop
  45c998:	stp	x29, x30, [sp, #-32]!
  45c99c:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c9a0:	mov	x29, sp
  45c9a4:	stp	x19, x20, [sp, #16]
  45c9a8:	mov	x19, x0
  45c9ac:	mov	x0, #0x0                   	// #0
  45c9b0:	ldr	x20, [x1, #2224]
  45c9b4:	cbz	x20, 45ca04 <_obstack_memory_used@@Base+0xdc>
  45c9b8:	bl	4022b0 <sbrk@plt>
  45c9bc:	sub	x5, x0, x20
  45c9c0:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c9c4:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45c9c8:	adrp	x6, 46e000 <_obstack_memory_used@@Base+0x116d8>
  45c9cc:	adrp	x3, 46d000 <_obstack_memory_used@@Base+0x106d8>
  45c9d0:	ldr	x2, [x1, #1264]
  45c9d4:	add	x6, x6, #0x148
  45c9d8:	ldr	x0, [x0, #1312]
  45c9dc:	add	x3, x3, #0xeb0
  45c9e0:	ldrb	w1, [x2]
  45c9e4:	mov	x4, x19
  45c9e8:	cmp	w1, #0x0
  45c9ec:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45c9f0:	csel	x3, x3, x6, ne  // ne = any
  45c9f4:	add	x1, x1, #0x4c0
  45c9f8:	bl	402840 <fprintf@plt>
  45c9fc:	mov	w0, #0x1                   	// #1
  45ca00:	bl	45cfb8 <_obstack_memory_used@@Base+0x690>
  45ca04:	bl	4022b0 <sbrk@plt>
  45ca08:	adrp	x5, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45ca0c:	add	x5, x5, #0x540
  45ca10:	sub	x5, x0, x5
  45ca14:	b	45c9c0 <_obstack_memory_used@@Base+0x98>
  45ca18:	stp	x29, x30, [sp, #-32]!
  45ca1c:	cmp	x0, #0x0
  45ca20:	mov	x29, sp
  45ca24:	str	x19, [sp, #16]
  45ca28:	csinc	x19, x0, xzr, ne  // ne = any
  45ca2c:	mov	x0, x19
  45ca30:	bl	4023d0 <malloc@plt>
  45ca34:	cbz	x0, 45ca44 <_obstack_memory_used@@Base+0x11c>
  45ca38:	ldr	x19, [sp, #16]
  45ca3c:	ldp	x29, x30, [sp], #32
  45ca40:	ret
  45ca44:	mov	x0, x19
  45ca48:	bl	45c998 <_obstack_memory_used@@Base+0x70>
  45ca4c:	nop
  45ca50:	stp	x29, x30, [sp, #-32]!
  45ca54:	cmp	x0, #0x0
  45ca58:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  45ca5c:	mov	x29, sp
  45ca60:	stp	x19, x20, [sp, #16]
  45ca64:	b.ne	45ca8c <_obstack_memory_used@@Base+0x164>  // b.any
  45ca68:	mov	x19, #0x1                   	// #1
  45ca6c:	mov	x20, x19
  45ca70:	mov	x1, x19
  45ca74:	mov	x0, x20
  45ca78:	bl	402460 <calloc@plt>
  45ca7c:	cbz	x0, 45ca98 <_obstack_memory_used@@Base+0x170>
  45ca80:	ldp	x19, x20, [sp, #16]
  45ca84:	ldp	x29, x30, [sp], #32
  45ca88:	ret
  45ca8c:	mov	x20, x0
  45ca90:	mov	x19, x1
  45ca94:	b	45ca70 <_obstack_memory_used@@Base+0x148>
  45ca98:	mul	x0, x20, x19
  45ca9c:	bl	45c998 <_obstack_memory_used@@Base+0x70>
  45caa0:	stp	x29, x30, [sp, #-32]!
  45caa4:	cmp	x1, #0x0
  45caa8:	mov	x29, sp
  45caac:	str	x19, [sp, #16]
  45cab0:	csinc	x19, x1, xzr, ne  // ne = any
  45cab4:	cbz	x0, 45cad0 <_obstack_memory_used@@Base+0x1a8>
  45cab8:	mov	x1, x19
  45cabc:	bl	4024a0 <realloc@plt>
  45cac0:	cbz	x0, 45cadc <_obstack_memory_used@@Base+0x1b4>
  45cac4:	ldr	x19, [sp, #16]
  45cac8:	ldp	x29, x30, [sp], #32
  45cacc:	ret
  45cad0:	mov	x0, x19
  45cad4:	bl	4023d0 <malloc@plt>
  45cad8:	b	45cac0 <_obstack_memory_used@@Base+0x198>
  45cadc:	mov	x0, x19
  45cae0:	bl	45c998 <_obstack_memory_used@@Base+0x70>
  45cae4:	nop
  45cae8:	stp	x29, x30, [sp, #-48]!
  45caec:	mov	x29, sp
  45caf0:	stp	x19, x20, [sp, #16]
  45caf4:	mov	x20, x2
  45caf8:	mov	x19, x1
  45cafc:	stp	x21, x22, [sp, #32]
  45cb00:	mov	x22, x0
  45cb04:	mov	x0, x2
  45cb08:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  45cb0c:	mov	x21, x0
  45cb10:	cmp	x20, x19
  45cb14:	b.hi	45cb34 <_obstack_memory_used@@Base+0x20c>  // b.pmore
  45cb18:	mov	x2, x19
  45cb1c:	mov	x1, x22
  45cb20:	mov	x0, x21
  45cb24:	ldp	x19, x20, [sp, #16]
  45cb28:	ldp	x21, x22, [sp, #32]
  45cb2c:	ldp	x29, x30, [sp], #48
  45cb30:	b	402220 <memcpy@plt>
  45cb34:	sub	x2, x20, x19
  45cb38:	add	x0, x0, x19
  45cb3c:	mov	w1, #0x0                   	// #0
  45cb40:	bl	402440 <memset@plt>
  45cb44:	mov	x2, x19
  45cb48:	mov	x1, x22
  45cb4c:	mov	x0, x21
  45cb50:	ldp	x19, x20, [sp, #16]
  45cb54:	ldp	x21, x22, [sp, #32]
  45cb58:	ldp	x29, x30, [sp], #48
  45cb5c:	b	402220 <memcpy@plt>
  45cb60:	stp	x29, x30, [sp, #-32]!
  45cb64:	mov	x29, sp
  45cb68:	stp	x19, x20, [sp, #16]
  45cb6c:	mov	x20, x0
  45cb70:	bl	402270 <strlen@plt>
  45cb74:	add	x19, x0, #0x1
  45cb78:	mov	x0, x19
  45cb7c:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  45cb80:	mov	x2, x19
  45cb84:	mov	x1, x20
  45cb88:	ldp	x19, x20, [sp, #16]
  45cb8c:	ldp	x29, x30, [sp], #32
  45cb90:	b	402220 <memcpy@plt>
  45cb94:	nop
  45cb98:	stp	x29, x30, [sp, #-32]!
  45cb9c:	mov	x29, sp
  45cba0:	stp	x19, x20, [sp, #16]
  45cba4:	mov	w20, w0
  45cba8:	bl	4024e0 <strerror@plt>
  45cbac:	cbz	x0, 45cbbc <_obstack_memory_used@@Base+0x294>
  45cbb0:	ldp	x19, x20, [sp, #16]
  45cbb4:	ldp	x29, x30, [sp], #32
  45cbb8:	ret
  45cbbc:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45cbc0:	add	x19, x19, #0x8c0
  45cbc4:	mov	w2, w20
  45cbc8:	mov	x0, x19
  45cbcc:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45cbd0:	add	x1, x1, #0x508
  45cbd4:	bl	402310 <sprintf@plt>
  45cbd8:	mov	x0, x19
  45cbdc:	ldp	x19, x20, [sp, #16]
  45cbe0:	ldp	x29, x30, [sp], #32
  45cbe4:	ret
  45cbe8:	stp	x29, x30, [sp, #-32]!
  45cbec:	mov	x29, sp
  45cbf0:	stp	x19, x20, [sp, #16]
  45cbf4:	mov	x20, x0
  45cbf8:	bl	4022c0 <strnlen@plt>
  45cbfc:	mov	x19, x0
  45cc00:	add	x0, x0, #0x1
  45cc04:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  45cc08:	mov	x1, x20
  45cc0c:	mov	x2, x19
  45cc10:	strb	wzr, [x0, x19]
  45cc14:	ldp	x19, x20, [sp, #16]
  45cc18:	ldp	x29, x30, [sp], #32
  45cc1c:	b	402220 <memcpy@plt>
  45cc20:	stp	x29, x30, [sp, #-64]!
  45cc24:	mov	x29, sp
  45cc28:	stp	x19, x20, [sp, #16]
  45cc2c:	mov	x19, x1
  45cc30:	add	x1, sp, #0x20
  45cc34:	mov	x20, x0
  45cc38:	ldp	x2, x3, [x19]
  45cc3c:	stp	x2, x3, [sp, #32]
  45cc40:	ldp	x2, x3, [x19, #16]
  45cc44:	stp	x2, x3, [sp, #48]
  45cc48:	bl	45cc88 <_obstack_memory_used@@Base+0x360>
  45cc4c:	sxtw	x0, w0
  45cc50:	bl	45ca18 <_obstack_memory_used@@Base+0xf0>
  45cc54:	ldp	x6, x7, [x19]
  45cc58:	mov	x1, x20
  45cc5c:	ldp	x4, x5, [x19, #16]
  45cc60:	add	x2, sp, #0x20
  45cc64:	mov	x19, x0
  45cc68:	stp	x6, x7, [sp, #32]
  45cc6c:	stp	x4, x5, [sp, #48]
  45cc70:	bl	4026e0 <vsprintf@plt>
  45cc74:	mov	x0, x19
  45cc78:	ldp	x19, x20, [sp, #16]
  45cc7c:	ldp	x29, x30, [sp], #64
  45cc80:	ret
  45cc84:	nop
  45cc88:	stp	x29, x30, [sp, #-112]!
  45cc8c:	mov	x29, sp
  45cc90:	stp	x19, x20, [sp, #16]
  45cc94:	mov	x20, x1
  45cc98:	mov	x19, x0
  45cc9c:	stp	x21, x22, [sp, #32]
  45cca0:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45cca4:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45cca8:	stp	x23, x24, [sp, #48]
  45ccac:	add	x22, x22, #0x520
  45ccb0:	add	x21, x21, #0x528
  45ccb4:	str	x0, [sp, #72]
  45ccb8:	bl	402270 <strlen@plt>
  45ccbc:	add	w23, w0, #0x1
  45ccc0:	ldp	x2, x3, [x20]
  45ccc4:	stp	x2, x3, [sp, #80]
  45ccc8:	ldp	x0, x1, [x20, #16]
  45cccc:	stp	x0, x1, [sp, #96]
  45ccd0:	b	45cce8 <_obstack_memory_used@@Base+0x3c0>
  45ccd4:	add	x19, x19, #0x1
  45ccd8:	str	x19, [sp, #72]
  45ccdc:	ldurb	w0, [x19, #-1]
  45cce0:	cmp	w0, #0x25
  45cce4:	b.eq	45cd0c <_obstack_memory_used@@Base+0x3e4>  // b.none
  45cce8:	ldrb	w0, [x19]
  45ccec:	cbnz	w0, 45ccd4 <_obstack_memory_used@@Base+0x3ac>
  45ccf0:	mov	w0, w23
  45ccf4:	ldp	x19, x20, [sp, #16]
  45ccf8:	ldp	x21, x22, [sp, #32]
  45ccfc:	ldp	x23, x24, [sp, #48]
  45cd00:	ldp	x29, x30, [sp], #112
  45cd04:	ret
  45cd08:	str	x19, [sp, #72]
  45cd0c:	mov	x24, x19
  45cd10:	ldrb	w20, [x19], #1
  45cd14:	mov	x0, x22
  45cd18:	mov	w1, w20
  45cd1c:	bl	402670 <strchr@plt>
  45cd20:	cbnz	x0, 45cd08 <_obstack_memory_used@@Base+0x3e0>
  45cd24:	cmp	w20, #0x2a
  45cd28:	b.ne	45cdcc <_obstack_memory_used@@Base+0x4a4>  // b.any
  45cd2c:	ldr	w1, [sp, #104]
  45cd30:	str	x19, [sp, #72]
  45cd34:	ldr	x0, [sp, #80]
  45cd38:	tbnz	w1, #31, 45ced8 <_obstack_memory_used@@Base+0x5b0>
  45cd3c:	add	x1, x0, #0xb
  45cd40:	and	x1, x1, #0xfffffffffffffff8
  45cd44:	str	x1, [sp, #80]
  45cd48:	ldr	w24, [x0]
  45cd4c:	ldrb	w20, [x19]
  45cd50:	cmp	w24, #0x0
  45cd54:	cneg	w24, w24, lt  // lt = tstop
  45cd58:	cmp	w20, #0x2e
  45cd5c:	add	w24, w24, w23
  45cd60:	b.ne	45cd70 <_obstack_memory_used@@Base+0x448>  // b.any
  45cd64:	b	45cdf0 <_obstack_memory_used@@Base+0x4c8>
  45cd68:	str	x19, [sp, #72]
  45cd6c:	ldrb	w20, [x19]
  45cd70:	add	x19, x19, #0x1
  45cd74:	mov	w1, w20
  45cd78:	mov	x0, x21
  45cd7c:	bl	402670 <strchr@plt>
  45cd80:	cbnz	x0, 45cd68 <_obstack_memory_used@@Base+0x440>
  45cd84:	cmp	w20, #0x67
  45cd88:	add	w23, w24, #0x1e
  45cd8c:	b.ls	45ce40 <_obstack_memory_used@@Base+0x518>  // b.plast
  45cd90:	sub	w20, w20, #0x69
  45cd94:	and	w20, w20, #0xff
  45cd98:	cmp	w20, #0xf
  45cd9c:	b.hi	45cdc4 <_obstack_memory_used@@Base+0x49c>  // b.pmore
  45cda0:	mov	x1, #0x1                   	// #1
  45cda4:	mov	x0, #0x9041                	// #36929
  45cda8:	lsl	x1, x1, x20
  45cdac:	tst	x1, x0
  45cdb0:	b.ne	45ce70 <_obstack_memory_used@@Base+0x548>  // b.any
  45cdb4:	mov	x0, #0xa0                  	// #160
  45cdb8:	tst	x1, x0
  45cdbc:	b.ne	45cef4 <_obstack_memory_used@@Base+0x5cc>  // b.any
  45cdc0:	tbnz	w1, #10, 45ce90 <_obstack_memory_used@@Base+0x568>
  45cdc4:	str	x19, [sp, #72]
  45cdc8:	b	45cce8 <_obstack_memory_used@@Base+0x3c0>
  45cdcc:	mov	x0, x24
  45cdd0:	add	x1, sp, #0x48
  45cdd4:	mov	w2, #0xa                   	// #10
  45cdd8:	bl	402260 <strtoul@plt>
  45cddc:	ldr	x19, [sp, #72]
  45cde0:	add	w24, w23, w0
  45cde4:	ldrb	w20, [x19]
  45cde8:	cmp	w20, #0x2e
  45cdec:	b.ne	45cd70 <_obstack_memory_used@@Base+0x448>  // b.any
  45cdf0:	add	x0, x19, #0x1
  45cdf4:	str	x0, [sp, #72]
  45cdf8:	ldrb	w1, [x19, #1]
  45cdfc:	cmp	w1, #0x2a
  45ce00:	b.ne	45cebc <_obstack_memory_used@@Base+0x594>  // b.any
  45ce04:	ldr	w2, [sp, #104]
  45ce08:	add	x1, x19, #0x2
  45ce0c:	str	x1, [sp, #72]
  45ce10:	ldr	x0, [sp, #80]
  45ce14:	tbnz	w2, #31, 45cf9c <_obstack_memory_used@@Base+0x674>
  45ce18:	add	x2, x0, #0xb
  45ce1c:	and	x2, x2, #0xfffffffffffffff8
  45ce20:	str	x2, [sp, #80]
  45ce24:	ldr	w0, [x0]
  45ce28:	ldrb	w20, [x19, #2]
  45ce2c:	mov	x19, x1
  45ce30:	cmp	w0, #0x0
  45ce34:	cneg	w0, w0, lt  // lt = tstop
  45ce38:	add	w24, w24, w0
  45ce3c:	b	45cd70 <_obstack_memory_used@@Base+0x448>
  45ce40:	cmp	w20, #0x44
  45ce44:	b.ls	45cdc4 <_obstack_memory_used@@Base+0x49c>  // b.plast
  45ce48:	sub	w20, w20, #0x45
  45ce4c:	mov	x1, #0x1                   	// #1
  45ce50:	mov	x0, #0x5                   	// #5
  45ce54:	movk	x0, #0x7, lsl #32
  45ce58:	lsl	x20, x1, x20
  45ce5c:	tst	x20, x0
  45ce60:	b.ne	45cf14 <_obstack_memory_used@@Base+0x5ec>  // b.any
  45ce64:	mov	x0, #0xc0080000            	// #3221749760
  45ce68:	tst	x20, x0
  45ce6c:	b.eq	45cdc4 <_obstack_memory_used@@Base+0x49c>  // b.none
  45ce70:	ldr	w1, [sp, #104]
  45ce74:	ldr	x0, [sp, #80]
  45ce78:	tbnz	w1, #31, 45cf50 <_obstack_memory_used@@Base+0x628>
  45ce7c:	add	x0, x0, #0xb
  45ce80:	str	x19, [sp, #72]
  45ce84:	and	x0, x0, #0xfffffffffffffff8
  45ce88:	str	x0, [sp, #80]
  45ce8c:	b	45cce8 <_obstack_memory_used@@Base+0x3c0>
  45ce90:	ldr	w1, [sp, #104]
  45ce94:	ldr	x0, [sp, #80]
  45ce98:	tbnz	w1, #31, 45cf68 <_obstack_memory_used@@Base+0x640>
  45ce9c:	add	x1, x0, #0xf
  45cea0:	and	x1, x1, #0xfffffffffffffff8
  45cea4:	str	x1, [sp, #80]
  45cea8:	ldr	x0, [x0]
  45ceac:	bl	402270 <strlen@plt>
  45ceb0:	add	w23, w23, w0
  45ceb4:	str	x19, [sp, #72]
  45ceb8:	b	45cce8 <_obstack_memory_used@@Base+0x3c0>
  45cebc:	add	x1, sp, #0x48
  45cec0:	mov	w2, #0xa                   	// #10
  45cec4:	bl	402260 <strtoul@plt>
  45cec8:	add	w24, w24, w0
  45cecc:	ldr	x19, [sp, #72]
  45ced0:	ldrb	w20, [x19]
  45ced4:	b	45cd70 <_obstack_memory_used@@Base+0x448>
  45ced8:	add	w2, w1, #0x8
  45cedc:	str	w2, [sp, #104]
  45cee0:	cmp	w2, #0x0
  45cee4:	b.gt	45cd3c <_obstack_memory_used@@Base+0x414>
  45cee8:	ldr	x0, [sp, #88]
  45ceec:	add	x0, x0, w1, sxtw
  45cef0:	b	45cd48 <_obstack_memory_used@@Base+0x420>
  45cef4:	ldr	w1, [sp, #104]
  45cef8:	ldr	x0, [sp, #80]
  45cefc:	tbnz	w1, #31, 45cf84 <_obstack_memory_used@@Base+0x65c>
  45cf00:	add	x0, x0, #0xf
  45cf04:	str	x19, [sp, #72]
  45cf08:	and	x0, x0, #0xfffffffffffffff8
  45cf0c:	str	x0, [sp, #80]
  45cf10:	b	45cce8 <_obstack_memory_used@@Base+0x3c0>
  45cf14:	ldr	w1, [sp, #108]
  45cf18:	ldr	x0, [sp, #80]
  45cf1c:	tbnz	w1, #31, 45cf38 <_obstack_memory_used@@Base+0x610>
  45cf20:	add	x0, x0, #0xf
  45cf24:	add	w23, w24, #0x151
  45cf28:	and	x0, x0, #0xfffffffffffffff8
  45cf2c:	str	x0, [sp, #80]
  45cf30:	str	x19, [sp, #72]
  45cf34:	b	45cce8 <_obstack_memory_used@@Base+0x3c0>
  45cf38:	add	w1, w1, #0x10
  45cf3c:	str	w1, [sp, #108]
  45cf40:	cmp	w1, #0x0
  45cf44:	b.gt	45cf20 <_obstack_memory_used@@Base+0x5f8>
  45cf48:	add	w23, w24, #0x151
  45cf4c:	b	45cf30 <_obstack_memory_used@@Base+0x608>
  45cf50:	add	w1, w1, #0x8
  45cf54:	str	w1, [sp, #104]
  45cf58:	cmp	w1, #0x0
  45cf5c:	b.gt	45ce7c <_obstack_memory_used@@Base+0x554>
  45cf60:	str	x19, [sp, #72]
  45cf64:	b	45cce8 <_obstack_memory_used@@Base+0x3c0>
  45cf68:	add	w2, w1, #0x8
  45cf6c:	str	w2, [sp, #104]
  45cf70:	cmp	w2, #0x0
  45cf74:	b.gt	45ce9c <_obstack_memory_used@@Base+0x574>
  45cf78:	ldr	x0, [sp, #88]
  45cf7c:	add	x0, x0, w1, sxtw
  45cf80:	b	45cea8 <_obstack_memory_used@@Base+0x580>
  45cf84:	add	w1, w1, #0x8
  45cf88:	str	w1, [sp, #104]
  45cf8c:	cmp	w1, #0x0
  45cf90:	b.gt	45cf00 <_obstack_memory_used@@Base+0x5d8>
  45cf94:	str	x19, [sp, #72]
  45cf98:	b	45cce8 <_obstack_memory_used@@Base+0x3c0>
  45cf9c:	add	w3, w2, #0x8
  45cfa0:	str	w3, [sp, #104]
  45cfa4:	cmp	w3, #0x0
  45cfa8:	b.gt	45ce18 <_obstack_memory_used@@Base+0x4f0>
  45cfac:	ldr	x0, [sp, #88]
  45cfb0:	add	x0, x0, w2, sxtw
  45cfb4:	b	45ce24 <_obstack_memory_used@@Base+0x4fc>
  45cfb8:	stp	x29, x30, [sp, #-32]!
  45cfbc:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45cfc0:	mov	x29, sp
  45cfc4:	str	x19, [sp, #16]
  45cfc8:	mov	w19, w0
  45cfcc:	ldr	x0, [x1, #2960]
  45cfd0:	cbz	x0, 45cfd8 <_obstack_memory_used@@Base+0x6b0>
  45cfd4:	blr	x0
  45cfd8:	mov	w0, w19
  45cfdc:	bl	4022a0 <exit@plt>
  45cfe0:	b	45d898 <_obstack_memory_used@@Base+0xf70>
  45cfe4:	nop
  45cfe8:	b	45d8a0 <_obstack_memory_used@@Base+0xf78>
  45cfec:	nop
  45cff0:	stp	x29, x30, [sp, #-64]!
  45cff4:	mov	x29, sp
  45cff8:	str	x23, [sp, #48]
  45cffc:	mov	x23, x0
  45d000:	ldarb	w0, [x0]
  45d004:	tst	w0, #0xff
  45d008:	b.ne	45d064 <_obstack_memory_used@@Base+0x73c>  // b.any
  45d00c:	adrp	x0, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d010:	ldr	x0, [x0, #3880]
  45d014:	cbz	x0, 45d074 <_obstack_memory_used@@Base+0x74c>
  45d018:	stp	x19, x20, [sp, #16]
  45d01c:	mov	w19, #0x100                 	// #256
  45d020:	mov	w20, #0x1                   	// #1
  45d024:	stp	x21, x22, [sp, #32]
  45d028:	mov	w21, w19
  45d02c:	ldaxr	w0, [x23]
  45d030:	cbnz	w0, 45d03c <_obstack_memory_used@@Base+0x714>
  45d034:	stlxr	w1, w19, [x23]
  45d038:	cbnz	w1, 45d02c <_obstack_memory_used@@Base+0x704>
  45d03c:	cmp	w0, #0x0
  45d040:	b.ne	45d09c <_obstack_memory_used@@Base+0x774>  // b.any
  45d044:	mov	w0, #0x1                   	// #1
  45d048:	ldp	x19, x20, [sp, #16]
  45d04c:	ldp	x21, x22, [sp, #32]
  45d050:	ldr	x23, [sp, #48]
  45d054:	ldp	x29, x30, [sp], #64
  45d058:	ret
  45d05c:	ldp	x19, x20, [sp, #16]
  45d060:	ldp	x21, x22, [sp, #32]
  45d064:	mov	w0, #0x0                   	// #0
  45d068:	ldr	x23, [sp, #48]
  45d06c:	ldp	x29, x30, [sp], #64
  45d070:	ret
  45d074:	ldrb	w0, [x23]
  45d078:	cbnz	w0, 45d064 <_obstack_memory_used@@Base+0x73c>
  45d07c:	ldrb	w0, [x23, #1]
  45d080:	cbnz	w0, 45d114 <_obstack_memory_used@@Base+0x7ec>
  45d084:	mov	w2, #0x1                   	// #1
  45d088:	strb	w2, [x23, #1]
  45d08c:	mov	w0, #0x1                   	// #1
  45d090:	ldr	x23, [sp, #48]
  45d094:	ldp	x29, x30, [sp], #64
  45d098:	ret
  45d09c:	orr	w22, w19, #0x10000
  45d0a0:	mov	w3, w0
  45d0a4:	cmp	w20, w3
  45d0a8:	b.eq	45d05c <_obstack_memory_used@@Base+0x734>  // b.none
  45d0ac:	cmp	w19, w3
  45d0b0:	b.ne	45d0d0 <_obstack_memory_used@@Base+0x7a8>  // b.any
  45d0b4:	mov	w3, w22
  45d0b8:	ldaxr	w2, [x23]
  45d0bc:	cmp	w2, w0
  45d0c0:	b.ne	45d0cc <_obstack_memory_used@@Base+0x7a4>  // b.any
  45d0c4:	stlxr	w1, w22, [x23]
  45d0c8:	cbnz	w1, 45d0b8 <_obstack_memory_used@@Base+0x790>
  45d0cc:	b.ne	45d104 <_obstack_memory_used@@Base+0x7dc>  // b.any
  45d0d0:	mov	x1, x23
  45d0d4:	mov	w4, #0x0                   	// #0
  45d0d8:	mov	w2, #0x0                   	// #0
  45d0dc:	mov	x0, #0x62                  	// #98
  45d0e0:	bl	402810 <syscall@plt>
  45d0e4:	ldaxr	w0, [x23]
  45d0e8:	cbnz	w0, 45d0f4 <_obstack_memory_used@@Base+0x7cc>
  45d0ec:	stlxr	w1, w21, [x23]
  45d0f0:	cbnz	w1, 45d0e4 <_obstack_memory_used@@Base+0x7bc>
  45d0f4:	cmp	w0, #0x0
  45d0f8:	mov	w3, w0
  45d0fc:	b.eq	45d044 <_obstack_memory_used@@Base+0x71c>  // b.none
  45d100:	b	45d0a4 <_obstack_memory_used@@Base+0x77c>
  45d104:	cmp	w20, w2
  45d108:	b.eq	45d05c <_obstack_memory_used@@Base+0x734>  // b.none
  45d10c:	cbnz	w2, 45d0d0 <_obstack_memory_used@@Base+0x7a8>
  45d110:	b	45d0e4 <_obstack_memory_used@@Base+0x7bc>
  45d114:	mov	x0, #0x8                   	// #8
  45d118:	stp	x19, x20, [sp, #16]
  45d11c:	stp	x21, x22, [sp, #32]
  45d120:	bl	45dc10 <_obstack_memory_used@@Base+0x12e8>
  45d124:	mov	x19, x0
  45d128:	bl	45d208 <_obstack_memory_used@@Base+0x8e0>
  45d12c:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d130:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d134:	mov	x0, x19
  45d138:	ldr	x2, [x2, #4016]
  45d13c:	ldr	x1, [x1, #3896]
  45d140:	bl	45ea28 <_obstack_memory_used@@Base+0x2100>
  45d144:	nop
  45d148:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d14c:	ldr	x1, [x1, #3880]
  45d150:	cbnz	x1, 45d15c <_obstack_memory_used@@Base+0x834>
  45d154:	strb	wzr, [x0, #1]
  45d158:	ret
  45d15c:	ldaxr	w1, [x0]
  45d160:	stlxr	w2, wzr, [x0]
  45d164:	cbnz	w2, 45d15c <_obstack_memory_used@@Base+0x834>
  45d168:	tbz	w1, #16, 45d158 <_obstack_memory_used@@Base+0x830>
  45d16c:	mov	x1, x0
  45d170:	mov	w3, #0x7fffffff            	// #2147483647
  45d174:	mov	w2, #0x1                   	// #1
  45d178:	mov	x0, #0x62                  	// #98
  45d17c:	b	402810 <syscall@plt>
  45d180:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d184:	ldr	x1, [x1, #3880]
  45d188:	cbz	x1, 45d1a4 <_obstack_memory_used@@Base+0x87c>
  45d18c:	mov	w2, #0x1                   	// #1
  45d190:	ldaxr	w1, [x0]
  45d194:	stlxr	w3, w2, [x0]
  45d198:	cbnz	w3, 45d190 <_obstack_memory_used@@Base+0x868>
  45d19c:	tbnz	w1, #16, 45d1b4 <_obstack_memory_used@@Base+0x88c>
  45d1a0:	ret
  45d1a4:	strb	wzr, [x0, #1]
  45d1a8:	mov	w1, #0x1                   	// #1
  45d1ac:	stlrb	w1, [x0]
  45d1b0:	ret
  45d1b4:	mov	x1, x0
  45d1b8:	mov	w3, #0x7fffffff            	// #2147483647
  45d1bc:	mov	x0, #0x62                  	// #98
  45d1c0:	b	402810 <syscall@plt>
  45d1c4:	nop
  45d1c8:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d1cc:	ldr	x1, [x1, #4056]
  45d1d0:	add	x1, x1, #0x10
  45d1d4:	str	x1, [x0]
  45d1d8:	b	45dd48 <_obstack_memory_used@@Base+0x1420>
  45d1dc:	nop
  45d1e0:	stp	x29, x30, [sp, #-32]!
  45d1e4:	mov	x29, sp
  45d1e8:	str	x19, [sp, #16]
  45d1ec:	mov	x19, x0
  45d1f0:	bl	45d1c8 <_obstack_memory_used@@Base+0x8a0>
  45d1f4:	mov	x0, x19
  45d1f8:	mov	x1, #0x8                   	// #8
  45d1fc:	ldr	x19, [sp, #16]
  45d200:	ldp	x29, x30, [sp], #32
  45d204:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45d208:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d20c:	ldr	x1, [x1, #4056]
  45d210:	add	x1, x1, #0x10
  45d214:	str	x1, [x0]
  45d218:	ret
  45d21c:	nop
  45d220:	stp	x29, x30, [sp, #-32]!
  45d224:	cmp	x0, #0x0
  45d228:	mov	x29, sp
  45d22c:	str	x19, [sp, #16]
  45d230:	csinc	x19, x0, xzr, ne  // ne = any
  45d234:	mov	x0, x19
  45d238:	bl	4023d0 <malloc@plt>
  45d23c:	cbz	x0, 45d24c <_obstack_memory_used@@Base+0x924>
  45d240:	ldr	x19, [sp, #16]
  45d244:	ldp	x29, x30, [sp], #32
  45d248:	ret
  45d24c:	bl	45eb18 <_obstack_memory_used@@Base+0x21f0>
  45d250:	cbz	x0, 45d25c <_obstack_memory_used@@Base+0x934>
  45d254:	blr	x0
  45d258:	b	45d234 <_obstack_memory_used@@Base+0x90c>
  45d25c:	mov	x0, #0x8                   	// #8
  45d260:	bl	45dc10 <_obstack_memory_used@@Base+0x12e8>
  45d264:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d268:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d26c:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d270:	ldr	x3, [x3, #3992]
  45d274:	ldr	x2, [x2, #3920]
  45d278:	add	x3, x3, #0x10
  45d27c:	ldr	x1, [x1, #3904]
  45d280:	str	x3, [x0]
  45d284:	bl	45ea28 <_obstack_memory_used@@Base+0x2100>
  45d288:	b	45d220 <_obstack_memory_used@@Base+0x8f8>
  45d28c:	nop
  45d290:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d294:	ldr	x1, [x1, #4008]
  45d298:	add	x1, x1, #0x10
  45d29c:	str	x1, [x0]
  45d2a0:	b	45d658 <_obstack_memory_used@@Base+0xd30>
  45d2a4:	nop
  45d2a8:	stp	x29, x30, [sp, #-32]!
  45d2ac:	mov	x29, sp
  45d2b0:	str	x19, [sp, #16]
  45d2b4:	mov	x19, x0
  45d2b8:	bl	45d290 <_obstack_memory_used@@Base+0x968>
  45d2bc:	mov	x0, x19
  45d2c0:	mov	x1, #0x18                  	// #24
  45d2c4:	ldr	x19, [sp, #16]
  45d2c8:	ldp	x29, x30, [sp], #32
  45d2cc:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45d2d0:	stp	x29, x30, [sp, #-64]!
  45d2d4:	cmp	x4, x2
  45d2d8:	mov	x29, sp
  45d2dc:	stp	x19, x20, [sp, #16]
  45d2e0:	mov	x19, x0
  45d2e4:	mov	x20, x1
  45d2e8:	b.eq	45d30c <_obstack_memory_used@@Base+0x9e4>  // b.none
  45d2ec:	ldr	x0, [x19, #16]
  45d2f0:	mov	x1, x20
  45d2f4:	ldp	x19, x20, [sp, #16]
  45d2f8:	ldr	x5, [x0]
  45d2fc:	ldr	x5, [x5, #64]
  45d300:	ldp	x29, x30, [sp], #64
  45d304:	mov	x16, x5
  45d308:	br	x16
  45d30c:	ldr	x1, [x3, #8]
  45d310:	ldr	x0, [x0, #8]
  45d314:	cmp	x0, x1
  45d318:	b.eq	45d340 <_obstack_memory_used@@Base+0xa18>  // b.none
  45d31c:	ldrb	w5, [x0]
  45d320:	cmp	w5, #0x2a
  45d324:	b.eq	45d2ec <_obstack_memory_used@@Base+0x9c4>  // b.none
  45d328:	stp	x2, x3, [sp, #40]
  45d32c:	str	x4, [sp, #56]
  45d330:	bl	4025d0 <strcmp@plt>
  45d334:	ldp	x2, x3, [sp, #40]
  45d338:	ldr	x4, [sp, #56]
  45d33c:	cbnz	w0, 45d2ec <_obstack_memory_used@@Base+0x9c4>
  45d340:	mov	w0, #0x6                   	// #6
  45d344:	ldp	x19, x20, [sp, #16]
  45d348:	ldp	x29, x30, [sp], #64
  45d34c:	ret
  45d350:	stp	x29, x30, [sp, #-96]!
  45d354:	mov	x29, sp
  45d358:	stp	x21, x22, [sp, #32]
  45d35c:	mov	x22, x3
  45d360:	mov	x21, x1
  45d364:	stp	x25, x26, [sp, #64]
  45d368:	mov	w26, w2
  45d36c:	ldr	x25, [x0, #8]
  45d370:	stp	x19, x20, [sp, #16]
  45d374:	mov	x19, x4
  45d378:	ldr	x3, [x3, #8]
  45d37c:	stp	x23, x24, [sp, #48]
  45d380:	mov	x20, x7
  45d384:	mov	x23, x6
  45d388:	cmp	x25, x3
  45d38c:	b.eq	45d3bc <_obstack_memory_used@@Base+0xa94>  // b.none
  45d390:	stp	x27, x28, [sp, #80]
  45d394:	mov	x24, x5
  45d398:	mov	x27, x0
  45d39c:	ldrb	w28, [x25]
  45d3a0:	cmp	w28, #0x2a
  45d3a4:	b.eq	45d3f8 <_obstack_memory_used@@Base+0xad0>  // b.none
  45d3a8:	mov	x1, x3
  45d3ac:	mov	x0, x25
  45d3b0:	bl	4025d0 <strcmp@plt>
  45d3b4:	cbnz	w0, 45d3f8 <_obstack_memory_used@@Base+0xad0>
  45d3b8:	ldp	x27, x28, [sp, #80]
  45d3bc:	str	x19, [x20]
  45d3c0:	str	w26, [x20, #8]
  45d3c4:	tbnz	x21, #63, 45d448 <_obstack_memory_used@@Base+0xb20>
  45d3c8:	add	x1, x19, x21
  45d3cc:	mov	w2, #0x6                   	// #6
  45d3d0:	cmp	x23, x1
  45d3d4:	mov	w0, #0x0                   	// #0
  45d3d8:	csinc	w2, w2, wzr, eq  // eq = none
  45d3dc:	str	w2, [x20, #16]
  45d3e0:	ldp	x19, x20, [sp, #16]
  45d3e4:	ldp	x21, x22, [sp, #32]
  45d3e8:	ldp	x23, x24, [sp, #48]
  45d3ec:	ldp	x25, x26, [sp, #64]
  45d3f0:	ldp	x29, x30, [sp], #96
  45d3f4:	ret
  45d3f8:	cmp	x19, x23
  45d3fc:	b.eq	45d460 <_obstack_memory_used@@Base+0xb38>  // b.none
  45d400:	ldr	x0, [x27, #16]
  45d404:	mov	x7, x20
  45d408:	mov	x6, x23
  45d40c:	mov	x5, x24
  45d410:	mov	x4, x19
  45d414:	mov	x3, x22
  45d418:	ldr	x8, [x0]
  45d41c:	mov	w2, w26
  45d420:	mov	x1, x21
  45d424:	ldp	x19, x20, [sp, #16]
  45d428:	ldp	x21, x22, [sp, #32]
  45d42c:	ldp	x23, x24, [sp, #48]
  45d430:	ldp	x25, x26, [sp, #64]
  45d434:	ldp	x27, x28, [sp, #80]
  45d438:	ldp	x29, x30, [sp], #96
  45d43c:	ldr	x8, [x8, #56]
  45d440:	mov	x16, x8
  45d444:	br	x16
  45d448:	cmn	x21, #0x2
  45d44c:	mov	w0, #0x0                   	// #0
  45d450:	b.ne	45d3e0 <_obstack_memory_used@@Base+0xab8>  // b.any
  45d454:	mov	w1, #0x1                   	// #1
  45d458:	str	w1, [x20, #16]
  45d45c:	b	45d3e0 <_obstack_memory_used@@Base+0xab8>
  45d460:	ldr	x1, [x24, #8]
  45d464:	cmp	x25, x1
  45d468:	b.eq	45d480 <_obstack_memory_used@@Base+0xb58>  // b.none
  45d46c:	cmp	w28, #0x2a
  45d470:	b.eq	45d400 <_obstack_memory_used@@Base+0xad8>  // b.none
  45d474:	mov	x0, x25
  45d478:	bl	4025d0 <strcmp@plt>
  45d47c:	cbnz	w0, 45d400 <_obstack_memory_used@@Base+0xad8>
  45d480:	mov	w0, #0x0                   	// #0
  45d484:	ldp	x27, x28, [sp, #80]
  45d488:	str	w26, [x20, #12]
  45d48c:	b	45d3e0 <_obstack_memory_used@@Base+0xab8>
  45d490:	stp	x29, x30, [sp, #-48]!
  45d494:	mov	x29, sp
  45d498:	stp	x19, x20, [sp, #16]
  45d49c:	mov	x19, x1
  45d4a0:	mov	x20, x2
  45d4a4:	stp	x21, x22, [sp, #32]
  45d4a8:	mov	x22, x0
  45d4ac:	mov	x21, x3
  45d4b0:	bl	45d778 <_obstack_memory_used@@Base+0xe50>
  45d4b4:	tst	w0, #0xff
  45d4b8:	b.ne	45d4e8 <_obstack_memory_used@@Base+0xbc0>  // b.any
  45d4bc:	ldr	x0, [x22, #16]
  45d4c0:	mov	x3, x21
  45d4c4:	mov	x2, x20
  45d4c8:	mov	x1, x19
  45d4cc:	ldp	x19, x20, [sp, #16]
  45d4d0:	ldr	x4, [x0]
  45d4d4:	ldp	x21, x22, [sp, #32]
  45d4d8:	ldp	x29, x30, [sp], #48
  45d4dc:	ldr	x4, [x4, #48]
  45d4e0:	mov	x16, x4
  45d4e4:	br	x16
  45d4e8:	ldp	x19, x20, [sp, #16]
  45d4ec:	ldp	x21, x22, [sp, #32]
  45d4f0:	ldp	x29, x30, [sp], #48
  45d4f4:	ret
  45d4f8:	ret
  45d4fc:	nop
  45d500:	mov	w0, #0x0                   	// #0
  45d504:	ret
  45d508:	mov	w0, #0x0                   	// #0
  45d50c:	ret
  45d510:	stp	x29, x30, [sp, #-32]!
  45d514:	mov	x29, sp
  45d518:	str	x19, [sp, #16]
  45d51c:	mov	x19, x0
  45d520:	bl	45d4f8 <_obstack_memory_used@@Base+0xbd0>
  45d524:	mov	x0, x19
  45d528:	mov	x1, #0x10                  	// #16
  45d52c:	ldr	x19, [sp, #16]
  45d530:	ldp	x29, x30, [sp], #32
  45d534:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45d538:	ldr	x2, [x0, #8]
  45d53c:	ldr	x1, [x1, #8]
  45d540:	cmp	x2, x1
  45d544:	b.eq	45d57c <_obstack_memory_used@@Base+0xc54>  // b.none
  45d548:	ldrb	w3, [x2]
  45d54c:	mov	w0, #0x0                   	// #0
  45d550:	cmp	w3, #0x2a
  45d554:	b.eq	45d578 <_obstack_memory_used@@Base+0xc50>  // b.none
  45d558:	stp	x29, x30, [sp, #-16]!
  45d55c:	mov	x0, x2
  45d560:	mov	x29, sp
  45d564:	bl	4025d0 <strcmp@plt>
  45d568:	cmp	w0, #0x0
  45d56c:	cset	w0, eq  // eq = none
  45d570:	ldp	x29, x30, [sp], #16
  45d574:	ret
  45d578:	ret
  45d57c:	mov	w0, #0x1                   	// #1
  45d580:	ret
  45d584:	nop
  45d588:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45d58c:	add	x0, x0, #0x590
  45d590:	ret
  45d594:	nop
  45d598:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d59c:	ldr	x1, [x1, #3992]
  45d5a0:	add	x1, x1, #0x10
  45d5a4:	str	x1, [x0]
  45d5a8:	b	45dd48 <_obstack_memory_used@@Base+0x1420>
  45d5ac:	nop
  45d5b0:	stp	x29, x30, [sp, #-32]!
  45d5b4:	mov	x29, sp
  45d5b8:	str	x19, [sp, #16]
  45d5bc:	mov	x19, x0
  45d5c0:	bl	45d598 <_obstack_memory_used@@Base+0xc70>
  45d5c4:	mov	x0, x19
  45d5c8:	mov	x1, #0x8                   	// #8
  45d5cc:	ldr	x19, [sp, #16]
  45d5d0:	ldp	x29, x30, [sp], #32
  45d5d4:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45d5d8:	stp	x29, x30, [sp, #-64]!
  45d5dc:	mov	x29, sp
  45d5e0:	ldr	x4, [x0]
  45d5e4:	str	xzr, [sp, #40]
  45d5e8:	str	xzr, [sp, #56]
  45d5ec:	add	x3, sp, #0x28
  45d5f0:	ldr	x4, [x4, #48]
  45d5f4:	str	x19, [sp, #16]
  45d5f8:	mov	x19, x2
  45d5fc:	mov	x2, #0x1000000000          	// #68719476736
  45d600:	str	x2, [sp, #48]
  45d604:	ldr	x2, [x19]
  45d608:	blr	x4
  45d60c:	ldr	w0, [sp, #48]
  45d610:	and	w0, w0, #0x6
  45d614:	cmp	w0, #0x6
  45d618:	b.ne	45d634 <_obstack_memory_used@@Base+0xd0c>  // b.any
  45d61c:	ldr	x1, [sp, #40]
  45d620:	str	x1, [x19]
  45d624:	mov	w0, #0x1                   	// #1
  45d628:	ldr	x19, [sp, #16]
  45d62c:	ldp	x29, x30, [sp], #64
  45d630:	ret
  45d634:	mov	w0, #0x0                   	// #0
  45d638:	ldr	x19, [sp, #16]
  45d63c:	ldp	x29, x30, [sp], #64
  45d640:	ret
  45d644:	nop
  45d648:	cmp	x4, x2
  45d64c:	mov	w0, #0x6                   	// #6
  45d650:	csinc	w0, w0, wzr, eq  // eq = none
  45d654:	ret
  45d658:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d65c:	ldr	x1, [x1, #4048]
  45d660:	add	x1, x1, #0x10
  45d664:	str	x1, [x0]
  45d668:	b	45d4f8 <_obstack_memory_used@@Base+0xbd0>
  45d66c:	nop
  45d670:	stp	x29, x30, [sp, #-32]!
  45d674:	mov	x29, sp
  45d678:	str	x19, [sp, #16]
  45d67c:	mov	x19, x0
  45d680:	bl	45d658 <_obstack_memory_used@@Base+0xd30>
  45d684:	mov	x0, x19
  45d688:	mov	x1, #0x10                  	// #16
  45d68c:	ldr	x19, [sp, #16]
  45d690:	ldp	x29, x30, [sp], #32
  45d694:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45d698:	stp	x29, x30, [sp, #-64]!
  45d69c:	cmp	x4, x6
  45d6a0:	mov	x29, sp
  45d6a4:	stp	x19, x20, [sp, #16]
  45d6a8:	mov	x20, x4
  45d6ac:	mov	x19, x7
  45d6b0:	stp	x21, x22, [sp, #32]
  45d6b4:	mov	w21, w2
  45d6b8:	ldr	x22, [x0, #8]
  45d6bc:	str	x23, [sp, #48]
  45d6c0:	mov	x23, x3
  45d6c4:	b.eq	45d714 <_obstack_memory_used@@Base+0xdec>  // b.none
  45d6c8:	ldr	x1, [x3, #8]
  45d6cc:	cmp	x1, x22
  45d6d0:	b.eq	45d6ec <_obstack_memory_used@@Base+0xdc4>  // b.none
  45d6d4:	ldrb	w0, [x22]
  45d6d8:	cmp	w0, #0x2a
  45d6dc:	b.eq	45d6fc <_obstack_memory_used@@Base+0xdd4>  // b.none
  45d6e0:	mov	x0, x22
  45d6e4:	bl	4025d0 <strcmp@plt>
  45d6e8:	cbnz	w0, 45d6fc <_obstack_memory_used@@Base+0xdd4>
  45d6ec:	mov	w0, #0x1                   	// #1
  45d6f0:	str	x20, [x19]
  45d6f4:	str	w21, [x19, #8]
  45d6f8:	str	w0, [x19, #16]
  45d6fc:	mov	w0, #0x0                   	// #0
  45d700:	ldp	x19, x20, [sp, #16]
  45d704:	ldp	x21, x22, [sp, #32]
  45d708:	ldr	x23, [sp, #48]
  45d70c:	ldp	x29, x30, [sp], #64
  45d710:	ret
  45d714:	ldr	x1, [x5, #8]
  45d718:	cmp	x1, x22
  45d71c:	b.eq	45d758 <_obstack_memory_used@@Base+0xe30>  // b.none
  45d720:	ldrb	w0, [x22]
  45d724:	cmp	w0, #0x2a
  45d728:	b.eq	45d748 <_obstack_memory_used@@Base+0xe20>  // b.none
  45d72c:	mov	x0, x22
  45d730:	bl	4025d0 <strcmp@plt>
  45d734:	cbz	w0, 45d758 <_obstack_memory_used@@Base+0xe30>
  45d738:	ldr	x1, [x23, #8]
  45d73c:	cmp	x22, x1
  45d740:	b.ne	45d6e0 <_obstack_memory_used@@Base+0xdb8>  // b.any
  45d744:	b	45d6ec <_obstack_memory_used@@Base+0xdc4>
  45d748:	ldr	x0, [x3, #8]
  45d74c:	cmp	x0, x22
  45d750:	b.ne	45d6fc <_obstack_memory_used@@Base+0xdd4>  // b.any
  45d754:	b	45d6ec <_obstack_memory_used@@Base+0xdc4>
  45d758:	str	w21, [x19, #12]
  45d75c:	mov	w0, #0x0                   	// #0
  45d760:	ldp	x19, x20, [sp, #16]
  45d764:	ldp	x21, x22, [sp, #32]
  45d768:	ldr	x23, [sp, #48]
  45d76c:	ldp	x29, x30, [sp], #64
  45d770:	ret
  45d774:	nop
  45d778:	stp	x29, x30, [sp, #-48]!
  45d77c:	mov	x29, sp
  45d780:	ldr	x0, [x0, #8]
  45d784:	stp	x19, x20, [sp, #16]
  45d788:	mov	x20, x2
  45d78c:	ldr	x1, [x1, #8]
  45d790:	str	x21, [sp, #32]
  45d794:	mov	x19, x3
  45d798:	cmp	x0, x1
  45d79c:	b.eq	45d7b8 <_obstack_memory_used@@Base+0xe90>  // b.none
  45d7a0:	ldrb	w2, [x0]
  45d7a4:	mov	w21, #0x0                   	// #0
  45d7a8:	cmp	w2, #0x2a
  45d7ac:	b.eq	45d7d0 <_obstack_memory_used@@Base+0xea8>  // b.none
  45d7b0:	bl	4025d0 <strcmp@plt>
  45d7b4:	cbnz	w0, 45d7d0 <_obstack_memory_used@@Base+0xea8>
  45d7b8:	mov	x0, #0x10                  	// #16
  45d7bc:	mov	w1, #0x6                   	// #6
  45d7c0:	mov	w21, #0x1                   	// #1
  45d7c4:	str	x20, [x19]
  45d7c8:	str	w1, [x19, #8]
  45d7cc:	str	x0, [x19, #16]
  45d7d0:	mov	w0, w21
  45d7d4:	ldp	x19, x20, [sp, #16]
  45d7d8:	ldr	x21, [sp, #32]
  45d7dc:	ldp	x29, x30, [sp], #48
  45d7e0:	ret
  45d7e4:	nop
  45d7e8:	stp	x29, x30, [sp, #-48]!
  45d7ec:	mov	x29, sp
  45d7f0:	stp	x19, x20, [sp, #16]
  45d7f4:	mov	x20, x0
  45d7f8:	mov	x19, x1
  45d7fc:	ldr	x0, [x0, #8]
  45d800:	ldr	x1, [x1, #8]
  45d804:	cmp	x0, x1
  45d808:	b.eq	45d870 <_obstack_memory_used@@Base+0xf48>  // b.none
  45d80c:	stp	x21, x22, [sp, #32]
  45d810:	mov	x22, x2
  45d814:	mov	w21, w3
  45d818:	ldrb	w2, [x0]
  45d81c:	cmp	w2, #0x2a
  45d820:	b.eq	45d840 <_obstack_memory_used@@Base+0xf18>  // b.none
  45d824:	bl	4025d0 <strcmp@plt>
  45d828:	cbnz	w0, 45d840 <_obstack_memory_used@@Base+0xf18>
  45d82c:	mov	w0, #0x1                   	// #1
  45d830:	ldp	x19, x20, [sp, #16]
  45d834:	ldp	x21, x22, [sp, #32]
  45d838:	ldp	x29, x30, [sp], #48
  45d83c:	ret
  45d840:	cmp	w21, #0x3
  45d844:	b.hi	45d880 <_obstack_memory_used@@Base+0xf58>  // b.pmore
  45d848:	ldr	x3, [x19]
  45d84c:	mov	x2, x22
  45d850:	mov	x1, x20
  45d854:	mov	x0, x19
  45d858:	ldp	x19, x20, [sp, #16]
  45d85c:	ldp	x21, x22, [sp, #32]
  45d860:	ldp	x29, x30, [sp], #48
  45d864:	ldr	x3, [x3, #40]
  45d868:	mov	x16, x3
  45d86c:	br	x16
  45d870:	mov	w0, #0x1                   	// #1
  45d874:	ldp	x19, x20, [sp, #16]
  45d878:	ldp	x29, x30, [sp], #48
  45d87c:	ret
  45d880:	mov	w0, #0x0                   	// #0
  45d884:	ldp	x19, x20, [sp, #16]
  45d888:	ldp	x21, x22, [sp, #32]
  45d88c:	ldp	x29, x30, [sp], #48
  45d890:	ret
  45d894:	nop
  45d898:	b	402640 <free@plt>
  45d89c:	nop
  45d8a0:	b	45d898 <_obstack_memory_used@@Base+0xf70>
  45d8a4:	nop
  45d8a8:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45d8ac:	add	x0, x0, #0x5d8
  45d8b0:	ret
  45d8b4:	nop
  45d8b8:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45d8bc:	add	x0, x0, #0x600
  45d8c0:	ret
  45d8c4:	nop
  45d8c8:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d8cc:	ldr	x1, [x1, #4000]
  45d8d0:	add	x1, x1, #0x10
  45d8d4:	str	x1, [x0]
  45d8d8:	b	45dd48 <_obstack_memory_used@@Base+0x1420>
  45d8dc:	nop
  45d8e0:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d8e4:	ldr	x1, [x1, #3984]
  45d8e8:	add	x1, x1, #0x10
  45d8ec:	str	x1, [x0]
  45d8f0:	b	45dd48 <_obstack_memory_used@@Base+0x1420>
  45d8f4:	nop
  45d8f8:	stp	x29, x30, [sp, #-32]!
  45d8fc:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d900:	mov	x29, sp
  45d904:	ldr	x1, [x1, #4000]
  45d908:	str	x19, [sp, #16]
  45d90c:	mov	x19, x0
  45d910:	add	x1, x1, #0x10
  45d914:	str	x1, [x0]
  45d918:	bl	45dd48 <_obstack_memory_used@@Base+0x1420>
  45d91c:	mov	x0, x19
  45d920:	mov	x1, #0x8                   	// #8
  45d924:	ldr	x19, [sp, #16]
  45d928:	ldp	x29, x30, [sp], #32
  45d92c:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45d930:	stp	x29, x30, [sp, #-32]!
  45d934:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d938:	mov	x29, sp
  45d93c:	ldr	x1, [x1, #3984]
  45d940:	str	x19, [sp, #16]
  45d944:	mov	x19, x0
  45d948:	add	x1, x1, #0x10
  45d94c:	str	x1, [x0]
  45d950:	bl	45dd48 <_obstack_memory_used@@Base+0x1420>
  45d954:	mov	x0, x19
  45d958:	mov	x1, #0x8                   	// #8
  45d95c:	ldr	x19, [sp, #16]
  45d960:	ldp	x29, x30, [sp], #32
  45d964:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45d968:	stp	x29, x30, [sp, #-48]!
  45d96c:	mov	x29, sp
  45d970:	stp	x19, x20, [sp, #16]
  45d974:	adrp	x20, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45d978:	mov	x19, x0
  45d97c:	ldr	x0, [x20, #3880]
  45d980:	str	x21, [sp, #32]
  45d984:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45d988:	cbz	x0, 45d998 <_obstack_memory_used@@Base+0x1070>
  45d98c:	add	x0, x21, #0x8f0
  45d990:	bl	402800 <pthread_mutex_lock@plt>
  45d994:	cbnz	w0, 45da90 <_obstack_memory_used@@Base+0x1168>
  45d998:	add	x0, x21, #0x8f0
  45d99c:	sub	x5, x19, #0x10
  45d9a0:	ldr	x1, [x0, #48]
  45d9a4:	cbz	x1, 45da20 <_obstack_memory_used@@Base+0x10f8>
  45d9a8:	ldur	x6, [x19, #-16]
  45d9ac:	add	x4, x5, x6
  45d9b0:	cmp	x1, x4
  45d9b4:	b.hi	45da20 <_obstack_memory_used@@Base+0x10f8>  // b.pmore
  45d9b8:	ldr	x2, [x1, #8]
  45d9bc:	b.eq	45da74 <_obstack_memory_used@@Base+0x114c>  // b.none
  45d9c0:	add	x0, x0, #0x30
  45d9c4:	cbnz	x2, 45d9e0 <_obstack_memory_used@@Base+0x10b8>
  45d9c8:	b	45d9fc <_obstack_memory_used@@Base+0x10d4>
  45d9cc:	ldr	x3, [x2, #8]
  45d9d0:	add	x0, x1, #0x8
  45d9d4:	cbz	x3, 45da5c <_obstack_memory_used@@Base+0x1134>
  45d9d8:	mov	x1, x2
  45d9dc:	mov	x2, x3
  45d9e0:	cmp	x4, x2
  45d9e4:	b.cc	45d9cc <_obstack_memory_used@@Base+0x10a4>  // b.lo, b.ul, b.last
  45d9e8:	b.ne	45da88 <_obstack_memory_used@@Base+0x1160>  // b.any
  45d9ec:	ldp	x2, x3, [x4]
  45d9f0:	str	x3, [x1, #8]
  45d9f4:	ldr	x1, [x0]
  45d9f8:	add	x6, x6, x2
  45d9fc:	ldr	x2, [x1]
  45da00:	add	x3, x1, x2
  45da04:	cmp	x5, x3
  45da08:	b.eq	45da50 <_obstack_memory_used@@Base+0x1128>  // b.none
  45da0c:	ldr	x1, [x1, #8]
  45da10:	stp	x6, x1, [x19, #-16]
  45da14:	ldr	x0, [x0]
  45da18:	str	x5, [x0, #8]
  45da1c:	b	45da2c <_obstack_memory_used@@Base+0x1104>
  45da20:	add	x0, x21, #0x8f0
  45da24:	stur	x1, [x19, #-8]
  45da28:	str	x5, [x0, #48]
  45da2c:	ldr	x20, [x20, #3880]
  45da30:	cbz	x20, 45da40 <_obstack_memory_used@@Base+0x1118>
  45da34:	add	x0, x21, #0x8f0
  45da38:	bl	402820 <pthread_mutex_unlock@plt>
  45da3c:	cbnz	w0, 45da94 <_obstack_memory_used@@Base+0x116c>
  45da40:	ldp	x19, x20, [sp, #16]
  45da44:	ldr	x21, [sp, #32]
  45da48:	ldp	x29, x30, [sp], #48
  45da4c:	ret
  45da50:	add	x6, x2, x6
  45da54:	str	x6, [x1]
  45da58:	b	45da2c <_obstack_memory_used@@Base+0x1104>
  45da5c:	ldr	x1, [x1, #8]
  45da60:	ldr	x2, [x1]
  45da64:	add	x3, x1, x2
  45da68:	cmp	x5, x3
  45da6c:	b.ne	45da0c <_obstack_memory_used@@Base+0x10e4>  // b.any
  45da70:	b	45da50 <_obstack_memory_used@@Base+0x1128>
  45da74:	ldr	x1, [x1]
  45da78:	add	x6, x1, x6
  45da7c:	stp	x6, x2, [x19, #-16]
  45da80:	str	x5, [x0, #48]
  45da84:	b	45da2c <_obstack_memory_used@@Base+0x1104>
  45da88:	ldr	x1, [x0]
  45da8c:	b	45d9fc <_obstack_memory_used@@Base+0x10d4>
  45da90:	bl	40291c <ferror@plt+0x9c>
  45da94:	mov	x0, #0x8                   	// #8
  45da98:	bl	45dc10 <_obstack_memory_used@@Base+0x12e8>
  45da9c:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45daa0:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45daa4:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45daa8:	ldr	x3, [x3, #3984]
  45daac:	ldr	x2, [x2, #4064]
  45dab0:	add	x3, x3, #0x10
  45dab4:	ldr	x1, [x1, #4040]
  45dab8:	str	x3, [x0]
  45dabc:	bl	45ea28 <_obstack_memory_used@@Base+0x2100>
  45dac0:	cmn	x1, #0x1
  45dac4:	b.ne	45dacc <_obstack_memory_used@@Base+0x11a4>  // b.any
  45dac8:	bl	45e7c8 <_obstack_memory_used@@Base+0x1ea0>
  45dacc:	bl	46b528 <_obstack_memory_used@@Base+0xec00>
  45dad0:	stp	x29, x30, [sp, #-48]!
  45dad4:	mov	x29, sp
  45dad8:	stp	x19, x20, [sp, #16]
  45dadc:	adrp	x20, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45dae0:	mov	x19, x0
  45dae4:	ldr	x0, [x20, #3880]
  45dae8:	str	x21, [sp, #32]
  45daec:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45daf0:	cbz	x0, 45db00 <_obstack_memory_used@@Base+0x11d8>
  45daf4:	add	x0, x21, #0x8f0
  45daf8:	bl	402800 <pthread_mutex_lock@plt>
  45dafc:	cbnz	w0, 45db9c <_obstack_memory_used@@Base+0x1274>
  45db00:	add	x3, x21, #0x8f0
  45db04:	adds	x0, x19, #0x10
  45db08:	mov	x19, #0x10                  	// #16
  45db0c:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  45db10:	add	x0, x0, #0xf
  45db14:	ldr	x19, [x3, #48]
  45db18:	and	x0, x0, #0xfffffffffffffff0
  45db1c:	cbz	x19, 45db68 <_obstack_memory_used@@Base+0x1240>
  45db20:	add	x3, x3, #0x30
  45db24:	b	45db30 <_obstack_memory_used@@Base+0x1208>
  45db28:	add	x3, x2, #0x8
  45db2c:	cbz	x19, 45db68 <_obstack_memory_used@@Base+0x1240>
  45db30:	mov	x2, x19
  45db34:	ldp	x1, x19, [x19]
  45db38:	cmp	x0, x1
  45db3c:	b.hi	45db28 <_obstack_memory_used@@Base+0x1200>  // b.pmore
  45db40:	sub	x1, x1, x0
  45db44:	cmp	x1, #0xf
  45db48:	b.ls	45db90 <_obstack_memory_used@@Base+0x1268>  // b.plast
  45db4c:	add	x4, x2, x0
  45db50:	str	x19, [x4, #8]
  45db54:	str	x1, [x2, x0]
  45db58:	ldr	x2, [x3]
  45db5c:	add	x19, x2, #0x10
  45db60:	str	x0, [x2]
  45db64:	str	x4, [x3]
  45db68:	ldr	x20, [x20, #3880]
  45db6c:	cbz	x20, 45db7c <_obstack_memory_used@@Base+0x1254>
  45db70:	add	x0, x21, #0x8f0
  45db74:	bl	402820 <pthread_mutex_unlock@plt>
  45db78:	cbnz	w0, 45dba0 <_obstack_memory_used@@Base+0x1278>
  45db7c:	mov	x0, x19
  45db80:	ldp	x19, x20, [sp, #16]
  45db84:	ldr	x21, [sp, #32]
  45db88:	ldp	x29, x30, [sp], #48
  45db8c:	ret
  45db90:	str	x19, [x3]
  45db94:	add	x19, x2, #0x10
  45db98:	b	45db68 <_obstack_memory_used@@Base+0x1240>
  45db9c:	bl	40291c <ferror@plt+0x9c>
  45dba0:	mov	x0, #0x8                   	// #8
  45dba4:	bl	45dc10 <_obstack_memory_used@@Base+0x12e8>
  45dba8:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45dbac:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45dbb0:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45dbb4:	ldr	x3, [x3, #3984]
  45dbb8:	ldr	x2, [x2, #4064]
  45dbbc:	add	x3, x3, #0x10
  45dbc0:	ldr	x1, [x1, #4040]
  45dbc4:	str	x3, [x0]
  45dbc8:	bl	45ea28 <_obstack_memory_used@@Base+0x2100>
  45dbcc:	cmn	x1, #0x1
  45dbd0:	b.ne	45dbd8 <_obstack_memory_used@@Base+0x12b0>  // b.any
  45dbd4:	bl	45e7c8 <_obstack_memory_used@@Base+0x1ea0>
  45dbd8:	bl	46b528 <_obstack_memory_used@@Base+0xec00>
  45dbdc:	nop
  45dbe0:	stp	x29, x30, [sp, #-32]!
  45dbe4:	mov	x29, sp
  45dbe8:	str	x19, [sp, #16]
  45dbec:	adrp	x19, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45dbf0:	add	x19, x19, #0x8f0
  45dbf4:	ldr	x0, [x19, #56]
  45dbf8:	cbz	x0, 45dc04 <_obstack_memory_used@@Base+0x12dc>
  45dbfc:	bl	402640 <free@plt>
  45dc00:	str	xzr, [x19, #56]
  45dc04:	ldr	x19, [sp, #16]
  45dc08:	ldp	x29, x30, [sp], #32
  45dc0c:	ret
  45dc10:	stp	x29, x30, [sp, #-32]!
  45dc14:	mov	x29, sp
  45dc18:	str	x19, [sp, #16]
  45dc1c:	add	x19, x0, #0x80
  45dc20:	mov	x0, x19
  45dc24:	bl	4023d0 <malloc@plt>
  45dc28:	mov	x1, x0
  45dc2c:	cbz	x0, 45dc60 <_obstack_memory_used@@Base+0x1338>
  45dc30:	stp	xzr, xzr, [x1]
  45dc34:	add	x0, x1, #0x80
  45dc38:	stp	xzr, xzr, [x1, #16]
  45dc3c:	stp	xzr, xzr, [x1, #32]
  45dc40:	stp	xzr, xzr, [x1, #48]
  45dc44:	stp	xzr, xzr, [x1, #64]
  45dc48:	stp	xzr, xzr, [x1, #80]
  45dc4c:	stp	xzr, xzr, [x1, #96]
  45dc50:	stp	xzr, xzr, [x1, #112]
  45dc54:	ldr	x19, [sp, #16]
  45dc58:	ldp	x29, x30, [sp], #32
  45dc5c:	ret
  45dc60:	mov	x0, x19
  45dc64:	bl	45dad0 <_obstack_memory_used@@Base+0x11a8>
  45dc68:	mov	x1, x0
  45dc6c:	cbnz	x0, 45dc30 <_obstack_memory_used@@Base+0x1308>
  45dc70:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45dc74:	nop
  45dc78:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45dc7c:	add	x1, x1, #0x8f0
  45dc80:	sub	x0, x0, #0x80
  45dc84:	ldr	x2, [x1, #56]
  45dc88:	cmp	x0, x2
  45dc8c:	b.ls	45dcb4 <_obstack_memory_used@@Base+0x138c>  // b.plast
  45dc90:	ldr	x1, [x1, #64]
  45dc94:	add	x2, x2, x1
  45dc98:	cmp	x0, x2
  45dc9c:	b.cs	45dcb4 <_obstack_memory_used@@Base+0x138c>  // b.hs, b.nlast
  45dca0:	stp	x29, x30, [sp, #-16]!
  45dca4:	mov	x29, sp
  45dca8:	bl	45d968 <_obstack_memory_used@@Base+0x1040>
  45dcac:	ldp	x29, x30, [sp], #16
  45dcb0:	ret
  45dcb4:	b	402640 <free@plt>
  45dcb8:	stp	x29, x30, [sp, #-16]!
  45dcbc:	mov	x0, #0x70                  	// #112
  45dcc0:	mov	x29, sp
  45dcc4:	bl	4023d0 <malloc@plt>
  45dcc8:	cbz	x0, 45dcf0 <_obstack_memory_used@@Base+0x13c8>
  45dccc:	stp	xzr, xzr, [x0]
  45dcd0:	stp	xzr, xzr, [x0, #16]
  45dcd4:	stp	xzr, xzr, [x0, #32]
  45dcd8:	stp	xzr, xzr, [x0, #48]
  45dcdc:	stp	xzr, xzr, [x0, #64]
  45dce0:	stp	xzr, xzr, [x0, #80]
  45dce4:	stp	xzr, xzr, [x0, #96]
  45dce8:	ldp	x29, x30, [sp], #16
  45dcec:	ret
  45dcf0:	mov	x0, #0x70                  	// #112
  45dcf4:	bl	45dad0 <_obstack_memory_used@@Base+0x11a8>
  45dcf8:	cbnz	x0, 45dccc <_obstack_memory_used@@Base+0x13a4>
  45dcfc:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45dd00:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45dd04:	add	x2, x2, #0x8f0
  45dd08:	mov	x1, x0
  45dd0c:	ldr	x3, [x2, #56]
  45dd10:	cmp	x0, x3
  45dd14:	b.ls	45dd3c <_obstack_memory_used@@Base+0x1414>  // b.plast
  45dd18:	ldr	x2, [x2, #64]
  45dd1c:	add	x3, x3, x2
  45dd20:	cmp	x0, x3
  45dd24:	b.cs	45dd3c <_obstack_memory_used@@Base+0x1414>  // b.hs, b.nlast
  45dd28:	stp	x29, x30, [sp, #-16]!
  45dd2c:	mov	x29, sp
  45dd30:	bl	45d968 <_obstack_memory_used@@Base+0x1040>
  45dd34:	ldp	x29, x30, [sp], #16
  45dd38:	ret
  45dd3c:	mov	x0, x1
  45dd40:	b	402640 <free@plt>
  45dd44:	nop
  45dd48:	ret
  45dd4c:	nop
  45dd50:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45dd54:	ldr	x1, [x1, #3944]
  45dd58:	add	x1, x1, #0x10
  45dd5c:	str	x1, [x0]
  45dd60:	b	45dd48 <_obstack_memory_used@@Base+0x1420>
  45dd64:	nop
  45dd68:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45dd6c:	add	x0, x0, #0x680
  45dd70:	ret
  45dd74:	nop
  45dd78:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45dd7c:	add	x0, x0, #0x690
  45dd80:	ret
  45dd84:	nop
  45dd88:	stp	x29, x30, [sp, #-32]!
  45dd8c:	mov	x29, sp
  45dd90:	str	x19, [sp, #16]
  45dd94:	mov	x19, x0
  45dd98:	bl	45dd48 <_obstack_memory_used@@Base+0x1420>
  45dd9c:	mov	x0, x19
  45dda0:	mov	x1, #0x8                   	// #8
  45dda4:	ldr	x19, [sp, #16]
  45dda8:	ldp	x29, x30, [sp], #32
  45ddac:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45ddb0:	stp	x29, x30, [sp, #-32]!
  45ddb4:	mov	x29, sp
  45ddb8:	str	x19, [sp, #16]
  45ddbc:	mov	x19, x0
  45ddc0:	bl	45dd50 <_obstack_memory_used@@Base+0x1428>
  45ddc4:	mov	x0, x19
  45ddc8:	mov	x1, #0x8                   	// #8
  45ddcc:	ldr	x19, [sp, #16]
  45ddd0:	ldp	x29, x30, [sp], #32
  45ddd4:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45ddd8:	ret
  45dddc:	nop
  45dde0:	stp	x29, x30, [sp, #-32]!
  45dde4:	mov	x29, sp
  45dde8:	str	x19, [sp, #16]
  45ddec:	mov	x19, x0
  45ddf0:	bl	45ddd8 <_obstack_memory_used@@Base+0x14b0>
  45ddf4:	mov	x0, x19
  45ddf8:	mov	x1, #0x8                   	// #8
  45ddfc:	ldr	x19, [sp, #16]
  45de00:	ldp	x29, x30, [sp], #32
  45de04:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45de08:	ret
  45de0c:	nop
  45de10:	stp	x29, x30, [sp, #-32]!
  45de14:	mov	x29, sp
  45de18:	str	x19, [sp, #16]
  45de1c:	mov	x19, x0
  45de20:	bl	45de08 <_obstack_memory_used@@Base+0x14e0>
  45de24:	mov	x0, x19
  45de28:	mov	x1, #0x8                   	// #8
  45de2c:	ldr	x19, [sp, #16]
  45de30:	ldp	x29, x30, [sp], #32
  45de34:	b	45cfe0 <_obstack_memory_used@@Base+0x6b8>
  45de38:	ret
  45de3c:	nop
  45de40:	b	45dd68 <_obstack_memory_used@@Base+0x1440>
  45de44:	nop
  45de48:	ret
  45de4c:	nop
  45de50:	b	45dd78 <_obstack_memory_used@@Base+0x1450>
  45de54:	nop
  45de58:	stp	x29, x30, [sp, #-64]!
  45de5c:	mov	x29, sp
  45de60:	stp	x19, x20, [sp, #16]
  45de64:	mov	x19, x1
  45de68:	mov	x20, x0
  45de6c:	mov	x0, x1
  45de70:	ldr	x1, [x1]
  45de74:	ldr	x1, [x1, #16]
  45de78:	str	x21, [sp, #32]
  45de7c:	mov	x21, x2
  45de80:	ldr	x2, [x2]
  45de84:	str	x2, [sp, #56]
  45de88:	blr	x1
  45de8c:	tst	w0, #0xff
  45de90:	b.eq	45dea0 <_obstack_memory_used@@Base+0x1578>  // b.none
  45de94:	ldr	x0, [sp, #56]
  45de98:	ldr	x0, [x0]
  45de9c:	str	x0, [sp, #56]
  45dea0:	ldr	x4, [x20]
  45dea4:	mov	x1, x19
  45dea8:	mov	x0, x20
  45deac:	add	x2, sp, #0x38
  45deb0:	mov	w3, #0x1                   	// #1
  45deb4:	ldr	x4, [x4, #32]
  45deb8:	blr	x4
  45debc:	tst	w0, #0xff
  45dec0:	b.eq	45decc <_obstack_memory_used@@Base+0x15a4>  // b.none
  45dec4:	ldr	x1, [sp, #56]
  45dec8:	str	x1, [x21]
  45decc:	ldp	x19, x20, [sp, #16]
  45ded0:	ldr	x21, [sp, #32]
  45ded4:	ldp	x29, x30, [sp], #64
  45ded8:	ret
  45dedc:	nop
  45dee0:	and	w5, w0, #0xff
  45dee4:	cmp	w5, #0x50
  45dee8:	b.eq	45e000 <_obstack_memory_used@@Base+0x16d8>  // b.none
  45deec:	and	w4, w5, #0xf
  45def0:	cmp	w4, #0x4
  45def4:	b.eq	45df10 <_obstack_memory_used@@Base+0x15e8>  // b.none
  45def8:	b.ls	45df24 <_obstack_memory_used@@Base+0x15fc>  // b.plast
  45defc:	cmp	w4, #0xb
  45df00:	b.eq	45e024 <_obstack_memory_used@@Base+0x16fc>  // b.none
  45df04:	b.ls	45df80 <_obstack_memory_used@@Base+0x1658>  // b.plast
  45df08:	cmp	w4, #0xc
  45df0c:	b.ne	45e034 <_obstack_memory_used@@Base+0x170c>  // b.any
  45df10:	mov	x0, x2
  45df14:	ldr	x4, [x0], #8
  45df18:	cbnz	x4, 45dfe0 <_obstack_memory_used@@Base+0x16b8>
  45df1c:	str	x4, [x3]
  45df20:	ret
  45df24:	cmp	w4, #0x2
  45df28:	b.eq	45e014 <_obstack_memory_used@@Base+0x16ec>  // b.none
  45df2c:	b.ls	45df48 <_obstack_memory_used@@Base+0x1620>  // b.plast
  45df30:	cmp	w4, #0x3
  45df34:	b.ne	45e034 <_obstack_memory_used@@Base+0x170c>  // b.any
  45df38:	mov	x0, x2
  45df3c:	ldr	w4, [x0], #4
  45df40:	cbz	x4, 45df1c <_obstack_memory_used@@Base+0x15f4>
  45df44:	b	45dfe0 <_obstack_memory_used@@Base+0x16b8>
  45df48:	cbz	w4, 45df10 <_obstack_memory_used@@Base+0x15e8>
  45df4c:	cmp	w4, #0x1
  45df50:	b.ne	45e034 <_obstack_memory_used@@Base+0x170c>  // b.any
  45df54:	mov	x0, x2
  45df58:	mov	x4, #0x0                   	// #0
  45df5c:	mov	w7, #0x0                   	// #0
  45df60:	ldrb	w8, [x0], #1
  45df64:	and	x6, x8, #0x7f
  45df68:	lsl	x6, x6, x7
  45df6c:	add	w7, w7, #0x7
  45df70:	orr	x4, x4, x6
  45df74:	tbnz	w8, #7, 45df60 <_obstack_memory_used@@Base+0x1638>
  45df78:	cbz	x4, 45df1c <_obstack_memory_used@@Base+0x15f4>
  45df7c:	b	45dfe0 <_obstack_memory_used@@Base+0x16b8>
  45df80:	cmp	w4, #0x9
  45df84:	b.eq	45dfa0 <_obstack_memory_used@@Base+0x1678>  // b.none
  45df88:	cmp	w4, #0xa
  45df8c:	b.ne	45e034 <_obstack_memory_used@@Base+0x170c>  // b.any
  45df90:	mov	x0, x2
  45df94:	ldrsh	x4, [x0], #2
  45df98:	cbz	x4, 45df1c <_obstack_memory_used@@Base+0x15f4>
  45df9c:	b	45dfe0 <_obstack_memory_used@@Base+0x16b8>
  45dfa0:	mov	x0, x2
  45dfa4:	mov	x4, #0x0                   	// #0
  45dfa8:	mov	w7, #0x0                   	// #0
  45dfac:	ldrb	w8, [x0], #1
  45dfb0:	and	x6, x8, #0x7f
  45dfb4:	lsl	x6, x6, x7
  45dfb8:	add	w7, w7, #0x7
  45dfbc:	orr	x4, x4, x6
  45dfc0:	tbnz	w8, #7, 45dfac <_obstack_memory_used@@Base+0x1684>
  45dfc4:	cmp	w7, #0x3f
  45dfc8:	b.hi	45df18 <_obstack_memory_used@@Base+0x15f0>  // b.pmore
  45dfcc:	tbz	w8, #6, 45df18 <_obstack_memory_used@@Base+0x15f0>
  45dfd0:	mov	x6, #0xffffffffffffffff    	// #-1
  45dfd4:	lsl	x7, x6, x7
  45dfd8:	orr	x4, x4, x7
  45dfdc:	nop
  45dfe0:	and	w6, w5, #0x70
  45dfe4:	cmp	w6, #0x10
  45dfe8:	csel	x1, x2, x1, eq  // eq = none
  45dfec:	add	x4, x4, x1
  45dff0:	tbz	w5, #7, 45df1c <_obstack_memory_used@@Base+0x15f4>
  45dff4:	ldr	x4, [x4]
  45dff8:	str	x4, [x3]
  45dffc:	ret
  45e000:	add	x0, x2, #0x7
  45e004:	and	x0, x0, #0xfffffffffffffff8
  45e008:	ldr	x4, [x0], #8
  45e00c:	str	x4, [x3]
  45e010:	ret
  45e014:	mov	x0, x2
  45e018:	ldrh	w4, [x0], #2
  45e01c:	cbz	x4, 45df1c <_obstack_memory_used@@Base+0x15f4>
  45e020:	b	45dfe0 <_obstack_memory_used@@Base+0x16b8>
  45e024:	mov	x0, x2
  45e028:	ldrsw	x4, [x0], #4
  45e02c:	cbz	x4, 45df1c <_obstack_memory_used@@Base+0x15f4>
  45e030:	b	45dfe0 <_obstack_memory_used@@Base+0x16b8>
  45e034:	stp	x29, x30, [sp, #-16]!
  45e038:	mov	x29, sp
  45e03c:	bl	402540 <abort@plt>
  45e040:	stp	x29, x30, [sp, #-32]!
  45e044:	mov	x3, x0
  45e048:	mov	x29, sp
  45e04c:	ldrb	w0, [x0, #40]
  45e050:	cmp	w0, #0xff
  45e054:	b.eq	45e0e0 <_obstack_memory_used@@Base+0x17b8>  // b.none
  45e058:	and	w4, w0, #0x7
  45e05c:	cmp	w4, #0x2
  45e060:	b.eq	45e0c0 <_obstack_memory_used@@Base+0x1798>  // b.none
  45e064:	b.ls	45e090 <_obstack_memory_used@@Base+0x1768>  // b.plast
  45e068:	cmp	w4, #0x3
  45e06c:	neg	x2, x1, lsl #2
  45e070:	b.ne	45e0b4 <_obstack_memory_used@@Base+0x178c>  // b.any
  45e074:	ldp	x1, x4, [x3, #16]
  45e078:	add	x3, sp, #0x18
  45e07c:	add	x2, x4, x2
  45e080:	bl	45dee0 <_obstack_memory_used@@Base+0x15b8>
  45e084:	ldr	x0, [sp, #24]
  45e088:	ldp	x29, x30, [sp], #32
  45e08c:	ret
  45e090:	cbnz	w4, 45e0bc <_obstack_memory_used@@Base+0x1794>
  45e094:	neg	x2, x1, lsl #3
  45e098:	ldp	x1, x4, [x3, #16]
  45e09c:	add	x3, sp, #0x18
  45e0a0:	add	x2, x4, x2
  45e0a4:	bl	45dee0 <_obstack_memory_used@@Base+0x15b8>
  45e0a8:	ldr	x0, [sp, #24]
  45e0ac:	ldp	x29, x30, [sp], #32
  45e0b0:	ret
  45e0b4:	cmp	w4, #0x4
  45e0b8:	b.eq	45e094 <_obstack_memory_used@@Base+0x176c>  // b.none
  45e0bc:	bl	402540 <abort@plt>
  45e0c0:	neg	x2, x1, lsl #1
  45e0c4:	ldp	x1, x4, [x3, #16]
  45e0c8:	add	x3, sp, #0x18
  45e0cc:	add	x2, x4, x2
  45e0d0:	bl	45dee0 <_obstack_memory_used@@Base+0x15b8>
  45e0d4:	ldr	x0, [sp, #24]
  45e0d8:	ldp	x29, x30, [sp], #32
  45e0dc:	ret
  45e0e0:	ldp	x1, x4, [x3, #16]
  45e0e4:	mov	x2, #0x0                   	// #0
  45e0e8:	add	x3, sp, #0x18
  45e0ec:	add	x2, x4, x2
  45e0f0:	bl	45dee0 <_obstack_memory_used@@Base+0x15b8>
  45e0f4:	ldr	x0, [sp, #24]
  45e0f8:	ldp	x29, x30, [sp], #32
  45e0fc:	ret
  45e100:	stp	x29, x30, [sp, #-64]!
  45e104:	mov	x29, sp
  45e108:	stp	x21, x22, [sp, #32]
  45e10c:	mov	x22, x0
  45e110:	mvn	x0, x3
  45e114:	stp	x19, x20, [sp, #16]
  45e118:	add	x21, sp, #0x38
  45e11c:	mov	x20, x1
  45e120:	ldr	x19, [x22, #24]
  45e124:	str	x2, [sp, #56]
  45e128:	add	x19, x19, x0
  45e12c:	nop
  45e130:	mov	x1, #0x0                   	// #0
  45e134:	mov	w3, #0x0                   	// #0
  45e138:	ldrb	w4, [x19], #1
  45e13c:	and	x2, x4, #0x7f
  45e140:	lsl	x2, x2, x3
  45e144:	add	w3, w3, #0x7
  45e148:	orr	x1, x1, x2
  45e14c:	tbnz	w4, #7, 45e138 <_obstack_memory_used@@Base+0x1810>
  45e150:	cbz	x1, 45e180 <_obstack_memory_used@@Base+0x1858>
  45e154:	mov	x0, x22
  45e158:	bl	45e040 <_obstack_memory_used@@Base+0x1718>
  45e15c:	mov	x2, x21
  45e160:	mov	x1, x20
  45e164:	bl	45de58 <_obstack_memory_used@@Base+0x1530>
  45e168:	ands	w0, w0, #0xff
  45e16c:	b.eq	45e130 <_obstack_memory_used@@Base+0x1808>  // b.none
  45e170:	ldp	x19, x20, [sp, #16]
  45e174:	ldp	x21, x22, [sp, #32]
  45e178:	ldp	x29, x30, [sp], #64
  45e17c:	ret
  45e180:	mov	w0, #0x0                   	// #0
  45e184:	ldp	x19, x20, [sp, #16]
  45e188:	ldp	x21, x22, [sp, #32]
  45e18c:	ldp	x29, x30, [sp], #64
  45e190:	ret
  45e194:	nop
  45e198:	and	w3, w0, #0xff
  45e19c:	cmp	w3, #0xff
  45e1a0:	b.eq	45e1f0 <_obstack_memory_used@@Base+0x18c8>  // b.none
  45e1a4:	and	w2, w3, #0x70
  45e1a8:	mov	x0, x1
  45e1ac:	cmp	w2, #0x30
  45e1b0:	b.eq	45e1f8 <_obstack_memory_used@@Base+0x18d0>  // b.none
  45e1b4:	b.hi	45e1c4 <_obstack_memory_used@@Base+0x189c>  // b.pmore
  45e1b8:	cmp	w2, #0x20
  45e1bc:	b.ne	45e1d0 <_obstack_memory_used@@Base+0x18a8>  // b.any
  45e1c0:	b	46b178 <_obstack_memory_used@@Base+0xe850>
  45e1c4:	cmp	w2, #0x40
  45e1c8:	b.ne	45e1e8 <_obstack_memory_used@@Base+0x18c0>  // b.any
  45e1cc:	b	46b140 <_obstack_memory_used@@Base+0xe818>
  45e1d0:	b.hi	45e1dc <_obstack_memory_used@@Base+0x18b4>  // b.pmore
  45e1d4:	tst	w3, #0x60
  45e1d8:	b.eq	45e1f0 <_obstack_memory_used@@Base+0x18c8>  // b.none
  45e1dc:	stp	x29, x30, [sp, #-16]!
  45e1e0:	mov	x29, sp
  45e1e4:	bl	402540 <abort@plt>
  45e1e8:	cmp	w2, #0x50
  45e1ec:	b.ne	45e1dc <_obstack_memory_used@@Base+0x18b4>  // b.any
  45e1f0:	mov	x0, #0x0                   	// #0
  45e1f4:	ret
  45e1f8:	b	46b170 <_obstack_memory_used@@Base+0xe848>
  45e1fc:	nop
  45e200:	stp	x29, x30, [sp, #-48]!
  45e204:	mov	x29, sp
  45e208:	stp	x19, x20, [sp, #16]
  45e20c:	mov	x19, x1
  45e210:	mov	x20, x2
  45e214:	stp	x21, x22, [sp, #32]
  45e218:	mov	x1, #0x0                   	// #0
  45e21c:	mov	x21, x0
  45e220:	cbz	x0, 45e22c <_obstack_memory_used@@Base+0x1904>
  45e224:	bl	46b140 <_obstack_memory_used@@Base+0xe818>
  45e228:	mov	x1, x0
  45e22c:	str	x1, [x20]
  45e230:	ldrb	w22, [x19], #1
  45e234:	cmp	w22, #0xff
  45e238:	b.ne	45e2c0 <_obstack_memory_used@@Base+0x1998>  // b.any
  45e23c:	mov	x0, x19
  45e240:	str	x1, [x20, #8]
  45e244:	ldrb	w1, [x0], #1
  45e248:	strb	w1, [x20, #40]
  45e24c:	cmp	w1, #0xff
  45e250:	b.eq	45e2f8 <_obstack_memory_used@@Base+0x19d0>  // b.none
  45e254:	mov	x5, #0x0                   	// #0
  45e258:	mov	w3, #0x0                   	// #0
  45e25c:	nop
  45e260:	ldrb	w4, [x0], #1
  45e264:	and	x1, x4, #0x7f
  45e268:	lsl	x1, x1, x3
  45e26c:	add	w3, w3, #0x7
  45e270:	orr	x5, x5, x1
  45e274:	tbnz	w4, #7, 45e260 <_obstack_memory_used@@Base+0x1938>
  45e278:	add	x5, x0, x5
  45e27c:	str	x5, [x20, #24]
  45e280:	ldrb	w1, [x0], #1
  45e284:	mov	x5, #0x0                   	// #0
  45e288:	mov	w3, #0x0                   	// #0
  45e28c:	strb	w1, [x20, #41]
  45e290:	ldrb	w4, [x0], #1
  45e294:	and	x1, x4, #0x7f
  45e298:	lsl	x1, x1, x3
  45e29c:	add	w3, w3, #0x7
  45e2a0:	orr	x5, x5, x1
  45e2a4:	tbnz	w4, #7, 45e290 <_obstack_memory_used@@Base+0x1968>
  45e2a8:	add	x5, x0, x5
  45e2ac:	ldp	x21, x22, [sp, #32]
  45e2b0:	str	x5, [x20, #32]
  45e2b4:	ldp	x19, x20, [sp, #16]
  45e2b8:	ldp	x29, x30, [sp], #48
  45e2bc:	ret
  45e2c0:	mov	x1, x21
  45e2c4:	mov	w0, w22
  45e2c8:	bl	45e198 <_obstack_memory_used@@Base+0x1870>
  45e2cc:	mov	x1, x0
  45e2d0:	mov	x2, x19
  45e2d4:	mov	w0, w22
  45e2d8:	add	x3, x20, #0x8
  45e2dc:	bl	45dee0 <_obstack_memory_used@@Base+0x15b8>
  45e2e0:	mov	x19, x0
  45e2e4:	mov	x0, x19
  45e2e8:	ldrb	w1, [x0], #1
  45e2ec:	strb	w1, [x20, #40]
  45e2f0:	cmp	w1, #0xff
  45e2f4:	b.ne	45e254 <_obstack_memory_used@@Base+0x192c>  // b.any
  45e2f8:	str	xzr, [x20, #24]
  45e2fc:	b	45e280 <_obstack_memory_used@@Base+0x1958>
  45e300:	stp	x29, x30, [sp, #-240]!
  45e304:	cmp	w0, #0x1
  45e308:	mov	x29, sp
  45e30c:	str	wzr, [sp, #156]
  45e310:	str	xzr, [sp, #160]
  45e314:	b.ne	45e378 <_obstack_memory_used@@Base+0x1a50>  // b.any
  45e318:	stp	x19, x20, [sp, #16]
  45e31c:	mov	x20, #0xd500                	// #54528
  45e320:	movk	x20, #0xbcd4, lsl #16
  45e324:	movk	x20, #0xaabc, lsl #32
  45e328:	stp	x21, x22, [sp, #32]
  45e32c:	movk	x20, #0xb8b1, lsl #48
  45e330:	add	x0, x2, x20
  45e334:	stp	x23, x24, [sp, #48]
  45e338:	cmp	x0, #0x1
  45e33c:	stp	x25, x26, [sp, #64]
  45e340:	mov	w22, w1
  45e344:	mov	x21, x3
  45e348:	stp	x27, x28, [sp, #80]
  45e34c:	mov	x19, x4
  45e350:	str	x0, [sp, #104]
  45e354:	cset	w0, ls  // ls = plast
  45e358:	str	w0, [sp, #128]
  45e35c:	cmp	w1, #0x6
  45e360:	csel	w27, w0, wzr, eq  // eq = none
  45e364:	cbz	w27, 45e384 <_obstack_memory_used@@Base+0x1a5c>
  45e368:	ldur	x26, [x3, #-16]
  45e36c:	cbnz	x26, 45e4f8 <_obstack_memory_used@@Base+0x1bd0>
  45e370:	mov	x0, x21
  45e374:	bl	45eb68 <_obstack_memory_used@@Base+0x2240>
  45e378:	mov	w0, #0x3                   	// #3
  45e37c:	ldp	x29, x30, [sp], #240
  45e380:	ret
  45e384:	mov	x0, x4
  45e388:	bl	46b138 <_obstack_memory_used@@Base+0xe810>
  45e38c:	str	x0, [sp, #112]
  45e390:	cbz	x0, 45e55c <_obstack_memory_used@@Base+0x1c34>
  45e394:	ldr	x1, [sp, #112]
  45e398:	add	x0, sp, #0xc0
  45e39c:	mov	x2, x0
  45e3a0:	str	x0, [sp, #120]
  45e3a4:	mov	x0, x19
  45e3a8:	bl	45e200 <_obstack_memory_used@@Base+0x18d8>
  45e3ac:	mov	x20, x0
  45e3b0:	ldrb	w0, [sp, #232]
  45e3b4:	mov	x1, x19
  45e3b8:	bl	45e198 <_obstack_memory_used@@Base+0x1870>
  45e3bc:	mov	x3, x0
  45e3c0:	add	x1, sp, #0x9c
  45e3c4:	mov	x0, x19
  45e3c8:	str	x3, [sp, #208]
  45e3cc:	bl	46b118 <_obstack_memory_used@@Base+0xe7f0>
  45e3d0:	ldr	w3, [sp, #156]
  45e3d4:	ldr	x1, [sp, #224]
  45e3d8:	cmp	w3, #0x0
  45e3dc:	cset	x3, eq  // eq = none
  45e3e0:	sub	x23, x0, x3
  45e3e4:	cmp	x20, x1
  45e3e8:	b.cs	45e4c0 <_obstack_memory_used@@Base+0x1b98>  // b.hs, b.nlast
  45e3ec:	add	x26, sp, #0xa8
  45e3f0:	add	x25, sp, #0xb0
  45e3f4:	add	x24, sp, #0xb8
  45e3f8:	ldrb	w28, [sp, #233]
  45e3fc:	mov	x1, #0x0                   	// #0
  45e400:	mov	w0, w28
  45e404:	bl	45e198 <_obstack_memory_used@@Base+0x1870>
  45e408:	mov	x2, x20
  45e40c:	mov	x3, x26
  45e410:	mov	x1, x0
  45e414:	mov	w0, w28
  45e418:	bl	45dee0 <_obstack_memory_used@@Base+0x15b8>
  45e41c:	ldrb	w20, [sp, #233]
  45e420:	mov	x28, x0
  45e424:	mov	x1, #0x0                   	// #0
  45e428:	mov	w0, w20
  45e42c:	bl	45e198 <_obstack_memory_used@@Base+0x1870>
  45e430:	mov	x2, x28
  45e434:	mov	x3, x25
  45e438:	mov	x1, x0
  45e43c:	mov	w0, w20
  45e440:	bl	45dee0 <_obstack_memory_used@@Base+0x15b8>
  45e444:	ldrb	w20, [sp, #233]
  45e448:	mov	x28, x0
  45e44c:	mov	x1, #0x0                   	// #0
  45e450:	mov	w0, w20
  45e454:	bl	45e198 <_obstack_memory_used@@Base+0x1870>
  45e458:	mov	x3, x24
  45e45c:	mov	x1, x0
  45e460:	mov	x2, x28
  45e464:	mov	w0, w20
  45e468:	bl	45dee0 <_obstack_memory_used@@Base+0x15b8>
  45e46c:	mov	x20, x0
  45e470:	mov	w3, #0x0                   	// #0
  45e474:	mov	x0, #0x0                   	// #0
  45e478:	ldrb	w4, [x20], #1
  45e47c:	and	x1, x4, #0x7f
  45e480:	lsl	x1, x1, x3
  45e484:	add	w3, w3, #0x7
  45e488:	orr	x0, x0, x1
  45e48c:	tbnz	w4, #7, 45e478 <_obstack_memory_used@@Base+0x1b50>
  45e490:	ldr	x3, [sp, #168]
  45e494:	ldr	x1, [sp, #192]
  45e498:	add	x1, x1, x3
  45e49c:	cmp	x1, x23
  45e4a0:	b.hi	45e4c0 <_obstack_memory_used@@Base+0x1b98>  // b.pmore
  45e4a4:	ldr	x3, [sp, #176]
  45e4a8:	add	x1, x1, x3
  45e4ac:	cmp	x1, x23
  45e4b0:	b.hi	45e53c <_obstack_memory_used@@Base+0x1c14>  // b.pmore
  45e4b4:	ldr	x0, [sp, #224]
  45e4b8:	cmp	x0, x20
  45e4bc:	b.hi	45e3f8 <_obstack_memory_used@@Base+0x1ad0>  // b.pmore
  45e4c0:	tbz	w22, #0, 45e57c <_obstack_memory_used@@Base+0x1c54>
  45e4c4:	mov	w24, #0x0                   	// #0
  45e4c8:	mov	x26, #0x0                   	// #0
  45e4cc:	mov	x23, #0x0                   	// #0
  45e4d0:	ldr	x0, [sp, #104]
  45e4d4:	cmp	x0, #0x1
  45e4d8:	mov	w0, #0x6                   	// #6
  45e4dc:	b.hi	45e560 <_obstack_memory_used@@Base+0x1c38>  // b.pmore
  45e4e0:	ldr	x2, [sp, #112]
  45e4e4:	stur	w24, [x21, #-36]
  45e4e8:	ldr	x1, [sp, #160]
  45e4ec:	stp	x23, x2, [x21, #-32]
  45e4f0:	stp	x26, x1, [x21, #-16]
  45e4f4:	b	45e560 <_obstack_memory_used@@Base+0x1c38>
  45e4f8:	ldur	w24, [x3, #-36]
  45e4fc:	ldur	x0, [x3, #-24]
  45e500:	str	x0, [sp, #112]
  45e504:	tbnz	w24, #31, 45e590 <_obstack_memory_used@@Base+0x1c68>
  45e508:	mov	x2, x21
  45e50c:	mov	x0, x19
  45e510:	mov	w1, #0x0                   	// #0
  45e514:	bl	46b0b8 <_obstack_memory_used@@Base+0xe790>
  45e518:	sxtw	x2, w24
  45e51c:	mov	x0, x19
  45e520:	mov	w1, #0x1                   	// #1
  45e524:	bl	46b0b8 <_obstack_memory_used@@Base+0xe790>
  45e528:	mov	x0, x19
  45e52c:	mov	x1, x26
  45e530:	bl	46b130 <_obstack_memory_used@@Base+0xe808>
  45e534:	mov	w0, #0x7                   	// #7
  45e538:	b	45e560 <_obstack_memory_used@@Base+0x1c38>
  45e53c:	ldr	x26, [sp, #184]
  45e540:	cbz	x26, 45e55c <_obstack_memory_used@@Base+0x1c34>
  45e544:	ldr	x1, [sp, #200]
  45e548:	add	x26, x26, x1
  45e54c:	cbnz	x0, 45e5c8 <_obstack_memory_used@@Base+0x1ca0>
  45e550:	cbz	x26, 45e55c <_obstack_memory_used@@Base+0x1c34>
  45e554:	and	w24, w22, #0x1
  45e558:	tbz	w22, #0, 45e508 <_obstack_memory_used@@Base+0x1be0>
  45e55c:	mov	w0, #0x8                   	// #8
  45e560:	ldp	x19, x20, [sp, #16]
  45e564:	ldp	x21, x22, [sp, #32]
  45e568:	ldp	x23, x24, [sp, #48]
  45e56c:	ldp	x25, x26, [sp, #64]
  45e570:	ldp	x27, x28, [sp, #80]
  45e574:	ldp	x29, x30, [sp], #240
  45e578:	ret
  45e57c:	tbnz	w22, #3, 45e58c <_obstack_memory_used@@Base+0x1c64>
  45e580:	ldr	x0, [sp, #104]
  45e584:	cmp	x0, #0x1
  45e588:	b.ls	45e370 <_obstack_memory_used@@Base+0x1a48>  // b.plast
  45e58c:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45e590:	ldr	x1, [sp, #112]
  45e594:	add	x2, sp, #0xc0
  45e598:	mov	x0, x19
  45e59c:	bl	45e200 <_obstack_memory_used@@Base+0x18d8>
  45e5a0:	ldrb	w0, [sp, #232]
  45e5a4:	mov	x1, x19
  45e5a8:	bl	45e198 <_obstack_memory_used@@Base+0x1870>
  45e5ac:	mov	x2, x0
  45e5b0:	ldrb	w0, [sp, #232]
  45e5b4:	mov	x1, x19
  45e5b8:	str	x2, [sp, #208]
  45e5bc:	bl	45e198 <_obstack_memory_used@@Base+0x1870>
  45e5c0:	stur	x0, [x21, #-16]
  45e5c4:	b	45e508 <_obstack_memory_used@@Base+0x1be0>
  45e5c8:	ldr	x4, [sp, #224]
  45e5cc:	sub	x0, x0, #0x1
  45e5d0:	add	x23, x4, x0
  45e5d4:	cbz	x26, 45e55c <_obstack_memory_used@@Base+0x1c34>
  45e5d8:	cbz	x23, 45e554 <_obstack_memory_used@@Base+0x1c2c>
  45e5dc:	and	w0, w22, #0x8
  45e5e0:	str	w0, [sp, #132]
  45e5e4:	tbnz	w22, #3, 45e794 <_obstack_memory_used@@Base+0x1e6c>
  45e5e8:	ldr	x0, [sp, #104]
  45e5ec:	adrp	x6, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e5f0:	cmp	x0, #0x1
  45e5f4:	ldr	x6, [x6, #3976]
  45e5f8:	b.ls	45e7a0 <_obstack_memory_used@@Base+0x1e78>  // b.plast
  45e5fc:	add	x28, sp, #0xa0
  45e600:	mov	x5, #0x1                   	// #1
  45e604:	nop
  45e608:	mov	x25, x23
  45e60c:	mov	x24, #0x0                   	// #0
  45e610:	mov	w1, #0x0                   	// #0
  45e614:	nop
  45e618:	ldrb	w2, [x25], #1
  45e61c:	and	x0, x2, #0x7f
  45e620:	lsl	x0, x0, x1
  45e624:	add	w1, w1, #0x7
  45e628:	orr	x24, x24, x0
  45e62c:	tbnz	w2, #7, 45e618 <_obstack_memory_used@@Base+0x1cf0>
  45e630:	cmp	w1, #0x3f
  45e634:	b.hi	45e64c <_obstack_memory_used@@Base+0x1d24>  // b.pmore
  45e638:	lsl	x0, x5, x1
  45e63c:	neg	x0, x0
  45e640:	orr	x0, x24, x0
  45e644:	tst	x2, #0x40
  45e648:	csel	x24, x0, x24, ne  // ne = any
  45e64c:	mov	x8, x25
  45e650:	mov	x20, #0x0                   	// #0
  45e654:	mov	w1, #0x0                   	// #0
  45e658:	ldrb	w2, [x8], #1
  45e65c:	and	x0, x2, #0x7f
  45e660:	lsl	x0, x0, x1
  45e664:	add	w1, w1, #0x7
  45e668:	orr	x20, x20, x0
  45e66c:	tbnz	w2, #7, 45e658 <_obstack_memory_used@@Base+0x1d30>
  45e670:	cmp	w1, #0x3f
  45e674:	b.hi	45e68c <_obstack_memory_used@@Base+0x1d64>  // b.pmore
  45e678:	lsl	x0, x5, x1
  45e67c:	neg	x0, x0
  45e680:	orr	x0, x20, x0
  45e684:	tst	x2, #0x40
  45e688:	csel	x20, x0, x20, ne  // ne = any
  45e68c:	cmp	x24, #0x0
  45e690:	cbz	x24, 45e754 <_obstack_memory_used@@Base+0x1e2c>
  45e694:	b.gt	45e6f8 <_obstack_memory_used@@Base+0x1dd0>
  45e698:	ldr	w0, [sp, #132]
  45e69c:	cmp	w0, #0x0
  45e6a0:	ldr	w0, [sp, #128]
  45e6a4:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  45e6a8:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  45e6ac:	b.ne	45e75c <_obstack_memory_used@@Base+0x1e34>  // b.any
  45e6b0:	ldr	x0, [sp, #216]
  45e6b4:	mvn	x8, x24
  45e6b8:	mov	x9, #0x0                   	// #0
  45e6bc:	mov	w1, #0x0                   	// #0
  45e6c0:	add	x8, x0, x8
  45e6c4:	nop
  45e6c8:	ldrb	w2, [x8], #1
  45e6cc:	and	x0, x2, #0x7f
  45e6d0:	lsl	x0, x0, x1
  45e6d4:	add	w1, w1, #0x7
  45e6d8:	orr	x9, x9, x0
  45e6dc:	tbnz	w2, #7, 45e6c8 <_obstack_memory_used@@Base+0x1da0>
  45e6e0:	cmp	x9, #0x0
  45e6e4:	cset	w0, eq  // eq = none
  45e6e8:	cbnz	w0, 45e734 <_obstack_memory_used@@Base+0x1e0c>
  45e6ec:	cbz	x20, 45e78c <_obstack_memory_used@@Base+0x1e64>
  45e6f0:	add	x23, x25, x20
  45e6f4:	b	45e608 <_obstack_memory_used@@Base+0x1ce0>
  45e6f8:	ldr	x0, [sp, #120]
  45e6fc:	mov	x1, x24
  45e700:	str	x6, [sp, #136]
  45e704:	bl	45e040 <_obstack_memory_used@@Base+0x1718>
  45e708:	cbz	x0, 45e734 <_obstack_memory_used@@Base+0x1e0c>
  45e70c:	ldr	x6, [sp, #136]
  45e710:	mov	x5, #0x1                   	// #1
  45e714:	cbz	x6, 45e6ec <_obstack_memory_used@@Base+0x1dc4>
  45e718:	mov	x1, x6
  45e71c:	mov	x2, x28
  45e720:	bl	45de58 <_obstack_memory_used@@Base+0x1530>
  45e724:	tst	w0, #0xff
  45e728:	mov	x5, #0x1                   	// #1
  45e72c:	ldr	x6, [sp, #136]
  45e730:	b.eq	45e6ec <_obstack_memory_used@@Base+0x1dc4>  // b.none
  45e734:	tbnz	w22, #0, 45e4d0 <_obstack_memory_used@@Base+0x1ba8>
  45e738:	ldr	w0, [sp, #132]
  45e73c:	cbnz	w0, 45e74c <_obstack_memory_used@@Base+0x1e24>
  45e740:	ldr	x0, [sp, #104]
  45e744:	cmp	x0, #0x1
  45e748:	b.ls	45e504 <_obstack_memory_used@@Base+0x1bdc>  // b.plast
  45e74c:	tbz	w24, #31, 45e508 <_obstack_memory_used@@Base+0x1be0>
  45e750:	bl	45e950 <_obstack_memory_used@@Base+0x2028>
  45e754:	mov	w27, #0x1                   	// #1
  45e758:	b	45e6ec <_obstack_memory_used@@Base+0x1dc4>
  45e75c:	ldr	x0, [sp, #120]
  45e760:	mov	x1, x6
  45e764:	ldr	x2, [sp, #160]
  45e768:	mov	x3, x24
  45e76c:	str	x6, [sp, #136]
  45e770:	bl	45e100 <_obstack_memory_used@@Base+0x17d8>
  45e774:	and	w0, w0, #0xff
  45e778:	eor	w0, w0, #0x1
  45e77c:	mov	x5, #0x1                   	// #1
  45e780:	ldr	x6, [sp, #136]
  45e784:	cbz	w0, 45e6ec <_obstack_memory_used@@Base+0x1dc4>
  45e788:	b	45e734 <_obstack_memory_used@@Base+0x1e0c>
  45e78c:	cbnz	w27, 45e554 <_obstack_memory_used@@Base+0x1c2c>
  45e790:	b	45e55c <_obstack_memory_used@@Base+0x1c34>
  45e794:	adrp	x6, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e798:	ldr	x6, [x6, #3952]
  45e79c:	b	45e5fc <_obstack_memory_used@@Base+0x1cd4>
  45e7a0:	mov	x0, x21
  45e7a4:	ldr	x1, [x0], #32
  45e7a8:	tbz	w1, #0, 45e7b0 <_obstack_memory_used@@Base+0x1e88>
  45e7ac:	ldur	x0, [x21, #-80]
  45e7b0:	ldur	x6, [x0, #-112]
  45e7b4:	str	x0, [sp, #160]
  45e7b8:	b	45e5fc <_obstack_memory_used@@Base+0x1cd4>
  45e7bc:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45e7c0:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45e7c4:	nop
  45e7c8:	stp	x29, x30, [sp, #-112]!
  45e7cc:	mov	x29, sp
  45e7d0:	stp	x19, x20, [sp, #16]
  45e7d4:	mov	x19, x0
  45e7d8:	stp	x21, x22, [sp, #32]
  45e7dc:	str	x23, [sp, #48]
  45e7e0:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45e7e4:	ldp	x0, x21, [x19, #-64]
  45e7e8:	ldur	x1, [x19, #-16]
  45e7ec:	str	x1, [sp, #80]
  45e7f0:	ldur	w20, [x19, #-36]
  45e7f4:	ldur	x19, [x19, #-24]
  45e7f8:	bl	45e910 <_obstack_memory_used@@Base+0x1fe8>
  45e7fc:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45e800:	bl	45ed28 <_obstack_memory_used@@Base+0x2400>
  45e804:	ldr	x22, [x0]
  45e808:	ldr	x0, [x22, #80]
  45e80c:	tbz	w0, #0, 45e890 <_obstack_memory_used@@Base+0x1f68>
  45e810:	ldr	x22, [x22]
  45e814:	add	x23, sp, #0x40
  45e818:	mov	x1, x19
  45e81c:	mov	x2, x23
  45e820:	mov	x0, #0x0                   	// #0
  45e824:	bl	45e200 <_obstack_memory_used@@Base+0x18d8>
  45e828:	ldur	x1, [x22, #-112]
  45e82c:	sxtw	x20, w20
  45e830:	mov	x3, x20
  45e834:	mov	x2, x22
  45e838:	mov	x0, x23
  45e83c:	bl	45e100 <_obstack_memory_used@@Base+0x17d8>
  45e840:	tst	w0, #0xff
  45e844:	b.ne	45e8ac <_obstack_memory_used@@Base+0x1f84>  // b.any
  45e848:	adrp	x19, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e84c:	mov	x3, x20
  45e850:	mov	x0, x23
  45e854:	mov	x2, #0x0                   	// #0
  45e858:	ldr	x1, [x19, #4024]
  45e85c:	bl	45e100 <_obstack_memory_used@@Base+0x17d8>
  45e860:	tst	w0, #0xff
  45e864:	b.eq	45e8b0 <_obstack_memory_used@@Base+0x1f88>  // b.none
  45e868:	mov	x0, #0x8                   	// #8
  45e86c:	bl	45dc10 <_obstack_memory_used@@Base+0x12e8>
  45e870:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e874:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e878:	ldr	x1, [x19, #4024]
  45e87c:	ldr	x3, [x3, #3944]
  45e880:	ldr	x2, [x2, #3936]
  45e884:	add	x3, x3, #0x10
  45e888:	str	x3, [x0]
  45e88c:	bl	45ea28 <_obstack_memory_used@@Base+0x2100>
  45e890:	add	x22, x22, #0x70
  45e894:	b	45e814 <_obstack_memory_used@@Base+0x1eec>
  45e898:	mov	x19, x0
  45e89c:	bl	45ec58 <_obstack_memory_used@@Base+0x2330>
  45e8a0:	bl	45ec58 <_obstack_memory_used@@Base+0x2330>
  45e8a4:	mov	x0, x19
  45e8a8:	bl	46b528 <_obstack_memory_used@@Base+0xec00>
  45e8ac:	bl	45ea88 <_obstack_memory_used@@Base+0x2160>
  45e8b0:	mov	x0, x21
  45e8b4:	bl	45e8b8 <_obstack_memory_used@@Base+0x1f90>
  45e8b8:	stp	x29, x30, [sp, #-16]!
  45e8bc:	mov	x29, sp
  45e8c0:	blr	x0
  45e8c4:	bl	402540 <abort@plt>
  45e8c8:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45e8cc:	bl	402540 <abort@plt>
  45e8d0:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e8d4:	mov	x2, x0
  45e8d8:	ldr	x1, [x1, #3888]
  45e8dc:	ldaxr	x0, [x1]
  45e8e0:	stlxr	w3, x2, [x1]
  45e8e4:	cbnz	w3, 45e8dc <_obstack_memory_used@@Base+0x1fb4>
  45e8e8:	ret
  45e8ec:	nop
  45e8f0:	adrp	x0, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e8f4:	ldr	x0, [x0, #3888]
  45e8f8:	ldar	x0, [x0]
  45e8fc:	ret
  45e900:	stp	x29, x30, [sp, #-16]!
  45e904:	mov	x29, sp
  45e908:	bl	45e8f0 <_obstack_memory_used@@Base+0x1fc8>
  45e90c:	bl	45e8b8 <_obstack_memory_used@@Base+0x1f90>
  45e910:	stp	x29, x30, [sp, #-16]!
  45e914:	mov	x29, sp
  45e918:	blr	x0
  45e91c:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45e920:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e924:	mov	x2, x0
  45e928:	ldr	x1, [x1, #3968]
  45e92c:	ldaxr	x0, [x1]
  45e930:	stlxr	w3, x2, [x1]
  45e934:	cbnz	w3, 45e92c <_obstack_memory_used@@Base+0x2004>
  45e938:	ret
  45e93c:	nop
  45e940:	adrp	x0, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45e944:	ldr	x0, [x0, #3968]
  45e948:	ldar	x0, [x0]
  45e94c:	ret
  45e950:	stp	x29, x30, [sp, #-16]!
  45e954:	mov	x29, sp
  45e958:	bl	45e940 <_obstack_memory_used@@Base+0x2018>
  45e95c:	bl	45e910 <_obstack_memory_used@@Base+0x1fe8>
  45e960:	stp	x29, x30, [sp, #-32]!
  45e964:	cmp	w0, #0x1
  45e968:	mov	x29, sp
  45e96c:	b.hi	45e9b8 <_obstack_memory_used@@Base+0x2090>  // b.pmore
  45e970:	sub	x0, x1, #0x60
  45e974:	ldaxr	w2, [x0]
  45e978:	sub	w2, w2, #0x1
  45e97c:	stlxr	w3, w2, [x0]
  45e980:	cbnz	w3, 45e974 <_obstack_memory_used@@Base+0x204c>
  45e984:	cbnz	w2, 45e9b0 <_obstack_memory_used@@Base+0x2088>
  45e988:	ldur	x2, [x1, #-72]
  45e98c:	str	x19, [sp, #16]
  45e990:	add	x19, x1, #0x20
  45e994:	cbz	x2, 45e9a0 <_obstack_memory_used@@Base+0x2078>
  45e998:	mov	x0, x19
  45e99c:	blr	x2
  45e9a0:	mov	x0, x19
  45e9a4:	ldr	x19, [sp, #16]
  45e9a8:	ldp	x29, x30, [sp], #32
  45e9ac:	b	45dc78 <_obstack_memory_used@@Base+0x1350>
  45e9b0:	ldp	x29, x30, [sp], #32
  45e9b4:	ret
  45e9b8:	ldur	x0, [x1, #-56]
  45e9bc:	str	x19, [sp, #16]
  45e9c0:	bl	45e8b8 <_obstack_memory_used@@Base+0x1f90>
  45e9c4:	nop
  45e9c8:	stp	x29, x30, [sp, #-32]!
  45e9cc:	mov	x29, sp
  45e9d0:	stp	x19, x20, [sp, #16]
  45e9d4:	mov	x19, x0
  45e9d8:	sub	x20, x0, #0x80
  45e9dc:	stur	wzr, [x0, #-128]
  45e9e0:	stp	x1, x2, [x0, #-112]
  45e9e4:	bl	45e940 <_obstack_memory_used@@Base+0x2018>
  45e9e8:	stur	x0, [x19, #-96]
  45e9ec:	bl	45e8f0 <_obstack_memory_used@@Base+0x1fc8>
  45e9f0:	mov	x3, x0
  45e9f4:	mov	x2, #0x2b00                	// #11008
  45e9f8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x16d8>
  45e9fc:	movk	x2, #0x432b, lsl #16
  45ea00:	add	x1, x1, #0x960
  45ea04:	movk	x2, #0x5543, lsl #32
  45ea08:	stur	x3, [x19, #-88]
  45ea0c:	movk	x2, #0x474e, lsl #48
  45ea10:	stp	x2, x1, [x19, #-32]
  45ea14:	mov	x0, x20
  45ea18:	ldp	x19, x20, [sp, #16]
  45ea1c:	ldp	x29, x30, [sp], #32
  45ea20:	ret
  45ea24:	nop
  45ea28:	stp	x29, x30, [sp, #-48]!
  45ea2c:	mov	x29, sp
  45ea30:	stp	x19, x20, [sp, #16]
  45ea34:	mov	x19, x0
  45ea38:	mov	x20, x1
  45ea3c:	str	x21, [sp, #32]
  45ea40:	mov	x21, x2
  45ea44:	bl	45ed50 <_obstack_memory_used@@Base+0x2428>
  45ea48:	mov	x3, x0
  45ea4c:	mov	x2, x21
  45ea50:	mov	x1, x20
  45ea54:	mov	x0, x19
  45ea58:	ldr	w4, [x3, #8]
  45ea5c:	add	w4, w4, #0x1
  45ea60:	str	w4, [x3, #8]
  45ea64:	bl	45e9c8 <_obstack_memory_used@@Base+0x20a0>
  45ea68:	mov	x19, x0
  45ea6c:	mov	w0, #0x1                   	// #1
  45ea70:	str	w0, [x19], #96
  45ea74:	mov	x0, x19
  45ea78:	bl	46b298 <_obstack_memory_used@@Base+0xe970>
  45ea7c:	mov	x0, x19
  45ea80:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45ea84:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45ea88:	stp	x29, x30, [sp, #-32]!
  45ea8c:	mov	x29, sp
  45ea90:	str	x19, [sp, #16]
  45ea94:	bl	45ed50 <_obstack_memory_used@@Base+0x2428>
  45ea98:	ldr	w2, [x0, #8]
  45ea9c:	ldr	x1, [x0]
  45eaa0:	add	w2, w2, #0x1
  45eaa4:	str	w2, [x0, #8]
  45eaa8:	cbz	x1, 45eae4 <_obstack_memory_used@@Base+0x21bc>
  45eaac:	mov	x3, #0xd500                	// #54528
  45eab0:	ldr	x2, [x1, #80]
  45eab4:	movk	x3, #0xbcd4, lsl #16
  45eab8:	movk	x3, #0xaabc, lsl #32
  45eabc:	movk	x3, #0xb8b1, lsl #48
  45eac0:	add	x2, x2, x3
  45eac4:	cmp	x2, #0x1
  45eac8:	b.ls	45eae8 <_obstack_memory_used@@Base+0x21c0>  // b.plast
  45eacc:	str	xzr, [x0]
  45ead0:	add	x19, x1, #0x50
  45ead4:	mov	x0, x19
  45ead8:	bl	46b638 <_obstack_memory_used@@Base+0xed10>
  45eadc:	mov	x0, x19
  45eae0:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45eae4:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45eae8:	ldr	w0, [x1, #40]
  45eaec:	neg	w0, w0
  45eaf0:	str	w0, [x1, #40]
  45eaf4:	b	45ead0 <_obstack_memory_used@@Base+0x21a8>
  45eaf8:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45eafc:	mov	x2, x0
  45eb00:	add	x1, x1, #0x938
  45eb04:	ldaxr	x0, [x1]
  45eb08:	stlxr	w3, x2, [x1]
  45eb0c:	cbnz	w3, 45eb04 <_obstack_memory_used@@Base+0x21dc>
  45eb10:	ret
  45eb14:	nop
  45eb18:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45eb1c:	add	x0, x0, #0x938
  45eb20:	ldar	x0, [x0]
  45eb24:	ret
  45eb28:	stp	x29, x30, [sp, #-16]!
  45eb2c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45eb30:	add	x1, x1, #0x720
  45eb34:	mov	x2, #0x1b                  	// #27
  45eb38:	mov	x29, sp
  45eb3c:	mov	w0, #0x2                   	// #2
  45eb40:	bl	402520 <write@plt>
  45eb44:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45eb48:	stp	x29, x30, [sp, #-16]!
  45eb4c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45eb50:	add	x1, x1, #0x740
  45eb54:	mov	x2, #0x1e                  	// #30
  45eb58:	mov	x29, sp
  45eb5c:	mov	w0, #0x2                   	// #2
  45eb60:	bl	402520 <write@plt>
  45eb64:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45eb68:	stp	x29, x30, [sp, #-32]!
  45eb6c:	mov	x29, sp
  45eb70:	str	x19, [sp, #16]
  45eb74:	cbz	x0, 45eba0 <_obstack_memory_used@@Base+0x2278>
  45eb78:	mov	x19, x0
  45eb7c:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45eb80:	mov	x1, #0xd500                	// #54528
  45eb84:	movk	x1, #0xbcd4, lsl #16
  45eb88:	ldr	x0, [x19]
  45eb8c:	movk	x1, #0xaabc, lsl #32
  45eb90:	movk	x1, #0xb8b1, lsl #48
  45eb94:	add	x0, x0, x1
  45eb98:	cmp	x0, #0x1
  45eb9c:	b.ls	45eba4 <_obstack_memory_used@@Base+0x227c>  // b.plast
  45eba0:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45eba4:	ldur	x0, [x19, #-56]
  45eba8:	bl	45e8b8 <_obstack_memory_used@@Base+0x1f90>
  45ebac:	nop
  45ebb0:	ldur	x0, [x0, #-8]
  45ebb4:	ret
  45ebb8:	stp	x29, x30, [sp, #-32]!
  45ebbc:	mov	x29, sp
  45ebc0:	str	x19, [sp, #16]
  45ebc4:	mov	x19, x0
  45ebc8:	bl	45ed50 <_obstack_memory_used@@Base+0x2428>
  45ebcc:	mov	x1, x0
  45ebd0:	mov	x2, x19
  45ebd4:	mov	x4, #0xd500                	// #54528
  45ebd8:	movk	x4, #0xbcd4, lsl #16
  45ebdc:	movk	x4, #0xaabc, lsl #32
  45ebe0:	ldr	x3, [x2], #-80
  45ebe4:	movk	x4, #0xb8b1, lsl #48
  45ebe8:	ldr	x0, [x0]
  45ebec:	add	x3, x3, x4
  45ebf0:	cmp	x3, #0x1
  45ebf4:	b.ls	45ec0c <_obstack_memory_used@@Base+0x22e4>  // b.plast
  45ebf8:	cbnz	x0, 45ec50 <_obstack_memory_used@@Base+0x2328>
  45ebfc:	str	x2, [x1]
  45ec00:	ldr	x19, [sp, #16]
  45ec04:	ldp	x29, x30, [sp], #32
  45ec08:	ret
  45ec0c:	ldur	w3, [x19, #-40]
  45ec10:	mov	w5, #0x1                   	// #1
  45ec14:	ldr	w4, [x1, #8]
  45ec18:	cmp	w3, #0x0
  45ec1c:	sub	w5, w5, w3
  45ec20:	csinc	w3, w5, w3, lt  // lt = tstop
  45ec24:	stur	w3, [x19, #-40]
  45ec28:	sub	w3, w4, #0x1
  45ec2c:	str	w3, [x1, #8]
  45ec30:	cmp	x0, x2
  45ec34:	b.eq	45ec40 <_obstack_memory_used@@Base+0x2318>  // b.none
  45ec38:	stur	x0, [x19, #-48]
  45ec3c:	str	x2, [x1]
  45ec40:	ldur	x0, [x19, #-8]
  45ec44:	ldr	x19, [sp, #16]
  45ec48:	ldp	x29, x30, [sp], #32
  45ec4c:	ret
  45ec50:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45ec54:	nop
  45ec58:	stp	x29, x30, [sp, #-16]!
  45ec5c:	mov	x29, sp
  45ec60:	bl	45ed28 <_obstack_memory_used@@Base+0x2400>
  45ec64:	ldr	x1, [x0]
  45ec68:	cbz	x1, 45eca8 <_obstack_memory_used@@Base+0x2380>
  45ec6c:	mov	x3, #0xd500                	// #54528
  45ec70:	ldr	x2, [x1, #80]
  45ec74:	movk	x3, #0xbcd4, lsl #16
  45ec78:	movk	x3, #0xaabc, lsl #32
  45ec7c:	movk	x3, #0xb8b1, lsl #48
  45ec80:	add	x2, x2, x3
  45ec84:	cmp	x2, #0x1
  45ec88:	b.hi	45ecc8 <_obstack_memory_used@@Base+0x23a0>  // b.pmore
  45ec8c:	ldr	w2, [x1, #40]
  45ec90:	tbnz	w2, #31, 45ecb0 <_obstack_memory_used@@Base+0x2388>
  45ec94:	subs	w2, w2, #0x1
  45ec98:	b.eq	45ecd8 <_obstack_memory_used@@Base+0x23b0>  // b.none
  45ec9c:	cmn	w2, #0x1
  45eca0:	b.eq	45ecec <_obstack_memory_used@@Base+0x23c4>  // b.none
  45eca4:	str	w2, [x1, #40]
  45eca8:	ldp	x29, x30, [sp], #16
  45ecac:	ret
  45ecb0:	adds	w2, w2, #0x1
  45ecb4:	b.ne	45eca4 <_obstack_memory_used@@Base+0x237c>  // b.any
  45ecb8:	ldr	x3, [x1, #32]
  45ecbc:	str	x3, [x0]
  45ecc0:	str	w2, [x1, #40]
  45ecc4:	b	45eca8 <_obstack_memory_used@@Base+0x2380>
  45ecc8:	str	xzr, [x0]
  45eccc:	add	x0, x1, #0x50
  45ecd0:	ldp	x29, x30, [sp], #16
  45ecd4:	b	46b740 <_obstack_memory_used@@Base+0xee18>
  45ecd8:	ldr	x2, [x1, #32]
  45ecdc:	str	x2, [x0]
  45ece0:	add	x0, x1, #0x50
  45ece4:	ldp	x29, x30, [sp], #16
  45ece8:	b	46b740 <_obstack_memory_used@@Base+0xee18>
  45ecec:	bl	45e900 <_obstack_memory_used@@Base+0x1fd8>
  45ecf0:	stp	x29, x30, [sp, #-16]!
  45ecf4:	mov	x29, sp
  45ecf8:	bl	45ed50 <_obstack_memory_used@@Base+0x2428>
  45ecfc:	ldr	w0, [x0, #8]
  45ed00:	ldp	x29, x30, [sp], #16
  45ed04:	cmp	w0, #0x0
  45ed08:	cset	w0, ne  // ne = any
  45ed0c:	ret
  45ed10:	stp	x29, x30, [sp, #-16]!
  45ed14:	mov	x29, sp
  45ed18:	bl	45ed50 <_obstack_memory_used@@Base+0x2428>
  45ed1c:	ldr	w0, [x0, #8]
  45ed20:	ldp	x29, x30, [sp], #16
  45ed24:	ret
  45ed28:	stp	x29, x30, [sp, #-16]!
  45ed2c:	mrs	x1, tpidr_el0
  45ed30:	movz	x0, #0x0, lsl #16
  45ed34:	movk	x0, #0x10
  45ed38:	nop
  45ed3c:	nop
  45ed40:	mov	x29, sp
  45ed44:	add	x0, x1, x0
  45ed48:	ldp	x29, x30, [sp], #16
  45ed4c:	ret
  45ed50:	stp	x29, x30, [sp, #-16]!
  45ed54:	mrs	x1, tpidr_el0
  45ed58:	movz	x0, #0x0, lsl #16
  45ed5c:	movk	x0, #0x10
  45ed60:	nop
  45ed64:	nop
  45ed68:	mov	x29, sp
  45ed6c:	add	x0, x1, x0
  45ed70:	ldp	x29, x30, [sp], #16
  45ed74:	ret
  45ed78:	stp	x29, x30, [sp, #-64]!
  45ed7c:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  45ed80:	mov	x29, sp
  45ed84:	ldrb	w1, [x0, #2368]
  45ed88:	cbnz	w1, 45ee70 <_obstack_memory_used@@Base+0x2548>
  45ed8c:	mov	w1, #0x1                   	// #1
  45ed90:	strb	w1, [x0, #2368]
  45ed94:	bl	468eb0 <_obstack_memory_used@@Base+0xc588>
  45ed98:	cbz	x0, 45ee44 <_obstack_memory_used@@Base+0x251c>
  45ed9c:	stp	x19, x20, [sp, #16]
  45eda0:	mov	w4, #0xffffffff            	// #-1
  45eda4:	add	x3, sp, #0x3c
  45eda8:	ldr	x19, [x0, #8]
  45edac:	stp	x21, x22, [sp, #32]
  45edb0:	adrp	x21, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45edb4:	mov	x2, #0x0                   	// #0
  45edb8:	mov	x1, #0x0                   	// #0
  45edbc:	ldrb	w0, [x19]
  45edc0:	str	w4, [sp, #60]
  45edc4:	cmp	w0, #0x2a
  45edc8:	cinc	x19, x19, eq  // eq = none
  45edcc:	mov	x0, x19
  45edd0:	bl	468ce8 <_obstack_memory_used@@Base+0xc3c0>
  45edd4:	mov	x20, x0
  45edd8:	ldr	x22, [x21, #3912]
  45eddc:	mov	x1, #0x1                   	// #1
  45ede0:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45ede4:	mov	x2, #0x30                  	// #48
  45ede8:	add	x0, x0, #0x780
  45edec:	ldr	x3, [x22]
  45edf0:	bl	402680 <fwrite@plt>
  45edf4:	ldr	w0, [sp, #60]
  45edf8:	ldr	x1, [x22]
  45edfc:	cbz	w0, 45ee38 <_obstack_memory_used@@Base+0x2510>
  45ee00:	mov	x0, x19
  45ee04:	bl	402280 <fputs@plt>
  45ee08:	ldr	x3, [x21, #3912]
  45ee0c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x106d8>
  45ee10:	mov	x2, #0x2                   	// #2
  45ee14:	add	x0, x0, #0x7d8
  45ee18:	mov	x1, #0x1                   	// #1
  45ee1c:	ldr	x3, [x3]
  45ee20:	bl	402680 <fwrite@plt>
  45ee24:	ldr	w0, [sp, #60]
  45ee28:	cbnz	w0, 45ee34 <_obstack_memory_used@@Base+0x250c>
  45ee2c:	mov	x0, x20
  45ee30:	bl	402640 <free@plt>
  45ee34:	bl	45ea88 <_obstack_memory_used@@Base+0x2160>
  45ee38:	mov	x0, x20
  45ee3c:	bl	402280 <fputs@plt>
  45ee40:	b	45ee08 <_obstack_memory_used@@Base+0x24e0>
  45ee44:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45ee48:	mov	x2, #0x2d                  	// #45
  45ee4c:	mov	x1, #0x1                   	// #1
  45ee50:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45ee54:	ldr	x3, [x3, #3912]
  45ee58:	add	x0, x0, #0x7b8
  45ee5c:	ldr	x3, [x3]
  45ee60:	bl	402680 <fwrite@plt>
  45ee64:	stp	x19, x20, [sp, #16]
  45ee68:	stp	x21, x22, [sp, #32]
  45ee6c:	bl	402540 <abort@plt>
  45ee70:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x406d8>
  45ee74:	mov	x2, #0x1d                  	// #29
  45ee78:	mov	x1, #0x1                   	// #1
  45ee7c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45ee80:	ldr	x3, [x3, #3912]
  45ee84:	add	x0, x0, #0x760
  45ee88:	stp	x19, x20, [sp, #16]
  45ee8c:	ldr	x3, [x3]
  45ee90:	stp	x21, x22, [sp, #32]
  45ee94:	bl	402680 <fwrite@plt>
  45ee98:	bl	402540 <abort@plt>
  45ee9c:	mov	x19, x1
  45eea0:	cmp	x1, #0x1
  45eea4:	b.ne	45ef00 <_obstack_memory_used@@Base+0x25d8>  // b.any
  45eea8:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45eeac:	ldr	x1, [x0]
  45eeb0:	ldr	x1, [x1, #16]
  45eeb4:	blr	x1
  45eeb8:	mov	x20, x0
  45eebc:	ldr	x3, [x21, #3912]
  45eec0:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45eec4:	mov	x1, x19
  45eec8:	add	x0, x0, #0x7e8
  45eecc:	mov	x2, #0xb                   	// #11
  45eed0:	ldr	x3, [x3]
  45eed4:	bl	402680 <fwrite@plt>
  45eed8:	ldr	x1, [x21, #3912]
  45eedc:	mov	x0, x20
  45eee0:	ldr	x1, [x1]
  45eee4:	bl	402280 <fputs@plt>
  45eee8:	ldr	x21, [x21, #3912]
  45eeec:	mov	w0, #0xa                   	// #10
  45eef0:	ldr	x1, [x21]
  45eef4:	bl	402340 <fputc@plt>
  45eef8:	bl	45ec58 <_obstack_memory_used@@Base+0x2330>
  45eefc:	bl	402540 <abort@plt>
  45ef00:	bl	45ebb8 <_obstack_memory_used@@Base+0x2290>
  45ef04:	bl	45ec58 <_obstack_memory_used@@Base+0x2330>
  45ef08:	bl	402540 <abort@plt>
  45ef0c:	mov	x19, x0
  45ef10:	bl	45ec58 <_obstack_memory_used@@Base+0x2330>
  45ef14:	mov	x0, x19
  45ef18:	bl	46b528 <_obstack_memory_used@@Base+0xec00>
  45ef1c:	nop
  45ef20:	sub	w5, w1, #0x1
  45ef24:	mov	x4, x0
  45ef28:	cmp	w5, #0x4f
  45ef2c:	b.ls	45ef38 <_obstack_memory_used@@Base+0x2610>  // b.plast
  45ef30:	mov	x0, #0x0                   	// #0
  45ef34:	ret
  45ef38:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45ef3c:	add	x0, x0, #0x7f4
  45ef40:	ldrb	w0, [x0, w5, uxtw]
  45ef44:	adr	x5, 45ef50 <_obstack_memory_used@@Base+0x2628>
  45ef48:	add	x0, x5, w0, sxtb #2
  45ef4c:	br	x0
  45ef50:	cbz	x3, 45ef30 <_obstack_memory_used@@Base+0x2608>
  45ef54:	ldp	w0, w5, [x4, #40]
  45ef58:	cmp	w0, w5
  45ef5c:	b.ge	45ef30 <_obstack_memory_used@@Base+0x2608>  // b.tcont
  45ef60:	mov	w5, #0x18                  	// #24
  45ef64:	add	w7, w0, #0x1
  45ef68:	ldr	x6, [x4, #32]
  45ef6c:	smull	x5, w0, w5
  45ef70:	add	x0, x6, x5
  45ef74:	str	wzr, [x0, #4]
  45ef78:	str	w7, [x4, #40]
  45ef7c:	str	w1, [x6, x5]
  45ef80:	stp	x2, x3, [x0, #8]
  45ef84:	ret
  45ef88:	cbnz	x2, 45ef54 <_obstack_memory_used@@Base+0x262c>
  45ef8c:	mov	x0, #0x0                   	// #0
  45ef90:	b	45ef34 <_obstack_memory_used@@Base+0x260c>
  45ef94:	cmp	x2, #0x0
  45ef98:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  45ef9c:	b.ne	45ef54 <_obstack_memory_used@@Base+0x262c>  // b.any
  45efa0:	mov	x0, #0x0                   	// #0
  45efa4:	b	45ef34 <_obstack_memory_used@@Base+0x260c>
  45efa8:	ldr	x3, [x0, #24]
  45efac:	mov	x2, x1
  45efb0:	mov	w4, #0x4f                  	// #79
  45efb4:	ldrb	w1, [x3]
  45efb8:	cmp	w1, #0x52
  45efbc:	ccmp	w1, w4, #0x4, ne  // ne = any
  45efc0:	b.ne	45efec <_obstack_memory_used@@Base+0x26c4>  // b.any
  45efc4:	ldr	w5, [x0, #72]
  45efc8:	cmp	w1, #0x52
  45efcc:	mov	w1, #0x20                  	// #32
  45efd0:	add	w4, w5, #0x3
  45efd4:	b.eq	45eff4 <_obstack_memory_used@@Base+0x26cc>  // b.none
  45efd8:	add	x3, x3, #0x1
  45efdc:	str	x3, [x0, #24]
  45efe0:	str	w4, [x0, #72]
  45efe4:	mov	x3, #0x0                   	// #0
  45efe8:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  45efec:	mov	x0, x2
  45eff0:	ret
  45eff4:	add	w4, w5, #0x2
  45eff8:	add	x3, x3, #0x1
  45effc:	str	x3, [x0, #24]
  45f000:	mov	w1, #0x1f                  	// #31
  45f004:	str	w4, [x0, #72]
  45f008:	mov	x3, #0x0                   	// #0
  45f00c:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  45f010:	cbz	x1, 45f0f0 <_obstack_memory_used@@Base+0x27c8>
  45f014:	stp	x29, x30, [sp, #-32]!
  45f018:	mov	x29, sp
  45f01c:	stp	x19, x20, [sp, #16]
  45f020:	mov	x20, x0
  45f024:	mov	x19, x1
  45f028:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  45f02c:	add	x0, x0, #0x844
  45f030:	ldr	w1, [x19]
  45f034:	sub	w1, w1, #0x1
  45f038:	cmp	w1, #0x4f
  45f03c:	b.ls	45f04c <_obstack_memory_used@@Base+0x2724>  // b.plast
  45f040:	ldp	x19, x20, [sp, #16]
  45f044:	ldp	x29, x30, [sp], #32
  45f048:	ret
  45f04c:	ldrb	w1, [x0, w1, uxtw]
  45f050:	adr	x2, 45f05c <_obstack_memory_used@@Base+0x2734>
  45f054:	add	x1, x2, w1, sxtb #2
  45f058:	br	x1
  45f05c:	ldr	x0, [x19, #8]
  45f060:	ldr	w0, [x0]
  45f064:	cmp	w0, #0x5
  45f068:	b.ne	45f078 <_obstack_memory_used@@Base+0x2750>  // b.any
  45f06c:	ldr	w0, [x20, #348]
  45f070:	add	w0, w0, #0x1
  45f074:	str	w0, [x20, #348]
  45f078:	ldr	w0, [x20, #308]
  45f07c:	cmp	w0, #0x800
  45f080:	b.gt	45f040 <_obstack_memory_used@@Base+0x2718>
  45f084:	ldr	x1, [x19, #8]
  45f088:	add	w0, w0, #0x1
  45f08c:	str	w0, [x20, #308]
  45f090:	mov	x0, x20
  45f094:	bl	45f010 <_obstack_memory_used@@Base+0x26e8>
  45f098:	ldr	x1, [x19, #16]
  45f09c:	mov	x0, x20
  45f0a0:	bl	45f010 <_obstack_memory_used@@Base+0x26e8>
  45f0a4:	ldr	w0, [x20, #308]
  45f0a8:	sub	w0, w0, #0x1
  45f0ac:	str	w0, [x20, #308]
  45f0b0:	ldp	x19, x20, [sp, #16]
  45f0b4:	ldp	x29, x30, [sp], #32
  45f0b8:	ret
  45f0bc:	ldr	x19, [x19, #8]
  45f0c0:	cbnz	x19, 45f030 <_obstack_memory_used@@Base+0x2708>
  45f0c4:	b	45f040 <_obstack_memory_used@@Base+0x2718>
  45f0c8:	ldr	x19, [x19, #16]
  45f0cc:	cbnz	x19, 45f030 <_obstack_memory_used@@Base+0x2708>
  45f0d0:	b	45f040 <_obstack_memory_used@@Base+0x2718>
  45f0d4:	ldr	w0, [x20, #364]
  45f0d8:	add	w0, w0, #0x1
  45f0dc:	str	w0, [x20, #364]
  45f0e0:	ldr	w0, [x20, #308]
  45f0e4:	cmp	w0, #0x800
  45f0e8:	b.gt	45f040 <_obstack_memory_used@@Base+0x2718>
  45f0ec:	b	45f084 <_obstack_memory_used@@Base+0x275c>
  45f0f0:	ret
  45f0f4:	nop
  45f0f8:	cbz	x2, 45f198 <_obstack_memory_used@@Base+0x2870>
  45f0fc:	stp	x29, x30, [sp, #-48]!
  45f100:	mov	x29, sp
  45f104:	stp	x19, x20, [sp, #16]
  45f108:	mov	x20, x1
  45f10c:	mov	x19, x0
  45f110:	stp	x21, x22, [sp, #32]
  45f114:	add	x22, x1, x2
  45f118:	ldr	x1, [x0, #256]
  45f11c:	b	45f140 <_obstack_memory_used@@Base+0x2818>
  45f120:	mov	x0, x1
  45f124:	add	x1, x1, #0x1
  45f128:	str	x1, [x19, #256]
  45f12c:	add	x20, x20, #0x1
  45f130:	cmp	x20, x22
  45f134:	strb	w21, [x19, x0]
  45f138:	strb	w21, [x19, #264]
  45f13c:	b.eq	45f188 <_obstack_memory_used@@Base+0x2860>  // b.none
  45f140:	ldrb	w21, [x20]
  45f144:	cmp	x1, #0xff
  45f148:	b.ne	45f120 <_obstack_memory_used@@Base+0x27f8>  // b.any
  45f14c:	ldp	x3, x2, [x19, #272]
  45f150:	strb	wzr, [x19, #255]
  45f154:	mov	x0, x19
  45f158:	add	x20, x20, #0x1
  45f15c:	blr	x3
  45f160:	ldr	x2, [x19, #320]
  45f164:	mov	x0, #0x0                   	// #0
  45f168:	mov	x1, #0x1                   	// #1
  45f16c:	str	x1, [x19, #256]
  45f170:	add	x2, x2, x1
  45f174:	str	x2, [x19, #320]
  45f178:	strb	w21, [x19, x0]
  45f17c:	cmp	x20, x22
  45f180:	strb	w21, [x19, #264]
  45f184:	b.ne	45f140 <_obstack_memory_used@@Base+0x2818>  // b.any
  45f188:	ldp	x19, x20, [sp, #16]
  45f18c:	ldp	x21, x22, [sp, #32]
  45f190:	ldp	x29, x30, [sp], #48
  45f194:	ret
  45f198:	ret
  45f19c:	nop
  45f1a0:	ldr	x3, [x0]
  45f1a4:	mov	x6, x0
  45f1a8:	ldrb	w4, [x3]
  45f1ac:	cmp	w4, #0x6e
  45f1b0:	b.eq	45f23c <_obstack_memory_used@@Base+0x2914>  // b.none
  45f1b4:	sub	w0, w4, #0x30
  45f1b8:	and	w0, w0, #0xff
  45f1bc:	cmp	w0, #0x9
  45f1c0:	b.hi	45f264 <_obstack_memory_used@@Base+0x293c>  // b.pmore
  45f1c4:	mov	w9, #0x0                   	// #0
  45f1c8:	mov	w8, #0xcccd                	// #52429
  45f1cc:	add	x3, x3, #0x1
  45f1d0:	mov	w0, #0x0                   	// #0
  45f1d4:	mov	w7, #0x7fffffff            	// #2147483647
  45f1d8:	movk	w8, #0xcccc, lsl #16
  45f1dc:	b	45f1f0 <_obstack_memory_used@@Base+0x28c8>
  45f1e0:	umull	x1, w1, w8
  45f1e4:	lsr	x1, x1, #35
  45f1e8:	cmp	w1, w0
  45f1ec:	b.lt	45f234 <_obstack_memory_used@@Base+0x290c>  // b.tstop
  45f1f0:	str	x3, [x6]
  45f1f4:	add	w0, w0, w0, lsl #2
  45f1f8:	add	x3, x3, #0x1
  45f1fc:	ldurb	w1, [x3, #-1]
  45f200:	add	w5, w4, w0, lsl #1
  45f204:	sub	w0, w5, #0x30
  45f208:	sub	w2, w1, #0x30
  45f20c:	mov	w4, w1
  45f210:	sub	w1, w7, w2
  45f214:	and	w2, w2, #0xff
  45f218:	cmp	w2, #0x9
  45f21c:	b.ls	45f1e0 <_obstack_memory_used@@Base+0x28b8>  // b.plast
  45f220:	cmp	w9, #0x0
  45f224:	mov	w1, #0x30                  	// #48
  45f228:	sub	w5, w1, w5
  45f22c:	csel	w0, w5, w0, ne  // ne = any
  45f230:	ret
  45f234:	mov	w0, #0xffffffff            	// #-1
  45f238:	ret
  45f23c:	add	x1, x3, #0x1
  45f240:	str	x1, [x0]
  45f244:	ldrb	w4, [x3, #1]
  45f248:	sub	w0, w4, #0x30
  45f24c:	and	w0, w0, #0xff
  45f250:	cmp	w0, #0x9
  45f254:	b.hi	45f264 <_obstack_memory_used@@Base+0x293c>  // b.pmore
  45f258:	mov	x3, x1
  45f25c:	mov	w9, #0x1                   	// #1
  45f260:	b	45f1c8 <_obstack_memory_used@@Base+0x28a0>
  45f264:	mov	w0, #0x0                   	// #0
  45f268:	ret
  45f26c:	nop
  45f270:	mov	x1, x0
  45f274:	ldr	w0, [x0, #40]
  45f278:	ldr	w2, [x1, #44]
  45f27c:	cmp	w0, w2
  45f280:	b.ge	45f2cc <_obstack_memory_used@@Base+0x29a4>  // b.tcont
  45f284:	stp	x29, x30, [sp, #-16]!
  45f288:	mov	w2, #0x18                  	// #24
  45f28c:	add	w5, w0, #0x1
  45f290:	mov	x29, sp
  45f294:	ldr	x3, [x1, #32]
  45f298:	smull	x2, w0, w2
  45f29c:	mov	w4, #0x42                  	// #66
  45f2a0:	add	x0, x1, #0x18
  45f2a4:	add	x10, x3, x2
  45f2a8:	str	wzr, [x10, #4]
  45f2ac:	str	w5, [x1, #40]
  45f2b0:	str	w4, [x3, x2]
  45f2b4:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  45f2b8:	sxtw	x0, w0
  45f2bc:	str	x0, [x10, #8]
  45f2c0:	mov	x0, x10
  45f2c4:	ldp	x29, x30, [sp], #16
  45f2c8:	ret
  45f2cc:	mov	x10, #0x0                   	// #0
  45f2d0:	mov	x0, x10
  45f2d4:	ret
  45f2d8:	ldr	x1, [x0, #24]
  45f2dc:	mov	x10, x0
  45f2e0:	ldrb	w0, [x1]
  45f2e4:	cmp	w0, #0x5f
  45f2e8:	b.eq	45f32c <_obstack_memory_used@@Base+0x2a04>  // b.none
  45f2ec:	cmp	w0, #0x6e
  45f2f0:	b.eq	45f344 <_obstack_memory_used@@Base+0x2a1c>  // b.none
  45f2f4:	stp	x29, x30, [sp, #-16]!
  45f2f8:	add	x0, x10, #0x18
  45f2fc:	mov	x29, sp
  45f300:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  45f304:	adds	w0, w0, #0x1
  45f308:	b.mi	45f33c <_obstack_memory_used@@Base+0x2a14>  // b.first
  45f30c:	ldr	x1, [x10, #24]
  45f310:	ldrb	w2, [x1]
  45f314:	cmp	w2, #0x5f
  45f318:	b.ne	45f33c <_obstack_memory_used@@Base+0x2a14>  // b.any
  45f31c:	add	x1, x1, #0x1
  45f320:	str	x1, [x10, #24]
  45f324:	ldp	x29, x30, [sp], #16
  45f328:	ret
  45f32c:	add	x1, x1, #0x1
  45f330:	mov	w0, #0x0                   	// #0
  45f334:	str	x1, [x10, #24]
  45f338:	ret
  45f33c:	mov	w0, #0xffffffff            	// #-1
  45f340:	b	45f324 <_obstack_memory_used@@Base+0x29fc>
  45f344:	mov	w0, #0xffffffff            	// #-1
  45f348:	ret
  45f34c:	nop
  45f350:	ldr	x1, [x0, #24]
  45f354:	ldrb	w2, [x1]
  45f358:	cmp	w2, #0x54
  45f35c:	b.ne	45f3c8 <_obstack_memory_used@@Base+0x2aa0>  // b.any
  45f360:	stp	x29, x30, [sp, #-16]!
  45f364:	add	x1, x1, #0x1
  45f368:	mov	x11, x0
  45f36c:	mov	x29, sp
  45f370:	str	x1, [x0, #24]
  45f374:	bl	45f2d8 <_obstack_memory_used@@Base+0x29b0>
  45f378:	tbnz	w0, #31, 45f3bc <_obstack_memory_used@@Base+0x2a94>
  45f37c:	ldp	w1, w2, [x11, #40]
  45f380:	cmp	w1, w2
  45f384:	b.ge	45f3bc <_obstack_memory_used@@Base+0x2a94>  // b.tcont
  45f388:	mov	w2, #0x18                  	// #24
  45f38c:	add	w5, w1, #0x1
  45f390:	ldr	x3, [x11, #32]
  45f394:	smull	x2, w1, w2
  45f398:	sxtw	x1, w0
  45f39c:	mov	w4, #0x5                   	// #5
  45f3a0:	add	x0, x3, x2
  45f3a4:	str	wzr, [x0, #4]
  45f3a8:	str	w5, [x11, #40]
  45f3ac:	str	w4, [x3, x2]
  45f3b0:	str	x1, [x0, #8]
  45f3b4:	ldp	x29, x30, [sp], #16
  45f3b8:	ret
  45f3bc:	mov	x0, #0x0                   	// #0
  45f3c0:	ldp	x29, x30, [sp], #16
  45f3c4:	ret
  45f3c8:	mov	x0, #0x0                   	// #0
  45f3cc:	ret
  45f3d0:	mov	x10, x0
  45f3d4:	stp	x29, x30, [sp, #-16]!
  45f3d8:	add	x0, x0, #0x18
  45f3dc:	mov	x29, sp
  45f3e0:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  45f3e4:	cmp	w0, #0x0
  45f3e8:	b.le	45f4e0 <_obstack_memory_used@@Base+0x2bb8>
  45f3ec:	mov	w1, w0
  45f3f0:	sxtw	x3, w0
  45f3f4:	ldr	x0, [x10, #8]
  45f3f8:	ldr	x2, [x10, #24]
  45f3fc:	sub	x0, x0, x2
  45f400:	cmp	x0, w1, sxtw
  45f404:	b.lt	45f4d8 <_obstack_memory_used@@Base+0x2bb0>  // b.tstop
  45f408:	ldr	w0, [x10, #16]
  45f40c:	add	x3, x2, x3
  45f410:	str	x3, [x10, #24]
  45f414:	tbz	w0, #2, 45f424 <_obstack_memory_used@@Base+0x2afc>
  45f418:	ldrb	w0, [x2, w1, sxtw]
  45f41c:	cmp	w0, #0x24
  45f420:	b.eq	45f4ec <_obstack_memory_used@@Base+0x2bc4>  // b.none
  45f424:	ldp	w0, w3, [x10, #40]
  45f428:	cmp	w1, #0x9
  45f42c:	b.gt	45f468 <_obstack_memory_used@@Base+0x2b40>
  45f430:	cmp	w3, w0
  45f434:	b.le	45f4d8 <_obstack_memory_used@@Base+0x2bb0>
  45f438:	ldr	x4, [x10, #32]
  45f43c:	mov	w5, #0x18                  	// #24
  45f440:	add	w3, w0, #0x1
  45f444:	smaddl	x0, w0, w5, x4
  45f448:	str	wzr, [x0, #4]
  45f44c:	str	w3, [x10, #40]
  45f450:	cbz	x2, 45f4d8 <_obstack_memory_used@@Base+0x2bb0>
  45f454:	stp	xzr, x2, [x0]
  45f458:	str	w1, [x0, #16]
  45f45c:	str	x0, [x10, #64]
  45f460:	ldp	x29, x30, [sp], #16
  45f464:	ret
  45f468:	mov	x4, #0x475f                	// #18271
  45f46c:	ldr	x5, [x2]
  45f470:	movk	x4, #0x4f4c, lsl #16
  45f474:	movk	x4, #0x4142, lsl #32
  45f478:	movk	x4, #0x5f4c, lsl #48
  45f47c:	cmp	x5, x4
  45f480:	b.ne	45f4ac <_obstack_memory_used@@Base+0x2b84>  // b.any
  45f484:	ldrb	w4, [x2, #8]
  45f488:	mov	w6, #0x5f                  	// #95
  45f48c:	mov	w5, #0x24                  	// #36
  45f490:	cmp	w4, #0x2e
  45f494:	ccmp	w4, w6, #0x4, ne  // ne = any
  45f498:	ccmp	w4, w5, #0x4, ne  // ne = any
  45f49c:	b.ne	45f4ac <_obstack_memory_used@@Base+0x2b84>  // b.any
  45f4a0:	ldrb	w4, [x2, #9]
  45f4a4:	cmp	w4, #0x4e
  45f4a8:	b.eq	45f504 <_obstack_memory_used@@Base+0x2bdc>  // b.none
  45f4ac:	cmp	w3, w0
  45f4b0:	b.le	45f4d8 <_obstack_memory_used@@Base+0x2bb0>
  45f4b4:	ldr	x4, [x10, #32]
  45f4b8:	mov	w5, #0x18                  	// #24
  45f4bc:	add	w3, w0, #0x1
  45f4c0:	smaddl	x0, w0, w5, x4
  45f4c4:	str	wzr, [x0, #4]
  45f4c8:	str	w3, [x10, #40]
  45f4cc:	stp	xzr, x2, [x0]
  45f4d0:	str	w1, [x0, #16]
  45f4d4:	b	45f45c <_obstack_memory_used@@Base+0x2b34>
  45f4d8:	mov	x0, #0x0                   	// #0
  45f4dc:	b	45f45c <_obstack_memory_used@@Base+0x2b34>
  45f4e0:	mov	x0, #0x0                   	// #0
  45f4e4:	ldp	x29, x30, [sp], #16
  45f4e8:	ret
  45f4ec:	add	x3, x3, #0x1
  45f4f0:	str	x3, [x10, #24]
  45f4f4:	cmp	w1, #0x9
  45f4f8:	ldp	w0, w3, [x10, #40]
  45f4fc:	b.le	45f430 <_obstack_memory_used@@Base+0x2b08>
  45f500:	b	45f468 <_obstack_memory_used@@Base+0x2b40>
  45f504:	ldr	w2, [x10, #72]
  45f508:	cmp	w3, w0
  45f50c:	add	w2, w2, #0x16
  45f510:	sub	w1, w2, w1
  45f514:	str	w1, [x10, #72]
  45f518:	b.le	45f4d8 <_obstack_memory_used@@Base+0x2bb0>
  45f51c:	mov	w1, #0x18                  	// #24
  45f520:	add	w2, w0, #0x1
  45f524:	ldr	x3, [x10, #32]
  45f528:	smull	x1, w0, w1
  45f52c:	str	w2, [x10, #40]
  45f530:	mov	w4, #0x15                  	// #21
  45f534:	add	x0, x3, x1
  45f538:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  45f53c:	add	x2, x2, #0x528
  45f540:	str	xzr, [x3, x1]
  45f544:	str	x2, [x0, #8]
  45f548:	str	w4, [x0, #16]
  45f54c:	b	45f45c <_obstack_memory_used@@Base+0x2b34>
  45f550:	ldr	x3, [x0, #24]
  45f554:	mov	x11, x0
  45f558:	ldr	x13, [x0, #64]
  45f55c:	mov	x12, x1
  45f560:	ldrb	w0, [x3]
  45f564:	cmp	w0, #0x42
  45f568:	b.ne	45f5c0 <_obstack_memory_used@@Base+0x2c98>  // b.any
  45f56c:	stp	x29, x30, [sp, #-16]!
  45f570:	mov	x29, sp
  45f574:	nop
  45f578:	add	x3, x3, #0x1
  45f57c:	str	x3, [x11, #24]
  45f580:	mov	x0, x11
  45f584:	bl	45f3d0 <_obstack_memory_used@@Base+0x2aa8>
  45f588:	mov	x3, x0
  45f58c:	mov	x2, x12
  45f590:	mov	x0, x11
  45f594:	mov	w1, #0x4c                  	// #76
  45f598:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  45f59c:	ldr	x3, [x11, #24]
  45f5a0:	mov	x12, x0
  45f5a4:	ldrb	w0, [x3]
  45f5a8:	cmp	w0, #0x42
  45f5ac:	b.eq	45f578 <_obstack_memory_used@@Base+0x2c50>  // b.none
  45f5b0:	str	x13, [x11, #64]
  45f5b4:	mov	x0, x12
  45f5b8:	ldp	x29, x30, [sp], #16
  45f5bc:	ret
  45f5c0:	mov	x0, x1
  45f5c4:	str	x13, [x11, #64]
  45f5c8:	ret
  45f5cc:	nop
  45f5d0:	mov	x14, x0
  45f5d4:	ldr	x0, [x0, #24]
  45f5d8:	ldrb	w2, [x0]
  45f5dc:	cmp	w2, #0x53
  45f5e0:	b.ne	45f650 <_obstack_memory_used@@Base+0x2d28>  // b.any
  45f5e4:	add	x2, x0, #0x1
  45f5e8:	str	x2, [x14, #24]
  45f5ec:	ldrb	w2, [x0, #1]
  45f5f0:	cbnz	w2, 45f658 <_obstack_memory_used@@Base+0x2d30>
  45f5f4:	ldr	w0, [x14, #16]
  45f5f8:	and	w1, w1, #0x1
  45f5fc:	ands	w3, w0, #0x8
  45f600:	ubfx	x4, x0, #3, #1
  45f604:	csel	w1, w1, wzr, eq  // eq = none
  45f608:	cbz	w1, 45f624 <_obstack_memory_used@@Base+0x2cfc>
  45f60c:	ldr	x0, [x14, #24]
  45f610:	ldrb	w0, [x0]
  45f614:	sub	w0, w0, #0x43
  45f618:	and	w0, w0, #0xff
  45f61c:	cmp	w0, #0x1
  45f620:	csinc	w4, w4, wzr, hi  // hi = pmore
  45f624:	adrp	x0, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  45f628:	add	x0, x0, #0xdf0
  45f62c:	add	x3, x0, #0x188
  45f630:	mov	w1, #0x74                  	// #116
  45f634:	b	45f63c <_obstack_memory_used@@Base+0x2d14>
  45f638:	ldrb	w1, [x0]
  45f63c:	cmp	w1, w2
  45f640:	b.eq	45f72c <_obstack_memory_used@@Base+0x2e04>  // b.none
  45f644:	add	x0, x0, #0x38
  45f648:	cmp	x0, x3
  45f64c:	b.ne	45f638 <_obstack_memory_used@@Base+0x2d10>  // b.any
  45f650:	mov	x0, #0x0                   	// #0
  45f654:	ret
  45f658:	add	x2, x0, #0x2
  45f65c:	str	x2, [x14, #24]
  45f660:	ldrb	w2, [x0, #1]
  45f664:	sub	w5, w2, #0x30
  45f668:	cmp	w2, #0x5f
  45f66c:	and	w0, w5, #0xff
  45f670:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  45f674:	b.hi	45f69c <_obstack_memory_used@@Base+0x2d74>  // b.pmore
  45f678:	cmp	w2, #0x5f
  45f67c:	mov	w1, #0x0                   	// #0
  45f680:	b.ne	45f6b0 <_obstack_memory_used@@Base+0x2d88>  // b.any
  45f684:	ldr	w0, [x14, #56]
  45f688:	cmp	w0, w1
  45f68c:	b.ls	45f650 <_obstack_memory_used@@Base+0x2d28>  // b.plast
  45f690:	ldr	x0, [x14, #48]
  45f694:	ldr	x0, [x0, w1, uxtw #3]
  45f698:	ret
  45f69c:	sub	w0, w2, #0x41
  45f6a0:	and	w0, w0, #0xff
  45f6a4:	cmp	w0, #0x19
  45f6a8:	b.hi	45f5f4 <_obstack_memory_used@@Base+0x2ccc>  // b.pmore
  45f6ac:	nop
  45f6b0:	mov	w3, #0x0                   	// #0
  45f6b4:	nop
  45f6b8:	add	w1, w3, w3, lsl #3
  45f6bc:	sub	w6, w2, #0x41
  45f6c0:	mov	w4, w1
  45f6c4:	and	w5, w5, #0xff
  45f6c8:	add	w1, w2, w1, lsl #2
  45f6cc:	and	w6, w6, #0xff
  45f6d0:	sub	w1, w1, #0x37
  45f6d4:	add	w2, w2, w4, lsl #2
  45f6d8:	cmp	w5, #0x9
  45f6dc:	b.hi	45f720 <_obstack_memory_used@@Base+0x2df8>  // b.pmore
  45f6e0:	sub	w1, w2, #0x30
  45f6e4:	cmp	w3, w1
  45f6e8:	b.hi	45f650 <_obstack_memory_used@@Base+0x2d28>  // b.pmore
  45f6ec:	ldr	x4, [x14, #24]
  45f6f0:	mov	w3, w1
  45f6f4:	add	x0, x4, #0x1
  45f6f8:	ldrb	w2, [x4]
  45f6fc:	cbz	w2, 45f710 <_obstack_memory_used@@Base+0x2de8>
  45f700:	str	x0, [x14, #24]
  45f704:	ldrb	w2, [x4]
  45f708:	cmp	w2, #0x5f
  45f70c:	b.eq	45f718 <_obstack_memory_used@@Base+0x2df0>  // b.none
  45f710:	sub	w5, w2, #0x30
  45f714:	b	45f6b8 <_obstack_memory_used@@Base+0x2d90>
  45f718:	add	w1, w1, #0x1
  45f71c:	b	45f684 <_obstack_memory_used@@Base+0x2d5c>
  45f720:	cmp	w6, #0x19
  45f724:	b.ls	45f6e4 <_obstack_memory_used@@Base+0x2dbc>  // b.plast
  45f728:	b	45f650 <_obstack_memory_used@@Base+0x2d28>
  45f72c:	ldr	x5, [x0, #40]
  45f730:	ldp	w1, w3, [x14, #40]
  45f734:	cbz	x5, 45f770 <_obstack_memory_used@@Base+0x2e48>
  45f738:	ldr	w9, [x0, #48]
  45f73c:	cmp	w3, w1
  45f740:	b.le	45f828 <_obstack_memory_used@@Base+0x2f00>
  45f744:	mov	w8, #0x18                  	// #24
  45f748:	ldr	x7, [x14, #32]
  45f74c:	smull	x6, w1, w8
  45f750:	add	w1, w1, #0x1
  45f754:	add	x2, x7, x6
  45f758:	str	wzr, [x2, #4]
  45f75c:	str	w1, [x14, #40]
  45f760:	str	w8, [x7, x6]
  45f764:	str	x5, [x2, #8]
  45f768:	str	w9, [x2, #16]
  45f76c:	str	x2, [x14, #64]
  45f770:	cbz	w4, 45f7cc <_obstack_memory_used@@Base+0x2ea4>
  45f774:	ldr	w2, [x0, #32]
  45f778:	ldr	x5, [x0, #24]
  45f77c:	cmp	w1, w3
  45f780:	ldr	w0, [x14, #72]
  45f784:	add	w0, w0, w2
  45f788:	str	w0, [x14, #72]
  45f78c:	b.ge	45f820 <_obstack_memory_used@@Base+0x2ef8>  // b.tcont
  45f790:	mov	w4, #0x18                  	// #24
  45f794:	add	w6, w1, #0x1
  45f798:	ldr	x3, [x14, #32]
  45f79c:	smull	x1, w1, w4
  45f7a0:	add	x0, x3, x1
  45f7a4:	str	wzr, [x0, #4]
  45f7a8:	str	w6, [x14, #40]
  45f7ac:	str	w4, [x3, x1]
  45f7b0:	str	x5, [x0, #8]
  45f7b4:	str	w2, [x0, #16]
  45f7b8:	ldr	x1, [x14, #24]
  45f7bc:	ldrb	w1, [x1]
  45f7c0:	cmp	w1, #0x42
  45f7c4:	b.eq	45f7d8 <_obstack_memory_used@@Base+0x2eb0>  // b.none
  45f7c8:	ret
  45f7cc:	ldr	w2, [x0, #16]
  45f7d0:	ldr	x5, [x0, #8]
  45f7d4:	b	45f77c <_obstack_memory_used@@Base+0x2e54>
  45f7d8:	stp	x29, x30, [sp, #-16]!
  45f7dc:	mov	x1, x0
  45f7e0:	mov	x0, x14
  45f7e4:	mov	x29, sp
  45f7e8:	bl	45f550 <_obstack_memory_used@@Base+0x2c28>
  45f7ec:	cbz	x0, 45f814 <_obstack_memory_used@@Base+0x2eec>
  45f7f0:	ldp	w1, w2, [x14, #56]
  45f7f4:	cmp	w1, w2
  45f7f8:	b.ge	45f814 <_obstack_memory_used@@Base+0x2eec>  // b.tcont
  45f7fc:	ldr	x3, [x14, #48]
  45f800:	add	w2, w1, #0x1
  45f804:	str	x0, [x3, w1, sxtw #3]
  45f808:	str	w2, [x14, #56]
  45f80c:	ldp	x29, x30, [sp], #16
  45f810:	ret
  45f814:	mov	x0, #0x0                   	// #0
  45f818:	ldp	x29, x30, [sp], #16
  45f81c:	ret
  45f820:	mov	x0, #0x0                   	// #0
  45f824:	b	45f7b8 <_obstack_memory_used@@Base+0x2e90>
  45f828:	mov	x2, #0x0                   	// #0
  45f82c:	str	x2, [x14, #64]
  45f830:	b	45f770 <_obstack_memory_used@@Base+0x2e48>
  45f834:	nop
  45f838:	mov	x10, x0
  45f83c:	cbnz	w1, 45f858 <_obstack_memory_used@@Base+0x2f30>
  45f840:	ldr	x0, [x0, #24]
  45f844:	ldrb	w1, [x0]
  45f848:	cbz	w1, 45f898 <_obstack_memory_used@@Base+0x2f70>
  45f84c:	add	x1, x0, #0x1
  45f850:	str	x1, [x10, #24]
  45f854:	ldrb	w1, [x0]
  45f858:	stp	x29, x30, [sp, #-16]!
  45f85c:	cmp	w1, #0x68
  45f860:	mov	x29, sp
  45f864:	b.eq	45f8d4 <_obstack_memory_used@@Base+0x2fac>  // b.none
  45f868:	cmp	w1, #0x76
  45f86c:	b.ne	45f88c <_obstack_memory_used@@Base+0x2f64>  // b.any
  45f870:	add	x11, x10, #0x18
  45f874:	mov	x0, x11
  45f878:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  45f87c:	ldr	x0, [x10, #24]
  45f880:	ldrb	w1, [x0]
  45f884:	cmp	w1, #0x5f
  45f888:	b.eq	45f8a0 <_obstack_memory_used@@Base+0x2f78>  // b.none
  45f88c:	mov	w0, #0x0                   	// #0
  45f890:	ldp	x29, x30, [sp], #16
  45f894:	ret
  45f898:	mov	w0, #0x0                   	// #0
  45f89c:	ret
  45f8a0:	add	x0, x0, #0x1
  45f8a4:	str	x0, [x10, #24]
  45f8a8:	mov	x0, x11
  45f8ac:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  45f8b0:	ldr	x0, [x10, #24]
  45f8b4:	ldrb	w1, [x0]
  45f8b8:	cmp	w1, #0x5f
  45f8bc:	b.ne	45f88c <_obstack_memory_used@@Base+0x2f64>  // b.any
  45f8c0:	add	x1, x0, #0x1
  45f8c4:	str	x1, [x10, #24]
  45f8c8:	mov	w0, #0x1                   	// #1
  45f8cc:	ldp	x29, x30, [sp], #16
  45f8d0:	ret
  45f8d4:	add	x0, x10, #0x18
  45f8d8:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  45f8dc:	b	45f8b0 <_obstack_memory_used@@Base+0x2f88>
  45f8e0:	mov	x2, x0
  45f8e4:	mov	w3, #0x56                  	// #86
  45f8e8:	mov	w0, #0x4b                  	// #75
  45f8ec:	ldrb	w1, [x2]
  45f8f0:	cmp	w1, #0x72
  45f8f4:	ccmp	w1, w3, #0x4, ne  // ne = any
  45f8f8:	ccmp	w1, w0, #0x4, ne  // ne = any
  45f8fc:	mov	w0, #0x1                   	// #1
  45f900:	b.eq	45f910 <_obstack_memory_used@@Base+0x2fe8>  // b.none
  45f904:	cmp	w1, #0x44
  45f908:	mov	w0, #0x0                   	// #0
  45f90c:	b.eq	45f914 <_obstack_memory_used@@Base+0x2fec>  // b.none
  45f910:	ret
  45f914:	ldrb	w0, [x2, #1]
  45f918:	and	w1, w0, #0xffffffdf
  45f91c:	sub	w0, w0, #0x77
  45f920:	cmp	w1, #0x4f
  45f924:	and	w0, w0, #0xff
  45f928:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  45f92c:	cset	w0, ls  // ls = plast
  45f930:	ret
  45f934:	nop
  45f938:	ldr	x1, [x0, #24]
  45f93c:	mov	x10, x0
  45f940:	ldrb	w0, [x1]
  45f944:	cmp	w0, #0x5f
  45f948:	b.eq	45f954 <_obstack_memory_used@@Base+0x302c>  // b.none
  45f94c:	mov	w0, #0x1                   	// #1
  45f950:	ret
  45f954:	stp	x29, x30, [sp, #-16]!
  45f958:	add	x0, x1, #0x1
  45f95c:	mov	x29, sp
  45f960:	str	x0, [x10, #24]
  45f964:	ldrb	w0, [x1, #1]
  45f968:	cmp	w0, #0x5f
  45f96c:	b.eq	45f990 <_obstack_memory_used@@Base+0x3068>  // b.none
  45f970:	add	x0, x10, #0x18
  45f974:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  45f978:	mov	w1, w0
  45f97c:	mov	w0, #0x0                   	// #0
  45f980:	tbnz	w1, #31, 45f988 <_obstack_memory_used@@Base+0x3060>
  45f984:	mov	w0, #0x1                   	// #1
  45f988:	ldp	x29, x30, [sp], #16
  45f98c:	ret
  45f990:	mov	x0, x10
  45f994:	add	x1, x1, #0x2
  45f998:	str	x1, [x0, #24]!
  45f99c:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  45f9a0:	tbnz	w0, #31, 45f9d0 <_obstack_memory_used@@Base+0x30a8>
  45f9a4:	cmp	w0, #0x9
  45f9a8:	b.le	45f984 <_obstack_memory_used@@Base+0x305c>
  45f9ac:	ldr	x1, [x10, #24]
  45f9b0:	mov	w0, #0x0                   	// #0
  45f9b4:	ldrb	w2, [x1]
  45f9b8:	cmp	w2, #0x5f
  45f9bc:	b.ne	45f988 <_obstack_memory_used@@Base+0x3060>  // b.any
  45f9c0:	add	x1, x1, #0x1
  45f9c4:	mov	w0, #0x1                   	// #1
  45f9c8:	str	x1, [x10, #24]
  45f9cc:	b	45f988 <_obstack_memory_used@@Base+0x3060>
  45f9d0:	mov	w0, #0x0                   	// #0
  45f9d4:	b	45f988 <_obstack_memory_used@@Base+0x3060>
  45f9d8:	cbnz	x0, 45f9f4 <_obstack_memory_used@@Base+0x30cc>
  45f9dc:	b	45fa00 <_obstack_memory_used@@Base+0x30d8>
  45f9e0:	cmp	w1, #0x0
  45f9e4:	b.le	45fa08 <_obstack_memory_used@@Base+0x30e0>
  45f9e8:	ldr	x0, [x0, #16]
  45f9ec:	sub	w1, w1, #0x1
  45f9f0:	cbz	x0, 45fa04 <_obstack_memory_used@@Base+0x30dc>
  45f9f4:	ldr	w2, [x0]
  45f9f8:	cmp	w2, #0x2f
  45f9fc:	b.eq	45f9e0 <_obstack_memory_used@@Base+0x30b8>  // b.none
  45fa00:	mov	x0, #0x0                   	// #0
  45fa04:	ret
  45fa08:	b.ne	45fa00 <_obstack_memory_used@@Base+0x30d8>  // b.any
  45fa0c:	ldr	x0, [x0, #8]
  45fa10:	ret
  45fa14:	nop
  45fa18:	mov	x2, x0
  45fa1c:	ldr	x0, [x0, #288]
  45fa20:	cbz	x0, 45fa38 <_obstack_memory_used@@Base+0x3110>
  45fa24:	ldr	x1, [x1]
  45fa28:	ldr	x0, [x0, #8]
  45fa2c:	ldr	x0, [x0, #16]
  45fa30:	tbnz	w1, #31, 45fa40 <_obstack_memory_used@@Base+0x3118>
  45fa34:	b	45f9d8 <_obstack_memory_used@@Base+0x30b0>
  45fa38:	mov	w1, #0x1                   	// #1
  45fa3c:	str	w1, [x2, #304]
  45fa40:	ret
  45fa44:	nop
  45fa48:	cbz	x1, 45fb1c <_obstack_memory_used@@Base+0x31f4>
  45fa4c:	stp	x29, x30, [sp, #-48]!
  45fa50:	mov	x29, sp
  45fa54:	stp	x21, x22, [sp, #32]
  45fa58:	mov	x21, #0x8001                	// #32769
  45fa5c:	movk	x21, #0x410, lsl #16
  45fa60:	movk	x21, #0xc600, lsl #32
  45fa64:	stp	x19, x20, [sp, #16]
  45fa68:	mov	x20, x0
  45fa6c:	mov	x19, x1
  45fa70:	mov	x22, #0x1                   	// #1
  45fa74:	movk	x21, #0x19, lsl #48
  45fa78:	ldr	w2, [x19]
  45fa7c:	cmp	w2, #0x8
  45fa80:	b.eq	45fa98 <_obstack_memory_used@@Base+0x3170>  // b.none
  45fa84:	b.hi	45faec <_obstack_memory_used@@Base+0x31c4>  // b.pmore
  45fa88:	cmp	w2, #0x6
  45fa8c:	b.eq	45faa0 <_obstack_memory_used@@Base+0x3178>  // b.none
  45fa90:	cmp	w2, #0x7
  45fa94:	b.ne	45fab4 <_obstack_memory_used@@Base+0x318c>  // b.any
  45fa98:	ldr	x19, [x19, #16]
  45fa9c:	cbnz	x19, 45fa78 <_obstack_memory_used@@Base+0x3150>
  45faa0:	mov	x0, #0x0                   	// #0
  45faa4:	ldp	x19, x20, [sp, #16]
  45faa8:	ldp	x21, x22, [sp, #32]
  45faac:	ldp	x29, x30, [sp], #48
  45fab0:	ret
  45fab4:	cbz	w2, 45faa0 <_obstack_memory_used@@Base+0x3178>
  45fab8:	cmp	w2, #0x5
  45fabc:	b.ne	45fb08 <_obstack_memory_used@@Base+0x31e0>  // b.any
  45fac0:	add	x1, x19, #0x8
  45fac4:	mov	x0, x20
  45fac8:	bl	45fa18 <_obstack_memory_used@@Base+0x30f0>
  45facc:	cbz	x0, 45faa0 <_obstack_memory_used@@Base+0x3178>
  45fad0:	ldr	w1, [x0]
  45fad4:	cmp	w1, #0x2f
  45fad8:	b.ne	45faa0 <_obstack_memory_used@@Base+0x3178>  // b.any
  45fadc:	ldp	x19, x20, [sp, #16]
  45fae0:	ldp	x21, x22, [sp, #32]
  45fae4:	ldp	x29, x30, [sp], #48
  45fae8:	ret
  45faec:	sub	w2, w2, #0x18
  45faf0:	cmp	w2, #0x34
  45faf4:	b.hi	45fb08 <_obstack_memory_used@@Base+0x31e0>  // b.pmore
  45faf8:	lsl	x2, x22, x2
  45fafc:	tst	x2, x21
  45fb00:	b.ne	45faa0 <_obstack_memory_used@@Base+0x3178>  // b.any
  45fb04:	tbnz	w2, #27, 45fa98 <_obstack_memory_used@@Base+0x3170>
  45fb08:	ldr	x1, [x19, #8]
  45fb0c:	mov	x0, x20
  45fb10:	bl	45fa48 <_obstack_memory_used@@Base+0x3120>
  45fb14:	cbz	x0, 45fa98 <_obstack_memory_used@@Base+0x3170>
  45fb18:	b	45faa4 <_obstack_memory_used@@Base+0x317c>
  45fb1c:	mov	x0, #0x0                   	// #0
  45fb20:	ret
  45fb24:	nop
  45fb28:	stp	x29, x30, [sp, #-48]!
  45fb2c:	mov	x29, sp
  45fb30:	stp	x19, x20, [sp, #16]
  45fb34:	mov	x19, x2
  45fb38:	add	x2, x1, #0x1
  45fb3c:	stp	x21, x22, [sp, #32]
  45fb40:	mov	x21, x1
  45fb44:	mov	x22, x0
  45fb48:	ldp	x1, x20, [x19, #8]
  45fb4c:	add	x1, x2, x1
  45fb50:	ldr	w2, [x19, #24]
  45fb54:	cmp	x1, x20
  45fb58:	b.hi	45fb9c <_obstack_memory_used@@Base+0x3274>  // b.pmore
  45fb5c:	cbnz	w2, 45fb8c <_obstack_memory_used@@Base+0x3264>
  45fb60:	ldp	x3, x0, [x19]
  45fb64:	mov	x1, x22
  45fb68:	mov	x2, x21
  45fb6c:	add	x0, x3, x0
  45fb70:	bl	402220 <memcpy@plt>
  45fb74:	ldp	x0, x1, [x19]
  45fb78:	add	x0, x0, x21
  45fb7c:	strb	wzr, [x0, x1]
  45fb80:	ldr	x1, [x19, #8]
  45fb84:	add	x1, x1, x21
  45fb88:	str	x1, [x19, #8]
  45fb8c:	ldp	x19, x20, [sp, #16]
  45fb90:	ldp	x21, x22, [sp, #32]
  45fb94:	ldp	x29, x30, [sp], #48
  45fb98:	ret
  45fb9c:	cbnz	w2, 45fb8c <_obstack_memory_used@@Base+0x3264>
  45fba0:	cbz	x20, 45fbd8 <_obstack_memory_used@@Base+0x32b0>
  45fba4:	nop
  45fba8:	lsl	x20, x20, #1
  45fbac:	cmp	x1, x20
  45fbb0:	b.hi	45fba8 <_obstack_memory_used@@Base+0x3280>  // b.pmore
  45fbb4:	ldr	x0, [x19]
  45fbb8:	mov	x1, x20
  45fbbc:	bl	4024a0 <realloc@plt>
  45fbc0:	cbz	x0, 45fbe8 <_obstack_memory_used@@Base+0x32c0>
  45fbc4:	ldr	w2, [x19, #24]
  45fbc8:	str	x0, [x19]
  45fbcc:	str	x20, [x19, #16]
  45fbd0:	cbz	w2, 45fb60 <_obstack_memory_used@@Base+0x3238>
  45fbd4:	b	45fb8c <_obstack_memory_used@@Base+0x3264>
  45fbd8:	cmp	x1, #0x2
  45fbdc:	mov	x20, #0x2                   	// #2
  45fbe0:	b.hi	45fba8 <_obstack_memory_used@@Base+0x3280>  // b.pmore
  45fbe4:	b	45fbb4 <_obstack_memory_used@@Base+0x328c>
  45fbe8:	ldr	x0, [x19]
  45fbec:	bl	402640 <free@plt>
  45fbf0:	stp	xzr, xzr, [x19]
  45fbf4:	mov	w0, #0x1                   	// #1
  45fbf8:	str	xzr, [x19, #16]
  45fbfc:	str	w0, [x19, #24]
  45fc00:	b	45fb8c <_obstack_memory_used@@Base+0x3264>
  45fc04:	nop
  45fc08:	stp	x29, x30, [sp, #-112]!
  45fc0c:	mov	x29, sp
  45fc10:	ldr	x2, [x0, #24]
  45fc14:	stp	x19, x20, [sp, #16]
  45fc18:	mov	x19, x0
  45fc1c:	str	xzr, [sp, #104]
  45fc20:	ldrb	w3, [x2]
  45fc24:	cmp	w3, w1, uxtb
  45fc28:	b.eq	460328 <_obstack_memory_used@@Base+0x3a00>  // b.none
  45fc2c:	stp	x21, x22, [sp, #32]
  45fc30:	add	x21, sp, #0x68
  45fc34:	mov	w22, #0x1                   	// #1
  45fc38:	stp	x23, x24, [sp, #48]
  45fc3c:	and	w23, w1, #0xff
  45fc40:	mov	w24, #0x6d                  	// #109
  45fc44:	stp	x25, x26, [sp, #64]
  45fc48:	ldr	w25, [x19, #76]
  45fc4c:	str	w22, [x19, #76]
  45fc50:	ldrb	w0, [x2]
  45fc54:	cmp	w0, #0x4c
  45fc58:	b.eq	45fe28 <_obstack_memory_used@@Base+0x3500>  // b.none
  45fc5c:	cmp	w0, #0x54
  45fc60:	b.eq	45feb8 <_obstack_memory_used@@Base+0x3590>  // b.none
  45fc64:	cmp	w0, #0x73
  45fc68:	b.eq	45fde8 <_obstack_memory_used@@Base+0x34c0>  // b.none
  45fc6c:	cmp	w0, #0x66
  45fc70:	b.ne	45fd0c <_obstack_memory_used@@Base+0x33e4>  // b.any
  45fc74:	ldrb	w0, [x2, #1]
  45fc78:	cmp	w0, #0x70
  45fc7c:	b.eq	45fec8 <_obstack_memory_used@@Base+0x35a0>  // b.none
  45fc80:	mov	x0, x19
  45fc84:	bl	462628 <_obstack_memory_used@@Base+0x5d00>
  45fc88:	mov	x20, x0
  45fc8c:	cbz	x0, 45fcec <_obstack_memory_used@@Base+0x33c4>
  45fc90:	ldr	w0, [x0]
  45fc94:	cmp	w0, #0x32
  45fc98:	b.eq	45ff30 <_obstack_memory_used@@Base+0x3608>  // b.none
  45fc9c:	cmp	w0, #0x34
  45fca0:	b.eq	460348 <_obstack_memory_used@@Base+0x3a20>  // b.none
  45fca4:	b.hi	45fce8 <_obstack_memory_used@@Base+0x33c0>  // b.pmore
  45fca8:	cmp	w0, #0x33
  45fcac:	b.ne	45fce8 <_obstack_memory_used@@Base+0x33c0>  // b.any
  45fcb0:	ldr	w0, [x20, #8]
  45fcb4:	cmp	w0, #0x2
  45fcb8:	b.eq	45fce8 <_obstack_memory_used@@Base+0x33c0>  // b.none
  45fcbc:	b.gt	45fce8 <_obstack_memory_used@@Base+0x33c0>
  45fcc0:	cbnz	w0, 4600f8 <_obstack_memory_used@@Base+0x37d0>
  45fcc4:	mov	x2, x20
  45fcc8:	mov	x0, x19
  45fccc:	mov	x3, #0x0                   	// #0
  45fcd0:	mov	w1, #0x36                  	// #54
  45fcd4:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  45fcd8:	mov	x20, x0
  45fcdc:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  45fce0:	ldr	x27, [sp, #80]
  45fce4:	nop
  45fce8:	mov	x20, #0x0                   	// #0
  45fcec:	str	w25, [x19, #76]
  45fcf0:	mov	x0, x20
  45fcf4:	ldp	x19, x20, [sp, #16]
  45fcf8:	ldp	x21, x22, [sp, #32]
  45fcfc:	ldp	x23, x24, [sp, #48]
  45fd00:	ldp	x25, x26, [sp, #64]
  45fd04:	ldp	x29, x30, [sp], #112
  45fd08:	ret
  45fd0c:	sub	w1, w0, #0x30
  45fd10:	and	w1, w1, #0xff
  45fd14:	cmp	w1, #0x9
  45fd18:	b.hi	45fe38 <_obstack_memory_used@@Base+0x3510>  // b.pmore
  45fd1c:	mov	x0, x19
  45fd20:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  45fd24:	mov	x20, x0
  45fd28:	cbz	x0, 45fcec <_obstack_memory_used@@Base+0x33c4>
  45fd2c:	ldr	x0, [x19, #24]
  45fd30:	ldrb	w1, [x0]
  45fd34:	cmp	w1, #0x49
  45fd38:	b.eq	45fd98 <_obstack_memory_used@@Base+0x3470>  // b.none
  45fd3c:	str	w25, [x19, #76]
  45fd40:	mov	x2, x20
  45fd44:	mov	x0, x19
  45fd48:	mov	x3, #0x0                   	// #0
  45fd4c:	mov	w1, #0x2e                  	// #46
  45fd50:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  45fd54:	str	x0, [x21]
  45fd58:	cbz	x0, 45fdc8 <_obstack_memory_used@@Base+0x34a0>
  45fd5c:	ldr	x2, [x19, #24]
  45fd60:	add	x21, x0, #0x10
  45fd64:	ldrb	w0, [x2]
  45fd68:	cmp	w0, w23
  45fd6c:	b.ne	45fc48 <_obstack_memory_used@@Base+0x3320>  // b.any
  45fd70:	ldr	x20, [sp, #104]
  45fd74:	add	x2, x2, #0x1
  45fd78:	str	x2, [x19, #24]
  45fd7c:	mov	x0, x20
  45fd80:	ldp	x19, x20, [sp, #16]
  45fd84:	ldp	x21, x22, [sp, #32]
  45fd88:	ldp	x23, x24, [sp, #48]
  45fd8c:	ldp	x25, x26, [sp, #64]
  45fd90:	ldp	x29, x30, [sp], #112
  45fd94:	ret
  45fd98:	add	x0, x0, #0x1
  45fd9c:	str	x0, [x19, #24]
  45fda0:	mov	x0, x19
  45fda4:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  45fda8:	mov	x3, x0
  45fdac:	mov	x2, x20
  45fdb0:	mov	x0, x19
  45fdb4:	mov	w1, #0x4                   	// #4
  45fdb8:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  45fdbc:	mov	x20, x0
  45fdc0:	str	w25, [x19, #76]
  45fdc4:	cbnz	x20, 45fd40 <_obstack_memory_used@@Base+0x3418>
  45fdc8:	mov	x20, #0x0                   	// #0
  45fdcc:	mov	x0, x20
  45fdd0:	ldp	x19, x20, [sp, #16]
  45fdd4:	ldp	x21, x22, [sp, #32]
  45fdd8:	ldp	x23, x24, [sp, #48]
  45fddc:	ldp	x25, x26, [sp, #64]
  45fde0:	ldp	x29, x30, [sp], #112
  45fde4:	ret
  45fde8:	ldrb	w0, [x2, #1]
  45fdec:	cmp	w0, #0x72
  45fdf0:	b.eq	460078 <_obstack_memory_used@@Base+0x3750>  // b.none
  45fdf4:	cmp	w0, #0x70
  45fdf8:	b.ne	45fc80 <_obstack_memory_used@@Base+0x3358>  // b.any
  45fdfc:	add	x2, x2, #0x2
  45fe00:	str	x2, [x19, #24]
  45fe04:	mov	x0, x19
  45fe08:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  45fe0c:	mov	x2, x0
  45fe10:	mov	x3, #0x0                   	// #0
  45fe14:	mov	x0, x19
  45fe18:	mov	w1, #0x4b                  	// #75
  45fe1c:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  45fe20:	mov	x20, x0
  45fe24:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  45fe28:	mov	x0, x19
  45fe2c:	bl	4631d0 <_obstack_memory_used@@Base+0x68a8>
  45fe30:	mov	x20, x0
  45fe34:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  45fe38:	cmp	w0, #0x6f
  45fe3c:	b.ne	45fe58 <_obstack_memory_used@@Base+0x3530>  // b.any
  45fe40:	ldrb	w0, [x2, #1]
  45fe44:	cmp	w0, #0x6e
  45fe48:	b.ne	45fc80 <_obstack_memory_used@@Base+0x3358>  // b.any
  45fe4c:	add	x2, x2, #0x2
  45fe50:	str	x2, [x19, #24]
  45fe54:	b	45fd1c <_obstack_memory_used@@Base+0x33f4>
  45fe58:	cmp	w0, #0x69
  45fe5c:	mov	w1, #0x74                  	// #116
  45fe60:	ccmp	w0, w1, #0x4, ne  // ne = any
  45fe64:	b.ne	45fc80 <_obstack_memory_used@@Base+0x3358>  // b.any
  45fe68:	ldrb	w1, [x2, #1]
  45fe6c:	cmp	w1, #0x6c
  45fe70:	b.ne	45fc80 <_obstack_memory_used@@Base+0x3358>  // b.any
  45fe74:	add	x1, x2, #0x2
  45fe78:	str	x1, [x19, #24]
  45fe7c:	cmp	w0, #0x74
  45fe80:	mov	x20, #0x0                   	// #0
  45fe84:	b.eq	4601c8 <_obstack_memory_used@@Base+0x38a0>  // b.none
  45fe88:	ldrb	w0, [x1, #1]
  45fe8c:	cbz	w0, 45fce8 <_obstack_memory_used@@Base+0x33c0>
  45fe90:	mov	w1, #0x45                  	// #69
  45fe94:	mov	x0, x19
  45fe98:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  45fe9c:	mov	x3, x0
  45fea0:	mov	x2, x20
  45fea4:	mov	x0, x19
  45fea8:	mov	w1, #0x31                  	// #49
  45feac:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  45feb0:	mov	x20, x0
  45feb4:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  45feb8:	mov	x0, x19
  45febc:	bl	45f350 <_obstack_memory_used@@Base+0x2a28>
  45fec0:	mov	x20, x0
  45fec4:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  45fec8:	add	x0, x2, #0x2
  45fecc:	str	x0, [x19, #24]
  45fed0:	ldrb	w0, [x2, #2]
  45fed4:	cmp	w0, #0x54
  45fed8:	b.eq	460068 <_obstack_memory_used@@Base+0x3740>  // b.none
  45fedc:	mov	x0, x19
  45fee0:	bl	45f2d8 <_obstack_memory_used@@Base+0x29b0>
  45fee4:	mvn	x1, x0
  45fee8:	tst	x1, #0x7fffffff
  45feec:	b.eq	45fce8 <_obstack_memory_used@@Base+0x33c0>  // b.none
  45fef0:	add	w0, w0, #0x1
  45fef4:	ldp	w1, w2, [x19, #40]
  45fef8:	cmp	w1, w2
  45fefc:	b.ge	45fce8 <_obstack_memory_used@@Base+0x33c0>  // b.tcont
  45ff00:	mov	w3, #0x18                  	// #24
  45ff04:	add	w4, w1, #0x1
  45ff08:	ldr	x2, [x19, #32]
  45ff0c:	smull	x1, w1, w3
  45ff10:	mov	w3, #0x6                   	// #6
  45ff14:	sxtw	x0, w0
  45ff18:	add	x20, x2, x1
  45ff1c:	str	wzr, [x20, #4]
  45ff20:	str	w4, [x19, #40]
  45ff24:	str	w3, [x2, x1]
  45ff28:	str	x0, [x20, #8]
  45ff2c:	b	45fd3c <_obstack_memory_used@@Base+0x3414>
  45ff30:	ldr	x2, [x20, #8]
  45ff34:	ldr	w0, [x19, #72]
  45ff38:	ldr	w1, [x2, #16]
  45ff3c:	ldr	x26, [x2]
  45ff40:	sub	w1, w1, #0x2
  45ff44:	add	w0, w0, w1
  45ff48:	str	w0, [x19, #72]
  45ff4c:	ldrb	w1, [x26]
  45ff50:	cmp	w1, #0x73
  45ff54:	b.eq	460044 <_obstack_memory_used@@Base+0x371c>  // b.none
  45ff58:	str	x27, [sp, #80]
  45ff5c:	ldr	w27, [x2, #20]
  45ff60:	cmp	w27, #0x1
  45ff64:	b.eq	460110 <_obstack_memory_used@@Base+0x37e8>  // b.none
  45ff68:	b.le	4600ec <_obstack_memory_used@@Base+0x37c4>
  45ff6c:	cmp	w27, #0x2
  45ff70:	b.eq	460230 <_obstack_memory_used@@Base+0x3908>  // b.none
  45ff74:	cmp	w27, #0x3
  45ff78:	b.ne	45fce0 <_obstack_memory_used@@Base+0x33b8>  // b.any
  45ff7c:	cmp	w1, #0x71
  45ff80:	b.eq	4601e4 <_obstack_memory_used@@Base+0x38bc>  // b.none
  45ff84:	ldrb	w0, [x26]
  45ff88:	cmp	w0, #0x66
  45ff8c:	b.eq	4603b4 <_obstack_memory_used@@Base+0x3a8c>  // b.none
  45ff90:	cmp	w0, #0x6e
  45ff94:	b.ne	460220 <_obstack_memory_used@@Base+0x38f8>  // b.any
  45ff98:	ldrb	w0, [x26, #1]
  45ff9c:	mov	w1, #0x61                  	// #97
  45ffa0:	cmp	w0, #0x77
  45ffa4:	ccmp	w0, w1, #0x4, ne  // ne = any
  45ffa8:	b.ne	460220 <_obstack_memory_used@@Base+0x38f8>  // b.any
  45ffac:	mov	w1, #0x5f                  	// #95
  45ffb0:	mov	x0, x19
  45ffb4:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  45ffb8:	mov	x26, x0
  45ffbc:	mov	x0, x19
  45ffc0:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  45ffc4:	ldr	x1, [x19, #24]
  45ffc8:	mov	x27, x0
  45ffcc:	ldrb	w0, [x1]
  45ffd0:	cmp	w0, #0x45
  45ffd4:	b.eq	460414 <_obstack_memory_used@@Base+0x3aec>  // b.none
  45ffd8:	cmp	w0, #0x70
  45ffdc:	b.eq	4603ec <_obstack_memory_used@@Base+0x3ac4>  // b.none
  45ffe0:	cmp	w0, #0x69
  45ffe4:	b.ne	460220 <_obstack_memory_used@@Base+0x38f8>  // b.any
  45ffe8:	ldrb	w0, [x1, #1]
  45ffec:	cmp	w0, #0x6c
  45fff0:	b.ne	460220 <_obstack_memory_used@@Base+0x38f8>  // b.any
  45fff4:	mov	x0, x19
  45fff8:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  45fffc:	mov	x3, x0
  460000:	mov	x2, x27
  460004:	mov	w1, #0x3c                  	// #60
  460008:	mov	x0, x19
  46000c:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460010:	mov	x2, x26
  460014:	mov	x3, x0
  460018:	mov	w1, #0x3b                  	// #59
  46001c:	mov	x0, x19
  460020:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460024:	mov	x3, x0
  460028:	mov	x2, x20
  46002c:	mov	x0, x19
  460030:	mov	w1, #0x3a                  	// #58
  460034:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460038:	mov	x20, x0
  46003c:	ldr	x27, [sp, #80]
  460040:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  460044:	ldrb	w0, [x26, #1]
  460048:	cmp	w0, #0x74
  46004c:	b.ne	45ff58 <_obstack_memory_used@@Base+0x3630>  // b.any
  460050:	ldrb	w0, [x26, #2]
  460054:	cbnz	w0, 45ff58 <_obstack_memory_used@@Base+0x3630>
  460058:	mov	x0, x19
  46005c:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  460060:	mov	x3, x0
  460064:	b	460154 <_obstack_memory_used@@Base+0x382c>
  460068:	add	x2, x2, #0x3
  46006c:	mov	w0, #0x0                   	// #0
  460070:	str	x2, [x19, #24]
  460074:	b	45fef4 <_obstack_memory_used@@Base+0x35cc>
  460078:	add	x2, x2, #0x2
  46007c:	str	x2, [x19, #24]
  460080:	mov	x0, x19
  460084:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  460088:	mov	x20, x0
  46008c:	mov	x0, x19
  460090:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  460094:	ldr	x1, [x19, #24]
  460098:	mov	x26, x0
  46009c:	mov	x3, x26
  4600a0:	ldrb	w0, [x1]
  4600a4:	cmp	w0, #0x49
  4600a8:	b.ne	4600d4 <_obstack_memory_used@@Base+0x37ac>  // b.any
  4600ac:	add	x1, x1, #0x1
  4600b0:	str	x1, [x19, #24]
  4600b4:	mov	x0, x19
  4600b8:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  4600bc:	mov	x3, x0
  4600c0:	mov	x2, x26
  4600c4:	mov	x0, x19
  4600c8:	mov	w1, #0x4                   	// #4
  4600cc:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4600d0:	mov	x3, x0
  4600d4:	mov	x2, x20
  4600d8:	mov	x0, x19
  4600dc:	mov	w1, #0x1                   	// #1
  4600e0:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4600e4:	mov	x20, x0
  4600e8:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  4600ec:	cbnz	w27, 45fce0 <_obstack_memory_used@@Base+0x33b8>
  4600f0:	ldr	x27, [sp, #80]
  4600f4:	b	45fcc4 <_obstack_memory_used@@Base+0x339c>
  4600f8:	cmp	w0, #0x1
  4600fc:	b.ne	45fce8 <_obstack_memory_used@@Base+0x33c0>  // b.any
  460100:	mov	x0, x19
  460104:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460108:	mov	x3, x0
  46010c:	b	460154 <_obstack_memory_used@@Base+0x382c>
  460110:	ldrb	w0, [x26]
  460114:	cmp	w0, #0x70
  460118:	ccmp	w0, w24, #0x4, ne  // ne = any
  46011c:	b.eq	460198 <_obstack_memory_used@@Base+0x3870>  // b.none
  460120:	mov	w27, #0x0                   	// #0
  460124:	cmp	w1, #0x73
  460128:	b.ne	46016c <_obstack_memory_used@@Base+0x3844>  // b.any
  46012c:	ldrb	w0, [x26, #1]
  460130:	cmp	w0, #0x50
  460134:	b.ne	46016c <_obstack_memory_used@@Base+0x3844>  // b.any
  460138:	ldrb	w0, [x26, #2]
  46013c:	cbnz	w0, 46016c <_obstack_memory_used@@Base+0x3844>
  460140:	mov	x0, x19
  460144:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  460148:	mov	x3, x0
  46014c:	cbnz	w27, 46017c <_obstack_memory_used@@Base+0x3854>
  460150:	ldr	x27, [sp, #80]
  460154:	mov	x2, x20
  460158:	mov	x0, x19
  46015c:	mov	w1, #0x37                  	// #55
  460160:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460164:	mov	x20, x0
  460168:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  46016c:	mov	x0, x19
  460170:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460174:	mov	x3, x0
  460178:	cbz	w27, 460150 <_obstack_memory_used@@Base+0x3828>
  46017c:	mov	x2, x3
  460180:	mov	x0, x19
  460184:	mov	w1, #0x39                  	// #57
  460188:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  46018c:	mov	x3, x0
  460190:	ldr	x27, [sp, #80]
  460194:	b	460154 <_obstack_memory_used@@Base+0x382c>
  460198:	ldrb	w2, [x26, #1]
  46019c:	cmp	w2, w0
  4601a0:	b.ne	460120 <_obstack_memory_used@@Base+0x37f8>  // b.any
  4601a4:	ldr	x0, [x19, #24]
  4601a8:	ldrb	w2, [x0]
  4601ac:	cmp	w2, #0x5f
  4601b0:	b.ne	460124 <_obstack_memory_used@@Base+0x37fc>  // b.any
  4601b4:	add	x0, x0, #0x1
  4601b8:	str	x0, [x19, #24]
  4601bc:	mov	w27, #0x0                   	// #0
  4601c0:	ldrb	w1, [x26]
  4601c4:	b	460124 <_obstack_memory_used@@Base+0x37fc>
  4601c8:	mov	x0, x19
  4601cc:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  4601d0:	ldr	x1, [x19, #24]
  4601d4:	mov	x20, x0
  4601d8:	ldrb	w0, [x1, #1]
  4601dc:	cbnz	w0, 45fe90 <_obstack_memory_used@@Base+0x3568>
  4601e0:	b	45fce8 <_obstack_memory_used@@Base+0x33c0>
  4601e4:	ldrb	w0, [x26, #1]
  4601e8:	cmp	w0, #0x75
  4601ec:	b.ne	45ff84 <_obstack_memory_used@@Base+0x365c>  // b.any
  4601f0:	ldrb	w0, [x26, #2]
  4601f4:	cbnz	w0, 45ff84 <_obstack_memory_used@@Base+0x365c>
  4601f8:	mov	x0, x19
  4601fc:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460200:	mov	x26, x0
  460204:	mov	x0, x19
  460208:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  46020c:	mov	x27, x0
  460210:	mov	x0, x19
  460214:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460218:	mov	x3, x0
  46021c:	cbnz	x0, 460000 <_obstack_memory_used@@Base+0x36d8>
  460220:	mov	x20, #0x0                   	// #0
  460224:	ldr	x27, [sp, #80]
  460228:	str	w25, [x19, #76]
  46022c:	b	45fcf0 <_obstack_memory_used@@Base+0x33c8>
  460230:	ldr	x0, [x20, #8]
  460234:	ldr	x0, [x0]
  460238:	ldrb	w1, [x0, #1]
  46023c:	cmp	w1, #0x63
  460240:	b.eq	460374 <_obstack_memory_used@@Base+0x3a4c>  // b.none
  460244:	ldrb	w0, [x26]
  460248:	cmp	w0, #0x66
  46024c:	b.eq	4603a4 <_obstack_memory_used@@Base+0x3a7c>  // b.none
  460250:	mov	x0, x19
  460254:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460258:	mov	x27, x0
  46025c:	ldrb	w1, [x26]
  460260:	cmp	w1, #0x63
  460264:	b.ne	460290 <_obstack_memory_used@@Base+0x3968>  // b.any
  460268:	ldrb	w0, [x26, #1]
  46026c:	cmp	w0, #0x6c
  460270:	b.ne	460290 <_obstack_memory_used@@Base+0x3968>  // b.any
  460274:	ldrb	w0, [x26, #2]
  460278:	cbnz	w0, 460290 <_obstack_memory_used@@Base+0x3968>
  46027c:	mov	x0, x19
  460280:	mov	w1, #0x45                  	// #69
  460284:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  460288:	mov	x26, x0
  46028c:	b	4602c8 <_obstack_memory_used@@Base+0x39a0>
  460290:	cmp	w1, #0x64
  460294:	b.ne	4602fc <_obstack_memory_used@@Base+0x39d4>  // b.any
  460298:	ldrb	w0, [x26, #1]
  46029c:	cmp	w0, #0x74
  4602a0:	b.ne	4602fc <_obstack_memory_used@@Base+0x39d4>  // b.any
  4602a4:	ldrb	w0, [x26, #2]
  4602a8:	cbnz	w0, 4602fc <_obstack_memory_used@@Base+0x39d4>
  4602ac:	mov	x0, x19
  4602b0:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  4602b4:	ldr	x1, [x19, #24]
  4602b8:	mov	x26, x0
  4602bc:	ldrb	w0, [x1]
  4602c0:	cmp	w0, #0x49
  4602c4:	b.eq	4603c0 <_obstack_memory_used@@Base+0x3a98>  // b.none
  4602c8:	mov	x2, x27
  4602cc:	mov	x3, x26
  4602d0:	mov	w1, #0x39                  	// #57
  4602d4:	mov	x0, x19
  4602d8:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4602dc:	mov	x3, x0
  4602e0:	mov	x2, x20
  4602e4:	mov	x0, x19
  4602e8:	mov	w1, #0x38                  	// #56
  4602ec:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4602f0:	mov	x20, x0
  4602f4:	ldr	x27, [sp, #80]
  4602f8:	b	45fdc0 <_obstack_memory_used@@Base+0x3498>
  4602fc:	cmp	w1, #0x70
  460300:	b.ne	460318 <_obstack_memory_used@@Base+0x39f0>  // b.any
  460304:	ldrb	w0, [x26, #1]
  460308:	cmp	w0, #0x74
  46030c:	b.ne	460318 <_obstack_memory_used@@Base+0x39f0>  // b.any
  460310:	ldrb	w0, [x26, #2]
  460314:	cbz	w0, 4602ac <_obstack_memory_used@@Base+0x3984>
  460318:	mov	x0, x19
  46031c:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460320:	mov	x26, x0
  460324:	b	4602c8 <_obstack_memory_used@@Base+0x39a0>
  460328:	add	x2, x2, #0x1
  46032c:	str	x2, [x0, #24]
  460330:	ldp	x19, x20, [sp, #16]
  460334:	mov	x3, #0x0                   	// #0
  460338:	ldp	x29, x30, [sp], #112
  46033c:	mov	w1, #0x2e                  	// #46
  460340:	mov	x2, #0x0                   	// #0
  460344:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460348:	ldr	x0, [x19, #24]
  46034c:	ldrb	w1, [x0]
  460350:	cmp	w1, #0x5f
  460354:	b.ne	460100 <_obstack_memory_used@@Base+0x37d8>  // b.any
  460358:	add	x0, x0, #0x1
  46035c:	str	x0, [x19, #24]
  460360:	mov	w1, #0x45                  	// #69
  460364:	mov	x0, x19
  460368:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  46036c:	mov	x3, x0
  460370:	b	460154 <_obstack_memory_used@@Base+0x382c>
  460374:	ldrb	w0, [x0]
  460378:	sub	w1, w0, #0x72
  46037c:	sub	w0, w0, #0x63
  460380:	and	w1, w1, #0xff
  460384:	and	w0, w0, #0xff
  460388:	cmp	w1, #0x1
  46038c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  460390:	b.hi	460244 <_obstack_memory_used@@Base+0x391c>  // b.pmore
  460394:	mov	x0, x19
  460398:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  46039c:	mov	x27, x0
  4603a0:	b	46025c <_obstack_memory_used@@Base+0x3934>
  4603a4:	mov	x0, x19
  4603a8:	bl	462628 <_obstack_memory_used@@Base+0x5d00>
  4603ac:	mov	x27, x0
  4603b0:	b	46025c <_obstack_memory_used@@Base+0x3934>
  4603b4:	mov	x0, x19
  4603b8:	bl	462628 <_obstack_memory_used@@Base+0x5d00>
  4603bc:	b	460200 <_obstack_memory_used@@Base+0x38d8>
  4603c0:	add	x1, x1, #0x1
  4603c4:	str	x1, [x19, #24]
  4603c8:	mov	x0, x19
  4603cc:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  4603d0:	mov	x3, x0
  4603d4:	mov	x2, x26
  4603d8:	mov	x0, x19
  4603dc:	mov	w1, #0x4                   	// #4
  4603e0:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4603e4:	mov	x26, x0
  4603e8:	b	4602c8 <_obstack_memory_used@@Base+0x39a0>
  4603ec:	ldrb	w0, [x1, #1]
  4603f0:	cmp	w0, #0x69
  4603f4:	b.ne	460220 <_obstack_memory_used@@Base+0x38f8>  // b.any
  4603f8:	add	x1, x1, #0x2
  4603fc:	str	x1, [x19, #24]
  460400:	mov	x0, x19
  460404:	mov	w1, #0x45                  	// #69
  460408:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  46040c:	mov	x3, x0
  460410:	b	460000 <_obstack_memory_used@@Base+0x36d8>
  460414:	add	x1, x1, #0x1
  460418:	mov	x3, #0x0                   	// #0
  46041c:	str	x1, [x19, #24]
  460420:	b	460000 <_obstack_memory_used@@Base+0x36d8>
  460424:	nop
  460428:	ldr	x2, [x0, #24]
  46042c:	ldrb	w1, [x2]
  460430:	cmp	w1, #0x4c
  460434:	b.eq	4605c4 <_obstack_memory_used@@Base+0x3c9c>  // b.none
  460438:	cmp	w1, #0x54
  46043c:	b.eq	460648 <_obstack_memory_used@@Base+0x3d20>  // b.none
  460440:	stp	x29, x30, [sp, #-48]!
  460444:	cmp	w1, #0x73
  460448:	mov	x29, sp
  46044c:	stp	x19, x20, [sp, #16]
  460450:	mov	x19, x0
  460454:	b.eq	46050c <_obstack_memory_used@@Base+0x3be4>  // b.none
  460458:	cmp	w1, #0x66
  46045c:	b.eq	4604a0 <_obstack_memory_used@@Base+0x3b78>  // b.none
  460460:	sub	w3, w1, #0x30
  460464:	and	w3, w3, #0xff
  460468:	cmp	w3, #0x9
  46046c:	b.hi	4605c8 <_obstack_memory_used@@Base+0x3ca0>  // b.pmore
  460470:	mov	x0, x19
  460474:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  460478:	mov	x20, x0
  46047c:	cbz	x0, 4605b0 <_obstack_memory_used@@Base+0x3c88>
  460480:	ldr	x0, [x19, #24]
  460484:	ldrb	w1, [x0]
  460488:	cmp	w1, #0x49
  46048c:	b.eq	460720 <_obstack_memory_used@@Base+0x3df8>  // b.none
  460490:	mov	x0, x20
  460494:	ldp	x19, x20, [sp, #16]
  460498:	ldp	x29, x30, [sp], #48
  46049c:	ret
  4604a0:	ldrb	w1, [x2, #1]
  4604a4:	cmp	w1, #0x70
  4604a8:	b.eq	460548 <_obstack_memory_used@@Base+0x3c20>  // b.none
  4604ac:	mov	x0, x19
  4604b0:	bl	462628 <_obstack_memory_used@@Base+0x5d00>
  4604b4:	mov	x20, x0
  4604b8:	cbz	x0, 4605b0 <_obstack_memory_used@@Base+0x3c88>
  4604bc:	ldr	w0, [x0]
  4604c0:	cmp	w0, #0x32
  4604c4:	b.eq	46064c <_obstack_memory_used@@Base+0x3d24>  // b.none
  4604c8:	cmp	w0, #0x34
  4604cc:	b.eq	460a78 <_obstack_memory_used@@Base+0x4150>  // b.none
  4604d0:	b.hi	4605b0 <_obstack_memory_used@@Base+0x3c88>  // b.pmore
  4604d4:	cmp	w0, #0x33
  4604d8:	b.ne	4605b0 <_obstack_memory_used@@Base+0x3c88>  // b.any
  4604dc:	ldr	w0, [x20, #8]
  4604e0:	cmp	w0, #0x2
  4604e4:	b.eq	4605b0 <_obstack_memory_used@@Base+0x3c88>  // b.none
  4604e8:	b.gt	4605b0 <_obstack_memory_used@@Base+0x3c88>
  4604ec:	cbnz	w0, 460814 <_obstack_memory_used@@Base+0x3eec>
  4604f0:	mov	x2, x20
  4604f4:	mov	x0, x19
  4604f8:	ldp	x19, x20, [sp, #16]
  4604fc:	mov	x3, #0x0                   	// #0
  460500:	ldp	x29, x30, [sp], #48
  460504:	mov	w1, #0x36                  	// #54
  460508:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  46050c:	ldrb	w1, [x2, #1]
  460510:	cmp	w1, #0x72
  460514:	b.eq	46074c <_obstack_memory_used@@Base+0x3e24>  // b.none
  460518:	cmp	w1, #0x70
  46051c:	b.ne	4604ac <_obstack_memory_used@@Base+0x3b84>  // b.any
  460520:	add	x2, x2, #0x2
  460524:	str	x2, [x0, #24]
  460528:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  46052c:	mov	x2, x0
  460530:	mov	x0, x19
  460534:	mov	x3, #0x0                   	// #0
  460538:	ldp	x19, x20, [sp, #16]
  46053c:	mov	w1, #0x4b                  	// #75
  460540:	ldp	x29, x30, [sp], #48
  460544:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460548:	add	x1, x2, #0x2
  46054c:	str	x1, [x0, #24]
  460550:	ldrb	w1, [x2, #2]
  460554:	cmp	w1, #0x54
  460558:	b.eq	4608d8 <_obstack_memory_used@@Base+0x3fb0>  // b.none
  46055c:	bl	45f2d8 <_obstack_memory_used@@Base+0x29b0>
  460560:	mvn	x1, x0
  460564:	add	w0, w0, #0x1
  460568:	tst	x1, #0x7fffffff
  46056c:	b.eq	4605b0 <_obstack_memory_used@@Base+0x3c88>  // b.none
  460570:	ldp	w1, w2, [x19, #40]
  460574:	cmp	w1, w2
  460578:	b.ge	4605b0 <_obstack_memory_used@@Base+0x3c88>  // b.tcont
  46057c:	mov	w3, #0x18                  	// #24
  460580:	add	w4, w1, #0x1
  460584:	ldr	x2, [x19, #32]
  460588:	smull	x1, w1, w3
  46058c:	mov	w3, #0x6                   	// #6
  460590:	sxtw	x0, w0
  460594:	add	x20, x2, x1
  460598:	str	wzr, [x20, #4]
  46059c:	str	w4, [x19, #40]
  4605a0:	str	w3, [x2, x1]
  4605a4:	str	x0, [x20, #8]
  4605a8:	b	460490 <_obstack_memory_used@@Base+0x3b68>
  4605ac:	ldp	x21, x22, [sp, #32]
  4605b0:	mov	x20, #0x0                   	// #0
  4605b4:	mov	x0, x20
  4605b8:	ldp	x19, x20, [sp, #16]
  4605bc:	ldp	x29, x30, [sp], #48
  4605c0:	ret
  4605c4:	b	4631d0 <_obstack_memory_used@@Base+0x68a8>
  4605c8:	cmp	w1, #0x6f
  4605cc:	b.ne	4605e8 <_obstack_memory_used@@Base+0x3cc0>  // b.any
  4605d0:	ldrb	w0, [x2, #1]
  4605d4:	cmp	w0, #0x6e
  4605d8:	b.ne	4604ac <_obstack_memory_used@@Base+0x3b84>  // b.any
  4605dc:	add	x2, x2, #0x2
  4605e0:	str	x2, [x19, #24]
  4605e4:	b	460470 <_obstack_memory_used@@Base+0x3b48>
  4605e8:	cmp	w1, #0x69
  4605ec:	mov	w3, #0x74                  	// #116
  4605f0:	ccmp	w1, w3, #0x4, ne  // ne = any
  4605f4:	b.ne	4604ac <_obstack_memory_used@@Base+0x3b84>  // b.any
  4605f8:	ldrb	w3, [x2, #1]
  4605fc:	cmp	w3, #0x6c
  460600:	b.ne	4604ac <_obstack_memory_used@@Base+0x3b84>  // b.any
  460604:	add	x3, x2, #0x2
  460608:	str	x3, [x0, #24]
  46060c:	cmp	w1, #0x74
  460610:	mov	x20, #0x0                   	// #0
  460614:	b.eq	460804 <_obstack_memory_used@@Base+0x3edc>  // b.none
  460618:	ldrb	w0, [x3, #1]
  46061c:	cbz	w0, 4605b0 <_obstack_memory_used@@Base+0x3c88>
  460620:	mov	x0, x19
  460624:	mov	w1, #0x45                  	// #69
  460628:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  46062c:	mov	x3, x0
  460630:	mov	x2, x20
  460634:	mov	x0, x19
  460638:	ldp	x19, x20, [sp, #16]
  46063c:	mov	w1, #0x31                  	// #49
  460640:	ldp	x29, x30, [sp], #48
  460644:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460648:	b	45f350 <_obstack_memory_used@@Base+0x2a28>
  46064c:	ldr	x2, [x20, #8]
  460650:	stp	x21, x22, [sp, #32]
  460654:	ldr	w0, [x19, #72]
  460658:	ldr	w1, [x2, #16]
  46065c:	ldr	x21, [x2]
  460660:	sub	w1, w1, #0x2
  460664:	add	w0, w0, w1
  460668:	str	w0, [x19, #72]
  46066c:	ldrb	w1, [x21]
  460670:	cmp	w1, #0x73
  460674:	b.eq	46079c <_obstack_memory_used@@Base+0x3e74>  // b.none
  460678:	ldr	w22, [x2, #20]
  46067c:	cmp	w22, #0x1
  460680:	b.eq	46084c <_obstack_memory_used@@Base+0x3f24>  // b.none
  460684:	b.le	460840 <_obstack_memory_used@@Base+0x3f18>
  460688:	cmp	w22, #0x2
  46068c:	b.eq	460904 <_obstack_memory_used@@Base+0x3fdc>  // b.none
  460690:	cmp	w22, #0x3
  460694:	b.ne	4605ac <_obstack_memory_used@@Base+0x3c84>  // b.any
  460698:	cmp	w1, #0x71
  46069c:	b.ne	460994 <_obstack_memory_used@@Base+0x406c>  // b.any
  4606a0:	ldrb	w0, [x21, #1]
  4606a4:	cmp	w0, #0x75
  4606a8:	b.ne	460994 <_obstack_memory_used@@Base+0x406c>  // b.any
  4606ac:	ldrb	w0, [x21, #2]
  4606b0:	cbnz	w0, 460994 <_obstack_memory_used@@Base+0x406c>
  4606b4:	mov	x0, x19
  4606b8:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  4606bc:	mov	x21, x0
  4606c0:	mov	x0, x19
  4606c4:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  4606c8:	mov	x22, x0
  4606cc:	mov	x0, x19
  4606d0:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  4606d4:	mov	x3, x0
  4606d8:	cbz	x0, 4605ac <_obstack_memory_used@@Base+0x3c84>
  4606dc:	mov	x2, x22
  4606e0:	mov	x0, x19
  4606e4:	mov	w1, #0x3c                  	// #60
  4606e8:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4606ec:	mov	x2, x21
  4606f0:	mov	x3, x0
  4606f4:	mov	w1, #0x3b                  	// #59
  4606f8:	mov	x0, x19
  4606fc:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460700:	mov	x3, x0
  460704:	mov	x2, x20
  460708:	mov	x0, x19
  46070c:	ldp	x19, x20, [sp, #16]
  460710:	mov	w1, #0x3a                  	// #58
  460714:	ldp	x21, x22, [sp, #32]
  460718:	ldp	x29, x30, [sp], #48
  46071c:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460720:	add	x0, x0, #0x1
  460724:	str	x0, [x19, #24]
  460728:	mov	x0, x19
  46072c:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  460730:	mov	x3, x0
  460734:	mov	x2, x20
  460738:	mov	x0, x19
  46073c:	ldp	x19, x20, [sp, #16]
  460740:	mov	w1, #0x4                   	// #4
  460744:	ldp	x29, x30, [sp], #48
  460748:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  46074c:	add	x2, x2, #0x2
  460750:	stp	x21, x22, [sp, #32]
  460754:	str	x2, [x0, #24]
  460758:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  46075c:	mov	x20, x0
  460760:	mov	x0, x19
  460764:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  460768:	ldr	x1, [x19, #24]
  46076c:	mov	x21, x0
  460770:	mov	x3, x21
  460774:	ldrb	w0, [x1]
  460778:	cmp	w0, #0x49
  46077c:	b.eq	4607d8 <_obstack_memory_used@@Base+0x3eb0>  // b.none
  460780:	mov	x2, x20
  460784:	mov	x0, x19
  460788:	ldp	x19, x20, [sp, #16]
  46078c:	mov	w1, #0x1                   	// #1
  460790:	ldp	x21, x22, [sp, #32]
  460794:	ldp	x29, x30, [sp], #48
  460798:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  46079c:	ldrb	w0, [x21, #1]
  4607a0:	cmp	w0, #0x74
  4607a4:	b.ne	460678 <_obstack_memory_used@@Base+0x3d50>  // b.any
  4607a8:	ldrb	w0, [x21, #2]
  4607ac:	cbnz	w0, 460678 <_obstack_memory_used@@Base+0x3d50>
  4607b0:	mov	x0, x19
  4607b4:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  4607b8:	mov	x2, x20
  4607bc:	mov	x3, x0
  4607c0:	mov	x0, x19
  4607c4:	mov	w1, #0x37                  	// #55
  4607c8:	ldp	x19, x20, [sp, #16]
  4607cc:	ldp	x21, x22, [sp, #32]
  4607d0:	ldp	x29, x30, [sp], #48
  4607d4:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4607d8:	add	x1, x1, #0x1
  4607dc:	str	x1, [x19, #24]
  4607e0:	mov	x0, x19
  4607e4:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  4607e8:	mov	x3, x0
  4607ec:	mov	x2, x21
  4607f0:	mov	x0, x19
  4607f4:	mov	w1, #0x4                   	// #4
  4607f8:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4607fc:	mov	x3, x0
  460800:	b	460780 <_obstack_memory_used@@Base+0x3e58>
  460804:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  460808:	mov	x20, x0
  46080c:	ldr	x3, [x19, #24]
  460810:	b	460618 <_obstack_memory_used@@Base+0x3cf0>
  460814:	cmp	w0, #0x1
  460818:	b.ne	4605b0 <_obstack_memory_used@@Base+0x3c88>  // b.any
  46081c:	mov	x0, x19
  460820:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460824:	mov	x3, x0
  460828:	mov	x2, x20
  46082c:	mov	x0, x19
  460830:	ldp	x19, x20, [sp, #16]
  460834:	mov	w1, #0x37                  	// #55
  460838:	ldp	x29, x30, [sp], #48
  46083c:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460840:	cbnz	w22, 4605ac <_obstack_memory_used@@Base+0x3c84>
  460844:	ldp	x21, x22, [sp, #32]
  460848:	b	4604f0 <_obstack_memory_used@@Base+0x3bc8>
  46084c:	ldrb	w0, [x21]
  460850:	mov	w2, #0x6d                  	// #109
  460854:	cmp	w0, #0x70
  460858:	ccmp	w0, w2, #0x4, ne  // ne = any
  46085c:	b.ne	46086c <_obstack_memory_used@@Base+0x3f44>  // b.any
  460860:	ldrb	w2, [x21, #1]
  460864:	cmp	w2, w0
  460868:	b.eq	4608a4 <_obstack_memory_used@@Base+0x3f7c>  // b.none
  46086c:	mov	w22, #0x0                   	// #0
  460870:	cmp	w1, #0x73
  460874:	b.ne	4608c8 <_obstack_memory_used@@Base+0x3fa0>  // b.any
  460878:	ldrb	w0, [x21, #1]
  46087c:	cmp	w0, #0x50
  460880:	b.ne	4608c8 <_obstack_memory_used@@Base+0x3fa0>  // b.any
  460884:	ldrb	w0, [x21, #2]
  460888:	cbnz	w0, 4608c8 <_obstack_memory_used@@Base+0x3fa0>
  46088c:	mov	x0, x19
  460890:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  460894:	mov	x3, x0
  460898:	cbnz	w22, 4608e8 <_obstack_memory_used@@Base+0x3fc0>
  46089c:	ldp	x21, x22, [sp, #32]
  4608a0:	b	460828 <_obstack_memory_used@@Base+0x3f00>
  4608a4:	ldr	x0, [x19, #24]
  4608a8:	ldrb	w2, [x0]
  4608ac:	cmp	w2, #0x5f
  4608b0:	b.ne	460870 <_obstack_memory_used@@Base+0x3f48>  // b.any
  4608b4:	add	x0, x0, #0x1
  4608b8:	str	x0, [x19, #24]
  4608bc:	mov	w22, #0x0                   	// #0
  4608c0:	ldrb	w1, [x21]
  4608c4:	b	460870 <_obstack_memory_used@@Base+0x3f48>
  4608c8:	mov	x0, x19
  4608cc:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  4608d0:	mov	x3, x0
  4608d4:	b	460898 <_obstack_memory_used@@Base+0x3f70>
  4608d8:	add	x2, x2, #0x3
  4608dc:	mov	w0, #0x0                   	// #0
  4608e0:	str	x2, [x19, #24]
  4608e4:	b	460570 <_obstack_memory_used@@Base+0x3c48>
  4608e8:	mov	x2, x3
  4608ec:	mov	x0, x19
  4608f0:	mov	w1, #0x39                  	// #57
  4608f4:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4608f8:	mov	x3, x0
  4608fc:	ldp	x21, x22, [sp, #32]
  460900:	b	460828 <_obstack_memory_used@@Base+0x3f00>
  460904:	ldr	x0, [x20, #8]
  460908:	ldr	x0, [x0]
  46090c:	ldrb	w1, [x0, #1]
  460910:	cmp	w1, #0x63
  460914:	b.eq	460abc <_obstack_memory_used@@Base+0x4194>  // b.none
  460918:	ldrb	w0, [x21]
  46091c:	cmp	w0, #0x66
  460920:	b.eq	460aec <_obstack_memory_used@@Base+0x41c4>  // b.none
  460924:	mov	x0, x19
  460928:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  46092c:	mov	x22, x0
  460930:	ldrb	w1, [x21]
  460934:	cmp	w1, #0x63
  460938:	b.ne	460a14 <_obstack_memory_used@@Base+0x40ec>  // b.any
  46093c:	ldrb	w0, [x21, #1]
  460940:	cmp	w0, #0x6c
  460944:	b.ne	460a14 <_obstack_memory_used@@Base+0x40ec>  // b.any
  460948:	ldrb	w0, [x21, #2]
  46094c:	cbnz	w0, 460a14 <_obstack_memory_used@@Base+0x40ec>
  460950:	mov	x0, x19
  460954:	mov	w1, #0x45                  	// #69
  460958:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  46095c:	mov	x21, x0
  460960:	mov	x3, x21
  460964:	mov	x2, x22
  460968:	mov	x0, x19
  46096c:	mov	w1, #0x39                  	// #57
  460970:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460974:	mov	x3, x0
  460978:	mov	x2, x20
  46097c:	mov	x0, x19
  460980:	ldp	x19, x20, [sp, #16]
  460984:	mov	w1, #0x38                  	// #56
  460988:	ldp	x21, x22, [sp, #32]
  46098c:	ldp	x29, x30, [sp], #48
  460990:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460994:	ldrb	w0, [x21]
  460998:	cmp	w0, #0x66
  46099c:	b.eq	460b14 <_obstack_memory_used@@Base+0x41ec>  // b.none
  4609a0:	cmp	w0, #0x6e
  4609a4:	b.ne	4605ac <_obstack_memory_used@@Base+0x3c84>  // b.any
  4609a8:	ldrb	w0, [x21, #1]
  4609ac:	mov	w1, #0x61                  	// #97
  4609b0:	cmp	w0, #0x77
  4609b4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4609b8:	b.ne	4605ac <_obstack_memory_used@@Base+0x3c84>  // b.any
  4609bc:	mov	w1, #0x5f                  	// #95
  4609c0:	mov	x0, x19
  4609c4:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  4609c8:	mov	x21, x0
  4609cc:	mov	x0, x19
  4609d0:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  4609d4:	ldr	x1, [x19, #24]
  4609d8:	mov	x22, x0
  4609dc:	ldrb	w0, [x1]
  4609e0:	cmp	w0, #0x45
  4609e4:	b.eq	460b48 <_obstack_memory_used@@Base+0x4220>  // b.none
  4609e8:	cmp	w0, #0x70
  4609ec:	b.eq	460b20 <_obstack_memory_used@@Base+0x41f8>  // b.none
  4609f0:	cmp	w0, #0x69
  4609f4:	b.ne	4605ac <_obstack_memory_used@@Base+0x3c84>  // b.any
  4609f8:	ldrb	w0, [x1, #1]
  4609fc:	cmp	w0, #0x6c
  460a00:	b.ne	4605ac <_obstack_memory_used@@Base+0x3c84>  // b.any
  460a04:	mov	x0, x19
  460a08:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460a0c:	mov	x3, x0
  460a10:	b	4606dc <_obstack_memory_used@@Base+0x3db4>
  460a14:	cmp	w1, #0x64
  460a18:	b.ne	460aa4 <_obstack_memory_used@@Base+0x417c>  // b.any
  460a1c:	ldrb	w0, [x21, #1]
  460a20:	cmp	w0, #0x74
  460a24:	b.ne	460aa4 <_obstack_memory_used@@Base+0x417c>  // b.any
  460a28:	ldrb	w0, [x21, #2]
  460a2c:	cbnz	w0, 460aa4 <_obstack_memory_used@@Base+0x417c>
  460a30:	mov	x0, x19
  460a34:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  460a38:	ldr	x1, [x19, #24]
  460a3c:	mov	x21, x0
  460a40:	ldrb	w0, [x1]
  460a44:	cmp	w0, #0x49
  460a48:	b.ne	460960 <_obstack_memory_used@@Base+0x4038>  // b.any
  460a4c:	add	x1, x1, #0x1
  460a50:	str	x1, [x19, #24]
  460a54:	mov	x0, x19
  460a58:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  460a5c:	mov	x3, x0
  460a60:	mov	x2, x21
  460a64:	mov	x0, x19
  460a68:	mov	w1, #0x4                   	// #4
  460a6c:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460a70:	mov	x21, x0
  460a74:	b	460960 <_obstack_memory_used@@Base+0x4038>
  460a78:	ldr	x0, [x19, #24]
  460a7c:	ldrb	w1, [x0]
  460a80:	cmp	w1, #0x5f
  460a84:	b.ne	46081c <_obstack_memory_used@@Base+0x3ef4>  // b.any
  460a88:	add	x0, x0, #0x1
  460a8c:	str	x0, [x19, #24]
  460a90:	mov	w1, #0x45                  	// #69
  460a94:	mov	x0, x19
  460a98:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  460a9c:	mov	x3, x0
  460aa0:	b	460828 <_obstack_memory_used@@Base+0x3f00>
  460aa4:	cmp	w1, #0x70
  460aa8:	b.eq	460afc <_obstack_memory_used@@Base+0x41d4>  // b.none
  460aac:	mov	x0, x19
  460ab0:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460ab4:	mov	x21, x0
  460ab8:	b	460960 <_obstack_memory_used@@Base+0x4038>
  460abc:	ldrb	w0, [x0]
  460ac0:	sub	w1, w0, #0x63
  460ac4:	sub	w0, w0, #0x72
  460ac8:	and	w1, w1, #0xff
  460acc:	and	w0, w0, #0xff
  460ad0:	cmp	w1, #0x1
  460ad4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  460ad8:	b.hi	460918 <_obstack_memory_used@@Base+0x3ff0>  // b.pmore
  460adc:	mov	x0, x19
  460ae0:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  460ae4:	mov	x22, x0
  460ae8:	b	460930 <_obstack_memory_used@@Base+0x4008>
  460aec:	mov	x0, x19
  460af0:	bl	462628 <_obstack_memory_used@@Base+0x5d00>
  460af4:	mov	x22, x0
  460af8:	b	460930 <_obstack_memory_used@@Base+0x4008>
  460afc:	ldrb	w0, [x21, #1]
  460b00:	cmp	w0, #0x74
  460b04:	b.ne	460aac <_obstack_memory_used@@Base+0x4184>  // b.any
  460b08:	ldrb	w0, [x21, #2]
  460b0c:	cbz	w0, 460a30 <_obstack_memory_used@@Base+0x4108>
  460b10:	b	460aac <_obstack_memory_used@@Base+0x4184>
  460b14:	mov	x0, x19
  460b18:	bl	462628 <_obstack_memory_used@@Base+0x5d00>
  460b1c:	b	4606bc <_obstack_memory_used@@Base+0x3d94>
  460b20:	ldrb	w0, [x1, #1]
  460b24:	cmp	w0, #0x69
  460b28:	b.ne	4605ac <_obstack_memory_used@@Base+0x3c84>  // b.any
  460b2c:	add	x1, x1, #0x2
  460b30:	str	x1, [x19, #24]
  460b34:	mov	x0, x19
  460b38:	mov	w1, #0x45                  	// #69
  460b3c:	bl	45fc08 <_obstack_memory_used@@Base+0x32e0>
  460b40:	mov	x3, x0
  460b44:	b	4606dc <_obstack_memory_used@@Base+0x3db4>
  460b48:	add	x1, x1, #0x1
  460b4c:	mov	x3, #0x0                   	// #0
  460b50:	str	x1, [x19, #24]
  460b54:	b	4606dc <_obstack_memory_used@@Base+0x3db4>
  460b58:	ldr	x2, [x0, #24]
  460b5c:	ldrb	w1, [x2]
  460b60:	cmp	w1, #0x4c
  460b64:	b.eq	460bf0 <_obstack_memory_used@@Base+0x42c8>  // b.none
  460b68:	stp	x29, x30, [sp, #-32]!
  460b6c:	mov	x29, sp
  460b70:	stp	x19, x20, [sp, #16]
  460b74:	mov	x19, x0
  460b78:	b.hi	460b98 <_obstack_memory_used@@Base+0x4270>  // b.pmore
  460b7c:	sub	w1, w1, #0x49
  460b80:	and	w1, w1, #0xff
  460b84:	cmp	w1, #0x1
  460b88:	b.hi	460be0 <_obstack_memory_used@@Base+0x42b8>  // b.pmore
  460b8c:	ldp	x19, x20, [sp, #16]
  460b90:	ldp	x29, x30, [sp], #32
  460b94:	b	460cc8 <_obstack_memory_used@@Base+0x43a0>
  460b98:	cmp	w1, #0x58
  460b9c:	b.ne	460be0 <_obstack_memory_used@@Base+0x42b8>  // b.any
  460ba0:	add	x2, x2, #0x1
  460ba4:	ldr	w20, [x0, #76]
  460ba8:	mov	w1, #0x1                   	// #1
  460bac:	str	x2, [x0, #24]
  460bb0:	str	w1, [x0, #76]
  460bb4:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  460bb8:	str	w20, [x19, #76]
  460bbc:	ldr	x1, [x19, #24]
  460bc0:	ldrb	w2, [x1]
  460bc4:	cmp	w2, #0x45
  460bc8:	b.ne	460bf4 <_obstack_memory_used@@Base+0x42cc>  // b.any
  460bcc:	add	x1, x1, #0x1
  460bd0:	str	x1, [x19, #24]
  460bd4:	ldp	x19, x20, [sp, #16]
  460bd8:	ldp	x29, x30, [sp], #32
  460bdc:	ret
  460be0:	mov	x0, x19
  460be4:	ldp	x19, x20, [sp, #16]
  460be8:	ldp	x29, x30, [sp], #32
  460bec:	b	461a40 <_obstack_memory_used@@Base+0x5118>
  460bf0:	b	4631d0 <_obstack_memory_used@@Base+0x68a8>
  460bf4:	mov	x0, #0x0                   	// #0
  460bf8:	b	460bd4 <_obstack_memory_used@@Base+0x42ac>
  460bfc:	nop
  460c00:	stp	x29, x30, [sp, #-64]!
  460c04:	mov	x29, sp
  460c08:	ldr	x1, [x0, #24]
  460c0c:	stp	x19, x20, [sp, #16]
  460c10:	mov	x19, x0
  460c14:	str	x21, [sp, #32]
  460c18:	ldr	x21, [x0, #64]
  460c1c:	ldrb	w2, [x1]
  460c20:	cmp	w2, #0x45
  460c24:	b.eq	460ca4 <_obstack_memory_used@@Base+0x437c>  // b.none
  460c28:	add	x20, sp, #0x38
  460c2c:	str	xzr, [sp, #56]
  460c30:	b	460c54 <_obstack_memory_used@@Base+0x432c>
  460c34:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460c38:	str	x0, [x20]
  460c3c:	add	x20, x0, #0x10
  460c40:	cbz	x0, 460c70 <_obstack_memory_used@@Base+0x4348>
  460c44:	ldr	x1, [x19, #24]
  460c48:	ldrb	w0, [x1]
  460c4c:	cmp	w0, #0x45
  460c50:	b.eq	460c84 <_obstack_memory_used@@Base+0x435c>  // b.none
  460c54:	mov	x0, x19
  460c58:	bl	460b58 <_obstack_memory_used@@Base+0x4230>
  460c5c:	mov	x3, #0x0                   	// #0
  460c60:	mov	x2, x0
  460c64:	mov	w1, #0x2f                  	// #47
  460c68:	mov	x0, x19
  460c6c:	cbnz	x2, 460c34 <_obstack_memory_used@@Base+0x430c>
  460c70:	mov	x0, #0x0                   	// #0
  460c74:	ldp	x19, x20, [sp, #16]
  460c78:	ldr	x21, [sp, #32]
  460c7c:	ldp	x29, x30, [sp], #64
  460c80:	ret
  460c84:	add	x1, x1, #0x1
  460c88:	str	x1, [x19, #24]
  460c8c:	str	x21, [x19, #64]
  460c90:	ldp	x19, x20, [sp, #16]
  460c94:	ldr	x21, [sp, #32]
  460c98:	ldr	x0, [sp, #56]
  460c9c:	ldp	x29, x30, [sp], #64
  460ca0:	ret
  460ca4:	add	x1, x1, #0x1
  460ca8:	mov	x3, #0x0                   	// #0
  460cac:	ldr	x21, [sp, #32]
  460cb0:	str	x1, [x0, #24]
  460cb4:	ldp	x19, x20, [sp, #16]
  460cb8:	mov	x2, #0x0                   	// #0
  460cbc:	ldp	x29, x30, [sp], #64
  460cc0:	mov	w1, #0x2f                  	// #47
  460cc4:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460cc8:	ldr	x3, [x0, #24]
  460ccc:	ldrb	w1, [x3]
  460cd0:	sub	w1, w1, #0x49
  460cd4:	and	w1, w1, #0xff
  460cd8:	cmp	w1, #0x1
  460cdc:	b.hi	460cec <_obstack_memory_used@@Base+0x43c4>  // b.pmore
  460ce0:	add	x3, x3, #0x1
  460ce4:	str	x3, [x0, #24]
  460ce8:	b	460c00 <_obstack_memory_used@@Base+0x42d8>
  460cec:	mov	x0, #0x0                   	// #0
  460cf0:	ret
  460cf4:	nop
  460cf8:	stp	x29, x30, [sp, #-48]!
  460cfc:	mov	w3, #0x54                  	// #84
  460d00:	mov	x29, sp
  460d04:	ldr	x2, [x0, #24]
  460d08:	stp	x19, x20, [sp, #16]
  460d0c:	mov	x19, x0
  460d10:	str	x21, [sp, #32]
  460d14:	mov	w21, w1
  460d18:	ldrb	w1, [x2]
  460d1c:	cmp	w1, #0x47
  460d20:	ccmp	w1, w3, #0x4, ne  // ne = any
  460d24:	b.ne	460db0 <_obstack_memory_used@@Base+0x4488>  // b.any
  460d28:	ldr	w3, [x0, #72]
  460d2c:	add	w1, w3, #0x14
  460d30:	str	w1, [x0, #72]
  460d34:	ldrb	w1, [x2]
  460d38:	cmp	w1, #0x54
  460d3c:	b.eq	460ed4 <_obstack_memory_used@@Base+0x45ac>  // b.none
  460d40:	cmp	w1, #0x47
  460d44:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  460d48:	add	x1, x2, #0x1
  460d4c:	str	x1, [x0, #24]
  460d50:	ldrb	w1, [x2, #1]
  460d54:	cbz	w1, 460ebc <_obstack_memory_used@@Base+0x4594>
  460d58:	add	x1, x2, #0x2
  460d5c:	str	x1, [x0, #24]
  460d60:	ldrb	w1, [x2, #1]
  460d64:	cmp	w1, #0x54
  460d68:	b.eq	461270 <_obstack_memory_used@@Base+0x4948>  // b.none
  460d6c:	b.hi	460f3c <_obstack_memory_used@@Base+0x4614>  // b.pmore
  460d70:	cmp	w1, #0x41
  460d74:	b.eq	4612b8 <_obstack_memory_used@@Base+0x4990>  // b.none
  460d78:	cmp	w1, #0x52
  460d7c:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  460d80:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  460d84:	mov	x11, x0
  460d88:	mov	x0, x19
  460d8c:	bl	45f270 <_obstack_memory_used@@Base+0x2948>
  460d90:	mov	x3, x0
  460d94:	mov	x0, x19
  460d98:	mov	x2, x11
  460d9c:	ldp	x19, x20, [sp, #16]
  460da0:	mov	w1, #0x16                  	// #22
  460da4:	ldr	x21, [sp, #32]
  460da8:	ldp	x29, x30, [sp], #48
  460dac:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460db0:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  460db4:	mov	x20, x0
  460db8:	cbz	x0, 460ebc <_obstack_memory_used@@Base+0x4594>
  460dbc:	cbz	w21, 460e0c <_obstack_memory_used@@Base+0x44e4>
  460dc0:	ldr	w0, [x19, #16]
  460dc4:	tbnz	w0, #0, 460e0c <_obstack_memory_used@@Base+0x44e4>
  460dc8:	mov	x1, #0x1f                  	// #31
  460dcc:	mov	x2, #0x1                   	// #1
  460dd0:	movk	x1, #0x1a, lsl #48
  460dd4:	ldr	w3, [x20]
  460dd8:	sub	w0, w3, #0x1c
  460ddc:	cmp	w0, #0x34
  460de0:	b.hi	460df0 <_obstack_memory_used@@Base+0x44c8>  // b.pmore
  460de4:	lsl	x0, x2, x0
  460de8:	tst	x0, x1
  460dec:	b.ne	461124 <_obstack_memory_used@@Base+0x47fc>  // b.any
  460df0:	cmp	w3, #0x2
  460df4:	b.eq	46112c <_obstack_memory_used@@Base+0x4804>  // b.none
  460df8:	mov	x0, x20
  460dfc:	ldp	x19, x20, [sp, #16]
  460e00:	ldr	x21, [sp, #32]
  460e04:	ldp	x29, x30, [sp], #48
  460e08:	ret
  460e0c:	ldr	x0, [x19, #24]
  460e10:	ldrb	w0, [x0]
  460e14:	cmp	w0, #0x45
  460e18:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  460e1c:	b.eq	460df8 <_obstack_memory_used@@Base+0x44d0>  // b.none
  460e20:	mov	x1, #0x1f                  	// #31
  460e24:	mov	x4, x20
  460e28:	mov	x2, #0x1                   	// #1
  460e2c:	movk	x1, #0x1a, lsl #48
  460e30:	ldr	w3, [x4]
  460e34:	cmp	w3, #0x4
  460e38:	b.eq	4611a0 <_obstack_memory_used@@Base+0x4878>  // b.none
  460e3c:	sub	w0, w3, #0x1c
  460e40:	b.hi	461030 <_obstack_memory_used@@Base+0x4708>  // b.pmore
  460e44:	cmp	w3, #0x2
  460e48:	b.ne	460e54 <_obstack_memory_used@@Base+0x452c>  // b.any
  460e4c:	ldr	x4, [x4, #16]
  460e50:	cbnz	x4, 460e30 <_obstack_memory_used@@Base+0x4508>
  460e54:	mov	w1, #0x0                   	// #0
  460e58:	mov	x0, x19
  460e5c:	bl	462b80 <_obstack_memory_used@@Base+0x6258>
  460e60:	mov	x3, x0
  460e64:	cbz	x0, 460ebc <_obstack_memory_used@@Base+0x4594>
  460e68:	cbnz	w21, 460e88 <_obstack_memory_used@@Base+0x4560>
  460e6c:	ldr	w0, [x20]
  460e70:	cmp	w0, #0x2
  460e74:	b.ne	460e88 <_obstack_memory_used@@Base+0x4560>  // b.any
  460e78:	ldr	w0, [x3]
  460e7c:	cmp	w0, #0x29
  460e80:	b.ne	460e88 <_obstack_memory_used@@Base+0x4560>  // b.any
  460e84:	str	xzr, [x3, #8]
  460e88:	mov	x2, x20
  460e8c:	mov	x0, x19
  460e90:	ldp	x19, x20, [sp, #16]
  460e94:	mov	w1, #0x3                   	// #3
  460e98:	ldr	x21, [sp, #32]
  460e9c:	ldp	x29, x30, [sp], #48
  460ea0:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460ea4:	cmp	w1, #0x68
  460ea8:	b.eq	46144c <_obstack_memory_used@@Base+0x4b24>  // b.none
  460eac:	cmp	w1, #0x76
  460eb0:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  460eb4:	bl	45f838 <_obstack_memory_used@@Base+0x2f10>
  460eb8:	cbnz	w0, 461174 <_obstack_memory_used@@Base+0x484c>
  460ebc:	mov	x20, #0x0                   	// #0
  460ec0:	mov	x0, x20
  460ec4:	ldp	x19, x20, [sp, #16]
  460ec8:	ldr	x21, [sp, #32]
  460ecc:	ldp	x29, x30, [sp], #48
  460ed0:	ret
  460ed4:	add	x1, x2, #0x1
  460ed8:	str	x1, [x0, #24]
  460edc:	ldrb	w1, [x2, #1]
  460ee0:	cbz	w1, 460ebc <_obstack_memory_used@@Base+0x4594>
  460ee4:	add	x1, x2, #0x2
  460ee8:	str	x1, [x0, #24]
  460eec:	ldrb	w1, [x2, #1]
  460ef0:	cmp	w1, #0x53
  460ef4:	b.eq	4613bc <_obstack_memory_used@@Base+0x4a94>  // b.none
  460ef8:	b.hi	4610b0 <_obstack_memory_used@@Base+0x4788>  // b.pmore
  460efc:	cmp	w1, #0x48
  460f00:	b.eq	461398 <_obstack_memory_used@@Base+0x4a70>  // b.none
  460f04:	b.hi	46107c <_obstack_memory_used@@Base+0x4754>  // b.pmore
  460f08:	cmp	w1, #0x43
  460f0c:	b.eq	461338 <_obstack_memory_used@@Base+0x4a10>  // b.none
  460f10:	cmp	w1, #0x46
  460f14:	b.ne	461050 <_obstack_memory_used@@Base+0x4728>  // b.any
  460f18:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  460f1c:	mov	x2, x0
  460f20:	mov	x0, x19
  460f24:	mov	x3, #0x0                   	// #0
  460f28:	ldp	x19, x20, [sp, #16]
  460f2c:	mov	w1, #0xe                   	// #14
  460f30:	ldr	x21, [sp, #32]
  460f34:	ldp	x29, x30, [sp], #48
  460f38:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  460f3c:	cmp	w1, #0x56
  460f40:	b.eq	46124c <_obstack_memory_used@@Base+0x4924>  // b.none
  460f44:	cmp	w1, #0x72
  460f48:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  460f4c:	add	x0, x0, #0x18
  460f50:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  460f54:	cmp	w0, #0x1
  460f58:	b.le	460ebc <_obstack_memory_used@@Base+0x4594>
  460f5c:	ldr	x1, [x19, #24]
  460f60:	ldrb	w2, [x1]
  460f64:	cbz	w2, 460ebc <_obstack_memory_used@@Base+0x4594>
  460f68:	add	x8, x1, #0x1
  460f6c:	str	x8, [x19, #24]
  460f70:	ldrb	w1, [x1]
  460f74:	cmp	w1, #0x5f
  460f78:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  460f7c:	sub	w9, w0, #0x1
  460f80:	mov	x2, #0x0                   	// #0
  460f84:	mov	w11, #0x18                  	// #24
  460f88:	mov	w10, #0x41                  	// #65
  460f8c:	ldrb	w0, [x8]
  460f90:	cbz	w0, 460ebc <_obstack_memory_used@@Base+0x4594>
  460f94:	cmp	w0, #0x24
  460f98:	b.ne	4611e4 <_obstack_memory_used@@Base+0x48bc>  // b.any
  460f9c:	ldrb	w0, [x8, #1]
  460fa0:	cmp	w0, #0x53
  460fa4:	b.eq	4612f0 <_obstack_memory_used@@Base+0x49c8>  // b.none
  460fa8:	cmp	w0, #0x5f
  460fac:	b.eq	4612e8 <_obstack_memory_used@@Base+0x49c0>  // b.none
  460fb0:	cmp	w0, #0x24
  460fb4:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  460fb8:	ldp	w1, w3, [x19, #40]
  460fbc:	ldr	x8, [x19, #24]
  460fc0:	cmp	w1, w3
  460fc4:	add	x8, x8, #0x2
  460fc8:	b.ge	461480 <_obstack_memory_used@@Base+0x4b58>  // b.tcont
  460fcc:	ldr	x5, [x19, #32]
  460fd0:	smull	x4, w1, w11
  460fd4:	add	w1, w1, #0x1
  460fd8:	sub	w9, w9, #0x2
  460fdc:	add	x3, x5, x4
  460fe0:	str	wzr, [x3, #4]
  460fe4:	str	w1, [x19, #40]
  460fe8:	str	w10, [x5, x4]
  460fec:	str	w0, [x3, #8]
  460ff0:	str	x8, [x19, #24]
  460ff4:	cbz	x2, 4612e0 <_obstack_memory_used@@Base+0x49b8>
  460ff8:	mov	x0, x19
  460ffc:	mov	w1, #0x40                  	// #64
  461000:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461004:	mov	x2, x0
  461008:	cbz	x0, 460ebc <_obstack_memory_used@@Base+0x4594>
  46100c:	cmp	w9, #0x0
  461010:	b.gt	460f8c <_obstack_memory_used@@Base+0x4664>
  461014:	mov	x0, x19
  461018:	mov	x3, #0x0                   	// #0
  46101c:	ldp	x19, x20, [sp, #16]
  461020:	mov	w1, #0x3f                  	// #63
  461024:	ldr	x21, [sp, #32]
  461028:	ldp	x29, x30, [sp], #48
  46102c:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461030:	cmp	w0, #0x34
  461034:	b.hi	460e54 <_obstack_memory_used@@Base+0x452c>  // b.pmore
  461038:	lsl	x0, x2, x0
  46103c:	tst	x0, x1
  461040:	b.eq	460e54 <_obstack_memory_used@@Base+0x452c>  // b.none
  461044:	ldr	x4, [x4, #8]
  461048:	cbnz	x4, 460e30 <_obstack_memory_used@@Base+0x4508>
  46104c:	b	460e54 <_obstack_memory_used@@Base+0x452c>
  461050:	cmp	w1, #0x41
  461054:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  461058:	bl	460b58 <_obstack_memory_used@@Base+0x4230>
  46105c:	mov	x2, x0
  461060:	mov	x0, x19
  461064:	mov	x3, #0x0                   	// #0
  461068:	ldp	x19, x20, [sp, #16]
  46106c:	mov	w1, #0x30                  	// #48
  461070:	ldr	x21, [sp, #32]
  461074:	ldp	x29, x30, [sp], #48
  461078:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  46107c:	cmp	w1, #0x49
  461080:	b.eq	461428 <_obstack_memory_used@@Base+0x4b00>  // b.none
  461084:	cmp	w1, #0x4a
  461088:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  46108c:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461090:	mov	x2, x0
  461094:	mov	x0, x19
  461098:	mov	x3, #0x0                   	// #0
  46109c:	ldp	x19, x20, [sp, #16]
  4610a0:	mov	w1, #0x12                  	// #18
  4610a4:	ldr	x21, [sp, #32]
  4610a8:	ldp	x29, x30, [sp], #48
  4610ac:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4610b0:	cmp	w1, #0x63
  4610b4:	b.eq	4613e0 <_obstack_memory_used@@Base+0x4ab8>  // b.none
  4610b8:	b.hi	460ea4 <_obstack_memory_used@@Base+0x457c>  // b.pmore
  4610bc:	cmp	w1, #0x56
  4610c0:	b.eq	46130c <_obstack_memory_used@@Base+0x49e4>  // b.none
  4610c4:	cmp	w1, #0x57
  4610c8:	b.ne	4610f0 <_obstack_memory_used@@Base+0x47c8>  // b.any
  4610cc:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  4610d0:	mov	x2, x0
  4610d4:	mov	x0, x19
  4610d8:	mov	x3, #0x0                   	// #0
  4610dc:	ldp	x19, x20, [sp, #16]
  4610e0:	mov	w1, #0x15                  	// #21
  4610e4:	ldr	x21, [sp, #32]
  4610e8:	ldp	x29, x30, [sp], #48
  4610ec:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4610f0:	cmp	w1, #0x54
  4610f4:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  4610f8:	add	w3, w3, #0xa
  4610fc:	str	w3, [x0, #72]
  461100:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461104:	mov	x2, x0
  461108:	mov	x0, x19
  46110c:	mov	x3, #0x0                   	// #0
  461110:	ldp	x19, x20, [sp, #16]
  461114:	mov	w1, #0xa                   	// #10
  461118:	ldr	x21, [sp, #32]
  46111c:	ldp	x29, x30, [sp], #48
  461120:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461124:	ldr	x20, [x20, #8]
  461128:	b	460dd4 <_obstack_memory_used@@Base+0x44ac>
  46112c:	ldr	x3, [x20, #16]
  461130:	mov	x1, #0x1f                  	// #31
  461134:	mov	x2, #0x1                   	// #1
  461138:	movk	x1, #0x1a, lsl #48
  46113c:	ldr	w0, [x3]
  461140:	sub	w0, w0, #0x1c
  461144:	cmp	w0, #0x34
  461148:	b.hi	460df8 <_obstack_memory_used@@Base+0x44d0>  // b.pmore
  46114c:	lsl	x0, x2, x0
  461150:	tst	x0, x1
  461154:	b.eq	460df8 <_obstack_memory_used@@Base+0x44d0>  // b.none
  461158:	ldr	x3, [x3, #8]
  46115c:	str	x3, [x20, #16]
  461160:	ldr	w0, [x3]
  461164:	sub	w0, w0, #0x1c
  461168:	cmp	w0, #0x34
  46116c:	b.ls	46114c <_obstack_memory_used@@Base+0x4824>  // b.plast
  461170:	b	460df8 <_obstack_memory_used@@Base+0x44d0>
  461174:	mov	x0, x19
  461178:	mov	w1, #0x0                   	// #0
  46117c:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  461180:	mov	x2, x0
  461184:	mov	x0, x19
  461188:	mov	x3, #0x0                   	// #0
  46118c:	ldp	x19, x20, [sp, #16]
  461190:	mov	w1, #0x10                  	// #16
  461194:	ldr	x21, [sp, #32]
  461198:	ldp	x29, x30, [sp], #48
  46119c:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4611a0:	ldr	x1, [x4, #8]
  4611a4:	cbz	x1, 4611d0 <_obstack_memory_used@@Base+0x48a8>
  4611a8:	ldr	w0, [x1]
  4611ac:	sub	w2, w0, #0x1
  4611b0:	cmp	w0, #0x8
  4611b4:	b.hi	4611d8 <_obstack_memory_used@@Base+0x48b0>  // b.pmore
  4611b8:	cmp	w0, #0x6
  4611bc:	b.hi	460e54 <_obstack_memory_used@@Base+0x452c>  // b.pmore
  4611c0:	cmp	w2, #0x1
  4611c4:	b.hi	4611d0 <_obstack_memory_used@@Base+0x48a8>  // b.pmore
  4611c8:	ldr	x1, [x1, #16]
  4611cc:	cbnz	x1, 4611a8 <_obstack_memory_used@@Base+0x4880>
  4611d0:	mov	w1, #0x1                   	// #1
  4611d4:	b	460e58 <_obstack_memory_used@@Base+0x4530>
  4611d8:	cmp	w0, #0x35
  4611dc:	cset	w1, ne  // ne = any
  4611e0:	b	460e58 <_obstack_memory_used@@Base+0x4530>
  4611e4:	mov	x1, #0x1                   	// #1
  4611e8:	b	4611f0 <_obstack_memory_used@@Base+0x48c8>
  4611ec:	mov	x1, x4
  4611f0:	cmp	w9, w1
  4611f4:	mov	w5, w1
  4611f8:	b.le	461210 <_obstack_memory_used@@Base+0x48e8>
  4611fc:	ldrb	w3, [x8, x1]
  461200:	add	x4, x1, #0x1
  461204:	cmp	w3, #0x24
  461208:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  46120c:	b.ne	4611ec <_obstack_memory_used@@Base+0x48c4>  // b.any
  461210:	ldp	w3, w0, [x19, #40]
  461214:	cmp	w3, w0
  461218:	b.ge	4612f8 <_obstack_memory_used@@Base+0x49d0>  // b.tcont
  46121c:	ldr	x4, [x19, #32]
  461220:	add	w0, w3, #0x1
  461224:	sub	w9, w9, w5
  461228:	smaddl	x3, w3, w11, x4
  46122c:	str	wzr, [x3, #4]
  461230:	str	w0, [x19, #40]
  461234:	stp	xzr, x8, [x3]
  461238:	ldr	x8, [x19, #24]
  46123c:	str	w5, [x3, #16]
  461240:	add	x8, x8, x1
  461244:	str	x8, [x19, #24]
  461248:	b	460ff4 <_obstack_memory_used@@Base+0x46cc>
  46124c:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  461250:	mov	x2, x0
  461254:	mov	x0, x19
  461258:	mov	x3, #0x0                   	// #0
  46125c:	ldp	x19, x20, [sp, #16]
  461260:	mov	w1, #0x13                  	// #19
  461264:	ldr	x21, [sp, #32]
  461268:	ldp	x29, x30, [sp], #48
  46126c:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461270:	ldrb	w1, [x2, #2]
  461274:	cbz	w1, 46128c <_obstack_memory_used@@Base+0x4964>
  461278:	add	x1, x2, #0x3
  46127c:	str	x1, [x0, #24]
  461280:	ldrb	w1, [x2, #2]
  461284:	cmp	w1, #0x6e
  461288:	b.eq	46148c <_obstack_memory_used@@Base+0x4b64>  // b.none
  46128c:	mov	x0, x19
  461290:	mov	w1, #0x0                   	// #0
  461294:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  461298:	mov	x2, x0
  46129c:	mov	x0, x19
  4612a0:	mov	x3, #0x0                   	// #0
  4612a4:	ldp	x19, x20, [sp, #16]
  4612a8:	mov	w1, #0x49                  	// #73
  4612ac:	ldr	x21, [sp, #32]
  4612b0:	ldp	x29, x30, [sp], #48
  4612b4:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4612b8:	mov	w1, #0x0                   	// #0
  4612bc:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  4612c0:	mov	x2, x0
  4612c4:	mov	x0, x19
  4612c8:	ldp	x19, x20, [sp, #16]
  4612cc:	mov	x3, #0x0                   	// #0
  4612d0:	ldr	x21, [sp, #32]
  4612d4:	mov	w1, #0x17                  	// #23
  4612d8:	ldp	x29, x30, [sp], #48
  4612dc:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4612e0:	mov	x2, x3
  4612e4:	b	46100c <_obstack_memory_used@@Base+0x46e4>
  4612e8:	mov	w0, #0x2e                  	// #46
  4612ec:	b	460fb8 <_obstack_memory_used@@Base+0x4690>
  4612f0:	mov	w0, #0x2f                  	// #47
  4612f4:	b	460fb8 <_obstack_memory_used@@Base+0x4690>
  4612f8:	ldr	x0, [x19, #24]
  4612fc:	mov	x20, #0x0                   	// #0
  461300:	add	x1, x0, x1
  461304:	str	x1, [x19, #24]
  461308:	b	460df8 <_obstack_memory_used@@Base+0x44d0>
  46130c:	add	w3, w3, #0xf
  461310:	str	w3, [x0, #72]
  461314:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461318:	mov	x2, x0
  46131c:	mov	x0, x19
  461320:	mov	x3, #0x0                   	// #0
  461324:	ldp	x19, x20, [sp, #16]
  461328:	mov	w1, #0x9                   	// #9
  46132c:	ldr	x21, [sp, #32]
  461330:	ldp	x29, x30, [sp], #48
  461334:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461338:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  46133c:	mov	x20, x0
  461340:	add	x0, x19, #0x18
  461344:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  461348:	tbnz	w0, #31, 460ebc <_obstack_memory_used@@Base+0x4594>
  46134c:	ldr	x0, [x19, #24]
  461350:	ldrb	w1, [x0]
  461354:	cmp	w1, #0x5f
  461358:	b.ne	460ebc <_obstack_memory_used@@Base+0x4594>  // b.any
  46135c:	add	x0, x0, #0x1
  461360:	str	x0, [x19, #24]
  461364:	mov	x0, x19
  461368:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  46136c:	mov	x2, x0
  461370:	ldr	w1, [x19, #72]
  461374:	mov	x3, x20
  461378:	ldr	x21, [sp, #32]
  46137c:	add	w1, w1, #0x5
  461380:	str	w1, [x19, #72]
  461384:	mov	x0, x19
  461388:	ldp	x19, x20, [sp, #16]
  46138c:	mov	w1, #0xb                   	// #11
  461390:	ldp	x29, x30, [sp], #48
  461394:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461398:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  46139c:	mov	x2, x0
  4613a0:	mov	x0, x19
  4613a4:	mov	x3, #0x0                   	// #0
  4613a8:	ldp	x19, x20, [sp, #16]
  4613ac:	mov	w1, #0x14                  	// #20
  4613b0:	ldr	x21, [sp, #32]
  4613b4:	ldp	x29, x30, [sp], #48
  4613b8:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4613bc:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  4613c0:	mov	x2, x0
  4613c4:	mov	x0, x19
  4613c8:	mov	x3, #0x0                   	// #0
  4613cc:	ldp	x19, x20, [sp, #16]
  4613d0:	mov	w1, #0xd                   	// #13
  4613d4:	ldr	x21, [sp, #32]
  4613d8:	ldp	x29, x30, [sp], #48
  4613dc:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4613e0:	mov	w1, #0x0                   	// #0
  4613e4:	bl	45f838 <_obstack_memory_used@@Base+0x2f10>
  4613e8:	cbz	w0, 460ebc <_obstack_memory_used@@Base+0x4594>
  4613ec:	mov	x0, x19
  4613f0:	mov	w1, #0x0                   	// #0
  4613f4:	bl	45f838 <_obstack_memory_used@@Base+0x2f10>
  4613f8:	cbz	w0, 460ebc <_obstack_memory_used@@Base+0x4594>
  4613fc:	mov	x0, x19
  461400:	mov	w1, #0x0                   	// #0
  461404:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  461408:	mov	x2, x0
  46140c:	mov	x0, x19
  461410:	mov	x3, #0x0                   	// #0
  461414:	ldp	x19, x20, [sp, #16]
  461418:	mov	w1, #0x11                  	// #17
  46141c:	ldr	x21, [sp, #32]
  461420:	ldp	x29, x30, [sp], #48
  461424:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461428:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  46142c:	mov	x2, x0
  461430:	mov	x0, x19
  461434:	mov	x3, #0x0                   	// #0
  461438:	ldp	x19, x20, [sp, #16]
  46143c:	mov	w1, #0xc                   	// #12
  461440:	ldr	x21, [sp, #32]
  461444:	ldp	x29, x30, [sp], #48
  461448:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  46144c:	bl	45f838 <_obstack_memory_used@@Base+0x2f10>
  461450:	cbz	w0, 460ebc <_obstack_memory_used@@Base+0x4594>
  461454:	mov	x0, x19
  461458:	mov	w1, #0x0                   	// #0
  46145c:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  461460:	mov	x2, x0
  461464:	mov	x0, x19
  461468:	mov	x3, #0x0                   	// #0
  46146c:	ldp	x19, x20, [sp, #16]
  461470:	mov	w1, #0xf                   	// #15
  461474:	ldr	x21, [sp, #32]
  461478:	ldp	x29, x30, [sp], #48
  46147c:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461480:	mov	x20, #0x0                   	// #0
  461484:	str	x8, [x19, #24]
  461488:	b	460df8 <_obstack_memory_used@@Base+0x44d0>
  46148c:	mov	w1, #0x0                   	// #0
  461490:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  461494:	mov	x2, x0
  461498:	mov	x0, x19
  46149c:	ldp	x19, x20, [sp, #16]
  4614a0:	mov	x3, #0x0                   	// #0
  4614a4:	ldr	x21, [sp, #32]
  4614a8:	mov	w1, #0x4a                  	// #74
  4614ac:	ldp	x29, x30, [sp], #48
  4614b0:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4614b4:	nop
  4614b8:	stp	x29, x30, [sp, #-112]!
  4614bc:	mov	x29, sp
  4614c0:	ldr	x2, [x0, #24]
  4614c4:	stp	x19, x20, [sp, #16]
  4614c8:	ldrb	w1, [x2]
  4614cc:	cmp	w1, #0x55
  4614d0:	b.eq	4616b8 <_obstack_memory_used@@Base+0x4d90>  // b.none
  4614d4:	mov	x19, x0
  4614d8:	b.hi	461588 <_obstack_memory_used@@Base+0x4c60>  // b.pmore
  4614dc:	cmp	w1, #0x4e
  4614e0:	b.eq	4616d0 <_obstack_memory_used@@Base+0x4da8>  // b.none
  4614e4:	cmp	w1, #0x53
  4614e8:	b.ne	461658 <_obstack_memory_used@@Base+0x4d30>  // b.any
  4614ec:	ldrb	w1, [x2, #1]
  4614f0:	cmp	w1, #0x74
  4614f4:	b.ne	461618 <_obstack_memory_used@@Base+0x4cf0>  // b.any
  4614f8:	ldp	w0, w1, [x0, #40]
  4614fc:	add	x2, x2, #0x2
  461500:	str	x2, [x19, #24]
  461504:	cmp	w0, w1
  461508:	b.ge	46198c <_obstack_memory_used@@Base+0x5064>  // b.tcont
  46150c:	mov	w3, #0x18                  	// #24
  461510:	add	w1, w0, #0x1
  461514:	ldr	x2, [x19, #32]
  461518:	smull	x0, w0, w3
  46151c:	str	w1, [x19, #40]
  461520:	mov	w3, #0x3                   	// #3
  461524:	add	x20, x2, x0
  461528:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  46152c:	add	x1, x1, #0x770
  461530:	str	xzr, [x2, x0]
  461534:	str	x1, [x20, #8]
  461538:	str	w3, [x20, #16]
  46153c:	mov	x0, x19
  461540:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  461544:	mov	x2, x20
  461548:	mov	x3, x0
  46154c:	mov	w1, #0x1                   	// #1
  461550:	mov	x0, x19
  461554:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461558:	mov	x20, x0
  46155c:	ldr	w1, [x19, #72]
  461560:	ldr	x2, [x19, #24]
  461564:	add	w1, w1, #0x3
  461568:	str	w1, [x19, #72]
  46156c:	ldrb	w0, [x2]
  461570:	cmp	w0, #0x49
  461574:	b.eq	461938 <_obstack_memory_used@@Base+0x5010>  // b.none
  461578:	mov	x0, x20
  46157c:	ldp	x19, x20, [sp, #16]
  461580:	ldp	x29, x30, [sp], #112
  461584:	ret
  461588:	cmp	w1, #0x5a
  46158c:	b.ne	461658 <_obstack_memory_used@@Base+0x4d30>  // b.any
  461590:	add	x2, x2, #0x1
  461594:	str	x2, [x0, #24]
  461598:	mov	w1, #0x0                   	// #0
  46159c:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  4615a0:	mov	x20, x0
  4615a4:	cbz	x0, 461650 <_obstack_memory_used@@Base+0x4d28>
  4615a8:	ldr	x0, [x19, #24]
  4615ac:	ldrb	w1, [x0]
  4615b0:	cmp	w1, #0x45
  4615b4:	b.ne	461650 <_obstack_memory_used@@Base+0x4d28>  // b.any
  4615b8:	add	x1, x0, #0x1
  4615bc:	str	x1, [x19, #24]
  4615c0:	ldrb	w1, [x0, #1]
  4615c4:	cmp	w1, #0x73
  4615c8:	b.eq	4619b4 <_obstack_memory_used@@Base+0x508c>  // b.none
  4615cc:	cmp	w1, #0x64
  4615d0:	b.eq	46185c <_obstack_memory_used@@Base+0x4f34>  // b.none
  4615d4:	mov	x0, x19
  4615d8:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  4615dc:	mov	x3, x0
  4615e0:	cbz	x0, 4615f4 <_obstack_memory_used@@Base+0x4ccc>
  4615e4:	ldr	w0, [x0]
  4615e8:	sub	w0, w0, #0x46
  4615ec:	tst	w0, #0xfffffffd
  4615f0:	b.ne	461a08 <_obstack_memory_used@@Base+0x50e0>  // b.any
  4615f4:	ldr	w0, [x20]
  4615f8:	cmp	w0, #0x3
  4615fc:	b.eq	461974 <_obstack_memory_used@@Base+0x504c>  // b.none
  461600:	mov	x2, x20
  461604:	mov	x0, x19
  461608:	mov	w1, #0x2                   	// #2
  46160c:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461610:	mov	x20, x0
  461614:	b	461578 <_obstack_memory_used@@Base+0x4c50>
  461618:	mov	w1, #0x0                   	// #0
  46161c:	bl	45f5d0 <_obstack_memory_used@@Base+0x2ca8>
  461620:	ldr	x1, [x19, #24]
  461624:	mov	x20, x0
  461628:	ldrb	w0, [x1]
  46162c:	cmp	w0, #0x49
  461630:	b.ne	461578 <_obstack_memory_used@@Base+0x4c50>  // b.any
  461634:	mov	x0, x19
  461638:	b	461698 <_obstack_memory_used@@Base+0x4d70>
  46163c:	mov	x0, x19
  461640:	bl	45f938 <_obstack_memory_used@@Base+0x3010>
  461644:	cbnz	w0, 461898 <_obstack_memory_used@@Base+0x4f70>
  461648:	ldp	x21, x22, [sp, #32]
  46164c:	nop
  461650:	mov	x20, #0x0                   	// #0
  461654:	b	461578 <_obstack_memory_used@@Base+0x4c50>
  461658:	mov	x0, x19
  46165c:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  461660:	ldr	x1, [x19, #24]
  461664:	mov	x20, x0
  461668:	ldrb	w0, [x1]
  46166c:	cmp	w0, #0x49
  461670:	b.ne	461578 <_obstack_memory_used@@Base+0x4c50>  // b.any
  461674:	cbz	x20, 461650 <_obstack_memory_used@@Base+0x4d28>
  461678:	ldp	w1, w0, [x19, #56]
  46167c:	cmp	w1, w0
  461680:	b.ge	461650 <_obstack_memory_used@@Base+0x4d28>  // b.tcont
  461684:	ldr	x3, [x19, #48]
  461688:	mov	x0, x19
  46168c:	add	w2, w1, #0x1
  461690:	str	x20, [x3, w1, sxtw #3]
  461694:	str	w2, [x19, #56]
  461698:	bl	460cc8 <_obstack_memory_used@@Base+0x43a0>
  46169c:	mov	x3, x0
  4616a0:	mov	x2, x20
  4616a4:	mov	x0, x19
  4616a8:	mov	w1, #0x4                   	// #4
  4616ac:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4616b0:	mov	x20, x0
  4616b4:	b	461578 <_obstack_memory_used@@Base+0x4c50>
  4616b8:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  4616bc:	mov	x20, x0
  4616c0:	mov	x0, x20
  4616c4:	ldp	x19, x20, [sp, #16]
  4616c8:	ldp	x29, x30, [sp], #112
  4616cc:	ret
  4616d0:	stp	x21, x22, [sp, #32]
  4616d4:	add	x2, x2, #0x1
  4616d8:	add	x1, sp, #0x68
  4616dc:	str	x2, [x0, #24]
  4616e0:	mov	w2, #0x1                   	// #1
  4616e4:	bl	4628f0 <_obstack_memory_used@@Base+0x5fc8>
  4616e8:	mov	x22, x0
  4616ec:	cbz	x0, 461968 <_obstack_memory_used@@Base+0x5040>
  4616f0:	mov	x1, #0x0                   	// #0
  4616f4:	mov	x0, x19
  4616f8:	stp	x23, x24, [sp, #48]
  4616fc:	bl	45efa8 <_obstack_memory_used@@Base+0x2680>
  461700:	mov	x23, x0
  461704:	ldr	x1, [x19, #24]
  461708:	ldrb	w20, [x1]
  46170c:	cbz	w20, 4617c4 <_obstack_memory_used@@Base+0x4e9c>
  461710:	mov	x21, #0x0                   	// #0
  461714:	mov	w24, #0x4c                  	// #76
  461718:	stp	x25, x26, [sp, #64]
  46171c:	mov	w25, #0x55                  	// #85
  461720:	cmp	w20, #0x44
  461724:	b.eq	4617d8 <_obstack_memory_used@@Base+0x4eb0>  // b.none
  461728:	sub	w2, w20, #0x30
  46172c:	sub	w0, w20, #0x61
  461730:	and	w2, w2, #0xff
  461734:	and	w0, w0, #0xff
  461738:	cmp	w2, #0x9
  46173c:	mov	x26, x21
  461740:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  461744:	b.ls	461758 <_obstack_memory_used@@Base+0x4e30>  // b.plast
  461748:	cmp	w20, #0x43
  46174c:	ccmp	w20, w25, #0x4, ne  // ne = any
  461750:	ccmp	w20, w24, #0x4, ne  // ne = any
  461754:	b.ne	461824 <_obstack_memory_used@@Base+0x4efc>  // b.any
  461758:	mov	x0, x19
  46175c:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  461760:	mov	x21, x0
  461764:	cbz	x26, 461780 <_obstack_memory_used@@Base+0x4e58>
  461768:	mov	w1, #0x1                   	// #1
  46176c:	mov	x3, x21
  461770:	mov	x2, x26
  461774:	mov	x0, x19
  461778:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  46177c:	mov	x21, x0
  461780:	cmp	w20, #0x53
  461784:	ldr	x1, [x19, #24]
  461788:	b.eq	4617b8 <_obstack_memory_used@@Base+0x4e90>  // b.none
  46178c:	ldrb	w20, [x1]
  461790:	cmp	w20, #0x45
  461794:	b.eq	46180c <_obstack_memory_used@@Base+0x4ee4>  // b.none
  461798:	cbz	x21, 4617c0 <_obstack_memory_used@@Base+0x4e98>
  46179c:	ldp	w0, w2, [x19, #56]
  4617a0:	cmp	w0, w2
  4617a4:	b.ge	4617c0 <_obstack_memory_used@@Base+0x4e98>  // b.tcont
  4617a8:	ldr	x3, [x19, #48]
  4617ac:	add	w2, w0, #0x1
  4617b0:	str	x21, [x3, w0, sxtw #3]
  4617b4:	str	w2, [x19, #56]
  4617b8:	ldrb	w20, [x1]
  4617bc:	cbnz	w20, 461720 <_obstack_memory_used@@Base+0x4df8>
  4617c0:	ldp	x25, x26, [sp, #64]
  4617c4:	mov	x20, #0x0                   	// #0
  4617c8:	ldp	x23, x24, [sp, #48]
  4617cc:	str	xzr, [x22]
  4617d0:	ldp	x21, x22, [sp, #32]
  4617d4:	b	461578 <_obstack_memory_used@@Base+0x4c50>
  4617d8:	ldrb	w0, [x1, #1]
  4617dc:	and	w0, w0, #0xffffffdf
  4617e0:	and	w0, w0, #0xff
  4617e4:	cmp	w0, #0x54
  4617e8:	mov	x0, x19
  4617ec:	b.ne	461814 <_obstack_memory_used@@Base+0x4eec>  // b.any
  4617f0:	mov	x26, x21
  4617f4:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  4617f8:	mov	x21, x0
  4617fc:	mov	w1, #0x1                   	// #1
  461800:	cbnz	x26, 46176c <_obstack_memory_used@@Base+0x4e44>
  461804:	ldr	x1, [x19, #24]
  461808:	b	46178c <_obstack_memory_used@@Base+0x4e64>
  46180c:	mov	x26, x21
  461810:	b	461748 <_obstack_memory_used@@Base+0x4e20>
  461814:	mov	x26, x21
  461818:	bl	462cf0 <_obstack_memory_used@@Base+0x63c8>
  46181c:	mov	x21, x0
  461820:	b	4617fc <_obstack_memory_used@@Base+0x4ed4>
  461824:	cmp	w20, #0x53
  461828:	b.eq	4618d8 <_obstack_memory_used@@Base+0x4fb0>  // b.none
  46182c:	cmp	w20, #0x49
  461830:	b.eq	461994 <_obstack_memory_used@@Base+0x506c>  // b.none
  461834:	cmp	w20, #0x54
  461838:	b.eq	461a30 <_obstack_memory_used@@Base+0x5108>  // b.none
  46183c:	cmp	w20, #0x45
  461840:	b.eq	4618f4 <_obstack_memory_used@@Base+0x4fcc>  // b.none
  461844:	cmp	w20, #0x4d
  461848:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  46184c:	b.eq	4617c0 <_obstack_memory_used@@Base+0x4e98>  // b.none
  461850:	add	x1, x1, #0x1
  461854:	str	x1, [x19, #24]
  461858:	b	4617b8 <_obstack_memory_used@@Base+0x4e90>
  46185c:	stp	x21, x22, [sp, #32]
  461860:	add	x0, x0, #0x2
  461864:	str	x0, [x19, #24]
  461868:	mov	x0, x19
  46186c:	bl	45f2d8 <_obstack_memory_used@@Base+0x29b0>
  461870:	mov	w21, w0
  461874:	tbnz	w0, #31, 461648 <_obstack_memory_used@@Base+0x4d20>
  461878:	mov	x0, x19
  46187c:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  461880:	mov	x11, x0
  461884:	cbz	x0, 461898 <_obstack_memory_used@@Base+0x4f70>
  461888:	ldr	w0, [x0]
  46188c:	sub	w0, w0, #0x46
  461890:	tst	w0, #0xfffffffd
  461894:	b.ne	46163c <_obstack_memory_used@@Base+0x4d14>  // b.any
  461898:	ldp	w1, w0, [x19, #40]
  46189c:	cmp	w1, w0
  4618a0:	b.ge	461a24 <_obstack_memory_used@@Base+0x50fc>  // b.tcont
  4618a4:	mov	w2, #0x18                  	// #24
  4618a8:	add	w4, w1, #0x1
  4618ac:	ldr	x0, [x19, #32]
  4618b0:	smull	x1, w1, w2
  4618b4:	mov	w2, #0x47                  	// #71
  4618b8:	add	x3, x0, x1
  4618bc:	str	wzr, [x3, #4]
  4618c0:	str	w4, [x19, #40]
  4618c4:	str	w2, [x0, x1]
  4618c8:	str	x11, [x3, #8]
  4618cc:	str	w21, [x3, #16]
  4618d0:	ldp	x21, x22, [sp, #32]
  4618d4:	b	4615f4 <_obstack_memory_used@@Base+0x4ccc>
  4618d8:	mov	x0, x19
  4618dc:	mov	w1, #0x1                   	// #1
  4618e0:	bl	45f5d0 <_obstack_memory_used@@Base+0x2ca8>
  4618e4:	mov	x21, x0
  4618e8:	cbnz	x26, 461768 <_obstack_memory_used@@Base+0x4e40>
  4618ec:	ldr	x1, [x19, #24]
  4618f0:	b	4617b8 <_obstack_memory_used@@Base+0x4e90>
  4618f4:	str	x21, [x22]
  4618f8:	cbz	x21, 461960 <_obstack_memory_used@@Base+0x5038>
  4618fc:	cbz	x23, 46190c <_obstack_memory_used@@Base+0x4fe4>
  461900:	ldr	x0, [sp, #104]
  461904:	str	x0, [x23, #8]
  461908:	str	x23, [sp, #104]
  46190c:	ldr	x0, [x19, #24]
  461910:	ldrb	w1, [x0]
  461914:	cmp	w1, #0x45
  461918:	b.ne	461960 <_obstack_memory_used@@Base+0x5038>  // b.any
  46191c:	add	x0, x0, #0x1
  461920:	ldp	x21, x22, [sp, #32]
  461924:	ldp	x23, x24, [sp, #48]
  461928:	ldp	x25, x26, [sp, #64]
  46192c:	str	x0, [x19, #24]
  461930:	ldr	x20, [sp, #104]
  461934:	b	461578 <_obstack_memory_used@@Base+0x4c50>
  461938:	cbz	x20, 461650 <_obstack_memory_used@@Base+0x4d28>
  46193c:	ldp	w0, w1, [x19, #56]
  461940:	cmp	w0, w1
  461944:	b.ge	461650 <_obstack_memory_used@@Base+0x4d28>  // b.tcont
  461948:	ldr	x2, [x19, #48]
  46194c:	add	w1, w0, #0x1
  461950:	str	x20, [x2, w0, sxtw #3]
  461954:	mov	x0, x19
  461958:	str	w1, [x19, #56]
  46195c:	b	461698 <_obstack_memory_used@@Base+0x4d70>
  461960:	ldp	x23, x24, [sp, #48]
  461964:	ldp	x25, x26, [sp, #64]
  461968:	mov	x20, #0x0                   	// #0
  46196c:	ldp	x21, x22, [sp, #32]
  461970:	b	461578 <_obstack_memory_used@@Base+0x4c50>
  461974:	ldr	x0, [x20, #16]
  461978:	ldr	w1, [x0]
  46197c:	cmp	w1, #0x29
  461980:	b.ne	461600 <_obstack_memory_used@@Base+0x4cd8>  // b.any
  461984:	str	xzr, [x0, #8]
  461988:	b	461600 <_obstack_memory_used@@Base+0x4cd8>
  46198c:	mov	x20, #0x0                   	// #0
  461990:	b	46153c <_obstack_memory_used@@Base+0x4c14>
  461994:	cbz	x21, 4617c0 <_obstack_memory_used@@Base+0x4e98>
  461998:	add	x1, x1, #0x1
  46199c:	str	x1, [x19, #24]
  4619a0:	mov	x0, x19
  4619a4:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  4619a8:	mov	x21, x0
  4619ac:	mov	w1, #0x4                   	// #4
  4619b0:	b	46176c <_obstack_memory_used@@Base+0x4e44>
  4619b4:	add	x0, x0, #0x2
  4619b8:	str	x0, [x19, #24]
  4619bc:	mov	x0, x19
  4619c0:	bl	45f938 <_obstack_memory_used@@Base+0x3010>
  4619c4:	cbz	w0, 461650 <_obstack_memory_used@@Base+0x4d28>
  4619c8:	ldp	w0, w1, [x19, #40]
  4619cc:	cmp	w0, w1
  4619d0:	b.ge	461a28 <_obstack_memory_used@@Base+0x5100>  // b.tcont
  4619d4:	mov	w3, #0x18                  	// #24
  4619d8:	add	w1, w0, #0x1
  4619dc:	ldr	x2, [x19, #32]
  4619e0:	smull	x0, w0, w3
  4619e4:	str	w1, [x19, #40]
  4619e8:	mov	w4, #0xe                   	// #14
  4619ec:	add	x3, x2, x0
  4619f0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4619f4:	add	x1, x1, #0x760
  4619f8:	str	xzr, [x2, x0]
  4619fc:	str	x1, [x3, #8]
  461a00:	str	w4, [x3, #16]
  461a04:	b	4615f4 <_obstack_memory_used@@Base+0x4ccc>
  461a08:	mov	x0, x19
  461a0c:	str	x3, [sp, #88]
  461a10:	bl	45f938 <_obstack_memory_used@@Base+0x3010>
  461a14:	ldr	x3, [sp, #88]
  461a18:	cbnz	w0, 4615f4 <_obstack_memory_used@@Base+0x4ccc>
  461a1c:	mov	x20, #0x0                   	// #0
  461a20:	b	461578 <_obstack_memory_used@@Base+0x4c50>
  461a24:	ldp	x21, x22, [sp, #32]
  461a28:	mov	x3, #0x0                   	// #0
  461a2c:	b	4615f4 <_obstack_memory_used@@Base+0x4ccc>
  461a30:	mov	x0, x19
  461a34:	bl	45f350 <_obstack_memory_used@@Base+0x2a28>
  461a38:	mov	x21, x0
  461a3c:	b	4617fc <_obstack_memory_used@@Base+0x4ed4>
  461a40:	stp	x29, x30, [sp, #-80]!
  461a44:	mov	x29, sp
  461a48:	ldr	x4, [x0, #24]
  461a4c:	stp	x19, x20, [sp, #16]
  461a50:	mov	x19, x0
  461a54:	mov	x0, x4
  461a58:	bl	45f8e0 <_obstack_memory_used@@Base+0x2fb8>
  461a5c:	cbnz	w0, 461a9c <_obstack_memory_used@@Base+0x5174>
  461a60:	ldrb	w1, [x4]
  461a64:	sub	w0, w1, #0x30
  461a68:	cmp	w0, #0x4a
  461a6c:	b.ls	461a84 <_obstack_memory_used@@Base+0x515c>  // b.plast
  461a70:	mov	x20, #0x0                   	// #0
  461a74:	mov	x0, x20
  461a78:	ldp	x19, x20, [sp, #16]
  461a7c:	ldp	x29, x30, [sp], #80
  461a80:	ret
  461a84:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  461a88:	add	x2, x2, #0x894
  461a8c:	ldrh	w0, [x2, w0, uxtw #1]
  461a90:	adr	x2, 461a9c <_obstack_memory_used@@Base+0x5174>
  461a94:	add	x0, x2, w0, sxth #2
  461a98:	br	x0
  461a9c:	add	x1, sp, #0x48
  461aa0:	mov	x0, x19
  461aa4:	mov	w2, #0x0                   	// #0
  461aa8:	stp	x21, x22, [sp, #32]
  461aac:	bl	4628f0 <_obstack_memory_used@@Base+0x5fc8>
  461ab0:	mov	x21, x0
  461ab4:	cbz	x0, 461b48 <_obstack_memory_used@@Base+0x5220>
  461ab8:	ldr	x0, [x19, #24]
  461abc:	ldrb	w0, [x0]
  461ac0:	cmp	w0, #0x46
  461ac4:	mov	x0, x19
  461ac8:	b.eq	461b3c <_obstack_memory_used@@Base+0x5214>  // b.none
  461acc:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461ad0:	str	x0, [x21]
  461ad4:	cbz	x0, 461b48 <_obstack_memory_used@@Base+0x5220>
  461ad8:	ldr	w1, [x0]
  461adc:	ldr	x20, [sp, #72]
  461ae0:	sub	w1, w1, #0x1f
  461ae4:	cmp	w1, #0x1
  461ae8:	b.ls	461b20 <_obstack_memory_used@@Base+0x51f8>  // b.plast
  461aec:	cbz	x20, 461b48 <_obstack_memory_used@@Base+0x5220>
  461af0:	ldp	w0, w1, [x19, #56]
  461af4:	cmp	w0, w1
  461af8:	b.ge	461b48 <_obstack_memory_used@@Base+0x5220>  // b.tcont
  461afc:	ldr	x2, [x19, #48]
  461b00:	add	w1, w0, #0x1
  461b04:	ldp	x21, x22, [sp, #32]
  461b08:	str	x20, [x2, w0, sxtw #3]
  461b0c:	mov	x0, x20
  461b10:	str	w1, [x19, #56]
  461b14:	ldp	x19, x20, [sp, #16]
  461b18:	ldp	x29, x30, [sp], #80
  461b1c:	ret
  461b20:	ldr	x1, [x0, #8]
  461b24:	str	x20, [x0, #8]
  461b28:	ldr	x0, [x21]
  461b2c:	str	x0, [sp, #72]
  461b30:	str	x1, [x21]
  461b34:	ldr	x20, [sp, #72]
  461b38:	b	461aec <_obstack_memory_used@@Base+0x51c4>
  461b3c:	bl	462c10 <_obstack_memory_used@@Base+0x62e8>
  461b40:	str	x0, [x21]
  461b44:	b	461ad4 <_obstack_memory_used@@Base+0x51ac>
  461b48:	ldp	x21, x22, [sp, #32]
  461b4c:	b	461a70 <_obstack_memory_used@@Base+0x5148>
  461b50:	ldp	w2, w3, [x19, #40]
  461b54:	sub	w1, w1, #0x61
  461b58:	adrp	x0, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  461b5c:	add	x0, x0, #0xdf0
  461b60:	sbfiz	x1, x1, #5, #32
  461b64:	add	x0, x0, #0x188
  461b68:	add	x1, x0, x1
  461b6c:	cmp	w2, w3
  461b70:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  461b74:	mov	w0, #0x18                  	// #24
  461b78:	add	w6, w2, #0x1
  461b7c:	ldr	x3, [x19, #32]
  461b80:	smull	x2, w2, w0
  461b84:	ldr	w7, [x1, #8]
  461b88:	mov	w5, #0x27                  	// #39
  461b8c:	add	x20, x3, x2
  461b90:	ldr	w0, [x19, #72]
  461b94:	add	x4, x4, #0x1
  461b98:	add	w0, w0, w7
  461b9c:	str	wzr, [x20, #4]
  461ba0:	str	w6, [x19, #40]
  461ba4:	str	w5, [x3, x2]
  461ba8:	str	x1, [x20, #8]
  461bac:	str	x4, [x19, #24]
  461bb0:	str	w0, [x19, #72]
  461bb4:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  461bb8:	mov	x0, x19
  461bbc:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  461bc0:	mov	x20, x0
  461bc4:	str	x0, [sp, #72]
  461bc8:	cbz	x20, 461a70 <_obstack_memory_used@@Base+0x5148>
  461bcc:	ldp	w0, w1, [x19, #56]
  461bd0:	cmp	w0, w1
  461bd4:	b.ge	461a70 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  461bd8:	ldr	x2, [x19, #48]
  461bdc:	add	w1, w0, #0x1
  461be0:	str	x20, [x2, w0, sxtw #3]
  461be4:	str	w1, [x19, #56]
  461be8:	ldr	x20, [sp, #72]
  461bec:	mov	x0, x20
  461bf0:	ldp	x19, x20, [sp, #16]
  461bf4:	ldp	x29, x30, [sp], #80
  461bf8:	ret
  461bfc:	mov	x0, x19
  461c00:	bl	462c10 <_obstack_memory_used@@Base+0x62e8>
  461c04:	mov	x20, x0
  461c08:	str	x0, [sp, #72]
  461c0c:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461c10:	add	x4, x4, #0x1
  461c14:	str	x4, [x19, #24]
  461c18:	mov	x0, x19
  461c1c:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461c20:	mov	x2, x0
  461c24:	mov	x3, #0x0                   	// #0
  461c28:	mov	x0, x19
  461c2c:	mov	w1, #0x26                  	// #38
  461c30:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461c34:	mov	x20, x0
  461c38:	str	x0, [sp, #72]
  461c3c:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461c40:	add	x4, x4, #0x1
  461c44:	str	x4, [x19, #24]
  461c48:	mov	x0, x19
  461c4c:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461c50:	mov	x2, x0
  461c54:	mov	x3, #0x0                   	// #0
  461c58:	mov	x0, x19
  461c5c:	mov	w1, #0x24                  	// #36
  461c60:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461c64:	mov	x20, x0
  461c68:	str	x0, [sp, #72]
  461c6c:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461c70:	add	x4, x4, #0x1
  461c74:	str	x4, [x19, #24]
  461c78:	mov	x0, x19
  461c7c:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461c80:	mov	x2, x0
  461c84:	mov	x3, #0x0                   	// #0
  461c88:	mov	x0, x19
  461c8c:	mov	w1, #0x25                  	// #37
  461c90:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461c94:	mov	x20, x0
  461c98:	str	x0, [sp, #72]
  461c9c:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461ca0:	add	x0, x4, #0x1
  461ca4:	str	x0, [x19, #24]
  461ca8:	ldrb	w0, [x4, #1]
  461cac:	cbz	w0, 461a70 <_obstack_memory_used@@Base+0x5148>
  461cb0:	add	x0, x4, #0x2
  461cb4:	str	x0, [x19, #24]
  461cb8:	ldrb	w0, [x4, #1]
  461cbc:	cmp	w0, #0x68
  461cc0:	b.eq	462438 <_obstack_memory_used@@Base+0x5b10>  // b.none
  461cc4:	b.hi	46201c <_obstack_memory_used@@Base+0x56f4>  // b.pmore
  461cc8:	cmp	w0, #0x63
  461ccc:	b.eq	4623f8 <_obstack_memory_used@@Base+0x5ad0>  // b.none
  461cd0:	b.ls	461fcc <_obstack_memory_used@@Base+0x56a4>  // b.plast
  461cd4:	cmp	w0, #0x65
  461cd8:	b.eq	4624d8 <_obstack_memory_used@@Base+0x5bb0>  // b.none
  461cdc:	cmp	w0, #0x66
  461ce0:	b.ne	462238 <_obstack_memory_used@@Base+0x5910>  // b.any
  461ce4:	ldp	w0, w1, [x19, #40]
  461ce8:	cmp	w0, w1
  461cec:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  461cf0:	mov	w1, #0x18                  	// #24
  461cf4:	add	w5, w0, #0x1
  461cf8:	ldr	x3, [x19, #32]
  461cfc:	smull	x0, w0, w1
  461d00:	ldr	w2, [x19, #72]
  461d04:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  461d08:	add	x1, x1, #0xdf0
  461d0c:	add	x20, x3, x0
  461d10:	add	x1, x1, #0x4c8
  461d14:	mov	w4, #0x27                  	// #39
  461d18:	str	wzr, [x20, #4]
  461d1c:	add	w2, w2, #0x9
  461d20:	str	w5, [x19, #40]
  461d24:	str	w4, [x3, x0]
  461d28:	str	x1, [x20, #8]
  461d2c:	str	w2, [x19, #72]
  461d30:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  461d34:	add	x4, x4, #0x1
  461d38:	str	x4, [x19, #24]
  461d3c:	mov	x0, x19
  461d40:	bl	45f3d0 <_obstack_memory_used@@Base+0x2aa8>
  461d44:	str	x0, [sp, #72]
  461d48:	ldr	x1, [x19, #24]
  461d4c:	mov	x20, x0
  461d50:	ldrb	w0, [x1]
  461d54:	cmp	w0, #0x49
  461d58:	b.eq	462318 <_obstack_memory_used@@Base+0x59f0>  // b.none
  461d5c:	mov	x0, x19
  461d60:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461d64:	ldr	x3, [sp, #72]
  461d68:	mov	x2, x0
  461d6c:	mov	w1, #0x21                  	// #33
  461d70:	mov	x0, x19
  461d74:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461d78:	mov	x20, x0
  461d7c:	str	x0, [sp, #72]
  461d80:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461d84:	add	x4, x4, #0x1
  461d88:	str	x4, [x19, #24]
  461d8c:	mov	x0, x19
  461d90:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461d94:	mov	x2, x0
  461d98:	mov	x3, #0x0                   	// #0
  461d9c:	mov	x0, x19
  461da0:	mov	w1, #0x22                  	// #34
  461da4:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461da8:	mov	x20, x0
  461dac:	str	x0, [sp, #72]
  461db0:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461db4:	ldrb	w0, [x4, #1]
  461db8:	sub	w1, w0, #0x30
  461dbc:	cmp	w0, #0x5f
  461dc0:	and	w1, w1, #0xff
  461dc4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  461dc8:	b.ls	461ddc <_obstack_memory_used@@Base+0x54b4>  // b.plast
  461dcc:	sub	w0, w0, #0x41
  461dd0:	and	w0, w0, #0xff
  461dd4:	cmp	w0, #0x19
  461dd8:	b.hi	4622f4 <_obstack_memory_used@@Base+0x59cc>  // b.pmore
  461ddc:	mov	w1, #0x0                   	// #0
  461de0:	mov	x0, x19
  461de4:	bl	45f5d0 <_obstack_memory_used@@Base+0x2ca8>
  461de8:	str	x0, [sp, #72]
  461dec:	ldr	x1, [x19, #24]
  461df0:	mov	x20, x0
  461df4:	ldrb	w0, [x1]
  461df8:	cmp	w0, #0x49
  461dfc:	b.ne	461a74 <_obstack_memory_used@@Base+0x514c>  // b.any
  461e00:	add	x1, x1, #0x1
  461e04:	str	x1, [x19, #24]
  461e08:	mov	x0, x19
  461e0c:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  461e10:	mov	x3, x0
  461e14:	mov	x2, x20
  461e18:	mov	x0, x19
  461e1c:	mov	w1, #0x4                   	// #4
  461e20:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461e24:	mov	x20, x0
  461e28:	str	x0, [sp, #72]
  461e2c:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461e30:	mov	x0, x19
  461e34:	stp	x21, x22, [sp, #32]
  461e38:	bl	45f350 <_obstack_memory_used@@Base+0x2a28>
  461e3c:	ldr	x21, [x19, #24]
  461e40:	str	x0, [sp, #72]
  461e44:	mov	x20, x0
  461e48:	ldrb	w0, [x21]
  461e4c:	cmp	w0, #0x49
  461e50:	b.eq	462278 <_obstack_memory_used@@Base+0x5950>  // b.none
  461e54:	ldp	x21, x22, [sp, #32]
  461e58:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461e5c:	add	x4, x4, #0x1
  461e60:	str	x4, [x19, #24]
  461e64:	mov	x0, x19
  461e68:	bl	45f3d0 <_obstack_memory_used@@Base+0x2aa8>
  461e6c:	mov	x2, x0
  461e70:	mov	x3, #0x0                   	// #0
  461e74:	mov	x0, x19
  461e78:	mov	w1, #0x28                  	// #40
  461e7c:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461e80:	mov	x20, x0
  461e84:	str	x0, [sp, #72]
  461e88:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461e8c:	add	x4, x4, #0x1
  461e90:	str	x4, [x19, #24]
  461e94:	mov	x0, x19
  461e98:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461e9c:	mov	x2, x0
  461ea0:	mov	x3, #0x0                   	// #0
  461ea4:	mov	x0, x19
  461ea8:	mov	w1, #0x23                  	// #35
  461eac:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461eb0:	mov	x20, x0
  461eb4:	str	x0, [sp, #72]
  461eb8:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461ebc:	add	x3, x4, #0x1
  461ec0:	str	x3, [x19, #24]
  461ec4:	ldrb	w0, [x4, #1]
  461ec8:	cmp	w0, #0x5f
  461ecc:	b.eq	4622ec <_obstack_memory_used@@Base+0x59c4>  // b.none
  461ed0:	sub	w0, w0, #0x30
  461ed4:	and	w0, w0, #0xff
  461ed8:	cmp	w0, #0x9
  461edc:	b.hi	462344 <_obstack_memory_used@@Base+0x5a1c>  // b.pmore
  461ee0:	mov	x1, x3
  461ee4:	nop
  461ee8:	mov	x4, x1
  461eec:	add	x1, x1, #0x1
  461ef0:	str	x1, [x19, #24]
  461ef4:	ldrb	w0, [x1]
  461ef8:	sub	w0, w0, #0x30
  461efc:	and	w0, w0, #0xff
  461f00:	cmp	w0, #0x9
  461f04:	b.ls	461ee8 <_obstack_memory_used@@Base+0x55c0>  // b.plast
  461f08:	ldp	w0, w5, [x19, #40]
  461f0c:	sub	x2, x1, x3
  461f10:	cmp	w0, w5
  461f14:	b.ge	461a70 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  461f18:	mov	w7, #0x18                  	// #24
  461f1c:	add	w6, w0, #0x1
  461f20:	ldr	x5, [x19, #32]
  461f24:	smull	x0, w0, w7
  461f28:	cmp	w2, #0x0
  461f2c:	add	x20, x5, x0
  461f30:	str	wzr, [x20, #4]
  461f34:	str	w6, [x19, #40]
  461f38:	b.le	461a70 <_obstack_memory_used@@Base+0x5148>
  461f3c:	str	xzr, [x5, x0]
  461f40:	str	x3, [x20, #8]
  461f44:	str	w2, [x20, #16]
  461f48:	ldrb	w0, [x4, #1]
  461f4c:	mov	x3, x1
  461f50:	cmp	w0, #0x5f
  461f54:	b.ne	461a70 <_obstack_memory_used@@Base+0x5148>  // b.any
  461f58:	add	x3, x3, #0x1
  461f5c:	str	x3, [x19, #24]
  461f60:	mov	x0, x19
  461f64:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461f68:	mov	x3, x0
  461f6c:	mov	x2, x20
  461f70:	mov	x0, x19
  461f74:	mov	w1, #0x2a                  	// #42
  461f78:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461f7c:	mov	x20, x0
  461f80:	str	x0, [sp, #72]
  461f84:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461f88:	add	x4, x4, #0x1
  461f8c:	str	x4, [x19, #24]
  461f90:	mov	x0, x19
  461f94:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461f98:	mov	x20, x0
  461f9c:	cbz	x0, 461a70 <_obstack_memory_used@@Base+0x5148>
  461fa0:	mov	x0, x19
  461fa4:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  461fa8:	mov	x3, x0
  461fac:	cbz	x0, 461a70 <_obstack_memory_used@@Base+0x5148>
  461fb0:	mov	x2, x20
  461fb4:	mov	x0, x19
  461fb8:	mov	w1, #0x2b                  	// #43
  461fbc:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  461fc0:	mov	x20, x0
  461fc4:	str	x0, [sp, #72]
  461fc8:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  461fcc:	cmp	w0, #0x54
  461fd0:	b.eq	46209c <_obstack_memory_used@@Base+0x5774>  // b.none
  461fd4:	cmp	w0, #0x61
  461fd8:	b.ne	462130 <_obstack_memory_used@@Base+0x5808>  // b.any
  461fdc:	ldp	w0, w1, [x19, #40]
  461fe0:	cmp	w0, w1
  461fe4:	b.ge	461a70 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  461fe8:	mov	w3, #0x18                  	// #24
  461fec:	add	w1, w0, #0x1
  461ff0:	ldr	x2, [x19, #32]
  461ff4:	smull	x0, w0, w3
  461ff8:	str	w1, [x19, #40]
  461ffc:	mov	w3, #0x4                   	// #4
  462000:	add	x20, x2, x0
  462004:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  462008:	add	x1, x1, #0x748
  46200c:	str	xzr, [x2, x0]
  462010:	str	x1, [x20, #8]
  462014:	str	w3, [x20, #16]
  462018:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  46201c:	cmp	w0, #0x73
  462020:	b.eq	4623c0 <_obstack_memory_used@@Base+0x5a98>  // b.none
  462024:	b.ls	4620f8 <_obstack_memory_used@@Base+0x57d0>  // b.plast
  462028:	cmp	w0, #0x75
  46202c:	b.eq	462528 <_obstack_memory_used@@Base+0x5c00>  // b.none
  462030:	cmp	w0, #0x76
  462034:	b.ne	462094 <_obstack_memory_used@@Base+0x576c>  // b.any
  462038:	ldrb	w0, [x4, #2]
  46203c:	cmp	w0, #0x5f
  462040:	b.eq	4625c0 <_obstack_memory_used@@Base+0x5c98>  // b.none
  462044:	mov	x0, x19
  462048:	bl	45f270 <_obstack_memory_used@@Base+0x2948>
  46204c:	mov	x20, x0
  462050:	cbz	x20, 461a70 <_obstack_memory_used@@Base+0x5148>
  462054:	ldr	x0, [x19, #24]
  462058:	ldrb	w1, [x0]
  46205c:	cmp	w1, #0x5f
  462060:	b.ne	461a70 <_obstack_memory_used@@Base+0x5148>  // b.any
  462064:	add	x0, x0, #0x1
  462068:	str	x0, [x19, #24]
  46206c:	mov	x0, x19
  462070:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  462074:	mov	x3, x0
  462078:	mov	x2, x20
  46207c:	mov	x0, x19
  462080:	mov	w1, #0x2d                  	// #45
  462084:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  462088:	mov	x20, x0
  46208c:	str	x0, [sp, #72]
  462090:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  462094:	cmp	w0, #0x74
  462098:	b.ne	461a70 <_obstack_memory_used@@Base+0x5148>  // b.any
  46209c:	ldr	w20, [x19, #76]
  4620a0:	mov	w0, #0x1                   	// #1
  4620a4:	str	w0, [x19, #76]
  4620a8:	mov	x0, x19
  4620ac:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  4620b0:	str	w20, [x19, #76]
  4620b4:	mov	x2, x0
  4620b8:	mov	x3, #0x0                   	// #0
  4620bc:	mov	x0, x19
  4620c0:	mov	w1, #0x43                  	// #67
  4620c4:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4620c8:	str	x0, [sp, #72]
  4620cc:	mov	x20, x0
  4620d0:	cbz	x0, 461a70 <_obstack_memory_used@@Base+0x5148>
  4620d4:	ldr	x0, [x19, #24]
  4620d8:	ldrb	w1, [x0]
  4620dc:	cbz	w1, 461a70 <_obstack_memory_used@@Base+0x5148>
  4620e0:	add	x1, x0, #0x1
  4620e4:	str	x1, [x19, #24]
  4620e8:	ldrb	w0, [x0]
  4620ec:	cmp	w0, #0x45
  4620f0:	b.ne	461a70 <_obstack_memory_used@@Base+0x5148>  // b.any
  4620f4:	b	461bcc <_obstack_memory_used@@Base+0x52a4>
  4620f8:	cmp	w0, #0x6e
  4620fc:	b.eq	462488 <_obstack_memory_used@@Base+0x5b60>  // b.none
  462100:	cmp	w0, #0x70
  462104:	b.ne	4621e0 <_obstack_memory_used@@Base+0x58b8>  // b.any
  462108:	mov	x0, x19
  46210c:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  462110:	mov	x3, #0x0                   	// #0
  462114:	mov	x2, x0
  462118:	mov	w1, #0x4b                  	// #75
  46211c:	mov	x0, x19
  462120:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  462124:	mov	x20, x0
  462128:	str	x0, [sp, #72]
  46212c:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  462130:	cmp	w0, #0x46
  462134:	b.ne	461a70 <_obstack_memory_used@@Base+0x5148>  // b.any
  462138:	ldp	w0, w1, [x19, #40]
  46213c:	cmp	w0, w1
  462140:	b.ge	4625fc <_obstack_memory_used@@Base+0x5cd4>  // b.tcont
  462144:	mov	w2, #0x18                  	// #24
  462148:	add	w3, w0, #0x1
  46214c:	ldr	x1, [x19, #32]
  462150:	smull	x0, w0, w2
  462154:	mov	w2, #0x2c                  	// #44
  462158:	add	x20, x1, x0
  46215c:	str	wzr, [x20, #4]
  462160:	str	w3, [x19, #40]
  462164:	str	x20, [sp, #72]
  462168:	str	w2, [x1, x0]
  46216c:	ldrb	w0, [x4, #2]
  462170:	sub	w0, w0, #0x30
  462174:	and	w0, w0, #0xff
  462178:	cmp	w0, #0x9
  46217c:	cset	w1, ls  // ls = plast
  462180:	strh	w1, [x20, #16]
  462184:	b.hi	462194 <_obstack_memory_used@@Base+0x586c>  // b.pmore
  462188:	add	x0, x19, #0x18
  46218c:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  462190:	ldr	x20, [sp, #72]
  462194:	mov	x0, x19
  462198:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  46219c:	str	x0, [x20, #8]
  4621a0:	ldr	x1, [sp, #72]
  4621a4:	ldr	x0, [x1, #8]
  4621a8:	cbz	x0, 461a70 <_obstack_memory_used@@Base+0x5148>
  4621ac:	add	x0, x19, #0x18
  4621b0:	bl	45f1a0 <_obstack_memory_used@@Base+0x2878>
  4621b4:	ldr	x1, [x19, #24]
  4621b8:	ldrb	w0, [x1]
  4621bc:	cbz	w0, 4621cc <_obstack_memory_used@@Base+0x58a4>
  4621c0:	add	x0, x1, #0x1
  4621c4:	str	x0, [x19, #24]
  4621c8:	ldrb	w0, [x1]
  4621cc:	ldr	x20, [sp, #72]
  4621d0:	cmp	w0, #0x73
  4621d4:	cset	w0, eq  // eq = none
  4621d8:	strh	w0, [x20, #18]
  4621dc:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  4621e0:	cmp	w0, #0x69
  4621e4:	b.ne	461a70 <_obstack_memory_used@@Base+0x5148>  // b.any
  4621e8:	ldp	w0, w1, [x19, #40]
  4621ec:	cmp	w0, w1
  4621f0:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  4621f4:	mov	w1, #0x18                  	// #24
  4621f8:	add	w5, w0, #0x1
  4621fc:	ldr	x3, [x19, #32]
  462200:	smull	x0, w0, w1
  462204:	ldr	w2, [x19, #72]
  462208:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  46220c:	add	x1, x1, #0xdf0
  462210:	add	x20, x3, x0
  462214:	add	x1, x1, #0x588
  462218:	mov	w4, #0x27                  	// #39
  46221c:	str	wzr, [x20, #4]
  462220:	add	w2, w2, #0x8
  462224:	str	w5, [x19, #40]
  462228:	str	w4, [x3, x0]
  46222c:	str	x1, [x20, #8]
  462230:	str	w2, [x19, #72]
  462234:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  462238:	cmp	w0, #0x64
  46223c:	b.ne	461a70 <_obstack_memory_used@@Base+0x5148>  // b.any
  462240:	ldp	w0, w1, [x19, #40]
  462244:	cmp	w0, w1
  462248:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  46224c:	mov	w1, #0x18                  	// #24
  462250:	add	w5, w0, #0x1
  462254:	ldr	x3, [x19, #32]
  462258:	smull	x0, w0, w1
  46225c:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  462260:	add	x1, x1, #0xdf0
  462264:	ldr	w2, [x19, #72]
  462268:	add	x1, x1, #0x4e8
  46226c:	add	x20, x3, x0
  462270:	mov	w4, #0x27                  	// #39
  462274:	b	461d18 <_obstack_memory_used@@Base+0x53f0>
  462278:	ldr	w0, [x19, #80]
  46227c:	cbnz	w0, 462370 <_obstack_memory_used@@Base+0x5a48>
  462280:	cbz	x20, 461b48 <_obstack_memory_used@@Base+0x5220>
  462284:	ldp	w0, w1, [x19, #56]
  462288:	cmp	w0, w1
  46228c:	b.ge	461b48 <_obstack_memory_used@@Base+0x5220>  // b.tcont
  462290:	ldr	x2, [x19, #48]
  462294:	add	w1, w0, #0x1
  462298:	mov	x3, #0x0                   	// #0
  46229c:	str	x20, [x2, w0, sxtw #3]
  4622a0:	str	w1, [x19, #56]
  4622a4:	ldrb	w0, [x21]
  4622a8:	sub	w0, w0, #0x49
  4622ac:	and	w0, w0, #0xff
  4622b0:	cmp	w0, #0x1
  4622b4:	b.hi	4622cc <_obstack_memory_used@@Base+0x59a4>  // b.pmore
  4622b8:	add	x21, x21, #0x1
  4622bc:	str	x21, [x19, #24]
  4622c0:	mov	x0, x19
  4622c4:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  4622c8:	mov	x3, x0
  4622cc:	mov	x2, x20
  4622d0:	mov	x0, x19
  4622d4:	mov	w1, #0x4                   	// #4
  4622d8:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4622dc:	mov	x20, x0
  4622e0:	str	x0, [sp, #72]
  4622e4:	ldp	x21, x22, [sp, #32]
  4622e8:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  4622ec:	mov	x20, #0x0                   	// #0
  4622f0:	b	461f58 <_obstack_memory_used@@Base+0x5630>
  4622f4:	mov	x0, x19
  4622f8:	bl	4614b8 <_obstack_memory_used@@Base+0x4b90>
  4622fc:	str	x0, [sp, #72]
  462300:	mov	x20, x0
  462304:	cbz	x0, 461a70 <_obstack_memory_used@@Base+0x5148>
  462308:	ldr	w0, [x0]
  46230c:	cmp	w0, #0x18
  462310:	b.ne	461bcc <_obstack_memory_used@@Base+0x52a4>  // b.any
  462314:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  462318:	add	x1, x1, #0x1
  46231c:	str	x1, [x19, #24]
  462320:	mov	x0, x19
  462324:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  462328:	mov	x3, x0
  46232c:	mov	x2, x20
  462330:	mov	x0, x19
  462334:	mov	w1, #0x4                   	// #4
  462338:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  46233c:	str	x0, [sp, #72]
  462340:	b	461d5c <_obstack_memory_used@@Base+0x5434>
  462344:	ldr	w20, [x19, #76]
  462348:	mov	w0, #0x1                   	// #1
  46234c:	str	w0, [x19, #76]
  462350:	mov	x0, x19
  462354:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  462358:	str	w20, [x19, #76]
  46235c:	mov	x20, x0
  462360:	cbz	x0, 461a70 <_obstack_memory_used@@Base+0x5148>
  462364:	ldr	x1, [x19, #24]
  462368:	ldrb	w0, [x1]
  46236c:	b	461f4c <_obstack_memory_used@@Base+0x5624>
  462370:	ldr	w22, [x19, #56]
  462374:	add	x0, x21, #0x1
  462378:	ldr	w20, [x19, #72]
  46237c:	str	x23, [sp, #48]
  462380:	str	x0, [x19, #24]
  462384:	mov	x0, x19
  462388:	ldr	w23, [x19, #40]
  46238c:	bl	460c00 <_obstack_memory_used@@Base+0x42d8>
  462390:	ldr	x1, [x19, #24]
  462394:	ldrb	w1, [x1]
  462398:	cmp	w1, #0x49
  46239c:	b.eq	462578 <_obstack_memory_used@@Base+0x5c50>  // b.none
  4623a0:	str	x21, [x19, #24]
  4623a4:	str	w23, [x19, #40]
  4623a8:	str	w22, [x19, #56]
  4623ac:	str	w20, [x19, #72]
  4623b0:	ldp	x21, x22, [sp, #32]
  4623b4:	ldr	x23, [sp, #48]
  4623b8:	ldr	x20, [sp, #72]
  4623bc:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  4623c0:	ldp	w0, w1, [x19, #40]
  4623c4:	cmp	w0, w1
  4623c8:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  4623cc:	mov	w1, #0x18                  	// #24
  4623d0:	add	w5, w0, #0x1
  4623d4:	ldr	x3, [x19, #32]
  4623d8:	smull	x0, w0, w1
  4623dc:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  4623e0:	add	x1, x1, #0xdf0
  4623e4:	ldr	w2, [x19, #72]
  4623e8:	add	x1, x1, #0x568
  4623ec:	add	x20, x3, x0
  4623f0:	mov	w4, #0x27                  	// #39
  4623f4:	b	46221c <_obstack_memory_used@@Base+0x58f4>
  4623f8:	ldp	w0, w1, [x19, #40]
  4623fc:	cmp	w0, w1
  462400:	b.ge	461a70 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  462404:	mov	w3, #0x18                  	// #24
  462408:	add	w1, w0, #0x1
  46240c:	ldr	x2, [x19, #32]
  462410:	smull	x0, w0, w3
  462414:	str	w1, [x19, #40]
  462418:	mov	w3, #0xe                   	// #14
  46241c:	add	x20, x2, x0
  462420:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  462424:	add	x1, x1, #0x750
  462428:	str	xzr, [x2, x0]
  46242c:	str	x1, [x20, #8]
  462430:	str	w3, [x20, #16]
  462434:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  462438:	ldp	w0, w1, [x19, #40]
  46243c:	cmp	w0, w1
  462440:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  462444:	mov	w1, #0x18                  	// #24
  462448:	add	w5, w0, #0x1
  46244c:	ldr	x3, [x19, #32]
  462450:	smull	x0, w0, w1
  462454:	ldr	w2, [x19, #72]
  462458:	mov	w4, #0x27                  	// #39
  46245c:	add	x20, x3, x0
  462460:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  462464:	add	x1, x1, #0xdf0
  462468:	add	w2, w2, #0x4
  46246c:	add	x1, x1, #0x528
  462470:	str	wzr, [x20, #4]
  462474:	str	w5, [x19, #40]
  462478:	str	w4, [x3, x0]
  46247c:	str	x1, [x20, #8]
  462480:	str	w2, [x19, #72]
  462484:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  462488:	ldp	w0, w1, [x19, #40]
  46248c:	cmp	w0, w1
  462490:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  462494:	mov	w1, #0x18                  	// #24
  462498:	add	w5, w0, #0x1
  46249c:	ldr	x3, [x19, #32]
  4624a0:	smull	x0, w0, w1
  4624a4:	ldr	w2, [x19, #72]
  4624a8:	mov	w4, #0x27                  	// #39
  4624ac:	add	x20, x3, x0
  4624b0:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  4624b4:	add	x1, x1, #0xdf0
  4624b8:	add	w2, w2, #0x11
  4624bc:	add	x1, x1, #0x5a8
  4624c0:	str	wzr, [x20, #4]
  4624c4:	str	w5, [x19, #40]
  4624c8:	str	w4, [x3, x0]
  4624cc:	str	x1, [x20, #8]
  4624d0:	str	w2, [x19, #72]
  4624d4:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  4624d8:	ldp	w0, w1, [x19, #40]
  4624dc:	cmp	w0, w1
  4624e0:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  4624e4:	mov	w1, #0x18                  	// #24
  4624e8:	add	w5, w0, #0x1
  4624ec:	ldr	x3, [x19, #32]
  4624f0:	smull	x0, w0, w1
  4624f4:	ldr	w2, [x19, #72]
  4624f8:	mov	w4, #0x27                  	// #39
  4624fc:	add	x20, x3, x0
  462500:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  462504:	add	x1, x1, #0xdf0
  462508:	add	w2, w2, #0xa
  46250c:	add	x1, x1, #0x508
  462510:	str	wzr, [x20, #4]
  462514:	str	w5, [x19, #40]
  462518:	str	w4, [x3, x0]
  46251c:	str	x1, [x20, #8]
  462520:	str	w2, [x19, #72]
  462524:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  462528:	ldp	w0, w1, [x19, #40]
  46252c:	cmp	w0, w1
  462530:	b.ge	462610 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  462534:	mov	w1, #0x18                  	// #24
  462538:	add	w5, w0, #0x1
  46253c:	ldr	x3, [x19, #32]
  462540:	smull	x0, w0, w1
  462544:	ldr	w2, [x19, #72]
  462548:	mov	w4, #0x27                  	// #39
  46254c:	add	x20, x3, x0
  462550:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  462554:	add	x1, x1, #0xdf0
  462558:	add	w2, w2, #0x7
  46255c:	add	x1, x1, #0x548
  462560:	str	wzr, [x20, #4]
  462564:	str	w5, [x19, #40]
  462568:	str	w4, [x3, x0]
  46256c:	str	x1, [x20, #8]
  462570:	str	w2, [x19, #72]
  462574:	b	461a74 <_obstack_memory_used@@Base+0x514c>
  462578:	ldr	x2, [sp, #72]
  46257c:	cbz	x2, 4625f0 <_obstack_memory_used@@Base+0x5cc8>
  462580:	ldp	w4, w1, [x19, #56]
  462584:	cmp	w4, w1
  462588:	b.ge	4625f0 <_obstack_memory_used@@Base+0x5cc8>  // b.tcont
  46258c:	ldr	x6, [x19, #48]
  462590:	add	w5, w4, #0x1
  462594:	mov	x3, x0
  462598:	mov	w1, #0x4                   	// #4
  46259c:	mov	x0, x19
  4625a0:	str	x2, [x6, w4, sxtw #3]
  4625a4:	str	w5, [x19, #56]
  4625a8:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4625ac:	mov	x20, x0
  4625b0:	str	x0, [sp, #72]
  4625b4:	ldp	x21, x22, [sp, #32]
  4625b8:	ldr	x23, [sp, #48]
  4625bc:	b	461bc8 <_obstack_memory_used@@Base+0x52a0>
  4625c0:	add	x4, x4, #0x3
  4625c4:	stp	x21, x22, [sp, #32]
  4625c8:	mov	w1, #0x1                   	// #1
  4625cc:	ldr	w21, [x19, #76]
  4625d0:	mov	x0, x19
  4625d4:	str	x4, [x19, #24]
  4625d8:	str	w1, [x19, #76]
  4625dc:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  4625e0:	mov	x20, x0
  4625e4:	str	w21, [x19, #76]
  4625e8:	ldp	x21, x22, [sp, #32]
  4625ec:	b	462050 <_obstack_memory_used@@Base+0x5728>
  4625f0:	ldp	x21, x22, [sp, #32]
  4625f4:	ldr	x23, [sp, #48]
  4625f8:	b	461a70 <_obstack_memory_used@@Base+0x5148>
  4625fc:	mov	x0, #0x0                   	// #0
  462600:	stp	x21, x22, [sp, #32]
  462604:	str	x23, [sp, #48]
  462608:	str	wzr, [x0]
  46260c:	brk	#0x3e8
  462610:	mov	x0, #0x0                   	// #0
  462614:	str	xzr, [sp, #72]
  462618:	stp	x21, x22, [sp, #32]
  46261c:	str	x23, [sp, #48]
  462620:	ldr	x0, [x0, #8]
  462624:	brk	#0x3e8
  462628:	stp	x29, x30, [sp, #-32]!
  46262c:	mov	x29, sp
  462630:	ldr	x1, [x0, #24]
  462634:	stp	x19, x20, [sp, #16]
  462638:	mov	x19, x0
  46263c:	ldrb	w10, [x1]
  462640:	cbz	w10, 462704 <_obstack_memory_used@@Base+0x5ddc>
  462644:	add	x2, x1, #0x1
  462648:	str	x2, [x0, #24]
  46264c:	ldrb	w10, [x1, #1]
  462650:	ldrb	w8, [x1]
  462654:	cbnz	w10, 46270c <_obstack_memory_used@@Base+0x5de4>
  462658:	adrp	x5, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  46265c:	add	x5, x5, #0xdf0
  462660:	add	x5, x5, #0x5c8
  462664:	mov	w4, #0x43                  	// #67
  462668:	mov	w2, #0x0                   	// #0
  46266c:	mov	w7, #0x18                  	// #24
  462670:	sub	w1, w4, w2
  462674:	add	w1, w1, w1, lsr #31
  462678:	add	w1, w2, w1, asr #1
  46267c:	smull	x3, w1, w7
  462680:	add	x9, x5, x3
  462684:	ldr	x3, [x5, x3]
  462688:	ldrb	w6, [x3]
  46268c:	cmp	w6, w8
  462690:	b.eq	4626b4 <_obstack_memory_used@@Base+0x5d8c>  // b.none
  462694:	b.ls	4626fc <_obstack_memory_used@@Base+0x5dd4>  // b.plast
  462698:	mov	w4, w1
  46269c:	cmp	w2, w4
  4626a0:	b.ne	462670 <_obstack_memory_used@@Base+0x5d48>  // b.any
  4626a4:	mov	x0, #0x0                   	// #0
  4626a8:	ldp	x19, x20, [sp, #16]
  4626ac:	ldp	x29, x30, [sp], #32
  4626b0:	ret
  4626b4:	ldrb	w3, [x3, #1]
  4626b8:	cmp	w3, w10
  4626bc:	b.ne	462694 <_obstack_memory_used@@Base+0x5d6c>  // b.any
  4626c0:	ldp	w0, w1, [x19, #40]
  4626c4:	cmp	w0, w1
  4626c8:	b.ge	4626a4 <_obstack_memory_used@@Base+0x5d7c>  // b.tcont
  4626cc:	ldr	x2, [x19, #32]
  4626d0:	smull	x7, w0, w7
  4626d4:	add	w1, w0, #0x1
  4626d8:	mov	w3, #0x32                  	// #50
  4626dc:	add	x0, x2, x7
  4626e0:	str	wzr, [x0, #4]
  4626e4:	str	w1, [x19, #40]
  4626e8:	str	w3, [x2, x7]
  4626ec:	str	x9, [x0, #8]
  4626f0:	ldp	x19, x20, [sp, #16]
  4626f4:	ldp	x29, x30, [sp], #32
  4626f8:	ret
  4626fc:	add	w2, w1, #0x1
  462700:	b	46269c <_obstack_memory_used@@Base+0x5d74>
  462704:	mov	w8, #0x0                   	// #0
  462708:	b	462658 <_obstack_memory_used@@Base+0x5d30>
  46270c:	add	x2, x1, #0x2
  462710:	str	x2, [x0, #24]
  462714:	cmp	w8, #0x76
  462718:	ldrb	w10, [x1, #1]
  46271c:	b.ne	462778 <_obstack_memory_used@@Base+0x5e50>  // b.any
  462720:	sub	w11, w10, #0x30
  462724:	and	w1, w11, #0xff
  462728:	cmp	w1, #0x9
  46272c:	b.hi	462658 <_obstack_memory_used@@Base+0x5d30>  // b.pmore
  462730:	bl	45f3d0 <_obstack_memory_used@@Base+0x2aa8>
  462734:	mov	x2, x0
  462738:	ldp	w1, w0, [x19, #40]
  46273c:	cmp	w1, w0
  462740:	b.ge	4626a4 <_obstack_memory_used@@Base+0x5d7c>  // b.tcont
  462744:	mov	w0, #0x18                  	// #24
  462748:	add	w4, w1, #0x1
  46274c:	ldr	x3, [x19, #32]
  462750:	smull	x1, w1, w0
  462754:	add	x0, x3, x1
  462758:	str	wzr, [x0, #4]
  46275c:	str	w4, [x19, #40]
  462760:	cbz	x2, 4626a4 <_obstack_memory_used@@Base+0x5d7c>
  462764:	mov	x4, #0x33                  	// #51
  462768:	str	x4, [x3, x1]
  46276c:	str	w11, [x0, #8]
  462770:	str	x2, [x0, #16]
  462774:	b	4626a8 <_obstack_memory_used@@Base+0x5d80>
  462778:	cmp	w10, #0x76
  46277c:	mov	w1, #0x63                  	// #99
  462780:	ccmp	w8, w1, #0x0, eq  // eq = none
  462784:	b.ne	462658 <_obstack_memory_used@@Base+0x5d30>  // b.any
  462788:	ldp	w1, w20, [x0, #76]
  46278c:	cmp	w1, #0x0
  462790:	cset	w1, eq  // eq = none
  462794:	str	w1, [x0, #80]
  462798:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  46279c:	mov	x2, x0
  4627a0:	ldr	w1, [x19, #80]
  4627a4:	mov	x3, #0x0                   	// #0
  4627a8:	cbz	w1, 4627c8 <_obstack_memory_used@@Base+0x5ea0>
  4627ac:	mov	x0, x19
  4627b0:	mov	w1, #0x35                  	// #53
  4627b4:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4627b8:	str	w20, [x19, #80]
  4627bc:	ldp	x19, x20, [sp, #16]
  4627c0:	ldp	x29, x30, [sp], #32
  4627c4:	ret
  4627c8:	mov	x0, x19
  4627cc:	mov	w1, #0x34                  	// #52
  4627d0:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4627d4:	str	w20, [x19, #80]
  4627d8:	b	4627bc <_obstack_memory_used@@Base+0x5e94>
  4627dc:	nop
  4627e0:	stp	x29, x30, [sp, #-64]!
  4627e4:	mov	x29, sp
  4627e8:	stp	x19, x20, [sp, #16]
  4627ec:	mov	x19, x0
  4627f0:	mov	w0, #0x2e                  	// #46
  4627f4:	str	xzr, [sp, #56]
  4627f8:	ldr	x2, [x19, #24]
  4627fc:	ldrb	w1, [x2]
  462800:	cmp	w1, #0x45
  462804:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  462808:	ccmp	w1, w0, #0x4, ne  // ne = any
  46280c:	b.eq	4628a0 <_obstack_memory_used@@Base+0x5f78>  // b.none
  462810:	add	x20, sp, #0x38
  462814:	stp	x21, x22, [sp, #32]
  462818:	mov	w22, w0
  46281c:	mov	w21, #0x4f                  	// #79
  462820:	cmp	w1, #0x52
  462824:	mov	x0, x19
  462828:	ccmp	w1, w21, #0x4, ne  // ne = any
  46282c:	b.ne	46283c <_obstack_memory_used@@Base+0x5f14>  // b.any
  462830:	ldrb	w1, [x2, #1]
  462834:	cmp	w1, #0x45
  462838:	b.eq	46287c <_obstack_memory_used@@Base+0x5f54>  // b.none
  46283c:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  462840:	mov	x2, x0
  462844:	mov	x3, #0x0                   	// #0
  462848:	mov	x0, x19
  46284c:	mov	w1, #0x2e                  	// #46
  462850:	cbz	x2, 46289c <_obstack_memory_used@@Base+0x5f74>
  462854:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  462858:	str	x0, [x20]
  46285c:	add	x20, x0, #0x10
  462860:	cbz	x0, 46289c <_obstack_memory_used@@Base+0x5f74>
  462864:	ldr	x2, [x19, #24]
  462868:	ldrb	w1, [x2]
  46286c:	cmp	w1, #0x45
  462870:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  462874:	ccmp	w1, w22, #0x4, ne  // ne = any
  462878:	b.ne	462820 <_obstack_memory_used@@Base+0x5ef8>  // b.any
  46287c:	ldr	x0, [sp, #56]
  462880:	cbz	x0, 46289c <_obstack_memory_used@@Base+0x5f74>
  462884:	ldr	x1, [x0, #16]
  462888:	cbz	x1, 4628b0 <_obstack_memory_used@@Base+0x5f88>
  46288c:	ldp	x21, x22, [sp, #32]
  462890:	ldp	x19, x20, [sp, #16]
  462894:	ldp	x29, x30, [sp], #64
  462898:	ret
  46289c:	ldp	x21, x22, [sp, #32]
  4628a0:	mov	x0, #0x0                   	// #0
  4628a4:	ldp	x19, x20, [sp, #16]
  4628a8:	ldp	x29, x30, [sp], #64
  4628ac:	ret
  4628b0:	ldr	x1, [x0, #8]
  4628b4:	ldr	w2, [x1]
  4628b8:	cmp	w2, #0x27
  4628bc:	b.ne	46288c <_obstack_memory_used@@Base+0x5f64>  // b.any
  4628c0:	ldr	x1, [x1, #8]
  4628c4:	ldr	w2, [x1, #28]
  4628c8:	cmp	w2, #0x9
  4628cc:	b.ne	46288c <_obstack_memory_used@@Base+0x5f64>  // b.any
  4628d0:	ldr	w2, [x1, #8]
  4628d4:	ldr	w1, [x19, #72]
  4628d8:	ldp	x21, x22, [sp, #32]
  4628dc:	sub	w1, w1, w2
  4628e0:	str	w1, [x19, #72]
  4628e4:	str	xzr, [x0, #8]
  4628e8:	b	462890 <_obstack_memory_used@@Base+0x5f68>
  4628ec:	nop
  4628f0:	stp	x29, x30, [sp, #-96]!
  4628f4:	cmp	w2, #0x0
  4628f8:	mov	x29, sp
  4628fc:	stp	x19, x20, [sp, #16]
  462900:	mov	x19, x0
  462904:	mov	w0, #0x1b                  	// #27
  462908:	stp	x21, x22, [sp, #32]
  46290c:	mov	x20, x1
  462910:	mov	w22, #0x1c                  	// #28
  462914:	ldr	x4, [x19, #24]
  462918:	stp	x23, x24, [sp, #48]
  46291c:	mov	w23, #0x1d                  	// #29
  462920:	stp	x25, x26, [sp, #64]
  462924:	mov	w25, #0x1e                  	// #30
  462928:	csel	w25, w25, w0, ne  // ne = any
  46292c:	ldrb	w5, [x4]
  462930:	mov	w0, #0x1a                  	// #26
  462934:	csel	w23, w23, w0, ne  // ne = any
  462938:	mov	w0, #0x19                  	// #25
  46293c:	mov	w24, w2
  462940:	csel	w22, w22, w0, ne  // ne = any
  462944:	mov	x21, x1
  462948:	mov	x0, x4
  46294c:	mov	w26, #0x1                   	// #1
  462950:	bl	45f8e0 <_obstack_memory_used@@Base+0x2fb8>
  462954:	cbz	w0, 462a70 <_obstack_memory_used@@Base+0x6148>
  462958:	add	x0, x4, #0x1
  46295c:	str	x0, [x19, #24]
  462960:	cmp	w5, #0x72
  462964:	b.eq	462a30 <_obstack_memory_used@@Base+0x6108>  // b.none
  462968:	cmp	w5, #0x56
  46296c:	b.eq	462ad0 <_obstack_memory_used@@Base+0x61a8>  // b.none
  462970:	cmp	w5, #0x4b
  462974:	b.eq	462ae8 <_obstack_memory_used@@Base+0x61c0>  // b.none
  462978:	ldrb	w0, [x4, #1]
  46297c:	cbz	w0, 462a10 <_obstack_memory_used@@Base+0x60e8>
  462980:	add	x0, x4, #0x2
  462984:	str	x0, [x19, #24]
  462988:	ldrb	w0, [x4, #1]
  46298c:	cmp	w0, #0x78
  462990:	b.eq	462b00 <_obstack_memory_used@@Base+0x61d8>  // b.none
  462994:	and	w1, w0, #0xffffffdf
  462998:	cmp	w1, #0x4f
  46299c:	and	w1, w1, #0xff
  4629a0:	b.ne	462b18 <_obstack_memory_used@@Base+0x61f0>  // b.any
  4629a4:	ldr	w2, [x19, #72]
  4629a8:	cmp	w0, #0x4f
  4629ac:	add	w0, w2, #0x9
  4629b0:	str	w0, [x19, #72]
  4629b4:	b.ne	462b5c <_obstack_memory_used@@Base+0x6234>  // b.any
  4629b8:	str	x27, [sp, #80]
  4629bc:	mov	x0, x19
  4629c0:	ldr	w27, [x19, #76]
  4629c4:	str	w26, [x19, #76]
  4629c8:	bl	460428 <_obstack_memory_used@@Base+0x3b00>
  4629cc:	str	w27, [x19, #76]
  4629d0:	mov	x3, x0
  4629d4:	cbz	x0, 462b74 <_obstack_memory_used@@Base+0x624c>
  4629d8:	ldr	x0, [x19, #24]
  4629dc:	ldrb	w1, [x0]
  4629e0:	cmp	w1, #0x45
  4629e4:	b.ne	462b74 <_obstack_memory_used@@Base+0x624c>  // b.any
  4629e8:	add	x0, x0, #0x1
  4629ec:	mov	w1, #0x4f                  	// #79
  4629f0:	ldr	x27, [sp, #80]
  4629f4:	str	x0, [x19, #24]
  4629f8:	mov	x2, #0x0                   	// #0
  4629fc:	mov	x0, x19
  462a00:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  462a04:	str	x0, [x20]
  462a08:	cbnz	x0, 462a58 <_obstack_memory_used@@Base+0x6130>
  462a0c:	nop
  462a10:	mov	x20, #0x0                   	// #0
  462a14:	mov	x0, x20
  462a18:	ldp	x19, x20, [sp, #16]
  462a1c:	ldp	x21, x22, [sp, #32]
  462a20:	ldp	x23, x24, [sp, #48]
  462a24:	ldp	x25, x26, [sp, #64]
  462a28:	ldp	x29, x30, [sp], #96
  462a2c:	ret
  462a30:	ldr	w0, [x19, #72]
  462a34:	mov	w1, w22
  462a38:	mov	x3, #0x0                   	// #0
  462a3c:	add	w0, w0, #0x9
  462a40:	str	w0, [x19, #72]
  462a44:	mov	x0, x19
  462a48:	mov	x2, #0x0                   	// #0
  462a4c:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  462a50:	str	x0, [x20]
  462a54:	cbz	x0, 462a10 <_obstack_memory_used@@Base+0x60e8>
  462a58:	ldr	x4, [x19, #24]
  462a5c:	add	x20, x0, #0x8
  462a60:	mov	x0, x4
  462a64:	ldrb	w5, [x4]
  462a68:	bl	45f8e0 <_obstack_memory_used@@Base+0x2fb8>
  462a6c:	cbnz	w0, 462958 <_obstack_memory_used@@Base+0x6030>
  462a70:	cmp	w5, #0x46
  462a74:	eor	w24, w24, #0x1
  462a78:	cset	w0, eq  // eq = none
  462a7c:	tst	w24, w0
  462a80:	b.eq	462a14 <_obstack_memory_used@@Base+0x60ec>  // b.none
  462a84:	cmp	x20, x21
  462a88:	b.eq	462a14 <_obstack_memory_used@@Base+0x60ec>  // b.none
  462a8c:	mov	w3, #0x1d                  	// #29
  462a90:	mov	w2, #0x1e                  	// #30
  462a94:	mov	w1, #0x1c                  	// #28
  462a98:	b	462ab0 <_obstack_memory_used@@Base+0x6188>
  462a9c:	cmp	w0, #0x19
  462aa0:	b.eq	462b6c <_obstack_memory_used@@Base+0x6244>  // b.none
  462aa4:	add	x21, x21, #0x8
  462aa8:	cmp	x20, x21
  462aac:	b.eq	462a14 <_obstack_memory_used@@Base+0x60ec>  // b.none
  462ab0:	ldr	x21, [x21]
  462ab4:	ldr	w0, [x21]
  462ab8:	cmp	w0, #0x1a
  462abc:	b.eq	462b64 <_obstack_memory_used@@Base+0x623c>  // b.none
  462ac0:	cmp	w0, #0x1b
  462ac4:	b.ne	462a9c <_obstack_memory_used@@Base+0x6174>  // b.any
  462ac8:	str	w2, [x21]
  462acc:	b	462aa4 <_obstack_memory_used@@Base+0x617c>
  462ad0:	ldr	w0, [x19, #72]
  462ad4:	mov	w1, w23
  462ad8:	mov	x3, #0x0                   	// #0
  462adc:	add	w0, w0, #0x9
  462ae0:	str	w0, [x19, #72]
  462ae4:	b	462a44 <_obstack_memory_used@@Base+0x611c>
  462ae8:	ldr	w0, [x19, #72]
  462aec:	mov	w1, w25
  462af0:	mov	x3, #0x0                   	// #0
  462af4:	add	w0, w0, #0x6
  462af8:	str	w0, [x19, #72]
  462afc:	b	462a44 <_obstack_memory_used@@Base+0x611c>
  462b00:	ldr	w0, [x19, #72]
  462b04:	mov	x3, #0x0                   	// #0
  462b08:	mov	w1, #0x4d                  	// #77
  462b0c:	add	w0, w0, #0x11
  462b10:	str	w0, [x19, #72]
  462b14:	b	462a44 <_obstack_memory_used@@Base+0x611c>
  462b18:	cmp	w0, #0x77
  462b1c:	b.ne	462a10 <_obstack_memory_used@@Base+0x60e8>  // b.any
  462b20:	ldr	w1, [x19, #72]
  462b24:	mov	x0, x19
  462b28:	add	w1, w1, #0x6
  462b2c:	str	w1, [x19, #72]
  462b30:	bl	4627e0 <_obstack_memory_used@@Base+0x5eb8>
  462b34:	mov	x3, x0
  462b38:	cbz	x0, 462a10 <_obstack_memory_used@@Base+0x60e8>
  462b3c:	ldr	x0, [x19, #24]
  462b40:	ldrb	w1, [x0]
  462b44:	cmp	w1, #0x45
  462b48:	b.ne	462a10 <_obstack_memory_used@@Base+0x60e8>  // b.any
  462b4c:	add	x0, x0, #0x1
  462b50:	mov	w1, #0x50                  	// #80
  462b54:	str	x0, [x19, #24]
  462b58:	b	462a44 <_obstack_memory_used@@Base+0x611c>
  462b5c:	mov	x3, #0x0                   	// #0
  462b60:	b	462a44 <_obstack_memory_used@@Base+0x611c>
  462b64:	str	w3, [x21]
  462b68:	b	462aa4 <_obstack_memory_used@@Base+0x617c>
  462b6c:	str	w1, [x21]
  462b70:	b	462aa4 <_obstack_memory_used@@Base+0x617c>
  462b74:	ldr	x27, [sp, #80]
  462b78:	b	462a10 <_obstack_memory_used@@Base+0x60e8>
  462b7c:	nop
  462b80:	stp	x29, x30, [sp, #-32]!
  462b84:	mov	x29, sp
  462b88:	stp	x19, x20, [sp, #16]
  462b8c:	mov	x19, x0
  462b90:	ldr	x0, [x0, #24]
  462b94:	ldrb	w2, [x0]
  462b98:	cmp	w2, #0x4a
  462b9c:	b.eq	462c00 <_obstack_memory_used@@Base+0x62d8>  // b.none
  462ba0:	cbz	w1, 462bdc <_obstack_memory_used@@Base+0x62b4>
  462ba4:	mov	x0, x19
  462ba8:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  462bac:	mov	x20, x0
  462bb0:	cbz	x0, 462bf0 <_obstack_memory_used@@Base+0x62c8>
  462bb4:	mov	x0, x19
  462bb8:	bl	4627e0 <_obstack_memory_used@@Base+0x5eb8>
  462bbc:	mov	x3, x0
  462bc0:	cbz	x0, 462bf0 <_obstack_memory_used@@Base+0x62c8>
  462bc4:	mov	x2, x20
  462bc8:	mov	x0, x19
  462bcc:	ldp	x19, x20, [sp, #16]
  462bd0:	mov	w1, #0x29                  	// #41
  462bd4:	ldp	x29, x30, [sp], #32
  462bd8:	b	45ef20 <_obstack_memory_used@@Base+0x25f8>
  462bdc:	mov	x0, x19
  462be0:	mov	x20, #0x0                   	// #0
  462be4:	bl	4627e0 <_obstack_memory_used@@Base+0x5eb8>
  462be8:	mov	x3, x0
  462bec:	cbnz	x0, 462bc4 <_obstack_memory_used@@Base+0x629c>
  462bf0:	mov	x0, #0x0                   	// #0
  462bf4:	ldp	x19, x20, [sp, #16]
  462bf8:	ldp	x29, x30, [sp], #32
  462bfc:	ret
  462c00:	add	x0, x0, #0x1
  462c04:	str	x0, [x19, #24]
  462c08:	b	462ba4 <_obstack_memory_used@@Base+0x627c>
  462c0c:	nop
  462c10:	stp	x29, x30, [sp, #-32]!
  462c14:	mov	x29, sp
  462c18:	str	x19, [sp, #16]
  462c1c:	mov	x19, x0
  462c20:	ldr	w0, [x0, #16]
  462c24:	tbnz	w0, #18, 462c60 <_obstack_memory_used@@Base+0x6338>
  462c28:	ldr	w1, [x19, #84]
  462c2c:	cmp	w1, #0x800
  462c30:	b.hi	462c70 <_obstack_memory_used@@Base+0x6348>  // b.pmore
  462c34:	ldr	x2, [x19, #24]
  462c38:	add	w0, w1, #0x1
  462c3c:	str	w0, [x19, #84]
  462c40:	mov	x0, #0x0                   	// #0
  462c44:	ldrb	w3, [x2]
  462c48:	cmp	w3, #0x46
  462c4c:	b.eq	462c80 <_obstack_memory_used@@Base+0x6358>  // b.none
  462c50:	str	w1, [x19, #84]
  462c54:	ldr	x19, [sp, #16]
  462c58:	ldp	x29, x30, [sp], #32
  462c5c:	ret
  462c60:	ldr	x2, [x19, #24]
  462c64:	ldrb	w0, [x2]
  462c68:	cmp	w0, #0x46
  462c6c:	b.eq	462c80 <_obstack_memory_used@@Base+0x6358>  // b.none
  462c70:	mov	x0, #0x0                   	// #0
  462c74:	ldr	x19, [sp, #16]
  462c78:	ldp	x29, x30, [sp], #32
  462c7c:	ret
  462c80:	add	x4, x2, #0x1
  462c84:	str	x4, [x19, #24]
  462c88:	add	x3, x2, #0x2
  462c8c:	mov	w1, #0x1                   	// #1
  462c90:	ldrb	w2, [x2, #1]
  462c94:	mov	x0, x19
  462c98:	cmp	w2, #0x59
  462c9c:	csel	x2, x3, x4, eq  // eq = none
  462ca0:	str	x2, [x19, #24]
  462ca4:	bl	462b80 <_obstack_memory_used@@Base+0x6258>
  462ca8:	mov	x1, x0
  462cac:	mov	x0, x19
  462cb0:	bl	45efa8 <_obstack_memory_used@@Base+0x2680>
  462cb4:	ldr	x1, [x19, #24]
  462cb8:	ldrb	w2, [x1]
  462cbc:	cmp	w2, #0x45
  462cc0:	b.eq	462ce0 <_obstack_memory_used@@Base+0x63b8>  // b.none
  462cc4:	mov	x0, #0x0                   	// #0
  462cc8:	ldr	w1, [x19, #16]
  462ccc:	tbnz	w1, #18, 462c74 <_obstack_memory_used@@Base+0x634c>
  462cd0:	ldr	w1, [x19, #84]
  462cd4:	sub	w1, w1, #0x1
  462cd8:	str	w1, [x19, #84]
  462cdc:	b	462c54 <_obstack_memory_used@@Base+0x632c>
  462ce0:	add	x1, x1, #0x1
  462ce4:	str	x1, [x19, #24]
  462ce8:	b	462cc8 <_obstack_memory_used@@Base+0x63a0>
  462cec:	nop
  462cf0:	stp	x29, x30, [sp, #-48]!
  462cf4:	mov	x29, sp
  462cf8:	ldr	x3, [x0, #24]
  462cfc:	stp	x19, x20, [sp, #16]
  462d00:	mov	x19, x0
  462d04:	ldrb	w2, [x3]
  462d08:	sub	w1, w2, #0x30
  462d0c:	and	w1, w1, #0xff
  462d10:	cmp	w1, #0x9
  462d14:	b.ls	462e24 <_obstack_memory_used@@Base+0x64fc>  // b.plast
  462d18:	sub	w1, w2, #0x61
  462d1c:	and	w1, w1, #0xff
  462d20:	cmp	w1, #0x19
  462d24:	b.hi	462d6c <_obstack_memory_used@@Base+0x6444>  // b.pmore
  462d28:	cmp	w2, #0x6f
  462d2c:	b.eq	462eec <_obstack_memory_used@@Base+0x65c4>  // b.none
  462d30:	mov	x0, x19
  462d34:	bl	462628 <_obstack_memory_used@@Base+0x5d00>
  462d38:	mov	x20, x0
  462d3c:	cbz	x0, 462d4c <_obstack_memory_used@@Base+0x6424>
  462d40:	ldr	w0, [x0]
  462d44:	cmp	w0, #0x32
  462d48:	b.eq	462e50 <_obstack_memory_used@@Base+0x6528>  // b.none
  462d4c:	ldr	x0, [x19, #24]
  462d50:	ldrb	w1, [x0]
  462d54:	cmp	w1, #0x42
  462d58:	b.eq	462e3c <_obstack_memory_used@@Base+0x6514>  // b.none
  462d5c:	mov	x0, x20
  462d60:	ldp	x19, x20, [sp, #16]
  462d64:	ldp	x29, x30, [sp], #48
  462d68:	ret
  462d6c:	sub	w1, w2, #0x43
  462d70:	and	w1, w1, #0xff
  462d74:	cmp	w1, #0x1
  462d78:	b.ls	462f04 <_obstack_memory_used@@Base+0x65dc>  // b.plast
  462d7c:	cmp	w2, #0x4c
  462d80:	b.eq	462eb8 <_obstack_memory_used@@Base+0x6590>  // b.none
  462d84:	cmp	w2, #0x55
  462d88:	b.ne	462ed8 <_obstack_memory_used@@Base+0x65b0>  // b.any
  462d8c:	ldrb	w1, [x3, #1]
  462d90:	cmp	w1, #0x6c
  462d94:	b.eq	462fc8 <_obstack_memory_used@@Base+0x66a0>  // b.none
  462d98:	cmp	w1, #0x74
  462d9c:	b.ne	462ed8 <_obstack_memory_used@@Base+0x65b0>  // b.any
  462da0:	add	x1, x3, #0x1
  462da4:	str	x1, [x0, #24]
  462da8:	mov	x20, #0x0                   	// #0
  462dac:	ldrb	w1, [x3, #1]
  462db0:	cmp	w1, #0x74
  462db4:	b.ne	462d54 <_obstack_memory_used@@Base+0x642c>  // b.any
  462db8:	add	x3, x3, #0x2
  462dbc:	str	x3, [x0, #24]
  462dc0:	bl	45f2d8 <_obstack_memory_used@@Base+0x29b0>
  462dc4:	tbnz	w0, #31, 462d4c <_obstack_memory_used@@Base+0x6424>
  462dc8:	ldp	w1, w2, [x19, #40]
  462dcc:	cmp	w1, w2
  462dd0:	b.ge	463190 <_obstack_memory_used@@Base+0x6868>  // b.tcont
  462dd4:	ldp	x7, x3, [x19, #24]
  462dd8:	mov	w2, #0x18                  	// #24
  462ddc:	add	w6, w1, #0x1
  462de0:	mov	w4, #0x48                  	// #72
  462de4:	smull	x1, w1, w2
  462de8:	sxtw	x0, w0
  462dec:	ldp	w2, w5, [x19, #56]
  462df0:	add	x20, x3, x1
  462df4:	cmp	w2, w5
  462df8:	str	wzr, [x20, #4]
  462dfc:	str	w6, [x19, #40]
  462e00:	str	w4, [x3, x1]
  462e04:	str	x0, [x20, #8]
  462e08:	b.ge	463184 <_obstack_memory_used@@Base+0x685c>  // b.tcont
  462e0c:	ldr	x1, [x19, #48]
  462e10:	add	w0, w2, #0x1
  462e14:	str	x20, [x1, w2, sxtw #3]
  462e18:	str	w0, [x19, #56]
  462e1c:	ldrb	w1, [x7]
  462e20:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  462e24:	bl	45f3d0 <_obstack_memory_used@@Base+0x2aa8>
  462e28:	mov	x20, x0
  462e2c:	ldr	x3, [x19, #24]
  462e30:	ldrb	w1, [x3]
  462e34:	cmp	w1, #0x42
  462e38:	b.ne	462d5c <_obstack_memory_used@@Base+0x6434>  // b.any
  462e3c:	mov	x1, x20
  462e40:	mov	x0, x19
  462e44:	ldp	x19, x20, [sp, #16]
  462e48:	ldp	x29, x30, [sp], #48
  462e4c:	b	45f550 <_obstack_memory_used@@Base+0x2c28>
  462e50:	ldr	x1, [x20, #8]
  462e54:	ldr	w0, [x19, #72]
  462e58:	ldr	x2, [x1]
  462e5c:	add	w0, w0, #0x7
  462e60:	ldr	w1, [x1, #16]
  462e64:	add	w0, w0, w1
  462e68:	str	w0, [x19, #72]
  462e6c:	ldrb	w0, [x2]
  462e70:	cmp	w0, #0x6c
  462e74:	b.ne	462d4c <_obstack_memory_used@@Base+0x6424>  // b.any
  462e78:	ldrb	w0, [x2, #1]
  462e7c:	cmp	w0, #0x69
  462e80:	b.ne	462d4c <_obstack_memory_used@@Base+0x6424>  // b.any
  462e84:	ldrb	w0, [x2, #2]
  462e88:	cbnz	w0, 462d4c <_obstack_memory_used@@Base+0x6424>
  462e8c:	mov	x0, x19
  462e90:	bl	45f3d0 <_obstack_memory_used@@Base+0x2aa8>
  462e94:	mov	x2, x20
  462e98:	mov	x3, x0
  462e9c:	mov	w1, #0x37                  	// #55
  462ea0:	mov	x0, x19
  462ea4:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  462ea8:	mov	x20, x0
  462eac:	ldr	x3, [x19, #24]
  462eb0:	ldrb	w1, [x3]
  462eb4:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  462eb8:	add	x3, x3, #0x1
  462ebc:	str	x3, [x0, #24]
  462ec0:	bl	45f3d0 <_obstack_memory_used@@Base+0x2aa8>
  462ec4:	mov	x20, x0
  462ec8:	cbz	x0, 462ed8 <_obstack_memory_used@@Base+0x65b0>
  462ecc:	mov	x0, x19
  462ed0:	bl	45f938 <_obstack_memory_used@@Base+0x3010>
  462ed4:	cbnz	w0, 462d4c <_obstack_memory_used@@Base+0x6424>
  462ed8:	mov	x20, #0x0                   	// #0
  462edc:	mov	x0, x20
  462ee0:	ldp	x19, x20, [sp, #16]
  462ee4:	ldp	x29, x30, [sp], #48
  462ee8:	ret
  462eec:	ldrb	w0, [x3, #1]
  462ef0:	cmp	w0, #0x6e
  462ef4:	b.ne	462d30 <_obstack_memory_used@@Base+0x6408>  // b.any
  462ef8:	add	x3, x3, #0x2
  462efc:	str	x3, [x19, #24]
  462f00:	b	462d30 <_obstack_memory_used@@Base+0x6408>
  462f04:	ldr	x0, [x0, #64]
  462f08:	cbz	x0, 462f1c <_obstack_memory_used@@Base+0x65f4>
  462f0c:	ldr	w1, [x0]
  462f10:	cbz	w1, 462f98 <_obstack_memory_used@@Base+0x6670>
  462f14:	cmp	w1, #0x18
  462f18:	b.eq	462f98 <_obstack_memory_used@@Base+0x6670>  // b.none
  462f1c:	cmp	w2, #0x43
  462f20:	b.eq	463078 <_obstack_memory_used@@Base+0x6750>  // b.none
  462f24:	ldrb	w1, [x3, #1]
  462f28:	cmp	w1, #0x32
  462f2c:	b.eq	46317c <_obstack_memory_used@@Base+0x6854>  // b.none
  462f30:	b.hi	4630ec <_obstack_memory_used@@Base+0x67c4>  // b.pmore
  462f34:	cmp	w1, #0x30
  462f38:	b.eq	463118 <_obstack_memory_used@@Base+0x67f0>  // b.none
  462f3c:	cmp	w1, #0x31
  462f40:	mov	w4, #0x2                   	// #2
  462f44:	b.ne	463100 <_obstack_memory_used@@Base+0x67d8>  // b.any
  462f48:	add	x1, x3, #0x2
  462f4c:	ldr	w2, [x19, #44]
  462f50:	str	x1, [x19, #24]
  462f54:	ldr	w1, [x19, #40]
  462f58:	cmp	w1, w2
  462f5c:	b.ge	46310c <_obstack_memory_used@@Base+0x67e4>  // b.tcont
  462f60:	mov	w6, #0x18                  	// #24
  462f64:	add	w5, w1, #0x1
  462f68:	ldr	x2, [x19, #32]
  462f6c:	smull	x1, w1, w6
  462f70:	add	x20, x2, x1
  462f74:	str	wzr, [x20, #4]
  462f78:	str	w5, [x19, #40]
  462f7c:	cbz	x0, 46310c <_obstack_memory_used@@Base+0x67e4>
  462f80:	mov	x5, #0x8                   	// #8
  462f84:	str	x5, [x2, x1]
  462f88:	str	w4, [x20, #8]
  462f8c:	str	x0, [x20, #16]
  462f90:	ldrb	w1, [x3, #2]
  462f94:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  462f98:	ldr	w2, [x0, #16]
  462f9c:	ldr	w1, [x19, #72]
  462fa0:	add	w1, w1, w2
  462fa4:	str	w1, [x19, #72]
  462fa8:	ldrb	w1, [x3]
  462fac:	cmp	w1, #0x43
  462fb0:	mov	w2, w1
  462fb4:	b.eq	463078 <_obstack_memory_used@@Base+0x6750>  // b.none
  462fb8:	cmp	w1, #0x44
  462fbc:	b.eq	462f24 <_obstack_memory_used@@Base+0x65fc>  // b.none
  462fc0:	mov	x20, #0x0                   	// #0
  462fc4:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  462fc8:	add	x1, x3, #0x1
  462fcc:	str	x1, [x0, #24]
  462fd0:	mov	x20, #0x0                   	// #0
  462fd4:	ldrb	w1, [x3, #1]
  462fd8:	cmp	w1, #0x6c
  462fdc:	b.ne	462d54 <_obstack_memory_used@@Base+0x642c>  // b.any
  462fe0:	add	x3, x3, #0x2
  462fe4:	str	x3, [x0, #24]
  462fe8:	bl	4627e0 <_obstack_memory_used@@Base+0x5eb8>
  462fec:	mov	x11, x0
  462ff0:	ldr	x0, [x19, #24]
  462ff4:	ldrb	w1, [x0]
  462ff8:	cbz	x11, 462d54 <_obstack_memory_used@@Base+0x642c>
  462ffc:	cmp	w1, #0x45
  463000:	b.ne	462d54 <_obstack_memory_used@@Base+0x642c>  // b.any
  463004:	add	x0, x0, #0x1
  463008:	str	x0, [x19, #24]
  46300c:	mov	x0, x19
  463010:	bl	45f2d8 <_obstack_memory_used@@Base+0x29b0>
  463014:	tbnz	w0, #31, 463190 <_obstack_memory_used@@Base+0x6868>
  463018:	ldp	w1, w2, [x19, #40]
  46301c:	ldr	x4, [x19, #24]
  463020:	cmp	w1, w2
  463024:	b.ge	4631a0 <_obstack_memory_used@@Base+0x6878>  // b.tcont
  463028:	mov	w2, #0x18                  	// #24
  46302c:	add	w6, w1, #0x1
  463030:	ldr	x3, [x19, #32]
  463034:	smull	x1, w1, w2
  463038:	ldp	w2, w7, [x19, #56]
  46303c:	add	x20, x3, x1
  463040:	mov	w5, #0x46                  	// #70
  463044:	cmp	w2, w7
  463048:	str	wzr, [x20, #4]
  46304c:	str	w6, [x19, #40]
  463050:	str	w5, [x3, x1]
  463054:	str	x11, [x20, #8]
  463058:	str	w0, [x20, #16]
  46305c:	b.ge	4631a0 <_obstack_memory_used@@Base+0x6878>  // b.tcont
  463060:	ldr	x1, [x19, #48]
  463064:	add	w0, w2, #0x1
  463068:	str	x20, [x1, w2, sxtw #3]
  46306c:	str	w0, [x19, #56]
  463070:	ldrb	w1, [x4]
  463074:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  463078:	str	x21, [sp, #32]
  46307c:	ldrb	w1, [x3, #1]
  463080:	cmp	w1, #0x49
  463084:	b.eq	463128 <_obstack_memory_used@@Base+0x6800>  // b.none
  463088:	sub	w2, w1, #0x31
  46308c:	and	w2, w2, #0xff
  463090:	cmp	w2, #0x4
  463094:	b.hi	463170 <_obstack_memory_used@@Base+0x6848>  // b.pmore
  463098:	sub	w21, w1, #0x30
  46309c:	add	x3, x3, #0x2
  4630a0:	str	x3, [x19, #24]
  4630a4:	ldp	w1, w2, [x19, #40]
  4630a8:	cmp	w1, w2
  4630ac:	b.ge	4631ac <_obstack_memory_used@@Base+0x6884>  // b.tcont
  4630b0:	mov	w4, #0x18                  	// #24
  4630b4:	add	w3, w1, #0x1
  4630b8:	smull	x1, w1, w4
  4630bc:	ldp	x4, x2, [x19, #24]
  4630c0:	add	x20, x2, x1
  4630c4:	str	wzr, [x20, #4]
  4630c8:	str	w3, [x19, #40]
  4630cc:	cbz	x0, 463160 <_obstack_memory_used@@Base+0x6838>
  4630d0:	mov	x3, #0x7                   	// #7
  4630d4:	str	x3, [x2, x1]
  4630d8:	str	w21, [x20, #8]
  4630dc:	str	x0, [x20, #16]
  4630e0:	ldr	x21, [sp, #32]
  4630e4:	ldrb	w1, [x4]
  4630e8:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  4630ec:	cmp	w1, #0x34
  4630f0:	b.eq	463120 <_obstack_memory_used@@Base+0x67f8>  // b.none
  4630f4:	cmp	w1, #0x35
  4630f8:	mov	w4, #0x5                   	// #5
  4630fc:	b.eq	462f48 <_obstack_memory_used@@Base+0x6620>  // b.none
  463100:	mov	w1, w2
  463104:	mov	x20, #0x0                   	// #0
  463108:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  46310c:	ldrb	w1, [x3, #2]
  463110:	mov	x20, #0x0                   	// #0
  463114:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  463118:	mov	w4, #0x1                   	// #1
  46311c:	b	462f48 <_obstack_memory_used@@Base+0x6620>
  463120:	mov	w4, #0x4                   	// #4
  463124:	b	462f48 <_obstack_memory_used@@Base+0x6620>
  463128:	add	x0, x3, #0x1
  46312c:	str	x0, [x19, #24]
  463130:	ldrb	w1, [x3, #2]
  463134:	sub	w0, w1, #0x31
  463138:	and	w0, w0, #0xff
  46313c:	cmp	w0, #0x4
  463140:	b.hi	4631c0 <_obstack_memory_used@@Base+0x6898>  // b.pmore
  463144:	add	x3, x3, #0x3
  463148:	str	x3, [x19, #24]
  46314c:	sub	w21, w1, #0x30
  463150:	mov	x0, x19
  463154:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  463158:	ldr	x0, [x19, #64]
  46315c:	b	4630a4 <_obstack_memory_used@@Base+0x677c>
  463160:	ldrb	w1, [x4]
  463164:	mov	x20, #0x0                   	// #0
  463168:	ldr	x21, [sp, #32]
  46316c:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  463170:	mov	x20, #0x0                   	// #0
  463174:	ldr	x21, [sp, #32]
  463178:	b	462edc <_obstack_memory_used@@Base+0x65b4>
  46317c:	mov	w4, #0x3                   	// #3
  463180:	b	462f48 <_obstack_memory_used@@Base+0x6620>
  463184:	ldrb	w1, [x7]
  463188:	mov	x20, #0x0                   	// #0
  46318c:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  463190:	ldr	x0, [x19, #24]
  463194:	mov	x20, #0x0                   	// #0
  463198:	ldrb	w1, [x0]
  46319c:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  4631a0:	ldrb	w1, [x4]
  4631a4:	mov	x20, #0x0                   	// #0
  4631a8:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  4631ac:	ldr	x0, [x19, #24]
  4631b0:	mov	x20, #0x0                   	// #0
  4631b4:	ldr	x21, [sp, #32]
  4631b8:	ldrb	w1, [x0]
  4631bc:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  4631c0:	ldrb	w1, [x3, #1]
  4631c4:	mov	x20, #0x0                   	// #0
  4631c8:	ldr	x21, [sp, #32]
  4631cc:	b	462d54 <_obstack_memory_used@@Base+0x642c>
  4631d0:	ldr	x2, [x0, #24]
  4631d4:	ldrb	w1, [x2]
  4631d8:	cmp	w1, #0x4c
  4631dc:	b.ne	4632c4 <_obstack_memory_used@@Base+0x699c>  // b.any
  4631e0:	stp	x29, x30, [sp, #-32]!
  4631e4:	add	x1, x2, #0x1
  4631e8:	mov	w4, #0x5a                  	// #90
  4631ec:	mov	x29, sp
  4631f0:	str	x19, [sp, #16]
  4631f4:	mov	x19, x0
  4631f8:	str	x1, [x0, #24]
  4631fc:	ldrb	w3, [x2, #1]
  463200:	cmp	w3, #0x5f
  463204:	ccmp	w3, w4, #0x4, ne  // ne = any
  463208:	b.eq	463284 <_obstack_memory_used@@Base+0x695c>  // b.none
  46320c:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  463210:	mov	x2, x0
  463214:	cbz	x0, 463274 <_obstack_memory_used@@Base+0x694c>
  463218:	ldr	w0, [x0]
  46321c:	cmp	w0, #0x27
  463220:	b.eq	46333c <_obstack_memory_used@@Base+0x6a14>  // b.none
  463224:	ldr	x0, [x19, #24]
  463228:	mov	w1, #0x3d                  	// #61
  46322c:	ldrb	w4, [x0]
  463230:	cmp	w4, #0x6e
  463234:	b.ne	46324c <_obstack_memory_used@@Base+0x6924>  // b.any
  463238:	add	x3, x0, #0x1
  46323c:	str	x3, [x19, #24]
  463240:	mov	w1, #0x3e                  	// #62
  463244:	ldrb	w4, [x0, #1]
  463248:	mov	x0, x3
  46324c:	cmp	w4, #0x45
  463250:	b.eq	463364 <_obstack_memory_used@@Base+0x6a3c>  // b.none
  463254:	add	x3, x0, #0x1
  463258:	b	46326c <_obstack_memory_used@@Base+0x6944>
  46325c:	str	x3, [x19, #24]
  463260:	ldrb	w4, [x3], #1
  463264:	cmp	w4, #0x45
  463268:	b.eq	4632e8 <_obstack_memory_used@@Base+0x69c0>  // b.none
  46326c:	mov	x5, x3
  463270:	cbnz	w4, 46325c <_obstack_memory_used@@Base+0x6934>
  463274:	mov	x0, #0x0                   	// #0
  463278:	ldr	x19, [sp, #16]
  46327c:	ldp	x29, x30, [sp], #32
  463280:	ret
  463284:	cmp	w3, #0x5f
  463288:	b.eq	4632cc <_obstack_memory_used@@Base+0x69a4>  // b.none
  46328c:	add	x1, x1, #0x1
  463290:	str	x1, [x19, #24]
  463294:	mov	x0, x19
  463298:	mov	w1, #0x0                   	// #0
  46329c:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  4632a0:	ldr	x1, [x19, #24]
  4632a4:	ldrb	w2, [x1]
  4632a8:	cmp	w2, #0x45
  4632ac:	b.ne	463274 <_obstack_memory_used@@Base+0x694c>  // b.any
  4632b0:	add	x1, x1, #0x1
  4632b4:	str	x1, [x19, #24]
  4632b8:	ldr	x19, [sp, #16]
  4632bc:	ldp	x29, x30, [sp], #32
  4632c0:	ret
  4632c4:	mov	x0, #0x0                   	// #0
  4632c8:	ret
  4632cc:	add	x1, x2, #0x2
  4632d0:	str	x1, [x19, #24]
  4632d4:	mov	x0, #0x0                   	// #0
  4632d8:	ldrb	w2, [x2, #2]
  4632dc:	cmp	w2, w4
  4632e0:	b.ne	4632a8 <_obstack_memory_used@@Base+0x6980>  // b.any
  4632e4:	b	46328c <_obstack_memory_used@@Base+0x6964>
  4632e8:	sub	w5, w5, w0
  4632ec:	ldp	w3, w4, [x19, #40]
  4632f0:	cmp	w3, w4
  4632f4:	b.ge	46335c <_obstack_memory_used@@Base+0x6a34>  // b.tcont
  4632f8:	mov	w4, #0x18                  	// #24
  4632fc:	add	w7, w3, #0x1
  463300:	ldr	x6, [x19, #32]
  463304:	smull	x4, w3, w4
  463308:	cmp	w5, #0x0
  46330c:	add	x3, x6, x4
  463310:	str	wzr, [x3, #4]
  463314:	str	w7, [x19, #40]
  463318:	b.le	46335c <_obstack_memory_used@@Base+0x6a34>
  46331c:	str	xzr, [x6, x4]
  463320:	str	x0, [x3, #8]
  463324:	str	w5, [x3, #16]
  463328:	mov	x0, x19
  46332c:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  463330:	ldr	x1, [x19, #24]
  463334:	ldrb	w2, [x1]
  463338:	b	4632a8 <_obstack_memory_used@@Base+0x6980>
  46333c:	ldr	x0, [x2, #8]
  463340:	ldr	w1, [x0, #28]
  463344:	cbz	w1, 463224 <_obstack_memory_used@@Base+0x68fc>
  463348:	ldr	w1, [x0, #8]
  46334c:	ldr	w0, [x19, #72]
  463350:	sub	w0, w0, w1
  463354:	str	w0, [x19, #72]
  463358:	b	463224 <_obstack_memory_used@@Base+0x68fc>
  46335c:	mov	x3, #0x0                   	// #0
  463360:	b	463328 <_obstack_memory_used@@Base+0x6a00>
  463364:	mov	w5, #0x0                   	// #0
  463368:	b	4632ec <_obstack_memory_used@@Base+0x69c4>
  46336c:	nop
  463370:	stp	x29, x30, [sp, #-224]!
  463374:	mov	x29, sp
  463378:	stp	x19, x20, [sp, #16]
  46337c:	mov	x19, x0
  463380:	cbz	x2, 463408 <_obstack_memory_used@@Base+0x6ae0>
  463384:	stp	x21, x22, [sp, #32]
  463388:	ldr	w22, [x0, #304]
  46338c:	cbnz	w22, 4633d0 <_obstack_memory_used@@Base+0x6aa8>
  463390:	ldr	w0, [x2]
  463394:	mov	x20, x2
  463398:	cmp	w0, #0x50
  46339c:	b.ls	4633b0 <_obstack_memory_used@@Base+0x6a88>  // b.plast
  4633a0:	mov	w0, #0x1                   	// #1
  4633a4:	ldp	x21, x22, [sp, #32]
  4633a8:	str	w0, [x19, #304]
  4633ac:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4633b0:	mov	w21, w1
  4633b4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4633b8:	add	x1, x1, #0x92c
  4633bc:	stp	x23, x24, [sp, #48]
  4633c0:	ldrh	w1, [x1, w0, uxtw #1]
  4633c4:	adr	x2, 4633d0 <_obstack_memory_used@@Base+0x6aa8>
  4633c8:	add	x1, x2, w1, sxth #2
  4633cc:	br	x1
  4633d0:	ldp	x21, x22, [sp, #32]
  4633d4:	ldp	x19, x20, [sp, #16]
  4633d8:	ldp	x29, x30, [sp], #224
  4633dc:	ret
  4633e0:	ldr	x0, [x20, #16]
  4633e4:	ldr	w1, [x0]
  4633e8:	cmp	w1, #0x3b
  4633ec:	b.ne	463400 <_obstack_memory_used@@Base+0x6ad8>  // b.any
  4633f0:	ldr	x0, [x0, #16]
  4633f4:	ldr	w0, [x0]
  4633f8:	cmp	w0, #0x3c
  4633fc:	b.eq	4668e8 <_obstack_memory_used@@Base+0x9fc0>  // b.none
  463400:	ldp	x21, x22, [sp, #32]
  463404:	ldp	x23, x24, [sp, #48]
  463408:	mov	w0, #0x1                   	// #1
  46340c:	str	w0, [x19, #304]
  463410:	ldp	x19, x20, [sp, #16]
  463414:	ldp	x29, x30, [sp], #224
  463418:	ret
  46341c:	ldp	x1, x2, [x19, #288]
  463420:	add	x0, sp, #0x60
  463424:	stp	x2, x20, [sp, #96]
  463428:	str	wzr, [sp, #112]
  46342c:	str	x1, [sp, #120]
  463430:	str	x0, [x19, #296]
  463434:	ldr	x2, [x20, #8]
  463438:	mov	x0, x19
  46343c:	mov	w1, w21
  463440:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  463444:	ldr	w0, [sp, #112]
  463448:	cbz	w0, 4657f4 <_obstack_memory_used@@Base+0x8ecc>
  46344c:	ldr	x0, [sp, #96]
  463450:	str	x0, [x19, #296]
  463454:	cbz	w22, 465028 <_obstack_memory_used@@Base+0x8700>
  463458:	ldp	x21, x22, [sp, #32]
  46345c:	str	x23, [x19, #288]
  463460:	ldp	x23, x24, [sp, #48]
  463464:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  463468:	ldr	x4, [x19, #296]
  46346c:	cbz	x4, 4635a8 <_obstack_memory_used@@Base+0x6c80>
  463470:	mov	x1, x4
  463474:	nop
  463478:	ldr	w2, [x1, #16]
  46347c:	cbnz	w2, 46349c <_obstack_memory_used@@Base+0x6b74>
  463480:	ldr	x2, [x1, #8]
  463484:	ldr	w2, [x2]
  463488:	sub	w3, w2, #0x19
  46348c:	cmp	w3, #0x2
  463490:	b.hi	466448 <_obstack_memory_used@@Base+0x9b20>  // b.pmore
  463494:	cmp	w0, w2
  463498:	b.eq	466468 <_obstack_memory_used@@Base+0x9b40>  // b.none
  46349c:	ldr	x1, [x1]
  4634a0:	cbnz	x1, 463478 <_obstack_memory_used@@Base+0x6b50>
  4634a4:	b	4635a8 <_obstack_memory_used@@Base+0x6c80>
  4634a8:	ldp	x23, x24, [sp, #48]
  4634ac:	b	4633a0 <_obstack_memory_used@@Base+0x6a78>
  4634b0:	ldr	x2, [x20, #8]
  4634b4:	mov	w22, #0x0                   	// #0
  4634b8:	ldr	w1, [x2]
  4634bc:	cmp	w1, #0x27
  4634c0:	b.eq	465cd0 <_obstack_memory_used@@Base+0x93a8>  // b.none
  4634c4:	ldr	x1, [x19, #256]
  4634c8:	add	x0, x1, #0x1
  4634cc:	cmp	x1, #0xff
  4634d0:	b.ne	4634fc <_obstack_memory_used@@Base+0x6bd4>  // b.any
  4634d4:	ldp	x3, x2, [x19, #272]
  4634d8:	strb	wzr, [x19, #255]
  4634dc:	mov	x0, x19
  4634e0:	blr	x3
  4634e4:	ldr	x3, [x19, #320]
  4634e8:	mov	x0, #0x1                   	// #1
  4634ec:	mov	x1, #0x0                   	// #0
  4634f0:	add	x3, x3, x0
  4634f4:	ldr	x2, [x20, #8]
  4634f8:	str	x3, [x19, #320]
  4634fc:	str	x0, [x19, #256]
  463500:	mov	w0, #0x28                  	// #40
  463504:	strb	w0, [x19, x1]
  463508:	mov	w1, w21
  46350c:	strb	w0, [x19, #264]
  463510:	mov	x0, x19
  463514:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  463518:	ldr	x1, [x19, #256]
  46351c:	cmp	x1, #0xff
  463520:	b.eq	4663c0 <_obstack_memory_used@@Base+0x9a98>  // b.none
  463524:	add	x3, x1, #0x1
  463528:	str	x3, [x19, #256]
  46352c:	mov	w0, #0x29                  	// #41
  463530:	strb	w0, [x19, x1]
  463534:	strb	w0, [x19, #264]
  463538:	ldr	w0, [x20]
  46353c:	cmp	w0, #0x3e
  463540:	b.eq	466484 <_obstack_memory_used@@Base+0x9b5c>  // b.none
  463544:	cmp	w22, #0x8
  463548:	b.eq	466264 <_obstack_memory_used@@Base+0x993c>  // b.none
  46354c:	ldr	x2, [x20, #16]
  463550:	mov	w1, w21
  463554:	mov	x0, x19
  463558:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46355c:	ldp	x21, x22, [sp, #32]
  463560:	ldp	x23, x24, [sp, #48]
  463564:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  463568:	ldr	w2, [x19, #312]
  46356c:	ldr	x0, [x20, #8]
  463570:	ldr	w1, [x0]
  463574:	cbnz	w2, 463584 <_obstack_memory_used@@Base+0x6c5c>
  463578:	cmp	w1, #0x5
  46357c:	mov	w22, #0x0                   	// #0
  463580:	b.eq	466844 <_obstack_memory_used@@Base+0x9f1c>  // b.none
  463584:	cmp	w1, #0x23
  463588:	ldr	x4, [x19, #296]
  46358c:	b.eq	46589c <_obstack_memory_used@@Base+0x8f74>  // b.none
  463590:	ldr	w2, [x20]
  463594:	cmp	w2, w1
  463598:	b.eq	46589c <_obstack_memory_used@@Base+0x8f74>  // b.none
  46359c:	cmp	w1, #0x24
  4635a0:	b.eq	465004 <_obstack_memory_used@@Base+0x86dc>  // b.none
  4635a4:	nop
  4635a8:	ldr	x1, [x19, #288]
  4635ac:	add	x0, sp, #0x60
  4635b0:	stp	x4, x20, [sp, #96]
  4635b4:	str	wzr, [sp, #112]
  4635b8:	str	x1, [sp, #120]
  4635bc:	str	x0, [x19, #296]
  4635c0:	b	463434 <_obstack_memory_used@@Base+0x6b0c>
  4635c4:	ldr	x2, [x20, #8]
  4635c8:	mov	w1, w21
  4635cc:	mov	x0, x19
  4635d0:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4635d4:	tbz	w21, #2, 466208 <_obstack_memory_used@@Base+0x98e0>
  4635d8:	ldr	x1, [x19, #256]
  4635dc:	add	x0, x1, #0x1
  4635e0:	cmp	x1, #0xff
  4635e4:	b.ne	46360c <_obstack_memory_used@@Base+0x6ce4>  // b.any
  4635e8:	ldp	x3, x2, [x19, #272]
  4635ec:	strb	wzr, [x19, #255]
  4635f0:	mov	x0, x19
  4635f4:	blr	x3
  4635f8:	ldr	x2, [x19, #320]
  4635fc:	mov	x0, #0x1                   	// #1
  463600:	mov	x1, #0x0                   	// #0
  463604:	add	x2, x2, x0
  463608:	str	x2, [x19, #320]
  46360c:	str	x0, [x19, #256]
  463610:	mov	w0, #0x2e                  	// #46
  463614:	strb	w0, [x19, x1]
  463618:	strb	w0, [x19, #264]
  46361c:	ldr	x23, [x20, #16]
  463620:	ldr	w0, [x23]
  463624:	cmp	w0, #0x47
  463628:	b.eq	4664c0 <_obstack_memory_used@@Base+0x9b98>  // b.none
  46362c:	mov	x2, x23
  463630:	mov	w1, w21
  463634:	mov	x0, x19
  463638:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46363c:	ldp	x21, x22, [sp, #32]
  463640:	ldp	x23, x24, [sp, #48]
  463644:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  463648:	ldp	x3, x4, [x19, #288]
  46364c:	add	x0, sp, #0x60
  463650:	ldr	x2, [x20, #16]
  463654:	str	x0, [x19, #296]
  463658:	mov	w1, w21
  46365c:	mov	x0, x19
  463660:	stp	x4, x20, [sp, #96]
  463664:	str	wzr, [sp, #112]
  463668:	str	x3, [sp, #120]
  46366c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  463670:	ldr	w0, [sp, #112]
  463674:	cbz	w0, 466184 <_obstack_memory_used@@Base+0x985c>
  463678:	ldr	x0, [sp, #96]
  46367c:	ldp	x21, x22, [sp, #32]
  463680:	ldp	x23, x24, [sp, #48]
  463684:	str	x0, [x19, #296]
  463688:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46368c:	ldr	x2, [x20, #8]
  463690:	cbz	x2, 4636a0 <_obstack_memory_used@@Base+0x6d78>
  463694:	mov	w1, w21
  463698:	mov	x0, x19
  46369c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4636a0:	ldr	x0, [x20, #16]
  4636a4:	cbz	x0, 466430 <_obstack_memory_used@@Base+0x9b08>
  4636a8:	ldr	x22, [x19, #256]
  4636ac:	cmp	x22, #0xfd
  4636b0:	b.ls	4636dc <_obstack_memory_used@@Base+0x6db4>  // b.plast
  4636b4:	strb	wzr, [x19, x22]
  4636b8:	mov	x1, x22
  4636bc:	mov	x0, x19
  4636c0:	mov	x22, #0x0                   	// #0
  4636c4:	ldp	x3, x2, [x19, #272]
  4636c8:	blr	x3
  4636cc:	str	xzr, [x19, #256]
  4636d0:	ldr	x0, [x19, #320]
  4636d4:	add	x0, x0, #0x1
  4636d8:	str	x0, [x19, #320]
  4636dc:	mov	w23, #0x2c                  	// #44
  4636e0:	mov	x24, #0x0                   	// #0
  4636e4:	b	463708 <_obstack_memory_used@@Base+0x6de0>
  4636e8:	mov	x0, x22
  4636ec:	add	x22, x22, #0x1
  4636f0:	str	x22, [x19, #256]
  4636f4:	strb	w23, [x19, x0]
  4636f8:	strb	w23, [x19, #264]
  4636fc:	mov	w23, #0x20                  	// #32
  463700:	cbnz	x24, 46583c <_obstack_memory_used@@Base+0x8f14>
  463704:	mov	x24, #0x1                   	// #1
  463708:	cmp	x22, #0xff
  46370c:	b.ne	4636e8 <_obstack_memory_used@@Base+0x6dc0>  // b.any
  463710:	ldp	x3, x2, [x19, #272]
  463714:	strb	wzr, [x19, #255]
  463718:	mov	x1, x22
  46371c:	mov	x0, x19
  463720:	mov	x22, #0x1                   	// #1
  463724:	blr	x3
  463728:	ldr	x1, [x19, #320]
  46372c:	mov	x0, #0x0                   	// #0
  463730:	add	x1, x1, x22
  463734:	str	x1, [x19, #320]
  463738:	b	4636f0 <_obstack_memory_used@@Base+0x6dc8>
  46373c:	ldr	x2, [x20, #16]
  463740:	mov	w1, w21
  463744:	mov	x0, x19
  463748:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46374c:	ldp	x21, x22, [sp, #32]
  463750:	ldp	x23, x24, [sp, #48]
  463754:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  463758:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  46375c:	add	x24, x24, #0x710
  463760:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463764:	add	x24, x24, #0x1c
  463768:	add	x22, x22, #0x711
  46376c:	mov	w23, #0x67                  	// #103
  463770:	ldr	x1, [x19, #256]
  463774:	b	463798 <_obstack_memory_used@@Base+0x6e70>
  463778:	mov	x0, x1
  46377c:	add	x1, x1, #0x1
  463780:	str	x1, [x19, #256]
  463784:	cmp	x22, x24
  463788:	strb	w23, [x19, x0]
  46378c:	strb	w23, [x19, #264]
  463790:	b.eq	46543c <_obstack_memory_used@@Base+0x8b14>  // b.none
  463794:	ldrb	w23, [x22], #1
  463798:	cmp	x1, #0xff
  46379c:	b.ne	463778 <_obstack_memory_used@@Base+0x6e50>  // b.any
  4637a0:	ldp	x3, x2, [x19, #272]
  4637a4:	strb	wzr, [x19, #255]
  4637a8:	mov	x0, x19
  4637ac:	blr	x3
  4637b0:	ldr	x2, [x19, #320]
  4637b4:	mov	x1, #0x1                   	// #1
  4637b8:	mov	x0, #0x0                   	// #0
  4637bc:	add	x2, x2, x1
  4637c0:	str	x2, [x19, #320]
  4637c4:	b	463780 <_obstack_memory_used@@Base+0x6e58>
  4637c8:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4637cc:	add	x22, x22, #0xb48
  4637d0:	add	x24, x22, #0x8
  4637d4:	mov	w23, #0x7b                  	// #123
  4637d8:	ldr	x1, [x19, #256]
  4637dc:	b	463804 <_obstack_memory_used@@Base+0x6edc>
  4637e0:	mov	x0, x1
  4637e4:	add	x1, x1, #0x1
  4637e8:	str	x1, [x19, #256]
  4637ec:	add	x22, x22, #0x1
  4637f0:	strb	w23, [x19, x0]
  4637f4:	cmp	x24, x22
  4637f8:	strb	w23, [x19, #264]
  4637fc:	b.eq	465458 <_obstack_memory_used@@Base+0x8b30>  // b.none
  463800:	ldrb	w23, [x22]
  463804:	cmp	x1, #0xff
  463808:	b.ne	4637e0 <_obstack_memory_used@@Base+0x6eb8>  // b.any
  46380c:	ldp	x3, x2, [x19, #272]
  463810:	strb	wzr, [x19, #255]
  463814:	mov	x0, x19
  463818:	blr	x3
  46381c:	ldr	x2, [x19, #320]
  463820:	mov	x1, #0x1                   	// #1
  463824:	mov	x0, #0x0                   	// #0
  463828:	add	x2, x2, x1
  46382c:	str	x2, [x19, #320]
  463830:	b	4637e8 <_obstack_memory_used@@Base+0x6ec0>
  463834:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  463838:	add	x23, x23, #0xb58
  46383c:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  463840:	add	x23, x23, #0xe
  463844:	add	x21, x21, #0xb59
  463848:	mov	w22, #0x7b                  	// #123
  46384c:	ldr	x1, [x19, #256]
  463850:	b	463874 <_obstack_memory_used@@Base+0x6f4c>
  463854:	mov	x0, x1
  463858:	add	x1, x1, #0x1
  46385c:	str	x1, [x19, #256]
  463860:	cmp	x23, x21
  463864:	strb	w22, [x19, x0]
  463868:	strb	w22, [x19, #264]
  46386c:	b.eq	46534c <_obstack_memory_used@@Base+0x8a24>  // b.none
  463870:	ldrb	w22, [x21], #1
  463874:	cmp	x1, #0xff
  463878:	b.ne	463854 <_obstack_memory_used@@Base+0x6f2c>  // b.any
  46387c:	ldp	x3, x2, [x19, #272]
  463880:	strb	wzr, [x19, #255]
  463884:	mov	x0, x19
  463888:	blr	x3
  46388c:	ldr	x2, [x19, #320]
  463890:	mov	x1, #0x1                   	// #1
  463894:	mov	x0, #0x0                   	// #0
  463898:	add	x2, x2, x1
  46389c:	str	x2, [x19, #320]
  4638a0:	b	46385c <_obstack_memory_used@@Base+0x6f34>
  4638a4:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4638a8:	add	x24, x24, #0x688
  4638ac:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4638b0:	add	x24, x24, #0x16
  4638b4:	add	x22, x22, #0x689
  4638b8:	mov	w23, #0x74                  	// #116
  4638bc:	ldr	x1, [x19, #256]
  4638c0:	b	4638e4 <_obstack_memory_used@@Base+0x6fbc>
  4638c4:	mov	x0, x1
  4638c8:	add	x1, x1, #0x1
  4638cc:	str	x1, [x19, #256]
  4638d0:	cmp	x24, x22
  4638d4:	strb	w23, [x19, x0]
  4638d8:	strb	w23, [x19, #264]
  4638dc:	b.eq	465420 <_obstack_memory_used@@Base+0x8af8>  // b.none
  4638e0:	ldrb	w23, [x22], #1
  4638e4:	cmp	x1, #0xff
  4638e8:	b.ne	4638c4 <_obstack_memory_used@@Base+0x6f9c>  // b.any
  4638ec:	ldp	x3, x2, [x19, #272]
  4638f0:	strb	wzr, [x19, #255]
  4638f4:	mov	x0, x19
  4638f8:	blr	x3
  4638fc:	ldr	x2, [x19, #320]
  463900:	mov	x1, #0x1                   	// #1
  463904:	mov	x0, #0x0                   	// #0
  463908:	add	x2, x2, x1
  46390c:	str	x2, [x19, #320]
  463910:	b	4638cc <_obstack_memory_used@@Base+0x6fa4>
  463914:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463918:	add	x24, x24, #0x548
  46391c:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463920:	add	x24, x24, #0x1e
  463924:	add	x22, x22, #0x549
  463928:	mov	w23, #0x74                  	// #116
  46392c:	ldr	x1, [x19, #256]
  463930:	b	463954 <_obstack_memory_used@@Base+0x702c>
  463934:	mov	x0, x1
  463938:	add	x1, x1, #0x1
  46393c:	str	x1, [x19, #256]
  463940:	cmp	x24, x22
  463944:	strb	w23, [x19, x0]
  463948:	strb	w23, [x19, #264]
  46394c:	b.eq	465330 <_obstack_memory_used@@Base+0x8a08>  // b.none
  463950:	ldrb	w23, [x22], #1
  463954:	cmp	x1, #0xff
  463958:	b.ne	463934 <_obstack_memory_used@@Base+0x700c>  // b.any
  46395c:	ldp	x3, x2, [x19, #272]
  463960:	strb	wzr, [x19, #255]
  463964:	mov	x0, x19
  463968:	blr	x3
  46396c:	ldr	x2, [x19, #320]
  463970:	mov	x1, #0x1                   	// #1
  463974:	mov	x0, #0x0                   	// #0
  463978:	add	x2, x2, x1
  46397c:	str	x2, [x19, #320]
  463980:	b	46393c <_obstack_memory_used@@Base+0x7014>
  463984:	ldp	x2, x20, [x20, #8]
  463988:	cbz	x2, 463998 <_obstack_memory_used@@Base+0x7070>
  46398c:	mov	w1, w21
  463990:	mov	x0, x19
  463994:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  463998:	ldr	x1, [x19, #256]
  46399c:	add	x0, x1, #0x1
  4639a0:	cmp	x1, #0xff
  4639a4:	b.ne	4639cc <_obstack_memory_used@@Base+0x70a4>  // b.any
  4639a8:	ldp	x3, x2, [x19, #272]
  4639ac:	strb	wzr, [x19, #255]
  4639b0:	mov	x0, x19
  4639b4:	blr	x3
  4639b8:	ldr	x2, [x19, #320]
  4639bc:	mov	x0, #0x1                   	// #1
  4639c0:	mov	x1, #0x0                   	// #0
  4639c4:	add	x2, x2, x0
  4639c8:	str	x2, [x19, #320]
  4639cc:	str	x0, [x19, #256]
  4639d0:	mov	w0, #0x7b                  	// #123
  4639d4:	strb	w0, [x19, x1]
  4639d8:	mov	x2, x20
  4639dc:	strb	w0, [x19, #264]
  4639e0:	mov	w1, w21
  4639e4:	mov	x0, x19
  4639e8:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4639ec:	ldr	x1, [x19, #256]
  4639f0:	add	x0, x1, #0x1
  4639f4:	cmp	x1, #0xff
  4639f8:	b.ne	463a20 <_obstack_memory_used@@Base+0x70f8>  // b.any
  4639fc:	ldp	x3, x2, [x19, #272]
  463a00:	strb	wzr, [x19, #255]
  463a04:	mov	x0, x19
  463a08:	blr	x3
  463a0c:	ldr	x2, [x19, #320]
  463a10:	mov	x0, #0x1                   	// #1
  463a14:	mov	x1, #0x0                   	// #0
  463a18:	add	x2, x2, x0
  463a1c:	str	x2, [x19, #320]
  463a20:	str	x0, [x19, #256]
  463a24:	mov	w0, #0x7d                  	// #125
  463a28:	strb	w0, [x19, x1]
  463a2c:	strb	w0, [x19, #264]
  463a30:	ldp	x21, x22, [sp, #32]
  463a34:	ldp	x23, x24, [sp, #48]
  463a38:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  463a3c:	ldr	x22, [x20, #8]
  463a40:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  463a44:	add	x20, x20, #0xaf8
  463a48:	mov	w21, #0x6f                  	// #111
  463a4c:	add	x24, x20, #0x8
  463a50:	ldr	w23, [x22, #16]
  463a54:	ldr	x1, [x19, #256]
  463a58:	b	463a80 <_obstack_memory_used@@Base+0x7158>
  463a5c:	mov	x0, x1
  463a60:	add	x1, x1, #0x1
  463a64:	str	x1, [x19, #256]
  463a68:	add	x20, x20, #0x1
  463a6c:	strb	w21, [x19, x0]
  463a70:	cmp	x24, x20
  463a74:	strb	w21, [x19, #264]
  463a78:	b.eq	465254 <_obstack_memory_used@@Base+0x892c>  // b.none
  463a7c:	ldrb	w21, [x20]
  463a80:	cmp	x1, #0xff
  463a84:	b.ne	463a5c <_obstack_memory_used@@Base+0x7134>  // b.any
  463a88:	ldp	x3, x2, [x19, #272]
  463a8c:	strb	wzr, [x19, #255]
  463a90:	mov	x0, x19
  463a94:	blr	x3
  463a98:	ldr	x2, [x19, #320]
  463a9c:	mov	x1, #0x1                   	// #1
  463aa0:	mov	x0, #0x0                   	// #0
  463aa4:	add	x2, x2, x1
  463aa8:	str	x2, [x19, #320]
  463aac:	b	463a64 <_obstack_memory_used@@Base+0x713c>
  463ab0:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  463ab4:	add	x22, x22, #0xb08
  463ab8:	add	x24, x22, #0x9
  463abc:	mov	w23, #0x6f                  	// #111
  463ac0:	ldr	x1, [x19, #256]
  463ac4:	b	463aec <_obstack_memory_used@@Base+0x71c4>
  463ac8:	mov	x0, x1
  463acc:	add	x1, x1, #0x1
  463ad0:	str	x1, [x19, #256]
  463ad4:	add	x22, x22, #0x1
  463ad8:	strb	w23, [x19, x0]
  463adc:	cmp	x22, x24
  463ae0:	strb	w23, [x19, #264]
  463ae4:	b.eq	465094 <_obstack_memory_used@@Base+0x876c>  // b.none
  463ae8:	ldrb	w23, [x22]
  463aec:	cmp	x1, #0xff
  463af0:	b.ne	463ac8 <_obstack_memory_used@@Base+0x71a0>  // b.any
  463af4:	ldp	x3, x2, [x19, #272]
  463af8:	strb	wzr, [x19, #255]
  463afc:	mov	x0, x19
  463b00:	blr	x3
  463b04:	ldr	x2, [x19, #320]
  463b08:	mov	x1, #0x1                   	// #1
  463b0c:	mov	x0, #0x0                   	// #0
  463b10:	add	x2, x2, x1
  463b14:	str	x2, [x19, #320]
  463b18:	b	463ad0 <_obstack_memory_used@@Base+0x71a8>
  463b1c:	ldr	x2, [x20, #8]
  463b20:	mov	w1, w21
  463b24:	mov	x0, x19
  463b28:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  463b2c:	add	x22, x22, #0xb68
  463b30:	mov	w23, #0x20                  	// #32
  463b34:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  463b38:	add	x24, x22, #0x8
  463b3c:	ldr	x1, [x19, #256]
  463b40:	b	463b68 <_obstack_memory_used@@Base+0x7240>
  463b44:	mov	x0, x1
  463b48:	add	x1, x1, #0x1
  463b4c:	str	x1, [x19, #256]
  463b50:	add	x22, x22, #0x1
  463b54:	strb	w23, [x19, x0]
  463b58:	cmp	x24, x22
  463b5c:	strb	w23, [x19, #264]
  463b60:	b.eq	465034 <_obstack_memory_used@@Base+0x870c>  // b.none
  463b64:	ldrb	w23, [x22]
  463b68:	cmp	x1, #0xff
  463b6c:	b.ne	463b44 <_obstack_memory_used@@Base+0x721c>  // b.any
  463b70:	ldp	x3, x2, [x19, #272]
  463b74:	strb	wzr, [x19, #255]
  463b78:	mov	x0, x19
  463b7c:	blr	x3
  463b80:	ldr	x2, [x19, #320]
  463b84:	mov	x1, #0x1                   	// #1
  463b88:	mov	x0, #0x0                   	// #0
  463b8c:	add	x2, x2, x1
  463b90:	str	x2, [x19, #320]
  463b94:	b	463b4c <_obstack_memory_used@@Base+0x7224>
  463b98:	ldr	x2, [x20, #8]
  463b9c:	mov	w1, w21
  463ba0:	mov	x0, x19
  463ba4:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  463ba8:	ldp	x21, x22, [sp, #32]
  463bac:	ldp	x23, x24, [sp, #48]
  463bb0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  463bb4:	and	w22, w21, #0xffffff9f
  463bb8:	ldr	x3, [x19, #296]
  463bbc:	tbnz	w21, #5, 466390 <_obstack_memory_used@@Base+0x9a68>
  463bc0:	ldr	x2, [x20, #8]
  463bc4:	cbz	x2, 463bcc <_obstack_memory_used@@Base+0x72a4>
  463bc8:	tbz	w21, #6, 4666c4 <_obstack_memory_used@@Base+0x9d9c>
  463bcc:	mov	w1, w22
  463bd0:	add	x2, x20, #0x10
  463bd4:	mov	x0, x19
  463bd8:	bl	467a18 <_obstack_memory_used@@Base+0xb0f0>
  463bdc:	ldp	x21, x22, [sp, #32]
  463be0:	ldp	x23, x24, [sp, #48]
  463be4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  463be8:	ldr	x23, [x20, #8]
  463bec:	ldr	x1, [x19, #256]
  463bf0:	cbz	x23, 465a5c <_obstack_memory_used@@Base+0x9134>
  463bf4:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  463bf8:	add	x20, x20, #0xb38
  463bfc:	add	x22, x20, #0x6
  463c00:	mov	w21, #0x7b                  	// #123
  463c04:	b	463c2c <_obstack_memory_used@@Base+0x7304>
  463c08:	mov	x0, x1
  463c0c:	add	x1, x1, #0x1
  463c10:	str	x1, [x19, #256]
  463c14:	add	x20, x20, #0x1
  463c18:	strb	w21, [x19, x0]
  463c1c:	cmp	x22, x20
  463c20:	strb	w21, [x19, #264]
  463c24:	b.eq	465ad0 <_obstack_memory_used@@Base+0x91a8>  // b.none
  463c28:	ldrb	w21, [x20]
  463c2c:	cmp	x1, #0xff
  463c30:	b.ne	463c08 <_obstack_memory_used@@Base+0x72e0>  // b.any
  463c34:	ldp	x3, x2, [x19, #272]
  463c38:	strb	wzr, [x19, #255]
  463c3c:	mov	x0, x19
  463c40:	blr	x3
  463c44:	ldr	x2, [x19, #320]
  463c48:	mov	x1, #0x1                   	// #1
  463c4c:	mov	x0, #0x0                   	// #0
  463c50:	add	x2, x2, x1
  463c54:	str	x2, [x19, #320]
  463c58:	b	463c10 <_obstack_memory_used@@Base+0x72e8>
  463c5c:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463c60:	add	x24, x24, #0x670
  463c64:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463c68:	add	x24, x24, #0x11
  463c6c:	add	x22, x22, #0x671
  463c70:	mov	w23, #0x68                  	// #104
  463c74:	ldr	x1, [x19, #256]
  463c78:	b	463c9c <_obstack_memory_used@@Base+0x7374>
  463c7c:	mov	x0, x1
  463c80:	add	x1, x1, #0x1
  463c84:	str	x1, [x19, #256]
  463c88:	cmp	x22, x24
  463c8c:	strb	w23, [x19, x0]
  463c90:	strb	w23, [x19, #264]
  463c94:	b.eq	4656fc <_obstack_memory_used@@Base+0x8dd4>  // b.none
  463c98:	ldrb	w23, [x22], #1
  463c9c:	cmp	x1, #0xff
  463ca0:	b.ne	463c7c <_obstack_memory_used@@Base+0x7354>  // b.any
  463ca4:	ldp	x3, x2, [x19, #272]
  463ca8:	strb	wzr, [x19, #255]
  463cac:	mov	x0, x19
  463cb0:	blr	x3
  463cb4:	ldr	x2, [x19, #320]
  463cb8:	mov	x1, #0x1                   	// #1
  463cbc:	mov	x0, #0x0                   	// #0
  463cc0:	add	x2, x2, x1
  463cc4:	str	x2, [x19, #320]
  463cc8:	b	463c84 <_obstack_memory_used@@Base+0x735c>
  463ccc:	ldrsw	x22, [x20, #16]
  463cd0:	ldr	x20, [x20, #8]
  463cd4:	cbz	x22, 466bc4 <_obstack_memory_used@@Base+0xa29c>
  463cd8:	add	x22, x20, x22
  463cdc:	ldr	x1, [x19, #256]
  463ce0:	b	463d04 <_obstack_memory_used@@Base+0x73dc>
  463ce4:	mov	x0, x1
  463ce8:	add	x1, x1, #0x1
  463cec:	str	x1, [x19, #256]
  463cf0:	add	x20, x20, #0x1
  463cf4:	strb	w21, [x19, x0]
  463cf8:	cmp	x22, x20
  463cfc:	strb	w21, [x19, #264]
  463d00:	b.eq	465808 <_obstack_memory_used@@Base+0x8ee0>  // b.none
  463d04:	ldrb	w21, [x20]
  463d08:	cmp	x1, #0xff
  463d0c:	b.ne	463ce4 <_obstack_memory_used@@Base+0x73bc>  // b.any
  463d10:	ldp	x3, x2, [x19, #272]
  463d14:	strb	wzr, [x19, #255]
  463d18:	mov	x0, x19
  463d1c:	blr	x3
  463d20:	ldr	x2, [x19, #320]
  463d24:	mov	x1, #0x1                   	// #1
  463d28:	mov	x0, #0x0                   	// #0
  463d2c:	add	x2, x2, x1
  463d30:	str	x2, [x19, #320]
  463d34:	b	463cec <_obstack_memory_used@@Base+0x73c4>
  463d38:	ldp	x1, x5, [x19, #288]
  463d3c:	add	x23, sp, #0x60
  463d40:	stp	x5, x20, [sp, #96]
  463d44:	mov	w22, #0x1                   	// #1
  463d48:	mov	w6, w22
  463d4c:	str	wzr, [sp, #112]
  463d50:	str	x1, [sp, #120]
  463d54:	str	x23, [x19, #296]
  463d58:	mov	x24, x5
  463d5c:	mov	x0, x5
  463d60:	mov	x5, x23
  463d64:	cbnz	x24, 463db0 <_obstack_memory_used@@Base+0x7488>
  463d68:	b	466ef4 <_obstack_memory_used@@Base+0xa5cc>
  463d6c:	ldr	w1, [x0, #16]
  463d70:	cbnz	w1, 463da8 <_obstack_memory_used@@Base+0x7480>
  463d74:	cmp	w22, #0x3
  463d78:	b.hi	4666b0 <_obstack_memory_used@@Base+0x9d88>  // b.pmore
  463d7c:	ubfiz	x1, x22, #5, #32
  463d80:	add	w22, w22, #0x1
  463d84:	add	x4, x23, x1
  463d88:	ldp	x2, x3, [x0]
  463d8c:	stp	x2, x3, [x4]
  463d90:	ldp	x2, x3, [x0, #16]
  463d94:	stp	x2, x3, [x4, #16]
  463d98:	str	x5, [x23, x1]
  463d9c:	mov	x5, x4
  463da0:	str	x4, [x19, #296]
  463da4:	str	w6, [x0, #16]
  463da8:	ldr	x0, [x0]
  463dac:	cbz	x0, 463dc4 <_obstack_memory_used@@Base+0x749c>
  463db0:	ldr	x1, [x0, #8]
  463db4:	ldr	w1, [x1]
  463db8:	sub	w1, w1, #0x19
  463dbc:	cmp	w1, #0x2
  463dc0:	b.ls	463d6c <_obstack_memory_used@@Base+0x7444>  // b.plast
  463dc4:	ldr	x2, [x20, #16]
  463dc8:	mov	x0, x19
  463dcc:	mov	w1, w21
  463dd0:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  463dd4:	str	x24, [x19, #296]
  463dd8:	ldr	w0, [sp, #112]
  463ddc:	cbnz	w0, 46643c <_obstack_memory_used@@Base+0x9b14>
  463de0:	ubfiz	x0, x22, #5, #32
  463de4:	cmp	w22, #0x1
  463de8:	add	x23, x23, x0
  463dec:	b.eq	463e10 <_obstack_memory_used@@Base+0x74e8>  // b.none
  463df0:	ldur	x2, [x23, #-24]
  463df4:	sub	w22, w22, #0x1
  463df8:	mov	w1, w21
  463dfc:	mov	x0, x19
  463e00:	sub	x23, x23, #0x20
  463e04:	bl	467218 <_obstack_memory_used@@Base+0xa8f0>
  463e08:	cmp	w22, #0x1
  463e0c:	b.ne	463df0 <_obstack_memory_used@@Base+0x74c8>  // b.any
  463e10:	ldr	x3, [x19, #296]
  463e14:	mov	w1, w21
  463e18:	add	x2, x20, #0x8
  463e1c:	mov	x0, x19
  463e20:	bl	468098 <_obstack_memory_used@@Base+0xb770>
  463e24:	ldp	x21, x22, [sp, #32]
  463e28:	ldp	x23, x24, [sp, #48]
  463e2c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  463e30:	ldrsh	w0, [x20, #18]
  463e34:	cbnz	w0, 466198 <_obstack_memory_used@@Base+0x9870>
  463e38:	ldr	x2, [x20, #8]
  463e3c:	adrp	x0, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  463e40:	add	x0, x0, #0xdf0
  463e44:	add	x0, x0, #0x288
  463e48:	ldr	x1, [x2, #8]
  463e4c:	cmp	x1, x0
  463e50:	b.eq	465c8c <_obstack_memory_used@@Base+0x9364>  // b.none
  463e54:	mov	w1, w21
  463e58:	mov	x0, x19
  463e5c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  463e60:	ldr	x0, [x19, #256]
  463e64:	add	x1, x0, #0x1
  463e68:	cmp	x0, #0xff
  463e6c:	b.ne	463e98 <_obstack_memory_used@@Base+0x7570>  // b.any
  463e70:	ldp	x3, x2, [x19, #272]
  463e74:	strb	wzr, [x19, #255]
  463e78:	mov	x1, x0
  463e7c:	mov	x0, x19
  463e80:	blr	x3
  463e84:	ldr	x2, [x19, #320]
  463e88:	mov	x1, #0x1                   	// #1
  463e8c:	mov	x0, #0x0                   	// #0
  463e90:	add	x2, x2, x1
  463e94:	str	x2, [x19, #320]
  463e98:	str	x1, [x19, #256]
  463e9c:	mov	w2, #0x20                  	// #32
  463ea0:	strb	w2, [x19, x0]
  463ea4:	strb	w2, [x19, #264]
  463ea8:	ldrsh	w0, [x20, #16]
  463eac:	cbnz	w0, 465ba0 <_obstack_memory_used@@Base+0x9278>
  463eb0:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  463eb4:	add	x20, x20, #0xae8
  463eb8:	add	x22, x20, #0x6
  463ebc:	mov	w21, #0x5f                  	// #95
  463ec0:	b	463ee8 <_obstack_memory_used@@Base+0x75c0>
  463ec4:	mov	x0, x1
  463ec8:	add	x1, x1, #0x1
  463ecc:	str	x1, [x19, #256]
  463ed0:	add	x20, x20, #0x1
  463ed4:	strb	w21, [x19, x0]
  463ed8:	cmp	x20, x22
  463edc:	strb	w21, [x19, #264]
  463ee0:	b.eq	465c14 <_obstack_memory_used@@Base+0x92ec>  // b.none
  463ee4:	ldrb	w21, [x20]
  463ee8:	cmp	x1, #0xff
  463eec:	b.ne	463ec4 <_obstack_memory_used@@Base+0x759c>  // b.any
  463ef0:	ldp	x3, x2, [x19, #272]
  463ef4:	strb	wzr, [x19, #255]
  463ef8:	mov	x0, x19
  463efc:	blr	x3
  463f00:	ldr	x2, [x19, #320]
  463f04:	mov	x1, #0x1                   	// #1
  463f08:	mov	x0, #0x0                   	// #0
  463f0c:	add	x2, x2, x1
  463f10:	str	x2, [x19, #320]
  463f14:	b	463ecc <_obstack_memory_used@@Base+0x75a4>
  463f18:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463f1c:	add	x24, x24, #0x5b8
  463f20:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463f24:	add	x24, x24, #0x15
  463f28:	add	x22, x22, #0x5b9
  463f2c:	mov	w23, #0x6e                  	// #110
  463f30:	ldr	x1, [x19, #256]
  463f34:	b	463f58 <_obstack_memory_used@@Base+0x7630>
  463f38:	mov	x0, x1
  463f3c:	add	x1, x1, #0x1
  463f40:	str	x1, [x19, #256]
  463f44:	cmp	x24, x22
  463f48:	strb	w23, [x19, x0]
  463f4c:	strb	w23, [x19, #264]
  463f50:	b.eq	465718 <_obstack_memory_used@@Base+0x8df0>  // b.none
  463f54:	ldrb	w23, [x22], #1
  463f58:	cmp	x1, #0xff
  463f5c:	b.ne	463f38 <_obstack_memory_used@@Base+0x7610>  // b.any
  463f60:	ldp	x3, x2, [x19, #272]
  463f64:	strb	wzr, [x19, #255]
  463f68:	mov	x0, x19
  463f6c:	blr	x3
  463f70:	ldr	x2, [x19, #320]
  463f74:	mov	x1, #0x1                   	// #1
  463f78:	mov	x0, #0x0                   	// #0
  463f7c:	add	x2, x2, x1
  463f80:	str	x2, [x19, #320]
  463f84:	b	463f40 <_obstack_memory_used@@Base+0x7618>
  463f88:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463f8c:	add	x24, x24, #0x5d0
  463f90:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463f94:	add	x24, x24, #0x11
  463f98:	add	x22, x22, #0x5d1
  463f9c:	mov	w23, #0x76                  	// #118
  463fa0:	ldr	x1, [x19, #256]
  463fa4:	b	463fc8 <_obstack_memory_used@@Base+0x76a0>
  463fa8:	mov	x0, x1
  463fac:	add	x1, x1, #0x1
  463fb0:	str	x1, [x19, #256]
  463fb4:	cmp	x24, x22
  463fb8:	strb	w23, [x19, x0]
  463fbc:	strb	w23, [x19, #264]
  463fc0:	b.eq	465734 <_obstack_memory_used@@Base+0x8e0c>  // b.none
  463fc4:	ldrb	w23, [x22], #1
  463fc8:	cmp	x1, #0xff
  463fcc:	b.ne	463fa8 <_obstack_memory_used@@Base+0x7680>  // b.any
  463fd0:	ldp	x3, x2, [x19, #272]
  463fd4:	strb	wzr, [x19, #255]
  463fd8:	mov	x0, x19
  463fdc:	blr	x3
  463fe0:	ldr	x2, [x19, #320]
  463fe4:	mov	x1, #0x1                   	// #1
  463fe8:	mov	x0, #0x0                   	// #0
  463fec:	add	x2, x2, x1
  463ff0:	str	x2, [x19, #320]
  463ff4:	b	463fb0 <_obstack_memory_used@@Base+0x7688>
  463ff8:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  463ffc:	add	x24, x24, #0x5e8
  464000:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464004:	add	x24, x24, #0x1a
  464008:	add	x22, x22, #0x5e9
  46400c:	mov	w23, #0x63                  	// #99
  464010:	ldr	x1, [x19, #256]
  464014:	b	464038 <_obstack_memory_used@@Base+0x7710>
  464018:	mov	x0, x1
  46401c:	add	x1, x1, #0x1
  464020:	str	x1, [x19, #256]
  464024:	cmp	x24, x22
  464028:	strb	w23, [x19, x0]
  46402c:	strb	w23, [x19, #264]
  464030:	b.eq	465750 <_obstack_memory_used@@Base+0x8e28>  // b.none
  464034:	ldrb	w23, [x22], #1
  464038:	cmp	x1, #0xff
  46403c:	b.ne	464018 <_obstack_memory_used@@Base+0x76f0>  // b.any
  464040:	ldp	x3, x2, [x19, #272]
  464044:	strb	wzr, [x19, #255]
  464048:	mov	x0, x19
  46404c:	blr	x3
  464050:	ldr	x2, [x19, #320]
  464054:	mov	x1, #0x1                   	// #1
  464058:	mov	x0, #0x0                   	// #0
  46405c:	add	x2, x2, x1
  464060:	str	x2, [x19, #320]
  464064:	b	464020 <_obstack_memory_used@@Base+0x76f8>
  464068:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46406c:	add	x24, x24, #0xad0
  464070:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464074:	add	x24, x24, #0xf
  464078:	add	x22, x22, #0xad1
  46407c:	mov	w23, #0x6a                  	// #106
  464080:	ldr	x1, [x19, #256]
  464084:	b	4640a8 <_obstack_memory_used@@Base+0x7780>
  464088:	mov	x0, x1
  46408c:	add	x1, x1, #0x1
  464090:	str	x1, [x19, #256]
  464094:	cmp	x22, x24
  464098:	strb	w23, [x19, x0]
  46409c:	strb	w23, [x19, #264]
  4640a0:	b.eq	4650b0 <_obstack_memory_used@@Base+0x8788>  // b.none
  4640a4:	ldrb	w23, [x22], #1
  4640a8:	cmp	x1, #0xff
  4640ac:	b.ne	464088 <_obstack_memory_used@@Base+0x7760>  // b.any
  4640b0:	ldp	x3, x2, [x19, #272]
  4640b4:	strb	wzr, [x19, #255]
  4640b8:	mov	x0, x19
  4640bc:	blr	x3
  4640c0:	ldr	x2, [x19, #320]
  4640c4:	mov	x1, #0x1                   	// #1
  4640c8:	mov	x0, #0x0                   	// #0
  4640cc:	add	x2, x2, x1
  4640d0:	str	x2, [x19, #320]
  4640d4:	b	464090 <_obstack_memory_used@@Base+0x7768>
  4640d8:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4640dc:	add	x24, x24, #0x658
  4640e0:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4640e4:	add	x24, x24, #0x15
  4640e8:	add	x22, x22, #0x659
  4640ec:	mov	w23, #0x72                  	// #114
  4640f0:	ldr	x1, [x19, #256]
  4640f4:	b	464118 <_obstack_memory_used@@Base+0x77f0>
  4640f8:	mov	x0, x1
  4640fc:	add	x1, x1, #0x1
  464100:	str	x1, [x19, #256]
  464104:	cmp	x24, x22
  464108:	strb	w23, [x19, x0]
  46410c:	strb	w23, [x19, #264]
  464110:	b.eq	4650e8 <_obstack_memory_used@@Base+0x87c0>  // b.none
  464114:	ldrb	w23, [x22], #1
  464118:	cmp	x1, #0xff
  46411c:	b.ne	4640f8 <_obstack_memory_used@@Base+0x77d0>  // b.any
  464120:	ldp	x3, x2, [x19, #272]
  464124:	strb	wzr, [x19, #255]
  464128:	mov	x0, x19
  46412c:	blr	x3
  464130:	ldr	x2, [x19, #320]
  464134:	mov	x1, #0x1                   	// #1
  464138:	mov	x0, #0x0                   	// #0
  46413c:	add	x2, x2, x1
  464140:	str	x2, [x19, #320]
  464144:	b	464100 <_obstack_memory_used@@Base+0x77d8>
  464148:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  46414c:	add	x24, x24, #0x620
  464150:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464154:	add	x24, x24, #0x16
  464158:	add	x22, x22, #0x621
  46415c:	mov	w23, #0x54                  	// #84
  464160:	ldr	x1, [x19, #256]
  464164:	b	464188 <_obstack_memory_used@@Base+0x7860>
  464168:	mov	x0, x1
  46416c:	add	x1, x1, #0x1
  464170:	str	x1, [x19, #256]
  464174:	cmp	x22, x24
  464178:	strb	w23, [x19, x0]
  46417c:	strb	w23, [x19, #264]
  464180:	b.eq	4656a8 <_obstack_memory_used@@Base+0x8d80>  // b.none
  464184:	ldrb	w23, [x22], #1
  464188:	cmp	x1, #0xff
  46418c:	b.ne	464168 <_obstack_memory_used@@Base+0x7840>  // b.any
  464190:	ldp	x3, x2, [x19, #272]
  464194:	strb	wzr, [x19, #255]
  464198:	mov	x0, x19
  46419c:	blr	x3
  4641a0:	ldr	x2, [x19, #320]
  4641a4:	mov	x1, #0x1                   	// #1
  4641a8:	mov	x0, #0x0                   	// #0
  4641ac:	add	x2, x2, x1
  4641b0:	str	x2, [x19, #320]
  4641b4:	b	464170 <_obstack_memory_used@@Base+0x7848>
  4641b8:	ldr	x1, [x20, #8]
  4641bc:	mov	x0, x19
  4641c0:	mov	w24, #0x0                   	// #0
  4641c4:	bl	45fa48 <_obstack_memory_used@@Base+0x3120>
  4641c8:	cbz	x0, 466bdc <_obstack_memory_used@@Base+0xa2b4>
  4641cc:	stp	x25, x26, [sp, #64]
  4641d0:	ldr	w1, [x0]
  4641d4:	cmp	w1, #0x2f
  4641d8:	b.ne	465884 <_obstack_memory_used@@Base+0x8f5c>  // b.any
  4641dc:	ldr	x1, [x0, #8]
  4641e0:	cbz	x1, 465884 <_obstack_memory_used@@Base+0x8f5c>
  4641e4:	ldr	x0, [x0, #16]
  4641e8:	add	w24, w24, #0x1
  4641ec:	cbnz	x0, 4641d0 <_obstack_memory_used@@Base+0x78a8>
  4641f0:	ldr	x25, [x20, #8]
  4641f4:	sub	w26, w24, #0x1
  4641f8:	b	464208 <_obstack_memory_used@@Base+0x78e0>
  4641fc:	add	w22, w22, #0x1
  464200:	cmp	w22, w24
  464204:	b.ge	46582c <_obstack_memory_used@@Base+0x8f04>  // b.tcont
  464208:	str	w22, [x19, #316]
  46420c:	mov	x2, x25
  464210:	mov	w1, w21
  464214:	mov	x0, x19
  464218:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46421c:	cmp	w26, w22
  464220:	b.le	4641fc <_obstack_memory_used@@Base+0x78d4>
  464224:	mov	w20, #0x2c                  	// #44
  464228:	mov	x23, #0x0                   	// #0
  46422c:	ldr	x1, [x19, #256]
  464230:	b	464254 <_obstack_memory_used@@Base+0x792c>
  464234:	mov	x0, x1
  464238:	add	x1, x1, #0x1
  46423c:	str	x1, [x19, #256]
  464240:	strb	w20, [x19, x0]
  464244:	strb	w20, [x19, #264]
  464248:	mov	w20, #0x20                  	// #32
  46424c:	cbnz	x23, 4641fc <_obstack_memory_used@@Base+0x78d4>
  464250:	mov	x23, #0x1                   	// #1
  464254:	cmp	x1, #0xff
  464258:	b.ne	464234 <_obstack_memory_used@@Base+0x790c>  // b.any
  46425c:	ldp	x3, x2, [x19, #272]
  464260:	strb	wzr, [x19, #255]
  464264:	mov	x0, x19
  464268:	blr	x3
  46426c:	ldr	x2, [x19, #320]
  464270:	mov	x1, #0x1                   	// #1
  464274:	mov	x0, #0x0                   	// #0
  464278:	add	x2, x2, x1
  46427c:	str	x2, [x19, #320]
  464280:	b	46423c <_obstack_memory_used@@Base+0x7914>
  464284:	ldr	x2, [x20, #8]
  464288:	mov	w1, w21
  46428c:	mov	x0, x19
  464290:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464294:	add	x24, x24, #0xa70
  464298:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46429c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4642a0:	add	x24, x24, #0x5
  4642a4:	add	x22, x22, #0xa71
  4642a8:	mov	w23, #0x5b                  	// #91
  4642ac:	ldr	x1, [x19, #256]
  4642b0:	b	4642d4 <_obstack_memory_used@@Base+0x79ac>
  4642b4:	mov	x0, x1
  4642b8:	add	x1, x1, #0x1
  4642bc:	str	x1, [x19, #256]
  4642c0:	cmp	x24, x22
  4642c4:	strb	w23, [x19, x0]
  4642c8:	strb	w23, [x19, #264]
  4642cc:	b.eq	4651f4 <_obstack_memory_used@@Base+0x88cc>  // b.none
  4642d0:	ldrb	w23, [x22], #1
  4642d4:	cmp	x1, #0xff
  4642d8:	b.ne	4642b4 <_obstack_memory_used@@Base+0x798c>  // b.any
  4642dc:	ldp	x3, x2, [x19, #272]
  4642e0:	strb	wzr, [x19, #255]
  4642e4:	mov	x0, x19
  4642e8:	blr	x3
  4642ec:	ldr	x2, [x19, #320]
  4642f0:	mov	x1, #0x1                   	// #1
  4642f4:	mov	x0, #0x0                   	// #0
  4642f8:	add	x2, x2, x1
  4642fc:	str	x2, [x19, #320]
  464300:	b	4642bc <_obstack_memory_used@@Base+0x7994>
  464304:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464308:	add	x24, x24, #0x6a0
  46430c:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464310:	add	x24, x24, #0x1a
  464314:	add	x22, x22, #0x6a1
  464318:	mov	w23, #0x6e                  	// #110
  46431c:	ldr	x1, [x19, #256]
  464320:	b	464344 <_obstack_memory_used@@Base+0x7a1c>
  464324:	mov	x0, x1
  464328:	add	x1, x1, #0x1
  46432c:	str	x1, [x19, #256]
  464330:	cmp	x24, x22
  464334:	strb	w23, [x19, x0]
  464338:	strb	w23, [x19, #264]
  46433c:	b.eq	4651bc <_obstack_memory_used@@Base+0x8894>  // b.none
  464340:	ldrb	w23, [x22], #1
  464344:	cmp	x1, #0xff
  464348:	b.ne	464324 <_obstack_memory_used@@Base+0x79fc>  // b.any
  46434c:	ldp	x3, x2, [x19, #272]
  464350:	strb	wzr, [x19, #255]
  464354:	mov	x0, x19
  464358:	blr	x3
  46435c:	ldr	x2, [x19, #320]
  464360:	mov	x1, #0x1                   	// #1
  464364:	mov	x0, #0x0                   	// #0
  464368:	add	x2, x2, x1
  46436c:	str	x2, [x19, #320]
  464370:	b	46432c <_obstack_memory_used@@Base+0x7a04>
  464374:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464378:	add	x24, x24, #0x608
  46437c:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464380:	add	x24, x24, #0x13
  464384:	add	x22, x22, #0x609
  464388:	mov	w23, #0x67                  	// #103
  46438c:	ldr	x1, [x19, #256]
  464390:	b	4643b4 <_obstack_memory_used@@Base+0x7a8c>
  464394:	mov	x0, x1
  464398:	add	x1, x1, #0x1
  46439c:	str	x1, [x19, #256]
  4643a0:	cmp	x24, x22
  4643a4:	strb	w23, [x19, x0]
  4643a8:	strb	w23, [x19, #264]
  4643ac:	b.eq	4650cc <_obstack_memory_used@@Base+0x87a4>  // b.none
  4643b0:	ldrb	w23, [x22], #1
  4643b4:	cmp	x1, #0xff
  4643b8:	b.ne	464394 <_obstack_memory_used@@Base+0x7a6c>  // b.any
  4643bc:	ldp	x3, x2, [x19, #272]
  4643c0:	strb	wzr, [x19, #255]
  4643c4:	mov	x0, x19
  4643c8:	blr	x3
  4643cc:	ldr	x2, [x19, #320]
  4643d0:	mov	x1, #0x1                   	// #1
  4643d4:	mov	x0, #0x0                   	// #0
  4643d8:	add	x2, x2, x1
  4643dc:	str	x2, [x19, #320]
  4643e0:	b	46439c <_obstack_memory_used@@Base+0x7a74>
  4643e4:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4643e8:	add	x24, x24, #0x638
  4643ec:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4643f0:	add	x24, x24, #0x19
  4643f4:	add	x22, x22, #0x639
  4643f8:	mov	w23, #0x54                  	// #84
  4643fc:	ldr	x1, [x19, #256]
  464400:	b	464424 <_obstack_memory_used@@Base+0x7afc>
  464404:	mov	x0, x1
  464408:	add	x1, x1, #0x1
  46440c:	str	x1, [x19, #256]
  464410:	cmp	x24, x22
  464414:	strb	w23, [x19, x0]
  464418:	strb	w23, [x19, #264]
  46441c:	b.eq	4656c4 <_obstack_memory_used@@Base+0x8d9c>  // b.none
  464420:	ldrb	w23, [x22], #1
  464424:	cmp	x1, #0xff
  464428:	b.ne	464404 <_obstack_memory_used@@Base+0x7adc>  // b.any
  46442c:	ldp	x3, x2, [x19, #272]
  464430:	strb	wzr, [x19, #255]
  464434:	mov	x0, x19
  464438:	blr	x3
  46443c:	ldr	x2, [x19, #320]
  464440:	mov	x1, #0x1                   	// #1
  464444:	mov	x0, #0x0                   	// #0
  464448:	add	x2, x2, x1
  46444c:	str	x2, [x19, #320]
  464450:	b	46440c <_obstack_memory_used@@Base+0x7ae4>
  464454:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464458:	add	x22, x22, #0xaa8
  46445c:	add	x24, x22, #0x8
  464460:	mov	w23, #0x56                  	// #86
  464464:	ldr	x1, [x19, #256]
  464468:	b	464490 <_obstack_memory_used@@Base+0x7b68>
  46446c:	mov	x0, x1
  464470:	add	x1, x1, #0x1
  464474:	str	x1, [x19, #256]
  464478:	add	x22, x22, #0x1
  46447c:	strb	w23, [x19, x0]
  464480:	cmp	x24, x22
  464484:	strb	w23, [x19, #264]
  464488:	b.eq	465610 <_obstack_memory_used@@Base+0x8ce8>  // b.none
  46448c:	ldrb	w23, [x22]
  464490:	cmp	x1, #0xff
  464494:	b.ne	46446c <_obstack_memory_used@@Base+0x7b44>  // b.any
  464498:	ldp	x3, x2, [x19, #272]
  46449c:	strb	wzr, [x19, #255]
  4644a0:	mov	x0, x19
  4644a4:	blr	x3
  4644a8:	ldr	x2, [x19, #320]
  4644ac:	mov	x1, #0x1                   	// #1
  4644b0:	mov	x0, #0x0                   	// #0
  4644b4:	add	x2, x2, x1
  4644b8:	str	x2, [x19, #320]
  4644bc:	b	464474 <_obstack_memory_used@@Base+0x7b4c>
  4644c0:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4644c4:	add	x24, x24, #0x568
  4644c8:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4644cc:	add	x24, x24, #0x18
  4644d0:	add	x22, x22, #0x569
  4644d4:	mov	w23, #0x63                  	// #99
  4644d8:	ldr	x1, [x19, #256]
  4644dc:	b	464500 <_obstack_memory_used@@Base+0x7bd8>
  4644e0:	mov	x0, x1
  4644e4:	add	x1, x1, #0x1
  4644e8:	str	x1, [x19, #256]
  4644ec:	cmp	x24, x22
  4644f0:	strb	w23, [x19, x0]
  4644f4:	strb	w23, [x19, #264]
  4644f8:	b.eq	46562c <_obstack_memory_used@@Base+0x8d04>  // b.none
  4644fc:	ldrb	w23, [x22], #1
  464500:	cmp	x1, #0xff
  464504:	b.ne	4644e0 <_obstack_memory_used@@Base+0x7bb8>  // b.any
  464508:	ldp	x3, x2, [x19, #272]
  46450c:	strb	wzr, [x19, #255]
  464510:	mov	x0, x19
  464514:	blr	x3
  464518:	ldr	x2, [x19, #320]
  46451c:	mov	x1, #0x1                   	// #1
  464520:	mov	x0, #0x0                   	// #0
  464524:	add	x2, x2, x1
  464528:	str	x2, [x19, #320]
  46452c:	b	4644e8 <_obstack_memory_used@@Base+0x7bc0>
  464530:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464534:	add	x24, x24, #0xac0
  464538:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46453c:	add	x24, x24, #0xd
  464540:	add	x22, x22, #0xac1
  464544:	mov	w23, #0x74                  	// #116
  464548:	ldr	x1, [x19, #256]
  46454c:	b	464570 <_obstack_memory_used@@Base+0x7c48>
  464550:	mov	x0, x1
  464554:	add	x1, x1, #0x1
  464558:	str	x1, [x19, #256]
  46455c:	cmp	x24, x22
  464560:	strb	w23, [x19, x0]
  464564:	strb	w23, [x19, #264]
  464568:	b.eq	465184 <_obstack_memory_used@@Base+0x885c>  // b.none
  46456c:	ldrb	w23, [x22], #1
  464570:	cmp	x1, #0xff
  464574:	b.ne	464550 <_obstack_memory_used@@Base+0x7c28>  // b.any
  464578:	ldp	x3, x2, [x19, #272]
  46457c:	strb	wzr, [x19, #255]
  464580:	mov	x0, x19
  464584:	blr	x3
  464588:	ldr	x2, [x19, #320]
  46458c:	mov	x1, #0x1                   	// #1
  464590:	mov	x0, #0x0                   	// #0
  464594:	add	x2, x2, x1
  464598:	str	x2, [x19, #320]
  46459c:	b	464558 <_obstack_memory_used@@Base+0x7c30>
  4645a0:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4645a4:	add	x24, x24, #0x588
  4645a8:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4645ac:	add	x24, x24, #0x12
  4645b0:	add	x22, x22, #0x589
  4645b4:	mov	w23, #0x74                  	// #116
  4645b8:	ldr	x1, [x19, #256]
  4645bc:	b	4645e0 <_obstack_memory_used@@Base+0x7cb8>
  4645c0:	mov	x0, x1
  4645c4:	add	x1, x1, #0x1
  4645c8:	str	x1, [x19, #256]
  4645cc:	cmp	x24, x22
  4645d0:	strb	w23, [x19, x0]
  4645d4:	strb	w23, [x19, #264]
  4645d8:	b.eq	4651a0 <_obstack_memory_used@@Base+0x8878>  // b.none
  4645dc:	ldrb	w23, [x22], #1
  4645e0:	cmp	x1, #0xff
  4645e4:	b.ne	4645c0 <_obstack_memory_used@@Base+0x7c98>  // b.any
  4645e8:	ldp	x3, x2, [x19, #272]
  4645ec:	strb	wzr, [x19, #255]
  4645f0:	mov	x0, x19
  4645f4:	blr	x3
  4645f8:	ldr	x2, [x19, #320]
  4645fc:	mov	x1, #0x1                   	// #1
  464600:	mov	x0, #0x0                   	// #0
  464604:	add	x2, x2, x1
  464608:	str	x2, [x19, #320]
  46460c:	b	4645c8 <_obstack_memory_used@@Base+0x7ca0>
  464610:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464614:	add	x24, x24, #0x5a0
  464618:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  46461c:	add	x24, x24, #0x10
  464620:	add	x22, x22, #0x5a1
  464624:	mov	w23, #0x74                  	// #116
  464628:	ldr	x1, [x19, #256]
  46462c:	b	464650 <_obstack_memory_used@@Base+0x7d28>
  464630:	mov	x0, x1
  464634:	add	x1, x1, #0x1
  464638:	str	x1, [x19, #256]
  46463c:	cmp	x24, x22
  464640:	strb	w23, [x19, x0]
  464644:	strb	w23, [x19, #264]
  464648:	b.eq	4655f4 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  46464c:	ldrb	w23, [x22], #1
  464650:	cmp	x1, #0xff
  464654:	b.ne	464630 <_obstack_memory_used@@Base+0x7d08>  // b.any
  464658:	ldp	x3, x2, [x19, #272]
  46465c:	strb	wzr, [x19, #255]
  464660:	mov	x0, x19
  464664:	blr	x3
  464668:	ldr	x2, [x19, #320]
  46466c:	mov	x1, #0x1                   	// #1
  464670:	mov	x0, #0x0                   	// #0
  464674:	add	x2, x2, x1
  464678:	str	x2, [x19, #320]
  46467c:	b	464638 <_obstack_memory_used@@Base+0x7d10>
  464680:	stp	x25, x26, [sp, #64]
  464684:	ldr	x25, [x20, #8]
  464688:	ldr	x22, [x19, #296]
  46468c:	str	xzr, [x19, #296]
  464690:	cbz	x25, 466748 <_obstack_memory_used@@Base+0x9e20>
  464694:	add	x23, sp, #0x60
  464698:	mov	x2, #0x1f                  	// #31
  46469c:	ldr	x6, [x19, #288]
  4646a0:	mov	x3, x23
  4646a4:	mov	x0, #0x0                   	// #0
  4646a8:	mov	w24, #0x0                   	// #0
  4646ac:	mov	x1, #0x1                   	// #1
  4646b0:	movk	x2, #0x1a, lsl #48
  4646b4:	str	wzr, [x3, #16]
  4646b8:	add	w24, w24, #0x1
  4646bc:	str	x0, [x3]
  4646c0:	mov	x4, x3
  4646c4:	ldr	w5, [x25]
  4646c8:	str	x25, [x3, #8]
  4646cc:	str	x6, [x3, #24]
  4646d0:	sub	w0, w5, #0x1c
  4646d4:	cmp	w0, #0x34
  4646d8:	b.hi	4646e8 <_obstack_memory_used@@Base+0x7dc0>  // b.pmore
  4646dc:	lsl	x0, x1, x0
  4646e0:	tst	x0, x2
  4646e4:	b.ne	465868 <_obstack_memory_used@@Base+0x8f40>  // b.any
  4646e8:	str	x3, [x19, #296]
  4646ec:	cmp	w5, #0x2
  4646f0:	b.eq	466628 <_obstack_memory_used@@Base+0x9d00>  // b.none
  4646f4:	cmp	w5, #0x4
  4646f8:	b.ne	464708 <_obstack_memory_used@@Base+0x7de0>  // b.any
  4646fc:	add	x0, sp, #0x50
  464700:	stp	x6, x25, [sp, #80]
  464704:	str	x0, [x19, #288]
  464708:	ldr	x2, [x20, #16]
  46470c:	mov	x0, x19
  464710:	mov	w1, w21
  464714:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  464718:	ldr	w0, [x25]
  46471c:	cmp	w0, #0x4
  464720:	b.ne	46472c <_obstack_memory_used@@Base+0x7e04>  // b.any
  464724:	ldr	x0, [sp, #80]
  464728:	str	x0, [x19, #288]
  46472c:	sub	w20, w24, #0x1
  464730:	mov	w24, #0x20                  	// #32
  464734:	ubfiz	x0, x20, #5, #32
  464738:	add	x23, x23, x0
  46473c:	b	464744 <_obstack_memory_used@@Base+0x7e1c>
  464740:	sub	w20, w20, #0x1
  464744:	ldr	w0, [x23, #16]
  464748:	cbnz	w0, 4647a0 <_obstack_memory_used@@Base+0x7e78>
  46474c:	ldr	x0, [x19, #256]
  464750:	add	x1, x0, #0x1
  464754:	cmp	x0, #0xff
  464758:	b.ne	464784 <_obstack_memory_used@@Base+0x7e5c>  // b.any
  46475c:	ldp	x3, x2, [x19, #272]
  464760:	strb	wzr, [x19, #255]
  464764:	mov	x1, x0
  464768:	mov	x0, x19
  46476c:	blr	x3
  464770:	ldr	x2, [x19, #320]
  464774:	mov	x1, #0x1                   	// #1
  464778:	mov	x0, #0x0                   	// #0
  46477c:	add	x2, x2, x1
  464780:	str	x2, [x19, #320]
  464784:	str	x1, [x19, #256]
  464788:	mov	w1, w21
  46478c:	ldr	x2, [x23, #8]
  464790:	strb	w24, [x19, x0]
  464794:	strb	w24, [x19, #264]
  464798:	mov	x0, x19
  46479c:	bl	467218 <_obstack_memory_used@@Base+0xa8f0>
  4647a0:	sub	x23, x23, #0x20
  4647a4:	cbnz	w20, 464740 <_obstack_memory_used@@Base+0x7e18>
  4647a8:	ldp	x23, x24, [sp, #48]
  4647ac:	ldp	x25, x26, [sp, #64]
  4647b0:	str	x22, [x19, #296]
  4647b4:	ldp	x21, x22, [sp, #32]
  4647b8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4647bc:	ldr	x22, [x20, #8]
  4647c0:	ldr	x24, [x19, #296]
  4647c4:	str	xzr, [x19, #296]
  4647c8:	ldr	x23, [x19, #368]
  4647cc:	str	x20, [x19, #368]
  4647d0:	tbz	w21, #2, 4647e8 <_obstack_memory_used@@Base+0x7ec0>
  4647d4:	ldr	w0, [x22]
  4647d8:	cbnz	w0, 4647e8 <_obstack_memory_used@@Base+0x7ec0>
  4647dc:	ldr	w0, [x22, #16]
  4647e0:	cmp	w0, #0x6
  4647e4:	b.eq	466ae0 <_obstack_memory_used@@Base+0xa1b8>  // b.none
  4647e8:	mov	x0, x19
  4647ec:	mov	x2, x22
  4647f0:	mov	w1, w21
  4647f4:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4647f8:	ldrb	w0, [x19, #264]
  4647fc:	cmp	w0, #0x3c
  464800:	b.eq	466348 <_obstack_memory_used@@Base+0x9a20>  // b.none
  464804:	ldr	x1, [x19, #256]
  464808:	add	x0, x1, #0x1
  46480c:	cmp	x1, #0xff
  464810:	b.ne	464838 <_obstack_memory_used@@Base+0x7f10>  // b.any
  464814:	ldp	x3, x2, [x19, #272]
  464818:	strb	wzr, [x19, #255]
  46481c:	mov	x0, x19
  464820:	blr	x3
  464824:	ldr	x2, [x19, #320]
  464828:	mov	x0, #0x1                   	// #1
  46482c:	mov	x1, #0x0                   	// #0
  464830:	add	x2, x2, x0
  464834:	str	x2, [x19, #320]
  464838:	str	x0, [x19, #256]
  46483c:	mov	w0, #0x3c                  	// #60
  464840:	strb	w0, [x19, x1]
  464844:	mov	w1, w21
  464848:	strb	w0, [x19, #264]
  46484c:	mov	x0, x19
  464850:	ldr	x2, [x20, #16]
  464854:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  464858:	ldrb	w0, [x19, #264]
  46485c:	cmp	w0, #0x3e
  464860:	b.eq	466300 <_obstack_memory_used@@Base+0x99d8>  // b.none
  464864:	ldr	x1, [x19, #256]
  464868:	add	x0, x1, #0x1
  46486c:	cmp	x1, #0xff
  464870:	b.ne	464898 <_obstack_memory_used@@Base+0x7f70>  // b.any
  464874:	ldp	x3, x2, [x19, #272]
  464878:	strb	wzr, [x19, #255]
  46487c:	mov	x0, x19
  464880:	blr	x3
  464884:	ldr	x2, [x19, #320]
  464888:	mov	x0, #0x1                   	// #1
  46488c:	mov	x1, #0x0                   	// #0
  464890:	add	x2, x2, x0
  464894:	str	x2, [x19, #320]
  464898:	str	x0, [x19, #256]
  46489c:	mov	w0, #0x3e                  	// #62
  4648a0:	strb	w0, [x19, x1]
  4648a4:	strb	w0, [x19, #264]
  4648a8:	ldp	x21, x22, [sp, #32]
  4648ac:	str	x24, [x19, #296]
  4648b0:	str	x23, [x19, #368]
  4648b4:	ldp	x23, x24, [sp, #48]
  4648b8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4648bc:	ldr	w0, [x19, #312]
  4648c0:	cbz	w0, 46598c <_obstack_memory_used@@Base+0x9064>
  4648c4:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4648c8:	add	x23, x23, #0xa90
  4648cc:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4648d0:	add	x23, x23, #0x5
  4648d4:	add	x21, x21, #0xa91
  4648d8:	mov	w22, #0x61                  	// #97
  4648dc:	ldr	x1, [x19, #256]
  4648e0:	b	464904 <_obstack_memory_used@@Base+0x7fdc>
  4648e4:	mov	x0, x1
  4648e8:	add	x1, x1, #0x1
  4648ec:	str	x1, [x19, #256]
  4648f0:	cmp	x23, x21
  4648f4:	strb	w22, [x19, x0]
  4648f8:	strb	w22, [x19, #264]
  4648fc:	b.eq	4659d4 <_obstack_memory_used@@Base+0x90ac>  // b.none
  464900:	ldrb	w22, [x21], #1
  464904:	cmp	x1, #0xff
  464908:	b.ne	4648e4 <_obstack_memory_used@@Base+0x7fbc>  // b.any
  46490c:	ldp	x3, x2, [x19, #272]
  464910:	strb	wzr, [x19, #255]
  464914:	mov	x0, x19
  464918:	blr	x3
  46491c:	ldr	x2, [x19, #320]
  464920:	mov	x1, #0x1                   	// #1
  464924:	mov	x0, #0x0                   	// #0
  464928:	add	x2, x2, x1
  46492c:	str	x2, [x19, #320]
  464930:	b	4648ec <_obstack_memory_used@@Base+0x7fc4>
  464934:	ldr	x1, [x19, #256]
  464938:	add	x0, x1, #0x1
  46493c:	cmp	x1, #0xff
  464940:	b.ne	464968 <_obstack_memory_used@@Base+0x8040>  // b.any
  464944:	ldp	x3, x2, [x19, #272]
  464948:	strb	wzr, [x19, #255]
  46494c:	mov	x0, x19
  464950:	blr	x3
  464954:	ldr	x2, [x19, #320]
  464958:	mov	x0, #0x1                   	// #1
  46495c:	mov	x1, #0x0                   	// #0
  464960:	add	x2, x2, x0
  464964:	str	x2, [x19, #320]
  464968:	str	x0, [x19, #256]
  46496c:	mov	w0, #0x7e                  	// #126
  464970:	strb	w0, [x19, x1]
  464974:	mov	w1, w21
  464978:	strb	w0, [x19, #264]
  46497c:	mov	x0, x19
  464980:	ldr	x2, [x20, #16]
  464984:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  464988:	ldp	x21, x22, [sp, #32]
  46498c:	ldp	x23, x24, [sp, #48]
  464990:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  464994:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464998:	add	x24, x24, #0xa98
  46499c:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4649a0:	add	x24, x24, #0xb
  4649a4:	add	x22, x22, #0xa99
  4649a8:	mov	w23, #0x76                  	// #118
  4649ac:	ldr	x1, [x19, #256]
  4649b0:	b	4649d4 <_obstack_memory_used@@Base+0x80ac>
  4649b4:	mov	x0, x1
  4649b8:	add	x1, x1, #0x1
  4649bc:	str	x1, [x19, #256]
  4649c0:	cmp	x24, x22
  4649c4:	strb	w23, [x19, x0]
  4649c8:	strb	w23, [x19, #264]
  4649cc:	b.eq	465168 <_obstack_memory_used@@Base+0x8840>  // b.none
  4649d0:	ldrb	w23, [x22], #1
  4649d4:	cmp	x1, #0xff
  4649d8:	b.ne	4649b4 <_obstack_memory_used@@Base+0x808c>  // b.any
  4649dc:	ldp	x3, x2, [x19, #272]
  4649e0:	strb	wzr, [x19, #255]
  4649e4:	mov	x0, x19
  4649e8:	blr	x3
  4649ec:	ldr	x2, [x19, #320]
  4649f0:	mov	x1, #0x1                   	// #1
  4649f4:	mov	x0, #0x0                   	// #0
  4649f8:	add	x2, x2, x1
  4649fc:	str	x2, [x19, #320]
  464a00:	b	4649bc <_obstack_memory_used@@Base+0x8094>
  464a04:	ldr	x0, [x20, #16]
  464a08:	ldr	w0, [x0]
  464a0c:	cmp	w0, #0x39
  464a10:	b.ne	463400 <_obstack_memory_used@@Base+0x6ad8>  // b.any
  464a14:	ldr	x2, [x20, #8]
  464a18:	ldr	x0, [x2, #8]
  464a1c:	ldr	x0, [x0]
  464a20:	ldrb	w1, [x0, #1]
  464a24:	cmp	w1, #0x63
  464a28:	b.eq	466760 <_obstack_memory_used@@Base+0x9e38>  // b.none
  464a2c:	add	x3, x20, #0x10
  464a30:	mov	w1, w21
  464a34:	mov	x0, x19
  464a38:	bl	4684d0 <_obstack_memory_used@@Base+0xbba8>
  464a3c:	cbnz	w0, 466ac8 <_obstack_memory_used@@Base+0xa1a0>
  464a40:	ldr	x0, [x20, #8]
  464a44:	ldr	w1, [x0]
  464a48:	cmp	w1, #0x32
  464a4c:	b.eq	466c3c <_obstack_memory_used@@Base+0xa314>  // b.none
  464a50:	ldr	x0, [x0, #8]
  464a54:	ldr	x1, [x0]
  464a58:	ldrb	w0, [x1]
  464a5c:	subs	w0, w0, #0x63
  464a60:	b.ne	464a74 <_obstack_memory_used@@Base+0x814c>  // b.any
  464a64:	ldrb	w0, [x1, #1]
  464a68:	subs	w0, w0, #0x6c
  464a6c:	b.ne	464a74 <_obstack_memory_used@@Base+0x814c>  // b.any
  464a70:	ldrb	w0, [x1, #2]
  464a74:	ldr	x1, [x20, #16]
  464a78:	ldr	x2, [x1, #8]
  464a7c:	cbnz	w0, 464a8c <_obstack_memory_used@@Base+0x8164>
  464a80:	ldr	w0, [x2]
  464a84:	cmp	w0, #0x3
  464a88:	b.eq	466d00 <_obstack_memory_used@@Base+0xa3d8>  // b.none
  464a8c:	mov	w1, w21
  464a90:	mov	x0, x19
  464a94:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  464a98:	ldr	x2, [x20, #8]
  464a9c:	ldr	x0, [x2, #8]
  464aa0:	ldr	x0, [x0]
  464aa4:	ldrb	w1, [x0]
  464aa8:	cmp	w1, #0x69
  464aac:	b.ne	466a18 <_obstack_memory_used@@Base+0xa0f0>  // b.any
  464ab0:	ldrb	w3, [x0, #1]
  464ab4:	cmp	w3, #0x78
  464ab8:	b.ne	466a18 <_obstack_memory_used@@Base+0xa0f0>  // b.any
  464abc:	ldrb	w3, [x0, #2]
  464ac0:	cbnz	w3, 466a18 <_obstack_memory_used@@Base+0xa0f0>
  464ac4:	ldr	x1, [x19, #256]
  464ac8:	cmp	x1, #0xff
  464acc:	b.ne	464af4 <_obstack_memory_used@@Base+0x81cc>  // b.any
  464ad0:	ldp	x3, x2, [x19, #272]
  464ad4:	strb	wzr, [x19, #255]
  464ad8:	mov	x0, x19
  464adc:	blr	x3
  464ae0:	str	xzr, [x19, #256]
  464ae4:	ldr	x0, [x19, #320]
  464ae8:	mov	x1, #0x0                   	// #0
  464aec:	add	x0, x0, #0x1
  464af0:	str	x0, [x19, #320]
  464af4:	add	x0, x1, #0x1
  464af8:	str	x0, [x19, #256]
  464afc:	mov	w0, #0x5b                  	// #91
  464b00:	strb	w0, [x19, x1]
  464b04:	strb	w0, [x19, #264]
  464b08:	mov	w1, w21
  464b0c:	mov	x0, x19
  464b10:	ldr	x2, [x20, #16]
  464b14:	ldr	x2, [x2, #16]
  464b18:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  464b1c:	ldr	x1, [x19, #256]
  464b20:	cmp	x1, #0xff
  464b24:	b.ne	464b4c <_obstack_memory_used@@Base+0x8224>  // b.any
  464b28:	ldp	x3, x2, [x19, #272]
  464b2c:	strb	wzr, [x19, #255]
  464b30:	mov	x0, x19
  464b34:	blr	x3
  464b38:	str	xzr, [x19, #256]
  464b3c:	ldr	x0, [x19, #320]
  464b40:	mov	x1, #0x0                   	// #0
  464b44:	add	x0, x0, #0x1
  464b48:	str	x0, [x19, #320]
  464b4c:	add	x0, x1, #0x1
  464b50:	str	x0, [x19, #256]
  464b54:	mov	w0, #0x5d                  	// #93
  464b58:	strb	w0, [x19, x1]
  464b5c:	strb	w0, [x19, #264]
  464b60:	ldr	x0, [x20, #8]
  464b64:	ldr	w1, [x0]
  464b68:	cmp	w1, #0x32
  464b6c:	b.eq	466c20 <_obstack_memory_used@@Base+0xa2f8>  // b.none
  464b70:	ldp	x21, x22, [sp, #32]
  464b74:	ldp	x23, x24, [sp, #48]
  464b78:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  464b7c:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464b80:	add	x24, x24, #0xb18
  464b84:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464b88:	add	x24, x24, #0xe
  464b8c:	add	x22, x22, #0xb19
  464b90:	mov	w23, #0x6a                  	// #106
  464b94:	ldr	x1, [x19, #256]
  464b98:	b	464bbc <_obstack_memory_used@@Base+0x8294>
  464b9c:	mov	x0, x1
  464ba0:	add	x1, x1, #0x1
  464ba4:	str	x1, [x19, #256]
  464ba8:	cmp	x24, x22
  464bac:	strb	w23, [x19, x0]
  464bb0:	strb	w23, [x19, #264]
  464bb4:	b.eq	46576c <_obstack_memory_used@@Base+0x8e44>  // b.none
  464bb8:	ldrb	w23, [x22], #1
  464bbc:	cmp	x1, #0xff
  464bc0:	b.ne	464b9c <_obstack_memory_used@@Base+0x8274>  // b.any
  464bc4:	ldp	x3, x2, [x19, #272]
  464bc8:	strb	wzr, [x19, #255]
  464bcc:	mov	x0, x19
  464bd0:	blr	x3
  464bd4:	ldr	x2, [x19, #320]
  464bd8:	mov	x1, #0x1                   	// #1
  464bdc:	mov	x0, #0x0                   	// #0
  464be0:	add	x2, x2, x1
  464be4:	str	x2, [x19, #320]
  464be8:	b	464ba4 <_obstack_memory_used@@Base+0x827c>
  464bec:	ldr	x2, [x20, #8]
  464bf0:	mov	w1, w21
  464bf4:	mov	x0, x19
  464bf8:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  464bfc:	ldr	x2, [x20, #16]
  464c00:	mov	w1, w21
  464c04:	mov	x0, x19
  464c08:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  464c0c:	ldp	x21, x22, [sp, #32]
  464c10:	ldp	x23, x24, [sp, #48]
  464c14:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  464c18:	ldr	x1, [x19, #256]
  464c1c:	ldrb	w20, [x20, #8]
  464c20:	add	x0, x1, #0x1
  464c24:	cmp	x1, #0xff
  464c28:	b.ne	464c50 <_obstack_memory_used@@Base+0x8328>  // b.any
  464c2c:	ldp	x3, x2, [x19, #272]
  464c30:	strb	wzr, [x19, #255]
  464c34:	mov	x0, x19
  464c38:	blr	x3
  464c3c:	ldr	x2, [x19, #320]
  464c40:	mov	x0, #0x1                   	// #1
  464c44:	mov	x1, #0x0                   	// #0
  464c48:	add	x2, x2, x0
  464c4c:	str	x2, [x19, #320]
  464c50:	str	x0, [x19, #256]
  464c54:	strb	w20, [x19, x1]
  464c58:	strb	w20, [x19, #264]
  464c5c:	ldp	x21, x22, [sp, #32]
  464c60:	ldp	x23, x24, [sp, #48]
  464c64:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  464c68:	ldr	w2, [x20, #8]
  464c6c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  464c70:	add	x1, x1, #0x9e0
  464c74:	add	x20, sp, #0x60
  464c78:	mov	x0, x20
  464c7c:	bl	402310 <sprintf@plt>
  464c80:	mov	x0, x20
  464c84:	bl	402270 <strlen@plt>
  464c88:	cbz	x0, 466bb8 <_obstack_memory_used@@Base+0xa290>
  464c8c:	add	x22, x20, x0
  464c90:	ldr	x1, [x19, #256]
  464c94:	b	464cb8 <_obstack_memory_used@@Base+0x8390>
  464c98:	mov	x0, x1
  464c9c:	add	x1, x1, #0x1
  464ca0:	str	x1, [x19, #256]
  464ca4:	add	x20, x20, #0x1
  464ca8:	strb	w21, [x19, x0]
  464cac:	cmp	x20, x22
  464cb0:	strb	w21, [x19, #264]
  464cb4:	b.eq	465820 <_obstack_memory_used@@Base+0x8ef8>  // b.none
  464cb8:	ldrb	w21, [x20]
  464cbc:	cmp	x1, #0xff
  464cc0:	b.ne	464c98 <_obstack_memory_used@@Base+0x8370>  // b.any
  464cc4:	ldp	x3, x2, [x19, #272]
  464cc8:	strb	wzr, [x19, #255]
  464ccc:	mov	x0, x19
  464cd0:	blr	x3
  464cd4:	ldr	x2, [x19, #320]
  464cd8:	mov	x1, #0x1                   	// #1
  464cdc:	mov	x0, #0x0                   	// #0
  464ce0:	add	x2, x2, x1
  464ce4:	str	x2, [x19, #320]
  464ce8:	b	464ca0 <_obstack_memory_used@@Base+0x8378>
  464cec:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464cf0:	add	x24, x24, #0xb28
  464cf4:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464cf8:	add	x24, x24, #0xa
  464cfc:	add	x22, x22, #0xb29
  464d00:	mov	w23, #0x64                  	// #100
  464d04:	ldr	x1, [x19, #256]
  464d08:	b	464d2c <_obstack_memory_used@@Base+0x8404>
  464d0c:	mov	x0, x1
  464d10:	add	x1, x1, #0x1
  464d14:	str	x1, [x19, #256]
  464d18:	cmp	x22, x24
  464d1c:	strb	w23, [x19, x0]
  464d20:	strb	w23, [x19, #264]
  464d24:	b.eq	465594 <_obstack_memory_used@@Base+0x8c6c>  // b.none
  464d28:	ldrb	w23, [x22], #1
  464d2c:	cmp	x1, #0xff
  464d30:	b.ne	464d0c <_obstack_memory_used@@Base+0x83e4>  // b.any
  464d34:	ldp	x3, x2, [x19, #272]
  464d38:	strb	wzr, [x19, #255]
  464d3c:	mov	x0, x19
  464d40:	blr	x3
  464d44:	ldr	x2, [x19, #320]
  464d48:	mov	x1, #0x1                   	// #1
  464d4c:	mov	x0, #0x0                   	// #0
  464d50:	add	x2, x2, x1
  464d54:	str	x2, [x19, #320]
  464d58:	b	464d14 <_obstack_memory_used@@Base+0x83ec>
  464d5c:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464d60:	add	x24, x24, #0x6f0
  464d64:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  464d68:	add	x24, x24, #0x1d
  464d6c:	add	x22, x22, #0x6f1
  464d70:	mov	w23, #0x67                  	// #103
  464d74:	ldr	x1, [x19, #256]
  464d78:	b	464d9c <_obstack_memory_used@@Base+0x8474>
  464d7c:	mov	x0, x1
  464d80:	add	x1, x1, #0x1
  464d84:	str	x1, [x19, #256]
  464d88:	cmp	x22, x24
  464d8c:	strb	w23, [x19, x0]
  464d90:	strb	w23, [x19, #264]
  464d94:	b.eq	4657d8 <_obstack_memory_used@@Base+0x8eb0>  // b.none
  464d98:	ldrb	w23, [x22], #1
  464d9c:	cmp	x1, #0xff
  464da0:	b.ne	464d7c <_obstack_memory_used@@Base+0x8454>  // b.any
  464da4:	ldp	x3, x2, [x19, #272]
  464da8:	strb	wzr, [x19, #255]
  464dac:	mov	x0, x19
  464db0:	blr	x3
  464db4:	ldr	x2, [x19, #320]
  464db8:	mov	x1, #0x1                   	// #1
  464dbc:	mov	x0, #0x0                   	// #0
  464dc0:	add	x2, x2, x1
  464dc4:	str	x2, [x19, #320]
  464dc8:	b	464d84 <_obstack_memory_used@@Base+0x845c>
  464dcc:	ldrsw	x22, [x20, #16]
  464dd0:	ldr	x20, [x20, #8]
  464dd4:	tbnz	w21, #2, 4658a4 <_obstack_memory_used@@Base+0x8f7c>
  464dd8:	cbz	x22, 466ce8 <_obstack_memory_used@@Base+0xa3c0>
  464ddc:	add	x22, x20, x22
  464de0:	ldr	x1, [x19, #256]
  464de4:	b	464e08 <_obstack_memory_used@@Base+0x84e0>
  464de8:	mov	x0, x1
  464dec:	add	x1, x1, #0x1
  464df0:	str	x1, [x19, #256]
  464df4:	add	x20, x20, #0x1
  464df8:	strb	w21, [x19, x0]
  464dfc:	cmp	x22, x20
  464e00:	strb	w21, [x19, #264]
  464e04:	b.eq	465cac <_obstack_memory_used@@Base+0x9384>  // b.none
  464e08:	ldrb	w21, [x20]
  464e0c:	cmp	x1, #0xff
  464e10:	b.ne	464de8 <_obstack_memory_used@@Base+0x84c0>  // b.any
  464e14:	ldp	x3, x2, [x19, #272]
  464e18:	strb	wzr, [x19, #255]
  464e1c:	mov	x0, x19
  464e20:	blr	x3
  464e24:	ldr	x2, [x19, #320]
  464e28:	mov	x1, #0x1                   	// #1
  464e2c:	mov	x0, #0x0                   	// #0
  464e30:	add	x2, x2, x1
  464e34:	str	x2, [x19, #320]
  464e38:	b	464df0 <_obstack_memory_used@@Base+0x84c8>
  464e3c:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  464e40:	add	x22, x22, #0xb08
  464e44:	add	x24, x22, #0x9
  464e48:	mov	w23, #0x6f                  	// #111
  464e4c:	ldr	x1, [x19, #256]
  464e50:	b	464e78 <_obstack_memory_used@@Base+0x8550>
  464e54:	mov	x0, x1
  464e58:	add	x1, x1, #0x1
  464e5c:	str	x1, [x19, #256]
  464e60:	add	x22, x22, #0x1
  464e64:	strb	w23, [x19, x0]
  464e68:	cmp	x22, x24
  464e6c:	strb	w23, [x19, #264]
  464e70:	b.eq	465788 <_obstack_memory_used@@Base+0x8e60>  // b.none
  464e74:	ldrb	w23, [x22]
  464e78:	cmp	x1, #0xff
  464e7c:	b.ne	464e54 <_obstack_memory_used@@Base+0x852c>  // b.any
  464e80:	ldp	x3, x2, [x19, #272]
  464e84:	strb	wzr, [x19, #255]
  464e88:	mov	x0, x19
  464e8c:	blr	x3
  464e90:	ldr	x2, [x19, #320]
  464e94:	mov	x1, #0x1                   	// #1
  464e98:	mov	x0, #0x0                   	// #0
  464e9c:	add	x2, x2, x1
  464ea0:	str	x2, [x19, #320]
  464ea4:	b	464e5c <_obstack_memory_used@@Base+0x8534>
  464ea8:	ldr	x2, [x20, #8]
  464eac:	mov	w1, w21
  464eb0:	mov	x0, x19
  464eb4:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  464eb8:	ldp	x21, x22, [sp, #32]
  464ebc:	ldp	x23, x24, [sp, #48]
  464ec0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  464ec4:	ldp	x22, x20, [x20, #8]
  464ec8:	ldr	w0, [x22]
  464ecc:	cmp	w0, #0x32
  464ed0:	b.eq	465df4 <_obstack_memory_used@@Base+0x94cc>  // b.none
  464ed4:	cmp	w0, #0x34
  464ed8:	b.ne	46713c <_obstack_memory_used@@Base+0xa814>  // b.any
  464edc:	ldr	x1, [x19, #256]
  464ee0:	add	x0, x1, #0x1
  464ee4:	cmp	x1, #0xff
  464ee8:	b.ne	464f10 <_obstack_memory_used@@Base+0x85e8>  // b.any
  464eec:	ldp	x3, x2, [x19, #272]
  464ef0:	strb	wzr, [x19, #255]
  464ef4:	mov	x0, x19
  464ef8:	blr	x3
  464efc:	ldr	x2, [x19, #320]
  464f00:	mov	x0, #0x1                   	// #1
  464f04:	mov	x1, #0x0                   	// #0
  464f08:	add	x2, x2, x0
  464f0c:	str	x2, [x19, #320]
  464f10:	str	x0, [x19, #256]
  464f14:	mov	w0, #0x28                  	// #40
  464f18:	strb	w0, [x19, x1]
  464f1c:	mov	w1, w21
  464f20:	strb	w0, [x19, #264]
  464f24:	mov	x0, x19
  464f28:	ldr	x2, [x22, #8]
  464f2c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  464f30:	ldr	x1, [x19, #256]
  464f34:	add	x0, x1, #0x1
  464f38:	cmp	x1, #0xff
  464f3c:	b.ne	464f64 <_obstack_memory_used@@Base+0x863c>  // b.any
  464f40:	ldp	x3, x2, [x19, #272]
  464f44:	strb	wzr, [x19, #255]
  464f48:	mov	x0, x19
  464f4c:	blr	x3
  464f50:	ldr	x2, [x19, #320]
  464f54:	mov	x0, #0x1                   	// #1
  464f58:	mov	x1, #0x0                   	// #0
  464f5c:	add	x2, x2, x0
  464f60:	str	x2, [x19, #320]
  464f64:	str	x0, [x19, #256]
  464f68:	mov	w0, #0x29                  	// #41
  464f6c:	strb	w0, [x19, x1]
  464f70:	strb	w0, [x19, #264]
  464f74:	mov	w1, w21
  464f78:	mov	x2, x20
  464f7c:	mov	x0, x19
  464f80:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  464f84:	ldp	x21, x22, [sp, #32]
  464f88:	ldp	x23, x24, [sp, #48]
  464f8c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  464f90:	ldr	x0, [x20, #8]
  464f94:	tbnz	w21, #2, 465c20 <_obstack_memory_used@@Base+0x92f8>
  464f98:	ldrsw	x22, [x0, #8]
  464f9c:	ldr	x20, [x0]
  464fa0:	cbz	x22, 466e08 <_obstack_memory_used@@Base+0xa4e0>
  464fa4:	add	x22, x20, x22
  464fa8:	ldr	x1, [x19, #256]
  464fac:	b	464fd0 <_obstack_memory_used@@Base+0x86a8>
  464fb0:	mov	x0, x1
  464fb4:	add	x1, x1, #0x1
  464fb8:	str	x1, [x19, #256]
  464fbc:	add	x20, x20, #0x1
  464fc0:	strb	w21, [x19, x0]
  464fc4:	cmp	x22, x20
  464fc8:	strb	w21, [x19, #264]
  464fcc:	b.eq	465c94 <_obstack_memory_used@@Base+0x936c>  // b.none
  464fd0:	ldrb	w21, [x20]
  464fd4:	cmp	x1, #0xff
  464fd8:	b.ne	464fb0 <_obstack_memory_used@@Base+0x8688>  // b.any
  464fdc:	ldp	x3, x2, [x19, #272]
  464fe0:	strb	wzr, [x19, #255]
  464fe4:	mov	x0, x19
  464fe8:	blr	x3
  464fec:	ldr	x2, [x19, #320]
  464ff0:	mov	x1, #0x1                   	// #1
  464ff4:	mov	x0, #0x0                   	// #0
  464ff8:	add	x2, x2, x1
  464ffc:	str	x2, [x19, #320]
  465000:	b	464fb8 <_obstack_memory_used@@Base+0x8690>
  465004:	ldr	x2, [x0, #8]
  465008:	add	x0, sp, #0x60
  46500c:	ldr	x1, [x19, #288]
  465010:	stp	x4, x20, [sp, #96]
  465014:	str	wzr, [sp, #112]
  465018:	str	x1, [sp, #120]
  46501c:	str	x0, [x19, #296]
  465020:	cbnz	x2, 463438 <_obstack_memory_used@@Base+0x6b10>
  465024:	b	463434 <_obstack_memory_used@@Base+0x6b0c>
  465028:	ldp	x21, x22, [sp, #32]
  46502c:	ldp	x23, x24, [sp, #48]
  465030:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465034:	ldr	x2, [x20, #16]
  465038:	mov	w1, w21
  46503c:	mov	x0, x19
  465040:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465044:	ldr	x1, [x19, #256]
  465048:	add	x0, x1, #0x1
  46504c:	cmp	x1, #0xff
  465050:	b.ne	465078 <_obstack_memory_used@@Base+0x8750>  // b.any
  465054:	ldp	x3, x2, [x19, #272]
  465058:	strb	wzr, [x19, #255]
  46505c:	mov	x0, x19
  465060:	blr	x3
  465064:	ldr	x2, [x19, #320]
  465068:	mov	x0, #0x1                   	// #1
  46506c:	mov	x1, #0x0                   	// #0
  465070:	add	x2, x2, x0
  465074:	str	x2, [x19, #320]
  465078:	str	x0, [x19, #256]
  46507c:	mov	w0, #0x5d                  	// #93
  465080:	strb	w0, [x19, x1]
  465084:	strb	w0, [x19, #264]
  465088:	ldp	x21, x22, [sp, #32]
  46508c:	ldp	x23, x24, [sp, #48]
  465090:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465094:	ldr	x2, [x20, #16]
  465098:	mov	w1, w21
  46509c:	mov	x0, x19
  4650a0:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4650a4:	ldp	x21, x22, [sp, #32]
  4650a8:	ldp	x23, x24, [sp, #48]
  4650ac:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4650b0:	ldr	x2, [x20, #8]
  4650b4:	mov	w1, w21
  4650b8:	mov	x0, x19
  4650bc:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4650c0:	ldp	x21, x22, [sp, #32]
  4650c4:	ldp	x23, x24, [sp, #48]
  4650c8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4650cc:	ldr	x2, [x20, #8]
  4650d0:	mov	w1, w21
  4650d4:	mov	x0, x19
  4650d8:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4650dc:	ldp	x21, x22, [sp, #32]
  4650e0:	ldp	x23, x24, [sp, #48]
  4650e4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4650e8:	ldr	x2, [x20, #16]
  4650ec:	mov	w1, w21
  4650f0:	mov	x0, x19
  4650f4:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4650f8:	add	x24, x24, #0xac8
  4650fc:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  465100:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465104:	add	x24, x24, #0x5
  465108:	add	x22, x22, #0xac9
  46510c:	mov	w23, #0x20                  	// #32
  465110:	ldr	x1, [x19, #256]
  465114:	b	465138 <_obstack_memory_used@@Base+0x8810>
  465118:	mov	x0, x1
  46511c:	add	x1, x1, #0x1
  465120:	str	x1, [x19, #256]
  465124:	cmp	x22, x24
  465128:	strb	w23, [x19, x0]
  46512c:	strb	w23, [x19, #264]
  465130:	b.eq	4651d8 <_obstack_memory_used@@Base+0x88b0>  // b.none
  465134:	ldrb	w23, [x22], #1
  465138:	cmp	x1, #0xff
  46513c:	b.ne	465118 <_obstack_memory_used@@Base+0x87f0>  // b.any
  465140:	ldp	x3, x2, [x19, #272]
  465144:	strb	wzr, [x19, #255]
  465148:	mov	x0, x19
  46514c:	blr	x3
  465150:	ldr	x2, [x19, #320]
  465154:	mov	x1, #0x1                   	// #1
  465158:	mov	x0, #0x0                   	// #0
  46515c:	add	x2, x2, x1
  465160:	str	x2, [x19, #320]
  465164:	b	465120 <_obstack_memory_used@@Base+0x87f8>
  465168:	ldr	x2, [x20, #8]
  46516c:	mov	w1, w21
  465170:	mov	x0, x19
  465174:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465178:	ldp	x21, x22, [sp, #32]
  46517c:	ldp	x23, x24, [sp, #48]
  465180:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465184:	ldr	x2, [x20, #8]
  465188:	mov	w1, w21
  46518c:	mov	x0, x19
  465190:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465194:	ldp	x21, x22, [sp, #32]
  465198:	ldp	x23, x24, [sp, #48]
  46519c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4651a0:	ldr	x2, [x20, #8]
  4651a4:	mov	w1, w21
  4651a8:	mov	x0, x19
  4651ac:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4651b0:	ldp	x21, x22, [sp, #32]
  4651b4:	ldp	x23, x24, [sp, #48]
  4651b8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4651bc:	ldr	x2, [x20, #8]
  4651c0:	mov	w1, w21
  4651c4:	mov	x0, x19
  4651c8:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4651cc:	ldp	x21, x22, [sp, #32]
  4651d0:	ldp	x23, x24, [sp, #48]
  4651d4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4651d8:	ldr	x2, [x20, #8]
  4651dc:	mov	w1, w21
  4651e0:	mov	x0, x19
  4651e4:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4651e8:	ldp	x21, x22, [sp, #32]
  4651ec:	ldp	x23, x24, [sp, #48]
  4651f0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4651f4:	ldr	x2, [x20, #16]
  4651f8:	mov	w1, w21
  4651fc:	mov	x0, x19
  465200:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465204:	ldr	x1, [x19, #256]
  465208:	add	x0, x1, #0x1
  46520c:	cmp	x1, #0xff
  465210:	b.ne	465238 <_obstack_memory_used@@Base+0x8910>  // b.any
  465214:	ldp	x3, x2, [x19, #272]
  465218:	strb	wzr, [x19, #255]
  46521c:	mov	x0, x19
  465220:	blr	x3
  465224:	ldr	x2, [x19, #320]
  465228:	mov	x0, #0x1                   	// #1
  46522c:	mov	x1, #0x0                   	// #0
  465230:	add	x2, x2, x0
  465234:	str	x2, [x19, #320]
  465238:	str	x0, [x19, #256]
  46523c:	mov	w0, #0x5d                  	// #93
  465240:	strb	w0, [x19, x1]
  465244:	strb	w0, [x19, #264]
  465248:	ldp	x21, x22, [sp, #32]
  46524c:	ldp	x23, x24, [sp, #48]
  465250:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465254:	ldr	x20, [x22, #8]
  465258:	ldrb	w0, [x20]
  46525c:	sub	w0, w0, #0x61
  465260:	and	w0, w0, #0xff
  465264:	cmp	w0, #0x19
  465268:	b.hi	4652b0 <_obstack_memory_used@@Base+0x8988>  // b.pmore
  46526c:	add	x0, x1, #0x1
  465270:	cmp	x1, #0xff
  465274:	b.ne	4652a0 <_obstack_memory_used@@Base+0x8978>  // b.any
  465278:	ldp	x3, x2, [x19, #272]
  46527c:	strb	wzr, [x19, #255]
  465280:	mov	x0, x19
  465284:	blr	x3
  465288:	ldr	x2, [x19, #320]
  46528c:	mov	x0, #0x1                   	// #1
  465290:	mov	x1, #0x0                   	// #0
  465294:	add	x2, x2, x0
  465298:	ldr	x20, [x22, #8]
  46529c:	str	x2, [x19, #320]
  4652a0:	str	x0, [x19, #256]
  4652a4:	mov	w0, #0x20                  	// #32
  4652a8:	strb	w0, [x19, x1]
  4652ac:	strb	w0, [x19, #264]
  4652b0:	sxtw	x22, w23
  4652b4:	sub	w0, w23, #0x1
  4652b8:	add	x1, x20, x22
  4652bc:	sxtw	x0, w0
  4652c0:	ldurb	w1, [x1, #-1]
  4652c4:	cmp	w1, #0x20
  4652c8:	csel	x22, x22, x0, ne  // ne = any
  4652cc:	cbz	x22, 466bac <_obstack_memory_used@@Base+0xa284>
  4652d0:	add	x22, x20, x22
  4652d4:	ldr	x1, [x19, #256]
  4652d8:	b	4652fc <_obstack_memory_used@@Base+0x89d4>
  4652dc:	mov	x0, x1
  4652e0:	add	x1, x1, #0x1
  4652e4:	str	x1, [x19, #256]
  4652e8:	add	x20, x20, #0x1
  4652ec:	strb	w21, [x19, x0]
  4652f0:	cmp	x22, x20
  4652f4:	strb	w21, [x19, #264]
  4652f8:	b.eq	465814 <_obstack_memory_used@@Base+0x8eec>  // b.none
  4652fc:	ldrb	w21, [x20]
  465300:	cmp	x1, #0xff
  465304:	b.ne	4652dc <_obstack_memory_used@@Base+0x89b4>  // b.any
  465308:	ldp	x3, x2, [x19, #272]
  46530c:	strb	wzr, [x19, #255]
  465310:	mov	x0, x19
  465314:	blr	x3
  465318:	ldr	x2, [x19, #320]
  46531c:	mov	x1, #0x1                   	// #1
  465320:	mov	x0, #0x0                   	// #0
  465324:	add	x2, x2, x1
  465328:	str	x2, [x19, #320]
  46532c:	b	4652e4 <_obstack_memory_used@@Base+0x89bc>
  465330:	ldr	x2, [x20, #8]
  465334:	mov	w1, w21
  465338:	mov	x0, x19
  46533c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465340:	ldp	x21, x22, [sp, #32]
  465344:	ldp	x23, x24, [sp, #48]
  465348:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46534c:	ldr	x2, [x20, #8]
  465350:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  465354:	add	x1, x1, #0x9e0
  465358:	add	x20, sp, #0x60
  46535c:	add	w2, w2, #0x1
  465360:	mov	x0, x20
  465364:	bl	402310 <sprintf@plt>
  465368:	mov	x0, x20
  46536c:	bl	402270 <strlen@plt>
  465370:	ldr	x1, [x19, #256]
  465374:	cbz	x0, 4653d4 <_obstack_memory_used@@Base+0x8aac>
  465378:	add	x22, x20, x0
  46537c:	b	4653a0 <_obstack_memory_used@@Base+0x8a78>
  465380:	mov	x0, x1
  465384:	add	x1, x1, #0x1
  465388:	str	x1, [x19, #256]
  46538c:	add	x20, x20, #0x1
  465390:	strb	w21, [x19, x0]
  465394:	cmp	x22, x20
  465398:	strb	w21, [x19, #264]
  46539c:	b.eq	4653d4 <_obstack_memory_used@@Base+0x8aac>  // b.none
  4653a0:	ldrb	w21, [x20]
  4653a4:	cmp	x1, #0xff
  4653a8:	b.ne	465380 <_obstack_memory_used@@Base+0x8a58>  // b.any
  4653ac:	ldp	x3, x2, [x19, #272]
  4653b0:	strb	wzr, [x19, #255]
  4653b4:	mov	x0, x19
  4653b8:	blr	x3
  4653bc:	ldr	x2, [x19, #320]
  4653c0:	mov	x1, #0x1                   	// #1
  4653c4:	mov	x0, #0x0                   	// #0
  4653c8:	add	x2, x2, x1
  4653cc:	str	x2, [x19, #320]
  4653d0:	b	465388 <_obstack_memory_used@@Base+0x8a60>
  4653d4:	add	x0, x1, #0x1
  4653d8:	cmp	x1, #0xff
  4653dc:	b.ne	465404 <_obstack_memory_used@@Base+0x8adc>  // b.any
  4653e0:	ldp	x3, x2, [x19, #272]
  4653e4:	strb	wzr, [x19, #255]
  4653e8:	mov	x0, x19
  4653ec:	blr	x3
  4653f0:	ldr	x2, [x19, #320]
  4653f4:	mov	x0, #0x1                   	// #1
  4653f8:	mov	x1, #0x0                   	// #0
  4653fc:	add	x2, x2, x0
  465400:	str	x2, [x19, #320]
  465404:	str	x0, [x19, #256]
  465408:	mov	w0, #0x7d                  	// #125
  46540c:	strb	w0, [x19, x1]
  465410:	strb	w0, [x19, #264]
  465414:	ldp	x21, x22, [sp, #32]
  465418:	ldp	x23, x24, [sp, #48]
  46541c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465420:	ldr	x2, [x20, #8]
  465424:	mov	w1, w21
  465428:	mov	x0, x19
  46542c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465430:	ldp	x21, x22, [sp, #32]
  465434:	ldp	x23, x24, [sp, #48]
  465438:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46543c:	ldr	x2, [x20, #8]
  465440:	mov	w1, w21
  465444:	mov	x0, x19
  465448:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46544c:	ldp	x21, x22, [sp, #32]
  465450:	ldp	x23, x24, [sp, #48]
  465454:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465458:	ldr	w3, [x19, #312]
  46545c:	mov	w1, w21
  465460:	ldr	x2, [x20, #8]
  465464:	add	w3, w3, #0x1
  465468:	str	w3, [x19, #312]
  46546c:	mov	x0, x19
  465470:	mov	w21, #0x29                  	// #41
  465474:	mov	x22, #0x0                   	// #0
  465478:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46547c:	ldr	w0, [x19, #312]
  465480:	ldr	x1, [x19, #256]
  465484:	sub	w0, w0, #0x1
  465488:	str	w0, [x19, #312]
  46548c:	b	4654b4 <_obstack_memory_used@@Base+0x8b8c>
  465490:	mov	x0, x1
  465494:	add	x1, x1, #0x1
  465498:	str	x1, [x19, #256]
  46549c:	cmp	x22, #0x1
  4654a0:	strb	w21, [x19, x0]
  4654a4:	strb	w21, [x19, #264]
  4654a8:	mov	w21, #0x23                  	// #35
  4654ac:	b.eq	4654e4 <_obstack_memory_used@@Base+0x8bbc>  // b.none
  4654b0:	mov	x22, #0x1                   	// #1
  4654b4:	cmp	x1, #0xff
  4654b8:	b.ne	465490 <_obstack_memory_used@@Base+0x8b68>  // b.any
  4654bc:	ldp	x3, x2, [x19, #272]
  4654c0:	strb	wzr, [x19, #255]
  4654c4:	mov	x0, x19
  4654c8:	blr	x3
  4654cc:	ldr	x2, [x19, #320]
  4654d0:	mov	x1, #0x1                   	// #1
  4654d4:	mov	x0, #0x0                   	// #0
  4654d8:	add	x2, x2, x1
  4654dc:	str	x2, [x19, #320]
  4654e0:	b	465498 <_obstack_memory_used@@Base+0x8b70>
  4654e4:	ldr	w2, [x20, #16]
  4654e8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4654ec:	add	x1, x1, #0x9e0
  4654f0:	add	x20, sp, #0x60
  4654f4:	add	w2, w2, #0x1
  4654f8:	mov	x0, x20
  4654fc:	bl	402310 <sprintf@plt>
  465500:	mov	x0, x20
  465504:	bl	402270 <strlen@plt>
  465508:	ldr	x1, [x19, #256]
  46550c:	cbz	x0, 46556c <_obstack_memory_used@@Base+0x8c44>
  465510:	add	x23, x20, x0
  465514:	b	465538 <_obstack_memory_used@@Base+0x8c10>
  465518:	mov	x0, x1
  46551c:	add	x1, x1, #0x1
  465520:	str	x1, [x19, #256]
  465524:	add	x20, x20, #0x1
  465528:	strb	w21, [x19, x0]
  46552c:	cmp	x23, x20
  465530:	strb	w21, [x19, #264]
  465534:	b.eq	46556c <_obstack_memory_used@@Base+0x8c44>  // b.none
  465538:	ldrb	w21, [x20]
  46553c:	cmp	x1, #0xff
  465540:	b.ne	465518 <_obstack_memory_used@@Base+0x8bf0>  // b.any
  465544:	ldp	x3, x2, [x19, #272]
  465548:	strb	wzr, [x19, #255]
  46554c:	mov	x0, x19
  465550:	blr	x3
  465554:	ldr	x2, [x19, #320]
  465558:	mov	x1, #0x1                   	// #1
  46555c:	mov	x0, #0x0                   	// #0
  465560:	add	x2, x2, x1
  465564:	str	x2, [x19, #320]
  465568:	b	465520 <_obstack_memory_used@@Base+0x8bf8>
  46556c:	cmp	x1, #0xff
  465570:	b.eq	465dd0 <_obstack_memory_used@@Base+0x94a8>  // b.none
  465574:	add	x22, x1, #0x1
  465578:	str	x22, [x19, #256]
  46557c:	mov	w0, #0x7d                  	// #125
  465580:	strb	w0, [x19, x1]
  465584:	strb	w0, [x19, #264]
  465588:	ldp	x21, x22, [sp, #32]
  46558c:	ldp	x23, x24, [sp, #48]
  465590:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465594:	ldr	x2, [x20, #8]
  465598:	mov	w1, w21
  46559c:	mov	x0, x19
  4655a0:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4655a4:	ldr	x1, [x19, #256]
  4655a8:	add	x0, x1, #0x1
  4655ac:	cmp	x1, #0xff
  4655b0:	b.ne	4655d8 <_obstack_memory_used@@Base+0x8cb0>  // b.any
  4655b4:	ldp	x3, x2, [x19, #272]
  4655b8:	strb	wzr, [x19, #255]
  4655bc:	mov	x0, x19
  4655c0:	blr	x3
  4655c4:	ldr	x2, [x19, #320]
  4655c8:	mov	x0, #0x1                   	// #1
  4655cc:	mov	x1, #0x0                   	// #0
  4655d0:	add	x2, x2, x0
  4655d4:	str	x2, [x19, #320]
  4655d8:	str	x0, [x19, #256]
  4655dc:	mov	w0, #0x29                  	// #41
  4655e0:	strb	w0, [x19, x1]
  4655e4:	strb	w0, [x19, #264]
  4655e8:	ldp	x21, x22, [sp, #32]
  4655ec:	ldp	x23, x24, [sp, #48]
  4655f0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4655f4:	ldr	x2, [x20, #8]
  4655f8:	mov	w1, w21
  4655fc:	mov	x0, x19
  465600:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465604:	ldp	x21, x22, [sp, #32]
  465608:	ldp	x23, x24, [sp, #48]
  46560c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465610:	ldr	x2, [x20, #8]
  465614:	mov	w1, w21
  465618:	mov	x0, x19
  46561c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465620:	ldp	x21, x22, [sp, #32]
  465624:	ldp	x23, x24, [sp, #48]
  465628:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46562c:	ldr	x2, [x20, #8]
  465630:	mov	w1, w21
  465634:	mov	x0, x19
  465638:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46563c:	add	x22, x22, #0xab8
  465640:	mov	w23, #0x2d                  	// #45
  465644:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465648:	add	x24, x22, #0x4
  46564c:	ldr	x1, [x19, #256]
  465650:	b	465678 <_obstack_memory_used@@Base+0x8d50>
  465654:	mov	x0, x1
  465658:	add	x1, x1, #0x1
  46565c:	str	x1, [x19, #256]
  465660:	add	x22, x22, #0x1
  465664:	strb	w23, [x19, x0]
  465668:	cmp	x24, x22
  46566c:	strb	w23, [x19, #264]
  465670:	b.eq	4656e0 <_obstack_memory_used@@Base+0x8db8>  // b.none
  465674:	ldrb	w23, [x22]
  465678:	cmp	x1, #0xff
  46567c:	b.ne	465654 <_obstack_memory_used@@Base+0x8d2c>  // b.any
  465680:	ldp	x3, x2, [x19, #272]
  465684:	strb	wzr, [x19, #255]
  465688:	mov	x0, x19
  46568c:	blr	x3
  465690:	ldr	x2, [x19, #320]
  465694:	mov	x1, #0x1                   	// #1
  465698:	mov	x0, #0x0                   	// #0
  46569c:	add	x2, x2, x1
  4656a0:	str	x2, [x19, #320]
  4656a4:	b	46565c <_obstack_memory_used@@Base+0x8d34>
  4656a8:	ldr	x2, [x20, #8]
  4656ac:	mov	w1, w21
  4656b0:	mov	x0, x19
  4656b4:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4656b8:	ldp	x21, x22, [sp, #32]
  4656bc:	ldp	x23, x24, [sp, #48]
  4656c0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4656c4:	ldr	x2, [x20, #8]
  4656c8:	mov	w1, w21
  4656cc:	mov	x0, x19
  4656d0:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4656d4:	ldp	x21, x22, [sp, #32]
  4656d8:	ldp	x23, x24, [sp, #48]
  4656dc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4656e0:	ldr	x2, [x20, #16]
  4656e4:	mov	w1, w21
  4656e8:	mov	x0, x19
  4656ec:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4656f0:	ldp	x21, x22, [sp, #32]
  4656f4:	ldp	x23, x24, [sp, #48]
  4656f8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4656fc:	ldr	x2, [x20, #8]
  465700:	mov	w1, w21
  465704:	mov	x0, x19
  465708:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46570c:	ldp	x21, x22, [sp, #32]
  465710:	ldp	x23, x24, [sp, #48]
  465714:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465718:	ldr	x2, [x20, #8]
  46571c:	mov	w1, w21
  465720:	mov	x0, x19
  465724:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465728:	ldp	x21, x22, [sp, #32]
  46572c:	ldp	x23, x24, [sp, #48]
  465730:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465734:	ldr	x2, [x20, #8]
  465738:	mov	w1, w21
  46573c:	mov	x0, x19
  465740:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465744:	ldp	x21, x22, [sp, #32]
  465748:	ldp	x23, x24, [sp, #48]
  46574c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465750:	ldr	x2, [x20, #8]
  465754:	mov	w1, w21
  465758:	mov	x0, x19
  46575c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465760:	ldp	x21, x22, [sp, #32]
  465764:	ldp	x23, x24, [sp, #48]
  465768:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46576c:	ldr	x2, [x20, #8]
  465770:	mov	w1, w21
  465774:	mov	x0, x19
  465778:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46577c:	ldp	x21, x22, [sp, #32]
  465780:	ldp	x23, x24, [sp, #48]
  465784:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465788:	ldr	x1, [x19, #368]
  46578c:	cbz	x1, 4657a0 <_obstack_memory_used@@Base+0x8e78>
  465790:	ldr	x2, [x19, #288]
  465794:	add	x0, sp, #0x60
  465798:	stp	x2, x1, [sp, #96]
  46579c:	str	x0, [x19, #288]
  4657a0:	ldr	x2, [x20, #8]
  4657a4:	ldr	w0, [x2]
  4657a8:	cmp	w0, #0x4
  4657ac:	b.eq	466098 <_obstack_memory_used@@Base+0x9770>  // b.none
  4657b0:	mov	x0, x19
  4657b4:	mov	w1, w21
  4657b8:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4657bc:	ldr	x0, [x19, #368]
  4657c0:	cbz	x0, 4664b4 <_obstack_memory_used@@Base+0x9b8c>
  4657c4:	ldr	x0, [sp, #96]
  4657c8:	ldp	x21, x22, [sp, #32]
  4657cc:	ldp	x23, x24, [sp, #48]
  4657d0:	str	x0, [x19, #288]
  4657d4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4657d8:	ldr	x2, [x20, #8]
  4657dc:	mov	w1, w21
  4657e0:	mov	x0, x19
  4657e4:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4657e8:	ldp	x21, x22, [sp, #32]
  4657ec:	ldp	x23, x24, [sp, #48]
  4657f0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4657f4:	mov	x2, x20
  4657f8:	mov	w1, w21
  4657fc:	mov	x0, x19
  465800:	bl	467218 <_obstack_memory_used@@Base+0xa8f0>
  465804:	b	46344c <_obstack_memory_used@@Base+0x6b24>
  465808:	ldp	x21, x22, [sp, #32]
  46580c:	ldp	x23, x24, [sp, #48]
  465810:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465814:	ldp	x21, x22, [sp, #32]
  465818:	ldp	x23, x24, [sp, #48]
  46581c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465820:	ldp	x21, x22, [sp, #32]
  465824:	ldp	x23, x24, [sp, #48]
  465828:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46582c:	ldp	x21, x22, [sp, #32]
  465830:	ldp	x23, x24, [sp, #48]
  465834:	ldp	x25, x26, [sp, #64]
  465838:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46583c:	ldr	x2, [x20, #16]
  465840:	mov	x0, x19
  465844:	mov	w1, w21
  465848:	ldr	x20, [x19, #320]
  46584c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465850:	ldr	x0, [x19, #320]
  465854:	cmp	x0, x20
  465858:	b.eq	466450 <_obstack_memory_used@@Base+0x9b28>  // b.none
  46585c:	ldp	x21, x22, [sp, #32]
  465860:	ldp	x23, x24, [sp, #48]
  465864:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465868:	ldr	x25, [x25, #8]
  46586c:	cbz	x25, 466744 <_obstack_memory_used@@Base+0x9e1c>
  465870:	add	x3, x3, #0x20
  465874:	cmp	w24, #0x4
  465878:	b.eq	466418 <_obstack_memory_used@@Base+0x9af0>  // b.none
  46587c:	mov	x0, x4
  465880:	b	4646b4 <_obstack_memory_used@@Base+0x7d8c>
  465884:	ldr	x25, [x20, #8]
  465888:	cbnz	w24, 4641f4 <_obstack_memory_used@@Base+0x78cc>
  46588c:	ldp	x21, x22, [sp, #32]
  465890:	ldp	x23, x24, [sp, #48]
  465894:	ldp	x25, x26, [sp, #64]
  465898:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46589c:	mov	x20, x0
  4658a0:	b	4635a8 <_obstack_memory_used@@Base+0x6c80>
  4658a4:	add	x21, x20, x22
  4658a8:	cmp	x21, x20
  4658ac:	b.ls	466cf4 <_obstack_memory_used@@Base+0xa3cc>  // b.plast
  4658b0:	mov	w23, #0x5f                  	// #95
  4658b4:	b	465904 <_obstack_memory_used@@Base+0x8fdc>
  4658b8:	ldr	x1, [x19, #256]
  4658bc:	add	x0, x1, #0x1
  4658c0:	cmp	x1, #0xff
  4658c4:	b.ne	4658ec <_obstack_memory_used@@Base+0x8fc4>  // b.any
  4658c8:	ldp	x3, x2, [x19, #272]
  4658cc:	strb	wzr, [x19, #255]
  4658d0:	mov	x0, x19
  4658d4:	blr	x3
  4658d8:	ldr	x2, [x19, #320]
  4658dc:	mov	x0, #0x1                   	// #1
  4658e0:	mov	x1, #0x0                   	// #0
  4658e4:	add	x2, x2, x0
  4658e8:	str	x2, [x19, #320]
  4658ec:	str	x0, [x19, #256]
  4658f0:	strb	w22, [x19, x1]
  4658f4:	strb	w22, [x19, #264]
  4658f8:	add	x20, x20, #0x1
  4658fc:	cmp	x21, x20
  465900:	b.ls	465cb8 <_obstack_memory_used@@Base+0x9390>  // b.plast
  465904:	sub	x0, x21, x20
  465908:	ldrb	w22, [x20]
  46590c:	cmp	x0, #0x3
  465910:	b.le	4658b8 <_obstack_memory_used@@Base+0x8f90>
  465914:	cmp	w22, #0x5f
  465918:	b.ne	4658b8 <_obstack_memory_used@@Base+0x8f90>  // b.any
  46591c:	ldrb	w0, [x20, #1]
  465920:	cmp	w0, #0x5f
  465924:	b.ne	4658b8 <_obstack_memory_used@@Base+0x8f90>  // b.any
  465928:	ldrb	w0, [x20, #2]
  46592c:	cmp	w0, #0x55
  465930:	b.ne	4658b8 <_obstack_memory_used@@Base+0x8f90>  // b.any
  465934:	add	x24, x20, #0x3
  465938:	cmp	x21, x24
  46593c:	b.ls	4658b8 <_obstack_memory_used@@Base+0x8f90>  // b.plast
  465940:	mov	x2, #0x0                   	// #0
  465944:	b	465960 <_obstack_memory_used@@Base+0x9038>
  465948:	mov	w0, w1
  46594c:	sxtw	x0, w0
  465950:	add	x24, x24, #0x1
  465954:	add	x2, x0, x2, lsl #4
  465958:	cmp	x21, x24
  46595c:	b.eq	4658b8 <_obstack_memory_used@@Base+0x8f90>  // b.none
  465960:	ldrb	w0, [x24]
  465964:	sub	w1, w0, #0x30
  465968:	and	w3, w1, #0xff
  46596c:	cmp	w3, #0x9
  465970:	b.ls	465948 <_obstack_memory_used@@Base+0x9020>  // b.plast
  465974:	sub	w1, w0, #0x41
  465978:	and	w1, w1, #0xff
  46597c:	cmp	w1, #0x5
  465980:	b.hi	466984 <_obstack_memory_used@@Base+0xa05c>  // b.pmore
  465984:	sub	w0, w0, #0x37
  465988:	b	46594c <_obstack_memory_used@@Base+0x9024>
  46598c:	add	x1, x20, #0x8
  465990:	mov	x0, x19
  465994:	bl	45fa18 <_obstack_memory_used@@Base+0x30f0>
  465998:	mov	x2, x0
  46599c:	cbz	x0, 463400 <_obstack_memory_used@@Base+0x6ad8>
  4659a0:	ldr	w1, [x0]
  4659a4:	cmp	w1, #0x2f
  4659a8:	b.eq	466a00 <_obstack_memory_used@@Base+0xa0d8>  // b.none
  4659ac:	ldr	x20, [x19, #288]
  4659b0:	mov	w1, w21
  4659b4:	mov	x0, x19
  4659b8:	ldr	x3, [x20]
  4659bc:	str	x3, [x19, #288]
  4659c0:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4659c4:	ldp	x21, x22, [sp, #32]
  4659c8:	ldp	x23, x24, [sp, #48]
  4659cc:	str	x20, [x19, #288]
  4659d0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4659d4:	ldr	x2, [x20, #8]
  4659d8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  4659dc:	add	x1, x1, #0x9e0
  4659e0:	add	x20, sp, #0x60
  4659e4:	add	w2, w2, #0x1
  4659e8:	mov	x0, x20
  4659ec:	bl	402310 <sprintf@plt>
  4659f0:	mov	x0, x20
  4659f4:	bl	402270 <strlen@plt>
  4659f8:	cbz	x0, 466dfc <_obstack_memory_used@@Base+0xa4d4>
  4659fc:	add	x22, x20, x0
  465a00:	ldr	x1, [x19, #256]
  465a04:	b	465a28 <_obstack_memory_used@@Base+0x9100>
  465a08:	mov	x0, x1
  465a0c:	add	x1, x1, #0x1
  465a10:	str	x1, [x19, #256]
  465a14:	add	x20, x20, #0x1
  465a18:	strb	w21, [x19, x0]
  465a1c:	cmp	x22, x20
  465a20:	strb	w21, [x19, #264]
  465a24:	b.eq	465cc4 <_obstack_memory_used@@Base+0x939c>  // b.none
  465a28:	ldrb	w21, [x20]
  465a2c:	cmp	x1, #0xff
  465a30:	b.ne	465a08 <_obstack_memory_used@@Base+0x90e0>  // b.any
  465a34:	ldp	x3, x2, [x19, #272]
  465a38:	strb	wzr, [x19, #255]
  465a3c:	mov	x0, x19
  465a40:	blr	x3
  465a44:	ldr	x2, [x19, #320]
  465a48:	mov	x1, #0x1                   	// #1
  465a4c:	mov	x0, #0x0                   	// #0
  465a50:	add	x2, x2, x1
  465a54:	str	x2, [x19, #320]
  465a58:	b	465a10 <_obstack_memory_used@@Base+0x90e8>
  465a5c:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  465a60:	add	x20, x20, #0xb40
  465a64:	add	x22, x20, #0x4
  465a68:	mov	w21, #0x74                  	// #116
  465a6c:	b	465a94 <_obstack_memory_used@@Base+0x916c>
  465a70:	mov	x0, x1
  465a74:	add	x1, x1, #0x1
  465a78:	str	x1, [x19, #256]
  465a7c:	add	x20, x20, #0x1
  465a80:	strb	w21, [x19, x0]
  465a84:	cmp	x20, x22
  465a88:	strb	w21, [x19, #264]
  465a8c:	b.eq	465ac4 <_obstack_memory_used@@Base+0x919c>  // b.none
  465a90:	ldrb	w21, [x20]
  465a94:	cmp	x1, #0xff
  465a98:	b.ne	465a70 <_obstack_memory_used@@Base+0x9148>  // b.any
  465a9c:	ldp	x3, x2, [x19, #272]
  465aa0:	strb	wzr, [x19, #255]
  465aa4:	mov	x0, x19
  465aa8:	blr	x3
  465aac:	ldr	x2, [x19, #320]
  465ab0:	mov	x1, #0x1                   	// #1
  465ab4:	mov	x0, #0x0                   	// #0
  465ab8:	add	x2, x2, x1
  465abc:	str	x2, [x19, #320]
  465ac0:	b	465a78 <_obstack_memory_used@@Base+0x9150>
  465ac4:	ldp	x21, x22, [sp, #32]
  465ac8:	ldp	x23, x24, [sp, #48]
  465acc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465ad0:	mov	w2, w23
  465ad4:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  465ad8:	add	x1, x1, #0x9e0
  465adc:	add	x20, sp, #0x60
  465ae0:	mov	x0, x20
  465ae4:	bl	402310 <sprintf@plt>
  465ae8:	mov	x0, x20
  465aec:	bl	402270 <strlen@plt>
  465af0:	ldr	x1, [x19, #256]
  465af4:	cbz	x0, 465b54 <_obstack_memory_used@@Base+0x922c>
  465af8:	add	x22, x20, x0
  465afc:	b	465b20 <_obstack_memory_used@@Base+0x91f8>
  465b00:	mov	x0, x1
  465b04:	add	x1, x1, #0x1
  465b08:	str	x1, [x19, #256]
  465b0c:	add	x20, x20, #0x1
  465b10:	strb	w21, [x19, x0]
  465b14:	cmp	x20, x22
  465b18:	strb	w21, [x19, #264]
  465b1c:	b.eq	465b54 <_obstack_memory_used@@Base+0x922c>  // b.none
  465b20:	ldrb	w21, [x20]
  465b24:	cmp	x1, #0xff
  465b28:	b.ne	465b00 <_obstack_memory_used@@Base+0x91d8>  // b.any
  465b2c:	ldp	x3, x2, [x19, #272]
  465b30:	strb	wzr, [x19, #255]
  465b34:	mov	x0, x19
  465b38:	blr	x3
  465b3c:	ldr	x2, [x19, #320]
  465b40:	mov	x1, #0x1                   	// #1
  465b44:	mov	x0, #0x0                   	// #0
  465b48:	add	x2, x2, x1
  465b4c:	str	x2, [x19, #320]
  465b50:	b	465b08 <_obstack_memory_used@@Base+0x91e0>
  465b54:	add	x0, x1, #0x1
  465b58:	cmp	x1, #0xff
  465b5c:	b.ne	465b84 <_obstack_memory_used@@Base+0x925c>  // b.any
  465b60:	ldp	x3, x2, [x19, #272]
  465b64:	strb	wzr, [x19, #255]
  465b68:	mov	x0, x19
  465b6c:	blr	x3
  465b70:	ldr	x2, [x19, #320]
  465b74:	mov	x0, #0x1                   	// #1
  465b78:	mov	x1, #0x0                   	// #0
  465b7c:	add	x2, x2, x0
  465b80:	str	x2, [x19, #320]
  465b84:	str	x0, [x19, #256]
  465b88:	mov	w0, #0x7d                  	// #125
  465b8c:	strb	w0, [x19, x1]
  465b90:	strb	w0, [x19, #264]
  465b94:	ldp	x21, x22, [sp, #32]
  465b98:	ldp	x23, x24, [sp, #48]
  465b9c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465ba0:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  465ba4:	add	x20, x20, #0xaf0
  465ba8:	add	x22, x20, #0x6
  465bac:	mov	w21, #0x5f                  	// #95
  465bb0:	b	465bd8 <_obstack_memory_used@@Base+0x92b0>
  465bb4:	mov	x0, x1
  465bb8:	add	x1, x1, #0x1
  465bbc:	str	x1, [x19, #256]
  465bc0:	add	x20, x20, #0x1
  465bc4:	strb	w21, [x19, x0]
  465bc8:	cmp	x20, x22
  465bcc:	strb	w21, [x19, #264]
  465bd0:	b.eq	465c08 <_obstack_memory_used@@Base+0x92e0>  // b.none
  465bd4:	ldrb	w21, [x20]
  465bd8:	cmp	x1, #0xff
  465bdc:	b.ne	465bb4 <_obstack_memory_used@@Base+0x928c>  // b.any
  465be0:	ldp	x3, x2, [x19, #272]
  465be4:	strb	wzr, [x19, #255]
  465be8:	mov	x0, x19
  465bec:	blr	x3
  465bf0:	ldr	x2, [x19, #320]
  465bf4:	mov	x1, #0x1                   	// #1
  465bf8:	mov	x0, #0x0                   	// #0
  465bfc:	add	x2, x2, x1
  465c00:	str	x2, [x19, #320]
  465c04:	b	465bbc <_obstack_memory_used@@Base+0x9294>
  465c08:	ldp	x21, x22, [sp, #32]
  465c0c:	ldp	x23, x24, [sp, #48]
  465c10:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465c14:	ldp	x21, x22, [sp, #32]
  465c18:	ldp	x23, x24, [sp, #48]
  465c1c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465c20:	ldrsw	x22, [x0, #24]
  465c24:	ldr	x20, [x0, #16]
  465c28:	cbz	x22, 466cdc <_obstack_memory_used@@Base+0xa3b4>
  465c2c:	add	x22, x20, x22
  465c30:	ldr	x1, [x19, #256]
  465c34:	b	465c58 <_obstack_memory_used@@Base+0x9330>
  465c38:	mov	x0, x1
  465c3c:	add	x1, x1, #0x1
  465c40:	str	x1, [x19, #256]
  465c44:	add	x20, x20, #0x1
  465c48:	strb	w21, [x19, x0]
  465c4c:	cmp	x20, x22
  465c50:	strb	w21, [x19, #264]
  465c54:	b.eq	465ca0 <_obstack_memory_used@@Base+0x9378>  // b.none
  465c58:	ldrb	w21, [x20]
  465c5c:	cmp	x1, #0xff
  465c60:	b.ne	465c38 <_obstack_memory_used@@Base+0x9310>  // b.any
  465c64:	ldp	x3, x2, [x19, #272]
  465c68:	strb	wzr, [x19, #255]
  465c6c:	mov	x0, x19
  465c70:	blr	x3
  465c74:	ldr	x2, [x19, #320]
  465c78:	mov	x1, #0x1                   	// #1
  465c7c:	mov	x0, #0x0                   	// #0
  465c80:	add	x2, x2, x1
  465c84:	str	x2, [x19, #320]
  465c88:	b	465c40 <_obstack_memory_used@@Base+0x9318>
  465c8c:	ldr	x1, [x19, #256]
  465c90:	b	463ea8 <_obstack_memory_used@@Base+0x7580>
  465c94:	ldp	x21, x22, [sp, #32]
  465c98:	ldp	x23, x24, [sp, #48]
  465c9c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465ca0:	ldp	x21, x22, [sp, #32]
  465ca4:	ldp	x23, x24, [sp, #48]
  465ca8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465cac:	ldp	x21, x22, [sp, #32]
  465cb0:	ldp	x23, x24, [sp, #48]
  465cb4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465cb8:	ldp	x21, x22, [sp, #32]
  465cbc:	ldp	x23, x24, [sp, #48]
  465cc0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465cc4:	ldp	x21, x22, [sp, #32]
  465cc8:	ldp	x23, x24, [sp, #48]
  465ccc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465cd0:	ldr	x1, [x2, #8]
  465cd4:	ldr	w22, [x1, #28]
  465cd8:	cmp	w22, #0x6
  465cdc:	b.hi	465d74 <_obstack_memory_used@@Base+0x944c>  // b.pmore
  465ce0:	cbz	w22, 4634c4 <_obstack_memory_used@@Base+0x6b9c>
  465ce4:	ldr	x1, [x20, #16]
  465ce8:	ldr	w1, [x1]
  465cec:	cbnz	w1, 4634c4 <_obstack_memory_used@@Base+0x6b9c>
  465cf0:	cmp	w0, #0x3e
  465cf4:	b.eq	467078 <_obstack_memory_used@@Base+0xa750>  // b.none
  465cf8:	ldr	x2, [x20, #16]
  465cfc:	mov	w1, w21
  465d00:	mov	x0, x19
  465d04:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465d08:	cmp	w22, #0x4
  465d0c:	b.eq	467058 <_obstack_memory_used@@Base+0xa730>  // b.none
  465d10:	b.hi	466f1c <_obstack_memory_used@@Base+0xa5f4>  // b.pmore
  465d14:	cmp	w22, #0x2
  465d18:	b.eq	467008 <_obstack_memory_used@@Base+0xa6e0>  // b.none
  465d1c:	cmp	w22, #0x3
  465d20:	b.ne	467150 <_obstack_memory_used@@Base+0xa828>  // b.any
  465d24:	ldr	x1, [x19, #256]
  465d28:	cmp	x1, #0xff
  465d2c:	b.ne	465d54 <_obstack_memory_used@@Base+0x942c>  // b.any
  465d30:	ldp	x3, x2, [x19, #272]
  465d34:	strb	wzr, [x19, #255]
  465d38:	mov	x0, x19
  465d3c:	blr	x3
  465d40:	str	xzr, [x19, #256]
  465d44:	ldr	x0, [x19, #320]
  465d48:	mov	x1, #0x0                   	// #0
  465d4c:	add	x0, x0, #0x1
  465d50:	str	x0, [x19, #320]
  465d54:	add	x0, x1, #0x1
  465d58:	str	x0, [x19, #256]
  465d5c:	mov	w0, #0x6c                  	// #108
  465d60:	strb	w0, [x19, x1]
  465d64:	strb	w0, [x19, #264]
  465d68:	ldp	x21, x22, [sp, #32]
  465d6c:	ldp	x23, x24, [sp, #48]
  465d70:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465d74:	cmp	w22, #0x7
  465d78:	b.ne	4634c4 <_obstack_memory_used@@Base+0x6b9c>  // b.any
  465d7c:	ldr	x1, [x20, #16]
  465d80:	ldr	w3, [x1]
  465d84:	cbnz	w3, 4634c4 <_obstack_memory_used@@Base+0x6b9c>
  465d88:	ldr	w3, [x1, #16]
  465d8c:	cmp	w0, #0x3d
  465d90:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  465d94:	b.ne	4634c4 <_obstack_memory_used@@Base+0x6b9c>  // b.any
  465d98:	ldr	x0, [x1, #8]
  465d9c:	ldrb	w0, [x0]
  465da0:	cmp	w0, #0x30
  465da4:	b.eq	46715c <_obstack_memory_used@@Base+0xa834>  // b.none
  465da8:	cmp	w0, #0x31
  465dac:	b.ne	4634c4 <_obstack_memory_used@@Base+0x6b9c>  // b.any
  465db0:	mov	x0, x19
  465db4:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  465db8:	mov	x2, #0x4                   	// #4
  465dbc:	add	x1, x1, #0x170
  465dc0:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  465dc4:	ldp	x21, x22, [sp, #32]
  465dc8:	ldp	x23, x24, [sp, #48]
  465dcc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465dd0:	ldp	x3, x2, [x19, #272]
  465dd4:	strb	wzr, [x19, #255]
  465dd8:	mov	x0, x19
  465ddc:	blr	x3
  465de0:	ldr	x0, [x19, #320]
  465de4:	mov	x1, #0x0                   	// #0
  465de8:	add	x0, x0, #0x1
  465dec:	str	x0, [x19, #320]
  465df0:	b	465578 <_obstack_memory_used@@Base+0x8c50>
  465df4:	ldr	x0, [x22, #8]
  465df8:	ldr	x23, [x0]
  465dfc:	ldrb	w0, [x23]
  465e00:	subs	w1, w0, #0x61
  465e04:	b.ne	465e18 <_obstack_memory_used@@Base+0x94f0>  // b.any
  465e08:	ldrb	w1, [x23, #1]
  465e0c:	subs	w1, w1, #0x64
  465e10:	b.ne	465e18 <_obstack_memory_used@@Base+0x94f0>  // b.any
  465e14:	ldrb	w1, [x23, #2]
  465e18:	ldr	w2, [x20]
  465e1c:	cbnz	w1, 465e28 <_obstack_memory_used@@Base+0x9500>
  465e20:	cmp	w2, #0x3
  465e24:	b.eq	466e20 <_obstack_memory_used@@Base+0xa4f8>  // b.none
  465e28:	cmp	w2, #0x39
  465e2c:	b.eq	466ec8 <_obstack_memory_used@@Base+0xa5a0>  // b.none
  465e30:	cmp	w0, #0x73
  465e34:	b.ne	465f04 <_obstack_memory_used@@Base+0x95dc>  // b.any
  465e38:	ldrb	w1, [x23, #1]
  465e3c:	cmp	w1, #0x5a
  465e40:	b.ne	465f50 <_obstack_memory_used@@Base+0x9628>  // b.any
  465e44:	ldrb	w3, [x23, #2]
  465e48:	cbnz	w3, 465f50 <_obstack_memory_used@@Base+0x9628>
  465e4c:	mov	x1, x20
  465e50:	mov	x0, x19
  465e54:	bl	45fa48 <_obstack_memory_used@@Base+0x3120>
  465e58:	cbnz	x0, 465e74 <_obstack_memory_used@@Base+0x954c>
  465e5c:	b	465e80 <_obstack_memory_used@@Base+0x9558>
  465e60:	ldr	x1, [x0, #8]
  465e64:	cbz	x1, 465e80 <_obstack_memory_used@@Base+0x9558>
  465e68:	ldr	x0, [x0, #16]
  465e6c:	add	w3, w3, #0x1
  465e70:	cbz	x0, 465e80 <_obstack_memory_used@@Base+0x9558>
  465e74:	ldr	w1, [x0]
  465e78:	cmp	w1, #0x2f
  465e7c:	b.eq	465e60 <_obstack_memory_used@@Base+0x9538>  // b.none
  465e80:	mov	w2, w3
  465e84:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  465e88:	add	x1, x1, #0x9e0
  465e8c:	add	x20, sp, #0x60
  465e90:	mov	x0, x20
  465e94:	bl	402310 <sprintf@plt>
  465e98:	mov	x0, x20
  465e9c:	bl	402270 <strlen@plt>
  465ea0:	cbz	x0, 466fd4 <_obstack_memory_used@@Base+0xa6ac>
  465ea4:	add	x22, x20, x0
  465ea8:	ldr	x1, [x19, #256]
  465eac:	b	465ed0 <_obstack_memory_used@@Base+0x95a8>
  465eb0:	mov	x0, x1
  465eb4:	add	x1, x1, #0x1
  465eb8:	str	x1, [x19, #256]
  465ebc:	add	x20, x20, #0x1
  465ec0:	strb	w21, [x19, x0]
  465ec4:	cmp	x20, x22
  465ec8:	strb	w21, [x19, #264]
  465ecc:	b.eq	466dd8 <_obstack_memory_used@@Base+0xa4b0>  // b.none
  465ed0:	ldrb	w21, [x20]
  465ed4:	cmp	x1, #0xff
  465ed8:	b.ne	465eb0 <_obstack_memory_used@@Base+0x9588>  // b.any
  465edc:	ldp	x3, x2, [x19, #272]
  465ee0:	strb	wzr, [x19, #255]
  465ee4:	mov	x0, x19
  465ee8:	blr	x3
  465eec:	ldr	x2, [x19, #320]
  465ef0:	mov	x1, #0x1                   	// #1
  465ef4:	mov	x0, #0x0                   	// #0
  465ef8:	add	x2, x2, x1
  465efc:	str	x2, [x19, #320]
  465f00:	b	465eb8 <_obstack_memory_used@@Base+0x9590>
  465f04:	mov	x0, x19
  465f08:	mov	x2, x22
  465f0c:	mov	w1, w21
  465f10:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  465f14:	ldrb	w0, [x23]
  465f18:	cmp	w0, #0x67
  465f1c:	b.ne	465fe0 <_obstack_memory_used@@Base+0x96b8>  // b.any
  465f20:	ldrb	w1, [x23, #1]
  465f24:	cmp	w1, #0x73
  465f28:	b.ne	465fe0 <_obstack_memory_used@@Base+0x96b8>  // b.any
  465f2c:	ldrb	w1, [x23, #2]
  465f30:	cbnz	w1, 465fe0 <_obstack_memory_used@@Base+0x96b8>
  465f34:	mov	w1, w21
  465f38:	mov	x2, x20
  465f3c:	mov	x0, x19
  465f40:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  465f44:	ldp	x21, x22, [sp, #32]
  465f48:	ldp	x23, x24, [sp, #48]
  465f4c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  465f50:	cmp	w0, #0x73
  465f54:	b.ne	465f04 <_obstack_memory_used@@Base+0x95dc>  // b.any
  465f58:	ldrb	w0, [x23, #1]
  465f5c:	cmp	w0, #0x50
  465f60:	b.ne	465f04 <_obstack_memory_used@@Base+0x95dc>  // b.any
  465f64:	ldrb	w0, [x23, #2]
  465f68:	mov	w3, #0x0                   	// #0
  465f6c:	cbz	w0, 465f80 <_obstack_memory_used@@Base+0x9658>
  465f70:	b	465f04 <_obstack_memory_used@@Base+0x95dc>
  465f74:	add	w3, w3, #0x1
  465f78:	ldr	x20, [x20, #16]
  465f7c:	cbz	x20, 466a44 <_obstack_memory_used@@Base+0xa11c>
  465f80:	ldr	w0, [x20]
  465f84:	cmp	w0, #0x2f
  465f88:	b.ne	466a44 <_obstack_memory_used@@Base+0xa11c>  // b.any
  465f8c:	ldr	x0, [x20, #8]
  465f90:	cbz	x0, 466a44 <_obstack_memory_used@@Base+0xa11c>
  465f94:	ldr	w1, [x0]
  465f98:	cmp	w1, #0x4b
  465f9c:	b.ne	465f74 <_obstack_memory_used@@Base+0x964c>  // b.any
  465fa0:	ldr	x1, [x0, #8]
  465fa4:	mov	x0, x19
  465fa8:	bl	45fa48 <_obstack_memory_used@@Base+0x3120>
  465fac:	mov	w1, #0x0                   	// #0
  465fb0:	cbnz	x0, 465fcc <_obstack_memory_used@@Base+0x96a4>
  465fb4:	b	465fd8 <_obstack_memory_used@@Base+0x96b0>
  465fb8:	ldr	x2, [x0, #8]
  465fbc:	cbz	x2, 465fd8 <_obstack_memory_used@@Base+0x96b0>
  465fc0:	ldr	x0, [x0, #16]
  465fc4:	add	w1, w1, #0x1
  465fc8:	cbz	x0, 465fd8 <_obstack_memory_used@@Base+0x96b0>
  465fcc:	ldr	w2, [x0]
  465fd0:	cmp	w2, #0x2f
  465fd4:	b.eq	465fb8 <_obstack_memory_used@@Base+0x9690>  // b.none
  465fd8:	add	w3, w3, w1
  465fdc:	b	465f78 <_obstack_memory_used@@Base+0x9650>
  465fe0:	cmp	w0, #0x73
  465fe4:	b.ne	464f74 <_obstack_memory_used@@Base+0x864c>  // b.any
  465fe8:	ldrb	w0, [x23, #1]
  465fec:	cmp	w0, #0x74
  465ff0:	b.ne	464f74 <_obstack_memory_used@@Base+0x864c>  // b.any
  465ff4:	ldrb	w0, [x23, #2]
  465ff8:	cbnz	w0, 464f74 <_obstack_memory_used@@Base+0x864c>
  465ffc:	ldr	x1, [x19, #256]
  466000:	cmp	x1, #0xff
  466004:	b.ne	466028 <_obstack_memory_used@@Base+0x9700>  // b.any
  466008:	ldp	x3, x2, [x19, #272]
  46600c:	strb	wzr, [x19, #255]
  466010:	mov	x0, x19
  466014:	blr	x3
  466018:	ldr	x0, [x19, #320]
  46601c:	mov	x1, #0x0                   	// #0
  466020:	add	x0, x0, #0x1
  466024:	str	x0, [x19, #320]
  466028:	add	x0, x1, #0x1
  46602c:	str	x0, [x19, #256]
  466030:	mov	w0, #0x28                  	// #40
  466034:	strb	w0, [x19, x1]
  466038:	strb	w0, [x19, #264]
  46603c:	mov	w1, w21
  466040:	mov	x2, x20
  466044:	mov	x0, x19
  466048:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46604c:	ldr	x1, [x19, #256]
  466050:	cmp	x1, #0xff
  466054:	b.ne	466078 <_obstack_memory_used@@Base+0x9750>  // b.any
  466058:	ldp	x3, x2, [x19, #272]
  46605c:	strb	wzr, [x19, #255]
  466060:	mov	x0, x19
  466064:	blr	x3
  466068:	ldr	x0, [x19, #320]
  46606c:	mov	x1, #0x0                   	// #0
  466070:	add	x0, x0, #0x1
  466074:	str	x0, [x19, #320]
  466078:	add	x0, x1, #0x1
  46607c:	str	x0, [x19, #256]
  466080:	mov	w0, #0x29                  	// #41
  466084:	strb	w0, [x19, x1]
  466088:	strb	w0, [x19, #264]
  46608c:	ldp	x21, x22, [sp, #32]
  466090:	ldp	x23, x24, [sp, #48]
  466094:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466098:	ldr	x2, [x2, #8]
  46609c:	mov	x0, x19
  4660a0:	mov	w1, w21
  4660a4:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4660a8:	ldr	x0, [x19, #368]
  4660ac:	cbz	x0, 4660b8 <_obstack_memory_used@@Base+0x9790>
  4660b0:	ldr	x0, [sp, #96]
  4660b4:	str	x0, [x19, #288]
  4660b8:	ldr	x1, [x19, #256]
  4660bc:	ldrb	w2, [x19, #264]
  4660c0:	mov	x0, x1
  4660c4:	cmp	w2, #0x3c
  4660c8:	b.eq	466b20 <_obstack_memory_used@@Base+0xa1f8>  // b.none
  4660cc:	add	x1, x0, #0x1
  4660d0:	cmp	x0, #0xff
  4660d4:	b.ne	466100 <_obstack_memory_used@@Base+0x97d8>  // b.any
  4660d8:	ldp	x3, x2, [x19, #272]
  4660dc:	strb	wzr, [x19, #255]
  4660e0:	mov	x1, x0
  4660e4:	mov	x0, x19
  4660e8:	blr	x3
  4660ec:	ldr	x2, [x19, #320]
  4660f0:	mov	x1, #0x1                   	// #1
  4660f4:	mov	x0, #0x0                   	// #0
  4660f8:	add	x2, x2, x1
  4660fc:	str	x2, [x19, #320]
  466100:	str	x1, [x19, #256]
  466104:	mov	w2, #0x3c                  	// #60
  466108:	strb	w2, [x19, x0]
  46610c:	mov	w1, w21
  466110:	strb	w2, [x19, #264]
  466114:	mov	x0, x19
  466118:	ldr	x2, [x20, #8]
  46611c:	ldr	x2, [x2, #16]
  466120:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  466124:	ldrb	w0, [x19, #264]
  466128:	cmp	w0, #0x3e
  46612c:	b.eq	466b64 <_obstack_memory_used@@Base+0xa23c>  // b.none
  466130:	ldr	x0, [x19, #256]
  466134:	add	x1, x0, #0x1
  466138:	cmp	x0, #0xff
  46613c:	b.ne	466168 <_obstack_memory_used@@Base+0x9840>  // b.any
  466140:	ldp	x3, x2, [x19, #272]
  466144:	strb	wzr, [x19, #255]
  466148:	mov	x1, x0
  46614c:	mov	x0, x19
  466150:	blr	x3
  466154:	ldr	x2, [x19, #320]
  466158:	mov	x1, #0x1                   	// #1
  46615c:	mov	x0, #0x0                   	// #0
  466160:	add	x2, x2, x1
  466164:	str	x2, [x19, #320]
  466168:	str	x1, [x19, #256]
  46616c:	mov	w1, #0x3e                  	// #62
  466170:	strb	w1, [x19, x0]
  466174:	strb	w1, [x19, #264]
  466178:	ldp	x21, x22, [sp, #32]
  46617c:	ldp	x23, x24, [sp, #48]
  466180:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466184:	mov	x2, x20
  466188:	mov	w1, w21
  46618c:	mov	x0, x19
  466190:	bl	467218 <_obstack_memory_used@@Base+0xa8f0>
  466194:	b	463678 <_obstack_memory_used@@Base+0x6d50>
  466198:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46619c:	add	x24, x24, #0xae0
  4661a0:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4661a4:	add	x24, x24, #0x5
  4661a8:	add	x22, x22, #0xae1
  4661ac:	mov	w23, #0x5f                  	// #95
  4661b0:	ldr	x1, [x19, #256]
  4661b4:	b	4661d8 <_obstack_memory_used@@Base+0x98b0>
  4661b8:	mov	x0, x1
  4661bc:	add	x1, x1, #0x1
  4661c0:	str	x1, [x19, #256]
  4661c4:	cmp	x24, x22
  4661c8:	strb	w23, [x19, x0]
  4661cc:	strb	w23, [x19, #264]
  4661d0:	b.eq	463e38 <_obstack_memory_used@@Base+0x7510>  // b.none
  4661d4:	ldrb	w23, [x22], #1
  4661d8:	cmp	x1, #0xff
  4661dc:	b.ne	4661b8 <_obstack_memory_used@@Base+0x9890>  // b.any
  4661e0:	ldp	x3, x2, [x19, #272]
  4661e4:	strb	wzr, [x19, #255]
  4661e8:	mov	x0, x19
  4661ec:	blr	x3
  4661f0:	ldr	x2, [x19, #320]
  4661f4:	mov	x1, #0x1                   	// #1
  4661f8:	mov	x0, #0x0                   	// #0
  4661fc:	add	x2, x2, x1
  466200:	str	x2, [x19, #320]
  466204:	b	4661c0 <_obstack_memory_used@@Base+0x9898>
  466208:	mov	x23, #0x0                   	// #0
  46620c:	mov	w22, #0x3a                  	// #58
  466210:	ldr	x1, [x19, #256]
  466214:	b	466234 <_obstack_memory_used@@Base+0x990c>
  466218:	mov	x0, x1
  46621c:	add	x1, x1, #0x1
  466220:	str	x1, [x19, #256]
  466224:	strb	w22, [x19, x0]
  466228:	strb	w22, [x19, #264]
  46622c:	cbnz	x23, 46361c <_obstack_memory_used@@Base+0x6cf4>
  466230:	mov	x23, #0x1                   	// #1
  466234:	cmp	x1, #0xff
  466238:	b.ne	466218 <_obstack_memory_used@@Base+0x98f0>  // b.any
  46623c:	ldp	x3, x2, [x19, #272]
  466240:	strb	wzr, [x19, #255]
  466244:	mov	x0, x19
  466248:	blr	x3
  46624c:	ldr	x2, [x19, #320]
  466250:	mov	x1, #0x1                   	// #1
  466254:	mov	x0, #0x0                   	// #0
  466258:	add	x2, x2, x1
  46625c:	str	x2, [x19, #320]
  466260:	b	466220 <_obstack_memory_used@@Base+0x98f8>
  466264:	ldr	x1, [x19, #256]
  466268:	cmp	x1, #0xff
  46626c:	b.ne	466290 <_obstack_memory_used@@Base+0x9968>  // b.any
  466270:	ldp	x3, x2, [x19, #272]
  466274:	strb	wzr, [x19, #255]
  466278:	mov	x0, x19
  46627c:	blr	x3
  466280:	ldr	x0, [x19, #320]
  466284:	mov	x1, #0x0                   	// #0
  466288:	add	x0, x0, #0x1
  46628c:	str	x0, [x19, #320]
  466290:	add	x0, x1, #0x1
  466294:	str	x0, [x19, #256]
  466298:	mov	w0, #0x5b                  	// #91
  46629c:	strb	w0, [x19, x1]
  4662a0:	strb	w0, [x19, #264]
  4662a4:	mov	w1, w21
  4662a8:	mov	x0, x19
  4662ac:	ldr	x2, [x20, #16]
  4662b0:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4662b4:	ldr	x1, [x19, #256]
  4662b8:	cmp	x1, #0xff
  4662bc:	b.ne	4662e0 <_obstack_memory_used@@Base+0x99b8>  // b.any
  4662c0:	ldp	x3, x2, [x19, #272]
  4662c4:	strb	wzr, [x19, #255]
  4662c8:	mov	x0, x19
  4662cc:	blr	x3
  4662d0:	ldr	x0, [x19, #320]
  4662d4:	mov	x1, #0x0                   	// #0
  4662d8:	add	x0, x0, #0x1
  4662dc:	str	x0, [x19, #320]
  4662e0:	add	x0, x1, #0x1
  4662e4:	str	x0, [x19, #256]
  4662e8:	mov	w0, #0x5d                  	// #93
  4662ec:	strb	w0, [x19, x1]
  4662f0:	strb	w0, [x19, #264]
  4662f4:	ldp	x21, x22, [sp, #32]
  4662f8:	ldp	x23, x24, [sp, #48]
  4662fc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466300:	ldr	x0, [x19, #256]
  466304:	cmp	x0, #0xff
  466308:	b.ne	466330 <_obstack_memory_used@@Base+0x9a08>  // b.any
  46630c:	ldp	x3, x2, [x19, #272]
  466310:	strb	wzr, [x19, #255]
  466314:	mov	x1, x0
  466318:	mov	x0, x19
  46631c:	blr	x3
  466320:	ldr	x1, [x19, #320]
  466324:	mov	x0, #0x0                   	// #0
  466328:	add	x1, x1, #0x1
  46632c:	str	x1, [x19, #320]
  466330:	add	x1, x0, #0x1
  466334:	str	x1, [x19, #256]
  466338:	mov	w2, #0x20                  	// #32
  46633c:	strb	w2, [x19, x0]
  466340:	strb	w2, [x19, #264]
  466344:	b	464868 <_obstack_memory_used@@Base+0x7f40>
  466348:	ldr	x0, [x19, #256]
  46634c:	cmp	x0, #0xff
  466350:	b.ne	466378 <_obstack_memory_used@@Base+0x9a50>  // b.any
  466354:	ldp	x3, x2, [x19, #272]
  466358:	strb	wzr, [x19, #255]
  46635c:	mov	x1, x0
  466360:	mov	x0, x19
  466364:	blr	x3
  466368:	ldr	x1, [x19, #320]
  46636c:	mov	x0, #0x0                   	// #0
  466370:	add	x1, x1, #0x1
  466374:	str	x1, [x19, #320]
  466378:	add	x1, x0, #0x1
  46637c:	str	x1, [x19, #256]
  466380:	mov	w2, #0x20                  	// #32
  466384:	strb	w2, [x19, x0]
  466388:	strb	w2, [x19, #264]
  46638c:	b	464808 <_obstack_memory_used@@Base+0x7ee0>
  466390:	add	x2, x20, #0x10
  466394:	mov	w1, w22
  466398:	mov	x0, x19
  46639c:	bl	467a18 <_obstack_memory_used@@Base+0xb0f0>
  4663a0:	ldr	x2, [x20, #8]
  4663a4:	cbz	x2, 466bd0 <_obstack_memory_used@@Base+0xa2a8>
  4663a8:	mov	w1, w22
  4663ac:	mov	x0, x19
  4663b0:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4663b4:	ldp	x21, x22, [sp, #32]
  4663b8:	ldp	x23, x24, [sp, #48]
  4663bc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4663c0:	ldp	x3, x2, [x19, #272]
  4663c4:	strb	wzr, [x19, #255]
  4663c8:	mov	x0, x19
  4663cc:	blr	x3
  4663d0:	ldr	x0, [x19, #320]
  4663d4:	mov	w1, #0x29                  	// #41
  4663d8:	strb	w1, [x19]
  4663dc:	strb	w1, [x19, #264]
  4663e0:	mov	x1, #0x1                   	// #1
  4663e4:	add	x0, x0, x1
  4663e8:	str	x1, [x19, #256]
  4663ec:	str	x0, [x19, #320]
  4663f0:	ldr	w0, [x20]
  4663f4:	cmp	w0, #0x3e
  4663f8:	b.ne	463544 <_obstack_memory_used@@Base+0x6c1c>  // b.any
  4663fc:	ldr	x1, [x19, #256]
  466400:	mov	w0, #0x2d                  	// #45
  466404:	add	x2, x1, #0x1
  466408:	str	x2, [x19, #256]
  46640c:	strb	w0, [x19, x1]
  466410:	strb	w0, [x19, #264]
  466414:	b	463544 <_obstack_memory_used@@Base+0x6c1c>
  466418:	ldp	x21, x22, [sp, #32]
  46641c:	ldp	x23, x24, [sp, #48]
  466420:	ldp	x25, x26, [sp, #64]
  466424:	str	x4, [x19, #296]
  466428:	str	w1, [x19, #304]
  46642c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466430:	ldp	x21, x22, [sp, #32]
  466434:	ldp	x23, x24, [sp, #48]
  466438:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46643c:	ldp	x21, x22, [sp, #32]
  466440:	ldp	x23, x24, [sp, #48]
  466444:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466448:	mov	w22, #0x0                   	// #0
  46644c:	b	4635a8 <_obstack_memory_used@@Base+0x6c80>
  466450:	ldr	x0, [x19, #256]
  466454:	cmp	x0, x22
  466458:	b.eq	466c0c <_obstack_memory_used@@Base+0xa2e4>  // b.none
  46645c:	ldp	x21, x22, [sp, #32]
  466460:	ldp	x23, x24, [sp, #48]
  466464:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466468:	ldr	x2, [x20, #8]
  46646c:	mov	w1, w21
  466470:	mov	x0, x19
  466474:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  466478:	ldp	x21, x22, [sp, #32]
  46647c:	ldp	x23, x24, [sp, #48]
  466480:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466484:	cmp	x3, #0xff
  466488:	b.ne	4663fc <_obstack_memory_used@@Base+0x9ad4>  // b.any
  46648c:	ldp	x4, x2, [x19, #272]
  466490:	strb	wzr, [x19, #255]
  466494:	mov	x0, x19
  466498:	mov	x1, x3
  46649c:	blr	x4
  4664a0:	str	xzr, [x19, #256]
  4664a4:	ldr	x0, [x19, #320]
  4664a8:	add	x0, x0, #0x1
  4664ac:	str	x0, [x19, #320]
  4664b0:	b	4663fc <_obstack_memory_used@@Base+0x9ad4>
  4664b4:	ldp	x21, x22, [sp, #32]
  4664b8:	ldp	x23, x24, [sp, #48]
  4664bc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4664c0:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4664c4:	add	x24, x24, #0xa78
  4664c8:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4664cc:	add	x24, x24, #0xd
  4664d0:	add	x22, x22, #0xa79
  4664d4:	mov	w20, #0x7b                  	// #123
  4664d8:	ldr	x1, [x19, #256]
  4664dc:	b	466500 <_obstack_memory_used@@Base+0x9bd8>
  4664e0:	mov	x0, x1
  4664e4:	add	x1, x1, #0x1
  4664e8:	str	x1, [x19, #256]
  4664ec:	cmp	x24, x22
  4664f0:	strb	w20, [x19, x0]
  4664f4:	strb	w20, [x19, #264]
  4664f8:	b.eq	466530 <_obstack_memory_used@@Base+0x9c08>  // b.none
  4664fc:	ldrb	w20, [x22], #1
  466500:	cmp	x1, #0xff
  466504:	b.ne	4664e0 <_obstack_memory_used@@Base+0x9bb8>  // b.any
  466508:	ldp	x3, x2, [x19, #272]
  46650c:	strb	wzr, [x19, #255]
  466510:	mov	x0, x19
  466514:	blr	x3
  466518:	ldr	x2, [x19, #320]
  46651c:	mov	x1, #0x1                   	// #1
  466520:	mov	x0, #0x0                   	// #0
  466524:	add	x2, x2, x1
  466528:	str	x2, [x19, #320]
  46652c:	b	4664e8 <_obstack_memory_used@@Base+0x9bc0>
  466530:	ldr	w2, [x23, #16]
  466534:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  466538:	add	x1, x1, #0x9e0
  46653c:	add	x20, sp, #0x60
  466540:	add	w2, w2, #0x1
  466544:	mov	x0, x20
  466548:	bl	402310 <sprintf@plt>
  46654c:	mov	x0, x20
  466550:	bl	402270 <strlen@plt>
  466554:	ldr	x1, [x19, #256]
  466558:	cbz	x0, 4665b8 <_obstack_memory_used@@Base+0x9c90>
  46655c:	add	x24, x20, x0
  466560:	b	466584 <_obstack_memory_used@@Base+0x9c5c>
  466564:	mov	x0, x1
  466568:	add	x1, x1, #0x1
  46656c:	str	x1, [x19, #256]
  466570:	add	x20, x20, #0x1
  466574:	strb	w22, [x19, x0]
  466578:	cmp	x24, x20
  46657c:	strb	w22, [x19, #264]
  466580:	b.eq	4665b8 <_obstack_memory_used@@Base+0x9c90>  // b.none
  466584:	ldrb	w22, [x20]
  466588:	cmp	x1, #0xff
  46658c:	b.ne	466564 <_obstack_memory_used@@Base+0x9c3c>  // b.any
  466590:	ldp	x3, x2, [x19, #272]
  466594:	strb	wzr, [x19, #255]
  466598:	mov	x0, x19
  46659c:	blr	x3
  4665a0:	ldr	x2, [x19, #320]
  4665a4:	mov	x1, #0x1                   	// #1
  4665a8:	mov	x0, #0x0                   	// #0
  4665ac:	add	x2, x2, x1
  4665b0:	str	x2, [x19, #320]
  4665b4:	b	46656c <_obstack_memory_used@@Base+0x9c44>
  4665b8:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4665bc:	add	x20, x20, #0xa88
  4665c0:	add	x24, x20, #0x3
  4665c4:	mov	w22, #0x7d                  	// #125
  4665c8:	b	4665f0 <_obstack_memory_used@@Base+0x9cc8>
  4665cc:	mov	x0, x1
  4665d0:	add	x1, x1, #0x1
  4665d4:	str	x1, [x19, #256]
  4665d8:	add	x20, x20, #0x1
  4665dc:	strb	w22, [x19, x0]
  4665e0:	cmp	x24, x20
  4665e4:	strb	w22, [x19, #264]
  4665e8:	b.eq	466620 <_obstack_memory_used@@Base+0x9cf8>  // b.none
  4665ec:	ldrb	w22, [x20]
  4665f0:	cmp	x1, #0xff
  4665f4:	b.ne	4665cc <_obstack_memory_used@@Base+0x9ca4>  // b.any
  4665f8:	ldp	x3, x2, [x19, #272]
  4665fc:	strb	wzr, [x19, #255]
  466600:	mov	x0, x19
  466604:	blr	x3
  466608:	ldr	x2, [x19, #320]
  46660c:	mov	x1, #0x1                   	// #1
  466610:	mov	x0, #0x0                   	// #0
  466614:	add	x2, x2, x1
  466618:	str	x2, [x19, #320]
  46661c:	b	4665d4 <_obstack_memory_used@@Base+0x9cac>
  466620:	ldr	x23, [x23, #8]
  466624:	b	46362c <_obstack_memory_used@@Base+0x6d04>
  466628:	ldr	x25, [x25, #16]
  46662c:	ldr	w5, [x25]
  466630:	cmp	w5, #0x47
  466634:	b.eq	466ccc <_obstack_memory_used@@Base+0xa3a4>  // b.none
  466638:	ubfiz	x3, x24, #5, #32
  46663c:	sub	w0, w5, #0x1c
  466640:	mov	x1, #0x1f                  	// #31
  466644:	add	x3, x23, x3
  466648:	cmp	w0, #0x34
  46664c:	mov	x2, #0x1                   	// #1
  466650:	movk	x1, #0x1a, lsl #48
  466654:	b.hi	4646f4 <_obstack_memory_used@@Base+0x7dcc>  // b.pmore
  466658:	lsl	x0, x2, x0
  46665c:	tst	x0, x1
  466660:	b.eq	4646f4 <_obstack_memory_used@@Base+0x7dcc>  // b.none
  466664:	cmp	w24, #0x4
  466668:	b.eq	466748 <_obstack_memory_used@@Base+0x9e20>  // b.none
  46666c:	ldp	x8, x9, [x3, #-32]
  466670:	stur	x25, [x3, #-24]
  466674:	ldp	x4, x5, [x3, #-16]
  466678:	stur	wzr, [x3, #-16]
  46667c:	stp	x8, x9, [x3]
  466680:	sub	x0, x3, #0x20
  466684:	add	w24, w24, #0x1
  466688:	ldr	x25, [x25, #8]
  46668c:	stp	x4, x5, [x3, #16]
  466690:	ldr	w5, [x25]
  466694:	stp	x6, x0, [x3, #-8]
  466698:	sub	w0, w5, #0x1c
  46669c:	str	x3, [x19, #296]
  4666a0:	cmp	w0, #0x34
  4666a4:	add	x3, x3, #0x20
  4666a8:	b.ls	466658 <_obstack_memory_used@@Base+0x9d30>  // b.plast
  4666ac:	b	4646f4 <_obstack_memory_used@@Base+0x7dcc>
  4666b0:	mov	w0, #0x1                   	// #1
  4666b4:	ldp	x21, x22, [sp, #32]
  4666b8:	ldp	x23, x24, [sp, #48]
  4666bc:	str	w0, [x19, #304]
  4666c0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4666c4:	ldr	x4, [x19, #288]
  4666c8:	add	x0, sp, #0x60
  4666cc:	str	x0, [x19, #296]
  4666d0:	mov	w1, w22
  4666d4:	mov	x0, x19
  4666d8:	stp	x3, x20, [sp, #96]
  4666dc:	str	wzr, [sp, #112]
  4666e0:	str	x4, [sp, #120]
  4666e4:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4666e8:	ldr	w0, [sp, #112]
  4666ec:	ldr	x1, [sp, #96]
  4666f0:	str	x1, [x19, #296]
  4666f4:	cbnz	w0, 466e14 <_obstack_memory_used@@Base+0xa4ec>
  4666f8:	ldr	x1, [x19, #256]
  4666fc:	cmp	x1, #0xff
  466700:	b.ne	466728 <_obstack_memory_used@@Base+0x9e00>  // b.any
  466704:	ldp	x3, x2, [x19, #272]
  466708:	strb	wzr, [x19, #255]
  46670c:	mov	x0, x19
  466710:	blr	x3
  466714:	str	xzr, [x19, #256]
  466718:	ldr	x0, [x19, #320]
  46671c:	mov	x1, #0x0                   	// #0
  466720:	add	x0, x0, #0x1
  466724:	str	x0, [x19, #320]
  466728:	add	x0, x1, #0x1
  46672c:	str	x0, [x19, #256]
  466730:	mov	w0, #0x20                  	// #32
  466734:	strb	w0, [x19, x1]
  466738:	strb	w0, [x19, #264]
  46673c:	ldr	x3, [x19, #296]
  466740:	b	463bcc <_obstack_memory_used@@Base+0x72a4>
  466744:	str	x3, [x19, #296]
  466748:	mov	w0, #0x1                   	// #1
  46674c:	ldp	x21, x22, [sp, #32]
  466750:	ldp	x23, x24, [sp, #48]
  466754:	ldp	x25, x26, [sp, #64]
  466758:	str	w0, [x19, #304]
  46675c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466760:	ldrb	w0, [x0]
  466764:	sub	w1, w0, #0x63
  466768:	sub	w0, w0, #0x72
  46676c:	and	w1, w1, #0xff
  466770:	and	w0, w0, #0xff
  466774:	cmp	w1, #0x1
  466778:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  46677c:	b.hi	464a2c <_obstack_memory_used@@Base+0x8104>  // b.pmore
  466780:	mov	w1, w21
  466784:	mov	x0, x19
  466788:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  46678c:	ldr	x1, [x19, #256]
  466790:	cmp	x1, #0xff
  466794:	b.ne	4667bc <_obstack_memory_used@@Base+0x9e94>  // b.any
  466798:	ldp	x3, x2, [x19, #272]
  46679c:	strb	wzr, [x19, #255]
  4667a0:	mov	x0, x19
  4667a4:	blr	x3
  4667a8:	str	xzr, [x19, #256]
  4667ac:	ldr	x0, [x19, #320]
  4667b0:	mov	x1, #0x0                   	// #0
  4667b4:	add	x0, x0, #0x1
  4667b8:	str	x0, [x19, #320]
  4667bc:	add	x0, x1, #0x1
  4667c0:	str	x0, [x19, #256]
  4667c4:	mov	w0, #0x3c                  	// #60
  4667c8:	strb	w0, [x19, x1]
  4667cc:	strb	w0, [x19, #264]
  4667d0:	mov	w1, w21
  4667d4:	mov	x0, x19
  4667d8:	mov	w22, #0x3e                  	// #62
  4667dc:	ldr	x2, [x20, #16]
  4667e0:	mov	x23, #0x0                   	// #0
  4667e4:	ldr	x2, [x2, #8]
  4667e8:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4667ec:	ldr	x1, [x19, #256]
  4667f0:	b	466814 <_obstack_memory_used@@Base+0x9eec>
  4667f4:	mov	x0, x1
  4667f8:	add	x1, x1, #0x1
  4667fc:	str	x1, [x19, #256]
  466800:	strb	w22, [x19, x0]
  466804:	strb	w22, [x19, #264]
  466808:	mov	w22, #0x28                  	// #40
  46680c:	cbnz	x23, 46699c <_obstack_memory_used@@Base+0xa074>
  466810:	mov	x23, #0x1                   	// #1
  466814:	cmp	x1, #0xff
  466818:	b.ne	4667f4 <_obstack_memory_used@@Base+0x9ecc>  // b.any
  46681c:	ldp	x3, x2, [x19, #272]
  466820:	strb	wzr, [x19, #255]
  466824:	mov	x0, x19
  466828:	blr	x3
  46682c:	ldr	x2, [x19, #320]
  466830:	mov	x1, #0x1                   	// #1
  466834:	mov	x0, #0x0                   	// #0
  466838:	add	x2, x2, x1
  46683c:	str	x2, [x19, #320]
  466840:	b	4667fc <_obstack_memory_used@@Base+0x9ed4>
  466844:	ldr	w4, [x19, #344]
  466848:	ldr	x5, [x19, #336]
  46684c:	cmp	w4, #0x0
  466850:	b.le	466e44 <_obstack_memory_used@@Base+0xa51c>
  466854:	sub	w3, w4, #0x1
  466858:	add	x1, x5, #0x10
  46685c:	mov	x2, x5
  466860:	add	x3, x1, w3, uxtw #4
  466864:	b	466874 <_obstack_memory_used@@Base+0x9f4c>
  466868:	add	x2, x2, #0x10
  46686c:	cmp	x3, x2
  466870:	b.eq	466e44 <_obstack_memory_used@@Base+0xa51c>  // b.none
  466874:	ldr	x1, [x2]
  466878:	cmp	x0, x1
  46687c:	b.ne	466868 <_obstack_memory_used@@Base+0x9f40>  // b.any
  466880:	ldr	x4, [x19, #328]
  466884:	mov	x1, x4
  466888:	cbnz	x4, 4668a4 <_obstack_memory_used@@Base+0x9f7c>
  46688c:	b	466ca8 <_obstack_memory_used@@Base+0xa380>
  466890:	cmp	x3, x20
  466894:	ccmp	x4, x1, #0x4, eq  // eq = none
  466898:	b.ne	4668b0 <_obstack_memory_used@@Base+0x9f88>  // b.any
  46689c:	ldr	x1, [x1, #8]
  4668a0:	cbz	x1, 466ca8 <_obstack_memory_used@@Base+0xa380>
  4668a4:	ldr	x3, [x1]
  4668a8:	cmp	x3, x0
  4668ac:	b.ne	466890 <_obstack_memory_used@@Base+0x9f68>  // b.any
  4668b0:	add	x1, x0, #0x8
  4668b4:	mov	x0, x19
  4668b8:	bl	45fa18 <_obstack_memory_used@@Base+0x30f0>
  4668bc:	cbz	x0, 463400 <_obstack_memory_used@@Base+0x6ad8>
  4668c0:	mov	w22, #0x0                   	// #0
  4668c4:	ldr	w1, [x0]
  4668c8:	cmp	w1, #0x2f
  4668cc:	b.ne	463584 <_obstack_memory_used@@Base+0x6c5c>  // b.any
  4668d0:	ldr	w1, [x19, #316]
  4668d4:	tbnz	w1, #31, 466fe0 <_obstack_memory_used@@Base+0xa6b8>
  4668d8:	bl	45f9d8 <_obstack_memory_used@@Base+0x30b0>
  4668dc:	cbz	x0, 466ff4 <_obstack_memory_used@@Base+0xa6cc>
  4668e0:	ldr	w1, [x0]
  4668e4:	b	463584 <_obstack_memory_used@@Base+0x6c5c>
  4668e8:	ldr	x2, [x20, #8]
  4668ec:	add	x3, x20, #0x10
  4668f0:	mov	w1, w21
  4668f4:	mov	x0, x19
  4668f8:	bl	4684d0 <_obstack_memory_used@@Base+0xbba8>
  4668fc:	cbnz	w0, 466dcc <_obstack_memory_used@@Base+0xa4a4>
  466900:	ldp	x24, x3, [x20, #8]
  466904:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  466908:	add	x1, x1, #0x6c0
  46690c:	ldr	x0, [x24, #8]
  466910:	ldp	x22, x2, [x3, #8]
  466914:	ldr	x0, [x0]
  466918:	ldp	x23, x20, [x2, #8]
  46691c:	bl	4025d0 <strcmp@plt>
  466920:	cbnz	w0, 466d2c <_obstack_memory_used@@Base+0xa404>
  466924:	mov	x2, x22
  466928:	mov	w1, w21
  46692c:	mov	x0, x19
  466930:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466934:	mov	x2, x24
  466938:	mov	w1, w21
  46693c:	mov	x0, x19
  466940:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  466944:	mov	x2, x23
  466948:	mov	w1, w21
  46694c:	mov	x0, x19
  466950:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466954:	mov	x0, x19
  466958:	mov	x2, #0x3                   	// #3
  46695c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  466960:	add	x1, x1, #0x6c8
  466964:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  466968:	mov	w1, w21
  46696c:	mov	x2, x20
  466970:	mov	x0, x19
  466974:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466978:	ldp	x21, x22, [sp, #32]
  46697c:	ldp	x23, x24, [sp, #48]
  466980:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466984:	sub	w1, w0, #0x61
  466988:	and	w1, w1, #0xff
  46698c:	cmp	w1, #0x5
  466990:	b.hi	466f50 <_obstack_memory_used@@Base+0xa628>  // b.pmore
  466994:	sub	w0, w0, #0x57
  466998:	b	46594c <_obstack_memory_used@@Base+0x9024>
  46699c:	ldr	x2, [x20, #16]
  4669a0:	mov	w1, w21
  4669a4:	mov	x0, x19
  4669a8:	ldr	x2, [x2, #16]
  4669ac:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  4669b0:	ldr	x1, [x19, #256]
  4669b4:	cmp	x1, #0xff
  4669b8:	b.ne	4669e0 <_obstack_memory_used@@Base+0xa0b8>  // b.any
  4669bc:	ldp	x3, x2, [x19, #272]
  4669c0:	strb	wzr, [x19, #255]
  4669c4:	mov	x0, x19
  4669c8:	blr	x3
  4669cc:	str	xzr, [x19, #256]
  4669d0:	ldr	x0, [x19, #320]
  4669d4:	mov	x1, #0x0                   	// #0
  4669d8:	add	x0, x0, #0x1
  4669dc:	str	x0, [x19, #320]
  4669e0:	add	x0, x1, #0x1
  4669e4:	str	x0, [x19, #256]
  4669e8:	mov	w0, #0x29                  	// #41
  4669ec:	strb	w0, [x19, x1]
  4669f0:	strb	w0, [x19, #264]
  4669f4:	ldp	x21, x22, [sp, #32]
  4669f8:	ldp	x23, x24, [sp, #48]
  4669fc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466a00:	ldr	w1, [x19, #316]
  466a04:	tbnz	w1, #31, 4659ac <_obstack_memory_used@@Base+0x9084>
  466a08:	bl	45f9d8 <_obstack_memory_used@@Base+0x30b0>
  466a0c:	mov	x2, x0
  466a10:	cbnz	x0, 4659ac <_obstack_memory_used@@Base+0x9084>
  466a14:	b	463400 <_obstack_memory_used@@Base+0x6ad8>
  466a18:	cmp	w1, #0x63
  466a1c:	b.eq	466de4 <_obstack_memory_used@@Base+0xa4bc>  // b.none
  466a20:	mov	w1, w21
  466a24:	mov	x0, x19
  466a28:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  466a2c:	ldr	x2, [x20, #16]
  466a30:	mov	w1, w21
  466a34:	mov	x0, x19
  466a38:	ldr	x2, [x2, #16]
  466a3c:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466a40:	b	464b60 <_obstack_memory_used@@Base+0x8238>
  466a44:	mov	w2, w3
  466a48:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  466a4c:	add	x1, x1, #0x9e0
  466a50:	add	x20, sp, #0x60
  466a54:	mov	x0, x20
  466a58:	bl	402310 <sprintf@plt>
  466a5c:	mov	x0, x20
  466a60:	bl	402270 <strlen@plt>
  466a64:	cbz	x0, 4670c0 <_obstack_memory_used@@Base+0xa798>
  466a68:	add	x22, x20, x0
  466a6c:	ldr	x1, [x19, #256]
  466a70:	b	466a94 <_obstack_memory_used@@Base+0xa16c>
  466a74:	mov	x0, x1
  466a78:	add	x1, x1, #0x1
  466a7c:	str	x1, [x19, #256]
  466a80:	add	x20, x20, #0x1
  466a84:	strb	w21, [x19, x0]
  466a88:	cmp	x22, x20
  466a8c:	strb	w21, [x19, #264]
  466a90:	b.eq	466ad4 <_obstack_memory_used@@Base+0xa1ac>  // b.none
  466a94:	ldrb	w21, [x20]
  466a98:	cmp	x1, #0xff
  466a9c:	b.ne	466a74 <_obstack_memory_used@@Base+0xa14c>  // b.any
  466aa0:	ldp	x3, x2, [x19, #272]
  466aa4:	strb	wzr, [x19, #255]
  466aa8:	mov	x0, x19
  466aac:	blr	x3
  466ab0:	ldr	x2, [x19, #320]
  466ab4:	mov	x1, #0x1                   	// #1
  466ab8:	mov	x0, #0x0                   	// #0
  466abc:	add	x2, x2, x1
  466ac0:	str	x2, [x19, #320]
  466ac4:	b	466a7c <_obstack_memory_used@@Base+0xa154>
  466ac8:	ldp	x21, x22, [sp, #32]
  466acc:	ldp	x23, x24, [sp, #48]
  466ad0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466ad4:	ldp	x21, x22, [sp, #32]
  466ad8:	ldp	x23, x24, [sp, #48]
  466adc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466ae0:	ldr	x0, [x22, #8]
  466ae4:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  466ae8:	mov	x2, #0x6                   	// #6
  466aec:	add	x1, x1, #0x540
  466af0:	bl	402400 <strncmp@plt>
  466af4:	cbnz	w0, 4647e8 <_obstack_memory_used@@Base+0x7ec0>
  466af8:	ldr	x2, [x20, #16]
  466afc:	mov	w1, w21
  466b00:	mov	x0, x19
  466b04:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  466b08:	mov	x0, x19
  466b0c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  466b10:	mov	x2, #0x2                   	// #2
  466b14:	add	x1, x1, #0x900
  466b18:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  466b1c:	b	4648a8 <_obstack_memory_used@@Base+0x7f80>
  466b20:	cmp	x1, #0xff
  466b24:	b.ne	466b4c <_obstack_memory_used@@Base+0xa224>  // b.any
  466b28:	ldp	x3, x2, [x19, #272]
  466b2c:	strb	wzr, [x19, #255]
  466b30:	mov	x0, x19
  466b34:	blr	x3
  466b38:	str	xzr, [x19, #256]
  466b3c:	ldr	x0, [x19, #320]
  466b40:	mov	x1, #0x0                   	// #0
  466b44:	add	x0, x0, #0x1
  466b48:	str	x0, [x19, #320]
  466b4c:	add	x0, x1, #0x1
  466b50:	str	x0, [x19, #256]
  466b54:	mov	w2, #0x20                  	// #32
  466b58:	strb	w2, [x19, x1]
  466b5c:	strb	w2, [x19, #264]
  466b60:	b	4660cc <_obstack_memory_used@@Base+0x97a4>
  466b64:	ldr	x1, [x19, #256]
  466b68:	cmp	x1, #0xff
  466b6c:	b.ne	466b94 <_obstack_memory_used@@Base+0xa26c>  // b.any
  466b70:	ldp	x3, x2, [x19, #272]
  466b74:	strb	wzr, [x19, #255]
  466b78:	mov	x0, x19
  466b7c:	blr	x3
  466b80:	str	xzr, [x19, #256]
  466b84:	ldr	x0, [x19, #320]
  466b88:	mov	x1, #0x0                   	// #0
  466b8c:	add	x0, x0, #0x1
  466b90:	str	x0, [x19, #320]
  466b94:	add	x0, x1, #0x1
  466b98:	str	x0, [x19, #256]
  466b9c:	mov	w2, #0x20                  	// #32
  466ba0:	strb	w2, [x19, x1]
  466ba4:	strb	w2, [x19, #264]
  466ba8:	b	466134 <_obstack_memory_used@@Base+0x980c>
  466bac:	ldp	x21, x22, [sp, #32]
  466bb0:	ldp	x23, x24, [sp, #48]
  466bb4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466bb8:	ldp	x21, x22, [sp, #32]
  466bbc:	ldp	x23, x24, [sp, #48]
  466bc0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466bc4:	ldp	x21, x22, [sp, #32]
  466bc8:	ldp	x23, x24, [sp, #48]
  466bcc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466bd0:	ldp	x21, x22, [sp, #32]
  466bd4:	ldp	x23, x24, [sp, #48]
  466bd8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466bdc:	ldr	x2, [x20, #8]
  466be0:	mov	w1, w21
  466be4:	mov	x0, x19
  466be8:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466bec:	mov	x0, x19
  466bf0:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  466bf4:	mov	x2, #0x3                   	// #3
  466bf8:	add	x1, x1, #0x978
  466bfc:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  466c00:	ldp	x21, x22, [sp, #32]
  466c04:	ldp	x23, x24, [sp, #48]
  466c08:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466c0c:	sub	x22, x22, #0x2
  466c10:	ldp	x23, x24, [sp, #48]
  466c14:	str	x22, [x19, #256]
  466c18:	ldp	x21, x22, [sp, #32]
  466c1c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466c20:	ldr	x0, [x0, #8]
  466c24:	ldr	w1, [x0, #16]
  466c28:	cmp	w1, #0x1
  466c2c:	b.eq	466fb0 <_obstack_memory_used@@Base+0xa688>  // b.none
  466c30:	ldp	x21, x22, [sp, #32]
  466c34:	ldp	x23, x24, [sp, #48]
  466c38:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466c3c:	ldr	x1, [x0, #8]
  466c40:	ldr	w2, [x1, #16]
  466c44:	cmp	w2, #0x1
  466c48:	b.ne	464a50 <_obstack_memory_used@@Base+0x8128>  // b.any
  466c4c:	ldr	x1, [x1, #8]
  466c50:	ldrb	w1, [x1]
  466c54:	cmp	w1, #0x3e
  466c58:	b.ne	464a50 <_obstack_memory_used@@Base+0x8128>  // b.any
  466c5c:	ldr	x1, [x19, #256]
  466c60:	cmp	x1, #0xff
  466c64:	b.ne	466c8c <_obstack_memory_used@@Base+0xa364>  // b.any
  466c68:	ldp	x3, x2, [x19, #272]
  466c6c:	strb	wzr, [x19, #255]
  466c70:	mov	x0, x19
  466c74:	blr	x3
  466c78:	str	xzr, [x19, #256]
  466c7c:	ldr	x0, [x19, #320]
  466c80:	mov	x1, #0x0                   	// #0
  466c84:	add	x0, x0, #0x1
  466c88:	str	x0, [x19, #320]
  466c8c:	add	x0, x1, #0x1
  466c90:	str	x0, [x19, #256]
  466c94:	mov	w0, #0x28                  	// #40
  466c98:	strb	w0, [x19, x1]
  466c9c:	strb	w0, [x19, #264]
  466ca0:	ldr	x0, [x20, #8]
  466ca4:	b	464a50 <_obstack_memory_used@@Base+0x8128>
  466ca8:	ldr	x2, [x2, #8]
  466cac:	add	x1, x0, #0x8
  466cb0:	ldr	x23, [x19, #288]
  466cb4:	str	x2, [x19, #288]
  466cb8:	mov	x0, x19
  466cbc:	bl	45fa18 <_obstack_memory_used@@Base+0x30f0>
  466cc0:	cbz	x0, 466ff8 <_obstack_memory_used@@Base+0xa6d0>
  466cc4:	mov	w22, #0x1                   	// #1
  466cc8:	b	4668c4 <_obstack_memory_used@@Base+0x9f9c>
  466ccc:	ldr	x25, [x25, #8]
  466cd0:	cbz	x25, 466748 <_obstack_memory_used@@Base+0x9e20>
  466cd4:	ldr	w5, [x25]
  466cd8:	b	466638 <_obstack_memory_used@@Base+0x9d10>
  466cdc:	ldp	x21, x22, [sp, #32]
  466ce0:	ldp	x23, x24, [sp, #48]
  466ce4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466ce8:	ldp	x21, x22, [sp, #32]
  466cec:	ldp	x23, x24, [sp, #48]
  466cf0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466cf4:	ldp	x21, x22, [sp, #32]
  466cf8:	ldp	x23, x24, [sp, #48]
  466cfc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466d00:	ldr	x0, [x2, #16]
  466d04:	ldr	w0, [x0]
  466d08:	cmp	w0, #0x29
  466d0c:	b.eq	466d18 <_obstack_memory_used@@Base+0xa3f0>  // b.none
  466d10:	mov	w0, #0x1                   	// #1
  466d14:	str	w0, [x19, #304]
  466d18:	ldr	x2, [x2, #8]
  466d1c:	mov	w1, w21
  466d20:	mov	x0, x19
  466d24:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466d28:	b	464a98 <_obstack_memory_used@@Base+0x8170>
  466d2c:	mov	x0, x19
  466d30:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  466d34:	mov	x2, #0x4                   	// #4
  466d38:	add	x1, x1, #0x6d0
  466d3c:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  466d40:	ldr	x0, [x22, #8]
  466d44:	cbz	x0, 466d9c <_obstack_memory_used@@Base+0xa474>
  466d48:	mov	w1, w21
  466d4c:	mov	x2, x22
  466d50:	mov	x0, x19
  466d54:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466d58:	ldr	x1, [x19, #256]
  466d5c:	cmp	x1, #0xff
  466d60:	b.ne	466d88 <_obstack_memory_used@@Base+0xa460>  // b.any
  466d64:	ldp	x3, x2, [x19, #272]
  466d68:	strb	wzr, [x19, #255]
  466d6c:	mov	x0, x19
  466d70:	blr	x3
  466d74:	str	xzr, [x19, #256]
  466d78:	ldr	x0, [x19, #320]
  466d7c:	mov	x1, #0x0                   	// #0
  466d80:	add	x0, x0, #0x1
  466d84:	str	x0, [x19, #320]
  466d88:	add	x0, x1, #0x1
  466d8c:	str	x0, [x19, #256]
  466d90:	mov	w0, #0x20                  	// #32
  466d94:	strb	w0, [x19, x1]
  466d98:	strb	w0, [x19, #264]
  466d9c:	mov	x2, x23
  466da0:	mov	w1, w21
  466da4:	mov	x0, x19
  466da8:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  466dac:	cbz	x20, 466f44 <_obstack_memory_used@@Base+0xa61c>
  466db0:	mov	w1, w21
  466db4:	mov	x2, x20
  466db8:	mov	x0, x19
  466dbc:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466dc0:	ldp	x21, x22, [sp, #32]
  466dc4:	ldp	x23, x24, [sp, #48]
  466dc8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466dcc:	ldp	x21, x22, [sp, #32]
  466dd0:	ldp	x23, x24, [sp, #48]
  466dd4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466dd8:	ldp	x21, x22, [sp, #32]
  466ddc:	ldp	x23, x24, [sp, #48]
  466de0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466de4:	ldrb	w1, [x0, #1]
  466de8:	cmp	w1, #0x6c
  466dec:	b.ne	466a20 <_obstack_memory_used@@Base+0xa0f8>  // b.any
  466df0:	ldrb	w0, [x0, #2]
  466df4:	cbz	w0, 466a2c <_obstack_memory_used@@Base+0xa104>
  466df8:	b	466a20 <_obstack_memory_used@@Base+0xa0f8>
  466dfc:	ldp	x21, x22, [sp, #32]
  466e00:	ldp	x23, x24, [sp, #48]
  466e04:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466e08:	ldp	x21, x22, [sp, #32]
  466e0c:	ldp	x23, x24, [sp, #48]
  466e10:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466e14:	ldp	x21, x22, [sp, #32]
  466e18:	ldp	x23, x24, [sp, #48]
  466e1c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466e20:	ldr	x1, [x20, #8]
  466e24:	ldr	w2, [x1]
  466e28:	cmp	w2, #0x1
  466e2c:	b.ne	465e30 <_obstack_memory_used@@Base+0x9508>  // b.any
  466e30:	ldr	x2, [x20, #16]
  466e34:	ldr	w2, [x2]
  466e38:	cmp	w2, #0x29
  466e3c:	csel	x20, x20, x1, ne  // ne = any
  466e40:	b	465e30 <_obstack_memory_used@@Base+0x9508>
  466e44:	ldr	w1, [x19, #348]
  466e48:	cmp	w4, w1
  466e4c:	b.ge	466eb4 <_obstack_memory_used@@Base+0xa58c>  // b.tcont
  466e50:	sbfiz	x1, x4, #4, #32
  466e54:	add	w2, w4, #0x1
  466e58:	ldr	x3, [x19, #288]
  466e5c:	str	w2, [x19, #344]
  466e60:	str	x0, [x5, x1]
  466e64:	add	x1, x5, w4, sxtw #4
  466e68:	add	x1, x1, #0x8
  466e6c:	cbz	x3, 466fcc <_obstack_memory_used@@Base+0xa6a4>
  466e70:	ldr	w2, [x19, #360]
  466e74:	ldr	w6, [x19, #364]
  466e78:	sbfiz	x5, x2, #4, #32
  466e7c:	b	466eac <_obstack_memory_used@@Base+0xa584>
  466e80:	ldr	x4, [x19, #352]
  466e84:	add	w2, w2, #0x1
  466e88:	ldr	x7, [x3, #8]
  466e8c:	add	x4, x4, x5
  466e90:	str	w2, [x19, #360]
  466e94:	add	x5, x5, #0x10
  466e98:	str	x7, [x4, #8]
  466e9c:	str	x4, [x1]
  466ea0:	mov	x1, x4
  466ea4:	ldr	x3, [x3]
  466ea8:	cbz	x3, 466fcc <_obstack_memory_used@@Base+0xa6a4>
  466eac:	cmp	w6, w2
  466eb0:	b.gt	466e80 <_obstack_memory_used@@Base+0xa558>
  466eb4:	mov	w0, #0x1                   	// #1
  466eb8:	ldp	x21, x22, [sp, #32]
  466ebc:	ldp	x23, x24, [sp, #48]
  466ec0:	str	w0, [x19, #304]
  466ec4:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466ec8:	ldr	x2, [x20, #8]
  466ecc:	mov	w1, w21
  466ed0:	mov	x0, x19
  466ed4:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  466ed8:	mov	x2, x22
  466edc:	mov	w1, w21
  466ee0:	mov	x0, x19
  466ee4:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  466ee8:	ldp	x21, x22, [sp, #32]
  466eec:	ldp	x23, x24, [sp, #48]
  466ef0:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466ef4:	ldr	x2, [x20, #16]
  466ef8:	mov	x0, x19
  466efc:	mov	w1, w21
  466f00:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  466f04:	str	xzr, [x19, #296]
  466f08:	ldr	w0, [sp, #112]
  466f0c:	cbz	w0, 463e10 <_obstack_memory_used@@Base+0x74e8>
  466f10:	ldp	x21, x22, [sp, #32]
  466f14:	ldp	x23, x24, [sp, #48]
  466f18:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466f1c:	cmp	w22, #0x5
  466f20:	b.eq	4670cc <_obstack_memory_used@@Base+0xa7a4>  // b.none
  466f24:	mov	x0, x19
  466f28:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  466f2c:	mov	x2, #0x3                   	// #3
  466f30:	add	x1, x1, #0x6e8
  466f34:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  466f38:	ldp	x21, x22, [sp, #32]
  466f3c:	ldp	x23, x24, [sp, #48]
  466f40:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466f44:	ldp	x21, x22, [sp, #32]
  466f48:	ldp	x23, x24, [sp, #48]
  466f4c:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466f50:	cmp	x21, x24
  466f54:	b.ls	4658b8 <_obstack_memory_used@@Base+0x8f90>  // b.plast
  466f58:	cmp	x2, #0xff
  466f5c:	ccmp	w0, w23, #0x0, ls  // ls = plast
  466f60:	b.ne	4658b8 <_obstack_memory_used@@Base+0x8f90>  // b.any
  466f64:	ldr	x1, [x19, #256]
  466f68:	and	w22, w2, #0xff
  466f6c:	cmp	x1, #0xff
  466f70:	b.ne	466f98 <_obstack_memory_used@@Base+0xa670>  // b.any
  466f74:	ldp	x3, x2, [x19, #272]
  466f78:	strb	wzr, [x19, #255]
  466f7c:	mov	x0, x19
  466f80:	blr	x3
  466f84:	str	xzr, [x19, #256]
  466f88:	ldr	x0, [x19, #320]
  466f8c:	mov	x1, #0x0                   	// #0
  466f90:	add	x0, x0, #0x1
  466f94:	str	x0, [x19, #320]
  466f98:	add	x0, x1, #0x1
  466f9c:	str	x0, [x19, #256]
  466fa0:	strb	w22, [x19, x1]
  466fa4:	mov	x20, x24
  466fa8:	strb	w22, [x19, #264]
  466fac:	b	4658f8 <_obstack_memory_used@@Base+0x8fd0>
  466fb0:	ldr	x0, [x0, #8]
  466fb4:	ldrb	w0, [x0]
  466fb8:	cmp	w0, #0x3e
  466fbc:	b.eq	4670ec <_obstack_memory_used@@Base+0xa7c4>  // b.none
  466fc0:	ldp	x21, x22, [sp, #32]
  466fc4:	ldp	x23, x24, [sp, #48]
  466fc8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466fcc:	str	xzr, [x1]
  466fd0:	b	4668b0 <_obstack_memory_used@@Base+0x9f88>
  466fd4:	ldp	x21, x22, [sp, #32]
  466fd8:	ldp	x23, x24, [sp, #48]
  466fdc:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  466fe0:	ldr	w1, [x20]
  466fe4:	ldr	x4, [x19, #296]
  466fe8:	cmp	w1, #0x2f
  466fec:	csel	x20, x20, x0, ne  // ne = any
  466ff0:	b	4635a8 <_obstack_memory_used@@Base+0x6c80>
  466ff4:	cbz	w22, 463400 <_obstack_memory_used@@Base+0x6ad8>
  466ff8:	ldp	x21, x22, [sp, #32]
  466ffc:	str	x23, [x19, #288]
  467000:	ldp	x23, x24, [sp, #48]
  467004:	b	463408 <_obstack_memory_used@@Base+0x6ae0>
  467008:	ldr	x1, [x19, #256]
  46700c:	cmp	x1, #0xff
  467010:	b.ne	467038 <_obstack_memory_used@@Base+0xa710>  // b.any
  467014:	ldp	x3, x2, [x19, #272]
  467018:	strb	wzr, [x19, #255]
  46701c:	mov	x0, x19
  467020:	blr	x3
  467024:	str	xzr, [x19, #256]
  467028:	ldr	x0, [x19, #320]
  46702c:	mov	x1, #0x0                   	// #0
  467030:	add	x0, x0, #0x1
  467034:	str	x0, [x19, #320]
  467038:	add	x0, x1, #0x1
  46703c:	str	x0, [x19, #256]
  467040:	mov	w0, #0x75                  	// #117
  467044:	strb	w0, [x19, x1]
  467048:	strb	w0, [x19, #264]
  46704c:	ldp	x21, x22, [sp, #32]
  467050:	ldp	x23, x24, [sp, #48]
  467054:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  467058:	mov	x0, x19
  46705c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  467060:	mov	x2, #0x2                   	// #2
  467064:	add	x1, x1, #0x6d8
  467068:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  46706c:	ldp	x21, x22, [sp, #32]
  467070:	ldp	x23, x24, [sp, #48]
  467074:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  467078:	ldr	x1, [x19, #256]
  46707c:	cmp	x1, #0xff
  467080:	b.ne	4670a8 <_obstack_memory_used@@Base+0xa780>  // b.any
  467084:	ldp	x3, x2, [x19, #272]
  467088:	strb	wzr, [x19, #255]
  46708c:	mov	x0, x19
  467090:	blr	x3
  467094:	str	xzr, [x19, #256]
  467098:	ldr	x0, [x19, #320]
  46709c:	mov	x1, #0x0                   	// #0
  4670a0:	add	x0, x0, #0x1
  4670a4:	str	x0, [x19, #320]
  4670a8:	add	x0, x1, #0x1
  4670ac:	str	x0, [x19, #256]
  4670b0:	mov	w0, #0x2d                  	// #45
  4670b4:	strb	w0, [x19, x1]
  4670b8:	strb	w0, [x19, #264]
  4670bc:	b	465cf8 <_obstack_memory_used@@Base+0x93d0>
  4670c0:	ldp	x21, x22, [sp, #32]
  4670c4:	ldp	x23, x24, [sp, #48]
  4670c8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4670cc:	mov	x0, x19
  4670d0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  4670d4:	mov	x2, #0x2                   	// #2
  4670d8:	add	x1, x1, #0x6e0
  4670dc:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  4670e0:	ldp	x21, x22, [sp, #32]
  4670e4:	ldp	x23, x24, [sp, #48]
  4670e8:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  4670ec:	ldr	x1, [x19, #256]
  4670f0:	cmp	x1, #0xff
  4670f4:	b.ne	46711c <_obstack_memory_used@@Base+0xa7f4>  // b.any
  4670f8:	ldp	x3, x2, [x19, #272]
  4670fc:	strb	wzr, [x19, #255]
  467100:	mov	x0, x19
  467104:	blr	x3
  467108:	str	xzr, [x19, #256]
  46710c:	ldr	x0, [x19, #320]
  467110:	mov	x1, #0x0                   	// #0
  467114:	add	x0, x0, #0x1
  467118:	str	x0, [x19, #320]
  46711c:	add	x0, x1, #0x1
  467120:	str	x0, [x19, #256]
  467124:	mov	w0, #0x29                  	// #41
  467128:	strb	w0, [x19, x1]
  46712c:	strb	w0, [x19, #264]
  467130:	ldp	x21, x22, [sp, #32]
  467134:	ldp	x23, x24, [sp, #48]
  467138:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46713c:	mov	x2, x22
  467140:	mov	w1, w21
  467144:	mov	x0, x19
  467148:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  46714c:	b	464f74 <_obstack_memory_used@@Base+0x864c>
  467150:	ldp	x21, x22, [sp, #32]
  467154:	ldp	x23, x24, [sp, #48]
  467158:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46715c:	mov	x0, x19
  467160:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  467164:	mov	x2, #0x5                   	// #5
  467168:	add	x1, x1, #0x178
  46716c:	bl	45f0f8 <_obstack_memory_used@@Base+0x27d0>
  467170:	ldp	x21, x22, [sp, #32]
  467174:	ldp	x23, x24, [sp, #48]
  467178:	b	4633d4 <_obstack_memory_used@@Base+0x6aac>
  46717c:	nop
  467180:	stp	x29, x30, [sp, #-48]!
  467184:	mov	x29, sp
  467188:	stp	x19, x20, [sp, #16]
  46718c:	mov	x20, x0
  467190:	cbz	x2, 467200 <_obstack_memory_used@@Base+0xa8d8>
  467194:	ldr	w3, [x2, #4]
  467198:	mov	x19, x2
  46719c:	cmp	w3, #0x1
  4671a0:	b.gt	467200 <_obstack_memory_used@@Base+0xa8d8>
  4671a4:	ldr	w4, [x0, #308]
  4671a8:	cmp	w4, #0x400
  4671ac:	b.gt	467200 <_obstack_memory_used@@Base+0xa8d8>
  4671b0:	add	w3, w3, #0x1
  4671b4:	add	w4, w4, #0x1
  4671b8:	str	w3, [x2, #4]
  4671bc:	add	x3, sp, #0x20
  4671c0:	str	w4, [x0, #308]
  4671c4:	ldr	x4, [x0, #328]
  4671c8:	str	x3, [x0, #328]
  4671cc:	stp	x2, x4, [sp, #32]
  4671d0:	bl	463370 <_obstack_memory_used@@Base+0x6a48>
  4671d4:	ldr	w1, [x19, #4]
  4671d8:	ldr	x0, [sp, #40]
  4671dc:	str	x0, [x20, #328]
  4671e0:	ldr	w0, [x20, #308]
  4671e4:	sub	w1, w1, #0x1
  4671e8:	str	w1, [x19, #4]
  4671ec:	sub	w0, w0, #0x1
  4671f0:	str	w0, [x20, #308]
  4671f4:	ldp	x19, x20, [sp, #16]
  4671f8:	ldp	x29, x30, [sp], #48
  4671fc:	ret
  467200:	mov	w0, #0x1                   	// #1
  467204:	str	w0, [x20, #304]
  467208:	ldp	x19, x20, [sp, #16]
  46720c:	ldp	x29, x30, [sp], #48
  467210:	ret
  467214:	nop
  467218:	stp	x29, x30, [sp, #-64]!
  46721c:	mov	x29, sp
  467220:	stp	x19, x20, [sp, #16]
  467224:	mov	x19, x0
  467228:	ldr	w0, [x2]
  46722c:	stp	x21, x22, [sp, #32]
  467230:	mov	x20, x2
  467234:	sub	w0, w0, #0x3
  467238:	mov	w21, w1
  46723c:	cmp	w0, #0x4d
  467240:	b.ls	467260 <_obstack_memory_used@@Base+0xa938>  // b.plast
  467244:	mov	x2, x20
  467248:	mov	w1, w21
  46724c:	mov	x0, x19
  467250:	ldp	x19, x20, [sp, #16]
  467254:	ldp	x21, x22, [sp, #32]
  467258:	ldp	x29, x30, [sp], #64
  46725c:	b	467180 <_obstack_memory_used@@Base+0xa858>
  467260:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  467264:	add	x1, x1, #0x9d0
  467268:	ldrh	w0, [x1, w0, uxtw #1]
  46726c:	adr	x1, 467278 <_obstack_memory_used@@Base+0xa950>
  467270:	add	x0, x1, w0, sxth #2
  467274:	br	x0
  467278:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46727c:	add	x20, x20, #0xb78
  467280:	add	x22, x20, #0x9
  467284:	mov	w21, #0x20                  	// #32
  467288:	ldr	x1, [x19, #256]
  46728c:	b	4672b4 <_obstack_memory_used@@Base+0xa98c>
  467290:	mov	x0, x1
  467294:	add	x1, x1, #0x1
  467298:	str	x1, [x19, #256]
  46729c:	add	x20, x20, #0x1
  4672a0:	strb	w21, [x19, x0]
  4672a4:	cmp	x22, x20
  4672a8:	strb	w21, [x19, #264]
  4672ac:	b.eq	46746c <_obstack_memory_used@@Base+0xab44>  // b.none
  4672b0:	ldrb	w21, [x20]
  4672b4:	cmp	x1, #0xff
  4672b8:	b.ne	467290 <_obstack_memory_used@@Base+0xa968>  // b.any
  4672bc:	ldp	x3, x2, [x19, #272]
  4672c0:	strb	wzr, [x19, #255]
  4672c4:	mov	x0, x19
  4672c8:	blr	x3
  4672cc:	ldr	x2, [x19, #320]
  4672d0:	mov	x1, #0x1                   	// #1
  4672d4:	mov	x0, #0x0                   	// #0
  4672d8:	add	x2, x2, x1
  4672dc:	str	x2, [x19, #320]
  4672e0:	b	467298 <_obstack_memory_used@@Base+0xa970>
  4672e4:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4672e8:	add	x20, x20, #0xb88
  4672ec:	add	x22, x20, #0x9
  4672f0:	mov	w21, #0x20                  	// #32
  4672f4:	ldr	x1, [x19, #256]
  4672f8:	b	467320 <_obstack_memory_used@@Base+0xa9f8>
  4672fc:	mov	x0, x1
  467300:	add	x1, x1, #0x1
  467304:	str	x1, [x19, #256]
  467308:	add	x20, x20, #0x1
  46730c:	strb	w21, [x19, x0]
  467310:	cmp	x20, x22
  467314:	strb	w21, [x19, #264]
  467318:	b.eq	46746c <_obstack_memory_used@@Base+0xab44>  // b.none
  46731c:	ldrb	w21, [x20]
  467320:	cmp	x1, #0xff
  467324:	b.ne	4672fc <_obstack_memory_used@@Base+0xa9d4>  // b.any
  467328:	ldp	x3, x2, [x19, #272]
  46732c:	strb	wzr, [x19, #255]
  467330:	mov	x0, x19
  467334:	blr	x3
  467338:	ldr	x2, [x19, #320]
  46733c:	mov	x1, #0x1                   	// #1
  467340:	mov	x0, #0x0                   	// #0
  467344:	add	x2, x2, x1
  467348:	str	x2, [x19, #320]
  46734c:	b	467304 <_obstack_memory_used@@Base+0xa9dc>
  467350:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  467354:	add	x20, x20, #0xb98
  467358:	add	x22, x20, #0x6
  46735c:	mov	w21, #0x20                  	// #32
  467360:	ldr	x1, [x19, #256]
  467364:	b	46738c <_obstack_memory_used@@Base+0xaa64>
  467368:	mov	x0, x1
  46736c:	add	x1, x1, #0x1
  467370:	str	x1, [x19, #256]
  467374:	add	x20, x20, #0x1
  467378:	strb	w21, [x19, x0]
  46737c:	cmp	x22, x20
  467380:	strb	w21, [x19, #264]
  467384:	b.eq	46746c <_obstack_memory_used@@Base+0xab44>  // b.none
  467388:	ldrb	w21, [x20]
  46738c:	cmp	x1, #0xff
  467390:	b.ne	467368 <_obstack_memory_used@@Base+0xaa40>  // b.any
  467394:	ldp	x3, x2, [x19, #272]
  467398:	strb	wzr, [x19, #255]
  46739c:	mov	x0, x19
  4673a0:	blr	x3
  4673a4:	ldr	x2, [x19, #320]
  4673a8:	mov	x1, #0x1                   	// #1
  4673ac:	mov	x0, #0x0                   	// #0
  4673b0:	add	x2, x2, x1
  4673b4:	str	x2, [x19, #320]
  4673b8:	b	467370 <_obstack_memory_used@@Base+0xaa48>
  4673bc:	ldr	x2, [x2, #8]
  4673c0:	b	467248 <_obstack_memory_used@@Base+0xa920>
  4673c4:	ldr	x0, [x19, #256]
  4673c8:	cmp	x0, #0xff
  4673cc:	b.eq	467988 <_obstack_memory_used@@Base+0xb060>  // b.none
  4673d0:	add	x1, x0, #0x1
  4673d4:	str	x1, [x19, #256]
  4673d8:	mov	w2, #0x20                  	// #32
  4673dc:	strb	w2, [x19, x0]
  4673e0:	strb	w2, [x19, #264]
  4673e4:	b	4675d4 <_obstack_memory_used@@Base+0xacac>
  4673e8:	ldr	x0, [x19, #256]
  4673ec:	add	x1, x0, #0x1
  4673f0:	cmp	x0, #0xff
  4673f4:	b.eq	4679e0 <_obstack_memory_used@@Base+0xb0b8>  // b.none
  4673f8:	str	x1, [x19, #256]
  4673fc:	mov	w2, #0x20                  	// #32
  467400:	strb	w2, [x19, x0]
  467404:	strb	w2, [x19, #264]
  467408:	mov	x21, #0x0                   	// #0
  46740c:	mov	w20, #0x26                  	// #38
  467410:	b	467430 <_obstack_memory_used@@Base+0xab08>
  467414:	mov	x0, x1
  467418:	add	x1, x1, #0x1
  46741c:	str	x1, [x19, #256]
  467420:	strb	w20, [x19, x0]
  467424:	strb	w20, [x19, #264]
  467428:	cbnz	x21, 46746c <_obstack_memory_used@@Base+0xab44>
  46742c:	mov	x21, #0x1                   	// #1
  467430:	cmp	x1, #0xff
  467434:	b.ne	467414 <_obstack_memory_used@@Base+0xaaec>  // b.any
  467438:	ldp	x3, x2, [x19, #272]
  46743c:	strb	wzr, [x19, #255]
  467440:	mov	x0, x19
  467444:	blr	x3
  467448:	ldr	x2, [x19, #320]
  46744c:	mov	x0, #0x0                   	// #0
  467450:	mov	x1, #0x1                   	// #1
  467454:	str	x1, [x19, #256]
  467458:	add	x2, x2, x1
  46745c:	str	x2, [x19, #320]
  467460:	strb	w20, [x19, x0]
  467464:	strb	w20, [x19, #264]
  467468:	cbz	x21, 46742c <_obstack_memory_used@@Base+0xab04>
  46746c:	ldp	x19, x20, [sp, #16]
  467470:	ldp	x21, x22, [sp, #32]
  467474:	ldp	x29, x30, [sp], #64
  467478:	ret
  46747c:	ldr	x1, [x19, #256]
  467480:	add	x0, x1, #0x1
  467484:	cmp	x1, #0xff
  467488:	b.eq	4679b8 <_obstack_memory_used@@Base+0xb090>  // b.none
  46748c:	str	x0, [x19, #256]
  467490:	mov	w0, #0x20                  	// #32
  467494:	strb	w0, [x19, x1]
  467498:	mov	w1, w21
  46749c:	strb	w0, [x19, #264]
  4674a0:	mov	x0, x19
  4674a4:	ldr	x2, [x20, #16]
  4674a8:	ldp	x19, x20, [sp, #16]
  4674ac:	ldp	x21, x22, [sp, #32]
  4674b0:	ldp	x29, x30, [sp], #64
  4674b4:	b	467180 <_obstack_memory_used@@Base+0xa858>
  4674b8:	tbnz	w21, #2, 46746c <_obstack_memory_used@@Base+0xab44>
  4674bc:	ldr	x1, [x19, #256]
  4674c0:	add	x0, x1, #0x1
  4674c4:	cmp	x1, #0xff
  4674c8:	b.ne	4674f0 <_obstack_memory_used@@Base+0xabc8>  // b.any
  4674cc:	ldp	x3, x2, [x19, #272]
  4674d0:	strb	wzr, [x19, #255]
  4674d4:	mov	x0, x19
  4674d8:	blr	x3
  4674dc:	ldr	x2, [x19, #320]
  4674e0:	mov	x0, #0x1                   	// #1
  4674e4:	mov	x1, #0x0                   	// #0
  4674e8:	add	x2, x2, x0
  4674ec:	str	x2, [x19, #320]
  4674f0:	str	x0, [x19, #256]
  4674f4:	mov	w0, #0x2a                  	// #42
  4674f8:	strb	w0, [x19, x1]
  4674fc:	strb	w0, [x19, #264]
  467500:	b	46746c <_obstack_memory_used@@Base+0xab44>
  467504:	ldrb	w0, [x19, #264]
  467508:	cmp	w0, #0x28
  46750c:	b.eq	467554 <_obstack_memory_used@@Base+0xac2c>  // b.none
  467510:	ldr	x1, [x19, #256]
  467514:	add	x0, x1, #0x1
  467518:	cmp	x1, #0xff
  46751c:	b.ne	467544 <_obstack_memory_used@@Base+0xac1c>  // b.any
  467520:	ldp	x3, x2, [x19, #272]
  467524:	strb	wzr, [x19, #255]
  467528:	mov	x0, x19
  46752c:	blr	x3
  467530:	ldr	x2, [x19, #320]
  467534:	mov	x0, #0x1                   	// #1
  467538:	mov	x1, #0x0                   	// #0
  46753c:	add	x2, x2, x0
  467540:	str	x2, [x19, #320]
  467544:	str	x0, [x19, #256]
  467548:	mov	w0, #0x20                  	// #32
  46754c:	strb	w0, [x19, x1]
  467550:	strb	w0, [x19, #264]
  467554:	ldr	x2, [x20, #8]
  467558:	mov	w1, w21
  46755c:	mov	x0, x19
  467560:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  467564:	add	x20, x20, #0xbd8
  467568:	mov	w21, #0x3a                  	// #58
  46756c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  467570:	add	x22, x20, #0x3
  467574:	ldr	x1, [x19, #256]
  467578:	b	4675a0 <_obstack_memory_used@@Base+0xac78>
  46757c:	mov	x0, x1
  467580:	add	x1, x1, #0x1
  467584:	str	x1, [x19, #256]
  467588:	add	x20, x20, #0x1
  46758c:	strb	w21, [x19, x0]
  467590:	cmp	x22, x20
  467594:	strb	w21, [x19, #264]
  467598:	b.eq	46746c <_obstack_memory_used@@Base+0xab44>  // b.none
  46759c:	ldrb	w21, [x20]
  4675a0:	cmp	x1, #0xff
  4675a4:	b.ne	46757c <_obstack_memory_used@@Base+0xac54>  // b.any
  4675a8:	ldp	x3, x2, [x19, #272]
  4675ac:	strb	wzr, [x19, #255]
  4675b0:	mov	x0, x19
  4675b4:	blr	x3
  4675b8:	ldr	x2, [x19, #320]
  4675bc:	mov	x1, #0x1                   	// #1
  4675c0:	mov	x0, #0x0                   	// #0
  4675c4:	add	x2, x2, x1
  4675c8:	str	x2, [x19, #320]
  4675cc:	b	467584 <_obstack_memory_used@@Base+0xac5c>
  4675d0:	ldr	x1, [x19, #256]
  4675d4:	cmp	x1, #0xff
  4675d8:	b.eq	467960 <_obstack_memory_used@@Base+0xb038>  // b.none
  4675dc:	add	x0, x1, #0x1
  4675e0:	str	x0, [x19, #256]
  4675e4:	mov	w0, #0x26                  	// #38
  4675e8:	strb	w0, [x19, x1]
  4675ec:	strb	w0, [x19, #264]
  4675f0:	ldp	x19, x20, [sp, #16]
  4675f4:	ldp	x21, x22, [sp, #32]
  4675f8:	ldp	x29, x30, [sp], #64
  4675fc:	ret
  467600:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  467604:	add	x22, x22, #0xbb0
  467608:	stp	x23, x24, [sp, #48]
  46760c:	add	x24, x22, #0x6
  467610:	mov	w23, #0x20                  	// #32
  467614:	ldr	x1, [x19, #256]
  467618:	b	467640 <_obstack_memory_used@@Base+0xad18>
  46761c:	mov	x0, x1
  467620:	add	x1, x1, #0x1
  467624:	str	x1, [x19, #256]
  467628:	add	x22, x22, #0x1
  46762c:	strb	w23, [x19, x0]
  467630:	cmp	x24, x22
  467634:	strb	w23, [x19, #264]
  467638:	b.eq	4678a8 <_obstack_memory_used@@Base+0xaf80>  // b.none
  46763c:	ldrb	w23, [x22]
  467640:	cmp	x1, #0xff
  467644:	b.ne	46761c <_obstack_memory_used@@Base+0xacf4>  // b.any
  467648:	ldp	x3, x2, [x19, #272]
  46764c:	strb	wzr, [x19, #255]
  467650:	mov	x0, x19
  467654:	blr	x3
  467658:	ldr	x2, [x19, #320]
  46765c:	mov	x1, #0x1                   	// #1
  467660:	mov	x0, #0x0                   	// #0
  467664:	add	x2, x2, x1
  467668:	str	x2, [x19, #320]
  46766c:	b	467624 <_obstack_memory_used@@Base+0xacfc>
  467670:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  467674:	add	x22, x22, #0xba0
  467678:	stp	x23, x24, [sp, #48]
  46767c:	add	x24, x22, #0x9
  467680:	mov	w23, #0x20                  	// #32
  467684:	ldr	x1, [x19, #256]
  467688:	b	4676b0 <_obstack_memory_used@@Base+0xad88>
  46768c:	mov	x0, x1
  467690:	add	x1, x1, #0x1
  467694:	str	x1, [x19, #256]
  467698:	add	x22, x22, #0x1
  46769c:	strb	w23, [x19, x0]
  4676a0:	cmp	x22, x24
  4676a4:	strb	w23, [x19, #264]
  4676a8:	b.eq	4678a8 <_obstack_memory_used@@Base+0xaf80>  // b.none
  4676ac:	ldrb	w23, [x22]
  4676b0:	cmp	x1, #0xff
  4676b4:	b.ne	46768c <_obstack_memory_used@@Base+0xad64>  // b.any
  4676b8:	ldp	x3, x2, [x19, #272]
  4676bc:	strb	wzr, [x19, #255]
  4676c0:	mov	x0, x19
  4676c4:	blr	x3
  4676c8:	ldr	x2, [x19, #320]
  4676cc:	mov	x1, #0x1                   	// #1
  4676d0:	mov	x0, #0x0                   	// #0
  4676d4:	add	x2, x2, x1
  4676d8:	str	x2, [x19, #320]
  4676dc:	b	467694 <_obstack_memory_used@@Base+0xad6c>
  4676e0:	stp	x23, x24, [sp, #48]
  4676e4:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4676e8:	add	x24, x24, #0xbe0
  4676ec:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4676f0:	add	x24, x24, #0xa
  4676f4:	add	x22, x22, #0xbe1
  4676f8:	mov	w23, #0x20                  	// #32
  4676fc:	ldr	x1, [x19, #256]
  467700:	b	467724 <_obstack_memory_used@@Base+0xadfc>
  467704:	mov	x0, x1
  467708:	add	x1, x1, #0x1
  46770c:	str	x1, [x19, #256]
  467710:	cmp	x22, x24
  467714:	strb	w23, [x19, x0]
  467718:	strb	w23, [x19, #264]
  46771c:	b.eq	467958 <_obstack_memory_used@@Base+0xb030>  // b.none
  467720:	ldrb	w23, [x22], #1
  467724:	cmp	x1, #0xff
  467728:	b.ne	467704 <_obstack_memory_used@@Base+0xaddc>  // b.any
  46772c:	ldp	x3, x2, [x19, #272]
  467730:	strb	wzr, [x19, #255]
  467734:	mov	x0, x19
  467738:	blr	x3
  46773c:	ldr	x2, [x19, #320]
  467740:	mov	x1, #0x1                   	// #1
  467744:	mov	x0, #0x0                   	// #0
  467748:	add	x2, x2, x1
  46774c:	str	x2, [x19, #320]
  467750:	b	46770c <_obstack_memory_used@@Base+0xade4>
  467754:	ldr	x1, [x19, #256]
  467758:	b	467408 <_obstack_memory_used@@Base+0xaae0>
  46775c:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  467760:	add	x20, x20, #0xbb8
  467764:	add	x22, x20, #0x8
  467768:	mov	w21, #0x63                  	// #99
  46776c:	ldr	x1, [x19, #256]
  467770:	b	467798 <_obstack_memory_used@@Base+0xae70>
  467774:	mov	x0, x1
  467778:	add	x1, x1, #0x1
  46777c:	str	x1, [x19, #256]
  467780:	add	x20, x20, #0x1
  467784:	strb	w21, [x19, x0]
  467788:	cmp	x22, x20
  46778c:	strb	w21, [x19, #264]
  467790:	b.eq	46746c <_obstack_memory_used@@Base+0xab44>  // b.none
  467794:	ldrb	w21, [x20]
  467798:	cmp	x1, #0xff
  46779c:	b.ne	467774 <_obstack_memory_used@@Base+0xae4c>  // b.any
  4677a0:	ldp	x3, x2, [x19, #272]
  4677a4:	strb	wzr, [x19, #255]
  4677a8:	mov	x0, x19
  4677ac:	blr	x3
  4677b0:	ldr	x2, [x19, #320]
  4677b4:	mov	x1, #0x1                   	// #1
  4677b8:	mov	x0, #0x0                   	// #0
  4677bc:	add	x2, x2, x1
  4677c0:	str	x2, [x19, #320]
  4677c4:	b	46777c <_obstack_memory_used@@Base+0xae54>
  4677c8:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4677cc:	add	x22, x22, #0xbc8
  4677d0:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4677d4:	add	x22, x22, #0xa
  4677d8:	add	x20, x20, #0xbc9
  4677dc:	mov	w21, #0x69                  	// #105
  4677e0:	ldr	x1, [x19, #256]
  4677e4:	b	467808 <_obstack_memory_used@@Base+0xaee0>
  4677e8:	mov	x0, x1
  4677ec:	add	x1, x1, #0x1
  4677f0:	str	x1, [x19, #256]
  4677f4:	cmp	x20, x22
  4677f8:	strb	w21, [x19, x0]
  4677fc:	strb	w21, [x19, #264]
  467800:	b.eq	46746c <_obstack_memory_used@@Base+0xab44>  // b.none
  467804:	ldrb	w21, [x20], #1
  467808:	cmp	x1, #0xff
  46780c:	b.ne	4677e8 <_obstack_memory_used@@Base+0xaec0>  // b.any
  467810:	ldp	x3, x2, [x19, #272]
  467814:	strb	wzr, [x19, #255]
  467818:	mov	x0, x19
  46781c:	blr	x3
  467820:	ldr	x2, [x19, #320]
  467824:	mov	x1, #0x1                   	// #1
  467828:	mov	x0, #0x0                   	// #0
  46782c:	add	x2, x2, x1
  467830:	str	x2, [x19, #320]
  467834:	b	4677f0 <_obstack_memory_used@@Base+0xaec8>
  467838:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  46783c:	add	x22, x22, #0x730
  467840:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  467844:	add	x22, x22, #0x11
  467848:	add	x20, x20, #0x731
  46784c:	mov	w21, #0x20                  	// #32
  467850:	ldr	x1, [x19, #256]
  467854:	b	467878 <_obstack_memory_used@@Base+0xaf50>
  467858:	mov	x0, x1
  46785c:	add	x1, x1, #0x1
  467860:	str	x1, [x19, #256]
  467864:	cmp	x22, x20
  467868:	strb	w21, [x19, x0]
  46786c:	strb	w21, [x19, #264]
  467870:	b.eq	46746c <_obstack_memory_used@@Base+0xab44>  // b.none
  467874:	ldrb	w21, [x20], #1
  467878:	cmp	x1, #0xff
  46787c:	b.ne	467858 <_obstack_memory_used@@Base+0xaf30>  // b.any
  467880:	ldp	x3, x2, [x19, #272]
  467884:	strb	wzr, [x19, #255]
  467888:	mov	x0, x19
  46788c:	blr	x3
  467890:	ldr	x2, [x19, #320]
  467894:	mov	x1, #0x1                   	// #1
  467898:	mov	x0, #0x0                   	// #0
  46789c:	add	x2, x2, x1
  4678a0:	str	x2, [x19, #320]
  4678a4:	b	467860 <_obstack_memory_used@@Base+0xaf38>
  4678a8:	ldr	x2, [x20, #16]
  4678ac:	cbz	x2, 467a0c <_obstack_memory_used@@Base+0xb0e4>
  4678b0:	add	x0, x1, #0x1
  4678b4:	cmp	x1, #0xff
  4678b8:	b.ne	4678e4 <_obstack_memory_used@@Base+0xafbc>  // b.any
  4678bc:	ldp	x3, x2, [x19, #272]
  4678c0:	strb	wzr, [x19, #255]
  4678c4:	mov	x0, x19
  4678c8:	blr	x3
  4678cc:	ldr	x3, [x19, #320]
  4678d0:	mov	x0, #0x1                   	// #1
  4678d4:	mov	x1, #0x0                   	// #0
  4678d8:	add	x3, x3, x0
  4678dc:	ldr	x2, [x20, #16]
  4678e0:	str	x3, [x19, #320]
  4678e4:	str	x0, [x19, #256]
  4678e8:	mov	w0, #0x28                  	// #40
  4678ec:	strb	w0, [x19, x1]
  4678f0:	strb	w0, [x19, #264]
  4678f4:	mov	w1, w21
  4678f8:	mov	x0, x19
  4678fc:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  467900:	ldr	x1, [x19, #256]
  467904:	add	x0, x1, #0x1
  467908:	cmp	x1, #0xff
  46790c:	b.ne	467934 <_obstack_memory_used@@Base+0xb00c>  // b.any
  467910:	ldp	x3, x2, [x19, #272]
  467914:	strb	wzr, [x19, #255]
  467918:	mov	x0, x19
  46791c:	blr	x3
  467920:	ldr	x2, [x19, #320]
  467924:	mov	x0, #0x1                   	// #1
  467928:	mov	x1, #0x0                   	// #0
  46792c:	add	x2, x2, x0
  467930:	str	x2, [x19, #320]
  467934:	str	x0, [x19, #256]
  467938:	mov	w0, #0x29                  	// #41
  46793c:	strb	w0, [x19, x1]
  467940:	strb	w0, [x19, #264]
  467944:	ldp	x19, x20, [sp, #16]
  467948:	ldp	x21, x22, [sp, #32]
  46794c:	ldp	x23, x24, [sp, #48]
  467950:	ldp	x29, x30, [sp], #64
  467954:	ret
  467958:	ldr	x2, [x20, #8]
  46795c:	b	4678f4 <_obstack_memory_used@@Base+0xafcc>
  467960:	ldp	x3, x2, [x19, #272]
  467964:	strb	wzr, [x19, #255]
  467968:	mov	x0, x19
  46796c:	blr	x3
  467970:	ldr	x2, [x19, #320]
  467974:	mov	x0, #0x1                   	// #1
  467978:	mov	x1, #0x0                   	// #0
  46797c:	add	x2, x2, x0
  467980:	str	x2, [x19, #320]
  467984:	b	4675e0 <_obstack_memory_used@@Base+0xacb8>
  467988:	ldp	x3, x2, [x19, #272]
  46798c:	strb	wzr, [x19, #255]
  467990:	mov	x1, x0
  467994:	mov	x0, x19
  467998:	blr	x3
  46799c:	ldr	x0, [x19, #320]
  4679a0:	mov	w2, #0x20                  	// #32
  4679a4:	mov	x1, #0x1                   	// #1
  4679a8:	strb	w2, [x19]
  4679ac:	add	x0, x0, x1
  4679b0:	str	x0, [x19, #320]
  4679b4:	b	4675dc <_obstack_memory_used@@Base+0xacb4>
  4679b8:	ldp	x3, x2, [x19, #272]
  4679bc:	strb	wzr, [x19, #255]
  4679c0:	mov	x0, x19
  4679c4:	blr	x3
  4679c8:	ldr	x2, [x19, #320]
  4679cc:	mov	x0, #0x1                   	// #1
  4679d0:	mov	x1, #0x0                   	// #0
  4679d4:	add	x2, x2, x0
  4679d8:	str	x2, [x19, #320]
  4679dc:	b	46748c <_obstack_memory_used@@Base+0xab64>
  4679e0:	ldp	x3, x2, [x19, #272]
  4679e4:	strb	wzr, [x19, #255]
  4679e8:	mov	x1, x0
  4679ec:	mov	x0, x19
  4679f0:	blr	x3
  4679f4:	ldr	x2, [x19, #320]
  4679f8:	mov	x1, #0x1                   	// #1
  4679fc:	mov	x0, #0x0                   	// #0
  467a00:	add	x2, x2, x1
  467a04:	str	x2, [x19, #320]
  467a08:	b	4673f8 <_obstack_memory_used@@Base+0xaad0>
  467a0c:	ldp	x23, x24, [sp, #48]
  467a10:	b	46746c <_obstack_memory_used@@Base+0xab44>
  467a14:	nop
  467a18:	stp	x29, x30, [sp, #-64]!
  467a1c:	mov	x29, sp
  467a20:	stp	x19, x20, [sp, #16]
  467a24:	mov	x19, x0
  467a28:	mov	x20, x3
  467a2c:	stp	x21, x22, [sp, #32]
  467a30:	mov	x21, x2
  467a34:	stp	x23, x24, [sp, #48]
  467a38:	mov	w23, w1
  467a3c:	cbz	x3, 467a80 <_obstack_memory_used@@Base+0xb158>
  467a40:	mov	x2, #0xe000000             	// #234881024
  467a44:	mov	x4, #0x1                   	// #1
  467a48:	movk	x2, #0x862, lsl #32
  467a4c:	ldr	w0, [x3, #16]
  467a50:	cbnz	w0, 467a80 <_obstack_memory_used@@Base+0xb158>
  467a54:	ldr	x0, [x3, #8]
  467a58:	ldr	w0, [x0]
  467a5c:	cmp	w0, #0x2b
  467a60:	b.hi	467a78 <_obstack_memory_used@@Base+0xb150>  // b.pmore
  467a64:	lsl	x0, x4, x0
  467a68:	tst	x0, x2
  467a6c:	b.ne	467b48 <_obstack_memory_used@@Base+0xb220>  // b.any
  467a70:	tst	x0, #0x1c00000000
  467a74:	b.ne	467c14 <_obstack_memory_used@@Base+0xb2ec>  // b.any
  467a78:	ldr	x3, [x3]
  467a7c:	cbnz	x3, 467a4c <_obstack_memory_used@@Base+0xb124>
  467a80:	ldr	x22, [x19, #296]
  467a84:	str	xzr, [x19, #296]
  467a88:	mov	w1, w23
  467a8c:	mov	x2, x20
  467a90:	mov	x0, x19
  467a94:	mov	w3, #0x0                   	// #0
  467a98:	bl	467cc8 <_obstack_memory_used@@Base+0xb3a0>
  467a9c:	ldr	x1, [x19, #256]
  467aa0:	cmp	x1, #0xff
  467aa4:	b.eq	467bd8 <_obstack_memory_used@@Base+0xb2b0>  // b.none
  467aa8:	add	x0, x1, #0x1
  467aac:	str	x0, [x19, #256]
  467ab0:	mov	w2, #0x28                  	// #40
  467ab4:	strb	w2, [x19, x1]
  467ab8:	strb	w2, [x19, #264]
  467abc:	ldr	x2, [x21]
  467ac0:	cbz	x2, 467ad4 <_obstack_memory_used@@Base+0xb1ac>
  467ac4:	mov	x0, x19
  467ac8:	mov	w1, w23
  467acc:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  467ad0:	ldr	x0, [x19, #256]
  467ad4:	cmp	x0, #0xff
  467ad8:	b.eq	467b1c <_obstack_memory_used@@Base+0xb1f4>  // b.none
  467adc:	add	x1, x0, #0x1
  467ae0:	str	x1, [x19, #256]
  467ae4:	mov	w3, #0x29                  	// #41
  467ae8:	strb	w3, [x19, x0]
  467aec:	mov	x2, x20
  467af0:	strb	w3, [x19, #264]
  467af4:	mov	w1, w23
  467af8:	mov	x0, x19
  467afc:	mov	w3, #0x1                   	// #1
  467b00:	bl	467cc8 <_obstack_memory_used@@Base+0xb3a0>
  467b04:	ldp	x23, x24, [sp, #48]
  467b08:	str	x22, [x19, #296]
  467b0c:	ldp	x19, x20, [sp, #16]
  467b10:	ldp	x21, x22, [sp, #32]
  467b14:	ldp	x29, x30, [sp], #64
  467b18:	ret
  467b1c:	ldp	x3, x2, [x19, #272]
  467b20:	strb	wzr, [x19, #255]
  467b24:	mov	x1, x0
  467b28:	mov	x0, x19
  467b2c:	blr	x3
  467b30:	ldr	x2, [x19, #320]
  467b34:	mov	x1, #0x1                   	// #1
  467b38:	mov	x0, #0x0                   	// #0
  467b3c:	add	x2, x2, x1
  467b40:	str	x2, [x19, #320]
  467b44:	b	467ae0 <_obstack_memory_used@@Base+0xb1b8>
  467b48:	ldrb	w0, [x19, #264]
  467b4c:	ldr	x1, [x19, #256]
  467b50:	cmp	w0, #0x20
  467b54:	b.eq	467b78 <_obstack_memory_used@@Base+0xb250>  // b.none
  467b58:	cmp	x1, #0xff
  467b5c:	b.eq	467c58 <_obstack_memory_used@@Base+0xb330>  // b.none
  467b60:	add	x2, x1, #0x1
  467b64:	str	x2, [x19, #256]
  467b68:	mov	w0, #0x20                  	// #32
  467b6c:	strb	w0, [x19, x1]
  467b70:	mov	x1, x2
  467b74:	strb	w0, [x19, #264]
  467b78:	cmp	x1, #0xff
  467b7c:	b.eq	467c30 <_obstack_memory_used@@Base+0xb308>  // b.none
  467b80:	add	x0, x1, #0x1
  467b84:	str	x0, [x19, #256]
  467b88:	mov	w24, #0x28                  	// #40
  467b8c:	strb	w24, [x19, x1]
  467b90:	mov	x0, x19
  467b94:	strb	w24, [x19, #264]
  467b98:	mov	x2, x20
  467b9c:	ldr	x22, [x19, #296]
  467ba0:	str	xzr, [x19, #296]
  467ba4:	mov	w1, w23
  467ba8:	mov	w3, #0x0                   	// #0
  467bac:	bl	467cc8 <_obstack_memory_used@@Base+0xb3a0>
  467bb0:	ldr	x0, [x19, #256]
  467bb4:	cmp	x0, #0xff
  467bb8:	b.eq	467c84 <_obstack_memory_used@@Base+0xb35c>  // b.none
  467bbc:	add	x1, x0, #0x1
  467bc0:	str	x1, [x19, #256]
  467bc4:	mov	w2, #0x29                  	// #41
  467bc8:	strb	w2, [x19, x0]
  467bcc:	strb	w2, [x19, #264]
  467bd0:	cmp	x1, #0xff
  467bd4:	b.ne	467aa8 <_obstack_memory_used@@Base+0xb180>  // b.any
  467bd8:	ldp	x3, x2, [x19, #272]
  467bdc:	strb	wzr, [x19, #255]
  467be0:	mov	x0, x19
  467be4:	blr	x3
  467be8:	mov	w1, #0x28                  	// #40
  467bec:	strb	w1, [x19]
  467bf0:	strb	w1, [x19, #264]
  467bf4:	mov	x0, #0x1                   	// #1
  467bf8:	ldr	x1, [x19, #320]
  467bfc:	ldr	x2, [x21]
  467c00:	add	x1, x1, x0
  467c04:	str	x0, [x19, #256]
  467c08:	str	x1, [x19, #320]
  467c0c:	cbnz	x2, 467ac4 <_obstack_memory_used@@Base+0xb19c>
  467c10:	b	467adc <_obstack_memory_used@@Base+0xb1b4>
  467c14:	ldrb	w0, [x19, #264]
  467c18:	ldr	x1, [x19, #256]
  467c1c:	and	w2, w0, #0xfffffffd
  467c20:	cmp	w2, #0x28
  467c24:	b.ne	467b50 <_obstack_memory_used@@Base+0xb228>  // b.any
  467c28:	cmp	x1, #0xff
  467c2c:	b.ne	467b80 <_obstack_memory_used@@Base+0xb258>  // b.any
  467c30:	ldp	x3, x2, [x19, #272]
  467c34:	strb	wzr, [x19, #255]
  467c38:	mov	x0, x19
  467c3c:	blr	x3
  467c40:	ldr	x2, [x19, #320]
  467c44:	mov	x0, #0x1                   	// #1
  467c48:	mov	x1, #0x0                   	// #0
  467c4c:	add	x2, x2, x0
  467c50:	str	x2, [x19, #320]
  467c54:	b	467b84 <_obstack_memory_used@@Base+0xb25c>
  467c58:	ldp	x3, x2, [x19, #272]
  467c5c:	strb	wzr, [x19, #255]
  467c60:	mov	x0, x19
  467c64:	blr	x3
  467c68:	ldr	x0, [x19, #320]
  467c6c:	mov	w2, #0x20                  	// #32
  467c70:	mov	x1, #0x1                   	// #1
  467c74:	strb	w2, [x19]
  467c78:	add	x0, x0, x1
  467c7c:	str	x0, [x19, #320]
  467c80:	b	467b80 <_obstack_memory_used@@Base+0xb258>
  467c84:	ldp	x3, x2, [x19, #272]
  467c88:	strb	wzr, [x19, #255]
  467c8c:	mov	x1, x0
  467c90:	mov	x0, x19
  467c94:	blr	x3
  467c98:	strb	w24, [x19, #264]
  467c9c:	mov	w0, #0x2829                	// #10281
  467ca0:	strh	w0, [x19]
  467ca4:	ldr	x1, [x19, #320]
  467ca8:	mov	x0, #0x2                   	// #2
  467cac:	ldr	x2, [x21]
  467cb0:	add	x1, x1, #0x1
  467cb4:	str	x0, [x19, #256]
  467cb8:	str	x1, [x19, #320]
  467cbc:	cbnz	x2, 467ac4 <_obstack_memory_used@@Base+0xb19c>
  467cc0:	b	467adc <_obstack_memory_used@@Base+0xb1b4>
  467cc4:	nop
  467cc8:	cbz	x2, 467f24 <_obstack_memory_used@@Base+0xb5fc>
  467ccc:	stp	x29, x30, [sp, #-112]!
  467cd0:	mov	x29, sp
  467cd4:	stp	x23, x24, [sp, #48]
  467cd8:	mov	x24, #0x1f                  	// #31
  467cdc:	movk	x24, #0x1a, lsl #48
  467ce0:	stp	x19, x20, [sp, #16]
  467ce4:	mov	w20, w1
  467ce8:	mov	x19, x2
  467cec:	stp	x21, x22, [sp, #32]
  467cf0:	mov	w21, w3
  467cf4:	mov	w22, #0x1                   	// #1
  467cf8:	stp	x25, x26, [sp, #64]
  467cfc:	mov	x26, x0
  467d00:	mov	x25, #0x1                   	// #1
  467d04:	b	467d48 <_obstack_memory_used@@Base+0xb420>
  467d08:	ldr	x1, [x19, #24]
  467d0c:	cmp	w5, #0x29
  467d10:	ldr	x23, [x26, #288]
  467d14:	str	w22, [x19, #16]
  467d18:	str	x1, [x26, #288]
  467d1c:	b.eq	467d94 <_obstack_memory_used@@Base+0xb46c>  // b.none
  467d20:	cmp	w5, #0x2a
  467d24:	b.eq	467dc4 <_obstack_memory_used@@Base+0xb49c>  // b.none
  467d28:	cmp	w5, #0x2
  467d2c:	b.eq	467df4 <_obstack_memory_used@@Base+0xb4cc>  // b.none
  467d30:	mov	w1, w20
  467d34:	mov	x0, x26
  467d38:	bl	467218 <_obstack_memory_used@@Base+0xa8f0>
  467d3c:	str	x23, [x26, #288]
  467d40:	ldr	x19, [x19]
  467d44:	cbz	x19, 467dac <_obstack_memory_used@@Base+0xb484>
  467d48:	ldr	w2, [x26, #304]
  467d4c:	cbnz	w2, 467dac <_obstack_memory_used@@Base+0xb484>
  467d50:	ldr	w2, [x19, #16]
  467d54:	cbnz	w2, 467d40 <_obstack_memory_used@@Base+0xb418>
  467d58:	ldr	x2, [x19, #8]
  467d5c:	ldr	w5, [x2]
  467d60:	cbnz	w21, 467d08 <_obstack_memory_used@@Base+0xb3e0>
  467d64:	sub	w4, w5, #0x1c
  467d68:	cmp	w4, #0x34
  467d6c:	b.hi	467d08 <_obstack_memory_used@@Base+0xb3e0>  // b.pmore
  467d70:	lsl	x4, x25, x4
  467d74:	tst	x4, x24
  467d78:	b.ne	467d40 <_obstack_memory_used@@Base+0xb418>  // b.any
  467d7c:	ldr	x1, [x19, #24]
  467d80:	cmp	w5, #0x29
  467d84:	ldr	x23, [x26, #288]
  467d88:	str	w22, [x19, #16]
  467d8c:	str	x1, [x26, #288]
  467d90:	b.ne	467d20 <_obstack_memory_used@@Base+0xb3f8>  // b.any
  467d94:	ldr	x3, [x19]
  467d98:	add	x2, x2, #0x10
  467d9c:	mov	w1, w20
  467da0:	mov	x0, x26
  467da4:	bl	467a18 <_obstack_memory_used@@Base+0xb0f0>
  467da8:	str	x23, [x26, #288]
  467dac:	ldp	x19, x20, [sp, #16]
  467db0:	ldp	x21, x22, [sp, #32]
  467db4:	ldp	x23, x24, [sp, #48]
  467db8:	ldp	x25, x26, [sp, #64]
  467dbc:	ldp	x29, x30, [sp], #112
  467dc0:	ret
  467dc4:	ldr	x3, [x19]
  467dc8:	mov	w1, w20
  467dcc:	mov	x0, x26
  467dd0:	add	x2, x2, #0x8
  467dd4:	bl	468098 <_obstack_memory_used@@Base+0xb770>
  467dd8:	str	x23, [x26, #288]
  467ddc:	ldp	x19, x20, [sp, #16]
  467de0:	ldp	x21, x22, [sp, #32]
  467de4:	ldp	x23, x24, [sp, #48]
  467de8:	ldp	x25, x26, [sp, #64]
  467dec:	ldp	x29, x30, [sp], #112
  467df0:	ret
  467df4:	ldr	x2, [x2, #8]
  467df8:	mov	w1, w20
  467dfc:	ldr	x21, [x26, #296]
  467e00:	str	xzr, [x26, #296]
  467e04:	mov	x0, x26
  467e08:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  467e0c:	str	x21, [x26, #296]
  467e10:	tbz	w20, #2, 467ec8 <_obstack_memory_used@@Base+0xb5a0>
  467e14:	ldr	x1, [x26, #256]
  467e18:	add	x0, x1, #0x1
  467e1c:	cmp	x1, #0xff
  467e20:	b.ne	467e48 <_obstack_memory_used@@Base+0xb520>  // b.any
  467e24:	ldp	x3, x2, [x26, #272]
  467e28:	strb	wzr, [x26, #255]
  467e2c:	mov	x0, x26
  467e30:	blr	x3
  467e34:	ldr	x2, [x26, #320]
  467e38:	mov	x0, #0x1                   	// #1
  467e3c:	mov	x1, #0x0                   	// #0
  467e40:	add	x2, x2, x0
  467e44:	str	x2, [x26, #320]
  467e48:	str	x0, [x26, #256]
  467e4c:	mov	w0, #0x2e                  	// #46
  467e50:	strb	w0, [x26, x1]
  467e54:	strb	w0, [x26, #264]
  467e58:	ldr	x0, [x19, #8]
  467e5c:	ldr	x21, [x0, #16]
  467e60:	ldr	w2, [x21]
  467e64:	cmp	w2, #0x47
  467e68:	b.eq	467f28 <_obstack_memory_used@@Base+0xb600>  // b.none
  467e6c:	mov	x1, #0x1f                  	// #31
  467e70:	mov	x3, #0x1                   	// #1
  467e74:	movk	x1, #0x1a, lsl #48
  467e78:	sub	w2, w2, #0x1c
  467e7c:	cmp	w2, #0x34
  467e80:	b.hi	467e90 <_obstack_memory_used@@Base+0xb568>  // b.pmore
  467e84:	lsl	x2, x3, x2
  467e88:	tst	x2, x1
  467e8c:	b.ne	467ebc <_obstack_memory_used@@Base+0xb594>  // b.any
  467e90:	mov	x2, x21
  467e94:	mov	w1, w20
  467e98:	mov	x0, x26
  467e9c:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  467ea0:	str	x23, [x26, #288]
  467ea4:	ldp	x19, x20, [sp, #16]
  467ea8:	ldp	x21, x22, [sp, #32]
  467eac:	ldp	x23, x24, [sp, #48]
  467eb0:	ldp	x25, x26, [sp, #64]
  467eb4:	ldp	x29, x30, [sp], #112
  467eb8:	ret
  467ebc:	ldr	x21, [x21, #8]
  467ec0:	ldr	w2, [x21]
  467ec4:	b	467e78 <_obstack_memory_used@@Base+0xb550>
  467ec8:	mov	x22, #0x0                   	// #0
  467ecc:	mov	w21, #0x3a                  	// #58
  467ed0:	ldr	x1, [x26, #256]
  467ed4:	b	467ef4 <_obstack_memory_used@@Base+0xb5cc>
  467ed8:	mov	x0, x1
  467edc:	add	x1, x1, #0x1
  467ee0:	str	x1, [x26, #256]
  467ee4:	strb	w21, [x26, x0]
  467ee8:	strb	w21, [x26, #264]
  467eec:	cbnz	x22, 467e58 <_obstack_memory_used@@Base+0xb530>
  467ef0:	mov	x22, #0x1                   	// #1
  467ef4:	cmp	x1, #0xff
  467ef8:	b.ne	467ed8 <_obstack_memory_used@@Base+0xb5b0>  // b.any
  467efc:	ldp	x3, x2, [x26, #272]
  467f00:	strb	wzr, [x26, #255]
  467f04:	mov	x0, x26
  467f08:	blr	x3
  467f0c:	ldr	x2, [x26, #320]
  467f10:	mov	x1, #0x1                   	// #1
  467f14:	mov	x0, #0x0                   	// #0
  467f18:	add	x2, x2, x1
  467f1c:	str	x2, [x26, #320]
  467f20:	b	467ee0 <_obstack_memory_used@@Base+0xb5b8>
  467f24:	ret
  467f28:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  467f2c:	add	x24, x24, #0xa78
  467f30:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  467f34:	add	x24, x24, #0xd
  467f38:	add	x22, x22, #0xa79
  467f3c:	mov	w19, #0x7b                  	// #123
  467f40:	ldr	x1, [x26, #256]
  467f44:	b	467f68 <_obstack_memory_used@@Base+0xb640>
  467f48:	mov	x0, x1
  467f4c:	add	x1, x1, #0x1
  467f50:	str	x1, [x26, #256]
  467f54:	cmp	x22, x24
  467f58:	strb	w19, [x26, x0]
  467f5c:	strb	w19, [x26, #264]
  467f60:	b.eq	467f98 <_obstack_memory_used@@Base+0xb670>  // b.none
  467f64:	ldrb	w19, [x22], #1
  467f68:	cmp	x1, #0xff
  467f6c:	b.ne	467f48 <_obstack_memory_used@@Base+0xb620>  // b.any
  467f70:	ldp	x3, x2, [x26, #272]
  467f74:	strb	wzr, [x26, #255]
  467f78:	mov	x0, x26
  467f7c:	blr	x3
  467f80:	ldr	x2, [x26, #320]
  467f84:	mov	x1, #0x1                   	// #1
  467f88:	mov	x0, #0x0                   	// #0
  467f8c:	add	x2, x2, x1
  467f90:	str	x2, [x26, #320]
  467f94:	b	467f50 <_obstack_memory_used@@Base+0xb628>
  467f98:	ldr	w2, [x21, #16]
  467f9c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x116d8>
  467fa0:	add	x1, x1, #0x9e0
  467fa4:	add	x19, sp, #0x50
  467fa8:	add	w2, w2, #0x1
  467fac:	mov	x0, x19
  467fb0:	bl	402310 <sprintf@plt>
  467fb4:	mov	x0, x19
  467fb8:	bl	402270 <strlen@plt>
  467fbc:	ldr	x1, [x26, #256]
  467fc0:	cbz	x0, 468020 <_obstack_memory_used@@Base+0xb6f8>
  467fc4:	add	x24, x19, x0
  467fc8:	b	467fec <_obstack_memory_used@@Base+0xb6c4>
  467fcc:	mov	x0, x1
  467fd0:	add	x1, x1, #0x1
  467fd4:	str	x1, [x26, #256]
  467fd8:	add	x19, x19, #0x1
  467fdc:	strb	w22, [x26, x0]
  467fe0:	cmp	x24, x19
  467fe4:	strb	w22, [x26, #264]
  467fe8:	b.eq	468020 <_obstack_memory_used@@Base+0xb6f8>  // b.none
  467fec:	ldrb	w22, [x19]
  467ff0:	cmp	x1, #0xff
  467ff4:	b.ne	467fcc <_obstack_memory_used@@Base+0xb6a4>  // b.any
  467ff8:	ldp	x3, x2, [x26, #272]
  467ffc:	strb	wzr, [x26, #255]
  468000:	mov	x0, x26
  468004:	blr	x3
  468008:	ldr	x2, [x26, #320]
  46800c:	mov	x1, #0x1                   	// #1
  468010:	mov	x0, #0x0                   	// #0
  468014:	add	x2, x2, x1
  468018:	str	x2, [x26, #320]
  46801c:	b	467fd4 <_obstack_memory_used@@Base+0xb6ac>
  468020:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  468024:	add	x19, x19, #0xa88
  468028:	add	x24, x19, #0x3
  46802c:	mov	w22, #0x7d                  	// #125
  468030:	b	468058 <_obstack_memory_used@@Base+0xb730>
  468034:	mov	x0, x1
  468038:	add	x1, x1, #0x1
  46803c:	str	x1, [x26, #256]
  468040:	add	x19, x19, #0x1
  468044:	strb	w22, [x26, x0]
  468048:	cmp	x24, x19
  46804c:	strb	w22, [x26, #264]
  468050:	b.eq	468088 <_obstack_memory_used@@Base+0xb760>  // b.none
  468054:	ldrb	w22, [x19]
  468058:	cmp	x1, #0xff
  46805c:	b.ne	468034 <_obstack_memory_used@@Base+0xb70c>  // b.any
  468060:	ldp	x3, x2, [x26, #272]
  468064:	strb	wzr, [x26, #255]
  468068:	mov	x0, x26
  46806c:	blr	x3
  468070:	ldr	x2, [x26, #320]
  468074:	mov	x1, #0x1                   	// #1
  468078:	mov	x0, #0x0                   	// #0
  46807c:	add	x2, x2, x1
  468080:	str	x2, [x26, #320]
  468084:	b	46803c <_obstack_memory_used@@Base+0xb714>
  468088:	ldr	x21, [x21, #8]
  46808c:	ldr	w2, [x21]
  468090:	b	467e6c <_obstack_memory_used@@Base+0xb544>
  468094:	nop
  468098:	stp	x29, x30, [sp, #-64]!
  46809c:	mov	x29, sp
  4680a0:	stp	x19, x20, [sp, #16]
  4680a4:	mov	x19, x0
  4680a8:	mov	x20, x3
  4680ac:	stp	x21, x22, [sp, #32]
  4680b0:	mov	x0, x3
  4680b4:	mov	w21, w1
  4680b8:	stp	x23, x24, [sp, #48]
  4680bc:	mov	x22, x2
  4680c0:	cbz	x3, 4680ec <_obstack_memory_used@@Base+0xb7c4>
  4680c4:	nop
  4680c8:	ldr	w4, [x0, #16]
  4680cc:	cbz	w4, 4681d8 <_obstack_memory_used@@Base+0xb8b0>
  4680d0:	ldr	x0, [x0]
  4680d4:	cbnz	x0, 4680c8 <_obstack_memory_used@@Base+0xb7a0>
  4680d8:	mov	x2, x20
  4680dc:	mov	w1, w21
  4680e0:	mov	x0, x19
  4680e4:	mov	w3, #0x0                   	// #0
  4680e8:	bl	467cc8 <_obstack_memory_used@@Base+0xb3a0>
  4680ec:	ldr	x23, [x19, #256]
  4680f0:	cmp	x23, #0xff
  4680f4:	b.eq	468204 <_obstack_memory_used@@Base+0xb8dc>  // b.none
  4680f8:	add	x1, x23, #0x1
  4680fc:	str	x1, [x19, #256]
  468100:	mov	w0, #0x20                  	// #32
  468104:	strb	w0, [x19, x23]
  468108:	strb	w0, [x19, #264]
  46810c:	cmp	x1, #0xff
  468110:	b.eq	46819c <_obstack_memory_used@@Base+0xb874>  // b.none
  468114:	add	x0, x1, #0x1
  468118:	str	x0, [x19, #256]
  46811c:	mov	w2, #0x5b                  	// #91
  468120:	strb	w2, [x19, x1]
  468124:	strb	w2, [x19, #264]
  468128:	ldr	x2, [x22]
  46812c:	cbz	x2, 468140 <_obstack_memory_used@@Base+0xb818>
  468130:	mov	x0, x19
  468134:	mov	w1, w21
  468138:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46813c:	ldr	x0, [x19, #256]
  468140:	cmp	x0, #0xff
  468144:	b.eq	468170 <_obstack_memory_used@@Base+0xb848>  // b.none
  468148:	add	x1, x0, #0x1
  46814c:	str	x1, [x19, #256]
  468150:	mov	w1, #0x5d                  	// #93
  468154:	strb	w1, [x19, x0]
  468158:	strb	w1, [x19, #264]
  46815c:	ldp	x19, x20, [sp, #16]
  468160:	ldp	x21, x22, [sp, #32]
  468164:	ldp	x23, x24, [sp, #48]
  468168:	ldp	x29, x30, [sp], #64
  46816c:	ret
  468170:	ldp	x3, x2, [x19, #272]
  468174:	strb	wzr, [x19, #255]
  468178:	mov	x1, x0
  46817c:	mov	x0, x19
  468180:	blr	x3
  468184:	ldr	x2, [x19, #320]
  468188:	mov	x1, #0x1                   	// #1
  46818c:	mov	x0, #0x0                   	// #0
  468190:	add	x2, x2, x1
  468194:	str	x2, [x19, #320]
  468198:	b	46814c <_obstack_memory_used@@Base+0xb824>
  46819c:	ldp	x3, x2, [x19, #272]
  4681a0:	strb	wzr, [x19, #255]
  4681a4:	mov	x0, x19
  4681a8:	blr	x3
  4681ac:	mov	w1, #0x5b                  	// #91
  4681b0:	strb	w1, [x19]
  4681b4:	strb	w1, [x19, #264]
  4681b8:	mov	x0, #0x1                   	// #1
  4681bc:	ldr	x1, [x19, #320]
  4681c0:	ldr	x2, [x22]
  4681c4:	add	x1, x1, x0
  4681c8:	str	x0, [x19, #256]
  4681cc:	str	x1, [x19, #320]
  4681d0:	cbnz	x2, 468130 <_obstack_memory_used@@Base+0xb808>
  4681d4:	b	468148 <_obstack_memory_used@@Base+0xb820>
  4681d8:	ldr	x0, [x0, #8]
  4681dc:	ldr	w0, [x0]
  4681e0:	cmp	w0, #0x2a
  4681e4:	b.ne	468248 <_obstack_memory_used@@Base+0xb920>  // b.any
  4681e8:	mov	w1, w21
  4681ec:	mov	x2, x20
  4681f0:	mov	x0, x19
  4681f4:	mov	w3, #0x0                   	// #0
  4681f8:	bl	467cc8 <_obstack_memory_used@@Base+0xb3a0>
  4681fc:	ldr	x1, [x19, #256]
  468200:	b	46810c <_obstack_memory_used@@Base+0xb7e4>
  468204:	ldp	x3, x2, [x19, #272]
  468208:	strb	wzr, [x19, #255]
  46820c:	mov	x1, x23
  468210:	mov	x0, x19
  468214:	blr	x3
  468218:	mov	w1, #0x5b20                	// #23328
  46821c:	mov	w0, #0x5b                  	// #91
  468220:	strh	w1, [x19]
  468224:	strb	w0, [x19, #264]
  468228:	mov	x0, #0x2                   	// #2
  46822c:	ldr	x1, [x19, #320]
  468230:	ldr	x2, [x22]
  468234:	add	x1, x1, #0x1
  468238:	str	x0, [x19, #256]
  46823c:	str	x1, [x19, #320]
  468240:	cbnz	x2, 468130 <_obstack_memory_used@@Base+0xb808>
  468244:	b	468148 <_obstack_memory_used@@Base+0xb820>
  468248:	mov	w24, #0x20                  	// #32
  46824c:	mov	x23, #0x0                   	// #0
  468250:	ldr	x1, [x19, #256]
  468254:	b	46827c <_obstack_memory_used@@Base+0xb954>
  468258:	mov	x0, x1
  46825c:	add	x1, x1, #0x1
  468260:	str	x1, [x19, #256]
  468264:	cmp	x23, #0x1
  468268:	strb	w24, [x19, x0]
  46826c:	strb	w24, [x19, #264]
  468270:	mov	w24, #0x28                  	// #40
  468274:	b.eq	4682c0 <_obstack_memory_used@@Base+0xb998>  // b.none
  468278:	mov	x23, #0x1                   	// #1
  46827c:	cmp	x1, #0xff
  468280:	b.ne	468258 <_obstack_memory_used@@Base+0xb930>  // b.any
  468284:	ldp	x3, x2, [x19, #272]
  468288:	strb	wzr, [x19, #255]
  46828c:	mov	x0, x19
  468290:	blr	x3
  468294:	ldr	x2, [x19, #320]
  468298:	mov	x0, #0x0                   	// #0
  46829c:	mov	x1, #0x1                   	// #1
  4682a0:	str	x1, [x19, #256]
  4682a4:	add	x2, x2, x1
  4682a8:	str	x2, [x19, #320]
  4682ac:	strb	w24, [x19, x0]
  4682b0:	cmp	x23, #0x1
  4682b4:	strb	w24, [x19, #264]
  4682b8:	mov	w24, #0x28                  	// #40
  4682bc:	b.ne	468278 <_obstack_memory_used@@Base+0xb950>  // b.any
  4682c0:	mov	w1, w21
  4682c4:	mov	x2, x20
  4682c8:	mov	x0, x19
  4682cc:	mov	w3, #0x0                   	// #0
  4682d0:	bl	467cc8 <_obstack_memory_used@@Base+0xb3a0>
  4682d4:	ldr	x1, [x19, #256]
  4682d8:	cmp	x1, #0xff
  4682dc:	b.eq	4682f8 <_obstack_memory_used@@Base+0xb9d0>  // b.none
  4682e0:	add	x23, x1, #0x1
  4682e4:	str	x23, [x19, #256]
  4682e8:	mov	w0, #0x29                  	// #41
  4682ec:	strb	w0, [x19, x1]
  4682f0:	strb	w0, [x19, #264]
  4682f4:	b	4680f0 <_obstack_memory_used@@Base+0xb7c8>
  4682f8:	ldp	x3, x2, [x19, #272]
  4682fc:	strb	wzr, [x19, #255]
  468300:	mov	x0, x19
  468304:	blr	x3
  468308:	ldr	x0, [x19, #320]
  46830c:	mov	w1, #0x29                  	// #41
  468310:	strb	w1, [x19]
  468314:	add	x0, x0, #0x1
  468318:	str	x0, [x19, #320]
  46831c:	b	4680f8 <_obstack_memory_used@@Base+0xb7d0>
  468320:	ldr	w4, [x2]
  468324:	cmp	w4, #0x32
  468328:	b.eq	468330 <_obstack_memory_used@@Base+0xba08>  // b.none
  46832c:	b	467180 <_obstack_memory_used@@Base+0xa858>
  468330:	stp	x29, x30, [sp, #-48]!
  468334:	mov	x29, sp
  468338:	stp	x19, x20, [sp, #16]
  46833c:	mov	x19, x0
  468340:	ldr	x0, [x2, #8]
  468344:	stp	x21, x22, [sp, #32]
  468348:	ldrsw	x22, [x0, #16]
  46834c:	ldr	x20, [x0, #8]
  468350:	cbz	x22, 4683c8 <_obstack_memory_used@@Base+0xbaa0>
  468354:	add	x22, x20, x22
  468358:	ldr	x1, [x19, #256]
  46835c:	b	468380 <_obstack_memory_used@@Base+0xba58>
  468360:	mov	x2, x1
  468364:	add	x1, x1, #0x1
  468368:	str	x1, [x19, #256]
  46836c:	add	x20, x20, #0x1
  468370:	cmp	x20, x22
  468374:	strb	w21, [x19, x2]
  468378:	strb	w21, [x19, #264]
  46837c:	b.eq	4683c8 <_obstack_memory_used@@Base+0xbaa0>  // b.none
  468380:	ldrb	w21, [x20]
  468384:	cmp	x1, #0xff
  468388:	b.ne	468360 <_obstack_memory_used@@Base+0xba38>  // b.any
  46838c:	ldp	x3, x2, [x19, #272]
  468390:	strb	wzr, [x19, #255]
  468394:	mov	x0, x19
  468398:	add	x20, x20, #0x1
  46839c:	blr	x3
  4683a0:	ldr	x0, [x19, #320]
  4683a4:	mov	x2, #0x0                   	// #0
  4683a8:	mov	x1, #0x1                   	// #1
  4683ac:	str	x1, [x19, #256]
  4683b0:	add	x0, x0, x1
  4683b4:	str	x0, [x19, #320]
  4683b8:	strb	w21, [x19, x2]
  4683bc:	cmp	x20, x22
  4683c0:	strb	w21, [x19, #264]
  4683c4:	b.ne	468380 <_obstack_memory_used@@Base+0xba58>  // b.any
  4683c8:	ldp	x19, x20, [sp, #16]
  4683cc:	ldp	x21, x22, [sp, #32]
  4683d0:	ldp	x29, x30, [sp], #48
  4683d4:	ret
  4683d8:	stp	x29, x30, [sp, #-48]!
  4683dc:	mov	x29, sp
  4683e0:	str	x21, [sp, #32]
  4683e4:	mov	w21, w1
  4683e8:	ldr	w1, [x2]
  4683ec:	stp	x19, x20, [sp, #16]
  4683f0:	mov	x20, x2
  4683f4:	cmp	w1, #0x31
  4683f8:	mov	x19, x0
  4683fc:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  468400:	b.ls	468490 <_obstack_memory_used@@Base+0xbb68>  // b.plast
  468404:	cmp	w1, #0x6
  468408:	b.eq	468490 <_obstack_memory_used@@Base+0xbb68>  // b.none
  46840c:	ldr	x1, [x0, #256]
  468410:	cmp	x1, #0xff
  468414:	b.eq	4684ac <_obstack_memory_used@@Base+0xbb84>  // b.none
  468418:	add	x0, x1, #0x1
  46841c:	str	x0, [x19, #256]
  468420:	mov	w0, #0x28                  	// #40
  468424:	strb	w0, [x19, x1]
  468428:	mov	x2, x20
  46842c:	strb	w0, [x19, #264]
  468430:	mov	w1, w21
  468434:	mov	x0, x19
  468438:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  46843c:	ldr	x1, [x19, #256]
  468440:	add	x0, x1, #0x1
  468444:	cmp	x1, #0xff
  468448:	b.ne	468470 <_obstack_memory_used@@Base+0xbb48>  // b.any
  46844c:	ldp	x3, x2, [x19, #272]
  468450:	strb	wzr, [x19, #255]
  468454:	mov	x0, x19
  468458:	blr	x3
  46845c:	ldr	x2, [x19, #320]
  468460:	mov	x0, #0x1                   	// #1
  468464:	mov	x1, #0x0                   	// #0
  468468:	add	x2, x2, x0
  46846c:	str	x2, [x19, #320]
  468470:	str	x0, [x19, #256]
  468474:	mov	w0, #0x29                  	// #41
  468478:	strb	w0, [x19, x1]
  46847c:	strb	w0, [x19, #264]
  468480:	ldp	x19, x20, [sp, #16]
  468484:	ldr	x21, [sp, #32]
  468488:	ldp	x29, x30, [sp], #48
  46848c:	ret
  468490:	mov	x2, x20
  468494:	mov	w1, w21
  468498:	mov	x0, x19
  46849c:	ldp	x19, x20, [sp, #16]
  4684a0:	ldr	x21, [sp, #32]
  4684a4:	ldp	x29, x30, [sp], #48
  4684a8:	b	467180 <_obstack_memory_used@@Base+0xa858>
  4684ac:	ldp	x3, x2, [x0, #272]
  4684b0:	strb	wzr, [x0, #255]
  4684b4:	blr	x3
  4684b8:	ldr	x2, [x19, #320]
  4684bc:	mov	x0, #0x1                   	// #1
  4684c0:	mov	x1, #0x0                   	// #0
  4684c4:	add	x2, x2, x0
  4684c8:	str	x2, [x19, #320]
  4684cc:	b	46841c <_obstack_memory_used@@Base+0xbaf4>
  4684d0:	stp	x29, x30, [sp, #-80]!
  4684d4:	mov	x29, sp
  4684d8:	stp	x19, x20, [sp, #16]
  4684dc:	mov	x19, x0
  4684e0:	ldr	x0, [x2, #8]
  4684e4:	stp	x21, x22, [sp, #32]
  4684e8:	mov	w22, w1
  4684ec:	ldr	x0, [x0]
  4684f0:	ldrb	w1, [x0]
  4684f4:	cmp	w1, #0x66
  4684f8:	b.ne	46868c <_obstack_memory_used@@Base+0xbd64>  // b.any
  4684fc:	ldr	x1, [x3]
  468500:	stp	x23, x24, [sp, #48]
  468504:	stp	x25, x26, [sp, #64]
  468508:	mov	x25, #0x0                   	// #0
  46850c:	ldp	x23, x26, [x1, #8]
  468510:	ldr	w1, [x26]
  468514:	cmp	w1, #0x3c
  468518:	b.eq	468754 <_obstack_memory_used@@Base+0xbe2c>  // b.none
  46851c:	ldr	w21, [x19, #316]
  468520:	mov	w1, #0xffffffff            	// #-1
  468524:	str	w1, [x19, #316]
  468528:	ldrb	w0, [x0, #1]
  46852c:	cmp	w0, #0x6c
  468530:	b.eq	468774 <_obstack_memory_used@@Base+0xbe4c>  // b.none
  468534:	b.hi	4686a0 <_obstack_memory_used@@Base+0xbd78>  // b.pmore
  468538:	cmp	w0, #0x4c
  46853c:	b.eq	468548 <_obstack_memory_used@@Base+0xbc20>  // b.none
  468540:	cmp	w0, #0x52
  468544:	b.ne	46866c <_obstack_memory_used@@Base+0xbd44>  // b.any
  468548:	ldr	x1, [x19, #256]
  46854c:	add	x0, x1, #0x1
  468550:	cmp	x1, #0xff
  468554:	b.eq	468834 <_obstack_memory_used@@Base+0xbf0c>  // b.none
  468558:	str	x0, [x19, #256]
  46855c:	mov	w0, #0x28                  	// #40
  468560:	strb	w0, [x19, x1]
  468564:	mov	x2, x26
  468568:	strb	w0, [x19, #264]
  46856c:	mov	w1, w22
  468570:	mov	x0, x19
  468574:	adrp	x20, 477000 <_obstack_memory_used@@Base+0x1a6d8>
  468578:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  46857c:	add	x20, x20, #0x978
  468580:	mov	w1, w22
  468584:	mov	x2, x23
  468588:	mov	x0, x19
  46858c:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  468590:	add	x26, x20, #0x3
  468594:	mov	w24, #0x2e                  	// #46
  468598:	ldr	x1, [x19, #256]
  46859c:	b	4685c4 <_obstack_memory_used@@Base+0xbc9c>
  4685a0:	mov	x0, x1
  4685a4:	add	x1, x1, #0x1
  4685a8:	str	x1, [x19, #256]
  4685ac:	add	x20, x20, #0x1
  4685b0:	cmp	x26, x20
  4685b4:	strb	w24, [x19, x0]
  4685b8:	strb	w24, [x19, #264]
  4685bc:	b.eq	468608 <_obstack_memory_used@@Base+0xbce0>  // b.none
  4685c0:	ldrb	w24, [x20]
  4685c4:	cmp	x1, #0xff
  4685c8:	b.ne	4685a0 <_obstack_memory_used@@Base+0xbc78>  // b.any
  4685cc:	ldp	x3, x2, [x19, #272]
  4685d0:	strb	wzr, [x19, #255]
  4685d4:	mov	x0, x19
  4685d8:	add	x20, x20, #0x1
  4685dc:	blr	x3
  4685e0:	ldr	x2, [x19, #320]
  4685e4:	mov	x0, #0x0                   	// #0
  4685e8:	mov	x1, #0x1                   	// #1
  4685ec:	str	x1, [x19, #256]
  4685f0:	add	x2, x2, x1
  4685f4:	str	x2, [x19, #320]
  4685f8:	strb	w24, [x19, x0]
  4685fc:	cmp	x26, x20
  468600:	strb	w24, [x19, #264]
  468604:	b.ne	4685c0 <_obstack_memory_used@@Base+0xbc98>  // b.any
  468608:	mov	x2, x23
  46860c:	mov	w1, w22
  468610:	mov	x0, x19
  468614:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  468618:	mov	x2, x25
  46861c:	mov	w1, w22
  468620:	mov	x0, x19
  468624:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  468628:	ldr	x1, [x19, #256]
  46862c:	add	x0, x1, #0x1
  468630:	cmp	x1, #0xff
  468634:	b.ne	46865c <_obstack_memory_used@@Base+0xbd34>  // b.any
  468638:	ldp	x3, x2, [x19, #272]
  46863c:	strb	wzr, [x19, #255]
  468640:	mov	x0, x19
  468644:	blr	x3
  468648:	ldr	x2, [x19, #320]
  46864c:	mov	x0, #0x1                   	// #1
  468650:	mov	x1, #0x0                   	// #0
  468654:	add	x2, x2, x0
  468658:	str	x2, [x19, #320]
  46865c:	str	x0, [x19, #256]
  468660:	mov	w0, #0x29                  	// #41
  468664:	strb	w0, [x19, x1]
  468668:	strb	w0, [x19, #264]
  46866c:	ldp	x23, x24, [sp, #48]
  468670:	mov	w0, #0x1                   	// #1
  468674:	ldp	x25, x26, [sp, #64]
  468678:	str	w21, [x19, #316]
  46867c:	ldp	x19, x20, [sp, #16]
  468680:	ldp	x21, x22, [sp, #32]
  468684:	ldp	x29, x30, [sp], #80
  468688:	ret
  46868c:	mov	w0, #0x0                   	// #0
  468690:	ldp	x19, x20, [sp, #16]
  468694:	ldp	x21, x22, [sp, #32]
  468698:	ldp	x29, x30, [sp], #80
  46869c:	ret
  4686a0:	cmp	w0, #0x72
  4686a4:	b.ne	46866c <_obstack_memory_used@@Base+0xbd44>  // b.any
  4686a8:	ldr	x1, [x19, #256]
  4686ac:	add	x0, x1, #0x1
  4686b0:	cmp	x1, #0xff
  4686b4:	b.eq	46880c <_obstack_memory_used@@Base+0xbee4>  // b.none
  4686b8:	str	x0, [x19, #256]
  4686bc:	mov	w0, #0x28                  	// #40
  4686c0:	strb	w0, [x19, x1]
  4686c4:	mov	x2, x26
  4686c8:	strb	w0, [x19, #264]
  4686cc:	mov	w1, w22
  4686d0:	mov	x0, x19
  4686d4:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4686d8:	bl	4683d8 <_obstack_memory_used@@Base+0xbab0>
  4686dc:	add	x20, x20, #0xbf8
  4686e0:	mov	w1, w22
  4686e4:	mov	x2, x23
  4686e8:	mov	x0, x19
  4686ec:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  4686f0:	add	x22, x20, #0x4
  4686f4:	mov	w24, #0x2e                  	// #46
  4686f8:	ldr	x1, [x19, #256]
  4686fc:	b	468724 <_obstack_memory_used@@Base+0xbdfc>
  468700:	mov	x0, x1
  468704:	add	x1, x1, #0x1
  468708:	str	x1, [x19, #256]
  46870c:	add	x20, x20, #0x1
  468710:	strb	w24, [x19, x0]
  468714:	cmp	x20, x22
  468718:	strb	w24, [x19, #264]
  46871c:	b.eq	46866c <_obstack_memory_used@@Base+0xbd44>  // b.none
  468720:	ldrb	w24, [x20]
  468724:	cmp	x1, #0xff
  468728:	b.ne	468700 <_obstack_memory_used@@Base+0xbdd8>  // b.any
  46872c:	ldp	x3, x2, [x19, #272]
  468730:	strb	wzr, [x19, #255]
  468734:	mov	x0, x19
  468738:	blr	x3
  46873c:	ldr	x2, [x19, #320]
  468740:	mov	x1, #0x1                   	// #1
  468744:	mov	x0, #0x0                   	// #0
  468748:	add	x2, x2, x1
  46874c:	str	x2, [x19, #320]
  468750:	b	468708 <_obstack_memory_used@@Base+0xbde0>
  468754:	ldr	w21, [x19, #316]
  468758:	mov	w1, #0xffffffff            	// #-1
  46875c:	ldr	x25, [x26, #16]
  468760:	ldr	x26, [x26, #8]
  468764:	str	w1, [x19, #316]
  468768:	ldrb	w0, [x0, #1]
  46876c:	cmp	w0, #0x6c
  468770:	b.ne	468534 <_obstack_memory_used@@Base+0xbc0c>  // b.any
  468774:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  468778:	add	x20, x20, #0xbf0
  46877c:	add	x25, x20, #0x4
  468780:	mov	w24, #0x28                  	// #40
  468784:	ldr	x1, [x19, #256]
  468788:	b	4687b0 <_obstack_memory_used@@Base+0xbe88>
  46878c:	mov	x0, x1
  468790:	add	x1, x1, #0x1
  468794:	str	x1, [x19, #256]
  468798:	add	x20, x20, #0x1
  46879c:	cmp	x25, x20
  4687a0:	strb	w24, [x19, x0]
  4687a4:	strb	w24, [x19, #264]
  4687a8:	b.eq	4687f4 <_obstack_memory_used@@Base+0xbecc>  // b.none
  4687ac:	ldrb	w24, [x20]
  4687b0:	cmp	x1, #0xff
  4687b4:	b.ne	46878c <_obstack_memory_used@@Base+0xbe64>  // b.any
  4687b8:	ldp	x3, x2, [x19, #272]
  4687bc:	strb	wzr, [x19, #255]
  4687c0:	mov	x0, x19
  4687c4:	add	x20, x20, #0x1
  4687c8:	blr	x3
  4687cc:	ldr	x2, [x19, #320]
  4687d0:	mov	x0, #0x0                   	// #0
  4687d4:	mov	x1, #0x1                   	// #1
  4687d8:	str	x1, [x19, #256]
  4687dc:	add	x2, x2, x1
  4687e0:	str	x2, [x19, #320]
  4687e4:	strb	w24, [x19, x0]
  4687e8:	cmp	x25, x20
  4687ec:	strb	w24, [x19, #264]
  4687f0:	b.ne	4687ac <_obstack_memory_used@@Base+0xbe84>  // b.any
  4687f4:	mov	x2, x23
  4687f8:	mov	w1, w22
  4687fc:	mov	x0, x19
  468800:	bl	468320 <_obstack_memory_used@@Base+0xb9f8>
  468804:	mov	x2, x26
  468808:	b	46861c <_obstack_memory_used@@Base+0xbcf4>
  46880c:	ldp	x3, x2, [x19, #272]
  468810:	strb	wzr, [x19, #255]
  468814:	mov	x0, x19
  468818:	blr	x3
  46881c:	ldr	x2, [x19, #320]
  468820:	mov	x0, #0x1                   	// #1
  468824:	mov	x1, #0x0                   	// #0
  468828:	add	x2, x2, x0
  46882c:	str	x2, [x19, #320]
  468830:	b	4686b8 <_obstack_memory_used@@Base+0xbd90>
  468834:	ldp	x3, x2, [x19, #272]
  468838:	strb	wzr, [x19, #255]
  46883c:	mov	x0, x19
  468840:	blr	x3
  468844:	ldr	x2, [x19, #320]
  468848:	mov	x0, #0x1                   	// #1
  46884c:	mov	x1, #0x0                   	// #0
  468850:	add	x2, x2, x0
  468854:	str	x2, [x19, #320]
  468858:	b	468558 <_obstack_memory_used@@Base+0xbc30>
  46885c:	nop
  468860:	sub	sp, sp, #0x230
  468864:	stp	x29, x30, [sp]
  468868:	mov	x29, sp
  46886c:	stp	x19, x20, [sp, #16]
  468870:	mov	x19, x0
  468874:	mov	x20, x1
  468878:	stp	x21, x22, [sp, #32]
  46887c:	mov	x21, x2
  468880:	stp	x23, x24, [sp, #48]
  468884:	stp	x25, x26, [sp, #64]
  468888:	str	x27, [sp, #80]
  46888c:	ldrb	w24, [x0]
  468890:	cmp	w24, #0x5f
  468894:	b.eq	468a40 <_obstack_memory_used@@Base+0xc118>  // b.none
  468898:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1e6d8>
  46889c:	mov	x0, x19
  4688a0:	add	x1, x1, #0x778
  4688a4:	mov	x2, #0x8                   	// #8
  4688a8:	mov	w23, #0x0                   	// #0
  4688ac:	bl	402400 <strncmp@plt>
  4688b0:	cbnz	w0, 468900 <_obstack_memory_used@@Base+0xbfd8>
  4688b4:	ldrb	w0, [x19, #8]
  4688b8:	mov	w2, #0x5f                  	// #95
  4688bc:	mov	w1, #0x24                  	// #36
  4688c0:	cmp	w0, #0x2e
  4688c4:	ccmp	w0, w2, #0x4, ne  // ne = any
  4688c8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4688cc:	b.ne	468900 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  4688d0:	ldrb	w0, [x19, #9]
  4688d4:	mov	w1, #0x49                  	// #73
  4688d8:	cmp	w0, #0x44
  4688dc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4688e0:	b.ne	468900 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  4688e4:	ldrb	w1, [x19, #10]
  4688e8:	cmp	w1, w2
  4688ec:	b.ne	468900 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  4688f0:	cmp	w0, #0x49
  4688f4:	cset	w23, ne  // ne = any
  4688f8:	add	w23, w23, #0x2
  4688fc:	nop
  468900:	mov	x0, x19
  468904:	bl	402270 <strlen@plt>
  468908:	mov	x3, x0
  46890c:	mov	w1, #0x11                  	// #17
  468910:	add	x0, x19, x0
  468914:	stp	x19, x0, [x29, #96]
  468918:	lsl	w4, w3, #1
  46891c:	str	w1, [x29, #112]
  468920:	cmp	w4, #0x800
  468924:	str	x19, [x29, #120]
  468928:	mov	w0, #0x0                   	// #0
  46892c:	stp	wzr, w4, [x29, #136]
  468930:	stp	wzr, w3, [x29, #152]
  468934:	stp	xzr, xzr, [x29, #160]
  468938:	str	xzr, [x29, #176]
  46893c:	b.hi	468a1c <_obstack_memory_used@@Base+0xc0f4>  // b.pmore
  468940:	mov	x22, sp
  468944:	mov	w27, #0x18                  	// #24
  468948:	sbfiz	x3, x3, #3, #32
  46894c:	cmp	w23, #0x1
  468950:	add	x3, x3, #0xf
  468954:	smsubl	x0, w4, w27, x22
  468958:	and	x3, x3, #0xfffffffffffffff0
  46895c:	mov	sp, x0
  468960:	mov	x25, sp
  468964:	sub	sp, sp, x3
  468968:	mov	x0, sp
  46896c:	str	x25, [x29, #128]
  468970:	str	x0, [x29, #144]
  468974:	b.eq	468a80 <_obstack_memory_used@@Base+0xc158>  // b.none
  468978:	sub	w0, w23, #0x2
  46897c:	cmp	w0, #0x1
  468980:	b.hi	468ac4 <_obstack_memory_used@@Base+0xc19c>  // b.pmore
  468984:	cmp	w23, #0x2
  468988:	ldrb	w0, [x19, #11]
  46898c:	add	x24, x19, #0xb
  468990:	str	x24, [x29, #120]
  468994:	cset	w1, ne  // ne = any
  468998:	cmp	w0, #0x5f
  46899c:	add	w23, w1, #0x44
  4689a0:	b.eq	468a54 <_obstack_memory_used@@Base+0xc12c>  // b.none
  4689a4:	cmp	w4, #0x0
  4689a8:	b.le	468ba8 <_obstack_memory_used@@Base+0xc280>
  4689ac:	mov	x0, x24
  4689b0:	bl	402270 <strlen@plt>
  4689b4:	mov	w1, #0x1                   	// #1
  4689b8:	str	wzr, [x25, #4]
  4689bc:	str	w1, [x29, #136]
  4689c0:	cmp	w0, #0x0
  4689c4:	b.le	468ba8 <_obstack_memory_used@@Base+0xc280>
  4689c8:	add	x26, x29, #0x60
  4689cc:	str	wzr, [x25]
  4689d0:	str	x24, [x25, #8]
  4689d4:	str	w0, [x25, #16]
  4689d8:	mov	w1, w23
  4689dc:	mov	x2, x25
  4689e0:	mov	x3, #0x0                   	// #0
  4689e4:	mov	x0, x26
  4689e8:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  4689ec:	mov	x19, x0
  4689f0:	ldr	x23, [x29, #120]
  4689f4:	mov	x0, x23
  4689f8:	bl	402270 <strlen@plt>
  4689fc:	add	x1, x23, x0
  468a00:	str	x1, [x29, #120]
  468a04:	ldrb	w0, [x23, x0]
  468a08:	cmp	w0, #0x0
  468a0c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  468a10:	b.ne	468ae4 <_obstack_memory_used@@Base+0xc1bc>  // b.any
  468a14:	mov	sp, x22
  468a18:	mov	w0, #0x0                   	// #0
  468a1c:	mov	sp, x29
  468a20:	ldp	x29, x30, [sp]
  468a24:	ldp	x19, x20, [sp, #16]
  468a28:	ldp	x21, x22, [sp, #32]
  468a2c:	ldp	x23, x24, [sp, #48]
  468a30:	ldp	x25, x26, [sp, #64]
  468a34:	ldr	x27, [sp, #80]
  468a38:	add	sp, sp, #0x230
  468a3c:	ret
  468a40:	ldrb	w0, [x0, #1]
  468a44:	mov	w23, #0x1                   	// #1
  468a48:	cmp	w0, #0x5a
  468a4c:	b.ne	468898 <_obstack_memory_used@@Base+0xbf70>  // b.any
  468a50:	b	468900 <_obstack_memory_used@@Base+0xbfd8>
  468a54:	ldrb	w0, [x19, #12]
  468a58:	cmp	w0, #0x5a
  468a5c:	b.ne	4689a4 <_obstack_memory_used@@Base+0xc07c>  // b.any
  468a60:	add	x26, x29, #0x60
  468a64:	add	x19, x19, #0xd
  468a68:	mov	x0, x26
  468a6c:	mov	w1, #0x0                   	// #0
  468a70:	str	x19, [x29, #120]
  468a74:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  468a78:	mov	x25, x0
  468a7c:	b	4689d8 <_obstack_memory_used@@Base+0xc0b0>
  468a80:	cmp	w24, #0x5f
  468a84:	b.ne	468a14 <_obstack_memory_used@@Base+0xc0ec>  // b.any
  468a88:	ldrb	w0, [x19, #1]
  468a8c:	cmp	w0, #0x5a
  468a90:	b.ne	468a14 <_obstack_memory_used@@Base+0xc0ec>  // b.any
  468a94:	add	x26, x29, #0x60
  468a98:	add	x19, x19, #0x2
  468a9c:	mov	w1, w23
  468aa0:	mov	x0, x26
  468aa4:	str	x19, [x29, #120]
  468aa8:	bl	460cf8 <_obstack_memory_used@@Base+0x43d0>
  468aac:	ldr	w3, [x29, #112]
  468ab0:	mov	x19, x0
  468ab4:	tbnz	w3, #0, 468bb4 <_obstack_memory_used@@Base+0xc28c>
  468ab8:	ldr	x0, [x29, #120]
  468abc:	ldrb	w0, [x0]
  468ac0:	b	468a08 <_obstack_memory_used@@Base+0xc0e0>
  468ac4:	add	x0, x29, #0x60
  468ac8:	bl	461a40 <_obstack_memory_used@@Base+0x5118>
  468acc:	ldr	x3, [x29, #120]
  468ad0:	mov	x19, x0
  468ad4:	ldrb	w0, [x3]
  468ad8:	cmp	w0, #0x0
  468adc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  468ae0:	b.eq	468a14 <_obstack_memory_used@@Base+0xc0ec>  // b.none
  468ae4:	add	x2, x29, #0x208
  468ae8:	add	x23, x29, #0xb8
  468aec:	mov	x0, x23
  468af0:	mov	x1, x19
  468af4:	str	xzr, [x29, #440]
  468af8:	stp	xzr, xzr, [x2]
  468afc:	stp	xzr, xzr, [x2, #16]
  468b00:	strb	wzr, [x29, #448]
  468b04:	stp	x20, x21, [x29, #456]
  468b08:	stp	xzr, xzr, [x29, #472]
  468b0c:	stp	xzr, xzr, [x29, #488]
  468b10:	stp	xzr, xzr, [x29, #504]
  468b14:	bl	45f010 <_obstack_memory_used@@Base+0x26e8>
  468b18:	ldr	w0, [x29, #492]
  468b1c:	cmp	w0, #0x7ff
  468b20:	b.gt	468b28 <_obstack_memory_used@@Base+0xc200>
  468b24:	str	wzr, [x29, #492]
  468b28:	ldr	w3, [x29, #532]
  468b2c:	mov	w4, #0x1                   	// #1
  468b30:	ldr	w6, [x29, #548]
  468b34:	mov	x20, sp
  468b38:	cmp	w3, #0x0
  468b3c:	mov	x2, x19
  468b40:	csel	w5, w3, w4, gt
  468b44:	mov	x0, x23
  468b48:	mov	w1, #0x11                  	// #17
  468b4c:	str	xzr, [x29, #552]
  468b50:	mul	w3, w3, w6
  468b54:	sub	sp, sp, w5, sxtw #4
  468b58:	str	w3, [x29, #548]
  468b5c:	mov	x5, sp
  468b60:	cmp	w3, #0x0
  468b64:	str	x5, [x29, #520]
  468b68:	csel	w3, w3, w4, gt
  468b6c:	sub	sp, sp, w3, sxtw #4
  468b70:	mov	x3, sp
  468b74:	str	x3, [x29, #536]
  468b78:	bl	467180 <_obstack_memory_used@@Base+0xa858>
  468b7c:	mov	sp, x20
  468b80:	ldr	x1, [x29, #440]
  468b84:	mov	x0, x23
  468b88:	ldp	x3, x2, [x29, #456]
  468b8c:	strb	wzr, [x23, x1]
  468b90:	blr	x3
  468b94:	ldr	w0, [x29, #488]
  468b98:	mov	sp, x22
  468b9c:	cmp	w0, #0x0
  468ba0:	cset	w0, eq  // eq = none
  468ba4:	b	468a1c <_obstack_memory_used@@Base+0xc0f4>
  468ba8:	add	x26, x29, #0x60
  468bac:	mov	x25, #0x0                   	// #0
  468bb0:	b	4689d8 <_obstack_memory_used@@Base+0xc0b0>
  468bb4:	ldr	x6, [x29, #120]
  468bb8:	ldrb	w0, [x6]
  468bbc:	cmp	w0, #0x2e
  468bc0:	b.ne	468a08 <_obstack_memory_used@@Base+0xc0e0>  // b.any
  468bc4:	nop
  468bc8:	ldrb	w0, [x6, #1]
  468bcc:	sub	w1, w0, #0x61
  468bd0:	cmp	w0, #0x5f
  468bd4:	and	w1, w1, #0xff
  468bd8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  468bdc:	b.ls	468cbc <_obstack_memory_used@@Base+0xc394>  // b.plast
  468be0:	sub	w0, w0, #0x30
  468be4:	and	w0, w0, #0xff
  468be8:	cmp	w0, #0x9
  468bec:	ldrb	w0, [x6]
  468bf0:	b.hi	468a08 <_obstack_memory_used@@Base+0xc0e0>  // b.pmore
  468bf4:	mov	x3, x6
  468bf8:	cmp	w0, #0x2e
  468bfc:	b.ne	468c4c <_obstack_memory_used@@Base+0xc324>  // b.any
  468c00:	ldrb	w4, [x3, #1]
  468c04:	sub	w4, w4, #0x30
  468c08:	and	w4, w4, #0xff
  468c0c:	cmp	w4, #0x9
  468c10:	b.hi	468c4c <_obstack_memory_used@@Base+0xc324>  // b.pmore
  468c14:	ldrb	w4, [x3, #2]
  468c18:	add	x3, x3, #0x2
  468c1c:	sub	w5, w4, #0x30
  468c20:	and	w5, w5, #0xff
  468c24:	cmp	w5, #0x9
  468c28:	b.hi	468c44 <_obstack_memory_used@@Base+0xc31c>  // b.pmore
  468c2c:	nop
  468c30:	ldrb	w4, [x3, #1]!
  468c34:	sub	w5, w4, #0x30
  468c38:	and	w5, w5, #0xff
  468c3c:	cmp	w5, #0x9
  468c40:	b.ls	468c30 <_obstack_memory_used@@Base+0xc308>  // b.plast
  468c44:	cmp	w4, #0x2e
  468c48:	b.eq	468c00 <_obstack_memory_used@@Base+0xc2d8>  // b.none
  468c4c:	ldp	w0, w1, [x29, #136]
  468c50:	str	x3, [x29, #120]
  468c54:	sub	x4, x3, x6
  468c58:	cmp	w0, w1
  468c5c:	b.ge	468cb4 <_obstack_memory_used@@Base+0xc38c>  // b.tcont
  468c60:	ldr	x2, [x29, #128]
  468c64:	smull	x1, w0, w27
  468c68:	add	w0, w0, #0x1
  468c6c:	cmp	w4, #0x0
  468c70:	add	x3, x2, x1
  468c74:	str	wzr, [x3, #4]
  468c78:	str	w0, [x29, #136]
  468c7c:	b.le	468cb4 <_obstack_memory_used@@Base+0xc38c>
  468c80:	str	xzr, [x2, x1]
  468c84:	str	x6, [x3, #8]
  468c88:	str	w4, [x3, #16]
  468c8c:	mov	x2, x19
  468c90:	mov	x0, x26
  468c94:	mov	w1, #0x4e                  	// #78
  468c98:	bl	45ef20 <_obstack_memory_used@@Base+0x25f8>
  468c9c:	ldr	x6, [x29, #120]
  468ca0:	mov	x19, x0
  468ca4:	ldrb	w0, [x6]
  468ca8:	cmp	w0, #0x2e
  468cac:	b.eq	468bc8 <_obstack_memory_used@@Base+0xc2a0>  // b.none
  468cb0:	b	468a08 <_obstack_memory_used@@Base+0xc0e0>
  468cb4:	mov	x3, #0x0                   	// #0
  468cb8:	b	468c8c <_obstack_memory_used@@Base+0xc364>
  468cbc:	ldrb	w0, [x6, #2]
  468cc0:	add	x3, x6, #0x2
  468cc4:	b	468ccc <_obstack_memory_used@@Base+0xc3a4>
  468cc8:	ldrb	w0, [x3, #1]!
  468ccc:	sub	w1, w0, #0x61
  468cd0:	cmp	w0, #0x5f
  468cd4:	and	w1, w1, #0xff
  468cd8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  468cdc:	b.ls	468cc8 <_obstack_memory_used@@Base+0xc3a0>  // b.plast
  468ce0:	b	468bf8 <_obstack_memory_used@@Base+0xc2d0>
  468ce4:	nop
  468ce8:	stp	x29, x30, [sp, #-96]!
  468cec:	mov	x29, sp
  468cf0:	stp	x21, x22, [sp, #32]
  468cf4:	mov	x21, x3
  468cf8:	cbz	x0, 468dc8 <_obstack_memory_used@@Base+0xc4a0>
  468cfc:	stp	x19, x20, [sp, #16]
  468d00:	cmp	x1, #0x0
  468d04:	mov	x19, x1
  468d08:	mov	x20, x2
  468d0c:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  468d10:	b.eq	468dc4 <_obstack_memory_used@@Base+0xc49c>  // b.none
  468d14:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x26d8>
  468d18:	add	x2, sp, #0x40
  468d1c:	add	x1, x1, #0xb28
  468d20:	stp	xzr, xzr, [sp, #64]
  468d24:	str	xzr, [sp, #80]
  468d28:	str	wzr, [sp, #88]
  468d2c:	bl	468860 <_obstack_memory_used@@Base+0xbf38>
  468d30:	cbz	w0, 468e1c <_obstack_memory_used@@Base+0xc4f4>
  468d34:	ldr	w0, [sp, #88]
  468d38:	str	x23, [sp, #48]
  468d3c:	ldr	x22, [sp, #64]
  468d40:	cbnz	w0, 468da0 <_obstack_memory_used@@Base+0xc478>
  468d44:	ldr	x23, [sp, #80]
  468d48:	cbz	x22, 468e40 <_obstack_memory_used@@Base+0xc518>
  468d4c:	cbz	x19, 468e10 <_obstack_memory_used@@Base+0xc4e8>
  468d50:	mov	x0, x22
  468d54:	bl	402270 <strlen@plt>
  468d58:	ldr	x1, [x20]
  468d5c:	cmp	x0, x1
  468d60:	b.cs	468de8 <_obstack_memory_used@@Base+0xc4c0>  // b.hs, b.nlast
  468d64:	add	x2, x0, #0x1
  468d68:	mov	x1, x22
  468d6c:	mov	x0, x19
  468d70:	bl	402220 <memcpy@plt>
  468d74:	mov	x0, x22
  468d78:	mov	x22, x19
  468d7c:	bl	402640 <free@plt>
  468d80:	cbz	x21, 468df8 <_obstack_memory_used@@Base+0xc4d0>
  468d84:	ldp	x19, x20, [sp, #16]
  468d88:	ldr	x23, [sp, #48]
  468d8c:	str	wzr, [x21]
  468d90:	mov	x0, x22
  468d94:	ldp	x21, x22, [sp, #32]
  468d98:	ldp	x29, x30, [sp], #96
  468d9c:	ret
  468da0:	mov	x23, #0x1                   	// #1
  468da4:	cbnz	x22, 468d4c <_obstack_memory_used@@Base+0xc424>
  468da8:	cbz	x21, 468e64 <_obstack_memory_used@@Base+0xc53c>
  468dac:	mov	w0, #0xffffffff            	// #-1
  468db0:	mov	x22, #0x0                   	// #0
  468db4:	ldp	x19, x20, [sp, #16]
  468db8:	ldr	x23, [sp, #48]
  468dbc:	str	w0, [x21]
  468dc0:	b	468d90 <_obstack_memory_used@@Base+0xc468>
  468dc4:	ldp	x19, x20, [sp, #16]
  468dc8:	cbz	x21, 468e2c <_obstack_memory_used@@Base+0xc504>
  468dcc:	mov	w0, #0xfffffffd            	// #-3
  468dd0:	str	w0, [x21]
  468dd4:	mov	x22, #0x0                   	// #0
  468dd8:	mov	x0, x22
  468ddc:	ldp	x21, x22, [sp, #32]
  468de0:	ldp	x29, x30, [sp], #96
  468de4:	ret
  468de8:	mov	x0, x19
  468dec:	bl	402640 <free@plt>
  468df0:	str	x23, [x20]
  468df4:	cbnz	x21, 468d84 <_obstack_memory_used@@Base+0xc45c>
  468df8:	mov	x0, x22
  468dfc:	ldp	x19, x20, [sp, #16]
  468e00:	ldp	x21, x22, [sp, #32]
  468e04:	ldr	x23, [sp, #48]
  468e08:	ldp	x29, x30, [sp], #96
  468e0c:	ret
  468e10:	cbz	x20, 468d80 <_obstack_memory_used@@Base+0xc458>
  468e14:	str	x23, [x20]
  468e18:	b	468df4 <_obstack_memory_used@@Base+0xc4cc>
  468e1c:	ldr	x0, [sp, #64]
  468e20:	bl	402640 <free@plt>
  468e24:	cbnz	x21, 468e50 <_obstack_memory_used@@Base+0xc528>
  468e28:	ldp	x19, x20, [sp, #16]
  468e2c:	mov	x22, #0x0                   	// #0
  468e30:	mov	x0, x22
  468e34:	ldp	x21, x22, [sp, #32]
  468e38:	ldp	x29, x30, [sp], #96
  468e3c:	ret
  468e40:	cbz	x21, 468e64 <_obstack_memory_used@@Base+0xc53c>
  468e44:	cmp	x23, #0x1
  468e48:	b.eq	468dac <_obstack_memory_used@@Base+0xc484>  // b.none
  468e4c:	ldr	x23, [sp, #48]
  468e50:	mov	w0, #0xfffffffe            	// #-2
  468e54:	mov	x22, #0x0                   	// #0
  468e58:	ldp	x19, x20, [sp, #16]
  468e5c:	str	w0, [x21]
  468e60:	b	468d90 <_obstack_memory_used@@Base+0xc468>
  468e64:	mov	x22, #0x0                   	// #0
  468e68:	ldp	x19, x20, [sp, #16]
  468e6c:	ldr	x23, [sp, #48]
  468e70:	b	468e30 <_obstack_memory_used@@Base+0xc508>
  468e74:	nop
  468e78:	cmp	x0, #0x0
  468e7c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  468e80:	b.eq	468ea4 <_obstack_memory_used@@Base+0xc57c>  // b.none
  468e84:	stp	x29, x30, [sp, #-16]!
  468e88:	mov	x29, sp
  468e8c:	bl	468860 <_obstack_memory_used@@Base+0xbf38>
  468e90:	cmp	w0, #0x0
  468e94:	ldp	x29, x30, [sp], #16
  468e98:	mov	w0, #0xfffffffe            	// #-2
  468e9c:	csel	w0, wzr, w0, ne  // ne = any
  468ea0:	ret
  468ea4:	mov	w0, #0xfffffffd            	// #-3
  468ea8:	ret
  468eac:	nop
  468eb0:	stp	x29, x30, [sp, #-16]!
  468eb4:	mov	x29, sp
  468eb8:	bl	45ed50 <_obstack_memory_used@@Base+0x2428>
  468ebc:	ldr	x0, [x0]
  468ec0:	cbz	x0, 468ed4 <_obstack_memory_used@@Base+0xc5ac>
  468ec4:	ldr	x1, [x0, #80]
  468ec8:	ldr	x0, [x0]
  468ecc:	tbz	w1, #0, 468ed4 <_obstack_memory_used@@Base+0xc5ac>
  468ed0:	ldur	x0, [x0, #-112]
  468ed4:	ldp	x29, x30, [sp], #16
  468ed8:	ret
  468edc:	nop
  468ee0:	and	w5, w0, #0xff
  468ee4:	cmp	w5, #0x50
  468ee8:	b.eq	469000 <_obstack_memory_used@@Base+0xc6d8>  // b.none
  468eec:	and	w4, w5, #0xf
  468ef0:	cmp	w4, #0x4
  468ef4:	b.eq	468f10 <_obstack_memory_used@@Base+0xc5e8>  // b.none
  468ef8:	b.ls	468f24 <_obstack_memory_used@@Base+0xc5fc>  // b.plast
  468efc:	cmp	w4, #0xb
  468f00:	b.eq	469024 <_obstack_memory_used@@Base+0xc6fc>  // b.none
  468f04:	b.ls	468f80 <_obstack_memory_used@@Base+0xc658>  // b.plast
  468f08:	cmp	w4, #0xc
  468f0c:	b.ne	469034 <_obstack_memory_used@@Base+0xc70c>  // b.any
  468f10:	mov	x0, x2
  468f14:	ldr	x4, [x0], #8
  468f18:	cbnz	x4, 468fe0 <_obstack_memory_used@@Base+0xc6b8>
  468f1c:	str	x4, [x3]
  468f20:	ret
  468f24:	cmp	w4, #0x2
  468f28:	b.eq	469014 <_obstack_memory_used@@Base+0xc6ec>  // b.none
  468f2c:	b.ls	468f48 <_obstack_memory_used@@Base+0xc620>  // b.plast
  468f30:	cmp	w4, #0x3
  468f34:	b.ne	469034 <_obstack_memory_used@@Base+0xc70c>  // b.any
  468f38:	mov	x0, x2
  468f3c:	ldr	w4, [x0], #4
  468f40:	cbz	x4, 468f1c <_obstack_memory_used@@Base+0xc5f4>
  468f44:	b	468fe0 <_obstack_memory_used@@Base+0xc6b8>
  468f48:	cbz	w4, 468f10 <_obstack_memory_used@@Base+0xc5e8>
  468f4c:	cmp	w4, #0x1
  468f50:	b.ne	469034 <_obstack_memory_used@@Base+0xc70c>  // b.any
  468f54:	mov	x0, x2
  468f58:	mov	x4, #0x0                   	// #0
  468f5c:	mov	w7, #0x0                   	// #0
  468f60:	ldrb	w8, [x0], #1
  468f64:	and	x6, x8, #0x7f
  468f68:	lsl	x6, x6, x7
  468f6c:	add	w7, w7, #0x7
  468f70:	orr	x4, x4, x6
  468f74:	tbnz	w8, #7, 468f60 <_obstack_memory_used@@Base+0xc638>
  468f78:	cbz	x4, 468f1c <_obstack_memory_used@@Base+0xc5f4>
  468f7c:	b	468fe0 <_obstack_memory_used@@Base+0xc6b8>
  468f80:	cmp	w4, #0x9
  468f84:	b.eq	468fa0 <_obstack_memory_used@@Base+0xc678>  // b.none
  468f88:	cmp	w4, #0xa
  468f8c:	b.ne	469034 <_obstack_memory_used@@Base+0xc70c>  // b.any
  468f90:	mov	x0, x2
  468f94:	ldrsh	x4, [x0], #2
  468f98:	cbz	x4, 468f1c <_obstack_memory_used@@Base+0xc5f4>
  468f9c:	b	468fe0 <_obstack_memory_used@@Base+0xc6b8>
  468fa0:	mov	x0, x2
  468fa4:	mov	x4, #0x0                   	// #0
  468fa8:	mov	w7, #0x0                   	// #0
  468fac:	ldrb	w8, [x0], #1
  468fb0:	and	x6, x8, #0x7f
  468fb4:	lsl	x6, x6, x7
  468fb8:	add	w7, w7, #0x7
  468fbc:	orr	x4, x4, x6
  468fc0:	tbnz	w8, #7, 468fac <_obstack_memory_used@@Base+0xc684>
  468fc4:	cmp	w7, #0x3f
  468fc8:	b.hi	468f18 <_obstack_memory_used@@Base+0xc5f0>  // b.pmore
  468fcc:	tbz	w8, #6, 468f18 <_obstack_memory_used@@Base+0xc5f0>
  468fd0:	mov	x6, #0xffffffffffffffff    	// #-1
  468fd4:	lsl	x7, x6, x7
  468fd8:	orr	x4, x4, x7
  468fdc:	nop
  468fe0:	and	w6, w5, #0x70
  468fe4:	cmp	w6, #0x10
  468fe8:	csel	x1, x2, x1, eq  // eq = none
  468fec:	add	x4, x4, x1
  468ff0:	tbz	w5, #7, 468f1c <_obstack_memory_used@@Base+0xc5f4>
  468ff4:	ldr	x4, [x4]
  468ff8:	str	x4, [x3]
  468ffc:	ret
  469000:	add	x0, x2, #0x7
  469004:	and	x0, x0, #0xfffffffffffffff8
  469008:	ldr	x4, [x0], #8
  46900c:	str	x4, [x3]
  469010:	ret
  469014:	mov	x0, x2
  469018:	ldrh	w4, [x0], #2
  46901c:	cbz	x4, 468f1c <_obstack_memory_used@@Base+0xc5f4>
  469020:	b	468fe0 <_obstack_memory_used@@Base+0xc6b8>
  469024:	mov	x0, x2
  469028:	ldrsw	x4, [x0], #4
  46902c:	cbz	x4, 468f1c <_obstack_memory_used@@Base+0xc5f4>
  469030:	b	468fe0 <_obstack_memory_used@@Base+0xc6b8>
  469034:	stp	x29, x30, [sp, #-16]!
  469038:	mov	x29, sp
  46903c:	bl	402540 <abort@plt>
  469040:	and	w0, w0, #0xff
  469044:	cmp	w0, #0xff
  469048:	b.eq	469094 <_obstack_memory_used@@Base+0xc76c>  // b.none
  46904c:	and	w2, w0, #0x70
  469050:	cmp	w2, #0x30
  469054:	b.eq	4690ac <_obstack_memory_used@@Base+0xc784>  // b.none
  469058:	b.hi	46906c <_obstack_memory_used@@Base+0xc744>  // b.pmore
  46905c:	cmp	w2, #0x20
  469060:	b.ne	46907c <_obstack_memory_used@@Base+0xc754>  // b.any
  469064:	ldr	x0, [x1, #808]
  469068:	ret
  46906c:	cmp	w2, #0x40
  469070:	b.ne	46909c <_obstack_memory_used@@Base+0xc774>  // b.any
  469074:	ldr	x0, [x1, #824]
  469078:	ret
  46907c:	b.hi	469088 <_obstack_memory_used@@Base+0xc760>  // b.pmore
  469080:	tst	w0, #0x60
  469084:	b.eq	469094 <_obstack_memory_used@@Base+0xc76c>  // b.none
  469088:	stp	x29, x30, [sp, #-16]!
  46908c:	mov	x29, sp
  469090:	bl	402540 <abort@plt>
  469094:	mov	x0, #0x0                   	// #0
  469098:	ret
  46909c:	cmp	w2, #0x50
  4690a0:	mov	x0, #0x0                   	// #0
  4690a4:	b.ne	469088 <_obstack_memory_used@@Base+0xc760>  // b.any
  4690a8:	ret
  4690ac:	ldr	x0, [x1, #816]
  4690b0:	ret
  4690b4:	nop
  4690b8:	str	xzr, [x3, #1568]
  4690bc:	cmp	x0, x1
  4690c0:	b.cs	469850 <_obstack_memory_used@@Base+0xcf28>  // b.hs, b.nlast
  4690c4:	stp	x29, x30, [sp, #-112]!
  4690c8:	mov	x29, sp
  4690cc:	stp	x21, x22, [sp, #32]
  4690d0:	mov	x21, x2
  4690d4:	mov	x22, x1
  4690d8:	stp	x19, x20, [sp, #16]
  4690dc:	mov	x20, x3
  4690e0:	ldr	x2, [x21, #792]
  4690e4:	stp	x23, x24, [sp, #48]
  4690e8:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  4690ec:	ldr	x5, [x21, #832]
  4690f0:	stp	x25, x26, [sp, #64]
  4690f4:	add	x23, x23, #0xc00
  4690f8:	ldr	x1, [x20, #1608]
  4690fc:	stp	x27, x28, [sp, #80]
  469100:	add	x5, x2, x5, lsr #63
  469104:	add	x27, x29, #0x68
  469108:	cmp	x1, x5
  46910c:	mov	x25, #0x0                   	// #0
  469110:	mov	w24, #0x1                   	// #1
  469114:	mov	w26, #0x5                   	// #5
  469118:	b.cs	4691e8 <_obstack_memory_used@@Base+0xc8c0>  // b.hs, b.nlast
  46911c:	nop
  469120:	mov	x19, x0
  469124:	ldrb	w4, [x19], #1
  469128:	and	w5, w4, #0xc0
  46912c:	cmp	w5, #0x40
  469130:	b.eq	4696e4 <_obstack_memory_used@@Base+0xcdbc>  // b.none
  469134:	cmp	w5, #0x80
  469138:	b.eq	469708 <_obstack_memory_used@@Base+0xcde0>  // b.none
  46913c:	cmp	w5, #0xc0
  469140:	b.eq	4696f8 <_obstack_memory_used@@Base+0xcdd0>  // b.none
  469144:	cmp	w4, #0x2f
  469148:	b.hi	469860 <_obstack_memory_used@@Base+0xcf38>  // b.pmore
  46914c:	ldrh	w2, [x23, w4, uxtw #1]
  469150:	adr	x3, 46915c <_obstack_memory_used@@Base+0xc834>
  469154:	add	x2, x3, w2, sxth #2
  469158:	br	x2
  46915c:	mov	x1, #0x0                   	// #0
  469160:	mov	w0, #0x0                   	// #0
  469164:	ldrb	w3, [x19], #1
  469168:	and	x2, x3, #0x7f
  46916c:	lsl	x2, x2, x0
  469170:	add	w0, w0, #0x7
  469174:	orr	x1, x1, x2
  469178:	tbnz	w3, #7, 469164 <_obstack_memory_used@@Base+0xc83c>
  46917c:	mov	x4, #0x0                   	// #0
  469180:	mov	w2, #0x0                   	// #0
  469184:	nop
  469188:	ldrb	w3, [x19], #1
  46918c:	and	x0, x3, #0x7f
  469190:	lsl	x0, x0, x2
  469194:	add	w2, w2, #0x7
  469198:	orr	x4, x4, x0
  46919c:	tbnz	w3, #7, 469188 <_obstack_memory_used@@Base+0xc860>
  4691a0:	ldr	x0, [x20, #1624]
  4691a4:	cmp	x1, #0x61
  4691a8:	mul	x4, x4, x0
  4691ac:	b.hi	4691c4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  4691b0:	lsl	x1, x1, #4
  4691b4:	neg	x4, x4
  4691b8:	add	x0, x20, x1
  4691bc:	str	w24, [x0, #8]
  4691c0:	str	x4, [x20, x1]
  4691c4:	cmp	x22, x19
  4691c8:	b.ls	4691e8 <_obstack_memory_used@@Base+0xc8c0>  // b.plast
  4691cc:	ldr	x2, [x21, #792]
  4691d0:	mov	x0, x19
  4691d4:	ldr	x5, [x21, #832]
  4691d8:	ldr	x1, [x20, #1608]
  4691dc:	add	x5, x2, x5, lsr #63
  4691e0:	cmp	x1, x5
  4691e4:	b.cc	469120 <_obstack_memory_used@@Base+0xc7f8>  // b.lo, b.ul, b.last
  4691e8:	mov	sp, x29
  4691ec:	ldp	x19, x20, [sp, #16]
  4691f0:	ldp	x21, x22, [sp, #32]
  4691f4:	ldp	x23, x24, [sp, #48]
  4691f8:	ldp	x25, x26, [sp, #64]
  4691fc:	ldp	x27, x28, [sp, #80]
  469200:	ldp	x29, x30, [sp], #112
  469204:	ret
  469208:	mov	x1, #0x0                   	// #0
  46920c:	mov	w0, #0x0                   	// #0
  469210:	ldrb	w3, [x19], #1
  469214:	and	x2, x3, #0x7f
  469218:	lsl	x2, x2, x0
  46921c:	add	w0, w0, #0x7
  469220:	orr	x1, x1, x2
  469224:	tbnz	w3, #7, 469210 <_obstack_memory_used@@Base+0xc8e8>
  469228:	str	x1, [x21, #848]
  46922c:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469230:	mov	x1, #0x0                   	// #0
  469234:	mov	w0, #0x0                   	// #0
  469238:	ldrb	w3, [x19], #1
  46923c:	and	x2, x3, #0x7f
  469240:	lsl	x2, x2, x0
  469244:	add	w0, w0, #0x7
  469248:	orr	x1, x1, x2
  46924c:	tbnz	w3, #7, 469238 <_obstack_memory_used@@Base+0xc910>
  469250:	cmp	x1, #0x61
  469254:	b.hi	469268 <_obstack_memory_used@@Base+0xc940>  // b.pmore
  469258:	lsl	x1, x1, #4
  46925c:	add	x0, x20, x1
  469260:	str	w26, [x0, #8]
  469264:	str	x19, [x20, x1]
  469268:	mov	x3, #0x0                   	// #0
  46926c:	mov	w1, #0x0                   	// #0
  469270:	ldrb	w2, [x19], #1
  469274:	and	x0, x2, #0x7f
  469278:	lsl	x0, x0, x1
  46927c:	add	w1, w1, #0x7
  469280:	orr	x3, x3, x0
  469284:	tbnz	w2, #7, 469270 <_obstack_memory_used@@Base+0xc948>
  469288:	add	x19, x19, x3
  46928c:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469290:	mov	x1, #0x0                   	// #0
  469294:	mov	w0, #0x0                   	// #0
  469298:	ldrb	w3, [x19], #1
  46929c:	and	x2, x3, #0x7f
  4692a0:	lsl	x2, x2, x0
  4692a4:	add	w0, w0, #0x7
  4692a8:	orr	x1, x1, x2
  4692ac:	tbnz	w3, #7, 469298 <_obstack_memory_used@@Base+0xc970>
  4692b0:	mov	x4, #0x0                   	// #0
  4692b4:	mov	w2, #0x0                   	// #0
  4692b8:	ldrb	w3, [x19], #1
  4692bc:	and	x0, x3, #0x7f
  4692c0:	lsl	x0, x0, x2
  4692c4:	add	w2, w2, #0x7
  4692c8:	orr	x4, x4, x0
  4692cc:	tbnz	w3, #7, 4692b8 <_obstack_memory_used@@Base+0xc990>
  4692d0:	cmp	w2, #0x3f
  4692d4:	b.hi	4692ec <_obstack_memory_used@@Base+0xc9c4>  // b.pmore
  4692d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4692dc:	tst	x3, #0x40
  4692e0:	lsl	x0, x0, x2
  4692e4:	orr	x0, x4, x0
  4692e8:	csel	x4, x0, x4, ne  // ne = any
  4692ec:	ldr	x0, [x20, #1624]
  4692f0:	cmp	x1, #0x61
  4692f4:	mul	x4, x4, x0
  4692f8:	b.hi	4691c4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  4692fc:	lsl	x1, x1, #4
  469300:	mov	w2, #0x4                   	// #4
  469304:	add	x0, x20, x1
  469308:	str	w2, [x0, #8]
  46930c:	str	x4, [x20, x1]
  469310:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469314:	mov	x1, #0x0                   	// #0
  469318:	mov	w0, #0x0                   	// #0
  46931c:	ldrb	w3, [x19], #1
  469320:	and	x2, x3, #0x7f
  469324:	lsl	x2, x2, x0
  469328:	add	w0, w0, #0x7
  46932c:	orr	x1, x1, x2
  469330:	tbnz	w3, #7, 46931c <_obstack_memory_used@@Base+0xc9f4>
  469334:	mov	x4, #0x0                   	// #0
  469338:	mov	w2, #0x0                   	// #0
  46933c:	nop
  469340:	ldrb	w3, [x19], #1
  469344:	and	x0, x3, #0x7f
  469348:	lsl	x0, x0, x2
  46934c:	add	w2, w2, #0x7
  469350:	orr	x4, x4, x0
  469354:	tbnz	w3, #7, 469340 <_obstack_memory_used@@Base+0xca18>
  469358:	b	4692ec <_obstack_memory_used@@Base+0xc9c4>
  46935c:	mov	x1, #0x0                   	// #0
  469360:	mov	w0, #0x0                   	// #0
  469364:	ldrb	w3, [x19], #1
  469368:	and	x2, x3, #0x7f
  46936c:	lsl	x2, x2, x0
  469370:	add	w0, w0, #0x7
  469374:	orr	x1, x1, x2
  469378:	tbnz	w3, #7, 469364 <_obstack_memory_used@@Base+0xca3c>
  46937c:	cmp	w0, #0x3f
  469380:	b.hi	469398 <_obstack_memory_used@@Base+0xca70>  // b.pmore
  469384:	mov	x2, #0xffffffffffffffff    	// #-1
  469388:	tst	x3, #0x40
  46938c:	lsl	x0, x2, x0
  469390:	orr	x0, x1, x0
  469394:	csel	x1, x0, x1, ne  // ne = any
  469398:	ldr	x0, [x20, #1624]
  46939c:	mul	x1, x0, x1
  4693a0:	str	x1, [x20, #1576]
  4693a4:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  4693a8:	mov	x1, #0x0                   	// #0
  4693ac:	mov	w0, #0x0                   	// #0
  4693b0:	ldrb	w3, [x19], #1
  4693b4:	and	x2, x3, #0x7f
  4693b8:	lsl	x2, x2, x0
  4693bc:	add	w0, w0, #0x7
  4693c0:	orr	x1, x1, x2
  4693c4:	tbnz	w3, #7, 4693b0 <_obstack_memory_used@@Base+0xca88>
  4693c8:	mov	x3, #0x0                   	// #0
  4693cc:	mov	w2, #0x0                   	// #0
  4693d0:	str	x1, [x20, #1584]
  4693d4:	nop
  4693d8:	ldrb	w1, [x19], #1
  4693dc:	and	x0, x1, #0x7f
  4693e0:	lsl	x0, x0, x2
  4693e4:	add	w2, w2, #0x7
  4693e8:	orr	x3, x3, x0
  4693ec:	tbnz	w1, #7, 4693d8 <_obstack_memory_used@@Base+0xcab0>
  4693f0:	cmp	w2, #0x3f
  4693f4:	b.hi	46940c <_obstack_memory_used@@Base+0xcae4>  // b.pmore
  4693f8:	mov	x0, #0xffffffffffffffff    	// #-1
  4693fc:	tst	x1, #0x40
  469400:	lsl	x0, x0, x2
  469404:	orr	x0, x3, x0
  469408:	csel	x3, x0, x3, ne  // ne = any
  46940c:	ldr	x0, [x20, #1624]
  469410:	str	w24, [x20, #1600]
  469414:	mul	x3, x0, x3
  469418:	str	x3, [x20, #1576]
  46941c:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469420:	mov	x1, #0x0                   	// #0
  469424:	mov	w0, #0x0                   	// #0
  469428:	ldrb	w3, [x19], #1
  46942c:	and	x2, x3, #0x7f
  469430:	lsl	x2, x2, x0
  469434:	add	w0, w0, #0x7
  469438:	orr	x1, x1, x2
  46943c:	tbnz	w3, #7, 469428 <_obstack_memory_used@@Base+0xcb00>
  469440:	mov	x4, #0x0                   	// #0
  469444:	mov	w2, #0x0                   	// #0
  469448:	ldrb	w3, [x19], #1
  46944c:	and	x0, x3, #0x7f
  469450:	lsl	x0, x0, x2
  469454:	add	w2, w2, #0x7
  469458:	orr	x4, x4, x0
  46945c:	tbnz	w3, #7, 469448 <_obstack_memory_used@@Base+0xcb20>
  469460:	cmp	w2, #0x3f
  469464:	b.hi	46947c <_obstack_memory_used@@Base+0xcb54>  // b.pmore
  469468:	mov	x0, #0xffffffffffffffff    	// #-1
  46946c:	tst	x3, #0x40
  469470:	lsl	x0, x0, x2
  469474:	orr	x0, x4, x0
  469478:	csel	x4, x0, x4, ne  // ne = any
  46947c:	ldr	x0, [x20, #1624]
  469480:	cmp	x1, #0x61
  469484:	mul	x4, x4, x0
  469488:	b.hi	4691c4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  46948c:	lsl	x1, x1, #4
  469490:	add	x0, x20, x1
  469494:	str	w24, [x0, #8]
  469498:	str	x4, [x20, x1]
  46949c:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  4694a0:	mov	x1, #0x0                   	// #0
  4694a4:	mov	w0, #0x0                   	// #0
  4694a8:	ldrb	w3, [x19], #1
  4694ac:	and	x2, x3, #0x7f
  4694b0:	lsl	x2, x2, x0
  4694b4:	add	w0, w0, #0x7
  4694b8:	orr	x1, x1, x2
  4694bc:	tbnz	w3, #7, 4694a8 <_obstack_memory_used@@Base+0xcb80>
  4694c0:	cmp	x1, #0x61
  4694c4:	b.hi	4694dc <_obstack_memory_used@@Base+0xcbb4>  // b.pmore
  4694c8:	lsl	x1, x1, #4
  4694cc:	mov	w2, #0x3                   	// #3
  4694d0:	add	x0, x20, x1
  4694d4:	str	w2, [x0, #8]
  4694d8:	str	x19, [x20, x1]
  4694dc:	mov	x3, #0x0                   	// #0
  4694e0:	mov	w1, #0x0                   	// #0
  4694e4:	nop
  4694e8:	ldrb	w2, [x19], #1
  4694ec:	and	x0, x2, #0x7f
  4694f0:	lsl	x0, x0, x1
  4694f4:	add	w1, w1, #0x7
  4694f8:	orr	x3, x3, x0
  4694fc:	tbnz	w2, #7, 4694e8 <_obstack_memory_used@@Base+0xcbc0>
  469500:	add	x19, x19, x3
  469504:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469508:	mov	x1, #0x0                   	// #0
  46950c:	mov	w0, #0x0                   	// #0
  469510:	ldrb	w3, [x19], #1
  469514:	and	x2, x3, #0x7f
  469518:	lsl	x2, x2, x0
  46951c:	add	w0, w0, #0x7
  469520:	orr	x1, x1, x2
  469524:	tbnz	w3, #7, 469510 <_obstack_memory_used@@Base+0xcbe8>
  469528:	str	x1, [x20, #1576]
  46952c:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469530:	mov	x1, #0x0                   	// #0
  469534:	mov	w0, #0x0                   	// #0
  469538:	ldrb	w3, [x19], #1
  46953c:	and	x2, x3, #0x7f
  469540:	lsl	x2, x2, x0
  469544:	add	w0, w0, #0x7
  469548:	orr	x1, x1, x2
  46954c:	tbnz	w3, #7, 469538 <_obstack_memory_used@@Base+0xcc10>
  469550:	str	x1, [x20, #1584]
  469554:	str	w24, [x20, #1600]
  469558:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  46955c:	mov	x1, #0x0                   	// #0
  469560:	mov	w0, #0x0                   	// #0
  469564:	ldrb	w3, [x19], #1
  469568:	and	x2, x3, #0x7f
  46956c:	lsl	x2, x2, x0
  469570:	add	w0, w0, #0x7
  469574:	orr	x1, x1, x2
  469578:	tbnz	w3, #7, 469564 <_obstack_memory_used@@Base+0xcc3c>
  46957c:	mov	x3, #0x0                   	// #0
  469580:	mov	w2, #0x0                   	// #0
  469584:	str	x1, [x20, #1584]
  469588:	ldrb	w1, [x19], #1
  46958c:	and	x0, x1, #0x7f
  469590:	lsl	x0, x0, x2
  469594:	add	w2, w2, #0x7
  469598:	orr	x3, x3, x0
  46959c:	tbnz	w1, #7, 469588 <_obstack_memory_used@@Base+0xcc60>
  4695a0:	str	x3, [x20, #1576]
  4695a4:	str	w24, [x20, #1600]
  4695a8:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  4695ac:	mov	x1, #0x0                   	// #0
  4695b0:	mov	w0, #0x0                   	// #0
  4695b4:	ldrb	w3, [x19], #1
  4695b8:	and	x2, x3, #0x7f
  4695bc:	lsl	x2, x2, x0
  4695c0:	add	w0, w0, #0x7
  4695c4:	orr	x1, x1, x2
  4695c8:	tbnz	w3, #7, 4695b4 <_obstack_memory_used@@Base+0xcc8c>
  4695cc:	mov	x4, #0x0                   	// #0
  4695d0:	mov	w2, #0x0                   	// #0
  4695d4:	nop
  4695d8:	ldrb	w3, [x19], #1
  4695dc:	and	x0, x3, #0x7f
  4695e0:	lsl	x0, x0, x2
  4695e4:	add	w2, w2, #0x7
  4695e8:	orr	x4, x4, x0
  4695ec:	tbnz	w3, #7, 4695d8 <_obstack_memory_used@@Base+0xccb0>
  4695f0:	cmp	x1, #0x61
  4695f4:	b.hi	4691c4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  4695f8:	lsl	x1, x1, #4
  4695fc:	mov	w2, #0x2                   	// #2
  469600:	add	x0, x20, x1
  469604:	str	w2, [x0, #8]
  469608:	str	x4, [x20, x1]
  46960c:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469610:	mov	x1, #0x0                   	// #0
  469614:	mov	w0, #0x0                   	// #0
  469618:	ldrb	w3, [x19], #1
  46961c:	and	x2, x3, #0x7f
  469620:	lsl	x2, x2, x0
  469624:	add	w0, w0, #0x7
  469628:	orr	x1, x1, x2
  46962c:	tbnz	w3, #7, 469618 <_obstack_memory_used@@Base+0xccf0>
  469630:	cmp	x1, #0x61
  469634:	b.hi	4691c4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  469638:	add	x1, x20, x1, lsl #4
  46963c:	str	wzr, [x1, #8]
  469640:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469644:	mov	x1, #0x0                   	// #0
  469648:	mov	w0, #0x0                   	// #0
  46964c:	ldrb	w3, [x19], #1
  469650:	and	x2, x3, #0x7f
  469654:	lsl	x2, x2, x0
  469658:	add	w0, w0, #0x7
  46965c:	orr	x1, x1, x2
  469660:	tbnz	w3, #7, 46964c <_obstack_memory_used@@Base+0xcd24>
  469664:	cmp	x1, #0x61
  469668:	b.hi	4691c4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  46966c:	add	x1, x20, x1, lsl #4
  469670:	mov	w0, #0x6                   	// #6
  469674:	str	w0, [x1, #8]
  469678:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  46967c:	mov	x1, #0x0                   	// #0
  469680:	mov	w0, #0x0                   	// #0
  469684:	ldrb	w3, [x19], #1
  469688:	and	x2, x3, #0x7f
  46968c:	lsl	x2, x2, x0
  469690:	add	w0, w0, #0x7
  469694:	orr	x1, x1, x2
  469698:	tbnz	w3, #7, 469684 <_obstack_memory_used@@Base+0xcd5c>
  46969c:	b	469630 <_obstack_memory_used@@Base+0xcd08>
  4696a0:	mov	x1, #0x0                   	// #0
  4696a4:	mov	w0, #0x0                   	// #0
  4696a8:	ldrb	w3, [x19], #1
  4696ac:	and	x2, x3, #0x7f
  4696b0:	lsl	x2, x2, x0
  4696b4:	add	w0, w0, #0x7
  4696b8:	orr	x1, x1, x2
  4696bc:	tbnz	w3, #7, 4696a8 <_obstack_memory_used@@Base+0xcd80>
  4696c0:	mov	x4, #0x0                   	// #0
  4696c4:	mov	w2, #0x0                   	// #0
  4696c8:	ldrb	w3, [x19], #1
  4696cc:	and	x0, x3, #0x7f
  4696d0:	lsl	x0, x0, x2
  4696d4:	add	w2, w2, #0x7
  4696d8:	orr	x4, x4, x0
  4696dc:	tbnz	w3, #7, 4696c8 <_obstack_memory_used@@Base+0xcda0>
  4696e0:	b	46947c <_obstack_memory_used@@Base+0xcb54>
  4696e4:	ldr	x0, [x20, #1632]
  4696e8:	and	x4, x4, #0x3f
  4696ec:	madd	x4, x4, x0, x1
  4696f0:	str	x4, [x20, #1608]
  4696f4:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  4696f8:	ubfiz	x4, x4, #4, #6
  4696fc:	add	x4, x20, x4
  469700:	str	wzr, [x4, #8]
  469704:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469708:	and	w4, w4, #0x3f
  46970c:	mov	x1, #0x0                   	// #0
  469710:	mov	w5, #0x0                   	// #0
  469714:	nop
  469718:	ldrb	w6, [x19], #1
  46971c:	and	x0, x6, #0x7f
  469720:	lsl	x0, x0, x5
  469724:	add	w5, w5, #0x7
  469728:	orr	x1, x1, x0
  46972c:	tbnz	w6, #7, 469718 <_obstack_memory_used@@Base+0xcdf0>
  469730:	ubfiz	x4, x4, #4, #6
  469734:	ldr	x2, [x20, #1624]
  469738:	add	x0, x20, x4
  46973c:	mul	x1, x1, x2
  469740:	str	w24, [x0, #8]
  469744:	str	x1, [x20, x4]
  469748:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  46974c:	ldr	x0, [x20, #544]
  469750:	eor	x0, x0, #0x1
  469754:	str	x0, [x20, #544]
  469758:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  46975c:	ldrb	w28, [x20, #1648]
  469760:	mov	x1, x21
  469764:	mov	w0, w28
  469768:	bl	469040 <_obstack_memory_used@@Base+0xc718>
  46976c:	mov	x2, x19
  469770:	mov	x1, x0
  469774:	mov	x3, x27
  469778:	mov	w0, w28
  46977c:	bl	468ee0 <_obstack_memory_used@@Base+0xc5b8>
  469780:	mov	x19, x0
  469784:	ldr	x1, [x29, #104]
  469788:	str	x1, [x20, #1608]
  46978c:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469790:	ldrb	w2, [x0, #1]
  469794:	add	x19, x0, #0x2
  469798:	ldr	x0, [x20, #1632]
  46979c:	madd	x1, x2, x0, x1
  4697a0:	str	x1, [x20, #1608]
  4697a4:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  4697a8:	ldurh	w2, [x0, #1]
  4697ac:	add	x19, x0, #0x3
  4697b0:	ldr	x0, [x20, #1632]
  4697b4:	madd	x1, x2, x0, x1
  4697b8:	str	x1, [x20, #1608]
  4697bc:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  4697c0:	ldur	w2, [x0, #1]
  4697c4:	add	x19, x0, #0x5
  4697c8:	ldr	x0, [x20, #1632]
  4697cc:	madd	x1, x2, x0, x1
  4697d0:	str	x1, [x20, #1608]
  4697d4:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  4697d8:	cbz	x25, 469854 <_obstack_memory_used@@Base+0xcf2c>
  4697dc:	mov	x3, x25
  4697e0:	ldr	x25, [x25, #1568]
  4697e4:	mov	x1, x20
  4697e8:	mov	x0, x3
  4697ec:	mov	x2, #0x648                 	// #1608
  4697f0:	bl	402220 <memcpy@plt>
  4697f4:	str	x0, [x20, #1568]
  4697f8:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  4697fc:	ldr	x28, [x20, #1568]
  469800:	mov	x0, x20
  469804:	mov	x2, #0x648                 	// #1608
  469808:	mov	x1, x28
  46980c:	bl	402220 <memcpy@plt>
  469810:	str	x25, [x28, #1568]
  469814:	mov	x25, x28
  469818:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  46981c:	mov	w0, #0x2                   	// #2
  469820:	mov	x3, #0x0                   	// #0
  469824:	mov	w1, #0x0                   	// #0
  469828:	str	x19, [x20, #1592]
  46982c:	str	w0, [x20, #1600]
  469830:	ldrb	w2, [x19], #1
  469834:	and	x0, x2, #0x7f
  469838:	lsl	x0, x0, x1
  46983c:	add	w1, w1, #0x7
  469840:	orr	x3, x3, x0
  469844:	tbnz	w2, #7, 469830 <_obstack_memory_used@@Base+0xcf08>
  469848:	add	x19, x19, x3
  46984c:	b	4691c4 <_obstack_memory_used@@Base+0xc89c>
  469850:	ret
  469854:	sub	sp, sp, #0x650
  469858:	mov	x3, sp
  46985c:	b	4697e4 <_obstack_memory_used@@Base+0xcebc>
  469860:	bl	402540 <abort@plt>
  469864:	nop
  469868:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46986c:	add	x1, x2, #0x948
  469870:	mov	w0, #0x8                   	// #8
  469874:	strb	w0, [x2, #2376]
  469878:	strb	w0, [x1, #1]
  46987c:	strb	w0, [x1, #2]
  469880:	strb	w0, [x1, #3]
  469884:	strb	w0, [x1, #4]
  469888:	strb	w0, [x1, #5]
  46988c:	strb	w0, [x1, #6]
  469890:	strb	w0, [x1, #7]
  469894:	strb	w0, [x1, #8]
  469898:	strb	w0, [x1, #9]
  46989c:	strb	w0, [x1, #10]
  4698a0:	strb	w0, [x1, #11]
  4698a4:	strb	w0, [x1, #12]
  4698a8:	strb	w0, [x1, #13]
  4698ac:	strb	w0, [x1, #14]
  4698b0:	strb	w0, [x1, #15]
  4698b4:	strb	w0, [x1, #16]
  4698b8:	strb	w0, [x1, #17]
  4698bc:	strb	w0, [x1, #18]
  4698c0:	strb	w0, [x1, #19]
  4698c4:	strb	w0, [x1, #20]
  4698c8:	strb	w0, [x1, #21]
  4698cc:	strb	w0, [x1, #22]
  4698d0:	strb	w0, [x1, #23]
  4698d4:	strb	w0, [x1, #24]
  4698d8:	strb	w0, [x1, #25]
  4698dc:	strb	w0, [x1, #26]
  4698e0:	strb	w0, [x1, #27]
  4698e4:	strb	w0, [x1, #28]
  4698e8:	strb	w0, [x1, #29]
  4698ec:	strb	w0, [x1, #30]
  4698f0:	strb	w0, [x1, #31]
  4698f4:	strb	w0, [x1, #64]
  4698f8:	strb	w0, [x1, #46]
  4698fc:	strb	w0, [x1, #65]
  469900:	strb	w0, [x1, #66]
  469904:	strb	w0, [x1, #67]
  469908:	strb	w0, [x1, #68]
  46990c:	strb	w0, [x1, #69]
  469910:	strb	w0, [x1, #70]
  469914:	strb	w0, [x1, #71]
  469918:	strb	w0, [x1, #72]
  46991c:	strb	w0, [x1, #73]
  469920:	strb	w0, [x1, #74]
  469924:	strb	w0, [x1, #75]
  469928:	strb	w0, [x1, #76]
  46992c:	strb	w0, [x1, #77]
  469930:	strb	w0, [x1, #78]
  469934:	strb	w0, [x1, #79]
  469938:	strb	w0, [x1, #80]
  46993c:	strb	w0, [x1, #81]
  469940:	strb	w0, [x1, #82]
  469944:	strb	w0, [x1, #83]
  469948:	strb	w0, [x1, #84]
  46994c:	strb	w0, [x1, #85]
  469950:	strb	w0, [x1, #86]
  469954:	strb	w0, [x1, #87]
  469958:	strb	w0, [x1, #88]
  46995c:	strb	w0, [x1, #89]
  469960:	strb	w0, [x1, #90]
  469964:	strb	w0, [x1, #91]
  469968:	strb	w0, [x1, #92]
  46996c:	strb	w0, [x1, #93]
  469970:	strb	w0, [x1, #94]
  469974:	strb	w0, [x1, #95]
  469978:	strb	w0, [x1, #48]
  46997c:	strb	w0, [x1, #49]
  469980:	strb	w0, [x1, #50]
  469984:	strb	w0, [x1, #51]
  469988:	strb	w0, [x1, #52]
  46998c:	strb	w0, [x1, #53]
  469990:	strb	w0, [x1, #54]
  469994:	strb	w0, [x1, #55]
  469998:	strb	w0, [x1, #56]
  46999c:	strb	w0, [x1, #57]
  4699a0:	strb	w0, [x1, #58]
  4699a4:	strb	w0, [x1, #59]
  4699a8:	strb	w0, [x1, #60]
  4699ac:	strb	w0, [x1, #61]
  4699b0:	strb	w0, [x1, #62]
  4699b4:	strb	w0, [x1, #63]
  4699b8:	strb	w0, [x1, #96]
  4699bc:	ret
  4699c0:	stp	x29, x30, [sp, #-112]!
  4699c4:	mov	x2, #0x680                 	// #1664
  4699c8:	mov	x29, sp
  4699cc:	stp	x19, x20, [sp, #16]
  4699d0:	mov	x20, x0
  4699d4:	mov	x19, x1
  4699d8:	mov	x0, x1
  4699dc:	mov	w1, #0x0                   	// #0
  4699e0:	bl	402440 <memset@plt>
  4699e4:	str	xzr, [x20, #800]
  4699e8:	ldr	x2, [x20, #792]
  4699ec:	str	xzr, [x20, #848]
  4699f0:	cbz	x2, 469d64 <_obstack_memory_used@@Base+0xd43c>
  4699f4:	ldr	d0, [x20, #832]
  4699f8:	add	x1, x20, #0x328
  4699fc:	stp	x21, x22, [sp, #32]
  469a00:	cmge	d0, d0, #0
  469a04:	fmov	x0, d0
  469a08:	add	x0, x2, x0
  469a0c:	bl	46d100 <_obstack_memory_used@@Base+0x107d8>
  469a10:	mov	x22, x0
  469a14:	cbz	x0, 469dc8 <_obstack_memory_used@@Base+0xd4a0>
  469a18:	ldrsw	x1, [x0, #4]
  469a1c:	stp	x23, x24, [sp, #48]
  469a20:	add	x23, x0, #0x4
  469a24:	sub	x23, x23, x1
  469a28:	ldr	x0, [x20, #824]
  469a2c:	str	x0, [x19, #1608]
  469a30:	add	x21, x23, #0x9
  469a34:	mov	x0, x21
  469a38:	bl	402270 <strlen@plt>
  469a3c:	ldrb	w1, [x23, #9]
  469a40:	add	x2, x0, #0x1
  469a44:	add	x2, x21, x2
  469a48:	cmp	w1, #0x65
  469a4c:	b.eq	469c38 <_obstack_memory_used@@Base+0xd310>  // b.none
  469a50:	ldrb	w6, [x23, #8]
  469a54:	ldrb	w3, [x2]
  469a58:	cmp	w6, #0x3
  469a5c:	b.hi	469ea8 <_obstack_memory_used@@Base+0xd580>  // b.pmore
  469a60:	stp	x25, x26, [sp, #64]
  469a64:	stp	x27, x28, [sp, #80]
  469a68:	mov	x5, #0x0                   	// #0
  469a6c:	mov	w4, #0x0                   	// #0
  469a70:	b	469a78 <_obstack_memory_used@@Base+0xd150>
  469a74:	ldrb	w3, [x2]
  469a78:	and	x1, x3, #0x7f
  469a7c:	add	x2, x2, #0x1
  469a80:	lsl	x1, x1, x4
  469a84:	add	w4, w4, #0x7
  469a88:	orr	x5, x5, x1
  469a8c:	tbnz	w3, #7, 469a74 <_obstack_memory_used@@Base+0xd14c>
  469a90:	mov	x0, #0x0                   	// #0
  469a94:	mov	w3, #0x0                   	// #0
  469a98:	str	x5, [x19, #1632]
  469a9c:	nop
  469aa0:	mov	x5, x2
  469aa4:	ldrb	w4, [x2], #1
  469aa8:	and	x1, x4, #0x7f
  469aac:	lsl	x1, x1, x3
  469ab0:	add	w3, w3, #0x7
  469ab4:	orr	x0, x0, x1
  469ab8:	tbnz	w4, #7, 469aa0 <_obstack_memory_used@@Base+0xd178>
  469abc:	cmp	w3, #0x3f
  469ac0:	b.hi	469ad8 <_obstack_memory_used@@Base+0xd1b0>  // b.pmore
  469ac4:	mov	x1, #0xffffffffffffffff    	// #-1
  469ac8:	tst	x4, #0x40
  469acc:	lsl	x3, x1, x3
  469ad0:	orr	x3, x0, x3
  469ad4:	csel	x0, x3, x0, ne  // ne = any
  469ad8:	str	x0, [x19, #1624]
  469adc:	cmp	w6, #0x1
  469ae0:	mov	x4, #0x0                   	// #0
  469ae4:	mov	w3, #0x0                   	// #0
  469ae8:	b.eq	469c54 <_obstack_memory_used@@Base+0xd32c>  // b.none
  469aec:	nop
  469af0:	ldrb	w0, [x2], #1
  469af4:	and	x1, x0, #0x7f
  469af8:	lsl	x1, x1, x3
  469afc:	add	w3, w3, #0x7
  469b00:	orr	x4, x4, x1
  469b04:	tbnz	w0, #7, 469af0 <_obstack_memory_used@@Base+0xd1c8>
  469b08:	mov	w0, #0xffffffff            	// #-1
  469b0c:	str	x4, [x19, #1640]
  469b10:	strb	w0, [x19, #1649]
  469b14:	ldrb	w3, [x21]
  469b18:	cmp	w3, #0x7a
  469b1c:	b.eq	469c74 <_obstack_memory_used@@Base+0xd34c>  // b.none
  469b20:	mov	x24, #0x0                   	// #0
  469b24:	cbz	w3, 469f0c <_obstack_memory_used@@Base+0xd5e4>
  469b28:	add	x21, x21, #0x1
  469b2c:	add	x25, sp, #0x68
  469b30:	mov	w26, #0x1                   	// #1
  469b34:	b	469b5c <_obstack_memory_used@@Base+0xd234>
  469b38:	cmp	w3, #0x52
  469b3c:	b.eq	469cb8 <_obstack_memory_used@@Base+0xd390>  // b.none
  469b40:	cmp	w3, #0x50
  469b44:	b.eq	469cc4 <_obstack_memory_used@@Base+0xd39c>  // b.none
  469b48:	cmp	w3, #0x53
  469b4c:	b.ne	469d78 <_obstack_memory_used@@Base+0xd450>  // b.any
  469b50:	strb	w26, [x19, #1651]
  469b54:	ldrb	w3, [x21], #1
  469b58:	cbz	w3, 469b74 <_obstack_memory_used@@Base+0xd24c>
  469b5c:	cmp	w3, #0x4c
  469b60:	b.ne	469b38 <_obstack_memory_used@@Base+0xd210>  // b.any
  469b64:	ldrb	w0, [x2], #1
  469b68:	strb	w0, [x19, #1649]
  469b6c:	ldrb	w3, [x21], #1
  469b70:	cbnz	w3, 469b5c <_obstack_memory_used@@Base+0xd234>
  469b74:	cbz	x24, 469d74 <_obstack_memory_used@@Base+0xd44c>
  469b78:	ldr	w1, [x23]
  469b7c:	mov	x0, x24
  469b80:	mov	x3, x19
  469b84:	mov	x2, x20
  469b88:	add	x1, x1, #0x4
  469b8c:	add	x1, x23, x1
  469b90:	bl	4690b8 <_obstack_memory_used@@Base+0xc790>
  469b94:	ldrb	w0, [x19, #1648]
  469b98:	cmp	w0, #0xff
  469b9c:	b.eq	469ea0 <_obstack_memory_used@@Base+0xd578>  // b.none
  469ba0:	and	w0, w0, #0x7
  469ba4:	cmp	w0, #0x2
  469ba8:	b.eq	469e98 <_obstack_memory_used@@Base+0xd570>  // b.none
  469bac:	b.ls	469d0c <_obstack_memory_used@@Base+0xd3e4>  // b.plast
  469bb0:	cmp	w0, #0x3
  469bb4:	mov	x21, #0x10                  	// #16
  469bb8:	b.ne	469cfc <_obstack_memory_used@@Base+0xd3d4>  // b.any
  469bbc:	ldrb	w0, [x19, #1650]
  469bc0:	add	x21, x22, x21
  469bc4:	ldrb	w24, [x19, #1649]
  469bc8:	cbz	w0, 469d24 <_obstack_memory_used@@Base+0xd3fc>
  469bcc:	mov	x0, #0x0                   	// #0
  469bd0:	mov	w2, #0x0                   	// #0
  469bd4:	nop
  469bd8:	ldrb	w3, [x21], #1
  469bdc:	and	x1, x3, #0x7f
  469be0:	lsl	x1, x1, x2
  469be4:	add	w2, w2, #0x7
  469be8:	orr	x0, x0, x1
  469bec:	tbnz	w3, #7, 469bd8 <_obstack_memory_used@@Base+0xd2b0>
  469bf0:	add	x23, x21, x0
  469bf4:	cmp	w24, #0xff
  469bf8:	b.ne	469d9c <_obstack_memory_used@@Base+0xd474>  // b.any
  469bfc:	ldr	w1, [x22]
  469c00:	mov	x0, x23
  469c04:	mov	x3, x19
  469c08:	mov	x2, x20
  469c0c:	add	x1, x1, #0x4
  469c10:	add	x1, x22, x1
  469c14:	bl	4690b8 <_obstack_memory_used@@Base+0xc790>
  469c18:	ldp	x21, x22, [sp, #32]
  469c1c:	mov	w0, #0x0                   	// #0
  469c20:	ldp	x23, x24, [sp, #48]
  469c24:	ldp	x25, x26, [sp, #64]
  469c28:	ldp	x27, x28, [sp, #80]
  469c2c:	ldp	x19, x20, [sp, #16]
  469c30:	ldp	x29, x30, [sp], #112
  469c34:	ret
  469c38:	ldrb	w0, [x23, #10]
  469c3c:	cmp	w0, #0x68
  469c40:	b.ne	469a50 <_obstack_memory_used@@Base+0xd128>  // b.any
  469c44:	ldr	x0, [x2], #8
  469c48:	add	x21, x23, #0xb
  469c4c:	str	x0, [x19, #1656]
  469c50:	b	469a50 <_obstack_memory_used@@Base+0xd128>
  469c54:	ldrb	w0, [x2]
  469c58:	add	x2, x5, #0x2
  469c5c:	str	x0, [x19, #1640]
  469c60:	mov	w0, #0xffffffff            	// #-1
  469c64:	strb	w0, [x19, #1649]
  469c68:	ldrb	w3, [x21]
  469c6c:	cmp	w3, #0x7a
  469c70:	b.ne	469b20 <_obstack_memory_used@@Base+0xd1f8>  // b.any
  469c74:	mov	x0, #0x0                   	// #0
  469c78:	mov	w3, #0x0                   	// #0
  469c7c:	nop
  469c80:	ldrb	w4, [x2], #1
  469c84:	and	x1, x4, #0x7f
  469c88:	lsl	x1, x1, x3
  469c8c:	add	w3, w3, #0x7
  469c90:	orr	x0, x0, x1
  469c94:	tbnz	w4, #7, 469c80 <_obstack_memory_used@@Base+0xd358>
  469c98:	mov	w1, #0x1                   	// #1
  469c9c:	strb	w1, [x19, #1650]
  469ca0:	add	x24, x2, x0
  469ca4:	add	x0, x21, #0x1
  469ca8:	ldrb	w3, [x21, #1]
  469cac:	cbz	w3, 469b78 <_obstack_memory_used@@Base+0xd250>
  469cb0:	mov	x21, x0
  469cb4:	b	469b28 <_obstack_memory_used@@Base+0xd200>
  469cb8:	ldrb	w0, [x2], #1
  469cbc:	strb	w0, [x19, #1648]
  469cc0:	b	469b54 <_obstack_memory_used@@Base+0xd22c>
  469cc4:	mov	x27, x2
  469cc8:	mov	x1, x20
  469ccc:	ldrb	w28, [x27], #1
  469cd0:	mov	w0, w28
  469cd4:	bl	469040 <_obstack_memory_used@@Base+0xc718>
  469cd8:	mov	x2, x27
  469cdc:	mov	x1, x0
  469ce0:	mov	x3, x25
  469ce4:	mov	w0, w28
  469ce8:	bl	468ee0 <_obstack_memory_used@@Base+0xc5b8>
  469cec:	mov	x2, x0
  469cf0:	ldr	x1, [sp, #104]
  469cf4:	str	x1, [x19, #1616]
  469cf8:	b	469b54 <_obstack_memory_used@@Base+0xd22c>
  469cfc:	cmp	w0, #0x4
  469d00:	mov	x21, #0x18                  	// #24
  469d04:	b.eq	469bbc <_obstack_memory_used@@Base+0xd294>  // b.none
  469d08:	bl	402540 <abort@plt>
  469d0c:	mov	x21, #0x18                  	// #24
  469d10:	cbnz	w0, 469d08 <_obstack_memory_used@@Base+0xd3e0>
  469d14:	ldrb	w0, [x19, #1650]
  469d18:	add	x21, x22, x21
  469d1c:	ldrb	w24, [x19, #1649]
  469d20:	cbnz	w0, 469bcc <_obstack_memory_used@@Base+0xd2a4>
  469d24:	mov	x23, x21
  469d28:	cmp	w24, #0xff
  469d2c:	b.eq	469bfc <_obstack_memory_used@@Base+0xd2d4>  // b.none
  469d30:	mov	x1, x20
  469d34:	mov	w0, w24
  469d38:	bl	469040 <_obstack_memory_used@@Base+0xc718>
  469d3c:	mov	x1, x0
  469d40:	mov	x2, x21
  469d44:	mov	w0, w24
  469d48:	add	x3, sp, #0x68
  469d4c:	bl	468ee0 <_obstack_memory_used@@Base+0xc5b8>
  469d50:	ldr	x1, [sp, #104]
  469d54:	mov	x23, x0
  469d58:	str	x1, [x20, #800]
  469d5c:	b	469bfc <_obstack_memory_used@@Base+0xd2d4>
  469d60:	ldp	x21, x22, [sp, #32]
  469d64:	mov	w0, #0x5                   	// #5
  469d68:	ldp	x19, x20, [sp, #16]
  469d6c:	ldp	x29, x30, [sp], #112
  469d70:	ret
  469d74:	mov	x24, x2
  469d78:	cbnz	x24, 469b78 <_obstack_memory_used@@Base+0xd250>
  469d7c:	ldp	x25, x26, [sp, #64]
  469d80:	ldp	x27, x28, [sp, #80]
  469d84:	mov	w0, #0x3                   	// #3
  469d88:	ldp	x19, x20, [sp, #16]
  469d8c:	ldp	x21, x22, [sp, #32]
  469d90:	ldp	x23, x24, [sp, #48]
  469d94:	ldp	x29, x30, [sp], #112
  469d98:	ret
  469d9c:	mov	x1, x20
  469da0:	mov	w0, w24
  469da4:	bl	469040 <_obstack_memory_used@@Base+0xc718>
  469da8:	mov	x1, x0
  469dac:	mov	x2, x21
  469db0:	mov	w0, w24
  469db4:	add	x3, sp, #0x68
  469db8:	bl	468ee0 <_obstack_memory_used@@Base+0xc5b8>
  469dbc:	ldr	x0, [sp, #104]
  469dc0:	str	x0, [x20, #800]
  469dc4:	b	469bfc <_obstack_memory_used@@Base+0xd2d4>
  469dc8:	ldr	x0, [x20, #792]
  469dcc:	mov	w1, #0x1168                	// #4456
  469dd0:	movk	w1, #0xd280, lsl #16
  469dd4:	ldr	w2, [x0]
  469dd8:	cmp	w2, w1
  469ddc:	b.ne	469d60 <_obstack_memory_used@@Base+0xd438>  // b.any
  469de0:	ldr	w1, [x0, #4]
  469de4:	mov	w0, #0x1                   	// #1
  469de8:	movk	w0, #0xd400, lsl #16
  469dec:	cmp	w1, w0
  469df0:	b.ne	469d60 <_obstack_memory_used@@Base+0xd438>  // b.any
  469df4:	ldr	x6, [x20, #784]
  469df8:	mov	w3, #0x1                   	// #1
  469dfc:	mov	x1, x19
  469e00:	mov	w2, w3
  469e04:	add	x8, x6, #0x130
  469e08:	mov	x4, #0x1f                  	// #31
  469e0c:	mov	x5, #0x130                 	// #304
  469e10:	mov	x0, #0x8                   	// #8
  469e14:	str	x5, [x19, #1576]
  469e18:	str	x4, [x19, #1584]
  469e1c:	str	w3, [x19, #1600]
  469e20:	str	w2, [x1, #8]
  469e24:	str	x0, [x1], #16
  469e28:	add	x0, x0, #0x8
  469e2c:	cmp	x0, #0x100
  469e30:	b.ne	469e20 <_obstack_memory_used@@Base+0xd4f8>  // b.any
  469e34:	ldr	w0, [x6, #592]
  469e38:	add	x5, x6, #0x250
  469e3c:	cbz	w0, 469ecc <_obstack_memory_used@@Base+0xd5a4>
  469e40:	mov	w7, #0x8001                	// #32769
  469e44:	add	x4, x19, #0x600
  469e48:	add	x9, x6, x19
  469e4c:	movk	w7, #0x4650, lsl #16
  469e50:	mov	w3, #0x1                   	// #1
  469e54:	b	469e68 <_obstack_memory_used@@Base+0xd540>
  469e58:	ldr	w0, [x5, #4]
  469e5c:	add	x5, x5, x0
  469e60:	ldr	w0, [x5]
  469e64:	cbz	w0, 469ecc <_obstack_memory_used@@Base+0xd5a4>
  469e68:	cmp	w0, w7
  469e6c:	b.ne	469e58 <_obstack_memory_used@@Base+0xd530>  // b.any
  469e70:	sub	x2, x5, #0x520
  469e74:	add	x0, x19, #0x400
  469e78:	sub	x2, x2, x9
  469e7c:	nop
  469e80:	str	w3, [x0, #8]
  469e84:	add	x1, x2, x0
  469e88:	str	x1, [x0], #16
  469e8c:	cmp	x4, x0
  469e90:	b.ne	469e80 <_obstack_memory_used@@Base+0xd558>  // b.any
  469e94:	b	469e58 <_obstack_memory_used@@Base+0xd530>
  469e98:	mov	x21, #0xc                   	// #12
  469e9c:	b	469bbc <_obstack_memory_used@@Base+0xd294>
  469ea0:	mov	x21, #0x8                   	// #8
  469ea4:	b	469bbc <_obstack_memory_used@@Base+0xd294>
  469ea8:	cmp	w3, #0x8
  469eac:	b.ne	469d84 <_obstack_memory_used@@Base+0xd45c>  // b.any
  469eb0:	ldrb	w0, [x2, #1]
  469eb4:	cbnz	w0, 469d84 <_obstack_memory_used@@Base+0xd45c>
  469eb8:	stp	x25, x26, [sp, #64]
  469ebc:	add	x2, x2, #0x2
  469ec0:	stp	x27, x28, [sp, #80]
  469ec4:	ldrb	w3, [x2]
  469ec8:	b	469a68 <_obstack_memory_used@@Base+0xd140>
  469ecc:	mov	w3, #0x1                   	// #1
  469ed0:	strb	w3, [x19, #1651]
  469ed4:	add	x1, x6, #0x230
  469ed8:	mov	w5, #0x4                   	// #4
  469edc:	ldr	x2, [x8, #264]
  469ee0:	sub	x1, x1, x8
  469ee4:	mov	x4, #0x60                  	// #96
  469ee8:	mov	w0, #0x0                   	// #0
  469eec:	sub	x8, x2, x8
  469ef0:	ldp	x21, x22, [sp, #32]
  469ef4:	str	x1, [x19, #496]
  469ef8:	str	w3, [x19, #504]
  469efc:	str	x8, [x19, #1536]
  469f00:	str	w5, [x19, #1544]
  469f04:	str	x4, [x19, #1640]
  469f08:	b	469c2c <_obstack_memory_used@@Base+0xd304>
  469f0c:	mov	x24, x2
  469f10:	b	469b78 <_obstack_memory_used@@Base+0xd250>
  469f14:	nop
  469f18:	stp	x29, x30, [sp, #-80]!
  469f1c:	mov	x29, sp
  469f20:	stp	x21, x22, [sp, #32]
  469f24:	mov	x21, x0
  469f28:	ldr	x0, [x1, #832]
  469f2c:	stp	x19, x20, [sp, #16]
  469f30:	mov	x20, x1
  469f34:	stp	x23, x24, [sp, #48]
  469f38:	tbz	x0, #62, 469f44 <_obstack_memory_used@@Base+0xd61c>
  469f3c:	ldrb	w1, [x1, #887]
  469f40:	cbnz	w1, 469f4c <_obstack_memory_used@@Base+0xd624>
  469f44:	ldr	x1, [x20, #248]
  469f48:	cbz	x1, 46a008 <_obstack_memory_used@@Base+0xd6e0>
  469f4c:	adrp	x24, 49e000 <_obstack_memory_used@@Base+0x416d8>
  469f50:	add	x23, x21, #0x358
  469f54:	add	x24, x24, #0x948
  469f58:	add	x22, x20, #0x358
  469f5c:	mov	x19, #0x0                   	// #0
  469f60:	b	469f84 <_obstack_memory_used@@Base+0xd65c>
  469f64:	cbz	x0, 469f78 <_obstack_memory_used@@Base+0xd650>
  469f68:	ldrb	w2, [x19, x24]
  469f6c:	cmp	w2, #0x8
  469f70:	b.ne	46a074 <_obstack_memory_used@@Base+0xd74c>  // b.any
  469f74:	str	x1, [x0]
  469f78:	add	x19, x19, #0x1
  469f7c:	cmp	x19, #0x61
  469f80:	b.eq	469fc0 <_obstack_memory_used@@Base+0xd698>  // b.none
  469f84:	ldrb	w2, [x23, x19]
  469f88:	ldr	x0, [x21, x19, lsl #3]
  469f8c:	ldr	x1, [x20, x19, lsl #3]
  469f90:	cbnz	w2, 46a074 <_obstack_memory_used@@Base+0xd74c>
  469f94:	ldrb	w2, [x22, x19]
  469f98:	cbnz	w2, 469f64 <_obstack_memory_used@@Base+0xd63c>
  469f9c:	cmp	x1, #0x0
  469fa0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  469fa4:	ccmp	x0, x1, #0x4, ne  // ne = any
  469fa8:	b.eq	469f78 <_obstack_memory_used@@Base+0xd650>  // b.none
  469fac:	ldrb	w2, [x24, x19]
  469fb0:	add	x19, x19, #0x1
  469fb4:	bl	402220 <memcpy@plt>
  469fb8:	cmp	x19, #0x61
  469fbc:	b.ne	469f84 <_obstack_memory_used@@Base+0xd65c>  // b.any
  469fc0:	ldr	x0, [x21, #832]
  469fc4:	tbz	x0, #62, 469fd0 <_obstack_memory_used@@Base+0xd6a8>
  469fc8:	ldrb	w0, [x21, #887]
  469fcc:	cbnz	w0, 469ff0 <_obstack_memory_used@@Base+0xd6c8>
  469fd0:	ldr	x1, [x21, #248]
  469fd4:	mov	x0, #0x0                   	// #0
  469fd8:	cbz	x1, 46a034 <_obstack_memory_used@@Base+0xd70c>
  469fdc:	ldp	x19, x20, [sp, #16]
  469fe0:	ldp	x21, x22, [sp, #32]
  469fe4:	ldp	x23, x24, [sp, #48]
  469fe8:	ldp	x29, x30, [sp], #80
  469fec:	ret
  469ff0:	mov	x0, #0x0                   	// #0
  469ff4:	ldp	x19, x20, [sp, #16]
  469ff8:	ldp	x21, x22, [sp, #32]
  469ffc:	ldp	x23, x24, [sp, #48]
  46a000:	ldp	x29, x30, [sp], #80
  46a004:	ret
  46a008:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46a00c:	ldr	x2, [x20, #784]
  46a010:	ldrb	w1, [x1, #2407]
  46a014:	cmp	w1, #0x8
  46a018:	b.ne	46a074 <_obstack_memory_used@@Base+0xd74c>  // b.any
  46a01c:	str	x2, [sp, #72]
  46a020:	tbz	x0, #62, 46a028 <_obstack_memory_used@@Base+0xd700>
  46a024:	strb	wzr, [x20, #887]
  46a028:	add	x0, sp, #0x48
  46a02c:	str	x0, [x20, #248]
  46a030:	b	469f4c <_obstack_memory_used@@Base+0xd624>
  46a034:	ldr	x1, [x20, #832]
  46a038:	ldr	x0, [x20, #248]
  46a03c:	tbnz	x1, #62, 46a068 <_obstack_memory_used@@Base+0xd740>
  46a040:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46a044:	ldrb	w1, [x1, #2407]
  46a048:	cmp	w1, #0x8
  46a04c:	b.ne	46a074 <_obstack_memory_used@@Base+0xd74c>  // b.any
  46a050:	ldr	x0, [x0]
  46a054:	ldr	x2, [x21, #784]
  46a058:	ldr	x1, [x20, #848]
  46a05c:	sub	x0, x0, x2
  46a060:	add	x0, x0, x1
  46a064:	b	469fdc <_obstack_memory_used@@Base+0xd6b4>
  46a068:	ldrb	w1, [x20, #887]
  46a06c:	cbz	w1, 46a040 <_obstack_memory_used@@Base+0xd718>
  46a070:	b	46a054 <_obstack_memory_used@@Base+0xd72c>
  46a074:	bl	402540 <abort@plt>
  46a078:	sub	sp, sp, #0x260
  46a07c:	cmp	x0, x1
  46a080:	stp	x29, x30, [sp]
  46a084:	mov	x29, sp
  46a088:	str	x3, [sp, #96]
  46a08c:	b.cs	46a4e4 <_obstack_memory_used@@Base+0xdbbc>  // b.hs, b.nlast
  46a090:	stp	x19, x20, [sp, #16]
  46a094:	mov	x19, x0
  46a098:	mov	w20, #0x1                   	// #1
  46a09c:	stp	x21, x22, [sp, #32]
  46a0a0:	mov	x21, x1
  46a0a4:	add	x22, sp, #0x60
  46a0a8:	stp	x23, x24, [sp, #48]
  46a0ac:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46a0b0:	mov	x24, x2
  46a0b4:	add	x23, x23, #0xc60
  46a0b8:	stp	x25, x26, [sp, #64]
  46a0bc:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46a0c0:	add	x25, x25, #0xe40
  46a0c4:	nop
  46a0c8:	mov	x4, x19
  46a0cc:	ldrb	w5, [x4], #1
  46a0d0:	sub	w0, w5, #0x3
  46a0d4:	cmp	w0, #0xee
  46a0d8:	b.ls	46a0e0 <_obstack_memory_used@@Base+0xd7b8>  // b.plast
  46a0dc:	bl	402540 <abort@plt>
  46a0e0:	ldrh	w0, [x23, w0, uxtw #1]
  46a0e4:	adr	x1, 46a0f0 <_obstack_memory_used@@Base+0xd7c8>
  46a0e8:	add	x0, x1, w0, sxth #2
  46a0ec:	br	x0
  46a0f0:	mov	x3, #0x0                   	// #0
  46a0f4:	mov	w1, #0x0                   	// #0
  46a0f8:	ldrb	w2, [x4], #1
  46a0fc:	and	x0, x2, #0x7f
  46a100:	lsl	x0, x0, x1
  46a104:	add	w1, w1, #0x7
  46a108:	orr	x3, x3, x0
  46a10c:	tbnz	w2, #7, 46a0f8 <_obstack_memory_used@@Base+0xd7d0>
  46a110:	cmp	w1, #0x3f
  46a114:	b.ls	46a478 <_obstack_memory_used@@Base+0xdb50>  // b.plast
  46a118:	sub	w5, w5, #0x70
  46a11c:	cmp	w5, #0x61
  46a120:	b.gt	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a124:	ldr	x2, [x24, #832]
  46a128:	sxtw	x1, w5
  46a12c:	ldr	x0, [x24, x1, lsl #3]
  46a130:	tbz	x2, #62, 46a140 <_obstack_memory_used@@Base+0xd818>
  46a134:	add	x1, x24, x1
  46a138:	ldrb	w1, [x1, #856]
  46a13c:	cbnz	w1, 46a160 <_obstack_memory_used@@Base+0xd838>
  46a140:	cmp	w5, #0x2e
  46a144:	b.eq	46a4d8 <_obstack_memory_used@@Base+0xdbb0>  // b.none
  46a148:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46a14c:	add	x1, x1, #0x948
  46a150:	ldrb	w1, [x1, w5, sxtw]
  46a154:	cmp	w1, #0x8
  46a158:	b.ne	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46a15c:	ldr	x0, [x0]
  46a160:	add	x0, x3, x0
  46a164:	mov	w3, w20
  46a168:	mov	x19, x4
  46a16c:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a170:	mov	w3, w20
  46a174:	add	x19, x19, #0x9
  46a178:	ldur	x0, [x19, #-8]
  46a17c:	nop
  46a180:	cmp	w3, #0x3f
  46a184:	b.gt	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a188:	add	w20, w3, #0x1
  46a18c:	str	x0, [x22, w3, sxtw #3]
  46a190:	cmp	x21, x19
  46a194:	b.hi	46a0c8 <_obstack_memory_used@@Base+0xd7a0>  // b.pmore
  46a198:	cbz	w20, 46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a19c:	sub	w20, w20, #0x1
  46a1a0:	add	x0, sp, #0x60
  46a1a4:	ldp	x29, x30, [sp]
  46a1a8:	ldr	x0, [x0, w20, sxtw #3]
  46a1ac:	ldp	x19, x20, [sp, #16]
  46a1b0:	ldp	x21, x22, [sp, #32]
  46a1b4:	ldp	x23, x24, [sp, #48]
  46a1b8:	ldp	x25, x26, [sp, #64]
  46a1bc:	add	sp, sp, #0x260
  46a1c0:	ret
  46a1c4:	sub	w5, w5, #0x50
  46a1c8:	cmp	w5, #0x61
  46a1cc:	b.gt	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a1d0:	ldr	x2, [x24, #832]
  46a1d4:	sxtw	x1, w5
  46a1d8:	ldr	x0, [x24, x1, lsl #3]
  46a1dc:	tbz	x2, #62, 46a1ec <_obstack_memory_used@@Base+0xd8c4>
  46a1e0:	add	x1, x24, x1
  46a1e4:	ldrb	w1, [x1, #856]
  46a1e8:	cbnz	w1, 46a164 <_obstack_memory_used@@Base+0xd83c>
  46a1ec:	cmp	w5, #0x2e
  46a1f0:	b.eq	46a4c4 <_obstack_memory_used@@Base+0xdb9c>  // b.none
  46a1f4:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46a1f8:	add	x1, x1, #0x948
  46a1fc:	ldrb	w1, [x1, w5, sxtw]
  46a200:	cmp	w1, #0x8
  46a204:	b.ne	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46a208:	mov	w3, w20
  46a20c:	mov	x19, x4
  46a210:	ldr	x0, [x0]
  46a214:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a218:	sub	w0, w5, #0x30
  46a21c:	mov	w3, w20
  46a220:	mov	x19, x4
  46a224:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a228:	cmp	w20, #0x1
  46a22c:	b.le	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a230:	sub	w3, w20, #0x2
  46a234:	sub	w20, w20, #0x1
  46a238:	sub	w5, w5, #0x1a
  46a23c:	cmp	w5, #0x14
  46a240:	ldr	x1, [x22, w20, sxtw #3]
  46a244:	ldr	x0, [x22, w3, sxtw #3]
  46a248:	b.hi	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.pmore
  46a24c:	ldrh	w2, [x25, w5, uxtw #1]
  46a250:	adr	x5, 46a25c <_obstack_memory_used@@Base+0xd934>
  46a254:	add	x2, x5, w2, sxth #2
  46a258:	br	x2
  46a25c:	cbz	w20, 46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a260:	sub	w3, w20, #0x1
  46a264:	cmp	w5, #0x20
  46a268:	ldr	x0, [x22, w3, sxtw #3]
  46a26c:	b.eq	46a7c0 <_obstack_memory_used@@Base+0xde98>  // b.none
  46a270:	b.hi	46a290 <_obstack_memory_used@@Base+0xd968>  // b.pmore
  46a274:	cmp	w5, #0x19
  46a278:	b.eq	46a4f4 <_obstack_memory_used@@Base+0xdbcc>  // b.none
  46a27c:	cmp	w5, #0x1f
  46a280:	b.ne	46a464 <_obstack_memory_used@@Base+0xdb3c>  // b.any
  46a284:	neg	x0, x0
  46a288:	mov	x19, x4
  46a28c:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a290:	cmp	w5, #0x23
  46a294:	b.eq	46a498 <_obstack_memory_used@@Base+0xdb70>  // b.none
  46a298:	cmp	w5, #0x94
  46a29c:	b.ne	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46a2a0:	ldrb	w1, [x19, #1]
  46a2a4:	add	x19, x19, #0x2
  46a2a8:	cmp	w1, #0x4
  46a2ac:	b.eq	46a6b0 <_obstack_memory_used@@Base+0xdd88>  // b.none
  46a2b0:	b.hi	46a7dc <_obstack_memory_used@@Base+0xdeb4>  // b.pmore
  46a2b4:	cmp	w1, #0x1
  46a2b8:	b.ne	46a7cc <_obstack_memory_used@@Base+0xdea4>  // b.any
  46a2bc:	ldrb	w0, [x0]
  46a2c0:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a2c4:	cmp	w20, #0x2
  46a2c8:	b.le	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a2cc:	sub	w1, w20, #0x2
  46a2d0:	sub	w2, w20, #0x1
  46a2d4:	sub	w0, w20, #0x3
  46a2d8:	mov	x19, x4
  46a2dc:	sxtw	x1, w1
  46a2e0:	sxtw	x2, w2
  46a2e4:	sxtw	x0, w0
  46a2e8:	ldr	x5, [x22, x1, lsl #3]
  46a2ec:	ldr	x3, [x22, x2, lsl #3]
  46a2f0:	ldr	x4, [x22, x0, lsl #3]
  46a2f4:	str	x5, [x22, x2, lsl #3]
  46a2f8:	str	x4, [x22, x1, lsl #3]
  46a2fc:	str	x3, [x22, x0, lsl #3]
  46a300:	b	46a190 <_obstack_memory_used@@Base+0xd868>
  46a304:	cmp	w20, #0x1
  46a308:	b.le	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a30c:	sub	w0, w20, #0x2
  46a310:	sub	w1, w20, #0x1
  46a314:	mov	x19, x4
  46a318:	sxtw	x0, w0
  46a31c:	sxtw	x1, w1
  46a320:	ldr	x3, [x22, x0, lsl #3]
  46a324:	ldr	x2, [x22, x1, lsl #3]
  46a328:	str	x3, [x22, x1, lsl #3]
  46a32c:	str	x2, [x22, x0, lsl #3]
  46a330:	b	46a190 <_obstack_memory_used@@Base+0xd868>
  46a334:	ldrb	w3, [x19, #1]
  46a338:	sub	w1, w20, #0x1
  46a33c:	add	x19, x19, #0x2
  46a340:	sxtw	x2, w1
  46a344:	cmp	x3, w1, sxtw
  46a348:	b.ge	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.tcont
  46a34c:	sub	x1, x2, x3
  46a350:	mov	w3, w20
  46a354:	ldr	x0, [x22, x1, lsl #3]
  46a358:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a35c:	cmp	w20, #0x1
  46a360:	b.le	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a364:	sub	w0, w20, #0x2
  46a368:	mov	x19, x4
  46a36c:	mov	w3, w20
  46a370:	ldr	x0, [x22, w0, sxtw #3]
  46a374:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a378:	cbz	w20, 46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a37c:	sub	w20, w20, #0x1
  46a380:	mov	x19, x4
  46a384:	b	46a190 <_obstack_memory_used@@Base+0xd868>
  46a388:	cbz	w20, 46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a38c:	sub	w0, w20, #0x1
  46a390:	mov	x19, x4
  46a394:	mov	w3, w20
  46a398:	ldr	x0, [x22, w0, sxtw #3]
  46a39c:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a3a0:	ldursh	x1, [x19, #1]
  46a3a4:	add	x19, x19, #0x3
  46a3a8:	add	x19, x19, x1
  46a3ac:	b	46a190 <_obstack_memory_used@@Base+0xd868>
  46a3b0:	ldrb	w0, [x19, #1]
  46a3b4:	mov	w3, w20
  46a3b8:	add	x19, x19, #0x2
  46a3bc:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a3c0:	ldrb	w26, [x19, #1]
  46a3c4:	mov	x1, x24
  46a3c8:	mov	w0, w26
  46a3cc:	bl	469040 <_obstack_memory_used@@Base+0xc718>
  46a3d0:	add	x2, x19, #0x2
  46a3d4:	mov	x1, x0
  46a3d8:	add	x3, sp, #0x58
  46a3dc:	mov	w0, w26
  46a3e0:	bl	468ee0 <_obstack_memory_used@@Base+0xc5b8>
  46a3e4:	mov	x19, x0
  46a3e8:	mov	w3, w20
  46a3ec:	ldr	x0, [sp, #88]
  46a3f0:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a3f4:	cbz	w20, 46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a3f8:	sub	w20, w20, #0x1
  46a3fc:	add	x1, x19, #0x3
  46a400:	ldr	x0, [x22, w20, sxtw #3]
  46a404:	cbz	x0, 46a490 <_obstack_memory_used@@Base+0xdb68>
  46a408:	ldursh	x19, [x19, #1]
  46a40c:	add	x19, x1, x19
  46a410:	b	46a190 <_obstack_memory_used@@Base+0xd868>
  46a414:	ldursw	x0, [x19, #1]
  46a418:	mov	w3, w20
  46a41c:	add	x19, x19, #0x5
  46a420:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a424:	ldur	w0, [x19, #1]
  46a428:	mov	w3, w20
  46a42c:	add	x19, x19, #0x5
  46a430:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a434:	ldursh	x0, [x19, #1]
  46a438:	mov	w3, w20
  46a43c:	add	x19, x19, #0x3
  46a440:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a444:	ldurh	w0, [x19, #1]
  46a448:	mov	w3, w20
  46a44c:	add	x19, x19, #0x3
  46a450:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a454:	ldrsb	x0, [x19, #1]
  46a458:	mov	w3, w20
  46a45c:	add	x19, x19, #0x2
  46a460:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a464:	cmp	w5, #0x6
  46a468:	b.ne	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46a46c:	mov	x19, x4
  46a470:	ldr	x0, [x0]
  46a474:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a478:	mov	x0, #0xffffffffffffffff    	// #-1
  46a47c:	tst	x2, #0x40
  46a480:	lsl	x0, x0, x1
  46a484:	orr	x0, x3, x0
  46a488:	csel	x3, x0, x3, ne  // ne = any
  46a48c:	b	46a118 <_obstack_memory_used@@Base+0xd7f0>
  46a490:	mov	x19, x1
  46a494:	b	46a190 <_obstack_memory_used@@Base+0xd868>
  46a498:	mov	x6, #0x0                   	// #0
  46a49c:	mov	w2, #0x0                   	// #0
  46a4a0:	ldrb	w5, [x4], #1
  46a4a4:	and	x1, x5, #0x7f
  46a4a8:	lsl	x1, x1, x2
  46a4ac:	add	w2, w2, #0x7
  46a4b0:	orr	x6, x6, x1
  46a4b4:	tbnz	w5, #7, 46a4a0 <_obstack_memory_used@@Base+0xdb78>
  46a4b8:	add	x0, x0, x6
  46a4bc:	mov	x19, x4
  46a4c0:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a4c4:	cntd	x0
  46a4c8:	mov	w3, w20
  46a4cc:	mov	x19, x4
  46a4d0:	sxtw	x0, w0
  46a4d4:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a4d8:	cntd	x0
  46a4dc:	sxtw	x0, w0
  46a4e0:	b	46a160 <_obstack_memory_used@@Base+0xd838>
  46a4e4:	mov	x0, x3
  46a4e8:	ldp	x29, x30, [sp]
  46a4ec:	add	sp, sp, #0x260
  46a4f0:	ret
  46a4f4:	cmp	x0, #0x0
  46a4f8:	mov	x19, x4
  46a4fc:	cneg	x0, x0, lt  // lt = tstop
  46a500:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a504:	mov	x19, x4
  46a508:	mov	w1, #0x0                   	// #0
  46a50c:	mov	x4, #0x0                   	// #0
  46a510:	ldrb	w2, [x19], #1
  46a514:	and	x0, x2, #0x7f
  46a518:	lsl	x0, x0, x1
  46a51c:	add	w1, w1, #0x7
  46a520:	orr	x4, x4, x0
  46a524:	tbnz	w2, #7, 46a510 <_obstack_memory_used@@Base+0xdbe8>
  46a528:	mov	x3, #0x0                   	// #0
  46a52c:	mov	w1, #0x0                   	// #0
  46a530:	ldrb	w2, [x19], #1
  46a534:	and	x0, x2, #0x7f
  46a538:	lsl	x0, x0, x1
  46a53c:	add	w1, w1, #0x7
  46a540:	orr	x3, x3, x0
  46a544:	tbnz	w2, #7, 46a530 <_obstack_memory_used@@Base+0xdc08>
  46a548:	cmp	w1, #0x3f
  46a54c:	b.hi	46a564 <_obstack_memory_used@@Base+0xdc3c>  // b.pmore
  46a550:	mov	x0, #0xffffffffffffffff    	// #-1
  46a554:	tst	x2, #0x40
  46a558:	lsl	x0, x0, x1
  46a55c:	orr	x0, x3, x0
  46a560:	csel	x3, x0, x3, ne  // ne = any
  46a564:	cmp	w4, #0x61
  46a568:	mov	w1, w4
  46a56c:	b.gt	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a570:	ldr	x2, [x24, #832]
  46a574:	sxtw	x4, w4
  46a578:	ldr	x0, [x24, x4, lsl #3]
  46a57c:	tbz	x2, #62, 46a58c <_obstack_memory_used@@Base+0xdc64>
  46a580:	add	x4, x24, x4
  46a584:	ldrb	w2, [x4, #856]
  46a588:	cbnz	w2, 46a5ac <_obstack_memory_used@@Base+0xdc84>
  46a58c:	cmp	w1, #0x2e
  46a590:	b.eq	46a7a0 <_obstack_memory_used@@Base+0xde78>  // b.none
  46a594:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46a598:	add	x2, x2, #0x948
  46a59c:	ldrb	w1, [x2, w1, sxtw]
  46a5a0:	cmp	w1, #0x8
  46a5a4:	b.ne	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46a5a8:	ldr	x0, [x0]
  46a5ac:	add	x0, x3, x0
  46a5b0:	mov	w3, w20
  46a5b4:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a5b8:	mov	x19, x4
  46a5bc:	mov	x0, #0x0                   	// #0
  46a5c0:	mov	w2, #0x0                   	// #0
  46a5c4:	nop
  46a5c8:	ldrb	w4, [x19], #1
  46a5cc:	and	x1, x4, #0x7f
  46a5d0:	lsl	x1, x1, x2
  46a5d4:	add	w2, w2, #0x7
  46a5d8:	orr	x0, x0, x1
  46a5dc:	tbnz	w4, #7, 46a5c8 <_obstack_memory_used@@Base+0xdca0>
  46a5e0:	mov	w3, w20
  46a5e4:	cmp	w2, #0x3f
  46a5e8:	b.hi	46a180 <_obstack_memory_used@@Base+0xd858>  // b.pmore
  46a5ec:	tbz	w4, #6, 46a180 <_obstack_memory_used@@Base+0xd858>
  46a5f0:	mov	x1, #0xffffffffffffffff    	// #-1
  46a5f4:	lsl	x2, x1, x2
  46a5f8:	orr	x0, x0, x2
  46a5fc:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a600:	mov	x19, x4
  46a604:	mov	x0, #0x0                   	// #0
  46a608:	mov	w2, #0x0                   	// #0
  46a60c:	nop
  46a610:	ldrb	w3, [x19], #1
  46a614:	and	x1, x3, #0x7f
  46a618:	lsl	x1, x1, x2
  46a61c:	add	w2, w2, #0x7
  46a620:	orr	x0, x0, x1
  46a624:	tbnz	w3, #7, 46a610 <_obstack_memory_used@@Base+0xdce8>
  46a628:	mov	w3, w20
  46a62c:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a630:	mov	x19, x4
  46a634:	mov	x3, #0x0                   	// #0
  46a638:	mov	w1, #0x0                   	// #0
  46a63c:	nop
  46a640:	ldrb	w2, [x19], #1
  46a644:	and	x0, x2, #0x7f
  46a648:	lsl	x0, x0, x1
  46a64c:	add	w1, w1, #0x7
  46a650:	orr	x3, x3, x0
  46a654:	tbnz	w2, #7, 46a640 <_obstack_memory_used@@Base+0xdd18>
  46a658:	cmp	w3, #0x61
  46a65c:	mov	w1, w3
  46a660:	b.gt	46a0dc <_obstack_memory_used@@Base+0xd7b4>
  46a664:	ldr	x2, [x24, #832]
  46a668:	sxtw	x3, w3
  46a66c:	ldr	x0, [x24, x3, lsl #3]
  46a670:	tbz	x2, #62, 46a680 <_obstack_memory_used@@Base+0xdd58>
  46a674:	add	x3, x24, x3
  46a678:	ldrb	w2, [x3, #856]
  46a67c:	cbnz	w2, 46a5b0 <_obstack_memory_used@@Base+0xdc88>
  46a680:	cmp	w1, #0x2e
  46a684:	b.eq	46a7b0 <_obstack_memory_used@@Base+0xde88>  // b.none
  46a688:	adrp	x2, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46a68c:	add	x2, x2, #0x948
  46a690:	ldrb	w1, [x2, w1, sxtw]
  46a694:	cmp	w1, #0x8
  46a698:	b.ne	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46a69c:	mov	w3, w20
  46a6a0:	ldr	x0, [x0]
  46a6a4:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a6a8:	mov	x19, x4
  46a6ac:	b	46a190 <_obstack_memory_used@@Base+0xd868>
  46a6b0:	ldr	w0, [x0]
  46a6b4:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a6b8:	cmp	x0, x1
  46a6bc:	mov	x19, x4
  46a6c0:	cset	x0, ne  // ne = any
  46a6c4:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a6c8:	cmp	x0, x1
  46a6cc:	mov	x19, x4
  46a6d0:	cset	x0, lt  // lt = tstop
  46a6d4:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a6d8:	cmp	x0, x1
  46a6dc:	mov	x19, x4
  46a6e0:	cset	x0, le
  46a6e4:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a6e8:	cmp	x0, x1
  46a6ec:	mov	x19, x4
  46a6f0:	cset	x0, gt
  46a6f4:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a6f8:	cmp	x0, x1
  46a6fc:	mov	x19, x4
  46a700:	cset	x0, ge  // ge = tcont
  46a704:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a708:	cmp	x0, x1
  46a70c:	mov	x19, x4
  46a710:	cset	x0, eq  // eq = none
  46a714:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a718:	eor	x0, x0, x1
  46a71c:	mov	x19, x4
  46a720:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a724:	mov	x19, x4
  46a728:	asr	x0, x0, x1
  46a72c:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a730:	mov	x19, x4
  46a734:	lsr	x0, x0, x1
  46a738:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a73c:	mov	x19, x4
  46a740:	lsl	x0, x0, x1
  46a744:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a748:	add	x0, x0, x1
  46a74c:	mov	x19, x4
  46a750:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a754:	orr	x0, x0, x1
  46a758:	mov	x19, x4
  46a75c:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a760:	mul	x0, x0, x1
  46a764:	mov	x19, x4
  46a768:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a76c:	udiv	x2, x0, x1
  46a770:	mov	x19, x4
  46a774:	msub	x0, x2, x1, x0
  46a778:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a77c:	sub	x0, x0, x1
  46a780:	mov	x19, x4
  46a784:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a788:	sdiv	x0, x0, x1
  46a78c:	mov	x19, x4
  46a790:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a794:	and	x0, x0, x1
  46a798:	mov	x19, x4
  46a79c:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a7a0:	cntd	x0
  46a7a4:	sxtw	x0, w0
  46a7a8:	add	x0, x3, x0
  46a7ac:	b	46a5b0 <_obstack_memory_used@@Base+0xdc88>
  46a7b0:	cntd	x0
  46a7b4:	mov	w3, w20
  46a7b8:	sxtw	x0, w0
  46a7bc:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a7c0:	mvn	x0, x0
  46a7c4:	mov	x19, x4
  46a7c8:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a7cc:	cmp	w1, #0x2
  46a7d0:	b.ne	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46a7d4:	ldrh	w0, [x0]
  46a7d8:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a7dc:	cmp	w1, #0x8
  46a7e0:	b.ne	46a0dc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46a7e4:	ldr	x0, [x0]
  46a7e8:	b	46a180 <_obstack_memory_used@@Base+0xd858>
  46a7ec:	nop
  46a7f0:	sub	sp, sp, #0x440
  46a7f4:	mov	x2, #0x3c0                 	// #960
  46a7f8:	stp	x29, x30, [sp]
  46a7fc:	mov	x29, sp
  46a800:	stp	x27, x28, [sp, #80]
  46a804:	add	x28, sp, #0x80
  46a808:	mov	x27, x0
  46a80c:	stp	x19, x20, [sp, #16]
  46a810:	stp	x21, x22, [sp, #32]
  46a814:	stp	x23, x24, [sp, #48]
  46a818:	stp	x25, x26, [sp, #64]
  46a81c:	str	x1, [sp, #104]
  46a820:	mov	x1, x0
  46a824:	mov	x0, x28
  46a828:	bl	402220 <memcpy@plt>
  46a82c:	ldr	x1, [sp, #960]
  46a830:	tbz	x1, #62, 46a83c <_obstack_memory_used@@Base+0xdf14>
  46a834:	ldrb	w0, [sp, #1015]
  46a838:	cbnz	w0, 46a844 <_obstack_memory_used@@Base+0xdf1c>
  46a83c:	ldr	x0, [x28, #248]
  46a840:	cbz	x0, 46ab10 <_obstack_memory_used@@Base+0xe1e8>
  46a844:	ldr	x0, [x27, #832]
  46a848:	tbz	x0, #62, 46a850 <_obstack_memory_used@@Base+0xdf28>
  46a84c:	strb	wzr, [x27, #887]
  46a850:	ldr	x0, [sp, #104]
  46a854:	ldr	w0, [x0, #1600]
  46a858:	str	xzr, [x27, #248]
  46a85c:	cmp	w0, #0x1
  46a860:	b.ne	46a8b0 <_obstack_memory_used@@Base+0xdf88>  // b.any
  46a864:	ldr	x0, [sp, #104]
  46a868:	ldr	x0, [x0, #1584]
  46a86c:	cmp	w0, #0x61
  46a870:	b.gt	46aa78 <_obstack_memory_used@@Base+0xe150>
  46a874:	sxtw	x2, w0
  46a878:	ldr	x3, [x28, x2, lsl #3]
  46a87c:	tbnz	x1, #62, 46aaf0 <_obstack_memory_used@@Base+0xe1c8>
  46a880:	cmp	w0, #0x2e
  46a884:	b.eq	46ab04 <_obstack_memory_used@@Base+0xe1dc>  // b.none
  46a888:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46a88c:	add	x0, x0, #0x948
  46a890:	ldrb	w0, [x0, x2]
  46a894:	cmp	w0, #0x8
  46a898:	b.ne	46aa78 <_obstack_memory_used@@Base+0xe150>  // b.any
  46a89c:	ldr	x3, [x3]
  46a8a0:	ldr	x0, [sp, #104]
  46a8a4:	ldr	x0, [x0, #1576]
  46a8a8:	add	x22, x3, x0
  46a8ac:	b	46a8f4 <_obstack_memory_used@@Base+0xdfcc>
  46a8b0:	cmp	w0, #0x2
  46a8b4:	b.ne	46aa78 <_obstack_memory_used@@Base+0xe150>  // b.any
  46a8b8:	ldr	x0, [sp, #104]
  46a8bc:	mov	x1, #0x0                   	// #0
  46a8c0:	mov	w3, #0x0                   	// #0
  46a8c4:	ldr	x0, [x0, #1592]
  46a8c8:	ldrb	w4, [x0], #1
  46a8cc:	and	x2, x4, #0x7f
  46a8d0:	lsl	x2, x2, x3
  46a8d4:	add	w3, w3, #0x7
  46a8d8:	orr	x1, x1, x2
  46a8dc:	tbnz	w4, #7, 46a8c8 <_obstack_memory_used@@Base+0xdfa0>
  46a8e0:	add	x1, x0, x1
  46a8e4:	mov	x2, x28
  46a8e8:	mov	x3, #0x0                   	// #0
  46a8ec:	bl	46a078 <_obstack_memory_used@@Base+0xd750>
  46a8f0:	mov	x22, x0
  46a8f4:	ldr	x25, [sp, #104]
  46a8f8:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46a8fc:	add	x26, x27, #0x358
  46a900:	add	x20, x23, #0x948
  46a904:	add	x21, sp, #0x3d8
  46a908:	mov	x24, #0x0                   	// #0
  46a90c:	mov	w19, #0x1                   	// #1
  46a910:	str	x22, [x27, #784]
  46a914:	nop
  46a918:	ldr	w2, [x25, #8]
  46a91c:	cmp	w2, #0x3
  46a920:	b.eq	46a9c4 <_obstack_memory_used@@Base+0xe09c>  // b.none
  46a924:	b.hi	46aa08 <_obstack_memory_used@@Base+0xe0e0>  // b.pmore
  46a928:	cmp	w2, #0x1
  46a92c:	b.eq	46aa7c <_obstack_memory_used@@Base+0xe154>  // b.none
  46a930:	cmp	w2, #0x2
  46a934:	b.ne	46a95c <_obstack_memory_used@@Base+0xe034>  // b.any
  46a938:	ldr	x0, [x25]
  46a93c:	ldrb	w2, [x21, w0, sxtw]
  46a940:	sxtw	x1, w0
  46a944:	cbnz	w2, 46aa94 <_obstack_memory_used@@Base+0xe16c>
  46a948:	ldr	x2, [x27, #832]
  46a94c:	ldr	x0, [x28, x1, lsl #3]
  46a950:	tbnz	x2, #62, 46aa00 <_obstack_memory_used@@Base+0xe0d8>
  46a954:	nop
  46a958:	str	x0, [x27, x24, lsl #3]
  46a95c:	add	x24, x24, #0x1
  46a960:	add	x25, x25, #0x10
  46a964:	cmp	x24, #0x62
  46a968:	add	x26, x26, #0x1
  46a96c:	b.ne	46a918 <_obstack_memory_used@@Base+0xdff0>  // b.any
  46a970:	ldr	x3, [sp, #104]
  46a974:	ldr	x0, [x27, #832]
  46a978:	ldrb	w2, [x3, #1651]
  46a97c:	orr	x1, x0, #0x8000000000000000
  46a980:	and	x0, x0, #0x7fffffffffffffff
  46a984:	cmp	w2, #0x0
  46a988:	csel	x0, x0, x1, eq  // eq = none
  46a98c:	ldp	x29, x30, [sp]
  46a990:	orr	x1, x0, #0x2000000000000000
  46a994:	ldp	x19, x20, [sp, #16]
  46a998:	ldp	x21, x22, [sp, #32]
  46a99c:	ldp	x23, x24, [sp, #48]
  46a9a0:	ldp	x25, x26, [sp, #64]
  46a9a4:	str	x0, [x27, #832]
  46a9a8:	ldr	x2, [x3, #544]
  46a9ac:	tst	x2, #0x1
  46a9b0:	csel	x0, x1, x0, ne  // ne = any
  46a9b4:	str	x0, [x27, #832]
  46a9b8:	ldp	x27, x28, [sp, #80]
  46a9bc:	add	sp, sp, #0x440
  46a9c0:	ret
  46a9c4:	ldr	x0, [x25]
  46a9c8:	mov	x1, #0x0                   	// #0
  46a9cc:	mov	w4, #0x0                   	// #0
  46a9d0:	ldrb	w5, [x0], #1
  46a9d4:	and	x2, x5, #0x7f
  46a9d8:	lsl	x2, x2, x4
  46a9dc:	add	w4, w4, #0x7
  46a9e0:	orr	x1, x1, x2
  46a9e4:	tbnz	w5, #7, 46a9d0 <_obstack_memory_used@@Base+0xe0a8>
  46a9e8:	add	x1, x0, x1
  46a9ec:	mov	x3, x22
  46a9f0:	mov	x2, x28
  46a9f4:	bl	46a078 <_obstack_memory_used@@Base+0xd750>
  46a9f8:	ldr	x1, [x27, #832]
  46a9fc:	tbz	x1, #62, 46a958 <_obstack_memory_used@@Base+0xe030>
  46aa00:	strb	wzr, [x26]
  46aa04:	b	46a958 <_obstack_memory_used@@Base+0xe030>
  46aa08:	cmp	w2, #0x4
  46aa0c:	b.eq	46aa64 <_obstack_memory_used@@Base+0xe13c>  // b.none
  46aa10:	cmp	w2, #0x5
  46aa14:	b.ne	46a95c <_obstack_memory_used@@Base+0xe034>  // b.any
  46aa18:	ldr	x0, [x25]
  46aa1c:	mov	x1, #0x0                   	// #0
  46aa20:	mov	w4, #0x0                   	// #0
  46aa24:	nop
  46aa28:	ldrb	w5, [x0], #1
  46aa2c:	and	x2, x5, #0x7f
  46aa30:	lsl	x2, x2, x4
  46aa34:	add	w4, w4, #0x7
  46aa38:	orr	x1, x1, x2
  46aa3c:	tbnz	w5, #7, 46aa28 <_obstack_memory_used@@Base+0xe100>
  46aa40:	add	x1, x0, x1
  46aa44:	mov	x3, x22
  46aa48:	mov	x2, x28
  46aa4c:	bl	46a078 <_obstack_memory_used@@Base+0xd750>
  46aa50:	ldrb	w1, [x24, x20]
  46aa54:	cmp	w1, #0x8
  46aa58:	b.hi	46aa78 <_obstack_memory_used@@Base+0xe150>  // b.pmore
  46aa5c:	strb	w19, [x26]
  46aa60:	b	46a958 <_obstack_memory_used@@Base+0xe030>
  46aa64:	ldr	x0, [x25]
  46aa68:	ldrb	w1, [x24, x20]
  46aa6c:	add	x0, x22, x0
  46aa70:	cmp	w1, #0x8
  46aa74:	b.ls	46aa5c <_obstack_memory_used@@Base+0xe134>  // b.plast
  46aa78:	bl	402540 <abort@plt>
  46aa7c:	ldr	x1, [x27, #832]
  46aa80:	ldr	x0, [x25]
  46aa84:	add	x0, x22, x0
  46aa88:	tbz	x1, #62, 46a958 <_obstack_memory_used@@Base+0xe030>
  46aa8c:	strb	wzr, [x26]
  46aa90:	b	46a958 <_obstack_memory_used@@Base+0xe030>
  46aa94:	cmp	w0, #0x61
  46aa98:	b.gt	46aa78 <_obstack_memory_used@@Base+0xe150>
  46aa9c:	ldr	x4, [sp, #960]
  46aaa0:	ldr	x2, [x28, x1, lsl #3]
  46aaa4:	tbz	x4, #62, 46aac8 <_obstack_memory_used@@Base+0xe1a0>
  46aaa8:	mov	x0, x2
  46aaac:	nop
  46aab0:	add	x1, x23, #0x948
  46aab4:	ldrb	w1, [x24, x1]
  46aab8:	cmp	w1, #0x8
  46aabc:	b.hi	46aa78 <_obstack_memory_used@@Base+0xe150>  // b.pmore
  46aac0:	strb	w19, [x26]
  46aac4:	b	46a958 <_obstack_memory_used@@Base+0xe030>
  46aac8:	cmp	w0, #0x2e
  46aacc:	b.eq	46aae4 <_obstack_memory_used@@Base+0xe1bc>  // b.none
  46aad0:	ldrb	w0, [x20, x1]
  46aad4:	cmp	w0, #0x8
  46aad8:	b.ne	46aa78 <_obstack_memory_used@@Base+0xe150>  // b.any
  46aadc:	ldr	x0, [x2]
  46aae0:	b	46aab0 <_obstack_memory_used@@Base+0xe188>
  46aae4:	cntd	x0
  46aae8:	sxtw	x0, w0
  46aaec:	b	46aab0 <_obstack_memory_used@@Base+0xe188>
  46aaf0:	add	x1, sp, #0x3d8
  46aaf4:	ldrb	w1, [x1, x2]
  46aaf8:	cbnz	w1, 46a8a0 <_obstack_memory_used@@Base+0xdf78>
  46aafc:	cmp	w0, #0x2e
  46ab00:	b.ne	46a888 <_obstack_memory_used@@Base+0xdf60>  // b.any
  46ab04:	cntd	x0
  46ab08:	sxtw	x3, w0
  46ab0c:	b	46a8a0 <_obstack_memory_used@@Base+0xdf78>
  46ab10:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46ab14:	ldr	x2, [x27, #784]
  46ab18:	ldrb	w0, [x0, #2407]
  46ab1c:	cmp	w0, #0x8
  46ab20:	b.ne	46aa78 <_obstack_memory_used@@Base+0xe150>  // b.any
  46ab24:	str	x2, [sp, #120]
  46ab28:	tbz	x1, #62, 46ab30 <_obstack_memory_used@@Base+0xe208>
  46ab2c:	strb	wzr, [sp, #1015]
  46ab30:	add	x0, sp, #0x78
  46ab34:	str	x0, [x28, #248]
  46ab38:	b	46a844 <_obstack_memory_used@@Base+0xdf1c>
  46ab3c:	nop
  46ab40:	sub	sp, sp, #0x6d0
  46ab44:	stp	x29, x30, [sp]
  46ab48:	mov	x29, sp
  46ab4c:	xpaclri
  46ab50:	stp	x19, x20, [sp, #16]
  46ab54:	mov	x19, x0
  46ab58:	mov	x20, x30
  46ab5c:	stp	x21, x22, [sp, #32]
  46ab60:	mov	x22, x1
  46ab64:	mov	x21, x2
  46ab68:	mov	w1, #0x0                   	// #0
  46ab6c:	mov	x2, #0x3c0                 	// #960
  46ab70:	str	x23, [sp, #48]
  46ab74:	bl	402440 <memset@plt>
  46ab78:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  46ab7c:	str	x20, [x19, #792]
  46ab80:	str	x0, [x19, #832]
  46ab84:	add	x23, sp, #0x50
  46ab88:	mov	x1, x23
  46ab8c:	mov	x0, x19
  46ab90:	bl	4699c0 <_obstack_memory_used@@Base+0xd098>
  46ab94:	cbnz	w0, 46ad88 <_obstack_memory_used@@Base+0xe460>
  46ab98:	adrp	x0, 49d000 <_obstack_memory_used@@Base+0x406d8>
  46ab9c:	adrp	x20, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46aba0:	ldr	x0, [x0, #3880]
  46aba4:	cbz	x0, 46ac2c <_obstack_memory_used@@Base+0xe304>
  46aba8:	add	x0, x20, #0x948
  46abac:	adrp	x1, 469000 <_obstack_memory_used@@Base+0xc6d8>
  46abb0:	add	x0, x0, #0x64
  46abb4:	add	x1, x1, #0x868
  46abb8:	bl	4025a0 <pthread_once@plt>
  46abbc:	cbnz	w0, 46ac2c <_obstack_memory_used@@Base+0xe304>
  46abc0:	add	x20, x20, #0x948
  46abc4:	ldrb	w0, [x20, #31]
  46abc8:	cmp	w0, #0x8
  46abcc:	b.ne	46ad88 <_obstack_memory_used@@Base+0xe460>  // b.any
  46abd0:	ldr	x0, [x19, #832]
  46abd4:	str	x22, [sp, #72]
  46abd8:	tbz	x0, #62, 46abe0 <_obstack_memory_used@@Base+0xe2b8>
  46abdc:	strb	wzr, [x19, #887]
  46abe0:	add	x0, sp, #0x48
  46abe4:	mov	x3, #0x1f                  	// #31
  46abe8:	mov	w2, #0x1                   	// #1
  46abec:	str	x0, [x19, #248]
  46abf0:	mov	x1, x23
  46abf4:	mov	x0, x19
  46abf8:	str	xzr, [sp, #1656]
  46abfc:	str	x3, [sp, #1664]
  46ac00:	str	w2, [sp, #1680]
  46ac04:	bl	46a7f0 <_obstack_memory_used@@Base+0xdec8>
  46ac08:	mov	x30, x21
  46ac0c:	xpaclri
  46ac10:	ldp	x21, x22, [sp, #32]
  46ac14:	ldr	x23, [sp, #48]
  46ac18:	str	x30, [x19, #792]
  46ac1c:	ldp	x29, x30, [sp]
  46ac20:	ldp	x19, x20, [sp, #16]
  46ac24:	add	sp, sp, #0x6d0
  46ac28:	ret
  46ac2c:	ldrb	w0, [x20, #2376]
  46ac30:	add	x3, x20, #0x948
  46ac34:	cbnz	w0, 46abc0 <_obstack_memory_used@@Base+0xe298>
  46ac38:	mov	w4, #0x8                   	// #8
  46ac3c:	strb	w4, [x20, #2376]
  46ac40:	strb	w4, [x3, #1]
  46ac44:	strb	w4, [x3, #2]
  46ac48:	strb	w4, [x3, #3]
  46ac4c:	strb	w4, [x3, #4]
  46ac50:	strb	w4, [x3, #5]
  46ac54:	strb	w4, [x3, #6]
  46ac58:	strb	w4, [x3, #7]
  46ac5c:	strb	w4, [x3, #8]
  46ac60:	strb	w4, [x3, #9]
  46ac64:	strb	w4, [x3, #10]
  46ac68:	strb	w4, [x3, #11]
  46ac6c:	strb	w4, [x3, #12]
  46ac70:	strb	w4, [x3, #13]
  46ac74:	strb	w4, [x3, #14]
  46ac78:	strb	w4, [x3, #15]
  46ac7c:	strb	w4, [x3, #16]
  46ac80:	strb	w4, [x3, #17]
  46ac84:	strb	w4, [x3, #18]
  46ac88:	strb	w4, [x3, #19]
  46ac8c:	strb	w4, [x3, #20]
  46ac90:	strb	w4, [x3, #21]
  46ac94:	strb	w4, [x3, #22]
  46ac98:	strb	w4, [x3, #23]
  46ac9c:	strb	w4, [x3, #24]
  46aca0:	strb	w4, [x3, #25]
  46aca4:	strb	w4, [x3, #26]
  46aca8:	strb	w4, [x3, #27]
  46acac:	strb	w4, [x3, #28]
  46acb0:	strb	w4, [x3, #29]
  46acb4:	strb	w4, [x3, #30]
  46acb8:	strb	w4, [x3, #31]
  46acbc:	strb	w4, [x3, #64]
  46acc0:	strb	w4, [x3, #46]
  46acc4:	strb	w4, [x3, #65]
  46acc8:	strb	w4, [x3, #66]
  46accc:	strb	w4, [x3, #67]
  46acd0:	strb	w4, [x3, #68]
  46acd4:	strb	w4, [x3, #69]
  46acd8:	strb	w4, [x3, #70]
  46acdc:	strb	w4, [x3, #71]
  46ace0:	strb	w4, [x3, #72]
  46ace4:	strb	w4, [x3, #73]
  46ace8:	strb	w4, [x3, #74]
  46acec:	strb	w4, [x3, #75]
  46acf0:	strb	w4, [x3, #76]
  46acf4:	strb	w4, [x3, #77]
  46acf8:	strb	w4, [x3, #78]
  46acfc:	strb	w4, [x3, #79]
  46ad00:	strb	w4, [x3, #80]
  46ad04:	strb	w4, [x3, #81]
  46ad08:	strb	w4, [x3, #82]
  46ad0c:	strb	w4, [x3, #83]
  46ad10:	strb	w4, [x3, #84]
  46ad14:	strb	w4, [x3, #85]
  46ad18:	strb	w4, [x3, #86]
  46ad1c:	strb	w4, [x3, #87]
  46ad20:	strb	w4, [x3, #88]
  46ad24:	strb	w4, [x3, #89]
  46ad28:	strb	w4, [x3, #90]
  46ad2c:	strb	w4, [x3, #91]
  46ad30:	strb	w4, [x3, #92]
  46ad34:	strb	w4, [x3, #93]
  46ad38:	strb	w4, [x3, #94]
  46ad3c:	strb	w4, [x3, #95]
  46ad40:	strb	w4, [x3, #48]
  46ad44:	strb	w4, [x3, #49]
  46ad48:	strb	w4, [x3, #50]
  46ad4c:	strb	w4, [x3, #51]
  46ad50:	strb	w4, [x3, #52]
  46ad54:	strb	w4, [x3, #53]
  46ad58:	strb	w4, [x3, #54]
  46ad5c:	strb	w4, [x3, #55]
  46ad60:	strb	w4, [x3, #56]
  46ad64:	strb	w4, [x3, #57]
  46ad68:	strb	w4, [x3, #58]
  46ad6c:	strb	w4, [x3, #59]
  46ad70:	strb	w4, [x3, #60]
  46ad74:	strb	w4, [x3, #61]
  46ad78:	strb	w4, [x3, #62]
  46ad7c:	strb	w4, [x3, #63]
  46ad80:	strb	w4, [x3, #96]
  46ad84:	b	46abc0 <_obstack_memory_used@@Base+0xe298>
  46ad88:	bl	402540 <abort@plt>
  46ad8c:	nop
  46ad90:	stp	x29, x30, [sp, #-32]!
  46ad94:	mov	x29, sp
  46ad98:	stp	x19, x20, [sp, #16]
  46ad9c:	mov	x20, x1
  46ada0:	mov	x19, x0
  46ada4:	bl	46a7f0 <_obstack_memory_used@@Base+0xdec8>
  46ada8:	ldr	x0, [x20, #1640]
  46adac:	add	x1, x20, x0, lsl #4
  46adb0:	ldr	w1, [x1, #8]
  46adb4:	cmp	w1, #0x6
  46adb8:	b.ne	46adcc <_obstack_memory_used@@Base+0xe4a4>  // b.any
  46adbc:	str	xzr, [x19, #792]
  46adc0:	ldp	x19, x20, [sp, #16]
  46adc4:	ldp	x29, x30, [sp], #32
  46adc8:	ret
  46adcc:	cmp	w0, #0x61
  46add0:	b.gt	46ae40 <_obstack_memory_used@@Base+0xe518>
  46add4:	ldr	x2, [x19, #832]
  46add8:	sxtw	x1, w0
  46addc:	ldr	x17, [x19, x1, lsl #3]
  46ade0:	tbz	x2, #62, 46adf0 <_obstack_memory_used@@Base+0xe4c8>
  46ade4:	add	x2, x19, x1
  46ade8:	ldrb	w2, [x2, #856]
  46adec:	cbnz	w2, 46ae10 <_obstack_memory_used@@Base+0xe4e8>
  46adf0:	cmp	w0, #0x2e
  46adf4:	b.eq	46ae34 <_obstack_memory_used@@Base+0xe50c>  // b.none
  46adf8:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46adfc:	add	x0, x0, #0x948
  46ae00:	ldrb	w0, [x0, x1]
  46ae04:	cmp	w0, #0x8
  46ae08:	b.ne	46ae40 <_obstack_memory_used@@Base+0xe518>  // b.any
  46ae0c:	ldr	x17, [x17]
  46ae10:	ldr	x0, [x20, #544]
  46ae14:	str	x17, [x19, #792]
  46ae18:	tbz	w0, #0, 46ae24 <_obstack_memory_used@@Base+0xe4fc>
  46ae1c:	ldr	x16, [x19, #784]
  46ae20:	autia1716
  46ae24:	str	x17, [x19, #792]
  46ae28:	ldp	x19, x20, [sp, #16]
  46ae2c:	ldp	x29, x30, [sp], #32
  46ae30:	ret
  46ae34:	cntd	x0
  46ae38:	sxtw	x17, w0
  46ae3c:	b	46ae10 <_obstack_memory_used@@Base+0xe4e8>
  46ae40:	bl	402540 <abort@plt>
  46ae44:	nop
  46ae48:	sub	sp, sp, #0x6c0
  46ae4c:	stp	x29, x30, [sp]
  46ae50:	mov	x29, sp
  46ae54:	stp	x19, x20, [sp, #16]
  46ae58:	mov	x19, x1
  46ae5c:	stp	x21, x22, [sp, #32]
  46ae60:	mov	x21, x0
  46ae64:	add	x22, sp, #0x40
  46ae68:	stp	x23, x24, [sp, #48]
  46ae6c:	mov	x24, x2
  46ae70:	mov	x23, #0x1                   	// #1
  46ae74:	nop
  46ae78:	mov	x1, x22
  46ae7c:	mov	x0, x19
  46ae80:	bl	4699c0 <_obstack_memory_used@@Base+0xd098>
  46ae84:	ldr	x3, [x19, #784]
  46ae88:	ldr	x1, [x19, #832]
  46ae8c:	ldr	x2, [x21, #24]
  46ae90:	sub	x1, x3, x1, lsr #63
  46ae94:	cmp	x2, x1
  46ae98:	cset	w20, eq  // eq = none
  46ae9c:	lsl	w20, w20, #2
  46aea0:	cbnz	w0, 46aeec <_obstack_memory_used@@Base+0xe5c4>
  46aea4:	ldr	x5, [sp, #1680]
  46aea8:	cbz	x5, 46aed4 <_obstack_memory_used@@Base+0xe5ac>
  46aeac:	ldr	x2, [x21]
  46aeb0:	mov	x4, x19
  46aeb4:	mov	x3, x21
  46aeb8:	orr	w1, w20, #0x2
  46aebc:	mov	w0, #0x1                   	// #1
  46aec0:	blr	x5
  46aec4:	cmp	w0, #0x7
  46aec8:	b.eq	46af08 <_obstack_memory_used@@Base+0xe5e0>  // b.none
  46aecc:	cmp	w0, #0x8
  46aed0:	b.ne	46aeec <_obstack_memory_used@@Base+0xe5c4>  // b.any
  46aed4:	cbnz	w20, 46af24 <_obstack_memory_used@@Base+0xe5fc>
  46aed8:	add	x23, x23, #0x1
  46aedc:	mov	x1, x22
  46aee0:	mov	x0, x19
  46aee4:	bl	46ad90 <_obstack_memory_used@@Base+0xe468>
  46aee8:	b	46ae78 <_obstack_memory_used@@Base+0xe550>
  46aeec:	mov	w0, #0x2                   	// #2
  46aef0:	ldp	x29, x30, [sp]
  46aef4:	ldp	x19, x20, [sp, #16]
  46aef8:	ldp	x21, x22, [sp, #32]
  46aefc:	ldp	x23, x24, [sp, #48]
  46af00:	add	sp, sp, #0x6c0
  46af04:	ret
  46af08:	str	x23, [x24]
  46af0c:	ldp	x29, x30, [sp]
  46af10:	ldp	x19, x20, [sp, #16]
  46af14:	ldp	x21, x22, [sp, #32]
  46af18:	ldp	x23, x24, [sp, #48]
  46af1c:	add	sp, sp, #0x6c0
  46af20:	ret
  46af24:	bl	402540 <abort@plt>
  46af28:	sub	sp, sp, #0x6d0
  46af2c:	stp	x29, x30, [sp]
  46af30:	mov	x29, sp
  46af34:	stp	x19, x20, [sp, #16]
  46af38:	mov	x20, x0
  46af3c:	stp	x21, x22, [sp, #32]
  46af40:	mov	x21, x1
  46af44:	add	x22, sp, #0x50
  46af48:	stp	x23, x24, [sp, #48]
  46af4c:	mov	x23, #0x1                   	// #1
  46af50:	stp	x25, x26, [sp, #64]
  46af54:	mov	x26, x2
  46af58:	ldp	x25, x24, [x0, #16]
  46af5c:	b	46afb0 <_obstack_memory_used@@Base+0xe688>
  46af60:	blr	x25
  46af64:	mov	w2, w0
  46af68:	mov	x4, x21
  46af6c:	mov	x3, x20
  46af70:	mov	w1, #0xa                   	// #10
  46af74:	mov	w0, #0x1                   	// #1
  46af78:	cbnz	w2, 46affc <_obstack_memory_used@@Base+0xe6d4>
  46af7c:	ldr	x5, [sp, #1696]
  46af80:	cbz	x5, 46afa0 <_obstack_memory_used@@Base+0xe678>
  46af84:	ldr	x2, [x20]
  46af88:	blr	x5
  46af8c:	mov	w19, w0
  46af90:	cmp	w0, #0x7
  46af94:	b.eq	46b020 <_obstack_memory_used@@Base+0xe6f8>  // b.none
  46af98:	cmp	w0, #0x8
  46af9c:	b.ne	46affc <_obstack_memory_used@@Base+0xe6d4>  // b.any
  46afa0:	add	x23, x23, #0x1
  46afa4:	mov	x1, x22
  46afa8:	mov	x0, x21
  46afac:	bl	46ad90 <_obstack_memory_used@@Base+0xe468>
  46afb0:	mov	x1, x22
  46afb4:	mov	x0, x21
  46afb8:	bl	4699c0 <_obstack_memory_used@@Base+0xd098>
  46afbc:	cmp	w0, #0x0
  46afc0:	mov	w19, w0
  46afc4:	mov	x5, x24
  46afc8:	mov	x4, x21
  46afcc:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  46afd0:	b.ne	46affc <_obstack_memory_used@@Base+0xe6d4>  // b.any
  46afd4:	cmp	w0, #0x5
  46afd8:	mov	x3, x20
  46afdc:	mov	w1, #0xa                   	// #10
  46afe0:	mov	w0, #0x1                   	// #1
  46afe4:	ldr	x2, [x20]
  46afe8:	b.ne	46af60 <_obstack_memory_used@@Base+0xe638>  // b.any
  46afec:	mov	w1, #0x1a                  	// #26
  46aff0:	mov	w0, #0x1                   	// #1
  46aff4:	blr	x25
  46aff8:	cbz	w0, 46b020 <_obstack_memory_used@@Base+0xe6f8>
  46affc:	mov	w19, #0x2                   	// #2
  46b000:	mov	w0, w19
  46b004:	ldp	x29, x30, [sp]
  46b008:	ldp	x19, x20, [sp, #16]
  46b00c:	ldp	x21, x22, [sp, #32]
  46b010:	ldp	x23, x24, [sp, #48]
  46b014:	ldp	x25, x26, [sp, #64]
  46b018:	add	sp, sp, #0x6d0
  46b01c:	ret
  46b020:	str	x23, [x26]
  46b024:	mov	w0, w19
  46b028:	ldp	x29, x30, [sp]
  46b02c:	ldp	x19, x20, [sp, #16]
  46b030:	ldp	x21, x22, [sp, #32]
  46b034:	ldp	x23, x24, [sp, #48]
  46b038:	ldp	x25, x26, [sp, #64]
  46b03c:	add	sp, sp, #0x6d0
  46b040:	ret
  46b044:	nop
  46b048:	cmp	w1, #0x61
  46b04c:	b.gt	46b0a4 <_obstack_memory_used@@Base+0xe77c>
  46b050:	ldr	x4, [x0, #832]
  46b054:	sxtw	x3, w1
  46b058:	ldr	x2, [x0, x3, lsl #3]
  46b05c:	tbz	x4, #62, 46b06c <_obstack_memory_used@@Base+0xe744>
  46b060:	add	x0, x0, x3
  46b064:	ldrb	w0, [x0, #856]
  46b068:	cbnz	w0, 46b09c <_obstack_memory_used@@Base+0xe774>
  46b06c:	cmp	w1, #0x2e
  46b070:	b.eq	46b090 <_obstack_memory_used@@Base+0xe768>  // b.none
  46b074:	adrp	x0, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46b078:	add	x0, x0, #0x948
  46b07c:	ldrb	w0, [x0, w1, sxtw]
  46b080:	cmp	w0, #0x8
  46b084:	b.ne	46b0a4 <_obstack_memory_used@@Base+0xe77c>  // b.any
  46b088:	ldr	x0, [x2]
  46b08c:	ret
  46b090:	cntd	x0
  46b094:	sxtw	x0, w0
  46b098:	ret
  46b09c:	mov	x0, x2
  46b0a0:	ret
  46b0a4:	stp	x29, x30, [sp, #-16]!
  46b0a8:	mov	x29, sp
  46b0ac:	bl	402540 <abort@plt>
  46b0b0:	ldr	x0, [x0, #784]
  46b0b4:	ret
  46b0b8:	cmp	w1, #0x61
  46b0bc:	b.gt	46b100 <_obstack_memory_used@@Base+0xe7d8>
  46b0c0:	ldr	x5, [x0, #832]
  46b0c4:	adrp	x3, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46b0c8:	add	x3, x3, #0x948
  46b0cc:	sxtw	x4, w1
  46b0d0:	ldrb	w1, [x3, w1, sxtw]
  46b0d4:	tbz	x5, #62, 46b0e4 <_obstack_memory_used@@Base+0xe7bc>
  46b0d8:	add	x3, x0, x4
  46b0dc:	ldrb	w3, [x3, #856]
  46b0e0:	cbnz	w3, 46b0f8 <_obstack_memory_used@@Base+0xe7d0>
  46b0e4:	cmp	w1, #0x8
  46b0e8:	ldr	x0, [x0, x4, lsl #3]
  46b0ec:	b.ne	46b100 <_obstack_memory_used@@Base+0xe7d8>  // b.any
  46b0f0:	str	x2, [x0]
  46b0f4:	ret
  46b0f8:	str	x2, [x0, x4, lsl #3]
  46b0fc:	ret
  46b100:	stp	x29, x30, [sp, #-16]!
  46b104:	mov	x29, sp
  46b108:	bl	402540 <abort@plt>
  46b10c:	nop
  46b110:	ldr	x0, [x0, #792]
  46b114:	ret
  46b118:	ldr	x2, [x0, #832]
  46b11c:	ldr	x0, [x0, #792]
  46b120:	lsr	x2, x2, #63
  46b124:	str	w2, [x1]
  46b128:	ret
  46b12c:	nop
  46b130:	str	x1, [x0, #792]
  46b134:	ret
  46b138:	ldr	x0, [x0, #800]
  46b13c:	ret
  46b140:	ldr	x0, [x0, #824]
  46b144:	ret
  46b148:	stp	x29, x30, [sp, #-48]!
  46b14c:	sub	x0, x0, #0x1
  46b150:	mov	x29, sp
  46b154:	add	x1, sp, #0x18
  46b158:	bl	46d100 <_obstack_memory_used@@Base+0x107d8>
  46b15c:	ldr	x1, [sp, #40]
  46b160:	cmp	x0, #0x0
  46b164:	ldp	x29, x30, [sp], #48
  46b168:	csel	x0, x1, x0, ne  // ne = any
  46b16c:	ret
  46b170:	ldr	x0, [x0, #816]
  46b174:	ret
  46b178:	ldr	x0, [x0, #808]
  46b17c:	ret
  46b180:	sub	sp, sp, #0xa70
  46b184:	mov	x2, #0x3c0                 	// #960
  46b188:	add	x3, sp, #0x30
  46b18c:	stp	x29, x30, [sp]
  46b190:	mov	x29, sp
  46b194:	stp	x19, x20, [sp, #16]
  46b198:	mov	x20, x1
  46b19c:	mov	w1, #0x0                   	// #0
  46b1a0:	str	x21, [sp, #32]
  46b1a4:	mov	x21, x0
  46b1a8:	mov	x0, x3
  46b1ac:	bl	402440 <memset@plt>
  46b1b0:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  46b1b4:	add	x19, sp, #0x3f0
  46b1b8:	add	x21, x21, #0x1
  46b1bc:	mov	x1, x19
  46b1c0:	str	x21, [sp, #840]
  46b1c4:	str	x2, [sp, #880]
  46b1c8:	bl	4699c0 <_obstack_memory_used@@Base+0xd098>
  46b1cc:	cbnz	w0, 46b278 <_obstack_memory_used@@Base+0xe950>
  46b1d0:	ldr	w0, [sp, #2608]
  46b1d4:	cmp	w0, #0x2
  46b1d8:	b.eq	46b278 <_obstack_memory_used@@Base+0xe950>  // b.none
  46b1dc:	sub	x4, x20, x20, lsl #3
  46b1e0:	mov	x1, #0xffffffffffffe680    	// #-6528
  46b1e4:	mov	x0, x19
  46b1e8:	add	x5, x19, #0x620
  46b1ec:	add	x4, x4, x1
  46b1f0:	add	x2, x20, #0x334
  46b1f4:	b	46b20c <_obstack_memory_used@@Base+0xe8e4>
  46b1f8:	str	xzr, [x4, x2, lsl #3]
  46b1fc:	add	x0, x0, #0x10
  46b200:	add	x2, x2, #0x1
  46b204:	cmp	x0, x5
  46b208:	b.eq	46b23c <_obstack_memory_used@@Base+0xe914>  // b.none
  46b20c:	ldrb	w3, [x0, #8]
  46b210:	strb	w3, [x2]
  46b214:	cmp	w3, #0x1
  46b218:	b.eq	46b224 <_obstack_memory_used@@Base+0xe8fc>  // b.none
  46b21c:	cmp	w3, #0x2
  46b220:	b.ne	46b1f8 <_obstack_memory_used@@Base+0xe8d0>  // b.any
  46b224:	ldr	x3, [x0]
  46b228:	str	x3, [x4, x2, lsl #3]
  46b22c:	add	x0, x0, #0x10
  46b230:	add	x2, x2, #0x1
  46b234:	cmp	x0, x5
  46b238:	b.ne	46b20c <_obstack_memory_used@@Base+0xe8e4>  // b.any
  46b23c:	ldr	x1, [sp, #896]
  46b240:	mov	x0, x20
  46b244:	ldr	x2, [sp, #2584]
  46b248:	stp	x2, x1, [x20, #16]
  46b24c:	ldr	x2, [sp, #2592]
  46b250:	strh	w2, [x20, #816]
  46b254:	ldr	x1, [sp, #2648]
  46b258:	strh	w1, [x20, #818]
  46b25c:	ldr	x2, [sp, #2664]
  46b260:	str	x2, [x20, #8]
  46b264:	ldp	x29, x30, [sp]
  46b268:	ldp	x19, x20, [sp, #16]
  46b26c:	ldr	x21, [sp, #32]
  46b270:	add	sp, sp, #0xa70
  46b274:	ret
  46b278:	mov	x0, #0x0                   	// #0
  46b27c:	ldp	x29, x30, [sp]
  46b280:	ldp	x19, x20, [sp, #16]
  46b284:	ldr	x21, [sp, #32]
  46b288:	add	sp, sp, #0xa70
  46b28c:	ret
  46b290:	ret
  46b294:	nop
  46b298:	sub	sp, sp, #0xec0
  46b29c:	stp	x29, x30, [sp]
  46b2a0:	mov	x29, sp
  46b2a4:	stp	x21, x22, [sp, #64]
  46b2a8:	add	x21, sp, #0xc0
  46b2ac:	add	x22, sp, #0x840
  46b2b0:	stp	x0, x1, [sp, #16]
  46b2b4:	add	x1, sp, #0xec0
  46b2b8:	stp	x2, x3, [sp, #32]
  46b2bc:	mov	x2, x30
  46b2c0:	stp	x19, x20, [sp, #48]
  46b2c4:	mov	x20, x0
  46b2c8:	add	x19, sp, #0x480
  46b2cc:	mov	x0, x21
  46b2d0:	stp	x23, x24, [sp, #80]
  46b2d4:	stp	x25, x26, [sp, #96]
  46b2d8:	stp	x27, x28, [sp, #112]
  46b2dc:	stp	d8, d9, [sp, #128]
  46b2e0:	stp	d10, d11, [sp, #144]
  46b2e4:	stp	d12, d13, [sp, #160]
  46b2e8:	stp	d14, d15, [sp, #176]
  46b2ec:	bl	46ab40 <_obstack_memory_used@@Base+0xe218>
  46b2f0:	mov	x1, x21
  46b2f4:	mov	x0, x19
  46b2f8:	mov	x2, #0x3c0                 	// #960
  46b2fc:	bl	402220 <memcpy@plt>
  46b300:	b	46b334 <_obstack_memory_used@@Base+0xea0c>
  46b304:	cbnz	w2, 46b3a0 <_obstack_memory_used@@Base+0xea78>
  46b308:	ldr	x5, [sp, #3728]
  46b30c:	cbz	x5, 46b328 <_obstack_memory_used@@Base+0xea00>
  46b310:	ldr	x2, [x20]
  46b314:	blr	x5
  46b318:	cmp	w0, #0x6
  46b31c:	b.eq	46b3a8 <_obstack_memory_used@@Base+0xea80>  // b.none
  46b320:	cmp	w0, #0x8
  46b324:	b.ne	46b3a0 <_obstack_memory_used@@Base+0xea78>  // b.any
  46b328:	mov	x1, x22
  46b32c:	mov	x0, x19
  46b330:	bl	46ad90 <_obstack_memory_used@@Base+0xe468>
  46b334:	mov	x1, x22
  46b338:	mov	x0, x19
  46b33c:	bl	4699c0 <_obstack_memory_used@@Base+0xd098>
  46b340:	mov	w2, w0
  46b344:	mov	w1, #0x1                   	// #1
  46b348:	mov	x4, x19
  46b34c:	mov	x3, x20
  46b350:	mov	w0, w1
  46b354:	cmp	w2, #0x5
  46b358:	b.ne	46b304 <_obstack_memory_used@@Base+0xe9dc>  // b.any
  46b35c:	mov	x4, #0x0                   	// #0
  46b360:	mov	w0, w2
  46b364:	ldp	x29, x30, [sp]
  46b368:	ldp	x0, x1, [sp, #16]
  46b36c:	ldp	x2, x3, [sp, #32]
  46b370:	ldp	x19, x20, [sp, #48]
  46b374:	ldp	x21, x22, [sp, #64]
  46b378:	ldp	x23, x24, [sp, #80]
  46b37c:	ldp	x25, x26, [sp, #96]
  46b380:	ldp	x27, x28, [sp, #112]
  46b384:	ldp	d8, d9, [sp, #128]
  46b388:	ldp	d10, d11, [sp, #144]
  46b38c:	ldp	d12, d13, [sp, #160]
  46b390:	ldp	d14, d15, [sp, #176]
  46b394:	add	sp, sp, #0xec0
  46b398:	add	sp, sp, x4
  46b39c:	ret
  46b3a0:	mov	w2, #0x3                   	// #3
  46b3a4:	b	46b35c <_obstack_memory_used@@Base+0xea34>
  46b3a8:	ldr	x4, [sp, #1936]
  46b3ac:	mov	x1, x21
  46b3b0:	ldr	x3, [sp, #1984]
  46b3b4:	mov	x2, #0x3c0                 	// #960
  46b3b8:	mov	x0, x19
  46b3bc:	sub	x3, x4, x3, lsr #63
  46b3c0:	stp	xzr, x3, [x20, #16]
  46b3c4:	bl	402220 <memcpy@plt>
  46b3c8:	mov	x2, x22
  46b3cc:	mov	x1, x19
  46b3d0:	mov	x0, x20
  46b3d4:	bl	46ae48 <_obstack_memory_used@@Base+0xe520>
  46b3d8:	mov	w2, w0
  46b3dc:	cmp	w0, #0x7
  46b3e0:	b.ne	46b35c <_obstack_memory_used@@Base+0xea34>  // b.any
  46b3e4:	mov	x1, x19
  46b3e8:	mov	x0, x21
  46b3ec:	bl	469f18 <_obstack_memory_used@@Base+0xd5f0>
  46b3f0:	mov	x4, x0
  46b3f4:	ldr	x2, [sp, #1024]
  46b3f8:	ldr	x1, [sp, #1944]
  46b3fc:	tbz	x2, #61, 46b410 <_obstack_memory_used@@Base+0xeae8>
  46b400:	mov	x17, x1
  46b404:	ldr	x16, [sp, #976]
  46b408:	pacia1716
  46b40c:	mov	x1, x17
  46b410:	ldr	x0, [sp, #1936]
  46b414:	bl	46b290 <_obstack_memory_used@@Base+0xe968>
  46b418:	str	x1, [x29, #8]
  46b41c:	b	46b360 <_obstack_memory_used@@Base+0xea38>
  46b420:	sub	sp, sp, #0x850
  46b424:	stp	x29, x30, [sp]
  46b428:	mov	x29, sp
  46b42c:	stp	x19, x20, [sp, #48]
  46b430:	mov	x19, x0
  46b434:	mov	x20, x2
  46b438:	stp	x21, x22, [sp, #64]
  46b43c:	add	x22, sp, #0xd0
  46b440:	mov	x21, x1
  46b444:	stp	x0, x1, [sp, #16]
  46b448:	mov	x0, x22
  46b44c:	add	x1, sp, #0x850
  46b450:	stp	x2, x3, [sp, #32]
  46b454:	mov	x2, x30
  46b458:	stp	x23, x24, [sp, #80]
  46b45c:	add	x23, sp, #0x490
  46b460:	stp	x25, x26, [sp, #96]
  46b464:	stp	x27, x28, [sp, #112]
  46b468:	stp	d8, d9, [sp, #128]
  46b46c:	stp	d10, d11, [sp, #144]
  46b470:	stp	d12, d13, [sp, #160]
  46b474:	stp	d14, d15, [sp, #176]
  46b478:	bl	46ab40 <_obstack_memory_used@@Base+0xe218>
  46b47c:	mov	x1, x22
  46b480:	mov	x2, #0x3c0                 	// #960
  46b484:	mov	x0, x23
  46b488:	bl	402220 <memcpy@plt>
  46b48c:	stp	x21, x20, [x19, #16]
  46b490:	mov	x0, x19
  46b494:	mov	x1, x23
  46b498:	add	x2, sp, #0xc8
  46b49c:	bl	46af28 <_obstack_memory_used@@Base+0xe600>
  46b4a0:	cmp	w0, #0x7
  46b4a4:	mov	x4, #0x0                   	// #0
  46b4a8:	b.eq	46b4e8 <_obstack_memory_used@@Base+0xebc0>  // b.none
  46b4ac:	ldp	x29, x30, [sp]
  46b4b0:	ldp	x0, x1, [sp, #16]
  46b4b4:	ldp	x2, x3, [sp, #32]
  46b4b8:	ldp	x19, x20, [sp, #48]
  46b4bc:	ldp	x21, x22, [sp, #64]
  46b4c0:	ldp	x23, x24, [sp, #80]
  46b4c4:	ldp	x25, x26, [sp, #96]
  46b4c8:	ldp	x27, x28, [sp, #112]
  46b4cc:	ldp	d8, d9, [sp, #128]
  46b4d0:	ldp	d10, d11, [sp, #144]
  46b4d4:	ldp	d12, d13, [sp, #160]
  46b4d8:	ldp	d14, d15, [sp, #176]
  46b4dc:	add	sp, sp, #0x850
  46b4e0:	add	sp, sp, x4
  46b4e4:	ret
  46b4e8:	mov	x1, x23
  46b4ec:	mov	x0, x22
  46b4f0:	bl	469f18 <_obstack_memory_used@@Base+0xd5f0>
  46b4f4:	mov	x4, x0
  46b4f8:	ldr	x2, [sp, #1040]
  46b4fc:	ldr	x1, [sp, #1960]
  46b500:	tbz	x2, #61, 46b514 <_obstack_memory_used@@Base+0xebec>
  46b504:	mov	x17, x1
  46b508:	ldr	x16, [sp, #992]
  46b50c:	pacia1716
  46b510:	mov	x1, x17
  46b514:	ldr	x0, [sp, #1952]
  46b518:	bl	46b290 <_obstack_memory_used@@Base+0xe968>
  46b51c:	str	x1, [x29, #8]
  46b520:	b	46b4ac <_obstack_memory_used@@Base+0xeb84>
  46b524:	nop
  46b528:	sub	sp, sp, #0x850
  46b52c:	stp	x29, x30, [sp]
  46b530:	mov	x29, sp
  46b534:	stp	x19, x20, [sp, #48]
  46b538:	mov	x19, x0
  46b53c:	add	x20, sp, #0xd0
  46b540:	stp	x0, x1, [sp, #16]
  46b544:	mov	x0, x20
  46b548:	add	x1, sp, #0x850
  46b54c:	stp	x2, x3, [sp, #32]
  46b550:	mov	x2, x30
  46b554:	stp	x21, x22, [sp, #64]
  46b558:	add	x21, sp, #0x490
  46b55c:	stp	x23, x24, [sp, #80]
  46b560:	stp	x25, x26, [sp, #96]
  46b564:	stp	x27, x28, [sp, #112]
  46b568:	stp	d8, d9, [sp, #128]
  46b56c:	stp	d10, d11, [sp, #144]
  46b570:	stp	d12, d13, [sp, #160]
  46b574:	stp	d14, d15, [sp, #176]
  46b578:	bl	46ab40 <_obstack_memory_used@@Base+0xe218>
  46b57c:	mov	x1, x20
  46b580:	mov	x0, x21
  46b584:	mov	x2, #0x3c0                 	// #960
  46b588:	bl	402220 <memcpy@plt>
  46b58c:	ldr	x0, [x19, #16]
  46b590:	cbnz	x0, 46b620 <_obstack_memory_used@@Base+0xecf8>
  46b594:	mov	x0, x19
  46b598:	add	x2, sp, #0xc8
  46b59c:	mov	x1, x21
  46b5a0:	bl	46ae48 <_obstack_memory_used@@Base+0xe520>
  46b5a4:	cmp	w0, #0x7
  46b5a8:	b.ne	46b634 <_obstack_memory_used@@Base+0xed0c>  // b.any
  46b5ac:	mov	x1, x21
  46b5b0:	mov	x0, x20
  46b5b4:	bl	469f18 <_obstack_memory_used@@Base+0xd5f0>
  46b5b8:	mov	x4, x0
  46b5bc:	ldr	x2, [sp, #1040]
  46b5c0:	ldr	x1, [sp, #1960]
  46b5c4:	tbz	x2, #61, 46b5d8 <_obstack_memory_used@@Base+0xecb0>
  46b5c8:	mov	x17, x1
  46b5cc:	ldr	x16, [sp, #992]
  46b5d0:	pacia1716
  46b5d4:	mov	x1, x17
  46b5d8:	ldr	x0, [sp, #1952]
  46b5dc:	bl	46b290 <_obstack_memory_used@@Base+0xe968>
  46b5e0:	str	x1, [x29, #8]
  46b5e4:	ldp	x29, x30, [sp]
  46b5e8:	ldp	x0, x1, [sp, #16]
  46b5ec:	ldp	x2, x3, [sp, #32]
  46b5f0:	ldp	x19, x20, [sp, #48]
  46b5f4:	ldp	x21, x22, [sp, #64]
  46b5f8:	ldp	x23, x24, [sp, #80]
  46b5fc:	ldp	x25, x26, [sp, #96]
  46b600:	ldp	x27, x28, [sp, #112]
  46b604:	ldp	d8, d9, [sp, #128]
  46b608:	ldp	d10, d11, [sp, #144]
  46b60c:	ldp	d12, d13, [sp, #160]
  46b610:	ldp	d14, d15, [sp, #176]
  46b614:	add	sp, sp, #0x850
  46b618:	add	sp, sp, x4
  46b61c:	ret
  46b620:	mov	x0, x19
  46b624:	add	x2, sp, #0xc8
  46b628:	mov	x1, x21
  46b62c:	bl	46af28 <_obstack_memory_used@@Base+0xe600>
  46b630:	b	46b5a4 <_obstack_memory_used@@Base+0xec7c>
  46b634:	bl	402540 <abort@plt>
  46b638:	sub	sp, sp, #0x850
  46b63c:	stp	x29, x30, [sp]
  46b640:	mov	x29, sp
  46b644:	stp	x0, x1, [sp, #16]
  46b648:	ldr	x1, [x0, #16]
  46b64c:	stp	x2, x3, [sp, #32]
  46b650:	stp	x19, x20, [sp, #48]
  46b654:	mov	x19, x0
  46b658:	stp	x21, x22, [sp, #64]
  46b65c:	stp	x23, x24, [sp, #80]
  46b660:	stp	x25, x26, [sp, #96]
  46b664:	stp	x27, x28, [sp, #112]
  46b668:	stp	d8, d9, [sp, #128]
  46b66c:	stp	d10, d11, [sp, #144]
  46b670:	stp	d12, d13, [sp, #160]
  46b674:	stp	d14, d15, [sp, #176]
  46b678:	cbnz	x1, 46b6c0 <_obstack_memory_used@@Base+0xed98>
  46b67c:	bl	46b298 <_obstack_memory_used@@Base+0xe970>
  46b680:	mov	x4, #0x0                   	// #0
  46b684:	ldp	x29, x30, [sp]
  46b688:	ldp	x0, x1, [sp, #16]
  46b68c:	ldp	x2, x3, [sp, #32]
  46b690:	ldp	x19, x20, [sp, #48]
  46b694:	ldp	x21, x22, [sp, #64]
  46b698:	ldp	x23, x24, [sp, #80]
  46b69c:	ldp	x25, x26, [sp, #96]
  46b6a0:	ldp	x27, x28, [sp, #112]
  46b6a4:	ldp	d8, d9, [sp, #128]
  46b6a8:	ldp	d10, d11, [sp, #144]
  46b6ac:	ldp	d12, d13, [sp, #160]
  46b6b0:	ldp	d14, d15, [sp, #176]
  46b6b4:	add	sp, sp, #0x850
  46b6b8:	add	sp, sp, x4
  46b6bc:	ret
  46b6c0:	add	x20, sp, #0xd0
  46b6c4:	mov	x2, x30
  46b6c8:	mov	x0, x20
  46b6cc:	add	x1, sp, #0x850
  46b6d0:	add	x21, sp, #0x490
  46b6d4:	bl	46ab40 <_obstack_memory_used@@Base+0xe218>
  46b6d8:	mov	x1, x20
  46b6dc:	mov	x2, #0x3c0                 	// #960
  46b6e0:	mov	x0, x21
  46b6e4:	bl	402220 <memcpy@plt>
  46b6e8:	mov	x0, x19
  46b6ec:	mov	x1, x21
  46b6f0:	add	x2, sp, #0xc8
  46b6f4:	bl	46af28 <_obstack_memory_used@@Base+0xe600>
  46b6f8:	cmp	w0, #0x7
  46b6fc:	b.ne	46b73c <_obstack_memory_used@@Base+0xee14>  // b.any
  46b700:	mov	x1, x21
  46b704:	mov	x0, x20
  46b708:	bl	469f18 <_obstack_memory_used@@Base+0xd5f0>
  46b70c:	mov	x4, x0
  46b710:	ldr	x2, [sp, #1040]
  46b714:	ldr	x1, [sp, #1960]
  46b718:	tbz	x2, #61, 46b72c <_obstack_memory_used@@Base+0xee04>
  46b71c:	mov	x17, x1
  46b720:	ldr	x16, [sp, #992]
  46b724:	pacia1716
  46b728:	mov	x1, x17
  46b72c:	ldr	x0, [sp, #1952]
  46b730:	bl	46b290 <_obstack_memory_used@@Base+0xe968>
  46b734:	str	x1, [x29, #8]
  46b738:	b	46b684 <_obstack_memory_used@@Base+0xed5c>
  46b73c:	bl	402540 <abort@plt>
  46b740:	ldr	x2, [x0, #8]
  46b744:	mov	x1, x0
  46b748:	cbz	x2, 46b758 <_obstack_memory_used@@Base+0xee30>
  46b74c:	mov	x16, x2
  46b750:	mov	w0, #0x1                   	// #1
  46b754:	br	x16
  46b758:	ret
  46b75c:	nop
  46b760:	sub	sp, sp, #0xae0
  46b764:	mov	x2, x30
  46b768:	stp	x29, x30, [sp]
  46b76c:	mov	x29, sp
  46b770:	stp	x19, x20, [sp, #16]
  46b774:	add	x20, sp, #0xa0
  46b778:	stp	x21, x22, [sp, #32]
  46b77c:	mov	x22, x1
  46b780:	add	x21, sp, #0x460
  46b784:	add	x1, sp, #0xae0
  46b788:	stp	x23, x24, [sp, #48]
  46b78c:	mov	x23, x0
  46b790:	mov	x0, x20
  46b794:	stp	x25, x26, [sp, #64]
  46b798:	stp	x27, x28, [sp, #80]
  46b79c:	stp	d8, d9, [sp, #96]
  46b7a0:	stp	d10, d11, [sp, #112]
  46b7a4:	stp	d12, d13, [sp, #128]
  46b7a8:	stp	d14, d15, [sp, #144]
  46b7ac:	bl	46ab40 <_obstack_memory_used@@Base+0xe218>
  46b7b0:	b	46b7d0 <_obstack_memory_used@@Base+0xeea8>
  46b7b4:	blr	x23
  46b7b8:	cbnz	w0, 46b7f4 <_obstack_memory_used@@Base+0xeecc>
  46b7bc:	cmp	w19, #0x5
  46b7c0:	b.eq	46b7f8 <_obstack_memory_used@@Base+0xeed0>  // b.none
  46b7c4:	mov	x1, x21
  46b7c8:	mov	x0, x20
  46b7cc:	bl	46ad90 <_obstack_memory_used@@Base+0xe468>
  46b7d0:	mov	x1, x21
  46b7d4:	mov	x0, x20
  46b7d8:	bl	4699c0 <_obstack_memory_used@@Base+0xd098>
  46b7dc:	mov	w19, w0
  46b7e0:	cmp	w0, #0x0
  46b7e4:	mov	x1, x22
  46b7e8:	mov	x0, x20
  46b7ec:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  46b7f0:	b.eq	46b7b4 <_obstack_memory_used@@Base+0xee8c>  // b.none
  46b7f4:	mov	w19, #0x3                   	// #3
  46b7f8:	mov	w0, w19
  46b7fc:	ldp	x29, x30, [sp]
  46b800:	ldp	x19, x20, [sp, #16]
  46b804:	ldp	x21, x22, [sp, #32]
  46b808:	ldp	x23, x24, [sp, #48]
  46b80c:	ldp	x25, x26, [sp, #64]
  46b810:	ldp	x27, x28, [sp, #80]
  46b814:	ldp	d8, d9, [sp, #96]
  46b818:	ldp	d10, d11, [sp, #112]
  46b81c:	ldp	d12, d13, [sp, #128]
  46b820:	ldp	d14, d15, [sp, #144]
  46b824:	add	sp, sp, #0xae0
  46b828:	ret
  46b82c:	nop
  46b830:	ldr	x3, [x1, #8]
  46b834:	mov	w4, #0x1                   	// #1
  46b838:	ldr	x1, [x2, #8]
  46b83c:	cmp	x3, x1
  46b840:	csetm	w0, cc  // cc = lo, ul, last
  46b844:	csel	w0, w0, w4, ls  // ls = plast
  46b848:	ret
  46b84c:	nop
  46b850:	stp	x29, x30, [sp, #-112]!
  46b854:	mov	x29, sp
  46b858:	stp	x21, x22, [sp, #32]
  46b85c:	lsl	w21, w3, #1
  46b860:	stp	x25, x26, [sp, #64]
  46b864:	add	w25, w21, #0x1
  46b868:	cmp	w25, w4
  46b86c:	b.ge	46b944 <_obstack_memory_used@@Base+0xf01c>  // b.tcont
  46b870:	mov	w22, w3
  46b874:	stp	x19, x20, [sp, #16]
  46b878:	mov	x20, x2
  46b87c:	stp	x23, x24, [sp, #48]
  46b880:	mov	w23, w4
  46b884:	mov	x24, x1
  46b888:	stp	x27, x28, [sp, #80]
  46b88c:	mov	x27, x0
  46b890:	b	46b8e8 <_obstack_memory_used@@Base+0xefc0>
  46b894:	ldr	x2, [x20, x26]
  46b898:	blr	x24
  46b89c:	ldr	x3, [sp, #104]
  46b8a0:	tbnz	w0, #31, 46b954 <_obstack_memory_used@@Base+0xf02c>
  46b8a4:	ldr	x1, [x20, x28, lsl #3]
  46b8a8:	mov	w21, w25
  46b8ac:	sxtw	x26, w22
  46b8b0:	mov	x2, x1
  46b8b4:	mov	w22, w21
  46b8b8:	mov	x0, x27
  46b8bc:	lsl	w21, w21, #1
  46b8c0:	ldr	x1, [x20, x26, lsl #3]
  46b8c4:	blr	x24
  46b8c8:	tbz	w0, #31, 46b938 <_obstack_memory_used@@Base+0xf010>
  46b8cc:	ldr	x1, [x19]
  46b8d0:	add	w25, w21, #0x1
  46b8d4:	ldr	x0, [x20, x26, lsl #3]
  46b8d8:	str	x1, [x20, x26, lsl #3]
  46b8dc:	str	x0, [x19]
  46b8e0:	cmp	w23, w25
  46b8e4:	b.le	46b938 <_obstack_memory_used@@Base+0xf010>
  46b8e8:	sbfiz	x19, x25, #3, #32
  46b8ec:	sxtw	x28, w25
  46b8f0:	add	x26, x19, #0x8
  46b8f4:	add	w21, w25, #0x1
  46b8f8:	add	x3, x20, x26
  46b8fc:	str	x3, [sp, #104]
  46b900:	cmp	w21, w23
  46b904:	add	x19, x20, x19
  46b908:	mov	x0, x27
  46b90c:	ldr	x1, [x20, x28, lsl #3]
  46b910:	b.lt	46b894 <_obstack_memory_used@@Base+0xef6c>  // b.tstop
  46b914:	sxtw	x26, w22
  46b918:	mov	x2, x1
  46b91c:	mov	w21, w25
  46b920:	mov	x0, x27
  46b924:	mov	w22, w21
  46b928:	ldr	x1, [x20, x26, lsl #3]
  46b92c:	lsl	w21, w21, #1
  46b930:	blr	x24
  46b934:	tbnz	w0, #31, 46b8cc <_obstack_memory_used@@Base+0xefa4>
  46b938:	ldp	x19, x20, [sp, #16]
  46b93c:	ldp	x23, x24, [sp, #48]
  46b940:	ldp	x27, x28, [sp, #80]
  46b944:	ldp	x21, x22, [sp, #32]
  46b948:	ldp	x25, x26, [sp, #64]
  46b94c:	ldp	x29, x30, [sp], #112
  46b950:	ret
  46b954:	mov	x19, x3
  46b958:	ldr	x1, [x20, x26]
  46b95c:	b	46b8ac <_obstack_memory_used@@Base+0xef84>
  46b960:	stp	x29, x30, [sp, #-80]!
  46b964:	mov	x29, sp
  46b968:	stp	x19, x20, [sp, #16]
  46b96c:	ldr	x19, [x2, #8]
  46b970:	stp	x21, x22, [sp, #32]
  46b974:	mov	x22, x2
  46b978:	stp	x23, x24, [sp, #48]
  46b97c:	add	x21, x2, #0x10
  46b980:	lsr	x20, x19, #1
  46b984:	mov	x23, x0
  46b988:	mov	x24, x1
  46b98c:	subs	w20, w20, #0x1
  46b990:	b.mi	46b9c8 <_obstack_memory_used@@Base+0xf0a0>  // b.first
  46b994:	str	x25, [sp, #64]
  46b998:	mov	w25, w19
  46b99c:	nop
  46b9a0:	mov	w3, w20
  46b9a4:	mov	w4, w25
  46b9a8:	mov	x2, x21
  46b9ac:	sub	w20, w20, #0x1
  46b9b0:	mov	x1, x24
  46b9b4:	mov	x0, x23
  46b9b8:	bl	46b850 <_obstack_memory_used@@Base+0xef28>
  46b9bc:	cmn	w20, #0x1
  46b9c0:	b.ne	46b9a0 <_obstack_memory_used@@Base+0xf078>  // b.any
  46b9c4:	ldr	x25, [sp, #64]
  46b9c8:	sub	w19, w19, #0x1
  46b9cc:	cmp	w19, #0x0
  46b9d0:	sxtw	x19, w19
  46b9d4:	b.le	46ba0c <_obstack_memory_used@@Base+0xf0e4>
  46b9d8:	ldr	x1, [x21, x19, lsl #3]
  46b9dc:	mov	w4, w19
  46b9e0:	ldr	x0, [x22, #16]
  46b9e4:	str	x1, [x22, #16]
  46b9e8:	str	x0, [x21, x19, lsl #3]
  46b9ec:	mov	x2, x21
  46b9f0:	sub	x19, x19, #0x1
  46b9f4:	mov	x1, x24
  46b9f8:	mov	x0, x23
  46b9fc:	mov	w3, #0x0                   	// #0
  46ba00:	bl	46b850 <_obstack_memory_used@@Base+0xef28>
  46ba04:	cmp	w19, #0x0
  46ba08:	b.gt	46b9d8 <_obstack_memory_used@@Base+0xf0b0>
  46ba0c:	ldp	x19, x20, [sp, #16]
  46ba10:	ldp	x21, x22, [sp, #32]
  46ba14:	ldp	x23, x24, [sp, #48]
  46ba18:	ldp	x29, x30, [sp], #80
  46ba1c:	ret
  46ba20:	and	w0, w0, #0xff
  46ba24:	cmp	w0, #0xff
  46ba28:	b.eq	46ba78 <_obstack_memory_used@@Base+0xf150>  // b.none
  46ba2c:	and	w1, w0, #0x7
  46ba30:	cmp	w1, #0x2
  46ba34:	b.eq	46ba70 <_obstack_memory_used@@Base+0xf148>  // b.none
  46ba38:	b.ls	46ba64 <_obstack_memory_used@@Base+0xf13c>  // b.plast
  46ba3c:	cmp	w1, #0x3
  46ba40:	mov	w0, #0x4                   	// #4
  46ba44:	b.ne	46ba4c <_obstack_memory_used@@Base+0xf124>  // b.any
  46ba48:	ret
  46ba4c:	cmp	w1, w0
  46ba50:	mov	w0, #0x8                   	// #8
  46ba54:	b.eq	46ba48 <_obstack_memory_used@@Base+0xf120>  // b.none
  46ba58:	stp	x29, x30, [sp, #-16]!
  46ba5c:	mov	x29, sp
  46ba60:	bl	402540 <abort@plt>
  46ba64:	mov	w0, #0x8                   	// #8
  46ba68:	cbnz	w1, 46ba58 <_obstack_memory_used@@Base+0xf130>
  46ba6c:	ret
  46ba70:	mov	w0, w1
  46ba74:	ret
  46ba78:	mov	w0, #0x0                   	// #0
  46ba7c:	ret
  46ba80:	and	w5, w0, #0xff
  46ba84:	cmp	w5, #0x50
  46ba88:	b.eq	46bba0 <_obstack_memory_used@@Base+0xf278>  // b.none
  46ba8c:	and	w4, w5, #0xf
  46ba90:	cmp	w4, #0x4
  46ba94:	b.eq	46bab0 <_obstack_memory_used@@Base+0xf188>  // b.none
  46ba98:	b.ls	46bac4 <_obstack_memory_used@@Base+0xf19c>  // b.plast
  46ba9c:	cmp	w4, #0xb
  46baa0:	b.eq	46bbc4 <_obstack_memory_used@@Base+0xf29c>  // b.none
  46baa4:	b.ls	46bb20 <_obstack_memory_used@@Base+0xf1f8>  // b.plast
  46baa8:	cmp	w4, #0xc
  46baac:	b.ne	46bbd4 <_obstack_memory_used@@Base+0xf2ac>  // b.any
  46bab0:	mov	x0, x2
  46bab4:	ldr	x4, [x0], #8
  46bab8:	cbnz	x4, 46bb80 <_obstack_memory_used@@Base+0xf258>
  46babc:	str	x4, [x3]
  46bac0:	ret
  46bac4:	cmp	w4, #0x2
  46bac8:	b.eq	46bbb4 <_obstack_memory_used@@Base+0xf28c>  // b.none
  46bacc:	b.ls	46bae8 <_obstack_memory_used@@Base+0xf1c0>  // b.plast
  46bad0:	cmp	w4, #0x3
  46bad4:	b.ne	46bbd4 <_obstack_memory_used@@Base+0xf2ac>  // b.any
  46bad8:	mov	x0, x2
  46badc:	ldr	w4, [x0], #4
  46bae0:	cbz	x4, 46babc <_obstack_memory_used@@Base+0xf194>
  46bae4:	b	46bb80 <_obstack_memory_used@@Base+0xf258>
  46bae8:	cbz	w4, 46bab0 <_obstack_memory_used@@Base+0xf188>
  46baec:	cmp	w4, #0x1
  46baf0:	b.ne	46bbd4 <_obstack_memory_used@@Base+0xf2ac>  // b.any
  46baf4:	mov	x0, x2
  46baf8:	mov	x4, #0x0                   	// #0
  46bafc:	mov	w7, #0x0                   	// #0
  46bb00:	ldrb	w8, [x0], #1
  46bb04:	and	x6, x8, #0x7f
  46bb08:	lsl	x6, x6, x7
  46bb0c:	add	w7, w7, #0x7
  46bb10:	orr	x4, x4, x6
  46bb14:	tbnz	w8, #7, 46bb00 <_obstack_memory_used@@Base+0xf1d8>
  46bb18:	cbz	x4, 46babc <_obstack_memory_used@@Base+0xf194>
  46bb1c:	b	46bb80 <_obstack_memory_used@@Base+0xf258>
  46bb20:	cmp	w4, #0x9
  46bb24:	b.eq	46bb40 <_obstack_memory_used@@Base+0xf218>  // b.none
  46bb28:	cmp	w4, #0xa
  46bb2c:	b.ne	46bbd4 <_obstack_memory_used@@Base+0xf2ac>  // b.any
  46bb30:	mov	x0, x2
  46bb34:	ldrsh	x4, [x0], #2
  46bb38:	cbz	x4, 46babc <_obstack_memory_used@@Base+0xf194>
  46bb3c:	b	46bb80 <_obstack_memory_used@@Base+0xf258>
  46bb40:	mov	x0, x2
  46bb44:	mov	x4, #0x0                   	// #0
  46bb48:	mov	w7, #0x0                   	// #0
  46bb4c:	ldrb	w8, [x0], #1
  46bb50:	and	x6, x8, #0x7f
  46bb54:	lsl	x6, x6, x7
  46bb58:	add	w7, w7, #0x7
  46bb5c:	orr	x4, x4, x6
  46bb60:	tbnz	w8, #7, 46bb4c <_obstack_memory_used@@Base+0xf224>
  46bb64:	cmp	w7, #0x3f
  46bb68:	b.hi	46bab8 <_obstack_memory_used@@Base+0xf190>  // b.pmore
  46bb6c:	tbz	w8, #6, 46bab8 <_obstack_memory_used@@Base+0xf190>
  46bb70:	mov	x6, #0xffffffffffffffff    	// #-1
  46bb74:	lsl	x7, x6, x7
  46bb78:	orr	x4, x4, x7
  46bb7c:	nop
  46bb80:	and	w6, w5, #0x70
  46bb84:	cmp	w6, #0x10
  46bb88:	csel	x1, x2, x1, eq  // eq = none
  46bb8c:	add	x4, x4, x1
  46bb90:	tbz	w5, #7, 46babc <_obstack_memory_used@@Base+0xf194>
  46bb94:	ldr	x4, [x4]
  46bb98:	str	x4, [x3]
  46bb9c:	ret
  46bba0:	add	x0, x2, #0x7
  46bba4:	and	x0, x0, #0xfffffffffffffff8
  46bba8:	ldr	x4, [x0], #8
  46bbac:	str	x4, [x3]
  46bbb0:	ret
  46bbb4:	mov	x0, x2
  46bbb8:	ldrh	w4, [x0], #2
  46bbbc:	cbz	x4, 46babc <_obstack_memory_used@@Base+0xf194>
  46bbc0:	b	46bb80 <_obstack_memory_used@@Base+0xf258>
  46bbc4:	mov	x0, x2
  46bbc8:	ldrsw	x4, [x0], #4
  46bbcc:	cbz	x4, 46babc <_obstack_memory_used@@Base+0xf194>
  46bbd0:	b	46bb80 <_obstack_memory_used@@Base+0xf258>
  46bbd4:	stp	x29, x30, [sp, #-16]!
  46bbd8:	mov	x29, sp
  46bbdc:	bl	402540 <abort@plt>
  46bbe0:	stp	x29, x30, [sp, #-48]!
  46bbe4:	mov	x29, sp
  46bbe8:	stp	x19, x20, [sp, #16]
  46bbec:	mov	x20, x0
  46bbf0:	add	x19, x0, #0x9
  46bbf4:	mov	x0, x19
  46bbf8:	bl	402270 <strlen@plt>
  46bbfc:	ldrb	w3, [x20, #8]
  46bc00:	add	x0, x0, #0x1
  46bc04:	add	x2, x19, x0
  46bc08:	cmp	w3, #0x3
  46bc0c:	b.hi	46bcd8 <_obstack_memory_used@@Base+0xf3b0>  // b.pmore
  46bc10:	ldrb	w0, [x20, #9]
  46bc14:	cmp	w0, #0x7a
  46bc18:	b.eq	46bc2c <_obstack_memory_used@@Base+0xf304>  // b.none
  46bc1c:	mov	w0, #0x0                   	// #0
  46bc20:	ldp	x19, x20, [sp, #16]
  46bc24:	ldp	x29, x30, [sp], #48
  46bc28:	ret
  46bc2c:	ldrsb	w1, [x2], #1
  46bc30:	tbnz	w1, #31, 46bc2c <_obstack_memory_used@@Base+0xf304>
  46bc34:	nop
  46bc38:	mov	x0, x2
  46bc3c:	ldrsb	w1, [x2], #1
  46bc40:	tbnz	w1, #31, 46bc38 <_obstack_memory_used@@Base+0xf310>
  46bc44:	cmp	w3, #0x1
  46bc48:	b.eq	46bcd0 <_obstack_memory_used@@Base+0xf3a8>  // b.none
  46bc4c:	nop
  46bc50:	ldrsb	w0, [x2], #1
  46bc54:	tbnz	w0, #31, 46bc50 <_obstack_memory_used@@Base+0xf328>
  46bc58:	add	x19, x20, #0xa
  46bc5c:	nop
  46bc60:	ldrsb	w1, [x2], #1
  46bc64:	tbnz	w1, #31, 46bc60 <_obstack_memory_used@@Base+0xf338>
  46bc68:	ldrb	w0, [x20, #10]
  46bc6c:	add	x20, sp, #0x28
  46bc70:	cmp	w0, #0x52
  46bc74:	b.ne	46bc94 <_obstack_memory_used@@Base+0xf36c>  // b.any
  46bc78:	b	46bcc0 <_obstack_memory_used@@Base+0xf398>
  46bc7c:	add	x2, x2, #0x1
  46bc80:	cmp	w0, #0x4c
  46bc84:	b.ne	46bc1c <_obstack_memory_used@@Base+0xf2f4>  // b.any
  46bc88:	ldrb	w0, [x19, #1]!
  46bc8c:	cmp	w0, #0x52
  46bc90:	b.eq	46bcc0 <_obstack_memory_used@@Base+0xf398>  // b.none
  46bc94:	cmp	w0, #0x50
  46bc98:	b.ne	46bc7c <_obstack_memory_used@@Base+0xf354>  // b.any
  46bc9c:	ldrb	w0, [x2], #1
  46bca0:	mov	x3, x20
  46bca4:	mov	x1, #0x0                   	// #0
  46bca8:	and	w0, w0, #0x7f
  46bcac:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46bcb0:	mov	x2, x0
  46bcb4:	ldrb	w0, [x19, #1]!
  46bcb8:	cmp	w0, #0x52
  46bcbc:	b.ne	46bc94 <_obstack_memory_used@@Base+0xf36c>  // b.any
  46bcc0:	ldrb	w0, [x2]
  46bcc4:	ldp	x19, x20, [sp, #16]
  46bcc8:	ldp	x29, x30, [sp], #48
  46bccc:	ret
  46bcd0:	add	x2, x0, #0x2
  46bcd4:	b	46bc58 <_obstack_memory_used@@Base+0xf330>
  46bcd8:	ldrb	w1, [x19, x0]
  46bcdc:	mov	w0, #0xff                  	// #255
  46bce0:	cmp	w1, #0x8
  46bce4:	b.ne	46bc20 <_obstack_memory_used@@Base+0xf2f8>  // b.any
  46bce8:	ldrb	w1, [x2, #1]
  46bcec:	cbnz	w1, 46bc20 <_obstack_memory_used@@Base+0xf2f8>
  46bcf0:	add	x2, x2, #0x2
  46bcf4:	b	46bc10 <_obstack_memory_used@@Base+0xf2e8>
  46bcf8:	and	w0, w0, #0xff
  46bcfc:	cmp	w0, #0xff
  46bd00:	b.eq	46bd38 <_obstack_memory_used@@Base+0xf410>  // b.none
  46bd04:	and	w3, w0, #0x70
  46bd08:	cmp	w3, #0x20
  46bd0c:	b.eq	46bd50 <_obstack_memory_used@@Base+0xf428>  // b.none
  46bd10:	b.ls	46bd24 <_obstack_memory_used@@Base+0xf3fc>  // b.plast
  46bd14:	cmp	w3, #0x30
  46bd18:	b.ne	46bd40 <_obstack_memory_used@@Base+0xf418>  // b.any
  46bd1c:	ldr	x0, [x2]
  46bd20:	ret
  46bd24:	tst	w0, #0x60
  46bd28:	b.eq	46bd38 <_obstack_memory_used@@Base+0xf410>  // b.none
  46bd2c:	stp	x29, x30, [sp, #-16]!
  46bd30:	mov	x29, sp
  46bd34:	bl	402540 <abort@plt>
  46bd38:	mov	x0, #0x0                   	// #0
  46bd3c:	ret
  46bd40:	cmp	w3, #0x50
  46bd44:	mov	x0, #0x0                   	// #0
  46bd48:	b.ne	46bd2c <_obstack_memory_used@@Base+0xf404>  // b.any
  46bd4c:	ret
  46bd50:	ldr	x0, [x1]
  46bd54:	ret
  46bd58:	stp	x29, x30, [sp, #-64]!
  46bd5c:	mov	x29, sp
  46bd60:	stp	x21, x22, [sp, #32]
  46bd64:	mov	x22, x2
  46bd68:	ldrh	w21, [x0, #32]
  46bd6c:	add	x2, x0, #0x10
  46bd70:	stp	x19, x20, [sp, #16]
  46bd74:	mov	x19, x0
  46bd78:	ubfx	x21, x21, #3, #8
  46bd7c:	mov	x20, x1
  46bd80:	add	x1, x0, #0x8
  46bd84:	mov	w0, w21
  46bd88:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46bd8c:	add	x2, x20, #0x8
  46bd90:	mov	x20, x0
  46bd94:	mov	x1, x20
  46bd98:	add	x3, sp, #0x30
  46bd9c:	mov	w0, w21
  46bda0:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46bda4:	ldrh	w0, [x19, #32]
  46bda8:	add	x2, x22, #0x8
  46bdac:	mov	x1, x20
  46bdb0:	add	x3, sp, #0x38
  46bdb4:	ubfx	x0, x0, #3, #8
  46bdb8:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46bdbc:	ldp	x2, x1, [sp, #48]
  46bdc0:	mov	w3, #0x1                   	// #1
  46bdc4:	ldp	x19, x20, [sp, #16]
  46bdc8:	ldp	x21, x22, [sp, #32]
  46bdcc:	cmp	x2, x1
  46bdd0:	csetm	w0, cc  // cc = lo, ul, last
  46bdd4:	csel	w0, w0, w3, ls  // ls = plast
  46bdd8:	ldp	x29, x30, [sp], #64
  46bddc:	ret
  46bde0:	stp	x29, x30, [sp, #-128]!
  46bde4:	mov	x29, sp
  46bde8:	stp	x21, x22, [sp, #32]
  46bdec:	add	x22, x0, #0x8
  46bdf0:	stp	x23, x24, [sp, #48]
  46bdf4:	add	x23, x0, #0x10
  46bdf8:	stp	x25, x26, [sp, #64]
  46bdfc:	mov	x26, x0
  46be00:	ldrh	w0, [x0, #32]
  46be04:	stp	x19, x20, [sp, #16]
  46be08:	mov	x19, x1
  46be0c:	mov	x20, x2
  46be10:	ubfx	x24, x0, #3, #8
  46be14:	mov	x1, x22
  46be18:	mov	x2, x23
  46be1c:	mov	x0, x24
  46be20:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46be24:	ldr	w1, [x19]
  46be28:	cbz	w1, 46bebc <_obstack_memory_used@@Base+0xf594>
  46be2c:	stp	x27, x28, [sp, #80]
  46be30:	add	x27, sp, #0x70
  46be34:	mov	x25, x0
  46be38:	mov	x21, #0x0                   	// #0
  46be3c:	add	x0, sp, #0x78
  46be40:	str	x0, [sp, #104]
  46be44:	nop
  46be48:	ldr	w1, [x19, #4]
  46be4c:	cbz	w1, 46bea4 <_obstack_memory_used@@Base+0xf57c>
  46be50:	ldrb	w0, [x26, #32]
  46be54:	tbz	w0, #2, 46be88 <_obstack_memory_used@@Base+0xf560>
  46be58:	add	x28, x19, #0x4
  46be5c:	sub	x28, x28, w1, sxtw
  46be60:	cmp	x28, x21
  46be64:	b.eq	46be88 <_obstack_memory_used@@Base+0xf560>  // b.none
  46be68:	mov	x0, x28
  46be6c:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46be70:	mov	x2, x23
  46be74:	mov	w24, w0
  46be78:	mov	x1, x22
  46be7c:	mov	x21, x28
  46be80:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46be84:	mov	x25, x0
  46be88:	cbnz	w24, 46bed8 <_obstack_memory_used@@Base+0xf5b0>
  46be8c:	ldp	x1, x0, [x19, #8]
  46be90:	stp	x1, x0, [sp, #112]
  46be94:	cbz	x1, 46bea4 <_obstack_memory_used@@Base+0xf57c>
  46be98:	sub	x1, x20, x1
  46be9c:	cmp	x1, x0
  46bea0:	b.cc	46bf40 <_obstack_memory_used@@Base+0xf618>  // b.lo, b.ul, b.last
  46bea4:	ldr	w1, [x19]
  46bea8:	add	x1, x1, #0x4
  46beac:	add	x19, x19, x1
  46beb0:	ldr	w1, [x19]
  46beb4:	cbnz	w1, 46be48 <_obstack_memory_used@@Base+0xf520>
  46beb8:	ldp	x27, x28, [sp, #80]
  46bebc:	mov	x0, #0x0                   	// #0
  46bec0:	ldp	x19, x20, [sp, #16]
  46bec4:	ldp	x21, x22, [sp, #32]
  46bec8:	ldp	x23, x24, [sp, #48]
  46becc:	ldp	x25, x26, [sp, #64]
  46bed0:	ldp	x29, x30, [sp], #128
  46bed4:	ret
  46bed8:	and	w28, w24, #0xff
  46bedc:	mov	x3, x27
  46bee0:	add	x2, x19, #0x8
  46bee4:	mov	x1, x25
  46bee8:	mov	w0, w28
  46beec:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46bef0:	ldr	x3, [sp, #104]
  46bef4:	mov	x2, x0
  46bef8:	mov	x1, #0x0                   	// #0
  46befc:	and	w0, w28, #0xf
  46bf00:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46bf04:	mov	w0, w28
  46bf08:	bl	46ba20 <_obstack_memory_used@@Base+0xf0f8>
  46bf0c:	lsl	w2, w0, #3
  46bf10:	cmp	w0, #0x8
  46bf14:	mov	x0, #0x1                   	// #1
  46bf18:	ldr	x1, [sp, #112]
  46bf1c:	lsl	x2, x0, x2
  46bf20:	sub	x2, x2, #0x1
  46bf24:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  46bf28:	tst	x1, x2
  46bf2c:	b.eq	46bea4 <_obstack_memory_used@@Base+0xf57c>  // b.none
  46bf30:	ldr	x0, [sp, #120]
  46bf34:	sub	x1, x20, x1
  46bf38:	cmp	x1, x0
  46bf3c:	b.cs	46bea4 <_obstack_memory_used@@Base+0xf57c>  // b.hs, b.nlast
  46bf40:	mov	x0, x19
  46bf44:	ldp	x19, x20, [sp, #16]
  46bf48:	ldp	x21, x22, [sp, #32]
  46bf4c:	ldp	x23, x24, [sp, #48]
  46bf50:	ldp	x25, x26, [sp, #64]
  46bf54:	ldp	x27, x28, [sp, #80]
  46bf58:	ldp	x29, x30, [sp], #128
  46bf5c:	ret
  46bf60:	stp	x29, x30, [sp, #-80]!
  46bf64:	add	x3, x1, #0x4
  46bf68:	mov	x29, sp
  46bf6c:	stp	x21, x22, [sp, #32]
  46bf70:	mov	x21, x1
  46bf74:	ldrsw	x1, [x1, #4]
  46bf78:	stp	x19, x20, [sp, #16]
  46bf7c:	mov	x20, x2
  46bf80:	add	x19, x0, #0x10
  46bf84:	str	x23, [sp, #48]
  46bf88:	add	x23, x0, #0x8
  46bf8c:	sub	x0, x3, x1
  46bf90:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46bf94:	and	w22, w0, #0xff
  46bf98:	mov	x2, x19
  46bf9c:	mov	x1, x23
  46bfa0:	mov	w0, w22
  46bfa4:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46bfa8:	mov	x1, x0
  46bfac:	add	x3, sp, #0x40
  46bfb0:	add	x2, x21, #0x8
  46bfb4:	mov	w0, w22
  46bfb8:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46bfbc:	add	x1, x20, #0x4
  46bfc0:	ldrsw	x0, [x20, #4]
  46bfc4:	sub	x0, x1, x0
  46bfc8:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46bfcc:	mov	x2, x19
  46bfd0:	and	w19, w0, #0xff
  46bfd4:	mov	x1, x23
  46bfd8:	mov	w0, w19
  46bfdc:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46bfe0:	mov	x1, x0
  46bfe4:	add	x2, x20, #0x8
  46bfe8:	add	x3, sp, #0x48
  46bfec:	mov	w0, w19
  46bff0:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46bff4:	ldp	x2, x1, [sp, #64]
  46bff8:	mov	w3, #0x1                   	// #1
  46bffc:	ldp	x19, x20, [sp, #16]
  46c000:	ldp	x21, x22, [sp, #32]
  46c004:	cmp	x2, x1
  46c008:	csetm	w0, cc  // cc = lo, ul, last
  46c00c:	csel	w0, w0, w3, ls  // ls = plast
  46c010:	ldr	x23, [sp, #48]
  46c014:	ldp	x29, x30, [sp], #80
  46c018:	ret
  46c01c:	nop
  46c020:	stp	x29, x30, [sp, #-112]!
  46c024:	mov	x29, sp
  46c028:	stp	x21, x22, [sp, #32]
  46c02c:	mov	x21, x0
  46c030:	ldr	w0, [x1]
  46c034:	cbz	w0, 46c198 <_obstack_memory_used@@Base+0xf870>
  46c038:	stp	x19, x20, [sp, #16]
  46c03c:	mov	x19, x1
  46c040:	mov	w20, #0x0                   	// #0
  46c044:	stp	x25, x26, [sp, #64]
  46c048:	add	x25, sp, #0x68
  46c04c:	add	x26, x21, #0x8
  46c050:	stp	x27, x28, [sp, #80]
  46c054:	add	x27, x21, #0x10
  46c058:	mov	x22, #0x0                   	// #0
  46c05c:	mov	x4, #0x0                   	// #0
  46c060:	stp	x23, x24, [sp, #48]
  46c064:	mov	x23, #0x0                   	// #0
  46c068:	ldr	w2, [x19, #4]
  46c06c:	cbz	w2, 46c134 <_obstack_memory_used@@Base+0xf80c>
  46c070:	add	x28, x19, #0x4
  46c074:	and	w24, w20, #0xff
  46c078:	sub	x28, x28, w2, sxtw
  46c07c:	cmp	x28, x4
  46c080:	b.eq	46c0d8 <_obstack_memory_used@@Base+0xf7b0>  // b.none
  46c084:	mov	x0, x28
  46c088:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46c08c:	mov	w20, w0
  46c090:	cmp	w0, #0xff
  46c094:	b.eq	46c174 <_obstack_memory_used@@Base+0xf84c>  // b.none
  46c098:	and	w24, w0, #0xff
  46c09c:	mov	x2, x27
  46c0a0:	mov	w0, w24
  46c0a4:	mov	x1, x26
  46c0a8:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46c0ac:	mov	x23, x0
  46c0b0:	ldrh	w2, [x21, #32]
  46c0b4:	and	w0, w2, #0x7f8
  46c0b8:	cmp	w0, #0x7f8
  46c0bc:	b.eq	46c168 <_obstack_memory_used@@Base+0xf840>  // b.none
  46c0c0:	ubfx	x2, x2, #3, #8
  46c0c4:	cmp	w2, w20
  46c0c8:	b.eq	46c0d8 <_obstack_memory_used@@Base+0xf7b0>  // b.none
  46c0cc:	ldrb	w0, [x21, #32]
  46c0d0:	orr	w0, w0, #0x4
  46c0d4:	strb	w0, [x21, #32]
  46c0d8:	mov	x3, x25
  46c0dc:	add	x2, x19, #0x8
  46c0e0:	mov	x1, x23
  46c0e4:	mov	w0, w24
  46c0e8:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46c0ec:	mov	w0, w24
  46c0f0:	bl	46ba20 <_obstack_memory_used@@Base+0xf0f8>
  46c0f4:	lsl	w2, w0, #3
  46c0f8:	cmp	w0, #0x8
  46c0fc:	mov	x0, #0x1                   	// #1
  46c100:	ldr	x3, [sp, #104]
  46c104:	lsl	x2, x0, x2
  46c108:	sub	x2, x2, #0x1
  46c10c:	mov	x4, x28
  46c110:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  46c114:	tst	x3, x2
  46c118:	b.eq	46c134 <_obstack_memory_used@@Base+0xf80c>  // b.none
  46c11c:	ldr	x0, [x21]
  46c120:	add	x22, x22, #0x1
  46c124:	cmp	x0, x3
  46c128:	b.ls	46c130 <_obstack_memory_used@@Base+0xf808>  // b.plast
  46c12c:	str	x3, [x21]
  46c130:	mov	x4, x28
  46c134:	ldr	w2, [x19]
  46c138:	add	x2, x2, #0x4
  46c13c:	add	x19, x19, x2
  46c140:	ldr	w0, [x19]
  46c144:	cbnz	w0, 46c068 <_obstack_memory_used@@Base+0xf740>
  46c148:	ldp	x19, x20, [sp, #16]
  46c14c:	ldp	x23, x24, [sp, #48]
  46c150:	ldp	x25, x26, [sp, #64]
  46c154:	ldp	x27, x28, [sp, #80]
  46c158:	mov	x0, x22
  46c15c:	ldp	x21, x22, [sp, #32]
  46c160:	ldp	x29, x30, [sp], #112
  46c164:	ret
  46c168:	bfi	w2, w24, #3, #8
  46c16c:	strh	w2, [x21, #32]
  46c170:	b	46c0d8 <_obstack_memory_used@@Base+0xf7b0>
  46c174:	mov	x22, #0xffffffffffffffff    	// #-1
  46c178:	mov	x0, x22
  46c17c:	ldp	x19, x20, [sp, #16]
  46c180:	ldp	x21, x22, [sp, #32]
  46c184:	ldp	x23, x24, [sp, #48]
  46c188:	ldp	x25, x26, [sp, #64]
  46c18c:	ldp	x27, x28, [sp, #80]
  46c190:	ldp	x29, x30, [sp], #112
  46c194:	ret
  46c198:	mov	x22, #0x0                   	// #0
  46c19c:	b	46c158 <_obstack_memory_used@@Base+0xf830>
  46c1a0:	stp	x29, x30, [sp, #-112]!
  46c1a4:	mov	x29, sp
  46c1a8:	stp	x21, x22, [sp, #32]
  46c1ac:	add	x21, x0, #0x8
  46c1b0:	add	x22, x0, #0x10
  46c1b4:	stp	x27, x28, [sp, #80]
  46c1b8:	mov	x28, x0
  46c1bc:	ldrh	w0, [x0, #32]
  46c1c0:	stp	x19, x20, [sp, #16]
  46c1c4:	mov	x19, x2
  46c1c8:	mov	x20, x1
  46c1cc:	stp	x25, x26, [sp, #64]
  46c1d0:	ubfx	x26, x0, #3, #8
  46c1d4:	mov	x2, x22
  46c1d8:	mov	x1, x21
  46c1dc:	mov	x0, x26
  46c1e0:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46c1e4:	ldr	w2, [x19]
  46c1e8:	cbz	w2, 46c280 <_obstack_memory_used@@Base+0xf958>
  46c1ec:	add	x25, sp, #0x68
  46c1f0:	stp	x23, x24, [sp, #48]
  46c1f4:	mov	x24, x0
  46c1f8:	mov	x23, #0x0                   	// #0
  46c1fc:	nop
  46c200:	ldr	w2, [x19, #4]
  46c204:	cbz	w2, 46c268 <_obstack_memory_used@@Base+0xf940>
  46c208:	ldrb	w0, [x28, #32]
  46c20c:	tbz	w0, #2, 46c240 <_obstack_memory_used@@Base+0xf918>
  46c210:	add	x27, x19, #0x4
  46c214:	sub	x27, x27, w2, sxtw
  46c218:	cmp	x27, x23
  46c21c:	b.eq	46c240 <_obstack_memory_used@@Base+0xf918>  // b.none
  46c220:	mov	x0, x27
  46c224:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46c228:	mov	x2, x22
  46c22c:	mov	w26, w0
  46c230:	mov	x1, x21
  46c234:	mov	x23, x27
  46c238:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46c23c:	mov	x24, x0
  46c240:	cbnz	w26, 46c298 <_obstack_memory_used@@Base+0xf970>
  46c244:	ldr	x0, [x19, #8]
  46c248:	cbz	x0, 46c268 <_obstack_memory_used@@Base+0xf940>
  46c24c:	ldr	x2, [x20]
  46c250:	cbz	x2, 46c268 <_obstack_memory_used@@Base+0xf940>
  46c254:	ldr	x3, [x2, #8]
  46c258:	add	x0, x3, #0x2
  46c25c:	add	x3, x3, #0x1
  46c260:	str	x3, [x2, #8]
  46c264:	str	x19, [x2, x0, lsl #3]
  46c268:	ldr	w2, [x19]
  46c26c:	add	x2, x2, #0x4
  46c270:	add	x19, x19, x2
  46c274:	ldr	w2, [x19]
  46c278:	cbnz	w2, 46c200 <_obstack_memory_used@@Base+0xf8d8>
  46c27c:	ldp	x23, x24, [sp, #48]
  46c280:	ldp	x19, x20, [sp, #16]
  46c284:	ldp	x21, x22, [sp, #32]
  46c288:	ldp	x25, x26, [sp, #64]
  46c28c:	ldp	x27, x28, [sp, #80]
  46c290:	ldp	x29, x30, [sp], #112
  46c294:	ret
  46c298:	mov	x3, x25
  46c29c:	add	x2, x19, #0x8
  46c2a0:	mov	x1, x24
  46c2a4:	and	w27, w26, #0xff
  46c2a8:	mov	w0, w27
  46c2ac:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46c2b0:	mov	w0, w27
  46c2b4:	bl	46ba20 <_obstack_memory_used@@Base+0xf0f8>
  46c2b8:	lsl	w2, w0, #3
  46c2bc:	cmp	w0, #0x8
  46c2c0:	mov	x0, #0x1                   	// #1
  46c2c4:	ldr	x3, [sp, #104]
  46c2c8:	lsl	x2, x0, x2
  46c2cc:	sub	x2, x2, #0x1
  46c2d0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  46c2d4:	tst	x2, x3
  46c2d8:	b.ne	46c24c <_obstack_memory_used@@Base+0xf924>  // b.any
  46c2dc:	b	46c268 <_obstack_memory_used@@Base+0xf940>
  46c2e0:	stp	x29, x30, [sp, #-128]!
  46c2e4:	cmp	x1, #0x2f
  46c2e8:	mov	x29, sp
  46c2ec:	stp	x19, x20, [sp, #16]
  46c2f0:	mov	x19, x2
  46c2f4:	ldr	w2, [x2, #40]
  46c2f8:	ldr	x13, [x0]
  46c2fc:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  46c300:	ldr	x3, [x0, #16]
  46c304:	b.ne	46c444 <_obstack_memory_used@@Base+0xfb1c>  // b.any
  46c308:	cmp	x1, #0x19
  46c30c:	b.ls	46c41c <_obstack_memory_used@@Base+0xfaf4>  // b.plast
  46c310:	mov	x10, #0x0                   	// #0
  46c314:	mov	x15, #0x0                   	// #0
  46c318:	ldrh	w4, [x0, #24]
  46c31c:	cbz	w4, 46c434 <_obstack_memory_used@@Base+0xfb0c>
  46c320:	mov	w0, #0x38                  	// #56
  46c324:	mov	w7, #0xe550                	// #58704
  46c328:	mov	x11, #0x0                   	// #0
  46c32c:	mov	x12, #0x0                   	// #0
  46c330:	umaddl	x4, w4, w0, x3
  46c334:	mov	x8, #0x0                   	// #0
  46c338:	mov	x6, #0x0                   	// #0
  46c33c:	mov	x9, #0x0                   	// #0
  46c340:	movk	w7, #0x6474, lsl #16
  46c344:	mov	x14, #0x1                   	// #1
  46c348:	b	46c368 <_obstack_memory_used@@Base+0xfa40>
  46c34c:	cmp	w0, w7
  46c350:	b.eq	46c42c <_obstack_memory_used@@Base+0xfb04>  // b.none
  46c354:	cmp	w0, #0x2
  46c358:	csel	x6, x6, x3, ne  // ne = any
  46c35c:	add	x3, x3, #0x38
  46c360:	cmp	x4, x3
  46c364:	b.eq	46c3b0 <_obstack_memory_used@@Base+0xfa88>  // b.none
  46c368:	ldr	w0, [x3]
  46c36c:	cmp	w0, #0x1
  46c370:	b.ne	46c34c <_obstack_memory_used@@Base+0xfa24>  // b.any
  46c374:	ldr	x0, [x3, #16]
  46c378:	ldr	x5, [x19]
  46c37c:	add	x0, x13, x0
  46c380:	cmp	x5, x0
  46c384:	b.cc	46c35c <_obstack_memory_used@@Base+0xfa34>  // b.lo, b.ul, b.last
  46c388:	ldr	x2, [x3, #40]
  46c38c:	add	x3, x3, #0x38
  46c390:	add	x2, x0, x2
  46c394:	cmp	x5, x2
  46c398:	csel	x11, x11, x2, cs  // cs = hs, nlast
  46c39c:	csel	x12, x12, x0, cs  // cs = hs, nlast
  46c3a0:	csel	x8, x8, x14, cs  // cs = hs, nlast
  46c3a4:	cmp	x4, x3
  46c3a8:	b.ne	46c368 <_obstack_memory_used@@Base+0xfa40>  // b.any
  46c3ac:	nop
  46c3b0:	cbz	x8, 46c434 <_obstack_memory_used@@Base+0xfb0c>
  46c3b4:	cmp	x1, #0x2f
  46c3b8:	b.ls	46c3f4 <_obstack_memory_used@@Base+0xfacc>  // b.plast
  46c3bc:	adrp	x1, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46c3c0:	add	x1, x1, #0x9b0
  46c3c4:	cmp	x10, #0x0
  46c3c8:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  46c3cc:	ldr	x0, [x1, #8]
  46c3d0:	b.eq	46c3e8 <_obstack_memory_used@@Base+0xfac0>  // b.none
  46c3d4:	ldr	x2, [x10, #40]
  46c3d8:	str	x2, [x15, #40]
  46c3dc:	str	x0, [x10, #40]
  46c3e0:	mov	x0, x10
  46c3e4:	str	x10, [x1, #8]
  46c3e8:	stp	x12, x11, [x0]
  46c3ec:	stp	x13, x9, [x0, #16]
  46c3f0:	str	x6, [x0, #32]
  46c3f4:	cbz	x9, 46c434 <_obstack_memory_used@@Base+0xfb0c>
  46c3f8:	ldr	x0, [x9, #16]
  46c3fc:	add	x20, x13, x0
  46c400:	ldrb	w0, [x13, x0]
  46c404:	cmp	w0, #0x1
  46c408:	b.eq	46c4a4 <_obstack_memory_used@@Base+0xfb7c>  // b.none
  46c40c:	mov	w0, #0x1                   	// #1
  46c410:	ldp	x19, x20, [sp, #16]
  46c414:	ldp	x29, x30, [sp], #128
  46c418:	ret
  46c41c:	mov	w0, #0xffffffff            	// #-1
  46c420:	ldp	x19, x20, [sp, #16]
  46c424:	ldp	x29, x30, [sp], #128
  46c428:	ret
  46c42c:	mov	x9, x3
  46c430:	b	46c35c <_obstack_memory_used@@Base+0xfa34>
  46c434:	mov	w0, #0x0                   	// #0
  46c438:	ldp	x19, x20, [sp, #16]
  46c43c:	ldp	x29, x30, [sp], #128
  46c440:	ret
  46c444:	ldp	x6, x7, [x0, #32]
  46c448:	adrp	x4, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46c44c:	adrp	x5, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46c450:	ldr	x2, [x4, #1304]
  46c454:	cmp	x6, x2
  46c458:	b.eq	46c578 <_obstack_memory_used@@Base+0xfc50>  // b.none
  46c45c:	add	x2, x5, #0x9b0
  46c460:	str	x6, [x4, #1304]
  46c464:	add	x4, x2, #0x40
  46c468:	add	x2, x2, #0x1c0
  46c46c:	str	x7, [x5, #2480]
  46c470:	stp	xzr, xzr, [x4, #-48]
  46c474:	stur	x4, [x4, #-8]
  46c478:	add	x4, x4, #0x30
  46c47c:	cmp	x2, x4
  46c480:	b.ne	46c470 <_obstack_memory_used@@Base+0xfb48>  // b.any
  46c484:	add	x5, x5, #0x9b0
  46c488:	mov	x10, #0x0                   	// #0
  46c48c:	add	x2, x5, #0x10
  46c490:	mov	x15, #0x0                   	// #0
  46c494:	str	xzr, [x5, #392]
  46c498:	str	x2, [x5, #8]
  46c49c:	str	wzr, [x19, #40]
  46c4a0:	b	46c318 <_obstack_memory_used@@Base+0xf9f0>
  46c4a4:	stp	x21, x22, [sp, #32]
  46c4a8:	add	x22, x19, #0x8
  46c4ac:	mov	x1, x22
  46c4b0:	stp	x23, x24, [sp, #48]
  46c4b4:	add	x23, x19, #0x10
  46c4b8:	mov	x2, x23
  46c4bc:	ldrb	w21, [x20, #1]
  46c4c0:	mov	w0, w21
  46c4c4:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46c4c8:	add	x3, sp, #0x40
  46c4cc:	mov	x1, x0
  46c4d0:	add	x2, x20, #0x4
  46c4d4:	mov	w0, w21
  46c4d8:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46c4dc:	ldrb	w24, [x20, #2]
  46c4e0:	mov	x21, x0
  46c4e4:	cmp	w24, #0xff
  46c4e8:	b.eq	46c4f8 <_obstack_memory_used@@Base+0xfbd0>  // b.none
  46c4ec:	ldrb	w0, [x20, #3]
  46c4f0:	cmp	w0, #0x3b
  46c4f4:	b.eq	46c5d8 <_obstack_memory_used@@Base+0xfcb0>  // b.none
  46c4f8:	ldr	x2, [x19]
  46c4fc:	mov	x3, #0x4                   	// #4
  46c500:	ldp	x5, x4, [x19, #8]
  46c504:	add	x0, sp, #0x50
  46c508:	ldr	x1, [sp, #64]
  46c50c:	stp	xzr, x5, [sp, #80]
  46c510:	stp	x4, x1, [sp, #96]
  46c514:	str	x3, [sp, #112]
  46c518:	bl	46bde0 <_obstack_memory_used@@Base+0xf4b8>
  46c51c:	str	x0, [x19, #32]
  46c520:	cbz	x0, 46c6f0 <_obstack_memory_used@@Base+0xfdc8>
  46c524:	ldrsw	x1, [x0, #4]
  46c528:	add	x0, x0, #0x4
  46c52c:	sub	x0, x0, x1
  46c530:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46c534:	and	w20, w0, #0xff
  46c538:	mov	x2, x23
  46c53c:	mov	x1, x22
  46c540:	mov	w0, w20
  46c544:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46c548:	ldr	x2, [x19, #32]
  46c54c:	mov	x1, x0
  46c550:	add	x3, sp, #0x48
  46c554:	mov	w0, w20
  46c558:	add	x2, x2, #0x8
  46c55c:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46c560:	ldr	x1, [sp, #72]
  46c564:	mov	w0, #0x1                   	// #1
  46c568:	ldp	x21, x22, [sp, #32]
  46c56c:	ldp	x23, x24, [sp, #48]
  46c570:	str	x1, [x19, #24]
  46c574:	b	46c420 <_obstack_memory_used@@Base+0xfaf8>
  46c578:	ldr	x2, [x5, #2480]
  46c57c:	add	x8, x5, #0x9b0
  46c580:	cmp	x2, x7
  46c584:	b.ne	46c45c <_obstack_memory_used@@Base+0xfb34>  // b.any
  46c588:	ldr	x7, [x8, #8]
  46c58c:	cbz	x7, 46c310 <_obstack_memory_used@@Base+0xf9e8>
  46c590:	mov	x10, x7
  46c594:	mov	x15, #0x0                   	// #0
  46c598:	ldr	x6, [x19]
  46c59c:	ldp	x2, x4, [x10]
  46c5a0:	cmp	x6, x2
  46c5a4:	b.cc	46c5b0 <_obstack_memory_used@@Base+0xfc88>  // b.lo, b.ul, b.last
  46c5a8:	cmp	x6, x4
  46c5ac:	b.cc	46c708 <_obstack_memory_used@@Base+0xfde0>  // b.lo, b.ul, b.last
  46c5b0:	orr	x2, x2, x4
  46c5b4:	cbz	x2, 46c318 <_obstack_memory_used@@Base+0xf9f0>
  46c5b8:	ldr	x2, [x10, #40]
  46c5bc:	cbz	x2, 46c318 <_obstack_memory_used@@Base+0xf9f0>
  46c5c0:	mov	x15, x10
  46c5c4:	mov	x10, x2
  46c5c8:	ldp	x2, x4, [x10]
  46c5cc:	cmp	x6, x2
  46c5d0:	b.cc	46c5b0 <_obstack_memory_used@@Base+0xfc88>  // b.lo, b.ul, b.last
  46c5d4:	b	46c5a8 <_obstack_memory_used@@Base+0xfc80>
  46c5d8:	mov	x2, x23
  46c5dc:	mov	x1, x22
  46c5e0:	mov	w0, w24
  46c5e4:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46c5e8:	add	x3, sp, #0x48
  46c5ec:	mov	x1, x0
  46c5f0:	mov	x2, x21
  46c5f4:	mov	w0, w24
  46c5f8:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46c5fc:	ldr	x3, [sp, #72]
  46c600:	cbz	x3, 46c6e0 <_obstack_memory_used@@Base+0xfdb8>
  46c604:	ands	x5, x0, #0x3
  46c608:	ldr	x2, [x19]
  46c60c:	b.ne	46c4fc <_obstack_memory_used@@Base+0xfbd4>  // b.any
  46c610:	ldrsw	x1, [x0]
  46c614:	add	x1, x1, x20
  46c618:	cmp	x1, x2
  46c61c:	b.hi	46c6e0 <_obstack_memory_used@@Base+0xfdb8>  // b.pmore
  46c620:	sub	x3, x3, #0x1
  46c624:	lsl	x1, x3, #3
  46c628:	add	x21, x0, x1
  46c62c:	ldrsw	x1, [x0, x1]
  46c630:	add	x1, x1, x20
  46c634:	cmp	x1, x2
  46c638:	b.ls	46c67c <_obstack_memory_used@@Base+0xfd54>  // b.plast
  46c63c:	cmp	x5, x3
  46c640:	b.cs	46c72c <_obstack_memory_used@@Base+0xfe04>  // b.hs, b.nlast
  46c644:	add	x1, x5, x3
  46c648:	lsr	x1, x1, #1
  46c64c:	lsl	x4, x1, #3
  46c650:	add	x21, x0, x4
  46c654:	ldrsw	x4, [x0, x4]
  46c658:	add	x4, x4, x20
  46c65c:	cmp	x4, x2
  46c660:	b.hi	46c700 <_obstack_memory_used@@Base+0xfdd8>  // b.pmore
  46c664:	add	x5, x1, #0x1
  46c668:	lsl	x1, x5, #3
  46c66c:	ldrsw	x1, [x0, x1]
  46c670:	add	x1, x1, x20
  46c674:	cmp	x1, x2
  46c678:	b.ls	46c63c <_obstack_memory_used@@Base+0xfd14>  // b.plast
  46c67c:	ldrsw	x22, [x21, #4]
  46c680:	add	x22, x22, x20
  46c684:	add	x1, x22, #0x4
  46c688:	ldrsw	x0, [x22, #4]
  46c68c:	sub	x0, x1, x0
  46c690:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46c694:	and	w23, w0, #0xff
  46c698:	mov	w0, w23
  46c69c:	bl	46ba20 <_obstack_memory_used@@Base+0xf0f8>
  46c6a0:	mov	w2, w0
  46c6a4:	mov	x1, #0x0                   	// #0
  46c6a8:	add	x2, x2, #0x8
  46c6ac:	add	x3, sp, #0x50
  46c6b0:	add	x2, x22, x2
  46c6b4:	and	w0, w23, #0xf
  46c6b8:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46c6bc:	ldrsw	x0, [x21]
  46c6c0:	ldr	x1, [sp, #80]
  46c6c4:	add	x20, x0, x20
  46c6c8:	ldr	x2, [x19]
  46c6cc:	add	x0, x20, x1
  46c6d0:	cmp	x2, x0
  46c6d4:	b.cs	46c6dc <_obstack_memory_used@@Base+0xfdb4>  // b.hs, b.nlast
  46c6d8:	str	x22, [x19, #32]
  46c6dc:	str	x20, [x19, #24]
  46c6e0:	mov	w0, #0x1                   	// #1
  46c6e4:	ldp	x21, x22, [sp, #32]
  46c6e8:	ldp	x23, x24, [sp, #48]
  46c6ec:	b	46c420 <_obstack_memory_used@@Base+0xfaf8>
  46c6f0:	mov	w0, #0x1                   	// #1
  46c6f4:	ldp	x21, x22, [sp, #32]
  46c6f8:	ldp	x23, x24, [sp, #48]
  46c6fc:	b	46c410 <_obstack_memory_used@@Base+0xfae8>
  46c700:	mov	x3, x1
  46c704:	b	46c63c <_obstack_memory_used@@Base+0xfd14>
  46c708:	cmp	x10, x7
  46c70c:	ldp	x13, x9, [x10, #16]
  46c710:	b.eq	46c3f4 <_obstack_memory_used@@Base+0xfacc>  // b.none
  46c714:	add	x5, x5, #0x9b0
  46c718:	ldr	x0, [x10, #40]
  46c71c:	str	x0, [x15, #40]
  46c720:	str	x10, [x5, #8]
  46c724:	str	x7, [x10, #40]
  46c728:	b	46c3f4 <_obstack_memory_used@@Base+0xfacc>
  46c72c:	bl	402540 <abort@plt>
  46c730:	stp	x29, x30, [sp, #-160]!
  46c734:	mov	x29, sp
  46c738:	stp	x19, x20, [sp, #16]
  46c73c:	mov	x19, x1
  46c740:	ldrb	w1, [x0, #32]
  46c744:	stp	x23, x24, [sp, #48]
  46c748:	mov	x24, x0
  46c74c:	tbz	w1, #0, 46c7b8 <_obstack_memory_used@@Base+0xfe90>
  46c750:	stp	x27, x28, [sp, #80]
  46c754:	ldr	x27, [x24, #24]
  46c758:	tbnz	w1, #2, 46c82c <_obstack_memory_used@@Base+0xff04>
  46c75c:	ldrh	w0, [x24, #32]
  46c760:	tst	w0, #0x7f8
  46c764:	b.ne	46c98c <_obstack_memory_used@@Base+0x10064>  // b.any
  46c768:	mov	x2, #0x0                   	// #0
  46c76c:	ldr	x1, [x27, #8]
  46c770:	b	46c794 <_obstack_memory_used@@Base+0xfe6c>
  46c774:	add	x0, x1, x2
  46c778:	lsr	x0, x0, #1
  46c77c:	add	x3, x0, #0x2
  46c780:	ldr	x20, [x27, x3, lsl #3]
  46c784:	ldr	x3, [x20, #8]
  46c788:	cmp	x19, x3
  46c78c:	b.cs	46c814 <_obstack_memory_used@@Base+0xfeec>  // b.hs, b.nlast
  46c790:	mov	x1, x0
  46c794:	cmp	x1, x2
  46c798:	b.hi	46c774 <_obstack_memory_used@@Base+0xfe4c>  // b.pmore
  46c79c:	ldp	x27, x28, [sp, #80]
  46c7a0:	mov	x20, #0x0                   	// #0
  46c7a4:	mov	x0, x20
  46c7a8:	ldp	x19, x20, [sp, #16]
  46c7ac:	ldp	x23, x24, [sp, #48]
  46c7b0:	ldp	x29, x30, [sp], #160
  46c7b4:	ret
  46c7b8:	stp	x25, x26, [sp, #64]
  46c7bc:	ldr	w25, [x0, #32]
  46c7c0:	stp	x21, x22, [sp, #32]
  46c7c4:	tst	x25, #0xfffff800
  46c7c8:	lsr	w25, w25, #11
  46c7cc:	b.ne	46ca34 <_obstack_memory_used@@Base+0x1010c>  // b.any
  46c7d0:	ldr	x20, [x0, #24]
  46c7d4:	tbz	w1, #1, 46c8e4 <_obstack_memory_used@@Base+0xffbc>
  46c7d8:	ldr	x1, [x20]
  46c7dc:	cbnz	x1, 46c7f0 <_obstack_memory_used@@Base+0xfec8>
  46c7e0:	b	46c910 <_obstack_memory_used@@Base+0xffe8>
  46c7e4:	ldr	x1, [x20, #8]!
  46c7e8:	add	x25, x25, x0
  46c7ec:	cbz	x1, 46c8f8 <_obstack_memory_used@@Base+0xffd0>
  46c7f0:	mov	x0, x24
  46c7f4:	bl	46c020 <_obstack_memory_used@@Base+0xf6f8>
  46c7f8:	cmn	x0, #0x1
  46c7fc:	b.ne	46c7e4 <_obstack_memory_used@@Base+0xfebc>  // b.any
  46c800:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1f6d8>
  46c804:	mov	x1, #0x7f8                 	// #2040
  46c808:	add	x0, x0, #0xe70
  46c80c:	stp	x0, x1, [x24, #24]
  46c810:	b	46c910 <_obstack_memory_used@@Base+0xffe8>
  46c814:	ldr	x2, [x20, #16]
  46c818:	add	x3, x3, x2
  46c81c:	cmp	x19, x3
  46c820:	b.cc	46cd08 <_obstack_memory_used@@Base+0x103e0>  // b.lo, b.ul, b.last
  46c824:	add	x2, x0, #0x1
  46c828:	b	46c794 <_obstack_memory_used@@Base+0xfe6c>
  46c82c:	ldr	x28, [x27, #8]
  46c830:	cbz	x28, 46c79c <_obstack_memory_used@@Base+0xfe74>
  46c834:	add	x0, x24, #0x8
  46c838:	add	x23, sp, #0x88
  46c83c:	stp	x21, x22, [sp, #32]
  46c840:	add	x22, sp, #0x90
  46c844:	stp	x25, x26, [sp, #64]
  46c848:	add	x26, x24, #0x10
  46c84c:	mov	x25, #0x0                   	// #0
  46c850:	str	x0, [sp, #96]
  46c854:	b	46c874 <_obstack_memory_used@@Base+0xff4c>
  46c858:	ldr	x1, [sp, #144]
  46c85c:	add	x0, x0, x1
  46c860:	cmp	x0, x19
  46c864:	b.hi	46cd00 <_obstack_memory_used@@Base+0x103d8>  // b.pmore
  46c868:	add	x25, x24, #0x1
  46c86c:	cmp	x25, x28
  46c870:	b.cs	46c97c <_obstack_memory_used@@Base+0x10054>  // b.hs, b.nlast
  46c874:	add	x24, x25, x28
  46c878:	lsr	x24, x24, #1
  46c87c:	add	x0, x24, #0x2
  46c880:	ldr	x20, [x27, x0, lsl #3]
  46c884:	add	x1, x20, #0x4
  46c888:	ldrsw	x0, [x20, #4]
  46c88c:	sub	x0, x1, x0
  46c890:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46c894:	ldr	x1, [sp, #96]
  46c898:	and	w21, w0, #0xff
  46c89c:	mov	x2, x26
  46c8a0:	mov	w0, w21
  46c8a4:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46c8a8:	mov	x1, x0
  46c8ac:	mov	x3, x23
  46c8b0:	add	x2, x20, #0x8
  46c8b4:	mov	w0, w21
  46c8b8:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46c8bc:	mov	x3, x22
  46c8c0:	mov	x2, x0
  46c8c4:	mov	x1, #0x0                   	// #0
  46c8c8:	and	w0, w21, #0xf
  46c8cc:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46c8d0:	ldr	x0, [sp, #136]
  46c8d4:	cmp	x0, x19
  46c8d8:	b.ls	46c858 <_obstack_memory_used@@Base+0xff30>  // b.plast
  46c8dc:	mov	x28, x24
  46c8e0:	b	46c86c <_obstack_memory_used@@Base+0xff44>
  46c8e4:	mov	x1, x20
  46c8e8:	bl	46c020 <_obstack_memory_used@@Base+0xf6f8>
  46c8ec:	mov	x25, x0
  46c8f0:	cmn	x0, #0x1
  46c8f4:	b.eq	46c800 <_obstack_memory_used@@Base+0xfed8>  // b.none
  46c8f8:	ldr	w0, [x24, #32]
  46c8fc:	tst	x25, #0xffffffffffe00000
  46c900:	b.eq	46cd44 <_obstack_memory_used@@Base+0x1041c>  // b.none
  46c904:	and	w0, w0, #0x7ff
  46c908:	str	w0, [x24, #32]
  46c90c:	cbnz	x25, 46ca34 <_obstack_memory_used@@Base+0x1010c>
  46c910:	ldr	x0, [x24]
  46c914:	cmp	x0, x19
  46c918:	b.hi	46c970 <_obstack_memory_used@@Base+0x10048>  // b.pmore
  46c91c:	ldrb	w1, [x24, #32]
  46c920:	ldr	x21, [x24, #24]
  46c924:	tbnz	w1, #0, 46cd88 <_obstack_memory_used@@Base+0x10460>
  46c928:	tbz	w1, #1, 46cce0 <_obstack_memory_used@@Base+0x103b8>
  46c92c:	ldr	x1, [x21]
  46c930:	cbnz	x1, 46c940 <_obstack_memory_used@@Base+0x10018>
  46c934:	b	46c970 <_obstack_memory_used@@Base+0x10048>
  46c938:	ldr	x1, [x21, #8]!
  46c93c:	cbz	x1, 46c970 <_obstack_memory_used@@Base+0x10048>
  46c940:	mov	x2, x19
  46c944:	mov	x0, x24
  46c948:	bl	46bde0 <_obstack_memory_used@@Base+0xf4b8>
  46c94c:	mov	x20, x0
  46c950:	cbz	x0, 46c938 <_obstack_memory_used@@Base+0x10010>
  46c954:	mov	x0, x20
  46c958:	ldp	x19, x20, [sp, #16]
  46c95c:	ldp	x21, x22, [sp, #32]
  46c960:	ldp	x23, x24, [sp, #48]
  46c964:	ldp	x25, x26, [sp, #64]
  46c968:	ldp	x29, x30, [sp], #160
  46c96c:	ret
  46c970:	ldp	x21, x22, [sp, #32]
  46c974:	ldp	x25, x26, [sp, #64]
  46c978:	b	46c7a0 <_obstack_memory_used@@Base+0xfe78>
  46c97c:	ldp	x21, x22, [sp, #32]
  46c980:	ldp	x25, x26, [sp, #64]
  46c984:	ldp	x27, x28, [sp, #80]
  46c988:	b	46c7a0 <_obstack_memory_used@@Base+0xfe78>
  46c98c:	stp	x25, x26, [sp, #64]
  46c990:	ubfx	x25, x0, #3, #8
  46c994:	add	x2, x24, #0x10
  46c998:	add	x1, x24, #0x8
  46c99c:	mov	x0, x25
  46c9a0:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46c9a4:	mov	x24, x0
  46c9a8:	ldr	x28, [x27, #8]
  46c9ac:	cbz	x28, 46c980 <_obstack_memory_used@@Base+0x10058>
  46c9b0:	and	w0, w25, #0xf
  46c9b4:	add	x23, sp, #0x88
  46c9b8:	mov	x26, #0x0                   	// #0
  46c9bc:	stp	x21, x22, [sp, #32]
  46c9c0:	add	x22, sp, #0x90
  46c9c4:	str	w0, [sp, #96]
  46c9c8:	b	46c9e8 <_obstack_memory_used@@Base+0x100c0>
  46c9cc:	ldr	x1, [sp, #144]
  46c9d0:	add	x0, x0, x1
  46c9d4:	cmp	x0, x19
  46c9d8:	b.hi	46cd00 <_obstack_memory_used@@Base+0x103d8>  // b.pmore
  46c9dc:	add	x26, x21, #0x1
  46c9e0:	cmp	x26, x28
  46c9e4:	b.cs	46c97c <_obstack_memory_used@@Base+0x10054>  // b.hs, b.nlast
  46c9e8:	add	x21, x28, x26
  46c9ec:	mov	x3, x23
  46c9f0:	mov	x1, x24
  46c9f4:	mov	w0, w25
  46c9f8:	lsr	x21, x21, #1
  46c9fc:	add	x2, x21, #0x2
  46ca00:	ldr	x20, [x27, x2, lsl #3]
  46ca04:	add	x2, x20, #0x8
  46ca08:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46ca0c:	mov	x2, x0
  46ca10:	ldrb	w0, [sp, #96]
  46ca14:	mov	x3, x22
  46ca18:	mov	x1, #0x0                   	// #0
  46ca1c:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46ca20:	ldr	x0, [sp, #136]
  46ca24:	cmp	x0, x19
  46ca28:	b.ls	46c9cc <_obstack_memory_used@@Base+0x100a4>  // b.plast
  46ca2c:	mov	x28, x21
  46ca30:	b	46c9e0 <_obstack_memory_used@@Base+0x100b8>
  46ca34:	add	x20, x25, #0x2
  46ca38:	lsl	x20, x20, #3
  46ca3c:	mov	x0, x20
  46ca40:	bl	4023d0 <malloc@plt>
  46ca44:	str	x0, [sp, #144]
  46ca48:	mov	x1, x0
  46ca4c:	cbz	x0, 46c910 <_obstack_memory_used@@Base+0xffe8>
  46ca50:	str	xzr, [x1, #8]
  46ca54:	mov	x0, x20
  46ca58:	bl	4023d0 <malloc@plt>
  46ca5c:	str	x0, [sp, #152]
  46ca60:	cbz	x0, 46ca68 <_obstack_memory_used@@Base+0x10140>
  46ca64:	str	xzr, [x0, #8]
  46ca68:	ldrb	w0, [x24, #32]
  46ca6c:	ldr	x20, [x24, #24]
  46ca70:	tbz	w0, #1, 46cd1c <_obstack_memory_used@@Base+0x103f4>
  46ca74:	ldr	x2, [x20]
  46ca78:	cbz	x2, 46cd80 <_obstack_memory_used@@Base+0x10458>
  46ca7c:	add	x22, sp, #0x90
  46ca80:	mov	x1, x22
  46ca84:	mov	x0, x24
  46ca88:	bl	46c1a0 <_obstack_memory_used@@Base+0xf878>
  46ca8c:	ldr	x2, [x20, #8]!
  46ca90:	cbnz	x2, 46ca80 <_obstack_memory_used@@Base+0x10158>
  46ca94:	ldr	x0, [sp, #144]
  46ca98:	str	x0, [sp, #96]
  46ca9c:	str	x0, [sp, #120]
  46caa0:	cbz	x0, 46cab0 <_obstack_memory_used@@Base+0x10188>
  46caa4:	ldr	x0, [x0, #8]
  46caa8:	cmp	x0, x25
  46caac:	b.ne	46cd80 <_obstack_memory_used@@Base+0x10458>  // b.any
  46cab0:	ldrb	w0, [x24, #32]
  46cab4:	tbnz	w0, #2, 46cd10 <_obstack_memory_used@@Base+0x103e8>
  46cab8:	ldrh	w1, [x24, #32]
  46cabc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0xe6d8>
  46cac0:	adrp	x20, 46b000 <_obstack_memory_used@@Base+0xe6d8>
  46cac4:	add	x0, x0, #0xd58
  46cac8:	tst	w1, #0x7f8
  46cacc:	add	x20, x20, #0x830
  46cad0:	csel	x20, x20, x0, eq  // eq = none
  46cad4:	ldr	x22, [sp, #152]
  46cad8:	cbz	x22, 46cd30 <_obstack_memory_used@@Base+0x10408>
  46cadc:	ldr	x1, [sp, #96]
  46cae0:	stp	x27, x28, [sp, #80]
  46cae4:	ldr	x0, [x1, #8]
  46cae8:	str	x0, [sp, #104]
  46caec:	cbz	x0, 46cd70 <_obstack_memory_used@@Base+0x10448>
  46caf0:	adrp	x3, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46caf4:	add	x3, x3, #0x9b0
  46caf8:	add	x0, x0, #0x1
  46cafc:	add	x28, x1, #0x10
  46cb00:	add	x27, x3, #0x190
  46cb04:	mov	x21, x28
  46cb08:	mov	x23, x27
  46cb0c:	lsl	x0, x0, #3
  46cb10:	mov	x26, #0x10                  	// #16
  46cb14:	str	x0, [sp, #112]
  46cb18:	ldr	x0, [sp, #112]
  46cb1c:	str	x27, [x22, x26]
  46cb20:	cmp	x0, x26
  46cb24:	b.eq	46cb80 <_obstack_memory_used@@Base+0x10258>  // b.none
  46cb28:	cmp	x21, x23
  46cb2c:	mov	x27, x21
  46cb30:	b.ne	46cb50 <_obstack_memory_used@@Base+0x10228>  // b.any
  46cb34:	b	46cb70 <_obstack_memory_used@@Base+0x10248>
  46cb38:	sub	x3, x27, x28
  46cb3c:	add	x0, x22, x3
  46cb40:	ldr	x27, [x0, #16]
  46cb44:	str	xzr, [x0, #16]
  46cb48:	cmp	x27, x23
  46cb4c:	b.eq	46cb70 <_obstack_memory_used@@Base+0x10248>  // b.none
  46cb50:	ldr	x2, [x27]
  46cb54:	mov	x0, x24
  46cb58:	ldr	x1, [x21, #8]
  46cb5c:	blr	x20
  46cb60:	tbnz	w0, #31, 46cb38 <_obstack_memory_used@@Base+0x10210>
  46cb64:	add	x21, x21, #0x8
  46cb68:	add	x26, x26, #0x8
  46cb6c:	b	46cb18 <_obstack_memory_used@@Base+0x101f0>
  46cb70:	mov	x27, x23
  46cb74:	add	x21, x21, #0x8
  46cb78:	add	x26, x26, #0x8
  46cb7c:	b	46cb18 <_obstack_memory_used@@Base+0x101f0>
  46cb80:	add	x6, x22, #0x10
  46cb84:	mov	x5, #0x0                   	// #0
  46cb88:	mov	x3, #0x0                   	// #0
  46cb8c:	mov	x0, #0x0                   	// #0
  46cb90:	b	46cbb4 <_obstack_memory_used@@Base+0x1028c>
  46cb94:	ldr	x4, [sp, #96]
  46cb98:	add	x1, x3, #0x2
  46cb9c:	add	x3, x3, #0x1
  46cba0:	str	x2, [x4, x1, lsl #3]
  46cba4:	ldr	x1, [sp, #104]
  46cba8:	add	x0, x0, #0x1
  46cbac:	cmp	x1, x0
  46cbb0:	b.eq	46cbd0 <_obstack_memory_used@@Base+0x102a8>  // b.none
  46cbb4:	ldr	x1, [x6, x0, lsl #3]
  46cbb8:	ldr	x2, [x28, x0, lsl #3]
  46cbbc:	cbnz	x1, 46cb94 <_obstack_memory_used@@Base+0x1026c>
  46cbc0:	add	x1, x5, #0x2
  46cbc4:	add	x5, x5, #0x1
  46cbc8:	str	x2, [x22, x1, lsl #3]
  46cbcc:	b	46cba4 <_obstack_memory_used@@Base+0x1027c>
  46cbd0:	ldp	x0, x2, [sp, #144]
  46cbd4:	str	x0, [sp, #96]
  46cbd8:	ldr	x0, [sp, #120]
  46cbdc:	str	x3, [x0, #8]
  46cbe0:	ldr	x0, [sp, #96]
  46cbe4:	str	x5, [x22, #8]
  46cbe8:	ldr	x1, [x2, #8]
  46cbec:	ldr	x0, [x0, #8]
  46cbf0:	add	x0, x0, x1
  46cbf4:	cmp	x0, x25
  46cbf8:	b.ne	46cd84 <_obstack_memory_used@@Base+0x1045c>  // b.any
  46cbfc:	mov	x1, x20
  46cc00:	mov	x0, x24
  46cc04:	bl	46b960 <_obstack_memory_used@@Base+0xf038>
  46cc08:	ldr	x25, [sp, #152]
  46cc0c:	ldr	x22, [x25, #8]
  46cc10:	cbz	x22, 46ccb4 <_obstack_memory_used@@Base+0x1038c>
  46cc14:	ldr	x0, [sp, #144]
  46cc18:	str	x0, [sp, #96]
  46cc1c:	add	x27, x0, #0x10
  46cc20:	ldr	x28, [x0, #8]
  46cc24:	nop
  46cc28:	add	x0, x25, x22, lsl #3
  46cc2c:	sub	x23, x22, #0x1
  46cc30:	ldr	x26, [x0, #8]
  46cc34:	cbz	x28, 46cd50 <_obstack_memory_used@@Base+0x10428>
  46cc38:	add	x22, x22, x28
  46cc3c:	mov	x21, x28
  46cc40:	sub	x22, x22, #0x1
  46cc44:	b	46cc58 <_obstack_memory_used@@Base+0x10330>
  46cc48:	ldr	x0, [x27, x21, lsl #3]
  46cc4c:	str	x0, [x27, x22, lsl #3]
  46cc50:	sub	x22, x22, #0x1
  46cc54:	cbz	x21, 46cc90 <_obstack_memory_used@@Base+0x10368>
  46cc58:	mov	x28, x21
  46cc5c:	sub	x21, x21, #0x1
  46cc60:	mov	x2, x26
  46cc64:	mov	x0, x24
  46cc68:	ldr	x1, [x27, x21, lsl #3]
  46cc6c:	blr	x20
  46cc70:	cmp	w0, #0x0
  46cc74:	b.gt	46cc48 <_obstack_memory_used@@Base+0x10320>
  46cc78:	ldr	x0, [sp, #96]
  46cc7c:	add	x22, x22, #0x2
  46cc80:	str	x26, [x0, x22, lsl #3]
  46cc84:	cbz	x23, 46cc9c <_obstack_memory_used@@Base+0x10374>
  46cc88:	mov	x22, x23
  46cc8c:	b	46cc28 <_obstack_memory_used@@Base+0x10300>
  46cc90:	mov	x22, x23
  46cc94:	mov	x28, #0x0                   	// #0
  46cc98:	b	46cc78 <_obstack_memory_used@@Base+0x10350>
  46cc9c:	ldr	x2, [sp, #96]
  46cca0:	ldr	x1, [x25, #8]
  46cca4:	ldr	x0, [x2, #8]
  46cca8:	ldr	x25, [sp, #152]
  46ccac:	add	x0, x0, x1
  46ccb0:	str	x0, [x2, #8]
  46ccb4:	mov	x0, x25
  46ccb8:	bl	402640 <free@plt>
  46ccbc:	ldp	x27, x28, [sp, #80]
  46ccc0:	ldr	x1, [sp, #144]
  46ccc4:	ldrb	w0, [x24, #32]
  46ccc8:	ldr	x2, [x24, #24]
  46cccc:	str	x2, [x1]
  46ccd0:	orr	w0, w0, #0x1
  46ccd4:	str	x1, [x24, #24]
  46ccd8:	strb	w0, [x24, #32]
  46ccdc:	b	46c910 <_obstack_memory_used@@Base+0xffe8>
  46cce0:	mov	x1, x21
  46cce4:	mov	x2, x19
  46cce8:	mov	x0, x24
  46ccec:	bl	46bde0 <_obstack_memory_used@@Base+0xf4b8>
  46ccf0:	mov	x20, x0
  46ccf4:	ldp	x21, x22, [sp, #32]
  46ccf8:	ldp	x25, x26, [sp, #64]
  46ccfc:	b	46c7a4 <_obstack_memory_used@@Base+0xfe7c>
  46cd00:	ldp	x21, x22, [sp, #32]
  46cd04:	ldp	x25, x26, [sp, #64]
  46cd08:	ldp	x27, x28, [sp, #80]
  46cd0c:	b	46c7a4 <_obstack_memory_used@@Base+0xfe7c>
  46cd10:	adrp	x20, 46b000 <_obstack_memory_used@@Base+0xe6d8>
  46cd14:	add	x20, x20, #0xf60
  46cd18:	b	46cad4 <_obstack_memory_used@@Base+0x101ac>
  46cd1c:	mov	x2, x20
  46cd20:	add	x1, sp, #0x90
  46cd24:	mov	x0, x24
  46cd28:	bl	46c1a0 <_obstack_memory_used@@Base+0xf878>
  46cd2c:	b	46ca94 <_obstack_memory_used@@Base+0x1016c>
  46cd30:	ldr	x2, [sp, #96]
  46cd34:	mov	x1, x20
  46cd38:	mov	x0, x24
  46cd3c:	bl	46b960 <_obstack_memory_used@@Base+0xf038>
  46cd40:	b	46ccc0 <_obstack_memory_used@@Base+0x10398>
  46cd44:	bfi	w0, w25, #11, #21
  46cd48:	str	w0, [x24, #32]
  46cd4c:	b	46c90c <_obstack_memory_used@@Base+0xffe4>
  46cd50:	ldr	x2, [sp, #96]
  46cd54:	add	x1, x22, #0x1
  46cd58:	str	x26, [x2, x1, lsl #3]
  46cd5c:	cbz	x23, 46cc9c <_obstack_memory_used@@Base+0x10374>
  46cd60:	sub	x23, x22, #0x2
  46cd64:	mov	x22, x23
  46cd68:	ldr	x26, [x0]
  46cd6c:	b	46cc78 <_obstack_memory_used@@Base+0x10350>
  46cd70:	mov	x2, x22
  46cd74:	mov	x5, #0x0                   	// #0
  46cd78:	mov	x3, #0x0                   	// #0
  46cd7c:	b	46cbd8 <_obstack_memory_used@@Base+0x102b0>
  46cd80:	stp	x27, x28, [sp, #80]
  46cd84:	bl	402540 <abort@plt>
  46cd88:	ldp	x21, x22, [sp, #32]
  46cd8c:	ldp	x25, x26, [sp, #64]
  46cd90:	b	46c750 <_obstack_memory_used@@Base+0xfe28>
  46cd94:	nop
  46cd98:	stp	x29, x30, [sp, #-48]!
  46cd9c:	mov	x5, #0xffffffffffffffff    	// #-1
  46cda0:	mov	x4, #0x7f8                 	// #2040
  46cda4:	mov	x29, sp
  46cda8:	stp	x19, x20, [sp, #16]
  46cdac:	adrp	x20, 49d000 <_obstack_memory_used@@Base+0x406d8>
  46cdb0:	mov	x19, x1
  46cdb4:	ldr	x1, [x20, #3880]
  46cdb8:	str	x21, [sp, #32]
  46cdbc:	stp	x5, x2, [x19]
  46cdc0:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46cdc4:	stp	x3, x0, [x19, #16]
  46cdc8:	str	x4, [x19, #32]
  46cdcc:	cbz	x1, 46cddc <_obstack_memory_used@@Base+0x104b4>
  46cdd0:	add	x0, x21, #0x9b0
  46cdd4:	add	x0, x0, #0x198
  46cdd8:	bl	402800 <pthread_mutex_lock@plt>
  46cddc:	add	x1, x21, #0x9b0
  46cde0:	ldr	w0, [x1, #464]
  46cde4:	ldr	x2, [x1, #456]
  46cde8:	str	x2, [x19, #40]
  46cdec:	str	x19, [x1, #456]
  46cdf0:	cbz	w0, 46ce24 <_obstack_memory_used@@Base+0x104fc>
  46cdf4:	ldr	x20, [x20, #3880]
  46cdf8:	cbz	x20, 46ce14 <_obstack_memory_used@@Base+0x104ec>
  46cdfc:	add	x0, x21, #0x9b0
  46ce00:	ldp	x19, x20, [sp, #16]
  46ce04:	add	x0, x0, #0x198
  46ce08:	ldr	x21, [sp, #32]
  46ce0c:	ldp	x29, x30, [sp], #48
  46ce10:	b	402820 <pthread_mutex_unlock@plt>
  46ce14:	ldp	x19, x20, [sp, #16]
  46ce18:	ldr	x21, [sp, #32]
  46ce1c:	ldp	x29, x30, [sp], #48
  46ce20:	ret
  46ce24:	add	x1, x1, #0x1d0
  46ce28:	mov	w0, #0x1                   	// #1
  46ce2c:	str	w0, [x1]
  46ce30:	b	46cdf4 <_obstack_memory_used@@Base+0x104cc>
  46ce34:	nop
  46ce38:	cbz	x0, 46ce48 <_obstack_memory_used@@Base+0x10520>
  46ce3c:	ldr	w4, [x0]
  46ce40:	cbz	w4, 46ce48 <_obstack_memory_used@@Base+0x10520>
  46ce44:	b	46cd98 <_obstack_memory_used@@Base+0x10470>
  46ce48:	ret
  46ce4c:	nop
  46ce50:	cbz	x0, 46ce68 <_obstack_memory_used@@Base+0x10540>
  46ce54:	ldr	w2, [x0]
  46ce58:	cbz	w2, 46ce68 <_obstack_memory_used@@Base+0x10540>
  46ce5c:	mov	x3, #0x0                   	// #0
  46ce60:	mov	x2, #0x0                   	// #0
  46ce64:	b	46cd98 <_obstack_memory_used@@Base+0x10470>
  46ce68:	ret
  46ce6c:	nop
  46ce70:	stp	x29, x30, [sp, #-32]!
  46ce74:	mov	x29, sp
  46ce78:	str	x19, [sp, #16]
  46ce7c:	mov	x19, x0
  46ce80:	ldr	w0, [x0]
  46ce84:	cbnz	w0, 46ce94 <_obstack_memory_used@@Base+0x1056c>
  46ce88:	ldr	x19, [sp, #16]
  46ce8c:	ldp	x29, x30, [sp], #32
  46ce90:	ret
  46ce94:	mov	x0, #0x30                  	// #48
  46ce98:	bl	4023d0 <malloc@plt>
  46ce9c:	mov	x1, x0
  46cea0:	mov	x0, x19
  46cea4:	ldr	x19, [sp, #16]
  46cea8:	mov	x3, #0x0                   	// #0
  46ceac:	ldp	x29, x30, [sp], #32
  46ceb0:	mov	x2, #0x0                   	// #0
  46ceb4:	b	46cd98 <_obstack_memory_used@@Base+0x10470>
  46ceb8:	stp	x29, x30, [sp, #-48]!
  46cebc:	mov	x5, #0xffffffffffffffff    	// #-1
  46cec0:	mov	x4, #0x7fa                 	// #2042
  46cec4:	mov	x29, sp
  46cec8:	stp	x19, x20, [sp, #16]
  46cecc:	adrp	x20, 49d000 <_obstack_memory_used@@Base+0x406d8>
  46ced0:	mov	x19, x1
  46ced4:	ldr	x1, [x20, #3880]
  46ced8:	str	x21, [sp, #32]
  46cedc:	stp	x5, x2, [x19]
  46cee0:	adrp	x21, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46cee4:	stp	x3, x0, [x19, #16]
  46cee8:	str	x4, [x19, #32]
  46ceec:	cbz	x1, 46cefc <_obstack_memory_used@@Base+0x105d4>
  46cef0:	add	x0, x21, #0x9b0
  46cef4:	add	x0, x0, #0x198
  46cef8:	bl	402800 <pthread_mutex_lock@plt>
  46cefc:	add	x1, x21, #0x9b0
  46cf00:	ldr	w0, [x1, #464]
  46cf04:	ldr	x2, [x1, #456]
  46cf08:	str	x2, [x19, #40]
  46cf0c:	str	x19, [x1, #456]
  46cf10:	cbz	w0, 46cf44 <_obstack_memory_used@@Base+0x1061c>
  46cf14:	ldr	x20, [x20, #3880]
  46cf18:	cbz	x20, 46cf34 <_obstack_memory_used@@Base+0x1060c>
  46cf1c:	add	x0, x21, #0x9b0
  46cf20:	ldp	x19, x20, [sp, #16]
  46cf24:	add	x0, x0, #0x198
  46cf28:	ldr	x21, [sp, #32]
  46cf2c:	ldp	x29, x30, [sp], #48
  46cf30:	b	402820 <pthread_mutex_unlock@plt>
  46cf34:	ldp	x19, x20, [sp, #16]
  46cf38:	ldr	x21, [sp, #32]
  46cf3c:	ldp	x29, x30, [sp], #48
  46cf40:	ret
  46cf44:	add	x1, x1, #0x1d0
  46cf48:	mov	w0, #0x1                   	// #1
  46cf4c:	str	w0, [x1]
  46cf50:	b	46cf14 <_obstack_memory_used@@Base+0x105ec>
  46cf54:	nop
  46cf58:	mov	x3, #0x0                   	// #0
  46cf5c:	mov	x2, #0x0                   	// #0
  46cf60:	b	46ceb8 <_obstack_memory_used@@Base+0x10590>
  46cf64:	nop
  46cf68:	stp	x29, x30, [sp, #-32]!
  46cf6c:	mov	x29, sp
  46cf70:	str	x19, [sp, #16]
  46cf74:	mov	x19, x0
  46cf78:	mov	x0, #0x30                  	// #48
  46cf7c:	bl	4023d0 <malloc@plt>
  46cf80:	mov	x1, x0
  46cf84:	mov	x0, x19
  46cf88:	ldr	x19, [sp, #16]
  46cf8c:	mov	x3, #0x0                   	// #0
  46cf90:	ldp	x29, x30, [sp], #32
  46cf94:	mov	x2, #0x0                   	// #0
  46cf98:	b	46ceb8 <_obstack_memory_used@@Base+0x10590>
  46cf9c:	nop
  46cfa0:	stp	x29, x30, [sp, #-48]!
  46cfa4:	mov	x29, sp
  46cfa8:	stp	x19, x20, [sp, #16]
  46cfac:	cbz	x0, 46d078 <_obstack_memory_used@@Base+0x10750>
  46cfb0:	mov	x20, x0
  46cfb4:	ldr	w0, [x0]
  46cfb8:	cbz	w0, 46d078 <_obstack_memory_used@@Base+0x10750>
  46cfbc:	stp	x21, x22, [sp, #32]
  46cfc0:	adrp	x21, 49d000 <_obstack_memory_used@@Base+0x406d8>
  46cfc4:	adrp	x22, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46cfc8:	ldr	x0, [x21, #3880]
  46cfcc:	cbz	x0, 46cfdc <_obstack_memory_used@@Base+0x106b4>
  46cfd0:	add	x0, x22, #0x9b0
  46cfd4:	add	x0, x0, #0x198
  46cfd8:	bl	402800 <pthread_mutex_lock@plt>
  46cfdc:	add	x2, x22, #0x9b0
  46cfe0:	ldr	x1, [x2, #456]
  46cfe4:	cbz	x1, 46d02c <_obstack_memory_used@@Base+0x10704>
  46cfe8:	add	x2, x2, #0x1c8
  46cfec:	b	46cff8 <_obstack_memory_used@@Base+0x106d0>
  46cff0:	add	x2, x19, #0x28
  46cff4:	cbz	x1, 46d02c <_obstack_memory_used@@Base+0x10704>
  46cff8:	ldr	x0, [x1, #24]
  46cffc:	mov	x19, x1
  46d000:	ldr	x1, [x1, #40]
  46d004:	cmp	x20, x0
  46d008:	b.ne	46cff0 <_obstack_memory_used@@Base+0x106c8>  // b.any
  46d00c:	str	x1, [x2]
  46d010:	ldr	x21, [x21, #3880]
  46d014:	cbnz	x21, 46d08c <_obstack_memory_used@@Base+0x10764>
  46d018:	mov	x0, x19
  46d01c:	ldp	x19, x20, [sp, #16]
  46d020:	ldp	x21, x22, [sp, #32]
  46d024:	ldp	x29, x30, [sp], #48
  46d028:	ret
  46d02c:	add	x2, x22, #0x9b0
  46d030:	ldr	x19, [x2, #472]
  46d034:	cbz	x19, 46d0ac <_obstack_memory_used@@Base+0x10784>
  46d038:	add	x2, x2, #0x1d8
  46d03c:	b	46d058 <_obstack_memory_used@@Base+0x10730>
  46d040:	ldr	x1, [x0]
  46d044:	cmp	x20, x1
  46d048:	b.eq	46d0c4 <_obstack_memory_used@@Base+0x1079c>  // b.none
  46d04c:	add	x2, x19, #0x28
  46d050:	ldr	x19, [x19, #40]
  46d054:	cbz	x19, 46d0ac <_obstack_memory_used@@Base+0x10784>
  46d058:	ldrb	w1, [x19, #32]
  46d05c:	ldr	x0, [x19, #24]
  46d060:	tbnz	w1, #0, 46d040 <_obstack_memory_used@@Base+0x10718>
  46d064:	cmp	x20, x0
  46d068:	b.ne	46d04c <_obstack_memory_used@@Base+0x10724>  // b.any
  46d06c:	ldr	x0, [x19, #40]
  46d070:	str	x0, [x2]
  46d074:	b	46d010 <_obstack_memory_used@@Base+0x106e8>
  46d078:	mov	x19, #0x0                   	// #0
  46d07c:	mov	x0, x19
  46d080:	ldp	x19, x20, [sp, #16]
  46d084:	ldp	x29, x30, [sp], #48
  46d088:	ret
  46d08c:	add	x0, x22, #0x9b0
  46d090:	add	x0, x0, #0x198
  46d094:	bl	402820 <pthread_mutex_unlock@plt>
  46d098:	mov	x0, x19
  46d09c:	ldp	x19, x20, [sp, #16]
  46d0a0:	ldp	x21, x22, [sp, #32]
  46d0a4:	ldp	x29, x30, [sp], #48
  46d0a8:	ret
  46d0ac:	ldr	x21, [x21, #3880]
  46d0b0:	cbz	x21, 46d0c0 <_obstack_memory_used@@Base+0x10798>
  46d0b4:	add	x0, x22, #0x9b0
  46d0b8:	add	x0, x0, #0x198
  46d0bc:	bl	402820 <pthread_mutex_unlock@plt>
  46d0c0:	bl	402540 <abort@plt>
  46d0c4:	ldr	x1, [x19, #40]
  46d0c8:	str	x1, [x2]
  46d0cc:	bl	402640 <free@plt>
  46d0d0:	b	46d010 <_obstack_memory_used@@Base+0x106e8>
  46d0d4:	nop
  46d0d8:	b	46cfa0 <_obstack_memory_used@@Base+0x10678>
  46d0dc:	nop
  46d0e0:	ldr	w1, [x0]
  46d0e4:	cbnz	w1, 46d0ec <_obstack_memory_used@@Base+0x107c4>
  46d0e8:	ret
  46d0ec:	stp	x29, x30, [sp, #-16]!
  46d0f0:	mov	x29, sp
  46d0f4:	bl	46cfa0 <_obstack_memory_used@@Base+0x10678>
  46d0f8:	ldp	x29, x30, [sp], #16
  46d0fc:	b	402640 <free@plt>
  46d100:	stp	x29, x30, [sp, #-128]!
  46d104:	mov	x29, sp
  46d108:	stp	x23, x24, [sp, #48]
  46d10c:	adrp	x23, 49e000 <_obstack_memory_used@@Base+0x416d8>
  46d110:	add	x2, x23, #0x9b0
  46d114:	stp	x19, x20, [sp, #16]
  46d118:	mov	x20, x0
  46d11c:	add	x0, x2, #0x1d0
  46d120:	stp	x21, x22, [sp, #32]
  46d124:	mov	x22, x1
  46d128:	ldr	w0, [x0]
  46d12c:	cbnz	w0, 46d190 <_obstack_memory_used@@Base+0x10868>
  46d130:	mov	w2, #0x1                   	// #1
  46d134:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0xf6d8>
  46d138:	add	x1, sp, #0x50
  46d13c:	add	x0, x0, #0x2e0
  46d140:	stp	x20, xzr, [sp, #80]
  46d144:	stp	xzr, xzr, [sp, #96]
  46d148:	str	xzr, [sp, #112]
  46d14c:	str	w2, [sp, #120]
  46d150:	bl	402620 <dl_iterate_phdr@plt>
  46d154:	tbnz	w0, #31, 46d2a4 <_obstack_memory_used@@Base+0x1097c>
  46d158:	ldr	x21, [sp, #112]
  46d15c:	cbz	x21, 46d178 <_obstack_memory_used@@Base+0x10850>
  46d160:	ldr	x0, [sp, #88]
  46d164:	str	x0, [x22]
  46d168:	ldr	x0, [sp, #96]
  46d16c:	str	x0, [x22, #8]
  46d170:	ldr	x0, [sp, #104]
  46d174:	str	x0, [x22, #16]
  46d178:	mov	x0, x21
  46d17c:	ldp	x19, x20, [sp, #16]
  46d180:	ldp	x21, x22, [sp, #32]
  46d184:	ldp	x23, x24, [sp, #48]
  46d188:	ldp	x29, x30, [sp], #128
  46d18c:	ret
  46d190:	stp	x25, x26, [sp, #64]
  46d194:	adrp	x25, 49d000 <_obstack_memory_used@@Base+0x406d8>
  46d198:	ldr	x0, [x25, #3880]
  46d19c:	cbz	x0, 46d1a8 <_obstack_memory_used@@Base+0x10880>
  46d1a0:	add	x0, x2, #0x198
  46d1a4:	bl	402800 <pthread_mutex_lock@plt>
  46d1a8:	add	x0, x23, #0x9b0
  46d1ac:	ldr	x19, [x0, #472]
  46d1b0:	cbnz	x19, 46d1c0 <_obstack_memory_used@@Base+0x10898>
  46d1b4:	b	46d23c <_obstack_memory_used@@Base+0x10914>
  46d1b8:	ldr	x19, [x19, #40]
  46d1bc:	cbz	x19, 46d23c <_obstack_memory_used@@Base+0x10914>
  46d1c0:	ldr	x0, [x19]
  46d1c4:	cmp	x20, x0
  46d1c8:	b.cc	46d1b8 <_obstack_memory_used@@Base+0x10890>  // b.lo, b.ul, b.last
  46d1cc:	mov	x1, x20
  46d1d0:	mov	x0, x19
  46d1d4:	bl	46c730 <_obstack_memory_used@@Base+0xfe08>
  46d1d8:	mov	x21, x0
  46d1dc:	cbz	x0, 46d23c <_obstack_memory_used@@Base+0x10914>
  46d1e0:	ldr	x25, [x25, #3880]
  46d1e4:	cbnz	x25, 46d2ac <_obstack_memory_used@@Base+0x10984>
  46d1e8:	ldrb	w0, [x19, #32]
  46d1ec:	ldr	x1, [x19, #8]
  46d1f0:	str	x1, [x22]
  46d1f4:	ldr	x1, [x19, #16]
  46d1f8:	str	x1, [x22, #8]
  46d1fc:	tbnz	w0, #2, 46d2bc <_obstack_memory_used@@Base+0x10994>
  46d200:	ldrh	w20, [x19, #32]
  46d204:	ubfx	x20, x20, #3, #8
  46d208:	add	x2, x19, #0x10
  46d20c:	add	x1, x19, #0x8
  46d210:	mov	w0, w20
  46d214:	bl	46bcf8 <_obstack_memory_used@@Base+0xf3d0>
  46d218:	add	x3, sp, #0x50
  46d21c:	mov	x1, x0
  46d220:	add	x2, x21, #0x8
  46d224:	mov	w0, w20
  46d228:	bl	46ba80 <_obstack_memory_used@@Base+0xf158>
  46d22c:	ldr	x0, [sp, #80]
  46d230:	ldp	x25, x26, [sp, #64]
  46d234:	str	x0, [x22, #16]
  46d238:	b	46d178 <_obstack_memory_used@@Base+0x10850>
  46d23c:	add	x24, x23, #0x9b0
  46d240:	add	x26, x24, #0x1d8
  46d244:	nop
  46d248:	ldr	x19, [x24, #456]
  46d24c:	cbz	x19, 46d2d4 <_obstack_memory_used@@Base+0x109ac>
  46d250:	ldr	x2, [x19, #40]
  46d254:	mov	x1, x20
  46d258:	mov	x0, x19
  46d25c:	str	x2, [x24, #456]
  46d260:	bl	46c730 <_obstack_memory_used@@Base+0xfe08>
  46d264:	mov	x21, x0
  46d268:	ldr	x2, [x24, #472]
  46d26c:	cbz	x2, 46d2ec <_obstack_memory_used@@Base+0x109c4>
  46d270:	mov	x0, x26
  46d274:	ldr	x3, [x19]
  46d278:	b	46d288 <_obstack_memory_used@@Base+0x10960>
  46d27c:	add	x0, x2, #0x28
  46d280:	ldr	x2, [x2, #40]
  46d284:	cbz	x2, 46d294 <_obstack_memory_used@@Base+0x1096c>
  46d288:	ldr	x1, [x2]
  46d28c:	cmp	x1, x3
  46d290:	b.cs	46d27c <_obstack_memory_used@@Base+0x10954>  // b.hs, b.nlast
  46d294:	str	x2, [x19, #40]
  46d298:	str	x19, [x0]
  46d29c:	cbz	x21, 46d248 <_obstack_memory_used@@Base+0x10920>
  46d2a0:	b	46d1e0 <_obstack_memory_used@@Base+0x108b8>
  46d2a4:	mov	x21, #0x0                   	// #0
  46d2a8:	b	46d178 <_obstack_memory_used@@Base+0x10850>
  46d2ac:	add	x0, x23, #0x9b0
  46d2b0:	add	x0, x0, #0x198
  46d2b4:	bl	402820 <pthread_mutex_unlock@plt>
  46d2b8:	b	46d1e8 <_obstack_memory_used@@Base+0x108c0>
  46d2bc:	add	x1, x21, #0x4
  46d2c0:	ldrsw	x0, [x21, #4]
  46d2c4:	sub	x0, x1, x0
  46d2c8:	bl	46bbe0 <_obstack_memory_used@@Base+0xf2b8>
  46d2cc:	and	w20, w0, #0xff
  46d2d0:	b	46d208 <_obstack_memory_used@@Base+0x108e0>
  46d2d4:	ldr	x25, [x25, #3880]
  46d2d8:	cbz	x25, 46d2f4 <_obstack_memory_used@@Base+0x109cc>
  46d2dc:	add	x0, x24, #0x198
  46d2e0:	bl	402820 <pthread_mutex_unlock@plt>
  46d2e4:	ldp	x25, x26, [sp, #64]
  46d2e8:	b	46d130 <_obstack_memory_used@@Base+0x10808>
  46d2ec:	mov	x0, x26
  46d2f0:	b	46d294 <_obstack_memory_used@@Base+0x1096c>
  46d2f4:	ldp	x25, x26, [sp, #64]
  46d2f8:	b	46d130 <_obstack_memory_used@@Base+0x10808>
  46d2fc:	nop
  46d300:	stp	x29, x30, [sp, #-64]!
  46d304:	mov	x29, sp
  46d308:	stp	x19, x20, [sp, #16]
  46d30c:	adrp	x20, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  46d310:	add	x20, x20, #0xde8
  46d314:	stp	x21, x22, [sp, #32]
  46d318:	adrp	x21, 49c000 <_obstack_memory_used@@Base+0x3f6d8>
  46d31c:	add	x21, x21, #0xdc8
  46d320:	sub	x20, x20, x21
  46d324:	mov	w22, w0
  46d328:	stp	x23, x24, [sp, #48]
  46d32c:	mov	x23, x1
  46d330:	mov	x24, x2
  46d334:	bl	4021e8 <memcpy@plt-0x38>
  46d338:	cmp	xzr, x20, asr #3
  46d33c:	b.eq	46d368 <_obstack_memory_used@@Base+0x10a40>  // b.none
  46d340:	asr	x20, x20, #3
  46d344:	mov	x19, #0x0                   	// #0
  46d348:	ldr	x3, [x21, x19, lsl #3]
  46d34c:	mov	x2, x24
  46d350:	add	x19, x19, #0x1
  46d354:	mov	x1, x23
  46d358:	mov	w0, w22
  46d35c:	blr	x3
  46d360:	cmp	x20, x19
  46d364:	b.ne	46d348 <_obstack_memory_used@@Base+0x10a20>  // b.any
  46d368:	ldp	x19, x20, [sp, #16]
  46d36c:	ldp	x21, x22, [sp, #32]
  46d370:	ldp	x23, x24, [sp, #48]
  46d374:	ldp	x29, x30, [sp], #64
  46d378:	ret
  46d37c:	nop
  46d380:	ret

Disassembly of section .fini:

000000000046d384 <.fini>:
  46d384:	stp	x29, x30, [sp, #-16]!
  46d388:	mov	x29, sp
  46d38c:	ldp	x29, x30, [sp], #16
  46d390:	ret
