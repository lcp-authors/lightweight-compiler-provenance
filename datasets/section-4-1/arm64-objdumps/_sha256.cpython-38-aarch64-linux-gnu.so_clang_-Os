
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha256.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e10 <.init>:
 e10:	stp	x29, x30, [sp, #-16]!
 e14:	mov	x29, sp
 e18:	bl	f80 <_Py_strhex@plt+0x10>
 e1c:	ldp	x29, x30, [sp], #16
 e20:	ret

Disassembly of section .plt:

0000000000000e30 <memcpy@plt-0x20>:
 e30:	stp	x16, x30, [sp, #-16]!
 e34:	adrp	x16, 13000 <PyInit__sha256@@Base+0x11fac>
 e38:	ldr	x17, [x16, #4088]
 e3c:	add	x16, x16, #0xff8
 e40:	br	x17
 e44:	nop
 e48:	nop
 e4c:	nop

0000000000000e50 <memcpy@plt>:
 e50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16]
 e58:	add	x16, x16, #0x0
 e5c:	br	x17

0000000000000e60 <PyBuffer_Release@plt>:
 e60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #8]
 e68:	add	x16, x16, #0x8
 e6c:	br	x17

0000000000000e70 <__cxa_finalize@plt>:
 e70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e74:	ldr	x17, [x16, #16]
 e78:	add	x16, x16, #0x10
 e7c:	br	x17

0000000000000e80 <PyBytes_FromStringAndSize@plt>:
 e80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e84:	ldr	x17, [x16, #24]
 e88:	add	x16, x16, #0x18
 e8c:	br	x17

0000000000000e90 <_Py_Dealloc@plt>:
 e90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e94:	ldr	x17, [x16, #32]
 e98:	add	x16, x16, #0x20
 e9c:	br	x17

0000000000000ea0 <_PyArg_UnpackKeywords@plt>:
 ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ea4:	ldr	x17, [x16, #40]
 ea8:	add	x16, x16, #0x28
 eac:	br	x17

0000000000000eb0 <PyErr_SetString@plt>:
 eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 eb4:	ldr	x17, [x16, #48]
 eb8:	add	x16, x16, #0x30
 ebc:	br	x17

0000000000000ec0 <memset@plt>:
 ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ec4:	ldr	x17, [x16, #56]
 ec8:	add	x16, x16, #0x38
 ecc:	br	x17

0000000000000ed0 <PyObject_Free@plt>:
 ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ed4:	ldr	x17, [x16, #64]
 ed8:	add	x16, x16, #0x40
 edc:	br	x17

0000000000000ee0 <PyType_Ready@plt>:
 ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ee4:	ldr	x17, [x16, #72]
 ee8:	add	x16, x16, #0x48
 eec:	br	x17

0000000000000ef0 <PyLong_FromLong@plt>:
 ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ef4:	ldr	x17, [x16, #80]
 ef8:	add	x16, x16, #0x50
 efc:	br	x17

0000000000000f00 <__gmon_start__@plt>:
 f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f04:	ldr	x17, [x16, #88]
 f08:	add	x16, x16, #0x58
 f0c:	br	x17

0000000000000f10 <PyErr_Occurred@plt>:
 f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f14:	ldr	x17, [x16, #96]
 f18:	add	x16, x16, #0x60
 f1c:	br	x17

0000000000000f20 <PyModule_Create2@plt>:
 f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f24:	ldr	x17, [x16, #104]
 f28:	add	x16, x16, #0x68
 f2c:	br	x17

0000000000000f30 <PyObject_GetBuffer@plt>:
 f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f34:	ldr	x17, [x16, #112]
 f38:	add	x16, x16, #0x70
 f3c:	br	x17

0000000000000f40 <_PyObject_New@plt>:
 f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f44:	ldr	x17, [x16, #120]
 f48:	add	x16, x16, #0x78
 f4c:	br	x17

0000000000000f50 <PyModule_AddObject@plt>:
 f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f54:	ldr	x17, [x16, #128]
 f58:	add	x16, x16, #0x80
 f5c:	br	x17

0000000000000f60 <PyUnicode_FromStringAndSize@plt>:
 f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f64:	ldr	x17, [x16, #136]
 f68:	add	x16, x16, #0x88
 f6c:	br	x17

0000000000000f70 <_Py_strhex@plt>:
 f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f74:	ldr	x17, [x16, #144]
 f78:	add	x16, x16, #0x90
 f7c:	br	x17

Disassembly of section .text:

0000000000000f80 <PyInit__sha256@@Base-0xd4>:
     f80:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
     f84:	ldr	x0, [x0, #4040]
     f88:	cbz	x0, f90 <_Py_strhex@plt+0x20>
     f8c:	b	f00 <__gmon_start__@plt>
     f90:	ret
     f94:	nop
     f98:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
     f9c:	add	x0, x0, #0x690
     fa0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x12fac>
     fa4:	add	x1, x1, #0x690
     fa8:	cmp	x1, x0
     fac:	b.eq	fc4 <_Py_strhex@plt+0x54>  // b.none
     fb0:	adrp	x1, 13000 <PyInit__sha256@@Base+0x11fac>
     fb4:	ldr	x1, [x1, #4008]
     fb8:	cbz	x1, fc4 <_Py_strhex@plt+0x54>
     fbc:	mov	x16, x1
     fc0:	br	x16
     fc4:	ret
     fc8:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
     fcc:	add	x0, x0, #0x690
     fd0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x12fac>
     fd4:	add	x1, x1, #0x690
     fd8:	sub	x1, x1, x0
     fdc:	lsr	x2, x1, #63
     fe0:	add	x1, x2, x1, asr #3
     fe4:	cmp	xzr, x1, asr #1
     fe8:	asr	x1, x1, #1
     fec:	b.eq	1004 <_Py_strhex@plt+0x94>  // b.none
     ff0:	adrp	x2, 13000 <PyInit__sha256@@Base+0x11fac>
     ff4:	ldr	x2, [x2, #4064]
     ff8:	cbz	x2, 1004 <_Py_strhex@plt+0x94>
     ffc:	mov	x16, x2
    1000:	br	x16
    1004:	ret
    1008:	stp	x29, x30, [sp, #-32]!
    100c:	mov	x29, sp
    1010:	str	x19, [sp, #16]
    1014:	adrp	x19, 14000 <PyInit__sha256@@Base+0x12fac>
    1018:	ldrb	w0, [x19, #1680]
    101c:	cbnz	w0, 1044 <_Py_strhex@plt+0xd4>
    1020:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
    1024:	ldr	x0, [x0, #4016]
    1028:	cbz	x0, 1038 <_Py_strhex@plt+0xc8>
    102c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    1030:	ldr	x0, [x0, #152]
    1034:	bl	e70 <__cxa_finalize@plt>
    1038:	bl	f98 <_Py_strhex@plt+0x28>
    103c:	mov	w0, #0x1                   	// #1
    1040:	strb	w0, [x19, #1680]
    1044:	ldr	x19, [sp, #16]
    1048:	ldp	x29, x30, [sp], #32
    104c:	ret
    1050:	b	fc8 <_Py_strhex@plt+0x58>

0000000000001054 <PyInit__sha256@@Base>:
    1054:	stp	x29, x30, [sp, #-48]!
    1058:	str	x21, [sp, #16]
    105c:	stp	x20, x19, [sp, #32]
    1060:	mov	x29, sp
    1064:	adrp	x21, 13000 <PyInit__sha256@@Base+0x11fac>
    1068:	ldr	x21, [x21, #4048]
    106c:	adrp	x19, 14000 <PyInit__sha256@@Base+0x12fac>
    1070:	add	x19, x19, #0xa0
    1074:	mov	x0, x19
    1078:	str	x21, [x19, #8]
    107c:	bl	ee0 <PyType_Ready@plt>
    1080:	tbnz	w0, #31, 10f8 <PyInit__sha256@@Base+0xa4>
    1084:	adrp	x20, 14000 <PyInit__sha256@@Base+0x12fac>
    1088:	add	x20, x20, #0x240
    108c:	mov	x0, x20
    1090:	str	x21, [x20, #8]
    1094:	bl	ee0 <PyType_Ready@plt>
    1098:	tbnz	w0, #31, 10f8 <PyInit__sha256@@Base+0xa4>
    109c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    10a0:	add	x0, x0, #0x3e0
    10a4:	mov	w1, #0x3f5                 	// #1013
    10a8:	bl	f20 <PyModule_Create2@plt>
    10ac:	mov	x21, x0
    10b0:	cbz	x0, 10fc <PyInit__sha256@@Base+0xa8>
    10b4:	ldr	x8, [x19]
    10b8:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    10bc:	add	x1, x1, #0x3a0
    10c0:	mov	x0, x21
    10c4:	add	x8, x8, #0x1
    10c8:	mov	x2, x19
    10cc:	str	x8, [x19]
    10d0:	bl	f50 <PyModule_AddObject@plt>
    10d4:	ldr	x8, [x20]
    10d8:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    10dc:	add	x1, x1, #0x3ab
    10e0:	mov	x0, x21
    10e4:	add	x8, x8, #0x1
    10e8:	mov	x2, x20
    10ec:	str	x8, [x20]
    10f0:	bl	f50 <PyModule_AddObject@plt>
    10f4:	b	10fc <PyInit__sha256@@Base+0xa8>
    10f8:	mov	x21, xzr
    10fc:	mov	x0, x21
    1100:	ldp	x20, x19, [sp, #32]
    1104:	ldr	x21, [sp, #16]
    1108:	ldp	x29, x30, [sp], #48
    110c:	ret
    1110:	b	ed0 <PyObject_Free@plt>
    1114:	stp	x29, x30, [sp, #-32]!
    1118:	str	x19, [sp, #16]
    111c:	mov	x29, sp
    1120:	ldr	x8, [x0, #8]
    1124:	adrp	x9, 14000 <PyInit__sha256@@Base+0x12fac>
    1128:	add	x9, x9, #0x240
    112c:	mov	x19, x0
    1130:	cmp	x8, x9
    1134:	b.eq	1144 <PyInit__sha256@@Base+0xf0>  // b.none
    1138:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    113c:	add	x0, x0, #0xa0
    1140:	b	114c <PyInit__sha256@@Base+0xf8>
    1144:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    1148:	add	x0, x0, #0x240
    114c:	bl	f40 <_PyObject_New@plt>
    1150:	cbz	x0, 118c <PyInit__sha256@@Base+0x138>
    1154:	ldr	x8, [x19, #120]
    1158:	str	x8, [x0, #120]
    115c:	ldr	x8, [x19, #48]
    1160:	str	x8, [x0, #48]
    1164:	ldp	q1, q0, [x19, #16]
    1168:	stp	q1, q0, [x0, #16]
    116c:	ldur	q0, [x19, #104]
    1170:	ldur	q1, [x19, #88]
    1174:	ldur	q2, [x19, #72]
    1178:	ldur	q3, [x19, #56]
    117c:	stur	q0, [x0, #104]
    1180:	stur	q1, [x0, #88]
    1184:	stur	q2, [x0, #72]
    1188:	stur	q3, [x0, #56]
    118c:	ldr	x19, [sp, #16]
    1190:	ldp	x29, x30, [sp], #32
    1194:	ret
    1198:	sub	sp, sp, #0xc0
    119c:	stp	x29, x30, [sp, #160]
    11a0:	str	x19, [sp, #176]
    11a4:	add	x29, sp, #0xa0
    11a8:	ldr	x8, [x0, #120]
    11ac:	mov	x19, x0
    11b0:	mov	x1, sp
    11b4:	str	x8, [sp, #120]
    11b8:	ldr	x8, [x0, #48]
    11bc:	str	x8, [sp, #48]
    11c0:	ldp	q1, q0, [x0, #16]
    11c4:	stp	q1, q0, [sp, #16]
    11c8:	ldur	q0, [x0, #104]
    11cc:	ldur	q1, [x0, #88]
    11d0:	ldur	q2, [x0, #72]
    11d4:	ldur	q3, [x0, #56]
    11d8:	sub	x0, x29, #0x20
    11dc:	stur	q0, [sp, #104]
    11e0:	stur	q1, [sp, #88]
    11e4:	stur	q2, [sp, #72]
    11e8:	stur	q3, [sp, #56]
    11ec:	bl	136c <PyInit__sha256@@Base+0x318>
    11f0:	ldrsw	x1, [x19, #124]
    11f4:	sub	x0, x29, #0x20
    11f8:	bl	e80 <PyBytes_FromStringAndSize@plt>
    11fc:	ldr	x19, [sp, #176]
    1200:	ldp	x29, x30, [sp, #160]
    1204:	add	sp, sp, #0xc0
    1208:	ret
    120c:	sub	sp, sp, #0xc0
    1210:	stp	x29, x30, [sp, #160]
    1214:	str	x19, [sp, #176]
    1218:	add	x29, sp, #0xa0
    121c:	ldr	x8, [x0, #120]
    1220:	mov	x19, x0
    1224:	mov	x1, sp
    1228:	str	x8, [sp, #120]
    122c:	ldr	x8, [x0, #48]
    1230:	str	x8, [sp, #48]
    1234:	ldp	q1, q0, [x0, #16]
    1238:	stp	q1, q0, [sp, #16]
    123c:	ldur	q0, [x0, #104]
    1240:	ldur	q1, [x0, #88]
    1244:	ldur	q2, [x0, #72]
    1248:	ldur	q3, [x0, #56]
    124c:	sub	x0, x29, #0x20
    1250:	stur	q0, [sp, #104]
    1254:	stur	q1, [sp, #88]
    1258:	stur	q2, [sp, #72]
    125c:	stur	q3, [sp, #56]
    1260:	bl	136c <PyInit__sha256@@Base+0x318>
    1264:	ldrsw	x1, [x19, #124]
    1268:	sub	x0, x29, #0x20
    126c:	bl	f70 <_Py_strhex@plt>
    1270:	ldr	x19, [sp, #176]
    1274:	ldp	x29, x30, [sp, #160]
    1278:	add	sp, sp, #0xc0
    127c:	ret
    1280:	sub	sp, sp, #0x70
    1284:	stp	x29, x30, [sp, #80]
    1288:	str	x19, [sp, #96]
    128c:	add	x29, sp, #0x50
    1290:	ldr	x9, [x1, #8]
    1294:	ldrb	w10, [x9, #171]
    1298:	tbnz	w10, #4, 12fc <PyInit__sha256@@Base+0x2a8>
    129c:	ldr	x9, [x9, #160]
    12a0:	cbz	x9, 1310 <PyInit__sha256@@Base+0x2bc>
    12a4:	ldr	x9, [x9]
    12a8:	cbz	x9, 1310 <PyInit__sha256@@Base+0x2bc>
    12ac:	mov	x8, x1
    12b0:	mov	x19, x0
    12b4:	mov	x1, sp
    12b8:	mov	x0, x8
    12bc:	mov	w2, wzr
    12c0:	bl	f30 <PyObject_GetBuffer@plt>
    12c4:	cmn	w0, #0x1
    12c8:	b.eq	1328 <PyInit__sha256@@Base+0x2d4>  // b.none
    12cc:	ldr	w8, [sp, #36]
    12d0:	cmp	w8, #0x2
    12d4:	b.lt	133c <PyInit__sha256@@Base+0x2e8>  // b.tstop
    12d8:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    12dc:	ldr	x8, [x8, #4024]
    12e0:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    12e4:	add	x1, x1, #0x434
    12e8:	ldr	x0, [x8]
    12ec:	bl	eb0 <PyErr_SetString@plt>
    12f0:	mov	x0, sp
    12f4:	bl	e60 <PyBuffer_Release@plt>
    12f8:	b	1328 <PyInit__sha256@@Base+0x2d4>
    12fc:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    1300:	ldr	x8, [x8, #4032]
    1304:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    1308:	add	x1, x1, #0x3db
    130c:	b	1320 <PyInit__sha256@@Base+0x2cc>
    1310:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    1314:	ldr	x8, [x8, #4032]
    1318:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    131c:	add	x1, x1, #0x40a
    1320:	ldr	x0, [x8]
    1324:	bl	eb0 <PyErr_SetString@plt>
    1328:	mov	x0, xzr
    132c:	ldr	x19, [sp, #96]
    1330:	ldp	x29, x30, [sp, #80]
    1334:	add	sp, sp, #0x70
    1338:	ret
    133c:	ldr	x1, [sp]
    1340:	ldr	x2, [sp, #16]
    1344:	mov	x0, x19
    1348:	bl	2ed4 <PyInit__sha256@@Base+0x1e80>
    134c:	mov	x0, sp
    1350:	bl	e60 <PyBuffer_Release@plt>
    1354:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
    1358:	ldr	x0, [x0, #4056]
    135c:	ldr	x8, [x0]
    1360:	add	x8, x8, #0x1
    1364:	str	x8, [x0]
    1368:	b	132c <PyInit__sha256@@Base+0x2d8>
    136c:	stp	x29, x30, [sp, #-48]!
    1370:	stp	x22, x21, [sp, #16]
    1374:	stp	x20, x19, [sp, #32]
    1378:	mov	x29, sp
    137c:	ldp	w21, w22, [x1, #48]
    1380:	add	x9, x1, #0x38
    1384:	mov	x20, x1
    1388:	mov	x19, x0
    138c:	ubfx	x8, x21, #3, #6
    1390:	add	w11, w8, #0x1
    1394:	mov	w10, #0x80                  	// #128
    1398:	cmp	w8, #0x38
    139c:	add	x0, x9, x11
    13a0:	strb	w10, [x9, x8]
    13a4:	b.cc	13d4 <PyInit__sha256@@Base+0x380>  // b.lo, b.ul, b.last
    13a8:	eor	w2, w8, #0x3f
    13ac:	mov	w1, wzr
    13b0:	bl	ec0 <memset@plt>
    13b4:	mov	x0, x20
    13b8:	bl	1558 <PyInit__sha256@@Base+0x504>
    13bc:	movi	v0.2d, #0x0
    13c0:	str	xzr, [x20, #104]
    13c4:	stur	q0, [x20, #88]
    13c8:	stur	q0, [x20, #72]
    13cc:	stur	q0, [x20, #56]
    13d0:	b	13e8 <PyInit__sha256@@Base+0x394>
    13d4:	mov	w9, #0x37                  	// #55
    13d8:	sub	w8, w9, w8
    13dc:	sxtw	x2, w8
    13e0:	mov	w1, wzr
    13e4:	bl	ec0 <memset@plt>
    13e8:	lsr	w8, w22, #24
    13ec:	lsr	w9, w22, #16
    13f0:	lsr	w10, w22, #8
    13f4:	lsr	w11, w21, #24
    13f8:	lsr	w12, w21, #16
    13fc:	lsr	w13, w21, #8
    1400:	mov	x0, x20
    1404:	strb	w22, [x20, #115]
    1408:	strb	w8, [x20, #112]
    140c:	strb	w9, [x20, #113]
    1410:	strb	w10, [x20, #114]
    1414:	strb	w11, [x20, #116]
    1418:	strb	w12, [x20, #117]
    141c:	strb	w13, [x20, #118]
    1420:	strb	w21, [x20, #119]
    1424:	bl	1558 <PyInit__sha256@@Base+0x504>
    1428:	ldrb	w8, [x20, #19]
    142c:	strb	w8, [x19]
    1430:	ldrh	w8, [x20, #18]
    1434:	strb	w8, [x19, #1]
    1438:	ldr	w8, [x20, #16]
    143c:	lsr	w8, w8, #8
    1440:	strb	w8, [x19, #2]
    1444:	ldr	w8, [x20, #16]
    1448:	strb	w8, [x19, #3]
    144c:	ldrb	w8, [x20, #23]
    1450:	strb	w8, [x19, #4]
    1454:	ldrh	w8, [x20, #22]
    1458:	strb	w8, [x19, #5]
    145c:	ldr	w8, [x20, #20]
    1460:	lsr	w8, w8, #8
    1464:	strb	w8, [x19, #6]
    1468:	ldr	w8, [x20, #20]
    146c:	strb	w8, [x19, #7]
    1470:	ldrb	w8, [x20, #27]
    1474:	strb	w8, [x19, #8]
    1478:	ldrh	w8, [x20, #26]
    147c:	strb	w8, [x19, #9]
    1480:	ldr	w8, [x20, #24]
    1484:	lsr	w8, w8, #8
    1488:	strb	w8, [x19, #10]
    148c:	ldr	w8, [x20, #24]
    1490:	strb	w8, [x19, #11]
    1494:	ldrb	w8, [x20, #31]
    1498:	strb	w8, [x19, #12]
    149c:	ldrh	w8, [x20, #30]
    14a0:	strb	w8, [x19, #13]
    14a4:	ldr	w8, [x20, #28]
    14a8:	lsr	w8, w8, #8
    14ac:	strb	w8, [x19, #14]
    14b0:	ldr	w8, [x20, #28]
    14b4:	strb	w8, [x19, #15]
    14b8:	ldrb	w8, [x20, #35]
    14bc:	strb	w8, [x19, #16]
    14c0:	ldrh	w8, [x20, #34]
    14c4:	strb	w8, [x19, #17]
    14c8:	ldr	w8, [x20, #32]
    14cc:	lsr	w8, w8, #8
    14d0:	strb	w8, [x19, #18]
    14d4:	ldr	w8, [x20, #32]
    14d8:	strb	w8, [x19, #19]
    14dc:	ldrb	w8, [x20, #39]
    14e0:	strb	w8, [x19, #20]
    14e4:	ldrh	w8, [x20, #38]
    14e8:	strb	w8, [x19, #21]
    14ec:	ldr	w8, [x20, #36]
    14f0:	lsr	w8, w8, #8
    14f4:	strb	w8, [x19, #22]
    14f8:	ldr	w8, [x20, #36]
    14fc:	strb	w8, [x19, #23]
    1500:	ldrb	w8, [x20, #43]
    1504:	strb	w8, [x19, #24]
    1508:	ldrh	w8, [x20, #42]
    150c:	strb	w8, [x19, #25]
    1510:	ldr	w8, [x20, #40]
    1514:	lsr	w8, w8, #8
    1518:	strb	w8, [x19, #26]
    151c:	ldr	w8, [x20, #40]
    1520:	strb	w8, [x19, #27]
    1524:	ldrb	w8, [x20, #47]
    1528:	strb	w8, [x19, #28]
    152c:	ldrh	w8, [x20, #46]
    1530:	strb	w8, [x19, #29]
    1534:	ldr	w8, [x20, #44]
    1538:	lsr	w8, w8, #8
    153c:	strb	w8, [x19, #30]
    1540:	ldr	w8, [x20, #44]
    1544:	strb	w8, [x19, #31]
    1548:	ldp	x20, x19, [sp, #32]
    154c:	ldp	x22, x21, [sp, #16]
    1550:	ldp	x29, x30, [sp], #48
    1554:	ret
    1558:	sub	sp, sp, #0x130
    155c:	str	x29, [sp, #288]
    1560:	ldur	q0, [x0, #104]
    1564:	ldur	q1, [x0, #88]
    1568:	ldur	q2, [x0, #72]
    156c:	ldur	q3, [x0, #56]
    1570:	mov	x8, xzr
    1574:	mov	x9, sp
    1578:	stp	q1, q0, [sp, #32]
    157c:	stp	q3, q2, [sp]
    1580:	ldr	d0, [x9, x8]
    1584:	rev32	v0.8b, v0.8b
    1588:	str	d0, [x9, x8]
    158c:	add	x8, x8, #0x8
    1590:	cmp	x8, #0x40
    1594:	b.ne	1580 <PyInit__sha256@@Base+0x52c>  // b.any
    1598:	ldr	w10, [sp]
    159c:	mov	x9, sp
    15a0:	add	x11, x9, x8
    15a4:	ldur	w13, [x11, #-28]
    15a8:	ldur	w12, [x11, #-8]
    15ac:	add	x8, x8, #0x4
    15b0:	cmp	x8, #0x100
    15b4:	add	w10, w10, w13
    15b8:	ldur	w13, [x11, #-60]
    15bc:	ror	w14, w12, #19
    15c0:	eor	w14, w14, w12, lsr #10
    15c4:	eor	w12, w14, w12, ror #17
    15c8:	add	w10, w10, w12
    15cc:	ror	w12, w13, #18
    15d0:	eor	w12, w12, w13, lsr #3
    15d4:	eor	w12, w12, w13, ror #7
    15d8:	add	w10, w10, w12
    15dc:	str	w10, [x11]
    15e0:	mov	w10, w13
    15e4:	b.ne	15a0 <PyInit__sha256@@Base+0x54c>  // b.any
    15e8:	ldp	q1, q0, [x0, #16]
    15ec:	ldp	w10, w11, [sp]
    15f0:	mov	x8, xzr
    15f4:	stp	q1, q0, [sp, #256]
    15f8:	ldr	w13, [sp, #284]
    15fc:	ldr	w14, [sp, #280]
    1600:	ldr	w15, [sp, #272]
    1604:	ldr	w16, [sp, #276]
    1608:	ldr	w9, [sp, #256]
    160c:	ldr	w12, [sp, #260]
    1610:	ldr	w17, [sp, #264]
    1614:	bic	w1, w14, w15
    1618:	add	w10, w13, w10
    161c:	and	w13, w16, w15
    1620:	add	w14, w14, w11
    1624:	orr	w11, w12, w9
    1628:	orr	w13, w13, w1
    162c:	and	w1, w12, w9
    1630:	and	w11, w11, w17
    1634:	orr	w11, w11, w1
    1638:	ror	w1, w15, #6
    163c:	eor	w1, w1, w15, ror #11
    1640:	eor	w1, w1, w15, ror #25
    1644:	add	w10, w10, w1
    1648:	ror	w1, w9, #2
    164c:	eor	w1, w1, w9, ror #13
    1650:	eor	w1, w1, w9, ror #22
    1654:	add	w11, w1, w11
    1658:	mov	w1, #0x2f98                	// #12184
    165c:	ldr	w18, [sp, #268]
    1660:	add	w10, w10, w13
    1664:	movk	w1, #0x428a, lsl #16
    1668:	add	w10, w10, w1
    166c:	ldp	w13, w1, [sp, #8]
    1670:	add	w18, w10, w18
    1674:	add	w11, w11, w10
    1678:	bic	w10, w16, w18
    167c:	add	w13, w16, w13
    1680:	and	w16, w15, w18
    1684:	orr	w10, w16, w10
    1688:	orr	w16, w11, w9
    168c:	add	w10, w14, w10
    1690:	and	w14, w11, w9
    1694:	and	w16, w16, w12
    1698:	orr	w14, w16, w14
    169c:	ror	w16, w18, #6
    16a0:	eor	w16, w16, w18, ror #11
    16a4:	eor	w16, w16, w18, ror #25
    16a8:	add	w10, w10, w16
    16ac:	ror	w16, w11, #2
    16b0:	eor	w16, w16, w11, ror #13
    16b4:	eor	w16, w16, w11, ror #22
    16b8:	add	w14, w16, w14
    16bc:	mov	w16, #0x4491                	// #17553
    16c0:	movk	w16, #0x7137, lsl #16
    16c4:	add	w10, w10, w16
    16c8:	add	w17, w10, w17
    16cc:	add	w1, w15, w1
    16d0:	add	w10, w14, w10
    16d4:	bic	w14, w15, w17
    16d8:	and	w15, w18, w17
    16dc:	orr	w14, w15, w14
    16e0:	orr	w15, w10, w11
    16e4:	add	w13, w13, w14
    16e8:	and	w14, w10, w11
    16ec:	and	w15, w15, w9
    16f0:	orr	w14, w15, w14
    16f4:	ror	w15, w17, #6
    16f8:	eor	w15, w15, w17, ror #11
    16fc:	eor	w15, w15, w17, ror #25
    1700:	add	w13, w13, w15
    1704:	ror	w15, w10, #2
    1708:	mov	w16, #0xfbcf                	// #64463
    170c:	eor	w15, w15, w10, ror #13
    1710:	movk	w16, #0xb5c0, lsl #16
    1714:	eor	w15, w15, w10, ror #22
    1718:	add	w14, w15, w14
    171c:	add	w13, w13, w16
    1720:	ldp	w15, w16, [sp, #16]
    1724:	add	w2, w13, w12
    1728:	add	w12, w14, w13
    172c:	bic	w13, w18, w2
    1730:	and	w14, w17, w2
    1734:	orr	w13, w14, w13
    1738:	orr	w14, w12, w10
    173c:	str	w18, [sp, #268]
    1740:	add	w15, w18, w15
    1744:	and	w18, w12, w10
    1748:	and	w14, w14, w11
    174c:	orr	w14, w14, w18
    1750:	ror	w18, w2, #6
    1754:	eor	w18, w18, w2, ror #11
    1758:	add	w13, w1, w13
    175c:	eor	w18, w18, w2, ror #25
    1760:	add	w13, w13, w18
    1764:	ror	w18, w12, #2
    1768:	eor	w18, w18, w12, ror #13
    176c:	eor	w18, w18, w12, ror #22
    1770:	add	w14, w18, w14
    1774:	mov	w18, #0xdba5                	// #56229
    1778:	movk	w18, #0xe9b5, lsl #16
    177c:	add	w13, w13, w18
    1780:	add	w1, w13, w9
    1784:	add	w9, w14, w13
    1788:	bic	w13, w17, w1
    178c:	and	w14, w2, w1
    1790:	orr	w13, w14, w13
    1794:	orr	w14, w9, w12
    1798:	add	w13, w15, w13
    179c:	and	w15, w9, w12
    17a0:	and	w14, w14, w10
    17a4:	orr	w14, w14, w15
    17a8:	ror	w15, w1, #6
    17ac:	eor	w15, w15, w1, ror #11
    17b0:	eor	w15, w15, w1, ror #25
    17b4:	mov	w18, #0xc25b                	// #49755
    17b8:	add	w13, w13, w15
    17bc:	ror	w15, w9, #2
    17c0:	movk	w18, #0x3956, lsl #16
    17c4:	eor	w15, w15, w9, ror #13
    17c8:	eor	w15, w15, w9, ror #22
    17cc:	add	w13, w13, w18
    17d0:	add	w14, w15, w14
    17d4:	add	w18, w13, w11
    17d8:	str	w11, [sp, #284]
    17dc:	add	w11, w14, w13
    17e0:	bic	w13, w2, w18
    17e4:	and	w14, w1, w18
    17e8:	add	w16, w17, w16
    17ec:	orr	w13, w14, w13
    17f0:	orr	w14, w11, w9
    17f4:	add	w13, w16, w13
    17f8:	and	w16, w11, w9
    17fc:	and	w14, w14, w12
    1800:	orr	w14, w14, w16
    1804:	ror	w16, w18, #6
    1808:	eor	w16, w16, w18, ror #11
    180c:	eor	w16, w16, w18, ror #25
    1810:	add	w13, w13, w16
    1814:	ror	w16, w11, #2
    1818:	eor	w16, w16, w11, ror #13
    181c:	str	w17, [sp, #264]
    1820:	ldp	w15, w17, [sp, #24]
    1824:	eor	w16, w16, w11, ror #22
    1828:	add	w14, w16, w14
    182c:	mov	w16, #0x11f1                	// #4593
    1830:	movk	w16, #0x59f1, lsl #16
    1834:	add	w13, w13, w16
    1838:	str	w2, [sp, #260]
    183c:	add	w15, w15, w2
    1840:	add	w2, w13, w10
    1844:	str	w10, [sp, #280]
    1848:	add	w10, w14, w13
    184c:	bic	w13, w1, w2
    1850:	and	w14, w18, w2
    1854:	orr	w13, w14, w13
    1858:	orr	w14, w10, w11
    185c:	add	w13, w15, w13
    1860:	and	w15, w10, w11
    1864:	and	w14, w14, w9
    1868:	orr	w14, w14, w15
    186c:	ror	w15, w2, #6
    1870:	eor	w15, w15, w2, ror #11
    1874:	eor	w15, w15, w2, ror #25
    1878:	mov	w16, #0x82a4                	// #33444
    187c:	add	w13, w13, w15
    1880:	ror	w15, w10, #2
    1884:	movk	w16, #0x923f, lsl #16
    1888:	eor	w15, w15, w10, ror #13
    188c:	eor	w15, w15, w10, ror #22
    1890:	add	w13, w13, w16
    1894:	str	w1, [sp, #256]
    1898:	add	w17, w17, w1
    189c:	add	w14, w15, w14
    18a0:	add	w1, w13, w12
    18a4:	str	w12, [sp, #276]
    18a8:	add	w12, w14, w13
    18ac:	bic	w13, w18, w1
    18b0:	and	w14, w2, w1
    18b4:	orr	w13, w14, w13
    18b8:	orr	w14, w12, w10
    18bc:	add	w13, w17, w13
    18c0:	and	w17, w12, w10
    18c4:	and	w14, w14, w11
    18c8:	orr	w14, w14, w17
    18cc:	ror	w17, w1, #6
    18d0:	eor	w17, w17, w1, ror #11
    18d4:	eor	w17, w17, w1, ror #25
    18d8:	add	w13, w13, w17
    18dc:	ror	w17, w12, #2
    18e0:	eor	w17, w17, w12, ror #13
    18e4:	ldp	w15, w16, [sp, #32]
    18e8:	eor	w17, w17, w12, ror #22
    18ec:	add	w14, w17, w14
    18f0:	mov	w17, #0x5ed5                	// #24277
    18f4:	movk	w17, #0xab1c, lsl #16
    18f8:	add	w13, w13, w17
    18fc:	str	w18, [sp, #284]
    1900:	add	w15, w15, w18
    1904:	add	w18, w13, w9
    1908:	str	w9, [sp, #272]
    190c:	add	w9, w14, w13
    1910:	bic	w13, w2, w18
    1914:	and	w14, w1, w18
    1918:	orr	w13, w14, w13
    191c:	orr	w14, w9, w12
    1920:	add	w13, w15, w13
    1924:	and	w15, w9, w12
    1928:	and	w14, w14, w10
    192c:	orr	w14, w14, w15
    1930:	ror	w15, w18, #6
    1934:	eor	w15, w15, w18, ror #11
    1938:	eor	w15, w15, w18, ror #25
    193c:	mov	w17, #0xaa98                	// #43672
    1940:	add	w13, w13, w15
    1944:	ror	w15, w9, #2
    1948:	movk	w17, #0xd807, lsl #16
    194c:	eor	w15, w15, w9, ror #13
    1950:	eor	w15, w15, w9, ror #22
    1954:	add	w13, w13, w17
    1958:	str	w2, [sp, #280]
    195c:	add	w16, w16, w2
    1960:	add	w14, w15, w14
    1964:	add	w2, w13, w11
    1968:	str	w11, [sp, #268]
    196c:	add	w11, w14, w13
    1970:	bic	w13, w1, w2
    1974:	and	w14, w18, w2
    1978:	orr	w13, w14, w13
    197c:	orr	w14, w11, w9
    1980:	add	w13, w16, w13
    1984:	and	w16, w11, w9
    1988:	and	w14, w14, w12
    198c:	orr	w14, w14, w16
    1990:	ror	w16, w2, #6
    1994:	eor	w16, w16, w2, ror #11
    1998:	eor	w16, w16, w2, ror #25
    199c:	add	w13, w13, w16
    19a0:	ror	w16, w11, #2
    19a4:	eor	w16, w16, w11, ror #13
    19a8:	ldp	w15, w17, [sp, #40]
    19ac:	eor	w16, w16, w11, ror #22
    19b0:	add	w14, w16, w14
    19b4:	mov	w16, #0x5b01                	// #23297
    19b8:	movk	w16, #0x1283, lsl #16
    19bc:	add	w13, w13, w16
    19c0:	str	w1, [sp, #276]
    19c4:	add	w15, w15, w1
    19c8:	add	w1, w13, w10
    19cc:	str	w10, [sp, #264]
    19d0:	add	w10, w14, w13
    19d4:	bic	w13, w18, w1
    19d8:	and	w14, w2, w1
    19dc:	orr	w13, w14, w13
    19e0:	orr	w14, w10, w11
    19e4:	add	w13, w15, w13
    19e8:	and	w15, w10, w11
    19ec:	and	w14, w14, w9
    19f0:	orr	w14, w14, w15
    19f4:	ror	w15, w1, #6
    19f8:	eor	w15, w15, w1, ror #11
    19fc:	eor	w15, w15, w1, ror #25
    1a00:	mov	w16, #0x85be                	// #34238
    1a04:	add	w13, w13, w15
    1a08:	ror	w15, w10, #2
    1a0c:	movk	w16, #0x2431, lsl #16
    1a10:	eor	w15, w15, w10, ror #13
    1a14:	eor	w15, w15, w10, ror #22
    1a18:	add	w13, w13, w16
    1a1c:	str	w18, [sp, #272]
    1a20:	add	w17, w17, w18
    1a24:	add	w14, w15, w14
    1a28:	add	w18, w13, w12
    1a2c:	str	w12, [sp, #260]
    1a30:	add	w12, w14, w13
    1a34:	bic	w13, w2, w18
    1a38:	and	w14, w1, w18
    1a3c:	orr	w13, w14, w13
    1a40:	orr	w14, w12, w10
    1a44:	add	w13, w17, w13
    1a48:	and	w17, w12, w10
    1a4c:	and	w14, w14, w11
    1a50:	orr	w14, w14, w17
    1a54:	ror	w17, w18, #6
    1a58:	eor	w17, w17, w18, ror #11
    1a5c:	eor	w17, w17, w18, ror #25
    1a60:	add	w13, w13, w17
    1a64:	ror	w17, w12, #2
    1a68:	eor	w17, w17, w12, ror #13
    1a6c:	ldp	w15, w16, [sp, #48]
    1a70:	eor	w17, w17, w12, ror #22
    1a74:	add	w14, w17, w14
    1a78:	mov	w17, #0x7dc3                	// #32195
    1a7c:	movk	w17, #0x550c, lsl #16
    1a80:	add	w13, w13, w17
    1a84:	str	w2, [sp, #268]
    1a88:	add	w15, w15, w2
    1a8c:	add	w2, w13, w9
    1a90:	str	w9, [sp, #256]
    1a94:	add	w9, w14, w13
    1a98:	bic	w13, w1, w2
    1a9c:	and	w14, w18, w2
    1aa0:	orr	w13, w14, w13
    1aa4:	orr	w14, w9, w12
    1aa8:	add	w13, w15, w13
    1aac:	and	w15, w9, w12
    1ab0:	and	w14, w14, w10
    1ab4:	orr	w14, w14, w15
    1ab8:	ror	w15, w2, #6
    1abc:	eor	w15, w15, w2, ror #11
    1ac0:	eor	w15, w15, w2, ror #25
    1ac4:	mov	w17, #0x5d74                	// #23924
    1ac8:	add	w13, w13, w15
    1acc:	ror	w15, w9, #2
    1ad0:	movk	w17, #0x72be, lsl #16
    1ad4:	eor	w15, w15, w9, ror #13
    1ad8:	eor	w15, w15, w9, ror #22
    1adc:	add	w13, w13, w17
    1ae0:	str	w1, [sp, #264]
    1ae4:	add	w16, w16, w1
    1ae8:	add	w14, w15, w14
    1aec:	add	w1, w13, w11
    1af0:	str	w11, [sp, #284]
    1af4:	add	w11, w14, w13
    1af8:	bic	w13, w18, w1
    1afc:	and	w14, w2, w1
    1b00:	orr	w13, w14, w13
    1b04:	orr	w14, w11, w9
    1b08:	add	w13, w16, w13
    1b0c:	and	w16, w11, w9
    1b10:	and	w14, w14, w12
    1b14:	orr	w14, w14, w16
    1b18:	ror	w16, w1, #6
    1b1c:	eor	w16, w16, w1, ror #11
    1b20:	eor	w16, w16, w1, ror #25
    1b24:	add	w13, w13, w16
    1b28:	ror	w16, w11, #2
    1b2c:	eor	w16, w16, w11, ror #13
    1b30:	ldp	w15, w17, [sp, #56]
    1b34:	eor	w16, w16, w11, ror #22
    1b38:	add	w14, w16, w14
    1b3c:	mov	w16, #0xb1fe                	// #45566
    1b40:	movk	w16, #0x80de, lsl #16
    1b44:	add	w13, w13, w16
    1b48:	str	w18, [sp, #260]
    1b4c:	add	w15, w15, w18
    1b50:	add	w18, w13, w10
    1b54:	str	w10, [sp, #280]
    1b58:	add	w10, w14, w13
    1b5c:	bic	w13, w2, w18
    1b60:	and	w14, w1, w18
    1b64:	orr	w13, w14, w13
    1b68:	orr	w14, w10, w11
    1b6c:	add	w13, w15, w13
    1b70:	and	w15, w10, w11
    1b74:	and	w14, w14, w9
    1b78:	orr	w14, w14, w15
    1b7c:	ror	w15, w18, #6
    1b80:	eor	w15, w15, w18, ror #11
    1b84:	eor	w15, w15, w18, ror #25
    1b88:	mov	w16, #0x6a7                 	// #1703
    1b8c:	add	w13, w13, w15
    1b90:	ror	w15, w10, #2
    1b94:	movk	w16, #0x9bdc, lsl #16
    1b98:	eor	w15, w15, w10, ror #13
    1b9c:	eor	w15, w15, w10, ror #22
    1ba0:	add	w13, w13, w16
    1ba4:	str	w2, [sp, #256]
    1ba8:	add	w17, w17, w2
    1bac:	add	w14, w15, w14
    1bb0:	add	w2, w13, w12
    1bb4:	str	w12, [sp, #276]
    1bb8:	add	w12, w14, w13
    1bbc:	bic	w13, w1, w2
    1bc0:	and	w14, w18, w2
    1bc4:	orr	w13, w14, w13
    1bc8:	orr	w14, w12, w10
    1bcc:	add	w13, w17, w13
    1bd0:	and	w17, w12, w10
    1bd4:	and	w14, w14, w11
    1bd8:	orr	w14, w14, w17
    1bdc:	ror	w17, w2, #6
    1be0:	eor	w17, w17, w2, ror #11
    1be4:	eor	w17, w17, w2, ror #25
    1be8:	add	w13, w13, w17
    1bec:	ror	w17, w12, #2
    1bf0:	eor	w17, w17, w12, ror #13
    1bf4:	ldp	w15, w16, [sp, #64]
    1bf8:	eor	w17, w17, w12, ror #22
    1bfc:	add	w14, w17, w14
    1c00:	mov	w17, #0xf174                	// #61812
    1c04:	movk	w17, #0xc19b, lsl #16
    1c08:	add	w13, w13, w17
    1c0c:	str	w1, [sp, #284]
    1c10:	add	w15, w15, w1
    1c14:	add	w1, w13, w9
    1c18:	str	w9, [sp, #272]
    1c1c:	add	w9, w14, w13
    1c20:	bic	w13, w18, w1
    1c24:	and	w14, w2, w1
    1c28:	orr	w13, w14, w13
    1c2c:	orr	w14, w9, w12
    1c30:	add	w13, w15, w13
    1c34:	and	w15, w9, w12
    1c38:	and	w14, w14, w10
    1c3c:	orr	w14, w14, w15
    1c40:	ror	w15, w1, #6
    1c44:	eor	w15, w15, w1, ror #11
    1c48:	eor	w15, w15, w1, ror #25
    1c4c:	mov	w17, #0x69c1                	// #27073
    1c50:	add	w13, w13, w15
    1c54:	ror	w15, w9, #2
    1c58:	movk	w17, #0xe49b, lsl #16
    1c5c:	eor	w15, w15, w9, ror #13
    1c60:	eor	w15, w15, w9, ror #22
    1c64:	add	w13, w13, w17
    1c68:	str	w18, [sp, #280]
    1c6c:	add	w16, w16, w18
    1c70:	add	w14, w15, w14
    1c74:	add	w18, w13, w11
    1c78:	str	w11, [sp, #268]
    1c7c:	add	w11, w14, w13
    1c80:	bic	w13, w2, w18
    1c84:	and	w14, w1, w18
    1c88:	orr	w13, w14, w13
    1c8c:	orr	w14, w11, w9
    1c90:	add	w13, w16, w13
    1c94:	and	w16, w11, w9
    1c98:	and	w14, w14, w12
    1c9c:	orr	w14, w14, w16
    1ca0:	ror	w16, w18, #6
    1ca4:	eor	w16, w16, w18, ror #11
    1ca8:	eor	w16, w16, w18, ror #25
    1cac:	add	w13, w13, w16
    1cb0:	ror	w16, w11, #2
    1cb4:	eor	w16, w16, w11, ror #13
    1cb8:	ldp	w15, w17, [sp, #72]
    1cbc:	eor	w16, w16, w11, ror #22
    1cc0:	add	w14, w16, w14
    1cc4:	mov	w16, #0x4786                	// #18310
    1cc8:	movk	w16, #0xefbe, lsl #16
    1ccc:	add	w13, w13, w16
    1cd0:	str	w2, [sp, #276]
    1cd4:	add	w15, w15, w2
    1cd8:	add	w2, w13, w10
    1cdc:	str	w10, [sp, #264]
    1ce0:	add	w10, w14, w13
    1ce4:	bic	w13, w1, w2
    1ce8:	and	w14, w18, w2
    1cec:	orr	w13, w14, w13
    1cf0:	orr	w14, w10, w11
    1cf4:	add	w13, w15, w13
    1cf8:	and	w15, w10, w11
    1cfc:	and	w14, w14, w9
    1d00:	orr	w14, w14, w15
    1d04:	ror	w15, w2, #6
    1d08:	eor	w15, w15, w2, ror #11
    1d0c:	eor	w15, w15, w2, ror #25
    1d10:	mov	w16, #0x9dc6                	// #40390
    1d14:	add	w13, w13, w15
    1d18:	ror	w15, w10, #2
    1d1c:	movk	w16, #0xfc1, lsl #16
    1d20:	eor	w15, w15, w10, ror #13
    1d24:	eor	w15, w15, w10, ror #22
    1d28:	add	w13, w13, w16
    1d2c:	str	w1, [sp, #272]
    1d30:	add	w17, w17, w1
    1d34:	add	w14, w15, w14
    1d38:	add	w1, w13, w12
    1d3c:	str	w12, [sp, #260]
    1d40:	add	w12, w14, w13
    1d44:	bic	w13, w18, w1
    1d48:	and	w14, w2, w1
    1d4c:	orr	w13, w14, w13
    1d50:	orr	w14, w12, w10
    1d54:	add	w13, w17, w13
    1d58:	and	w17, w12, w10
    1d5c:	and	w14, w14, w11
    1d60:	orr	w14, w14, w17
    1d64:	ror	w17, w1, #6
    1d68:	eor	w17, w17, w1, ror #11
    1d6c:	eor	w17, w17, w1, ror #25
    1d70:	add	w13, w13, w17
    1d74:	ror	w17, w12, #2
    1d78:	eor	w17, w17, w12, ror #13
    1d7c:	ldp	w15, w16, [sp, #80]
    1d80:	eor	w17, w17, w12, ror #22
    1d84:	add	w14, w17, w14
    1d88:	mov	w17, #0xa1cc                	// #41420
    1d8c:	movk	w17, #0x240c, lsl #16
    1d90:	add	w13, w13, w17
    1d94:	str	w18, [sp, #268]
    1d98:	add	w15, w15, w18
    1d9c:	add	w18, w13, w9
    1da0:	str	w9, [sp, #256]
    1da4:	add	w9, w14, w13
    1da8:	bic	w13, w2, w18
    1dac:	and	w14, w1, w18
    1db0:	orr	w13, w14, w13
    1db4:	orr	w14, w9, w12
    1db8:	add	w13, w15, w13
    1dbc:	and	w15, w9, w12
    1dc0:	and	w14, w14, w10
    1dc4:	orr	w14, w14, w15
    1dc8:	ror	w15, w18, #6
    1dcc:	eor	w15, w15, w18, ror #11
    1dd0:	eor	w15, w15, w18, ror #25
    1dd4:	mov	w17, #0x2c6f                	// #11375
    1dd8:	add	w13, w13, w15
    1ddc:	ror	w15, w9, #2
    1de0:	movk	w17, #0x2de9, lsl #16
    1de4:	eor	w15, w15, w9, ror #13
    1de8:	eor	w15, w15, w9, ror #22
    1dec:	add	w13, w13, w17
    1df0:	str	w2, [sp, #264]
    1df4:	add	w16, w16, w2
    1df8:	add	w14, w15, w14
    1dfc:	add	w2, w13, w11
    1e00:	str	w11, [sp, #284]
    1e04:	add	w11, w14, w13
    1e08:	bic	w13, w1, w2
    1e0c:	and	w14, w18, w2
    1e10:	orr	w13, w14, w13
    1e14:	orr	w14, w11, w9
    1e18:	add	w13, w16, w13
    1e1c:	and	w16, w11, w9
    1e20:	and	w14, w14, w12
    1e24:	orr	w14, w14, w16
    1e28:	ror	w16, w2, #6
    1e2c:	eor	w16, w16, w2, ror #11
    1e30:	eor	w16, w16, w2, ror #25
    1e34:	add	w13, w13, w16
    1e38:	ror	w16, w11, #2
    1e3c:	eor	w16, w16, w11, ror #13
    1e40:	ldp	w15, w17, [sp, #88]
    1e44:	eor	w16, w16, w11, ror #22
    1e48:	add	w14, w16, w14
    1e4c:	mov	w16, #0x84aa                	// #33962
    1e50:	movk	w16, #0x4a74, lsl #16
    1e54:	add	w13, w13, w16
    1e58:	str	w1, [sp, #260]
    1e5c:	add	w15, w15, w1
    1e60:	add	w1, w13, w10
    1e64:	str	w10, [sp, #280]
    1e68:	add	w10, w14, w13
    1e6c:	bic	w13, w18, w1
    1e70:	and	w14, w2, w1
    1e74:	orr	w13, w14, w13
    1e78:	orr	w14, w10, w11
    1e7c:	add	w13, w15, w13
    1e80:	and	w15, w10, w11
    1e84:	and	w14, w14, w9
    1e88:	orr	w14, w14, w15
    1e8c:	ror	w15, w1, #6
    1e90:	eor	w15, w15, w1, ror #11
    1e94:	eor	w15, w15, w1, ror #25
    1e98:	mov	w16, #0xa9dc                	// #43484
    1e9c:	add	w13, w13, w15
    1ea0:	ror	w15, w10, #2
    1ea4:	movk	w16, #0x5cb0, lsl #16
    1ea8:	eor	w15, w15, w10, ror #13
    1eac:	eor	w15, w15, w10, ror #22
    1eb0:	add	w13, w13, w16
    1eb4:	str	w18, [sp, #256]
    1eb8:	add	w17, w17, w18
    1ebc:	add	w14, w15, w14
    1ec0:	add	w18, w13, w12
    1ec4:	str	w12, [sp, #276]
    1ec8:	add	w12, w14, w13
    1ecc:	bic	w13, w2, w18
    1ed0:	and	w14, w1, w18
    1ed4:	orr	w13, w14, w13
    1ed8:	orr	w14, w12, w10
    1edc:	add	w13, w17, w13
    1ee0:	and	w17, w12, w10
    1ee4:	and	w14, w14, w11
    1ee8:	orr	w14, w14, w17
    1eec:	ror	w17, w18, #6
    1ef0:	eor	w17, w17, w18, ror #11
    1ef4:	eor	w17, w17, w18, ror #25
    1ef8:	add	w13, w13, w17
    1efc:	ror	w17, w12, #2
    1f00:	eor	w17, w17, w12, ror #13
    1f04:	ldp	w15, w16, [sp, #96]
    1f08:	eor	w17, w17, w12, ror #22
    1f0c:	add	w14, w17, w14
    1f10:	mov	w17, #0x88da                	// #35034
    1f14:	movk	w17, #0x76f9, lsl #16
    1f18:	add	w13, w13, w17
    1f1c:	str	w2, [sp, #284]
    1f20:	add	w15, w15, w2
    1f24:	add	w2, w13, w9
    1f28:	str	w9, [sp, #272]
    1f2c:	add	w9, w14, w13
    1f30:	bic	w13, w1, w2
    1f34:	and	w14, w18, w2
    1f38:	orr	w13, w14, w13
    1f3c:	orr	w14, w9, w12
    1f40:	add	w13, w15, w13
    1f44:	and	w15, w9, w12
    1f48:	and	w14, w14, w10
    1f4c:	orr	w14, w14, w15
    1f50:	ror	w15, w2, #6
    1f54:	eor	w15, w15, w2, ror #11
    1f58:	eor	w15, w15, w2, ror #25
    1f5c:	mov	w17, #0x5152                	// #20818
    1f60:	add	w13, w13, w15
    1f64:	ror	w15, w9, #2
    1f68:	movk	w17, #0x983e, lsl #16
    1f6c:	eor	w15, w15, w9, ror #13
    1f70:	eor	w15, w15, w9, ror #22
    1f74:	add	w13, w13, w17
    1f78:	str	w1, [sp, #280]
    1f7c:	add	w16, w16, w1
    1f80:	add	w14, w15, w14
    1f84:	add	w1, w13, w11
    1f88:	str	w11, [sp, #268]
    1f8c:	add	w11, w14, w13
    1f90:	bic	w13, w18, w1
    1f94:	and	w14, w2, w1
    1f98:	orr	w13, w14, w13
    1f9c:	orr	w14, w11, w9
    1fa0:	add	w13, w16, w13
    1fa4:	and	w16, w11, w9
    1fa8:	and	w14, w14, w12
    1fac:	orr	w14, w14, w16
    1fb0:	ror	w16, w1, #6
    1fb4:	eor	w16, w16, w1, ror #11
    1fb8:	eor	w16, w16, w1, ror #25
    1fbc:	add	w13, w13, w16
    1fc0:	ror	w16, w11, #2
    1fc4:	eor	w16, w16, w11, ror #13
    1fc8:	ldp	w15, w17, [sp, #104]
    1fcc:	eor	w16, w16, w11, ror #22
    1fd0:	add	w14, w16, w14
    1fd4:	mov	w16, #0xc66d                	// #50797
    1fd8:	movk	w16, #0xa831, lsl #16
    1fdc:	add	w13, w13, w16
    1fe0:	str	w18, [sp, #276]
    1fe4:	add	w15, w15, w18
    1fe8:	add	w18, w13, w10
    1fec:	str	w10, [sp, #264]
    1ff0:	add	w10, w14, w13
    1ff4:	bic	w13, w2, w18
    1ff8:	and	w14, w1, w18
    1ffc:	orr	w13, w14, w13
    2000:	orr	w14, w10, w11
    2004:	add	w13, w15, w13
    2008:	and	w15, w10, w11
    200c:	and	w14, w14, w9
    2010:	orr	w14, w14, w15
    2014:	ror	w15, w18, #6
    2018:	eor	w15, w15, w18, ror #11
    201c:	eor	w15, w15, w18, ror #25
    2020:	mov	w16, #0x27c8                	// #10184
    2024:	add	w13, w13, w15
    2028:	ror	w15, w10, #2
    202c:	movk	w16, #0xb003, lsl #16
    2030:	eor	w15, w15, w10, ror #13
    2034:	eor	w15, w15, w10, ror #22
    2038:	add	w13, w13, w16
    203c:	str	w2, [sp, #272]
    2040:	add	w17, w17, w2
    2044:	add	w14, w15, w14
    2048:	add	w2, w13, w12
    204c:	str	w12, [sp, #260]
    2050:	add	w12, w14, w13
    2054:	bic	w13, w1, w2
    2058:	and	w14, w18, w2
    205c:	orr	w13, w14, w13
    2060:	orr	w14, w12, w10
    2064:	add	w13, w17, w13
    2068:	and	w17, w12, w10
    206c:	and	w14, w14, w11
    2070:	orr	w14, w14, w17
    2074:	ror	w17, w2, #6
    2078:	eor	w17, w17, w2, ror #11
    207c:	eor	w17, w17, w2, ror #25
    2080:	add	w13, w13, w17
    2084:	ror	w17, w12, #2
    2088:	eor	w17, w17, w12, ror #13
    208c:	ldp	w15, w16, [sp, #112]
    2090:	eor	w17, w17, w12, ror #22
    2094:	add	w14, w17, w14
    2098:	mov	w17, #0x7fc7                	// #32711
    209c:	movk	w17, #0xbf59, lsl #16
    20a0:	add	w13, w13, w17
    20a4:	str	w1, [sp, #268]
    20a8:	add	w15, w15, w1
    20ac:	add	w1, w13, w9
    20b0:	str	w9, [sp, #256]
    20b4:	add	w9, w14, w13
    20b8:	bic	w13, w18, w1
    20bc:	and	w14, w2, w1
    20c0:	orr	w13, w14, w13
    20c4:	orr	w14, w9, w12
    20c8:	add	w13, w15, w13
    20cc:	and	w15, w9, w12
    20d0:	and	w14, w14, w10
    20d4:	orr	w14, w14, w15
    20d8:	ror	w15, w1, #6
    20dc:	eor	w15, w15, w1, ror #11
    20e0:	eor	w15, w15, w1, ror #25
    20e4:	mov	w17, #0xbf3                 	// #3059
    20e8:	add	w13, w13, w15
    20ec:	ror	w15, w9, #2
    20f0:	movk	w17, #0xc6e0, lsl #16
    20f4:	eor	w15, w15, w9, ror #13
    20f8:	eor	w15, w15, w9, ror #22
    20fc:	add	w13, w13, w17
    2100:	str	w18, [sp, #264]
    2104:	add	w16, w16, w18
    2108:	add	w14, w15, w14
    210c:	add	w18, w13, w11
    2110:	str	w11, [sp, #284]
    2114:	add	w11, w14, w13
    2118:	bic	w13, w2, w18
    211c:	and	w14, w1, w18
    2120:	orr	w13, w14, w13
    2124:	orr	w14, w11, w9
    2128:	add	w13, w16, w13
    212c:	and	w16, w11, w9
    2130:	and	w14, w14, w12
    2134:	orr	w14, w14, w16
    2138:	ror	w16, w18, #6
    213c:	eor	w16, w16, w18, ror #11
    2140:	eor	w16, w16, w18, ror #25
    2144:	add	w13, w13, w16
    2148:	ror	w16, w11, #2
    214c:	eor	w16, w16, w11, ror #13
    2150:	ldp	w15, w17, [sp, #120]
    2154:	eor	w16, w16, w11, ror #22
    2158:	add	w14, w16, w14
    215c:	mov	w16, #0x9147                	// #37191
    2160:	movk	w16, #0xd5a7, lsl #16
    2164:	add	w13, w13, w16
    2168:	str	w2, [sp, #260]
    216c:	add	w15, w15, w2
    2170:	add	w2, w13, w10
    2174:	str	w10, [sp, #280]
    2178:	add	w10, w14, w13
    217c:	bic	w13, w1, w2
    2180:	and	w14, w18, w2
    2184:	orr	w13, w14, w13
    2188:	orr	w14, w10, w11
    218c:	add	w13, w15, w13
    2190:	and	w15, w10, w11
    2194:	and	w14, w14, w9
    2198:	orr	w14, w14, w15
    219c:	ror	w15, w2, #6
    21a0:	eor	w15, w15, w2, ror #11
    21a4:	eor	w15, w15, w2, ror #25
    21a8:	mov	w16, #0x6351                	// #25425
    21ac:	add	w13, w13, w15
    21b0:	ror	w15, w10, #2
    21b4:	movk	w16, #0x6ca, lsl #16
    21b8:	eor	w15, w15, w10, ror #13
    21bc:	eor	w15, w15, w10, ror #22
    21c0:	add	w13, w13, w16
    21c4:	str	w1, [sp, #256]
    21c8:	add	w17, w17, w1
    21cc:	add	w14, w15, w14
    21d0:	add	w1, w13, w12
    21d4:	str	w12, [sp, #276]
    21d8:	add	w12, w14, w13
    21dc:	bic	w13, w18, w1
    21e0:	and	w14, w2, w1
    21e4:	orr	w13, w14, w13
    21e8:	orr	w14, w12, w10
    21ec:	add	w13, w17, w13
    21f0:	and	w17, w12, w10
    21f4:	and	w14, w14, w11
    21f8:	orr	w14, w14, w17
    21fc:	ror	w17, w1, #6
    2200:	eor	w17, w17, w1, ror #11
    2204:	eor	w17, w17, w1, ror #25
    2208:	add	w13, w13, w17
    220c:	ror	w17, w12, #2
    2210:	eor	w17, w17, w12, ror #13
    2214:	ldp	w15, w16, [sp, #128]
    2218:	eor	w17, w17, w12, ror #22
    221c:	add	w14, w17, w14
    2220:	mov	w17, #0x2967                	// #10599
    2224:	movk	w17, #0x1429, lsl #16
    2228:	add	w13, w13, w17
    222c:	str	w18, [sp, #284]
    2230:	add	w15, w15, w18
    2234:	add	w18, w13, w9
    2238:	str	w9, [sp, #272]
    223c:	add	w9, w14, w13
    2240:	bic	w13, w2, w18
    2244:	and	w14, w1, w18
    2248:	orr	w13, w14, w13
    224c:	orr	w14, w9, w12
    2250:	add	w13, w15, w13
    2254:	and	w15, w9, w12
    2258:	and	w14, w14, w10
    225c:	orr	w14, w14, w15
    2260:	ror	w15, w18, #6
    2264:	eor	w15, w15, w18, ror #11
    2268:	eor	w15, w15, w18, ror #25
    226c:	mov	w17, #0xa85                 	// #2693
    2270:	add	w13, w13, w15
    2274:	ror	w15, w9, #2
    2278:	movk	w17, #0x27b7, lsl #16
    227c:	eor	w15, w15, w9, ror #13
    2280:	eor	w15, w15, w9, ror #22
    2284:	add	w13, w13, w17
    2288:	str	w2, [sp, #280]
    228c:	add	w16, w16, w2
    2290:	add	w14, w15, w14
    2294:	add	w2, w13, w11
    2298:	str	w11, [sp, #268]
    229c:	add	w11, w14, w13
    22a0:	bic	w13, w1, w2
    22a4:	and	w14, w18, w2
    22a8:	orr	w13, w14, w13
    22ac:	orr	w14, w11, w9
    22b0:	add	w13, w16, w13
    22b4:	and	w16, w11, w9
    22b8:	and	w14, w14, w12
    22bc:	orr	w14, w14, w16
    22c0:	ror	w16, w2, #6
    22c4:	eor	w16, w16, w2, ror #11
    22c8:	eor	w16, w16, w2, ror #25
    22cc:	add	w13, w13, w16
    22d0:	ror	w16, w11, #2
    22d4:	eor	w16, w16, w11, ror #13
    22d8:	ldp	w15, w17, [sp, #136]
    22dc:	eor	w16, w16, w11, ror #22
    22e0:	add	w14, w16, w14
    22e4:	mov	w16, #0x2138                	// #8504
    22e8:	movk	w16, #0x2e1b, lsl #16
    22ec:	add	w13, w13, w16
    22f0:	str	w1, [sp, #276]
    22f4:	add	w15, w15, w1
    22f8:	add	w1, w13, w10
    22fc:	str	w10, [sp, #264]
    2300:	add	w10, w14, w13
    2304:	bic	w13, w18, w1
    2308:	and	w14, w2, w1
    230c:	orr	w13, w14, w13
    2310:	orr	w14, w10, w11
    2314:	add	w13, w15, w13
    2318:	and	w15, w10, w11
    231c:	and	w14, w14, w9
    2320:	orr	w14, w14, w15
    2324:	ror	w15, w1, #6
    2328:	eor	w15, w15, w1, ror #11
    232c:	eor	w15, w15, w1, ror #25
    2330:	mov	w16, #0x6dfc                	// #28156
    2334:	add	w13, w13, w15
    2338:	ror	w15, w10, #2
    233c:	movk	w16, #0x4d2c, lsl #16
    2340:	eor	w15, w15, w10, ror #13
    2344:	eor	w15, w15, w10, ror #22
    2348:	add	w13, w13, w16
    234c:	str	w18, [sp, #272]
    2350:	add	w17, w17, w18
    2354:	add	w14, w15, w14
    2358:	add	w18, w13, w12
    235c:	str	w12, [sp, #260]
    2360:	add	w12, w14, w13
    2364:	bic	w13, w2, w18
    2368:	and	w14, w1, w18
    236c:	orr	w13, w14, w13
    2370:	orr	w14, w12, w10
    2374:	add	w13, w17, w13
    2378:	and	w17, w12, w10
    237c:	and	w14, w14, w11
    2380:	orr	w14, w14, w17
    2384:	ror	w17, w18, #6
    2388:	eor	w17, w17, w18, ror #11
    238c:	eor	w17, w17, w18, ror #25
    2390:	add	w13, w13, w17
    2394:	ror	w17, w12, #2
    2398:	eor	w17, w17, w12, ror #13
    239c:	ldp	w15, w16, [sp, #144]
    23a0:	eor	w17, w17, w12, ror #22
    23a4:	add	w14, w17, w14
    23a8:	mov	w17, #0xd13                 	// #3347
    23ac:	movk	w17, #0x5338, lsl #16
    23b0:	add	w13, w13, w17
    23b4:	str	w2, [sp, #268]
    23b8:	add	w15, w15, w2
    23bc:	add	w2, w13, w9
    23c0:	str	w9, [sp, #256]
    23c4:	add	w9, w14, w13
    23c8:	bic	w13, w1, w2
    23cc:	and	w14, w18, w2
    23d0:	orr	w13, w14, w13
    23d4:	orr	w14, w9, w12
    23d8:	add	w13, w15, w13
    23dc:	and	w15, w9, w12
    23e0:	and	w14, w14, w10
    23e4:	orr	w14, w14, w15
    23e8:	ror	w15, w2, #6
    23ec:	eor	w15, w15, w2, ror #11
    23f0:	eor	w15, w15, w2, ror #25
    23f4:	mov	w17, #0x7354                	// #29524
    23f8:	add	w13, w13, w15
    23fc:	ror	w15, w9, #2
    2400:	movk	w17, #0x650a, lsl #16
    2404:	eor	w15, w15, w9, ror #13
    2408:	eor	w15, w15, w9, ror #22
    240c:	add	w13, w13, w17
    2410:	str	w1, [sp, #264]
    2414:	add	w16, w16, w1
    2418:	add	w14, w15, w14
    241c:	add	w1, w13, w11
    2420:	str	w11, [sp, #284]
    2424:	add	w11, w14, w13
    2428:	bic	w13, w18, w1
    242c:	and	w14, w2, w1
    2430:	orr	w13, w14, w13
    2434:	orr	w14, w11, w9
    2438:	add	w13, w16, w13
    243c:	and	w16, w11, w9
    2440:	and	w14, w14, w12
    2444:	orr	w14, w14, w16
    2448:	ror	w16, w1, #6
    244c:	eor	w16, w16, w1, ror #11
    2450:	eor	w16, w16, w1, ror #25
    2454:	add	w13, w13, w16
    2458:	ror	w16, w11, #2
    245c:	eor	w16, w16, w11, ror #13
    2460:	ldp	w15, w17, [sp, #152]
    2464:	eor	w16, w16, w11, ror #22
    2468:	add	w14, w16, w14
    246c:	mov	w16, #0xabb                 	// #2747
    2470:	movk	w16, #0x766a, lsl #16
    2474:	add	w13, w13, w16
    2478:	str	w18, [sp, #260]
    247c:	add	w15, w15, w18
    2480:	add	w18, w13, w10
    2484:	str	w10, [sp, #280]
    2488:	add	w10, w14, w13
    248c:	bic	w13, w2, w18
    2490:	and	w14, w1, w18
    2494:	orr	w13, w14, w13
    2498:	orr	w14, w10, w11
    249c:	add	w13, w15, w13
    24a0:	and	w15, w10, w11
    24a4:	and	w14, w14, w9
    24a8:	orr	w14, w14, w15
    24ac:	ror	w15, w18, #6
    24b0:	eor	w15, w15, w18, ror #11
    24b4:	eor	w15, w15, w18, ror #25
    24b8:	mov	w16, #0xc92e                	// #51502
    24bc:	add	w13, w13, w15
    24c0:	ror	w15, w10, #2
    24c4:	movk	w16, #0x81c2, lsl #16
    24c8:	eor	w15, w15, w10, ror #13
    24cc:	eor	w15, w15, w10, ror #22
    24d0:	add	w13, w13, w16
    24d4:	str	w2, [sp, #256]
    24d8:	add	w17, w17, w2
    24dc:	add	w14, w15, w14
    24e0:	add	w2, w13, w12
    24e4:	str	w12, [sp, #276]
    24e8:	add	w12, w14, w13
    24ec:	bic	w13, w1, w2
    24f0:	and	w14, w18, w2
    24f4:	orr	w13, w14, w13
    24f8:	orr	w14, w12, w10
    24fc:	add	w13, w17, w13
    2500:	and	w17, w12, w10
    2504:	and	w14, w14, w11
    2508:	orr	w14, w14, w17
    250c:	ror	w17, w2, #6
    2510:	eor	w17, w17, w2, ror #11
    2514:	eor	w17, w17, w2, ror #25
    2518:	add	w13, w13, w17
    251c:	ror	w17, w12, #2
    2520:	eor	w17, w17, w12, ror #13
    2524:	ldp	w15, w16, [sp, #160]
    2528:	eor	w17, w17, w12, ror #22
    252c:	add	w14, w17, w14
    2530:	mov	w17, #0x2c85                	// #11397
    2534:	movk	w17, #0x9272, lsl #16
    2538:	add	w13, w13, w17
    253c:	str	w1, [sp, #284]
    2540:	add	w15, w15, w1
    2544:	add	w1, w13, w9
    2548:	str	w9, [sp, #272]
    254c:	add	w9, w14, w13
    2550:	bic	w13, w18, w1
    2554:	and	w14, w2, w1
    2558:	orr	w13, w14, w13
    255c:	orr	w14, w9, w12
    2560:	add	w13, w15, w13
    2564:	and	w15, w9, w12
    2568:	and	w14, w14, w10
    256c:	orr	w14, w14, w15
    2570:	ror	w15, w1, #6
    2574:	eor	w15, w15, w1, ror #11
    2578:	eor	w15, w15, w1, ror #25
    257c:	mov	w17, #0xe8a1                	// #59553
    2580:	add	w13, w13, w15
    2584:	ror	w15, w9, #2
    2588:	movk	w17, #0xa2bf, lsl #16
    258c:	eor	w15, w15, w9, ror #13
    2590:	eor	w15, w15, w9, ror #22
    2594:	add	w13, w13, w17
    2598:	str	w18, [sp, #280]
    259c:	add	w16, w16, w18
    25a0:	add	w14, w15, w14
    25a4:	add	w18, w13, w11
    25a8:	str	w11, [sp, #268]
    25ac:	add	w11, w14, w13
    25b0:	bic	w13, w2, w18
    25b4:	and	w14, w1, w18
    25b8:	orr	w13, w14, w13
    25bc:	orr	w14, w11, w9
    25c0:	add	w13, w16, w13
    25c4:	and	w16, w11, w9
    25c8:	and	w14, w14, w12
    25cc:	orr	w14, w14, w16
    25d0:	ror	w16, w18, #6
    25d4:	eor	w16, w16, w18, ror #11
    25d8:	eor	w16, w16, w18, ror #25
    25dc:	add	w13, w13, w16
    25e0:	ror	w16, w11, #2
    25e4:	eor	w16, w16, w11, ror #13
    25e8:	ldp	w15, w17, [sp, #168]
    25ec:	eor	w16, w16, w11, ror #22
    25f0:	add	w14, w16, w14
    25f4:	mov	w16, #0x664b                	// #26187
    25f8:	movk	w16, #0xa81a, lsl #16
    25fc:	add	w13, w13, w16
    2600:	str	w2, [sp, #276]
    2604:	add	w15, w15, w2
    2608:	add	w2, w13, w10
    260c:	str	w10, [sp, #264]
    2610:	add	w10, w14, w13
    2614:	bic	w13, w1, w2
    2618:	and	w14, w18, w2
    261c:	orr	w13, w14, w13
    2620:	orr	w14, w10, w11
    2624:	add	w13, w15, w13
    2628:	and	w15, w10, w11
    262c:	and	w14, w14, w9
    2630:	orr	w14, w14, w15
    2634:	ror	w15, w2, #6
    2638:	eor	w15, w15, w2, ror #11
    263c:	eor	w15, w15, w2, ror #25
    2640:	mov	w16, #0x8b70                	// #35696
    2644:	add	w13, w13, w15
    2648:	ror	w15, w10, #2
    264c:	movk	w16, #0xc24b, lsl #16
    2650:	eor	w15, w15, w10, ror #13
    2654:	eor	w15, w15, w10, ror #22
    2658:	add	w13, w13, w16
    265c:	str	w1, [sp, #272]
    2660:	add	w17, w17, w1
    2664:	add	w14, w15, w14
    2668:	add	w1, w13, w12
    266c:	str	w12, [sp, #260]
    2670:	add	w12, w14, w13
    2674:	bic	w13, w18, w1
    2678:	and	w14, w2, w1
    267c:	orr	w13, w14, w13
    2680:	orr	w14, w12, w10
    2684:	add	w13, w17, w13
    2688:	and	w17, w12, w10
    268c:	and	w14, w14, w11
    2690:	orr	w14, w14, w17
    2694:	ror	w17, w1, #6
    2698:	eor	w17, w17, w1, ror #11
    269c:	eor	w17, w17, w1, ror #25
    26a0:	add	w13, w13, w17
    26a4:	ror	w17, w12, #2
    26a8:	eor	w17, w17, w12, ror #13
    26ac:	ldp	w15, w16, [sp, #176]
    26b0:	eor	w17, w17, w12, ror #22
    26b4:	add	w14, w17, w14
    26b8:	mov	w17, #0x51a3                	// #20899
    26bc:	movk	w17, #0xc76c, lsl #16
    26c0:	add	w13, w13, w17
    26c4:	str	w18, [sp, #268]
    26c8:	add	w15, w15, w18
    26cc:	add	w18, w13, w9
    26d0:	str	w9, [sp, #256]
    26d4:	add	w9, w14, w13
    26d8:	bic	w13, w2, w18
    26dc:	and	w14, w1, w18
    26e0:	orr	w13, w14, w13
    26e4:	orr	w14, w9, w12
    26e8:	add	w13, w15, w13
    26ec:	and	w15, w9, w12
    26f0:	and	w14, w14, w10
    26f4:	orr	w14, w14, w15
    26f8:	ror	w15, w18, #6
    26fc:	eor	w15, w15, w18, ror #11
    2700:	eor	w15, w15, w18, ror #25
    2704:	mov	w17, #0xe819                	// #59417
    2708:	add	w13, w13, w15
    270c:	ror	w15, w9, #2
    2710:	movk	w17, #0xd192, lsl #16
    2714:	eor	w15, w15, w9, ror #13
    2718:	eor	w15, w15, w9, ror #22
    271c:	add	w13, w13, w17
    2720:	str	w2, [sp, #264]
    2724:	add	w16, w16, w2
    2728:	add	w14, w15, w14
    272c:	add	w2, w13, w11
    2730:	str	w11, [sp, #284]
    2734:	add	w11, w14, w13
    2738:	bic	w13, w1, w2
    273c:	and	w14, w18, w2
    2740:	orr	w13, w14, w13
    2744:	orr	w14, w11, w9
    2748:	add	w13, w16, w13
    274c:	and	w16, w11, w9
    2750:	and	w14, w14, w12
    2754:	orr	w14, w14, w16
    2758:	ror	w16, w2, #6
    275c:	eor	w16, w16, w2, ror #11
    2760:	eor	w16, w16, w2, ror #25
    2764:	add	w13, w13, w16
    2768:	ror	w16, w11, #2
    276c:	eor	w16, w16, w11, ror #13
    2770:	ldp	w15, w17, [sp, #184]
    2774:	eor	w16, w16, w11, ror #22
    2778:	add	w14, w16, w14
    277c:	mov	w16, #0x624                 	// #1572
    2780:	movk	w16, #0xd699, lsl #16
    2784:	add	w13, w13, w16
    2788:	str	w1, [sp, #260]
    278c:	add	w15, w15, w1
    2790:	add	w1, w13, w10
    2794:	str	w10, [sp, #280]
    2798:	add	w10, w14, w13
    279c:	bic	w13, w18, w1
    27a0:	and	w14, w2, w1
    27a4:	orr	w13, w14, w13
    27a8:	orr	w14, w10, w11
    27ac:	add	w13, w15, w13
    27b0:	and	w15, w10, w11
    27b4:	and	w14, w14, w9
    27b8:	orr	w14, w14, w15
    27bc:	ror	w15, w1, #6
    27c0:	eor	w15, w15, w1, ror #11
    27c4:	eor	w15, w15, w1, ror #25
    27c8:	mov	w16, #0x3585                	// #13701
    27cc:	add	w13, w13, w15
    27d0:	ror	w15, w10, #2
    27d4:	movk	w16, #0xf40e, lsl #16
    27d8:	eor	w15, w15, w10, ror #13
    27dc:	eor	w15, w15, w10, ror #22
    27e0:	add	w13, w13, w16
    27e4:	str	w18, [sp, #256]
    27e8:	add	w17, w17, w18
    27ec:	add	w14, w15, w14
    27f0:	add	w18, w13, w12
    27f4:	str	w12, [sp, #276]
    27f8:	add	w12, w14, w13
    27fc:	bic	w13, w2, w18
    2800:	and	w14, w1, w18
    2804:	orr	w13, w14, w13
    2808:	orr	w14, w12, w10
    280c:	add	w13, w17, w13
    2810:	and	w17, w12, w10
    2814:	and	w14, w14, w11
    2818:	orr	w14, w14, w17
    281c:	ror	w17, w18, #6
    2820:	eor	w17, w17, w18, ror #11
    2824:	eor	w17, w17, w18, ror #25
    2828:	add	w13, w13, w17
    282c:	ror	w17, w12, #2
    2830:	eor	w17, w17, w12, ror #13
    2834:	ldp	w15, w16, [sp, #192]
    2838:	eor	w17, w17, w12, ror #22
    283c:	add	w14, w17, w14
    2840:	mov	w17, #0xa070                	// #41072
    2844:	movk	w17, #0x106a, lsl #16
    2848:	add	w13, w13, w17
    284c:	str	w2, [sp, #284]
    2850:	add	w15, w15, w2
    2854:	add	w2, w13, w9
    2858:	str	w9, [sp, #272]
    285c:	add	w9, w14, w13
    2860:	bic	w13, w1, w2
    2864:	and	w14, w18, w2
    2868:	orr	w13, w14, w13
    286c:	orr	w14, w9, w12
    2870:	add	w13, w15, w13
    2874:	and	w15, w9, w12
    2878:	and	w14, w14, w10
    287c:	orr	w14, w14, w15
    2880:	ror	w15, w2, #6
    2884:	eor	w15, w15, w2, ror #11
    2888:	eor	w15, w15, w2, ror #25
    288c:	mov	w17, #0xc116                	// #49430
    2890:	add	w13, w13, w15
    2894:	ror	w15, w9, #2
    2898:	movk	w17, #0x19a4, lsl #16
    289c:	eor	w15, w15, w9, ror #13
    28a0:	eor	w15, w15, w9, ror #22
    28a4:	add	w13, w13, w17
    28a8:	str	w1, [sp, #280]
    28ac:	add	w16, w16, w1
    28b0:	add	w14, w15, w14
    28b4:	add	w1, w13, w11
    28b8:	str	w11, [sp, #268]
    28bc:	add	w11, w14, w13
    28c0:	bic	w13, w18, w1
    28c4:	and	w14, w2, w1
    28c8:	orr	w13, w14, w13
    28cc:	orr	w14, w11, w9
    28d0:	add	w13, w16, w13
    28d4:	and	w16, w11, w9
    28d8:	and	w14, w14, w12
    28dc:	orr	w14, w14, w16
    28e0:	ror	w16, w1, #6
    28e4:	eor	w16, w16, w1, ror #11
    28e8:	eor	w16, w16, w1, ror #25
    28ec:	add	w13, w13, w16
    28f0:	ror	w16, w11, #2
    28f4:	eor	w16, w16, w11, ror #13
    28f8:	ldp	w15, w17, [sp, #200]
    28fc:	eor	w16, w16, w11, ror #22
    2900:	add	w14, w16, w14
    2904:	mov	w16, #0x6c08                	// #27656
    2908:	movk	w16, #0x1e37, lsl #16
    290c:	add	w13, w13, w16
    2910:	str	w18, [sp, #276]
    2914:	add	w15, w15, w18
    2918:	add	w18, w13, w10
    291c:	str	w10, [sp, #264]
    2920:	add	w10, w14, w13
    2924:	bic	w13, w2, w18
    2928:	and	w14, w1, w18
    292c:	orr	w13, w14, w13
    2930:	orr	w14, w10, w11
    2934:	add	w13, w15, w13
    2938:	and	w15, w10, w11
    293c:	and	w14, w14, w9
    2940:	orr	w14, w14, w15
    2944:	ror	w15, w18, #6
    2948:	eor	w15, w15, w18, ror #11
    294c:	eor	w15, w15, w18, ror #25
    2950:	mov	w16, #0x774c                	// #30540
    2954:	add	w13, w13, w15
    2958:	ror	w15, w10, #2
    295c:	movk	w16, #0x2748, lsl #16
    2960:	eor	w15, w15, w10, ror #13
    2964:	eor	w15, w15, w10, ror #22
    2968:	add	w13, w13, w16
    296c:	str	w2, [sp, #272]
    2970:	add	w17, w17, w2
    2974:	add	w14, w15, w14
    2978:	add	w2, w13, w12
    297c:	str	w12, [sp, #260]
    2980:	add	w12, w14, w13
    2984:	bic	w13, w1, w2
    2988:	and	w14, w18, w2
    298c:	orr	w13, w14, w13
    2990:	orr	w14, w12, w10
    2994:	add	w13, w17, w13
    2998:	and	w17, w12, w10
    299c:	and	w14, w14, w11
    29a0:	orr	w14, w14, w17
    29a4:	ror	w17, w2, #6
    29a8:	eor	w17, w17, w2, ror #11
    29ac:	eor	w17, w17, w2, ror #25
    29b0:	add	w13, w13, w17
    29b4:	ror	w17, w12, #2
    29b8:	eor	w17, w17, w12, ror #13
    29bc:	ldp	w15, w16, [sp, #208]
    29c0:	eor	w17, w17, w12, ror #22
    29c4:	add	w14, w17, w14
    29c8:	mov	w17, #0xbcb5                	// #48309
    29cc:	movk	w17, #0x34b0, lsl #16
    29d0:	add	w13, w13, w17
    29d4:	str	w1, [sp, #268]
    29d8:	add	w15, w15, w1
    29dc:	add	w1, w13, w9
    29e0:	str	w9, [sp, #256]
    29e4:	add	w9, w14, w13
    29e8:	bic	w13, w18, w1
    29ec:	and	w14, w2, w1
    29f0:	orr	w13, w14, w13
    29f4:	orr	w14, w9, w12
    29f8:	add	w13, w15, w13
    29fc:	and	w15, w9, w12
    2a00:	and	w14, w14, w10
    2a04:	orr	w14, w14, w15
    2a08:	ror	w15, w1, #6
    2a0c:	eor	w15, w15, w1, ror #11
    2a10:	eor	w15, w15, w1, ror #25
    2a14:	mov	w17, #0xcb3                 	// #3251
    2a18:	add	w13, w13, w15
    2a1c:	ror	w15, w9, #2
    2a20:	movk	w17, #0x391c, lsl #16
    2a24:	eor	w15, w15, w9, ror #13
    2a28:	eor	w15, w15, w9, ror #22
    2a2c:	add	w13, w13, w17
    2a30:	str	w18, [sp, #264]
    2a34:	add	w16, w16, w18
    2a38:	add	w14, w15, w14
    2a3c:	add	w18, w13, w11
    2a40:	str	w11, [sp, #284]
    2a44:	add	w11, w14, w13
    2a48:	bic	w13, w2, w18
    2a4c:	and	w14, w1, w18
    2a50:	orr	w13, w14, w13
    2a54:	orr	w14, w11, w9
    2a58:	add	w13, w16, w13
    2a5c:	and	w16, w11, w9
    2a60:	and	w14, w14, w12
    2a64:	orr	w14, w14, w16
    2a68:	ror	w16, w18, #6
    2a6c:	eor	w16, w16, w18, ror #11
    2a70:	eor	w16, w16, w18, ror #25
    2a74:	add	w13, w13, w16
    2a78:	ror	w16, w11, #2
    2a7c:	eor	w16, w16, w11, ror #13
    2a80:	ldp	w15, w17, [sp, #216]
    2a84:	eor	w16, w16, w11, ror #22
    2a88:	add	w14, w16, w14
    2a8c:	mov	w16, #0xaa4a                	// #43594
    2a90:	movk	w16, #0x4ed8, lsl #16
    2a94:	add	w13, w13, w16
    2a98:	str	w2, [sp, #260]
    2a9c:	add	w15, w15, w2
    2aa0:	add	w2, w13, w10
    2aa4:	str	w10, [sp, #280]
    2aa8:	add	w10, w14, w13
    2aac:	bic	w13, w1, w2
    2ab0:	and	w14, w18, w2
    2ab4:	orr	w13, w14, w13
    2ab8:	orr	w14, w10, w11
    2abc:	add	w13, w15, w13
    2ac0:	and	w15, w10, w11
    2ac4:	and	w14, w14, w9
    2ac8:	orr	w14, w14, w15
    2acc:	ror	w15, w2, #6
    2ad0:	eor	w15, w15, w2, ror #11
    2ad4:	eor	w15, w15, w2, ror #25
    2ad8:	mov	w16, #0xca4f                	// #51791
    2adc:	add	w13, w13, w15
    2ae0:	ror	w15, w10, #2
    2ae4:	movk	w16, #0x5b9c, lsl #16
    2ae8:	eor	w15, w15, w10, ror #13
    2aec:	eor	w15, w15, w10, ror #22
    2af0:	add	w13, w13, w16
    2af4:	str	w1, [sp, #256]
    2af8:	add	w17, w17, w1
    2afc:	add	w14, w15, w14
    2b00:	add	w1, w13, w12
    2b04:	str	w12, [sp, #276]
    2b08:	add	w12, w14, w13
    2b0c:	bic	w13, w18, w1
    2b10:	and	w14, w2, w1
    2b14:	orr	w13, w14, w13
    2b18:	orr	w14, w12, w10
    2b1c:	add	w13, w17, w13
    2b20:	and	w17, w12, w10
    2b24:	and	w14, w14, w11
    2b28:	orr	w14, w14, w17
    2b2c:	ror	w17, w1, #6
    2b30:	eor	w17, w17, w1, ror #11
    2b34:	eor	w17, w17, w1, ror #25
    2b38:	add	w13, w13, w17
    2b3c:	ror	w17, w12, #2
    2b40:	eor	w17, w17, w12, ror #13
    2b44:	ldp	w15, w16, [sp, #224]
    2b48:	eor	w17, w17, w12, ror #22
    2b4c:	add	w14, w17, w14
    2b50:	mov	w17, #0x6ff3                	// #28659
    2b54:	movk	w17, #0x682e, lsl #16
    2b58:	add	w13, w13, w17
    2b5c:	str	w18, [sp, #284]
    2b60:	add	w15, w15, w18
    2b64:	add	w18, w13, w9
    2b68:	str	w9, [sp, #272]
    2b6c:	add	w9, w14, w13
    2b70:	bic	w13, w2, w18
    2b74:	and	w14, w1, w18
    2b78:	orr	w13, w14, w13
    2b7c:	orr	w14, w9, w12
    2b80:	add	w13, w15, w13
    2b84:	and	w15, w9, w12
    2b88:	and	w14, w14, w10
    2b8c:	orr	w14, w14, w15
    2b90:	ror	w15, w18, #6
    2b94:	eor	w15, w15, w18, ror #11
    2b98:	eor	w15, w15, w18, ror #25
    2b9c:	mov	w17, #0x82ee                	// #33518
    2ba0:	add	w13, w13, w15
    2ba4:	ror	w15, w9, #2
    2ba8:	movk	w17, #0x748f, lsl #16
    2bac:	eor	w15, w15, w9, ror #13
    2bb0:	eor	w15, w15, w9, ror #22
    2bb4:	add	w13, w13, w17
    2bb8:	str	w2, [sp, #280]
    2bbc:	add	w16, w16, w2
    2bc0:	add	w14, w15, w14
    2bc4:	add	w2, w13, w11
    2bc8:	str	w11, [sp, #268]
    2bcc:	add	w11, w14, w13
    2bd0:	bic	w13, w1, w2
    2bd4:	and	w14, w18, w2
    2bd8:	orr	w13, w14, w13
    2bdc:	orr	w14, w11, w9
    2be0:	add	w13, w16, w13
    2be4:	and	w16, w11, w9
    2be8:	and	w14, w14, w12
    2bec:	orr	w14, w14, w16
    2bf0:	ror	w16, w2, #6
    2bf4:	eor	w16, w16, w2, ror #11
    2bf8:	eor	w16, w16, w2, ror #25
    2bfc:	add	w13, w13, w16
    2c00:	ror	w16, w11, #2
    2c04:	eor	w16, w16, w11, ror #13
    2c08:	ldp	w15, w17, [sp, #232]
    2c0c:	eor	w16, w16, w11, ror #22
    2c10:	add	w14, w16, w14
    2c14:	mov	w16, #0x636f                	// #25455
    2c18:	movk	w16, #0x78a5, lsl #16
    2c1c:	add	w13, w13, w16
    2c20:	str	w1, [sp, #276]
    2c24:	add	w15, w15, w1
    2c28:	add	w1, w13, w10
    2c2c:	str	w10, [sp, #264]
    2c30:	add	w10, w14, w13
    2c34:	bic	w13, w18, w1
    2c38:	and	w14, w2, w1
    2c3c:	orr	w13, w14, w13
    2c40:	orr	w14, w10, w11
    2c44:	add	w13, w15, w13
    2c48:	and	w15, w10, w11
    2c4c:	and	w14, w14, w9
    2c50:	orr	w14, w14, w15
    2c54:	ror	w15, w1, #6
    2c58:	eor	w15, w15, w1, ror #11
    2c5c:	eor	w15, w15, w1, ror #25
    2c60:	mov	w16, #0x7814                	// #30740
    2c64:	add	w13, w13, w15
    2c68:	ror	w15, w10, #2
    2c6c:	movk	w16, #0x84c8, lsl #16
    2c70:	eor	w15, w15, w10, ror #13
    2c74:	eor	w15, w15, w10, ror #22
    2c78:	add	w13, w13, w16
    2c7c:	str	w18, [sp, #272]
    2c80:	add	w17, w17, w18
    2c84:	add	w14, w15, w14
    2c88:	add	w18, w13, w12
    2c8c:	str	w12, [sp, #260]
    2c90:	add	w12, w14, w13
    2c94:	bic	w13, w2, w18
    2c98:	and	w14, w1, w18
    2c9c:	orr	w13, w14, w13
    2ca0:	orr	w14, w12, w10
    2ca4:	add	w13, w17, w13
    2ca8:	and	w17, w12, w10
    2cac:	and	w14, w14, w11
    2cb0:	orr	w14, w14, w17
    2cb4:	ror	w17, w18, #6
    2cb8:	eor	w17, w17, w18, ror #11
    2cbc:	eor	w17, w17, w18, ror #25
    2cc0:	add	w13, w13, w17
    2cc4:	ror	w17, w12, #2
    2cc8:	eor	w17, w17, w12, ror #13
    2ccc:	ldp	w15, w16, [sp, #240]
    2cd0:	eor	w17, w17, w12, ror #22
    2cd4:	add	w14, w17, w14
    2cd8:	mov	w17, #0x208                 	// #520
    2cdc:	movk	w17, #0x8cc7, lsl #16
    2ce0:	add	w13, w13, w17
    2ce4:	str	w2, [sp, #268]
    2ce8:	add	w15, w15, w2
    2cec:	add	w2, w13, w9
    2cf0:	str	w9, [sp, #256]
    2cf4:	add	w9, w14, w13
    2cf8:	bic	w13, w1, w2
    2cfc:	and	w14, w18, w2
    2d00:	orr	w13, w14, w13
    2d04:	orr	w14, w9, w12
    2d08:	add	w13, w15, w13
    2d0c:	and	w15, w9, w12
    2d10:	and	w14, w14, w10
    2d14:	orr	w14, w14, w15
    2d18:	ror	w15, w2, #6
    2d1c:	eor	w15, w15, w2, ror #11
    2d20:	eor	w15, w15, w2, ror #25
    2d24:	add	w13, w13, w15
    2d28:	ror	w15, w9, #2
    2d2c:	mov	w17, #0xfffa                	// #65530
    2d30:	eor	w15, w15, w9, ror #13
    2d34:	movk	w17, #0x90be, lsl #16
    2d38:	eor	w15, w15, w9, ror #22
    2d3c:	add	w14, w15, w14
    2d40:	add	w13, w13, w17
    2d44:	ldp	w15, w17, [sp, #248]
    2d48:	str	w11, [sp, #284]
    2d4c:	add	w11, w13, w11
    2d50:	str	w18, [sp, #260]
    2d54:	add	w15, w15, w18
    2d58:	add	w13, w14, w13
    2d5c:	bic	w14, w18, w11
    2d60:	and	w18, w2, w11
    2d64:	add	w16, w16, w1
    2d68:	orr	w14, w18, w14
    2d6c:	orr	w18, w13, w9
    2d70:	add	w14, w16, w14
    2d74:	and	w16, w13, w9
    2d78:	and	w18, w18, w12
    2d7c:	orr	w16, w18, w16
    2d80:	ror	w18, w11, #6
    2d84:	eor	w18, w18, w11, ror #11
    2d88:	eor	w18, w18, w11, ror #25
    2d8c:	add	w14, w14, w18
    2d90:	ror	w18, w13, #2
    2d94:	eor	w18, w18, w13, ror #13
    2d98:	eor	w18, w18, w13, ror #22
    2d9c:	add	w16, w18, w16
    2da0:	mov	w18, #0x6ceb                	// #27883
    2da4:	movk	w18, #0xa450, lsl #16
    2da8:	add	w14, w14, w18
    2dac:	str	w10, [sp, #280]
    2db0:	add	w10, w14, w10
    2db4:	str	w1, [sp, #264]
    2db8:	add	w14, w16, w14
    2dbc:	bic	w16, w2, w10
    2dc0:	and	w1, w11, w10
    2dc4:	orr	w16, w1, w16
    2dc8:	orr	w1, w14, w13
    2dcc:	add	w15, w15, w16
    2dd0:	and	w16, w14, w13
    2dd4:	and	w1, w1, w9
    2dd8:	orr	w16, w1, w16
    2ddc:	ror	w1, w10, #6
    2de0:	eor	w1, w1, w10, ror #11
    2de4:	eor	w1, w1, w10, ror #25
    2de8:	mov	w18, #0xa3f7                	// #41975
    2dec:	add	w15, w15, w1
    2df0:	ror	w1, w14, #2
    2df4:	movk	w18, #0xbef9, lsl #16
    2df8:	eor	w1, w1, w14, ror #13
    2dfc:	eor	w1, w1, w14, ror #22
    2e00:	add	w15, w15, w18
    2e04:	add	w16, w1, w16
    2e08:	str	w12, [sp, #276]
    2e0c:	add	w12, w15, w12
    2e10:	str	w11, [sp, #284]
    2e14:	str	w10, [sp, #280]
    2e18:	add	w15, w16, w15
    2e1c:	ror	w16, w12, #6
    2e20:	bic	w11, w11, w12
    2e24:	and	w10, w10, w12
    2e28:	add	w17, w17, w2
    2e2c:	ror	w18, w15, #2
    2e30:	orr	w10, w10, w11
    2e34:	orr	w11, w15, w14
    2e38:	eor	w16, w16, w12, ror #11
    2e3c:	mov	w1, #0x78f2                	// #30962
    2e40:	str	w14, [sp, #264]
    2e44:	str	w12, [sp, #276]
    2e48:	and	w14, w15, w14
    2e4c:	eor	w18, w18, w15, ror #13
    2e50:	and	w11, w11, w13
    2e54:	eor	w12, w16, w12, ror #25
    2e58:	add	w10, w17, w10
    2e5c:	movk	w1, #0xc671, lsl #16
    2e60:	str	w13, [sp, #268]
    2e64:	eor	w13, w18, w15, ror #22
    2e68:	orr	w11, w11, w14
    2e6c:	add	w10, w10, w12
    2e70:	add	w11, w13, w11
    2e74:	add	w10, w10, w1
    2e78:	str	w9, [sp, #272]
    2e7c:	add	w9, w10, w9
    2e80:	add	w10, w11, w10
    2e84:	str	w2, [sp, #256]
    2e88:	str	w15, [sp, #260]
    2e8c:	str	w9, [sp, #272]
    2e90:	str	w10, [sp, #256]
    2e94:	ldr	w11, [x0, #16]
    2e98:	add	x9, sp, #0x100
    2e9c:	orr	x9, x9, #0x4
    2ea0:	add	w10, w10, w11
    2ea4:	str	w10, [x0, #16]
    2ea8:	add	x10, x0, #0x14
    2eac:	ldr	w11, [x9, x8]
    2eb0:	ldr	w12, [x10, x8]
    2eb4:	add	w11, w11, w12
    2eb8:	str	w11, [x10, x8]
    2ebc:	add	x8, x8, #0x4
    2ec0:	cmp	x8, #0x1c
    2ec4:	b.ne	2eac <PyInit__sha256@@Base+0x1e58>  // b.any
    2ec8:	ldr	x29, [sp, #288]
    2ecc:	add	sp, sp, #0x130
    2ed0:	ret
    2ed4:	stp	x29, x30, [sp, #-64]!
    2ed8:	str	x23, [sp, #16]
    2edc:	stp	x22, x21, [sp, #32]
    2ee0:	stp	x20, x19, [sp, #48]
    2ee4:	mov	x29, sp
    2ee8:	ldp	w9, w8, [x0, #48]
    2eec:	mov	x21, x2
    2ef0:	mov	x19, x0
    2ef4:	mov	x20, x1
    2ef8:	adds	w9, w9, w21, lsl #3
    2efc:	b.cc	2f08 <PyInit__sha256@@Base+0x1eb4>  // b.lo, b.ul, b.last
    2f00:	add	w8, w8, #0x1
    2f04:	str	w8, [x19, #52]
    2f08:	ldrsw	x10, [x19, #120]
    2f0c:	add	w8, w8, w21, lsr #29
    2f10:	stp	w9, w8, [x19, #48]
    2f14:	cbz	w10, 2f64 <PyInit__sha256@@Base+0x1f10>
    2f18:	mov	w8, #0x40                  	// #64
    2f1c:	sub	w8, w8, w10
    2f20:	sxtw	x8, w8
    2f24:	cmp	x8, x21
    2f28:	add	x9, x19, x10
    2f2c:	csel	x22, x21, x8, gt
    2f30:	add	x0, x9, #0x38
    2f34:	mov	x1, x20
    2f38:	mov	x2, x22
    2f3c:	bl	e50 <memcpy@plt>
    2f40:	ldr	w8, [x19, #120]
    2f44:	add	w8, w8, w22
    2f48:	cmp	w8, #0x40
    2f4c:	str	w8, [x19, #120]
    2f50:	b.ne	2fb4 <PyInit__sha256@@Base+0x1f60>  // b.any
    2f54:	mov	x0, x19
    2f58:	add	x20, x20, x22
    2f5c:	sub	x21, x21, x22
    2f60:	bl	1558 <PyInit__sha256@@Base+0x504>
    2f64:	cmp	x21, #0x40
    2f68:	add	x22, x19, #0x38
    2f6c:	b.lt	2f9c <PyInit__sha256@@Base+0x1f48>  // b.tstop
    2f70:	ldp	q0, q1, [x20, #32]
    2f74:	ldp	q2, q3, [x20], #64
    2f78:	mov	x0, x19
    2f7c:	sub	x23, x21, #0x40
    2f80:	stp	q0, q1, [x22, #32]
    2f84:	stp	q2, q3, [x22]
    2f88:	bl	1558 <PyInit__sha256@@Base+0x504>
    2f8c:	cmp	x21, #0x7f
    2f90:	mov	x21, x23
    2f94:	b.gt	2f70 <PyInit__sha256@@Base+0x1f1c>
    2f98:	b	2fa0 <PyInit__sha256@@Base+0x1f4c>
    2f9c:	mov	x23, x21
    2fa0:	mov	x0, x22
    2fa4:	mov	x1, x20
    2fa8:	mov	x2, x23
    2fac:	bl	e50 <memcpy@plt>
    2fb0:	str	w23, [x19, #120]
    2fb4:	ldp	x20, x19, [sp, #48]
    2fb8:	ldp	x22, x21, [sp, #32]
    2fbc:	ldr	x23, [sp, #16]
    2fc0:	ldp	x29, x30, [sp], #64
    2fc4:	ret
    2fc8:	mov	w0, #0x40                  	// #64
    2fcc:	b	ef0 <PyLong_FromLong@plt>
    2fd0:	ldr	w8, [x0, #124]
    2fd4:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    2fd8:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    2fdc:	add	x9, x9, #0x3be
    2fe0:	add	x10, x10, #0x478
    2fe4:	cmp	w8, #0x20
    2fe8:	csel	x0, x10, x9, eq  // eq = none
    2fec:	mov	w1, #0x6                   	// #6
    2ff0:	b	f60 <PyUnicode_FromStringAndSize@plt>
    2ff4:	sub	sp, sp, #0x80
    2ff8:	stp	x29, x30, [sp, #96]
    2ffc:	stp	x20, x19, [sp, #112]
    3000:	add	x29, sp, #0x60
    3004:	mov	x19, x2
    3008:	mov	x0, x1
    300c:	cbz	x3, 3044 <PyInit__sha256@@Base+0x1ff0>
    3010:	ldr	x20, [x3, #16]
    3014:	adrp	x4, 14000 <PyInit__sha256@@Base+0x12fac>
    3018:	add	x8, sp, #0x8
    301c:	add	x4, x4, #0x610
    3020:	mov	w6, #0x1                   	// #1
    3024:	mov	x1, x19
    3028:	mov	x2, xzr
    302c:	mov	w5, wzr
    3030:	mov	w7, wzr
    3034:	str	x8, [sp]
    3038:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    303c:	cbnz	x0, 3054 <PyInit__sha256@@Base+0x2000>
    3040:	b	3174 <PyInit__sha256@@Base+0x2120>
    3044:	mov	x20, xzr
    3048:	cbz	x0, 3014 <PyInit__sha256@@Base+0x1fc0>
    304c:	cmp	x19, #0x2
    3050:	b.cs	3014 <PyInit__sha256@@Base+0x1fc0>  // b.hs, b.nlast
    3054:	cmn	x20, x19
    3058:	b.eq	30bc <PyInit__sha256@@Base+0x2068>  // b.none
    305c:	ldr	x0, [x0]
    3060:	cbz	x0, 30bc <PyInit__sha256@@Base+0x2068>
    3064:	ldr	x8, [x0, #8]
    3068:	ldrb	w9, [x8, #171]
    306c:	tbnz	w9, #4, 3148 <PyInit__sha256@@Base+0x20f4>
    3070:	ldr	x8, [x8, #160]
    3074:	cbz	x8, 315c <PyInit__sha256@@Base+0x2108>
    3078:	ldr	x8, [x8]
    307c:	cbz	x8, 315c <PyInit__sha256@@Base+0x2108>
    3080:	add	x1, sp, #0x10
    3084:	mov	w2, wzr
    3088:	bl	f30 <PyObject_GetBuffer@plt>
    308c:	cmn	w0, #0x1
    3090:	b.eq	3174 <PyInit__sha256@@Base+0x2120>  // b.none
    3094:	ldr	w8, [sp, #52]
    3098:	cmp	w8, #0x2
    309c:	b.lt	318c <PyInit__sha256@@Base+0x2138>  // b.tstop
    30a0:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    30a4:	ldr	x8, [x8, #4024]
    30a8:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    30ac:	add	x1, x1, #0x434
    30b0:	ldr	x0, [x8]
    30b4:	bl	eb0 <PyErr_SetString@plt>
    30b8:	b	311c <PyInit__sha256@@Base+0x20c8>
    30bc:	mov	w20, wzr
    30c0:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    30c4:	add	x0, x0, #0x240
    30c8:	bl	f40 <_PyObject_New@plt>
    30cc:	cbz	x0, 3118 <PyInit__sha256@@Base+0x20c4>
    30d0:	adrp	x8, 3000 <PyInit__sha256@@Base+0x1fac>
    30d4:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    30d8:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    30dc:	ldr	q0, [x8, #848]
    30e0:	ldr	q1, [x9, #864]
    30e4:	ldr	d2, [x10, #912]
    30e8:	mov	x19, x0
    30ec:	str	xzr, [x0, #48]
    30f0:	stp	q0, q1, [x0, #16]
    30f4:	str	d2, [x0, #120]
    30f8:	bl	f10 <PyErr_Occurred@plt>
    30fc:	cbz	x0, 3128 <PyInit__sha256@@Base+0x20d4>
    3100:	ldr	x8, [x19]
    3104:	subs	x8, x8, #0x1
    3108:	str	x8, [x19]
    310c:	b.ne	3118 <PyInit__sha256@@Base+0x20c4>  // b.any
    3110:	mov	x0, x19
    3114:	bl	e90 <_Py_Dealloc@plt>
    3118:	cbz	w20, 3174 <PyInit__sha256@@Base+0x2120>
    311c:	add	x0, sp, #0x10
    3120:	bl	e60 <PyBuffer_Release@plt>
    3124:	b	3174 <PyInit__sha256@@Base+0x2120>
    3128:	cbz	w20, 3178 <PyInit__sha256@@Base+0x2124>
    312c:	ldr	x1, [sp, #16]
    3130:	ldr	x2, [sp, #32]
    3134:	mov	x0, x19
    3138:	bl	2ed4 <PyInit__sha256@@Base+0x1e80>
    313c:	add	x0, sp, #0x10
    3140:	bl	e60 <PyBuffer_Release@plt>
    3144:	b	3178 <PyInit__sha256@@Base+0x2124>
    3148:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    314c:	ldr	x8, [x8, #4032]
    3150:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    3154:	add	x1, x1, #0x3db
    3158:	b	316c <PyInit__sha256@@Base+0x2118>
    315c:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    3160:	ldr	x8, [x8, #4032]
    3164:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    3168:	add	x1, x1, #0x40a
    316c:	ldr	x0, [x8]
    3170:	bl	eb0 <PyErr_SetString@plt>
    3174:	mov	x19, xzr
    3178:	mov	x0, x19
    317c:	ldp	x20, x19, [sp, #112]
    3180:	ldp	x29, x30, [sp, #96]
    3184:	add	sp, sp, #0x80
    3188:	ret
    318c:	mov	w20, #0x1                   	// #1
    3190:	b	30c0 <PyInit__sha256@@Base+0x206c>
    3194:	sub	sp, sp, #0x80
    3198:	stp	x29, x30, [sp, #96]
    319c:	stp	x20, x19, [sp, #112]
    31a0:	add	x29, sp, #0x60
    31a4:	mov	x19, x2
    31a8:	mov	x0, x1
    31ac:	cbz	x3, 31e4 <PyInit__sha256@@Base+0x2190>
    31b0:	ldr	x20, [x3, #16]
    31b4:	adrp	x4, 14000 <PyInit__sha256@@Base+0x12fac>
    31b8:	add	x8, sp, #0x8
    31bc:	add	x4, x4, #0x650
    31c0:	mov	w6, #0x1                   	// #1
    31c4:	mov	x1, x19
    31c8:	mov	x2, xzr
    31cc:	mov	w5, wzr
    31d0:	mov	w7, wzr
    31d4:	str	x8, [sp]
    31d8:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    31dc:	cbnz	x0, 31f4 <PyInit__sha256@@Base+0x21a0>
    31e0:	b	3314 <PyInit__sha256@@Base+0x22c0>
    31e4:	mov	x20, xzr
    31e8:	cbz	x0, 31b4 <PyInit__sha256@@Base+0x2160>
    31ec:	cmp	x19, #0x2
    31f0:	b.cs	31b4 <PyInit__sha256@@Base+0x2160>  // b.hs, b.nlast
    31f4:	cmn	x20, x19
    31f8:	b.eq	325c <PyInit__sha256@@Base+0x2208>  // b.none
    31fc:	ldr	x0, [x0]
    3200:	cbz	x0, 325c <PyInit__sha256@@Base+0x2208>
    3204:	ldr	x8, [x0, #8]
    3208:	ldrb	w9, [x8, #171]
    320c:	tbnz	w9, #4, 32e8 <PyInit__sha256@@Base+0x2294>
    3210:	ldr	x8, [x8, #160]
    3214:	cbz	x8, 32fc <PyInit__sha256@@Base+0x22a8>
    3218:	ldr	x8, [x8]
    321c:	cbz	x8, 32fc <PyInit__sha256@@Base+0x22a8>
    3220:	add	x1, sp, #0x10
    3224:	mov	w2, wzr
    3228:	bl	f30 <PyObject_GetBuffer@plt>
    322c:	cmn	w0, #0x1
    3230:	b.eq	3314 <PyInit__sha256@@Base+0x22c0>  // b.none
    3234:	ldr	w8, [sp, #52]
    3238:	cmp	w8, #0x2
    323c:	b.lt	332c <PyInit__sha256@@Base+0x22d8>  // b.tstop
    3240:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    3244:	ldr	x8, [x8, #4024]
    3248:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    324c:	add	x1, x1, #0x434
    3250:	ldr	x0, [x8]
    3254:	bl	eb0 <PyErr_SetString@plt>
    3258:	b	32bc <PyInit__sha256@@Base+0x2268>
    325c:	mov	w20, wzr
    3260:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    3264:	add	x0, x0, #0xa0
    3268:	bl	f40 <_PyObject_New@plt>
    326c:	cbz	x0, 32b8 <PyInit__sha256@@Base+0x2264>
    3270:	adrp	x8, 3000 <PyInit__sha256@@Base+0x1fac>
    3274:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    3278:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    327c:	ldr	q0, [x8, #880]
    3280:	ldr	q1, [x9, #896]
    3284:	ldr	d2, [x10, #920]
    3288:	mov	x19, x0
    328c:	str	xzr, [x0, #48]
    3290:	stp	q0, q1, [x0, #16]
    3294:	str	d2, [x0, #120]
    3298:	bl	f10 <PyErr_Occurred@plt>
    329c:	cbz	x0, 32c8 <PyInit__sha256@@Base+0x2274>
    32a0:	ldr	x8, [x19]
    32a4:	subs	x8, x8, #0x1
    32a8:	str	x8, [x19]
    32ac:	b.ne	32b8 <PyInit__sha256@@Base+0x2264>  // b.any
    32b0:	mov	x0, x19
    32b4:	bl	e90 <_Py_Dealloc@plt>
    32b8:	cbz	w20, 3314 <PyInit__sha256@@Base+0x22c0>
    32bc:	add	x0, sp, #0x10
    32c0:	bl	e60 <PyBuffer_Release@plt>
    32c4:	b	3314 <PyInit__sha256@@Base+0x22c0>
    32c8:	cbz	w20, 3318 <PyInit__sha256@@Base+0x22c4>
    32cc:	ldr	x1, [sp, #16]
    32d0:	ldr	x2, [sp, #32]
    32d4:	mov	x0, x19
    32d8:	bl	2ed4 <PyInit__sha256@@Base+0x1e80>
    32dc:	add	x0, sp, #0x10
    32e0:	bl	e60 <PyBuffer_Release@plt>
    32e4:	b	3318 <PyInit__sha256@@Base+0x22c4>
    32e8:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    32ec:	ldr	x8, [x8, #4032]
    32f0:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    32f4:	add	x1, x1, #0x3db
    32f8:	b	330c <PyInit__sha256@@Base+0x22b8>
    32fc:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    3300:	ldr	x8, [x8, #4032]
    3304:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    3308:	add	x1, x1, #0x40a
    330c:	ldr	x0, [x8]
    3310:	bl	eb0 <PyErr_SetString@plt>
    3314:	mov	x19, xzr
    3318:	mov	x0, x19
    331c:	ldp	x20, x19, [sp, #112]
    3320:	ldp	x29, x30, [sp, #96]
    3324:	add	sp, sp, #0x80
    3328:	ret
    332c:	mov	w20, #0x1                   	// #1
    3330:	b	3260 <PyInit__sha256@@Base+0x220c>

Disassembly of section .fini:

0000000000003334 <.fini>:
    3334:	stp	x29, x30, [sp, #-16]!
    3338:	mov	x29, sp
    333c:	ldp	x29, x30, [sp], #16
    3340:	ret
