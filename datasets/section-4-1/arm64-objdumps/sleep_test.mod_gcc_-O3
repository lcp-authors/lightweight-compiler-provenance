
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sleep_test.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x410>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	add	x0, sp, #0x48
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	str	x23, [sp, #48]
  18:	bl	0 <grub_get_datetime>
  1c:	adrp	x3, 0 <grub_mod_init-0x410>
  20:	adrp	x2, 0 <grub_mod_init-0x410>
  24:	adrp	x1, 0 <grub_mod_init-0x410>
  28:	adrp	x4, 0 <grub_mod_init-0x410>
  2c:	ldr	x19, [x3]
  30:	cmp	w0, #0x0
  34:	ldr	x20, [x2]
  38:	mov	x2, x19
  3c:	ldr	x5, [x1]
  40:	mov	x1, x20
  44:	ldr	x4, [x4]
  48:	mov	w3, #0x25                  	// #37
  4c:	cset	w0, eq  // eq = none
  50:	bl	0 <grub_test_assert_helper>
  54:	mov	w0, #0x2710                	// #10000
  58:	bl	0 <grub_millisleep>
  5c:	add	x0, sp, #0x50
  60:	bl	0 <grub_get_datetime>
  64:	adrp	x2, 0 <grub_mod_init-0x410>
  68:	adrp	x1, 0 <grub_mod_init-0x410>
  6c:	cmp	w0, #0x0
  70:	mov	w3, #0x27                  	// #39
  74:	ldr	x5, [x2]
  78:	cset	w0, eq  // eq = none
  7c:	ldr	x4, [x1]
  80:	mov	x2, x19
  84:	mov	x1, x20
  88:	bl	0 <grub_test_assert_helper>
  8c:	adrp	x0, 0 <grub_mod_init-0x410>
  90:	ldrh	w3, [sp, #72]
  94:	ldp	x4, x5, [x19, #16]
  98:	stp	x4, x5, [sp, #104]
  9c:	ldr	x21, [x0]
  a0:	sub	w0, w3, #0x76d
  a4:	and	w0, w0, #0xffff
  a8:	cmp	w0, #0x89
  ac:	ldr	x1, [x21]
  b0:	str	x1, [sp, #88]
  b4:	ldr	w2, [x21, #8]
  b8:	ldr	x1, [x19, #32]
  bc:	str	w2, [sp, #96]
  c0:	str	x1, [sp, #120]
  c4:	b.hi	168 <grub_mod_init-0x2a8>  // b.pmore
  c8:	ldrb	w6, [sp, #74]
  cc:	sub	w4, w6, #0x1
  d0:	and	w0, w4, #0xff
  d4:	cmp	w0, #0xb
  d8:	b.hi	168 <grub_mod_init-0x2a8>  // b.pmore
  dc:	sub	w2, w3, #0x1
  e0:	sub	w0, w3, #0x7b5
  e4:	ldrb	w8, [sp, #75]
  e8:	mov	w11, #0x1f80                	// #8064
  ec:	asr	w2, w2, #2
  f0:	mov	w10, #0xec00                	// #60416
  f4:	sub	w1, w2, #0x1ed
  f8:	add	x2, sp, #0x68
  fc:	movk	w11, #0x786, lsl #16
 100:	movk	w10, #0x5a4, lsl #16
 104:	sub	w0, w0, w1, lsl #2
 108:	mov	w7, #0x3380                	// #13184
 10c:	ldrh	w5, [x2, w4, sxtw #1]
 110:	cmp	w0, #0x3
 114:	sub	w2, w8, #0x1
 118:	ccmp	w6, #0x2, #0x0, eq  // eq = none
 11c:	movk	w7, #0x1e1, lsl #16
 120:	add	x6, sp, #0x58
 124:	mov	w9, #0x5180                	// #20864
 128:	madd	w1, w1, w11, w10
 12c:	movk	w9, #0x1, lsl #16
 130:	madd	w1, w0, w7, w1
 134:	ldrb	w4, [x6, w4, sxtw]
 138:	madd	w1, w5, w9, w1
 13c:	mul	w2, w2, w9
 140:	b.hi	2d0 <grub_mod_init-0x140>  // b.pmore
 144:	add	w2, w1, w2
 148:	cmp	w8, w4
 14c:	b.ls	2e0 <grub_mod_init-0x130>  // b.plast
 150:	mov	w22, #0x0                   	// #0
 154:	cbz	w0, 170 <grub_mod_init-0x2a0>
 158:	ldrh	w1, [sp, #74]
 15c:	mov	w0, #0x1d02                	// #7426
 160:	cmp	w1, w0
 164:	b.eq	2e0 <grub_mod_init-0x130>  // b.none
 168:	mov	w22, #0x0                   	// #0
 16c:	mov	w0, #0x0                   	// #0
 170:	adrp	x2, 0 <grub_mod_init-0x410>
 174:	adrp	x1, 0 <grub_mod_init-0x410>
 178:	mov	w3, #0x28                  	// #40
 17c:	ldr	x4, [x2]
 180:	mov	x2, x19
 184:	ldr	x23, [x1]
 188:	mov	x1, x20
 18c:	mov	x5, x23
 190:	bl	0 <grub_test_assert_helper>
 194:	ldrh	w2, [sp, #80]
 198:	ldr	x1, [x21]
 19c:	str	x1, [sp, #88]
 1a0:	ldr	w3, [x21, #8]
 1a4:	sub	w0, w2, #0x76d
 1a8:	ldp	x4, x5, [x19, #16]
 1ac:	str	w3, [sp, #96]
 1b0:	ldr	x1, [x19, #32]
 1b4:	stp	x4, x5, [sp, #104]
 1b8:	and	w0, w0, #0xffff
 1bc:	str	x1, [sp, #120]
 1c0:	cmp	w0, #0x89
 1c4:	b.hi	268 <grub_mod_init-0x1a8>  // b.pmore
 1c8:	ldrb	w6, [sp, #82]
 1cc:	sub	w4, w6, #0x1
 1d0:	and	w0, w4, #0xff
 1d4:	cmp	w0, #0xb
 1d8:	b.hi	268 <grub_mod_init-0x1a8>  // b.pmore
 1dc:	sub	w1, w2, #0x1
 1e0:	add	x3, sp, #0x68
 1e4:	mov	w11, #0x1f80                	// #8064
 1e8:	mov	w10, #0xec00                	// #60416
 1ec:	asr	w1, w1, #2
 1f0:	movk	w10, #0x5a4, lsl #16
 1f4:	sub	w1, w1, #0x1ed
 1f8:	ldrb	w8, [sp, #83]
 1fc:	sub	w0, w2, #0x7b5
 200:	movk	w11, #0x786, lsl #16
 204:	ldrh	w5, [x3, w4, sxtw #1]
 208:	sub	w0, w0, w1, lsl #2
 20c:	mov	w7, #0x3380                	// #13184
 210:	madd	w1, w1, w11, w10
 214:	sub	w3, w8, #0x1
 218:	add	x10, sp, #0x58
 21c:	movk	w7, #0x1e1, lsl #16
 220:	mov	w9, #0x5180                	// #20864
 224:	movk	w9, #0x1, lsl #16
 228:	cmp	w0, #0x3
 22c:	madd	w1, w0, w7, w1
 230:	ldrb	w4, [x10, w4, sxtw]
 234:	madd	w1, w5, w9, w1
 238:	ccmp	w6, #0x2, #0x0, eq  // eq = none
 23c:	mul	w3, w3, w9
 240:	b.hi	340 <grub_mod_init-0xd0>  // b.pmore
 244:	add	w3, w1, w3
 248:	cmp	w8, w4
 24c:	b.ls	350 <grub_mod_init-0xc0>  // b.plast
 250:	mov	w21, #0x0                   	// #0
 254:	cbz	w0, 270 <grub_mod_init-0x1a0>
 258:	ldrh	w1, [sp, #82]
 25c:	mov	w0, #0x1d02                	// #7426
 260:	cmp	w1, w0
 264:	b.eq	350 <grub_mod_init-0xc0>  // b.none
 268:	mov	w21, #0x0                   	// #0
 26c:	mov	w0, #0x0                   	// #0
 270:	adrp	x1, 0 <grub_mod_init-0x410>
 274:	mov	x5, x23
 278:	mov	x2, x19
 27c:	mov	w3, #0x29                  	// #41
 280:	ldr	x4, [x1]
 284:	mov	x1, x20
 288:	bl	0 <grub_test_assert_helper>
 28c:	adrp	x3, 0 <grub_mod_init-0x410>
 290:	adrp	x0, 0 <grub_mod_init-0x410>
 294:	sub	w6, w21, w22
 298:	mov	x2, x19
 29c:	sub	w1, w6, #0x9
 2a0:	ldr	x5, [x3]
 2a4:	cmp	w1, #0x2
 2a8:	ldr	x4, [x0]
 2ac:	mov	x1, x20
 2b0:	cset	w0, ls  // ls = plast
 2b4:	mov	w3, #0x30                  	// #48
 2b8:	bl	0 <grub_test_assert_helper>
 2bc:	ldp	x19, x20, [sp, #16]
 2c0:	ldp	x21, x22, [sp, #32]
 2c4:	ldr	x23, [sp, #48]
 2c8:	ldp	x29, x30, [sp], #128
 2cc:	ret
 2d0:	add	w1, w1, w9
 2d4:	cmp	w8, w4
 2d8:	add	w2, w1, w2
 2dc:	b.hi	158 <grub_mod_init-0x2b8>  // b.pmore
 2e0:	cbz	w8, 168 <grub_mod_init-0x2a8>
 2e4:	ldrb	w0, [sp, #76]
 2e8:	cmp	w0, #0x17
 2ec:	b.hi	168 <grub_mod_init-0x2a8>  // b.pmore
 2f0:	ldrb	w1, [sp, #77]
 2f4:	cmp	w1, #0x3b
 2f8:	b.hi	168 <grub_mod_init-0x2a8>  // b.pmore
 2fc:	ldrb	w6, [sp, #78]
 300:	cmp	w6, #0x3c
 304:	b.hi	168 <grub_mod_init-0x2a8>  // b.pmore
 308:	mov	w22, #0xe10                 	// #3600
 30c:	lsl	w4, w1, #4
 310:	sub	w1, w4, w1
 314:	cmp	w3, #0x7bc
 318:	madd	w2, w0, w22, w2
 31c:	add	w2, w2, w1, lsl #2
 320:	add	w22, w6, w2
 324:	ccmp	w22, #0x0, #0x0, hi  // hi = pmore
 328:	b.lt	168 <grub_mod_init-0x2a8>  // b.tstop
 32c:	cmp	w3, #0x7a7
 330:	ccmp	w22, #0x0, #0x4, ls  // ls = plast
 334:	csel	w22, w22, wzr, le
 338:	cset	w0, le
 33c:	b	170 <grub_mod_init-0x2a0>
 340:	add	w1, w1, w9
 344:	cmp	w8, w4
 348:	add	w3, w1, w3
 34c:	b.hi	258 <grub_mod_init-0x1b8>  // b.pmore
 350:	cbz	w8, 268 <grub_mod_init-0x1a8>
 354:	ldrb	w0, [sp, #84]
 358:	cmp	w0, #0x17
 35c:	b.hi	268 <grub_mod_init-0x1a8>  // b.pmore
 360:	ldrb	w1, [sp, #85]
 364:	cmp	w1, #0x3b
 368:	b.hi	268 <grub_mod_init-0x1a8>  // b.pmore
 36c:	ldrb	w6, [sp, #86]
 370:	cmp	w6, #0x3c
 374:	b.hi	268 <grub_mod_init-0x1a8>  // b.pmore
 378:	mov	w4, #0xe10                 	// #3600
 37c:	lsl	w21, w1, #4
 380:	sub	w1, w21, w1
 384:	cmp	w2, #0x7bc
 388:	madd	w3, w0, w4, w3
 38c:	add	w3, w3, w1, lsl #2
 390:	add	w21, w6, w3
 394:	ccmp	w21, #0x0, #0x0, hi  // hi = pmore
 398:	b.lt	268 <grub_mod_init-0x1a8>  // b.tstop
 39c:	cmp	w2, #0x7a7
 3a0:	ccmp	w21, #0x0, #0x4, ls  // ls = plast
 3a4:	csel	w21, w21, wzr, le
 3a8:	cset	w0, le
 3ac:	b	270 <grub_mod_init-0x1a0>
	...

0000000000000410 <grub_mod_init>:
 410:	adrp	x1, 0 <grub_mod_init-0x410>
 414:	adrp	x0, 0 <grub_mod_init-0x410>
 418:	ldr	x1, [x1]
 41c:	ldr	x0, [x0]
 420:	b	0 <grub_test_register>
 424:	nop
	...

0000000000000438 <grub_mod_fini>:
 438:	adrp	x0, 0 <grub_mod_init-0x410>
 43c:	ldr	x0, [x0]
 440:	b	0 <grub_test_unregister>
 444:	nop
	...
