
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//serial.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_efiserial_init-0x1f0>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x4, #0x1                   	// #1
   8:	mov	x2, #0x1                   	// #1
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	w0, [x0, #64]
  1c:	movk	x4, #0x3, lsl #32
  20:	mov	w3, #0x2                   	// #2
  24:	movk	x2, #0x2, lsl #32
  28:	mov	w1, #0x3                   	// #3
  2c:	str	x4, [sp, #32]
  30:	str	w3, [sp, #40]
  34:	str	x2, [sp, #48]
  38:	str	w1, [sp, #56]
  3c:	cbnz	w0, 9c <grub_efiserial_init-0x154>
  40:	ldp	w5, w7, [x19, #40]
  44:	add	x6, sp, #0x30
  48:	ldr	x0, [x19, #72]
  4c:	add	x4, sp, #0x20
  50:	ldr	w6, [x6, x7, lsl #2]
  54:	mov	w3, #0x0                   	// #0
  58:	ldr	w1, [x19, #32]
  5c:	mov	w2, #0x0                   	// #0
  60:	ldr	w4, [x4, x5, lsl #2]
  64:	ldrb	w5, [x19, #36]
  68:	ldr	x7, [x0, #16]
  6c:	blr	x7
  70:	cbnz	x0, a8 <grub_efiserial_init-0x148>
  74:	ldr	x0, [x19, #72]
  78:	mov	w3, #0x4002                	// #16386
  7c:	ldr	w4, [x19, #56]
  80:	mov	w1, #0x2                   	// #2
  84:	ldr	x2, [x0, #24]
  88:	cmp	w4, #0x0
  8c:	csel	w1, w3, w1, ne  // ne = any
  90:	blr	x2
  94:	mov	w0, #0x1                   	// #1
  98:	str	w0, [x19, #64]
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #64
  a4:	ret
  a8:	mov	w0, #0x1                   	// #1
  ac:	str	w0, [x19, #68]
  b0:	b	74 <grub_efiserial_init-0x17c>
  b4:	nop
  b8:	stp	x29, x30, [sp, #-48]!
  bc:	mov	x1, #0x1                   	// #1
  c0:	mov	x29, sp
  c4:	str	x19, [sp, #16]
  c8:	mov	x19, x0
  cc:	str	x1, [sp, #40]
  d0:	bl	0 <grub_efiserial_init-0x1f0>
  d4:	ldr	w0, [x19, #68]
  d8:	cbnz	w0, 10c <grub_efiserial_init-0xe4>
  dc:	ldr	x0, [x19, #72]
  e0:	add	x2, sp, #0x27
  e4:	add	x1, sp, #0x28
  e8:	ldr	x3, [x0, #48]
  ec:	blr	x3
  f0:	cbnz	x0, 10c <grub_efiserial_init-0xe4>
  f4:	ldr	x0, [sp, #40]
  f8:	cbz	x0, 10c <grub_efiserial_init-0xe4>
  fc:	ldrb	w0, [sp, #39]
 100:	ldr	x19, [sp, #16]
 104:	ldp	x29, x30, [sp], #48
 108:	ret
 10c:	mov	w0, #0xffffffff            	// #-1
 110:	b	100 <grub_efiserial_init-0xf0>
 114:	nop
 118:	stp	x29, x30, [sp, #-48]!
 11c:	mov	x2, #0x1                   	// #1
 120:	mov	x29, sp
 124:	str	x19, [sp, #16]
 128:	mov	x19, x0
 12c:	strb	w1, [sp, #39]
 130:	str	x2, [sp, #40]
 134:	bl	0 <grub_efiserial_init-0x1f0>
 138:	ldr	w0, [x19, #68]
 13c:	cbnz	w0, 154 <grub_efiserial_init-0x9c>
 140:	ldr	x0, [x19, #72]
 144:	add	x2, sp, #0x27
 148:	add	x1, sp, #0x28
 14c:	ldr	x3, [x0, #40]
 150:	blr	x3
 154:	ldr	x19, [sp, #16]
 158:	ldp	x29, x30, [sp], #48
 15c:	ret
 160:	mov	x2, x0
 164:	ldr	w0, [x1, #8]
 168:	cmp	w0, #0x2
 16c:	b.hi	1a8 <grub_efiserial_init-0x48>  // b.pmore
 170:	ldr	w0, [x1, #12]
 174:	cmp	w0, #0x2
 178:	b.hi	1b8 <grub_efiserial_init-0x38>  // b.pmore
 17c:	ldr	w0, [x1, #4]
 180:	sub	w0, w0, #0x5
 184:	cmp	w0, #0x3
 188:	b.hi	1c8 <grub_efiserial_init-0x28>  // b.pmore
 18c:	ldp	x4, x5, [x1]
 190:	stp	x4, x5, [x2, #32]
 194:	mov	w0, #0x0                   	// #0
 198:	ldp	x4, x5, [x1, #16]
 19c:	stp	x4, x5, [x2, #48]
 1a0:	str	wzr, [x2, #64]
 1a4:	ret
 1a8:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 1ac:	mov	w0, #0x12                  	// #18
 1b0:	ldr	x1, [x1]
 1b4:	b	0 <grub_error>
 1b8:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 1bc:	mov	w0, #0x12                  	// #18
 1c0:	ldr	x1, [x1]
 1c4:	b	0 <grub_error>
 1c8:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 1cc:	mov	w0, #0x12                  	// #18
 1d0:	ldr	x1, [x1]
 1d4:	b	0 <grub_error>
	...

00000000000001f0 <grub_efiserial_init>:
 1f0:	stp	x29, x30, [sp, #-128]!
 1f4:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 1f8:	mov	x2, #0x0                   	// #0
 1fc:	mov	x29, sp
 200:	stp	x21, x22, [sp, #32]
 204:	add	x3, sp, #0x58
 208:	mov	w0, #0x2                   	// #2
 20c:	ldr	x22, [x1]
 210:	mov	x1, x22
 214:	bl	0 <grub_efi_locate_handle>
 218:	cbz	x0, 30c <grub_efiserial_init+0x11c>
 21c:	stp	x25, x26, [sp, #64]
 220:	mov	x25, x0
 224:	ldr	x0, [sp, #88]
 228:	sub	x1, x0, #0x1
 22c:	str	x1, [sp, #88]
 230:	cbz	x0, 320 <grub_efiserial_init+0x130>
 234:	mov	x21, x25
 238:	stp	x19, x20, [sp, #16]
 23c:	stp	x23, x24, [sp, #48]
 240:	mov	w23, #0x0                   	// #0
 244:	adrp	x24, 0 <grub_efiserial_init-0x1f0>
 248:	b	264 <grub_efiserial_init+0x74>
 24c:	mov	x0, x19
 250:	bl	7c0 <grub_serial_register>
 254:	ldr	x0, [sp, #88]
 258:	sub	x1, x0, #0x1
 25c:	str	x1, [sp, #88]
 260:	cbz	x0, 318 <grub_efiserial_init+0x128>
 264:	ldr	x0, [x21]
 268:	mov	x1, x22
 26c:	mov	w2, #0x2                   	// #2
 270:	add	w26, w23, #0x1
 274:	add	x21, x21, #0x8
 278:	bl	0 <grub_efi_open_protocol>
 27c:	mov	x20, x0
 280:	mov	x0, #0xc0                  	// #192
 284:	cbz	x20, 254 <grub_efiserial_init+0x64>
 288:	bl	0 <grub_zalloc>
 28c:	mov	x19, x0
 290:	mov	x0, #0x18                  	// #24
 294:	cbz	x19, 338 <grub_efiserial_init+0x148>
 298:	bl	0 <grub_malloc>
 29c:	str	x0, [x19, #16]
 2a0:	mov	w3, w23
 2a4:	mov	x1, #0x18                  	// #24
 2a8:	mov	w23, w26
 2ac:	cbz	x0, 2f8 <grub_efiserial_init+0x108>
 2b0:	ldr	x2, [x24]
 2b4:	bl	0 <grub_snprintf>
 2b8:	str	x20, [x19, #72]
 2bc:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 2c0:	add	x0, x22, #0x10
 2c4:	str	x0, [x19, #24]
 2c8:	mov	x0, x19
 2cc:	ldr	x2, [x1]
 2d0:	add	x1, sp, #0x60
 2d4:	ldr	x3, [x22, #16]
 2d8:	ldp	x4, x5, [x2]
 2dc:	stp	x4, x5, [sp, #96]
 2e0:	ldp	x4, x5, [x2, #16]
 2e4:	stp	x4, x5, [sp, #112]
 2e8:	blr	x3
 2ec:	cbz	w0, 24c <grub_efiserial_init+0x5c>
 2f0:	bl	0 <grub_print_error>
 2f4:	b	24c <grub_efiserial_init+0x5c>
 2f8:	mov	x0, x19
 2fc:	bl	0 <grub_free>
 300:	ldp	x19, x20, [sp, #16]
 304:	ldp	x23, x24, [sp, #48]
 308:	ldp	x25, x26, [sp, #64]
 30c:	ldp	x21, x22, [sp, #32]
 310:	ldp	x29, x30, [sp], #128
 314:	ret
 318:	ldp	x19, x20, [sp, #16]
 31c:	ldp	x23, x24, [sp, #48]
 320:	mov	x0, x25
 324:	bl	0 <grub_free>
 328:	ldp	x21, x22, [sp, #32]
 32c:	ldp	x25, x26, [sp, #64]
 330:	ldp	x29, x30, [sp], #128
 334:	ret
 338:	ldp	x19, x20, [sp, #16]
 33c:	ldp	x21, x22, [sp, #32]
 340:	ldp	x23, x24, [sp, #48]
 344:	ldp	x25, x26, [sp, #64]
 348:	ldp	x29, x30, [sp], #128
 34c:	ret
	...
 368:	ldr	x0, [x0, #136]
 36c:	ldr	x0, [x0, #88]
 370:	ldr	x2, [x0, #24]
 374:	ldr	x2, [x2, #16]
 378:	mov	x16, x2
 37c:	br	x16
 380:	ldr	x0, [x0, #56]
 384:	ldr	x0, [x0, #40]
 388:	ldr	x1, [x0, #24]
 38c:	ldr	x1, [x1, #8]
 390:	mov	x16, x1
 394:	br	x16

0000000000000398 <grub_serial_find>:
 398:	stp	x29, x30, [sp, #-32]!
 39c:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 3a0:	mov	x29, sp
 3a4:	stp	x19, x20, [sp, #16]
 3a8:	mov	x20, x0
 3ac:	ldr	x0, [x1]
 3b0:	ldr	x19, [x0]
 3b4:	cbnz	x19, 3c4 <grub_serial_find+0x2c>
 3b8:	b	3e4 <grub_serial_find+0x4c>
 3bc:	ldr	x19, [x19]
 3c0:	cbz	x19, 3e4 <grub_serial_find+0x4c>
 3c4:	ldr	x0, [x19, #16]
 3c8:	mov	x1, x20
 3cc:	bl	0 <grub_strcmp>
 3d0:	cbnz	w0, 3bc <grub_serial_find+0x24>
 3d4:	mov	x0, x19
 3d8:	ldp	x19, x20, [sp, #16]
 3dc:	ldp	x29, x30, [sp], #32
 3e0:	ret
 3e4:	mov	x19, #0x0                   	// #0
 3e8:	mov	x0, x19
 3ec:	ldp	x19, x20, [sp, #16]
 3f0:	ldp	x29, x30, [sp], #32
 3f4:	ret
	...
 400:	stp	x29, x30, [sp, #-128]!
 404:	mov	x29, sp
 408:	stp	x19, x20, [sp, #16]
 40c:	mov	w20, w1
 410:	ldr	x19, [x0, #8]
 414:	stp	x21, x22, [sp, #32]
 418:	mov	x22, x2
 41c:	ldr	w0, [x19]
 420:	cbnz	w0, 4f8 <grub_serial_find+0x160>
 424:	ldr	w0, [x19, #16]
 428:	cbnz	w0, 4c0 <grub_serial_find+0x128>
 42c:	cmp	w1, #0x0
 430:	b.le	654 <grub_serial_find+0x2bc>
 434:	ldr	x21, [x22]
 438:	cbz	x21, 654 <grub_serial_find+0x2bc>
 43c:	mov	x0, x21
 440:	bl	398 <grub_serial_find>
 444:	mov	x20, x0
 448:	cbz	x0, 6bc <grub_serial_find+0x324>
 44c:	ldp	x2, x3, [x0, #32]
 450:	stp	x2, x3, [sp, #56]
 454:	ldp	x2, x3, [x0, #48]
 458:	ldr	w0, [x19, #32]
 45c:	stp	x2, x3, [sp, #72]
 460:	cbnz	w0, 530 <grub_serial_find+0x198>
 464:	ldr	w0, [x19, #48]
 468:	cbnz	w0, 63c <grub_serial_find+0x2a4>
 46c:	ldr	w0, [x19, #64]
 470:	cbnz	w0, 55c <grub_serial_find+0x1c4>
 474:	ldr	w0, [x19, #112]
 478:	cbnz	w0, 57c <grub_serial_find+0x1e4>
 47c:	ldr	w0, [x19, #80]
 480:	cbnz	w0, 5a0 <grub_serial_find+0x208>
 484:	ldr	w0, [x19, #96]
 488:	cbnz	w0, 5c0 <grub_serial_find+0x228>
 48c:	ldr	w0, [sp, #56]
 490:	cbnz	w0, 49c <grub_serial_find+0x104>
 494:	mov	w0, #0x2580                	// #9600
 498:	str	w0, [sp, #56]
 49c:	ldr	x2, [x20, #24]
 4a0:	mov	x0, x20
 4a4:	add	x1, sp, #0x38
 4a8:	ldr	x2, [x2]
 4ac:	blr	x2
 4b0:	ldp	x19, x20, [sp, #16]
 4b4:	ldp	x21, x22, [sp, #32]
 4b8:	ldp	x29, x30, [sp], #128
 4bc:	ret
 4c0:	add	x21, sp, #0x58
 4c4:	ldr	x0, [x19, #24]
 4c8:	mov	w2, #0x0                   	// #0
 4cc:	mov	x1, #0x0                   	// #0
 4d0:	bl	0 <grub_strtoul>
 4d4:	mov	x3, x0
 4d8:	adrp	x2, 0 <grub_efiserial_init-0x1f0>
 4dc:	mov	x0, x21
 4e0:	mov	x1, #0x28                  	// #40
 4e4:	ldr	x2, [x2]
 4e8:	bl	0 <grub_snprintf>
 4ec:	cmp	w20, #0x0
 4f0:	b.gt	434 <grub_serial_find+0x9c>
 4f4:	b	43c <grub_serial_find+0xa4>
 4f8:	ldr	x0, [x19, #8]
 4fc:	mov	w2, #0x0                   	// #0
 500:	mov	x1, #0x0                   	// #0
 504:	add	x21, sp, #0x58
 508:	bl	0 <grub_strtoul>
 50c:	mov	x3, x0
 510:	adrp	x2, 0 <grub_efiserial_init-0x1f0>
 514:	mov	x0, x21
 518:	mov	x1, #0x28                  	// #40
 51c:	ldr	x2, [x2]
 520:	bl	0 <grub_snprintf>
 524:	ldr	w0, [x19, #16]
 528:	cbz	w0, 4ec <grub_serial_find+0x154>
 52c:	b	4c4 <grub_serial_find+0x12c>
 530:	ldr	x0, [x19, #40]
 534:	mov	w2, #0x0                   	// #0
 538:	mov	x1, #0x0                   	// #0
 53c:	bl	0 <grub_strtoul>
 540:	str	w0, [sp, #56]
 544:	cbnz	w0, 464 <grub_serial_find+0xcc>
 548:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 54c:	mov	w0, #0x12                  	// #18
 550:	ldr	x1, [x1]
 554:	bl	0 <grub_error>
 558:	b	4b0 <grub_serial_find+0x118>
 55c:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 560:	ldr	x0, [x19, #72]
 564:	ldr	x1, [x1]
 568:	bl	0 <grub_strcmp>
 56c:	cbnz	w0, 660 <grub_serial_find+0x2c8>
 570:	ldr	w0, [x19, #112]
 574:	str	wzr, [sp, #64]
 578:	cbz	w0, 47c <grub_serial_find+0xe4>
 57c:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 580:	ldr	x0, [x19, #120]
 584:	ldr	x1, [x1]
 588:	bl	0 <grub_strcmp>
 58c:	cbnz	w0, 680 <grub_serial_find+0x2e8>
 590:	mov	w0, #0x1                   	// #1
 594:	str	w0, [sp, #80]
 598:	ldr	w0, [x19, #80]
 59c:	cbz	w0, 484 <grub_serial_find+0xec>
 5a0:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 5a4:	ldr	x0, [x19, #88]
 5a8:	ldr	x1, [x1]
 5ac:	bl	0 <grub_strcmp>
 5b0:	cbnz	w0, 69c <grub_serial_find+0x304>
 5b4:	ldr	w0, [x19, #96]
 5b8:	str	wzr, [sp, #68]
 5bc:	cbz	w0, 48c <grub_serial_find+0xf4>
 5c0:	ldr	x0, [x19, #104]
 5c4:	add	x1, sp, #0x30
 5c8:	mov	w2, #0x0                   	// #0
 5cc:	bl	0 <grub_strtoull>
 5d0:	mov	x1, x0
 5d4:	adrp	x2, 0 <grub_efiserial_init-0x1f0>
 5d8:	str	x1, [sp, #72]
 5dc:	ldr	x0, [x2]
 5e0:	ldr	w0, [x0]
 5e4:	cbnz	w0, 4b0 <grub_serial_find+0x118>
 5e8:	ldr	x2, [sp, #48]
 5ec:	cbz	x2, 48c <grub_serial_find+0xf4>
 5f0:	ldrb	w0, [x2]
 5f4:	cmp	w0, #0x4d
 5f8:	b.ne	610 <grub_serial_find+0x278>  // b.any
 5fc:	mov	x0, #0x4240                	// #16960
 600:	movk	x0, #0xf, lsl #16
 604:	mul	x1, x1, x0
 608:	str	x1, [sp, #72]
 60c:	ldrb	w0, [x2]
 610:	and	w0, w0, #0xffffffdf
 614:	and	w0, w0, #0xff
 618:	cmp	w0, #0x4b
 61c:	b.ne	48c <grub_serial_find+0xf4>  // b.any
 620:	ldr	x1, [sp, #72]
 624:	lsl	x0, x1, #5
 628:	sub	x0, x0, x1
 62c:	add	x0, x1, x0, lsl #2
 630:	lsl	x0, x0, #3
 634:	str	x0, [sp, #72]
 638:	b	48c <grub_serial_find+0xf4>
 63c:	ldr	x0, [x19, #56]
 640:	mov	w2, #0x0                   	// #0
 644:	mov	x1, #0x0                   	// #0
 648:	bl	0 <grub_strtoul>
 64c:	str	w0, [sp, #60]
 650:	b	46c <grub_serial_find+0xd4>
 654:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 658:	ldr	x21, [x0]
 65c:	b	43c <grub_serial_find+0xa4>
 660:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 664:	ldr	x0, [x19, #72]
 668:	ldr	x1, [x1]
 66c:	bl	0 <grub_strcmp>
 670:	cbnz	w0, 6d4 <grub_serial_find+0x33c>
 674:	mov	w0, #0x1                   	// #1
 678:	str	w0, [sp, #64]
 67c:	b	474 <grub_serial_find+0xdc>
 680:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 684:	ldr	x0, [x19, #120]
 688:	ldr	x1, [x1]
 68c:	bl	0 <grub_strcmp>
 690:	cbnz	w0, 714 <grub_serial_find+0x37c>
 694:	str	wzr, [sp, #80]
 698:	b	47c <grub_serial_find+0xe4>
 69c:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 6a0:	ldr	x0, [x19, #88]
 6a4:	ldr	x1, [x1]
 6a8:	bl	0 <grub_strcmp>
 6ac:	cbnz	w0, 6f4 <grub_serial_find+0x35c>
 6b0:	mov	w0, #0x2                   	// #2
 6b4:	str	w0, [sp, #68]
 6b8:	b	484 <grub_serial_find+0xec>
 6bc:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 6c0:	mov	x2, x21
 6c4:	mov	w0, #0x12                  	// #18
 6c8:	ldr	x1, [x1]
 6cc:	bl	0 <grub_error>
 6d0:	b	4b0 <grub_serial_find+0x118>
 6d4:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 6d8:	ldr	x0, [x19, #72]
 6dc:	ldr	x1, [x1]
 6e0:	bl	0 <grub_strcmp>
 6e4:	cbnz	w0, 548 <grub_serial_find+0x1b0>
 6e8:	mov	w0, #0x2                   	// #2
 6ec:	str	w0, [sp, #64]
 6f0:	b	474 <grub_serial_find+0xdc>
 6f4:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 6f8:	ldr	x0, [x19, #88]
 6fc:	ldr	x1, [x1]
 700:	bl	0 <grub_strcmp>
 704:	cbnz	w0, 728 <grub_serial_find+0x390>
 708:	mov	w0, #0x1                   	// #1
 70c:	str	w0, [sp, #68]
 710:	b	484 <grub_serial_find+0xec>
 714:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 718:	mov	w0, #0x12                  	// #18
 71c:	ldr	x1, [x1]
 720:	bl	0 <grub_error>
 724:	b	4b0 <grub_serial_find+0x118>
 728:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 72c:	mov	w0, #0x12                  	// #18
 730:	ldr	x1, [x1]
 734:	bl	0 <grub_error>
 738:	b	4b0 <grub_serial_find+0x118>
 73c:	nop
	...

00000000000007c0 <grub_serial_register>:
 7c0:	stp	x29, x30, [sp, #-80]!
 7c4:	mov	x29, sp
 7c8:	stp	x23, x24, [sp, #48]
 7cc:	mov	x23, x0
 7d0:	mov	x0, #0x40                  	// #64
 7d4:	bl	0 <grub_malloc>
 7d8:	cbz	x0, 924 <grub_serial_register+0x164>
 7dc:	stp	x19, x20, [sp, #16]
 7e0:	mov	x19, x0
 7e4:	mov	x0, #0x30                  	// #48
 7e8:	stp	x21, x22, [sp, #32]
 7ec:	bl	0 <grub_malloc>
 7f0:	mov	x21, x0
 7f4:	cbz	x0, 9bc <grub_serial_register+0x1fc>
 7f8:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 7fc:	str	x25, [sp, #64]
 800:	mov	x2, #0x40                  	// #64
 804:	mov	x0, x19
 808:	ldr	x25, [x1]
 80c:	mov	x1, x25
 810:	bl	0 <grub_memmove>
 814:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 818:	ldr	x1, [x23, #16]
 81c:	str	x21, [x19, #56]
 820:	ldr	x0, [x0]
 824:	bl	0 <grub_xasprintf>
 828:	str	x0, [x19, #16]
 82c:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 830:	mov	x0, x21
 834:	mov	x2, #0x30                  	// #48
 838:	ldr	x24, [x1]
 83c:	add	x1, x24, #0x8
 840:	bl	0 <grub_memmove>
 844:	ldr	x0, [x19, #16]
 848:	cbz	x0, 960 <grub_serial_register+0x1a0>
 84c:	mov	x0, #0x90                  	// #144
 850:	bl	0 <grub_zalloc>
 854:	mov	x20, x0
 858:	cbz	x0, 9f0 <grub_serial_register+0x230>
 85c:	mov	x0, #0x60                  	// #96
 860:	bl	0 <grub_malloc>
 864:	mov	x22, x0
 868:	cbz	x0, a08 <grub_serial_register+0x248>
 86c:	add	x1, x25, #0x40
 870:	mov	x2, #0x90                  	// #144
 874:	mov	x0, x20
 878:	bl	0 <grub_memmove>
 87c:	ldr	x0, [x19, #16]
 880:	str	x0, [x20, #16]
 884:	str	x22, [x20, #136]
 888:	mov	x2, #0x60                  	// #96
 88c:	add	x1, x24, #0x38
 890:	mov	x0, x22
 894:	bl	0 <grub_memmove>
 898:	mov	x1, x23
 89c:	mov	x0, x24
 8a0:	bl	0 <grub_list_push>
 8a4:	ldr	x3, [x19, #56]
 8a8:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 8ac:	ldr	x2, [x20, #136]
 8b0:	mov	x0, x20
 8b4:	ldr	x1, [x1]
 8b8:	str	x23, [x3, #40]
 8bc:	str	x23, [x2, #88]
 8c0:	stp	x20, x19, [x23, #176]
 8c4:	bl	0 <grub_terminfo_output_register>
 8c8:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 8cc:	ldr	x21, [x0]
 8d0:	ldr	x0, [x21]
 8d4:	cbz	x0, 93c <grub_serial_register+0x17c>
 8d8:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 8dc:	mov	x1, x19
 8e0:	ldr	x0, [x0]
 8e4:	bl	0 <grub_list_push>
 8e8:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 8ec:	ldr	x19, [x0]
 8f0:	ldr	x0, [x19]
 8f4:	cbz	x0, 994 <grub_serial_register+0x1d4>
 8f8:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 8fc:	mov	x1, x20
 900:	ldr	x0, [x0]
 904:	bl	0 <grub_list_push>
 908:	mov	w0, #0x0                   	// #0
 90c:	ldp	x19, x20, [sp, #16]
 910:	ldp	x21, x22, [sp, #32]
 914:	ldp	x23, x24, [sp, #48]
 918:	ldr	x25, [sp, #64]
 91c:	ldp	x29, x30, [sp], #80
 920:	ret
 924:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 928:	ldr	x0, [x0]
 92c:	ldr	w0, [x0]
 930:	ldp	x23, x24, [sp, #48]
 934:	ldp	x29, x30, [sp], #80
 938:	ret
 93c:	ldr	x1, [x19, #24]
 940:	cbz	x1, 950 <grub_serial_register+0x190>
 944:	mov	x0, x19
 948:	blr	x1
 94c:	cbnz	w0, 8e8 <grub_serial_register+0x128>
 950:	mov	x1, x19
 954:	mov	x0, x21
 958:	bl	0 <grub_list_push>
 95c:	b	8e8 <grub_serial_register+0x128>
 960:	mov	x0, x19
 964:	bl	0 <grub_free>
 968:	mov	x0, x21
 96c:	bl	0 <grub_free>
 970:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 974:	ldp	x19, x20, [sp, #16]
 978:	ldr	x0, [x0]
 97c:	ldp	x21, x22, [sp, #32]
 980:	ldr	w0, [x0]
 984:	ldp	x23, x24, [sp, #48]
 988:	ldr	x25, [sp, #64]
 98c:	ldp	x29, x30, [sp], #80
 990:	ret
 994:	ldr	x1, [x20, #24]
 998:	cbz	x1, 9e4 <grub_serial_register+0x224>
 99c:	mov	x0, x20
 9a0:	blr	x1
 9a4:	cbz	w0, 9e4 <grub_serial_register+0x224>
 9a8:	mov	w0, #0x0                   	// #0
 9ac:	ldp	x19, x20, [sp, #16]
 9b0:	ldp	x21, x22, [sp, #32]
 9b4:	ldr	x25, [sp, #64]
 9b8:	b	930 <grub_serial_register+0x170>
 9bc:	mov	x0, x19
 9c0:	bl	0 <grub_free>
 9c4:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 9c8:	ldp	x19, x20, [sp, #16]
 9cc:	ldr	x0, [x0]
 9d0:	ldp	x21, x22, [sp, #32]
 9d4:	ldr	w0, [x0]
 9d8:	ldp	x23, x24, [sp, #48]
 9dc:	ldp	x29, x30, [sp], #80
 9e0:	ret
 9e4:	mov	x1, x20
 9e8:	mov	x0, x19
 9ec:	b	904 <grub_serial_register+0x144>
 9f0:	mov	x0, x21
 9f4:	bl	0 <grub_free>
 9f8:	ldr	x0, [x19, #16]
 9fc:	bl	0 <grub_free>
 a00:	mov	x0, x19
 a04:	b	96c <grub_serial_register+0x1ac>
 a08:	mov	x0, x21
 a0c:	bl	0 <grub_free>
 a10:	ldr	x0, [x19, #16]
 a14:	bl	0 <grub_free>
 a18:	mov	x0, x20
 a1c:	b	9fc <grub_serial_register+0x23c>
	...

0000000000000a68 <grub_serial_unregister>:
 a68:	stp	x29, x30, [sp, #-32]!
 a6c:	mov	x29, sp
 a70:	ldr	x1, [x0, #24]
 a74:	stp	x19, x20, [sp, #16]
 a78:	mov	x19, x0
 a7c:	ldr	x1, [x1, #24]
 a80:	cbz	x1, a88 <grub_serial_unregister+0x20>
 a84:	blr	x1
 a88:	ldr	x20, [x19, #184]
 a8c:	cbz	x20, aa0 <grub_serial_unregister+0x38>
 a90:	mov	x0, x20
 a94:	bl	0 <grub_list_remove>
 a98:	mov	x0, x20
 a9c:	bl	0 <grub_list_remove>
 aa0:	ldr	x20, [x19, #176]
 aa4:	cbz	x20, ab8 <grub_serial_unregister+0x50>
 aa8:	mov	x0, x20
 aac:	bl	0 <grub_list_remove>
 ab0:	mov	x0, x20
 ab4:	bl	0 <grub_list_remove>
 ab8:	mov	x0, x19
 abc:	ldp	x19, x20, [sp, #16]
 ac0:	ldp	x29, x30, [sp], #32
 ac4:	b	0 <grub_list_remove>

0000000000000ac8 <grub_serial_unregister_driver>:
 ac8:	stp	x29, x30, [sp, #-32]!
 acc:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 ad0:	mov	x29, sp
 ad4:	stp	x19, x20, [sp, #16]
 ad8:	mov	x20, x0
 adc:	ldr	x0, [x1]
 ae0:	ldr	x19, [x0]
 ae4:	nop
 ae8:	cbz	x19, b08 <grub_serial_unregister_driver+0x40>
 aec:	ldr	x1, [x19, #24]
 af0:	mov	x0, x19
 af4:	ldr	x19, [x19]
 af8:	cmp	x1, x20
 afc:	b.ne	ae8 <grub_serial_unregister_driver+0x20>  // b.any
 b00:	bl	a68 <grub_serial_unregister>
 b04:	cbnz	x19, aec <grub_serial_unregister_driver+0x24>
 b08:	ldp	x19, x20, [sp, #16]
 b0c:	ldp	x29, x30, [sp], #32
 b10:	ret
 b14:	nop
	...

0000000000000b20 <grub_mod_init>:
 b20:	stp	x29, x30, [sp, #-32]!
 b24:	adrp	x4, 0 <grub_efiserial_init-0x1f0>
 b28:	adrp	x3, 0 <grub_efiserial_init-0x1f0>
 b2c:	adrp	x1, 0 <grub_efiserial_init-0x1f0>
 b30:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 b34:	adrp	x5, 0 <grub_efiserial_init-0x1f0>
 b38:	mov	x29, sp
 b3c:	ldr	x4, [x4]
 b40:	stp	x19, x20, [sp, #16]
 b44:	mov	w2, #0x0                   	// #0
 b48:	ldr	x3, [x3]
 b4c:	ldr	x1, [x1]
 b50:	ldr	x0, [x0]
 b54:	ldr	x20, [x5]
 b58:	mov	x5, x20
 b5c:	bl	0 <grub_register_extcmd>
 b60:	mov	x3, x0
 b64:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 b68:	add	x1, x20, #0x168
 b6c:	mov	x2, #0x60                  	// #96
 b70:	ldr	x19, [x0]
 b74:	add	x0, x19, #0x38
 b78:	str	x3, [x19, #152]
 b7c:	bl	0 <grub_memmove>
 b80:	add	x1, x20, #0x1c8
 b84:	add	x0, x19, #0x8
 b88:	mov	x2, #0x30                  	// #48
 b8c:	bl	0 <grub_memmove>
 b90:	ldp	x19, x20, [sp, #16]
 b94:	ldp	x29, x30, [sp], #32
 b98:	b	1f0 <grub_efiserial_init>
 b9c:	nop
	...

0000000000000bd0 <grub_mod_fini>:
 bd0:	stp	x29, x30, [sp, #-32]!
 bd4:	adrp	x0, 0 <grub_efiserial_init-0x1f0>
 bd8:	mov	x29, sp
 bdc:	str	x19, [sp, #16]
 be0:	ldr	x19, [x0]
 be4:	ldr	x0, [x19]
 be8:	cbz	x0, bfc <grub_mod_fini+0x2c>
 bec:	nop
 bf0:	bl	a68 <grub_serial_unregister>
 bf4:	ldr	x0, [x19]
 bf8:	cbnz	x0, bf0 <grub_mod_fini+0x20>
 bfc:	ldr	x0, [x19, #152]
 c00:	ldr	x19, [sp, #16]
 c04:	ldp	x29, x30, [sp], #32
 c08:	b	0 <grub_unregister_extcmd>
 c0c:	nop
	...
